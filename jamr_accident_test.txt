# ::snt cover for third party fire and theft and bail bond in spain the balearics and the canary islands but exclusive of personal accident see below and contents cover
# ::tok cover for third party fire and theft and bail bond in spain the balearics and the canary islands but exclusive of personal accident see below and contents cover
# ::alignments 26-27|0.0.0.2.0.0+0.0.0.2.0 25-26|0.0.0.2 24-25|0.0.0.1 23-24|0.0.0 22-23|0.2.0 21-22|0.2 19-20|0.1 18-19|0 16-18|0.3.0.0+0.3.0.1+0.3.0+0.3 14-15|0.0 8-9|0.0.0.0.0 7-8|0.0.0.0.0.0 6-7|0.0.0.0.0.0.0 5-6|0.0.0.0 3-4|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:10.670
# ::node	0	contrast-01	18-19
# ::node	0.0	and	14-15
# ::node	0.0.0	see-01	23-24
# ::node	0.0.0.0	and	5-6
# ::node	0.0.0.0.0	bail-02	8-9
# ::node	0.0.0.0.0.0	and	7-8
# ::node	0.0.0.0.0.0.0	theft	6-7
# ::node	0.0.0.0.1	party	3-4
# ::node	0.0.0.1	below	24-25
# ::node	0.0.0.2	and	25-26
# ::node	0.0.0.2.0	thing	26-27
# ::node	0.0.0.2.0.0	contain-01	26-27
# ::node	0.1	exclusive	19-20
# ::node	0.2	personal	21-22
# ::node	0.2.0	accident	22-23
# ::node	0.3	country	16-18
# ::node	0.3.0	name	16-18
# ::node	0.3.0.0	"islands"	16-18
# ::node	0.3.0.1	"canary"	16-18
# ::root	0	contrast-01
# ::edge	accident	mod	personal	0.2.0	0.2	
# ::edge	and	op1	bail-02	0.0.0.0	0.0.0.0.0	
# ::edge	and	op1	see-01	0.0	0.0.0	
# ::edge	and	op1	see-01	0.0.0.2	0.0.0	
# ::edge	and	op1	theft	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	and	op2	bail-02	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	and	op2	thing	0.0.0.2	0.0.0.2.0	
# ::edge	contain-01	ARG1	thing	0.0.0.2.0.0	0.0.0.2.0	
# ::edge	contrast-01	ARG1	and	0	0.0	
# ::edge	contrast-01	ARG2	exclusive	0	0.1	
# ::edge	contrast-01	degree	personal	0	0.2	
# ::edge	contrast-01	instrument	country	0	0.3	
# ::edge	country	name	name	0.3	0.3.0	
# ::edge	name	op1	"islands"	0.3.0	0.3.0.0	
# ::edge	name	op2	"canary"	0.3.0	0.3.0.1	
# ::edge	party	part	and	0.0.0.0.1	0.0.0.0	
# ::edge	see-01	ARG1	and	0.0.0	0.0.0.0	
# ::edge	see-01	manner	below	0.0.0	0.0.0.1	
(c2 / contrast-01 
      :ARG1 (a3 / and 
            :op1 (s / see-01 
                  :ARG1 (a5 / and 
                        :op1 (b2 / bail-02 
                              :op-of (a4 / and 
                                    :op1 (t2 / theft))) 
                        :part-of (p2 / party)) 
                  :manner (b / below) 
                  :op-of (a / and 
                        :op1 (t / thing 
                              :ARG1-of (c / contain-01))))) 
      :ARG2 (e / exclusive) 
      :degree (p / personal 
            :mod-of (a2 / accident)) 
      :instrument (c3 / country 
            :name (n / name 
                  :op1 "islands" 
                  :op2 "canary")))

# ::snt did you have an accident or something
# ::tok did you have an accident or something
# ::alignments 6-7|0.1 5-6|0 4-5|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:10.716
# ::node	0	or	5-6
# ::node	0.0	accident	4-5
# ::node	0.0.0	you	1-2
# ::node	0.1	something	6-7
# ::root	0	or
# ::edge	accident	ARG0	you	0.0	0.0.0	
# ::edge	or	op1	accident	0	0.0	
# ::edge	or	op2	something	0	0.1	
(o / or 
      :op1 (a / accident 
            :ARG0 (y / you)) 
      :op2 (s / something))

# ::snt midland repayment protector will safeguard your mortgage repayments for up to 12 months if you are unable to work because of unemployment illness or an accident
# ::tok midland repayment protector will safeguard your mortgage repayments for up to 12 months if you are unable to work because of unemployment illness or an accident
# ::alignments 25-26|0.0.1.0 23-24|0.0.1 22-23|0.0 21-22|0.0.0.1+0.0.0 19-20|0 14-15|0.0.0.0 12-13|0.0.0.0.1.1+0.0.0.0.1 11-12|0.0.0.0.1.0 6-7|0.0.0.0.0.1 4-5|0.0.0.0.0 1-2|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:11.216
# ::node	0	cause-01	19-20
# ::node	0.0	illness	22-23
# ::node	0.0.0	employ-01	21-22
# ::node	0.0.0.0	you	14-15
# ::node	0.0.0.0.0	safeguard-01	4-5
# ::node	0.0.0.0.0.0	repay-01	1-2
# ::node	0.0.0.0.0.1	mortgage-01	6-7
# ::node	0.0.0.0.1	temporal-quantity	12-13
# ::node	0.0.0.0.1.0	12	11-12
# ::node	0.0.0.0.1.1	month	12-13
# ::node	0.0.0.1	-	21-22
# ::node	0.0.1	or	23-24
# ::node	0.0.1.0	accident	25-26
# ::root	0	cause-01
# ::edge	cause-01	ARG0	illness	0	0.0	
# ::edge	employ-01	ARG0	you	0.0.0	0.0.0.0	
# ::edge	employ-01	polarity	-	0.0.0	0.0.0.1	
# ::edge	illness	mod	employ-01	0.0	0.0.0	
# ::edge	mortgage-01	ARG2	safeguard-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	or	op1	illness	0.0.1	0.0	
# ::edge	or	op2	accident	0.0.1	0.0.1.0	
# ::edge	safeguard-01	ARG0	repay-01	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	safeguard-01	ARG1	you	0.0.0.0.0	0.0.0.0	
# ::edge	temporal-quantity	poss	you	0.0.0.0.1	0.0.0.0	
# ::edge	temporal-quantity	quant	12	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	temporal-quantity	unit	month	0.0.0.0.1	0.0.0.0.1.1	
(c / cause-01 
      :ARG0 (i / illness 
            :mod (e / employ-01 
                  :ARG0 (y / you 
                        :ARG1-of (s / safeguard-01 
                              :ARG0 (r / repay-01) 
                              :ARG2-of (m2 / mortgage-01)) 
                        :poss-of (t / temporal-quantity 
                              :quant 12 
                              :unit (m / month))) 
                  :polarity -) 
            :op-of (o / or 
                  :op1 (a / accident))))

# ::snt when police arrived jagdev who was found wandering unsteadily over the roundabout said whats the matter  what accident
# ::tok when police arrived jagdev who was found wandering unsteadily over the roundabout said whats the matter what accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:11.219
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt but what worries me is the european community proposals where we would be liable even if someone suffered an accident which was noones fault
# ::tok but what worries me is the european community proposals where we would be liable even if someone suffered an accident which was noones fault
# ::alignments 23-24|0.1.0.1.1.1.0 19-20|0.1.0.1.1.1 17-18|0.1.0.1.1 16-17|0.1.0.1.1.0 13-14|0.1.0.1 10-11|0.1.0.1.0 8-9|0.1.0.0+0.1.0 7-8|0.1.0.2 6-7|0.0.0.0+0.0.0+0.0 2-3|0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:11.776
# ::node	0	contrast-01	0-1
# ::node	0.0	continent	6-7
# ::node	0.0.0	name	6-7
# ::node	0.0.0.0	"Europe"	6-7
# ::node	0.1	worry-01	2-3
# ::node	0.1.0	thing	8-9
# ::node	0.1.0.0	propose-01	8-9
# ::node	0.1.0.1	liable-41	13-14
# ::node	0.1.0.1.0	we	10-11
# ::node	0.1.0.1.1	suffer-01	17-18
# ::node	0.1.0.1.1.0	someone	16-17
# ::node	0.1.0.1.1.1	accident	19-20
# ::node	0.1.0.1.1.1.0	fault-01	23-24
# ::node	0.1.0.2	community	7-8
# ::root	0	contrast-01
# ::edge	continent	name	name	0.0	0.0.0	
# ::edge	contrast-01	ARG1	continent	0	0.0	
# ::edge	contrast-01	ARG2	worry-01	0	0.1	
# ::edge	fault-01	ARG1	accident	0.1.0.1.1.1.0	0.1.0.1.1.1	
# ::edge	liable-41	ARG1	we	0.1.0.1	0.1.0.1.0	
# ::edge	liable-41	ARG2	thing	0.1.0.1	0.1.0	
# ::edge	liable-41	condition	suffer-01	0.1.0.1	0.1.0.1.1	
# ::edge	name	op1	"Europe"	0.0.0	0.0.0.0	
# ::edge	propose-01	ARG1	thing	0.1.0.0	0.1.0	
# ::edge	suffer-01	ARG0	someone	0.1.0.1.1	0.1.0.1.1.0	
# ::edge	suffer-01	ARG1	accident	0.1.0.1.1	0.1.0.1.1.1	
# ::edge	thing	beneficiary	community	0.1.0	0.1.0.2	
# ::edge	worry-01	ARG1	thing	0.1	0.1.0	
(c3 / contrast-01 
      :ARG1 (c2 / continent 
            :name (n / name 
                  :op1 "Europe")) 
      :ARG2 (w2 / worry-01 
            :ARG1 (t / thing 
                  :ARG1-of (p / propose-01) 
                  :ARG2-of (l / liable-41 
                        :ARG1 (w / we) 
                        :condition (s / suffer-01 
                              :ARG0 (s2 / someone) 
                              :ARG1 (a / accident 
                                    :ARG1-of (f / fault-01)))) 
                  :beneficiary (c / community))))

# ::snt as there have already been two accidents there barriers were suggested
# ::tok as there have already been two accidents there barriers were suggested
# ::alignments 10-11|0 8-9|0.1 6-7|0.0 5-6|0.0.0 3-4|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:11.926
# ::node	0	suggest-01	10-11
# ::node	0.0	accident	6-7
# ::node	0.0.0	2	5-6
# ::node	0.0.0.0	already	3-4
# ::node	0.1	barrier	8-9
# ::root	0	suggest-01
# ::edge	accident	quant	2	0.0	0.0.0	
# ::edge	already	mod	2	0.0.0.0	0.0.0	
# ::edge	suggest-01	ARG0	accident	0	0.0	
# ::edge	suggest-01	ARG1	barrier	0	0.1	
(s / suggest-01 
      :ARG0 (a / accident 
            :quant (2 / 2 
                  :mod-of (a2 / already))) 
      :ARG1 (b / barrier))

# ::snt this results from lower than expected north sea oil production which is taking longer than expected to recover from the serious accidents of the last two years
# ::tok this results from lower than expected north sea oil production which is taking longer than expected to recover from the serious accidents of the last two years
# ::alignments 26-27|0.0.1+0.0 25-26|0.0.0 24-25|0.1.1.0.0 21-22|0.1.1.0.1.0 20-21|0.1.1.0.1.0.0 17-18|0.1.1.0.1 15-16|0.1.1.0.1.1 13-14|0.1.1.0.1.1.0 9-10|0.1 8-9|0.1.0 7-8|0.1.0.0 6-7|0.1.0.0.0 5-6|0 3-4|0.1.1 1-2|0.1.1.0 0-1|0.1.1.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:12.269
# ::node	0	expect-01	5-6
# ::node	0.0	temporal-quantity	26-27
# ::node	0.0.0	2	25-26
# ::node	0.0.1	year	26-27
# ::node	0.1	produce-01	9-10
# ::node	0.1.0	oil	8-9
# ::node	0.1.0.0	sea	7-8
# ::node	0.1.0.0.0	north	6-7
# ::node	0.1.1	low	3-4
# ::node	0.1.1.0	result-01	1-2
# ::node	0.1.1.0.0	last	24-25
# ::node	0.1.1.0.1	recover-02	17-18
# ::node	0.1.1.0.1.0	accident	21-22
# ::node	0.1.1.0.1.0.0	serious	20-21
# ::node	0.1.1.0.1.1	expect-01	15-16
# ::node	0.1.1.0.1.1.0	long	13-14
# ::node	0.1.1.0.2	this	0-1
# ::root	0	expect-01
# ::edge	accident	mod	serious	0.1.1.0.1.0	0.1.1.0.1.0.0	
# ::edge	expect-01	ARG0	long	0.1.1.0.1.1	0.1.1.0.1.1.0	
# ::edge	expect-01	ARG0	temporal-quantity	0	0.0	
# ::edge	expect-01	ARG1	produce-01	0	0.1	
# ::edge	expect-01	ARG1	recover-02	0.1.1.0.1.1	0.1.1.0.1	
# ::edge	low	domain	produce-01	0.1.1	0.1	
# ::edge	oil	mod	sea	0.1.0	0.1.0.0	
# ::edge	produce-01	ARG1	oil	0.1	0.1.0	
# ::edge	recover-02	ARG0	result-01	0.1.1.0.1	0.1.1.0	
# ::edge	recover-02	ARG1	accident	0.1.1.0.1	0.1.1.0.1.0	
# ::edge	result-01	ARG0	last	0.1.1.0	0.1.1.0.0	
# ::edge	result-01	ARG1	low	0.1.1.0	0.1.1	
# ::edge	result-01	mod	this	0.1.1.0	0.1.1.0.2	
# ::edge	sea	mod	north	0.1.0.0	0.1.0.0.0	
# ::edge	temporal-quantity	quant	2	0.0	0.0.0	
# ::edge	temporal-quantity	unit	year	0.0	0.0.1	
(e2 / expect-01 
      :ARG0 (t / temporal-quantity 
            :quant 2 
            :unit (y / year)) 
      :ARG1 (p / produce-01 
            :ARG1 (o / oil 
                  :mod (s2 / sea 
                        :mod (n / north))) 
            :domain-of (l3 / low 
                  :ARG1-of (r2 / result-01 
                        :ARG0 (l / last) 
                        :ARG0-of (r / recover-02 
                              :ARG1 (a / accident 
                                    :mod (s / serious)) 
                              :ARG1-of (e / expect-01 
                                    :ARG0 (l2 / long))) 
                        :mod (t2 / this)))))

# ::snt although the apache is remarkably docile its accident record in the usa is not among the best of the light twins possibly because the type is so often employed in the training role
# ::tok although the apache is remarkably docile its accident record in the usa is not among the best of the light twins possibly because the type is so often employed in the training role
# ::alignments 32-33|0.0.2 31-32|0.0.2.0 28-29|0.0 27-28|0.0.3 26-27|0.0.3.0 24-25|0.0.1 22-23|0 21-22|0.2 19-20|0.1 14-15|0.0.0 11-12|0.0.2.0.0.1.0+0.0.2.0.0.1+0.0.2.0.0 8-9|0.0.2.0.0.0 7-8|0.0.2.0.0.0.0 4-5|0.0.2.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:12.683
# ::node	0	cause-01	22-23
# ::node	0.0	employ-01	28-29
# ::node	0.0.0	among	14-15
# ::node	0.0.1	type	24-25
# ::node	0.0.2	role	32-33
# ::node	0.0.2.0	train-01	31-32
# ::node	0.0.2.0.0	country	11-12
# ::node	0.0.2.0.0.0	record	8-9
# ::node	0.0.2.0.0.0.0	accident	7-8
# ::node	0.0.2.0.0.1	name	11-12
# ::node	0.0.2.0.0.1.0	"USA"	11-12
# ::node	0.0.2.0.1	remarkable	4-5
# ::node	0.0.3	often	27-28
# ::node	0.0.3.0	so	26-27
# ::node	0.1	light	19-20
# ::node	0.2	possible	21-22
# ::root	0	cause-01
# ::edge	cause-01	ARG0	employ-01	0	0.0	
# ::edge	cause-01	ARG1	light	0	0.1	
# ::edge	cause-01	mod	possible	0	0.2	
# ::edge	country	name	name	0.0.2.0.0	0.0.2.0.0.1	
# ::edge	employ-01	ARG0	among	0.0	0.0.0	
# ::edge	employ-01	ARG1	type	0.0	0.0.1	
# ::edge	employ-01	ARG2	role	0.0	0.0.2	
# ::edge	employ-01	frequency	often	0.0	0.0.3	
# ::edge	name	op1	"USA"	0.0.2.0.0.1	0.0.2.0.0.1.0	
# ::edge	often	degree	so	0.0.3	0.0.3.0	
# ::edge	record	location	country	0.0.2.0.0.0	0.0.2.0.0	
# ::edge	record	mod	accident	0.0.2.0.0.0	0.0.2.0.0.0.0	
# ::edge	role	mod	train-01	0.0.2	0.0.2.0	
# ::edge	train-01	ARG0	country	0.0.2.0	0.0.2.0.0	
# ::edge	train-01	ARG1	remarkable	0.0.2.0	0.0.2.0.1	
(c / cause-01 
      :ARG0 (e / employ-01 
            :ARG0 (a / among) 
            :ARG1 (t2 / type) 
            :ARG2 (r / role 
                  :mod (t / train-01 
                        :ARG0 (c2 / country 
                              :location-of (r2 / record 
                                    :mod (a2 / accident)) 
                              :name (n / name 
                                    :op1 "USA")) 
                        :ARG1 (r3 / remarkable))) 
            :frequency (o / often 
                  :degree (s / so))) 
      :ARG1 (l / light) 
      :mod (p / possible))

# ::snt davis had been given little chance of surviving the accident in which he was struck by a car outside a suburban bar early on saturday morning, the hospital spokesman said that at the familys request daviss body remains connected to lifesupport systems to keep his organs which were not injured in the accident viable for use in transplants
# ::tok davis had been given little chance of surviving the accident in which he was struck by a car outside a suburban bar early on saturday morning , the hospital spokesman said that at the familys request daviss body remains connected to lifesupport systems to keep his organs which were not injured in the accident viable for use in transplants
# ::alignments 56-57|0.0.0.0.0 54-55|0.0.0.0.0.0 53-54|0.1.0.0.0.1 50-51|0.1.0.0.0 46-47|0.1.0.0.0.0 42-43|0.1.0.0.0.0.0 39-40|0.0.1 38-39|0.0 37-38|0.0.0 35-36|0.0.0.0 30-31|0 29-30|0.0.1.0.0.0+0.0.1.0.0 28-29|0.0.1.0 25-26|0.1.0.0.1.1 24-25|0.1.0.0.1.0.0.0.0 22-23|0.1.0.0.1.0.0.0.2 21-22|0.1.0.0.1.0.0.0 20-21|0.1.0.0.1.0.0.0.1 18-19|0.1.0.0.1.0.0 17-18|0.1.0.0.1.0 14-15|0.1.0.0.1 12-13|0.1.0.0 9-10|0.1.0 7-8|0.1 5-6|0.1.1 4-5|0.1.1.1 3-4|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:14.551
# ::node	0	say-01	30-31
# ::node	0.0	remain-01	38-39
# ::node	0.0.0	body	37-38
# ::node	0.0.0.0	request-01	35-36
# ::node	0.0.0.0.0	use-01	56-57
# ::node	0.0.0.0.0.0	viable	54-55
# ::node	0.0.1	connect-01	39-40
# ::node	0.0.1.0	hospital	28-29
# ::node	0.0.1.0.0	have-org-role-91	29-30
# ::node	0.0.1.0.0.0	spokesman	29-30
# ::node	0.1	survive-01	7-8
# ::node	0.1.0	accident	9-10
# ::node	0.1.0.0	he	12-13
# ::node	0.1.0.0.0	injure-01	50-51
# ::node	0.1.0.0.0.0	organ	46-47
# ::node	0.1.0.0.0.0.0	system	42-43
# ::node	0.1.0.0.0.1	accident	53-54
# ::node	0.1.0.0.1	strike-01	14-15
# ::node	0.1.0.0.1.0	car	17-18
# ::node	0.1.0.0.1.0.0	outside	18-19
# ::node	0.1.0.0.1.0.0.0	bar-01	21-22
# ::node	0.1.0.0.1.0.0.0.0	saturday	24-25
# ::node	0.1.0.0.1.0.0.0.1	suburb	20-21
# ::node	0.1.0.0.1.0.0.0.2	early	22-23
# ::node	0.1.0.0.1.1	morning	25-26
# ::node	0.1.1	chance	5-6
# ::node	0.1.1.0	give-01	3-4
# ::node	0.1.1.1	little	4-5
# ::root	0	say-01
# ::edge	accident	example	he	0.1.0	0.1.0.0	
# ::edge	bar-01	ARG1	saturday	0.1.0.0.1.0.0.0	0.1.0.0.1.0.0.0.0	
# ::edge	bar-01	location	suburb	0.1.0.0.1.0.0.0	0.1.0.0.1.0.0.0.1	
# ::edge	bar-01	time	early	0.1.0.0.1.0.0.0	0.1.0.0.1.0.0.0.2	
# ::edge	car	location	outside	0.1.0.0.1.0	0.1.0.0.1.0.0	
# ::edge	chance	mod	little	0.1.1	0.1.1.1	
# ::edge	chance	mod	survive-01	0.1.1	0.1	
# ::edge	connect-01	ARG1	hospital	0.0.1	0.0.1.0	
# ::edge	give-01	ARG1	chance	0.1.1.0	0.1.1	
# ::edge	have-org-role-91	ARG1	hospital	0.0.1.0.0	0.0.1.0	
# ::edge	have-org-role-91	ARG2	spokesman	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	injure-01	ARG0	he	0.1.0.0.0	0.1.0.0	
# ::edge	injure-01	ARG1	organ	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	injure-01	ARG2	accident	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	organ	poss	system	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	outside	op1	bar-01	0.1.0.0.1.0.0	0.1.0.0.1.0.0.0	
# ::edge	remain-01	ARG1	body	0.0	0.0.0	
# ::edge	remain-01	ARG3	connect-01	0.0	0.0.1	
# ::edge	request-01	ARG1	body	0.0.0.0	0.0.0	
# ::edge	say-01	ARG1	remain-01	0	0.0	
# ::edge	strike-01	ARG0	he	0.1.0.0.1	0.1.0.0	
# ::edge	strike-01	ARG1	car	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	strike-01	time	morning	0.1.0.0.1	0.1.0.0.1.1	
# ::edge	survive-01	ARG1	accident	0.1	0.1.0	
# ::edge	survive-01	condition	say-01	0.1	0	
# ::edge	use-01	ARG1	request-01	0.0.0.0.0	0.0.0.0	
# ::edge	viable	prep-in	use-01	0.0.0.0.0.0	0.0.0.0.0	
(s2 / say-01 
      :ARG1 (r / remain-01 
            :ARG1 (b / body 
                  :ARG1-of (r2 / request-01 
                        :ARG1-of (u / use-01 
                              :prep-in-of (v / viable)))) 
            :ARG3 (c / connect-01 
                  :ARG1 (h2 / hospital 
                        :ARG1-of (h / have-org-role-91 
                              :ARG2 (s3 / spokesman))))) 
      :condition-of (s7 / survive-01 
            :ARG1 (a2 / accident 
                  :example (h3 / he 
                        :ARG0-of (i / injure-01 
                              :ARG1 (o / organ 
                                    :poss (s / system)) 
                              :ARG2 (a / accident)) 
                        :ARG0-of (s6 / strike-01 
                              :ARG1 (c2 / car 
                                    :location (o2 / outside 
                                          :op1 (b2 / bar-01 
                                                :ARG1 (s4 / saturday) 
                                                :location (s5 / suburb) 
                                                :time (e / early)))) 
                              :time (m / morning)))) 
            :mod-of (c3 / chance 
                  :ARG1-of (g / give-01) 
                  :mod (l / little))))

# ::snt with the accident plan camb had given him on his lap wexford looked up and said
# ::tok with the accident plan camb had given him on his lap wexford looked up and said
# ::alignments 15-16|0.1.1 14-15|0.1 12-13|0.1.0 10-11|0.1.0.0 6-7|0 3-4|0.0.0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:14.603
# ::node	0	give-01	6-7
# ::node	0.0	accident	2-3
# ::node	0.0.0	plan-01	3-4
# ::node	0.1	and	14-15
# ::node	0.1.0	look-01	12-13
# ::node	0.1.0.0	lap	10-11
# ::node	0.1.1	say-01	15-16
# ::root	0	give-01
# ::edge	and	op1	look-01	0.1	0.1.0	
# ::edge	and	op2	say-01	0.1	0.1.1	
# ::edge	give-01	ARG0	accident	0	0.0	
# ::edge	give-01	ARG1	and	0	0.1	
# ::edge	look-01	ARG1	lap	0.1.0	0.1.0.0	
# ::edge	plan-01	ARG1	accident	0.0.0	0.0	
(g / give-01 
      :ARG0 (a2 / accident 
            :ARG1-of (p / plan-01)) 
      :ARG1 (a / and 
            :op1 (l / look-01 
                  :ARG1 (l2 / lap)) 
            :op2 (s / say-01)))

# ::snt it never occurred to me that if i had an accident and survived my life insurance would pay me nothing,  please note that whilst the above are not actual statements made by a serious accident victim they have been selected because we believe they give a fair representation of the kind of problems which may occur after an accident
# ::tok it never occurred to me that if i had an accident and survived my life insurance would pay me nothing , please note that whilst the above are not actual statements made by a serious accident victim they have been selected because we believe they give a fair representation of the kind of problems which may occur after an accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:14.606
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt one of the most frequent difficulties encountered in mass accident cases relates to proof of causality
# ::tok one of the most frequent difficulties encountered in mass accident cases relates to proof of causality
# ::alignments 15-16|0.0.0.1 13-14|0.0.0.0 11-12|0.0.0 10-11|0.1 9-10|0.1.0 8-9|0.1.0.0 6-7|0 5-6|0.0 4-5|0.0.1 3-4|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:14.752
# ::node	0	encounter-01	6-7
# ::node	0.0	difficulty	5-6
# ::node	0.0.0	relate-01	11-12
# ::node	0.0.0.0	proof	13-14
# ::node	0.0.0.1	causality	15-16
# ::node	0.0.1	frequent	4-5
# ::node	0.0.1.0	most	3-4
# ::node	0.1	case	10-11
# ::node	0.1.0	accident	9-10
# ::node	0.1.0.0	mass	8-9
# ::root	0	encounter-01
# ::edge	accident	degree	mass	0.1.0	0.1.0.0	
# ::edge	case	mod	accident	0.1	0.1.0	
# ::edge	difficulty	frequency	frequent	0.0	0.0.1	
# ::edge	encounter-01	ARG1	difficulty	0	0.0	
# ::edge	encounter-01	time	case	0	0.1	
# ::edge	frequent	degree	most	0.0.1	0.0.1.0	
# ::edge	relate-01	ARG0	difficulty	0.0.0	0.0	
# ::edge	relate-01	ARG1	proof	0.0.0	0.0.0.0	
# ::edge	relate-01	ARG3	causality	0.0.0	0.0.0.1	
(e / encounter-01 
      :ARG1 (d / difficulty 
            :ARG0-of (r / relate-01 
                  :ARG1 (p / proof) 
                  :ARG3 (c / causality)) 
            :frequency (f / frequent 
                  :degree (m2 / most))) 
      :time (c2 / case 
            :mod (a / accident 
                  :degree (m / mass))))

# ::snt it is amazing that sunday silence is around at all because he almost died as a foal and soon afterwards survived a road accident that ended the racing hopes of two other stablemates
# ::tok it is amazing that sunday silence is around at all because he almost died as a foal and soon afterwards survived a road accident that ended the racing hopes of two other stablemates
# ::alignments 31-32|0.1 30-31|0.0.1.0.0.0.0.0.0 28-29|0.0.1.0.0.0.0 27-28|0.0.1.0.0.0.0.1 25-26|0.0.1.0.0.0 23-24|0.0.1.0.0 22-23|0.0.1.0.0.1 20-21|0.0.1.0 19-20|0.0.1.0.3 18-19|0.0.1.0.2 17-18|0.0.1.0.1 13-14|0.0 12-13|0.0.2 11-12|0.0.1 10-11|0 9-10|0.0.0 7-8|0.0.0.0 5-6|0.0.1.0.0.0.0.0 4-5|0.0.1.0.0.0.0.0.1 2-3|0.0.1.0.0.0.0.0.2 0-1|0.0.1.0.0.0.0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:15.391
# ::node	0	cause-01	10-11
# ::node	0.0	die-01	13-14
# ::node	0.0.0	all	9-10
# ::node	0.0.0.0	around	7-8
# ::node	0.0.1	he	11-12
# ::node	0.0.1.0	survive-01	20-21
# ::node	0.0.1.0.0	accident	23-24
# ::node	0.0.1.0.0.0	end-01	25-26
# ::node	0.0.1.0.0.0.0	hope-01	28-29
# ::node	0.0.1.0.0.0.0.0	silence-01	5-6
# ::node	0.0.1.0.0.0.0.0.0	2	30-31
# ::node	0.0.1.0.0.0.0.0.1	sunday	4-5
# ::node	0.0.1.0.0.0.0.0.2	amazing	2-3
# ::node	0.0.1.0.0.0.0.0.2.0	it	0-1
# ::node	0.0.1.0.0.0.0.1	race-01	27-28
# ::node	0.0.1.0.0.1	road	22-23
# ::node	0.0.1.0.1	and	17-18
# ::node	0.0.1.0.2	soon	18-19
# ::node	0.0.1.0.3	afterwards	19-20
# ::node	0.0.2	almost	12-13
# ::node	0.1	other	31-32
# ::root	0	cause-01
# ::edge	accident	location	road	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	amazing	domain	it	0.0.1.0.0.0.0.0.2	0.0.1.0.0.0.0.0.2.0	
# ::edge	amazing	topic	silence-01	0.0.1.0.0.0.0.0.2	0.0.1.0.0.0.0.0	
# ::edge	and	op1	survive-01	0.0.1.0.1	0.0.1.0	
# ::edge	around	name	all	0.0.0.0	0.0.0	
# ::edge	cause-01	ARG0	die-01	0	0.0	
# ::edge	die-01	ARG0	all	0.0	0.0.0	
# ::edge	die-01	ARG1	he	0.0	0.0.1	
# ::edge	die-01	mod	almost	0.0	0.0.2	
# ::edge	end-01	ARG0	accident	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	end-01	ARG1	hope-01	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	hope-01	ARG1	silence-01	0.0.1.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	other	domain	cause-01	0.1	0	
# ::edge	race-01	ARG1	hope-01	0.0.1.0.0.0.0.1	0.0.1.0.0.0.0	
# ::edge	silence-01	ARG0	2	0.0.1.0.0.0.0.0	0.0.1.0.0.0.0.0.0	
# ::edge	silence-01	ARG1	sunday	0.0.1.0.0.0.0.0	0.0.1.0.0.0.0.0.1	
# ::edge	survive-01	ARG0	he	0.0.1.0	0.0.1	
# ::edge	survive-01	ARG1	accident	0.0.1.0	0.0.1.0.0	
# ::edge	survive-01	time	afterwards	0.0.1.0	0.0.1.0.3	
# ::edge	survive-01	time	soon	0.0.1.0	0.0.1.0.2	
(c / cause-01 
      :ARG0 (d / die-01 
            :ARG0 (a5 / all 
                  :name-of (a6 / around)) 
            :ARG1 (h2 / he 
                  :ARG0-of (s / survive-01 
                        :ARG1 (a / accident 
                              :ARG0-of (e / end-01 
                                    :ARG1 (h / hope-01 
                                          :ARG1 (s3 / silence-01 
                                                :ARG0 2 
                                                :ARG1 (s4 / sunday) 
                                                :topic-of (a7 / amazing 
                                                      :domain (i / it))) 
                                          :ARG1-of (r / race-01))) 
                              :location (r2 / road)) 
                        :op-of (a3 / and) 
                        :time (s2 / soon) 
                        :time (a2 / afterwards))) 
            :mod (a4 / almost)) 
      :domain-of (o / other))

# ::snt frederick davidson 55 who brought the proceedings on behalf of his son was running a successful haulage business where the boy was working at the time of the accident
# ::tok frederick davidson 55 who brought the proceedings on behalf of his son was running a successful haulage business where the boy was working at the time of the accident
# ::alignments 28-29|0.1.0.2 25-26|0.1.0.1 22-23|0.1.0 20-21|0.1.0.0 17-18|0.1 15-16|0 11-12|0.1.0.1.0.1+0.1.0.1.0 6-7|0.0 2-3|0.1.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:15.706
# ::node	0	succeed-01	15-16
# ::node	0.0	proceeding	6-7
# ::node	0.1	business	17-18
# ::node	0.1.0	work-01	22-23
# ::node	0.1.0.0	boy	20-21
# ::node	0.1.0.1	time	25-26
# ::node	0.1.0.1.0	have-rel-role-91	11-12
# ::node	0.1.0.1.0.0	55	2-3
# ::node	0.1.0.1.0.1	son	11-12
# ::node	0.1.0.2	accident	28-29
# ::root	0	succeed-01
# ::edge	have-rel-role-91	ARG1	55	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	have-rel-role-91	ARG2	son	0.1.0.1.0	0.1.0.1.0.1	
# ::edge	have-rel-role-91	time	time	0.1.0.1.0	0.1.0.1	
# ::edge	succeed-01	ARG0	proceeding	0	0.0	
# ::edge	succeed-01	ARG1	business	0	0.1	
# ::edge	work-01	ARG0	boy	0.1.0	0.1.0.0	
# ::edge	work-01	ARG1	business	0.1.0	0.1	
# ::edge	work-01	time	accident	0.1.0	0.1.0.2	
# ::edge	work-01	time	time	0.1.0	0.1.0.1	
(s / succeed-01 
      :ARG0 (p / proceeding) 
      :ARG1 (b2 / business 
            :ARG1-of (w / work-01 
                  :ARG0 (b / boy) 
                  :time (t / time 
                        :time-of (h / have-rel-role-91 
                              :ARG1 55 
                              :ARG2 (s2 / son))) 
                  :time (a / accident))))

# ::snt there have been ten major accidents at nuclear power plants since the first at windscale in 1957
# ::tok there have been ten major accidents at nuclear power plants since the first at windscale in 1957
# ::alignments 16-17|0.1.0.0.0+0.1.0.0 10-11|0.1.0 9-10|0.1 8-9|0.1.1 7-8|0.1.1.0 5-6|0 4-5|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:15.757
# ::node	0	accident	5-6
# ::node	0.0	major	4-5
# ::node	0.1	plant	9-10
# ::node	0.1.0	since	10-11
# ::node	0.1.0.0	date-entity	16-17
# ::node	0.1.0.0.0	1957	16-17
# ::node	0.1.1	power	8-9
# ::node	0.1.1.0	nucleus	7-8
# ::root	0	accident
# ::edge	accident	mod	major	0	0.0	
# ::edge	accident	mod	plant	0	0.1	
# ::edge	date-entity	year	1957	0.1.0.0	0.1.0.0.0	
# ::edge	plant	location	since	0.1	0.1.0	
# ::edge	plant	mod	power	0.1	0.1.1	
# ::edge	power	mod	nucleus	0.1.1	0.1.1.0	
# ::edge	since	op1	date-entity	0.1.0	0.1.0.0	
(a / accident 
      :mod (m / major) 
      :mod (p / plant 
            :location (s / since 
                  :op1 (d / date-entity 
                        :year 1957)) 
            :mod (p2 / power 
                  :mod (n / nucleus))))

# ::snt it was a complete accident daniel i swear colin babbled as they quit the building
# ::tok it was a complete accident daniel i swear colin babbled as they quit the building
# ::alignments 14-15|0.2.1 12-13|0.2 11-12|0.2.0 7-8|0 6-7|0.0 4-5|0.1 3-4|0.2.1.0 0-1|0.2.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:16.083
# ::node	0	swear-02	7-8
# ::node	0.0	i	6-7
# ::node	0.1	accident	4-5
# ::node	0.2	quit-01	12-13
# ::node	0.2.0	they	11-12
# ::node	0.2.1	build-01	14-15
# ::node	0.2.1.0	complete	3-4
# ::node	0.2.1.1	it	0-1
# ::root	0	swear-02
# ::edge	build-01	ARG0	complete	0.2.1	0.2.1.0	
# ::edge	build-01	ARG1	it	0.2.1	0.2.1.1	
# ::edge	quit-01	ARG0	they	0.2	0.2.0	
# ::edge	quit-01	ARG1	build-01	0.2	0.2.1	
# ::edge	swear-02	ARG0	i	0	0.0	
# ::edge	swear-02	ARG1	accident	0	0.1	
# ::edge	swear-02	ARG2	quit-01	0	0.2	
(s / swear-02 
      :ARG0 (i / i) 
      :ARG1 (a / accident) 
      :ARG2 (q / quit-01 
            :ARG0 (t / they) 
            :ARG1 (b / build-01 
                  :ARG0 (c / complete) 
                  :ARG1 (i2 / it))))

# ::snt the skip driver was completely vindicated by the judge who said the sole responsibility for this accident lies with the plaintiff mr elmer
# ::tok the skip driver was completely vindicated by the judge who said the sole responsibility for this accident lies with the plaintiff mr elmer
# ::alignments 17-18|0.1 16-17|0.1.0.1 15-16|0.1.0.1.0 13-14|0.1.0 12-13|0.1.0.2 10-11|0 8-9|0.0 4-5|0.1.0.0 2-3|0.0.0.0+0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:16.170
# ::node	0	say-01	10-11
# ::node	0.0	judge-01	8-9
# ::node	0.0.0	person	2-3
# ::node	0.0.0.0	drive-01	2-3
# ::node	0.1	lie-01	17-18
# ::node	0.1.0	responsible-41	13-14
# ::node	0.1.0.0	complete	4-5
# ::node	0.1.0.1	accident	16-17
# ::node	0.1.0.1.0	this	15-16
# ::node	0.1.0.2	sole	12-13
# ::root	0	say-01
# ::edge	accident	mod	this	0.1.0.1	0.1.0.1.0	
# ::edge	drive-01	ARG0	person	0.0.0.0	0.0.0	
# ::edge	judge-01	ARG1	person	0.0	0.0.0	
# ::edge	lie-01	ARG1	responsible-41	0.1	0.1.0	
# ::edge	responsible-41	ARG1	complete	0.1.0	0.1.0.0	
# ::edge	responsible-41	ARG2	accident	0.1.0	0.1.0.1	
# ::edge	responsible-41	ARG3	sole	0.1.0	0.1.0.2	
# ::edge	say-01	ARG0	judge-01	0	0.0	
# ::edge	say-01	ARG1	lie-01	0	0.1	
(s2 / say-01 
      :ARG0 (j / judge-01 
            :ARG1 (p / person 
                  :ARG0-of (d / drive-01))) 
      :ARG1 (l / lie-01 
            :ARG1 (r / responsible-41 
                  :ARG1 (c / complete) 
                  :ARG2 (a / accident 
                        :mod (t / this)) 
                  :ARG3 (s / sole))))

# ::snt he comes back proudly twirling his moustache and in halting english tells her that no news of a sailing accident has been reported to the lifeboat people
# ::tok he comes back proudly twirling his moustache and in halting english tells her that no news of a sailing accident has been reported to the lifeboat people
# ::alignments 22-23|0.1 19-20|0.1.1.0 18-19|0.1.1.0.0 15-16|0.1.1 14-15|0.1.2 11-12|0 10-11|0.0.0.0+0.0.0+0.0 9-10|0.2 7-8|0.2.0 2-3|0.1.0 0-1|0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:16.267
# ::node	0	tell-01	11-12
# ::node	0.0	language	10-11
# ::node	0.0.0	name	10-11
# ::node	0.0.0.0	"English"	10-11
# ::node	0.1	report-01	22-23
# ::node	0.1.0	back	2-3
# ::node	0.1.1	news	15-16
# ::node	0.1.1.0	accident	19-20
# ::node	0.1.1.0.0	sail-01	18-19
# ::node	0.1.2	-	14-15
# ::node	0.2	halt-01	9-10
# ::node	0.2.0	and	7-8
# ::node	0.2.0.0	he	0-1
# ::root	0	tell-01
# ::edge	accident	location	sail-01	0.1.1.0	0.1.1.0.0	
# ::edge	and	op1	he	0.2.0	0.2.0.0	
# ::edge	and	op2	halt-01	0.2.0	0.2	
# ::edge	halt-01	ARG1	tell-01	0.2	0	
# ::edge	language	name	name	0.0	0.0.0	
# ::edge	name	op1	"English"	0.0.0	0.0.0.0	
# ::edge	news	location	accident	0.1.1	0.1.1.0	
# ::edge	report-01	ARG0	back	0.1	0.1.0	
# ::edge	report-01	ARG1	news	0.1	0.1.1	
# ::edge	report-01	polarity	-	0.1	0.1.2	
# ::edge	tell-01	ARG0	language	0	0.0	
# ::edge	tell-01	ARG1	report-01	0	0.1	
(t / tell-01 
      :ARG0 (l / language 
            :name (n2 / name 
                  :op1 "English")) 
      :ARG1 (r / report-01 
            :ARG0 (b / back) 
            :ARG1 (n / news 
                  :location (a / accident 
                        :location (s / sail-01))) 
            :polarity (- / -)) 
      :ARG1-of (h / halt-01 
            :op-of (a2 / and 
                  :op1 (h2 / he))))

# ::snt janne gustavsson the swedish whitbread round the world yachtsman who was injured in a motorcycle accident in punta del este at the weekend was declared brain dead by doctors yesterday
# ::tok janne gustavsson the swedish whitbread round the world yachtsman who was injured in a motorcycle accident in punta del este at the weekend was declared brain dead by doctors yesterday
# ::alignments 29-30|0.2.0.0.1 28-29|0.2.0.0.1.0 25-26|0.2.0.0.0 24-25|0.2.0.0 22-23|0.3 17-20|0.2.0.1.0+0.2.0.1.1+0.2.0.1.2+0.2.0.1+0.2.0 15-16|0.2 11-12|0 7-8|0.0 5-6|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:16.576
# ::node	0	injure-01	11-12
# ::node	0.0	world	7-8
# ::node	0.1	round	5-6
# ::node	0.2	accident	15-16
# ::node	0.2.0	country	17-20
# ::node	0.2.0.0	declare-02	24-25
# ::node	0.2.0.0.0	brain	25-26
# ::node	0.2.0.0.1	yesterday	29-30
# ::node	0.2.0.0.1.0	doctor	28-29
# ::node	0.2.0.1	name	17-20
# ::node	0.2.0.1.0	"este"	17-20
# ::node	0.2.0.1.1	"del"	17-20
# ::node	0.2.0.1.2	"punta"	17-20
# ::node	0.3	weekend	22-23
# ::root	0	injure-01
# ::edge	accident	location	country	0.2	0.2.0	
# ::edge	country	name	name	0.2.0	0.2.0.1	
# ::edge	declare-02	ARG0	country	0.2.0.0	0.2.0	
# ::edge	declare-02	ARG1	brain	0.2.0.0	0.2.0.0.0	
# ::edge	declare-02	time	yesterday	0.2.0.0	0.2.0.0.1	
# ::edge	injure-01	ARG0	world	0	0.0	
# ::edge	injure-01	ARG1	round	0	0.1	
# ::edge	injure-01	ARG2	accident	0	0.2	
# ::edge	injure-01	time	weekend	0	0.3	
# ::edge	name	op1	"este"	0.2.0.1	0.2.0.1.0	
# ::edge	name	op2	"del"	0.2.0.1	0.2.0.1.1	
# ::edge	name	op3	"punta"	0.2.0.1	0.2.0.1.2	
# ::edge	yesterday	mod	doctor	0.2.0.0.1	0.2.0.0.1.0	
(i / injure-01 
      :ARG0 (w2 / world) 
      :ARG1 (r / round) 
      :ARG2 (a / accident 
            :location (c / country 
                  :ARG0-of (d2 / declare-02 
                        :ARG1 (b / brain) 
                        :time (y / yesterday 
                              :mod (d / doctor))) 
                  :name (n / name 
                        :op1 "este" 
                        :op2 "del" 
                        :op3 "punta"))) 
      :time (w / weekend))

# ::snt to cut pedestrian accidents mr peverelcooper said the county was providing road safety teaching programmes to teachers and for motorcyclists who were involved in fewer accidents last year the county is setting up a training association and promoting training, for motorists he said the county was encouraging advanced driving courses promoting alcoholfree driving running hire schemes for car baby seats and developing road accident prevention schemes, earlier this year county councillors who hope to reduce road accidents in the county by a third by the year 2000 agreed a big boost in money to be spent on road safety measures in the coming year
# ::tok to cut pedestrian accidents mr peverelcooper said the county was providing road safety teaching programmes to teachers and for motorcyclists who were involved in fewer accidents last year the county is setting up a training association and promoting training , for motorists he said the county was encouraging advanced driving courses promoting alcoholfree driving running hire schemes for car baby seats and developing road accident prevention schemes , earlier this year county councillors who hope to reduce road accidents in the county by a third by the year 2000 agreed a big boost in money to be spent on road safety measures in the coming year
# ::alignments 105-106|0.1.1.0.0.2.1.0.0.1.1.3 101-102|0.1.1.0.0.2.1.0.0.1.1.1 100-101|0.1.1.0.0.2.1.0.0.1.1.0.0.0 99-100|0.1.1.0.0.2.1.0.0.1.1.0.0 97-98|0.1.1.0.0.2.1.0.0.1.1 94-95|0.1.1.0.0.2.1.0.0.1.1.0 92-93|0.1.1.0.0.2.1.0.0.1.1.2.0 91-92|0.1.1.0.0.2.1.0.0.1.1.2.0.1 89-90|0.1.1.0.0.2.1.0.0.1.1.2 88-89|0.1.1.0.0.2.1.2.0+0.1.1.0.0.2.1.2 87-88|0.1.1.0.0.2.1.0.0.1.1.2.0.0 81-82|0.1.1.0.0.2.1.0.0.0.0 78-79|0.1.1.0.0.2.1.0.0.0 77-78|0.1.1.0.0.2.1.0.0.0.1 76-77|0.1.1.0.0.2.1.0.0 74-75|0.1.1.0.0.2.1.0.0.1 71-72|0.1.1.0.0.2.1.0.0.1.0 70-71|0.1.1.0.0.2.1.0 69-70|0.1.1.0.0.2.1.1 68-69|0.1.1.0.0.2.1 66-67|0.1.1.0.0.2.0 65-66|0.1.1.0.0.2.0.0 64-65|0.1.1.0.0.2.0.0.0 63-64|0.1.1.0.0.2.0.0.0.0 62-63|0.1.1.0.0.2 61-62|0.1.1.0.0 60-61|0.1.1.0.0.0.0.0 59-60|0.1.1.0.0.1.0 58-59|0.1.1.0.0.0.0.1 56-57|0.1.1.0.0.0.0 55-56|0.1.1.0.0.0 53-54|0.1.1.0.0.1 51-52|0.1.1.0 50-51|0.1.1 49-50|0.1.1.0.1 48-49|0.1.1.1 47-48|0.1 45-46|0.1.0 43-44|0 42-43|0.0 38-39|0.2.0.2 37-38|0.2.0.2.0 36-37|0.2.0.2.0.1 35-36|0.2.0.2.0.0.0.0 34-35|0.2.0.2.0.0.0.0.0 31-32|0.2.0.2.0.0.0 29-30|0.2.0.2.0.0 27-28|0.2.2 26-27|0.2.2.0 25-26|0.2.1 24-25|0.2.1.0 22-23|0.2 17-18|0.2.0 16-17|0.2.0.1.0+0.2.0.1 14-15|0.2.0.1.1.1 13-14|0.2.0.1.1.1.0 12-13|0.2.0.1.1.0.0 11-12|0.2.0.1.1.0.0.0 10-11|0.2.0.1.1 8-9|0.2.0.1.1.0 6-7|0.2.0.1.1.2 3-4|0.2.0.0 2-3|0.2.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:27.001
# ::node	0	say-01	43-44
# ::node	0.0	he	42-43
# ::node	0.1	encourage-01	47-48
# ::node	0.1.0	county	45-46
# ::node	0.1.1	course	50-51
# ::node	0.1.1.0	promote-02	51-52
# ::node	0.1.1.0.0	and	61-62
# ::node	0.1.1.0.0.0	hire-01	55-56
# ::node	0.1.1.0.0.0.0	scheme-01	56-57
# ::node	0.1.1.0.0.0.0.0	seat	60-61
# ::node	0.1.1.0.0.0.0.1	car	58-59
# ::node	0.1.1.0.0.1	drive-01	53-54
# ::node	0.1.1.0.0.1.0	baby	59-60
# ::node	0.1.1.0.0.2	develop-02	62-63
# ::node	0.1.1.0.0.2.0	scheme-01	66-67
# ::node	0.1.1.0.0.2.0.0	prevent-01	65-66
# ::node	0.1.1.0.0.2.0.0.0	accident	64-65
# ::node	0.1.1.0.0.2.0.0.0.0	road	63-64
# ::node	0.1.1.0.0.2.1	early	68-69
# ::node	0.1.1.0.0.2.1.0	year	70-71
# ::node	0.1.1.0.0.2.1.0.0	reduce-01	76-77
# ::node	0.1.1.0.0.2.1.0.0.0	accident	78-79
# ::node	0.1.1.0.0.2.1.0.0.0.0	county	81-82
# ::node	0.1.1.0.0.2.1.0.0.0.1	road	77-78
# ::node	0.1.1.0.0.2.1.0.0.1	hope-01	74-75
# ::node	0.1.1.0.0.2.1.0.0.1.0	county	71-72
# ::node	0.1.1.0.0.2.1.0.0.1.1	spend-01	97-98
# ::node	0.1.1.0.0.2.1.0.0.1.1.0	money	94-95
# ::node	0.1.1.0.0.2.1.0.0.1.1.0.0	road	99-100
# ::node	0.1.1.0.0.2.1.0.0.1.1.0.0.0	safe-41	100-101
# ::node	0.1.1.0.0.2.1.0.0.1.1.1	measure	101-102
# ::node	0.1.1.0.0.2.1.0.0.1.1.2	agree-01	89-90
# ::node	0.1.1.0.0.2.1.0.0.1.1.2.0	boost-01	92-93
# ::node	0.1.1.0.0.2.1.0.0.1.1.2.0.0	year	87-88
# ::node	0.1.1.0.0.2.1.0.0.1.1.2.0.1	big	91-92
# ::node	0.1.1.0.0.2.1.0.0.1.1.3	year	105-106
# ::node	0.1.1.0.0.2.1.1	this	69-70
# ::node	0.1.1.0.0.2.1.2	date-entity	88-89
# ::node	0.1.1.0.0.2.1.2.0	2000	88-89
# ::node	0.1.1.0.1	drive-01	49-50
# ::node	0.1.1.1	advance-01	48-49
# ::node	0.2	involve-01	22-23
# ::node	0.2.0	and	17-18
# ::node	0.2.0.0	accident	3-4
# ::node	0.2.0.0.0	pedestrian	2-3
# ::node	0.2.0.1	person	16-17
# ::node	0.2.0.1.0	teach-01	16-17
# ::node	0.2.0.1.1	provide-01	10-11
# ::node	0.2.0.1.1.0	county	8-9
# ::node	0.2.0.1.1.0.0	safe-41	12-13
# ::node	0.2.0.1.1.0.0.0	road	11-12
# ::node	0.2.0.1.1.1	program	14-15
# ::node	0.2.0.1.1.1.0	teach-01	13-14
# ::node	0.2.0.1.1.2	say-01	6-7
# ::node	0.2.0.2	train-01	38-39
# ::node	0.2.0.2.0	promote-02	37-38
# ::node	0.2.0.2.0.0	county	29-30
# ::node	0.2.0.2.0.0.0	set-02	31-32
# ::node	0.2.0.2.0.0.0.0	associate-01	35-36
# ::node	0.2.0.2.0.0.0.0.0	train-01	34-35
# ::node	0.2.0.2.0.1	and	36-37
# ::node	0.2.1	accident	25-26
# ::node	0.2.1.0	few	24-25
# ::node	0.2.2	year	27-28
# ::node	0.2.2.0	last	26-27
# ::root	0	say-01
# ::edge	accident	location	county	0.1.1.0.0.2.1.0.0.0	0.1.1.0.0.2.1.0.0.0.0	
# ::edge	accident	location	road	0.1.1.0.0.2.1.0.0.0	0.1.1.0.0.2.1.0.0.0.1	
# ::edge	accident	mod	pedestrian	0.2.0.0	0.2.0.0.0	
# ::edge	accident	mod	road	0.1.1.0.0.2.0.0.0	0.1.1.0.0.2.0.0.0.0	
# ::edge	accident	quant	few	0.2.1	0.2.1.0	
# ::edge	advance-01	ARG1	course	0.1.1.1	0.1.1	
# ::edge	agree-01	ARG1	boost-01	0.1.1.0.0.2.1.0.0.1.1.2	0.1.1.0.0.2.1.0.0.1.1.2.0	
# ::edge	agree-01	manner	spend-01	0.1.1.0.0.2.1.0.0.1.1.2	0.1.1.0.0.2.1.0.0.1.1	
# ::edge	and	op1	accident	0.2.0	0.2.0.0	
# ::edge	and	op1	drive-01	0.1.1.0.0	0.1.1.0.0.1	
# ::edge	and	op1	promote-02	0.2.0.2.0.1	0.2.0.2.0	
# ::edge	and	op2	develop-02	0.1.1.0.0	0.1.1.0.0.2	
# ::edge	and	op2	person	0.2.0	0.2.0.1	
# ::edge	and	op3	train-01	0.2.0	0.2.0.2	
# ::edge	boost-01	ARG1	year	0.1.1.0.0.2.1.0.0.1.1.2.0	0.1.1.0.0.2.1.0.0.1.1.2.0.0	
# ::edge	boost-01	mod	big	0.1.1.0.0.2.1.0.0.1.1.2.0	0.1.1.0.0.2.1.0.0.1.1.2.0.1	
# ::edge	date-entity	year	2000	0.1.1.0.0.2.1.2	0.1.1.0.0.2.1.2.0	
# ::edge	develop-02	ARG1	scheme-01	0.1.1.0.0.2	0.1.1.0.0.2.0	
# ::edge	develop-02	time	early	0.1.1.0.0.2	0.1.1.0.0.2.1	
# ::edge	drive-01	ARG0	baby	0.1.1.0.0.1	0.1.1.0.0.1.0	
# ::edge	drive-01	ARG1	promote-02	0.1.1.0.1	0.1.1.0	
# ::edge	early	mod	this	0.1.1.0.0.2.1	0.1.1.0.0.2.1.1	
# ::edge	early	op1	date-entity	0.1.1.0.0.2.1	0.1.1.0.0.2.1.2	
# ::edge	encourage-01	ARG0	county	0.1	0.1.0	
# ::edge	encourage-01	ARG1	course	0.1	0.1.1	
# ::edge	hire-01	ARG2	and	0.1.1.0.0.0	0.1.1.0.0	
# ::edge	hope-01	ARG0	county	0.1.1.0.0.2.1.0.0.1	0.1.1.0.0.2.1.0.0.1.0	
# ::edge	hope-01	ARG1	reduce-01	0.1.1.0.0.2.1.0.0.1	0.1.1.0.0.2.1.0.0	
# ::edge	involve-01	ARG1	and	0.2	0.2.0	
# ::edge	involve-01	ARG2	accident	0.2	0.2.1	
# ::edge	involve-01	time	year	0.2	0.2.2	
# ::edge	prevent-01	ARG1	accident	0.1.1.0.0.2.0.0	0.1.1.0.0.2.0.0.0	
# ::edge	program	mod	teach-01	0.2.0.1.1.1	0.2.0.1.1.1.0	
# ::edge	promote-02	ARG0	county	0.2.0.2.0	0.2.0.2.0.0	
# ::edge	promote-02	ARG0	course	0.1.1.0	0.1.1	
# ::edge	promote-02	ARG1	and	0.1.1.0	0.1.1.0.0	
# ::edge	promote-02	ARG1	train-01	0.2.0.2.0	0.2.0.2	
# ::edge	provide-01	ARG0	county	0.2.0.1.1	0.2.0.1.1.0	
# ::edge	provide-01	ARG1	program	0.2.0.1.1	0.2.0.1.1.1	
# ::edge	provide-01	ARG2	person	0.2.0.1.1	0.2.0.1	
# ::edge	reduce-01	ARG0	year	0.1.1.0.0.2.1.0.0	0.1.1.0.0.2.1.0	
# ::edge	reduce-01	ARG1	accident	0.1.1.0.0.2.1.0.0	0.1.1.0.0.2.1.0.0.0	
# ::edge	road	part	money	0.1.1.0.0.2.1.0.0.1.1.0.0	0.1.1.0.0.2.1.0.0.1.1.0	
# ::edge	safe-41	ARG1	county	0.2.0.1.1.0.0	0.2.0.1.1.0	
# ::edge	safe-41	mod	road	0.1.1.0.0.2.1.0.0.1.1.0.0.0	0.1.1.0.0.2.1.0.0.1.1.0.0	
# ::edge	safe-41	mod	road	0.2.0.1.1.0.0	0.2.0.1.1.0.0.0	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	encourage-01	0	0.1	
# ::edge	say-01	ARG1	provide-01	0.2.0.1.1.2	0.2.0.1.1	
# ::edge	say-01	ARG2	involve-01	0	0.2	
# ::edge	scheme-01	ARG1	prevent-01	0.1.1.0.0.2.0	0.1.1.0.0.2.0.0	
# ::edge	scheme-01	ARG1	seat	0.1.1.0.0.0.0	0.1.1.0.0.0.0.0	
# ::edge	scheme-01	mod	hire-01	0.1.1.0.0.0.0	0.1.1.0.0.0	
# ::edge	scheme-01	prep-in	car	0.1.1.0.0.0.0	0.1.1.0.0.0.0.1	
# ::edge	set-02	ARG0	county	0.2.0.2.0.0.0	0.2.0.2.0.0	
# ::edge	set-02	ARG1	associate-01	0.2.0.2.0.0.0	0.2.0.2.0.0.0.0	
# ::edge	spend-01	ARG0	hope-01	0.1.1.0.0.2.1.0.0.1.1	0.1.1.0.0.2.1.0.0.1	
# ::edge	spend-01	ARG1	money	0.1.1.0.0.2.1.0.0.1.1	0.1.1.0.0.2.1.0.0.1.1.0	
# ::edge	spend-01	ARG2	measure	0.1.1.0.0.2.1.0.0.1.1	0.1.1.0.0.2.1.0.0.1.1.1	
# ::edge	spend-01	prep-against	year	0.1.1.0.0.2.1.0.0.1.1	0.1.1.0.0.2.1.0.0.1.1.3	
# ::edge	teach-01	ARG0	person	0.2.0.1.0	0.2.0.1	
# ::edge	train-01	ARG0	associate-01	0.2.0.2.0.0.0.0.0	0.2.0.2.0.0.0.0	
# ::edge	year	degree	early	0.1.1.0.0.2.1.0	0.1.1.0.0.2.1	
# ::edge	year	mod	last	0.2.2	0.2.2.0	
(s6 / say-01 
      :ARG0 (h3 / he) 
      :ARG1 (e2 / encourage-01 
            :ARG0 (c5 / county) 
            :ARG1 (c4 / course 
                  :ARG0-of (p2 / promote-02 
                        :ARG1 (a4 / and 
                              :ARG2-of (h2 / hire-01 
                                    :mod-of (s5 / scheme-01 
                                          :ARG1 (s4 / seat) 
                                          :prep-in (c3 / car))) 
                              :op1 (d3 / drive-01 
                                    :ARG0 (b3 / baby)) 
                              :op2 (d2 / develop-02 
                                    :ARG1 (s3 / scheme-01 
                                          :ARG1 (p / prevent-01 
                                                :ARG1 (a3 / accident 
                                                      :mod (r4 / road)))) 
                                    :time (e / early 
                                          :degree-of (y3 / year 
                                                :ARG0-of (r3 / reduce-01 
                                                      :ARG1 (a2 / accident 
                                                            :location (c / county) 
                                                            :location (r2 / road)) 
                                                      :ARG1-of (h / hope-01 
                                                            :ARG0 (c2 / county) 
                                                            :ARG0-of (s2 / spend-01 
                                                                  :ARG1 (m2 / money 
                                                                        :part-of (r / road 
                                                                              :mod-of (s / safe-41))) 
                                                                  :ARG2 (m / measure) 
                                                                  :manner-of (a / agree-01 
                                                                        :ARG1 (b / boost-01 
                                                                              :ARG1 (y2 / year) 
                                                                              :mod (b2 / big))) 
                                                                  :prep-against (y / year))))) 
                                          :mod (t / this) 
                                          :op1 (d / date-entity 
                                                :year 2000)))) 
                        :ARG1-of (d4 / drive-01)) 
                  :ARG1-of (a5 / advance-01))) 
      :ARG2 (i / involve-01 
            :ARG1 (a9 / and 
                  :op1 (a10 / accident 
                        :mod (p7 / pedestrian)) 
                  :op2 (p4 / person 
                        :ARG0-of (t4 / teach-01) 
                        :ARG2-of (p6 / provide-01 
                              :ARG0 (c7 / county 
                                    :ARG1-of (s8 / safe-41 
                                          :mod (r5 / road))) 
                              :ARG1 (p5 / program 
                                    :mod (t5 / teach-01)) 
                              :ARG1-of (s9 / say-01))) 
                  :op3 (t2 / train-01 
                        :ARG1-of (p3 / promote-02 
                              :ARG0 (c6 / county 
                                    :ARG0-of (s7 / set-02 
                                          :ARG1 (a7 / associate-01 
                                                :ARG0-of (t3 / train-01)))) 
                              :op-of (a6 / and)))) 
            :ARG2 (a8 / accident 
                  :quant (f / few)) 
            :time (y4 / year 
                  :mod (l / last))))

# ::snt by an accident one in a thousand the bureaucrats at the community lose josefs card and he is not transported with all the other roubiceks
# ::tok by an accident one in a thousand the bureaucrats at the community lose josefs card and he is not transported with all the other roubiceks
# ::alignments 23-24|0.0.0.1.0.0.0 21-22|0.0.0.1.0.0.0.0 19-20|0.0.0.1.0 16-17|0.0.0.1.0.1 15-16|0.0.0.1 14-15|0.0.0.0 12-13|0.0.0 11-12|0.0 8-9|0 2-3|0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:27.198
# ::node	0	bureaucrat	8-9
# ::node	0.0	community	11-12
# ::node	0.0.0	lose-02	12-13
# ::node	0.0.0.0	card	14-15
# ::node	0.0.0.1	and	15-16
# ::node	0.0.0.1.0	transport-01	19-20
# ::node	0.0.0.1.0.0	accident	2-3
# ::node	0.0.0.1.0.0.0	other	23-24
# ::node	0.0.0.1.0.0.0.0	all	21-22
# ::node	0.0.0.1.0.1	he	16-17
# ::root	0	bureaucrat
# ::edge	and	op1	lose-02	0.0.0.1	0.0.0	
# ::edge	and	op2	transport-01	0.0.0.1	0.0.0.1.0	
# ::edge	bureaucrat	mod	community	0	0.0	
# ::edge	lose-02	ARG0	community	0.0.0	0.0	
# ::edge	lose-02	ARG1	card	0.0.0	0.0.0.0	
# ::edge	other	poss	accident	0.0.0.1.0.0.0	0.0.0.1.0.0	
# ::edge	other	quant	all	0.0.0.1.0.0.0	0.0.0.1.0.0.0.0	
# ::edge	transport-01	ARG0	accident	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	transport-01	ARG1	he	0.0.0.1.0	0.0.0.1.0.1	
(b / bureaucrat 
      :mod (c2 / community 
            :ARG0-of (l / lose-02 
                  :ARG1 (c / card) 
                  :op-of (a2 / and 
                        :op1 (t / transport-01 
                              :ARG0 (a3 / accident 
                                    :poss-of (o / other 
                                          :quant (a / all))) 
                              :ARG1 (h / he))))))

# ::snt environmentalists claim the accident which caused about 22 scientists to be evacuated from the building was equivalent to one million cans of hairsprays being used or 17000 fridges
# ::tok environmentalists claim the accident which caused about 22 scientists to be evacuated from the building was equivalent to one million cans of hairsprays being used or 17000 fridges
# ::alignments 26-27|0.0.0 25-26|0.0 24-25|0.2.2.0 20-21|0.2.2.0.1 16-17|0.2.1 14-15|0.2.2 8-9|0.2.2.0.0 7-8|0.2.2.0.0.0 5-6|0 3-4|0.1 1-2|0.2 0-1|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:27.457
# ::node	0	cause-01	5-6
# ::node	0.0	or	25-26
# ::node	0.0.0	17000	26-27
# ::node	0.1	accident	3-4
# ::node	0.2	claim-01	1-2
# ::node	0.2.0	environmentalist	0-1
# ::node	0.2.1	equivalent	16-17
# ::node	0.2.2	build-01	14-15
# ::node	0.2.2.0	use-01	24-25
# ::node	0.2.2.0.0	scientist	8-9
# ::node	0.2.2.0.0.0	22	7-8
# ::node	0.2.2.0.1	can	20-21
# ::root	0	cause-01
# ::edge	build-01	ARG1	claim-01	0.2.2	0.2	
# ::edge	cause-01	ARG0	or	0	0.0	
# ::edge	cause-01	ARG1	accident	0	0.1	
# ::edge	cause-01	ARG2	claim-01	0	0.2	
# ::edge	claim-01	ARG0	environmentalist	0.2	0.2.0	
# ::edge	claim-01	ARG1	equivalent	0.2	0.2.1	
# ::edge	or	op1	17000	0.0	0.0.0	
# ::edge	scientist	quant	22	0.2.2.0.0	0.2.2.0.0.0	
# ::edge	use-01	ARG0	scientist	0.2.2.0	0.2.2.0.0	
# ::edge	use-01	ARG1	can	0.2.2.0	0.2.2.0.1	
# ::edge	use-01	ARG2	build-01	0.2.2.0	0.2.2	
(c2 / cause-01 
      :ARG0 (o / or 
            :op1 17000) 
      :ARG1 (a / accident) 
      :ARG2 (c3 / claim-01 
            :ARG0 (e2 / environmentalist) 
            :ARG1 (e / equivalent) 
            :ARG1-of (b / build-01 
                  :ARG2-of (u / use-01 
                        :ARG0 (s / scientist 
                              :quant 22) 
                        :ARG1 (c / can)))))

# ::snt finally the men gave up grudgingly admitted that the room was safe and left muttering about freak accidents and acts of god
# ::tok finally the men gave up grudgingly admitted that the room was safe and left muttering about freak accidents and acts of god
# ::alignments 21-22|0.0.3 18-19|0.0.2.0 17-18|0.0.2 16-17|0 12-13|0.0 11-12|0.0.1.0 9-10|0.0.1.0.1 6-7|0.0.1 2-3|0.0.0 0-1|0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:27.640
# ::node	0	freak-01	16-17
# ::node	0.0	and	12-13
# ::node	0.0.0	man	2-3
# ::node	0.0.1	admit-01	6-7
# ::node	0.0.1.0	safe-41	11-12
# ::node	0.0.1.0.0	final	0-1
# ::node	0.0.1.0.1	room	9-10
# ::node	0.0.2	accident	17-18
# ::node	0.0.2.0	and	18-19
# ::node	0.0.3	god	21-22
# ::root	0	freak-01
# ::edge	admit-01	ARG1	safe-41	0.0.1	0.0.1.0	
# ::edge	and	op1	accident	0.0.2.0	0.0.2	
# ::edge	and	op1	man	0.0	0.0.0	
# ::edge	and	op2	admit-01	0.0	0.0.1	
# ::edge	and	op3	accident	0.0	0.0.2	
# ::edge	and	op4	god	0.0	0.0.3	
# ::edge	freak-01	ARG1	and	0	0.0	
# ::edge	safe-41	ARG0	final	0.0.1.0	0.0.1.0.0	
# ::edge	safe-41	ARG1	room	0.0.1.0	0.0.1.0.1	
(f / freak-01 
      :ARG1 (a3 / and 
            :op1 (m / man) 
            :op2 (a4 / admit-01 
                  :ARG1 (s / safe-41 
                        :ARG0 (f2 / final) 
                        :ARG1 (r / room))) 
            :op3 (a2 / accident 
                  :op-of (a / and)) 
            :op4 (g / god)))

# ::snt but opinions were divided on the responsibility for the accident in japan
# ::tok but opinions were divided on the responsibility for the accident in japan
# ::alignments 9-10|0.0.1.0 6-7|0.0.1 3-4|0.0 1-2|0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:27.694
# ::node	0	contrast-01	0-1
# ::node	0.0	divide-02	3-4
# ::node	0.0.0	opine-01	1-2
# ::node	0.0.1	responsible-41	6-7
# ::node	0.0.1.0	accident	9-10
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	divide-02	0	0.0	
# ::edge	divide-02	ARG1	opine-01	0.0	0.0.0	
# ::edge	divide-02	ARG2	responsible-41	0.0	0.0.1	
# ::edge	responsible-41	ARG2	accident	0.0.1	0.0.1.0	
(c / contrast-01 
      :ARG1 (d / divide-02 
            :ARG1 (o / opine-01) 
            :ARG2 (r / responsible-41 
                  :ARG2 (a / accident))))

# ::snt coming just two races after derek warwicks phenomenal escape at monza donnellys accident inevitably brought comparison
# ::tok coming just two races after derek warwicks phenomenal escape at monza donnellys accident inevitably brought comparison
# ::alignments 15-16|0.0.0.0 13-14|0.0.0.0.1 12-13|0.0.0 8-9|0.0 7-8|0 4-5|0.0.0.0.0.2 3-4|0.0.0.0.0 2-3|0.0.0.0.0.1 1-2|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:27.758
# ::node	0	phenomenal	7-8
# ::node	0.0	escape-01	8-9
# ::node	0.0.0	accident	12-13
# ::node	0.0.0.0	compare-01	15-16
# ::node	0.0.0.0.0	race	3-4
# ::node	0.0.0.0.0.0	just	1-2
# ::node	0.0.0.0.0.1	2	2-3
# ::node	0.0.0.0.0.2	after	4-5
# ::node	0.0.0.0.1	inevitable	13-14
# ::root	0	phenomenal
(p / phenomenal 
      :mod-of (e / escape-01 
            :ARG1 (a / accident 
                  :ARG0-of (c / compare-01 
                        :ARG1 (r / race 
                              :mod (j / just) 
                              :quant 2 
                              :time (a2 / after)) 
                        :frequency (i / inevitable)))))

# ::snt environmentalists claim the accident which caused about 22 scientists to be evacuated from the building was equivalent to one million cans of hairsprays being used or 17000 fridges, but mr maple scorned their approach to the accident i think they have taken the opportunity to play their own tune
# ::tok environmentalists claim the accident which caused about 22 scientists to be evacuated from the building was equivalent to one million cans of hairsprays being used or 17000 fridges , but mr maple scorned their approach to the accident i think they have taken the opportunity to play their own tune
# ::alignments 49-50|0.1.1.0.2.0.0.0.0.1 46-47|0.1.1.0.2.0.0.0.0 44-45|0.1.1.0.2.0.0.0 40-41|0.1.1.0.2.0.0.0.0.0 39-40|0.1.1.0.2.0.0 38-39|0.1.1.0.2.0 37-38|0.1.1.0.2.0.1 34-35|0.1.1.0.1 29-30|0.1.1.0 26-27|0.0.0 25-26|0.0 24-25|0.1.1.0.2 20-21|0.1.1.0.2.1 16-17|0.1.1 14-15|0.1.1.0.2.2 8-9|0.1.1.0.0 7-8|0.1.1.0.0.0 5-6|0 3-4|0.1 1-2|0.1.0 0-1|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:29.110
# ::node	0	cause-01	5-6
# ::node	0.0	or	25-26
# ::node	0.0.0	17000	26-27
# ::node	0.1	accident	3-4
# ::node	0.1.0	claim-01	1-2
# ::node	0.1.0.0	environmentalist	0-1
# ::node	0.1.1	equivalent	16-17
# ::node	0.1.1.0	contrast-01	29-30
# ::node	0.1.1.0.0	scientist	8-9
# ::node	0.1.1.0.0.0	22	7-8
# ::node	0.1.1.0.1	approach-02	34-35
# ::node	0.1.1.0.2	use-01	24-25
# ::node	0.1.1.0.2.0	i	38-39
# ::node	0.1.1.0.2.0.0	think-01	39-40
# ::node	0.1.1.0.2.0.0.0	opportunity	44-45
# ::node	0.1.1.0.2.0.0.0.0	play-01	46-47
# ::node	0.1.1.0.2.0.0.0.0.0	they	40-41
# ::node	0.1.1.0.2.0.0.0.0.1	tune-01	49-50
# ::node	0.1.1.0.2.0.1	accident	37-38
# ::node	0.1.1.0.2.1	can	20-21
# ::node	0.1.1.0.2.2	build-01	14-15
# ::root	0	cause-01
# ::edge	accident	poss	i	0.1.1.0.2.0.1	0.1.1.0.2.0	
# ::edge	approach-02	ARG0	contrast-01	0.1.1.0.1	0.1.1.0	
# ::edge	cause-01	ARG0	or	0	0.0	
# ::edge	cause-01	ARG1	accident	0	0.1	
# ::edge	claim-01	ARG0	environmentalist	0.1.0	0.1.0.0	
# ::edge	claim-01	ARG1	accident	0.1.0	0.1	
# ::edge	contrast-01	ARG0	scientist	0.1.1.0	0.1.1.0.0	
# ::edge	contrast-01	ARG1	equivalent	0.1.1.0	0.1.1	
# ::edge	contrast-01	ARG2	use-01	0.1.1.0	0.1.1.0.2	
# ::edge	equivalent	domain	accident	0.1.1	0.1	
# ::edge	opportunity	mod	play-01	0.1.1.0.2.0.0.0	0.1.1.0.2.0.0.0.0	
# ::edge	or	op1	17000	0.0	0.0.0	
# ::edge	play-01	ARG0	they	0.1.1.0.2.0.0.0.0	0.1.1.0.2.0.0.0.0.0	
# ::edge	play-01	ARG1	tune-01	0.1.1.0.2.0.0.0.0	0.1.1.0.2.0.0.0.0.1	
# ::edge	scientist	quant	22	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	think-01	ARG0	i	0.1.1.0.2.0.0	0.1.1.0.2.0	
# ::edge	think-01	ARG1	opportunity	0.1.1.0.2.0.0	0.1.1.0.2.0.0.0	
# ::edge	use-01	ARG0	i	0.1.1.0.2	0.1.1.0.2.0	
# ::edge	use-01	ARG1	can	0.1.1.0.2	0.1.1.0.2.1	
# ::edge	use-01	ARG2	build-01	0.1.1.0.2	0.1.1.0.2.2	
(c3 / cause-01 
      :ARG0 (o2 / or 
            :op1 17000) 
      :ARG1 (a3 / accident 
            :ARG1-of (c4 / claim-01 
                  :ARG0 (e2 / environmentalist)) 
            :domain-of (e / equivalent 
                  :ARG1-of (c / contrast-01 
                        :ARG0 (s / scientist 
                              :quant 22) 
                        :ARG0-of (a2 / approach-02) 
                        :ARG2 (u / use-01 
                              :ARG0 (i / i 
                                    :ARG0-of (t3 / think-01 
                                          :ARG1 (o / opportunity 
                                                :mod (p / play-01 
                                                      :ARG0 (t2 / they) 
                                                      :ARG1 (t / tune-01)))) 
                                    :poss-of (a / accident)) 
                              :ARG1 (c2 / can) 
                              :ARG2 (b / build-01))))))

# ::snt it is a memory that keeps flooding back whenever he sees the slightest accident on the road
# ::tok it is a memory that keeps flooding back whenever he sees the slightest accident on the road
# ::alignments 16-17|0.1 13-14|0.0.1 12-13|0.0.1.0.0+0.0.1.0 10-11|0 9-10|0.0 8-9|0.0.0.2 7-8|0.0.0.1 6-7|0.0.0 3-4|0.0.0.0 0-1|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:29.171
# ::node	0	see-01	10-11
# ::node	0.0	he	9-10
# ::node	0.0.0	flood-01	6-7
# ::node	0.0.0.0	memory	3-4
# ::node	0.0.0.0.0	it	0-1
# ::node	0.0.0.1	back	7-8
# ::node	0.0.0.2	whenever	8-9
# ::node	0.0.1	accident	13-14
# ::node	0.0.1.0	slight	12-13
# ::node	0.0.1.0.0	most	12-13
# ::node	0.1	road	16-17
# ::root	0	see-01
# ::edge	accident	mod	slight	0.0.1	0.0.1.0	
# ::edge	accident	poss	he	0.0.1	0.0	
# ::edge	flood-01	ARG0	he	0.0.0	0.0	
# ::edge	flood-01	ARG1	memory	0.0.0	0.0.0.0	
# ::edge	flood-01	direction	back	0.0.0	0.0.0.1	
# ::edge	flood-01	frequency	whenever	0.0.0	0.0.0.2	
# ::edge	memory	domain	it	0.0.0.0	0.0.0.0.0	
# ::edge	see-01	ARG0	he	0	0.0	
# ::edge	see-01	ARG1	road	0	0.1	
# ::edge	slight	degree	most	0.0.1.0	0.0.1.0.0	
(s2 / see-01 
      :ARG0 (h / he 
            :ARG0-of (f / flood-01 
                  :ARG1 (m2 / memory 
                        :domain (i / it)) 
                  :direction (b / back) 
                  :frequency (w / whenever)) 
            :poss-of (a / accident 
                  :mod (s / slight 
                        :degree (m / most)))) 
      :ARG1 (r / road))

# ::snt in particular they avoided the mood of petulant evasiveness which came to characterise the reaction of the top people at london transport after the accident at kings cross
# ::tok in particular they avoided the mood of petulant evasiveness which came to characterise the reaction of the top people at london transport after the accident at kings cross
# ::alignments 27-28|0 24-25|0.0 22-23|0.3 21-22|0.2 20-21|0.2.0.0.0+0.2.0.0+0.2.0 17-18|0.1 14-15|0.3.0 5-6|0.3.0.0.1 3-4|0.3.0.0 2-3|0.3.0.0.0 1-2|0.3.0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:29.710
# ::node	0	cross-02	27-28
# ::node	0.0	accident	24-25
# ::node	0.1	top	17-18
# ::node	0.2	transport-01	21-22
# ::node	0.2.0	city	20-21
# ::node	0.2.0.0	name	20-21
# ::node	0.2.0.0.0	"London"	20-21
# ::node	0.3	after	22-23
# ::node	0.3.0	react-01	14-15
# ::node	0.3.0.0	avoid-01	3-4
# ::node	0.3.0.0.0	they	2-3
# ::node	0.3.0.0.1	mood	5-6
# ::node	0.3.0.0.2	particular	1-2
# ::root	0	cross-02
# ::edge	after	op1	cross-02	0.3	0	
# ::edge	avoid-01	ARG0	they	0.3.0.0	0.3.0.0.0	
# ::edge	avoid-01	ARG1	mood	0.3.0.0	0.3.0.0.1	
# ::edge	avoid-01	mod	particular	0.3.0.0	0.3.0.0.2	
# ::edge	city	name	name	0.2.0	0.2.0.0	
# ::edge	cross-02	ARG0	accident	0	0.0	
# ::edge	cross-02	ARG1	top	0	0.1	
# ::edge	name	op1	"London"	0.2.0.0	0.2.0.0.0	
# ::edge	react-01	ARG1	avoid-01	0.3.0	0.3.0.0	
# ::edge	react-01	time	after	0.3.0	0.3	
# ::edge	transport-01	ARG1	cross-02	0.2	0	
# ::edge	transport-01	location	city	0.2	0.2.0	
(c / cross-02 
      :ARG0 (a / accident) 
      :ARG1 (t2 / top) 
      :ARG1-of (t / transport-01 
            :location (c2 / city 
                  :name (n / name 
                        :op1 "London"))) 
      :op-of (a2 / after 
            :time-of (r / react-01 
                  :ARG1 (a3 / avoid-01 
                        :ARG0 (t3 / they) 
                        :ARG1 (m / mood) 
                        :mod (p / particular)))))

# ::snt if you have two drivers like this in formula one you would have accidents every week
# ::tok if you have two drivers like this in formula one you would have accidents every week
# ::alignments 15-16|0.0.2.0.0 14-15|0.0.2.0 13-14|0.0.0.0.0 10-11|0.0.0.0 8-9|0 6-7|0.0.1 4-5|0.0+0.0.0 3-4|0.0.0.1 1-2|0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:29.979
# ::node	0	formula	8-9
# ::node	0.0	drive-01	4-5
# ::node	0.0.0	person	4-5
# ::node	0.0.0.0	you	10-11
# ::node	0.0.0.0.0	accident	13-14
# ::node	0.0.0.1	2	3-4
# ::node	0.0.1	this	6-7
# ::node	0.0.2	you	1-2
# ::node	0.0.2.0	every	14-15
# ::node	0.0.2.0.0	week	15-16
# ::root	0	formula
(f / formula 
      :time-of (d / drive-01 
            :ARG0 (p / person 
                  :poss (y / you 
                        :part-of (a / accident)) 
                  :quant 2) 
            :ARG1 (t / this) 
            :ARG2 (y2 / you 
                  :mod (e / every 
                        :mod-of (w / week)))))

# ::snt it is no accident that this idea comes from the north
# ::tok it is no accident that this idea comes from the north
# ::alignments 10-11|0 6-7|0.0.1 5-6|0.0.1.0 3-4|0.0 2-3|0.0.2 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:30.011
# ::node	0	north	10-11
# ::node	0.0	accident	3-4
# ::node	0.0.0	it	0-1
# ::node	0.0.1	idea	6-7
# ::node	0.0.1.0	this	5-6
# ::node	0.0.2	-	2-3
# ::root	0	north
# ::edge	accident	domain	it	0.0	0.0.0	
# ::edge	accident	polarity	-	0.0	0.0.2	
# ::edge	idea	mod	accident	0.0.1	0.0	
# ::edge	idea	mod	this	0.0.1	0.0.1.0	
# ::edge	north	mod	accident	0	0.0	
(n / north 
      :mod (a / accident 
            :domain (i2 / it) 
            :mod-of (i / idea 
                  :mod (t / this)) 
            :polarity (- / -)))

# ::snt and what we have today are entirely modern creations syntheses the result of countless unrecorded accidents rather than the national spirit seeking to realise itself
# ::tok and what we have today are entirely modern creations syntheses the result of countless unrecorded accidents rather than the national spirit seeking to realise itself
# ::alignments 23-24|0.0 21-22|0.0.1 20-21|0.0.1.0 19-20|0.0.1.0.0 15-16|0.1.1 13-14|0.1.1.0 11-12|0.1 7-8|0.0.0.0 6-7|0.0.0.0.0 4-5|0.1.0 2-3|0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:30.351
# ::node	0	and	0-1
# ::node	0.0	realize-01	23-24
# ::node	0.0.0	we	2-3
# ::node	0.0.0.0	modern	7-8
# ::node	0.0.0.0.0	entire	6-7
# ::node	0.0.1	seek-01	21-22
# ::node	0.0.1.0	spirit	20-21
# ::node	0.0.1.0.0	nation	19-20
# ::node	0.1	result-01	11-12
# ::node	0.1.0	today	4-5
# ::node	0.1.1	accident	15-16
# ::node	0.1.1.0	countless	13-14
# ::root	0	and
(a2 / and 
      :ARG1-of (r / realize-01 
            :ARG0 (w / we 
                  :domain-of (m / modern 
                        :degree (e / entire))) 
            :ARG1-of (s / seek-01 
                  :ARG0 (s2 / spirit 
                        :mod (n / nation)))) 
      :ARG2-of (r2 / result-01 
            :ARG0 (t / today) 
            :ARG1 (a / accident 
                  :mod (c / countless))))

# ::snt the words i love you just uttered by ludens to irina had not come to his lips entirely by accident
# ::tok the words i love you just uttered by ludens to irina had not come to his lips entirely by accident
# ::alignments 19-20|0.2.2 17-18|0.2.3 16-17|0.2.1 6-7|0 5-6|0.3 4-5|0.0 3-4|0.2 2-3|0.2.0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:30.469
# ::node	0	utter-01	6-7
# ::node	0.0	you	4-5
# ::node	0.1	word	1-2
# ::node	0.2	love-01	3-4
# ::node	0.2.0	i	2-3
# ::node	0.2.1	lip	16-17
# ::node	0.2.2	accident	19-20
# ::node	0.2.3	entire	17-18
# ::node	0.3	just	5-6
# ::root	0	utter-01
# ::edge	entire	op1	love-01	0.2.3	0.2	
# ::edge	love-01	ARG0	i	0.2	0.2.0	
# ::edge	love-01	ARG1	utter-01	0.2	0	
# ::edge	love-01	ARG2	lip	0.2	0.2.1	
# ::edge	love-01	manner	accident	0.2	0.2.2	
# ::edge	utter-01	ARG0	you	0	0.0	
# ::edge	utter-01	ARG1	word	0	0.1	
# ::edge	utter-01	mod	just	0	0.3	
(u / utter-01 
      :ARG0 (y / you) 
      :ARG1 (w / word) 
      :ARG1-of (l2 / love-01 
            :ARG0 (i / i) 
            :ARG2 (l / lip) 
            :manner (a / accident) 
            :op-of (e / entire)) 
      :mod (j / just))

# ::snt a fortnight from now the little french community of vaujany will mark the anniversary of an accident which abruptly halted the villages vault into the major league of ski resorts
# ::tok a fortnight from now the little french community of vaujany will mark the anniversary of an accident which abruptly halted the villages vault into the major league of ski resorts
# ::alignments 26-27|0.1.0.0.0 25-26|0.1.0.0.0.0 21-22|0.0 19-20|0.1.0.0 18-19|0.1.0.0.1 16-17|0.1.0 13-14|0.1 11-12|0 7-8|0.2 6-7|0.2.0.0.0+0.2.0.0+0.2.0 5-6|0.2.1 3-4|0.2.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:30.661
# ::node	0	mark-01	11-12
# ::node	0.0	village	21-22
# ::node	0.1	anniversary	13-14
# ::node	0.1.0	accident	16-17
# ::node	0.1.0.0	halt-01	19-20
# ::node	0.1.0.0.0	league	26-27
# ::node	0.1.0.0.0.0	major	25-26
# ::node	0.1.0.0.1	abrupt	18-19
# ::node	0.2	community	7-8
# ::node	0.2.0	country	6-7
# ::node	0.2.0.0	name	6-7
# ::node	0.2.0.0.0	"France"	6-7
# ::node	0.2.1	little	5-6
# ::node	0.2.2	now	3-4
# ::root	0	mark-01
# ::edge	anniversary	poss	accident	0.1	0.1.0	
# ::edge	community	location	country	0.2	0.2.0	
# ::edge	community	mod	little	0.2	0.2.1	
# ::edge	community	time	now	0.2	0.2.2	
# ::edge	country	name	name	0.2.0	0.2.0.0	
# ::edge	halt-01	ARG0	accident	0.1.0.0	0.1.0	
# ::edge	halt-01	ARG1	league	0.1.0.0	0.1.0.0.0	
# ::edge	halt-01	manner	abrupt	0.1.0.0	0.1.0.0.1	
# ::edge	league	mod	major	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	mark-01	ARG0	village	0	0.0	
# ::edge	mark-01	ARG1	anniversary	0	0.1	
# ::edge	mark-01	ARG2	community	0	0.2	
# ::edge	name	op1	"France"	0.2.0.0	0.2.0.0.0	
(m2 / mark-01 
      :ARG0 (v / village) 
      :ARG1 (a3 / anniversary 
            :poss (a2 / accident 
                  :ARG0-of (h / halt-01 
                        :ARG1 (l / league 
                              :mod (m / major)) 
                        :manner (a / abrupt)))) 
      :ARG2 (c / community 
            :location (c2 / country 
                  :name (n / name 
                        :op1 "France")) 
            :mod (l2 / little) 
            :time (n2 / now)))

# ::snt on one occasion she split her head in a playground accident and the teacher on duty failing to reach sue on the phone wanted to notify rosies grandparents instead
# ::tok on one occasion she split her head in a playground accident and the teacher on duty failing to reach sue on the phone wanted to notify rosies grandparents instead
# ::alignments 28-29|0.0.0.0 27-28|0.0.0.3 23-24|0 22-23|0.1 19-20|0.0.0.1 18-19|0.0.0.1.0 16-17|0.0.0.1.0.0 15-16|0.0.0.1.0.0.0 13-14|0.0.0.2.0.0+0.0.0.2.0 11-12|0.0.0.2 10-11|0.0.1.0 6-7|0.0.0 4-5|0.0.1 3-4|0.0 2-3|0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:31.014
# ::node	0	want-01	23-24
# ::node	0.0	she	3-4
# ::node	0.0.0	head-01	6-7
# ::node	0.0.0.0	instead	28-29
# ::node	0.0.0.1	sue-01	19-20
# ::node	0.0.0.1.0	reach-01	18-19
# ::node	0.0.0.1.0.0	fail-01	16-17
# ::node	0.0.0.1.0.0.0	duty	15-16
# ::node	0.0.0.2	and	11-12
# ::node	0.0.0.2.0	person	13-14
# ::node	0.0.0.2.0.0	teach-01	13-14
# ::node	0.0.0.3	grandparent	27-28
# ::node	0.0.1	split-01	4-5
# ::node	0.0.1.0	accident	10-11
# ::node	0.0.1.1	occasion	2-3
# ::node	0.1	phone	22-23
# ::root	0	want-01
# ::edge	and	op1	head-01	0.0.0.2	0.0.0	
# ::edge	and	op2	person	0.0.0.2	0.0.0.2.0	
# ::edge	fail-01	ARG1	duty	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	fail-01	ARG2	reach-01	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	grandparent	op1	head-01	0.0.0.3	0.0.0	
# ::edge	head-01	ARG0	she	0.0.0	0.0	
# ::edge	head-01	ARG1	instead	0.0.0	0.0.0.0	
# ::edge	reach-01	ARG1	sue-01	0.0.0.1.0	0.0.0.1	
# ::edge	split-01	ARG1	she	0.0.1	0.0	
# ::edge	split-01	ARG2	accident	0.0.1	0.0.1.0	
# ::edge	split-01	time	occasion	0.0.1	0.0.1.1	
# ::edge	sue-01	ARG1	head-01	0.0.0.1	0.0.0	
# ::edge	teach-01	ARG0	person	0.0.0.2.0.0	0.0.0.2.0	
# ::edge	want-01	ARG0	she	0	0.0	
# ::edge	want-01	ARG1	phone	0	0.1	
(w / want-01 
      :ARG0 (s3 / she 
            :ARG0-of (h / head-01 
                  :ARG1 (i / instead) 
                  :ARG1-of (s / sue-01 
                        :ARG1-of (r / reach-01 
                              :ARG2-of (f / fail-01 
                                    :ARG1 (d / duty)))) 
                  :op-of (a / and 
                        :op1 (p2 / person 
                              :ARG0-of (t / teach-01))) 
                  :op-of (g / grandparent)) 
            :ARG1-of (s2 / split-01 
                  :ARG2 (a2 / accident) 
                  :time (o / occasion))) 
      :ARG1 (p / phone))

# ::snt how much of all this have you told him by the way  i simply said that wed learned through our intelligence sources that your sister had been killed in a bad car accident
# ::tok how much of all this have you told him by the way i simply said that wed learned through our intelligence sources that your sister had been killed in a bad car accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:31.016
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt motor cyclist peter roberts from poole received slight head and shoulder injuries when he was involved in an accident with a car on saturday afternoon near bletchingdon on the a4095, the driver of the car involved in the crash mr paul nafziger from ohio usa was not hurt in the accident
# ::tok motor cyclist peter roberts from poole received slight head and shoulder injuries when he was involved in an accident with a car on saturday afternoon near bletchingdon on the a4095 , the driver of the car involved in the crash mr paul nafziger from ohio usa was not hurt in the accident
# ::alignments 51-52|0.0.3.0.0 48-49|0.0.3.0 45-46|0.0.0.0.0.0.0.0.0+0.0.0.0.0.0.0.0+0.0.0.0.0.0.0 39-40|0.0.1.0.1.0.0.0 36-37|0.0.0.0.0.0 35-36|0.0.0.0.0 32-33|0.0.0.0+0.0.0 25-26|0.0.1.0.1 24-25|0.0.1.0.1.0 23-24|0.0.1.0.1.0.0 21-22|0.0.1.0.0.0 18-19|0.0.1.0.0 15-16|0.0.1.0 13-14|0.0.1 11-12|0.0.3.1 10-11|0.0.3.1.1 9-10|0.0.3 8-9|0.0 7-8|0.0.2 6-7|0 0-1|0.0.3.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:31.678
# ::node	0	receive-01	6-7
# ::node	0.0	head-01	8-9
# ::node	0.0.0	person	32-33
# ::node	0.0.0.0	drive-01	32-33
# ::node	0.0.0.0.0	car	35-36
# ::node	0.0.0.0.0.0	involve-01	36-37
# ::node	0.0.0.0.0.0.0	country	45-46
# ::node	0.0.0.0.0.0.0.0	name	45-46
# ::node	0.0.0.0.0.0.0.0.0	"USA"	45-46
# ::node	0.0.1	he	13-14
# ::node	0.0.1.0	involve-01	15-16
# ::node	0.0.1.0.0	accident	18-19
# ::node	0.0.1.0.0.0	car	21-22
# ::node	0.0.1.0.1	near	25-26
# ::node	0.0.1.0.1.0	afternoon	24-25
# ::node	0.0.1.0.1.0.0	saturday	23-24
# ::node	0.0.1.0.1.0.0.0	crash-01	39-40
# ::node	0.0.2	slight	7-8
# ::node	0.0.3	and	9-10
# ::node	0.0.3.0	hurt-01	48-49
# ::node	0.0.3.0.0	accident	51-52
# ::node	0.0.3.1	injure-01	11-12
# ::node	0.0.3.1.0	motorcycle	0-1
# ::node	0.0.3.1.1	shoulder	10-11
# ::root	0	receive-01
# ::edge	afternoon	mod	saturday	0.0.1.0.1.0	0.0.1.0.1.0.0	
# ::edge	and	op1	head-01	0.0.3	0.0	
# ::edge	and	op2	injure-01	0.0.3	0.0.3.1	
# ::edge	car	part	accident	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	country	name	name	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	crash-01	ARG1	saturday	0.0.1.0.1.0.0.0	0.0.1.0.1.0.0	
# ::edge	drive-01	ARG0	person	0.0.0.0	0.0.0	
# ::edge	drive-01	ARG1	car	0.0.0.0	0.0.0.0.0	
# ::edge	head-01	ARG0	person	0.0	0.0.0	
# ::edge	head-01	ARG1	he	0.0	0.0.1	
# ::edge	head-01	mod	slight	0.0	0.0.2	
# ::edge	hurt-01	ARG0	accident	0.0.3.0	0.0.3.0.0	
# ::edge	hurt-01	ARG1	and	0.0.3.0	0.0.3	
# ::edge	injure-01	ARG0	motorcycle	0.0.3.1	0.0.3.1.0	
# ::edge	injure-01	ARG1	shoulder	0.0.3.1	0.0.3.1.1	
# ::edge	involve-01	ARG1	car	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	involve-01	ARG1	he	0.0.1.0	0.0.1	
# ::edge	involve-01	ARG2	accident	0.0.1.0	0.0.1.0.0	
# ::edge	involve-01	ARG2	country	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	involve-01	location	near	0.0.1.0	0.0.1.0.1	
# ::edge	name	op1	"USA"	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0	
# ::edge	near	quant	afternoon	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	receive-01	ARG1	head-01	0	0.0	
(r / receive-01 
      :ARG1 (h3 / head-01 
            :ARG0 (p / person 
                  :ARG0-of (d / drive-01 
                        :ARG1 (c3 / car 
                              :ARG1-of (i / involve-01 
                                    :ARG2 (c / country 
                                          :name (n / name 
                                                :op1 "USA")))))) 
            :ARG1 (h2 / he 
                  :ARG1-of (i2 / involve-01 
                        :ARG2 (a3 / accident 
                              :part-of (c4 / car)) 
                        :location (n2 / near 
                              :quant (a2 / afternoon 
                                    :mod (s / saturday 
                                          :ARG1-of (c2 / crash-01)))))) 
            :mod (s3 / slight) 
            :op-of (a4 / and 
                  :ARG1-of (h / hurt-01 
                        :ARG0 (a / accident)) 
                  :op1 (i3 / injure-01 
                        :ARG0 (m / motorcycle) 
                        :ARG1 (s2 / shoulder)))))

# ::snt   a witney girl is recovering in hospital today after suffering minor head injuries following a car accident
# ::tok a witney girl is recovering in hospital today after suffering minor head injuries following a car accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:31.680
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt you dont have the right when you are a great driver to have a stupid accident which destroys the sporting spectacle he said, it is very clear and the film of the race proves it that it was excessive speed which caused the accident
# ::tok you dont have the right when you are a great driver to have a stupid accident which destroys the sporting spectacle he said , it is very clear and the film of the race proves it that it was excessive speed which caused the accident
# ::alignments 44-45|0.2.1.3.0.0.0 42-43|0.2.1.3.0.0 40-41|0.2.1.3.0 39-40|0.2.1.3 37-38|0.2.1.3.0.1 35-36|0.2.1.1 34-35|0.2.1 33-34|0.2.1.0.0 30-31|0.2.1.0 28-29|0.2 27-28|0.2.0 26-27|0.2.0.0 24-25|0.2.0.1 22-23|0 21-22|0.0 20-21|0.1 19-20|0.1.1 17-18|0.1.0 15-16|0.1.0.0 14-15|0.1.0.0.0 10-11|0.1.0.1.0+0.1.0.1 9-10|0.1.0.1.2 6-7|0.1.0.1.1 0-1|0.2.1.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:33.032
# ::node	0	say-01	22-23
# ::node	0.0	he	21-22
# ::node	0.1	spectacle	20-21
# ::node	0.1.0	destroy-01	17-18
# ::node	0.1.0.0	accident	15-16
# ::node	0.1.0.0.0	stupid	14-15
# ::node	0.1.0.1	person	10-11
# ::node	0.1.0.1.0	drive-01	10-11
# ::node	0.1.0.1.1	you	6-7
# ::node	0.1.0.1.2	great	9-10
# ::node	0.1.1	sport	19-20
# ::node	0.2	and	28-29
# ::node	0.2.0	clear	27-28
# ::node	0.2.0.0	very	26-27
# ::node	0.2.0.1	it	24-25
# ::node	0.2.1	prove-01	34-35
# ::node	0.2.1.0	film	30-31
# ::node	0.2.1.0.0	race	33-34
# ::node	0.2.1.1	it	35-36
# ::node	0.2.1.2	you	0-1
# ::node	0.2.1.3	excessive	39-40
# ::node	0.2.1.3.0	speed	40-41
# ::node	0.2.1.3.0.0	cause-01	42-43
# ::node	0.2.1.3.0.0.0	accident	44-45
# ::node	0.2.1.3.0.1	it	37-38
# ::root	0	say-01
# ::edge	accident	mod	stupid	0.1.0.0	0.1.0.0.0	
# ::edge	and	op1	say-01	0.2	0	
# ::edge	and	op2	clear	0.2	0.2.0	
# ::edge	and	op3	prove-01	0.2	0.2.1	
# ::edge	cause-01	ARG0	speed	0.2.1.3.0.0	0.2.1.3.0	
# ::edge	cause-01	ARG1	accident	0.2.1.3.0.0	0.2.1.3.0.0.0	
# ::edge	clear	degree	very	0.2.0	0.2.0.0	
# ::edge	clear	domain	it	0.2.0	0.2.0.1	
# ::edge	destroy-01	ARG0	accident	0.1.0	0.1.0.0	
# ::edge	destroy-01	ARG1	spectacle	0.1.0	0.1	
# ::edge	destroy-01	ARG2	person	0.1.0	0.1.0.1	
# ::edge	drive-01	ARG0	person	0.1.0.1.0	0.1.0.1	
# ::edge	film	mod	race	0.2.1.0	0.2.1.0.0	
# ::edge	person	domain	you	0.1.0.1	0.1.0.1.1	
# ::edge	person	mod	great	0.1.0.1	0.1.0.1.2	
# ::edge	prove-01	ARG0	film	0.2.1	0.2.1.0	
# ::edge	prove-01	ARG1	it	0.2.1	0.2.1.1	
# ::edge	prove-01	ARG2	you	0.2.1	0.2.1.2	
# ::edge	prove-01	condition	excessive	0.2.1	0.2.1.3	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	spectacle	0	0.1	
# ::edge	spectacle	mod	sport	0.1	0.1.1	
# ::edge	speed	domain	it	0.2.1.3.0	0.2.1.3.0.1	
# ::edge	speed	mod	excessive	0.2.1.3.0	0.2.1.3	
(s2 / say-01 
      :ARG0 (h / he) 
      :ARG1 (s3 / spectacle 
            :ARG1-of (d / destroy-01 
                  :ARG0 (a3 / accident 
                        :mod (s5 / stupid)) 
                  :ARG2 (p2 / person 
                        :ARG0-of (d2 / drive-01) 
                        :domain (y / you) 
                        :mod (g / great))) 
            :mod (s4 / sport)) 
      :op-of (a2 / and 
            :op1 (c2 / clear 
                  :degree (v / very) 
                  :domain (i3 / it)) 
            :op2 (p / prove-01 
                  :ARG0 (f / film 
                        :mod (r / race)) 
                  :ARG1 (i2 / it) 
                  :ARG2 (y2 / you) 
                  :condition (e / excessive 
                        :mod-of (s / speed 
                              :ARG0-of (c / cause-01 
                                    :ARG1 (a / accident)) 
                              :domain (i / it))))))

# ::snt in addition to workers compensation a number of states require nonoccupational disability insurancefo id102 many have enacted nofault automobile insurance and federal legislation has experimented with several compensation plans for special injuries notably black lung diseasefo id103 and now vaccine injuriesfo id104 as well as making itself responsible for excess insurance for nuclear accidents
# ::tok in addition to workers compensation a number of states require nonoccupational disability insurancefo id102 many have enacted nofault automobile insurance and federal legislation has experimented with several compensation plans for special injuries notably black lung diseasefo id103 and now vaccine injuriesfo id104 as well as making itself responsible for excess insurance for nuclear accidents
# ::alignments 53-54|0.0.2.0.2.2.0 52-53|0.0.2.0.0.0.1.0 50-51|0.0.2.0.2.2 49-50|0.0.2.0.2.2.1 47-48|0.0.2.0.2 43-44|0.0.2.0.2.1 39-40|0.0.3 38-39|0.1 37-38|0 33-34|0.0.2.0.2.0 32-33|0.0.2.0.2.0.0 31-32|0.0.2.0.0.0.1 30-31|0.0.2.0.0.0.1.2 28-29|0.0.2.0.0.0.1.1 27-28|0.0.2.0.0.0.1.1.0 26-27|0.0.2.0.0.0.1.1.1 22-23|0.0.2.0.1 21-22|0.0.2.0.1.0 20-21|0.0.2.0 19-20|0.0 18-19|0.0.1 16-17|0.0.2 14-15|0.0.0 11-12|0.0.2.0.0.1.0.0 9-10|0.0.2.0.0.1.0 8-9|0.0.2.0.0.1.1 6-7|0.0.2.0.0.1 4-5|0.0.2.0.0 3-4|0.0.2.0.0.0.0+0.0.2.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:35.367
# ::node	0	and	37-38
# ::node	0.0	insure-02	19-20
# ::node	0.0.0	many	14-15
# ::node	0.0.1	automobile	18-19
# ::node	0.0.2	enact-01	16-17
# ::node	0.0.2.0	and	20-21
# ::node	0.0.2.0.0	compensate-01	4-5
# ::node	0.0.2.0.0.0	person	3-4
# ::node	0.0.2.0.0.0.0	work-01	3-4
# ::node	0.0.2.0.0.0.1	injure-01	31-32
# ::node	0.0.2.0.0.0.1.0	nucleus	52-53
# ::node	0.0.2.0.0.0.1.1	plan-01	28-29
# ::node	0.0.2.0.0.0.1.1.0	compensate-01	27-28
# ::node	0.0.2.0.0.0.1.1.1	several	26-27
# ::node	0.0.2.0.0.0.1.2	special	30-31
# ::node	0.0.2.0.0.1	number	6-7
# ::node	0.0.2.0.0.1.0	require-01	9-10
# ::node	0.0.2.0.0.1.0.0	disability	11-12
# ::node	0.0.2.0.0.1.1	state	8-9
# ::node	0.0.2.0.1	legislation	22-23
# ::node	0.0.2.0.1.0	federal	21-22
# ::node	0.0.2.0.2	responsible-41	47-48
# ::node	0.0.2.0.2.0	black	33-34
# ::node	0.0.2.0.2.0.0	notable	32-33
# ::node	0.0.2.0.2.1	well	43-44
# ::node	0.0.2.0.2.2	insure-02	50-51
# ::node	0.0.2.0.2.2.0	accident	53-54
# ::node	0.0.2.0.2.2.1	exceed-01	49-50
# ::node	0.0.3	vaccine	39-40
# ::node	0.1	now	38-39
# ::root	0	and
# ::edge	and	op1	compensate-01	0.0.2.0	0.0.2.0.0	
# ::edge	and	op1	insure-02	0	0.0	
# ::edge	and	op2	legislation	0.0.2.0	0.0.2.0.1	
# ::edge	and	op3	responsible-41	0.0.2.0	0.0.2.0.2	
# ::edge	and	time	now	0	0.1	
# ::edge	black	degree	notable	0.0.2.0.2.0	0.0.2.0.2.0.0	
# ::edge	compensate-01	ARG0	person	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	compensate-01	ARG1	number	0.0.2.0.0	0.0.2.0.0.1	
# ::edge	compensate-01	ARG1	plan-01	0.0.2.0.0.0.1.1.0	0.0.2.0.0.0.1.1	
# ::edge	enact-01	ARG1	insure-02	0.0.2	0.0	
# ::edge	enact-01	ARG2	and	0.0.2	0.0.2.0	
# ::edge	exceed-01	ARG1	insure-02	0.0.2.0.2.2.1	0.0.2.0.2.2	
# ::edge	injure-01	ARG0	nucleus	0.0.2.0.0.0.1	0.0.2.0.0.0.1.0	
# ::edge	injure-01	ARG1	person	0.0.2.0.0.0.1	0.0.2.0.0.0	
# ::edge	injure-01	mod	special	0.0.2.0.0.0.1	0.0.2.0.0.0.1.2	
# ::edge	insure-02	ARG0	many	0.0	0.0.0	
# ::edge	insure-02	ARG1	accident	0.0.2.0.2.2	0.0.2.0.2.2.0	
# ::edge	insure-02	ARG1	automobile	0.0	0.0.1	
# ::edge	legislation	mod	federal	0.0.2.0.1	0.0.2.0.1.0	
# ::edge	plan-01	ARG1	injure-01	0.0.2.0.0.0.1.1	0.0.2.0.0.0.1	
# ::edge	plan-01	quant	several	0.0.2.0.0.0.1.1	0.0.2.0.0.0.1.1.1	
# ::edge	require-01	ARG0	number	0.0.2.0.0.1.0	0.0.2.0.0.1	
# ::edge	require-01	ARG1	disability	0.0.2.0.0.1.0	0.0.2.0.0.1.0.0	
# ::edge	responsible-41	ARG0	black	0.0.2.0.2	0.0.2.0.2.0	
# ::edge	responsible-41	ARG1	well	0.0.2.0.2	0.0.2.0.2.1	
# ::edge	responsible-41	ARG2	insure-02	0.0.2.0.2	0.0.2.0.2.2	
# ::edge	state	quant	number	0.0.2.0.0.1.1	0.0.2.0.0.1	
# ::edge	vaccine	location	insure-02	0.0.3	0.0	
# ::edge	work-01	ARG0	person	0.0.2.0.0.0.0	0.0.2.0.0.0	
(a2 / and 
      :op1 (i3 / insure-02 
            :ARG0 (m / many) 
            :ARG1 (a4 / automobile) 
            :ARG1-of (e2 / enact-01 
                  :ARG2 (a3 / and 
                        :op1 (c2 / compensate-01 
                              :ARG0 (p2 / person 
                                    :ARG0-of (w2 / work-01) 
                                    :ARG1-of (i2 / injure-01 
                                          :ARG0 (n / nucleus) 
                                          :ARG1-of (p / plan-01 
                                                :ARG1-of (c / compensate-01) 
                                                :quant (s2 / several)) 
                                          :mod (s / special))) 
                              :ARG1 (n4 / number 
                                    :ARG0-of (r2 / require-01 
                                          :ARG1 (d / disability)) 
                                    :quant-of (s3 / state))) 
                        :op2 (l / legislation 
                              :mod (f / federal)) 
                        :op3 (r / responsible-41 
                              :ARG0 (b / black 
                                    :degree (n3 / notable)) 
                              :ARG1 (w / well) 
                              :ARG2 (i / insure-02 
                                    :ARG1 (a / accident) 
                                    :ARG1-of (e / exceed-01))))) 
            :location-of (v / vaccine)) 
      :time (n2 / now))

# ::snt last saturday i spent two hours assisting at a road accident dash
# ::tok last saturday i spent two hours assisting at a road accident dash
# ::alignments 10-11|0.1.0.0 9-10|0.1.0 6-7|0.1 5-6|0.1.1.1+0.1.1 4-5|0.1.1.0 3-4|0 2-3|0.0 1-2|0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:35.484
# ::node	0	spend-01	3-4
# ::node	0.0	i	2-3
# ::node	0.0.0	saturday	1-2
# ::node	0.0.0.0	last	0-1
# ::node	0.1	assist-01	6-7
# ::node	0.1.0	road	9-10
# ::node	0.1.0.0	accident	10-11
# ::node	0.1.1	temporal-quantity	5-6
# ::node	0.1.1.0	2	4-5
# ::node	0.1.1.1	hour	5-6
# ::root	0	spend-01
# ::edge	accident	mod	road	0.1.0.0	0.1.0	
# ::edge	assist-01	ARG0	road	0.1	0.1.0	
# ::edge	assist-01	ARG1	temporal-quantity	0.1	0.1.1	
# ::edge	saturday	mod	last	0.0.0	0.0.0.0	
# ::edge	saturday	name	i	0.0.0	0.0	
# ::edge	spend-01	ARG0	i	0	0.0	
# ::edge	spend-01	ARG1	assist-01	0	0.1	
# ::edge	temporal-quantity	quant	2	0.1.1	0.1.1.0	
# ::edge	temporal-quantity	unit	hour	0.1.1	0.1.1.1	
(s / spend-01 
      :ARG0 (i / i 
            :name-of (s2 / saturday 
                  :mod (l / last))) 
      :ARG1 (a2 / assist-01 
            :ARG0 (r / road 
                  :mod-of (a / accident)) 
            :ARG1 (t / temporal-quantity 
                  :quant 2 
                  :unit (h / hour))))

# ::snt the accident occurred while the reactor was shut down for refuelling so there was no release of radioactivity, the plant has been out of commission ever since the accident while the cegbs engineers try to hoover up the bits at the bottom of the shaft and restore the reactor to an operable condition
# ::tok the accident occurred while the reactor was shut down for refuelling so there was no release of radioactivity , the plant has been out of commission ever since the accident while the cegbs engineers try to hoover up the bits at the bottom of the shaft and restore the reactor to an operable condition
# ::alignments 53-54|0.4.1 49-50|0.4.0 47-48|0.4 46-47|0 45-46|0.3 42-43|0.2 39-40|0.1 34-35|0.0 33-34|0.0.0.0+0.0.0 29-30|0.0.1.0 27-28|0.0.1 26-27|0.0.1.1 25-26|0.4.2 20-21|0.0.2.3.0 17-18|0.0.2.0.0 15-16|0.0.2.0 14-15|0.0.2.0.1 11-12|0.0.2.2 10-11|0.0.2 8-9|0.0.2.3.2 7-8|0.0.2.3 5-6|0.0.2.3.1 1-2|0.0.2.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:36.500
# ::node	0	and	46-47
# ::node	0.0	try-01	34-35
# ::node	0.0.0	person	33-34
# ::node	0.0.0.0	engineer-01	33-34
# ::node	0.0.1	since	27-28
# ::node	0.0.1.0	accident	29-30
# ::node	0.0.1.1	ever	26-27
# ::node	0.0.2	refuel-01	10-11
# ::node	0.0.2.0	release-01	15-16
# ::node	0.0.2.0.0	radioactivity	17-18
# ::node	0.0.2.0.1	-	14-15
# ::node	0.0.2.1	accident	1-2
# ::node	0.0.2.2	so	11-12
# ::node	0.0.2.3	shut-05	7-8
# ::node	0.0.2.3.0	plant	20-21
# ::node	0.0.2.3.1	reactor	5-6
# ::node	0.0.2.3.2	down	8-9
# ::node	0.1	bit	39-40
# ::node	0.2	bottom	42-43
# ::node	0.3	shaft	45-46
# ::node	0.4	restore-01	47-48
# ::node	0.4.0	reactor	49-50
# ::node	0.4.1	condition	53-54
# ::node	0.4.2	commission	25-26
# ::root	0	and
# ::edge	and	op1	bit	0	0.1	
# ::edge	and	op2	bottom	0	0.2	
# ::edge	and	op3	shaft	0	0.3	
# ::edge	and	op4	restore-01	0	0.4	
# ::edge	commission	op1	restore-01	0.4.2	0.4	
# ::edge	engineer-01	ARG0	person	0.0.0.0	0.0.0	
# ::edge	refuel-01	ARG0	release-01	0.0.2	0.0.2.0	
# ::edge	refuel-01	ARG1	accident	0.0.2	0.0.2.1	
# ::edge	refuel-01	ARG2	try-01	0.0.2	0.0	
# ::edge	refuel-01	manner	so	0.0.2	0.0.2.2	
# ::edge	release-01	ARG2	radioactivity	0.0.2.0	0.0.2.0.0	
# ::edge	release-01	polarity	-	0.0.2.0	0.0.2.0.1	
# ::edge	restore-01	ARG1	reactor	0.4	0.4.0	
# ::edge	restore-01	ARG2	condition	0.4	0.4.1	
# ::edge	shut-05	ARG0	plant	0.0.2.3	0.0.2.3.0	
# ::edge	shut-05	ARG1	reactor	0.0.2.3	0.0.2.3.1	
# ::edge	shut-05	direction	down	0.0.2.3	0.0.2.3.2	
# ::edge	shut-05	manner	refuel-01	0.0.2.3	0.0.2	
# ::edge	since	op1	accident	0.0.1	0.0.1.0	
# ::edge	since	time	ever	0.0.1	0.0.1.1	
# ::edge	try-01	ARG0	person	0.0	0.0.0	
# ::edge	try-01	ARG1	and	0.0	0	
# ::edge	try-01	ARG2	since	0.0	0.0.1	
(a / and 
      :ARG1-of (t / try-01 
            :ARG0 (p / person 
                  :ARG0-of (e / engineer-01)) 
            :ARG2 (s2 / since 
                  :op1 (a2 / accident) 
                  :time (e2 / ever)) 
            :ARG2-of (r5 / refuel-01 
                  :ARG0 (r4 / release-01 
                        :ARG2 (r3 / radioactivity) 
                        :polarity (- / -)) 
                  :ARG1 (a3 / accident) 
                  :manner (s3 / so) 
                  :manner-of (s4 / shut-05 
                        :ARG0 (p2 / plant) 
                        :ARG1 (r6 / reactor) 
                        :direction (d / down)))) 
      :op1 (b2 / bit) 
      :op2 (b / bottom) 
      :op3 (s / shaft) 
      :op4 (r2 / restore-01 
            :ARG1 (r / reactor) 
            :ARG2 (c / condition) 
            :op-of (c2 / commission)))

# ::snt the band decided to buy them because one of their members mrs jean lidbury of west hanney benefitted from a similar machine after injuring her back in a road accident
# ::tok the band decided to buy them because one of their members mrs jean lidbury of west hanney benefitted from a similar machine after injuring her back in a road accident
# ::alignments 29-30|0.1.1 28-29|0.1.1.0 25-26|0.1 22-23|0.2 21-22|0.0 17-18|0 15-16|0.1.0.1.0 10-11|0.1.0.3.0+0.1.0.3 6-7|0.1.0.1 4-5|0.1.0 2-3|0.1.0.2 1-2|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:36.682
# ::node	0	benefit-01	17-18
# ::node	0.0	machine	21-22
# ::node	0.1	back	25-26
# ::node	0.1.0	buy-01	4-5
# ::node	0.1.0.0	band	1-2
# ::node	0.1.0.1	cause-01	6-7
# ::node	0.1.0.1.0	west	15-16
# ::node	0.1.0.2	decide-01	2-3
# ::node	0.1.0.3	have-org-role-91	10-11
# ::node	0.1.0.3.0	member	10-11
# ::node	0.1.1	accident	29-30
# ::node	0.1.1.0	road	28-29
# ::node	0.2	after	22-23
# ::root	0	benefit-01
# ::edge	accident	location	road	0.1.1	0.1.1.0	
# ::edge	back	location	accident	0.1	0.1.1	
# ::edge	benefit-01	ARG0	machine	0	0.0	
# ::edge	benefit-01	ARG1	back	0	0.1	
# ::edge	benefit-01	time	after	0	0.2	
# ::edge	buy-01	ARG0	band	0.1.0	0.1.0.0	
# ::edge	buy-01	ARG1	back	0.1.0	0.1	
# ::edge	cause-01	ARG0	west	0.1.0.1	0.1.0.1.0	
# ::edge	cause-01	ARG1	buy-01	0.1.0.1	0.1.0	
# ::edge	decide-01	ARG1	buy-01	0.1.0.2	0.1.0	
# ::edge	have-org-role-91	ARG1	buy-01	0.1.0.3	0.1.0	
# ::edge	have-org-role-91	ARG2	member	0.1.0.3	0.1.0.3.0	
(b2 / benefit-01 
      :ARG0 (m / machine) 
      :ARG1 (b / back 
            :ARG1-of (b3 / buy-01 
                  :ARG0 (b4 / band) 
                  :ARG1-of (c / cause-01 
                        :ARG0 (w / west)) 
                  :ARG1-of (d / decide-01) 
                  :ARG1-of (h / have-org-role-91 
                        :ARG2 (m2 / member))) 
            :location (a / accident 
                  :location (r / road))) 
      :time (a2 / after))

# ::snt bill campbell of the transport and general workers union the biggest ambulance union north of the border said accident and emergency men had walked out in anger and frustration, for some to come back even at this late stage to maintain accident and emergency services
# ::tok bill campbell of the transport and general workers union the biggest ambulance union north of the border said accident and emergency men had walked out in anger and frustration , for some to come back even at this late stage to maintain accident and emergency services
# ::alignments 45-46|0.0.0.2.1 44-45|0.0.0.2.1.0 43-44|0.0.0.2.2 42-43|0.0.0.2.2.0 41-42|0.0.0.2 39-40|0.0.0.2.0 38-39|0.0.0.2.0.1 37-38|0.0.0.2.0.0 34-35|0.0.0.0.0.1.0.1 31-32|0.0.0.0.0.0 28-29|0.0.0.0.0.1.0 27-28|0.0.0.0.0.1 26-27|0.0.0.0.0 23-24|0.0.0 21-22|0.0.0.0 20-21|0.0.2 19-20|0.0 18-19|0.0.1 17-18|0 16-17|0.0.0.1 13-14|0.0.0.0.0.1.0.0.1.0.1 12-13|0.0.0.1.0 11-12|0.0.0.1.0.0 10-11|0.0.0.0.0.1.0.0.1.0.0+0.0.0.0.0.1.0.0.1.0 8-9|0.0.0.0.0.1.0.0.1 7-8|0.0.0.0.0.1.0.0.0+0.0.0.0.0.1.0.0 6-7|0.0.0.0.0.1.0.0.0.0 5-6|0.0.0.0.0.1.0.0.2 4-5|0.0.0.0.0.1.0.0.2.1 0-1|0.0.0.0.0.1.0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:38.165
# ::node	0	say-01	17-18
# ::node	0.0	and	19-20
# ::node	0.0.0	walk-01	23-24
# ::node	0.0.0.0	man	21-22
# ::node	0.0.0.0.0	anger-01	26-27
# ::node	0.0.0.0.0.0	some	31-32
# ::node	0.0.0.0.0.1	and	27-28
# ::node	0.0.0.0.0.1.0	frustrate-01	28-29
# ::node	0.0.0.0.0.1.0.0	person	7-8
# ::node	0.0.0.0.0.1.0.0.0	work-01	7-8
# ::node	0.0.0.0.0.1.0.0.0.0	general	6-7
# ::node	0.0.0.0.0.1.0.0.1	union	8-9
# ::node	0.0.0.0.0.1.0.0.1.0	big	10-11
# ::node	0.0.0.0.0.1.0.0.1.0.0	most	10-11
# ::node	0.0.0.0.0.1.0.0.1.0.1	north	13-14
# ::node	0.0.0.0.0.1.0.0.2	and	5-6
# ::node	0.0.0.0.0.1.0.0.2.0	bill	0-1
# ::node	0.0.0.0.0.1.0.0.2.1	transport-01	4-5
# ::node	0.0.0.0.0.1.0.1	back	34-35
# ::node	0.0.0.1	border-01	16-17
# ::node	0.0.0.1.0	union	12-13
# ::node	0.0.0.1.0.0	ambulance	11-12
# ::node	0.0.0.2	maintain-01	41-42
# ::node	0.0.0.2.0	stage	39-40
# ::node	0.0.0.2.0.0	this	37-38
# ::node	0.0.0.2.0.1	late	38-39
# ::node	0.0.0.2.1	service	45-46
# ::node	0.0.0.2.1.0	emergency	44-45
# ::node	0.0.0.2.2	and	43-44
# ::node	0.0.0.2.2.0	accident	42-43
# ::node	0.0.1	accident	18-19
# ::node	0.0.2	emergency	20-21
# ::root	0	say-01
# ::edge	and	mod	bill	0.0.0.0.0.1.0.0.2	0.0.0.0.0.1.0.0.2.0	
# ::edge	and	op1	accident	0.0	0.0.1	
# ::edge	and	op1	anger-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	and	op1	maintain-01	0.0.0.2.2	0.0.0.2	
# ::edge	and	op1	transport-01	0.0.0.0.0.1.0.0.2	0.0.0.0.0.1.0.0.2.1	
# ::edge	and	op2	accident	0.0.0.2.2	0.0.0.2.2.0	
# ::edge	and	op2	emergency	0.0	0.0.2	
# ::edge	and	op2	frustrate-01	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	and	op2	person	0.0.0.0.0.1.0.0.2	0.0.0.0.0.1.0.0	
# ::edge	anger-01	ARG0	some	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	anger-01	ARG1	man	0.0.0.0.0	0.0.0.0	
# ::edge	big	degree	most	0.0.0.0.0.1.0.0.1.0	0.0.0.0.0.1.0.0.1.0.0	
# ::edge	big	domain	union	0.0.0.0.0.1.0.0.1.0	0.0.0.0.0.1.0.0.1	
# ::edge	border-01	ARG2	union	0.0.0.1	0.0.0.1.0	
# ::edge	frustrate-01	ARG0	person	0.0.0.0.0.1.0	0.0.0.0.0.1.0.0	
# ::edge	frustrate-01	ARG1	back	0.0.0.0.0.1.0	0.0.0.0.0.1.0.1	
# ::edge	maintain-01	ARG0	stage	0.0.0.2	0.0.0.2.0	
# ::edge	maintain-01	ARG1	service	0.0.0.2	0.0.0.2.1	
# ::edge	north	mod	big	0.0.0.0.0.1.0.0.1.0.1	0.0.0.0.0.1.0.0.1.0	
# ::edge	say-01	ARG1	and	0	0.0	
# ::edge	service	mod	emergency	0.0.0.2.1	0.0.0.2.1.0	
# ::edge	stage	mod	this	0.0.0.2.0	0.0.0.2.0.0	
# ::edge	stage	time	late	0.0.0.2.0	0.0.0.2.0.1	
# ::edge	union	mod	ambulance	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	union	mod	person	0.0.0.0.0.1.0.0.1	0.0.0.0.0.1.0.0	
# ::edge	walk-01	ARG0	and	0.0.0	0.0	
# ::edge	walk-01	ARG1	man	0.0.0	0.0.0.0	
# ::edge	walk-01	ARG2	border-01	0.0.0	0.0.0.1	
# ::edge	walk-01	purpose	maintain-01	0.0.0	0.0.0.2	
# ::edge	work-01	ARG0	person	0.0.0.0.0.1.0.0.0	0.0.0.0.0.1.0.0	
# ::edge	work-01	ARG1	general	0.0.0.0.0.1.0.0.0	0.0.0.0.0.1.0.0.0.0	
(s4 / say-01 
      :ARG1 (a5 / and 
            :ARG0-of (w / walk-01 
                  :ARG1 (m2 / man 
                        :ARG1-of (a4 / anger-01 
                              :ARG0 (s3 / some) 
                              :op-of (a3 / and 
                                    :op1 (f / frustrate-01 
                                          :ARG0 (p / person 
                                                :ARG0-of (w2 / work-01 
                                                      :ARG1 (g / general)) 
                                                :mod-of (u2 / union 
                                                      :domain-of (b3 / big 
                                                            :degree (m3 / most) 
                                                            :mod-of (n / north))) 
                                                :op-of (a8 / and 
                                                      :mod (b4 / bill) 
                                                      :op1 (t2 / transport-01))) 
                                          :ARG1 (b / back))))) 
                  :ARG2 (b2 / border-01 
                        :ARG2 (u / union 
                              :mod (a7 / ambulance))) 
                  :purpose (m / maintain-01 
                        :ARG0 (s2 / stage 
                              :mod (t / this) 
                              :time (l / late)) 
                        :ARG1 (s / service 
                              :mod (e / emergency)) 
                        :op-of (a / and 
                              :op1 (a2 / accident)))) 
            :op1 (a6 / accident) 
            :op2 (e2 / emergency)))

# ::snt notable are claims by railroad employees and maritime workers under federal legislation which has preserved employers tort liability for work accidents in lieu of workers compensation
# ::tok notable are claims by railroad employees and maritime workers under federal legislation which has preserved employers tort liability for work accidents in lieu of workers compensation
# ::alignments 25-26|0.0.0.1 24-25|0.0.0.1.0.0+0.0.0.1.0 20-21|0.2.0 17-18|0.2 11-12|0.1.0.0 10-11|0.1.0.0.0 8-9|0.1.0+0.1 7-8|0.1.1 6-7|0 5-6|0.0.0.0+0.0.0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:38.393
# ::node	0	and	6-7
# ::node	0.0	claim-01	2-3
# ::node	0.0.0	person	5-6
# ::node	0.0.0.0	employ-01	5-6
# ::node	0.0.0.1	compensate-01	25-26
# ::node	0.0.0.1.0	person	24-25
# ::node	0.0.0.1.0.0	work-01	24-25
# ::node	0.1	person	8-9
# ::node	0.1.0	work-01	8-9
# ::node	0.1.0.0	legislation	11-12
# ::node	0.1.0.0.0	federal	10-11
# ::node	0.1.1	maritime	7-8
# ::node	0.2	liability	17-18
# ::node	0.2.0	accident	20-21
# ::root	0	and
# ::edge	and	op1	person	0	0.1	
# ::edge	claim-01	ARG0	person	0.0	0.0.0	
# ::edge	claim-01	ARG1	and	0.0	0	
# ::edge	compensate-01	ARG0	person	0.0.0.1	0.0.0.1.0	
# ::edge	compensate-01	ARG2	person	0.0.0.1	0.0.0	
# ::edge	employ-01	ARG1	person	0.0.0.0	0.0.0	
# ::edge	legislation	mod	federal	0.1.0.0	0.1.0.0.0	
# ::edge	liability	poss	accident	0.2	0.2.0	
# ::edge	liability	poss	and	0.2	0	
# ::edge	person	mod	maritime	0.1	0.1.1	
# ::edge	work-01	ARG0	person	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	work-01	ARG0	person	0.1.0	0.1	
# ::edge	work-01	ARG1	legislation	0.1.0	0.1.0.0	
(a2 / and 
      :ARG1-of (c2 / claim-01 
            :ARG0 (p3 / person 
                  :ARG1-of (e / employ-01) 
                  :ARG2-of (c / compensate-01 
                        :ARG0 (p / person 
                              :ARG0-of (w / work-01))))) 
      :op1 (p2 / person 
            :ARG0-of (w2 / work-01 
                  :ARG1 (l2 / legislation 
                        :mod (f / federal))) 
            :mod (m / maritime)) 
      :poss-of (l / liability 
            :poss (a / accident)))

# ::snt so please take this opportunity to protect yourself and if appropriate your whole family too with the midland personal accident plan
# ::tok so please take this opportunity to protect yourself and if appropriate your whole family too with the midland personal accident plan
# ::alignments 20-21|0.0.0.0.0.2 19-20|0.0.0.0.0.2.0 18-19|0.0.0.0.0.2.0.0 14-15|0.0.0.0.0.0 13-14|0.0.0.0.0.1 12-13|0.0.0.0.0.1.0 10-11|0.0.0.0.0 8-9|0.0.0.0 6-7|0.0.0 4-5|0.0 3-4|0.0.1 1-2|0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:38.518
# ::node	0	please-01	1-2
# ::node	0.0	opportunity	4-5
# ::node	0.0.0	protect-01	6-7
# ::node	0.0.0.0	and	8-9
# ::node	0.0.0.0.0	appropriate	10-11
# ::node	0.0.0.0.0.0	too	14-15
# ::node	0.0.0.0.0.1	family	13-14
# ::node	0.0.0.0.0.1.0	whole	12-13
# ::node	0.0.0.0.0.2	plan-01	20-21
# ::node	0.0.0.0.0.2.0	accident	19-20
# ::node	0.0.0.0.0.2.0.0	personal	18-19
# ::node	0.0.1	this	3-4
# ::node	0.1	so	0-1
# ::root	0	please-01
# ::edge	accident	mod	personal	0.0.0.0.0.2.0	0.0.0.0.0.2.0.0	
# ::edge	and	op1	appropriate	0.0.0.0	0.0.0.0.0	
# ::edge	appropriate	mod	too	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	appropriate	prep-with	plan-01	0.0.0.0.0	0.0.0.0.0.2	
# ::edge	family	mod	whole	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	family	poss	appropriate	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	opportunity	mod	protect-01	0.0	0.0.0	
# ::edge	opportunity	mod	this	0.0	0.0.1	
# ::edge	plan-01	ARG1	accident	0.0.0.0.0.2	0.0.0.0.0.2.0	
# ::edge	please-01	ARG1	opportunity	0	0.0	
# ::edge	protect-01	ARG1	and	0.0.0	0.0.0.0	
# ::edge	so	op1	please-01	0.1	0	
(p4 / please-01 
      :ARG1 (o / opportunity 
            :mod (p3 / protect-01 
                  :ARG1 (a3 / and 
                        :op1 (a2 / appropriate 
                              :mod (t / too) 
                              :poss-of (f / family 
                                    :mod (w / whole)) 
                              :prep-with (p / plan-01 
                                    :ARG1 (a / accident 
                                          :mod (p2 / personal)))))) 
            :mod (t2 / this)) 
      :op-of (s / so))

# ::snt beaten 82 by a greater manchester team which included four schoolboy internationals berkshire morale was further dented when six hours after departure their team coach which had already encountered galeforce winds driving rain and two major accidents was still some way short of reading
# ::tok beaten 82 by a greater manchester team which included four schoolboy internationals berkshire morale was further dented when six hours after departure their team coach which had already encountered galeforce winds driving rain and two major accidents was still some way short of reading
# ::alignments 43-44|0.0.0 41-42|0.0.0.1 40-41|0.0.0.0.1 39-40|0.0.0.0 38-39|0.0.0.0.0 36-37|0.1.0.0 35-36|0.1.0.0.0 34-35|0.1.0.1.1.1 33-34|0.1.0.1 32-33|0.1.0.1.1 31-32|0.1.0 30-31|0.1 28-29|0 27-28|0.2 24-25|0.0.1+0.0 23-24|0.0.1.0 21-22|0.0.1.1.0 20-21|0.0.1.1 19-20|0.0.1.1.0.0.1+0.0.1.1.0.0 18-19|0.0.1.1.0.0.0 15-16|0.0.1.1.0.1 9-10|0.1.0.1.1.0 8-9|0.1.0.1.0 6-7|0.1.0.1.0.0 5-6|0.1.0.1.0.0.1.0.0+0.1.0.1.0.0.1.0+0.1.0.1.0.0.1 4-5|0.1.0.1.0.0.0 1-2|0.0.1.1.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:39.960
# ::node	0	encounter-01	28-29
# ::node	0.0	person	24-25
# ::node	0.0.0	read-01	43-44
# ::node	0.0.0.0	some	39-40
# ::node	0.0.0.0.0	still	38-39
# ::node	0.0.0.0.1	way	40-41
# ::node	0.0.0.1	short	41-42
# ::node	0.0.1	coach-01	24-25
# ::node	0.0.1.0	team	23-24
# ::node	0.0.1.1	after	20-21
# ::node	0.0.1.1.0	depart-01	21-22
# ::node	0.0.1.1.0.0	temporal-quantity	19-20
# ::node	0.0.1.1.0.0.0	6	18-19
# ::node	0.0.1.1.0.0.1	hour	19-20
# ::node	0.0.1.1.0.1	further	15-16
# ::node	0.0.1.1.0.2	82	1-2
# ::node	0.1	wind	30-31
# ::node	0.1.0	drive-01	31-32
# ::node	0.1.0.0	accident	36-37
# ::node	0.1.0.0.0	major	35-36
# ::node	0.1.0.1	and	33-34
# ::node	0.1.0.1.0	include-01	8-9
# ::node	0.1.0.1.0.0	team	6-7
# ::node	0.1.0.1.0.0.0	great	4-5
# ::node	0.1.0.1.0.0.1	city	5-6
# ::node	0.1.0.1.0.0.1.0	name	5-6
# ::node	0.1.0.1.0.0.1.0.0	"Manchester"	5-6
# ::node	0.1.0.1.1	rain-01	32-33
# ::node	0.1.0.1.1.0	4	9-10
# ::node	0.1.0.1.1.1	2	34-35
# ::node	0.2	already	27-28
# ::root	0	encounter-01
# ::edge	82	op1	depart-01	0.0.1.1.0.2	0.0.1.1.0	
# ::edge	accident	mod	major	0.1.0.0	0.1.0.0.0	
# ::edge	after	op1	depart-01	0.0.1.1	0.0.1.1.0	
# ::edge	and	op1	drive-01	0.1.0.1	0.1.0	
# ::edge	and	op2	rain-01	0.1.0.1	0.1.0.1.1	
# ::edge	city	name	name	0.1.0.1.0.0.1	0.1.0.1.0.0.1.0	
# ::edge	coach-01	ARG0	person	0.0.1	0.0	
# ::edge	coach-01	ARG1	team	0.0.1	0.0.1.0	
# ::edge	coach-01	time	after	0.0.1	0.0.1.1	
# ::edge	depart-01	ARG0	temporal-quantity	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	depart-01	ARG1	further	0.0.1.1.0	0.0.1.1.0.1	
# ::edge	drive-01	ARG0	wind	0.1.0	0.1	
# ::edge	drive-01	ARG1	accident	0.1.0	0.1.0.0	
# ::edge	encounter-01	ARG0	person	0	0.0	
# ::edge	encounter-01	ARG1	wind	0	0.1	
# ::edge	encounter-01	time	already	0	0.2	
# ::edge	include-01	ARG0	team	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	include-01	ARG1	and	0.1.0.1.0	0.1.0.1	
# ::edge	name	op1	"Manchester"	0.1.0.1.0.0.1.0	0.1.0.1.0.0.1.0.0	
# ::edge	rain-01	ARG1	4	0.1.0.1.1	0.1.0.1.1.0	
# ::edge	rain-01	quant	2	0.1.0.1.1	0.1.0.1.1.1	
# ::edge	read-01	ARG0	person	0.0.0	0.0	
# ::edge	read-01	ARG1	some	0.0.0	0.0.0.0	
# ::edge	read-01	time	short	0.0.0	0.0.0.1	
# ::edge	some	mod	still	0.0.0.0	0.0.0.0.0	
# ::edge	team	mod	city	0.1.0.1.0.0	0.1.0.1.0.0.1	
# ::edge	team	mod	great	0.1.0.1.0.0	0.1.0.1.0.0.0	
# ::edge	temporal-quantity	quant	6	0.0.1.1.0.0	0.0.1.1.0.0.0	
# ::edge	temporal-quantity	unit	hour	0.0.1.1.0.0	0.0.1.1.0.0.1	
# ::edge	way	mod	some	0.0.0.0.1	0.0.0.0	
(e / encounter-01 
      :ARG0 (p / person 
            :ARG0-of (r / read-01 
                  :ARG1 (s2 / some 
                        :mod (s3 / still) 
                        :mod-of (w / way)) 
                  :time (s / short)) 
            :ARG0-of (c / coach-01 
                  :ARG1 (t / team) 
                  :time (a4 / after 
                        :op1 (d2 / depart-01 
                              :ARG0 (t2 / temporal-quantity 
                                    :quant 6 
                                    :unit (h / hour)) 
                              :ARG1 (f / further) 
                              :op-of 82)))) 
      :ARG1 (w2 / wind 
            :ARG0-of (d / drive-01 
                  :ARG1 (a / accident 
                        :mod (m / major)) 
                  :op-of (a2 / and 
                        :ARG1-of (i / include-01 
                              :ARG0 (t3 / team 
                                    :mod (g / great) 
                                    :mod (c2 / city 
                                          :name (n / name 
                                                :op1 "Manchester")))) 
                        :op1 (r2 / rain-01 
                              :ARG1 4 
                              :quant 2)))) 
      :time (a3 / already))

# ::snt the report points out that the third world could not afford to build nuclear power stations and that expanding nuclear power would also add to the problems of radioactive waste and increase the danger of catastrophic accidents
# ::tok the report points out that the third world could not afford to build nuclear power stations and that expanding nuclear power would also add to the problems of radioactive waste and increase the danger of catastrophic accidents
# ::alignments 36-37|0.0.1.0.1 35-36|0.0.1.0.1.0 33-34|0 31-32|0.0 30-31|0.0.1 29-30|0.0.1.0.2.0 28-29|0.0.1.0.2.0.0 26-27|0.0.1.0.2 23-24|0.0.1.0 22-23|0.0.1.0.3 20-21|0.0.1.0.0.0 19-20|0.0.0.1.0.0.1.1 18-19|0.0.1.0.0 16-17|0.0.0 15-16|0.0.0.1.0.0.1 14-15|0.0.0.1.0.0.1.0 13-14|0.0.0.1.0.0.1.0.0 12-13|0.0.0.1.0.0 10-11|0.0.0.1.0 8-9|0.0.0.1 7-8|0.0.0.1.0.0.0 2-3|0.0.0.0 1-2|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:40.266
# ::node	0	danger	33-34
# ::node	0.0	increase-01	31-32
# ::node	0.0.0	and	16-17
# ::node	0.0.0.0	point	2-3
# ::node	0.0.0.0.0	report	1-2
# ::node	0.0.0.1	possible	8-9
# ::node	0.0.0.1.0	afford-01	10-11
# ::node	0.0.0.1.0.0	build-01	12-13
# ::node	0.0.0.1.0.0.0	world	7-8
# ::node	0.0.0.1.0.0.1	station	15-16
# ::node	0.0.0.1.0.0.1.0	power	14-15
# ::node	0.0.0.1.0.0.1.0.0	nucleus	13-14
# ::node	0.0.0.1.0.0.1.1	nucleus	19-20
# ::node	0.0.1	and	30-31
# ::node	0.0.1.0	add-02	23-24
# ::node	0.0.1.0.0	expand-01	18-19
# ::node	0.0.1.0.0.0	power	20-21
# ::node	0.0.1.0.1	accident	36-37
# ::node	0.0.1.0.1.0	catastrophic	35-36
# ::node	0.0.1.0.2	problem	26-27
# ::node	0.0.1.0.2.0	waste-01	29-30
# ::node	0.0.1.0.2.0.0	radioactive	28-29
# ::node	0.0.1.0.3	also	22-23
# ::root	0	danger
(d / danger 
      :ARG1-of (i / increase-01 
            :op-of (a5 / and 
                  :op1 (p5 / point 
                        :mod (r2 / report)) 
                  :op2 (p4 / possible 
                        :domain (a6 / afford-01 
                              :ARG1 (b / build-01 
                                    :ARG0 (w2 / world) 
                                    :ARG1 (s / station 
                                          :mod (p3 / power 
                                                :mod (n2 / nucleus)) 
                                          :mod (n / nucleus)))))) 
            :op-of (a2 / and 
                  :op1 (a3 / add-02 
                        :ARG0 (e / expand-01 
                              :ARG1 (p2 / power)) 
                        :ARG1 (a / accident 
                              :mod (c / catastrophic)) 
                        :ARG2 (p / problem 
                              :topic (w / waste-01 
                                    :mod (r / radioactive))) 
                        :mod (a4 / also)))))

# ::snt a man was beginning a jail sentence of seven years today for cutting off his former girlfriends ears and beating her up while she was helpless in a plaster cast after a road accident
# ::tok a man was beginning a jail sentence of seven years today for cutting off his former girlfriends ears and beating her up while she was helpless in a plaster cast after a road accident
# ::alignments 33-34|0.0.0.1.0.1.1.0.0 32-33|0.0.0.1.0.1.1.0.0.0 30-31|0.0.0.1.0.1.1.0 29-30|0.0.0.1.0.1.1 25-26|0 23-24|0.0 19-20|0.0.0 18-19|0.0.0.1 17-18|0.0.0.0 16-17|0.0.0.0.0.0+0.0.0.0.0 15-16|0.0.0.0.0.1 13-14|0.0.0.0.1 10-11|0.0.0.1.0.2 9-10|0.0.0.1.0.1.2.1+0.0.0.1.0.1.2 8-9|0.0.0.1.0.1.2.0 6-7|0.0.0.1.0.1 5-6|0.0.0.1.0.1.0 3-4|0.0.0.1.0 1-2|0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:40.671
# ::node	0	helpless	25-26
# ::node	0.0	she	23-24
# ::node	0.0.0	beat-01	19-20
# ::node	0.0.0.0	ear	17-18
# ::node	0.0.0.0.0	have-rel-role-91	16-17
# ::node	0.0.0.0.0.0	girlfriend	16-17
# ::node	0.0.0.0.0.1	former	15-16
# ::node	0.0.0.0.1	off	13-14
# ::node	0.0.0.1	and	18-19
# ::node	0.0.0.1.0	begin-01	3-4
# ::node	0.0.0.1.0.0	man	1-2
# ::node	0.0.0.1.0.1	sentence-01	6-7
# ::node	0.0.0.1.0.1.0	jail	5-6
# ::node	0.0.0.1.0.1.1	cast-01	29-30
# ::node	0.0.0.1.0.1.1.0	after	30-31
# ::node	0.0.0.1.0.1.1.0.0	accident	33-34
# ::node	0.0.0.1.0.1.1.0.0.0	road	32-33
# ::node	0.0.0.1.0.1.2	temporal-quantity	9-10
# ::node	0.0.0.1.0.1.2.0	7	8-9
# ::node	0.0.0.1.0.1.2.1	year	9-10
# ::node	0.0.0.1.0.2	today	10-11
# ::root	0	helpless
# ::edge	accident	location	road	0.0.0.1.0.1.1.0.0	0.0.0.1.0.1.1.0.0.0	
# ::edge	after	op1	accident	0.0.0.1.0.1.1.0	0.0.0.1.0.1.1.0.0	
# ::edge	and	op1	beat-01	0.0.0.1	0.0.0	
# ::edge	beat-01	ARG0	she	0.0.0	0.0	
# ::edge	beat-01	ARG1	ear	0.0.0	0.0.0.0	
# ::edge	begin-01	ARG0	man	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	begin-01	ARG1	sentence-01	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	begin-01	manner	and	0.0.0.1.0	0.0.0.1	
# ::edge	begin-01	time	today	0.0.0.1.0	0.0.0.1.0.2	
# ::edge	cast-01	ARG1	sentence-01	0.0.0.1.0.1.1	0.0.0.1.0.1	
# ::edge	cast-01	time	after	0.0.0.1.0.1.1	0.0.0.1.0.1.1.0	
# ::edge	have-rel-role-91	ARG0	ear	0.0.0.0.0	0.0.0.0	
# ::edge	have-rel-role-91	ARG2	girlfriend	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	have-rel-role-91	time	former	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	helpless	domain	she	0	0.0	
# ::edge	off	op1	ear	0.0.0.0.1	0.0.0.0	
# ::edge	sentence-01	ARG1	jail	0.0.0.1.0.1	0.0.0.1.0.1.0	
# ::edge	sentence-01	ARG2	temporal-quantity	0.0.0.1.0.1	0.0.0.1.0.1.2	
# ::edge	temporal-quantity	quant	7	0.0.0.1.0.1.2	0.0.0.1.0.1.2.0	
# ::edge	temporal-quantity	unit	year	0.0.0.1.0.1.2	0.0.0.1.0.1.2.1	
(h / helpless 
      :domain (s / she 
            :ARG0-of (b / beat-01 
                  :ARG1 (e / ear 
                        :ARG0-of (h2 / have-rel-role-91 
                              :ARG2 (g / girlfriend) 
                              :time (f / former)) 
                        :op-of (o / off)) 
                  :op-of (a3 / and 
                        :manner-of (b2 / begin-01 
                              :ARG0 (m / man) 
                              :ARG1 (s2 / sentence-01 
                                    :ARG1 (j / jail) 
                                    :ARG1-of (c / cast-01 
                                          :time (a2 / after 
                                                :op1 (a / accident 
                                                      :location (r / road)))) 
                                    :ARG2 (t2 / temporal-quantity 
                                          :quant 7 
                                          :unit (y / year))) 
                              :time (t / today))))))

# ::snt and our optional payment protector plan covers you against loss of income in the event of sickness accident or compulsory redundancy subject to a few simple conditions
# ::tok and our optional payment protector plan covers you against loss of income in the event of sickness accident or compulsory redundancy subject to a few simple conditions
# ::alignments 26-27|0.1.1.0.1 25-26|0.1.1.0.1.0 24-25|0.1.1.0.1.1 21-22|0 19-20|0.0 18-19|0.1 17-18|0.1.2.0 16-17|0.1.2.0.0 14-15|0.1.2 11-12|0.1.1.2 7-8|0.1.1.1 6-7|0.1.1 5-6|0.1.1.0 2-3|0.1.1.0.0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:41.012
# ::node	0	subject	21-22
# ::node	0.0	compel-01	19-20
# ::node	0.1	or	18-19
# ::node	0.1.0	and	0-1
# ::node	0.1.1	cover-01	6-7
# ::node	0.1.1.0	plan-01	5-6
# ::node	0.1.1.0.0	optional	2-3
# ::node	0.1.1.0.1	condition	26-27
# ::node	0.1.1.0.1.0	simple	25-26
# ::node	0.1.1.0.1.1	few	24-25
# ::node	0.1.1.1	you	7-8
# ::node	0.1.1.2	income	11-12
# ::node	0.1.2	event	14-15
# ::node	0.1.2.0	accident	17-18
# ::node	0.1.2.0.0	sickness	16-17
# ::root	0	subject
(s2 / subject 
      :ARG1-of (c2 / compel-01) 
      :op-of (o / or 
            :mod-of (a2 / and) 
            :op1 (c3 / cover-01 
                  :ARG0 (p / plan-01 
                        :ARG0 (o2 / optional) 
                        :ARG1 (c / condition 
                              :mod (s / simple) 
                              :quant (f / few))) 
                  :ARG1 (y / you) 
                  :location (i / income)) 
            :op2 (e / event 
                  :location (a / accident 
                        :location (s3 / sickness)))))

# ::snt children from the towns primary school also turned up for a maypole dancing display and burford fire service demonstrated how to rescue victims from a mock car accident
# ::tok children from the towns primary school also turned up for a maypole dancing display and burford fire service demonstrated how to rescue victims from a mock car accident
# ::alignments 27-28|0.2.1.1 26-27|0.2.1.1.0 22-23|0.2.1.0 21-22|0.2.1 18-19|0.2 14-15|0 13-14|0.1 6-7|0.0 5-6|0.1.0.0 4-5|0.1.0.0.0 3-4|0.1.0 0-1|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:41.091
# ::node	0	and	14-15
# ::node	0.0	also	6-7
# ::node	0.1	display-01	13-14
# ::node	0.1.0	town	3-4
# ::node	0.1.0.0	school	5-6
# ::node	0.1.0.0.0	primary	4-5
# ::node	0.2	demonstrate-01	18-19
# ::node	0.2.0	child	0-1
# ::node	0.2.1	rescue-01	21-22
# ::node	0.2.1.0	victim	22-23
# ::node	0.2.1.1	accident	27-28
# ::node	0.2.1.1.0	car	26-27
# ::root	0	and
# ::edge	accident	location	car	0.2.1.1	0.2.1.1.0	
# ::edge	and	mod	also	0	0.0	
# ::edge	and	op1	display-01	0	0.1	
# ::edge	and	op2	demonstrate-01	0	0.2	
# ::edge	demonstrate-01	ARG0	child	0.2	0.2.0	
# ::edge	demonstrate-01	ARG1	rescue-01	0.2	0.2.1	
# ::edge	display-01	ARG1	town	0.1	0.1.0	
# ::edge	rescue-01	ARG1	victim	0.2.1	0.2.1.0	
# ::edge	rescue-01	ARG2	accident	0.2.1	0.2.1.1	
# ::edge	school	mod	primary	0.1.0.0	0.1.0.0.0	
# ::edge	school	mod	town	0.1.0.0	0.1.0	
(a2 / and 
      :mod (a3 / also) 
      :op1 (d2 / display-01 
            :ARG1 (t / town 
                  :mod-of (s / school 
                        :mod (p / primary)))) 
      :op2 (d / demonstrate-01 
            :ARG0 (c2 / child) 
            :ARG1 (r / rescue-01 
                  :ARG1 (v / victim) 
                  :ARG2 (a / accident 
                        :location (c / car)))))

# ::snt two roundabouts were likely to give rise to more accidents he said
# ::tok two roundabouts were likely to give rise to more accidents he said
# ::alignments 11-12|0 10-11|0.0 9-10|0.1 6-7|0.1.0.0 5-6|0.1.0 3-4|0.1.0.1 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:41.181
# ::node	0	say-01	11-12
# ::node	0.0	he	10-11
# ::node	0.1	accident	9-10
# ::node	0.1.0	give-01	5-6
# ::node	0.1.0.0	rise-01	6-7
# ::node	0.1.0.1	likely	3-4
# ::node	0.2	2	0-1
# ::root	0	say-01
# ::edge	give-01	ARG1	rise-01	0.1.0	0.1.0.0	
# ::edge	give-01	ARG2	accident	0.1.0	0.1	
# ::edge	likely	domain	give-01	0.1.0.1	0.1.0	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	accident	0	0.1	
# ::edge	say-01	location	2	0	0.2	
(s / say-01 
      :ARG0 (h / he) 
      :ARG1 (a / accident 
            :ARG2-of (g / give-01 
                  :ARG1 (r / rise-01) 
                  :domain-of (l / likely))) 
      :location 2)

# ::snt the breakdown of accidents produced for only the second time in booklet form is being distributed in thousands to colleges community groups libraries and health authorities, the figures show there were 2616 injury accidents in oxfordshire last year with a drop in the number of deaths and serious injuries but a rise in the number of people slightly injured
# ::tok the breakdown of accidents produced for only the second time in booklet form is being distributed in thousands to colleges community groups libraries and health authorities , the figures show there were 2616 injury accidents in oxfordshire last year with a drop in the number of deaths and serious injuries but a rise in the number of people slightly injured
# ::alignments 59-60|0.2.0 58-59|0.2.0.0 55-56|0.1.1 52-53|0.1 50-51|0 49-50|0.2.1 48-49|0.2.1.2 47-48|0.2 44-45|0.2.2.0 41-42|0.2.2 38-39|0.2.1.1.0 37-38|0.2.1.1 34-35|0.2.2.0.0.0 33-34|0.2.2.0.0 32-33|0.2.1.0.0+0.2.1.0 29-30|0.0 28-29|0.0.0 25-26|0.0.1.0.0 24-25|0.0.1.0.0.0 23-24|0.0.1.0 22-23|0.0.1.1 21-22|0.0.1.1.0 20-21|0.0.1.1.0.0 19-20|0.0.1.1.0.1 15-16|0.0.1 12-13|0.1.0.1.1 9-10|0.1.0.0 6-7|0.1.0.0.0 4-5|0.1.0.1 3-4|0.1.0.1.0 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:43.193
# ::node	0	contrast-01	50-51
# ::node	0.0	show-01	29-30
# ::node	0.0.0	figure	28-29
# ::node	0.0.1	distribute-01	15-16
# ::node	0.0.1.0	and	23-24
# ::node	0.0.1.0.0	authority	25-26
# ::node	0.0.1.0.0.0	health	24-25
# ::node	0.0.1.1	library	22-23
# ::node	0.0.1.1.0	group	21-22
# ::node	0.0.1.1.0.0	community	20-21
# ::node	0.0.1.1.0.1	college	19-20
# ::node	0.1	rise-01	52-53
# ::node	0.1.0	break-12	1-2
# ::node	0.1.0.0	time	9-10
# ::node	0.1.0.0.0	only	6-7
# ::node	0.1.0.1	produce-01	4-5
# ::node	0.1.0.1.0	accident	3-4
# ::node	0.1.0.1.1	form	12-13
# ::node	0.1.1	number	55-56
# ::node	0.2	and	47-48
# ::node	0.2.0	injure-01	59-60
# ::node	0.2.0.0	slight	58-59
# ::node	0.2.1	injure-01	49-50
# ::node	0.2.1.0	date-entity	32-33
# ::node	0.2.1.0.0	2616	32-33
# ::node	0.2.1.1	last	37-38
# ::node	0.2.1.1.0	year	38-39
# ::node	0.2.1.2	serious	48-49
# ::node	0.2.2	drop-01	41-42
# ::node	0.2.2.0	number	44-45
# ::node	0.2.2.0.0	injure-01	33-34
# ::node	0.2.2.0.0.0	accident	34-35
# ::root	0	contrast-01
# ::edge	accident	mod	injure-01	0.2.2.0.0.0	0.2.2.0.0	
# ::edge	and	op1	authority	0.0.1.0	0.0.1.0.0	
# ::edge	and	op1	injure-01	0.2	0.2.1	
# ::edge	and	op2	contrast-01	0.2	0	
# ::edge	authority	mod	health	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	break-12	ARG1	time	0.1.0	0.1.0.0	
# ::edge	contrast-01	ARG2	rise-01	0	0.1	
# ::edge	date-entity	year	2616	0.2.1.0	0.2.1.0.0	
# ::edge	distribute-01	ARG0	and	0.0.1	0.0.1.0	
# ::edge	distribute-01	ARG1	show-01	0.0.1	0.0	
# ::edge	distribute-01	ARG2	library	0.0.1	0.0.1.1	
# ::edge	drop-01	ARG1	number	0.2.2	0.2.2.0	
# ::edge	drop-01	topic	and	0.2.2	0.2	
# ::edge	group	mod	college	0.0.1.1.0	0.0.1.1.0.1	
# ::edge	group	mod	community	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	injure-01	ARG0	number	0.2.2.0.0	0.2.2.0	
# ::edge	injure-01	ARG1	and	0.2.0	0.2	
# ::edge	injure-01	ARG1	date-entity	0.2.1	0.2.1.0	
# ::edge	injure-01	degree	slight	0.2.0	0.2.0.0	
# ::edge	injure-01	mod	serious	0.2.1	0.2.1.2	
# ::edge	last	domain	injure-01	0.2.1.1	0.2.1	
# ::edge	library	mod	group	0.0.1.1	0.0.1.1.0	
# ::edge	produce-01	ARG0	accident	0.1.0.1	0.1.0.1.0	
# ::edge	produce-01	ARG1	break-12	0.1.0.1	0.1.0	
# ::edge	produce-01	location	form	0.1.0.1	0.1.0.1.1	
# ::edge	rise-01	ARG0	break-12	0.1	0.1.0	
# ::edge	rise-01	ARG1	number	0.1	0.1.1	
# ::edge	show-01	ARG0	figure	0.0	0.0.0	
# ::edge	show-01	ARG1	contrast-01	0.0	0	
# ::edge	time	mod	only	0.1.0.0	0.1.0.0.0	
# ::edge	year	mod	last	0.2.1.1.0	0.2.1.1	
(c / contrast-01 
      :ARG1-of (s3 / show-01 
            :ARG0 (f / figure) 
            :ARG1-of (d3 / distribute-01 
                  :ARG0 (a4 / and 
                        :op1 (a3 / authority 
                              :mod (h / health))) 
                  :ARG2 (l2 / library 
                        :mod (g / group 
                              :mod (c2 / community) 
                              :mod (c3 / college))))) 
      :ARG2 (r / rise-01 
            :ARG0 (b / break-12 
                  :ARG1 (t / time 
                        :mod (o / only)) 
                  :ARG1-of (p / produce-01 
                        :ARG0 (a5 / accident) 
                        :location (f2 / form))) 
            :ARG1 (n / number)) 
      :op-of (a / and 
            :ARG1-of (i / injure-01 
                  :degree (s / slight)) 
            :op1 (i2 / injure-01 
                  :ARG1 (d2 / date-entity 
                        :year 2616) 
                  :domain-of (l / last 
                        :mod-of (y / year)) 
                  :mod (s2 / serious)) 
            :topic-of (d / drop-01 
                  :ARG1 (n2 / number 
                        :ARG0-of (i3 / injure-01 
                              :mod-of (a2 / accident))))))

# ::snt do congratulate him every morning there is a dry bed and if there is an accident try not to blame him
# ::tok do congratulate him every morning there is a dry bed and if there is an accident try not to blame him
# ::alignments 19-20|0 16-17|0.2 15-16|0.1 10-11|0.1.0 9-10|0.1.0.0 8-9|0.1.0.0.0 4-5|0.0.0 3-4|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:43.269
# ::node	0	blame-01	19-20
# ::node	0.0	every	3-4
# ::node	0.0.0	morning	4-5
# ::node	0.1	accident	15-16
# ::node	0.1.0	and	10-11
# ::node	0.1.0.0	bed	9-10
# ::node	0.1.0.0.0	dry-02	8-9
# ::node	0.2	try-01	16-17
# ::root	0	blame-01
# ::edge	and	op1	bed	0.1.0	0.1.0.0	
# ::edge	and	op2	accident	0.1.0	0.1	
# ::edge	blame-01	ARG0	every	0	0.0	
# ::edge	blame-01	ARG1	accident	0	0.1	
# ::edge	dry-02	ARG1	bed	0.1.0.0.0	0.1.0.0	
# ::edge	morning	mod	every	0.0.0	0.0	
# ::edge	try-01	ARG1	blame-01	0.2	0	
(b / blame-01 
      :ARG0 (e / every 
            :mod-of (m / morning)) 
      :ARG1 (a / accident 
            :op-of (a2 / and 
                  :op1 (b2 / bed 
                        :ARG1-of (d / dry-02)))) 
      :ARG1-of (t / try-01))

# ::snt and even if errors could be assessed satisfactorily there need not be any clear link between fullblown errors or accidents and a performance that is generally substandard dash, consider the problems of traffic accidents more closely
# ::tok and even if errors could be assessed satisfactorily there need not be any clear link between fullblown errors or accidents and a performance that is generally substandard dash , consider the problems of traffic accidents more closely
# ::alignments 36-37|0.0.1.0.0.1 34-35|0.0.1.0.0.0.0 33-34|0.0.1.0.0.0.0.0 31-32|0.0.1.0.0.0 29-30|0.0.1.0.0 25-26|0.2.0.0.0 22-23|0.2 20-21|0 19-20|0.2.0.1 18-19|0.2.0 17-18|0.2.0.1.0.0 15-16|0.2.0.1.0 14-15|0.2.0.0 13-14|0.2.0.0.1 12-13|0.1 9-10|0.0 7-8|0.0.1 4-5|0.0.1.0.1 3-4|0.0.0 0-1|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:44.271
# ::node	0	and	20-21
# ::node	0.0	need-01	9-10
# ::node	0.0.0	error	3-4
# ::node	0.0.1	satisfy-01	7-8
# ::node	0.0.1.0	and	0-1
# ::node	0.0.1.0.0	consider-02	29-30
# ::node	0.0.1.0.0.0	problem	31-32
# ::node	0.0.1.0.0.0.0	accident	34-35
# ::node	0.0.1.0.0.0.0.0	traffic	33-34
# ::node	0.0.1.0.0.1	close	36-37
# ::node	0.0.1.0.1	possible	4-5
# ::node	0.1	any	12-13
# ::node	0.2	perform-01	22-23
# ::node	0.2.0	or	18-19
# ::node	0.2.0.0	link-01	14-15
# ::node	0.2.0.0.0	general	25-26
# ::node	0.2.0.0.1	clear	13-14
# ::node	0.2.0.1	accident	19-20
# ::node	0.2.0.1.0	between	15-16
# ::node	0.2.0.1.0.0	error	17-18
# ::root	0	and
# ::edge	accident	mod	traffic	0.0.1.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	and	mod	any	0	0.1	
# ::edge	and	op1	perform-01	0	0.2	
# ::edge	between	op1	error	0.2.0.1.0	0.2.0.1.0.0	
# ::edge	between	op2	accident	0.2.0.1.0	0.2.0.1	
# ::edge	consider-02	ARG0	and	0.0.1.0.0	0.0.1.0	
# ::edge	consider-02	ARG1	problem	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	consider-02	ARG2	close	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	link-01	ARG0	general	0.2.0.0	0.2.0.0.0	
# ::edge	link-01	mod	clear	0.2.0.0	0.2.0.0.1	
# ::edge	need-01	ARG0	error	0.0	0.0.0	
# ::edge	need-01	ARG1	and	0.0	0	
# ::edge	need-01	purpose	satisfy-01	0.0	0.0.1	
# ::edge	or	op1	link-01	0.2.0	0.2.0.0	
# ::edge	or	op2	accident	0.2.0	0.2.0.1	
# ::edge	perform-01	ARG1	or	0.2	0.2.0	
# ::edge	possible	domain	and	0.0.1.0.1	0.0.1.0	
# ::edge	problem	prep-with	accident	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	satisfy-01	ARG1	and	0.0.1	0.0.1.0	
(a2 / and 
      :ARG1-of (n / need-01 
            :ARG0 (e2 / error) 
            :purpose (s / satisfy-01 
                  :ARG1 (a5 / and 
                        :ARG0-of (c2 / consider-02 
                              :ARG1 (p / problem 
                                    :prep-with (a / accident 
                                          :mod (t / traffic))) 
                              :ARG2 (c / close)) 
                        :domain-of (p3 / possible)))) 
      :mod (a4 / any) 
      :op1 (p2 / perform-01 
            :ARG1 (o / or 
                  :op1 (l / link-01 
                        :ARG0 (g / general) 
                        :mod (c3 / clear)) 
                  :op2 (a3 / accident 
                        :op-of (b / between 
                              :op1 (e / error))))))

# ::snt the number of male drivers killed in road accidents rose by 25 per cent in the first quarter of 1990 a fact blamed by the automobile association on increasingly aggressive driving by men
# ::tok the number of male drivers killed in road accidents rose by 25 per cent in the first quarter of 1990 a fact blamed by the automobile association on increasingly aggressive driving by men
# ::alignments 32-33|0.1.0.2 30-31|0.1.0 29-30|0.1 28-29|0 26-27|0.1.0.1 25-26|0.1.0.1.1 22-23|0.1.0.1.2 21-22|0.1.0.1.2.1 19-20|0.1.0.0.0+0.1.0.0 13-14|0.1.0.1.2.0.1.0.0.0+0.1.0.1.2.0.1.0.0 11-12|0.0 9-10|0.1.0.1.2.0.0 8-9|0.1.0.1.2.0.0.0 7-8|0.1.0.1.2.0.0.0.0 5-6|0.1.0.1.2.0.1.1 4-5|0.1.0.1.2.0.1.0+0.1.0.1.2.0.1 3-4|0.1.0.1.0 1-2|0.1.0.1.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:44.847
# ::node	0	increase-01	28-29
# ::node	0.0	25	11-12
# ::node	0.1	aggressive	29-30
# ::node	0.1.0	drive-01	30-31
# ::node	0.1.0.0	date-entity	19-20
# ::node	0.1.0.0.0	1990	19-20
# ::node	0.1.0.1	associate-01	26-27
# ::node	0.1.0.1.0	male	3-4
# ::node	0.1.0.1.1	automobile	25-26
# ::node	0.1.0.1.2	blame-01	22-23
# ::node	0.1.0.1.2.0	number	1-2
# ::node	0.1.0.1.2.0.0	rise-01	9-10
# ::node	0.1.0.1.2.0.0.0	accident	8-9
# ::node	0.1.0.1.2.0.0.0.0	road	7-8
# ::node	0.1.0.1.2.0.1	person	4-5
# ::node	0.1.0.1.2.0.1.0	drive-01	4-5
# ::node	0.1.0.1.2.0.1.0.0	monetary-quantity	13-14
# ::node	0.1.0.1.2.0.1.0.0.0	cent	13-14
# ::node	0.1.0.1.2.0.1.1	kill-01	5-6
# ::node	0.1.0.1.2.1	fact	21-22
# ::node	0.1.0.2	man	32-33
# ::root	0	increase-01
# ::edge	accident	location	road	0.1.0.1.2.0.0.0	0.1.0.1.2.0.0.0.0	
# ::edge	associate-01	ARG0	male	0.1.0.1	0.1.0.1.0	
# ::edge	associate-01	ARG1	automobile	0.1.0.1	0.1.0.1.1	
# ::edge	blame-01	ARG0	number	0.1.0.1.2	0.1.0.1.2.0	
# ::edge	blame-01	ARG1	fact	0.1.0.1.2	0.1.0.1.2.1	
# ::edge	blame-01	ARG2	associate-01	0.1.0.1.2	0.1.0.1	
# ::edge	date-entity	year	1990	0.1.0.0	0.1.0.0.0	
# ::edge	drive-01	ARG0	date-entity	0.1.0	0.1.0.0	
# ::edge	drive-01	ARG0	person	0.1.0.1.2.0.1.0	0.1.0.1.2.0.1	
# ::edge	drive-01	ARG1	associate-01	0.1.0	0.1.0.1	
# ::edge	drive-01	ARG1	monetary-quantity	0.1.0.1.2.0.1.0	0.1.0.1.2.0.1.0.0	
# ::edge	drive-01	location	man	0.1.0	0.1.0.2	
# ::edge	drive-01	mod	aggressive	0.1.0	0.1	
# ::edge	increase-01	ARG0	25	0	0.0	
# ::edge	increase-01	ARG1	aggressive	0	0.1	
# ::edge	kill-01	ARG1	person	0.1.0.1.2.0.1.1	0.1.0.1.2.0.1	
# ::edge	monetary-quantity	unit	cent	0.1.0.1.2.0.1.0.0	0.1.0.1.2.0.1.0.0.0	
# ::edge	person	quant	number	0.1.0.1.2.0.1	0.1.0.1.2.0	
# ::edge	rise-01	ARG0	accident	0.1.0.1.2.0.0	0.1.0.1.2.0.0.0	
# ::edge	rise-01	ARG1	number	0.1.0.1.2.0.0	0.1.0.1.2.0	
(i / increase-01 
      :ARG0 25 
      :ARG1 (a / aggressive 
            :mod-of (d / drive-01 
                  :ARG0 (d2 / date-entity 
                        :year 1990) 
                  :ARG1 (a2 / associate-01 
                        :ARG0 (m3 / male) 
                        :ARG1 (a3 / automobile) 
                        :ARG2-of (b / blame-01 
                              :ARG0 (n / number 
                                    :ARG1-of (r / rise-01 
                                          :ARG0 (a4 / accident 
                                                :location (r2 / road))) 
                                    :quant-of (p / person 
                                          :ARG0-of (d3 / drive-01 
                                                :ARG1 (m2 / monetary-quantity 
                                                      :unit (c / cent))) 
                                          :ARG1-of (k / kill-01))) 
                              :ARG1 (f / fact))) 
                  :location (m / man))))

# ::snt senna is driven by the desire to be continually recognised as the greatest practitioner of a trade which from time to time calls for the cooperation of others if a serious accident is to be avoided
# ::tok senna is driven by the desire to be continually recognised as the greatest practitioner of a trade which from time to time calls for the cooperation of others if a serious accident is to be avoided
# ::alignments 35-36|0.2.0.0.0 31-32|0.2.0.0 30-31|0.2.0 27-28|0.2.0.0.0.0.1.0 25-26|0.2.0.0.0.0.1 21-22|0.2.0.0.0.0.0 19-20|0.2.0.0.0.0.1.1 16-17|0.2.0.0.0.0 12-13|0.0.0+0.0 9-10|0.2 8-9|0.2.1 5-6|0.1 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:45.002
# ::node	0	drive-02	2-3
# ::node	0.0	great	12-13
# ::node	0.0.0	most	12-13
# ::node	0.1	desire-01	5-6
# ::node	0.2	recognize-01	9-10
# ::node	0.2.0	serious	30-31
# ::node	0.2.0.0	accident	31-32
# ::node	0.2.0.0.0	avoid-01	35-36
# ::node	0.2.0.0.0.0	trade-01	16-17
# ::node	0.2.0.0.0.0.0	time	21-22
# ::node	0.2.0.0.0.0.1	cooperate-01	25-26
# ::node	0.2.0.0.0.0.1.0	other	27-28
# ::node	0.2.0.0.0.0.1.1	time	19-20
# ::node	0.2.1	continue-01	8-9
# ::root	0	drive-02
# ::edge	accident	mod	serious	0.2.0.0	0.2.0	
# ::edge	avoid-01	ARG0	trade-01	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	avoid-01	ARG1	accident	0.2.0.0.0	0.2.0.0	
# ::edge	continue-01	ARG1	recognize-01	0.2.1	0.2	
# ::edge	cooperate-01	ARG0	other	0.2.0.0.0.0.1	0.2.0.0.0.0.1.0	
# ::edge	cooperate-01	ARG1	trade-01	0.2.0.0.0.0.1	0.2.0.0.0.0	
# ::edge	cooperate-01	time	time	0.2.0.0.0.0.1	0.2.0.0.0.0.1.1	
# ::edge	drive-02	ARG0	great	0	0.0	
# ::edge	drive-02	ARG1	desire-01	0	0.1	
# ::edge	drive-02	purpose	recognize-01	0	0.2	
# ::edge	great	degree	most	0.0	0.0.0	
# ::edge	recognize-01	ARG1	serious	0.2	0.2.0	
# ::edge	trade-01	ARG1	time	0.2.0.0.0.0	0.2.0.0.0.0.0	
(d2 / drive-02 
      :ARG0 (g / great 
            :degree (m / most)) 
      :ARG1 (d / desire-01) 
      :purpose (r / recognize-01 
            :ARG1 (s / serious 
                  :mod-of (a2 / accident 
                        :ARG1-of (a / avoid-01 
                              :ARG0 (t3 / trade-01 
                                    :ARG1 (t / time) 
                                    :ARG1-of (c / cooperate-01 
                                          :ARG0 (o / other) 
                                          :time (t2 / time)))))) 
            :ARG1-of (c2 / continue-01)))

# ::snt there is also cover for legal fees for personal injury suffered in an accident
# ::tok there is also cover for legal fees for personal injury suffered in an accident
# ::alignments 13-14|0 10-11|0.0 9-10|0.0.0 8-9|0.0.0.2 6-7|0.0.0.1 5-6|0.0.0.1.0 2-3|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:45.050
# ::node	0	accident	13-14
# ::node	0.0	suffer-01	10-11
# ::node	0.0.0	injure-01	9-10
# ::node	0.0.0.0	also	2-3
# ::node	0.0.0.1	fee	6-7
# ::node	0.0.0.1.0	legal	5-6
# ::node	0.0.0.2	personal	8-9
# ::root	0	accident
(a / accident 
      :ARG0-of (s / suffer-01 
            :ARG1 (i / injure-01 
                  :ARG1 (a2 / also) 
                  :consist (f / fee 
                        :mod (l / legal)) 
                  :mod (p / personal))))

# ::snt   a kind thought but one which suggests that the fault lies with the ignorant official and no one else that the whole affair was an exceptional accident rather than one product of a carefully constructed machinery which demands these attitudes in its operators
# ::tok a kind thought but one which suggests that the fault lies with the ignorant official and no one else that the whole affair was an exceptional accident rather than one product of a carefully constructed machinery which demands these attitudes in its operators
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:45.050
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt chief justice traynor rather more cautious than his radical posthumous admirers would have us believe explained  to invoke a rule of strict liability to users of the streets and highways however without also establishing in substantial detail how the new rule should operate would only contribute confusion to the automobile accident problem
# ::tok chief justice traynor rather more cautious than his radical posthumous admirers would have us believe explained to invoke a rule of strict liability to users of the streets and highways however without also establishing in substantial detail how the new rule should operate would only contribute confusion to the automobile accident problem
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:45.052
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt rob thompson had given hounslow the lead against the run of play in the 14th minute after a series of good saves by their goalkeeper rick purvis standing in for veryan pappin who has injured in a road accident on friday
# ::tok rob thompson had given hounslow the lead against the run of play in the 14th minute after a series of good saves by their goalkeeper rick purvis standing in for veryan pappin who has injured in a road accident on friday
# ::alignments 40-41|0.0.0.1.0.1.1 38-39|0.0.0.1.0.1 37-38|0.0.0.1.0.1.0 34-35|0.0.0.1.0 21-22|0.0.0 20-21|0.0.0.1.0.0 18-19|0.0.0.0 16-17|0.0 15-16|0.0.0.1.1.0+0.0.0.1.1 11-12|0.0.0.1 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:45.266
# ::node	0	give-01	3-4
# ::node	0.0	after	16-17
# ::node	0.0.0	save-01	21-22
# ::node	0.0.0.0	series	18-19
# ::node	0.0.0.1	play-01	11-12
# ::node	0.0.0.1.0	injure-01	34-35
# ::node	0.0.0.1.0.0	good	20-21
# ::node	0.0.0.1.0.1	accident	38-39
# ::node	0.0.0.1.0.1.0	road	37-38
# ::node	0.0.0.1.0.1.1	friday	40-41
# ::node	0.0.0.1.1	temporal-quantity	15-16
# ::node	0.0.0.1.1.0	minute	15-16
# ::root	0	give-01
# ::edge	accident	location	road	0.0.0.1.0.1	0.0.0.1.0.1.0	
# ::edge	accident	mod	friday	0.0.0.1.0.1	0.0.0.1.0.1.1	
# ::edge	after	op1	save-01	0.0	0.0.0	
# ::edge	give-01	ARG1	after	0	0.0	
# ::edge	injure-01	ARG0	good	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	injure-01	ARG1	play-01	0.0.0.1.0	0.0.0.1	
# ::edge	injure-01	ARG2	accident	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	play-01	ARG1	save-01	0.0.0.1	0.0.0	
# ::edge	play-01	ARG2	temporal-quantity	0.0.0.1	0.0.0.1.1	
# ::edge	save-01	ARG1	series	0.0.0	0.0.0.0	
# ::edge	temporal-quantity	unit	minute	0.0.0.1.1	0.0.0.1.1.0	
(g2 / give-01 
      :ARG1 (a2 / after 
            :op1 (s / save-01 
                  :ARG1 (s2 / series) 
                  :ARG1-of (p / play-01 
                        :ARG1-of (i / injure-01 
                              :ARG0 (g / good) 
                              :ARG2 (a / accident 
                                    :location (r / road) 
                                    :mod (f / friday))) 
                        :ARG2 (t / temporal-quantity 
                              :unit (m / minute))))))

# ::snt   if you are in a car you just cannot see over the top of them and the big worry is that someone is going to be involved in an accident with a small child that they were not able to see
# ::tok if you are in a car you just cannot see over the top of them and the big worry is that someone is going to be involved in an accident with a small child that they were not able to see
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:45.267
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt ten minutes walk from the sarcophagus the chief engineer of the site mr nikolai sorokin sat in front of another portrait of lenin and carefully explained the improvements which have been made to the illfated rbmk reactor design in order to avoid another accident
# ::tok ten minutes walk from the sarcophagus the chief engineer of the site mr nikolai sorokin sat in front of another portrait of lenin and carefully explained the improvements which have been made to the illfated rbmk reactor design in order to avoid another accident
# ::alignments 43-44|0.0.0 42-43|0.0.0.0 41-42|0.0 37-38|0.0.1 36-37|0.0.1.0 27-28|0 25-26|0.2 24-25|0.2.1 23-24|0.2.2 19-20|0.2.2.0 17-18|0.1 11-12|0.2.0.0 8-9|0.2.0 7-8|0.2.0.1.0+0.2.0.1 2-3|0.2.0.2 1-2|0.2.0.2.0.0+0.2.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:45.890
# ::node	0	improve-01	27-28
# ::node	0.0	avoid-01	41-42
# ::node	0.0.0	accident	43-44
# ::node	0.0.0.0	another	42-43
# ::node	0.0.1	design-01	37-38
# ::node	0.0.1.0	reactor	36-37
# ::node	0.1	front	17-18
# ::node	0.2	explain-01	25-26
# ::node	0.2.0	engineer-01	8-9
# ::node	0.2.0.0	site	11-12
# ::node	0.2.0.1	have-org-role-91	7-8
# ::node	0.2.0.1.0	chief	7-8
# ::node	0.2.0.2	walk-01	2-3
# ::node	0.2.0.2.0	temporal-quantity	1-2
# ::node	0.2.0.2.0.0	minute	1-2
# ::node	0.2.1	careful	24-25
# ::node	0.2.2	and	23-24
# ::node	0.2.2.0	another	19-20
# ::root	0	improve-01
# ::edge	accident	mod	another	0.0.0	0.0.0.0	
# ::edge	and	mod	another	0.2.2	0.2.2.0	
# ::edge	and	op1	explain-01	0.2.2	0.2	
# ::edge	avoid-01	ARG0	improve-01	0.0	0	
# ::edge	avoid-01	ARG1	accident	0.0	0.0.0	
# ::edge	design-01	ARG1	reactor	0.0.1	0.0.1.0	
# ::edge	design-01	ARG2	avoid-01	0.0.1	0.0	
# ::edge	engineer-01	ARG1	site	0.2.0	0.2.0.0	
# ::edge	explain-01	ARG0	engineer-01	0.2	0.2.0	
# ::edge	explain-01	ARG1	improve-01	0.2	0	
# ::edge	explain-01	manner	careful	0.2	0.2.1	
# ::edge	have-org-role-91	ARG2	chief	0.2.0.1	0.2.0.1.0	
# ::edge	have-org-role-91	ARG3	engineer-01	0.2.0.1	0.2.0	
# ::edge	improve-01	ARG1	front	0	0.1	
# ::edge	temporal-quantity	unit	minute	0.2.0.2.0	0.2.0.2.0.0	
# ::edge	walk-01	ARG0	temporal-quantity	0.2.0.2	0.2.0.2.0	
# ::edge	walk-01	time	engineer-01	0.2.0.2	0.2.0	
(i / improve-01 
      :ARG0-of (a3 / avoid-01 
            :ARG1 (a / accident 
                  :mod (a2 / another)) 
            :ARG2-of (d / design-01 
                  :ARG1 (r / reactor))) 
      :ARG1 (f / front) 
      :ARG1-of (e / explain-01 
            :ARG0 (e2 / engineer-01 
                  :ARG1 (s / site) 
                  :ARG3-of (h / have-org-role-91 
                        :ARG2 (c2 / chief)) 
                  :time-of (w / walk-01 
                        :ARG0 (t / temporal-quantity 
                              :unit (m / minute)))) 
            :manner (c / careful) 
            :op-of (a4 / and 
                  :mod (a5 / another))))

# ::snt in face of the governments commitment to p plates and to cutting accidents among young drivers there is clearly a broader roadsafety campaigning role for learn and live to play
# ::tok in face of the governments commitment to p plates and to cutting accidents among young drivers there is clearly a broader roadsafety campaigning role for learn and live to play
# ::alignments 29-30|0.1.0 27-28|0.1 26-27|0 25-26|0.0 23-24|0.0.1 22-23|0.0.1.1 20-21|0.0.1.0 18-19|0.0.0 15-16|0.1.0.0.0+0.1.0.0 14-15|0.1.0.0.2 13-14|0.1.0.0.3 12-13|0.1.0.0.1.0.0.1 9-10|0.1.0.0.1.0.0 8-9|0.1.0.0.1.0.0.0 5-6|0.1.0.0.1.0 4-5|0.1.0.0.1.0.1.0+0.1.0.0.1.0.1 1-2|0.1.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:46.257
# ::node	0	and	26-27
# ::node	0.0	learn-01	25-26
# ::node	0.0.0	clear	18-19
# ::node	0.0.1	role	23-24
# ::node	0.0.1.0	broad	20-21
# ::node	0.0.1.1	campaign-01	22-23
# ::node	0.1	live-01	27-28
# ::node	0.1.0	play-01	29-30
# ::node	0.1.0.0	person	15-16
# ::node	0.1.0.0.0	drive-01	15-16
# ::node	0.1.0.0.1	face-01	1-2
# ::node	0.1.0.0.1.0	commit-01	5-6
# ::node	0.1.0.0.1.0.0	and	9-10
# ::node	0.1.0.0.1.0.0.0	plate	8-9
# ::node	0.1.0.0.1.0.0.1	accident	12-13
# ::node	0.1.0.0.1.0.1	government-organization	4-5
# ::node	0.1.0.0.1.0.1.0	govern-01	4-5
# ::node	0.1.0.0.2	young	14-15
# ::node	0.1.0.0.3	among	13-14
# ::root	0	and
# ::edge	among	op1	person	0.1.0.0.3	0.1.0.0	
# ::edge	and	op1	learn-01	0	0.0	
# ::edge	and	op1	plate	0.1.0.0.1.0.0	0.1.0.0.1.0.0.0	
# ::edge	and	op2	accident	0.1.0.0.1.0.0	0.1.0.0.1.0.0.1	
# ::edge	and	op2	live-01	0	0.1	
# ::edge	commit-01	ARG0	and	0.1.0.0.1.0	0.1.0.0.1.0.0	
# ::edge	commit-01	ARG1	government-organization	0.1.0.0.1.0	0.1.0.0.1.0.1	
# ::edge	drive-01	ARG0	person	0.1.0.0.0	0.1.0.0	
# ::edge	face-01	ARG0	person	0.1.0.0.1	0.1.0.0	
# ::edge	face-01	ARG1	commit-01	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	govern-01	ARG0	government-organization	0.1.0.0.1.0.1.0	0.1.0.0.1.0.1	
# ::edge	learn-01	ARG1	clear	0.0	0.0.0	
# ::edge	live-01	ARG1	play-01	0.1	0.1.0	
# ::edge	person	mod	young	0.1.0.0	0.1.0.0.2	
# ::edge	play-01	ARG0	person	0.1.0	0.1.0.0	
# ::edge	role	manner	broad	0.0.1	0.0.1.0	
# ::edge	role	mod	campaign-01	0.0.1	0.0.1.1	
# ::edge	role	mod	learn-01	0.0.1	0.0	
(a / and 
      :op1 (l2 / learn-01 
            :ARG1 (c2 / clear) 
            :mod-of (r / role 
                  :manner (b / broad) 
                  :mod (c / campaign-01))) 
      :op2 (l / live-01 
            :ARG1 (p / play-01 
                  :ARG0 (p2 / person 
                        :ARG0-of (d / drive-01) 
                        :ARG0-of (f / face-01 
                              :ARG1 (c3 / commit-01 
                                    :ARG0 (a4 / and 
                                          :op1 (p3 / plate) 
                                          :op2 (a3 / accident)) 
                                    :ARG1 (g / government-organization 
                                          :ARG0-of (g2 / govern-01)))) 
                        :mod (y / young) 
                        :op-of (a2 / among)))))

# ::snt i know she couldnt help it i know it was an accident
# ::tok i know she couldnt help it i know it was an accident
# ::alignments 11-12|0.1.2.0.0 8-9|0.1.2.0.0.0 7-8|0.1.2.0 6-7|0.1.2 5-6|0.1.1 4-5|0.1 2-3|0.1.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:46.622
# ::node	0	know-01	1-2
# ::node	0.0	i	0-1
# ::node	0.1	help-01	4-5
# ::node	0.1.0	she	2-3
# ::node	0.1.1	it	5-6
# ::node	0.1.2	i	6-7
# ::node	0.1.2.0	know-01	7-8
# ::node	0.1.2.0.0	accident	11-12
# ::node	0.1.2.0.0.0	it	8-9
# ::root	0	know-01
# ::edge	accident	domain	it	0.1.2.0.0	0.1.2.0.0.0	
# ::edge	help-01	ARG0	she	0.1	0.1.0	
# ::edge	help-01	ARG1	it	0.1	0.1.1	
# ::edge	help-01	ARG2	i	0.1	0.1.2	
# ::edge	know-01	ARG0	i	0	0.0	
# ::edge	know-01	ARG0	i	0.1.2.0	0.1.2	
# ::edge	know-01	ARG1	accident	0.1.2.0	0.1.2.0.0	
# ::edge	know-01	ARG1	help-01	0	0.1	
(k2 / know-01 
      :ARG0 (i4 / i) 
      :ARG1 (h / help-01 
            :ARG0 (s / she) 
            :ARG1 (i3 / it) 
            :ARG2 (i2 / i 
                  :ARG0-of (k / know-01 
                        :ARG1 (a / accident 
                              :domain (i / it))))))

# ::snt mr roger rose defending said it was a matter of great sadness to stratford and his family that he had been involved in the accident, mr rose stated that stratford who had been driving his first car at the time of the accident had found it virtually impossible to explain what happened
# ::tok mr roger rose defending said it was a matter of great sadness to stratford and his family that he had been involved in the accident , mr rose stated that stratford who had been driving his first car at the time of the accident had found it virtually impossible to explain what happened
# ::alignments 52-53|0.1.1.0.0 50-51|0.1.1.0 47-48|0.1.1.0.0.0 46-47|0.1.1 45-46|0.1 43-44|0.1.2 40-41|0.1.0.0.1 37-38|0.1.0 34-35|0.1.0.0 28-29|0 27-28|0.2 24-25|0.0.1.0.1 21-22|0.0.1.0 18-19|0.0.1.0.0 16-17|0.0.1 14-15|0.0 10-11|0.1.0.0.0 8-9|0.0.0.0.0 5-6|0.0.0.0 4-5|0.0.0 3-4|0.0.0.1 2-3|0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:47.648
# ::node	0	state-01	28-29
# ::node	0.0	and	14-15
# ::node	0.0.0	say-01	4-5
# ::node	0.0.0.0	it	5-6
# ::node	0.0.0.0.0	matter	8-9
# ::node	0.0.0.1	defend-01	3-4
# ::node	0.0.0.1.0	rise-01	2-3
# ::node	0.0.1	family	16-17
# ::node	0.0.1.0	involve-01	21-22
# ::node	0.0.1.0.0	he	18-19
# ::node	0.0.1.0.1	accident	24-25
# ::node	0.1	find-01	45-46
# ::node	0.1.0	car	37-38
# ::node	0.1.0.0	drive-01	34-35
# ::node	0.1.0.0.0	great	10-11
# ::node	0.1.0.0.1	time	40-41
# ::node	0.1.1	it	46-47
# ::node	0.1.1.0	explain-01	50-51
# ::node	0.1.1.0.0	happen-01	52-53
# ::node	0.1.1.0.0.0	virtual	47-48
# ::node	0.1.2	accident	43-44
# ::node	0.2	rise-01	27-28
# ::root	0	state-01
# ::edge	and	op1	family	0.0	0.0.1	
# ::edge	defend-01	ARG1	say-01	0.0.0.1	0.0.0	
# ::edge	drive-01	ARG0	great	0.1.0.0	0.1.0.0.0	
# ::edge	drive-01	ARG1	car	0.1.0.0	0.1.0	
# ::edge	drive-01	time	time	0.1.0.0	0.1.0.0.1	
# ::edge	explain-01	ARG0	it	0.1.1.0	0.1.1	
# ::edge	explain-01	ARG1	happen-01	0.1.1.0	0.1.1.0.0	
# ::edge	find-01	ARG0	car	0.1	0.1.0	
# ::edge	find-01	ARG1	it	0.1	0.1.1	
# ::edge	find-01	ARG2	accident	0.1	0.1.2	
# ::edge	happen-01	ARG1	virtual	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	involve-01	ARG0	family	0.0.1.0	0.0.1	
# ::edge	involve-01	ARG1	he	0.0.1.0	0.0.1.0.0	
# ::edge	involve-01	ARG2	accident	0.0.1.0	0.0.1.0.1	
# ::edge	matter	domain	it	0.0.0.0.0	0.0.0.0	
# ::edge	rise-01	ARG1	defend-01	0.0.0.1.0	0.0.0.1	
# ::edge	rise-01	ARG1	state-01	0.2	0	
# ::edge	say-01	ARG0	it	0.0.0	0.0.0.0	
# ::edge	say-01	ARG1	and	0.0.0	0.0	
# ::edge	state-01	ARG0	and	0	0.0	
# ::edge	state-01	ARG1	find-01	0	0.1	
(s / state-01 
      :ARG0 (a3 / and 
            :ARG1-of (s2 / say-01 
                  :ARG0 (i3 / it 
                        :domain-of (m / matter)) 
                  :ARG1-of (d2 / defend-01 
                        :ARG1-of (r2 / rise-01))) 
            :op1 (f2 / family 
                  :ARG0-of (i2 / involve-01 
                        :ARG1 (h2 / he) 
                        :ARG2 (a2 / accident)))) 
      :ARG1 (f / find-01 
            :ARG0 (c / car 
                  :ARG1-of (d / drive-01 
                        :ARG0 (g / great) 
                        :time (t / time))) 
            :ARG1 (i / it 
                  :ARG0-of (e / explain-01 
                        :ARG1 (h / happen-01 
                              :ARG1 (v / virtual)))) 
            :ARG2 (a / accident)) 
      :ARG1-of (r / rise-01))

# ::snt to save you worrying about your monthly repayments if you are unable to work because of sickness accident or unemployment we have developed a special midland flexiloan protection plan which covers your repayments for up to twelve months
# ::tok to save you worrying about your monthly repayments if you are unable to work because of sickness accident or unemployment we have developed a special midland flexiloan protection plan which covers your repayments for up to twelve months
# ::alignments 37-38|0.0.1.1.0.0+0.0.1.1.0 30-31|0.0.1.2 28-29|0.0.1 27-28|0.0.1.1 24-25|0.0.1.1.2 22-23|0.0 20-21|0.0.0 19-20|0.0.2.1.0+0.0.2.1 18-19|0.0.2 17-18|0.0.2.0 16-17|0.0.2.0.0 14-15|0 9-10|0.0.1.0 6-7|0.0.1.1.1.0+0.0.1.1.1 3-4|0.0.1.0.0.0 2-3|0.0.1.0.0.0.0 1-2|0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:48.323
# ::node	0	cause-01	14-15
# ::node	0.0	develop-02	22-23
# ::node	0.0.0	we	20-21
# ::node	0.0.1	plan-01	28-29
# ::node	0.0.1.0	you	9-10
# ::node	0.0.1.0.0	save-02	1-2
# ::node	0.0.1.0.0.0	worry-02	3-4
# ::node	0.0.1.0.0.0.0	you	2-3
# ::node	0.0.1.1	protect-01	27-28
# ::node	0.0.1.1.0	temporal-quantity	37-38
# ::node	0.0.1.1.0.0	month	37-38
# ::node	0.0.1.1.1	temporal-quantity	6-7
# ::node	0.0.1.1.1.0	month	6-7
# ::node	0.0.1.1.2	special	24-25
# ::node	0.0.1.2	cover-01	30-31
# ::node	0.0.2	or	18-19
# ::node	0.0.2.0	accident	17-18
# ::node	0.0.2.0.0	sickness	16-17
# ::node	0.0.2.1	employ-01	19-20
# ::node	0.0.2.1.0	-	19-20
# ::root	0	cause-01
# ::edge	accident	location	sickness	0.0.2.0	0.0.2.0.0	
# ::edge	cause-01	ARG0	develop-02	0	0.0	
# ::edge	cover-01	ARG1	plan-01	0.0.1.2	0.0.1	
# ::edge	develop-02	ARG0	we	0.0	0.0.0	
# ::edge	develop-02	ARG1	plan-01	0.0	0.0.1	
# ::edge	develop-02	ARG2	or	0.0	0.0.2	
# ::edge	employ-01	polarity	-	0.0.2.1	0.0.2.1.0	
# ::edge	or	op1	accident	0.0.2	0.0.2.0	
# ::edge	or	op2	employ-01	0.0.2	0.0.2.1	
# ::edge	plan-01	ARG0	you	0.0.1	0.0.1.0	
# ::edge	plan-01	ARG1	protect-01	0.0.1	0.0.1.1	
# ::edge	protect-01	ARG0	temporal-quantity	0.0.1.1	0.0.1.1.0	
# ::edge	protect-01	ARG1	temporal-quantity	0.0.1.1	0.0.1.1.1	
# ::edge	protect-01	mod	special	0.0.1.1	0.0.1.1.2	
# ::edge	save-02	ARG1	worry-02	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	save-02	ARG2	you	0.0.1.0.0	0.0.1.0	
# ::edge	temporal-quantity	unit	month	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	temporal-quantity	unit	month	0.0.1.1.1	0.0.1.1.1.0	
# ::edge	worry-02	ARG0	you	0.0.1.0.0.0	0.0.1.0.0.0.0	
(c2 / cause-01 
      :ARG0 (d / develop-02 
            :ARG0 (w / we) 
            :ARG1 (p / plan-01 
                  :ARG0 (y / you 
                        :ARG2-of (s3 / save-02 
                              :ARG1 (w2 / worry-02 
                                    :ARG0 (y2 / you)))) 
                  :ARG1 (p2 / protect-01 
                        :ARG0 (t / temporal-quantity 
                              :unit (m / month)) 
                        :ARG1 (t2 / temporal-quantity 
                              :unit (m2 / month)) 
                        :mod (s / special)) 
                  :ARG1-of (c / cover-01)) 
            :ARG2 (o / or 
                  :op1 (a / accident 
                        :location (s2 / sickness)) 
                  :op2 (e / employ-01 
                        :polarity -))))

# ::snt at least there should not be a reccurrence of this particular accident dash
# ::tok at least there should not be a reccurrence of this particular accident dash
# ::alignments 11-12|0.0.0 10-11|0.0 9-10|0.1 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:48.343
# ::node	0	recommend-01	3-4
# ::node	0.0	particular	10-11
# ::node	0.0.0	accident	11-12
# ::node	0.1	this	9-10
# ::root	0	recommend-01
# ::edge	accident	mod	particular	0.0.0	0.0	
# ::edge	recommend-01	ARG1	particular	0	0.0	
# ::edge	recommend-01	manner	this	0	0.1	
(r / recommend-01 
      :ARG1 (p / particular 
            :mod-of (a / accident)) 
      :manner (t / this))

# ::snt   she added that agreement had been reached last month on running the accident and emergency services we very much regret that is not being honoured
# ::tok she added that agreement had been reached last month on running the accident and emergency services we very much regret that is not being honoured
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:48.344
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the peer exchairman of sun alliance insurance group has alleged he is the victim of a harassment campaign by mr watts after it failed to pay out on an accident policy after the death of his brotherinlaw
# ::tok the peer exchairman of sun alliance insurance group has alleged he is the victim of a harassment campaign by mr watts after it failed to pay out on an accident policy after the death of his brotherinlaw
# ::alignments 33-34|0.3.0 31-32|0.3 30-31|0.1 29-30|0.1.0 25-26|0 23-24|0.2 22-23|0.0 21-22|0.2.2 17-18|0.2.1.1 13-14|0.2.1 10-11|0.2.1.2 9-10|0.2.1.0 7-8|0.2.1.0.0 6-7|0.2.1.0.0.0 5-6|0.2.1.0.0.0.0 4-5|0.2.1.0.0.1 1-2|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:48.681
# ::node	0	pay-01	25-26
# ::node	0.0	it	22-23
# ::node	0.1	policy	30-31
# ::node	0.1.0	accident	29-30
# ::node	0.2	fail-01	23-24
# ::node	0.2.0	peer	1-2
# ::node	0.2.1	victim	13-14
# ::node	0.2.1.0	allege-01	9-10
# ::node	0.2.1.0.0	group	7-8
# ::node	0.2.1.0.0.0	insure-02	6-7
# ::node	0.2.1.0.0.0.0	alliance	5-6
# ::node	0.2.1.0.0.1	sun	4-5
# ::node	0.2.1.1	campaign-01	17-18
# ::node	0.2.1.2	he	10-11
# ::node	0.2.2	after	21-22
# ::node	0.3	after	31-32
# ::node	0.3.0	die-01	33-34
# ::root	0	pay-01
# ::edge	after	op1	die-01	0.3	0.3.0	
# ::edge	after	op1	fail-01	0.2.2	0.2	
# ::edge	allege-01	ARG0	group	0.2.1.0	0.2.1.0.0	
# ::edge	allege-01	ARG1	victim	0.2.1.0	0.2.1	
# ::edge	campaign-01	ARG1	victim	0.2.1.1	0.2.1	
# ::edge	fail-01	ARG1	peer	0.2	0.2.0	
# ::edge	fail-01	ARG2	pay-01	0.2	0	
# ::edge	group	mod	sun	0.2.1.0.0	0.2.1.0.0.1	
# ::edge	insure-02	ARG0	group	0.2.1.0.0.0	0.2.1.0.0	
# ::edge	insure-02	ARG1	alliance	0.2.1.0.0.0	0.2.1.0.0.0.0	
# ::edge	pay-01	ARG0	it	0	0.0	
# ::edge	pay-01	ARG1	policy	0	0.1	
# ::edge	pay-01	time	after	0	0.3	
# ::edge	policy	mod	accident	0.1	0.1.0	
# ::edge	victim	condition	fail-01	0.2.1	0.2	
# ::edge	victim	domain	he	0.2.1	0.2.1.2	
(p2 / pay-01 
      :ARG0 (i / it) 
      :ARG1 (p / policy 
            :mod (a2 / accident)) 
      :ARG2-of (f / fail-01 
            :ARG1 (p3 / peer) 
            :condition-of (v / victim 
                  :ARG1-of (a4 / allege-01 
                        :ARG0 (g / group 
                              :ARG0-of (i2 / insure-02 
                                    :ARG1 (a5 / alliance)) 
                              :mod (s / sun))) 
                  :ARG1-of (c / campaign-01) 
                  :domain (h / he)) 
            :op-of (a3 / after)) 
      :time (a / after 
            :op1 (d / die-01)))

# ::snt governments do not become accidentprone by accident
# ::tok governments do not become accidentprone by accident
# ::alignments 6-7|0.1 3-4|0 0-1|0.0.0+0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:48.692
# ::node	0	become-01	3-4
# ::node	0.0	government-organization	0-1
# ::node	0.0.0	govern-01	0-1
# ::node	0.1	accident	6-7
# ::root	0	become-01
# ::edge	become-01	ARG1	government-organization	0	0.0	
# ::edge	become-01	ARG2	accident	0	0.1	
# ::edge	govern-01	ARG0	government-organization	0.0.0	0.0	
(b / become-01 
      :ARG1 (g / government-organization 
            :ARG0-of (g2 / govern-01)) 
      :ARG2 (a / accident))

# ::snt how on earth could it arrive at such a figure and who paid the 555000 which was estimated as the average cost of a fatal road accident in 1987
# ::tok how on earth could it arrive at such a figure and who paid the 555000 which was estimated as the average cost of a fatal road accident in 1987
# ::alignments 28-29|0.1.1.2.0+0.1.1.2 26-27|0.1.1 25-26|0.1.1.0 24-25|0.1.1.1 21-22|0.1 17-18|0 14-15|0.0.2.2+0.0.2.1+0.0.2.0+0.0.2 12-13|0.0 10-11|0.0.1 9-10|0.0.0 7-8|0.0.0.1 5-6|0.0.0.0 4-5|0.0.0.0.0 3-4|0.0.0.0.1 2-3|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:49.012
# ::node	0	estimate-01	17-18
# ::node	0.0	pay-01	12-13
# ::node	0.0.0	figure	9-10
# ::node	0.0.0.0	arrive-01	5-6
# ::node	0.0.0.0.0	it	4-5
# ::node	0.0.0.0.1	possible	3-4
# ::node	0.0.0.1	such	7-8
# ::node	0.0.1	and	10-11
# ::node	0.0.2	date-entity	14-15
# ::node	0.0.2.0	0	14-15
# ::node	0.0.2.1	50	14-15
# ::node	0.0.2.2	55	14-15
# ::node	0.1	cost-01	21-22
# ::node	0.1.0	earth	2-3
# ::node	0.1.1	accident	26-27
# ::node	0.1.1.0	road	25-26
# ::node	0.1.1.1	fatal	24-25
# ::node	0.1.1.2	date-entity	28-29
# ::node	0.1.1.2.0	1987	28-29
# ::root	0	estimate-01
# ::edge	accident	location	road	0.1.1	0.1.1.0	
# ::edge	accident	mod	fatal	0.1.1	0.1.1.1	
# ::edge	accident	time	date-entity	0.1.1	0.1.1.2	
# ::edge	and	op1	pay-01	0.0.1	0.0	
# ::edge	arrive-01	ARG1	it	0.0.0.0	0.0.0.0.0	
# ::edge	arrive-01	ARG3	figure	0.0.0.0	0.0.0	
# ::edge	cost-01	ARG0	earth	0.1	0.1.0	
# ::edge	cost-01	ARG1	accident	0.1	0.1.1	
# ::edge	date-entity	day	0	0.0.2	0.0.2.0	
# ::edge	date-entity	month	50	0.0.2	0.0.2.1	
# ::edge	date-entity	year	1987	0.1.1.2	0.1.1.2.0	
# ::edge	date-entity	year	55	0.0.2	0.0.2.2	
# ::edge	estimate-01	ARG1	pay-01	0	0.0	
# ::edge	estimate-01	ARG2	cost-01	0	0.1	
# ::edge	figure	mod	such	0.0.0	0.0.0.1	
# ::edge	pay-01	ARG1	figure	0.0	0.0.0	
# ::edge	pay-01	time	date-entity	0.0	0.0.2	
# ::edge	possible	domain	arrive-01	0.0.0.0.1	0.0.0.0	
(e / estimate-01 
      :ARG1 (p / pay-01 
            :ARG1 (f2 / figure 
                  :ARG3-of (a3 / arrive-01 
                        :ARG1 (i / it) 
                        :domain-of (p2 / possible)) 
                  :mod (s / such)) 
            :op-of (a2 / and) 
            :time (d2 / date-entity 
                  :day 0 
                  :month 50 
                  :year 55)) 
      :ARG2 (c / cost-01 
            :ARG0 (e2 / earth) 
            :ARG1 (a / accident 
                  :location (r / road) 
                  :mod (f / fatal) 
                  :time (d / date-entity 
                        :year 1987))))

# ::snt poor siting and inadequate evacuation procedures for dealing with a nuclear accident could have devastating effects and lead to thousands of cancer deaths warned the report for the royal institute of british architects
# ::tok poor siting and inadequate evacuation procedures for dealing with a nuclear accident could have devastating effects and lead to thousands of cancer deaths warned the report for the royal institute of british architects
# ::alignments 29-30|0.0.0.1.0.1.0 28-29|0.0.0.0 25-26|0.0.0.1.0.1 23-24|0.0.0.1.0 21-22|0.0.0.1.0.0 16-17|0.0 15-16|0.0.2 14-15|0.0.2.1 12-13|0 11-12|0.0.1 10-11|0.0.1.0 7-8|0.0.0 5-6|0.0.0.1.1 3-4|0.0.0.1.1.0.0+0.0.0.1.1.0 2-3|0.0.0.1 0-1|0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:49.253
# ::node	0	possible	12-13
# ::node	0.0	and	16-17
# ::node	0.0.0	deal-01	7-8
# ::node	0.0.0.0	royal	28-29
# ::node	0.0.0.1	and	2-3
# ::node	0.0.0.1.0	warn-01	23-24
# ::node	0.0.0.1.0.0	cancer	21-22
# ::node	0.0.0.1.0.1	report	25-26
# ::node	0.0.0.1.0.1.0	institute	29-30
# ::node	0.0.0.1.1	procedure	5-6
# ::node	0.0.0.1.1.0	adequate	3-4
# ::node	0.0.0.1.1.0.0	-	3-4
# ::node	0.0.1	accident	11-12
# ::node	0.0.1.0	nucleus	10-11
# ::node	0.0.2	effect-01	15-16
# ::node	0.0.2.0	poor	0-1
# ::node	0.0.2.1	devastate-01	14-15
# ::root	0	possible
# ::edge	accident	mod	nucleus	0.0.1	0.0.1.0	
# ::edge	adequate	polarity	-	0.0.0.1.1.0	0.0.0.1.1.0.0	
# ::edge	and	op1	accident	0.0	0.0.1	
# ::edge	and	op1	procedure	0.0.0.1	0.0.0.1.1	
# ::edge	and	op2	effect-01	0.0	0.0.2	
# ::edge	deal-01	ARG0	royal	0.0.0	0.0.0.0	
# ::edge	deal-01	ARG1	and	0.0.0	0.0.0.1	
# ::edge	deal-01	condition	and	0.0.0	0.0	
# ::edge	devastate-01	ARG1	effect-01	0.0.2.1	0.0.2	
# ::edge	effect-01	ARG1	poor	0.0.2	0.0.2.0	
# ::edge	possible	domain	and	0	0.0	
# ::edge	procedure	mod	adequate	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	report	topic	institute	0.0.0.1.0.1	0.0.0.1.0.1.0	
# ::edge	warn-01	ARG0	and	0.0.0.1.0	0.0.0.1	
# ::edge	warn-01	ARG1	cancer	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	warn-01	ARG2	report	0.0.0.1.0	0.0.0.1.0.1	
(p / possible 
      :domain (a / and 
            :condition-of (d2 / deal-01 
                  :ARG0 (r / royal) 
                  :ARG1 (a4 / and 
                        :ARG0-of (w / warn-01 
                              :ARG1 (c / cancer) 
                              :ARG2 (r2 / report 
                                    :topic (i / institute))) 
                        :op1 (p2 / procedure 
                              :mod (a3 / adequate 
                                    :polarity -)))) 
            :op1 (a2 / accident 
                  :mod (n / nucleus)) 
            :op2 (e / effect-01 
                  :ARG1 (p3 / poor) 
                  :ARG1-of (d / devastate-01))))

# ::snt and with little or no income your spouse or children could be the ones to suffer most from your accident
# ::tok and with little or no income your spouse or children could be the ones to suffer most from your accident
# ::alignments 19-20|0.0.0.0.1.0 16-17|0.0.0.0.1.2 15-16|0.0.0.0.1 13-14|0.0.0.0.1.1 10-11|0 9-10|0.0.0 8-9|0.0.0.0 7-8|0.0.0.0.0.1+0.0.0.0.0 5-6|0.0.0.1 4-5|0.0.0.1.0 3-4|0.0.0.0.0.0.0 2-3|0.0.0.0.0.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:49.574
# ::node	0	possible	10-11
# ::node	0.0	and	0-1
# ::node	0.0.0	child	9-10
# ::node	0.0.0.0	or	8-9
# ::node	0.0.0.0.0	have-rel-role-91	7-8
# ::node	0.0.0.0.0.0	little	2-3
# ::node	0.0.0.0.0.0.0	or	3-4
# ::node	0.0.0.0.0.1	spouse	7-8
# ::node	0.0.0.0.1	suffer-01	15-16
# ::node	0.0.0.0.1.0	accident	19-20
# ::node	0.0.0.0.1.1	one	13-14
# ::node	0.0.0.0.1.2	most	16-17
# ::node	0.0.0.1	income	5-6
# ::node	0.0.0.1.0	-	4-5
# ::root	0	possible
# ::edge	and	op1	child	0.0	0.0.0	
# ::edge	child	poss	income	0.0.0	0.0.0.1	
# ::edge	have-rel-role-91	ARG1	little	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	have-rel-role-91	ARG2	spouse	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	income	polarity	-	0.0.0.1	0.0.0.1.0	
# ::edge	or	direction	little	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	or	op1	have-rel-role-91	0.0.0.0	0.0.0.0.0	
# ::edge	or	op2	child	0.0.0.0	0.0.0	
# ::edge	or	op3	suffer-01	0.0.0.0	0.0.0.0.1	
# ::edge	possible	domain	and	0	0.0	
# ::edge	suffer-01	ARG1	accident	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	suffer-01	ARG2	one	0.0.0.0.1	0.0.0.0.1.1	
# ::edge	suffer-01	degree	most	0.0.0.0.1	0.0.0.0.1.2	
(p / possible 
      :domain (a2 / and 
            :op1 (c / child 
                  :op-of (o2 / or 
                        :op1 (h / have-rel-role-91 
                              :ARG1 (l / little 
                                    :direction-of (o3 / or)) 
                              :ARG2 (s2 / spouse)) 
                        :op2 (s / suffer-01 
                              :ARG1 (a / accident) 
                              :ARG2 (o / one) 
                              :degree (m / most))) 
                  :poss (i / income 
                        :polarity (- / -)))))

# ::snt a thames valley police force team will play banbury united in memory of det con steve dixon a former united player who was killed in 1988 in a road accident in abingdon
# ::tok a thames valley police force team will play banbury united in memory of det con steve dixon a former united player who was killed in 1988 in a road accident in abingdon
# ::alignments 29-30|0.1.0 28-29|0.1.0.0 25-26|0.1.1.0+0.1.1 23-24|0.1 19-20|0 18-19|0.0 11-12|0.2.1 9-10|0.2 7-8|0.2.0 5-6|0.2.0.0 4-5|0.2.0.0.0 3-4|0.2.0.0.1 1-3|0.2.0.0.2.0.0+0.2.0.0.2.0.1+0.2.0.0.2.0+0.2.0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:49.823
# ::node	0	unite-01	19-20
# ::node	0.0	former	18-19
# ::node	0.1	kill-01	23-24
# ::node	0.1.0	accident	29-30
# ::node	0.1.0.0	road	28-29
# ::node	0.1.1	date-entity	25-26
# ::node	0.1.1.0	1988	25-26
# ::node	0.2	unite-01	9-10
# ::node	0.2.0	play-01	7-8
# ::node	0.2.0.0	team	5-6
# ::node	0.2.0.0.0	force	4-5
# ::node	0.2.0.0.1	police	3-4
# ::node	0.2.0.0.2	country	1-3
# ::node	0.2.0.0.2.0	name	1-3
# ::node	0.2.0.0.2.0.0	"valley"	1-3
# ::node	0.2.0.0.2.0.1	"thames"	1-3
# ::node	0.2.1	memory	11-12
# ::root	0	unite-01
# ::edge	accident	location	road	0.1.0	0.1.0.0	
# ::edge	country	name	name	0.2.0.0.2	0.2.0.0.2.0	
# ::edge	date-entity	year	1988	0.1.1	0.1.1.0	
# ::edge	kill-01	ARG1	unite-01	0.1	0	
# ::edge	kill-01	ARG2	accident	0.1	0.1.0	
# ::edge	kill-01	time	date-entity	0.1	0.1.1	
# ::edge	name	op1	"valley"	0.2.0.0.2.0	0.2.0.0.2.0.0	
# ::edge	name	op2	"thames"	0.2.0.0.2.0	0.2.0.0.2.0.1	
# ::edge	play-01	ARG0	team	0.2.0	0.2.0.0	
# ::edge	play-01	ARG1	unite-01	0.2.0	0.2	
# ::edge	team	mod	country	0.2.0.0	0.2.0.0.2	
# ::edge	team	mod	force	0.2.0.0	0.2.0.0.0	
# ::edge	team	mod	police	0.2.0.0	0.2.0.0.1	
# ::edge	unite-01	ARG1	former	0	0.0	
# ::edge	unite-01	ARG1	unite-01	0.2	0	
# ::edge	unite-01	ARG2	memory	0.2	0.2.1	
(u / unite-01 
      :ARG1 (f / former) 
      :ARG1-of (k / kill-01 
            :ARG2 (a / accident 
                  :location (r / road)) 
            :time (d / date-entity 
                  :year 1988)) 
      :ARG1-of (u2 / unite-01 
            :ARG1-of (p / play-01 
                  :ARG0 (t / team 
                        :mod (f2 / force) 
                        :mod (p2 / police) 
                        :mod (c / country 
                              :name (n / name 
                                    :op1 "valley" 
                                    :op2 "thames")))) 
            :ARG2 (m / memory)))

# ::snt what lessons are to be learnt from this accident
# ::tok what lessons are to be learnt from this accident
# ::alignments 8-9|0.0.0 7-8|0.0.0.0 5-6|0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:49.840
# ::node	0	lesson	1-2
# ::node	0.0	learn-01	5-6
# ::node	0.0.0	accident	8-9
# ::node	0.0.0.0	this	7-8
# ::root	0	lesson
(l2 / lesson 
      :ARG1-of (l / learn-01 
            :ARG2 (a / accident 
                  :mod (t / this))))

# ::snt if wayne had had a serious accident during the third part of the race and that part was indeed not official he would not have been insured
# ::tok if wayne had had a serious accident during the third part of the race and that part was indeed not official he would not have been insured
# ::alignments 26-27|0.2.0.0+0.2.0.0.0 21-22|0.2.0 20-21|0.2.1+0.2 18-19|0.2.2 14-15|0 13-14|0.1 6-7|0.0 5-6|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:50.120
# ::node	0	and	14-15
# ::node	0.0	accident	6-7
# ::node	0.0.0	serious	5-6
# ::node	0.1	race	13-14
# ::node	0.2	have-org-role-91	20-21
# ::node	0.2.0	he	21-22
# ::node	0.2.0.0	insure-02	26-27
# ::node	0.2.0.0.0	person	26-27
# ::node	0.2.1	official	20-21
# ::node	0.2.2	indeed	18-19
# ::root	0	and
# ::edge	accident	mod	serious	0.0	0.0.0	
# ::edge	and	op1	accident	0	0.0	
# ::edge	and	op2	race	0	0.1	
# ::edge	and	op3	have-org-role-91	0	0.2	
# ::edge	have-org-role-91	ARG1	he	0.2	0.2.0	
# ::edge	have-org-role-91	ARG2	official	0.2	0.2.1	
# ::edge	have-org-role-91	mod	indeed	0.2	0.2.2	
# ::edge	insure-02	ARG1	person	0.2.0.0	0.2.0.0.0	
# ::edge	insure-02	ARG2	he	0.2.0.0	0.2.0	
(a / and 
      :op1 (a2 / accident 
            :mod (s / serious)) 
      :op2 (r / race) 
      :op3 (h2 / have-org-role-91 
            :ARG1 (h / he 
                  :ARG2-of (i / insure-02 
                        :ARG1 (p / person))) 
            :ARG2 (o / official) 
            :mod (i2 / indeed)))

# ::snt compared to the rest of the european community the united kingdoms transport accident rate in deaths a 100000 head of population in 1985 was 26
# ::tok compared to the rest of the european community the united kingdoms transport accident rate in deaths a 100000 head of population in 1985 was 26
# ::alignments 24-25|0.2.0 22-23|0.1.0+0.1 20-21|0.0 18-19|0 17-18|0.2.1.0.0.2+0.2.1.0.0.1+0.2.1.0.0.0+0.2.1.0.0 13-14|0.2.1 12-13|0.2.1.1 11-12|0.2.1.1.0 9-10|0.2 7-8|0.2.1.0.1.0 6-7|0.2.1.0.2.0.0+0.2.1.0.2.0+0.2.1.0.2 3-4|0.2.1.0.1 0-1|0.2.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:50.497
# ::node	0	head-01	18-19
# ::node	0.0	population	20-21
# ::node	0.1	date-entity	22-23
# ::node	0.1.0	1985	22-23
# ::node	0.2	unite-01	9-10
# ::node	0.2.0	26	24-25
# ::node	0.2.1	rate	13-14
# ::node	0.2.1.0	compare-01	0-1
# ::node	0.2.1.0.0	date-entity	17-18
# ::node	0.2.1.0.0.0	0	17-18
# ::node	0.2.1.0.0.1	0	17-18
# ::node	0.2.1.0.0.2	10	17-18
# ::node	0.2.1.0.1	rest	3-4
# ::node	0.2.1.0.1.0	community	7-8
# ::node	0.2.1.0.2	continent	6-7
# ::node	0.2.1.0.2.0	name	6-7
# ::node	0.2.1.0.2.0.0	"Europe"	6-7
# ::node	0.2.1.1	accident	12-13
# ::node	0.2.1.1.0	transport-01	11-12
# ::root	0	head-01
# ::edge	community	part	rest	0.2.1.0.1.0	0.2.1.0.1	
# ::edge	compare-01	ARG0	date-entity	0.2.1.0	0.2.1.0.0	
# ::edge	compare-01	ARG1	rate	0.2.1.0	0.2.1	
# ::edge	compare-01	ARG2	rest	0.2.1.0	0.2.1.0.1	
# ::edge	compare-01	purpose	continent	0.2.1.0	0.2.1.0.2	
# ::edge	continent	name	name	0.2.1.0.2	0.2.1.0.2.0	
# ::edge	date-entity	day	0	0.2.1.0.0	0.2.1.0.0.0	
# ::edge	date-entity	month	0	0.2.1.0.0	0.2.1.0.0.1	
# ::edge	date-entity	year	10	0.2.1.0.0	0.2.1.0.0.2	
# ::edge	date-entity	year	1985	0.1	0.1.0	
# ::edge	head-01	ARG1	population	0	0.0	
# ::edge	head-01	time	date-entity	0	0.1	
# ::edge	name	op1	"Europe"	0.2.1.0.2.0	0.2.1.0.2.0.0	
# ::edge	rate	mod	accident	0.2.1	0.2.1.1	
# ::edge	transport-01	ARG1	accident	0.2.1.1.0	0.2.1.1	
# ::edge	unite-01	ARG0	26	0.2	0.2.0	
# ::edge	unite-01	ARG1	rate	0.2	0.2.1	
# ::edge	unite-01	time	head-01	0.2	0	
(h / head-01 
      :ARG1 (p / population) 
      :time (d / date-entity 
            :year 1985) 
      :time-of (u / unite-01 
            :ARG0 26 
            :ARG1 (r / rate 
                  :ARG1-of (c3 / compare-01 
                        :ARG0 (d2 / date-entity 
                              :day 0 
                              :month 0 
                              :year 10) 
                        :ARG2 (r2 / rest 
                              :part-of (c / community)) 
                        :purpose (c2 / continent 
                              :name (n / name 
                                    :op1 "Europe"))) 
                  :mod (a / accident 
                        :ARG1-of (t / transport-01)))))

# ::snt most holiday injuries we see are caused by scooter accidents
# ::tok most holiday injuries we see are caused by scooter accidents
# ::alignments 9-10|0.0 6-7|0 4-5|0.1.1 3-4|0.1.1.0 2-3|0.1 1-2|0.1.0 0-1|0.1.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:50.518
# ::node	0	cause-01	6-7
# ::node	0.0	accident	9-10
# ::node	0.1	injure-01	2-3
# ::node	0.1.0	holiday	1-2
# ::node	0.1.1	see-01	4-5
# ::node	0.1.1.0	we	3-4
# ::node	0.1.1.1	most	0-1
# ::root	0	cause-01
# ::edge	cause-01	ARG0	accident	0	0.0	
# ::edge	cause-01	ARG1	injure-01	0	0.1	
# ::edge	injure-01	ARG1	holiday	0.1	0.1.0	
# ::edge	see-01	ARG0	we	0.1.1	0.1.1.0	
# ::edge	see-01	ARG1	injure-01	0.1.1	0.1	
# ::edge	see-01	quant	most	0.1.1	0.1.1.1	
(c / cause-01 
      :ARG0 (a / accident) 
      :ARG1 (i / injure-01 
            :ARG1 (h / holiday) 
            :ARG1-of (s / see-01 
                  :ARG0 (w / we) 
                  :quant (m / most))))

# ::snt and on how often you have expensive accidents
# ::tok and on how often you have expensive accidents
# ::alignments 7-8|0.1.0 6-7|0.1 4-5|0.1.0.0 3-4|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:50.530
# ::node	0	and	0-1
# ::node	0.0	often	3-4
# ::node	0.1	expensive	6-7
# ::node	0.1.0	accident	7-8
# ::node	0.1.0.0	you	4-5
# ::root	0	and
# ::edge	accident	mod	expensive	0.1.0	0.1	
# ::edge	accident	part	you	0.1.0	0.1.0.0	
# ::edge	and	frequency	often	0	0.0	
# ::edge	and	op1	expensive	0	0.1	
(a2 / and 
      :frequency (o / often) 
      :op1 (e / expensive 
            :mod-of (a / accident 
                  :part (y / you))))

# ::snt for a small additional charge payable on collection of the vehicle you may take out personal accident insurance for yourself and passengers pai costs approx 18 these rates are subject to change as they are based on summer 1989
# ::tok for a small additional charge payable on collection of the vehicle you may take out personal accident insurance for yourself and passengers pai costs approx 18 these rates are subject to change as they are based on summer 1989
# ::alignments 38-39|0.1.1.3.0+0.1.1.3 37-38|0.1.1.2 35-36|0.1.1 33-34|0.1.1.1 31-32|0.1 29-30|0 27-28|0.1.0 25-26|0.1.2.2.0 24-25|0.1.1.0 23-24|0.1.2.2 21-22|0.1.2.1 20-21|0.1.2 17-18|0.1.2.0 16-17|0.1.2.0.2 15-16|0.1.2.0.2.0 12-13|0.1.2.0.3.0+0.1.2.0.3 11-12|0.1.2.0.0 10-11|0.0.0 7-8|0.0 3-4|0.1.2.0.1 2-3|0.1.2.2.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:51.336
# ::node	0	subject	29-30
# ::node	0.0	collect-01	7-8
# ::node	0.0.0	vehicle	10-11
# ::node	0.1	change-01	31-32
# ::node	0.1.0	rate	27-28
# ::node	0.1.1	base-01	35-36
# ::node	0.1.1.0	approximately	24-25
# ::node	0.1.1.1	they	33-34
# ::node	0.1.1.2	summer	37-38
# ::node	0.1.1.3	date-entity	38-39
# ::node	0.1.1.3.0	1989	38-39
# ::node	0.1.2	and	20-21
# ::node	0.1.2.0	insure-02	17-18
# ::node	0.1.2.0.0	you	11-12
# ::node	0.1.2.0.1	additional	3-4
# ::node	0.1.2.0.2	accident	16-17
# ::node	0.1.2.0.2.0	personal	15-16
# ::node	0.1.2.0.3	date-entity	12-13
# ::node	0.1.2.0.3.0	5	12-13
# ::node	0.1.2.1	passenger	21-22
# ::node	0.1.2.2	cost-01	23-24
# ::node	0.1.2.2.0	18	25-26
# ::node	0.1.2.2.1	small	2-3
# ::root	0	subject
# ::edge	accident	mod	personal	0.1.2.0.2	0.1.2.0.2.0	
# ::edge	and	op1	insure-02	0.1.2	0.1.2.0	
# ::edge	and	op2	passenger	0.1.2	0.1.2.1	
# ::edge	and	op3	cost-01	0.1.2	0.1.2.2	
# ::edge	and	op4	change-01	0.1.2	0.1	
# ::edge	base-01	ARG0	approximately	0.1.1	0.1.1.0	
# ::edge	base-01	ARG1	they	0.1.1	0.1.1.1	
# ::edge	base-01	location	summer	0.1.1	0.1.1.2	
# ::edge	base-01	time	date-entity	0.1.1	0.1.1.3	
# ::edge	change-01	ARG0	rate	0.1	0.1.0	
# ::edge	change-01	ARG1	base-01	0.1	0.1.1	
# ::edge	collect-01	ARG0	subject	0.0	0	
# ::edge	collect-01	ARG1	vehicle	0.0	0.0.0	
# ::edge	cost-01	ARG1	18	0.1.2.2	0.1.2.2.0	
# ::edge	date-entity	month	5	0.1.2.0.3	0.1.2.0.3.0	
# ::edge	date-entity	year	1989	0.1.1.3	0.1.1.3.0	
# ::edge	insure-02	ARG0	you	0.1.2.0	0.1.2.0.0	
# ::edge	insure-02	ARG1	additional	0.1.2.0	0.1.2.0.1	
# ::edge	insure-02	ARG4	accident	0.1.2.0	0.1.2.0.2	
# ::edge	insure-02	mod	date-entity	0.1.2.0	0.1.2.0.3	
# ::edge	small	domain	cost-01	0.1.2.2.1	0.1.2.2	
# ::edge	subject	domain	change-01	0	0.1	
(s2 / subject 
      :ARG0-of (c3 / collect-01 
            :ARG1 (v / vehicle)) 
      :domain (c / change-01 
            :ARG0 (r / rate) 
            :ARG1 (b / base-01 
                  :ARG0 (a / approximately) 
                  :ARG1 (t / they) 
                  :location (s / summer) 
                  :time (d / date-entity 
                        :year 1989)) 
            :op-of (a2 / and 
                  :op1 (i / insure-02 
                        :ARG0 (y / you) 
                        :ARG1 (a4 / additional) 
                        :ARG4 (a3 / accident 
                              :mod (p2 / personal)) 
                        :mod (d2 / date-entity 
                              :month 5)) 
                  :op2 (p / passenger) 
                  :op3 (c2 / cost-01 
                        :ARG1 18 
                        :domain-of (s3 / small)))))

# ::snt the package provides worldwide 24 hour cover for lost or damaged equipment protection in the uk in the event of personal accident liabilities to third parties and even a holeinone cover to buy a round of drinks at the 19th
# ::tok the package provides worldwide 24 hour cover for lost or damaged equipment protection in the uk in the event of personal accident liabilities to third parties and even a holeinone cover to buy a round of drinks at the 19th
# ::alignments 36-37|0.1 34-35|0 32-33|0.0 26-27|0.0.0 25-26|0.0.0.1.0.0 21-22|0.0.0.1.0.3 20-21|0.0.0.1.0.3.0 18-19|0.0.0.1.0.2 12-13|0.0.0.1.0 11-12|0.0.0.1.0.1 10-11|0.0.0.1 9-10|0.0.0.1.1 8-9|0.0.0.1.1.0 5-6|0.0.0.1.1.0.0.2+0.0.0.1.1.0.0 4-5|0.0.0.1.1.0.0.1 3-4|0.0.0.1.1.0.0.0 2-3|0.0.0.0 1-2|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:51.964
# ::node	0	round	34-35
# ::node	0.0	buy-01	32-33
# ::node	0.0.0	and	26-27
# ::node	0.0.0.0	provide-01	2-3
# ::node	0.0.0.0.0	package	1-2
# ::node	0.0.0.1	damage-01	10-11
# ::node	0.0.0.1.0	protect-01	12-13
# ::node	0.0.0.1.0.0	party	25-26
# ::node	0.0.0.1.0.1	equipment	11-12
# ::node	0.0.0.1.0.2	event	18-19
# ::node	0.0.0.1.0.3	accident	21-22
# ::node	0.0.0.1.0.3.0	personal	20-21
# ::node	0.0.0.1.1	or	9-10
# ::node	0.0.0.1.1.0	lose-02	8-9
# ::node	0.0.0.1.1.0.0	temporal-quantity	5-6
# ::node	0.0.0.1.1.0.0.0	worldwide	3-4
# ::node	0.0.0.1.1.0.0.1	24	4-5
# ::node	0.0.0.1.1.0.0.2	hour	5-6
# ::node	0.1	drink	36-37
# ::root	0	round
# ::edge	accident	mod	personal	0.0.0.1.0.3	0.0.0.1.0.3.0	
# ::edge	and	op1	damage-01	0.0.0	0.0.0.1	
# ::edge	buy-01	ARG0	and	0.0	0.0.0	
# ::edge	buy-01	ARG1	round	0.0	0	
# ::edge	damage-01	ARG1	protect-01	0.0.0.1	0.0.0.1.0	
# ::edge	lose-02	ARG0	temporal-quantity	0.0.0.1.1.0	0.0.0.1.1.0.0	
# ::edge	or	op1	lose-02	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	or	op2	damage-01	0.0.0.1.1	0.0.0.1	
# ::edge	protect-01	ARG0	party	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	protect-01	ARG1	equipment	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	protect-01	ARG2	event	0.0.0.1.0	0.0.0.1.0.2	
# ::edge	protect-01	location	accident	0.0.0.1.0	0.0.0.1.0.3	
# ::edge	provide-01	ARG0	package	0.0.0.0	0.0.0.0.0	
# ::edge	provide-01	ARG1	and	0.0.0.0	0.0.0	
# ::edge	round	mod	drink	0	0.1	
# ::edge	temporal-quantity	quant	24	0.0.0.1.1.0.0	0.0.0.1.1.0.0.1	
# ::edge	temporal-quantity	unit	hour	0.0.0.1.1.0.0	0.0.0.1.1.0.0.2	
# ::edge	worldwide	op1	temporal-quantity	0.0.0.1.1.0.0.0	0.0.0.1.1.0.0	
(r / round 
      :ARG1-of (b / buy-01 
            :ARG0 (a / and 
                  :ARG1-of (p4 / provide-01 
                        :ARG0 (p5 / package)) 
                  :op1 (d2 / damage-01 
                        :ARG1 (p3 / protect-01 
                              :ARG0 (p / party) 
                              :ARG1 (e2 / equipment) 
                              :ARG2 (e / event) 
                              :location (a2 / accident 
                                    :mod (p2 / personal))) 
                        :op-of (o / or 
                              :op1 (l / lose-02 
                                    :ARG0 (t / temporal-quantity 
                                          :op-of (w / worldwide) 
                                          :quant 24 
                                          :unit (h / hour))))))) 
      :mod (d / drink))

# ::snt a right to personal security does not require others to protect a person from all accident or injury
# ::tok a right to personal security does not require others to protect a person from all accident or injury
# ::alignments 17-18|0.0.2.0.1 16-17|0.0.2.0 15-16|0.0.2 14-15|0.0.2.0.0 12-13|0.0.1 10-11|0.0 8-9|0.1 7-8|0 4-5|0.0.0 3-4|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:52.037
# ::node	0	require-01	7-8
# ::node	0.0	protect-01	10-11
# ::node	0.0.0	security	4-5
# ::node	0.0.0.0	personal	3-4
# ::node	0.0.1	person	12-13
# ::node	0.0.2	accident	15-16
# ::node	0.0.2.0	or	16-17
# ::node	0.0.2.0.0	all	14-15
# ::node	0.0.2.0.1	injure-01	17-18
# ::node	0.1	other	8-9
# ::root	0	require-01
# ::edge	or	mod	all	0.0.2.0	0.0.2.0.0	
# ::edge	or	op1	accident	0.0.2.0	0.0.2	
# ::edge	or	op2	injure-01	0.0.2.0	0.0.2.0.1	
# ::edge	protect-01	ARG0	security	0.0	0.0.0	
# ::edge	protect-01	ARG1	person	0.0	0.0.1	
# ::edge	protect-01	ARG2	accident	0.0	0.0.2	
# ::edge	require-01	ARG1	protect-01	0	0.0	
# ::edge	require-01	ARG2	other	0	0.1	
# ::edge	security	mod	personal	0.0.0	0.0.0.0	
(r / require-01 
      :ARG1 (p2 / protect-01 
            :ARG0 (s / security 
                  :mod (p3 / personal)) 
            :ARG1 (p / person) 
            :ARG2 (a / accident 
                  :op-of (o / or 
                        :mod (a2 / all) 
                        :op1 (i / injure-01)))) 
      :ARG2 (o2 / other))

# ::snt the accident survey showed june was the worst month for accidents with 59 november 55 came second, the least number of accidents was in december dash
# ::tok the accident survey showed june was the worst month for accidents with 59 november 55 came second , the least number of accidents was in december dash
# ::alignments 25-26|0.2.0+0.2 22-23|0.0.1 20-21|0.0.1.0 14-15|0.3 13-14|0.1.0.0.0.0+0.1.0.0.0 12-13|0.1.0.0 10-11|0.1.0 8-9|0.1.2+0.1 7-8|0.1.1 4-5|0.1.2.0.0+0.1.2.0 3-4|0 2-3|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:52.449
# ::node	0	show-01	3-4
# ::node	0.0	survey-01	2-3
# ::node	0.0.0	accident	1-2
# ::node	0.0.1	accident	22-23
# ::node	0.0.1.0	number	20-21
# ::node	0.1	temporal-quantity	8-9
# ::node	0.1.0	accident	10-11
# ::node	0.1.0.0	59	12-13
# ::node	0.1.0.0.0	date-entity	13-14
# ::node	0.1.0.0.0.0	11	13-14
# ::node	0.1.1	bad	7-8
# ::node	0.1.2	month	8-9
# ::node	0.1.2.0	date-entity	4-5
# ::node	0.1.2.0.0	6	4-5
# ::node	0.2	date-entity	25-26
# ::node	0.2.0	12	25-26
# ::node	0.3	55	14-15
# ::root	0	show-01
# ::edge	55	op1	show-01	0.3	0	
# ::edge	accident	duration	temporal-quantity	0.1.0	0.1	
# ::edge	accident	op1	survey-01	0.0.1	0.0	
# ::edge	accident	quant	number	0.0.1	0.0.1.0	
# ::edge	accident	time	59	0.1.0	0.1.0.0	
# ::edge	date-entity	month	11	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	date-entity	month	12	0.2	0.2.0	
# ::edge	date-entity	month	6	0.1.2.0	0.1.2.0.0	
# ::edge	date-entity	op1	show-01	0.2	0	
# ::edge	date-entity	quant	59	0.1.0.0.0	0.1.0.0	
# ::edge	month	domain	date-entity	0.1.2	0.1.2.0	
# ::edge	show-01	ARG0	survey-01	0	0.0	
# ::edge	show-01	ARG1	temporal-quantity	0	0.1	
# ::edge	survey-01	ARG0	accident	0.0	0.0.0	
# ::edge	temporal-quantity	mod	bad	0.1	0.1.1	
# ::edge	temporal-quantity	unit	month	0.1	0.1.2	
(s / show-01 
      :ARG0 (s2 / survey-01 
            :ARG0 (a3 / accident) 
            :op-of (a / accident 
                  :quant (n / number))) 
      :ARG1 (t / temporal-quantity 
            :duration-of (a2 / accident 
                  :time (52 / 59 
                        :quant-of (d2 / date-entity 
                              :month 11))) 
            :mod (b / bad) 
            :unit (m / month 
                  :domain (d3 / date-entity 
                        :month 6))) 
      :op-of (d / date-entity 
            :month 12) 
      :op-of 55)

# ::snt according to one scottish newspaper staff at balmoral have told the queen they fear their children could be killed in road accidents on the way to school during the darker scottish mornings the change would bring
# ::tok according to one scottish newspaper staff at balmoral have told the queen they fear their children could be killed in road accidents on the way to school during the darker scottish mornings the change would bring
# ::alignments 35-36|0.0.0.0.0 33-34|0.0.0.0 29-30|0.0.0.0.1 26-27|0.0.0.1.0 24-25|0.1.1 21-22|0.1 20-21|0.1.0 18-19|0.0.0.1 16-17|0 15-16|0.0.0.2 13-14|0.0 12-13|0.0.0 9-10|0.0.1 5-6|0.0.1.0+0.0.1.0.1 4-5|0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:52.671
# ::node	0	possible	16-17
# ::node	0.0	fear-01	13-14
# ::node	0.0.0	they	12-13
# ::node	0.0.0.0	change-01	33-34
# ::node	0.0.0.0.0	bring-01	35-36
# ::node	0.0.0.0.1	dark	29-30
# ::node	0.0.0.1	kill-01	18-19
# ::node	0.0.0.1.0	school	26-27
# ::node	0.0.0.2	child	15-16
# ::node	0.0.1	tell-01	9-10
# ::node	0.0.1.0	staff-01	5-6
# ::node	0.0.1.0.0	newspaper	4-5
# ::node	0.0.1.0.1	person	5-6
# ::node	0.1	accident	21-22
# ::node	0.1.0	road	20-21
# ::node	0.1.1	way	24-25
# ::root	0	possible
# ::edge	accident	location	road	0.1	0.1.0	
# ::edge	accident	location	way	0.1	0.1.1	
# ::edge	bring-01	ARG0	change-01	0.0.0.0.0	0.0.0.0	
# ::edge	change-01	ARG0	they	0.0.0.0	0.0.0	
# ::edge	change-01	ARG1	dark	0.0.0.0	0.0.0.0.1	
# ::edge	child	poss	they	0.0.0.2	0.0.0	
# ::edge	fear-01	ARG0	they	0.0	0.0.0	
# ::edge	fear-01	ARG1	possible	0.0	0	
# ::edge	kill-01	ARG0	they	0.0.0.1	0.0.0	
# ::edge	kill-01	ARG2	school	0.0.0.1	0.0.0.1.0	
# ::edge	possible	domain	accident	0	0.1	
# ::edge	staff-01	ARG0	newspaper	0.0.1.0	0.0.1.0.0	
# ::edge	staff-01	ARG1	tell-01	0.0.1.0	0.0.1	
# ::edge	staff-01	ARG2	person	0.0.1.0	0.0.1.0.1	
# ::edge	tell-01	ARG1	fear-01	0.0.1	0.0	
(p / possible 
      :ARG1-of (f / fear-01 
            :ARG0 (t / they 
                  :ARG0-of (c / change-01 
                        :ARG0-of (b / bring-01) 
                        :ARG1 (d / dark)) 
                  :ARG0-of (k / kill-01 
                        :ARG2 (s / school)) 
                  :poss-of (c2 / child)) 
            :ARG1-of (t2 / tell-01 
                  :ARG1-of (s2 / staff-01 
                        :ARG0 (n / newspaper) 
                        :ARG2 (p2 / person)))) 
      :domain (a / accident 
            :location (r / road) 
            :location (w / way)))

# ::snt a very serious accident there is absolutely inevitable
# ::tok a very serious accident there is absolutely inevitable
# ::alignments 7-8|0 6-7|0.1 3-4|0.0 2-3|0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:52.684
# ::node	0	inevitable	7-8
# ::node	0.0	accident	3-4
# ::node	0.0.0	serious	2-3
# ::node	0.0.0.0	very	1-2
# ::node	0.1	absolute	6-7
# ::root	0	inevitable
# ::edge	accident	mod	serious	0.0	0.0.0	
# ::edge	inevitable	domain	accident	0	0.0	
# ::edge	inevitable	mod	absolute	0	0.1	
# ::edge	serious	degree	very	0.0.0	0.0.0.0	
(i / inevitable 
      :domain (a2 / accident 
            :mod (s / serious 
                  :degree (v / very))) 
      :mod (a / absolute))

# ::snt bill campbell of the transport and general workers union the biggest ambulance union north of the border said accident and emergency men had walked out in anger and frustration
# ::tok bill campbell of the transport and general workers union the biggest ambulance union north of the border said accident and emergency men had walked out in anger and frustration
# ::alignments 28-29|0.1.0.0.0.0.0 27-28|0.1.0.0.0.0 26-27|0.1.0.0.0 23-24|0.1.0 21-22|0.1.0.0 20-21|0.1.2 19-20|0.1 18-19|0.1.1 17-18|0 16-17|0.1.0.1 13-14|0.0.1.0.1 12-13|0.1.0.1.0 11-12|0.1.0.1.0.0 10-11|0.0.1.0.0+0.0.1.0 8-9|0.0.1 7-8|0.0.0+0.0 6-7|0.0.0.0 5-6|0.0.2 4-5|0.0.2.1 0-1|0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:53.299
# ::node	0	say-01	17-18
# ::node	0.0	person	7-8
# ::node	0.0.0	work-01	7-8
# ::node	0.0.0.0	general	6-7
# ::node	0.0.1	union	8-9
# ::node	0.0.1.0	big	10-11
# ::node	0.0.1.0.0	most	10-11
# ::node	0.0.1.0.1	north	13-14
# ::node	0.0.2	and	5-6
# ::node	0.0.2.0	bill	0-1
# ::node	0.0.2.1	transport-01	4-5
# ::node	0.1	and	19-20
# ::node	0.1.0	walk-01	23-24
# ::node	0.1.0.0	man	21-22
# ::node	0.1.0.0.0	anger-01	26-27
# ::node	0.1.0.0.0.0	and	27-28
# ::node	0.1.0.0.0.0.0	frustrate-01	28-29
# ::node	0.1.0.1	border-01	16-17
# ::node	0.1.0.1.0	union	12-13
# ::node	0.1.0.1.0.0	ambulance	11-12
# ::node	0.1.1	accident	18-19
# ::node	0.1.2	emergency	20-21
# ::root	0	say-01
# ::edge	and	mod	bill	0.0.2	0.0.2.0	
# ::edge	and	op1	accident	0.1	0.1.1	
# ::edge	and	op1	anger-01	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	and	op1	transport-01	0.0.2	0.0.2.1	
# ::edge	and	op2	emergency	0.1	0.1.2	
# ::edge	and	op2	frustrate-01	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	and	op2	person	0.0.2	0.0	
# ::edge	anger-01	ARG1	man	0.1.0.0.0	0.1.0.0	
# ::edge	big	degree	most	0.0.1.0	0.0.1.0.0	
# ::edge	big	domain	union	0.0.1.0	0.0.1	
# ::edge	border-01	ARG2	union	0.1.0.1	0.1.0.1.0	
# ::edge	north	mod	big	0.0.1.0.1	0.0.1.0	
# ::edge	say-01	ARG0	person	0	0.0	
# ::edge	say-01	ARG1	and	0	0.1	
# ::edge	union	mod	ambulance	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	union	mod	person	0.0.1	0.0	
# ::edge	walk-01	ARG0	and	0.1.0	0.1	
# ::edge	walk-01	ARG1	man	0.1.0	0.1.0.0	
# ::edge	walk-01	ARG2	border-01	0.1.0	0.1.0.1	
# ::edge	work-01	ARG0	person	0.0.0	0.0	
# ::edge	work-01	ARG1	general	0.0.0	0.0.0.0	
(s / say-01 
      :ARG0 (p / person 
            :ARG0-of (w2 / work-01 
                  :ARG1 (g / general)) 
            :mod-of (u2 / union 
                  :domain-of (b2 / big 
                        :degree (m2 / most) 
                        :mod-of (n / north))) 
            :op-of (a6 / and 
                  :mod (b3 / bill) 
                  :op1 (t / transport-01))) 
      :ARG1 (a3 / and 
            :ARG0-of (w / walk-01 
                  :ARG1 (m / man 
                        :ARG1-of (a2 / anger-01 
                              :op-of (a / and 
                                    :op1 (f / frustrate-01)))) 
                  :ARG2 (b / border-01 
                        :ARG2 (u / union 
                              :mod (a5 / ambulance)))) 
            :op1 (a4 / accident) 
            :op2 (e / emergency)))

# ::snt more than 30 appliances have been reequipped with the latest cutting and spreading gear for releasing trapped accident victims, the tenders which now carry more distinctive markings will also have better floodlighting and a safety officer responsible for making sure noone strays out of the accident zone
# ::tok more than 30 appliances have been reequipped with the latest cutting and spreading gear for releasing trapped accident victims , the tenders which now carry more distinctive markings will also have better floodlighting and a safety officer responsible for making sure noone strays out of the accident zone
# ::alignments 47-48|0.1.0.0 46-47|0.1.0 37-38|0.1.1.0 36-37|0.1.1 35-36|0.1 33-34|0 29-30|0.0.1.2.1 23-24|0.1.1.0.0 18-19|0.0.0.0 17-18|0.0.0.0.0 16-17|0.0.1.2 15-16|0.0.0 13-14|0.0.1.1 12-13|0.0.1 11-12|0.0 9-10|0.0.1.0.0+0.0.1.0 2-3|0.0.1.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:53.707
# ::node	0	and	33-34
# ::node	0.0	and	11-12
# ::node	0.0.0	release-01	15-16
# ::node	0.0.0.0	victim	18-19
# ::node	0.0.0.0.0	accident	17-18
# ::node	0.0.1	spread-03	12-13
# ::node	0.0.1.0	late	9-10
# ::node	0.0.1.0.0	most	9-10
# ::node	0.0.1.1	gear	13-14
# ::node	0.0.1.2	trap-01	16-17
# ::node	0.0.1.2.0	30	2-3
# ::node	0.0.1.2.1	also	29-30
# ::node	0.1	safe-41	35-36
# ::node	0.1.0	accident	46-47
# ::node	0.1.0.0	zone	47-48
# ::node	0.1.1	officer	36-37
# ::node	0.1.1.0	responsible-41	37-38
# ::node	0.1.1.0.0	now	23-24
# ::root	0	and
# ::edge	and	op1	safe-41	0	0.1	
# ::edge	and	op1	spread-03	0.0	0.0.1	
# ::edge	and	op2	and	0.0	0	
# ::edge	late	degree	most	0.0.1.0	0.0.1.0.0	
# ::edge	officer	mod	safe-41	0.1.1	0.1	
# ::edge	release-01	ARG0	and	0.0.0	0.0	
# ::edge	release-01	ARG1	victim	0.0.0	0.0.0.0	
# ::edge	responsible-41	ARG0	now	0.1.1.0	0.1.1.0.0	
# ::edge	responsible-41	ARG1	officer	0.1.1.0	0.1.1	
# ::edge	safe-41	ARG0	accident	0.1	0.1.0	
# ::edge	spread-03	ARG0	late	0.0.1	0.0.1.0	
# ::edge	spread-03	ARG1	gear	0.0.1	0.0.1.1	
# ::edge	trap-01	ARG0	30	0.0.1.2	0.0.1.2.0	
# ::edge	trap-01	ARG1	also	0.0.1.2	0.0.1.2.1	
# ::edge	trap-01	ARG2	spread-03	0.0.1.2	0.0.1	
# ::edge	victim	mod	accident	0.0.0.0	0.0.0.0.0	
# ::edge	zone	mod	accident	0.1.0.0	0.1.0	
(a2 / and 
      :op-of (a5 / and 
            :ARG0-of (r2 / release-01 
                  :ARG1 (v / victim 
                        :mod (a4 / accident))) 
            :op1 (s2 / spread-03 
                  :ARG0 (l / late 
                        :degree (m / most)) 
                  :ARG1 (g / gear) 
                  :ARG2-of (t / trap-01 
                        :ARG0 30 
                        :ARG1 (a3 / also)))) 
      :op1 (s / safe-41 
            :ARG0 (a / accident 
                  :mod-of (z / zone)) 
            :mod-of (o / officer 
                  :ARG1-of (r / responsible-41 
                        :ARG0 (n / now)))))

# ::snt his father believes mark 25 killed himself because he could not get over killing his best friend in a shotgun accident four years ago
# ::tok his father believes mark 25 killed himself because he could not get over killing his best friend in a shotgun accident four years ago
# ::alignments 22-23|0.1.1.0.0.0.1.0.0+0.1.1.0.0.0.1.0 21-22|0.1.1.0.0.0.1 20-21|0.1.1.0.0.0.0 16-17|0.1.1.0.0+0.1.1.0.0.0 13-14|0.1.1.0 9-10|0.0 8-9|0.1.1 7-8|0 5-6|0.1 4-5|0.1.0 3-4|0.1.3 2-3|0.1.2 1-2|0.1.2.0+0.1.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:54.329
# ::node	0	cause-01	7-8
# ::node	0.0	possible	9-10
# ::node	0.1	kill-01	5-6
# ::node	0.1.0	25	4-5
# ::node	0.1.1	he	8-9
# ::node	0.1.1.0	kill-01	13-14
# ::node	0.1.1.0.0	friend	16-17
# ::node	0.1.1.0.0.0	have-rel-role-91	16-17
# ::node	0.1.1.0.0.0.0	accident	20-21
# ::node	0.1.1.0.0.0.1	4	21-22
# ::node	0.1.1.0.0.0.1.0	temporal-quantity	22-23
# ::node	0.1.1.0.0.0.1.0.0	year	22-23
# ::node	0.1.2	believe-01	2-3
# ::node	0.1.2.0	father	1-2
# ::node	0.1.2.0.0	have-rel-role-91	1-2
# ::node	0.1.3	mark-01	3-4
# ::root	0	cause-01
# ::edge	believe-01	ARG0	father	0.1.2	0.1.2.0	
# ::edge	believe-01	ARG1	kill-01	0.1.2	0.1	
# ::edge	cause-01	ARG0	possible	0	0.0	
# ::edge	cause-01	ARG1	kill-01	0	0.1	
# ::edge	have-rel-role-91	ARG1	accident	0.1.1.0.0.0	0.1.1.0.0.0.0	
# ::edge	have-rel-role-91	ARG2	father	0.1.2.0.0	0.1.2.0	
# ::edge	have-rel-role-91	ARG2	friend	0.1.1.0.0.0	0.1.1.0.0	
# ::edge	have-rel-role-91	frequency	4	0.1.1.0.0.0	0.1.1.0.0.0.1	
# ::edge	kill-01	ARG0	25	0.1	0.1.0	
# ::edge	kill-01	ARG0	he	0.1.1.0	0.1.1	
# ::edge	kill-01	ARG1	friend	0.1.1.0	0.1.1.0.0	
# ::edge	kill-01	ARG1	he	0.1	0.1.1	
# ::edge	kill-01	time	mark-01	0.1	0.1.3	
# ::edge	temporal-quantity	quant	4	0.1.1.0.0.0.1.0	0.1.1.0.0.0.1	
# ::edge	temporal-quantity	unit	year	0.1.1.0.0.0.1.0	0.1.1.0.0.0.1.0.0	
(c / cause-01 
      :ARG0 (p / possible) 
      :ARG1 (k2 / kill-01 
            :ARG0 25 
            :ARG1 (h2 / he 
                  :ARG0-of (k / kill-01 
                        :ARG1 (f / friend 
                              :ARG2-of (h / have-rel-role-91 
                                    :ARG1 (a / accident) 
                                    :frequency (4 / 4 
                                          :quant-of (t / temporal-quantity 
                                                :unit (y / year))))))) 
            :ARG1-of (b / believe-01 
                  :ARG0 (f2 / father 
                        :ARG2-of (h3 / have-rel-role-91))) 
            :time (m / mark-01)))

# ::snt properly repaired accident damage is always rustproofed
# ::tok properly repaired accident damage is always rustproofed
# ::alignments 5-6|0.1 3-4|0 2-3|0.2 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:54.343
# ::node	0	damage-01	3-4
# ::node	0.0	proper	0-1
# ::node	0.1	always	5-6
# ::node	0.2	accident	2-3
# ::root	0	damage-01
# ::edge	damage-01	ARG1	proper	0	0.0	
# ::edge	damage-01	manner	always	0	0.1	
# ::edge	damage-01	mod	accident	0	0.2	
(d / damage-01 
      :ARG1 (p / proper) 
      :manner (a / always) 
      :mod (a2 / accident))

# ::snt pollution of international rivers and lakes handling of harmful chemicals and limiting crossborder effects of industrial accidents
# ::tok pollution of international rivers and lakes handling of harmful chemicals and limiting crossborder effects of industrial accidents
# ::alignments 16-17|0.2.0.0 15-16|0.2.0.0.0 13-14|0.2.0 11-12|0.2 10-11|0 9-10|0.1.0 8-9|0.1.0.0 6-7|0.1 5-6|0.1.1 4-5|0.0 2-3|0.0.1 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:54.434
# ::node	0	and	10-11
# ::node	0.0	and	4-5
# ::node	0.0.0	pollute-01	0-1
# ::node	0.0.1	international	2-3
# ::node	0.1	handle-01	6-7
# ::node	0.1.0	chemical	9-10
# ::node	0.1.0.0	harm-01	8-9
# ::node	0.1.1	lake	5-6
# ::node	0.2	limit-01	11-12
# ::node	0.2.0	effect-01	13-14
# ::node	0.2.0.0	accident	16-17
# ::node	0.2.0.0.0	industry	15-16
# ::root	0	and
# ::edge	accident	mod	industry	0.2.0.0	0.2.0.0.0	
# ::edge	and	mod	international	0.0	0.0.1	
# ::edge	and	op1	and	0	0.0	
# ::edge	and	op2	handle-01	0	0.1	
# ::edge	and	op3	limit-01	0	0.2	
# ::edge	effect-01	ARG0	accident	0.2.0	0.2.0.0	
# ::edge	handle-01	ARG0	chemical	0.1	0.1.0	
# ::edge	handle-01	ARG1	lake	0.1	0.1.1	
# ::edge	harm-01	ARG0	chemical	0.1.0.0	0.1.0	
# ::edge	limit-01	ARG1	effect-01	0.2	0.2.0	
# ::edge	pollute-01	ARG1	and	0.0.0	0.0	
(a2 / and 
      :op1 (a3 / and 
            :ARG1-of (p / pollute-01) 
            :mod (i2 / international)) 
      :op2 (h2 / handle-01 
            :ARG0 (c / chemical 
                  :ARG0-of (h / harm-01)) 
            :ARG1 (l2 / lake)) 
      :op3 (l / limit-01 
            :ARG1 (e / effect-01 
                  :ARG0 (a / accident 
                        :mod (i / industry)))))

# ::snt the hero is a noble scientist turned into a walking plant by a freak accident but he seems to have few genuinely vegetable traits
# ::tok the hero is a noble scientist turned into a walking plant by a freak accident but he seems to have few genuinely vegetable traits
# ::alignments 21-22|0.0.0.0 20-21|0.1.0.0 17-18|0.1 16-17|0.1.0 15-16|0 14-15|0.0.0.1.1 13-14|0.0.0.1 10-11|0.0 9-10|0.0.0 5-6|0.0.0.1.0.0 4-5|0.0.0.1.0.0.0 1-2|0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:54.682
# ::node	0	contrast-01	15-16
# ::node	0.0	plant	10-11
# ::node	0.0.0	walk-01	9-10
# ::node	0.0.0.0	genuine	21-22
# ::node	0.0.0.1	freak-01	13-14
# ::node	0.0.0.1.0	hero	1-2
# ::node	0.0.0.1.0.0	scientist	5-6
# ::node	0.0.0.1.0.0.0	noble	4-5
# ::node	0.0.0.1.1	accident	14-15
# ::node	0.1	seem-01	17-18
# ::node	0.1.0	he	16-17
# ::node	0.1.0.0	few	20-21
# ::root	0	contrast-01
# ::edge	accident	location	freak-01	0.0.0.1.1	0.0.0.1	
# ::edge	contrast-01	ARG1	plant	0	0.0	
# ::edge	contrast-01	ARG2	seem-01	0	0.1	
# ::edge	few	op1	he	0.1.0.0	0.1.0	
# ::edge	freak-01	ARG0	hero	0.0.0.1	0.0.0.1.0	
# ::edge	scientist	domain	hero	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	scientist	mod	noble	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	seem-01	ARG1	he	0.1	0.1.0	
# ::edge	walk-01	ARG0	plant	0.0.0	0.0	
# ::edge	walk-01	ARG1	genuine	0.0.0	0.0.0.0	
# ::edge	walk-01	manner	freak-01	0.0.0	0.0.0.1	
(c / contrast-01 
      :ARG1 (p / plant 
            :ARG0-of (w / walk-01 
                  :ARG1 (g / genuine) 
                  :manner (f2 / freak-01 
                        :ARG0 (h2 / hero 
                              :domain-of (s2 / scientist 
                                    :mod (n / noble))) 
                        :location-of (a / accident)))) 
      :ARG2 (s / seem-01 
            :ARG1 (h / he 
                  :op-of (f / few))))

# ::snt police were today trying to trace a lorry driver after a wheel fell from his vehicle causing an accident in which two men died
# ::tok police were today trying to trace a lorry driver after a wheel fell from his vehicle causing an accident in which two men died
# ::alignments 23-24|0.1.0 22-23|0.1.0.0 21-22|0.1.0.0.0 18-19|0.1 16-17|0 15-16|0.0.0.0 12-13|0.0.0 11-12|0.0 9-10|0.0.0.1 8-9|0.0.0.1.0.1.0+0.0.0.1.0.1 5-6|0.0.0.1.0 3-4|0.0.0.1.0.2 2-3|0.0.0.1.0.0 0-1|0.0.0.1.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:55.062
# ::node	0	cause-01	16-17
# ::node	0.0	wheel	11-12
# ::node	0.0.0	fall-01	12-13
# ::node	0.0.0.0	vehicle	15-16
# ::node	0.0.0.1	after	9-10
# ::node	0.0.0.1.0	trace-02	5-6
# ::node	0.0.0.1.0.0	today	2-3
# ::node	0.0.0.1.0.1	person	8-9
# ::node	0.0.0.1.0.1.0	drive-01	8-9
# ::node	0.0.0.1.0.2	try-01	3-4
# ::node	0.0.0.1.0.2.0	police	0-1
# ::node	0.1	accident	18-19
# ::node	0.1.0	die-01	23-24
# ::node	0.1.0.0	man	22-23
# ::node	0.1.0.0.0	2	21-22
# ::root	0	cause-01
# ::edge	after	op1	fall-01	0.0.0.1	0.0.0	
# ::edge	cause-01	ARG0	wheel	0	0.0	
# ::edge	cause-01	ARG1	accident	0	0.1	
# ::edge	die-01	ARG0	man	0.1.0	0.1.0.0	
# ::edge	die-01	ARG1	accident	0.1.0	0.1	
# ::edge	drive-01	ARG0	person	0.0.0.1.0.1.0	0.0.0.1.0.1	
# ::edge	fall-01	ARG1	wheel	0.0.0	0.0	
# ::edge	fall-01	ARG2	vehicle	0.0.0	0.0.0.0	
# ::edge	man	quant	2	0.1.0.0	0.1.0.0.0	
# ::edge	trace-02	ARG0	today	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	trace-02	ARG1	person	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	trace-02	time	after	0.0.0.1.0	0.0.0.1	
# ::edge	try-01	ARG0	police	0.0.0.1.0.2	0.0.0.1.0.2.0	
# ::edge	try-01	ARG1	trace-02	0.0.0.1.0.2	0.0.0.1.0	
(c / cause-01 
      :ARG0 (w / wheel 
            :ARG1-of (f / fall-01 
                  :ARG2 (v / vehicle) 
                  :op-of (a2 / after 
                        :time-of (t / trace-02 
                              :ARG0 (t3 / today) 
                              :ARG1 (p / person 
                                    :ARG0-of (d2 / drive-01)) 
                              :ARG1-of (t2 / try-01 
                                    :ARG0 (p2 / police)))))) 
      :ARG1 (a / accident 
            :ARG1-of (d / die-01 
                  :ARG0 (m / man 
                        :quant 2))))

# ::snt school head mrs sylvia donald said mr davies had not been working with children at the time of the accident
# ::tok school head mrs sylvia donald said mr davies had not been working with children at the time of the accident
# ::alignments 19-20|0.0 16-17|0.1.0 13-14|0.1.1 11-12|0.1 5-6|0 1-2|0.1.2 0-1|0.1.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:55.100
# ::node	0	say-01	5-6
# ::node	0.0	accident	19-20
# ::node	0.1	work-01	11-12
# ::node	0.1.0	time	16-17
# ::node	0.1.1	child	13-14
# ::node	0.1.2	head-01	1-2
# ::node	0.1.2.0	school	0-1
# ::root	0	say-01
# ::edge	head-01	ARG0	school	0.1.2	0.1.2.0	
# ::edge	say-01	ARG0	accident	0	0.0	
# ::edge	say-01	ARG1	work-01	0	0.1	
# ::edge	work-01	ARG0	time	0.1	0.1.0	
# ::edge	work-01	ARG1	child	0.1	0.1.1	
# ::edge	work-01	ARG2	head-01	0.1	0.1.2	
(s / say-01 
      :ARG0 (a / accident) 
      :ARG1 (w / work-01 
            :ARG0 (t / time) 
            :ARG1 (c / child) 
            :ARG2 (h / head-01 
                  :ARG0 (s2 / school))))

# ::snt neither could exist without the other without exposure to liability insurance would not be needed without insurance tort liability would be an empty gesture reducing the tort system to a negligible role of accident compensation and depriving target defendants of needed protection against financial catastrophe
# ::tok neither could exist without the other without exposure to liability insurance would not be needed without insurance tort liability would be an empty gesture reducing the tort system to a negligible role of accident compensation and depriving target defendants of needed protection against financial catastrophe
# ::alignments 44-45|0.0.0.0.0.0 43-44|0.0.0.0.0.0.0 41-42|0.0.0.0.0 40-41|0.0.0.0 38-39|0.0 37-38|0 35-36|0.0.0 34-35|0.0.0.1.2.1 33-34|0.0.0.1.2.1.0 31-32|0.0.0.1.2 30-31|0.0.0.1.2.0 27-28|0.0.0.1.1 24-25|0.0.0.1 23-24|0.0.0.1.3 22-23|0.0.0.1.3.1 18-19|0.0.0.1.0 16-17|0.0.0.1.3.0.0.0 14-15|0.0.0.1.3.0 10-11|0.0.0.1.3.0.0 9-10|0.0.0.1.3.0.0.1.0 7-8|0.0.0.1.3.0.0.1 5-6|0.0.0.1.3.0.0.1.0.0 2-3|0.0.0.1.3.0.0.1.1 1-2|0.0.0.1.3.0.0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:56.292
# ::node	0	target-01	37-38
# ::node	0.0	defendant	38-39
# ::node	0.0.0	and	35-36
# ::node	0.0.0.0	need-01	40-41
# ::node	0.0.0.0.0	protect-01	41-42
# ::node	0.0.0.0.0.0	catastrophe	44-45
# ::node	0.0.0.0.0.0.0	finance	43-44
# ::node	0.0.0.1	reduce-01	24-25
# ::node	0.0.0.1.0	liability	18-19
# ::node	0.0.0.1.1	system	27-28
# ::node	0.0.0.1.2	role	31-32
# ::node	0.0.0.1.2.0	negligible	30-31
# ::node	0.0.0.1.2.1	compensate-01	34-35
# ::node	0.0.0.1.2.1.0	accident	33-34
# ::node	0.0.0.1.3	gesture-01	23-24
# ::node	0.0.0.1.3.0	need-01	14-15
# ::node	0.0.0.1.3.0.0	insure-02	10-11
# ::node	0.0.0.1.3.0.0.0	insure-02	16-17
# ::node	0.0.0.1.3.0.0.1	expose-01	7-8
# ::node	0.0.0.1.3.0.0.1.0	liability	9-10
# ::node	0.0.0.1.3.0.0.1.0.0	other	5-6
# ::node	0.0.0.1.3.0.0.1.1	exist-01	2-3
# ::node	0.0.0.1.3.0.0.1.1.0	possible	1-2
# ::node	0.0.0.1.3.1	empty	22-23
# ::root	0	target-01
# ::edge	and	op1	reduce-01	0.0.0	0.0.0.1	
# ::edge	and	op2	defendant	0.0.0	0.0	
# ::edge	catastrophe	mod	finance	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	compensate-01	ARG3	accident	0.0.0.1.2.1	0.0.0.1.2.1.0	
# ::edge	exist-01	ARG1	expose-01	0.0.0.1.3.0.0.1.1	0.0.0.1.3.0.0.1	
# ::edge	expose-01	ARG1	liability	0.0.0.1.3.0.0.1	0.0.0.1.3.0.0.1.0	
# ::edge	gesture-01	ARG1	need-01	0.0.0.1.3	0.0.0.1.3.0	
# ::edge	gesture-01	mod	empty	0.0.0.1.3	0.0.0.1.3.1	
# ::edge	insure-02	ARG0	insure-02	0.0.0.1.3.0.0.0	0.0.0.1.3.0.0	
# ::edge	insure-02	ARG1	expose-01	0.0.0.1.3.0.0	0.0.0.1.3.0.0.1	
# ::edge	need-01	ARG1	insure-02	0.0.0.1.3.0	0.0.0.1.3.0.0	
# ::edge	need-01	ARG1	protect-01	0.0.0.0	0.0.0.0.0	
# ::edge	need-01	ARG2	and	0.0.0.0	0.0.0	
# ::edge	other	prep-to	liability	0.0.0.1.3.0.0.1.0.0	0.0.0.1.3.0.0.1.0	
# ::edge	possible	domain	exist-01	0.0.0.1.3.0.0.1.1.0	0.0.0.1.3.0.0.1.1	
# ::edge	protect-01	ARG0	catastrophe	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	reduce-01	ARG0	liability	0.0.0.1	0.0.0.1.0	
# ::edge	reduce-01	ARG1	system	0.0.0.1	0.0.0.1.1	
# ::edge	reduce-01	ARG2	role	0.0.0.1	0.0.0.1.2	
# ::edge	reduce-01	manner	gesture-01	0.0.0.1	0.0.0.1.3	
# ::edge	role	mod	negligible	0.0.0.1.2	0.0.0.1.2.0	
# ::edge	role	poss	compensate-01	0.0.0.1.2	0.0.0.1.2.1	
# ::edge	target-01	ARG1	defendant	0	0.0	
(t / target-01 
      :ARG1 (d / defendant 
            :op-of (a / and 
                  :ARG2-of (n / need-01 
                        :ARG1 (p / protect-01 
                              :ARG0 (c / catastrophe 
                                    :mod (f / finance)))) 
                  :op1 (r2 / reduce-01 
                        :ARG0 (l / liability) 
                        :ARG1 (s / system) 
                        :ARG2 (r / role 
                              :mod (n2 / negligible) 
                              :poss (c2 / compensate-01 
                                    :ARG3 (a2 / accident))) 
                        :manner (g / gesture-01 
                              :ARG1 (n3 / need-01 
                                    :ARG1 (i2 / insure-02 
                                          :ARG0-of (i / insure-02) 
                                          :ARG1 (e2 / expose-01 
                                                :ARG1 (l2 / liability 
                                                      :prep-to-of (o / other)) 
                                                :ARG1-of (e3 / exist-01 
                                                      :domain-of (p2 / possible))))) 
                              :mod (e / empty))))))

# ::snt hugh carlisle qc for the van driver david watson of cannonsbrook harlow said he bitterly regretted the accident
# ::tok hugh carlisle qc for the van driver david watson of cannonsbrook harlow said he bitterly regretted the accident
# ::alignments 17-18|0.1 14-15|0.2.0.0.0 13-14|0.0 12-13|0 6-7|0.2.0+0.2 5-6|0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:56.431
# ::node	0	say-01	12-13
# ::node	0.0	he	13-14
# ::node	0.1	accident	17-18
# ::node	0.2	person	6-7
# ::node	0.2.0	drive-01	6-7
# ::node	0.2.0.0	van	5-6
# ::node	0.2.0.0.0	bitter	14-15
# ::root	0	say-01
# ::edge	drive-01	ARG0	person	0.2.0	0.2	
# ::edge	drive-01	ARG1	van	0.2.0	0.2.0.0	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	accident	0	0.1	
# ::edge	say-01	ARG2	person	0	0.2	
# ::edge	van	poss	bitter	0.2.0.0	0.2.0.0.0	
(s / say-01 
      :ARG0 (h / he) 
      :ARG1 (a / accident) 
      :ARG2 (p / person 
            :ARG0-of (d / drive-01 
                  :ARG1 (v / van 
                        :poss (b / bitter)))))

# ::snt   a couple of times she found herself walking past the museum almost hoping she would meet rachel as though by accident but she never went in
# ::tok a couple of times she found herself walking past the museum almost hoping she would meet rachel as though by accident but she never went in
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:56.431
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the county council has made it a priority to build the bypass because of the amount of accidents which have taken place in and around middleton cheney, in the five years between january 1984 and january 1988 there were 49 traffic accidents involving personal injury on this particular length of the a422 resulting in 18 serious and 65 slight casualties
# ::tok the county council has made it a priority to build the bypass because of the amount of accidents which have taken place in and around middleton cheney , in the five years between january 1984 and january 1988 there were 49 traffic accidents involving personal injury on this particular length of the a422 resulting in 18 serious and 65 slight casualties
# ::alignments 60-61|0.1.1.1.0.0.0.0.2.1.1 59-60|0.1.1.1.0.0.0.0.2.1.1.0 58-59|0.1.1.1.0.0.0.0.0.0 57-58|0.1.1.1.0.0.0.0.2.1 56-57|0.1.1.1.0.0.0.0.2.1.0 55-56|0.1.1.1.0.0.0.0.2.0 53-54|0.1.1.1.0.0.0.0.2 49-50|0.1.1.1.0.0.0.0.0.1 48-49|0.1.1.1.0.0.0.0.0.1.1 47-48|0.1.1.1.0.0.0.0.0.1.0 45-46|0.1.1.1.0.0.0.0.0 44-45|0.1.1.1.0.0.0.0.0.2 43-44|0.1.1.1.0.0.0.0 42-43|0.1.1.1.0.0.0.0.1 41-42|0.1.1.1.0.0.0.0.1.0 40-41|0.1.1.1.0.0.0.0.2.2 36-38|0.1.1.1.0.0.0.3+0.1.1.1.0.0.0.1+0.1.1.1.0.0.0 35-36|0.1.1.1.0.0 33-35|0.1.1.1.0.0.0.2.1.1+0.1.1.1.0.0.0.2.1.0+0.1.1.1.0.0.0.2.1 32-33|0.1.1.1.0.0.0.2 31-32|0.1.1.1.0.0.0.2.0.1+0.1.1.1.0.0.0.2.0 30-31|0.1.1.1.0.0.0.2.0.0 24-25|0.1.1.1.1 23-24|0.1.1.1 21-22|0.1.1.1.0 17-18|0.0.0 15-16|0.0 12-13|0 11-12|0.1.1 9-10|0.1 7-8|0.1.0 5-6|0.1.1.0 2-3|0.1.0.0 1-2|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:59.248
# ::node	0	cause-01	12-13
# ::node	0.0	amount	15-16
# ::node	0.0.0	accident	17-18
# ::node	0.1	build-01	9-10
# ::node	0.1.0	priority	7-8
# ::node	0.1.0.0	council	2-3
# ::node	0.1.0.0.0	county	1-2
# ::node	0.1.1	bypass	11-12
# ::node	0.1.1.0	it	5-6
# ::node	0.1.1.1	and	23-24
# ::node	0.1.1.1.0	place	21-22
# ::node	0.1.1.1.0.0	and	35-36
# ::node	0.1.1.1.0.0.0	date-entity	36-38
# ::node	0.1.1.1.0.0.0.0	involve-01	43-44
# ::node	0.1.1.1.0.0.0.0.0	injure-01	45-46
# ::node	0.1.1.1.0.0.0.0.0.0	65	58-59
# ::node	0.1.1.1.0.0.0.0.0.1	length	49-50
# ::node	0.1.1.1.0.0.0.0.0.1.0	this	47-48
# ::node	0.1.1.1.0.0.0.0.0.1.1	particular	48-49
# ::node	0.1.1.1.0.0.0.0.0.2	personal	44-45
# ::node	0.1.1.1.0.0.0.0.1	accident	42-43
# ::node	0.1.1.1.0.0.0.0.1.0	traffic	41-42
# ::node	0.1.1.1.0.0.0.0.2	result-01	53-54
# ::node	0.1.1.1.0.0.0.0.2.0	18	55-56
# ::node	0.1.1.1.0.0.0.0.2.1	and	57-58
# ::node	0.1.1.1.0.0.0.0.2.1.0	serious	56-57
# ::node	0.1.1.1.0.0.0.0.2.1.1	casualty	60-61
# ::node	0.1.1.1.0.0.0.0.2.1.1.0	slight	59-60
# ::node	0.1.1.1.0.0.0.0.2.2	49	40-41
# ::node	0.1.1.1.0.0.0.1	1	36-38
# ::node	0.1.1.1.0.0.0.2	between	32-33
# ::node	0.1.1.1.0.0.0.2.0	temporal-quantity	31-32
# ::node	0.1.1.1.0.0.0.2.0.0	5	30-31
# ::node	0.1.1.1.0.0.0.2.0.1	year	31-32
# ::node	0.1.1.1.0.0.0.2.1	date-entity	33-35
# ::node	0.1.1.1.0.0.0.2.1.0	1	33-35
# ::node	0.1.1.1.0.0.0.2.1.1	1984	33-35
# ::node	0.1.1.1.0.0.0.3	1988	36-38
# ::node	0.1.1.1.1	around	24-25
# ::root	0	cause-01
# ::edge	49	op1	result-01	0.1.1.1.0.0.0.0.2.2	0.1.1.1.0.0.0.0.2	
# ::edge	accident	mod	traffic	0.1.1.1.0.0.0.0.1	0.1.1.1.0.0.0.0.1.0	
# ::edge	accident	quant	amount	0.0.0	0.0	
# ::edge	and	op1	around	0.1.1.1	0.1.1.1.1	
# ::edge	and	op1	date-entity	0.1.1.1.0.0	0.1.1.1.0.0.0	
# ::edge	and	op1	serious	0.1.1.1.0.0.0.0.2.1	0.1.1.1.0.0.0.0.2.1.0	
# ::edge	and	op2	casualty	0.1.1.1.0.0.0.0.2.1	0.1.1.1.0.0.0.0.2.1.1	
# ::edge	between	op1	date-entity	0.1.1.1.0.0.0.2	0.1.1.1.0.0.0.2.1	
# ::edge	between	op2	date-entity	0.1.1.1.0.0.0.2	0.1.1.1.0.0.0	
# ::edge	build-01	ARG0	priority	0.1	0.1.0	
# ::edge	build-01	ARG1	bypass	0.1	0.1.1	
# ::edge	bypass	domain	it	0.1.1	0.1.1.0	
# ::edge	bypass	example	and	0.1.1	0.1.1.1	
# ::edge	casualty	mod	slight	0.1.1.1.0.0.0.0.2.1.1	0.1.1.1.0.0.0.0.2.1.1.0	
# ::edge	cause-01	ARG0	amount	0	0.0	
# ::edge	cause-01	ARG1	build-01	0	0.1	
# ::edge	council	mod	county	0.1.0.0	0.1.0.0.0	
# ::edge	date-entity	month	1	0.1.1.1.0.0.0	0.1.1.1.0.0.0.1	
# ::edge	date-entity	month	1	0.1.1.1.0.0.0.2.1	0.1.1.1.0.0.0.2.1.0	
# ::edge	date-entity	year	1984	0.1.1.1.0.0.0.2.1	0.1.1.1.0.0.0.2.1.1	
# ::edge	date-entity	year	1988	0.1.1.1.0.0.0	0.1.1.1.0.0.0.3	
# ::edge	injure-01	ARG0	65	0.1.1.1.0.0.0.0.0	0.1.1.1.0.0.0.0.0.0	
# ::edge	injure-01	ARG1	length	0.1.1.1.0.0.0.0.0	0.1.1.1.0.0.0.0.0.1	
# ::edge	injure-01	mod	personal	0.1.1.1.0.0.0.0.0	0.1.1.1.0.0.0.0.0.2	
# ::edge	involve-01	ARG0	date-entity	0.1.1.1.0.0.0.0	0.1.1.1.0.0.0	
# ::edge	involve-01	ARG1	injure-01	0.1.1.1.0.0.0.0	0.1.1.1.0.0.0.0.0	
# ::edge	involve-01	ARG2	accident	0.1.1.1.0.0.0.0	0.1.1.1.0.0.0.0.1	
# ::edge	length	mod	particular	0.1.1.1.0.0.0.0.0.1	0.1.1.1.0.0.0.0.0.1.1	
# ::edge	length	mod	this	0.1.1.1.0.0.0.0.0.1	0.1.1.1.0.0.0.0.0.1.0	
# ::edge	place	example	and	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	place	location	and	0.1.1.1.0	0.1.1.1	
# ::edge	priority	domain	council	0.1.0	0.1.0.0	
# ::edge	result-01	ARG0	18	0.1.1.1.0.0.0.0.2	0.1.1.1.0.0.0.0.2.0	
# ::edge	result-01	ARG1	and	0.1.1.1.0.0.0.0.2	0.1.1.1.0.0.0.0.2.1	
# ::edge	result-01	ARG2	involve-01	0.1.1.1.0.0.0.0.2	0.1.1.1.0.0.0.0	
# ::edge	temporal-quantity	location	between	0.1.1.1.0.0.0.2.0	0.1.1.1.0.0.0.2	
# ::edge	temporal-quantity	quant	5	0.1.1.1.0.0.0.2.0	0.1.1.1.0.0.0.2.0.0	
# ::edge	temporal-quantity	unit	year	0.1.1.1.0.0.0.2.0	0.1.1.1.0.0.0.2.0.1	
(c2 / cause-01 
      :ARG0 (a7 / amount 
            :quant-of (a6 / accident)) 
      :ARG1 (b3 / build-01 
            :ARG0 (p4 / priority 
                  :domain (c3 / council 
                        :mod (c4 / county))) 
            :ARG1 (b2 / bypass 
                  :domain (i3 / it) 
                  :example (a5 / and 
                        :location-of (p3 / place 
                              :example (a3 / and 
                                    :op1 (d / date-entity 
                                          :ARG0-of (i2 / involve-01 
                                                :ARG1 (i / injure-01 
                                                      :ARG0 65 
                                                      :ARG1 (l / length 
                                                            :mod (t / this) 
                                                            :mod (p / particular)) 
                                                      :mod (p2 / personal)) 
                                                :ARG2 (a2 / accident 
                                                      :mod (t2 / traffic)) 
                                                :ARG2-of (r / result-01 
                                                      :ARG0 18 
                                                      :ARG1 (a / and 
                                                            :op1 (s2 / serious) 
                                                            :op2 (c / casualty 
                                                                  :mod (s / slight))) 
                                                      :op-of 49)) 
                                          :month 1 
                                          :op-of (b / between 
                                                :location-of (t3 / temporal-quantity 
                                                      :quant 5 
                                                      :unit (y / year)) 
                                                :op1 (d2 / date-entity 
                                                      :month 1 
                                                      :year 1984)) 
                                          :year 1988))) 
                        :op1 (a4 / around)))))

# ::snt you could as they say meet with a very nasty accident
# ::tok you could as they say meet with a very nasty accident
# ::alignments 10-11|0.2 9-10|0.2.0 8-9|0.2.0.0 4-5|0 3-4|0.0 1-2|0.1 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:59.330
# ::node	0	say-01	4-5
# ::node	0.0	they	3-4
# ::node	0.1	possible	1-2
# ::node	0.1.0	you	0-1
# ::node	0.2	accident	10-11
# ::node	0.2.0	nasty	9-10
# ::node	0.2.0.0	very	8-9
# ::root	0	say-01
# ::edge	accident	mod	nasty	0.2	0.2.0	
# ::edge	nasty	degree	very	0.2.0	0.2.0.0	
# ::edge	possible	domain	you	0.1	0.1.0	
# ::edge	say-01	ARG0	they	0	0.0	
# ::edge	say-01	ARG1	possible	0	0.1	
# ::edge	say-01	location	accident	0	0.2	
(s / say-01 
      :ARG0 (t / they) 
      :ARG1 (p / possible 
            :domain (y / you)) 
      :location (a / accident 
            :mod (n / nasty 
                  :degree (v / very))))

# ::snt she claimed that major progress is being made towards the establishment of a 72hour maximum week and that problems of excessive hours only now persist in the paediatric accident and obstetric departments
# ::tok she claimed that major progress is being made towards the establishment of a 72hour maximum week and that problems of excessive hours only now persist in the paediatric accident and obstetric departments
# ::alignments 31-32|0.1.0.4.0 29-30|0.1.0.4 28-29|0.1.0.2 24-25|0.1.0 23-24|0.1.0.5 22-23|0.1.0.3 21-22|0.1.0.4.0.0.0+0.1.0.4.0.0 20-21|0.1.0.4.0.0.0.0 18-19|0.1.0.0 16-17|0.1 15-16|0.1.0.1.0.1 14-15|0.1.0.1.0.0 10-11|0.1.0.1.0 4-5|0.1.0.1 3-4|0.1.0.1.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:59.970
# ::node	0	claim-01	1-2
# ::node	0.0	she	0-1
# ::node	0.1	and	16-17
# ::node	0.1.0	persist-01	24-25
# ::node	0.1.0.0	problem	18-19
# ::node	0.1.0.1	progress-01	4-5
# ::node	0.1.0.1.0	establish-01	10-11
# ::node	0.1.0.1.0.0	maximum	14-15
# ::node	0.1.0.1.0.1	week	15-16
# ::node	0.1.0.1.1	major	3-4
# ::node	0.1.0.2	accident	28-29
# ::node	0.1.0.3	only	22-23
# ::node	0.1.0.4	and	29-30
# ::node	0.1.0.4.0	department	31-32
# ::node	0.1.0.4.0.0	temporal-quantity	21-22
# ::node	0.1.0.4.0.0.0	hour	21-22
# ::node	0.1.0.4.0.0.0.0	excessive	20-21
# ::node	0.1.0.5	now	23-24
# ::root	0	claim-01
# ::edge	and	op1	persist-01	0.1	0.1.0	
# ::edge	and	op1	persist-01	0.1.0.4	0.1.0	
# ::edge	and	op2	department	0.1.0.4	0.1.0.4.0	
# ::edge	claim-01	ARG0	she	0	0.0	
# ::edge	claim-01	ARG1	and	0	0.1	
# ::edge	department	mod	temporal-quantity	0.1.0.4.0	0.1.0.4.0.0	
# ::edge	establish-01	ARG0	progress-01	0.1.0.1.0	0.1.0.1	
# ::edge	establish-01	ARG1	maximum	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	establish-01	time	week	0.1.0.1.0	0.1.0.1.0.1	
# ::edge	hour	mod	excessive	0.1.0.4.0.0.0	0.1.0.4.0.0.0.0	
# ::edge	persist-01	ARG0	problem	0.1.0	0.1.0.0	
# ::edge	persist-01	ARG1	progress-01	0.1.0	0.1.0.1	
# ::edge	persist-01	ARG2	accident	0.1.0	0.1.0.2	
# ::edge	persist-01	mod	only	0.1.0	0.1.0.3	
# ::edge	persist-01	time	now	0.1.0	0.1.0.5	
# ::edge	progress-01	mod	major	0.1.0.1	0.1.0.1.1	
# ::edge	temporal-quantity	unit	hour	0.1.0.4.0.0	0.1.0.4.0.0.0	
(c / claim-01 
      :ARG0 (s / she) 
      :ARG1 (a3 / and 
            :op1 (p / persist-01 
                  :ARG0 (p2 / problem) 
                  :ARG1 (p3 / progress-01 
                        :ARG0-of (e2 / establish-01 
                              :ARG1 (m / maximum) 
                              :time (w / week)) 
                        :mod (m2 / major)) 
                  :ARG2 (a2 / accident) 
                  :mod (o / only) 
                  :op-of (a / and 
                        :op1 (d / department 
                              :mod (t / temporal-quantity 
                                    :unit (h / hour 
                                          :mod (e / excessive))))) 
                  :time (n / now))))

# ::snt   the accident was caused by mechanical failure
# ::tok the accident was caused by mechanical failure
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:16:59.971
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt and came close to assuming the title of the late carroll shelby when a huge accident destroyed his car and put him out of circulation for several months
# ::tok and came close to assuming the title of the late carroll shelby when a huge accident destroyed his car and put him out of circulation for several months
# ::alignments 27-28|0.0.0.0+0.0.0 26-27|0.0 24-25|0.2 19-20|0.2.1 18-19|0.2.1.0.1 16-17|0.2.1.0 15-16|0.2.1.0.1.0 14-15|0.2.1.0.1.0.0 9-10|0.2.0 6-7|0.1 4-5|0 0-1|0.2.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:00.301
# ::node	0	assume-02	4-5
# ::node	0.0	several	26-27
# ::node	0.0.0	temporal-quantity	27-28
# ::node	0.0.0.0	month	27-28
# ::node	0.1	title	6-7
# ::node	0.2	circulate-01	24-25
# ::node	0.2.0	late	9-10
# ::node	0.2.1	and	19-20
# ::node	0.2.1.0	destroy-01	16-17
# ::node	0.2.1.0.0	and	0-1
# ::node	0.2.1.0.1	car	18-19
# ::node	0.2.1.0.1.0	accident	15-16
# ::node	0.2.1.0.1.0.0	huge	14-15
# ::root	0	assume-02
# ::edge	accident	mod	huge	0.2.1.0.1.0	0.2.1.0.1.0.0	
# ::edge	and	op1	destroy-01	0.2.1	0.2.1.0	
# ::edge	assume-02	ARG0	several	0	0.0	
# ::edge	assume-02	ARG1	title	0	0.1	
# ::edge	car	poss	accident	0.2.1.0.1	0.2.1.0.1.0	
# ::edge	circulate-01	ARG0	late	0.2	0.2.0	
# ::edge	circulate-01	ARG1	and	0.2	0.2.1	
# ::edge	circulate-01	ARG2	assume-02	0.2	0	
# ::edge	destroy-01	ARG0	and	0.2.1.0	0.2.1.0.0	
# ::edge	destroy-01	ARG1	car	0.2.1.0	0.2.1.0.1	
# ::edge	several	op1	temporal-quantity	0.0	0.0.0	
# ::edge	temporal-quantity	unit	month	0.0.0	0.0.0.0	
(a3 / assume-02 
      :ARG0 (s / several 
            :op1 (t / temporal-quantity 
                  :unit (m / month))) 
      :ARG1 (t2 / title) 
      :ARG2-of (c / circulate-01 
            :ARG0 (l / late) 
            :ARG1 (a / and 
                  :op1 (d / destroy-01 
                        :ARG0 (a4 / and) 
                        :ARG1 (c2 / car 
                              :poss (a2 / accident 
                                    :mod (h / huge)))))))

# ::snt the problem was that nobody from the smiths camp was prepared to actually inform the band of this decision and it was left to easterhouse manager john barrett to discover the sad truth almost by accident
# ::tok the problem was that nobody from the smiths camp was prepared to actually inform the band of this decision and it was left to easterhouse manager john barrett to discover the sad truth almost by accident
# ::alignments 35-36|0.0.0.2 33-34|0.0.0.1 32-33|0.0 31-32|0 29-30|0.0.0 25-26|0.0.0.0.0 20-21|0.0.0.0 19-20|0.0.0.0.1.0.1.1 18-19|0.0.0.0.1 17-18|0.0.0.0.1.1 15-16|0.0.0.0.1.0.0 13-14|0.0.0.0.1.0 12-13|0.0.0.0.1.0.2 10-11|0.0.0.0.1.0.1 8-9|0.0.0.0.1.0.1.0.0 4-5|0.0.0.0.1.0.1.0 1-2|0.0.0.0.1.0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:00.617
# ::node	0	sad	31-32
# ::node	0.0	truth	32-33
# ::node	0.0.0	discover-01	29-30
# ::node	0.0.0.0	it	20-21
# ::node	0.0.0.0.0	manage-01	25-26
# ::node	0.0.0.0.1	decide-01	18-19
# ::node	0.0.0.0.1.0	inform-01	13-14
# ::node	0.0.0.0.1.0.0	band	15-16
# ::node	0.0.0.0.1.0.1	prepare-02	10-11
# ::node	0.0.0.0.1.0.1.0	nobody	4-5
# ::node	0.0.0.0.1.0.1.0.0	camp	8-9
# ::node	0.0.0.0.1.0.1.1	and	19-20
# ::node	0.0.0.0.1.0.1.1.0	problem	1-2
# ::node	0.0.0.0.1.0.2	actual	12-13
# ::node	0.0.0.0.1.1	this	17-18
# ::node	0.0.0.1	almost	33-34
# ::node	0.0.0.2	accident	35-36
# ::root	0	sad
(s / sad 
      :mod-of (t / truth 
            :ARG1-of (d / discover-01 
                  :ARG0 (i / it 
                        :ARG0-of (m / manage-01) 
                        :ARG2-of (d2 / decide-01 
                              :ARG2-of (i2 / inform-01 
                                    :ARG1 (b / band) 
                                    :ARG2-of (p / prepare-02 
                                          :ARG1 (n / nobody 
                                                :poss (c / camp)) 
                                          :op-of (a3 / and 
                                                :op1 (p2 / problem))) 
                                    :mod (a4 / actual)) 
                              :mod (t2 / this))) 
                  :mod (a2 / almost) 
                  :time (a / accident))))

# ::snt safety officials at the harwell laboratory near didcot are denying staff have been affected by radioactive contamination following a recent accident
# ::tok safety officials at the harwell laboratory near didcot are denying staff have been affected by radioactive contamination following a recent accident
# ::alignments 20-21|0.0.0.0.0 19-20|0.0.0.0.0.0 16-17|0.0.0.0 15-16|0.0.0.0.1.0 13-14|0.0.0 10-11|0.0.1+0.0 9-10|0 6-7|0.0.0.0.1.1.0.0.0 5-6|0.0.0.0.1.1.0.0 1-2|0.0.0.0.1.1+0.0.0.0.1.1.0 0-1|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:00.854
# ::node	0	deny-01	9-10
# ::node	0.0	person	10-11
# ::node	0.0.0	affect-01	13-14
# ::node	0.0.0.0	contaminate-01	16-17
# ::node	0.0.0.0.0	accident	20-21
# ::node	0.0.0.0.0.0	recent	19-20
# ::node	0.0.0.0.1	safe-41	0-1
# ::node	0.0.0.0.1.0	radioactive	15-16
# ::node	0.0.0.0.1.1	official	1-2
# ::node	0.0.0.0.1.1.0	have-org-role-91	1-2
# ::node	0.0.0.0.1.1.0.0	laboratory	5-6
# ::node	0.0.0.0.1.1.0.0.0	near	6-7
# ::node	0.0.1	staff-01	10-11
# ::root	0	deny-01
# ::edge	accident	time	recent	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	affect-01	ARG0	contaminate-01	0.0.0	0.0.0.0	
# ::edge	affect-01	ARG1	person	0.0.0	0.0	
# ::edge	contaminate-01	ARG1	accident	0.0.0.0	0.0.0.0.0	
# ::edge	contaminate-01	manner	safe-41	0.0.0.0	0.0.0.0.1	
# ::edge	deny-01	ARG1	person	0	0.0	
# ::edge	have-org-role-91	ARG1	laboratory	0.0.0.0.1.1.0	0.0.0.0.1.1.0.0	
# ::edge	have-org-role-91	ARG2	official	0.0.0.0.1.1.0	0.0.0.0.1.1	
# ::edge	laboratory	location	near	0.0.0.0.1.1.0.0	0.0.0.0.1.1.0.0.0	
# ::edge	official	topic	safe-41	0.0.0.0.1.1	0.0.0.0.1	
# ::edge	safe-41	ARG1	radioactive	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	staff-01	ARG2	person	0.0.1	0.0	
(d / deny-01 
      :ARG1 (p / person 
            :ARG1-of (a2 / affect-01 
                  :ARG0 (c / contaminate-01 
                        :ARG1 (a / accident 
                              :time (r / recent)) 
                        :manner (s2 / safe-41 
                              :ARG1 (r2 / radioactive) 
                              :topic-of (o / official 
                                    :ARG2-of (h / have-org-role-91 
                                          :ARG1 (l / laboratory 
                                                :location (n / near))))))) 
            :ARG2-of (s / staff-01)))

# ::snt and not await action because of deaths and accidents
# ::tok and not await action because of deaths and accidents
# ::alignments 8-9|0.0.0 7-8|0.0 4-5|0 3-4|0.2 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:00.916
# ::node	0	cause-01	4-5
# ::node	0.0	and	7-8
# ::node	0.0.0	accident	8-9
# ::node	0.1	and	0-1
# ::node	0.2	action	3-4
# ::root	0	cause-01
# ::edge	and	op1	accident	0.0	0.0.0	
# ::edge	cause-01	ARG0	and	0	0.0	
# ::edge	cause-01	ARG1	and	0	0.1	
# ::edge	cause-01	degree	action	0	0.2	
(c / cause-01 
      :ARG0 (a2 / and 
            :op1 (a / accident)) 
      :ARG1 (a4 / and) 
      :degree (a3 / action))

# ::snt others however have ignored not only the general trend but even statutes in their own state like statutes dealing with work accidents that were so qualified
# ::tok others however have ignored not only the general trend but even statutes in their own state like statutes dealing with work accidents that were so qualified
# ::alignments 25-26|0.0.1.1.1.0 24-25|0.0.1.1.1.0.0 21-22|0.0.1.1.1 18-19|0.0.1.1 15-16|0.0.1.1.0 9-10|0 8-9|0.0 7-8|0.0.2 5-6|0.0.1.0 3-4|0.0.1 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:01.066
# ::node	0	contrast-01	9-10
# ::node	0.0	trend-01	8-9
# ::node	0.0.0	other	0-1
# ::node	0.0.1	ignore-01	3-4
# ::node	0.0.1.0	only	5-6
# ::node	0.0.1.1	deal-01	18-19
# ::node	0.0.1.1.0	state	15-16
# ::node	0.0.1.1.1	accident	21-22
# ::node	0.0.1.1.1.0	qualify-02	25-26
# ::node	0.0.1.1.1.0.0	so	24-25
# ::node	0.0.2	general	7-8
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	trend-01	0	0.0	
# ::edge	deal-01	ARG0	state	0.0.1.1	0.0.1.1.0	
# ::edge	deal-01	ARG1	accident	0.0.1.1	0.0.1.1.1	
# ::edge	ignore-01	ARG0	only	0.0.1	0.0.1.0	
# ::edge	ignore-01	ARG1	trend-01	0.0.1	0.0	
# ::edge	ignore-01	purpose	deal-01	0.0.1	0.0.1.1	
# ::edge	qualify-02	ARG1	accident	0.0.1.1.1.0	0.0.1.1.1	
# ::edge	qualify-02	mod	so	0.0.1.1.1.0	0.0.1.1.1.0.0	
# ::edge	trend-01	ARG1	other	0.0	0.0.0	
# ::edge	trend-01	mod	general	0.0	0.0.2	
(c / contrast-01 
      :ARG1 (t / trend-01 
            :ARG1 (o2 / other) 
            :ARG1-of (i / ignore-01 
                  :ARG0 (o / only) 
                  :purpose (d / deal-01 
                        :ARG0 (s2 / state) 
                        :ARG1 (a / accident 
                              :ARG1-of (q / qualify-02 
                                    :mod (s / so))))) 
            :mod (g / general)))

# ::snt richard boxall 41st in the order of merit with 66473 was involved in a car accident on the eve of the championship
# ::tok richard boxall 41st in the order of merit with 66473 was involved in a car accident on the eve of the championship
# ::alignments 18-19|0.2 15-16|0.1 14-15|0.1.0 11-12|0 7-8|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:01.134
# ::node	0	involve-01	11-12
# ::node	0.0	merit-01	7-8
# ::node	0.1	accident	15-16
# ::node	0.1.0	car	14-15
# ::node	0.2	eve	18-19
# ::root	0	involve-01
# ::edge	accident	location	car	0.1	0.1.0	
# ::edge	involve-01	ARG2	accident	0	0.1	
# ::edge	involve-01	location	eve	0	0.2	
# ::edge	merit-01	ARG1	involve-01	0.0	0	
(i / involve-01 
      :ARG1-of (m / merit-01) 
      :ARG2 (a / accident 
            :location (c / car)) 
      :location (e / eve))

# ::snt almost as retribution for such an irregular move balestre yesterday revealed that mclaren had made a long submission in the appeal court blaming prost and not senna for the accident
# ::tok almost as retribution for such an irregular move balestre yesterday revealed that mclaren had made a long submission in the appeal court blaming prost and not senna for the accident
# ::alignments 29-30|0.1.0.2.0 24-25|0.1 22-23|0.1.0 21-22|0.1.0.1 20-21|0.1.0.1.0 17-18|0.1.0.2 10-11|0 9-10|0.0 4-5|0.1.0.1.0.0 0-1|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:01.285
# ::node	0	reveal-01	10-11
# ::node	0.0	yesterday	9-10
# ::node	0.1	and	24-25
# ::node	0.1.0	blame-01	22-23
# ::node	0.1.0.0	almost	0-1
# ::node	0.1.0.1	court	21-22
# ::node	0.1.0.1.0	appeal-02	20-21
# ::node	0.1.0.1.0.0	such	4-5
# ::node	0.1.0.2	submit-01	17-18
# ::node	0.1.0.2.0	accident	29-30
# ::root	0	reveal-01
# ::edge	and	op1	blame-01	0.1	0.1.0	
# ::edge	appeal-02	ARG0	such	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	appeal-02	ARG1	court	0.1.0.1.0	0.1.0.1	
# ::edge	blame-01	ARG0	almost	0.1.0	0.1.0.0	
# ::edge	blame-01	ARG1	court	0.1.0	0.1.0.1	
# ::edge	reveal-01	ARG0	yesterday	0	0.0	
# ::edge	reveal-01	ARG1	and	0	0.1	
# ::edge	submit-01	ARG1	accident	0.1.0.2	0.1.0.2.0	
# ::edge	submit-01	purpose	blame-01	0.1.0.2	0.1.0	
(r / reveal-01 
      :ARG0 (y / yesterday) 
      :ARG1 (a2 / and 
            :op1 (b / blame-01 
                  :ARG0 (a4 / almost) 
                  :ARG1 (c / court 
                        :ARG1-of (a3 / appeal-02 
                              :ARG0 (s2 / such))) 
                  :purpose-of (s / submit-01 
                        :ARG1 (a / accident)))))

# ::snt whats not included  personal accident insurance available at a supplement but also included in the norwich union cover described on pages 8687 and insurance of the cars contents
# ::tok whats not included personal accident insurance available at a supplement but also included in the norwich union cover described on pages 8687 and insurance of the cars contents
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:01.285
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt   another thing that irritates broderick is the way journalists have tried to interpret his 1987 car accident in northern ireland as a maturing influence
# ::tok another thing that irritates broderick is the way journalists have tried to interpret his 1987 car accident in northern ireland as a maturing influence
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:01.287
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt   statistics show that 54 per cent of all fatal and serious accidents to children of school age occur when they are pedestrians
# ::tok statistics show that 54 per cent of all fatal and serious accidents to children of school age occur when they are pedestrians
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:01.288
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt his death was nothing but an absurd ludicrous accident
# ::tok his death was nothing but an absurd ludicrous accident
# ::alignments 8-9|0.1 6-7|0.1.0 4-5|0 3-4|0.0 1-2|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:01.315
# ::node	0	contrast-01	4-5
# ::node	0.0	nothing	3-4
# ::node	0.1	accident	8-9
# ::node	0.1.0	absurd	6-7
# ::node	0.2	die-01	1-2
# ::root	0	contrast-01
# ::edge	accident	mod	absurd	0.1	0.1.0	
# ::edge	contrast-01	ARG1	nothing	0	0.0	
# ::edge	contrast-01	ARG2	accident	0	0.1	
# ::edge	die-01	manner	contrast-01	0.2	0	
(c / contrast-01 
      :ARG1 (n / nothing) 
      :ARG2 (a / accident 
            :mod (a2 / absurd)) 
      :manner-of (d / die-01))

# ::snt after an accident in the home or when her children came home from school with cuts or bruises she would go out and search for broken pavements and lodge claims against the authorities
# ::tok after an accident in the home or when her children came home from school with cuts or bruises she would go out and search for broken pavements and lodge claims against the authorities
# ::alignments 32-33|0.0 29-30|0 28-29|0.1.1 27-28|0.1 25-26|0.1.0.0.0.1 23-24|0.1.0 22-23|0.1.0.1 18-19|0.1.0.0 16-17|0.1.0.0.0.2 15-16|0.1.0.0.0 13-14|0.1.0.0.0.2.1 11-12|0.1.0.0.0.2.0 9-10|0.1.0.0.0.0 6-7|0.1.0.0.0.0.0 5-6|0.1.0.0.0.0.0.0.0 2-3|0.1.0.0.0.0.0.0 0-1|0.1.0.0.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:01.440
# ::node	0	claim-01	29-30
# ::node	0.0	authority	32-33
# ::node	0.1	and	27-28
# ::node	0.1.0	search-01	23-24
# ::node	0.1.0.0	she	18-19
# ::node	0.1.0.0.0	cut-02	15-16
# ::node	0.1.0.0.0.0	child	9-10
# ::node	0.1.0.0.0.0.0	or	6-7
# ::node	0.1.0.0.0.0.0.0	accident	2-3
# ::node	0.1.0.0.0.0.0.0.0	home	5-6
# ::node	0.1.0.0.0.0.0.0.1	after	0-1
# ::node	0.1.0.0.0.1	break-01	25-26
# ::node	0.1.0.0.0.2	or	16-17
# ::node	0.1.0.0.0.2.0	home	11-12
# ::node	0.1.0.0.0.2.1	school	13-14
# ::node	0.1.0.1	and	22-23
# ::node	0.1.1	lodge	28-29
# ::root	0	claim-01
# ::edge	accident	location	home	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0.0.0	
# ::edge	after	op1	accident	0.1.0.0.0.0.0.0.1	0.1.0.0.0.0.0.0	
# ::edge	and	op1	search-01	0.1	0.1.0	
# ::edge	and	op1	search-01	0.1.0.1	0.1.0	
# ::edge	and	op2	lodge	0.1	0.1.1	
# ::edge	and	op3	claim-01	0.1	0	
# ::edge	claim-01	ARG0	authority	0	0.0	
# ::edge	cut-02	ARG0	child	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	cut-02	ARG1	break-01	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	or	op1	accident	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	or	op1	home	0.1.0.0.0.2	0.1.0.0.0.2.0	
# ::edge	or	op2	child	0.1.0.0.0.0.0	0.1.0.0.0.0	
# ::edge	or	op2	school	0.1.0.0.0.2	0.1.0.0.0.2.1	
# ::edge	or	op3	cut-02	0.1.0.0.0.2	0.1.0.0.0	
# ::edge	search-01	ARG0	she	0.1.0	0.1.0.0	
# ::edge	she	part	cut-02	0.1.0.0	0.1.0.0.0	
(c / claim-01 
      :ARG0 (a / authority) 
      :op-of (a2 / and 
            :op1 (s / search-01 
                  :ARG0 (s2 / she 
                        :part (c2 / cut-02 
                              :ARG0 (c3 / child 
                                    :op-of (o2 / or 
                                          :op1 (a4 / accident 
                                                :location (h2 / home) 
                                                :op-of (a5 / after)))) 
                              :ARG1 (b / break-01) 
                              :op-of (o / or 
                                    :op1 (h / home) 
                                    :op2 (s3 / school)))) 
                  :op-of (a3 / and)) 
            :op2 (l / lodge)))

# ::snt the couple and their three children wayne seven kevin six and cheryl four were all upset by the accident and are keeping in constant touch with what is happening said mr cooper, pc lukes was taken to the john radcliffe hospital oxford after the accident but was transferred to the radcliffe infirmary oxford where he underwent emergency brain surgery to remove a blood clot from his brain
# ::tok the couple and their three children wayne seven kevin six and cheryl four were all upset by the accident and are keeping in constant touch with what is happening said mr cooper , pc lukes was taken to the john radcliffe hospital oxford after the accident but was transferred to the radcliffe infirmary oxford where he underwent emergency brain surgery to remove a blood clot from his brain
# ::alignments 67-68|0.0.0.0.1 63-64|0.0.0.0.1.0 61-62|0.0.0.0 59-60|0.0.0.0.0 58-59|0.0.0.0.0.0 57-58|0.0.0.0.0.1 56-57|0.0.0 55-56|0.0 48-49|0.2.1.1.3.0 46-47|0.2.1.1.3 45-46|0.2.1.1.3.1.0 43-44|0.2.1.1.3.1 41-42|0.2.1.1.3.0.0 29-30|0 28-29|0.2 24-25|0.2.1.0 23-24|0.2.1.0.1 19-20|0.2.1 18-19|0.2.1.1.1 15-16|0.2.1.1 14-15|0.2.1.0.0 12-13|0.2.0 10-11|0.2.1.1.2 9-10|0.3 7-8|0.2.2 5-6|0.1.0.0 4-5|0.2.1.1.0 2-3|0.1 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:02.467
# ::node	0	say-01	29-30
# ::node	0.0	he	55-56
# ::node	0.0.0	undergo-01	56-57
# ::node	0.0.0.0	remove-01	61-62
# ::node	0.0.0.0.0	surgery	59-60
# ::node	0.0.0.0.0.0	brain	58-59
# ::node	0.0.0.0.0.1	emergency	57-58
# ::node	0.0.0.0.1	brain	67-68
# ::node	0.0.0.0.1.0	blood	63-64
# ::node	0.1	and	2-3
# ::node	0.1.0	couple	1-2
# ::node	0.1.0.0	child	5-6
# ::node	0.2	happen-01	28-29
# ::node	0.2.0	4	12-13
# ::node	0.2.1	and	19-20
# ::node	0.2.1.0	touch-01	24-25
# ::node	0.2.1.0.0	all	14-15
# ::node	0.2.1.0.1	constant	23-24
# ::node	0.2.1.1	upset-01	15-16
# ::node	0.2.1.1.0	3	4-5
# ::node	0.2.1.1.1	accident	18-19
# ::node	0.2.1.1.2	and	10-11
# ::node	0.2.1.1.3	contrast-01	46-47
# ::node	0.2.1.1.3.0	transfer-01	48-49
# ::node	0.2.1.1.3.0.0	hospital	41-42
# ::node	0.2.1.1.3.1	after	43-44
# ::node	0.2.1.1.3.1.0	accident	45-46
# ::node	0.2.2	7	7-8
# ::node	0.3	6	9-10
# ::root	0	say-01
# ::edge	6	op1	say-01	0.3	0	
# ::edge	7	op1	happen-01	0.2.2	0.2	
# ::edge	after	op1	accident	0.2.1.1.3.1	0.2.1.1.3.1.0	
# ::edge	after	op2	contrast-01	0.2.1.1.3.1	0.2.1.1.3	
# ::edge	and	op1	couple	0.1	0.1.0	
# ::edge	and	op1	upset-01	0.2.1	0.2.1.1	
# ::edge	blood	purpose	brain	0.0.0.0.1.0	0.0.0.0.1	
# ::edge	child	mod	couple	0.1.0.0	0.1.0	
# ::edge	contrast-01	ARG2	transfer-01	0.2.1.1.3	0.2.1.1.3.0	
# ::edge	contrast-01	time	upset-01	0.2.1.1.3	0.2.1.1	
# ::edge	happen-01	ARG0	4	0.2	0.2.0	
# ::edge	happen-01	ARG1	say-01	0.2	0	
# ::edge	happen-01	ARG2	and	0.2	0.2.1	
# ::edge	remove-01	ARG0	surgery	0.0.0.0	0.0.0.0.0	
# ::edge	remove-01	ARG2	brain	0.0.0.0	0.0.0.0.1	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	and	0	0.1	
# ::edge	surgery	mod	brain	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	surgery	mod	emergency	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	touch-01	ARG0	all	0.2.1.0	0.2.1.0.0	
# ::edge	touch-01	ARG1	and	0.2.1.0	0.2.1	
# ::edge	touch-01	manner	constant	0.2.1.0	0.2.1.0.1	
# ::edge	transfer-01	ARG2	hospital	0.2.1.1.3.0	0.2.1.1.3.0.0	
# ::edge	undergo-01	ARG1	he	0.0.0	0.0	
# ::edge	undergo-01	ARG2	remove-01	0.0.0	0.0.0.0	
# ::edge	upset-01	ARG0	3	0.2.1.1	0.2.1.1.0	
# ::edge	upset-01	ARG1	accident	0.2.1.1	0.2.1.1.1	
# ::edge	upset-01	ARG2	and	0.2.1.1	0.2.1.1.2	
(s2 / say-01 
      :ARG0 (h / he 
            :ARG1-of (u / undergo-01 
                  :ARG2 (r / remove-01 
                        :ARG0 (s / surgery 
                              :mod (b3 / brain) 
                              :mod (e / emergency)) 
                        :ARG2 (b / brain 
                              :purpose-of (b2 / blood))))) 
      :ARG1 (a7 / and 
            :op1 (c4 / couple 
                  :mod-of (c3 / child))) 
      :ARG1-of (h3 / happen-01 
            :ARG0 4 
            :ARG2 (a3 / and 
                  :ARG1-of (t2 / touch-01 
                        :ARG0 (a5 / all) 
                        :manner (c2 / constant)) 
                  :op1 (u2 / upset-01 
                        :ARG0 3 
                        :ARG1 (a4 / accident) 
                        :ARG2 (a6 / and) 
                        :time-of (c / contrast-01 
                              :ARG2 (t / transfer-01 
                                    :ARG2 (h2 / hospital)) 
                              :op-of (a2 / after 
                                    :op1 (a / accident))))) 
            :op-of 7) 
      :op-of 6)

# ::snt no one was hurt in this accident, the accident in which two drivers died and two others were slightly hurt happened in thick fog shortly before noon on the nearby a46 at sileby, insp fred rankin of leicestershire police said these were terrible accidents
# ::tok no one was hurt in this accident , the accident in which two drivers died and two others were slightly hurt happened in thick fog shortly before noon on the nearby a46 at sileby , insp fred rankin of leicestershire police said these were terrible accidents
# ::alignments 45-46|0.1 44-45|0.1.0 41-42|0 40-41|0.0 30-31|0.2.1.1.0.2.1 27-28|0.2.1.1.0.0.0 26-27|0.2.1.1.0.2 25-26|0.2.1.1.0.2.0 23-24|0.2.1.0.0.0 21-22|0.2.1.1.0.0 20-21|0.2.1.1.0 19-20|0.2.1.1.0.1 17-18|0.2.1.1.0.0.1 16-17|0.2.1.1.1.0 15-16|0.2 14-15|0.2.1 13-14|0.2.1.1.1+0.2.1.1 12-13|0.2.1.1.2 9-10|0.2.0 6-7|0.2.1.0 5-6|0.2.1.0.1 3-4|0.2.1.0.0 0-1|0.2.1.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:03.825
# ::node	0	say-01	41-42
# ::node	0.0	police	40-41
# ::node	0.1	accident	45-46
# ::node	0.1.0	terrible	44-45
# ::node	0.2	and	15-16
# ::node	0.2.0	accident	9-10
# ::node	0.2.1	die-01	14-15
# ::node	0.2.1.0	accident	6-7
# ::node	0.2.1.0.0	hurt-01	3-4
# ::node	0.2.1.0.0.0	thick	23-24
# ::node	0.2.1.0.0.1	-	0-1
# ::node	0.2.1.0.1	this	5-6
# ::node	0.2.1.1	person	13-14
# ::node	0.2.1.1.0	hurt-01	20-21
# ::node	0.2.1.1.0.0	happen-01	21-22
# ::node	0.2.1.1.0.0.0	noon	27-28
# ::node	0.2.1.1.0.0.1	other	17-18
# ::node	0.2.1.1.0.1	slight	19-20
# ::node	0.2.1.1.0.2	before	26-27
# ::node	0.2.1.1.0.2.0	short	25-26
# ::node	0.2.1.1.0.2.1	nearby	30-31
# ::node	0.2.1.1.1	drive-01	13-14
# ::node	0.2.1.1.1.0	2	16-17
# ::node	0.2.1.1.2	2	12-13
# ::root	0	say-01
# ::edge	accident	mod	terrible	0.1	0.1.0	
# ::edge	accident	mod	this	0.2.1.0	0.2.1.0.1	
# ::edge	and	op1	accident	0.2	0.2.0	
# ::edge	and	op2	die-01	0.2	0.2.1	
# ::edge	and	op3	say-01	0.2	0	
# ::edge	before	extent	short	0.2.1.1.0.2	0.2.1.1.0.2.0	
# ::edge	before	mod	nearby	0.2.1.1.0.2	0.2.1.1.0.2.1	
# ::edge	die-01	ARG0	accident	0.2.1	0.2.1.0	
# ::edge	die-01	ARG1	person	0.2.1	0.2.1.1	
# ::edge	drive-01	ARG0	person	0.2.1.1.1	0.2.1.1	
# ::edge	drive-01	ARG1	2	0.2.1.1.1	0.2.1.1.1.0	
# ::edge	happen-01	ARG0	noon	0.2.1.1.0.0	0.2.1.1.0.0.0	
# ::edge	happen-01	ARG1	other	0.2.1.1.0.0	0.2.1.1.0.0.1	
# ::edge	hurt-01	ARG0	accident	0.2.1.0.0	0.2.1.0	
# ::edge	hurt-01	ARG0	person	0.2.1.1.0	0.2.1.1	
# ::edge	hurt-01	ARG1	happen-01	0.2.1.1.0	0.2.1.1.0.0	
# ::edge	hurt-01	ARG1	thick	0.2.1.0.0	0.2.1.0.0.0	
# ::edge	hurt-01	degree	slight	0.2.1.1.0	0.2.1.1.0.1	
# ::edge	hurt-01	polarity	-	0.2.1.0.0	0.2.1.0.0.1	
# ::edge	hurt-01	time	before	0.2.1.1.0	0.2.1.1.0.2	
# ::edge	person	quant	2	0.2.1.1	0.2.1.1.2	
# ::edge	say-01	ARG0	police	0	0.0	
# ::edge	say-01	ARG1	accident	0	0.1	
(s / say-01 
      :ARG0 (p / police) 
      :ARG1 (a / accident 
            :mod (t / terrible)) 
      :op-of (a2 / and 
            :op1 (a3 / accident) 
            :op2 (d / die-01 
                  :ARG0 (a4 / accident 
                        :ARG0-of (h3 / hurt-01 
                              :ARG1 (t2 / thick) 
                              :polarity (- / -)) 
                        :mod (t3 / this)) 
                  :ARG1 (p2 / person 
                        :ARG0-of (h2 / hurt-01 
                              :ARG1 (h / happen-01 
                                    :ARG0 (n2 / noon) 
                                    :ARG1 (o / other)) 
                              :degree (s3 / slight) 
                              :time (b / before 
                                    :extent (s2 / short) 
                                    :mod (n / nearby))) 
                        :ARG0-of (d2 / drive-01 
                              :ARG1 2) 
                        :quant 2))))

# ::snt it was only a matter of time before there was a serious accident he said
# ::tok it was only a matter of time before there was a serious accident he said
# ::alignments 14-15|0 13-14|0.0 12-13|0.1 11-12|0.1.1 7-8|0.1.0 6-7|0.1.0.0.2 4-5|0.1.0.0 2-3|0.1.0.0.1 0-1|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:03.856
# ::node	0	say-01	14-15
# ::node	0.0	he	13-14
# ::node	0.1	accident	12-13
# ::node	0.1.0	before	7-8
# ::node	0.1.0.0	matter	4-5
# ::node	0.1.0.0.0	it	0-1
# ::node	0.1.0.0.1	only	2-3
# ::node	0.1.0.0.2	time	6-7
# ::node	0.1.1	serious	11-12
# ::root	0	say-01
# ::edge	accident	mod	before	0.1	0.1.0	
# ::edge	accident	mod	serious	0.1	0.1.1	
# ::edge	matter	domain	it	0.1.0.0	0.1.0.0.0	
# ::edge	matter	mod	only	0.1.0.0	0.1.0.0.1	
# ::edge	matter	mod	time	0.1.0.0	0.1.0.0.2	
# ::edge	matter	time	before	0.1.0.0	0.1.0	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	accident	0	0.1	
(s / say-01 
      :ARG0 (h / he) 
      :ARG1 (a / accident 
            :mod (b / before 
                  :time-of (m / matter 
                        :domain (i / it) 
                        :mod (o / only) 
                        :mod (t / time))) 
            :mod (s2 / serious)))

# ::snt i couldnt swear that a thalidomide sort of accident will never happen again but the chance of it happening are much less
# ::tok i couldnt swear that a thalidomide sort of accident will never happen again but the chance of it happening are much less
# ::alignments 21-22|0.2 20-21|0.2.0 18-19|0.3 17-18|0.3.0 15-16|0.3.1 13-14|0 12-13|0.0.1 11-12|0.0 8-9|0.0.0.0 6-7|0.0.0 2-3|0.1 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:03.916
# ::node	0	contrast-01	13-14
# ::node	0.0	happen-01	11-12
# ::node	0.0.0	sort	6-7
# ::node	0.0.0.0	accident	8-9
# ::node	0.0.1	again	12-13
# ::node	0.1	swear-02	2-3
# ::node	0.1.0	i	0-1
# ::node	0.2	less	21-22
# ::node	0.2.0	much	20-21
# ::node	0.3	happen-01	18-19
# ::node	0.3.0	it	17-18
# ::node	0.3.1	chance	15-16
# ::root	0	contrast-01
# ::edge	accident	mod	sort	0.0.0.0	0.0.0	
# ::edge	chance	mod	happen-01	0.3.1	0.3	
# ::edge	contrast-01	ARG1	happen-01	0	0.0	
# ::edge	contrast-01	ARG2	less	0	0.2	
# ::edge	contrast-01	op1	happen-01	0	0.3	
# ::edge	happen-01	ARG1	it	0.3	0.3.0	
# ::edge	happen-01	ARG1	sort	0.0	0.0.0	
# ::edge	happen-01	mod	again	0.0	0.0.1	
# ::edge	less	degree	much	0.2	0.2.0	
# ::edge	swear-02	ARG0	i	0.1	0.1.0	
# ::edge	swear-02	ARG1	contrast-01	0.1	0	
(c2 / contrast-01 
      :ARG1 (h2 / happen-01 
            :ARG1 (s / sort 
                  :mod-of (a2 / accident)) 
            :mod (a / again)) 
      :ARG1-of (s2 / swear-02 
            :ARG0 (i2 / i)) 
      :ARG2 (l / less 
            :degree (m / much)) 
      :op1 (h / happen-01 
            :ARG1 (i / it) 
            :mod-of (c / chance)))

# ::snt the accident caused no injuries and no radioactivity was released, but according to official sources for the first half hour after the accident no one assumed control of the situation in the reactor control room
# ::tok the accident caused no injuries and no radioactivity was released , but according to official sources for the first half hour after the accident no one assumed control of the situation in the reactor control room
# ::alignments 35-36|0.1.0.0.0.1.0.2 34-35|0.1.0.0.0.1.0.2.0 33-34|0.1.0.0.0.1.0.2.0.0 30-31|0.1.0.0.0.1.0.1 27-28|0.1.0.0.0.1.0 26-27|0.1.0.0.0.1 24-25|0.1.0.0.0.0 23-24|0.1.0.0.0.1.0.0.1.0 21-22|0.1.0.0.0.1.0.0.1 20-21|0.1.0.0.0.1.0.0.1.1.0+0.1.0.0.0.1.0.0.1.1 19-20|0.1.0.0.0.1.0.0.1.1.0.0 15-16|0.1.0.0.0.1.0.0 14-15|0.1.0.0.0.1.0.0.0.0+0.1.0.0.0.1.0.0.0 11-12|0.1.0 9-10|0.1.0.0 7-8|0.1.1 6-7|0.1.1.0 5-6|0.1 4-5|0.1.0.0.0 3-4|0.1.0.0.0.2 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:04.609
# ::node	0	cause-01	2-3
# ::node	0.0	accident	1-2
# ::node	0.1	and	5-6
# ::node	0.1.0	contrast-01	11-12
# ::node	0.1.0.0	release-01	9-10
# ::node	0.1.0.0.0	injure-01	4-5
# ::node	0.1.0.0.0.0	-	24-25
# ::node	0.1.0.0.0.1	assume-02	26-27
# ::node	0.1.0.0.0.1.0	control-01	27-28
# ::node	0.1.0.0.0.1.0.0	source	15-16
# ::node	0.1.0.0.0.1.0.0.0	have-org-role-91	14-15
# ::node	0.1.0.0.0.1.0.0.0.0	official	14-15
# ::node	0.1.0.0.0.1.0.0.1	after	21-22
# ::node	0.1.0.0.0.1.0.0.1.0	accident	23-24
# ::node	0.1.0.0.0.1.0.0.1.1	temporal-quantity	20-21
# ::node	0.1.0.0.0.1.0.0.1.1.0	hour	20-21
# ::node	0.1.0.0.0.1.0.0.1.1.0.0	half	19-20
# ::node	0.1.0.0.0.1.0.1	situation	30-31
# ::node	0.1.0.0.0.1.0.2	room	35-36
# ::node	0.1.0.0.0.1.0.2.0	control-01	34-35
# ::node	0.1.0.0.0.1.0.2.0.0	reactor	33-34
# ::node	0.1.0.0.0.2	-	3-4
# ::node	0.1.1	radioactivity	7-8
# ::node	0.1.1.0	-	6-7
# ::root	0	cause-01
# ::edge	after	op1	accident	0.1.0.0.0.1.0.0.1	0.1.0.0.0.1.0.0.1.0	
# ::edge	after	quant	temporal-quantity	0.1.0.0.0.1.0.0.1	0.1.0.0.0.1.0.0.1.1	
# ::edge	and	op1	radioactivity	0.1	0.1.1	
# ::edge	assume-02	ARG0	injure-01	0.1.0.0.0.1	0.1.0.0.0	
# ::edge	assume-02	ARG1	control-01	0.1.0.0.0.1	0.1.0.0.0.1.0	
# ::edge	cause-01	ARG0	accident	0	0.0	
# ::edge	cause-01	ARG1	and	0	0.1	
# ::edge	contrast-01	ARG1	release-01	0.1.0	0.1.0.0	
# ::edge	contrast-01	ARG2	and	0.1.0	0.1	
# ::edge	control-01	ARG0	room	0.1.0.0.0.1.0.2.0	0.1.0.0.0.1.0.2	
# ::edge	control-01	ARG0	source	0.1.0.0.0.1.0	0.1.0.0.0.1.0.0	
# ::edge	control-01	ARG1	reactor	0.1.0.0.0.1.0.2.0	0.1.0.0.0.1.0.2.0.0	
# ::edge	control-01	ARG1	situation	0.1.0.0.0.1.0	0.1.0.0.0.1.0.1	
# ::edge	control-01	location	room	0.1.0.0.0.1.0	0.1.0.0.0.1.0.2	
# ::edge	have-org-role-91	ARG0	source	0.1.0.0.0.1.0.0.0	0.1.0.0.0.1.0.0	
# ::edge	have-org-role-91	ARG2	official	0.1.0.0.0.1.0.0.0	0.1.0.0.0.1.0.0.0.0	
# ::edge	hour	mod	half	0.1.0.0.0.1.0.0.1.1.0	0.1.0.0.0.1.0.0.1.1.0.0	
# ::edge	injure-01	ARG0	-	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	injure-01	polarity	-	0.1.0.0.0	0.1.0.0.0.2	
# ::edge	radioactivity	polarity	-	0.1.1	0.1.1.0	
# ::edge	release-01	ARG1	injure-01	0.1.0.0	0.1.0.0.0	
# ::edge	source	time	after	0.1.0.0.0.1.0.0	0.1.0.0.0.1.0.0.1	
# ::edge	temporal-quantity	unit	hour	0.1.0.0.0.1.0.0.1.1	0.1.0.0.0.1.0.0.1.1.0	
(c4 / cause-01 
      :ARG0 (a5 / accident) 
      :ARG1 (a4 / and 
            :ARG2-of (c3 / contrast-01 
                  :ARG1 (r3 / release-01 
                        :ARG1 (i / injure-01 
                              :ARG0 (- / -) 
                              :ARG0-of (a / assume-02 
                                    :ARG1 (c2 / control-01 
                                          :ARG0 (s2 / source 
                                                :ARG0-of (h3 / have-org-role-91 
                                                      :ARG2 (o / official)) 
                                                :time (a3 / after 
                                                      :op1 (a2 / accident) 
                                                      :quant (t / temporal-quantity 
                                                            :unit (h / hour 
                                                                  :mod (h2 / half))))) 
                                          :ARG1 (s / situation) 
                                          :location (r / room 
                                                :ARG0-of (c / control-01 
                                                      :ARG1 (r2 / reactor))))) 
                              :polarity (-3 / -)))) 
            :op1 (r4 / radioactivity 
                  :polarity (-2 / -))))

# ::snt whose loss of earnings are included  just the victim of a road accident
# ::tok whose loss of earnings are included just the victim of a road accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:04.610
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt thames valley police who are still investigating the cause of the accident say the dead man was driving a lorry which ran into the back of another southbound lorry between milton and chilton at 4
# ::tok thames valley police who are still investigating the cause of the accident say the dead man was driving a lorry which ran into the back of another southbound lorry between milton and chilton at 4
# ::alignments 34-35|0.2 31-32|0.0.0.0.0 29-30|0.0.0.0.0.1 26-27|0.1.1 24-25|0.0.0.0.0.0 17-18|0.1 15-16|0.1.0 12-13|0 11-12|0.0.0.0.1 8-9|0.0.0.0 6-7|0.0.0 5-6|0.0.0.1 2-3|0.0 0-2|0.0.1.0.0+0.0.1.0.1+0.0.1.0+0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:04.823
# ::node	0	say-01	12-13
# ::node	0.0	police	2-3
# ::node	0.0.0	investigate-01	6-7
# ::node	0.0.0.0	cause-01	8-9
# ::node	0.0.0.0.0	and	31-32
# ::node	0.0.0.0.0.0	back	24-25
# ::node	0.0.0.0.0.1	between	29-30
# ::node	0.0.0.0.1	accident	11-12
# ::node	0.0.0.1	still	5-6
# ::node	0.0.1	country	0-2
# ::node	0.0.1.0	name	0-2
# ::node	0.0.1.0.0	"valley"	0-2
# ::node	0.0.1.0.1	"thames"	0-2
# ::node	0.1	drive-01	17-18
# ::node	0.1.0	man	15-16
# ::node	0.1.1	another	26-27
# ::node	0.2	4	34-35
# ::root	0	say-01
# ::edge	4	op1	say-01	0.2	0	
# ::edge	back	location	and	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	between	op1	and	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	cause-01	ARG0	and	0.0.0.0	0.0.0.0.0	
# ::edge	cause-01	ARG1	accident	0.0.0.0	0.0.0.0.1	
# ::edge	country	name	name	0.0.1	0.0.1.0	
# ::edge	drive-01	ARG0	man	0.1	0.1.0	
# ::edge	drive-01	ARG1	another	0.1	0.1.1	
# ::edge	investigate-01	ARG0	police	0.0.0	0.0	
# ::edge	investigate-01	ARG1	cause-01	0.0.0	0.0.0.0	
# ::edge	investigate-01	mod	still	0.0.0	0.0.0.1	
# ::edge	name	op1	"valley"	0.0.1.0	0.0.1.0.0	
# ::edge	name	op2	"thames"	0.0.1.0	0.0.1.0.1	
# ::edge	police	mod	country	0.0	0.0.1	
# ::edge	say-01	ARG0	police	0	0.0	
# ::edge	say-01	ARG1	drive-01	0	0.1	
(s / say-01 
      :ARG0 (p / police 
            :ARG0-of (i / investigate-01 
                  :ARG1 (c / cause-01 
                        :ARG0 (a / and 
                              :location-of (b2 / back) 
                              :op-of (b / between)) 
                        :ARG1 (a3 / accident)) 
                  :mod (s2 / still)) 
            :mod (c2 / country 
                  :name (n / name 
                        :op1 "valley" 
                        :op2 "thames"))) 
      :ARG1 (d / drive-01 
            :ARG0 (m / man) 
            :ARG1 (a2 / another)) 
      :op-of 4)

# ::snt mrs sheena james and her son luke were injured in the accident when an army ambulance hit the front of her husband stephens car on the a422 at deanshanger near buckingham on february l0
# ::tok mrs sheena james and her son luke were injured in the accident when an army ambulance hit the front of her husband stephens car on the a422 at deanshanger near buckingham on february l0
# ::alignments 32-33|0.0.0.4.0+0.0.0.4 29-30|0.0.0.5 23-24|0.0.0.3 21-22|0.0.0.0.0.0+0.0.0.0.0 18-19|0.0.0.1 16-17|0.0.0 15-16|0.0.0.0 14-15|0.0.0.0.1 11-12|0.0 8-9|0 5-6|0.0.0.2.0+0.0.0.2 3-4|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:05.310
# ::node	0	injure-01	8-9
# ::node	0.0	accident	11-12
# ::node	0.0.0	hit-01	16-17
# ::node	0.0.0.0	ambulance	15-16
# ::node	0.0.0.0.0	have-rel-role-91	21-22
# ::node	0.0.0.0.0.0	husband	21-22
# ::node	0.0.0.0.1	army	14-15
# ::node	0.0.0.1	front	18-19
# ::node	0.0.0.2	have-rel-role-91	5-6
# ::node	0.0.0.2.0	son	5-6
# ::node	0.0.0.3	car	23-24
# ::node	0.0.0.4	date-entity	32-33
# ::node	0.0.0.4.0	2	32-33
# ::node	0.0.0.5	near	29-30
# ::node	0.1	and	3-4
# ::root	0	injure-01
# ::edge	ambulance	mod	army	0.0.0.0	0.0.0.0.1	
# ::edge	date-entity	month	2	0.0.0.4	0.0.0.4.0	
# ::edge	have-rel-role-91	ARG0	ambulance	0.0.0.0.0	0.0.0.0	
# ::edge	have-rel-role-91	ARG1	hit-01	0.0.0.2	0.0.0	
# ::edge	have-rel-role-91	ARG2	husband	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	have-rel-role-91	ARG2	son	0.0.0.2	0.0.0.2.0	
# ::edge	hit-01	ARG0	ambulance	0.0.0	0.0.0.0	
# ::edge	hit-01	ARG1	front	0.0.0	0.0.0.1	
# ::edge	hit-01	ARG2	car	0.0.0	0.0.0.3	
# ::edge	hit-01	location	accident	0.0.0	0.0	
# ::edge	hit-01	time	date-entity	0.0.0	0.0.0.4	
# ::edge	hit-01	time	near	0.0.0	0.0.0.5	
# ::edge	injure-01	ARG0	accident	0	0.0	
# ::edge	injure-01	ARG1	and	0	0.1	
(i / injure-01 
      :ARG0 (a3 / accident 
            :location-of (h3 / hit-01 
                  :ARG0 (a / ambulance 
                        :ARG0-of (h / have-rel-role-91 
                              :ARG2 (h2 / husband)) 
                        :mod (a2 / army)) 
                  :ARG1 (f / front) 
                  :ARG1-of (h4 / have-rel-role-91 
                        :ARG2 (s / son)) 
                  :ARG2 (c / car) 
                  :time (d / date-entity 
                        :month 2) 
                  :time (n / near))) 
      :ARG1 (a4 / and))

# ::snt the day after her accident we went to the swimming baths so she could have a shower
# ::tok the day after her accident we went to the swimming baths so she could have a shower
# ::alignments 16-17|0.0 13-14|0 12-13|0.0.1 11-12|0.1 9-10|0.1.0 5-6|0.0.0 4-5|0.1.0.0 2-3|0.1.0.0.0 1-2|0.1.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:05.383
# ::node	0	possible	13-14
# ::node	0.0	shower-01	16-17
# ::node	0.0.0	we	5-6
# ::node	0.0.1	she	12-13
# ::node	0.1	so	11-12
# ::node	0.1.0	swim-01	9-10
# ::node	0.1.0.0	accident	4-5
# ::node	0.1.0.0.0	after	2-3
# ::node	0.1.0.0.1	day	1-2
# ::root	0	possible
# ::edge	accident	part	day	0.1.0.0	0.1.0.0.1	
# ::edge	after	op1	accident	0.1.0.0.0	0.1.0.0	
# ::edge	possible	domain	shower-01	0	0.0	
# ::edge	shower-01	ARG0	we	0.0	0.0.0	
# ::edge	shower-01	ARG1	she	0.0	0.0.1	
# ::edge	so	op1	possible	0.1	0	
# ::edge	swim-01	ARG1	accident	0.1.0	0.1.0.0	
# ::edge	swim-01	location	so	0.1.0	0.1	
(p / possible 
      :domain (s / shower-01 
            :ARG0 (w / we) 
            :ARG1 (s2 / she)) 
      :op-of (s3 / so 
            :location-of (s4 / swim-01 
                  :ARG1 (a / accident 
                        :op-of (a2 / after) 
                        :part (d / day)))))

# ::snt there have been 14 fatal accidents involving small planes and helicopters this year compared with 13 for the whole of 1989 and 11 in 1988
# ::tok there have been 14 fatal accidents involving small planes and helicopters this year compared with 13 for the whole of 1989 and 11 in 1988
# ::alignments 24-25|0.0.0.4.0.0.0+0.0.0.4.0.0 22-23|0.0.0.3 21-22|0 20-21|0.0.0.2.0+0.0.0.2 18-19|0.0.0.4.0.1.0 15-16|0.0.0.4.0.1 13-14|0.0.0.4.0 12-13|0.0.0.4 11-12|0.0.0.4.1 10-11|0.0.1 9-10|0.0 8-9|0.0.0.0 7-8|0.0.0.0.0 6-7|0.0.0 5-6|0.0.0.1 4-5|0.0.0.1.0 3-4|0.0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:06.456
# ::node	0	and	21-22
# ::node	0.0	and	9-10
# ::node	0.0.0	involve-01	6-7
# ::node	0.0.0.0	plane	8-9
# ::node	0.0.0.0.0	small	7-8
# ::node	0.0.0.1	accident	5-6
# ::node	0.0.0.1.0	fatal	4-5
# ::node	0.0.0.1.1	14	3-4
# ::node	0.0.0.2	date-entity	20-21
# ::node	0.0.0.2.0	1989	20-21
# ::node	0.0.0.3	11	22-23
# ::node	0.0.0.4	year	12-13
# ::node	0.0.0.4.0	compare-01	13-14
# ::node	0.0.0.4.0.0	date-entity	24-25
# ::node	0.0.0.4.0.0.0	1988	24-25
# ::node	0.0.0.4.0.1	13	15-16
# ::node	0.0.0.4.0.1.0	whole	18-19
# ::node	0.0.0.4.1	this	11-12
# ::node	0.0.1	helicopter	10-11
# ::root	0	and
# ::edge	11	op1	involve-01	0.0.0.3	0.0.0	
# ::edge	accident	mod	fatal	0.0.0.1	0.0.0.1.0	
# ::edge	accident	quant	14	0.0.0.1	0.0.0.1.1	
# ::edge	and	op1	and	0	0.0	
# ::edge	and	op1	helicopter	0.0	0.0.1	
# ::edge	compare-01	ARG0	date-entity	0.0.0.4.0	0.0.0.4.0.0	
# ::edge	compare-01	ARG2	year	0.0.0.4.0	0.0.0.4	
# ::edge	compare-01	time	13	0.0.0.4.0	0.0.0.4.0.1	
# ::edge	date-entity	op1	involve-01	0.0.0.2	0.0.0	
# ::edge	date-entity	year	1988	0.0.0.4.0.0	0.0.0.4.0.0.0	
# ::edge	date-entity	year	1989	0.0.0.2	0.0.0.2.0	
# ::edge	involve-01	ARG0	plane	0.0.0	0.0.0.0	
# ::edge	involve-01	ARG1	and	0.0.0	0.0	
# ::edge	involve-01	ARG2	accident	0.0.0	0.0.0.1	
# ::edge	involve-01	time	year	0.0.0	0.0.0.4	
# ::edge	plane	mod	small	0.0.0.0	0.0.0.0.0	
# ::edge	whole	quant	13	0.0.0.4.0.1.0	0.0.0.4.0.1	
# ::edge	year	mod	this	0.0.0.4	0.0.0.4.1	
(a / and 
      :op1 (a2 / and 
            :ARG1-of (i / involve-01 
                  :ARG0 (p / plane 
                        :mod (s / small)) 
                  :ARG2 (a3 / accident 
                        :mod (f / fatal) 
                        :quant 14) 
                  :op-of (d2 / date-entity 
                        :year 1989) 
                  :op-of 11 
                  :time (y / year 
                        :ARG2-of (c / compare-01 
                              :ARG0 (d / date-entity 
                                    :year 1988) 
                              :time (14 / 13 
                                    :quant-of (w / whole))) 
                        :mod (t / this))) 
            :op1 (h / helicopter)))

# ::snt their industrial action is underwritten by a guarantee to maintain an accident and emergency service even if staff are unpaid for carrying out that work
# ::tok their industrial action is underwritten by a guarantee to maintain an accident and emergency service even if staff are unpaid for carrying out that work
# ::alignments 21-22|0 17-18|0.0.0+0.0 13-14|0.1.2.1 12-13|0.1.2 11-12|0.1.2.0 9-10|0.1 7-8|0.1.1 2-3|0.1.0 1-2|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:06.517
# ::node	0	carry-01	21-22
# ::node	0.0	person	17-18
# ::node	0.0.0	staff-01	17-18
# ::node	0.1	maintain-01	9-10
# ::node	0.1.0	action	2-3
# ::node	0.1.0.0	industry	1-2
# ::node	0.1.1	guarantee-01	7-8
# ::node	0.1.2	and	12-13
# ::node	0.1.2.0	accident	11-12
# ::node	0.1.2.1	emergency	13-14
# ::root	0	carry-01
# ::edge	action	mod	industry	0.1.0	0.1.0.0	
# ::edge	and	op1	maintain-01	0.1.2	0.1	
# ::edge	and	op2	accident	0.1.2	0.1.2.0	
# ::edge	and	op3	emergency	0.1.2	0.1.2.1	
# ::edge	carry-01	ARG0	person	0	0.0	
# ::edge	carry-01	ARG1	maintain-01	0	0.1	
# ::edge	guarantee-01	ARG1	maintain-01	0.1.1	0.1	
# ::edge	maintain-01	ARG0	action	0.1	0.1.0	
# ::edge	staff-01	ARG2	person	0.0.0	0.0	
(c / carry-01 
      :ARG0 (p / person 
            :ARG2-of (s / staff-01)) 
      :ARG1 (m / maintain-01 
            :ARG0 (a3 / action 
                  :mod (i / industry)) 
            :ARG1-of (g / guarantee-01) 
            :op-of (a / and 
                  :op1 (a2 / accident) 
                  :op2 (e / emergency))))

# ::snt wouldnt it be good to know that if you had an accident you  could be referred in english to a lawyer or doctor immediately
# ::tok wouldnt it be good to know that if you had an accident you could be referred in english to a lawyer or doctor immediately
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:06.518
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt no one was injured in either accident and there was no release of radioactivity to the environment
# ::tok no one was injured in either accident and there was no release of radioactivity to the environment
# ::alignments 16-17|0.1.0 13-14|0.1.1 11-12|0.1 10-11|0.0.1 7-8|0 6-7|0.0.0 5-6|0.0.0.0 3-4|0.0 0-1|0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:06.593
# ::node	0	and	7-8
# ::node	0.0	injure-01	3-4
# ::node	0.0.0	accident	6-7
# ::node	0.0.0.0	either	5-6
# ::node	0.0.1	-	10-11
# ::node	0.0.2	-	0-1
# ::node	0.1	release-01	11-12
# ::node	0.1.0	environment	16-17
# ::node	0.1.1	radioactivity	13-14
# ::root	0	and
# ::edge	accident	mod	either	0.0.0	0.0.0.0	
# ::edge	and	op1	injure-01	0	0.0	
# ::edge	and	op2	release-01	0	0.1	
# ::edge	injure-01	ARG1	accident	0.0	0.0.0	
# ::edge	injure-01	polarity	-	0.0	0.0.1	
# ::edge	injure-01	polarity	-	0.0	0.0.2	
# ::edge	release-01	ARG0	environment	0.1	0.1.0	
# ::edge	release-01	ARG1	radioactivity	0.1	0.1.1	
(a / and 
      :op1 (i / injure-01 
            :ARG1 (a2 / accident 
                  :mod (e2 / either)) 
            :polarity (- / -) 
            :polarity (-2 / -)) 
      :op2 (r2 / release-01 
            :ARG0 (e / environment) 
            :ARG1 (r / radioactivity)))

# ::snt they turned out to be not very different in their views from other interviewees except that they had more legal problems involving motor accidents which led the surveyors to suggest that they were on the buses because they had lost their driving licences
# ::tok they turned out to be not very different in their views from other interviewees except that they had more legal problems involving motor accidents which led the surveyors to suggest that they were on the buses because they had lost their driving licences
# ::alignments 41-42|0.0.2 39-40|0.0 37-38|0.0.0 36-37|0 35-36|0.0.1 31-32|0.1.0 29-30|0.1 25-26|0.1.1 23-24|0.1.1.0 22-23|0.1.1.0.0 21-22|0.1.1.1 20-21|0.1.1.1.0 19-20|0.1.1.1.0.0 16-17|0.1.1.1.0.1 14-15|0.1.1.1.1.0.0 12-13|0.1.1.1.1.0.0.0 7-8|0.1.1.1.1.0 6-7|0.1.1.1.1.0.1 0-1|0.1.1.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:07.122
# ::node	0	cause-01	36-37
# ::node	0.0	lose-02	39-40
# ::node	0.0.0	they	37-38
# ::node	0.0.1	bus	35-36
# ::node	0.0.2	drive-01	41-42
# ::node	0.1	suggest-01	29-30
# ::node	0.1.0	they	31-32
# ::node	0.1.1	lead-02	25-26
# ::node	0.1.1.0	accident	23-24
# ::node	0.1.1.0.0	motorcycle	22-23
# ::node	0.1.1.1	involve-01	21-22
# ::node	0.1.1.1.0	problem	20-21
# ::node	0.1.1.1.0.0	legal	19-20
# ::node	0.1.1.1.0.1	they	16-17
# ::node	0.1.1.1.1	they	0-1
# ::node	0.1.1.1.1.0	differ-02	7-8
# ::node	0.1.1.1.1.0.0	except-00	14-15
# ::node	0.1.1.1.1.0.0.0	other	12-13
# ::node	0.1.1.1.1.0.1	very	6-7
# ::root	0	cause-01
# ::edge	accident	mod	motorcycle	0.1.1.0	0.1.1.0.0	
# ::edge	cause-01	ARG0	lose-02	0	0.0	
# ::edge	cause-01	ARG1	suggest-01	0	0.1	
# ::edge	differ-02	ARG1	they	0.1.1.1.1.0	0.1.1.1.1	
# ::edge	differ-02	degree	very	0.1.1.1.1.0	0.1.1.1.1.0.1	
# ::edge	drive-01	ARG2	lose-02	0.0.2	0.0	
# ::edge	except-00	ARG0	other	0.1.1.1.1.0.0	0.1.1.1.1.0.0.0	
# ::edge	except-00	ARG1	differ-02	0.1.1.1.1.0.0	0.1.1.1.1.0	
# ::edge	involve-01	ARG0	problem	0.1.1.1	0.1.1.1.0	
# ::edge	involve-01	ARG1	they	0.1.1.1	0.1.1.1.1	
# ::edge	lead-02	ARG0	accident	0.1.1	0.1.1.0	
# ::edge	lead-02	ARG1	involve-01	0.1.1	0.1.1.1	
# ::edge	lose-02	ARG0	they	0.0	0.0.0	
# ::edge	lose-02	ARG1	bus	0.0	0.0.1	
# ::edge	problem	mod	legal	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	problem	poss	they	0.1.1.1.0	0.1.1.1.0.1	
# ::edge	suggest-01	ARG0	they	0.1	0.1.0	
# ::edge	suggest-01	ARG2	lead-02	0.1	0.1.1	
(c / cause-01 
      :ARG0 (l / lose-02 
            :ARG0 (t / they) 
            :ARG1 (b / bus) 
            :ARG2-of (d / drive-01)) 
      :ARG1 (s / suggest-01 
            :ARG0 (t2 / they) 
            :ARG2 (l2 / lead-02 
                  :ARG0 (a / accident 
                        :mod (m / motorcycle)) 
                  :ARG1 (i / involve-01 
                        :ARG0 (p / problem 
                              :mod (l3 / legal) 
                              :poss (t3 / they)) 
                        :ARG1 (t4 / they 
                              :ARG1-of (d2 / differ-02 
                                    :ARG1-of (e / except-00 
                                          :ARG0 (o / other)) 
                                    :degree (v / very)))))))

# ::snt the accident occurred while the reactor was shut down for refuelling so there was no release of radioactivity
# ::tok the accident occurred while the reactor was shut down for refuelling so there was no release of radioactivity
# ::alignments 17-18|0 15-16|0.0 14-15|0.0.1 11-12|0.0.0.1 10-11|0.0.0 8-9|0.0.0.2.1 7-8|0.0.0.2 5-6|0.0.0.2.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:07.213
# ::node	0	radioactivity	17-18
# ::node	0.0	release-01	15-16
# ::node	0.0.0	refuel-01	10-11
# ::node	0.0.0.0	accident	1-2
# ::node	0.0.0.1	so	11-12
# ::node	0.0.0.2	shut-05	7-8
# ::node	0.0.0.2.0	reactor	5-6
# ::node	0.0.0.2.1	down	8-9
# ::node	0.0.1	-	14-15
# ::root	0	radioactivity
(r / radioactivity 
      :ARG1-of (r2 / release-01 
            :ARG0-of (r3 / refuel-01 
                  :ARG1 (a / accident) 
                  :manner (s / so) 
                  :manner-of (s2 / shut-05 
                        :ARG1 (r4 / reactor) 
                        :direction (d / down))) 
            :polarity (- / -)))

# ::snt two people were killed and 20 were injured in the accident which involved 25 vehicles
# ::tok two people were killed and 20 were injured in the accident which involved 25 vehicles
# ::alignments 14-15|0.0.0.0 13-14|0.0.0.0.0 12-13|0.0.0 10-11|0.0 7-8|0 5-6|0.1.0.0 4-5|0.1 3-4|0.1.0 0-1|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:07.316
# ::node	0	injure-01	7-8
# ::node	0.0	accident	10-11
# ::node	0.0.0	involve-01	12-13
# ::node	0.0.0.0	vehicle	14-15
# ::node	0.0.0.0.0	25	13-14
# ::node	0.0.0.1	2	0-1
# ::node	0.1	and	4-5
# ::node	0.1.0	kill-01	3-4
# ::node	0.1.0.0	20	5-6
# ::root	0	injure-01
# ::edge	2	op1	involve-01	0.0.0.1	0.0.0	
# ::edge	and	op1	kill-01	0.1	0.1.0	
# ::edge	injure-01	ARG0	accident	0	0.0	
# ::edge	injure-01	ARG1	and	0	0.1	
# ::edge	involve-01	ARG0	accident	0.0.0	0.0	
# ::edge	involve-01	ARG1	vehicle	0.0.0	0.0.0.0	
# ::edge	kill-01	ARG1	20	0.1.0	0.1.0.0	
# ::edge	vehicle	quant	25	0.0.0.0	0.0.0.0.0	
(i2 / injure-01 
      :ARG0 (a / accident 
            :ARG0-of (i / involve-01 
                  :ARG1 (v / vehicle 
                        :quant 25) 
                  :op-of 2)) 
      :ARG1 (a2 / and 
            :op1 (k / kill-01 
                  :ARG1 20)))

# ::snt but it has been difficult for our crews to reach the scene of the accidents because some motorists parked on the hard shoulder blocking all four lanes
# ::tok but it has been difficult for our crews to reach the scene of the accidents because some motorists parked on the hard shoulder blocking all four lanes
# ::alignments 25-26|0.0 24-25|0.1.3.0 23-24|0.1.0.0.0 22-23|0.1.0.0.1 21-22|0.1.0.0.1.0 18-19|0.1.0.0 16-17|0.1.1 15-16|0.1.0 14-15|0.1.3.1.0 11-12|0.1.3.1 9-10|0.1.3 4-5|0.1 1-2|0.1.2 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:07.426
# ::node	0	contrast-01	0-1
# ::node	0.0	4	25-26
# ::node	0.1	difficult	4-5
# ::node	0.1.0	cause-01	15-16
# ::node	0.1.0.0	park-01	18-19
# ::node	0.1.0.0.0	block-01	23-24
# ::node	0.1.0.0.1	shoulder	22-23
# ::node	0.1.0.0.1.0	hard	21-22
# ::node	0.1.1	some	16-17
# ::node	0.1.2	it	1-2
# ::node	0.1.3	reach-01	9-10
# ::node	0.1.3.0	all	24-25
# ::node	0.1.3.1	scene	11-12
# ::node	0.1.3.1.0	accident	14-15
# ::root	0	contrast-01
# ::edge	cause-01	ARG0	park-01	0.1.0	0.1.0.0	
# ::edge	cause-01	ARG1	difficult	0.1.0	0.1	
# ::edge	contrast-01	ARG1	4	0	0.0	
# ::edge	contrast-01	ARG2	difficult	0	0.1	
# ::edge	difficult	compared-to	some	0.1	0.1.1	
# ::edge	difficult	domain	it	0.1	0.1.2	
# ::edge	difficult	purpose	reach-01	0.1	0.1.3	
# ::edge	park-01	ARG1	block-01	0.1.0.0	0.1.0.0.0	
# ::edge	park-01	ARG2	shoulder	0.1.0.0	0.1.0.0.1	
# ::edge	reach-01	ARG0	all	0.1.3	0.1.3.0	
# ::edge	reach-01	ARG1	scene	0.1.3	0.1.3.1	
# ::edge	scene	mod	accident	0.1.3.1	0.1.3.1.0	
# ::edge	shoulder	mod	hard	0.1.0.0.1	0.1.0.0.1.0	
(c2 / contrast-01 
      :ARG1 4 
      :ARG2 (d / difficult 
            :ARG1-of (c / cause-01 
                  :ARG0 (p / park-01 
                        :ARG1 (b / block-01) 
                        :ARG2 (s / shoulder 
                              :mod (h / hard)))) 
            :compared-to (s2 / some) 
            :domain (i / it) 
            :purpose (r / reach-01 
                  :ARG0 (a / all) 
                  :ARG1 (s3 / scene 
                        :mod (a2 / accident)))))

# ::snt he was real kind to marie after her accident
# ::tok he was real kind to marie after her accident
# ::alignments 8-9|0.0.0.0.0 6-7|0.0.0.0 3-4|0.0.0 2-3|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:07.438
# ::node	0	he	0-1
# ::node	0.0	real	2-3
# ::node	0.0.0	kind	3-4
# ::node	0.0.0.0	after	6-7
# ::node	0.0.0.0.0	accident	8-9
# ::root	0	he
(h / he 
      :domain-of (r / real 
            :mod-of (k / kind 
                  :example-of (a2 / after 
                        :op1 (a / accident)))))

# ::snt it might be a road accident a cow on the railway line or snippets of initially insignificant information which build up into a crime to be solved
# ::tok it might be a road accident a cow on the railway line or snippets of initially insignificant information which build up into a crime to be solved
# ::alignments 26-27|0 23-24|0.1 19-20|0.1.0 17-18|0.1.0.1 16-17|0.1.0.1.0.0+0.1.0.1.0 15-16|0.0 12-13|0.1.0.0 11-12|0.1.0.0.1.0 10-11|0.1.0.0.1.0.0 7-8|0.1.0.0.1 5-6|0.1.0.0.0 4-5|0.1.0.0.0.1 0-1|0.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:07.571
# ::node	0	solve-01	26-27
# ::node	0.0	initial	15-16
# ::node	0.1	crime	23-24
# ::node	0.1.0	build-01	19-20
# ::node	0.1.0.0	or	12-13
# ::node	0.1.0.0.0	accident	5-6
# ::node	0.1.0.0.0.0	it	0-1
# ::node	0.1.0.0.0.1	road	4-5
# ::node	0.1.0.0.1	cow	7-8
# ::node	0.1.0.0.1.0	line	11-12
# ::node	0.1.0.0.1.0.0	railway	10-11
# ::node	0.1.0.1	information	17-18
# ::node	0.1.0.1.0	significant	16-17
# ::node	0.1.0.1.0.0	-	16-17
# ::root	0	solve-01
# ::edge	accident	domain	it	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	accident	location	road	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	build-01	ARG0	or	0.1.0	0.1.0.0	
# ::edge	build-01	ARG1	information	0.1.0	0.1.0.1	
# ::edge	build-01	location	crime	0.1.0	0.1	
# ::edge	cow	mod	line	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	information	mod	significant	0.1.0.1	0.1.0.1.0	
# ::edge	line	mod	railway	0.1.0.0.1.0	0.1.0.0.1.0.0	
# ::edge	or	op1	accident	0.1.0.0	0.1.0.0.0	
# ::edge	or	op2	cow	0.1.0.0	0.1.0.0.1	
# ::edge	significant	polarity	-	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	solve-01	ARG0	initial	0	0.0	
# ::edge	solve-01	ARG1	crime	0	0.1	
(s / solve-01 
      :ARG0 (i2 / initial) 
      :ARG1 (c / crime 
            :location-of (b / build-01 
                  :ARG0 (o / or 
                        :op1 (a / accident 
                              :domain (i3 / it) 
                              :location (r2 / road)) 
                        :op2 (c2 / cow 
                              :mod (l / line 
                                    :mod (r / railway)))) 
                  :ARG1 (i / information 
                        :mod (s2 / significant 
                              :polarity -)))))

# ::snt or even to ban them completely and to test the blood alcohol level of anyone involved in an accident the royal college of surgeons said yesterday writes nicholas timmins
# ::tok or even to ban them completely and to test the blood alcohol level of anyone involved in an accident the royal college of surgeons said yesterday writes nicholas timmins
# ::alignments 26-27|0.0.0 25-26|0.1 24-25|0 23-24|0.0.0.1 21-22|0.0 20-21|0.0.0.0.0.1.0 18-19|0.0.0.0.0.0.1 15-16|0.0.0.0.0.0 14-15|0.0.0.0.0.0.0 12-13|0.0.0.0.0 11-12|0.0.0.0.0.2 10-11|0.0.0.0 8-9|0.0.0.0.0.1 6-7|0.0.0.0.0.1.1 5-6|0.0.0.0.0.1.1.0.1 3-4|0.0.0.0.0.1.1.0 0-1|0.0.0.0.0.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:08.062
# ::node	0	say-01	24-25
# ::node	0.0	college	21-22
# ::node	0.0.0	write-01	26-27
# ::node	0.0.0.0	blood	10-11
# ::node	0.0.0.0.0	level	12-13
# ::node	0.0.0.0.0.0	involve-01	15-16
# ::node	0.0.0.0.0.0.0	anyone	14-15
# ::node	0.0.0.0.0.0.1	accident	18-19
# ::node	0.0.0.0.0.1	test-01	8-9
# ::node	0.0.0.0.0.1.0	royal	20-21
# ::node	0.0.0.0.0.1.1	and	6-7
# ::node	0.0.0.0.0.1.1.0	ban-01	3-4
# ::node	0.0.0.0.0.1.1.0.0	or	0-1
# ::node	0.0.0.0.0.1.1.0.1	complete	5-6
# ::node	0.0.0.0.0.2	alcohol	11-12
# ::node	0.0.0.1	surgeon	23-24
# ::node	0.1	yesterday	25-26
# ::root	0	say-01
# ::edge	and	op1	test-01	0.0.0.0.0.1.1	0.0.0.0.0.1	
# ::edge	ban-01	ARG1	or	0.0.0.0.0.1.1.0	0.0.0.0.0.1.1.0.0	
# ::edge	ban-01	ARG2	and	0.0.0.0.0.1.1.0	0.0.0.0.0.1.1	
# ::edge	ban-01	manner	complete	0.0.0.0.0.1.1.0	0.0.0.0.0.1.1.0.1	
# ::edge	involve-01	ARG0	level	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	involve-01	ARG1	anyone	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	involve-01	ARG2	accident	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	level	mod	alcohol	0.0.0.0.0	0.0.0.0.0.2	
# ::edge	level	mod	blood	0.0.0.0.0	0.0.0.0	
# ::edge	say-01	ARG0	college	0	0.0	
# ::edge	say-01	ARG1	yesterday	0	0.1	
# ::edge	test-01	ARG0	royal	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	test-01	ARG1	level	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	write-01	ARG0	college	0.0.0	0.0	
# ::edge	write-01	ARG1	blood	0.0.0	0.0.0.0	
# ::edge	write-01	ARG2	surgeon	0.0.0	0.0.0.1	
(s / say-01 
      :ARG0 (c / college 
            :ARG0-of (w / write-01 
                  :ARG1 (b / blood 
                        :mod-of (l / level 
                              :ARG0-of (i / involve-01 
                                    :ARG1 (a2 / anyone) 
                                    :ARG2 (a / accident)) 
                              :ARG1-of (t / test-01 
                                    :ARG0 (r / royal) 
                                    :op-of (a4 / and 
                                          :ARG2-of (b2 / ban-01 
                                                :ARG1 (o / or) 
                                                :manner (c2 / complete)))) 
                              :mod (a3 / alcohol))) 
                  :ARG2 (s2 / surgeon))) 
      :ARG1 (y / yesterday))

# ::snt peter hatton 37 of tristren road ducklington near witney who went missing from warneford hospital on monday died in the accident involving a rover at the bypass near the junction with eynsham road
# ::tok peter hatton 37 of tristren road ducklington near witney who went missing from warneford hospital on monday died in the accident involving a rover at the bypass near the junction with eynsham road
# ::alignments 32-33|0.0.2.0 27-28|0.1 26-27|0 21-22|0.0 20-21|0.0.1 17-18|0.0.2 14-15|0.0.2.1.2 11-12|0.0.2.1 7-8|0.0.2.1.1 5-6|0.0.2.1.0 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:08.226
# ::node	0	bypass	26-27
# ::node	0.0	involve-01	21-22
# ::node	0.0.0	37	2-3
# ::node	0.0.1	accident	20-21
# ::node	0.0.2	die-01	17-18
# ::node	0.0.2.0	road	32-33
# ::node	0.0.2.1	miss-01	11-12
# ::node	0.0.2.1.0	road	5-6
# ::node	0.0.2.1.1	near	7-8
# ::node	0.0.2.1.2	hospital	14-15
# ::node	0.1	near	27-28
# ::root	0	bypass
# ::edge	bypass	location	near	0	0.1	
# ::edge	die-01	ARG1	road	0.0.2	0.0.2.0	
# ::edge	die-01	time	involve-01	0.0.2	0.0	
# ::edge	involve-01	ARG0	37	0.0	0.0.0	
# ::edge	involve-01	ARG1	accident	0.0	0.0.1	
# ::edge	involve-01	ARG2	bypass	0.0	0	
# ::edge	miss-01	ARG0	road	0.0.2.1	0.0.2.1.0	
# ::edge	miss-01	ARG1	near	0.0.2.1	0.0.2.1.1	
# ::edge	miss-01	ARG2	hospital	0.0.2.1	0.0.2.1.2	
# ::edge	miss-01	purpose	die-01	0.0.2.1	0.0.2	
(b / bypass 
      :ARG2-of (i / involve-01 
            :ARG0 37 
            :ARG1 (a / accident) 
            :time-of (d / die-01 
                  :ARG1 (r / road) 
                  :purpose-of (m / miss-01 
                        :ARG0 (r2 / road) 
                        :ARG1 (n2 / near) 
                        :ARG2 (h / hospital)))) 
      :location (n / near))

# ::snt the overall accident compensation landscape in america is therefore highly fragmented and lacking any systematic plan
# ::tok the overall accident compensation landscape in america is therefore highly fragmented and lacking any systematic plan
# ::alignments 15-16|0.0.1 14-15|0.0.1.3 13-14|0.0.1.2 12-13|0.0 11-12|0 9-10|0.0.0 6-7|0.0.1.0.0.0+0.0.1.0.0+0.0.1.0 3-4|0.0.1.1 2-3|0.0.1.1.0 1-2|0.0.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:08.338
# ::node	0	and	11-12
# ::node	0.0	lack-01	12-13
# ::node	0.0.0	high	9-10
# ::node	0.0.1	plan-01	15-16
# ::node	0.0.1.0	country	6-7
# ::node	0.0.1.0.0	name	6-7
# ::node	0.0.1.0.0.0	"America"	6-7
# ::node	0.0.1.1	compensate-01	3-4
# ::node	0.0.1.1.0	accident	2-3
# ::node	0.0.1.1.0.0	overall	1-2
# ::node	0.0.1.2	any	13-14
# ::node	0.0.1.3	systematic	14-15
# ::root	0	and
# ::edge	accident	mod	overall	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	and	op1	lack-01	0	0.0	
# ::edge	compensate-01	ARG1	accident	0.0.1.1	0.0.1.1.0	
# ::edge	country	name	name	0.0.1.0	0.0.1.0.0	
# ::edge	lack-01	ARG0	high	0.0	0.0.0	
# ::edge	lack-01	ARG1	plan-01	0.0	0.0.1	
# ::edge	name	op1	"America"	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	plan-01	ARG0	country	0.0.1	0.0.1.0	
# ::edge	plan-01	ARG1	compensate-01	0.0.1	0.0.1.1	
# ::edge	plan-01	mod	any	0.0.1	0.0.1.2	
# ::edge	plan-01	mod	systematic	0.0.1	0.0.1.3	
(a2 / and 
      :op1 (l / lack-01 
            :ARG0 (h / high) 
            :ARG1 (p / plan-01 
                  :ARG0 (c / country 
                        :name (n / name 
                              :op1 "America")) 
                  :ARG1 (c2 / compensate-01 
                        :ARG1 (a3 / accident 
                              :mod (o / overall))) 
                  :mod (a / any) 
                  :mod (s / systematic))))

# ::snt the underwriter was concerned about numerous claims arising from a single accident dash
# ::tok the underwriter was concerned about numerous claims arising from a single accident dash
# ::alignments 11-12|0.1.0 10-11|0.1 6-7|0.0 5-6|0.0.0 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:08.360
# ::node	0	concern-01	3-4
# ::node	0.0	claim-01	6-7
# ::node	0.0.0	numerous	5-6
# ::node	0.1	single	10-11
# ::node	0.1.0	accident	11-12
# ::root	0	concern-01
# ::edge	accident	mod	single	0.1.0	0.1	
# ::edge	claim-01	quant	numerous	0.0	0.0.0	
# ::edge	concern-01	ARG0	claim-01	0	0.0	
# ::edge	concern-01	ARG1	single	0	0.1	
(c2 / concern-01 
      :ARG0 (c / claim-01 
            :quant (n / numerous)) 
      :ARG1 (s / single 
            :mod-of (a / accident)))

# ::snt common dental accidents go in phases
# ::tok common dental accidents go in phases
# ::alignments 5-6|0 2-3|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:08.367
# ::node	0	phase	5-6
# ::node	0.0	accident	2-3
# ::node	0.0.0	common	0-1
# ::root	0	phase
(p / phase 
      :mod-of (a / accident 
            :mod (c / common)))

# ::snt consultant surgeons at st bartholomews hospital in london have warned managers that the hospital has no alternative but to shut its accident and emergency department after the closure of 75 beds this week to head off a 2m overspend
# ::tok consultant surgeons at st bartholomews hospital in london have warned managers that the hospital has no alternative but to shut its accident and emergency department after the closure of 75 beds this week to head off a 2m overspend
# ::alignments 35-36|0.2.0.0.1 34-35|0.2.0.0 32-33|0.2.0.0.0 31-32|0.2.0.0.0.0 29-30|0.0 25-26|0.1.0.3 24-25|0.1.0.1.0 23-24|0.1.0.1.0.0 22-23|0.1.0.1 21-22|0.1.0.2 19-20|0.1.0 17-18|0 16-17|0.1 15-16|0.2.0.0.2 13-14|0.1.0.0 10-11|0.2+0.2.0 9-10|0.2.0.1 7-8|0.2.0.1.0.0.1.0.0+0.2.0.1.0.0.1.0+0.2.0.1.0.0.1 5-6|0.2.0.1.0.1 1-2|0.2.0.1.0 0-1|0.2.0.1.0.0+0.2.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:09.856
# ::node	0	contrast-01	17-18
# ::node	0.0	75	29-30
# ::node	0.1	alternative	16-17
# ::node	0.1.0	shut-05	19-20
# ::node	0.1.0.0	hospital	13-14
# ::node	0.1.0.1	and	22-23
# ::node	0.1.0.1.0	department	24-25
# ::node	0.1.0.1.0.0	emergency	23-24
# ::node	0.1.0.2	accident	21-22
# ::node	0.1.0.3	after	25-26
# ::node	0.2	manage-01	10-11
# ::node	0.2.0	person	10-11
# ::node	0.2.0.0	head-01	34-35
# ::node	0.2.0.0.0	week	32-33
# ::node	0.2.0.0.0.0	this	31-32
# ::node	0.2.0.0.1	off	35-36
# ::node	0.2.0.0.2	-	15-16
# ::node	0.2.0.1	warn-01	9-10
# ::node	0.2.0.1.0	surgeon	1-2
# ::node	0.2.0.1.0.0	consult-01	0-1
# ::node	0.2.0.1.0.0.0	person	0-1
# ::node	0.2.0.1.0.0.1	city	7-8
# ::node	0.2.0.1.0.0.1.0	name	7-8
# ::node	0.2.0.1.0.0.1.0.0	"London"	7-8
# ::node	0.2.0.1.0.1	hospital	5-6
# ::root	0	contrast-01
# ::edge	-	op1	head-01	0.2.0.0.2	0.2.0.0	
# ::edge	alternative	prep-except	shut-05	0.1	0.1.0	
# ::edge	and	op1	department	0.1.0.1	0.1.0.1.0	
# ::edge	city	name	name	0.2.0.1.0.0.1	0.2.0.1.0.0.1.0	
# ::edge	consult-01	ARG0	person	0.2.0.1.0.0	0.2.0.1.0.0.0	
# ::edge	consult-01	ARG1	surgeon	0.2.0.1.0.0	0.2.0.1.0	
# ::edge	consult-01	mod	city	0.2.0.1.0.0	0.2.0.1.0.0.1	
# ::edge	contrast-01	ARG0	75	0	0.0	
# ::edge	contrast-01	ARG1	alternative	0	0.1	
# ::edge	department	mod	emergency	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	head-01	ARG0	person	0.2.0.0	0.2.0	
# ::edge	head-01	ARG1	week	0.2.0.0	0.2.0.0.0	
# ::edge	head-01	direction	off	0.2.0.0	0.2.0.0.1	
# ::edge	manage-01	ARG0	person	0.2	0.2.0	
# ::edge	manage-01	ARG1	contrast-01	0.2	0	
# ::edge	name	op1	"London"	0.2.0.1.0.0.1.0	0.2.0.1.0.0.1.0.0	
# ::edge	shut-05	ARG0	hospital	0.1.0	0.1.0.0	
# ::edge	shut-05	ARG1	and	0.1.0	0.1.0.1	
# ::edge	shut-05	ARG2	accident	0.1.0	0.1.0.2	
# ::edge	shut-05	time	after	0.1.0	0.1.0.3	
# ::edge	surgeon	location	hospital	0.2.0.1.0	0.2.0.1.0.1	
# ::edge	warn-01	ARG1	surgeon	0.2.0.1	0.2.0.1.0	
# ::edge	warn-01	ARG2	person	0.2.0.1	0.2.0	
# ::edge	week	mod	this	0.2.0.0.0	0.2.0.0.0.0	
(c / contrast-01 
      :ARG0 75 
      :ARG1 (a4 / alternative 
            :prep-except (s / shut-05 
                  :ARG0 (h2 / hospital) 
                  :ARG1 (a2 / and 
                        :op1 (d / department 
                              :mod (e / emergency))) 
                  :ARG2 (a3 / accident) 
                  :time (a / after))) 
      :ARG1-of (m / manage-01 
            :ARG0 (p / person 
                  :ARG0-of (h / head-01 
                        :ARG1 (w / week 
                              :mod (t / this)) 
                        :direction (o / off) 
                        :op-of (- / -)) 
                  :ARG2-of (w2 / warn-01 
                        :ARG1 (s2 / surgeon 
                              :ARG1-of (c3 / consult-01 
                                    :ARG0 (p2 / person) 
                                    :mod (c2 / city 
                                          :name (n / name 
                                                :op1 "London"))) 
                              :location (h3 / hospital))))))

# ::snt so it was an accident as far as we know
# ::tok so it was an accident as far as we know
# ::alignments 9-10|0 8-9|0.0 6-7|0.2 4-5|0.1.0 1-2|0.1 0-1|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:09.873
# ::node	0	know-01	9-10
# ::node	0.0	we	8-9
# ::node	0.1	it	1-2
# ::node	0.1.0	accident	4-5
# ::node	0.1.0.0	so	0-1
# ::node	0.2	far	6-7
# ::root	0	know-01
# ::edge	accident	domain	it	0.1.0	0.1	
# ::edge	far	op1	know-01	0.2	0	
# ::edge	know-01	ARG0	we	0	0.0	
# ::edge	know-01	ARG1	it	0	0.1	
# ::edge	so	op1	accident	0.1.0.0	0.1.0	
(k / know-01 
      :ARG0 (w / we) 
      :ARG1 (i / it 
            :domain-of (a / accident 
                  :op-of (s / so))) 
      :op-of (f / far))

# ::snt griff old and cantankerous had only one digit and a thumb on his right hand since an accident in the steelworks and he waved this stump at me when explaining his sometimes weird and wonderful theses on politics and nature
# ::tok griff old and cantankerous had only one digit and a thumb on his right hand since an accident in the steelworks and he waved this stump at me when explaining his sometimes weird and wonderful theses on politics and nature
# ::alignments 39-40|0.0.1.1 38-39|0.0.1 37-38|0.0.1.0 34-35|0.2 33-34|0 32-33|0.1 31-32|0.1.0 29-30|0.0 24-25|0.0.0.0.2.0 23-24|0.0.0.0 22-23|0.0.0 21-22|0.0.0.0.1 17-18|0.0.0.0.1.1.1 15-16|0.0.0.0.1.1 14-15|0.0.0.0.1.1.0 8-9|0.0.0.0.0 7-8|0.0.0.0.1.0 5-6|0.0.0.0.1.0.0 2-3|0.0.0.0.2 1-2|0.0.0.0.2.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:10.359
# ::node	0	and	33-34
# ::node	0.0	explain-01	29-30
# ::node	0.0.0	he	22-23
# ::node	0.0.0.0	wave-01	23-24
# ::node	0.0.0.0.0	and	8-9
# ::node	0.0.0.0.1	and	21-22
# ::node	0.0.0.0.1.0	digit	7-8
# ::node	0.0.0.0.1.0.0	only	5-6
# ::node	0.0.0.0.1.1	since	15-16
# ::node	0.0.0.0.1.1.0	hand	14-15
# ::node	0.0.0.0.1.1.1	accident	17-18
# ::node	0.0.0.0.2	and	2-3
# ::node	0.0.0.0.2.0	this	24-25
# ::node	0.0.0.0.2.1	old	1-2
# ::node	0.0.1	and	38-39
# ::node	0.0.1.0	politics	37-38
# ::node	0.0.1.1	nature	39-40
# ::node	0.1	weird	32-33
# ::node	0.1.0	sometimes	31-32
# ::node	0.2	wonderful	34-35
# ::root	0	and
# ::edge	and	mod	this	0.0.0.0.2	0.0.0.0.2.0	
# ::edge	and	op1	digit	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	and	op1	old	0.0.0.0.2	0.0.0.0.2.1	
# ::edge	and	op1	politics	0.0.1	0.0.1.0	
# ::edge	and	op1	weird	0	0.1	
# ::edge	and	op2	nature	0.0.1	0.0.1.1	
# ::edge	and	op2	wave-01	0.0.0.0.1	0.0.0.0	
# ::edge	and	op2	wave-01	0.0.0.0.2	0.0.0.0	
# ::edge	and	op2	wonderful	0	0.2	
# ::edge	and	time	since	0.0.0.0.1	0.0.0.0.1.1	
# ::edge	digit	mod	only	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	explain-01	ARG0	he	0.0	0.0.0	
# ::edge	explain-01	ARG1	and	0.0	0	
# ::edge	explain-01	ARG2	and	0.0	0.0.1	
# ::edge	hand	location	since	0.0.0.0.1.1.0	0.0.0.0.1.1	
# ::edge	since	op1	accident	0.0.0.0.1.1	0.0.0.0.1.1.1	
# ::edge	wave-01	ARG0	he	0.0.0.0	0.0.0	
# ::edge	wave-01	ARG1	and	0.0.0.0	0.0.0.0.0	
# ::edge	weird	degree	sometimes	0.1	0.1.0	
(a2 / and 
      :ARG1-of (e / explain-01 
            :ARG0 (h / he 
                  :ARG0-of (w3 / wave-01 
                        :ARG1 (a5 / and) 
                        :op-of (a3 / and 
                              :op1 (d / digit 
                                    :mod (o / only)) 
                              :time (s2 / since 
                                    :location-of (h2 / hand) 
                                    :op1 (a4 / accident))) 
                        :op-of (a6 / and 
                              :mod (t / this) 
                              :op1 (o2 / old)))) 
            :ARG2 (a / and 
                  :op1 (p / politics) 
                  :op2 (n / nature))) 
      :op1 (w2 / weird 
            :degree (s / sometimes)) 
      :op2 (w / wonderful))

# ::snt do you understand  to slow down the galloping commode and prevent a nasty accident and because i was alarmed at her vehemence i agreed
# ::tok do you understand to slow down the galloping commode and prevent a nasty accident and because i was alarmed at her vehemence i agreed
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:10.360
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt what you have to do if there is an accident dash
# ::tok what you have to do if there is an accident dash
# ::alignments 9-10|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:10.368
# ::node	0	accident	9-10
# ::node	0.0	you	1-2
# ::root	0	accident
(a / accident 
      :op-of (y / you))

# ::snt in the sixteenth century and the beginning of the seventeenth fraud and accident dash, especially the accidental loss of a document dash
# ::tok in the sixteenth century and the beginning of the seventeenth fraud and accident dash , especially the accidental loss of a document dash
# ::alignments 21-22|0.0.1 15-16|0.0.0 12-13|0.1 11-12|0 6-7|0.0 4-5|0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:10.402
# ::node	0	and	11-12
# ::node	0.0	begin-01	6-7
# ::node	0.0.0	especially	15-16
# ::node	0.0.1	document	21-22
# ::node	0.0.2	and	4-5
# ::node	0.1	accident	12-13
# ::root	0	and
# ::edge	and	op1	accident	0	0.1	
# ::edge	and	op1	begin-01	0.0.2	0.0	
# ::edge	begin-01	ARG0	especially	0.0	0.0.0	
# ::edge	begin-01	ARG1	and	0.0	0	
# ::edge	document	op1	begin-01	0.0.1	0.0	
(a2 / and 
      :ARG1-of (b / begin-01 
            :ARG0 (e / especially) 
            :op-of (d / document) 
            :op-of (a3 / and)) 
      :op1 (a / accident))

# ::snt moreover the judge later unravelled his own decision by remanding the individual cases to different districts where the accident had occurred
# ::tok moreover the judge later unravelled his own decision by remanding the individual cases to different districts where the accident had occurred
# ::alignments 18-19|0.0 15-16|0.1.0 14-15|0.1 12-13|0.2.0.0.0 11-12|0.2.0.0 7-8|0.2.0 3-4|0.2 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:10.454
# ::node	0	judge-01	2-3
# ::node	0.0	accident	18-19
# ::node	0.1	differ-02	14-15
# ::node	0.1.0	district	15-16
# ::node	0.2	late	3-4
# ::node	0.2.0	decide-01	7-8
# ::node	0.2.0.0	individual	11-12
# ::node	0.2.0.0.0	case	12-13
# ::root	0	judge-01
# ::edge	case	mod	individual	0.2.0.0.0	0.2.0.0	
# ::edge	decide-01	ARG1	individual	0.2.0	0.2.0.0	
# ::edge	decide-01	time	late	0.2.0	0.2	
# ::edge	differ-02	ARG1	district	0.1	0.1.0	
# ::edge	judge-01	ARG0	accident	0	0.0	
# ::edge	judge-01	ARG1	differ-02	0	0.1	
# ::edge	judge-01	time	late	0	0.2	
(j / judge-01 
      :ARG0 (a / accident) 
      :ARG1 (d2 / differ-02 
            :ARG1 (d / district)) 
      :time (l / late 
            :time-of (d3 / decide-01 
                  :ARG1 (i / individual 
                        :mod-of (c / case)))))

# ::snt in wiltshire honest john arkell was said to have acquired many of his pubs through hunting accidents every time he fell off his horse bought a piece of ground in hunting vernacular and was taken to a hostelry to recover he ended up buying the inn
# ::tok in wiltshire honest john arkell was said to have acquired many of his pubs through hunting accidents every time he fell off his horse bought a piece of ground in hunting vernacular and was taken to a hostelry to recover he ended up buying the inn
# ::alignments 43-44|0.0.1.0.0.0.0.0.0 41-42|0.0.1.0.0.0.0 40-41|0.0.1.0.0.0.0.0 39-40|0.0.1.0.0.0 32-33|0.0.1.0.1 30-31|0.0.1.0.0.2.0.0 28-29|0.0.1.0.0.1.0.0 26-27|0.0.1.0.0.1.0 24-25|0.0.1.0.0.1 23-24|0.0.1.0.0.2 21-22|0.0.1.0.0.2.0 20-21|0.0.1.0 19-20|0.0.1.0.0 18-19|0.0.1 17-18|0.0.1.1 16-17|0.0.1.0.0.2.0.0.0.0 15-16|0.0.1.0.0.2.0.0.0 10-11|0.0.0 9-10|0.0 6-7|0 2-3|0.0.1.0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:11.002
# ::node	0	say-01	6-7
# ::node	0.0	acquire-01	9-10
# ::node	0.0.0	many	10-11
# ::node	0.0.1	time	18-19
# ::node	0.0.1.0	fall-01	20-21
# ::node	0.0.1.0.0	he	19-20
# ::node	0.0.1.0.0.0	recover-02	39-40
# ::node	0.0.1.0.0.0.0	end-01	41-42
# ::node	0.0.1.0.0.0.0.0	he	40-41
# ::node	0.0.1.0.0.0.0.0.0	buy-01	43-44
# ::node	0.0.1.0.0.1	buy-01	24-25
# ::node	0.0.1.0.0.1.0	piece	26-27
# ::node	0.0.1.0.0.1.0.0	ground	28-29
# ::node	0.0.1.0.0.1.1	honest	2-3
# ::node	0.0.1.0.0.2	horse	23-24
# ::node	0.0.1.0.0.2.0	off	21-22
# ::node	0.0.1.0.0.2.0.0	hunt-01	30-31
# ::node	0.0.1.0.0.2.0.0.0	hunt-01	15-16
# ::node	0.0.1.0.0.2.0.0.0.0	accident	16-17
# ::node	0.0.1.0.1	and	32-33
# ::node	0.0.1.1	every	17-18
# ::root	0	say-01
# ::edge	accident	mod	hunt-01	0.0.1.0.0.2.0.0.0.0	0.0.1.0.0.2.0.0.0	
# ::edge	acquire-01	ARG0	many	0.0	0.0.0	
# ::edge	acquire-01	ARG1	time	0.0	0.0.1	
# ::edge	and	op1	fall-01	0.0.1.0.1	0.0.1.0	
# ::edge	buy-01	ARG0	he	0.0.1.0.0.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	buy-01	ARG0	he	0.0.1.0.0.1	0.0.1.0.0	
# ::edge	buy-01	ARG1	piece	0.0.1.0.0.1	0.0.1.0.0.1.0	
# ::edge	end-01	ARG0	he	0.0.1.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	fall-01	ARG0	he	0.0.1.0	0.0.1.0.0	
# ::edge	fall-01	ARG1	time	0.0.1.0	0.0.1	
# ::edge	honest	op1	buy-01	0.0.1.0.0.1.1	0.0.1.0.0.1	
# ::edge	horse	poss	he	0.0.1.0.0.2	0.0.1.0.0	
# ::edge	hunt-01	ARG1	hunt-01	0.0.1.0.0.2.0.0	0.0.1.0.0.2.0.0.0	
# ::edge	off	op1	hunt-01	0.0.1.0.0.2.0	0.0.1.0.0.2.0.0	
# ::edge	off	path	horse	0.0.1.0.0.2.0	0.0.1.0.0.2	
# ::edge	piece	mod	ground	0.0.1.0.0.1.0	0.0.1.0.0.1.0.0	
# ::edge	recover-02	ARG0	he	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	recover-02	ARG1	end-01	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	say-01	ARG1	acquire-01	0	0.0	
# ::edge	time	mod	every	0.0.1	0.0.1.1	
(s / say-01 
      :ARG1 (a3 / acquire-01 
            :ARG0 (m / many) 
            :ARG1 (t / time 
                  :ARG1-of (f / fall-01 
                        :ARG0 (h4 / he 
                              :ARG0-of (r / recover-02 
                                    :ARG1 (e / end-01 
                                          :ARG0 (h / he 
                                                :ARG0-of (b / buy-01)))) 
                              :ARG0-of (b2 / buy-01 
                                    :ARG1 (p / piece 
                                          :mod (g / ground)) 
                                    :op-of (h6 / honest)) 
                              :poss-of (h3 / horse 
                                    :path-of (o / off 
                                          :op1 (h2 / hunt-01 
                                                :ARG1 (h5 / hunt-01 
                                                      :mod-of (a2 / accident)))))) 
                        :op-of (a / and)) 
                  :mod (e2 / every))))

# ::snt the house of lords of course remains a bizarre anachronism one of the few places in the civilized world where an accident of birth confers the right to be part of the legislature
# ::tok the house of lords of course remains a bizarre anachronism one of the few places in the civilized world where an accident of birth confers the right to be part of the legislature
# ::alignments 32-33|0.0.0.0.0 23-24|0.0.0 21-22|0.0.0.0 18-19|0.0.0.0.0.1.0 17-18|0.0.0.0.0.1 14-15|0.1 13-14|0.1.0 8-9|0.0.0.0.0.0 6-7|0 3-4|0.0.1 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:11.178
# ::node	0	remain-01	6-7
# ::node	0.0	house	1-2
# ::node	0.0.0	birth-01	23-24
# ::node	0.0.0.0	accident	21-22
# ::node	0.0.0.0.0	legislate-01	32-33
# ::node	0.0.0.0.0.0	bizarre	8-9
# ::node	0.0.0.0.0.1	civilize-01	17-18
# ::node	0.0.0.0.0.1.0	world	18-19
# ::node	0.0.1	lord	3-4
# ::node	0.1	place	14-15
# ::node	0.1.0	few	13-14
# ::root	0	remain-01
# ::edge	accident	topic	birth-01	0.0.0.0	0.0.0	
# ::edge	birth-01	ARG1	house	0.0.0	0.0	
# ::edge	civilize-01	ARG1	world	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	legislate-01	ARG0	bizarre	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	legislate-01	ARG1	accident	0.0.0.0.0	0.0.0.0	
# ::edge	legislate-01	ARG2	civilize-01	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	lord	consist	house	0.0.1	0.0	
# ::edge	place	quant	few	0.1	0.1.0	
# ::edge	remain-01	ARG1	house	0	0.0	
# ::edge	remain-01	ARG2	place	0	0.1	
(r / remain-01 
      :ARG1 (h / house 
            :ARG1-of (b / birth-01 
                  :topic-of (a / accident 
                        :ARG1-of (l / legislate-01 
                              :ARG0 (b2 / bizarre) 
                              :ARG2 (c / civilize-01 
                                    :ARG1 (w / world))))) 
            :consist-of (l2 / lord)) 
      :ARG2 (p / place 
            :quant (f / few)))

# ::snt some people fight shy of taking out a personal loan because they are worried about meeting the monthly repayments if they are unable to work because of sickness accident or unemployment
# ::tok some people fight shy of taking out a personal loan because they are worried about meeting the monthly repayments if they are unable to work because of sickness accident or unemployment
# ::alignments 30-31|0.0.1.0.1+0.0.1.0 29-30|0.0.1 28-29|0.0 27-28|0.0.0 25-26|0 20-21|0.1.1.0.0 17-18|0.0.1.0.0.0+0.0.1.0.0 15-16|0.1.1.0.1 13-14|0.1.1.0 11-12|0.1.1.0.1.0 10-11|0.1.1 9-10|0.1.1.0.1.1 8-9|0.1.1.0.1.1.1 3-4|0.1.0 2-3|0.1 0-1|0.1.1.0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:11.614
# ::node	0	cause-01	25-26
# ::node	0.0	accident	28-29
# ::node	0.0.0	sickness	27-28
# ::node	0.0.1	or	29-30
# ::node	0.0.1.0	employ-01	30-31
# ::node	0.0.1.0.0	temporal-quantity	17-18
# ::node	0.0.1.0.0.0	month	17-18
# ::node	0.0.1.0.1	-	30-31
# ::node	0.1	fight-01	2-3
# ::node	0.1.0	shy-01	3-4
# ::node	0.1.1	cause-01	10-11
# ::node	0.1.1.0	worry-02	13-14
# ::node	0.1.1.0.0	they	20-21
# ::node	0.1.1.0.1	meet-03	15-16
# ::node	0.1.1.0.1.0	they	11-12
# ::node	0.1.1.0.1.1	loan-01	9-10
# ::node	0.1.1.0.1.1.0	some	0-1
# ::node	0.1.1.0.1.1.1	personal	8-9
# ::root	0	cause-01
# ::edge	accident	location	sickness	0.0	0.0.0	
# ::edge	cause-01	ARG0	accident	0	0.0	
# ::edge	cause-01	ARG0	worry-02	0.1.1	0.1.1.0	
# ::edge	cause-01	ARG1	fight-01	0	0.1	
# ::edge	cause-01	ARG1	fight-01	0.1.1	0.1	
# ::edge	employ-01	ARG1	temporal-quantity	0.0.1.0	0.0.1.0.0	
# ::edge	employ-01	polarity	-	0.0.1.0	0.0.1.0.1	
# ::edge	fight-01	ARG1	shy-01	0.1	0.1.0	
# ::edge	loan-01	ARG1	some	0.1.1.0.1.1	0.1.1.0.1.1.0	
# ::edge	loan-01	mod	personal	0.1.1.0.1.1	0.1.1.0.1.1.1	
# ::edge	meet-03	ARG0	they	0.1.1.0.1	0.1.1.0.1.0	
# ::edge	meet-03	ARG1	loan-01	0.1.1.0.1	0.1.1.0.1.1	
# ::edge	or	op1	accident	0.0.1	0.0	
# ::edge	or	op2	employ-01	0.0.1	0.0.1.0	
# ::edge	temporal-quantity	unit	month	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	worry-02	ARG1	they	0.1.1.0	0.1.1.0.0	
# ::edge	worry-02	ARG2	meet-03	0.1.1.0	0.1.1.0.1	
(c / cause-01 
      :ARG0 (a / accident 
            :location (s / sickness) 
            :op-of (o / or 
                  :op1 (e / employ-01 
                        :ARG1 (t2 / temporal-quantity 
                              :unit (m / month)) 
                        :polarity -))) 
      :ARG1 (f / fight-01 
            :ARG1 (s2 / shy-01) 
            :ARG1-of (c2 / cause-01 
                  :ARG0 (w / worry-02 
                        :ARG1 (t / they) 
                        :ARG2 (m2 / meet-03 
                              :ARG0 (t3 / they) 
                              :ARG1 (l / loan-01 
                                    :ARG1 (s3 / some) 
                                    :mod (p / personal)))))))

# ::snt drivers will have to switch car lights on earlier and keep them on longer from today to reduce the risk of accidents to pedestrians and other vehicles the department of transport announced
# ::tok drivers will have to switch car lights on earlier and keep them on longer from today to reduce the risk of accidents to pedestrians and other vehicles the department of transport announced
# ::alignments 31-32|0 30-31|0.1 28-29|0.0 26-27|0.2.1 25-26|0.2.1.0 24-25|0.2 21-22|0.2.0.1 19-20|0.2.0 17-18|0.2.0.2 15-16|0.2.0.2.0 13-14|0.2.0.2.0.0 9-10|0.2.0.0.1.1 8-9|0.2.0.0.1.2 6-7|0.2.0.0.1.0 5-6|0.1.0 4-5|0.2.0.0.1 0-1|0.2.0.0.0+0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:11.775
# ::node	0	announce-01	31-32
# ::node	0.0	department	28-29
# ::node	0.1	transport-01	30-31
# ::node	0.1.0	car	5-6
# ::node	0.2	and	24-25
# ::node	0.2.0	risk-01	19-20
# ::node	0.2.0.0	person	0-1
# ::node	0.2.0.0.0	drive-01	0-1
# ::node	0.2.0.0.1	switch-01	4-5
# ::node	0.2.0.0.1.0	light	6-7
# ::node	0.2.0.0.1.1	and	9-10
# ::node	0.2.0.0.1.2	early	8-9
# ::node	0.2.0.1	accident	21-22
# ::node	0.2.0.2	reduce-01	17-18
# ::node	0.2.0.2.0	today	15-16
# ::node	0.2.0.2.0.0	long	13-14
# ::node	0.2.1	vehicle	26-27
# ::node	0.2.1.0	other	25-26
# ::root	0	announce-01
# ::edge	and	op1	risk-01	0.2	0.2.0	
# ::edge	and	op1	switch-01	0.2.0.0.1.1	0.2.0.0.1	
# ::edge	and	op2	vehicle	0.2	0.2.1	
# ::edge	and	op3	announce-01	0.2	0	
# ::edge	announce-01	ARG0	department	0	0.0	
# ::edge	announce-01	ARG1	transport-01	0	0.1	
# ::edge	drive-01	ARG0	person	0.2.0.0.0	0.2.0.0	
# ::edge	long	location	today	0.2.0.2.0.0	0.2.0.2.0	
# ::edge	reduce-01	ARG0	today	0.2.0.2	0.2.0.2.0	
# ::edge	reduce-01	ARG1	risk-01	0.2.0.2	0.2.0	
# ::edge	risk-01	ARG0	person	0.2.0	0.2.0.0	
# ::edge	risk-01	ARG1	accident	0.2.0	0.2.0.1	
# ::edge	switch-01	ARG0	person	0.2.0.0.1	0.2.0.0	
# ::edge	switch-01	ARG1	light	0.2.0.0.1	0.2.0.0.1.0	
# ::edge	switch-01	time	early	0.2.0.0.1	0.2.0.0.1.2	
# ::edge	transport-01	ARG1	car	0.1	0.1.0	
# ::edge	vehicle	mod	other	0.2.1	0.2.1.0	
(a / announce-01 
      :ARG0 (d / department) 
      :ARG1 (t / transport-01 
            :ARG1 (c / car)) 
      :op-of (a2 / and 
            :op1 (r / risk-01 
                  :ARG0 (p / person 
                        :ARG0-of (d2 / drive-01) 
                        :ARG0-of (s / switch-01 
                              :ARG1 (l2 / light) 
                              :op-of (a4 / and) 
                              :time (e / early))) 
                  :ARG1 (a3 / accident) 
                  :ARG1-of (r2 / reduce-01 
                        :ARG0 (t2 / today 
                              :location-of (l / long)))) 
            :op2 (v / vehicle 
                  :mod (o / other))))

# ::snt she was late getting back to her lodgings and was involved in an accident with a vauxhall nova as she crossed banbury road at the junction with marston ferry road and moreton road
# ::tok she was late getting back to her lodgings and was involved in an accident with a vauxhall nova as she crossed banbury road at the junction with marston ferry road and moreton road
# ::alignments 32-33|0.0.0.1 30-31|0.0.0 29-30|0.0 28-29|0 22-23|0.0.0.0.1 20-21|0.0.0.0 19-20|0.0.0.0.0 13-14|0.0.0.0.2.0.2 10-11|0.0.0.0.2.0 8-9|0.0.0.0.2 4-5|0.0.0.0.2.0.1 2-3|0.1 0-1|0.0.0.0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:12.063
# ::node	0	ferry-01	28-29
# ::node	0.0	road	29-30
# ::node	0.0.0	and	30-31
# ::node	0.0.0.0	cross-00	20-21
# ::node	0.0.0.0.0	she	19-20
# ::node	0.0.0.0.1	road	22-23
# ::node	0.0.0.0.2	and	8-9
# ::node	0.0.0.0.2.0	involve-01	10-11
# ::node	0.0.0.0.2.0.0	she	0-1
# ::node	0.0.0.0.2.0.1	back	4-5
# ::node	0.0.0.0.2.0.2	accident	13-14
# ::node	0.0.0.1	road	32-33
# ::node	0.1	late	2-3
# ::root	0	ferry-01
# ::edge	and	op1	cross-00	0.0.0	0.0.0.0	
# ::edge	and	op1	involve-01	0.0.0.0.2	0.0.0.0.2.0	
# ::edge	and	op2	cross-00	0.0.0.0.2	0.0.0.0	
# ::edge	and	op2	road	0.0.0	0.0	
# ::edge	and	op3	road	0.0.0	0.0.0.1	
# ::edge	cross-00	ARG0	she	0.0.0.0	0.0.0.0.0	
# ::edge	cross-00	ARG1	road	0.0.0.0	0.0.0.0.1	
# ::edge	ferry-01	ARG0	road	0	0.0	
# ::edge	ferry-01	ARG1	late	0	0.1	
# ::edge	involve-01	ARG0	she	0.0.0.0.2.0	0.0.0.0.2.0.0	
# ::edge	involve-01	ARG1	back	0.0.0.0.2.0	0.0.0.0.2.0.1	
# ::edge	involve-01	ARG2	accident	0.0.0.0.2.0	0.0.0.0.2.0.2	
(f / ferry-01 
      :ARG0 (r2 / road 
            :op-of (a / and 
                  :op1 (c / cross-00 
                        :ARG0 (s / she) 
                        :ARG1 (r3 / road) 
                        :op-of (a3 / and 
                              :op1 (i / involve-01 
                                    :ARG0 (s2 / she) 
                                    :ARG1 (b / back) 
                                    :ARG2 (a2 / accident)))) 
                  :op2 (r / road))) 
      :ARG1 (l / late))

# ::snt when he inspected the platform after the accident he discovered seven boards were missing, however noone had noticed these boards missing before the accident
# ::tok when he inspected the platform after the accident he discovered seven boards were missing , however noone had noticed these boards missing before the accident
# ::alignments 24-25|0.0.1.0.1.0 22-23|0.0.1.0.1 21-22|0.0.1.0 18-19|0.0.1.0.0 13-14|0 10-11|0.0.1.0.0.0.0.0.0 9-10|0.0 8-9|0.0.0 7-8|0.0.1 5-6|0.0.1.0.0.0.0.1 4-5|0.0.1.0.0.0.0.0 2-3|0.0.1.0.0.0.0 1-2|0.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:12.258
# ::node	0	miss-01	13-14
# ::node	0.0	discover-01	9-10
# ::node	0.0.0	he	8-9
# ::node	0.0.1	accident	7-8
# ::node	0.0.1.0	miss-01	21-22
# ::node	0.0.1.0.0	notice-01	18-19
# ::node	0.0.1.0.0.0	he	1-2
# ::node	0.0.1.0.0.0.0	inspect-01	2-3
# ::node	0.0.1.0.0.0.0.0	platform	4-5
# ::node	0.0.1.0.0.0.0.0.0	7	10-11
# ::node	0.0.1.0.0.0.0.1	after	5-6
# ::node	0.0.1.0.1	before	22-23
# ::node	0.0.1.0.1.0	accident	24-25
# ::root	0	miss-01
# ::edge	before	op1	accident	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	discover-01	ARG0	he	0.0	0.0.0	
# ::edge	discover-01	ARG1	accident	0.0	0.0.1	
# ::edge	inspect-01	ARG0	he	0.0.1.0.0.0.0	0.0.1.0.0.0	
# ::edge	inspect-01	ARG1	platform	0.0.1.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	inspect-01	time	after	0.0.1.0.0.0.0	0.0.1.0.0.0.0.1	
# ::edge	miss-01	ARG0	accident	0.0.1.0	0.0.1	
# ::edge	miss-01	ARG1	discover-01	0	0.0	
# ::edge	miss-01	time	before	0.0.1.0	0.0.1.0.1	
# ::edge	notice-01	ARG0	he	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	notice-01	ARG1	miss-01	0.0.1.0.0	0.0.1.0	
# ::edge	platform	quant	7	0.0.1.0.0.0.0.0	0.0.1.0.0.0.0.0.0	
(m2 / miss-01 
      :ARG1 (d / discover-01 
            :ARG0 (h / he) 
            :ARG1 (a2 / accident 
                  :ARG0-of (m / miss-01 
                        :ARG1-of (n / notice-01 
                              :ARG0 (h2 / he 
                                    :ARG0-of (i / inspect-01 
                                          :ARG1 (p / platform 
                                                :quant 7) 
                                          :time (a3 / after)))) 
                        :time (b / before 
                              :op1 (a / accident))))))

# ::snt it was no accident that during his secretaryship uk local government developed and launched its international bureau
# ::tok it was no accident that during his secretaryship uk local government developed and launched its international bureau
# ::alignments 16-17|0.1.0 15-16|0.1.0.0 13-14|0.1 12-13|0 11-12|0.0 9-10|0.0.0.1 3-4|0.0.0.0 2-3|0.0.0.0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:12.321
# ::node	0	and	12-13
# ::node	0.0	develop-02	11-12
# ::node	0.0.0	it	0-1
# ::node	0.0.0.0	accident	3-4
# ::node	0.0.0.0.0	-	2-3
# ::node	0.0.0.1	local	9-10
# ::node	0.1	launch-01	13-14
# ::node	0.1.0	bureau	16-17
# ::node	0.1.0.0	international	15-16
# ::root	0	and
# ::edge	accident	domain	it	0.0.0.0	0.0.0	
# ::edge	accident	polarity	-	0.0.0.0	0.0.0.0.0	
# ::edge	and	op1	develop-02	0	0.0	
# ::edge	and	op2	launch-01	0	0.1	
# ::edge	bureau	mod	international	0.1.0	0.1.0.0	
# ::edge	develop-02	ARG1	it	0.0	0.0.0	
# ::edge	launch-01	ARG1	bureau	0.1	0.1.0	
# ::edge	local	poss	it	0.0.0.1	0.0.0	
(a / and 
      :op1 (d / develop-02 
            :ARG1 (i2 / it 
                  :domain-of (a2 / accident 
                        :polarity (- / -)) 
                  :poss-of (l2 / local))) 
      :op2 (l / launch-01 
            :ARG1 (b / bureau 
                  :mod (i / international))))

# ::snt   the sports and leisure accident plan offer two levels of cover for injury during leisure time dash
# ::tok the sports and leisure accident plan offer two levels of cover for injury during leisure time dash
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:12.322
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the magistrates heard that savory and moore ltd had twice failed to report accidents in which mrs jacqueline stuart who had not been trained how to lift heavy things properly hurt her back, savory and moore ltd pleaded guilty to two charges of failing to report accidents which resulted in mrs stuart being off work from its bicester branch in sheep street for more than three consecutive days
# ::tok the magistrates heard that savory and moore ltd had twice failed to report accidents in which mrs jacqueline stuart who had not been trained how to lift heavy things properly hurt her back , savory and moore ltd pleaded guilty to two charges of failing to report accidents which resulted in mrs stuart being off work from its bicester branch in sheep street for more than three consecutive days
# ::alignments 68-69|0.0.0.0.1.0.0.0.0.1+0.0.0.0.1.0.0.0.0 67-68|0.0.0.0.1.0.0.0.0.0 66-67|0.0.0.0.1.0.0.0 62-63|0.1.0.0 61-62|0.1.0 59-60|0.1.0.0.0 54-55|0.0.0.0.1.1 49-50|0.0.0.0.1 47-48|0.0.0.0.1.0 46-47|0.0.0.0.1.0.0.1 44-45|0.0.0.0.1.0.0 41-42|0.2.0 39-40|0.1 38-39|0 35-36|0.0 32-33|0.0.0 30-31|0.2 29-30|0.0.0.0.0.1 28-29|0.0.0.0 27-28|0.0.0.0.2 26-27|0.0.0.0.0 23-24|0.0.0.0.0.0 13-14|0.0.0.0.0.0.0.0.0 12-13|0.0.0.0.0.0.0.0.2 10-11|0.0.0.0.0.0.0.0 5-6|0.0.0.0.0.0.0 2-3|0.0.0.0.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:13.269
# ::node	0	plead-02	38-39
# ::node	0.0	and	35-36
# ::node	0.0.0	back	32-33
# ::node	0.0.0.0	thing	28-29
# ::node	0.0.0.0.0	lift-01	26-27
# ::node	0.0.0.0.0.0	train-01	23-24
# ::node	0.0.0.0.0.0.0	and	5-6
# ::node	0.0.0.0.0.0.0.0	fail-01	10-11
# ::node	0.0.0.0.0.0.0.0.0	accident	13-14
# ::node	0.0.0.0.0.0.0.0.1	hear-01	2-3
# ::node	0.0.0.0.0.0.0.0.2	report	12-13
# ::node	0.0.0.0.0.1	proper	29-30
# ::node	0.0.0.0.1	result-01	49-50
# ::node	0.0.0.0.1.0	accident	47-48
# ::node	0.0.0.0.1.0.0	fail-01	44-45
# ::node	0.0.0.0.1.0.0.0	3	66-67
# ::node	0.0.0.0.1.0.0.0.0	temporal-quantity	68-69
# ::node	0.0.0.0.1.0.0.0.0.0	consecutive	67-68
# ::node	0.0.0.0.1.0.0.0.0.1	day	68-69
# ::node	0.0.0.0.1.0.0.1	report	46-47
# ::node	0.0.0.0.1.1	off	54-55
# ::node	0.0.0.0.2	heavy	27-28
# ::node	0.1	guilty-41	39-40
# ::node	0.1.0	sheep	61-62
# ::node	0.1.0.0	street	62-63
# ::node	0.1.0.0.0	branch	59-60
# ::node	0.2	hurt-01	30-31
# ::node	0.2.0	2	41-42
# ::root	0	plead-02
# ::edge	and	op1	back	0.0	0.0.0	
# ::edge	and	op1	train-01	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	back	poss	thing	0.0.0	0.0.0.0	
# ::edge	consecutive	op1	temporal-quantity	0.0.0.0.1.0.0.0.0.0	0.0.0.0.1.0.0.0.0	
# ::edge	fail-01	ARG0	3	0.0.0.0.1.0.0	0.0.0.0.1.0.0.0	
# ::edge	fail-01	ARG0	and	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	fail-01	ARG1	accident	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0	
# ::edge	fail-01	ARG1	accident	0.0.0.0.1.0.0	0.0.0.0.1.0	
# ::edge	fail-01	ARG2	report	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.2	
# ::edge	fail-01	ARG2	report	0.0.0.0.1.0.0	0.0.0.0.1.0.0.1	
# ::edge	guilty-41	ARG1	sheep	0.1	0.1.0	
# ::edge	hear-01	ARG1	fail-01	0.0.0.0.0.0.0.0.1	0.0.0.0.0.0.0.0	
# ::edge	hurt-01	ARG0	2	0.2	0.2.0	
# ::edge	hurt-01	ARG1	plead-02	0.2	0	
# ::edge	lift-01	ARG1	thing	0.0.0.0.0	0.0.0.0	
# ::edge	lift-01	manner	proper	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	plead-02	ARG0	and	0	0.0	
# ::edge	plead-02	ARG1	guilty-41	0	0.1	
# ::edge	result-01	ARG1	accident	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	result-01	ARG2	thing	0.0.0.0.1	0.0.0.0	
# ::edge	result-01	time	off	0.0.0.0.1	0.0.0.0.1.1	
# ::edge	street	mod	sheep	0.1.0.0	0.1.0	
# ::edge	street	part	branch	0.1.0.0	0.1.0.0.0	
# ::edge	temporal-quantity	quant	3	0.0.0.0.1.0.0.0.0	0.0.0.0.1.0.0.0	
# ::edge	temporal-quantity	unit	day	0.0.0.0.1.0.0.0.0	0.0.0.0.1.0.0.0.0.1	
# ::edge	thing	mod	heavy	0.0.0.0	0.0.0.0.2	
# ::edge	train-01	ARG1	lift-01	0.0.0.0.0.0	0.0.0.0.0	
(p / plead-02 
      :ARG0 (a2 / and 
            :op1 (b2 / back 
                  :poss (t2 / thing 
                        :ARG1-of (l / lift-01 
                              :ARG1-of (t3 / train-01 
                                    :op-of (a4 / and 
                                          :ARG0-of (f2 / fail-01 
                                                :ARG1 (a3 / accident) 
                                                :ARG1-of (h3 / hear-01) 
                                                :ARG2 (r3 / report)))) 
                              :manner (p2 / proper)) 
                        :ARG2-of (r / result-01 
                              :ARG1 (a / accident 
                                    :ARG1-of (f / fail-01 
                                          :ARG0 (3 / 3 
                                                :quant-of (t / temporal-quantity 
                                                      :op-of (c / consecutive) 
                                                      :unit (d / day))) 
                                          :ARG2 (r2 / report))) 
                              :time (o / off)) 
                        :mod (h2 / heavy)))) 
      :ARG1 (g / guilty-41 
            :ARG1 (s2 / sheep 
                  :mod-of (s / street 
                        :part (b / branch)))) 
      :ARG1-of (h / hurt-01 
            :ARG0 2))

# ::snt as the millennium approaches what monuments will have been created for our epoch  it may be no accident that france and west germany perhaps the most successful of our european competitors invest heavily in the arts
# ::tok as the millennium approaches what monuments will have been created for our epoch it may be no accident that france and west germany perhaps the most successful of our european competitors invest heavily in the arts
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:13.271
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt her father had lost his life in a hunting accident in 1948 and after returning from australia in 1954 judy shared the family house with her stepmother for three years until in 1957 she went with lady haipes the wife of the governorgeneral of the newly formed federation of the west indies in the same position as she had occupied with the slims
# ::tok her father had lost his life in a hunting accident in 1948 and after returning from australia in 1954 judy shared the family house with her stepmother for three years until in 1957 she went with lady haipes the wife of the governorgeneral of the newly formed federation of the west indies in the same position as she had occupied with the slims
# ::alignments 59-60|0.0 57-58|0.0.0 55-56|0.0.1 54-55|0.0.1.0 50-51|0.0.2.3.0.1.0.0 46-47|0 39-40|0.0.2.3.0.1.0.1+0.0.2.3.0.1.0 36-37|0.0.2.0 33-34|0.0.2.3.0.1 32-33|0.0.1.0.0.0+0.0.1.0.0 30-31|0.0.2.3.0.2 29-30|0.0.2.3.0.0.1.1+0.0.2.3.0.0.1 28-29|0.0.2.3.0.0.1.0 23-24|0.0.2.3.0.0 22-23|0.0.2.3.0.0.0 20-21|0.0.2.3.0 18-19|0.0.2.3.1+0.0.2.3 16-17|0.0.2.1.0.0+0.0.2.1.0+0.0.2.1 14-15|0.0.2 13-14|0.0.2.2 12-13|0.0.2.2.0 11-12|0.0.2.2.0.0.1.1+0.0.2.2.0.0.1 9-10|0.0.2.2.0.0.1.0 8-9|0.0.2.2.0.0.1.0.0 5-6|0.0.2.2.0.0.0 3-4|0.0.2.2.0.0 1-2|0.0.2.2.0.0.0.0+0.0.2.2.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:14.919
# ::node	0	form-01	46-47
# ::node	0.0	occupy-01	59-60
# ::node	0.0.0	she	57-58
# ::node	0.0.1	position	55-56
# ::node	0.0.1.0	same-41	54-55
# ::node	0.0.1.0.0	date-entity	32-33
# ::node	0.0.1.0.0.0	1957	32-33
# ::node	0.0.2	return-01	14-15
# ::node	0.0.2.0	lady	36-37
# ::node	0.0.2.1	country	16-17
# ::node	0.0.2.1.0	name	16-17
# ::node	0.0.2.1.0.0	"Australia"	16-17
# ::node	0.0.2.2	after	13-14
# ::node	0.0.2.2.0	and	12-13
# ::node	0.0.2.2.0.0	lose-02	3-4
# ::node	0.0.2.2.0.0.0	life	5-6
# ::node	0.0.2.2.0.0.0.0	father	1-2
# ::node	0.0.2.2.0.0.0.0.0	have-rel-role-91	1-2
# ::node	0.0.2.2.0.0.1	date-entity	11-12
# ::node	0.0.2.2.0.0.1.0	accident	9-10
# ::node	0.0.2.2.0.0.1.0.0	hunt-01	8-9
# ::node	0.0.2.2.0.0.1.1	1948	11-12
# ::node	0.0.2.3	date-entity	18-19
# ::node	0.0.2.3.0	share-01	20-21
# ::node	0.0.2.3.0.0	house	23-24
# ::node	0.0.2.3.0.0.0	family	22-23
# ::node	0.0.2.3.0.0.1	temporal-quantity	29-30
# ::node	0.0.2.3.0.0.1.0	3	28-29
# ::node	0.0.2.3.0.0.1.1	year	29-30
# ::node	0.0.2.3.0.1	she	33-34
# ::node	0.0.2.3.0.1.0	have-rel-role-91	39-40
# ::node	0.0.2.3.0.1.0.0	west	50-51
# ::node	0.0.2.3.0.1.0.1	wife	39-40
# ::node	0.0.2.3.0.2	until	30-31
# ::node	0.0.2.3.1	1954	18-19
# ::root	0	form-01
# ::edge	accident	location	hunt-01	0.0.2.2.0.0.1.0	0.0.2.2.0.0.1.0.0	
# ::edge	accident	time	date-entity	0.0.2.2.0.0.1.0	0.0.2.2.0.0.1	
# ::edge	after	op1	return-01	0.0.2.2	0.0.2	
# ::edge	and	op1	after	0.0.2.2.0	0.0.2.2	
# ::edge	country	name	name	0.0.2.1	0.0.2.1.0	
# ::edge	date-entity	year	1948	0.0.2.2.0.0.1	0.0.2.2.0.0.1.1	
# ::edge	date-entity	year	1954	0.0.2.3	0.0.2.3.1	
# ::edge	date-entity	year	1957	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	form-01	ARG1	occupy-01	0	0.0	
# ::edge	have-rel-role-91	ARG0	west	0.0.2.3.0.1.0	0.0.2.3.0.1.0.0	
# ::edge	have-rel-role-91	ARG1	she	0.0.2.3.0.1.0	0.0.2.3.0.1	
# ::edge	have-rel-role-91	ARG2	father	0.0.2.2.0.0.0.0.0	0.0.2.2.0.0.0.0	
# ::edge	have-rel-role-91	ARG2	wife	0.0.2.3.0.1.0	0.0.2.3.0.1.0.1	
# ::edge	house	location	family	0.0.2.3.0.0	0.0.2.3.0.0.0	
# ::edge	house	mod	temporal-quantity	0.0.2.3.0.0	0.0.2.3.0.0.1	
# ::edge	life	poss	father	0.0.2.2.0.0.0	0.0.2.2.0.0.0.0	
# ::edge	lose-02	ARG0	and	0.0.2.2.0.0	0.0.2.2.0	
# ::edge	lose-02	ARG1	life	0.0.2.2.0.0	0.0.2.2.0.0.0	
# ::edge	lose-02	time	date-entity	0.0.2.2.0.0	0.0.2.2.0.0.1	
# ::edge	name	op1	"Australia"	0.0.2.1.0	0.0.2.1.0.0	
# ::edge	occupy-01	ARG0	she	0.0	0.0.0	
# ::edge	occupy-01	ARG1	position	0.0	0.0.1	
# ::edge	return-01	ARG0	lady	0.0.2	0.0.2.0	
# ::edge	return-01	ARG1	country	0.0.2	0.0.2.1	
# ::edge	return-01	time	date-entity	0.0.2	0.0.2.3	
# ::edge	return-01	time	occupy-01	0.0.2	0.0	
# ::edge	same-41	ARG0	date-entity	0.0.1.0	0.0.1.0.0	
# ::edge	same-41	ARG1	position	0.0.1.0	0.0.1	
# ::edge	share-01	ARG1	house	0.0.2.3.0	0.0.2.3.0.0	
# ::edge	share-01	ARG2	she	0.0.2.3.0	0.0.2.3.0.1	
# ::edge	share-01	time	date-entity	0.0.2.3.0	0.0.2.3	
# ::edge	share-01	time	until	0.0.2.3.0	0.0.2.3.0.2	
# ::edge	temporal-quantity	quant	3	0.0.2.3.0.0.1	0.0.2.3.0.0.1.0	
# ::edge	temporal-quantity	unit	year	0.0.2.3.0.0.1	0.0.2.3.0.0.1.1	
(f / form-01 
      :ARG1 (o / occupy-01 
            :ARG0 (s / she) 
            :ARG1 (p / position 
                  :ARG1-of (s2 / same-41 
                        :ARG0 (d / date-entity 
                              :year 1957))) 
            :time-of (r / return-01 
                  :ARG0 (l / lady) 
                  :ARG1 (c / country 
                        :name (n / name 
                              :op1 "Australia")) 
                  :op-of (a / after 
                        :op-of (a2 / and 
                              :ARG0-of (l3 / lose-02 
                                    :ARG1 (l2 / life 
                                          :poss (f3 / father 
                                                :ARG2-of (h4 / have-rel-role-91))) 
                                    :time (d3 / date-entity 
                                          :time-of (a3 / accident 
                                                :location (h3 / hunt-01)) 
                                          :year 1948)))) 
                  :time (d2 / date-entity 
                        :time-of (s4 / share-01 
                              :ARG1 (h2 / house 
                                    :location (f2 / family) 
                                    :mod (t / temporal-quantity 
                                          :quant 3 
                                          :unit (y / year))) 
                              :ARG2 (s3 / she 
                                    :ARG1-of (h / have-rel-role-91 
                                          :ARG0 (w / west) 
                                          :ARG2 (w2 / wife))) 
                              :time (u / until)) 
                        :year 1954))))

# ::snt indeed plaintiffs and defendants legal costs are not far apart at least in routine cases traffic accidents plaintiff attorneys would be earning no more if paid at the hourly rate charged by their adversaries
# ::tok indeed plaintiffs and defendants legal costs are not far apart at least in routine cases traffic accidents plaintiff attorneys would be earning no more if paid at the hourly rate charged by their adversaries
# ::alignments 30-31|0 29-30|0.1 28-29|0.1.1 25-26|0.1.0 22-23|0.1.0.0 21-22|0.1.0.1 18-19|0.1.0.1.0 16-17|0.1.0.1.2.1.0 15-16|0.1.0.1.2.1 14-15|0.1.0.1.2 13-14|0.1.0.1.2.0 9-10|0.0 8-9|0.0.0 5-6|0.1.0.1.1.0 4-5|0.1.0.1.1.0.0 3-4|0.1.0.1.1.2 2-3|0.1.0.1.1 0-1|0.1.0.1.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:15.514
# ::node	0	charge-05	30-31
# ::node	0.0	apart	9-10
# ::node	0.0.0	far	8-9
# ::node	0.1	rate	29-30
# ::node	0.1.0	pay-01	25-26
# ::node	0.1.0.0	-	22-23
# ::node	0.1.0.1	earn-01	21-22
# ::node	0.1.0.1.0	attorney	18-19
# ::node	0.1.0.1.1	and	2-3
# ::node	0.1.0.1.1.0	cost-01	5-6
# ::node	0.1.0.1.1.0.0	legal	4-5
# ::node	0.1.0.1.1.1	indeed	0-1
# ::node	0.1.0.1.1.2	defendant	3-4
# ::node	0.1.0.1.2	case	14-15
# ::node	0.1.0.1.2.0	routine	13-14
# ::node	0.1.0.1.2.1	traffic	15-16
# ::node	0.1.0.1.2.1.0	accident	16-17
# ::node	0.1.1	hour	28-29
# ::root	0	charge-05
# ::edge	accident	mod	traffic	0.1.0.1.2.1.0	0.1.0.1.2.1	
# ::edge	and	mod	indeed	0.1.0.1.1	0.1.0.1.1.1	
# ::edge	and	op1	defendant	0.1.0.1.1	0.1.0.1.1.2	
# ::edge	apart	mod	far	0.0	0.0.0	
# ::edge	case	mod	routine	0.1.0.1.2	0.1.0.1.2.0	
# ::edge	charge-05	ARG0	apart	0	0.0	
# ::edge	charge-05	ARG1	rate	0	0.1	
# ::edge	cost-01	ARG1	and	0.1.0.1.1.0	0.1.0.1.1	
# ::edge	cost-01	mod	legal	0.1.0.1.1.0	0.1.0.1.1.0.0	
# ::edge	earn-01	ARG0	attorney	0.1.0.1	0.1.0.1.0	
# ::edge	earn-01	ARG1	and	0.1.0.1	0.1.0.1.1	
# ::edge	earn-01	time	case	0.1.0.1	0.1.0.1.2	
# ::edge	earn-01	time	pay-01	0.1.0.1	0.1.0	
# ::edge	pay-01	ARG1	-	0.1.0	0.1.0.0	
# ::edge	pay-01	ARG3	rate	0.1.0	0.1	
# ::edge	rate	mod	hour	0.1	0.1.1	
# ::edge	traffic	mod	case	0.1.0.1.2.1	0.1.0.1.2	
(c / charge-05 
      :ARG0 (a3 / apart 
            :mod (f / far)) 
      :ARG1 (r / rate 
            :ARG3-of (p / pay-01 
                  :ARG1 (- / -) 
                  :time-of (e / earn-01 
                        :ARG0 (a / attorney) 
                        :ARG1 (a4 / and 
                              :ARG1-of (c3 / cost-01 
                                    :mod (l / legal)) 
                              :mod (i / indeed) 
                              :op1 (d / defendant)) 
                        :time (c2 / case 
                              :mod (r2 / routine) 
                              :mod-of (t / traffic 
                                    :mod-of (a2 / accident))))) 
            :mod (h / hour)))

# ::snt the cessna 310 used by flyer magazine was written off in an accident on landing in december
# ::tok the cessna 310 used by flyer magazine was written off in an accident on landing in december
# ::alignments 16-17|0.1.0.1.1+0.1.0.1 14-15|0.1.0.1.0 12-13|0.1 9-10|0.0 8-9|0 6-7|0.1.0.0 3-4|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:15.551
# ::node	0	write-01	8-9
# ::node	0.0	off	9-10
# ::node	0.1	accident	12-13
# ::node	0.1.0	use-01	3-4
# ::node	0.1.0.0	magazine	6-7
# ::node	0.1.0.1	date-entity	16-17
# ::node	0.1.0.1.0	land-01	14-15
# ::node	0.1.0.1.1	12	16-17
# ::root	0	write-01
# ::edge	date-entity	month	12	0.1.0.1	0.1.0.1.1	
# ::edge	land-01	ARG1	date-entity	0.1.0.1.0	0.1.0.1	
# ::edge	use-01	ARG2	magazine	0.1.0	0.1.0.0	
# ::edge	use-01	location	accident	0.1.0	0.1	
# ::edge	use-01	location	date-entity	0.1.0	0.1.0.1	
# ::edge	write-01	direction	off	0	0.0	
# ::edge	write-01	medium	accident	0	0.1	
(w / write-01 
      :direction (o / off) 
      :medium (a / accident 
            :location-of (u / use-01 
                  :ARG2 (m / magazine) 
                  :location (d / date-entity 
                        :ARG1-of (l / land-01) 
                        :month 12))))

# ::snt osric will miss next weeks waterford crystal champion hurdle at the cheltenham festival following a freak accident on the way to exercise in newmarket
# ::tok osric will miss next weeks waterford crystal champion hurdle at the cheltenham festival following a freak accident on the way to exercise in newmarket
# ::alignments 21-22|0.0.0.0 19-20|0.0.0 16-17|0.0 15-16|0 12-13|0.0.0.0.0 7-8|0.0.0.0.1 6-7|0.0.0.0.1.0 4-5|0.0.0.0.2.0+0.0.0.0.2 3-4|0.0.0.0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:15.634
# ::node	0	freak-01	15-16
# ::node	0.0	accident	16-17
# ::node	0.0.0	way	19-20
# ::node	0.0.0.0	exercise-02	21-22
# ::node	0.0.0.0.0	festival	12-13
# ::node	0.0.0.0.1	champion	7-8
# ::node	0.0.0.0.1.0	crystal	6-7
# ::node	0.0.0.0.2	temporal-quantity	4-5
# ::node	0.0.0.0.2.0	week	4-5
# ::node	0.0.0.0.2.0.0	next	3-4
# ::root	0	freak-01
(f / freak-01 
      :location-of (a / accident 
            :location (w / way 
                  :manner-of (e / exercise-02 
                        :ARG0 (f2 / festival) 
                        :ARG1 (c / champion 
                              :mod (c2 / crystal)) 
                        :op-of (t / temporal-quantity 
                              :unit (w2 / week 
                                    :mod (n / next)))))))

# ::snt the accident on aonach mor near fort william left 28 dinner guests and 10 staff stranded for the night in the centres snowgoose restaurant 2350 feet above sea level
# ::tok the accident on aonach mor near fort william left 28 dinner guests and 10 staff stranded for the night in the centres snowgoose restaurant 2350 feet above sea level
# ::alignments 28-29|0.0.0.0.1 27-28|0.0.0.0.1.0 26-27|0.0.0.0.3 25-26|0.0.0.0.2 24-25|0.0.0.0.2.0.0+0.0.0.0.2.0 23-24|0.0 21-22|0 18-19|0.0.0 15-16|0.0.0.0 14-15|0.0.0.0.0.0+0.0.0.0.0 13-14|0.0.0.0.5 12-13|0.0.0.0.4 11-12|0.0.0.0.4.0 10-11|0.0.0.0.4.0.0 9-10|0.0.0.0.4.1 5-6|0.0.0.0.3.0 1-2|0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:15.908
# ::node	0	centre	21-22
# ::node	0.0	restaurant	23-24
# ::node	0.0.0	night	18-19
# ::node	0.0.0.0	strand-01	15-16
# ::node	0.0.0.0.0	person	14-15
# ::node	0.0.0.0.0.0	staff-01	14-15
# ::node	0.0.0.0.0.0.0	accident	1-2
# ::node	0.0.0.0.1	level	28-29
# ::node	0.0.0.0.1.0	sea	27-28
# ::node	0.0.0.0.2	foot	25-26
# ::node	0.0.0.0.2.0	date-entity	24-25
# ::node	0.0.0.0.2.0.0	2350	24-25
# ::node	0.0.0.0.3	above	26-27
# ::node	0.0.0.0.3.0	near	5-6
# ::node	0.0.0.0.4	and	12-13
# ::node	0.0.0.0.4.0	guest	11-12
# ::node	0.0.0.0.4.0.0	dinner	10-11
# ::node	0.0.0.0.4.1	28	9-10
# ::node	0.0.0.0.5	10	13-14
# ::root	0	centre
(c / centre 
      :mod-of (r / restaurant 
            :prep-with-of (n / night 
                  :time-of (s2 / strand-01 
                        :ARG0 (p / person 
                              :ARG2-of (s3 / staff-01 
                                    :ARG1 (a3 / accident))) 
                        :ARG1 (l / level 
                              :mod (s / sea)) 
                        :ARG2 (f / foot 
                              :time (d / date-entity 
                                    :year 2350)) 
                        :location (a / above 
                              :poss (n2 / near)) 
                        :op-of (a2 / and 
                              :op1 (g / guest 
                                    :mod (d2 / dinner)) 
                              :quant 28) 
                        :quant 10))))

# ::snt this is the safest position after an accident as it prevents your childs tongue falling back and obstructing his airway and avoids the risk of choking if he vomits
# ::tok this is the safest position after an accident as it prevents your childs tongue falling back and obstructing his airway and avoids the risk of choking if he vomits
# ::alignments 27-28|0.1.0.0.1 23-24|0.1.0.0 20-21|0.1.0 17-18|0.1 16-17|0 15-16|0.0.2 14-15|0.0 13-14|0.0.0 9-10|0.0.1 7-8|0.1.0.0.0.0.0 5-6|0.1.0.0.0.0.0.0 4-5|0.1.0.0.0.0 0-1|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:16.054
# ::node	0	and	16-17
# ::node	0.0	fall-01	14-15
# ::node	0.0.0	tongue	13-14
# ::node	0.0.1	it	9-10
# ::node	0.0.2	back	15-16
# ::node	0.1	obstruct-01	17-18
# ::node	0.1.0	and	20-21
# ::node	0.1.0.0	risk-01	23-24
# ::node	0.1.0.0.0	this	0-1
# ::node	0.1.0.0.0.0	position	4-5
# ::node	0.1.0.0.0.0.0	accident	7-8
# ::node	0.1.0.0.0.0.0.0	after	5-6
# ::node	0.1.0.0.1	he	27-28
# ::root	0	and
# ::edge	after	op1	accident	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	and	op1	fall-01	0	0.0	
# ::edge	and	op1	obstruct-01	0.1.0	0.1	
# ::edge	and	op2	obstruct-01	0	0.1	
# ::edge	and	op2	risk-01	0.1.0	0.1.0.0	
# ::edge	fall-01	ARG0	tongue	0.0	0.0.0	
# ::edge	fall-01	ARG1	it	0.0	0.0.1	
# ::edge	fall-01	direction	back	0.0	0.0.2	
# ::edge	position	domain	this	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	position	poss	accident	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	risk-01	ARG0	this	0.1.0.0	0.1.0.0.0	
# ::edge	risk-01	ARG1	he	0.1.0.0	0.1.0.0.1	
(a2 / and 
      :op1 (f / fall-01 
            :ARG0 (t / tongue) 
            :ARG1 (i / it) 
            :direction (b / back)) 
      :op2 (o / obstruct-01 
            :op-of (a / and 
                  :op1 (r / risk-01 
                        :ARG0 (t2 / this 
                              :domain-of (p / position 
                                    :poss (a3 / accident 
                                          :op-of (a4 / after)))) 
                        :ARG1 (h / he)))))

# ::snt there had been a drowning accident the year before and this husband was swanning about in italianstyle clothes getting sympathy off ladies for his tragedy leading a game life of it flying to london twice a week where it was rumoured he had a flat
# ::tok there had been a drowning accident the year before and this husband was swanning about in italianstyle clothes getting sympathy off ladies for his tragedy leading a game life of it flying to london twice a week where it was rumoured he had a flat
# ::alignments 44-45|0.2.3.2 41-42|0.3 38-39|0.1.0 36-37|0.2.2.1 33-34|0.2.2.0.0+0.2.2.0+0.2.2 31-32|0.2 30-31|0.2.1 28-29|0.2.3.1 27-28|0.2.3.1.0 25-26|0.2.3 24-25|0.2.0 21-22|0.2.0.0 20-21|0.2.3.3 19-20|0.2.3.0 17-18|0.2.3.0.0 11-12|0.1.1+0.1 10-11|0.1.1.0 9-10|0 8-9|0.0 7-8|0.0.0 5-6|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:16.995
# ::node	0	and	9-10
# ::node	0.0	before	8-9
# ::node	0.0.0	year	7-8
# ::node	0.0.1	accident	5-6
# ::node	0.1	have-rel-role-91	11-12
# ::node	0.1.0	it	38-39
# ::node	0.1.1	husband	11-12
# ::node	0.1.1.0	this	10-11
# ::node	0.2	fly-01	31-32
# ::node	0.2.0	tragedy	24-25
# ::node	0.2.0.0	lady	21-22
# ::node	0.2.1	it	30-31
# ::node	0.2.2	city	33-34
# ::node	0.2.2.0	name	33-34
# ::node	0.2.2.0.0	"London"	33-34
# ::node	0.2.2.1	week	36-37
# ::node	0.2.3	lead-01	25-26
# ::node	0.2.3.0	sympathy	19-20
# ::node	0.2.3.0.0	clothes	17-18
# ::node	0.2.3.1	life	28-29
# ::node	0.2.3.1.0	game	27-28
# ::node	0.2.3.2	flat	44-45
# ::node	0.2.3.3	off	20-21
# ::node	0.3	he	41-42
# ::root	0	and
# ::edge	accident	time	before	0.0.1	0.0	
# ::edge	and	op1	before	0	0.0	
# ::edge	and	op2	have-rel-role-91	0	0.1	
# ::edge	and	op3	fly-01	0	0.2	
# ::edge	and	op4	he	0	0.3	
# ::edge	city	name	name	0.2.2	0.2.2.0	
# ::edge	city	time	week	0.2.2	0.2.2.1	
# ::edge	flat	op1	lead-01	0.2.3.2	0.2.3	
# ::edge	fly-01	ARG0	tragedy	0.2	0.2.0	
# ::edge	fly-01	ARG1	it	0.2	0.2.1	
# ::edge	fly-01	ARG2	city	0.2	0.2.2	
# ::edge	have-rel-role-91	ARG1	it	0.1	0.1.0	
# ::edge	have-rel-role-91	ARG2	husband	0.1	0.1.1	
# ::edge	husband	mod	this	0.1.1	0.1.1.0	
# ::edge	lady	location	tragedy	0.2.0.0	0.2.0	
# ::edge	lead-01	ARG0	sympathy	0.2.3	0.2.3.0	
# ::edge	lead-01	ARG1	life	0.2.3	0.2.3.1	
# ::edge	lead-01	ARG2	fly-01	0.2.3	0.2	
# ::edge	life	mod	game	0.2.3.1	0.2.3.1.0	
# ::edge	name	op1	"London"	0.2.2.0	0.2.2.0.0	
# ::edge	off	op1	lead-01	0.2.3.3	0.2.3	
# ::edge	sympathy	mod	clothes	0.2.3.0	0.2.3.0.0	
# ::edge	year	time	before	0.0.0	0.0	
(a / and 
      :op1 (b / before 
            :time-of (y / year) 
            :time-of (a2 / accident)) 
      :op2 (h2 / have-rel-role-91 
            :ARG1 (i / it) 
            :ARG2 (h3 / husband 
                  :mod (t2 / this))) 
      :op3 (f2 / fly-01 
            :ARG0 (t / tragedy 
                  :location-of (l3 / lady)) 
            :ARG1 (i2 / it) 
            :ARG2 (c / city 
                  :name (n / name 
                        :op1 "London") 
                  :time (w / week)) 
            :ARG2-of (l2 / lead-01 
                  :ARG0 (s / sympathy 
                        :mod (c2 / clothes)) 
                  :ARG1 (l / life 
                        :mod (g / game)) 
                  :op-of (f / flat) 
                  :op-of (o / off))) 
      :op4 (h / he))

# ::snt he said it is amazing that no statistical work has been done into accidents like that which killed mrs stones daughter
# ::tok he said it is amazing that no statistical work has been done into accidents like that which killed mrs stones daughter
# ::alignments 20-21|0.0.0.1+0.0.0 19-20|0.0.0.0 17-18|0.0.0.0.0 13-14|0.0.0.0.0.1 7-8|0.0.0.2 6-7|0.0.0.0.0.0 4-5|0.1 2-3|0.1.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:17.220
# ::node	0	say-01	1-2
# ::node	0.0	he	0-1
# ::node	0.0.0	have-rel-role-91	20-21
# ::node	0.0.0.0	stone	19-20
# ::node	0.0.0.0.0	kill-01	17-18
# ::node	0.0.0.0.0.0	-	6-7
# ::node	0.0.0.0.0.1	accident	13-14
# ::node	0.0.0.1	daughter	20-21
# ::node	0.0.0.2	statistic	7-8
# ::node	0.1	amazing	4-5
# ::node	0.1.0	it	2-3
# ::root	0	say-01
# ::edge	accident	op1	kill-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	amazing	domain	it	0.1	0.1.0	
# ::edge	have-rel-role-91	ARG0	stone	0.0.0	0.0.0.0	
# ::edge	have-rel-role-91	ARG1	he	0.0.0	0.0	
# ::edge	have-rel-role-91	ARG2	daughter	0.0.0	0.0.0.1	
# ::edge	kill-01	ARG0	-	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	kill-01	ARG1	stone	0.0.0.0.0	0.0.0.0	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	amazing	0	0.1	
# ::edge	statistic	op1	have-rel-role-91	0.0.0.2	0.0.0	
(s3 / say-01 
      :ARG0 (h2 / he 
            :ARG1-of (h / have-rel-role-91 
                  :ARG0 (s / stone 
                        :ARG1-of (k / kill-01 
                              :ARG0 (- / -) 
                              :op-of (a / accident))) 
                  :ARG2 (d / daughter) 
                  :op-of (s2 / statistic))) 
      :ARG1 (a2 / amazing 
            :domain (i / it)))

# ::snt he arrived home unaware that an accident had occurred
# ::tok he arrived home unaware that an accident had occurred
# ::alignments 6-7|0.2 2-3|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:17.251
# ::node	0	arrive-01	1-2
# ::node	0.0	he	0-1
# ::node	0.1	home	2-3
# ::node	0.2	accident	6-7
# ::root	0	arrive-01
# ::edge	arrive-01	ARG0	he	0	0.0	
# ::edge	arrive-01	ARG1	home	0	0.1	
# ::edge	arrive-01	ARG2	accident	0	0.2	
(a2 / arrive-01 
      :ARG0 (h2 / he) 
      :ARG1 (h / home) 
      :ARG2 (a / accident))

# ::snt if you need a legal eagle at midnight there is one perched at the end of the telephone ready to answer questions on everything from probate to personal accidents divorce to drinkdriving
# ::tok if you need a legal eagle at midnight there is one perched at the end of the telephone ready to answer questions on everything from probate to personal accidents divorce to drinkdriving
# ::alignments 29-30|0.3.0 28-29|0.3.0.0 27-28|0.3.0.0.0 23-24|0.0.0 21-22|0.0 20-21|0 18-19|0.3 17-18|0.0.1 11-12|0.1 7-8|0.2.1 4-5|0.0.1.0 2-3|0.2 1-2|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:17.684
# ::node	0	answer-01	20-21
# ::node	0.0	question-01	21-22
# ::node	0.0.0	everything	23-24
# ::node	0.0.1	telephone-01	17-18
# ::node	0.0.1.0	legal	4-5
# ::node	0.1	perch-01	11-12
# ::node	0.2	need-01	2-3
# ::node	0.2.0	you	1-2
# ::node	0.2.1	midnight	7-8
# ::node	0.3	ready-01	18-19
# ::node	0.3.0	divorce-02	29-30
# ::node	0.3.0.0	accident	28-29
# ::node	0.3.0.0.0	personal	27-28
# ::root	0	answer-01
# ::edge	accident	mod	personal	0.3.0.0	0.3.0.0.0	
# ::edge	answer-01	ARG1	question-01	0	0.0	
# ::edge	answer-01	ARG2	need-01	0	0.2	
# ::edge	divorce-02	ARG0	accident	0.3.0	0.3.0.0	
# ::edge	need-01	ARG0	you	0.2	0.2.0	
# ::edge	need-01	ARG1	midnight	0.2	0.2.1	
# ::edge	perch-01	ARG1	answer-01	0.1	0	
# ::edge	question-01	ARG1	everything	0.0	0.0.0	
# ::edge	question-01	ARG2	telephone-01	0.0	0.0.1	
# ::edge	ready-01	ARG1	divorce-02	0.3	0.3.0	
# ::edge	ready-01	ARG2	answer-01	0.3	0	
# ::edge	telephone-01	ARG1	legal	0.0.1	0.0.1.0	
(a2 / answer-01 
      :ARG1 (q / question-01 
            :ARG1 (e / everything) 
            :ARG2 (t / telephone-01 
                  :ARG1 (l / legal))) 
      :ARG1-of (p2 / perch-01) 
      :ARG2 (n / need-01 
            :ARG0 (y / you) 
            :ARG1 (m / midnight)) 
      :ARG2-of (r / ready-01 
            :ARG1 (d / divorce-02 
                  :ARG0 (a / accident 
                        :mod (p / personal)))))

# ::snt these doctrinal changes laid the groundwork for the remarkable transformation of the american law of torts from a relatively modest to an aggressively expansive role in accident compensation
# ::tok these doctrinal changes laid the groundwork for the remarkable transformation of the american law of torts from a relatively modest to an aggressively expansive role in accident compensation
# ::alignments 27-28|0.0.0 26-27|0.0.0.0 24-25|0.0.0.0.0 22-23|0.0.1 19-20|0.2.0.0 18-19|0.2.0 13-14|0.2.1 12-13|0.2.1.0.0.0+0.2.1.0.0+0.2.1.0 9-10|0.2 8-9|0.2.2 5-6|0.1 3-4|0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:17.815
# ::node	0	lay-02	3-4
# ::node	0.0	change-01	2-3
# ::node	0.0.0	compensate-01	27-28
# ::node	0.0.0.0	accident	26-27
# ::node	0.0.0.0.0	role	24-25
# ::node	0.0.1	aggressive	22-23
# ::node	0.1	groundwork	5-6
# ::node	0.2	transform-01	9-10
# ::node	0.2.0	relative	18-19
# ::node	0.2.0.0	modest	19-20
# ::node	0.2.1	law	13-14
# ::node	0.2.1.0	country	12-13
# ::node	0.2.1.0.0	name	12-13
# ::node	0.2.1.0.0.0	"America"	12-13
# ::node	0.2.2	remarkable	8-9
# ::root	0	lay-02
# ::edge	change-01	ARG1	aggressive	0.0	0.0.1	
# ::edge	compensate-01	ARG0	change-01	0.0.0	0.0	
# ::edge	compensate-01	ARG1	accident	0.0.0	0.0.0.0	
# ::edge	country	name	name	0.2.1.0	0.2.1.0.0	
# ::edge	law	poss	country	0.2.1	0.2.1.0	
# ::edge	lay-02	ARG0	change-01	0	0.0	
# ::edge	lay-02	ARG1	groundwork	0	0.1	
# ::edge	lay-02	manner	transform-01	0	0.2	
# ::edge	modest	degree	relative	0.2.0.0	0.2.0	
# ::edge	name	op1	"America"	0.2.1.0.0	0.2.1.0.0.0	
# ::edge	role	poss	accident	0.0.0.0.0	0.0.0.0	
# ::edge	transform-01	ARG0	relative	0.2	0.2.0	
# ::edge	transform-01	ARG1	law	0.2	0.2.1	
# ::edge	transform-01	mod	remarkable	0.2	0.2.2	
(l2 / lay-02 
      :ARG0 (c3 / change-01 
            :ARG0-of (c / compensate-01 
                  :ARG1 (a / accident 
                        :poss-of (r / role))) 
            :ARG1 (a2 / aggressive)) 
      :ARG1 (g / groundwork) 
      :manner (t / transform-01 
            :ARG0 (r2 / relative 
                  :degree-of (m / modest)) 
            :ARG1 (l / law 
                  :poss (c2 / country 
                        :name (n / name 
                              :op1 "America"))) 
            :mod (r3 / remarkable)))

# ::snt but you see mr mills those cars had been in an accident and we didnt want to take any chances so we thought we would drive you another from calcutta
# ::tok but you see mr mills those cars had been in an accident and we didnt want to take any chances so we thought we would drive you another from calcutta
# ::alignments 27-28|0.0.0.0.0.1.1.1.0 26-27|0.0.0.0.0.1.1.1 25-26|0.0.0.0.0.1.1 23-24|0.0.0.0.0.1.1.0 22-23|0.0.0.0.0.1 21-22|0.0.0.0.0.1.0 20-21|0.0.0.0.0.1.2 19-20|0.0.0.0.0 18-19|0.0.0.0.0.2 15-16|0.0.0.0 13-14|0.0.0.0.0.0 12-13|0.0.1 11-12|0.0.1.1 6-7|0.0.1.0 2-3|0.0 1-2|0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:18.380
# ::node	0	contrast-01	0-1
# ::node	0.0	see-01	2-3
# ::node	0.0.0	you	1-2
# ::node	0.0.0.0	want-01	15-16
# ::node	0.0.0.0.0	chance-01	19-20
# ::node	0.0.0.0.0.0	we	13-14
# ::node	0.0.0.0.0.1	think-01	22-23
# ::node	0.0.0.0.0.1.0	we	21-22
# ::node	0.0.0.0.0.1.1	drive-01	25-26
# ::node	0.0.0.0.0.1.1.0	we	23-24
# ::node	0.0.0.0.0.1.1.1	you	26-27
# ::node	0.0.0.0.0.1.1.1.0	another	27-28
# ::node	0.0.0.0.0.1.2	so	20-21
# ::node	0.0.0.0.0.2	any	18-19
# ::node	0.0.1	and	12-13
# ::node	0.0.1.0	car	6-7
# ::node	0.0.1.1	accident	11-12
# ::root	0	contrast-01
# ::edge	and	op1	car	0.0.1	0.0.1.0	
# ::edge	and	op2	accident	0.0.1	0.0.1.1	
# ::edge	chance-01	ARG0	we	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	chance-01	condition	think-01	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	chance-01	mod	any	0.0.0.0.0	0.0.0.0.0.2	
# ::edge	contrast-01	ARG2	see-01	0	0.0	
# ::edge	drive-01	ARG0	we	0.0.0.0.0.1.1	0.0.0.0.0.1.1.0	
# ::edge	drive-01	ARG1	you	0.0.0.0.0.1.1	0.0.0.0.0.1.1.1	
# ::edge	see-01	ARG0	you	0.0	0.0.0	
# ::edge	see-01	ARG1	and	0.0	0.0.1	
# ::edge	so	op1	think-01	0.0.0.0.0.1.2	0.0.0.0.0.1	
# ::edge	think-01	ARG0	we	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	think-01	ARG1	drive-01	0.0.0.0.0.1	0.0.0.0.0.1.1	
# ::edge	want-01	ARG0	you	0.0.0.0	0.0.0	
# ::edge	want-01	ARG1	chance-01	0.0.0.0	0.0.0.0.0	
# ::edge	you	quant	another	0.0.0.0.0.1.1.1	0.0.0.0.0.1.1.1.0	
(c3 / contrast-01 
      :ARG2 (s2 / see-01 
            :ARG0 (y2 / you 
                  :ARG0-of (w3 / want-01 
                        :ARG1 (c / chance-01 
                              :ARG0 (w4 / we) 
                              :condition (t / think-01 
                                    :ARG0 (w2 / we) 
                                    :ARG1 (d / drive-01 
                                          :ARG0 (w / we) 
                                          :ARG1 (y / you 
                                                :quant (a / another))) 
                                    :op-of (s / so)) 
                              :mod (a2 / any)))) 
            :ARG1 (a3 / and 
                  :op1 (c2 / car) 
                  :op2 (a4 / accident))))

# ::snt the accident caused no injuries and no radioactivity was released, but according to official sources for the first half hour after the accident no one assumed control of the situation in the reactor control room, in the first minutes of the accident according to the government those responsible for the reactor either did not answer the telephone or when they did were not able to explain themselves clearly
# ::tok the accident caused no injuries and no radioactivity was released , but according to official sources for the first half hour after the accident no one assumed control of the situation in the reactor control room , in the first minutes of the accident according to the government those responsible for the reactor either did not answer the telephone or when they did were not able to explain themselves clearly
# ::alignments 69-70|0.1.1.1.5.0.0.0.1 67-68|0.1.1.1.5.0.0.0 65-66|0.1.1.1.5.0.0.0.0 61-62|0.1.1.1.5.0.0 59-60|0.1.1.1.5 58-59|0.1.1.1.5.0.1 56-57|0.1.1.1.5.0 53-54|0.1.1.1.5.0.2 52-53|0.1.1.1.5.0.2.0.1 49-50|0.1.1.1.5.0.2.0 43-44|0.1.1.1.5.0.2.0.0 40-41|0.1.1.1.4.0+0.1.1.1.4 35-36|0.1.1.1.3 34-35|0.1.1.1.3.0 33-34|0.1.1.1.3.0.0 30-31|0.1.1.1.1 27-28|0.1.1.1 26-27|0.1.1.1.2 24-25|0.1.1.1.2.0 23-24|0.1.1.1.0 21-22|0.1.1.1.2.1 20-21|0.1.1.1.2.1.0.0+0.1.1.1.2.1.0 19-20|0.1.1.1.2.1.0.0.0 15-16|0.1.0.1.0 14-15|0.1.0.1.1+0.1.0.1 11-12|0.1 9-10|0.1.0 7-8|0.1.1.0 6-7|0.1.1.0.0 5-6|0.1.1 4-5|0.1.0.0 3-4|0.1.0.0.0 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:20.310
# ::node	0	cause-01	2-3
# ::node	0.0	accident	1-2
# ::node	0.1	contrast-01	11-12
# ::node	0.1.0	release-01	9-10
# ::node	0.1.0.0	injure-01	4-5
# ::node	0.1.0.0.0	-	3-4
# ::node	0.1.0.1	have-org-role-91	14-15
# ::node	0.1.0.1.0	source	15-16
# ::node	0.1.0.1.1	official	14-15
# ::node	0.1.1	and	5-6
# ::node	0.1.1.0	radioactivity	7-8
# ::node	0.1.1.0.0	-	6-7
# ::node	0.1.1.1	control-01	27-28
# ::node	0.1.1.1.0	accident	23-24
# ::node	0.1.1.1.1	situation	30-31
# ::node	0.1.1.1.2	assume-02	26-27
# ::node	0.1.1.1.2.0	-	24-25
# ::node	0.1.1.1.2.1	after	21-22
# ::node	0.1.1.1.2.1.0	temporal-quantity	20-21
# ::node	0.1.1.1.2.1.0.0	hour	20-21
# ::node	0.1.1.1.2.1.0.0.0	half	19-20
# ::node	0.1.1.1.3	room	35-36
# ::node	0.1.1.1.3.0	control-01	34-35
# ::node	0.1.1.1.3.0.0	reactor	33-34
# ::node	0.1.1.1.4	temporal-quantity	40-41
# ::node	0.1.1.1.4.0	minute	40-41
# ::node	0.1.1.1.5	or	59-60
# ::node	0.1.1.1.5.0	answer-01	56-57
# ::node	0.1.1.1.5.0.0	they	61-62
# ::node	0.1.1.1.5.0.0.0	explain-01	67-68
# ::node	0.1.1.1.5.0.0.0.0	possible	65-66
# ::node	0.1.1.1.5.0.0.0.1	clear	69-70
# ::node	0.1.1.1.5.0.1	telephone-01	58-59
# ::node	0.1.1.1.5.0.2	either	53-54
# ::node	0.1.1.1.5.0.2.0	responsible-41	49-50
# ::node	0.1.1.1.5.0.2.0.0	accident	43-44
# ::node	0.1.1.1.5.0.2.0.1	reactor	52-53
# ::root	0	cause-01
# ::edge	after	op1	assume-02	0.1.1.1.2.1	0.1.1.1.2	
# ::edge	after	quant	temporal-quantity	0.1.1.1.2.1	0.1.1.1.2.1.0	
# ::edge	and	op1	radioactivity	0.1.1	0.1.1.0	
# ::edge	and	op2	control-01	0.1.1	0.1.1.1	
# ::edge	answer-01	ARG0	they	0.1.1.1.5.0	0.1.1.1.5.0.0	
# ::edge	answer-01	ARG1	telephone-01	0.1.1.1.5.0	0.1.1.1.5.0.1	
# ::edge	assume-02	ARG1	control-01	0.1.1.1.2	0.1.1.1	
# ::edge	assume-02	manner	-	0.1.1.1.2	0.1.1.1.2.0	
# ::edge	cause-01	ARG0	accident	0	0.0	
# ::edge	cause-01	ARG1	contrast-01	0	0.1	
# ::edge	contrast-01	ARG1	release-01	0.1	0.1.0	
# ::edge	contrast-01	ARG2	and	0.1	0.1.1	
# ::edge	control-01	ARG0	accident	0.1.1.1	0.1.1.1.0	
# ::edge	control-01	ARG0	room	0.1.1.1.3.0	0.1.1.1.3	
# ::edge	control-01	ARG1	reactor	0.1.1.1.3.0	0.1.1.1.3.0.0	
# ::edge	control-01	ARG1	situation	0.1.1.1	0.1.1.1.1	
# ::edge	control-01	location	room	0.1.1.1	0.1.1.1.3	
# ::edge	control-01	location	temporal-quantity	0.1.1.1	0.1.1.1.4	
# ::edge	either	op1	responsible-41	0.1.1.1.5.0.2	0.1.1.1.5.0.2.0	
# ::edge	either	op2	answer-01	0.1.1.1.5.0.2	0.1.1.1.5.0	
# ::edge	explain-01	ARG0	they	0.1.1.1.5.0.0.0	0.1.1.1.5.0.0	
# ::edge	explain-01	manner	clear	0.1.1.1.5.0.0.0	0.1.1.1.5.0.0.0.1	
# ::edge	have-org-role-91	ARG0	source	0.1.0.1	0.1.0.1.0	
# ::edge	have-org-role-91	ARG1	release-01	0.1.0.1	0.1.0	
# ::edge	have-org-role-91	ARG2	official	0.1.0.1	0.1.0.1.1	
# ::edge	hour	mod	half	0.1.1.1.2.1.0.0	0.1.1.1.2.1.0.0.0	
# ::edge	injure-01	polarity	-	0.1.0.0	0.1.0.0.0	
# ::edge	or	op1	control-01	0.1.1.1.5	0.1.1.1	
# ::edge	or	op2	answer-01	0.1.1.1.5	0.1.1.1.5.0	
# ::edge	possible	domain	explain-01	0.1.1.1.5.0.0.0.0	0.1.1.1.5.0.0.0	
# ::edge	radioactivity	polarity	-	0.1.1.0	0.1.1.0.0	
# ::edge	release-01	ARG1	injure-01	0.1.0	0.1.0.0	
# ::edge	responsible-41	ARG0	accident	0.1.1.1.5.0.2.0	0.1.1.1.5.0.2.0.0	
# ::edge	responsible-41	ARG1	reactor	0.1.1.1.5.0.2.0	0.1.1.1.5.0.2.0.1	
# ::edge	temporal-quantity	unit	hour	0.1.1.1.2.1.0	0.1.1.1.2.1.0.0	
# ::edge	temporal-quantity	unit	minute	0.1.1.1.4	0.1.1.1.4.0	
(c5 / cause-01 
      :ARG0 (a7 / accident) 
      :ARG1 (c4 / contrast-01 
            :ARG1 (r5 / release-01 
                  :ARG1 (i / injure-01 
                        :polarity (-3 / -)) 
                  :ARG1-of (h3 / have-org-role-91 
                        :ARG0 (s2 / source) 
                        :ARG2 (o2 / official))) 
            :ARG2 (a6 / and 
                  :op1 (r6 / radioactivity 
                        :polarity (-2 / -)) 
                  :op2 (c3 / control-01 
                        :ARG0 (a4 / accident) 
                        :ARG1 (s / situation) 
                        :ARG1-of (a3 / assume-02 
                              :manner (- / -) 
                              :op-of (a5 / after 
                                    :quant (t4 / temporal-quantity 
                                          :unit (h / hour 
                                                :mod (h2 / half))))) 
                        :location (r3 / room 
                              :ARG0-of (c2 / control-01 
                                    :ARG1 (r4 / reactor))) 
                        :location (t3 / temporal-quantity 
                              :unit (m / minute)) 
                        :op-of (o / or 
                              :op1 (a / answer-01 
                                    :ARG0 (t / they 
                                          :ARG0-of (e / explain-01 
                                                :domain-of (p / possible) 
                                                :manner (c / clear))) 
                                    :ARG1 (t2 / telephone-01) 
                                    :op-of (e2 / either 
                                          :op1 (r2 / responsible-41 
                                                :ARG0 (a2 / accident) 
                                                :ARG1 (r / reactor)))))))))

# ::snt its easy to have an accident crossing the road
# ::tok its easy to have an accident crossing the road
# ::alignments 8-9|0.0 6-7|0.0.0 5-6|0.0.0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:20.354
# ::node	0	easy	1-2
# ::node	0.0	road	8-9
# ::node	0.0.0	cross-02	6-7
# ::node	0.0.0.0	accident	5-6
# ::root	0	easy
# ::edge	cross-02	ARG0	accident	0.0.0	0.0.0.0	
# ::edge	cross-02	ARG1	road	0.0.0	0.0	
# ::edge	easy	topic	road	0	0.0	
(e / easy 
      :topic (r / road 
            :ARG1-of (c / cross-02 
                  :ARG0 (a / accident))))

# ::snt in spite of what the doctors said it seemed to him probable that the accident had irremediably damaged her brain
# ::tok in spite of what the doctors said it seemed to him probable that the accident had irremediably damaged her brain
# ::alignments 19-20|0.1.0 17-18|0.1.0.0 14-15|0.1.0.0.0 8-9|0.1 7-8|0.1.1 6-7|0 5-6|0.0 1-2|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:20.502
# ::node	0	say-01	6-7
# ::node	0.0	doctor	5-6
# ::node	0.1	seem-01	8-9
# ::node	0.1.0	brain	19-20
# ::node	0.1.0.0	damage-01	17-18
# ::node	0.1.0.0.0	accident	14-15
# ::node	0.1.1	it	7-8
# ::node	0.2	spite	1-2
# ::root	0	say-01
# ::edge	damage-01	ARG0	accident	0.1.0.0	0.1.0.0.0	
# ::edge	damage-01	ARG1	brain	0.1.0.0	0.1.0	
# ::edge	say-01	ARG0	doctor	0	0.0	
# ::edge	say-01	ARG1	seem-01	0	0.1	
# ::edge	say-01	beneficiary	spite	0	0.2	
# ::edge	seem-01	ARG0	brain	0.1	0.1.0	
# ::edge	seem-01	ARG1	it	0.1	0.1.1	
(s2 / say-01 
      :ARG0 (d2 / doctor) 
      :ARG1 (s / seem-01 
            :ARG0 (b / brain 
                  :ARG1-of (d / damage-01 
                        :ARG0 (a / accident))) 
            :ARG1 (i / it)) 
      :beneficiary (s3 / spite))

# ::snt we pray for all those killed each day in wars disasters and accidents throughout the world for prisoners of conscience and all who suffer torture starvation or maltreatment and for sally steepe mary eames amelia reeves mary tulley ellen beddard william thomas russell fergus oconnor hannah hartnett and all whose anniversaries fall at this time of the year
# ::tok we pray for all those killed each day in wars disasters and accidents throughout the world for prisoners of conscience and all who suffer torture starvation or maltreatment and for sally steepe mary eames amelia reeves mary tulley ellen beddard william thomas russell fergus oconnor hannah hartnett and all whose anniversaries fall at this time of the year
# ::alignments 57-58|0.0.0.0.0 54-55|0.0.0.0 53-54|0.0.0 48-49|0.0.1.1.0 47-48|0.0.1.1 28-29|0 26-27|0.0.1 25-26|0.0 24-25|0.0.1.0 23-24|0.0.1.0.0 21-22|0.0.1.0.0.0 20-21|0.0.1.2.0.0 19-20|0.0.1.2.0.0.0 15-16|0.0.1.2.2.0.0 13-14|0.0.1.2.2.0.0.0 12-13|0.0.1.2.0.1 11-12|0.0.1.2.0 10-11|0.0.1.2.2 9-10|0.0.1.2.2.0 7-8|0.0.1.2.3 6-7|0.0.1.2.3.0 5-6|0.0.1.2 3-4|0.0.1.2.1 1-2|0.0.1.0.0.1 0-1|0.0.1.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:21.750
# ::node	0	and	28-29
# ::node	0.0	starve-01	25-26
# ::node	0.0.0	this	53-54
# ::node	0.0.0.0	time	54-55
# ::node	0.0.0.0.0	year	57-58
# ::node	0.0.1	or	26-27
# ::node	0.0.1.0	torture-01	24-25
# ::node	0.0.1.0.0	suffer-01	23-24
# ::node	0.0.1.0.0.0	all	21-22
# ::node	0.0.1.0.0.1	pray-01	1-2
# ::node	0.0.1.0.0.1.0	we	0-1
# ::node	0.0.1.1	and	47-48
# ::node	0.0.1.1.0	all	48-49
# ::node	0.0.1.2	kill-01	5-6
# ::node	0.0.1.2.0	and	11-12
# ::node	0.0.1.2.0.0	and	20-21
# ::node	0.0.1.2.0.0.0	conscience	19-20
# ::node	0.0.1.2.0.1	accident	12-13
# ::node	0.0.1.2.1	all	3-4
# ::node	0.0.1.2.2	disaster	10-11
# ::node	0.0.1.2.2.0	war-01	9-10
# ::node	0.0.1.2.2.0.0	world	15-16
# ::node	0.0.1.2.2.0.0.0	throughout	13-14
# ::node	0.0.1.2.3	day	7-8
# ::node	0.0.1.2.3.0	each	6-7
# ::root	0	and
# ::edge	and	op1	accident	0.0.1.2.0	0.0.1.2.0.1	
# ::edge	and	op1	and	0.0.1.2.0.0	0.0.1.2.0	
# ::edge	and	op1	or	0.0.1.1	0.0.1	
# ::edge	and	op1	starve-01	0	0.0	
# ::edge	and	op2	all	0.0.1.1	0.0.1.1.0	
# ::edge	and	op2	conscience	0.0.1.2.0.0	0.0.1.2.0.0.0	
# ::edge	day	mod	each	0.0.1.2.3	0.0.1.2.3.0	
# ::edge	kill-01	ARG0	and	0.0.1.2	0.0.1.2.0	
# ::edge	kill-01	ARG1	all	0.0.1.2	0.0.1.2.1	
# ::edge	kill-01	location	disaster	0.0.1.2	0.0.1.2.2	
# ::edge	kill-01	time	day	0.0.1.2	0.0.1.2.3	
# ::edge	or	op1	kill-01	0.0.1	0.0.1.2	
# ::edge	or	op2	starve-01	0.0.1	0.0	
# ::edge	pray-01	ARG0	we	0.0.1.0.0.1	0.0.1.0.0.1.0	
# ::edge	pray-01	ARG1	suffer-01	0.0.1.0.0.1	0.0.1.0.0	
# ::edge	starve-01	ARG1	this	0.0	0.0.0	
# ::edge	suffer-01	ARG0	all	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	suffer-01	ARG1	torture-01	0.0.1.0.0	0.0.1.0	
# ::edge	throughout	op1	world	0.0.1.2.2.0.0.0	0.0.1.2.2.0.0	
# ::edge	time	mod	this	0.0.0.0	0.0.0	
# ::edge	torture-01	ARG1	or	0.0.1.0	0.0.1	
# ::edge	war-01	ARG0	disaster	0.0.1.2.2.0	0.0.1.2.2	
# ::edge	war-01	ARG1	world	0.0.1.2.2.0	0.0.1.2.2.0.0	
# ::edge	year	part	time	0.0.0.0.0	0.0.0.0	
(a3 / and 
      :op1 (s / starve-01 
            :ARG1 (t2 / this 
                  :mod-of (t / time 
                        :part-of (y / year))) 
            :op-of (o / or 
                  :ARG1-of (t3 / torture-01 
                        :ARG1-of (s2 / suffer-01 
                              :ARG0 (a4 / all) 
                              :ARG1-of (p / pray-01 
                                    :ARG0 (w3 / we)))) 
                  :op-of (a2 / and 
                        :op1 (a / all)) 
                  :op1 (k / kill-01 
                        :ARG0 (a7 / and 
                              :op-of (a5 / and 
                                    :op1 (c / conscience)) 
                              :op1 (a6 / accident)) 
                        :ARG1 (a8 / all) 
                        :location (d / disaster 
                              :ARG0-of (w2 / war-01 
                                    :ARG1 (w / world 
                                          :op-of (t4 / throughout)))) 
                        :time (d2 / day 
                              :mod (e / each))))))

# ::snt evidently not even the circumstance that a strict application of negligence per se would here have promoted nofault liability specifically for traffic accidents proved persuasive
# ::tok evidently not even the circumstance that a strict application of negligence per se would here have promoted nofault liability specifically for traffic accidents proved persuasive
# ::alignments 23-24|0.0.0.0.0 22-23|0.0.0.0.0.0 21-22|0.0.0.0.0.0.0 19-20|0.0.0.2 18-19|0.0.0.0 16-17|0.0.0 14-15|0.0.0.1 10-11|0.0.1 8-9|0.0 7-8|0.0.2 4-5|0 0-1|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:21.883
# ::node	0	circumstance	4-5
# ::node	0.0	apply-01	8-9
# ::node	0.0.0	promote-01	16-17
# ::node	0.0.0.0	liability	18-19
# ::node	0.0.0.0.0	prove-01	23-24
# ::node	0.0.0.0.0.0	accident	22-23
# ::node	0.0.0.0.0.0.0	traffic	21-22
# ::node	0.0.0.1	here	14-15
# ::node	0.0.0.2	specific	19-20
# ::node	0.0.1	neglect-01	10-11
# ::node	0.0.1.0	evident	0-1
# ::node	0.0.2	strict	7-8
# ::root	0	circumstance
(c / circumstance 
      :ARG0-of (a2 / apply-01 
            :ARG0-of (p2 / promote-01 
                  :ARG1 (l / liability 
                        :ARG0-of (p / prove-01 
                              :ARG1 (a / accident 
                                    :mod (t / traffic)))) 
                  :location (h / here) 
                  :mod (s / specific)) 
            :ARG1 (n / neglect-01 
                  :ARG1 (e / evident)) 
            :mod (s2 / strict)))

# ::snt which pathway is chosen may be historical accident or it may be a matter of more deliberate planning by chemists
# ::tok which pathway is chosen may be historical accident or it may be a matter of more deliberate planning by chemists
# ::alignments 17-18|0.0.3.1 13-14|0.0.3 10-11|0.0.2.0+0.0.2 9-10|0.0.3.0 8-9|0.0 7-8|0.0.1 6-7|0.0.1.0 4-5|0.0.0.0+0.0.0 3-4|0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:21.994
# ::node	0	choose-01	3-4
# ::node	0.0	or	8-9
# ::node	0.0.0	date-entity	4-5
# ::node	0.0.0.0	5	4-5
# ::node	0.0.1	accident	7-8
# ::node	0.0.1.0	history	6-7
# ::node	0.0.2	date-entity	10-11
# ::node	0.0.2.0	5	10-11
# ::node	0.0.3	matter	13-14
# ::node	0.0.3.0	it	9-10
# ::node	0.0.3.1	plan-01	17-18
# ::node	0.1	pathway	1-2
# ::root	0	choose-01
# ::edge	accident	mod	history	0.0.1	0.0.1.0	
# ::edge	choose-01	ARG1	or	0	0.0	
# ::edge	choose-01	manner	pathway	0	0.1	
# ::edge	date-entity	month	5	0.0.0	0.0.0.0	
# ::edge	date-entity	month	5	0.0.2	0.0.2.0	
# ::edge	matter	domain	it	0.0.3	0.0.3.0	
# ::edge	matter	topic	plan-01	0.0.3	0.0.3.1	
# ::edge	or	op1	date-entity	0.0	0.0.0	
# ::edge	or	op2	accident	0.0	0.0.1	
# ::edge	or	op3	date-entity	0.0	0.0.2	
# ::edge	or	op4	matter	0.0	0.0.3	
(c / choose-01 
      :ARG1 (o / or 
            :op1 (d2 / date-entity 
                  :month 5) 
            :op2 (a / accident 
                  :mod (h / history)) 
            :op3 (d / date-entity 
                  :month 5) 
            :op4 (m / matter 
                  :domain (i / it) 
                  :topic (p / plan-01))) 
      :manner (p2 / pathway))

# ::snt for it was she who brought up the young james after the perhaps fortunate death of his violent drunken father in a railway accident
# ::tok for it was she who brought up the young james after the perhaps fortunate death of his violent drunken father in a railway accident
# ::alignments 23-24|0.0.0 22-23|0.0.0.0 19-20|0.0.1+0.0 18-19|0 17-18|0.0.1.0 14-15|0.0.3.0 12-13|0.0.3.0.2 10-11|0.0.3 8-9|0.0.2 3-4|0.0.3.0.0 1-2|0.0.3.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:22.129
# ::node	0	drunken	18-19
# ::node	0.0	have-rel-role-91	19-20
# ::node	0.0.0	accident	23-24
# ::node	0.0.0.0	railway	22-23
# ::node	0.0.1	father	19-20
# ::node	0.0.1.0	violent	17-18
# ::node	0.0.2	young	8-9
# ::node	0.0.3	after	10-11
# ::node	0.0.3.0	die-01	14-15
# ::node	0.0.3.0.0	she	3-4
# ::node	0.0.3.0.1	it	1-2
# ::node	0.0.3.0.2	perhaps	12-13
# ::root	0	drunken
(d / drunken 
      :ARG0-of (h / have-rel-role-91 
            :ARG1 (a / accident 
                  :location (r / railway)) 
            :ARG2 (f / father 
                  :mod (v / violent)) 
            :op-of (y / young) 
            :op-of (a2 / after 
                  :op1 (d2 / die-01 
                        :ARG0 (s / she) 
                        :ARG1 (i / it) 
                        :frequency (p / perhaps)))))

# ::snt a fishermans widow may contest an inquest verdict on her husbands drowning off the welsh coast claiming the jury was not allowed to hear evidence about the possible involvement of a submarine in the accident
# ::tok a fishermans widow may contest an inquest verdict on her husbands drowning off the welsh coast claiming the jury was not allowed to hear evidence about the possible involvement of a submarine in the accident
# ::alignments 34-35|0.0 31-32|0.2.2.0 28-29|0.2.2 27-28|0.2.2.1 24-25|0 23-24|0.2 21-22|0.2.1 18-19|0.2.0 16-17|0.2.1.0 15-16|0.2.1.0.0 12-13|0.2.1.0.0.0 10-11|0.2.1.0.0.0.0.0+0.2.1.0.0.0.0 7-8|0.1.0.0 6-7|0.1.0.0.0 4-5|0.1.0 3-4|0.1.1+0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:22.521
# ::node	0	evidence-01	24-25
# ::node	0.0	accident	34-35
# ::node	0.1	date-entity	3-4
# ::node	0.1.0	contest-00	4-5
# ::node	0.1.0.0	verdict	7-8
# ::node	0.1.0.0.0	inquest	6-7
# ::node	0.1.1	5	3-4
# ::node	0.2	hear-01	23-24
# ::node	0.2.0	jury	18-19
# ::node	0.2.1	allow-01	21-22
# ::node	0.2.1.0	claim-01	16-17
# ::node	0.2.1.0.0	coast	15-16
# ::node	0.2.1.0.0.0	off	12-13
# ::node	0.2.1.0.0.0.0	have-rel-role-91	10-11
# ::node	0.2.1.0.0.0.0.0	husband	10-11
# ::node	0.2.2	involve-01	28-29
# ::node	0.2.2.0	submarine	31-32
# ::node	0.2.2.1	possible	27-28
# ::root	0	evidence-01
# ::edge	allow-01	ARG1	hear-01	0.2.1	0.2	
# ::edge	claim-01	ARG0	coast	0.2.1.0	0.2.1.0.0	
# ::edge	claim-01	ARG1	allow-01	0.2.1.0	0.2.1	
# ::edge	contest-00	ARG1	verdict	0.1.0	0.1.0.0	
# ::edge	contest-00	mod	date-entity	0.1.0	0.1	
# ::edge	date-entity	month	5	0.1	0.1.1	
# ::edge	evidence-01	ARG0	accident	0	0.0	
# ::edge	evidence-01	ARG1	date-entity	0	0.1	
# ::edge	have-rel-role-91	ARG1	off	0.2.1.0.0.0.0	0.2.1.0.0.0	
# ::edge	have-rel-role-91	ARG2	husband	0.2.1.0.0.0.0	0.2.1.0.0.0.0.0	
# ::edge	hear-01	ARG0	jury	0.2	0.2.0	
# ::edge	hear-01	ARG1	evidence-01	0.2	0	
# ::edge	hear-01	ARG3	involve-01	0.2	0.2.2	
# ::edge	involve-01	ARG1	submarine	0.2.2	0.2.2.0	
# ::edge	involve-01	mod	possible	0.2.2	0.2.2.1	
# ::edge	off	op1	coast	0.2.1.0.0.0	0.2.1.0.0	
# ::edge	verdict	mod	inquest	0.1.0.0	0.1.0.0.0	
(e / evidence-01 
      :ARG0 (a / accident) 
      :ARG1 (d / date-entity 
            :mod-of (c3 / contest-00 
                  :ARG1 (v / verdict 
                        :mod (i2 / inquest))) 
            :month 5) 
      :ARG1-of (h / hear-01 
            :ARG0 (j / jury) 
            :ARG1-of (a2 / allow-01 
                  :ARG1-of (c / claim-01 
                        :ARG0 (c2 / coast 
                              :op-of (o / off 
                                    :ARG1-of (h2 / have-rel-role-91 
                                          :ARG2 (h3 / husband)))))) 
            :ARG3 (i / involve-01 
                  :ARG1 (s / submarine) 
                  :mod (p / possible))))

# ::snt it is as her party comrades would once have said no accident that the heroine of her most famous novel the golden notebook bears the surname wulf, nor is the first name anna an accident
# ::tok it is as her party comrades would once have said no accident that the heroine of her most famous novel the golden notebook bears the surname wulf , nor is the first name anna an accident
# ::alignments 35-36|0.0.0.1 23-24|0.1.0+0.1 22-23|0.1.0.1 21-22|0.1.0.1.1 19-20|0.1.0.1.0 18-19|0.1.0.1.0.0 17-18|0.1.0.1.0.0.0 14-15|0.1.0.0 11-12|0.2.0 10-11|0.2 9-10|0 7-8|0.3 5-6|0.0+0.0.0 4-5|0.0.0.0 0-1|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:23.179
# ::node	0	say-01	9-10
# ::node	0.0	comrade	5-6
# ::node	0.0.0	have-rel-role-91	5-6
# ::node	0.0.0.0	party	4-5
# ::node	0.0.0.0.0	it	0-1
# ::node	0.0.0.1	accident	35-36
# ::node	0.1	thing	23-24
# ::node	0.1.0	bear-01	23-24
# ::node	0.1.0.0	heroine	14-15
# ::node	0.1.0.1	notebook	22-23
# ::node	0.1.0.1.0	novel	19-20
# ::node	0.1.0.1.0.0	famous	18-19
# ::node	0.1.0.1.0.0.0	most	17-18
# ::node	0.1.0.1.1	gold	21-22
# ::node	0.2	-	10-11
# ::node	0.2.0	accident	11-12
# ::node	0.3	once	7-8
# ::root	0	say-01
# ::edge	accident	polarity	-	0.2.0	0.2	
# ::edge	bear-01	ARG0	heroine	0.1.0	0.1.0.0	
# ::edge	bear-01	ARG1	notebook	0.1.0	0.1.0.1	
# ::edge	bear-01	manner	thing	0.1.0	0.1	
# ::edge	famous	degree	most	0.1.0.1.0.0	0.1.0.1.0.0.0	
# ::edge	have-rel-role-91	ARG0	party	0.0.0	0.0.0.0	
# ::edge	have-rel-role-91	ARG1	accident	0.0.0	0.0.0.1	
# ::edge	have-rel-role-91	ARG2	comrade	0.0.0	0.0	
# ::edge	notebook	mod	gold	0.1.0.1	0.1.0.1.1	
# ::edge	notebook	mod	novel	0.1.0.1	0.1.0.1.0	
# ::edge	novel	mod	famous	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	party	poss	it	0.0.0.0	0.0.0.0.0	
# ::edge	say-01	ARG0	comrade	0	0.0	
# ::edge	say-01	ARG1	thing	0	0.1	
# ::edge	say-01	polarity	-	0	0.2	
# ::edge	say-01	time	once	0	0.3	
(s / say-01 
      :ARG0 (c / comrade 
            :ARG2-of (h2 / have-rel-role-91 
                  :ARG0 (p / party 
                        :poss (i / it)) 
                  :ARG1 (a / accident))) 
      :ARG1 (t / thing 
            :manner-of (b / bear-01 
                  :ARG0 (h / heroine) 
                  :ARG1 (n / notebook 
                        :mod (n2 / novel 
                              :mod (f / famous 
                                    :degree (m / most))) 
                        :mod (g / gold)))) 
      :polarity (- / - 
            :polarity-of (a2 / accident)) 
      :time (o / once))

# ::snt june torrance 40 of finsbury park north london was in a coma for four months after the accident in 1982
# ::tok june torrance 40 of finsbury park north london was in a coma for four months after the accident in 1982
# ::alignments 19-20|0.0.0.1.0.0.1.0.0+0.0.0.1.0.0.1.0 17-18|0.0.0.1.0.0.1 15-16|0.0.0.1.0.0 14-15|0.0.0.1.0.3+0.0.0.1.0 13-14|0.0.0.1.0.2 11-12|0.0.0.1.0.0.0 7-8|0.0.0.0.0+0.0.0.0+0.0.0 6-7|0.0 5-6|0 2-3|0.0.0.1 0-1|0.0.0.1.0.1.0+0.0.0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:23.256
# ::node	0	park	5-6
# ::node	0.0	north	6-7
# ::node	0.0.0	city	7-8
# ::node	0.0.0.0	name	7-8
# ::node	0.0.0.0.0	"London"	7-8
# ::node	0.0.0.1	40	2-3
# ::node	0.0.0.1.0	temporal-quantity	14-15
# ::node	0.0.0.1.0.0	after	15-16
# ::node	0.0.0.1.0.0.0	coma	11-12
# ::node	0.0.0.1.0.0.1	accident	17-18
# ::node	0.0.0.1.0.0.1.0	date-entity	19-20
# ::node	0.0.0.1.0.0.1.0.0	1982	19-20
# ::node	0.0.0.1.0.1	date-entity	0-1
# ::node	0.0.0.1.0.1.0	6	0-1
# ::node	0.0.0.1.0.2	4	13-14
# ::node	0.0.0.1.0.3	month	14-15
# ::root	0	park
(p / park 
      :mod-of (n2 / north 
            :location-of (c2 / city 
                  :name (n / name 
                        :op1 "London") 
                  :quant (42 / 40 
                        :quant-of (t / temporal-quantity 
                              :op1 (a2 / after 
                                    :location-of (c / coma) 
                                    :op1 (a / accident 
                                          :time (d / date-entity 
                                                :year 1982))) 
                              :poss-of (d2 / date-entity 
                                    :month 6) 
                              :quant 4 
                              :unit (m / month))))))

# ::snt you dont have the right when you are a great driver to have a stupid accident which destroys the sporting spectacle he said
# ::tok you dont have the right when you are a great driver to have a stupid accident which destroys the sporting spectacle he said
# ::alignments 22-23|0 21-22|0.0 20-21|0.1 19-20|0.1.1 17-18|0.1.0 15-16|0.1.0.0 14-15|0.1.0.0.0 10-11|0.1.0.1.0+0.1.0.1 9-10|0.1.0.1.2 6-7|0.1.0.1.1 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:23.449
# ::node	0	say-01	22-23
# ::node	0.0	he	21-22
# ::node	0.1	spectacle	20-21
# ::node	0.1.0	destroy-01	17-18
# ::node	0.1.0.0	accident	15-16
# ::node	0.1.0.0.0	stupid	14-15
# ::node	0.1.0.1	person	10-11
# ::node	0.1.0.1.0	drive-01	10-11
# ::node	0.1.0.1.1	you	6-7
# ::node	0.1.0.1.2	great	9-10
# ::node	0.1.1	sport	19-20
# ::node	0.2	you	0-1
# ::root	0	say-01
# ::edge	accident	mod	stupid	0.1.0.0	0.1.0.0.0	
# ::edge	destroy-01	ARG0	accident	0.1.0	0.1.0.0	
# ::edge	destroy-01	ARG1	spectacle	0.1.0	0.1	
# ::edge	destroy-01	ARG2	person	0.1.0	0.1.0.1	
# ::edge	drive-01	ARG0	person	0.1.0.1.0	0.1.0.1	
# ::edge	person	domain	you	0.1.0.1	0.1.0.1.1	
# ::edge	person	mod	great	0.1.0.1	0.1.0.1.2	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	spectacle	0	0.1	
# ::edge	spectacle	mod	sport	0.1	0.1.1	
# ::edge	you	op1	say-01	0.2	0	
(s / say-01 
      :ARG0 (h / he) 
      :ARG1 (s2 / spectacle 
            :ARG1-of (d / destroy-01 
                  :ARG0 (a / accident 
                        :mod (s4 / stupid)) 
                  :ARG2 (p / person 
                        :ARG0-of (d2 / drive-01) 
                        :domain (y / you) 
                        :mod (g / great))) 
            :mod (s3 / sport)) 
      :op-of (y2 / you))

# ::snt pc jeffrey isaac an accident investigation officer said mr williams would have passed hazard signs warning that the road was being used for twoway traffic
# ::tok pc jeffrey isaac an accident investigation officer said mr williams would have passed hazard signs warning that the road was being used for twoway traffic
# ::alignments 24-25|0.1.0.0.1 21-22|0.1.0.0 18-19|0.1.0.0.0 15-16|0.1.0 14-15|0.1 7-8|0 6-7|0.0 5-6|0.0.0 4-5|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:23.499
# ::node	0	say-01	7-8
# ::node	0.0	officer	6-7
# ::node	0.0.0	investigate-01	5-6
# ::node	0.0.0.0	accident	4-5
# ::node	0.1	sign	14-15
# ::node	0.1.0	warn-01	15-16
# ::node	0.1.0.0	use-01	21-22
# ::node	0.1.0.0.0	road	18-19
# ::node	0.1.0.0.1	traffic	24-25
# ::root	0	say-01
# ::edge	investigate-01	ARG0	officer	0.0.0	0.0	
# ::edge	investigate-01	ARG1	accident	0.0.0	0.0.0.0	
# ::edge	say-01	ARG0	officer	0	0.0	
# ::edge	say-01	ARG1	sign	0	0.1	
# ::edge	use-01	ARG1	road	0.1.0.0	0.1.0.0.0	
# ::edge	use-01	ARG2	traffic	0.1.0.0	0.1.0.0.1	
# ::edge	warn-01	ARG0	sign	0.1.0	0.1	
# ::edge	warn-01	ARG1	use-01	0.1.0	0.1.0.0	
(s2 / say-01 
      :ARG0 (o / officer 
            :ARG0-of (i / investigate-01 
                  :ARG1 (a / accident))) 
      :ARG1 (s / sign 
            :ARG0-of (w / warn-01 
                  :ARG1 (u / use-01 
                        :ARG1 (r / road) 
                        :ARG2 (t / traffic)))))

# ::snt mr cannon who had been with the firm for one year before the accident said yesterday that on the day of the accident he checked and loaded the lorry with a colleague les rawlings
# ::tok mr cannon who had been with the firm for one year before the accident said yesterday that on the day of the accident he checked and loaded the lorry with a colleague les rawlings
# ::alignments 25-26|0.1 23-24|0.0 22-23|0.1.0.0 19-20|0.1.0 15-16|0.4 14-15|0 13-14|0.3 11-12|0.2 10-11|0.2.0 7-8|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:23.973
# ::node	0	say-01	14-15
# ::node	0.0	he	23-24
# ::node	0.1	and	25-26
# ::node	0.1.0	day	19-20
# ::node	0.1.0.0	accident	22-23
# ::node	0.1.0.0.0	firm	7-8
# ::node	0.2	before	11-12
# ::node	0.2.0	year	10-11
# ::node	0.3	accident	13-14
# ::node	0.4	yesterday	15-16
# ::root	0	say-01
# ::edge	accident	part	day	0.1.0.0	0.1.0	
# ::edge	and	time	day	0.1	0.1.0	
# ::edge	before	op1	say-01	0.2	0	
# ::edge	firm	poss	accident	0.1.0.0.0	0.1.0.0	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	and	0	0.1	
# ::edge	say-01	time	accident	0	0.3	
# ::edge	say-01	time	yesterday	0	0.4	
# ::edge	year	time	before	0.2.0	0.2	
(s / say-01 
      :ARG0 (h / he) 
      :ARG1 (a / and 
            :time (d / day 
                  :part-of (a2 / accident 
                        :poss-of (f / firm)))) 
      :op-of (b / before 
            :time-of (y2 / year)) 
      :time (a3 / accident) 
      :time (y / yesterday))

# ::snt only complete openness about this accident will reassure the public
# ::tok only complete openness about this accident will reassure the public
# ::alignments 9-10|0.3 5-6|0.0 4-5|0.0.0 2-3|0 1-2|0.1 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:23.994
# ::node	0	openness	2-3
# ::node	0.0	accident	5-6
# ::node	0.0.0	this	4-5
# ::node	0.1	complete	1-2
# ::node	0.2	only	0-1
# ::node	0.3	public	9-10
# ::root	0	openness
# ::edge	accident	mod	this	0.0	0.0.0	
# ::edge	openness	location	accident	0	0.0	
# ::edge	openness	mod	complete	0	0.1	
# ::edge	openness	mod	only	0	0.2	
# ::edge	public	poss	openness	0.3	0	
(o / openness 
      :location (a / accident 
            :mod (t / this)) 
      :mod (c / complete) 
      :mod (o2 / only) 
      :poss-of (p / public))

# ::snt last night roger poole chief union negotiator said we have always pledged not to adversely affect the accident and emergency service and that will continue because of the duty to patients
# ::tok last night roger poole chief union negotiator said we have always pledged not to adversely affect the accident and emergency service and that will continue because of the duty to patients
# ::alignments 30-31|0.0.0.0+0.0.0 28-29|0.0 25-26|0 24-25|0.1 21-22|0.1.0 19-20|0.1.0.0.2.1 18-19|0.1.0.0.2 17-18|0.1.0.0.2.0 15-16|0.1.0.0 14-15|0.1.0.0.1 11-12|0.1.0.0.0.0 10-11|0.1.0.0.0.0.1 8-9|0.1.0.0.0 7-8|0.1.0.0.0.0.0 6-7|0.1.0.0.0.0.0.0 5-6|0.1.0.0.0.0.0.0.1 4-5|0.1.0.0.0.0.0.0.1.0.0+0.1.0.0.0.0.0.0.1.0 1-2|0.1.0.0.0.0.0.0.0.0 0-1|0.1.0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:24.720
# ::node	0	cause-01	25-26
# ::node	0.0	duty	28-29
# ::node	0.0.0	have-rel-role-91	30-31
# ::node	0.0.0.0	patient	30-31
# ::node	0.1	continue-01	24-25
# ::node	0.1.0	and	21-22
# ::node	0.1.0.0	affect-01	15-16
# ::node	0.1.0.0.0	we	8-9
# ::node	0.1.0.0.0.0	pledge-01	11-12
# ::node	0.1.0.0.0.0.0	say-01	7-8
# ::node	0.1.0.0.0.0.0.0	negotiate-01	6-7
# ::node	0.1.0.0.0.0.0.0.0	last	0-1
# ::node	0.1.0.0.0.0.0.0.0.0	night	1-2
# ::node	0.1.0.0.0.0.0.0.1	union	5-6
# ::node	0.1.0.0.0.0.0.0.1.0	have-org-role-91	4-5
# ::node	0.1.0.0.0.0.0.0.1.0.0	chief	4-5
# ::node	0.1.0.0.0.0.1	always	10-11
# ::node	0.1.0.0.1	adverse	14-15
# ::node	0.1.0.0.2	and	18-19
# ::node	0.1.0.0.2.0	accident	17-18
# ::node	0.1.0.0.2.1	emergency	19-20
# ::root	0	cause-01
# ::edge	affect-01	ARG0	we	0.1.0.0	0.1.0.0.0	
# ::edge	affect-01	ARG1	and	0.1.0.0	0.1.0	
# ::edge	affect-01	manner	adverse	0.1.0.0	0.1.0.0.1	
# ::edge	and	op1	affect-01	0.1.0.0.2	0.1.0.0	
# ::edge	and	op1	continue-01	0.1.0	0.1	
# ::edge	and	op2	accident	0.1.0.0.2	0.1.0.0.2.0	
# ::edge	and	op3	emergency	0.1.0.0.2	0.1.0.0.2.1	
# ::edge	cause-01	ARG0	duty	0	0.0	
# ::edge	cause-01	ARG1	continue-01	0	0.1	
# ::edge	have-org-role-91	ARG1	union	0.1.0.0.0.0.0.0.1.0	0.1.0.0.0.0.0.0.1	
# ::edge	have-org-role-91	ARG2	chief	0.1.0.0.0.0.0.0.1.0	0.1.0.0.0.0.0.0.1.0.0	
# ::edge	have-rel-role-91	ARG1	duty	0.0.0	0.0	
# ::edge	have-rel-role-91	ARG2	patient	0.0.0	0.0.0.0	
# ::edge	negotiate-01	ARG0	last	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0.0.0	
# ::edge	negotiate-01	ARG1	union	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0.0.1	
# ::edge	night	mod	last	0.1.0.0.0.0.0.0.0.0	0.1.0.0.0.0.0.0.0	
# ::edge	pledge-01	ARG0	we	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	pledge-01	time	always	0.1.0.0.0.0	0.1.0.0.0.0.1	
# ::edge	say-01	ARG0	negotiate-01	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	say-01	ARG1	pledge-01	0.1.0.0.0.0.0	0.1.0.0.0.0	
(c / cause-01 
      :ARG0 (d / duty 
            :ARG1-of (h / have-rel-role-91 
                  :ARG2 (p / patient))) 
      :ARG1 (c2 / continue-01 
            :op-of (a / and 
                  :ARG1-of (a4 / affect-01 
                        :ARG0 (w / we 
                              :ARG0-of (p2 / pledge-01 
                                    :ARG1-of (s / say-01 
                                          :ARG0 (n / negotiate-01 
                                                :ARG0 (l / last 
                                                      :mod-of (n2 / night)) 
                                                :ARG1 (u / union 
                                                      :ARG1-of (h2 / have-org-role-91 
                                                            :ARG2 (c3 / chief))))) 
                                    :time (a6 / always))) 
                        :manner (a5 / adverse) 
                        :op-of (a2 / and 
                              :op1 (a3 / accident) 
                              :op2 (e / emergency))))))

# ::snt if you have an emergency such as an accident or a heart attack you will be treated immediately under the state system although it may be possible to have follow up treatment and aftercare on a private basis
# ::tok if you have an emergency such as an accident or a heart attack you will be treated immediately under the state system although it may be possible to have follow up treatment and aftercare on a private basis
# ::alignments 36-37|0.0.0.0.0.0.0.0.1.0.1 32-33|0 31-32|0.0 29-30|0.0.0 26-27|0.0.0.0.0 24-25|0.0.0.0.0.0.1+0.0.0.0.0.0 23-24|0.0.0.0 21-22|0.0.0.0.0.0.0 20-21|0.0.0.0.0.0.0.1 17-18|0.0.0.0.0.0.0.0.2 16-17|0.0.0.0.0.0.0.0 13-14|0.0.0.0.0.0.0.0.1 12-13|0.0.0.0.0.0.0.0.1.0 11-12|0.0.0.0.0.0.0.0.1.0.0 9-10|0.0.0.0.0.0.0.0.1.0.2 8-9|0.0.0.0.0.0.0.0.1.0.2.1 5-6|0.0.0.0.0.0.0.0.1.0.2.0 4-5|0.0.0.0.0.0.0.0.1.1 1-2|0.0.0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:25.701
# ::node	0	and	32-33
# ::node	0.0	treat-03	31-32
# ::node	0.0.0	follow-02	29-30
# ::node	0.0.0.0	it	23-24
# ::node	0.0.0.0.0	possible	26-27
# ::node	0.0.0.0.0.0	date-entity	24-25
# ::node	0.0.0.0.0.0.0	system	21-22
# ::node	0.0.0.0.0.0.0.0	treat-01	16-17
# ::node	0.0.0.0.0.0.0.0.0	you	1-2
# ::node	0.0.0.0.0.0.0.0.1	you	13-14
# ::node	0.0.0.0.0.0.0.0.1.0	attack-01	12-13
# ::node	0.0.0.0.0.0.0.0.1.0.0	heart	11-12
# ::node	0.0.0.0.0.0.0.0.1.0.1	private	36-37
# ::node	0.0.0.0.0.0.0.0.1.0.2	or	9-10
# ::node	0.0.0.0.0.0.0.0.1.0.2.0	such	5-6
# ::node	0.0.0.0.0.0.0.0.1.0.2.1	accident	8-9
# ::node	0.0.0.0.0.0.0.0.1.1	emergency	4-5
# ::node	0.0.0.0.0.0.0.0.2	immediate	17-18
# ::node	0.0.0.0.0.0.0.1	state	20-21
# ::node	0.0.0.0.0.0.1	5	24-25
# ::root	0	and
# ::edge	and	op1	treat-03	0	0.0	
# ::edge	attack-01	ARG0	you	0.0.0.0.0.0.0.0.1.0	0.0.0.0.0.0.0.0.1	
# ::edge	attack-01	ARG1	heart	0.0.0.0.0.0.0.0.1.0	0.0.0.0.0.0.0.0.1.0.0	
# ::edge	date-entity	domain	possible	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	date-entity	month	5	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	emergency	name	you	0.0.0.0.0.0.0.0.1.1	0.0.0.0.0.0.0.0.1	
# ::edge	follow-02	ARG0	it	0.0.0	0.0.0.0	
# ::edge	follow-02	ARG1	treat-03	0.0.0	0.0	
# ::edge	or	op1	such	0.0.0.0.0.0.0.0.1.0.2	0.0.0.0.0.0.0.0.1.0.2.0	
# ::edge	or	op2	accident	0.0.0.0.0.0.0.0.1.0.2	0.0.0.0.0.0.0.0.1.0.2.1	
# ::edge	or	op3	attack-01	0.0.0.0.0.0.0.0.1.0.2	0.0.0.0.0.0.0.0.1.0	
# ::edge	possible	domain	it	0.0.0.0.0	0.0.0.0	
# ::edge	private	op1	attack-01	0.0.0.0.0.0.0.0.1.0.1	0.0.0.0.0.0.0.0.1.0	
# ::edge	system	mod	date-entity	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	system	mod	state	0.0.0.0.0.0.0	0.0.0.0.0.0.0.1	
# ::edge	treat-01	ARG0	you	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0	
# ::edge	treat-01	ARG1	you	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.1	
# ::edge	treat-01	ARG2	system	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	treat-01	time	immediate	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.2	
(a / and 
      :op1 (t / treat-03 
            :ARG1-of (f / follow-02 
                  :ARG0 (i / it 
                        :domain-of (p2 / possible 
                              :domain-of (d / date-entity 
                                    :mod-of (s / system 
                                          :ARG2-of (t2 / treat-01 
                                                :ARG0 (y2 / you) 
                                                :ARG1 (y / you 
                                                      :ARG0-of (a2 / attack-01 
                                                            :ARG1 (h / heart) 
                                                            :op-of (p / private) 
                                                            :op-of (o / or 
                                                                  :op1 (s3 / such) 
                                                                  :op2 (a3 / accident))) 
                                                      :name-of (e / emergency)) 
                                                :time (i2 / immediate)) 
                                          :mod (s2 / state)) 
                                    :month 5))))))

# ::snt john prescott labours transport spokesman yesterday demanded that ministers reopen the inquiry after unveiling leaked papers which appear to show that the 1986 official accident report differed markedly from a confidential early draft
# ::tok john prescott labours transport spokesman yesterday demanded that ministers reopen the inquiry after unveiling leaked papers which appear to show that the 1986 official accident report differed markedly from a confidential early draft
# ::alignments 32-33|0.0 31-32|0.0.1 30-31|0 25-26|0.0.0.0.0.0.0.0 24-25|0.0.0.0.0.0.0.0.0.0 23-24|0.0.0.0.0.0.0.0.0.1+0.0.0.0.0.0.0.0.0 22-23|0.0.0.0.0.0.0.0.1.0+0.0.0.0.0.0.0.0.1 19-20|0.0.0.0.0.0 17-18|0.0.0.0.0.0.0 15-16|0.0.0.0.0 14-15|0.0.0.0 12-13|0.0.0.2 11-12|0.0.0 8-9|0.0.0.1.0.0.0.0.0+0.0.0.1.0.0.0.0 6-7|0.0.0.1 5-6|0.0.0.1.0 4-5|0.0.0.1.0.0.1+0.0.0.1.0.0 3-4|0.0.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:26.142
# ::node	0	confidential	30-31
# ::node	0.0	draft-01	32-33
# ::node	0.0.0	inquire-01	11-12
# ::node	0.0.0.0	leak-01	14-15
# ::node	0.0.0.0.0	paper	15-16
# ::node	0.0.0.0.0.0	show-01	19-20
# ::node	0.0.0.0.0.0.0	appear-02	17-18
# ::node	0.0.0.0.0.0.0.0	report	25-26
# ::node	0.0.0.0.0.0.0.0.0	have-org-role-91	23-24
# ::node	0.0.0.0.0.0.0.0.0.0	accident	24-25
# ::node	0.0.0.0.0.0.0.0.0.1	official	23-24
# ::node	0.0.0.0.0.0.0.0.1	date-entity	22-23
# ::node	0.0.0.0.0.0.0.0.1.0	1986	22-23
# ::node	0.0.0.1	demand-01	6-7
# ::node	0.0.0.1.0	yesterday	5-6
# ::node	0.0.0.1.0.0	have-org-role-91	4-5
# ::node	0.0.0.1.0.0.0	transport-01	3-4
# ::node	0.0.0.1.0.0.0.0	have-org-role-91	8-9
# ::node	0.0.0.1.0.0.0.0.0	minister	8-9
# ::node	0.0.0.1.0.0.1	spokesman	4-5
# ::node	0.0.0.2	after	12-13
# ::node	0.0.1	early	31-32
# ::root	0	confidential
(c / confidential 
      :mod-of (d / draft-01 
            :ARG1 (i / inquire-01 
                  :ARG1 (l / leak-01 
                        :ARG1 (p / paper 
                              :ARG0-of (s / show-01 
                                    :ARG2-of (a2 / appear-02 
                                          :ARG0 (r / report 
                                                :mod (h / have-org-role-91 
                                                      :ARG1 (a / accident) 
                                                      :ARG2 (o / official)) 
                                                :time (d2 / date-entity 
                                                      :year 1986)))))) 
                  :ARG1-of (d3 / demand-01 
                        :time (y / yesterday 
                              :ARG0-of (h3 / have-org-role-91 
                                    :ARG1 (t / transport-01 
                                          :ARG1 (h2 / have-org-role-91 
                                                :ARG2 (m / minister))) 
                                    :ARG2 (s2 / spokesman)))) 
                  :time (a3 / after)) 
            :time (e / early)))

# ::snt first to ensure uniform rules applied to air accidents wherever they occurred thus eliminating the huge costs and delays in resolving where and under which law the claims should be brought
# ::tok first to ensure uniform rules applied to air accidents wherever they occurred thus eliminating the huge costs and delays in resolving where and under which law the claims should be brought
# ::alignments 28-29|0.0.0.0 27-28|0.0.0.0.0 25-26|0.0.0.0.1 22-23|0.0.0 20-21|0.0 18-19|0 17-18|0.0.2.1 16-17|0.0.1 15-16|0.0.1.0 13-14|0.0.2 10-11|0.0.2.0 9-10|0.0.2.0.0.3 8-9|0.0.2.0.0.2 7-8|0.0.2.0.0.2.0 5-6|0.0.2.0.0 4-5|0.0.2.0.0.0 3-4|0.0.2.0.0.0.0 2-3|0.0.2.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:26.859
# ::node	0	delay-01	18-19
# ::node	0.0	resolve-01	20-21
# ::node	0.0.0	and	22-23
# ::node	0.0.0.0	recommend-01	28-29
# ::node	0.0.0.0.0	claim-01	27-28
# ::node	0.0.0.0.1	law	25-26
# ::node	0.0.1	cost-01	16-17
# ::node	0.0.1.0	huge	15-16
# ::node	0.0.2	eliminate-01	13-14
# ::node	0.0.2.0	they	10-11
# ::node	0.0.2.0.0	apply-01	5-6
# ::node	0.0.2.0.0.0	rule	4-5
# ::node	0.0.2.0.0.0.0	uniform	3-4
# ::node	0.0.2.0.0.1	ensure-01	2-3
# ::node	0.0.2.0.0.2	accident	8-9
# ::node	0.0.2.0.0.2.0	air	7-8
# ::node	0.0.2.0.0.3	wherever	9-10
# ::node	0.0.2.1	and	17-18
# ::root	0	delay-01
# ::edge	accident	mod	air	0.0.2.0.0.2	0.0.2.0.0.2.0	
# ::edge	apply-01	ARG0	they	0.0.2.0.0	0.0.2.0	
# ::edge	apply-01	ARG1	rule	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	apply-01	ARG2	accident	0.0.2.0.0	0.0.2.0.0.2	
# ::edge	apply-01	frequency	wherever	0.0.2.0.0	0.0.2.0.0.3	
# ::edge	claim-01	ARG1	recommend-01	0.0.0.0.0	0.0.0.0	
# ::edge	cost-01	ARG1	resolve-01	0.0.1	0.0	
# ::edge	cost-01	mod	huge	0.0.1	0.0.1.0	
# ::edge	delay-01	ARG1	resolve-01	0	0.0	
# ::edge	eliminate-01	ARG0	they	0.0.2	0.0.2.0	
# ::edge	eliminate-01	ARG1	and	0.0.2	0.0.2.1	
# ::edge	eliminate-01	ARG2	resolve-01	0.0.2	0.0	
# ::edge	ensure-01	ARG1	apply-01	0.0.2.0.0.1	0.0.2.0.0	
# ::edge	recommend-01	ARG1	and	0.0.0.0	0.0.0	
# ::edge	recommend-01	condition	law	0.0.0.0	0.0.0.0.1	
# ::edge	resolve-01	ARG1	and	0.0	0.0.0	
# ::edge	rule	mod	uniform	0.0.2.0.0.0	0.0.2.0.0.0.0	
(d / delay-01 
      :ARG1 (r2 / resolve-01 
            :ARG1 (a / and 
                  :ARG1-of (r / recommend-01 
                        :ARG1-of (c / claim-01) 
                        :condition (l / law))) 
            :ARG1-of (c2 / cost-01 
                  :mod (h / huge)) 
            :ARG2-of (e / eliminate-01 
                  :ARG0 (t / they 
                        :ARG0-of (a5 / apply-01 
                              :ARG1 (r3 / rule 
                                    :mod (u / uniform)) 
                              :ARG1-of (e2 / ensure-01) 
                              :ARG2 (a3 / accident 
                                    :mod (a4 / air)) 
                              :frequency (w / wherever))) 
                  :ARG1 (a2 / and))))

# ::snt sir myles humphries chairman of northern ireland railways said i must say i am horrified that this accident has happened
# ::tok sir myles humphries chairman of northern ireland railways said i must say i am horrified that this accident has happened
# ::alignments 19-20|0.1.1.0 17-18|0.1.1.0.0 16-17|0.1.1.0.0.0 12-13|0.1.1 11-12|0.1 9-10|0.1.0 8-9|0 7-8|0.0.0.0 5-7|0.0.0.0.0.0.0+0.0.0.0.0.0.1+0.0.0.0.0.0+0.0.0.0.0 3-4|0.0+0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:27.287
# ::node	0	say-01	8-9
# ::node	0.0	chairman	3-4
# ::node	0.0.0	have-org-role-91	3-4
# ::node	0.0.0.0	railway	7-8
# ::node	0.0.0.0.0	country	5-7
# ::node	0.0.0.0.0.0	name	5-7
# ::node	0.0.0.0.0.0.0	"ireland"	5-7
# ::node	0.0.0.0.0.0.1	"northern"	5-7
# ::node	0.1	say-01	11-12
# ::node	0.1.0	i	9-10
# ::node	0.1.1	i	12-13
# ::node	0.1.1.0	happen-01	19-20
# ::node	0.1.1.0.0	accident	17-18
# ::node	0.1.1.0.0.0	this	16-17
# ::root	0	say-01
# ::edge	accident	mod	this	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	country	name	name	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	happen-01	ARG1	accident	0.1.1.0	0.1.1.0.0	
# ::edge	happen-01	ARG2	i	0.1.1.0	0.1.1	
# ::edge	have-org-role-91	ARG1	railway	0.0.0	0.0.0.0	
# ::edge	have-org-role-91	ARG2	chairman	0.0.0	0.0	
# ::edge	name	op1	"ireland"	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	name	op2	"northern"	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	railway	mod	country	0.0.0.0	0.0.0.0.0	
# ::edge	say-01	ARG0	chairman	0	0.0	
# ::edge	say-01	ARG0	i	0.1	0.1.0	
# ::edge	say-01	ARG1	say-01	0	0.1	
# ::edge	say-01	ARG2	i	0.1	0.1.1	
(s2 / say-01 
      :ARG0 (c2 / chairman 
            :ARG2-of (h2 / have-org-role-91 
                  :ARG1 (r / railway 
                        :mod (c / country 
                              :name (n / name 
                                    :op1 "ireland" 
                                    :op2 "northern"))))) 
      :ARG1 (s / say-01 
            :ARG0 (i2 / i) 
            :ARG2 (i / i 
                  :ARG2-of (h / happen-01 
                        :ARG1 (a / accident 
                              :mod (t / this))))))

# ::snt as assessed by accidents or errors dash
# ::tok as assessed by accidents or errors dash
# ::alignments 5-6|0.1 4-5|0 3-4|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:27.295
# ::node	0	or	4-5
# ::node	0.0	accident	3-4
# ::node	0.1	error	5-6
# ::root	0	or
# ::edge	or	op1	accident	0	0.0	
# ::edge	or	op2	error	0	0.1	
(o / or 
      :op1 (a / accident) 
      :op2 (e / error))

# ::snt derek warwick has been passed fit to drive in the british gp after damaging vertebrae in a karting accident
# ::tok derek warwick has been passed fit to drive in the british gp after damaging vertebrae in a karting accident
# ::alignments 18-19|0.0.0 13-14|0 12-13|0.0 7-8|0.0.1 5-6|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:27.320
# ::node	0	damage-01	13-14
# ::node	0.0	after	12-13
# ::node	0.0.0	accident	18-19
# ::node	0.0.1	drive-01	7-8
# ::node	0.0.1.0	fit-01	5-6
# ::root	0	damage-01
(d / damage-01 
      :op-of (a2 / after 
            :op1 (a / accident) 
            :time-of (d2 / drive-01 
                  :ARG1-of (f / fit-01))))

# ::snt nigel kelly 35 of rokeby drive kenton newcastle who was not present is charged with driving on the a34 at harwell without due care and attention failing to report a traffic accident and failing to stop at the scene
# ::tok nigel kelly 35 of rokeby drive kenton newcastle who was not present is charged with driving on the a34 at harwell without due care and attention failing to report a traffic accident and failing to stop at the scene
# ::alignments 38-39|0.1.1.1.0 35-36|0.1.1.1 33-34|0.1.1 32-33|0.1 31-32|0.1.0.0 30-31|0.1.0.0.0 28-29|0.1.0.1 26-27|0.1.0 25-26|0.1.1.0 24-25|0.1.0.2 23-24|0.1.0.2.0 15-16|0.0 13-14|0 11-12|0.2 5-6|0.2.0 2-3|0.1.0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:27.767
# ::node	0	charge-05	13-14
# ::node	0.0	drive-01	15-16
# ::node	0.1	and	32-33
# ::node	0.1.0	fail-01	26-27
# ::node	0.1.0.0	accident	31-32
# ::node	0.1.0.0.0	traffic	30-31
# ::node	0.1.0.1	report	28-29
# ::node	0.1.0.2	and	24-25
# ::node	0.1.0.2.0	care-01	23-24
# ::node	0.1.0.2.0.0	35	2-3
# ::node	0.1.1	fail-01	33-34
# ::node	0.1.1.0	attention	25-26
# ::node	0.1.1.1	stop-01	35-36
# ::node	0.1.1.1.0	scene	38-39
# ::node	0.2	present	11-12
# ::node	0.2.0	drive-01	5-6
# ::root	0	charge-05
# ::edge	accident	location	traffic	0.1.0.0	0.1.0.0.0	
# ::edge	and	op1	care-01	0.1.0.2	0.1.0.2.0	
# ::edge	and	op1	fail-01	0.1	0.1.0	
# ::edge	and	op2	fail-01	0.1	0.1.1	
# ::edge	and	op2	fail-01	0.1.0.2	0.1.0	
# ::edge	care-01	ARG1	35	0.1.0.2.0	0.1.0.2.0.0	
# ::edge	charge-05	ARG1	drive-01	0	0.0	
# ::edge	charge-05	ARG2	and	0	0.1	
# ::edge	charge-05	manner	present	0	0.2	
# ::edge	drive-01	ARG1	present	0.2.0	0.2	
# ::edge	fail-01	ARG0	attention	0.1.1	0.1.1.0	
# ::edge	fail-01	ARG1	accident	0.1.0	0.1.0.0	
# ::edge	fail-01	ARG2	report	0.1.0	0.1.0.1	
# ::edge	fail-01	ARG2	stop-01	0.1.1	0.1.1.1	
# ::edge	stop-01	time	scene	0.1.1.1	0.1.1.1.0	
(c2 / charge-05 
      :ARG1 (d / drive-01) 
      :ARG2 (a / and 
            :op1 (f2 / fail-01 
                  :ARG1 (a2 / accident 
                        :location (t / traffic)) 
                  :ARG2 (r / report) 
                  :op-of (a4 / and 
                        :op1 (c / care-01 
                              :ARG1 35))) 
            :op2 (f / fail-01 
                  :ARG0 (a3 / attention) 
                  :ARG2 (s2 / stop-01 
                        :time (s / scene)))) 
      :manner (p / present 
            :ARG1-of (d2 / drive-01)))

# ::snt instead the government announced last month that there is to be a fatal accident inquiry into last decembers disaster in which 270 people died when pan am flight 103 was brought down by a terrorist bomb
# ::tok instead the government announced last month that there is to be a fatal accident inquiry into last decembers disaster in which 270 people died when pan am flight 103 was brought down by a terrorist bomb
# ::alignments 35-36|0.0.0 34-35|0.0.0.0 31-32|0.0.1.0.0 25-26|0.0.1.0.1.0 23-24|0.0.1.0 18-19|0.0.1 16-17|0.0.1.1 14-15|0.0 13-14|0.0.2 12-13|0 5-6|0.0.1.0.1.2.0+0.0.1.0.1.2 4-5|0.0.1.0.1.2.0.0 3-4|0.0.1.0.1 0-1|0.0.1.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:28.242
# ::node	0	fatal	12-13
# ::node	0.0	inquire-01	14-15
# ::node	0.0.0	bomb	35-36
# ::node	0.0.0.0	terrorist	34-35
# ::node	0.0.1	disaster	18-19
# ::node	0.0.1.0	die-01	23-24
# ::node	0.0.1.0.0	down	31-32
# ::node	0.0.1.0.1	announce-01	3-4
# ::node	0.0.1.0.1.0	pan	25-26
# ::node	0.0.1.0.1.1	instead	0-1
# ::node	0.0.1.0.1.2	temporal-quantity	5-6
# ::node	0.0.1.0.1.2.0	month	5-6
# ::node	0.0.1.0.1.2.0.0	last	4-5
# ::node	0.0.1.1	last	16-17
# ::node	0.0.2	accident	13-14
# ::root	0	fatal
(f / fatal 
      :mod-of (i / inquire-01 
            :ARG1 (b / bomb 
                  :mod (t / terrorist)) 
            :ARG2 (d3 / disaster 
                  :ARG1-of (d2 / die-01 
                        :ARG0 (d / down) 
                        :ARG2 (a2 / announce-01 
                              :ARG0 (p / pan) 
                              :ARG1 (i2 / instead) 
                              :time (t2 / temporal-quantity 
                                    :unit (m / month 
                                          :mod (l2 / last))))) 
                  :mod (l / last)) 
            :mod (a / accident)))

# ::snt i started training sprint horses almost by accident he recalls
# ::tok i started training sprint horses almost by accident he recalls
# ::alignments 9-10|0.1.1 8-9|0.1.1.0 7-8|0.1.1.1 5-6|0.1.1.2 4-5|0.1 2-3|0.1.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:28.415
# ::node	0	start-01	1-2
# ::node	0.0	i	0-1
# ::node	0.1	horse	4-5
# ::node	0.1.0	train-01	2-3
# ::node	0.1.1	recall-02	9-10
# ::node	0.1.1.0	he	8-9
# ::node	0.1.1.1	accident	7-8
# ::node	0.1.1.2	almost	5-6
# ::root	0	start-01
# ::edge	recall-02	ARG0	he	0.1.1	0.1.1.0	
# ::edge	recall-02	ARG1	accident	0.1.1	0.1.1.1	
# ::edge	recall-02	ARG2	horse	0.1.1	0.1	
# ::edge	recall-02	time	almost	0.1.1	0.1.1.2	
# ::edge	start-01	ARG0	i	0	0.0	
# ::edge	start-01	ARG1	horse	0	0.1	
# ::edge	train-01	ARG0	horse	0.1.0	0.1	
(s / start-01 
      :ARG0 (i / i) 
      :ARG1 (h2 / horse 
            :ARG0-of (t / train-01) 
            :ARG2-of (r / recall-02 
                  :ARG0 (h / he) 
                  :ARG1 (a / accident) 
                  :time (a2 / almost))))

# ::snt we also gave other reasons at the time vocal soundum principally the road because the access fronting onto the a forty four there by the proposed site thered been a number of accidents and during the consultation period there were actually two people killed bang opposite the proposed entrance to that site at swingswang
# ::tok we also gave other reasons at the time vocal soundum principally the road because the access fronting onto the a forty four there by the proposed site thered been a number of accidents and during the consultation period there were actually two people killed bang opposite the proposed entrance to that site at swingswang
# ::alignments 51-52|0.0.2 48-49|0.0.1.2.2 47-48|0.0.1.2.2.0 45-46|0.0.1.2 44-45|0.0.1 43-44|0.0 41-42|0.0.1.2.1 40-41|0.0.1.2.0 37-38|0.0.1.0.0.0.0.0.0 36-37|0.0.1.0.0.0.0.0 33-34|0.0.1.0.0 32-33|0.0.1.0.0.0.0 30-31|0.0.1.0.0.0 26-27|0.0.1.2.2.0.0 25-26|0.0.1.2.2.0.0.0 21-22|0.0.1.1 17-18|0.0.1.0.1 15-16|0.0.1.0 13-14|0 12-13|0.1 10-11|0.0.1.2.2.0.0.0.2 8-9|0.0.1.2.2.0.0.0.3 7-8|0.0.1.2.2.0.0.0.1 4-5|0.1.0 3-4|0.1.0.0 1-2|0.0.1.2.2.0.0.0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:29.830
# ::node	0	cause-01	13-14
# ::node	0.0	kill-01	43-44
# ::node	0.0.0	we	0-1
# ::node	0.0.1	bang-01	44-45
# ::node	0.0.1.0	access-01	15-16
# ::node	0.0.1.0.0	and	33-34
# ::node	0.0.1.0.0.0	number	30-31
# ::node	0.0.1.0.0.0.0	accident	32-33
# ::node	0.0.1.0.0.0.0.0	consult-01	36-37
# ::node	0.0.1.0.0.0.0.0.0	period	37-38
# ::node	0.0.1.0.1	onto	17-18
# ::node	0.0.1.1	4	21-22
# ::node	0.0.1.2	opposite-41	45-46
# ::node	0.0.1.2.0	actual	40-41
# ::node	0.0.1.2.1	2	41-42
# ::node	0.0.1.2.2	entrance	48-49
# ::node	0.0.1.2.2.0	propose-01	47-48
# ::node	0.0.1.2.2.0.0	site	26-27
# ::node	0.0.1.2.2.0.0.0	propose-01	25-26
# ::node	0.0.1.2.2.0.0.0.0	also	1-2
# ::node	0.0.1.2.2.0.0.0.1	time	7-8
# ::node	0.0.1.2.2.0.0.0.2	principal	10-11
# ::node	0.0.1.2.2.0.0.0.3	vocal	8-9
# ::node	0.0.2	site	51-52
# ::node	0.1	road	12-13
# ::node	0.1.0	reason	4-5
# ::node	0.1.0.0	other	3-4
# ::root	0	cause-01
# ::edge	access-01	time	onto	0.0.1.0	0.0.1.0.1	
# ::edge	accident	quant	number	0.0.1.0.0.0.0	0.0.1.0.0.0	
# ::edge	also	op1	propose-01	0.0.1.2.2.0.0.0.0	0.0.1.2.2.0.0.0	
# ::edge	and	domain	access-01	0.0.1.0.0	0.0.1.0	
# ::edge	and	quant	number	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	bang-01	ARG0	access-01	0.0.1	0.0.1.0	
# ::edge	bang-01	ARG1	4	0.0.1	0.0.1.1	
# ::edge	bang-01	time	opposite-41	0.0.1	0.0.1.2	
# ::edge	cause-01	ARG0	kill-01	0	0.0	
# ::edge	cause-01	ARG1	road	0	0.1	
# ::edge	consult-01	ARG0	period	0.0.1.0.0.0.0.0	0.0.1.0.0.0.0.0.0	
# ::edge	consult-01	ARG1	accident	0.0.1.0.0.0.0.0	0.0.1.0.0.0.0	
# ::edge	kill-01	ARG0	we	0.0	0.0.0	
# ::edge	kill-01	ARG1	bang-01	0.0	0.0.1	
# ::edge	kill-01	purpose	site	0.0	0.0.2	
# ::edge	opposite-41	ARG0	actual	0.0.1.2	0.0.1.2.0	
# ::edge	opposite-41	ARG1	2	0.0.1.2	0.0.1.2.1	
# ::edge	opposite-41	ARG2	entrance	0.0.1.2	0.0.1.2.2	
# ::edge	principal	op1	propose-01	0.0.1.2.2.0.0.0.2	0.0.1.2.2.0.0.0	
# ::edge	propose-01	ARG0	site	0.0.1.2.2.0	0.0.1.2.2.0.0	
# ::edge	propose-01	ARG1	entrance	0.0.1.2.2.0	0.0.1.2.2	
# ::edge	propose-01	ARG1	site	0.0.1.2.2.0.0.0	0.0.1.2.2.0.0	
# ::edge	reason	mod	other	0.1.0	0.1.0.0	
# ::edge	road	consist	reason	0.1	0.1.0	
# ::edge	time	op1	propose-01	0.0.1.2.2.0.0.0.1	0.0.1.2.2.0.0.0	
# ::edge	vocal	op1	propose-01	0.0.1.2.2.0.0.0.3	0.0.1.2.2.0.0.0	
(c2 / cause-01 
      :ARG0 (k / kill-01 
            :ARG0 (w / we) 
            :ARG1 (b / bang-01 
                  :ARG0 (a4 / access-01 
                        :domain-of (a2 / and 
                              :quant (n / number 
                                    :quant-of (a3 / accident 
                                          :ARG1-of (c / consult-01 
                                                :ARG0 (p2 / period))))) 
                        :time (o2 / onto)) 
                  :ARG1 4 
                  :time (o / opposite-41 
                        :ARG0 (a / actual) 
                        :ARG1 2 
                        :ARG2 (e / entrance 
                              :ARG1-of (p / propose-01 
                                    :ARG0 (s2 / site 
                                          :ARG1-of (p3 / propose-01 
                                                :op-of (a5 / also) 
                                                :op-of (t / time) 
                                                :op-of (p4 / principal) 
                                                :op-of (v / vocal))))))) 
            :purpose (s / site)) 
      :ARG1 (r / road 
            :consist (r2 / reason 
                  :mod (o3 / other))))

# ::snt these are agreeing to provide an accident and emergency service operating their radios as agreed nine months ago by informing control they were available after finishing a job observing a single manning agreement reached last month
# ::tok these are agreeing to provide an accident and emergency service operating their radios as agreed nine months ago by informing control they were available after finishing a job observing a single manning agreement reached last month
# ::alignments 35-36|0.1.0.0+0.1.0.0.1 34-35|0.1.0.0.0 33-34|0.1.0 32-33|0.1 30-31|0.1.1 28-29|0 27-28|0.0 25-26|0.2 24-25|0.2.1 23-24|0.2.1.0 21-22|0.2.0 20-21|0.2.0.0 16-17|0.2.0.0.0.0.0+0.2.0.0.0.0 15-16|0.2.0.0.0 14-15|0.2.0.0.1 10-11|0.2.0.0.1.0 8-9|0.2.0.0.1.0.0.2 7-8|0.2.0.0.1.0.0 6-7|0.2.0.0.1.0.0.1 4-5|0.2.0.0.1.0.0.0.0 2-3|0.2.0.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:31.657
# ::node	0	observe-01	28-29
# ::node	0.0	job	27-28
# ::node	0.1	agree-01	32-33
# ::node	0.1.0	reach-01	33-34
# ::node	0.1.0.0	month	35-36
# ::node	0.1.0.0.0	last	34-35
# ::node	0.1.0.0.1	temporal-quantity	35-36
# ::node	0.1.1	single	30-31
# ::node	0.2	finish-01	25-26
# ::node	0.2.0	they	21-22
# ::node	0.2.0.0	control-01	20-21
# ::node	0.2.0.0.0	9	15-16
# ::node	0.2.0.0.0.0	temporal-quantity	16-17
# ::node	0.2.0.0.0.0.0	month	16-17
# ::node	0.2.0.0.1	agree-01	14-15
# ::node	0.2.0.0.1.0	operate-01	10-11
# ::node	0.2.0.0.1.0.0	and	7-8
# ::node	0.2.0.0.1.0.0.0	agree-01	2-3
# ::node	0.2.0.0.1.0.0.0.0	provide-01	4-5
# ::node	0.2.0.0.1.0.0.1	accident	6-7
# ::node	0.2.0.0.1.0.0.2	emergency	8-9
# ::node	0.2.1	after	24-25
# ::node	0.2.1.0	available	23-24
# ::root	0	observe-01
# ::edge	after	op1	finish-01	0.2.1	0.2	
# ::edge	agree-01	ARG1	and	0.2.0.0.1.0.0.0	0.2.0.0.1.0.0	
# ::edge	agree-01	ARG1	control-01	0.2.0.0.1	0.2.0.0	
# ::edge	agree-01	ARG2	provide-01	0.2.0.0.1.0.0.0	0.2.0.0.1.0.0.0.0	
# ::edge	agree-01	mod	single	0.1	0.1.1	
# ::edge	and	op1	accident	0.2.0.0.1.0.0	0.2.0.0.1.0.0.1	
# ::edge	and	op2	emergency	0.2.0.0.1.0.0	0.2.0.0.1.0.0.2	
# ::edge	available	time	after	0.2.1.0	0.2.1	
# ::edge	control-01	ARG0	they	0.2.0.0	0.2.0	
# ::edge	control-01	ARG1	9	0.2.0.0	0.2.0.0.0	
# ::edge	finish-01	ARG0	they	0.2	0.2.0	
# ::edge	finish-01	ARG1	observe-01	0.2	0	
# ::edge	month	mod	last	0.1.0.0	0.1.0.0.0	
# ::edge	observe-01	ARG0	job	0	0.0	
# ::edge	observe-01	ARG1	agree-01	0	0.1	
# ::edge	operate-01	ARG1	and	0.2.0.0.1.0	0.2.0.0.1.0.0	
# ::edge	operate-01	ARG2	agree-01	0.2.0.0.1.0	0.2.0.0.1	
# ::edge	reach-01	ARG1	agree-01	0.1.0	0.1	
# ::edge	reach-01	time	month	0.1.0	0.1.0.0	
# ::edge	temporal-quantity	quant	9	0.2.0.0.0.0	0.2.0.0.0	
# ::edge	temporal-quantity	unit	month	0.1.0.0.1	0.1.0.0	
# ::edge	temporal-quantity	unit	month	0.2.0.0.0.0	0.2.0.0.0.0.0	
(o / observe-01 
      :ARG0 (j / job) 
      :ARG1 (a / agree-01 
            :ARG1-of (r / reach-01 
                  :time (m / month 
                        :mod (l / last) 
                        :unit-of (t / temporal-quantity))) 
            :mod (s / single)) 
      :ARG1-of (f / finish-01 
            :ARG0 (t2 / they 
                  :ARG0-of (c / control-01 
                        :ARG1 (9 / 9 
                              :quant-of (t3 / temporal-quantity 
                                    :unit (m2 / month))) 
                        :ARG1-of (a4 / agree-01 
                              :ARG2-of (o2 / operate-01 
                                    :ARG1 (a5 / and 
                                          :ARG1-of (a7 / agree-01 
                                                :ARG2 (p / provide-01)) 
                                          :op1 (a6 / accident) 
                                          :op2 (e / emergency)))))) 
            :op-of (a2 / after 
                  :time-of (a3 / available))))

# ::snt one incident in the reactor at greifswald nearly caused a meltdown in 1976 an accident that occurring close to densely populated parts of western and central europe would have been a disaster of much greater magnitude than chernobyl
# ::tok one incident in the reactor at greifswald nearly caused a meltdown in 1976 an accident that occurring close to densely populated parts of western and central europe would have been a disaster of much greater magnitude than chernobyl
# ::alignments 35-36|0.3.0.0.0 34-35|0.3.0.0.0.0 33-34|0.4 31-32|0.1.0 26-27|0.3.3.0.0+0.3.3.0+0.3.3 25-26|0.3.2 24-25|0.3 23-24|0.3.1.0.0+0.3.1.0+0.3.1 21-22|0.3.0 20-21|0.3.0.0 14-15|0.5 12-13|0.6.0+0.6 10-11|0.1 8-9|0 7-8|0.2 4-5|0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:32.061
# ::node	0	cause-01	8-9
# ::node	0.0	incident	1-2
# ::node	0.0.0	reactor	4-5
# ::node	0.1	meltdown	10-11
# ::node	0.1.0	disaster	31-32
# ::node	0.2	nearly	7-8
# ::node	0.3	and	24-25
# ::node	0.3.0	part	21-22
# ::node	0.3.0.0	populate-01	20-21
# ::node	0.3.0.0.0	magnitude	35-36
# ::node	0.3.0.0.0.0	great	34-35
# ::node	0.3.1	world-region	23-24
# ::node	0.3.1.0	name	23-24
# ::node	0.3.1.0.0	"West"	23-24
# ::node	0.3.2	central	25-26
# ::node	0.3.3	continent	26-27
# ::node	0.3.3.0	name	26-27
# ::node	0.3.3.0.0	"Europe"	26-27
# ::node	0.4	much	33-34
# ::node	0.5	accident	14-15
# ::node	0.6	date-entity	12-13
# ::node	0.6.0	1976	12-13
# ::root	0	cause-01
# ::edge	accident	subevent	cause-01	0.5	0	
# ::edge	and	op1	cause-01	0.3	0	
# ::edge	and	op2	part	0.3	0.3.0	
# ::edge	and	op3	world-region	0.3	0.3.1	
# ::edge	and	op4	central	0.3	0.3.2	
# ::edge	and	op5	continent	0.3	0.3.3	
# ::edge	cause-01	ARG0	incident	0	0.0	
# ::edge	cause-01	ARG1	meltdown	0	0.1	
# ::edge	cause-01	mod	nearly	0	0.2	
# ::edge	cause-01	time	date-entity	0	0.6	
# ::edge	continent	name	name	0.3.3	0.3.3.0	
# ::edge	date-entity	year	1976	0.6	0.6.0	
# ::edge	incident	mod	reactor	0.0	0.0.0	
# ::edge	magnitude	mod	great	0.3.0.0.0	0.3.0.0.0.0	
# ::edge	magnitude	op1	populate-01	0.3.0.0.0	0.3.0.0	
# ::edge	meltdown	poss	disaster	0.1	0.1.0	
# ::edge	much	op1	cause-01	0.4	0	
# ::edge	name	op1	"Europe"	0.3.3.0	0.3.3.0.0	
# ::edge	name	op1	"West"	0.3.1.0	0.3.1.0.0	
# ::edge	populate-01	ARG1	part	0.3.0.0	0.3.0	
# ::edge	world-region	name	name	0.3.1	0.3.1.0	
(c3 / cause-01 
      :ARG0 (i / incident 
            :mod (r / reactor)) 
      :ARG1 (m3 / meltdown 
            :poss (d / disaster)) 
      :mod (n3 / nearly) 
      :op-of (a / and 
            :op1 (p / part 
                  :ARG1-of (p2 / populate-01 
                        :op-of (m / magnitude 
                              :mod (g / great)))) 
            :op2 (w / world-region 
                  :name (n2 / name 
                        :op1 "West")) 
            :op3 (c2 / central) 
            :op4 (c / continent 
                  :name (n / name 
                        :op1 "Europe"))) 
      :op-of (m2 / much) 
      :subevent-of (a2 / accident) 
      :time (d2 / date-entity 
            :year 1976))

# ::snt yet we expect the much smaller risks incurred when travelling by train or air or sea to be nonexistent and express outrage and condemnation when accidents happen angela lambert writes
# ::tok yet we expect the much smaller risks incurred when travelling by train or air or sea to be nonexistent and express outrage and condemnation when accidents happen angela lambert writes
# ::alignments 29-30|0.1.0.1.0.2.0 27-29|0.1.0.1.0.2.1.0+0.1.0.1.0.2.1.1+0.1.0.1.0.2.1+0.1.0.1.0.2 26-27|0.1.0.1.0 25-26|0.1.0.1.0.1 23-24|0.1.0.1 22-23|0.1.0 21-22|0.0 20-21|0 19-20|0.1 15-16|0.1.0.0.2.1 14-15|0.1.0.0.1 13-14|0.1.0.0.2.0 12-13|0.1.0.0.2 11-12|0.1.0.0.0 9-10|0.1.0.0 7-8|0.1.0.1.0.2.0.0 6-7|0.1.0.1.0.2.0.0.0 5-6|0.1.0.1.0.2.0.0.0.0 4-5|0.1.0.1.0.0 2-3|0.1.0.1.0.2.0.0.1 1-2|0.1.0.1.0.2.0.0.1.0 0-1|0.1.0.1.0.2.0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:32.783
# ::node	0	express-01	20-21
# ::node	0.0	outrage-01	21-22
# ::node	0.1	and	19-20
# ::node	0.1.0	and	22-23
# ::node	0.1.0.0	travel-01	9-10
# ::node	0.1.0.0.0	train	11-12
# ::node	0.1.0.0.1	or	14-15
# ::node	0.1.0.0.2	or	12-13
# ::node	0.1.0.0.2.0	air	13-14
# ::node	0.1.0.0.2.1	sea	15-16
# ::node	0.1.0.1	condemn-01	23-24
# ::node	0.1.0.1.0	happen-01	26-27
# ::node	0.1.0.1.0.0	much	4-5
# ::node	0.1.0.1.0.1	accident	25-26
# ::node	0.1.0.1.0.2	person	27-29
# ::node	0.1.0.1.0.2.0	write-01	29-30
# ::node	0.1.0.1.0.2.0.0	incur-01	7-8
# ::node	0.1.0.1.0.2.0.0.0	risk-01	6-7
# ::node	0.1.0.1.0.2.0.0.0.0	small	5-6
# ::node	0.1.0.1.0.2.0.0.1	expect-01	2-3
# ::node	0.1.0.1.0.2.0.0.1.0	we	1-2
# ::node	0.1.0.1.0.2.0.0.1.1	yet	0-1
# ::node	0.1.0.1.0.2.1	name	27-29
# ::node	0.1.0.1.0.2.1.0	"lambert"	27-29
# ::node	0.1.0.1.0.2.1.1	"angela"	27-29
# ::root	0	express-01
# ::edge	and	op1	express-01	0.1	0	
# ::edge	and	op1	travel-01	0.1.0	0.1.0.0	
# ::edge	and	op2	and	0.1	0.1.0	
# ::edge	and	op2	condemn-01	0.1.0	0.1.0.1	
# ::edge	condemn-01	ARG1	happen-01	0.1.0.1	0.1.0.1.0	
# ::edge	expect-01	ARG0	we	0.1.0.1.0.2.0.0.1	0.1.0.1.0.2.0.0.1.0	
# ::edge	expect-01	ARG1	incur-01	0.1.0.1.0.2.0.0.1	0.1.0.1.0.2.0.0	
# ::edge	expect-01	mod	yet	0.1.0.1.0.2.0.0.1	0.1.0.1.0.2.0.0.1.1	
# ::edge	express-01	ARG1	outrage-01	0	0.0	
# ::edge	happen-01	ARG0	much	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	happen-01	ARG1	accident	0.1.0.1.0	0.1.0.1.0.1	
# ::edge	happen-01	ARG2	person	0.1.0.1.0	0.1.0.1.0.2	
# ::edge	incur-01	ARG1	risk-01	0.1.0.1.0.2.0.0	0.1.0.1.0.2.0.0.0	
# ::edge	incur-01	time	write-01	0.1.0.1.0.2.0.0	0.1.0.1.0.2.0	
# ::edge	name	op1	"lambert"	0.1.0.1.0.2.1	0.1.0.1.0.2.1.0	
# ::edge	name	op2	"angela"	0.1.0.1.0.2.1	0.1.0.1.0.2.1.1	
# ::edge	or	op1	air	0.1.0.0.2	0.1.0.0.2.0	
# ::edge	or	op2	sea	0.1.0.0.2	0.1.0.0.2.1	
# ::edge	person	name	name	0.1.0.1.0.2	0.1.0.1.0.2.1	
# ::edge	risk-01	ARG2	small	0.1.0.1.0.2.0.0.0	0.1.0.1.0.2.0.0.0.0	
# ::edge	travel-01	ARG1	train	0.1.0.0	0.1.0.0.0	
# ::edge	travel-01	ARG2	or	0.1.0.0	0.1.0.0.1	
# ::edge	travel-01	location	or	0.1.0.0	0.1.0.0.2	
# ::edge	write-01	ARG0	person	0.1.0.1.0.2.0	0.1.0.1.0.2	
(e / express-01 
      :ARG1 (o / outrage-01) 
      :op-of (a3 / and 
            :op1 (a2 / and 
                  :op1 (t2 / travel-01 
                        :ARG1 (t / train) 
                        :ARG2 (o2 / or) 
                        :location (o3 / or 
                              :op1 (a4 / air) 
                              :op2 (s / sea))) 
                  :op2 (c / condemn-01 
                        :ARG1 (h / happen-01 
                              :ARG0 (m / much) 
                              :ARG1 (a / accident) 
                              :ARG2 (p / person 
                                    :ARG0-of (w / write-01 
                                          :time-of (i / incur-01 
                                                :ARG1 (r / risk-01 
                                                      :ARG2 (s2 / small)) 
                                                :ARG1-of (e2 / expect-01 
                                                      :ARG0 (w2 / we) 
                                                      :mod (y / yet)))) 
                                    :name (n / name 
                                          :op1 "lambert" 
                                          :op2 "angela")))))))

# ::snt i think he went to visit my mother and got incarcerated by accident
# ::tok i think he went to visit my mother and got incarcerated by accident
# ::alignments 12-13|0.1.0.0.0.0 10-11|0.1.0.0.0 8-9|0.1 7-8|0.1.0.0.1.0+0.1.0.0.1 5-6|0.1.0 2-3|0.1.0.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:32.821
# ::node	0	think-01	1-2
# ::node	0.0	i	0-1
# ::node	0.1	and	8-9
# ::node	0.1.0	visit-01	5-6
# ::node	0.1.0.0	he	2-3
# ::node	0.1.0.0.0	incarcerate-01	10-11
# ::node	0.1.0.0.0.0	accident	12-13
# ::node	0.1.0.0.1	have-rel-role-91	7-8
# ::node	0.1.0.0.1.0	mother	7-8
# ::root	0	think-01
# ::edge	and	op1	visit-01	0.1	0.1.0	
# ::edge	have-rel-role-91	ARG1	he	0.1.0.0.1	0.1.0.0	
# ::edge	have-rel-role-91	ARG2	mother	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	incarcerate-01	ARG0	he	0.1.0.0.0	0.1.0.0	
# ::edge	incarcerate-01	ARG1	accident	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	think-01	ARG0	i	0	0.0	
# ::edge	think-01	ARG1	and	0	0.1	
# ::edge	visit-01	ARG0	he	0.1.0	0.1.0.0	
(t / think-01 
      :ARG0 (i2 / i) 
      :ARG1 (a2 / and 
            :op1 (v / visit-01 
                  :ARG0 (h2 / he 
                        :ARG0-of (i / incarcerate-01 
                              :ARG1 (a / accident)) 
                        :ARG1-of (h / have-rel-role-91 
                              :ARG2 (m / mother))))))

# ::snt it was no accident that gavin hastings derek white and cronin the key players in the games most coherent passage of play were those anglos who will don the blue jersey next weekend against romania
# ::tok it was no accident that gavin hastings derek white and cronin the key players in the games most coherent passage of play were those anglos who will don the blue jersey next weekend against romania
# ::alignments 32-33|0.0.0.0.0.0.0.1.0 31-32|0.0.0.0.0.0.0.1.0.0 29-30|0.0.0.0.0.0.0.0.1 21-22|0.0.0.0.0.0.0.0 19-20|0.0.0.0.0.0.0 18-19|0.0.0.0.0.0.0.1 17-18|0.0.0.0.0.0.0.1.1 16-17|0.0.0.0.0.0 13-14|0.0.0.0.0+0.0.0.0 12-13|0.0.0 9-10|0 8-9|0.0 3-4|0.0.0.0.0.0.0.0.0.0 2-3|0.0.0.0.0.0.0.0.0.0.0 0-1|0.0.0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:33.082
# ::node	0	and	9-10
# ::node	0.0	white	8-9
# ::node	0.0.0	key	12-13
# ::node	0.0.0.0	person	13-14
# ::node	0.0.0.0.0	play-01	13-14
# ::node	0.0.0.0.0.0	game	16-17
# ::node	0.0.0.0.0.0.0	pass-01	19-20
# ::node	0.0.0.0.0.0.0.0	play-01	21-22
# ::node	0.0.0.0.0.0.0.0.0	it	0-1
# ::node	0.0.0.0.0.0.0.0.0.0	accident	3-4
# ::node	0.0.0.0.0.0.0.0.0.0.0	-	2-3
# ::node	0.0.0.0.0.0.0.0.1	blue	29-30
# ::node	0.0.0.0.0.0.0.1	cohere-01	18-19
# ::node	0.0.0.0.0.0.0.1.0	weekend	32-33
# ::node	0.0.0.0.0.0.0.1.0.0	next	31-32
# ::node	0.0.0.0.0.0.0.1.1	most	17-18
# ::root	0	and
# ::edge	accident	domain	it	0.0.0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0	
# ::edge	accident	polarity	-	0.0.0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0.0.0	
# ::edge	and	op1	white	0	0.0	
# ::edge	cohere-01	ARG0	weekend	0.0.0.0.0.0.0.1	0.0.0.0.0.0.0.1.0	
# ::edge	cohere-01	ARG1	pass-01	0.0.0.0.0.0.0.1	0.0.0.0.0.0.0	
# ::edge	cohere-01	degree	most	0.0.0.0.0.0.0.1	0.0.0.0.0.0.0.1.1	
# ::edge	key	mod	white	0.0.0	0.0	
# ::edge	pass-01	ARG0	game	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	pass-01	ARG1	play-01	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	person	mod	key	0.0.0.0	0.0.0	
# ::edge	play-01	ARG0	it	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0	
# ::edge	play-01	ARG0	person	0.0.0.0.0	0.0.0.0	
# ::edge	play-01	ARG1	blue	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.1	
# ::edge	play-01	ARG1	game	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	weekend	mod	next	0.0.0.0.0.0.0.1.0	0.0.0.0.0.0.0.1.0.0	
(a / and 
      :op1 (w2 / white 
            :mod-of (k / key 
                  :mod-of (p3 / person 
                        :ARG0-of (p4 / play-01 
                              :ARG1 (g / game 
                                    :ARG0-of (p2 / pass-01 
                                          :ARG1 (p / play-01 
                                                :ARG0 (i / it 
                                                      :domain-of (a2 / accident 
                                                            :polarity (- / -))) 
                                                :ARG1 (b / blue)) 
                                          :ARG1-of (c / cohere-01 
                                                :ARG0 (w / weekend 
                                                      :mod (n / next)) 
                                                :degree (m / most)))))))))

# ::snt youll pay only for the amount of cover you feel you need because  the midland personal accident plan provides two levels of cover  gold cover and silver cover for less than twice the monthly  cost
# ::tok youll pay only for the amount of cover you feel you need because the midland personal accident plan provides two levels of cover gold cover and silver cover for less than twice the monthly cost
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:33.084
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt  st thomas virgin islands and fitted by the aircraft owner during the week preceding the accident
# ::tok st thomas virgin islands and fitted by the aircraft owner during the week preceding the accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:33.085
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt this result is especially evident in scandinavian countriesfo id94 as also in britain where the social security system is now recognized as the senior partner to tort as a source of accident compensation
# ::tok this result is especially evident in scandinavian countriesfo id94 as also in britain where the social security system is now recognized as the senior partner to tort as a source of accident compensation
# ::alignments 32-33|0.1.0.1.1.0 31-32|0.1.0.1.1.0.1 29-30|0.1.0.1.0 24-25|0.1.0 23-24|0.1.0.2 20-21|0.1.0.1 19-20|0.1.0.1.2 17-18|0.1.0.1.1 16-17|0.1.0.1.1.1 15-16|0.1.0.1.1.1.0 12-13|0.1.0.0.0.0+0.1.0.0.0+0.1.0.0 10-11|0.1.0.1.1.0.0 4-5|0 3-4|0.0 1-2|0.1 0-1|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:33.334
# ::node	0	evident	4-5
# ::node	0.0	especially	3-4
# ::node	0.1	result-01	1-2
# ::node	0.1.0	partner-01	24-25
# ::node	0.1.0.0	country	12-13
# ::node	0.1.0.0.0	name	12-13
# ::node	0.1.0.0.0.0	"Britain"	12-13
# ::node	0.1.0.1	recognize-01	20-21
# ::node	0.1.0.1.0	source	29-30
# ::node	0.1.0.1.1	system	17-18
# ::node	0.1.0.1.1.0	compensate-01	32-33
# ::node	0.1.0.1.1.0.0	also	10-11
# ::node	0.1.0.1.1.0.1	accident	31-32
# ::node	0.1.0.1.1.1	security	16-17
# ::node	0.1.0.1.1.1.0	society	15-16
# ::node	0.1.0.1.2	now	19-20
# ::node	0.1.0.2	senior	23-24
# ::node	0.1.1	this	0-1
# ::root	0	evident
# ::edge	compensate-01	ARG0	system	0.1.0.1.1.0	0.1.0.1.1	
# ::edge	compensate-01	ARG1	also	0.1.0.1.1.0	0.1.0.1.1.0.0	
# ::edge	compensate-01	ARG3	accident	0.1.0.1.1.0	0.1.0.1.1.0.1	
# ::edge	country	name	name	0.1.0.0	0.1.0.0.0	
# ::edge	evident	degree	especially	0	0.0	
# ::edge	evident	domain	result-01	0	0.1	
# ::edge	name	op1	"Britain"	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	partner-01	ARG0	country	0.1.0	0.1.0.0	
# ::edge	partner-01	ARG1	result-01	0.1.0	0.1	
# ::edge	partner-01	mod	senior	0.1.0	0.1.0.2	
# ::edge	recognize-01	ARG0	source	0.1.0.1	0.1.0.1.0	
# ::edge	recognize-01	ARG1	system	0.1.0.1	0.1.0.1.1	
# ::edge	recognize-01	ARG2	partner-01	0.1.0.1	0.1.0	
# ::edge	recognize-01	time	now	0.1.0.1	0.1.0.1.2	
# ::edge	result-01	mod	this	0.1	0.1.1	
# ::edge	security	mod	society	0.1.0.1.1.1	0.1.0.1.1.1.0	
# ::edge	system	mod	security	0.1.0.1.1	0.1.0.1.1.1	
(e / evident 
      :degree (e2 / especially) 
      :domain (r2 / result-01 
            :ARG1-of (p / partner-01 
                  :ARG0 (c2 / country 
                        :name (n2 / name 
                              :op1 "Britain")) 
                  :ARG2-of (r / recognize-01 
                        :ARG0 (s / source) 
                        :ARG1 (s3 / system 
                              :ARG0-of (c / compensate-01 
                                    :ARG1 (a2 / also) 
                                    :ARG3 (a / accident)) 
                              :mod (s4 / security 
                                    :mod (s5 / society))) 
                        :time (n / now)) 
                  :mod (s2 / senior)) 
            :mod (t / this)))

# ::snt west yorkshire police said that the accident happened as the teenagers played in the graveyard at about 7pm yesterday
# ::tok west yorkshire police said that the accident happened as the teenagers played in the graveyard at about 7pm yesterday
# ::alignments 18-19|0.1.0 10-11|0.1.2 7-8|0.1 6-7|0.1.1 3-4|0 2-3|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:33.417
# ::node	0	say-01	3-4
# ::node	0.0	police	2-3
# ::node	0.0.0	west	0-1
# ::node	0.1	happen-01	7-8
# ::node	0.1.0	yesterday	18-19
# ::node	0.1.1	accident	6-7
# ::node	0.1.2	teenager	10-11
# ::root	0	say-01
# ::edge	happen-01	ARG0	yesterday	0.1	0.1.0	
# ::edge	happen-01	ARG1	accident	0.1	0.1.1	
# ::edge	happen-01	location	teenager	0.1	0.1.2	
# ::edge	police	mod	west	0.0	0.0.0	
# ::edge	say-01	ARG0	police	0	0.0	
# ::edge	say-01	ARG1	happen-01	0	0.1	
(s / say-01 
      :ARG0 (p / police 
            :mod (w / west)) 
      :ARG1 (h / happen-01 
            :ARG0 (y / yesterday) 
            :ARG1 (a / accident) 
            :location (t / teenager)))

# ::snt shes better now you know after her accident and that
# ::tok shes better now you know after her accident and that
# ::alignments 8-9|0 7-8|0.0.0 5-6|0.0 4-5|0.0.1 3-4|0.0.1.0 2-3|0.0.1.2 0-1|0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:33.509
# ::node	0	and	8-9
# ::node	0.0	after	5-6
# ::node	0.0.0	accident	7-8
# ::node	0.0.1	know-01	4-5
# ::node	0.0.1.0	you	3-4
# ::node	0.0.1.1	she	0-1
# ::node	0.0.1.2	now	2-3
# ::root	0	and
(a / and 
      :op-of (a3 / after 
            :op1 (a2 / accident) 
            :time-of (k / know-01 
                  :ARG0 (y / you) 
                  :ARG1 (s / she) 
                  :time (n / now))))

# ::snt finally in new zealand a comprehensive accident compensation scheme for all personal injury and death has replaced tort liability completely
# ::tok finally in new zealand a comprehensive accident compensation scheme for all personal injury and death has replaced tort liability completely
# ::alignments 19-20|0.0.2 18-19|0.0.0 16-17|0.0 14-15|0.2 13-14|0 12-13|0.1 11-12|0.2.0 10-11|0.1.0 8-9|0.0.1 7-8|0.0.1.0 6-7|0.0.1.0.0 5-6|0.0.1.0.0.0 2-4|0.0.1.0.1.1.0+0.0.1.0.1.1.1+0.0.1.0.1.1+0.0.1.0.1 0-1|0.0.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:33.852
# ::node	0	and	13-14
# ::node	0.0	replace-01	16-17
# ::node	0.0.0	liability	18-19
# ::node	0.0.1	scheme	8-9
# ::node	0.0.1.0	compensate-01	7-8
# ::node	0.0.1.0.0	accident	6-7
# ::node	0.0.1.0.0.0	comprehensive	5-6
# ::node	0.0.1.0.1	country	2-4
# ::node	0.0.1.0.1.0	final	0-1
# ::node	0.0.1.0.1.1	name	2-4
# ::node	0.0.1.0.1.1.0	"zealand"	2-4
# ::node	0.0.1.0.1.1.1	"new"	2-4
# ::node	0.0.2	complete	19-20
# ::node	0.1	injure-01	12-13
# ::node	0.1.0	all	10-11
# ::node	0.2	die-01	14-15
# ::node	0.2.0	personal	11-12
# ::root	0	and
# ::edge	accident	mod	comprehensive	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	and	op1	injure-01	0	0.1	
# ::edge	and	op2	die-01	0	0.2	
# ::edge	compensate-01	ARG0	scheme	0.0.1.0	0.0.1	
# ::edge	compensate-01	ARG1	accident	0.0.1.0	0.0.1.0.0	
# ::edge	compensate-01	ARG2	country	0.0.1.0	0.0.1.0.1	
# ::edge	country	mod	final	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	country	name	name	0.0.1.0.1	0.0.1.0.1.1	
# ::edge	die-01	mod	personal	0.2	0.2.0	
# ::edge	injure-01	quant	all	0.1	0.1.0	
# ::edge	name	op1	"zealand"	0.0.1.0.1.1	0.0.1.0.1.1.0	
# ::edge	name	op2	"new"	0.0.1.0.1.1	0.0.1.0.1.1.1	
# ::edge	replace-01	ARG0	and	0.0	0	
# ::edge	replace-01	ARG1	liability	0.0	0.0.0	
# ::edge	replace-01	ARG2	scheme	0.0	0.0.1	
# ::edge	replace-01	manner	complete	0.0	0.0.2	
(a / and 
      :ARG0-of (r / replace-01 
            :ARG1 (l / liability) 
            :ARG2 (s / scheme 
                  :ARG0-of (c2 / compensate-01 
                        :ARG1 (a3 / accident 
                              :mod (c3 / comprehensive)) 
                        :ARG2 (c4 / country 
                              :mod (f / final) 
                              :name (n / name 
                                    :op1 "zealand" 
                                    :op2 "new")))) 
            :manner (c / complete)) 
      :op1 (i / injure-01 
            :quant (a2 / all)) 
      :op2 (d / die-01 
            :mod (p / personal)))

# ::snt   richard rowe who fractured his skull and a leg in separate accidents last season takes the devilmaycare attitude even further
# ::tok richard rowe who fractured his skull and a leg in separate accidents last season takes the devilmaycare attitude even further
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:33.852
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt compared with other accident compensation systems even those administered by private insurance like american workers compensation 30 per cent and health insurance 15 per cent let alone with state insurance funds like new zealands accident compensation plan 8 per centfo id66 its cost inefficiency is difficult to justify by any competing advantages over its competitors
# ::tok compared with other accident compensation systems even those administered by private insurance like american workers compensation 30 per cent and health insurance 15 per cent let alone with state insurance funds like new zealands accident compensation plan 8 per centfo id66 its cost inefficiency is difficult to justify by any competing advantages over its competitors
# ::alignments 54-55|0.0.2.1.0.0 51-52|0.0.2.1.0.1 50-51|0.0.2.1.0 49-50|0.0.2.1.0.1.1 47-48|0.0.2.1.0.1.0 45-46|0.0.2.1.0.1.0.0 42-43|0.0.2.1.0.1.0.0.0 37-38|0.0.0.0.0.1.0 36-37|0.0 35-36|0.0.1 34-35|0.0.1.0 32-33|0.0.0.0.0.1.1.0 30-31|0.0.2 29-30|0.0.2.1 28-29|0.0.2.0 26-27|0.0.1.1.1 25-26|0.0.1.1 24-25|0.0.1.1.0.0+0.0.1.1.0 22-23|0.0.0.0.0.0.1.1.0 21-22|0.3 20-21|0.2 19-20|0 18-19|0.1.0+0.1 16-17|0.3.0 15-16|0.0.0.0.0.1 14-15|0.0.0.0+0.0.0.0.0 13-14|0.0.0.1.0+0.0.0.1+0.0.0 11-12|0.0.0.0.0.1.1 10-11|0.0.0.0.0.1.1.1 8-9|0.0.0.0.0.0.1.0 5-6|0.0.0.0.0.0.1 4-5|0.0.0.0.0.0 3-4|0.0.0.0.0.0.0 2-3|0.0.0.0.0.0.1.2 0-1|0.0.0.0.0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:35.709
# ::node	0	and	19-20
# ::node	0.0	plan-01	36-37
# ::node	0.0.0	country	13-14
# ::node	0.0.0.0	work-01	14-15
# ::node	0.0.0.0.0	person	14-15
# ::node	0.0.0.0.0.0	compensate-01	4-5
# ::node	0.0.0.0.0.0.0	accident	3-4
# ::node	0.0.0.0.0.0.1	system	5-6
# ::node	0.0.0.0.0.0.1.0	administer-01	8-9
# ::node	0.0.0.0.0.0.1.1	compare-01	0-1
# ::node	0.0.0.0.0.0.1.1.0	15	22-23
# ::node	0.0.0.0.0.0.1.2	other	2-3
# ::node	0.0.0.0.0.1	compensate-01	15-16
# ::node	0.0.0.0.0.1.0	8	37-38
# ::node	0.0.0.0.0.1.1	insure-02	11-12
# ::node	0.0.0.0.0.1.1.0	new	32-33
# ::node	0.0.0.0.0.1.1.1	private	10-11
# ::node	0.0.0.1	name	13-14
# ::node	0.0.0.1.0	"America"	13-14
# ::node	0.0.1	compensate-01	35-36
# ::node	0.0.1.0	accident	34-35
# ::node	0.0.1.1	let-01	25-26
# ::node	0.0.1.1.0	monetary-quantity	24-25
# ::node	0.0.1.1.0.0	cent	24-25
# ::node	0.0.1.1.1	alone	26-27
# ::node	0.0.2	fund	30-31
# ::node	0.0.2.0	state	28-29
# ::node	0.0.2.1	insure-02	29-30
# ::node	0.0.2.1.0	compete-01	50-51
# ::node	0.0.2.1.0.0	company	54-55
# ::node	0.0.2.1.0.1	advantage	51-52
# ::node	0.0.2.1.0.1.0	justify-01	47-48
# ::node	0.0.2.1.0.1.0.0	difficult	45-46
# ::node	0.0.2.1.0.1.0.0.0	cost-01	42-43
# ::node	0.0.2.1.0.1.1	any	49-50
# ::node	0.1	monetary-quantity	18-19
# ::node	0.1.0	cent	18-19
# ::node	0.2	health	20-21
# ::node	0.3	insure-02	21-22
# ::node	0.3.0	30	16-17
# ::root	0	and
# ::edge	administer-01	ARG0	system	0.0.0.0.0.0.1.0	0.0.0.0.0.0.1	
# ::edge	advantage	mod	any	0.0.2.1.0.1	0.0.2.1.0.1.1	
# ::edge	and	op1	monetary-quantity	0	0.1	
# ::edge	and	op2	health	0	0.2	
# ::edge	and	op3	insure-02	0	0.3	
# ::edge	compare-01	ARG1	15	0.0.0.0.0.0.1.1	0.0.0.0.0.0.1.1.0	
# ::edge	compare-01	ARG2	system	0.0.0.0.0.0.1.1	0.0.0.0.0.0.1	
# ::edge	compensate-01	ARG0	8	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	compensate-01	ARG0	accident	0.0.1	0.0.1.0	
# ::edge	compensate-01	ARG0	person	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	compensate-01	ARG1	accident	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	compensate-01	ARG1	plan-01	0.0.1	0.0	
# ::edge	compensate-01	ARG2	person	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	compensate-01	instrument	system	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	compete-01	ARG0	company	0.0.2.1.0	0.0.2.1.0.0	
# ::edge	compete-01	ARG1	advantage	0.0.2.1.0	0.0.2.1.0.1	
# ::edge	cost-01	ARG1	difficult	0.0.2.1.0.1.0.0.0	0.0.2.1.0.1.0.0	
# ::edge	country	name	name	0.0.0	0.0.0.1	
# ::edge	difficult	domain	justify-01	0.0.2.1.0.1.0.0	0.0.2.1.0.1.0	
# ::edge	fund	poss	plan-01	0.0.2	0.0	
# ::edge	fund	poss	state	0.0.2	0.0.2.0	
# ::edge	fund	topic	insure-02	0.0.2	0.0.2.1	
# ::edge	insure-02	ARG0	new	0.0.0.0.0.1.1	0.0.0.0.0.1.1.0	
# ::edge	insure-02	ARG1	30	0.3	0.3.0	
# ::edge	insure-02	ARG1	compensate-01	0.0.0.0.0.1.1	0.0.0.0.0.1	
# ::edge	insure-02	ARG1	compete-01	0.0.2.1	0.0.2.1.0	
# ::edge	insure-02	mod	private	0.0.0.0.0.1.1	0.0.0.0.0.1.1.1	
# ::edge	justify-01	ARG1	advantage	0.0.2.1.0.1.0	0.0.2.1.0.1	
# ::edge	let-01	ARG0	monetary-quantity	0.0.1.1	0.0.1.1.0	
# ::edge	let-01	ARG1	alone	0.0.1.1	0.0.1.1.1	
# ::edge	let-01	topic	compensate-01	0.0.1.1	0.0.1	
# ::edge	monetary-quantity	unit	cent	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	monetary-quantity	unit	cent	0.1	0.1.0	
# ::edge	name	op1	"America"	0.0.0.1	0.0.0.1.0	
# ::edge	plan-01	ARG0	country	0.0	0.0.0	
# ::edge	plan-01	ARG1	and	0.0	0	
# ::edge	system	mod	other	0.0.0.0.0.0.1	0.0.0.0.0.0.1.2	
# ::edge	work-01	ARG0	person	0.0.0.0	0.0.0.0.0	
# ::edge	work-01	location	country	0.0.0.0	0.0.0	
(a5 / and 
      :ARG1-of (p / plan-01 
            :ARG0 (c8 / country 
                  :location-of (w / work-01 
                        :ARG0 (p2 / person 
                              :ARG0-of (c9 / compensate-01 
                                    :ARG1 (a7 / accident) 
                                    :instrument (s2 / system 
                                          :ARG0-of (a6 / administer-01) 
                                          :ARG2-of (c10 / compare-01 
                                                :ARG1 15) 
                                          :mod (o / other))) 
                              :ARG2-of (c7 / compensate-01 
                                    :ARG0 8 
                                    :ARG1-of (i3 / insure-02 
                                          :ARG0 (n / new) 
                                          :mod (p3 / private))))) 
                  :name (n2 / name 
                        :op1 "America")) 
            :ARG1-of (c4 / compensate-01 
                  :ARG0 (a3 / accident) 
                  :topic-of (l / let-01 
                        :ARG0 (m / monetary-quantity 
                              :unit (c5 / cent)) 
                        :ARG1 (a4 / alone))) 
            :poss-of (f / fund 
                  :poss (s / state) 
                  :topic (i / insure-02 
                        :ARG1 (c2 / compete-01 
                              :ARG0 (c / company) 
                              :ARG1 (a / advantage 
                                    :ARG1-of (j / justify-01 
                                          :domain-of (d / difficult 
                                                :ARG1-of (c3 / cost-01))) 
                                    :mod (a2 / any)))))) 
      :op1 (m2 / monetary-quantity 
            :unit (c6 / cent)) 
      :op2 (h / health) 
      :op3 (i2 / insure-02 
            :ARG1 30))

# ::snt we pray for all those killed each day in wars disasters and accidents throughout the world for prisoners of conscience and all who suffer torture starvation or maltreatment and for harold pollard jack shaw rose oneill ellen steen rosaleen cook and all whose anniversaries fall at this time of the year
# ::tok we pray for all those killed each day in wars disasters and accidents throughout the world for prisoners of conscience and all who suffer torture starvation or maltreatment and for harold pollard jack shaw rose oneill ellen steen rosaleen cook and all whose anniversaries fall at this time of the year
# ::alignments 50-51|0.0.0.0 47-48|0.0.0 46-47|0.0 41-42|0.1.1.0 40-41|0.1.1.1 34-35|0.1.1 28-29|0.1 26-27|0.1.0.1.0 25-26|0 24-25|0.1.0.1 23-24|0.1.0 21-22|0.1.0.0 20-21|0.1.0.1.0.0.0 19-20|0.1.0.1.0.0.0.1 15-16|0.1.0.1.0.0.0.0.0 13-14|0.1.0.1.0.0.0.0 12-13|0.1.0.1.0.0.2.1 11-12|0.1.0.1.0.0.2 10-11|0.1.0.1.0.0.3 9-10|0.1.0.1.0.0.2.0 7-8|0.1.0.1.0.0.4 6-7|0.1.0.1.0.0.4.0 5-6|0.1.0.1.0.0 3-4|0.1.0.1.0.0.1 1-2|0.1.0.2 0-1|0.1.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:36.695
# ::node	0	starve-01	25-26
# ::node	0.0	this	46-47
# ::node	0.0.0	time	47-48
# ::node	0.0.0.0	year	50-51
# ::node	0.1	and	28-29
# ::node	0.1.0	suffer-01	23-24
# ::node	0.1.0.0	all	21-22
# ::node	0.1.0.1	torture-01	24-25
# ::node	0.1.0.1.0	or	26-27
# ::node	0.1.0.1.0.0	kill-01	5-6
# ::node	0.1.0.1.0.0.0	and	20-21
# ::node	0.1.0.1.0.0.0.0	throughout	13-14
# ::node	0.1.0.1.0.0.0.0.0	world	15-16
# ::node	0.1.0.1.0.0.0.1	conscience	19-20
# ::node	0.1.0.1.0.0.1	all	3-4
# ::node	0.1.0.1.0.0.2	and	11-12
# ::node	0.1.0.1.0.0.2.0	war-01	9-10
# ::node	0.1.0.1.0.0.2.1	accident	12-13
# ::node	0.1.0.1.0.0.3	disaster	10-11
# ::node	0.1.0.1.0.0.4	day	7-8
# ::node	0.1.0.1.0.0.4.0	each	6-7
# ::node	0.1.0.2	pray-01	1-2
# ::node	0.1.0.2.0	we	0-1
# ::node	0.1.1	rise-01	34-35
# ::node	0.1.1.0	all	41-42
# ::node	0.1.1.1	and	40-41
# ::root	0	starve-01
# ::edge	and	op1	accident	0.1.0.1.0.0.2	0.1.0.1.0.0.2.1	
# ::edge	and	op1	conscience	0.1.0.1.0.0.0	0.1.0.1.0.0.0.1	
# ::edge	and	op1	rise-01	0.1.1.1	0.1.1	
# ::edge	and	op1	suffer-01	0.1	0.1.0	
# ::edge	and	op2	starve-01	0.1	0	
# ::edge	and	op3	rise-01	0.1	0.1.1	
# ::edge	day	mod	each	0.1.0.1.0.0.4	0.1.0.1.0.0.4.0	
# ::edge	kill-01	ARG0	and	0.1.0.1.0.0	0.1.0.1.0.0.0	
# ::edge	kill-01	ARG1	all	0.1.0.1.0.0	0.1.0.1.0.0.1	
# ::edge	kill-01	instrument	and	0.1.0.1.0.0	0.1.0.1.0.0.2	
# ::edge	kill-01	location	disaster	0.1.0.1.0.0	0.1.0.1.0.0.3	
# ::edge	kill-01	time	day	0.1.0.1.0.0	0.1.0.1.0.0.4	
# ::edge	or	op1	kill-01	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	pray-01	ARG0	we	0.1.0.2	0.1.0.2.0	
# ::edge	pray-01	ARG1	suffer-01	0.1.0.2	0.1.0	
# ::edge	rise-01	ARG1	all	0.1.1	0.1.1.0	
# ::edge	starve-01	ARG1	this	0	0.0	
# ::edge	suffer-01	ARG0	all	0.1.0	0.1.0.0	
# ::edge	suffer-01	ARG1	torture-01	0.1.0	0.1.0.1	
# ::edge	throughout	op1	world	0.1.0.1.0.0.0.0	0.1.0.1.0.0.0.0.0	
# ::edge	throughout	op2	and	0.1.0.1.0.0.0.0	0.1.0.1.0.0.0	
# ::edge	time	mod	this	0.0.0	0.0	
# ::edge	torture-01	ARG1	or	0.1.0.1	0.1.0.1.0	
# ::edge	war-01	ARG1	and	0.1.0.1.0.0.2.0	0.1.0.1.0.0.2	
# ::edge	year	part	time	0.0.0.0	0.0.0	
(s / starve-01 
      :ARG1 (t2 / this 
            :mod-of (t / time 
                  :part-of (y / year))) 
      :op-of (a3 / and 
            :op1 (s2 / suffer-01 
                  :ARG0 (a4 / all) 
                  :ARG1 (t3 / torture-01 
                        :ARG1 (o / or 
                              :op1 (k / kill-01 
                                    :ARG0 (a5 / and 
                                          :op-of (t4 / throughout 
                                                :op1 (w / world)) 
                                          :op1 (c / conscience)) 
                                    :ARG1 (a8 / all) 
                                    :instrument (a7 / and 
                                          :ARG1-of (w2 / war-01) 
                                          :op1 (a6 / accident)) 
                                    :location (d / disaster) 
                                    :time (d2 / day 
                                          :mod (e / each))))) 
                  :ARG1-of (p / pray-01 
                        :ARG0 (w3 / we))) 
            :op2 (r / rise-01 
                  :ARG1 (a / all) 
                  :op-of (a2 / and))))

# ::snt the midland personal accident plan has been specially negotiated  for you between ourselves at sun alliance and midland bank, it offers vital financial cover in the event of you being  permanently disabled in an accident
# ::tok the midland personal accident plan has been specially negotiated for you between ourselves at sun alliance and midland bank , it offers vital financial cover in the event of you being permanently disabled in an accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:36.696
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt those who die under interrogation are reported to have had an accident and are quietly buried
# ::tok those who die under interrogation are reported to have had an accident and are quietly buried
# ::alignments 15-16|0.2 14-15|0.2.0 12-13|0 11-12|0.1 6-7|0.0 4-5|0.0.0.0 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:36.743
# ::node	0	and	12-13
# ::node	0.0	report-01	6-7
# ::node	0.0.0	die-01	2-3
# ::node	0.0.0.0	interrogate-01	4-5
# ::node	0.1	accident	11-12
# ::node	0.2	bury-01	15-16
# ::node	0.2.0	quiet	14-15
# ::root	0	and
# ::edge	and	op1	accident	0	0.1	
# ::edge	and	op2	bury-01	0	0.2	
# ::edge	bury-01	time	quiet	0.2	0.2.0	
# ::edge	die-01	ARG1	report-01	0.0.0	0.0	
# ::edge	die-01	time	interrogate-01	0.0.0	0.0.0.0	
# ::edge	report-01	ARG1	and	0.0	0	
(a / and 
      :ARG1-of (r / report-01 
            :ARG1-of (d / die-01 
                  :time (i / interrogate-01))) 
      :op1 (a2 / accident) 
      :op2 (b / bury-01 
            :time (q / quiet)))

# ::snt horrific garden accidents have prompted a safety display in oxford aimed at pinpointing the dangers, the city council hopes to slash the number of accidents caused by play equipment gardening tools and poisons by highlighting the dangers
# ::tok horrific garden accidents have prompted a safety display in oxford aimed at pinpointing the dangers , the city council hopes to slash the number of accidents caused by play equipment gardening tools and poisons by highlighting the dangers
# ::alignments 37-38|0.0.0.0.0.0.0 35-36|0.0.0.0.0.0 32-33|0.1 31-32|0.1.0 29-30|0.0.0.0.0.1.0 28-29|0.0.0.0.0.1 26-27|0 25-26|0.0 23-24|0.0.0 21-22|0.0.0.0 19-20|0.0.0.0.1 18-19|0.0.0.0.0 17-18|0.0.0.0.0.2 14-15|0.0.0.0.1.1 10-11|0.0.0.0.1.0.0 7-8|0.0.0.0.1.0 6-7|0.0.0.0.1.0.2 4-5|0.0.0.0.1.0.1 2-3|0.0.0.0.1.0.1.0 1-2|0.0.0.0.1.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:37.572
# ::node	0	cause-01	26-27
# ::node	0.0	accident	25-26
# ::node	0.0.0	number	23-24
# ::node	0.0.0.0	slash-01	21-22
# ::node	0.0.0.0.0	council	18-19
# ::node	0.0.0.0.0.0	highlight-01	35-36
# ::node	0.0.0.0.0.0.0	danger	37-38
# ::node	0.0.0.0.0.1	play-01	28-29
# ::node	0.0.0.0.0.1.0	equipment	29-30
# ::node	0.0.0.0.0.2	city	17-18
# ::node	0.0.0.0.1	hope-01	19-20
# ::node	0.0.0.0.1.0	display-01	7-8
# ::node	0.0.0.0.1.0.0	aim-02	10-11
# ::node	0.0.0.0.1.0.1	prompt-02	4-5
# ::node	0.0.0.0.1.0.1.0	accident	2-3
# ::node	0.0.0.0.1.0.1.0.0	garden	1-2
# ::node	0.0.0.0.1.0.2	safe-41	6-7
# ::node	0.0.0.0.1.1	danger	14-15
# ::node	0.1	and	32-33
# ::node	0.1.0	tool	31-32
# ::root	0	cause-01
# ::edge	accident	mod	garden	0.0.0.0.1.0.1.0	0.0.0.0.1.0.1.0.0	
# ::edge	accident	quant	number	0.0	0.0.0	
# ::edge	aim-02	ARG1	display-01	0.0.0.0.1.0.0	0.0.0.0.1.0	
# ::edge	and	op1	tool	0.1	0.1.0	
# ::edge	cause-01	ARG0	accident	0	0.0	
# ::edge	cause-01	ARG1	and	0	0.1	
# ::edge	council	mod	city	0.0.0.0.0	0.0.0.0.0.2	
# ::edge	display-01	ARG2	safe-41	0.0.0.0.1.0	0.0.0.0.1.0.2	
# ::edge	highlight-01	ARG0	council	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	highlight-01	ARG1	danger	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	hope-01	ARG0	display-01	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	hope-01	ARG1	slash-01	0.0.0.0.1	0.0.0.0	
# ::edge	hope-01	location	danger	0.0.0.0.1	0.0.0.0.1.1	
# ::edge	play-01	ARG0	council	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	play-01	ARG1	equipment	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	prompt-02	ARG0	accident	0.0.0.0.1.0.1	0.0.0.0.1.0.1.0	
# ::edge	prompt-02	ARG1	display-01	0.0.0.0.1.0.1	0.0.0.0.1.0	
# ::edge	slash-01	ARG0	council	0.0.0.0	0.0.0.0.0	
# ::edge	slash-01	ARG1	number	0.0.0.0	0.0.0	
(c / cause-01 
      :ARG0 (a2 / accident 
            :quant (n / number 
                  :ARG1-of (s / slash-01 
                        :ARG0 (c2 / council 
                              :ARG0-of (h / highlight-01 
                                    :ARG1 (d / danger)) 
                              :ARG0-of (p / play-01 
                                    :ARG1 (e / equipment)) 
                              :mod (c3 / city)) 
                        :ARG1-of (h2 / hope-01 
                              :ARG0 (d3 / display-01 
                                    :ARG1-of (a3 / aim-02) 
                                    :ARG1-of (p2 / prompt-02 
                                          :ARG0 (a4 / accident 
                                                :mod (g / garden))) 
                                    :ARG2 (s2 / safe-41)) 
                              :location (d2 / danger))))) 
      :ARG1 (a / and 
            :op1 (t / tool)))

# ::snt vandalism and accidents on the railways are on a steep upward trend latest statistics from the department of transport indicate
# ::tok vandalism and accidents on the railways are on a steep upward trend latest statistics from the department of transport indicate
# ::alignments 19-20|0.0 18-19|0 16-17|0.0.0.2 13-14|0.0.0 12-13|0.0.0.1.0+0.0.0.1 11-12|0.0.0.0 10-11|0.0.0.0.2 9-10|0.0.0.0.1 5-6|0.0.0.0.0.1.0 2-3|0.0.0.0.0.1 1-2|0.0.0.0.0 0-1|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:37.692
# ::node	0	transport-01	18-19
# ::node	0.0	indicate-01	19-20
# ::node	0.0.0	statistic	13-14
# ::node	0.0.0.0	trend-01	11-12
# ::node	0.0.0.0.0	and	1-2
# ::node	0.0.0.0.0.0	vandalism	0-1
# ::node	0.0.0.0.0.1	accident	2-3
# ::node	0.0.0.0.0.1.0	railway	5-6
# ::node	0.0.0.0.1	steep-01	9-10
# ::node	0.0.0.0.2	upward	10-11
# ::node	0.0.0.1	late	12-13
# ::node	0.0.0.1.0	most	12-13
# ::node	0.0.0.2	department	16-17
# ::root	0	transport-01
(t / transport-01 
      :ARG1-of (i / indicate-01 
            :ARG0 (s / statistic 
                  :ARG0-of (t2 / trend-01 
                        :ARG1 (a2 / and 
                              :op1 (v / vandalism) 
                              :op2 (a / accident 
                                    :poss (r / railway))) 
                        :ARG1-of (s2 / steep-01) 
                        :mod (u / upward)) 
                  :mod (l / late 
                        :degree (m / most)) 
                  :source (d / department))))

# ::snt not infrequently this leads to wrangles between lawyers on both sides of an accident victim accusing each other in public or even before ethics committees of the bar of unethical solicitation of clients
# ::tok not infrequently this leads to wrangles between lawyers on both sides of an accident victim accusing each other in public or even before ethics committees of the bar of unethical solicitation of clients
# ::alignments 32-33|0.1.0 27-28|0.1 22-23|0.2.2.0 20-21|0.2.2 19-20|0.2.0 17-18|0.2.1 16-17|0.2.1.0 15-16|0.2 14-15|0.3.0.0.1 13-14|0.3.0.0.1.0 10-11|0.3.0.0 9-10|0.3.0.0.0 7-8|0.3.0 6-7|0.3 3-4|0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:37.961
# ::node	0	lead-03	3-4
# ::node	0.0	this	2-3
# ::node	0.1	bar-01	27-28
# ::node	0.1.0	client	32-33
# ::node	0.2	accuse-01	15-16
# ::node	0.2.0	public	19-20
# ::node	0.2.1	other	17-18
# ::node	0.2.1.0	each	16-17
# ::node	0.2.2	or	20-21
# ::node	0.2.2.0	before	22-23
# ::node	0.3	between	6-7
# ::node	0.3.0	lawyer	7-8
# ::node	0.3.0.0	side	10-11
# ::node	0.3.0.0.0	both	9-10
# ::node	0.3.0.0.1	victim	14-15
# ::node	0.3.0.0.1.0	accident	13-14
# ::root	0	lead-03
# ::edge	accuse-01	ARG0	public	0.2	0.2.0	
# ::edge	accuse-01	ARG1	other	0.2	0.2.1	
# ::edge	accuse-01	location	or	0.2	0.2.2	
# ::edge	bar-01	ARG1	client	0.1	0.1.0	
# ::edge	between	op1	lawyer	0.3	0.3.0	
# ::edge	lawyer	poss	side	0.3.0	0.3.0.0	
# ::edge	lead-03	ARG0	this	0	0.0	
# ::edge	lead-03	ARG1	bar-01	0	0.1	
# ::edge	lead-03	ARG2	accuse-01	0	0.2	
# ::edge	lead-03	time	between	0	0.3	
# ::edge	or	op1	before	0.2.2	0.2.2.0	
# ::edge	other	mod	each	0.2.1	0.2.1.0	
# ::edge	side	mod	both	0.3.0.0	0.3.0.0.0	
# ::edge	side	poss	victim	0.3.0.0	0.3.0.0.1	
# ::edge	victim	mod	accident	0.3.0.0.1	0.3.0.0.1.0	
(l2 / lead-03 
      :ARG0 (t / this) 
      :ARG1 (b / bar-01 
            :ARG1 (c / client)) 
      :ARG2 (a / accuse-01 
            :ARG0 (p / public) 
            :ARG1 (o2 / other 
                  :mod (e / each)) 
            :location (o / or 
                  :op1 (b2 / before))) 
      :time (b4 / between 
            :op1 (l / lawyer 
                  :poss (s / side 
                        :mod (b3 / both) 
                        :poss (v / victim 
                              :mod (a2 / accident))))))

# ::snt a government working party is to consider nofault compensation for minor road accidents the lord chancellor lord mackay said
# ::tok a government working party is to consider nofault compensation for minor road accidents the lord chancellor lord mackay said
# ::alignments 18-19|0 16-17|0.0 14-15|0.0.0 12-13|0.1.0.1 11-12|0.1.0.1.0 10-11|0.1.0.1.1 8-9|0.1 6-7|0.1.0 3-4|0.1.0.0 2-3|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:38.041
# ::node	0	say-01	18-19
# ::node	0.0	lord	16-17
# ::node	0.0.0	lord	14-15
# ::node	0.1	compensate-01	8-9
# ::node	0.1.0	consider-02	6-7
# ::node	0.1.0.0	party	3-4
# ::node	0.1.0.0.0	work-01	2-3
# ::node	0.1.0.1	accident	12-13
# ::node	0.1.0.1.0	road	11-12
# ::node	0.1.0.1.1	minor	10-11
# ::root	0	say-01
# ::edge	accident	location	road	0.1.0.1	0.1.0.1.0	
# ::edge	accident	mod	minor	0.1.0.1	0.1.0.1.1	
# ::edge	consider-02	ARG0	party	0.1.0	0.1.0.0	
# ::edge	consider-02	ARG1	compensate-01	0.1.0	0.1	
# ::edge	consider-02	ARG3	accident	0.1.0	0.1.0.1	
# ::edge	lord	mod	lord	0.0	0.0.0	
# ::edge	say-01	ARG0	lord	0	0.0	
# ::edge	say-01	ARG1	compensate-01	0	0.1	
# ::edge	work-01	ARG0	party	0.1.0.0.0	0.1.0.0	
(s / say-01 
      :ARG0 (l / lord 
            :mod (l2 / lord)) 
      :ARG1 (c / compensate-01 
            :ARG1-of (c2 / consider-02 
                  :ARG0 (p / party 
                        :ARG0-of (w / work-01)) 
                  :ARG3 (a / accident 
                        :location (r / road) 
                        :mod (m / minor)))))

# ::snt mrs ann coulter the centre welfare officer of the abingdon centre of the red cross spoke about first aid emphasising how important the first treatment was in dealing with any accident
# ::tok mrs ann coulter the centre welfare officer of the abingdon centre of the red cross spoke about first aid emphasising how important the first treatment was in dealing with any accident
# ::alignments 30-31|0.1.0 29-30|0.1.0.0 27-28|0.1 24-25|0 21-22|0.0 18-19|0.3.0.1 15-16|0.3.0 14-15|0.3 13-14|0.3.1 6-7|0.3.0.0 5-6|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:38.162
# ::node	0	treat-03	24-25
# ::node	0.0	important	21-22
# ::node	0.1	deal-01	27-28
# ::node	0.1.0	accident	30-31
# ::node	0.1.0.0	any	29-30
# ::node	0.2	welfare	5-6
# ::node	0.3	cross-02	14-15
# ::node	0.3.0	speak-01	15-16
# ::node	0.3.0.0	officer	6-7
# ::node	0.3.0.1	aid-01	18-19
# ::node	0.3.1	red	13-14
# ::root	0	treat-03
# ::edge	accident	mod	any	0.1.0	0.1.0.0	
# ::edge	cross-02	ARG1	treat-03	0.3	0	
# ::edge	cross-02	mod	red	0.3	0.3.1	
# ::edge	deal-01	ARG0	treat-03	0.1	0	
# ::edge	deal-01	ARG1	accident	0.1	0.1.0	
# ::edge	speak-01	ARG0	officer	0.3.0	0.3.0.0	
# ::edge	speak-01	ARG1	cross-02	0.3.0	0.3	
# ::edge	speak-01	ARG2	aid-01	0.3.0	0.3.0.1	
# ::edge	treat-03	ARG0	important	0	0.0	
# ::edge	treat-03	ARG1	welfare	0	0.2	
(t / treat-03 
      :ARG0 (i / important) 
      :ARG0-of (d / deal-01 
            :ARG1 (a / accident 
                  :mod (a2 / any))) 
      :ARG1 (w / welfare) 
      :ARG1-of (c / cross-02 
            :ARG1-of (s / speak-01 
                  :ARG0 (o / officer) 
                  :ARG2 (a3 / aid-01)) 
            :mod (r / red)))

# ::snt secretary of the bicester hunt with whaddon chase mr robert vallance saidthe bicester hunt are very sorry indeed that this accident took place and i personally apologised to the driver mr olejnik on behalf of the hunt
# ::tok secretary of the bicester hunt with whaddon chase mr robert vallance saidthe bicester hunt are very sorry indeed that this accident took place and i personally apologised to the driver mr olejnik on behalf of the hunt
# ::alignments 36-37|0.0.0.0.1 29-30|0.0.0.0.0.1.0+0.0.0.0.0.1 25-26|0.0.0.0.0.0.0 24-25|0.2 23-24|0 22-23|0.1 20-21|0.0 19-20|0.0.1 17-18|0.0.0.2 16-17|0.0.0 15-16|0.0.0.1 13-14|0.0.0.0 7-8|0.0.0.0.0 4-5|0.0.0.0.0.0 0-1|0.0.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:38.395
# ::node	0	and	23-24
# ::node	0.0	accident	20-21
# ::node	0.0.0	sorry-41	16-17
# ::node	0.0.0.0	hunt-01	13-14
# ::node	0.0.0.0.0	chase-01	7-8
# ::node	0.0.0.0.0.0	hunt-01	4-5
# ::node	0.0.0.0.0.0.0	personal	25-26
# ::node	0.0.0.0.0.0.1	secretary	0-1
# ::node	0.0.0.0.0.1	person	29-30
# ::node	0.0.0.0.0.1.0	drive-01	29-30
# ::node	0.0.0.0.1	hunt-01	36-37
# ::node	0.0.0.1	very	15-16
# ::node	0.0.0.2	indeed	17-18
# ::node	0.0.1	this	19-20
# ::node	0.1	place	22-23
# ::node	0.2	i	24-25
# ::root	0	and
# ::edge	accident	mod	this	0.0	0.0.1	
# ::edge	and	op1	accident	0	0.0	
# ::edge	and	op2	place	0	0.1	
# ::edge	and	op3	i	0	0.2	
# ::edge	chase-01	ARG0	hunt-01	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	chase-01	ARG1	person	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	drive-01	ARG0	person	0.0.0.0.0.1.0	0.0.0.0.0.1	
# ::edge	hunt-01	ARG0	chase-01	0.0.0.0	0.0.0.0.0	
# ::edge	hunt-01	ARG1	hunt-01	0.0.0.0.1	0.0.0.0	
# ::edge	hunt-01	ARG1	personal	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	indeed	degree	sorry-41	0.0.0.2	0.0.0	
# ::edge	secretary	mod	hunt-01	0.0.0.0.0.0.1	0.0.0.0.0.0	
# ::edge	sorry-41	ARG1	hunt-01	0.0.0	0.0.0.0	
# ::edge	sorry-41	ARG2	accident	0.0.0	0.0	
# ::edge	sorry-41	degree	very	0.0.0	0.0.0.1	
(a / and 
      :op1 (a2 / accident 
            :ARG2-of (s / sorry-41 
                  :ARG1 (h2 / hunt-01 
                        :ARG0 (c / chase-01 
                              :ARG0 (h3 / hunt-01 
                                    :ARG1 (p2 / personal) 
                                    :mod-of (s2 / secretary)) 
                              :ARG1 (p / person 
                                    :ARG0-of (d / drive-01))) 
                        :ARG1-of (h / hunt-01)) 
                  :degree (v / very) 
                  :degree-of (i2 / indeed)) 
            :mod (t / this)) 
      :op2 (p3 / place) 
      :op3 (i / i))

# ::snt if the worst conceivable accident were to occur in britain at a nuclear power station one million men women and children would die
# ::tok if the worst conceivable accident were to occur in britain at a nuclear power station one million men women and children would die
# ::alignments 22-23|0.1 20-21|0.1.1 19-20|0 18-19|0.0 17-18|0.1.0 14-15|0.1.0.0.1.0 13-14|0.1.0.0.1.0.0 12-13|0.1.0.0.1.0.0.0 9-10|0.1.0.0.1.1.0+0.1.0.0.1.1+0.1.0.0.1 7-8|0.1.0.0 4-5|0.1.0.0.0 3-4|0.1.0.0.0.0 2-3|0.1.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:38.548
# ::node	0	and	19-20
# ::node	0.0	woman	18-19
# ::node	0.1	die-01	22-23
# ::node	0.1.0	man	17-18
# ::node	0.1.0.0	occur-01	7-8
# ::node	0.1.0.0.0	accident	4-5
# ::node	0.1.0.0.0.0	conceive-01	3-4
# ::node	0.1.0.0.0.1	bad	2-3
# ::node	0.1.0.0.1	country	9-10
# ::node	0.1.0.0.1.0	station	14-15
# ::node	0.1.0.0.1.0.0	power	13-14
# ::node	0.1.0.0.1.0.0.0	nucleus	12-13
# ::node	0.1.0.0.1.1	name	9-10
# ::node	0.1.0.0.1.1.0	"Britain"	9-10
# ::node	0.1.1	child	20-21
# ::root	0	and
# ::edge	accident	mod	bad	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	and	op1	woman	0	0.0	
# ::edge	and	op2	die-01	0	0.1	
# ::edge	conceive-01	ARG1	accident	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	country	location	station	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	country	name	name	0.1.0.0.1	0.1.0.0.1.1	
# ::edge	die-01	ARG1	man	0.1	0.1.0	
# ::edge	die-01	ARG2	child	0.1	0.1.1	
# ::edge	name	op1	"Britain"	0.1.0.0.1.1	0.1.0.0.1.1.0	
# ::edge	occur-01	ARG0	accident	0.1.0.0	0.1.0.0.0	
# ::edge	occur-01	ARG1	man	0.1.0.0	0.1.0	
# ::edge	occur-01	location	country	0.1.0.0	0.1.0.0.1	
# ::edge	power	mod	nucleus	0.1.0.0.1.0.0	0.1.0.0.1.0.0.0	
# ::edge	station	mod	power	0.1.0.0.1.0	0.1.0.0.1.0.0	
(a / and 
      :op1 (w / woman) 
      :op2 (d / die-01 
            :ARG1 (m / man 
                  :ARG1-of (o / occur-01 
                        :ARG0 (a2 / accident 
                              :ARG1-of (c3 / conceive-01) 
                              :mod (b / bad)) 
                        :location (c2 / country 
                              :location (s / station 
                                    :mod (p / power 
                                          :mod (n / nucleus))) 
                              :name (n2 / name 
                                    :op1 "Britain")))) 
            :ARG2 (c / child)))

# ::snt an exclusive feature of the readers digest double payout plan is  an additional benefit which is added at no extra cost  in the event of you losing your life in an accident outside work  we guarantee to pay your dependents double the original sum  assured
# ::tok an exclusive feature of the readers digest double payout plan is an additional benefit which is added at no extra cost in the event of you losing your life in an accident outside work we guarantee to pay your dependents double the original sum assured
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:38.549
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt fifteen people were killed in 10 road accidents over the weekend
# ::tok fifteen people were killed in 10 road accidents over the weekend
# ::alignments 10-11|0.0.1 7-8|0.0 6-7|0.0.0 5-6|0.0.2 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:38.566
# ::node	0	kill-01	3-4
# ::node	0.0	accident	7-8
# ::node	0.0.0	road	6-7
# ::node	0.0.1	weekend	10-11
# ::node	0.0.2	10	5-6
# ::root	0	kill-01
# ::edge	accident	location	road	0.0	0.0.0	
# ::edge	accident	location	weekend	0.0	0.0.1	
# ::edge	accident	quant	10	0.0	0.0.2	
# ::edge	kill-01	location	accident	0	0.0	
(k / kill-01 
      :location (a / accident 
            :location (r / road) 
            :location (w / weekend) 
            :quant 10))

# ::snt mr wright said there was a suspicion that mr watson had driven close to mr davidson and his four friends to buzz them as a joke just before the accident
# ::tok mr wright said there was a suspicion that mr watson had driven close to mr davidson and his four friends to buzz them as a joke just before the accident
# ::alignments 29-30|0.0.0.1.1 27-28|0.0.0.1 26-27|0.0.0.1.0 25-26|0.0.0.1.2 19-20|0.0.0.0.0.0+0.0.0.0.0 18-19|0.0.0.1.2.0 16-17|0.0 11-12|0.0.0 6-7|0.0.0.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:38.711
# ::node	0	say-01	2-3
# ::node	0.0	and	16-17
# ::node	0.0.0	drive-02	11-12
# ::node	0.0.0.0	suspect-01	6-7
# ::node	0.0.0.0.0	have-rel-role-91	19-20
# ::node	0.0.0.0.0.0	friend	19-20
# ::node	0.0.0.1	before	27-28
# ::node	0.0.0.1.0	just	26-27
# ::node	0.0.0.1.1	accident	29-30
# ::node	0.0.0.1.2	joke-01	25-26
# ::node	0.0.0.1.2.0	4	18-19
# ::root	0	say-01
# ::edge	before	mod	just	0.0.0.1	0.0.0.1.0	
# ::edge	before	op1	accident	0.0.0.1	0.0.0.1.1	
# ::edge	drive-02	ARG0	suspect-01	0.0.0	0.0.0.0	
# ::edge	drive-02	ARG1	and	0.0.0	0.0	
# ::edge	drive-02	time	before	0.0.0	0.0.0.1	
# ::edge	have-rel-role-91	ARG2	friend	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	joke-01	ARG1	4	0.0.0.1.2	0.0.0.1.2.0	
# ::edge	joke-01	time	before	0.0.0.1.2	0.0.0.1	
# ::edge	say-01	ARG1	and	0	0.0	
# ::edge	suspect-01	ARG1	have-rel-role-91	0.0.0.0	0.0.0.0.0	
(s2 / say-01 
      :ARG1 (a2 / and 
            :ARG1-of (d / drive-02 
                  :ARG0 (s / suspect-01 
                        :ARG1 (h / have-rel-role-91 
                              :ARG2 (f / friend))) 
                  :time (b / before 
                        :mod (j / just) 
                        :op1 (a / accident) 
                        :time-of (j2 / joke-01 
                              :ARG1 4)))))

# ::snt its so easy to be snobbish  but if the problems of experimentation that comes out of accident because you want to achieve an accident and you want to achieve the fall of things on the page
# ::tok its so easy to be snobbish but if the problems of experimentation that comes out of accident because you want to achieve an accident and you want to achieve the fall of things on the page
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:38.712
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt how do you feel about the accident
# ::tok how do you feel about the accident
# ::alignments 6-7|0.1 3-4|0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:38.720
# ::node	0	feel-01	3-4
# ::node	0.0	you	2-3
# ::node	0.1	accident	6-7
# ::root	0	feel-01
# ::edge	feel-01	ARG0	you	0	0.0	
# ::edge	feel-01	ARG1	accident	0	0.1	
(f / feel-01 
      :ARG0 (y / you) 
      :ARG1 (a / accident))

# ::snt a schoolteacher was recovering in hospital today after a horrific woodworking accident cost him his left forefinger
# ::tok a schoolteacher was recovering in hospital today after a horrific woodworking accident cost him his left forefinger
# ::alignments 12-13|0.2.0 11-12|0.2.0.0 7-8|0.2 6-7|0.1 5-6|0.0 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:38.745
# ::node	0	recover-01	3-4
# ::node	0.0	hospital	5-6
# ::node	0.1	today	6-7
# ::node	0.2	after	7-8
# ::node	0.2.0	cost-01	12-13
# ::node	0.2.0.0	accident	11-12
# ::root	0	recover-01
# ::edge	cost-01	ARG1	accident	0.2.0	0.2.0.0	
# ::edge	cost-01	time	after	0.2.0	0.2	
# ::edge	recover-01	location	hospital	0	0.0	
# ::edge	recover-01	time	after	0	0.2	
# ::edge	recover-01	time	today	0	0.1	
(r / recover-01 
      :location (h / hospital) 
      :time (t / today) 
      :time (a2 / after 
            :time-of (c / cost-01 
                  :ARG1 (a / accident))))

# ::snt nicholas browne for the prosecution said mr burt had seen mr king scratching a car during an altercation which followed a minor accident in buckingham in may 1987
# ::tok nicholas browne for the prosecution said mr burt had seen mr king scratching a car during an altercation which followed a minor accident in buckingham in may 1987
# ::alignments 26-28|0.0.0.1+0.0.0.0+0.0.0 22-23|0.1.0.0.0 21-22|0.1.0.0.0.0 19-20|0.1.0.0 14-15|0.1.0 11-12|0.1.1 9-10|0.1 5-6|0 4-5|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:39.051
# ::node	0	say-01	5-6
# ::node	0.0	prosecute-01	4-5
# ::node	0.0.0	date-entity	26-28
# ::node	0.0.0.0	5	26-28
# ::node	0.0.0.1	1987	26-28
# ::node	0.1	see-01	9-10
# ::node	0.1.0	car	14-15
# ::node	0.1.0.0	follow-01	19-20
# ::node	0.1.0.0.0	accident	22-23
# ::node	0.1.0.0.0.0	minor	21-22
# ::node	0.1.1	king	11-12
# ::root	0	say-01
# ::edge	accident	mod	minor	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	date-entity	month	5	0.0.0	0.0.0.0	
# ::edge	date-entity	year	1987	0.0.0	0.0.0.1	
# ::edge	follow-01	ARG1	car	0.1.0.0	0.1.0	
# ::edge	follow-01	ARG2	accident	0.1.0.0	0.1.0.0.0	
# ::edge	prosecute-01	ARG0	date-entity	0.0	0.0.0	
# ::edge	say-01	ARG0	prosecute-01	0	0.0	
# ::edge	say-01	ARG1	see-01	0	0.1	
# ::edge	see-01	ARG0	car	0.1	0.1.0	
# ::edge	see-01	ARG1	king	0.1	0.1.1	
(s2 / say-01 
      :ARG0 (p / prosecute-01 
            :ARG0 (d / date-entity 
                  :month 5 
                  :year 1987)) 
      :ARG1 (s / see-01 
            :ARG0 (c / car 
                  :ARG1-of (f / follow-01 
                        :ARG2 (a / accident 
                              :mod (m / minor)))) 
            :ARG1 (k / king)))

# ::snt cyril giles of bridge terrace chinnor road thame died instantly in the accident at the warehouse of ironmongers j
# ::tok cyril giles of bridge terrace chinnor road thame died instantly in the accident at the warehouse of ironmongers j
# ::alignments 12-13|0.2 9-10|0.1 8-9|0 6-7|0.0 3-4|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:39.075
# ::node	0	die-01	8-9
# ::node	0.0	road	6-7
# ::node	0.0.0	bridge	3-4
# ::node	0.1	instant	9-10
# ::node	0.2	accident	12-13
# ::root	0	die-01
# ::edge	die-01	ARG1	road	0	0.0	
# ::edge	die-01	manner	instant	0	0.1	
# ::edge	die-01	time	accident	0	0.2	
# ::edge	road	mod	bridge	0.0	0.0.0	
(d / die-01 
      :ARG1 (r / road 
            :mod (b / bridge)) 
      :manner (i / instant) 
      :time (a / accident))

# ::snt accidents are increasing year by year on the clogged m25 according to new figures from the automobile association
# ::tok accidents are increasing year by year on the clogged m25 according to new figures from the automobile association
# ::alignments 17-18|0.1 16-17|0.1.0 13-14|0.1.1 12-13|0.1.1.0 5-6|0.3 3-4|0.2 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:39.135
# ::node	0	increase-01	2-3
# ::node	0.0	accident	0-1
# ::node	0.1	associate-01	17-18
# ::node	0.1.0	automobile	16-17
# ::node	0.1.1	figure	13-14
# ::node	0.1.1.0	new	12-13
# ::node	0.2	year	3-4
# ::node	0.3	year	5-6
# ::root	0	increase-01
# ::edge	associate-01	ARG1	automobile	0.1	0.1.0	
# ::edge	figure	mod	associate-01	0.1.1	0.1	
# ::edge	figure	mod	new	0.1.1	0.1.1.0	
# ::edge	increase-01	ARG1	accident	0	0.0	
# ::edge	increase-01	ARG2	associate-01	0	0.1	
# ::edge	increase-01	time	year	0	0.2	
# ::edge	increase-01	time	year	0	0.3	
(i / increase-01 
      :ARG1 (a3 / accident) 
      :ARG2 (a / associate-01 
            :ARG1 (a2 / automobile) 
            :mod-of (f / figure 
                  :mod (n / new))) 
      :time (y2 / year) 
      :time (y / year))

# ::snt tort law is peculiarly exposed to these demands in its role as the traditional source of accident compensation
# ::tok tort law is peculiarly exposed to these demands in its role as the traditional source of accident compensation
# ::alignments 17-18|0.0.0 16-17|0.0.0.0 14-15|0.0 13-14|0.0.1 10-11|0.2.0 7-8|0.2 4-5|0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:39.167
# ::node	0	expose-01	4-5
# ::node	0.0	source	14-15
# ::node	0.0.0	compensate-01	17-18
# ::node	0.0.0.0	accident	16-17
# ::node	0.0.1	tradition	13-14
# ::node	0.1	law	1-2
# ::node	0.2	demand-01	7-8
# ::node	0.2.0	role	10-11
# ::root	0	expose-01
# ::edge	compensate-01	ARG0	source	0.0.0	0.0	
# ::edge	compensate-01	ARG3	accident	0.0.0	0.0.0.0	
# ::edge	demand-01	ARG1	role	0.2	0.2.0	
# ::edge	expose-01	ARG0	source	0	0.0	
# ::edge	expose-01	ARG1	law	0	0.1	
# ::edge	expose-01	ARG2	demand-01	0	0.2	
# ::edge	source	mod	tradition	0.0	0.0.1	
(e / expose-01 
      :ARG0 (s / source 
            :ARG0-of (c / compensate-01 
                  :ARG3 (a / accident)) 
            :mod (t / tradition)) 
      :ARG1 (l / law) 
      :ARG2 (d / demand-01 
            :ARG1 (r / role)))

# ::snt all the greater reason then to plot the subterranean accidents
# ::tok all the greater reason then to plot the subterranean accidents
# ::alignments 9-10|0.0 8-9|0 6-7|0.0.0 4-5|0.0.0.0.0 3-4|0.0.0.0 2-3|0.0.0.0.1 0-1|0.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:39.220
# ::node	0	subterranean	8-9
# ::node	0.0	accident	9-10
# ::node	0.0.0	plot-01	6-7
# ::node	0.0.0.0	reason	3-4
# ::node	0.0.0.0.0	then	4-5
# ::node	0.0.0.0.1	great	2-3
# ::node	0.0.0.0.1.0	all	0-1
# ::root	0	subterranean
(s / subterranean 
      :mod-of (a / accident 
            :ARG1-of (p / plot-01 
                  :ARG0 (r / reason 
                        :mod (t / then) 
                        :quant (g / great 
                              :mod (a2 / all))))))

# ::snt they point out that the surrey accident happened where private aircraft are forced to fly in channels between space reserved for commercial airliners
# ::tok they point out that the surrey accident happened where private aircraft are forced to fly in channels between space reserved for commercial airliners
# ::alignments 22-23|0.0 21-22|0.0.0 19-20|0 18-19|0.1.1.0 17-18|0.1.1 16-17|0.1 14-15|0.1.0 12-13|0.1.0.0 10-11|0.1.0.0.1 9-10|0.1.0.0.2.0 7-8|0.1.0.0.2 6-7|0.1.0.0.2.1 1-2|0.1.0.0.0.0 0-1|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:39.430
# ::node	0	reserved	19-20
# ::node	0.0	airliner	22-23
# ::node	0.0.0	commerce	21-22
# ::node	0.1	channel	16-17
# ::node	0.1.0	fly-01	14-15
# ::node	0.1.0.0	force-01	12-13
# ::node	0.1.0.0.0	they	0-1
# ::node	0.1.0.0.0.0	point	1-2
# ::node	0.1.0.0.1	aircraft	10-11
# ::node	0.1.0.0.2	happen-01	7-8
# ::node	0.1.0.0.2.0	private	9-10
# ::node	0.1.0.0.2.1	accident	6-7
# ::node	0.1.1	between	17-18
# ::node	0.1.1.0	space	18-19
# ::root	0	reserved
# ::edge	airliner	mod	commerce	0.0	0.0.0	
# ::edge	between	op1	space	0.1.1	0.1.1.0	
# ::edge	channel	mod	between	0.1	0.1.1	
# ::edge	fly-01	ARG1	channel	0.1.0	0.1	
# ::edge	force-01	ARG0	they	0.1.0.0	0.1.0.0.0	
# ::edge	force-01	ARG1	aircraft	0.1.0.0	0.1.0.0.1	
# ::edge	force-01	ARG2	fly-01	0.1.0.0	0.1.0	
# ::edge	happen-01	ARG0	private	0.1.0.0.2	0.1.0.0.2.0	
# ::edge	happen-01	ARG1	accident	0.1.0.0.2	0.1.0.0.2.1	
# ::edge	happen-01	time	force-01	0.1.0.0.2	0.1.0.0	
# ::edge	point	ARG0	they	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	reserved	mod	airliner	0	0.0	
# ::edge	reserved	quant	channel	0	0.1	
(r / reserved 
      :mod (a / airliner 
            :mod (c / commerce)) 
      :quant (c2 / channel 
            :ARG1-of (f / fly-01 
                  :ARG2-of (f2 / force-01 
                        :ARG0 (t / they 
                              :ARG0-of (p2 / point)) 
                        :ARG1 (a2 / aircraft) 
                        :time-of (h / happen-01 
                              :ARG0 (p / private) 
                              :ARG1 (a3 / accident)))) 
            :mod (b / between 
                  :op1 (s / space))))

# ::snt it was cradleys first win of the season and they did it in front of erik gundersen who had been their no 1 for the last six years until that dreadful accident
# ::tok it was cradleys first win of the season and they did it in front of erik gundersen who had been their no 1 for the last six years until that dreadful accident
# ::alignments 31-32|0.0.2.0.1.0 28-29|0.0.2.0.1 27-28|0.0.2.0.2+0.0.2.0 26-27|0.0.2 25-26|0.0.3 22-23|0.0.2.0.0 21-22|0.0.2.0.0.0 13-14|0.1 11-12|0.1.1 9-10|0.1.0 8-9|0 7-8|0.0.1 4-5|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:39.605
# ::node	0	and	8-9
# ::node	0.0	win-01	4-5
# ::node	0.0.0	it	0-1
# ::node	0.0.1	season	7-8
# ::node	0.0.2	6	26-27
# ::node	0.0.2.0	temporal-quantity	27-28
# ::node	0.0.2.0.0	1	22-23
# ::node	0.0.2.0.0.0	-	21-22
# ::node	0.0.2.0.1	until	28-29
# ::node	0.0.2.0.1.0	accident	31-32
# ::node	0.0.2.0.2	year	27-28
# ::node	0.0.3	last	25-26
# ::node	0.1	front	13-14
# ::node	0.1.0	they	9-10
# ::node	0.1.1	it	11-12
# ::root	0	and
# ::edge	-	op1	1	0.0.2.0.0.0	0.0.2.0.0	
# ::edge	6	op1	win-01	0.0.2	0.0	
# ::edge	and	op1	win-01	0	0.0	
# ::edge	and	op2	front	0	0.1	
# ::edge	front	ARG0	they	0.1	0.1.0	
# ::edge	it	topic	front	0.1.1	0.1	
# ::edge	last	op1	win-01	0.0.3	0.0	
# ::edge	temporal-quantity	quant	1	0.0.2.0	0.0.2.0.0	
# ::edge	temporal-quantity	quant	6	0.0.2.0	0.0.2	
# ::edge	temporal-quantity	time	until	0.0.2.0	0.0.2.0.1	
# ::edge	temporal-quantity	unit	year	0.0.2.0	0.0.2.0.2	
# ::edge	until	op1	accident	0.0.2.0.1	0.0.2.0.1.0	
# ::edge	win-01	ARG0	it	0.0	0.0.0	
# ::edge	win-01	ARG1	season	0.0	0.0.1	
(a2 / and 
      :op1 (w / win-01 
            :ARG0 (i2 / it) 
            :ARG1 (s / season) 
            :op-of (6 / 6 
                  :quant-of (t / temporal-quantity 
                        :quant (1 / 1 
                              :op-of (- / -)) 
                        :time (u / until 
                              :op1 (a / accident)) 
                        :unit (y / year))) 
            :op-of (l / last)) 
      :op2 (f / front 
            :ARG0 (t2 / they) 
            :topic-of (i / it)))

# ::snt a man was killed in an accident in the channel tunnel dash, the accident understood to have been caused by a boring machine happened in the main southbound tunnel from shakespeare cliff
# ::tok a man was killed in an accident in the channel tunnel dash , the accident understood to have been caused by a boring machine happened in the main southbound tunnel from shakespeare cliff
# ::alignments 29-30|0.0.1.0 27-28|0.0.1.0.0 24-25|0.0.1 23-24|0.0 22-23|0.0.0 19-20|0 15-16|0.2 14-15|0.1 10-11|0.0.0.0.0 9-10|0.0.0.0 6-7|0.1.0.1 3-4|0.1.0 1-2|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:39.786
# ::node	0	cause-01	19-20
# ::node	0.0	machine	23-24
# ::node	0.0.0	bore-02	22-23
# ::node	0.0.0.0	channel	9-10
# ::node	0.0.0.0.0	tunnel	10-11
# ::node	0.0.1	happen-01	24-25
# ::node	0.0.1.0	tunnel	29-30
# ::node	0.0.1.0.0	main	27-28
# ::node	0.1	accident	14-15
# ::node	0.1.0	kill-01	3-4
# ::node	0.1.0.0	man	1-2
# ::node	0.1.0.1	accident	6-7
# ::node	0.2	understand-01	15-16
# ::root	0	cause-01
# ::edge	bore-02	ARG0	machine	0.0.0	0.0	
# ::edge	bore-02	ARG1	channel	0.0.0	0.0.0.0	
# ::edge	cause-01	ARG0	machine	0	0.0	
# ::edge	cause-01	ARG1	accident	0	0.1	
# ::edge	happen-01	ARG1	machine	0.0.1	0.0	
# ::edge	happen-01	time	tunnel	0.0.1	0.0.1.0	
# ::edge	kill-01	ARG0	accident	0.1.0	0.1	
# ::edge	kill-01	ARG1	man	0.1.0	0.1.0.0	
# ::edge	kill-01	location	accident	0.1.0	0.1.0.1	
# ::edge	tunnel	mod	channel	0.0.0.0.0	0.0.0.0	
# ::edge	tunnel	mod	main	0.0.1.0	0.0.1.0.0	
# ::edge	understand-01	ARG1	cause-01	0.2	0	
(c / cause-01 
      :ARG0 (m2 / machine 
            :ARG0-of (b / bore-02 
                  :ARG1 (c2 / channel 
                        :mod-of (t2 / tunnel))) 
            :ARG1-of (h / happen-01 
                  :time (t / tunnel 
                        :mod (m / main)))) 
      :ARG1 (a / accident 
            :ARG0-of (k / kill-01 
                  :ARG1 (m3 / man) 
                  :location (a2 / accident))) 
      :ARG1-of (u / understand-01))

# ::snt even as a junior at flushing meadow he saw an everyday occurrence turn into a fatal accident
# ::tok even as a junior at flushing meadow he saw an everyday occurrence turn into a fatal accident
# ::alignments 16-17|0.3 15-16|0.3.0 10-11|0.1.0+0.1 8-9|0 7-8|0.0 3-4|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:40.051
# ::node	0	see-01	8-9
# ::node	0.0	he	7-8
# ::node	0.1	person	10-11
# ::node	0.1.0	everyday	10-11
# ::node	0.2	junior	3-4
# ::node	0.3	accident	16-17
# ::node	0.3.0	fatal	15-16
# ::root	0	see-01
# ::edge	accident	mod	fatal	0.3	0.3.0	
# ::edge	person	mod	everyday	0.1	0.1.0	
# ::edge	see-01	ARG0	he	0	0.0	
# ::edge	see-01	ARG2	person	0	0.1	
# ::edge	see-01	domain	junior	0	0.2	
# ::edge	see-01	medium	accident	0	0.3	
(s / see-01 
      :ARG0 (h / he) 
      :ARG2 (p / person 
            :mod (e / everyday)) 
      :domain (j / junior) 
      :medium (a / accident 
            :mod (f / fatal)))

# ::snt it will pay you  a cash sum of up to 80000 if you are permanently disabled  as the result of an accident
# ::tok it will pay you a cash sum of up to 80000 if you are permanently disabled as the result of an accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:40.052
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt accidents in spain can have serious consequences including the impounding of your car and property and a bail bond is strongly recommended
# ::tok accidents in spain can have serious consequences including the impounding of your car and property and a bail bond is strongly recommended
# ::alignments 21-22|0.0.0.1.2 20-21|0.0.0.1.2.1 17-18|0.0 15-16|0.0.0.1 14-15|0.1 13-14|0 12-13|0.0.0.1.1 6-7|0.0.0 5-6|0.0.0.0 3-4|0.0.0.1.0 0-1|0.0.0.1.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:40.109
# ::node	0	and	13-14
# ::node	0.0	bail-02	17-18
# ::node	0.0.0	consequence	6-7
# ::node	0.0.0.0	serious	5-6
# ::node	0.0.0.1	and	15-16
# ::node	0.0.0.1.0	possible	3-4
# ::node	0.0.0.1.1	car	12-13
# ::node	0.0.0.1.2	recommend-01	21-22
# ::node	0.0.0.1.2.0	accident	0-1
# ::node	0.0.0.1.2.1	strong	20-21
# ::node	0.1	property	14-15
# ::root	0	and
# ::edge	and	op1	possible	0.0.0.1	0.0.0.1.0	
# ::edge	and	op1	property	0	0.1	
# ::edge	and	op2	consequence	0.0.0.1	0.0.0	
# ::edge	and	op3	car	0.0.0.1	0.0.0.1.1	
# ::edge	and	op4	recommend-01	0.0.0.1	0.0.0.1.2	
# ::edge	bail-02	ARG0	consequence	0.0	0.0.0	
# ::edge	bail-02	location	and	0.0	0	
# ::edge	consequence	mod	serious	0.0.0	0.0.0.0	
# ::edge	recommend-01	ARG0	accident	0.0.0.1.2	0.0.0.1.2.0	
# ::edge	recommend-01	manner	strong	0.0.0.1.2	0.0.0.1.2.1	
(a2 / and 
      :location-of (b / bail-02 
            :ARG0 (c2 / consequence 
                  :mod (s2 / serious) 
                  :op-of (a / and 
                        :op1 (p2 / possible) 
                        :op2 (c / car) 
                        :op3 (r / recommend-01 
                              :ARG0 (a3 / accident) 
                              :manner (s / strong))))) 
      :op1 (p / property))

# ::snt in other war films however the purpose is revealed by insistent preachiness as in reach for the sky 1956 where the story of douglas bader the determined pilot who despite losing both his legs in an accident went on to command the air force during the battle of britain is told as a story that was not only an example to those in war but is now a source of inspiration to many in peace
# ::tok in other war films however the purpose is revealed by insistent preachiness as in reach for the sky 1956 where the story of douglas bader the determined pilot who despite losing both his legs in an accident went on to command the air force during the battle of britain is told as a story that was not only an example to those in war but is now a source of inspiration to many in peace
# ::alignments 74-75|0.1.1 72-73|0.2.0.0 70-71|0.2.0 68-69|0.2 66-67|0.2.1 64-65|0 63-64|0.3 59-60|0.0 57-58|0.0.0 53-54|0.1.3 50-51|0.1 48-49|0.1.2.0.0.0+0.1.2.0.0+0.1.2.0 46-47|0.1.2 42-44|0.1.2.1.1.0.0+0.1.2.1.1.0.1+0.1.2.1.1.0+0.1.2.1.1 40-41|0.1.2.1 36-37|0.1.2.1.0 33-34|0.1.0 31-32|0.1.0.1 30-31|0.1.0.0 26-27|0.1.0.0.0.1.0.0.1 21-22|0.1.0.0.0.1.0.0.0 18-19|0.1.0.0.1.0+0.1.0.0.1 17-18|0.1.0.0.0.1.0 14-15|0.1.0.0.0.1.0.0 8-9|0.1.0.0.0 6-7|0.1.0.0.0.1 3-4|0.1.0.0.0.0 2-3|0.1.0.0.0.0.0 1-2|0.1.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:42.052
# ::node	0	contrast-01	64-65
# ::node	0.0	example	59-60
# ::node	0.0.0	only	57-58
# ::node	0.1	tell-01	50-51
# ::node	0.1.0	leg	33-34
# ::node	0.1.0.0	lose-02	30-31
# ::node	0.1.0.0.0	reveal-01	8-9
# ::node	0.1.0.0.0.0	film	3-4
# ::node	0.1.0.0.0.0.0	war	2-3
# ::node	0.1.0.0.0.0.1	other	1-2
# ::node	0.1.0.0.0.1	purpose	6-7
# ::node	0.1.0.0.0.1.0	sky	17-18
# ::node	0.1.0.0.0.1.0.0	reach-01	14-15
# ::node	0.1.0.0.0.1.0.0.0	story	21-22
# ::node	0.1.0.0.0.1.0.0.1	determine-01	26-27
# ::node	0.1.0.0.1	date-entity	18-19
# ::node	0.1.0.0.1.0	1956	18-19
# ::node	0.1.0.1	both	31-32
# ::node	0.1.1	peace	74-75
# ::node	0.1.2	battle-01	46-47
# ::node	0.1.2.0	country	48-49
# ::node	0.1.2.0.0	name	48-49
# ::node	0.1.2.0.0.0	"Britain"	48-49
# ::node	0.1.2.1	command-02	40-41
# ::node	0.1.2.1.0	accident	36-37
# ::node	0.1.2.1.1	military	42-44
# ::node	0.1.2.1.1.0	name	42-44
# ::node	0.1.2.1.1.0.0	"Air"	42-44
# ::node	0.1.2.1.1.0.1	"Force"	42-44
# ::node	0.1.3	story	53-54
# ::node	0.2	source	68-69
# ::node	0.2.0	inspire-01	70-71
# ::node	0.2.0.0	many	72-73
# ::node	0.2.1	now	66-67
# ::node	0.3	war	63-64
# ::root	0	contrast-01
# ::edge	battle-01	ARG1	tell-01	0.1.2	0.1	
# ::edge	battle-01	location	country	0.1.2	0.1.2.0	
# ::edge	command-02	ARG0	accident	0.1.2.1	0.1.2.1.0	
# ::edge	command-02	ARG1	military	0.1.2.1	0.1.2.1.1	
# ::edge	command-02	time	battle-01	0.1.2.1	0.1.2	
# ::edge	contrast-01	ARG0	example	0	0.0	
# ::edge	contrast-01	ARG1	tell-01	0	0.1	
# ::edge	contrast-01	ARG2	source	0	0.2	
# ::edge	contrast-01	consist	war	0	0.3	
# ::edge	country	name	name	0.1.2.0	0.1.2.0.0	
# ::edge	date-entity	year	1956	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	determine-01	ARG1	reach-01	0.1.0.0.0.1.0.0.1	0.1.0.0.0.1.0.0	
# ::edge	example	mod	only	0.0	0.0.0	
# ::edge	film	domain	war	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	film	mod	other	0.1.0.0.0.0	0.1.0.0.0.0.1	
# ::edge	inspire-01	ARG0	source	0.2.0	0.2	
# ::edge	inspire-01	ARG1	many	0.2.0	0.2.0.0	
# ::edge	leg	mod	both	0.1.0	0.1.0.1	
# ::edge	lose-02	ARG1	leg	0.1.0.0	0.1.0	
# ::edge	lose-02	time	date-entity	0.1.0.0	0.1.0.0.1	
# ::edge	military	name	name	0.1.2.1.1	0.1.2.1.1.0	
# ::edge	name	op1	"Air"	0.1.2.1.1.0	0.1.2.1.1.0.0	
# ::edge	name	op1	"Britain"	0.1.2.0.0	0.1.2.0.0.0	
# ::edge	name	op2	"Force"	0.1.2.1.1.0	0.1.2.1.1.0.1	
# ::edge	reach-01	ARG0	story	0.1.0.0.0.1.0.0	0.1.0.0.0.1.0.0.0	
# ::edge	reach-01	ARG1	sky	0.1.0.0.0.1.0.0	0.1.0.0.0.1.0	
# ::edge	reveal-01	ARG0	film	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	reveal-01	ARG1	purpose	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	reveal-01	ARG2	lose-02	0.1.0.0.0	0.1.0.0	
# ::edge	sky	mod	purpose	0.1.0.0.0.1.0	0.1.0.0.0.1	
# ::edge	source	time	now	0.2	0.2.1	
# ::edge	tell-01	ARG0	leg	0.1	0.1.0	
# ::edge	tell-01	ARG1	peace	0.1	0.1.1	
# ::edge	tell-01	location	story	0.1	0.1.3	
(c / contrast-01 
      :ARG0 (e / example 
            :mod (o / only)) 
      :ARG1 (t / tell-01 
            :ARG0 (l / leg 
                  :ARG1-of (l2 / lose-02 
                        :ARG2-of (r2 / reveal-01 
                              :ARG0 (f / film 
                                    :domain (w2 / war) 
                                    :mod (o2 / other)) 
                              :ARG1 (p2 / purpose 
                                    :mod-of (s4 / sky 
                                          :ARG1-of (r / reach-01 
                                                :ARG0 (s3 / story) 
                                                :ARG1-of (d / determine-01))))) 
                        :time (d2 / date-entity 
                              :year 1956)) 
                  :mod (b2 / both)) 
            :ARG1 (p / peace) 
            :ARG1-of (b / battle-01 
                  :location (c2 / country 
                        :name (n2 / name 
                              :op1 "Britain")) 
                  :time-of (c3 / command-02 
                        :ARG0 (a / accident) 
                        :ARG1 (m2 / military 
                              :name (n3 / name 
                                    :op1 "Air" 
                                    :op2 "Force")))) 
            :location (s2 / story)) 
      :ARG2 (s / source 
            :ARG0-of (i / inspire-01 
                  :ARG1 (m / many)) 
            :time (n / now)) 
      :consist (w / war))

# ::snt an accident involving britains nick phipps delayed the start of the second run at the fourman world cup event in winterberg east germany yesterday
# ::tok an accident involving britains nick phipps delayed the start of the second run at the fourman world cup event in winterberg east germany yesterday
# ::alignments 23-24|0.0.0 21-22|0.0.1 18-19|0.1 17-18|0.1.0 16-17|0.1.0.0 8-9|0.0 6-7|0 2-3|0.2.0 1-2|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:42.158
# ::node	0	delay-01	6-7
# ::node	0.0	start-01	8-9
# ::node	0.0.0	yesterday	23-24
# ::node	0.0.1	east	21-22
# ::node	0.1	event	18-19
# ::node	0.1.0	cup	17-18
# ::node	0.1.0.0	world	16-17
# ::node	0.2	accident	1-2
# ::node	0.2.0	involve-01	2-3
# ::root	0	delay-01
# ::edge	accident	purpose	delay-01	0.2	0	
# ::edge	cup	mod	world	0.1.0	0.1.0.0	
# ::edge	delay-01	ARG1	start-01	0	0.0	
# ::edge	delay-01	manner	event	0	0.1	
# ::edge	event	mod	cup	0.1	0.1.0	
# ::edge	involve-01	ARG1	accident	0.2.0	0.2	
# ::edge	start-01	ARG0	yesterday	0.0	0.0.0	
# ::edge	start-01	time	east	0.0	0.0.1	
(d / delay-01 
      :ARG1 (s / start-01 
            :ARG0 (y / yesterday) 
            :time (e / east)) 
      :manner (e2 / event 
            :mod (c / cup 
                  :mod (w / world))) 
      :purpose-of (a / accident 
            :ARG1-of (i / involve-01)))

# ::snt by contrast in most other developed countries insurance plans have made considerable advance in replacing tort liability as a source of accident compensation
# ::tok by contrast in most other developed countries insurance plans have made considerable advance in replacing tort liability as a source of accident compensation
# ::alignments 22-23|0.0.0.0.1.0 21-22|0.0.0.0.1.0.0 19-20|0.0.0.0.1 16-17|0.0.0.0.0 14-15|0.0.0.0 12-13|0.0.0.2 11-12|0.0.0.2.0 8-9|0.0.0 7-8|0.0.0.1 6-7|0.0.0.1.0 5-6|0.0.0.1.0.0 4-5|0.0 3-4|0.0.1 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:42.286
# ::node	0	contrast-01	1-2
# ::node	0.0	other	4-5
# ::node	0.0.0	plan-01	8-9
# ::node	0.0.0.0	replace-01	14-15
# ::node	0.0.0.0.0	liability	16-17
# ::node	0.0.0.0.1	source	19-20
# ::node	0.0.0.0.1.0	compensate-01	22-23
# ::node	0.0.0.0.1.0.0	accident	21-22
# ::node	0.0.0.1	insure-02	7-8
# ::node	0.0.0.1.0	country	6-7
# ::node	0.0.0.1.0.0	develop-02	5-6
# ::node	0.0.0.2	advance-01	12-13
# ::node	0.0.0.2.0	considerable	11-12
# ::node	0.0.1	most	3-4
# ::root	0	contrast-01
# ::edge	advance-01	ARG1	plan-01	0.0.0.2	0.0.0	
# ::edge	advance-01	mod	considerable	0.0.0.2	0.0.0.2.0	
# ::edge	compensate-01	ARG0	source	0.0.0.0.1.0	0.0.0.0.1	
# ::edge	compensate-01	ARG3	accident	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	contrast-01	mod	other	0	0.0	
# ::edge	develop-02	ARG1	country	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	insure-02	ARG0	country	0.0.0.1	0.0.0.1.0	
# ::edge	other	mod	most	0.0	0.0.1	
# ::edge	plan-01	ARG0	other	0.0.0	0.0	
# ::edge	plan-01	ARG1	insure-02	0.0.0	0.0.0.1	
# ::edge	replace-01	ARG0	plan-01	0.0.0.0	0.0.0	
# ::edge	replace-01	ARG1	liability	0.0.0.0	0.0.0.0.0	
# ::edge	replace-01	location	source	0.0.0.0	0.0.0.0.1	
(c4 / contrast-01 
      :mod (o / other 
            :ARG0-of (p / plan-01 
                  :ARG0-of (r / replace-01 
                        :ARG1 (l / liability) 
                        :location (s / source 
                              :ARG0-of (c / compensate-01 
                                    :ARG3 (a / accident)))) 
                  :ARG1 (i / insure-02 
                        :ARG0 (c3 / country 
                              :ARG1-of (d / develop-02))) 
                  :ARG1-of (a2 / advance-01 
                        :mod (c2 / considerable))) 
            :mod (m / most)))

# ::snt investigators from the national transportation safety board were sifting through the wreckage of the united airlines jet yesterday in an attempt to piece together the reason for the accident the first involving a dc10 for several years
# ::tok investigators from the national transportation safety board were sifting through the wreckage of the united airlines jet yesterday in an attempt to piece together the reason for the accident the first involving a dc10 for several years
# ::alignments 36-37|0.0.1.2.0.0.0.0+0.0.1.2.0.0.0 35-36|0.0.1.2.0.0 31-32|0 28-29|0.0.1.1.0.0 25-26|0.0.1.1.2 23-24|0.0.1.0.0 22-23|0.0.1.0 20-21|0.0.1 17-18|0.0.1.2 16-17|0.0.1.2.1 14-15|0.0.1.2.0 5-6|0.0.1.1.0 4-5|0.0.1.1 3-4|0.0.1.1.1 0-1|0.0.0+0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:42.488
# ::node	0	involve-01	31-32
# ::node	0.0	person	0-1
# ::node	0.0.0	investigate-01	0-1
# ::node	0.0.1	attempt-01	20-21
# ::node	0.0.1.0	piece	22-23
# ::node	0.0.1.0.0	together	23-24
# ::node	0.0.1.1	transport-01	4-5
# ::node	0.0.1.1.0	safe-41	5-6
# ::node	0.0.1.1.0.0	accident	28-29
# ::node	0.0.1.1.1	nation	3-4
# ::node	0.0.1.1.2	reason	25-26
# ::node	0.0.1.2	yesterday	17-18
# ::node	0.0.1.2.0	unite-01	14-15
# ::node	0.0.1.2.0.0	several	35-36
# ::node	0.0.1.2.0.0.0	temporal-quantity	36-37
# ::node	0.0.1.2.0.0.0.0	year	36-37
# ::node	0.0.1.2.1	jet	16-17
# ::root	0	involve-01
# ::edge	accident	mod	safe-41	0.0.1.1.0.0	0.0.1.1.0	
# ::edge	attempt-01	ARG0	person	0.0.1	0.0	
# ::edge	attempt-01	ARG1	piece	0.0.1	0.0.1.0	
# ::edge	investigate-01	ARG0	person	0.0.0	0.0	
# ::edge	involve-01	ARG1	person	0	0.0	
# ::edge	piece	mod	together	0.0.1.0	0.0.1.0.0	
# ::edge	reason	mod	transport-01	0.0.1.1.2	0.0.1.1	
# ::edge	safe-41	ARG1	transport-01	0.0.1.1.0	0.0.1.1	
# ::edge	several	op1	temporal-quantity	0.0.1.2.0.0	0.0.1.2.0.0.0	
# ::edge	temporal-quantity	unit	year	0.0.1.2.0.0.0	0.0.1.2.0.0.0.0	
# ::edge	transport-01	ARG1	attempt-01	0.0.1.1	0.0.1	
# ::edge	transport-01	mod	nation	0.0.1.1	0.0.1.1.1	
# ::edge	unite-01	ARG0	several	0.0.1.2.0	0.0.1.2.0.0	
# ::edge	unite-01	ARG1	yesterday	0.0.1.2.0	0.0.1.2	
# ::edge	yesterday	mod	jet	0.0.1.2	0.0.1.2.1	
# ::edge	yesterday	topic	attempt-01	0.0.1.2	0.0.1	
(i / involve-01 
      :ARG1 (p2 / person 
            :ARG0-of (i2 / investigate-01) 
            :ARG0-of (a2 / attempt-01 
                  :ARG1 (p / piece 
                        :mod (t2 / together)) 
                  :ARG1-of (t3 / transport-01 
                        :ARG1-of (s2 / safe-41 
                              :mod-of (a / accident)) 
                        :mod (n / nation) 
                        :mod-of (r / reason)) 
                  :topic-of (y2 / yesterday 
                        :ARG1-of (u / unite-01 
                              :ARG0 (s / several 
                                    :op1 (t / temporal-quantity 
                                          :unit (y / year)))) 
                        :mod (j / jet)))))

# ::snt one of the aims of this proposal would be to reduce the number of accidents at work involving young people
# ::tok one of the aims of this proposal would be to reduce the number of accidents at work involving young people
# ::alignments 18-19|0.1 17-18|0.0.0.0.0 14-15|0.0.0.0 12-13|0.0.0 10-11|0.0 6-7|0 5-6|0.3 3-4|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:42.575
# ::node	0	propose-01	6-7
# ::node	0.0	reduce-01	10-11
# ::node	0.0.0	number	12-13
# ::node	0.0.0.0	accident	14-15
# ::node	0.0.0.0.0	involve-01	17-18
# ::node	0.1	young	18-19
# ::node	0.2	aim-01	3-4
# ::node	0.3	this	5-6
# ::root	0	propose-01
# ::edge	accident	quant	number	0.0.0.0	0.0.0	
# ::edge	aim-01	ARG1	propose-01	0.2	0	
# ::edge	involve-01	ARG0	accident	0.0.0.0.0	0.0.0.0	
# ::edge	propose-01	ARG1	young	0	0.1	
# ::edge	propose-01	mod	this	0	0.3	
# ::edge	reduce-01	ARG0	propose-01	0.0	0	
# ::edge	reduce-01	ARG1	number	0.0	0.0.0	
(p / propose-01 
      :ARG0-of (r / reduce-01 
            :ARG1 (n / number 
                  :quant-of (a / accident 
                        :ARG0-of (i / involve-01)))) 
      :ARG1 (y / young) 
      :ARG1-of (a2 / aim-01) 
      :mod (t / this))

# ::snt lord devlin expanded on this in the lorry accident case in 1969
# ::tok lord devlin expanded on this in the lorry accident case in 1969
# ::alignments 11-12|0.3.0+0.3 9-10|0.1 8-9|0.1.0 4-5|0.2 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:42.613
# ::node	0	expand-01	2-3
# ::node	0.0	lord	0-1
# ::node	0.1	case	9-10
# ::node	0.1.0	accident	8-9
# ::node	0.2	this	4-5
# ::node	0.3	date-entity	11-12
# ::node	0.3.0	1969	11-12
# ::root	0	expand-01
# ::edge	case	mod	accident	0.1	0.1.0	
# ::edge	date-entity	year	1969	0.3	0.3.0	
# ::edge	expand-01	ARG0	lord	0	0.0	
# ::edge	expand-01	ARG1	case	0	0.1	
# ::edge	expand-01	ARG2	this	0	0.2	
# ::edge	expand-01	time	date-entity	0	0.3	
(e / expand-01 
      :ARG0 (l / lord) 
      :ARG1 (c / case 
            :mod (a / accident)) 
      :ARG2 (t / this) 
      :time (d / date-entity 
            :year 1969))

# ::snt in the first minutes of the accident according to the government those responsible for the reactor either did not answer the telephone or when they did were not able to explain themselves clearly, to add spice to the confusion the accident happened at a politically inconvenient time
# ::tok in the first minutes of the accident according to the government those responsible for the reactor either did not answer the telephone or when they did were not able to explain themselves clearly , to add spice to the confusion the accident happened at a politically inconvenient time
# ::alignments 47-48|0.1.0.2 46-47|0.1.0.2.0 42-43|0.1.0 41-42|0.1.0.0 39-40|0.1.0.1 35-36|0.1.0.1.0 32-33|0.1.0.1.0.0.2 30-31|0.1.0.1.0.0 28-29|0.1.0.1.0.0.1 24-25|0.1.0.1.0.0.0 22-23|0.4 21-22|0.1 19-20|0 16-17|0.3 15-16|0.2.1 12-13|0.2 6-7|0.2.0 3-4|0.0.0+0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:43.062
# ::node	0	answer-01	19-20
# ::node	0.0	temporal-quantity	3-4
# ::node	0.0.0	minute	3-4
# ::node	0.1	telephone-01	21-22
# ::node	0.1.0	happen-01	42-43
# ::node	0.1.0.0	accident	41-42
# ::node	0.1.0.1	confusion	39-40
# ::node	0.1.0.1.0	add-02	35-36
# ::node	0.1.0.1.0.0	explain-01	30-31
# ::node	0.1.0.1.0.0.0	they	24-25
# ::node	0.1.0.1.0.0.1	possible	28-29
# ::node	0.1.0.1.0.0.2	clear	32-33
# ::node	0.1.0.2	time	47-48
# ::node	0.1.0.2.0	convenience	46-47
# ::node	0.2	responsible-41	12-13
# ::node	0.2.0	accident	6-7
# ::node	0.2.1	reactor	15-16
# ::node	0.3	either	16-17
# ::node	0.4	or	22-23
# ::root	0	answer-01
# ::edge	add-02	ARG2	confusion	0.1.0.1.0	0.1.0.1	
# ::edge	answer-01	ARG0	temporal-quantity	0	0.0	
# ::edge	answer-01	ARG1	telephone-01	0	0.1	
# ::edge	answer-01	mod	either	0	0.3	
# ::edge	explain-01	ARG0	they	0.1.0.1.0.0	0.1.0.1.0.0.0	
# ::edge	explain-01	ARG1	add-02	0.1.0.1.0.0	0.1.0.1.0	
# ::edge	explain-01	manner	clear	0.1.0.1.0.0	0.1.0.1.0.0.2	
# ::edge	happen-01	ARG1	accident	0.1.0	0.1.0.0	
# ::edge	happen-01	frequency	confusion	0.1.0	0.1.0.1	
# ::edge	happen-01	time	time	0.1.0	0.1.0.2	
# ::edge	or	op1	answer-01	0.4	0	
# ::edge	possible	domain	explain-01	0.1.0.1.0.0.1	0.1.0.1.0.0	
# ::edge	responsible-41	ARG0	accident	0.2	0.2.0	
# ::edge	responsible-41	ARG1	answer-01	0.2	0	
# ::edge	responsible-41	ARG2	reactor	0.2	0.2.1	
# ::edge	telephone-01	ARG1	happen-01	0.1	0.1.0	
# ::edge	temporal-quantity	unit	minute	0.0	0.0.0	
# ::edge	time	mod	convenience	0.1.0.2	0.1.0.2.0	
(a3 / answer-01 
      :ARG0 (t4 / temporal-quantity 
            :unit (m / minute)) 
      :ARG1 (t3 / telephone-01 
            :ARG1 (h / happen-01 
                  :ARG1 (a / accident) 
                  :frequency (c2 / confusion 
                        :ARG2-of (a2 / add-02 
                              :ARG1-of (e / explain-01 
                                    :ARG0 (t2 / they) 
                                    :domain-of (p / possible) 
                                    :manner (c3 / clear)))) 
                  :time (t / time 
                        :mod (c / convenience)))) 
      :ARG1-of (r2 / responsible-41 
            :ARG0 (a4 / accident) 
            :ARG2 (r / reactor)) 
      :mod (e2 / either) 
      :op-of (o / or))

# ::snt the us navy concerned over a string of serious accidents yesterday ordered its ships planes and other units to halt normal operations for 48 hours during the next three days to look at safety details
# ::tok the us navy concerned over a string of serious accidents yesterday ordered its ships planes and other units to halt normal operations for 48 hours during the next three days to look at safety details
# ::alignments 34-35|0.2.2 33-34|0.2.2.1 29-30|0.2.2.1.0.2+0.2.2.1.0 28-29|0.2.2.1.0.1 27-28|0.2.2.1.0.0 24-25|0.2.2.0.1+0.2.2.0 23-24|0.2.2.0.0 21-22|0.2.1 20-21|0.2.1.0 19-20|0.2 17-18|0.2.0.0 16-17|0.2.0.0.0 15-16|0.2.0 14-15|0.1 13-14|0.1.1 11-12|0 10-11|0.0.0.1 9-10|0.1.0.0 8-9|0.1.0 6-7|0.0.0.0 3-4|0.0.0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:43.739
# ::node	0	order-01	11-12
# ::node	0.0	navy	2-3
# ::node	0.0.0	concern-01	3-4
# ::node	0.0.0.0	string	6-7
# ::node	0.0.0.1	yesterday	10-11
# ::node	0.1	plane	14-15
# ::node	0.1.0	serious	8-9
# ::node	0.1.0.0	accident	9-10
# ::node	0.1.1	ship	13-14
# ::node	0.2	halt-01	19-20
# ::node	0.2.0	and	15-16
# ::node	0.2.0.0	unit	17-18
# ::node	0.2.0.0.0	other	16-17
# ::node	0.2.1	operation	21-22
# ::node	0.2.1.0	normal	20-21
# ::node	0.2.2	detail-01	34-35
# ::node	0.2.2.0	temporal-quantity	24-25
# ::node	0.2.2.0.0	48	23-24
# ::node	0.2.2.0.1	hour	24-25
# ::node	0.2.2.1	safe-41	33-34
# ::node	0.2.2.1.0	temporal-quantity	29-30
# ::node	0.2.2.1.0.0	next	27-28
# ::node	0.2.2.1.0.1	3	28-29
# ::node	0.2.2.1.0.2	day	29-30
# ::root	0	order-01
# ::edge	accident	mod	serious	0.1.0.0	0.1.0	
# ::edge	and	op1	unit	0.2.0	0.2.0.0	
# ::edge	concern-01	ARG0	string	0.0.0	0.0.0.0	
# ::edge	concern-01	ARG1	navy	0.0.0	0.0	
# ::edge	concern-01	time	yesterday	0.0.0	0.0.0.1	
# ::edge	detail-01	ARG1	temporal-quantity	0.2.2	0.2.2.0	
# ::edge	detail-01	ARG2	safe-41	0.2.2	0.2.2.1	
# ::edge	halt-01	ARG0	and	0.2	0.2.0	
# ::edge	halt-01	ARG1	operation	0.2	0.2.1	
# ::edge	halt-01	purpose	detail-01	0.2	0.2.2	
# ::edge	next	op1	temporal-quantity	0.2.2.1.0.0	0.2.2.1.0	
# ::edge	operation	mod	normal	0.2.1	0.2.1.0	
# ::edge	order-01	ARG0	navy	0	0.0	
# ::edge	order-01	ARG1	plane	0	0.1	
# ::edge	order-01	purpose	halt-01	0	0.2	
# ::edge	plane	domain	serious	0.1	0.1.0	
# ::edge	plane	mod	ship	0.1	0.1.1	
# ::edge	safe-41	ARG0	temporal-quantity	0.2.2.1	0.2.2.1.0	
# ::edge	temporal-quantity	quant	3	0.2.2.1.0	0.2.2.1.0.1	
# ::edge	temporal-quantity	quant	48	0.2.2.0	0.2.2.0.0	
# ::edge	temporal-quantity	unit	day	0.2.2.1.0	0.2.2.1.0.2	
# ::edge	temporal-quantity	unit	hour	0.2.2.0	0.2.2.0.1	
# ::edge	unit	mod	other	0.2.0.0	0.2.0.0.0	
(o3 / order-01 
      :ARG0 (n3 / navy 
            :ARG1-of (c / concern-01 
                  :ARG0 (s4 / string) 
                  :time (y / yesterday))) 
      :ARG1 (p / plane 
            :domain (s3 / serious 
                  :mod-of (a2 / accident)) 
            :mod (s2 / ship)) 
      :purpose (h2 / halt-01 
            :ARG0 (a / and 
                  :op1 (u / unit 
                        :mod (o2 / other))) 
            :ARG1 (o / operation 
                  :mod (n2 / normal)) 
            :purpose (d / detail-01 
                  :ARG1 (t2 / temporal-quantity 
                        :quant 48 
                        :unit (h / hour)) 
                  :ARG2 (s / safe-41 
                        :ARG0 (t / temporal-quantity 
                              :op-of (n / next) 
                              :quant 3 
                              :unit (d2 / day))))))

# ::snt   rain was equivocal about the end to her inquiry because it also meant an end to the threat to cause her a nasty accident
# ::tok rain was equivocal about the end to her inquiry because it also meant an end to the threat to cause her a nasty accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:43.740
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt   the intervention of outside powers finally has obviously been noninternationalist in both motivation and effect except by pure accident
# ::tok the intervention of outside powers finally has obviously been noninternationalist in both motivation and effect except by pure accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:43.741
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt chart 2 illustrates the strange accident of magnitudes whereby although imports of manufactures roughly doubled every ten years while exports only rose by one third the absolute balance between them did not change much for about 15 years
# ::tok chart 2 illustrates the strange accident of magnitudes whereby although imports of manufactures roughly doubled every ten years while exports only rose by one third the absolute balance between them did not change much for about 15 years
# ::alignments 37-38|0.1.1.0.0.1+0.1.1.0.0 36-37|0.1.1.0.0.0 33-34|0.1.1.0.2.0.0 32-33|0.1.1.0.2.0 28-29|0.1.1.0.2.1 27-28|0.1.1.0.2 26-27|0.1.1.0.2.2 21-22|0.1.1.0 20-21|0.1.1.0.1.2 19-20|0.1.1.0.1 17-18|0.1.1.0.1.0.0+0.1.1.0.1.0 15-16|0.1.1.0.1.1 14-15|0.1.1 13-14|0.0 12-13|0 10-11|0.1 5-6|0.1.2 4-5|0.1.2.0 1-2|0.1.0 0-1|0.1.1.0.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:44.191
# ::node	0	manufacture-01	12-13
# ::node	0.0	roughly	13-14
# ::node	0.1	import-01	10-11
# ::node	0.1.0	2	1-2
# ::node	0.1.1	double-01	14-15
# ::node	0.1.1.0	rise-01	21-22
# ::node	0.1.1.0.0	temporal-quantity	37-38
# ::node	0.1.1.0.0.0	15	36-37
# ::node	0.1.1.0.0.1	year	37-38
# ::node	0.1.1.0.1	export-01	19-20
# ::node	0.1.1.0.1.0	temporal-quantity	17-18
# ::node	0.1.1.0.1.0.0	year	17-18
# ::node	0.1.1.0.1.1	every	15-16
# ::node	0.1.1.0.1.2	only	20-21
# ::node	0.1.1.0.2	balance-01	27-28
# ::node	0.1.1.0.2.0	change-01	32-33
# ::node	0.1.1.0.2.0.0	much	33-34
# ::node	0.1.1.0.2.1	between	28-29
# ::node	0.1.1.0.2.2	absolute	26-27
# ::node	0.1.1.0.3	chart-01	0-1
# ::node	0.1.2	accident	5-6
# ::node	0.1.2.0	strange	4-5
# ::root	0	manufacture-01
# ::edge	accident	mod	strange	0.1.2	0.1.2.0	
# ::edge	accident	time	import-01	0.1.2	0.1	
# ::edge	balance-01	ARG1	rise-01	0.1.1.0.2	0.1.1.0	
# ::edge	balance-01	location	between	0.1.1.0.2	0.1.1.0.2.1	
# ::edge	balance-01	mod	absolute	0.1.1.0.2	0.1.1.0.2.2	
# ::edge	change-01	ARG1	balance-01	0.1.1.0.2.0	0.1.1.0.2	
# ::edge	change-01	degree	much	0.1.1.0.2.0	0.1.1.0.2.0.0	
# ::edge	chart-01	ARG1	rise-01	0.1.1.0.3	0.1.1.0	
# ::edge	double-01	ARG1	import-01	0.1.1	0.1	
# ::edge	double-01	condition	rise-01	0.1.1	0.1.1.0	
# ::edge	export-01	ARG0	temporal-quantity	0.1.1.0.1	0.1.1.0.1.0	
# ::edge	export-01	ARG1	every	0.1.1.0.1	0.1.1.0.1.1	
# ::edge	export-01	mod	only	0.1.1.0.1	0.1.1.0.1.2	
# ::edge	import-01	ARG1	2	0.1	0.1.0	
# ::edge	manufacture-01	ARG0	roughly	0	0.0	
# ::edge	manufacture-01	ARG1	import-01	0	0.1	
# ::edge	rise-01	ARG0	temporal-quantity	0.1.1.0	0.1.1.0.0	
# ::edge	rise-01	ARG1	export-01	0.1.1.0	0.1.1.0.1	
# ::edge	temporal-quantity	quant	15	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	temporal-quantity	unit	year	0.1.1.0.0	0.1.1.0.0.1	
# ::edge	temporal-quantity	unit	year	0.1.1.0.1.0	0.1.1.0.1.0.0	
(m2 / manufacture-01 
      :ARG0 (r2 / roughly) 
      :ARG1 (i / import-01 
            :ARG1 2 
            :ARG1-of (d / double-01 
                  :condition (r / rise-01 
                        :ARG0 (t / temporal-quantity 
                              :quant 15 
                              :unit (y / year)) 
                        :ARG1 (e / export-01 
                              :ARG0 (t2 / temporal-quantity 
                                    :unit (y2 / year)) 
                              :ARG1 (e2 / every) 
                              :mod (o / only)) 
                        :ARG1-of (b2 / balance-01 
                              :ARG1-of (c / change-01 
                                    :degree (m / much)) 
                              :location (b / between) 
                              :mod (a / absolute)) 
                        :ARG1-of (c2 / chart-01))) 
            :time-of (a2 / accident 
                  :mod (s / strange))))

# ::snt theres been an accident on the a four twenty three road near banbury
# ::tok theres been an accident on the a four twenty three road near banbury
# ::alignments 11-12|0.1 10-11|0 9-10|0.2 7-8|0.2.0 3-4|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:44.206
# ::node	0	road	10-11
# ::node	0.0	accident	3-4
# ::node	0.1	near	11-12
# ::node	0.2	3	9-10
# ::node	0.2.0	4	7-8
# ::root	0	road
# ::edge	4	mod	3	0.2.0	0.2	
# ::edge	road	domain	accident	0	0.0	
# ::edge	road	location	near	0	0.1	
# ::edge	road	quant	3	0	0.2	
(r / road 
      :domain (a / accident) 
      :location (n / near) 
      :quant (3 / 3 
            :mod-of 4))

# ::snt more than 120000 has been paid in compensation to victims of another poisoned water accident in the west country
# ::tok more than 120000 has been paid in compensation to victims of another poisoned water accident in the west country
# ::alignments 18-19|0.1.0.2 17-18|0.1.0.2.0 14-15|0.1.0 13-14|0.1.0.0 12-13|0.1.0.0.0 11-12|0.1.0.1 9-10|0.1 7-8|0.0 5-6|0 2-3|0.0.0.2+0.0.0.1+0.0.0.0+0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:44.267
# ::node	0	pay-01	5-6
# ::node	0.0	compensate-01	7-8
# ::node	0.0.0	date-entity	2-3
# ::node	0.0.0.0	0	2-3
# ::node	0.0.0.1	0	2-3
# ::node	0.0.0.2	12	2-3
# ::node	0.1	victim	9-10
# ::node	0.1.0	accident	14-15
# ::node	0.1.0.0	water	13-14
# ::node	0.1.0.0.0	poison-02	12-13
# ::node	0.1.0.1	another	11-12
# ::node	0.1.0.2	country	18-19
# ::node	0.1.0.2.0	west	17-18
# ::root	0	pay-01
# ::edge	accident	location	water	0.1.0	0.1.0.0	
# ::edge	accident	mod	another	0.1.0	0.1.0.1	
# ::edge	accident	poss	country	0.1.0	0.1.0.2	
# ::edge	compensate-01	ARG1	date-entity	0.0	0.0.0	
# ::edge	country	part	west	0.1.0.2	0.1.0.2.0	
# ::edge	date-entity	day	0	0.0.0	0.0.0.0	
# ::edge	date-entity	month	0	0.0.0	0.0.0.1	
# ::edge	date-entity	year	12	0.0.0	0.0.0.2	
# ::edge	pay-01	ARG3	compensate-01	0	0.0	
# ::edge	pay-01	source	victim	0	0.1	
# ::edge	poison-02	ARG1	water	0.1.0.0.0	0.1.0.0	
# ::edge	victim	poss	accident	0.1	0.1.0	
(p2 / pay-01 
      :ARG3 (c2 / compensate-01 
            :ARG1 (d / date-entity 
                  :day 0 
                  :month 0 
                  :year 12)) 
      :source (v / victim 
            :poss (a / accident 
                  :location (w2 / water 
                        :ARG1-of (p / poison-02)) 
                  :mod (a2 / another) 
                  :poss (c / country 
                        :part (w / west)))))

# ::snt trading for mutual benefit just doesnt appeal to the securocracy  wholl take the part of jail rebel paul taylor in the film of the strangeways riot a project inevitably germinating in the head of some tyro movie producer still at film school 101 sean ryder 251 luke goss 1001 jason donovan a new south wales insurance firm was puzzled to find that car accidents for one company client peaked on monday lunchtimes
# ::tok trading for mutual benefit just doesnt appeal to the securocracy wholl take the part of jail rebel paul taylor in the film of the strangeways riot a project inevitably germinating in the head of some tyro movie producer still at film school 101 sean ryder 251 luke goss 1001 jason donovan a new south wales insurance firm was puzzled to find that car accidents for one company client peaked on monday lunchtimes
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:44.268
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt   thirdplaced stirling moss who was involved in a horrendous motor cycle accident in march was given the goahead to compete only ten days before the start on londons tower bridge
# ::tok thirdplaced stirling moss who was involved in a horrendous motor cycle accident in march was given the goahead to compete only ten days before the start on londons tower bridge
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:44.269
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt look closely for signs of rust accident damage repainted and misaligned panels and indications of neglect such as badly worn tyres
# ::tok look closely for signs of rust accident damage repainted and misaligned panels and indications of neglect such as badly worn tyres
# ::alignments 19-20|0.1.0.1.1 16-17|0.0.1 15-16|0.0 13-14|0 12-13|0.1 9-10|0.1.0 7-8|0.1.0.1 6-7|0.1.0.1.2 5-6|0.1.0.1.0 3-4|0.1.0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:44.363
# ::node	0	indicate-01	13-14
# ::node	0.0	neglect-01	15-16
# ::node	0.0.0	close	1-2
# ::node	0.0.1	such	16-17
# ::node	0.1	and	12-13
# ::node	0.1.0	and	9-10
# ::node	0.1.0.0	sign	3-4
# ::node	0.1.0.1	damage-01	7-8
# ::node	0.1.0.1.0	rust	5-6
# ::node	0.1.0.1.1	wear-06	19-20
# ::node	0.1.0.1.2	accident	6-7
# ::root	0	indicate-01
# ::edge	and	op1	and	0.1	0.1.0	
# ::edge	and	op2	indicate-01	0.1	0	
# ::edge	damage-01	ARG1	rust	0.1.0.1	0.1.0.1.0	
# ::edge	damage-01	mod	accident	0.1.0.1	0.1.0.1.2	
# ::edge	damage-01	purpose	and	0.1.0.1	0.1.0	
# ::edge	indicate-01	ARG1	neglect-01	0	0.0	
# ::edge	neglect-01	ARG0	close	0.0	0.0.0	
# ::edge	neglect-01	ARG1	such	0.0	0.0.1	
# ::edge	sign	domain	and	0.1.0.0	0.1.0	
# ::edge	wear-06	ARG1	damage-01	0.1.0.1.1	0.1.0.1	
(i / indicate-01 
      :ARG1 (n / neglect-01 
            :ARG0 (c / close) 
            :ARG1 (s / such)) 
      :op-of (a / and 
            :op1 (a2 / and 
                  :domain-of (s2 / sign) 
                  :purpose-of (d / damage-01 
                        :ARG1 (r / rust) 
                        :ARG1-of (w / wear-06) 
                        :mod (a3 / accident)))))

# ::snt in another reply he added we have a major programme of research in hand to cast light on the accident record or learner and newly qualified drivers
# ::tok in another reply he added we have a major programme of research in hand to cast light on the accident record or learner and newly qualified drivers
# ::alignments 26-27|0.2.0.0.0.0.0.0+0.2.0.0.0.0.0 25-26|0.2.0.0.0.0.0.1 23-24|0.2.0.0.0.0.0.2 21-22|0.2.0.0.0.0 20-21|0.2.0.0.0.0.0.2.0 19-20|0.2.0.0.0.0.0.2.0.0 16-17|0.2.0.0.0 15-16|0.2.0.0 13-14|0.1.0 11-12|0.1 9-10|0.2.0.0.1 8-9|0.2.0.0.1.0 5-6|0.2.0 4-5|0 3-4|0.0 2-3|0.2 1-2|0.2.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:44.780
# ::node	0	add-01	4-5
# ::node	0.0	he	3-4
# ::node	0.1	research-01	11-12
# ::node	0.1.0	hand	13-14
# ::node	0.2	reply-01	2-3
# ::node	0.2.0	we	5-6
# ::node	0.2.0.0	cast-01	15-16
# ::node	0.2.0.0.0	light	16-17
# ::node	0.2.0.0.0.0	or	21-22
# ::node	0.2.0.0.0.0.0	person	26-27
# ::node	0.2.0.0.0.0.0.0	drive-01	26-27
# ::node	0.2.0.0.0.0.0.1	qualify-02	25-26
# ::node	0.2.0.0.0.0.0.2	and	23-24
# ::node	0.2.0.0.0.0.0.2.0	record	20-21
# ::node	0.2.0.0.0.0.0.2.0.0	accident	19-20
# ::node	0.2.0.0.1	program	9-10
# ::node	0.2.0.0.1.0	major	8-9
# ::node	0.2.1	another	1-2
# ::root	0	add-01
# ::edge	add-01	ARG0	he	0	0.0	
# ::edge	add-01	ARG1	research-01	0	0.1	
# ::edge	add-01	time	reply-01	0	0.2	
# ::edge	and	op1	record	0.2.0.0.0.0.0.2	0.2.0.0.0.0.0.2.0	
# ::edge	and	op2	person	0.2.0.0.0.0.0.2	0.2.0.0.0.0.0	
# ::edge	cast-01	ARG0	we	0.2.0.0	0.2.0	
# ::edge	cast-01	ARG1	light	0.2.0.0	0.2.0.0.0	
# ::edge	cast-01	ARG2	program	0.2.0.0	0.2.0.0.1	
# ::edge	drive-01	ARG0	person	0.2.0.0.0.0.0.0	0.2.0.0.0.0.0	
# ::edge	light	location	or	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	or	op1	person	0.2.0.0.0.0	0.2.0.0.0.0.0	
# ::edge	program	mod	major	0.2.0.0.1	0.2.0.0.1.0	
# ::edge	qualify-02	ARG1	person	0.2.0.0.0.0.0.1	0.2.0.0.0.0.0	
# ::edge	record	mod	accident	0.2.0.0.0.0.0.2.0	0.2.0.0.0.0.0.2.0.0	
# ::edge	reply-01	ARG0	we	0.2	0.2.0	
# ::edge	reply-01	mod	another	0.2	0.2.1	
# ::edge	research-01	ARG1	hand	0.1	0.1.0	
(a3 / add-01 
      :ARG0 (h2 / he) 
      :ARG1 (r2 / research-01 
            :ARG1 (h / hand)) 
      :time (r3 / reply-01 
            :ARG0 (w / we 
                  :ARG0-of (c / cast-01 
                        :ARG1 (l / light 
                              :location (o / or 
                                    :op1 (p / person 
                                          :ARG0-of (d / drive-01) 
                                          :ARG1-of (q / qualify-02) 
                                          :op-of (a / and 
                                                :op1 (r / record 
                                                      :mod (a2 / accident)))))) 
                        :ARG2 (p2 / program 
                              :mod (m / major)))) 
            :mod (a4 / another)))

# ::snt teaching the planters there to make decent tea  a motorist involved in an accident with a pack of hounds has criticised the bicester hunt for allowing them to run unsupervised across a public road, motorist andy olejnik of milcombe near banbury says he was very lucky not to have been involved in a more serious accident and fortunate not to have been injured
# ::tok teaching the planters there to make decent tea a motorist involved in an accident with a pack of hounds has criticised the bicester hunt for allowing them to run unsupervised across a public road , motorist andy olejnik of milcombe near banbury says he was very lucky not to have been involved in a more serious accident and fortunate not to have been injured
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:44.781
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt so far as we can see this kind of world in which we are vulnerable and prone to accident is the only world there could be for the emergence of beings with a genuine freedom of choice in relation to god and to one another
# ::tok so far as we can see this kind of world in which we are vulnerable and prone to accident is the only world there could be for the emergence of beings with a genuine freedom of choice in relation to god and to one another
# ::alignments 44-45|0.0.1.0.0.0 41-42|0.0.1.0.0.1 40-41|0.0.1.0.0.1.0.0 38-39|0.0.1.0.0.1.0 34-35|0.0.1.0.0 33-34|0.0.1.0.0.2 30-31|0.0.1.0.0.3 28-29|0.0.1.0.0.3.0 24-25|0 22-23|0.0.1.0.0.3.0.0 21-22|0.0.1.0.0.3.0.0.0 18-19|0.0.1.1 16-17|0.0.2 15-16|0.0 14-15|0.0.1 12-13|0.0.1.0 9-10|0.0.0.1.1 7-8|0.0.0.1 6-7|0.0.0.1.0 5-6|0.0.0 4-5|0.0.0.2 3-4|0.0.0.0 1-2|0.0.0.3.0 0-1|0.0.0.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:45.424
# ::node	0	possible	24-25
# ::node	0.0	and	15-16
# ::node	0.0.0	see-01	5-6
# ::node	0.0.0.0	we	3-4
# ::node	0.0.0.1	kind	7-8
# ::node	0.0.0.1.0	this	6-7
# ::node	0.0.0.1.1	world	9-10
# ::node	0.0.0.2	possible	4-5
# ::node	0.0.0.3	so	0-1
# ::node	0.0.0.3.0	far	1-2
# ::node	0.0.1	vulnerable	14-15
# ::node	0.0.1.0	we	12-13
# ::node	0.0.1.0.0	free-41	34-35
# ::node	0.0.1.0.0.0	another	44-45
# ::node	0.0.1.0.0.1	and	41-42
# ::node	0.0.1.0.0.1.0	relate-01	38-39
# ::node	0.0.1.0.0.1.0.0	god	40-41
# ::node	0.0.1.0.0.2	genuine	33-34
# ::node	0.0.1.0.0.3	being	30-31
# ::node	0.0.1.0.0.3.0	emerge-02	28-29
# ::node	0.0.1.0.0.3.0.0	world	22-23
# ::node	0.0.1.0.0.3.0.0.0	only	21-22
# ::node	0.0.1.1	accident	18-19
# ::node	0.0.2	prone	16-17
# ::root	0	possible
(p / possible 
      :op-of (a4 / and 
            :op1 (s / see-01 
                  :ARG0 (w4 / we) 
                  :ARG1 (k / kind 
                        :mod (t / this) 
                        :mod-of (w3 / world)) 
                  :domain-of (p3 / possible) 
                  :mod (s2 / so 
                        :degree-of (f2 / far))) 
            :op2 (v / vulnerable 
                  :domain (w2 / we 
                        :ARG1-of (f / free-41 
                              :ARG0 (a / another) 
                              :ARG2 (a2 / and 
                                    :ARG2-of (r / relate-01 
                                          :ARG1 (g / god))) 
                              :mod (g2 / genuine) 
                              :mod-of (b / being 
                                    :ARG1-of (e / emerge-02 
                                          :ARG0 (w / world 
                                                :mod (o / only)))))) 
                  :prep-to (a3 / accident)) 
            :op3 (p2 / prone)))

# ::snt secondly in a mass accident if the first judgment went against the defendant all claimants would take advantage of it but if it went for the defendant they could relitigate
# ::tok secondly in a mass accident if the first judgment went against the defendant all claimants would take advantage of it but if it went for the defendant they could relitigate
# ::alignments 28-29|0.2 27-28|0.2.0.0 26-27|0.2.0 22-23|0.3.0 20-21|0 19-20|0.4 17-18|0.1 13-14|0.3.1 12-13|0.0 8-9|0.3 4-5|0.0.0 3-4|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:45.588
# ::node	0	contrast-01	20-21
# ::node	0.0	defendant	12-13
# ::node	0.0.0	accident	4-5
# ::node	0.0.0.0	mass	3-4
# ::node	0.1	advantage	17-18
# ::node	0.2	possible	28-29
# ::node	0.2.0	defendant	26-27
# ::node	0.2.0.0	they	27-28
# ::node	0.3	judge-01	8-9
# ::node	0.3.0	it	22-23
# ::node	0.3.1	all	13-14
# ::node	0.4	it	19-20
# ::root	0	contrast-01
# ::edge	accident	degree	mass	0.0.0	0.0.0.0	
# ::edge	contrast-01	ARG0	defendant	0	0.0	
# ::edge	contrast-01	ARG1	advantage	0	0.1	
# ::edge	contrast-01	ARG2	possible	0	0.2	
# ::edge	contrast-01	instrument	it	0	0.4	
# ::edge	defendant	name	accident	0.0	0.0.0	
# ::edge	defendant	poss	they	0.2.0	0.2.0.0	
# ::edge	judge-01	ARG0	it	0.3	0.3.0	
# ::edge	judge-01	ARG1	all	0.3	0.3.1	
# ::edge	judge-01	condition	contrast-01	0.3	0	
# ::edge	possible	manner	defendant	0.2	0.2.0	
(c / contrast-01 
      :ARG0 (d2 / defendant 
            :name (a3 / accident 
                  :degree (m / mass))) 
      :ARG1 (a / advantage) 
      :ARG2 (p / possible 
            :manner (d / defendant 
                  :poss (t / they))) 
      :condition-of (j / judge-01 
            :ARG0 (i / it) 
            :ARG1 (a2 / all)) 
      :instrument (i2 / it))

# ::snt kevin and marion fowler both 34 of ballymena had been celebrating mrs fowlers parents 40th wedding anniversary before the accident on thursday night
# ::tok kevin and marion fowler both 34 of ballymena had been celebrating mrs fowlers parents 40th wedding anniversary before the accident on thursday night
# ::alignments 22-23|0.1 19-20|0.0.0 17-18|0.0 16-17|0.2 15-16|0 13-14|0.0.1.1+0.0.1 5-6|0.0.1.0.0.0 4-5|0.0.1.0.0 1-2|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:45.644
# ::node	0	wed-01	15-16
# ::node	0.0	before	17-18
# ::node	0.0.0	accident	19-20
# ::node	0.0.1	have-rel-role-91	13-14
# ::node	0.0.1.0	and	1-2
# ::node	0.0.1.0.0	both	4-5
# ::node	0.0.1.0.0.0	34	5-6
# ::node	0.0.1.1	parent	13-14
# ::node	0.1	night	22-23
# ::node	0.2	anniversary	16-17
# ::root	0	wed-01
# ::edge	and	op1	both	0.0.1.0	0.0.1.0.0	
# ::edge	anniversary	mod	wed-01	0.2	0	
# ::edge	before	op1	accident	0.0	0.0.0	
# ::edge	both	op1	34	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	have-rel-role-91	ARG1	and	0.0.1	0.0.1.0	
# ::edge	have-rel-role-91	ARG2	parent	0.0.1	0.0.1.1	
# ::edge	have-rel-role-91	time	before	0.0.1	0.0	
# ::edge	wed-01	ARG0	before	0	0.0	
# ::edge	wed-01	ARG1	night	0	0.1	
(w / wed-01 
      :ARG0 (b / before 
            :op1 (a / accident) 
            :time-of (h / have-rel-role-91 
                  :ARG1 (a3 / and 
                        :op1 (b2 / both 
                              :op1 34)) 
                  :ARG2 (p / parent))) 
      :ARG1 (n / night) 
      :mod-of (a2 / anniversary))

# ::snt what if the ageing man has in fact lost such capacity  what of a marriage of a male severely disfigured and without genitalia as a result of war or an accident
# ::tok what if the ageing man has in fact lost such capacity what of a marriage of a male severely disfigured and without genitalia as a result of war or an accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:45.644
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt cricketer rodney ontong started an action for personal injuries against the glamorgan county cricket club and others following an accident on 19 august 1988
# ::tok cricketer rodney ontong started an action for personal injuries against the glamorgan county cricket club and others following an accident on 19 august 1988
# ::alignments 21-24|0.1.0.0.0.2.0.2+0.1.0.0.0.2.0.1+0.1.0.0.0.2.0.0+0.1.0.0.0.2.0 19-20|0.1.0.0.0.2 16-17|0.1.1 15-16|0.1 14-15|0.1.0 13-14|0.1.0.0 12-13|0.1.0.0.0.0 8-9|0.1.0.0.0 7-8|0.1.0.0.0.1 5-6|0.0 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:45.989
# ::node	0	start-01	3-4
# ::node	0.0	action	5-6
# ::node	0.1	and	15-16
# ::node	0.1.0	club	14-15
# ::node	0.1.0.0	cricket	13-14
# ::node	0.1.0.0.0	injure-01	8-9
# ::node	0.1.0.0.0.0	county	12-13
# ::node	0.1.0.0.0.1	personal	7-8
# ::node	0.1.0.0.0.2	accident	19-20
# ::node	0.1.0.0.0.2.0	date-entity	21-24
# ::node	0.1.0.0.0.2.0.0	19	21-24
# ::node	0.1.0.0.0.2.0.1	8	21-24
# ::node	0.1.0.0.0.2.0.2	1988	21-24
# ::node	0.1.1	other	16-17
# ::root	0	start-01
# ::edge	accident	mod	injure-01	0.1.0.0.0.2	0.1.0.0.0	
# ::edge	accident	time	date-entity	0.1.0.0.0.2	0.1.0.0.0.2.0	
# ::edge	and	op1	club	0.1	0.1.0	
# ::edge	and	op2	other	0.1	0.1.1	
# ::edge	club	mod	cricket	0.1.0	0.1.0.0	
# ::edge	date-entity	day	19	0.1.0.0.0.2.0	0.1.0.0.0.2.0.0	
# ::edge	date-entity	month	8	0.1.0.0.0.2.0	0.1.0.0.0.2.0.1	
# ::edge	date-entity	year	1988	0.1.0.0.0.2.0	0.1.0.0.0.2.0.2	
# ::edge	injure-01	ARG0	cricket	0.1.0.0.0	0.1.0.0	
# ::edge	injure-01	ARG1	county	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	injure-01	mod	personal	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	start-01	ARG1	action	0	0.0	
# ::edge	start-01	manner	and	0	0.1	
(s / start-01 
      :ARG1 (a3 / action) 
      :manner (a2 / and 
            :op1 (c / club 
                  :mod (c2 / cricket 
                        :ARG0-of (i / injure-01 
                              :ARG1 (c3 / county) 
                              :mod (p / personal) 
                              :mod-of (a / accident 
                                    :time (d / date-entity 
                                          :day 19 
                                          :month 8 
                                          :year 1988))))) 
            :op2 (o / other)))

# ::snt he was reversed because in the light of circumstances of modern life it seems evident that a jury could reasonably find that defendants should have foreseen the possibility of the very accident which occurred here
# ::tok he was reversed because in the light of circumstances of modern life it seems evident that a jury could reasonably find that defendants should have foreseen the possibility of the very accident which occurred here
# ::alignments 34-35|0.2 31-32|0.3.0.0.0 30-31|0.3.0.0.0.0 27-28|0.3.0.0 23-24|0.3.0 22-23|0.3.0.1 19-20|0.1.0.0.0.0 18-19|0.1.0.0.0 17-18|0.3 14-15|0.1 13-14|0 12-13|0.1.1 11-12|0.0 10-11|0.0.0 8-9|0.0.1 6-7|0.1.0.0.2 3-4|0.1.0 2-3|0.1.0.0 0-1|0.1.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:46.580
# ::node	0	seem-01	13-14
# ::node	0.0	life	11-12
# ::node	0.0.0	modern	10-11
# ::node	0.0.1	circumstance	8-9
# ::node	0.1	evident	14-15
# ::node	0.1.0	cause-01	3-4
# ::node	0.1.0.0	reverse-01	2-3
# ::node	0.1.0.0.0	possible	18-19
# ::node	0.1.0.0.0.0	reasonable	19-20
# ::node	0.1.0.0.1	he	0-1
# ::node	0.1.0.0.2	light	6-7
# ::node	0.1.1	it	12-13
# ::node	0.2	here	34-35
# ::node	0.3	jury	17-18
# ::node	0.3.0	recommend-01	23-24
# ::node	0.3.0.0	possible	27-28
# ::node	0.3.0.0.0	accident	31-32
# ::node	0.3.0.0.0.0	very	30-31
# ::node	0.3.0.1	defendant	22-23
# ::root	0	seem-01
# ::edge	accident	mod	very	0.3.0.0.0	0.3.0.0.0.0	
# ::edge	cause-01	ARG0	evident	0.1.0	0.1	
# ::edge	cause-01	ARG1	reverse-01	0.1.0	0.1.0.0	
# ::edge	circumstance	mod	life	0.0.1	0.0	
# ::edge	evident	domain	it	0.1	0.1.1	
# ::edge	life	mod	modern	0.0	0.0.0	
# ::edge	possible	domain	accident	0.3.0.0	0.3.0.0.0	
# ::edge	possible	mod	reasonable	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	recommend-01	ARG0	jury	0.3.0	0.3	
# ::edge	recommend-01	ARG1	possible	0.3.0	0.3.0.0	
# ::edge	recommend-01	ARG2	defendant	0.3.0	0.3.0.1	
# ::edge	reverse-01	ARG0	possible	0.1.0.0	0.1.0.0.0	
# ::edge	reverse-01	ARG1	he	0.1.0.0	0.1.0.0.1	
# ::edge	reverse-01	location	light	0.1.0.0	0.1.0.0.2	
# ::edge	seem-01	ARG0	life	0	0.0	
# ::edge	seem-01	ARG1	evident	0	0.1	
# ::edge	seem-01	location	here	0	0.2	
# ::edge	seem-01	time	jury	0	0.3	
(s / seem-01 
      :ARG0 (l / life 
            :mod (m / modern) 
            :mod-of (c / circumstance)) 
      :ARG1 (e / evident 
            :ARG0-of (c2 / cause-01 
                  :ARG1 (r3 / reverse-01 
                        :ARG0 (p2 / possible 
                              :mod (r2 / reasonable)) 
                        :ARG1 (h2 / he) 
                        :location (l2 / light))) 
            :domain (i / it)) 
      :location (h / here) 
      :time (j / jury 
            :ARG0-of (r / recommend-01 
                  :ARG1 (p / possible 
                        :domain (a / accident 
                              :mod (v / very))) 
                  :ARG2 (d / defendant))))

# ::snt she saw even less of her father nor did she want to until tragedy moved them closer together in 1969 when her mother was killed in a car accident in france
# ::tok she saw even less of her father nor did she want to until tragedy moved them closer together in 1969 when her mother was killed in a car accident in france
# ::alignments 30-31|0.0.0.1.0.0+0.0.0.1.0+0.0.0.1 28-29|0.0.0 27-28|0.0.0.0 24-25|0.0 22-23|0.2.2.0.0.0+0.2.2.0.0 19-20|0.1.2.0+0.1.2 17-18|0.1.0 16-17|0.1.0.0 14-15|0.1 13-14|0 12-13|0.1.1 10-11|0.2 9-10|0.2.0 6-7|0.2.1.0+0.2.1 3-4|0.2.2.1 1-2|0.2.2 0-1|0.2.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:46.794
# ::node	0	tragedy	13-14
# ::node	0.0	kill-01	24-25
# ::node	0.0.0	accident	28-29
# ::node	0.0.0.0	car	27-28
# ::node	0.0.0.1	country	30-31
# ::node	0.0.0.1.0	name	30-31
# ::node	0.0.0.1.0.0	"France"	30-31
# ::node	0.1	move-01	14-15
# ::node	0.1.0	together	17-18
# ::node	0.1.0.0	close	16-17
# ::node	0.1.1	until	12-13
# ::node	0.1.2	date-entity	19-20
# ::node	0.1.2.0	1969	19-20
# ::node	0.2	want-01	10-11
# ::node	0.2.0	she	9-10
# ::node	0.2.1	have-rel-role-91	6-7
# ::node	0.2.1.0	father	6-7
# ::node	0.2.2	see-01	1-2
# ::node	0.2.2.0	she	0-1
# ::node	0.2.2.0.0	have-rel-role-91	22-23
# ::node	0.2.2.0.0.0	mother	22-23
# ::node	0.2.2.1	less	3-4
# ::root	0	tragedy
(t2 / tragedy 
      :ARG0-of (k / kill-01 
            :location (a / accident 
                  :location (c2 / car) 
                  :location (c / country 
                        :name (n / name 
                              :op1 "France")))) 
      :ARG1-of (m2 / move-01 
            :ARG2 (t / together 
                  :degree (c3 / close)) 
            :op-of (u / until) 
            :time (d / date-entity 
                  :year 1969)) 
      :purpose-of (w / want-01 
            :ARG0 (s / she) 
            :ARG1 (h2 / have-rel-role-91 
                  :ARG2 (f / father)) 
            :ARG2 (s2 / see-01 
                  :ARG0 (s3 / she 
                        :ARG1-of (h / have-rel-role-91 
                              :ARG2 (m / mother))) 
                  :ARG1 (l / less))))

# ::snt mrs vivienne gatter prosecuting said that ford did not stop after the accident which happened on january 1
# ::tok mrs vivienne gatter prosecuting said that ford did not stop after the accident which happened on january 1
# ::alignments 17-18|0.1.0 16-17|0.0.0.0.0.0.0+0.0.0.0.0.0 14-15|0.0.0.0.0 12-13|0.0.0.0 10-11|0.0.0 9-10|0.0 4-5|0 3-4|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:46.855
# ::node	0	say-01	4-5
# ::node	0.0	stop-01	9-10
# ::node	0.0.0	after	10-11
# ::node	0.0.0.0	accident	12-13
# ::node	0.0.0.0.0	happen-01	14-15
# ::node	0.0.0.0.0.0	date-entity	16-17
# ::node	0.0.0.0.0.0.0	1	16-17
# ::node	0.1	prosecute-01	3-4
# ::node	0.1.0	1	17-18
# ::root	0	say-01
# ::edge	after	op1	accident	0.0.0	0.0.0.0	
# ::edge	date-entity	month	1	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	happen-01	ARG0	accident	0.0.0.0.0	0.0.0.0	
# ::edge	happen-01	time	date-entity	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	prosecute-01	ARG0	1	0.1	0.1.0	
# ::edge	prosecute-01	ARG1	say-01	0.1	0	
# ::edge	say-01	ARG1	stop-01	0	0.0	
# ::edge	stop-01	time	after	0.0	0.0.0	
(s2 / say-01 
      :ARG1 (s / stop-01 
            :time (a2 / after 
                  :op1 (a / accident 
                        :ARG0-of (h / happen-01 
                              :time (d / date-entity 
                                    :month 1))))) 
      :ARG1-of (p / prosecute-01 
            :ARG0 1))

# ::snt the next day i told my father i had to learn the bagpipes he said that i might want to build my wind by starting out on the french horn and he told me about dennis brain the virtuoso of the mozart concerti who was killed in a car accident at the height of his powers
# ::tok the next day i told my father i had to learn the bagpipes he said that i might want to build my wind by starting out on the french horn and he told me about dennis brain the virtuoso of the mozart concerti who was killed in a car accident at the height of his powers
# ::alignments 55-56|0.1.1.1 49-50|0.1.0.1.2.0.0 48-49|0.1.0.1.2.0.0.0 45-46|0.1.0.1.2.0 36-37|0.1.1.2 32-33|0.1.1 31-32|0.1.1.0 30-31|0.1 28-29|0.1.0.1.0.0.0+0.1.0.1.0.0+0.1.0.1.0 24-25|0.1.0.1.2 22-23|0.1.0.1.1 20-21|0.1.0.1 18-19|0.1.0 16-17|0.1.0.0 14-15|0 13-14|0.0 10-11|0.2 7-8|0.2.0 6-7|0.2.0.0.1+0.2.0.0.1.0 4-5|0.2.0.0 3-4|0.2.0.0.0 2-3|0.2.0.0.1.0.0 1-2|0.2.0.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:49.089
# ::node	0	say-01	14-15
# ::node	0.0	he	13-14
# ::node	0.1	and	30-31
# ::node	0.1.0	want-01	18-19
# ::node	0.1.0.0	i	16-17
# ::node	0.1.0.1	build-01	20-21
# ::node	0.1.0.1.0	country	28-29
# ::node	0.1.0.1.0.0	name	28-29
# ::node	0.1.0.1.0.0.0	"France"	28-29
# ::node	0.1.0.1.1	wind	22-23
# ::node	0.1.0.1.2	start-01	24-25
# ::node	0.1.0.1.2.0	kill-01	45-46
# ::node	0.1.0.1.2.0.0	accident	49-50
# ::node	0.1.0.1.2.0.0.0	car	48-49
# ::node	0.1.1	tell-01	32-33
# ::node	0.1.1.0	he	31-32
# ::node	0.1.1.1	power	55-56
# ::node	0.1.1.2	brain	36-37
# ::node	0.2	learn-01	10-11
# ::node	0.2.0	i	7-8
# ::node	0.2.0.0	tell-01	4-5
# ::node	0.2.0.0.0	i	3-4
# ::node	0.2.0.0.1	father	6-7
# ::node	0.2.0.0.1.0	have-rel-role-91	6-7
# ::node	0.2.0.0.1.0.0	day	2-3
# ::node	0.2.0.0.1.0.0.0	next	1-2
# ::root	0	say-01
# ::edge	accident	location	car	0.1.0.1.2.0.0	0.1.0.1.2.0.0.0	
# ::edge	and	op1	want-01	0.1	0.1.0	
# ::edge	and	op2	tell-01	0.1	0.1.1	
# ::edge	build-01	ARG0	country	0.1.0.1	0.1.0.1.0	
# ::edge	build-01	ARG1	wind	0.1.0.1	0.1.0.1.1	
# ::edge	build-01	manner	start-01	0.1.0.1	0.1.0.1.2	
# ::edge	country	name	name	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	day	mod	next	0.2.0.0.1.0.0	0.2.0.0.1.0.0.0	
# ::edge	have-rel-role-91	ARG1	day	0.2.0.0.1.0	0.2.0.0.1.0.0	
# ::edge	have-rel-role-91	ARG2	father	0.2.0.0.1.0	0.2.0.0.1	
# ::edge	kill-01	location	accident	0.1.0.1.2.0	0.1.0.1.2.0.0	
# ::edge	learn-01	ARG0	i	0.2	0.2.0	
# ::edge	learn-01	ARG1	say-01	0.2	0	
# ::edge	name	op1	"France"	0.1.0.1.0.0	0.1.0.1.0.0.0	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	and	0	0.1	
# ::edge	start-01	ARG1	kill-01	0.1.0.1.2	0.1.0.1.2.0	
# ::edge	tell-01	ARG0	he	0.1.1	0.1.1.0	
# ::edge	tell-01	ARG0	i	0.2.0.0	0.2.0.0.0	
# ::edge	tell-01	ARG1	father	0.2.0.0	0.2.0.0.1	
# ::edge	tell-01	ARG1	power	0.1.1	0.1.1.1	
# ::edge	tell-01	ARG2	brain	0.1.1	0.1.1.2	
# ::edge	tell-01	ARG2	i	0.2.0.0	0.2.0	
# ::edge	want-01	ARG0	i	0.1.0	0.1.0.0	
# ::edge	want-01	ARG1	build-01	0.1.0	0.1.0.1	
(s2 / say-01 
      :ARG0 (h2 / he) 
      :ARG1 (a2 / and 
            :op1 (w2 / want-01 
                  :ARG0 (i / i) 
                  :ARG1 (b2 / build-01 
                        :ARG0 (c2 / country 
                              :name (n / name 
                                    :op1 "France")) 
                        :ARG1 (w / wind) 
                        :manner (s / start-01 
                              :ARG1 (k / kill-01 
                                    :location (a / accident 
                                          :location (c / car)))))) 
            :op2 (t / tell-01 
                  :ARG0 (h / he) 
                  :ARG1 (p / power) 
                  :ARG2 (b / brain))) 
      :ARG1-of (l / learn-01 
            :ARG0 (i2 / i 
                  :ARG2-of (t2 / tell-01 
                        :ARG0 (i3 / i) 
                        :ARG1 (f / father 
                              :ARG2-of (h3 / have-rel-role-91 
                                    :ARG1 (d / day 
                                          :mod (n2 / next))))))))

# ::snt the accident happened on the a43 near baynards green
# ::tok the accident happened on the a43 near baynards green
# ::alignments 8-9|0.1 6-7|0.1.0 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:49.103
# ::node	0	happen-01	2-3
# ::node	0.0	accident	1-2
# ::node	0.1	green	8-9
# ::node	0.1.0	near	6-7
# ::root	0	happen-01
# ::edge	green	mod	near	0.1	0.1.0	
# ::edge	happen-01	ARG1	accident	0	0.0	
# ::edge	happen-01	location	green	0	0.1	
(h / happen-01 
      :ARG1 (a / accident) 
      :location (g / green 
            :mod (n / near)))

# ::snt you cant avoid accidents but physicians and workers should be aware of the risk she said
# ::tok you cant avoid accidents but physicians and workers should be aware of the risk she said
# ::alignments 15-16|0 14-15|0.0 13-14|0.1 8-9|0.1.0.0.0.0 7-8|0.1.0.0.0.0.0.1.0+0.1.0.0.0.0.0.1 6-7|0.1.0.0.0.0.0 5-6|0.1.0.0.0.0.0.0 4-5|0.1.0.0.0 3-4|0.1.0.0.1 2-3|0.1.0.0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:49.309
# ::node	0	say-01	15-16
# ::node	0.0	she	14-15
# ::node	0.1	risk-01	13-14
# ::node	0.1.0	you	0-1
# ::node	0.1.0.0	avoid-01	2-3
# ::node	0.1.0.0.0	contrast-01	4-5
# ::node	0.1.0.0.0.0	recommend-01	8-9
# ::node	0.1.0.0.0.0.0	and	6-7
# ::node	0.1.0.0.0.0.0.0	physician	5-6
# ::node	0.1.0.0.0.0.0.1	person	7-8
# ::node	0.1.0.0.0.0.0.1.0	work-01	7-8
# ::node	0.1.0.0.1	accident	3-4
# ::root	0	say-01
# ::edge	and	op1	physician	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	and	op2	person	0.1.0.0.0.0.0	0.1.0.0.0.0.0.1	
# ::edge	and	op3	recommend-01	0.1.0.0.0.0.0	0.1.0.0.0.0	
# ::edge	avoid-01	ARG0	you	0.1.0.0	0.1.0	
# ::edge	avoid-01	ARG1	accident	0.1.0.0	0.1.0.0.1	
# ::edge	contrast-01	ARG0	avoid-01	0.1.0.0.0	0.1.0.0	
# ::edge	contrast-01	ARG2	recommend-01	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	risk-01	ARG0	you	0.1	0.1.0	
# ::edge	say-01	ARG0	she	0	0.0	
# ::edge	say-01	ARG1	risk-01	0	0.1	
# ::edge	work-01	ARG0	person	0.1.0.0.0.0.0.1.0	0.1.0.0.0.0.0.1	
(s / say-01 
      :ARG0 (s2 / she) 
      :ARG1 (r / risk-01 
            :ARG0 (y / you 
                  :ARG0-of (a3 / avoid-01 
                        :ARG0-of (c / contrast-01 
                              :ARG2 (r2 / recommend-01 
                                    :op-of (a / and 
                                          :op1 (p2 / physician) 
                                          :op2 (p / person 
                                                :ARG0-of (w / work-01))))) 
                        :ARG1 (a2 / accident)))))

# ::snt david perry says he wants the nuffield to provide good value service of a high quality hes particularly keen it continues to help the countys accident service but he has no doubt the authority will continue to use it
# ::tok david perry says he wants the nuffield to provide good value service of a high quality hes particularly keen it continues to help the countys accident service but he has no doubt the authority will continue to use it
# ::alignments 38-39|0.0.0.0.0.0.0.0.1.0.1 37-38|0.0.0.0.0.0.0.0.1.0 35-36|0.0.0.0.0.0.0.0.1 33-34|0.0.0.0.0.0.0.0.1.0.0 31-32|0.0.0.0.0.0.0.0.0 30-31|0.0.0.0.0.0.0.0.0.1 28-29|0.0.0.0.0.0.0.0 27-28|0.0.0.0.0.0 25-26|0.0.0.0.0.0.0.1.1 22-23|0.0.0.0.0.0.0.1 20-21|0.0.0.0.0.0.0 19-20|0.0.0.0.0.0.0.1.0 18-19|0.0.0.0.0 17-18|0.0.0.0.0.1 15-16|0.0.1 14-15|0.0.1.0 10-11|0.0.0.0.1 9-10|0.0.0.0.0.0.0.0.0.0 8-9|0.0.0.0 4-5|0.0 3-4|0.0.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:50.388
# ::node	0	say-01	2-3
# ::node	0.0	want-01	4-5
# ::node	0.0.0	he	3-4
# ::node	0.0.0.0	provide-01	8-9
# ::node	0.0.0.0.0	keen-41	18-19
# ::node	0.0.0.0.0.0	contrast-01	27-28
# ::node	0.0.0.0.0.0.0	continue-01	20-21
# ::node	0.0.0.0.0.0.0.0	he	28-29
# ::node	0.0.0.0.0.0.0.0.0	doubt-01	31-32
# ::node	0.0.0.0.0.0.0.0.0.0	good	9-10
# ::node	0.0.0.0.0.0.0.0.0.1	-	30-31
# ::node	0.0.0.0.0.0.0.0.1	continue-01	35-36
# ::node	0.0.0.0.0.0.0.0.1.0	use-01	37-38
# ::node	0.0.0.0.0.0.0.0.1.0.0	authority	33-34
# ::node	0.0.0.0.0.0.0.0.1.0.1	it	38-39
# ::node	0.0.0.0.0.0.0.1	help-01	22-23
# ::node	0.0.0.0.0.0.0.1.0	it	19-20
# ::node	0.0.0.0.0.0.0.1.1	accident	25-26
# ::node	0.0.0.0.0.1	particular	17-18
# ::node	0.0.0.0.1	value-01	10-11
# ::node	0.0.1	quality	15-16
# ::node	0.0.1.0	high	14-15
# ::root	0	say-01
# ::edge	continue-01	ARG0	he	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	continue-01	ARG0	he	0.0.0.0.0.0.0.0.1	0.0.0.0.0.0.0.0	
# ::edge	continue-01	ARG1	help-01	0.0.0.0.0.0.0	0.0.0.0.0.0.0.1	
# ::edge	continue-01	ARG1	use-01	0.0.0.0.0.0.0.0.1	0.0.0.0.0.0.0.0.1.0	
# ::edge	contrast-01	ARG1	continue-01	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	doubt-01	ARG0	he	0.0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	doubt-01	ARG1	good	0.0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0.0	
# ::edge	doubt-01	polarity	-	0.0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0.1	
# ::edge	help-01	ARG0	it	0.0.0.0.0.0.0.1	0.0.0.0.0.0.0.1.0	
# ::edge	help-01	ARG1	accident	0.0.0.0.0.0.0.1	0.0.0.0.0.0.0.1.1	
# ::edge	keen-41	ARG1	contrast-01	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	keen-41	manner	particular	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	provide-01	ARG0	he	0.0.0.0	0.0.0	
# ::edge	provide-01	ARG1	keen-41	0.0.0.0	0.0.0.0.0	
# ::edge	provide-01	ARG2	value-01	0.0.0.0	0.0.0.0.1	
# ::edge	quality	degree	high	0.0.1	0.0.1.0	
# ::edge	say-01	ARG1	want-01	0	0.0	
# ::edge	use-01	ARG0	authority	0.0.0.0.0.0.0.0.1.0	0.0.0.0.0.0.0.0.1.0.0	
# ::edge	use-01	ARG1	it	0.0.0.0.0.0.0.0.1.0	0.0.0.0.0.0.0.0.1.0.1	
# ::edge	want-01	ARG0	he	0.0	0.0.0	
# ::edge	want-01	ARG1	quality	0.0	0.0.1	
(s / say-01 
      :ARG1 (w / want-01 
            :ARG0 (h4 / he 
                  :ARG0-of (p2 / provide-01 
                        :ARG1 (k / keen-41 
                              :ARG1 (c2 / contrast-01 
                                    :ARG1 (c3 / continue-01 
                                          :ARG0 (h / he 
                                                :ARG0-of (d / doubt-01 
                                                      :ARG1 (g / good) 
                                                      :polarity (- / -)) 
                                                :ARG0-of (c / continue-01 
                                                      :ARG1 (u / use-01 
                                                            :ARG0 (a / authority) 
                                                            :ARG1 (i / it)))) 
                                          :ARG1 (h2 / help-01 
                                                :ARG0 (i2 / it) 
                                                :ARG1 (a2 / accident)))) 
                              :manner (p / particular)) 
                        :ARG2 (v / value-01))) 
            :ARG1 (q / quality 
                  :degree (h3 / high))))

# ::snt nuclear risks can be divided into a handful of issues accidents waste disposal and so on
# ::tok nuclear risks can be divided into a handful of issues accidents waste disposal and so on
# ::alignments 14-15|0.1 13-14|0.0.0.0.0 11-12|0 10-11|0.0 9-10|0.0.0 7-8|0.0.0.0.1.0 4-5|0.0.0.0.1 2-3|0.0.0.0.1.1 1-2|0.0.0.0 0-1|0.0.0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:50.475
# ::node	0	waste-01	11-12
# ::node	0.0	accident	10-11
# ::node	0.0.0	issue	9-10
# ::node	0.0.0.0	risk-01	1-2
# ::node	0.0.0.0.0	and	13-14
# ::node	0.0.0.0.1	divide-02	4-5
# ::node	0.0.0.0.1.0	handful	7-8
# ::node	0.0.0.0.1.1	possible	2-3
# ::node	0.0.0.0.2	nucleus	0-1
# ::node	0.1	so	14-15
# ::root	0	waste-01
# ::edge	accident	mod	issue	0.0	0.0.0	
# ::edge	divide-02	ARG1	risk-01	0.0.0.0.1	0.0.0.0	
# ::edge	divide-02	ARG2	handful	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	issue	poss	risk-01	0.0.0	0.0.0.0	
# ::edge	possible	domain	divide-02	0.0.0.0.1.1	0.0.0.0.1	
# ::edge	risk-01	ARG1	and	0.0.0.0	0.0.0.0.0	
# ::edge	risk-01	mod	nucleus	0.0.0.0	0.0.0.0.2	
# ::edge	waste-01	ARG0	accident	0	0.0	
# ::edge	waste-01	ARG1	so	0	0.1	
(w / waste-01 
      :ARG0 (a2 / accident 
            :mod (i / issue 
                  :poss (r / risk-01 
                        :ARG1 (a / and) 
                        :ARG1-of (d / divide-02 
                              :ARG2 (h / handful) 
                              :domain-of (p / possible)) 
                        :mod (n / nucleus)))) 
      :ARG1 (s / so))

# ::snt an added embarrassment was a report also leaked by the chief inspector for nuclear safety who warned against complacency and came up with an estimate that there was a several per cent chance of a serious accident in the next twenty years, an accident in france would no have to be as serious as chernobyl to imperil life and health over a wide area in france and its heavily populated neighbours
# ::tok an added embarrassment was a report also leaked by the chief inspector for nuclear safety who warned against complacency and came up with an estimate that there was a several per cent chance of a serious accident in the next twenty years , an accident in france would no have to be as serious as chernobyl to imperil life and health over a wide area in france and its heavily populated neighbours
# ::alignments 71-72|0.0.1.1.1.1.0.2.3 70-71|0.0.1.1.1.1.0.2.3.0 69-70|0.0.1.1.1.1.0.2.3.0.1 67-68|0.0.1.1.1.1.0.2 66-67|0.0.1.1.1.1.0.2.2.0.0+0.0.1.1.1.1.0.2.2.0+0.0.1.1.1.1.0.2.2 64-65|0.0.1.1.1.1.0.2.1 63-64|0.0.1.1.1.1.0.2.1.0 60-61|0.0.1.1.1.1.0.2.0 59-60|0.0.1.1.1.1.0.2.0.0 58-59|0.0.1.1.1.1.0.2.0.0.0 53-54|0.0.1.1.1.1.0.2.0.0.1 48-49|0.0.1.1.1.1.0.2.3.0.0 46-47|0.0.1.1.1.1.0.1.0+0.0.1.1.1.1.0.1+0.0.1.1.1.1.0 44-45|0.0.1.1.1.1.0.0 41-42|0.0.1.1.1.0.0.0+0.0.1.1.1.0.0.0.0 39-40|0.0.1.1.1.0.0 36-37|0.0.1.1.0.0.1 35-36|0.0.1.1.0.0.1.0 32-33|0.0.1.1.0.0 31-32|0.0.1.1.0.0.0.0+0.0.1.1.0.0.0 29-30|0.0.1.1.0 24-25|0 19-20|0.0.1.0.1 18-19|0.0.1.0.0 16-17|0.0.1.0 14-15|0.0.1.1.1.0 13-14|0.0.1.1.1.0.1 11-12|0.0.1.1.1 10-11|0.0.1.1.1.1.1+0.0.1.1.1.1 7-8|0.0.1.1 6-7|0.0.1.1.2 5-6|0.0.1 2-3|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:51.939
# ::node	0	estimate-01	24-25
# ::node	0.0	embarrass-01	2-3
# ::node	0.0.0	add-01	1-2
# ::node	0.0.1	report	5-6
# ::node	0.0.1.0	warn-01	16-17
# ::node	0.0.1.0.0	complacency	18-19
# ::node	0.0.1.0.1	and	19-20
# ::node	0.0.1.1	leak-01	7-8
# ::node	0.0.1.1.0	several	29-30
# ::node	0.0.1.1.0.0	chance	32-33
# ::node	0.0.1.1.0.0.0	monetary-quantity	31-32
# ::node	0.0.1.1.0.0.0.0	cent	31-32
# ::node	0.0.1.1.0.0.1	accident	36-37
# ::node	0.0.1.1.0.0.1.0	serious	35-36
# ::node	0.0.1.1.1	inspect-01	11-12
# ::node	0.0.1.1.1.0	safe-41	14-15
# ::node	0.0.1.1.1.0.0	next	39-40
# ::node	0.0.1.1.1.0.0.0	year	41-42
# ::node	0.0.1.1.1.0.0.0.0	temporal-quantity	41-42
# ::node	0.0.1.1.1.0.1	nucleus	13-14
# ::node	0.0.1.1.1.1	have-org-role-91	10-11
# ::node	0.0.1.1.1.1.0	country	46-47
# ::node	0.0.1.1.1.1.0.0	accident	44-45
# ::node	0.0.1.1.1.1.0.1	name	46-47
# ::node	0.0.1.1.1.1.0.1.0	"France"	46-47
# ::node	0.0.1.1.1.1.0.2	and	67-68
# ::node	0.0.1.1.1.1.0.2.0	health	60-61
# ::node	0.0.1.1.1.1.0.2.0.0	and	59-60
# ::node	0.0.1.1.1.1.0.2.0.0.0	life	58-59
# ::node	0.0.1.1.1.1.0.2.0.0.1	serious	53-54
# ::node	0.0.1.1.1.1.0.2.1	area	64-65
# ::node	0.0.1.1.1.1.0.2.1.0	wide	63-64
# ::node	0.0.1.1.1.1.0.2.2	country	66-67
# ::node	0.0.1.1.1.1.0.2.2.0	name	66-67
# ::node	0.0.1.1.1.1.0.2.2.0.0	"France"	66-67
# ::node	0.0.1.1.1.1.0.2.3	neighbour	71-72
# ::node	0.0.1.1.1.1.0.2.3.0	populate-01	70-71
# ::node	0.0.1.1.1.1.0.2.3.0.0	-	48-49
# ::node	0.0.1.1.1.1.0.2.3.0.1	heavy	69-70
# ::node	0.0.1.1.1.1.1	chief	10-11
# ::node	0.0.1.1.2	also	6-7
# ::root	0	estimate-01
(e / estimate-01 
      :ARG1-of (e2 / embarrass-01 
            :ARG1-of (a8 / add-01) 
            :domain-of (r / report 
                  :ARG0-of (w2 / warn-01 
                        :ARG1 (c5 / complacency) 
                        :op-of (a6 / and)) 
                  :ARG1-of (l2 / leak-01 
                        :ARG0 (s3 / several 
                              :topic (c3 / chance 
                                    :mod (m / monetary-quantity 
                                          :unit (c4 / cent)) 
                                    :mod (a5 / accident 
                                          :mod (s2 / serious)))) 
                        :manner (i / inspect-01 
                              :ARG1 (s4 / safe-41 
                                    :ARG0 (n4 / next 
                                          :mod-of (y / year 
                                                :unit-of (t / temporal-quantity))) 
                                    :mod (n5 / nucleus)) 
                              :ARG3-of (h3 / have-org-role-91 
                                    :ARG1 (c2 / country 
                                          :location-of (a4 / accident) 
                                          :name (n3 / name 
                                                :op1 "France") 
                                          :op-of (a / and 
                                                :location-of (h2 / health 
                                                      :op-of (a3 / and 
                                                            :op1 (l / life) 
                                                            :poss-of (s / serious))) 
                                                :location-of (a2 / area 
                                                      :mod (w / wide)) 
                                                :op1 (c / country 
                                                      :name (n2 / name 
                                                            :op1 "France")) 
                                                :op2 (n / neighbour 
                                                      :ARG1-of (p / populate-01 
                                                            :ARG0 (- / -) 
                                                            :manner (h / heavy))))) 
                                    :ARG2 (c6 / chief))) 
                        :mod (a7 / also)))))

# ::snt it is of course no accident he said out loud testing to see if the words would come out on a printed page in a bound volume that redundant theological speculation about the death of god should run parallel with an equally tedious literary preoccupation with the death of the novel
# ::tok it is of course no accident he said out loud testing to see if the words would come out on a printed page in a bound volume that redundant theological speculation about the death of god should run parallel with an equally tedious literary preoccupation with the death of the novel
# ::alignments 50-51|0.0.1.1.2.0.0 47-48|0.0.1.1.2.0 43-44|0.0.1.1.0 42-43|0.0.2.0.0 41-42|0.0.2.0 36-37|0.0.2 35-36|0.0.1.0.0 33-34|0.0.1.0 30-31|0.0.1 26-27|0.0.1.1.2 22-23|0.0.1.1.1 21-22|0.0.1.1 15-16|0.0.0.0.1 12-13|0.0.0 10-11|0.0.0.0 9-10|0.0.0.0.0 7-8|0 6-7|0.0 5-6|0.1 4-5|0.1.1 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:52.854
# ::node	0	say-01	7-8
# ::node	0.0	he	6-7
# ::node	0.0.0	see-01	12-13
# ::node	0.0.0.0	test-01	10-11
# ::node	0.0.0.0.0	loud	9-10
# ::node	0.0.0.0.1	word	15-16
# ::node	0.0.1	speculate-01	30-31
# ::node	0.0.1.0	die-01	33-34
# ::node	0.0.1.0.0	god	35-36
# ::node	0.0.1.1	print-01	21-22
# ::node	0.0.1.1.0	literary	43-44
# ::node	0.0.1.1.1	page	22-23
# ::node	0.0.1.1.2	volume	26-27
# ::node	0.0.1.1.2.0	die-01	47-48
# ::node	0.0.1.1.2.0.0	novel	50-51
# ::node	0.0.2	recommend-01	36-37
# ::node	0.0.2.0	equal	41-42
# ::node	0.0.2.0.0	tedious	42-43
# ::node	0.1	accident	5-6
# ::node	0.1.0	it	0-1
# ::node	0.1.1	-	4-5
# ::root	0	say-01
# ::edge	accident	domain	it	0.1	0.1.0	
# ::edge	accident	polarity	-	0.1	0.1.1	
# ::edge	die-01	ARG0	volume	0.0.1.1.2.0	0.0.1.1.2	
# ::edge	die-01	ARG1	god	0.0.1.0	0.0.1.0.0	
# ::edge	die-01	ARG1	novel	0.0.1.1.2.0	0.0.1.1.2.0.0	
# ::edge	print-01	ARG0	literary	0.0.1.1	0.0.1.1.0	
# ::edge	print-01	ARG1	page	0.0.1.1	0.0.1.1.1	
# ::edge	print-01	quant	volume	0.0.1.1	0.0.1.1.2	
# ::edge	recommend-01	ARG0	he	0.0.2	0.0	
# ::edge	recommend-01	ARG1	equal	0.0.2	0.0.2.0	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	accident	0	0.1	
# ::edge	see-01	ARG0	he	0.0.0	0.0	
# ::edge	speculate-01	ARG0	he	0.0.1	0.0	
# ::edge	speculate-01	ARG1	die-01	0.0.1	0.0.1.0	
# ::edge	speculate-01	instrument	print-01	0.0.1	0.0.1.1	
# ::edge	tedious	degree	equal	0.0.2.0.0	0.0.2.0	
# ::edge	test-01	ARG1	see-01	0.0.0.0	0.0.0	
# ::edge	test-01	mod	loud	0.0.0.0	0.0.0.0.0	
# ::edge	word	op1	test-01	0.0.0.0.1	0.0.0.0	
(s3 / say-01 
      :ARG0 (h / he 
            :ARG0-of (s2 / see-01 
                  :ARG1-of (t2 / test-01 
                        :mod (l2 / loud) 
                        :op-of (w / word))) 
            :ARG0-of (s / speculate-01 
                  :ARG1 (d2 / die-01 
                        :ARG1 (g / god)) 
                  :instrument (p2 / print-01 
                        :ARG0 (l / literary) 
                        :ARG1 (p / page) 
                        :quant (v / volume 
                              :ARG0-of (d / die-01 
                                    :ARG1 (n / novel))))) 
            :ARG0-of (r / recommend-01 
                  :ARG1 (e / equal 
                        :degree-of (t / tedious)))) 
      :ARG1 (a / accident 
            :domain (i / it) 
            :polarity (- / -)))

# ::snt marketing manager robert stevens said it is vital that in an accident a stranger can release a child from its child seat quickly
# ::tok marketing manager robert stevens said it is vital that in an accident a stranger can release a child from its child seat quickly
# ::alignments 22-23|0.1.1.4 21-22|0.1.1.3 20-21|0.1.1.0.0 17-18|0.1.1.1 15-16|0.1.1 14-15|0.1.1.2 13-14|0.1.1.0 11-12|0.1.1.2.0 7-8|0.1 5-6|0.1.0 4-5|0 2-4|0.0.1.0+0.0.1.1+0.0.1+0.0 1-2|0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:52.970
# ::node	0	say-01	4-5
# ::node	0.0	person	2-4
# ::node	0.0.0	manage-01	1-2
# ::node	0.0.0.0	market-01	0-1
# ::node	0.0.1	name	2-4
# ::node	0.0.1.0	"stevens"	2-4
# ::node	0.0.1.1	"robert"	2-4
# ::node	0.1	vital	7-8
# ::node	0.1.0	it	5-6
# ::node	0.1.1	release-01	15-16
# ::node	0.1.1.0	stranger	13-14
# ::node	0.1.1.0.0	child	20-21
# ::node	0.1.1.1	child	17-18
# ::node	0.1.1.2	possible	14-15
# ::node	0.1.1.2.0	accident	11-12
# ::node	0.1.1.3	seat	21-22
# ::node	0.1.1.4	quick	22-23
# ::root	0	say-01
# ::edge	child	poss	stranger	0.1.1.0.0	0.1.1.0	
# ::edge	manage-01	ARG0	person	0.0.0	0.0	
# ::edge	market-01	ARG1	manage-01	0.0.0.0	0.0.0	
# ::edge	name	op1	"stevens"	0.0.1	0.0.1.0	
# ::edge	name	op2	"robert"	0.0.1	0.0.1.1	
# ::edge	person	name	name	0.0	0.0.1	
# ::edge	possible	condition	accident	0.1.1.2	0.1.1.2.0	
# ::edge	possible	domain	release-01	0.1.1.2	0.1.1	
# ::edge	release-01	ARG0	stranger	0.1.1	0.1.1.0	
# ::edge	release-01	ARG1	child	0.1.1	0.1.1.1	
# ::edge	release-01	location	seat	0.1.1	0.1.1.3	
# ::edge	release-01	manner	quick	0.1.1	0.1.1.4	
# ::edge	say-01	ARG0	person	0	0.0	
# ::edge	say-01	ARG1	vital	0	0.1	
# ::edge	vital	domain	it	0.1	0.1.0	
# ::edge	vital	domain	release-01	0.1	0.1.1	
(s3 / say-01 
      :ARG0 (p2 / person 
            :ARG0-of (m / manage-01 
                  :ARG1-of (m2 / market-01)) 
            :name (n / name 
                  :op1 "stevens" 
                  :op2 "robert")) 
      :ARG1 (v / vital 
            :domain (i / it) 
            :domain (r / release-01 
                  :ARG0 (s2 / stranger 
                        :poss-of (c / child)) 
                  :ARG1 (c2 / child) 
                  :domain-of (p / possible 
                        :condition (a / accident)) 
                  :location (s / seat) 
                  :manner (q / quick))))

# ::snt this tactic would promote future accident prevention but reduce the incentive to litigate
# ::tok this tactic would promote future accident prevention but reduce the incentive to litigate
# ::alignments 10-11|0.1.0 8-9|0.1 7-8|0 6-7|0.0.0 5-6|0.0.0.0 4-5|0.0.0.1 3-4|0.0 0-1|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:53.000
# ::node	0	contrast-01	7-8
# ::node	0.0	promote-02	3-4
# ::node	0.0.0	prevent-01	6-7
# ::node	0.0.0.0	accident	5-6
# ::node	0.0.0.1	future	4-5
# ::node	0.1	reduce-01	8-9
# ::node	0.1.0	incentivize-01	10-11
# ::node	0.1.0.0	this	0-1
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	promote-02	0	0.0	
# ::edge	contrast-01	ARG2	reduce-01	0	0.1	
# ::edge	incentivize-01	ARG1	this	0.1.0	0.1.0.0	
# ::edge	prevent-01	ARG1	accident	0.0.0	0.0.0.0	
# ::edge	prevent-01	time	future	0.0.0	0.0.0.1	
# ::edge	promote-02	ARG1	prevent-01	0.0	0.0.0	
# ::edge	reduce-01	ARG1	incentivize-01	0.1	0.1.0	
(c / contrast-01 
      :ARG1 (p2 / promote-02 
            :ARG1 (p / prevent-01 
                  :ARG1 (a / accident) 
                  :time (f / future))) 
      :ARG2 (r / reduce-01 
            :ARG1 (i / incentivize-01 
                  :ARG1 (t / this))))

# ::snt vandalism and accidents on the railways are on a steep upward trend latest statistics from the department of transport indicate, while most measures of accidents on british rail declined in the 1970s and flattened out for most of the 1980s the figures are now showing a marked increase according to analysis of the official data by researchers at the national union of railwaymen, the total number of accidents in 1983 was 1255 but last year it was up to 1374 dash
# ::tok vandalism and accidents on the railways are on a steep upward trend latest statistics from the department of transport indicate , while most measures of accidents on british rail declined in the 1970s and flattened out for most of the 1980s the figures are now showing a marked increase according to analysis of the official data by researchers at the national union of railwaymen , the total number of accidents in 1983 was 1255 but last year it was up to 1374 dash
# ::alignments 81-82|0.2.2.1.1.1.0.0.0.0.0.0.0+0.2.2.1.1.1.0.0.0.0.0.0 77-78|0.2.0 76-77|0.1 75-76|0.1.0 74-75|0 73-74|0.0.0+0.0 71-72|0.2.1.1.0+0.2.1.1 69-70|0.2.1.0 67-68|0.2.1 61-62|0.2.2.1.1.1.0.0.0.0 60-61|0.2.2.1.1.1.0.0.0.0.0 57-58|0.2.2.1.1.1.0.0.0+0.2.2.1.1.1.0.0 55-56|0.2.2.1.1.1.0.2 54-55|0.2.2.1.1.1.0.1+0.2.2.1.1.1.0 51-52|0.2.2.1.1.1.0.2.0 48-49|0.2 47-48|0.2.3 45-46|0.2.2 44-45|0.2.2.2 42-43|0.2.2.0 40-41|0.2.2.1.0.0.2.0.0 37-38|0.2.2.1.2.0 34-35|0.2.2.1.2 33-34|0.2.2.1 32-33|0.2.2.1.1.2 29-30|0.2.2.1.1 27-29|0.2.2.1.1.1.1.0+0.2.2.1.1.1.1.1+0.2.2.1.1.1.1+0.2.2.1.1.1 25-26|0.2.2.1.1.1.2 23-24|0.2.2.1.1.0 22-23|0.2.2.1.1.0.0 19-20|0.2.2.1.0 18-19|0.2.2.1.0.0.2.0 16-17|0.2.2.1.0.0.2 13-14|0.2.2.1.0.0 12-13|0.2.2.1.0.0.1.0+0.2.2.1.0.0.1 11-12|0.2.2.1.0.0.0 10-11|0.2.2.1.0.0.0.2 9-10|0.2.2.1.0.0.0.1 5-6|0.2.2.1.0.0.0.0.1.0 2-3|0.2.2.1.0.0.0.0.1 1-2|0.2.2.1.0.0.0.0 0-1|0.2.2.1.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:56.485
# ::node	0	contrast-01	74-75
# ::node	0.0	date-entity	73-74
# ::node	0.0.0	1255	73-74
# ::node	0.1	year	76-77
# ::node	0.1.0	last	75-76
# ::node	0.2	increase-01	48-49
# ::node	0.2.0	it	77-78
# ::node	0.2.1	number	67-68
# ::node	0.2.1.0	accident	69-70
# ::node	0.2.1.1	date-entity	71-72
# ::node	0.2.1.1.0	1983	71-72
# ::node	0.2.2	show-01	45-46
# ::node	0.2.2.0	figure	42-43
# ::node	0.2.2.1	and	33-34
# ::node	0.2.2.1.0	indicate-01	19-20
# ::node	0.2.2.1.0.0	statistic	13-14
# ::node	0.2.2.1.0.0.0	trend-01	11-12
# ::node	0.2.2.1.0.0.0.0	and	1-2
# ::node	0.2.2.1.0.0.0.0.0	vandalism	0-1
# ::node	0.2.2.1.0.0.0.0.1	accident	2-3
# ::node	0.2.2.1.0.0.0.0.1.0	railway	5-6
# ::node	0.2.2.1.0.0.0.1	steep-01	9-10
# ::node	0.2.2.1.0.0.0.2	upward	10-11
# ::node	0.2.2.1.0.0.1	late	12-13
# ::node	0.2.2.1.0.0.1.0	most	12-13
# ::node	0.2.2.1.0.0.2	department	16-17
# ::node	0.2.2.1.0.0.2.0	transport-01	18-19
# ::node	0.2.2.1.0.0.2.0.0	1980	40-41
# ::node	0.2.2.1.1	decline-02	29-30
# ::node	0.2.2.1.1.0	measure	23-24
# ::node	0.2.2.1.1.0.0	most	22-23
# ::node	0.2.2.1.1.1	organization	27-29
# ::node	0.2.2.1.1.1.0	have-org-role-91	54-55
# ::node	0.2.2.1.1.1.0.0	person	57-58
# ::node	0.2.2.1.1.1.0.0.0	research-01	57-58
# ::node	0.2.2.1.1.1.0.0.0.0	union	61-62
# ::node	0.2.2.1.1.1.0.0.0.0.0	nation	60-61
# ::node	0.2.2.1.1.1.0.0.0.0.0.0	date-entity	81-82
# ::node	0.2.2.1.1.1.0.0.0.0.0.0.0	1374	81-82
# ::node	0.2.2.1.1.1.0.1	official	54-55
# ::node	0.2.2.1.1.1.0.2	data	55-56
# ::node	0.2.2.1.1.1.0.2.0	analyze-01	51-52
# ::node	0.2.2.1.1.1.1	name	27-29
# ::node	0.2.2.1.1.1.1.0	"rail"	27-29
# ::node	0.2.2.1.1.1.1.1	"british"	27-29
# ::node	0.2.2.1.1.1.2	accident	25-26
# ::node	0.2.2.1.1.2	1970	32-33
# ::node	0.2.2.1.2	flatten-01	34-35
# ::node	0.2.2.1.2.0	most	37-38
# ::node	0.2.2.2	now	44-45
# ::node	0.2.3	mark-01	47-48
# ::root	0	contrast-01
# ::edge	accident	poss	organization	0.2.2.1.1.1.2	0.2.2.1.1.1	
# ::edge	accident	poss	railway	0.2.2.1.0.0.0.0.1	0.2.2.1.0.0.0.0.1.0	
# ::edge	accident	quant	number	0.2.1.0	0.2.1	
# ::edge	analyze-01	ARG1	data	0.2.2.1.1.1.0.2.0	0.2.2.1.1.1.0.2	
# ::edge	and	op1	decline-02	0.2.2.1	0.2.2.1.1	
# ::edge	and	op1	vandalism	0.2.2.1.0.0.0.0	0.2.2.1.0.0.0.0.0	
# ::edge	and	op2	accident	0.2.2.1.0.0.0.0	0.2.2.1.0.0.0.0.1	
# ::edge	and	op2	flatten-01	0.2.2.1	0.2.2.1.2	
# ::edge	contrast-01	ARG0	date-entity	0	0.0	
# ::edge	contrast-01	ARG1	year	0	0.1	
# ::edge	contrast-01	ARG2	increase-01	0	0.2	
# ::edge	data	mod	have-org-role-91	0.2.2.1.1.1.0.2	0.2.2.1.1.1.0	
# ::edge	date-entity	year	1255	0.0	0.0.0	
# ::edge	date-entity	year	1374	0.2.2.1.1.1.0.0.0.0.0.0	0.2.2.1.1.1.0.0.0.0.0.0.0	
# ::edge	date-entity	year	1983	0.2.1.1	0.2.1.1.0	
# ::edge	decline-02	ARG0	measure	0.2.2.1.1	0.2.2.1.1.0	
# ::edge	decline-02	ARG1	organization	0.2.2.1.1	0.2.2.1.1.1	
# ::edge	decline-02	ARG2	1970	0.2.2.1.1	0.2.2.1.1.2	
# ::edge	flatten-01	ARG1	most	0.2.2.1.2	0.2.2.1.2.0	
# ::edge	have-org-role-91	ARG0	person	0.2.2.1.1.1.0	0.2.2.1.1.1.0.0	
# ::edge	have-org-role-91	ARG1	organization	0.2.2.1.1.1.0	0.2.2.1.1.1	
# ::edge	have-org-role-91	ARG2	official	0.2.2.1.1.1.0	0.2.2.1.1.1.0.1	
# ::edge	increase-01	ARG0	it	0.2	0.2.0	
# ::edge	increase-01	ARG1	number	0.2	0.2.1	
# ::edge	indicate-01	ARG0	statistic	0.2.2.1.0	0.2.2.1.0.0	
# ::edge	indicate-01	condition	and	0.2.2.1.0	0.2.2.1	
# ::edge	late	degree	most	0.2.2.1.0.0.1	0.2.2.1.0.0.1.0	
# ::edge	mark-01	ARG1	increase-01	0.2.3	0.2	
# ::edge	measure	quant	most	0.2.2.1.1.0	0.2.2.1.1.0.0	
# ::edge	name	op1	"rail"	0.2.2.1.1.1.1	0.2.2.1.1.1.1.0	
# ::edge	name	op2	"british"	0.2.2.1.1.1.1	0.2.2.1.1.1.1.1	
# ::edge	nation	poss	date-entity	0.2.2.1.1.1.0.0.0.0.0	0.2.2.1.1.1.0.0.0.0.0.0	
# ::edge	number	time	date-entity	0.2.1	0.2.1.1	
# ::edge	organization	name	name	0.2.2.1.1.1	0.2.2.1.1.1.1	
# ::edge	research-01	ARG0	person	0.2.2.1.1.1.0.0.0	0.2.2.1.1.1.0.0	
# ::edge	research-01	ARG1	union	0.2.2.1.1.1.0.0.0	0.2.2.1.1.1.0.0.0.0	
# ::edge	show-01	ARG0	figure	0.2.2	0.2.2.0	
# ::edge	show-01	ARG1	increase-01	0.2.2	0.2	
# ::edge	show-01	condition	and	0.2.2	0.2.2.1	
# ::edge	show-01	time	now	0.2.2	0.2.2.2	
# ::edge	statistic	mod	late	0.2.2.1.0.0	0.2.2.1.0.0.1	
# ::edge	statistic	source	department	0.2.2.1.0.0	0.2.2.1.0.0.2	
# ::edge	steep-01	ARG1	trend-01	0.2.2.1.0.0.0.1	0.2.2.1.0.0.0	
# ::edge	transport-01	ARG1	1980	0.2.2.1.0.0.2.0	0.2.2.1.0.0.2.0.0	
# ::edge	transport-01	instrument	department	0.2.2.1.0.0.2.0	0.2.2.1.0.0.2	
# ::edge	trend-01	ARG0	statistic	0.2.2.1.0.0.0	0.2.2.1.0.0	
# ::edge	trend-01	ARG1	and	0.2.2.1.0.0.0	0.2.2.1.0.0.0.0	
# ::edge	trend-01	mod	upward	0.2.2.1.0.0.0	0.2.2.1.0.0.0.2	
# ::edge	union	mod	nation	0.2.2.1.1.1.0.0.0.0	0.2.2.1.1.1.0.0.0.0.0	
# ::edge	year	mod	last	0.1	0.1.0	
(c / contrast-01 
      :ARG0 (d2 / date-entity 
            :year 1255) 
      :ARG1 (y / year 
            :mod (l / last)) 
      :ARG2 (i2 / increase-01 
            :ARG0 (i / it) 
            :ARG1 (n / number 
                  :quant-of (a / accident) 
                  :time (d3 / date-entity 
                        :year 1983)) 
            :ARG1-of (s / show-01 
                  :ARG0 (f / figure) 
                  :condition (a3 / and 
                        :condition-of (i3 / indicate-01 
                              :ARG0 (s2 / statistic 
                                    :ARG0-of (t2 / trend-01 
                                          :ARG1 (a6 / and 
                                                :op1 (v / vandalism) 
                                                :op2 (a5 / accident 
                                                      :poss (r2 / railway))) 
                                          :ARG1-of (s3 / steep-01) 
                                          :mod (u2 / upward)) 
                                    :mod (l2 / late 
                                          :degree (m5 / most)) 
                                    :source (d6 / department 
                                          :instrument-of (t / transport-01 
                                                :ARG1 1980)))) 
                        :op1 (d5 / decline-02 
                              :ARG0 (m3 / measure 
                                    :quant (m4 / most)) 
                              :ARG1 (o2 / organization 
                                    :ARG1-of (h / have-org-role-91 
                                          :ARG0 (p / person 
                                                :ARG0-of (r / research-01 
                                                      :ARG1 (u / union 
                                                            :mod (n2 / nation 
                                                                  :poss (d / date-entity 
                                                                        :year 1374))))) 
                                          :ARG2 (o / official) 
                                          :mod-of (d4 / data 
                                                :ARG1-of (a2 / analyze-01))) 
                                    :name (n4 / name 
                                          :op1 "rail" 
                                          :op2 "british") 
                                    :poss-of (a4 / accident)) 
                              :ARG2 1970) 
                        :op2 (f2 / flatten-01 
                              :ARG1 (m2 / most))) 
                  :time (n3 / now)) 
            :ARG1-of (m / mark-01)))

# ::snt a 43yearold workman was said to be comfortable in hospital today after a horrific industrial accident near oxford forced doctors to amputate an arm
# ::tok a 43yearold workman was said to be comfortable in hospital today after a horrific industrial accident near oxford forced doctors to amputate an arm
# ::alignments 23-24|0.0.0.0.0.2 19-20|0.0.0.0.0 18-19|0.0.0.0.0.0 16-17|0.0.0.0.0.1 15-16|0.0.0.0 14-15|0.0.0.0.1 11-12|0.0.0 10-11|0.0.1 9-10|0.0.0.0.0.0.0 7-8|0.0 4-5|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T08:17:56.581
# ::node	0	say-01	4-5
# ::node	0.0	comfortable	7-8
# ::node	0.0.0	after	11-12
# ::node	0.0.0.0	accident	15-16
# ::node	0.0.0.0.0	doctor	19-20
# ::node	0.0.0.0.0.0	force-01	18-19
# ::node	0.0.0.0.0.0.0	hospital	9-10
# ::node	0.0.0.0.0.1	near	16-17
# ::node	0.0.0.0.0.2	arm	23-24
# ::node	0.0.0.0.1	industry	14-15
# ::node	0.0.1	today	10-11
# ::root	0	say-01
# ::edge	accident	mod	industry	0.0.0.0	0.0.0.0.1	
# ::edge	after	op1	accident	0.0.0	0.0.0.0	
# ::edge	arm	name	doctor	0.0.0.0.0.2	0.0.0.0.0	
# ::edge	comfortable	time	after	0.0	0.0.0	
# ::edge	comfortable	topic	today	0.0	0.0.1	
# ::edge	doctor	consist	accident	0.0.0.0.0	0.0.0.0	
# ::edge	force-01	ARG1	hospital	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	force-01	ARG2	doctor	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	near	mod	doctor	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	say-01	ARG1	comfortable	0	0.0	
(s / say-01 
      :ARG1 (c / comfortable 
            :time (a3 / after 
                  :op1 (a2 / accident 
                        :consist-of (d / doctor 
                              :ARG2-of (f / force-01 
                                    :ARG1 (h / hospital)) 
                              :mod-of (n / near) 
                              :name-of (a / arm)) 
                        :mod (i / industry))) 
            :topic (t / today)))

