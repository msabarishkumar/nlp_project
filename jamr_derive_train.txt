# ::snt from a company describing itself as the most revered supplier of meat derived from livestock reared without the use of growth promoters or preemptive medication and according to special high welfare keeping conditons this seems below the belt
# ::tok from a company describing itself as the most revered supplier of meat derived from livestock reared without the use of growth promoters or preemptive medication and according to special high welfare keeping conditons this seems below the belt
# ::alignments 37-38|0.1.0 35-36|0.1 34-35|0 33-34|0.0 30-31|0.2.1.0 29-30|0.2.3.0.0 28-29|0.2.3.1.0.0 25-26|0.2 24-25|0.2.3.2.0 22-23|0.2.3.2 21-22|0.2.3.1+0.2.3 20-21|0.2.3.1.0 18-19|0.2.3.0 14-15|0.2.2.1 12-13|0.2.2 11-12|0.2.1.1 9-10|0.2.1 7-8|0.2.2.0 3-4|0.2.0 2-3|0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:22.267
# ::node	0	seem-01	34-35
# ::node	0.0	this	33-34
# ::node	0.1	below	35-36
# ::node	0.1.0	belt	37-38
# ::node	0.2	and	25-26
# ::node	0.2.0	describe-01	3-4
# ::node	0.2.0.0	company	2-3
# ::node	0.2.1	supply-01	9-10
# ::node	0.2.1.0	welfare	30-31
# ::node	0.2.1.1	meat	11-12
# ::node	0.2.2	derive-01	12-13
# ::node	0.2.2.0	most	7-8
# ::node	0.2.2.1	livestock	14-15
# ::node	0.2.3	person	21-22
# ::node	0.2.3.0	use-01	18-19
# ::node	0.2.3.0.0	high	29-30
# ::node	0.2.3.1	promote-02	21-22
# ::node	0.2.3.1.0	grow-01	20-21
# ::node	0.2.3.1.0.0	special	28-29
# ::node	0.2.3.2	or	22-23
# ::node	0.2.3.2.0	medication	24-25
# ::root	0	seem-01
# ::edge	and	op1	supply-01	0.2	0.2.1	
# ::edge	and	op2	derive-01	0.2	0.2.2	
# ::edge	and	op3	person	0.2	0.2.3	
# ::edge	and	op4	seem-01	0.2	0	
# ::edge	below	op1	belt	0.1	0.1.0	
# ::edge	derive-01	ARG1	most	0.2.2	0.2.2.0	
# ::edge	derive-01	ARG2	livestock	0.2.2	0.2.2.1	
# ::edge	describe-01	ARG1	company	0.2.0	0.2.0.0	
# ::edge	describe-01	ARG2	and	0.2.0	0.2	
# ::edge	grow-01	ARG1	special	0.2.3.1.0	0.2.3.1.0.0	
# ::edge	or	op1	person	0.2.3.2	0.2.3	
# ::edge	or	op2	medication	0.2.3.2	0.2.3.2.0	
# ::edge	promote-02	ARG0	person	0.2.3.1	0.2.3	
# ::edge	promote-02	ARG1	grow-01	0.2.3.1	0.2.3.1.0	
# ::edge	seem-01	ARG1	this	0	0.0	
# ::edge	seem-01	ARG4	below	0	0.1	
# ::edge	supply-01	ARG0	welfare	0.2.1	0.2.1.0	
# ::edge	supply-01	ARG1	meat	0.2.1	0.2.1.1	
# ::edge	use-01	ARG0	person	0.2.3.0	0.2.3	
# ::edge	use-01	ARG1	high	0.2.3.0	0.2.3.0.0	
(s / seem-01 
      :ARG1 (t / this) 
      :ARG4 (b2 / below 
            :op1 (b / belt)) 
      :op-of (a / and 
            :ARG2-of (d2 / describe-01 
                  :ARG1 (c / company)) 
            :op1 (s3 / supply-01 
                  :ARG0 (w / welfare) 
                  :ARG1 (m2 / meat)) 
            :op2 (d / derive-01 
                  :ARG1 (m3 / most) 
                  :ARG2 (l / livestock)) 
            :op3 (p / person 
                  :ARG0-of (u / use-01 
                        :ARG1 (h / high)) 
                  :ARG0-of (p2 / promote-02 
                        :ARG1 (g / grow-01 
                              :ARG1 (s2 / special))) 
                  :op-of (o / or 
                        :op1 (m / medication)))))

# ::snt but the thing to listen for is the propulsion they derive from the handclap
# ::tok but the thing to listen for is the propulsion they derive from the handclap
# ::alignments 10-11|0.0.1 9-10|0.0.1.0 4-5|0.0 2-3|0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:22.466
# ::node	0	contrast-01	0-1
# ::node	0.0	listen-01	4-5
# ::node	0.0.0	thing	2-3
# ::node	0.0.1	derive-01	10-11
# ::node	0.0.1.0	they	9-10
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	listen-01	0	0.0	
# ::edge	derive-01	ARG0	they	0.0.1	0.0.1.0	
# ::edge	listen-01	ARG0	thing	0.0	0.0.0	
# ::edge	listen-01	ARG1	derive-01	0.0	0.0.1	
(c / contrast-01 
      :ARG1 (l / listen-01 
            :ARG0 (t2 / thing) 
            :ARG1 (d / derive-01 
                  :ARG0 (t / they))))

# ::snt yet the view that such duties must ultimately derive from fundamental rights or at least be based on the interests of people other than those subject to the duty has become sufficiently widespread that it is important to explain why it is rational to expect that there are fundamental moral duties which do not derive solely from the rights and interests of their potential beneficiaries or which have no potential beneficiaries at all
# ::tok yet the view that such duties must ultimately derive from fundamental rights or at least be based on the interests of people other than those subject to the duty has become sufficiently widespread that it is important to explain why it is rational to expect that there are fundamental moral duties which do not derive solely from the rights and interests of their potential beneficiaries or which have no potential beneficiaries at all
# ::alignments 72-73|0.0.2.1.0.1.0.1.0.0.0 69-70|0.0.2.1.0.1.0.1.0.0 68-69|0.0.2.1.0.1.0.2 65-66|0.0.3 63-64|0.0.2.1.0.1.0.1.0.1.0.0 60-61|0.0.2.1.0.1.0.1.0.1.1 59-60|0.0.2.1.0.1.0.1.0.1 58-59|0.0.2.1.0.1.0.1.0.1.0 55-56|0.0.2.1.0.1.0.1.0.2 54-55|0.0.2.1.0.1.0.1.0 50-51|0.0.2.1.0.1.0.1 49-50|0.0.2.1.0.1.0.1.2 48-49|0.0.2.1.0.1.0.1.1 44-45|0.0.2.1.0.1.0 42-43|0.0.2.1.0.1 40-41|0.0.2.1.0.1.0.0 38-39|0.0.2.1.0 36-37|0.0.2.1 34-35|0.0.2.1.0.0 32-33|0.0.2 31-32|0.0.2.0 30-31|0.0 28-29|0.0.0 25-26|0 22-23|0.0.2.0.0 19-20|0.0.1.1.1 16-17|0.0.1.0.0 12-13|0.0.1.1 11-12|0.0.1.1.0 10-11|0.0.1.1.0.0 8-9|0.0.1 7-8|0.0.1.2 5-6|0.0.1.0 4-5|0.0.1.0.1 0-1|0.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:25.838
# ::node	0	subject	25-26
# ::node	0.0	become-01	30-31
# ::node	0.0.0	duty	28-29
# ::node	0.0.1	derive-01	8-9
# ::node	0.0.1.0	duty	5-6
# ::node	0.0.1.0.0	base-01	16-17
# ::node	0.0.1.0.0.0	yet	0-1
# ::node	0.0.1.0.1	such	4-5
# ::node	0.0.1.1	or	12-13
# ::node	0.0.1.1.0	right	11-12
# ::node	0.0.1.1.0.0	fundamental	10-11
# ::node	0.0.1.1.1	interest	19-20
# ::node	0.0.1.2	ultimate	7-8
# ::node	0.0.2	wide	32-33
# ::node	0.0.2.0	suffice-01	31-32
# ::node	0.0.2.0.0	other	22-23
# ::node	0.0.2.1	important	36-37
# ::node	0.0.2.1.0	explain-01	38-39
# ::node	0.0.2.1.0.0	it	34-35
# ::node	0.0.2.1.0.1	rational	42-43
# ::node	0.0.2.1.0.1.0	expect-01	44-45
# ::node	0.0.2.1.0.1.0.0	it	40-41
# ::node	0.0.2.1.0.1.0.1	duty	50-51
# ::node	0.0.2.1.0.1.0.1.0	derive-01	54-55
# ::node	0.0.2.1.0.1.0.1.0.0	potential	69-70
# ::node	0.0.2.1.0.1.0.1.0.0.0	all	72-73
# ::node	0.0.2.1.0.1.0.1.0.1	and	59-60
# ::node	0.0.2.1.0.1.0.1.0.1.0	right	58-59
# ::node	0.0.2.1.0.1.0.1.0.1.0.0	potential	63-64
# ::node	0.0.2.1.0.1.0.1.0.1.1	interest	60-61
# ::node	0.0.2.1.0.1.0.1.0.2	sole	55-56
# ::node	0.0.2.1.0.1.0.1.1	fundamental	48-49
# ::node	0.0.2.1.0.1.0.1.2	moral	49-50
# ::node	0.0.2.1.0.1.0.2	-	68-69
# ::node	0.0.3	or	65-66
# ::root	0	subject
(s3 / subject 
      :ARG1-of (b / become-01 
            :ARG0 (d3 / duty) 
            :ARG1-of (d4 / derive-01 
                  :ARG0 (d5 / duty 
                        :ARG0-of (b2 / base-01 
                              :ARG1 (y / yet)) 
                        :mod (s4 / such)) 
                  :op-of (o3 / or 
                        :op1 (r3 / right 
                              :mod (f2 / fundamental)) 
                        :op2 (i5 / interest)) 
                  :time (u / ultimate)) 
            :ARG2 (w / wide 
                  :ARG1-of (s2 / suffice-01 
                        :ARG0 (o2 / other)) 
                  :time (i3 / important 
                        :domain (e2 / explain-01 
                              :ARG0 (i4 / it) 
                              :ARG1 (r2 / rational 
                                    :domain (e / expect-01 
                                          :ARG0 (i2 / it) 
                                          :ARG1 (d2 / duty 
                                                :ARG1-of (d / derive-01 
                                                      :ARG0 (p / potential 
                                                            :prep-at (a / all)) 
                                                      :location (a2 / and 
                                                            :op1 (r / right 
                                                                  :poss (p2 / potential)) 
                                                            :op2 (i / interest)) 
                                                      :manner (s / sole)) 
                                                :mod (f / fundamental) 
                                                :mod (m / moral)) 
                                          :op-of (- / -)))))) 
            :op-of (o / or)))

# ::snt the awe and sense of time which an uncrowded visit to stonhenge or avebury offers derives from that very quality which exists at a site that has survived through millenia of historical change a sense of slow decay yet also of survival
# ::tok the awe and sense of time which an uncrowded visit to stonhenge or avebury offers derives from that very quality which exists at a site that has survived through millenia of historical change a sense of slow decay yet also of survival
# ::alignments 41-42|0.0.1.0 39-40|0.0.1.0.0 38-39|0.0.0 34-35|0.0.1.0.1 32-33|0.0.1.1 31-32|0.0.1.1.0 27-28|0.0.1.0.1.0 24-25|0.0.1.0.1.0.0 21-22|0.0.1.0.1.0.0.0 19-20|0.0.1.0.1.0.0.0.0 18-19|0.0.1.0.1.0.0.0.0.0 14-15|0.0 12-13|0.0.2 9-10|0.0.1 5-6|0.1.0 3-4|0.2 2-3|0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:26.162
# ::node	0	and	2-3
# ::node	0.0	offer-01	14-15
# ::node	0.0.0	yet	38-39
# ::node	0.0.1	visit-01	9-10
# ::node	0.0.1.0	survive-01	41-42
# ::node	0.0.1.0.0	also	39-40
# ::node	0.0.1.0.1	sense	34-35
# ::node	0.0.1.0.1.0	survive-01	27-28
# ::node	0.0.1.0.1.0.0	site	24-25
# ::node	0.0.1.0.1.0.0.0	exist-01	21-22
# ::node	0.0.1.0.1.0.0.0.0	quality	19-20
# ::node	0.0.1.0.1.0.0.0.0.0	very	18-19
# ::node	0.0.1.1	change-01	32-33
# ::node	0.0.1.1.0	history	31-32
# ::node	0.0.2	or	12-13
# ::node	0.1	awe-01	1-2
# ::node	0.1.0	time	5-6
# ::node	0.2	sense	3-4
# ::root	0	and
# ::edge	and	op1	awe-01	0	0.1	
# ::edge	and	op2	sense	0	0.2	
# ::edge	awe-01	ARG1	time	0.1	0.1.0	
# ::edge	change-01	ARG1	visit-01	0.0.1.1	0.0.1	
# ::edge	change-01	mod	history	0.0.1.1	0.0.1.1.0	
# ::edge	exist-01	ARG0	quality	0.0.1.0.1.0.0.0	0.0.1.0.1.0.0.0.0	
# ::edge	exist-01	location	site	0.0.1.0.1.0.0.0	0.0.1.0.1.0.0	
# ::edge	offer-01	ARG0	yet	0.0	0.0.0	
# ::edge	offer-01	ARG1	and	0.0	0	
# ::edge	or	op1	offer-01	0.0.2	0.0	
# ::edge	quality	mod	very	0.0.1.0.1.0.0.0.0	0.0.1.0.1.0.0.0.0.0	
# ::edge	sense	topic	survive-01	0.0.1.0.1	0.0.1.0	
# ::edge	survive-01	ARG0	sense	0.0.1.0.1.0	0.0.1.0.1	
# ::edge	survive-01	ARG1	site	0.0.1.0.1.0	0.0.1.0.1.0.0	
# ::edge	survive-01	ARG1	visit-01	0.0.1.0	0.0.1	
# ::edge	survive-01	time	also	0.0.1.0	0.0.1.0.0	
# ::edge	visit-01	ARG1	offer-01	0.0.1	0.0	
(a2 / and 
      :ARG1-of (o / offer-01 
            :ARG0 (y / yet) 
            :ARG1-of (v2 / visit-01 
                  :ARG1-of (s / survive-01 
                        :time (a / also) 
                        :topic-of (s2 / sense 
                              :ARG0-of (s3 / survive-01 
                                    :ARG1 (s4 / site 
                                          :location-of (e / exist-01 
                                                :ARG0 (q / quality 
                                                      :mod (v / very))))))) 
                  :ARG1-of (c / change-01 
                        :mod (h / history))) 
            :op-of (o2 / or)) 
      :op1 (a3 / awe-01 
            :ARG1 (t / time)) 
      :op2 (s5 / sense))

# ::snt first of course is the quran itself and the law that is held to be derived from it
# ::tok first of course is the quran itself and the law that is held to be derived from it
# ::alignments 17-18|0.0.0.0 15-16|0.0.0 9-10|0.0 7-8|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:26.202
# ::node	0	and	7-8
# ::node	0.0	law	9-10
# ::node	0.0.0	derive-01	15-16
# ::node	0.0.0.0	it	17-18
# ::root	0	and
# ::edge	and	op1	law	0	0.0	
# ::edge	derive-01	ARG0	law	0.0.0	0.0	
# ::edge	derive-01	ARG1	it	0.0.0	0.0.0.0	
(a / and 
      :op1 (l / law 
            :ARG0-of (d / derive-01 
                  :ARG1 (i / it))))

# ::snt no book or course of lectures can substitute for experience but as you learn the vernacular and gain confidence in your practical ability you can derive both inspiration and a sense of direction through reading the works of wise men
# ::tok no book or course of lectures can substitute for experience but as you learn the vernacular and gain confidence in your practical ability you can derive both inspiration and a sense of direction through reading the works of wise men
# ::alignments 39-40|0.0.1.0.0.0.0.0.0 38-39|0.0.0.0.0 34-35|0.0.1.0.0.0.0.0 32-33|0.0.1.1.0 30-31|0.0.1.1 28-29|0.0.1 27-28|0.0.0.0 26-27|0.0.0.0.1 25-26|0.0 24-25|0 23-24|0.0.0 22-23|0.0.1.0.0.1.0.1.0 21-22|0.0.1.0.0.1.0.1.0.0 18-19|0.0.1.0.0.1.0.1 17-18|0.0.1.0.0.1.0.1.1 16-17|0.0.1.0.0.1.0.2 13-14|0.0.1.0.0.1.0 12-13|0.0.1.0.0.1.0.0 10-11|0.0.1.0.0.1 9-10|0.0.1.0 7-8|0.0.1.0.0 6-7|0.0.1.0.0.2 5-6|0.0.1.0.0.0.1 2-3|0.0.1.0.0.0 1-2|0.0.1.0.0.0.0 0-1|0.0.1.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:29.222
# ::node	0	possible	24-25
# ::node	0.0	derive-01	25-26
# ::node	0.0.0	you	23-24
# ::node	0.0.0.0	inspire-01	27-28
# ::node	0.0.0.0.0	wise	38-39
# ::node	0.0.0.0.1	both	26-27
# ::node	0.0.1	and	28-29
# ::node	0.0.1.0	experience-01	9-10
# ::node	0.0.1.0.0	substitute-01	7-8
# ::node	0.0.1.0.0.0	or	2-3
# ::node	0.0.1.0.0.0.0	book	1-2
# ::node	0.0.1.0.0.0.0.0	read-01	34-35
# ::node	0.0.1.0.0.0.0.0.0	man	39-40
# ::node	0.0.1.0.0.0.0.1	-	0-1
# ::node	0.0.1.0.0.0.1	lecture-01	5-6
# ::node	0.0.1.0.0.1	contrast-01	10-11
# ::node	0.0.1.0.0.1.0	learn-01	13-14
# ::node	0.0.1.0.0.1.0.0	you	12-13
# ::node	0.0.1.0.0.1.0.1	confidence	18-19
# ::node	0.0.1.0.0.1.0.1.0	ability	22-23
# ::node	0.0.1.0.0.1.0.1.0.0	practical	21-22
# ::node	0.0.1.0.0.1.0.1.1	gain-02	17-18
# ::node	0.0.1.0.0.1.0.2	and	16-17
# ::node	0.0.1.0.0.2	possible	6-7
# ::node	0.0.1.1	sense	30-31
# ::node	0.0.1.1.0	direction	32-33
# ::root	0	possible
# ::edge	ability	mod	practical	0.0.1.0.0.1.0.1.0	0.0.1.0.0.1.0.1.0.0	
# ::edge	and	op1	learn-01	0.0.1.0.0.1.0.2	0.0.1.0.0.1.0	
# ::edge	and	op1	sense	0.0.1	0.0.1.1	
# ::edge	book	polarity	-	0.0.1.0.0.0.0	0.0.1.0.0.0.0.1	
# ::edge	confidence	location	ability	0.0.1.0.0.1.0.1	0.0.1.0.0.1.0.1.0	
# ::edge	confidence	mod	gain-02	0.0.1.0.0.1.0.1	0.0.1.0.0.1.0.1.1	
# ::edge	contrast-01	ARG2	learn-01	0.0.1.0.0.1	0.0.1.0.0.1.0	
# ::edge	derive-01	ARG0	you	0.0	0.0.0	
# ::edge	derive-01	ARG1	and	0.0	0.0.1	
# ::edge	experience-01	ARG1	and	0.0.1.0	0.0.1	
# ::edge	inspire-01	ARG0	you	0.0.0.0	0.0.0	
# ::edge	inspire-01	ARG1	wise	0.0.0.0	0.0.0.0.0	
# ::edge	inspire-01	mod	both	0.0.0.0	0.0.0.0.1	
# ::edge	learn-01	ARG0	you	0.0.1.0.0.1.0	0.0.1.0.0.1.0.0	
# ::edge	learn-01	ARG1	confidence	0.0.1.0.0.1.0	0.0.1.0.0.1.0.1	
# ::edge	or	op1	book	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	or	purpose	lecture-01	0.0.1.0.0.0	0.0.1.0.0.0.1	
# ::edge	possible	domain	derive-01	0	0.0	
# ::edge	possible	domain	substitute-01	0.0.1.0.0.2	0.0.1.0.0	
# ::edge	read-01	ARG0	book	0.0.1.0.0.0.0.0	0.0.1.0.0.0.0	
# ::edge	read-01	ARG1	man	0.0.1.0.0.0.0.0	0.0.1.0.0.0.0.0.0	
# ::edge	sense	mod	direction	0.0.1.1	0.0.1.1.0	
# ::edge	substitute-01	ARG0	or	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	substitute-01	ARG1	contrast-01	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	substitute-01	ARG2	experience-01	0.0.1.0.0	0.0.1.0	
(p / possible 
      :domain (d2 / derive-01 
            :ARG0 (y / you 
                  :ARG0-of (i / inspire-01 
                        :ARG1 (w / wise) 
                        :mod (b / both))) 
            :ARG1 (a / and 
                  :ARG1-of (e / experience-01 
                        :ARG2-of (s2 / substitute-01 
                              :ARG0 (o / or 
                                    :op1 (b2 / book 
                                          :ARG0-of (r / read-01 
                                                :ARG1 (m / man)) 
                                          :polarity (- / -)) 
                                    :purpose (l2 / lecture-01)) 
                              :ARG1 (c2 / contrast-01 
                                    :ARG2 (l / learn-01 
                                          :ARG0 (y2 / you) 
                                          :ARG1 (c / confidence 
                                                :location (a2 / ability 
                                                      :mod (p2 / practical)) 
                                                :mod (g / gain-02)) 
                                          :op-of (a3 / and))) 
                              :domain-of (p3 / possible))) 
                  :op1 (s / sense 
                        :mod (d / direction)))))

# ::snt and so it was with my lovely bug who was able to inhale its transparent liters through a pair of miraculous onesixteenthinch portals and as a consequence to live and even to derive amusement from a superball with a swirl in it
# ::tok and so it was with my lovely bug who was able to inhale its transparent liters through a pair of miraculous onesixteenthinch portals and as a consequence to live and even to derive amusement from a superball with a swirl in it
# ::alignments 41-42|0.1.0.1.0.0 33-34|0.1.0.1.0.1 32-33|0.1.0.1.0 29-30|0.1.0.1 28-29|0.1.0 26-27|0.1.0.1.1 23-24|0.1 14-15|0.1.0.1.0.1.0 10-11|0.1.0.0.0 7-8|0.1.0.0 6-7|0.1.0.0.1 2-3|0.1.0.0.2 1-2|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:29.392
# ::node	0	and	0-1
# ::node	0.0	so	1-2
# ::node	0.1	and	23-24
# ::node	0.1.0	live-01	28-29
# ::node	0.1.0.0	bug	7-8
# ::node	0.1.0.0.0	possible	10-11
# ::node	0.1.0.0.1	lovely	6-7
# ::node	0.1.0.0.2	it	2-3
# ::node	0.1.0.1	and	29-30
# ::node	0.1.0.1.0	derive-01	32-33
# ::node	0.1.0.1.0.0	it	41-42
# ::node	0.1.0.1.0.1	amuse-01	33-34
# ::node	0.1.0.1.0.1.0	transparent	14-15
# ::node	0.1.0.1.1	consequence	26-27
# ::root	0	and
# ::edge	amuse-01	ARG1	transparent	0.1.0.1.0.1	0.1.0.1.0.1.0	
# ::edge	and	compared-to	live-01	0.1	0.1.0	
# ::edge	and	op1	live-01	0.1.0.1	0.1.0	
# ::edge	and	op1	so	0	0.0	
# ::edge	and	op2	and	0	0.1	
# ::edge	and	op2	derive-01	0.1.0.1	0.1.0.1.0	
# ::edge	bug	mod	lovely	0.1.0.0	0.1.0.0.1	
# ::edge	bug	mod	possible	0.1.0.0	0.1.0.0.0	
# ::edge	bug	poss	it	0.1.0.0	0.1.0.0.2	
# ::edge	consequence	purpose	and	0.1.0.1.1	0.1.0.1	
# ::edge	derive-01	ARG0	it	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	derive-01	ARG1	amuse-01	0.1.0.1.0	0.1.0.1.0.1	
# ::edge	live-01	ARG1	bug	0.1.0	0.1.0.0	
(a4 / and 
      :op1 (s / so) 
      :op2 (a3 / and 
            :compared-to (l / live-01 
                  :ARG1 (b / bug 
                        :mod (p / possible) 
                        :mod (l2 / lovely) 
                        :poss (i2 / it)) 
                  :op-of (a2 / and 
                        :op1 (d / derive-01 
                              :ARG0 (i / it) 
                              :ARG1 (a / amuse-01 
                                    :ARG1 (t / transparent))) 
                        :purpose-of (c / consequence)))))

# ::snt in many cases it would be enough to enquire whether the source of the powers of the body concerned was statutory or derived from the prerogative
# ::tok in many cases it would be enough to enquire whether the source of the powers of the body concerned was statutory or derived from the prerogative
# ::alignments 25-26|0.2.2.0 22-23|0.2 21-22|0.2.2 18-19|0 17-18|0.1 14-15|0.0 11-12|0.2.0 6-7|0.2.1.0.0 3-4|0.2.1.0.0.0 2-3|0.2.1.0 1-2|0.2.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:29.661
# ::node	0	concern-01	18-19
# ::node	0.0	power	14-15
# ::node	0.1	body	17-18
# ::node	0.2	derive-01	22-23
# ::node	0.2.0	source	11-12
# ::node	0.2.1	many	1-2
# ::node	0.2.1.0	case	2-3
# ::node	0.2.1.0.0	enough	6-7
# ::node	0.2.1.0.0.0	it	3-4
# ::node	0.2.2	or	21-22
# ::node	0.2.2.0	prerogative	25-26
# ::root	0	concern-01
# ::edge	case	quant	enough	0.2.1.0	0.2.1.0.0	
# ::edge	case	quant	many	0.2.1.0	0.2.1	
# ::edge	concern-01	ARG0	power	0	0.0	
# ::edge	concern-01	ARG1	body	0	0.1	
# ::edge	concern-01	ARG2	derive-01	0	0.2	
# ::edge	derive-01	ARG0	source	0.2	0.2.0	
# ::edge	derive-01	ARG1	many	0.2	0.2.1	
# ::edge	enough	domain	it	0.2.1.0.0	0.2.1.0.0.0	
# ::edge	or	op1	derive-01	0.2.2	0.2	
# ::edge	or	time	prerogative	0.2.2	0.2.2.0	
(c / concern-01 
      :ARG0 (p2 / power) 
      :ARG1 (b / body) 
      :ARG2 (d / derive-01 
            :ARG0 (s / source) 
            :ARG1 (m / many 
                  :quant-of (c2 / case 
                        :quant (e / enough 
                              :domain (i / it)))) 
            :op-of (o / or 
                  :time (p / prerogative))))

# ::snt later in berlin hitler presented her with a copy of mein kampf inscribed for my most esteemed friend clara with the wish that she derives the same pleasure reading this book as i did writing it
# ::tok later in berlin hitler presented her with a copy of mein kampf inscribed for my most esteemed friend clara with the wish that she derives the same pleasure reading this book as i did writing it
# ::alignments 35-36|0.1 34-35|0 32-33|0.0 30-31|0.2.1 29-30|0.2.1.0 28-29|0.2 27-28|0.2.0 26-27|0.2.0.0 23-24|0.2.2 21-22|0.2.0.0.0 17-18|0.0.0.0+0.0.0 15-16|0.2.2.0.0 4-5|0.2.2.0 0-1|0.2.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:30.177
# ::node	0	write-01	34-35
# ::node	0.0	i	32-33
# ::node	0.0.0	have-rel-role-91	17-18
# ::node	0.0.0.0	friend	17-18
# ::node	0.1	it	35-36
# ::node	0.2	read-01	28-29
# ::node	0.2.0	pleasure	27-28
# ::node	0.2.0.0	same-41	26-27
# ::node	0.2.0.0.0	wish-01	21-22
# ::node	0.2.0.0.0.0	late	0-1
# ::node	0.2.1	book	30-31
# ::node	0.2.1.0	this	29-30
# ::node	0.2.2	she	23-24
# ::node	0.2.2.0	present-01	4-5
# ::node	0.2.2.0.0	most	15-16
# ::root	0	write-01
# ::edge	book	mod	this	0.2.1	0.2.1.0	
# ::edge	have-rel-role-91	ARG1	i	0.0.0	0.0	
# ::edge	have-rel-role-91	ARG2	friend	0.0.0	0.0.0.0	
# ::edge	present-01	ARG0	most	0.2.2.0	0.2.2.0.0	
# ::edge	present-01	ARG1	she	0.2.2.0	0.2.2	
# ::edge	read-01	ARG0	pleasure	0.2	0.2.0	
# ::edge	read-01	ARG1	book	0.2	0.2.1	
# ::edge	read-01	source	she	0.2	0.2.2	
# ::edge	read-01	time	write-01	0.2	0	
# ::edge	same-41	ARG0	wish-01	0.2.0.0	0.2.0.0.0	
# ::edge	same-41	ARG1	pleasure	0.2.0.0	0.2.0	
# ::edge	wish-01	ARG0	late	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	write-01	ARG0	i	0	0.0	
# ::edge	write-01	ARG1	it	0	0.1	
(w / write-01 
      :ARG0 (i2 / i 
            :ARG1-of (h / have-rel-role-91 
                  :ARG2 (f / friend))) 
      :ARG1 (i / it) 
      :time-of (r / read-01 
            :ARG0 (p / pleasure 
                  :ARG1-of (s / same-41 
                        :ARG0 (w2 / wish-01 
                              :ARG0 (l / late)))) 
            :ARG1 (b / book 
                  :mod (t / this)) 
            :source (s2 / she 
                  :ARG1-of (p2 / present-01 
                        :ARG0 (m / most)))))

# ::snt pythagoras is said to have derived his doctrine of metempsychosis the transmigration of souls from discussions with indian brahmins
# ::tok pythagoras is said to have derived his doctrine of metempsychosis the transmigration of souls from discussions with indian brahmins
# ::alignments 15-16|0.1 13-14|0.1.0 7-8|0.0.0 5-6|0.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:30.344
# ::node	0	say-01	2-3
# ::node	0.0	derive-01	5-6
# ::node	0.0.0	doctrine	7-8
# ::node	0.1	discuss-01	15-16
# ::node	0.1.0	soul	13-14
# ::root	0	say-01
# ::edge	derive-01	ARG1	doctrine	0.0	0.0.0	
# ::edge	say-01	ARG1	derive-01	0	0.0	
# ::edge	say-01	ARG2	discuss-01	0	0.1	
# ::edge	soul	purpose	discuss-01	0.1.0	0.1	
(s2 / say-01 
      :ARG1 (d3 / derive-01 
            :ARG1 (d2 / doctrine)) 
      :ARG2 (d / discuss-01 
            :purpose-of (s / soul)))

# ::snt this in itself does not show of course that in an ordinary life there cannot be happenings which matter to the way it goes to its success and value and which do not derive that relevance from the goals and pursuits the agent has or may have
# ::tok this in itself does not show of course that in an ordinary life there cannot be happenings which matter to the way it goes to its success and value and which do not derive that relevance from the goals and pursuits the agent has or may have
# ::alignments 45-46|0.1.0.0.0.1.1.0+0.1.0.0.0.1.1 44-45|0.1.0.0.0.1 42-43|0.1.0.0.0.1.0 40-41|0.1.0.0.0.0.0.0+0.1.0.0.0.0.0 39-40|0.1.0.0.0.0 38-39|0.1.0.0.0 33-34|0.1.0.0 29-30|0.1.0.0.1 28-29|0.2 27-28|0 26-27|0.1 22-23|0.1.0 21-22|0.1.0.0.1.0.0 18-19|0.1.0.0.1.0 12-13|0.0.1 11-12|0.0.1.0 5-6|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:30.779
# ::node	0	and	27-28
# ::node	0.0	show-01	5-6
# ::node	0.0.0	this	0-1
# ::node	0.0.1	life	12-13
# ::node	0.0.1.0	ordinary	11-12
# ::node	0.1	succeed-01	26-27
# ::node	0.1.0	it	22-23
# ::node	0.1.0.0	derive-01	33-34
# ::node	0.1.0.0.0	goal	38-39
# ::node	0.1.0.0.0.0	and	39-40
# ::node	0.1.0.0.0.0.0	thing	40-41
# ::node	0.1.0.0.0.0.0.0	pursue-01	40-41
# ::node	0.1.0.0.0.1	or	44-45
# ::node	0.1.0.0.0.1.0	agent	42-43
# ::node	0.1.0.0.0.1.1	date-entity	45-46
# ::node	0.1.0.0.0.1.1.0	5	45-46
# ::node	0.1.0.0.1	and	29-30
# ::node	0.1.0.0.1.0	matter	18-19
# ::node	0.1.0.0.1.0.0	way	21-22
# ::node	0.2	value-01	28-29
# ::root	0	and
# ::edge	and	op1	goal	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	and	op1	matter	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	and	op1	show-01	0	0.0	
# ::edge	and	op2	derive-01	0.1.0.0.1	0.1.0.0	
# ::edge	and	op2	succeed-01	0	0.1	
# ::edge	and	op2	thing	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	and	op3	value-01	0	0.2	
# ::edge	date-entity	month	5	0.1.0.0.0.1.1	0.1.0.0.0.1.1.0	
# ::edge	derive-01	ARG1	it	0.1.0.0	0.1.0	
# ::edge	derive-01	ARG2	goal	0.1.0.0	0.1.0.0.0	
# ::edge	life	mod	ordinary	0.0.1	0.0.1.0	
# ::edge	matter	prep-to	way	0.1.0.0.1.0	0.1.0.0.1.0.0	
# ::edge	or	domain	agent	0.1.0.0.0.1	0.1.0.0.0.1.0	
# ::edge	or	op1	goal	0.1.0.0.0.1	0.1.0.0.0	
# ::edge	or	op2	date-entity	0.1.0.0.0.1	0.1.0.0.0.1.1	
# ::edge	pursue-01	ARG1	thing	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	show-01	ARG0	this	0.0	0.0.0	
# ::edge	show-01	ARG1	life	0.0	0.0.1	
# ::edge	succeed-01	poss	it	0.1	0.1.0	
(a4 / and 
      :op1 (s2 / show-01 
            :ARG0 (t2 / this) 
            :ARG1 (l / life 
                  :mod (o2 / ordinary))) 
      :op2 (s / succeed-01 
            :poss (i / it 
                  :ARG1-of (d2 / derive-01 
                        :ARG2 (g / goal 
                              :op-of (a2 / and 
                                    :op1 (t / thing 
                                          :ARG1-of (p / pursue-01))) 
                              :op-of (o / or 
                                    :domain (a / agent) 
                                    :op1 (d / date-entity 
                                          :month 5))) 
                        :op-of (a3 / and 
                              :op1 (m / matter 
                                    :prep-to (w / way)))))) 
      :op3 (v / value-01))

# ::snt what smaller members derive from the organisation is therefore highly debatable
# ::tok what smaller members derive from the organisation is therefore highly debatable
# ::alignments 9-10|0.1 6-7|0 3-4|0.0 2-3|0.0.1.0+0.0.1 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:30.840
# ::node	0	organize-01	6-7
# ::node	0.0	derive-01	3-4
# ::node	0.0.0	small	1-2
# ::node	0.0.1	have-org-role-91	2-3
# ::node	0.0.1.0	member	2-3
# ::node	0.1	high	9-10
# ::root	0	organize-01
# ::edge	derive-01	ARG0	small	0.0	0.0.0	
# ::edge	derive-01	ARG1	organize-01	0.0	0	
# ::edge	have-org-role-91	ARG1	derive-01	0.0.1	0.0	
# ::edge	have-org-role-91	ARG2	member	0.0.1	0.0.1.0	
# ::edge	organize-01	manner	high	0	0.1	
(o / organize-01 
      :ARG1-of (d / derive-01 
            :ARG0 (s / small) 
            :ARG1-of (h2 / have-org-role-91 
                  :ARG2 (m / member))) 
      :manner (h / high))

# ::snt perhaps if we can direct the sewage to a satisfactory destination of its own it will do so again and if it does i shall be delighted for huge satisfaction always derives from bringing some longdefunct artefact back to life and use
# ::tok perhaps if we can direct the sewage to a satisfactory destination of its own it will do so again and if it does i shall be delighted for huge satisfaction always derives from bringing some longdefunct artefact back to life and use
# ::alignments 41-42|0.2.1.1.0 40-41|0.2.1.1.0.1 39-40|0.2.1.1.0.1.1 37-38|0.2.1.1.0.1.0.1 34-35|0.2.1.1.0.1.0.0.0 33-34|0.2.1.1.0.1.0 30-31|0.2.1.1.0.1.0.0.2 29-30|0.2.1.1.0.1.0.0 28-29|0.2.1.1.0.1.0.0.1 26-27|0.2.1 23-24|0.2.1.1 21-22|0.2.1.2 19-20|0.2 18-19|0.2.0 17-18|0.2.0.0 14-15|0.2.1.1.0.0 10-11|0.0.1 6-7|0.1 4-5|0.0 3-4|0 2-3|0.0.0 0-1|0.2.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:31.361
# ::node	0	possible	3-4
# ::node	0.0	direct	4-5
# ::node	0.0.0	we	2-3
# ::node	0.0.1	destination	10-11
# ::node	0.1	sewage	6-7
# ::node	0.2	and	19-20
# ::node	0.2.0	again	18-19
# ::node	0.2.0.0	so	17-18
# ::node	0.2.1	delight-01	26-27
# ::node	0.2.1.0	perhaps	0-1
# ::node	0.2.1.1	i	23-24
# ::node	0.2.1.1.0	use-01	41-42
# ::node	0.2.1.1.0.0	it	14-15
# ::node	0.2.1.1.0.1	and	40-41
# ::node	0.2.1.1.0.1.0	bring-01	33-34
# ::node	0.2.1.1.0.1.0.0	satisfy-01	29-30
# ::node	0.2.1.1.0.1.0.0.0	some	34-35
# ::node	0.2.1.1.0.1.0.0.1	huge	28-29
# ::node	0.2.1.1.0.1.0.0.2	always	30-31
# ::node	0.2.1.1.0.1.0.1	back	37-38
# ::node	0.2.1.1.0.1.1	life	39-40
# ::node	0.2.1.2	it	21-22
# ::root	0	possible
# ::edge	again	mod	so	0.2.0	0.2.0.0	
# ::edge	and	mod	again	0.2	0.2.0	
# ::edge	and	op1	life	0.2.1.1.0.1	0.2.1.1.0.1.1	
# ::edge	and	op1	possible	0.2	0	
# ::edge	and	op2	delight-01	0.2	0.2.1	
# ::edge	and	op2	use-01	0.2.1.1.0.1	0.2.1.1.0	
# ::edge	bring-01	ARG0	satisfy-01	0.2.1.1.0.1.0	0.2.1.1.0.1.0.0	
# ::edge	bring-01	ARG1	and	0.2.1.1.0.1.0	0.2.1.1.0.1	
# ::edge	bring-01	location	back	0.2.1.1.0.1.0	0.2.1.1.0.1.0.1	
# ::edge	delight-01	ARG0	perhaps	0.2.1	0.2.1.0	
# ::edge	delight-01	ARG1	i	0.2.1	0.2.1.1	
# ::edge	delight-01	domain	it	0.2.1	0.2.1.2	
# ::edge	direct	ARG0	we	0.0	0.0.0	
# ::edge	direct	source	destination	0.0	0.0.1	
# ::edge	possible	domain	direct	0	0.0	
# ::edge	possible	domain	sewage	0	0.1	
# ::edge	satisfy-01	ARG1	some	0.2.1.1.0.1.0.0	0.2.1.1.0.1.0.0.0	
# ::edge	satisfy-01	mod	huge	0.2.1.1.0.1.0.0	0.2.1.1.0.1.0.0.1	
# ::edge	satisfy-01	time	always	0.2.1.1.0.1.0.0	0.2.1.1.0.1.0.0.2	
# ::edge	use-01	ARG0	i	0.2.1.1.0	0.2.1.1	
# ::edge	use-01	ARG1	it	0.2.1.1.0	0.2.1.1.0.0	
(p / possible 
      :domain (d3 / direct 
            :ARG0 (w / we) 
            :source (d2 / destination)) 
      :domain (s4 / sewage) 
      :op-of (a3 / and 
            :mod (a4 / again 
                  :mod (s3 / so)) 
            :op1 (d / delight-01 
                  :ARG0 (p2 / perhaps) 
                  :ARG1 (i / i 
                        :ARG0-of (u / use-01 
                              :ARG1 (i3 / it) 
                              :op-of (a / and 
                                    :ARG1-of (b2 / bring-01 
                                          :ARG0 (s2 / satisfy-01 
                                                :ARG1 (s / some) 
                                                :mod (h / huge) 
                                                :time (a2 / always)) 
                                          :location (b / back)) 
                                    :op1 (l / life)))) 
                  :domain (i2 / it))))

# ::snt the name minster lovell derives from the church that served a small priory founded in the twelfth century
# ::tok the name minster lovell derives from the church that served a small priory founded in the twelfth century
# ::alignments 13-14|0 11-12|0.0 9-10|0.1 7-8|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:31.391
# ::node	0	found-01	13-14
# ::node	0.0	small	11-12
# ::node	0.1	serve-01	9-10
# ::node	0.1.0	church	7-8
# ::root	0	found-01
# ::edge	found-01	ARG1	small	0	0.0	
# ::edge	serve-01	ARG0	church	0.1	0.1.0	
# ::edge	serve-01	ARG1	found-01	0.1	0	
(f / found-01 
      :ARG1 (s / small) 
      :ARG1-of (s2 / serve-01 
            :ARG0 (c / church)))

# ::snt the right to personal liberty is the core right from which the other derives
# ::tok the right to personal liberty is the core right from which the other derives
# ::alignments 12-13|0.0.0 7-8|0.0.0.0 4-5|0 3-4|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:31.409
# ::node	0	liberty	4-5
# ::node	0.0	personal	3-4
# ::node	0.0.0	other	12-13
# ::node	0.0.0.0	core	7-8
# ::root	0	liberty
# ::edge	core	op1	other	0.0.0.0	0.0.0	
# ::edge	liberty	mod	personal	0	0.0	
# ::edge	other	poss	personal	0.0.0	0.0	
(l / liberty 
      :mod (p / personal 
            :poss-of (o / other 
                  :op-of (c / core))))

# ::snt its name derives from the blue glazed tiles lining the interior walls
# ::tok its name derives from the blue glazed tiles lining the interior walls
# ::alignments 11-12|0.0 10-11|0.0.0 8-9|0 5-6|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:31.425
# ::node	0	line-01	8-9
# ::node	0.0	wall	11-12
# ::node	0.0.0	interior	10-11
# ::node	0.0.0.0	blue	5-6
# ::root	0	line-01
# ::edge	blue	op1	interior	0.0.0.0	0.0.0	
# ::edge	line-01	ARG1	wall	0	0.0	
# ::edge	wall	topic	interior	0.0	0.0.0	
(l / line-01 
      :ARG1 (w / wall 
            :topic (i / interior 
                  :op-of (b / blue))))

# ::snt something is instrumentally valuable to the extent that it derives its value from the value of its consequences or from the value of the consequences it is likely to have or from the value of the consequences it can be used to produce
# ::tok something is instrumentally valuable to the extent that it derives its value from the value of its consequences or from the value of the consequences it is likely to have or from the value of the consequences it can be used to produce
# ::alignments 42-43|0.0.1 40-41|0.0 38-39|0 37-38|0.0.1.0 36-37|0.0.0 33-34|0.0.0.0 30-31|0.0.0.0.0 27-28|0.0.1.1.2 25-26|0.0.1.1.2.0 24-25|0.0.1.1.0 21-22|0.0.1.1 18-19|0.0.1.1.1 17-18|0.0.1.1.1.1.0 14-15|0.0.1.1.1.1 11-12|0.0.1.1.1.0 8-9|0.0.1.1.1.0.0 6-7|0.0.0.0.0.0 3-4|0.0.0.0.0.0.0 0-1|0.0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:31.774
# ::node	0	possible	38-39
# ::node	0.0	use-01	40-41
# ::node	0.0.0	consequence	36-37
# ::node	0.0.0.0	value-01	33-34
# ::node	0.0.0.0.0	or	30-31
# ::node	0.0.0.0.0.0	extent	6-7
# ::node	0.0.0.0.0.0.0	value-01	3-4
# ::node	0.0.0.0.0.0.0.0	something	0-1
# ::node	0.0.1	produce-01	42-43
# ::node	0.0.1.0	it	37-38
# ::node	0.0.1.1	value-01	21-22
# ::node	0.0.1.1.0	consequence	24-25
# ::node	0.0.1.1.1	or	18-19
# ::node	0.0.1.1.1.0	value-01	11-12
# ::node	0.0.1.1.1.0.0	it	8-9
# ::node	0.0.1.1.1.1	value-01	14-15
# ::node	0.0.1.1.1.1.0	consequence	17-18
# ::node	0.0.1.1.2	likely	27-28
# ::node	0.0.1.1.2.0	it	25-26
# ::root	0	possible
(p2 / possible 
      :mod-of (u / use-01 
            :ARG1 (c / consequence 
                  :ARG1-of (v / value-01 
                        :op-of (o / or 
                              :op1 (e / extent 
                                    :ARG2-of (v5 / value-01 
                                          :ARG1 (s / something)))))) 
            :ARG2 (p / produce-01 
                  :ARG0 (i / it) 
                  :ARG1 (v2 / value-01 
                        :ARG1 (c2 / consequence) 
                        :op-of (o2 / or 
                              :ARG1-of (v4 / value-01 
                                    :ARG0 (i3 / it)) 
                              :op1 (v3 / value-01 
                                    :ARG1 (c3 / consequence))) 
                        :op-of (l / likely 
                              :domain (i2 / it))))))

# ::snt for the truth is that none of these breaches overshadows the effect of the continuing sanction deriving from the us congress and enacted by among others the us banks
# ::tok for the truth is that none of these breaches overshadows the effect of the continuing sanction deriving from the us congress and enacted by among others the us banks
# ::alignments 28-29|0.2.1 25-26|0.2.0.0 24-25|0.2.0 22-23|0.2 21-22|0 20-21|0.1.0.0+0.1.0+0.1 15-16|0.0 14-15|0.0.2 11-12|0.0.1 8-9|0.0.0.0 5-6|0.0.0 2-3|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:31.892
# ::node	0	and	21-22
# ::node	0.0	sanction-02	15-16
# ::node	0.0.0	none	5-6
# ::node	0.0.0.0	breach-01	8-9
# ::node	0.0.1	effect-01	11-12
# ::node	0.0.1.0	truth	2-3
# ::node	0.0.2	continue-01	14-15
# ::node	0.1	government-organization	20-21
# ::node	0.1.0	name	20-21
# ::node	0.1.0.0	"Congress"	20-21
# ::node	0.2	enact-01	22-23
# ::node	0.2.0	among	24-25
# ::node	0.2.0.0	other	25-26
# ::node	0.2.1	bank	28-29
# ::root	0	and
# ::edge	among	op1	other	0.2.0	0.2.0.0	
# ::edge	and	op1	government-organization	0	0.1	
# ::edge	and	op2	enact-01	0	0.2	
# ::edge	breach-01	quant	none	0.0.0.0	0.0.0	
# ::edge	continue-01	ARG1	sanction-02	0.0.2	0.0	
# ::edge	effect-01	ARG0	truth	0.0.1	0.0.1.0	
# ::edge	effect-01	ARG1	sanction-02	0.0.1	0.0	
# ::edge	enact-01	ARG0	among	0.2	0.2.0	
# ::edge	enact-01	ARG1	bank	0.2	0.2.1	
# ::edge	government-organization	name	name	0.1	0.1.0	
# ::edge	name	op1	"Congress"	0.1.0	0.1.0.0	
# ::edge	sanction-02	ARG0	none	0.0	0.0.0	
# ::edge	sanction-02	ARG1	and	0.0	0	
(a2 / and 
      :ARG1-of (s / sanction-02 
            :ARG0 (n2 / none 
                  :quant-of (b2 / breach-01)) 
            :ARG1-of (e2 / effect-01 
                  :ARG0 (t / truth)) 
            :ARG1-of (c / continue-01)) 
      :op1 (g / government-organization 
            :name (n / name 
                  :op1 "Congress")) 
      :op2 (e / enact-01 
            :ARG0 (a / among 
                  :op1 (o / other)) 
            :ARG1 (b / bank)))

# ::snt second no respectable economist derives a trend by comparing a trough year 1981 with a peak 1988 sensible figures can only be obtained by contrasting peakwithpeak or troughwithtrough
# ::tok second no respectable economist derives a trend by comparing a trough year 1981 with a peak 1988 sensible figures can only be obtained by contrasting peakwithpeak or troughwithtrough
# ::alignments 26-27|0.0.1 22-23|0.0 20-21|0.0.3 19-20|0 18-19|0.0.2 17-18|0.0.2.1 16-17|0.0.2.3.0+0.0.2.3 15-16|0.0.2.0 12-13|0.0.2.2.0+0.0.2.2 11-12|0.0.0.0.0.0 8-9|0.0.0.0.0 6-7|0.0.0.0 2-3|0.0.1.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:32.185
# ::node	0	possible	19-20
# ::node	0.0	obtain-01	22-23
# ::node	0.0.0	-	1-2
# ::node	0.0.0.0	trend-01	6-7
# ::node	0.0.0.0.0	compare-01	8-9
# ::node	0.0.0.0.0.0	year	11-12
# ::node	0.0.1	or	26-27
# ::node	0.0.1.0	respect-01	2-3
# ::node	0.0.2	figure	18-19
# ::node	0.0.2.0	peak-01	15-16
# ::node	0.0.2.1	sensible	17-18
# ::node	0.0.2.2	date-entity	12-13
# ::node	0.0.2.2.0	1981	12-13
# ::node	0.0.2.3	date-entity	16-17
# ::node	0.0.2.3.0	1988	16-17
# ::node	0.0.3	only	20-21
# ::root	0	possible
# ::edge	compare-01	ARG1	year	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	date-entity	year	1981	0.0.2.2	0.0.2.2.0	
# ::edge	date-entity	year	1988	0.0.2.3	0.0.2.3.0	
# ::edge	figure	age	peak-01	0.0.2	0.0.2.0	
# ::edge	figure	mod	sensible	0.0.2	0.0.2.1	
# ::edge	figure	quant	date-entity	0.0.2	0.0.2.2	
# ::edge	figure	time	date-entity	0.0.2	0.0.2.3	
# ::edge	obtain-01	ARG0	-	0.0	0.0.0	
# ::edge	obtain-01	ARG1	or	0.0	0.0.1	
# ::edge	obtain-01	ARG2	figure	0.0	0.0.2	
# ::edge	obtain-01	mod	only	0.0	0.0.3	
# ::edge	possible	domain	obtain-01	0	0.0	
# ::edge	respect-01	ARG1	or	0.0.1.0	0.0.1	
# ::edge	trend-01	ARG0	-	0.0.0.0	0.0.0	
# ::edge	trend-01	ARG1	compare-01	0.0.0.0	0.0.0.0.0	
(p / possible 
      :domain (o2 / obtain-01 
            :ARG0 (- / - 
                  :ARG0-of (t / trend-01 
                        :ARG1 (c / compare-01 
                              :ARG1 (y / year)))) 
            :ARG1 (o / or 
                  :ARG1-of (r / respect-01)) 
            :ARG2 (f / figure 
                  :age (p2 / peak-01) 
                  :mod (s / sensible) 
                  :quant (d2 / date-entity 
                        :year 1981) 
                  :time (d / date-entity 
                        :year 1988)) 
            :mod (o3 / only)))

# ::snt the lava itself must have been originated deep down in the moon probably  in the lunar mantle and it seems as though the scale of the impact was so  great that in effect a hole was blasted through the crust enabling magma  derived from the mantle to well out on the surface
# ::tok the lava itself must have been originated deep down in the moon probably in the lunar mantle and it seems as though the scale of the impact was so great that in effect a hole was blasted through the crust enabling magma derived from the mantle to well out on the surface
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:32.187
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt  addon services derived as a byproduct from a basic customer service such as a telephone billing system that gives a customer the option of receiving her bill summarized in userspecified ways dash
# ::tok addon services derived as a byproduct from a basic customer service such as a telephone billing system that gives a customer the option of receiving her bill summarized in userspecified ways dash
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:32.191
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the term software is derived of course from the fact that a program is merely information an abstraction rather than something concrete and hard like the computer itself
# ::tok the term software is derived of course from the fact that a program is merely information an abstraction rather than something concrete and hard like the computer itself
# ::alignments 26-27|0.3.0.0.0 23-24|0.2 22-23|0 21-22|0.1 20-21|0.0 15-16|0.0.0.0 14-15|0.0.0.0.0 12-13|0.0.0 9-10|0.3.0.0.1 4-5|0.3.0.0 2-3|0.3.0 1-2|0.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:32.470
# ::node	0	and	22-23
# ::node	0.0	something	20-21
# ::node	0.0.0	program	12-13
# ::node	0.0.0.0	information	15-16
# ::node	0.0.0.0.0	mere	14-15
# ::node	0.1	concrete	21-22
# ::node	0.2	hard	23-24
# ::node	0.3	term	1-2
# ::node	0.3.0	software	2-3
# ::node	0.3.0.0	derive-01	4-5
# ::node	0.3.0.0.0	computer	26-27
# ::node	0.3.0.0.1	fact	9-10
# ::root	0	and
# ::edge	and	op1	something	0	0.0	
# ::edge	and	op2	concrete	0	0.1	
# ::edge	and	op3	hard	0	0.2	
# ::edge	derive-01	ARG0	computer	0.3.0.0	0.3.0.0.0	
# ::edge	derive-01	ARG1	software	0.3.0.0	0.3.0	
# ::edge	derive-01	ARG2	fact	0.3.0.0	0.3.0.0.1	
# ::edge	information	domain	program	0.0.0.0	0.0.0	
# ::edge	information	mod	mere	0.0.0.0	0.0.0.0.0	
# ::edge	software	mod	term	0.3.0	0.3	
# ::edge	something	domain	program	0.0	0.0.0	
# ::edge	term	poss	and	0.3	0	
(a / and 
      :op1 (s / something 
            :domain (p / program 
                  :domain-of (i / information 
                        :mod (m / mere)))) 
      :op2 (c2 / concrete) 
      :op3 (h / hard) 
      :poss-of (t / term 
            :mod-of (s2 / software 
                  :ARG1-of (d / derive-01 
                        :ARG0 (c / computer) 
                        :ARG2 (f / fact)))))

# ::snt motor how fast how good data has been derived 3070mph indicates overtaking ability and is measured through the gears 3050mph is recorded in top gear or fourth in the case of fivespeed manual gearbox models 5070 mph is recorded in top
# ::tok motor how fast how good data has been derived 3070mph indicates overtaking ability and is measured through the gears 3050mph is recorded in top gear or fourth in the case of fivespeed manual gearbox models 5070 mph is recorded in top
# ::alignments 40-41|0.1.1.1.0 38-39|0.1.1.1 35-36|0.1.1.0.0+0.1.1.0 34-35|0.1.0.1.1.0.0 32-33|0.1.0.1.1.0.0.0 29-30|0.1.0.1.1.0 26-27|0.1.0.1.1 25-26|0.1.0.1.0 24-25|0.1.0.1.0.1 23-24|0.1.0.1.0.1.0 21-22|0.1.0.1 15-16|0.1.1 13-14|0.1 12-13|0.0.1 11-12|0.0 10-11|0 8-9|0.1.0 5-6|0.1.0.0 4-5|0.1.0.0.0 2-3|0.1.0.1.0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:34.107
# ::node	0	indicate-01	10-11
# ::node	0.0	overtake-01	11-12
# ::node	0.0.0	motorcycle	0-1
# ::node	0.0.1	ability	12-13
# ::node	0.1	and	13-14
# ::node	0.1.0	derive-01	8-9
# ::node	0.1.0.0	data	5-6
# ::node	0.1.0.0.0	good	4-5
# ::node	0.1.0.1	record-01	21-22
# ::node	0.1.0.1.0	or	25-26
# ::node	0.1.0.1.0.0	fast	2-3
# ::node	0.1.0.1.0.1	gear	24-25
# ::node	0.1.0.1.0.1.0	top	23-24
# ::node	0.1.0.1.1	fourth	26-27
# ::node	0.1.0.1.1.0	case	29-30
# ::node	0.1.0.1.1.0.0	model	34-35
# ::node	0.1.0.1.1.0.0.0	manual	32-33
# ::node	0.1.1	measure-01	15-16
# ::node	0.1.1.0	date-entity	35-36
# ::node	0.1.1.0.0	5070	35-36
# ::node	0.1.1.1	record-01	38-39
# ::node	0.1.1.1.0	top	40-41
# ::root	0	indicate-01
# ::edge	and	op1	indicate-01	0.1	0	
# ::edge	and	op2	measure-01	0.1	0.1.1	
# ::edge	case	topic	model	0.1.0.1.1.0	0.1.0.1.1.0.0	
# ::edge	data	mod	good	0.1.0.0	0.1.0.0.0	
# ::edge	date-entity	year	5070	0.1.1.0	0.1.1.0.0	
# ::edge	derive-01	ARG1	data	0.1.0	0.1.0.0	
# ::edge	derive-01	ARG4	and	0.1.0	0.1	
# ::edge	fourth	compared-to	case	0.1.0.1.1	0.1.0.1.1.0	
# ::edge	gear	mod	top	0.1.0.1.0.1	0.1.0.1.0.1.0	
# ::edge	indicate-01	ARG1	overtake-01	0	0.0	
# ::edge	measure-01	ARG1	date-entity	0.1.1	0.1.1.0	
# ::edge	model	mod	manual	0.1.0.1.1.0.0	0.1.0.1.1.0.0.0	
# ::edge	or	op1	fast	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	or	op2	gear	0.1.0.1.0	0.1.0.1.0.1	
# ::edge	overtake-01	ARG0	motorcycle	0.0	0.0.0	
# ::edge	overtake-01	ARG1	ability	0.0	0.0.1	
# ::edge	record-01	ARG0	or	0.1.0.1	0.1.0.1.0	
# ::edge	record-01	ARG0	top	0.1.1.1	0.1.1.1.0	
# ::edge	record-01	ARG1	fourth	0.1.0.1	0.1.0.1.1	
# ::edge	record-01	ARG1	measure-01	0.1.1.1	0.1.1	
# ::edge	record-01	purpose	derive-01	0.1.0.1	0.1.0	
(i / indicate-01 
      :ARG1 (o2 / overtake-01 
            :ARG0 (m4 / motorcycle) 
            :ARG1 (a2 / ability)) 
      :op-of (a / and 
            :ARG4-of (d2 / derive-01 
                  :ARG1 (d3 / data 
                        :mod (g2 / good)) 
                  :purpose-of (r2 / record-01 
                        :ARG0 (o / or 
                              :op1 (f2 / fast) 
                              :op2 (g / gear 
                                    :mod (t2 / top))) 
                        :ARG1 (f / fourth 
                              :compared-to (c / case 
                                    :topic (m / model 
                                          :mod (m2 / manual)))))) 
            :op1 (m3 / measure-01 
                  :ARG1 (d / date-entity 
                        :year 5070) 
                  :ARG1-of (r / record-01 
                        :ARG0 (t / top)))))

# ::snt it is a capacity whose value derives from its exercise
# ::tok it is a capacity whose value derives from its exercise
# ::alignments 9-10|0.0.0 5-6|0.0 3-4|0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:34.120
# ::node	0	capacity	3-4
# ::node	0.0	value-01	5-6
# ::node	0.0.0	exercise-02	9-10
# ::node	0.1	it	0-1
# ::root	0	capacity
# ::edge	capacity	domain	it	0	0.1	
# ::edge	exercise-02	ARG2	value-01	0.0.0	0.0	
# ::edge	value-01	ARG1	capacity	0.0	0	
(c / capacity 
      :ARG1-of (v / value-01 
            :ARG2-of (e / exercise-02)) 
      :domain (i / it))

# ::snt   the information derives its value from these altered decisions by avoiding a 1 million loss for 90 of the products
# ::tok the information derives its value from these altered decisions by avoiding a 1 million loss for 90 of the products
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:34.121
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt aquarius jan 21feb 19 how long is it since you popped round or phoned up your parents brothers sisters or any other member of your clan  make contact today and youll derive deep satisfaction from being amongst those whove known and loved you since you were knee high
# ::tok aquarius jan 21feb 19 how long is it since you popped round or phoned up your parents brothers sisters or any other member of your clan make contact today and youll derive deep satisfaction from being amongst those whove known and loved you since you were knee high
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:34.123
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt all these are derived from the common culture from the shared social forms and though they receive the individual stamp of each person their foundation in shared social forms is continuing and lasting
# ::tok all these are derived from the common culture from the shared social forms and though they receive the individual stamp of each person their foundation in shared social forms is continuing and lasting
# ::alignments 32-33|0.1.0.1 31-32|0.1.0 30-31|0.1 28-29|0.1.0.1.0 27-28|0.1.0.1.0.1 26-27|0.1.0.1.0.0 24-25|0.1.0.1.1 22-23|0.1.0.0.1.0 21-22|0.1.0.0.1.0.1 19-20|0.1.0.0.1 18-19|0.1.0.0.1.1 16-17|0.1.0.0 15-16|0.1.0.0.0 13-14|0 12-13|0.1.0.0.1.0.0.0 11-12|0.1.0.0.1.0.0.0.0 10-11|0.1.0.0.1.0.0 7-8|0.0.0 6-7|0.0.0.0 3-4|0.0 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:34.538
# ::node	0	and	13-14
# ::node	0.0	derive-01	3-4
# ::node	0.0.0	culture	7-8
# ::node	0.0.0.0	common	6-7
# ::node	0.0.1	all	0-1
# ::node	0.1	continue-01	30-31
# ::node	0.1.0	and	31-32
# ::node	0.1.0.0	receive-01	16-17
# ::node	0.1.0.0.0	they	15-16
# ::node	0.1.0.0.1	stamp-05	19-20
# ::node	0.1.0.0.1.0	person	22-23
# ::node	0.1.0.0.1.0.0	share-01	10-11
# ::node	0.1.0.0.1.0.0.0	form	12-13
# ::node	0.1.0.0.1.0.0.0.0	society	11-12
# ::node	0.1.0.0.1.0.1	each	21-22
# ::node	0.1.0.0.1.1	individual	18-19
# ::node	0.1.0.1	last-01	32-33
# ::node	0.1.0.1.0	form	28-29
# ::node	0.1.0.1.0.0	share-01	26-27
# ::node	0.1.0.1.0.1	society	27-28
# ::node	0.1.0.1.1	foundation	24-25
# ::root	0	and
# ::edge	and	op1	derive-01	0	0.0	
# ::edge	and	op1	receive-01	0.1.0	0.1.0.0	
# ::edge	and	op2	continue-01	0	0.1	
# ::edge	and	op2	continue-01	0.1.0	0.1	
# ::edge	and	op3	last-01	0.1.0	0.1.0.1	
# ::edge	culture	mod	common	0.0.0	0.0.0.0	
# ::edge	derive-01	ARG0	culture	0.0	0.0.0	
# ::edge	derive-01	ARG1	all	0.0	0.0.1	
# ::edge	form	mod	society	0.1.0.0.1.0.0.0	0.1.0.0.1.0.0.0.0	
# ::edge	form	mod	society	0.1.0.1.0	0.1.0.1.0.1	
# ::edge	last-01	ARG0	form	0.1.0.1	0.1.0.1.0	
# ::edge	last-01	ARG1	foundation	0.1.0.1	0.1.0.1.1	
# ::edge	person	mod	each	0.1.0.0.1.0	0.1.0.0.1.0.1	
# ::edge	receive-01	ARG0	they	0.1.0.0	0.1.0.0.0	
# ::edge	receive-01	ARG1	stamp-05	0.1.0.0	0.1.0.0.1	
# ::edge	share-01	ARG1	form	0.1.0.0.1.0.0	0.1.0.0.1.0.0.0	
# ::edge	share-01	ARG1	form	0.1.0.1.0.0	0.1.0.1.0	
# ::edge	share-01	ARG2	person	0.1.0.0.1.0.0	0.1.0.0.1.0	
# ::edge	stamp-05	ARG1	person	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	stamp-05	mod	individual	0.1.0.0.1	0.1.0.0.1.1	
(a2 / and 
      :op1 (d / derive-01 
            :ARG0 (c2 / culture 
                  :mod (c3 / common)) 
            :ARG1 (a3 / all)) 
      :op2 (c / continue-01 
            :op-of (a / and 
                  :op1 (r / receive-01 
                        :ARG0 (t / they) 
                        :ARG1 (s3 / stamp-05 
                              :ARG1 (p / person 
                                    :ARG2-of (s5 / share-01 
                                          :ARG1 (f3 / form 
                                                :mod (s4 / society))) 
                                    :mod (e / each)) 
                              :mod (i / individual))) 
                  :op2 (l / last-01 
                        :ARG0 (f / form 
                              :ARG1-of (s2 / share-01) 
                              :mod (s / society)) 
                        :ARG1 (f2 / foundation)))))

# ::snt from the sixth exercise given by paul klee at the bauhaus 3 july 1922 from paul klee notebooks volume 1 the thinking eye   we are so made that we can derive intense enjoyment only from a contrast and very little from a state of things
# ::tok from the sixth exercise given by paul klee at the bauhaus 3 july 1922 from paul klee notebooks volume 1 the thinking eye we are so made that we can derive intense enjoyment only from a contrast and very little from a state of things
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:34.541
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt it merely indicates that its value does not derive from its contribution to something else
# ::tok it merely indicates that its value does not derive from its contribution to something else
# ::alignments 14-15|0.1.1.0.0 13-14|0.1.1.0 11-12|0.1.1 8-9|0.1 5-6|0.1.0 2-3|0 1-2|0.2 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:34.590
# ::node	0	indicate-01	2-3
# ::node	0.0	it	0-1
# ::node	0.1	derive-01	8-9
# ::node	0.1.0	value-01	5-6
# ::node	0.1.1	contribute-01	11-12
# ::node	0.1.1.0	something	13-14
# ::node	0.1.1.0.0	else	14-15
# ::node	0.2	mere	1-2
# ::root	0	indicate-01
# ::edge	contribute-01	ARG1	something	0.1.1	0.1.1.0	
# ::edge	derive-01	ARG1	value-01	0.1	0.1.0	
# ::edge	derive-01	ARG2	contribute-01	0.1	0.1.1	
# ::edge	indicate-01	ARG0	it	0	0.0	
# ::edge	indicate-01	ARG1	derive-01	0	0.1	
# ::edge	indicate-01	mod	mere	0	0.2	
# ::edge	something	mod	else	0.1.1.0	0.1.1.0.0	
(i / indicate-01 
      :ARG0 (i2 / it) 
      :ARG1 (d / derive-01 
            :ARG1 (v / value-01) 
            :ARG2 (c / contribute-01 
                  :ARG1 (s / something 
                        :mod (e / else)))) 
      :mod (m / mere))

# ::snt especially benefits from public funds are intended to fill needs not to enrich the beneficiary all the more so when the defendant would have contributed to the fund as much as the plaintiff and therefore cannot be accused of deriving an unfair advantage from it
# ::tok especially benefits from public funds are intended to fill needs not to enrich the beneficiary all the more so when the defendant would have contributed to the fund as much as the plaintiff and therefore cannot be accused of deriving an unfair advantage from it
# ::alignments 44-45|0.1.1.1 42-43|0.1.1 41-42|0.1.1.0.0+0.1.1.0 37-38|0.1 33-34|0 29-30|0.0.1 27-28|0.0 24-25|0.0.0 21-22|0.0.0.0 18-19|0.1.0.1.1.0 15-16|0.1.0.1.2.0 12-13|0.1.0.1.2 9-10|0.1.0.1.0 8-9|0.1.0.1 6-7|0.1.0.1.1 4-5|0.1.0.0 3-4|0.1.0.0.0 1-2|0.1.0 0-1|0.1.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:35.484
# ::node	0	and	33-34
# ::node	0.0	fund-01	27-28
# ::node	0.0.0	contribute-01	24-25
# ::node	0.0.0.0	defendant	21-22
# ::node	0.0.1	much	29-30
# ::node	0.1	accuse-01	37-38
# ::node	0.1.0	benefit-01	1-2
# ::node	0.1.0.0	fund	4-5
# ::node	0.1.0.0.0	public	3-4
# ::node	0.1.0.1	fill-02	8-9
# ::node	0.1.0.1.0	need-01	9-10
# ::node	0.1.0.1.1	intend-01	6-7
# ::node	0.1.0.1.1.0	so	18-19
# ::node	0.1.0.1.2	enrich-01	12-13
# ::node	0.1.0.1.2.0	all	15-16
# ::node	0.1.0.2	especially	0-1
# ::node	0.1.1	advantage	42-43
# ::node	0.1.1.0	fair	41-42
# ::node	0.1.1.0.0	-	41-42
# ::node	0.1.1.1	it	44-45
# ::root	0	and
# ::edge	accuse-01	ARG1	benefit-01	0.1	0.1.0	
# ::edge	accuse-01	ARG2	advantage	0.1	0.1.1	
# ::edge	advantage	mod	fair	0.1.1	0.1.1.0	
# ::edge	advantage	poss	it	0.1.1	0.1.1.1	
# ::edge	and	op1	fund-01	0	0.0	
# ::edge	and	op2	accuse-01	0	0.1	
# ::edge	benefit-01	ARG0	fund	0.1.0	0.1.0.0	
# ::edge	benefit-01	mod	especially	0.1.0	0.1.0.2	
# ::edge	contribute-01	ARG0	defendant	0.0.0	0.0.0.0	
# ::edge	contribute-01	ARG2	fund-01	0.0.0	0.0	
# ::edge	enrich-01	ARG1	all	0.1.0.1.2	0.1.0.1.2.0	
# ::edge	fair	polarity	-	0.1.1.0	0.1.1.0.0	
# ::edge	fill-02	ARG0	benefit-01	0.1.0.1	0.1.0	
# ::edge	fill-02	ARG1	need-01	0.1.0.1	0.1.0.1.0	
# ::edge	fill-02	purpose	enrich-01	0.1.0.1	0.1.0.1.2	
# ::edge	fund	mod	public	0.1.0.0	0.1.0.0.0	
# ::edge	fund-01	ARG3	much	0.0	0.0.1	
# ::edge	intend-01	ARG0	so	0.1.0.1.1	0.1.0.1.1.0	
# ::edge	intend-01	ARG1	fill-02	0.1.0.1.1	0.1.0.1	
(a3 / and 
      :op1 (f2 / fund-01 
            :ARG2-of (c / contribute-01 
                  :ARG0 (d / defendant)) 
            :ARG3 (m / much)) 
      :op2 (a2 / accuse-01 
            :ARG1 (b / benefit-01 
                  :ARG0 (f4 / fund 
                        :mod (p / public)) 
                  :ARG0-of (f3 / fill-02 
                        :ARG1 (n / need-01) 
                        :ARG1-of (i2 / intend-01 
                              :ARG0 (s / so)) 
                        :purpose (e / enrich-01 
                              :ARG1 (a4 / all))) 
                  :mod (e2 / especially)) 
            :ARG2 (a / advantage 
                  :mod (f / fair 
                        :polarity -) 
                  :poss (i / it))))

# ::snt labour he said believed the most important advance in patient satisfaction would derive from securing further reductions in lists and would seek to reduce the capitation element of pay to below 50 per cent
# ::tok labour he said believed the most important advance in patient satisfaction would derive from securing further reductions in lists and would seek to reduce the capitation element of pay to below 50 per cent
# ::alignments 33-34|0.1.0.0.0+0.1.0.0 31-32|0.1.0.1.0.0 30-31|0.1.0.3.0.0.0.0 28-29|0.1.0.3.0.0.0 26-27|0.1.0.3.0.0 23-24|0.1.0.3.0 21-22|0.1.0.3.0.1 19-20|0.1.0.3 18-19|0.1.0.2.0.0 16-17|0.1.0.2.0 15-16|0.1.0.2.0.1 14-15|0.1.0.2 12-13|0.1.0 10-11|0.1.0.1.0 9-10|0.1.0.1.0.1.0+0.1.0.1.0.1 7-8|0.1.0.1 6-7|0.1.0.1.1 5-6|0.1.0.1.1.0 3-4|0.1 2-3|0 1-2|0.0 0-1|0.1.0.3.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:36.746
# ::node	0	say-01	2-3
# ::node	0.0	he	1-2
# ::node	0.1	believe-01	3-4
# ::node	0.1.0	derive-01	12-13
# ::node	0.1.0.0	monetary-quantity	33-34
# ::node	0.1.0.0.0	cent	33-34
# ::node	0.1.0.1	advance-01	7-8
# ::node	0.1.0.1.0	satisfy-01	10-11
# ::node	0.1.0.1.0.0	50	31-32
# ::node	0.1.0.1.0.1	have-rel-role-91	9-10
# ::node	0.1.0.1.0.1.0	patient	9-10
# ::node	0.1.0.1.1	important	6-7
# ::node	0.1.0.1.1.0	most	5-6
# ::node	0.1.0.2	secure-02	14-15
# ::node	0.1.0.2.0	reduce-01	16-17
# ::node	0.1.0.2.0.0	list-01	18-19
# ::node	0.1.0.2.0.1	further	15-16
# ::node	0.1.0.3	and	19-20
# ::node	0.1.0.3.0	reduce-01	23-24
# ::node	0.1.0.3.0.0	element	26-27
# ::node	0.1.0.3.0.0.0	pay-01	28-29
# ::node	0.1.0.3.0.0.0.0	below	30-31
# ::node	0.1.0.3.0.1	seek-01	21-22
# ::node	0.1.0.3.0.1.0	labour	0-1
# ::root	0	say-01
# ::edge	advance-01	ARG1	satisfy-01	0.1.0.1	0.1.0.1.0	
# ::edge	advance-01	mod	important	0.1.0.1	0.1.0.1.1	
# ::edge	and	op1	derive-01	0.1.0.3	0.1.0	
# ::edge	and	op2	reduce-01	0.1.0.3	0.1.0.3.0	
# ::edge	believe-01	ARG1	derive-01	0.1	0.1.0	
# ::edge	derive-01	ARG0	monetary-quantity	0.1.0	0.1.0.0	
# ::edge	derive-01	ARG1	advance-01	0.1.0	0.1.0.1	
# ::edge	derive-01	ARG2	secure-02	0.1.0	0.1.0.2	
# ::edge	have-rel-role-91	ARG1	satisfy-01	0.1.0.1.0.1	0.1.0.1.0	
# ::edge	have-rel-role-91	ARG2	patient	0.1.0.1.0.1	0.1.0.1.0.1.0	
# ::edge	important	degree	most	0.1.0.1.1	0.1.0.1.1.0	
# ::edge	list-01	ARG1	reduce-01	0.1.0.2.0.0	0.1.0.2.0	
# ::edge	monetary-quantity	unit	cent	0.1.0.0	0.1.0.0.0	
# ::edge	pay-01	ARG1	below	0.1.0.3.0.0.0	0.1.0.3.0.0.0.0	
# ::edge	pay-01	ARG2	element	0.1.0.3.0.0.0	0.1.0.3.0.0	
# ::edge	reduce-01	ARG1	element	0.1.0.3.0	0.1.0.3.0.0	
# ::edge	reduce-01	mod	further	0.1.0.2.0	0.1.0.2.0.1	
# ::edge	satisfy-01	ARG1	50	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	believe-01	0	0.1	
# ::edge	secure-02	ARG1	reduce-01	0.1.0.2	0.1.0.2.0	
# ::edge	seek-01	ARG0	labour	0.1.0.3.0.1	0.1.0.3.0.1.0	
# ::edge	seek-01	ARG1	reduce-01	0.1.0.3.0.1	0.1.0.3.0	
(s4 / say-01 
      :ARG0 (h2 / he) 
      :ARG1 (b2 / believe-01 
            :ARG1 (d / derive-01 
                  :ARG0 (m / monetary-quantity 
                        :unit (c / cent)) 
                  :ARG1 (a2 / advance-01 
                        :ARG1 (s3 / satisfy-01 
                              :ARG1 50 
                              :ARG1-of (h / have-rel-role-91 
                                    :ARG2 (p2 / patient))) 
                        :mod (i / important 
                              :degree (m2 / most))) 
                  :ARG2 (s2 / secure-02 
                        :ARG1 (r2 / reduce-01 
                              :ARG1-of (l / list-01) 
                              :mod (f / further))) 
                  :op-of (a / and 
                        :op1 (r / reduce-01 
                              :ARG1 (e / element 
                                    :ARG2-of (p / pay-01 
                                          :ARG1 (b / below))) 
                              :ARG1-of (s / seek-01 
                                    :ARG0 (l2 / labour)))))))

# ::snt since naturalism conceives of human impulses as deriving exclusively from sensation and the flesh mankind is closed off from any suprasensual experience from the realm of dream and the spirit
# ::tok since naturalism conceives of human impulses as deriving exclusively from sensation and the flesh mankind is closed off from any suprasensual experience from the realm of dream and the spirit
# ::alignments 29-30|0.0.0.2 27-28|0.0.0 26-27|0.0.0.1 24-25|0.0.0.0 21-22|0.0 19-20|0.0.2 17-18|0.0.1.1 16-17|0.0.1 14-15|0.2 13-14|0.2.0 11-12|0 10-11|0.1 8-9|0.0.1.0 5-6|0.0.0.1.0 4-5|0.0.0.1.0.0 0-1|0.0.1.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:36.879
# ::node	0	and	11-12
# ::node	0.0	experience-01	21-22
# ::node	0.0.0	and	27-28
# ::node	0.0.0.0	realm	24-25
# ::node	0.0.0.1	dream-01	26-27
# ::node	0.0.0.1.0	impulse	5-6
# ::node	0.0.0.1.0.0	human	4-5
# ::node	0.0.0.2	spirit	29-30
# ::node	0.0.1	close-01	16-17
# ::node	0.0.1.0	exclusive	8-9
# ::node	0.0.1.1	off	17-18
# ::node	0.0.1.2	since	0-1
# ::node	0.0.2	any	19-20
# ::node	0.1	sensation	10-11
# ::node	0.2	mankind	14-15
# ::node	0.2.0	flesh	13-14
# ::root	0	and
# ::edge	and	op1	realm	0.0.0	0.0.0.0	
# ::edge	and	op1	sensation	0	0.1	
# ::edge	and	op2	dream-01	0.0.0	0.0.0.1	
# ::edge	and	op2	mankind	0	0.2	
# ::edge	and	op3	spirit	0.0.0	0.0.0.2	
# ::edge	close-01	ARG1	exclusive	0.0.1	0.0.1.0	
# ::edge	close-01	ARG2	experience-01	0.0.1	0.0	
# ::edge	close-01	direction	off	0.0.1	0.0.1.1	
# ::edge	dream-01	ARG1	impulse	0.0.0.1	0.0.0.1.0	
# ::edge	experience-01	ARG0	and	0.0	0.0.0	
# ::edge	experience-01	ARG1	and	0.0	0	
# ::edge	experience-01	quant	any	0.0	0.0.2	
# ::edge	impulse	mod	human	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	mankind	mod	flesh	0.2	0.2.0	
# ::edge	since	op1	close-01	0.0.1.2	0.0.1	
(a3 / and 
      :ARG1-of (e / experience-01 
            :ARG0 (a / and 
                  :op1 (r / realm) 
                  :op2 (d / dream-01 
                        :ARG1 (i / impulse 
                              :mod (h / human))) 
                  :op3 (s / spirit)) 
            :ARG2-of (c / close-01 
                  :ARG1 (e2 / exclusive) 
                  :direction (o / off) 
                  :op-of (s3 / since)) 
            :quant (a2 / any)) 
      :op1 (s2 / sensation) 
      :op2 (m / mankind 
            :mod (f / flesh)))

# ::snt motor how fast how good data has been derived 3070mph indicates overtaking ability and is measured in yop gear or fourth in the case of fivespeed manual gearboxes 5070mph is recorded in top
# ::tok motor how fast how good data has been derived 3070mph indicates overtaking ability and is measured in yop gear or fourth in the case of fivespeed manual gearboxes 5070mph is recorded in top
# ::alignments 32-33|0.2.1.0 30-31|0.2.0.1 27-28|0.2.1.1.0 26-27|0.1 23-24|0.2.1.1.0.0 20-21|0.2.1.1.0.0.0 19-20|0.2.2.0 18-19|0.2.2 15-16|0 13-14|0.2 12-13|0.2.1.1.1 11-12|0.2.1.1 10-11|0.2.1 8-9|0.2.0 5-6|0.2.0.0 4-5|0.2.0.0.0 2-3|0.2.0.1.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:37.182
# ::node	0	measure-01	15-16
# ::node	0.0	motorcycle	0-1
# ::node	0.1	manual	26-27
# ::node	0.2	and	13-14
# ::node	0.2.0	derive-01	8-9
# ::node	0.2.0.0	data	5-6
# ::node	0.2.0.0.0	good	4-5
# ::node	0.2.0.1	record-01	30-31
# ::node	0.2.0.1.0	fast	2-3
# ::node	0.2.1	indicate-01	10-11
# ::node	0.2.1.0	top	32-33
# ::node	0.2.1.1	overtake-01	11-12
# ::node	0.2.1.1.0	gearbox	27-28
# ::node	0.2.1.1.0.0	case	23-24
# ::node	0.2.1.1.0.0.0	fourth	20-21
# ::node	0.2.1.1.1	ability	12-13
# ::node	0.2.2	gear	18-19
# ::node	0.2.2.0	or	19-20
# ::root	0	measure-01
# ::edge	and	op1	derive-01	0.2	0.2.0	
# ::edge	and	op2	indicate-01	0.2	0.2.1	
# ::edge	and	op3	measure-01	0.2	0	
# ::edge	and	op4	gear	0.2	0.2.2	
# ::edge	case	topic	gearbox	0.2.1.1.0.0	0.2.1.1.0	
# ::edge	data	mod	good	0.2.0.0	0.2.0.0.0	
# ::edge	derive-01	ARG1	data	0.2.0	0.2.0.0	
# ::edge	fourth	compared-to	case	0.2.1.1.0.0.0	0.2.1.1.0.0	
# ::edge	indicate-01	ARG0	top	0.2.1	0.2.1.0	
# ::edge	indicate-01	ARG1	overtake-01	0.2.1	0.2.1.1	
# ::edge	measure-01	ARG0	motorcycle	0	0.0	
# ::edge	measure-01	ARG1	manual	0	0.1	
# ::edge	or	op1	gear	0.2.2.0	0.2.2	
# ::edge	overtake-01	ARG0	gearbox	0.2.1.1	0.2.1.1.0	
# ::edge	overtake-01	ARG1	ability	0.2.1.1	0.2.1.1.1	
# ::edge	record-01	ARG0	fast	0.2.0.1	0.2.0.1.0	
# ::edge	record-01	ARG1	derive-01	0.2.0.1	0.2.0	
(m2 / measure-01 
      :ARG0 (m3 / motorcycle) 
      :ARG1 (m / manual) 
      :op-of (a / and 
            :op1 (d / derive-01 
                  :ARG1 (d2 / data 
                        :mod (g3 / good)) 
                  :ARG1-of (r / record-01 
                        :ARG0 (f2 / fast))) 
            :op2 (i / indicate-01 
                  :ARG0 (t / top) 
                  :ARG1 (o2 / overtake-01 
                        :ARG0 (g / gearbox 
                              :topic-of (c / case 
                                    :compared-to-of (f / fourth))) 
                        :ARG1 (a2 / ability))) 
            :op3 (g2 / gear 
                  :op-of (o / or))))

# ::snt these former dreadnoughts include the role once played by nuclear weapons the shortwar scenarios derived from such nuclear dependence and the strategies that call for the forward basing of troops which we have clung to since the signing of the north atlantic treaty 40 years ago
# ::tok these former dreadnoughts include the role once played by nuclear weapons the shortwar scenarios derived from such nuclear dependence and the strategies that call for the forward basing of troops which we have clung to since the signing of the north atlantic treaty 40 years ago
# ::alignments 44-45|0.2.2.5.0.0+0.2.2.5.0 43-44|0.2.2.5 42-43|0.1 40-41|0.1.0 37-38|0 35-36|0.3 31-32|0.0 29-30|0.2.0.0.0.0 26-27|0.2.0.0.0 21-22|0.2.2.4.0 19-20|0.2.2.4 18-19|0.2.2 17-18|0.2.2.2 16-17|0.2.2.1 14-15|0.2 13-14|0.2.1 10-11|0.2.2.2.0 9-10|0.2.2.2.0.0 6-7|0.2.2.0 5-6|0.2.0 3-4|0.2.0.0 1-2|0.2.2.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:37.818
# ::node	0	sign-02	37-38
# ::node	0.0	we	31-32
# ::node	0.1	treaty	42-43
# ::node	0.1.0	north	40-41
# ::node	0.2	derive-01	14-15
# ::node	0.2.0	role	5-6
# ::node	0.2.0.0	include-01	3-4
# ::node	0.2.0.0.0	forward	26-27
# ::node	0.2.0.0.0.0	troop	29-30
# ::node	0.2.1	scenario	13-14
# ::node	0.2.2	depend-01	18-19
# ::node	0.2.2.0	once	6-7
# ::node	0.2.2.1	such	16-17
# ::node	0.2.2.2	nucleus	17-18
# ::node	0.2.2.2.0	weapon	10-11
# ::node	0.2.2.2.0.0	nucleus	9-10
# ::node	0.2.2.3	former	1-2
# ::node	0.2.2.4	and	19-20
# ::node	0.2.2.4.0	strategy	21-22
# ::node	0.2.2.5	40	43-44
# ::node	0.2.2.5.0	temporal-quantity	44-45
# ::node	0.2.2.5.0.0	year	44-45
# ::node	0.3	since	35-36
# ::root	0	sign-02
# ::edge	40	op1	depend-01	0.2.2.5	0.2.2	
# ::edge	and	op1	depend-01	0.2.2.4	0.2.2	
# ::edge	and	op2	strategy	0.2.2.4	0.2.2.4.0	
# ::edge	depend-01	ARG1	once	0.2.2	0.2.2.0	
# ::edge	depend-01	mod	nucleus	0.2.2	0.2.2.2	
# ::edge	depend-01	mod	such	0.2.2	0.2.2.1	
# ::edge	derive-01	ARG0	role	0.2	0.2.0	
# ::edge	derive-01	ARG1	scenario	0.2	0.2.1	
# ::edge	derive-01	ARG2	depend-01	0.2	0.2.2	
# ::edge	former	op1	depend-01	0.2.2.3	0.2.2	
# ::edge	forward	compared-to	troop	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	include-01	ARG0	forward	0.2.0.0	0.2.0.0.0	
# ::edge	include-01	ARG1	role	0.2.0.0	0.2.0	
# ::edge	sign-02	ARG0	we	0	0.0	
# ::edge	sign-02	ARG1	treaty	0	0.1	
# ::edge	sign-02	ARG2	derive-01	0	0.2	
# ::edge	since	op1	sign-02	0.3	0	
# ::edge	temporal-quantity	quant	40	0.2.2.5.0	0.2.2.5	
# ::edge	temporal-quantity	unit	year	0.2.2.5.0	0.2.2.5.0.0	
# ::edge	treaty	mod	north	0.1	0.1.0	
# ::edge	weapon	mod	nucleus	0.2.2.2.0	0.2.2.2	
# ::edge	weapon	mod	nucleus	0.2.2.2.0	0.2.2.2.0.0	
(s / sign-02 
      :ARG0 (w / we) 
      :ARG1 (t2 / treaty 
            :mod (n / north)) 
      :ARG2 (d2 / derive-01 
            :ARG0 (r / role 
                  :ARG1-of (i / include-01 
                        :ARG0 (f / forward 
                              :compared-to (t3 / troop)))) 
            :ARG1 (s5 / scenario) 
            :ARG2 (d / depend-01 
                  :ARG1 (o / once) 
                  :mod (s4 / such) 
                  :mod (n2 / nucleus 
                        :mod-of (w2 / weapon 
                              :mod (n3 / nucleus))) 
                  :op-of (f2 / former) 
                  :op-of (a / and 
                        :op1 (s3 / strategy)) 
                  :op-of (4 / 40 
                        :quant-of (t / temporal-quantity 
                              :unit (y / year))))) 
      :op-of (s2 / since))

# ::snt there they found a room whose flamecoloured curtains were drawn shut and whose only form of light derived from large flickering sixfoot candles of the kind normally seen on a church altar
# ::tok there they found a room whose flamecoloured curtains were drawn shut and whose only form of light derived from large flickering sixfoot candles of the kind normally seen on a church altar
# ::alignments 30-31|0.2.0.1 27-28|0.0.0.0.0 26-27|0.0.0.0.0.1 25-26|0.0.0.0.0.0 19-20|0.0.0.1 17-18|0.2.0 16-17|0.2.0.0.0 14-15|0.2.0.0 13-14|0.2.0.0.1 11-12|0.2 10-11|0 7-8|0.1 4-5|0.0 2-3|0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:38.146
# ::node	0	shut-05	10-11
# ::node	0.0	room	4-5
# ::node	0.0.0	find-01	2-3
# ::node	0.0.0.0	they	1-2
# ::node	0.0.0.0.0	see-01	27-28
# ::node	0.0.0.0.0.0	kind	25-26
# ::node	0.0.0.0.0.1	normal	26-27
# ::node	0.0.0.1	large	19-20
# ::node	0.1	curtain	7-8
# ::node	0.2	and	11-12
# ::node	0.2.0	derive-01	17-18
# ::node	0.2.0.0	form	14-15
# ::node	0.2.0.0.0	light	16-17
# ::node	0.2.0.0.1	only	13-14
# ::node	0.2.0.1	church	30-31
# ::root	0	shut-05
# ::edge	and	op1	shut-05	0.2	0	
# ::edge	and	op2	derive-01	0.2	0.2.0	
# ::edge	derive-01	ARG0	form	0.2.0	0.2.0.0	
# ::edge	derive-01	ARG1	church	0.2.0	0.2.0.1	
# ::edge	find-01	ARG0	they	0.0.0	0.0.0.0	
# ::edge	find-01	ARG1	room	0.0.0	0.0	
# ::edge	form	mod	light	0.2.0.0	0.2.0.0.0	
# ::edge	form	mod	only	0.2.0.0	0.2.0.0.1	
# ::edge	large	op1	find-01	0.0.0.1	0.0.0	
# ::edge	see-01	ARG0	they	0.0.0.0.0	0.0.0.0	
# ::edge	see-01	ARG1	kind	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	see-01	mod	normal	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	shut-05	ARG0	room	0	0.0	
# ::edge	shut-05	ARG1	curtain	0	0.1	
(s2 / shut-05 
      :ARG0 (r / room 
            :ARG1-of (f2 / find-01 
                  :ARG0 (t / they 
                        :ARG0-of (s / see-01 
                              :ARG1 (k / kind) 
                              :mod (n / normal))) 
                  :op-of (l / large))) 
      :ARG1 (c2 / curtain) 
      :op-of (a / and 
            :op1 (d / derive-01 
                  :ARG0 (f / form 
                        :mod (l2 / light) 
                        :mod (o / only)) 
                  :ARG1 (c / church))))

# ::snt whatever our ultimate verdict it is evident that at least nozicks reason for erecting rights as sideconstraints derives from additional sources besides the doubts about comparability if indeed these worried him at all
# ::tok whatever our ultimate verdict it is evident that at least nozicks reason for erecting rights as sideconstraints derives from additional sources besides the doubts about comparability if indeed these worried him at all
# ::alignments 32-33|0.0.1 29-30|0.0 27-28|0 23-24|0.0.0.0.0 21-22|0.0.0.0.0.2 20-21|0.0.0.0.0.0 19-20|0.0.0.0.0.0.0 14-15|0.0.2 11-12|0.0.2.0 6-7|0.0.0.0.0.1.0 4-5|0.0.0.0.0.1 3-4|0.0.0 2-3|0.0.0.0 0-1|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:38.414
# ::node	0	indeed	27-28
# ::node	0.0	worry-02	29-30
# ::node	0.0.0	verdict	3-4
# ::node	0.0.0.0	ultimate	2-3
# ::node	0.0.0.0.0	doubt-01	23-24
# ::node	0.0.0.0.0.0	source	20-21
# ::node	0.0.0.0.0.0.0	additional	19-20
# ::node	0.0.0.0.0.1	it	4-5
# ::node	0.0.0.0.0.1.0	evident	6-7
# ::node	0.0.0.0.0.2	besides	21-22
# ::node	0.0.0.1	whatever	0-1
# ::node	0.0.1	all	32-33
# ::node	0.0.2	right	14-15
# ::node	0.0.2.0	reason	11-12
# ::root	0	indeed
(i / indeed 
      :ARG1-of (w / worry-02 
            :ARG0 (v / verdict 
                  :mod (u / ultimate 
                        :op1 (d / doubt-01 
                              :ARG0 (s / source 
                                    :mod (a2 / additional)) 
                              :op-of (i2 / it 
                                    :domain-of (e / evident)) 
                              :op-of (b / besides))) 
                  :mod (w2 / whatever)) 
            :ARG2 (a / all) 
            :op-of (r / right 
                  :beneficiary-of (r2 / reason))))

# ::snt they will also show that there are duties which do not derive from anyones rights
# ::tok they will also show that there are duties which do not derive from anyones rights
# ::alignments 14-15|0.1.0.0 11-12|0.1.0 7-8|0.1 3-4|0 2-3|0.2 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:38.437
# ::node	0	show-01	3-4
# ::node	0.0	they	0-1
# ::node	0.1	duty	7-8
# ::node	0.1.0	derive-01	11-12
# ::node	0.1.0.0	right	14-15
# ::node	0.2	also	2-3
# ::root	0	show-01
# ::edge	derive-01	ARG1	duty	0.1.0	0.1	
# ::edge	derive-01	ARG2	right	0.1.0	0.1.0.0	
# ::edge	show-01	ARG0	they	0	0.0	
# ::edge	show-01	ARG1	duty	0	0.1	
# ::edge	show-01	mod	also	0	0.2	
(s / show-01 
      :ARG0 (t / they) 
      :ARG1 (d2 / duty 
            :ARG1-of (d / derive-01 
                  :ARG2 (r / right))) 
      :mod (a / also))

# ::snt gareth wardell lab gower ventured that the majority of homeowners and industrialists would derive some comfort from seeing britain in the ems rather than the daily spectacle of the chancellor clinging desperately to the rate of interest like a dead man clings to a live electric wire
# ::tok gareth wardell lab gower ventured that the majority of homeowners and industrialists would derive some comfort from seeing britain in the ems rather than the daily spectacle of the chancellor clinging desperately to the rate of interest like a dead man clings to a live electric wire
# ::alignments 46-47|0.1.0 45-46|0.1.0.2 44-45|0.1.0.1 40-41|0.0 36-37|0 34-35|0.1 31-32|0.1.0.1.0 26-27|0.1.0.0 18-19|0.2.2.1.0.0.0+0.2.2.1.0.0+0.2.2.1.0 17-18|0.2.2.1 15-16|0.2 14-15|0.2.3 13-14|0.2.2 10-11|0.2.1 7-8|0.2.2.0 2-3|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:38.766
# ::node	0	interest-01	36-37
# ::node	0.0	man	40-41
# ::node	0.1	rate	34-35
# ::node	0.1.0	wire-01	46-47
# ::node	0.1.0.0	spectacle	26-27
# ::node	0.1.0.1	live-01	44-45
# ::node	0.1.0.1.0	desperate	31-32
# ::node	0.1.0.2	electric	45-46
# ::node	0.2	comfort-01	15-16
# ::node	0.2.0	lab	2-3
# ::node	0.2.1	and	10-11
# ::node	0.2.2	derive-01	13-14
# ::node	0.2.2.0	majority	7-8
# ::node	0.2.2.1	see-01	17-18
# ::node	0.2.2.1.0	country	18-19
# ::node	0.2.2.1.0.0	name	18-19
# ::node	0.2.2.1.0.0.0	"Britain"	18-19
# ::node	0.2.3	some	14-15
# ::root	0	interest-01
# ::edge	comfort-01	ARG0	lab	0.2	0.2.0	
# ::edge	comfort-01	ARG1	and	0.2	0.2.1	
# ::edge	comfort-01	ARG2	interest-01	0.2	0	
# ::edge	comfort-01	quant	some	0.2	0.2.3	
# ::edge	country	name	name	0.2.2.1.0	0.2.2.1.0.0	
# ::edge	derive-01	ARG0	majority	0.2.2	0.2.2.0	
# ::edge	derive-01	ARG1	comfort-01	0.2.2	0.2	
# ::edge	derive-01	ARG2	see-01	0.2.2	0.2.2.1	
# ::edge	interest-01	ARG1	man	0	0.0	
# ::edge	interest-01	ARG2	rate	0	0.1	
# ::edge	live-01	ARG0	desperate	0.1.0.1	0.1.0.1.0	
# ::edge	live-01	ARG1	wire-01	0.1.0.1	0.1.0	
# ::edge	name	op1	"Britain"	0.2.2.1.0.0	0.2.2.1.0.0.0	
# ::edge	see-01	ARG1	country	0.2.2.1	0.2.2.1.0	
# ::edge	wire-01	ARG0	rate	0.1.0	0.1	
# ::edge	wire-01	ARG1	spectacle	0.1.0	0.1.0.0	
# ::edge	wire-01	mod	electric	0.1.0	0.1.0.2	
(i / interest-01 
      :ARG1 (m / man) 
      :ARG2 (r / rate 
            :ARG0-of (w / wire-01 
                  :ARG1 (s / spectacle) 
                  :ARG1-of (l / live-01 
                        :ARG0 (d / desperate)) 
                  :mod (e / electric))) 
      :ARG2-of (c2 / comfort-01 
            :ARG0 (l2 / lab) 
            :ARG1 (a / and) 
            :ARG1-of (d2 / derive-01 
                  :ARG0 (m2 / majority) 
                  :ARG2 (s2 / see-01 
                        :ARG1 (c / country 
                              :name (n / name 
                                    :op1 "Britain")))) 
            :quant (s3 / some)))

# ::snt in our opinion the driveline is the best bmw has yet made and despite the change of dynamic emphasis its impossible not to derive great pleasure from this alone
# ::tok in our opinion the driveline is the best bmw has yet made and despite the change of dynamic emphasis its impossible not to derive great pleasure from this alone
# ::alignments 28-29|0.0.1.1.0 27-28|0.0.1.1 25-26|0.0.0 24-25|0.0.0.0 23-24|0.0 18-19|0 17-18|0.2 15-16|0.1 12-13|0.0.0.1 10-11|0.0.1.0 8-9|0.0.0.1.0.0.0+0.0.0.1.0.0+0.0.0.1.0 2-3|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:38.957
# ::node	0	emphasize-01	18-19
# ::node	0.0	derive-01	23-24
# ::node	0.0.0	pleasure	25-26
# ::node	0.0.0.0	great	24-25
# ::node	0.0.0.1	and	12-13
# ::node	0.0.0.1.0	car-make	8-9
# ::node	0.0.0.1.0.0	name	8-9
# ::node	0.0.0.1.0.0.0	"BMW"	8-9
# ::node	0.0.1	opine-01	2-3
# ::node	0.0.1.0	yet	10-11
# ::node	0.0.1.1	this	27-28
# ::node	0.0.1.1.0	alone	28-29
# ::node	0.1	change-01	15-16
# ::node	0.2	dynamic	17-18
# ::root	0	emphasize-01
# ::edge	and	op1	car-make	0.0.0.1	0.0.0.1.0	
# ::edge	and	op2	pleasure	0.0.0.1	0.0.0	
# ::edge	car-make	name	name	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	change-01	ARG1	emphasize-01	0.1	0	
# ::edge	derive-01	ARG1	pleasure	0.0	0.0.0	
# ::edge	emphasize-01	ARG1	derive-01	0	0.0	
# ::edge	emphasize-01	mod	dynamic	0	0.2	
# ::edge	name	op1	"BMW"	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	opine-01	ARG0	yet	0.0.1	0.0.1.0	
# ::edge	opine-01	ARG1	derive-01	0.0.1	0.0	
# ::edge	opine-01	topic	this	0.0.1	0.0.1.1	
# ::edge	pleasure	mod	great	0.0.0	0.0.0.0	
# ::edge	this	mod	alone	0.0.1.1	0.0.1.1.0	
(e / emphasize-01 
      :ARG1 (d / derive-01 
            :ARG1 (p / pleasure 
                  :mod (g / great) 
                  :op-of (a2 / and 
                        :op1 (c2 / car-make 
                              :name (n / name 
                                    :op1 "BMW")))) 
            :ARG1-of (o / opine-01 
                  :ARG0 (y / yet) 
                  :topic (t / this 
                        :mod (a / alone)))) 
      :ARG1-of (c / change-01) 
      :mod (d2 / dynamic))

# ::snt   the problem with home reversions is that you sell at todays valuation and thereafter derive no benefit from any rise in house prices dash
# ::tok the problem with home reversions is that you sell at todays valuation and thereafter derive no benefit from any rise in house prices dash
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:38.958
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt this is narrowly interpreted when the same moral community is a community of interacting individuals whose obligations to each other are thought to derive from a social contract or to represent the outcome of a fair bargaining process or if morality is conceived of in some other way as a system for the mutual advantage of all members of the community
# ::tok this is narrowly interpreted when the same moral community is a community of interacting individuals whose obligations to each other are thought to derive from a social contract or to represent the outcome of a fair bargaining process or if morality is conceived of in some other way as a system for the mutual advantage of all members of the community
# ::alignments 60-61|0.0.0.0.2.0 57-58|0.0.0.0.2.1+0.0.0.0.2 56-57|0.0.0.0.0 54-55|0.0.0.0.1 53-54|0.0.0.0.1.0 50-51|0.0.0.0.3.0.1.0.1.2 47-48|0.0.0.0.3.0.1.0.1 46-47|0.0.0.0.3.0.1.0.1.0 45-46|0.0.0.0.3.0.1.0.1.1 42-43|0.0.0.0.3.0.1.0 40-41|0.0.0.0.3.0.1.0.0 38-39|0.0.0.0.3.0.1 37-38|0.0.0.0.3 36-37|0.0.0.0.3.0 35-36|0.0.0.0.3.0.0 32-33|0.0.0.0 30-31|0.0.0 28-29|0.0.0.1 27-28|0.0.0.1.1 26-27|0.0.0.1.1.0 23-24|0.0.0.1.0 21-22|0.0.0.1.0.1 19-20|0.1 18-19|0.1.0 16-17|0 14-15|0.0 11-12|0.0.0.1.0.1.0 8-9|0.0.0.1.0.1.0.0 7-8|0.0.0.1.0.1.0.0.1 6-7|0.0.0.1.0.1.0.0.0 0-1|0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:40.767
# ::node	0	obligate-01	16-17
# ::node	0.0	individual	14-15
# ::node	0.0.0	represent-01	30-31
# ::node	0.0.0.0	outcome	32-33
# ::node	0.0.0.0.0	all	56-57
# ::node	0.0.0.0.1	advantage	54-55
# ::node	0.0.0.0.1.0	mutual	53-54
# ::node	0.0.0.0.2	have-org-role-91	57-58
# ::node	0.0.0.0.2.0	community	60-61
# ::node	0.0.0.0.2.1	member	57-58
# ::node	0.0.0.0.3	process	37-38
# ::node	0.0.0.0.3.0	bargain-01	36-37
# ::node	0.0.0.0.3.0.0	fair	35-36
# ::node	0.0.0.0.3.0.1	or	38-39
# ::node	0.0.0.0.3.0.1.0	conceive-01	42-43
# ::node	0.0.0.0.3.0.1.0.0	morality	40-41
# ::node	0.0.0.0.3.0.1.0.1	way	47-48
# ::node	0.0.0.0.3.0.1.0.1.0	other	46-47
# ::node	0.0.0.0.3.0.1.0.1.1	some	45-46
# ::node	0.0.0.0.3.0.1.0.1.2	system	50-51
# ::node	0.0.0.1	or	28-29
# ::node	0.0.0.1.0	derive-01	23-24
# ::node	0.0.0.1.0.0	this	0-1
# ::node	0.0.0.1.0.1	think-01	21-22
# ::node	0.0.0.1.0.1.0	community	11-12
# ::node	0.0.0.1.0.1.0.0	community	8-9
# ::node	0.0.0.1.0.1.0.0.0	same-41	6-7
# ::node	0.0.0.1.0.1.0.0.1	moral	7-8
# ::node	0.0.0.1.1	contract-02	27-28
# ::node	0.0.0.1.1.0	society	26-27
# ::node	0.1	other	19-20
# ::node	0.1.0	each	18-19
# ::root	0	obligate-01
# ::edge	advantage	mod	mutual	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	advantage	mod	outcome	0.0.0.0.1	0.0.0.0	
# ::edge	bargain-01	ARG1	fair	0.0.0.0.3.0	0.0.0.0.3.0.0	
# ::edge	community	domain	community	0.0.0.1.0.1.0.0	0.0.0.1.0.1.0	
# ::edge	community	mod	moral	0.0.0.1.0.1.0.0	0.0.0.1.0.1.0.0.1	
# ::edge	conceive-01	ARG1	morality	0.0.0.0.3.0.1.0	0.0.0.0.3.0.1.0.0	
# ::edge	conceive-01	manner	way	0.0.0.0.3.0.1.0	0.0.0.0.3.0.1.0.1	
# ::edge	contract-02	ARG1	society	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	derive-01	ARG0	this	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	have-org-role-91	ARG1	community	0.0.0.0.2	0.0.0.0.2.0	
# ::edge	have-org-role-91	ARG2	member	0.0.0.0.2	0.0.0.0.2.1	
# ::edge	have-org-role-91	mod	outcome	0.0.0.0.2	0.0.0.0	
# ::edge	obligate-01	ARG1	individual	0	0.0	
# ::edge	obligate-01	prep-to	other	0	0.1	
# ::edge	or	op1	bargain-01	0.0.0.0.3.0.1	0.0.0.0.3.0	
# ::edge	or	op1	derive-01	0.0.0.1	0.0.0.1.0	
# ::edge	or	op2	conceive-01	0.0.0.0.3.0.1	0.0.0.0.3.0.1.0	
# ::edge	or	op2	contract-02	0.0.0.1	0.0.0.1.1	
# ::edge	or	op3	represent-01	0.0.0.1	0.0.0	
# ::edge	other	mod	each	0.1	0.1.0	
# ::edge	outcome	mod	all	0.0.0.0	0.0.0.0.0	
# ::edge	outcome	poss	process	0.0.0.0	0.0.0.0.3	
# ::edge	process	mod	bargain-01	0.0.0.0.3	0.0.0.0.3.0	
# ::edge	represent-01	ARG0	individual	0.0.0	0.0	
# ::edge	represent-01	ARG1	outcome	0.0.0	0.0.0.0	
# ::edge	same-41	ARG1	community	0.0.0.1.0.1.0.0.0	0.0.0.1.0.1.0.0	
# ::edge	system	part	way	0.0.0.0.3.0.1.0.1.2	0.0.0.0.3.0.1.0.1	
# ::edge	think-01	ARG0	community	0.0.0.1.0.1	0.0.0.1.0.1.0	
# ::edge	think-01	ARG1	derive-01	0.0.0.1.0.1	0.0.0.1.0	
# ::edge	way	mod	other	0.0.0.0.3.0.1.0.1	0.0.0.0.3.0.1.0.1.0	
# ::edge	way	mod	some	0.0.0.0.3.0.1.0.1	0.0.0.0.3.0.1.0.1.1	
(o6 / obligate-01 
      :ARG1 (i / individual 
            :ARG0-of (r / represent-01 
                  :ARG1 (o3 / outcome 
                        :mod (a / all) 
                        :mod-of (a2 / advantage 
                              :mod (m2 / mutual)) 
                        :mod-of (h / have-org-role-91 
                              :ARG1 (c / community) 
                              :ARG2 (m / member)) 
                        :poss (p / process 
                              :mod (b / bargain-01 
                                    :ARG1 (f / fair) 
                                    :op-of (o2 / or 
                                          :op1 (c2 / conceive-01 
                                                :ARG1 (m3 / morality) 
                                                :manner (w / way 
                                                      :mod (o / other) 
                                                      :mod (s2 / some) 
                                                      :part-of (s / system))))))) 
                  :op-of (o4 / or 
                        :op1 (d / derive-01 
                              :ARG0 (t2 / this) 
                              :ARG1-of (t / think-01 
                                    :ARG0 (c4 / community 
                                          :domain-of (c5 / community 
                                                :ARG1-of (s4 / same-41) 
                                                :mod (m4 / moral))))) 
                        :op2 (c3 / contract-02 
                              :ARG1 (s3 / society))))) 
      :prep-to (o5 / other 
            :mod (e / each)))

# ::snt the paradox arises partly because the emotional force derives from external oppression not internal unities but the external oppression seems to identify an internal essence the junction point between what is imagined as a national group and personal integrity selfrespect
# ::tok the paradox arises partly because the emotional force derives from external oppression not internal unities but the external oppression seems to identify an internal essence the junction point between what is imagined as a national group and personal integrity selfrespect
# ::alignments 38-39|0.0 37-38|0.0.0 36-37|0.1.1.0 35-36|0.1.1.0.0 34-35|0.1.1.0.0.0 28-29|0.2.1.2 27-28|0.2.1.2.0 24-25|0.2.1.1 23-24|0.2.1.1.0 21-22|0.2.1 19-20|0.2 18-19|0.2.1.0 17-18|0.2.1.0.1 15-16|0 13-14|0.2.1.0.0 11-12|0.2.0.0 10-11|0.2.0.0.0 7-8|0.2.0 6-7|0.2.0.1 4-5|0.1.1 3-4|0.1.2 2-3|0.1 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:42.084
# ::node	0	contrast-01	15-16
# ::node	0.0	integrity	38-39
# ::node	0.0.0	personal	37-38
# ::node	0.1	arise-01	2-3
# ::node	0.1.0	paradox	1-2
# ::node	0.1.1	cause-01	4-5
# ::node	0.1.1.0	and	36-37
# ::node	0.1.1.0.0	group	35-36
# ::node	0.1.1.0.0.0	nation	34-35
# ::node	0.1.2	partly	3-4
# ::node	0.2	seem-01	19-20
# ::node	0.2.0	force	7-8
# ::node	0.2.0.0	oppress-01	11-12
# ::node	0.2.0.0.0	external	10-11
# ::node	0.2.0.1	emotion	6-7
# ::node	0.2.1	identify-01	21-22
# ::node	0.2.1.0	oppress-01	18-19
# ::node	0.2.1.0.0	internal	13-14
# ::node	0.2.1.0.1	external	17-18
# ::node	0.2.1.1	essence	24-25
# ::node	0.2.1.1.0	internal	23-24
# ::node	0.2.1.2	between	28-29
# ::node	0.2.1.2.0	point	27-28
# ::root	0	contrast-01
# ::edge	and	op1	group	0.1.1.0	0.1.1.0.0	
# ::edge	arise-01	ARG1	paradox	0.1	0.1.0	
# ::edge	arise-01	concession	partly	0.1	0.1.2	
# ::edge	cause-01	ARG0	and	0.1.1	0.1.1.0	
# ::edge	cause-01	ARG1	arise-01	0.1.1	0.1	
# ::edge	contrast-01	ARG0	integrity	0	0.0	
# ::edge	contrast-01	ARG1	arise-01	0	0.1	
# ::edge	contrast-01	ARG2	seem-01	0	0.2	
# ::edge	essence	mod	internal	0.2.1.1	0.2.1.1.0	
# ::edge	force	mod	emotion	0.2.0	0.2.0.1	
# ::edge	group	mod	nation	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	identify-01	ARG0	oppress-01	0.2.1	0.2.1.0	
# ::edge	identify-01	ARG1	essence	0.2.1	0.2.1.1	
# ::edge	identify-01	ARG2	between	0.2.1	0.2.1.2	
# ::edge	integrity	mod	personal	0.0	0.0.0	
# ::edge	oppress-01	ARG1	force	0.2.0.0	0.2.0	
# ::edge	oppress-01	ARG1	internal	0.2.1.0	0.2.1.0.0	
# ::edge	oppress-01	mod	external	0.2.0.0	0.2.0.0.0	
# ::edge	oppress-01	mod	external	0.2.1.0	0.2.1.0.1	
# ::edge	point	location	between	0.2.1.2.0	0.2.1.2	
# ::edge	seem-01	ARG0	force	0.2	0.2.0	
# ::edge	seem-01	ARG1	identify-01	0.2	0.2.1	
(c / contrast-01 
      :ARG0 (i / integrity 
            :mod (p / personal)) 
      :ARG1 (a2 / arise-01 
            :ARG1 (p4 / paradox) 
            :ARG1-of (c2 / cause-01 
                  :ARG0 (a / and 
                        :op1 (g / group 
                              :mod (n / nation)))) 
            :concession (p3 / partly)) 
      :ARG2 (s / seem-01 
            :ARG0 (f / force 
                  :ARG1-of (o2 / oppress-01 
                        :mod (e3 / external)) 
                  :mod (e4 / emotion)) 
            :ARG1 (i3 / identify-01 
                  :ARG0 (o / oppress-01 
                        :ARG1 (i4 / internal) 
                        :mod (e2 / external)) 
                  :ARG1 (e / essence 
                        :mod (i2 / internal)) 
                  :ARG2 (b / between 
                        :location-of (p2 / point)))))

# ::snt crosfield will have derived limited benefit from the switch from plantations into timber
# ::tok crosfield will have derived limited benefit from the switch from plantations into timber
# ::alignments 8-9|0.1 5-6|0.0 4-5|0.0.0 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:42.105
# ::node	0	derive-01	3-4
# ::node	0.0	benefit-01	5-6
# ::node	0.0.0	limit-01	4-5
# ::node	0.1	switch-01	8-9
# ::root	0	derive-01
# ::edge	derive-01	ARG1	benefit-01	0	0.0	
# ::edge	derive-01	ARG2	switch-01	0	0.1	
# ::edge	limit-01	ARG1	benefit-01	0.0.0	0.0	
(d / derive-01 
      :ARG1 (b / benefit-01 
            :ARG1-of (l / limit-01)) 
      :ARG2 (s / switch-01))

# ::snt infrared remote sensing of citywide heat loss promotion of car pooling cfc extraction from scrapped fridges phasing out the use of peat reducing packaging a commercial embargo of wildlife derived products and a presumption against developments on sites of wildlife value are a few which give a flavour of a greener leicester
# ::tok infrared remote sensing of citywide heat loss promotion of car pooling cfc extraction from scrapped fridges phasing out the use of peat reducing packaging a commercial embargo of wildlife derived products and a presumption against developments on sites of wildlife value are a few which give a flavour of a greener leicester
# ::alignments 45-46|0 43-44|0.0 40-41|0.1.1.2 39-40|0.1.1.2.0 37-38|0.1.1.2.1.0 35-36|0.1.1.2.1 31-32|0.1 30-31|0.1.2.0 29-30|0.1.2 28-29|0.1.1.1.1.0.0 26-27|0.1.1.1.1.0 25-26|0.1.1.1.1.0.1 23-24|0.1.1.1.1 22-23|0.1.1.1 19-20|0.1.1 16-17|0.1.1.0 14-15|0.1.1.2.1.1 12-13|0.1.1.0.0 9-10|0.1.0.0 7-8|0.1.0 5-6|0.1.0.1 1-2|0.1.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:43.457
# ::node	0	give-01	45-46
# ::node	0.0	few	43-44
# ::node	0.1	and	31-32
# ::node	0.1.0	promote-02	7-8
# ::node	0.1.0.0	car	9-10
# ::node	0.1.0.1	heat	5-6
# ::node	0.1.1	use-01	19-20
# ::node	0.1.1.0	phase-01	16-17
# ::node	0.1.1.0.0	extract-01	12-13
# ::node	0.1.1.1	reduce-01	22-23
# ::node	0.1.1.1.0	remote	1-2
# ::node	0.1.1.1.1	package-01	23-24
# ::node	0.1.1.1.1.0	embargo-01	26-27
# ::node	0.1.1.1.1.0.0	wildlife	28-29
# ::node	0.1.1.1.1.0.1	commerce	25-26
# ::node	0.1.1.2	value-01	40-41
# ::node	0.1.1.2.0	wildlife	39-40
# ::node	0.1.1.2.1	develop-01	35-36
# ::node	0.1.1.2.1.0	site	37-38
# ::node	0.1.1.2.1.1	scrap-01	14-15
# ::node	0.1.2	derive-01	29-30
# ::node	0.1.2.0	product	30-31
# ::root	0	give-01
# ::edge	derive-01	ARG1	and	0.1.2	0.1	
# ::edge	derive-01	ARG2	product	0.1.2	0.1.2.0	
# ::edge	develop-01	ARG1	site	0.1.1.2.1	0.1.1.2.1.0	
# ::edge	develop-01	ARG2	value-01	0.1.1.2.1	0.1.1.2	
# ::edge	embargo-01	ARG1	wildlife	0.1.1.1.1.0	0.1.1.1.1.0.0	
# ::edge	embargo-01	mod	commerce	0.1.1.1.1.0	0.1.1.1.1.0.1	
# ::edge	extract-01	ARG2	phase-01	0.1.1.0.0	0.1.1.0	
# ::edge	give-01	ARG0	few	0	0.0	
# ::edge	give-01	ARG1	and	0	0.1	
# ::edge	package-01	ARG1	embargo-01	0.1.1.1.1	0.1.1.1.1.0	
# ::edge	phase-01	ARG1	use-01	0.1.1.0	0.1.1	
# ::edge	promote-02	ARG0	and	0.1.0	0.1	
# ::edge	promote-02	ARG1	car	0.1.0	0.1.0.0	
# ::edge	promote-02	mod	heat	0.1.0	0.1.0.1	
# ::edge	reduce-01	ARG0	remote	0.1.1.1	0.1.1.1.0	
# ::edge	reduce-01	ARG1	package-01	0.1.1.1	0.1.1.1.1	
# ::edge	scrap-01	ARG1	develop-01	0.1.1.2.1.1	0.1.1.2.1	
# ::edge	use-01	ARG1	and	0.1.1	0.1	
# ::edge	use-01	ARG2	reduce-01	0.1.1	0.1.1.1	
# ::edge	value-01	ARG1	wildlife	0.1.1.2	0.1.1.2.0	
# ::edge	value-01	topic	use-01	0.1.1.2	0.1.1	
(g / give-01 
      :ARG0 (f / few) 
      :ARG1 (a / and 
            :ARG0-of (p4 / promote-02 
                  :ARG1 (c2 / car) 
                  :mod (h / heat)) 
            :ARG1-of (u / use-01 
                  :ARG1-of (p3 / phase-01 
                        :ARG2-of (e2 / extract-01)) 
                  :ARG2 (r / reduce-01 
                        :ARG0 (r2 / remote) 
                        :ARG1 (p2 / package-01 
                              :ARG1 (e / embargo-01 
                                    :ARG1 (w2 / wildlife) 
                                    :mod (c / commerce)))) 
                  :topic-of (v / value-01 
                        :ARG1 (w / wildlife) 
                        :ARG2-of (d / develop-01 
                              :ARG1 (s / site) 
                              :ARG1-of (s2 / scrap-01)))) 
            :ARG1-of (d2 / derive-01 
                  :ARG2 (p / product))))

# ::snt wood veneer finishes with aluminum trim characterised the lounges and offices zebra wood holly and walnut in the mens lounge were arranged in abstract designs derived from railroad locomotives cars and signals panels of zebra and madrone wood covered the womens lounge and gum harewood and holly were used in the offices along with cork flooring
# ::tok wood veneer finishes with aluminum trim characterised the lounges and offices zebra wood holly and walnut in the mens lounge were arranged in abstract designs derived from railroad locomotives cars and signals panels of zebra and madrone wood covered the womens lounge and gum harewood and holly were used in the offices along with cork flooring
# ::alignments 52-53|0.0.1.0 51-52|0.0.1 48-49|0.0 45-46|0.0.0 43-44|0.2 42-43|0 41-42|0.1 38-39|0.0.2.0 37-38|0.0.2.0.0.0 35-36|0.0.2.0.0 31-32|0.0.2.0.0.1.2 30-31|0.0.2.0.0.1 29-30|0.0.2.0.0.1.1.1 25-26|0.0.2.0.0.1.1 24-25|0.0.2.0.0.1.1.0 23-24|0.0.2.0.0.1.1.0.2 21-22|0.0.2.0.0.1.0 19-20|0.0.2.0.0.1.1.0.1 14-15|0.0.2.0.0.1.0.1 12-13|0.0.2.0.0.1.1.0.0 10-11|0.0.2.1 9-10|0.0.2 0-1|0.0.2.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:44.263
# ::node	0	and	42-43
# ::node	0.0	use-01	48-49
# ::node	0.0.0	and	45-46
# ::node	0.0.1	office	51-52
# ::node	0.0.1.0	along	52-53
# ::node	0.0.2	and	9-10
# ::node	0.0.2.0	cover-01	38-39
# ::node	0.0.2.0.0	and	35-36
# ::node	0.0.2.0.0.0	wood	37-38
# ::node	0.0.2.0.0.1	and	30-31
# ::node	0.0.2.0.0.1.0	arrange-01	21-22
# ::node	0.0.2.0.0.1.0.0	wood	0-1
# ::node	0.0.2.0.0.1.0.1	and	14-15
# ::node	0.0.2.0.0.1.1	derive-01	25-26
# ::node	0.0.2.0.0.1.1.0	design-01	24-25
# ::node	0.0.2.0.0.1.1.0.0	wood	12-13
# ::node	0.0.2.0.0.1.1.0.1	lounge	19-20
# ::node	0.0.2.0.0.1.1.0.2	abstract	23-24
# ::node	0.0.2.0.0.1.1.1	car	29-30
# ::node	0.0.2.0.0.1.2	signal	31-32
# ::node	0.0.2.1	office	10-11
# ::node	0.1	lounge	41-42
# ::node	0.2	gum	43-44
# ::root	0	and
# ::edge	and	consist	wood	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	and	op1	arrange-01	0.0.2.0.0.1	0.0.2.0.0.1.0	
# ::edge	and	op1	lounge	0	0.1	
# ::edge	and	op1	office	0.0.2	0.0.2.1	
# ::edge	and	op2	derive-01	0.0.2.0.0.1	0.0.2.0.0.1.1	
# ::edge	and	op2	gum	0	0.2	
# ::edge	and	op2	use-01	0.0.2	0.0	
# ::edge	and	op3	signal	0.0.2.0.0.1	0.0.2.0.0.1.2	
# ::edge	and	source	and	0.0.2.0.0.1	0.0.2.0.0	
# ::edge	arrange-01	ARG0	wood	0.0.2.0.0.1.0	0.0.2.0.0.1.0.0	
# ::edge	arrange-01	ARG1	and	0.0.2.0.0.1.0	0.0.2.0.0.1.0.1	
# ::edge	cover-01	ARG0	and	0.0.2.0	0.0.2	
# ::edge	cover-01	ARG1	and	0.0.2.0	0.0.2.0.0	
# ::edge	derive-01	ARG1	design-01	0.0.2.0.0.1.1	0.0.2.0.0.1.1.0	
# ::edge	derive-01	ARG2	car	0.0.2.0.0.1.1	0.0.2.0.0.1.1.1	
# ::edge	design-01	ARG0	wood	0.0.2.0.0.1.1.0	0.0.2.0.0.1.1.0.0	
# ::edge	design-01	ARG1	lounge	0.0.2.0.0.1.1.0	0.0.2.0.0.1.1.0.1	
# ::edge	design-01	mod	abstract	0.0.2.0.0.1.1.0	0.0.2.0.0.1.1.0.2	
# ::edge	office	location	along	0.0.1	0.0.1.0	
# ::edge	use-01	ARG1	and	0.0	0.0.0	
# ::edge	use-01	ARG2	and	0.0	0	
# ::edge	use-01	location	office	0.0	0.0.1	
(a3 / and 
      :ARG2-of (u / use-01 
            :ARG1 (a2 / and) 
            :location (o / office 
                  :location (a / along)) 
            :op-of (a9 / and 
                  :ARG0-of (c / cover-01 
                        :ARG1 (a4 / and 
                              :consist (w / wood) 
                              :source-of (a5 / and 
                                    :op1 (a7 / arrange-01 
                                          :ARG0 (w3 / wood) 
                                          :ARG1 (a8 / and)) 
                                    :op2 (d / derive-01 
                                          :ARG1 (d2 / design-01 
                                                :ARG0 (w2 / wood) 
                                                :ARG1 (l2 / lounge) 
                                                :mod (a6 / abstract)) 
                                          :ARG2 (c2 / car)) 
                                    :op3 (s / signal)))) 
                  :op1 (o2 / office))) 
      :op1 (l / lounge) 
      :op2 (g / gum))

# ::snt some amateur associations went as far as legal prosecution to prevent any payment or pro fit being derived from the activities they controlled
# ::tok some amateur associations went as far as legal prosecution to prevent any payment or pro fit being derived from the activities they controlled
# ::alignments 22-23|0 21-22|0.0 20-21|0.1 17-18|0.2.0 15-16|0.2 13-14|0.2.2 11-12|0.2.1 10-11|0.2.2.0 8-9|0.2.2.0.1 7-8|0.2.2.0.1.0 5-6|0.2.2.0.1.1 2-3|0.2.2.0.0 0-1|0.2.2.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:44.781
# ::node	0	control-01	22-23
# ::node	0.0	they	21-22
# ::node	0.1	activity	20-21
# ::node	0.2	fit-01	15-16
# ::node	0.2.0	derive-01	17-18
# ::node	0.2.1	any	11-12
# ::node	0.2.2	or	13-14
# ::node	0.2.2.0	prevent-01	10-11
# ::node	0.2.2.0.0	association	2-3
# ::node	0.2.2.0.0.0	some	0-1
# ::node	0.2.2.0.1	prosecute-01	8-9
# ::node	0.2.2.0.1.0	legal	7-8
# ::node	0.2.2.0.1.1	far	5-6
# ::root	0	control-01
# ::edge	association	quant	some	0.2.2.0.0	0.2.2.0.0.0	
# ::edge	control-01	ARG0	they	0	0.0	
# ::edge	control-01	ARG1	activity	0	0.1	
# ::edge	control-01	condition	fit-01	0	0.2	
# ::edge	derive-01	ARG1	fit-01	0.2.0	0.2	
# ::edge	far	op1	prosecute-01	0.2.2.0.1.1	0.2.2.0.1	
# ::edge	fit-01	mod	any	0.2	0.2.1	
# ::edge	or	op1	fit-01	0.2.2	0.2	
# ::edge	prevent-01	ARG0	association	0.2.2.0	0.2.2.0.0	
# ::edge	prevent-01	ARG1	or	0.2.2.0	0.2.2	
# ::edge	prosecute-01	ARG1	prevent-01	0.2.2.0.1	0.2.2.0	
# ::edge	prosecute-01	mod	legal	0.2.2.0.1	0.2.2.0.1.0	
(c / control-01 
      :ARG0 (t / they) 
      :ARG1 (a / activity) 
      :condition (f / fit-01 
            :ARG1-of (d / derive-01) 
            :mod (a2 / any) 
            :op-of (o / or 
                  :ARG1-of (p / prevent-01 
                        :ARG0 (a3 / association 
                              :quant (s / some)) 
                        :ARG1-of (p2 / prosecute-01 
                              :mod (l / legal) 
                              :op-of (f2 / far))))))

# ::snt the survey findings out today were derived from a questionnaire sent to all universities and polytechnics in the uk which was answered by 64 per cent of universities and 76 per cent of polytechnics
# ::tok the survey findings out today were derived from a questionnaire sent to all universities and polytechnics in the uk which was answered by 64 per cent of universities and 76 per cent of polytechnics
# ::alignments 31-32|0.0.1.0.0+0.0.1.0 29-30|0.0.1.1.1.0.0+0.0.1.1.1.0 28-29|0.1 27-28|0.1.1 25-26|0.1.0.0+0.1.0 23-24|0.0.1.1.1.1.0 21-22|0 14-15|0.0 13-14|0.0.1.2 12-13|0.0.0 10-11|0.0.1 6-7|0.0.1.1.0 4-5|0.0.1.1.0.0 2-3|0.0.1.1.1+0.0.1.1 1-2|0.0.1.1.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:45.423
# ::node	0	answer-01	21-22
# ::node	0.0	and	14-15
# ::node	0.0.0	all	12-13
# ::node	0.0.1	send-01	10-11
# ::node	0.0.1.0	monetary-quantity	31-32
# ::node	0.0.1.0.0	cent	31-32
# ::node	0.0.1.1	thing	2-3
# ::node	0.0.1.1.0	derive-01	6-7
# ::node	0.0.1.1.0.0	today	4-5
# ::node	0.0.1.1.1	find-01	2-3
# ::node	0.0.1.1.1.0	person	29-30
# ::node	0.0.1.1.1.0.0	76	29-30
# ::node	0.0.1.1.1.1	survey-01	1-2
# ::node	0.0.1.1.1.1.0	64	23-24
# ::node	0.0.1.2	university	13-14
# ::node	0.1	and	28-29
# ::node	0.1.0	monetary-quantity	25-26
# ::node	0.1.0.0	cent	25-26
# ::node	0.1.1	university	27-28
# ::root	0	answer-01
# ::edge	and	mod	all	0.0	0.0.0	
# ::edge	and	op1	answer-01	0.1	0	
# ::edge	and	op1	send-01	0.0	0.0.1	
# ::edge	and	op2	monetary-quantity	0.1	0.1.0	
# ::edge	and	op3	university	0.1	0.1.1	
# ::edge	answer-01	ARG1	and	0	0.0	
# ::edge	derive-01	ARG1	thing	0.0.1.1.0	0.0.1.1	
# ::edge	derive-01	time	today	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	find-01	ARG0	person	0.0.1.1.1	0.0.1.1.1.0	
# ::edge	find-01	ARG1	thing	0.0.1.1.1	0.0.1.1	
# ::edge	find-01	ARG2	survey-01	0.0.1.1.1	0.0.1.1.1.1	
# ::edge	monetary-quantity	unit	cent	0.0.1.0	0.0.1.0.0	
# ::edge	monetary-quantity	unit	cent	0.1.0	0.1.0.0	
# ::edge	person	quant	76	0.0.1.1.1.0	0.0.1.1.1.0.0	
# ::edge	send-01	ARG0	monetary-quantity	0.0.1	0.0.1.0	
# ::edge	send-01	ARG1	thing	0.0.1	0.0.1.1	
# ::edge	send-01	ARG2	university	0.0.1	0.0.1.2	
# ::edge	survey-01	ARG1	64	0.0.1.1.1.1	0.0.1.1.1.1.0	
(a2 / answer-01 
      :ARG1 (a3 / and 
            :mod (a4 / all) 
            :op1 (s / send-01 
                  :ARG0 (m / monetary-quantity 
                        :unit (c / cent)) 
                  :ARG1 (t2 / thing 
                        :ARG1-of (d / derive-01 
                              :time (t / today)) 
                        :ARG1-of (f / find-01 
                              :ARG0 (p / person 
                                    :quant 76) 
                              :ARG2 (s2 / survey-01 
                                    :ARG1 64))) 
                  :ARG2 (u2 / university))) 
      :op-of (a / and 
            :op1 (m2 / monetary-quantity 
                  :unit (c2 / cent)) 
            :op2 (u / university)))

# ::snt it is now known however  that it is made up of basaltic rocks derived indirectly from peridotite  and erupted by volcanic action along the ridge itself building up the long  submarine mountain range and giving rise to the relatively few volcanoes  which poke their heads above sea level
# ::tok it is now known however that it is made up of basaltic rocks derived indirectly from peridotite and erupted by volcanic action along the ridge itself building up the long submarine mountain range and giving rise to the relatively few volcanoes which poke their heads above sea level
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:45.424
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt too often throughout jacques almond mistakes brels quiet fatalism for the absence of drama and attempts to rectify the situation punching up songs whose emotional power derives from more subtle accretions of energy
# ::tok too often throughout jacques almond mistakes brels quiet fatalism for the absence of drama and attempts to rectify the situation punching up songs whose emotional power derives from more subtle accretions of energy
# ::alignments 32-33|0.0.0.0.1.1.0.0 25-26|0.0 24-25|0 22-23|0.0.0 19-20|0.0.0.0.0 17-18|0.0.0.0 15-16|0.0.0.0.1 14-15|0.0.0.0.1.1 13-14|0.0.0.0.1.1.1 11-12|0.0.0.0.1.1.0 7-8|0.0.0.0.1.0.1 5-6|0.0.0.0.1.0 2-3|0.0.0.0.1.0.0 1-2|0.0.0.0.1.0.0.0 0-1|0.0.0.0.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:45.640
# ::node	0	emotion	24-25
# ::node	0.0	power	25-26
# ::node	0.0.0	song	22-23
# ::node	0.0.0.0	rectify-01	17-18
# ::node	0.0.0.0.0	situation	19-20
# ::node	0.0.0.0.1	attempt-01	15-16
# ::node	0.0.0.0.1.0	mistake-01	5-6
# ::node	0.0.0.0.1.0.0	throughout	2-3
# ::node	0.0.0.0.1.0.0.0	often	1-2
# ::node	0.0.0.0.1.0.0.0.0	too	0-1
# ::node	0.0.0.0.1.0.1	quiet-41	7-8
# ::node	0.0.0.0.1.1	and	14-15
# ::node	0.0.0.0.1.1.0	absent-01	11-12
# ::node	0.0.0.0.1.1.0.0	energy	32-33
# ::node	0.0.0.0.1.1.1	drama	13-14
# ::root	0	emotion
(e2 / emotion 
      :mod-of (p / power 
            :poss (s / song 
                  :ARG0-of (r / rectify-01 
                        :ARG1 (s2 / situation) 
                        :ARG1-of (a / attempt-01 
                              :ARG0 (m / mistake-01 
                                    :ARG0 (t / throughout 
                                          :mod (o / often 
                                                :degree (t2 / too))) 
                                    :ARG1-of (q / quiet-41)) 
                              :op-of (a2 / and 
                                    :ARG1-of (a3 / absent-01 
                                          :ARG0 (e / energy)) 
                                    :op1 (d / drama)))))))

# ::snt however the films impact derived more from its depiction of the dehumanising effect of war
# ::tok however the films impact derived more from its depiction of the dehumanising effect of war
# ::alignments 14-15|0.1.0 12-13|0.1 4-5|0 3-4|0.0 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:45.660
# ::node	0	derive-01	4-5
# ::node	0.0	impact-01	3-4
# ::node	0.0.0	film	2-3
# ::node	0.1	effect-01	12-13
# ::node	0.1.0	war	14-15
# ::root	0	derive-01
# ::edge	derive-01	ARG1	impact-01	0	0.0	
# ::edge	derive-01	ARG2	effect-01	0	0.1	
# ::edge	effect-01	ARG0	war	0.1	0.1.0	
# ::edge	impact-01	ARG0	film	0.0	0.0.0	
(d / derive-01 
      :ARG1 (i / impact-01 
            :ARG0 (f / film)) 
      :ARG2 (e / effect-01 
            :ARG0 (w / war)))

# ::snt  i asked my czech friends about humaneness and was told lidskost derived from lidsky and lide people
# ::tok i asked my czech friends about humaneness and was told lidskost derived from lidsky and lide people
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:45.661
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt only rarely does a song give you a real whiff of time and place memphis in june a shady veranda under a sundayblue sky memphis in june and cousin miranda making a rhubarb pie ellip  so far the song derives its impact more from hoagy carmichaels lazily meandering tune
# ::tok only rarely does a song give you a real whiff of time and place memphis in june a shady veranda under a sundayblue sky memphis in june and cousin miranda making a rhubarb pie ellip so far the song derives its impact more from hoagy carmichaels lazily meandering tune
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:45.664
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt both of these incorporate the antioxidant vitamin e and vitamin a in the case of mary cohrs fluid foundation the vitamins are derived from evening primrose oil the principal ingredient in the hydroproteine complex
# ::tok both of these incorporate the antioxidant vitamin e and vitamin a in the case of mary cohrs fluid foundation the vitamins are derived from evening primrose oil the principal ingredient in the hydroproteine complex
# ::alignments 33-34|0.0.0.0 29-30|0.0.0 26-27|0.0.2 24-25|0.0.3 22-23|0.0 20-21|0.0.1 18-19|0 17-18|0.1 13-14|0.0.4.0 9-10|0.0.4.1 8-9|0.0.4 6-7|0.0.4.1.1 5-6|0.0.4.1.1.0 0-1|0.0.4.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:46.170
# ::node	0	foundation	18-19
# ::node	0.0	derive-01	22-23
# ::node	0.0.0	ingredient	29-30
# ::node	0.0.0.0	complex	33-34
# ::node	0.0.1	vitamin	20-21
# ::node	0.0.2	oil	26-27
# ::node	0.0.3	evening	24-25
# ::node	0.0.4	and	8-9
# ::node	0.0.4.0	case	13-14
# ::node	0.0.4.1	vitamin	9-10
# ::node	0.0.4.1.0	both	0-1
# ::node	0.0.4.1.1	vitamin	6-7
# ::node	0.0.4.1.1.0	antioxidant	5-6
# ::node	0.1	fluid	17-18
# ::root	0	foundation
# ::edge	and	location	case	0.0.4	0.0.4.0	
# ::edge	and	op1	vitamin	0.0.4	0.0.4.1	
# ::edge	and	op2	derive-01	0.0.4	0.0	
# ::edge	derive-01	ARG0	ingredient	0.0	0.0.0	
# ::edge	derive-01	ARG1	vitamin	0.0	0.0.1	
# ::edge	derive-01	ARG2	oil	0.0	0.0.2	
# ::edge	derive-01	location	evening	0.0	0.0.3	
# ::edge	derive-01	manner	foundation	0.0	0	
# ::edge	foundation	mod	fluid	0	0.1	
# ::edge	ingredient	location	complex	0.0.0	0.0.0.0	
# ::edge	vitamin	degree	both	0.0.4.1	0.0.4.1.0	
# ::edge	vitamin	domain	vitamin	0.0.4.1	0.0.4.1.1	
# ::edge	vitamin	mod	antioxidant	0.0.4.1.1	0.0.4.1.1.0	
(f / foundation 
      :manner-of (d / derive-01 
            :ARG0 (i / ingredient 
                  :location (c / complex)) 
            :ARG1 (v / vitamin) 
            :ARG2 (o / oil) 
            :location (e / evening) 
            :op-of (a / and 
                  :location (c2 / case) 
                  :op1 (v2 / vitamin 
                        :degree (b / both) 
                        :domain (v3 / vitamin 
                              :mod (a2 / antioxidant))))) 
      :mod (f2 / fluid))

# ::snt the same will almost certainly derive from the direct foreign investment in the us
# ::tok the same will almost certainly derive from the direct foreign investment in the us
# ::alignments 10-11|0.1 9-10|0.1.0 8-9|0.1.1 5-6|0 4-5|0.2 3-4|0.2.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:46.196
# ::node	0	derive-01	5-6
# ::node	0.0	same-41	1-2
# ::node	0.1	invest-01	10-11
# ::node	0.1.0	foreign	9-10
# ::node	0.1.1	direct	8-9
# ::node	0.2	certain	4-5
# ::node	0.2.0	almost	3-4
# ::root	0	derive-01
# ::edge	certain	mod	almost	0.2	0.2.0	
# ::edge	derive-01	ARG1	same-41	0	0.0	
# ::edge	derive-01	ARG2	invest-01	0	0.1	
# ::edge	derive-01	mod	certain	0	0.2	
# ::edge	invest-01	mod	direct	0.1	0.1.1	
# ::edge	invest-01	mod	foreign	0.1	0.1.0	
(d2 / derive-01 
      :ARG1 (s / same-41) 
      :ARG2 (i / invest-01 
            :mod (f / foreign) 
            :mod (d / direct)) 
      :mod (c / certain 
            :mod (a / almost)))

# ::snt the bad press which britain receives on this subject especially in the united states derives in part from our deservedly bad reputation in recent years on all questions of immigration
# ::tok the bad press which britain receives on this subject especially in the united states derives in part from our deservedly bad reputation in recent years on all questions of immigration
# ::alignments 29-30|0.4.0 27-28|0.4.0.0 26-27|0.4.0.0.1 24-25|0.4.0.0.0.2+0.4.0.0.0 23-24|0.4.0.0.0.1 21-22|0.4.0.0.0.0 20-21|0.4.0.0.0.0.0 12-14|0.3.0.0+0.3.0.1+0.3.0+0.3 9-10|0.2 8-9|0.4 7-8|0.4.1 5-6|0 4-5|0.0.0.0+0.0.0+0.0 2-3|0.1 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:46.603
# ::node	0	receive-01	5-6
# ::node	0.0	country	4-5
# ::node	0.0.0	name	4-5
# ::node	0.0.0.0	"Britain"	4-5
# ::node	0.1	press	2-3
# ::node	0.1.0	bad	1-2
# ::node	0.2	especially	9-10
# ::node	0.3	country	12-14
# ::node	0.3.0	name	12-14
# ::node	0.3.0.0	"states"	12-14
# ::node	0.3.0.1	"united"	12-14
# ::node	0.4	subject	8-9
# ::node	0.4.0	immigrate-01	29-30
# ::node	0.4.0.0	question-01	27-28
# ::node	0.4.0.0.0	temporal-quantity	24-25
# ::node	0.4.0.0.0.0	reputation	21-22
# ::node	0.4.0.0.0.0.0	bad	20-21
# ::node	0.4.0.0.0.1	recent	23-24
# ::node	0.4.0.0.0.2	year	24-25
# ::node	0.4.0.0.1	all	26-27
# ::node	0.4.1	this	7-8
# ::root	0	receive-01
# ::edge	country	name	name	0.0	0.0.0	
# ::edge	country	name	name	0.3	0.3.0	
# ::edge	immigrate-01	ARG1	subject	0.4.0	0.4	
# ::edge	name	op1	"Britain"	0.0.0	0.0.0.0	
# ::edge	name	op1	"states"	0.3.0	0.3.0.0	
# ::edge	name	op2	"united"	0.3.0	0.3.0.1	
# ::edge	press	mod	bad	0.1	0.1.0	
# ::edge	question-01	ARG1	immigrate-01	0.4.0.0	0.4.0	
# ::edge	question-01	duration	temporal-quantity	0.4.0.0	0.4.0.0.0	
# ::edge	question-01	quant	all	0.4.0.0	0.4.0.0.1	
# ::edge	receive-01	ARG0	country	0	0.0	
# ::edge	receive-01	ARG1	press	0	0.1	
# ::edge	receive-01	time	especially	0	0.2	
# ::edge	receive-01	topic	country	0	0.3	
# ::edge	receive-01	topic	subject	0	0.4	
# ::edge	reputation	location	temporal-quantity	0.4.0.0.0.0	0.4.0.0.0	
# ::edge	reputation	mod	bad	0.4.0.0.0.0	0.4.0.0.0.0.0	
# ::edge	subject	mod	this	0.4	0.4.1	
# ::edge	temporal-quantity	time	recent	0.4.0.0.0	0.4.0.0.0.1	
# ::edge	temporal-quantity	unit	year	0.4.0.0.0	0.4.0.0.0.2	
(r3 / receive-01 
      :ARG0 (c2 / country 
            :name (n2 / name 
                  :op1 "Britain")) 
      :ARG1 (p / press 
            :mod (b2 / bad)) 
      :time (e / especially) 
      :topic (c / country 
            :name (n / name 
                  :op1 "states" 
                  :op2 "united")) 
      :topic (s / subject 
            :ARG1-of (i / immigrate-01 
                  :ARG1-of (q / question-01 
                        :duration (t / temporal-quantity 
                              :location-of (r2 / reputation 
                                    :mod (b / bad)) 
                              :time (r / recent) 
                              :unit (y / year)) 
                        :quant (a / all))) 
            :mod (t2 / this)))

# ::snt why asked komsomolskaya pravda the other day for example was the defence ministry building a country villa for one of its top brass at a cost of 674000 roubles when the army cant find homes for thousands of officers and their families much of boris yeltsins appeal derives from his tirades against speptsshops spetsclinics and the like spets being the russian abbreviation for spetsialny as these establishments are coyly described
# ::tok why asked komsomolskaya pravda the other day for example was the defence ministry building a country villa for one of its top brass at a cost of 674000 roubles when the army cant find homes for thousands of officers and their families much of boris yeltsins appeal derives from his tirades against speptsshops spetsclinics and the like spets being the russian abbreviation for spetsialny as these establishments are coyly described
# ::alignments 69-70|0.1.0.0.0.0.0.1.0.1 54-55|0.2 46-47|0.1.0.0.0.0.0.1.0 42-43|0.1.0.0.0.0.0.1.1 41-42|0.1 39-40|0 38-39|0.1.0.1+0.1.0 34-35|0.0 31-32|0.1.0.2 27-28|0.1.0.0.0.0.0.1.2.2+0.1.0.0.0.0.0.1.2.1+0.1.0.0.0.0.0.1.2.0+0.1.0.0.0.0.0.1.2 25-26|0.1.0.0.0.0.0.1 21-22|0.1.0.0.0.0.0.1.0.0 15-16|0.1.0.0 13-14|0.1.0.0.0.0.0 12-13|0.1.0.0.0.0 11-12|0.1.0.0.0 8-9|0.1.0.0.0.0.0.0.2 6-7|0.1.0.0.0.0.0.0 5-6|0.1.0.0.0.0.0.0.1 1-2|0.1.0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:47.686
# ::node	0	and	39-40
# ::node	0.0	home	34-35
# ::node	0.1	family	41-42
# ::node	0.1.0	have-org-role-91	38-39
# ::node	0.1.0.0	country	15-16
# ::node	0.1.0.0.0	defend-01	11-12
# ::node	0.1.0.0.0.0	ministry	12-13
# ::node	0.1.0.0.0.0.0	build-01	13-14
# ::node	0.1.0.0.0.0.0.0	day	6-7
# ::node	0.1.0.0.0.0.0.0.0	ask-02	1-2
# ::node	0.1.0.0.0.0.0.0.1	other	5-6
# ::node	0.1.0.0.0.0.0.0.2	example	8-9
# ::node	0.1.0.0.0.0.0.1	cost-01	25-26
# ::node	0.1.0.0.0.0.0.1.0	appeal-02	46-47
# ::node	0.1.0.0.0.0.0.1.0.0	top	21-22
# ::node	0.1.0.0.0.0.0.1.0.1	describe-01	69-70
# ::node	0.1.0.0.0.0.0.1.1	much	42-43
# ::node	0.1.0.0.0.0.0.1.2	date-entity	27-28
# ::node	0.1.0.0.0.0.0.1.2.0	0	27-28
# ::node	0.1.0.0.0.0.0.1.2.1	40	27-28
# ::node	0.1.0.0.0.0.0.1.2.2	67	27-28
# ::node	0.1.0.1	officer	38-39
# ::node	0.1.0.2	army	31-32
# ::node	0.2	and	54-55
# ::root	0	and
# ::edge	and	op1	home	0	0.0	
# ::edge	and	op2	family	0	0.1	
# ::edge	and	op3	and	0	0.2	
# ::edge	appeal-02	ARG0	top	0.1.0.0.0.0.0.1.0	0.1.0.0.0.0.0.1.0.0	
# ::edge	appeal-02	ARG1	cost-01	0.1.0.0.0.0.0.1.0	0.1.0.0.0.0.0.1	
# ::edge	army	op1	have-org-role-91	0.1.0.2	0.1.0	
# ::edge	ask-02	ARG1	day	0.1.0.0.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	build-01	ARG0	day	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	build-01	ARG1	ministry	0.1.0.0.0.0.0	0.1.0.0.0.0	
# ::edge	cost-01	ARG1	build-01	0.1.0.0.0.0.0.1	0.1.0.0.0.0.0	
# ::edge	cost-01	ARG2	much	0.1.0.0.0.0.0.1	0.1.0.0.0.0.0.1.1	
# ::edge	cost-01	time	date-entity	0.1.0.0.0.0.0.1	0.1.0.0.0.0.0.1.2	
# ::edge	date-entity	day	0	0.1.0.0.0.0.0.1.2	0.1.0.0.0.0.0.1.2.0	
# ::edge	date-entity	month	40	0.1.0.0.0.0.0.1.2	0.1.0.0.0.0.0.1.2.1	
# ::edge	date-entity	year	67	0.1.0.0.0.0.0.1.2	0.1.0.0.0.0.0.1.2.2	
# ::edge	day	mod	other	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0.0.1	
# ::edge	defend-01	ARG0	country	0.1.0.0.0	0.1.0.0	
# ::edge	defend-01	ARG2	ministry	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	describe-01	ARG1	appeal-02	0.1.0.0.0.0.0.1.0.1	0.1.0.0.0.0.0.1.0	
# ::edge	example	part	day	0.1.0.0.0.0.0.0.2	0.1.0.0.0.0.0.0	
# ::edge	family	source	have-org-role-91	0.1	0.1.0	
# ::edge	have-org-role-91	ARG1	country	0.1.0	0.1.0.0	
# ::edge	have-org-role-91	ARG2	officer	0.1.0	0.1.0.1	
(a3 / and 
      :op1 (h2 / home) 
      :op2 (f / family 
            :source (h / have-org-role-91 
                  :ARG1 (c2 / country 
                        :ARG0-of (d3 / defend-01 
                              :ARG2 (m2 / ministry 
                                    :ARG1-of (b / build-01 
                                          :ARG0 (d4 / day 
                                                :ARG1-of (a5 / ask-02) 
                                                :mod (o2 / other) 
                                                :part-of (e / example)) 
                                          :ARG1-of (c / cost-01 
                                                :ARG1-of (a2 / appeal-02 
                                                      :ARG0 (t / top) 
                                                      :ARG1-of (d / describe-01)) 
                                                :ARG2 (m / much) 
                                                :time (d2 / date-entity 
                                                      :day 0 
                                                      :month 40 
                                                      :year 67)))))) 
                  :ARG2 (o / officer) 
                  :op-of (a4 / army))) 
      :op3 (a / and))

# ::snt the growth of his support has come mainly from the relatively prosperous middle classes with much of mr collors rightwing support derived from the poorer areas
# ::tok the growth of his support has come mainly from the relatively prosperous middle classes with much of mr collors rightwing support derived from the poorer areas
# ::alignments 25-26|0.0.0.1.1 24-25|0.0.0.1.1.0 21-22|0.0.0.1 20-21|0.0.0 15-16|0.0.1 13-14|0.0 12-13|0.0.0.0.0.0 11-12|0 10-11|0.1 7-8|0.0.0.1.0 4-5|0.0.0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:47.874
# ::node	0	prosper-01	11-12
# ::node	0.0	class	13-14
# ::node	0.0.0	support-01	20-21
# ::node	0.0.0.0	grow-01	1-2
# ::node	0.0.0.0.0	support-01	4-5
# ::node	0.0.0.0.0.0	middle	12-13
# ::node	0.0.0.1	derive-01	21-22
# ::node	0.0.0.1.0	main	7-8
# ::node	0.0.0.1.1	area	25-26
# ::node	0.0.0.1.1.0	poor	24-25
# ::node	0.0.1	much	15-16
# ::node	0.1	relative	10-11
# ::root	0	prosper-01
# ::edge	area	mod	poor	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	class	location	much	0.0	0.0.1	
# ::edge	derive-01	ARG0	main	0.0.0.1	0.0.0.1.0	
# ::edge	derive-01	ARG1	support-01	0.0.0.1	0.0.0	
# ::edge	derive-01	ARG2	area	0.0.0.1	0.0.0.1.1	
# ::edge	grow-01	ARG1	support-01	0.0.0.0	0.0.0.0.0	
# ::edge	prosper-01	ARG0	class	0	0.0	
# ::edge	prosper-01	degree	relative	0	0.1	
# ::edge	support-01	ARG0	grow-01	0.0.0	0.0.0.0	
# ::edge	support-01	ARG1	class	0.0.0	0.0	
# ::edge	support-01	ARG1	middle	0.0.0.0.0	0.0.0.0.0.0	
(p2 / prosper-01 
      :ARG0 (c / class 
            :ARG1-of (s / support-01 
                  :ARG0 (g / grow-01 
                        :ARG1 (s2 / support-01 
                              :ARG1 (m2 / middle))) 
                  :ARG1-of (d / derive-01 
                        :ARG0 (m3 / main) 
                        :ARG2 (a / area 
                              :mod (p / poor)))) 
            :location (m / much)) 
      :degree (r / relative))

# ::snt the socalled collateral source rule has the effect of generally permitting the accident victim to pocket both insurance benefits and unreduced tort damages even when the insurance is mandatory and derived from public funds such as federal social security
# ::tok the socalled collateral source rule has the effect of generally permitting the accident victim to pocket both insurance benefits and unreduced tort damages even when the insurance is mandatory and derived from public funds such as federal social security
# ::alignments 38-39|0.0.0.1.0.0.0.0.0 37-38|0.0.0.1.0.0.0.0.0.1 36-37|0.0.0.1.0.0.0.0.0.0 34-35|0.0.0.0.1 33-34|0.0.0.0 32-33|0.0.0.0.0 30-31|0.2 29-30|0 28-29|0.1 26-27|0.2.0 22-23|0.0.0.1.0.0.1 19-20|0.0.0.1.0.0 18-19|0.0.0.1.0.0.0 17-18|0.0.0.1.0.0.0.0 16-17|0.0.0.1.0 15-16|0.0 13-14|0.0.0.1 12-13|0.0.0.1.0.0.1.0 10-11|0.0.0 9-10|0.0.0.3 7-8|0.0.0.2 4-5|0.0.0.2.0 3-4|0.0.0.2.0.0 2-3|0.0.0.2.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:48.272
# ::node	0	and	29-30
# ::node	0.0	pocket	15-16
# ::node	0.0.0	permit-01	10-11
# ::node	0.0.0.0	fund	33-34
# ::node	0.0.0.0.0	public	32-33
# ::node	0.0.0.0.1	such	34-35
# ::node	0.0.0.1	victim	13-14
# ::node	0.0.0.1.0	both	16-17
# ::node	0.0.0.1.0.0	and	19-20
# ::node	0.0.0.1.0.0.0	benefit-01	18-19
# ::node	0.0.0.1.0.0.0.0	insure-02	17-18
# ::node	0.0.0.1.0.0.0.0.0	security	38-39
# ::node	0.0.0.1.0.0.0.0.0.0	federal	36-37
# ::node	0.0.0.1.0.0.0.0.0.1	society	37-38
# ::node	0.0.0.1.0.0.1	damage-01	22-23
# ::node	0.0.0.1.0.0.1.0	accident	12-13
# ::node	0.0.0.2	effect-01	7-8
# ::node	0.0.0.2.0	rule-03	4-5
# ::node	0.0.0.2.0.0	source	3-4
# ::node	0.0.0.2.0.1	collateral	2-3
# ::node	0.0.0.3	general	9-10
# ::node	0.1	mandatory	28-29
# ::node	0.2	derive-01	30-31
# ::node	0.2.0	insure-02	26-27
# ::root	0	and
# ::edge	and	mod	both	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	and	op1	benefit-01	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	and	op1	mandatory	0	0.1	
# ::edge	and	op2	damage-01	0.0.0.1.0.0	0.0.0.1.0.0.1	
# ::edge	and	op2	derive-01	0	0.2	
# ::edge	benefit-01	ARG1	insure-02	0.0.0.1.0.0.0	0.0.0.1.0.0.0.0	
# ::edge	damage-01	ARG0	accident	0.0.0.1.0.0.1	0.0.0.1.0.0.1.0	
# ::edge	derive-01	ARG1	insure-02	0.2	0.2.0	
# ::edge	effect-01	ARG0	rule-03	0.0.0.2	0.0.0.2.0	
# ::edge	effect-01	ARG1	permit-01	0.0.0.2	0.0.0	
# ::edge	fund	mod	public	0.0.0.0	0.0.0.0.0	
# ::edge	insure-02	ARG1	security	0.0.0.1.0.0.0.0	0.0.0.1.0.0.0.0.0	
# ::edge	permit-01	ARG0	fund	0.0.0	0.0.0.0	
# ::edge	permit-01	ARG1	victim	0.0.0	0.0.0.1	
# ::edge	permit-01	ARG2	pocket	0.0.0	0.0	
# ::edge	permit-01	manner	general	0.0.0	0.0.0.3	
# ::edge	pocket	condition	and	0.0	0	
# ::edge	rule-03	ARG1	source	0.0.0.2.0	0.0.0.2.0.0	
# ::edge	rule-03	mod	collateral	0.0.0.2.0	0.0.0.2.0.1	
# ::edge	security	mod	federal	0.0.0.1.0.0.0.0.0	0.0.0.1.0.0.0.0.0.0	
# ::edge	security	mod	society	0.0.0.1.0.0.0.0.0	0.0.0.1.0.0.0.0.0.1	
# ::edge	such	mod	fund	0.0.0.0.1	0.0.0.0	
# ::edge	victim	purpose	both	0.0.0.1	0.0.0.1.0	
(a / and 
      :condition-of (p2 / pocket 
            :ARG2-of (p3 / permit-01 
                  :ARG0 (f2 / fund 
                        :mod (p / public) 
                        :mod-of (s3 / such)) 
                  :ARG1 (v / victim 
                        :purpose (b2 / both 
                              :mod-of (a2 / and 
                                    :op1 (b / benefit-01 
                                          :ARG1 (i2 / insure-02 
                                                :ARG1 (s / security 
                                                      :mod (f / federal) 
                                                      :mod (s2 / society)))) 
                                    :op2 (d2 / damage-01 
                                          :ARG0 (a3 / accident))))) 
                  :ARG1-of (e / effect-01 
                        :ARG0 (r / rule-03 
                              :ARG1 (s4 / source) 
                              :mod (c / collateral))) 
                  :manner (g / general))) 
      :op1 (m / mandatory) 
      :op2 (d / derive-01 
            :ARG1 (i / insure-02)))

# ::snt this argument derives from an idea with a distinguished academic pedigree
# ::tok this argument derives from an idea with a distinguished academic pedigree
# ::alignments 9-10|0.0.0.0 8-9|0.0.0 5-6|0.0.0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:48.291
# ::node	0	argue-01	1-2
# ::node	0.0	this	0-1
# ::node	0.0.0	distinguish-01	8-9
# ::node	0.0.0.0	academia	9-10
# ::node	0.0.0.1	idea	5-6
# ::root	0	argue-01
# ::edge	argue-01	mod	this	0	0.0	
# ::edge	distinguish-01	ARG0	this	0.0.0	0.0	
# ::edge	distinguish-01	ARG1	academia	0.0.0	0.0.0.0	
# ::edge	idea	mod	distinguish-01	0.0.0.1	0.0.0	
(a2 / argue-01 
      :mod (t / this 
            :ARG0-of (d / distinguish-01 
                  :ARG1 (a / academia) 
                  :mod-of (i / idea))))

# ::snt the first is that insofar as people continue to believe the figures the government derives an unfair advantage
# ::tok the first is that insofar as people continue to believe the figures the government derives an unfair advantage
# ::alignments 17-18|0.1.0 16-17|0.1.0.0.0+0.1.0.0 11-12|0.0 9-10|0 7-8|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:48.315
# ::node	0	believe-01	9-10
# ::node	0.0	figure	11-12
# ::node	0.1	continue-01	7-8
# ::node	0.1.0	advantage	17-18
# ::node	0.1.0.0	fair	16-17
# ::node	0.1.0.0.0	-	16-17
# ::root	0	believe-01
# ::edge	advantage	mod	fair	0.1.0	0.1.0.0	
# ::edge	believe-01	ARG1	figure	0	0.0	
# ::edge	continue-01	ARG0	advantage	0.1	0.1.0	
# ::edge	continue-01	ARG1	believe-01	0.1	0	
# ::edge	fair	polarity	-	0.1.0.0	0.1.0.0.0	
(b / believe-01 
      :ARG1 (f2 / figure) 
      :ARG1-of (c / continue-01 
            :ARG0 (a / advantage 
                  :mod (f / fair 
                        :polarity -))))

# ::snt   keifetz kept a hideaway backup office overlooking central park high up over west 57th street which he used exclusively for his commerce in agricultural products derived from the coca leaf in a complex system whose distribution blanketed all of north america and europe
# ::tok keifetz kept a hideaway backup office overlooking central park high up over west 57th street which he used exclusively for his commerce in agricultural products derived from the coca leaf in a complex system whose distribution blanketed all of north america and europe
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:48.316
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt thus the traditional grounds for identifying genuine nationalisms are either derived from the oppressive context or established by the independent state even if in both cases symbols are borrowed from the past albeit transformed to modern purposes
# ::tok thus the traditional grounds for identifying genuine nationalisms are either derived from the oppressive context or established by the independent state even if in both cases symbols are borrowed from the past albeit transformed to modern purposes
# ::alignments 36-37|0.1 35-36|0.1.0 33-34|0 31-32|0.0 28-29|0.0.0 26-27|0.0.0.1.0+0.0.0.1 25-26|0.0.0.3 24-25|0.0.0.3.0 20-21|0.0.0.2.0 19-20|0.0.0.2.0.0.0+0.0.0.2.0.0 16-17|0.0.0.2 15-16|0.0.0.2.1 14-15|0.0.0.2.1.0.1 13-14|0.0.0.2.1.0.1.0 10-11|0.0.0.2.1.0 9-10|0.0.0.2.1.0.2 6-7|0.0.0.0 3-4|0.0.0.2.1.0.0 2-3|0.0.0.2.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:48.700
# ::node	0	transform-01	33-34
# ::node	0.0	past	31-32
# ::node	0.0.0	borrow-01	28-29
# ::node	0.0.0.0	genuine	6-7
# ::node	0.0.0.1	thing	26-27
# ::node	0.0.0.1.0	symbolize-01	26-27
# ::node	0.0.0.2	establish-01	16-17
# ::node	0.0.0.2.0	state	20-21
# ::node	0.0.0.2.0.0	depend-01	19-20
# ::node	0.0.0.2.0.0.0	-	19-20
# ::node	0.0.0.2.1	or	15-16
# ::node	0.0.0.2.1.0	derive-01	10-11
# ::node	0.0.0.2.1.0.0	ground	3-4
# ::node	0.0.0.2.1.0.0.0	tradition	2-3
# ::node	0.0.0.2.1.0.1	context	14-15
# ::node	0.0.0.2.1.0.1.0	oppress-01	13-14
# ::node	0.0.0.2.1.0.2	either	9-10
# ::node	0.0.0.3	case	25-26
# ::node	0.0.0.3.0	both	24-25
# ::node	0.1	purpose	36-37
# ::node	0.1.0	modern	35-36
# ::root	0	transform-01
# ::edge	borrow-01	ARG0	genuine	0.0.0	0.0.0.0	
# ::edge	borrow-01	ARG1	thing	0.0.0	0.0.0.1	
# ::edge	borrow-01	time	case	0.0.0	0.0.0.3	
# ::edge	borrow-01	time	past	0.0.0	0.0	
# ::edge	case	mod	both	0.0.0.3	0.0.0.3.0	
# ::edge	depend-01	ARG0	state	0.0.0.2.0.0	0.0.0.2.0	
# ::edge	depend-01	polarity	-	0.0.0.2.0.0	0.0.0.2.0.0.0	
# ::edge	derive-01	ARG1	ground	0.0.0.2.1.0	0.0.0.2.1.0.0	
# ::edge	derive-01	manner	context	0.0.0.2.1.0	0.0.0.2.1.0.1	
# ::edge	derive-01	mod	either	0.0.0.2.1.0	0.0.0.2.1.0.2	
# ::edge	establish-01	ARG0	state	0.0.0.2	0.0.0.2.0	
# ::edge	establish-01	purpose	borrow-01	0.0.0.2	0.0.0	
# ::edge	ground	mod	tradition	0.0.0.2.1.0.0	0.0.0.2.1.0.0.0	
# ::edge	oppress-01	ARG0	context	0.0.0.2.1.0.1.0	0.0.0.2.1.0.1	
# ::edge	or	op1	derive-01	0.0.0.2.1	0.0.0.2.1.0	
# ::edge	or	op2	establish-01	0.0.0.2.1	0.0.0.2	
# ::edge	purpose	mod	modern	0.1	0.1.0	
# ::edge	symbolize-01	ARG1	thing	0.0.0.1.0	0.0.0.1	
# ::edge	transform-01	ARG1	past	0	0.0	
# ::edge	transform-01	ARG2	purpose	0	0.1	
(t / transform-01 
      :ARG1 (p2 / past 
            :time-of (b / borrow-01 
                  :ARG0 (g / genuine) 
                  :ARG1 (t2 / thing 
                        :ARG1-of (s / symbolize-01)) 
                  :purpose-of (e / establish-01 
                        :ARG0 (s2 / state 
                              :ARG0-of (d / depend-01 
                                    :polarity -)) 
                        :op-of (o / or 
                              :op1 (d2 / derive-01 
                                    :ARG1 (g2 / ground 
                                          :mod (t3 / tradition)) 
                                    :manner (c2 / context 
                                          :ARG0-of (o2 / oppress-01)) 
                                    :mod (e2 / either)))) 
                  :time (c / case 
                        :mod (b2 / both)))) 
      :ARG2 (p / purpose 
            :mod (m / modern)))

# ::snt their agentrelativity derives according to him from their concern with the agent
# ::tok their agentrelativity derives according to him from their concern with the agent
# ::alignments 11-12|0.0 8-9|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:48.714
# ::node	0	concern-01	8-9
# ::node	0.0	agent	11-12
# ::root	0	concern-01
# ::edge	concern-01	ARG0	agent	0	0.0	
(c / concern-01 
      :ARG0 (a / agent))

# ::snt it is not for nothing that the word martyr is derived from the greek word for witness
# ::tok it is not for nothing that the word martyr is derived from the greek word for witness
# ::alignments 16-17|0.2.0.0+0.2.0 14-15|0.2 10-11|0 8-9|0.1.0+0.1 7-8|0.1.1 4-5|0.0 0-1|0.2.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:48.828
# ::node	0	derive-01	10-11
# ::node	0.0	nothing	4-5
# ::node	0.1	person	8-9
# ::node	0.1.0	martyr-01	8-9
# ::node	0.1.1	word	7-8
# ::node	0.2	word	14-15
# ::node	0.2.0	person	16-17
# ::node	0.2.0.0	witness-01	16-17
# ::node	0.2.0.0.0	it	0-1
# ::root	0	derive-01
# ::edge	derive-01	ARG0	nothing	0	0.0	
# ::edge	derive-01	ARG1	person	0	0.1	
# ::edge	derive-01	ARG2	word	0	0.2	
# ::edge	martyr-01	ARG1	person	0.1.0	0.1	
# ::edge	witness-01	ARG0	person	0.2.0.0	0.2.0	
# ::edge	witness-01	ARG1	it	0.2.0.0	0.2.0.0.0	
# ::edge	word	op1	person	0.1.1	0.1	
# ::edge	word	prep-against	person	0.2	0.2.0	
(d / derive-01 
      :ARG0 (n / nothing) 
      :ARG1 (p2 / person 
            :ARG1-of (m / martyr-01) 
            :op-of (w3 / word)) 
      :ARG2 (w2 / word 
            :prep-against (p / person 
                  :ARG0-of (w / witness-01 
                        :ARG1 (i / it)))))

# ::snt something is instrumentally good if its value derives from the fact that it makes certain consequences more likely or that it can contribute to producing certain consequences
# ::tok something is instrumentally good if its value derives from the fact that it makes certain consequences more likely or that it can contribute to producing certain consequences
# ::alignments 26-27|0.0.0.0.0 25-26|0.0.0.0.0.0 24-25|0.0.0.0 22-23|0.0 21-22|0 20-21|0.0.0 18-19|0.1 17-18|0.1.0 15-16|0.1.0.0 14-15|0.1.0.0.0 12-13|0.0.1 10-11|0.0.1.0 6-7|0.0.2 3-4|0.0.2.0.0 0-1|0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:48.978
# ::node	0	possible	21-22
# ::node	0.0	contribute-01	22-23
# ::node	0.0.0	it	20-21
# ::node	0.0.0.0	produce-01	24-25
# ::node	0.0.0.0.0	consequence	26-27
# ::node	0.0.0.0.0.0	certain	25-26
# ::node	0.0.1	it	12-13
# ::node	0.0.1.0	fact	10-11
# ::node	0.0.2	value-01	6-7
# ::node	0.0.2.0	something	0-1
# ::node	0.0.2.0.0	good	3-4
# ::node	0.1	or	18-19
# ::node	0.1.0	likely	17-18
# ::node	0.1.0.0	consequence	15-16
# ::node	0.1.0.0.0	certain	14-15
# ::root	0	possible
(p2 / possible 
      :mod-of (c3 / contribute-01 
            :ARG0 (i / it 
                  :ARG0-of (p / produce-01 
                        :ARG1 (c / consequence 
                              :mod (c2 / certain)))) 
            :ARG1 (i2 / it 
                  :poss-of (f / fact)) 
            :ARG2 (v / value-01 
                  :ARG0 (s / something 
                        :domain-of (g / good)))) 
      :op-of (o / or 
            :op1 (l / likely 
                  :domain (c4 / consequence 
                        :mod (c5 / certain)))))

# ::snt george is a transvestite a man who derives pleasure from dressing up in womens clothes often feeling compelled to do so
# ::tok george is a transvestite a man who derives pleasure from dressing up in womens clothes often feeling compelled to do so
# ::alignments 20-21|0.0 17-18|0 16-17|0.1 15-16|0.1.1 14-15|0.1.0 10-11|0.1.2 8-9|0.1.2.0 5-6|0.1.2.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:49.034
# ::node	0	compel-01	17-18
# ::node	0.0	so	20-21
# ::node	0.1	feel-01	16-17
# ::node	0.1.0	clothes	14-15
# ::node	0.1.1	often	15-16
# ::node	0.1.2	dress-01	10-11
# ::node	0.1.2.0	pleasure	8-9
# ::node	0.1.2.1	man	5-6
# ::root	0	compel-01
# ::edge	compel-01	ARG1	so	0	0.0	
# ::edge	dress-01	ARG0	pleasure	0.1.2	0.1.2.0	
# ::edge	dress-01	ARG1	man	0.1.2	0.1.2.1	
# ::edge	dress-01	manner	feel-01	0.1.2	0.1	
# ::edge	feel-01	ARG0	clothes	0.1	0.1.0	
# ::edge	feel-01	ARG1	compel-01	0.1	0	
# ::edge	feel-01	frequency	often	0.1	0.1.1	
(c / compel-01 
      :ARG1 (s / so) 
      :ARG1-of (f / feel-01 
            :ARG0 (c2 / clothes) 
            :frequency (o / often) 
            :manner-of (d / dress-01 
                  :ARG0 (p / pleasure) 
                  :ARG1 (m / man))))

# ::snt   robyn derived a considerable satisfaction from uttering this phrase which seemed a very effective putdown of basils arrogant cynicism but of course she then had to explain how she came to be acquainted with danny ram
# ::tok robyn derived a considerable satisfaction from uttering this phrase which seemed a very effective putdown of basils arrogant cynicism but of course she then had to explain how she came to be acquainted with danny ram
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:49.035
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt on the lookout derives extra momentum from this eccentric procedure
# ::tok on the lookout derives extra momentum from this eccentric procedure
# ::alignments 9-10|0.1 7-8|0.1.0 5-6|0 4-5|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:49.047
# ::node	0	momentum	5-6
# ::node	0.0	extra	4-5
# ::node	0.1	procedure	9-10
# ::node	0.1.0	this	7-8
# ::root	0	momentum
# ::edge	momentum	mod	extra	0	0.0	
# ::edge	momentum	poss	procedure	0	0.1	
# ::edge	procedure	mod	this	0.1	0.1.0	
(m / momentum 
      :mod (e / extra) 
      :poss (p / procedure 
            :mod (t / this)))

# ::snt in other cases the supplier may not charge an explicit fee but uses the service as a means to gain a competitive advantage through differentiation which is all the more sustainable if the service is derived from a continuing relationship that competitors cannot share as in the example of the drug distributor with unique access to knowledge about its customers business
# ::tok in other cases the supplier may not charge an explicit fee but uses the service as a means to gain a competitive advantage through differentiation which is all the more sustainable if the service is derived from a continuing relationship that competitors cannot share as in the example of the drug distributor with unique access to knowledge about its customers business
# ::alignments 60-61|0.1.2.0.0.0.0.0.0.0 59-60|0.1.2.0.0.0.0.0.0.0.0 56-57|0.1.2.0.0.0.0.0.0 54-55|0.1.2.0.0.0.0.0 53-54|0.1.2.0.0.0.0.0.1 51-52|0.1.2.0.0.0.0.1.0.0 50-51|0.1.2.0.0.0.0.1.0.0.0 47-48|0.1.2.0.0.0.0.1.0 43-44|0.1.2.0.0.0.0.1 41-42|0.1.2.0.0.0.0 39-40|0.1.2.0.0.0.0.1.1.0 38-39|0.1.2.0.0.0.0.1.1 35-36|0.1.2.0.0.0.0.1.1.0.0 30-31|0.1.2.0.0.0.0.1.1.0.0.0 27-28|0.1.0.0 22-23|0.1.2.0.0 21-22|0.1.2.0.0.0 19-20|0.1.2.0 17-18|0.1.2 12-13|0.1 11-12|0 10-11|0.1.1 9-10|0.1.1.0 5-6|0.0.1+0.0 4-5|0.1.0 2-3|0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:50.533
# ::node	0	contrast-01	11-12
# ::node	0.0	date-entity	5-6
# ::node	0.0.0	case	2-3
# ::node	0.0.0.0	other	1-2
# ::node	0.0.1	5	5-6
# ::node	0.1	use-01	12-13
# ::node	0.1.0	supply-01	4-5
# ::node	0.1.0.0	all	27-28
# ::node	0.1.1	fee	10-11
# ::node	0.1.1.0	explicit	9-10
# ::node	0.1.2	mean-01	17-18
# ::node	0.1.2.0	gain-02	19-20
# ::node	0.1.2.0.0	advantage	22-23
# ::node	0.1.2.0.0.0	compete-01	21-22
# ::node	0.1.2.0.0.0.0	company	41-42
# ::node	0.1.2.0.0.0.0.0	access-01	54-55
# ::node	0.1.2.0.0.0.0.0.0	knowledge	56-57
# ::node	0.1.2.0.0.0.0.0.0.0	business	60-61
# ::node	0.1.2.0.0.0.0.0.0.0.0	customer	59-60
# ::node	0.1.2.0.0.0.0.0.1	unique	53-54
# ::node	0.1.2.0.0.0.0.1	share-01	43-44
# ::node	0.1.2.0.0.0.0.1.0	example	47-48
# ::node	0.1.2.0.0.0.0.1.0.0	distribute-01	51-52
# ::node	0.1.2.0.0.0.0.1.0.0.0	drug	50-51
# ::node	0.1.2.0.0.0.0.1.1	continue-01	38-39
# ::node	0.1.2.0.0.0.0.1.1.0	relationship	39-40
# ::node	0.1.2.0.0.0.0.1.1.0.0	derive-01	35-36
# ::node	0.1.2.0.0.0.0.1.1.0.0.0	sustainable	30-31
# ::root	0	contrast-01
# ::edge	access-01	ARG0	company	0.1.2.0.0.0.0.0	0.1.2.0.0.0.0	
# ::edge	access-01	ARG1	knowledge	0.1.2.0.0.0.0.0	0.1.2.0.0.0.0.0.0	
# ::edge	access-01	mod	unique	0.1.2.0.0.0.0.0	0.1.2.0.0.0.0.0.1	
# ::edge	business	topic	customer	0.1.2.0.0.0.0.0.0.0	0.1.2.0.0.0.0.0.0.0.0	
# ::edge	case	mod	other	0.0.0	0.0.0.0	
# ::edge	compete-01	ARG0	company	0.1.2.0.0.0	0.1.2.0.0.0.0	
# ::edge	compete-01	ARG1	advantage	0.1.2.0.0.0	0.1.2.0.0	
# ::edge	continue-01	ARG1	relationship	0.1.2.0.0.0.0.1.1	0.1.2.0.0.0.0.1.1.0	
# ::edge	continue-01	condition	share-01	0.1.2.0.0.0.0.1.1	0.1.2.0.0.0.0.1	
# ::edge	contrast-01	ARG1	date-entity	0	0.0	
# ::edge	contrast-01	ARG2	use-01	0	0.1	
# ::edge	date-entity	condition	case	0.0	0.0.0	
# ::edge	date-entity	month	5	0.0	0.0.1	
# ::edge	derive-01	ARG1	relationship	0.1.2.0.0.0.0.1.1.0.0	0.1.2.0.0.0.0.1.1.0	
# ::edge	distribute-01	ARG1	drug	0.1.2.0.0.0.0.1.0.0	0.1.2.0.0.0.0.1.0.0.0	
# ::edge	example	mod	distribute-01	0.1.2.0.0.0.0.1.0	0.1.2.0.0.0.0.1.0.0	
# ::edge	fee	mod	explicit	0.1.1	0.1.1.0	
# ::edge	gain-02	ARG1	advantage	0.1.2.0	0.1.2.0.0	
# ::edge	knowledge	location	business	0.1.2.0.0.0.0.0.0	0.1.2.0.0.0.0.0.0.0	
# ::edge	mean-01	ARG1	gain-02	0.1.2	0.1.2.0	
# ::edge	share-01	ARG0	company	0.1.2.0.0.0.0.1	0.1.2.0.0.0.0	
# ::edge	share-01	ARG1	example	0.1.2.0.0.0.0.1	0.1.2.0.0.0.0.1.0	
# ::edge	supply-01	ARG0	all	0.1.0	0.1.0.0	
# ::edge	sustainable	time	derive-01	0.1.2.0.0.0.0.1.1.0.0.0	0.1.2.0.0.0.0.1.1.0.0	
# ::edge	use-01	ARG0	supply-01	0.1	0.1.0	
# ::edge	use-01	ARG1	fee	0.1	0.1.1	
# ::edge	use-01	ARG2	mean-01	0.1	0.1.2	
(c5 / contrast-01 
      :ARG1 (d4 / date-entity 
            :condition (c6 / case 
                  :mod (o / other)) 
            :month 5) 
      :ARG2 (u2 / use-01 
            :ARG0 (s3 / supply-01 
                  :ARG0 (a2 / all)) 
            :ARG1 (f / fee 
                  :mod (e2 / explicit)) 
            :ARG2 (m / mean-01 
                  :ARG1 (g / gain-02 
                        :ARG1 (a3 / advantage 
                              :ARG1-of (c4 / compete-01 
                                    :ARG0 (c2 / company 
                                          :ARG0-of (a / access-01 
                                                :ARG1 (k / knowledge 
                                                      :location (b / business 
                                                            :topic (c / customer))) 
                                                :mod (u / unique)) 
                                          :ARG0-of (s / share-01 
                                                :ARG1 (e / example 
                                                      :mod (d / distribute-01 
                                                            :ARG1 (d2 / drug))) 
                                                :condition-of (c3 / continue-01 
                                                      :ARG1 (r / relationship 
                                                            :ARG1-of (d3 / derive-01 
                                                                  :time-of (s2 / sustainable))))))))))))

# ::snt  he had spent his early years in a largely englishspeaking community at port sudan where his father was a shipping agent hence the acquired dennis his real name is derived from dionysus
# ::tok he had spent his early years in a largely englishspeaking community at port sudan where his father was a shipping agent hence the acquired dennis his real name is derived from dionysus
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:50.534
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the intriguing name of this inn which dates back to the thirteenth century and used to house the magistrates court you can still visit the room where they sat is said to derive from the day in 1875 when the local squire heard his hound call outside
# ::tok the intriguing name of this inn which dates back to the thirteenth century and used to house the magistrates court you can still visit the room where they sat is said to derive from the day in 1875 when the local squire heard his hound call outside
# ::alignments 46-47|0.1.2.0 42-43|0.1.2 40-41|0.0 37-38|0.1.4.0+0.1.4 35-36|0.1.3 32-33|0.1 30-31|0 27-28|0.1.0 25-26|0.1.0.0.3.0 23-24|0.1.0.0 22-23|0.1.0.0.4 21-22|0.1.0.0.3 20-21|0.1.0.0.0 19-20|0.1.0.0.1 16-17|0.1.0.0.1.0.0 14-15|0.1.0.0.1.0 13-14|0.1.0.0.1.0.1 8-9|0.1.0.0.1.0.1.0.0 7-8|0.1.0.0.1.0.1.0 4-5|0.1.1 1-2|0.1.0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:51.546
# ::node	0	say-01	30-31
# ::node	0.0	local	40-41
# ::node	0.1	derive-01	32-33
# ::node	0.1.0	they	27-28
# ::node	0.1.0.0	visit-01	23-24
# ::node	0.1.0.0.0	you	20-21
# ::node	0.1.0.0.1	court	19-20
# ::node	0.1.0.0.1.0	use-01	14-15
# ::node	0.1.0.0.1.0.0	house	16-17
# ::node	0.1.0.0.1.0.1	and	13-14
# ::node	0.1.0.0.1.0.1.0	date	7-8
# ::node	0.1.0.0.1.0.1.0.0	back	8-9
# ::node	0.1.0.0.2	intrigue-01	1-2
# ::node	0.1.0.0.3	possible	21-22
# ::node	0.1.0.0.3.0	room	25-26
# ::node	0.1.0.0.4	still	22-23
# ::node	0.1.1	this	4-5
# ::node	0.1.2	hear-01	42-43
# ::node	0.1.2.0	outside	46-47
# ::node	0.1.3	day	35-36
# ::node	0.1.4	date-entity	37-38
# ::node	0.1.4.0	1875	37-38
# ::root	0	say-01
# ::edge	and	op1	date	0.1.0.0.1.0.1	0.1.0.0.1.0.1.0	
# ::edge	and	op2	use-01	0.1.0.0.1.0.1	0.1.0.0.1.0	
# ::edge	date	direction	back	0.1.0.0.1.0.1.0	0.1.0.0.1.0.1.0.0	
# ::edge	date-entity	year	1875	0.1.4	0.1.4.0	
# ::edge	derive-01	ARG0	they	0.1	0.1.0	
# ::edge	derive-01	ARG1	this	0.1	0.1.1	
# ::edge	derive-01	time	date-entity	0.1	0.1.4	
# ::edge	derive-01	time	day	0.1	0.1.3	
# ::edge	derive-01	time	hear-01	0.1	0.1.2	
# ::edge	hear-01	time	outside	0.1.2	0.1.2.0	
# ::edge	intrigue-01	ARG1	visit-01	0.1.0.0.2	0.1.0.0	
# ::edge	possible	domain	room	0.1.0.0.3	0.1.0.0.3.0	
# ::edge	possible	domain	visit-01	0.1.0.0.3	0.1.0.0	
# ::edge	say-01	ARG0	local	0	0.0	
# ::edge	say-01	ARG1	derive-01	0	0.1	
# ::edge	use-01	ARG1	court	0.1.0.0.1.0	0.1.0.0.1	
# ::edge	use-01	ARG2	house	0.1.0.0.1.0	0.1.0.0.1.0.0	
# ::edge	visit-01	ARG0	you	0.1.0.0	0.1.0.0.0	
# ::edge	visit-01	ARG1	court	0.1.0.0	0.1.0.0.1	
# ::edge	visit-01	ARG2	they	0.1.0.0	0.1.0	
# ::edge	visit-01	mod	still	0.1.0.0	0.1.0.0.4	
(s / say-01 
      :ARG0 (l / local) 
      :ARG1 (d3 / derive-01 
            :ARG0 (t / they 
                  :ARG2-of (v / visit-01 
                        :ARG0 (y / you) 
                        :ARG1 (c / court 
                              :ARG1-of (u / use-01 
                                    :ARG2 (h2 / house) 
                                    :op-of (a / and 
                                          :op1 (d4 / date 
                                                :direction (b / back))))) 
                        :ARG1-of (i / intrigue-01) 
                        :domain-of (p / possible 
                              :domain (r / room)) 
                        :mod (s2 / still))) 
            :ARG1 (t2 / this) 
            :time (h / hear-01 
                  :time (o / outside)) 
            :time (d2 / day) 
            :time (d / date-entity 
                  :year 1875)))

# ::snt that is until my pondering over the implications of miss kentons letter finally opened my eyes to the simple truth that these small errors of recent months have derived from nothing more sinister than a faulty staff plan
# ::tok that is until my pondering over the implications of miss kentons letter finally opened my eyes to the simple truth that these small errors of recent months have derived from nothing more sinister than a faulty staff plan
# ::alignments 37-38|0.0.0 36-37|0.0.1+0.0 35-36|0.0.2 32-33|0 30-31|0.0.0.0 28-29|0.0.0.1 26-27|0.0.0.1.1.1.0+0.0.0.1.1.1 25-26|0.0.0.1.1.1.0.0 23-24|0.0.0.1.1 22-23|0.0.0.1.1.0 19-20|0.0.0.1.0.0.1 18-19|0.0.0.1.0.0.1.0 15-16|0.0.0.1.0.0.0 13-14|0.0.0.1.0.0 12-13|0.0.0.1.0.0.3 11-12|0.0.0.1.0 2-3|0.0.0.1.0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:52.163
# ::node	0	sinister	32-33
# ::node	0.0	person	36-37
# ::node	0.0.0	plan-01	37-38
# ::node	0.0.0.0	nothing	30-31
# ::node	0.0.0.1	derive-01	28-29
# ::node	0.0.0.1.0	letter	11-12
# ::node	0.0.0.1.0.0	open-01	13-14
# ::node	0.0.0.1.0.0.0	eye	15-16
# ::node	0.0.0.1.0.0.1	truth	19-20
# ::node	0.0.0.1.0.0.1.0	simple	18-19
# ::node	0.0.0.1.0.0.2	until	2-3
# ::node	0.0.0.1.0.0.3	final	12-13
# ::node	0.0.0.1.1	error	23-24
# ::node	0.0.0.1.1.0	small	22-23
# ::node	0.0.0.1.1.1	temporal-quantity	26-27
# ::node	0.0.0.1.1.1.0	month	26-27
# ::node	0.0.0.1.1.1.0.0	recent	25-26
# ::node	0.0.1	staff-01	36-37
# ::node	0.0.2	faulty	35-36
# ::root	0	sinister
# ::edge	derive-01	ARG0	letter	0.0.0.1	0.0.0.1.0	
# ::edge	derive-01	ARG1	error	0.0.0.1	0.0.0.1.1	
# ::edge	derive-01	ARG2	plan-01	0.0.0.1	0.0.0	
# ::edge	error	op1	temporal-quantity	0.0.0.1.1	0.0.0.1.1.1	
# ::edge	month	mod	recent	0.0.0.1.1.1.0	0.0.0.1.1.1.0.0	
# ::edge	open-01	ARG0	letter	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	open-01	ARG1	eye	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	open-01	ARG2	truth	0.0.0.1.0.0	0.0.0.1.0.0.1	
# ::edge	open-01	time	final	0.0.0.1.0.0	0.0.0.1.0.0.3	
# ::edge	person	mod	faulty	0.0	0.0.2	
# ::edge	plan-01	ARG0	person	0.0.0	0.0	
# ::edge	plan-01	ARG1	nothing	0.0.0	0.0.0.0	
# ::edge	sinister	domain	person	0	0.0	
# ::edge	small	domain	error	0.0.0.1.1.0	0.0.0.1.1	
# ::edge	staff-01	ARG2	person	0.0.1	0.0	
# ::edge	temporal-quantity	unit	month	0.0.0.1.1.1	0.0.0.1.1.1.0	
# ::edge	truth	mod	simple	0.0.0.1.0.0.1	0.0.0.1.0.0.1.0	
# ::edge	until	op1	open-01	0.0.0.1.0.0.2	0.0.0.1.0.0	
(s2 / sinister 
      :domain (p2 / person 
            :ARG0-of (p / plan-01 
                  :ARG1 (n / nothing) 
                  :ARG2-of (d / derive-01 
                        :ARG0 (l / letter 
                              :ARG0-of (o / open-01 
                                    :ARG1 (e2 / eye) 
                                    :ARG2 (t2 / truth 
                                          :mod (s4 / simple)) 
                                    :op-of (u / until) 
                                    :time (f2 / final))) 
                        :ARG1 (e / error 
                              :domain-of (s3 / small) 
                              :op1 (t / temporal-quantity 
                                    :unit (m / month 
                                          :mod (r / recent)))))) 
            :ARG2-of (s / staff-01) 
            :mod (f / faulty)))

# ::snt the college already derives an income of several thousand pounds a year from the collection of builders yards with their ugly corrugated iron fences along the lane
# ::tok the college already derives an income of several thousand pounds a year from the collection of builders yards with their ugly corrugated iron fences along the lane
# ::alignments 24-25|0.1.1 23-24|0.1 22-23|0 20-21|0.0 17-18|0.1.0.1 14-15|0.1.0 11-12|0.1.0.1.0 7-8|0.1.0.2 5-6|0.1.0.0.0 2-3|0.1.0.3 1-2|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:52.310
# ::node	0	iron	22-23
# ::node	0.0	ugly	20-21
# ::node	0.1	fence	23-24
# ::node	0.1.0	collect-01	14-15
# ::node	0.1.0.0	college	1-2
# ::node	0.1.0.0.0	income	5-6
# ::node	0.1.0.1	yard	17-18
# ::node	0.1.0.1.0	year	11-12
# ::node	0.1.0.2	several	7-8
# ::node	0.1.0.3	already	2-3
# ::node	0.1.1	along	24-25
# ::root	0	iron
# ::edge	collect-01	ARG0	college	0.1.0	0.1.0.0	
# ::edge	collect-01	ARG1	yard	0.1.0	0.1.0.1	
# ::edge	collect-01	ARG2	fence	0.1.0	0.1	
# ::edge	collect-01	manner	several	0.1.0	0.1.0.2	
# ::edge	collect-01	time	already	0.1.0	0.1.0.3	
# ::edge	fence	location	along	0.1	0.1.1	
# ::edge	fence	mod	iron	0.1	0	
# ::edge	income	mod	college	0.1.0.0.0	0.1.0.0	
# ::edge	iron	mod	ugly	0	0.0	
# ::edge	year	mod	yard	0.1.0.1.0	0.1.0.1	
(i / iron 
      :mod (u / ugly) 
      :mod-of (f / fence 
            :ARG2-of (c / collect-01 
                  :ARG0 (c2 / college 
                        :mod-of (i2 / income)) 
                  :ARG1 (y / yard 
                        :mod-of (y2 / year)) 
                  :manner (s / several) 
                  :time (a2 / already)) 
            :location (a / along)))

# ::snt the expensive and dangerous charm of the fbr derives from its ability to breed fissile plutonium 239 for use as its fuel from uraniums most common isotope nonfissionable u238
# ::tok the expensive and dangerous charm of the fbr derives from its ability to breed fissile plutonium 239 for use as its fuel from uraniums most common isotope nonfissionable u238
# ::alignments 26-27|0.0.2 25-26|0.0.0 24-25|0.0.0.0 21-22|0.2.1 18-19|0.2 16-17|0.2.0.0.0.1 15-16|0.2.0.0.0 14-15|0.2.0.0.0.0 13-14|0.2.0.0 11-12|0.2.0 4-5|0.0 3-4|0.0.1 2-3|0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:52.506
# ::node	0	and	2-3
# ::node	0.0	charm-01	4-5
# ::node	0.0.0	common	25-26
# ::node	0.0.0.0	most	24-25
# ::node	0.0.1	dangerous	3-4
# ::node	0.0.2	isotope	26-27
# ::node	0.1	expensive	1-2
# ::node	0.2	use-01	18-19
# ::node	0.2.0	ability	11-12
# ::node	0.2.0.0	breed-01	13-14
# ::node	0.2.0.0.0	plutonium	15-16
# ::node	0.2.0.0.0.0	fissile	14-15
# ::node	0.2.0.0.0.1	239	16-17
# ::node	0.2.1	fuel	21-22
# ::root	0	and
# ::edge	and	op1	expensive	0	0.1	
# ::edge	and	op2	use-01	0	0.2	
# ::edge	breed-01	ARG1	plutonium	0.2.0.0	0.2.0.0.0	
# ::edge	breed-01	instrument	ability	0.2.0.0	0.2.0	
# ::edge	charm-01	ARG1	common	0.0	0.0.0	
# ::edge	charm-01	ARG2	and	0.0	0	
# ::edge	charm-01	mod	dangerous	0.0	0.0.1	
# ::edge	common	degree	most	0.0.0	0.0.0.0	
# ::edge	isotope	op1	charm-01	0.0.2	0.0	
# ::edge	plutonium	mod	239	0.2.0.0.0	0.2.0.0.0.1	
# ::edge	plutonium	mod	fissile	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	use-01	ARG0	ability	0.2	0.2.0	
# ::edge	use-01	ARG1	fuel	0.2	0.2.1	
(a2 / and 
      :ARG2-of (c2 / charm-01 
            :ARG1 (c / common 
                  :degree (m / most)) 
            :mod (d / dangerous) 
            :op-of (i / isotope)) 
      :op1 (e / expensive) 
      :op2 (u / use-01 
            :ARG0 (a / ability 
                  :instrument-of (b / breed-01 
                        :ARG1 (p / plutonium 
                              :mod (f2 / fissile) 
                              :mod 239))) 
            :ARG1 (f / fuel)))

# ::snt locke aims to defend his view that all our ideas derive from experience by consideration of cases such as space time and infinity and some few others
# ::tok locke aims to defend his view that all our ideas derive from experience by consideration of cases such as space time and infinity and some few others
# ::alignments 26-27|0.0.0.1.0.3.1 25-26|0.0.0.1.0.3.1.0 24-25|0.0.0.1.0.3.1.1 23-24|0.0.0.1.0.3 22-23|0.0.0.1.0.2 21-22|0.0.0.1.0 20-21|0.0.0.1.0.3.0 19-20|0.0.0.1.0.3.0.0 17-18|0.0.0.1.0.1.0 16-17|0.0.0.1.0.1 14-15|0.0.0.1.0.0 12-13|0.0.0.1 10-11|0.0.0 9-10|0.0.0.0 7-8|0.0.0.0.0 3-4|0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:52.699
# ::node	0	aim-01	1-2
# ::node	0.0	defend-01	3-4
# ::node	0.0.0	derive-01	10-11
# ::node	0.0.0.0	idea	9-10
# ::node	0.0.0.0.0	all	7-8
# ::node	0.0.0.1	experience-01	12-13
# ::node	0.0.0.1.0	and	21-22
# ::node	0.0.0.1.0.0	consider-02	14-15
# ::node	0.0.0.1.0.1	case	16-17
# ::node	0.0.0.1.0.1.0	such	17-18
# ::node	0.0.0.1.0.2	infinity	22-23
# ::node	0.0.0.1.0.3	and	23-24
# ::node	0.0.0.1.0.3.0	time	20-21
# ::node	0.0.0.1.0.3.0.0	space	19-20
# ::node	0.0.0.1.0.3.1	other	26-27
# ::node	0.0.0.1.0.3.1.0	few	25-26
# ::node	0.0.0.1.0.3.1.1	some	24-25
# ::root	0	aim-01
# ::edge	aim-01	ARG1	defend-01	0	0.0	
# ::edge	and	op1	infinity	0.0.0.1.0	0.0.0.1.0.2	
# ::edge	and	op1	time	0.0.0.1.0.3	0.0.0.1.0.3.0	
# ::edge	and	op2	and	0.0.0.1.0	0.0.0.1.0.3	
# ::edge	and	op2	other	0.0.0.1.0.3	0.0.0.1.0.3.1	
# ::edge	case	example	and	0.0.0.1.0.1	0.0.0.1.0	
# ::edge	consider-02	ARG0	and	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	defend-01	ARG1	derive-01	0.0	0.0.0	
# ::edge	derive-01	ARG0	idea	0.0.0	0.0.0.0	
# ::edge	derive-01	ARG2	experience-01	0.0.0	0.0.0.1	
# ::edge	experience-01	ARG1	and	0.0.0.1	0.0.0.1.0	
# ::edge	idea	quant	all	0.0.0.0	0.0.0.0.0	
# ::edge	other	quant	few	0.0.0.1.0.3.1	0.0.0.1.0.3.1.0	
# ::edge	other	quant	some	0.0.0.1.0.3.1	0.0.0.1.0.3.1.1	
# ::edge	such	mod	case	0.0.0.1.0.1.0	0.0.0.1.0.1	
# ::edge	time	location	space	0.0.0.1.0.3.0	0.0.0.1.0.3.0.0	
(a4 / aim-01 
      :ARG1 (d2 / defend-01 
            :ARG1 (d / derive-01 
                  :ARG0 (i2 / idea 
                        :quant (a3 / all)) 
                  :ARG2 (e / experience-01 
                        :ARG1 (a2 / and 
                              :ARG0-of (c2 / consider-02) 
                              :example-of (c / case 
                                    :mod-of (s3 / such)) 
                              :op1 (i / infinity) 
                              :op2 (a / and 
                                    :op1 (t / time 
                                          :location (s2 / space)) 
                                    :op2 (o / other 
                                          :quant (f / few) 
                                          :quant (s / some))))))))

# ::snt cause unnecessary waste either because of overpackaging or because of an unduly short useful life  use materials derived from threatened species or from threatened environments
# ::tok cause unnecessary waste either because of overpackaging or because of an unduly short useful life use materials derived from threatened species or from threatened environments
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:52.700
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt most of those against were derived from voting figures five years ago on enoch powells embryo bill before the most recent advances in medical science which can help to determine the risks of bearing a genetically handicapped child
# ::tok most of those against were derived from voting figures five years ago on enoch powells embryo bill before the most recent advances in medical science which can help to determine the risks of bearing a genetically handicapped child
# ::alignments 37-38|0.1.0.0.1.0 35-36|0.1.0.0.1.0.0 33-34|0.1.0.0.1 31-32|0.1.0.0 29-30|0.1.0 27-28|0.1.0.1 26-27|0.1.0.1.1 24-25|0.1.0.1.0 23-24|0.1.0.1.0.1 21-22|0.1.0.1.0.0 20-21|0.1.0.1.0.0.1 19-20|0.1.0.1.0.0.1.0 17-18|0.1.0.1.0.0.0 16-17|0.1 10-11|0.1.0.0.0.1+0.1.0.0.0 9-10|0.1.0.0.0.0 8-9|0.0 7-8|0.0.0 5-6|0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:53.966
# ::node	0	derive-01	5-6
# ::node	0.0	figure	8-9
# ::node	0.0.0	vote-01	7-8
# ::node	0.0.0.0	most	0-1
# ::node	0.1	bill	16-17
# ::node	0.1.0	determine-01	29-30
# ::node	0.1.0.0	risk-01	31-32
# ::node	0.1.0.0.0	temporal-quantity	10-11
# ::node	0.1.0.0.0.0	5	9-10
# ::node	0.1.0.0.0.1	year	10-11
# ::node	0.1.0.0.1	bear-02	33-34
# ::node	0.1.0.0.1.0	child	37-38
# ::node	0.1.0.0.1.0.0	genetics	35-36
# ::node	0.1.0.1	help-01	27-28
# ::node	0.1.0.1.0	science	24-25
# ::node	0.1.0.1.0.0	advance-01	21-22
# ::node	0.1.0.1.0.0.0	before	17-18
# ::node	0.1.0.1.0.0.1	recent	20-21
# ::node	0.1.0.1.0.0.1.0	most	19-20
# ::node	0.1.0.1.0.1	medicine	23-24
# ::node	0.1.0.1.1	possible	26-27
# ::root	0	derive-01
# ::edge	advance-01	ARG1	science	0.1.0.1.0.0	0.1.0.1.0	
# ::edge	advance-01	time	recent	0.1.0.1.0.0	0.1.0.1.0.0.1	
# ::edge	bear-02	ARG1	child	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	before	op1	advance-01	0.1.0.1.0.0.0	0.1.0.1.0.0	
# ::edge	derive-01	ARG1	figure	0	0.0	
# ::edge	derive-01	ARG2	bill	0	0.1	
# ::edge	determine-01	ARG0	bill	0.1.0	0.1	
# ::edge	determine-01	ARG1	risk-01	0.1.0	0.1.0.0	
# ::edge	genetics	poss	child	0.1.0.0.1.0.0	0.1.0.0.1.0	
# ::edge	help-01	ARG0	science	0.1.0.1	0.1.0.1.0	
# ::edge	help-01	ARG1	determine-01	0.1.0.1	0.1.0	
# ::edge	possible	domain	help-01	0.1.0.1.1	0.1.0.1	
# ::edge	recent	degree	most	0.1.0.1.0.0.1	0.1.0.1.0.0.1.0	
# ::edge	risk-01	ARG0	temporal-quantity	0.1.0.0	0.1.0.0.0	
# ::edge	risk-01	ARG1	bear-02	0.1.0.0	0.1.0.0.1	
# ::edge	science	mod	medicine	0.1.0.1.0	0.1.0.1.0.1	
# ::edge	temporal-quantity	quant	5	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	temporal-quantity	unit	year	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	vote-01	ARG0	most	0.0.0	0.0.0.0	
# ::edge	vote-01	instrument	figure	0.0.0	0.0	
(d2 / derive-01 
      :ARG1 (f / figure 
            :instrument-of (v / vote-01 
                  :ARG0 (m3 / most))) 
      :ARG2 (b3 / bill 
            :ARG0-of (d / determine-01 
                  :ARG1 (r / risk-01 
                        :ARG0 (t / temporal-quantity 
                              :quant 5 
                              :unit (y / year)) 
                        :ARG1 (b / bear-02 
                              :ARG1 (c / child 
                                    :poss-of (g / genetics)))) 
                  :ARG1-of (h / help-01 
                        :ARG0 (s / science 
                              :ARG1-of (a / advance-01 
                                    :op-of (b2 / before) 
                                    :time (r2 / recent 
                                          :degree (m2 / most))) 
                              :mod (m / medicine)) 
                        :domain-of (p / possible)))))

# ::snt use of online order entry from the field possibly by the customer personnel directly from their own premises to reduce processing lags thus allowing fewer regional warehouses while maintaining or improving average delivery times  analysis of data derived from the operational system to develop tactical and strategic plans dealing with such matters as plant locations capacity planning makeorbuy decisions and the cost savings from longterm sales contracts that stabilize production
# ::tok use of online order entry from the field possibly by the customer personnel directly from their own premises to reduce processing lags thus allowing fewer regional warehouses while maintaining or improving average delivery times analysis of data derived from the operational system to develop tactical and strategic plans dealing with such matters as plant locations capacity planning makeorbuy decisions and the cost savings from longterm sales contracts that stabilize production
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:53.969
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt if we suspect that a philosophical term is employed without any meaning or idea as is but too frequent we need but enquire from what impression is that supposed idea derived
# ::tok if we suspect that a philosophical term is employed without any meaning or idea as is but too frequent we need but enquire from what impression is that supposed idea derived
# ::alignments 30-31|0.1.0 29-30|0.1 28-29|0 25-26|0.0 21-22|0.2.0.1 20-21|0.2.0 19-20|0.2.0.0 18-19|0.2.0.1.1 17-18|0.2.0.1.1.0 16-17|0.2 13-14|0.2.0.1.0.2.2 12-13|0.2.0.1.0.2 11-12|0.2.0.1.0.2.1 10-11|0.2.0.1.0.2.0 8-9|0.2.0.1.0 6-7|0.2.0.1.0.0 5-6|0.2.0.1.0.0.0 2-3|0.2.0.1.0.1 1-2|0.2.0.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:54.736
# ::node	0	suppose-02	28-29
# ::node	0.0	impression	25-26
# ::node	0.1	idea	29-30
# ::node	0.1.0	derive-01	30-31
# ::node	0.2	contrast-01	16-17
# ::node	0.2.0	need-01	20-21
# ::node	0.2.0.0	we	19-20
# ::node	0.2.0.1	contrast-01	21-22
# ::node	0.2.0.1.0	employ-01	8-9
# ::node	0.2.0.1.0.0	term	6-7
# ::node	0.2.0.1.0.0.0	philosophy	5-6
# ::node	0.2.0.1.0.1	suspect-01	2-3
# ::node	0.2.0.1.0.1.0	we	1-2
# ::node	0.2.0.1.0.2	or	12-13
# ::node	0.2.0.1.0.2.0	any	10-11
# ::node	0.2.0.1.0.2.1	mean-01	11-12
# ::node	0.2.0.1.0.2.2	idea	13-14
# ::node	0.2.0.1.1	frequent	18-19
# ::node	0.2.0.1.1.0	too	17-18
# ::root	0	suppose-02
# ::edge	contrast-01	ARG1	employ-01	0.2.0.1	0.2.0.1.0	
# ::edge	contrast-01	ARG1	need-01	0.2	0.2.0	
# ::edge	contrast-01	ARG2	frequent	0.2.0.1	0.2.0.1.1	
# ::edge	contrast-01	ARG2	suppose-02	0.2	0	
# ::edge	contrast-01	ARG4	need-01	0.2.0.1	0.2.0	
# ::edge	derive-01	ARG0	idea	0.1.0	0.1	
# ::edge	employ-01	ARG1	term	0.2.0.1.0	0.2.0.1.0.0	
# ::edge	employ-01	prep-with	or	0.2.0.1.0	0.2.0.1.0.2	
# ::edge	frequent	degree	too	0.2.0.1.1	0.2.0.1.1.0	
# ::edge	need-01	ARG0	we	0.2.0	0.2.0.0	
# ::edge	or	mod	any	0.2.0.1.0.2	0.2.0.1.0.2.0	
# ::edge	or	op1	mean-01	0.2.0.1.0.2	0.2.0.1.0.2.1	
# ::edge	or	op2	idea	0.2.0.1.0.2	0.2.0.1.0.2.2	
# ::edge	suppose-02	ARG0	impression	0	0.0	
# ::edge	suppose-02	ARG1	idea	0	0.1	
# ::edge	suspect-01	ARG0	we	0.2.0.1.0.1	0.2.0.1.0.1.0	
# ::edge	suspect-01	ARG1	employ-01	0.2.0.1.0.1	0.2.0.1.0	
# ::edge	term	mod	philosophy	0.2.0.1.0.0	0.2.0.1.0.0.0	
(s / suppose-02 
      :ARG0 (i2 / impression) 
      :ARG1 (i / idea 
            :ARG0-of (d / derive-01)) 
      :ARG2-of (c2 / contrast-01 
            :ARG1 (n / need-01 
                  :ARG0 (w / we) 
                  :ARG4-of (c / contrast-01 
                        :ARG1 (e / employ-01 
                              :ARG1 (t2 / term 
                                    :mod (p / philosophy)) 
                              :ARG1-of (s2 / suspect-01 
                                    :ARG0 (w2 / we)) 
                              :prep-with (o / or 
                                    :mod (a / any) 
                                    :op1 (m / mean-01) 
                                    :op2 (i3 / idea))) 
                        :ARG2 (f / frequent 
                              :degree (t / too))))))

# ::snt even in the case where the data are derived from a transactionfed database significant costs can be incurred in selecting and processing the data to transform them into the form needed by the model
# ::tok even in the case where the data are derived from a transactionfed database significant costs can be incurred in selecting and processing the data to transform them into the form needed by the model
# ::alignments 33-34|0.0.1.0.0.0.0.0.0 30-31|0.0.1.0.0.0.0.0 29-30|0.0.1.0.0.0.0 25-26|0.0.1.0.0.0 23-24|0.0.1.0.0 21-22|0.0.1.0 20-21|0.0.1 17-18|0.0 15-16|0 14-15|0.0.0 13-14|0.0.0.1 12-13|0.0.0.0 8-9|0.0.0.0.0 6-7|0.0.0.0.0.0 3-4|0.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:55.136
# ::node	0	possible	15-16
# ::node	0.0	incur-01	17-18
# ::node	0.0.0	cost-01	14-15
# ::node	0.0.0.0	database	12-13
# ::node	0.0.0.0.0	derive-01	8-9
# ::node	0.0.0.0.0.0	data	6-7
# ::node	0.0.0.0.0.1	case	3-4
# ::node	0.0.0.1	significant	13-14
# ::node	0.0.1	and	20-21
# ::node	0.0.1.0	process-01	21-22
# ::node	0.0.1.0.0	data	23-24
# ::node	0.0.1.0.0.0	transform-01	25-26
# ::node	0.0.1.0.0.0.0	form	29-30
# ::node	0.0.1.0.0.0.0.0	need-01	30-31
# ::node	0.0.1.0.0.0.0.0.0	model	33-34
# ::root	0	possible
# ::edge	and	op1	process-01	0.0.1	0.0.1.0	
# ::edge	cost-01	ARG1	database	0.0.0	0.0.0.0	
# ::edge	cost-01	mod	significant	0.0.0	0.0.0.1	
# ::edge	derive-01	ARG1	data	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	derive-01	ARG2	database	0.0.0.0.0	0.0.0.0	
# ::edge	derive-01	time	case	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	incur-01	ARG1	cost-01	0.0	0.0.0	
# ::edge	incur-01	ARG2	and	0.0	0.0.1	
# ::edge	need-01	ARG1	form	0.0.1.0.0.0.0.0	0.0.1.0.0.0.0	
# ::edge	need-01	time	model	0.0.1.0.0.0.0.0	0.0.1.0.0.0.0.0.0	
# ::edge	possible	domain	incur-01	0	0.0	
# ::edge	process-01	ARG1	data	0.0.1.0	0.0.1.0.0	
# ::edge	transform-01	ARG1	data	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	transform-01	ARG2	form	0.0.1.0.0.0	0.0.1.0.0.0.0	
(p2 / possible 
      :domain (i / incur-01 
            :ARG1 (c / cost-01 
                  :ARG1 (d2 / database 
                        :ARG2-of (d3 / derive-01 
                              :ARG1 (d4 / data) 
                              :time (c2 / case))) 
                  :mod (s / significant)) 
            :ARG2 (a / and 
                  :op1 (p / process-01 
                        :ARG1 (d / data 
                              :ARG1-of (t / transform-01 
                                    :ARG2 (f / form 
                                          :ARG1-of (n / need-01 
                                                :time (m / model)))))))))

# ::snt our view is that the best guide to an investment managers capability may be derived from the past performance of uk funds under its management says john spiers of best investment publishing
# ::tok our view is that the best guide to an investment managers capability may be derived from the past performance of uk funds under its management says john spiers of best investment publishing
# ::alignments 31-32|0.0 30-31|0.0.0 25-26|0 24-25|0.1.0.0.0.0.1 21-22|0.1 18-19|0.1.0 17-18|0.1.0.1 14-15|0.1.0.0.0.0 12-13|0.1.0.0.0.0.0.0+0.1.0.0.0.0.0 11-12|0.1.0.0 10-11|0.1.0.0.1.1+0.1.0.0.1 9-10|0.1.0.0.1.0 6-7|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:55.499
# ::node	0	say-01	25-26
# ::node	0.0	publish-01	31-32
# ::node	0.0.0	invest-01	30-31
# ::node	0.1	fund	21-22
# ::node	0.1.0	perform-01	18-19
# ::node	0.1.0.0	capable-41	11-12
# ::node	0.1.0.0.0	guide-01	6-7
# ::node	0.1.0.0.0.0	derive-01	14-15
# ::node	0.1.0.0.0.0.0	date-entity	12-13
# ::node	0.1.0.0.0.0.0.0	5	12-13
# ::node	0.1.0.0.0.0.1	manage-01	24-25
# ::node	0.1.0.0.1	person	10-11
# ::node	0.1.0.0.1.0	invest-01	9-10
# ::node	0.1.0.0.1.1	manage-01	10-11
# ::node	0.1.0.1	past	17-18
# ::root	0	say-01
# ::edge	capable-41	ARG1	perform-01	0.1.0.0	0.1.0	
# ::edge	capable-41	ARG2	person	0.1.0.0	0.1.0.0.1	
# ::edge	date-entity	domain	derive-01	0.1.0.0.0.0.0	0.1.0.0.0.0	
# ::edge	date-entity	month	5	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	derive-01	ARG1	guide-01	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	derive-01	manner	manage-01	0.1.0.0.0.0	0.1.0.0.0.0.1	
# ::edge	guide-01	ARG1	capable-41	0.1.0.0.0	0.1.0.0	
# ::edge	invest-01	ARG0	person	0.1.0.0.1.0	0.1.0.0.1	
# ::edge	manage-01	ARG0	person	0.1.0.0.1.1	0.1.0.0.1	
# ::edge	perform-01	ARG1	fund	0.1.0	0.1	
# ::edge	perform-01	time	past	0.1.0	0.1.0.1	
# ::edge	publish-01	ARG2	invest-01	0.0	0.0.0	
# ::edge	say-01	ARG0	publish-01	0	0.0	
# ::edge	say-01	ARG1	fund	0	0.1	
(s / say-01 
      :ARG0 (p / publish-01 
            :ARG2 (i / invest-01)) 
      :ARG1 (f / fund 
            :ARG1-of (p2 / perform-01 
                  :ARG1-of (c / capable-41 
                        :ARG1-of (g / guide-01 
                              :ARG1-of (d / derive-01 
                                    :domain-of (d2 / date-entity 
                                          :month 5) 
                                    :manner (m / manage-01))) 
                        :ARG2 (p4 / person 
                              :ARG0-of (i2 / invest-01) 
                              :ARG0-of (m2 / manage-01))) 
                  :time (p3 / past))))

# ::snt from his victorianclergyman father he may have derived his lust for language and his secret fury from his mother who died when he was 13 his clownish humour and feminine grace
# ::tok from his victorianclergyman father he may have derived his lust for language and his secret fury from his mother who died when he was 13 his clownish humour and feminine grace
# ::alignments 30-31|0.1 28-29|0 27-28|0.1.1 24-25|0.0.0.0.1.0 22-23|0.1.0 20-21|0.0.0.0.1.1 18-19|0.0.0.0.1.2+0.0.0.0.1 15-16|0.0.1 14-15|0.0.1.0 12-13|0.0 11-12|0.0.0.1 7-8|0.0.0 5-6|0.0.0.2.0+0.0.0.2 4-5|0.0.0.0 3-4|0.0.0.0.0.0+0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:56.020
# ::node	0	and	28-29
# ::node	0.0	and	12-13
# ::node	0.0.0	derive-01	7-8
# ::node	0.0.0.0	he	4-5
# ::node	0.0.0.0.0	have-rel-role-91	3-4
# ::node	0.0.0.0.0.0	father	3-4
# ::node	0.0.0.0.1	have-rel-role-91	18-19
# ::node	0.0.0.0.1.0	13	24-25
# ::node	0.0.0.0.1.1	die-01	20-21
# ::node	0.0.0.0.1.2	mother	18-19
# ::node	0.0.0.1	language	11-12
# ::node	0.0.0.2	date-entity	5-6
# ::node	0.0.0.2.0	5	5-6
# ::node	0.0.1	fury	15-16
# ::node	0.0.1.0	secret	14-15
# ::node	0.1	grace-01	30-31
# ::node	0.1.0	he	22-23
# ::node	0.1.1	humour	27-28
# ::root	0	and
# ::edge	and	op1	and	0	0.0	
# ::edge	and	op1	fury	0.0	0.0.1	
# ::edge	and	op2	grace-01	0	0.1	
# ::edge	date-entity	domain	derive-01	0.0.0.2	0.0.0	
# ::edge	date-entity	month	5	0.0.0.2	0.0.0.2.0	
# ::edge	derive-01	ARG0	he	0.0.0	0.0.0.0	
# ::edge	derive-01	ARG1	and	0.0.0	0.0	
# ::edge	derive-01	ARG2	language	0.0.0	0.0.0.1	
# ::edge	die-01	ARG1	have-rel-role-91	0.0.0.0.1.1	0.0.0.0.1	
# ::edge	fury	mod	secret	0.0.1	0.0.1.0	
# ::edge	grace-01	ARG0	he	0.1	0.1.0	
# ::edge	grace-01	ARG1	humour	0.1	0.1.1	
# ::edge	have-rel-role-91	ARG0	13	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	have-rel-role-91	ARG1	he	0.0.0.0.0	0.0.0.0	
# ::edge	have-rel-role-91	ARG1	he	0.0.0.0.1	0.0.0.0	
# ::edge	have-rel-role-91	ARG2	father	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	have-rel-role-91	ARG2	mother	0.0.0.0.1	0.0.0.0.1.2	
(a / and 
      :op1 (a2 / and 
            :ARG1-of (d2 / derive-01 
                  :ARG0 (h4 / he 
                        :ARG1-of (h5 / have-rel-role-91 
                              :ARG2 (f2 / father)) 
                        :ARG1-of (h3 / have-rel-role-91 
                              :ARG0 13 
                              :ARG1-of (d / die-01) 
                              :ARG2 (m / mother))) 
                  :ARG2 (l / language) 
                  :domain-of (d3 / date-entity 
                        :month 5)) 
            :op1 (f / fury 
                  :mod (s / secret))) 
      :op2 (g / grace-01 
            :ARG0 (h2 / he) 
            :ARG1 (h / humour)))

# ::snt the efforts of the survivors though prodigious enough derive less from the sweat of the brow than from thew exertions of the machines they direct from on high
# ::tok the efforts of the survivors though prodigious enough derive less from the sweat of the brow than from thew exertions of the machines they direct from on high
# ::alignments 27-28|0.4 24-25|0.0 23-24|0.0.0 22-23|0.3 12-13|0.2 9-10|0.2.0 8-9|0 7-8|0.5 4-5|0.1+0.1.0 1-2|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:56.121
# ::node	0	derive-01	8-9
# ::node	0.0	direct	24-25
# ::node	0.0.0	they	23-24
# ::node	0.1	survive-01	4-5
# ::node	0.1.0	person	4-5
# ::node	0.1.0.0	effort	1-2
# ::node	0.2	sweat	12-13
# ::node	0.2.0	less	9-10
# ::node	0.3	machine	22-23
# ::node	0.4	high	27-28
# ::node	0.5	enough	7-8
# ::root	0	derive-01
# ::edge	derive-01	ARG0	direct	0	0.0	
# ::edge	derive-01	ARG2	sweat	0	0.2	
# ::edge	derive-01	quant	enough	0	0.5	
# ::edge	direct	op1	they	0.0	0.0.0	
# ::edge	effort	prep-against	person	0.1.0.0	0.1.0	
# ::edge	high	op1	derive-01	0.4	0	
# ::edge	machine	op1	derive-01	0.3	0	
# ::edge	survive-01	ARG0	person	0.1	0.1.0	
# ::edge	survive-01	ARG1	derive-01	0.1	0	
# ::edge	sweat	mod	less	0.2	0.2.0	
(d2 / derive-01 
      :ARG0 (d / direct 
            :op1 (t / they)) 
      :ARG1-of (s2 / survive-01 
            :ARG0 (p / person 
                  :prep-against-of (e2 / effort))) 
      :ARG2 (s / sweat 
            :mod (l / less)) 
      :op-of (m / machine) 
      :op-of (h / high) 
      :quant (e / enough))

# ::snt madrid  confidence derived from wall streets gains took shares higher with the index 0
# ::tok madrid confidence derived from wall streets gains took shares higher with the index 0
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:56.122
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt an important empiricist feature in gassendi and locke was the view that all our ideas are derived from experience
# ::tok an important empiricist feature in gassendi and locke was the view that all our ideas are derived from experience
# ::alignments 18-19|0 16-17|0.1 14-15|0.1.0 12-13|0.1.0.0 6-7|0.0 3-4|0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:56.160
# ::node	0	experience-01	18-19
# ::node	0.0	and	6-7
# ::node	0.0.0	feature-01	3-4
# ::node	0.0.0.0	important	1-2
# ::node	0.1	derive-01	16-17
# ::node	0.1.0	idea	14-15
# ::node	0.1.0.0	all	12-13
# ::root	0	experience-01
# ::edge	derive-01	ARG1	idea	0.1	0.1.0	
# ::edge	derive-01	ARG2	experience-01	0.1	0	
# ::edge	experience-01	ARG1	and	0	0.0	
# ::edge	feature-01	ARG1	and	0.0.0	0.0	
# ::edge	feature-01	mod	important	0.0.0	0.0.0.0	
# ::edge	idea	quant	all	0.1.0	0.1.0.0	
(e / experience-01 
      :ARG1 (a2 / and 
            :ARG1-of (f / feature-01 
                  :mod (i2 / important))) 
      :ARG2-of (d / derive-01 
            :ARG1 (i / idea 
                  :quant (a / all))))

# ::snt in law v national greyhound racing club 1983 1 wlr 1302 the court of appeal held that the authority of the stewards of the national greyhound racing club to suspend a trainers licence had been derived wholly from a contract between him and the club and that the status of the stewards was that of a domestic tribunal
# ::tok in law v national greyhound racing club 1983 1 wlr 1302 the court of appeal held that the authority of the stewards of the national greyhound racing club to suspend a trainers licence had been derived wholly from a contract between him and the club and that the status of the stewards was that of a domestic tribunal
# ::alignments 57-58|0.0.1.0.0 56-57|0.0.1.0 48-49|0.0.1.3.0.0.0 45-46|0.0 44-45|0.1 42-43|0 40-41|0.0.1.1.0.0 39-40|0.0.1.1.0 36-37|0.0.1.4 35-36|0.0.1 32-33|0.0.1.3.1 31-32|0.0.1.3.1.0 29-30|0.0.1.3 27-28|0.0.1.3.0 26-27|0.0.1.3.0.0 24-25|0.0.1.3.0.1 18-19|0.0.1.1 14-15|0.0.1.2 12-13|0.0.0 10-11|0.0.2.0+0.0.2 8-9|0.0.1.3.0.0.1.1 7-8|0.0.1.3.2.0+0.0.1.3.2 6-7|0.0.1.3.0.0.1.0 5-6|0.0.1.3.0.0.1 3-4|0.0.1.3.0.0.1.0.0 1-2|0.0.1.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:56.977
# ::node	0	and	42-43
# ::node	0.0	and	45-46
# ::node	0.0.0	court	12-13
# ::node	0.0.1	derive-01	35-36
# ::node	0.0.1.0	domestic	56-57
# ::node	0.0.1.0.0	tribunal	57-58
# ::node	0.0.1.1	authority	18-19
# ::node	0.0.1.1.0	contract-02	39-40
# ::node	0.0.1.1.0.0	between	40-41
# ::node	0.0.1.2	appeal-02	14-15
# ::node	0.0.1.2.0	law	1-2
# ::node	0.0.1.3	suspend-01	29-30
# ::node	0.0.1.3.0	club	27-28
# ::node	0.0.1.3.0.0	race-01	26-27
# ::node	0.0.1.3.0.0.0	status	48-49
# ::node	0.0.1.3.0.0.1	race-01	5-6
# ::node	0.0.1.3.0.0.1.0	club	6-7
# ::node	0.0.1.3.0.0.1.0.0	nation	3-4
# ::node	0.0.1.3.0.0.1.1	1	8-9
# ::node	0.0.1.3.0.1	nation	24-25
# ::node	0.0.1.3.1	licence	32-33
# ::node	0.0.1.3.1.0	train-01	31-32
# ::node	0.0.1.3.2	date-entity	7-8
# ::node	0.0.1.3.2.0	1983	7-8
# ::node	0.0.1.4	whole	36-37
# ::node	0.0.2	date-entity	10-11
# ::node	0.0.2.0	1302	10-11
# ::node	0.1	club	44-45
# ::root	0	and
# ::edge	1	op1	race-01	0.0.1.3.0.0.1.1	0.0.1.3.0.0.1	
# ::edge	and	op1	club	0	0.1	
# ::edge	and	op1	court	0.0	0.0.0	
# ::edge	and	op2	derive-01	0.0	0.0.1	
# ::edge	and	op3	and	0.0	0	
# ::edge	appeal-02	ARG0	law	0.0.1.2	0.0.1.2.0	
# ::edge	appeal-02	ARG1	derive-01	0.0.1.2	0.0.1	
# ::edge	club	mod	nation	0.0.1.3.0	0.0.1.3.0.1	
# ::edge	club	mod	nation	0.0.1.3.0.0.1.0	0.0.1.3.0.0.1.0.0	
# ::edge	contract-02	ARG1	authority	0.0.1.1.0	0.0.1.1	
# ::edge	contract-02	location	between	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	date-entity	purpose	and	0.0.2	0.0	
# ::edge	date-entity	year	1302	0.0.2	0.0.2.0	
# ::edge	date-entity	year	1983	0.0.1.3.2	0.0.1.3.2.0	
# ::edge	derive-01	ARG0	domestic	0.0.1	0.0.1.0	
# ::edge	derive-01	ARG1	authority	0.0.1	0.0.1.1	
# ::edge	derive-01	manner	whole	0.0.1	0.0.1.4	
# ::edge	race-01	ARG0	club	0.0.1.3.0.0	0.0.1.3.0	
# ::edge	race-01	ARG0	club	0.0.1.3.0.0.1	0.0.1.3.0.0.1.0	
# ::edge	race-01	ARG1	race-01	0.0.1.3.0.0.1	0.0.1.3.0.0	
# ::edge	race-01	ARG1	status	0.0.1.3.0.0	0.0.1.3.0.0.0	
# ::edge	suspend-01	ARG0	club	0.0.1.3	0.0.1.3.0	
# ::edge	suspend-01	ARG1	licence	0.0.1.3	0.0.1.3.1	
# ::edge	suspend-01	condition	derive-01	0.0.1.3	0.0.1	
# ::edge	suspend-01	time	date-entity	0.0.1.3	0.0.1.3.2	
# ::edge	train-01	ARG1	licence	0.0.1.3.1.0	0.0.1.3.1	
# ::edge	tribunal	mod	domestic	0.0.1.0.0	0.0.1.0	
(a2 / and 
      :op-of (a / and 
            :op1 (c4 / court) 
            :op2 (d2 / derive-01 
                  :ARG0 (d / domestic 
                        :mod-of (t / tribunal)) 
                  :ARG1 (a3 / authority 
                        :ARG1-of (c2 / contract-02 
                              :location (b / between))) 
                  :ARG1-of (a4 / appeal-02 
                        :ARG0 (l2 / law)) 
                  :condition-of (s2 / suspend-01 
                        :ARG0 (c3 / club 
                              :ARG0-of (r / race-01 
                                    :ARG1 (s / status) 
                                    :ARG1-of (r2 / race-01 
                                          :ARG0 (c5 / club 
                                                :mod (n2 / nation)) 
                                          :op-of 1)) 
                              :mod (n / nation)) 
                        :ARG1 (l / licence 
                              :ARG1-of (t2 / train-01)) 
                        :time (d4 / date-entity 
                              :year 1983)) 
                  :manner (w / whole)) 
            :purpose-of (d3 / date-entity 
                  :year 1302)) 
      :op1 (c / club))

# ::snt its common name is derived from the whoop children make as they  desperately struggle to inhale after a coughing spasm
# ::tok its common name is derived from the whoop children make as they desperately struggle to inhale after a coughing spasm
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:56.978
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt they may be either derived directly from a body  of magma deep below ground or more commonly they may be ordinary  surface waters which have found their way underground and come into  contact with hot rocks
# ::tok they may be either derived directly from a body of magma deep below ground or more commonly they may be ordinary surface waters which have found their way underground and come into contact with hot rocks
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:56.980
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt from this early terror lewis derived his violent distaste for insects
# ::tok from this early terror lewis derived his violent distaste for insects
# ::alignments 7-8|0 5-6|0.0.0.0 3-4|0.0.0 2-3|0.0 1-2|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:56.998
# ::node	0	violent	7-8
# ::node	0.0	early	2-3
# ::node	0.0.0	terror	3-4
# ::node	0.0.0.0	derive-01	5-6
# ::node	0.0.0.0.0	this	1-2
# ::root	0	violent
(v / violent 
      :op-of (e / early 
            :mod-of (t / terror 
                  :ARG1-of (d / derive-01 
                        :condition-of (t2 / this)))))

# ::snt but yeatss revelations were derived from the great memory and joyces from the objective world
# ::tok but yeatss revelations were derived from the great memory and joyces from the objective world
# ::alignments 14-15|0.0.0.0 13-14|0.0.0.0.0 9-10|0.0.2 8-9|0.0.1 7-8|0.0.1.0 4-5|0.0 2-3|0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:57.042
# ::node	0	contrast-01	0-1
# ::node	0.0	derive-01	4-5
# ::node	0.0.0	reveal-01	2-3
# ::node	0.0.0.0	world	14-15
# ::node	0.0.0.0.0	objective	13-14
# ::node	0.0.1	memory	8-9
# ::node	0.0.1.0	great	7-8
# ::node	0.0.2	and	9-10
# ::root	0	contrast-01
# ::edge	and	op1	derive-01	0.0.2	0.0	
# ::edge	contrast-01	ARG1	derive-01	0	0.0	
# ::edge	derive-01	ARG1	reveal-01	0.0	0.0.0	
# ::edge	derive-01	ARG2	memory	0.0	0.0.1	
# ::edge	memory	mod	great	0.0.1	0.0.1.0	
# ::edge	world	mod	objective	0.0.0.0	0.0.0.0.0	
# ::edge	world	op1	reveal-01	0.0.0.0	0.0.0	
(c / contrast-01 
      :ARG1 (d / derive-01 
            :ARG1 (r / reveal-01 
                  :op-of (w / world 
                        :mod (o / objective))) 
            :ARG2 (m / memory 
                  :mod (g / great)) 
            :op-of (a / and)))

# ::snt  from that experience he derived an ideal of stage unity stemming from a close collaboration regardless as far as possible of individual prestige and personality which was reinforced by working in the group theatre of the thirties with auden isherwood spender britten and others
# ::tok from that experience he derived an ideal of stage unity stemming from a close collaboration regardless as far as possible of individual prestige and personality which was reinforced by working in the group theatre of the thirties with auden isherwood spender britten and others
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:57.043
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt even mothers may feel inhibited about touching or deriving sensual pleasure from watching their children grow out of chubby babyhood
# ::tok even mothers may feel inhibited about touching or deriving sensual pleasure from watching their children grow out of chubby babyhood
# ::alignments 15-16|0.1.0.0.0 14-15|0.1.0.0.0.0 12-13|0.1.0.0 10-11|0.1.0 7-8|0.1.1 6-7|0.1 3-4|0 2-3|0.2.0+0.2 1-2|0.0+0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:57.171
# ::node	0	feel-01	3-4
# ::node	0.0	mother	1-2
# ::node	0.0.0	have-rel-role-91	1-2
# ::node	0.1	touch-01	6-7
# ::node	0.1.0	pleasure	10-11
# ::node	0.1.0.0	watch-01	12-13
# ::node	0.1.0.0.0	grow-01	15-16
# ::node	0.1.0.0.0.0	child	14-15
# ::node	0.1.1	or	7-8
# ::node	0.2	date-entity	2-3
# ::node	0.2.0	5	2-3
# ::root	0	feel-01
# ::edge	date-entity	domain	feel-01	0.2	0	
# ::edge	date-entity	month	5	0.2	0.2.0	
# ::edge	feel-01	ARG0	mother	0	0.0	
# ::edge	feel-01	ARG2	touch-01	0	0.1	
# ::edge	grow-01	ARG0	child	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	have-rel-role-91	ARG2	mother	0.0.0	0.0	
# ::edge	or	op1	touch-01	0.1.1	0.1	
# ::edge	touch-01	ARG1	pleasure	0.1	0.1.0	
# ::edge	watch-01	ARG0	pleasure	0.1.0.0	0.1.0	
# ::edge	watch-01	ARG1	grow-01	0.1.0.0	0.1.0.0.0	
(f / feel-01 
      :ARG0 (m / mother 
            :ARG2-of (h / have-rel-role-91)) 
      :ARG2 (t / touch-01 
            :ARG1 (p / pleasure 
                  :ARG0-of (w / watch-01 
                        :ARG1 (g / grow-01 
                              :ARG0 (c / child)))) 
            :op-of (o / or)) 
      :domain-of (d / date-entity 
            :month 5))

# ::snt a film like mary janes mishap 1903 in which an uncouth maid who has been a little careless with the paraffin evaporates through the chimney but returns in ghostly form to visit her grave derives its fantasy elements from magic lantern shows whereas the big swallow 1901 which shows camera and cameraman being swallowed up in a restless jaw is more evidently a response to the mediums possibilities
# ::tok a film like mary janes mishap 1903 in which an uncouth maid who has been a little careless with the paraffin evaporates through the chimney but returns in ghostly form to visit her grave derives its fantasy elements from magic lantern shows whereas the big swallow 1901 which shows camera and cameraman being swallowed up in a restless jaw is more evidently a response to the mediums possibilities
# ::alignments 67-68|0.2.2.1.0.0.1.0.1.0 63-64|0.2.2.1.0.0.1.0.1 61-62|0.2.2.1.0.0.0.0 58-59|0.2.2.1.0.0.1.0.0.0.0 57-58|0.2.2.1.0.0.1.0.0.0 50-51|0.2.2.1.0.0.1.2 49-50|0.2.2.1.0.0.1.1 48-49|0.2.2.1.0.0.1 46-47|0.2.2.1.0.0.1.0.3+0.2.2.1.0.0.1.0 45-46|0.2.2.1.0.0.1.0.0 44-45|0.2.2.1.0.0.1.0.2 42-43|0.2.2.1.0.0.0.1 41-42|0.2.2.1.0.0.0 39-40|0.2.2.1.0.0.0.2 37-38|0.2.2.1.0.0 36-37|0.2.2.1.0 33-34|0.2.2.1 31-32|0.2.2 29-30|0.2.2.0 28-29|0.2.2.0.0 26-27|0.2 25-26|0 17-18|0.1 16-17|0.1.1 11-12|0.2.0 6-7|0.1.0.0+0.1.0 5-6|0.2.1 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:59.489
# ::node	0	contrast-01	25-26
# ::node	0.0	film	1-2
# ::node	0.1	care-01	17-18
# ::node	0.1.0	date-entity	6-7
# ::node	0.1.0.0	1903	6-7
# ::node	0.1.1	little	16-17
# ::node	0.2	return-02	26-27
# ::node	0.2.0	maid	11-12
# ::node	0.2.1	mishap	5-6
# ::node	0.2.2	visit-01	31-32
# ::node	0.2.2.0	form	29-30
# ::node	0.2.2.0.0	ghostly	28-29
# ::node	0.2.2.1	grave	33-34
# ::node	0.2.2.1.0	fantasy	36-37
# ::node	0.2.2.1.0.0	element	37-38
# ::node	0.2.2.1.0.0.0	show-01	41-42
# ::node	0.2.2.1.0.0.0.0	evident	61-62
# ::node	0.2.2.1.0.0.0.1	whereas	42-43
# ::node	0.2.2.1.0.0.0.2	magic	39-40
# ::node	0.2.2.1.0.0.1	show-01	48-49
# ::node	0.2.2.1.0.0.1.0	date-entity	46-47
# ::node	0.2.2.1.0.0.1.0.0	swallow-01	45-46
# ::node	0.2.2.1.0.0.1.0.0.0	restless	57-58
# ::node	0.2.2.1.0.0.1.0.0.0.0	jaw	58-59
# ::node	0.2.2.1.0.0.1.0.1	respond-01	63-64
# ::node	0.2.2.1.0.0.1.0.1.0	possible	67-68
# ::node	0.2.2.1.0.0.1.0.2	big	44-45
# ::node	0.2.2.1.0.0.1.0.3	1901	46-47
# ::node	0.2.2.1.0.0.1.1	camera	49-50
# ::node	0.2.2.1.0.0.1.2	and	50-51
# ::root	0	contrast-01
# ::edge	and	op1	show-01	0.2.2.1.0.0.1.2	0.2.2.1.0.0.1	
# ::edge	care-01	ARG1	date-entity	0.1	0.1.0	
# ::edge	care-01	degree	little	0.1	0.1.1	
# ::edge	contrast-01	ARG0	film	0	0.0	
# ::edge	contrast-01	ARG1	care-01	0	0.1	
# ::edge	contrast-01	ARG2	return-02	0	0.2	
# ::edge	date-entity	mod	big	0.2.2.1.0.0.1.0	0.2.2.1.0.0.1.0.2	
# ::edge	date-entity	year	1901	0.2.2.1.0.0.1.0	0.2.2.1.0.0.1.0.3	
# ::edge	date-entity	year	1903	0.1.0	0.1.0.0	
# ::edge	element	mod	fantasy	0.2.2.1.0.0	0.2.2.1.0	
# ::edge	fantasy	poss	grave	0.2.2.1.0	0.2.2.1	
# ::edge	form	mod	ghostly	0.2.2.0	0.2.2.0.0	
# ::edge	jaw	mod	restless	0.2.2.1.0.0.1.0.0.0.0	0.2.2.1.0.0.1.0.0.0	
# ::edge	respond-01	ARG1	possible	0.2.2.1.0.0.1.0.1	0.2.2.1.0.0.1.0.1.0	
# ::edge	respond-01	ARG2	date-entity	0.2.2.1.0.0.1.0.1	0.2.2.1.0.0.1.0	
# ::edge	return-02	ARG0	maid	0.2	0.2.0	
# ::edge	return-02	ARG1	mishap	0.2	0.2.1	
# ::edge	return-02	purpose	visit-01	0.2	0.2.2	
# ::edge	show-01	ARG0	date-entity	0.2.2.1.0.0.1	0.2.2.1.0.0.1.0	
# ::edge	show-01	ARG0	evident	0.2.2.1.0.0.0	0.2.2.1.0.0.0.0	
# ::edge	show-01	ARG1	camera	0.2.2.1.0.0.1	0.2.2.1.0.0.1.1	
# ::edge	show-01	ARG1	element	0.2.2.1.0.0.0	0.2.2.1.0.0	
# ::edge	show-01	ARG2	element	0.2.2.1.0.0.1	0.2.2.1.0.0	
# ::edge	show-01	ARG2	whereas	0.2.2.1.0.0.0	0.2.2.1.0.0.0.1	
# ::edge	show-01	mod	magic	0.2.2.1.0.0.0	0.2.2.1.0.0.0.2	
# ::edge	swallow-01	ARG0	restless	0.2.2.1.0.0.1.0.0	0.2.2.1.0.0.1.0.0.0	
# ::edge	swallow-01	ARG1	date-entity	0.2.2.1.0.0.1.0.0	0.2.2.1.0.0.1.0	
# ::edge	visit-01	ARG0	form	0.2.2	0.2.2.0	
# ::edge	visit-01	ARG1	grave	0.2.2	0.2.2.1	
(c2 / contrast-01 
      :ARG0 (f3 / film) 
      :ARG1 (c3 / care-01 
            :ARG1 (d2 / date-entity 
                  :year 1903) 
            :degree (l / little)) 
      :ARG2 (r3 / return-02 
            :ARG0 (m2 / maid) 
            :ARG1 (m3 / mishap) 
            :purpose (v / visit-01 
                  :ARG0 (f2 / form 
                        :mod (g2 / ghostly)) 
                  :ARG1 (g / grave 
                        :poss-of (f / fantasy 
                              :mod-of (e2 / element 
                                    :ARG1-of (s3 / show-01 
                                          :ARG0 (e / evident) 
                                          :ARG2 (w / whereas) 
                                          :mod (m / magic)) 
                                    :ARG2-of (s / show-01 
                                          :ARG0 (d / date-entity 
                                                :ARG1-of (s2 / swallow-01 
                                                      :ARG0 (r2 / restless 
                                                            :mod-of (j / jaw))) 
                                                :ARG2-of (r / respond-01 
                                                      :ARG1 (p / possible)) 
                                                :mod (b / big) 
                                                :year 1901) 
                                          :ARG1 (c / camera) 
                                          :op-of (a / and))))))))

# ::snt and what in any case did these radical critics of social change in fact propose to offer  they were like tawney and webb before them clear about the injustices and the distortions in the contemporary system but what kind of programme could be derived from their aching nostalgia for a workingclass world that was slipping away
# ::tok and what in any case did these radical critics of social change in fact propose to offer they were like tawney and webb before them clear about the injustices and the distortions in the contemporary system but what kind of programme could be derived from their aching nostalgia for a workingclass world that was slipping away
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:59.492
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt one consents to the establishment of a political society and to its authority because of the benefits one will derive from its existence
# ::tok one consents to the establishment of a political society and to its authority because of the benefits one will derive from its existence
# ::alignments 22-23|0.1.0 19-20|0.1.0.0 16-17|0.1.0.0.0 13-14|0 12-13|0.0 9-10|0.1 8-9|0.1.1.0 7-8|0.1.1.0.0 4-5|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:59.552
# ::node	0	cause-01	13-14
# ::node	0.0	authority	12-13
# ::node	0.1	and	9-10
# ::node	0.1.0	exist-01	22-23
# ::node	0.1.0.0	derive-01	19-20
# ::node	0.1.0.0.0	benefit-01	16-17
# ::node	0.1.1	establish-01	4-5
# ::node	0.1.1.0	society	8-9
# ::node	0.1.1.0.0	politics	7-8
# ::root	0	cause-01
# ::edge	and	op1	establish-01	0.1	0.1.1	
# ::edge	cause-01	ARG0	authority	0	0.0	
# ::edge	cause-01	ARG1	and	0	0.1	
# ::edge	derive-01	ARG1	benefit-01	0.1.0.0	0.1.0.0.0	
# ::edge	derive-01	ARG2	exist-01	0.1.0.0	0.1.0	
# ::edge	establish-01	ARG1	society	0.1.1	0.1.1.0	
# ::edge	exist-01	ARG1	and	0.1.0	0.1	
# ::edge	society	mod	politics	0.1.1.0	0.1.1.0.0	
(c / cause-01 
      :ARG0 (a / authority) 
      :ARG1 (a2 / and 
            :ARG1-of (e / exist-01 
                  :ARG2-of (d / derive-01 
                        :ARG1 (b / benefit-01))) 
            :op1 (e2 / establish-01 
                  :ARG1 (s / society 
                        :mod (p / politics)))))

# ::snt even though deontological and teleological considerations are distinct they derive from a common moral core
# ::tok even though deontological and teleological considerations are distinct they derive from a common moral core
# ::alignments 14-15|0.0.1.1 13-14|0.0.1.1.1 12-13|0.0.1.1.0 9-10|0.0.1 8-9|0.0.1.0 7-8|0 5-6|0.0 3-4|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:10:59.582
# ::node	0	distinct	7-8
# ::node	0.0	consider-01	5-6
# ::node	0.0.0	and	3-4
# ::node	0.0.1	derive-01	9-10
# ::node	0.0.1.0	they	8-9
# ::node	0.0.1.1	core	14-15
# ::node	0.0.1.1.0	common	12-13
# ::node	0.0.1.1.1	moral	13-14
# ::root	0	distinct
# ::edge	consider-01	ARG1	and	0.0	0.0.0	
# ::edge	core	mod	common	0.0.1.1	0.0.1.1.0	
# ::edge	core	mod	moral	0.0.1.1	0.0.1.1.1	
# ::edge	derive-01	ARG0	they	0.0.1	0.0.1.0	
# ::edge	derive-01	ARG1	consider-01	0.0.1	0.0	
# ::edge	derive-01	ARG2	core	0.0.1	0.0.1.1	
# ::edge	distinct	domain	consider-01	0	0.0	
(d2 / distinct 
      :domain (c3 / consider-01 
            :ARG1 (a / and) 
            :ARG1-of (d / derive-01 
                  :ARG0 (t / they) 
                  :ARG2 (c / core 
                        :mod (c2 / common) 
                        :mod (m / moral)))))

# ::snt the man himself enjoyed a reputation as one of west germanys most influential industrialists and the honours he received derived from international recognition as an outstanding electronics engineer
# ::tok the man himself enjoyed a reputation as one of west germanys most influential industrialists and the honours he received derived from international recognition as an outstanding electronics engineer
# ::alignments 27-28|0.0 26-27|0.0.0 25-26|0.0.1 22-23|0 21-22|0.2 19-20|0.1 18-19|0.1.0.0 17-18|0.1.0 14-15|0.1.0.0.0 12-13|0.1.0.1 11-12|0.1.0.1.0 9-10|0.1.0.0.0.1 5-6|0.1.0.0.0.0.0 3-4|0.1.0.0.0.0 1-2|0.1.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:00.297
# ::node	0	recognize-01	22-23
# ::node	0.0	engineer-01	27-28
# ::node	0.0.0	electronic	26-27
# ::node	0.0.1	outstanding	25-26
# ::node	0.1	derive-01	19-20
# ::node	0.1.0	he	17-18
# ::node	0.1.0.0	receive-01	18-19
# ::node	0.1.0.0.0	and	14-15
# ::node	0.1.0.0.0.0	enjoy-01	3-4
# ::node	0.1.0.0.0.0.0	reputation	5-6
# ::node	0.1.0.0.0.0.1	man	1-2
# ::node	0.1.0.0.0.1	west	9-10
# ::node	0.1.0.1	influence-01	12-13
# ::node	0.1.0.1.0	most	11-12
# ::node	0.2	international	21-22
# ::root	0	recognize-01
# ::edge	and	op1	west	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	and	op2	receive-01	0.1.0.0.0	0.1.0.0	
# ::edge	derive-01	ARG0	he	0.1	0.1.0	
# ::edge	derive-01	ARG2	recognize-01	0.1	0	
# ::edge	engineer-01	mod	electronic	0.0	0.0.0	
# ::edge	engineer-01	mod	outstanding	0.0	0.0.1	
# ::edge	enjoy-01	ARG0	and	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	enjoy-01	ARG1	reputation	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	enjoy-01	ARG2	man	0.1.0.0.0.0	0.1.0.0.0.0.1	
# ::edge	influence-01	ARG1	he	0.1.0.1	0.1.0	
# ::edge	influence-01	degree	most	0.1.0.1	0.1.0.1.0	
# ::edge	receive-01	ARG0	he	0.1.0.0	0.1.0	
# ::edge	recognize-01	ARG1	engineer-01	0	0.0	
# ::edge	recognize-01	mod	international	0	0.2	
(r / recognize-01 
      :ARG1 (e / engineer-01 
            :mod (e2 / electronic) 
            :mod (o / outstanding)) 
      :ARG2-of (d / derive-01 
            :ARG0 (h / he 
                  :ARG0-of (r2 / receive-01 
                        :op-of (a / and 
                              :ARG0-of (e3 / enjoy-01 
                                    :ARG1 (r3 / reputation) 
                                    :ARG2 (m2 / man)) 
                              :op1 (w / west))) 
                  :ARG1-of (i2 / influence-01 
                        :degree (m / most)))) 
      :mod (i / international))

# ::snt they held each other close deriving comfort from one another being sisters in a time of crisis
# ::tok they held each other close deriving comfort from one another being sisters in a time of crisis
# ::alignments 16-17|0.0 14-15|0 11-12|0.2 9-10|0.1.0.0 6-7|0.1.0 3-4|0.0.0 2-3|0.0.0.0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:00.360
# ::node	0	time	14-15
# ::node	0.0	crisis	16-17
# ::node	0.0.0	other	3-4
# ::node	0.0.0.0	each	2-3
# ::node	0.1	they	0-1
# ::node	0.1.0	comfort-01	6-7
# ::node	0.1.0.0	another	9-10
# ::node	0.2	sister	11-12
# ::root	0	time
# ::edge	comfort-01	ARG0	they	0.1.0	0.1	
# ::edge	comfort-01	ARG1	another	0.1.0	0.1.0.0	
# ::edge	crisis	mod	other	0.0	0.0.0	
# ::edge	other	mod	each	0.0.0	0.0.0.0	
# ::edge	sister	time	time	0.2	0	
# ::edge	time	op1	crisis	0	0.0	
# ::edge	time	poss	they	0	0.1	
(t / time 
      :op1 (c / crisis 
            :mod (o / other 
                  :mod (e / each))) 
      :poss (t2 / they 
            :ARG0-of (c2 / comfort-01 
                  :ARG1 (a / another))) 
      :time-of (s / sister))

# ::snt the benefits i have in mind are the more diffuse ones deriving from the general character of the society to which one belongs
# ::tok the benefits i have in mind are the more diffuse ones deriving from the general character of the society to which one belongs
# ::alignments 22-23|0.1 18-19|0.1.1 15-16|0.1.1.0 14-15|0.1.1.0.0 10-11|0.1.0 5-6|0.1.2 2-3|0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:00.433
# ::node	0	benefit-01	1-2
# ::node	0.0	i	2-3
# ::node	0.1	belong-01	22-23
# ::node	0.1.0	one	10-11
# ::node	0.1.1	society	18-19
# ::node	0.1.1.0	character	15-16
# ::node	0.1.1.0.0	general	14-15
# ::node	0.1.2	mind	5-6
# ::root	0	benefit-01
# ::edge	belong-01	ARG0	one	0.1	0.1.0	
# ::edge	belong-01	ARG1	society	0.1	0.1.1	
# ::edge	benefit-01	ARG1	i	0	0.0	
# ::edge	benefit-01	ARG2	belong-01	0	0.1	
# ::edge	character	location	society	0.1.1.0	0.1.1	
# ::edge	character	mod	general	0.1.1.0	0.1.1.0.0	
# ::edge	mind	op1	belong-01	0.1.2	0.1	
(b2 / benefit-01 
      :ARG1 (i / i) 
      :ARG2 (b / belong-01 
            :ARG0 (o / one) 
            :ARG1 (s / society 
                  :location-of (c / character 
                        :mod (g / general))) 
            :op-of (m / mind)))

# ::snt its nutty flavour is derived from vermentino the main white grape of sardinia which has almond overtones
# ::tok its nutty flavour is derived from vermentino the main white grape of sardinia which has almond overtones
# ::alignments 9-10|0.2 8-9|0.0 4-5|0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:00.486
# ::node	0	derive-01	4-5
# ::node	0.0	main	8-9
# ::node	0.1	nutty	1-2
# ::node	0.2	white	9-10
# ::root	0	derive-01
# ::edge	derive-01	ARG0	main	0	0.0	
# ::edge	derive-01	ARG1	nutty	0	0.1	
# ::edge	white	op1	derive-01	0.2	0	
(d / derive-01 
      :ARG0 (m / main) 
      :ARG1 (n / nutty) 
      :op-of (w / white))

# ::snt to derive the harm principle from the principle of autonomy one has to establish that autonomybased duties never justify coercion where there is no harm
# ::tok to derive the harm principle from the principle of autonomy one has to establish that autonomybased duties never justify coercion where there is no harm
# ::alignments 24-25|0.1.0.0 23-24|0.1.0.0.0 19-20|0.0.0.1 18-19|0.0.0 16-17|0.0.0.0 13-14|0.0 9-10|0.2.0 7-8|0.2 4-5|0.1 3-4|0.1.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:00.707
# ::node	0	derive-01	1-2
# ::node	0.0	establish-01	13-14
# ::node	0.0.0	justify-01	18-19
# ::node	0.0.0.0	duty	16-17
# ::node	0.0.0.1	coerce-01	19-20
# ::node	0.1	principle	4-5
# ::node	0.1.0	harm-01	3-4
# ::node	0.1.0.0	harm-01	24-25
# ::node	0.1.0.0.0	-	23-24
# ::node	0.2	principle	7-8
# ::node	0.2.0	autonomy	9-10
# ::root	0	derive-01
# ::edge	derive-01	ARG1	principle	0	0.1	
# ::edge	derive-01	ARG2	principle	0	0.2	
# ::edge	establish-01	ARG0	derive-01	0.0	0	
# ::edge	establish-01	ARG1	justify-01	0.0	0.0.0	
# ::edge	harm-01	ARG1	harm-01	0.1.0.0	0.1.0	
# ::edge	harm-01	ARG1	principle	0.1.0	0.1	
# ::edge	harm-01	polarity	-	0.1.0.0	0.1.0.0.0	
# ::edge	justify-01	ARG0	duty	0.0.0	0.0.0.0	
# ::edge	justify-01	ARG1	coerce-01	0.0.0	0.0.0.1	
# ::edge	principle	poss	autonomy	0.2	0.2.0	
(d2 / derive-01 
      :ARG0-of (e / establish-01 
            :ARG1 (j / justify-01 
                  :ARG0 (d / duty) 
                  :ARG1 (c / coerce-01))) 
      :ARG1 (p2 / principle 
            :ARG1-of (h2 / harm-01 
                  :ARG1-of (h / harm-01 
                        :polarity (- / -)))) 
      :ARG2 (p / principle 
            :poss (a / autonomy)))

# ::snt the geometric mean gm is derived from the gp
# ::tok the geometric mean gm is derived from the gp
# ::alignments 5-6|0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:00.715
# ::node	0	derive-01	5-6
# ::node	0.0	mean-01	2-3
# ::root	0	derive-01
# ::edge	derive-01	ARG1	mean-01	0	0.0	
(d / derive-01 
      :ARG1 (m / mean-01))

# ::snt britishborneo ceased to derive a direct income from oil production and instead tapped the dividend flow from stakes in oil companies
# ::tok britishborneo ceased to derive a direct income from oil production and instead tapped the dividend flow from stakes in oil companies
# ::alignments 20-21|0.1.0 19-20|0.1.0.0 15-16|0.1 11-12|0.1.1 10-11|0 9-10|0.0.0.1 8-9|0.0.0.1.0 6-7|0.0.0.0 5-6|0.0.0.0.0 3-4|0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:00.809
# ::node	0	and	10-11
# ::node	0.0	cease-01	1-2
# ::node	0.0.0	derive-01	3-4
# ::node	0.0.0.0	income	6-7
# ::node	0.0.0.0.0	direct	5-6
# ::node	0.0.0.1	produce-01	9-10
# ::node	0.0.0.1.0	oil	8-9
# ::node	0.1	flow-01	15-16
# ::node	0.1.0	company	20-21
# ::node	0.1.0.0	oil	19-20
# ::node	0.1.1	instead	11-12
# ::root	0	and
# ::edge	and	op1	cease-01	0	0.0	
# ::edge	and	op2	flow-01	0	0.1	
# ::edge	cease-01	ARG1	derive-01	0.0	0.0.0	
# ::edge	company	mod	oil	0.1.0	0.1.0.0	
# ::edge	derive-01	ARG1	income	0.0.0	0.0.0.0	
# ::edge	derive-01	ARG2	produce-01	0.0.0	0.0.0.1	
# ::edge	flow-01	ARG0	company	0.1	0.1.0	
# ::edge	flow-01	time	instead	0.1	0.1.1	
# ::edge	income	mod	direct	0.0.0.0	0.0.0.0.0	
# ::edge	produce-01	ARG1	oil	0.0.0.1	0.0.0.1.0	
(a / and 
      :op1 (c2 / cease-01 
            :ARG1 (d2 / derive-01 
                  :ARG1 (i2 / income 
                        :mod (d / direct)) 
                  :ARG2 (p / produce-01 
                        :ARG1 (o2 / oil)))) 
      :op2 (f / flow-01 
            :ARG0 (c / company 
                  :mod (o / oil)) 
            :time (i / instead)))

# ::snt this is caused  by iron ochre a generic term used to describe the ironderived material which  blocks drains, iron sulphides occur naturally in the form of mineral iron pyrites  derived from rock slate or else found in peat and marine deposits
# ::tok this is caused by iron ochre a generic term used to describe the ironderived material which blocks drains , iron sulphides occur naturally in the form of mineral iron pyrites derived from rock slate or else found in peat and marine deposits
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:00.810
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt richard derived acute enjoyment from the storm of publicity which broke around their ears the pack of paparazzi who attended them and the sanctimonious newspaper editorials trumpeting a further step towards the new multicultural britain
# ::tok richard derived acute enjoyment from the storm of publicity which broke around their ears the pack of paparazzi who attended them and the sanctimonious newspaper editorials trumpeting a further step towards the new multicultural britain
# ::alignments 34-35|0.0.2.0.0.0.0.1.0+0.0.2.0.0.0.0.1+0.0.2.0.0.0.0 33-34|0.0.2.0.0.0 32-33|0.0.2.0.0.0.0.0 28-29|0.0.2.0.1 24-25|0.0.0 23-24|0.0.0.0 21-22|0.0.2.0.0.1 19-20|0.0.2.0.0 15-16|0.0.2.0 13-14|0.0.1.0.0 11-12|0.0.1.0 8-9|0.0.1 6-7|0.0.2.1 3-4|0.0 2-3|0 1-2|0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:01.123
# ::node	0	acute	2-3
# ::node	0.0	enjoy-01	3-4
# ::node	0.0.0	newspaper	24-25
# ::node	0.0.0.0	sanctimonious	23-24
# ::node	0.0.1	publicity	8-9
# ::node	0.0.1.0	around	11-12
# ::node	0.0.1.0.0	ear	13-14
# ::node	0.0.2	derive-01	1-2
# ::node	0.0.2.0	pack-01	15-16
# ::node	0.0.2.0.0	attend-01	19-20
# ::node	0.0.2.0.0.0	multicultural	33-34
# ::node	0.0.2.0.0.0.0	country	34-35
# ::node	0.0.2.0.0.0.0.0	new	32-33
# ::node	0.0.2.0.0.0.0.1	name	34-35
# ::node	0.0.2.0.0.0.0.1.0	"Britain"	34-35
# ::node	0.0.2.0.0.1	and	21-22
# ::node	0.0.2.0.1	further	28-29
# ::node	0.0.2.1	storm	6-7
# ::root	0	acute
(a4 / acute 
      :mod-of (e2 / enjoy-01 
            :ARG0 (n3 / newspaper 
                  :mod (s / sanctimonious)) 
            :ARG1 (p2 / publicity 
                  :time (a3 / around 
                        :op1 (e / ear))) 
            :ARG1-of (d / derive-01 
                  :ARG0 (p / pack-01 
                        :ARG0 (a2 / attend-01 
                              :ARG0 (m / multicultural 
                                    :mod-of (c / country 
                                          :mod (n2 / new) 
                                          :name (n / name 
                                                :op1 "Britain"))) 
                              :ARG1 (a / and)) 
                        :ARG1 (f / further)) 
                  :ARG2 (s2 / storm))))

# ::snt not only does the dramatic tension of the choephori derive from this relationship but in the agamemnon also interest is focused upon the relationship of clytemnestra to her daughter iphigeneia and upon the violation of a mothers rights
# ::tok not only does the dramatic tension of the choephori derive from this relationship but in the agamemnon also interest is focused upon the relationship of clytemnestra to her daughter iphigeneia and upon the violation of a mothers rights
# ::alignments 37-38|0.2.0 36-37|0.2.1+0.2 33-34|0.2.0.0 30-31|0.3.0.1 28-29|0.3.0.0.1.0+0.3.0.0.1 23-24|0.3 20-21|0.3.0 18-19|0.3.0.0 17-18|0.3.0.0.0 13-14|0 12-13|0.1.0 11-12|0.1.0.0 9-10|0.1 5-6|0.0 4-5|0.0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:01.394
# ::node	0	contrast-01	13-14
# ::node	0.0	tension	5-6
# ::node	0.0.0	dramatic	4-5
# ::node	0.0.1	only	1-2
# ::node	0.1	derive-01	9-10
# ::node	0.1.0	relationship	12-13
# ::node	0.1.0.0	this	11-12
# ::node	0.2	have-rel-role-91	36-37
# ::node	0.2.0	right	37-38
# ::node	0.2.0.0	violate-01	33-34
# ::node	0.2.1	mother	36-37
# ::node	0.3	relationship	23-24
# ::node	0.3.0	focus-01	20-21
# ::node	0.3.0.0	interest-01	18-19
# ::node	0.3.0.0.0	also	17-18
# ::node	0.3.0.0.1	have-rel-role-91	28-29
# ::node	0.3.0.0.1.0	daughter	28-29
# ::node	0.3.0.1	and	30-31
# ::root	0	contrast-01
# ::edge	contrast-01	ARG0	tension	0	0.0	
# ::edge	contrast-01	ARG1	derive-01	0	0.1	
# ::edge	contrast-01	ARG2	relationship	0	0.3	
# ::edge	derive-01	ARG1	relationship	0.1	0.1.0	
# ::edge	focus-01	ARG0	interest-01	0.3.0	0.3.0.0	
# ::edge	focus-01	ARG1	and	0.3.0	0.3.0.1	
# ::edge	focus-01	ARG2	relationship	0.3.0	0.3	
# ::edge	have-rel-role-91	ARG0	right	0.2	0.2.0	
# ::edge	have-rel-role-91	ARG1	contrast-01	0.2	0	
# ::edge	have-rel-role-91	ARG1	interest-01	0.3.0.0.1	0.3.0.0	
# ::edge	have-rel-role-91	ARG2	daughter	0.3.0.0.1	0.3.0.0.1.0	
# ::edge	have-rel-role-91	ARG2	mother	0.2	0.2.1	
# ::edge	interest-01	ARG0	also	0.3.0.0	0.3.0.0.0	
# ::edge	relationship	mod	this	0.1.0	0.1.0.0	
# ::edge	tension	mod	dramatic	0.0	0.0.0	
# ::edge	tension	mod	only	0.0	0.0.1	
# ::edge	violate-01	ARG1	right	0.2.0.0	0.2.0	
(c / contrast-01 
      :ARG0 (t2 / tension 
            :mod (d3 / dramatic) 
            :mod (o / only)) 
      :ARG1 (d2 / derive-01 
            :ARG1 (r3 / relationship 
                  :mod (t / this))) 
      :ARG1-of (h / have-rel-role-91 
            :ARG0 (r / right 
                  :ARG1-of (v / violate-01)) 
            :ARG2 (m / mother)) 
      :ARG2 (r2 / relationship 
            :ARG2-of (f / focus-01 
                  :ARG0 (i / interest-01 
                        :ARG0 (a2 / also) 
                        :ARG1-of (h2 / have-rel-role-91 
                              :ARG2 (d / daughter))) 
                  :ARG1 (a / and))))

# ::snt part of its adult look derives from the strong presence of the french who are much betterfunded than we and can afford to stage more ambitious work
# ::tok part of its adult look derives from the strong presence of the french who are much betterfunded than we and can afford to stage more ambitious work
# ::alignments 25-26|0.0.4.0 23-24|0 21-22|0.0 20-21|0.0.3 19-20|0.0.3.0 18-19|0.0.1 15-16|0.0.2 12-13|0.0.0.1.0+0.0.0.1+0.0.0 9-10|0.0.0.0 8-9|0.0.0.0.0 3-4|0.0.4 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:01.518
# ::node	0	stage	23-24
# ::node	0.0	afford-01	21-22
# ::node	0.0.0	country	12-13
# ::node	0.0.0.0	presence	9-10
# ::node	0.0.0.0.0	strong	8-9
# ::node	0.0.0.1	name	12-13
# ::node	0.0.0.1.0	"France"	12-13
# ::node	0.0.1	we	18-19
# ::node	0.0.2	much	15-16
# ::node	0.0.3	possible	20-21
# ::node	0.0.3.0	and	19-20
# ::node	0.0.4	adult	3-4
# ::node	0.0.4.0	ambitious	25-26
# ::root	0	stage
(s / stage 
      :ARG1-of (a2 / afford-01 
            :ARG0 (c / country 
                  :location-of (p2 / presence 
                        :mod (s2 / strong)) 
                  :name (n / name 
                        :op1 "France")) 
            :ARG2 (w / we) 
            :manner (m / much) 
            :mod (p / possible 
                  :domain (a3 / and)) 
            :op-of (a4 / adult 
                  :poss-of (a / ambitious))))

# ::snt sophisticated contracts derived from shares dash
# ::tok sophisticated contracts derived from shares dash
# ::alignments 4-5|0.1 2-3|0 1-2|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:01.527
# ::node	0	derive-01	2-3
# ::node	0.0	contract	1-2
# ::node	0.0.0	sophisticated	0-1
# ::node	0.1	share	4-5
# ::root	0	derive-01
# ::edge	contract	mod	sophisticated	0.0	0.0.0	
# ::edge	derive-01	ARG0	contract	0	0.0	
# ::edge	derive-01	ARG1	share	0	0.1	
(d / derive-01 
      :ARG0 (c / contract 
            :mod (s2 / sophisticated)) 
      :ARG1 (s / share))

# ::snt charles james blandford of blenheim palace woodstock admitted the offences when he appeared before the magistrates in blandford dorset the town from which he derives his title
# ::tok charles james blandford of blenheim palace woodstock admitted the offences when he appeared before the magistrates in blandford dorset the town from which he derives his title
# ::alignments 26-27|0.1.0.0 23-24|0.1.0 20-21|0.1 13-14|0.2 12-13|0 11-12|0.0 9-10|0.3.0 7-8|0.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:01.601
# ::node	0	appear-01	12-13
# ::node	0.0	he	11-12
# ::node	0.1	town	20-21
# ::node	0.1.0	he	23-24
# ::node	0.1.0.0	title	26-27
# ::node	0.2	before	13-14
# ::node	0.3	admit-01	7-8
# ::node	0.3.0	offence	9-10
# ::root	0	appear-01
# ::edge	admit-01	ARG1	offence	0.3	0.3.0	
# ::edge	admit-01	time	appear-01	0.3	0	
# ::edge	appear-01	ARG1	he	0	0.0	
# ::edge	appear-01	ARG2	town	0	0.1	
# ::edge	appear-01	time	before	0	0.2	
# ::edge	title	poss	he	0.1.0.0	0.1.0	
# ::edge	town	poss	he	0.1	0.1.0	
(a / appear-01 
      :ARG1 (h2 / he) 
      :ARG2 (t2 / town 
            :poss (h / he 
                  :poss-of (t / title))) 
      :time (b / before) 
      :time-of (a2 / admit-01 
            :ARG1 (o / offence)))

# ::snt peretz and sholom asch and it derived further inspiration from the poetry of a number of workingclass writers who had immigrated to the united states towards the end of the nineteenth century
# ::tok peretz and sholom asch and it derived further inspiration from the poetry of a number of workingclass writers who had immigrated to the united states towards the end of the nineteenth century
# ::alignments 23-25|0.0.0.0.0.0+0.0.0.0.0.1+0.0.0.0.0+0.0.0.0 17-18|0.1.2.0+0.1.2 14-15|0.1.2.1 11-12|0.1.0 8-9|0.1 7-8|0.1.1 6-7|0 5-6|0.2 4-5|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:02.013
# ::node	0	derive-01	6-7
# ::node	0.0	and	4-5
# ::node	0.0.0	and	1-2
# ::node	0.0.0.0	country	23-25
# ::node	0.0.0.0.0	name	23-25
# ::node	0.0.0.0.0.0	"states"	23-25
# ::node	0.0.0.0.0.1	"united"	23-25
# ::node	0.1	inspire-01	8-9
# ::node	0.1.0	poetry	11-12
# ::node	0.1.1	further	7-8
# ::node	0.1.2	person	17-18
# ::node	0.1.2.0	write-01	17-18
# ::node	0.1.2.1	number	14-15
# ::node	0.2	it	5-6
# ::root	0	derive-01
# ::edge	and	op1	country	0.0.0	0.0.0.0	
# ::edge	and	poss	and	0.0.0	0.0	
# ::edge	country	name	name	0.0.0.0	0.0.0.0.0	
# ::edge	derive-01	ARG0	and	0	0.0	
# ::edge	derive-01	ARG1	inspire-01	0	0.1	
# ::edge	derive-01	ARG2	it	0	0.2	
# ::edge	inspire-01	ARG1	poetry	0.1	0.1.0	
# ::edge	inspire-01	degree	further	0.1	0.1.1	
# ::edge	inspire-01	location	person	0.1	0.1.2	
# ::edge	name	op1	"states"	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	name	op2	"united"	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	person	quant	number	0.1.2	0.1.2.1	
# ::edge	write-01	ARG0	person	0.1.2.0	0.1.2	
(d / derive-01 
      :ARG0 (a / and 
            :poss-of (a2 / and 
                  :op1 (c / country 
                        :name (n / name 
                              :op1 "states" 
                              :op2 "united")))) 
      :ARG1 (i / inspire-01 
            :ARG1 (p2 / poetry) 
            :degree (f / further) 
            :location (p / person 
                  :ARG0-of (w / write-01) 
                  :quant (n2 / number))) 
      :ARG2 (i2 / it))

# ::snt south and west of the canaries the atlantic extends emptily for thousands  of kilometres broken only by the cape verde islands also volcanic and  two tiny specks of land st peter and st pauls rocks which are not  strictly volcanic oddly enough but are composed of material that must  have been derived from much deeper levels in the earth than most volcanic  rocks
# ::tok south and west of the canaries the atlantic extends emptily for thousands of kilometres broken only by the cape verde islands also volcanic and two tiny specks of land st peter and st pauls rocks which are not strictly volcanic oddly enough but are composed of material that must have been derived from much deeper levels in the earth than most volcanic rocks
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:02.014
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt both derive from a deep sense of grievance and resentment against those western powers led by the united states which are seen to have carved up the world for their own convenience
# ::tok both derive from a deep sense of grievance and resentment against those western powers led by the united states which are seen to have carved up the world for their own convenience
# ::alignments 31-32|0 27-28|0.0 21-22|0.0.0 17-19|0.0.0.0.1.0+0.0.0.0.1.1+0.0.0.0.1+0.0.0.0 14-15|0.0.0.0.0 13-14|0.0.0.0.0.0 12-13|0.0.0.0.0.0.1.0.0+0.0.0.0.0.0.1.0+0.0.0.0.0.0.1 9-10|0.0.0.0.0.0.0.0.1 8-9|0.0.0.0.0.0.0.0 7-8|0.0.0.0.0.0.0 5-6|0.0.0.0.0.0.0.0.0.0 4-5|0.0.0.0.0.0.0.0.0.0.0 1-2|0.0.0.0.0.0.0.0.0 0-1|0.0.0.0.0.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:02.338
# ::node	0	convenience	31-32
# ::node	0.0	world	27-28
# ::node	0.0.0	see-01	21-22
# ::node	0.0.0.0	country	17-19
# ::node	0.0.0.0.0	lead-02	14-15
# ::node	0.0.0.0.0.0	power	13-14
# ::node	0.0.0.0.0.0.0	grieve-01	7-8
# ::node	0.0.0.0.0.0.0.0	and	8-9
# ::node	0.0.0.0.0.0.0.0.0	derive-01	1-2
# ::node	0.0.0.0.0.0.0.0.0.0	sense	5-6
# ::node	0.0.0.0.0.0.0.0.0.0.0	deep	4-5
# ::node	0.0.0.0.0.0.0.0.0.1	both	0-1
# ::node	0.0.0.0.0.0.0.0.1	resent-01	9-10
# ::node	0.0.0.0.0.0.1	world-region	12-13
# ::node	0.0.0.0.0.0.1.0	name	12-13
# ::node	0.0.0.0.0.0.1.0.0	"West"	12-13
# ::node	0.0.0.0.1	name	17-19
# ::node	0.0.0.0.1.0	"states"	17-19
# ::node	0.0.0.0.1.1	"united"	17-19
# ::root	0	convenience
(c / convenience 
      :mod-of (w / world 
            :ARG2-of (s / see-01 
                  :ARG1 (c2 / country 
                        :ARG0-of (l / lead-02 
                              :ARG1 (p / power 
                                    :ARG1-of (g / grieve-01 
                                          :op-of (a / and 
                                                :ARG1-of (d2 / derive-01 
                                                      :ARG0 (s2 / sense 
                                                            :degree (d / deep)) 
                                                      :mod (b / both)) 
                                                :op1 (r / resent-01))) 
                                    :mod (w2 / world-region 
                                          :name (n2 / name 
                                                :op1 "West")))) 
                        :name (n / name 
                              :op1 "states" 
                              :op2 "united")))))

# ::snt sometimes this has been exaggerated into a doctrine of arbitrary selfcreation based on the belief that all value derives from choice which is itself not guided by value and is therefore free i
# ::tok sometimes this has been exaggerated into a doctrine of arbitrary selfcreation based on the belief that all value derives from choice which is itself not guided by value and is therefore free i
# ::alignments 32-33|0.3.0 31-32|0.3 28-29|0 27-28|0.2 25-26|0.0 17-18|0.3.0.0.0 16-17|0.3.0.0.0.0 14-15|0.3.0.0 11-12|0.1.2 9-10|0.1.2.0 7-8|0.1.1 4-5|0.1 1-2|0.1.0.0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:02.466
# ::node	0	and	28-29
# ::node	0.0	guide-01	25-26
# ::node	0.1	exaggerate-01	4-5
# ::node	0.1.0	sometimes	0-1
# ::node	0.1.0.0	this	1-2
# ::node	0.1.1	doctrine	7-8
# ::node	0.1.2	base-01	11-12
# ::node	0.1.2.0	arbitrary	9-10
# ::node	0.2	value-01	27-28
# ::node	0.3	free-41	31-32
# ::node	0.3.0	i	32-33
# ::node	0.3.0.0	believe-01	14-15
# ::node	0.3.0.0.0	value-01	17-18
# ::node	0.3.0.0.0.0	all	16-17
# ::root	0	and
# ::edge	and	op1	exaggerate-01	0	0.1	
# ::edge	and	op2	value-01	0	0.2	
# ::edge	and	op3	free-41	0	0.3	
# ::edge	base-01	ARG1	arbitrary	0.1.2	0.1.2.0	
# ::edge	believe-01	ARG0	i	0.3.0.0	0.3.0	
# ::edge	believe-01	ARG1	value-01	0.3.0.0	0.3.0.0.0	
# ::edge	exaggerate-01	ARG0	sometimes	0.1	0.1.0	
# ::edge	exaggerate-01	ARG1	doctrine	0.1	0.1.1	
# ::edge	exaggerate-01	ARG2	base-01	0.1	0.1.2	
# ::edge	free-41	ARG1	i	0.3	0.3.0	
# ::edge	guide-01	ARG2	and	0.0	0	
# ::edge	this	mod	sometimes	0.1.0.0	0.1.0	
# ::edge	value-01	quant	all	0.3.0.0.0	0.3.0.0.0.0	
(a / and 
      :ARG2-of (g / guide-01) 
      :op1 (e / exaggerate-01 
            :ARG0 (s / sometimes 
                  :mod-of (t / this)) 
            :ARG1 (d / doctrine) 
            :ARG2 (b2 / base-01 
                  :ARG1 (a3 / arbitrary))) 
      :op2 (v / value-01) 
      :op3 (f / free-41 
            :ARG1 (i / i 
                  :ARG0-of (b / believe-01 
                        :ARG1 (v2 / value-01 
                              :quant (a2 / all))))))

# ::snt from a playwright celebrated for restraint and subtlety nekrosiuss direction derives enormous emotional power it would be hard to imagine a fresher more compelling treatment of chekhov
# ::tok from a playwright celebrated for restraint and subtlety nekrosiuss direction derives enormous emotional power it would be hard to imagine a fresher more compelling treatment of chekhov
# ::alignments 24-25|0.0.1 23-24|0.0.1.0.0.0 19-20|0.0.1.0 17-18|0.0.1.0.1 14-15|0.0.1.0.0 13-14|0.0.0 12-13|0.0.0.1 11-12|0.0.0.0 9-10|0.2 7-8|0.1 6-7|0 3-4|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:02.538
# ::node	0	and	6-7
# ::node	0.0	celebrate-01	3-4
# ::node	0.0.0	power	13-14
# ::node	0.0.0.0	enormous	11-12
# ::node	0.0.0.1	emotion	12-13
# ::node	0.0.1	treat-03	24-25
# ::node	0.0.1.0	imagine-01	19-20
# ::node	0.0.1.0.0	it	14-15
# ::node	0.0.1.0.0.0	compel-01	23-24
# ::node	0.0.1.0.1	hard	17-18
# ::node	0.1	subtle	7-8
# ::node	0.2	direction	9-10
# ::root	0	and
# ::edge	and	op1	subtle	0	0.1	
# ::edge	and	op2	direction	0	0.2	
# ::edge	celebrate-01	ARG0	power	0.0	0.0.0	
# ::edge	celebrate-01	ARG1	treat-03	0.0	0.0.1	
# ::edge	celebrate-01	ARG2	and	0.0	0	
# ::edge	compel-01	ARG0	it	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	hard	domain	imagine-01	0.0.1.0.1	0.0.1.0	
# ::edge	imagine-01	ARG0	it	0.0.1.0	0.0.1.0.0	
# ::edge	imagine-01	ARG1	treat-03	0.0.1.0	0.0.1	
# ::edge	power	mod	emotion	0.0.0	0.0.0.1	
# ::edge	power	mod	enormous	0.0.0	0.0.0.0	
(a / and 
      :ARG2-of (c2 / celebrate-01 
            :ARG0 (p / power 
                  :mod (e2 / enormous) 
                  :mod (e / emotion)) 
            :ARG1 (t / treat-03 
                  :ARG1-of (i / imagine-01 
                        :ARG0 (i2 / it 
                              :ARG0-of (c / compel-01)) 
                        :domain-of (h / hard)))) 
      :op1 (s / subtle) 
      :op2 (d / direction))

# ::snt the name of an english first division soccer ground is derived from americas national pastime
# ::tok the name of an english first division soccer ground is derived from americas national pastime
# ::alignments 13-14|0.0.2 10-11|0 8-9|0.0 7-8|0.0.0 6-7|0.0.0.0 4-5|0.0.1.0.0+0.0.1.0+0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:02.562
# ::node	0	derive-01	10-11
# ::node	0.0	ground	8-9
# ::node	0.0.0	soccer	7-8
# ::node	0.0.0.0	division	6-7
# ::node	0.0.1	language	4-5
# ::node	0.0.1.0	name	4-5
# ::node	0.0.1.0.0	"English"	4-5
# ::node	0.0.2	nation	13-14
# ::root	0	derive-01
# ::edge	derive-01	ARG1	ground	0	0.0	
# ::edge	ground	mod	language	0.0	0.0.1	
# ::edge	ground	mod	soccer	0.0	0.0.0	
# ::edge	ground	op1	nation	0.0	0.0.2	
# ::edge	language	name	name	0.0.1	0.0.1.0	
# ::edge	name	op1	"English"	0.0.1.0	0.0.1.0.0	
# ::edge	soccer	mod	division	0.0.0	0.0.0.0	
(d / derive-01 
      :ARG1 (g / ground 
            :mod (s / soccer 
                  :mod (d2 / division)) 
            :mod (l / language 
                  :name (n2 / name 
                        :op1 "English")) 
            :op1 (n / nation)))

# ::snt the ganges derives its special status in indian society not from its length which at 1500 miles is shorter than the brahmaputra the indus and even the danube dash
# ::tok the ganges derives its special status in indian society not from its length which at 1500 miles is shorter than the brahmaputra the indus and even the danube dash
# ::alignments 24-25|0 18-19|0.0.0.0 16-17|0.0.0.0.0.1+0.0.0.0.0 15-16|0.0.0.0.0.0.0+0.0.0.0.0.0 12-13|0.0.0 8-9|0.0 5-6|0.0.1 4-5|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:02.621
# ::node	0	and	24-25
# ::node	0.0	society	8-9
# ::node	0.0.0	length	12-13
# ::node	0.0.0.0	short	18-19
# ::node	0.0.0.0.0	distance-quantity	16-17
# ::node	0.0.0.0.0.0	date-entity	15-16
# ::node	0.0.0.0.0.0.0	1500	15-16
# ::node	0.0.0.0.0.1	mile	16-17
# ::node	0.0.1	status	5-6
# ::node	0.0.1.0	special	4-5
# ::root	0	and
# ::edge	and	poss	society	0	0.0	
# ::edge	date-entity	year	1500	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	distance-quantity	quant	date-entity	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	distance-quantity	unit	mile	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	short	compared-to	length	0.0.0.0	0.0.0	
# ::edge	short	domain	distance-quantity	0.0.0.0	0.0.0.0.0	
# ::edge	society	location	length	0.0	0.0.0	
# ::edge	status	mod	special	0.0.1	0.0.1.0	
# ::edge	status	poss	society	0.0.1	0.0	
(a / and 
      :poss (s2 / society 
            :location (l / length 
                  :compared-to-of (s / short 
                        :domain (d / distance-quantity 
                              :quant (d2 / date-entity 
                                    :year 1500) 
                              :unit (m / mile)))) 
            :poss-of (s3 / status 
                  :mod (s4 / special))))

# ::snt what will be the payoff from making these improved decisions  implementing an information system requires an investment from which future benefits are derived
# ::tok what will be the payoff from making these improved decisions implementing an information system requires an investment from which future benefits are derived
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:02.622
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt these stories were all derived from a report on the press association wire service by food writer don philpott
# ::tok these stories were all derived from a report on the press association wire service by food writer don philpott
# ::alignments 16-17|0.2.0.0+0.2.0 15-16|0.2.0.0.0 12-13|0.2 11-12|0.2.1 10-11|0.2.1.0 7-8|0.0 4-5|0 3-4|0.2.2 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:02.760
# ::node	0	derive-01	4-5
# ::node	0.0	report	7-8
# ::node	0.1	story	1-2
# ::node	0.2	wire-01	12-13
# ::node	0.2.0	person	16-17
# ::node	0.2.0.0	write-01	16-17
# ::node	0.2.0.0.0	food	15-16
# ::node	0.2.1	associate-01	11-12
# ::node	0.2.1.0	press	10-11
# ::node	0.2.2	all	3-4
# ::root	0	derive-01
# ::edge	all	op1	wire-01	0.2.2	0.2	
# ::edge	associate-01	ARG0	wire-01	0.2.1	0.2	
# ::edge	associate-01	ARG1	press	0.2.1	0.2.1.0	
# ::edge	derive-01	ARG0	report	0	0.0	
# ::edge	derive-01	ARG1	story	0	0.1	
# ::edge	derive-01	ARG3	wire-01	0	0.2	
# ::edge	wire-01	ARG0	person	0.2	0.2.0	
# ::edge	write-01	ARG0	person	0.2.0.0	0.2.0	
# ::edge	write-01	ARG1	food	0.2.0.0	0.2.0.0.0	
(d / derive-01 
      :ARG0 (r / report) 
      :ARG1 (s / story) 
      :ARG3 (w2 / wire-01 
            :ARG0 (p / person 
                  :ARG0-of (w / write-01 
                        :ARG1 (f / food))) 
            :ARG0-of (a / associate-01 
                  :ARG1 (p2 / press)) 
            :op-of (a2 / all)))

# ::snt the ban will be added to the 12month disqualification he received on wednesday coincidentally in the dorset town of blandford from which he derives his title
# ::tok the ban will be added to the 12month disqualification he received on wednesday coincidentally in the dorset town of blandford from which he derives his title
# ::alignments 25-26|0.1.0.1.0 22-23|0.1.0.1 17-18|0.1.0.2 10-11|0.1.0 9-10|0.1.0.0 8-9|0.1 4-5|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:02.883
# ::node	0	add-01	4-5
# ::node	0.0	ban-01	1-2
# ::node	0.1	disqualify-01	8-9
# ::node	0.1.0	receive-01	10-11
# ::node	0.1.0.0	he	9-10
# ::node	0.1.0.1	he	22-23
# ::node	0.1.0.1.0	title	25-26
# ::node	0.1.0.2	town	17-18
# ::root	0	add-01
# ::edge	add-01	ARG1	ban-01	0	0.0	
# ::edge	add-01	ARG2	disqualify-01	0	0.1	
# ::edge	receive-01	ARG0	he	0.1.0	0.1.0.0	
# ::edge	receive-01	ARG1	disqualify-01	0.1.0	0.1	
# ::edge	receive-01	ARG2	he	0.1.0	0.1.0.1	
# ::edge	receive-01	topic	town	0.1.0	0.1.0.2	
# ::edge	title	poss	he	0.1.0.1.0	0.1.0.1	
(a / add-01 
      :ARG1 (b / ban-01) 
      :ARG2 (d / disqualify-01 
            :ARG1-of (r / receive-01 
                  :ARG0 (h2 / he) 
                  :ARG2 (h / he 
                        :poss-of (t / title)) 
                  :topic (t2 / town))))

# ::snt the uk abstention was condemned by conservationists who said that a stand should have been taken on ivory which they claimed was almost entirely derived from poaching
# ::tok the uk abstention was condemned by conservationists who said that a stand should have been taken on ivory which they claimed was almost entirely derived from poaching
# ::alignments 24-25|0.0.0 23-24|0.0.0.1 22-23|0.0.0.1.0 20-21|0 19-20|0.0 12-13|0.0.0.0.0.0.0 8-9|0.0.0.0.0.0 4-5|0.0.0.0.0 2-3|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:02.942
# ::node	0	claim-01	20-21
# ::node	0.0	they	19-20
# ::node	0.0.0	derive-01	24-25
# ::node	0.0.0.0	abstain-01	2-3
# ::node	0.0.0.0.0	condemn-01	4-5
# ::node	0.0.0.0.0.0	say-01	8-9
# ::node	0.0.0.0.0.0.0	recommend-01	12-13
# ::node	0.0.0.1	entire	23-24
# ::node	0.0.0.1.0	almost	22-23
# ::root	0	claim-01
# ::edge	abstain-01	ARG1	derive-01	0.0.0.0	0.0.0	
# ::edge	claim-01	ARG0	they	0	0.0	
# ::edge	condemn-01	ARG1	abstain-01	0.0.0.0.0	0.0.0.0	
# ::edge	condemn-01	source	say-01	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	derive-01	ARG0	they	0.0.0	0.0	
# ::edge	derive-01	degree	entire	0.0.0	0.0.0.1	
# ::edge	entire	mod	almost	0.0.0.1	0.0.0.1.0	
# ::edge	say-01	ARG1	recommend-01	0.0.0.0.0.0	0.0.0.0.0.0.0	
(c / claim-01 
      :ARG0 (t / they 
            :ARG0-of (d / derive-01 
                  :ARG1-of (a2 / abstain-01 
                        :ARG1-of (c2 / condemn-01 
                              :source (s / say-01 
                                    :ARG1 (r / recommend-01)))) 
                  :degree (e / entire 
                        :mod (a / almost)))))

# ::snt since the value of not exchanging children for money derives from the value of having children it is misleading and distorting to say that of these two they value having children less
# ::tok since the value of not exchanging children for money derives from the value of having children it is misleading and distorting to say that of these two they value having children less
# ::alignments 31-32|0.0.1.0 30-31|0.0.1 28-29|0.0 27-28|0.0.0 26-27|0.1.0.0.0.0 22-23|0 19-20|0.1 18-19|0.1.1.0 16-17|0.1.1.0.0 15-16|0.1.1 12-13|0.1.0 8-9|0.1.0.0.1 6-7|0.1.0.0 5-6|0.1.0.0.0 2-3|0.1.0.0.0.1 0-1|0.1.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:03.219
# ::node	0	say-01	22-23
# ::node	0.0	value-01	28-29
# ::node	0.0.0	they	27-28
# ::node	0.0.1	child	30-31
# ::node	0.0.1.0	less	31-32
# ::node	0.1	and	19-20
# ::node	0.1.0	value-01	12-13
# ::node	0.1.0.0	child	6-7
# ::node	0.1.0.0.0	exchange-01	5-6
# ::node	0.1.0.0.0.0	2	26-27
# ::node	0.1.0.0.0.1	value-01	2-3
# ::node	0.1.0.0.0.1.0	since	0-1
# ::node	0.1.0.0.1	money	8-9
# ::node	0.1.1	child	15-16
# ::node	0.1.1.0	mislead-02	18-19
# ::node	0.1.1.0.0	it	16-17
# ::root	0	say-01
# ::edge	and	op1	child	0.1	0.1.1	
# ::edge	and	op2	say-01	0.1	0	
# ::edge	child	mod	less	0.0.1	0.0.1.0	
# ::edge	exchange-01	ARG0	2	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	exchange-01	ARG1	child	0.1.0.0.0	0.1.0.0	
# ::edge	mislead-02	ARG0	child	0.1.1.0	0.1.1	
# ::edge	mislead-02	ARG1	it	0.1.1.0	0.1.1.0.0	
# ::edge	money	quant	child	0.1.0.0.1	0.1.0.0	
# ::edge	say-01	ARG1	value-01	0	0.0	
# ::edge	since	op1	value-01	0.1.0.0.0.1.0	0.1.0.0.0.1	
# ::edge	value-01	ARG0	child	0.1.0	0.1.0.0	
# ::edge	value-01	ARG0	they	0.0	0.0.0	
# ::edge	value-01	ARG1	and	0.1.0	0.1	
# ::edge	value-01	ARG1	child	0.0	0.0.1	
# ::edge	value-01	ARG1	exchange-01	0.1.0.0.0.1	0.1.0.0.0	
(s / say-01 
      :ARG1 (v / value-01 
            :ARG0 (t / they) 
            :ARG1 (c / child 
                  :mod (l / less))) 
      :op-of (a / and 
            :ARG1-of (v2 / value-01 
                  :ARG0 (c3 / child 
                        :ARG1-of (e / exchange-01 
                              :ARG0 2 
                              :ARG1-of (v3 / value-01 
                                    :op-of (s2 / since))) 
                        :quant-of (m2 / money))) 
            :op1 (c2 / child 
                  :ARG0-of (m / mislead-02 
                        :ARG1 (i / it)))))

# ::snt highpowered sports cars designed by jaguar and porsche for example often use components derived from the aerospace industry and mr goodridge was able to obtain such parts from the us and canada for his growing band of european customers
# ::tok highpowered sports cars designed by jaguar and porsche for example often use components derived from the aerospace industry and mr goodridge was able to obtain such parts from the us and canada for his growing band of european customers
# ::alignments 38-39|0.0.2.1 37-38|0.0.2.1.0.0.0+0.0.2.1.0.0+0.0.2.1.0 35-36|0.0.2 34-35|0.0.2.0 30-31|0.1.1.0.0 26-27|0.0.0 25-26|0.0.0.0 24-25|0.0 22-23|0.0.1 18-19|0 17-18|0.2 16-17|0.2.0 13-14|0.1 12-13|0.1.1 11-12|0.1.1.0 10-11|0.1.1.1 9-10|0.1.0 6-7|0.1.1.0.1.1 3-4|0.1.1.0.1 2-3|0.1.1.0.1.0 1-2|0.1.1.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:03.596
# ::node	0	and	18-19
# ::node	0.0	obtain-01	24-25
# ::node	0.0.0	part	26-27
# ::node	0.0.0.0	such	25-26
# ::node	0.0.1	possible	22-23
# ::node	0.0.2	band	35-36
# ::node	0.0.2.0	grow-01	34-35
# ::node	0.0.2.1	customer	38-39
# ::node	0.0.2.1.0	continent	37-38
# ::node	0.0.2.1.0.0	name	37-38
# ::node	0.0.2.1.0.0.0	"Europe"	37-38
# ::node	0.1	derive-01	13-14
# ::node	0.1.0	example	9-10
# ::node	0.1.1	component	12-13
# ::node	0.1.1.0	use-01	11-12
# ::node	0.1.1.0.0	and	30-31
# ::node	0.1.1.0.1	design-01	3-4
# ::node	0.1.1.0.1.0	car	2-3
# ::node	0.1.1.0.1.0.0	sport	1-2
# ::node	0.1.1.0.1.1	and	6-7
# ::node	0.1.1.1	often	10-11
# ::node	0.2	industry	17-18
# ::node	0.2.0	aerospace	16-17
# ::root	0	and
# ::edge	and	op1	design-01	0.1.1.0.1.1	0.1.1.0.1	
# ::edge	and	op1	industry	0	0.2	
# ::edge	car	mod	sport	0.1.1.0.1.0	0.1.1.0.1.0.0	
# ::edge	component	mod	often	0.1.1	0.1.1.1	
# ::edge	component	mod	use-01	0.1.1	0.1.1.0	
# ::edge	continent	name	name	0.0.2.1.0	0.0.2.1.0.0	
# ::edge	customer	consist	band	0.0.2.1	0.0.2	
# ::edge	customer	mod	continent	0.0.2.1	0.0.2.1.0	
# ::edge	derive-01	ARG0	example	0.1	0.1.0	
# ::edge	derive-01	ARG1	component	0.1	0.1.1	
# ::edge	derive-01	location	and	0.1	0	
# ::edge	design-01	ARG1	car	0.1.1.0.1	0.1.1.0.1.0	
# ::edge	design-01	ARG2	use-01	0.1.1.0.1	0.1.1.0	
# ::edge	grow-01	ARG1	band	0.0.2.0	0.0.2	
# ::edge	industry	mod	aerospace	0.2	0.2.0	
# ::edge	name	op1	"Europe"	0.0.2.1.0.0	0.0.2.1.0.0.0	
# ::edge	obtain-01	ARG0	and	0.0	0	
# ::edge	obtain-01	ARG1	part	0.0	0.0.0	
# ::edge	obtain-01	manner	band	0.0	0.0.2	
# ::edge	part	mod	such	0.0.0	0.0.0.0	
# ::edge	possible	domain	obtain-01	0.0.1	0.0	
# ::edge	use-01	ARG1	and	0.1.1.0	0.1.1.0.0	
(a2 / and 
      :ARG0-of (o / obtain-01 
            :ARG1 (p / part 
                  :mod (s / such)) 
            :domain-of (p2 / possible) 
            :manner (b / band 
                  :ARG1-of (g / grow-01) 
                  :consist-of (c / customer 
                        :mod (c2 / continent 
                              :name (n / name 
                                    :op1 "Europe"))))) 
      :location-of (d / derive-01 
            :ARG0 (e / example) 
            :ARG1 (c3 / component 
                  :mod (u / use-01 
                        :ARG1 (a / and) 
                        :ARG2-of (d2 / design-01 
                              :ARG1 (c4 / car 
                                    :mod (s2 / sport)) 
                              :op-of (a4 / and))) 
                  :mod (o2 / often))) 
      :op1 (i / industry 
            :mod (a3 / aerospace)))

# ::snt the argument in the rest of the book starting in chapter 8 showing that all aspects of morality derive from common sources refutes such a possibility
# ::tok the argument in the rest of the book starting in chapter 8 showing that all aspects of morality derive from common sources refutes such a possibility
# ::alignments 25-26|0.1 23-24|0.1.0 22-23|0 21-22|0.0.0.0.0 20-21|0.0.0.0.0.0 18-19|0.0.0.0 17-18|0.0 15-16|0.0.0 14-15|0.0.0.2 12-13|0.0.0.1 11-12|0.0.0.1.0.0.0.0 10-11|0.0.0.1.1.0 8-9|0.0.0.1.1 7-8|0.0.0.1.0 4-5|0.0.0.1.0.0 1-2|0.0.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:03.970
# ::node	0	refute-01	22-23
# ::node	0.0	morality	17-18
# ::node	0.0.0	aspect	15-16
# ::node	0.0.0.0	derive-01	18-19
# ::node	0.0.0.0.0	source	21-22
# ::node	0.0.0.0.0.0	common	20-21
# ::node	0.0.0.1	show-01	12-13
# ::node	0.0.0.1.0	book	7-8
# ::node	0.0.0.1.0.0	rest	4-5
# ::node	0.0.0.1.0.0.0	argue-01	1-2
# ::node	0.0.0.1.0.0.0.0	8	11-12
# ::node	0.0.0.1.1	start-01	8-9
# ::node	0.0.0.1.1.0	chapter	10-11
# ::node	0.0.0.2	all	14-15
# ::node	0.1	possible	25-26
# ::node	0.1.0	such	23-24
# ::root	0	refute-01
# ::edge	argue-01	ARG0	8	0.0.0.1.0.0.0	0.0.0.1.0.0.0.0	
# ::edge	argue-01	ARG1	rest	0.0.0.1.0.0.0	0.0.0.1.0.0	
# ::edge	aspect	mod	morality	0.0.0	0.0	
# ::edge	aspect	quant	all	0.0.0	0.0.0.2	
# ::edge	book	part	rest	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	derive-01	ARG0	aspect	0.0.0.0	0.0.0	
# ::edge	derive-01	ARG2	source	0.0.0.0	0.0.0.0.0	
# ::edge	possible	mod	such	0.1	0.1.0	
# ::edge	refute-01	ARG0	morality	0	0.0	
# ::edge	refute-01	ARG1	possible	0	0.1	
# ::edge	show-01	ARG0	book	0.0.0.1	0.0.0.1.0	
# ::edge	show-01	ARG1	aspect	0.0.0.1	0.0.0	
# ::edge	source	mod	common	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	start-01	ARG0	chapter	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	start-01	ARG1	show-01	0.0.0.1.1	0.0.0.1	
(r / refute-01 
      :ARG0 (m / morality 
            :mod-of (a / aspect 
                  :ARG0-of (d / derive-01 
                        :ARG2 (s2 / source 
                              :mod (c / common))) 
                  :ARG1-of (s3 / show-01 
                        :ARG0 (b / book 
                              :part (r2 / rest 
                                    :ARG1-of (a3 / argue-01 
                                          :ARG0 8))) 
                        :ARG1-of (s4 / start-01 
                              :ARG0 (c2 / chapter))) 
                  :quant (a2 / all))) 
      :ARG1 (p / possible 
            :mod (s / such)))

# ::snt many will share my scepticism about the usefulness of evidence derived from such surveys mr macgregor said
# ::tok many will share my scepticism about the usefulness of evidence derived from such surveys mr macgregor said
# ::alignments 16-17|0 13-14|0.0 12-13|0.0.0 10-11|0.0.1 9-10|0.0.1.0 2-3|0.0.1.1 0-1|0.0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:04.000
# ::node	0	say-01	16-17
# ::node	0.0	survey-01	13-14
# ::node	0.0.0	such	12-13
# ::node	0.0.1	derive-01	10-11
# ::node	0.0.1.0	evidence-01	9-10
# ::node	0.0.1.1	share-01	2-3
# ::node	0.0.1.1.0	many	0-1
# ::root	0	say-01
# ::edge	derive-01	ARG1	evidence-01	0.0.1	0.0.1.0	
# ::edge	derive-01	ARG2	survey-01	0.0.1	0.0	
# ::edge	say-01	ARG1	survey-01	0	0.0	
# ::edge	share-01	ARG0	many	0.0.1.1	0.0.1.1.0	
# ::edge	share-01	ARG1	derive-01	0.0.1.1	0.0.1	
# ::edge	survey-01	ARG1	such	0.0	0.0.0	
(s / say-01 
      :ARG1 (s2 / survey-01 
            :ARG1 (s3 / such) 
            :ARG2-of (d / derive-01 
                  :ARG1 (e / evidence-01) 
                  :ARG1-of (s4 / share-01 
                        :ARG0 (m / many)))))

# ::snt cuchet which it resembles and from which it may derive is discontinuous
# ::tok cuchet which it resembles and from which it may derive is discontinuous
# ::alignments 9-10|0.0 8-9|0.0.2.0+0.0.2 7-8|0.0.0 4-5|0 2-3|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:04.041
# ::node	0	and	4-5
# ::node	0.0	derive-01	9-10
# ::node	0.0.0	it	7-8
# ::node	0.0.1	it	2-3
# ::node	0.0.2	date-entity	8-9
# ::node	0.0.2.0	5	8-9
# ::root	0	and
# ::edge	and	op1	derive-01	0	0.0	
# ::edge	date-entity	month	5	0.0.2	0.0.2.0	
# ::edge	derive-01	ARG0	it	0.0	0.0.0	
# ::edge	derive-01	ARG1	it	0.0	0.0.1	
# ::edge	derive-01	mod	date-entity	0.0	0.0.2	
(a / and 
      :op1 (d / derive-01 
            :ARG0 (i / it) 
            :ARG1 (i2 / it) 
            :mod (d2 / date-entity 
                  :month 5)))

# ::snt sometimes this has been exaggerated into a doctrine of arbitrary selfcreation based on the belief that all value derives from choice which is itself not guided by value and is therefore free i, the views explained above neither derive from nor support any such conception
# ::tok sometimes this has been exaggerated into a doctrine of arbitrary selfcreation based on the belief that all value derives from choice which is itself not guided by value and is therefore free i , the views explained above neither derive from nor support any such conception
# ::alignments 44-45|0.0.0.0.3.0.0.0.0 43-44|0.0.0.0.3.0.0.0.0.0 42-43|0.0.0.0.3 39-40|0.0.0.0.3.0.0.0 37-38|0.0.0.0.3.0.0 36-37|0.0.0.0.3.0 32-33|0.0 31-32|0.0.0 28-29|0.0.0.0 27-28|0.0.0.0.2 25-26|0.0.0.0.0 17-18|0.1 16-17|0.1.0 14-15|0 11-12|0.0.0.0.1.2 9-10|0.0.0.0.1.2.0 7-8|0.0.0.0.1.1 4-5|0.0.0.0.1 1-2|0.0.0.0.1.0 0-1|0.0.0.0.1.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:04.367
# ::node	0	believe-01	14-15
# ::node	0.0	i	32-33
# ::node	0.0.0	free-41	31-32
# ::node	0.0.0.0	and	28-29
# ::node	0.0.0.0.0	guide-01	25-26
# ::node	0.0.0.0.1	exaggerate-01	4-5
# ::node	0.0.0.0.1.0	this	1-2
# ::node	0.0.0.0.1.1	doctrine	7-8
# ::node	0.0.0.0.1.2	base-01	11-12
# ::node	0.0.0.0.1.2.0	arbitrary	9-10
# ::node	0.0.0.0.1.3	sometimes	0-1
# ::node	0.0.0.0.2	value-01	27-28
# ::node	0.0.0.0.3	support-01	42-43
# ::node	0.0.0.0.3.0	explain-01	36-37
# ::node	0.0.0.0.3.0.0	above	37-38
# ::node	0.0.0.0.3.0.0.0	derive-01	39-40
# ::node	0.0.0.0.3.0.0.0.0	such	44-45
# ::node	0.0.0.0.3.0.0.0.0.0	any	43-44
# ::node	0.1	value-01	17-18
# ::node	0.1.0	all	16-17
# ::root	0	believe-01
# ::edge	above	op1	derive-01	0.0.0.0.3.0.0	0.0.0.0.3.0.0.0	
# ::edge	and	op1	exaggerate-01	0.0.0.0	0.0.0.0.1	
# ::edge	and	op2	value-01	0.0.0.0	0.0.0.0.2	
# ::edge	and	op3	free-41	0.0.0.0	0.0.0	
# ::edge	and	op4	support-01	0.0.0.0	0.0.0.0.3	
# ::edge	base-01	ARG1	arbitrary	0.0.0.0.1.2	0.0.0.0.1.2.0	
# ::edge	believe-01	ARG0	i	0	0.0	
# ::edge	believe-01	ARG1	value-01	0	0.1	
# ::edge	derive-01	ARG1	such	0.0.0.0.3.0.0.0	0.0.0.0.3.0.0.0.0	
# ::edge	exaggerate-01	ARG0	this	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	exaggerate-01	ARG1	doctrine	0.0.0.0.1	0.0.0.0.1.1	
# ::edge	exaggerate-01	ARG2	base-01	0.0.0.0.1	0.0.0.0.1.2	
# ::edge	exaggerate-01	time	sometimes	0.0.0.0.1	0.0.0.0.1.3	
# ::edge	explain-01	ARG2	above	0.0.0.0.3.0	0.0.0.0.3.0.0	
# ::edge	free-41	ARG1	i	0.0.0	0.0	
# ::edge	guide-01	ARG2	and	0.0.0.0.0	0.0.0.0	
# ::edge	such	mod	any	0.0.0.0.3.0.0.0.0	0.0.0.0.3.0.0.0.0.0	
# ::edge	support-01	ARG1	explain-01	0.0.0.0.3	0.0.0.0.3.0	
# ::edge	value-01	quant	all	0.1	0.1.0	
(b / believe-01 
      :ARG0 (i / i 
            :ARG1-of (f / free-41 
                  :op-of (a3 / and 
                        :ARG2-of (g / guide-01) 
                        :op1 (e2 / exaggerate-01 
                              :ARG0 (t / this) 
                              :ARG1 (d2 / doctrine) 
                              :ARG2 (b2 / base-01 
                                    :ARG1 (a5 / arbitrary)) 
                              :time (s3 / sometimes)) 
                        :op2 (v / value-01) 
                        :op3 (s2 / support-01 
                              :ARG1 (e / explain-01 
                                    :ARG2 (a2 / above 
                                          :op1 (d / derive-01 
                                                :ARG1 (s / such 
                                                      :mod (a / any))))))))) 
      :ARG1 (v2 / value-01 
            :quant (a4 / all)))

# ::snt edinburgh fruitmarket gallery drawings gouaches collages by willi baumeister the german artist who derives inspiration from le corbusier leger and bauhaus and an installation of furniture and objects by alchimia the milanbased design group that refuses to accept artificial boundaries between art and design
# ::tok edinburgh fruitmarket gallery drawings gouaches collages by willi baumeister the german artist who derives inspiration from le corbusier leger and bauhaus and an installation of furniture and objects by alchimia the milanbased design group that refuses to accept artificial boundaries between art and design
# ::alignments 43-44|0.1 42-43|0 41-42|0.1.0.0 40-41|0.1.0 39-40|0.0.0 38-39|0.0.0.0 37-38|0.0 35-36|0.0.1 33-34|0.0.1.0 32-33|0.0.1.0.0 27-28|0.1.1.0.1.0.0.0.0 26-27|0.1.1.0.1.0.0.0 25-26|0.1.1.0.1.0 23-24|0.1.1.0.1.0.0 21-22|0.1.1 19-20|0.1.1.0.1 16-18|0.1.1.0.0.0.0+0.1.1.0.0.0.1+0.1.1.0.0.0+0.1.1.0.0 14-15|0.1.1.0 5-6|0.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:05.215
# ::node	0	and	42-43
# ::node	0.0	accept-01	37-38
# ::node	0.0.0	boundary	39-40
# ::node	0.0.0.0	artificial	38-39
# ::node	0.0.1	refuse-01	35-36
# ::node	0.0.1.0	group	33-34
# ::node	0.0.1.0.0	design-01	32-33
# ::node	0.0.1.0.0.0	collage	5-6
# ::node	0.1	design-01	43-44
# ::node	0.1.0	between	40-41
# ::node	0.1.0.0	art	41-42
# ::node	0.1.1	and	21-22
# ::node	0.1.1.0	inspire-01	14-15
# ::node	0.1.1.0.0	person	16-18
# ::node	0.1.1.0.0.0	name	16-18
# ::node	0.1.1.0.0.0.0	"corbusier"	16-18
# ::node	0.1.1.0.0.0.1	"le"	16-18
# ::node	0.1.1.0.1	and	19-20
# ::node	0.1.1.0.1.0	furniture	25-26
# ::node	0.1.1.0.1.0.0	install-01	23-24
# ::node	0.1.1.0.1.0.0.0	and	26-27
# ::node	0.1.1.0.1.0.0.0.0	object	27-28
# ::root	0	and
# ::edge	accept-01	ARG1	boundary	0.0	0.0.0	
# ::edge	and	op1	accept-01	0	0.0	
# ::edge	and	op1	design-01	0.1.1	0.1	
# ::edge	and	op1	inspire-01	0.1.1.0.1	0.1.1.0	
# ::edge	and	op1	object	0.1.1.0.1.0.0.0	0.1.1.0.1.0.0.0.0	
# ::edge	and	op2	design-01	0	0.1	
# ::edge	and	op2	furniture	0.1.1.0.1	0.1.1.0.1.0	
# ::edge	between	op1	art	0.1.0	0.1.0.0	
# ::edge	between	op2	design-01	0.1.0	0.1	
# ::edge	boundary	mod	artificial	0.0.0	0.0.0.0	
# ::edge	design-01	ARG0	group	0.0.1.0.0	0.0.1.0	
# ::edge	design-01	ARG1	collage	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	inspire-01	ARG0	person	0.1.1.0	0.1.1.0.0	
# ::edge	inspire-01	ARG1	and	0.1.1.0	0.1.1	
# ::edge	install-01	ARG1	furniture	0.1.1.0.1.0.0	0.1.1.0.1.0	
# ::edge	install-01	ARG2	and	0.1.1.0.1.0.0	0.1.1.0.1.0.0.0	
# ::edge	name	op1	"corbusier"	0.1.1.0.0.0	0.1.1.0.0.0.0	
# ::edge	name	op2	"le"	0.1.1.0.0.0	0.1.1.0.0.0.1	
# ::edge	person	name	name	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	refuse-01	ARG0	group	0.0.1	0.0.1.0	
# ::edge	refuse-01	ARG1	accept-01	0.0.1	0.0	
(a / and 
      :op1 (a4 / accept-01 
            :ARG1 (b2 / boundary 
                  :mod (a3 / artificial)) 
            :ARG1-of (r / refuse-01 
                  :ARG0 (g / group 
                        :ARG0-of (d2 / design-01 
                              :ARG1 (c / collage))))) 
      :op2 (d / design-01 
            :op-of (b / between 
                  :op1 (a2 / art)) 
            :op-of (a6 / and 
                  :ARG1-of (i2 / inspire-01 
                        :ARG0 (p / person 
                              :name (n / name 
                                    :op1 "corbusier" 
                                    :op2 "le")) 
                        :op-of (a7 / and 
                              :op1 (f / furniture 
                                    :ARG1-of (i / install-01 
                                          :ARG2 (a5 / and 
                                                :op1 (o / object)))))))))

# ::snt many moral views presuppose that there is more to morality than rights and duties and precepts which can be derived from them
# ::tok many moral views presuppose that there is more to morality than rights and duties and precepts which can be derived from them
# ::alignments 19-20|0.1.0 17-18|0.1.0.1 14-15|0.1 13-14|0.1.1.0.0 12-13|0.1.1.0 11-12|0.1.1 9-10|0 3-4|0.0 1-2|0.0.0 0-1|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:05.299
# ::node	0	morality	9-10
# ::node	0.0	presuppose-00	3-4
# ::node	0.0.0	moral	1-2
# ::node	0.1	and	14-15
# ::node	0.1.0	derive-01	19-20
# ::node	0.1.0.0	many	0-1
# ::node	0.1.0.1	possible	17-18
# ::node	0.1.1	right	11-12
# ::node	0.1.1.0	and	12-13
# ::node	0.1.1.0.0	duty	13-14
# ::root	0	morality
(m / morality 
      :ARG0-of (p2 / presuppose-00 
            :ARG1 (m2 / moral)) 
      :op-of (a / and 
            :ARG0-of (d / derive-01 
                  :ARG1 (m3 / many) 
                  :domain-of (p / possible)) 
            :op1 (r / right 
                  :op-of (a2 / and 
                        :op1 (d2 / duty)))))

# ::snt but then as nigel whiteley writes in the excellent illustrated catalogue that accompanies the show by the early 1970s there were two distinctive aesthetics for plastic one deriving from the modernist principle of truth to materials and respecting the modernist less is more aesthetic the other a symptom of pop sensibility which subverted principles and conventions of good taste in favour of impact and novelty
# ::tok but then as nigel whiteley writes in the excellent illustrated catalogue that accompanies the show by the early 1970s there were two distinctive aesthetics for plastic one deriving from the modernist principle of truth to materials and respecting the modernist less is more aesthetic the other a symptom of pop sensibility which subverted principles and conventions of good taste in favour of impact and novelty
# ::alignments 64-65|0.3.0.1.3.2.2 63-64|0.3.0.1.3.2 62-63|0.3.0.1.3.2.1 60-61|0.3.0.1.3.2.0 57-58|0.3.0.3 55-56|0.3.0.1.3.1 54-55|0.3.0.1.3 53-54|0.3.0.1.3.0 50-51|0.3.0.2.0 49-50|0.3.0.2.0.0 47-48|0.3.0.2 45-46|0.3.0.1.1 40-41|0.3.0.1.0 37-38|0.3.0.1 36-37|0.3.0 35-36|0.3.0.1.2 33-34|0.3.0.0.0 31-32|0.3.0.0 25-26|0.2.0 21-22|0.0 18-19|0.3.1 17-18|0.3.1.0 14-15|0.3 8-9|0.4 5-6|0.2 1-2|0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:06.126
# ::node	0	contrast-01	0-1
# ::node	0.0	2	21-22
# ::node	0.1	then	1-2
# ::node	0.2	write-01	5-6
# ::node	0.2.0	plastic	25-26
# ::node	0.3	show-01	14-15
# ::node	0.3.0	and	36-37
# ::node	0.3.0.0	principle	31-32
# ::node	0.3.0.0.0	truth	33-34
# ::node	0.3.0.1	respect-01	37-38
# ::node	0.3.0.1.0	less	40-41
# ::node	0.3.0.1.1	other	45-46
# ::node	0.3.0.1.2	material	35-36
# ::node	0.3.0.1.3	and	54-55
# ::node	0.3.0.1.3.0	principle	53-54
# ::node	0.3.0.1.3.1	convention	55-56
# ::node	0.3.0.1.3.2	and	63-64
# ::node	0.3.0.1.3.2.0	favor-01	60-61
# ::node	0.3.0.1.3.2.1	impact-01	62-63
# ::node	0.3.0.1.3.2.2	novelty	64-65
# ::node	0.3.0.2	symptom	47-48
# ::node	0.3.0.2.0	sensibility	50-51
# ::node	0.3.0.2.0.0	pop	49-50
# ::node	0.3.0.3	good	57-58
# ::node	0.3.1	1970	18-19
# ::node	0.3.1.0	early	17-18
# ::node	0.4	excellent	8-9
# ::root	0	contrast-01
# ::edge	1970	mod	early	0.3.1	0.3.1.0	
# ::edge	and	op1	impact-01	0.3.0.1.3.2	0.3.0.1.3.2.1	
# ::edge	and	op1	principle	0.3.0	0.3.0.0	
# ::edge	and	op1	respect-01	0.3.0.1.3	0.3.0.1	
# ::edge	and	op2	novelty	0.3.0.1.3.2	0.3.0.1.3.2.2	
# ::edge	and	op2	principle	0.3.0.1.3	0.3.0.1.3.0	
# ::edge	and	op2	respect-01	0.3.0	0.3.0.1	
# ::edge	and	op3	convention	0.3.0.1.3	0.3.0.1.3.1	
# ::edge	and	op3	symptom	0.3.0	0.3.0.2	
# ::edge	and	op4	and	0.3.0.1.3	0.3.0.1.3.2	
# ::edge	contrast-01	ARG0	2	0	0.0	
# ::edge	contrast-01	ARG1	then	0	0.1	
# ::edge	contrast-01	ARG2	show-01	0	0.3	
# ::edge	excellent	op1	contrast-01	0.4	0	
# ::edge	favor-01	ARG1	and	0.3.0.1.3.2.0	0.3.0.1.3.2	
# ::edge	good	poss	and	0.3.0.3	0.3.0	
# ::edge	principle	poss	truth	0.3.0.0	0.3.0.0.0	
# ::edge	respect-01	ARG0	less	0.3.0.1	0.3.0.1.0	
# ::edge	respect-01	ARG1	other	0.3.0.1	0.3.0.1.1	
# ::edge	respect-01	ARG3	material	0.3.0.1	0.3.0.1.2	
# ::edge	sensibility	mod	pop	0.3.0.2.0	0.3.0.2.0.0	
# ::edge	show-01	ARG0	and	0.3	0.3.0	
# ::edge	show-01	ARG1	1970	0.3	0.3.1	
# ::edge	symptom	poss	sensibility	0.3.0.2	0.3.0.2.0	
# ::edge	write-01	ARG0	plastic	0.2	0.2.0	
# ::edge	write-01	ARG1	contrast-01	0.2	0	
(c2 / contrast-01 
      :ARG0 2 
      :ARG1 (t2 / then) 
      :ARG1-of (w / write-01 
            :ARG0 (p4 / plastic)) 
      :ARG2 (s3 / show-01 
            :ARG0 (a3 / and 
                  :op1 (p3 / principle 
                        :poss (t / truth)) 
                  :op2 (r / respect-01 
                        :ARG0 (l / less) 
                        :ARG1 (o / other) 
                        :ARG3 (m / material) 
                        :op-of (a2 / and 
                              :op1 (p / principle) 
                              :op2 (c / convention) 
                              :op3 (a / and 
                                    :ARG1-of (f / favor-01) 
                                    :op1 (i / impact-01) 
                                    :op2 (n / novelty)))) 
                  :op3 (s2 / symptom 
                        :poss (s / sensibility 
                              :mod (p2 / pop))) 
                  :poss-of (g / good)) 
            :ARG1 (1 / 1970 
                  :mod (e / early))) 
      :op-of (e2 / excellent))

# ::snt it may be asked whether since a grasp of general principles is what is evidently needed and an ability to connect together ideas derived from different disciplines it would not be sensible to teach philosophy as a separate subject at school
# ::tok it may be asked whether since a grasp of general principles is what is evidently needed and an ability to connect together ideas derived from different disciplines it would not be sensible to teach philosophy as a separate subject at school
# ::alignments 40-41|0.0.2.0.1.0.0.0.0 38-39|0.0.2.0.1.0.0.0 37-38|0.0.2.0.1.0.0.0.1 34-35|0.0.2.0.1.0.0 33-34|0.0.2.0.1.0 31-32|0.0.2.0.1.0.1 27-28|0.0.2.0.1.0.1.0 26-27|0.0.0.1.0.0.0.0 25-26|0.0.0.1.0.0.0.0.0 23-24|0.0.0.1.0.0.0 22-23|0.0.0.1.0.0 21-22|0.0.0.1.0.1 20-21|0.0.0.1.0 18-19|0.0.0.1 16-17|0.0.2 15-16|0.0 14-15|0 10-11|0.0.0.0 9-10|0.0.0.0.0 7-8|0.0.0 5-6|0.0.1 3-4|0.0.2.0 1-2|0.0.2.0.1.1+0.0.2.0.1 0-1|0.0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:06.916
# ::node	0	evident	14-15
# ::node	0.0	need-01	15-16
# ::node	0.0.0	grasp-01	7-8
# ::node	0.0.0.0	principle	10-11
# ::node	0.0.0.0.0	general	9-10
# ::node	0.0.0.1	ability	18-19
# ::node	0.0.0.1.0	connect-01	20-21
# ::node	0.0.0.1.0.0	idea	22-23
# ::node	0.0.0.1.0.0.0	derive-01	23-24
# ::node	0.0.0.1.0.0.0.0	discipline	26-27
# ::node	0.0.0.1.0.0.0.0.0	differ-02	25-26
# ::node	0.0.0.1.0.1	together	21-22
# ::node	0.0.1	since	5-6
# ::node	0.0.2	and	16-17
# ::node	0.0.2.0	ask-02	3-4
# ::node	0.0.2.0.0	it	0-1
# ::node	0.0.2.0.1	date-entity	1-2
# ::node	0.0.2.0.1.0	teach-01	33-34
# ::node	0.0.2.0.1.0.0	philosophy	34-35
# ::node	0.0.2.0.1.0.0.0	subject	38-39
# ::node	0.0.2.0.1.0.0.0.0	school	40-41
# ::node	0.0.2.0.1.0.0.0.1	separate	37-38
# ::node	0.0.2.0.1.0.1	sensible	31-32
# ::node	0.0.2.0.1.0.1.0	it	27-28
# ::node	0.0.2.0.1.1	5	1-2
# ::root	0	evident
(e / evident 
      :manner-of (n / need-01 
            :ARG1 (g2 / grasp-01 
                  :ARG1 (p2 / principle 
                        :mod (g / general)) 
                  :domain-of (a / ability 
                        :instrument-of (c / connect-01 
                              :ARG1 (i2 / idea 
                                    :ARG1-of (d3 / derive-01 
                                          :ARG2 (d / discipline 
                                                :ARG1-of (d2 / differ-02)))) 
                              :mod (t2 / together)))) 
            :op-of (s5 / since) 
            :op-of (a2 / and 
                  :ARG2-of (a3 / ask-02 
                        :ARG1 (i3 / it) 
                        :domain-of (d4 / date-entity 
                              :domain (t / teach-01 
                                    :ARG1 (p / philosophy 
                                          :location (s2 / subject 
                                                :location (s / school) 
                                                :mod (s3 / separate))) 
                                    :domain-of (s4 / sensible 
                                          :domain (i / it))) 
                              :month 5)))))

# ::snt but just what is degas remembering  he kept his private life so secret that we do not know if his brothel imagery derives from firsthand personal experience or from fantasies fueled by viewing previous representations of brothel life notably those of constantin guys and by reading in the extensive prostitutional literature of the time
# ::tok but just what is degas remembering he kept his private life so secret that we do not know if his brothel imagery derives from firsthand personal experience or from fantasies fueled by viewing previous representations of brothel life notably those of constantin guys and by reading in the extensive prostitutional literature of the time
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:06.918
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the relation between a derivative right and the core right or any other right from which it derives is a justificatory one
# ::tok the relation between a derivative right and the core right or any other right from which it derives is a justificatory one
# ::alignments 16-17|0.0.0.1.0.0 12-13|0.0.0.0.0 11-12|0.0.0.0 10-11|0.0.0.1.1 8-9|0 6-7|0.0.0.1 4-5|0.0.0.1.0 2-3|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:07.005
# ::node	0	core	8-9
# ::node	0.0	between	2-3
# ::node	0.0.0	relate-01	1-2
# ::node	0.0.0.0	any	11-12
# ::node	0.0.0.0.0	other	12-13
# ::node	0.0.0.1	and	6-7
# ::node	0.0.0.1.0	derive-01	4-5
# ::node	0.0.0.1.0.0	it	16-17
# ::node	0.0.0.1.1	or	10-11
# ::root	0	core
(c / core 
      :op-of (b / between 
            :location-of (r / relate-01 
                  :ARG0 (a / any 
                        :mod-of (o / other)) 
                  :ARG1 (a2 / and 
                        :ARG1-of (d / derive-01 
                              :ARG0 (i / it)) 
                        :op1 (o2 / or)))))

# ::snt thus there is much anecdotal evidence of a widespread practice to settle claims below value on a mass volume scale in the belief that the cost of further litigation to the lawyer would be disproportionate to any additional profit he might derive from a larger jury award
# ::tok thus there is much anecdotal evidence of a widespread practice to settle claims below value on a mass volume scale in the belief that the cost of further litigation to the lawyer would be disproportionate to any additional profit he might derive from a larger jury award
# ::alignments 46-47|0.0.0.1.0.1.0.0 45-46|0.0.0.1.0.1.0.0.0 44-45|0.0.0.1.0.1.0.0.2 41-42|0.0.0.1.0.1.0.0.1 39-40|0.0.0.1.0.1.0.0.1.0 38-39|0.0.0.1.0.1.0.0.1.1 37-38|0.0.0.1.0.1.0.0.1.1.0 36-37|0.0.0.1.0.1.0.0.1.1.1 31-32|0.0.1.1 27-28|0.0.0.1.0.1.0.1 25-26|0.0.0.1.0.1.0 22-23|0.0.0.1.0.1 19-20|0.0.0.0 18-19|0.0.0.1.0.0 17-18|0.0.0.1.0.0.0 14-15|0.0.0.1.0 13-14|0.0.0.1 12-13|0.0.0 11-12|0.0 9-10|0.0.1 8-9|0.0.1.0 5-6|0 3-4|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:07.399
# ::node	0	evidence-01	5-6
# ::node	0.0	settle-02	11-12
# ::node	0.0.0	claim-01	12-13
# ::node	0.0.0.0	scale	19-20
# ::node	0.0.0.1	below	13-14
# ::node	0.0.0.1.0	value-01	14-15
# ::node	0.0.0.1.0.0	volume	18-19
# ::node	0.0.0.1.0.0.0	mass	17-18
# ::node	0.0.0.1.0.1	believe-01	22-23
# ::node	0.0.0.1.0.1.0	cost-01	25-26
# ::node	0.0.0.1.0.1.0.0	award-01	46-47
# ::node	0.0.0.1.0.1.0.0.0	jury	45-46
# ::node	0.0.0.1.0.1.0.0.1	derive-01	41-42
# ::node	0.0.0.1.0.1.0.0.1.0	he	39-40
# ::node	0.0.0.1.0.1.0.0.1.1	profit-01	38-39
# ::node	0.0.0.1.0.1.0.0.1.1.0	additional	37-38
# ::node	0.0.0.1.0.1.0.0.1.1.1	any	36-37
# ::node	0.0.0.1.0.1.0.0.2	large	44-45
# ::node	0.0.0.1.0.1.0.1	further	27-28
# ::node	0.0.1	practice-01	9-10
# ::node	0.0.1.0	wide	8-9
# ::node	0.0.1.1	lawyer	31-32
# ::node	0.1	much	3-4
# ::root	0	evidence-01
# ::edge	award-01	ARG1	jury	0.0.0.1.0.1.0.0	0.0.0.1.0.1.0.0.0	
# ::edge	award-01	mod	large	0.0.0.1.0.1.0.0	0.0.0.1.0.1.0.0.2	
# ::edge	believe-01	ARG1	cost-01	0.0.0.1.0.1	0.0.0.1.0.1.0	
# ::edge	below	op1	value-01	0.0.0.1	0.0.0.1.0	
# ::edge	claim-01	ARG1	scale	0.0.0	0.0.0.0	
# ::edge	claim-01	location	below	0.0.0	0.0.0.1	
# ::edge	cost-01	ARG1	award-01	0.0.0.1.0.1.0	0.0.0.1.0.1.0.0	
# ::edge	cost-01	ARG2	further	0.0.0.1.0.1.0	0.0.0.1.0.1.0.1	
# ::edge	derive-01	ARG0	he	0.0.0.1.0.1.0.0.1	0.0.0.1.0.1.0.0.1.0	
# ::edge	derive-01	ARG1	profit-01	0.0.0.1.0.1.0.0.1	0.0.0.1.0.1.0.0.1.1	
# ::edge	derive-01	ARG2	award-01	0.0.0.1.0.1.0.0.1	0.0.0.1.0.1.0.0	
# ::edge	evidence-01	purpose	settle-02	0	0.0	
# ::edge	evidence-01	quant	much	0	0.1	
# ::edge	lawyer	op1	practice-01	0.0.1.1	0.0.1	
# ::edge	practice-01	ARG1	settle-02	0.0.1	0.0	
# ::edge	practice-01	mod	wide	0.0.1	0.0.1.0	
# ::edge	profit-01	mod	additional	0.0.0.1.0.1.0.0.1.1	0.0.0.1.0.1.0.0.1.1.0	
# ::edge	profit-01	mod	any	0.0.0.1.0.1.0.0.1.1	0.0.0.1.0.1.0.0.1.1.1	
# ::edge	settle-02	ARG1	claim-01	0.0	0.0.0	
# ::edge	value-01	ARG1	volume	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	value-01	ARG2	believe-01	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	volume	degree	mass	0.0.0.1.0.0	0.0.0.1.0.0.0	
(e / evidence-01 
      :purpose (s2 / settle-02 
            :ARG1 (c2 / claim-01 
                  :ARG1 (s / scale) 
                  :location (b2 / below 
                        :op1 (v2 / value-01 
                              :ARG1 (v / volume 
                                    :degree (m / mass)) 
                              :ARG2 (b / believe-01 
                                    :ARG1 (c / cost-01 
                                          :ARG1 (a / award-01 
                                                :ARG1 (j / jury) 
                                                :ARG2-of (d / derive-01 
                                                      :ARG0 (h / he) 
                                                      :ARG1 (p / profit-01 
                                                            :mod (a2 / additional) 
                                                            :mod (a3 / any))) 
                                                :mod (l / large)) 
                                          :ARG2 (f / further)))))) 
            :ARG1-of (p2 / practice-01 
                  :mod (w / wide) 
                  :op-of (l2 / lawyer))) 
      :quant (m2 / much))

# ::snt but how did mt katmai come to be demolished  its thought that at the  time of the eruption a large volume of molten rock may have existed in a  magma chamber beneath the volcano and that this was connected by some  kind of subterranean volcanic plumbing with the vents around novarupta  eight kilometres away so that most of the material that was actually  erupted at these vents was derived from beneath katmai
# ::tok but how did mt katmai come to be demolished its thought that at the time of the eruption a large volume of molten rock may have existed in a magma chamber beneath the volcano and that this was connected by some kind of subterranean volcanic plumbing with the vents around novarupta eight kilometres away so that most of the material that was actually erupted at these vents was derived from beneath katmai
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:07.401
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt nor did this brief fashion for workingclass subjects derive directly from their critical campaigns except insofar as richardson had directed look back in anger on the stage in 1956 and that production marked the cultural watershed from which a fashion for realism seemed to flow
# ::tok nor did this brief fashion for workingclass subjects derive directly from their critical campaigns except insofar as richardson had directed look back in anger on the stage in 1956 and that production marked the cultural watershed from which a fashion for realism seemed to flow
# ::alignments 44-45|0.1.0.0.1.1.0 42-43|0.1.0.0.1.1 41-42|0.1.0.0.1.1.0.1 39-40|0.1.0.0.1.1.0.0 34-35|0.1.0.0.0.1.0 32-33|0.1.0.0.1 31-32|0.1.0.0.1.0 29-30|0.1.0.0 28-29|0.1.0.0.1.0.0.0+0.1.0.0.1.0.0 26-27|0.0 23-24|0 21-22|0.1 19-20|0.1.0 14-15|0.1.0.0.0.1.1 13-14|0.1.0.0.0.1 12-13|0.1.0.0.0.1.2 9-10|0.1.0.0.0.2 8-9|0.1.0.0.0 7-8|0.1.0.0.0.1.3 4-5|0.1.0.0.0.0 3-4|0.1.0.0.0.0.0 2-3|0.1.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:07.891
# ::node	0	anger-01	23-24
# ::node	0.0	stage	26-27
# ::node	0.1	back	21-22
# ::node	0.1.0	direct-01	19-20
# ::node	0.1.0.0	and	29-30
# ::node	0.1.0.0.0	derive-01	8-9
# ::node	0.1.0.0.0.0	fashion	4-5
# ::node	0.1.0.0.0.0.0	brief	3-4
# ::node	0.1.0.0.0.0.1	this	2-3
# ::node	0.1.0.0.0.1	campaign-01	13-14
# ::node	0.1.0.0.0.1.0	culture	34-35
# ::node	0.1.0.0.0.1.1	except-00	14-15
# ::node	0.1.0.0.0.1.2	critical	12-13
# ::node	0.1.0.0.0.1.3	subject	7-8
# ::node	0.1.0.0.0.2	direct	9-10
# ::node	0.1.0.0.1	mark-01	32-33
# ::node	0.1.0.0.1.0	produce-01	31-32
# ::node	0.1.0.0.1.0.0	date-entity	28-29
# ::node	0.1.0.0.1.0.0.0	1956	28-29
# ::node	0.1.0.0.1.1	seem-01	42-43
# ::node	0.1.0.0.1.1.0	flow-01	44-45
# ::node	0.1.0.0.1.1.0.0	fashion	39-40
# ::node	0.1.0.0.1.1.0.1	realism	41-42
# ::root	0	anger-01
# ::edge	and	op1	direct-01	0.1.0.0	0.1.0	
# ::edge	and	op2	mark-01	0.1.0.0	0.1.0.0.1	
# ::edge	anger-01	ARG1	stage	0	0.0	
# ::edge	anger-01	manner	back	0	0.1	
# ::edge	campaign-01	ARG0	culture	0.1.0.0.0.1	0.1.0.0.0.1.0	
# ::edge	campaign-01	ARG1	except-00	0.1.0.0.0.1	0.1.0.0.0.1.1	
# ::edge	campaign-01	mod	critical	0.1.0.0.0.1	0.1.0.0.0.1.2	
# ::edge	date-entity	year	1956	0.1.0.0.1.0.0	0.1.0.0.1.0.0.0	
# ::edge	derive-01	ARG0	fashion	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	derive-01	ARG1	and	0.1.0.0.0	0.1.0.0	
# ::edge	derive-01	ARG2	campaign-01	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	derive-01	manner	direct	0.1.0.0.0	0.1.0.0.0.2	
# ::edge	direct-01	ARG1	back	0.1.0	0.1	
# ::edge	fashion	mod	brief	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	fashion	mod	this	0.1.0.0.0.0	0.1.0.0.0.0.1	
# ::edge	flow-01	ARG0	fashion	0.1.0.0.1.1.0	0.1.0.0.1.1.0.0	
# ::edge	flow-01	ARG1	realism	0.1.0.0.1.1.0	0.1.0.0.1.1.0.1	
# ::edge	mark-01	ARG1	produce-01	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	mark-01	manner	seem-01	0.1.0.0.1	0.1.0.0.1.1	
# ::edge	produce-01	ARG1	date-entity	0.1.0.0.1.0	0.1.0.0.1.0.0	
# ::edge	seem-01	ARG1	flow-01	0.1.0.0.1.1	0.1.0.0.1.1.0	
# ::edge	subject	time	campaign-01	0.1.0.0.0.1.3	0.1.0.0.0.1	
(a2 / anger-01 
      :ARG1 (s2 / stage) 
      :manner (b / back 
            :ARG1-of (d2 / direct-01 
                  :op-of (a / and 
                        :ARG1-of (d4 / derive-01 
                              :ARG0 (f3 / fashion 
                                    :mod (b2 / brief) 
                                    :mod (t / this)) 
                              :ARG2 (c2 / campaign-01 
                                    :ARG0 (c / culture) 
                                    :ARG1 (e / except-00) 
                                    :mod (c3 / critical) 
                                    :time-of (s3 / subject)) 
                              :manner (d3 / direct)) 
                        :op1 (m / mark-01 
                              :ARG1 (p / produce-01 
                                    :ARG1 (d / date-entity 
                                          :year 1956)) 
                              :manner (s / seem-01 
                                    :ARG1 (f / flow-01 
                                          :ARG0 (f2 / fashion) 
                                          :ARG1 (r / realism))))))))

# ::snt he says 50 per cent of the islands income derives from tourism which developed without control under pasok while vital needs like a sewage system and improved water supply were neglected
# ::tok he says 50 per cent of the islands income derives from tourism which developed without control under pasok while vital needs like a sewage system and improved water supply were neglected
# ::alignments 30-31|0.1.0 28-29|0.1.2 27-28|0.1.2.0 26-27|0.1.2.1 25-26|0.1 24-25|0.1.1.0 23-24|0.1.1.0.0 20-21|0.1.1 19-20|0.1.1.1 15-16|0.1.0.1.2 13-14|0.1.0.1 11-12|0.1.0.1.1 8-9|0.1.0.0 7-8|0.1.0.0.0 4-5|0.1.0.1.0.0+0.1.0.1.0 2-3|0.1.0.1.2.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:08.337
# ::node	0	say-01	1-2
# ::node	0.0	he	0-1
# ::node	0.1	and	25-26
# ::node	0.1.0	neglect-01	30-31
# ::node	0.1.0.0	income	8-9
# ::node	0.1.0.0.0	island	7-8
# ::node	0.1.0.1	develop-02	13-14
# ::node	0.1.0.1.0	monetary-quantity	4-5
# ::node	0.1.0.1.0.0	cent	4-5
# ::node	0.1.0.1.1	tourism	11-12
# ::node	0.1.0.1.2	control-01	15-16
# ::node	0.1.0.1.2.0	50	2-3
# ::node	0.1.1	need-01	20-21
# ::node	0.1.1.0	system	24-25
# ::node	0.1.1.0.0	sewage	23-24
# ::node	0.1.1.1	vital	19-20
# ::node	0.1.2	supply-01	28-29
# ::node	0.1.2.0	water	27-28
# ::node	0.1.2.1	improve-01	26-27
# ::root	0	say-01
# ::edge	and	op1	need-01	0.1	0.1.1	
# ::edge	and	op2	supply-01	0.1	0.1.2	
# ::edge	control-01	ARG1	50	0.1.0.1.2	0.1.0.1.2.0	
# ::edge	develop-02	ARG0	monetary-quantity	0.1.0.1	0.1.0.1.0	
# ::edge	develop-02	ARG1	tourism	0.1.0.1	0.1.0.1.1	
# ::edge	develop-02	ARG2	control-01	0.1.0.1	0.1.0.1.2	
# ::edge	develop-02	purpose	neglect-01	0.1.0.1	0.1.0	
# ::edge	improve-01	ARG1	supply-01	0.1.2.1	0.1.2	
# ::edge	income	mod	island	0.1.0.0	0.1.0.0.0	
# ::edge	monetary-quantity	unit	cent	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	need-01	ARG1	system	0.1.1	0.1.1.0	
# ::edge	need-01	mod	vital	0.1.1	0.1.1.1	
# ::edge	neglect-01	ARG0	and	0.1.0	0.1	
# ::edge	neglect-01	ARG1	income	0.1.0	0.1.0.0	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	and	0	0.1	
# ::edge	supply-01	ARG1	water	0.1.2	0.1.2.0	
# ::edge	system	mod	sewage	0.1.1.0	0.1.1.0.0	
(s4 / say-01 
      :ARG0 (h / he) 
      :ARG1 (a / and 
            :ARG0-of (n / neglect-01 
                  :ARG1 (i2 / income 
                        :mod (i3 / island)) 
                  :purpose-of (d / develop-02 
                        :ARG0 (m / monetary-quantity 
                              :unit (c2 / cent)) 
                        :ARG1 (t / tourism) 
                        :ARG2 (c / control-01 
                              :ARG1 50))) 
            :op1 (n2 / need-01 
                  :ARG1 (s2 / system 
                        :mod (s3 / sewage)) 
                  :mod (v / vital)) 
            :op2 (s / supply-01 
                  :ARG1 (w / water) 
                  :ARG1-of (i / improve-01))))

# ::snt from their residency at the fridge during the first summer of love halo used slide and film projectors to throw up a collage of opart patterns film loops of dancers like eboy and wumni and unique fractals derived from video feedback
# ::tok from their residency at the fridge during the first summer of love halo used slide and film projectors to throw up a collage of opart patterns film loops of dancers like eboy and wumni and unique fractals derived from video feedback
# ::alignments 40-41|0.1 39-40|0.1.0 37-38|0 35-36|0.0.1.0.1.1.0 34-35|0.0 32-33|0.0.1.1.0 29-30|0.0.1.1+0.0.1 26-27|0.0.0.0 25-26|0.0.0 19-20|0.0.1.0.0 16-17|0.0.1.0.1.2 15-16|0.0.1.0.1 14-15|0.0.1.0.1.1 13-14|0.0.1.0 11-12|0.0.1.0.1.0 9-10|0.0.1.0.0.0 2-3|0.0.1.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:08.486
# ::node	0	derive-01	37-38
# ::node	0.0	and	34-35
# ::node	0.0.0	pattern-01	25-26
# ::node	0.0.0.0	film	26-27
# ::node	0.0.1	person	29-30
# ::node	0.0.1.0	use-01	13-14
# ::node	0.0.1.0.0	throw-01	19-20
# ::node	0.0.1.0.0.0	summer	9-10
# ::node	0.0.1.0.1	and	15-16
# ::node	0.0.1.0.1.0	love-01	11-12
# ::node	0.0.1.0.1.1	slide-01	14-15
# ::node	0.0.1.0.1.1.0	unique	35-36
# ::node	0.0.1.0.1.2	film	16-17
# ::node	0.0.1.0.2	residency	2-3
# ::node	0.0.1.1	dance-01	29-30
# ::node	0.0.1.1.0	and	32-33
# ::node	0.1	feedback	40-41
# ::node	0.1.0	video	39-40
# ::root	0	derive-01
# ::edge	and	op1	person	0.0	0.0.1	
# ::edge	and	op1	use-01	0.0.1.0.1	0.0.1.0	
# ::edge	and	op2	slide-01	0.0.1.0.1	0.0.1.0.1.1	
# ::edge	and	op3	film	0.0.1.0.1	0.0.1.0.1.2	
# ::edge	dance-01	ARG0	person	0.0.1.1	0.0.1	
# ::edge	dance-01	ARG1	and	0.0.1.1	0.0.1.1.0	
# ::edge	derive-01	ARG1	and	0	0.0	
# ::edge	derive-01	ARG2	feedback	0	0.1	
# ::edge	feedback	mod	video	0.1	0.1.0	
# ::edge	love-01	ARG1	and	0.0.1.0.1.0	0.0.1.0.1	
# ::edge	pattern-01	ARG0	film	0.0.0	0.0.0.0	
# ::edge	pattern-01	location	and	0.0.0	0.0	
# ::edge	slide-01	ARG1	unique	0.0.1.0.1.1	0.0.1.0.1.1.0	
# ::edge	throw-01	ARG1	summer	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	use-01	ARG0	person	0.0.1.0	0.0.1	
# ::edge	use-01	ARG2	throw-01	0.0.1.0	0.0.1.0.0	
# ::edge	use-01	time	residency	0.0.1.0	0.0.1.0.2	
(d / derive-01 
      :ARG1 (a / and 
            :location-of (p2 / pattern-01 
                  :ARG0 (f2 / film)) 
            :op1 (p / person 
                  :ARG0-of (u2 / use-01 
                        :ARG2 (t / throw-01 
                              :ARG1 (s2 / summer)) 
                        :op-of (a3 / and 
                              :ARG1-of (l / love-01) 
                              :op1 (s / slide-01 
                                    :ARG1 (u / unique)) 
                              :op2 (f3 / film)) 
                        :time (r / residency)) 
                  :ARG0-of (d2 / dance-01 
                        :ARG1 (a2 / and)))) 
      :ARG2 (f / feedback 
            :mod (v / video)))

# ::snt information on the other hand is derived from data with the intention of making it available for decision making
# ::tok information on the other hand is derived from data with the intention of making it available for decision making
# ::alignments 17-18|0 15-16|0.0.0 14-15|0.0 11-12|0.1.0.1 8-9|0.1.0.0 6-7|0.1.0 4-5|0.1.1 3-4|0.1.1.0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:08.522
# ::node	0	decide-01	17-18
# ::node	0.0	it	14-15
# ::node	0.0.0	available	15-16
# ::node	0.1	information	0-1
# ::node	0.1.0	derive-01	6-7
# ::node	0.1.0.0	data	8-9
# ::node	0.1.0.1	intend-01	11-12
# ::node	0.1.1	hand	4-5
# ::node	0.1.1.0	other	3-4
# ::root	0	decide-01
# ::edge	available	op1	it	0.0.0	0.0	
# ::edge	decide-01	ARG0	it	0	0.0	
# ::edge	decide-01	ARG1	information	0	0.1	
# ::edge	derive-01	ARG0	data	0.1.0	0.1.0.0	
# ::edge	derive-01	ARG1	information	0.1.0	0.1	
# ::edge	derive-01	ARG2	intend-01	0.1.0	0.1.0.1	
# ::edge	hand	mod	other	0.1.1	0.1.1.0	
# ::edge	information	topic	hand	0.1	0.1.1	
(d / decide-01 
      :ARG0 (i / it 
            :op-of (a / available)) 
      :ARG1 (i3 / information 
            :ARG1-of (d3 / derive-01 
                  :ARG0 (d2 / data) 
                  :ARG2 (i2 / intend-01)) 
            :topic (h / hand 
                  :mod (o / other))))

# ::snt the frequently mistranslated motto of the garter honi soit qui mal y pense derives from an incident at the ball to celebrate the capture of calais when the countess of salisbury either accidentally or otherwise dropped a garter
# ::tok the frequently mistranslated motto of the garter honi soit qui mal y pense derives from an incident at the ball to celebrate the capture of calais when the countess of salisbury either accidentally or otherwise dropped a garter
# ::alignments 35-36|0 34-35|0.1 33-34|0.2 32-33|0.2.1 31-32|0.2.1.0 23-24|0.2.0.1 21-22|0.2.0 19-20|0.2.0.0 16-17|0.2.0.0.0 11-12|0.0 7-9|0.2.0.2.0.0+0.2.0.2.0.1+0.2.0.2.0+0.2.0.2 3-4|0.2.0.3 2-3|0.2.0.3.0 1-2|0.2.0.3.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:08.905
# ::node	0	drop-01	35-36
# ::node	0.0	y	11-12
# ::node	0.1	otherwise	34-35
# ::node	0.2	or	33-34
# ::node	0.2.0	celebrate-02	21-22
# ::node	0.2.0.0	ball	19-20
# ::node	0.2.0.0.0	incident	16-17
# ::node	0.2.0.1	capture-01	23-24
# ::node	0.2.0.2	organization	7-9
# ::node	0.2.0.2.0	name	7-9
# ::node	0.2.0.2.0.0	"soit"	7-9
# ::node	0.2.0.2.0.1	"honi"	7-9
# ::node	0.2.0.3	motto	3-4
# ::node	0.2.0.3.0	mistranslate-00	2-3
# ::node	0.2.0.3.0.0	frequent	1-2
# ::node	0.2.1	accidental	32-33
# ::node	0.2.1.0	either	31-32
# ::root	0	drop-01
# ::edge	celebrate-02	ARG0	ball	0.2.0	0.2.0.0	
# ::edge	celebrate-02	ARG1	capture-01	0.2.0	0.2.0.1	
# ::edge	celebrate-02	ARG2	organization	0.2.0	0.2.0.2	
# ::edge	celebrate-02	condition	or	0.2.0	0.2	
# ::edge	celebrate-02	location	motto	0.2.0	0.2.0.3	
# ::edge	drop-01	ARG1	y	0	0.0	
# ::edge	drop-01	mod	otherwise	0	0.1	
# ::edge	either	op1	accidental	0.2.1.0	0.2.1	
# ::edge	incident	mod	ball	0.2.0.0.0	0.2.0.0	
# ::edge	mistranslate-00	ARG1	motto	0.2.0.3.0	0.2.0.3	
# ::edge	mistranslate-00	degree	frequent	0.2.0.3.0	0.2.0.3.0.0	
# ::edge	name	op1	"soit"	0.2.0.2.0	0.2.0.2.0.0	
# ::edge	name	op2	"honi"	0.2.0.2.0	0.2.0.2.0.1	
# ::edge	or	op1	accidental	0.2	0.2.1	
# ::edge	or	op2	drop-01	0.2	0	
# ::edge	organization	name	name	0.2.0.2	0.2.0.2.0	
(d / drop-01 
      :ARG1 (y / y) 
      :mod (o / otherwise) 
      :op-of (o2 / or 
            :condition-of (c2 / celebrate-02 
                  :ARG0 (b / ball 
                        :mod-of (i / incident)) 
                  :ARG1 (c / capture-01) 
                  :ARG2 (o3 / organization 
                        :name (n / name 
                              :op1 "soit" 
                              :op2 "honi")) 
                  :location (m / motto 
                        :ARG1-of (m2 / mistranslate-00 
                              :degree (f / frequent)))) 
            :op1 (a / accidental 
                  :op-of (e / either))))

# ::snt the princess is a massive long wheelbase limousine derived from the standard austin 4litre sixcylinder a135
# ::tok the princess is a massive long wheelbase limousine derived from the standard austin 4litre sixcylinder a135
# ::alignments 11-12|0.0 8-9|0 4-5|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:08.923
# ::node	0	derive-01	8-9
# ::node	0.0	standard	11-12
# ::node	0.0.0	massive	4-5
# ::root	0	derive-01
# ::edge	derive-01	ARG1	standard	0	0.0	
# ::edge	standard	mod	massive	0.0	0.0.0	
(d / derive-01 
      :ARG1 (s / standard 
            :mod (m / massive)))

# ::snt the picture of the universe as a mechanical affair of matter in motion did not originate but rather was painted afresh in the seventeenth century it was derived from the atomic theory of the ancient greeks democritus and epicurus
# ::tok the picture of the universe as a mechanical affair of matter in motion did not originate but rather was painted afresh in the seventeenth century it was derived from the atomic theory of the ancient greeks democritus and epicurus
# ::alignments 37-38|0.0 34-35|0.2.1 31-32|0.0.0.2 30-31|0.0.0.2.0 27-28|0.0.0 25-26|0.0.0.1 19-20|0.2 16-17|0 15-16|0.1 12-13|0.1.0.0 10-11|0.1.0 8-9|0.1.0.1 7-8|0.0.0.0 4-5|0.2.0.0 1-2|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:09.635
# ::node	0	contrast-01	16-17
# ::node	0.0	and	37-38
# ::node	0.0.0	derive-01	27-28
# ::node	0.0.0.0	mechanics	7-8
# ::node	0.0.0.1	it	25-26
# ::node	0.0.0.2	theory	31-32
# ::node	0.0.0.2.0	atom	30-31
# ::node	0.1	originate-01	15-16
# ::node	0.1.0	matter	10-11
# ::node	0.1.0.0	motion	12-13
# ::node	0.1.0.1	affair	8-9
# ::node	0.2	paint-03	19-20
# ::node	0.2.0	picture	1-2
# ::node	0.2.0.0	universe	4-5
# ::node	0.2.1	ancient	34-35
# ::root	0	contrast-01
# ::edge	affair	topic	matter	0.1.0.1	0.1.0	
# ::edge	and	op1	derive-01	0.0	0.0.0	
# ::edge	contrast-01	ARG0	and	0	0.0	
# ::edge	contrast-01	ARG1	originate-01	0	0.1	
# ::edge	contrast-01	ARG2	paint-03	0	0.2	
# ::edge	derive-01	ARG0	mechanics	0.0.0	0.0.0.0	
# ::edge	derive-01	ARG1	it	0.0.0	0.0.0.1	
# ::edge	derive-01	ARG2	theory	0.0.0	0.0.0.2	
# ::edge	matter	topic	motion	0.1.0	0.1.0.0	
# ::edge	originate-01	ARG0	matter	0.1	0.1.0	
# ::edge	paint-03	ARG0	picture	0.2	0.2.0	
# ::edge	paint-03	ARG1	ancient	0.2	0.2.1	
# ::edge	picture	poss	universe	0.2.0	0.2.0.0	
# ::edge	theory	mod	atom	0.0.0.2	0.0.0.2.0	
(c / contrast-01 
      :ARG0 (a / and 
            :op1 (d / derive-01 
                  :ARG0 (m3 / mechanics) 
                  :ARG1 (i / it) 
                  :ARG2 (t / theory 
                        :mod (a3 / atom)))) 
      :ARG1 (o / originate-01 
            :ARG0 (m2 / matter 
                  :topic (m / motion) 
                  :topic-of (a4 / affair))) 
      :ARG2 (p / paint-03 
            :ARG0 (p2 / picture 
                  :poss (u / universe)) 
            :ARG1 (a2 / ancient)))

# ::snt properties of this sort were supposed to flow derive or emanate from the form
# ::tok properties of this sort were supposed to flow derive or emanate from the form
# ::alignments 13-14|0.1.1.0 9-10|0.1.1 8-9|0.1 7-8|0.1.0 5-6|0 3-4|0.0.0 2-3|0.0.0.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:09.691
# ::node	0	suppose-02	5-6
# ::node	0.0	property	0-1
# ::node	0.0.0	sort	3-4
# ::node	0.0.0.0	this	2-3
# ::node	0.1	derive-01	8-9
# ::node	0.1.0	flow-01	7-8
# ::node	0.1.1	or	9-10
# ::node	0.1.1.0	form	13-14
# ::root	0	suppose-02
# ::edge	derive-01	ARG1	flow-01	0.1	0.1.0	
# ::edge	or	op1	derive-01	0.1.1	0.1	
# ::edge	or	time	form	0.1.1	0.1.1.0	
# ::edge	property	mod	sort	0.0	0.0.0	
# ::edge	sort	mod	this	0.0.0	0.0.0.0	
# ::edge	suppose-02	ARG1	property	0	0.0	
# ::edge	suppose-02	ARG2	derive-01	0	0.1	
(s / suppose-02 
      :ARG1 (p / property 
            :mod (s2 / sort 
                  :mod (t / this))) 
      :ARG2 (d / derive-01 
            :ARG1 (f2 / flow-01) 
            :op-of (o / or 
                  :time (f / form))))

# ::snt as the radiowave washes over the telescopes they can compare its intensity and phase and can add and subtract the amplitudes of the wave to derive more information than would be obtainable by one telescope alone
# ::tok as the radiowave washes over the telescopes they can compare its intensity and phase and can add and subtract the amplitudes of the wave to derive more information than would be obtainable by one telescope alone
# ::alignments 35-36|0.0.1.0 34-35|0.0.1.3.0.0 27-28|0.0.1.3.0.1 25-26|0.0.1.3.0 23-24|0.0.1.1 17-18|0.0.1.3 16-17|0.0.1 15-16|0.0.1.2.0 14-15|0.0.1.2 13-14|0 12-13|0.0 11-12|0.0.0.0.0 9-10|0.0.0 8-9|0.0.0.1 7-8|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:10.103
# ::node	0	phase	13-14
# ::node	0.0	and	12-13
# ::node	0.0.0	compare-01	9-10
# ::node	0.0.0.0	they	7-8
# ::node	0.0.0.0.0	intensity	11-12
# ::node	0.0.0.1	possible	8-9
# ::node	0.0.1	add-02	16-17
# ::node	0.0.1.0	alone	35-36
# ::node	0.0.1.1	wave	23-24
# ::node	0.0.1.2	and	14-15
# ::node	0.0.1.2.0	possible	15-16
# ::node	0.0.1.3	and	17-18
# ::node	0.0.1.3.0	derive-01	25-26
# ::node	0.0.1.3.0.0	telescope	34-35
# ::node	0.0.1.3.0.1	information	27-28
# ::root	0	phase
(p2 / phase 
      :op-of (a5 / and 
            :ARG1-of (c / compare-01 
                  :ARG0 (t2 / they 
                        :poss-of (i2 / intensity)) 
                  :domain-of (p3 / possible)) 
            :op1 (a3 / add-02 
                  :ARG0 (a / alone) 
                  :ARG1 (w / wave) 
                  :op-of (a4 / and 
                        :op1 (p / possible)) 
                  :op-of (a2 / and 
                        :op1 (d / derive-01 
                              :ARG0 (t / telescope) 
                              :ARG1 (i / information))))))

# ::snt the modern approach to the question of consideration would be that where there were benefits derived by each party to a contract of variation even though one party did not suffer a detriment that would not be fatal to establishing sufficient consideration to support the agreement
# ::tok the modern approach to the question of consideration would be that where there were benefits derived by each party to a contract of variation even though one party did not suffer a detriment that would not be fatal to establishing sufficient consideration to support the agreement
# ::alignments 45-46|0.0.0.2.2.0.1.0 43-44|0.0.0.2.2.0.1 41-42|0.0.0.2.2.0 40-41|0.0.0.2.2.0.0 39-40|0.0.0.2.2.0.2 37-38|0.0.0.2.2.0.2.0 32-33|0.0.0.1 30-31|0.0.0 27-28|0.0.0.0 21-22|0.0.0.2.2 18-19|0.0.0.2.0 17-18|0.0.0.2.0.0 15-16|0.0.0.2 14-15|0.0.0.2.1 7-8|0.0 5-6|0 2-3|0.1 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:10.508
# ::node	0	question-01	5-6
# ::node	0.0	consider-02	7-8
# ::node	0.0.0	suffer-01	30-31
# ::node	0.0.0.0	party	27-28
# ::node	0.0.0.1	detriment	32-33
# ::node	0.0.0.2	derive-01	15-16
# ::node	0.0.0.2.0	party	18-19
# ::node	0.0.0.2.0.0	each	17-18
# ::node	0.0.0.2.1	benefit-01	14-15
# ::node	0.0.0.2.2	contract-02	21-22
# ::node	0.0.0.2.2.0	consider-02	41-42
# ::node	0.0.0.2.2.0.0	suffice-01	40-41
# ::node	0.0.0.2.2.0.1	support-01	43-44
# ::node	0.0.0.2.2.0.1.0	agree-01	45-46
# ::node	0.0.0.2.2.0.2	establish-01	39-40
# ::node	0.0.0.2.2.0.2.0	fatal	37-38
# ::node	0.1	approach-02	2-3
# ::node	0.1.0	modern	1-2
# ::root	0	question-01
# ::edge	approach-02	ARG1	question-01	0.1	0	
# ::edge	approach-02	mod	modern	0.1	0.1.0	
# ::edge	consider-02	ARG1	contract-02	0.0.0.2.2.0	0.0.0.2.2	
# ::edge	consider-02	ARG1	suffer-01	0.0	0.0.0	
# ::edge	contract-02	ARG1	derive-01	0.0.0.2.2	0.0.0.2	
# ::edge	derive-01	ARG0	party	0.0.0.2	0.0.0.2.0	
# ::edge	derive-01	ARG1	benefit-01	0.0.0.2	0.0.0.2.1	
# ::edge	derive-01	purpose	suffer-01	0.0.0.2	0.0.0	
# ::edge	establish-01	ARG1	consider-02	0.0.0.2.2.0.2	0.0.0.2.2.0	
# ::edge	fatal	domain	establish-01	0.0.0.2.2.0.2.0	0.0.0.2.2.0.2	
# ::edge	party	mod	each	0.0.0.2.0	0.0.0.2.0.0	
# ::edge	question-01	ARG1	consider-02	0	0.0	
# ::edge	suffer-01	ARG0	party	0.0.0	0.0.0.0	
# ::edge	suffer-01	ARG1	detriment	0.0.0	0.0.0.1	
# ::edge	suffice-01	ARG0	consider-02	0.0.0.2.2.0.0	0.0.0.2.2.0	
# ::edge	support-01	ARG0	consider-02	0.0.0.2.2.0.1	0.0.0.2.2.0	
# ::edge	support-01	ARG1	agree-01	0.0.0.2.2.0.1	0.0.0.2.2.0.1.0	
(q / question-01 
      :ARG1 (c3 / consider-02 
            :ARG1 (s3 / suffer-01 
                  :ARG0 (p / party) 
                  :ARG1 (d / detriment) 
                  :purpose-of (d2 / derive-01 
                        :ARG0 (p2 / party 
                              :mod (e2 / each)) 
                        :ARG1 (b / benefit-01) 
                        :ARG1-of (c2 / contract-02 
                              :ARG1-of (c / consider-02 
                                    :ARG0-of (s2 / suffice-01) 
                                    :ARG0-of (s / support-01 
                                          :ARG1 (a / agree-01)) 
                                    :ARG1-of (e / establish-01 
                                          :domain-of (f / fatal))))))) 
      :ARG1-of (a2 / approach-02 
            :mod (m / modern)))

# ::snt the climbdown derived from the prime ministers twin obsession with privatisation and nuclear power
# ::tok the climbdown derived from the prime ministers twin obsession with privatisation and nuclear power
# ::alignments 13-14|0.0.0 12-13|0.0.0.0 11-12|0.0.0.1 8-9|0.0 6-7|0.0.1.0+0.0.1 5-6|0.0.1.0.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:10.535
# ::node	0	derive-01	2-3
# ::node	0.0	obsess-01	8-9
# ::node	0.0.0	power	13-14
# ::node	0.0.0.0	nucleus	12-13
# ::node	0.0.0.1	and	11-12
# ::node	0.0.1	have-org-role-91	6-7
# ::node	0.0.1.0	minister	6-7
# ::node	0.0.1.0.0	prime	5-6
# ::root	0	derive-01
# ::edge	and	op1	power	0.0.0.1	0.0.0	
# ::edge	derive-01	ARG1	obsess-01	0	0.0	
# ::edge	have-org-role-91	ARG1	obsess-01	0.0.1	0.0	
# ::edge	have-org-role-91	ARG2	minister	0.0.1	0.0.1.0	
# ::edge	minister	mod	prime	0.0.1.0	0.0.1.0.0	
# ::edge	obsess-01	ARG1	power	0.0	0.0.0	
# ::edge	power	mod	nucleus	0.0.0	0.0.0.0	
(d / derive-01 
      :ARG1 (o / obsess-01 
            :ARG1 (p / power 
                  :mod (n / nucleus) 
                  :op-of (a / and)) 
            :ARG1-of (h / have-org-role-91 
                  :ARG2 (m / minister 
                        :mod (p2 / prime)))))

# ::snt ultimately however directives and rules derive their force from the considerations which justify them
# ::tok ultimately however directives and rules derive their force from the considerations which justify them
# ::alignments 12-13|0.0.0.1.1 10-11|0.0.0.1 7-8|0.0.0.0 5-6|0.0.0 4-5|0 3-4|0.0 0-1|0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:10.612
# ::node	0	rule	4-5
# ::node	0.0	and	3-4
# ::node	0.0.0	derive-01	5-6
# ::node	0.0.0.0	force	7-8
# ::node	0.0.0.1	consider-01	10-11
# ::node	0.0.0.1.0	ultimate	0-1
# ::node	0.0.0.1.1	justify-01	12-13
# ::root	0	rule
(r / rule 
      :op-of (a / and 
            :ARG0-of (d / derive-01 
                  :ARG1 (f / force) 
                  :purpose (c / consider-01 
                        :ARG1 (u / ultimate) 
                        :ARG1-of (j / justify-01)))))

# ::snt the medical research council however supports work on preembryos which it defines as the fertilised egg and the group of cells derived from it
# ::tok the medical research council however supports work on preembryos which it defines as the fertilised egg and the group of cells derived from it
# ::alignments 23-24|0.1 21-22|0 20-21|0.0 18-19|0.0.0 16-17|0.0.0.0 15-16|0.0.0.0.1.1 11-12|0.0.0.0.1 10-11|0.0.0.0.1.0 5-6|0.0.0.0.0.1.0 3-4|0.0.0.0.0.1 2-3|0.0.0.0.0 1-2|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:10.776
# ::node	0	derive-01	21-22
# ::node	0.0	cell	20-21
# ::node	0.0.0	group	18-19
# ::node	0.0.0.0	and	16-17
# ::node	0.0.0.0.0	research-01	2-3
# ::node	0.0.0.0.0.0	medicine	1-2
# ::node	0.0.0.0.0.1	council	3-4
# ::node	0.0.0.0.0.1.0	support-01	5-6
# ::node	0.0.0.0.1	define-01	11-12
# ::node	0.0.0.0.1.0	it	10-11
# ::node	0.0.0.0.1.1	egg	15-16
# ::node	0.1	it	23-24
# ::root	0	derive-01
# ::edge	and	op1	research-01	0.0.0.0	0.0.0.0.0	
# ::edge	and	op2	define-01	0.0.0.0	0.0.0.0.1	
# ::edge	and	op3	group	0.0.0.0	0.0.0	
# ::edge	council	mod	research-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	define-01	ARG0	it	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	define-01	ARG1	egg	0.0.0.0.1	0.0.0.0.1.1	
# ::edge	derive-01	ARG1	cell	0	0.0	
# ::edge	derive-01	ARG2	it	0	0.1	
# ::edge	group	location	cell	0.0.0	0.0	
# ::edge	research-01	mod	medicine	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	support-01	ARG0	council	0.0.0.0.0.1.0	0.0.0.0.0.1	
(d / derive-01 
      :ARG1 (c / cell 
            :location-of (g / group 
                  :op-of (a / and 
                        :op1 (r / research-01 
                              :mod (m / medicine) 
                              :mod-of (c2 / council 
                                    :ARG0-of (s / support-01))) 
                        :op2 (d2 / define-01 
                              :ARG0 (i2 / it) 
                              :ARG1 (e / egg))))) 
      :ARG2 (i / it))

# ::snt we can observe that she is happy only when she is furious and do not need to have it suggested that her earlier nickname of thatcher milksnatcher derived from her own breastdeprivation which denies her all happiness and allows her only the sadistic triumphs of tawdry political and military victories
# ::tok we can observe that she is happy only when she is furious and do not need to have it suggested that her earlier nickname of thatcher milksnatcher derived from her own breastdeprivation which denies her all happiness and allows her only the sadistic triumphs of tawdry political and military victories
# ::alignments 48-49|0.1.0 47-48|0.2.1.1.0.1 46-47|0.2.1.1.0.1.0 43-44|0.2.1.1.0 40-41|0.2.1.1.0.2 38-39|0.2.1.1 37-38|0.2.1 36-37|0.2.1.0.1 35-36|0.2.1.0.1.0 33-34|0.2.1.0 27-28|0.1 22-23|0.2.1.1.0.0 19-20|0 18-19|0.0 15-16|0.2 12-13|0.2.2 11-12|0.2.2.1 9-10|0.2.0 7-8|0.2.1.0.0 6-7|0.2.2.0.0.1 4-5|0.2.2.1.0 2-3|0.2.2.0.0 1-2|0.2.2.0 0-1|0.2.2.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:11.879
# ::node	0	suggest-01	19-20
# ::node	0.0	it	18-19
# ::node	0.1	derive-01	27-28
# ::node	0.1.0	military	48-49
# ::node	0.2	need-01	15-16
# ::node	0.2.0	she	9-10
# ::node	0.2.1	and	37-38
# ::node	0.2.1.0	deny-01	33-34
# ::node	0.2.1.0.0	only	7-8
# ::node	0.2.1.0.1	happiness	36-37
# ::node	0.2.1.0.1.0	all	35-36
# ::node	0.2.1.1	allow-01	38-39
# ::node	0.2.1.1.0	triumph-01	43-44
# ::node	0.2.1.1.0.0	early	22-23
# ::node	0.2.1.1.0.1	and	47-48
# ::node	0.2.1.1.0.1.0	politics	46-47
# ::node	0.2.1.1.0.2	only	40-41
# ::node	0.2.2	and	12-13
# ::node	0.2.2.0	possible	1-2
# ::node	0.2.2.0.0	observe-01	2-3
# ::node	0.2.2.0.0.0	we	0-1
# ::node	0.2.2.0.0.1	happy	6-7
# ::node	0.2.2.1	furious	11-12
# ::node	0.2.2.1.0	she	4-5
# ::root	0	suggest-01
# ::edge	allow-01	ARG1	triumph-01	0.2.1.1	0.2.1.1.0	
# ::edge	and	op1	need-01	0.2.1	0.2	
# ::edge	and	op1	politics	0.2.1.1.0.1	0.2.1.1.0.1.0	
# ::edge	and	op1	possible	0.2.2	0.2.2.0	
# ::edge	and	op2	deny-01	0.2.1	0.2.1.0	
# ::edge	and	op2	furious	0.2.2	0.2.2.1	
# ::edge	and	op3	allow-01	0.2.1	0.2.1.1	
# ::edge	and	op3	need-01	0.2.2	0.2	
# ::edge	deny-01	ARG0	only	0.2.1.0	0.2.1.0.0	
# ::edge	deny-01	ARG1	happiness	0.2.1.0	0.2.1.0.1	
# ::edge	derive-01	ARG0	military	0.1	0.1.0	
# ::edge	furious	domain	she	0.2.2.1	0.2.2.1.0	
# ::edge	happiness	quant	all	0.2.1.0.1	0.2.1.0.1.0	
# ::edge	need-01	ARG0	she	0.2	0.2.0	
# ::edge	need-01	ARG1	suggest-01	0.2	0	
# ::edge	observe-01	ARG0	we	0.2.2.0.0	0.2.2.0.0.0	
# ::edge	observe-01	ARG1	happy	0.2.2.0.0	0.2.2.0.0.1	
# ::edge	possible	domain	observe-01	0.2.2.0	0.2.2.0.0	
# ::edge	suggest-01	ARG0	it	0	0.0	
# ::edge	suggest-01	ARG1	derive-01	0	0.1	
# ::edge	triumph-01	ARG0	early	0.2.1.1.0	0.2.1.1.0.0	
# ::edge	triumph-01	ARG1	and	0.2.1.1.0	0.2.1.1.0.1	
# ::edge	triumph-01	mod	only	0.2.1.1.0	0.2.1.1.0.2	
(s / suggest-01 
      :ARG0 (i / it) 
      :ARG1 (d2 / derive-01 
            :ARG0 (m / military)) 
      :ARG1-of (n / need-01 
            :ARG0 (s2 / she) 
            :op-of (a3 / and 
                  :op1 (d / deny-01 
                        :ARG0 (o2 / only) 
                        :ARG1 (h / happiness 
                              :quant (a4 / all))) 
                  :op2 (a2 / allow-01 
                        :ARG1 (t / triumph-01 
                              :ARG0 (e / early) 
                              :ARG1 (a / and 
                                    :op1 (p / politics)) 
                              :mod (o / only)))) 
            :op-of (a5 / and 
                  :op1 (p2 / possible 
                        :domain (o3 / observe-01 
                              :ARG0 (w / we) 
                              :ARG1 (h2 / happy))) 
                  :op2 (f / furious 
                        :domain (s3 / she)))))

# ::snt reading from top to bottom the series 1 2 3 is known as architectural form an unfortunate and misleading phrase derived from the bottom weighting of masonry necessary to its stability
# ::tok reading from top to bottom the series 1 2 3 is known as architectural form an unfortunate and misleading phrase derived from the bottom weighting of masonry necessary to its stability
# ::alignments 30-31|0.1.0.0 23-24|0.2.1.1 20-21|0.1.0 19-20|0.1 18-19|0 17-18|0.2 16-17|0.2.1 14-15|0.2.1.0 11-12|0.2.1.0.0 9-10|0.2.0.0 8-9|0.2.0.0.0 7-8|0.0 6-7|0.2.0.2.0 4-5|0.2.0.2 2-3|0.2.0.1 0-1|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:12.084
# ::node	0	mislead-02	18-19
# ::node	0.0	1	7-8
# ::node	0.1	phrase	19-20
# ::node	0.1.0	derive-01	20-21
# ::node	0.1.0.0	stability	30-31
# ::node	0.2	and	17-18
# ::node	0.2.0	read-01	0-1
# ::node	0.2.0.0	3	9-10
# ::node	0.2.0.0.0	2	8-9
# ::node	0.2.0.1	top	2-3
# ::node	0.2.0.2	bottom	4-5
# ::node	0.2.0.2.0	series	6-7
# ::node	0.2.1	fortunate-41	16-17
# ::node	0.2.1.0	form	14-15
# ::node	0.2.1.0.0	know-01	11-12
# ::node	0.2.1.1	bottom	23-24
# ::root	0	mislead-02
# ::edge	3	quant	2	0.2.0.0	0.2.0.0.0	
# ::edge	and	op1	fortunate-41	0.2	0.2.1	
# ::edge	and	op2	mislead-02	0.2	0	
# ::edge	bottom	op1	series	0.2.0.2	0.2.0.2.0	
# ::edge	derive-01	ARG0	stability	0.1.0	0.1.0.0	
# ::edge	derive-01	ARG1	phrase	0.1.0	0.1	
# ::edge	fortunate-41	ARG0	form	0.2.1	0.2.1.0	
# ::edge	fortunate-41	ARG1	bottom	0.2.1	0.2.1.1	
# ::edge	know-01	ARG2	form	0.2.1.0.0	0.2.1.0	
# ::edge	mislead-02	ARG0	1	0	0.0	
# ::edge	mislead-02	ARG1	phrase	0	0.1	
# ::edge	read-01	ARG0	and	0.2.0	0.2	
# ::edge	read-01	ARG1	3	0.2.0	0.2.0.0	
# ::edge	read-01	ARG3	top	0.2.0	0.2.0.1	
# ::edge	read-01	purpose	bottom	0.2.0	0.2.0.2	
(m / mislead-02 
      :ARG0 1 
      :ARG1 (p / phrase 
            :ARG1-of (d / derive-01 
                  :ARG0 (s / stability))) 
      :op-of (a / and 
            :ARG0-of (r / read-01 
                  :ARG1 (3 / 3 
                        :quant 2) 
                  :ARG3 (t / top) 
                  :purpose (b2 / bottom 
                        :op1 (s2 / series))) 
            :op1 (f / fortunate-41 
                  :ARG0 (f2 / form 
                        :ARG2-of (k / know-01)) 
                  :ARG1 (b / bottom))))

# ::snt one of the first commercial products to derive from this biotechnology is likely to be genetically engineered tomatoes
# ::tok one of the first commercial products to derive from this biotechnology is likely to be genetically engineered tomatoes
# ::alignments 16-17|0.1.0 15-16|0.1.0.1 12-13|0.1.0.0 10-11|0.1 9-10|0.1.1 7-8|0 5-6|0.0 4-5|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:12.115
# ::node	0	derive-01	7-8
# ::node	0.0	product	5-6
# ::node	0.0.0	commerce	4-5
# ::node	0.1	biotechnology	10-11
# ::node	0.1.0	engineer-01	16-17
# ::node	0.1.0.0	likely	12-13
# ::node	0.1.0.1	genetics	15-16
# ::node	0.1.1	this	9-10
# ::root	0	derive-01
# ::edge	biotechnology	mod	this	0.1	0.1.1	
# ::edge	derive-01	ARG1	product	0	0.0	
# ::edge	derive-01	ARG2	biotechnology	0	0.1	
# ::edge	engineer-01	ARG0	biotechnology	0.1.0	0.1	
# ::edge	engineer-01	manner	genetics	0.1.0	0.1.0.1	
# ::edge	likely	domain	engineer-01	0.1.0.0	0.1.0	
# ::edge	product	mod	commerce	0.0	0.0.0	
(d / derive-01 
      :ARG1 (p / product 
            :mod (c / commerce)) 
      :ARG2 (b / biotechnology 
            :ARG0-of (e / engineer-01 
                  :domain-of (l / likely) 
                  :manner (g / genetics)) 
            :mod (t / this)))

# ::snt it was from their disregard for the political class that both young and hoskyns derived a fierce confidence that they would be more purposeful intermediaries for the recovery of britain
# ::tok it was from their disregard for the political class that both young and hoskyns derived a fierce confidence that they would be more purposeful intermediaries for the recovery of britain
# ::alignments 29-30|0.3.0.0.0+0.3.0.0+0.3.0 27-28|0.3 24-25|0.3.1 19-20|0.3.1.0 17-18|0.0.0 16-17|0.0.0.0 14-15|0.0 12-13|0 11-12|0.2 10-11|0.1 8-9|0.0.1.0 7-8|0.0.1.0.0 4-5|0.0.1 0-1|0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:12.563
# ::node	0	and	12-13
# ::node	0.0	derive-01	14-15
# ::node	0.0.0	confidence	17-18
# ::node	0.0.0.0	fierce	16-17
# ::node	0.0.1	disregard-01	4-5
# ::node	0.0.1.0	class	8-9
# ::node	0.0.1.0.0	politics	7-8
# ::node	0.0.1.1	it	0-1
# ::node	0.1	both	10-11
# ::node	0.2	young	11-12
# ::node	0.3	recover-01	27-28
# ::node	0.3.0	country	29-30
# ::node	0.3.0.0	name	29-30
# ::node	0.3.0.0.0	"Britain"	29-30
# ::node	0.3.1	intermediary	24-25
# ::node	0.3.1.0	they	19-20
# ::root	0	and
# ::edge	and	mod	both	0	0.1	
# ::edge	and	op1	young	0	0.2	
# ::edge	and	op2	recover-01	0	0.3	
# ::edge	class	mod	politics	0.0.1.0	0.0.1.0.0	
# ::edge	confidence	mod	fierce	0.0.0	0.0.0.0	
# ::edge	country	name	name	0.3.0	0.3.0.0	
# ::edge	derive-01	ARG0	and	0.0	0	
# ::edge	derive-01	ARG1	confidence	0.0	0.0.0	
# ::edge	disregard-01	ARG0	class	0.0.1	0.0.1.0	
# ::edge	disregard-01	ARG1	derive-01	0.0.1	0.0	
# ::edge	disregard-01	poss	it	0.0.1	0.0.1.1	
# ::edge	intermediary	domain	they	0.3.1	0.3.1.0	
# ::edge	intermediary	topic	recover-01	0.3.1	0.3	
# ::edge	name	op1	"Britain"	0.3.0.0	0.3.0.0.0	
# ::edge	recover-01	ARG1	country	0.3	0.3.0	
(a / and 
      :ARG0-of (d / derive-01 
            :ARG1 (c2 / confidence 
                  :mod (f / fierce)) 
            :ARG1-of (d2 / disregard-01 
                  :ARG0 (c3 / class 
                        :mod (p / politics)) 
                  :poss (i2 / it))) 
      :mod (b / both) 
      :op1 (y / young) 
      :op2 (r / recover-01 
            :ARG1 (c / country 
                  :name (n / name 
                        :op1 "Britain")) 
            :topic-of (i / intermediary 
                  :domain (t / they))))

# ::snt the laundress was a familiar figure throughout realist literature and art and as a visual image lautrecs representation undoubtedly derives from earlier similar ones by daumier degas and steinlen
# ::tok the laundress was a familiar figure throughout realist literature and art and as a visual image lautrecs representation undoubtedly derives from earlier similar ones by daumier degas and steinlen
# ::alignments 27-28|0.0.2.1.0 23-24|0.0.2.1 21-22|0.0.2.1.1 18-19|0.1+0 17-18|0.0 15-16|0.0.0 14-15|0.0.1 11-12|0.0.2 10-11|0.0.2.0.1.2 9-10|0.0.2.0.1 8-9|0.0.2.0.1.1 7-8|0.0.2.0.1.1.0 6-7|0.0.2.0.1.0 5-6|0.0.2.0 4-5|0.0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:12.656
# ::node	0	doubt-01	18-19
# ::node	0.0	represent-01	17-18
# ::node	0.0.0	image	15-16
# ::node	0.0.1	visual	14-15
# ::node	0.0.2	and	11-12
# ::node	0.0.2.0	figure	5-6
# ::node	0.0.2.0.0	familiarize-01	4-5
# ::node	0.0.2.0.1	and	9-10
# ::node	0.0.2.0.1.0	throughout	6-7
# ::node	0.0.2.0.1.1	literature	8-9
# ::node	0.0.2.0.1.1.0	realist	7-8
# ::node	0.0.2.0.1.2	art	10-11
# ::node	0.0.2.1	one	23-24
# ::node	0.0.2.1.0	and	27-28
# ::node	0.0.2.1.1	early	21-22
# ::node	0.1	-	18-19
# ::root	0	doubt-01
# ::edge	and	op1	figure	0.0.2	0.0.2.0	
# ::edge	and	op1	literature	0.0.2.0.1	0.0.2.0.1.1	
# ::edge	and	op1	one	0.0.2.1.0	0.0.2.1	
# ::edge	and	op2	art	0.0.2.0.1	0.0.2.0.1.2	
# ::edge	and	op2	represent-01	0.0.2	0.0	
# ::edge	and	op3	one	0.0.2	0.0.2.1	
# ::edge	doubt-01	ARG1	represent-01	0	0.0	
# ::edge	doubt-01	polarity	-	0	0.1	
# ::edge	familiarize-01	ARG2	figure	0.0.2.0.0	0.0.2.0	
# ::edge	figure	source	and	0.0.2.0	0.0.2.0.1	
# ::edge	literature	mod	realist	0.0.2.0.1.1	0.0.2.0.1.1.0	
# ::edge	one	time	early	0.0.2.1	0.0.2.1.1	
# ::edge	represent-01	ARG1	image	0.0	0.0.0	
# ::edge	represent-01	manner	visual	0.0	0.0.1	
# ::edge	throughout	op1	and	0.0.2.0.1.0	0.0.2.0.1	
(d / doubt-01 
      :ARG1 (r / represent-01 
            :ARG1 (i / image) 
            :manner (v / visual) 
            :op-of (a2 / and 
                  :op1 (f / figure 
                        :ARG2-of (f2 / familiarize-01) 
                        :source (a4 / and 
                              :op-of (t / throughout) 
                              :op1 (l / literature 
                                    :mod (r2 / realist)) 
                              :op2 (a3 / art))) 
                  :op2 (o / one 
                        :op-of (a / and) 
                        :time (e / early)))) 
      :polarity -)

# ::snt this is no longer the case scientists today are facing a similar dilemma  this is derived from a fechnerbirkoff formula for assessing works of art
# ::tok this is no longer the case scientists today are facing a similar dilemma this is derived from a fechnerbirkoff formula for assessing works of art
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:12.657
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt it is derived from sugar from corn and sugar beet rather than oil
# ::tok it is derived from sugar from corn and sugar beet rather than oil
# ::alignments 12-13|0.0 8-9|0.3.1 7-8|0.3 6-7|0.3.0 4-5|0.2 2-3|0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:12.707
# ::node	0	derive-01	2-3
# ::node	0.0	oil	12-13
# ::node	0.1	it	0-1
# ::node	0.2	sugar-cane	4-5
# ::node	0.3	and	7-8
# ::node	0.3.0	corn	6-7
# ::node	0.3.1	sugar-cane	8-9
# ::root	0	derive-01
# ::edge	and	op1	corn	0.3	0.3.0	
# ::edge	and	op2	sugar-cane	0.3	0.3.1	
# ::edge	derive-01	ARG0	oil	0	0.0	
# ::edge	derive-01	ARG1	it	0	0.1	
# ::edge	derive-01	ARG2	sugar-cane	0	0.2	
# ::edge	derive-01	location	and	0	0.3	
(d / derive-01 
      :ARG0 (o / oil) 
      :ARG1 (i / it) 
      :ARG2 (s2 / sugar-cane) 
      :location (a / and 
            :op1 (c / corn) 
            :op2 (s / sugar-cane)))

# ::snt endangered species a total of 1915 live animals and birds nearly 8000 plants and 9000 articles derived from endangered species such as stuffed animals and birds and goods made from ivory and reptile skins
# ::tok endangered species a total of 1915 live animals and birds nearly 8000 plants and 9000 articles derived from endangered species such as stuffed animals and birds and goods made from ivory and reptile skins
# ::alignments 33-34|0.0.0.1.2.3.0 31-32|0.0.0.1.2.3 27-28|0.0.0.1.2.2 26-27|0.0.0.1.2 25-26|0.0.0.1.1 24-25|0.0.0.1 23-24|0.0.0.1.2.0.0 22-23|0.0.0.1.2.0 20-21|0.0.1 19-20|0.0 18-19|0 16-17|0.0.0 15-16|0.0.0.0 14-15|0.0.0.0.0 13-14|0.0.0.1.0 12-13|0.0.0.1.2.1 11-12|0.0.0.1.2.1.0.0 10-11|0.0.0.1.2.1.0 9-10|0.0.0.1.0.0.2.1 8-9|0.0.0.1.0.0.2 7-8|0.0.0.1.0.0.2.0.0 6-7|0.0.0.1.0.0.2.0 5-6|0.0.0.1.0.0.1.0+0.0.0.1.0.0.1 1-2|0.0.0.1.0.0.0 0-1|0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:13.893
# ::node	0	endanger-01	18-19
# ::node	0.0	species	19-20
# ::node	0.0.0	derive-01	16-17
# ::node	0.0.0.0	article	15-16
# ::node	0.0.0.0.0	9000	14-15
# ::node	0.0.0.1	and	24-25
# ::node	0.0.0.1.0	and	13-14
# ::node	0.0.0.1.0.0	endanger-01	0-1
# ::node	0.0.0.1.0.0.0	species	1-2
# ::node	0.0.0.1.0.0.1	date-entity	5-6
# ::node	0.0.0.1.0.0.1.0	1915	5-6
# ::node	0.0.0.1.0.0.2	and	8-9
# ::node	0.0.0.1.0.0.2.0	live-01	6-7
# ::node	0.0.0.1.0.0.2.0.0	animal	7-8
# ::node	0.0.0.1.0.0.2.1	bird	9-10
# ::node	0.0.0.1.1	bird	25-26
# ::node	0.0.0.1.2	and	26-27
# ::node	0.0.0.1.2.0	stuff-01	22-23
# ::node	0.0.0.1.2.0.0	animal	23-24
# ::node	0.0.0.1.2.1	plant	12-13
# ::node	0.0.0.1.2.1.0	nearly	10-11
# ::node	0.0.0.1.2.1.0.0	8000	11-12
# ::node	0.0.0.1.2.2	good	27-28
# ::node	0.0.0.1.2.3	and	31-32
# ::node	0.0.0.1.2.3.0	skin	33-34
# ::node	0.0.1	such	20-21
# ::root	0	endanger-01
# ::edge	and	consist	skin	0.0.0.1.2.3	0.0.0.1.2.3.0	
# ::edge	and	mod	stuff-01	0.0.0.1.2	0.0.0.1.2.0	
# ::edge	and	op1	and	0.0.0.1.0	0.0.0.1	
# ::edge	and	op1	bird	0.0.0.1	0.0.0.1.1	
# ::edge	and	op1	endanger-01	0.0.0.1.0.0.2	0.0.0.1.0.0	
# ::edge	and	op1	plant	0.0.0.1.2	0.0.0.1.2.1	
# ::edge	and	op2	and	0.0.0.1	0.0.0.1.2	
# ::edge	and	op2	bird	0.0.0.1.0.0.2	0.0.0.1.0.0.2.1	
# ::edge	and	op2	good	0.0.0.1.2	0.0.0.1.2.2	
# ::edge	and	op3	and	0.0.0.1.2	0.0.0.1.2.3	
# ::edge	article	quant	9000	0.0.0.0	0.0.0.0.0	
# ::edge	date-entity	year	1915	0.0.0.1.0.0.1	0.0.0.1.0.0.1.0	
# ::edge	derive-01	ARG1	article	0.0.0	0.0.0.0	
# ::edge	derive-01	ARG2	and	0.0.0	0.0.0.1	
# ::edge	derive-01	instrument	species	0.0.0	0.0	
# ::edge	endanger-01	ARG0	and	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	endanger-01	ARG1	species	0	0.0	
# ::edge	endanger-01	ARG1	species	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	endanger-01	ARG2	date-entity	0.0.0.1.0.0	0.0.0.1.0.0.1	
# ::edge	live-01	ARG0	and	0.0.0.1.0.0.2.0	0.0.0.1.0.0.2	
# ::edge	live-01	ARG1	animal	0.0.0.1.0.0.2.0	0.0.0.1.0.0.2.0.0	
# ::edge	nearly	op1	8000	0.0.0.1.2.1.0	0.0.0.1.2.1.0.0	
# ::edge	plant	quant	nearly	0.0.0.1.2.1	0.0.0.1.2.1.0	
# ::edge	stuff-01	ARG1	animal	0.0.0.1.2.0	0.0.0.1.2.0.0	
# ::edge	such	mod	species	0.0.1	0.0	
(e / endanger-01 
      :ARG1 (s4 / species 
            :instrument-of (d / derive-01 
                  :ARG1 (a5 / article 
                        :quant 9000) 
                  :ARG2 (a3 / and 
                        :op-of (a6 / and 
                              :ARG0-of (e2 / endanger-01 
                                    :ARG1 (s5 / species) 
                                    :ARG2 (d2 / date-entity 
                                          :year 1915) 
                                    :op-of (a7 / and 
                                          :ARG0-of (l / live-01 
                                                :ARG1 (a8 / animal)) 
                                          :op1 (b2 / bird)))) 
                        :op1 (b / bird) 
                        :op2 (a2 / and 
                              :mod (s2 / stuff-01 
                                    :ARG1 (a4 / animal)) 
                              :op1 (p / plant 
                                    :quant (n / nearly 
                                          :op1 8000)) 
                              :op2 (g / good) 
                              :op3 (a / and 
                                    :consist (s / skin))))) 
            :mod-of (s3 / such)))

# ::snt 2  the diamonds actually occur in kimberlite which is a rock composed of  mixed fragments of everything from coal to rocks like peridotite  derived it is believed directly from the mantle
# ::tok 2 the diamonds actually occur in kimberlite which is a rock composed of mixed fragments of everything from coal to rocks like peridotite derived it is believed directly from the mantle
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:13.894
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt as michel serres has pointed out the model here derives as much from pouchets idea of the spontaneous generation of life from dead matter heacute
# ::tok as michel serres has pointed out the model here derives as much from pouchets idea of the spontaneous generation of life from dead matter heacute
# ::alignments 23-24|0.1 20-21|0.1.1 18-19|0.1.1.0 17-18|0.1.1.0.0 14-15|0.1.1.0.1 11-12|0.1.1.0.1.0 8-9|0.1.0 7-8|0.0 4-5|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:14.019
# ::node	0	point-02	4-5
# ::node	0.0	model	7-8
# ::node	0.1	matter	23-24
# ::node	0.1.0	here	8-9
# ::node	0.1.1	life	20-21
# ::node	0.1.1.0	generation	18-19
# ::node	0.1.1.0.0	spontaneous	17-18
# ::node	0.1.1.0.1	idea	14-15
# ::node	0.1.1.0.1.0	much	11-12
# ::root	0	point-02
# ::edge	generation	mod	spontaneous	0.1.1.0	0.1.1.0.0	
# ::edge	here	op1	matter	0.1.0	0.1	
# ::edge	idea	part	much	0.1.1.0.1	0.1.1.0.1.0	
# ::edge	idea	topic	generation	0.1.1.0.1	0.1.1.0	
# ::edge	life	consist	generation	0.1.1	0.1.1.0	
# ::edge	life	topic	matter	0.1.1	0.1	
# ::edge	point-02	ARG0	model	0	0.0	
# ::edge	point-02	ARG2	matter	0	0.1	
(p / point-02 
      :ARG0 (m3 / model) 
      :ARG2 (m / matter 
            :op-of (h / here) 
            :topic-of (l / life 
                  :consist (g / generation 
                        :mod (s / spontaneous) 
                        :topic-of (i / idea 
                              :part (m2 / much))))))

# ::snt all i argue for is that individuals inevitably derive the goals by which they constitute their lives from the stock of social forms available to them and the feasible variations on it
# ::tok all i argue for is that individuals inevitably derive the goals by which they constitute their lives from the stock of social forms available to them and the feasible variations on it
# ::alignments 31-32|0.0.4 28-29|0 26-27|0.0.2.1 23-24|0.0.2.2.0 22-23|0.0.2.2 21-22|0.0.2.2.1 19-20|0.0.2.1.0 16-17|0.0.2.0.0 14-15|0.0.2 13-14|0.0.2.0 10-11|0.0.1 8-9|0.0 7-8|0.0.3 6-7|0.0.0 2-3|0.0.0.0 1-2|0.0.0.0.0 0-1|0.0.2.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:14.328
# ::node	0	feasible	28-29
# ::node	0.0	derive-01	8-9
# ::node	0.0.0	individual	6-7
# ::node	0.0.0.0	argue-01	2-3
# ::node	0.0.0.0.0	i	1-2
# ::node	0.0.1	goal	10-11
# ::node	0.0.2	constitute-01	14-15
# ::node	0.0.2.0	they	13-14
# ::node	0.0.2.0.0	life	16-17
# ::node	0.0.2.1	and	26-27
# ::node	0.0.2.1.0	stock	19-20
# ::node	0.0.2.2	form	22-23
# ::node	0.0.2.2.0	available	23-24
# ::node	0.0.2.2.1	society	21-22
# ::node	0.0.2.3	all	0-1
# ::node	0.0.3	inevitable	7-8
# ::node	0.0.4	it	31-32
# ::root	0	feasible
# ::edge	all	op1	constitute-01	0.0.2.3	0.0.2	
# ::edge	and	op1	stock	0.0.2.1	0.0.2.1.0	
# ::edge	argue-01	ARG0	i	0.0.0.0	0.0.0.0.0	
# ::edge	argue-01	ARG1	individual	0.0.0.0	0.0.0	
# ::edge	constitute-01	ARG0	they	0.0.2	0.0.2.0	
# ::edge	constitute-01	ARG1	and	0.0.2	0.0.2.1	
# ::edge	constitute-01	concession	form	0.0.2	0.0.2.2	
# ::edge	derive-01	ARG0	individual	0.0	0.0.0	
# ::edge	derive-01	ARG1	goal	0.0	0.0.1	
# ::edge	derive-01	ARG2	constitute-01	0.0	0.0.2	
# ::edge	derive-01	mod	inevitable	0.0	0.0.3	
# ::edge	feasible	op1	derive-01	0	0.0	
# ::edge	form	mod	available	0.0.2.2	0.0.2.2.0	
# ::edge	form	mod	society	0.0.2.2	0.0.2.2.1	
# ::edge	it	op1	derive-01	0.0.4	0.0	
# ::edge	life	poss	they	0.0.2.0.0	0.0.2.0	
(f / feasible 
      :op1 (d / derive-01 
            :ARG0 (i3 / individual 
                  :ARG1-of (a3 / argue-01 
                        :ARG0 (i4 / i))) 
            :ARG1 (g / goal) 
            :ARG2 (c / constitute-01 
                  :ARG0 (t / they 
                        :poss-of (l / life)) 
                  :ARG1 (a / and 
                        :op1 (s2 / stock)) 
                  :concession (f2 / form 
                        :mod (a2 / available) 
                        :mod (s / society)) 
                  :op-of (a4 / all)) 
            :mod (i2 / inevitable) 
            :op-of (i / it)))

# ::snt but how can these principles clearly derived from a contemplation of the past be used to make a contemporary architecture that is not merely a selfconscious pastiche of old but of its own age looking forward with confidence while also looking back with understanding
# ::tok but how can these principles clearly derived from a contemplation of the past be used to make a contemporary architecture that is not merely a selfconscious pastiche of old but of its own age looking forward with confidence while also looking back with understanding
# ::alignments 43-44|0.3.1 41-42|0.3.1.0 39-40|0.3.1.1 37-38|0.3.0 35-36|0.3.0.0 33-34|0.3 29-30|0 28-29|0.1 23-24|0.2.0.1.0.0 18-19|0.0 14-15|0.2 12-13|0.2.0.0.0 6-7|0.2.0.0 5-6|0.2.0.0.1 4-5|0.2.0 2-3|0.2.0.1 0-1|0.2.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:14.534
# ::node	0	contrast-01	29-30
# ::node	0.0	contemporary	18-19
# ::node	0.1	old	28-29
# ::node	0.2	use-01	14-15
# ::node	0.2.0	principle	4-5
# ::node	0.2.0.0	derive-01	6-7
# ::node	0.2.0.0.0	past	12-13
# ::node	0.2.0.0.1	clear	5-6
# ::node	0.2.0.1	possible	2-3
# ::node	0.2.0.1.0	contrast-01	0-1
# ::node	0.2.0.1.0.0	mere	23-24
# ::node	0.3	age-01	33-34
# ::node	0.3.0	confidence	37-38
# ::node	0.3.0.0	forward	35-36
# ::node	0.3.1	understand-01	43-44
# ::node	0.3.1.0	back	41-42
# ::node	0.3.1.1	also	39-40
# ::root	0	contrast-01
# ::edge	age-01	ARG0	confidence	0.3	0.3.0	
# ::edge	age-01	ARG1	understand-01	0.3	0.3.1	
# ::edge	contrast-01	ARG0	contemporary	0	0.0	
# ::edge	contrast-01	ARG0	mere	0.2.0.1.0	0.2.0.1.0.0	
# ::edge	contrast-01	ARG1	old	0	0.1	
# ::edge	contrast-01	ARG1	possible	0.2.0.1.0	0.2.0.1	
# ::edge	contrast-01	ARG2	use-01	0	0.2	
# ::edge	contrast-01	op1	age-01	0	0.3	
# ::edge	derive-01	ARG1	principle	0.2.0.0	0.2.0	
# ::edge	derive-01	ARG2	past	0.2.0.0	0.2.0.0.0	
# ::edge	derive-01	manner	clear	0.2.0.0	0.2.0.0.1	
# ::edge	forward	op1	confidence	0.3.0.0	0.3.0	
# ::edge	possible	condition	principle	0.2.0.1	0.2.0	
# ::edge	understand-01	ARG1	back	0.3.1	0.3.1.0	
# ::edge	understand-01	mod	also	0.3.1	0.3.1.1	
# ::edge	use-01	ARG1	principle	0.2	0.2.0	
(c2 / contrast-01 
      :ARG0 (c3 / contemporary) 
      :ARG1 (o / old) 
      :ARG2 (u2 / use-01 
            :ARG1 (p2 / principle 
                  :ARG1-of (d / derive-01 
                        :ARG2 (p / past) 
                        :manner (c4 / clear)) 
                  :condition-of (p3 / possible 
                        :ARG1-of (c5 / contrast-01 
                              :ARG0 (m / mere))))) 
      :op1 (a2 / age-01 
            :ARG0 (c / confidence 
                  :op-of (f / forward)) 
            :ARG1 (u / understand-01 
                  :ARG1 (b / back) 
                  :mod (a / also))))

# ::snt it is also thought that ministers are now aware that they have exhausted the political mileage to be derived from union bashing and will be keen to soften their image by emphasising the governments achievements in employee participation
# ::tok it is also thought that ministers are now aware that they have exhausted the political mileage to be derived from union bashing and will be keen to soften their image by emphasising the governments achievements in employee participation
# ::alignments 37-38|0.3.0.0.0.0.0 36-37|0.3.0.0.0.0.0.0.0+0.3.0.0.0.0.0.0 34-35|0.3.0.0.0.1+0.3.0.0.0.1.0 33-34|0.3.0.0.0.0+0.3.0.0.0 29-30|0.3.0.1 25-26|0.3.0 22-23|0.3 20-21|0.3.0.2.0.0.0 18-19|0.3.0.2.0.0 14-15|0.3.0.0.0.0.0.1 12-13|0.3.0.2 10-11|0.3.0.2.0 7-8|0.1 5-6|0.3.0.0.1+0.3.0.0 3-4|0 2-3|0.2 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:15.004
# ::node	0	think-01	3-4
# ::node	0.0	it	0-1
# ::node	0.1	now	7-8
# ::node	0.2	also	2-3
# ::node	0.3	and	22-23
# ::node	0.3.0	keen-41	25-26
# ::node	0.3.0.0	have-org-role-91	5-6
# ::node	0.3.0.0.0	government-organization	33-34
# ::node	0.3.0.0.0.0	govern-01	33-34
# ::node	0.3.0.0.0.0.0	participate-01	37-38
# ::node	0.3.0.0.0.0.0.0	person	36-37
# ::node	0.3.0.0.0.0.0.0.0	employ-01	36-37
# ::node	0.3.0.0.0.0.0.1	politics	14-15
# ::node	0.3.0.0.0.1	achieve-01	34-35
# ::node	0.3.0.0.0.1.0	thing	34-35
# ::node	0.3.0.0.1	minister	5-6
# ::node	0.3.0.1	image	29-30
# ::node	0.3.0.2	exhaust-01	12-13
# ::node	0.3.0.2.0	they	10-11
# ::node	0.3.0.2.0.0	derive-01	18-19
# ::node	0.3.0.2.0.0.0	union	20-21
# ::root	0	think-01
# ::edge	achieve-01	ARG0	government-organization	0.3.0.0.0.1	0.3.0.0.0	
# ::edge	achieve-01	ARG1	thing	0.3.0.0.0.1	0.3.0.0.0.1.0	
# ::edge	and	op1	think-01	0.3	0	
# ::edge	and	op2	keen-41	0.3	0.3.0	
# ::edge	derive-01	ARG0	they	0.3.0.2.0.0	0.3.0.2.0	
# ::edge	derive-01	ARG1	union	0.3.0.2.0.0	0.3.0.2.0.0.0	
# ::edge	employ-01	ARG1	person	0.3.0.0.0.0.0.0.0	0.3.0.0.0.0.0.0	
# ::edge	exhaust-01	ARG0	they	0.3.0.2	0.3.0.2.0	
# ::edge	exhaust-01	ARG1	keen-41	0.3.0.2	0.3.0	
# ::edge	govern-01	ARG0	government-organization	0.3.0.0.0.0	0.3.0.0.0	
# ::edge	govern-01	ARG1	participate-01	0.3.0.0.0.0	0.3.0.0.0.0.0	
# ::edge	have-org-role-91	ARG1	government-organization	0.3.0.0	0.3.0.0.0	
# ::edge	have-org-role-91	ARG2	minister	0.3.0.0	0.3.0.0.1	
# ::edge	keen-41	ARG0	have-org-role-91	0.3.0	0.3.0.0	
# ::edge	keen-41	ARG1	image	0.3.0	0.3.0.1	
# ::edge	participate-01	ARG0	person	0.3.0.0.0.0.0	0.3.0.0.0.0.0.0	
# ::edge	participate-01	ARG1	politics	0.3.0.0.0.0.0	0.3.0.0.0.0.0.1	
# ::edge	think-01	ARG1	it	0	0.0	
# ::edge	think-01	condition	now	0	0.1	
# ::edge	think-01	mod	also	0	0.2	
(t3 / think-01 
      :ARG1 (i2 / it) 
      :condition (n / now) 
      :mod (a3 / also) 
      :op-of (a2 / and 
            :op1 (k / keen-41 
                  :ARG0 (h / have-org-role-91 
                        :ARG1 (g / government-organization 
                              :ARG0-of (g2 / govern-01 
                                    :ARG1 (p / participate-01 
                                          :ARG0 (p2 / person 
                                                :ARG1-of (e / employ-01)) 
                                          :ARG1 (p3 / politics))) 
                              :ARG0-of (a / achieve-01 
                                    :ARG1 (t / thing))) 
                        :ARG2 (m / minister)) 
                  :ARG1 (i / image) 
                  :ARG1-of (e2 / exhaust-01 
                        :ARG0 (t2 / they 
                              :ARG0-of (d / derive-01 
                                    :ARG1 (u / union)))))))

# ::snt we stand to derive immense benefits from such releases of genetically engineered organisms into the environment dash
# ::tok we stand to derive immense benefits from such releases of genetically engineered organisms into the environment dash
# ::alignments 15-16|0.0.0 11-12|0.0 10-11|0 8-9|0.0.1 7-8|0.0.1.1 5-6|0.0.1.0.1 4-5|0.0.1.0.1.0 3-4|0.0.1.0 0-1|0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:15.052
# ::node	0	genetics	10-11
# ::node	0.0	engineer-01	11-12
# ::node	0.0.0	environment	15-16
# ::node	0.0.1	release-01	8-9
# ::node	0.0.1.0	derive-01	3-4
# ::node	0.0.1.0.0	we	0-1
# ::node	0.0.1.0.1	benefit-01	5-6
# ::node	0.0.1.0.1.0	immense	4-5
# ::node	0.0.1.1	such	7-8
# ::root	0	genetics
(g / genetics 
      :manner-of (e2 / engineer-01 
            :ARG0 (e / environment) 
            :ARG1-of (r / release-01 
                  :ARG2-of (d / derive-01 
                        :ARG0 (w / we) 
                        :ARG1 (b / benefit-01 
                              :mod (i / immense))) 
                  :mod (s / such))))

# ::snt although derived from the mercedes 190e 200e and 300e saloons the layout is modified to cope with the forces generated by a beautifully balanced sports car whose pace and agility have to be experienced to be believed
# ::tok although derived from the mercedes 190e 200e and 300e saloons the layout is modified to cope with the forces generated by a beautifully balanced sports car whose pace and agility have to be experienced to be believed
# ::alignments 36-37|0.0.0 33-34|0.0 28-29|0 27-28|0.2 25-26|0.0.0.0 24-25|0.0.0.0.2 23-24|0.0.0.0.1 19-20|0.0.0.0.0 18-19|0.0.0.0.0.0 15-16|0.0.0.0.0.0.0 13-14|0.0.0.0.0.0.0.0 7-8|0.1 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:15.294
# ::node	0	and	28-29
# ::node	0.0	experience-01	33-34
# ::node	0.0.0	believe-01	36-37
# ::node	0.0.0.0	car	25-26
# ::node	0.0.0.0.0	generate-01	19-20
# ::node	0.0.0.0.0.0	force	18-19
# ::node	0.0.0.0.0.0.0	cope-01	15-16
# ::node	0.0.0.0.0.0.0.0	modify-01	13-14
# ::node	0.0.0.0.1	balance-01	23-24
# ::node	0.0.0.0.2	sport	24-25
# ::node	0.1	and	7-8
# ::node	0.1.0	derive-01	1-2
# ::node	0.2	pace	27-28
# ::root	0	and
# ::edge	and	op1	derive-01	0.1	0.1.0	
# ::edge	and	op1	pace	0	0.2	
# ::edge	and	op2	and	0.1	0	
# ::edge	balance-01	ARG1	car	0.0.0.0.1	0.0.0.0	
# ::edge	believe-01	ARG0	car	0.0.0	0.0.0.0	
# ::edge	car	mod	sport	0.0.0.0	0.0.0.0.2	
# ::edge	cope-01	ARG1	force	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	experience-01	ARG0	and	0.0	0	
# ::edge	experience-01	ARG1	believe-01	0.0	0.0.0	
# ::edge	generate-01	ARG0	car	0.0.0.0.0	0.0.0.0	
# ::edge	generate-01	ARG1	force	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	modify-01	ARG1	cope-01	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0	
(a / and 
      :ARG0-of (e / experience-01 
            :ARG1 (b / believe-01 
                  :ARG0 (c / car 
                        :ARG0-of (g / generate-01 
                              :ARG1 (f / force 
                                    :ARG1-of (c2 / cope-01 
                                          :ARG1-of (m / modify-01)))) 
                        :ARG1-of (b2 / balance-01) 
                        :mod (s / sport)))) 
      :op-of (a2 / and 
            :op1 (d / derive-01)) 
      :op1 (p / pace))

# ::snt while those on fixed incomes continue to benefit from the subsidies on basic necessities they are bludgeoned by the everrising prices that derive from the private sector freemarket imports
# ::tok while those on fixed incomes continue to benefit from the subsidies on basic necessities they are bludgeoned by the everrising prices that derive from the private sector freemarket imports
# ::alignments 28-29|0.0 26-27|0.1.1 25-26|0.1.1.0 22-23|0.1 20-21|0 14-15|0.1.0 12-13|0.0.0.1 10-11|0.0.0 7-8|0.0.0.0 5-6|0.0.0.0.1 4-5|0.0.0.0.0 3-4|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:15.460
# ::node	0	price-01	20-21
# ::node	0.0	import-01	28-29
# ::node	0.0.0	subsidize-01	10-11
# ::node	0.0.0.0	benefit-01	7-8
# ::node	0.0.0.0.0	income	4-5
# ::node	0.0.0.0.0.0	fix-03	3-4
# ::node	0.0.0.0.1	continue-01	5-6
# ::node	0.0.0.1	basic	12-13
# ::node	0.1	derive-01	22-23
# ::node	0.1.0	they	14-15
# ::node	0.1.1	sector	26-27
# ::node	0.1.1.0	private	25-26
# ::root	0	price-01
# ::edge	benefit-01	ARG0	subsidize-01	0.0.0.0	0.0.0	
# ::edge	benefit-01	ARG1	income	0.0.0.0	0.0.0.0.0	
# ::edge	continue-01	ARG1	benefit-01	0.0.0.0.1	0.0.0.0	
# ::edge	derive-01	ARG1	they	0.1	0.1.0	
# ::edge	derive-01	ARG2	sector	0.1	0.1.1	
# ::edge	fix-03	ARG1	income	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	import-01	ARG0	price-01	0.0	0	
# ::edge	import-01	ARG2	subsidize-01	0.0	0.0.0	
# ::edge	price-01	ARG1	derive-01	0	0.1	
# ::edge	sector	mod	private	0.1.1	0.1.1.0	
# ::edge	subsidize-01	location	basic	0.0.0	0.0.0.1	
(p2 / price-01 
      :ARG0-of (i / import-01 
            :ARG2 (s2 / subsidize-01 
                  :ARG0-of (b2 / benefit-01 
                        :ARG1 (i2 / income 
                              :ARG1-of (f / fix-03)) 
                        :ARG1-of (c / continue-01)) 
                  :location (b / basic))) 
      :ARG1 (d / derive-01 
            :ARG1 (t / they) 
            :ARG2 (s / sector 
                  :mod (p / private))))

# ::snt this means that locke has not only to substantiate the claim that all ideas are derived from experience but also to explain how it is that our reason gets from those ideas to certain items of knowledge which others said were innate
# ::tok this means that locke has not only to substantiate the claim that all ideas are derived from experience but also to explain how it is that our reason gets from those ideas to certain items of knowledge which others said were innate
# ::alignments 39-40|0 38-39|0.0 36-37|0.1 34-35|0.1.0 33-34|0.1.0.0 31-32|0.2.0.1.1.0.0.0.1 27-28|0.2.0.1.1.0.0.0.0 23-24|0.2.0.1.1.0.0.0 21-22|0.2.0.1.1 19-20|0.2.0.1.1.1 18-19|0.2 17-18|0.2.0.2 15-16|0.2.0 13-14|0.2.0.0 12-13|0.2.0.0.0 10-11|0.2.0.1 6-7|0.2.0.1.0 1-2|0.2.0.1.1.0.0 0-1|0.2.0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:15.934
# ::node	0	say-01	39-40
# ::node	0.0	other	38-39
# ::node	0.1	knowledge	36-37
# ::node	0.1.0	item	34-35
# ::node	0.1.0.0	certain	33-34
# ::node	0.2	contrast-01	18-19
# ::node	0.2.0	derive-01	15-16
# ::node	0.2.0.0	idea	13-14
# ::node	0.2.0.0.0	all	12-13
# ::node	0.2.0.1	claim-01	10-11
# ::node	0.2.0.1.0	only	6-7
# ::node	0.2.0.1.1	explain-01	21-22
# ::node	0.2.0.1.1.0	this	0-1
# ::node	0.2.0.1.1.0.0	mean-01	1-2
# ::node	0.2.0.1.1.0.0.0	it	23-24
# ::node	0.2.0.1.1.0.0.0.0	reason	27-28
# ::node	0.2.0.1.1.0.0.0.1	idea	31-32
# ::node	0.2.0.1.1.1	also	19-20
# ::node	0.2.0.2	experience-01	17-18
# ::root	0	say-01
# ::edge	claim-01	ARG0	only	0.2.0.1	0.2.0.1.0	
# ::edge	claim-01	ARG1	derive-01	0.2.0.1	0.2.0	
# ::edge	contrast-01	ARG1	derive-01	0.2	0.2.0	
# ::edge	contrast-01	ARG2	say-01	0.2	0	
# ::edge	derive-01	ARG1	idea	0.2.0	0.2.0.0	
# ::edge	derive-01	ARG2	experience-01	0.2.0	0.2.0.2	
# ::edge	explain-01	ARG0	this	0.2.0.1.1	0.2.0.1.1.0	
# ::edge	explain-01	ARG1	claim-01	0.2.0.1.1	0.2.0.1	
# ::edge	explain-01	mod	also	0.2.0.1.1	0.2.0.1.1.1	
# ::edge	idea	poss	it	0.2.0.1.1.0.0.0.1	0.2.0.1.1.0.0.0	
# ::edge	idea	quant	all	0.2.0.0	0.2.0.0.0	
# ::edge	item	mod	certain	0.1.0	0.1.0.0	
# ::edge	knowledge	consist	item	0.1	0.1.0	
# ::edge	mean-01	ARG0	this	0.2.0.1.1.0.0	0.2.0.1.1.0	
# ::edge	mean-01	ARG1	it	0.2.0.1.1.0.0	0.2.0.1.1.0.0.0	
# ::edge	reason	poss	it	0.2.0.1.1.0.0.0.0	0.2.0.1.1.0.0.0	
# ::edge	say-01	ARG0	other	0	0.0	
# ::edge	say-01	ARG1	knowledge	0	0.1	
(s / say-01 
      :ARG0 (o / other) 
      :ARG1 (k / knowledge 
            :consist (i / item 
                  :mod (c / certain))) 
      :ARG2-of (c2 / contrast-01 
            :ARG1 (d / derive-01 
                  :ARG1 (i4 / idea 
                        :quant (a2 / all)) 
                  :ARG1-of (c3 / claim-01 
                        :ARG0 (o2 / only) 
                        :ARG1-of (e / explain-01 
                              :ARG0 (t / this 
                                    :ARG0-of (m / mean-01 
                                          :ARG1 (i3 / it 
                                                :poss-of (r / reason) 
                                                :poss-of (i2 / idea)))) 
                              :mod (a / also))) 
                  :ARG2 (e2 / experience-01))))

# ::snt once new fields are delineated they come to be seen as natural their boundaries appear to derive from logic and a world in which they had no place becomes unimaginable
# ::tok once new fields are delineated they come to be seen as natural their boundaries appear to derive from logic and a world in which they had no place becomes unimaginable
# ::alignments 29-30|0.0.1 28-29|0.0 27-28|0.0.0 26-27|0.0.0.0 24-25|0.1.1.0.0 21-22|0.1.1.0 19-20|0.1.1 18-19|0.1.2 16-17|0.1 14-15|0 13-14|0.1.0 11-12|0.1.0.0 9-10|0.1.0.0.0 5-6|0.1.0.0.0.0 2-3|0.1.0.0.0.1 1-2|0.1.0.0.0.1.0 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:16.163
# ::node	0	appear-02	14-15
# ::node	0.0	become-01	28-29
# ::node	0.0.0	place	27-28
# ::node	0.0.0.0	-	26-27
# ::node	0.0.1	imagine-01	29-30
# ::node	0.1	derive-01	16-17
# ::node	0.1.0	boundary	13-14
# ::node	0.1.0.0	natural	11-12
# ::node	0.1.0.0.0	see-01	9-10
# ::node	0.1.0.0.0.0	they	5-6
# ::node	0.1.0.0.0.1	field	2-3
# ::node	0.1.0.0.0.1.0	new	1-2
# ::node	0.1.1	and	19-20
# ::node	0.1.1.0	world	21-22
# ::node	0.1.1.0.0	they	24-25
# ::node	0.1.2	logic	18-19
# ::node	0.2	once	0-1
# ::root	0	appear-02
# ::edge	and	op1	world	0.1.1	0.1.1.0	
# ::edge	appear-02	ARG0	become-01	0	0.0	
# ::edge	appear-02	ARG1	derive-01	0	0.1	
# ::edge	appear-02	time	once	0	0.2	
# ::edge	become-01	ARG0	place	0.0	0.0.0	
# ::edge	become-01	ARG1	imagine-01	0.0	0.0.1	
# ::edge	derive-01	ARG0	boundary	0.1	0.1.0	
# ::edge	derive-01	ARG1	and	0.1	0.1.1	
# ::edge	derive-01	ARG2	logic	0.1	0.1.2	
# ::edge	field	mod	new	0.1.0.0.0.1	0.1.0.0.0.1.0	
# ::edge	natural	domain	boundary	0.1.0.0	0.1.0	
# ::edge	place	polarity	-	0.0.0	0.0.0.0	
# ::edge	see-01	ARG0	they	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	see-01	ARG1	natural	0.1.0.0.0	0.1.0.0	
# ::edge	see-01	ARG2	field	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	world	poss	they	0.1.1.0	0.1.1.0.0	
(a2 / appear-02 
      :ARG0 (b / become-01 
            :ARG0 (p / place 
                  :polarity (- / -)) 
            :ARG1 (i / imagine-01)) 
      :ARG1 (d / derive-01 
            :ARG0 (b2 / boundary 
                  :domain-of (n / natural 
                        :ARG1-of (s / see-01 
                              :ARG0 (t2 / they) 
                              :ARG2 (f / field 
                                    :mod (n2 / new))))) 
            :ARG1 (a / and 
                  :op1 (w / world 
                        :poss (t / they))) 
            :ARG2 (l / logic)) 
      :time (o / once))

# ::snt it is plausible to say that our ideas of various colours of various material things such as gold or sheep or of processes and activities such as dancing and wrestling derive from experience
# ::tok it is plausible to say that our ideas of various colours of various material things such as gold or sheep or of processes and activities such as dancing and wrestling derive from experience
# ::alignments 32-33|0.1.1 30-31|0.1 28-29|0.1.1.1 25-26|0.2.1.0.1.0.0.0.0 24-25|0.2.1.0.1.0.0 23-24|0.2.1.0.1.0.0.0 22-23|0.2.1.0.1.0.0.0.1 20-21|0.2.1.0.1.0 19-20|0.2.1.0.2 18-19|0.2.1.0 17-18|0.2.1.0.1 15-16|0.2.1.0.0 14-15|0.2.1 13-14|0.2.1.1 12-13|0.1.0 10-11|0.2 9-10|0.2.0 7-8|0.1.1.0 4-5|0 2-3|0.3 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:16.449
# ::node	0	say-01	4-5
# ::node	0.0	it	0-1
# ::node	0.1	derive-01	30-31
# ::node	0.1.0	various	12-13
# ::node	0.1.1	experience-01	32-33
# ::node	0.1.1.0	idea	7-8
# ::node	0.1.1.1	and	28-29
# ::node	0.2	color	10-11
# ::node	0.2.0	various	9-10
# ::node	0.2.1	thing	14-15
# ::node	0.2.1.0	or	18-19
# ::node	0.2.1.0.0	such	15-16
# ::node	0.2.1.0.1	gold	17-18
# ::node	0.2.1.0.1.0	or	20-21
# ::node	0.2.1.0.1.0.0	activity	24-25
# ::node	0.2.1.0.1.0.0.0	and	23-24
# ::node	0.2.1.0.1.0.0.0.0	such	25-26
# ::node	0.2.1.0.1.0.0.0.1	process	22-23
# ::node	0.2.1.0.2	sheep	19-20
# ::node	0.2.1.1	material	13-14
# ::node	0.3	plausible	2-3
# ::root	0	say-01
# ::edge	and	mod	such	0.2.1.0.1.0.0.0	0.2.1.0.1.0.0.0.0	
# ::edge	and	op1	process	0.2.1.0.1.0.0.0	0.2.1.0.1.0.0.0.1	
# ::edge	and	op2	activity	0.2.1.0.1.0.0.0	0.2.1.0.1.0.0	
# ::edge	color	mod	various	0.2	0.2.0	
# ::edge	color	poss	thing	0.2	0.2.1	
# ::edge	derive-01	ARG1	various	0.1	0.1.0	
# ::edge	derive-01	ARG2	experience-01	0.1	0.1.1	
# ::edge	experience-01	ARG0	idea	0.1.1	0.1.1.0	
# ::edge	experience-01	ARG1	and	0.1.1	0.1.1.1	
# ::edge	or	op1	gold	0.2.1.0.1.0	0.2.1.0.1	
# ::edge	or	op1	such	0.2.1.0	0.2.1.0.0	
# ::edge	or	op2	activity	0.2.1.0.1.0	0.2.1.0.1.0.0	
# ::edge	or	op2	gold	0.2.1.0	0.2.1.0.1	
# ::edge	or	op3	sheep	0.2.1.0	0.2.1.0.2	
# ::edge	plausible	domain	say-01	0.3	0	
# ::edge	say-01	ARG0	it	0	0.0	
# ::edge	say-01	ARG1	derive-01	0	0.1	
# ::edge	say-01	ARG2	color	0	0.2	
# ::edge	thing	example	or	0.2.1	0.2.1.0	
# ::edge	thing	mod	material	0.2.1	0.2.1.1	
(s4 / say-01 
      :ARG0 (i2 / it) 
      :ARG1 (d / derive-01 
            :ARG1 (v / various) 
            :ARG2 (e / experience-01 
                  :ARG0 (i / idea) 
                  :ARG1 (a / and))) 
      :ARG2 (c / color 
            :mod (v2 / various) 
            :poss (t / thing 
                  :example (o2 / or 
                        :op1 (s3 / such) 
                        :op2 (g / gold 
                              :op-of (o / or 
                                    :op1 (a2 / activity 
                                          :op-of (a3 / and 
                                                :mod (s / such) 
                                                :op1 (p / process))))) 
                        :op3 (s2 / sheep)) 
                  :mod (m / material))) 
      :domain-of (p2 / plausible))

# ::snt the generality of the instruction the jury receives from the judge the absence of any tariff or standards that might be derived from prevailing practices as a guide and the ambitious targets suggested by plaintiffs counselfo id169 are an open in vitation to respond in a spirit of generosity without much countervailing restraint
# ::tok the generality of the instruction the jury receives from the judge the absence of any tariff or standards that might be derived from prevailing practices as a guide and the ambitious targets suggested by plaintiffs counselfo id169 are an open in vitation to respond in a spirit of generosity without much countervailing restraint
# ::alignments 50-51|0.2.0.0.0.0 46-47|0.2.0.0 43-44|0.2.0.0.0 32-33|0 31-32|0.0 30-31|0.0.0 28-29|0.2 27-28|0.2.0.2.1 24-25|0.2.0 23-24|0.2.0.1 21-22|0.2.0.2 17-18|0.2.0.2.0 16-17|0.2.0.2.0.0 15-16|0.2.0.2.0.0.2 14-15|0.2.0.2.0.0.1 12-13|0.2.0.2.0.0.0 10-11|0.1 7-8|0.2.0.2.0.0.0.0 6-7|0.2.0.2.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:16.886
# ::node	0	suggest-01	32-33
# ::node	0.0	target	31-32
# ::node	0.0.0	ambitious	30-31
# ::node	0.1	judge-01	10-11
# ::node	0.2	and	28-29
# ::node	0.2.0	practice-01	24-25
# ::node	0.2.0.0	spirit	46-47
# ::node	0.2.0.0.0	respond-01	43-44
# ::node	0.2.0.0.0.0	much	50-51
# ::node	0.2.0.1	prevail-02	23-24
# ::node	0.2.0.2	derive-01	21-22
# ::node	0.2.0.2.0	standard	17-18
# ::node	0.2.0.2.0.0	or	16-17
# ::node	0.2.0.2.0.0.0	absent-01	12-13
# ::node	0.2.0.2.0.0.0.0	receive-01	7-8
# ::node	0.2.0.2.0.0.0.0.0	jury	6-7
# ::node	0.2.0.2.0.0.1	any	14-15
# ::node	0.2.0.2.0.0.2	tariff	15-16
# ::node	0.2.0.2.1	guide-01	27-28
# ::root	0	suggest-01
# ::edge	absent-01	ARG1	or	0.2.0.2.0.0.0	0.2.0.2.0.0	
# ::edge	and	op1	practice-01	0.2	0.2.0	
# ::edge	derive-01	ARG1	standard	0.2.0.2	0.2.0.2.0	
# ::edge	derive-01	ARG2	guide-01	0.2.0.2	0.2.0.2.1	
# ::edge	derive-01	instrument	practice-01	0.2.0.2	0.2.0	
# ::edge	judge-01	ARG1	suggest-01	0.1	0	
# ::edge	or	mod	any	0.2.0.2.0.0	0.2.0.2.0.0.1	
# ::edge	or	op1	tariff	0.2.0.2.0.0	0.2.0.2.0.0.2	
# ::edge	or	op2	standard	0.2.0.2.0.0	0.2.0.2.0	
# ::edge	practice-01	ARG1	spirit	0.2.0	0.2.0.0	
# ::edge	prevail-02	ARG1	practice-01	0.2.0.1	0.2.0	
# ::edge	receive-01	ARG0	jury	0.2.0.2.0.0.0.0	0.2.0.2.0.0.0.0.0	
# ::edge	receive-01	ARG1	absent-01	0.2.0.2.0.0.0.0	0.2.0.2.0.0.0	
# ::edge	respond-01	ARG0	spirit	0.2.0.0.0	0.2.0.0	
# ::edge	respond-01	ARG1	much	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	suggest-01	ARG0	target	0	0.0	
# ::edge	suggest-01	ARG2	and	0	0.2	
# ::edge	target	mod	ambitious	0.0	0.0.0	
(s2 / suggest-01 
      :ARG0 (t / target 
            :mod (a / ambitious)) 
      :ARG1-of (j / judge-01) 
      :ARG2 (a2 / and 
            :op1 (p / practice-01 
                  :ARG1 (s / spirit 
                        :ARG0-of (r / respond-01 
                              :ARG1 (m / much))) 
                  :ARG1-of (p2 / prevail-02) 
                  :instrument-of (d / derive-01 
                        :ARG1 (s3 / standard 
                              :op-of (o / or 
                                    :ARG1-of (a4 / absent-01 
                                          :ARG1-of (r2 / receive-01 
                                                :ARG0 (j2 / jury))) 
                                    :mod (a3 / any) 
                                    :op1 (t2 / tariff))) 
                        :ARG2 (g / guide-01)))))

# ::snt bacons division of knowledge into inspired divinity and philosophy is based on the idea that all knowledge is ultimately derived from one or other of two sources it may be inspired by divine revelation or it may arise from our senses of sight touch hearing and the rest
# ::tok bacons division of knowledge into inspired divinity and philosophy is based on the idea that all knowledge is ultimately derived from one or other of two sources it may be inspired by divine revelation or it may arise from our senses of sight touch hearing and the rest
# ::alignments 47-48|0.0.1.1 45-46|0 44-45|0.0 43-44|0.0.0 42-43|0.0.0.0 40-41|0.0.1 37-38|0.0.1.0 36-37|0.0.1.0.2.2.0+0.0.1.0.2.2 35-36|0.0.1.0.0 34-35|0.0.1.0.2 33-34|0.0.1.0.2.1.0 32-33|0.0.1.0.2.1.0.0 30-31|0.0.1.0.2.1 28-29|0.0.1.0.2.0.0+0.0.1.0.2.0 27-28|0.0.1.0.1 26-27|0.0.1.0.2.1.1 25-26|0.0.1.0.2.1.1.0 23-24|0.0.0.0.0.1.0.0 22-23|0.0.0.0.0.1.2.1 19-20|0.0.0.0.0 18-19|0.0.0.0.0.2 16-17|0.0.0.0.0.0 15-16|0.0.0.0.0.0.0 13-14|0.0.0.0.0.1.3 10-11|0.0.0.0.0.1.0 8-9|0.0.0.0.0.1.2 7-8|0.0.0.0.0.1 5-6|0.0.0.0.0.1.2.0 3-4|0.0.0.0.0.1.1.0 1-2|0.0.0.0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:18.401
# ::node	0	and	45-46
# ::node	0.0	hear-01	44-45
# ::node	0.0.0	touch-01	43-44
# ::node	0.0.0.0	sight-01	42-43
# ::node	0.0.0.0.0	derive-01	19-20
# ::node	0.0.0.0.0.0	knowledge	16-17
# ::node	0.0.0.0.0.0.0	all	15-16
# ::node	0.0.0.0.0.1	and	7-8
# ::node	0.0.0.0.0.1.0	base-01	10-11
# ::node	0.0.0.0.0.1.0.0	other	23-24
# ::node	0.0.0.0.0.1.1	division	1-2
# ::node	0.0.0.0.0.1.1.0	knowledge	3-4
# ::node	0.0.0.0.0.1.2	philosophy	8-9
# ::node	0.0.0.0.0.1.2.0	inspire-01	5-6
# ::node	0.0.0.0.0.1.2.1	or	22-23
# ::node	0.0.0.0.0.1.3	idea	13-14
# ::node	0.0.0.0.0.2	ultimate	18-19
# ::node	0.0.1	sense	40-41
# ::node	0.0.1.0	arise-01	37-38
# ::node	0.0.1.0.0	it	35-36
# ::node	0.0.1.0.1	it	27-28
# ::node	0.0.1.0.2	or	34-35
# ::node	0.0.1.0.2.0	date-entity	28-29
# ::node	0.0.1.0.2.0.0	5	28-29
# ::node	0.0.1.0.2.1	inspire-01	30-31
# ::node	0.0.1.0.2.1.0	revelation	33-34
# ::node	0.0.1.0.2.1.0.0	divine	32-33
# ::node	0.0.1.0.2.1.1	source	26-27
# ::node	0.0.1.0.2.1.1.0	2	25-26
# ::node	0.0.1.0.2.2	date-entity	36-37
# ::node	0.0.1.0.2.2.0	5	36-37
# ::node	0.0.1.1	rest	47-48
# ::root	0	and
# ::edge	and	op1	division	0.0.0.0.0.1	0.0.0.0.0.1.1	
# ::edge	and	op1	hear-01	0	0.0	
# ::edge	and	op2	philosophy	0.0.0.0.0.1	0.0.0.0.0.1.2	
# ::edge	and	op3	derive-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	arise-01	ARG0	it	0.0.1.0	0.0.1.0.0	
# ::edge	arise-01	ARG1	it	0.0.1.0	0.0.1.0.1	
# ::edge	arise-01	ARG2	sense	0.0.1.0	0.0.1	
# ::edge	base-01	ARG0	and	0.0.0.0.0.1.0	0.0.0.0.0.1	
# ::edge	base-01	ARG1	other	0.0.0.0.0.1.0	0.0.0.0.0.1.0.0	
# ::edge	date-entity	month	5	0.0.1.0.2.0	0.0.1.0.2.0.0	
# ::edge	date-entity	month	5	0.0.1.0.2.2	0.0.1.0.2.2.0	
# ::edge	derive-01	ARG1	knowledge	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	derive-01	time	ultimate	0.0.0.0.0	0.0.0.0.0.2	
# ::edge	division	mod	knowledge	0.0.0.0.0.1.1	0.0.0.0.0.1.1.0	
# ::edge	hear-01	ARG1	touch-01	0.0	0.0.0	
# ::edge	idea	poss	and	0.0.0.0.0.1.3	0.0.0.0.0.1	
# ::edge	inspire-01	ARG0	revelation	0.0.1.0.2.1	0.0.1.0.2.1.0	
# ::edge	inspire-01	ARG1	philosophy	0.0.0.0.0.1.2.0	0.0.0.0.0.1.2	
# ::edge	inspire-01	ARG1	source	0.0.1.0.2.1	0.0.1.0.2.1.1	
# ::edge	knowledge	quant	all	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	or	op1	date-entity	0.0.1.0.2	0.0.1.0.2.0	
# ::edge	or	op1	philosophy	0.0.0.0.0.1.2.1	0.0.0.0.0.1.2	
# ::edge	or	op2	inspire-01	0.0.1.0.2	0.0.1.0.2.1	
# ::edge	or	op3	date-entity	0.0.1.0.2	0.0.1.0.2.2	
# ::edge	or	op4	arise-01	0.0.1.0.2	0.0.1.0	
# ::edge	revelation	mod	divine	0.0.1.0.2.1.0	0.0.1.0.2.1.0.0	
# ::edge	sense	mod	hear-01	0.0.1	0.0	
# ::edge	sense	mod	rest	0.0.1	0.0.1.1	
# ::edge	sight-01	ARG1	derive-01	0.0.0.0	0.0.0.0.0	
# ::edge	source	quant	2	0.0.1.0.2.1.1	0.0.1.0.2.1.1.0	
# ::edge	touch-01	ARG1	sight-01	0.0.0	0.0.0.0	
(a / and 
      :op1 (h / hear-01 
            :ARG1 (t / touch-01 
                  :ARG1 (s / sight-01 
                        :ARG1 (d4 / derive-01 
                              :ARG1 (k / knowledge 
                                    :quant (a3 / all)) 
                              :op-of (a4 / and 
                                    :ARG0-of (b / base-01 
                                          :ARG1 (o2 / other)) 
                                    :op1 (d5 / division 
                                          :mod (k2 / knowledge)) 
                                    :op2 (p / philosophy 
                                          :ARG1-of (i5 / inspire-01) 
                                          :op-of (o3 / or)) 
                                    :poss-of (i4 / idea)) 
                              :time (u / ultimate)))) 
            :mod-of (s2 / sense 
                  :ARG2-of (a2 / arise-01 
                        :ARG0 (i / it) 
                        :ARG1 (i3 / it) 
                        :op-of (o / or 
                              :op1 (d3 / date-entity 
                                    :month 5) 
                              :op2 (i2 / inspire-01 
                                    :ARG0 (r2 / revelation 
                                          :mod (d2 / divine)) 
                                    :ARG1 (s3 / source 
                                          :quant 2)) 
                              :op3 (d / date-entity 
                                    :month 5))) 
                  :mod (r / rest))))

# ::snt mr evans relying on stilk v myrick 1809 2 camp 317 submitted that although the defendants might have derived practical benefits from paying the bonus dash, they derived no benefit in law since the plaintiff was promising to do no more than he was already bound to do
# ::tok mr evans relying on stilk v myrick 1809 2 camp 317 submitted that although the defendants might have derived practical benefits from paying the bonus dash , they derived no benefit in law since the plaintiff was promising to do no more than he was already bound to do
# ::alignments 45-46|0.0 43-44|0.1.1.0.0.3.0.0 40-41|0.1.2 37-38|0.1.1.0.0.3.0 33-34|0.1.1.0.0.3 32-33|0.1.1.0.0.2 30-31|0.1.1.0.0.0 29-30|0.1.1.0.0.0.1 28-29|0.1.1.0.0 27-28|0.1.1.0 24-25|0.1.1.1 22-23|0.1.1 20-21|0 19-20|0.2 18-19|0.1 15-16|0.1.0 11-12|0.1.1.0.0.1 9-10|0.1.1.0.0.1.0 8-9|0.1.1.0.0.0.0 7-8|0.1.1.2.0+0.1.1.2 2-3|0.1.1.0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:18.951
# ::node	0	benefit-01	20-21
# ::node	0.0	already	45-46
# ::node	0.1	derive-01	18-19
# ::node	0.1.0	defendant	15-16
# ::node	0.1.1	pay-01	22-23
# ::node	0.1.1.0	they	27-28
# ::node	0.1.1.0.0	derive-01	28-29
# ::node	0.1.1.0.0.0	benefit-01	30-31
# ::node	0.1.1.0.0.0.0	2	8-9
# ::node	0.1.1.0.0.0.1	-	29-30
# ::node	0.1.1.0.0.1	submit-01	11-12
# ::node	0.1.1.0.0.1.0	camp	9-10
# ::node	0.1.1.0.0.1.1	rely-01	2-3
# ::node	0.1.1.0.0.2	law	32-33
# ::node	0.1.1.0.0.3	since	33-34
# ::node	0.1.1.0.0.3.0	promise-01	37-38
# ::node	0.1.1.0.0.3.0.0	he	43-44
# ::node	0.1.1.1	bonus	24-25
# ::node	0.1.1.2	date-entity	7-8
# ::node	0.1.1.2.0	1809	7-8
# ::node	0.1.2	-	40-41
# ::node	0.2	practical	19-20
# ::root	0	benefit-01
# ::edge	-	op1	derive-01	0.1.2	0.1	
# ::edge	benefit-01	ARG0	2	0.1.1.0.0.0	0.1.1.0.0.0.0	
# ::edge	benefit-01	ARG1	already	0	0.0	
# ::edge	benefit-01	mod	practical	0	0.2	
# ::edge	benefit-01	polarity	-	0.1.1.0.0.0	0.1.1.0.0.0.1	
# ::edge	date-entity	year	1809	0.1.1.2	0.1.1.2.0	
# ::edge	derive-01	ARG0	defendant	0.1	0.1.0	
# ::edge	derive-01	ARG0	they	0.1.1.0.0	0.1.1.0	
# ::edge	derive-01	ARG1	benefit-01	0.1	0	
# ::edge	derive-01	ARG1	benefit-01	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	derive-01	ARG2	law	0.1.1.0.0	0.1.1.0.0.2	
# ::edge	derive-01	manner	pay-01	0.1	0.1.1	
# ::edge	derive-01	time	since	0.1.1.0.0	0.1.1.0.0.3	
# ::edge	pay-01	ARG0	they	0.1.1	0.1.1.0	
# ::edge	pay-01	ARG1	bonus	0.1.1	0.1.1.1	
# ::edge	pay-01	time	date-entity	0.1.1	0.1.1.2	
# ::edge	promise-01	ARG0	he	0.1.1.0.0.3.0	0.1.1.0.0.3.0.0	
# ::edge	rely-01	ARG1	submit-01	0.1.1.0.0.1.1	0.1.1.0.0.1	
# ::edge	since	op1	promise-01	0.1.1.0.0.3	0.1.1.0.0.3.0	
# ::edge	submit-01	ARG0	camp	0.1.1.0.0.1	0.1.1.0.0.1.0	
# ::edge	submit-01	ARG1	derive-01	0.1.1.0.0.1	0.1.1.0.0	
(b3 / benefit-01 
      :ARG1 (a / already) 
      :ARG1-of (d2 / derive-01 
            :ARG0 (d3 / defendant) 
            :manner (p2 / pay-01 
                  :ARG0 (t / they 
                        :ARG0-of (d / derive-01 
                              :ARG1 (b / benefit-01 
                                    :ARG0 2 
                                    :polarity (-2 / -)) 
                              :ARG1-of (s2 / submit-01 
                                    :ARG0 (c / camp) 
                                    :ARG1-of (r / rely-01)) 
                              :ARG2 (l / law) 
                              :time (s / since 
                                    :op1 (p / promise-01 
                                          :ARG0 (h / he))))) 
                  :ARG1 (b2 / bonus) 
                  :time (d4 / date-entity 
                        :year 1809)) 
            :op-of (- / -)) 
      :mod (p3 / practical))

# ::snt theyre also developing hementin an enzyme which can dissolve blood clots derived from the amazon leech which is 18 inches long
# ::tok theyre also developing hementin an enzyme which can dissolve blood clots derived from the amazon leech which is 18 inches long
# ::alignments 19-20|0.0.0.1.0.1+0.0.0.1.0 18-19|0.0.0.1.0.0 11-12|0.0.0.1 10-11|0.0.0 9-10|0.0.0.2 8-9|0.0 7-8|0 2-3|0.0.0.0 1-2|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:19.064
# ::node	0	possible	7-8
# ::node	0.0	dissolve-01	8-9
# ::node	0.0.0	clot	10-11
# ::node	0.0.0.0	develop-02	2-3
# ::node	0.0.0.0.0	also	1-2
# ::node	0.0.0.1	derive-01	11-12
# ::node	0.0.0.1.0	distance-quantity	19-20
# ::node	0.0.0.1.0.0	18	18-19
# ::node	0.0.0.1.0.1	inch	19-20
# ::node	0.0.0.2	blood	9-10
# ::root	0	possible
# ::edge	clot	mod	blood	0.0.0	0.0.0.2	
# ::edge	derive-01	ARG0	distance-quantity	0.0.0.1	0.0.0.1.0	
# ::edge	derive-01	ARG1	clot	0.0.0.1	0.0.0	
# ::edge	develop-02	ARG0	clot	0.0.0.0	0.0.0	
# ::edge	develop-02	degree	also	0.0.0.0	0.0.0.0.0	
# ::edge	dissolve-01	ARG1	clot	0.0	0.0.0	
# ::edge	distance-quantity	quant	18	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	distance-quantity	unit	inch	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	possible	domain	dissolve-01	0	0.0	
(p / possible 
      :domain (d3 / dissolve-01 
            :ARG1 (c / clot 
                  :ARG0-of (d4 / develop-02 
                        :degree (a / also)) 
                  :ARG1-of (d2 / derive-01 
                        :ARG0 (d / distance-quantity 
                              :quant 18 
                              :unit (i / inch))) 
                  :mod (b / blood))))

# ::snt but all derive a considerable part of their revenue from allocated parochial contributions
# ::tok but all derive a considerable part of their revenue from allocated parochial contributions
# ::alignments 12-13|0.0.1 10-11|0.0.1.1 8-9|0.0.1.1.0 4-5|0.0.1.0 2-3|0.0 1-2|0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:19.102
# ::node	0	contrast-01	0-1
# ::node	0.0	derive-01	2-3
# ::node	0.0.0	all	1-2
# ::node	0.0.1	contribute-01	12-13
# ::node	0.0.1.0	considerable	4-5
# ::node	0.0.1.1	allocate-01	10-11
# ::node	0.0.1.1.0	revenue	8-9
# ::root	0	contrast-01
# ::edge	allocate-01	ARG0	revenue	0.0.1.1	0.0.1.1.0	
# ::edge	allocate-01	ARG1	contribute-01	0.0.1.1	0.0.1	
# ::edge	contrast-01	ARG1	derive-01	0	0.0	
# ::edge	contribute-01	ARG1	considerable	0.0.1	0.0.1.0	
# ::edge	derive-01	ARG1	all	0.0	0.0.0	
# ::edge	derive-01	ARG2	contribute-01	0.0	0.0.1	
(c3 / contrast-01 
      :ARG1 (d / derive-01 
            :ARG1 (a2 / all) 
            :ARG2 (c / contribute-01 
                  :ARG1 (c2 / considerable) 
                  :ARG1-of (a / allocate-01 
                        :ARG0 (r / revenue)))))

# ::snt more valuable rewards derive from the mere fact that one is handling wood and is in close contact with a natural substance of endless variety and interest
# ::tok more valuable rewards derive from the mere fact that one is handling wood and is in close contact with a natural substance of endless variety and interest
# ::alignments 26-27|0 25-26|0.0 24-25|0.0.0 23-24|0.0.0.0 21-22|0.0.1 20-21|0.0.1.1 17-18|0.0.1.0 13-14|0.0.1.0.0 12-13|0.0.1.0.0.2.0 11-12|0.0.1.0.0.2 7-8|0.0.1.0.0.1.0 6-7|0.0.1.0.0.1.0.0 3-4|0.0.1.0.0.1 1-2|0.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:19.468
# ::node	0	interest-01	26-27
# ::node	0.0	and	25-26
# ::node	0.0.0	variety	24-25
# ::node	0.0.0.0	endless	23-24
# ::node	0.0.1	substance	21-22
# ::node	0.0.1.0	contact-01	17-18
# ::node	0.0.1.0.0	and	13-14
# ::node	0.0.1.0.0.0	value-01	1-2
# ::node	0.0.1.0.0.1	derive-01	3-4
# ::node	0.0.1.0.0.1.0	fact	7-8
# ::node	0.0.1.0.0.1.0.0	mere	6-7
# ::node	0.0.1.0.0.2	handle-01	11-12
# ::node	0.0.1.0.0.2.0	wood	12-13
# ::node	0.0.1.1	natural	20-21
# ::root	0	interest-01
(i / interest-01 
      :op-of (a / and 
            :op1 (v / variety 
                  :mod (e / endless)) 
            :topic-of (s / substance 
                  :ARG1-of (c / contact-01 
                        :ARG0 (a2 / and 
                              :ARG1-of (v2 / value-01) 
                              :ARG1-of (d / derive-01 
                                    :ARG2 (f / fact 
                                          :mod (m / mere))) 
                              :op1 (h / handle-01 
                                    :ARG1 (w / wood)))) 
                  :mod (n / natural))))

# ::snt these rankings are derived from offer documents
# ::tok these rankings are derived from offer documents
# ::alignments 6-7|0.0 5-6|0.0.0 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:19.475
# ::node	0	derive-01	3-4
# ::node	0.0	document	6-7
# ::node	0.0.0	offer-01	5-6
# ::root	0	derive-01
# ::edge	derive-01	ARG1	document	0	0.0	
# ::edge	offer-01	ARG1	document	0.0.0	0.0	
(d2 / derive-01 
      :ARG1 (d / document 
            :ARG1-of (o / offer-01)))

# ::snt he said half of local services would still be paid for out of central taxation while another quarter derived from the poll tax was subject to rebates of up to 80 per cent
# ::tok he said half of local services would still be paid for out of central taxation while another quarter derived from the poll tax was subject to rebates of up to 80 per cent
# ::alignments 32-33|0.0.0.3.0+0.0.0.3 30-31|0.0.0.0 26-27|0.0.1.1.0.0 24-25|0.0.1.1.0 22-23|0.0.1 21-22|0.0.1.2 18-19|0.0.1.1 16-17|0.0.1.2.0 13-14|0.0.1.0 9-10|0.0.0 7-8|0.0.0.2 5-6|0.0.0.1 4-5|0.0.0.1.0 2-3|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:19.833
# ::node	0	say-01	1-2
# ::node	0.0	he	0-1
# ::node	0.0.0	pay-01	9-10
# ::node	0.0.0.0	80	30-31
# ::node	0.0.0.1	service	5-6
# ::node	0.0.0.1.0	local	4-5
# ::node	0.0.0.2	still	7-8
# ::node	0.0.0.3	monetary-quantity	32-33
# ::node	0.0.0.3.0	cent	32-33
# ::node	0.0.1	tax-01	22-23
# ::node	0.0.1.0	central	13-14
# ::node	0.0.1.1	derive-01	18-19
# ::node	0.0.1.1.0	subject	24-25
# ::node	0.0.1.1.0.0	rebate	26-27
# ::node	0.0.1.2	poll-01	21-22
# ::node	0.0.1.2.0	another	16-17
# ::node	0.1	half	2-3
# ::root	0	say-01
# ::edge	derive-01	ARG1	subject	0.0.1.1	0.0.1.1.0	
# ::edge	derive-01	ARG2	tax-01	0.0.1.1	0.0.1	
# ::edge	monetary-quantity	op1	pay-01	0.0.0.3	0.0.0	
# ::edge	monetary-quantity	unit	cent	0.0.0.3	0.0.0.3.0	
# ::edge	pay-01	ARG0	he	0.0.0	0.0	
# ::edge	pay-01	ARG1	80	0.0.0	0.0.0.0	
# ::edge	pay-01	ARG2	service	0.0.0	0.0.0.1	
# ::edge	pay-01	mod	still	0.0.0	0.0.0.2	
# ::edge	poll-01	ARG1	another	0.0.1.2	0.0.1.2.0	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	half	0	0.1	
# ::edge	service	mod	local	0.0.0.1	0.0.0.1.0	
# ::edge	subject	domain	rebate	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	tax-01	ARG0	he	0.0.1	0.0	
# ::edge	tax-01	ARG1	central	0.0.1	0.0.1.0	
# ::edge	tax-01	ARG3	poll-01	0.0.1	0.0.1.2	
(s4 / say-01 
      :ARG0 (h2 / he 
            :ARG0-of (p2 / pay-01 
                  :ARG1 80 
                  :ARG2 (s3 / service 
                        :mod (l / local)) 
                  :mod (s2 / still) 
                  :op-of (m / monetary-quantity 
                        :unit (c / cent))) 
            :ARG0-of (t / tax-01 
                  :ARG1 (c2 / central) 
                  :ARG2-of (d / derive-01 
                        :ARG1 (s / subject 
                              :domain (r / rebate))) 
                  :ARG3 (p / poll-01 
                        :ARG1 (a / another)))) 
      :ARG1 (h / half))

# ::snt one may think that ones right to x always derives from ones interest in x
# ::tok one may think that ones right to x always derives from ones interest in x
# ::alignments 14-15|0.1.2 12-13|0.1 11-12|0.1.1 8-9|0.1.0.0 7-8|0.1.0 4-5|0.0 2-3|0 1-2|0.2.0+0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:19.909
# ::node	0	think-01	2-3
# ::node	0.0	one	4-5
# ::node	0.1	interest-01	12-13
# ::node	0.1.0	x	7-8
# ::node	0.1.0.0	always	8-9
# ::node	0.1.1	one	11-12
# ::node	0.1.2	x	14-15
# ::node	0.2	date-entity	1-2
# ::node	0.2.0	5	1-2
# ::root	0	think-01
# ::edge	always	mod	x	0.1.0.0	0.1.0	
# ::edge	date-entity	month	5	0.2	0.2.0	
# ::edge	interest-01	ARG0	x	0.1	0.1.0	
# ::edge	interest-01	ARG1	one	0.1	0.1.1	
# ::edge	interest-01	ARG2	x	0.1	0.1.2	
# ::edge	think-01	ARG0	one	0	0.0	
# ::edge	think-01	ARG1	interest-01	0	0.1	
# ::edge	think-01	mod	date-entity	0	0.2	
(t / think-01 
      :ARG0 (o2 / one) 
      :ARG1 (i / interest-01 
            :ARG0 (x2 / x 
                  :mod-of (a / always)) 
            :ARG1 (o / one) 
            :ARG2 (x / x)) 
      :mod (d / date-entity 
            :month 5))

# ::snt this must derive dash
# ::tok this must derive dash
# ::alignments 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:19.913
# ::node	0	derive-01	2-3
# ::node	0.0	this	0-1
# ::root	0	derive-01
# ::edge	derive-01	ARG0	this	0	0.0	
(d / derive-01 
      :ARG0 (t / this))

# ::snt at ronnie scotts red rodneys band was surprisingly crisp and forthrightsurprisingly because he might have been expected to coast on his legendary status in bebop and has instead associated himself with younger musicians who play originals derived from bop funk blakeylike soul jazz and coltraneinspired almostfree music
# ::tok at ronnie scotts red rodneys band was surprisingly crisp and forthrightsurprisingly because he might have been expected to coast on his legendary status in bebop and has instead associated himself with younger musicians who play originals derived from bop funk blakeylike soul jazz and coltraneinspired almostfree music
# ::alignments 46-47|0.1.1.1.0.0.0.0 43-44|0.1.1.1.0.0.0 41-42|0.1.1.0 36-37|0.1.1.1.0.0 34-35|0.1.1.1.0 32-33|0.1.1.1 31-32|0.1.1.1.0.1 28-29|0.1.1 27-28|0.1.1.2 25-26|0.1.1.3 22-23|0.1.1.3.0 21-22|0.1.1.3.0.0 18-19|0.0.0 16-17|0.0 12-13|0.0.1 11-12|0 9-10|0.1 8-9|0.1.0 7-8|0.1.0.0 5-6|0.1.0.1 3-4|0.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:20.405
# ::node	0	cause-01	11-12
# ::node	0.0	expect-01	16-17
# ::node	0.0.0	coast	18-19
# ::node	0.0.1	he	12-13
# ::node	0.1	and	9-10
# ::node	0.1.0	crisp	8-9
# ::node	0.1.0.0	surprise-01	7-8
# ::node	0.1.0.1	band	5-6
# ::node	0.1.0.1.0	red	3-4
# ::node	0.1.1	associate-01	28-29
# ::node	0.1.1.0	soul	41-42
# ::node	0.1.1.1	musician	32-33
# ::node	0.1.1.1.0	play-01	34-35
# ::node	0.1.1.1.0.0	derive-01	36-37
# ::node	0.1.1.1.0.0.0	and	43-44
# ::node	0.1.1.1.0.0.0.0	music	46-47
# ::node	0.1.1.1.0.1	young	31-32
# ::node	0.1.1.2	instead	27-28
# ::node	0.1.1.3	and	25-26
# ::node	0.1.1.3.0	status	22-23
# ::node	0.1.1.3.0.0	legendary	21-22
# ::root	0	cause-01
# ::edge	and	location	status	0.1.1.3	0.1.1.3.0	
# ::edge	and	op1	associate-01	0.1.1.3	0.1.1	
# ::edge	and	op1	crisp	0.1	0.1.0	
# ::edge	and	op1	music	0.1.1.1.0.0.0	0.1.1.1.0.0.0.0	
# ::edge	and	op2	associate-01	0.1	0.1.1	
# ::edge	associate-01	ARG1	soul	0.1.1	0.1.1.0	
# ::edge	associate-01	ARG2	musician	0.1.1	0.1.1.1	
# ::edge	associate-01	mod	instead	0.1.1	0.1.1.2	
# ::edge	band	mod	red	0.1.0.1	0.1.0.1.0	
# ::edge	cause-01	ARG0	expect-01	0	0.0	
# ::edge	cause-01	ARG1	and	0	0.1	
# ::edge	crisp	domain	band	0.1.0	0.1.0.1	
# ::edge	derive-01	ARG1	and	0.1.1.1.0.0	0.1.1.1.0.0.0	
# ::edge	expect-01	ARG1	coast	0.0	0.0.0	
# ::edge	expect-01	ARG2	he	0.0	0.0.1	
# ::edge	play-01	ARG0	musician	0.1.1.1.0	0.1.1.1	
# ::edge	play-01	ARG1	derive-01	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	play-01	ARG2	young	0.1.1.1.0	0.1.1.1.0.1	
# ::edge	status	mod	legendary	0.1.1.3.0	0.1.1.3.0.0	
# ::edge	surprise-01	ARG0	crisp	0.1.0.0	0.1.0	
(c2 / cause-01 
      :ARG0 (e / expect-01 
            :ARG1 (c / coast) 
            :ARG2 (h / he)) 
      :ARG1 (a4 / and 
            :op1 (c3 / crisp 
                  :ARG0-of (s3 / surprise-01) 
                  :domain (b / band 
                        :mod (r / red))) 
            :op2 (a2 / associate-01 
                  :ARG1 (s / soul) 
                  :ARG2 (m2 / musician 
                        :ARG0-of (p / play-01 
                              :ARG1 (d / derive-01 
                                    :ARG1 (a / and 
                                          :op1 (m / music))) 
                              :ARG2 (y / young))) 
                  :mod (i / instead) 
                  :op-of (a3 / and 
                        :location (s2 / status 
                              :mod (l / legendary))))))

# ::snt it is after all very unlikely that all moral considerations derive from peoples interests in having rights
# ::tok it is after all very unlikely that all moral considerations derive from peoples interests in having rights
# ::alignments 16-17|0.1.2.0.0 13-14|0.1.2 12-13|0.1.2.0 10-11|0.1 9-10|0.1.1 8-9|0.1.1.0 7-8|0.1.1.1 5-6|0.3+0 4-5|0.0 3-4|0.2.0 2-3|0.2 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:20.587
# ::node	0	likely	5-6
# ::node	0.0	very	4-5
# ::node	0.1	derive-01	10-11
# ::node	0.1.0	it	0-1
# ::node	0.1.1	consider-01	9-10
# ::node	0.1.1.0	moral	8-9
# ::node	0.1.1.1	all	7-8
# ::node	0.1.2	interest	13-14
# ::node	0.1.2.0	people	12-13
# ::node	0.1.2.0.0	right	16-17
# ::node	0.2	after	2-3
# ::node	0.2.0	all	3-4
# ::node	0.3	-	5-6
# ::root	0	likely
# ::edge	after	op1	all	0.2	0.2.0	
# ::edge	consider-01	mod	moral	0.1.1	0.1.1.0	
# ::edge	consider-01	quant	all	0.1.1	0.1.1.1	
# ::edge	derive-01	ARG0	it	0.1	0.1.0	
# ::edge	derive-01	ARG1	consider-01	0.1	0.1.1	
# ::edge	derive-01	ARG2	interest	0.1	0.1.2	
# ::edge	interest	poss	people	0.1.2	0.1.2.0	
# ::edge	likely	degree	very	0	0.0	
# ::edge	likely	domain	derive-01	0	0.1	
# ::edge	likely	mod	after	0	0.2	
# ::edge	likely	polarity	-	0	0.3	
# ::edge	people	mod	right	0.1.2.0	0.1.2.0.0	
(l / likely 
      :degree (v / very) 
      :domain (d / derive-01 
            :ARG0 (i2 / it) 
            :ARG1 (c / consider-01 
                  :mod (m / moral) 
                  :quant (a / all)) 
            :ARG2 (i / interest 
                  :poss (p / people 
                        :mod (r / right)))) 
      :mod (a3 / after 
            :op1 (a2 / all)) 
      :polarity -)

# ::snt they performed the great historical function of organizing a body of law and practice derived from the quran and the traditions of the prophet and the companions
# ::tok they performed the great historical function of organizing a body of law and practice derived from the quran and the traditions of the prophet and the companions
# ::alignments 26-27|0.1 24-25|0 20-21|0.0 18-19|0.0.0 14-15|0.0.0.0 13-14|0.0.0.0.0.2 12-13|0.0.0.0.0 11-12|0.0.0.0.0.1 9-10|0.0.0.0.0.0.0.0.0 7-8|0.0.0.0.0.0.0.0 5-6|0.0.0.0.0.0.1 4-5|0.0.0.0.0.0.1.0 3-4|0.0.0.0.0.0.1.1 1-2|0.0.0.0.0.0 0-1|0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:21.128
# ::node	0	and	24-25
# ::node	0.0	tradition	20-21
# ::node	0.0.0	and	18-19
# ::node	0.0.0.0	derive-01	14-15
# ::node	0.0.0.0.0	and	12-13
# ::node	0.0.0.0.0.0	perform-01	1-2
# ::node	0.0.0.0.0.0.0	they	0-1
# ::node	0.0.0.0.0.0.0.0	organize-01	7-8
# ::node	0.0.0.0.0.0.0.0.0	body	9-10
# ::node	0.0.0.0.0.0.1	function-01	5-6
# ::node	0.0.0.0.0.0.1.0	history	4-5
# ::node	0.0.0.0.0.0.1.1	great	3-4
# ::node	0.0.0.0.0.1	law	11-12
# ::node	0.0.0.0.0.2	practice-01	13-14
# ::node	0.1	companion	26-27
# ::root	0	and
# ::edge	and	op1	perform-01	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	and	op1	tradition	0	0.0	
# ::edge	and	op1	tradition	0.0.0	0.0	
# ::edge	and	op2	companion	0	0.1	
# ::edge	and	op2	law	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	and	op3	practice-01	0.0.0.0.0	0.0.0.0.0.2	
# ::edge	derive-01	ARG0	and	0.0.0.0	0.0.0	
# ::edge	derive-01	ARG1	and	0.0.0.0	0.0.0.0.0	
# ::edge	function-01	ARG1	history	0.0.0.0.0.0.1	0.0.0.0.0.0.1.0	
# ::edge	function-01	degree	great	0.0.0.0.0.0.1	0.0.0.0.0.0.1.1	
# ::edge	organize-01	ARG0	they	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	organize-01	ARG1	body	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0	
# ::edge	perform-01	ARG0	they	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	perform-01	ARG1	function-01	0.0.0.0.0.0	0.0.0.0.0.0.1	
(a / and 
      :op1 (t / tradition 
            :op-of (a2 / and 
                  :ARG0-of (d / derive-01 
                        :ARG1 (a3 / and 
                              :op1 (p2 / perform-01 
                                    :ARG0 (t2 / they 
                                          :ARG0-of (o / organize-01 
                                                :ARG1 (b / body))) 
                                    :ARG1 (f / function-01 
                                          :ARG1 (h / history) 
                                          :degree (g / great))) 
                              :op2 (l / law) 
                              :op3 (p / practice-01))))) 
      :op2 (c / companion))

# ::snt the poison she brings with her which causes the varnished surface of society to crack and decompose may derive its venom less from repressed libidinal instincts than it does from the ferment of representation itself undermining natural reference hystericizing its body and infecting its vital circulus with a corrosive morbidity
# ::tok the poison she brings with her which causes the varnished surface of society to crack and decompose may derive its venom less from repressed libidinal instincts than it does from the ferment of representation itself undermining natural reference hystericizing its body and infecting its vital circulus with a corrosive morbidity
# ::alignments 44-45|0.0.0.0.0 41-42|0.1.0.0.1 40-41|0.1.0.0.0.2 37-38|0.1.0.0.0 36-37|0.1.0.0.0.1 35-36|0.1.0.0 33-34|0.1.0 27-28|0.1.0.0.0.0 25-26|0.0.0.0.1 23-24|0.0.0.0 21-22|0.1.0.0.0.0.0.0 18-19|0.1.0.0.0.0.0 17-18|0.1.0.0.0.0.0.1.0+0.1.0.0.0.0.0.1 15-16|0.1 14-15|0.1.2 12-13|0.1.1 10-11|0.1.2.0 7-8|0 3-4|0.0.0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:21.868
# ::node	0	cause-01	7-8
# ::node	0.0	she	2-3
# ::node	0.0.0	bring-01	3-4
# ::node	0.0.0.0	repress-01	23-24
# ::node	0.0.0.0.0	vital	44-45
# ::node	0.0.0.0.1	instinct	25-26
# ::node	0.1	and	15-16
# ::node	0.1.0	represent-01	33-34
# ::node	0.1.0.0	undermine-01	35-36
# ::node	0.1.0.0.0	reference-01	37-38
# ::node	0.1.0.0.0.0	it	27-28
# ::node	0.1.0.0.0.0.0	derive-01	18-19
# ::node	0.1.0.0.0.0.0.0	less	21-22
# ::node	0.1.0.0.0.0.0.1	date-entity	17-18
# ::node	0.1.0.0.0.0.0.1.0	5	17-18
# ::node	0.1.0.0.0.1	natural	36-37
# ::node	0.1.0.0.0.2	body	40-41
# ::node	0.1.0.0.1	and	41-42
# ::node	0.1.1	society	12-13
# ::node	0.1.2	crack-02	14-15
# ::node	0.1.2.0	surface	10-11
# ::root	0	cause-01
# ::edge	and	op1	society	0.1	0.1.1	
# ::edge	and	op1	undermine-01	0.1.0.0.1	0.1.0.0	
# ::edge	and	op2	crack-02	0.1	0.1.2	
# ::edge	body	poss	reference-01	0.1.0.0.0.2	0.1.0.0.0	
# ::edge	bring-01	ARG0	she	0.0.0	0.0	
# ::edge	bring-01	ARG1	repress-01	0.0.0	0.0.0.0	
# ::edge	cause-01	ARG0	she	0	0.0	
# ::edge	cause-01	ARG1	and	0	0.1	
# ::edge	crack-02	ARG1	surface	0.1.2	0.1.2.0	
# ::edge	date-entity	month	5	0.1.0.0.0.0.0.1	0.1.0.0.0.0.0.1.0	
# ::edge	derive-01	ARG0	it	0.1.0.0.0.0.0	0.1.0.0.0.0	
# ::edge	derive-01	ARG1	less	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	derive-01	mod	date-entity	0.1.0.0.0.0.0	0.1.0.0.0.0.0.1	
# ::edge	reference-01	ARG0	it	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	reference-01	manner	natural	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	represent-01	ARG0	and	0.1.0	0.1	
# ::edge	represent-01	ARG1	undermine-01	0.1.0	0.1.0.0	
# ::edge	repress-01	ARG0	vital	0.0.0.0	0.0.0.0.0	
# ::edge	repress-01	ARG1	instinct	0.0.0.0	0.0.0.0.1	
# ::edge	undermine-01	ARG1	reference-01	0.1.0.0	0.1.0.0.0	
(c2 / cause-01 
      :ARG0 (s3 / she 
            :ARG0-of (b2 / bring-01 
                  :ARG1 (r3 / repress-01 
                        :ARG0 (v / vital) 
                        :ARG1 (i2 / instinct)))) 
      :ARG1 (a2 / and 
            :ARG0-of (r2 / represent-01 
                  :ARG1 (u / undermine-01 
                        :ARG1 (r / reference-01 
                              :ARG0 (i / it 
                                    :ARG0-of (d / derive-01 
                                          :ARG1 (l / less) 
                                          :mod (d2 / date-entity 
                                                :month 5))) 
                              :manner (n / natural) 
                              :poss-of (b / body)) 
                        :op-of (a / and))) 
            :op1 (s / society) 
            :op2 (c / crack-02 
                  :ARG1 (s2 / surface))))

# ::snt the most familiar and vital of these are the  fertile soils derived directly from volcanic ashes and lavas
# ::tok the most familiar and vital of these are the fertile soils derived directly from volcanic ashes and lavas
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:21.869
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt it all derives from the belief that cars like all mechanical things are part of a mans world she says
# ::tok it all derives from the belief that cars like all mechanical things are part of a mans world she says
# ::alignments 19-20|0 18-19|0.0 17-18|0.1 11-12|0.2.1 10-11|0.3 9-10|0.2.1.0 7-8|0.2 5-6|0.2.0 1-2|0.2.0.0.0 0-1|0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:22.085
# ::node	0	say-01	19-20
# ::node	0.0	she	18-19
# ::node	0.1	world	17-18
# ::node	0.2	car	7-8
# ::node	0.2.0	believe-01	5-6
# ::node	0.2.0.0	it	0-1
# ::node	0.2.0.0.0	all	1-2
# ::node	0.2.1	thing	11-12
# ::node	0.2.1.0	all	9-10
# ::node	0.3	mechanics	10-11
# ::root	0	say-01
# ::edge	believe-01	ARG0	car	0.2.0	0.2	
# ::edge	believe-01	ARG1	it	0.2.0	0.2.0.0	
# ::edge	car	poss	thing	0.2	0.2.1	
# ::edge	it	mod	all	0.2.0.0	0.2.0.0.0	
# ::edge	mechanics	op1	say-01	0.3	0	
# ::edge	say-01	ARG0	she	0	0.0	
# ::edge	say-01	ARG1	world	0	0.1	
# ::edge	say-01	ARG2	car	0	0.2	
# ::edge	thing	quant	all	0.2.1	0.2.1.0	
(s / say-01 
      :ARG0 (s2 / she) 
      :ARG1 (w / world) 
      :ARG2 (c / car 
            :ARG0-of (b / believe-01 
                  :ARG1 (i / it 
                        :mod (a2 / all))) 
            :poss (t / thing 
                  :quant (a / all))) 
      :op-of (m / mechanics))

# ::snt austindesmond  fine art linda sutton whose paintings mix ideas derived from shakespeare the greek classics and tennyson
# ::tok austindesmond fine art linda sutton whose paintings mix ideas derived from shakespeare the greek classics and tennyson
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:22.086
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt carat weight determines the size of the diamond with the word carat being derived from carob as carob seeds were traditionally used to weigh the stones
# ::tok carat weight determines the size of the diamond with the word carat being derived from carob as carob seeds were traditionally used to weigh the stones
# ::alignments 25-26|0.1.0.0.1 23-24|0.1.0.0 21-22|0.1.0 20-21|0.1.0.2 18-19|0.1.0.0.0 13-14|0.1.0.1 10-11|0.1.0.1.0 4-5|0.1 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:22.146
# ::node	0	determine-01	2-3
# ::node	0.0	weight	1-2
# ::node	0.1	size	4-5
# ::node	0.1.0	use-01	21-22
# ::node	0.1.0.0	weigh-03	23-24
# ::node	0.1.0.0.0	seed	18-19
# ::node	0.1.0.0.1	stone	25-26
# ::node	0.1.0.1	derive-01	13-14
# ::node	0.1.0.1.0	word	10-11
# ::node	0.1.0.2	tradition	20-21
# ::root	0	determine-01
# ::edge	derive-01	ARG1	word	0.1.0.1	0.1.0.1.0	
# ::edge	derive-01	concession	use-01	0.1.0.1	0.1.0	
# ::edge	determine-01	ARG0	weight	0	0.0	
# ::edge	determine-01	ARG1	size	0	0.1	
# ::edge	use-01	ARG1	size	0.1.0	0.1	
# ::edge	use-01	ARG2	weigh-03	0.1.0	0.1.0.0	
# ::edge	use-01	mod	tradition	0.1.0	0.1.0.2	
# ::edge	weigh-03	ARG0	seed	0.1.0.0	0.1.0.0.0	
# ::edge	weigh-03	ARG1	stone	0.1.0.0	0.1.0.0.1	
(d2 / determine-01 
      :ARG0 (w3 / weight) 
      :ARG1 (s3 / size 
            :ARG1-of (u / use-01 
                  :ARG2 (w / weigh-03 
                        :ARG0 (s2 / seed) 
                        :ARG1 (s / stone)) 
                  :concession-of (d / derive-01 
                        :ARG1 (w2 / word)) 
                  :mod (t / tradition))))

# ::snt strangely however  there is little sign of the sandstone in this debris which consists  mostly of boulders of granite and gneiss derived from rocks below the  sandstone
# ::tok strangely however there is little sign of the sandstone in this debris which consists mostly of boulders of granite and gneiss derived from rocks below the sandstone
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:22.147
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt sporting gentlemen of the previctorian period saw no harm in making money through playing games so long as this was a matter of gambling nor did they mind mixing with others of a lower class who derived the bulk of their income in this way provided distinctions of birth were recognized and preserved
# ::tok sporting gentlemen of the previctorian period saw no harm in making money through playing games so long as this was a matter of gambling nor did they mind mixing with others of a lower class who derived the bulk of their income in this way provided distinctions of birth were recognized and preserved
# ::alignments 51-52|0.0.2.0.0.1 50-51|0.0.2.0.0.1.0 48-49|0.0.2.0.0.1.0.1.0 46-47|0.0.2.0.0.1.0.1 45-46|0.0.2.0.0 44-45|0.0.2.0.0.0.2 43-44|0.0.2.0.0.0.2.0 41-42|0.0.2.0.0.1.0.0 36-37|0.0.2.0.0.0 34-35|0.0.2.0.0.0.0 33-34|0.0.2.0.0.0.0.0 30-31|0.0.1 27-28|0.0.2.0.1 26-27|0.0.2.0 23-24|0 21-22|0.1 18-19|0.1.0 15-16|0.0.2.0.0.0.1 14-15|0.0.3.0.0 13-14|0.0.3.0 11-12|0.0.3 8-9|0.0 7-8|0.0.4 6-7|0.0.2 5-6|0.0.2.1 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:22.826
# ::node	0	gamble-01	23-24
# ::node	0.0	harm-01	8-9
# ::node	0.0.0	sport	0-1
# ::node	0.0.1	other	30-31
# ::node	0.0.2	see-01	6-7
# ::node	0.0.2.0	they	26-27
# ::node	0.0.2.0.0	provide-01	45-46
# ::node	0.0.2.0.0.0	derive-01	36-37
# ::node	0.0.2.0.0.0.0	class	34-35
# ::node	0.0.2.0.0.0.0.0	low	33-34
# ::node	0.0.2.0.0.0.1	so	15-16
# ::node	0.0.2.0.0.0.2	way	44-45
# ::node	0.0.2.0.0.0.2.0	this	43-44
# ::node	0.0.2.0.0.1	and	51-52
# ::node	0.0.2.0.0.1.0	recognize-01	50-51
# ::node	0.0.2.0.0.1.0.0	income	41-42
# ::node	0.0.2.0.0.1.0.1	distinguish-01	46-47
# ::node	0.0.2.0.0.1.0.1.0	birth-01	48-49
# ::node	0.0.2.0.1	mind	27-28
# ::node	0.0.2.1	period	5-6
# ::node	0.0.3	money	11-12
# ::node	0.0.3.0	play-01	13-14
# ::node	0.0.3.0.0	game	14-15
# ::node	0.0.4	-	7-8
# ::node	0.1	matter	21-22
# ::node	0.1.0	this	18-19
# ::root	0	gamble-01
# ::edge	and	op1	provide-01	0.0.2.0.0.1	0.0.2.0.0	
# ::edge	and	op2	recognize-01	0.0.2.0.0.1	0.0.2.0.0.1.0	
# ::edge	class	mod	low	0.0.2.0.0.0.0	0.0.2.0.0.0.0.0	
# ::edge	derive-01	ARG0	class	0.0.2.0.0.0	0.0.2.0.0.0.0	
# ::edge	derive-01	ARG1	so	0.0.2.0.0.0	0.0.2.0.0.0.1	
# ::edge	derive-01	ARG2	way	0.0.2.0.0.0	0.0.2.0.0.0.2	
# ::edge	distinguish-01	ARG1	birth-01	0.0.2.0.0.1.0.1	0.0.2.0.0.1.0.1.0	
# ::edge	gamble-01	ARG1	harm-01	0	0.0	
# ::edge	harm-01	ARG0	sport	0.0	0.0.0	
# ::edge	harm-01	ARG1	other	0.0	0.0.1	
# ::edge	harm-01	ARG2	money	0.0	0.0.3	
# ::edge	harm-01	polarity	-	0.0	0.0.4	
# ::edge	matter	domain	this	0.1	0.1.0	
# ::edge	matter	topic	gamble-01	0.1	0	
# ::edge	money	topic	play-01	0.0.3	0.0.3.0	
# ::edge	play-01	ARG1	game	0.0.3.0	0.0.3.0.0	
# ::edge	provide-01	ARG0	they	0.0.2.0.0	0.0.2.0	
# ::edge	provide-01	ARG1	derive-01	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	recognize-01	ARG0	income	0.0.2.0.0.1.0	0.0.2.0.0.1.0.0	
# ::edge	recognize-01	ARG1	distinguish-01	0.0.2.0.0.1.0	0.0.2.0.0.1.0.1	
# ::edge	see-01	ARG0	they	0.0.2	0.0.2.0	
# ::edge	see-01	ARG1	harm-01	0.0.2	0.0	
# ::edge	see-01	time	period	0.0.2	0.0.2.1	
# ::edge	they	mod	mind	0.0.2.0	0.0.2.0.1	
# ::edge	way	mod	this	0.0.2.0.0.0.2	0.0.2.0.0.0.2.0	
(g / gamble-01 
      :ARG1 (h / harm-01 
            :ARG0 (s3 / sport) 
            :ARG1 (o / other) 
            :ARG1-of (s2 / see-01 
                  :ARG0 (t2 / they 
                        :ARG0-of (p / provide-01 
                              :ARG1 (d2 / derive-01 
                                    :ARG0 (c / class 
                                          :mod (l / low)) 
                                    :ARG1 (s / so) 
                                    :ARG2 (w / way 
                                          :mod (t / this))) 
                              :op-of (a / and 
                                    :op1 (r / recognize-01 
                                          :ARG0 (i / income) 
                                          :ARG1 (d / distinguish-01 
                                                :ARG1 (b / birth-01))))) 
                        :mod (m / mind)) 
                  :time (p3 / period)) 
            :ARG2 (m3 / money 
                  :topic (p2 / play-01 
                        :ARG1 (g2 / game))) 
            :polarity (- / -)) 
      :topic-of (m2 / matter 
            :domain (t3 / this)))

# ::snt its name which means literally winding stream  crumb being derived from the old english word for crooked rings through  english history because of the family which originated there
# ::tok its name which means literally winding stream crumb being derived from the old english word for crooked rings through english history because of the family which originated there
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:22.827
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt i think montesquieu argued that the monarchy in france had barred the nobility from commerce whereas in england the nobility were free to do business and so to plough the wealth they had originally derived from the land into enterprises in the empire richards reply was fluent
# ::tok i think montesquieu argued that the monarchy in france had barred the nobility from commerce whereas in england the nobility were free to do business and so to plough the wealth they had originally derived from the land into enterprises in the empire richards reply was fluent
# ::alignments 46-47|0.3 44-45|0.1.2 42-43|0.1.2.0 39-40|0.1.2.1 37-38|0.1.2.1.0.2 34-35|0.1.2.1.0 33-34|0.1.2.1.0.3 31-32|0.1.2.1.0.0 30-31|0.1.2.1.0.1 26-27|0.1.0 25-26|0 24-25|0.2 21-22|0.1 19-20|0.1.1 17-18|0.0.0.3.0.0.0+0.0.0.3.0.0+0.0.0.3.0 15-16|0.0.0.3 14-15|0.0.0.0 12-13|0.0.0.2 10-11|0.0.0 8-9|0.0.1.0.0+0.0.1.0+0.0.1 6-7|0.0 3-4|0.0.0.1 1-2|0.0.0.1.0 0-1|0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:24.072
# ::node	0	and	25-26
# ::node	0.0	monarchy	6-7
# ::node	0.0.0	bar-01	10-11
# ::node	0.0.0.0	commerce	14-15
# ::node	0.0.0.1	argue-01	3-4
# ::node	0.0.0.1.0	think-01	1-2
# ::node	0.0.0.1.0.0	i	0-1
# ::node	0.0.0.2	nobility	12-13
# ::node	0.0.0.3	whereas	15-16
# ::node	0.0.0.3.0	country	17-18
# ::node	0.0.0.3.0.0	name	17-18
# ::node	0.0.0.3.0.0.0	"England"	17-18
# ::node	0.0.1	country	8-9
# ::node	0.0.1.0	name	8-9
# ::node	0.0.1.0.0	"France"	8-9
# ::node	0.1	free-41	21-22
# ::node	0.1.0	so	26-27
# ::node	0.1.1	nobility	19-20
# ::node	0.1.2	reply-01	44-45
# ::node	0.1.2.0	empire	42-43
# ::node	0.1.2.1	enterprise	39-40
# ::node	0.1.2.1.0	derive-01	34-35
# ::node	0.1.2.1.0.0	they	31-32
# ::node	0.1.2.1.0.1	wealth	30-31
# ::node	0.1.2.1.0.2	land	37-38
# ::node	0.1.2.1.0.3	original	33-34
# ::node	0.2	business	24-25
# ::node	0.3	fluent	46-47
# ::root	0	and
# ::edge	and	op1	monarchy	0	0.0	
# ::edge	and	op2	free-41	0	0.1	
# ::edge	and	op3	business	0	0.2	
# ::edge	and	op4	fluent	0	0.3	
# ::edge	argue-01	ARG1	bar-01	0.0.0.1	0.0.0	
# ::edge	bar-01	ARG0	monarchy	0.0.0	0.0	
# ::edge	bar-01	ARG1	commerce	0.0.0	0.0.0.0	
# ::edge	bar-01	ARG2	nobility	0.0.0	0.0.0.2	
# ::edge	country	name	name	0.0.0.3.0	0.0.0.3.0.0	
# ::edge	country	name	name	0.0.1	0.0.1.0	
# ::edge	derive-01	ARG0	they	0.1.2.1.0	0.1.2.1.0.0	
# ::edge	derive-01	ARG1	wealth	0.1.2.1.0	0.1.2.1.0.1	
# ::edge	derive-01	ARG2	enterprise	0.1.2.1.0	0.1.2.1	
# ::edge	derive-01	location	land	0.1.2.1.0	0.1.2.1.0.2	
# ::edge	derive-01	mod	original	0.1.2.1.0	0.1.2.1.0.3	
# ::edge	enterprise	location	reply-01	0.1.2.1	0.1.2	
# ::edge	free-41	ARG0	so	0.1	0.1.0	
# ::edge	free-41	ARG1	nobility	0.1	0.1.1	
# ::edge	monarchy	location	country	0.0	0.0.1	
# ::edge	name	op1	"England"	0.0.0.3.0.0	0.0.0.3.0.0.0	
# ::edge	name	op1	"France"	0.0.1.0	0.0.1.0.0	
# ::edge	reply-01	ARG0	empire	0.1.2	0.1.2.0	
# ::edge	reply-01	ARG2	free-41	0.1.2	0.1	
# ::edge	think-01	ARG0	i	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	think-01	ARG1	argue-01	0.0.0.1.0	0.0.0.1	
# ::edge	whereas	op1	bar-01	0.0.0.3	0.0.0	
# ::edge	whereas	op2	country	0.0.0.3	0.0.0.3.0	
(a / and 
      :op1 (m / monarchy 
            :ARG0-of (b2 / bar-01 
                  :ARG1 (c2 / commerce) 
                  :ARG1-of (a2 / argue-01 
                        :ARG1-of (t2 / think-01 
                              :ARG0 (i / i))) 
                  :ARG2 (n3 / nobility) 
                  :op-of (w2 / whereas 
                        :op1 (c / country 
                              :name (n2 / name 
                                    :op1 "England")))) 
            :location (c3 / country 
                  :name (n4 / name 
                        :op1 "France"))) 
      :op2 (f2 / free-41 
            :ARG0 (s / so) 
            :ARG1 (n / nobility) 
            :ARG2-of (r / reply-01 
                  :ARG0 (e / empire) 
                  :location-of (e2 / enterprise 
                        :ARG2-of (d / derive-01 
                              :ARG0 (t / they) 
                              :ARG1 (w / wealth) 
                              :location (l / land) 
                              :mod (o / original))))) 
      :op3 (b / business) 
      :op4 (f / fluent))

# ::snt in fact it feels as if it will tour nonstop for weeks  the touring is a new addition to the 3 series derived from the fourdoor saloon but with a high opening rear door
# ::tok in fact it feels as if it will tour nonstop for weeks the touring is a new addition to the 3 series derived from the fourdoor saloon but with a high opening rear door
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:24.074
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt a person who made a promise has an agentrelative reason to keep it even though it may derive from an agentneutral reason to keep ones promises
# ::tok a person who made a promise has an agentrelative reason to keep it even though it may derive from an agentneutral reason to keep ones promises
# ::alignments 25-26|0.0.0.0.0 24-25|0.0.0.0 21-22|0.0.2 17-18|0.0 16-17|0.0.4.0+0.0.4 15-16|0.0.0 12-13|0.0.1 9-10|0.0.3 5-6|0 1-2|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:24.380
# ::node	0	promise-01	5-6
# ::node	0.0	derive-01	17-18
# ::node	0.0.0	it	15-16
# ::node	0.0.0.0	one	24-25
# ::node	0.0.0.0.0	promise-01	25-26
# ::node	0.0.0.0.0.0	person	1-2
# ::node	0.0.1	it	12-13
# ::node	0.0.2	reason	21-22
# ::node	0.0.3	reason	9-10
# ::node	0.0.4	date-entity	16-17
# ::node	0.0.4.0	5	16-17
# ::root	0	promise-01
# ::edge	date-entity	month	5	0.0.4	0.0.4.0	
# ::edge	derive-01	ARG0	it	0.0	0.0.0	
# ::edge	derive-01	ARG1	it	0.0	0.0.1	
# ::edge	derive-01	ARG2	reason	0.0	0.0.2	
# ::edge	derive-01	ARG3	reason	0.0	0.0.3	
# ::edge	derive-01	mod	date-entity	0.0	0.0.4	
# ::edge	one	poss	it	0.0.0.0	0.0.0	
# ::edge	promise-01	ARG0	person	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	promise-01	ARG1	derive-01	0	0.0	
# ::edge	promise-01	ARG1	one	0.0.0.0.0	0.0.0.0	
(p2 / promise-01 
      :ARG1 (d / derive-01 
            :ARG0 (i / it 
                  :poss-of (o / one 
                        :ARG1-of (p / promise-01 
                              :ARG0 (p3 / person)))) 
            :ARG1 (i2 / it) 
            :ARG2 (r / reason) 
            :ARG3 (r2 / reason) 
            :mod (d2 / date-entity 
                  :month 5)))

# ::snt at some deeper level of feeling and reflection she derived a subtle satisfaction from her association with the factory and a certain sense of superiority over
# ::tok at some deeper level of feeling and reflection she derived a subtle satisfaction from her association with the factory and a certain sense of superiority over
# ::alignments 24-25|0.2.1.0.0 22-23|0.2.1.0 21-22|0.2.1.0.1 19-20|0.2.1 18-19|0.2.0 15-16|0.2 12-13|0.1 9-10|0 8-9|0.0 7-8|0.3.2 6-7|0.3 5-6|0.3.1 3-4|0.3.0 2-3|0.3.0.0 1-2|0.3.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:24.480
# ::node	0	derive-01	9-10
# ::node	0.0	she	8-9
# ::node	0.1	satisfy-01	12-13
# ::node	0.2	associate-01	15-16
# ::node	0.2.0	factory	18-19
# ::node	0.2.1	and	19-20
# ::node	0.2.1.0	sense	22-23
# ::node	0.2.1.0.0	superiority	24-25
# ::node	0.2.1.0.1	certain	21-22
# ::node	0.3	and	6-7
# ::node	0.3.0	level	3-4
# ::node	0.3.0.0	deep	2-3
# ::node	0.3.0.1	some	1-2
# ::node	0.3.1	feel-01	5-6
# ::node	0.3.2	reflect-01	7-8
# ::root	0	derive-01
# ::edge	and	op1	associate-01	0.2.1	0.2	
# ::edge	and	op1	level	0.3	0.3.0	
# ::edge	and	op2	feel-01	0.3	0.3.1	
# ::edge	and	op2	sense	0.2.1	0.2.1.0	
# ::edge	and	op3	reflect-01	0.3	0.3.2	
# ::edge	and	op4	derive-01	0.3	0	
# ::edge	associate-01	ARG1	factory	0.2	0.2.0	
# ::edge	derive-01	ARG0	she	0	0.0	
# ::edge	derive-01	ARG1	satisfy-01	0	0.1	
# ::edge	derive-01	ARG2	associate-01	0	0.2	
# ::edge	level	mod	deep	0.3.0	0.3.0.0	
# ::edge	level	quant	some	0.3.0	0.3.0.1	
# ::edge	sense	mod	certain	0.2.1.0	0.2.1.0.1	
# ::edge	sense	mod	superiority	0.2.1.0	0.2.1.0.0	
(d / derive-01 
      :ARG0 (s4 / she) 
      :ARG1 (s3 / satisfy-01) 
      :ARG2 (a2 / associate-01 
            :ARG1 (f / factory) 
            :op-of (a / and 
                  :op1 (s2 / sense 
                        :mod (s / superiority) 
                        :mod (c / certain)))) 
      :op-of (a3 / and 
            :op1 (l / level 
                  :mod (d2 / deep) 
                  :quant (s5 / some)) 
            :op2 (f2 / feel-01) 
            :op3 (r / reflect-01)))

# ::snt the reference to vesuvius qualm derives from his reading of e
# ::tok the reference to vesuvius qualm derives from his reading of e
# ::alignments 8-9|0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:24.490
# ::node	0	reference-01	1-2
# ::node	0.0	read-01	8-9
# ::root	0	reference-01
(r2 / reference-01 
      :ARG1-of (r / read-01))

# ::snt but so far as the story goes the intrinsic value of the dog is not ultimate for it derives from the dogs contribution to the wellbeing of the man
# ::tok but so far as the story goes the intrinsic value of the dog is not ultimate for it derives from the dogs contribution to the wellbeing of the man
# ::alignments 28-29|0.1.0.0 22-23|0.1 21-22|0.1.0 17-18|0.1.1 15-16|0.1.2.1 12-13|0.1.2.0 9-10|0.1.2 5-6|0.0 2-3|0.2.0 1-2|0.2 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:24.674
# ::node	0	contrast-01	0-1
# ::node	0.0	story	5-6
# ::node	0.1	contribute-01	22-23
# ::node	0.1.0	dog	21-22
# ::node	0.1.0.0	man	28-29
# ::node	0.1.1	it	17-18
# ::node	0.1.2	value-01	9-10
# ::node	0.1.2.0	dog	12-13
# ::node	0.1.2.1	ultimate	15-16
# ::node	0.2	so	1-2
# ::node	0.2.0	far	2-3
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	story	0	0.0	
# ::edge	contrast-01	ARG2	contribute-01	0	0.1	
# ::edge	contrast-01	manner	so	0	0.2	
# ::edge	contribute-01	ARG0	dog	0.1	0.1.0	
# ::edge	contribute-01	ARG1	it	0.1	0.1.1	
# ::edge	contribute-01	ARG2	value-01	0.1	0.1.2	
# ::edge	dog	location	man	0.1.0	0.1.0.0	
# ::edge	far	degree	so	0.2.0	0.2	
# ::edge	ultimate	domain	value-01	0.1.2.1	0.1.2	
# ::edge	value-01	ARG1	dog	0.1.2	0.1.2.0	
(c2 / contrast-01 
      :ARG1 (s / story) 
      :ARG2 (c / contribute-01 
            :ARG0 (d / dog 
                  :location (m / man)) 
            :ARG1 (i / it) 
            :ARG2 (v / value-01 
                  :ARG1 (d2 / dog) 
                  :domain-of (u / ultimate))) 
      :manner (s2 / so 
            :degree-of (f / far)))

# ::snt regalian avoided a complete profits rout only because it derived about 5
# ::tok regalian avoided a complete profits rout only because it derived about 5
# ::alignments 11-12|0.0.1 9-10|0.0 8-9|0.0.0 7-8|0 6-7|0.0.2 4-5|0.1.0 3-4|0.1.0.0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:24.721
# ::node	0	cause-01	7-8
# ::node	0.0	derive-01	9-10
# ::node	0.0.0	it	8-9
# ::node	0.0.1	5	11-12
# ::node	0.0.2	only	6-7
# ::node	0.1	avoid-01	1-2
# ::node	0.1.0	profit-01	4-5
# ::node	0.1.0.0	complete	3-4
# ::root	0	cause-01
# ::edge	avoid-01	ARG1	profit-01	0.1	0.1.0	
# ::edge	cause-01	ARG0	derive-01	0	0.0	
# ::edge	cause-01	ARG1	avoid-01	0	0.1	
# ::edge	derive-01	ARG0	it	0.0	0.0.0	
# ::edge	derive-01	ARG1	5	0.0	0.0.1	
# ::edge	derive-01	mod	only	0.0	0.0.2	
# ::edge	profit-01	ARG0	complete	0.1.0	0.1.0.0	
(c / cause-01 
      :ARG0 (d / derive-01 
            :ARG0 (i / it) 
            :ARG1 5 
            :mod (o / only)) 
      :ARG1 (a / avoid-01 
            :ARG1 (p / profit-01 
                  :ARG0 (c2 / complete))))

# ::snt at least a small degree of satisfaction can be derived from the fact that three british players have won the right to be in the same company as john mcenroe jimmy connors and michael chang
# ::tok at least a small degree of satisfaction can be derived from the fact that three british players have won the right to be in the same company as john mcenroe jimmy connors and michael chang
# ::alignments 32-33|0 26-27|0.1 25-26|0.1.0 18-19|0.0 16-17|0.0.0.0+0.0.0 14-15|0.0.0.2 12-13|0.0.0.1.0.0.0 9-10|0.0.0.1.0.0 7-8|0.0.0.1.0.0.1 6-7|0.0.0.1 4-5|0.0.0.1.0 3-4|0.0.0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:25.116
# ::node	0	and	32-33
# ::node	0.0	win-01	18-19
# ::node	0.0.0	person	16-17
# ::node	0.0.0.0	play-01	16-17
# ::node	0.0.0.1	satisfy-01	6-7
# ::node	0.0.0.1.0	degree	4-5
# ::node	0.0.0.1.0.0	derive-01	9-10
# ::node	0.0.0.1.0.0.0	fact	12-13
# ::node	0.0.0.1.0.0.1	possible	7-8
# ::node	0.0.0.1.0.1	small	3-4
# ::node	0.0.0.2	3	14-15
# ::node	0.1	company	26-27
# ::node	0.1.0	same-41	25-26
# ::root	0	and
# ::edge	and	op1	company	0	0.1	
# ::edge	degree	mod	small	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	derive-01	ARG1	degree	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	derive-01	ARG2	fact	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	person	quant	3	0.0.0	0.0.0.2	
# ::edge	play-01	ARG0	person	0.0.0.0	0.0.0	
# ::edge	possible	domain	derive-01	0.0.0.1.0.0.1	0.0.0.1.0.0	
# ::edge	same-41	ARG1	company	0.1.0	0.1	
# ::edge	satisfy-01	ARG1	person	0.0.0.1	0.0.0	
# ::edge	satisfy-01	degree	degree	0.0.0.1	0.0.0.1.0	
# ::edge	win-01	ARG0	person	0.0	0.0.0	
# ::edge	win-01	ARG2	and	0.0	0	
(a / and 
      :ARG2-of (w / win-01 
            :ARG0 (p / person 
                  :ARG0-of (p2 / play-01) 
                  :ARG1-of (s2 / satisfy-01 
                        :degree (d2 / degree 
                              :ARG1-of (d / derive-01 
                                    :ARG2 (f / fact) 
                                    :domain-of (p3 / possible)) 
                              :mod (s3 / small))) 
                  :quant 3)) 
      :op1 (c / company 
            :ARG1-of (s / same-41)))

# ::snt our dieter derives large quantities of saturated fat from a  number of sources fullfat dairy products such as silver top  milk cheddar and other hard cheese eggs butter hard  margarine lard and blended vegetable oils meats such as  beef pork lamb meat products like sausages pies and  burgers crisps and nuts chocolate cake biscuits and icecream
# ::tok our dieter derives large quantities of saturated fat from a number of sources fullfat dairy products such as silver top milk cheddar and other hard cheese eggs butter hard margarine lard and blended vegetable oils meats such as beef pork lamb meat products like sausages pies and burgers crisps and nuts chocolate cake biscuits and icecream
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:25.117
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt forbes excludes royal families and heads of state from its list because their wealth derives more from political heritage than from economic effort
# ::tok forbes excludes royal families and heads of state from its list because their wealth derives more from political heritage than from economic effort
# ::alignments 22-23|0.0 21-22|0.0.0 18-19|0.1 17-18|0.1.0 13-14|0.2.0 11-12|0 10-11|0.2 7-8|0.3 4-5|0.2.1.1 3-4|0.2.1 2-3|0.2.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:25.201
# ::node	0	cause-01	11-12
# ::node	0.0	effort	22-23
# ::node	0.0.0	economy	21-22
# ::node	0.1	heritage	18-19
# ::node	0.1.0	politics	17-18
# ::node	0.2	list-01	10-11
# ::node	0.2.0	wealth	13-14
# ::node	0.2.1	family	3-4
# ::node	0.2.1.0	royal	2-3
# ::node	0.2.1.1	and	4-5
# ::node	0.3	state	7-8
# ::root	0	cause-01
# ::edge	and	op1	family	0.2.1.1	0.2.1	
# ::edge	cause-01	ARG0	effort	0	0.0	
# ::edge	cause-01	ARG1	heritage	0	0.1	
# ::edge	effort	mod	economy	0.0	0.0.0	
# ::edge	family	mod	royal	0.2.1	0.2.1.0	
# ::edge	heritage	mod	politics	0.1	0.1.0	
# ::edge	list-01	ARG0	wealth	0.2	0.2.0	
# ::edge	list-01	ARG1	family	0.2	0.2.1	
# ::edge	list-01	time	cause-01	0.2	0	
# ::edge	state	time	cause-01	0.3	0	
(c / cause-01 
      :ARG0 (e / effort 
            :mod (e2 / economy)) 
      :ARG1 (h / heritage 
            :mod (p / politics)) 
      :time-of (l / list-01 
            :ARG0 (w / wealth) 
            :ARG1 (f / family 
                  :mod (r / royal) 
                  :op-of (a / and))) 
      :time-of (s / state))

# ::snt appropriately such stations generally derived their inspiration from vernacular pioneering house styles in the swiss chalet the cottage orneacute
# ::tok appropriately such stations generally derived their inspiration from vernacular pioneering house styles in the swiss chalet the cottage orneacute
# ::alignments 10-11|0.0.0 6-7|0.0 4-5|0 3-4|0.1 2-3|0.0.1 1-2|0.0.1.0 0-1|0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:25.254
# ::node	0	derive-01	4-5
# ::node	0.0	inspire-01	6-7
# ::node	0.0.0	house	10-11
# ::node	0.0.1	station	2-3
# ::node	0.0.1.0	such	1-2
# ::node	0.0.1.0.0	appropriate	0-1
# ::node	0.1	general	3-4
# ::root	0	derive-01
# ::edge	derive-01	ARG1	inspire-01	0	0.0	
# ::edge	derive-01	manner	general	0	0.1	
# ::edge	inspire-01	ARG2	house	0.0	0.0.0	
# ::edge	inspire-01	poss	station	0.0	0.0.1	
# ::edge	station	mod	such	0.0.1	0.0.1.0	
# ::edge	such	degree	appropriate	0.0.1.0	0.0.1.0.0	
(d / derive-01 
      :ARG1 (i / inspire-01 
            :ARG2 (h / house) 
            :poss (s / station 
                  :mod (s2 / such 
                        :degree (a / appropriate)))) 
      :manner (g / general))

# ::snt at the age of 66 mr nyers can derive a certain satisfaction from the new era of radical change
# ::tok at the age of 66 mr nyers can derive a certain satisfaction from the new era of radical change
# ::alignments 18-19|0.0.1 17-18|0.0.1.0 15-16|0.0.3 14-15|0.0.3.0 11-12|0.0.0 10-11|0.0.0.0 8-9|0.0 7-8|0 4-5|0.0.1.1 2-3|0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:25.330
# ::node	0	possible	7-8
# ::node	0.0	derive-01	8-9
# ::node	0.0.0	satisfy-01	11-12
# ::node	0.0.0.0	certain	10-11
# ::node	0.0.1	change-01	18-19
# ::node	0.0.1.0	radical	17-18
# ::node	0.0.1.1	66	4-5
# ::node	0.0.2	age-01	2-3
# ::node	0.0.3	era	15-16
# ::node	0.0.3.0	new	14-15
# ::root	0	possible
# ::edge	66	op1	change-01	0.0.1.1	0.0.1	
# ::edge	change-01	ARG1	radical	0.0.1	0.0.1.0	
# ::edge	derive-01	ARG1	satisfy-01	0.0	0.0.0	
# ::edge	derive-01	ARG2	change-01	0.0	0.0.1	
# ::edge	derive-01	time	age-01	0.0	0.0.2	
# ::edge	derive-01	time	era	0.0	0.0.3	
# ::edge	era	mod	new	0.0.3	0.0.3.0	
# ::edge	possible	domain	derive-01	0	0.0	
# ::edge	satisfy-01	ARG2	certain	0.0.0	0.0.0.0	
(p / possible 
      :domain (d / derive-01 
            :ARG1 (s / satisfy-01 
                  :ARG2 (c2 / certain)) 
            :ARG2 (c / change-01 
                  :ARG1 (r / radical) 
                  :op-of 66) 
            :time (a / age-01) 
            :time (e / era 
                  :mod (n / new))))

# ::snt or if you prefer does a correct or sound morality have this structure  to simplify the discussion i will endorse right away the humanistic principle which claims that the explanation and justification of the goodness or badness of anything derives ultimately from its contribution actual or possible to human life and its quality
# ::tok or if you prefer does a correct or sound morality have this structure to simplify the discussion i will endorse right away the humanistic principle which claims that the explanation and justification of the goodness or badness of anything derives ultimately from its contribution actual or possible to human life and its quality
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:25.332
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt unlike locke bacon does not argue for some theoretical view that all of our knowledge ultimately derives from experience unlike him he does not go in for showing how sensory interaction with the world is necessary for and results in ideas and knowledge
# ::tok unlike locke bacon does not argue for some theoretical view that all of our knowledge ultimately derives from experience unlike him he does not go in for showing how sensory interaction with the world is necessary for and results in ideas and knowledge
# ::alignments 42-43|0.0.0.0.2 41-42|0.0.0.0.1.1 40-41|0.0.0.0.1.1.1 38-39|0.0.0.0.1 37-38|0.0.0.0 33-34|0.0.0.0.1.1.0.1 30-31|0.0.0.0.1.1.0 27-28|0 21-22|0.0 18-19|0.0.0 15-16|0.0.0.0.1.0 14-15|0.0.0.0.0.0.0 11-12|0.0.0.0.0.0.0.0 8-9|0.0.0.0.1.1.0.0 7-8|0.1 5-6|0.0.0.0.0 2-3|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:25.713
# ::node	0	show-01	27-28
# ::node	0.0	he	21-22
# ::node	0.0.0	experience-01	18-19
# ::node	0.0.0.0	and	37-38
# ::node	0.0.0.0.0	argue-01	5-6
# ::node	0.0.0.0.0.0	bacon	2-3
# ::node	0.0.0.0.0.0.0	knowledge	14-15
# ::node	0.0.0.0.0.0.0.0	all	11-12
# ::node	0.0.0.0.1	result-01	38-39
# ::node	0.0.0.0.1.0	ultimate	15-16
# ::node	0.0.0.0.1.1	and	41-42
# ::node	0.0.0.0.1.1.0	interact-01	30-31
# ::node	0.0.0.0.1.1.0.0	theory	8-9
# ::node	0.0.0.0.1.1.0.1	world	33-34
# ::node	0.0.0.0.1.1.1	idea	40-41
# ::node	0.0.0.0.2	knowledge	42-43
# ::node	0.1	some	7-8
# ::root	0	show-01
# ::edge	and	op1	experience-01	0.0.0.0	0.0.0	
# ::edge	and	op1	interact-01	0.0.0.0.1.1	0.0.0.0.1.1.0	
# ::edge	and	op2	idea	0.0.0.0.1.1	0.0.0.0.1.1.1	
# ::edge	and	op2	result-01	0.0.0.0	0.0.0.0.1	
# ::edge	and	op3	knowledge	0.0.0.0	0.0.0.0.2	
# ::edge	argue-01	ARG0	bacon	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	argue-01	ARG1	and	0.0.0.0.0	0.0.0.0	
# ::edge	experience-01	ARG1	he	0.0.0	0.0	
# ::edge	interact-01	ARG0	theory	0.0.0.0.1.1.0	0.0.0.0.1.1.0.0	
# ::edge	interact-01	location	world	0.0.0.0.1.1.0	0.0.0.0.1.1.0.1	
# ::edge	knowledge	mod	bacon	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	knowledge	quant	all	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	result-01	ARG0	ultimate	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	result-01	ARG2	and	0.0.0.0.1	0.0.0.0.1.1	
# ::edge	show-01	ARG0	he	0	0.0	
# ::edge	show-01	ARG1	some	0	0.1	
(s / show-01 
      :ARG0 (h / he 
            :ARG1-of (e / experience-01 
                  :op-of (a2 / and 
                        :ARG1-of (a4 / argue-01 
                              :ARG0 (b / bacon 
                                    :mod-of (k2 / knowledge 
                                          :quant (a3 / all)))) 
                        :op1 (r / result-01 
                              :ARG0 (u / ultimate) 
                              :ARG2 (a / and 
                                    :op1 (i2 / interact-01 
                                          :ARG0 (t / theory) 
                                          :location (w / world)) 
                                    :op2 (i / idea))) 
                        :op2 (k / knowledge)))) 
      :ARG1 (s2 / some))

# ::snt the plot of the games is a jumble of nonsense apparently derived from the subtolkien world of dungeons and dragons which was also the source for the way in which the characters controlled by the player can gain in cunning and strength as well as armour and possessions as the game continues
# ::tok the plot of the games is a jumble of nonsense apparently derived from the subtolkien world of dungeons and dragons which was also the source for the way in which the characters controlled by the player can gain in cunning and strength as well as armour and possessions as the game continues
# ::alignments 51-52|0.0.1.0.0.2.2 50-51|0.0.1.0.0.2.2.0 47-48|0.0.1.0.0.2.1 46-47|0.0.1.0.0.2 45-46|0.0.1.0.0.2.0 43-44|0.0.1.0.0.2.0.0 41-42|0.0.0.1 40-41|0.0.0 37-38|0.0 36-37|0 32-33|0.0.1.0 31-32|0.0.1 27-28|0.0.1.0.0.0 24-25|0.0.1.0.0 22-23|0.0.1.0.0.1 18-19|0.0.0.0 15-16|0.0.0.0.1 11-12|0.0.0.0.1.0 10-11|0.0.0.0.1.0.1 9-10|0.0.0.0.1.0.0 4-5|0.0.0.0.0.0 1-2|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:26.304
# ::node	0	possible	36-37
# ::node	0.0	gain-02	37-38
# ::node	0.0.0	and	40-41
# ::node	0.0.0.0	and	18-19
# ::node	0.0.0.0.0	plot-01	1-2
# ::node	0.0.0.0.0.0	game	4-5
# ::node	0.0.0.0.1	world	15-16
# ::node	0.0.0.0.1.0	derive-01	11-12
# ::node	0.0.0.0.1.0.0	nonsense	9-10
# ::node	0.0.0.0.1.0.1	apparent	10-11
# ::node	0.0.0.1	strength	41-42
# ::node	0.0.1	character	31-32
# ::node	0.0.1.0	control-01	32-33
# ::node	0.0.1.0.0	source	24-25
# ::node	0.0.1.0.0.0	way	27-28
# ::node	0.0.1.0.0.1	also	22-23
# ::node	0.0.1.0.0.2	and	46-47
# ::node	0.0.1.0.0.2.0	armour	45-46
# ::node	0.0.1.0.0.2.0.0	well	43-44
# ::node	0.0.1.0.0.2.1	possession	47-48
# ::node	0.0.1.0.0.2.2	continue-01	51-52
# ::node	0.0.1.0.0.2.2.0	game	50-51
# ::root	0	possible
# ::edge	and	op1	and	0.0.0	0.0.0.0	
# ::edge	and	op1	source	0.0.1.0.0.2	0.0.1.0.0	
# ::edge	and	op2	armour	0.0.1.0.0.2	0.0.1.0.0.2.0	
# ::edge	and	op2	strength	0.0.0	0.0.0.1	
# ::edge	and	op3	possession	0.0.1.0.0.2	0.0.1.0.0.2.1	
# ::edge	and	op4	continue-01	0.0.1.0.0.2	0.0.1.0.0.2.2	
# ::edge	armour	mod	well	0.0.1.0.0.2.0	0.0.1.0.0.2.0.0	
# ::edge	continue-01	ARG0	game	0.0.1.0.0.2.2	0.0.1.0.0.2.2.0	
# ::edge	control-01	ARG0	source	0.0.1.0	0.0.1.0.0	
# ::edge	control-01	ARG1	character	0.0.1.0	0.0.1	
# ::edge	derive-01	ARG1	nonsense	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	derive-01	ARG2	world	0.0.0.0.1.0	0.0.0.0.1	
# ::edge	derive-01	manner	apparent	0.0.0.0.1.0	0.0.0.0.1.0.1	
# ::edge	gain-02	ARG0	and	0.0	0.0.0	
# ::edge	gain-02	ARG1	character	0.0	0.0.1	
# ::edge	plot-01	ARG0	game	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	plot-01	ARG1	and	0.0.0.0.0	0.0.0.0	
# ::edge	possible	domain	gain-02	0	0.0	
# ::edge	source	location	way	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	source	mod	also	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	world	location	and	0.0.0.0.1	0.0.0.0	
(p2 / possible 
      :domain (g2 / gain-02 
            :ARG0 (a3 / and 
                  :op1 (a5 / and 
                        :ARG1-of (p3 / plot-01 
                              :ARG0 (g3 / game)) 
                        :location-of (w3 / world 
                              :ARG2-of (d / derive-01 
                                    :ARG1 (n / nonsense) 
                                    :manner (a6 / apparent)))) 
                  :op2 (s / strength)) 
            :ARG1 (c3 / character 
                  :ARG1-of (c2 / control-01 
                        :ARG0 (s2 / source 
                              :location (w2 / way) 
                              :mod (a4 / also) 
                              :op-of (a / and 
                                    :op1 (a2 / armour 
                                          :mod (w / well)) 
                                    :op2 (p / possession) 
                                    :op3 (c / continue-01 
                                          :ARG0 (g / game))))))))

# ::snt 5m last year derived solely from income on investments
# ::tok 5m last year derived solely from income on investments
# ::alignments 8-9|0.1.0 6-7|0.1 4-5|0.2 3-4|0 2-3|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:26.319
# ::node	0	derive-01	3-4
# ::node	0.0	year	2-3
# ::node	0.0.0	last	1-2
# ::node	0.1	income	6-7
# ::node	0.1.0	invest-01	8-9
# ::node	0.2	sole	4-5
# ::root	0	derive-01
# ::edge	derive-01	ARG0	year	0	0.0	
# ::edge	derive-01	ARG2	income	0	0.1	
# ::edge	derive-01	manner	sole	0	0.2	
# ::edge	income	topic	invest-01	0.1	0.1.0	
# ::edge	year	mod	last	0.0	0.0.0	
(d / derive-01 
      :ARG0 (y / year 
            :mod (l / last)) 
      :ARG2 (i2 / income 
            :topic (i / invest-01)) 
      :manner (s / sole))

# ::snt one deriving from hobbes and locke regards the consent given as an expression of rational enlightened selfinterest
# ::tok one deriving from hobbes and locke regards the consent given as an expression of rational enlightened selfinterest
# ::alignments 15-16|0.0.1.0 14-15|0.0.1.0.0 12-13|0.0.0 9-10|0.0 8-9|0.0.1 4-5|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:26.356
# ::node	0	and	4-5
# ::node	0.0	give-01	9-10
# ::node	0.0.0	express-01	12-13
# ::node	0.0.1	consent-01	8-9
# ::node	0.0.1.0	enlighten-01	15-16
# ::node	0.0.1.0.0	rational	14-15
# ::root	0	and
# ::edge	and	op1	give-01	0	0.0	
# ::edge	enlighten-01	ARG1	consent-01	0.0.1.0	0.0.1	
# ::edge	enlighten-01	ARG4	rational	0.0.1.0	0.0.1.0.0	
# ::edge	give-01	ARG0	express-01	0.0	0.0.0	
# ::edge	give-01	ARG1	consent-01	0.0	0.0.1	
(a / and 
      :op1 (g / give-01 
            :ARG0 (e2 / express-01) 
            :ARG1 (c / consent-01 
                  :ARG1-of (e / enlighten-01 
                        :ARG4 (r / rational)))))

# ::snt most of the needed information can be derived from raw data in the organizations database additional information might also be obtained from public sources such as a proprietary econometric database
# ::tok most of the needed information can be derived from raw data in the organizations database additional information might also be obtained from public sources such as a proprietary econometric database
# ::alignments 29-30|0.0 27-28|0 24-25|0.0.0 23-24|0.0.0.0 22-23|0.0.0.0.1 20-21|0.0.0.0.0 18-19|0.0.0.0.0.1 16-17|0.0.0.0.0.0 15-16|0.0.0.0.0.0.0 14-15|0.0.0.0.0.2 13-14|0.0.0.0.0.2.1 10-11|0.0.0.0.0.2.0.0.0 9-10|0.0.0.0.0.2.0.0.0.0 7-8|0.0.0.0.0.2.0.0 5-6|0.0.0.0.0.2.0 4-5|0.0.0.0.0.2.0.0.1 3-4|0.0.0.0.0.2.0.0.1.0 0-1|0.0.0.0.0.2.0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:26.634
# ::node	0	proprietor	27-28
# ::node	0.0	database	29-30
# ::node	0.0.0	such	24-25
# ::node	0.0.0.0	source	23-24
# ::node	0.0.0.0.0	obtain-01	20-21
# ::node	0.0.0.0.0.0	information	16-17
# ::node	0.0.0.0.0.0.0	additional	15-16
# ::node	0.0.0.0.0.1	also	18-19
# ::node	0.0.0.0.0.2	database	14-15
# ::node	0.0.0.0.0.2.0	possible	5-6
# ::node	0.0.0.0.0.2.0.0	derive-01	7-8
# ::node	0.0.0.0.0.2.0.0.0	data	10-11
# ::node	0.0.0.0.0.2.0.0.0.0	raw	9-10
# ::node	0.0.0.0.0.2.0.0.1	information	4-5
# ::node	0.0.0.0.0.2.0.0.1.0	need-01	3-4
# ::node	0.0.0.0.0.2.0.0.1.1	most	0-1
# ::node	0.0.0.0.0.2.1	organization	13-14
# ::node	0.0.0.0.1	public	22-23
# ::root	0	proprietor
(p / proprietor 
      :mod-of (d / database 
            :quant (s / such 
                  :mod (s2 / source 
                        :ARG0-of (o / obtain-01 
                              :ARG1 (i / information 
                                    :mod (a2 / additional)) 
                              :mod (a / also) 
                              :mod-of (d2 / database 
                                    :location-of (p3 / possible 
                                          :domain (d4 / derive-01 
                                                :ARG0 (d3 / data 
                                                      :mod (r / raw)) 
                                                :ARG1 (i2 / information 
                                                      :ARG1-of (n / need-01) 
                                                      :quant (m / most)))) 
                                    :mod (o2 / organization))) 
                        :mod (p2 / public)))))

# ::snt the value of a given piece of information such as a report equals the increase in payoff that the organization derives from use of the information
# ::tok the value of a given piece of information such as a report equals the increase in payoff that the organization derives from use of the information
# ::alignments 25-26|0.2.0.1 22-23|0.2.0 19-20|0.2.0.0 14-15|0.2 12-13|0 11-12|0.0 8-9|0.1.0.1.0 7-8|0.1.0.1 5-6|0.1.0 4-5|0.1.0.0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:26.811
# ::node	0	equal-01	12-13
# ::node	0.0	report	11-12
# ::node	0.1	value-01	1-2
# ::node	0.1.0	piece	5-6
# ::node	0.1.0.0	give-01	4-5
# ::node	0.1.0.1	information	7-8
# ::node	0.1.0.1.0	such	8-9
# ::node	0.2	increase-01	14-15
# ::node	0.2.0	use-01	22-23
# ::node	0.2.0.0	organization	19-20
# ::node	0.2.0.1	information	25-26
# ::root	0	equal-01
# ::edge	equal-01	ARG0	report	0	0.0	
# ::edge	equal-01	ARG1	value-01	0	0.1	
# ::edge	equal-01	ARG2	increase-01	0	0.2	
# ::edge	give-01	ARG1	piece	0.1.0.0	0.1.0	
# ::edge	piece	mod	information	0.1.0	0.1.0.1	
# ::edge	such	mod	information	0.1.0.1.0	0.1.0.1	
# ::edge	use-01	ARG0	organization	0.2.0	0.2.0.0	
# ::edge	use-01	ARG1	information	0.2.0	0.2.0.1	
# ::edge	use-01	ARG2	increase-01	0.2.0	0.2	
# ::edge	value-01	ARG1	piece	0.1	0.1.0	
(e / equal-01 
      :ARG0 (r / report) 
      :ARG1 (v / value-01 
            :ARG1 (p / piece 
                  :ARG1-of (g / give-01) 
                  :mod (i3 / information 
                        :mod-of (s / such)))) 
      :ARG2 (i2 / increase-01 
            :ARG2-of (u / use-01 
                  :ARG0 (o / organization) 
                  :ARG1 (i / information))))

# ::snt the following problem solving technique is derived from the practice of work study and management consultancy
# ::tok the following problem solving technique is derived from the practice of work study and management consultancy
# ::alignments 14-15|0.1.0.1 13-14|0.1.0 12-13|0.1.0.0 9-10|0.1 6-7|0 4-5|0.0.0.0 3-4|0.0.0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:26.910
# ::node	0	derive-01	6-7
# ::node	0.0	problem	2-3
# ::node	0.0.0	solve-01	3-4
# ::node	0.0.0.0	technique	4-5
# ::node	0.1	practice-01	9-10
# ::node	0.1.0	and	13-14
# ::node	0.1.0.0	study-01	12-13
# ::node	0.1.0.1	manage-01	14-15
# ::root	0	derive-01
# ::edge	and	op1	study-01	0.1.0	0.1.0.0	
# ::edge	and	op2	manage-01	0.1.0	0.1.0.1	
# ::edge	derive-01	ARG1	problem	0	0.0	
# ::edge	derive-01	ARG2	practice-01	0	0.1	
# ::edge	practice-01	ARG1	and	0.1	0.1.0	
# ::edge	solve-01	ARG0	problem	0.0.0	0.0	
# ::edge	solve-01	ARG1	technique	0.0.0	0.0.0.0	
(d / derive-01 
      :ARG1 (p2 / problem 
            :ARG0-of (s2 / solve-01 
                  :ARG1 (t / technique))) 
      :ARG2 (p / practice-01 
            :ARG1 (a / and 
                  :op1 (s / study-01) 
                  :op2 (m / manage-01))))

# ::snt the argument for the entrenchment of liberal constitutional rights derives therefore from several sources
# ::tok the argument for the entrenchment of liberal constitutional rights derives therefore from several sources
# ::alignments 13-14|0.1 12-13|0.1.0 8-9|0.0 7-8|0.0.1 6-7|0.0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:26.930
# ::node	0	argue-01	1-2
# ::node	0.0	right	8-9
# ::node	0.0.0	liberal	6-7
# ::node	0.0.1	constitution	7-8
# ::node	0.1	source	13-14
# ::node	0.1.0	several	12-13
# ::root	0	argue-01
# ::edge	argue-01	ARG0	right	0	0.0	
# ::edge	argue-01	ARG1	source	0	0.1	
# ::edge	right	mod	constitution	0.0	0.0.1	
# ::edge	right	mod	liberal	0.0	0.0.0	
# ::edge	source	quant	several	0.1	0.1.0	
(a / argue-01 
      :ARG0 (r / right 
            :mod (l / liberal) 
            :mod (c / constitution)) 
      :ARG1 (s / source 
            :quant (s2 / several)))

# ::snt the studios are set back from the road and are shaded by the olive trees from which they derive their name
# ::tok the studios are set back from the road and are shaded by the olive trees from which they derive their name
# ::alignments 18-19|0.1 17-18|0.1.0 14-15|0.1.1 8-9|0 7-8|0.0 4-5|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:26.981
# ::node	0	and	8-9
# ::node	0.0	road	7-8
# ::node	0.0.0	back	4-5
# ::node	0.1	derive-01	18-19
# ::node	0.1.0	they	17-18
# ::node	0.1.1	tree	14-15
# ::root	0	and
# ::edge	and	op1	road	0	0.0	
# ::edge	and	op2	derive-01	0	0.1	
# ::edge	derive-01	ARG0	they	0.1	0.1.0	
# ::edge	derive-01	ARG1	tree	0.1	0.1.1	
# ::edge	road	manner	back	0.0	0.0.0	
(a / and 
      :op1 (r / road 
            :manner (b / back)) 
      :op2 (d / derive-01 
            :ARG0 (t / they) 
            :ARG1 (t2 / tree)))

# ::snt lloyd george derived malicious amusement from the way in which the spokesmen of these two democratic countries supposedly unspotted with european wickedness defied wilson on oldfashioned imperialist lines
# ::tok lloyd george derived malicious amusement from the way in which the spokesmen of these two democratic countries supposedly unspotted with european wickedness defied wilson on oldfashioned imperialist lines
# ::alignments 27-28|0.1.0.0.0.0 26-27|0.1.0.0.0 22-23|0.1.0 20-21|0.0.0.0+0.0.0+0.0 17-18|0 16-17|0.1 15-16|0.1.1 14-15|0.1.2 7-8|0.1.0.0.1.0 4-5|0.1.0.0 3-4|0.1.0.0.2 2-3|0.1.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:27.227
# ::node	0	suppose-01	17-18
# ::node	0.0	continent	20-21
# ::node	0.0.0	name	20-21
# ::node	0.0.0.0	"Europe"	20-21
# ::node	0.1	country	16-17
# ::node	0.1.0	defy-01	22-23
# ::node	0.1.0.0	amuse-01	4-5
# ::node	0.1.0.0.0	imperialism	26-27
# ::node	0.1.0.0.0.0	line	27-28
# ::node	0.1.0.0.1	derive-01	2-3
# ::node	0.1.0.0.1.0	way	7-8
# ::node	0.1.0.0.2	malicious	3-4
# ::node	0.1.1	democracy	15-16
# ::node	0.1.2	2	14-15
# ::root	0	suppose-01
# ::edge	amuse-01	ARG0	imperialism	0.1.0.0	0.1.0.0.0	
# ::edge	amuse-01	mod	malicious	0.1.0.0	0.1.0.0.2	
# ::edge	continent	name	name	0.0	0.0.0	
# ::edge	country	mod	democracy	0.1	0.1.1	
# ::edge	country	quant	2	0.1	0.1.2	
# ::edge	defy-01	ARG0	country	0.1.0	0.1	
# ::edge	defy-01	ARG1	amuse-01	0.1.0	0.1.0.0	
# ::edge	derive-01	ARG1	amuse-01	0.1.0.0.1	0.1.0.0	
# ::edge	derive-01	manner	way	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	line	mod	imperialism	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	name	op1	"Europe"	0.0.0	0.0.0.0	
# ::edge	suppose-01	ARG1	continent	0	0.0	
# ::edge	suppose-01	ARG2	country	0	0.1	
(s / suppose-01 
      :ARG1 (c / continent 
            :name (n / name 
                  :op1 "Europe")) 
      :ARG2 (c2 / country 
            :ARG0-of (d / defy-01 
                  :ARG1 (a / amuse-01 
                        :ARG0 (i / imperialism 
                              :mod-of (l / line)) 
                        :ARG1-of (d3 / derive-01 
                              :manner (w / way)) 
                        :mod (m / malicious))) 
            :mod (d2 / democracy) 
            :quant 2))

# ::snt the name parabola meaning equal derives from the work of appollonius circa 250 bc
# ::tok the name parabola meaning equal derives from the work of appollonius circa 250 bc
# ::alignments 12-13|0.0 11-12|0.1.0 4-5|0 3-4|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:27.247
# ::node	0	equal-01	4-5
# ::node	0.0	250	12-13
# ::node	0.1	mean-01	3-4
# ::node	0.1.0	circa	11-12
# ::root	0	equal-01
# ::edge	equal-01	ARG0	250	0	0.0	
# ::edge	mean-01	ARG0	circa	0.1	0.1.0	
# ::edge	mean-01	ARG1	equal-01	0.1	0	
(e / equal-01 
      :ARG0 250 
      :ARG1-of (m / mean-01 
            :ARG0 (c / circa)))

# ::snt recently the work of the delegacy has broadened applying the expertise derived from education to industry and commerce
# ::tok recently the work of the delegacy has broadened applying the expertise derived from education to industry and commerce
# ::alignments 17-18|0.3 16-17|0 15-16|0.2 13-14|0.0 11-12|0.1 10-11|0.1.0 8-9|0.1.0.0 7-8|0.1.0.0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:27.359
# ::node	0	and	16-17
# ::node	0.0	educate-01	13-14
# ::node	0.0.0	recent	0-1
# ::node	0.1	derive-01	11-12
# ::node	0.1.0	expertise	10-11
# ::node	0.1.0.0	apply-01	8-9
# ::node	0.1.0.0.0	broaden-01	7-8
# ::node	0.2	industry	15-16
# ::node	0.3	commerce	17-18
# ::root	0	and
# ::edge	and	op1	industry	0	0.2	
# ::edge	and	op2	commerce	0	0.3	
# ::edge	apply-01	ARG1	expertise	0.1.0.0	0.1.0	
# ::edge	broaden-01	ARG1	apply-01	0.1.0.0.0	0.1.0.0	
# ::edge	derive-01	ARG1	expertise	0.1	0.1.0	
# ::edge	derive-01	ARG2	and	0.1	0	
# ::edge	educate-01	ARG1	recent	0.0	0.0.0	
# ::edge	educate-01	ARG2	and	0.0	0	
(a / and 
      :ARG2-of (e / educate-01 
            :ARG1 (r / recent)) 
      :ARG2-of (d / derive-01 
            :ARG1 (e2 / expertise 
                  :ARG1-of (a2 / apply-01 
                        :ARG1-of (b / broaden-01)))) 
      :op1 (i / industry) 
      :op2 (c / commerce))

# ::snt it derives from a detailed survey of 3000 viewers throughout the united kingdom
# ::tok it derives from a detailed survey of 3000 viewers throughout the united kingdom
# ::alignments 11-13|0.0.0.0.0.0+0.0.0.0.0.1+0.0.0.0.0+0.0.0.0 9-10|0.0.0.0.1 8-9|0.0.0+0.0 7-8|0.3.0+0.3 5-6|0 4-5|0.2 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:27.394
# ::node	0	survey-01	5-6
# ::node	0.0	person	8-9
# ::node	0.0.0	view-01	8-9
# ::node	0.0.0.0	country	11-13
# ::node	0.0.0.0.0	name	11-13
# ::node	0.0.0.0.0.0	"kingdom"	11-13
# ::node	0.0.0.0.0.1	"united"	11-13
# ::node	0.0.0.0.1	throughout	9-10
# ::node	0.1	it	0-1
# ::node	0.2	detail-01	4-5
# ::node	0.3	date-entity	7-8
# ::node	0.3.0	3000	7-8
# ::root	0	survey-01
# ::edge	country	name	name	0.0.0.0	0.0.0.0.0	
# ::edge	date-entity	year	3000	0.3	0.3.0	
# ::edge	detail-01	ARG1	survey-01	0.2	0	
# ::edge	name	op1	"kingdom"	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	name	op2	"united"	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	survey-01	ARG0	person	0	0.0	
# ::edge	survey-01	ARG1	it	0	0.1	
# ::edge	survey-01	time	date-entity	0	0.3	
# ::edge	throughout	op1	country	0.0.0.0.1	0.0.0.0	
# ::edge	view-01	ARG0	person	0.0.0	0.0	
# ::edge	view-01	ARG1	country	0.0.0	0.0.0.0	
(s / survey-01 
      :ARG0 (p / person 
            :ARG0-of (v / view-01 
                  :ARG1 (c / country 
                        :name (n / name 
                              :op1 "kingdom" 
                              :op2 "united") 
                        :op-of (t / throughout)))) 
      :ARG1 (i / it) 
      :ARG1-of (d2 / detail-01) 
      :time (d / date-entity 
            :year 3000))

# ::snt are both when understood as core rights rather than as derived from another more fundamental right motivated by a common core a concern for liberty understood in a unitary coherent way
# ::tok are both when understood as core rights rather than as derived from another more fundamental right motivated by a common core a concern for liberty understood in a unitary coherent way
# ::alignments 30-31|0.1 29-30|0.1.0 25-26|0 24-25|0.0 22-23|0.0.0 20-21|0.1.1.0 19-20|0.1.1.0.0 16-17|0.1.1 14-15|0.0.0.3 12-13|0.1.0.0 10-11|0.0.0.2 6-7|0.0.0.0 5-6|0.0.0.2.0 3-4|0.0.0.1 1-2|0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:27.634
# ::node	0	understand-01	25-26
# ::node	0.0	liberty	24-25
# ::node	0.0.0	concern-01	22-23
# ::node	0.0.0.0	right	6-7
# ::node	0.0.0.1	understand-01	3-4
# ::node	0.0.0.1.0	both	1-2
# ::node	0.0.0.2	derive-01	10-11
# ::node	0.0.0.2.0	core	5-6
# ::node	0.0.0.3	fundamental	14-15
# ::node	0.1	way	30-31
# ::node	0.1.0	cohere-01	29-30
# ::node	0.1.0.0	another	12-13
# ::node	0.1.1	motivate-02	16-17
# ::node	0.1.1.0	core	20-21
# ::node	0.1.1.0.0	common	19-20
# ::root	0	understand-01
# ::edge	cohere-01	ARG0	another	0.1.0	0.1.0.0	
# ::edge	cohere-01	ARG1	way	0.1.0	0.1	
# ::edge	concern-01	ARG0	right	0.0.0	0.0.0.0	
# ::edge	concern-01	ARG1	liberty	0.0.0	0.0	
# ::edge	concern-01	mod	fundamental	0.0.0	0.0.0.3	
# ::edge	core	mod	common	0.1.1.0	0.1.1.0.0	
# ::edge	derive-01	ARG1	concern-01	0.0.0.2	0.0.0	
# ::edge	derive-01	prep-instead	core	0.0.0.2	0.0.0.2.0	
# ::edge	motivate-02	ARG0	core	0.1.1	0.1.1.0	
# ::edge	motivate-02	ARG1	way	0.1.1	0.1	
# ::edge	understand-01	ARG0	both	0.0.0.1	0.0.0.1.0	
# ::edge	understand-01	ARG1	concern-01	0.0.0.1	0.0.0	
# ::edge	understand-01	ARG1	liberty	0	0.0	
# ::edge	understand-01	ARG2	way	0	0.1	
(u / understand-01 
      :ARG1 (l / liberty 
            :ARG1-of (c2 / concern-01 
                  :ARG0 (r / right) 
                  :ARG1-of (u2 / understand-01 
                        :ARG0 (b / both)) 
                  :ARG1-of (d / derive-01 
                        :prep-instead (c5 / core)) 
                  :mod (f / fundamental))) 
      :ARG2 (w / way 
            :ARG1-of (c / cohere-01 
                  :ARG0 (a / another)) 
            :ARG1-of (m / motivate-02 
                  :ARG0 (c3 / core 
                        :mod (c4 / common)))))

# ::snt it is thus understandable that the name clary was taken to be derived from cleareye but in fact it derives from the name by which roman herbalists knew this plant dash
# ::tok it is thus understandable that the name clary was taken to be derived from cleareye but in fact it derives from the name by which roman herbalists knew this plant dash
# ::alignments 29-30|0.2 28-29|0.0.1.0.0 27-28|0.1 18-19|0.0.0 17-18|0.1.0 15-16|0 12-13|0.0 3-4|0.0.1.0 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:27.810
# ::node	0	contrast-01	15-16
# ::node	0.0	derive-01	12-13
# ::node	0.0.0	it	18-19
# ::node	0.0.1	it	0-1
# ::node	0.0.1.0	understand-01	3-4
# ::node	0.0.1.0.0	this	28-29
# ::node	0.1	know-01	27-28
# ::node	0.1.0	fact	17-18
# ::node	0.2	plant	29-30
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	derive-01	0	0.0	
# ::edge	contrast-01	ARG2	know-01	0	0.1	
# ::edge	derive-01	ARG0	it	0.0	0.0.0	
# ::edge	derive-01	ARG1	it	0.0	0.0.1	
# ::edge	know-01	ARG1	fact	0.1	0.1.0	
# ::edge	plant	domain	contrast-01	0.2	0	
# ::edge	understand-01	ARG0	this	0.0.1.0	0.0.1.0.0	
# ::edge	understand-01	ARG1	it	0.0.1.0	0.0.1	
(c / contrast-01 
      :ARG1 (d / derive-01 
            :ARG0 (i / it) 
            :ARG1 (i2 / it 
                  :ARG1-of (u / understand-01 
                        :ARG0 (t / this)))) 
      :ARG2 (k / know-01 
            :ARG1 (f / fact)) 
      :domain-of (p / plant))

# ::snt the right to personal liberty is the core right from which the other derives, similarly my right to make the previous statement is a derivative of the core right of free speech and my right to spoil the cigarette i am holding at the moment derives from my ownership in it and so on
# ::tok the right to personal liberty is the core right from which the other derives , similarly my right to make the previous statement is a derivative of the core right of free speech and my right to spoil the cigarette i am holding at the moment derives from my ownership in it and so on
# ::alignments 53-54|0.1.0.1.1.0 52-53|0.1 51-52|0.1.1.0 49-50|0.1.0.1.0.0.0.1.0 45-46|0.1.0.1.0.0.0.1 42-43|0.1.0.1.0.0.0 40-41|0.1.0.1.0.0.0.0 39-40|0.1.0.1.0.0 37-38|0.1.0.1.0 33-34|0.1.0 32-33|0.1.0.1 31-32|0.1.0.1.1 28-29|0.1.1 25-26|0.1.0.0 22-23|0 21-22|0.2 12-13|0.0 7-8|0.1.0.1.1.1 4-5|0.1.0.0.0 3-4|0.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:28.361
# ::node	0	state-01	22-23
# ::node	0.0	other	12-13
# ::node	0.1	and	52-53
# ::node	0.1.0	and	33-34
# ::node	0.1.0.0	derive-01	25-26
# ::node	0.1.0.0.0	liberty	4-5
# ::node	0.1.0.0.0.0	personal	3-4
# ::node	0.1.0.1	speech	32-33
# ::node	0.1.0.1.0	spoil-01	37-38
# ::node	0.1.0.1.0.0	cigarette	39-40
# ::node	0.1.0.1.0.0.0	hold-01	42-43
# ::node	0.1.0.1.0.0.0.0	i	40-41
# ::node	0.1.0.1.0.0.0.1	moment	45-46
# ::node	0.1.0.1.0.0.0.1.0	ownership	49-50
# ::node	0.1.0.1.1	free-41	31-32
# ::node	0.1.0.1.1.0	so	53-54
# ::node	0.1.0.1.1.1	core	7-8
# ::node	0.1.1	core	28-29
# ::node	0.1.1.0	it	51-52
# ::node	0.2	previous	21-22
# ::root	0	state-01
# ::edge	and	op1	derive-01	0.1.0	0.1.0.0	
# ::edge	and	op2	speech	0.1.0	0.1.0.1	
# ::edge	and	op3	and	0.1.0	0.1	
# ::edge	core	op1	free-41	0.1.0.1.1.1	0.1.0.1.1	
# ::edge	core	poss	and	0.1.1	0.1	
# ::edge	core	poss	it	0.1.1	0.1.1.0	
# ::edge	derive-01	ARG0	liberty	0.1.0.0	0.1.0.0.0	
# ::edge	free-41	ARG1	speech	0.1.0.1.1	0.1.0.1	
# ::edge	hold-01	ARG0	i	0.1.0.1.0.0.0	0.1.0.1.0.0.0.0	
# ::edge	hold-01	ARG1	cigarette	0.1.0.1.0.0.0	0.1.0.1.0.0	
# ::edge	hold-01	time	moment	0.1.0.1.0.0.0	0.1.0.1.0.0.0.1	
# ::edge	liberty	mod	personal	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	ownership	poss	moment	0.1.0.1.0.0.0.1.0	0.1.0.1.0.0.0.1	
# ::edge	so	op1	free-41	0.1.0.1.1.0	0.1.0.1.1	
# ::edge	spoil-01	ARG0	speech	0.1.0.1.0	0.1.0.1	
# ::edge	spoil-01	ARG1	cigarette	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	state-01	ARG0	other	0	0.0	
# ::edge	state-01	ARG1	and	0	0.1	
# ::edge	state-01	time	previous	0	0.2	
(s4 / state-01 
      :ARG0 (o2 / other) 
      :ARG1 (a / and 
            :op-of (a2 / and 
                  :op1 (d / derive-01 
                        :ARG0 (l / liberty 
                              :mod (p2 / personal))) 
                  :op2 (s3 / speech 
                        :ARG0-of (s2 / spoil-01 
                              :ARG1 (c / cigarette 
                                    :ARG1-of (h / hold-01 
                                          :ARG0 (i2 / i) 
                                          :time (m / moment 
                                                :poss-of (o / ownership))))) 
                        :ARG1-of (f / free-41 
                              :op-of (s / so) 
                              :op-of (c3 / core)))) 
            :poss-of (c2 / core 
                  :poss (i / it))) 
      :time (p / previous))

# ::snt unique strength and wisdom of the commonwealth have derived from the rich diversity of races peoples and cultures which have united to serve ideals which outweigh our individual differences ellip
# ::tok unique strength and wisdom of the commonwealth have derived from the rich diversity of races peoples and cultures which have united to serve ideals which outweigh our individual differences ellip
# ::alignments 27-28|0.0.0.1.0.1.0.2 25-26|0 23-24|0.0 22-23|0.0.0 20-21|0.0.0.1 17-18|0.0.0.0 16-17|0.0.0.1.0 15-16|0.0.0.1.0.1.1 14-15|0.0.0.1.0.1.1.0 12-13|0.0.0.1.0.0 11-12|0.0.0.1.0.0.0 8-9|0.0.0.1.0.1 3-4|0.0.0.1.0.1.0.1 2-3|0.0.0.1.0.1.0 1-2|0.0.0.1.0.1.0.0 0-1|0.0.0.1.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:28.858
# ::node	0	outweigh-01	25-26
# ::node	0.0	ideal	23-24
# ::node	0.0.0	serve-01	22-23
# ::node	0.0.0.0	culture	17-18
# ::node	0.0.0.1	unite-01	20-21
# ::node	0.0.0.1.0	and	16-17
# ::node	0.0.0.1.0.0	diversity	12-13
# ::node	0.0.0.1.0.0.0	rich	11-12
# ::node	0.0.0.1.0.1	derive-01	8-9
# ::node	0.0.0.1.0.1.0	and	2-3
# ::node	0.0.0.1.0.1.0.0	strength	1-2
# ::node	0.0.0.1.0.1.0.0.0	unique	0-1
# ::node	0.0.0.1.0.1.0.1	wisdom	3-4
# ::node	0.0.0.1.0.1.0.2	individual	27-28
# ::node	0.0.0.1.0.1.1	people	15-16
# ::node	0.0.0.1.0.1.1.0	race	14-15
# ::root	0	outweigh-01
# ::edge	and	consist	diversity	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	and	op1	derive-01	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	and	op1	strength	0.0.0.1.0.1.0	0.0.0.1.0.1.0.0	
# ::edge	and	op2	wisdom	0.0.0.1.0.1.0	0.0.0.1.0.1.0.1	
# ::edge	and	op3	individual	0.0.0.1.0.1.0	0.0.0.1.0.1.0.2	
# ::edge	derive-01	ARG0	and	0.0.0.1.0.1	0.0.0.1.0.1.0	
# ::edge	derive-01	ARG2	people	0.0.0.1.0.1	0.0.0.1.0.1.1	
# ::edge	diversity	mod	rich	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	outweigh-01	ARG1	ideal	0	0.0	
# ::edge	people	mod	race	0.0.0.1.0.1.1	0.0.0.1.0.1.1.0	
# ::edge	serve-01	ARG0	culture	0.0.0	0.0.0.0	
# ::edge	serve-01	ARG1	ideal	0.0.0	0.0	
# ::edge	strength	mod	unique	0.0.0.1.0.1.0.0	0.0.0.1.0.1.0.0.0	
# ::edge	unite-01	ARG0	and	0.0.0.1	0.0.0.1.0	
# ::edge	unite-01	ARG1	serve-01	0.0.0.1	0.0.0	
(o / outweigh-01 
      :ARG1 (i2 / ideal 
            :ARG1-of (s / serve-01 
                  :ARG0 (c / culture) 
                  :ARG1-of (u / unite-01 
                        :ARG0 (a / and 
                              :consist (d / diversity 
                                    :mod (r2 / rich)) 
                              :op1 (d2 / derive-01 
                                    :ARG0 (a2 / and 
                                          :op1 (s2 / strength 
                                                :mod (u2 / unique)) 
                                          :op2 (w / wisdom) 
                                          :op3 (i / individual)) 
                                    :ARG2 (p / people 
                                          :mod (r / race))))))))

# ::snt the new imperial penal code of 1858 was also derived in the main from french law
# ::tok the new imperial penal code of 1858 was also derived in the main from french law
# ::alignments 15-16|0.1 14-15|0.1.0.0.0+0.1.0.0+0.1.0 12-13|0.2 9-10|0 8-9|0.3 6-7|0.0.1.0+0.0.1 4-5|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:28.932
# ::node	0	derive-01	9-10
# ::node	0.0	code	4-5
# ::node	0.0.0	new	1-2
# ::node	0.0.1	date-entity	6-7
# ::node	0.0.1.0	1858	6-7
# ::node	0.1	law	15-16
# ::node	0.1.0	country	14-15
# ::node	0.1.0.0	name	14-15
# ::node	0.1.0.0.0	"France"	14-15
# ::node	0.2	main	12-13
# ::node	0.3	also	8-9
# ::root	0	derive-01
# ::edge	code	mod	new	0.0	0.0.0	
# ::edge	code	time	date-entity	0.0	0.0.1	
# ::edge	country	name	name	0.1.0	0.1.0.0	
# ::edge	date-entity	year	1858	0.0.1	0.0.1.0	
# ::edge	derive-01	ARG1	code	0	0.0	
# ::edge	derive-01	ARG2	law	0	0.1	
# ::edge	derive-01	location	main	0	0.2	
# ::edge	derive-01	mod	also	0	0.3	
# ::edge	law	mod	country	0.1	0.1.0	
# ::edge	name	op1	"France"	0.1.0.0	0.1.0.0.0	
(d / derive-01 
      :ARG1 (c2 / code 
            :mod (n2 / new) 
            :time (d2 / date-entity 
                  :year 1858)) 
      :ARG2 (l / law 
            :mod (c / country 
                  :name (n / name 
                        :op1 "France"))) 
      :location (m / main) 
      :mod (a / also))

# ::snt often the request is based on the enjoyment the human is deriving from the pet
# ::tok often the request is based on the enjoyment the human is deriving from the pet
# ::alignments 14-15|0 9-10|0.0.0 7-8|0.0 4-5|0.0.1 2-3|0.0.1.0 0-1|0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:28.978
# ::node	0	pet	14-15
# ::node	0.0	enjoy-01	7-8
# ::node	0.0.0	human	9-10
# ::node	0.0.1	base-01	4-5
# ::node	0.0.1.0	request-01	2-3
# ::node	0.0.1.0.0	often	0-1
# ::root	0	pet
(p / pet 
      :ARG1-of (e / enjoy-01 
            :ARG0 (h / human) 
            :ARG1-of (b / base-01 
                  :ARG0 (r / request-01 
                        :mod (o / often)))))

# ::snt she is not keen to  eliminate all these sources of sugar because she derives such  pleasure from them
# ::tok she is not keen to eliminate all these sources of sugar because she derives such pleasure from them
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:28.979
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt whatever sound sense there is in all three considerations derives from the thought that the morally good not only manages his life morally but would have done so even if circumstances were less favourable or presented more temptations or pressures for evil
# ::tok whatever sound sense there is in all three considerations derives from the thought that the morally good not only manages his life morally but would have done so even if circumstances were less favourable or presented more temptations or pressures for evil
# ::alignments 41-42|0.2.0.1.0 39-40|0.2.0.2.0 38-39|0.2.0.2 37-38|0.2.0.1 35-36|0.2.0 34-35|0.2 32-33|0.2.0.0 30-31|0.1.0 27-28|0.1.1.0 23-24|0 22-23|0.1.2.1 21-22|0.1.2.1.0 18-19|0.2.0.2.0.0 16-17|0.1.2 15-16|0.1.2.0 12-13|0.1.1 8-9|0.1 7-8|0.1.3 6-7|0.1.4 2-3|0.0 1-2|0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:29.260
# ::node	0	contrast-01	23-24
# ::node	0.0	sense	2-3
# ::node	0.0.0	sound	1-2
# ::node	0.0.0.0	whatever	0-1
# ::node	0.1	consider-01	8-9
# ::node	0.1.0	circumstance	30-31
# ::node	0.1.1	think-01	12-13
# ::node	0.1.1.0	so	27-28
# ::node	0.1.2	good	16-17
# ::node	0.1.2.0	moral	15-16
# ::node	0.1.2.1	moral	22-23
# ::node	0.1.2.1.0	life	21-22
# ::node	0.1.3	3	7-8
# ::node	0.1.4	all	6-7
# ::node	0.2	or	34-35
# ::node	0.2.0	present-01	35-36
# ::node	0.2.0.0	less	32-33
# ::node	0.2.0.1	tempt-01	37-38
# ::node	0.2.0.1.0	evil	41-42
# ::node	0.2.0.2	or	38-39
# ::node	0.2.0.2.0	pressure-01	39-40
# ::node	0.2.0.2.0.0	only	18-19
# ::root	0	contrast-01
# ::edge	consider-01	ARG0	circumstance	0.1	0.1.0	
# ::edge	consider-01	ARG1	good	0.1	0.1.2	
# ::edge	consider-01	quant	3	0.1	0.1.3	
# ::edge	consider-01	quant	all	0.1	0.1.4	
# ::edge	contrast-01	ARG1	sense	0	0.0	
# ::edge	contrast-01	ARG2	consider-01	0	0.1	
# ::edge	good	mod	moral	0.1.2	0.1.2.0	
# ::edge	moral	mod	life	0.1.2.1	0.1.2.1.0	
# ::edge	moral	poss	good	0.1.2.1	0.1.2	
# ::edge	or	op1	contrast-01	0.2	0	
# ::edge	or	op1	present-01	0.2.0.2	0.2.0	
# ::edge	or	op2	present-01	0.2	0.2.0	
# ::edge	or	op2	pressure-01	0.2.0.2	0.2.0.2.0	
# ::edge	present-01	ARG0	less	0.2.0	0.2.0.0	
# ::edge	present-01	ARG1	tempt-01	0.2.0	0.2.0.1	
# ::edge	pressure-01	ARG1	only	0.2.0.2.0	0.2.0.2.0.0	
# ::edge	sense	mod	sound	0.0	0.0.0	
# ::edge	sound	mod	whatever	0.0.0	0.0.0.0	
# ::edge	tempt-01	ARG1	evil	0.2.0.1	0.2.0.1.0	
# ::edge	think-01	ARG0	consider-01	0.1.1	0.1	
# ::edge	think-01	ARG1	so	0.1.1	0.1.1.0	
(c2 / contrast-01 
      :ARG1 (s2 / sense 
            :mod (s3 / sound 
                  :mod (w / whatever))) 
      :ARG2 (c3 / consider-01 
            :ARG0 (c / circumstance) 
            :ARG0-of (t2 / think-01 
                  :ARG1 (s / so)) 
            :ARG1 (g / good 
                  :mod (m2 / moral) 
                  :poss-of (m / moral 
                        :mod (l2 / life))) 
            :quant 3 
            :quant (a / all)) 
      :op-of (o2 / or 
            :op1 (p2 / present-01 
                  :ARG0 (l / less) 
                  :ARG1 (t / tempt-01 
                        :ARG1 (e / evil)) 
                  :op-of (o / or 
                        :op1 (p / pressure-01 
                              :ARG1 (o3 / only))))))

# ::snt since then local sourcing of components has improved markedly as has the proportion of vauxhallopels uk sales which derive from its uk car plants as opposed to those on the continent
# ::tok since then local sourcing of components has improved markedly as has the proportion of vauxhallopels uk sales which derive from its uk car plants as opposed to those on the continent
# ::alignments 30-31|0.3.1.0 25-26|0.1.0 23-24|0.1 22-23|0.1.1 18-19|0 12-13|0.0 7-8|0.3.1 5-6|0.3.0 3-4|0.3 2-3|0.2 1-2|0.3.1.2 0-1|0.3.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:29.436
# ::node	0	derive-01	18-19
# ::node	0.0	proportion	12-13
# ::node	0.1	plant	23-24
# ::node	0.1.0	oppose-01	25-26
# ::node	0.1.1	car	22-23
# ::node	0.2	local	2-3
# ::node	0.3	source-01	3-4
# ::node	0.3.0	component	5-6
# ::node	0.3.1	improve-01	7-8
# ::node	0.3.1.0	continent	30-31
# ::node	0.3.1.1	since	0-1
# ::node	0.3.1.2	then	1-2
# ::root	0	derive-01
# ::edge	derive-01	ARG1	proportion	0	0.0	
# ::edge	derive-01	ARG2	plant	0	0.1	
# ::edge	derive-01	time	local	0	0.2	
# ::edge	derive-01	time	source-01	0	0.3	
# ::edge	improve-01	ARG0	continent	0.3.1	0.3.1.0	
# ::edge	improve-01	ARG1	source-01	0.3.1	0.3	
# ::edge	improve-01	time	then	0.3.1	0.3.1.2	
# ::edge	oppose-01	ARG0	plant	0.1.0	0.1	
# ::edge	plant	mod	car	0.1	0.1.1	
# ::edge	since	op1	improve-01	0.3.1.1	0.3.1	
# ::edge	source-01	ARG1	component	0.3	0.3.0	
(d / derive-01 
      :ARG1 (p2 / proportion) 
      :ARG2 (p / plant 
            :ARG0-of (o / oppose-01) 
            :mod (c2 / car)) 
      :time (l / local) 
      :time (s / source-01 
            :ARG1 (c3 / component) 
            :ARG1-of (i / improve-01 
                  :ARG0 (c / continent) 
                  :op-of (s2 / since) 
                  :time (t / then))))

# ::snt seen now these early british films still have a feeling of freshness and spontaneity that derives from the natural performances of nonactors and a loose approach to framing which allows interesting material to get in at the edge of the picture
# ::tok seen now these early british films still have a feeling of freshness and spontaneity that derives from the natural performances of nonactors and a loose approach to framing which allows interesting material to get in at the edge of the picture
# ::alignments 40-41|0.0.0 31-32|0.2.0.0.0 30-31|0.2.0.0.0.0 29-30|0.2.0.0 27-28|0.2.0 25-26|0.2 24-25|0.2.1 22-23|0 19-20|0.0 18-19|0.0.1 13-14|0.1.1.0 12-13|0.1.1 9-10|0.1 6-7|0.2.0.1 5-6|0.1.0 3-4|0.2.1.0 1-2|0.1.0.0.0 0-1|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:29.686
# ::node	0	and	22-23
# ::node	0.0	perform-01	19-20
# ::node	0.0.0	picture	40-41
# ::node	0.0.1	natural	18-19
# ::node	0.1	feel-01	9-10
# ::node	0.1.0	film	5-6
# ::node	0.1.0.0	see-01	0-1
# ::node	0.1.0.0.0	now	1-2
# ::node	0.1.1	and	12-13
# ::node	0.1.1.0	spontaneity	13-14
# ::node	0.2	approach-02	25-26
# ::node	0.2.0	frame-06	27-28
# ::node	0.2.0.0	allow-01	29-30
# ::node	0.2.0.0.0	material	31-32
# ::node	0.2.0.0.0.0	interesting	30-31
# ::node	0.2.0.1	still	6-7
# ::node	0.2.1	loose-01	24-25
# ::node	0.2.1.0	early	3-4
# ::root	0	and
# ::edge	allow-01	ARG0	frame-06	0.2.0.0	0.2.0	
# ::edge	allow-01	ARG1	material	0.2.0.0	0.2.0.0.0	
# ::edge	and	op1	feel-01	0	0.1	
# ::edge	and	op1	feel-01	0.1.1	0.1	
# ::edge	and	op2	approach-02	0	0.2	
# ::edge	and	op2	spontaneity	0.1.1	0.1.1.0	
# ::edge	approach-02	ARG1	frame-06	0.2	0.2.0	
# ::edge	feel-01	ARG1	film	0.1	0.1.0	
# ::edge	frame-06	ARG1	still	0.2.0	0.2.0.1	
# ::edge	loose-01	ARG0	early	0.2.1	0.2.1.0	
# ::edge	loose-01	ARG1	approach-02	0.2.1	0.2	
# ::edge	material	mod	interesting	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	perform-01	ARG0	and	0.0	0	
# ::edge	perform-01	ARG1	picture	0.0	0.0.0	
# ::edge	perform-01	mod	natural	0.0	0.0.1	
# ::edge	see-01	ARG1	film	0.1.0.0	0.1.0	
# ::edge	see-01	time	now	0.1.0.0	0.1.0.0.0	
(a3 / and 
      :ARG0-of (p2 / perform-01 
            :ARG1 (p / picture) 
            :mod (n / natural)) 
      :op1 (f2 / feel-01 
            :ARG1 (f3 / film 
                  :ARG1-of (s3 / see-01 
                        :time (n2 / now))) 
            :op-of (a4 / and 
                  :op1 (s / spontaneity))) 
      :op2 (a2 / approach-02 
            :ARG1 (f / frame-06 
                  :ARG0-of (a / allow-01 
                        :ARG1 (m / material 
                              :mod (i / interesting))) 
                  :ARG1 (s2 / still)) 
            :ARG1-of (l / loose-01 
                  :ARG0 (e / early))))

# ::snt it comes as no surprise to discover that bill bozzones script for full moon in blue water provinces 15 is derived from an earlier unproduced play
# ::tok it comes as no surprise to discover that bill bozzones script for full moon in blue water provinces 15 is derived from an earlier unproduced play
# ::alignments 25-26|0.0.1.0.0.1 23-24|0.0.1.0.0.1.1 20-21|0.0.1.0.0 18-19|0.0.1.0.0.2 17-18|0.0.1.0.0.0 16-17|0.0.1.0.0.0.2 15-16|0.0.1.0.0.0.1 13-14|0.0.1.0.0.0.0 12-13|0.0.1.0.0.0.0.0 10-11|0.0.1.0 8-9|0 6-7|0.0.1 4-5|0.0 3-4|0.0.1.0.0.1.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:29.943
# ::node	0	bill	8-9
# ::node	0.0	surprise-01	4-5
# ::node	0.0.0	it	0-1
# ::node	0.0.1	discover-01	6-7
# ::node	0.0.1.0	script	10-11
# ::node	0.0.1.0.0	derive-01	20-21
# ::node	0.0.1.0.0.0	province	17-18
# ::node	0.0.1.0.0.0.0	moon	13-14
# ::node	0.0.1.0.0.0.0.0	full	12-13
# ::node	0.0.1.0.0.0.1	blue	15-16
# ::node	0.0.1.0.0.0.2	water	16-17
# ::node	0.0.1.0.0.1	play-01	25-26
# ::node	0.0.1.0.0.1.0	-	3-4
# ::node	0.0.1.0.0.1.1	early	23-24
# ::node	0.0.1.0.0.2	15	18-19
# ::root	0	bill
(b2 / bill 
      :ARG2-of (s2 / surprise-01 
            :ARG0 (i / it) 
            :ARG1 (d2 / discover-01 
                  :ARG1 (s / script 
                        :ARG0-of (d / derive-01 
                              :ARG1 (p2 / province 
                                    :location-of (m / moon 
                                          :mod (f / full)) 
                                    :mod (b / blue) 
                                    :part (w / water)) 
                              :ARG2 (p / play-01 
                                    :ARG0 (- / -) 
                                    :time (e / early)) 
                              :mod-of 15)))))

# ::snt however as with the vitamins  you will find that a sound diet with plenty of protein from  various sources good food derived from cereals fruits and  vegetables should supply adequate minerals with no need  to take supplements
# ::tok however as with the vitamins you will find that a sound diet with plenty of protein from various sources good food derived from cereals fruits and vegetables should supply adequate minerals with no need to take supplements
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:29.943
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt in later life he replied to a young girl who had sent him a manuscript keep your manuscript for your sons and daughters in order that they might derive consolation from it dash
# ::tok in later life he replied to a young girl who had sent him a manuscript keep your manuscript for your sons and daughters in order that they might derive consolation from it dash
# ::alignments 31-32|0.0.1 29-30|0.0.1.0 28-29|0.0 26-27|0.0.0 22-23|0.0.0.0.0.0.0.0+0.0.0.0.0.0.0 21-22|0 20-21|0.0.0.0.0.0.1.0+0.0.0.0.0.0.1 11-12|0.0.0.0.0.1.0 8-9|0.0.0.0.0.1 7-8|0.0.0.0.0.1.1 4-5|0.0.0.0.0 3-4|0.0.0.0.0.0 2-3|0.0.0.0 1-2|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:30.569
# ::node	0	and	21-22
# ::node	0.0	derive-01	28-29
# ::node	0.0.0	they	26-27
# ::node	0.0.0.0	life	2-3
# ::node	0.0.0.0.0	reply-01	4-5
# ::node	0.0.0.0.0.0	he	3-4
# ::node	0.0.0.0.0.0.0	have-rel-role-91	22-23
# ::node	0.0.0.0.0.0.0.0	daughter	22-23
# ::node	0.0.0.0.0.0.1	have-rel-role-91	20-21
# ::node	0.0.0.0.0.0.1.0	son	20-21
# ::node	0.0.0.0.0.1	girl	8-9
# ::node	0.0.0.0.0.1.0	send-01	11-12
# ::node	0.0.0.0.0.1.1	young	7-8
# ::node	0.0.0.0.1	late	1-2
# ::node	0.0.1	it	31-32
# ::node	0.0.1.0	console-01	29-30
# ::root	0	and
(a / and 
      :ARG1-of (d / derive-01 
            :ARG0 (t / they 
                  :poss-of (l / life 
                        :ARG1-of (r / reply-01 
                              :ARG0 (h3 / he 
                                    :ARG1-of (h / have-rel-role-91 
                                          :ARG2 (d2 / daughter)) 
                                    :ARG1-of (h2 / have-rel-role-91 
                                          :ARG2 (s / son))) 
                              :ARG2 (g / girl 
                                    :ARG1-of (s2 / send-01) 
                                    :mod (y / young))) 
                        :mod (l2 / late))) 
            :ARG2 (i / it 
                  :topic-of (c / console-01))))

# ::snt for however doughty supporters of the plo the insiders might be only outsiders would incontestably be seen to derive their authority from mr arafat himself
# ::tok for however doughty supporters of the plo the insiders might be only outsiders would incontestably be seen to derive their authority from mr arafat himself
# ::alignments 20-21|0.1.1 18-19|0.1 16-17|0 12-13|0.1.0 11-12|0.1.0.0 8-9|0.0.0.0 3-4|0.0.0+0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:30.662
# ::node	0	see-01	16-17
# ::node	0.0	person	3-4
# ::node	0.0.0	support-01	3-4
# ::node	0.0.0.0	insider	8-9
# ::node	0.1	derive-01	18-19
# ::node	0.1.0	outsider	12-13
# ::node	0.1.0.0	only	11-12
# ::node	0.1.1	authority	20-21
# ::root	0	see-01
# ::edge	derive-01	ARG0	outsider	0.1	0.1.0	
# ::edge	derive-01	ARG1	authority	0.1	0.1.1	
# ::edge	outsider	mod	only	0.1.0	0.1.0.0	
# ::edge	see-01	ARG0	person	0	0.0	
# ::edge	see-01	ARG1	derive-01	0	0.1	
# ::edge	support-01	ARG0	person	0.0.0	0.0	
# ::edge	support-01	ARG1	insider	0.0.0	0.0.0.0	
(s / see-01 
      :ARG0 (p / person 
            :ARG0-of (s2 / support-01 
                  :ARG1 (i / insider))) 
      :ARG1 (d / derive-01 
            :ARG0 (o / outsider 
                  :mod (o2 / only)) 
            :ARG1 (a / authority)))

# ::snt historically the most farreaching is that of the seven words themselves derived from the liturgy for good friday and established in choral repertory by schutzs great setting
# ::tok historically the most farreaching is that of the seven words themselves derived from the liturgy for good friday and established in choral repertory by schutzs great setting
# ::alignments 26-27|0.1.1 25-26|0.1.1.2 19-20|0.1 18-19|0 17-18|0.0.1 16-17|0.0.1.0 11-12|0.0 9-10|0.0.0 8-9|0.1.0 2-3|0.1.1.1 0-1|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:30.761
# ::node	0	and	18-19
# ::node	0.0	derive-01	11-12
# ::node	0.0.0	word	9-10
# ::node	0.0.1	friday	17-18
# ::node	0.0.1.0	good	16-17
# ::node	0.1	establish-01	19-20
# ::node	0.1.0	7	8-9
# ::node	0.1.1	set-02	26-27
# ::node	0.1.1.0	historical	0-1
# ::node	0.1.1.1	most	2-3
# ::node	0.1.1.2	great	25-26
# ::root	0	and
# ::edge	and	op1	establish-01	0	0.1	
# ::edge	derive-01	ARG1	word	0.0	0.0.0	
# ::edge	derive-01	ARG2	and	0.0	0	
# ::edge	derive-01	source	friday	0.0	0.0.1	
# ::edge	establish-01	ARG1	7	0.1	0.1.0	
# ::edge	establish-01	ARG2	set-02	0.1	0.1.1	
# ::edge	friday	mod	good	0.0.1	0.0.1.0	
# ::edge	set-02	ARG0	historical	0.1.1	0.1.1.0	
# ::edge	set-02	ARG1	most	0.1.1	0.1.1.1	
# ::edge	set-02	mod	great	0.1.1	0.1.1.2	
(a / and 
      :ARG2-of (d / derive-01 
            :ARG1 (w / word) 
            :source (f / friday 
                  :mod (g2 / good))) 
      :op1 (e / establish-01 
            :ARG1 7 
            :ARG2 (s / set-02 
                  :ARG0 (h / historical) 
                  :ARG1 (m / most) 
                  :mod (g / great))))

# ::snt what you dont see are the bottles of whisky between the musicians feet or the ashtrays round the back  the original style of shills work derives partly from the unusual road he took to becoming a director
# ::tok what you dont see are the bottles of whisky between the musicians feet or the ashtrays round the back the original style of shills work derives partly from the unusual road he took to becoming a director
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:30.762
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt just to reassure you that a sensible eating plan will ensure  that adequate nutrients are derived from the food here is a  brief outline of the topic
# ::tok just to reassure you that a sensible eating plan will ensure that adequate nutrients are derived from the food here is a brief outline of the topic
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:30.764
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt i prefer to discuss it in relation to the ideal of personal autonomy because positive freedom derives its value from its contribution to personal autonomy
# ::tok i prefer to discuss it in relation to the ideal of personal autonomy because positive freedom derives its value from its contribution to personal autonomy
# ::alignments 24-25|0.2.0.1.0.0 23-24|0.2.0.1.0.0.0 21-22|0.2.0.1.0 18-19|0.2.0.1 15-16|0.2.0 14-15|0.2.0.2 13-14|0.2 12-13|0.2.0.0 11-12|0.2.0.0.0 9-10|0.1.1.0 6-7|0.1.1 4-5|0.1.0 3-4|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:30.880
# ::node	0	prefer-01	1-2
# ::node	0.0	i	0-1
# ::node	0.1	discuss-01	3-4
# ::node	0.1.0	it	4-5
# ::node	0.1.1	relate-01	6-7
# ::node	0.1.1.0	ideal	9-10
# ::node	0.2	cause-01	13-14
# ::node	0.2.0	free-41	15-16
# ::node	0.2.0.0	autonomy	12-13
# ::node	0.2.0.0.0	personal	11-12
# ::node	0.2.0.1	value-01	18-19
# ::node	0.2.0.1.0	contribute-01	21-22
# ::node	0.2.0.1.0.0	autonomy	24-25
# ::node	0.2.0.1.0.0.0	personal	23-24
# ::node	0.2.0.2	positive	14-15
# ::root	0	prefer-01
# ::edge	autonomy	mod	personal	0.2.0.0	0.2.0.0.0	
# ::edge	autonomy	mod	personal	0.2.0.1.0.0	0.2.0.1.0.0.0	
# ::edge	cause-01	ARG0	free-41	0.2	0.2.0	
# ::edge	cause-01	ARG1	prefer-01	0.2	0	
# ::edge	contribute-01	ARG1	autonomy	0.2.0.1.0	0.2.0.1.0.0	
# ::edge	discuss-01	ARG1	it	0.1	0.1.0	
# ::edge	discuss-01	ARG2	relate-01	0.1	0.1.1	
# ::edge	free-41	ARG1	autonomy	0.2.0	0.2.0.0	
# ::edge	free-41	manner	positive	0.2.0	0.2.0.2	
# ::edge	prefer-01	ARG0	i	0	0.0	
# ::edge	prefer-01	ARG1	discuss-01	0	0.1	
# ::edge	relate-01	ARG1	ideal	0.1.1	0.1.1.0	
# ::edge	value-01	ARG1	free-41	0.2.0.1	0.2.0	
# ::edge	value-01	ARG2	contribute-01	0.2.0.1	0.2.0.1.0	
(p4 / prefer-01 
      :ARG0 (i3 / i) 
      :ARG1 (d / discuss-01 
            :ARG1 (i2 / it) 
            :ARG2 (r / relate-01 
                  :ARG1 (i / ideal))) 
      :ARG1-of (c2 / cause-01 
            :ARG0 (f / free-41 
                  :ARG1 (a2 / autonomy 
                        :mod (p3 / personal)) 
                  :ARG1-of (v / value-01 
                        :ARG2 (c / contribute-01 
                              :ARG1 (a / autonomy 
                                    :mod (p / personal)))) 
                  :manner (p2 / positive))))

# ::snt generale des eaux derives 35 per cent of its turnover from building and civil engineering
# ::tok generale des eaux derives 35 per cent of its turnover from building and civil engineering
# ::alignments 14-15|0.0.0.1.0 13-14|0.0.0.1.0.0 12-13|0.0.0.1 11-12|0.0.0 9-10|0 6-7|0.0.1+0.0 4-5|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:30.908
# ::node	0	turnover	9-10
# ::node	0.0	monetary-quantity	6-7
# ::node	0.0.0	build-01	11-12
# ::node	0.0.0.0	35	4-5
# ::node	0.0.0.1	and	12-13
# ::node	0.0.0.1.0	engineer-01	14-15
# ::node	0.0.0.1.0.0	civil	13-14
# ::node	0.0.1	cent	6-7
# ::root	0	turnover
# ::edge	and	op1	build-01	0.0.0.1	0.0.0	
# ::edge	and	op2	engineer-01	0.0.0.1	0.0.0.1.0	
# ::edge	build-01	ARG0	monetary-quantity	0.0.0	0.0	
# ::edge	build-01	ARG1	35	0.0.0	0.0.0.0	
# ::edge	engineer-01	mod	civil	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	monetary-quantity	unit	cent	0.0	0.0.1	
# ::edge	turnover	part	monetary-quantity	0	0.0	
(t / turnover 
      :part (m / monetary-quantity 
            :ARG0-of (b / build-01 
                  :ARG1 35 
                  :op-of (a / and 
                        :op1 (e / engineer-01 
                              :mod (c / civil)))) 
            :unit (c2 / cent)))

# ::snt in passing i have referred to the possibility that governments have duties which do not derive from the rights of individual human beings
# ::tok in passing i have referred to the possibility that governments have duties which do not derive from the rights of individual human beings
# ::alignments 22-23|0.2.1.0.1 21-22|0.2.1.0.1.0 20-21|0.2.1.0.0.0 18-19|0.2.1.0.0 15-16|0.2.1.0 11-12|0.2.1 9-10|0.2.0+0.2 7-8|0.1 4-5|0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:30.967
# ::node	0	refer-01	4-5
# ::node	0.0	i	2-3
# ::node	0.1	possible	7-8
# ::node	0.2	government-organization	9-10
# ::node	0.2.0	govern-01	9-10
# ::node	0.2.1	duty	11-12
# ::node	0.2.1.0	derive-01	15-16
# ::node	0.2.1.0.0	right	18-19
# ::node	0.2.1.0.0.0	individual	20-21
# ::node	0.2.1.0.1	being	22-23
# ::node	0.2.1.0.1.0	human	21-22
# ::root	0	refer-01
# ::edge	being	mod	human	0.2.1.0.1	0.2.1.0.1.0	
# ::edge	derive-01	ARG0	right	0.2.1.0	0.2.1.0.0	
# ::edge	derive-01	ARG1	duty	0.2.1.0	0.2.1	
# ::edge	derive-01	ARG2	being	0.2.1.0	0.2.1.0.1	
# ::edge	duty	poss	government-organization	0.2.1	0.2	
# ::edge	govern-01	ARG0	government-organization	0.2.0	0.2	
# ::edge	refer-01	ARG0	i	0	0.0	
# ::edge	refer-01	ARG1	possible	0	0.1	
# ::edge	refer-01	ARG2	government-organization	0	0.2	
# ::edge	right	poss	individual	0.2.1.0.0	0.2.1.0.0.0	
(r2 / refer-01 
      :ARG0 (i2 / i) 
      :ARG1 (p / possible) 
      :ARG2 (g / government-organization 
            :ARG0-of (g2 / govern-01) 
            :poss-of (d2 / duty 
                  :ARG1-of (d / derive-01 
                        :ARG0 (r / right 
                              :poss (i / individual)) 
                        :ARG2 (b / being 
                              :mod (h / human))))))

# ::snt it is true that once a useful coordinating convention is established every person has reason to adhere to it a reason which is independent of the existence of the authority a reason deriving entirely from the existence of the useful convention
# ::tok it is true that once a useful coordinating convention is established every person has reason to adhere to it a reason which is independent of the existence of the authority a reason deriving entirely from the existence of the useful convention
# ::alignments 40-41|0 39-40|0.1 36-37|0.0 33-34|0.0.0.0.1.0.0 31-32|0.0.0.0.1.0.1.1 29-30|0.0.0.0.1.0.1.0 26-27|0.0.0.0.1.0.1 23-24|0.0.0.0.1.0.2+0.0.0.0.1.0 20-21|0.0.0.0.1 18-19|0.0.0.0.2 16-17|0.0.0.0 14-15|0.0.0 12-13|0.0.0.0.0 11-12|0.0.0.0.0.1 10-11|0.0.0.0.0.0 8-9|0.0.0.0.0.0.0 7-8|0.0.0.0.0.0.0.0 6-7|0.0.0.0.0.0.0.1 4-5|0.0.0.0.0.0.2 2-3|0.0.0.0.0.0.1 0-1|0.0.0.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:31.769
# ::node	0	convention	40-41
# ::node	0.0	exist-01	36-37
# ::node	0.0.0	reason	14-15
# ::node	0.0.0.0	adhere-02	16-17
# ::node	0.0.0.0.0	person	12-13
# ::node	0.0.0.0.0.0	establish-01	10-11
# ::node	0.0.0.0.0.0.0	convention	8-9
# ::node	0.0.0.0.0.0.0.0	coordinate-01	7-8
# ::node	0.0.0.0.0.0.0.1	useful	6-7
# ::node	0.0.0.0.0.0.1	true	2-3
# ::node	0.0.0.0.0.0.1.0	it	0-1
# ::node	0.0.0.0.0.0.2	once	4-5
# ::node	0.0.0.0.0.1	every	11-12
# ::node	0.0.0.0.1	reason	20-21
# ::node	0.0.0.0.1.0	depend-01	23-24
# ::node	0.0.0.0.1.0.0	entire	33-34
# ::node	0.0.0.0.1.0.1	exist-01	26-27
# ::node	0.0.0.0.1.0.1.0	authority	29-30
# ::node	0.0.0.0.1.0.1.1	reason	31-32
# ::node	0.0.0.0.1.0.2	-	23-24
# ::node	0.0.0.0.2	it	18-19
# ::node	0.1	useful	39-40
# ::root	0	convention
# ::edge	adhere-02	ARG0	person	0.0.0.0	0.0.0.0.0	
# ::edge	adhere-02	ARG1	reason	0.0.0.0	0.0.0.0.1	
# ::edge	adhere-02	ARG2	it	0.0.0.0	0.0.0.0.2	
# ::edge	convention	mod	coordinate-01	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	convention	mod	useful	0	0.1	
# ::edge	convention	mod	useful	0.0.0.0.0.0.0	0.0.0.0.0.0.0.1	
# ::edge	depend-01	ARG0	entire	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	depend-01	ARG1	reason	0.0.0.0.1.0	0.0.0.0.1	
# ::edge	depend-01	ARG2	exist-01	0.0.0.0.1.0	0.0.0.0.1.0.1	
# ::edge	depend-01	polarity	-	0.0.0.0.1.0	0.0.0.0.1.0.2	
# ::edge	establish-01	ARG0	person	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	establish-01	ARG1	convention	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	exist-01	ARG0	reason	0.0	0.0.0	
# ::edge	exist-01	ARG1	authority	0.0.0.0.1.0.1	0.0.0.0.1.0.1.0	
# ::edge	exist-01	ARG1	convention	0.0	0	
# ::edge	exist-01	time	reason	0.0.0.0.1.0.1	0.0.0.0.1.0.1.1	
# ::edge	once	op1	establish-01	0.0.0.0.0.0.2	0.0.0.0.0.0	
# ::edge	person	mod	every	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	reason	purpose	adhere-02	0.0.0	0.0.0.0	
# ::edge	true	condition	establish-01	0.0.0.0.0.0.1	0.0.0.0.0.0	
# ::edge	true	domain	it	0.0.0.0.0.0.1	0.0.0.0.0.0.1.0	
(c / convention 
      :ARG1-of (e / exist-01 
            :ARG0 (r3 / reason 
                  :purpose (a2 / adhere-02 
                        :ARG0 (p / person 
                              :ARG0-of (e5 / establish-01 
                                    :ARG1 (c2 / convention 
                                          :mod (c3 / coordinate-01) 
                                          :mod (u2 / useful)) 
                                    :condition-of (t / true 
                                          :domain (i2 / it)) 
                                    :op-of (o / once)) 
                              :mod (e4 / every)) 
                        :ARG1 (r2 / reason 
                              :ARG1-of (d / depend-01 
                                    :ARG0 (e2 / entire) 
                                    :ARG2 (e3 / exist-01 
                                          :ARG1 (a / authority) 
                                          :time (r / reason)) 
                                    :polarity -)) 
                        :ARG2 (i / it)))) 
      :mod (u / useful))

# ::snt the papers sold on their contents and derived their profits from the pennies or halfpennies paid by the readers
# ::tok the papers sold on their contents and derived their profits from the pennies or halfpennies paid by the readers
# ::alignments 18-19|0.1.0.0.0.0.0+0.1.0.0.0.0 15-16|0.1.0.0.0 13-14|0.1.0.0 12-13|0.1.0.0.1 9-10|0.1.0 7-8|0.1 6-7|0 5-6|0.0.1.0+0.0.1 2-3|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:31.836
# ::node	0	and	6-7
# ::node	0.0	sell-01	2-3
# ::node	0.0.0	paper	1-2
# ::node	0.0.1	thing	5-6
# ::node	0.0.1.0	contain-01	5-6
# ::node	0.1	derive-01	7-8
# ::node	0.1.0	profit-01	9-10
# ::node	0.1.0.0	or	13-14
# ::node	0.1.0.0.0	pay-01	15-16
# ::node	0.1.0.0.0.0	person	18-19
# ::node	0.1.0.0.0.0.0	read-01	18-19
# ::node	0.1.0.0.1	penny	12-13
# ::root	0	and
# ::edge	and	op1	sell-01	0	0.0	
# ::edge	and	op2	derive-01	0	0.1	
# ::edge	contain-01	ARG1	thing	0.0.1.0	0.0.1	
# ::edge	derive-01	ARG1	profit-01	0.1	0.1.0	
# ::edge	or	op1	penny	0.1.0.0	0.1.0.0.1	
# ::edge	pay-01	ARG0	person	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	pay-01	ARG1	or	0.1.0.0.0	0.1.0.0	
# ::edge	profit-01	ARG1	or	0.1.0	0.1.0.0	
# ::edge	read-01	ARG0	person	0.1.0.0.0.0.0	0.1.0.0.0.0	
# ::edge	sell-01	ARG0	paper	0.0	0.0.0	
# ::edge	sell-01	ARG3	thing	0.0	0.0.1	
(a / and 
      :op1 (s / sell-01 
            :ARG0 (p5 / paper) 
            :ARG3 (t / thing 
                  :ARG1-of (c / contain-01))) 
      :op2 (d / derive-01 
            :ARG1 (p4 / profit-01 
                  :ARG1 (o / or 
                        :ARG1-of (p2 / pay-01 
                              :ARG0 (p / person 
                                    :ARG0-of (r / read-01))) 
                        :op1 (p3 / penny)))))

# ::snt her gouache paintings on paper depict unpeopled interiors and flowers with a japanese sense of colour and design but their intriguing magic derives from the marriage of east and west
# ::tok her gouache paintings on paper depict unpeopled interiors and flowers with a japanese sense of colour and design but their intriguing magic derives from the marriage of east and west
# ::alignments 29-30|0.1.0.0.0.0 28-29|0.1.0.0.0 27-28|0.1.0.0 25-26|0.1.0 21-22|0.1 20-21|0.1.1 18-19|0 17-18|0.1.2 16-17|0.1.2.0 15-16|0.1.2.0.1 13-14|0.0 9-10|0.1.2.0.0 8-9|0.1.2.0.0.0 4-5|0.2.0 2-3|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:32.010
# ::node	0	contrast-01	18-19
# ::node	0.0	sense	13-14
# ::node	0.1	magic	21-22
# ::node	0.1.0	marry-01	25-26
# ::node	0.1.0.0	east	27-28
# ::node	0.1.0.0.0	and	28-29
# ::node	0.1.0.0.0.0	west	29-30
# ::node	0.1.1	intrigue-01	20-21
# ::node	0.1.2	design-01	17-18
# ::node	0.1.2.0	and	16-17
# ::node	0.1.2.0.0	flower	9-10
# ::node	0.1.2.0.0.0	and	8-9
# ::node	0.1.2.0.1	colour	15-16
# ::node	0.2	paint-02	2-3
# ::node	0.2.0	paper	4-5
# ::root	0	contrast-01
# ::edge	and	op1	east	0.1.0.0.0	0.1.0.0	
# ::edge	and	op1	flower	0.1.2.0	0.1.2.0.0	
# ::edge	and	op1	flower	0.1.2.0.0.0	0.1.2.0.0	
# ::edge	and	op2	colour	0.1.2.0	0.1.2.0.1	
# ::edge	and	op2	west	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	and	op3	design-01	0.1.2.0	0.1.2	
# ::edge	contrast-01	ARG1	sense	0	0.0	
# ::edge	contrast-01	ARG2	magic	0	0.1	
# ::edge	intrigue-01	ARG1	magic	0.1.1	0.1	
# ::edge	magic	poss	design-01	0.1	0.1.2	
# ::edge	marry-01	ARG0	magic	0.1.0	0.1	
# ::edge	marry-01	ARG1	east	0.1.0	0.1.0.0	
# ::edge	paint-02	ARG1	paper	0.2	0.2.0	
# ::edge	paint-02	condition	contrast-01	0.2	0	
(c / contrast-01 
      :ARG1 (s / sense) 
      :ARG2 (m2 / magic 
            :ARG0-of (m / marry-01 
                  :ARG1 (e / east 
                        :op-of (a / and 
                              :op1 (w / west)))) 
            :ARG1-of (i / intrigue-01) 
            :poss (d / design-01 
                  :op-of (a2 / and 
                        :op1 (f / flower 
                              :op-of (a3 / and)) 
                        :op2 (c2 / colour)))) 
      :condition-of (p2 / paint-02 
            :ARG1 (p / paper)))

# ::snt for him the energies driving history have been derived from the interplay between external forces conflicting visions of the right ordering of society
# ::tok for him the energies driving history have been derived from the interplay between external forces conflicting visions of the right ordering of society
# ::alignments 22-23|0.2.0 20-21|0.2 15-16|0.0.0.0 14-15|0.1 13-14|0.1.0 12-13|0.1.1 8-9|0 5-6|0.0 4-5|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:32.094
# ::node	0	derive-01	8-9
# ::node	0.0	history	5-6
# ::node	0.0.0	drive-01	4-5
# ::node	0.0.0.0	conflict-01	15-16
# ::node	0.1	force	14-15
# ::node	0.1.0	external	13-14
# ::node	0.1.1	between	12-13
# ::node	0.2	order-02	20-21
# ::node	0.2.0	society	22-23
# ::root	0	derive-01
# ::edge	between	op1	force	0.1.1	0.1	
# ::edge	conflict-01	ARG1	drive-01	0.0.0.0	0.0.0	
# ::edge	derive-01	ARG1	history	0	0.0	
# ::edge	derive-01	ARG2	force	0	0.1	
# ::edge	derive-01	ARG3	order-02	0	0.2	
# ::edge	force	mod	external	0.1	0.1.0	
# ::edge	history	mod	drive-01	0.0	0.0.0	
# ::edge	order-02	ARG1	society	0.2	0.2.0	
(d / derive-01 
      :ARG1 (h / history 
            :mod (d2 / drive-01 
                  :ARG1-of (c / conflict-01))) 
      :ARG2 (f / force 
            :mod (e / external) 
            :op-of (b / between)) 
      :ARG3 (o / order-02 
            :ARG1 (s / society)))

# ::snt the rhythm section could not be truly rhythmic without some accentuation derived from an interpretation of the melody
# ::tok the rhythm section could not be truly rhythmic without some accentuation derived from an interpretation of the melody
# ::alignments 17-18|0 14-15|0.0 11-12|0.0.0 9-10|0.0.0.0 7-8|0.0.0.2 6-7|0.0.0.2.0 3-4|0.0.0.2.1 2-3|0.0.0.1 1-2|0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:32.148
# ::node	0	melody	17-18
# ::node	0.0	interpret-01	14-15
# ::node	0.0.0	derive-01	11-12
# ::node	0.0.0.0	some	9-10
# ::node	0.0.0.1	section	2-3
# ::node	0.0.0.1.0	rhythm	1-2
# ::node	0.0.0.2	rhythm	7-8
# ::node	0.0.0.2.0	truly	6-7
# ::node	0.0.0.2.1	possible	3-4
# ::root	0	melody
(m / melody 
      :ARG1-of (i / interpret-01 
            :ARG2-of (d / derive-01 
                  :ARG0 (s / some) 
                  :ARG1 (s2 / section 
                        :mod (r2 / rhythm)) 
                  :domain-of (r / rhythm 
                        :degree (t / truly) 
                        :domain-of (p / possible)))))

# ::snt and fruma whose name derives from the yiddishgerman frum for pious was there with me at the time of my conversion sometimes arguing the other side but usually ending up agreeing with me
# ::tok and fruma whose name derives from the yiddishgerman frum for pious was there with me at the time of my conversion sometimes arguing the other side but usually ending up agreeing with me
# ::alignments 30-31|0.1.2 28-29|0.1 27-28|0.1.3 26-27|0 25-26|0.0.0 24-25|0.0.0.0 22-23|0.0 21-22|0.0.1 20-21|0.1.1 17-18|0.1.1.0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:32.295
# ::node	0	contrast-01	26-27
# ::node	0.0	argue-01	22-23
# ::node	0.0.0	side	25-26
# ::node	0.0.0.0	other	24-25
# ::node	0.0.1	sometimes	21-22
# ::node	0.1	end-01	28-29
# ::node	0.1.0	and	0-1
# ::node	0.1.1	convert-01	20-21
# ::node	0.1.1.0	time	17-18
# ::node	0.1.2	agree-01	30-31
# ::node	0.1.3	usual	27-28
# ::root	0	contrast-01
# ::edge	argue-01	ARG1	side	0.0	0.0.0	
# ::edge	argue-01	frequency	sometimes	0.0	0.0.1	
# ::edge	contrast-01	ARG1	argue-01	0	0.0	
# ::edge	contrast-01	ARG2	end-01	0	0.1	
# ::edge	convert-01	ARG1	time	0.1.1	0.1.1.0	
# ::edge	end-01	ARG0	and	0.1	0.1.0	
# ::edge	end-01	ARG1	convert-01	0.1	0.1.1	
# ::edge	end-01	ARG2	agree-01	0.1	0.1.2	
# ::edge	end-01	mod	usual	0.1	0.1.3	
# ::edge	side	mod	other	0.0.0	0.0.0.0	
(c / contrast-01 
      :ARG1 (a2 / argue-01 
            :ARG1 (s / side 
                  :mod (o / other)) 
            :frequency (s2 / sometimes)) 
      :ARG2 (e / end-01 
            :ARG0 (a3 / and) 
            :ARG1 (c2 / convert-01 
                  :ARG1 (t / time)) 
            :ARG2 (a / agree-01) 
            :mod (u / usual)))

# ::snt as canadas rights grew hers grew with them until the irish discovered that they could legally repudiate the treaty from which the free state derived its existence
# ::tok as canadas rights grew hers grew with them until the irish discovered that they could legally repudiate the treaty from which the free state derived its existence
# ::alignments 26-27|0.0.0.0.0 24-25|0.0.0.0 23-24|0.0.0.0.0.0 22-23|0.0.0.0.0.0.0 18-19|0.1 15-16|0.2 14-15|0 13-14|0.0.0 11-12|0.0 8-9|0.0.1 5-6|0.0.1.0 3-4|0.0.1.0.0.0 2-3|0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:32.492
# ::node	0	possible	14-15
# ::node	0.0	discover-01	11-12
# ::node	0.0.0	they	13-14
# ::node	0.0.0.0	derive-01	24-25
# ::node	0.0.0.0.0	exist-01	26-27
# ::node	0.0.0.0.0.0	state	23-24
# ::node	0.0.0.0.0.0.0	free-41	22-23
# ::node	0.0.1	until	8-9
# ::node	0.0.1.0	grow-01	5-6
# ::node	0.0.1.0.0	right	2-3
# ::node	0.0.1.0.0.0	grow-01	3-4
# ::node	0.1	treaty	18-19
# ::node	0.2	legal	15-16
# ::root	0	possible
# ::edge	derive-01	ARG0	they	0.0.0.0	0.0.0	
# ::edge	derive-01	ARG1	exist-01	0.0.0.0	0.0.0.0.0	
# ::edge	discover-01	ARG0	they	0.0	0.0.0	
# ::edge	discover-01	ARG1	possible	0.0	0	
# ::edge	exist-01	ARG1	state	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	free-41	ARG1	state	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	grow-01	ARG0	right	0.0.1.0	0.0.1.0.0	
# ::edge	grow-01	ARG1	right	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	grow-01	time	until	0.0.1.0	0.0.1	
# ::edge	possible	domain	treaty	0	0.1	
# ::edge	possible	mod	legal	0	0.2	
# ::edge	until	op1	discover-01	0.0.1	0.0	
(p / possible 
      :ARG1-of (d2 / discover-01 
            :ARG0 (t2 / they 
                  :ARG0-of (d / derive-01 
                        :ARG1 (e / exist-01 
                              :ARG1 (s / state 
                                    :ARG1-of (f / free-41))))) 
            :op-of (u / until 
                  :time-of (g / grow-01 
                        :ARG0 (r / right 
                              :ARG1-of (g2 / grow-01))))) 
      :domain (t / treaty) 
      :mod (l / legal))

# ::snt olives ripen unevenly and the best oil must be derived from those which are picked when not quite ripe
# ::tok olives ripen unevenly and the best oil must be derived from those which are picked when not quite ripe
# ::alignments 18-19|0 17-18|0.1 14-15|0.0 9-10|0.0.0 6-7|0.0.0.0.0 3-4|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:32.522
# ::node	0	ripen-01	18-19
# ::node	0.0	pick-04	14-15
# ::node	0.0.0	derive-01	9-10
# ::node	0.0.0.0	and	3-4
# ::node	0.0.0.0.0	oil	6-7
# ::node	0.1	quite	17-18
# ::root	0	ripen-01
# ::edge	and	op1	oil	0.0.0.0	0.0.0.0.0	
# ::edge	derive-01	ARG1	and	0.0.0	0.0.0.0	
# ::edge	derive-01	ARG2	pick-04	0.0.0	0.0	
# ::edge	pick-04	ARG1	ripen-01	0.0	0	
# ::edge	ripen-01	degree	quite	0	0.1	
(r / ripen-01 
      :ARG1-of (p / pick-04 
            :ARG2-of (d / derive-01 
                  :ARG1 (a / and 
                        :op1 (o / oil)))) 
      :degree (q / quite))

# ::snt the congress will have to make a clear break with the stalinist system and the power monopoly and abuses which derived from it
# ::tok the congress will have to make a clear break with the stalinist system and the power monopoly and abuses which derived from it
# ::alignments 22-23|0.2.1.1.1 20-21|0.2.1.1 18-19|0.2.1 17-18|0.2 16-17|0.1 15-16|0.2.1.0 13-14|0 12-13|0.0 7-8|0.2.1.1.0 1-2|0.2.0.0.0+0.2.0.0+0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:32.648
# ::node	0	and	13-14
# ::node	0.0	system	12-13
# ::node	0.1	monopoly	16-17
# ::node	0.2	and	17-18
# ::node	0.2.0	government-organization	1-2
# ::node	0.2.0.0	name	1-2
# ::node	0.2.0.0.0	"Congress"	1-2
# ::node	0.2.1	abuse-01	18-19
# ::node	0.2.1.0	power	15-16
# ::node	0.2.1.1	derive-01	20-21
# ::node	0.2.1.1.0	clear	7-8
# ::node	0.2.1.1.1	it	22-23
# ::root	0	and
# ::edge	abuse-01	ARG1	power	0.2.1	0.2.1.0	
# ::edge	and	op1	government-organization	0.2	0.2.0	
# ::edge	and	op1	system	0	0.0	
# ::edge	and	op2	abuse-01	0.2	0.2.1	
# ::edge	and	op2	monopoly	0	0.1	
# ::edge	and	op3	and	0	0.2	
# ::edge	derive-01	ARG0	clear	0.2.1.1	0.2.1.1.0	
# ::edge	derive-01	ARG1	abuse-01	0.2.1.1	0.2.1	
# ::edge	derive-01	ARG2	it	0.2.1.1	0.2.1.1.1	
# ::edge	government-organization	name	name	0.2.0	0.2.0.0	
# ::edge	name	op1	"Congress"	0.2.0.0	0.2.0.0.0	
(a3 / and 
      :op1 (s / system) 
      :op2 (m / monopoly) 
      :op3 (a2 / and 
            :op1 (g / government-organization 
                  :name (n / name 
                        :op1 "Congress")) 
            :op2 (a / abuse-01 
                  :ARG1 (p / power) 
                  :ARG1-of (d / derive-01 
                        :ARG0 (c / clear) 
                        :ARG2 (i / it)))))

# ::snt the attempt of the former which is to understand the idea of cause and hence to find the impression from which it is derived is made only incidentally in the enquiry
# ::tok the attempt of the former which is to understand the idea of cause and hence to find the impression from which it is derived is made only incidentally in the enquiry
# ::alignments 26-27|0.0 23-24|0.1.0.1.0 21-22|0.1.0.1.0.1 18-19|0.1.0.1.0.0 13-14|0.1.0.1 12-13|0 10-11|0.1 8-9|0.1.0 4-5|0.1.0.0 1-2|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:32.733
# ::node	0	cause-01	12-13
# ::node	0.0	only	26-27
# ::node	0.1	idea	10-11
# ::node	0.1.0	understand-01	8-9
# ::node	0.1.0.0	former	4-5
# ::node	0.1.0.0.0	attempt-01	1-2
# ::node	0.1.0.1	and	13-14
# ::node	0.1.0.1.0	derive-01	23-24
# ::node	0.1.0.1.0.0	impression	18-19
# ::node	0.1.0.1.0.1	it	21-22
# ::root	0	cause-01
# ::edge	and	op1	understand-01	0.1.0.1	0.1.0	
# ::edge	attempt-01	ARG1	former	0.1.0.0.0	0.1.0.0	
# ::edge	cause-01	ARG1	only	0	0.0	
# ::edge	derive-01	ARG0	impression	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	derive-01	ARG1	it	0.1.0.1.0	0.1.0.1.0.1	
# ::edge	derive-01	ARG2	and	0.1.0.1.0	0.1.0.1	
# ::edge	idea	topic	cause-01	0.1	0	
# ::edge	understand-01	ARG0	former	0.1.0	0.1.0.0	
# ::edge	understand-01	ARG1	idea	0.1.0	0.1	
(c / cause-01 
      :ARG1 (o / only) 
      :topic-of (i3 / idea 
            :ARG1-of (u / understand-01 
                  :ARG0 (f / former 
                        :ARG1-of (a2 / attempt-01)) 
                  :op-of (a / and 
                        :ARG2-of (d / derive-01 
                              :ARG0 (i2 / impression) 
                              :ARG1 (i / it))))))

# ::snt congleton or bear town the name derives from the 17th century when a beast died in marketplace baiting and the municipal bible was sold to buy a replacement is 11 miles from crewe
# ::tok congleton or bear town the name derives from the 17th century when a beast died in marketplace baiting and the municipal bible was sold to buy a replacement is 11 miles from crewe
# ::alignments 30-31|0.1.0.1+0.1.0 29-30|0.1.0.0 27-28|0.0.0 25-26|0.0 23-24|0.0.1 20-21|0.0.0.0 18-19|0 14-15|0.1 13-14|0.0.1.0 3-4|0.1.1 2-3|0.1.1.0.0 1-2|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:33.006
# ::node	0	and	18-19
# ::node	0.0	buy-01	25-26
# ::node	0.0.0	replace-01	27-28
# ::node	0.0.0.0	municipal	20-21
# ::node	0.0.1	sell-01	23-24
# ::node	0.0.1.0	beast	13-14
# ::node	0.1	die-01	14-15
# ::node	0.1.0	distance-quantity	30-31
# ::node	0.1.0.0	11	29-30
# ::node	0.1.0.1	mile	30-31
# ::node	0.1.1	town	3-4
# ::node	0.1.1.0	or	1-2
# ::node	0.1.1.0.0	bear-02	2-3
# ::root	0	and
# ::edge	and	op1	die-01	0	0.1	
# ::edge	buy-01	ARG0	and	0.0	0	
# ::edge	buy-01	ARG1	replace-01	0.0	0.0.0	
# ::edge	die-01	ARG0	distance-quantity	0.1	0.1.0	
# ::edge	die-01	ARG1	town	0.1	0.1.1	
# ::edge	distance-quantity	quant	11	0.1.0	0.1.0.0	
# ::edge	distance-quantity	unit	mile	0.1.0	0.1.0.1	
# ::edge	or	op1	bear-02	0.1.1.0	0.1.1.0.0	
# ::edge	or	op2	town	0.1.1.0	0.1.1	
# ::edge	replace-01	ARG1	municipal	0.0.0	0.0.0.0	
# ::edge	sell-01	ARG0	beast	0.0.1	0.0.1.0	
# ::edge	sell-01	ARG1	buy-01	0.0.1	0.0	
(a / and 
      :ARG0-of (b / buy-01 
            :ARG1 (r / replace-01 
                  :ARG1 (m2 / municipal)) 
            :ARG1-of (s / sell-01 
                  :ARG0 (b2 / beast))) 
      :op1 (d2 / die-01 
            :ARG0 (d / distance-quantity 
                  :quant 11 
                  :unit (m / mile)) 
            :ARG1 (t / town 
                  :op-of (o / or 
                        :op1 (b3 / bear-02)))))

# ::snt the form of folktale combined with allegory is welladapted to an audience familiar with biblical texts and the parables derived from it
# ::tok the form of folktale combined with allegory is welladapted to an audience familiar with biblical texts and the parables derived from it
# ::alignments 21-22|0.1.0.0 19-20|0.1.0 16-17|0.1 15-16|0 12-13|0.0 11-12|0.0.0 4-5|0.1.1 1-2|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:33.096
# ::node	0	text-00	15-16
# ::node	0.0	familiarize-01	12-13
# ::node	0.0.0	audience	11-12
# ::node	0.1	and	16-17
# ::node	0.1.0	derive-01	19-20
# ::node	0.1.0.0	it	21-22
# ::node	0.1.1	combine-01	4-5
# ::node	0.1.1.0	form	1-2
# ::root	0	text-00
(t / text-00 
      :ARG2-of (f / familiarize-01 
            :ARG1 (a2 / audience)) 
      :op-of (a / and 
            :ARG0-of (d / derive-01 
                  :ARG1 (i / it)) 
            :ARG1-of (c / combine-01 
                  :ARG0 (f2 / form))))

# ::snt as the author of two collections of poetry before the second world war de vous la merveille the title derives from malherbe and sens de la solitude he had made a marked impression both with the precocity of his talent and the lean distinction of his looks
# ::tok as the author of two collections of poetry before the second world war de vous la merveille the title derives from malherbe and sens de la solitude he had made a marked impression both with the precocity of his talent and the lean distinction of his looks
# ::alignments 46-47|0.0.0.0 43-44|0.0.0.0.0 42-43|0.0.0.0.0.1 40-41|0.0.0.0.0.2 39-40|0.0.0.1 33-34|0.0.0.0.0.1.0 32-33|0.0 31-32|0 27-28|0.0.0 24-26|0.0.0.0.1.0.0+0.0.0.0.1.0.1+0.0.0.0.1.0+0.0.0.0.1 22-23|0.0.0.0.0.0 18-19|0.0.0.0.0.0.1 13-16|0.1.0.0.0.0.0+0.1.0.0.0.0.1+0.1.0.0.0.0.2+0.1.0.0.0.0+0.1.0.0.0 12-13|0.1.0.0 11-12|0.1.0.0.1 8-9|0.1 7-8|0.1.0 4-5|0.2 2-3|0.0.0.0.0.0.0.0+0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:33.560
# ::node	0	mark-01	31-32
# ::node	0.0	impression	32-33
# ::node	0.0.0	he	27-28
# ::node	0.0.0.0	look-02	46-47
# ::node	0.0.0.0.0	distinguish-01	43-44
# ::node	0.0.0.0.0.0	and	22-23
# ::node	0.0.0.0.0.0.0	person	2-3
# ::node	0.0.0.0.0.0.0.0	author-01	2-3
# ::node	0.0.0.0.0.0.1	title	18-19
# ::node	0.0.0.0.0.1	lean-01	42-43
# ::node	0.0.0.0.0.1.0	both	33-34
# ::node	0.0.0.0.0.2	and	40-41
# ::node	0.0.0.0.1	country	24-26
# ::node	0.0.0.0.1.0	name	24-26
# ::node	0.0.0.0.1.0.0	"la"	24-26
# ::node	0.0.0.0.1.0.1	"de"	24-26
# ::node	0.0.0.1	talent	39-40
# ::node	0.1	before	8-9
# ::node	0.1.0	poetry	7-8
# ::node	0.1.0.0	war	12-13
# ::node	0.1.0.0.0	country	13-16
# ::node	0.1.0.0.0.0	name	13-16
# ::node	0.1.0.0.0.0.0	"la"	13-16
# ::node	0.1.0.0.0.0.1	"vous"	13-16
# ::node	0.1.0.0.0.0.2	"de"	13-16
# ::node	0.1.0.0.1	world	11-12
# ::node	0.2	2	4-5
# ::root	0	mark-01
# ::edge	2	op1	mark-01	0.2	0	
# ::edge	and	op1	distinguish-01	0.0.0.0.0.2	0.0.0.0.0	
# ::edge	and	op1	person	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	and	op2	title	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	author-01	ARG0	person	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	before	op1	mark-01	0.1	0	
# ::edge	country	name	name	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	country	name	name	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	distinguish-01	ARG0	and	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	distinguish-01	ARG1	look-02	0.0.0.0.0	0.0.0.0	
# ::edge	he	part	talent	0.0.0	0.0.0.1	
# ::edge	impression	poss	he	0.0	0.0.0	
# ::edge	lean-01	ARG0	both	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	lean-01	ARG1	distinguish-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	look-02	ARG1	he	0.0.0.0	0.0.0	
# ::edge	look-02	location	country	0.0.0.0	0.0.0.0.1	
# ::edge	mark-01	ARG1	impression	0	0.0	
# ::edge	name	op1	"la"	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	name	op1	"la"	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	name	op2	"de"	0.0.0.0.1.0	0.0.0.0.1.0.1	
# ::edge	name	op2	"vous"	0.1.0.0.0.0	0.1.0.0.0.0.1	
# ::edge	name	op3	"de"	0.1.0.0.0.0	0.1.0.0.0.0.2	
# ::edge	poetry	poss	war	0.1.0	0.1.0.0	
# ::edge	poetry	time	before	0.1.0	0.1	
# ::edge	war	location	country	0.1.0.0	0.1.0.0.0	
# ::edge	war	poss	world	0.1.0.0	0.1.0.0.1	
(m / mark-01 
      :ARG1 (i / impression 
            :poss (h / he 
                  :ARG1-of (l / look-02 
                        :ARG1-of (d / distinguish-01 
                              :ARG0 (a2 / and 
                                    :op1 (p2 / person 
                                          :ARG0-of (a3 / author-01)) 
                                    :op2 (t2 / title)) 
                              :ARG1-of (l2 / lean-01 
                                    :ARG0 (b / both)) 
                              :op-of (a / and)) 
                        :location (c / country 
                              :name (n / name 
                                    :op1 "la" 
                                    :op2 "de"))) 
                  :part (t / talent))) 
      :op-of (b2 / before 
            :time-of (p / poetry 
                  :poss (w / war 
                        :location (c2 / country 
                              :name (n2 / name 
                                    :op1 "la" 
                                    :op2 "vous" 
                                    :op3 "de")) 
                        :poss (w2 / world)))) 
      :op-of 2)

# ::snt the most immediately powerful piece quasitambura has no latin connections at all the composer thinks it derives from sorabji
# ::tok the most immediately powerful piece quasitambura has no latin connections at all the composer thinks it derives from sorabji
# ::alignments 15-16|0.1.0 14-15|0.1 11-12|0.0 9-10|0 7-8|0.1.1 4-5|0.2 3-4|0.2.0 2-3|0.2.0.0 1-2|0.2.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:33.642
# ::node	0	connect-01	9-10
# ::node	0.0	all	11-12
# ::node	0.1	think-01	14-15
# ::node	0.1.0	it	15-16
# ::node	0.1.1	-	7-8
# ::node	0.2	piece	4-5
# ::node	0.2.0	powerful	3-4
# ::node	0.2.0.0	immediate	2-3
# ::node	0.2.0.0.0	most	1-2
# ::root	0	connect-01
# ::edge	connect-01	ARG1	all	0	0.0	
# ::edge	immediate	degree	most	0.2.0.0	0.2.0.0.0	
# ::edge	piece	mod	powerful	0.2	0.2.0	
# ::edge	piece	op1	connect-01	0.2	0	
# ::edge	powerful	time	immediate	0.2.0	0.2.0.0	
# ::edge	think-01	ARG0	it	0.1	0.1.0	
# ::edge	think-01	ARG1	connect-01	0.1	0	
# ::edge	think-01	polarity	-	0.1	0.1.1	
(c / connect-01 
      :ARG1 (a / all) 
      :ARG1-of (t / think-01 
            :ARG0 (i / it) 
            :polarity (- / -)) 
      :op-of (p / piece 
            :mod (p2 / powerful 
                  :time (i2 / immediate 
                        :degree (m / most)))))

# ::snt my objections to the view that morality is rightbased derive from a sense of the inadequacy of the conception of morality in the narrow sense which itself is a reflection of the rejection of moral individualism
# ::tok my objections to the view that morality is rightbased derive from a sense of the inadequacy of the conception of morality in the narrow sense which itself is a reflection of the rejection of moral individualism
# ::alignments 35-36|0.0.0.0.0.0 34-35|0.0.0.0.0.0.0 32-33|0.0.0.0.0 29-30|0.0.0.0 24-25|0.0.0.0.1.1 23-24|0.0.0.0.1 20-21|0 12-13|0.0.1 9-10|0.0 6-7|0.0.0 1-2|0.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:33.800
# ::node	0	morality	20-21
# ::node	0.0	derive-01	9-10
# ::node	0.0.0	morality	6-7
# ::node	0.0.0.0	reflect-01	29-30
# ::node	0.0.0.0.0	reject-01	32-33
# ::node	0.0.0.0.0.0	individualism	35-36
# ::node	0.0.0.0.0.0.0	moral	34-35
# ::node	0.0.0.0.1	narrow-01	23-24
# ::node	0.0.0.0.1.0	objection	1-2
# ::node	0.0.0.0.1.1	sense	24-25
# ::node	0.0.1	sense	12-13
# ::root	0	morality
(m2 / morality 
      :ARG0-of (d / derive-01 
            :ARG1 (m3 / morality 
                  :ARG0-of (r2 / reflect-01 
                        :ARG1 (r / reject-01 
                              :ARG1 (i / individualism 
                                    :mod (m / moral))) 
                        :ARG2-of (n / narrow-01 
                              :ARG0 (o / objection) 
                              :ARG1 (s / sense)))) 
            :ARG2 (s2 / sense)))

# ::snt with pints quarts and gallons or ounces pounds and stones  yet the way we write english is still medieval our spellings derive from a time when language literacy and communications were very different from today
# ::tok with pints quarts and gallons or ounces pounds and stones yet the way we write english is still medieval our spellings derive from a time when language literacy and communications were very different from today
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:33.801
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt in relation to commercial exploitation the nonacademic parties and the academic parties agree that the terms and conditions for exploitation of and licenses granted under intellectual property rights in results deriving from the academic parties shall have regard to the extent to which such results are incorporated in or applied to the manufacture of commercially exploited products particularly where there had been substantial product development outside the project and to the serc guidelines which are set out in a letter from serc dated 13 august 1984 together with its attachments
# ::tok in relation to commercial exploitation the nonacademic parties and the academic parties agree that the terms and conditions for exploitation of and licenses granted under intellectual property rights in results deriving from the academic parties shall have regard to the extent to which such results are incorporated in or applied to the manufacture of commercially exploited products particularly where there had been substantial product development outside the project and to the serc guidelines which are set out in a letter from serc dated 13 august 1984 together with its attachments
# ::alignments 86-87|0.0.2.1.3.0.0.0.0.0.0.0 83-86|0.0.2.1.3.0.0.0.0.0.1.2.2+0.0.2.1.3.0.0.0.0.0.1.2.1+0.0.2.1.3.0.0.0.0.0.1.2.0+0.0.2.1.3.0.0.0.0.0.1.2 82-83|0.0.2.1.3.0.0.0.0.0.1 79-80|0.0.2.1.3.0.0.0.0.0.1.1 72-73|0.0.2.1.3.0.0.0.0.0.1.0 68-69|0.0.2.1.3.0.0.0.0.0 67-68|0.0.2.1.3.0.0.0.0.0.0.1 65-66|0.0.2.1.3.0.0.0.0.0.0.1.0 64-65|0.0.2.1.3.0.0.0.0.0.0 63-64|0.0.2.1.3.0.0.0.0.0.0.3 62-63|0.0.2.1.3.0.0.0.1.0 57-58|0.0.2.1.3.0.0.0.0.0.0.2 56-57|0.0.2.1.3.0.0.0.1.1 54-55|0.0.1.0 52-53|0.0.2.1.3.0.0.0.1 49-50|0.0.2.1.3.0.0.0 48-49|0.0.2.1.3.0.0.0.2 44-45|0.0.2.1.3.0.0.0.0 43-44|0.0.2.1.3.0.0.0.0.1 40-41|0.0.2.1.3.0.0 37-38|0.0.2.1.3.0 34-35|0.0.2.1.2.1 33-34|0.0.2.1.2.1.0 29-30|0.0.1 27-28|0.0.0 26-27|0.0.0.0 25-26|0.0.0.0.0 23-24|0.0 22-23|0 21-22|0.0.2 19-20|0.0.2.0 17-18|0.0.2.1.3.2 16-17|0.0.2.1.3 15-16|0.0.2.1.3.1 12-13|0.0.2.1.2.0 11-12|0.0.2.1.2.0.0 10-11|0.0.2.1.1 8-9|0.0.2.1.2 7-8|0.0.2.1 4-5|0.0.2.1.0 3-4|0.0.2.1.0.1 1-2|0.0.2.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:36.278
# ::node	0	license-01	22-23
# ::node	0.0	grant-01	23-24
# ::node	0.0.0	right	27-28
# ::node	0.0.0.0	property	26-27
# ::node	0.0.0.0.0	intellectual	25-26
# ::node	0.0.1	result-01	29-30
# ::node	0.0.1.0	commercial	54-55
# ::node	0.0.2	and	21-22
# ::node	0.0.2.0	exploit-01	19-20
# ::node	0.0.2.1	party	7-8
# ::node	0.0.2.1.0	exploit-01	4-5
# ::node	0.0.2.1.0.0	relate-01	1-2
# ::node	0.0.2.1.0.1	commerce	3-4
# ::node	0.0.2.1.1	academia	10-11
# ::node	0.0.2.1.2	and	8-9
# ::node	0.0.2.1.2.0	agree-01	12-13
# ::node	0.0.2.1.2.0.0	party	11-12
# ::node	0.0.2.1.2.1	party	34-35
# ::node	0.0.2.1.2.1.0	academia	33-34
# ::node	0.0.2.1.3	and	16-17
# ::node	0.0.2.1.3.0	regard-01	37-38
# ::node	0.0.2.1.3.0.0	extent	40-41
# ::node	0.0.2.1.3.0.0.0	apply-01	49-50
# ::node	0.0.2.1.3.0.0.0.0	result-01	44-45
# ::node	0.0.2.1.3.0.0.0.0.0	and	68-69
# ::node	0.0.2.1.3.0.0.0.0.0.0	develop-02	64-65
# ::node	0.0.2.1.3.0.0.0.0.0.0.0	together	86-87
# ::node	0.0.2.1.3.0.0.0.0.0.0.1	project	67-68
# ::node	0.0.2.1.3.0.0.0.0.0.0.1.0	outside	65-66
# ::node	0.0.2.1.3.0.0.0.0.0.0.2	particular	57-58
# ::node	0.0.2.1.3.0.0.0.0.0.0.3	product	63-64
# ::node	0.0.2.1.3.0.0.0.0.0.1	date-01	82-83
# ::node	0.0.2.1.3.0.0.0.0.0.1.0	guideline	72-73
# ::node	0.0.2.1.3.0.0.0.0.0.1.1	letter	79-80
# ::node	0.0.2.1.3.0.0.0.0.0.1.2	date-entity	83-86
# ::node	0.0.2.1.3.0.0.0.0.0.1.2.0	13	83-86
# ::node	0.0.2.1.3.0.0.0.0.0.1.2.1	8	83-86
# ::node	0.0.2.1.3.0.0.0.0.0.1.2.2	1984	83-86
# ::node	0.0.2.1.3.0.0.0.0.1	such	43-44
# ::node	0.0.2.1.3.0.0.0.1	manufacture-01	52-53
# ::node	0.0.2.1.3.0.0.0.1.0	substantial	62-63
# ::node	0.0.2.1.3.0.0.0.1.1	product	56-57
# ::node	0.0.2.1.3.0.0.0.2	or	48-49
# ::node	0.0.2.1.3.1	term	15-16
# ::node	0.0.2.1.3.2	condition	17-18
# ::root	0	license-01
(l2 / license-01 
      :ARG1-of (g2 / grant-01 
            :ARG0 (r4 / right 
                  :mod (p6 / property 
                        :mod (i / intellectual))) 
            :manner (r3 / result-01 
                  :ARG1 (c / commercial)) 
            :op-of (a4 / and 
                  :ARG1-of (e2 / exploit-01) 
                  :op1 (p8 / party 
                        :ARG1-of (e3 / exploit-01 
                              :ARG1-of (r5 / relate-01) 
                              :mod (c3 / commerce)) 
                        :mod (a7 / academia) 
                        :op-of (a8 / and 
                              :ARG0-of (a6 / agree-01 
                                    :ARG1 (p7 / party)) 
                              :op1 (p5 / party 
                                    :mod (a3 / academia))) 
                        :op-of (a5 / and 
                              :ARG0-of (r2 / regard-01 
                                    :ARG1 (e / extent 
                                          :ARG0-of (a2 / apply-01 
                                                :ARG1 (r / result-01 
                                                      :ARG1 (a / and 
                                                            :op1 (d3 / develop-02 
                                                                  :ARG0 (t / together) 
                                                                  :ARG1 (p / project 
                                                                        :op-of (o / outside)) 
                                                                  :mod (p3 / particular) 
                                                                  :time (p2 / product)) 
                                                            :op2 (d2 / date-01 
                                                                  :ARG0 (g / guideline) 
                                                                  :ARG1 (l / letter) 
                                                                  :ARG2 (d / date-entity 
                                                                        :day 13 
                                                                        :month 8 
                                                                        :year 1984))) 
                                                      :mod (s2 / such)) 
                                                :ARG2 (m / manufacture-01 
                                                      :ARG0 (s / substantial) 
                                                      :ARG1 (p4 / product)) 
                                                :op-of (o2 / or)))) 
                              :op1 (t2 / term) 
                              :op2 (c2 / condition))))))

# ::snt permitted items of refuse include any discarded meat bones blood offal or other part of the carcase of any livestock or of any poultry or product derived therefrom or hatchery waste or eggs or egg shells
# ::tok permitted items of refuse include any discarded meat bones blood offal or other part of the carcase of any livestock or of any poultry or product derived therefrom or hatchery waste or eggs or egg shells
# ::alignments 35-36|0.5.0 34-35|0.5.0.0 33-34|0.5 32-33|0.3.0 31-32|0.4 30-31|0 28-29|0.3 26-27|0.2.0 25-26|0.2.2 24-25|0.2 23-24|0.1.1.0 22-23|0.2.1 20-21|0.1.1 19-20|0.1 18-19|0.1.0 12-13|0.0 11-12|0.2.0.0.1.1.0 9-10|0.2.0.0.1.1.0.1 8-9|0.2.0.0.1.0 7-8|0.2.0.0.1.1.0.0 5-6|0.2.0.0.1.0.0 4-5|0.2.0.0.1 3-4|0.2.0.0.0 1-2|0.2.0.0 0-1|0.2.0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:36.837
# ::node	0	waste-01	30-31
# ::node	0.0	other	12-13
# ::node	0.1	livestock	19-20
# ::node	0.1.0	any	18-19
# ::node	0.1.1	or	20-21
# ::node	0.1.1.0	poultry	23-24
# ::node	0.2	or	24-25
# ::node	0.2.0	derive-01	26-27
# ::node	0.2.0.0	item	1-2
# ::node	0.2.0.0.0	refuse-01	3-4
# ::node	0.2.0.0.1	include-01	4-5
# ::node	0.2.0.0.1.0	bone	8-9
# ::node	0.2.0.0.1.0.0	any	5-6
# ::node	0.2.0.0.1.1	permit-01	0-1
# ::node	0.2.0.0.1.1.0	or	11-12
# ::node	0.2.0.0.1.1.0.0	meat	7-8
# ::node	0.2.0.0.1.1.0.1	blood	9-10
# ::node	0.2.1	any	22-23
# ::node	0.2.2	product	25-26
# ::node	0.3	or	28-29
# ::node	0.3.0	egg	32-33
# ::node	0.4	or	31-32
# ::node	0.5	or	33-34
# ::node	0.5.0	shell	35-36
# ::node	0.5.0.0	egg	34-35
# ::root	0	waste-01
# ::edge	bone	mod	any	0.2.0.0.1.0	0.2.0.0.1.0.0	
# ::edge	derive-01	ARG0	item	0.2.0	0.2.0.0	
# ::edge	derive-01	ARG1	or	0.2.0	0.2	
# ::edge	include-01	ARG1	bone	0.2.0.0.1	0.2.0.0.1.0	
# ::edge	include-01	ARG2	item	0.2.0.0.1	0.2.0.0	
# ::edge	livestock	mod	any	0.1	0.1.0	
# ::edge	or	mod	any	0.2	0.2.1	
# ::edge	or	op1	livestock	0.1.1	0.1	
# ::edge	or	op1	meat	0.2.0.0.1.1.0	0.2.0.0.1.1.0.0	
# ::edge	or	op1	product	0.2	0.2.2	
# ::edge	or	op1	waste-01	0.3	0	
# ::edge	or	op1	waste-01	0.4	0	
# ::edge	or	op1	waste-01	0.5	0	
# ::edge	or	op2	blood	0.2.0.0.1.1.0	0.2.0.0.1.1.0.1	
# ::edge	or	op2	egg	0.3	0.3.0	
# ::edge	or	op2	poultry	0.1.1	0.1.1.0	
# ::edge	or	op2	shell	0.5	0.5.0	
# ::edge	or	op2	waste-01	0.2	0	
# ::edge	permit-01	ARG0	or	0.2.0.0.1.1	0.2.0.0.1.1.0	
# ::edge	permit-01	ARG1	include-01	0.2.0.0.1.1	0.2.0.0.1	
# ::edge	refuse-01	ARG1	item	0.2.0.0.0	0.2.0.0	
# ::edge	shell	mod	egg	0.5.0	0.5.0.0	
# ::edge	waste-01	ARG1	other	0	0.0	
# ::edge	waste-01	location	livestock	0	0.1	
(w / waste-01 
      :ARG1 (o6 / other) 
      :location (l / livestock 
            :mod (a2 / any) 
            :op-of (o5 / or 
                  :op1 (p2 / poultry))) 
      :op-of (o4 / or 
            :ARG1-of (d / derive-01 
                  :ARG0 (i2 / item 
                        :ARG1-of (r / refuse-01) 
                        :ARG2-of (i / include-01 
                              :ARG1 (b2 / bone 
                                    :mod (a3 / any)) 
                              :ARG1-of (p3 / permit-01 
                                    :ARG0 (o7 / or 
                                          :op1 (m / meat) 
                                          :op2 (b / blood)))))) 
            :mod (a / any) 
            :op1 (p / product)) 
      :op-of (o3 / or 
            :op1 (e2 / egg)) 
      :op-of (o2 / or) 
      :op-of (o / or 
            :op1 (s / shell 
                  :mod (e / egg))))

# ::snt this cultivation of the choreographic non sequitur derives partly from the music aaron coplands piano quartet which combines a forward momentum with a kind of seesawing thematic development
# ::tok this cultivation of the choreographic non sequitur derives partly from the music aaron coplands piano quartet which combines a forward momentum with a kind of seesawing thematic development
# ::alignments 27-28|0 23-24|0.1 20-21|0.0 19-20|0.0.0 14-15|0.3 11-12|0.1.0.0 8-9|0.2 1-2|0.1.0 0-1|0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:36.957
# ::node	0	develop-02	27-28
# ::node	0.0	momentum	20-21
# ::node	0.0.0	forward	19-20
# ::node	0.1	kind	23-24
# ::node	0.1.0	cultivate-01	1-2
# ::node	0.1.0.0	music	11-12
# ::node	0.1.0.1	this	0-1
# ::node	0.2	partly	8-9
# ::node	0.3	piano	14-15
# ::root	0	develop-02
# ::edge	cultivate-01	ARG0	music	0.1.0	0.1.0.0	
# ::edge	cultivate-01	mod	this	0.1.0	0.1.0.1	
# ::edge	develop-02	ARG0	momentum	0	0.0	
# ::edge	develop-02	ARG1	kind	0	0.1	
# ::edge	kind	op1	cultivate-01	0.1	0.1.0	
# ::edge	momentum	mod	forward	0.0	0.0.0	
# ::edge	partly	op1	develop-02	0.2	0	
# ::edge	piano	op1	develop-02	0.3	0	
(d / develop-02 
      :ARG0 (m / momentum 
            :mod (f / forward)) 
      :ARG1 (k / kind 
            :op1 (c / cultivate-01 
                  :ARG0 (m2 / music) 
                  :mod (t / this))) 
      :op-of (p2 / partly) 
      :op-of (p / piano))

# ::snt her majestys inspectors concluded that there were significant problems of accommodation often deriving from poor maintenance and repair in a little over half the secondary schools inspected in 198788
# ::tok her majestys inspectors concluded that there were significant problems of accommodation often deriving from poor maintenance and repair in a little over half the secondary schools inspected in 198788
# ::alignments 28-29|0.0.2.1.2+0.0.2.1.1+0.0.2.1.0+0.0.2.1 26-27|0.0.2 25-26|0.0.2.0 24-25|0.2 22-23|0.0.2.0.0 20-21|0.0.1.1.0.1 17-18|0.0.1.1.0 16-17|0.0.1.1 15-16|0.0.1 14-15|0.0.1.0 11-12|0.0.1.1.0.0 10-11|0.1.1 8-9|0.1 7-8|0.1.0 3-4|0 2-3|0.0.0+0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:37.415
# ::node	0	conclude-01	3-4
# ::node	0.0	person	2-3
# ::node	0.0.0	inspect-01	2-3
# ::node	0.0.1	maintain-01	15-16
# ::node	0.0.1.0	poor	14-15
# ::node	0.0.1.1	and	16-17
# ::node	0.0.1.1.0	repair-01	17-18
# ::node	0.0.1.1.0.0	often	11-12
# ::node	0.0.1.1.0.1	little	20-21
# ::node	0.0.2	inspect-01	26-27
# ::node	0.0.2.0	school	25-26
# ::node	0.0.2.0.0	half	22-23
# ::node	0.0.2.1	date-entity	28-29
# ::node	0.0.2.1.0	88	28-29
# ::node	0.0.2.1.1	87	28-29
# ::node	0.0.2.1.2	19	28-29
# ::node	0.1	problem	8-9
# ::node	0.1.0	significant	7-8
# ::node	0.1.1	accommodation	10-11
# ::node	0.2	secondary	24-25
# ::root	0	conclude-01
# ::edge	and	op1	maintain-01	0.0.1.1	0.0.1	
# ::edge	and	op2	repair-01	0.0.1.1	0.0.1.1.0	
# ::edge	conclude-01	ARG0	person	0	0.0	
# ::edge	conclude-01	ARG1	problem	0	0.1	
# ::edge	date-entity	day	88	0.0.2.1	0.0.2.1.0	
# ::edge	date-entity	month	87	0.0.2.1	0.0.2.1.1	
# ::edge	date-entity	year	19	0.0.2.1	0.0.2.1.2	
# ::edge	inspect-01	ARG0	person	0.0.0	0.0	
# ::edge	inspect-01	ARG0	person	0.0.2	0.0	
# ::edge	inspect-01	ARG1	school	0.0.2	0.0.2.0	
# ::edge	inspect-01	time	date-entity	0.0.2	0.0.2.1	
# ::edge	maintain-01	ARG0	person	0.0.1	0.0	
# ::edge	maintain-01	mod	poor	0.0.1	0.0.1.0	
# ::edge	problem	mod	significant	0.1	0.1.0	
# ::edge	problem	topic	accommodation	0.1	0.1.1	
# ::edge	repair-01	ARG0	often	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	repair-01	ARG1	little	0.0.1.1.0	0.0.1.1.0.1	
# ::edge	school	quant	half	0.0.2.0	0.0.2.0.0	
# ::edge	secondary	op1	conclude-01	0.2	0	
(c / conclude-01 
      :ARG0 (p3 / person 
            :ARG0-of (i2 / inspect-01) 
            :ARG0-of (m / maintain-01 
                  :mod (p / poor) 
                  :op-of (a / and 
                        :op1 (r / repair-01 
                              :ARG0 (o / often) 
                              :ARG1 (l / little)))) 
            :ARG0-of (i / inspect-01 
                  :ARG1 (s / school 
                        :quant (h / half)) 
                  :time (d / date-entity 
                        :day 88 
                        :month 87 
                        :year 19))) 
      :ARG1 (p2 / problem 
            :mod (s3 / significant) 
            :topic (a2 / accommodation)) 
      :op-of (s2 / secondary))

# ::snt the objective of costbenefit analysis is to determine whether or not the expected benefits to be derived from a project are sufficient to justify its development and operating costs
# ::tok the objective of costbenefit analysis is to determine whether or not the expected benefits to be derived from a project are sufficient to justify its development and operating costs
# ::alignments 28-29|0.0.0.0.0.0.0 27-28|0.0.0.0.0.0 26-27|0.0.0.0.0 25-26|0.0.0.0.1 23-24|0.0.0.0 21-22|0.0.0 19-20|0.0.1.0 16-17|0.0.1 13-14|0.0 12-13|0 9-10|0.0.0.2 7-8|0.0.0.1 4-5|0.0.0.1.0.0 1-2|0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:37.852
# ::node	0	expect-01	12-13
# ::node	0.0	benefit-01	13-14
# ::node	0.0.0	suffice-01	21-22
# ::node	0.0.0.0	justify-01	23-24
# ::node	0.0.0.0.0	and	26-27
# ::node	0.0.0.0.0.0	operate-01	27-28
# ::node	0.0.0.0.0.0.0	cost-01	28-29
# ::node	0.0.0.0.1	develop-02	25-26
# ::node	0.0.0.1	determine-01	7-8
# ::node	0.0.0.1.0	objective	1-2
# ::node	0.0.0.1.0.0	analyze-01	4-5
# ::node	0.0.0.2	or	9-10
# ::node	0.0.1	derive-01	16-17
# ::node	0.0.1.0	project	19-20
# ::root	0	expect-01
# ::edge	and	op1	operate-01	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	derive-01	ARG1	benefit-01	0.0.1	0.0	
# ::edge	derive-01	ARG2	project	0.0.1	0.0.1.0	
# ::edge	determine-01	ARG0	objective	0.0.0.1	0.0.0.1.0	
# ::edge	determine-01	ARG1	suffice-01	0.0.0.1	0.0.0	
# ::edge	develop-02	ARG2	justify-01	0.0.0.0.1	0.0.0.0	
# ::edge	expect-01	ARG1	benefit-01	0	0.0	
# ::edge	justify-01	ARG1	and	0.0.0.0	0.0.0.0.0	
# ::edge	objective	topic	analyze-01	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	operate-01	ARG1	cost-01	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	or	op1	suffice-01	0.0.0.2	0.0.0	
# ::edge	suffice-01	ARG0	benefit-01	0.0.0	0.0	
# ::edge	suffice-01	ARG1	justify-01	0.0.0	0.0.0.0	
(e / expect-01 
      :ARG1 (b / benefit-01 
            :ARG0-of (s / suffice-01 
                  :ARG1 (j / justify-01 
                        :ARG1 (a / and 
                              :op1 (o / operate-01 
                                    :ARG1 (c / cost-01))) 
                        :ARG2-of (d / develop-02)) 
                  :ARG1-of (d3 / determine-01 
                        :ARG0 (o3 / objective 
                              :topic (a2 / analyze-01))) 
                  :op-of (o2 / or)) 
            :ARG1-of (d2 / derive-01 
                  :ARG2 (p / project))))

# ::snt at one site it was reported that more than 50 per cent of the passwords were broken by the worm because the vast majority of users tend to pick passwords which are easily memorised or which can be derived easily for example many users employ variants of their user name
# ::tok at one site it was reported that more than 50 per cent of the passwords were broken by the worm because the vast majority of users tend to pick passwords which are easily memorised or which can be derived easily for example many users employ variants of their user name
# ::alignments 48-49|0.0.0.0+0.0.0 45-46|0.0.1.1.0.0.0 44-45|0.0.1.1.0.0 42-43|0.0.0.0.0 41-42|0.0.1.1.0 38-39|0.0.1.1 36-37|0.0.1.0 34-35|0.0.1 28-29|0.0.2 26-27|0.0 23-24|0.0.2.0 22-23|0.0.2.0.0 20-21|0 19-20|0.1.2 16-17|0.1 11-12|0.1.0.0+0.1.0 9-10|0.0.2.1 5-6|0.1.1 3-4|0.1.1.0 2-3|0.1.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:38.615
# ::node	0	cause-01	20-21
# ::node	0.0	tend-02	26-27
# ::node	0.0.0	person	48-49
# ::node	0.0.0.0	use-01	48-49
# ::node	0.0.0.0.0	many	42-43
# ::node	0.0.1	or	34-35
# ::node	0.0.1.0	possible	36-37
# ::node	0.0.1.1	derive-01	38-39
# ::node	0.0.1.1.0	example	41-42
# ::node	0.0.1.1.0.0	employ-02	44-45
# ::node	0.0.1.1.0.0.0	variant	45-46
# ::node	0.0.2	pick-01	28-29
# ::node	0.0.2.0	majority	23-24
# ::node	0.0.2.0.0	vast	22-23
# ::node	0.0.2.1	50	9-10
# ::node	0.1	break-01	16-17
# ::node	0.1.0	monetary-quantity	11-12
# ::node	0.1.0.0	cent	11-12
# ::node	0.1.1	report-01	5-6
# ::node	0.1.1.0	it	3-4
# ::node	0.1.1.1	site	2-3
# ::node	0.1.2	worm	19-20
# ::root	0	cause-01
# ::edge	break-01	ARG1	monetary-quantity	0.1	0.1.0	
# ::edge	break-01	ARG2	worm	0.1	0.1.2	
# ::edge	cause-01	ARG0	tend-02	0	0.0	
# ::edge	cause-01	ARG1	break-01	0	0.1	
# ::edge	derive-01	ARG2	example	0.0.1.1	0.0.1.1.0	
# ::edge	employ-02	ARG0	example	0.0.1.1.0.0	0.0.1.1.0	
# ::edge	employ-02	ARG1	variant	0.0.1.1.0.0	0.0.1.1.0.0.0	
# ::edge	majority	degree	vast	0.0.2.0	0.0.2.0.0	
# ::edge	monetary-quantity	unit	cent	0.1.0	0.1.0.0	
# ::edge	or	op1	possible	0.0.1	0.0.1.0	
# ::edge	or	op2	derive-01	0.0.1	0.0.1.1	
# ::edge	pick-01	ARG0	majority	0.0.2	0.0.2.0	
# ::edge	pick-01	ARG1	50	0.0.2	0.0.2.1	
# ::edge	report-01	ARG0	it	0.1.1	0.1.1.0	
# ::edge	report-01	ARG1	break-01	0.1.1	0.1	
# ::edge	report-01	location	site	0.1.1	0.1.1.1	
# ::edge	tend-02	ARG0	person	0.0	0.0.0	
# ::edge	tend-02	ARG1	or	0.0	0.0.1	
# ::edge	tend-02	ARG2	pick-01	0.0	0.0.2	
# ::edge	use-01	ARG0	person	0.0.0.0	0.0.0	
# ::edge	use-01	ARG1	many	0.0.0.0	0.0.0.0.0	
(c / cause-01 
      :ARG0 (t / tend-02 
            :ARG0 (p / person 
                  :ARG0-of (u / use-01 
                        :ARG1 (m / many))) 
            :ARG1 (o / or 
                  :op1 (p2 / possible) 
                  :op2 (d / derive-01 
                        :ARG2 (e2 / example 
                              :ARG0-of (e / employ-02 
                                    :ARG1 (v / variant))))) 
            :ARG2 (p3 / pick-01 
                  :ARG0 (m2 / majority 
                        :degree (v2 / vast)) 
                  :ARG1 50)) 
      :ARG1 (b / break-01 
            :ARG1 (m3 / monetary-quantity 
                  :unit (c2 / cent)) 
            :ARG1-of (r / report-01 
                  :ARG0 (i / it) 
                  :location (s / site)) 
            :ARG2 (w / worm)))

# ::snt the two notions of opening oneself up to the peculiar emotional resonances of a locality and the transforming of the mudane through the performance of an act on an object or environment were developed in the theories of derive drift and detournement deflection
# ::tok the two notions of opening oneself up to the peculiar emotional resonances of a locality and the transforming of the mudane through the performance of an act on an object or environment were developed in the theories of derive drift and detournement deflection
# ::alignments 40-41|0.3.0.0.1 39-40|0.3.0.0 38-39|0.3.0.0.0 36-37|0.3.0 33-34|0.3 31-32|0.3.1.3 30-31|0.3.1 29-30|0.3.1.2 26-27|0.3.1.1 23-24|0.3.1.0 15-16|0 10-11|0.2 9-10|0.1 5-6|0.0.0 4-5|0.0 2-3|0.0.1 1-2|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:38.985
# ::node	0	and	15-16
# ::node	0.0	open-01	4-5
# ::node	0.0.0	oneself	5-6
# ::node	0.0.1	notion	2-3
# ::node	0.0.1.0	2	1-2
# ::node	0.1	peculiar-41	9-10
# ::node	0.2	emotion	10-11
# ::node	0.3	develop-02	33-34
# ::node	0.3.0	theory	36-37
# ::node	0.3.0.0	drift-01	39-40
# ::node	0.3.0.0.0	derive-01	38-39
# ::node	0.3.0.0.1	and	40-41
# ::node	0.3.1	or	30-31
# ::node	0.3.1.0	perform-01	23-24
# ::node	0.3.1.1	act-02	26-27
# ::node	0.3.1.2	object	29-30
# ::node	0.3.1.3	environment	31-32
# ::root	0	and
# ::edge	act-02	ARG1	or	0.3.1.1	0.3.1	
# ::edge	and	op1	drift-01	0.3.0.0.1	0.3.0.0	
# ::edge	and	op1	emotion	0	0.2	
# ::edge	and	op2	develop-02	0	0.3	
# ::edge	derive-01	ARG1	drift-01	0.3.0.0.0	0.3.0.0	
# ::edge	develop-02	ARG1	theory	0.3	0.3.0	
# ::edge	notion	purpose	open-01	0.0.1	0.0	
# ::edge	notion	quant	2	0.0.1	0.0.1.0	
# ::edge	open-01	ARG0	and	0.0	0	
# ::edge	open-01	ARG1	oneself	0.0	0.0.0	
# ::edge	or	op1	object	0.3.1	0.3.1.2	
# ::edge	or	op2	environment	0.3.1	0.3.1.3	
# ::edge	or	op3	develop-02	0.3.1	0.3	
# ::edge	peculiar-41	ARG1	and	0.1	0	
# ::edge	perform-01	ARG1	or	0.3.1.0	0.3.1	
# ::edge	theory	topic	drift-01	0.3.0	0.3.0.0	
(a3 / and 
      :ARG0-of (o4 / open-01 
            :ARG1 (o3 / oneself) 
            :purpose-of (n / notion 
                  :quant 2)) 
      :ARG1-of (p2 / peculiar-41) 
      :op1 (e2 / emotion) 
      :op2 (d3 / develop-02 
            :ARG1 (t / theory 
                  :topic (d / drift-01 
                        :ARG1-of (d2 / derive-01) 
                        :op-of (a / and))) 
            :op-of (o / or 
                  :ARG1-of (p / perform-01) 
                  :ARG1-of (a2 / act-02) 
                  :op1 (o2 / object) 
                  :op2 (e / environment))))

# ::snt the derive is defined by debord as a mode of experimental behaviour linked to the conditions of urban society a technique of transient passage through varied ambiences ellip
# ::tok the derive is defined by debord as a mode of experimental behaviour linked to the conditions of urban society a technique of transient passage through varied ambiences ellip
# ::alignments 25-26|0.1.0.0 23-24|0 20-21|0.0 18-19|0.1.0.1.0.1.0.0 17-18|0.1.0.1.0.1.0.0.0 15-16|0.1.0.1.0.1.0 12-13|0.1.0.1.0.1 11-12|0.1.0.1.0 10-11|0.1.0.1.0.0 8-9|0.1.0.1 3-4|0.1.0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:39.283
# ::node	0	pass-01	23-24
# ::node	0.0	technique	20-21
# ::node	0.1	derive-01	1-2
# ::node	0.1.0	define-01	3-4
# ::node	0.1.0.0	vary-01	25-26
# ::node	0.1.0.1	mode	8-9
# ::node	0.1.0.1.0	behave-01	11-12
# ::node	0.1.0.1.0.0	experiment-01	10-11
# ::node	0.1.0.1.0.1	link-01	12-13
# ::node	0.1.0.1.0.1.0	condition	15-16
# ::node	0.1.0.1.0.1.0.0	society	18-19
# ::node	0.1.0.1.0.1.0.0.0	urban	17-18
# ::root	0	pass-01
# ::edge	behave-01	ARG1	experiment-01	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	condition	poss	society	0.1.0.1.0.1.0	0.1.0.1.0.1.0.0	
# ::edge	define-01	ARG1	derive-01	0.1.0	0.1	
# ::edge	define-01	duration	mode	0.1.0	0.1.0.1	
# ::edge	derive-01	ARG1	pass-01	0.1	0	
# ::edge	link-01	ARG1	behave-01	0.1.0.1.0.1	0.1.0.1.0	
# ::edge	link-01	ARG2	condition	0.1.0.1.0.1	0.1.0.1.0.1.0	
# ::edge	mode	topic	behave-01	0.1.0.1	0.1.0.1.0	
# ::edge	pass-01	ARG1	technique	0	0.0	
# ::edge	society	mod	urban	0.1.0.1.0.1.0.0	0.1.0.1.0.1.0.0.0	
# ::edge	vary-01	ARG1	define-01	0.1.0.0	0.1.0	
(p / pass-01 
      :ARG1 (t / technique) 
      :ARG1-of (d2 / derive-01 
            :ARG1-of (d / define-01 
                  :ARG1-of (v / vary-01) 
                  :duration (m / mode 
                        :topic (b / behave-01 
                              :ARG1 (e / experiment-01) 
                              :ARG1-of (l / link-01 
                                    :ARG2 (c / condition 
                                          :poss (s / society 
                                                :mod (u / urban)))))))))

# ::snt   the derive is represented by documentation of a walk made in venice in 1957 by ralph rumney the british founder of the psychogeographical society
# ::tok the derive is represented by documentation of a walk made in venice in 1957 by ralph rumney the british founder of the psychogeographical society
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:39.283
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt in a gauche move to emulate the derive they have laid pathways of adhesive tape to guide the unsuspecting viewer from one display to another these pathways usually end by running up a wall or into a dead corner
# ::tok in a gauche move to emulate the derive they have laid pathways of adhesive tape to guide the unsuspecting viewer from one display to another these pathways usually end by running up a wall or into a dead corner
# ::alignments 38-39|0.0.1.1.0.0 34-35|0.0.1.1.0 33-34|0.0.1.1 27-28|0.0.1.2 24-25|0.0.1.0 22-23|0.0.1 16-17|0.0 14-15|0 10-11|0.0.0.0 8-9|0.0.0 7-8|0.0.0.0.0 5-6|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:11:39.378
# ::node	0	tape	14-15
# ::node	0.0	guide-01	16-17
# ::node	0.0.0	they	8-9
# ::node	0.0.0.0	lay-02	10-11
# ::node	0.0.0.0.0	derive-01	7-8
# ::node	0.0.0.0.0.0	emulate-01	5-6
# ::node	0.0.1	display-01	22-23
# ::node	0.0.1.0	another	24-25
# ::node	0.0.1.1	wall	33-34
# ::node	0.0.1.1.0	or	34-35
# ::node	0.0.1.1.0.0	corner	38-39
# ::node	0.0.1.2	usual	27-28
# ::root	0	tape
(t / tape 
      :ARG1-of (g / guide-01 
            :ARG0 (t2 / they 
                  :ARG0-of (l / lay-02 
                        :ARG1 (d2 / derive-01 
                              :ARG1-of (e / emulate-01)))) 
            :manner (d / display-01 
                  :ARG0 (a / another) 
                  :ARG1 (w / wall 
                        :op-of (o / or 
                              :op1 (c / corner))) 
                  :mod (u / usual))))

