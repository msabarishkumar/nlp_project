# ::snt labour and liberal county councillors have set spending levels far in excess of what the department of environment considered reasonable or necessary and far in excess of the budgets proposed year on year by the conservative group on the county council
# ::tok labour and liberal county councillors have set spending levels far in excess of what the department of environment considered reasonable or necessary and far in excess of the budgets proposed year on year by the conservative group on the county council
# ::alignments 40-41|0.1.0.3.1 39-40|0.1.0.3.1.0 36-37|0.1.0.3 35-36|0.1.0.3.2 32-33|0.1.0.3.0 30-31|0.1.0.0.0.0 29-30|0.1.0.0.0 28-29|0.1.0.0.1.0 25-26|0.1.0.0.1 23-24|0.1.1 22-23|0 20-21|0.1 19-20|0.1.0.1 18-19|0.1.0 17-18|0.1.0.0.2 15-16|0.1.0.0 11-12|0.1.0.2 9-10|0.1.0.2.0 8-9|0.0.2.0 7-8|0.0.2 3-4|0.0.1.0 2-3|0.0.1 1-2|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:01.262
# ::node	0	and	22-23
# ::node	0.0	and	1-2
# ::node	0.0.0	labour	0-1
# ::node	0.0.1	liberal	2-3
# ::node	0.0.1.0	county	3-4
# ::node	0.0.2	spend-01	7-8
# ::node	0.0.2.0	level	8-9
# ::node	0.1	or	20-21
# ::node	0.1.0	consider-01	18-19
# ::node	0.1.0.0	department	15-16
# ::node	0.1.0.0.0	propose-01	29-30
# ::node	0.1.0.0.0.0	year	30-31
# ::node	0.1.0.0.1	exceed-01	25-26
# ::node	0.1.0.0.1.0	budget	28-29
# ::node	0.1.0.0.2	environment	17-18
# ::node	0.1.0.1	reasonable	19-20
# ::node	0.1.0.2	exceed-01	11-12
# ::node	0.1.0.2.0	far	9-10
# ::node	0.1.0.3	group	36-37
# ::node	0.1.0.3.0	year	32-33
# ::node	0.1.0.3.1	council	40-41
# ::node	0.1.0.3.1.0	county	39-40
# ::node	0.1.0.3.2	conservative	35-36
# ::node	0.1.1	far	23-24
# ::root	0	and
(a / and 
      :op-of (a2 / and 
            :op1 (l3 / labour) 
            :op2 (l2 / liberal 
                  :mod-of (c5 / county)) 
            :op3 (s / spend-01 
                  :mod-of (l / level))) 
      :op-of (o / or 
            :ARG2-of (c4 / consider-01 
                  :ARG0 (d / department 
                        :ARG0-of (p / propose-01 
                              :ARG1 (y2 / year)) 
                        :ARG2-of (e / exceed-01 
                              :ARG1 (b / budget)) 
                        :part-of (e2 / environment)) 
                  :ARG1 (r / reasonable) 
                  :ARG1-of (e3 / exceed-01 
                        :manner (f2 / far)) 
                  :prep-under (g / group 
                        :location (y / year) 
                        :location (c / council 
                              :mod (c2 / county)) 
                        :mod (c3 / conservative))) 
            :op1 (f / far)))

# ::snt if however your account is overdrawn we may require any amount outstanding in excess of one months transfer to be repaid
# ::tok if however your account is overdrawn we may require any amount outstanding in excess of one months transfer to be repaid
# ::alignments 20-21|0 17-18|0.1 16-17|0.0.0+0.0 13-14|0.1.1 11-12|0.2 10-11|0.1.0.0.1 9-10|0.1.0.0.1.0 8-9|0.1.0.0 7-8|0.1.0.0.2.0+0.1.0.0.2 6-7|0.1.0 3-4|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:02.054
# ::node	0	repay-01	20-21
# ::node	0.0	temporal-quantity	16-17
# ::node	0.0.0	month	16-17
# ::node	0.1	transfer-01	17-18
# ::node	0.1.0	we	6-7
# ::node	0.1.0.0	require-01	8-9
# ::node	0.1.0.0.0	account	3-4
# ::node	0.1.0.0.1	amount	10-11
# ::node	0.1.0.0.1.0	any	9-10
# ::node	0.1.0.0.2	date-entity	7-8
# ::node	0.1.0.0.2.0	5	7-8
# ::node	0.1.1	exceed-01	13-14
# ::node	0.2	outstanding	11-12
# ::root	0	repay-01
# ::edge	amount	mod	any	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	date-entity	month	5	0.1.0.0.2	0.1.0.0.2.0	
# ::edge	repay-01	ARG1	temporal-quantity	0	0.0	
# ::edge	repay-01	manner	outstanding	0	0.2	
# ::edge	require-01	ARG0	we	0.1.0.0	0.1.0	
# ::edge	require-01	ARG1	account	0.1.0.0	0.1.0.0.0	
# ::edge	require-01	ARG2	amount	0.1.0.0	0.1.0.0.1	
# ::edge	require-01	mod	date-entity	0.1.0.0	0.1.0.0.2	
# ::edge	temporal-quantity	unit	month	0.0	0.0.0	
# ::edge	transfer-01	ARG0	we	0.1	0.1.0	
# ::edge	transfer-01	ARG1	exceed-01	0.1	0.1.1	
# ::edge	transfer-01	ARG2	repay-01	0.1	0	
(r / repay-01 
      :ARG1 (t2 / temporal-quantity 
            :unit (m / month)) 
      :ARG2-of (t / transfer-01 
            :ARG0 (w / we 
                  :ARG0-of (r2 / require-01 
                        :ARG1 (a3 / account) 
                        :ARG2 (a / amount 
                              :mod (a2 / any)) 
                        :mod (d / date-entity 
                              :month 5))) 
            :ARG1 (e / exceed-01)) 
      :manner (o / outstanding))

# ::snt as his education had included latin but no greek his acquaintance with the excesses of the ancients was fragmentary but in any case it was all different for them
# ::tok as his education had included latin but no greek his acquaintance with the excesses of the ancients was fragmentary but in any case it was all different for them
# ::alignments 26-27|0.0 25-26|0.0.2.0.0.0 23-24|0.0.1 22-23|0.0.0 21-22|0.0.0.0 19-20|0 10-11|0.1 7-8|0.0.2.0.0.1 6-7|0.0.2 4-5|0.0.2.0 2-3|0.0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:02.298
# ::node	0	contrast-01	19-20
# ::node	0.0	differ-02	26-27
# ::node	0.0.0	case	22-23
# ::node	0.0.0.0	any	21-22
# ::node	0.0.1	it	23-24
# ::node	0.0.2	contrast-01	6-7
# ::node	0.0.2.0	include-01	4-5
# ::node	0.0.2.0.0	educate-01	2-3
# ::node	0.0.2.0.0.0	all	25-26
# ::node	0.0.2.0.0.1	-	7-8
# ::node	0.1	acquaint-01	10-11
# ::root	0	contrast-01
# ::edge	acquaint-01	ARG1	contrast-01	0.1	0	
# ::edge	case	mod	any	0.0.0	0.0.0.0	
# ::edge	contrast-01	ARG1	differ-02	0	0.0	
# ::edge	contrast-01	ARG1	differ-02	0.0.2	0.0	
# ::edge	differ-02	ARG0	case	0.0	0.0.0	
# ::edge	differ-02	ARG1	it	0.0	0.0.1	
# ::edge	educate-01	ARG0	all	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	educate-01	ARG1	-	0.0.2.0.0	0.0.2.0.0.1	
# ::edge	include-01	ARG1	contrast-01	0.0.2.0	0.0.2	
# ::edge	include-01	ARG2	educate-01	0.0.2.0	0.0.2.0.0	
(c2 / contrast-01 
      :ARG1 (d / differ-02 
            :ARG0 (c / case 
                  :mod (a2 / any)) 
            :ARG1 (i / it) 
            :ARG1-of (c3 / contrast-01 
                  :ARG1-of (i2 / include-01 
                        :ARG2 (e / educate-01 
                              :ARG0 (a / all) 
                              :ARG1 (- / -))))) 
      :ARG1-of (a3 / acquaint-01))

# ::snt english officials have reacted to press excesses with an amateurish petulance
# ::tok english officials have reacted to press excesses with an amateurish petulance
# ::alignments 5-6|0.0 3-4|0 1-2|0.0.0.1+0.0.0 0-1|0.0.0.0.0.0+0.0.0.0.0+0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:02.394
# ::node	0	react-01	3-4
# ::node	0.0	press	5-6
# ::node	0.0.0	have-org-role-91	1-2
# ::node	0.0.0.0	language	0-1
# ::node	0.0.0.0.0	name	0-1
# ::node	0.0.0.0.0.0	"English"	0-1
# ::node	0.0.0.1	official	1-2
# ::root	0	react-01
# ::edge	have-org-role-91	ARG1	language	0.0.0	0.0.0.0	
# ::edge	have-org-role-91	ARG2	official	0.0.0	0.0.0.1	
# ::edge	language	name	name	0.0.0.0	0.0.0.0.0	
# ::edge	name	op1	"English"	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	press	domain	have-org-role-91	0.0	0.0.0	
# ::edge	react-01	ARG1	press	0	0.0	
(r / react-01 
      :ARG1 (p / press 
            :domain (h / have-org-role-91 
                  :ARG1 (l / language 
                        :name (n / name 
                              :op1 "English")) 
                  :ARG2 (o / official))))

# ::snt this demonstrates how property values have risen and if this rate of increase continued over the coming 10 years then by the year 2000 the average house price would be in excess of 160000
# ::tok this demonstrates how property values have risen and if this rate of increase continued over the coming 10 years then by the year 2000 the average house price would be in excess of 160000
# ::alignments 33-34|0.0.0.1.2.1.2+0.0.0.1.2.1.1+0.0.0.1.2.1.0+0.0.0.1.2.1 31-32|0.0.0.1.2 27-28|0.0.0.0.0+0.0.0.0 26-27|0.0.0.0.0.0 23-24|0.0.0.1.0.2.0+0.0.0.1.0.2 22-23|0.0.0.1.0.1 19-20|0.0.0.1.1.2 18-19|0.0.0.1.2.0.0.0+0.0.0.1.2.0.0 17-18|0.0.0.1.2.0 13-14|0.0.0.1.1 12-13|0 10-11|0.0.0.1.1.1 9-10|0.0.0.1.1.1.0 7-8|0.0.0.1 6-7|0.0.0 4-5|0.0 3-4|0.0.0.1.1.0 1-2|0.0.0.1.0 0-1|0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:04.142
# ::node	0	increase-01	12-13
# ::node	0.0	value	4-5
# ::node	0.0.0	rise-01	6-7
# ::node	0.0.0.0	thing	27-28
# ::node	0.0.0.0.0	price-01	27-28
# ::node	0.0.0.0.0.0	house	26-27
# ::node	0.0.0.1	and	7-8
# ::node	0.0.0.1.0	demonstrate-01	1-2
# ::node	0.0.0.1.0.0	this	0-1
# ::node	0.0.0.1.0.1	year	22-23
# ::node	0.0.0.1.0.2	date-entity	23-24
# ::node	0.0.0.1.0.2.0	2000	23-24
# ::node	0.0.0.1.1	continue-01	13-14
# ::node	0.0.0.1.1.0	property	3-4
# ::node	0.0.0.1.1.1	rate	10-11
# ::node	0.0.0.1.1.1.0	this	9-10
# ::node	0.0.0.1.1.2	then	19-20
# ::node	0.0.0.1.2	exceed-01	31-32
# ::node	0.0.0.1.2.0	10	17-18
# ::node	0.0.0.1.2.0.0	temporal-quantity	18-19
# ::node	0.0.0.1.2.0.0.0	year	18-19
# ::node	0.0.0.1.2.1	date-entity	33-34
# ::node	0.0.0.1.2.1.0	0	33-34
# ::node	0.0.0.1.2.1.1	0	33-34
# ::node	0.0.0.1.2.1.2	16	33-34
# ::root	0	increase-01
# ::edge	and	op1	demonstrate-01	0.0.0.1	0.0.0.1.0	
# ::edge	and	op2	rise-01	0.0.0.1	0.0.0	
# ::edge	and	op3	continue-01	0.0.0.1	0.0.0.1.1	
# ::edge	and	op4	exceed-01	0.0.0.1	0.0.0.1.2	
# ::edge	continue-01	ARG0	property	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	continue-01	ARG1	rate	0.0.0.1.1	0.0.0.1.1.1	
# ::edge	continue-01	manner	then	0.0.0.1.1	0.0.0.1.1.2	
# ::edge	date-entity	day	0	0.0.0.1.2.1	0.0.0.1.2.1.0	
# ::edge	date-entity	month	0	0.0.0.1.2.1	0.0.0.1.2.1.1	
# ::edge	date-entity	op1	demonstrate-01	0.0.0.1.0.2	0.0.0.1.0	
# ::edge	date-entity	year	16	0.0.0.1.2.1	0.0.0.1.2.1.2	
# ::edge	date-entity	year	2000	0.0.0.1.0.2	0.0.0.1.0.2.0	
# ::edge	demonstrate-01	ARG1	this	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	exceed-01	ARG0	10	0.0.0.1.2	0.0.0.1.2.0	
# ::edge	exceed-01	time	date-entity	0.0.0.1.2	0.0.0.1.2.1	
# ::edge	increase-01	ARG1	value	0	0.0	
# ::edge	price-01	ARG1	house	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	price-01	ARG2	thing	0.0.0.0.0	0.0.0.0	
# ::edge	rate	mod	this	0.0.0.1.1.1	0.0.0.1.1.1.0	
# ::edge	rise-01	ARG0	thing	0.0.0	0.0.0.0	
# ::edge	rise-01	ARG1	value	0.0.0	0.0	
# ::edge	temporal-quantity	quant	10	0.0.0.1.2.0.0	0.0.0.1.2.0	
# ::edge	temporal-quantity	unit	year	0.0.0.1.2.0.0	0.0.0.1.2.0.0.0	
# ::edge	year	op1	demonstrate-01	0.0.0.1.0.1	0.0.0.1.0	
(i / increase-01 
      :ARG1 (v / value 
            :ARG1-of (r2 / rise-01 
                  :ARG0 (t / thing 
                        :ARG2-of (p / price-01 
                              :ARG1 (h / house))) 
                  :op-of (a / and 
                        :op1 (d3 / demonstrate-01 
                              :ARG1 (t5 / this) 
                              :op-of (y / year) 
                              :op-of (d2 / date-entity 
                                    :year 2000)) 
                        :op2 (c / continue-01 
                              :ARG0 (p2 / property) 
                              :ARG1 (r / rate 
                                    :mod (t4 / this)) 
                              :manner (t2 / then)) 
                        :op3 (e / exceed-01 
                              :ARG0 (12 / 10 
                                    :quant-of (t3 / temporal-quantity 
                                          :unit (y2 / year))) 
                              :time (d / date-entity 
                                    :day 0 
                                    :month 0 
                                    :year 16))))))

# ::snt another ruse was to offer houses at low rent or for sale or to offer signingon fees far in excess of the 10 theoretically permitted by the fa
# ::tok another ruse was to offer houses at low rent or for sale or to offer signingon fees far in excess of the 10 theoretically permitted by the fa
# ::alignments 24-25|0.1 23-24|0 22-23|0.1.0 19-20|0.0 17-18|0.0.0.1 16-17|0.0.0.0 14-15|0.0.0 12-13|0.0.0.2 9-10|0.0.0.2.0.0 8-9|0.0.0.2.1 7-8|0.0.0.2.0.0.0 5-6|0.0.0.2.0.1 4-5|0.0.0.2.0 0-1|0.0.0.2.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:04.281
# ::node	0	theoretical	23-24
# ::node	0.0	exceed-01	19-20
# ::node	0.0.0	offer-01	14-15
# ::node	0.0.0.0	fee	16-17
# ::node	0.0.0.1	far	17-18
# ::node	0.0.0.2	or	12-13
# ::node	0.0.0.2.0	offer-01	4-5
# ::node	0.0.0.2.0.0	or	9-10
# ::node	0.0.0.2.0.0.0	low	7-8
# ::node	0.0.0.2.0.1	house	5-6
# ::node	0.0.0.2.1	rent-01	8-9
# ::node	0.0.0.2.1.0	another	0-1
# ::node	0.1	permit-01	24-25
# ::node	0.1.0	10	22-23
# ::root	0	theoretical
(t / theoretical 
      :ARG1-of (e / exceed-01 
            :ARG2-of (o / offer-01 
                  :ARG1 (f2 / fee) 
                  :location (f / far) 
                  :op-of (o2 / or 
                        :op1 (o4 / offer-01 
                              :ARG0 (o3 / or 
                                    :op1 (l / low)) 
                              :ARG1 (h / house)) 
                        :op2 (r / rent-01 
                              :ARG1 (a / another))))) 
      :ARG1-of (p / permit-01 
            :quant 10))

# ::snt fanaticism or fundamentalism are precisely the kind of excess which dies out because of the evolutionary process
# ::tok fanaticism or fundamentalism are precisely the kind of excess which dies out because of the evolutionary process
# ::alignments 16-17|0.0 12-13|0 10-11|0.1 8-9|0.1.1 6-7|0.1.0 4-5|0.1.1.0 2-3|0.1.0.0.0 1-2|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:04.419
# ::node	0	cause-01	12-13
# ::node	0.0	process	16-17
# ::node	0.1	die-01	10-11
# ::node	0.1.0	kind	6-7
# ::node	0.1.0.0	or	1-2
# ::node	0.1.0.0.0	fundamentalism	2-3
# ::node	0.1.1	exceed-01	8-9
# ::node	0.1.1.0	precise	4-5
# ::root	0	cause-01
# ::edge	cause-01	ARG0	process	0	0.0	
# ::edge	cause-01	ARG1	die-01	0	0.1	
# ::edge	die-01	ARG0	kind	0.1	0.1.0	
# ::edge	die-01	ARG1	exceed-01	0.1	0.1.1	
# ::edge	exceed-01	ARG0	precise	0.1.1	0.1.1.0	
# ::edge	or	op1	fundamentalism	0.1.0.0	0.1.0.0.0	
# ::edge	or	op2	kind	0.1.0.0	0.1.0	
(c / cause-01 
      :ARG0 (p / process) 
      :ARG1 (d / die-01 
            :ARG0 (k / kind 
                  :op-of (o / or 
                        :op1 (f / fundamentalism))) 
            :ARG1 (e / exceed-01 
                  :ARG0 (p2 / precise))))

# ::snt newcastle breweries helped the stock market resist the worst excesses of bank rate blues yesterday
# ::tok newcastle breweries helped the stock market resist the worst excesses of bank rate blues yesterday
# ::alignments 14-15|0.0.0.2 12-13|0.0.0.1.0 11-12|0.0.0.1 8-9|0 6-7|0.0.0 5-6|0.0.0.0 4-5|0.0.0.0.0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:04.619
# ::node	0	bad	8-9
# ::node	0.0	help-01	2-3
# ::node	0.0.0	resist-01	6-7
# ::node	0.0.0.0	market	5-6
# ::node	0.0.0.0.0	stock	4-5
# ::node	0.0.0.1	bank	11-12
# ::node	0.0.0.1.0	rate	12-13
# ::node	0.0.0.2	yesterday	14-15
# ::root	0	bad
(b2 / bad 
      :ARG0-of (h / help-01 
            :ARG1 (r2 / resist-01 
                  :ARG0 (m / market 
                        :mod (s / stock)) 
                  :ARG1 (b / bank 
                        :mod-of (r / rate)) 
                  :time (y / yesterday))))

# ::snt for anyone wishing to walk off the excesses of the festive season the national trust and the ramblers association are once again organising a week of christmas walks
# ::tok for anyone wishing to walk off the excesses of the festive season the national trust and the ramblers association are once again organising a week of christmas walks
# ::alignments 27-28|0.0.0.0 24-25|0.0.0 22-23|0.0 21-22|0.0.1 20-21|0.0.1.0 18-19|0.2 15-16|0 14-15|0.1 13-14|0.1.0 11-12|0.0.0.0.0.0 5-6|0.0.0.0.0.2 4-5|0.0.0.0.0 2-3|0.0.0.0.0.1 1-2|0.0.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:04.837
# ::node	0	and	15-16
# ::node	0.0	organize-01	22-23
# ::node	0.0.0	week	24-25
# ::node	0.0.0.0	walk-01	27-28
# ::node	0.0.0.0.0	walk-01	4-5
# ::node	0.0.0.0.0.0	season	11-12
# ::node	0.0.0.0.0.1	wish-01	2-3
# ::node	0.0.0.0.0.1.0	anyone	1-2
# ::node	0.0.0.0.0.2	off	5-6
# ::node	0.0.1	again	21-22
# ::node	0.0.1.0	once	20-21
# ::node	0.1	trust-01	14-15
# ::node	0.1.0	nation	13-14
# ::node	0.2	associate-01	18-19
# ::root	0	and
# ::edge	again	mod	once	0.0.1	0.0.1.0	
# ::edge	and	op1	trust-01	0	0.1	
# ::edge	and	op2	associate-01	0	0.2	
# ::edge	organize-01	ARG0	and	0.0	0	
# ::edge	organize-01	ARG1	week	0.0	0.0.0	
# ::edge	organize-01	mod	again	0.0	0.0.1	
# ::edge	trust-01	mod	nation	0.1	0.1.0	
# ::edge	walk-01	ARG0	week	0.0.0.0	0.0.0	
# ::edge	walk-01	ARG1	season	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	walk-01	ARG1	walk-01	0.0.0.0	0.0.0.0.0	
# ::edge	walk-01	direction	off	0.0.0.0.0	0.0.0.0.0.2	
# ::edge	wish-01	ARG0	anyone	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	wish-01	ARG1	walk-01	0.0.0.0.0.1	0.0.0.0.0	
(a3 / and 
      :ARG0-of (o / organize-01 
            :ARG1 (w2 / week 
                  :ARG0-of (w / walk-01 
                        :ARG1 (w3 / walk-01 
                              :ARG1 (s / season) 
                              :ARG1-of (w4 / wish-01 
                                    :ARG0 (a4 / anyone)) 
                              :direction (o3 / off)))) 
            :mod (a / again 
                  :mod (o2 / once))) 
      :op1 (t / trust-01 
            :mod (n / nation)) 
      :op2 (a2 / associate-01))

# ::snt of course if there was a sudden upsurge in industrial activity and demand that situation could be reversed but international trends clearly dont suggest any dramatic increase in industrial production so we have an excess of electricity demand at the moment
# ::tok of course if there was a sudden upsurge in industrial activity and demand that situation could be reversed but international trends clearly dont suggest any dramatic increase in industrial production so we have an excess of electricity demand at the moment
# ::alignments 40-41|0.0.0.0.1.1 37-38|0.0.0.0.1 36-37|0.0.0.0.1.0 34-35|0.0.0.0 31-32|0.0.0 30-31|0.0.0.0.2 29-30|0.0.1 28-29|0.0.1.0 26-27|0.0.1.1 25-26|0.0.1.1.1 24-25|0.0.1.1.2 23-24|0.0 21-22|0.0.0.0.0 20-21|0.0.1.1.0 19-20|0.0.1.1.0.0 18-19|0 17-18|0.1 15-16|0.1.2 14-15|0.1.1 12-13|0.1.0.1.0 11-12|0.1.0.1 10-11|0.1.0.0 9-10|0.1.0.1.0.0 7-8|0.1.0 6-7|0.1.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:06.266
# ::node	0	contrast-01	18-19
# ::node	0.0	suggest-01	23-24
# ::node	0.0.0	we	31-32
# ::node	0.0.0.0	exceed-01	34-35
# ::node	0.0.0.0.0	clear	21-22
# ::node	0.0.0.0.1	demand-01	37-38
# ::node	0.0.0.0.1.0	electricity	36-37
# ::node	0.0.0.0.1.1	moment	40-41
# ::node	0.0.0.0.2	so	30-31
# ::node	0.0.1	produce-01	29-30
# ::node	0.0.1.0	industry	28-29
# ::node	0.0.1.1	increase-01	26-27
# ::node	0.0.1.1.0	trend	20-21
# ::node	0.0.1.1.0.0	international	19-20
# ::node	0.0.1.1.1	dramatic	25-26
# ::node	0.0.1.1.2	any	24-25
# ::node	0.1	reverse-01	17-18
# ::node	0.1.0	upsurge-00	7-8
# ::node	0.1.0.0	activity	10-11
# ::node	0.1.0.1	and	11-12
# ::node	0.1.0.1.0	demand-01	12-13
# ::node	0.1.0.1.0.0	industry	9-10
# ::node	0.1.0.2	sudden	6-7
# ::node	0.1.1	situation	14-15
# ::node	0.1.2	possible	15-16
# ::root	0	contrast-01
# ::edge	and	op1	demand-01	0.1.0.1	0.1.0.1.0	
# ::edge	contrast-01	ARG1	suggest-01	0	0.0	
# ::edge	contrast-01	ARG2	reverse-01	0	0.1	
# ::edge	demand-01	ARG0	electricity	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	demand-01	ARG1	industry	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	demand-01	ARG1	moment	0.0.0.0.1	0.0.0.0.1.1	
# ::edge	exceed-01	ARG0	we	0.0.0.0	0.0.0	
# ::edge	exceed-01	ARG1	clear	0.0.0.0	0.0.0.0.0	
# ::edge	exceed-01	ARG2	demand-01	0.0.0.0	0.0.0.0.1	
# ::edge	increase-01	ARG1	trend	0.0.1.1	0.0.1.1.0	
# ::edge	increase-01	manner	dramatic	0.0.1.1	0.0.1.1.1	
# ::edge	increase-01	mod	any	0.0.1.1	0.0.1.1.2	
# ::edge	increase-01	purpose	produce-01	0.0.1.1	0.0.1	
# ::edge	possible	domain	reverse-01	0.1.2	0.1	
# ::edge	produce-01	ARG0	industry	0.0.1	0.0.1.0	
# ::edge	reverse-01	ARG0	upsurge-00	0.1	0.1.0	
# ::edge	reverse-01	ARG1	situation	0.1	0.1.1	
# ::edge	so	op1	exceed-01	0.0.0.0.2	0.0.0.0	
# ::edge	suggest-01	ARG0	we	0.0	0.0.0	
# ::edge	suggest-01	ARG1	produce-01	0.0	0.0.1	
# ::edge	trend	mod	international	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	upsurge-00	ARG1	activity	0.1.0	0.1.0.0	
# ::edge	upsurge-00	ARG2	and	0.1.0	0.1.0.1	
# ::edge	upsurge-00	manner	sudden	0.1.0	0.1.0.2	
(c2 / contrast-01 
      :ARG1 (s2 / suggest-01 
            :ARG0 (w / we 
                  :ARG0-of (e2 / exceed-01 
                        :ARG1 (c / clear) 
                        :ARG2 (d / demand-01 
                              :ARG0 (e / electricity) 
                              :ARG1 (m / moment)) 
                        :op-of (s / so))) 
            :ARG1 (p / produce-01 
                  :ARG0 (i / industry) 
                  :purpose-of (i2 / increase-01 
                        :ARG1 (t / trend 
                              :mod (i3 / international)) 
                        :manner (d2 / dramatic) 
                        :mod (a / any)))) 
      :ARG2 (r / reverse-01 
            :ARG0 (u / upsurge-00 
                  :ARG1 (a3 / activity) 
                  :ARG2 (a2 / and 
                        :op1 (d3 / demand-01 
                              :ARG1 (i4 / industry))) 
                  :manner (s4 / sudden)) 
            :ARG1 (s3 / situation) 
            :domain-of (p2 / possible)))

# ::snt 14 fourteen per cent of the publishers net receipts on all copies sold in excess of 10000 copies   students activity books classroom version dash, 16 sixteen per cent of the publishers net receipts on all copies sold in excess of 50000 copies   teachers video guide dash, 12 twelve per cent of the publishers net receipts on all units sold in excess of 5000 units
# ::tok 14 fourteen per cent of the publishers net receipts on all copies sold in excess of 10000 copies students activity books classroom version dash , 16 sixteen per cent of the publishers net receipts on all copies sold in excess of 50000 copies teachers video guide dash , 12 twelve per cent of the publishers net receipts on all units sold in excess of 5000 units
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:06.268
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt we save too little therefore we spend too much runs the argument the overspending is the exact counterpart of the excess of imports over exports
# ::tok we save too little therefore we spend too much runs the argument the overspending is the exact counterpart of the excess of imports over exports
# ::alignments 24-25|0.0.0 22-23|0.0.0.0 20-21|0.0.0.0.1 17-18|0.0 16-17|0.0.1 11-12|0 8-9|0.0.0.0.0.0.0.1 7-8|0.0.0.0.0.0.0.1.0 6-7|0.0.0.0.0.0.0 5-6|0.0.0.0.0.0.0.0 3-4|0.0.0.0.0.1.0 2-3|0.0.0.0.0.1 1-2|0.0.0.0.0 0-1|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:06.901
# ::node	0	argue-01	11-12
# ::node	0.0	country	17-18
# ::node	0.0.0	export-01	24-25
# ::node	0.0.0.0	import-01	22-23
# ::node	0.0.0.0.0	save-02	1-2
# ::node	0.0.0.0.0.0	we	0-1
# ::node	0.0.0.0.0.0.0	spend-01	6-7
# ::node	0.0.0.0.0.0.0.0	we	5-6
# ::node	0.0.0.0.0.0.0.1	much	8-9
# ::node	0.0.0.0.0.0.0.1.0	too	7-8
# ::node	0.0.0.0.0.1	too	2-3
# ::node	0.0.0.0.0.1.0	little	3-4
# ::node	0.0.0.0.1	exceed-01	20-21
# ::node	0.0.1	exact	16-17
# ::root	0	argue-01
# ::edge	argue-01	ARG1	country	0	0.0	
# ::edge	country	mod	exact	0.0	0.0.1	
# ::edge	exceed-01	ARG1	import-01	0.0.0.0.1	0.0.0.0	
# ::edge	export-01	ARG0	country	0.0.0	0.0	
# ::edge	import-01	ARG1	save-02	0.0.0.0	0.0.0.0.0	
# ::edge	import-01	ARG2	export-01	0.0.0.0	0.0.0	
# ::edge	little	degree	too	0.0.0.0.0.1.0	0.0.0.0.0.1	
# ::edge	much	degree	too	0.0.0.0.0.0.0.1	0.0.0.0.0.0.0.1.0	
# ::edge	save-02	ARG0	we	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	save-02	ARG1	too	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	spend-01	ARG0	we	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	spend-01	ARG1	we	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	spend-01	ARG2	much	0.0.0.0.0.0.0	0.0.0.0.0.0.0.1	
(a / argue-01 
      :ARG1 (c / country 
            :ARG0-of (e / export-01 
                  :ARG2-of (i / import-01 
                        :ARG1 (s2 / save-02 
                              :ARG0 (w2 / we 
                                    :ARG1-of (s / spend-01 
                                          :ARG0 (w / we) 
                                          :ARG2 (m / much 
                                                :degree (t / too)))) 
                              :ARG1 (t2 / too 
                                    :degree-of (l / little))) 
                        :ARG1-of (e2 / exceed-01))) 
            :mod (e3 / exact)))

# ::snt even a moderate expansion of nuclear power in third world countries as a substitute for coalfired power stations would cost in excess of 50 billion per year, the total public spending on electricity in such countries is currently only 7 billion per year and the total annual debt repayments on their loans from the industrialised nations are in excess of 50 billion per year
# ::tok even a moderate expansion of nuclear power in third world countries as a substitute for coalfired power stations would cost in excess of 50 billion per year , the total public spending on electricity in such countries is currently only 7 billion per year and the total annual debt repayments on their loans from the industrialised nations are in excess of 50 billion per year
# ::alignments 64-65|0.1.0 61-62|0.0.1.1.0.0.1.0 59-60|0.1 56-57|0.0.1.1.0.0.1.1 52-53|0.0.1.1.0.0.1 48-49|0.0.1.1.0.0.1.2 44-45|0 43-44|0.0.0 40-41|0.0.1.0 39-40|0.0.1.1.0.0.5.0 38-39|0.0.1.1.0.0.5 36-37|0.0.1.1.0.0.0.0 35-36|0.0.1.1.0.0.0.0.0 33-34|0.0.1.1.0.0.0 31-32|0.0.1.1.0.0 30-31|0.0.1.1.0.0.2 26-27|0.0.1.1.0.0.4 23-24|0.0.1.1.0.1.0.0 21-22|0.0.1 19-20|0.0 17-18|0.0.1.1.1 16-17|0.0.1.1.1.0 13-14|0.0.1.1 10-11|0.0.1.1.0 9-10|0.0.1.1.0.0.3 6-7|0.0.1.1.0.1 5-6|0.0.1.1.0.1.1 3-4|0.0.1.1.0.1.0 2-3|0.0.1.1.0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:07.896
# ::node	0	and	44-45
# ::node	0.0	cost-01	19-20
# ::node	0.0.0	year	43-44
# ::node	0.0.1	exceed-01	21-22
# ::node	0.0.1.0	7	40-41
# ::node	0.0.1.1	substitute-01	13-14
# ::node	0.0.1.1.0	country	10-11
# ::node	0.0.1.1.0.0	spend-01	31-32
# ::node	0.0.1.1.0.0.0	electricity	33-34
# ::node	0.0.1.1.0.0.0.0	country	36-37
# ::node	0.0.1.1.0.0.0.0.0	such	35-36
# ::node	0.0.1.1.0.0.1	loan-01	52-53
# ::node	0.0.1.1.0.0.1.0	50	61-62
# ::node	0.0.1.1.0.0.1.1	nation	56-57
# ::node	0.0.1.1.0.0.1.2	debt	48-49
# ::node	0.0.1.1.0.0.2	public	30-31
# ::node	0.0.1.1.0.0.3	world	9-10
# ::node	0.0.1.1.0.0.4	year	26-27
# ::node	0.0.1.1.0.0.5	current	38-39
# ::node	0.0.1.1.0.0.5.0	only	39-40
# ::node	0.0.1.1.0.1	power	6-7
# ::node	0.0.1.1.0.1.0	expand-01	3-4
# ::node	0.0.1.1.0.1.0.0	50	23-24
# ::node	0.0.1.1.0.1.0.1	moderate	2-3
# ::node	0.0.1.1.0.1.1	nucleus	5-6
# ::node	0.0.1.1.1	station	17-18
# ::node	0.0.1.1.1.0	power	16-17
# ::node	0.1	exceed-01	59-60
# ::node	0.1.0	year	64-65
# ::root	0	and
# ::edge	and	op1	exceed-01	0	0.1	
# ::edge	cost-01	ARG0	year	0.0	0.0.0	
# ::edge	cost-01	ARG1	exceed-01	0.0	0.0.1	
# ::edge	cost-01	ARG2	and	0.0	0	
# ::edge	country	mod	such	0.0.1.1.0.0.0.0	0.0.1.1.0.0.0.0.0	
# ::edge	current	op1	spend-01	0.0.1.1.0.0.5	0.0.1.1.0.0	
# ::edge	debt	purpose	loan-01	0.0.1.1.0.0.1.2	0.0.1.1.0.0.1	
# ::edge	electricity	poss	country	0.0.1.1.0.0.0	0.0.1.1.0.0.0.0	
# ::edge	exceed-01	ARG0	7	0.0.1	0.0.1.0	
# ::edge	exceed-01	ARG1	year	0.1	0.1.0	
# ::edge	expand-01	ARG0	50	0.0.1.1.0.1.0	0.0.1.1.0.1.0.0	
# ::edge	expand-01	ARG1	power	0.0.1.1.0.1.0	0.0.1.1.0.1	
# ::edge	expand-01	manner	moderate	0.0.1.1.0.1.0	0.0.1.1.0.1.0.1	
# ::edge	loan-01	ARG0	50	0.0.1.1.0.0.1	0.0.1.1.0.0.1.0	
# ::edge	loan-01	ARG1	spend-01	0.0.1.1.0.0.1	0.0.1.1.0.0	
# ::edge	loan-01	ARG2	nation	0.0.1.1.0.0.1	0.0.1.1.0.0.1.1	
# ::edge	only	mod	current	0.0.1.1.0.0.5.0	0.0.1.1.0.0.5	
# ::edge	power	mod	nucleus	0.0.1.1.0.1	0.0.1.1.0.1.1	
# ::edge	power	poss	country	0.0.1.1.0.1	0.0.1.1.0	
# ::edge	spend-01	ARG0	country	0.0.1.1.0.0	0.0.1.1.0	
# ::edge	spend-01	ARG1	electricity	0.0.1.1.0.0	0.0.1.1.0.0.0	
# ::edge	spend-01	mod	public	0.0.1.1.0.0	0.0.1.1.0.0.2	
# ::edge	spend-01	mod	world	0.0.1.1.0.0	0.0.1.1.0.0.3	
# ::edge	station	mod	power	0.0.1.1.1	0.0.1.1.1.0	
# ::edge	substitute-01	ARG0	country	0.0.1.1	0.0.1.1.0	
# ::edge	substitute-01	ARG1	exceed-01	0.0.1.1	0.0.1	
# ::edge	substitute-01	ARG2	station	0.0.1.1	0.0.1.1.1	
# ::edge	year	mod	spend-01	0.0.1.1.0.0.4	0.0.1.1.0.0	
(a / and 
      :ARG2-of (c3 / cost-01 
            :ARG0 (y2 / year) 
            :ARG1 (e3 / exceed-01 
                  :ARG0 7 
                  :ARG1-of (s4 / substitute-01 
                        :ARG0 (c4 / country 
                              :ARG0-of (s2 / spend-01 
                                    :ARG1 (e2 / electricity 
                                          :poss (c2 / country 
                                                :mod (s / such))) 
                                    :ARG1-of (l / loan-01 
                                          :ARG0 50 
                                          :ARG2 (n / nation) 
                                          :purpose-of (d / debt)) 
                                    :mod (p / public) 
                                    :mod (w / world) 
                                    :mod-of (y3 / year) 
                                    :op-of (c / current 
                                          :mod-of (o / only))) 
                              :poss-of (p3 / power 
                                    :ARG1-of (e4 / expand-01 
                                          :ARG0 50 
                                          :manner (m / moderate)) 
                                    :mod (n2 / nucleus))) 
                        :ARG2 (s3 / station 
                              :mod (p2 / power))))) 
      :op1 (e / exceed-01 
            :ARG1 (y / year)))

# ::snt over 30 days this  is 30 x 500  15000 calories in excess
# ::tok over 30 days this is 30 x 500 15000 calories in excess
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:07.898
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt it is a wellknown fact that for many people christmas equals excess
# ::tok it is a wellknown fact that for many people christmas equals excess
# ::alignments 11-12|0.1 10-11|0 7-8|0.2 4-5|0.1.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:07.948
# ::node	0	equal-01	10-11
# ::node	0.0	it	0-1
# ::node	0.1	exceed-01	11-12
# ::node	0.1.0	fact	4-5
# ::node	0.2	many	7-8
# ::root	0	equal-01
# ::edge	equal-01	ARG1	it	0	0.0	
# ::edge	equal-01	ARG2	exceed-01	0	0.1	
# ::edge	equal-01	mod	many	0	0.2	
# ::edge	exceed-01	ARG0	fact	0.1	0.1.0	
(e2 / equal-01 
      :ARG1 (i / it) 
      :ARG2 (e / exceed-01 
            :ARG0 (f / fact)) 
      :mod (m / many))

# ::snt the east german delegation said its true that there were some cases but that it was due more to police excesses which were later condemned and that it was not organised torture the committee chairman joseph voyame said
# ::tok the east german delegation said its true that there were some cases but that it was due more to police excesses which were later condemned and that it was not organised torture the committee chairman joseph voyame said
# ::alignments 37-38|0.1.2.2.1 34-35|0.1.2.2.0.1+0.1.2.2.0 33-34|0.1.2.2.0.0 31-32|0.1.2.2 30-31|0.1.2 27-28|0.1.2.1 25-26|0.1 24-25|0.1.1 23-24|0.1.1.0 19-20|0.1.2.2.1.0 14-15|0.1.2.0 12-13|0.1.0 11-12|0.1.0.0 10-11|0.1.0.0.0 6-7|0.1.0.1 4-5|0 3-4|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:08.823
# ::node	0	say-01	4-5
# ::node	0.0	delegation	3-4
# ::node	0.0.0	east	1-2
# ::node	0.1	and	25-26
# ::node	0.1.0	contrast-01	12-13
# ::node	0.1.0.0	case	11-12
# ::node	0.1.0.0.0	some	10-11
# ::node	0.1.0.1	true	6-7
# ::node	0.1.1	condemn-01	24-25
# ::node	0.1.1.0	late	23-24
# ::node	0.1.2	organize-01	30-31
# ::node	0.1.2.0	it	14-15
# ::node	0.1.2.1	it	27-28
# ::node	0.1.2.2	torture-01	31-32
# ::node	0.1.2.2.0	have-org-role-91	34-35
# ::node	0.1.2.2.0.0	committee	33-34
# ::node	0.1.2.2.0.1	chairman	34-35
# ::node	0.1.2.2.1	say-01	37-38
# ::node	0.1.2.2.1.0	police	19-20
# ::root	0	say-01
# ::edge	and	op1	condemn-01	0.1	0.1.1	
# ::edge	and	op2	organize-01	0.1	0.1.2	
# ::edge	case	quant	some	0.1.0.0	0.1.0.0.0	
# ::edge	condemn-01	time	late	0.1.1	0.1.1.0	
# ::edge	contrast-01	ARG1	case	0.1.0	0.1.0.0	
# ::edge	contrast-01	ARG2	and	0.1.0	0.1	
# ::edge	delegation	mod	east	0.0	0.0.0	
# ::edge	have-org-role-91	ARG1	committee	0.1.2.2.0	0.1.2.2.0.0	
# ::edge	have-org-role-91	ARG2	chairman	0.1.2.2.0	0.1.2.2.0.1	
# ::edge	organize-01	ARG0	it	0.1.2	0.1.2.0	
# ::edge	organize-01	ARG1	it	0.1.2	0.1.2.1	
# ::edge	organize-01	ARG2	torture-01	0.1.2	0.1.2.2	
# ::edge	say-01	ARG0	delegation	0	0.0	
# ::edge	say-01	ARG0	police	0.1.2.2.1	0.1.2.2.1.0	
# ::edge	say-01	ARG1	and	0	0.1	
# ::edge	say-01	time	torture-01	0.1.2.2.1	0.1.2.2	
# ::edge	torture-01	ARG1	have-org-role-91	0.1.2.2	0.1.2.2.0	
# ::edge	true	domain	contrast-01	0.1.0.1	0.1.0	
(s3 / say-01 
      :ARG0 (d / delegation 
            :mod (e / east)) 
      :ARG1 (a / and 
            :ARG2-of (c4 / contrast-01 
                  :ARG1 (c5 / case 
                        :quant (s2 / some)) 
                  :domain-of (t2 / true)) 
            :op1 (c3 / condemn-01 
                  :time (l / late)) 
            :op2 (o / organize-01 
                  :ARG0 (i2 / it) 
                  :ARG1 (i / it) 
                  :ARG2 (t / torture-01 
                        :ARG1 (h / have-org-role-91 
                              :ARG1 (c2 / committee) 
                              :ARG2 (c / chairman)) 
                        :time-of (s / say-01 
                              :ARG0 (p / police))))))

# ::snt average council rent increases of 10 per cent well in excess of inflation were announced for the 4
# ::tok average council rent increases of 10 per cent well in excess of inflation were announced for the 4
# ::alignments 17-18|0.0.0 14-15|0 12-13|0.1.1 10-11|0.1 8-9|0.1.2 7-8|0.0.1.0+0.0.1 5-6|0.1.0 3-4|0.0 2-3|0.0.2 1-2|0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:09.083
# ::node	0	announce-01	14-15
# ::node	0.0	increase-01	3-4
# ::node	0.0.0	4	17-18
# ::node	0.0.1	monetary-quantity	7-8
# ::node	0.0.1.0	cent	7-8
# ::node	0.0.2	rent-01	2-3
# ::node	0.0.2.0	council	1-2
# ::node	0.1	exceed-01	10-11
# ::node	0.1.0	10	5-6
# ::node	0.1.1	inflation	12-13
# ::node	0.1.2	well	8-9
# ::root	0	announce-01
# ::edge	announce-01	ARG1	increase-01	0	0.0	
# ::edge	exceed-01	ARG0	10	0.1	0.1.0	
# ::edge	exceed-01	ARG1	inflation	0.1	0.1.1	
# ::edge	exceed-01	purpose	announce-01	0.1	0	
# ::edge	exceed-01	time	well	0.1	0.1.2	
# ::edge	increase-01	ARG0	4	0.0	0.0.0	
# ::edge	increase-01	ARG1	monetary-quantity	0.0	0.0.1	
# ::edge	increase-01	ARG2	rent-01	0.0	0.0.2	
# ::edge	monetary-quantity	unit	cent	0.0.1	0.0.1.0	
# ::edge	rent-01	ARG1	council	0.0.2	0.0.2.0	
(a / announce-01 
      :ARG1 (i2 / increase-01 
            :ARG0 4 
            :ARG1 (m / monetary-quantity 
                  :unit (c / cent)) 
            :ARG2 (r / rent-01 
                  :ARG1 (c2 / council))) 
      :purpose-of (e / exceed-01 
            :ARG0 10 
            :ARG1 (i / inflation) 
            :time (w / well)))

# ::snt what the hysteric needs to experience is sentimental and maternal feeling not sexual love whose sensual excesses fuel the flames of nervous disease
# ::tok what the hysteric needs to experience is sentimental and maternal feeling not sexual love whose sensual excesses fuel the flames of nervous disease
# ::alignments 22-23|0.0 21-22|0 17-18|0.1.0.0.0.0 13-14|0.1 12-13|0.1.1 10-11|0.1.0 8-9|0.1.0.0.1 7-8|0.1.0.1 5-6|0.1.0.0.0 3-4|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:09.491
# ::node	0	nervous-41	21-22
# ::node	0.0	disease	22-23
# ::node	0.1	love-01	13-14
# ::node	0.1.0	feel-01	10-11
# ::node	0.1.0.0	need-01	3-4
# ::node	0.1.0.0.0	experience-01	5-6
# ::node	0.1.0.0.0.0	fuel	17-18
# ::node	0.1.0.0.1	and	8-9
# ::node	0.1.0.1	sentimental	7-8
# ::node	0.1.1	sexual	12-13
# ::root	0	nervous-41
# ::edge	and	op1	need-01	0.1.0.0.1	0.1.0.0	
# ::edge	experience-01	ARG1	fuel	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	feel-01	ARG0	need-01	0.1.0	0.1.0.0	
# ::edge	feel-01	ARG1	love-01	0.1.0	0.1	
# ::edge	love-01	ARG1	nervous-41	0.1	0	
# ::edge	love-01	manner	sexual	0.1	0.1.1	
# ::edge	need-01	ARG1	experience-01	0.1.0.0	0.1.0.0.0	
# ::edge	nervous-41	ARG0	disease	0	0.0	
# ::edge	sentimental	domain	feel-01	0.1.0.1	0.1.0	
(n / nervous-41 
      :ARG0 (d / disease) 
      :ARG1-of (l / love-01 
            :ARG1-of (f2 / feel-01 
                  :ARG0 (n2 / need-01 
                        :ARG1 (e / experience-01 
                              :ARG1 (f / fuel)) 
                        :op-of (a / and)) 
                  :domain-of (s2 / sentimental)) 
            :manner (s / sexual)))

# ::snt   the reorganisation is seen as a last chance for the press to avoid legislation to control its excesses
# ::tok the reorganisation is seen as a last chance for the press to avoid legislation to control its excesses
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:09.492
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt her gentleness overruled the excesses of passion which i was liable to commit upon this saintly woman
# ::tok her gentleness overruled the excesses of passion which i was liable to commit upon this saintly woman
# ::alignments 16-17|0 14-15|0.1 12-13|0.0 10-11|0.0.0 8-9|0.0.0.1 6-7|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:09.533
# ::node	0	woman	16-17
# ::node	0.0	commit-02	12-13
# ::node	0.0.0	liable-41	10-11
# ::node	0.0.0.0	passion	6-7
# ::node	0.0.0.1	i	8-9
# ::node	0.1	this	14-15
# ::root	0	woman
# ::edge	commit-02	location	woman	0.0	0	
# ::edge	liable-41	ARG0	passion	0.0.0	0.0.0.0	
# ::edge	liable-41	ARG1	commit-02	0.0.0	0.0	
# ::edge	liable-41	domain	i	0.0.0	0.0.0.1	
# ::edge	woman	mod	this	0	0.1	
(w / woman 
      :location-of (c / commit-02 
            :ARG1-of (l / liable-41 
                  :ARG0 (p / passion) 
                  :domain (i / i))) 
      :mod (t / this))

# ::snt a reference to the excesses of the pol pot regime
# ::tok a reference to the excesses of the pol pot regime
# ::alignments 9-10|0.0 8-9|0.0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:09.547
# ::node	0	reference-01	1-2
# ::node	0.0	regime	9-10
# ::node	0.0.0	pot	8-9
# ::root	0	reference-01
# ::edge	pot	part	regime	0.0.0	0.0	
# ::edge	reference-01	ARG1	regime	0	0.0	
(r2 / reference-01 
      :ARG1 (r / regime 
            :part-of (p / pot)))

# ::snt even so the prime underwriting rates are expected to be considerably in excess of the 0
# ::tok even so the prime underwriting rates are expected to be considerably in excess of the 0
# ::alignments 15-16|0.2.0 12-13|0.2 10-11|0.2.1 7-8|0 5-6|0.0 3-4|0.0.0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:09.632
# ::node	0	expect-01	7-8
# ::node	0.0	rate	5-6
# ::node	0.0.0	prime	3-4
# ::node	0.1	so	1-2
# ::node	0.2	exceed-01	12-13
# ::node	0.2.0	0	15-16
# ::node	0.2.1	considerable	10-11
# ::root	0	expect-01
# ::edge	exceed-01	ARG0	0	0.2	0.2.0	
# ::edge	exceed-01	time	considerable	0.2	0.2.1	
# ::edge	expect-01	ARG1	rate	0	0.0	
# ::edge	expect-01	purpose	exceed-01	0	0.2	
# ::edge	rate	mod	prime	0.0	0.0.0	
# ::edge	so	op1	expect-01	0.1	0	
(e2 / expect-01 
      :ARG1 (r / rate 
            :mod (p / prime)) 
      :op-of (s / so) 
      :purpose (e / exceed-01 
            :ARG0 0 
            :time (c / considerable)))

# ::snt but his work is also characterised by honesty and integrity and this has saved him from excess
# ::tok but his work is also characterised by honesty and integrity and this has saved him from excess
# ::alignments 16-17|0.0.2.1 13-14|0.0.2 11-12|0.0.2.0 10-11|0.0 9-10|0.0.1 8-9|0.0.2.2 7-8|0.0.0 4-5|0.0.2.1.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:09.680
# ::node	0	contrast-01	0-1
# ::node	0.0	and	10-11
# ::node	0.0.0	honesty	7-8
# ::node	0.0.1	integrity	9-10
# ::node	0.0.2	save-02	13-14
# ::node	0.0.2.0	this	11-12
# ::node	0.0.2.1	exceed-01	16-17
# ::node	0.0.2.1.0	also	4-5
# ::node	0.0.2.2	and	8-9
# ::root	0	contrast-01
# ::edge	and	op1	honesty	0.0	0.0.0	
# ::edge	and	op1	save-02	0.0.2.2	0.0.2	
# ::edge	and	op2	integrity	0.0	0.0.1	
# ::edge	and	op3	save-02	0.0	0.0.2	
# ::edge	contrast-01	ARG2	and	0	0.0	
# ::edge	exceed-01	ARG1	also	0.0.2.1	0.0.2.1.0	
# ::edge	save-02	ARG0	this	0.0.2	0.0.2.0	
# ::edge	save-02	ARG2	exceed-01	0.0.2	0.0.2.1	
(c / contrast-01 
      :ARG2 (a / and 
            :op1 (h / honesty) 
            :op2 (i / integrity) 
            :op3 (s / save-02 
                  :ARG0 (t / this) 
                  :ARG2 (e / exceed-01 
                        :ARG1 (a3 / also)) 
                  :op-of (a2 / and))))

# ::snt after the histrionic architecture and the wilful decorative excesses of the 1980s silvestrins passionately cold aesthetic should match the architectural climate of the 1990s
# ::tok after the histrionic architecture and the wilful decorative excesses of the 1980s silvestrins passionately cold aesthetic should match the architectural climate of the 1990s
# ::alignments 23-24|0.0.0.1.1 20-21|0.0.0.1 17-18|0.0.0 16-17|0.0 14-15|0.0.0.1.0 13-14|0 11-12|0.0.1 4-5|0.0.0.0 0-1|0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:09.832
# ::node	0	passionate	13-14
# ::node	0.0	recommend-01	16-17
# ::node	0.0.0	match-01	17-18
# ::node	0.0.0.0	and	4-5
# ::node	0.0.0.1	climate	20-21
# ::node	0.0.0.1.0	cold	14-15
# ::node	0.0.0.1.1	1990	23-24
# ::node	0.0.1	1980	11-12
# ::node	0.0.2	after	0-1
# ::root	0	passionate
(p / passionate 
      :ARG0-of (r / recommend-01 
            :ARG1 (m / match-01 
                  :ARG0 (a / and) 
                  :ARG1 (c / climate 
                        :mod (c2 / cold) 
                        :mod 1990)) 
            :op-of 1980 
            :time (a2 / after)))

# ::snt it is already costing 15bn a year or in excess of 10 a week for every household
# ::tok it is already costing 15bn a year or in excess of 10 a week for every household
# ::alignments 16-17|0.1.2 15-16|0.1.2.1 13-14|0.1.2.0 11-12|0.1.1.0 9-10|0.1.1 7-8|0.1 6-7|0.1.0 3-4|0 2-3|0.2 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:10.013
# ::node	0	cost-01	3-4
# ::node	0.0	it	0-1
# ::node	0.1	or	7-8
# ::node	0.1.0	year	6-7
# ::node	0.1.1	exceed-01	9-10
# ::node	0.1.1.0	10	11-12
# ::node	0.1.2	household	16-17
# ::node	0.1.2.0	week	13-14
# ::node	0.1.2.1	every	15-16
# ::node	0.2	already	2-3
# ::root	0	cost-01
# ::edge	cost-01	ARG0	it	0	0.0	
# ::edge	cost-01	ARG1	or	0	0.1	
# ::edge	cost-01	time	already	0	0.2	
# ::edge	exceed-01	ARG1	10	0.1.1	0.1.1.0	
# ::edge	household	mod	every	0.1.2	0.1.2.1	
# ::edge	or	op1	year	0.1	0.1.0	
# ::edge	or	op2	exceed-01	0.1	0.1.1	
# ::edge	or	topic	household	0.1	0.1.2	
# ::edge	week	location	household	0.1.2.0	0.1.2	
(c / cost-01 
      :ARG0 (i / it) 
      :ARG1 (o / or 
            :op1 (y / year) 
            :op2 (e2 / exceed-01 
                  :ARG1 10) 
            :topic (h / household 
                  :location-of (w / week) 
                  :mod (e / every))) 
      :time (a / already))

# ::snt but the report found many councillors saw it as an opportunity to achieve things well in excess of that which the government has said is acceptable
# ::tok but the report found many councillors saw it as an opportunity to achieve things well in excess of that which the government has said is acceptable
# ::alignments 25-26|0.0.0.0.0.1.2.0 23-24|0 16-17|0.0.0.0.0.1.0.0 14-15|0.0.0.0.0.1.1 13-14|0.0.0.0.0.1.0 12-13|0.0.0.0.0.1 10-11|0.0.0.0.0.1.2 7-8|0.0.0.0.0.0 6-7|0.0.0.0.0 4-5|0.0.0.0.0.1.2.0.0 3-4|0.0.0 2-3|0.0.0.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:10.227
# ::node	0	say-01	23-24
# ::node	0.0	contrast-01	0-1
# ::node	0.0.0	find-01	3-4
# ::node	0.0.0.0	report	2-3
# ::node	0.0.0.0.0	see-01	6-7
# ::node	0.0.0.0.0.0	it	7-8
# ::node	0.0.0.0.0.1	achieve-01	12-13
# ::node	0.0.0.0.0.1.0	thing	13-14
# ::node	0.0.0.0.0.1.0.0	exceed-01	16-17
# ::node	0.0.0.0.0.1.1	well	14-15
# ::node	0.0.0.0.0.1.2	opportunity	10-11
# ::node	0.0.0.0.0.1.2.0	accept-01	25-26
# ::node	0.0.0.0.0.1.2.0.0	many	4-5
# ::root	0	say-01
# ::edge	accept-01	ARG0	many	0.0.0.0.0.1.2.0	0.0.0.0.0.1.2.0.0	
# ::edge	accept-01	ARG1	opportunity	0.0.0.0.0.1.2.0	0.0.0.0.0.1.2	
# ::edge	achieve-01	ARG1	thing	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	achieve-01	mod	well	0.0.0.0.0.1	0.0.0.0.0.1.1	
# ::edge	contrast-01	ARG1	find-01	0.0	0.0.0	
# ::edge	exceed-01	ARG1	thing	0.0.0.0.0.1.0.0	0.0.0.0.0.1.0	
# ::edge	find-01	ARG1	report	0.0.0	0.0.0.0	
# ::edge	opportunity	mod	achieve-01	0.0.0.0.0.1.2	0.0.0.0.0.1	
# ::edge	say-01	ARG1	contrast-01	0	0.0	
# ::edge	see-01	ARG0	report	0.0.0.0.0	0.0.0.0	
# ::edge	see-01	ARG1	it	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	see-01	purpose	achieve-01	0.0.0.0.0	0.0.0.0.0.1	
(s / say-01 
      :ARG1 (c / contrast-01 
            :ARG1 (f / find-01 
                  :ARG1 (r / report 
                        :ARG0-of (s2 / see-01 
                              :ARG1 (i / it) 
                              :purpose (a2 / achieve-01 
                                    :ARG1 (t / thing 
                                          :ARG1-of (e / exceed-01)) 
                                    :mod (w / well) 
                                    :mod-of (o / opportunity 
                                          :ARG1-of (a / accept-01 
                                                :ARG0 (m / many)))))))))

# ::snt the biplane arrangement is of advantage to the highspeed stability of the car but to those of us who do not customarily drive in excess of 100mph for long periods it is a carbuncle
# ::tok the biplane arrangement is of advantage to the highspeed stability of the car but to those of us who do not customarily drive in excess of 100mph for long periods it is a carbuncle
# ::alignments 30-31|0.1.0.0.0.0 29-30|0.1.0.0.0 24-25|0.1.0 22-23|0.1.0.0 13-14|0 12-13|0.0.0.0 9-10|0.0 5-6|0.0.0 2-3|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:10.321
# ::node	0	contrast-01	13-14
# ::node	0.0	stability	9-10
# ::node	0.0.0	advantage	5-6
# ::node	0.0.0.0	car	12-13
# ::node	0.1	arrange-01	2-3
# ::node	0.1.0	exceed-01	24-25
# ::node	0.1.0.0	drive-01	22-23
# ::node	0.1.0.0.0	period	29-30
# ::node	0.1.0.0.0.0	it	30-31
# ::root	0	contrast-01
# ::edge	advantage	op1	car	0.0.0	0.0.0.0	
# ::edge	advantage	prep-to	stability	0.0.0	0.0	
# ::edge	arrange-01	ARG1	contrast-01	0.1	0	
# ::edge	contrast-01	ARG1	stability	0	0.0	
# ::edge	drive-01	ARG0	period	0.1.0.0	0.1.0.0.0	
# ::edge	drive-01	ARG1	exceed-01	0.1.0.0	0.1.0	
# ::edge	exceed-01	ARG1	arrange-01	0.1.0	0.1	
# ::edge	period	poss	it	0.1.0.0.0	0.1.0.0.0.0	
(c / contrast-01 
      :ARG1 (s / stability 
            :prep-to-of (a / advantage 
                  :op1 (c2 / car))) 
      :ARG1-of (a2 / arrange-01 
            :ARG1-of (e / exceed-01 
                  :ARG1-of (d / drive-01 
                        :ARG0 (p / period 
                              :poss (i / it))))))

# ::snt lowe marschalk together with the existing us agencies now has us billings in excess of dollars 500m a statement added
# ::tok lowe marschalk together with the existing us agencies now has us billings in excess of dollars 500m a statement added
# ::alignments 19-20|0.1 18-19|0 15-16|0.1.0.0.0+0.1.0.0 13-14|0.1.0 8-9|0.0.0.0 7-8|0.0 5-6|0.0.0 2-3|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:10.444
# ::node	0	state-01	18-19
# ::node	0.0	agency	7-8
# ::node	0.0.0	exist-01	5-6
# ::node	0.0.0.0	now	8-9
# ::node	0.1	add-01	19-20
# ::node	0.1.0	exceed-01	13-14
# ::node	0.1.0.0	monetary-quantity	15-16
# ::node	0.1.0.0.0	dollar	15-16
# ::node	0.2	together	2-3
# ::root	0	state-01
# ::edge	add-01	ARG0	state-01	0.1	0	
# ::edge	add-01	ARG1	exceed-01	0.1	0.1.0	
# ::edge	exceed-01	ARG1	monetary-quantity	0.1.0	0.1.0.0	
# ::edge	exist-01	ARG0	now	0.0.0	0.0.0.0	
# ::edge	exist-01	ARG1	agency	0.0.0	0.0	
# ::edge	monetary-quantity	unit	dollar	0.1.0.0	0.1.0.0.0	
# ::edge	state-01	ARG0	agency	0	0.0	
# ::edge	state-01	ARG1	together	0	0.2	
(s / state-01 
      :ARG0 (a2 / agency 
            :ARG1-of (e2 / exist-01 
                  :ARG0 (n / now))) 
      :ARG0-of (a / add-01 
            :ARG1 (e / exceed-01 
                  :ARG1 (m / monetary-quantity 
                        :unit (d / dollar)))) 
      :ARG1 (t / together))

# ::snt we noted earlier the tendency of smaller claims to be compensated in excess of the economic loss while larger claims suffered increasing shortfalls
# ::tok we noted earlier the tendency of smaller claims to be compensated in excess of the economic loss while larger claims suffered increasing shortfalls
# ::alignments 21-22|0.0.1.0 20-21|0.0.1 19-20|0.0.1.1 18-19|0.0.1.1.0 15-16|0.0.0.0.1 12-13|0.0.0.0.0 10-11|0.0.0 7-8|0.0.0.0 6-7|0.0.0.0.2 2-3|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:10.544
# ::node	0	note-01	1-2
# ::node	0.0	we	0-1
# ::node	0.0.0	compensate-01	10-11
# ::node	0.0.0.0	claim-01	7-8
# ::node	0.0.0.0.0	exceed-01	12-13
# ::node	0.0.0.0.1	economy	15-16
# ::node	0.0.0.0.2	small	6-7
# ::node	0.0.1	suffer-01	20-21
# ::node	0.0.1.0	increase-01	21-22
# ::node	0.0.1.1	claim-01	19-20
# ::node	0.0.1.1.0	large	18-19
# ::node	0.1	early	2-3
# ::root	0	note-01
# ::edge	claim-01	ARG1	economy	0.0.0.0	0.0.0.0.1	
# ::edge	claim-01	ARG1	suffer-01	0.0.1.1	0.0.1	
# ::edge	claim-01	ARG2	small	0.0.0.0	0.0.0.0.2	
# ::edge	claim-01	mod	large	0.0.1.1	0.0.1.1.0	
# ::edge	compensate-01	ARG0	we	0.0.0	0.0	
# ::edge	compensate-01	ARG1	claim-01	0.0.0	0.0.0.0	
# ::edge	exceed-01	ARG0	claim-01	0.0.0.0.0	0.0.0.0	
# ::edge	note-01	ARG0	we	0	0.0	
# ::edge	note-01	ARG1	early	0	0.1	
# ::edge	suffer-01	ARG0	we	0.0.1	0.0	
# ::edge	suffer-01	ARG1	increase-01	0.0.1	0.0.1.0	
(n / note-01 
      :ARG0 (w / we 
            :ARG0-of (c2 / compensate-01 
                  :ARG1 (c3 / claim-01 
                        :ARG0-of (e2 / exceed-01) 
                        :ARG1 (e / economy) 
                        :ARG2 (s2 / small))) 
            :ARG0-of (s / suffer-01 
                  :ARG1 (i / increase-01) 
                  :ARG1-of (c / claim-01 
                        :mod (l / large)))) 
      :ARG1 (e3 / early))

# ::snt online edit 20 december to 22 december 1989  sound dubbing 4 january to 6 january 1990 in the event that the director is required to provide his services in excess of five days after 22 december 1989 then it is agreed that he shall be reimbursed at the rate of 200 per diem
# ::tok online edit 20 december to 22 december 1989 sound dubbing 4 january to 6 january 1990 in the event that the director is required to provide his services in excess of five days after 22 december 1989 then it is agreed that he shall be reimbursed at the rate of 200 per diem
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:10.545
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt even when meaningful financial rates of return were calculated and proved to be low but just in excess of the cost of borrowing decisions were taken to implement projects as a result of pressure for action
# ::tok even when meaningful financial rates of return were calculated and proved to be low but just in excess of the cost of borrowing decisions were taken to implement projects as a result of pressure for action
# ::alignments 35-36|0.0.0 33-34|0.0 31-32|0 28-29|0.1.1 27-28|0.1 23-24|0.1.0 22-23|0.1.0.0 20-21|0.1.0.2 17-18|0.1.0.1 15-16|0.1.0.2.0 14-15|0.1.2.0 13-14|0.1.2.2.0 10-11|0.1.2.2 9-10|0.1.2 8-9|0.1.2.1 4-5|0.1.2.1.0 3-4|0.1.2.1.0.1 2-3|0.1.2.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:11.130
# ::node	0	result-01	31-32
# ::node	0.0	pressure-01	33-34
# ::node	0.0.0	action	35-36
# ::node	0.1	implement-01	27-28
# ::node	0.1.0	decide-01	23-24
# ::node	0.1.0.0	borrow-01	22-23
# ::node	0.1.0.1	exceed-01	17-18
# ::node	0.1.0.2	cost-01	20-21
# ::node	0.1.0.2.0	just	15-16
# ::node	0.1.1	project	28-29
# ::node	0.1.2	and	9-10
# ::node	0.1.2.0	contrast-01	14-15
# ::node	0.1.2.1	calculate-01	8-9
# ::node	0.1.2.1.0	rate	4-5
# ::node	0.1.2.1.0.0	meaningful	2-3
# ::node	0.1.2.1.0.1	finance	3-4
# ::node	0.1.2.2	prove-01	10-11
# ::node	0.1.2.2.0	low	13-14
# ::root	0	result-01
# ::edge	and	op1	calculate-01	0.1.2	0.1.2.1	
# ::edge	and	op2	prove-01	0.1.2	0.1.2.2	
# ::edge	and	op3	implement-01	0.1.2	0.1	
# ::edge	borrow-01	ARG1	decide-01	0.1.0.0	0.1.0	
# ::edge	calculate-01	ARG1	rate	0.1.2.1	0.1.2.1.0	
# ::edge	contrast-01	ARG2	and	0.1.2.0	0.1.2	
# ::edge	cost-01	ARG1	just	0.1.0.2	0.1.0.2.0	
# ::edge	cost-01	ARG2	decide-01	0.1.0.2	0.1.0	
# ::edge	exceed-01	ARG1	decide-01	0.1.0.1	0.1.0	
# ::edge	implement-01	ARG0	decide-01	0.1	0.1.0	
# ::edge	implement-01	ARG1	project	0.1	0.1.1	
# ::edge	pressure-01	ARG1	action	0.0	0.0.0	
# ::edge	prove-01	ARG1	low	0.1.2.2	0.1.2.2.0	
# ::edge	rate	mod	finance	0.1.2.1.0	0.1.2.1.0.1	
# ::edge	rate	mod	meaningful	0.1.2.1.0	0.1.2.1.0.0	
# ::edge	result-01	ARG1	pressure-01	0	0.0	
# ::edge	result-01	ARG2	implement-01	0	0.1	
(r / result-01 
      :ARG1 (p / pressure-01 
            :ARG1 (a / action)) 
      :ARG2 (i / implement-01 
            :ARG0 (d / decide-01 
                  :ARG1-of (b / borrow-01) 
                  :ARG1-of (e / exceed-01) 
                  :ARG2-of (c / cost-01 
                        :ARG1 (j / just))) 
            :ARG1 (p2 / project) 
            :op-of (a2 / and 
                  :ARG2-of (c2 / contrast-01) 
                  :op1 (c3 / calculate-01 
                        :ARG1 (r2 / rate 
                              :mod (m / meaningful) 
                              :mod (f / finance))) 
                  :op2 (p3 / prove-01 
                        :ARG1 (l / low)))))

# ::snt as the options on offer proliferate so too do the exclusion clauses no claims bonuses excesses and so on
# ::tok as the options on offer proliferate so too do the exclusion clauses no claims bonuses excesses and so on
# ::alignments 17-18|0.0.3 16-17|0.0.1 14-15|0.0.0 13-14|0.0 12-13|0.0.2 11-12|0 10-11|0.1 7-8|0.1.0 6-7|0.1.0.0 4-5|0.0.1.0 2-3|0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:11.328
# ::node	0	clause	11-12
# ::node	0.0	claim-01	13-14
# ::node	0.0.0	bonus	14-15
# ::node	0.0.1	and	16-17
# ::node	0.0.1.0	offer-01	4-5
# ::node	0.0.1.0.0	option	2-3
# ::node	0.0.2	-	12-13
# ::node	0.0.3	so	17-18
# ::node	0.1	exclude-01	10-11
# ::node	0.1.0	too	7-8
# ::node	0.1.0.0	so	6-7
# ::root	0	clause
(c2 / clause 
      :ARG1-of (c / claim-01 
            :mod-of (b / bonus) 
            :op-of (a / and 
                  :ARG1-of (o / offer-01 
                        :topic-of (o2 / option))) 
            :polarity (- / -) 
            :polarity (s / so)) 
      :ARG1-of (e / exclude-01 
            :ARG0 (t / too 
                  :degree (s2 / so))))

# ::snt it is not our wish to profit from such assignment and in the unlikely event of our recovering more than such compensation and costs any excess will be paid to the injured clients
# ::tok it is not our wish to profit from such assignment and in the unlikely event of our recovering more than such compensation and costs any excess will be paid to the injured clients
# ::alignments 32-33|0.1.1 31-32|0.1.1.0 28-29|0.1 25-26|0.1.0 24-25|0.1.0.1 23-24|0.1.0.0 22-23|0 21-22|0.0 20-21|0.0.1 17-18|0.0.0 14-15|0.1.2.1.0 13-14|0.1.2.1.1+0.1.2.1 10-11|0.1.2 9-10|0.1.2.0.0 8-9|0.1.2.0.0.0 6-7|0.1.2.0 4-5|0.1.2.0.1 0-1|0.1.2.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:11.736
# ::node	0	and	22-23
# ::node	0.0	compensate-01	21-22
# ::node	0.0.0	recover-01	17-18
# ::node	0.0.1	such	20-21
# ::node	0.1	pay-01	28-29
# ::node	0.1.0	exceed-01	25-26
# ::node	0.1.0.0	cost-01	23-24
# ::node	0.1.0.1	any	24-25
# ::node	0.1.1	client	32-33
# ::node	0.1.1.0	injure-01	31-32
# ::node	0.1.2	and	10-11
# ::node	0.1.2.0	profit-01	6-7
# ::node	0.1.2.0.0	assign-01	9-10
# ::node	0.1.2.0.0.0	such	8-9
# ::node	0.1.2.0.1	wish-01	4-5
# ::node	0.1.2.0.1.0	it	0-1
# ::node	0.1.2.1	likely	13-14
# ::node	0.1.2.1.0	event	14-15
# ::node	0.1.2.1.1	-	13-14
# ::root	0	and
# ::edge	and	op1	compensate-01	0	0.0	
# ::edge	and	op1	likely	0.1.2	0.1.2.1	
# ::edge	and	op2	pay-01	0	0.1	
# ::edge	assign-01	mod	such	0.1.2.0.0	0.1.2.0.0.0	
# ::edge	compensate-01	mod	such	0.0	0.0.1	
# ::edge	exceed-01	ARG1	cost-01	0.1.0	0.1.0.0	
# ::edge	exceed-01	mod	any	0.1.0	0.1.0.1	
# ::edge	injure-01	ARG1	client	0.1.1.0	0.1.1	
# ::edge	likely	domain	event	0.1.2.1	0.1.2.1.0	
# ::edge	likely	polarity	-	0.1.2.1	0.1.2.1.1	
# ::edge	pay-01	ARG1	exceed-01	0.1	0.1.0	
# ::edge	pay-01	ARG2	client	0.1	0.1.1	
# ::edge	pay-01	ARG3	and	0.1	0.1.2	
# ::edge	profit-01	ARG0	and	0.1.2.0	0.1.2	
# ::edge	profit-01	ARG1	assign-01	0.1.2.0	0.1.2.0.0	
# ::edge	recover-01	ARG1	compensate-01	0.0.0	0.0	
# ::edge	wish-01	ARG0	it	0.1.2.0.1	0.1.2.0.1.0	
# ::edge	wish-01	ARG1	profit-01	0.1.2.0.1	0.1.2.0	
(a2 / and 
      :op1 (c3 / compensate-01 
            :ARG1-of (r / recover-01) 
            :mod (s / such)) 
      :op2 (p / pay-01 
            :ARG1 (e / exceed-01 
                  :ARG1 (c2 / cost-01) 
                  :mod (a / any)) 
            :ARG2 (c / client 
                  :ARG1-of (i / injure-01)) 
            :ARG3 (a3 / and 
                  :ARG0-of (p2 / profit-01 
                        :ARG1 (a4 / assign-01 
                              :mod (s2 / such)) 
                        :ARG1-of (w / wish-01 
                              :ARG0 (i2 / it))) 
                  :op1 (l / likely 
                        :domain (e2 / event) 
                        :polarity -))))

# ::snt generate annual sales in excess of 50bn
# ::tok generate annual sales in excess of 50bn
# ::alignments 4-5|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:11.744
# ::node	0	generate-01	0-1
# ::node	0.0	exceed-01	4-5
# ::root	0	generate-01
# ::edge	generate-01	ARG1	exceed-01	0	0.0	
(g / generate-01 
      :ARG1 (e / exceed-01))

# ::snt age allowance will be clawed back by the excess of total gross annual income over 11400
# ::tok age allowance will be clawed back by the excess of total gross annual income over 11400
# ::alignments 13-14|0.0 11-12|0.0.0 8-9|0.1.0 5-6|0.1.0.0 1-2|0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:11.781
# ::node	0	age-01	0-1
# ::node	0.0	income	13-14
# ::node	0.0.0	gross	11-12
# ::node	0.1	allowance	1-2
# ::node	0.1.0	exceed-01	8-9
# ::node	0.1.0.0	back	5-6
# ::root	0	age-01
# ::edge	age-01	ARG1	income	0	0.0	
# ::edge	allowance	mod	age-01	0.1	0	
# ::edge	exceed-01	ARG1	allowance	0.1.0	0.1	
# ::edge	exceed-01	manner	back	0.1.0	0.1.0.0	
# ::edge	income	mod	gross	0.0	0.0.0	
(a2 / age-01 
      :ARG1 (i / income 
            :mod (g / gross)) 
      :mod-of (a / allowance 
            :ARG1-of (e / exceed-01 
                  :manner (b / back))))

# ::snt sugar is not very filling and is therefore one of the easiest foods to eat in excess of energy requirements and the excess is stored as fat
# ::tok sugar is not very filling and is therefore one of the easiest foods to eat in excess of energy requirements and the excess is stored as fat
# ::alignments 26-27|0.1.0.0.0.1 24-25|0.1.0.0.0 22-23|0.1.0.0.0.0 20-21|0.1.0.0.0.2 19-20|0.1.0.1.0.0+0.1.0.1.0 18-19|0.1.0.1.0.1 16-17|0.1.0.1 14-15|0.1.0 12-13|0.1 11-12|0.0+0 5-6|0.1.0.0.0.3 3-4|0.1.0.0.0.0.0 0-1|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:12.282
# ::node	0	easy	11-12
# ::node	0.0	most	11-12
# ::node	0.1	food	12-13
# ::node	0.1.0	eat-01	14-15
# ::node	0.1.0.0	sugar-cane	0-1
# ::node	0.1.0.0.0	store-01	24-25
# ::node	0.1.0.0.0.0	exceed-01	22-23
# ::node	0.1.0.0.0.0.0	very	3-4
# ::node	0.1.0.0.0.1	fat	26-27
# ::node	0.1.0.0.0.2	and	20-21
# ::node	0.1.0.0.0.3	and	5-6
# ::node	0.1.0.1	exceed-01	16-17
# ::node	0.1.0.1.0	thing	19-20
# ::node	0.1.0.1.0.0	require-01	19-20
# ::node	0.1.0.1.0.1	energy	18-19
# ::root	0	easy
# ::edge	and	op1	store-01	0.1.0.0.0.2	0.1.0.0.0	
# ::edge	and	op1	store-01	0.1.0.0.0.3	0.1.0.0.0	
# ::edge	easy	degree	most	0	0.0	
# ::edge	eat-01	ARG0	food	0.1.0	0.1	
# ::edge	eat-01	ARG1	sugar-cane	0.1.0	0.1.0.0	
# ::edge	eat-01	ARG2	exceed-01	0.1.0	0.1.0.1	
# ::edge	exceed-01	ARG1	thing	0.1.0.1	0.1.0.1.0	
# ::edge	exceed-01	ARG1	very	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	food	mod	easy	0.1	0	
# ::edge	require-01	ARG1	thing	0.1.0.1.0.0	0.1.0.1.0	
# ::edge	store-01	ARG0	sugar-cane	0.1.0.0.0	0.1.0.0	
# ::edge	store-01	ARG1	exceed-01	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	store-01	ARG2	fat	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	thing	mod	energy	0.1.0.1.0	0.1.0.1.0.1	
(e5 / easy 
      :degree (m / most) 
      :mod-of (f2 / food 
            :ARG0-of (e4 / eat-01 
                  :ARG1 (s2 / sugar-cane 
                        :ARG0-of (s / store-01 
                              :ARG1 (e / exceed-01 
                                    :ARG1 (v / very)) 
                              :ARG2 (f / fat) 
                              :op-of (a / and) 
                              :op-of (a2 / and))) 
                  :ARG2 (e3 / exceed-01 
                        :ARG1 (t / thing 
                              :ARG1-of (r / require-01) 
                              :mod (e2 / energy))))))

# ::snt though sinclair seizes on the merits of a novel like brideshead revisited it can surely be argued as waugh himself argued that the books excesses its clotted and opulent nostalgia were the chief product of the spam and nissen hut atmosphere in which it was composed
# ::tok though sinclair seizes on the merits of a novel like brideshead revisited it can surely be argued as waugh himself argued that the books excesses its clotted and opulent nostalgia were the chief product of the spam and nissen hut atmosphere in which it was composed
# ::alignments 45-46|0 43-44|0.1 40-41|0.0.2 37-38|0.0 33-34|0.0.1 32-33|0.0.1.0.1+0.0.1.0 27-28|0.0.1.0.0.1 23-24|0.0.1.0.0.0 20-21|0.0.1.0.0 16-17|0.0.0 14-15|0.0.0.2 13-14|0.0.0.1 12-13|0.0.0.0 8-9|0.0.0.1.0.0.0 5-6|0.0.0.1.0.0 2-3|0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:12.570
# ::node	0	compose-01	45-46
# ::node	0.0	and	37-38
# ::node	0.0.0	argue-01	16-17
# ::node	0.0.0.0	it	12-13
# ::node	0.0.0.1	possible	13-14
# ::node	0.0.0.1.0	seize-01	2-3
# ::node	0.0.0.1.0.0	merit-01	5-6
# ::node	0.0.0.1.0.0.0	novel	8-9
# ::node	0.0.0.2	sure	14-15
# ::node	0.0.1	product	33-34
# ::node	0.0.1.0	have-org-role-91	32-33
# ::node	0.0.1.0.0	argue-01	20-21
# ::node	0.0.1.0.0.0	book	23-24
# ::node	0.0.1.0.0.1	and	27-28
# ::node	0.0.1.0.1	chief	32-33
# ::node	0.0.2	atmosphere	40-41
# ::node	0.1	it	43-44
# ::root	0	compose-01
# ::edge	and	op1	product	0.0	0.0.1	
# ::edge	and	op2	atmosphere	0.0	0.0.2	
# ::edge	argue-01	ARG0	and	0.0.0	0.0	
# ::edge	argue-01	ARG0	book	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	argue-01	ARG1	and	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	argue-01	ARG1	it	0.0.0	0.0.0.0	
# ::edge	argue-01	mod	sure	0.0.0	0.0.0.2	
# ::edge	compose-01	ARG0	and	0	0.0	
# ::edge	compose-01	ARG1	it	0	0.1	
# ::edge	have-org-role-91	ARG1	argue-01	0.0.1.0	0.0.1.0.0	
# ::edge	have-org-role-91	ARG2	chief	0.0.1.0	0.0.1.0.1	
# ::edge	have-org-role-91	ARG3	product	0.0.1.0	0.0.1	
# ::edge	merit-01	ARG1	novel	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	possible	domain	argue-01	0.0.0.1	0.0.0	
# ::edge	seize-01	ARG0	possible	0.0.0.1.0	0.0.0.1	
# ::edge	seize-01	ARG1	merit-01	0.0.0.1.0	0.0.0.1.0.0	
(c / compose-01 
      :ARG0 (a2 / and 
            :ARG0-of (a5 / argue-01 
                  :ARG1 (i2 / it) 
                  :domain-of (p2 / possible 
                        :ARG0-of (s2 / seize-01 
                              :ARG1 (m / merit-01 
                                    :ARG1 (n / novel)))) 
                  :mod (s / sure)) 
            :op1 (p / product 
                  :ARG3-of (h / have-org-role-91 
                        :ARG1 (a4 / argue-01 
                              :ARG0 (b / book) 
                              :ARG1 (a3 / and)) 
                        :ARG2 (c2 / chief))) 
            :op2 (a / atmosphere)) 
      :ARG1 (i / it))

# ::snt the involvement of nurses in every stage of medical treatment may on occasions serve as a salutary check on possible excesses by doctors
# ::tok the involvement of nurses in every stage of medical treatment may on occasions serve as a salutary check on possible excesses by doctors
# ::alignments 22-23|0.1.0.0 19-20|0.0 13-14|0 12-13|0.1 10-11|0.2.0+0.2 9-10|0.1.0 8-9|0.1.0.2 6-7|0.1.0.1 5-6|0.1.0.1.1 3-4|0.1.0.1.0.0 1-2|0.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:12.699
# ::node	0	serve-01	13-14
# ::node	0.0	possible	19-20
# ::node	0.1	occasion	12-13
# ::node	0.1.0	treat-03	9-10
# ::node	0.1.0.0	doctor	22-23
# ::node	0.1.0.1	stage	6-7
# ::node	0.1.0.1.0	involve-01	1-2
# ::node	0.1.0.1.0.0	nurse	3-4
# ::node	0.1.0.1.1	every	5-6
# ::node	0.1.0.2	medicine	8-9
# ::node	0.2	date-entity	10-11
# ::node	0.2.0	5	10-11
# ::root	0	serve-01
# ::edge	date-entity	domain	serve-01	0.2	0	
# ::edge	date-entity	month	5	0.2	0.2.0	
# ::edge	involve-01	ARG1	stage	0.1.0.1.0	0.1.0.1	
# ::edge	involve-01	ARG2	nurse	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	serve-01	ARG0	possible	0	0.0	
# ::edge	serve-01	ARG1	occasion	0	0.1	
# ::edge	stage	mod	every	0.1.0.1	0.1.0.1.1	
# ::edge	treat-03	ARG0	doctor	0.1.0	0.1.0.0	
# ::edge	treat-03	ARG1	stage	0.1.0	0.1.0.1	
# ::edge	treat-03	ARG3	medicine	0.1.0	0.1.0.2	
# ::edge	treat-03	location	occasion	0.1.0	0.1	
(s / serve-01 
      :ARG0 (p / possible) 
      :ARG1 (o / occasion 
            :location-of (t / treat-03 
                  :ARG0 (d / doctor) 
                  :ARG1 (s2 / stage 
                        :ARG1-of (i / involve-01 
                              :ARG2 (n / nurse)) 
                        :mod (e / every)) 
                  :ARG3 (m / medicine))) 
      :domain-of (d2 / date-entity 
            :month 5))

# ::snt if he manages to finish the decade in triumph lendl could leave the garden with a another cheque in excess of dollars 1m
# ::tok if he manages to finish the decade in triumph lendl could leave the garden with a another cheque in excess of dollars 1m
# ::alignments 21-22|0.2.1.0+0.2.1 19-20|0.2 16-17|0.2.0 13-14|0.1.0 11-12|0.1 10-11|0 6-7|0.0.1.0+0.0.1 4-5|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:13.044
# ::node	0	possible	10-11
# ::node	0.0	finish-01	4-5
# ::node	0.0.0	he	1-2
# ::node	0.0.1	temporal-quantity	6-7
# ::node	0.0.1.0	decade	6-7
# ::node	0.1	leave-01	11-12
# ::node	0.1.0	garden	13-14
# ::node	0.2	exceed-01	19-20
# ::node	0.2.0	another	16-17
# ::node	0.2.1	monetary-quantity	21-22
# ::node	0.2.1.0	dollar	21-22
# ::root	0	possible
# ::edge	exceed-01	ARG0	another	0.2	0.2.0	
# ::edge	exceed-01	ARG1	monetary-quantity	0.2	0.2.1	
# ::edge	finish-01	ARG0	he	0.0	0.0.0	
# ::edge	finish-01	ARG1	possible	0.0	0	
# ::edge	finish-01	ARG2	temporal-quantity	0.0	0.0.1	
# ::edge	leave-01	ARG1	garden	0.1	0.1.0	
# ::edge	monetary-quantity	unit	dollar	0.2.1	0.2.1.0	
# ::edge	possible	domain	leave-01	0	0.1	
# ::edge	possible	op1	exceed-01	0	0.2	
# ::edge	temporal-quantity	unit	decade	0.0.1	0.0.1.0	
(p / possible 
      :ARG1-of (f / finish-01 
            :ARG0 (h / he) 
            :ARG2 (t / temporal-quantity 
                  :unit (d2 / decade))) 
      :domain (l / leave-01 
            :ARG1 (g / garden)) 
      :op1 (e / exceed-01 
            :ARG0 (a / another) 
            :ARG1 (m / monetary-quantity 
                  :unit (d / dollar))))

# ::snt a large majority of all children worked 10 hours or less per week and 6 per cent of london boys worked in excess of 20 hours
# ::tok a large majority of all children worked 10 hours or less per week and 6 per cent of london boys worked in excess of 20 hours
# ::alignments 25-26|0.0.0.1.0.1.1.2+0.0.0.1.0.1.1 24-25|0.0.0.1.0.1.1.0 22-23|0.0.0.1.0.1 20-21|0.0.0.1.0 19-20|0.0.0.1.0.0 18-19|0.0.0.1.0.1.0.0.0+0.0.0.1.0.1.0.0+0.0.0.1.0.1.0 16-17|0.0.0.1.0.0.0+0.0.0.1.0.0.0.0 14-15|0.0.0.1.0.1.1.1 13-14|0.0.1 12-13|0.0.2 10-11|0.1.0 9-10|0 8-9|0.1.2+0.1 7-8|0.1.1 6-7|0.0 5-6|0.0.0.1 4-5|0.0.0.1.1 2-3|0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:13.813
# ::node	0	or	9-10
# ::node	0.0	work-01	6-7
# ::node	0.0.0	majority	2-3
# ::node	0.0.0.0	large	1-2
# ::node	0.0.0.1	child	5-6
# ::node	0.0.0.1.0	work-01	20-21
# ::node	0.0.0.1.0.0	boy	19-20
# ::node	0.0.0.1.0.0.0	cent	16-17
# ::node	0.0.0.1.0.0.0.0	monetary-quantity	16-17
# ::node	0.0.0.1.0.1	exceed-01	22-23
# ::node	0.0.0.1.0.1.0	city	18-19
# ::node	0.0.0.1.0.1.0.0	name	18-19
# ::node	0.0.0.1.0.1.0.0.0	"London"	18-19
# ::node	0.0.0.1.0.1.1	temporal-quantity	25-26
# ::node	0.0.0.1.0.1.1.0	20	24-25
# ::node	0.0.0.1.0.1.1.1	6	14-15
# ::node	0.0.0.1.0.1.1.2	hour	25-26
# ::node	0.0.0.1.1	all	4-5
# ::node	0.0.1	and	13-14
# ::node	0.0.2	week	12-13
# ::node	0.1	temporal-quantity	8-9
# ::node	0.1.0	less	10-11
# ::node	0.1.1	10	7-8
# ::node	0.1.2	hour	8-9
# ::root	0	or
# ::edge	cent	topic	boy	0.0.0.1.0.0.0	0.0.0.1.0.0	
# ::edge	child	mod	majority	0.0.0.1	0.0.0	
# ::edge	child	quant	all	0.0.0.1	0.0.0.1.1	
# ::edge	city	name	name	0.0.0.1.0.1.0	0.0.0.1.0.1.0.0	
# ::edge	exceed-01	ARG0	city	0.0.0.1.0.1	0.0.0.1.0.1.0	
# ::edge	exceed-01	ARG2	temporal-quantity	0.0.0.1.0.1	0.0.0.1.0.1.1	
# ::edge	less	op1	temporal-quantity	0.1.0	0.1	
# ::edge	majority	mod	large	0.0.0	0.0.0.0	
# ::edge	monetary-quantity	unit	cent	0.0.0.1.0.0.0.0	0.0.0.1.0.0.0	
# ::edge	name	op1	"London"	0.0.0.1.0.1.0.0	0.0.0.1.0.1.0.0.0	
# ::edge	or	op1	temporal-quantity	0	0.1	
# ::edge	temporal-quantity	quant	10	0.1	0.1.1	
# ::edge	temporal-quantity	quant	20	0.0.0.1.0.1.1	0.0.0.1.0.1.1.0	
# ::edge	temporal-quantity	quant	6	0.0.0.1.0.1.1	0.0.0.1.0.1.1.1	
# ::edge	temporal-quantity	unit	hour	0.0.0.1.0.1.1	0.0.0.1.0.1.1.2	
# ::edge	temporal-quantity	unit	hour	0.1	0.1.2	
# ::edge	work-01	ARG0	child	0.0.0.1.0	0.0.0.1	
# ::edge	work-01	ARG0	majority	0.0	0.0.0	
# ::edge	work-01	ARG1	boy	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	work-01	ARG1	or	0.0	0	
# ::edge	work-01	ARG2	and	0.0	0.0.1	
# ::edge	work-01	ARG3	exceed-01	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	work-01	time	week	0.0	0.0.2	
(o / or 
      :ARG1-of (w3 / work-01 
            :ARG0 (m2 / majority 
                  :mod (l2 / large) 
                  :mod-of (c3 / child 
                        :ARG0-of (w / work-01 
                              :ARG1 (b / boy 
                                    :topic-of (c2 / cent 
                                          :unit-of (m / monetary-quantity))) 
                              :ARG3 (e / exceed-01 
                                    :ARG0 (c / city 
                                          :name (n / name 
                                                :op1 "London")) 
                                    :ARG2 (t / temporal-quantity 
                                          :quant 20 
                                          :quant 6 
                                          :unit (h / hour)))) 
                        :quant (a2 / all))) 
            :ARG2 (a / and) 
            :time (w2 / week)) 
      :op1 (t2 / temporal-quantity 
            :op-of (l / less) 
            :quant 10 
            :unit (h2 / hour)))

# ::snt having been sacked from ulm in 1934 for excess of talent he survived in aachen only until 1942
# ::tok having been sacked from ulm in 1934 for excess of talent he survived in aachen only until 1942
# ::alignments 17-18|0.1.0+0.1 16-17|0 15-16|0.0 12-13|0.2 11-12|0.2.0 10-11|0.2.1 8-9|0.2.1.0 6-7|0.2.2.0+0.2.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:13.944
# ::node	0	until	16-17
# ::node	0.0	only	15-16
# ::node	0.1	date-entity	17-18
# ::node	0.1.0	1942	17-18
# ::node	0.2	survive-01	12-13
# ::node	0.2.0	he	11-12
# ::node	0.2.1	talent	10-11
# ::node	0.2.1.0	exceed-01	8-9
# ::node	0.2.2	date-entity	6-7
# ::node	0.2.2.0	1934	6-7
# ::root	0	until
# ::edge	date-entity	year	1934	0.2.2	0.2.2.0	
# ::edge	date-entity	year	1942	0.1	0.1.0	
# ::edge	exceed-01	ARG1	talent	0.2.1.0	0.2.1	
# ::edge	survive-01	ARG0	he	0.2	0.2.0	
# ::edge	survive-01	ARG1	talent	0.2	0.2.1	
# ::edge	survive-01	ARG2	date-entity	0.2	0.2.2	
# ::edge	survive-01	time	until	0.2	0	
# ::edge	until	mod	only	0	0.0	
# ::edge	until	op1	date-entity	0	0.1	
(u / until 
      :mod (o / only) 
      :op1 (d / date-entity 
            :year 1942) 
      :time-of (s / survive-01 
            :ARG0 (h / he) 
            :ARG1 (t / talent 
                  :ARG1-of (e / exceed-01)) 
            :ARG2 (d2 / date-entity 
                  :year 1934)))

# ::snt last year the total was well in excess of 2000 for the first time
# ::tok last year the total was well in excess of 2000 for the first time
# ::alignments 13-14|0 9-10|0.0.1.0+0.0.1 7-8|0.0 5-6|0.0.2 1-2|0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:13.972
# ::node	0	time	13-14
# ::node	0.0	exceed-01	7-8
# ::node	0.0.0	year	1-2
# ::node	0.0.0.0	last	0-1
# ::node	0.0.1	date-entity	9-10
# ::node	0.0.1.0	2000	9-10
# ::node	0.0.2	well	5-6
# ::root	0	time
(t / time 
      :ARG1-of (e / exceed-01 
            :ARG0 (y / year 
                  :mod (l / last)) 
            :time (d / date-entity 
                  :year 2000) 
            :time (w / well)))

# ::snt an arable and stock farm in shabbington on the oxfordshirebuckinghamshire border has come on to the property market priced in excess of 600000
# ::tok an arable and stock farm in shabbington on the oxfordshirebuckinghamshire border has come on to the property market priced in excess of 600000
# ::alignments 22-23|0.0.2.2+0.0.2.1+0.0.2.0+0.0.2 20-21|0.0.1 18-19|0.0 17-18|0.0.0 16-17|0.0.0.0 10-11|0.1.0 4-5|0 3-4|0.1.1 2-3|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:14.111
# ::node	0	farm	4-5
# ::node	0.0	price-01	18-19
# ::node	0.0.0	market	17-18
# ::node	0.0.0.0	property	16-17
# ::node	0.0.1	exceed-01	20-21
# ::node	0.0.2	date-entity	22-23
# ::node	0.0.2.0	0	22-23
# ::node	0.0.2.1	0	22-23
# ::node	0.0.2.2	60	22-23
# ::node	0.1	and	2-3
# ::node	0.1.0	border-01	10-11
# ::node	0.1.1	stock	3-4
# ::root	0	farm
(f / farm 
      :ARG0-of (p / price-01 
            :ARG1 (m / market 
                  :mod (p2 / property)) 
            :ARG2 (e / exceed-01) 
            :time (d / date-entity 
                  :day 0 
                  :month 0 
                  :year 60)) 
      :op-of (a / and 
            :ARG1-of (b / border-01) 
            :op1 (s / stock)))

# ::snt violence apart it will be interesting to see whether david campeses death or glory excesses which often got his side into trouble will be curbed in the third test
# ::tok violence apart it will be interesting to see whether david campeses death or glory excesses which often got his side into trouble will be curbed in the third test
# ::alignments 28-29|0.3.0.0 24-25|0.3.0 21-22|0.3.0.0.1 19-20|0.3.0.0.1.0 16-17|0.3.0.0.0 13-14|0.3.2 12-13|0.3 11-12|0.3.1 7-8|0 5-6|0.2 2-3|0.0 1-2|0.1 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:14.320
# ::node	0	see-01	7-8
# ::node	0.0	it	2-3
# ::node	0.0.0	violence	0-1
# ::node	0.1	apart	1-2
# ::node	0.2	interesting	5-6
# ::node	0.3	or	12-13
# ::node	0.3.0	curb-01	24-25
# ::node	0.3.0.0	test-01	28-29
# ::node	0.3.0.0.0	often	16-17
# ::node	0.3.0.0.1	trouble-01	21-22
# ::node	0.3.0.0.1.0	side	19-20
# ::node	0.3.1	die-01	11-12
# ::node	0.3.2	glory	13-14
# ::root	0	see-01
# ::edge	curb-01	ARG1	or	0.3.0	0.3	
# ::edge	curb-01	ARG2	test-01	0.3.0	0.3.0.0	
# ::edge	interesting	domain	see-01	0.2	0	
# ::edge	or	op1	die-01	0.3	0.3.1	
# ::edge	or	op2	glory	0.3	0.3.2	
# ::edge	see-01	ARG0	it	0	0.0	
# ::edge	see-01	ARG1	apart	0	0.1	
# ::edge	see-01	source	or	0	0.3	
# ::edge	side	topic	trouble-01	0.3.0.0.1.0	0.3.0.0.1	
# ::edge	test-01	ARG1	often	0.3.0.0	0.3.0.0.0	
# ::edge	trouble-01	ARG1	test-01	0.3.0.0.1	0.3.0.0	
# ::edge	violence	poss	it	0.0.0	0.0	
(s2 / see-01 
      :ARG0 (i2 / it 
            :poss-of (v / violence)) 
      :ARG1 (a / apart) 
      :domain-of (i / interesting) 
      :source (o2 / or 
            :ARG1-of (c / curb-01 
                  :ARG2 (t / test-01 
                        :ARG1 (o / often) 
                        :ARG1-of (t2 / trouble-01 
                              :topic-of (s / side)))) 
            :op1 (d / die-01) 
            :op2 (g / glory)))

# ::snt if channel 4s income rises above a 14 per cent level then it will split the excess between itself and channel 3 its guarantors
# ::tok if channel 4s income rises above a 14 per cent level then it will split the excess between itself and channel 3 its guarantors
# ::alignments 21-22|0.1.0 20-21|0.2 19-20|0 17-18|0.1.1.0.0 16-17|0.1.1.0 14-15|0.1 12-13|0.1.1 11-12|0.1.2.1 10-11|0.1.2 9-10|0.1.2.0.0+0.1.2.0 7-8|0.0.0.0 5-6|0.0.2 4-5|0.0 3-4|0.0.1 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:14.867
# ::node	0	and	19-20
# ::node	0.0	rise-01	4-5
# ::node	0.0.0	channel	1-2
# ::node	0.0.0.0	14	7-8
# ::node	0.0.1	income	3-4
# ::node	0.0.2	above	5-6
# ::node	0.1	split-01	14-15
# ::node	0.1.0	3	21-22
# ::node	0.1.1	it	12-13
# ::node	0.1.1.0	exceed-01	16-17
# ::node	0.1.1.0.0	between	17-18
# ::node	0.1.2	level	10-11
# ::node	0.1.2.0	monetary-quantity	9-10
# ::node	0.1.2.0.0	cent	9-10
# ::node	0.1.2.1	then	11-12
# ::node	0.2	channel	20-21
# ::root	0	and
# ::edge	and	op1	rise-01	0	0.0	
# ::edge	and	op2	split-01	0	0.1	
# ::edge	and	op3	channel	0	0.2	
# ::edge	channel	quant	14	0.0.0	0.0.0.0	
# ::edge	exceed-01	ARG0	it	0.1.1.0	0.1.1	
# ::edge	exceed-01	ARG1	between	0.1.1.0	0.1.1.0.0	
# ::edge	level	mod	monetary-quantity	0.1.2	0.1.2.0	
# ::edge	level	mod	then	0.1.2	0.1.2.1	
# ::edge	monetary-quantity	unit	cent	0.1.2.0	0.1.2.0.0	
# ::edge	rise-01	ARG0	channel	0.0	0.0.0	
# ::edge	rise-01	ARG1	income	0.0	0.0.1	
# ::edge	rise-01	ARG2	above	0.0	0.0.2	
# ::edge	split-01	ARG0	3	0.1	0.1.0	
# ::edge	split-01	ARG1	it	0.1	0.1.1	
# ::edge	split-01	condition	level	0.1	0.1.2	
(a / and 
      :op1 (r / rise-01 
            :ARG0 (c3 / channel 
                  :quant 14) 
            :ARG1 (i2 / income) 
            :ARG2 (a2 / above)) 
      :op2 (s / split-01 
            :ARG0 3 
            :ARG1 (i / it 
                  :ARG0-of (e / exceed-01 
                        :ARG1 (b / between))) 
            :condition (l / level 
                  :mod (m / monetary-quantity 
                        :unit (c2 / cent)) 
                  :mod (t / then))) 
      :op3 (c / channel))

# ::snt entry to the contest is open to any driver who completes in excess of 10000 miles a year for business purposes on uk roads whether in their own car or a company vehicle
# ::tok entry to the contest is open to any driver who completes in excess of 10000 miles a year for business purposes on uk roads whether in their own car or a company vehicle
# ::alignments 32-33|0.1.0.0.1 31-32|0.1.0.0.0 29-30|0.1.0.0 28-29|0.1.0.0.2 23-24|0.0.1.0.0 20-21|0.0.1.0 19-20|0.0.1.0.1 17-18|0.0.1 15-16|0.0.0.1+0.0.0 14-15|0.0.0.0 12-13|0.0 8-9|0.1+0.1.0 7-8|0.1.0.1 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:15.054
# ::node	0	contest-00	3-4
# ::node	0.0	exceed-01	12-13
# ::node	0.0.0	distance-quantity	15-16
# ::node	0.0.0.0	10000	14-15
# ::node	0.0.0.1	mile	15-16
# ::node	0.0.1	year	17-18
# ::node	0.0.1.0	purpose	20-21
# ::node	0.0.1.0.0	road	23-24
# ::node	0.0.1.0.1	business	19-20
# ::node	0.1	drive-01	8-9
# ::node	0.1.0	person	8-9
# ::node	0.1.0.0	or	29-30
# ::node	0.1.0.0.0	company	31-32
# ::node	0.1.0.0.1	vehicle	32-33
# ::node	0.1.0.0.2	car	28-29
# ::node	0.1.0.1	any	7-8
# ::root	0	contest-00
# ::edge	car	quant	or	0.1.0.0.2	0.1.0.0	
# ::edge	contest-00	ARG1	exceed-01	0	0.0	
# ::edge	distance-quantity	quant	10000	0.0.0	0.0.0.0	
# ::edge	distance-quantity	unit	mile	0.0.0	0.0.0.1	
# ::edge	drive-01	ARG0	person	0.1	0.1.0	
# ::edge	drive-01	ARG1	contest-00	0.1	0	
# ::edge	exceed-01	ARG1	distance-quantity	0.0	0.0.0	
# ::edge	exceed-01	ARG2	year	0.0	0.0.1	
# ::edge	or	domain	person	0.1.0.0	0.1.0	
# ::edge	or	op1	company	0.1.0.0	0.1.0.0.0	
# ::edge	or	op2	vehicle	0.1.0.0	0.1.0.0.1	
# ::edge	person	mod	any	0.1.0	0.1.0.1	
# ::edge	purpose	location	road	0.0.1.0	0.0.1.0.0	
# ::edge	purpose	mod	business	0.0.1.0	0.0.1.0.1	
# ::edge	year	location	purpose	0.0.1	0.0.1.0	
(c3 / contest-00 
      :ARG1 (e / exceed-01 
            :ARG1 (d / distance-quantity 
                  :quant 10000 
                  :unit (m / mile)) 
            :ARG2 (y / year 
                  :location (p / purpose 
                        :location (r / road) 
                        :mod (b / business)))) 
      :ARG1-of (d2 / drive-01 
            :ARG0 (p2 / person 
                  :domain-of (o / or 
                        :op1 (c / company) 
                        :op2 (v / vehicle) 
                        :quant-of (c2 / car)) 
                  :mod (a / any))))

# ::snt the excesses of wall street have been a central issue of the last decade and this is highclass readable source material
# ::tok the excesses of wall street have been a central issue of the last decade and this is highclass readable source material
# ::alignments 20-21|0.1.0 19-20|0.1 15-16|0.0.0.0.0 14-15|0 13-14|0.0.0+0.0 12-13|0.0.0.0 9-10|0.3 8-9|0.3.0 4-5|0.2.0 3-4|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:15.114
# ::node	0	and	14-15
# ::node	0.0	temporal-quantity	13-14
# ::node	0.0.0	decade	13-14
# ::node	0.0.0.0	last	12-13
# ::node	0.0.0.0.0	this	15-16
# ::node	0.1	source	19-20
# ::node	0.1.0	material	20-21
# ::node	0.2	wall	3-4
# ::node	0.2.0	street	4-5
# ::node	0.3	issue	9-10
# ::node	0.3.0	central	8-9
# ::root	0	and
# ::edge	and	op1	temporal-quantity	0	0.0	
# ::edge	and	op2	source	0	0.1	
# ::edge	and	poss	wall	0	0.2	
# ::edge	decade	mod	last	0.0.0	0.0.0.0	
# ::edge	issue	mod	central	0.3	0.3.0	
# ::edge	issue	topic	and	0.3	0	
# ::edge	source	location	material	0.1	0.1.0	
# ::edge	street	mod	wall	0.2.0	0.2	
# ::edge	temporal-quantity	unit	decade	0.0	0.0.0	
# ::edge	this	example	last	0.0.0.0.0	0.0.0.0	
(a / and 
      :op1 (t2 / temporal-quantity 
            :unit (d / decade 
                  :mod (l / last 
                        :example-of (t / this)))) 
      :op2 (s / source 
            :location (m / material)) 
      :poss (w / wall 
            :mod-of (s2 / street)) 
      :topic-of (i / issue 
            :mod (c / central)))

# ::snt the success of scrooge may make us realise that we have lost something worth having but that we have only our own excesses to blame
# ::tok the success of scrooge may make us realise that we have lost something worth having but that we have only our own excesses to blame
# ::alignments 24-25|0.0.0.0 19-20|0.0.0.0.0 17-18|0.1 15-16|0 13-14|0.0 12-13|0.0.0 11-12|0.0.0.1 9-10|0.0.0.1.0 7-8|0.0.0.1.1 4-5|0.0.0.1.1.0.0.0+0.0.0.1.1.0.0 1-2|0.0.0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:15.296
# ::node	0	contrast-01	15-16
# ::node	0.0	worth	13-14
# ::node	0.0.0	something	12-13
# ::node	0.0.0.0	blame-01	24-25
# ::node	0.0.0.0.0	only	19-20
# ::node	0.0.0.1	lose-02	11-12
# ::node	0.0.0.1.0	we	9-10
# ::node	0.0.0.1.1	realize-01	7-8
# ::node	0.0.0.1.1.0	succeed-01	1-2
# ::node	0.0.0.1.1.0.0	date-entity	4-5
# ::node	0.0.0.1.1.0.0.0	5	4-5
# ::node	0.1	we	17-18
# ::root	0	contrast-01
# ::edge	blame-01	ARG0	something	0.0.0.0	0.0.0	
# ::edge	blame-01	ARG1	only	0.0.0.0	0.0.0.0.0	
# ::edge	contrast-01	ARG1	worth	0	0.0	
# ::edge	contrast-01	ARG2	we	0	0.1	
# ::edge	date-entity	month	5	0.0.0.1.1.0.0	0.0.0.1.1.0.0.0	
# ::edge	lose-02	ARG0	we	0.0.0.1	0.0.0.1.0	
# ::edge	lose-02	ARG1	something	0.0.0.1	0.0.0	
# ::edge	realize-01	ARG0	succeed-01	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	realize-01	ARG1	lose-02	0.0.0.1.1	0.0.0.1	
# ::edge	something	location	worth	0.0.0	0.0	
# ::edge	succeed-01	ARG0	date-entity	0.0.0.1.1.0	0.0.0.1.1.0.0	
(c / contrast-01 
      :ARG1 (w2 / worth 
            :location-of (s / something 
                  :ARG0-of (b / blame-01 
                        :ARG1 (o / only)) 
                  :ARG1-of (l / lose-02 
                        :ARG0 (w3 / we) 
                        :ARG1-of (r / realize-01 
                              :ARG0 (s2 / succeed-01 
                                    :ARG0 (d / date-entity 
                                          :month 5)))))) 
      :ARG2 (w / we))

# ::snt regulars got a little bored with the old production but have yet to get used to the occasionally vulgar excesses of act ii of anthony dowells 1987 version
# ::tok regulars got a little bored with the old production but have yet to get used to the occasionally vulgar excesses of act ii of anthony dowells 1987 version
# ::alignments 27-28|0.2.0 26-27|0.1.0.0.0+0.1.0.0 22-23|0.2.1 21-22|0.2.1.0 17-18|0.0 14-15|0.2 11-12|0.2.2 9-10|0 8-9|0.1.0 7-8|0.1.0.1 4-5|0.1 3-4|0.2.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:15.564
# ::node	0	contrast-01	9-10
# ::node	0.0	occasional	17-18
# ::node	0.1	bore-02	4-5
# ::node	0.1.0	produce-01	8-9
# ::node	0.1.0.0	date-entity	26-27
# ::node	0.1.0.0.0	1987	26-27
# ::node	0.1.0.1	old	7-8
# ::node	0.2	use-01	14-15
# ::node	0.2.0	version	27-28
# ::node	0.2.1	ii	22-23
# ::node	0.2.1.0	act-02	21-22
# ::node	0.2.1.0.0	little	3-4
# ::node	0.2.2	yet	11-12
# ::root	0	contrast-01
# ::edge	act-02	ARG0	ii	0.2.1.0	0.2.1	
# ::edge	act-02	ARG1	little	0.2.1.0	0.2.1.0.0	
# ::edge	bore-02	ARG1	produce-01	0.1	0.1.0	
# ::edge	contrast-01	ARG0	occasional	0	0.0	
# ::edge	contrast-01	ARG1	bore-02	0	0.1	
# ::edge	contrast-01	ARG2	use-01	0	0.2	
# ::edge	date-entity	year	1987	0.1.0.0	0.1.0.0.0	
# ::edge	produce-01	ARG1	date-entity	0.1.0	0.1.0.0	
# ::edge	produce-01	mod	old	0.1.0	0.1.0.1	
# ::edge	use-01	ARG0	version	0.2	0.2.0	
# ::edge	use-01	ARG1	ii	0.2	0.2.1	
# ::edge	use-01	mod	yet	0.2	0.2.2	
(c / contrast-01 
      :ARG0 (o / occasional) 
      :ARG1 (b / bore-02 
            :ARG1 (p / produce-01 
                  :ARG1 (d / date-entity 
                        :year 1987) 
                  :mod (o2 / old))) 
      :ARG2 (u / use-01 
            :ARG0 (v / version) 
            :ARG1 (i / ii 
                  :ARG0-of (a / act-02 
                        :ARG1 (l / little))) 
            :mod (y / yet)))

# ::snt a typical large commercial machine executes a program at a rate of 10 to 50 million instructions per second or mips even a relatively inexpensive personal computer costing 1000 say can compute at a rate in excess of 100 thousand instructions per second 
# ::tok a typical large commercial machine executes a program at a rate of 10 to 50 million instructions per second or mips even a relatively inexpensive personal computer costing 1000 say can compute at a rate in excess of 100 thousand instructions per second
# ::alignments 40-41|0.2.3.0 38-39|0.2.0 36-37|0.2.3 34-35|0.2.3.1 30-31|0.1 29-30|0 28-29|0.2.4.0+0.2.4 27-28|0.2 26-27|0.2.1 25-26|0.2.1.0 23-24|0.0.0.0.0.0 19-20|0.2.2 16-17|0.2.2.0 14-15|0.2.3.2 12-13|0.2.3.3 10-11|0.0 7-8|0.0.0.1 5-6|0.0.0 4-5|0.0.0.0 3-4|0.0.0.0.2 2-3|0.0.0.0.1 1-2|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:16.620
# ::node	0	say-01	29-30
# ::node	0.0	rate	10-11
# ::node	0.0.0	execute-01	5-6
# ::node	0.0.0.0	machine	4-5
# ::node	0.0.0.0.0	typify-01	1-2
# ::node	0.0.0.0.0.0	relative	23-24
# ::node	0.0.0.0.1	large	2-3
# ::node	0.0.0.0.2	commerce	3-4
# ::node	0.0.0.1	program	7-8
# ::node	0.1	possible	30-31
# ::node	0.2	cost-01	27-28
# ::node	0.2.0	100	38-39
# ::node	0.2.1	computer	26-27
# ::node	0.2.1.0	personal	25-26
# ::node	0.2.2	or	19-20
# ::node	0.2.2.0	instruction	16-17
# ::node	0.2.3	exceed-01	36-37
# ::node	0.2.3.0	instruction	40-41
# ::node	0.2.3.1	rate	34-35
# ::node	0.2.3.2	50	14-15
# ::node	0.2.3.3	10	12-13
# ::node	0.2.4	date-entity	28-29
# ::node	0.2.4.0	1000	28-29
# ::root	0	say-01
# ::edge	10	op1	exceed-01	0.2.3.3	0.2.3	
# ::edge	50	op1	exceed-01	0.2.3.2	0.2.3	
# ::edge	computer	mod	personal	0.2.1	0.2.1.0	
# ::edge	cost-01	ARG0	100	0.2	0.2.0	
# ::edge	cost-01	ARG1	computer	0.2	0.2.1	
# ::edge	cost-01	ARG2	or	0.2	0.2.2	
# ::edge	cost-01	condition	say-01	0.2	0	
# ::edge	cost-01	time	date-entity	0.2	0.2.4	
# ::edge	date-entity	year	1000	0.2.4	0.2.4.0	
# ::edge	exceed-01	ARG1	instruction	0.2.3	0.2.3.0	
# ::edge	exceed-01	ARG2	cost-01	0.2.3	0.2	
# ::edge	execute-01	ARG0	machine	0.0.0	0.0.0.0	
# ::edge	execute-01	ARG1	program	0.0.0	0.0.0.1	
# ::edge	execute-01	ARG2	rate	0.0.0	0.0	
# ::edge	machine	mod	commerce	0.0.0.0	0.0.0.0.2	
# ::edge	machine	mod	large	0.0.0.0	0.0.0.0.1	
# ::edge	or	op1	instruction	0.2.2	0.2.2.0	
# ::edge	rate	mod	exceed-01	0.2.3.1	0.2.3	
# ::edge	say-01	ARG0	rate	0	0.0	
# ::edge	say-01	ARG1	possible	0	0.1	
# ::edge	typify-01	ARG0	machine	0.0.0.0.0	0.0.0.0	
# ::edge	typify-01	ARG1	relative	0.0.0.0.0	0.0.0.0.0.0	
(s / say-01 
      :ARG0 (r3 / rate 
            :ARG2-of (e2 / execute-01 
                  :ARG0 (m / machine 
                        :ARG0-of (t / typify-01 
                              :ARG1 (r2 / relative)) 
                        :mod (l / large) 
                        :mod (c3 / commerce)) 
                  :ARG1 (p3 / program))) 
      :ARG1 (p / possible) 
      :condition-of (c / cost-01 
            :ARG0 100 
            :ARG1 (c2 / computer 
                  :mod (p2 / personal)) 
            :ARG2 (o / or 
                  :op1 (i2 / instruction)) 
            :ARG2-of (e / exceed-01 
                  :ARG1 (i / instruction) 
                  :mod-of (r / rate) 
                  :op-of 50 
                  :op-of 10) 
            :time (d / date-entity 
                  :year 1000)))

# ::snt the lightman report says that mr scargill and mr simon have unrestricted and unaudited access to funds currently in excess of 2 million in accounts which can only be operated by mr west
# ::tok the lightman report says that mr scargill and mr simon have unrestricted and unaudited access to funds currently in excess of 2 million in accounts which can only be operated by mr west
# ::alignments 32-33|0.2.0.0 27-28|0.1.0.2 26-27|0.2.1 24-25|0.2.1.0 21-22|0.1.0.0 19-20|0.2.0 17-18|0.2.0.1 16-17|0.1.0.1 14-15|0.1.0 12-13|0.1 7-8|0.2 3-4|0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:16.859
# ::node	0	say-01	3-4
# ::node	0.0	report	2-3
# ::node	0.1	and	12-13
# ::node	0.1.0	access-01	14-15
# ::node	0.1.0.0	2	21-22
# ::node	0.1.0.1	fund	16-17
# ::node	0.1.0.2	only	27-28
# ::node	0.2	and	7-8
# ::node	0.2.0	exceed-01	19-20
# ::node	0.2.0.0	west	32-33
# ::node	0.2.0.1	current	17-18
# ::node	0.2.1	possible	26-27
# ::node	0.2.1.0	account	24-25
# ::root	0	say-01
# ::edge	access-01	ARG0	2	0.1.0	0.1.0.0	
# ::edge	access-01	ARG1	fund	0.1.0	0.1.0.1	
# ::edge	access-01	mod	only	0.1.0	0.1.0.2	
# ::edge	account	domain	possible	0.2.1.0	0.2.1	
# ::edge	and	op1	access-01	0.1	0.1.0	
# ::edge	and	op1	say-01	0.2	0	
# ::edge	and	op2	possible	0.2	0.2.1	
# ::edge	exceed-01	ARG0	west	0.2.0	0.2.0.0	
# ::edge	exceed-01	ARG1	and	0.2.0	0.2	
# ::edge	exceed-01	time	current	0.2.0	0.2.0.1	
# ::edge	say-01	ARG0	report	0	0.0	
# ::edge	say-01	ARG1	and	0	0.1	
(s / say-01 
      :ARG0 (r / report) 
      :ARG1 (a3 / and 
            :op1 (a2 / access-01 
                  :ARG0 2 
                  :ARG1 (f / fund) 
                  :mod (o / only))) 
      :op-of (a4 / and 
            :ARG1-of (e / exceed-01 
                  :ARG0 (w / west) 
                  :time (c / current)) 
            :op1 (p / possible 
                  :domain-of (a / account))))

# ::snt on examination there was little abnormal to see the cervix looked very healthy and there was no excess of vaginal discharge
# ::tok on examination there was little abnormal to see the cervix looked very healthy and there was no excess of vaginal discharge
# ::alignments 20-21|0.2.0 17-18|0.2 16-17|0.2.1 13-14|0 12-13|0.1.0 11-12|0.1.0.0 10-11|0.1 7-8|0.0 5-6|0.0.1 4-5|0.0.1.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:16.917
# ::node	0	and	13-14
# ::node	0.0	see-01	7-8
# ::node	0.0.0	examine-01	1-2
# ::node	0.0.1	abnormal	5-6
# ::node	0.0.1.0	little	4-5
# ::node	0.1	look-01	10-11
# ::node	0.1.0	healthy	12-13
# ::node	0.1.0.0	very	11-12
# ::node	0.2	exceed-01	17-18
# ::node	0.2.0	discharge-01	20-21
# ::node	0.2.1	-	16-17
# ::root	0	and
# ::edge	abnormal	domain	see-01	0.0.1	0.0	
# ::edge	abnormal	mod	little	0.0.1	0.0.1.0	
# ::edge	and	op1	see-01	0	0.0	
# ::edge	and	op2	look-01	0	0.1	
# ::edge	and	op3	exceed-01	0	0.2	
# ::edge	examine-01	ARG1	see-01	0.0.0	0.0	
# ::edge	exceed-01	ARG1	discharge-01	0.2	0.2.0	
# ::edge	exceed-01	polarity	-	0.2	0.2.1	
# ::edge	healthy	degree	very	0.1.0	0.1.0.0	
# ::edge	look-01	ARG1	healthy	0.1	0.1.0	
(a / and 
      :op1 (s / see-01 
            :ARG1-of (e2 / examine-01) 
            :domain-of (a2 / abnormal 
                  :mod (l2 / little))) 
      :op2 (l / look-01 
            :ARG1 (h / healthy 
                  :degree (v / very))) 
      :op3 (e / exceed-01 
            :ARG1 (d / discharge-01) 
            :polarity (- / -)))

# ::snt yet cynical though its manufacture was the excesses of the fuumlaut
# ::tok yet cynical though its manufacture was the excesses of the fuumlaut
# ::alignments 4-5|0.0 1-2|0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:16.929
# ::node	0	cynical	1-2
# ::node	0.0	manufacture-01	4-5
# ::node	0.1	yet	0-1
# ::root	0	cynical
# ::edge	cynical	degree	yet	0	0.1	
# ::edge	manufacture-01	ARG1	cynical	0.0	0	
(c / cynical 
      :ARG1-of (m / manufacture-01) 
      :degree (y / yet))

# ::snt then run a piece of plastic or wood finished with a smooth small radius around the edge and leave the excess to cure
# ::tok then run a piece of plastic or wood finished with a smooth small radius around the edge and leave the excess to cure
# ::alignments 22-23|0.1.0.0 20-21|0.1.0 18-19|0.1 17-18|0 14-15|0.1.0.0.1.0 13-14|0.1.0.0.1 12-13|0.1.0.0.1.1 11-12|0.1.0.0.1.2 8-9|0.0 7-8|0.0.0.0.0.0 6-7|0.0.0.0.0 5-6|0.0.0.0 3-4|0.0.0 0-1|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:17.057
# ::node	0	and	17-18
# ::node	0.0	finish-01	8-9
# ::node	0.0.0	piece	3-4
# ::node	0.0.0.0	plastic	5-6
# ::node	0.0.0.0.0	or	6-7
# ::node	0.0.0.0.0.0	wood	7-8
# ::node	0.1	leave-01	18-19
# ::node	0.1.0	exceed-01	20-21
# ::node	0.1.0.0	cure-01	22-23
# ::node	0.1.0.0.0	then	0-1
# ::node	0.1.0.0.1	radius	13-14
# ::node	0.1.0.0.1.0	around	14-15
# ::node	0.1.0.0.1.1	small	12-13
# ::node	0.1.0.0.1.2	smooth	11-12
# ::root	0	and
# ::edge	and	op1	finish-01	0	0.0	
# ::edge	and	op2	leave-01	0	0.1	
# ::edge	cure-01	ARG0	then	0.1.0.0	0.1.0.0.0	
# ::edge	cure-01	ARG1	radius	0.1.0.0	0.1.0.0.1	
# ::edge	exceed-01	ARG2	cure-01	0.1.0	0.1.0.0	
# ::edge	finish-01	ARG1	piece	0.0	0.0.0	
# ::edge	leave-01	ARG1	exceed-01	0.1	0.1.0	
# ::edge	or	op1	plastic	0.0.0.0.0	0.0.0.0	
# ::edge	or	op2	wood	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	piece	mod	plastic	0.0.0	0.0.0.0	
# ::edge	radius	location	around	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	radius	mod	small	0.1.0.0.1	0.1.0.0.1.1	
# ::edge	radius	mod	smooth	0.1.0.0.1	0.1.0.0.1.2	
(a / and 
      :op1 (f / finish-01 
            :ARG1 (p2 / piece 
                  :mod (p / plastic 
                        :op-of (o / or 
                              :op1 (w / wood))))) 
      :op2 (l / leave-01 
            :ARG1 (e / exceed-01 
                  :ARG2 (c / cure-01 
                        :ARG0 (t / then) 
                        :ARG1 (r / radius 
                              :location (a2 / around) 
                              :mod (s / small) 
                              :mod (s2 / smooth))))))

# ::snt go back two centuries to monteverdi when the first seeds of opera were sown and the experience is altogether different excesses are stripped away replaced by spareness and understatement
# ::tok go back two centuries to monteverdi when the first seeds of opera were sown and the experience is altogether different excesses are stripped away replaced by spareness and understatement
# ::alignments 27-28|0 24-25|0.0 23-24|0.0.1.1 22-23|0.0.1 19-20|0.0.0 18-19|0.0.0.2 16-17|0.0.0.1 14-15|0.0.0.3 11-12|0.0.0.3.0 9-10|0.0.0.0 3-4|0.0.1.0.0.1+0.0.1.0.0 2-3|0.0.1.0.0.0 1-2|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:17.338
# ::node	0	and	27-28
# ::node	0.0	replace-01	24-25
# ::node	0.0.0	differ-02	19-20
# ::node	0.0.0.0	seed	9-10
# ::node	0.0.0.1	experience-01	16-17
# ::node	0.0.0.2	altogether	18-19
# ::node	0.0.0.3	and	14-15
# ::node	0.0.0.3.0	opera	11-12
# ::node	0.0.1	strip-01	22-23
# ::node	0.0.1.0	back	1-2
# ::node	0.0.1.0.0	temporal-quantity	3-4
# ::node	0.0.1.0.0.0	2	2-3
# ::node	0.0.1.0.0.1	century	3-4
# ::node	0.0.1.1	away	23-24
# ::root	0	and
(a / and 
      :ARG0-of (r / replace-01 
            :ARG1 (d / differ-02 
                  :ARG0 (s2 / seed) 
                  :ARG1 (e / experience-01) 
                  :mod (a3 / altogether) 
                  :op-of (a4 / and 
                        :op1 (o / opera))) 
            :ARG2-of (s / strip-01 
                  :ARG1 (b / back 
                        :mod-of (t / temporal-quantity 
                              :quant 2 
                              :unit (c / century))) 
                  :direction (a2 / away))))

# ::snt what sanctions are there against an insurer turning down a settlement offer by the plaintiff within the insurance limits and thereby exposing his client the insured to personal liability on a later verdict in excess of those limits
# ::tok what sanctions are there against an insurer turning down a settlement offer by the plaintiff within the insurance limits and thereby exposing his client the insured to personal liability on a later verdict in excess of those limits
# ::alignments 37-38|0.3.0.0.0 34-35|0.3.0.0.0.0 32-33|0.3.0.0.0.0.0 31-32|0.3.0.0.0.0.0.0 28-29|0.3.0.0 27-28|0.3.0.0.1 25-26|0.3.0+0.3 23-24|0.2.1 21-22|0.2 19-20|0 18-19|0.1 17-18|0.1.0 15-16|0.1.1 11-12|0.0.0 10-11|0.0.0.0 8-9|0.0.1 7-8|0.0 1-2|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:17.705
# ::node	0	and	19-20
# ::node	0.0	turn-02	7-8
# ::node	0.0.0	offer-01	11-12
# ::node	0.0.0.0	settle-02	10-11
# ::node	0.0.1	down	8-9
# ::node	0.1	limit-01	18-19
# ::node	0.1.0	insure-02	17-18
# ::node	0.1.1	within	15-16
# ::node	0.2	expose-01	21-22
# ::node	0.2.0	sanction-02	1-2
# ::node	0.2.1	client	23-24
# ::node	0.3	person	25-26
# ::node	0.3.0	insure-02	25-26
# ::node	0.3.0.0	liability	28-29
# ::node	0.3.0.0.0	limit-01	37-38
# ::node	0.3.0.0.0.0	exceed-01	34-35
# ::node	0.3.0.0.0.0.0	verdict	32-33
# ::node	0.3.0.0.0.0.0.0	late	31-32
# ::node	0.3.0.0.1	personal	27-28
# ::root	0	and
# ::edge	and	op1	turn-02	0	0.0	
# ::edge	and	op2	limit-01	0	0.1	
# ::edge	and	op3	expose-01	0	0.2	
# ::edge	and	op4	person	0	0.3	
# ::edge	exceed-01	ARG1	limit-01	0.3.0.0.0.0	0.3.0.0.0	
# ::edge	expose-01	ARG0	sanction-02	0.2	0.2.0	
# ::edge	expose-01	ARG1	client	0.2	0.2.1	
# ::edge	insure-02	ARG1	person	0.3.0	0.3	
# ::edge	insure-02	ARG2	liability	0.3.0	0.3.0.0	
# ::edge	liability	mod	personal	0.3.0.0	0.3.0.0.1	
# ::edge	limit-01	ARG1	insure-02	0.1	0.1.0	
# ::edge	limit-01	ARG1	liability	0.3.0.0.0	0.3.0.0	
# ::edge	settle-02	ARG1	offer-01	0.0.0.0	0.0.0	
# ::edge	turn-02	ARG1	offer-01	0.0	0.0.0	
# ::edge	turn-02	direction	down	0.0	0.0.1	
# ::edge	verdict	mod	exceed-01	0.3.0.0.0.0.0	0.3.0.0.0.0	
# ::edge	verdict	time	late	0.3.0.0.0.0.0	0.3.0.0.0.0.0.0	
# ::edge	within	op1	limit-01	0.1.1	0.1	
(a / and 
      :op1 (t / turn-02 
            :ARG1 (o / offer-01 
                  :ARG1-of (s / settle-02)) 
            :direction (d / down)) 
      :op2 (l4 / limit-01 
            :ARG1 (i2 / insure-02) 
            :op-of (w / within)) 
      :op3 (e2 / expose-01 
            :ARG0 (s2 / sanction-02) 
            :ARG1 (c / client)) 
      :op4 (p2 / person 
            :ARG1-of (i / insure-02 
                  :ARG2 (l3 / liability 
                        :ARG1-of (l / limit-01 
                              :ARG1-of (e / exceed-01 
                                    :mod-of (v / verdict 
                                          :time (l2 / late)))) 
                        :mod (p / personal)))))

# ::snt as one might expect he tells terrible tales of political excesses
# ::tok as one might expect he tells terrible tales of political excesses
# ::alignments 9-10|0.0 6-7|0.1.1 5-6|0.1 4-5|0.1.0 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:17.723
# ::node	0	expect-01	3-4
# ::node	0.0	politics	9-10
# ::node	0.1	tell-01	5-6
# ::node	0.1.0	he	4-5
# ::node	0.1.1	terrible	6-7
# ::root	0	expect-01
# ::edge	expect-01	ARG0	politics	0	0.0	
# ::edge	expect-01	ARG1	tell-01	0	0.1	
# ::edge	tell-01	ARG0	he	0.1	0.1.0	
# ::edge	tell-01	ARG1	terrible	0.1	0.1.1	
(e / expect-01 
      :ARG0 (p / politics) 
      :ARG1 (t2 / tell-01 
            :ARG0 (h / he) 
            :ARG1 (t / terrible)))

# ::snt it doesnt quite rise to the challenge of the rich character parts but is a sound revival stylistically on guard against the usual excess of talcumed periwigs and suckedin cheeks
# ::tok it doesnt quite rise to the challenge of the rich character parts but is a sound revival stylistically on guard against the usual excess of talcumed periwigs and suckedin cheeks
# ::alignments 27-28|0.0.1.1.0 23-24|0.0.1.1 22-23|0.0.1.1.1 16-17|0.0.1.0.0.0 15-16|0.0.1.0.0.0.0 12-13|0 11-12|0.0.1.0 10-11|0.0.1.0.0 9-10|0.0.1.0.1 6-7|0.0.1 3-4|0.0 2-3|0.0.2 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:17.808
# ::node	0	contrast-01	12-13
# ::node	0.0	rise-01	3-4
# ::node	0.0.0	it	0-1
# ::node	0.0.1	challenge-01	6-7
# ::node	0.0.1.0	part	11-12
# ::node	0.0.1.0.0	character	10-11
# ::node	0.0.1.0.0.0	revive-01	16-17
# ::node	0.0.1.0.0.0.0	sound	15-16
# ::node	0.0.1.0.1	rich	9-10
# ::node	0.0.1.1	exceed-01	23-24
# ::node	0.0.1.1.0	and	27-28
# ::node	0.0.1.1.1	usual	22-23
# ::node	0.0.2	quite	2-3
# ::root	0	contrast-01
# ::edge	challenge-01	ARG0	part	0.0.1	0.0.1.0	
# ::edge	challenge-01	ARG1	exceed-01	0.0.1	0.0.1.1	
# ::edge	contrast-01	ARG2	rise-01	0	0.0	
# ::edge	exceed-01	ARG1	and	0.0.1.1	0.0.1.1.0	
# ::edge	exceed-01	mod	usual	0.0.1.1	0.0.1.1.1	
# ::edge	part	mod	character	0.0.1.0	0.0.1.0.0	
# ::edge	part	mod	rich	0.0.1.0	0.0.1.0.1	
# ::edge	revive-01	ARG0	sound	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	revive-01	ARG1	character	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	rise-01	ARG0	it	0.0	0.0.0	
# ::edge	rise-01	ARG1	challenge-01	0.0	0.0.1	
# ::edge	rise-01	mod	quite	0.0	0.0.2	
(c / contrast-01 
      :ARG2 (r3 / rise-01 
            :ARG0 (i / it) 
            :ARG1 (c3 / challenge-01 
                  :ARG0 (p / part 
                        :mod (c2 / character 
                              :ARG1-of (r / revive-01 
                                    :ARG0 (s / sound))) 
                        :mod (r2 / rich)) 
                  :ARG1 (e / exceed-01 
                        :ARG1 (a / and) 
                        :mod (u / usual))) 
            :mod (q / quite)))

# ::snt in her crude language and obscene charm she was the icon of materialist excess and grossness
# ::tok in her crude language and obscene charm she was the icon of materialist excess and grossness
# ::alignments 14-15|0.0.0.0.0 13-14|0.0.0.0 7-8|0.0.0 6-7|0.0 4-5|0 3-4|0.0.0.1 2-3|0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:17.834
# ::node	0	and	4-5
# ::node	0.0	charm-01	6-7
# ::node	0.0.0	she	7-8
# ::node	0.0.0.0	exceed-01	13-14
# ::node	0.0.0.0.0	and	14-15
# ::node	0.0.0.1	language	3-4
# ::node	0.0.0.1.0	crude	2-3
# ::root	0	and
# ::edge	and	op1	charm-01	0	0.0	
# ::edge	and	op1	exceed-01	0.0.0.0.0	0.0.0.0	
# ::edge	charm-01	ARG1	she	0.0	0.0.0	
# ::edge	exceed-01	ARG1	she	0.0.0.0	0.0.0	
# ::edge	language	mod	crude	0.0.0.1	0.0.0.1.0	
# ::edge	language	op1	she	0.0.0.1	0.0.0	
(a2 / and 
      :op1 (c / charm-01 
            :ARG1 (s / she 
                  :ARG1-of (e / exceed-01 
                        :op-of (a / and)) 
                  :op-of (l / language 
                        :mod (c2 / crude)))))

# ::snt however if this is in excess of your allowance a charge will be made
# ::tok however if this is in excess of your allowance a charge will be made
# ::alignments 8-9|0 5-6|0.0 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:17.862
# ::node	0	allowance	8-9
# ::node	0.0	exceed-01	5-6
# ::node	0.0.0	this	2-3
# ::root	0	allowance
(a / allowance 
      :ARG2-of (e / exceed-01 
            :ARG1 (t / this)))

# ::snt offering us the entire history of world theatre a kind of popup guide to the theatrical imagination he artfully avoids dry chronology beginning instead with the modern virtuoso excesses of simon callow reaching shakespeare through jane austens observations of edmund kean and the greeks via puppetry
# ::tok offering us the entire history of world theatre a kind of popup guide to the theatrical imagination he artfully avoids dry chronology beginning instead with the modern virtuoso excesses of simon callow reaching shakespeare through jane austens observations of edmund kean and the greeks via puppetry
# ::alignments 41-42|0.2.0 32-33|0.2 26-27|0.0 23-24|0.2.1.2 22-23|0.2.1 20-21|0.2.1.1 17-18|0.2.1.1.0 15-16|0.1 12-13|0 9-10|0.3 6-7|0.2.1.0 4-5|0.2.0.0.0 3-4|0.2.0.0.0.0 0-1|0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:18.101
# ::node	0	guide-01	12-13
# ::node	0.0	modern	26-27
# ::node	0.1	theater	15-16
# ::node	0.2	reach-01	32-33
# ::node	0.2.0	and	41-42
# ::node	0.2.0.0	offer-01	0-1
# ::node	0.2.0.0.0	history	4-5
# ::node	0.2.0.0.0.0	entire	3-4
# ::node	0.2.1	begin-01	22-23
# ::node	0.2.1.0	world	6-7
# ::node	0.2.1.1	dry-02	20-21
# ::node	0.2.1.1.0	he	17-18
# ::node	0.2.1.2	instead	23-24
# ::node	0.3	kind	9-10
# ::root	0	guide-01
# ::edge	begin-01	ARG0	world	0.2.1	0.2.1.0	
# ::edge	begin-01	ARG1	reach-01	0.2.1	0.2	
# ::edge	begin-01	time	instead	0.2.1	0.2.1.2	
# ::edge	dry-02	ARG0	he	0.2.1.1	0.2.1.1.0	
# ::edge	dry-02	ARG1	begin-01	0.2.1.1	0.2.1	
# ::edge	guide-01	ARG0	modern	0	0.0	
# ::edge	guide-01	ARG1	theater	0	0.1	
# ::edge	guide-01	mod	kind	0	0.3	
# ::edge	history	mod	entire	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	offer-01	ARG0	and	0.2.0.0	0.2.0	
# ::edge	offer-01	ARG1	history	0.2.0.0	0.2.0.0.0	
# ::edge	reach-01	ARG0	and	0.2	0.2.0	
# ::edge	reach-01	ARG1	guide-01	0.2	0	
(g / guide-01 
      :ARG0 (m / modern) 
      :ARG1 (t / theater) 
      :ARG1-of (r / reach-01 
            :ARG0 (a / and 
                  :ARG0-of (o / offer-01 
                        :ARG1 (h2 / history 
                              :mod (e / entire)))) 
            :ARG1-of (b / begin-01 
                  :ARG0 (w / world) 
                  :ARG1-of (d / dry-02 
                        :ARG0 (h / he)) 
                  :time (i / instead))) 
      :mod (k / kind))

# ::snt but when you loved it didnt you ellip  i mean i know i did when i was a young person first drinking vocal soundum i definitely had the feeling that if i was drinking to excess i wasnt doing the right thing whereas the impression we give in oxford that drinking to the excess is perfectly acceptable behaviour
# ::tok but when you loved it didnt you ellip i mean i know i did when i was a young person first drinking vocal soundum i definitely had the feeling that if i was drinking to excess i wasnt doing the right thing whereas the impression we give in oxford that drinking to the excess is perfectly acceptable behaviour
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:18.102
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt if a council budgets to spend more than its settlement assumption and has to levy a higher poll tax the excess will be met by the individual payer dash
# ::tok if a council budgets to spend more than its settlement assumption and has to levy a higher poll tax the excess will be met by the individual payer dash
# ::alignments 27-28|0.0.0.0+0.0.0 26-27|0.0.0.1 23-24|0 20-21|0.0 18-19|0.0.1 17-18|0.0.1.0 16-17|0.0.1.2 11-12|0.0.1.1.1 9-10|0.0.1.1.1.0 5-6|0.0.1.1 3-4|0.0.1.1.0 2-3|0.0.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:18.260
# ::node	0	meet-03	23-24
# ::node	0.0	exceed-01	20-21
# ::node	0.0.0	person	27-28
# ::node	0.0.0.0	pay-01	27-28
# ::node	0.0.0.1	individual	26-27
# ::node	0.0.1	tax-01	18-19
# ::node	0.0.1.0	poll-01	17-18
# ::node	0.0.1.1	spend-01	5-6
# ::node	0.0.1.1.0	budget	3-4
# ::node	0.0.1.1.0.0	council	2-3
# ::node	0.0.1.1.1	and	11-12
# ::node	0.0.1.1.1.0	settle-02	9-10
# ::node	0.0.1.2	high	16-17
# ::root	0	meet-03
# ::edge	and	manner	settle-02	0.0.1.1.1	0.0.1.1.1.0	
# ::edge	and	op1	spend-01	0.0.1.1.1	0.0.1.1	
# ::edge	budget	mod	council	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	exceed-01	ARG0	person	0.0	0.0.0	
# ::edge	exceed-01	ARG1	tax-01	0.0	0.0.1	
# ::edge	meet-03	ARG1	exceed-01	0	0.0	
# ::edge	pay-01	ARG0	person	0.0.0.0	0.0.0	
# ::edge	person	mod	individual	0.0.0	0.0.0.1	
# ::edge	spend-01	ARG0	budget	0.0.1.1	0.0.1.1.0	
# ::edge	spend-01	ARG1	tax-01	0.0.1.1	0.0.1	
# ::edge	tax-01	ARG1	poll-01	0.0.1	0.0.1.0	
# ::edge	tax-01	ARG2	high	0.0.1	0.0.1.2	
(m / meet-03 
      :ARG1 (e / exceed-01 
            :ARG0 (p / person 
                  :ARG0-of (p2 / pay-01) 
                  :mod (i / individual)) 
            :ARG1 (t / tax-01 
                  :ARG1 (p3 / poll-01) 
                  :ARG1-of (s2 / spend-01 
                        :ARG0 (b / budget 
                              :mod (c / council)) 
                        :op-of (a / and 
                              :manner (s / settle-02))) 
                  :ARG2 (h / high))))

# ::snt in addition to workers compensation a number of states require nonoccupational disability insurancefo id102 many have enacted nofault automobile insurance and federal legislation has experimented with several compensation plans for special injuries notably black lung diseasefo id103 and now vaccine injuriesfo id104 as well as making itself responsible for excess insurance for nuclear accidents
# ::tok in addition to workers compensation a number of states require nonoccupational disability insurancefo id102 many have enacted nofault automobile insurance and federal legislation has experimented with several compensation plans for special injuries notably black lung diseasefo id103 and now vaccine injuriesfo id104 as well as making itself responsible for excess insurance for nuclear accidents
# ::alignments 53-54|0.0.2.0.2.2.0 52-53|0.0.2.0.0.0.1.0 50-51|0.0.2.0.2.2 49-50|0.0.2.0.2.2.1 47-48|0.0.2.0.2 43-44|0.0.2.0.2.1 39-40|0.0.3 38-39|0.1 37-38|0 33-34|0.0.2.0.2.0 32-33|0.0.2.0.2.0.0 31-32|0.0.2.0.0.0.1 30-31|0.0.2.0.0.0.1.2 28-29|0.0.2.0.0.0.1.1 27-28|0.0.2.0.0.0.1.1.0 26-27|0.0.2.0.0.0.1.1.1 22-23|0.0.2.0.1 21-22|0.0.2.0.1.0 20-21|0.0.2.0 19-20|0.0 18-19|0.0.1 16-17|0.0.2 14-15|0.0.0 11-12|0.0.2.0.0.1.0.0 9-10|0.0.2.0.0.1.0 8-9|0.0.2.0.0.1.1 6-7|0.0.2.0.0.1 4-5|0.0.2.0.0 3-4|0.0.2.0.0.0.0+0.0.2.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:20.363
# ::node	0	and	37-38
# ::node	0.0	insure-02	19-20
# ::node	0.0.0	many	14-15
# ::node	0.0.1	automobile	18-19
# ::node	0.0.2	enact-01	16-17
# ::node	0.0.2.0	and	20-21
# ::node	0.0.2.0.0	compensate-01	4-5
# ::node	0.0.2.0.0.0	person	3-4
# ::node	0.0.2.0.0.0.0	work-01	3-4
# ::node	0.0.2.0.0.0.1	injure-01	31-32
# ::node	0.0.2.0.0.0.1.0	nucleus	52-53
# ::node	0.0.2.0.0.0.1.1	plan-01	28-29
# ::node	0.0.2.0.0.0.1.1.0	compensate-01	27-28
# ::node	0.0.2.0.0.0.1.1.1	several	26-27
# ::node	0.0.2.0.0.0.1.2	special	30-31
# ::node	0.0.2.0.0.1	number	6-7
# ::node	0.0.2.0.0.1.0	require-01	9-10
# ::node	0.0.2.0.0.1.0.0	disability	11-12
# ::node	0.0.2.0.0.1.1	state	8-9
# ::node	0.0.2.0.1	legislation	22-23
# ::node	0.0.2.0.1.0	federal	21-22
# ::node	0.0.2.0.2	responsible-41	47-48
# ::node	0.0.2.0.2.0	black	33-34
# ::node	0.0.2.0.2.0.0	notable	32-33
# ::node	0.0.2.0.2.1	well	43-44
# ::node	0.0.2.0.2.2	insure-02	50-51
# ::node	0.0.2.0.2.2.0	accident	53-54
# ::node	0.0.2.0.2.2.1	exceed-01	49-50
# ::node	0.0.3	vaccine	39-40
# ::node	0.1	now	38-39
# ::root	0	and
# ::edge	and	op1	compensate-01	0.0.2.0	0.0.2.0.0	
# ::edge	and	op1	insure-02	0	0.0	
# ::edge	and	op2	legislation	0.0.2.0	0.0.2.0.1	
# ::edge	and	op3	responsible-41	0.0.2.0	0.0.2.0.2	
# ::edge	and	time	now	0	0.1	
# ::edge	black	degree	notable	0.0.2.0.2.0	0.0.2.0.2.0.0	
# ::edge	compensate-01	ARG0	person	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	compensate-01	ARG1	number	0.0.2.0.0	0.0.2.0.0.1	
# ::edge	compensate-01	ARG1	plan-01	0.0.2.0.0.0.1.1.0	0.0.2.0.0.0.1.1	
# ::edge	enact-01	ARG1	insure-02	0.0.2	0.0	
# ::edge	enact-01	ARG2	and	0.0.2	0.0.2.0	
# ::edge	exceed-01	ARG1	insure-02	0.0.2.0.2.2.1	0.0.2.0.2.2	
# ::edge	injure-01	ARG0	nucleus	0.0.2.0.0.0.1	0.0.2.0.0.0.1.0	
# ::edge	injure-01	ARG1	person	0.0.2.0.0.0.1	0.0.2.0.0.0	
# ::edge	injure-01	mod	special	0.0.2.0.0.0.1	0.0.2.0.0.0.1.2	
# ::edge	insure-02	ARG0	many	0.0	0.0.0	
# ::edge	insure-02	ARG1	accident	0.0.2.0.2.2	0.0.2.0.2.2.0	
# ::edge	insure-02	ARG1	automobile	0.0	0.0.1	
# ::edge	legislation	mod	federal	0.0.2.0.1	0.0.2.0.1.0	
# ::edge	plan-01	ARG1	injure-01	0.0.2.0.0.0.1.1	0.0.2.0.0.0.1	
# ::edge	plan-01	quant	several	0.0.2.0.0.0.1.1	0.0.2.0.0.0.1.1.1	
# ::edge	require-01	ARG0	number	0.0.2.0.0.1.0	0.0.2.0.0.1	
# ::edge	require-01	ARG1	disability	0.0.2.0.0.1.0	0.0.2.0.0.1.0.0	
# ::edge	responsible-41	ARG0	black	0.0.2.0.2	0.0.2.0.2.0	
# ::edge	responsible-41	ARG1	well	0.0.2.0.2	0.0.2.0.2.1	
# ::edge	responsible-41	ARG2	insure-02	0.0.2.0.2	0.0.2.0.2.2	
# ::edge	state	quant	number	0.0.2.0.0.1.1	0.0.2.0.0.1	
# ::edge	vaccine	location	insure-02	0.0.3	0.0	
# ::edge	work-01	ARG0	person	0.0.2.0.0.0.0	0.0.2.0.0.0	
(a2 / and 
      :op1 (i3 / insure-02 
            :ARG0 (m / many) 
            :ARG1 (a4 / automobile) 
            :ARG1-of (e2 / enact-01 
                  :ARG2 (a3 / and 
                        :op1 (c2 / compensate-01 
                              :ARG0 (p2 / person 
                                    :ARG0-of (w2 / work-01) 
                                    :ARG1-of (i2 / injure-01 
                                          :ARG0 (n / nucleus) 
                                          :ARG1-of (p / plan-01 
                                                :ARG1-of (c / compensate-01) 
                                                :quant (s2 / several)) 
                                          :mod (s / special))) 
                              :ARG1 (n4 / number 
                                    :ARG0-of (r2 / require-01 
                                          :ARG1 (d / disability)) 
                                    :quant-of (s3 / state))) 
                        :op2 (l / legislation 
                              :mod (f / federal)) 
                        :op3 (r / responsible-41 
                              :ARG0 (b / black 
                                    :degree (n3 / notable)) 
                              :ARG1 (w / well) 
                              :ARG2 (i / insure-02 
                                    :ARG1 (a / accident) 
                                    :ARG1-of (e / exceed-01))))) 
            :location-of (v / vaccine)) 
      :time (n2 / now))

# ::snt while the narrative of lydwines life connects castration and temporality in the to huysmans satisfying mode of excess it simultaneously sublimates that narrative out of temporal sequentiality into a transcendent mode of symbolic repetition
# ::tok while the narrative of lydwines life connects castration and temporality in the to huysmans satisfying mode of excess it simultaneously sublimates that narrative out of temporal sequentiality into a transcendent mode of symbolic repetition
# ::alignments 32-33|0.0.0.0.1.0 30-31|0.0.0.0.1.2.0.0 29-30|0.0.0.0.1.2.0 22-23|0.0.0.0.1.0.0 19-20|0.0.0.1.0.0 18-19|0.0.0.1 17-18|0.0.0.1.0 15-16|0.0.0 14-15|0+0.0 8-9|0.0.0.0.1 7-8|0.0.0.0.1.2 6-7|0.0.0.0 5-6|0.0.0.0.1.1 2-3|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:20.816
# ::node	0	satisfy-01	14-15
# ::node	0.0	person	14-15
# ::node	0.0.0	mode	15-16
# ::node	0.0.0.0	connect-01	6-7
# ::node	0.0.0.0.0	narrative	2-3
# ::node	0.0.0.0.1	and	8-9
# ::node	0.0.0.0.1.0	symbolize-01	32-33
# ::node	0.0.0.0.1.0.0	narrative	22-23
# ::node	0.0.0.0.1.1	life	5-6
# ::node	0.0.0.0.1.2	castrate-01	7-8
# ::node	0.0.0.0.1.2.0	transcendence	29-30
# ::node	0.0.0.0.1.2.0.0	mode	30-31
# ::node	0.0.0.1	it	18-19
# ::node	0.0.0.1.0	exceed-01	17-18
# ::node	0.0.0.1.0.0	simultaneous	19-20
# ::root	0	satisfy-01
# ::edge	and	op1	life	0.0.0.0.1	0.0.0.0.1.1	
# ::edge	and	op2	castrate-01	0.0.0.0.1	0.0.0.0.1.2	
# ::edge	castrate-01	ARG1	transcendence	0.0.0.0.1.2	0.0.0.0.1.2.0	
# ::edge	connect-01	ARG0	narrative	0.0.0.0	0.0.0.0.0	
# ::edge	connect-01	ARG1	and	0.0.0.0	0.0.0.0.1	
# ::edge	connect-01	manner	mode	0.0.0.0	0.0.0	
# ::edge	exceed-01	ARG0	it	0.0.0.1.0	0.0.0.1	
# ::edge	exceed-01	ARG1	simultaneous	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	mode	mod	person	0.0.0	0.0	
# ::edge	mode	mod	transcendence	0.0.0.0.1.2.0.0	0.0.0.0.1.2.0	
# ::edge	mode	poss	it	0.0.0	0.0.0.1	
# ::edge	satisfy-01	ARG0	person	0	0.0	
# ::edge	symbolize-01	ARG0	narrative	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	symbolize-01	ARG1	and	0.0.0.0.1.0	0.0.0.0.1	
(s3 / satisfy-01 
      :ARG0 (p / person 
            :mod-of (m2 / mode 
                  :manner-of (c2 / connect-01 
                        :ARG0 (n2 / narrative) 
                        :ARG1 (a / and 
                              :ARG1-of (s / symbolize-01 
                                    :ARG0 (n / narrative)) 
                              :op1 (l / life) 
                              :op2 (c / castrate-01 
                                    :ARG1 (t / transcendence 
                                          :mod-of (m / mode))))) 
                  :poss (i / it 
                        :ARG0-of (e / exceed-01 
                              :ARG1 (s2 / simultaneous))))))

# ::snt and yet gower knew that the money was relatively unimportant to rob although he did not have excess to splash around
# ::tok and yet gower knew that the money was relatively unimportant to rob although he did not have excess to splash around
# ::alignments 20-21|0.0.0.1.0.0.1 19-20|0.0.0.1.0.0 17-18|0.0.0.1.0 13-14|0.0.0.1.0.0.0 9-10|0.0.0.2+0.0.0 8-9|0.0.0.0 6-7|0.0.0.1 3-4|0.0 1-2|0.0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:20.956
# ::node	0	and	0-1
# ::node	0.0	know-01	3-4
# ::node	0.0.0	importance	9-10
# ::node	0.0.0.0	relative	8-9
# ::node	0.0.0.1	money	6-7
# ::node	0.0.0.1.0	exceed-01	17-18
# ::node	0.0.0.1.0.0	splash-02	19-20
# ::node	0.0.0.1.0.0.0	he	13-14
# ::node	0.0.0.1.0.0.1	around	20-21
# ::node	0.0.0.2	-	9-10
# ::node	0.0.1	yet	1-2
# ::root	0	and
(a2 / and 
      :ARG0-of (k / know-01 
            :ARG1 (i / importance 
                  :degree (r / relative) 
                  :domain (m / money 
                        :ARG0-of (e / exceed-01 
                              :ARG1 (s / splash-02 
                                    :ARG0 (h / he) 
                                    :location (a / around)))) 
                  :polarity -) 
            :manner (y / yet)))

# ::snt the section reads dietary sugars may contribute to the general excess of food energy consumption responsible for the development of obesity
# ::tok the section reads dietary sugars may contribute to the general excess of food energy consumption responsible for the development of obesity
# ::alignments 20-21|0.1.0 18-19|0.1 15-16|0 14-15|0.0 13-14|0.0.0 12-13|0.0.1 10-11|0.0.2 9-10|0.0.2.1 6-7|0.0.2.0 5-6|0.0.2.0.0.1+0.0.2.0.0 2-3|0.0.2.0.0.0 1-2|0.0.2.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:21.070
# ::node	0	responsible-41	15-16
# ::node	0.0	consume-01	14-15
# ::node	0.0.0	energy	13-14
# ::node	0.0.1	food	12-13
# ::node	0.0.2	exceed-01	10-11
# ::node	0.0.2.0	contribute-01	6-7
# ::node	0.0.2.0.0	date-entity	5-6
# ::node	0.0.2.0.0.0	read-01	2-3
# ::node	0.0.2.0.0.0.0	section	1-2
# ::node	0.0.2.0.0.1	5	5-6
# ::node	0.0.2.1	general	9-10
# ::node	0.1	develop-02	18-19
# ::node	0.1.0	obesity	20-21
# ::root	0	responsible-41
# ::edge	consume-01	ARG0	energy	0.0	0.0.0	
# ::edge	consume-01	ARG1	food	0.0	0.0.1	
# ::edge	contribute-01	ARG2	exceed-01	0.0.2.0	0.0.2	
# ::edge	contribute-01	mod	date-entity	0.0.2.0	0.0.2.0.0	
# ::edge	date-entity	month	5	0.0.2.0.0	0.0.2.0.0.1	
# ::edge	develop-02	ARG1	obesity	0.1	0.1.0	
# ::edge	exceed-01	ARG1	consume-01	0.0.2	0.0	
# ::edge	exceed-01	mod	general	0.0.2	0.0.2.1	
# ::edge	read-01	ARG0	section	0.0.2.0.0.0	0.0.2.0.0.0.0	
# ::edge	read-01	ARG1	date-entity	0.0.2.0.0.0	0.0.2.0.0	
# ::edge	responsible-41	ARG1	consume-01	0	0.0	
# ::edge	responsible-41	ARG2	develop-02	0	0.1	
(r / responsible-41 
      :ARG1 (c / consume-01 
            :ARG0 (e / energy) 
            :ARG1 (f / food) 
            :ARG1-of (e2 / exceed-01 
                  :ARG2-of (c2 / contribute-01 
                        :mod (d2 / date-entity 
                              :ARG1-of (r2 / read-01 
                                    :ARG0 (s / section)) 
                              :month 5)) 
                  :mod (g / general))) 
      :ARG2 (d / develop-02 
            :ARG1 (o / obesity)))

# ::snt a number of people associated with the excesses of the past have already fallen from grace
# ::tok a number of people associated with the excesses of the past have already fallen from grace
# ::alignments 15-16|0.0.0.0 13-14|0.0.0 12-13|0.0.0.1 10-11|0.0.0.0.0 4-5|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:21.115
# ::node	0	associate-01	4-5
# ::node	0.0	number	1-2
# ::node	0.0.0	fall-01	13-14
# ::node	0.0.0.0	grace-01	15-16
# ::node	0.0.0.0.0	past	10-11
# ::node	0.0.0.1	already	12-13
# ::root	0	associate-01
# ::edge	associate-01	ARG1	number	0	0.0	
# ::edge	fall-01	ARG1	number	0.0.0	0.0	
# ::edge	fall-01	ARG3	grace-01	0.0.0	0.0.0.0	
# ::edge	fall-01	time	already	0.0.0	0.0.0.1	
# ::edge	grace-01	ARG1	past	0.0.0.0	0.0.0.0.0	
(a2 / associate-01 
      :ARG1 (n / number 
            :ARG1-of (f / fall-01 
                  :ARG3 (g / grace-01 
                        :ARG1 (p / past)) 
                  :time (a / already))))

# ::snt many professionals within the lloyds market welcome the current crop of departures as there is an excess of financial capacity within the market at a time when business is not growing at the same rate as the available capacity
# ::tok many professionals within the lloyds market welcome the current crop of departures as there is an excess of financial capacity within the market at a time when business is not growing at the same rate as the available capacity
# ::alignments 38-39|0.1.0.2.0.1.0.0.0 37-38|0.1.0.2.0.1.0.0 34-35|0.1.0.1 33-34|0.1.0.1.0 30-31|0.1.0 27-28|0.1.0.0 25-26|0.1.0.2 22-23|0.1.0.2.0 20-21|0.1.0.2.0.0 19-20|0.1.0.2.0.1 18-19|0.1.0.2.0.1.1 16-17|0.1.0.2.0.1.0 9-10|0.1 8-9|0.1.1 6-7|0 5-6|0.2.0 4-5|0.2.0.0.0.0+0.2.0.0.0+0.2.0.0 2-3|0.2 1-2|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:22.212
# ::node	0	welcome-01	6-7
# ::node	0.0	professional	1-2
# ::node	0.0.0	many	0-1
# ::node	0.1	crop	9-10
# ::node	0.1.0	grow-01	30-31
# ::node	0.1.0.0	business	27-28
# ::node	0.1.0.1	rate	34-35
# ::node	0.1.0.1.0	same-41	33-34
# ::node	0.1.0.2	time	25-26
# ::node	0.1.0.2.0	market	22-23
# ::node	0.1.0.2.0.0	within	20-21
# ::node	0.1.0.2.0.1	capacity	19-20
# ::node	0.1.0.2.0.1.0	exceed-01	16-17
# ::node	0.1.0.2.0.1.0.0	available	37-38
# ::node	0.1.0.2.0.1.0.0.0	capacity	38-39
# ::node	0.1.0.2.0.1.1	finance	18-19
# ::node	0.1.1	current	8-9
# ::node	0.2	within	2-3
# ::node	0.2.0	market	5-6
# ::node	0.2.0.0	company	4-5
# ::node	0.2.0.0.0	name	4-5
# ::node	0.2.0.0.0.0	"Lloyds"	4-5
# ::root	0	welcome-01
# ::edge	available	op1	exceed-01	0.1.0.2.0.1.0.0	0.1.0.2.0.1.0	
# ::edge	capacity	mod	available	0.1.0.2.0.1.0.0.0	0.1.0.2.0.1.0.0	
# ::edge	capacity	mod	finance	0.1.0.2.0.1	0.1.0.2.0.1.1	
# ::edge	capacity	poss	market	0.1.0.2.0.1	0.1.0.2.0	
# ::edge	company	name	name	0.2.0.0	0.2.0.0.0	
# ::edge	crop	time	current	0.1	0.1.1	
# ::edge	exceed-01	ARG1	capacity	0.1.0.2.0.1.0	0.1.0.2.0.1	
# ::edge	grow-01	ARG0	crop	0.1.0	0.1	
# ::edge	grow-01	ARG1	business	0.1.0	0.1.0.0	
# ::edge	grow-01	ARG2	rate	0.1.0	0.1.0.1	
# ::edge	grow-01	time	time	0.1.0	0.1.0.2	
# ::edge	market	location	company	0.2.0	0.2.0.0	
# ::edge	market	mod	time	0.1.0.2.0	0.1.0.2	
# ::edge	name	op1	"Lloyds"	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	professional	quant	many	0.0	0.0.0	
# ::edge	same-41	ARG1	rate	0.1.0.1.0	0.1.0.1	
# ::edge	welcome-01	ARG0	professional	0	0.0	
# ::edge	welcome-01	ARG1	crop	0	0.1	
# ::edge	within	op1	market	0.1.0.2.0.0	0.1.0.2.0	
# ::edge	within	op1	market	0.2	0.2.0	
# ::edge	within	op2	welcome-01	0.2	0	
(w2 / welcome-01 
      :ARG0 (p / professional 
            :quant (m3 / many)) 
      :ARG1 (c3 / crop 
            :ARG0-of (g / grow-01 
                  :ARG1 (b / business) 
                  :ARG2 (r / rate 
                        :ARG1-of (s / same-41)) 
                  :time (t / time 
                        :mod-of (m / market 
                              :op-of (w / within) 
                              :poss-of (c2 / capacity 
                                    :ARG1-of (e / exceed-01 
                                          :op-of (a / available 
                                                :mod-of (c / capacity))) 
                                    :mod (f / finance))))) 
            :time (c4 / current)) 
      :op-of (w3 / within 
            :op1 (m2 / market 
                  :location (c5 / company 
                        :name (n / name 
                              :op1 "Lloyds")))))

# ::snt as she quickly dried her hands and ran towards them her excess of gladness and affection masked an anxiety that had gnawed at her since michael first ran away
# ::tok as she quickly dried her hands and ran towards them her excess of gladness and affection masked an anxiety that had gnawed at her since michael first ran away
# ::alignments 28-29|0.1.0.1.0.0 24-25|0.1.0.1.0.1.0 18-19|0.1.0.1.0.1 16-17|0.1.0.1.0 15-16|0.1.0.1 14-15|0.1.0 13-14|0.1.0.0 11-12|0.1 6-7|0 5-6|0.0.1 3-4|0.0 2-3|0.0.2 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:22.566
# ::node	0	and	6-7
# ::node	0.0	dry-02	3-4
# ::node	0.0.0	she	1-2
# ::node	0.0.1	hand	5-6
# ::node	0.0.2	quick	2-3
# ::node	0.1	exceed-01	11-12
# ::node	0.1.0	and	14-15
# ::node	0.1.0.0	glad	13-14
# ::node	0.1.0.1	affection	15-16
# ::node	0.1.0.1.0	mask-01	16-17
# ::node	0.1.0.1.0.0	away	28-29
# ::node	0.1.0.1.0.1	anxiety	18-19
# ::node	0.1.0.1.0.1.0	since	24-25
# ::root	0	and
# ::edge	and	op1	dry-02	0	0.0	
# ::edge	and	op1	glad	0.1.0	0.1.0.0	
# ::edge	and	op2	affection	0.1.0	0.1.0.1	
# ::edge	and	op2	exceed-01	0	0.1	
# ::edge	anxiety	time	since	0.1.0.1.0.1	0.1.0.1.0.1.0	
# ::edge	dry-02	ARG0	she	0.0	0.0.0	
# ::edge	dry-02	ARG1	hand	0.0	0.0.1	
# ::edge	dry-02	manner	quick	0.0	0.0.2	
# ::edge	exceed-01	ARG1	and	0.1	0.1.0	
# ::edge	mask-01	ARG0	away	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	mask-01	ARG1	anxiety	0.1.0.1.0	0.1.0.1.0.1	
# ::edge	mask-01	ARG2	affection	0.1.0.1.0	0.1.0.1	
(a5 / and 
      :op1 (d / dry-02 
            :ARG0 (s2 / she) 
            :ARG1 (h / hand) 
            :manner (q / quick)) 
      :op2 (e / exceed-01 
            :ARG1 (a4 / and 
                  :op1 (g / glad) 
                  :op2 (a3 / affection 
                        :ARG2-of (m / mask-01 
                              :ARG0 (a / away) 
                              :ARG1 (a2 / anxiety 
                                    :time (s / since)))))))

# ::snt the excess of investible funds over the supply of securities looks set to remain for at least another financial year
# ::tok the excess of investible funds over the supply of securities looks set to remain for at least another financial year
# ::alignments 19-20|0.1.0.0 18-19|0.1.0 17-18|0.1.0.0.0 13-14|0.1 10-11|0 7-8|0.0.0.0 4-5|0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:22.605
# ::node	0	look-02	10-11
# ::node	0.0	exceed-01	1-2
# ::node	0.0.0	fund	4-5
# ::node	0.0.0.0	supply-01	7-8
# ::node	0.1	remain-01	13-14
# ::node	0.1.0	finance	18-19
# ::node	0.1.0.0	year	19-20
# ::node	0.1.0.0.0	another	17-18
# ::root	0	look-02
# ::edge	exceed-01	ARG1	fund	0.0	0.0.0	
# ::edge	fund	poss	supply-01	0.0.0	0.0.0.0	
# ::edge	look-02	ARG1	exceed-01	0	0.0	
# ::edge	look-02	ARG2	remain-01	0	0.1	
# ::edge	remain-01	ARG1	finance	0.1	0.1.0	
# ::edge	year	mod	another	0.1.0.0	0.1.0.0.0	
# ::edge	year	mod	finance	0.1.0.0	0.1.0	
(l / look-02 
      :ARG1 (e / exceed-01 
            :ARG1 (f2 / fund 
                  :poss (s / supply-01))) 
      :ARG2 (r / remain-01 
            :ARG1 (f / finance 
                  :mod-of (y / year 
                        :mod (a / another)))))

# ::snt our car cost in excess of 61000
# ::tok our car cost in excess of 61000
# ::alignments 6-7|0.1.0 4-5|0.1 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:22.628
# ::node	0	cost-01	2-3
# ::node	0.0	car	1-2
# ::node	0.1	exceed-01	4-5
# ::node	0.1.0	61000	6-7
# ::root	0	cost-01
# ::edge	cost-01	ARG1	car	0	0.0	
# ::edge	cost-01	ARG2	exceed-01	0	0.1	
# ::edge	exceed-01	time	61000	0.1	0.1.0	
(c / cost-01 
      :ARG1 (c2 / car) 
      :ARG2 (e / exceed-01 
            :time 61000))

# ::snt in their first initial comment since talks began last week negotiators said they had made substantial progress and were near agreement on options that would provide mexico with financial benefits in excess of 3 billion annually
# ::tok in their first initial comment since talks began last week negotiators said they had made substantial progress and were near agreement on options that would provide mexico with financial benefits in excess of 3 billion annually
# ::alignments 33-34|0.2.0.0.1.2 31-32|0.2.0.0.1.0 29-30|0.2.0.0.1 28-29|0.2.0.0.1.1 25-26|0.2.0.0 22-23|0.2.0.0.0 20-21|0.2.0 19-20|0.2.0.1 17-18|0.2 16-17|0.1 15-16|0.1.1 12-13|0.1.0 11-12|0 10-11|0.0.0+0.0 9-10|0.0.0.0 8-9|0.0.0.0.0 7-8|0.2.1 6-7|0.2.1.0 5-6|0.2.1.1 4-5|0.2.1.1.0 3-4|0.2.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:23.242
# ::node	0	say-01	11-12
# ::node	0.0	person	10-11
# ::node	0.0.0	negotiate-01	10-11
# ::node	0.0.0.0	week	9-10
# ::node	0.0.0.0.0	last	8-9
# ::node	0.1	progress-01	16-17
# ::node	0.1.0	they	12-13
# ::node	0.1.1	substantial	15-16
# ::node	0.2	and	17-18
# ::node	0.2.0	agree-01	20-21
# ::node	0.2.0.0	provide-01	25-26
# ::node	0.2.0.0.0	option	22-23
# ::node	0.2.0.0.1	benefit-01	29-30
# ::node	0.2.0.0.1.0	exceed-01	31-32
# ::node	0.2.0.0.1.1	finance	28-29
# ::node	0.2.0.0.1.2	3	33-34
# ::node	0.2.0.1	near	19-20
# ::node	0.2.1	begin-01	7-8
# ::node	0.2.1.0	talk-01	6-7
# ::node	0.2.1.1	since	5-6
# ::node	0.2.1.1.0	comment-01	4-5
# ::node	0.2.1.1.0.0	initial	3-4
# ::root	0	say-01
# ::edge	agree-01	ARG1	and	0.2.0	0.2	
# ::edge	and	op1	say-01	0.2	0	
# ::edge	begin-01	ARG0	talk-01	0.2.1	0.2.1.0	
# ::edge	begin-01	ARG1	and	0.2.1	0.2	
# ::edge	benefit-01	ARG1	exceed-01	0.2.0.0.1	0.2.0.0.1.0	
# ::edge	benefit-01	mod	finance	0.2.0.0.1	0.2.0.0.1.1	
# ::edge	benefit-01	time	3	0.2.0.0.1	0.2.0.0.1.2	
# ::edge	comment-01	ARG1	since	0.2.1.1.0	0.2.1.1	
# ::edge	comment-01	mod	initial	0.2.1.1.0	0.2.1.1.0.0	
# ::edge	near	op1	agree-01	0.2.0.1	0.2.0	
# ::edge	negotiate-01	ARG0	person	0.0.0	0.0	
# ::edge	negotiate-01	ARG1	week	0.0.0	0.0.0.0	
# ::edge	progress-01	ARG1	they	0.1	0.1.0	
# ::edge	progress-01	mod	substantial	0.1	0.1.1	
# ::edge	provide-01	ARG0	option	0.2.0.0	0.2.0.0.0	
# ::edge	provide-01	ARG1	benefit-01	0.2.0.0	0.2.0.0.1	
# ::edge	provide-01	ARG2	agree-01	0.2.0.0	0.2.0	
# ::edge	say-01	ARG0	person	0	0.0	
# ::edge	say-01	ARG1	progress-01	0	0.1	
# ::edge	since	op1	begin-01	0.2.1.1	0.2.1	
# ::edge	week	mod	last	0.0.0.0	0.0.0.0.0	
(s2 / say-01 
      :ARG0 (p3 / person 
            :ARG0-of (n2 / negotiate-01 
                  :ARG1 (w / week 
                        :mod (l / last)))) 
      :ARG1 (p2 / progress-01 
            :ARG1 (t / they) 
            :mod (s / substantial)) 
      :op-of (a2 / and 
            :ARG1-of (a / agree-01 
                  :ARG2-of (p / provide-01 
                        :ARG0 (o / option) 
                        :ARG1 (b / benefit-01 
                              :ARG1 (e / exceed-01) 
                              :mod (f / finance) 
                              :time 3)) 
                  :op-of (n / near)) 
            :ARG1-of (b2 / begin-01 
                  :ARG0 (t2 / talk-01) 
                  :op-of (s3 / since 
                        :ARG1-of (c / comment-01 
                              :mod (i / initial))))))

# ::snt cartoon action smart sight gags and visual excess
# ::tok cartoon action smart sight gags and visual excess
# ::alignments 7-8|0.0 6-7|0 5-6|0.0.1 3-4|0.0.1.0 2-3|0.0.1.0.0 1-2|0.0.0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:23.265
# ::node	0	visual	6-7
# ::node	0.0	exceed-01	7-8
# ::node	0.0.0	cartoon	0-1
# ::node	0.0.0.0	action	1-2
# ::node	0.0.1	and	5-6
# ::node	0.0.1.0	sight-01	3-4
# ::node	0.0.1.0.0	smart	2-3
# ::root	0	visual
(v / visual 
      :mod-of (e / exceed-01 
            :ARG1 (c / cartoon 
                  :mod-of (a2 / action)) 
            :op-of (a / and 
                  :ARG1-of (s / sight-01 
                        :ARG0 (s2 / smart)))))

# ::snt there will be six tournaments in the mens game alone in beckers native land next year that will carry a purse in excess of dollars 1m
# ::tok there will be six tournaments in the mens game alone in beckers native land next year that will carry a purse in excess of dollars 1m
# ::alignments 24-25|0.0.0.1.0.1+0.0.0.1.0 22-23|0.0.0.1 15-16|0.0.1 14-15|0.0.1.0 13-14|0.0 12-13|0 9-10|0.0.0 8-9|0.0.0.0 3-4|0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:23.357
# ::node	0	native	12-13
# ::node	0.0	land	13-14
# ::node	0.0.0	alone	9-10
# ::node	0.0.0.0	game	8-9
# ::node	0.0.0.1	exceed-01	22-23
# ::node	0.0.0.1.0	monetary-quantity	24-25
# ::node	0.0.0.1.0.0	6	3-4
# ::node	0.0.0.1.0.1	dollar	24-25
# ::node	0.0.1	year	15-16
# ::node	0.0.1.0	next	14-15
# ::root	0	native
(n2 / native 
      :mod-of (l / land 
            :compared-to-of (a / alone 
                  :location (g / game) 
                  :op1 (e / exceed-01 
                        :ARG1 (m / monetary-quantity 
                              :poss 6 
                              :unit (d / dollar)))) 
            :mod-of (y / year 
                  :mod (n / next))))

# ::snt though sinclair seizes on the merits of a novel like brideshead revisited it can surely be argued as waugh himself argued that the books excesses its clotted and opulent nostalgia were the chief product of the spam and nissen hut atmosphere in which it was composed
# ::tok though sinclair seizes on the merits of a novel like brideshead revisited it can surely be argued as waugh himself argued that the books excesses its clotted and opulent nostalgia were the chief product of the spam and nissen hut atmosphere in which it was composed
# ::alignments 45-46|0 43-44|0.1 40-41|0.0.2 37-38|0.0 33-34|0.0.1 32-33|0.0.1.0.1+0.0.1.0 27-28|0.0.1.0.0.1 23-24|0.0.1.0.0.0 20-21|0.0.1.0.0 16-17|0.0.0 14-15|0.0.0.2 13-14|0.0.0.1 12-13|0.0.0.0 8-9|0.0.0.1.0.0.0 5-6|0.0.0.1.0.0 2-3|0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:23.620
# ::node	0	compose-01	45-46
# ::node	0.0	and	37-38
# ::node	0.0.0	argue-01	16-17
# ::node	0.0.0.0	it	12-13
# ::node	0.0.0.1	possible	13-14
# ::node	0.0.0.1.0	seize-01	2-3
# ::node	0.0.0.1.0.0	merit-01	5-6
# ::node	0.0.0.1.0.0.0	novel	8-9
# ::node	0.0.0.2	sure	14-15
# ::node	0.0.1	product	33-34
# ::node	0.0.1.0	have-org-role-91	32-33
# ::node	0.0.1.0.0	argue-01	20-21
# ::node	0.0.1.0.0.0	book	23-24
# ::node	0.0.1.0.0.1	and	27-28
# ::node	0.0.1.0.1	chief	32-33
# ::node	0.0.2	atmosphere	40-41
# ::node	0.1	it	43-44
# ::root	0	compose-01
# ::edge	and	op1	product	0.0	0.0.1	
# ::edge	and	op2	atmosphere	0.0	0.0.2	
# ::edge	argue-01	ARG0	and	0.0.0	0.0	
# ::edge	argue-01	ARG0	book	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	argue-01	ARG1	and	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	argue-01	ARG1	it	0.0.0	0.0.0.0	
# ::edge	argue-01	mod	sure	0.0.0	0.0.0.2	
# ::edge	compose-01	ARG0	and	0	0.0	
# ::edge	compose-01	ARG1	it	0	0.1	
# ::edge	have-org-role-91	ARG1	argue-01	0.0.1.0	0.0.1.0.0	
# ::edge	have-org-role-91	ARG2	chief	0.0.1.0	0.0.1.0.1	
# ::edge	have-org-role-91	ARG3	product	0.0.1.0	0.0.1	
# ::edge	merit-01	ARG1	novel	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	possible	domain	argue-01	0.0.0.1	0.0.0	
# ::edge	seize-01	ARG0	possible	0.0.0.1.0	0.0.0.1	
# ::edge	seize-01	ARG1	merit-01	0.0.0.1.0	0.0.0.1.0.0	
(c / compose-01 
      :ARG0 (a2 / and 
            :ARG0-of (a5 / argue-01 
                  :ARG1 (i2 / it) 
                  :domain-of (p2 / possible 
                        :ARG0-of (s2 / seize-01 
                              :ARG1 (m / merit-01 
                                    :ARG1 (n / novel)))) 
                  :mod (s / sure)) 
            :op1 (p / product 
                  :ARG3-of (h / have-org-role-91 
                        :ARG1 (a4 / argue-01 
                              :ARG0 (b / book) 
                              :ARG1 (a3 / and)) 
                        :ARG2 (c2 / chief))) 
            :op2 (a / atmosphere)) 
      :ARG1 (i / it))

# ::snt its big but all muscle without any excess
# ::tok its big but all muscle without any excess
# ::alignments 7-8|0.1.0 6-7|0.1.0.0 4-5|0.1 3-4|0.1.1 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:23.635
# ::node	0	contrast-01	2-3
# ::node	0.0	big	1-2
# ::node	0.1	muscle-01	4-5
# ::node	0.1.0	exceed-01	7-8
# ::node	0.1.0.0	any	6-7
# ::node	0.1.1	all	3-4
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	big	0	0.0	
# ::edge	contrast-01	ARG2	muscle-01	0	0.1	
# ::edge	exceed-01	mod	any	0.1.0	0.1.0.0	
# ::edge	muscle-01	ARG1	exceed-01	0.1	0.1.0	
# ::edge	muscle-01	quant	all	0.1	0.1.1	
(c / contrast-01 
      :ARG1 (b / big) 
      :ARG2 (m / muscle-01 
            :ARG1 (e / exceed-01 
                  :mod (a / any)) 
            :quant (a2 / all)))

# ::snt puzzling and fretting not truly provoking it indulges in an excess of epistemological pretension
# ::tok puzzling and fretting not truly provoking it indulges in an excess of epistemological pretension
# ::alignments 10-11|0.0.0.0 6-7|0.0.0 5-6|0.0 4-5|0.0.1 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:23.653
# ::node	0	and	1-2
# ::node	0.0	provoke-01	5-6
# ::node	0.0.0	it	6-7
# ::node	0.0.0.0	exceed-01	10-11
# ::node	0.0.1	truly	4-5
# ::root	0	and
# ::edge	and	op1	provoke-01	0	0.0	
# ::edge	exceed-01	ARG1	it	0.0.0.0	0.0.0	
# ::edge	provoke-01	ARG0	it	0.0	0.0.0	
# ::edge	provoke-01	ARG1	truly	0.0	0.0.1	
(a / and 
      :op1 (p / provoke-01 
            :ARG0 (i / it 
                  :ARG1-of (e / exceed-01)) 
            :ARG1 (t / truly)))

# ::snt he said the right things but not to excess he committed no gaffes and caused no embarrassment and he mixed with your other guests
# ::tok he said the right things but not to excess he committed no gaffes and caused no embarrassment and he mixed with your other guests
# ::alignments 23-24|0.0.0.1.1.1 22-23|0.0.0.1.1.1.0 19-20|0.0.0.1.1 18-19|0.0.0.1.1.0 17-18|0.0.0.1 16-17|0.0.0.1.0.0 15-16|0.0.0.1.0.0.0 14-15|0.0.0.1.0 13-14|0.0.0.2 11-12|0.0.0.3 10-11|0.0.0 9-10|0.0.0.0 8-9|0.0.0.0.0 5-6|0.2 4-5|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:24.428
# ::node	0	say-01	1-2
# ::node	0.0	he	0-1
# ::node	0.0.0	commit-01	10-11
# ::node	0.0.0.0	he	9-10
# ::node	0.0.0.0.0	exceed-01	8-9
# ::node	0.0.0.1	and	17-18
# ::node	0.0.0.1.0	cause-01	14-15
# ::node	0.0.0.1.0.0	embarrass-01	16-17
# ::node	0.0.0.1.0.0.0	-	15-16
# ::node	0.0.0.1.1	mix-01	19-20
# ::node	0.0.0.1.1.0	he	18-19
# ::node	0.0.0.1.1.1	guest	23-24
# ::node	0.0.0.1.1.1.0	other	22-23
# ::node	0.0.0.2	and	13-14
# ::node	0.0.0.3	-	11-12
# ::node	0.1	thing	4-5
# ::node	0.2	contrast-01	5-6
# ::root	0	say-01
# ::edge	and	op1	commit-01	0.0.0.1	0.0.0	
# ::edge	and	op1	commit-01	0.0.0.2	0.0.0	
# ::edge	and	op2	cause-01	0.0.0.1	0.0.0.1.0	
# ::edge	and	op3	mix-01	0.0.0.1	0.0.0.1.1	
# ::edge	cause-01	ARG1	embarrass-01	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	commit-01	ARG0	he	0.0.0	0.0	
# ::edge	commit-01	ARG1	he	0.0.0	0.0.0.0	
# ::edge	commit-01	polarity	-	0.0.0	0.0.0.3	
# ::edge	contrast-01	ARG2	say-01	0.2	0	
# ::edge	embarrass-01	polarity	-	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	exceed-01	ARG1	he	0.0.0.0.0	0.0.0.0	
# ::edge	guest	mod	other	0.0.0.1.1.1	0.0.0.1.1.1.0	
# ::edge	mix-01	ARG0	he	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	mix-01	ARG1	guest	0.0.0.1.1	0.0.0.1.1.1	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	thing	0	0.1	
(s / say-01 
      :ARG0 (h3 / he 
            :ARG0-of (c2 / commit-01 
                  :ARG1 (h2 / he 
                        :ARG1-of (e2 / exceed-01)) 
                  :op-of (a / and 
                        :op1 (c / cause-01 
                              :ARG1 (e / embarrass-01 
                                    :polarity (- / -))) 
                        :op2 (m / mix-01 
                              :ARG0 (h / he) 
                              :ARG1 (g / guest 
                                    :mod (o / other)))) 
                  :op-of (a2 / and) 
                  :polarity (-2 / -))) 
      :ARG1 (t / thing) 
      :ARG2-of (c3 / contrast-01))

# ::snt each new piece of police excess each reported example of police harassment each fresh scandal adds to the number of its converts
# ::tok each new piece of police excess each reported example of police harassment each fresh scandal adds to the number of its converts
# ::alignments 18-19|0.1.0.1 15-16|0.1.0 14-15|0.1.0.0 13-14|0.1.0.0.1 12-13|0.1.0.0.0 10-11|0.0.1.0 8-9|0.1 7-8|0 6-7|0.0.1.2 5-6|0.0.1 4-5|0.0.1.1 2-3|0.0 1-2|0.0.0 0-1|0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:24.596
# ::node	0	report-01	7-8
# ::node	0.0	piece	2-3
# ::node	0.0.0	new	1-2
# ::node	0.0.1	exceed-01	5-6
# ::node	0.0.1.0	police	10-11
# ::node	0.0.1.1	police	4-5
# ::node	0.0.1.2	each	6-7
# ::node	0.0.2	each	0-1
# ::node	0.1	example	8-9
# ::node	0.1.0	add-03	15-16
# ::node	0.1.0.0	scandal	14-15
# ::node	0.1.0.0.0	each	12-13
# ::node	0.1.0.0.1	fresh	13-14
# ::node	0.1.0.1	number	18-19
# ::root	0	report-01
# ::edge	add-03	ARG0	scandal	0.1.0	0.1.0.0	
# ::edge	add-03	ARG1	example	0.1.0	0.1	
# ::edge	add-03	ARG4	number	0.1.0	0.1.0.1	
# ::edge	exceed-01	ARG0	police	0.0.1	0.0.1.0	
# ::edge	exceed-01	ARG1	police	0.0.1	0.0.1.1	
# ::edge	exceed-01	ARG2	each	0.0.1	0.0.1.2	
# ::edge	piece	mod	each	0.0	0.0.2	
# ::edge	piece	mod	exceed-01	0.0	0.0.1	
# ::edge	piece	mod	new	0.0	0.0.0	
# ::edge	report-01	ARG0	piece	0	0.0	
# ::edge	report-01	ARG1	example	0	0.1	
# ::edge	scandal	mod	each	0.1.0.0	0.1.0.0.0	
# ::edge	scandal	mod	fresh	0.1.0.0	0.1.0.0.1	
(r / report-01 
      :ARG0 (p3 / piece 
            :mod (n2 / new) 
            :mod (e4 / exceed-01 
                  :ARG0 (p / police) 
                  :ARG1 (p2 / police) 
                  :ARG2 (e3 / each)) 
            :mod (e5 / each)) 
      :ARG1 (e2 / example 
            :ARG1-of (a / add-03 
                  :ARG0 (s / scandal 
                        :mod (e / each) 
                        :mod (f / fresh)) 
                  :ARG4 (n / number))))

# ::snt though the excess had been exaggerated by the death of three quarters of a million men in the war the cause was mainly natural more male babies were born but still more died in infancy, the excess of women dash
# ::tok though the excess had been exaggerated by the death of three quarters of a million men in the war the cause was mainly natural more male babies were born but still more died in infancy , the excess of women dash
# ::alignments 39-40|0.0.0.0.0.0 37-38|0.0.0.0.0 34-35|0.1.2 32-33|0.1 30-31|0.1.1 29-30|0 28-29|0.2 26-27|0.2.0 25-26|0.0.0.1 23-24|0.0 22-23|0.1.0.0.0.0.0 20-21|0.0.0 18-19|0.1.0 15-16|0.0.0.0 11-12|0.1.0.0.0.0.1 10-11|0.1.0.0.0.0.1.0 8-9|0.1.0.0 5-6|0.1.0.0.0 2-3|0.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:25.218
# ::node	0	contrast-01	29-30
# ::node	0.0	natural	23-24
# ::node	0.0.0	cause-01	20-21
# ::node	0.0.0.0	man	15-16
# ::node	0.0.0.0.0	exceed-01	37-38
# ::node	0.0.0.0.0.0	woman	39-40
# ::node	0.0.0.1	male	25-26
# ::node	0.1	die-01	32-33
# ::node	0.1.0	war	18-19
# ::node	0.1.0.0	die-01	8-9
# ::node	0.1.0.0.0	exaggerate-01	5-6
# ::node	0.1.0.0.0.0	exceed-01	2-3
# ::node	0.1.0.0.0.0.0	main	22-23
# ::node	0.1.0.0.0.0.1	quarter	11-12
# ::node	0.1.0.0.0.0.1.0	3	10-11
# ::node	0.1.1	still	30-31
# ::node	0.1.2	infancy	34-35
# ::node	0.2	bear-02	28-29
# ::node	0.2.0	baby	26-27
# ::root	0	contrast-01
# ::edge	bear-02	ARG1	baby	0.2	0.2.0	
# ::edge	cause-01	ARG0	man	0.0.0	0.0.0.0	
# ::edge	cause-01	ARG1	male	0.0.0	0.0.0.1	
# ::edge	contrast-01	ARG1	natural	0	0.0	
# ::edge	contrast-01	ARG2	die-01	0	0.1	
# ::edge	contrast-01	ARG4	bear-02	0	0.2	
# ::edge	die-01	ARG0	war	0.1	0.1.0	
# ::edge	die-01	ARG1	still	0.1	0.1.1	
# ::edge	die-01	ARG1	war	0.1.0.0	0.1.0	
# ::edge	die-01	location	infancy	0.1	0.1.2	
# ::edge	exaggerate-01	ARG1	die-01	0.1.0.0.0	0.1.0.0	
# ::edge	exaggerate-01	ARG2	exceed-01	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	exceed-01	ARG0	main	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	exceed-01	ARG0	man	0.0.0.0.0	0.0.0.0	
# ::edge	exceed-01	ARG1	quarter	0.1.0.0.0.0	0.1.0.0.0.0.1	
# ::edge	exceed-01	ARG1	woman	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	natural	domain	cause-01	0.0	0.0.0	
# ::edge	quarter	quant	3	0.1.0.0.0.0.1	0.1.0.0.0.0.1.0	
(c / contrast-01 
      :ARG1 (n / natural 
            :domain (c2 / cause-01 
                  :ARG0 (m3 / man 
                        :ARG0-of (e / exceed-01 
                              :ARG1 (w / woman))) 
                  :ARG1 (m / male))) 
      :ARG2 (d / die-01 
            :ARG0 (w2 / war 
                  :ARG1-of (d2 / die-01 
                        :ARG1-of (e2 / exaggerate-01 
                              :ARG2 (e3 / exceed-01 
                                    :ARG0 (m2 / main) 
                                    :ARG1 (q / quarter 
                                          :quant 3))))) 
            :ARG1 (s / still) 
            :location (i / infancy)) 
      :ARG4 (b / bear-02 
            :ARG1 (b2 / baby)))

# ::snt in taking newfangled ideas to such excess of course wpp was by no means alone
# ::tok in taking newfangled ideas to such excess of course wpp was by no means alone
# ::alignments 14-15|0.1 13-14|0 12-13|0.2 6-7|0.1.0 5-6|0.1.0.0 3-4|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:25.239
# ::node	0	mean-01	13-14
# ::node	0.0	idea	3-4
# ::node	0.1	alone	14-15
# ::node	0.1.0	exceed-01	6-7
# ::node	0.1.0.0	such	5-6
# ::node	0.2	-	12-13
# ::root	0	mean-01
# ::edge	exceed-01	ARG1	alone	0.1.0	0.1	
# ::edge	exceed-01	mod	such	0.1.0	0.1.0.0	
# ::edge	mean-01	ARG0	idea	0	0.0	
# ::edge	mean-01	mod	alone	0	0.1	
# ::edge	mean-01	polarity	-	0	0.2	
(m / mean-01 
      :ARG0 (i / idea) 
      :mod (a / alone 
            :ARG1-of (e / exceed-01 
                  :mod (s / such))) 
      :polarity (- / -))

# ::snt please remember however that if you exceed the agreed amount or overdraw your account without prior arrangement you will automatically be charged a higher rate of interest on the excess or on unauthorised amounts
# ::tok please remember however that if you exceed the agreed amount or overdraw your account without prior arrangement you will automatically be charged a higher rate of interest on the excess or on unauthorised amounts
# ::alignments 33-34|0.0.0.0.1 30-31|0.0.0.0 29-30|0.0.0.0.0 26-27|0 24-25|0.0 23-24|0.0.1 21-22|0.0.0 19-20|0.0.0.3 17-18|0.0.0.1.0 16-17|0.0.0.1.0.0 15-16|0.0.0.1.0.0.0 13-14|0.0.0.2.0.0.0 10-11|0.0.0.2 9-10|0.0.0.2.0.1 8-9|0.0.0.2.0.1.0 6-7|0.0.0.2.0 5-6|0.0.0.2.0.0 1-2|0.0.0.1 0-1|0.0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:26.046
# ::node	0	interest-01	26-27
# ::node	0.0	rate	24-25
# ::node	0.0.0	charge-05	21-22
# ::node	0.0.0.0	or	30-31
# ::node	0.0.0.0.0	exceed-01	29-30
# ::node	0.0.0.0.1	amount	33-34
# ::node	0.0.0.1	remember-01	1-2
# ::node	0.0.0.1.0	you	17-18
# ::node	0.0.0.1.0.0	arrange-01	16-17
# ::node	0.0.0.1.0.0.0	prior	15-16
# ::node	0.0.0.1.1	please-01	0-1
# ::node	0.0.0.2	or	10-11
# ::node	0.0.0.2.0	exceed-01	6-7
# ::node	0.0.0.2.0.0	you	5-6
# ::node	0.0.0.2.0.0.0	account	13-14
# ::node	0.0.0.2.0.1	amount	9-10
# ::node	0.0.0.2.0.1.0	agree-01	8-9
# ::node	0.0.0.3	automatic	19-20
# ::node	0.0.1	high	23-24
# ::root	0	interest-01
# ::edge	account	poss	you	0.0.0.2.0.0.0	0.0.0.2.0.0	
# ::edge	agree-01	ARG1	amount	0.0.0.2.0.1.0	0.0.0.2.0.1	
# ::edge	arrange-01	ARG1	you	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	arrange-01	time	prior	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	charge-05	ARG0	or	0.0.0	0.0.0.0	
# ::edge	charge-05	ARG1	rate	0.0.0	0.0	
# ::edge	charge-05	condition	or	0.0.0	0.0.0.2	
# ::edge	charge-05	manner	automatic	0.0.0	0.0.0.3	
# ::edge	exceed-01	ARG0	you	0.0.0.2.0	0.0.0.2.0.0	
# ::edge	exceed-01	ARG1	amount	0.0.0.2.0	0.0.0.2.0.1	
# ::edge	interest-01	ARG2	rate	0	0.0	
# ::edge	or	op1	exceed-01	0.0.0.0	0.0.0.0.0	
# ::edge	or	op1	exceed-01	0.0.0.2	0.0.0.2.0	
# ::edge	or	op2	amount	0.0.0.0	0.0.0.0.1	
# ::edge	please-01	ARG1	remember-01	0.0.0.1.1	0.0.0.1	
# ::edge	rate	mod	high	0.0	0.0.1	
# ::edge	remember-01	ARG0	you	0.0.0.1	0.0.0.1.0	
# ::edge	remember-01	ARG1	charge-05	0.0.0.1	0.0.0	
(i / interest-01 
      :ARG2 (r / rate 
            :ARG1-of (c / charge-05 
                  :ARG0 (o / or 
                        :op1 (e / exceed-01) 
                        :op2 (a / amount)) 
                  :ARG1-of (r2 / remember-01 
                        :ARG0 (y / you 
                              :ARG1-of (a3 / arrange-01 
                                    :time (p / prior))) 
                        :ARG1-of (p2 / please-01)) 
                  :condition (o2 / or 
                        :op1 (e2 / exceed-01 
                              :ARG0 (y2 / you 
                                    :poss-of (a4 / account)) 
                              :ARG1 (a5 / amount 
                                    :ARG1-of (a6 / agree-01)))) 
                  :manner (a2 / automatic)) 
            :mod (h / high)))

# ::snt how many more bits were takeoffable  wexford who was hardly ever shaken from his equilibrium by the devious excesses of criminals was perpetually astonished by his own daughter
# ::tok how many more bits were takeoffable wexford who was hardly ever shaken from his equilibrium by the devious excesses of criminals was perpetually astonished by his own daughter
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:26.047
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt in the uk at present the public sector is in substantial budget surplus ie the excess of tax receipts over government spending
# ::tok in the uk at present the public sector is in substantial budget surplus ie the excess of tax receipts over government spending
# ::alignments 21-22|0.0.1 18-19|0.0.0 17-18|0.0.1.1 15-16|0.0 12-13|0.0.1.1.0.1 11-12|0.0.1.1.0 10-11|0.0.1.1.0.0 7-8|0 6-7|0.1 4-5|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:26.121
# ::node	0	sector	7-8
# ::node	0.0	exceed-01	15-16
# ::node	0.0.0	receipt	18-19
# ::node	0.0.1	spend-01	21-22
# ::node	0.0.1.0	present	4-5
# ::node	0.0.1.1	tax-01	17-18
# ::node	0.0.1.1.0	budget	11-12
# ::node	0.0.1.1.0.0	substantial	10-11
# ::node	0.0.1.1.0.1	surplus	12-13
# ::node	0.1	public	6-7
# ::root	0	sector
# ::edge	budget	mod	substantial	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	budget	op1	tax-01	0.0.1.1.0	0.0.1.1	
# ::edge	exceed-01	ARG0	sector	0.0	0	
# ::edge	exceed-01	ARG1	receipt	0.0	0.0.0	
# ::edge	exceed-01	ARG2	spend-01	0.0	0.0.1	
# ::edge	sector	mod	public	0	0.1	
# ::edge	spend-01	ARG1	present	0.0.1	0.0.1.0	
# ::edge	surplus	mod	budget	0.0.1.1.0.1	0.0.1.1.0	
# ::edge	tax-01	ARG1	spend-01	0.0.1.1	0.0.1	
(s4 / sector 
      :ARG0-of (e / exceed-01 
            :ARG1 (r / receipt) 
            :ARG2 (s / spend-01 
                  :ARG1 (p2 / present) 
                  :ARG1-of (t / tax-01 
                        :op-of (b / budget 
                              :mod (s3 / substantial) 
                              :mod-of (s2 / surplus))))) 
      :mod (p / public))

# ::snt the film was based on a play written long before the onset of the intifada though there have been many incidents of army excesses during the uprising
# ::tok the film was based on a play written long before the onset of the intifada though there have been many incidents of army excesses during the uprising
# ::alignments 26-27|0 22-23|0.0.1.0.0 20-21|0.1 19-20|0.1.0 14-15|0.0.1.0.1 11-12|0.0.1.0.2.0 9-10|0.0.1.0.2 7-8|0.0.1.0 6-7|0.0.1 3-4|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:26.193
# ::node	0	uprise-00	26-27
# ::node	0.0	base-01	3-4
# ::node	0.0.0	film	1-2
# ::node	0.0.1	play-01	6-7
# ::node	0.0.1.0	write-01	7-8
# ::node	0.0.1.0.0	army	22-23
# ::node	0.0.1.0.1	intifada	14-15
# ::node	0.0.1.0.2	before	9-10
# ::node	0.0.1.0.2.0	onset	11-12
# ::node	0.1	incident	20-21
# ::node	0.1.0	many	19-20
# ::root	0	uprise-00
# ::edge	base-01	ARG1	film	0.0	0.0.0	
# ::edge	base-01	ARG2	play-01	0.0	0.0.1	
# ::edge	before	op1	onset	0.0.1.0.2	0.0.1.0.2.0	
# ::edge	incident	mod	uprise-00	0.1	0	
# ::edge	incident	quant	many	0.1	0.1.0	
# ::edge	uprise-00	ARG1	base-01	0	0.0	
# ::edge	write-01	ARG0	army	0.0.1.0	0.0.1.0.0	
# ::edge	write-01	ARG1	play-01	0.0.1.0	0.0.1	
# ::edge	write-01	ARG2	intifada	0.0.1.0	0.0.1.0.1	
# ::edge	write-01	time	before	0.0.1.0	0.0.1.0.2	
(u / uprise-00 
      :ARG1 (b2 / base-01 
            :ARG1 (f / film) 
            :ARG2 (p / play-01 
                  :ARG1-of (w / write-01 
                        :ARG0 (a / army) 
                        :ARG2 (i2 / intifada) 
                        :time (b / before 
                              :op1 (o / onset))))) 
      :mod-of (i / incident 
            :quant (m / many)))

# ::snt allnight parties blaring music and summer barbecue excesses for instance are all strictly outofofficehours activities and thats when the monitoring has to be done
# ::tok allnight parties blaring music and summer barbecue excesses for instance are all strictly outofofficehours activities and thats when the monitoring has to be done
# ::alignments 19-20|0.0.0.0 16-17|0.0.0.2 15-16|0.0.0 14-15|0.0.0.1 12-13|0.0.0.1.0.0 11-12|0.0.0.1.0 5-6|0.1 4-5|0 3-4|0.0.0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:26.254
# ::node	0	and	4-5
# ::node	0.0	party	1-2
# ::node	0.0.0	and	15-16
# ::node	0.0.0.0	monitor-01	19-20
# ::node	0.0.0.0.0	music	3-4
# ::node	0.0.0.1	activity	14-15
# ::node	0.0.0.1.0	all	11-12
# ::node	0.0.0.1.0.0	strict	12-13
# ::node	0.0.0.2	that	16-17
# ::node	0.1	summer	5-6
# ::root	0	and
# ::edge	activity	quant	all	0.0.0.1	0.0.0.1.0	
# ::edge	all	degree	strict	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	and	op1	party	0	0.0	
# ::edge	and	op1	party	0.0.0	0.0	
# ::edge	and	op2	activity	0.0.0	0.0.0.1	
# ::edge	and	op2	summer	0	0.1	
# ::edge	and	op3	that	0.0.0	0.0.0.2	
# ::edge	monitor-01	ARG0	music	0.0.0.0	0.0.0.0.0	
# ::edge	monitor-01	ARG1	and	0.0.0.0	0.0.0	
(a4 / and 
      :op1 (p / party 
            :op-of (a / and 
                  :ARG1-of (m / monitor-01 
                        :ARG0 (m2 / music)) 
                  :op1 (a2 / activity 
                        :quant (a3 / all 
                              :degree (s / strict))) 
                  :op2 (t / that))) 
      :op2 (s2 / summer))

# ::snt however he told mr ashley the licences of existing brands were due for review and no new licences have been granted to products with alcohol in excess of 0
# ::tok however he told mr ashley the licences of existing brands were due for review and no new licences have been granted to products with alcohol in excess of 0
# ::alignments 28-29|0.1.2.0 26-27|0.1.2 24-25|0.1.1 22-23|0.1.0 20-21|0.1 16-17|0.0.1 15-16|0.1.3 14-15|0 13-14|0.2.1 9-10|0.2 8-9|0.2.0 2-3|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:26.373
# ::node	0	and	14-15
# ::node	0.0	tell-01	2-3
# ::node	0.0.0	he	1-2
# ::node	0.0.1	new	16-17
# ::node	0.1	grant-01	20-21
# ::node	0.1.0	product	22-23
# ::node	0.1.1	alcohol	24-25
# ::node	0.1.2	exceed-01	26-27
# ::node	0.1.2.0	0	28-29
# ::node	0.1.3	-	15-16
# ::node	0.2	brand	9-10
# ::node	0.2.0	exist-01	8-9
# ::node	0.2.1	review-01	13-14
# ::root	0	and
# ::edge	and	op1	tell-01	0	0.0	
# ::edge	and	op2	grant-01	0	0.1	
# ::edge	and	poss	brand	0	0.2	
# ::edge	exceed-01	time	0	0.1.2	0.1.2.0	
# ::edge	exist-01	ARG1	brand	0.2.0	0.2	
# ::edge	grant-01	ARG1	product	0.1	0.1.0	
# ::edge	grant-01	ARG2	alcohol	0.1	0.1.1	
# ::edge	grant-01	ARG3	exceed-01	0.1	0.1.2	
# ::edge	grant-01	polarity	-	0.1	0.1.3	
# ::edge	review-01	ARG1	brand	0.2.1	0.2	
# ::edge	tell-01	ARG0	he	0.0	0.0.0	
# ::edge	tell-01	ARG1	new	0.0	0.0.1	
(a2 / and 
      :op1 (t / tell-01 
            :ARG0 (h / he) 
            :ARG1 (n / new)) 
      :op2 (g / grant-01 
            :ARG1 (p / product) 
            :ARG2 (a / alcohol) 
            :ARG3 (e / exceed-01 
                  :time 0) 
            :polarity (- / -)) 
      :poss (b / brand 
            :ARG1-of (e2 / exist-01) 
            :ARG1-of (r / review-01)))

# ::snt we still risk the excesses of the press
# ::tok we still risk the excesses of the press
# ::alignments 7-8|0.1 2-3|0 1-2|0.2 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:26.382
# ::node	0	risk-01	2-3
# ::node	0.0	we	0-1
# ::node	0.1	press	7-8
# ::node	0.2	still	1-2
# ::root	0	risk-01
# ::edge	risk-01	ARG0	we	0	0.0	
# ::edge	risk-01	ARG1	press	0	0.1	
# ::edge	risk-01	mod	still	0	0.2	
(r / risk-01 
      :ARG0 (w / we) 
      :ARG1 (p / press) 
      :mod (s / still))

# ::snt in the ten years of their existence ford svedeveloped vehicles have generated sales with a showroom value in excess of 5 billion
# ::tok in the ten years of their existence ford svedeveloped vehicles have generated sales with a showroom value in excess of 5 billion
# ::alignments 20-21|0.1.1 18-19|0.1.0 16-17|0.1 11-12|0 9-10|0.0 6-7|0.0.0 3-4|0.0.0.0.0+0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:26.437
# ::node	0	generate-01	11-12
# ::node	0.0	vehicle	9-10
# ::node	0.0.0	exist-01	6-7
# ::node	0.0.0.0	temporal-quantity	3-4
# ::node	0.0.0.0.0	year	3-4
# ::node	0.1	value-01	16-17
# ::node	0.1.0	exceed-01	18-19
# ::node	0.1.1	5	20-21
# ::root	0	generate-01
# ::edge	exist-01	ARG1	temporal-quantity	0.0.0	0.0.0.0	
# ::edge	exist-01	ARG2	vehicle	0.0.0	0.0	
# ::edge	generate-01	ARG0	vehicle	0	0.0	
# ::edge	generate-01	ARG1	value-01	0	0.1	
# ::edge	temporal-quantity	unit	year	0.0.0.0	0.0.0.0.0	
# ::edge	value-01	ARG1	exceed-01	0.1	0.1.0	
# ::edge	value-01	time	5	0.1	0.1.1	
(g / generate-01 
      :ARG0 (v2 / vehicle 
            :ARG2-of (e2 / exist-01 
                  :ARG1 (t / temporal-quantity 
                        :unit (y / year)))) 
      :ARG1 (v / value-01 
            :ARG1 (e / exceed-01) 
            :time 5))

# ::snt no agent will be required to maintain net assets in excess of 2m
# ::tok no agent will be required to maintain net assets in excess of 2m
# ::alignments 10-11|0.0.1.1 8-9|0.0.1 7-8|0.0.1.0 6-7|0.0 4-5|0 1-2|0.0.0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:26.478
# ::node	0	require-01	4-5
# ::node	0.0	maintain-01	6-7
# ::node	0.0.0	agent	1-2
# ::node	0.0.1	asset	8-9
# ::node	0.0.1.0	net	7-8
# ::node	0.0.1.1	exceed-01	10-11
# ::node	0.1	-	0-1
# ::root	0	require-01
# ::edge	asset	mod	net	0.0.1	0.0.1.0	
# ::edge	asset	topic	exceed-01	0.0.1	0.0.1.1	
# ::edge	maintain-01	ARG0	agent	0.0	0.0.0	
# ::edge	maintain-01	ARG1	asset	0.0	0.0.1	
# ::edge	require-01	ARG1	maintain-01	0	0.0	
# ::edge	require-01	polarity	-	0	0.1	
(r / require-01 
      :ARG1 (m / maintain-01 
            :ARG0 (a2 / agent) 
            :ARG1 (a / asset 
                  :mod (n / net) 
                  :topic (e / exceed-01))) 
      :polarity (- / -))

# ::snt chairman len whittaker said there were signs of improvement in radamecs defence systems subsidiary and the company had recently won order and signed protocols for overseas business totalling in excess of 3m
# ::tok chairman len whittaker said there were signs of improvement in radamecs defence systems subsidiary and the company had recently won order and signed protocols for overseas business totalling in excess of 3m
# ::alignments 29-30|0.0.1.2.1 26-27|0.0.1.2.0.0 25-26|0.0.1.2.0.0.0 22-23|0.0.1.2.0 21-22|0.0.1.2 19-20|0.0.1 18-19|0.0.1.3 16-17|0.0.1.0 14-15|0.0 13-14|0.0.0.0 12-13|0.0.0.0.0 11-12|0.0.0.0.0.0 8-9|0.0.0 6-7|0.0.1.1 3-4|0 0-1|0.0.1.0.0.0+0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:26.932
# ::node	0	say-01	3-4
# ::node	0.0	and	14-15
# ::node	0.0.0	improve-01	8-9
# ::node	0.0.0.0	subsidiary	13-14
# ::node	0.0.0.0.0	system	12-13
# ::node	0.0.0.0.0.0	defend-01	11-12
# ::node	0.0.1	win-01	19-20
# ::node	0.0.1.0	company	16-17
# ::node	0.0.1.0.0	have-org-role-91	0-1
# ::node	0.0.1.0.0.0	chairman	0-1
# ::node	0.0.1.1	sign	6-7
# ::node	0.0.1.2	and	21-22
# ::node	0.0.1.2.0	sign-02	22-23
# ::node	0.0.1.2.0.0	business	26-27
# ::node	0.0.1.2.0.0.0	overseas	25-26
# ::node	0.0.1.2.1	exceed-01	29-30
# ::node	0.0.1.3	recent	18-19
# ::root	0	say-01
# ::edge	and	op1	improve-01	0.0	0.0.0	
# ::edge	and	op1	win-01	0.0.1.2	0.0.1	
# ::edge	and	op2	exceed-01	0.0.1.2	0.0.1.2.1	
# ::edge	and	op2	win-01	0.0	0.0.1	
# ::edge	business	location	overseas	0.0.1.2.0.0	0.0.1.2.0.0.0	
# ::edge	defend-01	ARG0	system	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	have-org-role-91	ARG1	company	0.0.1.0.0	0.0.1.0	
# ::edge	have-org-role-91	ARG2	chairman	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	improve-01	ARG1	subsidiary	0.0.0	0.0.0.0	
# ::edge	say-01	ARG1	and	0	0.0	
# ::edge	sign-02	ARG1	and	0.0.1.2.0	0.0.1.2	
# ::edge	sign-02	ARG2	business	0.0.1.2.0	0.0.1.2.0.0	
# ::edge	subsidiary	mod	system	0.0.0.0	0.0.0.0.0	
# ::edge	win-01	ARG0	company	0.0.1	0.0.1.0	
# ::edge	win-01	ARG1	sign	0.0.1	0.0.1.1	
# ::edge	win-01	time	recent	0.0.1	0.0.1.3	
(s5 / say-01 
      :ARG1 (a2 / and 
            :op1 (i / improve-01 
                  :ARG1 (s2 / subsidiary 
                        :mod (s3 / system 
                              :ARG0-of (d / defend-01)))) 
            :op2 (w / win-01 
                  :ARG0 (c / company 
                        :ARG1-of (h / have-org-role-91 
                              :ARG2 (c2 / chairman))) 
                  :ARG1 (s4 / sign) 
                  :op-of (a / and 
                        :ARG1-of (s / sign-02 
                              :ARG2 (b / business 
                                    :location (o / overseas))) 
                        :op1 (e / exceed-01)) 
                  :time (r / recent))))

# ::snt his buildings were never precious or timid and avoided the excesses of some recent schemes which have been presented as wearing the conservation mantle
# ::tok his buildings were never precious or timid and avoided the excesses of some recent schemes which have been presented as wearing the conservation mantle
# ::alignments 22-23|0.1.0.0 20-21|0.1.0 18-19|0.1 14-15|0 13-14|0.3 12-13|0.2 8-9|0.0.0.0 7-8|0.0 5-6|0.0.0 4-5|0.0.0.0.0.0 1-2|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:27.044
# ::node	0	scheme-01	14-15
# ::node	0.0	and	7-8
# ::node	0.0.0	or	5-6
# ::node	0.0.0.0	avoid-01	8-9
# ::node	0.0.0.0.0	building	1-2
# ::node	0.0.0.0.0.0	precious	4-5
# ::node	0.1	present-01	18-19
# ::node	0.1.0	wear-01	20-21
# ::node	0.1.0.0	conserve-01	22-23
# ::node	0.2	some	12-13
# ::node	0.3	recent	13-14
# ::root	0	scheme-01
# ::edge	avoid-01	ARG0	building	0.0.0.0	0.0.0.0.0	
# ::edge	or	op1	and	0.0.0	0.0	
# ::edge	or	op2	avoid-01	0.0.0	0.0.0.0	
# ::edge	precious	domain	building	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	present-01	ARG1	scheme-01	0.1	0	
# ::edge	present-01	ARG2	wear-01	0.1	0.1.0	
# ::edge	scheme-01	ARG1	and	0	0.0	
# ::edge	scheme-01	mod	some	0	0.2	
# ::edge	scheme-01	time	recent	0	0.3	
# ::edge	wear-01	ARG1	conserve-01	0.1.0	0.1.0.0	
(s / scheme-01 
      :ARG1 (a2 / and 
            :op-of (o / or 
                  :op1 (a / avoid-01 
                        :ARG0 (b / building 
                              :domain-of (p2 / precious))))) 
      :ARG1-of (p / present-01 
            :ARG2 (w / wear-01 
                  :ARG1 (c / conserve-01))) 
      :mod (s2 / some) 
      :time (r / recent))

# ::snt an american publisher ballantine bought the book before the fair and sold the title on to the literary guild book club for in excess of dollars 100000
# ::tok an american publisher ballantine bought the book before the fair and sold the title on to the literary guild book club for in excess of dollars 100000
# ::alignments 26-27|0.0.1.0.2.2+0.0.1.0.2.1+0.0.1.0.2.0+0.0.1.0.2 25-26|0.0.1.0.1.0.0.0+0.0.1.0.1.0.0 23-24|0.0.1.0.1.0 20-21|0 19-20|0.1 17-18|0.2 13-14|0.0.0 11-12|0.0 10-11|0.0.1 9-10|0.0.1.0.3.0 7-8|0.0.1.0.3 6-7|0.0.1.0.1 4-5|0.0.1.0 1-2|0.0.1.0.0.0.0+0.0.1.0.0.0+0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:27.414
# ::node	0	club	20-21
# ::node	0.0	sell-01	11-12
# ::node	0.0.0	title	13-14
# ::node	0.0.1	and	10-11
# ::node	0.0.1.0	buy-01	4-5
# ::node	0.0.1.0.0	country	1-2
# ::node	0.0.1.0.0.0	name	1-2
# ::node	0.0.1.0.0.0.0	"America"	1-2
# ::node	0.0.1.0.1	book	6-7
# ::node	0.0.1.0.1.0	exceed-01	23-24
# ::node	0.0.1.0.1.0.0	monetary-quantity	25-26
# ::node	0.0.1.0.1.0.0.0	dollar	25-26
# ::node	0.0.1.0.2	date-entity	26-27
# ::node	0.0.1.0.2.0	0	26-27
# ::node	0.0.1.0.2.1	0	26-27
# ::node	0.0.1.0.2.2	10	26-27
# ::node	0.0.1.0.3	before	7-8
# ::node	0.0.1.0.3.0	fair	9-10
# ::node	0.1	book	19-20
# ::node	0.2	literary	17-18
# ::root	0	club
# ::edge	and	op1	buy-01	0.0.1	0.0.1.0	
# ::edge	and	op2	sell-01	0.0.1	0.0	
# ::edge	before	op1	fair	0.0.1.0.3	0.0.1.0.3.0	
# ::edge	buy-01	ARG0	country	0.0.1.0	0.0.1.0.0	
# ::edge	buy-01	ARG1	book	0.0.1.0	0.0.1.0.1	
# ::edge	buy-01	time	before	0.0.1.0	0.0.1.0.3	
# ::edge	club	mod	book	0	0.1	
# ::edge	club	mod	literary	0	0.2	
# ::edge	country	name	name	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	date-entity	day	0	0.0.1.0.2	0.0.1.0.2.0	
# ::edge	date-entity	month	0	0.0.1.0.2	0.0.1.0.2.1	
# ::edge	date-entity	op1	buy-01	0.0.1.0.2	0.0.1.0	
# ::edge	date-entity	year	10	0.0.1.0.2	0.0.1.0.2.2	
# ::edge	exceed-01	ARG0	book	0.0.1.0.1.0	0.0.1.0.1	
# ::edge	exceed-01	ARG1	monetary-quantity	0.0.1.0.1.0	0.0.1.0.1.0.0	
# ::edge	monetary-quantity	unit	dollar	0.0.1.0.1.0.0	0.0.1.0.1.0.0.0	
# ::edge	name	op1	"America"	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	sell-01	ARG1	title	0.0	0.0.0	
# ::edge	sell-01	ARG2	club	0.0	0	
(c / club 
      :ARG2-of (s / sell-01 
            :ARG1 (t / title) 
            :op-of (a / and 
                  :op1 (b4 / buy-01 
                        :ARG0 (c2 / country 
                              :name (n / name 
                                    :op1 "America")) 
                        :ARG1 (b3 / book 
                              :ARG0-of (e / exceed-01 
                                    :ARG1 (m / monetary-quantity 
                                          :unit (d2 / dollar)))) 
                        :op-of (d / date-entity 
                              :day 0 
                              :month 0 
                              :year 10) 
                        :time (b2 / before 
                              :op1 (f / fair))))) 
      :mod (b / book) 
      :mod (l / literary))

# ::snt richard responded to the assembled worthies with an excess of charm which his mother knew was simply a tactical screen behind which his position was the more stubbornly entrenched
# ::tok richard responded to the assembled worthies with an excess of charm which his mother knew was simply a tactical screen behind which his position was the more stubbornly entrenched
# ::alignments 28-29|0 23-24|0.0 20-21|0.1.0.0.0.1.1 19-20|0.1.0.0.0.1 18-19|0.1.0.0.0.1.3 16-17|0.1.0.0.0.1.2 14-15|0.1.0.0.0.1.0 13-14|0.1.0.0.0.0+0.1.0.0.0 10-11|0.1.0.0 8-9|0.1.0 4-5|0.1 1-2|0.1.0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:27.503
# ::node	0	entrench-01	28-29
# ::node	0.0	position	23-24
# ::node	0.1	assemble-02	4-5
# ::node	0.1.0	exceed-01	8-9
# ::node	0.1.0.0	charm-01	10-11
# ::node	0.1.0.0.0	have-rel-role-91	13-14
# ::node	0.1.0.0.0.0	mother	13-14
# ::node	0.1.0.0.0.1	screen	19-20
# ::node	0.1.0.0.0.1.0	know-01	14-15
# ::node	0.1.0.0.0.1.0.0	respond-01	1-2
# ::node	0.1.0.0.0.1.1	behind	20-21
# ::node	0.1.0.0.0.1.2	simple	16-17
# ::node	0.1.0.0.0.1.3	tactic	18-19
# ::root	0	entrench-01
# ::edge	assemble-02	ARG1	entrench-01	0.1	0	
# ::edge	assemble-02	time	exceed-01	0.1	0.1.0	
# ::edge	entrench-01	ARG1	position	0	0.0	
# ::edge	exceed-01	ARG1	charm-01	0.1.0	0.1.0.0	
# ::edge	have-rel-role-91	ARG1	charm-01	0.1.0.0.0	0.1.0.0	
# ::edge	have-rel-role-91	ARG2	mother	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	know-01	ARG1	screen	0.1.0.0.0.1.0	0.1.0.0.0.1	
# ::edge	respond-01	ARG1	know-01	0.1.0.0.0.1.0.0	0.1.0.0.0.1.0	
# ::edge	screen	domain	have-rel-role-91	0.1.0.0.0.1	0.1.0.0.0	
# ::edge	screen	location	behind	0.1.0.0.0.1	0.1.0.0.0.1.1	
# ::edge	screen	mod	simple	0.1.0.0.0.1	0.1.0.0.0.1.2	
# ::edge	screen	mod	tactic	0.1.0.0.0.1	0.1.0.0.0.1.3	
(e / entrench-01 
      :ARG1 (p / position) 
      :ARG1-of (a / assemble-02 
            :time (e2 / exceed-01 
                  :ARG1 (c / charm-01 
                        :ARG1-of (h / have-rel-role-91 
                              :ARG2 (m / mother) 
                              :domain-of (s / screen 
                                    :ARG1-of (k / know-01 
                                          :ARG1-of (r / respond-01)) 
                                    :location (b / behind) 
                                    :mod (s2 / simple) 
                                    :mod (t / tactic)))))))

# ::snt one has to be honest and say that the number of forms has decreased under sir rehoboam nicholson compared with the regime of sir solomon dearing where even post office management conceded that matters were being carried to excess
# ::tok one has to be honest and say that the number of forms has decreased under sir rehoboam nicholson compared with the regime of sir solomon dearing where even post office management conceded that matters were being carried to excess
# ::alignments 38-39|0.0.0 33-34|0.0.0.0 31-32|0.0.1.0.1 30-31|0.0.1.0 29-30|0.0.1 28-29|0.0 21-22|0.1.0.0.0.0 18-19|0.1.0.0.0 13-14|0.1 11-12|0.1.0.0 9-10|0.1.0 6-7|0 5-6|0.2 4-5|0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:27.786
# ::node	0	say-01	6-7
# ::node	0.0	post	28-29
# ::node	0.0.0	exceed-01	38-39
# ::node	0.0.0.0	matter	33-34
# ::node	0.0.1	office	29-30
# ::node	0.0.1.0	manage-01	30-31
# ::node	0.0.1.0.0	honest	4-5
# ::node	0.0.1.0.1	concede-01	31-32
# ::node	0.1	decrease-01	13-14
# ::node	0.1.0	number	9-10
# ::node	0.1.0.0	form	11-12
# ::node	0.1.0.0.0	compare-01	18-19
# ::node	0.1.0.0.0.0	regime	21-22
# ::node	0.2	and	5-6
# ::root	0	say-01
# ::edge	and	op1	say-01	0.2	0	
# ::edge	compare-01	ARG1	form	0.1.0.0.0	0.1.0.0	
# ::edge	compare-01	ARG2	regime	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	concede-01	ARG1	manage-01	0.0.1.0.1	0.0.1.0	
# ::edge	decrease-01	ARG1	number	0.1	0.1.0	
# ::edge	exceed-01	ARG0	matter	0.0.0	0.0.0.0	
# ::edge	exceed-01	ARG1	post	0.0.0	0.0	
# ::edge	form	quant	number	0.1.0.0	0.1.0	
# ::edge	manage-01	ARG0	honest	0.0.1.0	0.0.1.0.0	
# ::edge	manage-01	ARG1	office	0.0.1.0	0.0.1	
# ::edge	office	mod	post	0.0.1	0.0	
# ::edge	say-01	ARG0	post	0	0.0	
# ::edge	say-01	ARG1	decrease-01	0	0.1	
(s / say-01 
      :ARG0 (p / post 
            :ARG1-of (e / exceed-01 
                  :ARG0 (m / matter)) 
            :mod-of (o / office 
                  :ARG1-of (m2 / manage-01 
                        :ARG0 (h / honest) 
                        :ARG1-of (c / concede-01)))) 
      :ARG1 (d / decrease-01 
            :ARG1 (n / number 
                  :quant-of (f / form 
                        :ARG1-of (c2 / compare-01 
                              :ARG2 (r / regime))))) 
      :op-of (a / and))

# ::snt the only canadian station to vie with the greatest american examples was the remarkable toronto union station built between 1915 and 1930 with what one writer called a blessed sense of civic excess
# ::tok the only canadian station to vie with the greatest american examples was the remarkable toronto union station built between 1915 and 1930 with what one writer called a blessed sense of civic excess
# ::alignments 32-33|0.0.0.0.1 29-30|0.0.0.0 25-26|0.0.0.0.0.0+0.0.0.0.0 21-22|0.0.3.0+0.0.3 20-21|0 19-20|0.0.2.0+0.0.2 18-19|0.0 17-18|0.0.0 16-17|0.0.0.1 15-16|0.0.0.1.1 14-15|0.0.0.1.0.0.0+0.0.0.1.0.0+0.0.0.1.0 13-14|0.0.0.1.2 10-11|0.0.1.0 9-10|0.0.1.1.0+0.0.1.1+0.0.1 8-9|0.0.0.0.1.0.0+0.0.0.0.1.0 3-4|0.0.0.0.0.0.0 1-2|0.0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:28.346
# ::node	0	and	20-21
# ::node	0.0	between	18-19
# ::node	0.0.0	build-01	17-18
# ::node	0.0.0.0	sense	29-30
# ::node	0.0.0.0.0	person	25-26
# ::node	0.0.0.0.0.0	write-01	25-26
# ::node	0.0.0.0.0.0.0	station	3-4
# ::node	0.0.0.0.0.0.0.0	only	1-2
# ::node	0.0.0.0.1	exceed-01	32-33
# ::node	0.0.0.0.1.0	great	8-9
# ::node	0.0.0.0.1.0.0	most	8-9
# ::node	0.0.0.1	station	16-17
# ::node	0.0.0.1.0	city	14-15
# ::node	0.0.0.1.0.0	name	14-15
# ::node	0.0.0.1.0.0.0	"Toronto"	14-15
# ::node	0.0.0.1.1	union	15-16
# ::node	0.0.0.1.2	remarkable	13-14
# ::node	0.0.1	country	9-10
# ::node	0.0.1.0	example	10-11
# ::node	0.0.1.1	name	9-10
# ::node	0.0.1.1.0	"America"	9-10
# ::node	0.0.2	date-entity	19-20
# ::node	0.0.2.0	1915	19-20
# ::node	0.0.3	date-entity	21-22
# ::node	0.0.3.0	1930	21-22
# ::root	0	and
(a / and 
      :op-of (b / between 
            :ARG2-of (b2 / build-01 
                  :ARG0 (s / sense 
                        :consist (p / person 
                              :ARG0-of (w / write-01 
                                    :ARG1 (s3 / station 
                                          :mod (o / only)))) 
                        :mod (e / exceed-01 
                              :ARG1 (g / great 
                                    :degree (m / most)))) 
                  :ARG1 (s2 / station 
                        :location (c / city 
                              :name (n / name 
                                    :op1 "Toronto")) 
                        :mod (u / union) 
                        :mod (r / remarkable))) 
            :op1 (c2 / country 
                  :mod-of (e2 / example) 
                  :name (n2 / name 
                        :op1 "America")) 
            :op2 (d2 / date-entity 
                  :year 1915) 
            :op3 (d / date-entity 
                  :year 1930)))

# ::snt the calibras pedal has an excess of free travel before anything happens dash
# ::tok the calibras pedal has an excess of free travel before anything happens dash
# ::alignments 11-12|0.1 10-11|0.1.1 9-10|0.1.2 8-9|0 7-8|0.0 5-6|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:28.371
# ::node	0	travel-01	8-9
# ::node	0.0	free-41	7-8
# ::node	0.1	happen-01	11-12
# ::node	0.1.0	exceed-01	5-6
# ::node	0.1.1	anything	10-11
# ::node	0.1.2	before	9-10
# ::root	0	travel-01
(t / travel-01 
      :ARG1-of (f / free-41) 
      :ARG2-of (h / happen-01 
            :ARG0 (e / exceed-01) 
            :ARG1 (a / anything) 
            :op-of (b / before)))

# ::snt donizettis resources did not run to the excesses a more modern composer would have applied in depicting a tormented mind
# ::tok donizettis resources did not run to the excesses a more modern composer would have applied in depicting a tormented mind
# ::alignments 19-20|0.1 16-17|0 14-15|0.2 10-11|0.0 1-2|0.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:28.422
# ::node	0	depict-01	16-17
# ::node	0.0	modern	10-11
# ::node	0.1	mind	19-20
# ::node	0.2	apply-01	14-15
# ::node	0.3	resource	1-2
# ::root	0	depict-01
# ::edge	apply-01	ARG1	depict-01	0.2	0	
# ::edge	depict-01	ARG0	modern	0	0.0	
# ::edge	depict-01	ARG1	mind	0	0.1	
# ::edge	resource	op1	depict-01	0.3	0	
(d / depict-01 
      :ARG0 (m2 / modern) 
      :ARG1 (m / mind) 
      :ARG1-of (a / apply-01) 
      :op-of (r / resource))

# ::snt in particular i wanted to see whether the bbcs emphasis on analysis had led to an excess of ponderousness making the news less accessible less comprehensive and less slick
# ::tok in particular i wanted to see whether the bbcs emphasis on analysis had led to an excess of ponderousness making the news less accessible less comprehensive and less slick
# ::alignments 27-28|0.0.0.0.1.0.0 26-27|0.0.0.0.1 25-26|0.0.0.0.1.0.1.0 24-25|0.0.0.0.1.0.1 23-24|0.0.0.0.1.0 22-23|0.0.0.0.1.0.3 21-22|0.0.0.0.1.0.2 16-17|0.0.1 13-14|0.0 11-12|0.1 9-10|0 5-6|0.0.0 3-4|0.0.0.0 2-3|0.0.0.0.0 1-2|0.0.0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:28.635
# ::node	0	emphasize-01	9-10
# ::node	0.0	lead-02	13-14
# ::node	0.0.0	see-01	5-6
# ::node	0.0.0.0	want-01	3-4
# ::node	0.0.0.0.0	i	2-3
# ::node	0.0.0.0.1	and	26-27
# ::node	0.0.0.0.1.0	access-01	23-24
# ::node	0.0.0.0.1.0.0	less	27-28
# ::node	0.0.0.0.1.0.1	less	24-25
# ::node	0.0.0.0.1.0.1.0	comprehensive	25-26
# ::node	0.0.0.0.1.0.2	news	21-22
# ::node	0.0.0.0.1.0.3	less	22-23
# ::node	0.0.0.0.2	particular	1-2
# ::node	0.0.1	exceed-01	16-17
# ::node	0.1	analyze-01	11-12
# ::root	0	emphasize-01
# ::edge	access-01	ARG0	less	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	access-01	ARG1	less	0.0.0.0.1.0	0.0.0.0.1.0.1	
# ::edge	access-01	ARG2	news	0.0.0.0.1.0	0.0.0.0.1.0.2	
# ::edge	access-01	degree	less	0.0.0.0.1.0	0.0.0.0.1.0.3	
# ::edge	and	op1	want-01	0.0.0.0.1	0.0.0.0	
# ::edge	and	op2	access-01	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	comprehensive	degree	less	0.0.0.0.1.0.1.0	0.0.0.0.1.0.1	
# ::edge	emphasize-01	ARG1	analyze-01	0	0.1	
# ::edge	lead-02	ARG0	emphasize-01	0.0	0	
# ::edge	lead-02	ARG2	exceed-01	0.0	0.0.1	
# ::edge	see-01	ARG1	lead-02	0.0.0	0.0	
# ::edge	want-01	ARG0	i	0.0.0.0	0.0.0.0.0	
# ::edge	want-01	ARG1	see-01	0.0.0.0	0.0.0	
# ::edge	want-01	prep-at	particular	0.0.0.0	0.0.0.0.2	
(e2 / emphasize-01 
      :ARG0-of (l4 / lead-02 
            :ARG1-of (s / see-01 
                  :ARG1-of (w / want-01 
                        :ARG0 (i / i) 
                        :op-of (a / and 
                              :op1 (a2 / access-01 
                                    :ARG0 (l / less) 
                                    :ARG1 (l2 / less 
                                          :degree-of (c / comprehensive)) 
                                    :ARG2 (n / news) 
                                    :degree (l3 / less))) 
                        :prep-at (p / particular))) 
            :ARG2 (e / exceed-01)) 
      :ARG1 (a3 / analyze-01))

# ::snt chingford the former tory party chairman asked if she would agree that the principle imbalance in eastern europe was between the excesses of socialism and a lack of capitalism
# ::tok chingford the former tory party chairman asked if she would agree that the principle imbalance in eastern europe was between the excesses of socialism and a lack of capitalism
# ::alignments 28-29|0.1.0 26-27|0.1 24-25|0 23-24|0.1.1 19-20|0.1.2 17-18|0.0.2.1.0.0.0.0+0.0.2.1.0.0.0+0.0.2.1.0.0 16-17|0.0.2.1.0 14-15|0.0.2.1 13-14|0.0.2.1.1 10-11|0.0 8-9|0.0.0 6-7|0.0.2 5-6|0.0.2.0+0.0.2.0.0 4-5|0.0.2.0.0.0 3-4|0.0.2.0.0.0.0.0.0+0.0.2.0.0.0.0.0+0.0.2.0.0.0.0 2-3|0.0.2.0.0.1 0-1|0.0.1.0.0+0.0.1.0+0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:29.158
# ::node	0	and	24-25
# ::node	0.0	agree-01	10-11
# ::node	0.0.0	she	8-9
# ::node	0.0.1	city-district	0-1
# ::node	0.0.1.0	name	0-1
# ::node	0.0.1.0.0	"Chingford"	0-1
# ::node	0.0.2	ask-02	6-7
# ::node	0.0.2.0	chairman	5-6
# ::node	0.0.2.0.0	have-org-role-91	5-6
# ::node	0.0.2.0.0.0	party	4-5
# ::node	0.0.2.0.0.0.0	political-party	3-4
# ::node	0.0.2.0.0.0.0.0	name	3-4
# ::node	0.0.2.0.0.0.0.0.0	"Tory"	3-4
# ::node	0.0.2.0.0.1	former	2-3
# ::node	0.0.2.1	imbalance	14-15
# ::node	0.0.2.1.0	east	16-17
# ::node	0.0.2.1.0.0	continent	17-18
# ::node	0.0.2.1.0.0.0	name	17-18
# ::node	0.0.2.1.0.0.0.0	"Europe"	17-18
# ::node	0.0.2.1.1	principle	13-14
# ::node	0.1	lack-01	26-27
# ::node	0.1.0	capitalism	28-29
# ::node	0.1.1	socialism	23-24
# ::node	0.1.2	between	19-20
# ::root	0	and
# ::edge	agree-01	ARG0	she	0.0	0.0.0	
# ::edge	agree-01	ARG1	and	0.0	0	
# ::edge	and	op1	lack-01	0	0.1	
# ::edge	ask-02	ARG0	chairman	0.0.2	0.0.2.0	
# ::edge	ask-02	ARG1	imbalance	0.0.2	0.0.2.1	
# ::edge	ask-02	time	agree-01	0.0.2	0.0	
# ::edge	between	op1	lack-01	0.1.2	0.1	
# ::edge	city-district	concession	agree-01	0.0.1	0.0	
# ::edge	city-district	name	name	0.0.1	0.0.1.0	
# ::edge	continent	mod	east	0.0.2.1.0.0	0.0.2.1.0	
# ::edge	continent	name	name	0.0.2.1.0.0	0.0.2.1.0.0.0	
# ::edge	have-org-role-91	ARG1	party	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	have-org-role-91	ARG2	chairman	0.0.2.0.0	0.0.2.0	
# ::edge	have-org-role-91	time	former	0.0.2.0.0	0.0.2.0.0.1	
# ::edge	imbalance	location	east	0.0.2.1	0.0.2.1.0	
# ::edge	imbalance	mod	principle	0.0.2.1	0.0.2.1.1	
# ::edge	lack-01	ARG1	capitalism	0.1	0.1.0	
# ::edge	lack-01	location	socialism	0.1	0.1.1	
# ::edge	name	op1	"Chingford"	0.0.1.0	0.0.1.0.0	
# ::edge	name	op1	"Europe"	0.0.2.1.0.0.0	0.0.2.1.0.0.0.0	
# ::edge	name	op1	"Tory"	0.0.2.0.0.0.0.0	0.0.2.0.0.0.0.0.0	
# ::edge	party	mod	political-party	0.0.2.0.0.0	0.0.2.0.0.0.0	
# ::edge	political-party	name	name	0.0.2.0.0.0.0	0.0.2.0.0.0.0.0	
(a / and 
      :ARG1-of (a2 / agree-01 
            :ARG0 (s2 / she) 
            :concession-of (c4 / city-district 
                  :name (n3 / name 
                        :op1 "Chingford")) 
            :time-of (a3 / ask-02 
                  :ARG0 (c3 / chairman 
                        :ARG2-of (h / have-org-role-91 
                              :ARG1 (p2 / party 
                                    :mod (p3 / political-party 
                                          :name (n2 / name 
                                                :op1 "Tory"))) 
                              :time (f / former))) 
                  :ARG1 (i / imbalance 
                        :location (e / east 
                              :mod-of (c2 / continent 
                                    :name (n / name 
                                          :op1 "Europe"))) 
                        :mod (p / principle)))) 
      :op1 (l / lack-01 
            :ARG1 (c / capitalism) 
            :location (s / socialism) 
            :op-of (b / between)))

# ::snt at the same time it had to demonstrate that it had come a long way from the divisions and excesses of revolutionary fervour
# ::tok at the same time it had to demonstrate that it had come a long way from the divisions and excesses of revolutionary fervour
# ::alignments 21-22|0.2.2.0.0 18-19|0 17-18|0.1 14-15|0.0 9-10|0.2.1 7-8|0.2 4-5|0.2.0 3-4|0.2.2 2-3|0.2.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:29.370
# ::node	0	and	18-19
# ::node	0.0	way	14-15
# ::node	0.1	division	17-18
# ::node	0.2	demonstrate-01	7-8
# ::node	0.2.0	it	4-5
# ::node	0.2.1	it	9-10
# ::node	0.2.2	time	3-4
# ::node	0.2.2.0	same-41	2-3
# ::node	0.2.2.0.0	revolution	21-22
# ::root	0	and
# ::edge	and	op1	way	0	0.0	
# ::edge	and	op2	division	0	0.1	
# ::edge	demonstrate-01	ARG0	it	0.2	0.2.0	
# ::edge	demonstrate-01	ARG1	it	0.2	0.2.1	
# ::edge	demonstrate-01	time	and	0.2	0	
# ::edge	same-41	ARG0	revolution	0.2.2.0	0.2.2.0.0	
# ::edge	same-41	ARG1	time	0.2.2.0	0.2.2	
# ::edge	time	purpose	demonstrate-01	0.2.2	0.2	
(a / and 
      :op1 (w / way) 
      :op2 (d / division) 
      :time-of (d2 / demonstrate-01 
            :ARG0 (i2 / it) 
            :ARG1 (i / it) 
            :purpose-of (t / time 
                  :ARG1-of (s / same-41 
                        :ARG0 (r / revolution)))))

# ::snt his sense of natural justice and his outrage at the excesses of privilege went hand in hand
# ::tok his sense of natural justice and his outrage at the excesses of privilege went hand in hand
# ::alignments 16-17|0.0.0.1 14-15|0.0.0.2 12-13|0 7-8|0.0 5-6|0.0.0 4-5|0.0.1 3-4|0.0.1.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:29.453
# ::node	0	privilege-01	12-13
# ::node	0.0	outrage-01	7-8
# ::node	0.0.0	and	5-6
# ::node	0.0.0.0	sense	1-2
# ::node	0.0.0.1	hand	16-17
# ::node	0.0.0.2	hand	14-15
# ::node	0.0.1	justice	4-5
# ::node	0.0.1.0	natural	3-4
# ::root	0	privilege-01
(p / privilege-01 
      :ARG1-of (o / outrage-01 
            :op-of (a / and 
                  :op1 (s / sense) 
                  :poss-of (h / hand) 
                  :poss-of (h2 / hand)) 
            :source (j / justice 
                  :mod (n / natural))))

# ::snt actually if he were allowed out into sweden what might impress him is not the absence of democracy but the excess of it
# ::tok actually if he were allowed out into sweden what might impress him is not the absence of democracy but the excess of it
# ::alignments 22-23|0.0.1.1 20-21|0.0.1 18-19|0 17-18|0.0.0 15-16|0.0 4-5|0.0.2 2-3|0.0.2.0 0-1|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:29.533
# ::node	0	contrast-01	18-19
# ::node	0.0	absent-01	15-16
# ::node	0.0.0	democracy	17-18
# ::node	0.0.1	exceed-01	20-21
# ::node	0.0.1.0	actual	0-1
# ::node	0.0.1.1	it	22-23
# ::node	0.0.2	allow-01	4-5
# ::node	0.0.2.0	he	2-3
# ::root	0	contrast-01
# ::edge	absent-01	ARG1	democracy	0.0	0.0.0	
# ::edge	allow-01	ARG1	he	0.0.2	0.0.2.0	
# ::edge	allow-01	ARG2	absent-01	0.0.2	0.0	
# ::edge	contrast-01	ARG1	absent-01	0	0.0	
# ::edge	exceed-01	ARG0	actual	0.0.1	0.0.1.0	
# ::edge	exceed-01	ARG1	absent-01	0.0.1	0.0	
# ::edge	exceed-01	prep-in	it	0.0.1	0.0.1.1	
(c / contrast-01 
      :ARG1 (a / absent-01 
            :ARG1 (d / democracy) 
            :ARG1-of (e / exceed-01 
                  :ARG0 (a3 / actual) 
                  :prep-in (i / it)) 
            :ARG2-of (a2 / allow-01 
                  :ARG1 (h / he))))

# ::snt but how many helmsleys stop just short of her fatal excess
# ::tok but how many helmsleys stop just short of her fatal excess
# ::alignments 10-11|0.0.1.0 9-10|0.0.1.0.0 6-7|0.0.1 5-6|0.0.2 4-5|0.0 2-3|0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:29.567
# ::node	0	contrast-01	0-1
# ::node	0.0	stop-01	4-5
# ::node	0.0.0	many	2-3
# ::node	0.0.1	short	6-7
# ::node	0.0.1.0	exceed-01	10-11
# ::node	0.0.1.0.0	fatal	9-10
# ::node	0.0.2	just	5-6
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	stop-01	0	0.0	
# ::edge	exceed-01	mod	fatal	0.0.1.0	0.0.1.0.0	
# ::edge	short	time	exceed-01	0.0.1	0.0.1.0	
# ::edge	stop-01	ARG1	many	0.0	0.0.0	
# ::edge	stop-01	ARG2	short	0.0	0.0.1	
# ::edge	stop-01	mod	just	0.0	0.0.2	
(c / contrast-01 
      :ARG1 (s2 / stop-01 
            :ARG1 (m / many) 
            :ARG2 (s / short 
                  :time (e / exceed-01 
                        :mod (f / fatal))) 
            :mod (j / just)))

# ::snt after more discussion the papers were returned with an excess of formality and the augmented convoy was waved on its way
# ::tok after more discussion the papers were returned with an excess of formality and the augmented convoy was waved on its way
# ::alignments 20-21|0.2.0 17-18|0.2 15-16|0.1 14-15|0.1.0 12-13|0 9-10|0.0 6-7|0.0.0 4-5|0.0.0.0 2-3|0.0.0.1 0-1|0.2.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:29.753
# ::node	0	and	12-13
# ::node	0.0	exceed-01	9-10
# ::node	0.0.0	return-01	6-7
# ::node	0.0.0.0	paper	4-5
# ::node	0.0.0.1	discuss-01	2-3
# ::node	0.1	convoy	15-16
# ::node	0.1.0	augment-01	14-15
# ::node	0.2	wave-01	17-18
# ::node	0.2.0	way	20-21
# ::node	0.2.1	after	0-1
# ::root	0	and
# ::edge	after	op1	wave-01	0.2.1	0.2	
# ::edge	and	op1	convoy	0	0.1	
# ::edge	and	op2	wave-01	0	0.2	
# ::edge	augment-01	ARG1	convoy	0.1.0	0.1	
# ::edge	discuss-01	ARG1	return-01	0.0.0.1	0.0.0	
# ::edge	exceed-01	ARG1	and	0.0	0	
# ::edge	return-01	ARG1	paper	0.0.0	0.0.0.0	
# ::edge	return-01	ARG3	exceed-01	0.0.0	0.0	
# ::edge	wave-01	ARG1	way	0.2	0.2.0	
(a2 / and 
      :ARG1-of (e / exceed-01 
            :ARG3-of (r / return-01 
                  :ARG1 (p / paper) 
                  :ARG1-of (d / discuss-01))) 
      :op1 (c / convoy 
            :ARG1-of (a / augment-01)) 
      :op2 (w2 / wave-01 
            :ARG1 (w / way) 
            :op-of (a3 / after)))

# ::snt it might avoid the worst excesses but is no more likely than the present system to lead to justice in the particular case
# ::tok it might avoid the worst excesses but is no more likely than the present system to lead to justice in the particular case
# ::alignments 22-23|0.0 21-22|0.0.0 18-19|0.0.1 14-15|0.2.0 13-14|0.2.0.0 10-11|0.2 8-9|0.1.1 6-7|0 4-5|0.1.2 2-3|0.1 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:29.859
# ::node	0	contrast-01	6-7
# ::node	0.0	case	22-23
# ::node	0.0.0	particular	21-22
# ::node	0.0.1	justice	18-19
# ::node	0.1	avoid-01	2-3
# ::node	0.1.0	it	0-1
# ::node	0.1.1	-	8-9
# ::node	0.1.2	bad	4-5
# ::node	0.2	likely	10-11
# ::node	0.2.0	system	14-15
# ::node	0.2.0.0	present	13-14
# ::root	0	contrast-01
# ::edge	avoid-01	ARG0	it	0.1	0.1.0	
# ::edge	avoid-01	ARG1	-	0.1	0.1.1	
# ::edge	bad	op1	avoid-01	0.1.2	0.1	
# ::edge	case	mod	particular	0.0	0.0.0	
# ::edge	case	quant	justice	0.0	0.0.1	
# ::edge	contrast-01	ARG0	case	0	0.0	
# ::edge	contrast-01	ARG1	avoid-01	0	0.1	
# ::edge	contrast-01	ARG2	likely	0	0.2	
# ::edge	likely	topic	system	0.2	0.2.0	
# ::edge	system	time	present	0.2.0	0.2.0.0	
(c2 / contrast-01 
      :ARG0 (c / case 
            :mod (p / particular) 
            :quant (j / justice)) 
      :ARG1 (a / avoid-01 
            :ARG0 (i / it) 
            :ARG1 (- / -) 
            :op-of (b / bad)) 
      :ARG2 (l / likely 
            :topic (s / system 
                  :time (p2 / present))))

# ::snt   although kings made sporadic efforts to reform to purge and reorganize again ultimately only the nineteenth century brought the abundance which permitted a system to organize the state and curb some of the worst excesses
# ::tok although kings made sporadic efforts to reform to purge and reorganize again ultimately only the nineteenth century brought the abundance which permitted a system to organize the state and curb some of the worst excesses
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:29.860
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt all bills will then be dealt with direct by the insurers and you just have to pay the excess
# ::tok all bills will then be dealt with direct by the insurers and you just have to pay the excess
# ::alignments 18-19|0.0.0.0 16-17|0.0.0.1 13-14|0.0.0.1.0 12-13|0.0.0 11-12|0 7-8|0.0.2 5-6|0.0 3-4|0.0.3 1-2|0.0.1 0-1|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:29.968
# ::node	0	and	11-12
# ::node	0.0	deal-01	5-6
# ::node	0.0.0	you	12-13
# ::node	0.0.0.0	exceed-01	18-19
# ::node	0.0.0.1	pay-01	16-17
# ::node	0.0.0.1.0	just	13-14
# ::node	0.0.1	bill-01	1-2
# ::node	0.0.1.0	all	0-1
# ::node	0.0.2	direct	7-8
# ::node	0.0.3	then	3-4
# ::root	0	and
# ::edge	and	op1	deal-01	0	0.0	
# ::edge	bill-01	quant	all	0.0.1	0.0.1.0	
# ::edge	deal-01	ARG0	you	0.0	0.0.0	
# ::edge	deal-01	ARG1	bill-01	0.0	0.0.1	
# ::edge	deal-01	manner	direct	0.0	0.0.2	
# ::edge	deal-01	time	then	0.0	0.0.3	
# ::edge	exceed-01	ARG0	you	0.0.0.0	0.0.0	
# ::edge	pay-01	ARG0	you	0.0.0.1	0.0.0	
# ::edge	pay-01	mod	just	0.0.0.1	0.0.0.1.0	
(a / and 
      :op1 (d2 / deal-01 
            :ARG0 (y / you 
                  :ARG0-of (e / exceed-01) 
                  :ARG0-of (p / pay-01 
                        :mod (j / just))) 
            :ARG1 (b / bill-01 
                  :quant (a2 / all)) 
            :manner (d / direct) 
            :time (t / then)))

# ::snt tyson is so completely the world heavyweight champion so convincingly one of the most dramatic figures ever to inhabit professional boxing that his excesses are bound to be regarded as conclusive proof of something more potentially terminal than any hazards he is likely to encounter in the ring
# ::tok tyson is so completely the world heavyweight champion so convincingly one of the most dramatic figures ever to inhabit professional boxing that his excesses are bound to be regarded as conclusive proof of something more potentially terminal than any hazards he is likely to encounter in the ring
# ::alignments 47-48|0.0.2.1 44-45|0.0.2 42-43|0.0.2.2 40-41|0.0.2.0 38-39|0.0.3 36-37|0.2.0 35-36|0.2.0.0 33-34|0.2 31-32|0 30-31|0.1 28-29|0.0 20-21|0.0.1 19-20|0.0.1.0 16-17|0.0.0.3 15-16|0.1.0.0 14-15|0.1.0.0.0 13-14|0.1.0.0.0.0 9-10|0.1.0 8-9|0.1.0.1 7-8|0.0.0 6-7|0.0.0.0 5-6|0.0.0.1 3-4|0.0.0.2 2-3|0.0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:30.798
# ::node	0	proof	31-32
# ::node	0.0	regard-01	28-29
# ::node	0.0.0	champion	7-8
# ::node	0.0.0.0	heavyweight	6-7
# ::node	0.0.0.1	world	5-6
# ::node	0.0.0.2	complete	3-4
# ::node	0.0.0.2.0	so	2-3
# ::node	0.0.0.3	ever	16-17
# ::node	0.0.1	boxing	20-21
# ::node	0.0.1.0	professional	19-20
# ::node	0.0.2	encounter-01	44-45
# ::node	0.0.2.0	he	40-41
# ::node	0.0.2.1	ring	47-48
# ::node	0.0.2.2	likely	42-43
# ::node	0.0.3	any	38-39
# ::node	0.1	conclusive	30-31
# ::node	0.1.0	convince-01	9-10
# ::node	0.1.0.0	figure	15-16
# ::node	0.1.0.0.0	dramatic	14-15
# ::node	0.1.0.0.0.0	most	13-14
# ::node	0.1.0.1	so	8-9
# ::node	0.2	something	33-34
# ::node	0.2.0	terminal	36-37
# ::node	0.2.0.0	potential	35-36
# ::root	0	proof
# ::edge	any	op1	regard-01	0.0.3	0.0	
# ::edge	boxing	mod	professional	0.0.1	0.0.1.0	
# ::edge	champion	mod	heavyweight	0.0.0	0.0.0.0	
# ::edge	champion	mod	world	0.0.0	0.0.0.1	
# ::edge	champion	quant	complete	0.0.0	0.0.0.2	
# ::edge	champion	time	ever	0.0.0	0.0.0.3	
# ::edge	complete	degree	so	0.0.0.2	0.0.0.2.0	
# ::edge	convince-01	ARG0	conclusive	0.1.0	0.1	
# ::edge	convince-01	ARG1	figure	0.1.0	0.1.0.0	
# ::edge	convince-01	manner	so	0.1.0	0.1.0.1	
# ::edge	dramatic	degree	most	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	encounter-01	ARG0	he	0.0.2	0.0.2.0	
# ::edge	encounter-01	ARG1	ring	0.0.2	0.0.2.1	
# ::edge	encounter-01	ARG2	regard-01	0.0.2	0.0	
# ::edge	figure	quant	dramatic	0.1.0.0	0.1.0.0.0	
# ::edge	likely	domain	encounter-01	0.0.2.2	0.0.2	
# ::edge	proof	mod	conclusive	0	0.1	
# ::edge	proof	mod	something	0	0.2	
# ::edge	regard-01	ARG0	champion	0.0	0.0.0	
# ::edge	regard-01	ARG1	boxing	0.0	0.0.1	
# ::edge	regard-01	ARG2	proof	0.0	0	
# ::edge	something	mod	terminal	0.2	0.2.0	
# ::edge	terminal	mod	potential	0.2.0	0.2.0.0	
(p2 / proof 
      :ARG2-of (r2 / regard-01 
            :ARG0 (c3 / champion 
                  :mod (h2 / heavyweight) 
                  :mod (w / world) 
                  :quant (c4 / complete 
                        :degree (s3 / so)) 
                  :time (e2 / ever)) 
            :ARG1 (b / boxing 
                  :mod (p3 / professional)) 
            :ARG2-of (e / encounter-01 
                  :ARG0 (h / he) 
                  :ARG1 (r / ring) 
                  :domain-of (l / likely)) 
            :op-of (a / any)) 
      :mod (c / conclusive 
            :ARG0-of (c2 / convince-01 
                  :ARG1 (f / figure 
                        :quant (d / dramatic 
                              :degree (m / most))) 
                  :manner (s2 / so))) 
      :mod (s / something 
            :mod (t / terminal 
                  :mod (p / potential))))

# ::snt the success rate at this time 1956 in producing prisoners with no subsequent reconvictions from open borstals was still well in excess of 50 per cent
# ::tok the success rate at this time 1956 in producing prisoners with no subsequent reconvictions from open borstals was still well in excess of 50 per cent
# ::alignments 25-26|0.0.3.0.0.0+0.0.3.0.0 23-24|0.0.3.0.2 21-22|0.0.3.0 19-20|0.0.3.0.1 18-19|0.0.3.0.1.0 12-13|0 11-12|0.0.0 8-9|0.0.1 6-7|0.0.1.0.0+0.0.1.0 5-6|0.0.2 4-5|0.0.2.0 2-3|0.0.3 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:31.084
# ::node	0	subsequent	12-13
# ::node	0.0	succeed-01	1-2
# ::node	0.0.0	-	11-12
# ::node	0.0.1	produce-01	8-9
# ::node	0.0.1.0	date-entity	6-7
# ::node	0.0.1.0.0	1956	6-7
# ::node	0.0.2	time	5-6
# ::node	0.0.2.0	this	4-5
# ::node	0.0.3	rate	2-3
# ::node	0.0.3.0	exceed-01	21-22
# ::node	0.0.3.0.0	monetary-quantity	25-26
# ::node	0.0.3.0.0.0	cent	25-26
# ::node	0.0.3.0.1	well	19-20
# ::node	0.0.3.0.1.0	still	18-19
# ::node	0.0.3.0.2	50	23-24
# ::root	0	subsequent
# ::edge	date-entity	year	1956	0.0.1.0	0.0.1.0.0	
# ::edge	exceed-01	ARG0	rate	0.0.3.0	0.0.3	
# ::edge	exceed-01	ARG1	monetary-quantity	0.0.3.0	0.0.3.0.0	
# ::edge	exceed-01	time	50	0.0.3.0	0.0.3.0.2	
# ::edge	exceed-01	time	well	0.0.3.0	0.0.3.0.1	
# ::edge	monetary-quantity	unit	cent	0.0.3.0.0	0.0.3.0.0.0	
# ::edge	produce-01	ARG0	succeed-01	0.0.1	0.0	
# ::edge	produce-01	ARG1	date-entity	0.0.1	0.0.1.0	
# ::edge	rate	mod	succeed-01	0.0.3	0.0	
# ::edge	subsequent	op1	succeed-01	0	0.0	
# ::edge	succeed-01	ARG0	-	0.0	0.0.0	
# ::edge	succeed-01	ARG1	time	0.0	0.0.2	
# ::edge	time	mod	this	0.0.2	0.0.2.0	
# ::edge	well	mod	still	0.0.3.0.1	0.0.3.0.1.0	
(s2 / subsequent 
      :op1 (s3 / succeed-01 
            :ARG0 (- / -) 
            :ARG0-of (p / produce-01 
                  :ARG1 (d / date-entity 
                        :year 1956)) 
            :ARG1 (t / time 
                  :mod (t2 / this)) 
            :mod-of (r / rate 
                  :ARG0-of (e / exceed-01 
                        :ARG1 (m / monetary-quantity 
                              :unit (c / cent)) 
                        :time (w / well 
                              :mod (s / still)) 
                        :time 50))))

# ::snt ballycastle is one of the more attractive seaside towns managing to avoid the excesses of other resorts and there are no end of guesthouses if you want to break your walk or use the town as a base
# ::tok ballycastle is one of the more attractive seaside towns managing to avoid the excesses of other resorts and there are no end of guesthouses if you want to break your walk or use the town as a base
# ::alignments 37-38|0.0.0.1.2 34-35|0.0.0.1.1 32-33|0.0.0.1 31-32|0.0.0.1.3 30-31|0.0.0.1.3.0.0.0 26-27|0.0.0.1.3.0 25-26|0.0.0.1.3.0.0 20-21|0.0.0.1.3.0.0.0.0 17-18|0 15-16|0.0.0.1.0 11-12|0.0.0 9-10|0.0 8-9|0.0.0.0 7-8|0.0.0.0.1 6-7|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:31.435
# ::node	0	and	17-18
# ::node	0.0	manage-01	9-10
# ::node	0.0.0	avoid-01	11-12
# ::node	0.0.0.0	town	8-9
# ::node	0.0.0.0.0	attract-01	6-7
# ::node	0.0.0.0.1	seaside	7-8
# ::node	0.0.0.1	use-01	32-33
# ::node	0.0.0.1.0	other	15-16
# ::node	0.0.0.1.1	town	34-35
# ::node	0.0.0.1.2	base	37-38
# ::node	0.0.0.1.3	or	31-32
# ::node	0.0.0.1.3.0	want-01	26-27
# ::node	0.0.0.1.3.0.0	you	25-26
# ::node	0.0.0.1.3.0.0.0	walk-01	30-31
# ::node	0.0.0.1.3.0.0.0.0	-	20-21
# ::root	0	and
(a / and 
      :ARG0-of (m / manage-01 
            :ARG1 (a2 / avoid-01 
                  :ARG0 (t2 / town 
                        :ARG0-of (a3 / attract-01) 
                        :mod (s / seaside)) 
                  :ARG1 (u / use-01 
                        :ARG0 (o2 / other) 
                        :ARG1 (t / town) 
                        :ARG2 (b / base) 
                        :op-of (o / or 
                              :ARG1-of (w2 / want-01 
                                    :ARG0 (y / you 
                                          :ARG1-of (w / walk-01 
                                                :ARG0 (- / -)))))))))

# ::snt in taxi driver all the trouble comes from the final release of bottledup sexual energy in american gigolo from an excess of sexual expertise where the orgasm dash
# ::tok in taxi driver all the trouble comes from the final release of bottledup sexual energy in american gigolo from an excess of sexual expertise where the orgasm dash
# ::alignments 26-27|0.0.0.0.2 23-24|0.0 22-23|0 20-21|0.0.0 16-17|0.0.0.0.0.0.0+0.0.0.0.0.0+0.0.0.0.0 14-15|0.0.0.0.1.0 13-14|0.0.0.0.1.0.0 10-11|0.0.0.0.1 9-10|0.0.0.0.1.1 5-6|0.0.0.0 3-4|0.0.0.0.4 2-3|0.0.0.0.3+0.0.0.0.3.0 1-2|0.0.0.0.3.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:31.800
# ::node	0	sexual	22-23
# ::node	0.0	expertise	23-24
# ::node	0.0.0	exceed-01	20-21
# ::node	0.0.0.0	trouble-01	5-6
# ::node	0.0.0.0.0	country	16-17
# ::node	0.0.0.0.0.0	name	16-17
# ::node	0.0.0.0.0.0.0	"America"	16-17
# ::node	0.0.0.0.1	release-01	10-11
# ::node	0.0.0.0.1.0	energy	14-15
# ::node	0.0.0.0.1.0.0	sexual	13-14
# ::node	0.0.0.0.1.1	final	9-10
# ::node	0.0.0.0.2	orgasm-00	26-27
# ::node	0.0.0.0.3	drive-01	2-3
# ::node	0.0.0.0.3.0	person	2-3
# ::node	0.0.0.0.3.1	taxi	1-2
# ::node	0.0.0.0.4	all	3-4
# ::root	0	sexual
(s / sexual 
      :mod-of (e / expertise 
            :ARG1-of (e2 / exceed-01 
                  :ARG2 (t / trouble-01 
                        :ARG1 (c / country 
                              :name (n / name 
                                    :op1 "America")) 
                        :ARG1-of (r / release-01 
                              :ARG2 (e3 / energy 
                                    :mod (s2 / sexual)) 
                              :mod (f / final)) 
                        :ARG1-of (o / orgasm-00) 
                        :frequency-of (d / drive-01 
                              :ARG0 (p / person) 
                              :ARG1 (t2 / taxi)) 
                        :quant (a / all)))))

# ::snt all those participating in the debate admit that both systems have in the past led to excesses
# ::tok all those participating in the debate admit that both systems have in the past led to excesses
# ::alignments 14-15|0.0.0.0 13-14|0.0.0.0.1 9-10|0.0.0.0.0 8-9|0.0.0.0.0.0 6-7|0.0.0 5-6|0.1 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:31.947
# ::node	0	participate-01	2-3
# ::node	0.0	all	0-1
# ::node	0.0.0	admit-01	6-7
# ::node	0.0.0.0	lead-02	14-15
# ::node	0.0.0.0.0	system	9-10
# ::node	0.0.0.0.0.0	both	8-9
# ::node	0.0.0.0.1	past	13-14
# ::node	0.1	debate-01	5-6
# ::root	0	participate-01
# ::edge	admit-01	ARG0	all	0.0.0	0.0	
# ::edge	admit-01	ARG1	lead-02	0.0.0	0.0.0.0	
# ::edge	lead-02	ARG0	system	0.0.0.0	0.0.0.0.0	
# ::edge	lead-02	time	past	0.0.0.0	0.0.0.0.1	
# ::edge	participate-01	ARG0	all	0	0.0	
# ::edge	participate-01	ARG1	debate-01	0	0.1	
# ::edge	system	mod	both	0.0.0.0.0	0.0.0.0.0.0	
(p2 / participate-01 
      :ARG0 (a2 / all 
            :ARG0-of (a / admit-01 
                  :ARG1 (l / lead-02 
                        :ARG0 (s / system 
                              :mod (b / both)) 
                        :time (p / past)))) 
      :ARG1 (d / debate-01))

# ::snt indeed a number of my acquaintances in universities have already been offered employment deals well in excess of their current salary
# ::tok indeed a number of my acquaintances in universities have already been offered employment deals well in excess of their current salary
# ::alignments 20-21|0.0.2.0 19-20|0.0.0.0 16-17|0.0.2 14-15|0.1 13-14|0.0 12-13|0.0.1 11-12|0 9-10|0.2 7-8|0.0.3 2-3|0.0.0 0-1|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:32.167
# ::node	0	offer-01	11-12
# ::node	0.0	deal-01	13-14
# ::node	0.0.0	number	2-3
# ::node	0.0.0.0	current	19-20
# ::node	0.0.0.1	indeed	0-1
# ::node	0.0.1	employment	12-13
# ::node	0.0.2	exceed-01	16-17
# ::node	0.0.2.0	salary	20-21
# ::node	0.0.3	university	7-8
# ::node	0.1	well	14-15
# ::node	0.2	already	9-10
# ::root	0	offer-01
# ::edge	current	domain	number	0.0.0.0	0.0.0	
# ::edge	deal-01	ARG0	number	0.0	0.0.0	
# ::edge	deal-01	ARG1	employment	0.0	0.0.1	
# ::edge	deal-01	ARG3	exceed-01	0.0	0.0.2	
# ::edge	deal-01	mod	university	0.0	0.0.3	
# ::edge	exceed-01	ARG1	salary	0.0.2	0.0.2.0	
# ::edge	number	mod	indeed	0.0.0	0.0.0.1	
# ::edge	offer-01	ARG1	deal-01	0	0.0	
# ::edge	offer-01	ARG2	well	0	0.1	
# ::edge	offer-01	mod	already	0	0.2	
(o / offer-01 
      :ARG1 (d / deal-01 
            :ARG0 (n / number 
                  :domain-of (c / current) 
                  :mod (i / indeed)) 
            :ARG1 (e2 / employment) 
            :ARG3 (e / exceed-01 
                  :ARG1 (s / salary)) 
            :mod (u / university)) 
      :ARG2 (w / well) 
      :mod (a / already))

# ::snt   compared to the excesses for which fleet street journos are traditionally noted chocolate addiction seems positively virtuous
# ::tok compared to the excesses for which fleet street journos are traditionally noted chocolate addiction seems positively virtuous
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:32.168
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt there was nothing of the picturesque or civic excess in these stations
# ::tok there was nothing of the picturesque or civic excess in these stations
# ::alignments 11-12|0.0.0 8-9|0.0 6-7|0 2-3|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:32.181
# ::node	0	or	6-7
# ::node	0.0	exceed-01	8-9
# ::node	0.0.0	station	11-12
# ::node	0.0.1	nothing	2-3
# ::root	0	or
# ::edge	exceed-01	ARG1	station	0.0	0.0.0	
# ::edge	nothing	accompanier	exceed-01	0.0.1	0.0	
# ::edge	or	op1	exceed-01	0	0.0	
(o / or 
      :op1 (e / exceed-01 
            :ARG1 (s / station) 
            :accompanier-of (n / nothing)))

# ::snt in that case it splits the excess equally with the investor
# ::tok in that case it splits the excess equally with the investor
# ::alignments 10-11|0+0.0 7-8|0.0.1 6-7|0.0.1.0 3-4|0.0.1.0.0 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:32.203
# ::node	0	invest-01	10-11
# ::node	0.0	person	10-11
# ::node	0.0.0	case	2-3
# ::node	0.0.1	equal	7-8
# ::node	0.0.1.0	exceed-01	6-7
# ::node	0.0.1.0.0	it	3-4
# ::root	0	invest-01
# ::edge	case	poss	person	0.0.0	0.0	
# ::edge	exceed-01	ARG0	it	0.0.1.0	0.0.1.0.0	
# ::edge	exceed-01	ARG1	equal	0.0.1.0	0.0.1	
# ::edge	invest-01	ARG0	person	0	0.0	
# ::edge	person	quant	equal	0.0	0.0.1	
(i / invest-01 
      :ARG0 (p / person 
            :poss-of (c / case) 
            :quant (e / equal 
                  :ARG1-of (e2 / exceed-01 
                        :ARG0 (i2 / it)))))

# ::snt will the misogynist and queerbashing excesses of the british press remain fair comment
# ::tok will the misogynist and queerbashing excesses of the british press remain fair comment
# ::alignments 12-13|0 11-12|0.0.0.1 10-11|0.0.0 9-10|0.0.0.0 3-4|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:32.242
# ::node	0	comment-01	12-13
# ::node	0.0	and	3-4
# ::node	0.0.0	remain-01	10-11
# ::node	0.0.0.0	press	9-10
# ::node	0.0.0.1	fair	11-12
# ::root	0	comment-01
# ::edge	comment-01	ARG0	and	0	0.0	
# ::edge	remain-01	ARG0	press	0.0.0	0.0.0.0	
# ::edge	remain-01	ARG1	and	0.0.0	0.0	
# ::edge	remain-01	ARG2	fair	0.0.0	0.0.0.1	
(c / comment-01 
      :ARG0 (a / and 
            :ARG1-of (r / remain-01 
                  :ARG0 (p / press) 
                  :ARG2 (f / fair))))

# ::snt the dazzle of numbers in excess of seven can be mitigated by grouping procedures
# ::tok the dazzle of numbers in excess of seven can be mitigated by grouping procedures
# ::alignments 13-14|0.0.0 12-13|0.0 8-9|0 7-8|0.0.1.0.0 5-6|0.0.1 3-4|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:32.278
# ::node	0	possible	8-9
# ::node	0.0	group-01	12-13
# ::node	0.0.0	procedure	13-14
# ::node	0.0.1	exceed-01	5-6
# ::node	0.0.1.0	number	3-4
# ::node	0.0.1.0.0	7	7-8
# ::root	0	possible
(p2 / possible 
      :ARG0-of (g / group-01 
            :ARG1 (p / procedure) 
            :ARG1-of (e / exceed-01 
                  :quant (n / number 
                        :time 7))))

# ::snt but the beauxarts was a relatively shortlived fad and not even its excesses could drive other styles out
# ::tok but the beauxarts was a relatively shortlived fad and not even its excesses could drive other styles out
# ::alignments 15-16|0.1.0.0 14-15|0.1.0 13-14|0.1.0.1 8-9|0.1 5-6|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:32.303
# ::node	0	contrast-01	0-1
# ::node	0.0	relative	5-6
# ::node	0.1	and	8-9
# ::node	0.1.0	drive-01	14-15
# ::node	0.1.0.0	other	15-16
# ::node	0.1.0.1	possible	13-14
# ::root	0	contrast-01
# ::edge	and	op1	drive-01	0.1	0.1.0	
# ::edge	contrast-01	ARG1	relative	0	0.0	
# ::edge	contrast-01	ARG2	and	0	0.1	
# ::edge	drive-01	ARG1	other	0.1.0	0.1.0.0	
# ::edge	possible	domain	drive-01	0.1.0.1	0.1.0	
(c / contrast-01 
      :ARG1 (r / relative) 
      :ARG2 (a / and 
            :op1 (d / drive-01 
                  :ARG1 (o / other) 
                  :domain-of (p / possible))))

# ::snt for numbers in excess of 49 therefore it is usually necessary to group the groups
# ::tok for numbers in excess of 49 therefore it is usually necessary to group the groups
# ::alignments 14-15|0 12-13|0.0.0 9-10|0.0.1.1 7-8|0.0.1.0 5-6|0.0.2 3-4|0.0.1 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:32.351
# ::node	0	group	14-15
# ::node	0.0	number	1-2
# ::node	0.0.0	group	12-13
# ::node	0.0.1	exceed-01	3-4
# ::node	0.0.1.0	it	7-8
# ::node	0.0.1.1	usual	9-10
# ::node	0.0.2	49	5-6
# ::root	0	group
(g / group 
      :poss-of (n / number 
            :poss (g2 / group) 
            :quant-of (e / exceed-01 
                  :ARG2 (i / it) 
                  :op-of (u / usual)) 
            :time 49))

# ::snt it had not been a happy marriage and he often thought that an excess of emotions was at the root of it
# ::tok it had not been a happy marriage and he often thought that an excess of emotions was at the root of it
# ::alignments 21-22|0.0.0 19-20|0.0.1.0.0.0.0 15-16|0 13-14|0.0 10-11|0.0.1.0 9-10|0.0.1.0.2 8-9|0.0.1.0.0 7-8|0.0.1 6-7|0.0.1.0.0.0 5-6|0.0.1.0.0.0.1 0-1|0.0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:32.458
# ::node	0	emotion	15-16
# ::node	0.0	exceed-01	13-14
# ::node	0.0.0	it	21-22
# ::node	0.0.1	and	7-8
# ::node	0.0.1.0	think-01	10-11
# ::node	0.0.1.0.0	he	8-9
# ::node	0.0.1.0.0.0	marry-01	6-7
# ::node	0.0.1.0.0.0.0	root	19-20
# ::node	0.0.1.0.0.0.1	happy	5-6
# ::node	0.0.1.0.1	it	0-1
# ::node	0.0.1.0.2	often	9-10
# ::root	0	emotion
(e / emotion 
      :ARG1-of (e2 / exceed-01 
            :ARG0 (i / it) 
            :op-of (a / and 
                  :op1 (t / think-01 
                        :ARG0 (h / he 
                              :ARG1-of (m / marry-01 
                                    :ARG0 (r / root) 
                                    :mod (h2 / happy))) 
                        :ARG1 (i2 / it) 
                        :frequency (o / often)))))

# ::snt only amounts in excess of this 2 will be surcharged together with an amount to cover agents commission
# ::tok only amounts in excess of this 2 will be surcharged together with an amount to cover agents commission
# ::alignments 17-18|0.0 16-17|0 13-14|0.1.1 10-11|0.1.0 6-7|0.1.3 5-6|0.2 3-4|0.1 1-2|0.1.2 0-1|0.1.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:32.517
# ::node	0	agent	16-17
# ::node	0.0	commission	17-18
# ::node	0.1	exceed-01	3-4
# ::node	0.1.0	together	10-11
# ::node	0.1.1	amount	13-14
# ::node	0.1.2	amount	1-2
# ::node	0.1.2.0	only	0-1
# ::node	0.1.3	2	6-7
# ::node	0.2	this	5-6
# ::root	0	agent
# ::edge	agent	op1	exceed-01	0	0.1	
# ::edge	agent	poss	this	0	0.2	
# ::edge	amount	mod	only	0.1.2	0.1.2.0	
# ::edge	commission	mod	agent	0.0	0	
# ::edge	exceed-01	ARG0	together	0.1	0.1.0	
# ::edge	exceed-01	ARG1	amount	0.1	0.1.1	
# ::edge	exceed-01	quant	amount	0.1	0.1.2	
# ::edge	exceed-01	time	2	0.1	0.1.3	
(a / agent 
      :mod-of (c / commission) 
      :op1 (e / exceed-01 
            :ARG0 (t / together) 
            :ARG1 (a2 / amount) 
            :quant (a3 / amount 
                  :mod (o / only)) 
            :time 2) 
      :poss (t2 / this))

# ::snt it was stated that the difference between the two points was in excess of 20 yards when in fact it was more than 10 times that distance
# ::tok it was stated that the difference between the two points was in excess of 20 yards when in fact it was more than 10 times that distance
# ::alignments 26-27|0.0.0.0 23-24|0.2 19-20|0.0.0.0.0 18-19|0.0.0.0.1 15-16|0.0.0.1 14-15|0.0.0.1.0 12-13|0.0.0 9-10|0.0.1.0 8-9|0.0.1.0.0 6-7|0.0.1 5-6|0.0 2-3|0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:32.789
# ::node	0	state-01	2-3
# ::node	0.0	differ-02	5-6
# ::node	0.0.0	exceed-01	12-13
# ::node	0.0.0.0	distance-01	26-27
# ::node	0.0.0.0.0	it	19-20
# ::node	0.0.0.0.1	fact	18-19
# ::node	0.0.0.1	yard	15-16
# ::node	0.0.0.1.0	20	14-15
# ::node	0.0.1	between	6-7
# ::node	0.0.1.0	point	9-10
# ::node	0.0.1.0.0	2	8-9
# ::node	0.1	it	0-1
# ::node	0.2	10	23-24
# ::root	0	state-01
# ::edge	between	op1	point	0.0.1	0.0.1.0	
# ::edge	differ-02	ARG1	exceed-01	0.0	0.0.0	
# ::edge	differ-02	location	between	0.0	0.0.1	
# ::edge	distance-01	ARG0	it	0.0.0.0	0.0.0.0.0	
# ::edge	distance-01	ARG1	fact	0.0.0.0	0.0.0.0.1	
# ::edge	exceed-01	ARG1	distance-01	0.0.0	0.0.0.0	
# ::edge	exceed-01	ARG2	yard	0.0.0	0.0.0.1	
# ::edge	point	quant	2	0.0.1.0	0.0.1.0.0	
# ::edge	state-01	ARG0	differ-02	0	0.0	
# ::edge	state-01	ARG1	it	0	0.1	
# ::edge	state-01	ARG2	10	0	0.2	
# ::edge	yard	quant	20	0.0.0.1	0.0.0.1.0	
(s / state-01 
      :ARG0 (d2 / differ-02 
            :ARG1 (e / exceed-01 
                  :ARG1 (d / distance-01 
                        :ARG0 (i / it) 
                        :ARG1 (f / fact)) 
                  :ARG2 (y / yard 
                        :quant 20)) 
            :location (b / between 
                  :op1 (p / point 
                        :quant 2))) 
      :ARG1 (i2 / it) 
      :ARG2 10)

# ::snt inception of insurance section a from time of payment of premium section b from day of planned departure excesses section a excludes the first 15 of each and every loss of deposit claim and 25 in respect of all other claims
# ::tok inception of insurance section a from time of payment of premium section b from day of planned departure excesses section a excludes the first 15 of each and every loss of deposit claim and 25 in respect of all other claims
# ::alignments 40-41|0.2.3.0 39-40|0.2.3.0.1 38-39|0.2.3.0.2 36-37|0.2.3 34-35|0.3.0.0 33-34|0.3 32-33|0 31-32|0.0 28-29|0.2.3.0.0 27-28|0.2 26-27|0.2.2 24-25|0.2.1.0 19-20|0.3.1 17-18|0.2.0 16-17|0.3.0 14-15|0.3.2 12-13|0.0.0 11-12|0.1 6-7|0.2.1.1 3-4|0.2.1.2 2-3|0.2.1 0-1|0.2.1.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:33.353
# ::node	0	claim-01	32-33
# ::node	0.0	deposit-01	31-32
# ::node	0.0.0	b	12-13
# ::node	0.1	section	11-12
# ::node	0.2	and	27-28
# ::node	0.2.0	depart-01	17-18
# ::node	0.2.1	insure-02	2-3
# ::node	0.2.1.0	15	24-25
# ::node	0.2.1.1	time	6-7
# ::node	0.2.1.2	section	3-4
# ::node	0.2.1.2.0	inception-00	0-1
# ::node	0.2.2	each	26-27
# ::node	0.2.3	respect-01	36-37
# ::node	0.2.3.0	claim-01	40-41
# ::node	0.2.3.0.0	every	28-29
# ::node	0.2.3.0.1	other	39-40
# ::node	0.2.3.0.2	all	38-39
# ::node	0.3	and	33-34
# ::node	0.3.0	plan-01	16-17
# ::node	0.3.0.0	25	34-35
# ::node	0.3.1	section	19-20
# ::node	0.3.2	day	14-15
# ::root	0	claim-01
# ::edge	and	op1	day	0.3	0.3.2	
# ::edge	and	op1	insure-02	0.2	0.2.1	
# ::edge	and	op2	claim-01	0.3	0	
# ::edge	and	op2	each	0.2	0.2.2	
# ::edge	and	op3	claim-01	0.2	0	
# ::edge	and	op4	respect-01	0.2	0.2.3	
# ::edge	claim-01	ARG0	deposit-01	0	0.0	
# ::edge	claim-01	ARG1	every	0.2.3.0	0.2.3.0.0	
# ::edge	claim-01	ARG1	section	0	0.1	
# ::edge	claim-01	mod	all	0.2.3.0	0.2.3.0.2	
# ::edge	claim-01	mod	other	0.2.3.0	0.2.3.0.1	
# ::edge	depart-01	ARG0	and	0.2.0	0.2	
# ::edge	deposit-01	ARG1	b	0.0	0.0.0	
# ::edge	inception-00	ARG1	section	0.2.1.2.0	0.2.1.2	
# ::edge	insure-02	ARG0	15	0.2.1	0.2.1.0	
# ::edge	insure-02	ARG1	time	0.2.1	0.2.1.1	
# ::edge	plan-01	ARG0	25	0.3.0	0.3.0.0	
# ::edge	plan-01	ARG1	and	0.3.0	0.3	
# ::edge	respect-01	ARG1	claim-01	0.2.3	0.2.3.0	
# ::edge	section	mod	insure-02	0.2.1.2	0.2.1	
# ::edge	section	op1	and	0.3.1	0.3	
(c2 / claim-01 
      :ARG0 (d / deposit-01 
            :ARG1 (b / b)) 
      :ARG1 (s2 / section) 
      :op-of (a3 / and 
            :ARG0-of (d2 / depart-01) 
            :op1 (i / insure-02 
                  :ARG0 15 
                  :ARG1 (t / time) 
                  :mod-of (s3 / section 
                        :ARG1-of (i2 / inception-00))) 
            :op2 (e2 / each) 
            :op3 (r / respect-01 
                  :ARG1 (c / claim-01 
                        :ARG1 (e / every) 
                        :mod (o / other) 
                        :mod (a / all)))) 
      :op-of (a2 / and 
            :ARG1-of (p / plan-01 
                  :ARG0 25) 
            :op-of (s / section) 
            :op1 (d3 / day)))

# ::snt for the most part however legislative intervention has been not to expand but to limit liability to counteract the excesses of judicial activism
# ::tok for the most part however legislative intervention has been not to expand but to limit liability to counteract the excesses of judicial activism
# ::alignments 21-22|0.0.0.1 17-18|0.0.1.1 15-16|0.0.1.0 14-15|0.0.1 12-13|0 11-12|0.0 6-7|0.0.0 5-6|0.0.0.0 2-3|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:33.431
# ::node	0	contrast-01	12-13
# ::node	0.0	expand-01	11-12
# ::node	0.0.0	intervene-01	6-7
# ::node	0.0.0.0	legislate-01	5-6
# ::node	0.0.0.0.0	most	2-3
# ::node	0.0.0.1	judicial	21-22
# ::node	0.0.1	limit-01	14-15
# ::node	0.0.1.0	liability	15-16
# ::node	0.0.1.1	counteract-01	17-18
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	expand-01	0	0.0	
# ::edge	expand-01	ARG0	intervene-01	0.0	0.0.0	
# ::edge	expand-01	ARG1	limit-01	0.0	0.0.1	
# ::edge	intervene-01	ARG1	judicial	0.0.0	0.0.0.1	
# ::edge	legislate-01	ARG0	intervene-01	0.0.0.0	0.0.0	
# ::edge	legislate-01	ARG1	most	0.0.0.0	0.0.0.0.0	
# ::edge	limit-01	ARG1	liability	0.0.1	0.0.1.0	
# ::edge	limit-01	ARG2	counteract-01	0.0.1	0.0.1.1	
(c2 / contrast-01 
      :ARG1 (e / expand-01 
            :ARG0 (i / intervene-01 
                  :ARG0-of (l3 / legislate-01 
                        :ARG1 (m / most)) 
                  :ARG1 (j / judicial)) 
            :ARG1 (l2 / limit-01 
                  :ARG1 (l / liability) 
                  :ARG2 (c / counteract-01))))

# ::snt puzzling and fretting not truly provoking it indulges in an excess of epistemological pretension
# ::tok puzzling and fretting not truly provoking it indulges in an excess of epistemological pretension
# ::alignments 10-11|0.0.0.0 6-7|0.0.0 5-6|0.0 4-5|0.0.1 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:33.448
# ::node	0	and	1-2
# ::node	0.0	provoke-01	5-6
# ::node	0.0.0	it	6-7
# ::node	0.0.0.0	exceed-01	10-11
# ::node	0.0.1	truly	4-5
# ::root	0	and
# ::edge	and	op1	provoke-01	0	0.0	
# ::edge	exceed-01	ARG1	it	0.0.0.0	0.0.0	
# ::edge	provoke-01	ARG0	it	0.0	0.0.0	
# ::edge	provoke-01	ARG1	truly	0.0	0.0.1	
(a / and 
      :op1 (p / provoke-01 
            :ARG0 (i / it 
                  :ARG1-of (e / exceed-01)) 
            :ARG1 (t / truly)))

# ::snt later she came to depend more upon excision upon the evocation of what she called the thing not said castigating balzac for delivering an excess of information she praised the hint the pareddown suggestion
# ::tok later she came to depend more upon excision upon the evocation of what she called the thing not said castigating balzac for delivering an excess of information she praised the hint the pareddown suggestion
# ::alignments 33-34|0.0.0.0.0+0.0.0.0 30-31|0.0.0 28-29|0.0.0.1 27-28|0.0.0.1.0 26-27|0.0.0.1.0.0.0 24-25|0.0.0.1.0.0 22-23|0.0.0.1.0.0.1 18-19|0 16-17|0.1 13-14|0.0 4-5|0.0.0.2 1-2|0.0.0.2.0 0-1|0.0.0.1.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:33.842
# ::node	0	say-01	18-19
# ::node	0.0	she	13-14
# ::node	0.0.0	hint-01	30-31
# ::node	0.0.0.0	thing	33-34
# ::node	0.0.0.0.0	suggest-01	33-34
# ::node	0.0.0.1	praise-01	28-29
# ::node	0.0.0.1.0	she	27-28
# ::node	0.0.0.1.0.0	exceed-01	24-25
# ::node	0.0.0.1.0.0.0	information	26-27
# ::node	0.0.0.1.0.0.1	deliver-01	22-23
# ::node	0.0.0.1.0.0.1.0	late	0-1
# ::node	0.0.0.2	depend-01	4-5
# ::node	0.0.0.2.0	she	1-2
# ::node	0.1	thing	16-17
# ::root	0	say-01
# ::edge	deliver-01	ARG0	late	0.0.0.1.0.0.1	0.0.0.1.0.0.1.0	
# ::edge	deliver-01	ARG1	exceed-01	0.0.0.1.0.0.1	0.0.0.1.0.0	
# ::edge	depend-01	ARG0	she	0.0.0.2	0.0.0.2.0	
# ::edge	depend-01	ARG1	hint-01	0.0.0.2	0.0.0	
# ::edge	exceed-01	ARG0	she	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	exceed-01	ARG1	information	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	hint-01	ARG0	she	0.0.0	0.0	
# ::edge	hint-01	ARG1	thing	0.0.0	0.0.0.0	
# ::edge	praise-01	ARG0	she	0.0.0.1	0.0.0.1.0	
# ::edge	praise-01	ARG1	hint-01	0.0.0.1	0.0.0	
# ::edge	say-01	ARG0	she	0	0.0	
# ::edge	say-01	ARG1	thing	0	0.1	
# ::edge	suggest-01	ARG1	thing	0.0.0.0.0	0.0.0.0	
(s3 / say-01 
      :ARG0 (s4 / she 
            :ARG0-of (h / hint-01 
                  :ARG1 (t / thing 
                        :ARG1-of (s / suggest-01)) 
                  :ARG1-of (p / praise-01 
                        :ARG0 (s2 / she 
                              :ARG0-of (e / exceed-01 
                                    :ARG1 (i / information) 
                                    :ARG1-of (d / deliver-01 
                                          :ARG0 (l / late))))) 
                  :ARG1-of (d2 / depend-01 
                        :ARG0 (s5 / she)))) 
      :ARG1 (t2 / thing))

# ::snt and even after that explosion the dividend is still covered by profits more than three and a half times which leaves plenty room for further growth in excess of earnings
# ::tok and even after that explosion the dividend is still covered by profits more than three and a half times which leaves plenty room for further growth in excess of earnings
# ::alignments 29-30|0.0.0.0.0.1.0.0.1.0.0 27-28|0.0.0.0.0.1.0.0.1.0 25-26|0.0.0.0.0.1.0.0.1 24-25|0.0.0.0.0.1.0.0.1.1 22-23|0.0.0.0.0.1.0.0 21-22|0.0.0.0.0.1.0.0.0 20-21|0.0.0.0.0.1.0 17-18|0.0.0.0.0.1.0.0.1.0.0.0 15-16|0.0.0.0.0.1 14-15|0.0.0.0.0.0 11-12|0.0.0.0.0 9-10|0.0.0.0 8-9|0.0.0.0.1 4-5|0.0.0 2-3|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:34.178
# ::node	0	and	0-1
# ::node	0.0	after	2-3
# ::node	0.0.0	explode-01	4-5
# ::node	0.0.0.0	cover-01	9-10
# ::node	0.0.0.0.0	profit-01	11-12
# ::node	0.0.0.0.0.0	3	14-15
# ::node	0.0.0.0.0.1	and	15-16
# ::node	0.0.0.0.0.1.0	leave-01	20-21
# ::node	0.0.0.0.0.1.0.0	room	22-23
# ::node	0.0.0.0.0.1.0.0.0	plenty	21-22
# ::node	0.0.0.0.0.1.0.0.1	grow-01	25-26
# ::node	0.0.0.0.0.1.0.0.1.0	exceed-01	27-28
# ::node	0.0.0.0.0.1.0.0.1.0.0	earn-01	29-30
# ::node	0.0.0.0.0.1.0.0.1.0.0.0	half	17-18
# ::node	0.0.0.0.0.1.0.0.1.1	further	24-25
# ::node	0.0.0.0.1	still	8-9
# ::root	0	and
# ::edge	after	op1	explode-01	0.0	0.0.0	
# ::edge	and	op1	profit-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	and	time	after	0	0.0	
# ::edge	cover-01	ARG1	explode-01	0.0.0.0	0.0.0	
# ::edge	cover-01	ARG2	profit-01	0.0.0.0	0.0.0.0.0	
# ::edge	cover-01	mod	still	0.0.0.0	0.0.0.0.1	
# ::edge	earn-01	ARG1	half	0.0.0.0.0.1.0.0.1.0.0	0.0.0.0.0.1.0.0.1.0.0.0	
# ::edge	exceed-01	ARG1	earn-01	0.0.0.0.0.1.0.0.1.0	0.0.0.0.0.1.0.0.1.0.0	
# ::edge	grow-01	ARG1	exceed-01	0.0.0.0.0.1.0.0.1	0.0.0.0.0.1.0.0.1.0	
# ::edge	grow-01	mod	further	0.0.0.0.0.1.0.0.1	0.0.0.0.0.1.0.0.1.1	
# ::edge	leave-01	ARG0	and	0.0.0.0.0.1.0	0.0.0.0.0.1	
# ::edge	leave-01	ARG1	room	0.0.0.0.0.1.0	0.0.0.0.0.1.0.0	
# ::edge	profit-01	ARG1	3	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	room	mod	plenty	0.0.0.0.0.1.0.0	0.0.0.0.0.1.0.0.0	
# ::edge	room	purpose	grow-01	0.0.0.0.0.1.0.0	0.0.0.0.0.1.0.0.1	
(a3 / and 
      :time (a2 / after 
            :op1 (e3 / explode-01 
                  :ARG1-of (c / cover-01 
                        :ARG2 (p2 / profit-01 
                              :ARG1 3 
                              :op-of (a / and 
                                    :ARG0-of (l / leave-01 
                                          :ARG1 (r / room 
                                                :mod (p / plenty) 
                                                :purpose (g / grow-01 
                                                      :ARG1 (e2 / exceed-01 
                                                            :ARG1 (e / earn-01 
                                                                  :ARG1 (h / half))) 
                                                      :mod (f / further)))))) 
                        :mod (s / still)))))

# ::snt its a widespread misconception that theyre brought on by an excess of alcohol
# ::tok its a widespread misconception that theyre brought on by an excess of alcohol
# ::alignments 12-13|0.0.0 10-11|0.0 3-4|0 2-3|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:34.194
# ::node	0	misconception	3-4
# ::node	0.0	exceed-01	10-11
# ::node	0.0.0	alcohol	12-13
# ::node	0.1	wide	2-3
# ::root	0	misconception
# ::edge	exceed-01	ARG0	misconception	0.0	0	
# ::edge	exceed-01	ARG1	alcohol	0.0	0.0.0	
# ::edge	misconception	mod	wide	0	0.1	
(m / misconception 
      :ARG0-of (e / exceed-01 
            :ARG1 (a / alcohol)) 
      :mod (w / wide))

# ::snt so that might be something to bear in mind that its  not just the negative part get rid of the excess sort  of organics but its to get rid of cure disease
# ::tok so that might be something to bear in mind that its not just the negative part get rid of the excess sort of organics but its to get rid of cure disease
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:34.195
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt they are looking for firms with an energy requirement in the 1990s in excess of 18million therms per annum
# ::tok they are looking for firms with an energy requirement in the 1990s in excess of 18million therms per annum
# ::alignments 13-14|0.0.0.1 11-12|0.0.0 8-9|0.0 7-8|0.0.1 4-5|0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:34.233
# ::node	0	firm	4-5
# ::node	0.0	require-01	8-9
# ::node	0.0.0	1990	11-12
# ::node	0.0.0.0	they	0-1
# ::node	0.0.0.1	exceed-01	13-14
# ::node	0.0.1	energy	7-8
# ::root	0	firm
# ::edge	1990	poss	they	0.0.0	0.0.0.0	
# ::edge	1990	topic	exceed-01	0.0.0	0.0.0.1	
# ::edge	firm	prep-in	require-01	0	0.0	
# ::edge	require-01	ARG0	1990	0.0	0.0.0	
# ::edge	require-01	ARG1	energy	0.0	0.0.1	
(f / firm 
      :prep-in (r / require-01 
            :ARG0 (1 / 1990 
                  :poss (t / they) 
                  :topic (e / exceed-01)) 
            :ARG1 (e2 / energy)))

# ::snt bond executives admitted that the move could finally trigger the collapse of the perth tycoons international brewing media and mining empire which once commanded assets in excess of adollars 10bn  5
# ::tok bond executives admitted that the move could finally trigger the collapse of the perth tycoons international brewing media and mining empire which once commanded assets in excess of adollars 10bn 5
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:34.236
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt they liked to blame the new laws on afrikaner excesses but even before the apartheid government there was a deep white fear as in the deep south against social mixing and mixed marriages and the englishspeaking opposition the united party voted in favour of most of the apartheid bills
# ::tok they liked to blame the new laws on afrikaner excesses but even before the apartheid government there was a deep white fear as in the deep south against social mixing and mixed marriages and the englishspeaking opposition the united party voted in favour of most of the apartheid bills
# ::alignments 48-49|0.2.0.1.0.0.0.0.0.0 47-48|0.2.0.1.0.0.0.0.0.0.1 44-45|0.2.0.1.0.0.0.0.0 42-43|0.2.0.1.0.0.0.0 40-41|0.2.0.1.0.0.0 39-40|0.2.0.1.0.0 38-39|0.2.0.1.0 36-37|0.2.0.2.1 33-34|0.2.0.2 32-33|0.2.0.1 31-32|0.2.0.0 30-31|0.2.0 28-29|0.2.0.1.0.0.0.0.0.0.0 26-27|0.2.0.2.0 25-26|0.2.0.2.0.0 21-22|0.2 20-21|0.2.0.2.1.1 19-20|0.2.1 14-15|0.2.0.2.1.0 12-13|0.0 10-11|0 6-7|0.1.1 5-6|0.1.1.0 3-4|0.1 1-2|0.1.0.0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:35.597
# ::node	0	contrast-01	10-11
# ::node	0.0	before	12-13
# ::node	0.1	blame-01	3-4
# ::node	0.1.0	they	0-1
# ::node	0.1.0.0	like-01	1-2
# ::node	0.1.1	law	6-7
# ::node	0.1.1.0	new	5-6
# ::node	0.2	fear-01	21-22
# ::node	0.2.0	and	30-31
# ::node	0.2.0.0	mix-01	31-32
# ::node	0.2.0.1	marry-01	32-33
# ::node	0.2.0.1.0	unite-01	38-39
# ::node	0.2.0.1.0.0	party	39-40
# ::node	0.2.0.1.0.0.0	vote-01	40-41
# ::node	0.2.0.1.0.0.0.0	favor-01	42-43
# ::node	0.2.0.1.0.0.0.0.0	most	44-45
# ::node	0.2.0.1.0.0.0.0.0.0	bill-01	48-49
# ::node	0.2.0.1.0.0.0.0.0.0.0	society	28-29
# ::node	0.2.0.1.0.0.0.0.0.0.1	apartheid	47-48
# ::node	0.2.0.2	and	33-34
# ::node	0.2.0.2.0	south	26-27
# ::node	0.2.0.2.0.0	deep	25-26
# ::node	0.2.0.2.1	oppose-01	36-37
# ::node	0.2.0.2.1.0	apartheid	14-15
# ::node	0.2.0.2.1.1	white	20-21
# ::node	0.2.1	deep	19-20
# ::root	0	contrast-01
# ::edge	and	op1	mix-01	0.2.0	0.2.0.0	
# ::edge	and	op1	south	0.2.0.2	0.2.0.2.0	
# ::edge	and	op2	marry-01	0.2.0	0.2.0.1	
# ::edge	and	op2	oppose-01	0.2.0.2	0.2.0.2.1	
# ::edge	and	op3	and	0.2.0	0.2.0.2	
# ::edge	bill-01	ARG0	society	0.2.0.1.0.0.0.0.0.0	0.2.0.1.0.0.0.0.0.0.0	
# ::edge	bill-01	ARG1	most	0.2.0.1.0.0.0.0.0.0	0.2.0.1.0.0.0.0.0	
# ::edge	bill-01	mod	apartheid	0.2.0.1.0.0.0.0.0.0	0.2.0.1.0.0.0.0.0.0.1	
# ::edge	blame-01	ARG0	they	0.1	0.1.0	
# ::edge	blame-01	ARG1	law	0.1	0.1.1	
# ::edge	contrast-01	ARG0	before	0	0.0	
# ::edge	contrast-01	ARG1	blame-01	0	0.1	
# ::edge	contrast-01	ARG2	fear-01	0	0.2	
# ::edge	favor-01	ARG0	most	0.2.0.1.0.0.0.0	0.2.0.1.0.0.0.0.0	
# ::edge	fear-01	ARG1	and	0.2	0.2.0	
# ::edge	fear-01	degree	deep	0.2	0.2.1	
# ::edge	law	mod	new	0.1.1	0.1.1.0	
# ::edge	like-01	ARG0	they	0.1.0.0	0.1.0	
# ::edge	marry-01	ARG1	unite-01	0.2.0.1	0.2.0.1.0	
# ::edge	oppose-01	ARG0	apartheid	0.2.0.2.1	0.2.0.2.1.0	
# ::edge	oppose-01	ARG1	white	0.2.0.2.1	0.2.0.2.1.1	
# ::edge	south	mod	deep	0.2.0.2.0	0.2.0.2.0.0	
# ::edge	unite-01	ARG1	party	0.2.0.1.0	0.2.0.1.0.0	
# ::edge	vote-01	ARG0	party	0.2.0.1.0.0.0	0.2.0.1.0.0	
# ::edge	vote-01	ARG1	favor-01	0.2.0.1.0.0.0	0.2.0.1.0.0.0.0	
(c / contrast-01 
      :ARG0 (b2 / before) 
      :ARG1 (b3 / blame-01 
            :ARG0 (t / they 
                  :ARG0-of (l2 / like-01)) 
            :ARG1 (l / law 
                  :mod (n / new))) 
      :ARG2 (f2 / fear-01 
            :ARG1 (a3 / and 
                  :op1 (m3 / mix-01) 
                  :op2 (m2 / marry-01 
                        :ARG1 (u / unite-01 
                              :ARG1 (p / party 
                                    :ARG0-of (v / vote-01 
                                          :ARG1 (f / favor-01 
                                                :ARG0 (m / most 
                                                      :ARG1-of (b / bill-01 
                                                            :ARG0 (s / society) 
                                                            :mod (a / apartheid)))))))) 
                  :op3 (a2 / and 
                        :op1 (s2 / south 
                              :mod (d / deep)) 
                        :op2 (o / oppose-01 
                              :ARG0 (a4 / apartheid) 
                              :ARG1 (w / white)))) 
            :degree (d2 / deep)))

# ::snt if you look at an american kit for say 10000 to 14000 which then requires in excess of 500 hours of sweat equity the chevron doesnt look bad value after all
# ::tok if you look at an american kit for say 10000 to 14000 which then requires in excess of 500 hours of sweat equity the chevron doesnt look bad value after all
# ::alignments 30-31|0.2.0 29-30|0.2 28-29|0.2.1 27-28|0.2.1.1 22-23|0.1.1.1.0 21-22|0.1.1.1.0.0 19-20|0.1.1.1.2+0.1.1.1 18-19|0.1.1.1.1 16-17|0.1.1 14-15|0.1 13-14|0.1.2 11-12|0.1.1.0 9-10|0.1.0 8-9|0 6-7|0.2.1.0 5-6|0.2.1.0.0.0.0+0.2.1.0.0.0+0.2.1.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:35.803
# ::node	0	say-01	8-9
# ::node	0.0	you	1-2
# ::node	0.1	require-01	14-15
# ::node	0.1.0	10000	9-10
# ::node	0.1.1	exceed-01	16-17
# ::node	0.1.1.0	14000	11-12
# ::node	0.1.1.1	temporal-quantity	19-20
# ::node	0.1.1.1.0	equity	22-23
# ::node	0.1.1.1.0.0	sweat	21-22
# ::node	0.1.1.1.1	500	18-19
# ::node	0.1.1.1.2	hour	19-20
# ::node	0.1.2	then	13-14
# ::node	0.2	after	29-30
# ::node	0.2.0	all	30-31
# ::node	0.2.1	value-01	28-29
# ::node	0.2.1.0	kit	6-7
# ::node	0.2.1.0.0	country	5-6
# ::node	0.2.1.0.0.0	name	5-6
# ::node	0.2.1.0.0.0.0	"America"	5-6
# ::node	0.2.1.1	bad	27-28
# ::root	0	say-01
# ::edge	after	op1	all	0.2	0.2.0	
# ::edge	country	name	name	0.2.1.0.0	0.2.1.0.0.0	
# ::edge	equity	duration	temporal-quantity	0.1.1.1.0	0.1.1.1	
# ::edge	equity	mod	sweat	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	exceed-01	ARG1	14000	0.1.1	0.1.1.0	
# ::edge	exceed-01	ARG2	temporal-quantity	0.1.1	0.1.1.1	
# ::edge	kit	mod	country	0.2.1.0	0.2.1.0.0	
# ::edge	name	op1	"America"	0.2.1.0.0.0	0.2.1.0.0.0.0	
# ::edge	require-01	ARG0	10000	0.1	0.1.0	
# ::edge	require-01	ARG1	exceed-01	0.1	0.1.1	
# ::edge	require-01	time	then	0.1	0.1.2	
# ::edge	say-01	ARG0	you	0	0.0	
# ::edge	say-01	ARG1	require-01	0	0.1	
# ::edge	say-01	time	after	0	0.2	
# ::edge	temporal-quantity	quant	500	0.1.1.1	0.1.1.1.1	
# ::edge	temporal-quantity	unit	hour	0.1.1.1	0.1.1.1.2	
# ::edge	value-01	ARG1	kit	0.2.1	0.2.1.0	
# ::edge	value-01	manner	bad	0.2.1	0.2.1.1	
# ::edge	value-01	time	after	0.2.1	0.2	
(s2 / say-01 
      :ARG0 (y / you) 
      :ARG1 (r / require-01 
            :ARG0 10000 
            :ARG1 (e2 / exceed-01 
                  :ARG1 14000 
                  :ARG2 (t / temporal-quantity 
                        :duration-of (e / equity 
                              :mod (s / sweat)) 
                        :quant 500 
                        :unit (h / hour))) 
            :time (t2 / then)) 
      :time (a2 / after 
            :op1 (a / all) 
            :time-of (v / value-01 
                  :ARG1 (k / kit 
                        :mod (c / country 
                              :name (n / name 
                                    :op1 "America"))) 
                  :manner (b / bad))))

# ::snt battle murder and sudden death were well represented there were enough of the second to produce a newgate calendar in miniature but with other such chef doeuvres as the sale of oliver cromwells table on which the protector was said to have signed charles is death warrant the dangers of traction engines a steam tricycle and under a modest heading of military disaffection the story of a battalion of the grenadier guards refusing to parade as a protest against what was considered to be an excess of parades
# ::tok battle murder and sudden death were well represented there were enough of the second to produce a newgate calendar in miniature but with other such chef doeuvres as the sale of oliver cromwells table on which the protector was said to have signed charles is death warrant the dangers of traction engines a steam tricycle and under a modest heading of military disaffection the story of a battalion of the grenadier guards refusing to parade as a protest against what was considered to be an excess of parades
# ::alignments 85-86|0.0.1.1.0.0.1.0.1 81-82|0.0.1.1.0.0.1.0 77-78|0.0.1.1.0.0.1 74-75|0.0.1.1.0.0.2 72-73|0.0.1.1.0.0 71-72|0.0.1.1.0+0.0.1.1 64-65|0.0.1.1.0.0.0 61-62|0.0.1.1.0.0.1.0.0 59-60|0.0.1.1.1.1 58-59|0.0.1.1.1.1.0 55-56|0.0.1.1.1 53-54|0.0.1.1.0.0.2.0 51-52|0.0.1.1.1.0.0 50-51|0.0.1.1.1.0.0.0 48-49|0.0.1.1.1.0 46-47|0.0.1.2 45-46|0.0.1 42-43|0.0 39-40|0 33-34|0.0.0 24-25|0.0.1.0 23-24|0.1.0.1.0.0 21-22|0.1 20-21|0.1.0.3.0 15-16|0.1.0.3 10-11|0.1.0.0.0 7-8|0.1.0.0 6-7|0.1.0.0.1 4-5|0.1.0.2 3-4|0.1.0.2.0 2-3|0.1.0 1-2|0.1.0.1 0-1|0.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:37.859
# ::node	0	say-01	39-40
# ::node	0.0	sign-02	42-43
# ::node	0.0.0	table	33-34
# ::node	0.0.1	die-01	45-46
# ::node	0.0.1.0	such	24-25
# ::node	0.0.1.1	person	71-72
# ::node	0.0.1.1.0	guard-01	71-72
# ::node	0.0.1.1.0.0	refuse-01	72-73
# ::node	0.0.1.1.0.0.0	story	64-65
# ::node	0.0.1.1.0.0.1	protest-01	77-78
# ::node	0.0.1.1.0.0.1.0	consider-01	81-82
# ::node	0.0.1.1.0.0.1.0.0	military	61-62
# ::node	0.0.1.1.0.0.1.0.1	exceed-01	85-86
# ::node	0.0.1.1.0.0.2	parade-01	74-75
# ::node	0.0.1.1.0.0.2.0	steam	53-54
# ::node	0.0.1.1.1	and	55-56
# ::node	0.0.1.1.1.0	danger	48-49
# ::node	0.0.1.1.1.0.0	engine	51-52
# ::node	0.0.1.1.1.0.0.0	traction	50-51
# ::node	0.0.1.1.1.1	head-02	59-60
# ::node	0.0.1.1.1.1.0	modest	58-59
# ::node	0.0.1.2	warrant	46-47
# ::node	0.1	contrast-01	21-22
# ::node	0.1.0	and	2-3
# ::node	0.1.0.0	represent-01	7-8
# ::node	0.1.0.0.0	enough	10-11
# ::node	0.1.0.0.1	well	6-7
# ::node	0.1.0.1	murder-01	1-2
# ::node	0.1.0.1.0	battle-01	0-1
# ::node	0.1.0.1.0.0	other	23-24
# ::node	0.1.0.2	die-01	4-5
# ::node	0.1.0.2.0	sudden	3-4
# ::node	0.1.0.3	produce-01	15-16
# ::node	0.1.0.3.0	miniature	20-21
# ::root	0	say-01
# ::edge	and	op1	danger	0.0.1.1.1	0.0.1.1.1.0	
# ::edge	and	op1	murder-01	0.1.0	0.1.0.1	
# ::edge	and	op2	die-01	0.1.0	0.1.0.2	
# ::edge	and	op2	head-02	0.0.1.1.1	0.0.1.1.1.1	
# ::edge	and	op3	person	0.0.1.1.1	0.0.1.1	
# ::edge	and	op3	produce-01	0.1.0	0.1.0.3	
# ::edge	battle-01	ARG1	other	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	consider-01	ARG0	military	0.0.1.1.0.0.1.0	0.0.1.1.0.0.1.0.0	
# ::edge	consider-01	ARG1	exceed-01	0.0.1.1.0.0.1.0	0.0.1.1.0.0.1.0.1	
# ::edge	contrast-01	ARG1	and	0.1	0.1.0	
# ::edge	contrast-01	ARG2	say-01	0.1	0	
# ::edge	danger	poss	engine	0.0.1.1.1.0	0.0.1.1.1.0.0	
# ::edge	die-01	ARG0	such	0.0.1	0.0.1.0	
# ::edge	die-01	ARG1	person	0.0.1	0.0.1.1	
# ::edge	die-01	manner	sudden	0.1.0.2	0.1.0.2.0	
# ::edge	engine	mod	traction	0.0.1.1.1.0.0	0.0.1.1.1.0.0.0	
# ::edge	guard-01	ARG0	person	0.0.1.1.0	0.0.1.1	
# ::edge	guard-01	ARG1	refuse-01	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	head-02	mod	modest	0.0.1.1.1.1	0.0.1.1.1.1.0	
# ::edge	murder-01	ARG1	battle-01	0.1.0.1	0.1.0.1.0	
# ::edge	parade-01	ARG1	steam	0.0.1.1.0.0.2	0.0.1.1.0.0.2.0	
# ::edge	produce-01	ARG1	miniature	0.1.0.3	0.1.0.3.0	
# ::edge	protest-01	ARG1	consider-01	0.0.1.1.0.0.1	0.0.1.1.0.0.1.0	
# ::edge	refuse-01	ARG1	story	0.0.1.1.0.0	0.0.1.1.0.0.0	
# ::edge	refuse-01	ARG2	protest-01	0.0.1.1.0.0	0.0.1.1.0.0.1	
# ::edge	refuse-01	ARG4	parade-01	0.0.1.1.0.0	0.0.1.1.0.0.2	
# ::edge	represent-01	ARG0	enough	0.1.0.0	0.1.0.0.0	
# ::edge	represent-01	ARG1	and	0.1.0.0	0.1.0	
# ::edge	represent-01	manner	well	0.1.0.0	0.1.0.0.1	
# ::edge	say-01	ARG1	sign-02	0	0.0	
# ::edge	sign-02	ARG1	table	0.0	0.0.0	
# ::edge	sign-02	ARG2	die-01	0.0	0.0.1	
# ::edge	warrant	mod	die-01	0.0.1.2	0.0.1	
(s4 / say-01 
      :ARG1 (s3 / sign-02 
            :ARG1 (t2 / table) 
            :ARG2 (d2 / die-01 
                  :ARG0 (s5 / such) 
                  :ARG1 (p3 / person 
                        :ARG0-of (g / guard-01 
                              :ARG1 (r / refuse-01 
                                    :ARG1 (s / story) 
                                    :ARG2 (p / protest-01 
                                          :ARG1 (c / consider-01 
                                                :ARG0 (m / military) 
                                                :ARG1 (e / exceed-01))) 
                                    :ARG4 (p2 / parade-01 
                                          :ARG1 (s2 / steam)))) 
                        :op-of (a / and 
                              :op1 (d / danger 
                                    :poss (e2 / engine 
                                          :mod (t / traction))) 
                              :op2 (h / head-02 
                                    :mod (m2 / modest)))) 
                  :mod-of (w / warrant))) 
      :ARG2-of (c2 / contrast-01 
            :ARG1 (a2 / and 
                  :ARG1-of (r2 / represent-01 
                        :ARG0 (e3 / enough) 
                        :manner (w2 / well)) 
                  :op1 (m4 / murder-01 
                        :ARG1 (b / battle-01 
                              :ARG1 (o / other))) 
                  :op2 (d3 / die-01 
                        :manner (s6 / sudden)) 
                  :op3 (p4 / produce-01 
                        :ARG1 (m3 / miniature)))))

# ::snt with support coming from vauxhall mobil lombard finance and radio times this prize is worth in excess of 70000
# ::tok with support coming from vauxhall mobil lombard finance and radio times this prize is worth in excess of 70000
# ::alignments 18-19|0.0.0 16-17|0.0 14-15|0.1 12-13|0 11-12|0.2 9-10|0.1.0.0.1 8-9|0.1.0.0 7-8|0.1.0 1-2|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:37.933
# ::node	0	prize-01	12-13
# ::node	0.0	exceed-01	16-17
# ::node	0.0.0	70000	18-19
# ::node	0.1	worth	14-15
# ::node	0.1.0	finance-01	7-8
# ::node	0.1.0.0	and	8-9
# ::node	0.1.0.0.0	support-01	1-2
# ::node	0.1.0.0.1	radio	9-10
# ::node	0.2	this	11-12
# ::root	0	prize-01
# ::edge	and	op1	support-01	0.1.0.0	0.1.0.0.0	
# ::edge	and	op2	finance-01	0.1.0.0	0.1.0	
# ::edge	and	op3	radio	0.1.0.0	0.1.0.0.1	
# ::edge	exceed-01	ARG1	prize-01	0.0	0	
# ::edge	exceed-01	time	70000	0.0	0.0.0	
# ::edge	finance-01	ARG1	worth	0.1.0	0.1	
# ::edge	prize-01	mod	this	0	0.2	
# ::edge	worth	domain	prize-01	0.1	0	
(p / prize-01 
      :ARG1-of (e / exceed-01 
            :time 70000) 
      :domain-of (w / worth 
            :ARG1-of (f / finance-01 
                  :op-of (a / and 
                        :op1 (s / support-01) 
                        :op2 (r / radio)))) 
      :mod (t / this))

# ::snt now the poll tax means everyone will have to foot the bill for labours excesses perhaps labour should for once listen to local concern and wind up their plans
# ::tok now the poll tax means everyone will have to foot the bill for labours excesses perhaps labour should for once listen to local concern and wind up their plans
# ::alignments 28-29|0.3.2.0 25-26|0.3.2 24-25|0.3 23-24|0.1 22-23|0.1.0 20-21|0 19-20|0.2 17-18|0.3.0 16-17|0.3.0.0 15-16|0.3.0.0.0 11-12|0.0 9-10|0.3.1 5-6|0.3.1.0 4-5|0.3.1.0.0 3-4|0.3.1.0.0.1 2-3|0.3.1.0.0.1.0 0-1|0.3.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:38.203
# ::node	0	listen-01	20-21
# ::node	0.0	bill	11-12
# ::node	0.1	concern-01	23-24
# ::node	0.1.0	local	22-23
# ::node	0.2	once	19-20
# ::node	0.3	and	24-25
# ::node	0.3.0	recommend-01	17-18
# ::node	0.3.0.0	labour	16-17
# ::node	0.3.0.0.0	perhaps	15-16
# ::node	0.3.1	foot	9-10
# ::node	0.3.1.0	everyone	5-6
# ::node	0.3.1.0.0	mean-01	4-5
# ::node	0.3.1.0.0.0	now	0-1
# ::node	0.3.1.0.0.1	tax-01	3-4
# ::node	0.3.1.0.0.1.0	poll-01	2-3
# ::node	0.3.2	wind	25-26
# ::node	0.3.2.0	plan-01	28-29
# ::root	0	listen-01
# ::edge	and	op1	foot	0.3	0.3.1	
# ::edge	and	op2	listen-01	0.3	0	
# ::edge	and	op3	wind	0.3	0.3.2	
# ::edge	concern-01	mod	local	0.1	0.1.0	
# ::edge	foot	ARG0	everyone	0.3.1	0.3.1.0	
# ::edge	labour	mod	perhaps	0.3.0.0	0.3.0.0.0	
# ::edge	listen-01	ARG0	bill	0	0.0	
# ::edge	listen-01	ARG1	concern-01	0	0.1	
# ::edge	listen-01	mod	once	0	0.2	
# ::edge	mean-01	ARG0	now	0.3.1.0.0	0.3.1.0.0.0	
# ::edge	mean-01	ARG1	tax-01	0.3.1.0.0	0.3.1.0.0.1	
# ::edge	mean-01	ARG2	everyone	0.3.1.0.0	0.3.1.0	
# ::edge	recommend-01	ARG1	and	0.3.0	0.3	
# ::edge	recommend-01	ARG2	labour	0.3.0	0.3.0.0	
# ::edge	tax-01	ARG1	poll-01	0.3.1.0.0.1	0.3.1.0.0.1.0	
# ::edge	wind	prep-on	plan-01	0.3.2	0.3.2.0	
(l2 / listen-01 
      :ARG0 (b / bill) 
      :ARG1 (c / concern-01 
            :mod (l / local)) 
      :mod (o / once) 
      :op-of (a / and 
            :ARG1-of (r / recommend-01 
                  :ARG2 (l3 / labour 
                        :mod (p2 / perhaps))) 
            :op1 (f / foot 
                  :ARG0 (e / everyone 
                        :ARG2-of (m / mean-01 
                              :ARG0 (n / now) 
                              :ARG1 (t / tax-01 
                                    :ARG1 (p3 / poll-01))))) 
            :op2 (w / wind 
                  :prep-on (p / plan-01))))

# ::snt he could not be described as handsome and in later years with his weight fluctuating to in excess of fifteen stone through his appetite for junkish food between pictures he showed signs of a middleaged spread not being tall at five feet nine inches it tends to be obvious
# ::tok he could not be described as handsome and in later years with his weight fluctuating to in excess of fifteen stone through his appetite for junkish food between pictures he showed signs of a middleaged spread not being tall at five feet nine inches it tends to be obvious
# ::alignments 48-49|0.0.0.1.0.0.0 45-46|0.0.0.1.0 44-45|0.0.0.1.0.0 43-44|0.0.0.1.2+0.0.0.1 42-43|0.0.0.1.1 41-42|0.2.0.1.0.0.2 40-41|0.2.0.1.0.0.0 38-39|0.0.0.0.0 35-36|0.0.0 31-32|0.0.0.0 30-31|0 29-30|0.0 28-29|0.1 27-28|0.1.0 26-27|0.1.0.0 20-21|0.2.0.1.0.0.1 17-18|0.2.0.1.0.0 14-15|0.2.0.1.0 13-14|0.2.0.1 10-11|0.2.0.1.1.1+0.2.0.1.1 9-10|0.2.0.1.1.0 7-8|0.2 4-5|0.2.0 1-2|0.2.0.2 0-1|0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:40.449
# ::node	0	show-01	30-31
# ::node	0.0	he	29-30
# ::node	0.0.0	spread-02	35-36
# ::node	0.0.0.0	sign	31-32
# ::node	0.0.0.0.0	tall	38-39
# ::node	0.0.0.1	distance-quantity	43-44
# ::node	0.0.0.1.0	tend-02	45-46
# ::node	0.0.0.1.0.0	it	44-45
# ::node	0.0.0.1.0.0.0	obvious-41	48-49
# ::node	0.0.0.1.1	9	42-43
# ::node	0.0.0.1.2	inch	43-44
# ::node	0.1	picture	28-29
# ::node	0.1.0	between	27-28
# ::node	0.1.0.0	food	26-27
# ::node	0.2	and	7-8
# ::node	0.2.0	describe-01	4-5
# ::node	0.2.0.0	he	0-1
# ::node	0.2.0.1	weight	13-14
# ::node	0.2.0.1.0	fluctuate-01	14-15
# ::node	0.2.0.1.0.0	exceed-01	17-18
# ::node	0.2.0.1.0.0.0	5	40-41
# ::node	0.2.0.1.0.0.1	stone	20-21
# ::node	0.2.0.1.0.0.2	foot	41-42
# ::node	0.2.0.1.1	temporal-quantity	10-11
# ::node	0.2.0.1.1.0	late	9-10
# ::node	0.2.0.1.1.1	year	10-11
# ::node	0.2.0.2	possible	1-2
# ::root	0	show-01
# ::edge	and	op1	show-01	0.2	0	
# ::edge	between	op1	picture	0.1.0	0.1	
# ::edge	describe-01	ARG0	he	0.2.0	0.2.0.0	
# ::edge	describe-01	ARG1	and	0.2.0	0.2	
# ::edge	describe-01	ARG2	weight	0.2.0	0.2.0.1	
# ::edge	distance-quantity	quant	9	0.0.0.1	0.0.0.1.1	
# ::edge	distance-quantity	unit	inch	0.0.0.1	0.0.0.1.2	
# ::edge	exceed-01	ARG0	5	0.2.0.1.0.0	0.2.0.1.0.0.0	
# ::edge	exceed-01	ARG1	stone	0.2.0.1.0.0	0.2.0.1.0.0.1	
# ::edge	fluctuate-01	ARG0	exceed-01	0.2.0.1.0	0.2.0.1.0.0	
# ::edge	fluctuate-01	ARG1	weight	0.2.0.1.0	0.2.0.1	
# ::edge	food	mod	between	0.1.0.0	0.1.0	
# ::edge	foot	op1	exceed-01	0.2.0.1.0.0.2	0.2.0.1.0.0	
# ::edge	obvious-41	ARG1	it	0.0.0.1.0.0.0	0.0.0.1.0.0	
# ::edge	possible	domain	describe-01	0.2.0.2	0.2.0	
# ::edge	show-01	ARG0	he	0	0.0	
# ::edge	show-01	ARG1	picture	0	0.1	
# ::edge	sign	domain	tall	0.0.0.0	0.0.0.0.0	
# ::edge	spread-02	ARG0	he	0.0.0	0.0	
# ::edge	spread-02	ARG1	sign	0.0.0	0.0.0.0	
# ::edge	spread-02	time	distance-quantity	0.0.0	0.0.0.1	
# ::edge	temporal-quantity	location	weight	0.2.0.1.1	0.2.0.1	
# ::edge	temporal-quantity	time	late	0.2.0.1.1	0.2.0.1.1.0	
# ::edge	temporal-quantity	unit	year	0.2.0.1.1	0.2.0.1.1.1	
# ::edge	tend-02	ARG0	it	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	tend-02	ARG1	distance-quantity	0.0.0.1.0	0.0.0.1	
(s3 / show-01 
      :ARG0 (h / he 
            :ARG0-of (s / spread-02 
                  :ARG1 (s2 / sign 
                        :domain (t2 / tall)) 
                  :time (d / distance-quantity 
                        :ARG1-of (t / tend-02 
                              :ARG0 (i / it 
                                    :ARG1-of (o / obvious-41))) 
                        :quant 9 
                        :unit (i2 / inch)))) 
      :ARG1 (p / picture 
            :op-of (b / between 
                  :mod-of (f2 / food))) 
      :op-of (a / and 
            :ARG1-of (d2 / describe-01 
                  :ARG0 (h2 / he) 
                  :ARG2 (w / weight 
                        :ARG1-of (f3 / fluctuate-01 
                              :ARG0 (e / exceed-01 
                                    :ARG0 5 
                                    :ARG1 (s4 / stone) 
                                    :op-of (f / foot))) 
                        :location-of (t3 / temporal-quantity 
                              :time (l / late) 
                              :unit (y / year))) 
                  :domain-of (p2 / possible))))

# ::snt mr simon pallett of estate agents dreweattneate who handled the sale said the arable farmland and buildings were given a guide price of 900000 but went for a sum in excess of that figure
# ::tok mr simon pallett of estate agents dreweattneate who handled the sale said the arable farmland and buildings were given a guide price of 900000 but went for a sum in excess of that figure
# ::alignments 33-34|0.0.0.1 30-31|0.0.0 28-29|0.0.0.0 24-25|0 23-24|0.1.2.2+0.1.2.1+0.1.2.0+0.1.2 21-22|0.1.0.0+0.1.0 20-21|0.1.0.0.0 18-19|0.1 16-17|0.1.0.0.0.0 15-16|0.1.1 11-12|0.0 8-9|0.0.1 5-6|0.1.0.0.0.1.0 4-5|0.1.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:41.167
# ::node	0	contrast-01	24-25
# ::node	0.0	say-01	11-12
# ::node	0.0.0	exceed-01	30-31
# ::node	0.0.0.0	sum	28-29
# ::node	0.0.0.1	figure	33-34
# ::node	0.0.1	handle-01	8-9
# ::node	0.1	give-01	18-19
# ::node	0.1.0	thing	21-22
# ::node	0.1.0.0	price-01	21-22
# ::node	0.1.0.0.0	guide-01	20-21
# ::node	0.1.0.0.0.0	building	16-17
# ::node	0.1.0.0.0.1	estate	4-5
# ::node	0.1.0.0.0.1.0	agent	5-6
# ::node	0.1.1	and	15-16
# ::node	0.1.2	date-entity	23-24
# ::node	0.1.2.0	0	23-24
# ::node	0.1.2.1	0	23-24
# ::node	0.1.2.2	90	23-24
# ::root	0	contrast-01
# ::edge	agent	mod	estate	0.1.0.0.0.1.0	0.1.0.0.0.1	
# ::edge	contrast-01	ARG1	say-01	0	0.0	
# ::edge	contrast-01	ARG2	give-01	0	0.1	
# ::edge	date-entity	day	0	0.1.2	0.1.2.0	
# ::edge	date-entity	month	0	0.1.2	0.1.2.1	
# ::edge	date-entity	year	90	0.1.2	0.1.2.2	
# ::edge	exceed-01	ARG0	sum	0.0.0	0.0.0.0	
# ::edge	exceed-01	ARG1	figure	0.0.0	0.0.0.1	
# ::edge	give-01	ARG1	thing	0.1	0.1.0	
# ::edge	give-01	ARG2	and	0.1	0.1.1	
# ::edge	give-01	time	date-entity	0.1	0.1.2	
# ::edge	guide-01	ARG0	building	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	guide-01	ARG1	estate	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	handle-01	ARG1	say-01	0.0.1	0.0	
# ::edge	price-01	ARG1	guide-01	0.1.0.0	0.1.0.0.0	
# ::edge	price-01	ARG2	thing	0.1.0.0	0.1.0	
# ::edge	say-01	ARG1	exceed-01	0.0	0.0.0	
(c / contrast-01 
      :ARG1 (s2 / say-01 
            :ARG1 (e / exceed-01 
                  :ARG0 (s / sum) 
                  :ARG1 (f / figure)) 
            :ARG1-of (h / handle-01)) 
      :ARG2 (g2 / give-01 
            :ARG1 (t / thing 
                  :ARG2-of (p / price-01 
                        :ARG1 (g / guide-01 
                              :ARG0 (b / building) 
                              :ARG1 (e2 / estate 
                                    :mod-of (a2 / agent))))) 
            :ARG2 (a / and) 
            :time (d / date-entity 
                  :day 0 
                  :month 0 
                  :year 90)))

# ::snt ive got the tune escapes the worst excesses of the genre
# ::tok ive got the tune escapes the worst excesses of the genre
# ::alignments 10-11|0.0.0 6-7|0 3-4|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:41.178
# ::node	0	bad	6-7
# ::node	0.0	tune-01	3-4
# ::node	0.0.0	genre	10-11
# ::root	0	bad
(b / bad 
      :ARG0-of (t / tune-01 
            :ARG1 (g / genre)))

# ::snt viewers will be spared some of the adventures excesses
# ::tok viewers will be spared some of the adventures excesses
# ::alignments 7-8|0.1 4-5|0.0.0.0 3-4|0 0-1|0.0.0+0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:41.251
# ::node	0	spare-01	3-4
# ::node	0.0	person	0-1
# ::node	0.0.0	view-01	0-1
# ::node	0.0.0.0	some	4-5
# ::node	0.1	adventure	7-8
# ::root	0	spare-01
# ::edge	adventure	op1	spare-01	0.1	0	
# ::edge	spare-01	ARG1	person	0	0.0	
# ::edge	view-01	ARG0	person	0.0.0	0.0	
# ::edge	view-01	ARG1	some	0.0.0	0.0.0.0	
(s2 / spare-01 
      :ARG1 (p / person 
            :ARG0-of (v / view-01 
                  :ARG1 (s / some))) 
      :op-of (a / adventure))

# ::snt settlements to wives in excess of 1m are seen on a not irregular basis she says
# ::tok settlements to wives in excess of 1m are seen on a not irregular basis she says
# ::alignments 15-16|0 14-15|0.0 8-9|0.1 4-5|0.1.0.0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:41.270
# ::node	0	say-01	15-16
# ::node	0.0	she	14-15
# ::node	0.1	see-01	8-9
# ::node	0.1.0	settlement	0-1
# ::node	0.1.0.0	exceed-01	4-5
# ::root	0	say-01
# ::edge	exceed-01	ARG2	settlement	0.1.0.0	0.1.0	
# ::edge	say-01	ARG0	she	0	0.0	
# ::edge	say-01	ARG1	see-01	0	0.1	
# ::edge	see-01	ARG1	settlement	0.1	0.1.0	
(s / say-01 
      :ARG0 (s2 / she) 
      :ARG1 (s3 / see-01 
            :ARG1 (s4 / settlement 
                  :ARG2-of (e / exceed-01))))

# ::snt thus the doctor will be persuaded to err on the side of caution and to disregard the expressed view of his patient that is just as earlier we noted the possibility of the patients view being overridden by an excess of zeal now we see the same result produced by an excess of caution
# ::tok thus the doctor will be persuaded to err on the side of caution and to disregard the expressed view of his patient that is just as earlier we noted the possibility of the patients view being overridden by an excess of zeal now we see the same result produced by an excess of caution
# ::alignments 51-52|0.1.0.0.0.0.1.0 48-49|0.1.0.0.0.0.1 47-48|0.1.0.0.0.0.0 46-47|0.1.0.0.0.0.0.1 44-45|0.1.0.0.0.0 43-44|0.1.0.0.0 42-43|0.1.0.0.0.0.2 41-42|0.1.0.0 39-40|0.1.0 33-34|0.0.0.0+0.0.0 30-31|0.1 28-29|0 27-28|0.0 26-27|0.1.0.0.0.0.0.0 24-25|0.1.0.0.0.0.0.1.0 21-22|0.1.1.0.0.1.0.0.0+0.1.1.0.0.1.0.0 17-18|0.1.0.1 15-16|0.1.1 13-14|0.1.1.0 10-11|0.1.1.0.0.0 7-8|0.1.1.0.0 5-6|0.1.1.0.0.1 2-3|0.1.1.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:42.868
# ::node	0	note-01	28-29
# ::node	0.0	we	27-28
# ::node	0.0.0	have-rel-role-91	33-34
# ::node	0.0.0.0	patient	33-34
# ::node	0.1	possible	30-31
# ::node	0.1.0	exceed-01	39-40
# ::node	0.1.0.0	zeal	41-42
# ::node	0.1.0.0.0	we	43-44
# ::node	0.1.0.0.0.0	see-01	44-45
# ::node	0.1.0.0.0.0.0	result-01	47-48
# ::node	0.1.0.0.0.0.0.0	early	26-27
# ::node	0.1.0.0.0.0.0.1	same-41	46-47
# ::node	0.1.0.0.0.0.0.1.0	just	24-25
# ::node	0.1.0.0.0.0.1	produce-01	48-49
# ::node	0.1.0.0.0.0.1.0	exceed-01	51-52
# ::node	0.1.0.0.0.0.2	now	42-43
# ::node	0.1.0.1	express-01	17-18
# ::node	0.1.1	disregard-01	15-16
# ::node	0.1.1.0	and	13-14
# ::node	0.1.1.0.0	err-01	7-8
# ::node	0.1.1.0.0.0	side	10-11
# ::node	0.1.1.0.0.1	persuade-01	5-6
# ::node	0.1.1.0.0.1.0	doctor	2-3
# ::node	0.1.1.0.0.1.0.0	have-rel-role-91	21-22
# ::node	0.1.1.0.0.1.0.0.0	patient	21-22
# ::root	0	note-01
# ::edge	and	op1	err-01	0.1.1.0	0.1.1.0.0	
# ::edge	and	op2	disregard-01	0.1.1.0	0.1.1	
# ::edge	disregard-01	ARG1	possible	0.1.1	0.1	
# ::edge	err-01	ARG1	side	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	exceed-01	ARG0	possible	0.1.0	0.1	
# ::edge	exceed-01	ARG1	zeal	0.1.0	0.1.0.0	
# ::edge	express-01	ARG1	exceed-01	0.1.0.1	0.1.0	
# ::edge	have-rel-role-91	ARG0	we	0.0.0	0.0	
# ::edge	have-rel-role-91	ARG1	doctor	0.1.1.0.0.1.0.0	0.1.1.0.0.1.0	
# ::edge	have-rel-role-91	ARG2	patient	0.0.0	0.0.0.0	
# ::edge	have-rel-role-91	ARG2	patient	0.1.1.0.0.1.0.0	0.1.1.0.0.1.0.0.0	
# ::edge	note-01	ARG0	we	0	0.0	
# ::edge	note-01	ARG1	possible	0	0.1	
# ::edge	persuade-01	ARG0	doctor	0.1.1.0.0.1	0.1.1.0.0.1.0	
# ::edge	persuade-01	ARG1	err-01	0.1.1.0.0.1	0.1.1.0.0	
# ::edge	produce-01	ARG1	exceed-01	0.1.0.0.0.0.1	0.1.0.0.0.0.1.0	
# ::edge	result-01	ARG1	early	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	same-41	ARG0	just	0.1.0.0.0.0.0.1	0.1.0.0.0.0.0.1.0	
# ::edge	same-41	ARG1	result-01	0.1.0.0.0.0.0.1	0.1.0.0.0.0.0	
# ::edge	see-01	ARG0	we	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	see-01	ARG1	result-01	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	see-01	ARG2	produce-01	0.1.0.0.0.0	0.1.0.0.0.0.1	
# ::edge	see-01	time	now	0.1.0.0.0.0	0.1.0.0.0.0.2	
# ::edge	zeal	poss	we	0.1.0.0	0.1.0.0.0	
(n2 / note-01 
      :ARG0 (w2 / we 
            :ARG0-of (h / have-rel-role-91 
                  :ARG2 (p2 / patient))) 
      :ARG1 (p3 / possible 
            :ARG0-of (e2 / exceed-01 
                  :ARG1 (z / zeal 
                        :poss (w / we 
                              :ARG0-of (s2 / see-01 
                                    :ARG1 (r / result-01 
                                          :ARG1 (e3 / early) 
                                          :ARG1-of (s / same-41 
                                                :ARG0 (j / just))) 
                                    :ARG2 (p / produce-01 
                                          :ARG1 (e / exceed-01)) 
                                    :time (n / now)))) 
                  :ARG1-of (e4 / express-01)) 
            :ARG1-of (d / disregard-01 
                  :op-of (a / and 
                        :op1 (e5 / err-01 
                              :ARG1 (s3 / side) 
                              :ARG1-of (p5 / persuade-01 
                                    :ARG0 (d2 / doctor 
                                          :ARG1-of (h2 / have-rel-role-91 
                                                :ARG2 (p4 / patient)))))))))

# ::snt   with a target in excess of dollars 30m bill toomey not for the first time in his life appears to be ahead of the game
# ::tok with a target in excess of dollars 30m bill toomey not for the first time in his life appears to be ahead of the game
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:42.869
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt should the wastegate jam shut the bosch lhjetronic fuel injection senses an excess of intake air for the engine speed and throttle opening and cuts the fuel supply
# ::tok should the wastegate jam shut the bosch lhjetronic fuel injection senses an excess of intake air for the engine speed and throttle opening and cuts the fuel supply
# ::alignments 27-28|0.3.3.0 26-27|0.3.3.0.0 24-25|0.3.3 23-24|0.3 22-23|0.3.2 20-21|0.3.3.1 19-20|0.3.3.1.0 18-19|0.3.3.1.0.0 15-16|0.3.1.0 14-15|0.3.2.0 12-13|0.3.1 10-11|0.3.0 9-10|0.1 8-9|0.1.0 4-5|0 3-4|0.0 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:43.184
# ::node	0	shut-05	4-5
# ::node	0.0	jam-01	3-4
# ::node	0.1	inject-01	9-10
# ::node	0.1.0	fuel	8-9
# ::node	0.2	recommend-01	0-1
# ::node	0.3	and	23-24
# ::node	0.3.0	sense	10-11
# ::node	0.3.1	exceed-01	12-13
# ::node	0.3.1.0	air	15-16
# ::node	0.3.2	open-01	22-23
# ::node	0.3.2.0	take-01	14-15
# ::node	0.3.3	cut-02	24-25
# ::node	0.3.3.0	supply-01	27-28
# ::node	0.3.3.0.0	fuel	26-27
# ::node	0.3.3.1	and	20-21
# ::node	0.3.3.1.0	speed	19-20
# ::node	0.3.3.1.0.0	engine	18-19
# ::root	0	shut-05
# ::edge	and	op1	shut-05	0.3	0	
# ::edge	and	op1	speed	0.3.3.1	0.3.3.1.0	
# ::edge	and	op2	cut-02	0.3.3.1	0.3.3	
# ::edge	and	op2	sense	0.3	0.3.0	
# ::edge	and	op3	exceed-01	0.3	0.3.1	
# ::edge	and	op4	open-01	0.3	0.3.2	
# ::edge	and	op5	cut-02	0.3	0.3.3	
# ::edge	cut-02	ARG1	supply-01	0.3.3	0.3.3.0	
# ::edge	exceed-01	ARG1	air	0.3.1	0.3.1.0	
# ::edge	inject-01	mod	fuel	0.1	0.1.0	
# ::edge	recommend-01	ARG1	shut-05	0.2	0	
# ::edge	shut-05	ARG0	jam-01	0	0.0	
# ::edge	shut-05	ARG1	inject-01	0	0.1	
# ::edge	speed	mod	engine	0.3.3.1.0	0.3.3.1.0.0	
# ::edge	supply-01	ARG1	fuel	0.3.3.0	0.3.3.0.0	
# ::edge	take-01	ARG1	open-01	0.3.2.0	0.3.2	
(s4 / shut-05 
      :ARG0 (j / jam-01) 
      :ARG1 (i / inject-01 
            :mod (f2 / fuel)) 
      :ARG1-of (r / recommend-01) 
      :op-of (a / and 
            :op1 (s3 / sense) 
            :op2 (e2 / exceed-01 
                  :ARG1 (a3 / air)) 
            :op3 (o / open-01 
                  :ARG1-of (t / take-01)) 
            :op4 (c / cut-02 
                  :ARG1 (s / supply-01 
                        :ARG1 (f / fuel)) 
                  :op-of (a2 / and 
                        :op1 (s2 / speed 
                              :mod (e / engine))))))

# ::snt virgin last night refused to comment but estimates are that the deal could be worth well in excess of 50m making it one of the largest investments by a japanese organisation in a uk company
# ::tok virgin last night refused to comment but estimates are that the deal could be worth well in excess of 50m making it one of the largest investments by a japanese organisation in a uk company
# ::alignments 34-35|0.0.1.0.0 30-31|0.0.1.0 26-27|0.0.1 25-26|0.0.1.1.0+0.0.1.1 21-22|0.1.0 17-18|0.0.1.0.1 15-16|0.0.1.0.1.0 14-15|0.1.1 12-13|0.1.1.0 11-12|0.1 7-8|0.1.1.0.0 6-7|0 5-6|0.0 3-4|0.0.2 2-3|0.0.0 1-2|0.0.0.0 0-1|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:43.476
# ::node	0	contrast-01	6-7
# ::node	0.0	comment-01	5-6
# ::node	0.0.0	night	2-3
# ::node	0.0.0.0	last	1-2
# ::node	0.0.0.1	virgin	0-1
# ::node	0.0.1	invest-01	26-27
# ::node	0.0.1.0	organize-01	30-31
# ::node	0.0.1.0.0	company	34-35
# ::node	0.0.1.0.1	exceed-01	17-18
# ::node	0.0.1.0.1.0	well	15-16
# ::node	0.0.1.1	large	25-26
# ::node	0.0.1.1.0	most	25-26
# ::node	0.0.2	refuse-01	3-4
# ::node	0.1	deal-01	11-12
# ::node	0.1.0	it	21-22
# ::node	0.1.1	worth	14-15
# ::node	0.1.1.0	possible	12-13
# ::node	0.1.1.0.0	estimate-01	7-8
# ::root	0	contrast-01
# ::edge	comment-01	ARG0	night	0.0	0.0.0	
# ::edge	comment-01	ARG1	invest-01	0.0	0.0.1	
# ::edge	contrast-01	ARG1	comment-01	0	0.0	
# ::edge	deal-01	ARG1	it	0.1	0.1.0	
# ::edge	deal-01	ARG2	contrast-01	0.1	0	
# ::edge	estimate-01	ARG1	possible	0.1.1.0.0	0.1.1.0	
# ::edge	exceed-01	ARG1	organize-01	0.0.1.0.1	0.0.1.0	
# ::edge	exceed-01	time	well	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	invest-01	ARG1	organize-01	0.0.1	0.0.1.0	
# ::edge	invest-01	mod	large	0.0.1	0.0.1.1	
# ::edge	large	degree	most	0.0.1.1	0.0.1.1.0	
# ::edge	night	mod	last	0.0.0	0.0.0.0	
# ::edge	night	mod	virgin	0.0.0	0.0.0.1	
# ::edge	organize-01	ARG1	company	0.0.1.0	0.0.1.0.0	
# ::edge	possible	domain	worth	0.1.1.0	0.1.1	
# ::edge	refuse-01	ARG1	comment-01	0.0.2	0.0	
# ::edge	worth	domain	deal-01	0.1.1	0.1	
(c2 / contrast-01 
      :ARG1 (c3 / comment-01 
            :ARG0 (n / night 
                  :mod (l2 / last) 
                  :mod (v / virgin)) 
            :ARG1 (i / invest-01 
                  :ARG1 (o / organize-01 
                        :ARG1 (c / company) 
                        :ARG1-of (e / exceed-01 
                              :time (w / well))) 
                  :mod (l / large 
                        :degree (m / most))) 
            :ARG1-of (r / refuse-01)) 
      :ARG2-of (d / deal-01 
            :ARG1 (i2 / it) 
            :domain-of (w2 / worth 
                  :domain-of (p / possible 
                        :ARG1-of (e2 / estimate-01)))))

# ::snt since an excess of christmas spirit mostly alcoholic deprived this column last week of the scandals and maladministration that are its lifeblood i have been obliged to go back to the future
# ::tok since an excess of christmas spirit mostly alcoholic deprived this column last week of the scandals and maladministration that are its lifeblood i have been obliged to go back to the future
# ::alignments 31-32|0.0.0.0.0 28-29|0.2 25-26|0 22-23|0.1 21-22|0.0 16-17|0.0.0 12-13|0.0.0.1 11-12|0.0.0.1.1 10-11|0.0.0.1.0.0 9-10|0.0.0.1.0 7-8|0.0.0.0.1.0 6-7|0.0.0.0.1.0.0 5-6|0.0.0.0.1 2-3|0.0.0.0 0-1|0.0.0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:43.676
# ::node	0	oblige-02	25-26
# ::node	0.0	lifeblood	21-22
# ::node	0.0.0	and	16-17
# ::node	0.0.0.0	exceed-01	2-3
# ::node	0.0.0.0.0	future	31-32
# ::node	0.0.0.0.1	spirit	5-6
# ::node	0.0.0.0.1.0	alcohol	7-8
# ::node	0.0.0.0.1.0.0	most	6-7
# ::node	0.0.0.0.2	since	0-1
# ::node	0.0.0.1	week	12-13
# ::node	0.0.0.1.0	this	9-10
# ::node	0.0.0.1.0.0	column	10-11
# ::node	0.0.0.1.1	last	11-12
# ::node	0.1	i	22-23
# ::node	0.2	back	28-29
# ::root	0	oblige-02
# ::edge	alcohol	mod	most	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	and	domain	lifeblood	0.0.0	0.0	
# ::edge	and	op1	exceed-01	0.0.0	0.0.0.0	
# ::edge	and	op2	week	0.0.0	0.0.0.1	
# ::edge	column	mod	this	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	exceed-01	ARG0	future	0.0.0.0	0.0.0.0.0	
# ::edge	exceed-01	ARG1	spirit	0.0.0.0	0.0.0.0.1	
# ::edge	oblige-02	ARG0	lifeblood	0	0.0	
# ::edge	oblige-02	ARG1	i	0	0.1	
# ::edge	oblige-02	ARG2	back	0	0.2	
# ::edge	since	op1	exceed-01	0.0.0.0.2	0.0.0.0	
# ::edge	spirit	mod	alcohol	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	week	mod	last	0.0.0.1	0.0.0.1.1	
# ::edge	week	mod	this	0.0.0.1	0.0.0.1.0	
(o / oblige-02 
      :ARG0 (l / lifeblood 
            :domain-of (a / and 
                  :op1 (e / exceed-01 
                        :ARG0 (f / future) 
                        :ARG1 (s / spirit 
                              :mod (a2 / alcohol 
                                    :mod (m / most))) 
                        :op-of (s2 / since)) 
                  :op2 (w / week 
                        :mod (t / this 
                              :mod-of (c / column)) 
                        :mod (l2 / last)))) 
      :ARG1 (i / i) 
      :ARG2 (b / back))

# ::snt but inflation was now running in excess of 8 per cent and average earnings were up to 11 per cent
# ::tok but inflation was now running in excess of 8 per cent and average earnings were up to 11 per cent
# ::alignments 19-20|0.0.0+0.0 17-18|0.1.0.0 13-14|0.3.1 11-12|0.3 10-11|0.3.0.0+0.3.0 8-9|0.1.0.1 6-7|0.1.0 3-4|0.2 1-2|0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:43.876
# ::node	0	contrast-01	0-1
# ::node	0.0	monetary-quantity	19-20
# ::node	0.0.0	cent	19-20
# ::node	0.1	inflation	1-2
# ::node	0.1.0	exceed-01	6-7
# ::node	0.1.0.0	11	17-18
# ::node	0.1.0.1	8	8-9
# ::node	0.2	now	3-4
# ::node	0.3	and	11-12
# ::node	0.3.0	monetary-quantity	10-11
# ::node	0.3.0.0	cent	10-11
# ::node	0.3.1	earn-01	13-14
# ::root	0	contrast-01
# ::edge	and	op1	contrast-01	0.3	0	
# ::edge	and	op2	monetary-quantity	0.3	0.3.0	
# ::edge	and	op3	earn-01	0.3	0.3.1	
# ::edge	contrast-01	ARG0	monetary-quantity	0	0.0	
# ::edge	contrast-01	ARG1	inflation	0	0.1	
# ::edge	contrast-01	ARG2	now	0	0.2	
# ::edge	exceed-01	ARG0	11	0.1.0	0.1.0.0	
# ::edge	exceed-01	ARG1	inflation	0.1.0	0.1	
# ::edge	exceed-01	time	8	0.1.0	0.1.0.1	
# ::edge	monetary-quantity	unit	cent	0.0	0.0.0	
# ::edge	monetary-quantity	unit	cent	0.3.0	0.3.0.0	
(c3 / contrast-01 
      :ARG0 (m / monetary-quantity 
            :unit (c / cent)) 
      :ARG1 (i / inflation 
            :ARG1-of (e2 / exceed-01 
                  :ARG0 11 
                  :time 8)) 
      :ARG2 (n / now) 
      :op-of (a / and 
            :op1 (m2 / monetary-quantity 
                  :unit (c2 / cent)) 
            :op2 (e / earn-01)))

# ::snt reesmogg proved the point by showing that during 196573 the growth of m3 in excess of output growth averaged 9, but a similar comparison for the early thatcher years shows that whereas the average rate of growth of m3 in excess of output growth was about 14 per cent in the four years ending 1983 the average inflation rate was only about 6 per cent in the four years ending 1985
# ::tok reesmogg proved the point by showing that during 196573 the growth of m3 in excess of output growth averaged 9 , but a similar comparison for the early thatcher years shows that whereas the average rate of growth of m3 in excess of output growth was about 14 per cent in the four years ending 1983 the average inflation rate was only about 6 per cent in the four years ending 1985
# ::alignments 71-72|0.2.0.0.0.0.0.0.0.3.0.1.2.0+0.2.0.0.0.0.0.0.0.3.0.1.2 70-71|0.2.0.0.0.0.0.0.0.3.0.1 69-70|0.2.0.0.0.0.0.0.0.3.0.1.0.2+0.2.0.0.0.0.0.0.0.3.0.1.0 68-69|0.2.0.0.0.0.0.0.0.3.0.1.0.0 65-66|0.2.0.0.0.0.0.0.0.0.0+0.2.0.0.0.0.0.0.0.0 63-64|0.2.0.0.0.0.0.0.0.2.0 61-62|0.2.0.0.0.0.0.0.2 59-60|0.2.0.0.0.0.0.0.1 58-59|0.2.0.0.0.0.0.0.1.0 55-56|0.2.0.0.0.0.0.0.0.3.1+0.2.0.0.0.0.0.0.0.3 54-55|0.2.0.0.0.0.0.0.0.3.0 53-54|0.2.0.0.0.0.0.0.0.3.0.0.1+0.2.0.0.0.0.0.0.0.3.0.0 52-53|0.2.0.0.0.0.0.0.0.3.0.0.0 49-50|0.2.0.0.0.0.0.0.0.3.0.1.1.0+0.2.0.0.0.0.0.0.0.3.0.1.1 47-48|0.2.0.0.0.0.0.0.0.3.0.1.0.1 44-45|0.2.0.0.0.0.0.0.0 43-44|0.2.0.0.0.0.0.0.0.1 41-42|0.2.0.0.0.0.0.0.0.2 37-38|0.2.0.0.0.0.0.0 35-36|0.2.0.0.0.0.0 32-33|0.2.1.0 30-31|0.2 29-30|0.2.1.1+0.2.1.1.0 27-28|0.2.1.1.0.0 24-25|0.2.1 21-22|0 19-20|0.0 17-18|0.2.0.0.0 16-17|0.2.0.0 14-15|0.2.0.0.0.0 10-11|0.2.0 8-9|0.2.1.1.0.0.0.2+0.2.1.1.0.0.0.1+0.2.1.1.0.0.0.0+0.2.1.1.0.0.0 5-6|0.1 3-4|0.1.0.0 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:48.793
# ::node	0	contrast-01	21-22
# ::node	0.0	9	19-20
# ::node	0.1	show-01	5-6
# ::node	0.1.0	prove-01	1-2
# ::node	0.1.0.0	point	3-4
# ::node	0.2	show-01	30-31
# ::node	0.2.0	grow-01	10-11
# ::node	0.2.0.0	output	16-17
# ::node	0.2.0.0.0	grow-01	17-18
# ::node	0.2.0.0.0.0	exceed-01	14-15
# ::node	0.2.0.0.0.0.0	rate	35-36
# ::node	0.2.0.0.0.0.0.0	grow-01	37-38
# ::node	0.2.0.0.0.0.0.0.0	grow-01	44-45
# ::node	0.2.0.0.0.0.0.0.0.0	monetary-quantity	65-66
# ::node	0.2.0.0.0.0.0.0.0.0.0	cent	65-66
# ::node	0.2.0.0.0.0.0.0.0.1	output	43-44
# ::node	0.2.0.0.0.0.0.0.0.2	exceed-01	41-42
# ::node	0.2.0.0.0.0.0.0.0.2.0	6	63-64
# ::node	0.2.0.0.0.0.0.0.0.3	date-entity	55-56
# ::node	0.2.0.0.0.0.0.0.0.3.0	end-01	54-55
# ::node	0.2.0.0.0.0.0.0.0.3.0.0	temporal-quantity	53-54
# ::node	0.2.0.0.0.0.0.0.0.3.0.0.0	4	52-53
# ::node	0.2.0.0.0.0.0.0.0.3.0.0.1	year	53-54
# ::node	0.2.0.0.0.0.0.0.0.3.0.1	end-01	70-71
# ::node	0.2.0.0.0.0.0.0.0.3.0.1.0	temporal-quantity	69-70
# ::node	0.2.0.0.0.0.0.0.0.3.0.1.0.0	4	68-69
# ::node	0.2.0.0.0.0.0.0.0.3.0.1.0.1	14	47-48
# ::node	0.2.0.0.0.0.0.0.0.3.0.1.0.2	year	69-70
# ::node	0.2.0.0.0.0.0.0.0.3.0.1.1	monetary-quantity	49-50
# ::node	0.2.0.0.0.0.0.0.0.3.0.1.1.0	cent	49-50
# ::node	0.2.0.0.0.0.0.0.0.3.0.1.2	date-entity	71-72
# ::node	0.2.0.0.0.0.0.0.0.3.0.1.2.0	1985	71-72
# ::node	0.2.0.0.0.0.0.0.0.3.1	1983	55-56
# ::node	0.2.0.0.0.0.0.0.1	rate	59-60
# ::node	0.2.0.0.0.0.0.0.1.0	inflation	58-59
# ::node	0.2.0.0.0.0.0.0.2	only	61-62
# ::node	0.2.1	compare-01	24-25
# ::node	0.2.1.0	whereas	32-33
# ::node	0.2.1.1	year	29-30
# ::node	0.2.1.1.0	temporal-quantity	29-30
# ::node	0.2.1.1.0.0	early	27-28
# ::node	0.2.1.1.0.0.0	date-entity	8-9
# ::node	0.2.1.1.0.0.0.0	73	8-9
# ::node	0.2.1.1.0.0.0.1	65	8-9
# ::node	0.2.1.1.0.0.0.2	19	8-9
# ::root	0	contrast-01
# ::edge	compare-01	ARG1	whereas	0.2.1	0.2.1.0	
# ::edge	compare-01	ARG2	year	0.2.1	0.2.1.1	
# ::edge	contrast-01	ARG1	9	0	0.0	
# ::edge	contrast-01	ARG2	show-01	0	0.2	
# ::edge	date-entity	day	73	0.2.1.1.0.0.0	0.2.1.1.0.0.0.0	
# ::edge	date-entity	month	65	0.2.1.1.0.0.0	0.2.1.1.0.0.0.1	
# ::edge	date-entity	year	19	0.2.1.1.0.0.0	0.2.1.1.0.0.0.2	
# ::edge	date-entity	year	1983	0.2.0.0.0.0.0.0.0.3	0.2.0.0.0.0.0.0.0.3.1	
# ::edge	date-entity	year	1985	0.2.0.0.0.0.0.0.0.3.0.1.2	0.2.0.0.0.0.0.0.0.3.0.1.2.0	
# ::edge	early	op1	date-entity	0.2.1.1.0.0	0.2.1.1.0.0.0	
# ::edge	early	quant	temporal-quantity	0.2.1.1.0.0	0.2.1.1.0	
# ::edge	end-01	ARG1	temporal-quantity	0.2.0.0.0.0.0.0.0.3.0	0.2.0.0.0.0.0.0.0.3.0.0	
# ::edge	end-01	ARG1	temporal-quantity	0.2.0.0.0.0.0.0.0.3.0.1	0.2.0.0.0.0.0.0.0.3.0.1.0	
# ::edge	end-01	ARG2	end-01	0.2.0.0.0.0.0.0.0.3.0	0.2.0.0.0.0.0.0.0.3.0.1	
# ::edge	end-01	time	date-entity	0.2.0.0.0.0.0.0.0.3.0	0.2.0.0.0.0.0.0.0.3	
# ::edge	end-01	time	date-entity	0.2.0.0.0.0.0.0.0.3.0.1	0.2.0.0.0.0.0.0.0.3.0.1.2	
# ::edge	exceed-01	ARG0	6	0.2.0.0.0.0.0.0.0.2	0.2.0.0.0.0.0.0.0.2.0	
# ::edge	exceed-01	ARG0	rate	0.2.0.0.0.0	0.2.0.0.0.0.0	
# ::edge	exceed-01	ARG1	grow-01	0.2.0.0.0.0	0.2.0.0.0	
# ::edge	exceed-01	ARG1	grow-01	0.2.0.0.0.0.0.0.0.2	0.2.0.0.0.0.0.0.0	
# ::edge	grow-01	ARG0	monetary-quantity	0.2.0.0.0.0.0.0.0	0.2.0.0.0.0.0.0.0.0	
# ::edge	grow-01	ARG1	output	0.2.0	0.2.0.0	
# ::edge	grow-01	ARG1	output	0.2.0.0.0	0.2.0.0	
# ::edge	grow-01	ARG1	output	0.2.0.0.0.0.0.0.0	0.2.0.0.0.0.0.0.0.1	
# ::edge	grow-01	manner	grow-01	0.2.0.0.0.0.0.0	0.2.0.0.0.0.0.0.0	
# ::edge	grow-01	time	date-entity	0.2.0.0.0.0.0.0.0	0.2.0.0.0.0.0.0.0.3	
# ::edge	monetary-quantity	op1	end-01	0.2.0.0.0.0.0.0.0.3.0.1.1	0.2.0.0.0.0.0.0.0.3.0.1	
# ::edge	monetary-quantity	unit	cent	0.2.0.0.0.0.0.0.0.0	0.2.0.0.0.0.0.0.0.0.0	
# ::edge	monetary-quantity	unit	cent	0.2.0.0.0.0.0.0.0.3.0.1.1	0.2.0.0.0.0.0.0.0.3.0.1.1.0	
# ::edge	only	op1	grow-01	0.2.0.0.0.0.0.0.2	0.2.0.0.0.0.0.0	
# ::edge	prove-01	ARG1	point	0.1.0	0.1.0.0	
# ::edge	prove-01	ARG2	show-01	0.1.0	0.1	
# ::edge	rate	mod	grow-01	0.2.0.0.0.0.0	0.2.0.0.0.0.0.0	
# ::edge	rate	mod	grow-01	0.2.0.0.0.0.0.0.1	0.2.0.0.0.0.0.0	
# ::edge	rate	mod	inflation	0.2.0.0.0.0.0.0.1	0.2.0.0.0.0.0.0.1.0	
# ::edge	show-01	ARG0	grow-01	0.2	0.2.0	
# ::edge	show-01	ARG1	contrast-01	0.1	0	
# ::edge	show-01	manner	compare-01	0.2	0.2.1	
# ::edge	temporal-quantity	quant	14	0.2.0.0.0.0.0.0.0.3.0.1.0	0.2.0.0.0.0.0.0.0.3.0.1.0.1	
# ::edge	temporal-quantity	quant	4	0.2.0.0.0.0.0.0.0.3.0.0	0.2.0.0.0.0.0.0.0.3.0.0.0	
# ::edge	temporal-quantity	quant	4	0.2.0.0.0.0.0.0.0.3.0.1.0	0.2.0.0.0.0.0.0.0.3.0.1.0.0	
# ::edge	temporal-quantity	unit	year	0.2.0.0.0.0.0.0.0.3.0.0	0.2.0.0.0.0.0.0.0.3.0.0.1	
# ::edge	temporal-quantity	unit	year	0.2.0.0.0.0.0.0.0.3.0.1.0	0.2.0.0.0.0.0.0.0.3.0.1.0.2	
# ::edge	temporal-quantity	unit	year	0.2.1.1.0	0.2.1.1	
(c4 / contrast-01 
      :ARG1 9 
      :ARG1-of (s2 / show-01 
            :ARG2-of (p2 / prove-01 
                  :ARG1 (p / point))) 
      :ARG2 (s / show-01 
            :ARG0 (g4 / grow-01 
                  :ARG1 (o3 / output 
                        :ARG1-of (g3 / grow-01 
                              :ARG1-of (e5 / exceed-01 
                                    :ARG0 (r2 / rate 
                                          :mod (g2 / grow-01 
                                                :manner (g / grow-01 
                                                      :ARG0 (m / monetary-quantity 
                                                            :unit (c / cent)) 
                                                      :ARG1 (o2 / output) 
                                                      :ARG1-of (e3 / exceed-01 
                                                            :ARG0 6) 
                                                      :time (d2 / date-entity 
                                                            :time-of (e2 / end-01 
                                                                  :ARG1 (t2 / temporal-quantity 
                                                                        :quant 4 
                                                                        :unit (y2 / year)) 
                                                                  :ARG2 (e / end-01 
                                                                        :ARG1 (t / temporal-quantity 
                                                                              :quant 4 
                                                                              :quant 14 
                                                                              :unit (y / year)) 
                                                                        :op-of (m2 / monetary-quantity 
                                                                              :unit (c2 / cent)) 
                                                                        :time (d / date-entity 
                                                                              :year 1985))) 
                                                            :year 1983)) 
                                                :mod-of (r / rate 
                                                      :mod (i / inflation)) 
                                                :op-of (o / only))))))) 
            :manner (c3 / compare-01 
                  :ARG1 (w / whereas) 
                  :ARG2 (y3 / year 
                        :unit-of (t3 / temporal-quantity 
                              :quant-of (e4 / early 
                                    :op1 (d3 / date-entity 
                                          :day 73 
                                          :month 65 
                                          :year 19)))))))

# ::snt the latest governmentinitiated enquiry into the incidence of leukaemia in children in the sellafield area shows a tenfold excess over what would normally be expected
# ::tok the latest governmentinitiated enquiry into the incidence of leukaemia in children in the sellafield area shows a tenfold excess over what would normally be expected
# ::alignments 24-25|0.1.1 22-23|0.1.1.1 18-19|0.1 15-16|0 14-15|0.0 10-11|0.1.0 1-2|0.1.1.0.0+0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:48.955
# ::node	0	show-01	15-16
# ::node	0.0	area	14-15
# ::node	0.1	exceed-01	18-19
# ::node	0.1.0	child	10-11
# ::node	0.1.1	expect-01	24-25
# ::node	0.1.1.0	late	1-2
# ::node	0.1.1.0.0	most	1-2
# ::node	0.1.1.1	normal	22-23
# ::root	0	show-01
# ::edge	exceed-01	ARG0	child	0.1	0.1.0	
# ::edge	exceed-01	ARG1	expect-01	0.1	0.1.1	
# ::edge	expect-01	ARG1	late	0.1.1	0.1.1.0	
# ::edge	expect-01	mod	normal	0.1.1	0.1.1.1	
# ::edge	late	degree	most	0.1.1.0	0.1.1.0.0	
# ::edge	show-01	ARG0	area	0	0.0	
# ::edge	show-01	ARG1	exceed-01	0	0.1	
(s / show-01 
      :ARG0 (a / area) 
      :ARG1 (e2 / exceed-01 
            :ARG0 (c / child) 
            :ARG1 (e / expect-01 
                  :ARG1 (l / late 
                        :degree (m / most)) 
                  :mod (n / normal))))

# ::snt for when the lack of savings is bemoaned what is actually complained of is the excess of spending
# ::tok for when the lack of savings is bemoaned what is actually complained of is the excess of spending
# ::alignments 17-18|0.0.0.0 15-16|0.0.0 11-12|0.0 10-11|0.0.1 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:48.986
# ::node	0	lack-01	3-4
# ::node	0.0	complain-01	11-12
# ::node	0.0.0	exceed-01	15-16
# ::node	0.0.0.0	spend-01	17-18
# ::node	0.0.1	actual	10-11
# ::root	0	lack-01
(l / lack-01 
      :ARG0-of (c / complain-01 
            :ARG1 (e / exceed-01 
                  :ARG1 (s / spend-01)) 
            :mod (a / actual)))

# ::snt in each of these cases the majority of farmers have less than 1 hectare under the relevant crop but most achieve levels of income well in excess of their neighbours who remain outside the projects
# ::tok in each of these cases the majority of farmers have less than 1 hectare under the relevant crop but most achieve levels of income well in excess of their neighbours who remain outside the projects
# ::alignments 34-35|0.1.1.0.1.0 32-33|0.1.1.0.1 31-32|0.1.1.0 29-30|0.1.1.0.0.0 26-27|0.1.1.0.0 24-25|0.1.1.0.0.1 23-24|0.1.1.1 21-22|0.1.1 20-21|0.1 19-20|0.1.2 18-19|0 17-18|0.0.0 16-17|0.0.0.0 13-14|0.0.1+0.0 12-13|0.0.0.0.0 10-11|0.1.1.0.2 8-9|0.1.0.0+0.1.0 6-7|0.1.0.1 4-5|0.1.0.1.0 1-2|0.1.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:49.552
# ::node	0	contrast-01	18-19
# ::node	0.0	area-quantity	13-14
# ::node	0.0.0	crop	17-18
# ::node	0.0.0.0	relevant-41	16-17
# ::node	0.0.0.0.0	1	12-13
# ::node	0.0.1	hectare	13-14
# ::node	0.1	achieve-01	20-21
# ::node	0.1.0	person	8-9
# ::node	0.1.0.0	farm-01	8-9
# ::node	0.1.0.1	majority	6-7
# ::node	0.1.0.1.0	case	4-5
# ::node	0.1.0.1.0.0	each	1-2
# ::node	0.1.1	level	21-22
# ::node	0.1.1.0	remain-01	31-32
# ::node	0.1.1.0.0	exceed-01	26-27
# ::node	0.1.1.0.0.0	neighbour	29-30
# ::node	0.1.1.0.0.1	well	24-25
# ::node	0.1.1.0.1	outside	32-33
# ::node	0.1.1.0.1.0	project	34-35
# ::node	0.1.1.0.2	less	10-11
# ::node	0.1.1.1	income	23-24
# ::node	0.1.2	most	19-20
# ::root	0	contrast-01
# ::edge	achieve-01	ARG0	person	0.1	0.1.0	
# ::edge	achieve-01	ARG1	level	0.1	0.1.1	
# ::edge	achieve-01	degree	most	0.1	0.1.2	
# ::edge	area-quantity	topic	crop	0.0	0.0.0	
# ::edge	area-quantity	unit	hectare	0.0	0.0.1	
# ::edge	case	mod	each	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	contrast-01	ARG1	area-quantity	0	0.0	
# ::edge	contrast-01	ARG2	achieve-01	0	0.1	
# ::edge	exceed-01	ARG1	neighbour	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	exceed-01	time	well	0.1.1.0.0	0.1.1.0.0.1	
# ::edge	farm-01	ARG0	person	0.1.0.0	0.1.0	
# ::edge	income	mod	level	0.1.1.1	0.1.1	
# ::edge	less	op1	remain-01	0.1.1.0.2	0.1.1.0	
# ::edge	majority	poss	case	0.1.0.1	0.1.0.1.0	
# ::edge	outside	op1	project	0.1.1.0.1	0.1.1.0.1.0	
# ::edge	person	quant	majority	0.1.0	0.1.0.1	
# ::edge	relevant-41	ARG0	1	0.0.0.0	0.0.0.0.0	
# ::edge	relevant-41	ARG1	crop	0.0.0.0	0.0.0	
# ::edge	remain-01	ARG0	level	0.1.1.0	0.1.1	
# ::edge	remain-01	ARG1	exceed-01	0.1.1.0	0.1.1.0.0	
# ::edge	remain-01	location	outside	0.1.1.0	0.1.1.0.1	
(c / contrast-01 
      :ARG1 (a2 / area-quantity 
            :topic (c2 / crop 
                  :ARG1-of (r2 / relevant-41 
                        :ARG0 1)) 
            :unit (h / hectare)) 
      :ARG2 (a / achieve-01 
            :ARG0 (p2 / person 
                  :ARG0-of (f / farm-01) 
                  :quant (m2 / majority 
                        :poss (c3 / case 
                              :mod (e2 / each)))) 
            :ARG1 (l / level 
                  :ARG0-of (r / remain-01 
                        :ARG1 (e / exceed-01 
                              :ARG1 (n / neighbour) 
                              :time (w / well)) 
                        :location (o / outside 
                              :op1 (p / project)) 
                        :op-of (l2 / less)) 
                  :mod-of (i / income)) 
            :degree (m / most)))

# ::snt uncle fred and aunt ada deeply ashamed at what their excesses had produced had incarcerated her like mrs rochester in a cell albeit disguised as a wendy house
# ::tok uncle fred and aunt ada deeply ashamed at what their excesses had produced had incarcerated her like mrs rochester in a cell albeit disguised as a wendy house
# ::alignments 27-28|0.3.0.0 23-24|0.3.0 21-22|0.3 14-15|0 12-13|0.2 5-6|0.1 2-3|0.0 0-1|0.0.0.0+0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:49.604
# ::node	0	incarcerate-01	14-15
# ::node	0.0	and	2-3
# ::node	0.0.0	have-rel-role-91	0-1
# ::node	0.0.0.0	uncle	0-1
# ::node	0.1	deep	5-6
# ::node	0.2	produce-01	12-13
# ::node	0.3	cell	21-22
# ::node	0.3.0	disguise-01	23-24
# ::node	0.3.0.0	house	27-28
# ::root	0	incarcerate-01
# ::edge	disguise-01	ARG1	cell	0.3.0	0.3	
# ::edge	disguise-01	ARG2	house	0.3.0	0.3.0.0	
# ::edge	have-rel-role-91	ARG1	and	0.0.0	0.0	
# ::edge	have-rel-role-91	ARG2	uncle	0.0.0	0.0.0.0	
# ::edge	incarcerate-01	ARG0	and	0	0.0	
# ::edge	incarcerate-01	ARG1	deep	0	0.1	
# ::edge	incarcerate-01	ARG2	cell	0	0.3	
# ::edge	produce-01	ARG1	incarcerate-01	0.2	0	
(i / incarcerate-01 
      :ARG0 (a / and 
            :ARG1-of (h2 / have-rel-role-91 
                  :ARG2 (u / uncle))) 
      :ARG1 (d2 / deep) 
      :ARG1-of (p / produce-01) 
      :ARG2 (c / cell 
            :ARG1-of (d / disguise-01 
                  :ARG2 (h / house))))

# ::snt he really believed that line of blakes the path of excess leads to the tower of wisdom something like that
# ::tok he really believed that line of blakes the path of excess leads to the tower of wisdom something like that
# ::alignments 17-18|0.1 16-17|0 14-15|0.0.1 11-12|0.0 10-11|0.0.0.0 8-9|0.0.0 4-5|0.0.2.1 2-3|0.0.2 1-2|0.0.2.2 0-1|0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:49.713
# ::node	0	wisdom	16-17
# ::node	0.0	lead-03	11-12
# ::node	0.0.0	path	8-9
# ::node	0.0.0.0	exceed-01	10-11
# ::node	0.0.1	tower	14-15
# ::node	0.0.2	believe-01	2-3
# ::node	0.0.2.0	he	0-1
# ::node	0.0.2.1	line	4-5
# ::node	0.0.2.2	really	1-2
# ::node	0.1	something	17-18
# ::root	0	wisdom
(w / wisdom 
      :ARG2-of (l / lead-03 
            :ARG0 (p / path 
                  :mod (e / exceed-01)) 
            :ARG1 (t / tower) 
            :condition-of (b / believe-01 
                  :ARG0 (h / he) 
                  :ARG1 (l2 / line) 
                  :mod (r / really))) 
      :mod-of (s / something))

# ::snt the cost of modern ventilators which are required to help the patients breathing is in excess of 10000 each
# ::tok the cost of modern ventilators which are required to help the patients breathing is in excess of 10000 each
# ::alignments 18-19|0.0.0.0.2.0 17-18|0.0.0.0.2.0.0 15-16|0.0.0.0.2 12-13|0.0.0 11-12|0+0.0 9-10|0.0.0.0 7-8|0.0.0.0.0 3-4|0.0.0.0.1.0 1-2|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:49.882
# ::node	0	patient	11-12
# ::node	0.0	have-rel-role-91	11-12
# ::node	0.0.0	breathe-01	12-13
# ::node	0.0.0.0	help-01	9-10
# ::node	0.0.0.0.0	require-01	7-8
# ::node	0.0.0.0.1	cost-01	1-2
# ::node	0.0.0.0.1.0	modern	3-4
# ::node	0.0.0.0.2	exceed-01	15-16
# ::node	0.0.0.0.2.0	each	18-19
# ::node	0.0.0.0.2.0.0	10000	17-18
# ::root	0	patient
(p / patient 
      :ARG2-of (h / have-rel-role-91 
            :ARG1-of (b / breathe-01 
                  :ARG1-of (h2 / help-01 
                        :ARG1-of (r / require-01) 
                        :ARG2 (c / cost-01 
                              :ARG2 (m / modern)) 
                        :manner (e2 / exceed-01 
                              :ARG1 (e / each 
                                    :mod 10000))))))

# ::snt the surrey bowlers were no doubt scoring themselves pretty high on the deprivation scale yesterday morning when that dedicated follower of fashion ian greig invited the home side to take first strike on a wicket that had yielded three totals in excess of 450 in the last week
# ::tok the surrey bowlers were no doubt scoring themselves pretty high on the deprivation scale yesterday morning when that dedicated follower of fashion ian greig invited the home side to take first strike on a wicket that had yielded three totals in excess of 450 in the last week
# ::alignments 47-48|0.1.0 46-47|0.1.0.0 43-44|0.1.1.1 41-42|0.1 39-40|0.1.1 38-39|0.1.1.0 37-38|0 31-32|0.0 27-28|0.0.0.1 26-27|0.0.0.1.0 24-25|0.0.0 21-22|0.0.0.0 19-20|0.0.0.2 18-19|0.0.0.2.0 15-16|0.0.0.2.0.1.1 14-15|0.0.0.2.0.0.0 13-14|0.0.0.2.0.0 9-10|0.0.0.2.0.1 8-9|0.0.0.2.0.1.0 5-6|0.0.0.1.0.0 4-5|0.0.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:50.475
# ::node	0	yield-01	37-38
# ::node	0.0	strike-01	31-32
# ::node	0.0.0	invite-01	24-25
# ::node	0.0.0.0	fashion	21-22
# ::node	0.0.0.1	side	27-28
# ::node	0.0.0.1.0	home	26-27
# ::node	0.0.0.1.0.0	doubt-01	5-6
# ::node	0.0.0.1.0.0.0	-	4-5
# ::node	0.0.0.2	follow-02	19-20
# ::node	0.0.0.2.0	dedicate-01	18-19
# ::node	0.0.0.2.0.0	scale	13-14
# ::node	0.0.0.2.0.0.0	yesterday	14-15
# ::node	0.0.0.2.0.1	high	9-10
# ::node	0.0.0.2.0.1.0	pretty	8-9
# ::node	0.0.0.2.0.1.1	morning	15-16
# ::node	0.1	exceed-01	41-42
# ::node	0.1.0	week	47-48
# ::node	0.1.0.0	last	46-47
# ::node	0.1.1	total-01	39-40
# ::node	0.1.1.0	3	38-39
# ::node	0.1.1.1	450	43-44
# ::root	0	yield-01
# ::edge	dedicate-01	ARG0	scale	0.0.0.2.0	0.0.0.2.0.0	
# ::edge	dedicate-01	ARG1	follow-02	0.0.0.2.0	0.0.0.2	
# ::edge	dedicate-01	ARG4	high	0.0.0.2.0	0.0.0.2.0.1	
# ::edge	doubt-01	ARG1	home	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	doubt-01	polarity	-	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	exceed-01	ARG1	week	0.1	0.1.0	
# ::edge	follow-02	ARG1	invite-01	0.0.0.2	0.0.0	
# ::edge	high	degree	pretty	0.0.0.2.0.1	0.0.0.2.0.1.0	
# ::edge	high	location	morning	0.0.0.2.0.1	0.0.0.2.0.1.1	
# ::edge	invite-01	ARG0	fashion	0.0.0	0.0.0.0	
# ::edge	invite-01	ARG1	side	0.0.0	0.0.0.1	
# ::edge	invite-01	ARG2	strike-01	0.0.0	0.0	
# ::edge	side	mod	home	0.0.0.1	0.0.0.1.0	
# ::edge	total-01	ARG1	exceed-01	0.1.1	0.1	
# ::edge	total-01	quant	3	0.1.1	0.1.1.0	
# ::edge	total-01	time	450	0.1.1	0.1.1.1	
# ::edge	week	mod	last	0.1.0	0.1.0.0	
# ::edge	yesterday	mod	scale	0.0.0.2.0.0.0	0.0.0.2.0.0	
# ::edge	yield-01	ARG0	strike-01	0	0.0	
# ::edge	yield-01	ARG1	exceed-01	0	0.1	
(y / yield-01 
      :ARG0 (s / strike-01 
            :ARG2-of (i / invite-01 
                  :ARG0 (f / fashion) 
                  :ARG1 (s2 / side 
                        :mod (h / home 
                              :ARG1-of (d2 / doubt-01 
                                    :polarity (- / -)))) 
                  :ARG1-of (f2 / follow-02 
                        :ARG1-of (d / dedicate-01 
                              :ARG0 (s3 / scale 
                                    :mod-of (y2 / yesterday)) 
                              :ARG4 (h2 / high 
                                    :degree (p / pretty) 
                                    :location (m / morning)))))) 
      :ARG1 (e / exceed-01 
            :ARG1 (w / week 
                  :mod (l / last)) 
            :ARG1-of (t / total-01 
                  :quant 3 
                  :time 450)))

# ::snt in such circumstances mr livingstone for all his excesses may be a better bet than ms spray dash
# ::tok in such circumstances mr livingstone for all his excesses may be a better bet than ms spray dash
# ::alignments 16-17|0 13-14|0.0 9-10|0.0.2.0+0.0.2 6-7|0.0.1 2-3|0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:50.507
# ::node	0	spray-01	16-17
# ::node	0.0	bet-01	13-14
# ::node	0.0.0	circumstance	2-3
# ::node	0.0.0.0	such	1-2
# ::node	0.0.1	all	6-7
# ::node	0.0.2	date-entity	9-10
# ::node	0.0.2.0	5	9-10
# ::root	0	spray-01
# ::edge	bet-01	ARG0	circumstance	0.0	0.0.0	
# ::edge	bet-01	ARG1	all	0.0	0.0.1	
# ::edge	circumstance	mod	such	0.0.0	0.0.0.0	
# ::edge	date-entity	domain	bet-01	0.0.2	0.0	
# ::edge	date-entity	month	5	0.0.2	0.0.2.0	
# ::edge	spray-01	ARG0	bet-01	0	0.0	
(s / spray-01 
      :ARG0 (b / bet-01 
            :ARG0 (c / circumstance 
                  :mod (s2 / such)) 
            :ARG1 (a / all) 
            :domain-of (d / date-entity 
                  :month 5)))

# ::snt to date io excess of 250 local people have written to me supporting a trial opening of the sliproad and at last the county council seem to be opening their minds and listening to their concerns
# ::tok to date io excess of 250 local people have written to me supporting a trial opening of the sliproad and at last the county council seem to be opening their minds and listening to their concerns
# ::alignments 35-36|0.0.1.0 32-33|0.0.1 31-32|0.0 30-31|0.0.0.1 28-29|0.0.0 25-26|0 24-25|0.0.0.0 23-24|0.0.0.0.0 21-22|0.3 19-20|0.2.1.0 15-16|0.2 14-15|0.2.0 12-13|0.2.1 9-10|0.2.1.0.0 6-7|0.0.0.2 5-6|0.1.1 3-4|0.1 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:50.956
# ::node	0	seem-01	25-26
# ::node	0.0	and	31-32
# ::node	0.0.0	open-01	28-29
# ::node	0.0.0.0	council	24-25
# ::node	0.0.0.0.0	county	23-24
# ::node	0.0.0.1	mind	30-31
# ::node	0.0.0.2	local	6-7
# ::node	0.0.1	listen-01	32-33
# ::node	0.0.1.0	concern-01	35-36
# ::node	0.1	exceed-01	3-4
# ::node	0.1.0	date	1-2
# ::node	0.1.1	250	5-6
# ::node	0.2	open-01	15-16
# ::node	0.2.0	trial	14-15
# ::node	0.2.1	support-01	12-13
# ::node	0.2.1.0	and	19-20
# ::node	0.2.1.0.0	write-01	9-10
# ::node	0.3	last	21-22
# ::root	0	seem-01
# ::edge	and	op1	open-01	0.0	0.0.0	
# ::edge	and	op2	listen-01	0.0	0.0.1	
# ::edge	council	mod	county	0.0.0.0	0.0.0.0.0	
# ::edge	exceed-01	ARG1	date	0.1	0.1.0	
# ::edge	exceed-01	time	250	0.1	0.1.1	
# ::edge	last	domain	seem-01	0.3	0	
# ::edge	listen-01	ARG1	concern-01	0.0.1	0.0.1.0	
# ::edge	local	op1	open-01	0.0.0.2	0.0.0	
# ::edge	open-01	ARG0	council	0.0.0	0.0.0.0	
# ::edge	open-01	ARG1	mind	0.0.0	0.0.0.1	
# ::edge	open-01	ARG1	trial	0.2	0.2.0	
# ::edge	seem-01	ARG1	and	0	0.0	
# ::edge	seem-01	ARG2	exceed-01	0	0.1	
# ::edge	seem-01	condition	open-01	0	0.2	
# ::edge	support-01	ARG0	and	0.2.1	0.2.1.0	
# ::edge	support-01	ARG1	open-01	0.2.1	0.2	
# ::edge	write-01	ARG1	and	0.2.1.0.0	0.2.1.0	
(s / seem-01 
      :ARG1 (a / and 
            :op1 (o / open-01 
                  :ARG0 (c2 / council 
                        :mod (c3 / county)) 
                  :ARG1 (m / mind) 
                  :op-of (l3 / local)) 
            :op2 (l / listen-01 
                  :ARG1 (c / concern-01))) 
      :ARG2 (e / exceed-01 
            :ARG1 (d / date) 
            :time 250) 
      :condition (o2 / open-01 
            :ARG1 (t / trial) 
            :ARG1-of (s2 / support-01 
                  :ARG0 (a2 / and 
                        :ARG1-of (w / write-01)))) 
      :domain-of (l2 / last))

# ::snt what sanctions are there against an insurer turning down a settlement offer by the plaintiff within the insurance limits and thereby exposing his client the insured to personal liability on a later verdict in excess of those limits  the likelihood of abuse is of course controlled in the first instance by the strong incentive for insurers to settle whenever the likely recovery and the cost of trial exceed the policy limits, beyond that the conventional answer still adhered to in many statesfo id133 has been to make the insurer liable for the excess only on proof of malicious refusal to settle in violation of his implied covenant of good faith
# ::tok what sanctions are there against an insurer turning down a settlement offer by the plaintiff within the insurance limits and thereby exposing his client the insured to personal liability on a later verdict in excess of those limits the likelihood of abuse is of course controlled in the first instance by the strong incentive for insurers to settle whenever the likely recovery and the cost of trial exceed the policy limits , beyond that the conventional answer still adhered to in many statesfo id133 has been to make the insurer liable for the excess only on proof of malicious refusal to settle in violation of his implied covenant of good faith
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:50.960
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt in addition voluntary insurance of various kinds provides an option for the riskaverse and those needing excess coverage
# ::tok in addition voluntary insurance of various kinds provides an option for the riskaverse and those needing excess coverage
# ::alignments 17-18|0 16-17|0.1 13-14|0.2 9-10|0.2.0 7-8|0.2.0.0 6-7|0.2.0.0.1 5-6|0.0 3-4|0.2.0.0.0 2-3|0.2.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:51.088
# ::node	0	cover-03	17-18
# ::node	0.0	various	5-6
# ::node	0.1	exceed-01	16-17
# ::node	0.2	and	13-14
# ::node	0.2.0	option	9-10
# ::node	0.2.0.0	provide-01	7-8
# ::node	0.2.0.0.0	insure-02	3-4
# ::node	0.2.0.0.0.0	volunteer-01	2-3
# ::node	0.2.0.0.1	kind	6-7
# ::root	0	cover-03
# ::edge	and	op1	option	0.2	0.2.0	
# ::edge	and	op2	cover-03	0.2	0	
# ::edge	cover-03	ARG1	various	0	0.0	
# ::edge	exceed-01	ARG1	cover-03	0.1	0	
# ::edge	provide-01	ARG0	option	0.2.0.0	0.2.0	
# ::edge	provide-01	ARG1	insure-02	0.2.0.0	0.2.0.0.0	
# ::edge	provide-01	duration	kind	0.2.0.0	0.2.0.0.1	
# ::edge	volunteer-01	ARG1	insure-02	0.2.0.0.0.0	0.2.0.0.0	
(c / cover-03 
      :ARG1 (v / various) 
      :ARG1-of (e / exceed-01) 
      :op-of (a / and 
            :op1 (o / option 
                  :ARG0-of (p / provide-01 
                        :ARG1 (i / insure-02 
                              :ARG1-of (v2 / volunteer-01)) 
                        :duration (k / kind)))))

# ::snt the bicentenary may have had its absurd side and its excesses
# ::tok the bicentenary may have had its absurd side and its excesses
# ::alignments 8-9|0 7-8|0.1 6-7|0.1.0 2-3|0.0.0+0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:51.104
# ::node	0	and	8-9
# ::node	0.0	date-entity	2-3
# ::node	0.0.0	5	2-3
# ::node	0.1	side	7-8
# ::node	0.1.0	absurd	6-7
# ::root	0	and
# ::edge	and	op1	side	0	0.1	
# ::edge	date-entity	domain	and	0.0	0	
# ::edge	date-entity	month	5	0.0	0.0.0	
# ::edge	side	mod	absurd	0.1	0.1.0	
(a / and 
      :domain-of (d / date-entity 
            :month 5) 
      :op1 (s / side 
            :mod (a2 / absurd)))

# ::snt it is analogous to arguing that countries like britain that fought beside the soviet union in the alliance against nazi germany in doing so approved of and furthered the excesses of stalin
# ::tok it is analogous to arguing that countries like britain that fought beside the soviet union in the alliance against nazi germany in doing so approved of and furthered the excesses of stalin
# ::alignments 26-27|0.3 24-25|0 23-24|0.2 22-23|0.3.1.2 19-20|0.3.0.0 17-18|0.1 14-15|0.3.1.1.0 11-12|0.3.1.1 10-11|0.3.1 8-9|0.3.1.0.0.0+0.3.1.0.0+0.3.1.0 6-7|0.0 4-5|0.3.0 0-1|0.3.1.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:51.259
# ::node	0	approve-01	24-25
# ::node	0.0	country	6-7
# ::node	0.1	alliance	17-18
# ::node	0.2	so	23-24
# ::node	0.3	and	26-27
# ::node	0.3.0	argue-01	4-5
# ::node	0.3.0.0	nazi	19-20
# ::node	0.3.1	fight-01	10-11
# ::node	0.3.1.0	country	8-9
# ::node	0.3.1.0.0	name	8-9
# ::node	0.3.1.0.0.0	"Britain"	8-9
# ::node	0.3.1.1	beside	11-12
# ::node	0.3.1.1.0	union	14-15
# ::node	0.3.1.2	do-02	22-23
# ::node	0.3.1.2.0	it	0-1
# ::root	0	approve-01
# ::edge	and	op1	approve-01	0.3	0	
# ::edge	approve-01	ARG0	country	0	0.0	
# ::edge	approve-01	ARG1	alliance	0	0.1	
# ::edge	approve-01	manner	so	0	0.2	
# ::edge	argue-01	ARG0	nazi	0.3.0	0.3.0.0	
# ::edge	argue-01	ARG1	and	0.3.0	0.3	
# ::edge	beside	op1	union	0.3.1.1	0.3.1.1.0	
# ::edge	country	name	name	0.3.1.0	0.3.1.0.0	
# ::edge	do-02	ARG1	it	0.3.1.2	0.3.1.2.0	
# ::edge	fight-01	ARG0	country	0.3.1	0.3.1.0	
# ::edge	fight-01	ARG1	and	0.3.1	0.3	
# ::edge	fight-01	ARG2	beside	0.3.1	0.3.1.1	
# ::edge	fight-01	manner	do-02	0.3.1	0.3.1.2	
# ::edge	name	op1	"Britain"	0.3.1.0.0	0.3.1.0.0.0	
(a2 / approve-01 
      :ARG0 (c2 / country) 
      :ARG1 (a3 / alliance) 
      :manner (s / so) 
      :op-of (a / and 
            :ARG1-of (a4 / argue-01 
                  :ARG0 (n / nazi)) 
            :ARG1-of (f / fight-01 
                  :ARG0 (c / country 
                        :name (n2 / name 
                              :op1 "Britain")) 
                  :ARG2 (b / beside 
                        :op1 (u / union)) 
                  :manner (d / do-02 
                        :ARG1 (i / it)))))

# ::snt the notice had been issued because of his failure to display a valid ticket informing him that as a result there was a 15 excess charge to pay
# ::tok the notice had been issued because of his failure to display a valid ticket informing him that as a result there was a 15 excess charge to pay
# ::alignments 27-28|0.0.0.0.1 24-25|0.0.0.0.1.0 23-24|0.0.1 19-20|0 13-14|0.0.2.0 12-13|0.0.2.0.0 10-11|0.0.2 8-9|0.0 5-6|0.0.0 4-5|0.0.0.0 1-2|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:51.377
# ::node	0	result-01	19-20
# ::node	0.0	fail-01	8-9
# ::node	0.0.0	cause-01	5-6
# ::node	0.0.0.0	issue-01	4-5
# ::node	0.0.0.0.0	notice	1-2
# ::node	0.0.0.0.1	pay-01	27-28
# ::node	0.0.0.0.1.0	exceed-01	24-25
# ::node	0.0.1	15	23-24
# ::node	0.0.2	display-01	10-11
# ::node	0.0.2.0	ticket	13-14
# ::node	0.0.2.0.0	valid-41	12-13
# ::root	0	result-01
# ::edge	cause-01	ARG0	fail-01	0.0.0	0.0	
# ::edge	cause-01	ARG1	issue-01	0.0.0	0.0.0.0	
# ::edge	display-01	ARG1	ticket	0.0.2	0.0.2.0	
# ::edge	exceed-01	ARG2	pay-01	0.0.0.0.1.0	0.0.0.0.1	
# ::edge	fail-01	ARG1	15	0.0	0.0.1	
# ::edge	fail-01	ARG2	display-01	0.0	0.0.2	
# ::edge	issue-01	ARG1	notice	0.0.0.0	0.0.0.0.0	
# ::edge	pay-01	ARG1	issue-01	0.0.0.0.1	0.0.0.0	
# ::edge	result-01	ARG1	fail-01	0	0.0	
# ::edge	valid-41	ARG1	ticket	0.0.2.0.0	0.0.2.0	
(r / result-01 
      :ARG1 (f / fail-01 
            :ARG0-of (c / cause-01 
                  :ARG1 (i / issue-01 
                        :ARG1 (n / notice) 
                        :ARG1-of (p / pay-01 
                              :ARG2-of (e / exceed-01)))) 
            :ARG1 15 
            :ARG2 (d / display-01 
                  :ARG1 (t / ticket 
                        :ARG1-of (v / valid-41)))))

# ::snt the national figure seems to be the national figure of food poisoning cases this year looks like being in excess of sixty thousand
# ::tok the national figure seems to be the national figure of food poisoning cases this year looks like being in excess of sixty thousand
# ::alignments 19-20|0.1.0 15-16|0.1.0.0 14-15|0.1.0.0.0 13-14|0.1.0.0.0.0 12-13|0.0.0 10-11|0.0 8-9|0.1 7-8|0.1.2 3-4|0 2-3|0.1.1 1-2|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:51.529
# ::node	0	seem-01	3-4
# ::node	0.0	food	10-11
# ::node	0.0.0	case	12-13
# ::node	0.1	figure	8-9
# ::node	0.1.0	exceed-01	19-20
# ::node	0.1.0.0	look-02	15-16
# ::node	0.1.0.0.0	year	14-15
# ::node	0.1.0.0.0.0	this	13-14
# ::node	0.1.1	figure	2-3
# ::node	0.1.1.0	nation	1-2
# ::node	0.1.2	nation	7-8
# ::root	0	seem-01
# ::edge	case	mod	food	0.0.0	0.0	
# ::edge	exceed-01	ARG2	figure	0.1.0	0.1	
# ::edge	figure	domain	figure	0.1	0.1.1	
# ::edge	figure	mod	nation	0.1	0.1.2	
# ::edge	figure	mod	nation	0.1.1	0.1.1.0	
# ::edge	look-02	ARG0	year	0.1.0.0	0.1.0.0.0	
# ::edge	look-02	ARG1	exceed-01	0.1.0.0	0.1.0	
# ::edge	seem-01	ARG0	food	0	0.0	
# ::edge	seem-01	ARG1	figure	0	0.1	
# ::edge	year	mod	this	0.1.0.0.0	0.1.0.0.0.0	
(s / seem-01 
      :ARG0 (f / food 
            :mod-of (c / case)) 
      :ARG1 (f2 / figure 
            :ARG2-of (e / exceed-01 
                  :ARG1-of (l / look-02 
                        :ARG0 (y / year 
                              :mod (t / this)))) 
            :domain (f3 / figure 
                  :mod (n2 / nation)) 
            :mod (n / nation)))

# ::snt erotic playback can suffer from either an excess or a deficit dash
# ::tok erotic playback can suffer from either an excess or a deficit dash
# ::alignments 10-11|0.0.1.1 8-9|0.0.1 7-8|0.0.1.0 5-6|0.0.2 3-4|0.0 2-3|0 1-2|0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:51.554
# ::node	0	possible	2-3
# ::node	0.0	suffer-01	3-4
# ::node	0.0.0	playback	1-2
# ::node	0.0.0.0	erotic	0-1
# ::node	0.0.1	or	8-9
# ::node	0.0.1.0	exceed-01	7-8
# ::node	0.0.1.1	deficit	10-11
# ::node	0.0.2	either	5-6
# ::root	0	possible
# ::edge	either	op1	suffer-01	0.0.2	0.0	
# ::edge	or	op1	exceed-01	0.0.1	0.0.1.0	
# ::edge	or	op2	deficit	0.0.1	0.0.1.1	
# ::edge	playback	mod	erotic	0.0.0	0.0.0.0	
# ::edge	possible	domain	suffer-01	0	0.0	
# ::edge	suffer-01	ARG0	playback	0.0	0.0.0	
# ::edge	suffer-01	ARG1	or	0.0	0.0.1	
(p / possible 
      :domain (s / suffer-01 
            :ARG0 (p2 / playback 
                  :mod (e3 / erotic)) 
            :ARG1 (o / or 
                  :op1 (e / exceed-01) 
                  :op2 (d / deficit)) 
            :op-of (e2 / either)))

# ::snt this scheme has been designed to overcome many of the objections that were raised to the earlier scheme particularly in relation to the car parking that is now in excess of that which was originally required
# ::tok this scheme has been designed to overcome many of the objections that were raised to the earlier scheme particularly in relation to the car parking that is now in excess of that which was originally required
# ::alignments 35-36|0 34-35|0.1 29-30|0.0 27-28|0.0.0.0 23-24|0.0.1 20-21|0.0.1.0 18-19|0.0.1.0.1 17-18|0.0.1.0.0.0 16-17|0.0.1.0.0 13-14|0.0.0.1.0 10-11|0.0.0.1 7-8|0.0.0.1.1 6-7|0.0.0 4-5|0.0.0.2 1-2|0.0.0.2.0 0-1|0.0.0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:51.980
# ::node	0	require-01	35-36
# ::node	0.0	exceed-01	29-30
# ::node	0.0.0	overcome-01	6-7
# ::node	0.0.0.0	now	27-28
# ::node	0.0.0.1	objection	10-11
# ::node	0.0.0.1.0	raise-01	13-14
# ::node	0.0.0.1.1	many	7-8
# ::node	0.0.0.2	design-01	4-5
# ::node	0.0.0.2.0	scheme	1-2
# ::node	0.0.0.2.0.0	this	0-1
# ::node	0.0.1	car	23-24
# ::node	0.0.1.0	relate-01	20-21
# ::node	0.0.1.0.0	early	16-17
# ::node	0.0.1.0.0.0	scheme	17-18
# ::node	0.0.1.0.1	particular	18-19
# ::node	0.1	original	34-35
# ::root	0	require-01
# ::edge	car	mod	exceed-01	0.0.1	0.0	
# ::edge	design-01	ARG1	scheme	0.0.0.2	0.0.0.2.0	
# ::edge	design-01	ARG3	overcome-01	0.0.0.2	0.0.0	
# ::edge	exceed-01	ARG1	overcome-01	0.0	0.0.0	
# ::edge	objection	quant	many	0.0.0.1	0.0.0.1.1	
# ::edge	overcome-01	ARG0	now	0.0.0	0.0.0.0	
# ::edge	overcome-01	ARG1	objection	0.0.0	0.0.0.1	
# ::edge	raise-01	ARG1	objection	0.0.0.1.0	0.0.0.1	
# ::edge	relate-01	ARG0	early	0.0.1.0	0.0.1.0.0	
# ::edge	relate-01	ARG1	car	0.0.1.0	0.0.1	
# ::edge	relate-01	time	particular	0.0.1.0	0.0.1.0.1	
# ::edge	require-01	ARG1	exceed-01	0	0.0	
# ::edge	require-01	time	original	0	0.1	
# ::edge	scheme	mod	early	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	scheme	mod	this	0.0.0.2.0	0.0.0.2.0.0	
(r / require-01 
      :ARG1 (e / exceed-01 
            :ARG1 (o3 / overcome-01 
                  :ARG0 (n / now) 
                  :ARG1 (o2 / objection 
                        :ARG1-of (r3 / raise-01) 
                        :quant (m / many)) 
                  :ARG3-of (d / design-01 
                        :ARG1 (s2 / scheme 
                              :mod (t / this)))) 
            :mod-of (c / car 
                  :ARG1-of (r2 / relate-01 
                        :ARG0 (e2 / early 
                              :mod-of (s / scheme)) 
                        :time (p / particular)))) 
      :time (o / original))

# ::snt such excesses may be comparatively rare but what about the less clearcut cases likely to be much more common and affecting many more peoples lives
# ::tok such excesses may be comparatively rare but what about the less clearcut cases likely to be much more common and affecting many more peoples lives
# ::alignments 24-25|0.0 23-24|0.2.2.1 21-22|0.2.2.1.0 20-21|0.2.2 19-20|0.2 18-19|0.2.1.0 16-17|0.1.0.0 13-14|0.2.1 12-13|0.2.0 10-11|0.2.0.0 6-7|0 5-6|0.1 4-5|0.1.0 2-3|0.1.1.0+0.1.1 0-1|0.2.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:52.279
# ::node	0	contrast-01	6-7
# ::node	0.0	life	24-25
# ::node	0.1	rare	5-6
# ::node	0.1.0	compare-01	4-5
# ::node	0.1.0.0	much	16-17
# ::node	0.1.1	date-entity	2-3
# ::node	0.1.1.0	5	2-3
# ::node	0.2	and	19-20
# ::node	0.2.0	case	12-13
# ::node	0.2.0.0	less	10-11
# ::node	0.2.1	likely	13-14
# ::node	0.2.1.0	common	18-19
# ::node	0.2.2	affect-01	20-21
# ::node	0.2.2.0	such	0-1
# ::node	0.2.2.1	people	23-24
# ::node	0.2.2.1.0	many	21-22
# ::root	0	contrast-01
# ::edge	affect-01	ARG0	such	0.2.2	0.2.2.0	
# ::edge	affect-01	ARG1	people	0.2.2	0.2.2.1	
# ::edge	and	op1	case	0.2	0.2.0	
# ::edge	and	op2	likely	0.2	0.2.1	
# ::edge	and	op3	affect-01	0.2	0.2.2	
# ::edge	case	degree	less	0.2.0	0.2.0.0	
# ::edge	compare-01	ARG1	much	0.1.0	0.1.0.0	
# ::edge	contrast-01	ARG0	life	0	0.0	
# ::edge	contrast-01	ARG1	rare	0	0.1	
# ::edge	contrast-01	ARG2	and	0	0.2	
# ::edge	date-entity	domain	rare	0.1.1	0.1	
# ::edge	date-entity	month	5	0.1.1	0.1.1.0	
# ::edge	likely	domain	common	0.2.1	0.2.1.0	
# ::edge	people	quant	many	0.2.2.1	0.2.2.1.0	
# ::edge	rare	degree	compare-01	0.1	0.1.0	
(c3 / contrast-01 
      :ARG0 (l / life) 
      :ARG1 (r / rare 
            :degree (c4 / compare-01 
                  :ARG1 (m2 / much)) 
            :domain-of (d / date-entity 
                  :month 5)) 
      :ARG2 (a2 / and 
            :op1 (c2 / case 
                  :degree (l3 / less)) 
            :op2 (l2 / likely 
                  :domain (c / common)) 
            :op3 (a / affect-01 
                  :ARG0 (s / such) 
                  :ARG1 (p / people 
                        :quant (m / many)))))

# ::snt although his audience was smaller than expected a rail strike day under the gaze of the now obligatory tv cameras in the lofty marble halls of the riba max savaged the postmodernists and the revivalists in a manner reminiscent of the worst excesses of the french revolution
# ::tok although his audience was smaller than expected a rail strike day under the gaze of the now obligatory tv cameras in the lofty marble halls of the riba max savaged the postmodernists and the revivalists in a manner reminiscent of the worst excesses of the french revolution
# ::alignments 46-47|0.0.0.2.0.0.0 45-46|0.0.0.2.0.0.1.0+0.0.0.2.0.0.1+0.0.0.2.0.0 41-42|0.1 37-38|0.0.0.0 32-33|0 22-23|0.0.0.2.3 19-20|0.0 16-17|0.0.1 13-14|0.0.0 10-11|0.0.0.2.0.1 9-10|0.0.0.2.0 8-9|0.0.0.2.1 6-7|0.0.0.2 4-5|0.0.0.2.2 2-3|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:52.791
# ::node	0	and	32-33
# ::node	0.0	camera	19-20
# ::node	0.0.0	gaze-01	13-14
# ::node	0.0.0.0	manner	37-38
# ::node	0.0.0.1	audience	2-3
# ::node	0.0.0.2	expect-01	6-7
# ::node	0.0.0.2.0	strike-01	9-10
# ::node	0.0.0.2.0.0	country	45-46
# ::node	0.0.0.2.0.0.0	revolution	46-47
# ::node	0.0.0.2.0.0.1	name	45-46
# ::node	0.0.0.2.0.0.1.0	"France"	45-46
# ::node	0.0.0.2.0.1	day	10-11
# ::node	0.0.0.2.1	rail	8-9
# ::node	0.0.0.2.2	small	4-5
# ::node	0.0.0.2.3	lofty	22-23
# ::node	0.0.1	now	16-17
# ::node	0.1	bad	41-42
# ::root	0	and
# ::edge	and	op1	camera	0	0.0	
# ::edge	and	op2	bad	0	0.1	
# ::edge	camera	time	now	0.0	0.0.1	
# ::edge	country	name	name	0.0.0.2.0.0	0.0.0.2.0.0.1	
# ::edge	expect-01	ARG1	strike-01	0.0.0.2	0.0.0.2.0	
# ::edge	expect-01	ARG2	rail	0.0.0.2	0.0.0.2.1	
# ::edge	expect-01	source	gaze-01	0.0.0.2	0.0.0	
# ::edge	gaze-01	ARG0	manner	0.0.0	0.0.0.0	
# ::edge	gaze-01	ARG1	audience	0.0.0	0.0.0.1	
# ::edge	gaze-01	purpose	camera	0.0.0	0.0	
# ::edge	lofty	op1	expect-01	0.0.0.2.3	0.0.0.2	
# ::edge	name	op1	"France"	0.0.0.2.0.0.1	0.0.0.2.0.0.1.0	
# ::edge	revolution	mod	country	0.0.0.2.0.0.0	0.0.0.2.0.0	
# ::edge	small	compared-to	expect-01	0.0.0.2.2	0.0.0.2	
# ::edge	strike-01	ARG0	country	0.0.0.2.0	0.0.0.2.0.0	
# ::edge	strike-01	ARG1	day	0.0.0.2.0	0.0.0.2.0.1	
(a / and 
      :op1 (c2 / camera 
            :purpose-of (g / gaze-01 
                  :ARG0 (m / manner) 
                  :ARG1 (a2 / audience) 
                  :source-of (e / expect-01 
                        :ARG1 (s / strike-01 
                              :ARG0 (c / country 
                                    :mod-of (r / revolution) 
                                    :name (n / name 
                                          :op1 "France")) 
                              :ARG1 (d / day)) 
                        :ARG2 (r2 / rail) 
                        :compared-to-of (s2 / small) 
                        :op-of (l / lofty))) 
            :time (n2 / now)) 
      :op2 (b / bad))

# ::snt the garishly coloured manically blinking lights along the central gangway were joined by the grating sounds of emphatic music metallically erupting out of an excess of loudspeakers dash
# ::tok the garishly coloured manically blinking lights along the central gangway were joined by the grating sounds of emphatic music metallically erupting out of an excess of loudspeakers dash
# ::alignments 24-25|0.1.1 20-21|0.1 18-19|0.1.0.0 15-16|0.1.0 11-12|0 8-9|0.1.1.0 6-7|0.0.0 5-6|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:52.876
# ::node	0	join-01	11-12
# ::node	0.0	light	5-6
# ::node	0.0.0	along	6-7
# ::node	0.1	erupt-01	20-21
# ::node	0.1.0	sound-01	15-16
# ::node	0.1.0.0	music	18-19
# ::node	0.1.1	exceed-01	24-25
# ::node	0.1.1.0	central	8-9
# ::root	0	join-01
# ::edge	erupt-01	ARG1	sound-01	0.1	0.1.0	
# ::edge	erupt-01	ARG2	exceed-01	0.1	0.1.1	
# ::edge	exceed-01	ARG1	central	0.1.1	0.1.1.0	
# ::edge	join-01	ARG1	light	0	0.0	
# ::edge	join-01	purpose	erupt-01	0	0.1	
# ::edge	light	location	along	0.0	0.0.0	
# ::edge	sound-01	ARG1	music	0.1.0	0.1.0.0	
(j / join-01 
      :ARG1 (l / light 
            :location (a / along)) 
      :purpose (e2 / erupt-01 
            :ARG1 (s / sound-01 
                  :ARG1 (m / music)) 
            :ARG2 (e / exceed-01 
                  :ARG1 (c / central))))

# ::snt the growing reticence of conservative members to incur the wrath of the whips by seeking constructively to criticise government proposals the use by the main opposition of parliament as a mere platform from which to fight the next general election and the degeneration of the sldsdp into the obscurity of community politics effectively destroys the climate necessary for good government and denies to the people from one election to another all protection against executive excess
# ::tok the growing reticence of conservative members to incur the wrath of the whips by seeking constructively to criticise government proposals the use by the main opposition of parliament as a mere platform from which to fight the next general election and the degeneration of the sldsdp into the obscurity of community politics effectively destroys the climate necessary for good government and denies to the people from one election to another all protection against executive excess
# ::alignments 74-75|0.3.0.0.1.0.0 73-74|0.3.0.0.1.0.0.0 71-72|0.3.0.0.1.0 70-71|0.3.0.0.1.0.1 69-70|0.3.0.0.0.0 67-68|0.3.0.0.0 61-62|0.3.0.0 60-61|0.3.0.0.1 58-59|0.3.0.1.0 55-56|0.3.0.0.1.1.1 53-54|0.3.0.0.1.1 52-53|0.3.0.0.1.1.2 51-52|0.3.0.0.1.1.0 50-51|0.3.0.0.1.1.0.0 42-43|0.3.1 40-41|0.3 39-40|0.3.0 38-39|0.3.0.2 37-38|0.3.0.3 35-36|0.3.0.1 31-32|0.3.0.1.1 30-31|0.3.0.1.1.0 27-28|0.2.1.1.0+0.2.1.1+0.2.1 25-26|0.2 24-25|0.2.3 21-22|0.2.2 19-20|0.0.0+0.0 17-18|0 14-15|0.1 5-6|0.2.1.0.0+0.2.1.0 4-5|0.2.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:55.195
# ::node	0	criticize-01	17-18
# ::node	0.0	thing	19-20
# ::node	0.0.0	propose-01	19-20
# ::node	0.0.1	grow-01	1-2
# ::node	0.1	seek-01	14-15
# ::node	0.2	oppose-01	25-26
# ::node	0.2.0	conservative	4-5
# ::node	0.2.1	government-organization	27-28
# ::node	0.2.1.0	have-org-role-91	5-6
# ::node	0.2.1.0.0	member	5-6
# ::node	0.2.1.1	name	27-28
# ::node	0.2.1.1.0	"Parliament"	27-28
# ::node	0.2.2	use-01	21-22
# ::node	0.2.3	main	24-25
# ::node	0.3	and	40-41
# ::node	0.3.0	elect-01	39-40
# ::node	0.3.0.0	deny-01	61-62
# ::node	0.3.0.0.0	elect-01	67-68
# ::node	0.3.0.0.0.0	another	69-70
# ::node	0.3.0.0.1	and	60-61
# ::node	0.3.0.0.1.0	protect-01	71-72
# ::node	0.3.0.0.1.0.0	exceed-01	74-75
# ::node	0.3.0.0.1.0.0.0	executive	73-74
# ::node	0.3.0.0.1.0.1	all	70-71
# ::node	0.3.0.0.1.1	destroy-01	53-54
# ::node	0.3.0.0.1.1.0	politics	51-52
# ::node	0.3.0.0.1.1.0.0	community	50-51
# ::node	0.3.0.0.1.1.1	climate	55-56
# ::node	0.3.0.0.1.1.2	effective	52-53
# ::node	0.3.0.1	fight-01	35-36
# ::node	0.3.0.1.0	good	58-59
# ::node	0.3.0.1.1	platform	31-32
# ::node	0.3.0.1.1.0	mere	30-31
# ::node	0.3.0.2	general	38-39
# ::node	0.3.0.3	next	37-38
# ::node	0.3.1	degenerate-01	42-43
# ::root	0	criticize-01
# ::edge	and	op1	criticize-01	0.3	0	
# ::edge	and	op1	destroy-01	0.3.0.0.1	0.3.0.0.1.1	
# ::edge	and	op2	deny-01	0.3.0.0.1	0.3.0.0	
# ::edge	and	op2	elect-01	0.3	0.3.0	
# ::edge	and	op3	degenerate-01	0.3	0.3.1	
# ::edge	criticize-01	ARG1	thing	0	0.0	
# ::edge	criticize-01	ARG2	oppose-01	0	0.2	
# ::edge	deny-01	ARG1	elect-01	0.3.0.0	0.3.0.0.0	
# ::edge	destroy-01	ARG0	politics	0.3.0.0.1.1	0.3.0.0.1.1.0	
# ::edge	destroy-01	ARG1	climate	0.3.0.0.1.1	0.3.0.0.1.1.1	
# ::edge	destroy-01	manner	effective	0.3.0.0.1.1	0.3.0.0.1.1.2	
# ::edge	elect-01	ARG1	another	0.3.0.0.0	0.3.0.0.0.0	
# ::edge	elect-01	ARG1	deny-01	0.3.0	0.3.0.0	
# ::edge	elect-01	mod	general	0.3.0	0.3.0.2	
# ::edge	elect-01	mod	next	0.3.0	0.3.0.3	
# ::edge	exceed-01	mod	executive	0.3.0.0.1.0.0	0.3.0.0.1.0.0.0	
# ::edge	fight-01	ARG1	good	0.3.0.1	0.3.0.1.0	
# ::edge	fight-01	ARG2	elect-01	0.3.0.1	0.3.0	
# ::edge	government-organization	name	name	0.2.1	0.2.1.1	
# ::edge	grow-01	ARG1	thing	0.0.1	0.0	
# ::edge	have-org-role-91	ARG1	government-organization	0.2.1.0	0.2.1	
# ::edge	have-org-role-91	ARG2	member	0.2.1.0	0.2.1.0.0	
# ::edge	name	op1	"Parliament"	0.2.1.1	0.2.1.1.0	
# ::edge	oppose-01	ARG0	conservative	0.2	0.2.0	
# ::edge	oppose-01	ARG1	government-organization	0.2	0.2.1	
# ::edge	oppose-01	mod	main	0.2	0.2.3	
# ::edge	platform	mod	mere	0.3.0.1.1	0.3.0.1.1.0	
# ::edge	platform	purpose	fight-01	0.3.0.1.1	0.3.0.1	
# ::edge	politics	mod	community	0.3.0.0.1.1.0	0.3.0.0.1.1.0.0	
# ::edge	propose-01	ARG1	thing	0.0.0	0.0	
# ::edge	protect-01	ARG0	and	0.3.0.0.1.0	0.3.0.0.1	
# ::edge	protect-01	ARG2	exceed-01	0.3.0.0.1.0	0.3.0.0.1.0.0	
# ::edge	protect-01	quant	all	0.3.0.0.1.0	0.3.0.0.1.0.1	
# ::edge	seek-01	ARG1	criticize-01	0.1	0	
# ::edge	use-01	ARG1	oppose-01	0.2.2	0.2	
(c3 / criticize-01 
      :ARG1 (t / thing 
            :ARG1-of (p4 / propose-01) 
            :ARG1-of (g4 / grow-01)) 
      :ARG1-of (s / seek-01) 
      :ARG2 (o / oppose-01 
            :ARG0 (c4 / conservative) 
            :ARG1 (g3 / government-organization 
                  :ARG1-of (h / have-org-role-91 
                        :ARG2 (m3 / member)) 
                  :name (n2 / name 
                        :op1 "Parliament")) 
            :ARG1-of (u / use-01) 
            :mod (m2 / main)) 
      :op-of (a4 / and 
            :op1 (e5 / elect-01 
                  :ARG1 (d / deny-01 
                        :ARG1 (e3 / elect-01 
                              :ARG1 (a2 / another)) 
                        :op-of (a3 / and 
                              :ARG0-of (p / protect-01 
                                    :ARG2 (e / exceed-01 
                                          :mod (e2 / executive)) 
                                    :quant (a / all)) 
                              :op1 (d2 / destroy-01 
                                    :ARG0 (p2 / politics 
                                          :mod (c2 / community)) 
                                    :ARG1 (c / climate) 
                                    :manner (e4 / effective)))) 
                  :ARG2-of (f / fight-01 
                        :ARG1 (g / good) 
                        :purpose-of (p3 / platform 
                              :mod (m / mere))) 
                  :mod (g2 / general) 
                  :mod (n / next)) 
            :op2 (d3 / degenerate-01)))

# ::snt even a moderate expansion of nuclear power in third world countries as a substitute for coalfired power stations would cost in excess of 50 billion per year
# ::tok even a moderate expansion of nuclear power in third world countries as a substitute for coalfired power stations would cost in excess of 50 billion per year
# ::alignments 26-27|0.0.0.0.1.0 23-24|0.0.0.0.0 21-22|0.0.0.0.1 19-20|0.0.0.0.1.1 17-18|0.0.0 16-17|0.0.0.1 13-14|0.0.0.0 10-11|0.0 9-10|0.1.1 6-7|0.1 5-6|0.1.0 3-4|0 2-3|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:55.471
# ::node	0	expand-01	3-4
# ::node	0.0	country	10-11
# ::node	0.0.0	station	17-18
# ::node	0.0.0.0	substitute-01	13-14
# ::node	0.0.0.0.0	50	23-24
# ::node	0.0.0.0.1	exceed-01	21-22
# ::node	0.0.0.0.1.0	year	26-27
# ::node	0.0.0.0.1.1	cost-01	19-20
# ::node	0.0.0.1	power	16-17
# ::node	0.1	power	6-7
# ::node	0.1.0	nucleus	5-6
# ::node	0.1.1	world	9-10
# ::node	0.2	moderate	2-3
# ::root	0	expand-01
# ::edge	cost-01	ARG2	exceed-01	0.0.0.0.1.1	0.0.0.0.1	
# ::edge	country	topic	station	0.0	0.0.0	
# ::edge	exceed-01	ARG1	year	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	expand-01	ARG0	country	0	0.0	
# ::edge	expand-01	ARG1	power	0	0.1	
# ::edge	expand-01	manner	moderate	0	0.2	
# ::edge	power	mod	nucleus	0.1	0.1.0	
# ::edge	power	mod	world	0.1	0.1.1	
# ::edge	station	mod	power	0.0.0	0.0.0.1	
# ::edge	substitute-01	ARG0	50	0.0.0.0	0.0.0.0.0	
# ::edge	substitute-01	ARG1	exceed-01	0.0.0.0	0.0.0.0.1	
# ::edge	substitute-01	ARG2	station	0.0.0.0	0.0.0	
(e2 / expand-01 
      :ARG0 (c2 / country 
            :topic (s / station 
                  :ARG2-of (s2 / substitute-01 
                        :ARG0 50 
                        :ARG1 (e / exceed-01 
                              :ARG1 (y / year) 
                              :ARG2-of (c / cost-01))) 
                  :mod (p / power))) 
      :ARG1 (p2 / power 
            :mod (n / nucleus) 
            :mod (w / world)) 
      :manner (m / moderate))

# ::snt everything began on 13 october when soviet media leaders were summoned to a session with mr gorbachev to hear a quite unexpected lecture on their alleged excesses
# ::tok everything began on 13 october when soviet media leaders were summoned to a session with mr gorbachev to hear a quite unexpected lecture on their alleged excesses
# ::alignments 25-26|0.1.0 22-23|0.0.0.0.1.0 21-22|0.0.0.0.1.0.0.1+0.0.0.0.1.0.0 20-21|0.0.0.0.1.0.0.0 18-19|0.0.0.0.1 13-14|0.0.0.1 10-11|0.0.0 8-9|0.0.0.0.0+0.0.0.0 7-8|0.0.0.0.0.0 4-5|0.1.1+0.1 3-4|0.2 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:55.918
# ::node	0	begin-01	1-2
# ::node	0.0	everything	0-1
# ::node	0.0.0	summon-01	10-11
# ::node	0.0.0.0	person	8-9
# ::node	0.0.0.0.0	lead-02	8-9
# ::node	0.0.0.0.0.0	media	7-8
# ::node	0.0.0.0.1	hear-01	18-19
# ::node	0.0.0.0.1.0	lecture-01	22-23
# ::node	0.0.0.0.1.0.0	expect-01	21-22
# ::node	0.0.0.0.1.0.0.0	quite	20-21
# ::node	0.0.0.0.1.0.0.1	-	21-22
# ::node	0.0.0.1	session	13-14
# ::node	0.1	date-entity	4-5
# ::node	0.1.0	allege-01	25-26
# ::node	0.1.1	10	4-5
# ::node	0.2	13	3-4
# ::root	0	begin-01
# ::edge	allege-01	ARG1	date-entity	0.1.0	0.1	
# ::edge	begin-01	ARG1	everything	0	0.0	
# ::edge	begin-01	time	13	0	0.2	
# ::edge	begin-01	time	date-entity	0	0.1	
# ::edge	date-entity	month	10	0.1	0.1.1	
# ::edge	expect-01	ARG1	lecture-01	0.0.0.0.1.0.0	0.0.0.0.1.0	
# ::edge	expect-01	degree	quite	0.0.0.0.1.0.0	0.0.0.0.1.0.0.0	
# ::edge	expect-01	polarity	-	0.0.0.0.1.0.0	0.0.0.0.1.0.0.1	
# ::edge	hear-01	ARG0	person	0.0.0.0.1	0.0.0.0	
# ::edge	hear-01	ARG1	lecture-01	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	lead-02	ARG0	person	0.0.0.0.0	0.0.0.0	
# ::edge	lead-02	ARG1	media	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	summon-01	ARG0	everything	0.0.0	0.0	
# ::edge	summon-01	ARG1	person	0.0.0	0.0.0.0	
# ::edge	summon-01	ARG2	session	0.0.0	0.0.0.1	
(b / begin-01 
      :ARG1 (e2 / everything 
            :ARG0-of (s2 / summon-01 
                  :ARG1 (p / person 
                        :ARG0-of (l2 / lead-02 
                              :ARG1 (m / media)) 
                        :ARG0-of (h / hear-01 
                              :ARG1 (l / lecture-01 
                                    :ARG1-of (e / expect-01 
                                          :degree (q / quite) 
                                          :polarity -)))) 
                  :ARG2 (s / session))) 
      :time (d / date-entity 
            :ARG1-of (a / allege-01) 
            :month 10) 
      :time 13)

# ::snt his own imagination offered a punishment far in excess of his crime
# ::tok his own imagination offered a punishment far in excess of his crime
# ::alignments 11-12|0.0.0 8-9|0.0 6-7|0.2 5-6|0.1 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:55.938
# ::node	0	offer-01	3-4
# ::node	0.0	exceed-01	8-9
# ::node	0.0.0	crime	11-12
# ::node	0.1	punish-01	5-6
# ::node	0.2	far	6-7
# ::root	0	offer-01
# ::edge	exceed-01	ARG1	crime	0.0	0.0.0	
# ::edge	offer-01	ARG0	exceed-01	0	0.0	
# ::edge	offer-01	ARG1	punish-01	0	0.1	
# ::edge	offer-01	ARG2	far	0	0.2	
(o / offer-01 
      :ARG0 (e / exceed-01 
            :ARG1 (c / crime)) 
      :ARG1 (p / punish-01) 
      :ARG2 (f / far))

# ::snt michael schofield 18 of evenlode drive berinsfield admitted eight charges of theft using a motor vehicle without insurance and driving a motor vehicle on a restricted road in excess of 30mph
# ::tok michael schofield 18 of evenlode drive berinsfield admitted eight charges of theft using a motor vehicle without insurance and driving a motor vehicle on a restricted road in excess of 30mph
# ::alignments 28-29|0.2 26-27|0.2.1 25-26|0.2.1.1 22-23|0.1.0 21-22|0.1.0.0 19-20|0.1 18-19|0 17-18|0.0.2 15-16|0.0.1 14-15|0.1.1 12-13|0.0 11-12|0.0.0 8-9|0.2.0 7-8|0.0.0.0 5-6|0.2.1.0 2-3|0.2.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:56.185
# ::node	0	and	18-19
# ::node	0.0	use-01	12-13
# ::node	0.0.0	theft	11-12
# ::node	0.0.0.0	admit-01	7-8
# ::node	0.0.1	vehicle	15-16
# ::node	0.0.2	insure-02	17-18
# ::node	0.1	drive-01	19-20
# ::node	0.1.0	vehicle	22-23
# ::node	0.1.0.0	motorcycle	21-22
# ::node	0.1.1	motorcycle	14-15
# ::node	0.2	exceed-01	28-29
# ::node	0.2.0	8	8-9
# ::node	0.2.1	road	26-27
# ::node	0.2.1.0	drive-01	5-6
# ::node	0.2.1.1	restrict-01	25-26
# ::node	0.2.1.1.0	18	2-3
# ::root	0	and
# ::edge	admit-01	ARG1	theft	0.0.0.0	0.0.0	
# ::edge	and	op1	use-01	0	0.0	
# ::edge	and	op2	drive-01	0	0.1	
# ::edge	and	op3	exceed-01	0	0.2	
# ::edge	drive-01	ARG1	road	0.2.1.0	0.2.1	
# ::edge	drive-01	ARG1	vehicle	0.1	0.1.0	
# ::edge	drive-01	ARG2	motorcycle	0.1	0.1.1	
# ::edge	exceed-01	ARG1	8	0.2	0.2.0	
# ::edge	restrict-01	ARG0	18	0.2.1.1	0.2.1.1.0	
# ::edge	restrict-01	ARG1	road	0.2.1.1	0.2.1	
# ::edge	road	mod	exceed-01	0.2.1	0.2	
# ::edge	use-01	ARG0	theft	0.0	0.0.0	
# ::edge	use-01	ARG1	vehicle	0.0	0.0.1	
# ::edge	use-01	ARG2	insure-02	0.0	0.0.2	
# ::edge	vehicle	mod	motorcycle	0.1.0	0.1.0.0	
(a / and 
      :op1 (u / use-01 
            :ARG0 (t / theft 
                  :ARG1-of (a2 / admit-01)) 
            :ARG1 (v2 / vehicle) 
            :ARG2 (i / insure-02)) 
      :op2 (d / drive-01 
            :ARG1 (v / vehicle 
                  :mod (m / motorcycle)) 
            :ARG2 (m2 / motorcycle)) 
      :op3 (e / exceed-01 
            :ARG1 8 
            :mod-of (r / road 
                  :ARG1-of (d2 / drive-01) 
                  :ARG1-of (r2 / restrict-01 
                        :ARG0 18))))

# ::snt taking account of all material considerations and assuming everything in mrs sutcliffes favour the amount of the award was very substantially in excess of any sum which could reasonably have been thought appropriate to compensate her
# ::tok taking account of all material considerations and assuming everything in mrs sutcliffes favour the amount of the award was very substantially in excess of any sum which could reasonably have been thought appropriate to compensate her
# ::alignments 34-35|0.0.1.0.0.0 32-33|0.0.1.0.0.0.0 31-32|0.0.1.0.0 28-29|0.0.1.0.0.2 27-28|0.0.1.0.0.1 25-26|0.0.1.0 24-25|0.0.1.0.1 22-23|0.0.1 20-21|0.2.0.0.0 19-20|0.2.0.0 17-18|0.0.0 14-15|0.2.0.1 12-13|0.2.0 8-9|0.2.1 7-8|0.2 6-7|0 5-6|0.1 4-5|0.1.0 3-4|0.1.1 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:56.511
# ::node	0	and	6-7
# ::node	0.0	account	1-2
# ::node	0.0.0	award-01	17-18
# ::node	0.0.1	exceed-01	22-23
# ::node	0.0.1.0	sum	25-26
# ::node	0.0.1.0.0	think-01	31-32
# ::node	0.0.1.0.0.0	compensate-01	34-35
# ::node	0.0.1.0.0.0.0	appropriate	32-33
# ::node	0.0.1.0.0.1	possible	27-28
# ::node	0.0.1.0.0.2	reasonable	28-29
# ::node	0.0.1.0.1	any	24-25
# ::node	0.1	consider-01	5-6
# ::node	0.1.0	material	4-5
# ::node	0.1.1	all	3-4
# ::node	0.2	assume-02	7-8
# ::node	0.2.0	favor-01	12-13
# ::node	0.2.0.0	very	19-20
# ::node	0.2.0.0.0	substantial	20-21
# ::node	0.2.0.1	amount	14-15
# ::node	0.2.1	everything	8-9
# ::root	0	and
# ::edge	and	op1	account	0	0.0	
# ::edge	and	op2	consider-01	0	0.1	
# ::edge	and	op3	assume-02	0	0.2	
# ::edge	appropriate	domain	compensate-01	0.0.1.0.0.0.0	0.0.1.0.0.0	
# ::edge	assume-02	ARG0	favor-01	0.2	0.2.0	
# ::edge	assume-02	ARG1	everything	0.2	0.2.1	
# ::edge	award-01	ARG0	account	0.0.0	0.0	
# ::edge	consider-01	mod	material	0.1	0.1.0	
# ::edge	consider-01	quant	all	0.1	0.1.1	
# ::edge	exceed-01	ARG0	sum	0.0.1	0.0.1.0	
# ::edge	exceed-01	ARG1	account	0.0.1	0.0	
# ::edge	favor-01	ARG0	very	0.2.0	0.2.0.0	
# ::edge	favor-01	ARG1	amount	0.2.0	0.2.0.1	
# ::edge	possible	domain	think-01	0.0.1.0.0.1	0.0.1.0.0	
# ::edge	substantial	degree	very	0.2.0.0.0	0.2.0.0	
# ::edge	sum	mod	any	0.0.1.0	0.0.1.0.1	
# ::edge	think-01	ARG1	sum	0.0.1.0.0	0.0.1.0	
# ::edge	think-01	ARG2	compensate-01	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	think-01	mod	reasonable	0.0.1.0.0	0.0.1.0.0.2	
(a6 / and 
      :op1 (a8 / account 
            :ARG0-of (a3 / award-01) 
            :ARG1-of (e / exceed-01 
                  :ARG0 (s / sum 
                        :ARG1-of (t / think-01 
                              :ARG2 (c / compensate-01 
                                    :domain-of (a / appropriate)) 
                              :domain-of (p / possible) 
                              :mod (r / reasonable)) 
                        :mod (a2 / any)))) 
      :op2 (c2 / consider-01 
            :mod (m / material) 
            :quant (a7 / all)) 
      :op3 (a5 / assume-02 
            :ARG0 (f / favor-01 
                  :ARG0 (v / very 
                        :degree-of (s2 / substantial)) 
                  :ARG1 (a4 / amount)) 
            :ARG1 (e2 / everything)))

# ::snt with the contradictions excesses and ambiguities of her subject
# ::tok with the contradictions excesses and ambiguities of her subject
# ::alignments 8-9|0.0 5-6|0.1 4-5|0 2-3|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:01:56.522
# ::node	0	and	4-5
# ::node	0.0	subject	8-9
# ::node	0.1	ambiguity	5-6
# ::node	0.1.0	contradiction	2-3
# ::root	0	and
# ::edge	ambiguity	mod	contradiction	0.1	0.1.0	
# ::edge	and	mod	subject	0	0.0	
# ::edge	and	op1	ambiguity	0	0.1	
(a2 / and 
      :mod (s / subject) 
      :op1 (a / ambiguity 
            :mod (c / contradiction)))

