# ::snt   the wildness of the suggestion that their own father should wait until they had grown up before being allowed access to his own sons revealed as well as pain a generous love
# ::tok the wildness of the suggestion that their own father should wait until they had grown up before being allowed access to his own sons revealed as well as pain a generous love
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:22.185
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt hes a very generous actor and obviously hes very full
# ::tok hes a very generous actor and obviously hes very full
# ::alignments 9-10|0.0 8-9|0.0.0 6-7|0 5-6|0.1 3-4|0.1.0 2-3|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:22.929
# ::node	0	obvious-41	6-7
# ::node	0.0	full	9-10
# ::node	0.0.0	very	8-9
# ::node	0.1	and	5-6
# ::node	0.1.0	generous-41	3-4
# ::node	0.1.0.0	very	2-3
# ::root	0	obvious-41
# ::edge	and	op1	obvious-41	0.1	0	
# ::edge	full	degree	very	0.0	0.0.0	
# ::edge	generous-41	ARG1	and	0.1.0	0.1	
# ::edge	generous-41	degree	very	0.1.0	0.1.0.0	
# ::edge	obvious-41	ARG1	full	0	0.0	
(o / obvious-41 
      :ARG1 (f / full 
            :degree (v / very)) 
      :op-of (a / and 
            :ARG1-of (g / generous-41 
                  :degree (v2 / very))))

# ::snt a more generous supply of illustrations might have helped the reader place him in the history of 20thcentury art
# ::tok a more generous supply of illustrations might have helped the reader place him in the history of 20thcentury art
# ::alignments 18-19|0.0.0.0 15-16|0.0.0 11-12|0.0 10-11|0.1.0+0.1 8-9|0 3-4|0.1.1.0 2-3|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:23.442
# ::node	0	help-01	8-9
# ::node	0.0	place	11-12
# ::node	0.0.0	history	15-16
# ::node	0.0.0.0	art	18-19
# ::node	0.1	person	10-11
# ::node	0.1.0	read-01	10-11
# ::node	0.1.1	generous-41	2-3
# ::node	0.1.1.0	supply-01	3-4
# ::root	0	help-01
# ::edge	generous-41	ARG0	person	0.1.1	0.1	
# ::edge	generous-41	ARG1	supply-01	0.1.1	0.1.1.0	
# ::edge	help-01	ARG1	place	0	0.0	
# ::edge	help-01	ARG2	person	0	0.1	
# ::edge	history	poss	art	0.0.0	0.0.0.0	
# ::edge	place	frequency	history	0.0	0.0.0	
# ::edge	read-01	ARG0	person	0.1.0	0.1	
(h2 / help-01 
      :ARG1 (p / place 
            :frequency (h / history 
                  :poss (a / art))) 
      :ARG2 (p2 / person 
            :ARG0-of (r / read-01) 
            :ARG0-of (g / generous-41 
                  :ARG1 (s / supply-01))))

# ::snt   people have been very generous and we raised about 200 within the first few hours
# ::tok people have been very generous and we raised about 200 within the first few hours
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:23.443
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt aries mar 21apr 20 there are some hefty hints being thrown around on tuesday from folk who may be angling for a favour a promise or a generous gesture
# ::tok aries mar 21apr 20 there are some hefty hints being thrown around on tuesday from folk who may be angling for a favour a promise or a generous gesture
# ::alignments 28-29|0.0.0.0.1 27-28|0.0.0.0.1.0 25-26|0.0.0.0 24-25|0.0.0.0.0 22-23|0.0.0 17-18|0.1.1.0.0+0.1.1.0 15-16|0.1.1 11-12|0.1.0 10-11|0.1 8-9|0 6-7|0.2 3-4|0.0.0.0.0.0 1-2|0.0.1+0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:24.221
# ::node	0	hint-01	8-9
# ::node	0.0	date-entity	1-2
# ::node	0.0.0	favor-01	22-23
# ::node	0.0.0.0	or	25-26
# ::node	0.0.0.0.0	promise-01	24-25
# ::node	0.0.0.0.0.0	20	3-4
# ::node	0.0.0.0.1	gesture-01	28-29
# ::node	0.0.0.0.1.0	generous-41	27-28
# ::node	0.0.1	3	1-2
# ::node	0.1	throw-01	10-11
# ::node	0.1.0	around	11-12
# ::node	0.1.1	folk	15-16
# ::node	0.1.1.0	date-entity	17-18
# ::node	0.1.1.0.0	5	17-18
# ::node	0.2	some	6-7
# ::root	0	hint-01
# ::edge	date-entity	month	3	0.0	0.0.1	
# ::edge	date-entity	month	5	0.1.1.0	0.1.1.0.0	
# ::edge	favor-01	ARG0	or	0.0.0	0.0.0.0	
# ::edge	favor-01	ARG1	date-entity	0.0.0	0.0	
# ::edge	folk	mod	date-entity	0.1.1	0.1.1.0	
# ::edge	generous-41	ARG1	gesture-01	0.0.0.0.1.0	0.0.0.0.1	
# ::edge	hint-01	ARG0	date-entity	0	0.0	
# ::edge	hint-01	mod	some	0	0.2	
# ::edge	or	op1	promise-01	0.0.0.0	0.0.0.0.0	
# ::edge	or	op2	gesture-01	0.0.0.0	0.0.0.0.1	
# ::edge	promise-01	ARG1	20	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	throw-01	ARG1	hint-01	0.1	0	
# ::edge	throw-01	ARG2	around	0.1	0.1.0	
# ::edge	throw-01	location	folk	0.1	0.1.1	
(h / hint-01 
      :ARG0 (d2 / date-entity 
            :ARG1-of (f / favor-01 
                  :ARG0 (o / or 
                        :op1 (p / promise-01 
                              :ARG1 20) 
                        :op2 (g / gesture-01 
                              :ARG1-of (g2 / generous-41)))) 
            :month 3) 
      :ARG1-of (t / throw-01 
            :ARG2 (a / around) 
            :location (f2 / folk 
                  :mod (d / date-entity 
                        :month 5))) 
      :mod (s / some))

# ::snt it would be generous to call them fireworks but that implies something decorative to which ones response is aaah not aaagh
# ::tok it would be generous to call them fireworks but that implies something decorative to which ones response is aaah not aaagh
# ::alignments 16-17|0.0.0 15-16|0.0.0.0 11-12|0.1.0 10-11|0.1 8-9|0 7-8|0.0 3-4|0.0.1 0-1|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:24.713
# ::node	0	contrast-01	8-9
# ::node	0.0	firework	7-8
# ::node	0.0.0	respond-01	16-17
# ::node	0.0.0.0	one	15-16
# ::node	0.0.1	generous-41	3-4
# ::node	0.0.1.0	it	0-1
# ::node	0.1	imply-01	10-11
# ::node	0.1.0	something	11-12
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	firework	0	0.0	
# ::edge	contrast-01	ARG2	imply-01	0	0.1	
# ::edge	generous-41	ARG1	firework	0.0.1	0.0	
# ::edge	generous-41	domain	it	0.0.1	0.0.1.0	
# ::edge	imply-01	ARG1	something	0.1	0.1.0	
# ::edge	respond-01	ARG0	firework	0.0.0	0.0	
# ::edge	respond-01	ARG1	one	0.0.0	0.0.0.0	
(c / contrast-01 
      :ARG1 (f / firework 
            :ARG0-of (r / respond-01 
                  :ARG1 (o / one)) 
            :ARG1-of (g / generous-41 
                  :domain (i2 / it))) 
      :ARG2 (i / imply-01 
            :ARG1 (s / something)))

# ::snt industry is generous to imperial dash
# ::tok industry is generous to imperial dash
# ::alignments 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:24.729
# ::node	0	generous-41	2-3
# ::node	0.0	industry	0-1
# ::root	0	generous-41
# ::edge	generous-41	ARG1	industry	0	0.0	
(g / generous-41 
      :ARG1 (i / industry))

# ::snt the dunstanburgh agreement was made at christmastime in 1462 but it was not just the season which put the yorkist government in a generous mood
# ::tok the dunstanburgh agreement was made at christmastime in 1462 but it was not just the season which put the yorkist government in a generous mood
# ::alignments 24-25|0.0.0.1 23-24|0.0.0 15-16|0.1 13-14|0.1.1 10-11|0.1.0 9-10|0 8-9|0.0.0.0.0+0.0.0.0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:24.949
# ::node	0	contrast-01	9-10
# ::node	0.0	agree-01	2-3
# ::node	0.0.0	generous-41	23-24
# ::node	0.0.0.0	date-entity	8-9
# ::node	0.0.0.0.0	1462	8-9
# ::node	0.0.0.1	mood	24-25
# ::node	0.1	season	15-16
# ::node	0.1.0	it	10-11
# ::node	0.1.1	just	13-14
# ::root	0	contrast-01
# ::edge	agree-01	ARG1	generous-41	0.0	0.0.0	
# ::edge	contrast-01	ARG1	agree-01	0	0.0	
# ::edge	contrast-01	ARG2	season	0	0.1	
# ::edge	date-entity	year	1462	0.0.0.0	0.0.0.0.0	
# ::edge	generous-41	ARG0	date-entity	0.0.0	0.0.0.0	
# ::edge	generous-41	ARG1	mood	0.0.0	0.0.0.1	
# ::edge	season	domain	it	0.1	0.1.0	
# ::edge	season	mod	just	0.1	0.1.1	
(c / contrast-01 
      :ARG1 (a / agree-01 
            :ARG1 (g / generous-41 
                  :ARG0 (d / date-entity 
                        :year 1462) 
                  :ARG1 (m / mood))) 
      :ARG2 (s / season 
            :domain (i / it) 
            :mod (j / just)))

# ::snt karajan had pitched camp with legge and the philharmonia in 1949 when a generous grant from the maharaja of mysore had stabilized the orchestras finances and opened up the possibility in collaboration with emi of extensive recording not only of the classic repertory but of works that caught karajans and legges fancy balakirevs first symphony roussels fourth symphony the still formidably difficult music for strings percussion and celesta by bartoacute
# ::tok karajan had pitched camp with legge and the philharmonia in 1949 when a generous grant from the maharaja of mysore had stabilized the orchestras finances and opened up the possibility in collaboration with emi of extensive recording not only of the classic repertory but of works that caught karajans and legges fancy balakirevs first symphony roussels fourth symphony the still formidably difficult music for strings percussion and celesta by bartoacute
# ::alignments 66-67|0.2 64-65|0.0 62-63|0.2.1 61-62|0.2.1.0 59-60|0.2.1.0.0 56-57|0.2.0.0.0 51-52|0.2.0.0 49-50|0.2.0 43-44|0 41-42|0.1 38-39|0.2.0.1.1.0.0.0 36-37|0.2.0.1.0.0.1 35-36|0.2.0.1.0.0.1.0 31-32|0.2.0.1.0.0 29-30|0.2.0.1.0 26-27|0.2.0.1 25-26|0.2.0.1.1 24-25|0.2.0.1.1.1 21-22|0.2.0.1.1.0 14-15|0.2.0.1.1.0.0 13-14|0.2.0.1.1.0.0.1 10-11|0.2.0.1.0.0.0.0+0.2.0.1.0.0.0 6-7|0.2.0.1.2 3-4|0.2.0.1.2.0 2-3|0.2.0.1.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:27.353
# ::node	0	contrast-01	43-44
# ::node	0.0	string	64-65
# ::node	0.1	classic	41-42
# ::node	0.2	and	66-67
# ::node	0.2.0	and	49-50
# ::node	0.2.0.0	fancy-02	51-52
# ::node	0.2.0.0.0	fourth	56-57
# ::node	0.2.0.1	open-01	26-27
# ::node	0.2.0.1.0	possible	29-30
# ::node	0.2.0.1.0.0	collaborate-01	31-32
# ::node	0.2.0.1.0.0.0	date-entity	10-11
# ::node	0.2.0.1.0.0.0.0	1949	10-11
# ::node	0.2.0.1.0.0.1	record-01	36-37
# ::node	0.2.0.1.0.0.1.0	extensive	35-36
# ::node	0.2.0.1.1	and	25-26
# ::node	0.2.0.1.1.0	stabilize-01	21-22
# ::node	0.2.0.1.1.0.0	grant-01	14-15
# ::node	0.2.0.1.1.0.0.0	only	38-39
# ::node	0.2.0.1.1.0.0.1	generous-41	13-14
# ::node	0.2.0.1.1.1	finance	24-25
# ::node	0.2.0.1.2	and	6-7
# ::node	0.2.0.1.2.0	camp	3-4
# ::node	0.2.0.1.2.0.0	pitch-03	2-3
# ::node	0.2.1	music	62-63
# ::node	0.2.1.0	difficult	61-62
# ::node	0.2.1.0.0	still	59-60
# ::root	0	contrast-01
# ::edge	and	op1	camp	0.2.0.1.2	0.2.0.1.2.0	
# ::edge	and	op1	finance	0.2.0.1.1	0.2.0.1.1.1	
# ::edge	and	op1	music	0.2	0.2.1	
# ::edge	and	op1	open-01	0.2.0	0.2.0.1	
# ::edge	and	op2	and	0.2.0	0.2	
# ::edge	and	op2	open-01	0.2.0.1.1	0.2.0.1	
# ::edge	and	op2	open-01	0.2.0.1.2	0.2.0.1	
# ::edge	collaborate-01	ARG1	date-entity	0.2.0.1.0.0	0.2.0.1.0.0.0	
# ::edge	collaborate-01	ARG2	record-01	0.2.0.1.0.0	0.2.0.1.0.0.1	
# ::edge	contrast-01	ARG0	string	0	0.0	
# ::edge	contrast-01	ARG1	classic	0	0.1	
# ::edge	contrast-01	ARG2	and	0	0.2	
# ::edge	date-entity	year	1949	0.2.0.1.0.0.0	0.2.0.1.0.0.0.0	
# ::edge	difficult	time	still	0.2.1.0	0.2.1.0.0	
# ::edge	fancy-02	ARG0	fourth	0.2.0.0	0.2.0.0.0	
# ::edge	fancy-02	ARG1	and	0.2.0.0	0.2.0	
# ::edge	grant-01	ARG1	only	0.2.0.1.1.0.0	0.2.0.1.1.0.0.0	
# ::edge	grant-01	mod	generous-41	0.2.0.1.1.0.0	0.2.0.1.1.0.0.1	
# ::edge	music	mod	difficult	0.2.1	0.2.1.0	
# ::edge	open-01	ARG1	possible	0.2.0.1	0.2.0.1.0	
# ::edge	pitch-03	ARG1	camp	0.2.0.1.2.0.0	0.2.0.1.2.0	
# ::edge	possible	domain	collaborate-01	0.2.0.1.0	0.2.0.1.0.0	
# ::edge	record-01	mod	extensive	0.2.0.1.0.0.1	0.2.0.1.0.0.1.0	
# ::edge	stabilize-01	ARG1	grant-01	0.2.0.1.1.0	0.2.0.1.1.0.0	
# ::edge	stabilize-01	ARG2	and	0.2.0.1.1.0	0.2.0.1.1	
(c / contrast-01 
      :ARG0 (s / string) 
      :ARG1 (c2 / classic) 
      :ARG2 (a / and 
            :op-of (a2 / and 
                  :ARG1-of (f2 / fancy-02 
                        :ARG0 (f / fourth)) 
                  :op1 (o2 / open-01 
                        :ARG1 (p / possible 
                              :domain (c3 / collaborate-01 
                                    :ARG1 (d2 / date-entity 
                                          :year 1949) 
                                    :ARG2 (r / record-01 
                                          :mod (e / extensive)))) 
                        :op-of (a3 / and 
                              :ARG2-of (s3 / stabilize-01 
                                    :ARG1 (g / grant-01 
                                          :ARG1 (o / only) 
                                          :mod (g2 / generous-41))) 
                              :op1 (f3 / finance)) 
                        :op-of (a4 / and 
                              :op1 (c4 / camp 
                                    :ARG1-of (p2 / pitch-03))))) 
            :op1 (m / music 
                  :mod (d / difficult 
                        :time (s2 / still)))))

# ::snt this underrated writer must be the most generous with material i know
# ::tok this underrated writer must be the most generous with material i know
# ::alignments 11-12|0 10-11|0.0 9-10|0.0.0.1 7-8|0.0.0 6-7|0.0.0.2 2-3|0.0.0.0.0+0.0.0.0 0-1|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:27.410
# ::node	0	know-01	11-12
# ::node	0.0	i	10-11
# ::node	0.0.0	generous-41	7-8
# ::node	0.0.0.0	person	2-3
# ::node	0.0.0.0.0	write-01	2-3
# ::node	0.0.0.0.1	this	0-1
# ::node	0.0.0.1	material	9-10
# ::node	0.0.0.2	most	6-7
# ::root	0	know-01
# ::edge	generous-41	ARG0	person	0.0.0	0.0.0.0	
# ::edge	generous-41	ARG1	i	0.0.0	0.0	
# ::edge	generous-41	ARG2	material	0.0.0	0.0.0.1	
# ::edge	generous-41	degree	most	0.0.0	0.0.0.2	
# ::edge	know-01	ARG0	i	0	0.0	
# ::edge	person	mod	this	0.0.0.0	0.0.0.0.1	
# ::edge	write-01	ARG0	person	0.0.0.0.0	0.0.0.0	
(k / know-01 
      :ARG0 (i / i 
            :ARG1-of (g / generous-41 
                  :ARG0 (p / person 
                        :ARG0-of (w / write-01) 
                        :mod (t / this)) 
                  :ARG2 (m / material) 
                  :degree (m2 / most))))

# ::snt some claim the die is already cast more generous souls mindful of russias huge capacity to endure misery might extend the grace period to five years
# ::tok some claim the die is already cast more generous souls mindful of russias huge capacity to endure misery might extend the grace period to five years
# ::alignments 25-26|0.0.2.0.1+0.0.2.0 24-25|0.0.2.0.0 22-23|0.0.1.0 21-22|0.0.1.0.0 19-20|0.0.1 17-18|0 16-17|0.0 14-15|0.0.0 13-14|0.0.0.0 9-10|0.0.2.1 8-9|0.0.2.1.0 6-7|0.0.2 5-6|0.0.2.3 3-4|0.0.2.2 1-2|0.0.2.2.0 0-1|0.0.2.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:28.808
# ::node	0	misery	17-18
# ::node	0.0	endure-01	16-17
# ::node	0.0.0	capacity	14-15
# ::node	0.0.0.0	huge	13-14
# ::node	0.0.1	extend-01	19-20
# ::node	0.0.1.0	period	22-23
# ::node	0.0.1.0.0	grace-01	21-22
# ::node	0.0.2	cast-01	6-7
# ::node	0.0.2.0	temporal-quantity	25-26
# ::node	0.0.2.0.0	5	24-25
# ::node	0.0.2.0.1	year	25-26
# ::node	0.0.2.1	soul	9-10
# ::node	0.0.2.1.0	generous-41	8-9
# ::node	0.0.2.2	die-01	3-4
# ::node	0.0.2.2.0	claim-01	1-2
# ::node	0.0.2.2.0.0	some	0-1
# ::node	0.0.2.3	already	5-6
# ::root	0	misery
(m / misery 
      :manner-of (e2 / endure-01 
            :ARG0 (c / capacity 
                  :mod (h / huge)) 
            :ARG1 (e / extend-01 
                  :ARG1 (p / period 
                        :ARG0-of (g / grace-01))) 
            :purpose-of (c2 / cast-01 
                  :ARG0 (t / temporal-quantity 
                        :quant 5 
                        :unit (y / year)) 
                  :ARG1 (s / soul 
                        :ARG1-of (g2 / generous-41)) 
                  :ARG2 (d / die-01 
                        :ARG1 (c3 / claim-01 
                              :quant (s2 / some))) 
                  :time (a / already))))

# ::snt due to these generous contributions we were able to provide a high standard low cost product which we can donate to the students with great pleasure
# ::tok due to these generous contributions we were able to provide a high standard low cost product which we can donate to the students with great pleasure
# ::alignments 25-26|0.0.2.0.0 24-25|0.0.2.0.0.0 22-23|0.0.2.0+0.0.2 19-20|0.0 18-19|0 17-18|0.0.0 15-16|0.0.1 14-15|0.0.1.0 13-14|0.0.1.0.0 12-13|0.0.1.1 11-12|0.0.1.0.1 9-10|0.0.0.0 7-8|0.0.0.0.2 5-6|0.0.0.0.0 4-5|0.0.0.0.1 3-4|0.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:29.298
# ::node	0	possible	18-19
# ::node	0.0	donate-01	19-20
# ::node	0.0.0	we	17-18
# ::node	0.0.0.0	provide-01	9-10
# ::node	0.0.0.0.0	we	5-6
# ::node	0.0.0.0.1	contribute-01	4-5
# ::node	0.0.0.0.1.0	generous-41	3-4
# ::node	0.0.0.0.2	possible	7-8
# ::node	0.0.1	product	15-16
# ::node	0.0.1.0	cost-01	14-15
# ::node	0.0.1.0.0	low	13-14
# ::node	0.0.1.0.1	high	11-12
# ::node	0.0.1.1	standard	12-13
# ::node	0.0.2	person	22-23
# ::node	0.0.2.0	study-01	22-23
# ::node	0.0.2.0.0	pleasure	25-26
# ::node	0.0.2.0.0.0	great	24-25
# ::root	0	possible
# ::edge	cost-01	ARG0	product	0.0.1.0	0.0.1	
# ::edge	cost-01	ARG1	low	0.0.1.0	0.0.1.0.0	
# ::edge	cost-01	ARG2	high	0.0.1.0	0.0.1.0.1	
# ::edge	donate-01	ARG0	we	0.0	0.0.0	
# ::edge	donate-01	ARG1	product	0.0	0.0.1	
# ::edge	donate-01	ARG2	person	0.0	0.0.2	
# ::edge	generous-41	ARG2	contribute-01	0.0.0.0.1.0	0.0.0.0.1	
# ::edge	pleasure	mod	great	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	possible	domain	donate-01	0	0.0	
# ::edge	possible	domain	provide-01	0.0.0.0.2	0.0.0.0	
# ::edge	product	mod	standard	0.0.1	0.0.1.1	
# ::edge	provide-01	ARG0	we	0.0.0.0	0.0.0.0.0	
# ::edge	provide-01	ARG1	contribute-01	0.0.0.0	0.0.0.0.1	
# ::edge	provide-01	ARG2	we	0.0.0.0	0.0.0	
# ::edge	study-01	ARG0	person	0.0.2.0	0.0.2	
# ::edge	study-01	ARG1	pleasure	0.0.2.0	0.0.2.0.0	
(p3 / possible 
      :domain (d / donate-01 
            :ARG0 (w / we 
                  :ARG2-of (p5 / provide-01 
                        :ARG0 (w2 / we) 
                        :ARG1 (c2 / contribute-01 
                              :ARG2-of (g2 / generous-41)) 
                        :domain-of (p6 / possible))) 
            :ARG1 (p4 / product 
                  :ARG0-of (c / cost-01 
                        :ARG1 (l / low) 
                        :ARG2 (h / high)) 
                  :mod (s2 / standard)) 
            :ARG2 (p2 / person 
                  :ARG0-of (s / study-01 
                        :ARG1 (p / pleasure 
                              :mod (g / great))))))

# ::snt   oh if only she was inside expecting him worrying about the delay opening the door with a generous smile and warm arms
# ::tok oh if only she was inside expecting him worrying about the delay opening the door with a generous smile and warm arms
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:29.299
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt i would feel more generous towards my parents if i loved them and felt they had given me a happy childhood
# ::tok i would feel more generous towards my parents if i loved them and felt they had given me a happy childhood
# ::alignments 20-21|0.1 19-20|0.1.0 16-17|0 14-15|0.0 13-14|0.2 12-13|0.2.1 10-11|0.2.0.0 9-10|0.2.0 7-8|0.2.1.0.1.0.0+0.2.1.0.1.0 4-5|0.2.1.0.1 2-3|0.2.1.0 0-1|0.2.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:29.779
# ::node	0	give-01	16-17
# ::node	0.0	they	14-15
# ::node	0.1	childhood	20-21
# ::node	0.1.0	happy	19-20
# ::node	0.2	feel-01	13-14
# ::node	0.2.0	i	9-10
# ::node	0.2.0.0	love-01	10-11
# ::node	0.2.1	and	12-13
# ::node	0.2.1.0	feel-01	2-3
# ::node	0.2.1.0.0	i	0-1
# ::node	0.2.1.0.1	generous-41	4-5
# ::node	0.2.1.0.1.0	have-rel-role-91	7-8
# ::node	0.2.1.0.1.0.0	parent	7-8
# ::root	0	give-01
# ::edge	and	op1	feel-01	0.2.1	0.2	
# ::edge	childhood	mod	happy	0.1	0.1.0	
# ::edge	feel-01	ARG0	i	0.2	0.2.0	
# ::edge	feel-01	ARG0	i	0.2.1.0	0.2.1.0.0	
# ::edge	feel-01	ARG1	generous-41	0.2.1.0	0.2.1.0.1	
# ::edge	feel-01	ARG1	give-01	0.2	0	
# ::edge	feel-01	condition	and	0.2.1.0	0.2.1	
# ::edge	generous-41	ARG1	have-rel-role-91	0.2.1.0.1	0.2.1.0.1.0	
# ::edge	give-01	ARG0	they	0	0.0	
# ::edge	give-01	ARG1	childhood	0	0.1	
# ::edge	have-rel-role-91	ARG2	parent	0.2.1.0.1.0	0.2.1.0.1.0.0	
# ::edge	love-01	ARG0	i	0.2.0.0	0.2.0	
(g / give-01 
      :ARG0 (t / they) 
      :ARG1 (c / childhood 
            :mod (h / happy)) 
      :ARG1-of (f / feel-01 
            :ARG0 (i / i 
                  :ARG0-of (l / love-01)) 
            :op-of (a / and 
                  :condition-of (f2 / feel-01 
                        :ARG0 (i2 / i) 
                        :ARG1 (g2 / generous-41 
                              :ARG1 (h2 / have-rel-role-91 
                                    :ARG2 (p / parent)))))))

# ::snt northants have the batting to destroy anyone and bowling which if occasionally on the generous side of philanthropic can follow suit
# ::tok northants have the batting to destroy anyone and bowling which if occasionally on the generous side of philanthropic can follow suit
# ::alignments 20-21|0.0.1 19-20|0.0 18-19|0 15-16|0.0.2 14-15|0.0.2.0 11-12|0.0.2.1 8-9|0.0.0.0.0.0 7-8|0.0.0.0.0 6-7|0.0.0 5-6|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:30.098
# ::node	0	possible	18-19
# ::node	0.0	follow-02	19-20
# ::node	0.0.0	anyone	6-7
# ::node	0.0.0.0	destroy-01	5-6
# ::node	0.0.0.0.0	and	7-8
# ::node	0.0.0.0.0.0	bowl-01	8-9
# ::node	0.0.1	suit-01	20-21
# ::node	0.0.2	side	15-16
# ::node	0.0.2.0	generous-41	14-15
# ::node	0.0.2.1	occasional	11-12
# ::root	0	possible
# ::edge	and	op1	bowl-01	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	destroy-01	ARG0	and	0.0.0.0	0.0.0.0.0	
# ::edge	destroy-01	ARG1	anyone	0.0.0.0	0.0.0	
# ::edge	follow-02	ARG0	anyone	0.0	0.0.0	
# ::edge	follow-02	ARG1	suit-01	0.0	0.0.1	
# ::edge	follow-02	ARG2	side	0.0	0.0.2	
# ::edge	generous-41	ARG1	side	0.0.2.0	0.0.2	
# ::edge	possible	domain	follow-02	0	0.0	
# ::edge	side	direction	occasional	0.0.2	0.0.2.1	
(p / possible 
      :domain (f / follow-02 
            :ARG0 (a2 / anyone 
                  :ARG1-of (d / destroy-01 
                        :ARG0 (a / and 
                              :op1 (b / bowl-01)))) 
            :ARG1 (s / suit-01) 
            :ARG2 (s2 / side 
                  :ARG1-of (g / generous-41) 
                  :direction (o / occasional))))

# ::snt the setting was superb there were generous gardens and wide playing fields
# ::tok the setting was superb there were generous gardens and wide playing fields
# ::alignments 11-12|0.1 10-11|0.1.0 9-10|0.1.1 8-9|0 7-8|0.0 6-7|0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:30.133
# ::node	0	and	8-9
# ::node	0.0	garden	7-8
# ::node	0.0.0	generous-41	6-7
# ::node	0.0.0.0	set-02	1-2
# ::node	0.1	field	11-12
# ::node	0.1.0	play-01	10-11
# ::node	0.1.1	wide	9-10
# ::root	0	and
# ::edge	and	op1	garden	0	0.0	
# ::edge	and	op2	field	0	0.1	
# ::edge	field	mod	play-01	0.1	0.1.0	
# ::edge	field	mod	wide	0.1	0.1.1	
# ::edge	generous-41	ARG1	garden	0.0.0	0.0	
# ::edge	set-02	ARG1	generous-41	0.0.0.0	0.0.0	
(a / and 
      :op1 (g / garden 
            :ARG1-of (g2 / generous-41 
                  :ARG1-of (s / set-02))) 
      :op2 (f / field 
            :mod (p / play-01) 
            :mod (w / wide)))

# ::snt movies as truffaut said resemble those who make them and his are a generous facsimile
# ::tok movies as truffaut said resemble those who make them and his are a generous facsimile
# ::alignments 13-14|0.2 9-10|0.1 3-4|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:30.158
# ::node	0	say-01	3-4
# ::node	0.0	movie	0-1
# ::node	0.1	and	9-10
# ::node	0.2	generous-41	13-14
# ::root	0	say-01
# ::edge	generous-41	ARG1	say-01	0.2	0	
# ::edge	say-01	ARG0	movie	0	0.0	
# ::edge	say-01	ARG1	and	0	0.1	
(s / say-01 
      :ARG0 (m / movie) 
      :ARG1 (a / and) 
      :ARG1-of (g / generous-41))

# ::snt this message could be reinforced by less generous settlements in the public sector
# ::tok this message could be reinforced by less generous settlements in the public sector
# ::alignments 12-13|0.0.0.1 11-12|0.0.0.1.0 8-9|0.0.0 7-8|0.0.0.0 6-7|0.0.0.0.0 4-5|0.0 2-3|0 1-2|0.0.1 0-1|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:30.384
# ::node	0	possible	2-3
# ::node	0.0	reinforce-01	4-5
# ::node	0.0.0	settlement	8-9
# ::node	0.0.0.0	generous-41	7-8
# ::node	0.0.0.0.0	less	6-7
# ::node	0.0.0.1	sector	12-13
# ::node	0.0.0.1.0	public	11-12
# ::node	0.0.1	message	1-2
# ::node	0.0.1.0	this	0-1
# ::root	0	possible
# ::edge	generous-41	ARG1	settlement	0.0.0.0	0.0.0	
# ::edge	generous-41	degree	less	0.0.0.0	0.0.0.0.0	
# ::edge	message	mod	this	0.0.1	0.0.1.0	
# ::edge	possible	domain	reinforce-01	0	0.0	
# ::edge	reinforce-01	ARG0	settlement	0.0	0.0.0	
# ::edge	reinforce-01	ARG1	message	0.0	0.0.1	
# ::edge	sector	mod	public	0.0.0.1	0.0.0.1.0	
# ::edge	settlement	poss	sector	0.0.0	0.0.0.1	
(p2 / possible 
      :domain (r / reinforce-01 
            :ARG0 (s2 / settlement 
                  :ARG1-of (g / generous-41 
                        :degree (l / less)) 
                  :poss (s / sector 
                        :mod (p / public))) 
            :ARG1 (m / message 
                  :mod (t / this))))

# ::snt this herb has tiny leaves here and is furiously strong i made tea from some herbs i picked put in a generous sprig of peppermint and spat out the result in shock
# ::tok this herb has tiny leaves here and is furiously strong i made tea from some herbs i picked put in a generous sprig of peppermint and spat out the result in shock
# ::alignments 31-32|0.0.0.3.0 29-30|0.0.0.3.0.0 25-26|0.0.0.3 21-22|0.2 17-18|0 16-17|0.0 14-15|0.1 12-13|0.0.0.2.0.0.0 10-11|0.0.0.2.0.0 9-10|0.0.0.2.0 6-7|0.0.0.2 5-6|0.0.0.0 4-5|0.0.0 3-4|0.0.0.1 0-1|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:30.643
# ::node	0	pick-04	17-18
# ::node	0.0	i	16-17
# ::node	0.0.0	leave-01	4-5
# ::node	0.0.0.0	here	5-6
# ::node	0.0.0.1	tiny	3-4
# ::node	0.0.0.2	and	6-7
# ::node	0.0.0.2.0	strong	9-10
# ::node	0.0.0.2.0.0	i	10-11
# ::node	0.0.0.2.0.0.0	tea	12-13
# ::node	0.0.0.3	and	25-26
# ::node	0.0.0.3.0	shock-01	31-32
# ::node	0.0.0.3.0.0	result-01	29-30
# ::node	0.1	some	14-15
# ::node	0.2	generous-41	21-22
# ::node	0.2.0	this	0-1
# ::root	0	pick-04
# ::edge	and	op1	leave-01	0.0.0.2	0.0.0	
# ::edge	and	op1	leave-01	0.0.0.3	0.0.0	
# ::edge	and	op2	shock-01	0.0.0.3	0.0.0.3.0	
# ::edge	and	op2	strong	0.0.0.2	0.0.0.2.0	
# ::edge	generous-41	ARG0	this	0.2	0.2.0	
# ::edge	generous-41	ARG1	pick-04	0.2	0	
# ::edge	i	mod	strong	0.0.0.2.0.0	0.0.0.2.0	
# ::edge	leave-01	ARG0	i	0.0.0	0.0	
# ::edge	leave-01	location	here	0.0.0	0.0.0.0	
# ::edge	leave-01	mod	tiny	0.0.0	0.0.0.1	
# ::edge	pick-04	ARG0	i	0	0.0	
# ::edge	pick-04	ARG1	some	0	0.1	
# ::edge	result-01	ARG1	shock-01	0.0.0.3.0.0	0.0.0.3.0	
# ::edge	tea	mod	i	0.0.0.2.0.0.0	0.0.0.2.0.0	
(p / pick-04 
      :ARG0 (i / i 
            :ARG0-of (l / leave-01 
                  :location (h / here) 
                  :mod (t2 / tiny) 
                  :op-of (a2 / and 
                        :op1 (s3 / strong 
                              :mod-of (i2 / i 
                                    :mod-of (t / tea)))) 
                  :op-of (a / and 
                        :op1 (s / shock-01 
                              :ARG1-of (r / result-01))))) 
      :ARG1 (s2 / some) 
      :ARG1-of (g / generous-41 
            :ARG0 (t3 / this)))

# ::snt in recognition of dr rausings generous contribution to the post the readership is to be called the vigfuacute
# ::tok in recognition of dr rausings generous contribution to the post the readership is to be called the vigfuacute
# ::alignments 11-12|0+0.0 9-10|0.0.0.0.0 6-7|0.0.0.0 5-6|0.0.0.0.1 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:30.716
# ::node	0	read-01	11-12
# ::node	0.0	person	11-12
# ::node	0.0.0	recognize-01	1-2
# ::node	0.0.0.0	contribute-01	6-7
# ::node	0.0.0.0.0	post	9-10
# ::node	0.0.0.0.1	generous-41	5-6
# ::root	0	read-01
# ::edge	contribute-01	ARG1	post	0.0.0.0	0.0.0.0.0	
# ::edge	generous-41	ARG2	contribute-01	0.0.0.0.1	0.0.0.0	
# ::edge	read-01	ARG0	person	0	0.0	
# ::edge	recognize-01	ARG0	person	0.0.0	0.0	
# ::edge	recognize-01	ARG1	contribute-01	0.0.0	0.0.0.0	
(r / read-01 
      :ARG0 (p / person 
            :ARG0-of (r2 / recognize-01 
                  :ARG1 (c / contribute-01 
                        :ARG1 (p2 / post) 
                        :ARG2-of (g / generous-41)))))

# ::snt then dig a generous sized planting hole
# ::tok then dig a generous sized planting hole
# ::alignments 6-7|0 5-6|0.2 4-5|0.3 3-4|0.0 1-2|0.1 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:30.737
# ::node	0	hole	6-7
# ::node	0.0	generous-41	3-4
# ::node	0.1	dig-01	1-2
# ::node	0.1.0	then	0-1
# ::node	0.2	plant-01	5-6
# ::node	0.3	size-01	4-5
# ::root	0	hole
(h / hole 
      :ARG1-of (g / generous-41) 
      :ARG1-of (d / dig-01 
            :time (t / then)) 
      :ARG1-of (p / plant-01) 
      :ARG1-of (s / size-01))

# ::snt of the five district councils in oxfordshire oxford citys bus pass system is both the most convenient and generous compared to the bus token scheme used by south oxfordshire vale of white horse and west oxfordshire or the miserly effort of cherwell who match the money put in by the parish councils
# ::tok of the five district councils in oxfordshire oxford citys bus pass system is both the most convenient and generous compared to the bus token scheme used by south oxfordshire vale of white horse and west oxfordshire or the miserly effort of cherwell who match the money put in by the parish councils
# ::alignments 51-52|0.0.2 45-46|0.2.0.0 43-44|0.2.0 39-40|0.2.3 36-37|0.2 34-35|0.0.0 33-34|0 32-33|0.1 31-32|0.1.0 27-28|0.2.2.3.1.0 25-26|0.0 24-25|0.0.1 22-23|0.2.2.3.1.1 19-20|0.2.2.3.1 18-19|0.2.2.3 17-18|0.2.2 16-17|0.2.2.2 15-16|0.2.2.3.2 13-14|0.2.1 11-12|0.2.2.0 9-10|0.2.2.0.0 4-5|0.2.2.1 3-4|0.2.2.1.0 2-3|0.2.2.3.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:31.458
# ::node	0	and	33-34
# ::node	0.0	use-01	25-26
# ::node	0.0.0	west	34-35
# ::node	0.0.1	scheme	24-25
# ::node	0.0.2	council	51-52
# ::node	0.1	horse	32-33
# ::node	0.1.0	white	31-32
# ::node	0.2	or	36-37
# ::node	0.2.0	match-01	43-44
# ::node	0.2.0.0	money	45-46
# ::node	0.2.1	both	13-14
# ::node	0.2.2	and	17-18
# ::node	0.2.2.0	system	11-12
# ::node	0.2.2.0.0	bus	9-10
# ::node	0.2.2.1	council	4-5
# ::node	0.2.2.1.0	district	3-4
# ::node	0.2.2.2	convenient	16-17
# ::node	0.2.2.3	generous-41	18-19
# ::node	0.2.2.3.0	5	2-3
# ::node	0.2.2.3.1	compare-01	19-20
# ::node	0.2.2.3.1.0	south	27-28
# ::node	0.2.2.3.1.1	bus	22-23
# ::node	0.2.2.3.2	most	15-16
# ::node	0.2.3	effort	39-40
# ::root	0	and
# ::edge	and	domain	system	0.2.2	0.2.2.0	
# ::edge	and	mod	council	0.2.2	0.2.2.1	
# ::edge	and	op1	convenient	0.2.2	0.2.2.2	
# ::edge	and	op1	use-01	0	0.0	
# ::edge	and	op2	generous-41	0.2.2	0.2.2.3	
# ::edge	and	op2	horse	0	0.1	
# ::edge	and	op3	or	0	0.2	
# ::edge	compare-01	ARG1	south	0.2.2.3.1	0.2.2.3.1.0	
# ::edge	compare-01	ARG2	bus	0.2.2.3.1	0.2.2.3.1.1	
# ::edge	council	mod	district	0.2.2.1	0.2.2.1.0	
# ::edge	council	op1	use-01	0.0.2	0.0	
# ::edge	generous-41	ARG0	5	0.2.2.3	0.2.2.3.0	
# ::edge	generous-41	ARG1	compare-01	0.2.2.3	0.2.2.3.1	
# ::edge	generous-41	degree	most	0.2.2.3	0.2.2.3.2	
# ::edge	horse	mod	white	0.1	0.1.0	
# ::edge	match-01	ARG0	or	0.2.0	0.2	
# ::edge	match-01	ARG1	money	0.2.0	0.2.0.0	
# ::edge	or	mod	both	0.2	0.2.1	
# ::edge	or	op1	and	0.2	0.2.2	
# ::edge	or	op2	effort	0.2	0.2.3	
# ::edge	system	mod	bus	0.2.2.0	0.2.2.0.0	
# ::edge	use-01	ARG0	west	0.0	0.0.0	
# ::edge	use-01	ARG1	scheme	0.0	0.0.1	
(a / and 
      :op1 (u / use-01 
            :ARG0 (w / west) 
            :ARG1 (s2 / scheme) 
            :op-of (c / council)) 
      :op2 (h / horse 
            :mod (w2 / white)) 
      :op3 (o / or 
            :ARG0-of (m2 / match-01 
                  :ARG1 (m / money)) 
            :mod (b2 / both) 
            :op1 (a2 / and 
                  :domain (s3 / system 
                        :mod (b3 / bus)) 
                  :mod (c4 / council 
                        :mod (d / district)) 
                  :op1 (c3 / convenient) 
                  :op2 (g / generous-41 
                        :ARG0 5 
                        :ARG1 (c2 / compare-01 
                              :ARG1 (s / south) 
                              :ARG2 (b / bus)) 
                        :degree (m3 / most))) 
            :op2 (e / effort)))

# ::snt the dominant theme of a whistlestop second half was of swansea driving towards harlequins line a shrill blast for a penalty followed immediately by an even shriller one and griffiths pacing out a generous 10 metres to silence the welsh invective
# ::tok the dominant theme of a whistlestop second half was of swansea driving towards harlequins line a shrill blast for a penalty followed immediately by an even shriller one and griffiths pacing out a generous 10 metres to silence the welsh invective
# ::alignments 37-38|0.0 34-35|0.1.0.0 33-34|0.1.0.1.0.0.1 28-29|0 22-23|0.1.1 21-22|0.1 20-21|0.1.0 17-18|0.1.0.1 14-15|0.1.0.1.0.0.2 11-12|0.1.0.1.0.0 7-8|0.1.0.1.0.0.0 2-3|0.1.0.1.0 1-2|0.1.0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:31.833
# ::node	0	and	28-29
# ::node	0.0	silence-01	37-38
# ::node	0.1	follow-01	21-22
# ::node	0.1.0	penalize-01	20-21
# ::node	0.1.0.0	10	34-35
# ::node	0.1.0.1	blast-05	17-18
# ::node	0.1.0.1.0	theme	2-3
# ::node	0.1.0.1.0.0	drive-01	11-12
# ::node	0.1.0.1.0.0.0	half	7-8
# ::node	0.1.0.1.0.0.1	generous-41	33-34
# ::node	0.1.0.1.0.0.2	line	14-15
# ::node	0.1.0.1.0.1	dominate-01	1-2
# ::node	0.1.1	immediate	22-23
# ::root	0	and
(a / and 
      :ARG0-of (s / silence-01) 
      :ARG1-of (f / follow-01 
            :ARG0 (p / penalize-01 
                  :ARG1 10 
                  :ARG1-of (b / blast-05 
                        :ARG0 (t / theme 
                              :ARG0-of (d / drive-01 
                                    :ARG1 (h / half) 
                                    :ARG1-of (g / generous-41) 
                                    :location (l / line)) 
                              :mod (d2 / dominate-01)))) 
            :time (i / immediate)))

# ::snt a bishop for less than three years dr carey had been a 201 outsider generous odds even then for a man few had heard of outside the diocese of bath and wells
# ::tok a bishop for less than three years dr carey had been a 201 outsider generous odds even then for a man few had heard of outside the diocese of bath and wells
# ::alignments 27-32|0.0.1.1.0.0.0+0.0.1.1.0.0.1+0.0.1.1.0.0.2+0.0.1.1.0.0.3+0.0.1.1.0.0.4+0.0.1.1.0.0+0.0.1.1.0 25-26|0.0.1.1 23-24|0.0.1 21-22|0.0.1.0 20-21|0.0.1.0.1 17-18|0.0.0 15-16|0 14-15|0.0 6-7|0.0.1.0.0.2+0.0.1.0.0 5-6|0.0.1.0.0.1 3-4|0.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:32.273
# ::node	0	odds	15-16
# ::node	0.0	generous-41	14-15
# ::node	0.0.0	then	17-18
# ::node	0.0.1	hear-01	23-24
# ::node	0.0.1.0	few	21-22
# ::node	0.0.1.0.0	temporal-quantity	6-7
# ::node	0.0.1.0.0.0	less	3-4
# ::node	0.0.1.0.0.1	3	5-6
# ::node	0.0.1.0.0.2	year	6-7
# ::node	0.0.1.0.1	man	20-21
# ::node	0.0.1.1	outside	25-26
# ::node	0.0.1.1.0	organization	27-32
# ::node	0.0.1.1.0.0	name	27-32
# ::node	0.0.1.1.0.0.0	"wells"	27-32
# ::node	0.0.1.1.0.0.1	"and"	27-32
# ::node	0.0.1.1.0.0.2	"bath"	27-32
# ::node	0.0.1.1.0.0.3	"of"	27-32
# ::node	0.0.1.1.0.0.4	"diocese"	27-32
# ::root	0	odds
(o3 / odds 
      :ARG2-of (g / generous-41 
            :ARG1 (t / then) 
            :ARG2-of (h / hear-01 
                  :ARG1 (f / few 
                        :op1 (t2 / temporal-quantity 
                              :op-of (l / less) 
                              :quant 3 
                              :unit (y / year)) 
                        :quant-of (m / man)) 
                  :location (o2 / outside 
                        :op1 (o / organization 
                              :name (n / name 
                                    :op1 "wells" 
                                    :op2 "and" 
                                    :op3 "bath" 
                                    :op4 "of" 
                                    :op5 "diocese"))))))

# ::snt a series of conversations with foundation arts students arts graduates and post graduates reveals plenty of sludge amongst a privileged group who have been the recipients of a generous slice of the united kingdoms art education cake
# ::tok a series of conversations with foundation arts students arts graduates and post graduates reveals plenty of sludge amongst a privileged group who have been the recipients of a generous slice of the united kingdoms art education cake
# ::alignments 36-37|0.1.0.0.0 35-36|0.1.0.0 34-35|0.1.0 32-33|0.1.0.0.0.0 29-30|0.1 28-29|0 20-21|0.0.1.1.2 17-18|0.0.1.1.2.0 14-15|0.0.1.0.1 13-14|0.0.1.1 12-13|0.0.1.1.1 11-12|0.0.1.1.1.0 10-11|0.0.1 9-10|0.0.1.0 8-9|0.0.1.0.0 7-8|0.0.0+0.0 6-7|0.0.0.0 5-6|0.0.0.0.0 1-2|0.0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:33.330
# ::node	0	generous-41	28-29
# ::node	0.0	person	7-8
# ::node	0.0.0	study-01	7-8
# ::node	0.0.0.0	art	6-7
# ::node	0.0.0.0.0	foundation	5-6
# ::node	0.0.1	and	10-11
# ::node	0.0.1.0	graduate-01	9-10
# ::node	0.0.1.0.0	art	8-9
# ::node	0.0.1.0.1	plenty	14-15
# ::node	0.0.1.1	reveal-01	13-14
# ::node	0.0.1.1.0	series	1-2
# ::node	0.0.1.1.1	graduate-01	12-13
# ::node	0.0.1.1.1.0	post	11-12
# ::node	0.0.1.1.2	group	20-21
# ::node	0.0.1.1.2.0	amongst	17-18
# ::node	0.1	slice	29-30
# ::node	0.1.0	art	34-35
# ::node	0.1.0.0	educate-01	35-36
# ::node	0.1.0.0.0	cake	36-37
# ::node	0.1.0.0.0.0	unite-01	32-33
# ::root	0	generous-41
# ::edge	amongst	op1	group	0.0.1.1.2.0	0.0.1.1.2	
# ::edge	and	op1	person	0.0.1	0.0	
# ::edge	and	op2	graduate-01	0.0.1	0.0.1.0	
# ::edge	and	op3	reveal-01	0.0.1	0.0.1.1	
# ::edge	art	mod	foundation	0.0.0.0	0.0.0.0.0	
# ::edge	educate-01	ARG0	cake	0.1.0.0	0.1.0.0.0	
# ::edge	educate-01	ARG1	art	0.1.0.0	0.1.0	
# ::edge	generous-41	ARG0	person	0	0.0	
# ::edge	generous-41	ARG1	slice	0	0.1	
# ::edge	graduate-01	ARG0	art	0.0.1.0	0.0.1.0.0	
# ::edge	graduate-01	ARG1	plenty	0.0.1.0	0.0.1.0.1	
# ::edge	graduate-01	ARG1	post	0.0.1.1.1	0.0.1.1.1.0	
# ::edge	reveal-01	ARG0	series	0.0.1.1	0.0.1.1.0	
# ::edge	reveal-01	ARG1	graduate-01	0.0.1.1	0.0.1.1.1	
# ::edge	reveal-01	time	group	0.0.1.1	0.0.1.1.2	
# ::edge	slice	location	art	0.1	0.1.0	
# ::edge	study-01	ARG0	person	0.0.0	0.0	
# ::edge	study-01	ARG1	art	0.0.0	0.0.0.0	
# ::edge	unite-01	ARG1	cake	0.1.0.0.0.0	0.1.0.0.0	
(g / generous-41 
      :ARG0 (p3 / person 
            :ARG0-of (s2 / study-01 
                  :ARG1 (a5 / art 
                        :mod (f / foundation))) 
            :op-of (a3 / and 
                  :op1 (g4 / graduate-01 
                        :ARG0 (a4 / art) 
                        :ARG1 (p / plenty)) 
                  :op2 (r / reveal-01 
                        :ARG0 (s3 / series) 
                        :ARG1 (g3 / graduate-01 
                              :ARG1 (p2 / post)) 
                        :time (g2 / group 
                              :op-of (a2 / amongst))))) 
      :ARG1 (s / slice 
            :location (a / art 
                  :ARG1-of (e / educate-01 
                        :ARG0 (c / cake 
                              :ARG1-of (u / unite-01))))))

# ::snt give plants generous root space
# ::tok give plants generous root space
# ::alignments 4-5|0.0 3-4|0.0.1 2-3|0.0.0 1-2|0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:33.379
# ::node	0	give-01	0-1
# ::node	0.0	space	4-5
# ::node	0.0.0	generous-41	2-3
# ::node	0.0.1	root	3-4
# ::node	0.1	plant	1-2
# ::root	0	give-01
# ::edge	give-01	ARG1	space	0	0.0	
# ::edge	give-01	ARG2	plant	0	0.1	
# ::edge	space	mod	generous-41	0.0	0.0.0	
# ::edge	space	mod	root	0.0	0.0.1	
(g2 / give-01 
      :ARG1 (s / space 
            :mod (g / generous-41) 
            :mod (r / root)) 
      :ARG2 (p / plant))

# ::snt we need as much support as we can get so if you are approached with a sponsorship form please be as generous as you can
# ::tok we need as much support as we can get so if you are approached with a sponsorship form please be as generous as you can
# ::alignments 24-25|0 23-24|0.0.0 21-22|0.0 18-19|0.0.0.0.0.1.0.1.0 17-18|0.0.0.0.0.1.0.1.0.0 13-14|0.0.0.0.0.1.0 11-12|0.0.0.0.0.1.0.1 9-10|0.0.0.0.0.1.0.2 7-8|0.0.0.0.0.1 6-7|0.0.0.0.0.1.0.0 4-5|0.0.0.0.0 3-4|0.0.0.0.0.2 1-2|0.0.0.0 0-1|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:33.553
# ::node	0	possible	24-25
# ::node	0.0	generous-41	21-22
# ::node	0.0.0	you	23-24
# ::node	0.0.0.0	need-01	1-2
# ::node	0.0.0.0.0	support-01	4-5
# ::node	0.0.0.0.0.0	we	0-1
# ::node	0.0.0.0.0.1	possible	7-8
# ::node	0.0.0.0.0.1.0	approach-02	13-14
# ::node	0.0.0.0.0.1.0.0	we	6-7
# ::node	0.0.0.0.0.1.0.1	you	11-12
# ::node	0.0.0.0.0.1.0.1.0	please-01	18-19
# ::node	0.0.0.0.0.1.0.1.0.0	form	17-18
# ::node	0.0.0.0.0.1.0.2	so	9-10
# ::node	0.0.0.0.0.2	much	3-4
# ::root	0	possible
(p / possible 
      :ARG0-of (g / generous-41 
            :ARG1 (y / you 
                  :ARG0-of (n / need-01 
                        :ARG1 (s2 / support-01 
                              :ARG0 (w2 / we) 
                              :ARG1 (p3 / possible 
                                    :time (a / approach-02 
                                          :ARG0 (w / we) 
                                          :ARG1 (y2 / you 
                                                :ARG1-of (p2 / please-01 
                                                      :ARG0 (f / form))) 
                                          :op-of (s / so))) 
                              :degree (m / much))))))

# ::snt that saints managed to cause an upset with nothing more than direct running and honest endeavour bodes well for great britain though the kiwis cannot be expected to enter the test arena in such a generous mood
# ::tok that saints managed to cause an upset with nothing more than direct running and honest endeavour bodes well for great britain though the kiwis cannot be expected to enter the test arena in such a generous mood
# ::alignments 36-37|0.1.0.0.0.2 35-36|0.1.0.0.0.2.0 33-34|0.1.0.0.0.2.0.1 31-32|0.1.0.0.0.1 30-31|0.1.0.0.0.1.0 28-29|0.1.0.0.0 26-27|0.1.0.0 20-21|0.1.0.0.0.1.0.0.1.0+0.1.0.0.0.1.0.0.1+0.1.0.0.0.1.0.0 19-20|0.1.0.0.0.1.0.0.0 17-18|0.1.0.0.0.1.0.0.2 14-15|0.1.0.0.0.2.0.0 13-14|0.1.0 11-12|0.1.0.0.0.0 8-9|0.0.0 6-7|0.0 4-5|0 2-3|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:34.049
# ::node	0	cause-01	4-5
# ::node	0.0	upset-01	6-7
# ::node	0.0.0	nothing	8-9
# ::node	0.1	manage-02	2-3
# ::node	0.1.0	and	13-14
# ::node	0.1.0.0	expect-01	26-27
# ::node	0.1.0.0.0	enter-01	28-29
# ::node	0.1.0.0.0.0	direct	11-12
# ::node	0.1.0.0.0.1	arena	31-32
# ::node	0.1.0.0.0.1.0	test-01	30-31
# ::node	0.1.0.0.0.1.0.0	country	20-21
# ::node	0.1.0.0.0.1.0.0.0	great	19-20
# ::node	0.1.0.0.0.1.0.0.1	name	20-21
# ::node	0.1.0.0.0.1.0.0.1.0	"Britain"	20-21
# ::node	0.1.0.0.0.1.0.0.2	well	17-18
# ::node	0.1.0.0.0.2	mood	36-37
# ::node	0.1.0.0.0.2.0	generous-41	35-36
# ::node	0.1.0.0.0.2.0.0	honest	14-15
# ::node	0.1.0.0.0.2.0.1	such	33-34
# ::root	0	cause-01
# ::edge	and	op1	manage-02	0.1.0	0.1	
# ::edge	and	op2	expect-01	0.1.0	0.1.0.0	
# ::edge	cause-01	ARG1	upset-01	0	0.0	
# ::edge	country	mod	great	0.1.0.0.0.1.0.0	0.1.0.0.0.1.0.0.0	
# ::edge	country	name	name	0.1.0.0.0.1.0.0	0.1.0.0.0.1.0.0.1	
# ::edge	country	quant	well	0.1.0.0.0.1.0.0	0.1.0.0.0.1.0.0.2	
# ::edge	enter-01	ARG0	direct	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	enter-01	ARG1	arena	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	enter-01	purpose	mood	0.1.0.0.0	0.1.0.0.0.2	
# ::edge	expect-01	ARG1	enter-01	0.1.0.0	0.1.0.0.0	
# ::edge	generous-41	ARG0	honest	0.1.0.0.0.2.0	0.1.0.0.0.2.0.0	
# ::edge	generous-41	ARG2	mood	0.1.0.0.0.2.0	0.1.0.0.0.2	
# ::edge	generous-41	degree	such	0.1.0.0.0.2.0	0.1.0.0.0.2.0.1	
# ::edge	manage-02	ARG1	cause-01	0.1	0	
# ::edge	name	op1	"Britain"	0.1.0.0.0.1.0.0.1	0.1.0.0.0.1.0.0.1.0	
# ::edge	test-01	ARG0	country	0.1.0.0.0.1.0	0.1.0.0.0.1.0.0	
# ::edge	test-01	ARG1	arena	0.1.0.0.0.1.0	0.1.0.0.0.1	
# ::edge	upset-01	ARG1	nothing	0.0	0.0.0	
(c2 / cause-01 
      :ARG1 (u / upset-01 
            :ARG1 (n2 / nothing)) 
      :ARG1-of (m2 / manage-02 
            :op-of (a2 / and 
                  :op1 (e2 / expect-01 
                        :ARG1 (e / enter-01 
                              :ARG0 (d / direct) 
                              :ARG1 (a / arena 
                                    :ARG1-of (t / test-01 
                                          :ARG0 (c / country 
                                                :mod (g2 / great) 
                                                :name (n / name 
                                                      :op1 "Britain") 
                                                :quant (w / well)))) 
                              :purpose (m / mood 
                                    :ARG2-of (g / generous-41 
                                          :ARG0 (h / honest) 
                                          :degree (s / such))))))))

# ::snt most evenings were spent at the club after a buffet meal which offered a wide variety of dishes helped down by generous free wine followed up with coffee and brandy on the terrace
# ::tok most evenings were spent at the club after a buffet meal which offered a wide variety of dishes helped down by generous free wine followed up with coffee and brandy on the terrace
# ::alignments 28-29|0.1.0 27-28|0.1 24-25|0 23-24|0.0 22-23|0.0.0 21-22|0.0.1 19-20|0.2.1 18-19|0.2 15-16|0.2.0 14-15|0.2.0.1 12-13|0.2.0.0 10-11|0.2.0.0.0 7-8|0.2.0.0.0.0 6-7|0.2.0.0.0.0.0.1 3-4|0.2.0.0.0.0.0 0-1|0.2.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:34.655
# ::node	0	follow-01	24-25
# ::node	0.0	wine	23-24
# ::node	0.0.0	free-41	22-23
# ::node	0.0.1	generous-41	21-22
# ::node	0.1	coffee	27-28
# ::node	0.1.0	and	28-29
# ::node	0.2	help-01	18-19
# ::node	0.2.0	variety	15-16
# ::node	0.2.0.0	offer-01	12-13
# ::node	0.2.0.0.0	meal	10-11
# ::node	0.2.0.0.0.0	after	7-8
# ::node	0.2.0.0.0.0.0	spend-01	3-4
# ::node	0.2.0.0.0.0.0.0	most	0-1
# ::node	0.2.0.0.0.0.0.1	club	6-7
# ::node	0.2.0.1	wide	14-15
# ::node	0.2.1	down	19-20
# ::root	0	follow-01
# ::edge	after	op1	meal	0.2.0.0.0.0	0.2.0.0.0	
# ::edge	and	op1	coffee	0.1.0	0.1	
# ::edge	follow-01	ARG0	wine	0	0.0	
# ::edge	follow-01	ARG1	coffee	0	0.1	
# ::edge	free-41	ARG1	wine	0.0.0	0.0	
# ::edge	generous-41	ARG1	wine	0.0.1	0.0	
# ::edge	help-01	ARG1	variety	0.2	0.2.0	
# ::edge	help-01	direction	down	0.2	0.2.1	
# ::edge	help-01	time	follow-01	0.2	0	
# ::edge	offer-01	ARG0	meal	0.2.0.0	0.2.0.0.0	
# ::edge	offer-01	ARG1	variety	0.2.0.0	0.2.0	
# ::edge	spend-01	ARG0	most	0.2.0.0.0.0.0	0.2.0.0.0.0.0.0	
# ::edge	spend-01	ARG1	club	0.2.0.0.0.0.0	0.2.0.0.0.0.0.1	
# ::edge	spend-01	time	after	0.2.0.0.0.0.0	0.2.0.0.0.0	
# ::edge	variety	mod	wide	0.2.0	0.2.0.1	
(f / follow-01 
      :ARG0 (w / wine 
            :ARG1-of (f2 / free-41) 
            :ARG1-of (g / generous-41)) 
      :ARG1 (c / coffee 
            :op-of (a / and)) 
      :time-of (h / help-01 
            :ARG1 (v / variety 
                  :ARG1-of (o / offer-01 
                        :ARG0 (m / meal 
                              :op-of (a2 / after 
                                    :time-of (s / spend-01 
                                          :ARG0 (m2 / most) 
                                          :ARG1 (c2 / club))))) 
                  :mod (w2 / wide)) 
            :direction (d / down)))

# ::snt i dont think generous is the appropriate word
# ::tok i dont think generous is the appropriate word
# ::alignments 7-8|0.1.0.0 6-7|0.1.0 3-4|0.1 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:34.672
# ::node	0	think-01	2-3
# ::node	0.0	i	0-1
# ::node	0.1	generous-41	3-4
# ::node	0.1.0	appropriate	6-7
# ::node	0.1.0.0	word	7-8
# ::root	0	think-01
# ::edge	generous-41	ARG1	appropriate	0.1	0.1.0	
# ::edge	think-01	ARG0	i	0	0.0	
# ::edge	think-01	ARG1	generous-41	0	0.1	
# ::edge	word	mod	appropriate	0.1.0.0	0.1.0	
(t / think-01 
      :ARG0 (i / i) 
      :ARG1 (g / generous-41 
            :ARG1 (a / appropriate 
                  :mod-of (w / word))))

# ::snt a british railways board spokesman said it was a generous offer in line with our policy of making fair offers of compensation to those bereaved in the clapham accident
# ::tok a british railways board spokesman said it was a generous offer in line with our policy of making fair offers of compensation to those bereaved in the clapham accident
# ::alignments 28-29|0.1.1.0.0.2 21-22|0.1.1.0.0.0 19-20|0.1.1.0.0 18-19|0.1.1.0.0.1 15-16|0.1.1.0 12-13|0.1.1 10-11|0.1 9-10|0.1.2 6-7|0.0 5-6|0 4-5|0.1.0.1+0.1.0 2-3|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:35.158
# ::node	0	say-01	5-6
# ::node	0.0	it	6-7
# ::node	0.1	offer-01	10-11
# ::node	0.1.0	have-org-role-91	4-5
# ::node	0.1.0.0	railway	2-3
# ::node	0.1.0.1	spokesman	4-5
# ::node	0.1.1	line	12-13
# ::node	0.1.1.0	policy	15-16
# ::node	0.1.1.0.0	offer-01	19-20
# ::node	0.1.1.0.0.0	compensate-01	21-22
# ::node	0.1.1.0.0.1	fair	18-19
# ::node	0.1.1.0.0.2	accident	28-29
# ::node	0.1.2	generous-41	9-10
# ::root	0	say-01
# ::edge	accident	prep-for	offer-01	0.1.1.0.0.2	0.1.1.0.0	
# ::edge	generous-41	ARG1	offer-01	0.1.2	0.1	
# ::edge	have-org-role-91	ARG1	railway	0.1.0	0.1.0.0	
# ::edge	have-org-role-91	ARG2	spokesman	0.1.0	0.1.0.1	
# ::edge	line	poss	policy	0.1.1	0.1.1.0	
# ::edge	offer-01	ARG0	have-org-role-91	0.1	0.1.0	
# ::edge	offer-01	ARG0	policy	0.1.1.0.0	0.1.1.0	
# ::edge	offer-01	ARG1	compensate-01	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	offer-01	ARG1	line	0.1	0.1.1	
# ::edge	offer-01	mod	fair	0.1.1.0.0	0.1.1.0.0.1	
# ::edge	say-01	ARG0	it	0	0.0	
# ::edge	say-01	ARG1	offer-01	0	0.1	
(s / say-01 
      :ARG0 (i / it) 
      :ARG1 (o2 / offer-01 
            :ARG0 (h / have-org-role-91 
                  :ARG1 (r / railway) 
                  :ARG2 (s2 / spokesman)) 
            :ARG1 (l / line 
                  :poss (p / policy 
                        :ARG0-of (o / offer-01 
                              :ARG1 (c / compensate-01) 
                              :mod (f / fair) 
                              :prep-for-of (a / accident)))) 
            :ARG1-of (g / generous-41)))

# ::snt traditional commonlaw support of relational claims in case of nonfatal injury was even less generous
# ::tok traditional commonlaw support of relational claims in case of nonfatal injury was even less generous
# ::alignments 14-15|0 13-14|0.1 10-11|0.0.0.0.0 7-8|0.0.0.0 5-6|0.0.0 2-3|0.0 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:35.217
# ::node	0	generous-41	14-15
# ::node	0.0	support-01	2-3
# ::node	0.0.0	claim-01	5-6
# ::node	0.0.0.0	case	7-8
# ::node	0.0.0.0.0	injure-01	10-11
# ::node	0.0.1	tradition	0-1
# ::node	0.1	less	13-14
# ::root	0	generous-41
# ::edge	case	topic	injure-01	0.0.0.0	0.0.0.0.0	
# ::edge	claim-01	ARG1	case	0.0.0	0.0.0.0	
# ::edge	generous-41	ARG1	support-01	0	0.0	
# ::edge	generous-41	degree	less	0	0.1	
# ::edge	support-01	ARG1	claim-01	0.0	0.0.0	
# ::edge	support-01	manner	tradition	0.0	0.0.1	
(g / generous-41 
      :ARG1 (s / support-01 
            :ARG1 (c2 / claim-01 
                  :ARG1 (c / case 
                        :topic (i / injure-01))) 
            :manner (t / tradition)) 
      :degree (l / less))

# ::snt other benefits include a workplace nursery generous maternity and paternity leave provisions a career break scheme job sharing scheme and flexitime in many offices
# ::tok other benefits include a workplace nursery generous maternity and paternity leave provisions a career break scheme job sharing scheme and flexitime in many offices
# ::alignments 23-24|0.1.1.0 22-23|0.1.1 19-20|0 18-19|0.1.0 17-18|0.1 16-17|0.0.0 15-16|0.0.0.0 13-14|0.0.0.1 11-12|0.0.1 10-11|0.0 8-9|0.0.2 6-7|0.0.2.0.0 5-6|0.0.2.0.0.0 4-5|0.0.2.0.0.0.0 2-3|0.0.2.0 1-2|0.0.2.0.1 0-1|0.0.2.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:35.767
# ::node	0	and	19-20
# ::node	0.0	leave-01	10-11
# ::node	0.0.0	job	16-17
# ::node	0.0.0.0	scheme	15-16
# ::node	0.0.0.1	career	13-14
# ::node	0.0.1	provision	11-12
# ::node	0.0.2	and	8-9
# ::node	0.0.2.0	include-01	2-3
# ::node	0.0.2.0.0	generous-41	6-7
# ::node	0.0.2.0.0.0	nursery	5-6
# ::node	0.0.2.0.0.0.0	workplace	4-5
# ::node	0.0.2.0.1	benefit-01	1-2
# ::node	0.0.2.0.1.0	other	0-1
# ::node	0.1	share-01	17-18
# ::node	0.1.0	scheme	18-19
# ::node	0.1.1	many	22-23
# ::node	0.1.1.0	office	23-24
# ::root	0	and
(a / and 
      :ARG0-of (l / leave-01 
            :ARG1 (j / job 
                  :mod (s3 / scheme) 
                  :mod (c / career)) 
            :ARG2 (p / provision) 
            :op-of (a2 / and 
                  :op1 (i / include-01 
                        :ARG1 (g / generous-41 
                              :ARG1 (n / nursery 
                                    :mod (w / workplace))) 
                        :ARG2 (b / benefit-01 
                              :mod (o2 / other))))) 
      :ARG0-of (s2 / share-01 
            :ARG1 (s / scheme) 
            :manner (m / many 
                  :quant-of (o / office))))

# ::snt they would like to interview him because of his extraordinarily generous political contributions to five prominent senators four democrats and one republican
# ::tok they would like to interview him because of his extraordinarily generous political contributions to five prominent senators four democrats and one republican
# ::alignments 21-22|0.0.0.1.0.0+0.0.0.1.0+0.0.0.1 19-20|0.0.0 18-19|0.0.0.0 17-18|0.0.0.0.0 15-16|0.1 14-15|0.0.2.0 12-13|0.0 11-12|0.0.3 10-11|0.0.2 9-10|0.0.2.1 6-7|0 4-5|0.0.1 0-1|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:35.889
# ::node	0	cause-01	6-7
# ::node	0.0	contribute-01	12-13
# ::node	0.0.0	and	19-20
# ::node	0.0.0.0	democrat	18-19
# ::node	0.0.0.0.0	4	17-18
# ::node	0.0.0.1	political-party	21-22
# ::node	0.0.0.1.0	name	21-22
# ::node	0.0.0.1.0.0	"Republican"	21-22
# ::node	0.0.1	interview-01	4-5
# ::node	0.0.1.0	they	0-1
# ::node	0.0.2	generous-41	10-11
# ::node	0.0.2.0	5	14-15
# ::node	0.0.2.1	extraordinary	9-10
# ::node	0.0.3	politics	11-12
# ::node	0.1	prominent	15-16
# ::root	0	cause-01
# ::edge	and	op1	democrat	0.0.0	0.0.0.0	
# ::edge	and	op2	political-party	0.0.0	0.0.0.1	
# ::edge	cause-01	ARG0	contribute-01	0	0.0	
# ::edge	cause-01	ARG1	prominent	0	0.1	
# ::edge	contribute-01	ARG1	and	0.0	0.0.0	
# ::edge	contribute-01	mod	politics	0.0	0.0.3	
# ::edge	democrat	quant	4	0.0.0.0	0.0.0.0.0	
# ::edge	generous-41	ARG1	5	0.0.2	0.0.2.0	
# ::edge	generous-41	ARG2	contribute-01	0.0.2	0.0	
# ::edge	generous-41	degree	extraordinary	0.0.2	0.0.2.1	
# ::edge	interview-01	ARG0	they	0.0.1	0.0.1.0	
# ::edge	interview-01	ARG1	contribute-01	0.0.1	0.0	
# ::edge	name	op1	"Republican"	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	political-party	name	name	0.0.0.1	0.0.0.1.0	
(c2 / cause-01 
      :ARG0 (c / contribute-01 
            :ARG1 (a / and 
                  :op1 (d / democrat 
                        :quant 4) 
                  :op2 (p / political-party 
                        :name (n / name 
                              :op1 "Republican"))) 
            :ARG1-of (i / interview-01 
                  :ARG0 (t / they)) 
            :ARG2-of (g / generous-41 
                  :ARG1 5 
                  :degree (e / extraordinary)) 
            :mod (p3 / politics)) 
      :ARG1 (p2 / prominent))

# ::snt the lunchtime meal will probably be fairly high in fat  such as a pasty or pie or cheese sandwiches with a generous  spread of butter or margarine on the bread or fish and chips
# ::tok the lunchtime meal will probably be fairly high in fat such as a pasty or pie or cheese sandwiches with a generous spread of butter or margarine on the bread or fish and chips
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:35.891
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt what playmates invariably displayed giving generous measure were a collectors pair of breasts
# ::tok what playmates invariably displayed giving generous measure were a collectors pair of breasts
# ::alignments 6-7|0.0 5-6|0 3-4|0.1 2-3|0.1.0.0+0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:35.911
# ::node	0	generous-41	5-6
# ::node	0.0	measure	6-7
# ::node	0.1	display-01	3-4
# ::node	0.1.0	variable	2-3
# ::node	0.1.0.0	-	2-3
# ::root	0	generous-41
# ::edge	display-01	manner	variable	0.1	0.1.0	
# ::edge	generous-41	ARG1	measure	0	0.0	
# ::edge	generous-41	time	display-01	0	0.1	
# ::edge	variable	polarity	-	0.1.0	0.1.0.0	
(g / generous-41 
      :ARG1 (m / measure) 
      :time (d / display-01 
            :manner (v / variable 
                  :polarity -)))

# ::snt eric and bess were the most generous of quiet friends
# ::tok eric and bess were the most generous of quiet friends
# ::alignments 9-10|0.1.1+0.1 8-9|0.1.0 6-7|0 5-6|0.2 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:36.037
# ::node	0	generous-41	6-7
# ::node	0.0	and	1-2
# ::node	0.1	have-rel-role-91	9-10
# ::node	0.1.0	quiet-41	8-9
# ::node	0.1.1	friend	9-10
# ::node	0.2	most	5-6
# ::root	0	generous-41
# ::edge	generous-41	ARG1	and	0	0.0	
# ::edge	generous-41	ARG2	have-rel-role-91	0	0.1	
# ::edge	generous-41	degree	most	0	0.2	
# ::edge	have-rel-role-91	ARG2	friend	0.1	0.1.1	
# ::edge	quiet-41	ARG1	have-rel-role-91	0.1.0	0.1	
(g / generous-41 
      :ARG1 (a / and) 
      :ARG2 (h / have-rel-role-91 
            :ARG1-of (q / quiet-41) 
            :ARG2 (f / friend)) 
      :degree (m / most))

# ::snt generous thames water customers gave a total of 250000 to the wateraid appeal sent out with bills last year and the money is going to finance selfhelp water projects in uganda
# ::tok generous thames water customers gave a total of 250000 to the wateraid appeal sent out with bills last year and the money is going to finance selfhelp water projects in uganda
# ::alignments 28-29|0.0.0.1 27-28|0.0.0.1.0 25-26|0.0.0 21-22|0.0.0.0 19-20|0.0 18-19|0.2 17-18|0.2.0 16-17|0.1.1 13-14|0 12-13|0.1 8-9|0.1.0 3-4|0.0.1 1-3|0.0.1.0.0.0.0+0.0.1.0.0.0.1+0.0.1.0.0.0+0.0.1.0.0 0-1|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:36.501
# ::node	0	send-01	13-14
# ::node	0.0	and	19-20
# ::node	0.0.0	finance-01	25-26
# ::node	0.0.0.0	money	21-22
# ::node	0.0.0.1	project	28-29
# ::node	0.0.0.1.0	water	27-28
# ::node	0.0.1	customer	3-4
# ::node	0.0.1.0	generous-41	0-1
# ::node	0.0.1.0.0	organization	1-3
# ::node	0.0.1.0.0.0	name	1-3
# ::node	0.0.1.0.0.0.0	"water"	1-3
# ::node	0.0.1.0.0.0.1	"thames"	1-3
# ::node	0.1	appeal-02	12-13
# ::node	0.1.0	250000	8-9
# ::node	0.1.1	bill-01	16-17
# ::node	0.2	year	18-19
# ::node	0.2.0	last	17-18
# ::root	0	send-01
# ::edge	and	op1	customer	0.0	0.0.1	
# ::edge	appeal-02	ARG1	250000	0.1	0.1.0	
# ::edge	bill-01	ARG1	appeal-02	0.1.1	0.1	
# ::edge	finance-01	ARG0	money	0.0.0	0.0.0.0	
# ::edge	finance-01	ARG1	project	0.0.0	0.0.0.1	
# ::edge	finance-01	ARG2	and	0.0.0	0.0	
# ::edge	generous-41	ARG0	customer	0.0.1.0	0.0.1	
# ::edge	generous-41	ARG1	organization	0.0.1.0	0.0.1.0.0	
# ::edge	name	op1	"water"	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	name	op2	"thames"	0.0.1.0.0.0	0.0.1.0.0.0.1	
# ::edge	organization	name	name	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	project	topic	water	0.0.0.1	0.0.0.1.0	
# ::edge	send-01	ARG0	and	0	0.0	
# ::edge	send-01	ARG1	appeal-02	0	0.1	
# ::edge	send-01	time	year	0	0.2	
# ::edge	year	mod	last	0.2	0.2.0	
(s / send-01 
      :ARG0 (a / and 
            :ARG2-of (f / finance-01 
                  :ARG0 (m / money) 
                  :ARG1 (p / project 
                        :topic (w / water))) 
            :op1 (c / customer 
                  :ARG0-of (g / generous-41 
                        :ARG1 (o / organization 
                              :name (n / name 
                                    :op1 "water" 
                                    :op2 "thames"))))) 
      :ARG1 (a2 / appeal-02 
            :ARG1 250000 
            :ARG1-of (b / bill-01)) 
      :time (y / year 
            :mod (l / last)))

# ::snt it is really very good of you miss thorne very good and generous
# ::tok it is really very good of you miss thorne very good and generous
# ::alignments 12-13|0.1 11-12|0 10-11|0.0 9-10|0.0.0 6-7|0.1.0.0.2 4-5|0.1.0.0 3-4|0.1.0.0.0 2-3|0.1.0 0-1|0.1.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:36.534
# ::node	0	and	11-12
# ::node	0.0	good	10-11
# ::node	0.0.0	very	9-10
# ::node	0.1	generous-41	12-13
# ::node	0.1.0	really	2-3
# ::node	0.1.0.0	good	4-5
# ::node	0.1.0.0.0	very	3-4
# ::node	0.1.0.0.1	it	0-1
# ::node	0.1.0.0.2	you	6-7
# ::root	0	and
# ::edge	and	op1	good	0	0.0	
# ::edge	and	op2	generous-41	0	0.1	
# ::edge	generous-41	ARG1	really	0.1	0.1.0	
# ::edge	good	degree	very	0.0	0.0.0	
# ::edge	good	degree	very	0.1.0.0	0.1.0.0.0	
# ::edge	good	domain	it	0.1.0.0	0.1.0.0.1	
# ::edge	good	mod	really	0.1.0.0	0.1.0	
# ::edge	good	topic	you	0.1.0.0	0.1.0.0.2	
(a / and 
      :op1 (g2 / good 
            :degree (v / very)) 
      :op2 (g / generous-41 
            :ARG1 (r / really 
                  :mod-of (g3 / good 
                        :degree (v2 / very) 
                        :domain (i / it) 
                        :topic (y / you)))))

# ::snt he cut donald a generous slice of untainted leg and went back to the dining table
# ::tok he cut donald a generous slice of untainted leg and went back to the dining table
# ::alignments 15-16|0.1.0.1.0 14-15|0.1.0.1 11-12|0.0 9-10|0 8-9|0.1.1 5-6|0.1 4-5|0.1.0 0-1|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:36.598
# ::node	0	and	9-10
# ::node	0.0	back	11-12
# ::node	0.1	slice	5-6
# ::node	0.1.0	generous-41	4-5
# ::node	0.1.0.0	he	0-1
# ::node	0.1.0.1	dine-01	14-15
# ::node	0.1.0.1.0	table	15-16
# ::node	0.1.1	leg	8-9
# ::root	0	and
# ::edge	and	mod	back	0	0.0	
# ::edge	and	op1	slice	0	0.1	
# ::edge	dine-01	ARG0	table	0.1.0.1	0.1.0.1.0	
# ::edge	dine-01	ARG1	generous-41	0.1.0.1	0.1.0	
# ::edge	generous-41	ARG0	he	0.1.0	0.1.0.0	
# ::edge	generous-41	ARG2	slice	0.1.0	0.1	
# ::edge	slice	mod	leg	0.1	0.1.1	
(a / and 
      :mod (b / back) 
      :op1 (s / slice 
            :ARG2-of (g / generous-41 
                  :ARG0 (h / he) 
                  :ARG1-of (d / dine-01 
                        :ARG0 (t / table))) 
            :mod (l / leg)))

# ::snt two other grandmothers who came on regular visits one very generous and the other an eloquent martinet died too soon to leave more than a dim recollection
# ::tok two other grandmothers who came on regular visits one very generous and the other an eloquent martinet died too soon to leave more than a dim recollection
# ::alignments 21-22|0.2.0 19-20|0.2.1 18-19|0.2.1.0 17-18|0.2 13-14|0.3 11-12|0 10-11|0.0 9-10|0.0.1 7-8|0.1 6-7|0.1.0 1-2|0.0.0 0-1|0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:36.774
# ::node	0	and	11-12
# ::node	0.0	generous-41	10-11
# ::node	0.0.0	other	1-2
# ::node	0.0.1	very	9-10
# ::node	0.1	visit-01	7-8
# ::node	0.1.0	regular	6-7
# ::node	0.2	die-01	17-18
# ::node	0.2.0	leave-01	21-22
# ::node	0.2.0.0	2	0-1
# ::node	0.2.1	soon	19-20
# ::node	0.2.1.0	too	18-19
# ::node	0.3	other	13-14
# ::root	0	and
# ::edge	and	op1	other	0	0.3	
# ::edge	die-01	ARG1	leave-01	0.2	0.2.0	
# ::edge	die-01	ARG2	and	0.2	0	
# ::edge	die-01	time	soon	0.2	0.2.1	
# ::edge	generous-41	ARG0	other	0.0	0.0.0	
# ::edge	generous-41	ARG1	and	0.0	0	
# ::edge	generous-41	degree	very	0.0	0.0.1	
# ::edge	leave-01	ARG1	2	0.2.0	0.2.0.0	
# ::edge	soon	degree	too	0.2.1	0.2.1.0	
# ::edge	visit-01	ARG1	and	0.1	0	
# ::edge	visit-01	frequency	regular	0.1	0.1.0	
(a / and 
      :ARG1-of (g / generous-41 
            :ARG0 (o2 / other) 
            :degree (v / very)) 
      :ARG1-of (v2 / visit-01 
            :frequency (r / regular)) 
      :ARG2-of (d / die-01 
            :ARG1 (l / leave-01 
                  :ARG1 2) 
            :time (s / soon 
                  :degree (t / too))) 
      :op1 (o / other))

# ::snt we have a good lot of customers people have been very generous said mr willerton
# ::tok we have a good lot of customers people have been very generous said mr willerton
# ::alignments 12-13|0 11-12|0.0 10-11|0.0.2 6-7|0.0.1 4-5|0.0.1.0 3-4|0.0.1.0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:36.818
# ::node	0	say-01	12-13
# ::node	0.0	generous-41	11-12
# ::node	0.0.0	we	0-1
# ::node	0.0.1	customer	6-7
# ::node	0.0.1.0	lot	4-5
# ::node	0.0.1.0.0	good	3-4
# ::node	0.0.2	very	10-11
# ::root	0	say-01
# ::edge	customer	quant	lot	0.0.1	0.0.1.0	
# ::edge	generous-41	ARG0	we	0.0	0.0.0	
# ::edge	generous-41	ARG1	customer	0.0	0.0.1	
# ::edge	generous-41	degree	very	0.0	0.0.2	
# ::edge	lot	mod	good	0.0.1.0	0.0.1.0.0	
# ::edge	say-01	manner	generous-41	0	0.0	
(s / say-01 
      :manner (g / generous-41 
            :ARG0 (w / we) 
            :ARG1 (c / customer 
                  :quant (l / lot 
                        :mod (g2 / good))) 
            :degree (v / very)))

# ::snt   at australian mutual ian salmon chief general manager said we believe that the offer of 690p a share is extremely generous for a company which has experienced a severe decline in its market position and has been growing at only half the rate of its competitors
# ::tok at australian mutual ian salmon chief general manager said we believe that the offer of 690p a share is extremely generous for a company which has experienced a severe decline in its market position and has been growing at only half the rate of its competitors
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:36.819
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt deeply kind and warmhearted despite her somewhat formidable exterior and a conversational style which could tend towards the monologue she remained a generous radical to the end one of the few of her generation who integrated the immense energy and selfconfidence of the ascendancy families into modern irish life
# ::tok deeply kind and warmhearted despite her somewhat formidable exterior and a conversational style which could tend towards the monologue she remained a generous radical to the end one of the few of her generation who integrated the immense energy and selfconfidence of the ascendancy families into modern irish life
# ::alignments 48-49|0.2.1.1.1 46-47|0.2.1.1.2 44-45|0.2.1.1.1.0 39-40|0.2 38-39|0.1 37-38|0.1.0 35-36|0 33-34|0.0.0 30-31|0.0 23-24|0.2.1.1.0 22-23|0.2.1.1 20-21|0.2.1 19-20|0.2.1.0 15-16|0.2.0 14-15|0.2.0.2 12-13|0.2.0.0 9-10|0.2.0.0.0 6-7|0.2.0.1 2-3|0.2.0.3 1-2|0.2.0.3.0 0-1|0.2.0.3.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:37.628
# ::node	0	integrate-01	35-36
# ::node	0.0	few	30-31
# ::node	0.0.0	generation	33-34
# ::node	0.1	energy	38-39
# ::node	0.1.0	immense	37-38
# ::node	0.2	and	39-40
# ::node	0.2.0	tend-02	15-16
# ::node	0.2.0.0	style	12-13
# ::node	0.2.0.0.0	and	9-10
# ::node	0.2.0.1	somewhat	6-7
# ::node	0.2.0.2	possible	14-15
# ::node	0.2.0.3	and	2-3
# ::node	0.2.0.3.0	kind	1-2
# ::node	0.2.0.3.0.0	deep	0-1
# ::node	0.2.1	remain-01	20-21
# ::node	0.2.1.0	she	19-20
# ::node	0.2.1.1	generous-41	22-23
# ::node	0.2.1.1.0	radical	23-24
# ::node	0.2.1.1.1	life	48-49
# ::node	0.2.1.1.1.0	family	44-45
# ::node	0.2.1.1.2	modern	46-47
# ::root	0	integrate-01
# ::edge	and	op1	kind	0.2.0.3	0.2.0.3.0	
# ::edge	and	op1	style	0.2.0.0.0	0.2.0.0	
# ::edge	and	op1	tend-02	0.2	0.2.0	
# ::edge	and	op2	remain-01	0.2	0.2.1	
# ::edge	and	op2	tend-02	0.2.0.3	0.2.0	
# ::edge	energy	mod	immense	0.1	0.1.0	
# ::edge	generation	quant	few	0.0.0	0.0	
# ::edge	generous-41	ARG1	radical	0.2.1.1	0.2.1.1.0	
# ::edge	generous-41	ARG2	life	0.2.1.1	0.2.1.1.1	
# ::edge	integrate-01	ARG0	few	0	0.0	
# ::edge	integrate-01	ARG1	energy	0	0.1	
# ::edge	integrate-01	ARG2	and	0	0.2	
# ::edge	kind	degree	deep	0.2.0.3.0	0.2.0.3.0.0	
# ::edge	life	poss	family	0.2.1.1.1	0.2.1.1.1.0	
# ::edge	modern	op1	generous-41	0.2.1.1.2	0.2.1.1	
# ::edge	possible	domain	tend-02	0.2.0.2	0.2.0	
# ::edge	remain-01	ARG0	she	0.2.1	0.2.1.0	
# ::edge	remain-01	ARG2	generous-41	0.2.1	0.2.1.1	
# ::edge	tend-02	ARG0	style	0.2.0	0.2.0.0	
# ::edge	tend-02	ARG1	somewhat	0.2.0	0.2.0.1	
(i2 / integrate-01 
      :ARG0 (f2 / few 
            :quant-of (g / generation)) 
      :ARG1 (e / energy 
            :mod (i / immense)) 
      :ARG2 (a / and 
            :op1 (t / tend-02 
                  :ARG0 (s2 / style 
                        :op-of (a2 / and)) 
                  :ARG1 (s3 / somewhat) 
                  :domain-of (p / possible) 
                  :op-of (a3 / and 
                        :op1 (k / kind 
                              :degree (d / deep)))) 
            :op2 (r2 / remain-01 
                  :ARG0 (s / she) 
                  :ARG2 (g2 / generous-41 
                        :ARG1 (r / radical) 
                        :ARG2 (l / life 
                              :poss (f / family)) 
                        :op-of (m / modern)))))

# ::snt just over 3 for a generous bed a vineclad balcony with a splash of bougainvillea two lemon trees in the garden below and a view over olives to the sea dash
# ::tok just over 3 for a generous bed a vineclad balcony with a splash of bougainvillea two lemon trees in the garden below and a view over olives to the sea dash
# ::alignments 29-30|0.0.1.0 22-23|0 21-22|0.1 20-21|0.1.0 17-18|0.1.0.0 15-16|0.1.0.0.0 12-13|0.0 6-7|0.0.1.2 5-6|0.0.1 2-3|0.0.0 0-1|0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:37.779
# ::node	0	and	22-23
# ::node	0.0	splash-02	12-13
# ::node	0.0.0	3	2-3
# ::node	0.0.1	generous-41	5-6
# ::node	0.0.1.0	sea	29-30
# ::node	0.0.1.1	just	0-1
# ::node	0.0.1.2	bed	6-7
# ::node	0.1	below	21-22
# ::node	0.1.0	garden	20-21
# ::node	0.1.0.0	tree	17-18
# ::node	0.1.0.0.0	2	15-16
# ::root	0	and
# ::edge	and	op1	splash-02	0	0.0	
# ::edge	and	op2	below	0	0.1	
# ::edge	garden	location	below	0.1.0	0.1	
# ::edge	generous-41	ARG0	sea	0.0.1	0.0.1.0	
# ::edge	generous-41	ARG1	just	0.0.1	0.0.1.1	
# ::edge	generous-41	ARG2	bed	0.0.1	0.0.1.2	
# ::edge	generous-41	manner	splash-02	0.0.1	0.0	
# ::edge	splash-02	ARG0	3	0.0	0.0.0	
# ::edge	tree	location	garden	0.1.0.0	0.1.0	
# ::edge	tree	quant	2	0.1.0.0	0.1.0.0.0	
(a / and 
      :op1 (s2 / splash-02 
            :ARG0 3 
            :manner-of (g2 / generous-41 
                  :ARG0 (s / sea) 
                  :ARG1 (j / just) 
                  :ARG2 (b2 / bed))) 
      :op2 (b / below 
            :location-of (g / garden 
                  :location-of (t / tree 
                        :quant 2))))

# ::snt the generous donation by redkir construction has made such a student visit possible for the first time
# ::tok the generous donation by redkir construction has made such a student visit possible for the first time
# ::alignments 16-17|0 12-13|0.0 11-12|0.0.0 10-11|0.0.0.0.0+0.0.0.0 8-9|0.0.0.0.2 5-6|0.0.0.0.1.0.0 2-3|0.0.0.0.1.0 1-2|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:37.878
# ::node	0	time	16-17
# ::node	0.0	possible	12-13
# ::node	0.0.0	visit-01	11-12
# ::node	0.0.0.0	person	10-11
# ::node	0.0.0.0.0	study-01	10-11
# ::node	0.0.0.0.1	generous-41	1-2
# ::node	0.0.0.0.1.0	donate-01	2-3
# ::node	0.0.0.0.1.0.0	construct-01	5-6
# ::node	0.0.0.0.2	such	8-9
# ::root	0	time
(t / time 
      :time-of (p / possible 
            :ARG1-of (v / visit-01 
                  :ARG0 (p2 / person 
                        :ARG0-of (s / study-01) 
                        :ARG0-of (g / generous-41 
                              :ARG1 (d / donate-01 
                                    :ARG1 (c / construct-01))) 
                        :mod (s2 / such)))))

# ::snt manager andre le mesurier was delighted with the childrens generous donations to the hospice
# ::tok manager andre le mesurier was delighted with the childrens generous donations to the hospice
# ::alignments 10-11|0.0 9-10|0 8-9|0.0.1.0+0.0.1 5-6|0.0.0 1-3|0.0.0.0.0.0.0+0.0.0.0.0.0.1+0.0.0.0.0.0+0.0.0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:37.910
# ::node	0	generous-41	9-10
# ::node	0.0	donate-01	10-11
# ::node	0.0.0	delight-01	5-6
# ::node	0.0.0.0	manage-01	0-1
# ::node	0.0.0.0.0	person	1-3
# ::node	0.0.0.0.0.0	name	1-3
# ::node	0.0.0.0.0.0.0	"le"	1-3
# ::node	0.0.0.0.0.0.1	"andre"	1-3
# ::node	0.0.1	have-rel-role-91	8-9
# ::node	0.0.1.0	child	8-9
# ::root	0	generous-41
# ::edge	delight-01	ARG1	donate-01	0.0.0	0.0	
# ::edge	generous-41	ARG1	donate-01	0	0.0	
# ::edge	have-rel-role-91	ARG1	donate-01	0.0.1	0.0	
# ::edge	have-rel-role-91	ARG2	child	0.0.1	0.0.1.0	
# ::edge	manage-01	ARG1	delight-01	0.0.0.0	0.0.0	
# ::edge	name	op1	"le"	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	name	op2	"andre"	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	person	mod	manage-01	0.0.0.0.0	0.0.0.0	
# ::edge	person	name	name	0.0.0.0.0	0.0.0.0.0.0	
(g / generous-41 
      :ARG1 (d / donate-01 
            :ARG1-of (d2 / delight-01 
                  :ARG1-of (m / manage-01 
                        :mod-of (p / person 
                              :name (n / name 
                                    :op1 "le" 
                                    :op2 "andre")))) 
            :ARG1-of (h / have-rel-role-91 
                  :ARG2 (c / child))))

# ::snt sir  naturally im grateful for the generous comments made about me in your leading article 4 december
# ::tok sir naturally im grateful for the generous comments made about me in your leading article 4 december
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:37.911
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt executive producer nick handel said people are so generous in their response to appeals and it is important to report back
# ::tok executive producer nick handel said people are so generous in their response to appeals and it is important to report back
# ::alignments 20-21|0.0.1.0.0.0.0 19-20|0.0.1.0.0.0 17-18|0.0.1.0.0 15-16|0.0.1.0 14-15|0.0.1.0.0.1 13-14|0.0.1.1 11-12|0.0.1 8-9|0.0 7-8|0.0.2 4-5|0 1-2|0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:38.117
# ::node	0	say-01	4-5
# ::node	0.0	generous-41	8-9
# ::node	0.0.0	produce-01	1-2
# ::node	0.0.0.0	executive	0-1
# ::node	0.0.1	respond-01	11-12
# ::node	0.0.1.0	it	15-16
# ::node	0.0.1.0.0	important	17-18
# ::node	0.0.1.0.0.0	report	19-20
# ::node	0.0.1.0.0.0.0	back	20-21
# ::node	0.0.1.0.0.1	and	14-15
# ::node	0.0.1.1	appeal-01	13-14
# ::node	0.0.2	so	7-8
# ::root	0	say-01
# ::edge	and	op1	important	0.0.1.0.0.1	0.0.1.0.0	
# ::edge	generous-41	ARG1	produce-01	0.0	0.0.0	
# ::edge	generous-41	ARG2	respond-01	0.0	0.0.1	
# ::edge	generous-41	degree	so	0.0	0.0.2	
# ::edge	important	domain	it	0.0.1.0.0	0.0.1.0	
# ::edge	important	domain	report	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	produce-01	ARG0	executive	0.0.0	0.0.0.0	
# ::edge	report	direction	back	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	respond-01	ARG1	it	0.0.1	0.0.1.0	
# ::edge	respond-01	ARG2	appeal-01	0.0.1	0.0.1.1	
# ::edge	say-01	ARG1	generous-41	0	0.0	
(s2 / say-01 
      :ARG1 (g / generous-41 
            :ARG1 (p / produce-01 
                  :ARG0 (e / executive)) 
            :ARG2 (r2 / respond-01 
                  :ARG1 (i2 / it 
                        :domain-of (i / important 
                              :domain (r / report 
                                    :direction (b / back)) 
                              :op-of (a / and))) 
                  :ARG2 (a2 / appeal-01)) 
            :degree (s / so)))

# ::snt the deal seemed generous at the time and worked reasonably well for a while
# ::tok the deal seemed generous at the time and worked reasonably well for a while
# ::alignments 10-11|0.0.0.2 9-10|0.0.0.1 8-9|0.0.0 7-8|0.0 6-7|0.0.0.0.0.0 3-4|0.0.0.0.0 2-3|0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:38.146
# ::node	0	seem-01	2-3
# ::node	0.0	and	7-8
# ::node	0.0.0	work-01	8-9
# ::node	0.0.0.0	deal-01	1-2
# ::node	0.0.0.0.0	generous-41	3-4
# ::node	0.0.0.0.0.0	time	6-7
# ::node	0.0.0.1	reasonable	9-10
# ::node	0.0.0.2	well	10-11
# ::root	0	seem-01
(s / seem-01 
      :op-of (a / and 
            :op1 (w2 / work-01 
                  :ARG0 (d / deal-01 
                        :ARG1-of (g / generous-41 
                              :ARG2 (t / time))) 
                  :ARG1 (r / reasonable) 
                  :mod (w / well))))

# ::snt generous areas for visual display and a balconied music room opening through a high proscenium into the hall for staged events compete with the technological facilities
# ::tok generous areas for visual display and a balconied music room opening through a high proscenium into the hall for staged events compete with the technological facilities
# ::alignments 25-26|0.0.2.0.1 24-25|0.0.2.0.1.0 21-22|0.0.2.0 20-21|0.0.2.0.0 19-20|0.0.2.0.0.0 17-18|0 13-14|0.0.0.0.0 10-11|0.0.2.1 9-10|0.0.2.1.0 8-9|0.0.2.1.0.0 5-6|0.0.2 4-5|0.0 3-4|0.0.1 1-2|0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:38.308
# ::node	0	hall	17-18
# ::node	0.0	display-01	4-5
# ::node	0.0.0	area	1-2
# ::node	0.0.0.0	generous-41	0-1
# ::node	0.0.0.0.0	high	13-14
# ::node	0.0.1	visual	3-4
# ::node	0.0.2	and	5-6
# ::node	0.0.2.0	compete-01	21-22
# ::node	0.0.2.0.0	event	20-21
# ::node	0.0.2.0.0.0	stage-01	19-20
# ::node	0.0.2.0.1	facility	25-26
# ::node	0.0.2.0.1.0	technology	24-25
# ::node	0.0.2.1	open-01	10-11
# ::node	0.0.2.1.0	room	9-10
# ::node	0.0.2.1.0.0	music	8-9
# ::root	0	hall
(h / hall 
      :ARG1-of (d / display-01 
            :ARG0 (a2 / area 
                  :ARG1-of (g / generous-41 
                        :ARG0 (h2 / high))) 
            :mod (v / visual) 
            :op-of (a / and 
                  :ARG0-of (c / compete-01 
                        :ARG1 (e / event 
                              :ARG1-of (s / stage-01)) 
                        :location (f / facility 
                              :mod (t / technology))) 
                  :op1 (o / open-01 
                        :ARG1 (r / room 
                              :mod (m / music))))))

# ::snt it must be because we have thought of you in a thousand happy moments because we have imagined a thousand times how you with your generous nature would have laughed if you had seen us together in the green room
# ::tok it must be because we have thought of you in a thousand happy moments because we have imagined a thousand times how you with your generous nature would have laughed if you had seen us together in the green room
# ::alignments 39-40|0.0.0.0.0.0.2 38-39|0.0.0.0.0.0.2.0 35-36|0.0.0.0.0.0.3 33-34|0.0.0.0.0.0 31-32|0.0.0.0.0.0.1 29-30|0.0.0.0.0 26-27|0.1 25-26|0 22-23|0.0.0.0.0.0.0 15-16|0.0.0.4 14-15|0.0.0.2 13-14|0.0.0.5 12-13|0.0.0.5.0 8-9|0.0.0.3 6-7|0.0.0 4-5|0.0.0.0 3-4|0.0 0-1|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:39.140
# ::node	0	generous-41	25-26
# ::node	0.0	cause-01	3-4
# ::node	0.0.0	think-01	6-7
# ::node	0.0.0.0	we	4-5
# ::node	0.0.0.0.0	laugh-01	29-30
# ::node	0.0.0.0.0.0	see-01	33-34
# ::node	0.0.0.0.0.0.0	you	22-23
# ::node	0.0.0.0.0.0.1	you	31-32
# ::node	0.0.0.0.0.0.2	room	39-40
# ::node	0.0.0.0.0.0.2.0	green	38-39
# ::node	0.0.0.0.0.0.3	together	35-36
# ::node	0.0.0.1	it	0-1
# ::node	0.0.0.2	cause-01	14-15
# ::node	0.0.0.3	you	8-9
# ::node	0.0.0.4	we	15-16
# ::node	0.0.0.5	moment	13-14
# ::node	0.0.0.5.0	happy	12-13
# ::node	0.1	nature	26-27
# ::root	0	generous-41
(g2 / generous-41 
      :ARG1-of (c2 / cause-01 
            :ARG0 (t2 / think-01 
                  :ARG0 (w2 / we 
                        :ARG0-of (l / laugh-01 
                              :ARG1 (s / see-01 
                                    :ARG0 (y2 / you) 
                                    :ARG1 (y / you) 
                                    :ARG2 (r / room 
                                          :mod (g / green)) 
                                    :mod (t / together)))) 
                  :ARG1 (i / it) 
                  :ARG1-of (c / cause-01) 
                  :ARG2 (y3 / you) 
                  :ARG3 (w / we) 
                  :time (m / moment 
                        :mod (h / happy)))) 
      :mod-of (n / nature))

# ::snt underpinning may be used to form deeper or wider foundation and it relies on adjacent excavations which need to be shored up and generous enough to allow access for concreting
# ::tok underpinning may be used to form deeper or wider foundation and it relies on adjacent excavations which need to be shored up and generous enough to allow access for concreting
# ::alignments 27-28|0.1.0.0 26-27|0.1.0 24-25|0.1.1 23-24|0.1 22-23|0 17-18|0.0.2.0.1.0 12-13|0.0.2.0 11-12|0.0.2.0.0 10-11|0.0.2 9-10|0.0.2.0.1 8-9|0.0.2.0.1.1.1 7-8|0.0.2.0.1.1 6-7|0.0.2.0.1.1.0 5-6|0.0.0 3-4|0.0 1-2|0.0.1.0+0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:39.370
# ::node	0	and	22-23
# ::node	0.0	use-01	3-4
# ::node	0.0.0	form	5-6
# ::node	0.0.1	date-entity	1-2
# ::node	0.0.1.0	5	1-2
# ::node	0.0.2	and	10-11
# ::node	0.0.2.0	rely-01	12-13
# ::node	0.0.2.0.0	it	11-12
# ::node	0.0.2.0.1	foundation	9-10
# ::node	0.0.2.0.1.0	need-01	17-18
# ::node	0.0.2.0.1.1	or	7-8
# ::node	0.0.2.0.1.1.0	deep	6-7
# ::node	0.0.2.0.1.1.1	wide	8-9
# ::node	0.1	generous-41	23-24
# ::node	0.1.0	allow-01	26-27
# ::node	0.1.0.0	access-01	27-28
# ::node	0.1.1	enough	24-25
# ::root	0	and
# ::edge	allow-01	ARG1	access-01	0.1.0	0.1.0.0	
# ::edge	and	op1	use-01	0	0.0	
# ::edge	and	op1	use-01	0.0.2	0.0	
# ::edge	and	op2	generous-41	0	0.1	
# ::edge	and	op2	rely-01	0.0.2	0.0.2.0	
# ::edge	date-entity	month	5	0.0.1	0.0.1.0	
# ::edge	foundation	quant	or	0.0.2.0.1	0.0.2.0.1.1	
# ::edge	generous-41	ARG1	allow-01	0.1	0.1.0	
# ::edge	generous-41	degree	enough	0.1	0.1.1	
# ::edge	need-01	ARG0	foundation	0.0.2.0.1.0	0.0.2.0.1	
# ::edge	or	op1	deep	0.0.2.0.1.1	0.0.2.0.1.1.0	
# ::edge	or	op2	wide	0.0.2.0.1.1	0.0.2.0.1.1.1	
# ::edge	rely-01	ARG0	it	0.0.2.0	0.0.2.0.0	
# ::edge	rely-01	ARG1	foundation	0.0.2.0	0.0.2.0.1	
# ::edge	use-01	ARG2	form	0.0	0.0.0	
# ::edge	use-01	mod	date-entity	0.0	0.0.1	
(a3 / and 
      :op1 (u / use-01 
            :ARG2 (f2 / form) 
            :mod (d2 / date-entity 
                  :month 5) 
            :op-of (a4 / and 
                  :op1 (r / rely-01 
                        :ARG0 (i / it) 
                        :ARG1 (f / foundation 
                              :ARG0-of (n / need-01) 
                              :quant (o / or 
                                    :op1 (d / deep) 
                                    :op2 (w / wide)))))) 
      :op2 (g / generous-41 
            :ARG1 (a2 / allow-01 
                  :ARG1 (a / access-01)) 
            :degree (e / enough)))

# ::snt there has been great interest shown by local companies who have come forward with generous support and have sponsored many of the individual classes
# ::tok there has been great interest shown by local companies who have come forward with generous support and have sponsored many of the individual classes
# ::alignments 23-24|0.1.0 22-23|0.0 19-20|0.1.0.0 18-19|0.1.1.1 16-17|0.1.1 15-16|0.1 14-15|0 12-13|0.1.1.1.0 8-9|0.1.1.0.1 7-8|0.1.1.0.1.0 5-6|0.1.1.0 4-5|0.1.1.0.0 3-4|0.1.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:39.538
# ::node	0	generous-41	14-15
# ::node	0.0	individual	22-23
# ::node	0.1	support-01	15-16
# ::node	0.1.0	class	23-24
# ::node	0.1.0.0	many	19-20
# ::node	0.1.1	and	16-17
# ::node	0.1.1.0	show-01	5-6
# ::node	0.1.1.0.0	interest-01	4-5
# ::node	0.1.1.0.0.0	great	3-4
# ::node	0.1.1.0.1	company	8-9
# ::node	0.1.1.0.1.0	local	7-8
# ::node	0.1.1.1	sponsor-01	18-19
# ::node	0.1.1.1.0	forward	12-13
# ::root	0	generous-41
# ::edge	and	op1	show-01	0.1.1	0.1.1.0	
# ::edge	and	op2	support-01	0.1.1	0.1	
# ::edge	and	op3	sponsor-01	0.1.1	0.1.1.1	
# ::edge	class	quant	many	0.1.0	0.1.0.0	
# ::edge	company	mod	local	0.1.1.0.1	0.1.1.0.1.0	
# ::edge	generous-41	ARG0	individual	0	0.0	
# ::edge	generous-41	ARG1	support-01	0	0.1	
# ::edge	interest-01	degree	great	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	show-01	ARG1	interest-01	0.1.1.0	0.1.1.0.0	
# ::edge	show-01	time	company	0.1.1.0	0.1.1.0.1	
# ::edge	sponsor-01	ARG1	forward	0.1.1.1	0.1.1.1.0	
# ::edge	support-01	ARG1	class	0.1	0.1.0	
(g / generous-41 
      :ARG0 (i / individual) 
      :ARG1 (s2 / support-01 
            :ARG1 (c / class 
                  :quant (m / many)) 
            :op-of (a / and 
                  :op1 (s3 / show-01 
                        :ARG1 (i2 / interest-01 
                              :degree (g2 / great)) 
                        :time (c2 / company 
                              :mod (l / local))) 
                  :op2 (s / sponsor-01 
                        :ARG1 (f / forward)))))

# ::snt german ability and hard work made the economy the most efficient in the eastern bloc helped by generous injections from west germany as relations improved
# ::tok german ability and hard work made the economy the most efficient in the eastern bloc helped by generous injections from west germany as relations improved
# ::alignments 24-25|0.1.1 23-24|0.1.1.1 20-21|0.1.0.1 17-18|0.0 15-16|0.1 14-15|0 13-14|0.2 10-11|0.1.0 9-10|0.1.0.0 7-8|0.1.1.2.0 3-4|0.1.1.0 2-3|0.1.1.2 1-2|0.1.1.2.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:39.662
# ::node	0	bloc	14-15
# ::node	0.0	generous-41	17-18
# ::node	0.1	help-01	15-16
# ::node	0.1.0	efficiency	10-11
# ::node	0.1.0.0	most	9-10
# ::node	0.1.0.1	west	20-21
# ::node	0.1.1	improve-01	24-25
# ::node	0.1.1.0	hard	3-4
# ::node	0.1.1.1	relation	23-24
# ::node	0.1.1.2	and	2-3
# ::node	0.1.1.2.0	economy	7-8
# ::node	0.1.1.2.1	ability	1-2
# ::node	0.2	east	13-14
# ::root	0	bloc
# ::edge	and	op1	ability	0.1.1.2	0.1.1.2.1	
# ::edge	and	op2	improve-01	0.1.1.2	0.1.1	
# ::edge	bloc	mod	east	0	0.2	
# ::edge	economy	location	and	0.1.1.2.0	0.1.1.2	
# ::edge	efficiency	degree	most	0.1.0	0.1.0.0	
# ::edge	efficiency	topic	west	0.1.0	0.1.0.1	
# ::edge	generous-41	ARG0	bloc	0.0	0	
# ::edge	help-01	ARG0	bloc	0.1	0	
# ::edge	help-01	ARG1	efficiency	0.1	0.1.0	
# ::edge	help-01	condition	improve-01	0.1	0.1.1	
# ::edge	improve-01	ARG0	hard	0.1.1	0.1.1.0	
# ::edge	improve-01	ARG1	relation	0.1.1	0.1.1.1	
(b / bloc 
      :ARG0-of (g / generous-41) 
      :ARG0-of (h / help-01 
            :ARG1 (e2 / efficiency 
                  :degree (m / most) 
                  :topic (w / west)) 
            :condition (i / improve-01 
                  :ARG0 (h2 / hard) 
                  :ARG1 (r / relation) 
                  :op-of (a / and 
                        :location-of (e3 / economy) 
                        :op1 (a2 / ability)))) 
      :mod (e / east))

# ::snt homeowners friendly society has teamed up with unity trust bank to put together a 10year savings plan which is tax free and offers a generous secure return
# ::tok homeowners friendly society has teamed up with unity trust bank to put together a 10year savings plan which is tax free and offers a generous secure return
# ::alignments 25-26|0.0 24-25|0 22-23|0.0.0 21-22|0.0.0.1 20-21|0.0.0.1.1 19-20|0.0.0.1.1.0 16-17|0.0.0.1.0 12-13|0.0.0.1.0.0 9-10|0.0.0.0.0.0 8-9|0.0.0.0.0 7-8|0.0.0.0.0.0.0.0+0.0.0.0.0.0.0 2-3|0.0.0.0 1-2|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:39.885
# ::node	0	generous-41	24-25
# ::node	0.0	secure-02	25-26
# ::node	0.0.0	offer-01	22-23
# ::node	0.0.0.0	society	2-3
# ::node	0.0.0.0.0	trust-01	8-9
# ::node	0.0.0.0.0.0	bank	9-10
# ::node	0.0.0.0.0.0.0	name	7-8
# ::node	0.0.0.0.0.0.0.0	"Unity"	7-8
# ::node	0.0.0.0.1	friendly-41	1-2
# ::node	0.0.0.1	and	21-22
# ::node	0.0.0.1.0	plan-01	16-17
# ::node	0.0.0.1.0.0	together	12-13
# ::node	0.0.0.1.1	free-41	20-21
# ::node	0.0.0.1.1.0	tax-01	19-20
# ::root	0	generous-41
# ::edge	and	op1	free-41	0.0.0.1	0.0.0.1.1	
# ::edge	and	op2	offer-01	0.0.0.1	0.0.0	
# ::edge	bank	mod	trust-01	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	bank	name	name	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	free-41	ARG1	tax-01	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	friendly-41	ARG1	society	0.0.0.0.1	0.0.0.0	
# ::edge	generous-41	ARG1	secure-02	0	0.0	
# ::edge	name	op1	"Unity"	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	offer-01	ARG0	society	0.0.0	0.0.0.0	
# ::edge	offer-01	ARG1	secure-02	0.0.0	0.0	
# ::edge	plan-01	ARG0	together	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	plan-01	ARG1	and	0.0.0.1.0	0.0.0.1	
# ::edge	trust-01	ARG0	society	0.0.0.0.0	0.0.0.0	
(g / generous-41 
      :ARG1 (s / secure-02 
            :ARG1-of (o / offer-01 
                  :ARG0 (s2 / society 
                        :ARG0-of (t3 / trust-01 
                              :mod-of (b / bank 
                                    :name (n / name 
                                          :op1 "Unity"))) 
                        :ARG1-of (f2 / friendly-41)) 
                  :op-of (a / and 
                        :ARG1-of (p / plan-01 
                              :ARG0 (t2 / together)) 
                        :op1 (f / free-41 
                              :ARG1 (t / tax-01))))))

# ::snt and the guest corridor up on the second floor would be dustsheeted leaving all the main groundfloor rooms and a generous number of guest rooms
# ::tok and the guest corridor up on the second floor would be dustsheeted leaving all the main groundfloor rooms and a generous number of guest rooms
# ::alignments 24-25|0.0.2.0.0.0 23-24|0.0.2.0.0.0.0 21-22|0.0.2.0.0 20-21|0.0.2.0 18-19|0 17-18|0.0.2 15-16|0.0.2.0.0.0.0.0 13-14|0.0.2.1 12-13|0.0 8-9|0.0.1 2-3|0.0.2.0.1 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:40.144
# ::node	0	and	18-19
# ::node	0.0	leave-01	12-13
# ::node	0.0.0	and	0-1
# ::node	0.0.1	floor	8-9
# ::node	0.0.2	room	17-18
# ::node	0.0.2.0	generous-41	20-21
# ::node	0.0.2.0.0	number	21-22
# ::node	0.0.2.0.0.0	room	24-25
# ::node	0.0.2.0.0.0.0	guest	23-24
# ::node	0.0.2.0.0.0.0.0	main	15-16
# ::node	0.0.2.0.1	guest	2-3
# ::node	0.0.2.1	all	13-14
# ::root	0	and
# ::edge	and	op1	leave-01	0	0.0	
# ::edge	generous-41	ARG1	number	0.0.2.0	0.0.2.0.0	
# ::edge	generous-41	ARG2	room	0.0.2.0	0.0.2	
# ::edge	guest	op1	generous-41	0.0.2.0.1	0.0.2.0	
# ::edge	leave-01	ARG0	and	0.0	0.0.0	
# ::edge	leave-01	ARG1	floor	0.0	0.0.1	
# ::edge	leave-01	ARG2	room	0.0	0.0.2	
# ::edge	main	op1	guest	0.0.2.0.0.0.0.0	0.0.2.0.0.0.0	
# ::edge	room	mod	guest	0.0.2.0.0.0	0.0.2.0.0.0.0	
# ::edge	room	quant	all	0.0.2	0.0.2.1	
# ::edge	room	quant	number	0.0.2.0.0.0	0.0.2.0.0	
(a / and 
      :op1 (l / leave-01 
            :ARG0 (a3 / and) 
            :ARG1 (f / floor) 
            :ARG2 (r2 / room 
                  :ARG2-of (g2 / generous-41 
                        :ARG1 (n / number 
                              :quant-of (r / room 
                                    :mod (g / guest 
                                          :op-of (m / main)))) 
                        :op-of (g3 / guest)) 
                  :quant (a2 / all))))

# ::snt the oxford association lost a friend recently with the death of jock rosie who made several generous donations over the years including a number of trophies
# ::tok the oxford association lost a friend recently with the death of jock rosie who made several generous donations over the years including a number of trophies
# ::alignments 23-24|0.1.0.1 20-21|0.1.0.0.0.0+0.1.0.0.0 17-18|0.1.0 16-17|0.1.0.0 15-16|0.1.0.2 9-10|0.1 6-7|0.2 5-6|0.0.0.0+0.0.0 3-4|0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:40.247
# ::node	0	lose-02	3-4
# ::node	0.0	associate-01	2-3
# ::node	0.0.0	have-rel-role-91	5-6
# ::node	0.0.0.0	friend	5-6
# ::node	0.1	die-01	9-10
# ::node	0.1.0	donate-01	17-18
# ::node	0.1.0.0	generous-41	16-17
# ::node	0.1.0.0.0	temporal-quantity	20-21
# ::node	0.1.0.0.0.0	year	20-21
# ::node	0.1.0.1	number	23-24
# ::node	0.1.0.2	several	15-16
# ::node	0.2	recent	6-7
# ::root	0	lose-02
# ::edge	donate-01	ARG0	die-01	0.1.0	0.1	
# ::edge	donate-01	location	number	0.1.0	0.1.0.1	
# ::edge	donate-01	quant	several	0.1.0	0.1.0.2	
# ::edge	generous-41	ARG1	temporal-quantity	0.1.0.0	0.1.0.0.0	
# ::edge	generous-41	ARG2	donate-01	0.1.0.0	0.1.0	
# ::edge	have-rel-role-91	ARG1	associate-01	0.0.0	0.0	
# ::edge	have-rel-role-91	ARG2	friend	0.0.0	0.0.0.0	
# ::edge	lose-02	ARG0	associate-01	0	0.0	
# ::edge	lose-02	ARG1	die-01	0	0.1	
# ::edge	lose-02	time	recent	0	0.2	
# ::edge	temporal-quantity	unit	year	0.1.0.0.0	0.1.0.0.0.0	
(l / lose-02 
      :ARG0 (a / associate-01 
            :ARG1-of (h / have-rel-role-91 
                  :ARG2 (f / friend))) 
      :ARG1 (d2 / die-01 
            :ARG0-of (d / donate-01 
                  :ARG2-of (g / generous-41 
                        :ARG1 (t / temporal-quantity 
                              :unit (y / year))) 
                  :location (n / number) 
                  :quant (s / several))) 
      :time (r / recent))

# ::snt i think es owed that said sprott i think es owed a generous tribute,  from st pauls cathedral to putney vale crematorium did not seem such a short distance to the neighbours such was their generous enthusiasm for donalds interment and when they heard there were plans for a memorial service at wimbledon parish church some people said it was even better to do it this way
# ::tok i think es owed that said sprott i think es owed a generous tribute , from st pauls cathedral to putney vale crematorium did not seem such a short distance to the neighbours such was their generous enthusiasm for donalds interment and when they heard there were plans for a memorial service at wimbledon parish church some people said it was even better to do it this way
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:40.249
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt he used his generous transfer funds to the maximum advantage both to secure great players and to create a star image for the club
# ::tok he used his generous transfer funds to the maximum advantage both to secure great players and to create a star image for the club
# ::alignments 23-24|0.1.1 20-21|0.1.0 19-20|0.2 17-18|0.1 15-16|0 14-15|0.0.1.0+0.0.1 13-14|0.0.1.1 12-13|0.0 10-11|0.0.2 9-10|0.0.0.0.1 8-9|0.0.0.0.1.0 5-6|0.0.0.0.0 4-5|0.0.0.1 3-4|0.0.0.0.0.0 1-2|0.0.0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:40.958
# ::node	0	and	15-16
# ::node	0.0	secure-02	12-13
# ::node	0.0.0	he	0-1
# ::node	0.0.0.0	use-01	1-2
# ::node	0.0.0.0.0	fund	5-6
# ::node	0.0.0.0.0.0	generous-41	3-4
# ::node	0.0.0.0.1	advantage	9-10
# ::node	0.0.0.0.1.0	maximum	8-9
# ::node	0.0.0.1	transfer-01	4-5
# ::node	0.0.1	person	14-15
# ::node	0.0.1.0	play-01	14-15
# ::node	0.0.1.1	great	13-14
# ::node	0.0.2	both	10-11
# ::node	0.1	create-01	17-18
# ::node	0.1.0	image	20-21
# ::node	0.1.1	club	23-24
# ::node	0.2	star	19-20
# ::root	0	and
# ::edge	advantage	mod	maximum	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	and	op1	secure-02	0	0.0	
# ::edge	and	op2	create-01	0	0.1	
# ::edge	and	op3	star	0	0.2	
# ::edge	create-01	ARG1	image	0.1	0.1.0	
# ::edge	create-01	ARG2	club	0.1	0.1.1	
# ::edge	generous-41	ARG1	fund	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	person	mod	great	0.0.1	0.0.1.1	
# ::edge	play-01	ARG0	person	0.0.1.0	0.0.1	
# ::edge	secure-02	ARG0	he	0.0	0.0.0	
# ::edge	secure-02	ARG1	person	0.0	0.0.1	
# ::edge	secure-02	ARG2	both	0.0	0.0.2	
# ::edge	transfer-01	ARG1	he	0.0.0.1	0.0.0	
# ::edge	use-01	ARG0	he	0.0.0.0	0.0.0	
# ::edge	use-01	ARG1	fund	0.0.0.0	0.0.0.0.0	
# ::edge	use-01	ARG2	advantage	0.0.0.0	0.0.0.0.1	
(a / and 
      :op1 (s2 / secure-02 
            :ARG0 (h / he 
                  :ARG0-of (u / use-01 
                        :ARG1 (f / fund 
                              :ARG1-of (g2 / generous-41)) 
                        :ARG2 (a2 / advantage 
                              :mod (m / maximum))) 
                  :ARG1-of (t / transfer-01)) 
            :ARG1 (p / person 
                  :ARG0-of (p2 / play-01) 
                  :mod (g / great)) 
            :ARG2 (b / both)) 
      :op2 (c2 / create-01 
            :ARG1 (i / image) 
            :ARG2 (c / club)) 
      :op3 (s / star))

# ::snt had british steel closed down just two years later he doubts such a generous supply of grant aid and political goodwill would have been forthcoming whatever the effort made to maintain it
# ::tok had british steel closed down just two years later he doubts such a generous supply of grant aid and political goodwill would have been forthcoming whatever the effort made to maintain it
# ::alignments 31-32|0.0.2.0.1.0.0.0 30-31|0.0.2.0.1.0.0 27-28|0.0.2.0.1.0 25-26|0.0.2.0.1 24-25|0.0.2.0 20-21|0.0.2.0.0 19-20|0.0.2.0.0.0 18-19|0.0.2 17-18|0.0.1 16-17|0.0.1.0 14-15|0.0 13-14|0 11-12|0.1 10-11|0.0.0.0 9-10|0.0.0 8-9|0.0.0.0.0 7-8|0.0.0.0.0.0.2+0.0.0.0.0.0 6-7|0.0.0.0.0.0.1 5-6|0.0.0.0.0.0.0 4-5|0.0.0.0.1.1 3-4|0.0.0.0.1 2-3|0.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:41.534
# ::node	0	generous-41	13-14
# ::node	0.0	supply-01	14-15
# ::node	0.0.0	he	9-10
# ::node	0.0.0.0	doubt-01	10-11
# ::node	0.0.0.0.0	late	8-9
# ::node	0.0.0.0.0.0	temporal-quantity	7-8
# ::node	0.0.0.0.0.0.0	just	5-6
# ::node	0.0.0.0.0.0.1	2	6-7
# ::node	0.0.0.0.0.0.2	year	7-8
# ::node	0.0.0.0.1	close-01	3-4
# ::node	0.0.0.0.1.0	steel	2-3
# ::node	0.0.0.0.1.1	down	4-5
# ::node	0.0.1	aid-01	17-18
# ::node	0.0.1.0	grant-01	16-17
# ::node	0.0.2	and	18-19
# ::node	0.0.2.0	forthcoming	24-25
# ::node	0.0.2.0.0	goodwill	20-21
# ::node	0.0.2.0.0.0	politics	19-20
# ::node	0.0.2.0.1	whatever	25-26
# ::node	0.0.2.0.1.0	effort	27-28
# ::node	0.0.2.0.1.0.0	maintain-01	30-31
# ::node	0.0.2.0.1.0.0.0	it	31-32
# ::node	0.1	such	11-12
# ::root	0	generous-41
# ::edge	aid-01	ARG1	grant-01	0.0.1	0.0.1.0	
# ::edge	and	op1	supply-01	0.0.2	0.0	
# ::edge	and	op2	forthcoming	0.0.2	0.0.2.0	
# ::edge	close-01	ARG1	steel	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	close-01	direction	down	0.0.0.0.1	0.0.0.0.1.1	
# ::edge	close-01	time	doubt-01	0.0.0.0.1	0.0.0.0	
# ::edge	doubt-01	ARG0	he	0.0.0.0	0.0.0	
# ::edge	doubt-01	ARG1	late	0.0.0.0	0.0.0.0.0	
# ::edge	effort	mod	whatever	0.0.2.0.1.0	0.0.2.0.1	
# ::edge	forthcoming	mod	goodwill	0.0.2.0	0.0.2.0.0	
# ::edge	forthcoming	mod	whatever	0.0.2.0	0.0.2.0.1	
# ::edge	generous-41	ARG1	supply-01	0	0.0	
# ::edge	generous-41	degree	such	0	0.1	
# ::edge	goodwill	mod	politics	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	late	op1	temporal-quantity	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	maintain-01	ARG0	effort	0.0.2.0.1.0.0	0.0.2.0.1.0	
# ::edge	maintain-01	ARG1	it	0.0.2.0.1.0.0	0.0.2.0.1.0.0.0	
# ::edge	supply-01	ARG0	he	0.0	0.0.0	
# ::edge	supply-01	ARG1	aid-01	0.0	0.0.1	
# ::edge	temporal-quantity	mod	just	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	temporal-quantity	quant	2	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	temporal-quantity	unit	year	0.0.0.0.0.0	0.0.0.0.0.0.2	
(g3 / generous-41 
      :ARG1 (s / supply-01 
            :ARG0 (h / he 
                  :ARG0-of (d / doubt-01 
                        :ARG1 (l / late 
                              :op1 (t / temporal-quantity 
                                    :mod (j / just) 
                                    :quant 2 
                                    :unit (y / year))) 
                        :time-of (c / close-01 
                              :ARG1 (s3 / steel) 
                              :direction (d2 / down)))) 
            :ARG1 (a2 / aid-01 
                  :ARG1 (g2 / grant-01)) 
            :op-of (a / and 
                  :op1 (f / forthcoming 
                        :mod (g / goodwill 
                              :mod (p / politics)) 
                        :mod (w / whatever 
                              :mod-of (e / effort 
                                    :ARG0-of (m / maintain-01 
                                          :ARG1 (i / it))))))) 
      :degree (s2 / such))

# ::snt such a generous deal for a book on mr haigs four decades in government has mystified the publishing world
# ::tok such a generous deal for a book on mr haigs four decades in government has mystified the publishing world
# ::alignments 18-19|0.0.0.0.0.0.0 17-18|0.0.0.0.0.0 11-12|0+0.0 10-11|0.0.1 6-7|0.0.0.0.0 3-4|0.0.0.0 2-3|0.0.0 0-1|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:41.599
# ::node	0	decade	11-12
# ::node	0.0	temporal-quantity	11-12
# ::node	0.0.0	generous-41	2-3
# ::node	0.0.0.0	deal-01	3-4
# ::node	0.0.0.0.0	book	6-7
# ::node	0.0.0.0.0.0	publish-01	17-18
# ::node	0.0.0.0.0.0.0	world	18-19
# ::node	0.0.0.0.1	such	0-1
# ::node	0.0.1	4	10-11
# ::root	0	decade
(d / decade 
      :unit-of (t / temporal-quantity 
            :ARG0-of (g / generous-41 
                  :ARG1 (d2 / deal-01 
                        :ARG1 (b / book 
                              :ARG1-of (p / publish-01 
                                    :ARG0 (w / world))) 
                        :mod (s / such))) 
            :quant 4))

# ::snt generous to a fault and if he wasnt always strictly aboveboardwell a man had to live
# ::tok generous to a fault and if he wasnt always strictly aboveboardwell a man had to live
# ::alignments 15-16|0.0.0.0 12-13|0.0.0.0.0 9-10|0.0.1.0.0 8-9|0.0.1.0 6-7|0.0.0 4-5|0 3-4|0.0.1 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:41.848
# ::node	0	and	4-5
# ::node	0.0	generous-41	0-1
# ::node	0.0.0	he	6-7
# ::node	0.0.0.0	live-01	15-16
# ::node	0.0.0.0.0	man	12-13
# ::node	0.0.1	fault-01	3-4
# ::node	0.0.1.0	always	8-9
# ::node	0.0.1.0.0	strict	9-10
# ::root	0	and
(a2 / and 
      :ARG0-of (g / generous-41 
            :ARG1 (h / he 
                  :ARG1-of (l / live-01 
                        :ARG0 (m / man))) 
            :ARG2 (f / fault-01 
                  :ARG1 (a / always 
                        :time (s / strict)))))

# ::snt this was true only for a tiny proportion of the elderly and rich who would be eligible for the maximum dollars 800  500 surcharge even though they already had generous private or company health insurance schemes
# ::tok this was true only for a tiny proportion of the elderly and rich who would be eligible for the maximum dollars 800 500 surcharge even though they already had generous private or company health insurance schemes
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:41.849
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt aesthetically it offers a generous feeling of area with a strong axis
# ::tok aesthetically it offers a generous feeling of area with a strong axis
# ::alignments 11-12|0.2 10-11|0.2.0 7-8|0.1.0 5-6|0.1 4-5|0.1.1 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:42.019
# ::node	0	offer-01	2-3
# ::node	0.0	it	1-2
# ::node	0.1	feel-01	5-6
# ::node	0.1.0	area	7-8
# ::node	0.1.1	generous-41	4-5
# ::node	0.2	axis	11-12
# ::node	0.2.0	strong	10-11
# ::root	0	offer-01
# ::edge	axis	mod	strong	0.2	0.2.0	
# ::edge	feel-01	ARG1	area	0.1	0.1.0	
# ::edge	generous-41	ARG1	feel-01	0.1.1	0.1	
# ::edge	offer-01	ARG0	it	0	0.0	
# ::edge	offer-01	ARG1	feel-01	0	0.1	
# ::edge	offer-01	ARG2	axis	0	0.2	
(o / offer-01 
      :ARG0 (i / it) 
      :ARG1 (f / feel-01 
            :ARG1 (a2 / area) 
            :ARG1-of (g / generous-41)) 
      :ARG2 (a / axis 
            :mod (s / strong)))

# ::snt despite the fact that she still suffers from back pain ms szabo is a generous sort and bears no grudge against the tuna per se
# ::tok despite the fact that she still suffers from back pain ms szabo is a generous sort and bears no grudge against the tuna per se
# ::alignments 19-20|0.2.0.0 18-19|0.2.0.0.0 17-18|0.2.0+0.2 16-17|0 15-16|0.0.2.0 14-15|0.0.2 9-10|0.1 8-9|0.1.0 6-7|0.0 5-6|0.0.3 4-5|0.0.0 2-3|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:42.152
# ::node	0	and	16-17
# ::node	0.0	suffer-01	6-7
# ::node	0.0.0	she	4-5
# ::node	0.0.1	fact	2-3
# ::node	0.0.2	generous-41	14-15
# ::node	0.0.2.0	sort	15-16
# ::node	0.0.3	still	5-6
# ::node	0.1	pain-01	9-10
# ::node	0.1.0	back	8-9
# ::node	0.2	thing	17-18
# ::node	0.2.0	bear-01	17-18
# ::node	0.2.0.0	grudge-01	19-20
# ::node	0.2.0.0.0	-	18-19
# ::root	0	and
# ::edge	and	op1	suffer-01	0	0.0	
# ::edge	and	op2	pain-01	0	0.1	
# ::edge	and	op3	thing	0	0.2	
# ::edge	bear-01	ARG1	grudge-01	0.2.0	0.2.0.0	
# ::edge	bear-01	manner	thing	0.2.0	0.2	
# ::edge	generous-41	ARG1	suffer-01	0.0.2	0.0	
# ::edge	generous-41	ARG2	sort	0.0.2	0.0.2.0	
# ::edge	grudge-01	polarity	-	0.2.0.0	0.2.0.0.0	
# ::edge	pain-01	ARG0	back	0.1	0.1.0	
# ::edge	suffer-01	ARG0	she	0.0	0.0.0	
# ::edge	suffer-01	ARG1	fact	0.0	0.0.1	
# ::edge	suffer-01	time	still	0.0	0.0.3	
(a / and 
      :op1 (s2 / suffer-01 
            :ARG0 (s4 / she) 
            :ARG1 (f / fact) 
            :ARG1-of (g2 / generous-41 
                  :ARG2 (s / sort)) 
            :time (s3 / still)) 
      :op2 (p / pain-01 
            :ARG0 (b2 / back)) 
      :op3 (t / thing 
            :manner-of (b / bear-01 
                  :ARG1 (g / grudge-01 
                        :polarity (- / -)))))

# ::snt and naked  she hadnt slept naked for years and years yet he could remember her when she had been warm and fleshly and generous
# ::tok and naked she hadnt slept naked for years and years yet he could remember her when she had been warm and fleshly and generous
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:42.153
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt in addition hci offers the following generous reductions for the second child sharing a room with 2 full fare paying passengers at all clubs where you see this symbol
# ::tok in addition hci offers the following generous reductions for the second child sharing a room with 2 full fare paying passengers at all clubs where you see this symbol
# ::alignments 28-29|0.2.1.0+0.2.1 27-28|0.2.1.1 26-27|0.2 25-26|0.2.0 23-24|0 22-23|0.1 20-21|0.0.2 19-20|0.0 18-19|0.0.0 17-18|0.0.0.0 16-17|0.0.0.1 14-15|0.0.1 12-13|0.0.1.0 11-12|0.0.1.0.0 7-8|0.0.1.0.0.0 6-7|0.0.1.0.0.0.0 3-4|0.0.1.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:42.539
# ::node	0	club	23-24
# ::node	0.0	pay-01	19-20
# ::node	0.0.0	fare	18-19
# ::node	0.0.0.0	full	17-18
# ::node	0.0.0.1	2	16-17
# ::node	0.0.1	room	14-15
# ::node	0.0.1.0	share-01	12-13
# ::node	0.0.1.0.0	child	11-12
# ::node	0.0.1.0.0.0	reduce-01	7-8
# ::node	0.0.1.0.0.0.0	generous-41	6-7
# ::node	0.0.1.0.0.0.1	offer-01	3-4
# ::node	0.0.2	passenger	20-21
# ::node	0.1	all	22-23
# ::node	0.2	see-01	26-27
# ::node	0.2.0	you	25-26
# ::node	0.2.1	thing	28-29
# ::node	0.2.1.0	symbolize-01	28-29
# ::node	0.2.1.1	this	27-28
# ::root	0	club
# ::edge	club	quant	all	0	0.1	
# ::edge	fare	mod	full	0.0.0	0.0.0.0	
# ::edge	fare	quant	2	0.0.0	0.0.0.1	
# ::edge	generous-41	ARG1	reduce-01	0.0.1.0.0.0.0	0.0.1.0.0.0	
# ::edge	offer-01	ARG1	reduce-01	0.0.1.0.0.0.1	0.0.1.0.0.0	
# ::edge	pay-01	ARG0	fare	0.0	0.0.0	
# ::edge	pay-01	ARG1	room	0.0	0.0.1	
# ::edge	pay-01	ARG2	passenger	0.0	0.0.2	
# ::edge	pay-01	ARG3	club	0.0	0	
# ::edge	reduce-01	ARG1	child	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	see-01	ARG0	you	0.2	0.2.0	
# ::edge	see-01	ARG1	thing	0.2	0.2.1	
# ::edge	see-01	time	club	0.2	0	
# ::edge	share-01	ARG0	child	0.0.1.0	0.0.1.0.0	
# ::edge	share-01	ARG1	room	0.0.1.0	0.0.1	
# ::edge	symbolize-01	ARG1	thing	0.2.1.0	0.2.1	
# ::edge	thing	mod	this	0.2.1	0.2.1.1	
(c / club 
      :ARG3-of (p2 / pay-01 
            :ARG0 (f / fare 
                  :mod (f2 / full) 
                  :quant 2) 
            :ARG1 (r / room 
                  :ARG1-of (s3 / share-01 
                        :ARG0 (c2 / child 
                              :ARG1-of (r2 / reduce-01 
                                    :ARG1-of (g / generous-41) 
                                    :ARG1-of (o / offer-01))))) 
            :ARG2 (p / passenger)) 
      :quant (a / all) 
      :time-of (s2 / see-01 
            :ARG0 (y / you) 
            :ARG1 (t / thing 
                  :ARG1-of (s / symbolize-01) 
                  :mod (t2 / this))))

# ::snt general and sun alliance in the form of extremely generous commission on the products sold
# ::tok general and sun alliance in the form of extremely generous commission on the products sold
# ::alignments 14-15|0.0.0.0 13-14|0.0.0.0.0 10-11|0.0.0.3.0 9-10|0.0.0.3 8-9|0.0.0.3.1 6-7|0.0.0.2 3-4|0.0 2-3|0 1-2|0.0.0 0-1|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:42.592
# ::node	0	sun	2-3
# ::node	0.0	alliance	3-4
# ::node	0.0.0	and	1-2
# ::node	0.0.0.0	sell-01	14-15
# ::node	0.0.0.0.0	product	13-14
# ::node	0.0.0.1	general	0-1
# ::node	0.0.0.2	form	6-7
# ::node	0.0.0.3	generous-41	9-10
# ::node	0.0.0.3.0	commission	10-11
# ::node	0.0.0.3.1	extreme	8-9
# ::root	0	sun
(s2 / sun 
      :mod-of (a / alliance 
            :op-of (a2 / and 
                  :ARG0-of (s / sell-01 
                        :ARG1 (p / product)) 
                  :op1 (g2 / general) 
                  :op2 (f / form) 
                  :op3 (g / generous-41 
                        :ARG0 (c / commission) 
                        :degree (e / extreme)))))

# ::snt a generous dispenser of money and arms
# ::tok a generous dispenser of money and arms
# ::alignments 6-7|0.1 5-6|0 4-5|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:42.602
# ::node	0	and	5-6
# ::node	0.0	money	4-5
# ::node	0.0.0	generous-41	1-2
# ::node	0.1	arm	6-7
# ::root	0	and
# ::edge	and	op1	money	0	0.0	
# ::edge	and	op2	arm	0	0.1	
# ::edge	generous-41	ARG1	money	0.0.0	0.0	
(a2 / and 
      :op1 (m / money 
            :ARG1-of (g / generous-41)) 
      :op2 (a / arm))

# ::snt a more generous presenter would have suggested that the doctor rephrase his answer but by now heminway was getting his revenge for being snubbed by the locals earlier even the dogs wouldnt talk to him
# ::tok a more generous presenter would have suggested that the doctor rephrase his answer but by now heminway was getting his revenge for being snubbed by the locals earlier even the dogs wouldnt talk to him
# ::alignments 32-33|0.0 30-31|0.3.1 27-28|0.0.0 26-27|0.1.0 20-21|0.3.0.0 15-16|0.3.0.0.0 13-14|0 12-13|0.3 9-10|0.3.0 6-7|0.2 2-3|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:42.715
# ::node	0	contrast-01	13-14
# ::node	0.0	talk-01	32-33
# ::node	0.0.0	early	27-28
# ::node	0.1	generous-41	2-3
# ::node	0.1.0	local	26-27
# ::node	0.2	suggest-01	6-7
# ::node	0.3	answer-01	12-13
# ::node	0.3.0	doctor	9-10
# ::node	0.3.0.0	revenge-00	20-21
# ::node	0.3.0.0.0	now	15-16
# ::node	0.3.1	dog	30-31
# ::root	0	contrast-01
# ::edge	answer-01	ARG0	doctor	0.3	0.3.0	
# ::edge	answer-01	ARG1	dog	0.3	0.3.1	
# ::edge	contrast-01	ARG1	talk-01	0	0.0	
# ::edge	contrast-01	ARG2	answer-01	0	0.3	
# ::edge	generous-41	ARG0	local	0.1	0.1.0	
# ::edge	generous-41	ARG1	contrast-01	0.1	0	
# ::edge	revenge-00	ARG0	doctor	0.3.0.0	0.3.0	
# ::edge	revenge-00	ARG1	now	0.3.0.0	0.3.0.0.0	
# ::edge	suggest-01	ARG1	contrast-01	0.2	0	
# ::edge	talk-01	ARG0	early	0.0	0.0.0	
(c / contrast-01 
      :ARG1 (t / talk-01 
            :ARG0 (e / early)) 
      :ARG1-of (g / generous-41 
            :ARG0 (l / local)) 
      :ARG1-of (s / suggest-01) 
      :ARG2 (a / answer-01 
            :ARG0 (d2 / doctor 
                  :ARG0-of (r / revenge-00 
                        :ARG1 (n / now))) 
            :ARG1 (d / dog)))

# ::snt newcastle which to date have been far from generous
# ::tok newcastle which to date have been far from generous
# ::alignments 8-9|0 6-7|0.1 3-4|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:42.726
# ::node	0	generous-41	8-9
# ::node	0.0	date	3-4
# ::node	0.1	far	6-7
# ::root	0	generous-41
# ::edge	far	prep-from	generous-41	0.1	0	
# ::edge	generous-41	ARG1	date	0	0.0	
(g / generous-41 
      :ARG1 (d / date) 
      :prep-from-of (f / far))

# ::snt very generous said william
# ::tok very generous said william
# ::alignments 2-3|0 1-2|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:42.733
# ::node	0	say-01	2-3
# ::node	0.0	generous-41	1-2
# ::node	0.0.0	very	0-1
# ::root	0	say-01
(s / say-01 
      :ARG1-of (g / generous-41 
            :degree (v / very)))

# ::snt southern arts oxfordshire county council and cherwell district council have also provided generous financial support for the event
# ::tok southern arts oxfordshire county council and cherwell district council have also provided generous financial support for the event
# ::alignments 17-18|0.0.0.1 14-15|0.0.0 13-14|0.0.0.3 12-13|0.0.0.2 11-12|0.0 10-11|0.0.1 8-9|0.1 7-8|0.1.0 5-6|0 4-5|0.0.0.2.0 3-4|0.0.0.2.0.0 1-2|0.0.0.0 0-1|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:43.310
# ::node	0	and	5-6
# ::node	0.0	provide-01	11-12
# ::node	0.0.0	support-01	14-15
# ::node	0.0.0.0	art	1-2
# ::node	0.0.0.0.0	south	0-1
# ::node	0.0.0.1	event	17-18
# ::node	0.0.0.2	generous-41	12-13
# ::node	0.0.0.2.0	council	4-5
# ::node	0.0.0.2.0.0	county	3-4
# ::node	0.0.0.3	finance	13-14
# ::node	0.0.1	also	10-11
# ::node	0.1	council	8-9
# ::node	0.1.0	district	7-8
# ::root	0	and
# ::edge	and	op1	council	0	0.1	
# ::edge	art	mod	south	0.0.0.0	0.0.0.0.0	
# ::edge	council	mod	county	0.0.0.2.0	0.0.0.2.0.0	
# ::edge	council	mod	district	0.1	0.1.0	
# ::edge	generous-41	ARG0	council	0.0.0.2	0.0.0.2.0	
# ::edge	generous-41	ARG1	support-01	0.0.0.2	0.0.0	
# ::edge	provide-01	ARG0	and	0.0	0	
# ::edge	provide-01	ARG1	support-01	0.0	0.0.0	
# ::edge	provide-01	mod	also	0.0	0.0.1	
# ::edge	support-01	ARG0	art	0.0.0	0.0.0.0	
# ::edge	support-01	ARG1	event	0.0.0	0.0.0.1	
# ::edge	support-01	mod	finance	0.0.0	0.0.0.3	
(a2 / and 
      :ARG0-of (p / provide-01 
            :ARG1 (s / support-01 
                  :ARG0 (a3 / art 
                        :mod (s2 / south)) 
                  :ARG1 (e / event) 
                  :ARG1-of (g / generous-41 
                        :ARG0 (c2 / council 
                              :mod (c3 / county))) 
                  :mod (f / finance)) 
            :mod (a / also)) 
      :op1 (c / council 
            :mod (d / district)))

# ::snt why are government subsidies so generous to conservative councils in london
# ::tok why are government subsidies so generous to conservative councils in london
# ::alignments 10-11|0.2.0.0.0+0.2.0.0+0.2.0 8-9|0.2 7-8|0.2.1 5-6|0 4-5|0.1 3-4|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:43.358
# ::node	0	generous-41	5-6
# ::node	0.0	subsidize-01	3-4
# ::node	0.1	so	4-5
# ::node	0.2	council	8-9
# ::node	0.2.0	city	10-11
# ::node	0.2.0.0	name	10-11
# ::node	0.2.0.0.0	"London"	10-11
# ::node	0.2.1	conservative	7-8
# ::root	0	generous-41
# ::edge	city	name	name	0.2.0	0.2.0.0	
# ::edge	council	location	city	0.2	0.2.0	
# ::edge	council	mod	conservative	0.2	0.2.1	
# ::edge	generous-41	ARG1	subsidize-01	0	0.0	
# ::edge	generous-41	degree	so	0	0.1	
# ::edge	generous-41	prep-to	council	0	0.2	
# ::edge	name	op1	"London"	0.2.0.0	0.2.0.0.0	
(g / generous-41 
      :ARG1 (s2 / subsidize-01) 
      :degree (s / so) 
      :prep-to (c2 / council 
            :location (c / city 
                  :name (n / name 
                        :op1 "London")) 
            :mod (c3 / conservative)))

# ::snt but new rules also allow for more generous relief
# ::tok but new rules also allow for more generous relief
# ::alignments 8-9|0.0.1 7-8|0.0.1.0 4-5|0.0 3-4|0.0.2 2-3|0.0.0 1-2|0.0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:43.377
# ::node	0	contrast-01	0-1
# ::node	0.0	allow-01	4-5
# ::node	0.0.0	rule	2-3
# ::node	0.0.0.0	new	1-2
# ::node	0.0.1	relieve-01	8-9
# ::node	0.0.1.0	generous-41	7-8
# ::node	0.0.2	also	3-4
# ::root	0	contrast-01
# ::edge	allow-01	ARG0	rule	0.0	0.0.0	
# ::edge	allow-01	ARG1	relieve-01	0.0	0.0.1	
# ::edge	allow-01	mod	also	0.0	0.0.2	
# ::edge	contrast-01	ARG1	allow-01	0	0.0	
# ::edge	generous-41	ARG1	relieve-01	0.0.1.0	0.0.1	
# ::edge	rule	mod	new	0.0.0	0.0.0.0	
(c / contrast-01 
      :ARG1 (a / allow-01 
            :ARG0 (r2 / rule 
                  :mod (n / new)) 
            :ARG1 (r / relieve-01 
                  :ARG1-of (g / generous-41)) 
            :mod (a2 / also)))

# ::snt mr gorbachevs blueprint included a generous plug for that archmonetarist milton friedman whom he had met in america dash
# ::tok mr gorbachevs blueprint included a generous plug for that archmonetarist milton friedman whom he had met in america dash
# ::alignments 17-18|0.0.0.0.0+0.0.0.0+0.0.0 15-16|0.0.1 13-14|0.0.1.0 6-7|0.0 5-6|0.0.2 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:43.413
# ::node	0	include-01	3-4
# ::node	0.0	plug-03	6-7
# ::node	0.0.0	country	17-18
# ::node	0.0.0.0	name	17-18
# ::node	0.0.0.0.0	"America"	17-18
# ::node	0.0.1	meet-03	15-16
# ::node	0.0.1.0	he	13-14
# ::node	0.0.2	generous-41	5-6
# ::root	0	include-01
# ::edge	country	name	name	0.0.0	0.0.0.0	
# ::edge	generous-41	ARG1	plug-03	0.0.2	0.0	
# ::edge	include-01	ARG1	plug-03	0	0.0	
# ::edge	meet-03	ARG0	he	0.0.1	0.0.1.0	
# ::edge	meet-03	ARG1	plug-03	0.0.1	0.0	
# ::edge	name	op1	"America"	0.0.0.0	0.0.0.0.0	
# ::edge	plug-03	ARG1	country	0.0	0.0.0	
(i / include-01 
      :ARG1 (p / plug-03 
            :ARG1 (c / country 
                  :name (n / name 
                        :op1 "America")) 
            :ARG1-of (m / meet-03 
                  :ARG0 (h / he)) 
            :ARG1-of (g / generous-41)))

# ::snt   one of the companys most generous sponsors has been the royal insurance company and its chief executive ian rushton has made the point no business could operate successfully when a major source of revenue dash
# ::tok one of the companys most generous sponsors has been the royal insurance company and its chief executive ian rushton has made the point no business could operate successfully when a major source of revenue dash
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:43.413
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt and your father and i are quite comfortable though its very generous of you to offer dear
# ::tok and your father and i are quite comfortable though its very generous of you to offer dear
# ::alignments 16-17|0.1.2 15-16|0.1 13-14|0.1.0 11-12|0 10-11|0.0 7-8|0.1.1.1.0.0 6-7|0.1.1.1.0.0.0 4-5|0.1.1.1 3-4|0.1.1 2-3|0.1.1.1.0.1+0.1.1.1.0 0-1|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:43.551
# ::node	0	generous-41	11-12
# ::node	0.0	very	10-11
# ::node	0.1	offer-01	15-16
# ::node	0.1.0	you	13-14
# ::node	0.1.1	and	3-4
# ::node	0.1.1.0	and	0-1
# ::node	0.1.1.1	i	4-5
# ::node	0.1.1.1.0	have-rel-role-91	2-3
# ::node	0.1.1.1.0.0	comfortable	7-8
# ::node	0.1.1.1.0.0.0	quite	6-7
# ::node	0.1.1.1.0.1	father	2-3
# ::node	0.1.2	dear	16-17
# ::root	0	generous-41
# ::edge	and	op1	and	0.1.1	0.1.1.0	
# ::edge	and	op2	i	0.1.1	0.1.1.1	
# ::edge	comfortable	degree	quite	0.1.1.1.0.0	0.1.1.1.0.0.0	
# ::edge	generous-41	ARG0	very	0	0.0	
# ::edge	generous-41	ARG1	offer-01	0	0.1	
# ::edge	have-rel-role-91	ARG0	comfortable	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	have-rel-role-91	ARG1	i	0.1.1.1.0	0.1.1.1	
# ::edge	have-rel-role-91	ARG2	father	0.1.1.1.0	0.1.1.1.0.1	
# ::edge	offer-01	ARG0	you	0.1	0.1.0	
# ::edge	offer-01	ARG1	and	0.1	0.1.1	
# ::edge	offer-01	manner	dear	0.1	0.1.2	
(g / generous-41 
      :ARG0 (v / very) 
      :ARG1 (o / offer-01 
            :ARG0 (y / you) 
            :ARG1 (a / and 
                  :op1 (a2 / and) 
                  :op2 (i / i 
                        :ARG1-of (h / have-rel-role-91 
                              :ARG0 (c / comfortable 
                                    :degree (q / quite)) 
                              :ARG2 (f / father)))) 
            :manner (d / dear)))

# ::snt many thanks to all the nct new mums for their generous sponsorship
# ::tok many thanks to all the nct new mums for their generous sponsorship
# ::alignments 10-11|0.1 6-7|0.0.0 3-4|0.0 1-2|0 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:43.571
# ::node	0	thank-01	1-2
# ::node	0.0	all	3-4
# ::node	0.0.0	new	6-7
# ::node	0.1	generous-41	10-11
# ::node	0.2	many	0-1
# ::root	0	thank-01
# ::edge	all	mod	new	0.0	0.0.0	
# ::edge	generous-41	ARG1	thank-01	0.1	0	
# ::edge	thank-01	ARG1	all	0	0.0	
# ::edge	thank-01	quant	many	0	0.2	
(t / thank-01 
      :ARG1 (a / all 
            :mod (n / new)) 
      :ARG1-of (g / generous-41) 
      :quant (m / many))

# ::snt dartnall decided that lamberts policies werent bringing him the best british productions and he set up a series of very generous deals with independent producers
# ::tok dartnall decided that lamberts policies werent bringing him the best british productions and he set up a series of very generous deals with independent producers
# ::alignments 24-25|0.0.0.0.1+0.0.0.0.1.0 23-24|0.0.0.0.1.0.0.0+0.0.0.0.1.0.0 21-22|0.0 20-21|0 19-20|0.1 17-18|0.0.0 13-14|0.0.0.0 12-13|0.0.0.0.0.0.0 6-7|0.0.0.0.0 4-5|0.0.0.0.0.0 1-2|0.0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:43.703
# ::node	0	generous-41	20-21
# ::node	0.0	deal-01	21-22
# ::node	0.0.0	series	17-18
# ::node	0.0.0.0	he	13-14
# ::node	0.0.0.0.0	bring-01	6-7
# ::node	0.0.0.0.0.0	policy	4-5
# ::node	0.0.0.0.0.0.0	and	12-13
# ::node	0.0.0.0.0.0.0.0	decide-01	1-2
# ::node	0.0.0.0.1	produce-01	24-25
# ::node	0.0.0.0.1.0	person	24-25
# ::node	0.0.0.0.1.0.0	depend-01	23-24
# ::node	0.0.0.0.1.0.0.0	-	23-24
# ::node	0.1	very	19-20
# ::root	0	generous-41
# ::edge	and	op1	policy	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	bring-01	ARG0	policy	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	bring-01	ARG1	he	0.0.0.0.0	0.0.0.0	
# ::edge	deal-01	ARG1	series	0.0	0.0.0	
# ::edge	decide-01	ARG1	and	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	depend-01	ARG0	person	0.0.0.0.1.0.0	0.0.0.0.1.0	
# ::edge	depend-01	polarity	-	0.0.0.0.1.0.0	0.0.0.0.1.0.0.0	
# ::edge	generous-41	ARG1	deal-01	0	0.0	
# ::edge	generous-41	degree	very	0	0.1	
# ::edge	produce-01	ARG0	person	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	produce-01	ARG1	he	0.0.0.0.1	0.0.0.0	
# ::edge	series	poss	he	0.0.0	0.0.0.0	
(g / generous-41 
      :ARG1 (d2 / deal-01 
            :ARG1 (s / series 
                  :poss (h / he 
                        :ARG1-of (b / bring-01 
                              :ARG0 (p3 / policy 
                                    :op-of (a / and 
                                          :ARG1-of (d3 / decide-01)))) 
                        :ARG1-of (p2 / produce-01 
                              :ARG0 (p / person 
                                    :ARG0-of (d / depend-01 
                                          :polarity -)))))) 
      :degree (v / very))

# ::snt the latter is very important for the public relations of the expedition world in general because only too many expeditions having gained the sponsorship of generous institutions disappear off into the haze with barely more than a murmur of thanks
# ::tok the latter is very important for the public relations of the expedition world in general because only too many expeditions having gained the sponsorship of generous institutions disappear off into the haze with barely more than a murmur of thanks
# ::alignments 39-40|0.0.0 33-34|0.2.0.0.0.0 28-29|0.2.0.1 27-28|0.2.0 26-27|0.2.0.0 25-26|0.2.0.0.0 21-22|0.2 18-19|0.0 17-18|0.4 16-17|0.3 15-16|0 14-15|0.5 12-13|0.5.0.0 8-9|0.5.0 7-8|0.5.0.1 4-5|0.1 3-4|0.1.0 1-2|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:44.027
# ::node	0	cause-01	15-16
# ::node	0.0	many	18-19
# ::node	0.0.0	thank-01	39-40
# ::node	0.1	important	4-5
# ::node	0.1.0	very	3-4
# ::node	0.1.1	latter	1-2
# ::node	0.2	gain-02	21-22
# ::node	0.2.0	disappear-01	27-28
# ::node	0.2.0.0	institution	26-27
# ::node	0.2.0.0.0	generous-41	25-26
# ::node	0.2.0.0.0.0	barely	33-34
# ::node	0.2.0.1	off	28-29
# ::node	0.3	only	16-17
# ::node	0.4	too	17-18
# ::node	0.5	general	14-15
# ::node	0.5.0	relation	8-9
# ::node	0.5.0.0	world	12-13
# ::node	0.5.0.1	public	7-8
# ::root	0	cause-01
# ::edge	cause-01	ARG0	many	0	0.0	
# ::edge	cause-01	ARG1	important	0	0.1	
# ::edge	cause-01	ARG2	gain-02	0	0.2	
# ::edge	cause-01	time	too	0	0.4	
# ::edge	disappear-01	ARG1	institution	0.2.0	0.2.0.0	
# ::edge	disappear-01	direction	off	0.2.0	0.2.0.1	
# ::edge	gain-02	ARG1	disappear-01	0.2	0.2.0	
# ::edge	general	time	cause-01	0.5	0	
# ::edge	generous-41	ARG0	barely	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	generous-41	ARG1	institution	0.2.0.0.0	0.2.0.0	
# ::edge	important	degree	very	0.1	0.1.0	
# ::edge	important	domain	latter	0.1	0.1.1	
# ::edge	only	mod	cause-01	0.3	0	
# ::edge	relation	location	world	0.5.0	0.5.0.0	
# ::edge	relation	mod	general	0.5.0	0.5	
# ::edge	relation	mod	public	0.5.0	0.5.0.1	
# ::edge	thank-01	ARG0	many	0.0.0	0.0	
(c / cause-01 
      :ARG0 (m / many 
            :ARG0-of (t / thank-01)) 
      :ARG1 (i2 / important 
            :degree (v / very) 
            :domain (l / latter)) 
      :ARG2 (g2 / gain-02 
            :ARG1 (d / disappear-01 
                  :ARG1 (i / institution 
                        :ARG1-of (g / generous-41 
                              :ARG0 (b / barely))) 
                  :direction (o / off))) 
      :mod-of (o2 / only) 
      :time (t2 / too) 
      :time-of (g3 / general 
            :mod-of (r / relation 
                  :location (w / world) 
                  :mod (p / public))))

# ::snt this was an ideal introduction to what was in store a delightful blend of indian and oriental tastes generous helpings and attractively presented
# ::tok this was an ideal introduction to what was in store a delightful blend of indian and oriental tastes generous helpings and attractively presented
# ::alignments 22-23|0.1.1 20-21|0.1.1.0 18-19|0.1.1.0.0 17-18|0.1.1.0.0.0 15-16|0.1 12-13|0.1.0 11-12|0.1.0.0 9-10|0.1.0.0.0 4-5|0 3-4|0.2 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:44.135
# ::node	0	introduce-02	4-5
# ::node	0.0	this	0-1
# ::node	0.1	and	15-16
# ::node	0.1.0	blend-01	12-13
# ::node	0.1.0.0	delight-01	11-12
# ::node	0.1.0.0.0	store	9-10
# ::node	0.1.1	present-01	22-23
# ::node	0.1.1.0	and	20-21
# ::node	0.1.1.0.0	generous-41	18-19
# ::node	0.1.1.0.0.0	taste	17-18
# ::node	0.2	ideal	3-4
# ::root	0	introduce-02
# ::edge	and	op1	present-01	0.1	0.1.1	
# ::edge	and	op1	present-01	0.1.1.0	0.1.1	
# ::edge	blend-01	ARG1	and	0.1.0	0.1	
# ::edge	delight-01	ARG0	store	0.1.0.0	0.1.0.0.0	
# ::edge	delight-01	ARG1	blend-01	0.1.0.0	0.1.0	
# ::edge	generous-41	ARG0	taste	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	generous-41	ARG1	and	0.1.1.0.0	0.1.1.0	
# ::edge	introduce-02	ARG0	this	0	0.0	
# ::edge	introduce-02	ARG1	and	0	0.1	
# ::edge	introduce-02	mod	ideal	0	0.2	
(i / introduce-02 
      :ARG0 (t2 / this) 
      :ARG1 (a2 / and 
            :ARG1-of (b / blend-01 
                  :ARG1-of (d / delight-01 
                        :ARG0 (s / store))) 
            :op1 (p / present-01 
                  :op-of (a / and 
                        :ARG1-of (g / generous-41 
                              :ARG0 (t / taste))))) 
      :mod (i2 / ideal))

# ::snt this leaflet has been delivered free by your local postman or  postwoman as a result of generous support by the union of  communication workers
# ::tok this leaflet has been delivered free by your local postman or postwoman as a result of generous support by the union of communication workers
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:44.137
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt his generous gift will lighten the load of insurance costs for the pavilion
# ::tok his generous gift will lighten the load of insurance costs for the pavilion
# ::alignments 9-10|0.0 8-9|0.0.0 6-7|0 2-3|0.0.0.0 1-2|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:44.157
# ::node	0	load	6-7
# ::node	0.0	cost-01	9-10
# ::node	0.0.0	insure-02	8-9
# ::node	0.0.0.0	gift-01	2-3
# ::node	0.0.0.0.0	generous-41	1-2
# ::root	0	load
(l / load 
      :quant-of (c / cost-01 
            :ARG1 (i / insure-02 
                  :ARG0 (g / gift-01 
                        :ARG1-of (g2 / generous-41)))))

# ::snt twothirds of schools had apparatus ranging from adequate to generous
# ::tok twothirds of schools had apparatus ranging from adequate to generous
# ::alignments 9-10|0 7-8|0.0 5-6|0.0.0 4-5|0.0.0.1 2-3|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:44.190
# ::node	0	generous-41	9-10
# ::node	0.0	adequate	7-8
# ::node	0.0.0	range-01	5-6
# ::node	0.0.0.0	school	2-3
# ::node	0.0.0.1	apparatus	4-5
# ::root	0	generous-41
# ::edge	generous-41	ARG1	adequate	0	0.0	
# ::edge	range-01	ARG0	school	0.0.0	0.0.0.0	
# ::edge	range-01	ARG1	apparatus	0.0.0	0.0.0.1	
# ::edge	range-01	ARG2	adequate	0.0.0	0.0	
(g / generous-41 
      :ARG1 (a / adequate 
            :ARG2-of (r / range-01 
                  :ARG0 (s / school) 
                  :ARG1 (a2 / apparatus))))

# ::snt pearl argued that amps claims that its increased offer from 605p to 690p a share represented an extremely generous premium for control of the british group were wholly misleading
# ::tok pearl argued that amps claims that its increased offer from 605p to 690p a share represented an extremely generous premium for control of the british group were wholly misleading
# ::alignments 28-29|0 27-28|0.1 25-26|0.0.1.0 21-22|0.0.1.0.0 18-19|0.0.1.1.0.0.1 17-18|0.0.1.1.0.0.1.0 15-16|0.0 14-15|0.0.0 8-9|0.0.1.1.0.0 7-8|0.0.1.1.0.0.0 4-5|0.0.1 1-2|0.0.1.1 0-1|0.0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:44.355
# ::node	0	mislead-02	28-29
# ::node	0.0	represent-01	15-16
# ::node	0.0.0	share-01	14-15
# ::node	0.0.1	claim-01	4-5
# ::node	0.0.1.0	group	25-26
# ::node	0.0.1.0.0	control-01	21-22
# ::node	0.0.1.1	argue-01	1-2
# ::node	0.0.1.1.0	pearl	0-1
# ::node	0.0.1.1.0.0	offer-01	8-9
# ::node	0.0.1.1.0.0.0	increase-01	7-8
# ::node	0.0.1.1.0.0.1	generous-41	18-19
# ::node	0.0.1.1.0.0.1.0	extreme	17-18
# ::node	0.1	whole	27-28
# ::root	0	mislead-02
# ::edge	argue-01	ARG0	pearl	0.0.1.1	0.0.1.1.0	
# ::edge	argue-01	ARG1	claim-01	0.0.1.1	0.0.1	
# ::edge	claim-01	ARG0	group	0.0.1	0.0.1.0	
# ::edge	claim-01	ARG1	represent-01	0.0.1	0.0	
# ::edge	control-01	ARG1	group	0.0.1.0.0	0.0.1.0	
# ::edge	generous-41	ARG1	offer-01	0.0.1.1.0.0.1	0.0.1.1.0.0	
# ::edge	generous-41	degree	extreme	0.0.1.1.0.0.1	0.0.1.1.0.0.1.0	
# ::edge	increase-01	ARG1	offer-01	0.0.1.1.0.0.0	0.0.1.1.0.0	
# ::edge	mislead-02	mod	whole	0	0.1	
# ::edge	offer-01	ARG1	pearl	0.0.1.1.0.0	0.0.1.1.0	
# ::edge	represent-01	ARG0	share-01	0.0	0.0.0	
# ::edge	represent-01	ARG1	mislead-02	0.0	0	
(m / mislead-02 
      :ARG1-of (r / represent-01 
            :ARG0 (s / share-01) 
            :ARG1-of (c2 / claim-01 
                  :ARG0 (g / group 
                        :ARG1-of (c / control-01)) 
                  :ARG1-of (a / argue-01 
                        :ARG0 (p / pearl 
                              :ARG1-of (o / offer-01 
                                    :ARG1-of (i / increase-01) 
                                    :ARG1-of (g2 / generous-41 
                                          :degree (e / extreme))))))) 
      :mod (w / whole))

# ::snt nicholas winterton con macclesfield who led the campaign warmly congratulated mr ridley on the very generous levels of compensation
# ::tok nicholas winterton con macclesfield who led the campaign warmly congratulated mr ridley on the very generous levels of compensation
# ::alignments 18-19|0.0.1 16-17|0.0 15-16|0 14-15|0.1 9-10|0.0.0 8-9|0.0.0.2 7-8|0.0.0.0 5-6|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:44.390
# ::node	0	generous-41	15-16
# ::node	0.0	level	16-17
# ::node	0.0.0	congratulate-01	9-10
# ::node	0.0.0.0	campaign-01	7-8
# ::node	0.0.0.1	lead-02	5-6
# ::node	0.0.0.2	warm	8-9
# ::node	0.0.1	compensate-01	18-19
# ::node	0.1	very	14-15
# ::root	0	generous-41
# ::edge	congratulate-01	ARG0	campaign-01	0.0.0	0.0.0.0	
# ::edge	congratulate-01	ARG1	level	0.0.0	0.0	
# ::edge	congratulate-01	manner	warm	0.0.0	0.0.0.2	
# ::edge	generous-41	ARG1	level	0	0.0	
# ::edge	generous-41	degree	very	0	0.1	
# ::edge	lead-02	ARG1	congratulate-01	0.0.0.1	0.0.0	
# ::edge	level	mod	compensate-01	0.0	0.0.1	
(g / generous-41 
      :ARG1 (l / level 
            :ARG1-of (c2 / congratulate-01 
                  :ARG0 (c3 / campaign-01) 
                  :ARG1-of (l2 / lead-02) 
                  :manner (w / warm)) 
            :mod (c / compensate-01)) 
      :degree (v / very))

# ::snt this one first seen in the astra 16v has a generous spread of torque although its peak of 145lb ft is fairly high at 4800rpm
# ::tok this one first seen in the astra 16v has a generous spread of torque although its peak of 145lb ft is fairly high at 4800rpm
# ::alignments 22-23|0.1.1 21-22|0.1.1.0 16-17|0.1 11-12|0.0 10-11|0.0.0 3-4|0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:44.426
# ::node	0	see-01	3-4
# ::node	0.0	spread-02	11-12
# ::node	0.0.0	generous-41	10-11
# ::node	0.1	peak-01	16-17
# ::node	0.1.0	this	0-1
# ::node	0.1.1	high	22-23
# ::node	0.1.1.0	fair	21-22
# ::root	0	see-01
# ::edge	generous-41	ARG1	spread-02	0.0.0	0.0	
# ::edge	high	degree	fair	0.1.1	0.1.1.0	
# ::edge	high	domain	peak-01	0.1.1	0.1	
# ::edge	peak-01	ARG0	this	0.1	0.1.0	
# ::edge	peak-01	ARG1	see-01	0.1	0	
# ::edge	see-01	ARG1	spread-02	0	0.0	
(s2 / see-01 
      :ARG1 (s / spread-02 
            :ARG1-of (g / generous-41)) 
      :ARG1-of (p / peak-01 
            :ARG0 (t / this) 
            :domain-of (h / high 
                  :degree (f / fair))))

# ::snt   others said that if the quota had been more generous britain would have had greater leverage over china
# ::tok others said that if the quota had been more generous britain would have had greater leverage over china
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:44.427
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt he was the most generous of men
# ::tok he was the most generous of men
# ::alignments 6-7|0.1 4-5|0 3-4|0.2 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:44.436
# ::node	0	generous-41	4-5
# ::node	0.0	he	0-1
# ::node	0.1	man	6-7
# ::node	0.2	most	3-4
# ::root	0	generous-41
# ::edge	generous-41	ARG1	he	0	0.0	
# ::edge	generous-41	ARG2	man	0	0.1	
# ::edge	generous-41	degree	most	0	0.2	
(g / generous-41 
      :ARG1 (h / he) 
      :ARG2 (m / man) 
      :degree (m2 / most))

# ::snt mr charles lambert the smith new court analyst commented the offer is not overly generous but i think it will probably be enough
# ::tok mr charles lambert the smith new court analyst commented the offer is not overly generous but i think it will probably be enough
# ::alignments 22-23|0.1.0.0 20-21|0.1.0.0.1 18-19|0.1.0.0.0 17-18|0.1 16-17|0.1.0 15-16|0 14-15|0.0 13-14|0.0.2 10-11|0.0.0 8-9|0.0.1 7-8|0.0.1.0 6-7|0.0.1.0.0 5-6|0.0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:44.665
# ::node	0	contrast-01	15-16
# ::node	0.0	generous-41	14-15
# ::node	0.0.0	offer-01	10-11
# ::node	0.0.1	comment-01	8-9
# ::node	0.0.1.0	analyze-01	7-8
# ::node	0.0.1.0.0	court	6-7
# ::node	0.0.1.0.1	new	5-6
# ::node	0.0.2	overly	13-14
# ::node	0.1	think-01	17-18
# ::node	0.1.0	i	16-17
# ::node	0.1.0.0	enough	22-23
# ::node	0.1.0.0.0	it	18-19
# ::node	0.1.0.0.1	probable	20-21
# ::root	0	contrast-01
# ::edge	analyze-01	ARG1	court	0.0.1.0	0.0.1.0.0	
# ::edge	analyze-01	mod	new	0.0.1.0	0.0.1.0.1	
# ::edge	comment-01	ARG0	analyze-01	0.0.1	0.0.1.0	
# ::edge	comment-01	ARG1	generous-41	0.0.1	0.0	
# ::edge	contrast-01	ARG1	generous-41	0	0.0	
# ::edge	contrast-01	ARG2	think-01	0	0.1	
# ::edge	enough	domain	i	0.1.0.0	0.1.0	
# ::edge	enough	domain	it	0.1.0.0	0.1.0.0.0	
# ::edge	generous-41	ARG1	offer-01	0.0	0.0.0	
# ::edge	generous-41	degree	overly	0.0	0.0.2	
# ::edge	probable	domain	enough	0.1.0.0.1	0.1.0.0	
# ::edge	think-01	ARG0	i	0.1	0.1.0	
(c / contrast-01 
      :ARG1 (g / generous-41 
            :ARG1 (o2 / offer-01) 
            :ARG1-of (c2 / comment-01 
                  :ARG0 (a / analyze-01 
                        :ARG1 (c3 / court) 
                        :mod (n / new))) 
            :degree (o / overly)) 
      :ARG2 (t / think-01 
            :ARG0 (i2 / i 
                  :domain-of (e / enough 
                        :domain (i / it) 
                        :domain-of (p / probable)))))

# ::snt personally i think the vale is being particularly generous in this field he added
# ::tok personally i think the vale is being particularly generous in this field he added
# ::alignments 13-14|0 12-13|0.0 11-12|0.1 10-11|0.1.1 8-9|0.1.0 7-8|0.1.0.1 2-3|0.1.0.0 1-2|0.1.0.0.0 0-1|0.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:44.708
# ::node	0	add-01	13-14
# ::node	0.0	he	12-13
# ::node	0.1	field	11-12
# ::node	0.1.0	generous-41	8-9
# ::node	0.1.0.0	think-01	2-3
# ::node	0.1.0.0.0	i	1-2
# ::node	0.1.0.0.0.0	personal	0-1
# ::node	0.1.0.1	particular	7-8
# ::node	0.1.1	this	10-11
# ::root	0	add-01
# ::edge	add-01	ARG0	he	0	0.0	
# ::edge	add-01	ARG1	field	0	0.1	
# ::edge	field	mod	this	0.1	0.1.1	
# ::edge	generous-41	ARG1	field	0.1.0	0.1	
# ::edge	generous-41	manner	particular	0.1.0	0.1.0.1	
# ::edge	i	mod	personal	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	think-01	ARG0	i	0.1.0.0	0.1.0.0.0	
# ::edge	think-01	ARG1	generous-41	0.1.0.0	0.1.0	
(a / add-01 
      :ARG0 (h / he) 
      :ARG1 (f / field 
            :ARG1-of (g / generous-41 
                  :ARG1-of (t2 / think-01 
                        :ARG0 (i / i 
                              :mod (p2 / personal))) 
                  :manner (p / particular)) 
            :mod (t / this)))

# ::snt the governments handout is likely to be equally generous
# ::tok the governments handout is likely to be equally generous
# ::alignments 8-9|0.0 7-8|0.0.1 4-5|0 1-2|0.0.0.0+0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:44.722
# ::node	0	likely	4-5
# ::node	0.0	generous-41	8-9
# ::node	0.0.0	government-organization	1-2
# ::node	0.0.0.0	govern-01	1-2
# ::node	0.0.1	equal	7-8
# ::root	0	likely
# ::edge	generous-41	ARG1	government-organization	0.0	0.0.0	
# ::edge	generous-41	degree	equal	0.0	0.0.1	
# ::edge	govern-01	ARG0	government-organization	0.0.0.0	0.0.0	
# ::edge	likely	domain	generous-41	0	0.0	
(l / likely 
      :domain (g / generous-41 
            :ARG1 (g2 / government-organization 
                  :ARG0-of (g3 / govern-01)) 
            :degree (e / equal)))

# ::snt as a token of unicefs gratitude for your generous support i  have enclosed your 1990 unicef pocket diary
# ::tok as a token of unicefs gratitude for your generous support i have enclosed your 1990 unicef pocket diary
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:44.723
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt a low unemployment rate generous employment conditions in large companies and high personal taxes which make saving difficult mean there are few incentives for people to start up on their own
# ::tok a low unemployment rate generous employment conditions in large companies and high personal taxes which make saving difficult mean there are few incentives for people to start up on their own
# ::alignments 26-27|0.1.0.0 22-23|0.1.0+0.1 21-22|0.1.2 18-19|0 17-18|0.2.1 16-17|0.2 13-14|0.2.0 12-13|0.2.0.1 11-12|0.2.0.0 10-11|0.0 9-10|0.0.0.1 8-9|0.0.0.1.0 6-7|0.0.0 5-6|0.0.0.0.0 4-5|0.0.0.0 3-4|0.0.0.0.1 2-3|0.0.0.0.1.0.0+0.0.0.0.1.0 1-2|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:45.111
# ::node	0	mean-01	18-19
# ::node	0.0	and	10-11
# ::node	0.0.0	condition	6-7
# ::node	0.0.0.0	generous-41	4-5
# ::node	0.0.0.0.0	employment	5-6
# ::node	0.0.0.0.1	rate	3-4
# ::node	0.0.0.0.1.0	employ-01	2-3
# ::node	0.0.0.0.1.0.0	-	2-3
# ::node	0.0.0.1	company	9-10
# ::node	0.0.0.1.0	large	8-9
# ::node	0.1	thing	22-23
# ::node	0.1.0	incentivize-01	22-23
# ::node	0.1.0.0	start-01	26-27
# ::node	0.1.1	low	1-2
# ::node	0.1.2	few	21-22
# ::node	0.2	save-02	16-17
# ::node	0.2.0	tax-01	13-14
# ::node	0.2.0.0	high	11-12
# ::node	0.2.0.1	personal	12-13
# ::node	0.2.1	difficult	17-18
# ::root	0	mean-01
# ::edge	and	op1	condition	0.0	0.0.0	
# ::edge	company	mod	large	0.0.0.1	0.0.0.1.0	
# ::edge	condition	poss	company	0.0.0	0.0.0.1	
# ::edge	employ-01	polarity	-	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	generous-41	ARG0	condition	0.0.0.0	0.0.0	
# ::edge	generous-41	ARG1	employment	0.0.0.0	0.0.0.0.0	
# ::edge	generous-41	ARG2	rate	0.0.0.0	0.0.0.0.1	
# ::edge	incentivize-01	ARG0	thing	0.1.0	0.1	
# ::edge	incentivize-01	ARG1	start-01	0.1.0	0.1.0.0	
# ::edge	mean-01	ARG0	and	0	0.0	
# ::edge	mean-01	ARG1	thing	0	0.1	
# ::edge	mean-01	time	save-02	0	0.2	
# ::edge	rate	mod	employ-01	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	save-02	ARG0	tax-01	0.2	0.2.0	
# ::edge	save-02	ARG1	difficult	0.2	0.2.1	
# ::edge	tax-01	ARG1	high	0.2.0	0.2.0.0	
# ::edge	tax-01	mod	personal	0.2.0	0.2.0.1	
# ::edge	thing	mod	low	0.1	0.1.1	
# ::edge	thing	quant	few	0.1	0.1.2	
(m / mean-01 
      :ARG0 (a / and 
            :op1 (c2 / condition 
                  :ARG0-of (g / generous-41 
                        :ARG1 (e / employment) 
                        :ARG2 (r / rate 
                              :mod (e2 / employ-01 
                                    :polarity -))) 
                  :poss (c / company 
                        :mod (l / large)))) 
      :ARG1 (t / thing 
            :ARG0-of (i / incentivize-01 
                  :ARG1 (s / start-01)) 
            :mod (l2 / low) 
            :quant (f / few)) 
      :time (s2 / save-02 
            :ARG0 (t2 / tax-01 
                  :ARG1 (h / high) 
                  :mod (p / personal)) 
            :ARG1 (d / difficult)))

# ::snt ingrid kirby of postel investment management asked was it really necessary to offer incoming management such a large incentive in the company  mrs kirby said postel would normally vote against such generous proposals as a matter of principle dash
# ::tok ingrid kirby of postel investment management asked was it really necessary to offer incoming management such a large incentive in the company mrs kirby said postel would normally vote against such generous proposals as a matter of principle dash
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:45.113
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt elderly couples and pensioners who have less than 8000 saved will get generous rebates
# ::tok elderly couples and pensioners who have less than 8000 saved will get generous rebates
# ::alignments 13-14|0.1.1 12-13|0.1 9-10|0 8-9|0.0 6-7|0.2 3-4|0.1.0.0.1 2-3|0.1.0.0 1-2|0.1.0 0-1|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:45.254
# ::node	0	save-02	9-10
# ::node	0.0	8000	8-9
# ::node	0.1	generous-41	12-13
# ::node	0.1.0	couple	1-2
# ::node	0.1.0.0	and	2-3
# ::node	0.1.0.0.0	elderly	0-1
# ::node	0.1.0.0.1	pensioner	3-4
# ::node	0.1.1	rebate	13-14
# ::node	0.2	less	6-7
# ::root	0	save-02
# ::edge	and	mod	elderly	0.1.0.0	0.1.0.0.0	
# ::edge	and	op1	couple	0.1.0.0	0.1.0	
# ::edge	and	op2	pensioner	0.1.0.0	0.1.0.0.1	
# ::edge	generous-41	ARG0	couple	0.1	0.1.0	
# ::edge	generous-41	ARG1	save-02	0.1	0	
# ::edge	generous-41	ARG2	rebate	0.1	0.1.1	
# ::edge	save-02	ARG1	8000	0	0.0	
# ::edge	save-02	ARG2	less	0	0.2	
(s / save-02 
      :ARG1 8000 
      :ARG1-of (g / generous-41 
            :ARG0 (c / couple 
                  :op-of (a / and 
                        :mod (e / elderly) 
                        :op1 (p / pensioner))) 
            :ARG2 (r / rebate)) 
      :ARG2 (l / less))

# ::snt   children with hearing difficulties are being given a boost to their education by a generous gift from a grandparent
# ::tok children with hearing difficulties are being given a boost to their education by a generous gift from a grandparent
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:45.254
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt 65 through sponsorship and customers generous donations
# ::tok 65 through sponsorship and customers generous donations
# ::alignments 6-7|0.0.0.0 5-6|0.0.0 4-5|0.0 3-4|0 0-1|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:45.272
# ::node	0	and	3-4
# ::node	0.0	customer	4-5
# ::node	0.0.0	generous-41	5-6
# ::node	0.0.0.0	donate-01	6-7
# ::node	0.0.0.0.0	65	0-1
# ::root	0	and
# ::edge	and	op1	customer	0	0.0	
# ::edge	donate-01	ARG1	65	0.0.0.0	0.0.0.0.0	
# ::edge	generous-41	ARG1	customer	0.0.0	0.0	
# ::edge	generous-41	ARG2	donate-01	0.0.0	0.0.0.0	
(a / and 
      :op1 (c / customer 
            :ARG1-of (g / generous-41 
                  :ARG2 (d / donate-01 
                        :ARG1 65))))

# ::snt the generous view would be that the brothers have never quite lost that garrison mentality by all accounts anyone who believed in good food in the sixties felt under siege and find it easier to trust those whose loyalty is proven
# ::tok the generous view would be that the brothers have never quite lost that garrison mentality by all accounts anyone who believed in good food in the sixties felt under siege and find it easier to trust those whose loyalty is proven
# ::alignments 40-41|0.0.0.0 38-39|0.0.0.0.0 35-36|0.0.0 33-34|0 32-33|0.0 30-31|0.0.0.1 27-28|0.0.0.1.1 23-24|0.0.0.1.1.1 22-23|0.0.0.1.1.1.1 20-21|0.0.0.1.1.1.0 18-19|0.0.0.1.1.1.0.0 17-18|0.0.0.0.0.0 16-17|0.0.0.1.1.1.0.0.0 14-15|0.0.0.1.1.0 11-12|0.0.0.1.0 10-11|0.0.0.1.0.1 7-8|0.0.0.1.0.0+0.0.0.1.0.0.0 1-2|0.0.0.1.1.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:45.911
# ::node	0	easy	33-34
# ::node	0.0	it	32-33
# ::node	0.0.0	trust-01	35-36
# ::node	0.0.0.0	prove-01	40-41
# ::node	0.0.0.0.0	loyal-41	38-39
# ::node	0.0.0.0.0.0	account	17-18
# ::node	0.0.0.1	and	30-31
# ::node	0.0.0.1.0	lose-02	11-12
# ::node	0.0.0.1.0.0	brother	7-8
# ::node	0.0.0.1.0.0.0	have-rel-role-91	7-8
# ::node	0.0.0.1.0.1	quite	10-11
# ::node	0.0.0.1.1	feel-01	27-28
# ::node	0.0.0.1.1.0	mentality	14-15
# ::node	0.0.0.1.1.1	food	23-24
# ::node	0.0.0.1.1.1.0	believe-01	20-21
# ::node	0.0.0.1.1.1.0.0	anyone	18-19
# ::node	0.0.0.1.1.1.0.0.0	all	16-17
# ::node	0.0.0.1.1.1.1	good	22-23
# ::node	0.0.0.1.1.1.1.0	generous-41	1-2
# ::root	0	easy
# ::edge	and	op1	lose-02	0.0.0.1	0.0.0.1.0	
# ::edge	and	op2	feel-01	0.0.0.1	0.0.0.1.1	
# ::edge	and	op3	trust-01	0.0.0.1	0.0.0	
# ::edge	anyone	quant	all	0.0.0.1.1.1.0.0	0.0.0.1.1.1.0.0.0	
# ::edge	believe-01	ARG0	anyone	0.0.0.1.1.1.0	0.0.0.1.1.1.0.0	
# ::edge	believe-01	ARG1	food	0.0.0.1.1.1.0	0.0.0.1.1.1	
# ::edge	easy	domain	it	0	0.0	
# ::edge	feel-01	ARG0	mentality	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	feel-01	ARG1	food	0.0.0.1.1	0.0.0.1.1.1	
# ::edge	food	mod	good	0.0.0.1.1.1	0.0.0.1.1.1.1	
# ::edge	generous-41	ARG1	good	0.0.0.1.1.1.1.0	0.0.0.1.1.1.1	
# ::edge	have-rel-role-91	ARG2	brother	0.0.0.1.0.0.0	0.0.0.1.0.0	
# ::edge	lose-02	ARG0	brother	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	lose-02	degree	quite	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	loyal-41	ARG1	account	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	prove-01	ARG1	loyal-41	0.0.0.0	0.0.0.0.0	
# ::edge	trust-01	ARG0	it	0.0.0	0.0	
# ::edge	trust-01	ARG1	prove-01	0.0.0	0.0.0.0	
(e / easy 
      :domain (i / it 
            :ARG0-of (t / trust-01 
                  :ARG1 (p / prove-01 
                        :ARG1 (l / loyal-41 
                              :ARG1 (a3 / account))) 
                  :op-of (a / and 
                        :op1 (l2 / lose-02 
                              :ARG0 (b2 / brother 
                                    :ARG2-of (h / have-rel-role-91)) 
                              :degree (q / quite)) 
                        :op2 (f / feel-01 
                              :ARG0 (m / mentality) 
                              :ARG1 (f2 / food 
                                    :ARG1-of (b / believe-01 
                                          :ARG0 (a2 / anyone 
                                                :quant (a4 / all))) 
                                    :mod (g / good 
                                          :ARG1-of (g2 / generous-41))))))))

# ::snt and if jack had been such another he would have thanked charlie for his unstinted friendship his generous loans his hospitality and for bringing him marilyn thompson
# ::tok and if jack had been such another he would have thanked charlie for his unstinted friendship his generous loans his hospitality and for bringing him marilyn thompson
# ::alignments 23-24|0.1 21-22|0 18-19|0.2 17-18|0.2.1 15-16|0.2.1.0 7-8|0.1.0 6-7|0.2.0.0 5-6|0.2.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:45.975
# ::node	0	and	21-22
# ::node	0.0	and	0-1
# ::node	0.1	bring-01	23-24
# ::node	0.1.0	he	7-8
# ::node	0.2	loan-01	18-19
# ::node	0.2.0	such	5-6
# ::node	0.2.0.0	another	6-7
# ::node	0.2.1	generous-41	17-18
# ::node	0.2.1.0	friendship	15-16
# ::root	0	and
# ::edge	and	op1	and	0	0.0	
# ::edge	and	op2	bring-01	0	0.1	
# ::edge	and	time	loan-01	0	0.2	
# ::edge	another	mod	such	0.2.0.0	0.2.0	
# ::edge	bring-01	ARG1	he	0.1	0.1.0	
# ::edge	generous-41	ARG1	friendship	0.2.1	0.2.1.0	
# ::edge	generous-41	ARG2	loan-01	0.2.1	0.2	
# ::edge	loan-01	ARG1	such	0.2	0.2.0	
(a / and 
      :op1 (a3 / and) 
      :op2 (b / bring-01 
            :ARG1 (h / he)) 
      :time (l / loan-01 
            :ARG1 (s / such 
                  :mod-of (a2 / another)) 
            :ARG2-of (g / generous-41 
                  :ARG1 (f / friendship))))

# ::snt at the end of that she asks how could i justify getting upset at a duffed shot  on the course she stands out for her softly rather than aggressively spiked hair a finish with the driver which like arnold palmers tells you precisely how much she has given to the shot and an unusually generous attitude towards the opposition
# ::tok at the end of that she asks how could i justify getting upset at a duffed shot on the course she stands out for her softly rather than aggressively spiked hair a finish with the driver which like arnold palmers tells you precisely how much she has given to the shot and an unusually generous attitude towards the opposition
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:45.976
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the city also strove to restore the economic life of central europe by generous lending usually on long term
# ::tok the city also strove to restore the economic life of central europe by generous lending usually on long term
# ::alignments 18-19|0.0.0.0.2 15-16|0 14-15|0.0.0.0 13-14|0.0.0.0.1 11-12|0.0.0.0.0.1.0+0.0.0.0.0.1+0.0.0.0.0 10-11|0.0.0.0.0.0 8-9|0.0.1 7-8|0.0.1.0 5-6|0.0 2-3|0.0.0.0.1.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:46.242
# ::node	0	usual	15-16
# ::node	0.0	restore-01	5-6
# ::node	0.0.0	city	1-2
# ::node	0.0.0.0	lend-01	14-15
# ::node	0.0.0.0.0	continent	11-12
# ::node	0.0.0.0.0.0	central	10-11
# ::node	0.0.0.0.0.1	name	11-12
# ::node	0.0.0.0.0.1.0	"Europe"	11-12
# ::node	0.0.0.0.1	generous-41	13-14
# ::node	0.0.0.0.1.0	also	2-3
# ::node	0.0.0.0.2	term	18-19
# ::node	0.0.1	life	8-9
# ::node	0.0.1.0	economy	7-8
# ::root	0	usual
(u / usual 
      :ARG2-of (r / restore-01 
            :ARG0 (c3 / city 
                  :ARG0-of (l / lend-01 
                        :ARG1 (c / continent 
                              :mod (c2 / central) 
                              :name (n / name 
                                    :op1 "Europe")) 
                        :ARG1-of (g / generous-41 
                              :ARG0 (a / also)) 
                        :ARG2 (t / term))) 
            :ARG1 (l2 / life 
                  :mod (e / economy))))

# ::snt he later gave me large scotches and made the most generous gesture of contrition to a nongolfer that he could think of if you like ill let you caddy for me at walton heath on sunday
# ::tok he later gave me large scotches and made the most generous gesture of contrition to a nongolfer that he could think of if you like ill let you caddy for me at walton heath on sunday
# ::alignments 35-36|0.1.3.0.0 27-28|0.1.1 26-27|0.1 25-26|0.1.2 23-24|0.1.0 20-21|0 19-20|0.2 18-19|0.0 11-12|0.1.3.0 10-11|0.1.3.0.2 9-10|0.1.3.0.2.1 6-7|0.1.3 4-5|0.1.2.0 1-2|0.1.3.0.2.0 0-1|0.1.3.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:46.538
# ::node	0	think-01	20-21
# ::node	0.0	he	18-19
# ::node	0.1	let-01	26-27
# ::node	0.1.0	you	23-24
# ::node	0.1.1	you	27-28
# ::node	0.1.2	ill-41	25-26
# ::node	0.1.2.0	large	4-5
# ::node	0.1.3	and	6-7
# ::node	0.1.3.0	gesture-01	11-12
# ::node	0.1.3.0.0	sunday	35-36
# ::node	0.1.3.0.1	he	0-1
# ::node	0.1.3.0.2	generous-41	10-11
# ::node	0.1.3.0.2.0	late	1-2
# ::node	0.1.3.0.2.1	most	9-10
# ::node	0.2	possible	19-20
# ::root	0	think-01
# ::edge	and	op1	gesture-01	0.1.3	0.1.3.0	
# ::edge	and	op2	let-01	0.1.3	0.1	
# ::edge	generous-41	ARG0	late	0.1.3.0.2	0.1.3.0.2.0	
# ::edge	generous-41	ARG1	gesture-01	0.1.3.0.2	0.1.3.0	
# ::edge	generous-41	degree	most	0.1.3.0.2	0.1.3.0.2.1	
# ::edge	gesture-01	ARG0	sunday	0.1.3.0	0.1.3.0.0	
# ::edge	gesture-01	ARG1	he	0.1.3.0	0.1.3.0.1	
# ::edge	ill-41	ARG0	large	0.1.2	0.1.2.0	
# ::edge	ill-41	ARG1	let-01	0.1.2	0.1	
# ::edge	let-01	ARG0	you	0.1	0.1.0	
# ::edge	let-01	ARG1	you	0.1	0.1.1	
# ::edge	possible	domain	think-01	0.2	0	
# ::edge	think-01	ARG0	he	0	0.0	
# ::edge	think-01	ARG1	let-01	0	0.1	
(t / think-01 
      :ARG0 (h / he) 
      :ARG1 (l / let-01 
            :ARG0 (y2 / you) 
            :ARG1 (y / you) 
            :ARG1-of (i / ill-41 
                  :ARG0 (l2 / large)) 
            :op-of (a / and 
                  :op1 (g / gesture-01 
                        :ARG0 (s / sunday) 
                        :ARG1 (h2 / he) 
                        :ARG1-of (g2 / generous-41 
                              :ARG0 (l3 / late) 
                              :degree (m / most))))) 
      :domain-of (p / possible))

# ::snt he was expansively generous sometimes while returning from yet another successful expedition giving away valuable equipment or his earnings to friends he met on the way
# ::tok he was expansively generous sometimes while returning from yet another successful expedition giving away valuable equipment or his earnings to friends he met on the way
# ::alignments 25-26|0.2 22-23|0 21-22|0.0 20-21|0.1.2+0.1 18-19|0.1.1 16-17|0.1.1.1 15-16|0.1.1.0 14-15|0.1.1.0.0 13-14|0.1.1.0.0.0 10-11|0.1.0.0.1.0 9-10|0.1.0.0.1.0.0.0 8-9|0.1.0.0.1.0.0 6-7|0.1.0.0.1 4-5|0.1.0.0.0 3-4|0.1.0.0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:46.926
# ::node	0	meet-03	22-23
# ::node	0.0	he	21-22
# ::node	0.1	have-rel-role-91	20-21
# ::node	0.1.0	he	0-1
# ::node	0.1.0.0	generous-41	3-4
# ::node	0.1.0.0.0	sometimes	4-5
# ::node	0.1.0.0.1	return-01	6-7
# ::node	0.1.0.0.1.0	succeed-01	10-11
# ::node	0.1.0.0.1.0.0	yet	8-9
# ::node	0.1.0.0.1.0.0.0	another	9-10
# ::node	0.1.1	earn-01	18-19
# ::node	0.1.1.0	equipment	15-16
# ::node	0.1.1.0.0	value-01	14-15
# ::node	0.1.1.0.0.0	away	13-14
# ::node	0.1.1.1	or	16-17
# ::node	0.1.2	friend	20-21
# ::node	0.2	way	25-26
# ::root	0	meet-03
# ::edge	another	mod	yet	0.1.0.0.1.0.0.0	0.1.0.0.1.0.0	
# ::edge	earn-01	ARG0	equipment	0.1.1	0.1.1.0	
# ::edge	earn-01	ARG1	have-rel-role-91	0.1.1	0.1	
# ::edge	generous-41	ARG0	sometimes	0.1.0.0	0.1.0.0.0	
# ::edge	generous-41	ARG1	he	0.1.0.0	0.1.0	
# ::edge	generous-41	ARG2	return-01	0.1.0.0	0.1.0.0.1	
# ::edge	have-rel-role-91	ARG1	he	0.1	0.1.0	
# ::edge	have-rel-role-91	ARG2	friend	0.1	0.1.2	
# ::edge	meet-03	ARG0	he	0	0.0	
# ::edge	meet-03	ARG1	have-rel-role-91	0	0.1	
# ::edge	meet-03	location	way	0	0.2	
# ::edge	or	op1	earn-01	0.1.1.1	0.1.1	
# ::edge	return-01	manner	succeed-01	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	succeed-01	ARG1	yet	0.1.0.0.1.0	0.1.0.0.1.0.0	
# ::edge	value-01	ARG0	away	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	value-01	ARG1	equipment	0.1.1.0.0	0.1.1.0	
(m / meet-03 
      :ARG0 (h / he) 
      :ARG1 (h2 / have-rel-role-91 
            :ARG1 (h3 / he 
                  :ARG1-of (g / generous-41 
                        :ARG0 (s2 / sometimes) 
                        :ARG2 (r / return-01 
                              :manner (s / succeed-01 
                                    :ARG1 (y / yet 
                                          :mod-of (a2 / another)))))) 
            :ARG1-of (e / earn-01 
                  :ARG0 (e2 / equipment 
                        :ARG1-of (v / value-01 
                              :ARG0 (a / away))) 
                  :op-of (o / or)) 
            :ARG2 (f / friend)) 
      :location (w / way))

# ::snt organisations such as the bell educational trust in this country and the british council overseas offer a package of employment terms and conditions which are extremely generous in addition they provide the environment the resources and the facilities to enable teachers to develop their professional skills
# ::tok organisations such as the bell educational trust in this country and the british council overseas offer a package of employment terms and conditions which are extremely generous in addition they provide the environment the resources and the facilities to enable teachers to develop their professional skills
# ::alignments 45-46|0.4.1.0.0.1.0 44-45|0.4.1.0.0.1.0.0 42-43|0.4.1.0.0.1 40-41|0.4.1.0.0.2.0+0.4.1.0.0.2 39-40|0.4.1.0.0 37-38|0.4.1.0 35-36|0.4.1 34-35|0.4.1.0.0.0.0.1 32-33|0.4.1.0.0.0.0.0 30-31|0.4.1.0.0.0.0 29-30|0.4.1.0.0.0 26-27|0.4.0 25-26|0.4.0.0 22-23|0.4.4 21-22|0.4 20-21|0.4.3 19-20|0.4.2.0 17-18|0.4.2 15-16|0.0 14-15|0.0.0 13-14|0.3 10-11|0 9-10|0.2 8-9|0.3.1 6-7|0.1 5-6|0.1.1 1-2|0.1.0 0-1|0.3.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:48.453
# ::node	0	and	10-11
# ::node	0.0	offer-01	15-16
# ::node	0.0.0	overseas	14-15
# ::node	0.1	trust-01	6-7
# ::node	0.1.0	such	1-2
# ::node	0.1.1	educate-01	5-6
# ::node	0.2	country	9-10
# ::node	0.3	council	13-14
# ::node	0.3.0	organization	0-1
# ::node	0.3.1	this	8-9
# ::node	0.4	and	21-22
# ::node	0.4.0	generous-41	26-27
# ::node	0.4.0.0	extreme	25-26
# ::node	0.4.1	and	35-36
# ::node	0.4.1.0	facility	37-38
# ::node	0.4.1.0.0	enable-01	39-40
# ::node	0.4.1.0.0.0	they	29-30
# ::node	0.4.1.0.0.0.0	provide-01	30-31
# ::node	0.4.1.0.0.0.0.0	environment	32-33
# ::node	0.4.1.0.0.0.0.1	resource	34-35
# ::node	0.4.1.0.0.1	develop-02	42-43
# ::node	0.4.1.0.0.1.0	skill	45-46
# ::node	0.4.1.0.0.1.0.0	professional	44-45
# ::node	0.4.1.0.0.2	person	40-41
# ::node	0.4.1.0.0.2.0	teach-01	40-41
# ::node	0.4.2	package	17-18
# ::node	0.4.2.0	employment	19-20
# ::node	0.4.3	term	20-21
# ::node	0.4.4	condition	22-23
# ::root	0	and
# ::edge	and	op1	and	0.4.1	0.4	
# ::edge	and	op1	country	0	0.2	
# ::edge	and	op1	package	0.4	0.4.2	
# ::edge	and	op2	council	0	0.3	
# ::edge	and	op2	facility	0.4.1	0.4.1.0	
# ::edge	and	op2	term	0.4	0.4.3	
# ::edge	and	op3	and	0	0.4	
# ::edge	and	op3	condition	0.4	0.4.4	
# ::edge	council	mod	this	0.3	0.3.1	
# ::edge	develop-02	ARG1	skill	0.4.1.0.0.1	0.4.1.0.0.1.0	
# ::edge	employment	consist	package	0.4.2.0	0.4.2	
# ::edge	enable-01	ARG0	they	0.4.1.0.0	0.4.1.0.0.0	
# ::edge	enable-01	ARG1	develop-02	0.4.1.0.0	0.4.1.0.0.1	
# ::edge	enable-01	ARG2	person	0.4.1.0.0	0.4.1.0.0.2	
# ::edge	facility	purpose	enable-01	0.4.1.0	0.4.1.0.0	
# ::edge	generous-41	ARG0	and	0.4.0	0.4	
# ::edge	generous-41	degree	extreme	0.4.0	0.4.0.0	
# ::edge	offer-01	ARG0	and	0.0	0	
# ::edge	offer-01	location	overseas	0.0	0.0.0	
# ::edge	organization	example	council	0.3.0	0.3	
# ::edge	provide-01	ARG0	they	0.4.1.0.0.0.0	0.4.1.0.0.0	
# ::edge	provide-01	ARG1	environment	0.4.1.0.0.0.0	0.4.1.0.0.0.0.0	
# ::edge	provide-01	ARG2	resource	0.4.1.0.0.0.0	0.4.1.0.0.0.0.1	
# ::edge	skill	mod	professional	0.4.1.0.0.1.0	0.4.1.0.0.1.0.0	
# ::edge	teach-01	ARG0	person	0.4.1.0.0.2.0	0.4.1.0.0.2	
# ::edge	trust-01	ARG0	such	0.1	0.1.0	
# ::edge	trust-01	ARG1	and	0.1	0	
# ::edge	trust-01	manner	educate-01	0.1	0.1.1	
(a3 / and 
      :ARG0-of (o / offer-01 
            :location (o2 / overseas)) 
      :ARG1-of (t5 / trust-01 
            :ARG0 (s2 / such) 
            :manner (e5 / educate-01)) 
      :op1 (c3 / country) 
      :op2 (c2 / council 
            :example-of (o3 / organization) 
            :mod (t4 / this)) 
      :op3 (a2 / and 
            :ARG0-of (g / generous-41 
                  :degree (e3 / extreme)) 
            :op-of (a / and 
                  :op1 (f / facility 
                        :purpose (e / enable-01 
                              :ARG0 (t2 / they 
                                    :ARG0-of (p3 / provide-01 
                                          :ARG1 (e2 / environment) 
                                          :ARG2 (r / resource))) 
                              :ARG1 (d / develop-02 
                                    :ARG1 (s / skill 
                                          :mod (p / professional))) 
                              :ARG2 (p2 / person 
                                    :ARG0-of (t / teach-01))))) 
            :op1 (p4 / package 
                  :consist-of (e4 / employment)) 
            :op2 (t3 / term) 
            :op3 (c / condition)))

# ::snt something last years less generous offer did not
# ::tok something last years less generous offer did not
# ::alignments 5-6|0.2 4-5|0 3-4|0.3 2-3|0.1.0+0.1.0.0 1-2|0.1 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:48.489
# ::node	0	generous-41	4-5
# ::node	0.0	something	0-1
# ::node	0.1	last	1-2
# ::node	0.1.0	year	2-3
# ::node	0.1.0.0	temporal-quantity	2-3
# ::node	0.2	offer-01	5-6
# ::node	0.3	less	3-4
# ::root	0	generous-41
# ::edge	generous-41	ARG0	something	0	0.0	
# ::edge	generous-41	ARG1	last	0	0.1	
# ::edge	generous-41	degree	less	0	0.3	
# ::edge	offer-01	ARG1	generous-41	0.2	0	
# ::edge	temporal-quantity	unit	year	0.1.0.0	0.1.0	
# ::edge	year	mod	last	0.1.0	0.1	
(g / generous-41 
      :ARG0 (s / something) 
      :ARG1 (l2 / last 
            :mod-of (y / year 
                  :unit-of (t / temporal-quantity))) 
      :ARG1-of (o / offer-01) 
      :degree (l / less))

# ::snt for one thing what is honourable what is fair what is becoming what is noble what is generous takes possession of the heart and reason cannot do this
# ::tok for one thing what is honourable what is fair what is becoming what is noble what is generous takes possession of the heart and reason cannot do this
# ::alignments 27-28|0.1.2.0.0 24-25|0.1.2.1 23-24|0.1.2 22-23|0.1.2.0.1 19-20|0.1.2.0 17-18|0 14-15|0.0 11-12|0.1 8-9|0.1.1 5-6|0.1.0 2-3|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:48.616
# ::node	0	generous-41	17-18
# ::node	0.0	noble	14-15
# ::node	0.1	become-01	11-12
# ::node	0.1.0	honourable	5-6
# ::node	0.1.0.0	thing	2-3
# ::node	0.1.1	fair	8-9
# ::node	0.1.2	and	23-24
# ::node	0.1.2.0	possess-01	19-20
# ::node	0.1.2.0.0	this	27-28
# ::node	0.1.2.0.1	heart	22-23
# ::node	0.1.2.1	reason	24-25
# ::root	0	generous-41
# ::edge	and	op1	become-01	0.1.2	0.1	
# ::edge	and	op2	possess-01	0.1.2	0.1.2.0	
# ::edge	and	op3	reason	0.1.2	0.1.2.1	
# ::edge	become-01	ARG0	honourable	0.1	0.1.0	
# ::edge	become-01	ARG1	generous-41	0.1	0	
# ::edge	fair	domain	become-01	0.1.1	0.1	
# ::edge	generous-41	ARG1	noble	0	0.0	
# ::edge	honourable	location	thing	0.1.0	0.1.0.0	
# ::edge	possess-01	ARG0	this	0.1.2.0	0.1.2.0.0	
# ::edge	possess-01	ARG1	heart	0.1.2.0	0.1.2.0.1	
(g / generous-41 
      :ARG1 (n / noble) 
      :ARG1-of (b / become-01 
            :ARG0 (h2 / honourable 
                  :location (t2 / thing)) 
            :domain-of (f / fair) 
            :op-of (a / and 
                  :op1 (p / possess-01 
                        :ARG0 (t / this) 
                        :ARG1 (h / heart)) 
                  :op2 (r / reason))))

# ::snt lower paid employees are generally less likely to be covered by occupational schemes and so they have benefited from a generous increase
# ::tok lower paid employees are generally less likely to be covered by occupational schemes and so they have benefited from a generous increase
# ::alignments 21-22|0.0.1.0.0.1.1 20-21|0.0.1.0.0.1.1.0 17-18|0.0.1.0.0.1 15-16|0.0.1.0.0.1.0 14-15|0.0.1.0.0.1.2 13-14|0.0.1.0.0 12-13|0 9-10|0.0 6-7|0.0.1 5-6|0.0.1.1 4-5|0.0.1.2 2-3|0.0.0.0+0.0.0 1-2|0.0.1.0 0-1|0.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:48.861
# ::node	0	scheme-01	12-13
# ::node	0.0	cover-01	9-10
# ::node	0.0.0	person	2-3
# ::node	0.0.0.0	employ-01	2-3
# ::node	0.0.1	likely	6-7
# ::node	0.0.1.0	pay-01	1-2
# ::node	0.0.1.0.0	and	13-14
# ::node	0.0.1.0.0.0	low	0-1
# ::node	0.0.1.0.0.1	benefit-01	17-18
# ::node	0.0.1.0.0.1.0	they	15-16
# ::node	0.0.1.0.0.1.1	increase-01	21-22
# ::node	0.0.1.0.0.1.1.0	generous-41	20-21
# ::node	0.0.1.0.0.1.2	so	14-15
# ::node	0.0.1.1	less	5-6
# ::node	0.0.1.2	general	4-5
# ::root	0	scheme-01
(s2 / scheme-01 
      :ARG1-of (c / cover-01 
            :ARG0 (p / person 
                  :ARG1-of (e / employ-01)) 
            :domain-of (l / likely 
                  :ARG1-of (p2 / pay-01 
                        :op-of (a / and 
                              :op1 (l3 / low) 
                              :op2 (b / benefit-01 
                                    :ARG0 (t / they) 
                                    :ARG1 (i / increase-01 
                                          :ARG1-of (g / generous-41)) 
                                    :op-of (s / so)))) 
                  :degree (l2 / less) 
                  :mod (g2 / general))))

# ::snt the lower storey includes a very generous stair and entrance hall extending to two storeys in height at its centre within a peripheral firstfloor gallery a double garage utility room and a large kitchen being accommodated in the western half of the former storage shed
# ::tok the lower storey includes a very generous stair and entrance hall extending to two storeys in height at its centre within a peripheral firstfloor gallery a double garage utility room and a large kitchen being accommodated in the western half of the former storage shed
# ::alignments 44-45|0.1 43-44|0 42-43|0.4 39-40|0.3 38-39|0.3.0.0.0+0.3.0.0+0.3.0 32-33|0.2 30-31|0.1.0.1.2.0 29-30|0.1.0.1.2.0.0 28-29|0.1.0.1.2.0.0.0 27-28|0.1.0.1.0 26-27|0.1.0.1.2.0.0.1 22-23|0.0 20-21|0.1.0.1.2 13-14|0.1.0.2.0 11-12|0.1.0.1 10-11|0.1.0.1.1 9-10|0.1.0.1.1.0 8-9|0.1.0 6-7|0.1.0.0 5-6|0.1.0.0.0 3-4|0.1.0.2 1-2|0.1.0.2.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:49.564
# ::node	0	store-01	43-44
# ::node	0.0	peripheral	22-23
# ::node	0.1	shed-01	44-45
# ::node	0.1.0	and	8-9
# ::node	0.1.0.0	generous-41	6-7
# ::node	0.1.0.0.0	very	5-6
# ::node	0.1.0.1	extend-01	11-12
# ::node	0.1.0.1.0	garage	27-28
# ::node	0.1.0.1.1	hall	10-11
# ::node	0.1.0.1.1.0	entrance	9-10
# ::node	0.1.0.1.2	within	20-21
# ::node	0.1.0.1.2.0	and	30-31
# ::node	0.1.0.1.2.0.0	room	29-30
# ::node	0.1.0.1.2.0.0.0	utility	28-29
# ::node	0.1.0.1.2.0.0.1	double	26-27
# ::node	0.1.0.2	include-01	3-4
# ::node	0.1.0.2.0	2	13-14
# ::node	0.1.0.2.1	low	1-2
# ::node	0.2	large	32-33
# ::node	0.3	half	39-40
# ::node	0.3.0	world-region	38-39
# ::node	0.3.0.0	name	38-39
# ::node	0.3.0.0.0	"West"	38-39
# ::node	0.4	former	42-43
# ::root	0	store-01
# ::edge	and	op1	include-01	0.1.0	0.1.0.2	
# ::edge	and	op1	room	0.1.0.1.2.0	0.1.0.1.2.0.0	
# ::edge	extend-01	ARG0	garage	0.1.0.1	0.1.0.1.0	
# ::edge	extend-01	ARG1	hall	0.1.0.1	0.1.0.1.1	
# ::edge	extend-01	ARG2	and	0.1.0.1	0.1.0	
# ::edge	extend-01	time	within	0.1.0.1	0.1.0.1.2	
# ::edge	generous-41	ARG1	and	0.1.0.0	0.1.0	
# ::edge	generous-41	degree	very	0.1.0.0	0.1.0.0.0	
# ::edge	half	mod	world-region	0.3	0.3.0	
# ::edge	half	purpose	store-01	0.3	0	
# ::edge	hall	mod	entrance	0.1.0.1.1	0.1.0.1.1.0	
# ::edge	include-01	ARG0	2	0.1.0.2	0.1.0.2.0	
# ::edge	include-01	ARG1	low	0.1.0.2	0.1.0.2.1	
# ::edge	name	op1	"West"	0.3.0.0	0.3.0.0.0	
# ::edge	room	mod	double	0.1.0.1.2.0.0	0.1.0.1.2.0.0.1	
# ::edge	room	mod	utility	0.1.0.1.2.0.0	0.1.0.1.2.0.0.0	
# ::edge	shed-01	ARG0	and	0.1	0.1.0	
# ::edge	shed-01	ARG1	store-01	0.1	0	
# ::edge	store-01	ARG0	peripheral	0	0.0	
# ::edge	store-01	mod	large	0	0.2	
# ::edge	store-01	time	former	0	0.4	
# ::edge	within	op1	and	0.1.0.1.2	0.1.0.1.2.0	
# ::edge	world-region	name	name	0.3.0	0.3.0.0	
(s2 / store-01 
      :ARG0 (p / peripheral) 
      :ARG1-of (s / shed-01 
            :ARG0 (a2 / and 
                  :ARG1-of (g2 / generous-41 
                        :degree (v / very)) 
                  :ARG2-of (e / extend-01 
                        :ARG0 (g / garage) 
                        :ARG1 (h2 / hall 
                              :mod (e2 / entrance)) 
                        :time (w2 / within 
                              :op1 (a / and 
                                    :op1 (r / room 
                                          :mod (u / utility) 
                                          :mod (d / double))))) 
                  :op1 (i / include-01 
                        :ARG0 2 
                        :ARG1 (l2 / low)))) 
      :mod (l / large) 
      :purpose-of (h / half 
            :mod (w / world-region 
                  :name (n / name 
                        :op1 "West"))) 
      :time (f / former))

# ::snt a fixedprice lunch may include a very unpleasant cheesecake and a seriously overcooked samsons temptation where the shredded potato instead of being suffused with cream and spiked with sweetcured anchovy is burnt dry and crusty but it can also yield an incredibly generous portion of smoked eel rather more danish than swedish
# ::tok a fixedprice lunch may include a very unpleasant cheesecake and a seriously overcooked samsons temptation where the shredded potato instead of being suffused with cream and spiked with sweetcured anchovy is burnt dry and crusty but it can also yield an incredibly generous portion of smoked eel rather more danish than swedish
# ::alignments 45-46|0.1.0.1.1.0 43-44|0.2.0.1 42-43|0.2.0.1.0 41-42|0.2.0.1.0.0 39-40|0.2.0 38-39|0.2.0.2 37-38|0.2 36-37|0.2.0.0 35-36|0 33-34|0.1.1 32-33|0.1.0 31-32|0.1 25-26|0.1.0.1.1 19-20|0.0 18-19|0.1.0.1 17-18|0.1.0.1.0 11-12|0.1.0.0 9-10|0.3.0 7-8|0.3.0.0.1+0.3.0.0 6-7|0.3.0.0.0 4-5|0.3 3-4|0.3.2.0+0.3.2 2-3|0.3.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:50.993
# ::node	0	contrast-01	35-36
# ::node	0.0	instead	19-20
# ::node	0.1	burn-01	31-32
# ::node	0.1.0	dry-02	32-33
# ::node	0.1.0.0	serious	11-12
# ::node	0.1.0.1	potato	18-19
# ::node	0.1.0.1.0	shred-01	17-18
# ::node	0.1.0.1.1	and	25-26
# ::node	0.1.0.1.1.0	smoke-02	45-46
# ::node	0.1.1	and	33-34
# ::node	0.2	possible	37-38
# ::node	0.2.0	yield-02	39-40
# ::node	0.2.0.0	it	36-37
# ::node	0.2.0.1	portion	43-44
# ::node	0.2.0.1.0	generous-41	42-43
# ::node	0.2.0.1.0.0	incredible	41-42
# ::node	0.2.0.2	also	38-39
# ::node	0.3	include-01	4-5
# ::node	0.3.0	and	9-10
# ::node	0.3.0.0	pleasant-41	7-8
# ::node	0.3.0.0.0	very	6-7
# ::node	0.3.0.0.1	-	7-8
# ::node	0.3.1	lunch-01	2-3
# ::node	0.3.2	date-entity	3-4
# ::node	0.3.2.0	5	3-4
# ::root	0	contrast-01
# ::edge	and	op1	potato	0.1.0.1.1	0.1.0.1	
# ::edge	and	op2	smoke-02	0.1.0.1.1	0.1.0.1.1.0	
# ::edge	burn-01	ARG1	dry-02	0.1	0.1.0	
# ::edge	burn-01	ARG2	and	0.1	0.1.1	
# ::edge	contrast-01	ARG0	instead	0	0.0	
# ::edge	contrast-01	ARG1	burn-01	0	0.1	
# ::edge	contrast-01	ARG2	possible	0	0.2	
# ::edge	date-entity	month	5	0.3.2	0.3.2.0	
# ::edge	dry-02	ARG0	serious	0.1.0	0.1.0.0	
# ::edge	dry-02	ARG1	potato	0.1.0	0.1.0.1	
# ::edge	generous-41	ARG1	portion	0.2.0.1.0	0.2.0.1	
# ::edge	generous-41	degree	incredible	0.2.0.1.0	0.2.0.1.0.0	
# ::edge	include-01	ARG1	and	0.3	0.3.0	
# ::edge	include-01	ARG2	lunch-01	0.3	0.3.1	
# ::edge	include-01	condition	contrast-01	0.3	0	
# ::edge	include-01	mod	date-entity	0.3	0.3.2	
# ::edge	pleasant-41	ARG1	and	0.3.0.0	0.3.0	
# ::edge	pleasant-41	degree	very	0.3.0.0	0.3.0.0.0	
# ::edge	pleasant-41	polarity	-	0.3.0.0	0.3.0.0.1	
# ::edge	possible	domain	yield-02	0.2	0.2.0	
# ::edge	shred-01	ARG1	potato	0.1.0.1.0	0.1.0.1	
# ::edge	yield-02	ARG0	it	0.2.0	0.2.0.0	
# ::edge	yield-02	ARG1	portion	0.2.0	0.2.0.1	
# ::edge	yield-02	mod	also	0.2.0	0.2.0.2	
(c / contrast-01 
      :ARG0 (i3 / instead) 
      :ARG1 (b / burn-01 
            :ARG1 (d / dry-02 
                  :ARG0 (s3 / serious) 
                  :ARG1 (p3 / potato 
                        :ARG1-of (s2 / shred-01) 
                        :op-of (a3 / and 
                              :op1 (s / smoke-02)))) 
            :ARG2 (a2 / and)) 
      :ARG2 (p2 / possible 
            :domain (y / yield-02 
                  :ARG0 (i2 / it) 
                  :ARG1 (p / portion 
                        :ARG1-of (g / generous-41 
                              :degree (i / incredible))) 
                  :mod (a / also))) 
      :condition-of (i4 / include-01 
            :ARG1 (a4 / and 
                  :ARG1-of (p4 / pleasant-41 
                        :degree (v / very) 
                        :polarity -)) 
            :ARG2 (l / lunch-01) 
            :mod (d2 / date-entity 
                  :month 5)))

# ::snt 1m in the year to 31 july where the taxman has been more benign and the dividend payout more generous than expected
# ::tok 1m in the year to 31 july where the taxman has been more benign and the dividend payout more generous than expected
# ::alignments 21-22|0 19-20|0.1 14-15|0.2 13-14|0.2.0 6-7|0.0.0+0.0 3-4|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:51.031
# ::node	0	expect-01	21-22
# ::node	0.0	date-entity	6-7
# ::node	0.0.0	7	6-7
# ::node	0.1	generous-41	19-20
# ::node	0.1.0	year	3-4
# ::node	0.2	and	14-15
# ::node	0.2.0	benign	13-14
# ::root	0	expect-01
# ::edge	and	op1	benign	0.2	0.2.0	
# ::edge	and	op2	expect-01	0.2	0	
# ::edge	date-entity	month	7	0.0	0.0.0	
# ::edge	expect-01	ARG1	date-entity	0	0.0	
# ::edge	generous-41	ARG0	year	0.1	0.1.0	
# ::edge	generous-41	ARG1	expect-01	0.1	0	
(e / expect-01 
      :ARG1 (d / date-entity 
            :month 7) 
      :ARG1-of (g / generous-41 
            :ARG0 (y / year)) 
      :op-of (a / and 
            :op1 (b / benign)))

# ::snt   there were also protests to the umpire professor john billingsley about the generous twiddle time given to the singaporean handlers applying the screwdriver at the starting blocks
# ::tok there were also protests to the umpire professor john billingsley about the generous twiddle time given to the singaporean handlers applying the screwdriver at the starting blocks
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:51.032
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt but by offering generous bank guarantees he was able to buy 200 new tied pubs and increase belhavens sales from 3000 barrels a year to 30000
# ::tok but by offering generous bank guarantees he was able to buy 200 new tied pubs and increase belhavens sales from 3000 barrels a year to 30000
# ::alignments 25-26|0.1.0.3.0 23-24|0.1.0.1.2.1.0 21-22|0.0.1+0.0 20-21|0.0.0.0+0.0.0 16-17|0.1.0.1.2.1 15-16|0.1.0.1.2 13-14|0.1.0.1.0 12-13|0.1.0.0 11-12|0.1.0.1.0.0 10-11|0.1.0.1 8-9|0.1.0.1.1 6-7|0.1.0.1.2.0 5-6|0.1.0 4-5|0.1.0.2 3-4|0.1.0.3 2-3|0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:51.417
# ::node	0	contrast-01	0-1
# ::node	0.0	volume-quantity	21-22
# ::node	0.0.0	date-entity	20-21
# ::node	0.0.0.0	3000	20-21
# ::node	0.0.1	barrel	21-22
# ::node	0.1	offer-01	2-3
# ::node	0.1.0	guarantee-01	5-6
# ::node	0.1.0.0	new	12-13
# ::node	0.1.0.1	buy-01	10-11
# ::node	0.1.0.1.0	tie-01	13-14
# ::node	0.1.0.1.0.0	200	11-12
# ::node	0.1.0.1.1	possible	8-9
# ::node	0.1.0.1.2	and	15-16
# ::node	0.1.0.1.2.0	he	6-7
# ::node	0.1.0.1.2.1	increase-01	16-17
# ::node	0.1.0.1.2.1.0	year	23-24
# ::node	0.1.0.2	bank	4-5
# ::node	0.1.0.3	generous-41	3-4
# ::node	0.1.0.3.0	30000	25-26
# ::root	0	contrast-01
# ::edge	and	op1	he	0.1.0.1.2	0.1.0.1.2.0	
# ::edge	and	op2	buy-01	0.1.0.1.2	0.1.0.1	
# ::edge	and	op3	increase-01	0.1.0.1.2	0.1.0.1.2.1	
# ::edge	buy-01	ARG0	guarantee-01	0.1.0.1	0.1.0	
# ::edge	buy-01	ARG1	tie-01	0.1.0.1	0.1.0.1.0	
# ::edge	contrast-01	ARG0	volume-quantity	0	0.0	
# ::edge	contrast-01	ARG1	offer-01	0	0.1	
# ::edge	date-entity	year	3000	0.0.0	0.0.0.0	
# ::edge	generous-41	ARG1	30000	0.1.0.3	0.1.0.3.0	
# ::edge	guarantee-01	ARG0	new	0.1.0	0.1.0.0	
# ::edge	guarantee-01	ARG1	bank	0.1.0	0.1.0.2	
# ::edge	guarantee-01	mod	generous-41	0.1.0	0.1.0.3	
# ::edge	increase-01	ARG1	year	0.1.0.1.2.1	0.1.0.1.2.1.0	
# ::edge	offer-01	ARG1	guarantee-01	0.1	0.1.0	
# ::edge	possible	domain	buy-01	0.1.0.1.1	0.1.0.1	
# ::edge	tie-01	ARG1	200	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	volume-quantity	time	date-entity	0.0	0.0.0	
# ::edge	volume-quantity	unit	barrel	0.0	0.0.1	
(c / contrast-01 
      :ARG0 (v / volume-quantity 
            :time (d / date-entity 
                  :year 3000) 
            :unit (b / barrel)) 
      :ARG1 (o / offer-01 
            :ARG1 (g / guarantee-01 
                  :ARG0 (n / new) 
                  :ARG0-of (b2 / buy-01 
                        :ARG1 (t / tie-01 
                              :ARG1 200) 
                        :domain-of (p / possible) 
                        :op-of (a / and 
                              :op1 (h / he) 
                              :op2 (i / increase-01 
                                    :ARG1 (y / year)))) 
                  :ARG1 (b3 / bank) 
                  :mod (g2 / generous-41 
                        :ARG1 30000))))

# ::snt contact a family want to amass independent evidence that children are usually clean and dry at night younger than this so that they can put the case for more generous help for handicapped children
# ::tok contact a family want to amass independent evidence that children are usually clean and dry at night younger than this so that they can put the case for more generous help for handicapped children
# ::alignments 33-34|0.0.0.0.0.1.0.0 30-31|0.0.0.0.0.1.0 29-30|0.0.0.0.0.1.0.1 26-27|0.0.0.0.0.1.0.2 23-24|0 22-23|0.0.0.0.0.1 20-21|0.1 19-20|0.0.2.0.0 17-18|0.0.2.0 16-17|0.0.2.1 14-15|0.0.2 13-14|0.0 12-13|0.0.1 11-12|0.0.1.1 9-10|0.0.1.0 7-8|0.0.0.0.0 6-7|0.0.0.0.0.0.0+0.0.0.0.0.0 3-4|0.0.0 2-3|0.0.0.0 0-1|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:51.906
# ::node	0	possible	23-24
# ::node	0.0	and	13-14
# ::node	0.0.0	want-01	3-4
# ::node	0.0.0.0	family	2-3
# ::node	0.0.0.0.0	evidence-01	7-8
# ::node	0.0.0.0.0.0	depend-01	6-7
# ::node	0.0.0.0.0.0.0	-	6-7
# ::node	0.0.0.0.0.1	they	22-23
# ::node	0.0.0.0.0.1.0	help-01	30-31
# ::node	0.0.0.0.0.1.0.0	child	33-34
# ::node	0.0.0.0.0.1.0.1	generous-41	29-30
# ::node	0.0.0.0.0.1.0.2	case	26-27
# ::node	0.0.0.1	contact-01	0-1
# ::node	0.0.1	clean	12-13
# ::node	0.0.1.0	child	9-10
# ::node	0.0.1.1	usual	11-12
# ::node	0.0.2	dry-02	14-15
# ::node	0.0.2.0	young	17-18
# ::node	0.0.2.0.0	this	19-20
# ::node	0.0.2.1	night	16-17
# ::node	0.1	so	20-21
# ::root	0	possible
# ::edge	and	op1	clean	0.0	0.0.1	
# ::edge	and	op2	dry-02	0.0	0.0.2	
# ::edge	case	topic	help-01	0.0.0.0.0.1.0.2	0.0.0.0.0.1.0	
# ::edge	clean	domain	child	0.0.1	0.0.1.0	
# ::edge	clean	mod	usual	0.0.1	0.0.1.1	
# ::edge	contact-01	ARG1	want-01	0.0.0.1	0.0.0	
# ::edge	depend-01	ARG0	evidence-01	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	depend-01	polarity	-	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	dry-02	ARG1	young	0.0.2	0.0.2.0	
# ::edge	dry-02	time	night	0.0.2	0.0.2.1	
# ::edge	evidence-01	ARG0	family	0.0.0.0.0	0.0.0.0	
# ::edge	evidence-01	ARG1	they	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	generous-41	ARG1	help-01	0.0.0.0.0.1.0.1	0.0.0.0.0.1.0	
# ::edge	help-01	ARG0	they	0.0.0.0.0.1.0	0.0.0.0.0.1	
# ::edge	help-01	ARG1	child	0.0.0.0.0.1.0	0.0.0.0.0.1.0.0	
# ::edge	possible	domain	and	0	0.0	
# ::edge	possible	mod	so	0	0.1	
# ::edge	want-01	ARG0	family	0.0.0	0.0.0.0	
# ::edge	want-01	ARG1	and	0.0.0	0.0	
# ::edge	young	topic	this	0.0.2.0	0.0.2.0.0	
(p / possible 
      :domain (a / and 
            :ARG1-of (w / want-01 
                  :ARG0 (f / family 
                        :ARG0-of (e / evidence-01 
                              :ARG0-of (d2 / depend-01 
                                    :polarity -) 
                              :ARG1 (t / they 
                                    :ARG0-of (h / help-01 
                                          :ARG1 (c / child) 
                                          :ARG1-of (g / generous-41) 
                                          :topic-of (c2 / case))))) 
                  :ARG1-of (c5 / contact-01)) 
            :op1 (c3 / clean 
                  :domain (c4 / child) 
                  :mod (u / usual)) 
            :op2 (d / dry-02 
                  :ARG1 (y / young 
                        :topic (t2 / this)) 
                  :time (n / night))) 
      :mod (s / so))

# ::snt this excitement the copywriter continues is brought into the home courtesy of the new pye portable ellip  glorious in tone generous in volume comprehensive in range of reception
# ::tok this excitement the copywriter continues is brought into the home courtesy of the new pye portable ellip glorious in tone generous in volume comprehensive in range of reception
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:51.907
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt nordic traditions of social consensus high taxes and generous levels of welfare spending all underpinned by efficient private industry could not readily be transferred with success though austria offers a similar example which is nearer at hand
# ::tok nordic traditions of social consensus high taxes and generous levels of welfare spending all underpinned by efficient private industry could not readily be transferred with success though austria offers a similar example which is nearer at hand
# ::alignments 36-37|0.0.1.0.0 31-32|0.0.0 28-29|0.0 25-26|0.1.1 23-24|0.1 21-22|0.1.2 19-20|0 18-19|0.0.1.1 17-18|0.0.1.1.1 16-17|0.0.1.1.0 13-14|0.1.0 12-13|0.0.1.0 11-12|0.0.1.0.1 9-10|0.0.1.3 8-9|0.0.1.3.0 7-8|0.0.1 6-7|0.0.1.2 5-6|0.0.1.2.0 4-5|0.1.1.1.0 3-4|0.1.1.0 1-2|0.1.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:52.309
# ::node	0	possible	19-20
# ::node	0.0	offer-01	28-29
# ::node	0.0.0	example	31-32
# ::node	0.0.1	and	7-8
# ::node	0.0.1.0	spend-01	12-13
# ::node	0.0.1.0.0	hand	36-37
# ::node	0.0.1.0.1	welfare	11-12
# ::node	0.0.1.1	industry	18-19
# ::node	0.0.1.1.0	efficiency	16-17
# ::node	0.0.1.1.1	private	17-18
# ::node	0.0.1.2	tax-01	6-7
# ::node	0.0.1.2.0	high	5-6
# ::node	0.0.1.3	level	9-10
# ::node	0.0.1.3.0	generous-41	8-9
# ::node	0.1	transfer-01	23-24
# ::node	0.1.0	all	13-14
# ::node	0.1.1	succeed-01	25-26
# ::node	0.1.1.0	society	3-4
# ::node	0.1.1.1	tradition	1-2
# ::node	0.1.1.1.0	consensus	4-5
# ::node	0.1.2	ready	21-22
# ::root	0	possible
# ::edge	and	op1	tax-01	0.0.1	0.0.1.2	
# ::edge	and	op2	level	0.0.1	0.0.1.3	
# ::edge	generous-41	ARG1	level	0.0.1.3.0	0.0.1.3	
# ::edge	industry	example	and	0.0.1.1	0.0.1	
# ::edge	industry	mod	efficiency	0.0.1.1	0.0.1.1.0	
# ::edge	industry	mod	private	0.0.1.1	0.0.1.1.1	
# ::edge	offer-01	ARG1	example	0.0	0.0.0	
# ::edge	offer-01	ARG3	and	0.0	0.0.1	
# ::edge	possible	condition	offer-01	0	0.0	
# ::edge	possible	domain	transfer-01	0	0.1	
# ::edge	spend-01	ARG0	hand	0.0.1.0	0.0.1.0.0	
# ::edge	spend-01	ARG1	welfare	0.0.1.0	0.0.1.0.1	
# ::edge	spend-01	ARG2	and	0.0.1.0	0.0.1	
# ::edge	succeed-01	ARG0	society	0.1.1	0.1.1.0	
# ::edge	succeed-01	ARG1	tradition	0.1.1	0.1.1.1	
# ::edge	tax-01	ARG1	high	0.0.1.2	0.0.1.2.0	
# ::edge	tradition	mod	consensus	0.1.1.1	0.1.1.1.0	
# ::edge	transfer-01	ARG0	all	0.1	0.1.0	
# ::edge	transfer-01	manner	ready	0.1	0.1.2	
# ::edge	transfer-01	manner	succeed-01	0.1	0.1.1	
(p / possible 
      :condition (o / offer-01 
            :ARG1 (e / example) 
            :ARG3 (a2 / and 
                  :ARG2-of (s2 / spend-01 
                        :ARG0 (h / hand) 
                        :ARG1 (w / welfare)) 
                  :example-of (i / industry 
                        :mod (e2 / efficiency) 
                        :mod (p2 / private)) 
                  :op1 (t2 / tax-01 
                        :ARG1 (h2 / high)) 
                  :op2 (l / level 
                        :ARG1-of (g / generous-41)))) 
      :domain (t / transfer-01 
            :ARG0 (a / all) 
            :manner (s / succeed-01 
                  :ARG0 (s3 / society) 
                  :ARG1 (t3 / tradition 
                        :mod (c / consensus))) 
            :manner (r / ready)))

# ::snt higher education was available for them on a fairly generous scale
# ::tok higher education was available for them on a fairly generous scale
# ::alignments 10-11|0.0.0.0 9-10|0.0.0 8-9|0.0.0.1 3-4|0.0.1 1-2|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:52.332
# ::node	0	high	0-1
# ::node	0.0	educate-01	1-2
# ::node	0.0.0	generous-41	9-10
# ::node	0.0.0.0	scale	10-11
# ::node	0.0.0.1	fair	8-9
# ::node	0.0.1	available	3-4
# ::root	0	high
(h / high 
      :mod-of (e / educate-01 
            :ARG1 (g / generous-41 
                  :ARG1 (s / scale) 
                  :degree (f / fair)) 
            :domain-of (a / available)))

# ::snt no club could hope for a more helpful or generous landlord than oriel college
# ::tok no club could hope for a more helpful or generous landlord than oriel college
# ::alignments 13-14|0.1.1.0 10-11|0.1.2 9-10|0.1.1 8-9|0.1 7-8|0.1.0 3-4|0 2-3|0.2 1-2|0.0 0-1|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:52.383
# ::node	0	hope-01	3-4
# ::node	0.0	club	1-2
# ::node	0.1	or	8-9
# ::node	0.1.0	help-01	7-8
# ::node	0.1.1	generous-41	9-10
# ::node	0.1.1.0	college	13-14
# ::node	0.1.2	landlord	10-11
# ::node	0.2	possible	2-3
# ::node	0.2.0	-	0-1
# ::root	0	hope-01
# ::edge	generous-41	ARG0	college	0.1.1	0.1.1.0	
# ::edge	hope-01	ARG0	club	0	0.0	
# ::edge	hope-01	ARG1	or	0	0.1	
# ::edge	or	op1	help-01	0.1	0.1.0	
# ::edge	or	op2	generous-41	0.1	0.1.1	
# ::edge	or	op3	landlord	0.1	0.1.2	
# ::edge	possible	domain	hope-01	0.2	0	
# ::edge	possible	polarity	-	0.2	0.2.0	
(h2 / hope-01 
      :ARG0 (c2 / club) 
      :ARG1 (o / or 
            :op1 (h / help-01) 
            :op2 (g / generous-41 
                  :ARG0 (c / college)) 
            :op3 (l / landlord)) 
      :domain-of (p / possible 
            :polarity (- / -)))

# ::snt beside the pipes in some places were stored or heeled into the ground generous quantities of young trees and shrubs ready for planting
# ::tok beside the pipes in some places were stored or heeled into the ground generous quantities of young trees and shrubs ready for planting
# ::alignments 22-23|0.1.0.1.0.0 20-21|0.1.0.1.0 18-19|0.1.0.2 17-18|0.1.0.1 16-17|0.1.0.1.1 14-15|0.1.0 13-14|0.1.0.0 12-13|0.1.1 8-9|0.1 7-8|0 5-6|0.0 4-5|0.0.0 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:52.511
# ::node	0	store-01	7-8
# ::node	0.0	place	5-6
# ::node	0.0.0	some	4-5
# ::node	0.1	or	8-9
# ::node	0.1.0	quantity	14-15
# ::node	0.1.0.0	generous-41	13-14
# ::node	0.1.0.1	tree	17-18
# ::node	0.1.0.1.0	ready-01	20-21
# ::node	0.1.0.1.0.0	plant-01	22-23
# ::node	0.1.0.1.1	young	16-17
# ::node	0.1.0.2	and	18-19
# ::node	0.1.1	ground	12-13
# ::node	0.2	beside	0-1
# ::root	0	store-01
# ::edge	and	quant	quantity	0.1.0.2	0.1.0	
# ::edge	generous-41	ARG1	quantity	0.1.0.0	0.1.0	
# ::edge	or	op1	store-01	0.1	0	
# ::edge	or	time	ground	0.1	0.1.1	
# ::edge	place	mod	some	0.0	0.0.0	
# ::edge	quantity	quant	or	0.1.0	0.1	
# ::edge	ready-01	ARG1	tree	0.1.0.1.0	0.1.0.1	
# ::edge	ready-01	ARG2	plant-01	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	store-01	location	place	0	0.0	
# ::edge	store-01	time	beside	0	0.2	
# ::edge	tree	mod	young	0.1.0.1	0.1.0.1.1	
# ::edge	tree	quant	quantity	0.1.0.1	0.1.0	
(s / store-01 
      :location (p2 / place 
            :mod (s2 / some)) 
      :op-of (o / or 
            :quant-of (q / quantity 
                  :ARG1-of (g / generous-41) 
                  :quant-of (t / tree 
                        :ARG1-of (r / ready-01 
                              :ARG2 (p / plant-01)) 
                        :mod (y / young)) 
                  :quant-of (a / and)) 
            :time (g2 / ground)) 
      :time (b / beside))

# ::snt at de la granges converted monastery in corsica guests for summer breaks in 1971 and 1972 included xenakis and his wife pierre henry the musique concrete composer and the marchise yvonne de casafuerte who talked of mon ami francis poulenc at every possible juncture but was a generous supporter of new music
# ::tok at de la granges converted monastery in corsica guests for summer breaks in 1971 and 1972 included xenakis and his wife pierre henry the musique concrete composer and the marchise yvonne de casafuerte who talked of mon ami francis poulenc at every possible juncture but was a generous supporter of new music
# ::alignments 51-52|0.1.1 50-51|0.1.1.0 48-49|0.1 47-48|0.1.2 44-45|0 42-43|0.0.1 41-42|0.0.0.0.0.0 34-35|0.0 27-28|0.0.0 25-26|0.1.0 21-23|0.0.0.0.1.0+0.0.0.0.1.1+0.0.0.0.1+0.0.0.0 20-21|0.0.0.0.0.1+0.0.0.0.0 18-19|0.0.0.0.2 16-17|0.0.0.0.2.0 15-16|0.0.0.0.2.0.0.0.2.1.0+0.0.0.0.2.0.0.0.2.1 14-15|0.0.0.0.2.0.0 13-14|0.0.0.0.2.0.0.0.2.3.0+0.0.0.0.2.0.0.0.2.3 11-12|0.0.0.0.2.0.0.0.2 10-11|0.0.0.0.2.0.0.0.2.2 8-9|0.0.0.0.2.0.0.0.2.0 5-6|0.0.0.0.2.0.0.0.1 4-5|0.0.0.0.2.0.0.0 1-3|0.0.0.0.2.0.0.0.0.0.0+0.0.0.0.2.0.0.0.0.0.1+0.0.0.0.2.0.0.0.0.0+0.0.0.0.2.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:53.381
# ::node	0	contrast-01	44-45
# ::node	0.0	talk-01	34-35
# ::node	0.0.0	and	27-28
# ::node	0.0.0.0	person	21-23
# ::node	0.0.0.0.0	have-rel-role-91	20-21
# ::node	0.0.0.0.0.0	every	41-42
# ::node	0.0.0.0.0.1	wife	20-21
# ::node	0.0.0.0.1	name	21-23
# ::node	0.0.0.0.1.0	"henry"	21-23
# ::node	0.0.0.0.1.1	"pierre"	21-23
# ::node	0.0.0.0.2	and	18-19
# ::node	0.0.0.0.2.0	include-01	16-17
# ::node	0.0.0.0.2.0.0	and	14-15
# ::node	0.0.0.0.2.0.0.0	convert-01	4-5
# ::node	0.0.0.0.2.0.0.0.0	country	1-3
# ::node	0.0.0.0.2.0.0.0.0.0	name	1-3
# ::node	0.0.0.0.2.0.0.0.0.0.0	"la"	1-3
# ::node	0.0.0.0.2.0.0.0.0.0.1	"de"	1-3
# ::node	0.0.0.0.2.0.0.0.1	monastery	5-6
# ::node	0.0.0.0.2.0.0.0.2	break-01	11-12
# ::node	0.0.0.0.2.0.0.0.2.0	guest	8-9
# ::node	0.0.0.0.2.0.0.0.2.1	date-entity	15-16
# ::node	0.0.0.0.2.0.0.0.2.1.0	1972	15-16
# ::node	0.0.0.0.2.0.0.0.2.2	summer	10-11
# ::node	0.0.0.0.2.0.0.0.2.3	date-entity	13-14
# ::node	0.0.0.0.2.0.0.0.2.3.0	1971	13-14
# ::node	0.0.1	possible	42-43
# ::node	0.1	support-01	48-49
# ::node	0.1.0	concrete	25-26
# ::node	0.1.1	music	51-52
# ::node	0.1.1.0	new	50-51
# ::node	0.1.2	generous-41	47-48
# ::root	0	contrast-01
# ::edge	and	op1	convert-01	0.0.0.0.2.0.0	0.0.0.0.2.0.0.0	
# ::edge	and	op1	person	0.0.0	0.0.0.0	
# ::edge	and	op1	person	0.0.0.0.2	0.0.0.0	
# ::edge	and	op2	include-01	0.0.0.0.2.0.0	0.0.0.0.2.0	
# ::edge	break-01	ARG0	guest	0.0.0.0.2.0.0.0.2	0.0.0.0.2.0.0.0.2.0	
# ::edge	break-01	ARG1	date-entity	0.0.0.0.2.0.0.0.2	0.0.0.0.2.0.0.0.2.1	
# ::edge	break-01	mod	summer	0.0.0.0.2.0.0.0.2	0.0.0.0.2.0.0.0.2.2	
# ::edge	break-01	time	date-entity	0.0.0.0.2.0.0.0.2	0.0.0.0.2.0.0.0.2.3	
# ::edge	contrast-01	ARG1	talk-01	0	0.0	
# ::edge	contrast-01	ARG2	support-01	0	0.1	
# ::edge	convert-01	ARG0	country	0.0.0.0.2.0.0.0	0.0.0.0.2.0.0.0.0	
# ::edge	convert-01	ARG1	monastery	0.0.0.0.2.0.0.0	0.0.0.0.2.0.0.0.1	
# ::edge	convert-01	ARG2	break-01	0.0.0.0.2.0.0.0	0.0.0.0.2.0.0.0.2	
# ::edge	country	name	name	0.0.0.0.2.0.0.0.0	0.0.0.0.2.0.0.0.0.0	
# ::edge	date-entity	year	1971	0.0.0.0.2.0.0.0.2.3	0.0.0.0.2.0.0.0.2.3.0	
# ::edge	date-entity	year	1972	0.0.0.0.2.0.0.0.2.1	0.0.0.0.2.0.0.0.2.1.0	
# ::edge	generous-41	ARG1	support-01	0.1.2	0.1	
# ::edge	have-rel-role-91	ARG0	person	0.0.0.0.0	0.0.0.0	
# ::edge	have-rel-role-91	ARG1	every	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	have-rel-role-91	ARG2	wife	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	include-01	ARG1	and	0.0.0.0.2.0	0.0.0.0.2	
# ::edge	music	mod	new	0.1.1	0.1.1.0	
# ::edge	name	op1	"henry"	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	name	op1	"la"	0.0.0.0.2.0.0.0.0.0	0.0.0.0.2.0.0.0.0.0.0	
# ::edge	name	op2	"de"	0.0.0.0.2.0.0.0.0.0	0.0.0.0.2.0.0.0.0.0.1	
# ::edge	name	op2	"pierre"	0.0.0.0.1	0.0.0.0.1.1	
# ::edge	person	name	name	0.0.0.0	0.0.0.0.1	
# ::edge	support-01	ARG0	concrete	0.1	0.1.0	
# ::edge	support-01	ARG1	music	0.1	0.1.1	
# ::edge	talk-01	ARG0	and	0.0	0.0.0	
# ::edge	talk-01	ARG1	possible	0.0	0.0.1	
(c / contrast-01 
      :ARG1 (t / talk-01 
            :ARG0 (a / and 
                  :op1 (p2 / person 
                        :ARG0-of (h / have-rel-role-91 
                              :ARG1 (e / every) 
                              :ARG2 (w / wife)) 
                        :name (n2 / name 
                              :op1 "henry" 
                              :op2 "pierre") 
                        :op-of (a2 / and 
                              :ARG1-of (i / include-01 
                                    :op-of (a3 / and 
                                          :op1 (c3 / convert-01 
                                                :ARG0 (c4 / country 
                                                      :name (n3 / name 
                                                            :op1 "la" 
                                                            :op2 "de")) 
                                                :ARG1 (m2 / monastery) 
                                                :ARG2 (b / break-01 
                                                      :ARG0 (g2 / guest) 
                                                      :ARG1 (d / date-entity 
                                                            :year 1972) 
                                                      :mod (s2 / summer) 
                                                      :time (d2 / date-entity 
                                                            :year 1971)))))))) 
            :ARG1 (p / possible)) 
      :ARG2 (s / support-01 
            :ARG0 (c2 / concrete) 
            :ARG1 (m / music 
                  :mod (n / new)) 
            :ARG1-of (g / generous-41)))

# ::snt the safety net is not generous to conservative councils dash
# ::tok the safety net is not generous to conservative councils dash
# ::alignments 8-9|0.1 7-8|0.1.0 5-6|0 2-3|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:53.400
# ::node	0	generous-41	5-6
# ::node	0.0	net	2-3
# ::node	0.0.0	safe-41	1-2
# ::node	0.1	council	8-9
# ::node	0.1.0	conservative	7-8
# ::root	0	generous-41
# ::edge	council	mod	conservative	0.1	0.1.0	
# ::edge	generous-41	ARG1	net	0	0.0	
# ::edge	generous-41	prep-to	council	0	0.1	
# ::edge	net	mod	safe-41	0.0	0.0.0	
(g / generous-41 
      :ARG1 (n / net 
            :mod (s / safe-41)) 
      :prep-to (c / council 
            :mod (c2 / conservative)))

# ::snt william hill quote scudamore at the seemingly generous price of evens to reach 200 again this time
# ::tok william hill quote scudamore at the seemingly generous price of evens to reach 200 again this time
# ::alignments 16-17|0.0.0.0.3 15-16|0.0.0.0.3.0 14-15|0.0.0.0.2 13-14|0.0.0.0.0 12-13|0.0.0.0 8-9|0.0.0.1+0.0.0 7-8|0.0 6-7|0 2-3|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:53.440
# ::node	0	seem-01	6-7
# ::node	0.0	generous-41	7-8
# ::node	0.0.0	thing	8-9
# ::node	0.0.0.0	reach-01	12-13
# ::node	0.0.0.0.0	200	13-14
# ::node	0.0.0.0.1	quote-01	2-3
# ::node	0.0.0.0.2	again	14-15
# ::node	0.0.0.0.3	time	16-17
# ::node	0.0.0.0.3.0	this	15-16
# ::node	0.0.0.1	price-01	8-9
# ::root	0	seem-01
# ::edge	generous-41	ARG2	thing	0.0	0.0.0	
# ::edge	price-01	ARG2	thing	0.0.0.1	0.0.0	
# ::edge	quote-01	ARG1	reach-01	0.0.0.0.1	0.0.0.0	
# ::edge	reach-01	ARG0	thing	0.0.0.0	0.0.0	
# ::edge	reach-01	ARG1	200	0.0.0.0	0.0.0.0.0	
# ::edge	reach-01	mod	again	0.0.0.0	0.0.0.0.2	
# ::edge	reach-01	time	time	0.0.0.0	0.0.0.0.3	
# ::edge	seem-01	ARG1	generous-41	0	0.0	
# ::edge	time	mod	this	0.0.0.0.3	0.0.0.0.3.0	
(s / seem-01 
      :ARG1 (g / generous-41 
            :ARG2 (t3 / thing 
                  :ARG0-of (r / reach-01 
                        :ARG1 200 
                        :ARG1-of (q / quote-01) 
                        :mod (a / again) 
                        :time (t / time 
                              :mod (t2 / this))) 
                  :ARG2-of (p / price-01))))

# ::snt the sale is viewed by ministers as an important opportunity to widen and deepen the ranks of britains army of small private investors and unprecedentedly generous perks are being offered to tempt small shareholders in
# ::tok the sale is viewed by ministers as an important opportunity to widen and deepen the ranks of britains army of small private investors and unprecedentedly generous perks are being offered to tempt small shareholders in
# ::alignments 32-33|0.2.0 29-30|0.3.0 25-26|0.2.2.0 23-24|0.0 22-23|0.0.1.0+0.0.1 21-22|0.0.1.1 20-21|0.0.1.2 18-19|0.0.0 15-16|0.1 12-13|0 9-10|0.3 8-9|0.3.1 5-6|0.2.1+0.2 3-4|0.2.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:53.561
# ::node	0	and	12-13
# ::node	0.0	and	23-24
# ::node	0.0.0	army	18-19
# ::node	0.0.1	person	22-23
# ::node	0.0.1.0	invest-01	22-23
# ::node	0.0.1.1	private	21-22
# ::node	0.0.1.2	small	20-21
# ::node	0.1	rank	15-16
# ::node	0.2	have-org-role-91	5-6
# ::node	0.2.0	small	32-33
# ::node	0.2.1	minister	5-6
# ::node	0.2.2	view-02	3-4
# ::node	0.2.2.0	generous-41	25-26
# ::node	0.3	opportunity	9-10
# ::node	0.3.0	offer-01	29-30
# ::node	0.3.1	important	8-9
# ::root	0	and
# ::edge	and	location	and	0	0.0	
# ::edge	and	op1	army	0.0	0.0.0	
# ::edge	and	op2	person	0.0	0.0.1	
# ::edge	have-org-role-91	ARG1	small	0.2	0.2.0	
# ::edge	have-org-role-91	ARG2	minister	0.2	0.2.1	
# ::edge	have-org-role-91	purpose	and	0.2	0	
# ::edge	invest-01	ARG0	person	0.0.1.0	0.0.1	
# ::edge	offer-01	ARG1	opportunity	0.3.0	0.3	
# ::edge	opportunity	mod	important	0.3	0.3.1	
# ::edge	opportunity	purpose	and	0.3	0	
# ::edge	person	mod	private	0.0.1	0.0.1.1	
# ::edge	person	mod	small	0.0.1	0.0.1.2	
# ::edge	rank	poss	and	0.1	0	
# ::edge	view-02	ARG1	generous-41	0.2.2	0.2.2.0	
# ::edge	view-02	manner	have-org-role-91	0.2.2	0.2	
(a3 / and 
      :location (a / and 
            :op1 (a2 / army) 
            :op2 (p / person 
                  :ARG0-of (i / invest-01) 
                  :mod (p2 / private) 
                  :mod (s2 / small))) 
      :poss-of (r / rank) 
      :purpose-of (h / have-org-role-91 
            :ARG1 (s / small) 
            :ARG2 (m / minister) 
            :manner-of (v / view-02 
                  :ARG1 (g / generous-41))) 
      :purpose-of (o2 / opportunity 
            :ARG1-of (o / offer-01) 
            :mod (i2 / important)))

# ::snt if you plant heliotrope mignonette and parma violets their fragrance will waft into your house all summer long  the secret behind creating a perfect globe of blooms is to plant in layers and include a generous proportion of plants that drape well such as trailing species of lobelia erinus above and pendulous fuchsias
# ::tok if you plant heliotrope mignonette and parma violets their fragrance will waft into your house all summer long the secret behind creating a perfect globe of blooms is to plant in layers and include a generous proportion of plants that drape well such as trailing species of lobelia erinus above and pendulous fuchsias
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:53.564
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt in 1945 after sharing with chain and florey the nobel prize for physiology and medicine fleming in a speech given in lyon paid generous tribute to the work of duchesne which by then was known to him
# ::tok in 1945 after sharing with chain and florey the nobel prize for physiology and medicine fleming in a speech given in lyon paid generous tribute to the work of duchesne which by then was known to him
# ::alignments 34-35|0.1.0.0 32-33|0.0.0 24-25|0.1.0 23-24|0.1.0.1 22-23|0.1 19-20|0.0 18-19|0.1.1 14-15|0.2 13-14|0 9-11|0.1.0.0.0.0.3.0.0+0.1.0.0.0.0.3.0.1+0.1.0.0.0.0.3.0+0.1.0.0.0.0.3 6-7|0.1.0.0.0 5-6|0.1.0.0.0.0.0 3-4|0.1.0.0.0.0 2-3|0.1.0.0.0.0.2 1-2|0.1.0.0.0.0.1.0+0.1.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:53.997
# ::node	0	and	13-14
# ::node	0.0	give-01	19-20
# ::node	0.0.0	then	32-33
# ::node	0.1	pay-01	22-23
# ::node	0.1.0	tribute	24-25
# ::node	0.1.0.0	know-01	34-35
# ::node	0.1.0.0.0	and	6-7
# ::node	0.1.0.0.0.0	share-01	3-4
# ::node	0.1.0.0.0.0.0	chain	5-6
# ::node	0.1.0.0.0.0.1	date-entity	1-2
# ::node	0.1.0.0.0.0.1.0	1945	1-2
# ::node	0.1.0.0.0.0.2	after	2-3
# ::node	0.1.0.0.0.0.3	organization	9-11
# ::node	0.1.0.0.0.0.3.0	name	9-11
# ::node	0.1.0.0.0.0.3.0.0	"prize"	9-11
# ::node	0.1.0.0.0.0.3.0.1	"nobel"	9-11
# ::node	0.1.0.1	generous-41	23-24
# ::node	0.1.1	speech	18-19
# ::node	0.2	medicine	14-15
# ::root	0	and
# ::edge	after	op1	share-01	0.1.0.0.0.0.2	0.1.0.0.0.0	
# ::edge	and	op1	medicine	0	0.2	
# ::edge	date-entity	year	1945	0.1.0.0.0.0.1	0.1.0.0.0.0.1.0	
# ::edge	generous-41	ARG1	tribute	0.1.0.1	0.1.0	
# ::edge	give-01	ARG1	and	0.0	0	
# ::edge	know-01	ARG0	tribute	0.1.0.0	0.1.0	
# ::edge	know-01	ARG1	and	0.1.0.0	0.1.0.0.0	
# ::edge	name	op1	"prize"	0.1.0.0.0.0.3.0	0.1.0.0.0.0.3.0.0	
# ::edge	name	op2	"nobel"	0.1.0.0.0.0.3.0	0.1.0.0.0.0.3.0.1	
# ::edge	organization	name	name	0.1.0.0.0.0.3	0.1.0.0.0.0.3.0	
# ::edge	pay-01	ARG0	tribute	0.1	0.1.0	
# ::edge	pay-01	ARG1	speech	0.1	0.1.1	
# ::edge	pay-01	ARG3	and	0.1	0	
# ::edge	share-01	ARG0	chain	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	share-01	ARG1	date-entity	0.1.0.0.0.0	0.1.0.0.0.0.1	
# ::edge	share-01	ARG2	and	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	share-01	time	organization	0.1.0.0.0.0	0.1.0.0.0.0.3	
# ::edge	then	op1	give-01	0.0.0	0.0	
(a / and 
      :ARG1-of (g2 / give-01 
            :op-of (t / then)) 
      :ARG3-of (p / pay-01 
            :ARG0 (t2 / tribute 
                  :ARG0-of (k / know-01 
                        :ARG1 (a2 / and 
                              :ARG2-of (s2 / share-01 
                                    :ARG0 (c / chain) 
                                    :ARG1 (d / date-entity 
                                          :year 1945) 
                                    :op-of (a3 / after) 
                                    :time (o / organization 
                                          :name (n / name 
                                                :op1 "prize" 
                                                :op2 "nobel"))))) 
                  :ARG1-of (g / generous-41)) 
            :ARG1 (s / speech)) 
      :op1 (m / medicine))

# ::snt while mcnair excluded cambridge he gave keeton generous support elsewhere
# ::tok while mcnair excluded cambridge he gave keeton generous support elsewhere
# ::alignments 9-10|0.0.0.1 8-9|0.0.0 7-8|0.0.0.0 4-5|0.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:54.011
# ::node	0	exclude-01	2-3
# ::node	0.0	he	4-5
# ::node	0.0.0	support-01	8-9
# ::node	0.0.0.0	generous-41	7-8
# ::node	0.0.0.1	elsewhere	9-10
# ::root	0	exclude-01
# ::edge	exclude-01	ARG1	he	0	0.0	
# ::edge	generous-41	ARG1	support-01	0.0.0.0	0.0.0	
# ::edge	support-01	ARG1	he	0.0.0	0.0	
# ::edge	support-01	direction	elsewhere	0.0.0	0.0.0.1	
(e2 / exclude-01 
      :ARG1 (h / he 
            :ARG1-of (s / support-01 
                  :ARG1-of (g / generous-41) 
                  :direction (e / elsewhere))))

# ::snt the social typo badobversationgoodobservation is detailed and generous the characterisation more profound than is usual in comic tales with the result that the reader cannot make snap predictions of the outcome
# ::tok the social typo badobversationgoodobservation is detailed and generous the characterisation more profound than is usual in comic tales with the result that the reader cannot make snap predictions of the outcome
# ::alignments 30-31|0.1 27-28|0 23-24|0.0.0+0.0 20-21|0.0.1 14-15|0.2.0.0 11-12|0.2.1.0 7-8|0.2.1 6-7|0.2 5-6|0.2.0 1-2|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:54.118
# ::node	0	predict-01	27-28
# ::node	0.0	person	23-24
# ::node	0.0.0	read-01	23-24
# ::node	0.0.1	result-01	20-21
# ::node	0.0.1.0	society	1-2
# ::node	0.1	outcome	30-31
# ::node	0.2	and	6-7
# ::node	0.2.0	detail-01	5-6
# ::node	0.2.0.0	usual	14-15
# ::node	0.2.1	generous-41	7-8
# ::node	0.2.1.0	profound	11-12
# ::root	0	predict-01
# ::edge	and	op1	detail-01	0.2	0.2.0	
# ::edge	and	op2	generous-41	0.2	0.2.1	
# ::edge	and	op3	predict-01	0.2	0	
# ::edge	detail-01	ARG1	usual	0.2.0	0.2.0.0	
# ::edge	generous-41	ARG1	profound	0.2.1	0.2.1.0	
# ::edge	predict-01	ARG0	person	0	0.0	
# ::edge	predict-01	ARG1	outcome	0	0.1	
# ::edge	read-01	ARG0	person	0.0.0	0.0	
# ::edge	result-01	ARG0	society	0.0.1	0.0.1.0	
# ::edge	result-01	ARG1	person	0.0.1	0.0	
(p / predict-01 
      :ARG0 (p2 / person 
            :ARG0-of (r / read-01) 
            :ARG1-of (r2 / result-01 
                  :ARG0 (s / society))) 
      :ARG1 (o / outcome) 
      :op-of (a / and 
            :op1 (d / detail-01 
                  :ARG1 (u / usual)) 
            :op2 (g / generous-41 
                  :ARG1 (p3 / profound))))

# ::snt if it encourages the british people always so generous to give more to the poppy appeal then our aim will have been achieved
# ::tok if it encourages the british people always so generous to give more to the poppy appeal then our aim will have been achieved
# ::alignments 22-23|0.0 18-19|0 16-17|0.2 15-16|0.1.1 14-15|0.1.1.0 10-11|0.1 8-9|0.1.0 7-8|0.1.0.0 6-7|0.1.0.1 2-3|0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:54.203
# ::node	0	aim-01	18-19
# ::node	0.0	achieve-01	22-23
# ::node	0.0.0	encourage-01	2-3
# ::node	0.0.0.0	it	1-2
# ::node	0.1	give-01	10-11
# ::node	0.1.0	generous-41	8-9
# ::node	0.1.0.0	so	7-8
# ::node	0.1.0.1	always	6-7
# ::node	0.1.1	appeal-02	15-16
# ::node	0.1.1.0	poppy	14-15
# ::node	0.2	then	16-17
# ::root	0	aim-01
# ::edge	achieve-01	ARG1	aim-01	0.0	0	
# ::edge	aim-01	time	then	0	0.2	
# ::edge	appeal-02	ARG1	poppy	0.1.1	0.1.1.0	
# ::edge	encourage-01	ARG0	it	0.0.0	0.0.0.0	
# ::edge	encourage-01	ARG1	achieve-01	0.0.0	0.0	
# ::edge	generous-41	ARG1	give-01	0.1.0	0.1	
# ::edge	generous-41	degree	so	0.1.0	0.1.0.0	
# ::edge	generous-41	time	always	0.1.0	0.1.0.1	
# ::edge	give-01	ARG1	aim-01	0.1	0	
# ::edge	give-01	ARG2	appeal-02	0.1	0.1.1	
(a2 / aim-01 
      :ARG1-of (a / achieve-01 
            :ARG1-of (e / encourage-01 
                  :ARG0 (i / it))) 
      :ARG1-of (g / give-01 
            :ARG1-of (g2 / generous-41 
                  :degree (s / so) 
                  :time (a4 / always)) 
            :ARG2 (a3 / appeal-02 
                  :ARG1 (p / poppy))) 
      :time (t / then))

# ::snt still he is so wise good and generous in most things that we are only too glad to give him pleasure in such small ways
# ::tok still he is so wise good and generous in most things that we are only too glad to give him pleasure in such small ways
# ::alignments 24-25|0.1.1.0 23-24|0.1.1.0.1 22-23|0.1.1.0.0 20-21|0.1.1 18-19|0.1 16-17|0 15-16|0.0 14-15|0.2 12-13|0.1.0 10-11|0.1.0.0 9-10|0.1.0.0.0 7-8|0.1.2 6-7|0.1.2.1 5-6|0.1.2.1.0 4-5|0.1.2.0 3-4|0.1.2.0.0 1-2|0.1.2.0.1 0-1|0.1.2.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:54.612
# ::node	0	glad	16-17
# ::node	0.0	too	15-16
# ::node	0.1	give-01	18-19
# ::node	0.1.0	we	12-13
# ::node	0.1.0.0	thing	10-11
# ::node	0.1.0.0.0	most	9-10
# ::node	0.1.1	pleasure	20-21
# ::node	0.1.1.0	way	24-25
# ::node	0.1.1.0.0	such	22-23
# ::node	0.1.1.0.1	small	23-24
# ::node	0.1.2	generous-41	7-8
# ::node	0.1.2.0	wise	4-5
# ::node	0.1.2.0.0	so	3-4
# ::node	0.1.2.0.1	he	1-2
# ::node	0.1.2.0.2	still	0-1
# ::node	0.1.2.1	and	6-7
# ::node	0.1.2.1.0	good	5-6
# ::node	0.2	only	14-15
# ::root	0	glad
# ::edge	and	op1	good	0.1.2.1	0.1.2.1.0	
# ::edge	and	op2	generous-41	0.1.2.1	0.1.2	
# ::edge	generous-41	ARG1	wise	0.1.2	0.1.2.0	
# ::edge	give-01	ARG0	we	0.1	0.1.0	
# ::edge	give-01	ARG1	pleasure	0.1	0.1.1	
# ::edge	give-01	manner	generous-41	0.1	0.1.2	
# ::edge	glad	degree	too	0	0.0	
# ::edge	glad	domain	give-01	0	0.1	
# ::edge	glad	mod	only	0	0.2	
# ::edge	pleasure	domain	way	0.1.1	0.1.1.0	
# ::edge	still	name	wise	0.1.2.0.2	0.1.2.0	
# ::edge	thing	poss	we	0.1.0.0	0.1.0	
# ::edge	thing	quant	most	0.1.0.0	0.1.0.0.0	
# ::edge	way	mod	small	0.1.1.0	0.1.1.0.1	
# ::edge	way	mod	such	0.1.1.0	0.1.1.0.0	
# ::edge	wise	degree	so	0.1.2.0	0.1.2.0.0	
# ::edge	wise	domain	he	0.1.2.0	0.1.2.0.1	
(g2 / glad 
      :degree (t / too) 
      :domain (g / give-01 
            :ARG0 (w2 / we 
                  :poss-of (t2 / thing 
                        :quant (m / most))) 
            :ARG1 (p / pleasure 
                  :domain (w / way 
                        :mod (s2 / such) 
                        :mod (s / small))) 
            :manner (g3 / generous-41 
                  :ARG1 (w3 / wise 
                        :degree (s3 / so) 
                        :domain (h / he) 
                        :name-of (s4 / still)) 
                  :op-of (a / and 
                        :op1 (g4 / good)))) 
      :mod (o / only))

# ::snt q2s rig is powerful and generous when measured against displacement and length
# ::tok q2s rig is powerful and generous when measured against displacement and length
# ::alignments 11-12|0.1 10-11|0 9-10|0.0.1 7-8|0.0 5-6|0.0.0 4-5|0.0.0.0 3-4|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:54.633
# ::node	0	and	10-11
# ::node	0.0	measure-01	7-8
# ::node	0.0.0	generous-41	5-6
# ::node	0.0.0.0	and	4-5
# ::node	0.0.0.0.0	powerful	3-4
# ::node	0.0.1	displacement	9-10
# ::node	0.1	length	11-12
# ::root	0	and
# ::edge	and	op1	length	0	0.1	
# ::edge	and	op1	powerful	0.0.0.0	0.0.0.0.0	
# ::edge	and	op2	generous-41	0.0.0.0	0.0.0	
# ::edge	generous-41	ARG0	measure-01	0.0.0	0.0	
# ::edge	measure-01	ARG1	displacement	0.0	0.0.1	
# ::edge	measure-01	ARG2	and	0.0	0	
(a / and 
      :ARG2-of (m / measure-01 
            :ARG0-of (g / generous-41 
                  :op-of (a2 / and 
                        :op1 (p / powerful))) 
            :ARG1 (d / displacement)) 
      :op1 (l / length))

# ::snt his bermuda project his attempt to develop tarwater as a cure for the dysentery which followed the hard irish winter of 173940 and his evident concern for his parishioners were all born of a kind and generous character
# ::tok his bermuda project his attempt to develop tarwater as a cure for the dysentery which followed the hard irish winter of 173940 and his evident concern for his parishioners were all born of a kind and generous character
# ::alignments 37-38|0.0.1.0.0.2.0 36-37|0.0.1.0.0.2 35-36|0.0.1.0.0 34-35|0.0.1.0.0.1 31-32|0.0.1.0 30-31|0.0.1.0.0.0 25-26|0.0 24-25|0 22-23|0.0.1 21-22|0.0.0.2+0.0.0.1+0.0.0.0+0.0.0 19-20|0.0.1.0.1.0.2.0 17-18|0.0.1.0.1.0.0 15-16|0.0.1.0.1.0.2 10-11|0.0.1.0.1 6-7|0.0.1.0.1.0 4-5|0.0.1.0.1.0.1 2-3|0.0.1.0.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:55.161
# ::node	0	evident	24-25
# ::node	0.0	concern-01	25-26
# ::node	0.0.0	date-entity	21-22
# ::node	0.0.0.0	40	21-22
# ::node	0.0.0.1	39	21-22
# ::node	0.0.0.2	17	21-22
# ::node	0.0.1	and	22-23
# ::node	0.0.1.0	bear-02	31-32
# ::node	0.0.1.0.0	and	35-36
# ::node	0.0.1.0.0.0	all	30-31
# ::node	0.0.1.0.0.1	kind	34-35
# ::node	0.0.1.0.0.2	generous-41	36-37
# ::node	0.0.1.0.0.2.0	character	37-38
# ::node	0.0.1.0.1	cure-01	10-11
# ::node	0.0.1.0.1.0	develop-02	6-7
# ::node	0.0.1.0.1.0.0	hard	17-18
# ::node	0.0.1.0.1.0.1	attempt-01	4-5
# ::node	0.0.1.0.1.0.1.0	project	2-3
# ::node	0.0.1.0.1.0.2	follow-01	15-16
# ::node	0.0.1.0.1.0.2.0	winter	19-20
# ::root	0	evident
(e / evident 
      :mod-of (c2 / concern-01 
            :ARG1 (d / date-entity 
                  :day 40 
                  :month 39 
                  :year 17) 
            :op-of (a3 / and 
                  :ARG1-of (b / bear-02 
                        :ARG0 (a / and 
                              :mod (a2 / all) 
                              :op1 (k / kind) 
                              :op2 (g / generous-41 
                                    :ARG1 (c / character))) 
                        :ARG1-of (c3 / cure-01 
                              :ARG3-of (d2 / develop-02 
                                    :ARG1 (h / hard) 
                                    :ARG1-of (a4 / attempt-01 
                                          :part-of (p / project)) 
                                    :manner (f / follow-01 
                                          :ARG1 (w / winter))))))))

# ::snt at least there are no additives and the generous tasting establishes the quality of the beer
# ::tok at least there are no additives and the generous tasting establishes the quality of the beer
# ::alignments 15-16|0.1.1.0 12-13|0.1.1 10-11|0.1 8-9|0 6-7|0.1.0 4-5|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:55.185
# ::node	0	generous-41	8-9
# ::node	0.0	-	4-5
# ::node	0.1	establish-01	10-11
# ::node	0.1.0	and	6-7
# ::node	0.1.1	quality	12-13
# ::node	0.1.1.0	beer	15-16
# ::root	0	generous-41
# ::edge	establish-01	ARG0	and	0.1	0.1.0	
# ::edge	establish-01	ARG1	quality	0.1	0.1.1	
# ::edge	establish-01	mod	generous-41	0.1	0	
# ::edge	generous-41	ARG1	-	0	0.0	
# ::edge	quality	poss	beer	0.1.1	0.1.1.0	
(g / generous-41 
      :ARG1 (- / -) 
      :mod-of (e / establish-01 
            :ARG0 (a / and) 
            :ARG1 (q / quality 
                  :poss (b / beer))))

# ::snt   the standard unit is half a pint or a single spirit measure by my standard glass poured with a generous hand would contain four or five single measures
# ::tok the standard unit is half a pint or a single spirit measure by my standard glass poured with a generous hand would contain four or five single measures
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:55.186
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt hamburgs local government had seen the results of generous film funding in berlin the city became attractive to filmmakers work came pouring in and attractive or interesting images of berlin were sent around the world
# ::tok hamburgs local government had seen the results of generous film funding in berlin the city became attractive to filmmakers work came pouring in and attractive or interesting images of berlin were sent around the world
# ::alignments 34-35|0.0.1.1.0 32-33|0.0.1.1 31-32|0.0.1 27-28|0.0.1.0 26-27|0.0.1.0.0.1 25-26|0.0.1.0.0 24-25|0.0.1.0.0.0 23-24|0.0 21-22|0 16-17|0.0.0.0.0 15-16|0.0.0 14-15|0.0.0.0 10-11|0.0.0.0.0.0 9-10|0.0.0.0.0.0.0 8-9|0.0.0.0.0.0.1 6-7|0.0.0.0.0.0.2 4-5|0.0.0.0.0.0.2.0 1-2|0.0.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:55.829
# ::node	0	pour-01	21-22
# ::node	0.0	and	23-24
# ::node	0.0.0	become-01	15-16
# ::node	0.0.0.0	city	14-15
# ::node	0.0.0.0.0	attract-01	16-17
# ::node	0.0.0.0.0.0	fund-01	10-11
# ::node	0.0.0.0.0.0.0	film	9-10
# ::node	0.0.0.0.0.0.1	generous-41	8-9
# ::node	0.0.0.0.0.0.2	result-01	6-7
# ::node	0.0.0.0.0.0.2.0	see-01	4-5
# ::node	0.0.1	send-01	31-32
# ::node	0.0.1.0	image	27-28
# ::node	0.0.1.0.0	or	25-26
# ::node	0.0.1.0.0.0	attract-01	24-25
# ::node	0.0.1.0.0.0.0	local	1-2
# ::node	0.0.1.0.0.1	interesting	26-27
# ::node	0.0.1.1	around	32-33
# ::node	0.0.1.1.0	world	34-35
# ::root	0	pour-01
(p / pour-01 
      :op-of (a3 / and 
            :ARG1-of (b / become-01 
                  :ARG0 (c / city 
                        :ARG0-of (a4 / attract-01 
                              :ARG2-of (f / fund-01 
                                    :ARG0 (f2 / film) 
                                    :ARG1-of (g / generous-41) 
                                    :ARG1-of (r / result-01 
                                          :ARG1-of (s2 / see-01)))))) 
            :op1 (s / send-01 
                  :ARG1 (i / image 
                        :op-of (o / or 
                              :op1 (a2 / attract-01 
                                    :ARG1 (l / local)) 
                              :op2 (i2 / interesting))) 
                  :ARG2 (a / around 
                        :op1 (w / world)))))

# ::snt   chamberlain was more generous than asquith had been in december 1916 and agreed to serve under the man who had supplanted him
# ::tok chamberlain was more generous than asquith had been in december 1916 and agreed to serve under the man who had supplanted him
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:55.830
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt ian smales gave the home side brief hope with an eighthminute penalty but two minutes later when kurt sherlock gave morvin edwards a generous overlap for the kiwis opening try there was little danger of the final score being anything like as close
# ::tok ian smales gave the home side brief hope with an eighthminute penalty but two minutes later when kurt sherlock gave morvin edwards a generous overlap for the kiwis opening try there was little danger of the final score being anything like as close
# ::alignments 39-40|0.0.2.0.0 37-38|0.0.2.0 36-37|0.0.2.0.1 33-34|0.0.1 32-33|0.0.1.0 29-30|0.0 28-29|0.0.0 24-25|0.0.2 23-24|0.0.2.1 15-16|0.2 14-15|0.2.0.1+0.2.0 13-14|0.2.0.0 12-13|0 11-12|0.1.0 7-8|0.1 6-7|0.1.1 5-6|0.1.2 4-5|0.1.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:56.270
# ::node	0	contrast-01	12-13
# ::node	0.0	try-01	29-30
# ::node	0.0.0	open-01	28-29
# ::node	0.0.1	danger	33-34
# ::node	0.0.1.0	little	32-33
# ::node	0.0.2	overlap-01	24-25
# ::node	0.0.2.0	score-01	37-38
# ::node	0.0.2.0.0	anything	39-40
# ::node	0.0.2.0.1	final	36-37
# ::node	0.0.2.1	generous-41	23-24
# ::node	0.1	hope-01	7-8
# ::node	0.1.0	penalize-01	11-12
# ::node	0.1.1	brief	6-7
# ::node	0.1.2	side	5-6
# ::node	0.1.2.0	home	4-5
# ::node	0.2	late	15-16
# ::node	0.2.0	temporal-quantity	14-15
# ::node	0.2.0.0	2	13-14
# ::node	0.2.0.1	minute	14-15
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	try-01	0	0.0	
# ::edge	contrast-01	ARG2	hope-01	0	0.1	
# ::edge	contrast-01	mod	late	0	0.2	
# ::edge	danger	mod	little	0.0.1	0.0.1.0	
# ::edge	generous-41	ARG1	overlap-01	0.0.2.1	0.0.2	
# ::edge	hope-01	mod	brief	0.1	0.1.1	
# ::edge	hope-01	mod	side	0.1	0.1.2	
# ::edge	late	quant	temporal-quantity	0.2	0.2.0	
# ::edge	overlap-01	ARG1	score-01	0.0.2	0.0.2.0	
# ::edge	overlap-01	purpose	try-01	0.0.2	0.0	
# ::edge	penalize-01	ARG1	hope-01	0.1.0	0.1	
# ::edge	score-01	ARG1	anything	0.0.2.0	0.0.2.0.0	
# ::edge	score-01	mod	final	0.0.2.0	0.0.2.0.1	
# ::edge	side	mod	home	0.1.2	0.1.2.0	
# ::edge	temporal-quantity	quant	2	0.2.0	0.2.0.0	
# ::edge	temporal-quantity	unit	minute	0.2.0	0.2.0.1	
# ::edge	try-01	ARG0	open-01	0.0	0.0.0	
# ::edge	try-01	ARG1	danger	0.0	0.0.1	
(c / contrast-01 
      :ARG1 (t / try-01 
            :ARG0 (o / open-01) 
            :ARG1 (d / danger 
                  :mod (l / little)) 
            :purpose-of (o2 / overlap-01 
                  :ARG1 (s / score-01 
                        :ARG1 (a / anything) 
                        :mod (f / final)) 
                  :ARG1-of (g / generous-41))) 
      :ARG2 (h / hope-01 
            :ARG1-of (p / penalize-01) 
            :mod (b / brief) 
            :mod (s2 / side 
                  :mod (h2 / home))) 
      :mod (l2 / late 
            :quant (t2 / temporal-quantity 
                  :quant 2 
                  :unit (m / minute))))

# ::snt how many unlucky convicts lack the services of a generous counsel
# ::tok how many unlucky convicts lack the services of a generous counsel
# ::alignments 10-11|0.1.0 9-10|0.1.0.0 6-7|0.1 4-5|0 3-4|0.0.0+0.0 1-2|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:56.303
# ::node	0	lack-01	4-5
# ::node	0.0	person	3-4
# ::node	0.0.0	convict-01	3-4
# ::node	0.1	service	6-7
# ::node	0.1.0	counsel-01	10-11
# ::node	0.1.0.0	generous-41	9-10
# ::node	0.2	many	1-2
# ::root	0	lack-01
# ::edge	convict-01	ARG1	person	0.0.0	0.0	
# ::edge	generous-41	ARG1	counsel-01	0.1.0.0	0.1.0	
# ::edge	lack-01	ARG0	person	0	0.0	
# ::edge	lack-01	ARG1	service	0	0.1	
# ::edge	lack-01	ARG4	many	0	0.2	
# ::edge	service	poss	counsel-01	0.1	0.1.0	
(l / lack-01 
      :ARG0 (p / person 
            :ARG1-of (c2 / convict-01)) 
      :ARG1 (s / service 
            :poss (c / counsel-01 
                  :ARG1-of (g / generous-41))) 
      :ARG4 (m / many))

# ::snt these performances also function as preliminary rounds for the french bagnolet competition where our own choreographers may hope to win a few crumbs from the generous french table
# ::tok these performances also function as preliminary rounds for the french bagnolet competition where our own choreographers may hope to win a few crumbs from the generous french table
# ::alignments 27-28|0.0 26-27|0.0.1.0.0+0.0.1.0+0.0.1 25-26|0 21-22|0.0.0.0.1 19-20|0.0.0 17-18|0.0.0.1 16-17|0.0.0.1.0.0+0.0.0.1.0 11-12|0.0.0.0.0.2 9-10|0.0.0.0.0.2.0.0.0+0.0.0.0.0.2.0.0+0.0.0.0.0.2.0 6-7|0.0.0.0.0.0 5-6|0.0.0.0.0.0.0 3-4|0.0.0.0.0 2-3|0.0.0.0.0.1 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:50:56.740
# ::node	0	generous-41	25-26
# ::node	0.0	table	27-28
# ::node	0.0.0	win-01	19-20
# ::node	0.0.0.0	perform-01	1-2
# ::node	0.0.0.0.0	function-01	3-4
# ::node	0.0.0.0.0.0	round	6-7
# ::node	0.0.0.0.0.0.0	preliminary	5-6
# ::node	0.0.0.0.0.1	also	2-3
# ::node	0.0.0.0.0.2	compete-01	11-12
# ::node	0.0.0.0.0.2.0	country	9-10
# ::node	0.0.0.0.0.2.0.0	name	9-10
# ::node	0.0.0.0.0.2.0.0.0	"France"	9-10
# ::node	0.0.0.0.1	few	21-22
# ::node	0.0.0.1	hope-01	17-18
# ::node	0.0.0.1.0	date-entity	16-17
# ::node	0.0.0.1.0.0	5	16-17
# ::node	0.0.1	country	26-27
# ::node	0.0.1.0	name	26-27
# ::node	0.0.1.0.0	"France"	26-27
# ::root	0	generous-41
# ::edge	compete-01	ARG1	country	0.0.0.0.0.2	0.0.0.0.0.2.0	
# ::edge	country	name	name	0.0.0.0.0.2.0	0.0.0.0.0.2.0.0	
# ::edge	country	name	name	0.0.1	0.0.1.0	
# ::edge	date-entity	month	5	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	function-01	ARG0	perform-01	0.0.0.0.0	0.0.0.0	
# ::edge	function-01	ARG1	round	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	function-01	mod	also	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	function-01	purpose	compete-01	0.0.0.0.0	0.0.0.0.0.2	
# ::edge	generous-41	ARG1	table	0	0.0	
# ::edge	hope-01	ARG1	win-01	0.0.0.1	0.0.0	
# ::edge	hope-01	mod	date-entity	0.0.0.1	0.0.0.1.0	
# ::edge	name	op1	"France"	0.0.0.0.0.2.0.0	0.0.0.0.0.2.0.0.0	
# ::edge	name	op1	"France"	0.0.1.0	0.0.1.0.0	
# ::edge	perform-01	ARG1	few	0.0.0.0	0.0.0.0.1	
# ::edge	round	mod	preliminary	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	table	mod	country	0.0	0.0.1	
# ::edge	win-01	ARG0	perform-01	0.0.0	0.0.0.0	
# ::edge	win-01	ARG3	table	0.0.0	0.0	
(g / generous-41 
      :ARG1 (t / table 
            :ARG3-of (w / win-01 
                  :ARG0 (p2 / perform-01 
                        :ARG0-of (f2 / function-01 
                              :ARG1 (r / round 
                                    :mod (p / preliminary)) 
                              :mod (a / also) 
                              :purpose (c2 / compete-01 
                                    :ARG1 (c3 / country 
                                          :name (n2 / name 
                                                :op1 "France")))) 
                        :ARG1 (f / few)) 
                  :ARG1-of (h / hope-01 
                        :mod (d / date-entity 
                              :month 5))) 
            :mod (c / country 
                  :name (n / name 
                        :op1 "France"))))

# ::snt 80 an hour rising to twothirds the average income tax levels of no higher than 50 per cent at the top down to less than 20 per cent at the bottom a significant and generous increase in child benefit over the lifetime of the parliament to tax gifts and inheritance at the point of receipt to crack down on tax loopholes raise pensions immediately by 5 for single people and 8 for couples to introduce a new disability benefit to simplify income support rules to keep mortgage interest tax relief at a single rate equivalent to the basic rate relief which we inherit
# ::tok 80 an hour rising to twothirds the average income tax levels of no higher than 50 per cent at the top down to less than 20 per cent at the bottom a significant and generous increase in child benefit over the lifetime of the parliament to tax gifts and inheritance at the point of receipt to crack down on tax loopholes raise pensions immediately by 5 for single people and 8 for couples to introduce a new disability benefit to simplify income support rules to keep mortgage interest tax relief at a single rate equivalent to the basic rate relief which we inherit
# ::alignments 101-102|0.0.1.0.0 99-100|0.0.1.0 98-99|0.0.1.0.2 97-98|0.0.1.0.3 94-95|0.0.1.0.1.0 93-94|0.0.1.0.1.0.1 92-93|0.0.1.0.1.0.0 89-90|0.0.1.0.1 88-89|0.0.1.0.1.1 87-88|0.0.1.0.1.1.1 86-87|0.0.1.0.1.1.1.0 83-84|0 82-83|0.1 81-82|0.1.0 80-81|0.0 78-79|0.0.1 77-78|0.0.0 76-77|0.0.1.1 74-75|0.0.2 72-73|0.0.2.0 70-71|0.0.2.1.0.3.0 69-70|0.0.2.1 67-68|0.0.1.0.1.1.0 65-66|0.0.1.0.1.1.1.0.0 63-64|0.0.2.2.1 62-63|0.0.2.2.0 61-62|0.0.2.2 59-60|0.0.2.1.0.3.1.2.0 57-58|0.0.2.1.0.3.1.2 56-57|0.0.2.1.0.3.1 54-55|0.0.2.1.0.3.1.0 52-53|0.0.2.1.0.3.1.1 49-50|0.0.2.1.0.3 48-49|0.0.2.1.0 47-48|0.0.2.1.0.2 46-47|0.0.2.1.0.2.0 44-45|0.0.2.1.0.1.1.0+0.0.2.1.0.1.1+0.0.2.1.0.1 41-42|0.0.2.1.0.1.0 38-39|0.0.2.1.0.1.0.0 37-38|0.0.2.1.0.1.0.0.1.2.1 35-36|0.0.2.1.0.1.0.0.1.2 34-35|0.0.2.1.0.1.0.0.1.2.2 33-34|0.0.2.1.0.1.0.0.1 32-33|0.0.2.1.0.1.0.0.1.1 30-31|0.0.2.1.0.0.1.0.1 27-28|0.0.2.1.0.1.0.0.1.0.0+0.0.2.1.0.1.0.0.1.0 25-26|0.0.2.1.0.2.0.1 23-24|0.0.2.1.0.2.0.0 21-22|0.0.2.1.0.1.0.0.1.2.2.0 20-21|0.0.2.1.0.1.0.0.1.2.0.0 17-18|0.0.2.1.0.1.0.0.1.2.3.0+0.0.2.1.0.1.0.0.1.2.3 15-16|0.0.2.1.0.1.0.0.0 13-14|0.0.2.1.0.1.0.0.1.2.0 12-13|0.0.2.1.0.1.0.0.1.2.0.1 10-11|0.0.2.1.0.0.1 9-10|0.0.2.1.0.0.1.0 8-9|0.0.2.1.0.0.1.0.2 3-4|0.0.2.1.0.0 2-3|0.0.2.1.0.0.0.0+0.0.2.1.0.0.0 0-1|0.0.2.1.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:01.538
# ::node	0	rule	83-84
# ::node	0.0	simplify-01	80-81
# ::node	0.0.0	disability	77-78
# ::node	0.0.1	benefit-01	78-79
# ::node	0.0.1.0	relieve-01	99-100
# ::node	0.0.1.0.0	we	101-102
# ::node	0.0.1.0.1	relieve-01	89-90
# ::node	0.0.1.0.1.0	equivalent	94-95
# ::node	0.0.1.0.1.0.0	single	92-93
# ::node	0.0.1.0.1.0.1	rate	93-94
# ::node	0.0.1.0.1.1	tax-01	88-89
# ::node	0.0.1.0.1.1.0	single	67-68
# ::node	0.0.1.0.1.1.1	interest-01	87-88
# ::node	0.0.1.0.1.1.1.0	mortgage-01	86-87
# ::node	0.0.1.0.1.1.1.0.0	5	65-66
# ::node	0.0.1.0.2	rate	98-99
# ::node	0.0.1.0.3	basic	97-98
# ::node	0.0.1.1	new	76-77
# ::node	0.0.2	introduce-02	74-75
# ::node	0.0.2.0	couple	72-73
# ::node	0.0.2.1	and	69-70
# ::node	0.0.2.1.0	and	48-49
# ::node	0.0.2.1.0.0	rise-01	3-4
# ::node	0.0.2.1.0.0.0	temporal-quantity	2-3
# ::node	0.0.2.1.0.0.0.0	hour	2-3
# ::node	0.0.2.1.0.0.1	level	10-11
# ::node	0.0.2.1.0.0.1.0	tax-01	9-10
# ::node	0.0.2.1.0.0.1.0.0	80	0-1
# ::node	0.0.2.1.0.0.1.0.1	bottom	30-31
# ::node	0.0.2.1.0.0.1.0.2	income	8-9
# ::node	0.0.2.1.0.1	government-organization	44-45
# ::node	0.0.2.1.0.1.0	lifetime	41-42
# ::node	0.0.2.1.0.1.0.0	benefit-01	38-39
# ::node	0.0.2.1.0.1.0.0.0	50	15-16
# ::node	0.0.2.1.0.1.0.0.1	and	33-34
# ::node	0.0.2.1.0.1.0.0.1.0	monetary-quantity	27-28
# ::node	0.0.2.1.0.1.0.0.1.0.0	cent	27-28
# ::node	0.0.2.1.0.1.0.0.1.1	significant	32-33
# ::node	0.0.2.1.0.1.0.0.1.2	increase-01	35-36
# ::node	0.0.2.1.0.1.0.0.1.2.0	high	13-14
# ::node	0.0.2.1.0.1.0.0.1.2.0.0	top	20-21
# ::node	0.0.2.1.0.1.0.0.1.2.0.1	-	12-13
# ::node	0.0.2.1.0.1.0.0.1.2.1	child	37-38
# ::node	0.0.2.1.0.1.0.0.1.2.2	generous-41	34-35
# ::node	0.0.2.1.0.1.0.0.1.2.2.0	down	21-22
# ::node	0.0.2.1.0.1.0.0.1.2.3	monetary-quantity	17-18
# ::node	0.0.2.1.0.1.0.0.1.2.3.0	cent	17-18
# ::node	0.0.2.1.0.1.1	name	44-45
# ::node	0.0.2.1.0.1.1.0	"Parliament"	44-45
# ::node	0.0.2.1.0.2	gift-01	47-48
# ::node	0.0.2.1.0.2.0	tax-01	46-47
# ::node	0.0.2.1.0.2.0.0	less	23-24
# ::node	0.0.2.1.0.2.0.1	20	25-26
# ::node	0.0.2.1.0.3	inherit-01	49-50
# ::node	0.0.2.1.0.3.0	8	70-71
# ::node	0.0.2.1.0.3.1	crack-02	56-57
# ::node	0.0.2.1.0.3.1.0	receipt	54-55
# ::node	0.0.2.1.0.3.1.1	point	52-53
# ::node	0.0.2.1.0.3.1.2	down	57-58
# ::node	0.0.2.1.0.3.1.2.0	tax-01	59-60
# ::node	0.0.2.2	raise-01	61-62
# ::node	0.0.2.2.0	pension	62-63
# ::node	0.0.2.2.1	immediate	63-64
# ::node	0.1	support-01	82-83
# ::node	0.1.0	income	81-82
# ::root	0	rule
# ::edge	and	op1	and	0.0.2.1	0.0.2.1.0	
# ::edge	and	op1	monetary-quantity	0.0.2.1.0.1.0.0.1	0.0.2.1.0.1.0.0.1.0	
# ::edge	and	op1	rise-01	0.0.2.1.0	0.0.2.1.0.0	
# ::edge	and	op2	government-organization	0.0.2.1.0	0.0.2.1.0.1	
# ::edge	and	op2	significant	0.0.2.1.0.1.0.0.1	0.0.2.1.0.1.0.0.1.1	
# ::edge	and	op3	gift-01	0.0.2.1.0	0.0.2.1.0.2	
# ::edge	and	op3	increase-01	0.0.2.1.0.1.0.0.1	0.0.2.1.0.1.0.0.1.2	
# ::edge	and	op4	benefit-01	0.0.2.1.0.1.0.0.1	0.0.2.1.0.1.0.0	
# ::edge	and	op4	inherit-01	0.0.2.1.0	0.0.2.1.0.3	
# ::edge	benefit-01	ARG0	lifetime	0.0.2.1.0.1.0.0	0.0.2.1.0.1.0	
# ::edge	benefit-01	ARG1	50	0.0.2.1.0.1.0.0	0.0.2.1.0.1.0.0.0	
# ::edge	benefit-01	ARG1	simplify-01	0.0.1	0.0	
# ::edge	benefit-01	mod	new	0.0.1	0.0.1.1	
# ::edge	crack-02	ARG0	receipt	0.0.2.1.0.3.1	0.0.2.1.0.3.1.0	
# ::edge	crack-02	ARG1	point	0.0.2.1.0.3.1	0.0.2.1.0.3.1.1	
# ::edge	crack-02	direction	down	0.0.2.1.0.3.1	0.0.2.1.0.3.1.2	
# ::edge	down	op1	tax-01	0.0.2.1.0.3.1.2	0.0.2.1.0.3.1.2.0	
# ::edge	equivalent	mod	rate	0.0.1.0.1.0	0.0.1.0.1.0.1	
# ::edge	equivalent	mod	single	0.0.1.0.1.0	0.0.1.0.1.0.0	
# ::edge	generous-41	ARG0	down	0.0.2.1.0.1.0.0.1.2.2	0.0.2.1.0.1.0.0.1.2.2.0	
# ::edge	generous-41	ARG1	increase-01	0.0.2.1.0.1.0.0.1.2.2	0.0.2.1.0.1.0.0.1.2	
# ::edge	gift-01	ARG1	tax-01	0.0.2.1.0.2	0.0.2.1.0.2.0	
# ::edge	government-organization	name	name	0.0.2.1.0.1	0.0.2.1.0.1.1	
# ::edge	high	domain	top	0.0.2.1.0.1.0.0.1.2.0	0.0.2.1.0.1.0.0.1.2.0.0	
# ::edge	high	mod	-	0.0.2.1.0.1.0.0.1.2.0	0.0.2.1.0.1.0.0.1.2.0.1	
# ::edge	increase-01	ARG0	high	0.0.2.1.0.1.0.0.1.2	0.0.2.1.0.1.0.0.1.2.0	
# ::edge	increase-01	ARG1	child	0.0.2.1.0.1.0.0.1.2	0.0.2.1.0.1.0.0.1.2.1	
# ::edge	increase-01	ARG4	monetary-quantity	0.0.2.1.0.1.0.0.1.2	0.0.2.1.0.1.0.0.1.2.3	
# ::edge	inherit-01	ARG1	8	0.0.2.1.0.3	0.0.2.1.0.3.0	
# ::edge	inherit-01	purpose	crack-02	0.0.2.1.0.3	0.0.2.1.0.3.1	
# ::edge	interest-01	ARG1	mortgage-01	0.0.1.0.1.1.1	0.0.1.0.1.1.1.0	
# ::edge	introduce-02	ARG0	couple	0.0.2	0.0.2.0	
# ::edge	introduce-02	ARG1	and	0.0.2	0.0.2.1	
# ::edge	introduce-02	purpose	simplify-01	0.0.2	0.0	
# ::edge	level	mod	tax-01	0.0.2.1.0.0.1	0.0.2.1.0.0.1.0	
# ::edge	lifetime	location	government-organization	0.0.2.1.0.1.0	0.0.2.1.0.1	
# ::edge	monetary-quantity	unit	cent	0.0.2.1.0.1.0.0.1.0	0.0.2.1.0.1.0.0.1.0.0	
# ::edge	monetary-quantity	unit	cent	0.0.2.1.0.1.0.0.1.2.3	0.0.2.1.0.1.0.0.1.2.3.0	
# ::edge	mortgage-01	ARG0	5	0.0.1.0.1.1.1.0	0.0.1.0.1.1.1.0.0	
# ::edge	name	op1	"Parliament"	0.0.2.1.0.1.1	0.0.2.1.0.1.1.0	
# ::edge	raise-01	ARG1	pension	0.0.2.2	0.0.2.2.0	
# ::edge	raise-01	ARG2	immediate	0.0.2.2	0.0.2.2.1	
# ::edge	raise-01	purpose	introduce-02	0.0.2.2	0.0.2	
# ::edge	relieve-01	ARG0	equivalent	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	relieve-01	ARG0	we	0.0.1.0	0.0.1.0.0	
# ::edge	relieve-01	ARG1	benefit-01	0.0.1.0	0.0.1	
# ::edge	relieve-01	ARG2	relieve-01	0.0.1.0.1	0.0.1.0	
# ::edge	relieve-01	ARG3	rate	0.0.1.0	0.0.1.0.2	
# ::edge	relieve-01	mod	basic	0.0.1.0	0.0.1.0.3	
# ::edge	rise-01	ARG0	temporal-quantity	0.0.2.1.0.0	0.0.2.1.0.0.0	
# ::edge	rise-01	ARG1	level	0.0.2.1.0.0	0.0.2.1.0.0.1	
# ::edge	rule	mod	support-01	0	0.1	
# ::edge	simplify-01	ARG0	disability	0.0	0.0.0	
# ::edge	simplify-01	ARG1	rule	0.0	0	
# ::edge	support-01	ARG0	income	0.1	0.1.0	
# ::edge	tax-01	ARG0	80	0.0.2.1.0.0.1.0	0.0.2.1.0.0.1.0.0	
# ::edge	tax-01	ARG0	less	0.0.2.1.0.2.0	0.0.2.1.0.2.0.0	
# ::edge	tax-01	ARG0	single	0.0.1.0.1.1	0.0.1.0.1.1.0	
# ::edge	tax-01	ARG1	20	0.0.2.1.0.2.0	0.0.2.1.0.2.0.1	
# ::edge	tax-01	ARG1	bottom	0.0.2.1.0.0.1.0	0.0.2.1.0.0.1.0.1	
# ::edge	tax-01	ARG1	relieve-01	0.0.1.0.1.1	0.0.1.0.1	
# ::edge	tax-01	ARG3	income	0.0.2.1.0.0.1.0	0.0.2.1.0.0.1.0.2	
# ::edge	tax-01	ARG3	interest-01	0.0.1.0.1.1	0.0.1.0.1.1.1	
# ::edge	temporal-quantity	unit	hour	0.0.2.1.0.0.0	0.0.2.1.0.0.0.0	
(r5 / rule 
      :ARG1-of (s3 / simplify-01 
            :ARG0 (d / disability) 
            :ARG1-of (b2 / benefit-01 
                  :ARG1-of (r / relieve-01 
                        :ARG0 (w / we) 
                        :ARG2-of (r4 / relieve-01 
                              :ARG0 (e / equivalent 
                                    :mod (s / single) 
                                    :mod (r3 / rate)) 
                              :ARG1-of (t / tax-01 
                                    :ARG0 (s4 / single) 
                                    :ARG3 (i / interest-01 
                                          :ARG1 (m / mortgage-01 
                                                :ARG0 5)))) 
                        :ARG3 (r2 / rate) 
                        :mod (b / basic)) 
                  :mod (n / new)) 
            :purpose-of (i3 / introduce-02 
                  :ARG0 (c / couple) 
                  :ARG1 (a / and 
                        :op1 (a2 / and 
                              :op1 (r8 / rise-01 
                                    :ARG0 (t6 / temporal-quantity 
                                          :unit (h2 / hour)) 
                                    :ARG1 (l3 / level 
                                          :mod (t5 / tax-01 
                                                :ARG0 80 
                                                :ARG1 (b4 / bottom) 
                                                :ARG3 (i7 / income)))) 
                              :op2 (g2 / government-organization 
                                    :location-of (l / lifetime 
                                          :ARG0-of (b3 / benefit-01 
                                                :ARG1 50 
                                                :op-of (a3 / and 
                                                      :op1 (m2 / monetary-quantity 
                                                            :unit (c4 / cent)) 
                                                      :op2 (s5 / significant) 
                                                      :op3 (i6 / increase-01 
                                                            :ARG0 (h / high 
                                                                  :domain (t4 / top) 
                                                                  :mod (- / -)) 
                                                            :ARG1 (c3 / child) 
                                                            :ARG1-of (g3 / generous-41 
                                                                  :ARG0 (d3 / down)) 
                                                            :ARG4 (m3 / monetary-quantity 
                                                                  :unit (c5 / cent)))))) 
                                    :name (n2 / name 
                                          :op1 "Parliament")) 
                              :op3 (g / gift-01 
                                    :ARG1 (t3 / tax-01 
                                          :ARG0 (l2 / less) 
                                          :ARG1 20)) 
                              :op4 (i5 / inherit-01 
                                    :ARG1 8 
                                    :purpose (c2 / crack-02 
                                          :ARG0 (r7 / receipt) 
                                          :ARG1 (p2 / point) 
                                          :direction (d2 / down 
                                                :op1 (t2 / tax-01)))))) 
                  :purpose-of (r6 / raise-01 
                        :ARG1 (p / pension) 
                        :ARG2 (i4 / immediate)))) 
      :mod (s2 / support-01 
            :ARG0 (i2 / income)))

# ::snt he said that the government would hold talks with the trust to ensure that the fund had adequate resources both to meet its existing commitments and to give more generous help to families in particular need
# ::tok he said that the government would hold talks with the trust to ensure that the fund had adequate resources both to meet its existing commitments and to give more generous help to families in particular need
# ::alignments 35-36|0.1.2.2 34-35|0.1.0.0.0 32-33|0.1.2.1 30-31|0.1.2.0 29-30|0.1.2.0.0 27-28|0.1.2 25-26|0.1 24-25|0.1.1 23-24|0.1.1.1 19-20|0.1.1.0 18-19|0.1.0 17-18|0.1.0.1 15-16|0.1.0.0.1.0 12-13|0.1.0.0 10-11|0.1.0.0.1 7-8|0.1.0.0.1.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:01.821
# ::node	0	say-01	1-2
# ::node	0.0	he	0-1
# ::node	0.1	and	25-26
# ::node	0.1.0	resource	18-19
# ::node	0.1.0.0	ensure-01	12-13
# ::node	0.1.0.0.0	particular	34-35
# ::node	0.1.0.0.1	trust-01	10-11
# ::node	0.1.0.0.1.0	fund-01	15-16
# ::node	0.1.0.0.1.1	talk-01	7-8
# ::node	0.1.0.1	adequate	17-18
# ::node	0.1.1	commit-01	24-25
# ::node	0.1.1.0	both	19-20
# ::node	0.1.1.1	exist-01	23-24
# ::node	0.1.2	give-01	27-28
# ::node	0.1.2.0	help-01	30-31
# ::node	0.1.2.0.0	generous-41	29-30
# ::node	0.1.2.1	family	32-33
# ::node	0.1.2.2	need-01	35-36
# ::root	0	say-01
# ::edge	and	instrument	resource	0.1	0.1.0	
# ::edge	and	op1	commit-01	0.1	0.1.1	
# ::edge	and	op2	give-01	0.1	0.1.2	
# ::edge	commit-01	ARG1	both	0.1.1	0.1.1.0	
# ::edge	ensure-01	ARG0	particular	0.1.0.0	0.1.0.0.0	
# ::edge	ensure-01	ARG1	resource	0.1.0.0	0.1.0	
# ::edge	exist-01	ARG1	commit-01	0.1.1.1	0.1.1	
# ::edge	fund-01	ARG1	trust-01	0.1.0.0.1.0	0.1.0.0.1	
# ::edge	generous-41	ARG1	help-01	0.1.2.0.0	0.1.2.0	
# ::edge	give-01	ARG1	help-01	0.1.2	0.1.2.0	
# ::edge	give-01	ARG2	family	0.1.2	0.1.2.1	
# ::edge	give-01	manner	need-01	0.1.2	0.1.2.2	
# ::edge	resource	mod	adequate	0.1.0	0.1.0.1	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	and	0	0.1	
# ::edge	talk-01	ARG2	trust-01	0.1.0.0.1.1	0.1.0.0.1	
# ::edge	trust-01	ARG1	ensure-01	0.1.0.0.1	0.1.0.0	
(s / say-01 
      :ARG0 (h2 / he) 
      :ARG1 (a / and 
            :instrument (r / resource 
                  :ARG1-of (e2 / ensure-01 
                        :ARG0 (p / particular) 
                        :ARG1-of (t / trust-01 
                              :ARG1-of (f2 / fund-01) 
                              :ARG2-of (t2 / talk-01))) 
                  :mod (a2 / adequate)) 
            :op1 (c / commit-01 
                  :ARG1 (b / both) 
                  :ARG1-of (e / exist-01)) 
            :op2 (g2 / give-01 
                  :ARG1 (h / help-01 
                        :ARG1-of (g / generous-41)) 
                  :ARG2 (f / family) 
                  :manner (n / need-01))))

# ::snt but double payment specially developed for readers digest by  guardian royal exchange promises you fullcover life insurance  and a generous cash sum dash
# ::tok but double payment specially developed for readers digest by guardian royal exchange promises you fullcover life insurance and a generous cash sum dash
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:01.822
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the english national ballets 32 female dancers have a generous allocation of 20 pairs per month and an annual bill of over 45000
# ::tok the english national ballets 32 female dancers have a generous allocation of 20 pairs per month and an annual bill of over 45000
# ::alignments 19-20|0.2 16-17|0 15-16|0.0.1.0.0+0.0.1.0 12-13|0.0.2 10-11|0.0 9-10|0.0.1 6-7|0.0.0.0+0.0.0 5-6|0.0.0.1 4-5|0.0.0.2 2-3|0.1 1-2|0.1.0.0.0+0.1.0.0+0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:01.918
# ::node	0	and	16-17
# ::node	0.0	allocate-01	10-11
# ::node	0.0.0	person	6-7
# ::node	0.0.0.0	dance-01	6-7
# ::node	0.0.0.1	female	5-6
# ::node	0.0.0.2	32	4-5
# ::node	0.0.1	generous-41	9-10
# ::node	0.0.1.0	temporal-quantity	15-16
# ::node	0.0.1.0.0	month	15-16
# ::node	0.0.2	20	12-13
# ::node	0.1	nation	2-3
# ::node	0.1.0	language	1-2
# ::node	0.1.0.0	name	1-2
# ::node	0.1.0.0.0	"English"	1-2
# ::node	0.2	bill	19-20
# ::root	0	and
# ::edge	allocate-01	ARG0	person	0.0	0.0.0	
# ::edge	allocate-01	ARG2	and	0.0	0	
# ::edge	allocate-01	time	20	0.0	0.0.2	
# ::edge	and	op1	bill	0	0.2	
# ::edge	dance-01	ARG0	person	0.0.0.0	0.0.0	
# ::edge	generous-41	ARG1	allocate-01	0.0.1	0.0	
# ::edge	generous-41	ARG2	temporal-quantity	0.0.1	0.0.1.0	
# ::edge	language	name	name	0.1.0	0.1.0.0	
# ::edge	name	op1	"English"	0.1.0.0	0.1.0.0.0	
# ::edge	nation	degree	language	0.1	0.1.0	
# ::edge	nation	domain	and	0.1	0	
# ::edge	person	mod	female	0.0.0	0.0.0.1	
# ::edge	person	quant	32	0.0.0	0.0.0.2	
# ::edge	temporal-quantity	unit	month	0.0.1.0	0.0.1.0.0	
(a / and 
      :ARG2-of (a2 / allocate-01 
            :ARG0 (p / person 
                  :ARG0-of (d / dance-01) 
                  :mod (f / female) 
                  :quant 32) 
            :ARG1-of (g / generous-41 
                  :ARG2 (t / temporal-quantity 
                        :unit (m / month))) 
            :time 20) 
      :domain-of (n / nation 
            :degree (l / language 
                  :name (n2 / name 
                        :op1 "English"))) 
      :op1 (b / bill))

# ::snt   many broadcasters believe coverage has produced better television than expected because a rule restricting camera shots to head and shoulders has been interpreted in a generous way
# ::tok many broadcasters believe coverage has produced better television than expected because a rule restricting camera shots to head and shoulders has been interpreted in a generous way
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:01.919
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt from this pperspective our hypothetical generous increase in nhs funding amounts to roughly one ppint of beer
# ::tok from this pperspective our hypothetical generous increase in nhs funding amounts to roughly one ppint of beer
# ::alignments 16-17|0.0 12-13|0.2.0 10-11|0.1.0 9-10|0.1 6-7|0 5-6|0.2 4-5|0.3 1-2|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:01.978
# ::node	0	increase-01	6-7
# ::node	0.0	beer	16-17
# ::node	0.1	fund-01	9-10
# ::node	0.1.0	amount	10-11
# ::node	0.1.1	this	1-2
# ::node	0.2	generous-41	5-6
# ::node	0.2.0	roughly	12-13
# ::node	0.3	hypothetical	4-5
# ::root	0	increase-01
# ::edge	fund-01	ARG0	increase-01	0.1	0	
# ::edge	fund-01	ARG1	amount	0.1	0.1.0	
# ::edge	generous-41	ARG0	roughly	0.2	0.2.0	
# ::edge	generous-41	ARG1	increase-01	0.2	0	
# ::edge	increase-01	ARG0	beer	0	0.0	
# ::edge	increase-01	mod	hypothetical	0	0.3	
# ::edge	this	op1	fund-01	0.1.1	0.1	
(i / increase-01 
      :ARG0 (b / beer) 
      :ARG0-of (f / fund-01 
            :ARG1 (a / amount) 
            :op-of (t / this)) 
      :ARG1-of (g / generous-41 
            :ARG0 (r / roughly)) 
      :mod (h / hypothetical))

# ::snt here julian followed in her mothers footsteps by becoming a kind and immensely generous hostess both to old bloomsbury and to young artists and writers
# ::tok here julian followed in her mothers footsteps by becoming a kind and immensely generous hostess both to old bloomsbury and to young artists and writers
# ::alignments 24-25|0.0.0+0.0 23-24|0 22-23|0.0.3.1 21-22|0.0.2 19-20|0.0.3 17-18|0.0.0.0 15-16|0.0.3.0.0 13-14|0.0.3.0.2.1 11-12|0.0.3.0.2 10-11|0.0.3.0.2.0 8-9|0.0.3.0 6-7|0.0.3.0.1.0 5-6|0.0.1.0+0.0.1 2-3|0.0.3.0.1 0-1|0.0.3.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:02.146
# ::node	0	and	23-24
# ::node	0.0	person	24-25
# ::node	0.0.0	write-01	24-25
# ::node	0.0.0.0	old	17-18
# ::node	0.0.1	have-rel-role-91	5-6
# ::node	0.0.1.0	mother	5-6
# ::node	0.0.2	young	21-22
# ::node	0.0.3	and	19-20
# ::node	0.0.3.0	become-01	8-9
# ::node	0.0.3.0.0	both	15-16
# ::node	0.0.3.0.1	follow-01	2-3
# ::node	0.0.3.0.1.0	footstep	6-7
# ::node	0.0.3.0.1.1	here	0-1
# ::node	0.0.3.0.2	and	11-12
# ::node	0.0.3.0.2.0	kind	10-11
# ::node	0.0.3.0.2.1	generous-41	13-14
# ::node	0.0.3.1	artist	22-23
# ::root	0	and
# ::edge	and	op1	artist	0.0.3	0.0.3.1	
# ::edge	and	op1	become-01	0.0.3.0.2	0.0.3.0	
# ::edge	and	op1	person	0	0.0	
# ::edge	and	op2	kind	0.0.3.0.2	0.0.3.0.2.0	
# ::edge	and	op2	person	0.0.3	0.0	
# ::edge	and	op3	generous-41	0.0.3.0.2	0.0.3.0.2.1	
# ::edge	become-01	ARG0	both	0.0.3.0	0.0.3.0.0	
# ::edge	become-01	ARG1	and	0.0.3.0	0.0.3	
# ::edge	follow-01	ARG1	become-01	0.0.3.0.1	0.0.3.0	
# ::edge	follow-01	ARG2	footstep	0.0.3.0.1	0.0.3.0.1.0	
# ::edge	follow-01	concession	here	0.0.3.0.1	0.0.3.0.1.1	
# ::edge	have-rel-role-91	ARG1	person	0.0.1	0.0	
# ::edge	have-rel-role-91	ARG2	mother	0.0.1	0.0.1.0	
# ::edge	person	mod	young	0.0	0.0.2	
# ::edge	write-01	ARG0	person	0.0.0	0.0	
# ::edge	write-01	ARG1	old	0.0.0	0.0.0.0	
(a / and 
      :op1 (p / person 
            :ARG0-of (w / write-01 
                  :ARG1 (o / old)) 
            :ARG1-of (h / have-rel-role-91 
                  :ARG2 (m / mother)) 
            :mod (y / young) 
            :op-of (a3 / and 
                  :ARG1-of (b2 / become-01 
                        :ARG0 (b / both) 
                        :ARG1-of (f2 / follow-01 
                              :ARG2 (f / footstep) 
                              :concession (h2 / here)) 
                        :op-of (a4 / and 
                              :op1 (k / kind) 
                              :op2 (g / generous-41))) 
                  :op1 (a2 / artist))))

# ::snt tactful affable generous with subordinates he was clumsy with equals and brutal when crossed
# ::tok tactful affable generous with subordinates he was clumsy with equals and brutal when crossed
# ::alignments 13-14|0.0.0 11-12|0.1.0 10-11|0.1 9-10|0 5-6|0.0 4-5|0.0.0.0.0+0.0.0.0 2-3|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:02.189
# ::node	0	equal-01	9-10
# ::node	0.0	he	5-6
# ::node	0.0.0	cross-00	13-14
# ::node	0.0.0.0	person	4-5
# ::node	0.0.0.0.0	subordinate-01	4-5
# ::node	0.0.0.0.1	generous-41	2-3
# ::node	0.1	and	10-11
# ::node	0.1.0	brutal	11-12
# ::root	0	equal-01
# ::edge	and	op1	equal-01	0.1	0	
# ::edge	and	op2	brutal	0.1	0.1.0	
# ::edge	cross-00	ARG0	he	0.0.0	0.0	
# ::edge	cross-00	ARG1	person	0.0.0	0.0.0.0	
# ::edge	equal-01	ARG0	he	0	0.0	
# ::edge	generous-41	ARG2	person	0.0.0.0.1	0.0.0.0	
# ::edge	subordinate-01	ARG1	person	0.0.0.0.0	0.0.0.0	
(e / equal-01 
      :ARG0 (h / he 
            :ARG0-of (c / cross-00 
                  :ARG1 (p / person 
                        :ARG1-of (s / subordinate-01) 
                        :ARG2-of (g / generous-41)))) 
      :op-of (a / and 
            :op1 (b / brutal)))

# ::snt the renowned house style is skilful generous and unfussy dash
# ::tok the renowned house style is skilful generous and unfussy dash
# ::alignments 7-8|0 6-7|0.1 3-4|0.0 2-3|0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:02.203
# ::node	0	and	7-8
# ::node	0.0	style	3-4
# ::node	0.0.0	house	2-3
# ::node	0.0.0.0	renowned	1-2
# ::node	0.1	generous-41	6-7
# ::root	0	and
# ::edge	and	domain	style	0	0.0	
# ::edge	and	op1	generous-41	0	0.1	
# ::edge	house	mod	renowned	0.0.0	0.0.0.0	
# ::edge	style	mod	house	0.0	0.0.0	
(a / and 
      :domain (s / style 
            :mod (h / house 
                  :mod (r / renowned))) 
      :op1 (g / generous-41))

# ::snt in 1987 he became ill and left london for bath where with moyra he spent the remainder of his days painting and living before cancer snuffed out an utterly genial generous and imaginative human being
# ::tok in 1987 he became ill and left london for bath where with moyra he spent the remainder of his days painting and living before cancer snuffed out an utterly genial generous and imaginative human being
# ::alignments 33-34|0.1.0 32-33|0.1.0.1.0+0.1.0.1 31-32|0.1.0.1.1 30-31|0.1.0.0 28-29|0.1.0.0.1 24-25|0.1.0.0.0 23-24|0.2 22-23|0.1 21-22|0 20-21|0.0 19-20|0.1.1.0+0.1.1 16-17|0.0.0 14-15|0.0.0.0 13-14|0.0.0.0.0 9-10|0.0.0.0.2.1.0 7-8|0.0.0.0.2.0.0.0.0+0.0.0.0.2.0.0.0+0.0.0.0.2.0.0 5-6|0.0.0.0.2.1 4-5|0.0.0.0.2.1.1 3-4|0.0.0.0.2 2-3|0.0.0.0.2.0 1-2|0.0.0.0.1.0+0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:02.807
# ::node	0	and	21-22
# ::node	0.0	paint-02	20-21
# ::node	0.0.0	remainder	16-17
# ::node	0.0.0.0	spend-01	14-15
# ::node	0.0.0.0.0	he	13-14
# ::node	0.0.0.0.1	date-entity	1-2
# ::node	0.0.0.0.1.0	1987	1-2
# ::node	0.0.0.0.2	become-01	3-4
# ::node	0.0.0.0.2.0	he	2-3
# ::node	0.0.0.0.2.0.0	city	7-8
# ::node	0.0.0.0.2.0.0.0	name	7-8
# ::node	0.0.0.0.2.0.0.0.0	"London"	7-8
# ::node	0.0.0.0.2.1	and	5-6
# ::node	0.0.0.0.2.1.0	bathe-01	9-10
# ::node	0.0.0.0.2.1.1	ill-41	4-5
# ::node	0.1	live-01	22-23
# ::node	0.1.0	human	33-34
# ::node	0.1.0.0	generous-41	30-31
# ::node	0.1.0.0.0	cancer	24-25
# ::node	0.1.0.0.1	utterly	28-29
# ::node	0.1.0.1	person	32-33
# ::node	0.1.0.1.0	imaginative	32-33
# ::node	0.1.0.1.1	and	31-32
# ::node	0.1.1	temporal-quantity	19-20
# ::node	0.1.1.0	day	19-20
# ::node	0.2	before	23-24
# ::root	0	and
# ::edge	and	op1	become-01	0.0.0.0.2.1	0.0.0.0.2	
# ::edge	and	op1	paint-02	0	0.0	
# ::edge	and	op1	person	0.1.0.1.1	0.1.0.1	
# ::edge	and	op2	ill-41	0.0.0.0.2.1	0.0.0.0.2.1.1	
# ::edge	and	op2	live-01	0	0.1	
# ::edge	and	time	before	0	0.2	
# ::edge	bathe-01	ARG1	and	0.0.0.0.2.1.0	0.0.0.0.2.1	
# ::edge	become-01	ARG1	he	0.0.0.0.2	0.0.0.0.2.0	
# ::edge	become-01	time	spend-01	0.0.0.0.2	0.0.0.0	
# ::edge	city	domain	he	0.0.0.0.2.0.0	0.0.0.0.2.0	
# ::edge	city	name	name	0.0.0.0.2.0.0	0.0.0.0.2.0.0.0	
# ::edge	date-entity	year	1987	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	generous-41	ARG0	cancer	0.1.0.0	0.1.0.0.0	
# ::edge	generous-41	ARG1	utterly	0.1.0.0	0.1.0.0.1	
# ::edge	generous-41	ARG2	human	0.1.0.0	0.1.0	
# ::edge	human	mod	person	0.1.0	0.1.0.1	
# ::edge	live-01	ARG0	human	0.1	0.1.0	
# ::edge	live-01	ARG1	temporal-quantity	0.1	0.1.1	
# ::edge	name	op1	"London"	0.0.0.0.2.0.0.0	0.0.0.0.2.0.0.0.0	
# ::edge	paint-02	ARG1	remainder	0.0	0.0.0	
# ::edge	person	mod	imaginative	0.1.0.1	0.1.0.1.0	
# ::edge	spend-01	ARG0	he	0.0.0.0	0.0.0.0.0	
# ::edge	spend-01	ARG1	remainder	0.0.0.0	0.0.0	
# ::edge	spend-01	time	date-entity	0.0.0.0	0.0.0.0.1	
# ::edge	temporal-quantity	unit	day	0.1.1	0.1.1.0	
(a2 / and 
      :op1 (p2 / paint-02 
            :ARG1 (r / remainder 
                  :ARG1-of (s / spend-01 
                        :ARG0 (h2 / he) 
                        :time (d2 / date-entity 
                              :year 1987) 
                        :time-of (b3 / become-01 
                              :ARG1 (h3 / he 
                                    :domain-of (c2 / city 
                                          :name (n / name 
                                                :op1 "London"))) 
                              :op-of (a3 / and 
                                    :ARG1-of (b2 / bathe-01) 
                                    :op1 (i2 / ill-41)))))) 
      :op2 (l / live-01 
            :ARG0 (h / human 
                  :ARG2-of (g / generous-41 
                        :ARG0 (c / cancer) 
                        :ARG1 (u / utterly)) 
                  :mod (p / person 
                        :mod (i / imaginative) 
                        :op-of (a / and))) 
            :ARG1 (t / temporal-quantity 
                  :unit (d / day))) 
      :time (b / before))

# ::snt   the size of the package was unlikely to inspire generous offers from other countries whom britain had called on to rally round hong hong
# ::tok the size of the package was unlikely to inspire generous offers from other countries whom britain had called on to rally round hong hong
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:02.808
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt   sensing the need to motivate teachers and attract recruits lionel jospin began tackling the explosive university issue by offering fouryear contracts to lecturers to carry out research or take on additional teaching hours in return for generous bonuses
# ::tok sensing the need to motivate teachers and attract recruits lionel jospin began tackling the explosive university issue by offering fouryear contracts to lecturers to carry out research or take on additional teaching hours in return for generous bonuses
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:02.809
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the opening of the cholmondeleys umbrella run coincided with the announcement of digitals generous 1989 dance awards dash
# ::tok the opening of the cholmondeleys umbrella run coincided with the announcement of digitals generous 1989 dance awards dash
# ::alignments 16-17|0.1.0.1+0.1.0 15-16|0.1 14-15|0.0.0.0.0+0.0.0.0 13-14|0.1.0.0 10-11|0.0.0 7-8|0 5-6|0.1.0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:02.884
# ::node	0	coincide-01	7-8
# ::node	0.0	open-01	1-2
# ::node	0.0.0	announce-01	10-11
# ::node	0.0.0.0	date-entity	14-15
# ::node	0.0.0.0.0	1989	14-15
# ::node	0.1	dance-01	15-16
# ::node	0.1.0	thing	16-17
# ::node	0.1.0.0	generous-41	13-14
# ::node	0.1.0.0.0	umbrella	5-6
# ::node	0.1.0.1	award-01	16-17
# ::root	0	coincide-01
# ::edge	announce-01	ARG1	open-01	0.0.0	0.0	
# ::edge	announce-01	time	date-entity	0.0.0	0.0.0.0	
# ::edge	award-01	ARG1	thing	0.1.0.1	0.1.0	
# ::edge	coincide-01	ARG2	dance-01	0	0.1	
# ::edge	dance-01	ARG1	thing	0.1	0.1.0	
# ::edge	date-entity	year	1989	0.0.0.0	0.0.0.0.0	
# ::edge	generous-41	ARG0	thing	0.1.0.0	0.1.0	
# ::edge	generous-41	ARG1	umbrella	0.1.0.0	0.1.0.0.0	
# ::edge	open-01	ARG1	coincide-01	0.0	0	
(c / coincide-01 
      :ARG1-of (o / open-01 
            :ARG1-of (a2 / announce-01 
                  :time (d2 / date-entity 
                        :year 1989))) 
      :ARG2 (d / dance-01 
            :ARG1 (t / thing 
                  :ARG0-of (g / generous-41 
                        :ARG1 (u / umbrella)) 
                  :ARG1-of (a / award-01))))

# ::snt rachel would appear warm and generous with smiles and a determination to be friendly and tolerant
# ::tok rachel would appear warm and generous with smiles and a determination to be friendly and tolerant
# ::alignments 15-16|0.1 14-15|0 13-14|0.0 10-11|0.1.0 8-9|0.1.0.0 7-8|0.1.0.0.1 5-6|0.1.0.0.0 4-5|0.1.0.0.0.0 3-4|0.1.0.0.0.0.0.0 2-3|0.1.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:03.007
# ::node	0	and	14-15
# ::node	0.0	friendly-41	13-14
# ::node	0.1	tolerate-01	15-16
# ::node	0.1.0	determine-01	10-11
# ::node	0.1.0.0	and	8-9
# ::node	0.1.0.0.0	generous-41	5-6
# ::node	0.1.0.0.0.0	and	4-5
# ::node	0.1.0.0.0.0.0	appear-02	2-3
# ::node	0.1.0.0.0.0.0.0	warm	3-4
# ::node	0.1.0.0.1	smile-01	7-8
# ::root	0	and
# ::edge	and	op1	friendly-41	0	0.0	
# ::edge	and	op1	generous-41	0.1.0.0	0.1.0.0.0	
# ::edge	and	op1	generous-41	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	and	op2	smile-01	0.1.0.0	0.1.0.0.1	
# ::edge	and	op2	tolerate-01	0	0.1	
# ::edge	and	op3	determine-01	0.1.0.0	0.1.0	
# ::edge	appear-02	ARG1	and	0.1.0.0.0.0.0	0.1.0.0.0.0	
# ::edge	appear-02	ARG3	warm	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	tolerate-01	ARG1	determine-01	0.1	0.1.0	
(a / and 
      :op1 (f / friendly-41) 
      :op2 (t / tolerate-01 
            :ARG1 (d / determine-01 
                  :op-of (a2 / and 
                        :op1 (g / generous-41 
                              :op-of (a3 / and 
                                    :ARG1-of (a4 / appear-02 
                                          :ARG3 (w / warm)))) 
                        :op2 (s / smile-01)))))

# ::snt that is a generous application of the principle which you have urged
# ::tok that is a generous application of the principle which you have urged
# ::alignments 11-12|0.0.0 9-10|0.0.0.0 7-8|0.0 4-5|0 3-4|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:03.023
# ::node	0	apply-01	4-5
# ::node	0.0	principle	7-8
# ::node	0.0.0	urge-01	11-12
# ::node	0.0.0.0	you	9-10
# ::node	0.1	generous-41	3-4
# ::root	0	apply-01
# ::edge	apply-01	ARG1	principle	0	0.0	
# ::edge	generous-41	ARG1	apply-01	0.1	0	
# ::edge	urge-01	ARG0	you	0.0.0	0.0.0.0	
# ::edge	urge-01	ARG1	principle	0.0.0	0.0	
(a / apply-01 
      :ARG1 (p / principle 
            :ARG1-of (u / urge-01 
                  :ARG0 (y / you))) 
      :ARG1-of (g / generous-41))

# ::snt theyre generous as i say
# ::tok theyre generous as i say
# ::alignments 4-5|0 3-4|0.0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:03.028
# ::node	0	say-01	4-5
# ::node	0.0	i	3-4
# ::node	0.1	generous-41	1-2
# ::root	0	say-01
# ::edge	generous-41	ARG1	say-01	0.1	0	
# ::edge	say-01	ARG0	i	0	0.0	
(s / say-01 
      :ARG0 (i / i) 
      :ARG1-of (g / generous-41))

# ::snt contrary to popular belief a 1m damages award is not over generous when a young person suffers severe brain damage in a road accident
# ::tok contrary to popular belief a 1m damages award is not over generous when a young person suffers severe brain damage in a road accident
# ::alignments 23-24|0.2.1 22-23|0.2.1.0 19-20|0.2 18-19|0.2.0 17-18|0.2.2 16-17|0 15-16|0.0 14-15|0.0.0 11-12|0.1 7-8|0.1.0 6-7|0.1.0.0 3-4|0.1.0.1.0 2-3|0.1.0.1.0.0 0-1|0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:03.160
# ::node	0	suffer-01	16-17
# ::node	0.0	person	15-16
# ::node	0.0.0	young	14-15
# ::node	0.1	generous-41	11-12
# ::node	0.1.0	award-01	7-8
# ::node	0.1.0.0	damage-01	6-7
# ::node	0.1.0.1	contrary-41	0-1
# ::node	0.1.0.1.0	believe-01	3-4
# ::node	0.1.0.1.0.0	popular-41	2-3
# ::node	0.2	damage-01	19-20
# ::node	0.2.0	brain	18-19
# ::node	0.2.1	accident	23-24
# ::node	0.2.1.0	road	22-23
# ::node	0.2.2	severe	17-18
# ::root	0	suffer-01
# ::edge	accident	location	road	0.2.1	0.2.1.0	
# ::edge	award-01	ARG1	damage-01	0.1.0	0.1.0.0	
# ::edge	contrary-41	ARG1	believe-01	0.1.0.1	0.1.0.1.0	
# ::edge	contrary-41	ARG2	award-01	0.1.0.1	0.1.0	
# ::edge	damage-01	ARG1	brain	0.2	0.2.0	
# ::edge	damage-01	ARG2	accident	0.2	0.2.1	
# ::edge	damage-01	mod	severe	0.2	0.2.2	
# ::edge	generous-41	ARG0	suffer-01	0.1	0	
# ::edge	generous-41	ARG1	award-01	0.1	0.1.0	
# ::edge	person	mod	young	0.0	0.0.0	
# ::edge	popular-41	ARG1	believe-01	0.1.0.1.0.0	0.1.0.1.0	
# ::edge	suffer-01	ARG0	person	0	0.0	
# ::edge	suffer-01	ARG1	damage-01	0	0.2	
(s2 / suffer-01 
      :ARG0 (p / person 
            :mod (y / young)) 
      :ARG0-of (g / generous-41 
            :ARG1 (a2 / award-01 
                  :ARG1 (d2 / damage-01) 
                  :ARG2-of (c / contrary-41 
                        :ARG1 (b2 / believe-01 
                              :ARG1-of (p2 / popular-41))))) 
      :ARG1 (d / damage-01 
            :ARG1 (b / brain) 
            :ARG2 (a / accident 
                  :location (r / road)) 
            :mod (s / severe)))

# ::snt   after trying to think of more bad ways in which a person could be like any kind of potato she went on standing in the middle of the sittingroom holding herself together as if she was cold isnt it terrible how when you find out more about someone youve known a long time and thought you knew all about theyre always worse than you thought before never not as bad never kinder or more generous or ready to go to a lot of trouble
# ::tok after trying to think of more bad ways in which a person could be like any kind of potato she went on standing in the middle of the sittingroom holding herself together as if she was cold isnt it terrible how when you find out more about someone youve known a long time and thought you knew all about theyre always worse than you thought before never not as bad never kinder or more generous or ready to go to a lot of trouble
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:03.160
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt already i have found many generous sponsors including burgess printers the lions club of abingdon morands brewery and touchwood sports but i need more help to reach the target
# ::tok already i have found many generous sponsors including burgess printers the lions club of abingdon morands brewery and touchwood sports but i need more help to reach the target
# ::alignments 28-29|0.1.0.1 26-27|0.1.0 24-25|0.1 22-23|0.1.2 21-22|0.1.1 20-21|0 19-20|0.1.2.0 17-18|0.1.0.0 12-13|0.0 6-7|0.0.0.0 5-6|0.0.0 4-5|0.0.0.0.1 3-4|0.0.0.0.0 1-2|0.0.0.0.0.0 0-1|0.1.2.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:03.736
# ::node	0	contrast-01	20-21
# ::node	0.0	club	12-13
# ::node	0.0.0	generous-41	5-6
# ::node	0.0.0.0	sponsor-01	6-7
# ::node	0.0.0.0.0	find-01	3-4
# ::node	0.0.0.0.0.0	i	1-2
# ::node	0.0.0.0.1	many	4-5
# ::node	0.1	help-01	24-25
# ::node	0.1.0	reach-01	26-27
# ::node	0.1.0.0	and	17-18
# ::node	0.1.0.1	target-01	28-29
# ::node	0.1.1	i	21-22
# ::node	0.1.2	need-01	22-23
# ::node	0.1.2.0	sport	19-20
# ::node	0.1.2.1	already	0-1
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	club	0	0.0	
# ::edge	contrast-01	ARG2	help-01	0	0.1	
# ::edge	find-01	ARG0	i	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	find-01	ARG1	sponsor-01	0.0.0.0.0	0.0.0.0	
# ::edge	generous-41	ARG0	club	0.0.0	0.0	
# ::edge	generous-41	ARG2	sponsor-01	0.0.0	0.0.0.0	
# ::edge	help-01	ARG1	reach-01	0.1	0.1.0	
# ::edge	help-01	ARG2	i	0.1	0.1.1	
# ::edge	help-01	mod	need-01	0.1	0.1.2	
# ::edge	need-01	ARG0	sport	0.1.2	0.1.2.0	
# ::edge	need-01	ARG1	already	0.1.2	0.1.2.1	
# ::edge	reach-01	ARG0	and	0.1.0	0.1.0.0	
# ::edge	reach-01	ARG1	target-01	0.1.0	0.1.0.1	
# ::edge	sponsor-01	quant	many	0.0.0.0	0.0.0.0.1	
(c / contrast-01 
      :ARG1 (c2 / club 
            :ARG0-of (g / generous-41 
                  :ARG2 (s2 / sponsor-01 
                        :ARG1-of (f / find-01 
                              :ARG0 (i2 / i)) 
                        :quant (m / many)))) 
      :ARG2 (h / help-01 
            :ARG1 (r / reach-01 
                  :ARG0 (a / and) 
                  :ARG1 (t / target-01)) 
            :ARG2 (i / i) 
            :mod (n / need-01 
                  :ARG0 (s / sport) 
                  :ARG1 (a2 / already))))

# ::snt tory mps united in welcoming the payments which they described as very generous but some expressed reservations about the dtis role
# ::tok tory mps united in welcoming the payments which they described as very generous but some expressed reservations about the dtis role
# ::alignments 20-21|0.0.2 16-17|0 15-16|0.0 14-15|0.0.0 13-14|0.0.1 12-13|0.0.1.0.0.0 11-12|0.0.1.0.0.0.0 9-10|0.0.1.0 8-9|0.0.1.0.0 6-7|0.0.1.0.1 2-3|0.0.1.0.1.0 0-1|0.0.1.0.1.0.0.0.0+0.0.1.0.1.0.0.0+0.0.1.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:03.903
# ::node	0	reserve-01	16-17
# ::node	0.0	express-01	15-16
# ::node	0.0.0	some	14-15
# ::node	0.0.1	contrast-01	13-14
# ::node	0.0.1.0	describe-01	9-10
# ::node	0.0.1.0.0	they	8-9
# ::node	0.0.1.0.0.0	generous-41	12-13
# ::node	0.0.1.0.0.0.0	very	11-12
# ::node	0.0.1.0.1	payment	6-7
# ::node	0.0.1.0.1.0	unite-01	2-3
# ::node	0.0.1.0.1.0.0	political-party	0-1
# ::node	0.0.1.0.1.0.0.0	name	0-1
# ::node	0.0.1.0.1.0.0.0.0	"Tory"	0-1
# ::node	0.0.2	role	20-21
# ::root	0	reserve-01
(r2 / reserve-01 
      :ARG1-of (e / express-01 
            :ARG0 (s / some) 
            :ARG1-of (c / contrast-01 
                  :ARG1-of (d / describe-01 
                        :ARG0 (t / they 
                              :ARG1-of (g / generous-41 
                                    :degree (v / very))) 
                        :mod-of (p / payment 
                              :ARG1-of (u / unite-01 
                                    :ARG0 (p2 / political-party 
                                          :name (n / name 
                                                :op1 "Tory")))))) 
            :manner (r / role)))

# ::snt the illustrations are generous and to me often new but not always rightly identified
# ::tok the illustrations are generous and to me often new but not always rightly identified
# ::alignments 13-14|0.1 12-13|0.1.2 11-12|0.1.2.0 9-10|0 8-9|0.1.1 7-8|0.1.0 4-5|0.0 3-4|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:03.929
# ::node	0	contrast-01	9-10
# ::node	0.0	and	4-5
# ::node	0.0.0	generous-41	3-4
# ::node	0.1	identify-01	13-14
# ::node	0.1.0	often	7-8
# ::node	0.1.1	new	8-9
# ::node	0.1.2	right	12-13
# ::node	0.1.2.0	always	11-12
# ::root	0	contrast-01
# ::edge	and	op1	generous-41	0.0	0.0.0	
# ::edge	contrast-01	ARG1	and	0	0.0	
# ::edge	contrast-01	ARG2	identify-01	0	0.1	
# ::edge	identify-01	ARG0	often	0.1	0.1.0	
# ::edge	identify-01	ARG1	new	0.1	0.1.1	
# ::edge	identify-01	manner	right	0.1	0.1.2	
# ::edge	right	mod	always	0.1.2	0.1.2.0	
(c / contrast-01 
      :ARG1 (a2 / and 
            :op1 (g / generous-41)) 
      :ARG2 (i / identify-01 
            :ARG0 (o / often) 
            :ARG1 (n / new) 
            :manner (r / right 
                  :mod (a / always))))

# ::snt perhaps donald was beginning to have second thoughts about his earlier generous attitude to being poisoned by henry
# ::tok perhaps donald was beginning to have second thoughts about his earlier generous attitude to being poisoned by henry
# ::alignments 15-16|0.1.0.0 12-13|0.1.0 11-12|0.1 10-11|0.1.1 3-4|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:03.987
# ::node	0	begin-01	3-4
# ::node	0.0	perhaps	0-1
# ::node	0.1	generous-41	11-12
# ::node	0.1.0	attitude	12-13
# ::node	0.1.0.0	poison-02	15-16
# ::node	0.1.1	early	10-11
# ::root	0	begin-01
# ::edge	begin-01	ARG1	perhaps	0	0.0	
# ::edge	begin-01	purpose	generous-41	0	0.1	
# ::edge	generous-41	ARG1	attitude	0.1	0.1.0	
# ::edge	generous-41	frequency	early	0.1	0.1.1	
# ::edge	poison-02	ARG1	attitude	0.1.0.0	0.1.0	
(b / begin-01 
      :ARG1 (p2 / perhaps) 
      :purpose (g / generous-41 
            :ARG1 (a / attitude 
                  :ARG1-of (p / poison-02)) 
            :frequency (e / early)))

# ::snt but he was and is very much more a fine and amply stocked mind and a generous spirit to whom the people of canada owe a great deal
# ::tok but he was and is very much more a fine and amply stocked mind and a generous spirit to whom the people of canada owe a great deal
# ::alignments 27-28|0.0.2.0 26-27|0.0.2.0.1 24-25|0.0.2 17-18|0.0.1 16-17|0.0.1.0 14-15|0.0.0 13-14|0.0.0.1.0 11-12|0.0.0.0.1 10-11|0.0.0.0 9-10|0.0.0.0.0 6-7|0.0.2.0.0 5-6|0.0.2.0.0.0 3-4|0.0 1-2|0.0.0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:04.074
# ::node	0	contrast-01	0-1
# ::node	0.0	and	3-4
# ::node	0.0.0	and	14-15
# ::node	0.0.0.0	and	10-11
# ::node	0.0.0.0.0	fine	9-10
# ::node	0.0.0.0.1	ample	11-12
# ::node	0.0.0.1	he	1-2
# ::node	0.0.0.1.0	mind	13-14
# ::node	0.0.1	spirit	17-18
# ::node	0.0.1.0	generous-41	16-17
# ::node	0.0.2	owe-01	24-25
# ::node	0.0.2.0	deal-01	27-28
# ::node	0.0.2.0.0	much	6-7
# ::node	0.0.2.0.0.0	very	5-6
# ::node	0.0.2.0.1	great	26-27
# ::root	0	contrast-01
# ::edge	and	op1	fine	0.0.0.0	0.0.0.0.0	
# ::edge	and	op1	he	0.0.0	0.0.0.1	
# ::edge	and	op1	spirit	0.0	0.0.1	
# ::edge	and	op2	ample	0.0.0.0	0.0.0.0.1	
# ::edge	and	op2	and	0.0.0	0.0	
# ::edge	and	op2	owe-01	0.0	0.0.2	
# ::edge	and	op3	and	0.0.0.0	0.0.0	
# ::edge	contrast-01	ARG2	and	0	0.0	
# ::edge	deal-01	ARG1	much	0.0.2.0	0.0.2.0.0	
# ::edge	deal-01	mod	great	0.0.2.0	0.0.2.0.1	
# ::edge	mind	poss	he	0.0.0.1.0	0.0.0.1	
# ::edge	much	degree	very	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	owe-01	ARG1	deal-01	0.0.2	0.0.2.0	
# ::edge	spirit	mod	generous-41	0.0.1	0.0.1.0	
(c / contrast-01 
      :ARG2 (a4 / and 
            :op-of (a / and 
                  :op-of (a3 / and 
                        :op1 (f / fine) 
                        :op2 (a2 / ample)) 
                  :op1 (h / he 
                        :poss-of (m / mind))) 
            :op1 (s / spirit 
                  :mod (g2 / generous-41)) 
            :op2 (o / owe-01 
                  :ARG1 (d / deal-01 
                        :ARG1 (m2 / much 
                              :degree (v / very)) 
                        :mod (g / great)))))

# ::snt the award was not excessively generous
# ::tok the award was not excessively generous
# ::alignments 5-6|0 4-5|0.1 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:04.080
# ::node	0	generous-41	5-6
# ::node	0.0	award-01	1-2
# ::node	0.1	excessive	4-5
# ::root	0	generous-41
# ::edge	generous-41	ARG1	award-01	0	0.0	
# ::edge	generous-41	degree	excessive	0	0.1	
(g / generous-41 
      :ARG1 (a / award-01) 
      :degree (e / excessive))

# ::snt how long will it be before the disease spreads to interschool rugby  vociferous support for ones school is to be complimented and in most establishments is accompanied by generous acknowledgement of the skills displayed by the opposition
# ::tok how long will it be before the disease spreads to interschool rugby vociferous support for ones school is to be complimented and in most establishments is accompanied by generous acknowledgement of the skills displayed by the opposition
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:04.081
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt one reason the western trade unions have been generous with in helping the independent trade unions in eastern europe is that they do not want to see multinationals exploit the less well organised labour there at the expense of jobs in the west
# ::tok one reason the western trade unions have been generous with in helping the independent trade unions in eastern europe is that they do not want to see multinationals exploit the less well organised labour there at the expense of jobs in the west
# ::alignments 42-43|0.0.0.0.0.0.0.1.1 39-40|0.0.0.0.0.0.0.1.0 37-38|0.0.0.0.0.0.0.1 33-34|0.0.0.0.0.0.0.0 32-33|0.0.0.0.0.0.0.0.0 31-32|0.0.0.0.0.0.0.0.0.0 30-31|0.0.0.0.0.0.0.0.0.0.0 28-29|0.0.0.0.0.0.0 26-27|0.0.0.0.0.0 24-25|0.0.0.0 21-22|0.0.0.0.0 18-19|0.0.2.1.0+0.0.2.1+0.0.2 17-18|0.0.2.0 15-16|0.0 14-15|0.0.1 13-14|0.1+0 11-12|0.0.0 8-9|0.0.0.1 5-6|0.0.0.1.1 4-5|0.0.0.1.1.0 3-4|0.0.0.1.1.1.0.0+0.0.0.1.1.1.0+0.0.0.1.1.1 1-2|0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:04.870
# ::node	0	depend-01	13-14
# ::node	0.0	union	15-16
# ::node	0.0.0	help-01	11-12
# ::node	0.0.0.0	want-01	24-25
# ::node	0.0.0.0.0	they	21-22
# ::node	0.0.0.0.0.0	see-01	26-27
# ::node	0.0.0.0.0.0.0	exploit-01	28-29
# ::node	0.0.0.0.0.0.0.0	labour	33-34
# ::node	0.0.0.0.0.0.0.0.0	organize-01	32-33
# ::node	0.0.0.0.0.0.0.0.0.0	well	31-32
# ::node	0.0.0.0.0.0.0.0.0.0.0	less	30-31
# ::node	0.0.0.0.0.0.0.1	expend-01	37-38
# ::node	0.0.0.0.0.0.0.1.0	job	39-40
# ::node	0.0.0.0.0.0.0.1.1	west	42-43
# ::node	0.0.0.1	generous-41	8-9
# ::node	0.0.0.1.0	reason	1-2
# ::node	0.0.0.1.1	union	5-6
# ::node	0.0.0.1.1.0	trade-01	4-5
# ::node	0.0.0.1.1.1	world-region	3-4
# ::node	0.0.0.1.1.1.0	name	3-4
# ::node	0.0.0.1.1.1.0.0	"West"	3-4
# ::node	0.0.1	trade-01	14-15
# ::node	0.0.2	continent	18-19
# ::node	0.0.2.0	east	17-18
# ::node	0.0.2.1	name	18-19
# ::node	0.0.2.1.0	"Europe"	18-19
# ::node	0.1	-	13-14
# ::root	0	depend-01
# ::edge	continent	mod	east	0.0.2	0.0.2.0	
# ::edge	continent	name	name	0.0.2	0.0.2.1	
# ::edge	depend-01	ARG0	union	0	0.0	
# ::edge	depend-01	polarity	-	0	0.1	
# ::edge	expend-01	ARG1	job	0.0.0.0.0.0.0.1	0.0.0.0.0.0.0.1.0	
# ::edge	expend-01	ARG2	exploit-01	0.0.0.0.0.0.0.1	0.0.0.0.0.0.0	
# ::edge	expend-01	location	west	0.0.0.0.0.0.0.1	0.0.0.0.0.0.0.1.1	
# ::edge	exploit-01	ARG1	labour	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	generous-41	ARG0	reason	0.0.0.1	0.0.0.1.0	
# ::edge	generous-41	ARG1	union	0.0.0.1	0.0.0.1.1	
# ::edge	generous-41	ARG2	help-01	0.0.0.1	0.0.0	
# ::edge	help-01	ARG1	union	0.0.0	0.0	
# ::edge	name	op1	"Europe"	0.0.2.1	0.0.2.1.0	
# ::edge	name	op1	"West"	0.0.0.1.1.1.0	0.0.0.1.1.1.0.0	
# ::edge	organize-01	ARG1	labour	0.0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	organize-01	mod	well	0.0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0.0	
# ::edge	see-01	ARG0	they	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	see-01	ARG1	exploit-01	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	union	mod	trade-01	0.0	0.0.1	
# ::edge	union	mod	trade-01	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	union	mod	world-region	0.0.0.1.1	0.0.0.1.1.1	
# ::edge	union	topic	continent	0.0	0.0.2	
# ::edge	want-01	ARG0	they	0.0.0.0	0.0.0.0.0	
# ::edge	want-01	ARG1	help-01	0.0.0.0	0.0.0	
# ::edge	well	degree	less	0.0.0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0.0.0	
# ::edge	world-region	name	name	0.0.0.1.1.1	0.0.0.1.1.1.0	
(d / depend-01 
      :ARG0 (u / union 
            :ARG1-of (h / help-01 
                  :ARG1-of (w3 / want-01 
                        :ARG0 (t / they 
                              :ARG0-of (s / see-01 
                                    :ARG1 (e2 / exploit-01 
                                          :ARG1 (l / labour 
                                                :ARG1-of (o / organize-01 
                                                      :mod (w2 / well 
                                                            :degree (l2 / less)))) 
                                          :ARG2-of (e / expend-01 
                                                :ARG1 (j / job) 
                                                :location (w / west)))))) 
                  :ARG2-of (g / generous-41 
                        :ARG0 (r / reason) 
                        :ARG1 (u2 / union 
                              :mod (t3 / trade-01) 
                              :mod (w4 / world-region 
                                    :name (n2 / name 
                                          :op1 "West"))))) 
            :mod (t2 / trade-01) 
            :topic (c / continent 
                  :mod (e3 / east) 
                  :name (n / name 
                        :op1 "Europe"))) 
      :polarity -)

# ::snt before planting the area must be well dug have weeds removed and a generous amount of good garden compost worked into the soil
# ::tok before planting the area must be well dug have weeds removed and a generous amount of good garden compost worked into the soil
# ::alignments 22-23|0.2.2 19-20|0.2 17-18|0.1 16-17|0.0.0 14-15|0.2.0 13-14|0.2.0.0 11-12|0 10-11|0.0 6-7|0.2.1 3-4|0.0.1.0.0 1-2|0.0.1.0 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:04.984
# ::node	0	and	11-12
# ::node	0.0	remove-01	10-11
# ::node	0.0.0	good	16-17
# ::node	0.0.1	before	0-1
# ::node	0.0.1.0	plant-01	1-2
# ::node	0.0.1.0.0	area	3-4
# ::node	0.1	garden	17-18
# ::node	0.2	work-01	19-20
# ::node	0.2.0	amount	14-15
# ::node	0.2.0.0	generous-41	13-14
# ::node	0.2.1	well	6-7
# ::node	0.2.2	soil	22-23
# ::root	0	and
# ::edge	and	op1	remove-01	0	0.0	
# ::edge	and	op2	garden	0	0.1	
# ::edge	and	op3	work-01	0	0.2	
# ::edge	before	op1	plant-01	0.0.1	0.0.1.0	
# ::edge	before	op2	remove-01	0.0.1	0.0	
# ::edge	generous-41	ARG1	amount	0.2.0.0	0.2.0	
# ::edge	plant-01	ARG1	area	0.0.1.0	0.0.1.0.0	
# ::edge	remove-01	ARG1	good	0.0	0.0.0	
# ::edge	work-01	ARG0	amount	0.2	0.2.0	
# ::edge	work-01	ARG1	well	0.2	0.2.1	
# ::edge	work-01	location	soil	0.2	0.2.2	
(a2 / and 
      :op1 (r / remove-01 
            :ARG1 (g2 / good) 
            :op-of (b / before 
                  :op1 (p / plant-01 
                        :ARG1 (a3 / area)))) 
      :op2 (g / garden) 
      :op3 (w / work-01 
            :ARG0 (a / amount 
                  :ARG1-of (g3 / generous-41)) 
            :ARG1 (w2 / well) 
            :location (s / soil)))

# ::snt what is needed is generous help to ensure their children survive and aid systems which really are of benefit to the people
# ::tok what is needed is generous help to ensure their children survive and aid systems which really are of benefit to the people
# ::alignments 18-19|0.0 15-16|0.3.0 13-14|0.3.1 12-13|0.3 11-12|0 10-11|0.2.0.0 9-10|0.2.0.0.0 7-8|0.2.0 5-6|0.2 4-5|0.1 2-3|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:05.060
# ::node	0	and	11-12
# ::node	0.0	benefit-01	18-19
# ::node	0.1	generous-41	4-5
# ::node	0.1.0	need-01	2-3
# ::node	0.2	help-01	5-6
# ::node	0.2.0	ensure-01	7-8
# ::node	0.2.0.0	survive-01	10-11
# ::node	0.2.0.0.0	child	9-10
# ::node	0.3	aid-01	12-13
# ::node	0.3.0	really	15-16
# ::node	0.3.1	system	13-14
# ::root	0	and
# ::edge	aid-01	ARG0	really	0.3	0.3.0	
# ::edge	aid-01	ARG1	system	0.3	0.3.1	
# ::edge	and	op1	help-01	0	0.2	
# ::edge	and	op2	aid-01	0	0.3	
# ::edge	benefit-01	ARG0	and	0.0	0	
# ::edge	ensure-01	ARG1	survive-01	0.2.0	0.2.0.0	
# ::edge	generous-41	ARG1	and	0.1	0	
# ::edge	help-01	ARG1	ensure-01	0.2	0.2.0	
# ::edge	need-01	ARG1	generous-41	0.1.0	0.1	
# ::edge	survive-01	ARG0	child	0.2.0.0	0.2.0.0.0	
(a2 / and 
      :ARG0-of (b / benefit-01) 
      :ARG1-of (g / generous-41 
            :ARG1-of (n / need-01)) 
      :op1 (h / help-01 
            :ARG1 (e / ensure-01 
                  :ARG1 (s2 / survive-01 
                        :ARG0 (c / child)))) 
      :op2 (a / aid-01 
            :ARG0 (r / really) 
            :ARG1 (s / system)))

# ::snt far less generous terms than had been expected
# ::tok far less generous terms than had been expected
# ::alignments 7-8|0 3-4|0.0 2-3|0.0.0 1-2|0.0.0.0 0-1|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:05.072
# ::node	0	expect-01	7-8
# ::node	0.0	term	3-4
# ::node	0.0.0	generous-41	2-3
# ::node	0.0.0.0	less	1-2
# ::node	0.0.0.0.0	far	0-1
# ::root	0	expect-01
# ::edge	expect-01	ARG1	term	0	0.0	
# ::edge	generous-41	ARG2	term	0.0.0	0.0	
# ::edge	generous-41	degree	less	0.0.0	0.0.0.0	
# ::edge	less	degree	far	0.0.0.0	0.0.0.0.0	
(e / expect-01 
      :ARG1 (t / term 
            :ARG2-of (g / generous-41 
                  :degree (l / less 
                        :degree (f / far)))))

# ::snt in later life they are very generous givers to charity again wanting to soothe people
# ::tok in later life they are very generous givers to charity again wanting to soothe people
# ::alignments 11-12|0 10-11|0.2 9-10|0.1 7-8|0.0.0.0.0+0.0.0.0 6-7|0.0.0 5-6|0.0.0.1 3-4|0.0 2-3|0.0.1 1-2|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:05.112
# ::node	0	want-01	11-12
# ::node	0.0	they	3-4
# ::node	0.0.0	generous-41	6-7
# ::node	0.0.0.0	person	7-8
# ::node	0.0.0.0.0	give-01	7-8
# ::node	0.0.0.1	very	5-6
# ::node	0.0.1	life	2-3
# ::node	0.0.1.0	late	1-2
# ::node	0.1	charity	9-10
# ::node	0.2	again	10-11
# ::root	0	want-01
# ::edge	generous-41	ARG0	person	0.0.0	0.0.0.0	
# ::edge	generous-41	ARG1	they	0.0.0	0.0	
# ::edge	generous-41	degree	very	0.0.0	0.0.0.1	
# ::edge	give-01	ARG0	person	0.0.0.0.0	0.0.0.0	
# ::edge	life	mod	late	0.0.1	0.0.1.0	
# ::edge	life	poss	they	0.0.1	0.0	
# ::edge	want-01	ARG0	they	0	0.0	
# ::edge	want-01	ARG1	charity	0	0.1	
# ::edge	want-01	mod	again	0	0.2	
(w / want-01 
      :ARG0 (t / they 
            :ARG1-of (g2 / generous-41 
                  :ARG0 (p / person 
                        :ARG0-of (g / give-01)) 
                  :degree (v / very)) 
            :poss-of (l / life 
                  :mod (l2 / late))) 
      :ARG1 (c / charity) 
      :mod (a / again))

# ::snt ten runs later the prolific mancunian andy hayhurst given a generous welcome by a good crowd edged watkinson low to hegg and during a torrid afternoon spell by patterson the acting captain fairbrother took a superb low catch at first slip to dismiss tavare
# ::tok ten runs later the prolific mancunian andy hayhurst given a generous welcome by a good crowd edged watkinson low to hegg and during a torrid afternoon spell by patterson the acting captain fairbrother took a superb low catch at first slip to dismiss tavare
# ::alignments 40-41|0.1.0.0.0.0.0 36-37|0.0 31-32|0.1.0.1+0.1.0 30-31|0.1.0.0 25-26|0.1.0.0.0.0.0.0 21-22|0.1.0.0.0 18-19|0.1.0.0.0.0 15-16|0.2.1 14-15|0.2.1.0 11-12|0 10-11|0.1 8-9|0.2 4-5|0.2.0.0 2-3|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:05.365
# ::node	0	welcome-01	11-12
# ::node	0.0	low	36-37
# ::node	0.1	generous-41	10-11
# ::node	0.1.0	have-org-role-91	31-32
# ::node	0.1.0.0	act-01	30-31
# ::node	0.1.0.0.0	and	21-22
# ::node	0.1.0.0.0.0	low	18-19
# ::node	0.1.0.0.0.0.0	slip-01	40-41
# ::node	0.1.0.0.0.0.0.0	afternoon	25-26
# ::node	0.1.0.1	captain	31-32
# ::node	0.2	give-01	8-9
# ::node	0.2.0	late	2-3
# ::node	0.2.0.0	prolific	4-5
# ::node	0.2.1	crowd	15-16
# ::node	0.2.1.0	good	14-15
# ::root	0	welcome-01
# ::edge	act-01	ARG1	have-org-role-91	0.1.0.0	0.1.0	
# ::edge	act-01	ARG3	and	0.1.0.0	0.1.0.0.0	
# ::edge	and	op1	low	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	crowd	mod	good	0.2.1	0.2.1.0	
# ::edge	generous-41	ARG1	welcome-01	0.1	0	
# ::edge	give-01	ARG0	late	0.2	0.2.0	
# ::edge	give-01	ARG1	welcome-01	0.2	0	
# ::edge	give-01	ARG3	crowd	0.2	0.2.1	
# ::edge	have-org-role-91	ARG1	generous-41	0.1.0	0.1	
# ::edge	have-org-role-91	ARG2	captain	0.1.0	0.1.0.1	
# ::edge	prolific	degree	late	0.2.0.0	0.2.0	
# ::edge	slip-01	ARG1	low	0.1.0.0.0.0.0	0.1.0.0.0.0	
# ::edge	slip-01	manner	afternoon	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	welcome-01	ARG1	low	0	0.0	
(w / welcome-01 
      :ARG1 (l / low) 
      :ARG1-of (g2 / generous-41 
            :ARG1-of (h / have-org-role-91 
                  :ARG1-of (a / act-01 
                        :ARG3 (a3 / and 
                              :op1 (l2 / low 
                                    :ARG1-of (s / slip-01 
                                          :manner (a2 / afternoon))))) 
                  :ARG2 (c / captain))) 
      :ARG1-of (g3 / give-01 
            :ARG0 (l3 / late 
                  :degree-of (p / prolific)) 
            :ARG3 (c2 / crowd 
                  :mod (g / good))))

# ::snt their struggles together in poor lodgings while he was a student their shared grief and horror at her brothers madness the joy of holidays in somerset or by the sea in cornwall her pride in his work and success her warmth and her affectionate generous nature which had been with him throughout his adult life
# ::tok their struggles together in poor lodgings while he was a student their shared grief and horror at her brothers madness the joy of holidays in somerset or by the sea in cornwall her pride in his work and success her warmth and her affectionate generous nature which had been with him throughout his adult life
# ::alignments 54-55|0.0.0.0 53-54|0.0.0.0.0 51-52|0.0.0.0.1 45-46|0.0 44-45|0.0.0 41-42|0 40-41|0.0.1 38-39|0.1 37-38|0.1.0 33-34|0.1.0.0 29-30|0.1.0.0.0.1.1.0.1.0.0 26-27|0.1.0.0.0.1.1.0.1.0 23-24|0.1.0.0.0.1.1.0.1.0.1 21-22|0.1.0.0.0.1.1.0.1 18-19|0.1.0.0.0.1.1.0.0.0+0.1.0.0.0.1.1.0.0 15-16|0.1.0.0.0.1.1 14-15|0.1.0.0.0.1.1.0 12-13|0.1.0.0.0.1 10-11|0.1.0.0.0.0+0.1.0.0.0 7-8|0.1.0.0.0.2 4-5|0.1.0.0.0.1.0 2-3|0.1.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:06.050
# ::node	0	and	41-42
# ::node	0.0	nature	45-46
# ::node	0.0.0	generous-41	44-45
# ::node	0.0.0.0	life	54-55
# ::node	0.0.0.0.0	adult	53-54
# ::node	0.0.0.0.1	throughout	51-52
# ::node	0.0.1	warmth	40-41
# ::node	0.1	succeed-01	38-39
# ::node	0.1.0	and	37-38
# ::node	0.1.0.0	pride-01	33-34
# ::node	0.1.0.0.0	person	10-11
# ::node	0.1.0.0.0.0	study-01	10-11
# ::node	0.1.0.0.0.0.0	together	2-3
# ::node	0.1.0.0.0.1	share-01	12-13
# ::node	0.1.0.0.0.1.0	poor	4-5
# ::node	0.1.0.0.0.1.1	horror	15-16
# ::node	0.1.0.0.0.1.1.0	and	14-15
# ::node	0.1.0.0.0.1.1.0.0	have-rel-role-91	18-19
# ::node	0.1.0.0.0.1.1.0.0.0	brother	18-19
# ::node	0.1.0.0.0.1.1.0.1	joy	21-22
# ::node	0.1.0.0.0.1.1.0.1.0	or	26-27
# ::node	0.1.0.0.0.1.1.0.1.0.0	sea	29-30
# ::node	0.1.0.0.0.1.1.0.1.0.1	holiday	23-24
# ::node	0.1.0.0.0.2	he	7-8
# ::root	0	and
# ::edge	and	mod	have-rel-role-91	0.1.0.0.0.1.1.0	0.1.0.0.0.1.1.0.0	
# ::edge	and	op1	horror	0.1.0.0.0.1.1.0	0.1.0.0.0.1.1	
# ::edge	and	op1	nature	0	0.0	
# ::edge	and	op1	succeed-01	0.1.0	0.1	
# ::edge	and	time	succeed-01	0	0.1	
# ::edge	generous-41	ARG0	life	0.0.0	0.0.0.0	
# ::edge	have-rel-role-91	ARG2	brother	0.1.0.0.0.1.1.0.0	0.1.0.0.0.1.1.0.0.0	
# ::edge	joy	poss	and	0.1.0.0.0.1.1.0.1	0.1.0.0.0.1.1.0	
# ::edge	life	mod	adult	0.0.0.0	0.0.0.0.0	
# ::edge	nature	mod	generous-41	0.0	0.0.0	
# ::edge	nature	poss	warmth	0.0	0.0.1	
# ::edge	or	op1	joy	0.1.0.0.0.1.1.0.1.0	0.1.0.0.0.1.1.0.1	
# ::edge	or	op2	sea	0.1.0.0.0.1.1.0.1.0	0.1.0.0.0.1.1.0.1.0.0	
# ::edge	or	quant	holiday	0.1.0.0.0.1.1.0.1.0	0.1.0.0.0.1.1.0.1.0.1	
# ::edge	person	domain	he	0.1.0.0.0	0.1.0.0.0.2	
# ::edge	pride-01	ARG0	person	0.1.0.0	0.1.0.0.0	
# ::edge	pride-01	ARG1	and	0.1.0.0	0.1.0	
# ::edge	share-01	ARG0	poor	0.1.0.0.0.1	0.1.0.0.0.1.0	
# ::edge	share-01	ARG1	horror	0.1.0.0.0.1	0.1.0.0.0.1.1	
# ::edge	share-01	ARG2	person	0.1.0.0.0.1	0.1.0.0.0	
# ::edge	study-01	ARG0	person	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	study-01	ARG1	together	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	throughout	op1	life	0.0.0.0.1	0.0.0.0	
(a2 / and 
      :op1 (n / nature 
            :mod (g / generous-41 
                  :ARG0 (l / life 
                        :mod (a / adult) 
                        :op-of (t / throughout))) 
            :poss (w / warmth)) 
      :time (s / succeed-01 
            :op-of (a3 / and 
                  :ARG1-of (p / pride-01 
                        :ARG0 (p2 / person 
                              :ARG0-of (s4 / study-01 
                                    :ARG1 (t2 / together)) 
                              :ARG2-of (s3 / share-01 
                                    :ARG0 (p3 / poor) 
                                    :ARG1 (h3 / horror 
                                          :op-of (a4 / and 
                                                :mod (h2 / have-rel-role-91 
                                                      :ARG2 (b / brother)) 
                                                :poss-of (j / joy 
                                                      :op-of (o / or 
                                                            :op1 (s2 / sea) 
                                                            :quant (h / holiday)))))) 
                              :domain (h4 / he))))))

# ::snt in the stephen reiss cup they beat muchfancied cowley conservative b thanks to excellent potting and generous handicaps
# ::tok in the stephen reiss cup they beat muchfancied cowley conservative b thanks to excellent potting and generous handicaps
# ::alignments 16-17|0.0 15-16|0.0.0 13-14|0 11-12|0.0.0.0 10-11|0.0.0.0.0 9-10|0.0.0.0.0.0 6-7|0.0.0.0.0.0.0 5-6|0.0.0.0.0.0.0.0 4-5|0.0.0.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:06.129
# ::node	0	excellent	13-14
# ::node	0.0	generous-41	16-17
# ::node	0.0.0	and	15-16
# ::node	0.0.0.0	thank-01	11-12
# ::node	0.0.0.0.0	b	10-11
# ::node	0.0.0.0.0.0	conservative	9-10
# ::node	0.0.0.0.0.0.0	beat-01	6-7
# ::node	0.0.0.0.0.0.0.0	they	5-6
# ::node	0.0.0.0.0.0.0.1	cup	4-5
# ::root	0	excellent
(e / excellent 
      :ARG1-of (g / generous-41 
            :op-of (a / and 
                  :ARG1-of (t / thank-01 
                        :ARG0 (b / b 
                              :mod (c / conservative 
                                    :ARG1-of (b2 / beat-01 
                                          :ARG0 (t2 / they) 
                                          :time (c2 / cup))))))))

# ::snt thanks to the spectacularly generous gift to chinese studies by sir run run shaw the campaign for oxford has now topped the 100 million mark
# ::tok thanks to the spectacularly generous gift to chinese studies by sir run run shaw the campaign for oxford has now topped the 100 million mark
# ::alignments 24-25|0.0.1.1 22-23|0.0.1.0 20-21|0.0.1.1.0 19-20|0.0.1.1.0.1 15-16|0.0.1.1.0.0 8-9|0.0.0 7-8|0.0.0.0.0.0.0+0.0.0.0.0.0+0.0.0.0.0+0.0.0.0 5-6|0.0 4-5|0 3-4|0.1 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:06.242
# ::node	0	generous-41	4-5
# ::node	0.0	gift-01	5-6
# ::node	0.0.0	study-01	8-9
# ::node	0.0.0.0	person	7-8
# ::node	0.0.0.0.0	country	7-8
# ::node	0.0.0.0.0.0	name	7-8
# ::node	0.0.0.0.0.0.0	"China"	7-8
# ::node	0.0.1	thank-01	0-1
# ::node	0.0.1.0	100	22-23
# ::node	0.0.1.1	mark-01	24-25
# ::node	0.0.1.1.0	top-02	20-21
# ::node	0.0.1.1.0.0	campaign-01	15-16
# ::node	0.0.1.1.0.1	now	19-20
# ::node	0.1	spectacular	3-4
# ::root	0	generous-41
# ::edge	country	name	name	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	generous-41	ARG1	gift-01	0	0.0	
# ::edge	generous-41	degree	spectacular	0	0.1	
# ::edge	gift-01	ARG1	study-01	0.0	0.0.0	
# ::edge	mark-01	ARG1	thank-01	0.0.1.1	0.0.1	
# ::edge	name	op1	"China"	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	person	mod	country	0.0.0.0	0.0.0.0.0	
# ::edge	study-01	ARG0	person	0.0.0	0.0.0.0	
# ::edge	thank-01	ARG0	100	0.0.1	0.0.1.0	
# ::edge	thank-01	ARG1	gift-01	0.0.1	0.0	
# ::edge	top-02	ARG0	campaign-01	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	top-02	ARG1	mark-01	0.0.1.1.0	0.0.1.1	
# ::edge	top-02	time	now	0.0.1.1.0	0.0.1.1.0.1	
(g2 / generous-41 
      :ARG1 (g / gift-01 
            :ARG1 (s / study-01 
                  :ARG0 (p / person 
                        :mod (c2 / country 
                              :name (n2 / name 
                                    :op1 "China")))) 
            :ARG1-of (t2 / thank-01 
                  :ARG0 100 
                  :ARG1-of (m / mark-01 
                        :ARG1-of (t / top-02 
                              :ARG0 (c / campaign-01) 
                              :time (n / now))))) 
      :degree (s2 / spectacular))

# ::snt i had a generous deal before a car and a parking space in london a company credit card and 15000 a year dash
# ::tok i had a generous deal before a car and a parking space in london a company credit card and 15000 a year dash
# ::alignments 21-22|0.0.0.0 19-20|0.1.0.0 18-19|0 17-18|0.2 16-17|0.1.0 15-16|0.1 13-14|0.0.0.1.0.0+0.0.0.1.0+0.0.0.1 11-12|0.0.2.1.0 8-9|0.0.2.1 7-8|0.0.2.0 5-6|0.0.2 4-5|0.0 3-4|0.0.0 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:06.450
# ::node	0	and	18-19
# ::node	0.0	deal-01	4-5
# ::node	0.0.0	generous-41	3-4
# ::node	0.0.0.0	year	21-22
# ::node	0.0.0.1	city	13-14
# ::node	0.0.0.1.0	name	13-14
# ::node	0.0.0.1.0.0	"London"	13-14
# ::node	0.0.1	i	0-1
# ::node	0.0.2	before	5-6
# ::node	0.0.2.0	car	7-8
# ::node	0.0.2.1	and	8-9
# ::node	0.0.2.1.0	space	11-12
# ::node	0.1	company	15-16
# ::node	0.1.0	credit-02	16-17
# ::node	0.1.0.0	15000	19-20
# ::node	0.2	card	17-18
# ::root	0	and
# ::edge	and	op1	company	0	0.1	
# ::edge	and	op1	space	0.0.2.1	0.0.2.1.0	
# ::edge	and	op2	card	0	0.2	
# ::edge	before	op1	car	0.0.2	0.0.2.0	
# ::edge	before	op2	and	0.0.2	0.0.2.1	
# ::edge	city	name	name	0.0.0.1	0.0.0.1.0	
# ::edge	credit-02	ARG0	15000	0.1.0	0.1.0.0	
# ::edge	credit-02	ARG1	company	0.1.0	0.1	
# ::edge	deal-01	ARG1	and	0.0	0	
# ::edge	deal-01	mod	i	0.0	0.0.1	
# ::edge	deal-01	time	before	0.0	0.0.2	
# ::edge	generous-41	ARG0	year	0.0.0	0.0.0.0	
# ::edge	generous-41	ARG1	city	0.0.0	0.0.0.1	
# ::edge	generous-41	ARG2	deal-01	0.0.0	0.0	
# ::edge	name	op1	"London"	0.0.0.1.0	0.0.0.1.0.0	
(a / and 
      :ARG1-of (d / deal-01 
            :ARG2-of (g / generous-41 
                  :ARG0 (y / year) 
                  :ARG1 (c4 / city 
                        :name (n / name 
                              :op1 "London"))) 
            :mod (i / i) 
            :time (b / before 
                  :op1 (c5 / car) 
                  :op2 (a2 / and 
                        :op1 (s / space)))) 
      :op1 (c3 / company 
            :ARG1-of (c2 / credit-02 
                  :ARG0 15000)) 
      :op2 (c / card))

# ::snt he stares at her as if he is reading her mind as if he knows the generous impulse that she has defected on
# ::tok he stares at her as if he is reading her mind as if he knows the generous impulse that she has defected on
# ::alignments 19-20|0.0.0.0.2 16-17|0 14-15|0.0.0 13-14|0.0 10-11|0.0.0.0.0.0 8-9|0.0.0.0 6-7|0.0.0.0.0 0-1|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:06.559
# ::node	0	generous-41	16-17
# ::node	0.0	he	13-14
# ::node	0.0.0	know-01	14-15
# ::node	0.0.0.0	read-01	8-9
# ::node	0.0.0.0.0	he	6-7
# ::node	0.0.0.0.0.0	mind	10-11
# ::node	0.0.0.0.1	he	0-1
# ::node	0.0.0.0.2	she	19-20
# ::root	0	generous-41
# ::edge	generous-41	ARG0	he	0	0.0	
# ::edge	know-01	ARG0	he	0.0.0	0.0	
# ::edge	know-01	ARG1	read-01	0.0.0	0.0.0.0	
# ::edge	mind	poss	he	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	read-01	ARG0	he	0.0.0.0	0.0.0.0.0	
# ::edge	read-01	ARG1	he	0.0.0.0	0.0.0.0.1	
# ::edge	read-01	ARG2	she	0.0.0.0	0.0.0.0.2	
(g / generous-41 
      :ARG0 (h / he 
            :ARG0-of (k / know-01 
                  :ARG1 (r / read-01 
                        :ARG0 (h2 / he 
                              :poss-of (m / mind)) 
                        :ARG1 (h3 / he) 
                        :ARG2 (s / she)))))

# ::snt they could have attempted to negotiate some sort of financial collaboration with the cashrich tv companies worked at bringing flexibility to their dealings with the cinema circuits or pushed for more generous agreements with the actt and other film unions that would encourage lowbudget films
# ::tok they could have attempted to negotiate some sort of financial collaboration with the cashrich tv companies worked at bringing flexibility to their dealings with the cinema circuits or pushed for more generous agreements with the actt and other film unions that would encourage lowbudget films
# ::alignments 44-45|0.2.0.0.0 42-43|0.2.0.0 39-40|0.2.0 38-39|0.2.0.1 37-38|0.2.0.2 36-37|0.2 32-33|0.0 31-32|0.0.0 28-29|0 27-28|0.1 25-26|0.1.0.1.1.0 22-23|0.1.0.1.1 19-20|0.1.0.1.0 18-19|0.1.0.1 16-17|0.1.0 15-16|0.1.0.0 10-11|0.1.0.0.0.0.0.0 9-10|0.1.0.0.0.0.0.0.0 7-8|0.1.0.0.0.0.0.1 6-7|0.1.0.0.0.0.0.1.0 5-6|0.1.0.0.0.0.0 3-4|0.1.0.0.0.0 1-2|0.1.0.0.0.0.1 0-1|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:06.866
# ::node	0	push-01	28-29
# ::node	0.0	agree-01	32-33
# ::node	0.0.0	generous-41	31-32
# ::node	0.1	or	27-28
# ::node	0.1.0	work-01	16-17
# ::node	0.1.0.0	company	15-16
# ::node	0.1.0.0.0	they	0-1
# ::node	0.1.0.0.0.0	attempt-01	3-4
# ::node	0.1.0.0.0.0.0	negotiate-01	5-6
# ::node	0.1.0.0.0.0.0.0	collaborate-01	10-11
# ::node	0.1.0.0.0.0.0.0.0	finance	9-10
# ::node	0.1.0.0.0.0.0.1	sort	7-8
# ::node	0.1.0.0.0.0.0.1.0	some	6-7
# ::node	0.1.0.0.0.0.1	possible	1-2
# ::node	0.1.0.1	bring-01	18-19
# ::node	0.1.0.1.0	flexibility	19-20
# ::node	0.1.0.1.1	deal-01	22-23
# ::node	0.1.0.1.1.0	cinema	25-26
# ::node	0.2	and	36-37
# ::node	0.2.0	union	39-40
# ::node	0.2.0.0	encourage-01	42-43
# ::node	0.2.0.0.0	film	44-45
# ::node	0.2.0.1	film	38-39
# ::node	0.2.0.2	other	37-38
# ::root	0	push-01
# ::edge	and	op1	push-01	0.2	0	
# ::edge	and	op2	union	0.2	0.2.0	
# ::edge	attempt-01	ARG0	they	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	attempt-01	ARG1	negotiate-01	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	bring-01	ARG1	flexibility	0.1.0.1	0.1.0.1.0	
# ::edge	bring-01	ARG2	deal-01	0.1.0.1	0.1.0.1.1	
# ::edge	collaborate-01	mod	finance	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0.0.0	
# ::edge	company	poss	they	0.1.0.0	0.1.0.0.0	
# ::edge	deal-01	ARG1	cinema	0.1.0.1.1	0.1.0.1.1.0	
# ::edge	encourage-01	ARG0	union	0.2.0.0	0.2.0	
# ::edge	encourage-01	ARG1	film	0.2.0.0	0.2.0.0.0	
# ::edge	generous-41	ARG2	agree-01	0.0.0	0.0	
# ::edge	negotiate-01	ARG1	collaborate-01	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	negotiate-01	ARG2	sort	0.1.0.0.0.0.0	0.1.0.0.0.0.0.1	
# ::edge	or	op1	work-01	0.1	0.1.0	
# ::edge	or	op2	push-01	0.1	0	
# ::edge	possible	domain	attempt-01	0.1.0.0.0.0.1	0.1.0.0.0.0	
# ::edge	push-01	ARG1	agree-01	0	0.0	
# ::edge	sort	mod	some	0.1.0.0.0.0.0.1	0.1.0.0.0.0.0.1.0	
# ::edge	union	mod	film	0.2.0	0.2.0.1	
# ::edge	union	mod	other	0.2.0	0.2.0.2	
# ::edge	work-01	ARG0	company	0.1.0	0.1.0.0	
# ::edge	work-01	ARG1	bring-01	0.1.0	0.1.0.1	
(p / push-01 
      :ARG1 (a2 / agree-01 
            :ARG2-of (g / generous-41)) 
      :op-of (o2 / or 
            :op1 (w / work-01 
                  :ARG0 (c2 / company 
                        :poss (t / they 
                              :ARG0-of (a3 / attempt-01 
                                    :ARG1 (n / negotiate-01 
                                          :ARG1 (c3 / collaborate-01 
                                                :mod (f4 / finance)) 
                                          :ARG2 (s / sort 
                                                :mod (s2 / some))) 
                                    :domain-of (p2 / possible)))) 
                  :ARG1 (b / bring-01 
                        :ARG1 (f3 / flexibility) 
                        :ARG2 (d / deal-01 
                              :ARG1 (c / cinema))))) 
      :op-of (a / and 
            :op1 (u / union 
                  :ARG0-of (e / encourage-01 
                        :ARG1 (f / film)) 
                  :mod (f2 / film) 
                  :mod (o / other))))

# ::snt with both clubs in europe next year the generous sponsorship of this event will help them with their expenses
# ::tok with both clubs in europe next year the generous sponsorship of this event will help them with their expenses
# ::alignments 18-19|0.0.3.1 14-15|0.0.3 12-13|0.0.3.0 11-12|0.0.3.0.0 8-9|0 6-7|0.0 5-6|0.0.1 4-5|0.0.2.0.0+0.0.2.0+0.0.2 2-3|0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:07.001
# ::node	0	generous-41	8-9
# ::node	0.0	year	6-7
# ::node	0.0.0	club	2-3
# ::node	0.0.0.0	both	1-2
# ::node	0.0.1	next	5-6
# ::node	0.0.2	continent	4-5
# ::node	0.0.2.0	name	4-5
# ::node	0.0.2.0.0	"Europe"	4-5
# ::node	0.0.3	help-01	14-15
# ::node	0.0.3.0	event	12-13
# ::node	0.0.3.0.0	this	11-12
# ::node	0.0.3.1	expend-01	18-19
# ::root	0	generous-41
# ::edge	club	location	year	0.0.0	0.0	
# ::edge	club	mod	both	0.0.0	0.0.0.0	
# ::edge	continent	name	name	0.0.2	0.0.2.0	
# ::edge	event	mod	this	0.0.3.0	0.0.3.0.0	
# ::edge	generous-41	ARG0	year	0	0.0	
# ::edge	help-01	ARG0	event	0.0.3	0.0.3.0	
# ::edge	help-01	ARG1	expend-01	0.0.3	0.0.3.1	
# ::edge	help-01	time	year	0.0.3	0.0	
# ::edge	name	op1	"Europe"	0.0.2.0	0.0.2.0.0	
# ::edge	year	mod	continent	0.0	0.0.2	
# ::edge	year	mod	next	0.0	0.0.1	
(g / generous-41 
      :ARG0 (y / year 
            :location-of (c2 / club 
                  :mod (b / both)) 
            :mod (n / next) 
            :mod (c / continent 
                  :name (n2 / name 
                        :op1 "Europe")) 
            :time-of (h / help-01 
                  :ARG0 (e2 / event 
                        :mod (t / this)) 
                  :ARG1 (e / expend-01))))

# ::snt the central argument of its offer document is that far from trying to steal the electrical goods chain from under shareholders noses it is in fact making a very generous bid for a company which is looking distinctly shopsoiled
# ::tok the central argument of its offer document is that far from trying to steal the electrical goods chain from under shareholders noses it is in fact making a very generous bid for a company which is looking distinctly shopsoiled
# ::alignments 37-38|0.1 33-34|0.0 30-31|0 29-30|0.2 28-29|0.2.1 25-26|0.0.0 22-23|0.2.0 17-18|0.2.0.0.0.0 16-17|0.2.0.0.0.0.0 15-16|0.2.0.0.0.0.0.0 13-14|0.2.0.0.0 11-12|0.2.0.0 9-10|0.2.0.0.2 6-7|0.2.0.0.1 5-6|0.2.0.0.1.1 2-3|0.2.0.0.1.0 1-2|0.2.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:07.305
# ::node	0	bid-01	30-31
# ::node	0.0	company	33-34
# ::node	0.0.0	fact	25-26
# ::node	0.1	distinct	37-38
# ::node	0.2	generous-41	29-30
# ::node	0.2.0	it	22-23
# ::node	0.2.0.0	try-01	11-12
# ::node	0.2.0.0.0	steal-01	13-14
# ::node	0.2.0.0.0.0	chain	17-18
# ::node	0.2.0.0.0.0.0	good	16-17
# ::node	0.2.0.0.0.0.0.0	electricity	15-16
# ::node	0.2.0.0.1	document	6-7
# ::node	0.2.0.0.1.0	argue-01	2-3
# ::node	0.2.0.0.1.0.0	central	1-2
# ::node	0.2.0.0.1.1	offer-01	5-6
# ::node	0.2.0.0.2	far	9-10
# ::node	0.2.1	very	28-29
# ::root	0	bid-01
# ::edge	argue-01	ARG1	document	0.2.0.0.1.0	0.2.0.0.1	
# ::edge	argue-01	mod	central	0.2.0.0.1.0	0.2.0.0.1.0.0	
# ::edge	bid-01	ARG0	company	0	0.0	
# ::edge	bid-01	ARG1	distinct	0	0.1	
# ::edge	document	source	offer-01	0.2.0.0.1	0.2.0.0.1.1	
# ::edge	fact	location	company	0.0.0	0.0	
# ::edge	generous-41	ARG1	it	0.2	0.2.0	
# ::edge	generous-41	ARG2	bid-01	0.2	0	
# ::edge	generous-41	degree	very	0.2	0.2.1	
# ::edge	good	consist	chain	0.2.0.0.0.0.0	0.2.0.0.0.0	
# ::edge	good	mod	electricity	0.2.0.0.0.0.0	0.2.0.0.0.0.0.0	
# ::edge	steal-01	ARG1	chain	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	try-01	ARG0	it	0.2.0.0	0.2.0	
# ::edge	try-01	ARG1	steal-01	0.2.0.0	0.2.0.0.0	
# ::edge	try-01	ARG2	document	0.2.0.0	0.2.0.0.1	
# ::edge	try-01	mod	far	0.2.0.0	0.2.0.0.2	
(b / bid-01 
      :ARG0 (c / company 
            :location-of (f / fact)) 
      :ARG1 (d / distinct) 
      :ARG2-of (g / generous-41 
            :ARG1 (i / it 
                  :ARG0-of (t / try-01 
                        :ARG1 (s / steal-01 
                              :ARG1 (c2 / chain 
                                    :consist-of (g2 / good 
                                          :mod (e / electricity)))) 
                        :ARG2 (d2 / document 
                              :ARG1-of (a / argue-01 
                                    :mod (c3 / central)) 
                              :source (o / offer-01)) 
                        :mod (f2 / far))) 
            :degree (v / very)))

# ::snt dating back to approximately 1928 this handsome traditionally constructed semidetached property offers spacious accommodation of very generous proportions
# ::tok dating back to approximately 1928 this handsome traditionally constructed semidetached property offers spacious accommodation of very generous proportions
# ::alignments 17-18|0.1.1.0.0.0 16-17|0.1.1.0.0 15-16|0.1.1.0.0.1 13-14|0.1.1.0 12-13|0.1.1.0.1 11-12|0.1 10-11|0.1.0 8-9|0 7-8|0.2 5-6|0.0 4-5|0.1.2.1+0.1.2 3-4|0.1.2.0 1-2|0.1.1.1 0-1|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:07.580
# ::node	0	construct-01	8-9
# ::node	0.0	this	5-6
# ::node	0.1	offer-01	11-12
# ::node	0.1.0	property	10-11
# ::node	0.1.1	date-02	0-1
# ::node	0.1.1.0	accommodation	13-14
# ::node	0.1.1.0.0	generous-41	16-17
# ::node	0.1.1.0.0.0	proportion	17-18
# ::node	0.1.1.0.0.1	very	15-16
# ::node	0.1.1.0.1	spacious	12-13
# ::node	0.1.1.1	back	1-2
# ::node	0.1.2	date-entity	4-5
# ::node	0.1.2.0	approximately	3-4
# ::node	0.1.2.1	1928	4-5
# ::node	0.2	tradition	7-8
# ::root	0	construct-01
# ::edge	accommodation	mod	spacious	0.1.1.0	0.1.1.0.1	
# ::edge	approximately	op1	date-entity	0.1.2.0	0.1.2	
# ::edge	construct-01	ARG0	this	0	0.0	
# ::edge	construct-01	ARG1	offer-01	0	0.1	
# ::edge	construct-01	mod	tradition	0	0.2	
# ::edge	date-02	ARG0	accommodation	0.1.1	0.1.1.0	
# ::edge	date-02	ARG1	offer-01	0.1.1	0.1	
# ::edge	date-02	direction	back	0.1.1	0.1.1.1	
# ::edge	date-entity	year	1928	0.1.2	0.1.2.1	
# ::edge	generous-41	ARG0	accommodation	0.1.1.0.0	0.1.1.0	
# ::edge	generous-41	ARG1	proportion	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	generous-41	degree	very	0.1.1.0.0	0.1.1.0.0.1	
# ::edge	offer-01	ARG0	property	0.1	0.1.0	
# ::edge	offer-01	time	date-entity	0.1	0.1.2	
(c / construct-01 
      :ARG0 (t2 / this) 
      :ARG1 (o / offer-01 
            :ARG0 (p2 / property) 
            :ARG1-of (d2 / date-02 
                  :ARG0 (a / accommodation 
                        :ARG0-of (g / generous-41 
                              :ARG1 (p / proportion) 
                              :degree (v / very)) 
                        :mod (s / spacious)) 
                  :direction (b / back)) 
            :time (d / date-entity 
                  :op-of (a2 / approximately) 
                  :year 1928)) 
      :mod (t / tradition))

# ::snt it allowed generous remission for people who disassociated themselves from the movement and the more information they gave the more remission they got
# ::tok it allowed generous remission for people who disassociated themselves from the movement and the more information they gave the more remission they got
# ::alignments 21-22|0.2 16-17|0.0.0.0 15-16|0.1.1 12-13|0.1 11-12|0.1.0 2-3|0.0.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:07.651
# ::node	0	allow-01	1-2
# ::node	0.0	it	0-1
# ::node	0.0.0	generous-41	2-3
# ::node	0.0.0.0	they	16-17
# ::node	0.1	and	12-13
# ::node	0.1.0	movement	11-12
# ::node	0.1.1	information	15-16
# ::node	0.2	they	21-22
# ::root	0	allow-01
# ::edge	allow-01	ARG0	it	0	0.0	
# ::edge	allow-01	ARG1	and	0	0.1	
# ::edge	and	op1	movement	0.1	0.1.0	
# ::edge	and	op2	information	0.1	0.1.1	
# ::edge	generous-41	ARG0	it	0.0.0	0.0	
# ::edge	generous-41	ARG1	they	0.0.0	0.0.0.0	
# ::edge	they	op1	allow-01	0.2	0	
(a2 / allow-01 
      :ARG0 (i2 / it 
            :ARG0-of (g / generous-41 
                  :ARG1 (t2 / they))) 
      :ARG1 (a / and 
            :op1 (m / movement) 
            :op2 (i / information)) 
      :op-of (t / they))

# ::snt  but others have been far less generous
# ::tok but others have been far less generous
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:07.651
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt it is not surprising that other countries have become reluctant to go on being more generous than the state which is responsible for hong kong
# ::tok it is not surprising that other countries have become reluctant to go on being more generous than the state which is responsible for hong kong
# ::alignments 23-25|0.1.0.0.0.0+0.1.0.0.0.1+0.1.0.0.0+0.1.0.0 21-22|0.1.0 18-19|0.1 15-16|0 9-10|0.0.0.0 8-9|0.0.0 6-7|0.0 5-6|0.0.0.0.0.1 3-4|0.0.0.0.0 0-1|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:07.964
# ::node	0	generous-41	15-16
# ::node	0.0	country	6-7
# ::node	0.0.0	become-01	8-9
# ::node	0.0.0.0	reluctant	9-10
# ::node	0.0.0.0.0	surprise-01	3-4
# ::node	0.0.0.0.0.0	it	0-1
# ::node	0.0.0.0.0.1	other	5-6
# ::node	0.1	state	18-19
# ::node	0.1.0	responsible-41	21-22
# ::node	0.1.0.0	country	23-25
# ::node	0.1.0.0.0	name	23-25
# ::node	0.1.0.0.0.0	"kong"	23-25
# ::node	0.1.0.0.0.1	"hong"	23-25
# ::root	0	generous-41
# ::edge	become-01	ARG1	country	0.0.0	0.0	
# ::edge	become-01	ARG2	reluctant	0.0.0	0.0.0.0	
# ::edge	country	name	name	0.1.0.0	0.1.0.0.0	
# ::edge	generous-41	ARG0	country	0	0.0	
# ::edge	generous-41	ARG1	state	0	0.1	
# ::edge	name	op1	"kong"	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	name	op2	"hong"	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	responsible-41	ARG1	state	0.1.0	0.1	
# ::edge	responsible-41	ARG2	country	0.1.0	0.1.0.0	
# ::edge	surprise-01	ARG0	reluctant	0.0.0.0.0	0.0.0.0	
# ::edge	surprise-01	ARG1	it	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	surprise-01	ARG2	other	0.0.0.0.0	0.0.0.0.0.1	
(g / generous-41 
      :ARG0 (c2 / country 
            :ARG1-of (b / become-01 
                  :ARG2 (r2 / reluctant 
                        :ARG0-of (s2 / surprise-01 
                              :ARG1 (i / it) 
                              :ARG2 (o / other))))) 
      :ARG1 (s / state 
            :ARG1-of (r / responsible-41 
                  :ARG2 (c / country 
                        :name (n / name 
                              :op1 "kong" 
                              :op2 "hong")))))

# ::snt he must have enjoyed impressing his father who must have enjoyed being impressed for tom was a generous parent with all too few opportunities for indulging his proper pride in his scholarly son
# ::tok he must have enjoyed impressing his father who must have enjoyed being impressed for tom was a generous parent with all too few opportunities for indulging his proper pride in his scholarly son
# ::alignments 32-33|0.0.0.0.0.0.1+0.0.0.0.0.0 28-29|0.0.0.0.0.0.0 27-28|0.0.0.0.0.0.0.0 23-24|0.0.0.0.0 22-23|0.0.0.0.0.1 21-22|0.0.0.0.0.1.0 20-21|0.0.0.0.0.2 18-19|0.1.0 17-18|0.1.0.0 12-13|0 10-11|0.1 6-7|0.0.1+0.0 3-4|0.0.0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:08.347
# ::node	0	impress-01	12-13
# ::node	0.0	have-rel-role-91	6-7
# ::node	0.0.0	he	0-1
# ::node	0.0.0.0	enjoy-01	3-4
# ::node	0.0.0.0.0	opportunity	23-24
# ::node	0.0.0.0.0.0	have-rel-role-91	32-33
# ::node	0.0.0.0.0.0.0	pride-01	28-29
# ::node	0.0.0.0.0.0.0.0	proper	27-28
# ::node	0.0.0.0.0.0.1	son	32-33
# ::node	0.0.0.0.0.1	few	22-23
# ::node	0.0.0.0.0.1.0	too	21-22
# ::node	0.0.0.0.0.2	all	20-21
# ::node	0.0.1	father	6-7
# ::node	0.1	enjoy-01	10-11
# ::node	0.1.0	parent	18-19
# ::node	0.1.0.0	generous-41	17-18
# ::root	0	impress-01
# ::edge	enjoy-01	ARG0	he	0.0.0.0	0.0.0	
# ::edge	enjoy-01	ARG0	parent	0.1	0.1.0	
# ::edge	enjoy-01	ARG1	impress-01	0.1	0	
# ::edge	enjoy-01	ARG1	opportunity	0.0.0.0	0.0.0.0.0	
# ::edge	few	degree	too	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	generous-41	ARG1	parent	0.1.0.0	0.1.0	
# ::edge	have-rel-role-91	ARG1	he	0.0	0.0.0	
# ::edge	have-rel-role-91	ARG1	opportunity	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	have-rel-role-91	ARG2	father	0.0	0.0.1	
# ::edge	have-rel-role-91	ARG2	son	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	impress-01	ARG1	have-rel-role-91	0	0.0	
# ::edge	opportunity	quant	all	0.0.0.0.0	0.0.0.0.0.2	
# ::edge	opportunity	quant	few	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	pride-01	ARG1	have-rel-role-91	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	pride-01	mod	proper	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
(i / impress-01 
      :ARG1 (h2 / have-rel-role-91 
            :ARG1 (h3 / he 
                  :ARG0-of (e2 / enjoy-01 
                        :ARG1 (o / opportunity 
                              :ARG1-of (h / have-rel-role-91 
                                    :ARG1-of (p / pride-01 
                                          :mod (p2 / proper)) 
                                    :ARG2 (s / son)) 
                              :quant (f / few 
                                    :degree (t / too)) 
                              :quant (a / all)))) 
            :ARG2 (f2 / father)) 
      :ARG1-of (e / enjoy-01 
            :ARG0 (p3 / parent 
                  :ARG1-of (g / generous-41))))

# ::snt yet because of the safety net and generous government subsidies the poll tax in wandsworth will be less than 200 compared with 472 in oxford
# ::tok yet because of the safety net and generous government subsidies the poll tax in wandsworth will be less than 200 compared with 472 in oxford
# ::alignments 20-21|0.0.1.0.0 19-20|0.0.1.0.0.0 17-18|0.0.1.0.1.0 12-13|0.0.1.0 11-12|0.0.1.0.1 9-10|0.0.1 7-8|0.0.1.1 6-7|0.0 5-6|0.0.0 4-5|0.0.0.0 1-2|0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:08.479
# ::node	0	cause-01	1-2
# ::node	0.0	and	6-7
# ::node	0.0.0	net	5-6
# ::node	0.0.0.0	safe-41	4-5
# ::node	0.0.1	subsidize-01	9-10
# ::node	0.0.1.0	tax-01	12-13
# ::node	0.0.1.0.0	compare-01	20-21
# ::node	0.0.1.0.0.0	200	19-20
# ::node	0.0.1.0.1	poll-01	11-12
# ::node	0.0.1.0.1.0	less	17-18
# ::node	0.0.1.1	generous-41	7-8
# ::node	0.1	yet	0-1
# ::root	0	cause-01
# ::edge	and	op1	net	0.0	0.0.0	
# ::edge	and	op2	subsidize-01	0.0	0.0.1	
# ::edge	cause-01	ARG0	and	0	0.0	
# ::edge	cause-01	mod	yet	0	0.1	
# ::edge	compare-01	ARG0	200	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	generous-41	ARG1	subsidize-01	0.0.1.1	0.0.1	
# ::edge	net	mod	safe-41	0.0.0	0.0.0.0	
# ::edge	poll-01	ARG1	less	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	subsidize-01	ARG1	tax-01	0.0.1	0.0.1.0	
# ::edge	tax-01	ARG1	compare-01	0.0.1.0	0.0.1.0.0	
# ::edge	tax-01	ARG3	poll-01	0.0.1.0	0.0.1.0.1	
(c2 / cause-01 
      :ARG0 (a / and 
            :op1 (n / net 
                  :mod (s2 / safe-41)) 
            :op2 (s / subsidize-01 
                  :ARG1 (t / tax-01 
                        :ARG1 (c / compare-01 
                              :ARG0 200) 
                        :ARG3 (p / poll-01 
                              :ARG1 (l / less))) 
                  :ARG1-of (g / generous-41))) 
      :mod (y / yet))

# ::snt analysts noted that the latest staff reduction programme is considerably less generous than previous ones
# ::tok analysts noted that the latest staff reduction programme is considerably less generous than previous ones
# ::alignments 14-15|0.1.1 13-14|0.1.1.1 11-12|0.1 10-11|0.1.2 9-10|0.1.1.0 7-8|0.1.0.0.0 6-7|0.1.0.0 5-6|0.1.0.1+0.1.0 4-5|0.1.0.1.0.0+0.1.0.1.0 1-2|0 0-1|0.0.0+0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:08.540
# ::node	0	note-01	1-2
# ::node	0.0	person	0-1
# ::node	0.0.0	analyze-01	0-1
# ::node	0.1	generous-41	11-12
# ::node	0.1.0	person	5-6
# ::node	0.1.0.0	reduce-01	6-7
# ::node	0.1.0.0.0	program	7-8
# ::node	0.1.0.1	staff-01	5-6
# ::node	0.1.0.1.0	late	4-5
# ::node	0.1.0.1.0.0	most	4-5
# ::node	0.1.1	one	14-15
# ::node	0.1.1.0	considerable	9-10
# ::node	0.1.1.1	previous	13-14
# ::node	0.1.2	less	10-11
# ::root	0	note-01
# ::edge	analyze-01	ARG0	person	0.0.0	0.0	
# ::edge	considerable	compared-to	one	0.1.1.0	0.1.1	
# ::edge	generous-41	ARG0	person	0.1	0.1.0	
# ::edge	generous-41	ARG1	one	0.1	0.1.1	
# ::edge	generous-41	degree	less	0.1	0.1.2	
# ::edge	late	degree	most	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	note-01	ARG0	person	0	0.0	
# ::edge	note-01	ARG1	generous-41	0	0.1	
# ::edge	one	mod	previous	0.1.1	0.1.1.1	
# ::edge	program	mod	reduce-01	0.1.0.0.0	0.1.0.0	
# ::edge	reduce-01	ARG1	person	0.1.0.0	0.1.0	
# ::edge	staff-01	ARG2	person	0.1.0.1	0.1.0	
# ::edge	staff-01	time	late	0.1.0.1	0.1.0.1.0	
(n / note-01 
      :ARG0 (p4 / person 
            :ARG0-of (a / analyze-01)) 
      :ARG1 (g / generous-41 
            :ARG0 (p3 / person 
                  :ARG1-of (r / reduce-01 
                        :mod-of (p2 / program)) 
                  :ARG2-of (s / staff-01 
                        :time (l2 / late 
                              :degree (m / most)))) 
            :ARG1 (o / one 
                  :compared-to-of (c / considerable) 
                  :mod (p / previous)) 
            :degree (l / less)))

# ::snt although generous tax incentives have simulated 300 foreign joint ventures with hungary in the past year some highprofile privatisations of hungarian companies to foreigners have stirred criticism that the sales were too cheap
# ::tok although generous tax incentives have simulated 300 foreign joint ventures with hungary in the past year some highprofile privatisations of hungarian companies to foreigners have stirred criticism that the sales were too cheap
# ::alignments 32-33|0.1 31-32|0.1.0 26-27|0 25-26|0.2 23-24|0.2.1.1.0.1.0 21-22|0.2.0 16-17|0.2.1.0 15-16|0.2.1.1.0.0 14-15|0.2.1.1.0.0.0 9-10|0.2.2 8-9|0.2.2.0 7-8|0.2.2.1 6-7|0.0 3-4|0.2.1.1.0+0.2.1.1 2-3|0.2.1.1.0.1 1-2|0.2.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:09.001
# ::node	0	criticize-01	26-27
# ::node	0.0	300	6-7
# ::node	0.1	cheap	32-33
# ::node	0.1.0	too	31-32
# ::node	0.2	stir-04	25-26
# ::node	0.2.0	company	21-22
# ::node	0.2.1	generous-41	1-2
# ::node	0.2.1.0	some	16-17
# ::node	0.2.1.1	thing	3-4
# ::node	0.2.1.1.0	incentivize-01	3-4
# ::node	0.2.1.1.0.0	year	15-16
# ::node	0.2.1.1.0.0.0	past	14-15
# ::node	0.2.1.1.0.1	tax-01	2-3
# ::node	0.2.1.1.0.1.0	foreigner	23-24
# ::node	0.2.2	venture	9-10
# ::node	0.2.2.0	joint	8-9
# ::node	0.2.2.1	foreign	7-8
# ::root	0	criticize-01
# ::edge	cheap	degree	too	0.1	0.1.0	
# ::edge	criticize-01	ARG0	300	0	0.0	
# ::edge	criticize-01	ARG1	cheap	0	0.1	
# ::edge	generous-41	ARG0	some	0.2.1	0.2.1.0	
# ::edge	generous-41	ARG1	stir-04	0.2.1	0.2	
# ::edge	generous-41	ARG2	thing	0.2.1	0.2.1.1	
# ::edge	incentivize-01	ARG0	thing	0.2.1.1.0	0.2.1.1	
# ::edge	incentivize-01	ARG1	year	0.2.1.1.0	0.2.1.1.0.0	
# ::edge	incentivize-01	mod	tax-01	0.2.1.1.0	0.2.1.1.0.1	
# ::edge	stir-04	ARG0	company	0.2	0.2.0	
# ::edge	stir-04	ARG1	criticize-01	0.2	0	
# ::edge	tax-01	ARG0	foreigner	0.2.1.1.0.1	0.2.1.1.0.1.0	
# ::edge	venture	mod	foreign	0.2.2	0.2.2.1	
# ::edge	venture	mod	joint	0.2.2	0.2.2.0	
# ::edge	venture	op1	stir-04	0.2.2	0.2	
# ::edge	year	mod	past	0.2.1.1.0.0	0.2.1.1.0.0.0	
(c2 / criticize-01 
      :ARG0 300 
      :ARG1 (c / cheap 
            :degree (t / too)) 
      :ARG1-of (s / stir-04 
            :ARG0 (c3 / company) 
            :ARG1-of (g / generous-41 
                  :ARG0 (s2 / some) 
                  :ARG2 (t2 / thing 
                        :ARG0-of (i / incentivize-01 
                              :ARG1 (y / year 
                                    :mod (p / past)) 
                              :mod (t3 / tax-01 
                                    :ARG0 (f / foreigner))))) 
            :op-of (v / venture 
                  :mod (j / joint) 
                  :mod (f2 / foreign))))

# ::snt he thanked laurentperrier for their generous award and said it would be spent in building the laurent perrier hide to overlok the wild fowl area and to be used as a classroom to educate children in wild game wild flower and butterfly conservation
# ::tok he thanked laurentperrier for their generous award and said it would be spent in building the laurent perrier hide to overlok the wild fowl area and to be used as a classroom to educate children in wild game wild flower and butterfly conservation
# ::alignments 42-43|0.1 40-41|0 38-39|0.0.2.0.0 37-38|0.0.2.0.2 36-37|0.0.2.0.1.1.0 34-35|0.0.1.1 33-34|0.0.1 31-32|0.0.1.0 28-29|0.0 25-26|0.0.2 24-25|0.0.0 22-23|0.0.0.0 18-19|0.0.2.0 14-15|0.0.2.0.1 12-13|0.0.2.0.1.1 9-10|0.0.2.0.1.0 8-9|0.0.2.0.1.1.1 7-8|0.0.2.0.1.1.1.1 6-7|0.0.2.0.1.1.1.0.0 5-6|0.0.2.0.1.1.1.0.0.0 0-1|0.0.2.0.1.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:09.638
# ::node	0	and	40-41
# ::node	0.0	use-01	28-29
# ::node	0.0.0	area	24-25
# ::node	0.0.0.0	wild	22-23
# ::node	0.0.1	educate-01	33-34
# ::node	0.0.1.0	classroom	31-32
# ::node	0.0.1.1	child	34-35
# ::node	0.0.2	and	25-26
# ::node	0.0.2.0	hide-01	18-19
# ::node	0.0.2.0.0	wild	38-39
# ::node	0.0.2.0.1	build-01	14-15
# ::node	0.0.2.0.1.0	it	9-10
# ::node	0.0.2.0.1.1	spend-01	12-13
# ::node	0.0.2.0.1.1.0	wild	36-37
# ::node	0.0.2.0.1.1.1	say-01	8-9
# ::node	0.0.2.0.1.1.1.0	he	0-1
# ::node	0.0.2.0.1.1.1.0.0	award-01	6-7
# ::node	0.0.2.0.1.1.1.0.0.0	generous-41	5-6
# ::node	0.0.2.0.1.1.1.1	and	7-8
# ::node	0.0.2.0.2	game	37-38
# ::node	0.1	conserve-01	42-43
# ::root	0	and
# ::edge	and	op1	say-01	0.0.2.0.1.1.1.1	0.0.2.0.1.1.1	
# ::edge	and	op1	use-01	0	0.0	
# ::edge	and	op1	use-01	0.0.2	0.0	
# ::edge	and	op2	conserve-01	0	0.1	
# ::edge	area	mod	wild	0.0.0	0.0.0.0	
# ::edge	award-01	ARG1	he	0.0.2.0.1.1.1.0.0	0.0.2.0.1.1.1.0	
# ::edge	build-01	ARG0	it	0.0.2.0.1	0.0.2.0.1.0	
# ::edge	build-01	ARG1	hide-01	0.0.2.0.1	0.0.2.0	
# ::edge	educate-01	ARG0	classroom	0.0.1	0.0.1.0	
# ::edge	educate-01	ARG1	child	0.0.1	0.0.1.1	
# ::edge	generous-41	ARG1	award-01	0.0.2.0.1.1.1.0.0.0	0.0.2.0.1.1.1.0.0	
# ::edge	hide-01	ARG0	wild	0.0.2.0	0.0.2.0.0	
# ::edge	hide-01	ARG1	and	0.0.2.0	0.0.2	
# ::edge	hide-01	ARG2	game	0.0.2.0	0.0.2.0.2	
# ::edge	say-01	ARG0	he	0.0.2.0.1.1.1	0.0.2.0.1.1.1.0	
# ::edge	say-01	ARG1	spend-01	0.0.2.0.1.1.1	0.0.2.0.1.1	
# ::edge	spend-01	ARG0	wild	0.0.2.0.1.1	0.0.2.0.1.1.0	
# ::edge	spend-01	ARG1	build-01	0.0.2.0.1.1	0.0.2.0.1	
# ::edge	use-01	ARG1	area	0.0	0.0.0	
# ::edge	use-01	ARG2	educate-01	0.0	0.0.1	
(a / and 
      :op1 (u / use-01 
            :ARG1 (a3 / area 
                  :mod (w3 / wild)) 
            :ARG2 (e / educate-01 
                  :ARG0 (c3 / classroom) 
                  :ARG1 (c2 / child)) 
            :op-of (a2 / and 
                  :ARG1-of (h / hide-01 
                        :ARG0 (w / wild) 
                        :ARG1-of (b / build-01 
                              :ARG0 (i / it) 
                              :ARG1-of (s / spend-01 
                                    :ARG0 (w2 / wild) 
                                    :ARG1-of (s2 / say-01 
                                          :ARG0 (h2 / he 
                                                :ARG1-of (a5 / award-01 
                                                      :ARG1-of (g2 / generous-41))) 
                                          :op-of (a4 / and)))) 
                        :ARG2 (g / game)))) 
      :op2 (c / conserve-01))

# ::snt indeed some of us make up a weekend there in order to meet each other and talk and drink away half the night and more as in the young old days in alans bookwalled bookmans generous house
# ::tok indeed some of us make up a weekend there in order to meet each other and talk and drink away half the night and more as in the young old days in alans bookwalled bookmans generous house
# ::alignments 36-37|0.0.0 35-36|0.0.0.0 30-31|0.0.0.0.1.1+0.0.0.0.1 29-30|0.0.0.0.1.1.0 28-29|0.0.0.0.1.0 23-24|0.0.1.2 22-23|0.0.0.0.0 20-21|0.0.1.1.2 19-20|0.0.1.1.3 18-19|0.0.1.1 17-18|0 16-17|0.0 15-16|0.0.1 14-15|0.0.1.0 13-14|0.0.1.0.0 7-8|0.0.1.1.1 1-2|0.0.1.1.0 0-1|0.0.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:09.925
# ::node	0	and	17-18
# ::node	0.0	talk-01	16-17
# ::node	0.0.0	house	36-37
# ::node	0.0.0.0	generous-41	35-36
# ::node	0.0.0.0.0	night	22-23
# ::node	0.0.0.0.1	temporal-quantity	30-31
# ::node	0.0.0.0.1.0	young	28-29
# ::node	0.0.0.0.1.1	day	30-31
# ::node	0.0.0.0.1.1.0	old	29-30
# ::node	0.0.1	and	15-16
# ::node	0.0.1.0	other	14-15
# ::node	0.0.1.0.0	each	13-14
# ::node	0.0.1.1	drink-01	18-19
# ::node	0.0.1.1.0	some	1-2
# ::node	0.0.1.1.0.0	indeed	0-1
# ::node	0.0.1.1.1	weekend	7-8
# ::node	0.0.1.1.2	half	20-21
# ::node	0.0.1.1.3	away	19-20
# ::node	0.0.1.2	and	23-24
# ::root	0	and
# ::edge	and	op1	other	0.0.1	0.0.1.0	
# ::edge	and	op1	talk-01	0	0.0	
# ::edge	and	op2	talk-01	0.0.1	0.0	
# ::edge	and	op3	drink-01	0.0.1	0.0.1.1	
# ::edge	and	op4	and	0.0.1	0.0.1.2	
# ::edge	day	mod	old	0.0.0.0.1.1	0.0.0.0.1.1.0	
# ::edge	drink-01	ARG0	some	0.0.1.1	0.0.1.1.0	
# ::edge	drink-01	ARG1	weekend	0.0.1.1	0.0.1.1.1	
# ::edge	drink-01	ARG2	half	0.0.1.1	0.0.1.1.2	
# ::edge	drink-01	direction	away	0.0.1.1	0.0.1.1.3	
# ::edge	generous-41	ARG0	night	0.0.0.0	0.0.0.0.0	
# ::edge	generous-41	ARG1	temporal-quantity	0.0.0.0	0.0.0.0.1	
# ::edge	generous-41	ARG2	house	0.0.0.0	0.0.0	
# ::edge	other	mod	each	0.0.1.0	0.0.1.0.0	
# ::edge	some	mod	indeed	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	talk-01	ARG0	house	0.0	0.0.0	
# ::edge	temporal-quantity	unit	day	0.0.0.0.1	0.0.0.0.1.1	
# ::edge	young	op1	temporal-quantity	0.0.0.0.1.0	0.0.0.0.1	
(a3 / and 
      :op1 (t2 / talk-01 
            :ARG0 (h / house 
                  :ARG2-of (g / generous-41 
                        :ARG0 (n / night) 
                        :ARG1 (t / temporal-quantity 
                              :op-of (y / young) 
                              :unit (d / day 
                                    :mod (o / old))))) 
            :op-of (a4 / and 
                  :op1 (o2 / other 
                        :mod (e / each)) 
                  :op2 (d2 / drink-01 
                        :ARG0 (s / some 
                              :mod (i / indeed)) 
                        :ARG1 (w / weekend) 
                        :ARG2 (h2 / half) 
                        :direction (a2 / away)) 
                  :op3 (a / and))))

# ::snt bearing in mind that all food has to be brought in by backpack or helicopter the quality is tolerable and the quantity amazingly generous by british standards
# ::tok bearing in mind that all food has to be brought in by backpack or helicopter the quality is tolerable and the quantity amazingly generous by british standards
# ::alignments 26-27|0.0.1 23-24|0.0 22-23|0.0.2 21-22|0.0.3 19-20|0 16-17|0.0.0 14-15|0.0.2.0.0.0 13-14|0.0.2.0.0.0.0 5-6|0.0.2.0.0 4-5|0.0.2.0.0.1 2-3|0.0.2.0.1 0-1|0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:10.062
# ::node	0	and	19-20
# ::node	0.0	generous-41	23-24
# ::node	0.0.0	quality	16-17
# ::node	0.0.1	standard	26-27
# ::node	0.0.2	amaze-01	22-23
# ::node	0.0.2.0	bear-02	0-1
# ::node	0.0.2.0.0	food	5-6
# ::node	0.0.2.0.0.0	helicopter	14-15
# ::node	0.0.2.0.0.0.0	or	13-14
# ::node	0.0.2.0.0.1	all	4-5
# ::node	0.0.2.0.1	mind	2-3
# ::node	0.0.3	quantity	21-22
# ::root	0	and
# ::edge	amaze-01	ARG1	generous-41	0.0.2	0.0	
# ::edge	and	op1	generous-41	0	0.0	
# ::edge	bear-02	ARG0	food	0.0.2.0	0.0.2.0.0	
# ::edge	bear-02	ARG1	amaze-01	0.0.2.0	0.0.2	
# ::edge	bear-02	location	mind	0.0.2.0	0.0.2.0.1	
# ::edge	food	quant	all	0.0.2.0.0	0.0.2.0.0.1	
# ::edge	generous-41	ARG0	quality	0.0	0.0.0	
# ::edge	generous-41	ARG1	standard	0.0	0.0.1	
# ::edge	helicopter	part	food	0.0.2.0.0.0	0.0.2.0.0	
# ::edge	or	op1	helicopter	0.0.2.0.0.0.0	0.0.2.0.0.0	
# ::edge	quantity	mod	generous-41	0.0.3	0.0	
(a2 / and 
      :op1 (g / generous-41 
            :ARG0 (q2 / quality) 
            :ARG1 (s / standard) 
            :ARG1-of (a / amaze-01 
                  :ARG1-of (b / bear-02 
                        :ARG0 (f / food 
                              :part-of (h / helicopter 
                                    :op-of (o / or)) 
                              :quant (a3 / all)) 
                        :location (m / mind))) 
            :mod-of (q / quantity)))

# ::snt the newmarket trainer runs top class in the longchamp spectacular and the faithful backing brittain will expect to be laughing all the way to the bank as they help themselves to the generous 401 on offer
# ::tok the newmarket trainer runs top class in the longchamp spectacular and the faithful backing brittain will expect to be laughing all the way to the bank as they help themselves to the generous 401 on offer
# ::alignments 35-36|0.0.1.0.1 32-33|0 28-29|0.0.1.0 27-28|0.0.1.0.0 25-26|0.0.1.0.0.0.0.1 22-23|0.0.1.0.0.0.0.0 20-21|0.0.1.0.0.0.0.0.0 19-20|0.0.1.0.0.0.0 16-17|0.0.1.0.0.0 13-14|0.0.0.0 12-13|0.0.0.0.1 10-11|0.0 9-10|0.0.0.0.0 5-6|0.0.1 4-5|0.0.1.1 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:10.638
# ::node	0	generous-41	32-33
# ::node	0.0	and	10-11
# ::node	0.0.0	train-01	2-3
# ::node	0.0.0.0	back-01	13-14
# ::node	0.0.0.0.0	spectacular	9-10
# ::node	0.0.0.0.1	faithful	12-13
# ::node	0.0.1	class	5-6
# ::node	0.0.1.0	help-01	28-29
# ::node	0.0.1.0.0	they	27-28
# ::node	0.0.1.0.0.0	expect-01	16-17
# ::node	0.0.1.0.0.0.0	laugh-01	19-20
# ::node	0.0.1.0.0.0.0.0	way	22-23
# ::node	0.0.1.0.0.0.0.0.0	all	20-21
# ::node	0.0.1.0.0.0.0.1	bank	25-26
# ::node	0.0.1.0.1	offer-01	35-36
# ::node	0.0.1.1	top	4-5
# ::root	0	generous-41
# ::edge	and	op1	train-01	0.0	0.0.0	
# ::edge	and	op2	class	0.0	0.0.1	
# ::edge	back-01	ARG0	train-01	0.0.0.0	0.0.0	
# ::edge	back-01	ARG1	spectacular	0.0.0.0	0.0.0.0.0	
# ::edge	back-01	mod	faithful	0.0.0.0	0.0.0.0.1	
# ::edge	class	mod	top	0.0.1	0.0.1.1	
# ::edge	expect-01	ARG0	they	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	expect-01	ARG1	laugh-01	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	generous-41	ARG1	and	0	0.0	
# ::edge	help-01	ARG0	class	0.0.1.0	0.0.1	
# ::edge	help-01	ARG1	they	0.0.1.0	0.0.1.0.0	
# ::edge	laugh-01	ARG1	way	0.0.1.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	laugh-01	ARG2	bank	0.0.1.0.0.0.0	0.0.1.0.0.0.0.1	
# ::edge	offer-01	ARG1	help-01	0.0.1.0.1	0.0.1.0	
# ::edge	way	mod	all	0.0.1.0.0.0.0.0	0.0.1.0.0.0.0.0.0	
(g / generous-41 
      :ARG1 (a2 / and 
            :op1 (t3 / train-01 
                  :ARG0-of (b2 / back-01 
                        :ARG1 (s / spectacular) 
                        :mod (f / faithful))) 
            :op2 (c / class 
                  :ARG0-of (h / help-01 
                        :ARG1 (t / they 
                              :ARG0-of (e / expect-01 
                                    :ARG1 (l / laugh-01 
                                          :ARG1 (w / way 
                                                :mod (a / all)) 
                                          :ARG2 (b / bank)))) 
                        :ARG1-of (o / offer-01)) 
                  :mod (t2 / top))))

# ::snt it said amps description of its offer as extremely generous was untrue
# ::tok it said amps description of its offer as extremely generous was untrue
# ::alignments 9-10|0.0.0.0 8-9|0.0.0.0.0 6-7|0.0.0 3-4|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:10.676
# ::node	0	say-01	1-2
# ::node	0.0	it	0-1
# ::node	0.0.0	offer-01	6-7
# ::node	0.0.0.0	generous-41	9-10
# ::node	0.0.0.0.0	extreme	8-9
# ::node	0.1	description	3-4
# ::root	0	say-01
# ::edge	generous-41	ARG2	offer-01	0.0.0.0	0.0.0	
# ::edge	generous-41	degree	extreme	0.0.0.0	0.0.0.0.0	
# ::edge	offer-01	ARG1	it	0.0.0	0.0	
# ::edge	say-01	ARG0	it	0	0.0	
# ::edge	say-01	ARG1	description	0	0.1	
(s / say-01 
      :ARG0 (i / it 
            :ARG1-of (o / offer-01 
                  :ARG2-of (g / generous-41 
                        :degree (e / extreme)))) 
      :ARG1 (d / description))

# ::snt more generous than anything in dante dash
# ::tok more generous than anything in dante dash
# ::alignments 3-4|0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:10.682
# ::node	0	generous-41	1-2
# ::node	0.0	anything	3-4
# ::root	0	generous-41
# ::edge	generous-41	ARG2	anything	0	0.0	
(g / generous-41 
      :ARG2 (a / anything))

# ::snt another generous contributor was extras with 36
# ::tok another generous contributor was extras with 36
# ::alignments 6-7|0.0.0 2-3|0 1-2|0.0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:10.692
# ::node	0	contribute-01	2-3
# ::node	0.0	generous-41	1-2
# ::node	0.0.0	36	6-7
# ::node	0.1	another	0-1
# ::root	0	contribute-01
# ::edge	contribute-01	mod	another	0	0.1	
# ::edge	contribute-01	mod	generous-41	0	0.0	
# ::edge	generous-41	ARG1	36	0.0	0.0.0	
(c / contribute-01 
      :mod (g / generous-41 
            :ARG1 36) 
      :mod (a / another))

# ::snt the association with a traditional barn incorporating porches has been skilfully exploited in order to broaden the width of the building at its centre so that an enclosed entrance porch and a generous dogleg staircase giving access to the first floor could be included on one side  while the equivalent projection on the west side houses an oriel window serving the diningroom which gives a commanding view over the cherwell valley
# ::tok the association with a traditional barn incorporating porches has been skilfully exploited in order to broaden the width of the building at its centre so that an enclosed entrance porch and a generous dogleg staircase giving access to the first floor could be included on one side while the equivalent projection on the west side houses an oriel window serving the diningroom which gives a commanding view over the cherwell valley
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:10.698
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt people have been very generous in the parish and the village obviously they think a lot of their church but one suggestion that was put forward was if every man woman and child gave the equivalent of twelve pounds to the fund then it would be raised easily and i think that its quite likely that people will come forward vocal soundum in a generous way im sure
# ::tok people have been very generous in the parish and the village obviously they think a lot of their church but one suggestion that was put forward was if every man woman and child gave the equivalent of twelve pounds to the fund then it would be raised easily and i think that its quite likely that people will come forward vocal soundum in a generous way im sure
# ::alignments 65-66|0.1.4.0.1.0.0.1 64-65|0.1.4.0.1.0.0 60-61|0.1.4.0.1.0.0.0.0 59-60|0.1.4.0.1.0.0.0 54-55|0.1.4.1.1 53-54|0.1.4.1.1.0 50-51|0.1.4.1 49-50|0.1.4.1.0 48-49|0.1.4 46-47|0.1.4.0 43-44|0.1.4.0.1 42-43|0.1.4.0.2 41-42|0.1.4.0.1.0 35-36|0.0 32-33|0.1.4.0.0.2 31-32|0.1.4.0.0 30-31|0.1.4.0.0.1 29-30|0.1.4.0.0.1.0 28-29|0.1.4.0.0.1.1 25-26|0.1.3.0.0 21-22|0.1.4.0.0.0.0+0.1.4.0.0.0 19-20|0 18-19|0.1.0.0 15-16|0.1.0.0.0 13-14|0.1 12-13|0.1.0 11-12|0.1.2 10-11|0.1.1 8-9|0.1.3 4-5|0.1.3.0 3-4|0.1.3.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:12.448
# ::node	0	contrast-01	19-20
# ::node	0.0	equivalent	35-36
# ::node	0.1	think-01	13-14
# ::node	0.1.0	they	12-13
# ::node	0.1.0.0	church	18-19
# ::node	0.1.0.0.0	lot	15-16
# ::node	0.1.1	village	10-11
# ::node	0.1.2	obvious-41	11-12
# ::node	0.1.3	and	8-9
# ::node	0.1.3.0	generous-41	4-5
# ::node	0.1.3.0.0	forward	25-26
# ::node	0.1.3.0.1	very	3-4
# ::node	0.1.4	and	48-49
# ::node	0.1.4.0	raise-01	46-47
# ::node	0.1.4.0.0	and	31-32
# ::node	0.1.4.0.0.0	thing	21-22
# ::node	0.1.4.0.0.0.0	suggest-01	21-22
# ::node	0.1.4.0.0.1	woman	30-31
# ::node	0.1.4.0.0.1.0	man	29-30
# ::node	0.1.4.0.0.1.1	every	28-29
# ::node	0.1.4.0.0.2	child	32-33
# ::node	0.1.4.0.1	it	43-44
# ::node	0.1.4.0.1.0	fund-01	41-42
# ::node	0.1.4.0.1.0.0	generous-41	64-65
# ::node	0.1.4.0.1.0.0.0	forward	59-60
# ::node	0.1.4.0.1.0.0.0.0	vocal	60-61
# ::node	0.1.4.0.1.0.0.1	way	65-66
# ::node	0.1.4.0.2	then	42-43
# ::node	0.1.4.1	think-01	50-51
# ::node	0.1.4.1.0	i	49-50
# ::node	0.1.4.1.1	likely	54-55
# ::node	0.1.4.1.1.0	quite	53-54
# ::root	0	contrast-01
# ::edge	and	op1	generous-41	0.1.3	0.1.3.0	
# ::edge	and	op1	thing	0.1.4.0.0	0.1.4.0.0.0	
# ::edge	and	op1	think-01	0.1.4	0.1	
# ::edge	and	op2	raise-01	0.1.4	0.1.4.0	
# ::edge	and	op2	think-01	0.1.3	0.1	
# ::edge	and	op2	woman	0.1.4.0.0	0.1.4.0.0.1	
# ::edge	and	op3	child	0.1.4.0.0	0.1.4.0.0.2	
# ::edge	and	op3	think-01	0.1.4	0.1.4.1	
# ::edge	church	part	lot	0.1.0.0	0.1.0.0.0	
# ::edge	church	poss	they	0.1.0.0	0.1.0	
# ::edge	contrast-01	ARG0	equivalent	0	0.0	
# ::edge	contrast-01	ARG2	think-01	0	0.1	
# ::edge	fund-01	ARG1	it	0.1.4.0.1.0	0.1.4.0.1	
# ::edge	generous-41	ARG0	forward	0.1.4.0.1.0.0	0.1.4.0.1.0.0.0	
# ::edge	generous-41	ARG1	forward	0.1.3.0	0.1.3.0.0	
# ::edge	generous-41	ARG1	way	0.1.4.0.1.0.0	0.1.4.0.1.0.0.1	
# ::edge	generous-41	ARG2	fund-01	0.1.4.0.1.0.0	0.1.4.0.1.0	
# ::edge	generous-41	degree	very	0.1.3.0	0.1.3.0.1	
# ::edge	likely	degree	quite	0.1.4.1.1	0.1.4.1.1.0	
# ::edge	obvious-41	ARG1	think-01	0.1.2	0.1	
# ::edge	raise-01	ARG0	and	0.1.4.0	0.1.4.0.0	
# ::edge	raise-01	ARG1	it	0.1.4.0	0.1.4.0.1	
# ::edge	raise-01	time	then	0.1.4.0	0.1.4.0.2	
# ::edge	suggest-01	ARG1	thing	0.1.4.0.0.0.0	0.1.4.0.0.0	
# ::edge	think-01	ARG0	i	0.1.4.1	0.1.4.1.0	
# ::edge	think-01	ARG0	they	0.1	0.1.0	
# ::edge	think-01	ARG1	likely	0.1.4.1	0.1.4.1.1	
# ::edge	think-01	ARG1	village	0.1	0.1.1	
# ::edge	vocal	degree	forward	0.1.4.0.1.0.0.0.0	0.1.4.0.1.0.0.0	
# ::edge	woman	mod	every	0.1.4.0.0.1	0.1.4.0.0.1.1	
# ::edge	woman	mod	man	0.1.4.0.0.1	0.1.4.0.0.1.0	
(c2 / contrast-01 
      :ARG0 (e / equivalent) 
      :ARG2 (t4 / think-01 
            :ARG0 (t5 / they 
                  :poss-of (c3 / church 
                        :part (l2 / lot))) 
            :ARG1 (v2 / village) 
            :ARG1-of (o / obvious-41) 
            :op-of (a3 / and 
                  :op1 (g2 / generous-41 
                        :ARG1 (f3 / forward) 
                        :degree (v3 / very))) 
            :op-of (a / and 
                  :op1 (r / raise-01 
                        :ARG0 (a2 / and 
                              :op1 (t3 / thing 
                                    :ARG1-of (s / suggest-01)) 
                              :op2 (w2 / woman 
                                    :mod (m / man) 
                                    :mod (e2 / every)) 
                              :op3 (c / child)) 
                        :ARG1 (i2 / it 
                              :ARG1-of (f2 / fund-01 
                                    :ARG2-of (g / generous-41 
                                          :ARG0 (f / forward 
                                                :degree-of (v / vocal)) 
                                          :ARG1 (w / way)))) 
                        :time (t2 / then)) 
                  :op2 (t / think-01 
                        :ARG0 (i / i) 
                        :ARG1 (l / likely 
                              :degree (q / quite))))))

# ::snt he remains a recognisable english type obstinant puritan with being obviously puritanical humorous dedicated to self country god probably in that order generous with the profits he so gladly accumulated perhaps disappointed in latter years
# ::tok he remains a recognisable english type obstinant puritan with being obviously puritanical humorous dedicated to self country god probably in that order generous with the profits he so gladly accumulated perhaps disappointed in latter years
# ::alignments 34-35|0.1.0.0.1.0.1+0.1.0.0.1.0 33-34|0.1.0.0.1 31-32|0.1.0.0 30-31|0.1.0.0.2 29-30|0.1 28-29|0 27-28|0.0 26-27|0.1.0 25-26|0.1.1 22-23|0.1.1.0.0.0.1 18-19|0.1.0.0.1.0.0.0.0 17-18|0.1.0.0.1.0.0.1 16-17|0.1.0.0.1.0.0.1.0 15-16|0.1.0.0.1.0.0.0 13-14|0.1.0.0.1.0.0 10-11|0.1.0.0.0 5-6|0.1.1.0.0 4-5|0.1.1.0.1.0+0.1.1.0.1+0.1.1.0 1-2|0.1.1.0.0.0 0-1|0.1.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:12.899
# ::node	0	glad	28-29
# ::node	0.0	so	27-28
# ::node	0.1	accumulate-01	29-30
# ::node	0.1.0	he	26-27
# ::node	0.1.0.0	disappoint-01	31-32
# ::node	0.1.0.0.0	obvious-41	10-11
# ::node	0.1.0.0.1	latter	33-34
# ::node	0.1.0.0.1.0	temporal-quantity	34-35
# ::node	0.1.0.0.1.0.0	dedicate-01	13-14
# ::node	0.1.0.0.1.0.0.0	self	15-16
# ::node	0.1.0.0.1.0.0.0.0	probable	18-19
# ::node	0.1.0.0.1.0.0.1	god	17-18
# ::node	0.1.0.0.1.0.0.1.0	country	16-17
# ::node	0.1.0.0.1.0.1	year	34-35
# ::node	0.1.0.0.2	perhaps	30-31
# ::node	0.1.1	profit-01	25-26
# ::node	0.1.1.0	language	4-5
# ::node	0.1.1.0.0	type	5-6
# ::node	0.1.1.0.0.0	remain-01	1-2
# ::node	0.1.1.0.0.0.0	he	0-1
# ::node	0.1.1.0.0.0.1	generous-41	22-23
# ::node	0.1.1.0.1	name	4-5
# ::node	0.1.1.0.1.0	"English"	4-5
# ::root	0	glad
# ::edge	accumulate-01	ARG0	he	0.1	0.1.0	
# ::edge	accumulate-01	ARG1	profit-01	0.1	0.1.1	
# ::edge	accumulate-01	manner	glad	0.1	0	
# ::edge	dedicate-01	ARG0	temporal-quantity	0.1.0.0.1.0.0	0.1.0.0.1.0	
# ::edge	dedicate-01	ARG1	self	0.1.0.0.1.0.0	0.1.0.0.1.0.0.0	
# ::edge	dedicate-01	ARG4	god	0.1.0.0.1.0.0	0.1.0.0.1.0.0.1	
# ::edge	disappoint-01	ARG1	he	0.1.0.0	0.1.0	
# ::edge	disappoint-01	ARG2	latter	0.1.0.0	0.1.0.0.1	
# ::edge	disappoint-01	degree	perhaps	0.1.0.0	0.1.0.0.2	
# ::edge	generous-41	ARG1	remain-01	0.1.1.0.0.0.1	0.1.1.0.0.0	
# ::edge	glad	degree	so	0	0.0	
# ::edge	god	mod	country	0.1.0.0.1.0.0.1	0.1.0.0.1.0.0.1.0	
# ::edge	language	name	name	0.1.1.0	0.1.1.0.1	
# ::edge	name	op1	"English"	0.1.1.0.1	0.1.1.0.1.0	
# ::edge	obvious-41	ARG1	disappoint-01	0.1.0.0.0	0.1.0.0	
# ::edge	probable	domain	self	0.1.0.0.1.0.0.0.0	0.1.0.0.1.0.0.0	
# ::edge	profit-01	ARG1	language	0.1.1	0.1.1.0	
# ::edge	remain-01	ARG0	he	0.1.1.0.0.0	0.1.1.0.0.0.0	
# ::edge	remain-01	ARG1	type	0.1.1.0.0.0	0.1.1.0.0	
# ::edge	temporal-quantity	mod	latter	0.1.0.0.1.0	0.1.0.0.1	
# ::edge	temporal-quantity	unit	year	0.1.0.0.1.0	0.1.0.0.1.0.1	
# ::edge	type	mod	language	0.1.1.0.0	0.1.1.0	
(g / glad 
      :degree (s / so) 
      :manner-of (a / accumulate-01 
            :ARG0 (h / he 
                  :ARG1-of (d / disappoint-01 
                        :ARG1-of (o / obvious-41) 
                        :ARG2 (l / latter 
                              :mod-of (t / temporal-quantity 
                                    :ARG0-of (d2 / dedicate-01 
                                          :ARG1 (s2 / self 
                                                :domain-of (p3 / probable)) 
                                          :ARG4 (g3 / god 
                                                :mod (c / country))) 
                                    :unit (y / year))) 
                        :degree (p / perhaps))) 
            :ARG1 (p2 / profit-01 
                  :ARG1 (l2 / language 
                        :mod-of (t2 / type 
                              :ARG1-of (r / remain-01 
                                    :ARG0 (h2 / he) 
                                    :ARG1-of (g2 / generous-41))) 
                        :name (n / name 
                              :op1 "English")))))

# ::snt her costars a distinguished french actor and an english actress in her seventies treated her initial nerves with generous respect
# ::tok her costars a distinguished french actor and an english actress in her seventies treated her initial nerves with generous respect
# ::alignments 19-20|0.0 18-19|0 15-16|0.0.1.0.0.0 13-14|0.0.1 8-9|0.0.0.0.0+0.0.0.0+0.0.0 6-7|0.0.1.0 4-5|0.0.1.0.1.0.0+0.0.1.0.1.0+0.0.1.0.1 3-4|0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:12.961
# ::node	0	generous-41	18-19
# ::node	0.0	respect-01	19-20
# ::node	0.0.0	language	8-9
# ::node	0.0.0.0	name	8-9
# ::node	0.0.0.0.0	"English"	8-9
# ::node	0.0.1	treat-01	13-14
# ::node	0.0.1.0	and	6-7
# ::node	0.0.1.0.0	distinguish-01	3-4
# ::node	0.0.1.0.0.0	initial	15-16
# ::node	0.0.1.0.1	country	4-5
# ::node	0.0.1.0.1.0	name	4-5
# ::node	0.0.1.0.1.0.0	"France"	4-5
# ::root	0	generous-41
# ::edge	and	mod	country	0.0.1.0	0.0.1.0.1	
# ::edge	and	op1	treat-01	0.0.1.0	0.0.1	
# ::edge	country	name	name	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	distinguish-01	ARG0	initial	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	distinguish-01	ARG1	and	0.0.1.0.0	0.0.1.0	
# ::edge	generous-41	ARG1	respect-01	0	0.0	
# ::edge	language	name	name	0.0.0	0.0.0.0	
# ::edge	name	op1	"English"	0.0.0.0	0.0.0.0.0	
# ::edge	name	op1	"France"	0.0.1.0.1.0	0.0.1.0.1.0.0	
# ::edge	respect-01	ARG1	language	0.0	0.0.0	
# ::edge	treat-01	manner	respect-01	0.0.1	0.0	
(g / generous-41 
      :ARG1 (r / respect-01 
            :ARG1 (l / language 
                  :name (n / name 
                        :op1 "English")) 
            :manner-of (t / treat-01 
                  :op-of (a / and 
                        :ARG1-of (d / distinguish-01 
                              :ARG0 (i / initial)) 
                        :mod (c / country 
                              :name (n2 / name 
                                    :op1 "France"))))))

# ::snt if  you have liver or a generous portion of a soya product at least  once a week this will help
# ::tok if you have liver or a generous portion of a soya product at least once a week this will help
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:12.962
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt   that is very generous of you miss thorne
# ::tok that is very generous of you miss thorne
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:12.963
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt it is a handsome comfortable style a long whitewalled room with blond hardwood floors le corbusier bentwood armchairs built to their original generous proportions a riverfacing glass wall terrace beyond
# ::tok it is a handsome comfortable style a long whitewalled room with blond hardwood floors le corbusier bentwood armchairs built to their original generous proportions a riverfacing glass wall terrace beyond
# ::alignments 29-30|0.1.0.1 27-28|0.0 26-27|0.0.0 23-24|0.1 22-23|0 21-22|0.1.1 18-19|0.1.0 9-10|0.1.2 5-6|0.1.0.0.0 4-5|0.2 0-1|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:13.110
# ::node	0	generous-41	22-23
# ::node	0.0	wall	27-28
# ::node	0.0.0	glass	26-27
# ::node	0.1	proportion	23-24
# ::node	0.1.0	build-01	18-19
# ::node	0.1.0.0	it	0-1
# ::node	0.1.0.0.0	style	5-6
# ::node	0.1.0.1	beyond	29-30
# ::node	0.1.1	original	21-22
# ::node	0.1.2	room	9-10
# ::node	0.2	comfortable	4-5
# ::root	0	generous-41
# ::edge	build-01	ARG0	it	0.1.0	0.1.0.0	
# ::edge	build-01	ARG1	beyond	0.1.0	0.1.0.1	
# ::edge	build-01	ARG4	proportion	0.1.0	0.1	
# ::edge	comfortable	op1	generous-41	0.2	0	
# ::edge	generous-41	ARG0	wall	0	0.0	
# ::edge	generous-41	ARG2	proportion	0	0.1	
# ::edge	proportion	mod	original	0.1	0.1.1	
# ::edge	room	mod	proportion	0.1.2	0.1	
# ::edge	style	domain	it	0.1.0.0.0	0.1.0.0	
# ::edge	wall	mod	glass	0.0	0.0.0	
(g2 / generous-41 
      :ARG0 (w / wall 
            :mod (g / glass)) 
      :ARG2 (p / proportion 
            :ARG4-of (b2 / build-01 
                  :ARG0 (i / it 
                        :domain-of (s / style)) 
                  :ARG1 (b / beyond)) 
            :mod (o / original) 
            :mod-of (r / room)) 
      :op-of (c / comfortable))

# ::snt may i thank readers who supported the recent motion to ban all forms of hunting snaring and hare coursing on oxfordshire county councilowned land by writing letters collecting signatures on petitions and for generous donations
# ::tok may i thank readers who supported the recent motion to ban all forms of hunting snaring and hare coursing on oxfordshire county councilowned land by writing letters collecting signatures on petitions and for generous donations
# ::alignments 34-35|0.1 33-34|0.1.1 31-32|0 28-29|0.0.1 27-28|0.0 26-27|0.0.0 25-26|0.0.0.0 23-24|0.0.0.0.1 21-22|0.1.0 16-17|0.0.0.0.0.0.1.1 14-15|0.0.0.0.0.0.0.0 12-13|0.0.0.0.0.0.1.0 11-12|0.0.0.0.0.0.1.0.0 10-11|0.0.0.0.0.0.1 8-9|0.0.0.0.0.0.0 7-8|0.0.0.0.0.0.0.1 5-6|0.0.0.0.0.0 3-4|0.0.0.0.0.1+0.0.0.0.0 2-3|0.0.0.0.0.1.0 1-2|0.0.0.0.0.1.0.0 0-1|0.0.0.0.0.1.0.1.0+0.0.0.0.0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:13.872
# ::node	0	and	31-32
# ::node	0.0	collect-01	27-28
# ::node	0.0.0	letter	26-27
# ::node	0.0.0.0	write-01	25-26
# ::node	0.0.0.0.0	person	3-4
# ::node	0.0.0.0.0.0	support-01	5-6
# ::node	0.0.0.0.0.0.0	motion	8-9
# ::node	0.0.0.0.0.0.0.0	hunt-01	14-15
# ::node	0.0.0.0.0.0.0.1	recent	7-8
# ::node	0.0.0.0.0.0.1	ban-01	10-11
# ::node	0.0.0.0.0.0.1.0	form	12-13
# ::node	0.0.0.0.0.0.1.0.0	all	11-12
# ::node	0.0.0.0.0.0.1.1	and	16-17
# ::node	0.0.0.0.0.1	read-01	3-4
# ::node	0.0.0.0.0.1.0	thank-01	2-3
# ::node	0.0.0.0.0.1.0.0	i	1-2
# ::node	0.0.0.0.0.1.0.1	date-entity	0-1
# ::node	0.0.0.0.0.1.0.1.0	5	0-1
# ::node	0.0.0.0.1	land	23-24
# ::node	0.0.1	signature	28-29
# ::node	0.1	donate-01	34-35
# ::node	0.1.0	county	21-22
# ::node	0.1.1	generous-41	33-34
# ::root	0	and
# ::edge	and	op1	ban-01	0.0.0.0.0.0.1.1	0.0.0.0.0.0.1	
# ::edge	and	op1	donate-01	0	0.1	
# ::edge	ban-01	ARG1	form	0.0.0.0.0.0.1	0.0.0.0.0.0.1.0	
# ::edge	collect-01	ARG0	letter	0.0	0.0.0	
# ::edge	collect-01	ARG1	signature	0.0	0.0.1	
# ::edge	collect-01	ARG2	and	0.0	0	
# ::edge	date-entity	month	5	0.0.0.0.0.1.0.1	0.0.0.0.0.1.0.1.0	
# ::edge	donate-01	ARG1	county	0.1	0.1.0	
# ::edge	form	mod	all	0.0.0.0.0.0.1.0	0.0.0.0.0.0.1.0.0	
# ::edge	generous-41	ARG1	donate-01	0.1.1	0.1	
# ::edge	hunt-01	ARG0	motion	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	land	topic	write-01	0.0.0.0.1	0.0.0.0	
# ::edge	motion	time	recent	0.0.0.0.0.0.0	0.0.0.0.0.0.0.1	
# ::edge	read-01	ARG0	person	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	read-01	ARG1	thank-01	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	support-01	ARG0	person	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	support-01	ARG1	motion	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	support-01	purpose	ban-01	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	thank-01	ARG0	i	0.0.0.0.0.1.0	0.0.0.0.0.1.0.0	
# ::edge	thank-01	ARG1	date-entity	0.0.0.0.0.1.0	0.0.0.0.0.1.0.1	
# ::edge	write-01	ARG0	person	0.0.0.0	0.0.0.0.0	
# ::edge	write-01	ARG1	letter	0.0.0.0	0.0.0	
(a / and 
      :ARG2-of (c / collect-01 
            :ARG0 (l / letter 
                  :ARG1-of (w / write-01 
                        :ARG0 (p / person 
                              :ARG0-of (s2 / support-01 
                                    :ARG1 (m / motion 
                                          :ARG0-of (h / hunt-01) 
                                          :time (r / recent)) 
                                    :purpose (b / ban-01 
                                          :ARG1 (f / form 
                                                :mod (a3 / all)) 
                                          :op-of (a2 / and))) 
                              :ARG0-of (r2 / read-01 
                                    :ARG1 (t / thank-01 
                                          :ARG0 (i / i) 
                                          :ARG1 (d2 / date-entity 
                                                :month 5)))) 
                        :topic-of (l2 / land))) 
            :ARG1 (s / signature)) 
      :op1 (d / donate-01 
            :ARG1 (c2 / county) 
            :ARG1-of (g / generous-41)))

# ::snt even so foreign aid however generous has only provided 10 per cent of new homes whatever the impression to the contrary left by the media
# ::tok even so foreign aid however generous has only provided 10 per cent of new homes whatever the impression to the contrary left by the media
# ::alignments 24-25|0.1.0.0.0 20-21|0.1 17-18|0 15-16|0.0 14-15|0.1.0.3.0.0 13-14|0.1.0.3.0.0.0 11-12|0.1.0.3.0+0.1.0.3 9-10|0.1.0.1 8-9|0.1.0 7-8|0.1.0.4 5-6|0.1.0.2 3-4|0.1.0.0 2-3|0.1.0.2.0 1-2|0.1.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:14.189
# ::node	0	impression	17-18
# ::node	0.0	whatever	15-16
# ::node	0.1	contrary-41	20-21
# ::node	0.1.0	provide-01	8-9
# ::node	0.1.0.0	aid-01	3-4
# ::node	0.1.0.0.0	media	24-25
# ::node	0.1.0.0.1	so	1-2
# ::node	0.1.0.1	10	9-10
# ::node	0.1.0.2	generous-41	5-6
# ::node	0.1.0.2.0	foreign	2-3
# ::node	0.1.0.3	monetary-quantity	11-12
# ::node	0.1.0.3.0	cent	11-12
# ::node	0.1.0.3.0.0	home	14-15
# ::node	0.1.0.3.0.0.0	new	13-14
# ::node	0.1.0.4	only	7-8
# ::root	0	impression
# ::edge	aid-01	ARG1	media	0.1.0.0	0.1.0.0.0	
# ::edge	cent	location	home	0.1.0.3.0	0.1.0.3.0.0	
# ::edge	contrary-41	ARG1	provide-01	0.1	0.1.0	
# ::edge	generous-41	ARG0	foreign	0.1.0.2	0.1.0.2.0	
# ::edge	generous-41	ARG2	provide-01	0.1.0.2	0.1.0	
# ::edge	home	mod	new	0.1.0.3.0.0	0.1.0.3.0.0.0	
# ::edge	impression	mod	whatever	0	0.0	
# ::edge	impression	purpose	contrary-41	0	0.1	
# ::edge	monetary-quantity	unit	cent	0.1.0.3	0.1.0.3.0	
# ::edge	provide-01	ARG0	aid-01	0.1.0	0.1.0.0	
# ::edge	provide-01	ARG1	10	0.1.0	0.1.0.1	
# ::edge	provide-01	location	monetary-quantity	0.1.0	0.1.0.3	
# ::edge	provide-01	mod	only	0.1.0	0.1.0.4	
# ::edge	so	op1	aid-01	0.1.0.0.1	0.1.0.0	
(i / impression 
      :mod (w / whatever) 
      :purpose (c / contrary-41 
            :ARG1 (p / provide-01 
                  :ARG0 (a / aid-01 
                        :ARG1 (m / media) 
                        :op-of (s / so)) 
                  :ARG1 10 
                  :ARG2-of (g / generous-41 
                        :ARG0 (f / foreign)) 
                  :location (m2 / monetary-quantity 
                        :unit (c2 / cent 
                              :location (h / home 
                                    :mod (n / new)))) 
                  :mod (o / only))))

# ::snt between the layers one puts a generous amount of grated parmesan prosciutto in shreds the dish is generally made when one is near the end of a ham which has only the meat closest to the bone left so the slices are very thin and little knobs of butter topping the dish with butter and cheese
# ::tok between the layers one puts a generous amount of grated parmesan prosciutto in shreds the dish is generally made when one is near the end of a ham which has only the meat closest to the bone left so the slices are very thin and little knobs of butter topping the dish with butter and cheese
# ::alignments 54-55|0.0.2 53-54|0.0.2.1 48-49|0.0.2.0 45-46|0.0.2.1.0.1.0.0 44-45|0.0.2.1.0 43-44|0.0.2.1.0.1 42-43|0.0.2.1.0.1.0 40-41|0.0.2.1.0.1.1 38-39|0.0.1.0 36-37|0 33-34|0.0 32-33|0.0.3 30-31|0.0.3.0 22-23|0.0.2.1.0.0.0.0.0 17-18|0.0.0 13-14|0.0.1 7-8|0.0.2.1.0.0.0 6-7|0.0.2.1.0.0.0.0 4-5|0.0.2.1.0.0 2-3|0.0.2.1.0.0.1.0 0-1|0.0.2.1.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:14.589
# ::node	0	bone	36-37
# ::node	0.0	close-41	33-34
# ::node	0.0.0	general	17-18
# ::node	0.0.1	shred-01	13-14
# ::node	0.0.1.0	so	38-39
# ::node	0.0.2	and	54-55
# ::node	0.0.2.0	butter	48-49
# ::node	0.0.2.1	butter	53-54
# ::node	0.0.2.1.0	and	44-45
# ::node	0.0.2.1.0.0	put-01	4-5
# ::node	0.0.2.1.0.0.0	amount	7-8
# ::node	0.0.2.1.0.0.0.0	generous-41	6-7
# ::node	0.0.2.1.0.0.0.0.0	near	22-23
# ::node	0.0.2.1.0.0.1	between	0-1
# ::node	0.0.2.1.0.0.1.0	layer	2-3
# ::node	0.0.2.1.0.1	thin	43-44
# ::node	0.0.2.1.0.1.0	very	42-43
# ::node	0.0.2.1.0.1.0.0	little	45-46
# ::node	0.0.2.1.0.1.1	slice	40-41
# ::node	0.0.3	meat	32-33
# ::node	0.0.3.0	only	30-31
# ::root	0	bone
(b3 / bone 
      :ARG1-of (c / close-41 
            :ARG0 (g / general) 
            :ARG1-of (s3 / shred-01 
                  :ARG0 (s2 / so)) 
            :op-of (a / and 
                  :op1 (b2 / butter) 
                  :op2 (b / butter 
                        :poss (a2 / and 
                              :ARG0-of (p / put-01 
                                    :ARG1 (a3 / amount 
                                          :ARG2-of (g2 / generous-41 
                                                :ARG0 (n / near))) 
                                    :ARG2 (b4 / between 
                                          :op1 (l2 / layer))) 
                              :op1 (t / thin 
                                    :degree (v / very 
                                          :manner-of (l / little)) 
                                    :domain (s / slice))))) 
            :op-of (m / meat 
                  :mod (o / only))))

# ::snt   but the typical memory is of generous care kind treatment a happy home or happiest days she nursed me fed me rocked me to sleep
# ::tok but the typical memory is of generous care kind treatment a happy home or happiest days she nursed me fed me rocked me to sleep
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:14.590
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt folk have been terribly generous
# ::tok folk have been terribly generous
# ::alignments 4-5|0 3-4|0.1 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:14.596
# ::node	0	generous-41	4-5
# ::node	0.0	folk	0-1
# ::node	0.1	terrible	3-4
# ::root	0	generous-41
# ::edge	generous-41	ARG1	folk	0	0.0	
# ::edge	generous-41	degree	terrible	0	0.1	
(g / generous-41 
      :ARG1 (f / folk) 
      :degree (t / terrible))

# ::snt not however the old story of too many banks chasing too little commission income compared to most markets conventional eurobond commissions are very generous
# ::tok not however the old story of too many banks chasing too little commission income compared to most markets conventional eurobond commissions are very generous
# ::alignments 23-24|0 22-23|0.2 20-21|0.1 18-19|0.1.0 17-18|0.0 16-17|0.0.1 14-15|0.0.0 13-14|0.0.0.1.2 12-13|0.0.0.1.2.0 11-12|0.0.0.1.2.0.0 10-11|0.0.0.1.2.0.0.0 9-10|0.0.0.1 8-9|0.0.0.1.1 7-8|0.0.0.1.1.0 6-7|0.0.0.0 4-5|0.0.0.1.0 3-4|0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:15.465
# ::node	0	generous-41	23-24
# ::node	0.0	market	17-18
# ::node	0.0.0	compare-01	14-15
# ::node	0.0.0.0	too	6-7
# ::node	0.0.0.1	chase-01	9-10
# ::node	0.0.0.1.0	story	4-5
# ::node	0.0.0.1.0.0	old	3-4
# ::node	0.0.0.1.1	bank	8-9
# ::node	0.0.0.1.1.0	many	7-8
# ::node	0.0.0.1.2	income	13-14
# ::node	0.0.0.1.2.0	commission	12-13
# ::node	0.0.0.1.2.0.0	little	11-12
# ::node	0.0.0.1.2.0.0.0	too	10-11
# ::node	0.0.1	most	16-17
# ::node	0.1	commission	20-21
# ::node	0.1.0	conventional	18-19
# ::node	0.2	very	22-23
# ::root	0	generous-41
# ::edge	bank	quant	many	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	chase-01	ARG0	story	0.0.0.1	0.0.0.1.0	
# ::edge	chase-01	ARG1	bank	0.0.0.1	0.0.0.1.1	
# ::edge	chase-01	ARG2	income	0.0.0.1	0.0.0.1.2	
# ::edge	commission	mod	conventional	0.1	0.1.0	
# ::edge	commission	mod	little	0.0.0.1.2.0	0.0.0.1.2.0.0	
# ::edge	compare-01	ARG0	too	0.0.0	0.0.0.0	
# ::edge	compare-01	ARG1	chase-01	0.0.0	0.0.0.1	
# ::edge	compare-01	ARG2	market	0.0.0	0.0	
# ::edge	generous-41	ARG0	market	0	0.0	
# ::edge	generous-41	ARG1	commission	0	0.1	
# ::edge	generous-41	degree	very	0	0.2	
# ::edge	income	source	commission	0.0.0.1.2	0.0.0.1.2.0	
# ::edge	little	degree	too	0.0.0.1.2.0.0	0.0.0.1.2.0.0.0	
# ::edge	market	quant	most	0.0	0.0.1	
# ::edge	story	mod	old	0.0.0.1.0	0.0.0.1.0.0	
(g / generous-41 
      :ARG0 (m / market 
            :ARG2-of (c3 / compare-01 
                  :ARG0 (t2 / too) 
                  :ARG1 (c5 / chase-01 
                        :ARG0 (s / story 
                              :mod (o / old)) 
                        :ARG1 (b / bank 
                              :quant (m3 / many)) 
                        :ARG2 (i / income 
                              :source (c4 / commission 
                                    :mod (l / little 
                                          :degree (t / too)))))) 
            :quant (m2 / most)) 
      :ARG1 (c / commission 
            :mod (c2 / conventional)) 
      :degree (v / very))

# ::snt when the county school had moved to the oxford side of the town in 1930 generous provision of land had been made and that was prudently added to over the years
# ::tok when the county school had moved to the oxford side of the town in 1930 generous provision of land had been made and that was prudently added to over the years
# ::alignments 30-31|0.1.0.0+0.1.0 26-27|0.1.1.0 22-23|0.1.1.0.0 18-19|0.1.1.0.0.0 15-16|0 14-15|0.0.0+0.0 12-13|0.1.2.0 9-10|0.1.2 5-6|0.1 3-4|0.1.1 2-3|0.1.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:15.604
# ::node	0	generous-41	15-16
# ::node	0.0	date-entity	14-15
# ::node	0.0.0	1930	14-15
# ::node	0.1	move-01	5-6
# ::node	0.1.0	temporal-quantity	30-31
# ::node	0.1.0.0	year	30-31
# ::node	0.1.1	school	3-4
# ::node	0.1.1.0	add-01	26-27
# ::node	0.1.1.0.0	and	22-23
# ::node	0.1.1.0.0.0	land	18-19
# ::node	0.1.1.1	county	2-3
# ::node	0.1.2	side	9-10
# ::node	0.1.2.0	town	12-13
# ::root	0	generous-41
# ::edge	add-01	ARG0	school	0.1.1.0	0.1.1	
# ::edge	and	op1	land	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	and	op2	add-01	0.1.1.0.0	0.1.1.0	
# ::edge	date-entity	year	1930	0.0	0.0.0	
# ::edge	generous-41	ARG0	date-entity	0	0.0	
# ::edge	generous-41	ARG1	move-01	0	0.1	
# ::edge	move-01	ARG0	temporal-quantity	0.1	0.1.0	
# ::edge	move-01	ARG1	school	0.1	0.1.1	
# ::edge	move-01	ARG2	side	0.1	0.1.2	
# ::edge	school	mod	county	0.1.1	0.1.1.1	
# ::edge	side	poss	town	0.1.2	0.1.2.0	
# ::edge	temporal-quantity	unit	year	0.1.0	0.1.0.0	
(g / generous-41 
      :ARG0 (d / date-entity 
            :year 1930) 
      :ARG1 (m / move-01 
            :ARG0 (t / temporal-quantity 
                  :unit (y / year)) 
            :ARG1 (s2 / school 
                  :ARG0-of (a / add-01 
                        :op-of (a2 / and 
                              :op1 (l / land))) 
                  :mod (c / county)) 
            :ARG2 (s / side 
                  :poss (t2 / town))))

# ::snt when piper bought out the oldestablished light aircraft firm of stinson in 194950 it inherited the twinstinson a light twin of generous proportions which in original form had twin fins and a pair of 135 hp lycoming engines
# ::tok when piper bought out the oldestablished light aircraft firm of stinson in 194950 it inherited the twinstinson a light twin of generous proportions which in original form had twin fins and a pair of 135 hp lycoming engines
# ::alignments 37-38|0.0.0.0.1.0 30-31|0 26-27|0.0.0.0.1.1.0 25-26|0.0.0.0.1.1.0.0 22-23|0.0.0.0.1.1 21-22|0.0.0.0.1 18-19|0.0.0.0.2 14-15|0.0.0.0 13-14|0.0.0.0.0 12-13|0.0.2.2+0.0.2.1+0.0.2.0+0.0.2 8-9|0.0.1 7-8|0.0.1.0 6-7|0.0.1.0.0 2-3|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:16.088
# ::node	0	and	30-31
# ::node	0.0	buy-01	2-3
# ::node	0.0.0	piper	1-2
# ::node	0.0.0.0	inherit-01	14-15
# ::node	0.0.0.0.0	it	13-14
# ::node	0.0.0.0.1	generous-41	21-22
# ::node	0.0.0.0.1.0	engine	37-38
# ::node	0.0.0.0.1.1	proportion	22-23
# ::node	0.0.0.0.1.1.0	form	26-27
# ::node	0.0.0.0.1.1.0.0	original	25-26
# ::node	0.0.0.0.2	light	18-19
# ::node	0.0.1	firm	8-9
# ::node	0.0.1.0	aircraft	7-8
# ::node	0.0.1.0.0	light	6-7
# ::node	0.0.2	date-entity	12-13
# ::node	0.0.2.0	50	12-13
# ::node	0.0.2.1	49	12-13
# ::node	0.0.2.2	19	12-13
# ::root	0	and
# ::edge	aircraft	mod	light	0.0.1.0	0.0.1.0.0	
# ::edge	and	op1	buy-01	0	0.0	
# ::edge	buy-01	ARG0	piper	0.0	0.0.0	
# ::edge	buy-01	ARG1	firm	0.0	0.0.1	
# ::edge	buy-01	time	date-entity	0.0	0.0.2	
# ::edge	date-entity	day	50	0.0.2	0.0.2.0	
# ::edge	date-entity	month	49	0.0.2	0.0.2.1	
# ::edge	date-entity	year	19	0.0.2	0.0.2.2	
# ::edge	firm	mod	aircraft	0.0.1	0.0.1.0	
# ::edge	form	mod	original	0.0.0.0.1.1.0	0.0.0.0.1.1.0.0	
# ::edge	form	poss	proportion	0.0.0.0.1.1.0	0.0.0.0.1.1	
# ::edge	generous-41	ARG0	engine	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	generous-41	ARG1	inherit-01	0.0.0.0.1	0.0.0.0	
# ::edge	generous-41	ARG2	proportion	0.0.0.0.1	0.0.0.0.1.1	
# ::edge	inherit-01	ARG0	piper	0.0.0.0	0.0.0	
# ::edge	inherit-01	ARG1	it	0.0.0.0	0.0.0.0.0	
# ::edge	inherit-01	manner	light	0.0.0.0	0.0.0.0.2	
(a / and 
      :op1 (b / buy-01 
            :ARG0 (p2 / piper 
                  :ARG0-of (i / inherit-01 
                        :ARG1 (i2 / it) 
                        :ARG1-of (g / generous-41 
                              :ARG0 (e / engine) 
                              :ARG2 (p / proportion 
                                    :poss-of (f / form 
                                          :mod (o / original)))) 
                        :manner (l / light))) 
            :ARG1 (f2 / firm 
                  :mod (a2 / aircraft 
                        :mod (l2 / light))) 
            :time (d / date-entity 
                  :day 50 
                  :month 49 
                  :year 19)))

# ::snt the amateur regulations which in principle are upheld by the international rugby board may also prompt the home unions to think twice about approving individual invitations to south africa that entail generous expenses
# ::tok the amateur regulations which in principle are upheld by the international rugby board may also prompt the home unions to think twice about approving individual invitations to south africa that entail generous expenses
# ::alignments 32-33|0.0 31-32|0 27-29|0.0.0.1.0+0.0.0.1.1+0.0.0.1+0.0.0 24-25|0.0.0.0.0.0 23-24|0.0.0.0 20-21|0.0.0.0.1 18-19|0.0.0.0.1.0 17-18|0.0.0.0.1.0.0 15-16|0.0.0.0.1.1 14-15|0.0.0.0.1.1.1 13-14|0.0.0.0.1.1.0.0+0.0.0.0.1.1.0 10-11|0.0.1 7-8|0.0.0.0.0.1 5-6|0.0.0.0.0.1.0 2-3|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:16.349
# ::node	0	generous-41	31-32
# ::node	0.0	expend-01	32-33
# ::node	0.0.0	country	27-29
# ::node	0.0.0.0	approve-01	23-24
# ::node	0.0.0.0.0	regulate-01	2-3
# ::node	0.0.0.0.0.0	individual	24-25
# ::node	0.0.0.0.0.1	uphold-01	7-8
# ::node	0.0.0.0.0.1.0	principle	5-6
# ::node	0.0.0.0.1	think-01	20-21
# ::node	0.0.0.0.1.0	union	18-19
# ::node	0.0.0.0.1.0.0	home	17-18
# ::node	0.0.0.0.1.1	prompt	15-16
# ::node	0.0.0.0.1.1.0	date-entity	13-14
# ::node	0.0.0.0.1.1.0.0	5	13-14
# ::node	0.0.0.0.1.1.1	also	14-15
# ::node	0.0.0.1	name	27-29
# ::node	0.0.0.1.0	"africa"	27-29
# ::node	0.0.0.1.1	"south"	27-29
# ::node	0.0.1	international	10-11
# ::root	0	generous-41
# ::edge	approve-01	ARG0	regulate-01	0.0.0.0	0.0.0.0.0	
# ::edge	approve-01	ARG1	country	0.0.0.0	0.0.0	
# ::edge	country	name	name	0.0.0	0.0.0.1	
# ::edge	date-entity	domain	prompt	0.0.0.0.1.1.0	0.0.0.0.1.1	
# ::edge	date-entity	month	5	0.0.0.0.1.1.0	0.0.0.0.1.1.0.0	
# ::edge	expend-01	ARG0	country	0.0	0.0.0	
# ::edge	expend-01	ARG1	international	0.0	0.0.1	
# ::edge	generous-41	ARG1	expend-01	0	0.0	
# ::edge	name	op1	"africa"	0.0.0.1	0.0.0.1.0	
# ::edge	name	op2	"south"	0.0.0.1	0.0.0.1.1	
# ::edge	prompt	mod	also	0.0.0.0.1.1	0.0.0.0.1.1.1	
# ::edge	prompt	purpose	think-01	0.0.0.0.1.1	0.0.0.0.1	
# ::edge	regulate-01	ARG1	individual	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	think-01	ARG0	union	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	think-01	ARG1	approve-01	0.0.0.0.1	0.0.0.0	
# ::edge	union	mod	home	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	uphold-01	ARG0	principle	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	uphold-01	ARG1	regulate-01	0.0.0.0.0.1	0.0.0.0.0	
(g / generous-41 
      :ARG1 (e / expend-01 
            :ARG0 (c / country 
                  :ARG1-of (a / approve-01 
                        :ARG0 (r / regulate-01 
                              :ARG1 (i / individual) 
                              :ARG1-of (u2 / uphold-01 
                                    :ARG0 (p2 / principle))) 
                        :ARG1-of (t / think-01 
                              :ARG0 (u / union 
                                    :mod (h / home)) 
                              :purpose-of (p / prompt 
                                    :domain-of (d / date-entity 
                                          :month 5) 
                                    :mod (a2 / also)))) 
                  :name (n / name 
                        :op1 "africa" 
                        :op2 "south")) 
            :ARG1 (i2 / international)))

# ::snt souster was a great fan of the new directions publications and was generous with gifts from john laughlins press
# ::tok souster was a great fan of the new directions publications and was generous with gifts from john laughlins press
# ::alignments 18-19|0.1.1.0 14-15|0.1.1 12-13|0.1 10-11|0 9-10|0.1.0 8-9|0.1.0.0 7-8|0.1.0.1 4-5|0.0 3-4|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:16.385
# ::node	0	and	10-11
# ::node	0.0	fan	4-5
# ::node	0.0.0	great	3-4
# ::node	0.1	generous-41	12-13
# ::node	0.1.0	publication	9-10
# ::node	0.1.0.0	direction	8-9
# ::node	0.1.0.1	new	7-8
# ::node	0.1.1	gift-01	14-15
# ::node	0.1.1.0	press	18-19
# ::root	0	and
# ::edge	and	op1	fan	0	0.0	
# ::edge	and	op2	generous-41	0	0.1	
# ::edge	fan	mod	great	0.0	0.0.0	
# ::edge	generous-41	ARG1	publication	0.1	0.1.0	
# ::edge	generous-41	ARG2	gift-01	0.1	0.1.1	
# ::edge	gift-01	ARG1	press	0.1.1	0.1.1.0	
# ::edge	publication	mod	direction	0.1.0	0.1.0.0	
# ::edge	publication	mod	new	0.1.0	0.1.0.1	
(a / and 
      :op1 (f / fan 
            :mod (g3 / great)) 
      :op2 (g2 / generous-41 
            :ARG1 (p2 / publication 
                  :mod (d / direction) 
                  :mod (n / new)) 
            :ARG2 (g / gift-01 
                  :ARG1 (p / press))))

# ::snt in the house of commons he was welcoming and generous
# ::tok in the house of commons he was welcoming and generous
# ::alignments 9-10|0.0 8-9|0 5-6|0.0.0 4-5|0.0.0.0.0.0.0+0.0.0.0.0.0+0.0.0.0.0 2-3|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:16.401
# ::node	0	and	8-9
# ::node	0.0	generous-41	9-10
# ::node	0.0.0	he	5-6
# ::node	0.0.0.0	house	2-3
# ::node	0.0.0.0.0	government-organization	4-5
# ::node	0.0.0.0.0.0	name	4-5
# ::node	0.0.0.0.0.0.0	"Commons"	4-5
# ::root	0	and
# ::edge	and	op1	generous-41	0	0.0	
# ::edge	generous-41	ARG1	he	0.0	0.0.0	
# ::edge	government-organization	name	name	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	house	mod	government-organization	0.0.0.0	0.0.0.0.0	
# ::edge	house	poss	he	0.0.0.0	0.0.0	
# ::edge	name	op1	"Commons"	0.0.0.0.0.0	0.0.0.0.0.0.0	
(a / and 
      :op1 (g / generous-41 
            :ARG1 (h / he 
                  :poss-of (h2 / house 
                        :mod (g2 / government-organization 
                              :name (n / name 
                                    :op1 "Commons"))))))

# ::snt i think es owed that said sprott i think es owed a generous tribute
# ::tok i think es owed that said sprott i think es owed a generous tribute
# ::alignments 13-14|0.0.1.0 12-13|0.0.1.0.0 10-11|0.0.1 8-9|0.0 7-8|0.0.0 5-6|0 3-4|0.1 1-2|0.1.0.0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:16.431
# ::node	0	say-01	5-6
# ::node	0.0	think-01	8-9
# ::node	0.0.0	i	7-8
# ::node	0.0.1	owe-01	10-11
# ::node	0.0.1.0	tribute	13-14
# ::node	0.0.1.0.0	generous-41	12-13
# ::node	0.1	owe-01	3-4
# ::node	0.1.0	i	0-1
# ::node	0.1.0.0	think-01	1-2
# ::root	0	say-01
# ::edge	generous-41	ARG1	tribute	0.0.1.0.0	0.0.1.0	
# ::edge	owe-01	ARG0	i	0.1	0.1.0	
# ::edge	owe-01	ARG1	say-01	0.1	0	
# ::edge	owe-01	ARG1	tribute	0.0.1	0.0.1.0	
# ::edge	say-01	ARG1	think-01	0	0.0	
# ::edge	think-01	ARG0	i	0.0	0.0.0	
# ::edge	think-01	ARG0	i	0.1.0.0	0.1.0	
# ::edge	think-01	ARG1	owe-01	0.0	0.0.1	
(s / say-01 
      :ARG1 (t2 / think-01 
            :ARG0 (i / i) 
            :ARG1 (o / owe-01 
                  :ARG1 (t / tribute 
                        :ARG1-of (g / generous-41)))) 
      :ARG1-of (o2 / owe-01 
            :ARG0 (i2 / i 
                  :ARG0-of (t3 / think-01))))

# ::snt a child benefit freeze has invariably followed a budget which has made generous increases in the full range of personal tax allowances
# ::tok a child benefit freeze has invariably followed a budget which has made generous increases in the full range of personal tax allowances
# ::alignments 21-22|0.1.0.0.0 20-21|0.1.0.0.0.0 19-20|0.1.0.0.0.0.0 17-18|0.1.0.0 16-17|0.1.0.0.1 13-14|0.1.0 12-13|0.1.0.1 8-9|0.1 6-7|0 5-6|0.2.0+0.2 3-4|0.0 2-3|0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:16.677
# ::node	0	follow-01	6-7
# ::node	0.0	freeze-02	3-4
# ::node	0.0.0	benefit-01	2-3
# ::node	0.0.0.0	child	1-2
# ::node	0.1	budget	8-9
# ::node	0.1.0	increase-01	13-14
# ::node	0.1.0.0	range-01	17-18
# ::node	0.1.0.0.0	allowance	21-22
# ::node	0.1.0.0.0.0	tax-01	20-21
# ::node	0.1.0.0.0.0.0	personal	19-20
# ::node	0.1.0.0.1	full	16-17
# ::node	0.1.0.1	generous-41	12-13
# ::node	0.2	variable	5-6
# ::node	0.2.0	-	5-6
# ::root	0	follow-01
# ::edge	allowance	mod	tax-01	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	benefit-01	ARG1	child	0.0.0	0.0.0.0	
# ::edge	follow-01	ARG1	freeze-02	0	0.0	
# ::edge	follow-01	ARG2	budget	0	0.1	
# ::edge	follow-01	manner	variable	0	0.2	
# ::edge	freeze-02	ARG1	benefit-01	0.0	0.0.0	
# ::edge	generous-41	ARG1	increase-01	0.1.0.1	0.1.0	
# ::edge	increase-01	ARG0	budget	0.1.0	0.1	
# ::edge	increase-01	ARG1	range-01	0.1.0	0.1.0.0	
# ::edge	range-01	ARG1	allowance	0.1.0.0	0.1.0.0.0	
# ::edge	range-01	ARG2	full	0.1.0.0	0.1.0.0.1	
# ::edge	tax-01	mod	personal	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	variable	polarity	-	0.2	0.2.0	
(f2 / follow-01 
      :ARG1 (f3 / freeze-02 
            :ARG1 (b2 / benefit-01 
                  :ARG1 (c / child))) 
      :ARG2 (b / budget 
            :ARG0-of (i / increase-01 
                  :ARG1 (r / range-01 
                        :ARG1 (a / allowance 
                              :mod (t / tax-01 
                                    :mod (p / personal))) 
                        :ARG2 (f / full)) 
                  :ARG1-of (g / generous-41))) 
      :manner (v / variable 
            :polarity -))

# ::snt   many people believe northern irelands judges are more generous than those in britain in making compensation awards
# ::tok many people believe northern irelands judges are more generous than those in britain in making compensation awards
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:16.677
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt just in case you find the generous portions are not filling the gap large stacks of buttered brown bread sit on the tables alongside big glass bowls of mayonnaise and french dressing and a clutter of sauce bottles and pepper pots
# ::tok just in case you find the generous portions are not filling the gap large stacks of buttered brown bread sit on the tables alongside big glass bowls of mayonnaise and french dressing and a clutter of sauce bottles and pepper pots
# ::alignments 38-39|0.0.4 37-38|0.0.4.0.0+0.0.4.0 32-33|0.1 31-32|0.0 30-31|0.0.3.0.0+0.0.3.0+0.0.3 29-30|0 25-26|0.0.2.0.0.0.0 24-25|0.0.2.0.0.0 23-24|0.0.2.3 22-23|0.0.2.2 19-20|0.0.2 18-19|0.0.0.0 17-18|0.0.0 13-14|0.0.1 12-13|0.0.2.1 7-8|0.0.2.0 6-7|0.0.2.0.0 3-4|0.0.2.1.0 2-3|0.0.2.1.0.0 0-1|0.0.2.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:16.997
# ::node	0	and	29-30
# ::node	0.0	dress-01	31-32
# ::node	0.0.0	brown	17-18
# ::node	0.0.0.0	bread	18-19
# ::node	0.0.1	large	13-14
# ::node	0.0.2	sit-01	19-20
# ::node	0.0.2.0	portion	7-8
# ::node	0.0.2.0.0	generous-41	6-7
# ::node	0.0.2.0.0.0	big	24-25
# ::node	0.0.2.0.0.0.0	glass	25-26
# ::node	0.0.2.1	gap	12-13
# ::node	0.0.2.1.0	you	3-4
# ::node	0.0.2.1.0.0	case	2-3
# ::node	0.0.2.1.0.0.0	just	0-1
# ::node	0.0.2.2	table	22-23
# ::node	0.0.2.3	alongside	23-24
# ::node	0.0.3	country	30-31
# ::node	0.0.3.0	name	30-31
# ::node	0.0.3.0.0	"France"	30-31
# ::node	0.0.4	and	38-39
# ::node	0.0.4.0	volume-quantity	37-38
# ::node	0.0.4.0.0	bottle	37-38
# ::node	0.1	and	32-33
# ::root	0	and
# ::edge	and	op1	dress-01	0	0.0	
# ::edge	and	op1	dress-01	0.0.4	0.0	
# ::edge	and	op2	and	0	0.1	
# ::edge	and	op2	volume-quantity	0.0.4	0.0.4.0	
# ::edge	big	op1	generous-41	0.0.2.0.0.0	0.0.2.0.0	
# ::edge	bread	mod	brown	0.0.0.0	0.0.0	
# ::edge	case	mod	just	0.0.2.1.0.0	0.0.2.1.0.0.0	
# ::edge	case	poss	you	0.0.2.1.0.0	0.0.2.1.0	
# ::edge	country	name	name	0.0.3	0.0.3.0	
# ::edge	dress-01	ARG0	brown	0.0	0.0.0	
# ::edge	dress-01	ARG1	large	0.0	0.0.1	
# ::edge	dress-01	mod	country	0.0	0.0.3	
# ::edge	gap	poss	you	0.0.2.1	0.0.2.1.0	
# ::edge	generous-41	ARG1	portion	0.0.2.0.0	0.0.2.0	
# ::edge	glass	mod	big	0.0.2.0.0.0.0	0.0.2.0.0.0	
# ::edge	name	op1	"France"	0.0.3.0	0.0.3.0.0	
# ::edge	sit-01	ARG0	portion	0.0.2	0.0.2.0	
# ::edge	sit-01	ARG1	gap	0.0.2	0.0.2.1	
# ::edge	sit-01	ARG2	table	0.0.2	0.0.2.2	
# ::edge	sit-01	duration	alongside	0.0.2	0.0.2.3	
# ::edge	sit-01	duration	dress-01	0.0.2	0.0	
# ::edge	volume-quantity	unit	bottle	0.0.4.0	0.0.4.0.0	
(a3 / and 
      :op1 (d / dress-01 
            :ARG0 (b4 / brown 
                  :mod-of (b3 / bread)) 
            :ARG1 (l / large) 
            :duration-of (s / sit-01 
                  :ARG0 (p / portion 
                        :ARG1-of (g3 / generous-41 
                              :op-of (b2 / big 
                                    :mod-of (g / glass)))) 
                  :ARG1 (g2 / gap 
                        :poss (y / you 
                              :poss-of (c2 / case 
                                    :mod (j / just)))) 
                  :ARG2 (t / table) 
                  :duration (a4 / alongside)) 
            :mod (c / country 
                  :name (n / name 
                        :op1 "France")) 
            :op-of (a / and 
                  :op1 (v / volume-quantity 
                        :unit (b / bottle)))) 
      :op2 (a2 / and))

# ::snt from this generous lobby looked down on by diners perched high in the domes galleries shoppers will be able to pass either directly down to the openair market in the shadow of old st martins church explore the curving threestorey shopping halls or snack in a galaxy of glitzy cafes
# ::tok from this generous lobby looked down on by diners perched high in the domes galleries shoppers will be able to pass either directly down to the openair market in the shadow of old st martins church explore the curving threestorey shopping halls or snack in a galaxy of glitzy cafes
# ::alignments 49-50|0.0 43-44|0.2.2.0.1 42-43|0.2.2.0 40-41|0.1 36-37|0.3.0 35-36|0.3 32-33|0.2.0 30-31|0 27-28|0.1.0 23-24|0.1.0.0 22-23|0.1.0.0.0 21-22|0.2.2.0.0 18-19|0.2.1 10-11|0.2.2.1.0 9-10|0.2 5-6|0.2.2.2 4-5|0.2.2 3-4|0.2.2.1 2-3|0.2.2.1.1 1-2|0.2.2.1.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:17.328
# ::node	0	shadow-01	30-31
# ::node	0.0	cafe	49-50
# ::node	0.1	shop-01	40-41
# ::node	0.1.0	market	27-28
# ::node	0.1.0.0	down	23-24
# ::node	0.1.0.0.0	direct	22-23
# ::node	0.2	perch-01	9-10
# ::node	0.2.0	old	32-33
# ::node	0.2.1	possible	18-19
# ::node	0.2.2	look-01	4-5
# ::node	0.2.2.0	or	42-43
# ::node	0.2.2.0.0	either	21-22
# ::node	0.2.2.0.1	snack	43-44
# ::node	0.2.2.1	lobby-01	3-4
# ::node	0.2.2.1.0	high	10-11
# ::node	0.2.2.1.1	generous-41	2-3
# ::node	0.2.2.1.2	this	1-2
# ::node	0.2.2.2	down	5-6
# ::node	0.3	church	35-36
# ::node	0.3.0	explore-01	36-37
# ::root	0	shadow-01
# ::edge	down	degree	direct	0.1.0.0	0.1.0.0.0	
# ::edge	down	op1	market	0.1.0.0	0.1.0	
# ::edge	explore-01	ARG0	church	0.3.0	0.3	
# ::edge	generous-41	ARG1	lobby-01	0.2.2.1.1	0.2.2.1	
# ::edge	lobby-01	ARG1	high	0.2.2.1	0.2.2.1.0	
# ::edge	lobby-01	mod	this	0.2.2.1	0.2.2.1.2	
# ::edge	look-01	ARG0	or	0.2.2	0.2.2.0	
# ::edge	look-01	ARG1	lobby-01	0.2.2	0.2.2.1	
# ::edge	look-01	direction	down	0.2.2	0.2.2.2	
# ::edge	look-01	time	perch-01	0.2.2	0.2	
# ::edge	or	mod	either	0.2.2.0	0.2.2.0.0	
# ::edge	or	op1	snack	0.2.2.0	0.2.2.0.1	
# ::edge	perch-01	ARG0	old	0.2	0.2.0	
# ::edge	perch-01	ARG1	possible	0.2	0.2.1	
# ::edge	perch-01	ARG2	shadow-01	0.2	0	
# ::edge	shadow-01	ARG0	cafe	0	0.0	
# ::edge	shadow-01	ARG1	shop-01	0	0.1	
# ::edge	shadow-01	location	church	0	0.3	
# ::edge	shop-01	ARG1	market	0.1	0.1.0	
(s3 / shadow-01 
      :ARG0 (c / cafe) 
      :ARG1 (s2 / shop-01 
            :ARG1 (m / market 
                  :op-of (d / down 
                        :degree (d2 / direct)))) 
      :ARG2-of (p2 / perch-01 
            :ARG0 (o2 / old) 
            :ARG1 (p / possible) 
            :time-of (l / look-01 
                  :ARG0 (o / or 
                        :mod (e2 / either) 
                        :op1 (s / snack)) 
                  :ARG1 (l2 / lobby-01 
                        :ARG1 (h / high) 
                        :ARG1-of (g / generous-41) 
                        :mod (t / this)) 
                  :direction (d3 / down))) 
      :location (c2 / church 
            :ARG0-of (e / explore-01)))

# ::snt oxfords chancellor lord jenkins of hillhead said that fiats generous and welldirected gift would lead to a glorious revival in the top italian post which has been vacant for two years because of lack of funds
# ::tok oxfords chancellor lord jenkins of hillhead said that fiats generous and welldirected gift would lead to a glorious revival in the top italian post which has been vacant for two years because of lack of funds
# ::alignments 35-36|0.0.0 33-34|0.0 31-32|0 30-31|0.1.1.1.0.1+0.1.1.1.0 29-30|0.1.1.1.0.0 23-24|0.1.1.1.1.0 22-23|0.1.1.1.1.0.1.0.0+0.1.1.1.1.0.1.0+0.1.1.1.1.0.1 21-22|0.1.1.1.1.0.0 18-19|0.1.1.1.1 17-18|0.1.1.1.1.1 12-13|0.1.1 10-11|0.1 9-10|0.1.1.1 6-7|0.1.0 2-3|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:17.583
# ::node	0	cause-01	31-32
# ::node	0.0	lack-01	33-34
# ::node	0.0.0	fund	35-36
# ::node	0.1	and	10-11
# ::node	0.1.0	say-01	6-7
# ::node	0.1.1	gift-01	12-13
# ::node	0.1.1.0	lord	2-3
# ::node	0.1.1.1	generous-41	9-10
# ::node	0.1.1.1.0	temporal-quantity	30-31
# ::node	0.1.1.1.0.0	2	29-30
# ::node	0.1.1.1.0.1	year	30-31
# ::node	0.1.1.1.1	revive-01	18-19
# ::node	0.1.1.1.1.0	post	23-24
# ::node	0.1.1.1.1.0.0	top	21-22
# ::node	0.1.1.1.1.0.1	language	22-23
# ::node	0.1.1.1.1.0.1.0	name	22-23
# ::node	0.1.1.1.1.0.1.0.0	"Italian"	22-23
# ::node	0.1.1.1.1.1	glorious	17-18
# ::root	0	cause-01
# ::edge	and	op1	say-01	0.1	0.1.0	
# ::edge	and	op2	gift-01	0.1	0.1.1	
# ::edge	cause-01	ARG0	lack-01	0	0.0	
# ::edge	cause-01	ARG1	and	0	0.1	
# ::edge	generous-41	ARG1	temporal-quantity	0.1.1.1	0.1.1.1.0	
# ::edge	generous-41	ARG2	gift-01	0.1.1.1	0.1.1	
# ::edge	gift-01	ARG0	lord	0.1.1	0.1.1.0	
# ::edge	lack-01	ARG1	fund	0.0	0.0.0	
# ::edge	language	name	name	0.1.1.1.1.0.1	0.1.1.1.1.0.1.0	
# ::edge	name	op1	"Italian"	0.1.1.1.1.0.1.0	0.1.1.1.1.0.1.0.0	
# ::edge	post	mod	language	0.1.1.1.1.0	0.1.1.1.1.0.1	
# ::edge	post	mod	top	0.1.1.1.1.0	0.1.1.1.1.0.0	
# ::edge	revive-01	ARG1	post	0.1.1.1.1	0.1.1.1.1.0	
# ::edge	revive-01	mod	glorious	0.1.1.1.1	0.1.1.1.1.1	
# ::edge	revive-01	purpose	generous-41	0.1.1.1.1	0.1.1.1	
# ::edge	temporal-quantity	quant	2	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	temporal-quantity	unit	year	0.1.1.1.0	0.1.1.1.0.1	
(c / cause-01 
      :ARG0 (l / lack-01 
            :ARG1 (f / fund)) 
      :ARG1 (a / and 
            :op1 (s / say-01) 
            :op2 (g2 / gift-01 
                  :ARG0 (l3 / lord) 
                  :ARG2-of (g3 / generous-41 
                        :ARG1 (t / temporal-quantity 
                              :quant 2 
                              :unit (y / year)) 
                        :purpose-of (r / revive-01 
                              :ARG1 (p / post 
                                    :mod (t2 / top) 
                                    :mod (l2 / language 
                                          :name (n / name 
                                                :op1 "Italian"))) 
                              :mod (g / glorious))))))

# ::snt mrs jarvis said people were incredibly generous and their stuff did get to where it was needed
# ::tok mrs jarvis said people were incredibly generous and their stuff did get to where it was needed
# ::alignments 16-17|0.0.0.0 14-15|0.0.0.0.0 9-10|0.0.0 7-8|0.0 6-7|0.1 5-6|0.1.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:17.689
# ::node	0	say-01	2-3
# ::node	0.0	and	7-8
# ::node	0.0.0	stuff	9-10
# ::node	0.0.0.0	need-01	16-17
# ::node	0.0.0.0.0	it	14-15
# ::node	0.1	generous-41	6-7
# ::node	0.1.0	incredible	5-6
# ::root	0	say-01
# ::edge	and	op1	stuff	0.0	0.0.0	
# ::edge	generous-41	degree	incredible	0.1	0.1.0	
# ::edge	need-01	ARG0	stuff	0.0.0.0	0.0.0	
# ::edge	need-01	ARG1	it	0.0.0.0	0.0.0.0.0	
# ::edge	say-01	ARG1	and	0	0.0	
# ::edge	say-01	condition	generous-41	0	0.1	
(s2 / say-01 
      :ARG1 (a / and 
            :op1 (s / stuff 
                  :ARG0-of (n / need-01 
                        :ARG1 (i / it)))) 
      :condition (g / generous-41 
            :degree (i2 / incredible)))

# ::snt 1bn for pearl group yesterday reiterated that its 605p per share cash offer was generous and fully valued the company
# ::tok 1bn for pearl group yesterday reiterated that its 605p per share cash offer was generous and fully valued the company
# ::alignments 19-20|0.0.0 17-18|0.2 16-17|0.2.1 15-16|0 14-15|0.2.0 12-13|0.1.0 11-12|0.1.0.0 10-11|0.1 5-6|0.0 4-5|0.0.1 3-4|0.0.0.0 2-3|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:17.923
# ::node	0	and	15-16
# ::node	0.0	reiterate-01	5-6
# ::node	0.0.0	company	19-20
# ::node	0.0.0.0	group	3-4
# ::node	0.0.0.0.0	pearl	2-3
# ::node	0.0.1	yesterday	4-5
# ::node	0.1	share-01	10-11
# ::node	0.1.0	offer-01	12-13
# ::node	0.1.0.0	cash	11-12
# ::node	0.2	value-01	17-18
# ::node	0.2.0	generous-41	14-15
# ::node	0.2.1	full	16-17
# ::root	0	and
# ::edge	and	op1	share-01	0	0.1	
# ::edge	and	op2	value-01	0	0.2	
# ::edge	group	poss	company	0.0.0.0	0.0.0	
# ::edge	offer-01	ARG1	cash	0.1.0	0.1.0.0	
# ::edge	pearl	consist	group	0.0.0.0.0	0.0.0.0	
# ::edge	reiterate-01	ARG0	company	0.0	0.0.0	
# ::edge	reiterate-01	ARG1	yesterday	0.0	0.0.1	
# ::edge	reiterate-01	manner	and	0.0	0	
# ::edge	share-01	ARG1	offer-01	0.1	0.1.0	
# ::edge	value-01	ARG1	generous-41	0.2	0.2.0	
# ::edge	value-01	degree	full	0.2	0.2.1	
(a / and 
      :manner-of (r / reiterate-01 
            :ARG0 (c / company 
                  :poss-of (g2 / group 
                        :consist-of (p / pearl))) 
            :ARG1 (y / yesterday)) 
      :op1 (s / share-01 
            :ARG1 (o / offer-01 
                  :ARG1 (c2 / cash))) 
      :op2 (v / value-01 
            :ARG1 (g / generous-41) 
            :degree (f / full)))

# ::snt and maggie was more generous than her mother or grandmother she was determined to share her joy
# ::tok and maggie was more generous than her mother or grandmother she was determined to share her joy
# ::alignments 16-17|0.1.0.0 14-15|0.1.0 12-13|0 10-11|0.1 8-9|0.0 7-8|0.1.1.1+0.1.1 4-5|0.1.1.0 0-1|0.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:18.028
# ::node	0	determine-01	12-13
# ::node	0.0	or	8-9
# ::node	0.1	she	10-11
# ::node	0.1.0	share-01	14-15
# ::node	0.1.0.0	joy	16-17
# ::node	0.1.1	have-rel-role-91	7-8
# ::node	0.1.1.0	generous-41	4-5
# ::node	0.1.1.0.0	and	0-1
# ::node	0.1.1.1	mother	7-8
# ::root	0	determine-01
# ::edge	determine-01	ARG0	or	0	0.0	
# ::edge	determine-01	ARG1	she	0	0.1	
# ::edge	generous-41	ARG0	and	0.1.1.0	0.1.1.0.0	
# ::edge	generous-41	ARG1	have-rel-role-91	0.1.1.0	0.1.1	
# ::edge	have-rel-role-91	ARG1	she	0.1.1	0.1	
# ::edge	have-rel-role-91	ARG2	mother	0.1.1	0.1.1.1	
# ::edge	share-01	ARG0	she	0.1.0	0.1	
# ::edge	share-01	ARG1	joy	0.1.0	0.1.0.0	
(d / determine-01 
      :ARG0 (o / or) 
      :ARG1 (s2 / she 
            :ARG0-of (s / share-01 
                  :ARG1 (j / joy)) 
            :ARG1-of (h / have-rel-role-91 
                  :ARG1-of (g / generous-41 
                        :ARG0 (a / and)) 
                  :ARG2 (m / mother))))

# ::snt   only time will tell whether waterstones comment that the proposal was very imaginative of them particularly given my personal background with smiths was generous or naive
# ::tok only time will tell whether waterstones comment that the proposal was very imaginative of them particularly given my personal background with smiths was generous or naive
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:18.029
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt mrs moore was demanding but she was also generous
# ::tok mrs moore was demanding but she was also generous
# ::alignments 8-9|0.0 7-8|0.0.2 5-6|0.0.0 4-5|0 3-4|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:18.041
# ::node	0	contrast-01	4-5
# ::node	0.0	generous-41	8-9
# ::node	0.0.0	she	5-6
# ::node	0.0.1	demand-01	3-4
# ::node	0.0.2	also	7-8
# ::root	0	contrast-01
# ::edge	contrast-01	ARG2	generous-41	0	0.0	
# ::edge	demand-01	ARG1	generous-41	0.0.1	0.0	
# ::edge	generous-41	ARG1	she	0.0	0.0.0	
# ::edge	generous-41	mod	also	0.0	0.0.2	
(c / contrast-01 
      :ARG2 (g / generous-41 
            :ARG1 (s / she) 
            :ARG1-of (d / demand-01) 
            :mod (a / also)))

# ::snt as director of the budget and finance commission he also gave generous financial support to the army the same force whose commander dash
# ::tok as director of the budget and finance commission he also gave generous financial support to the army the same force whose commander dash
# ::alignments 21-22|0.0.1.0.0.0.0+0.0.1.0.0.0 19-20|0.0.1.0.0 18-19|0.0.1.0 16-17|0.0.1 13-14|0.0 12-13|0.0.2 11-12|0 9-10|0.0.0 8-9|0.0.1.0.0.1 7-8|0.0.1.0.0.1.0.2.0.0 6-7|0.0.1.0.0.1.0.2.0 5-6|0.0.1.0.0.1.0.2 4-5|0.0.1.0.0.1.0.0 1-2|0.0.1.0.0.1.0.1+0.0.1.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:18.210
# ::node	0	generous-41	11-12
# ::node	0.0	support-01	13-14
# ::node	0.0.0	also	9-10
# ::node	0.0.1	army	16-17
# ::node	0.0.1.0	same-41	18-19
# ::node	0.0.1.0.0	force	19-20
# ::node	0.0.1.0.0.0	have-org-role-91	21-22
# ::node	0.0.1.0.0.0.0	commander	21-22
# ::node	0.0.1.0.0.1	he	8-9
# ::node	0.0.1.0.0.1.0	have-org-role-91	1-2
# ::node	0.0.1.0.0.1.0.0	budget	4-5
# ::node	0.0.1.0.0.1.0.1	director	1-2
# ::node	0.0.1.0.0.1.0.2	and	5-6
# ::node	0.0.1.0.0.1.0.2.0	finance-01	6-7
# ::node	0.0.1.0.0.1.0.2.0.0	commission	7-8
# ::node	0.0.2	finance	12-13
# ::root	0	generous-41
# ::edge	and	op1	have-org-role-91	0.0.1.0.0.1.0.2	0.0.1.0.0.1.0	
# ::edge	and	op2	finance-01	0.0.1.0.0.1.0.2	0.0.1.0.0.1.0.2.0	
# ::edge	finance-01	ARG0	commission	0.0.1.0.0.1.0.2.0	0.0.1.0.0.1.0.2.0.0	
# ::edge	force	poss	he	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	generous-41	ARG1	support-01	0	0.0	
# ::edge	have-org-role-91	ARG0	he	0.0.1.0.0.1.0	0.0.1.0.0.1	
# ::edge	have-org-role-91	ARG1	budget	0.0.1.0.0.1.0	0.0.1.0.0.1.0.0	
# ::edge	have-org-role-91	ARG1	force	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	have-org-role-91	ARG2	commander	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	have-org-role-91	ARG2	director	0.0.1.0.0.1.0	0.0.1.0.0.1.0.1	
# ::edge	same-41	ARG0	army	0.0.1.0	0.0.1	
# ::edge	same-41	ARG1	force	0.0.1.0	0.0.1.0.0	
# ::edge	support-01	ARG0	also	0.0	0.0.0	
# ::edge	support-01	ARG1	army	0.0	0.0.1	
# ::edge	support-01	mod	finance	0.0	0.0.2	
(g / generous-41 
      :ARG1 (s2 / support-01 
            :ARG0 (a2 / also) 
            :ARG1 (a / army 
                  :ARG0-of (s / same-41 
                        :ARG1 (f / force 
                              :ARG1-of (h / have-org-role-91 
                                    :ARG2 (c / commander)) 
                              :poss (h2 / he 
                                    :ARG0-of (h3 / have-org-role-91 
                                          :ARG1 (b / budget) 
                                          :ARG2 (d / director) 
                                          :op-of (a3 / and 
                                                :op1 (f3 / finance-01 
                                                      :ARG0 (c2 / commission)))))))) 
            :mod (f2 / finance)))

# ::snt it will attempt to outflank sue by ever wider and more generous judgments of liability
# ::tok it will attempt to outflank sue by ever wider and more generous judgments of liability
# ::alignments 14-15|0.1.0 11-12|0.1 9-10|0 8-9|0.1.1 7-8|0.2 5-6|0.0 2-3|0.0.0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:18.244
# ::node	0	and	9-10
# ::node	0.0	sue-01	5-6
# ::node	0.0.0	it	0-1
# ::node	0.0.0.0	attempt-01	2-3
# ::node	0.1	generous-41	11-12
# ::node	0.1.0	liability	14-15
# ::node	0.1.1	wide	8-9
# ::node	0.2	ever	7-8
# ::root	0	and
# ::edge	and	manner	ever	0	0.2	
# ::edge	attempt-01	ARG0	it	0.0.0.0	0.0.0	
# ::edge	generous-41	ARG0	liability	0.1	0.1.0	
# ::edge	generous-41	ARG1	wide	0.1	0.1.1	
# ::edge	generous-41	example	and	0.1	0	
# ::edge	sue-01	ARG0	it	0.0	0.0.0	
# ::edge	sue-01	ARG1	and	0.0	0	
(a / and 
      :ARG1-of (s / sue-01 
            :ARG0 (i / it 
                  :ARG0-of (a2 / attempt-01))) 
      :example-of (g / generous-41 
            :ARG0 (l / liability) 
            :ARG1 (w / wide)) 
      :manner (e / ever))

# ::snt the double breast of chicken was topped with a generous helping of prawns snow crab smoked salmon and broccoli florets in a rich hollandaise sauce served with mushrooms
# ::tok the double breast of chicken was topped with a generous helping of prawns snow crab smoked salmon and broccoli florets in a rich hollandaise sauce served with mushrooms
# ::alignments 27-28|0.1.0.1 25-26|0.1.0 22-23|0.0.0.0 17-18|0 15-16|0.1 13-14|0.0.0.1 10-11|0.0 9-10|0.0.0 6-7|0.1.0.0.0 4-5|0.1.0.2 2-3|0.1.0.0 1-2|0.1.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:18.441
# ::node	0	and	17-18
# ::node	0.0	help-01	10-11
# ::node	0.0.0	generous-41	9-10
# ::node	0.0.0.0	rich	22-23
# ::node	0.0.0.1	snow	13-14
# ::node	0.1	smoke-02	15-16
# ::node	0.1.0	serve-01	25-26
# ::node	0.1.0.0	breast	2-3
# ::node	0.1.0.0.0	top-02	6-7
# ::node	0.1.0.0.1	double	1-2
# ::node	0.1.0.1	mushroom	27-28
# ::node	0.1.0.2	chicken	4-5
# ::root	0	and
(a / and 
      :ARG1-of (h / help-01 
            :degree (g / generous-41 
                  :ARG1 (r / rich) 
                  :mod-of (s3 / snow))) 
      :ARG1-of (s2 / smoke-02 
            :purpose (s / serve-01 
                  :ARG0 (b / breast 
                        :ARG1-of (t / top-02) 
                        :mod (d / double)) 
                  :ARG1 (m / mushroom) 
                  :ARG2 (c / chicken))))

# ::snt from the royal collection one of the exhibitions most generous lenders comes the beautiful onion chopper 1646 by gerrit dou a pupil of rembrandt and one of the leiden schools most important painters
# ::tok from the royal collection one of the exhibitions most generous lenders comes the beautiful onion chopper 1646 by gerrit dou a pupil of rembrandt and one of the leiden schools most important painters
# ::alignments 31-32|0 30-31|0.1 29-30|0.1.0 24-25|0.0.1.1 16-17|0.0.0.0.0+0.0.0.0 13-14|0.0.2.0 10-11|0.0 9-10|0.0.2 8-9|0.0.2.1 7-8|0.0.0 3-4|0.0.1 2-3|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T22:51:18.561
# ::node	0	important	31-32
# ::node	0.0	lend-01	10-11
# ::node	0.0.0	exhibit-01	7-8
# ::node	0.0.0.0	date-entity	16-17
# ::node	0.0.0.0.0	1646	16-17
# ::node	0.0.1	collect-01	3-4
# ::node	0.0.1.0	royal	2-3
# ::node	0.0.1.1	and	24-25
# ::node	0.0.2	generous-41	9-10
# ::node	0.0.2.0	beautiful	13-14
# ::node	0.0.2.1	most	8-9
# ::node	0.1	most	30-31
# ::node	0.1.0	school	29-30
# ::root	0	important
# ::edge	and	op1	collect-01	0.0.1.1	0.0.1	
# ::edge	collect-01	ARG0	royal	0.0.1	0.0.1.0	
# ::edge	collect-01	ARG1	lend-01	0.0.1	0.0	
# ::edge	date-entity	year	1646	0.0.0.0	0.0.0.0.0	
# ::edge	exhibit-01	ARG0	date-entity	0.0.0	0.0.0.0	
# ::edge	exhibit-01	ARG1	lend-01	0.0.0	0.0	
# ::edge	generous-41	ARG1	beautiful	0.0.2	0.0.2.0	
# ::edge	generous-41	ARG2	lend-01	0.0.2	0.0	
# ::edge	generous-41	degree	most	0.0.2	0.0.2.1	
# ::edge	important	degree	most	0	0.1	
# ::edge	lend-01	ARG1	important	0.0	0	
# ::edge	most	mod	school	0.1	0.1.0	
(i / important 
      :ARG1-of (l / lend-01 
            :ARG1-of (e / exhibit-01 
                  :ARG0 (d / date-entity 
                        :year 1646)) 
            :ARG1-of (c / collect-01 
                  :ARG0 (r / royal) 
                  :op-of (a / and)) 
            :ARG2-of (g / generous-41 
                  :ARG1 (b / beautiful) 
                  :degree (m2 / most))) 
      :degree (m / most 
            :mod (s / school)))

