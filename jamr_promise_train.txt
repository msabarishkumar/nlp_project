# ::snt i thought of going out for some choc bars he would say adding sotto voce as his daughter ran for her anorak and i thought we might drop off at the gym  piano teachers  library on the way ellip   he promised her a sight of arfur this morning
# ::tok i thought of going out for some choc bars he would say adding sotto voce as his daughter ran for her anorak and i thought we might drop off at the gym piano teachers library on the way ellip he promised her a sight of arfur this morning
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:09.523
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt we know we have money promised through covenants but we will need additional money as well said mr chadwick
# ::tok we know we have money promised through covenants but we will need additional money as well said mr chadwick
# ::alignments 16-17|0 15-16|0.0.1.2 13-14|0.0.1.1 12-13|0.0.1.1.0 11-12|0.0.1 9-10|0.0.1.0 8-9|0.0 7-8|0.0.2.2 5-6|0.0.2 4-5|0.0.2.1 2-3|0.0.2.0 1-2|0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:14.728
# ::node	0	say-01	16-17
# ::node	0.0	contrast-01	8-9
# ::node	0.0.0	know-01	1-2
# ::node	0.0.0.0	we	0-1
# ::node	0.0.1	need-01	11-12
# ::node	0.0.1.0	we	9-10
# ::node	0.0.1.1	money	13-14
# ::node	0.0.1.1.0	additional	12-13
# ::node	0.0.1.2	well	15-16
# ::node	0.0.2	promise-01	5-6
# ::node	0.0.2.0	we	2-3
# ::node	0.0.2.1	money	4-5
# ::node	0.0.2.2	covenant	7-8
# ::root	0	say-01
# ::edge	contrast-01	ARG1	know-01	0.0	0.0.0	
# ::edge	contrast-01	ARG2	need-01	0.0	0.0.1	
# ::edge	know-01	ARG0	we	0.0.0	0.0.0.0	
# ::edge	money	mod	additional	0.0.1.1	0.0.1.1.0	
# ::edge	need-01	ARG0	we	0.0.1	0.0.1.0	
# ::edge	need-01	ARG1	money	0.0.1	0.0.1.1	
# ::edge	need-01	time	well	0.0.1	0.0.1.2	
# ::edge	promise-01	ARG0	we	0.0.2	0.0.2.0	
# ::edge	promise-01	ARG1	money	0.0.2	0.0.2.1	
# ::edge	promise-01	ARG2	contrast-01	0.0.2	0.0	
# ::edge	promise-01	location	covenant	0.0.2	0.0.2.2	
# ::edge	say-01	ARG1	contrast-01	0	0.0	
(s / say-01 
      :ARG1 (c / contrast-01 
            :ARG1 (k / know-01 
                  :ARG0 (w4 / we)) 
            :ARG2 (n / need-01 
                  :ARG0 (w2 / we) 
                  :ARG1 (m / money 
                        :mod (a / additional)) 
                  :time (w / well)) 
            :ARG2-of (p / promise-01 
                  :ARG0 (w3 / we) 
                  :ARG1 (m2 / money) 
                  :location (c2 / covenant))))

# ::snt even in vast zaire president mobutu sese seko has promised to end singleparty rule he is under mounting pressure from critics in belgium and america
# ::tok even in vast zaire president mobutu sese seko has promised to end singleparty rule he is under mounting pressure from critics in belgium and america
# ::alignments 24-25|0.1.0.0+0.1.0+0.1 23-24|0 20-21|0.2 18-19|0.0 17-18|0.0.0 14-15|0.0.0.0 13-14|0.0.0.0.0 9-10|0.0.0.0.0.0.0 5-8|0.0.0.0.0.0.2.0+0.0.0.0.0.0.2.1+0.0.0.0.0.0.2.2+0.0.0.0.0.0.2+0.0.0.0.0.0 4-5|0.0.0.0.0.0.1.0+0.0.0.0.0.0.1 2-3|0.0.0.0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:15.617
# ::node	0	and	23-24
# ::node	0.0	pressure-01	18-19
# ::node	0.0.0	mount-02	17-18
# ::node	0.0.0.0	he	14-15
# ::node	0.0.0.0.0	rule-03	13-14
# ::node	0.0.0.0.0.0	person	5-8
# ::node	0.0.0.0.0.0.0	promise-01	9-10
# ::node	0.0.0.0.0.0.1	have-org-role-91	4-5
# ::node	0.0.0.0.0.0.1.0	president	4-5
# ::node	0.0.0.0.0.0.1.0.0	vast	2-3
# ::node	0.0.0.0.0.0.2	name	5-8
# ::node	0.0.0.0.0.0.2.0	"seko"	5-8
# ::node	0.0.0.0.0.0.2.1	"sese"	5-8
# ::node	0.0.0.0.0.0.2.2	"mobutu"	5-8
# ::node	0.1	country	24-25
# ::node	0.1.0	name	24-25
# ::node	0.1.0.0	"America"	24-25
# ::node	0.2	critic	20-21
# ::root	0	and
# ::edge	and	op1	pressure-01	0	0.0	
# ::edge	and	op2	country	0	0.1	
# ::edge	country	name	name	0.1	0.1.0	
# ::edge	critic	poss	and	0.2	0	
# ::edge	have-org-role-91	ARG0	person	0.0.0.0.0.0.1	0.0.0.0.0.0	
# ::edge	have-org-role-91	ARG2	president	0.0.0.0.0.0.1	0.0.0.0.0.0.1.0	
# ::edge	mount-02	ARG0	he	0.0.0	0.0.0.0	
# ::edge	mount-02	ARG1	pressure-01	0.0.0	0.0	
# ::edge	name	op1	"America"	0.1.0	0.1.0.0	
# ::edge	name	op1	"seko"	0.0.0.0.0.0.2	0.0.0.0.0.0.2.0	
# ::edge	name	op2	"sese"	0.0.0.0.0.0.2	0.0.0.0.0.0.2.1	
# ::edge	name	op3	"mobutu"	0.0.0.0.0.0.2	0.0.0.0.0.0.2.2	
# ::edge	person	name	name	0.0.0.0.0.0	0.0.0.0.0.0.2	
# ::edge	president	mod	vast	0.0.0.0.0.0.1.0	0.0.0.0.0.0.1.0.0	
# ::edge	promise-01	ARG0	person	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	rule-03	ARG0	person	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	rule-03	ARG1	he	0.0.0.0.0	0.0.0.0	
(a / and 
      :op1 (p / pressure-01 
            :ARG1-of (m / mount-02 
                  :ARG0 (h / he 
                        :ARG1-of (r / rule-03 
                              :ARG0 (p3 / person 
                                    :ARG0-of (p2 / promise-01) 
                                    :ARG0-of (h2 / have-org-role-91 
                                          :ARG2 (p4 / president 
                                                :mod (v / vast))) 
                                    :name (n2 / name 
                                          :op1 "seko" 
                                          :op2 "sese" 
                                          :op3 "mobutu")))))) 
      :op2 (c / country 
            :name (n / name 
                  :op1 "America")) 
      :poss-of (c2 / critic))

# ::snt dr aneez esmail a registrar in public health medicine said a year ago david mellor as junior health minister promised some action but a year has gone by and nothing has changed
# ::tok dr aneez esmail a registrar in public health medicine said a year ago david mellor as junior health minister promised some action but a year has gone by and nothing has changed
# ::alignments 31-32|0.2 29-30|0.2.0 28-29|0.2.2 24-25|0.2.1 22-23|0 21-22|0.0.1 20-21|0.0.1.0 19-20|0.0 18-19|0.0.0+0.0.0.0 17-18|0.0.0.0.0 16-17|0.0.0.0.0.0 11-12|0.1.1 9-10|0.1 8-9|0.1.0 7-8|0.1.0.0 6-7|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:16.723
# ::node	0	contrast-01	22-23
# ::node	0.0	promise-01	19-20
# ::node	0.0.0	minister	18-19
# ::node	0.0.0.0	have-org-role-91	18-19
# ::node	0.0.0.0.0	health	17-18
# ::node	0.0.0.0.0.0	junior	16-17
# ::node	0.0.1	action	21-22
# ::node	0.0.1.0	some	20-21
# ::node	0.1	say-01	9-10
# ::node	0.1.0	medicine	8-9
# ::node	0.1.0.0	health	7-8
# ::node	0.1.0.0.0	public	6-7
# ::node	0.1.1	year	11-12
# ::node	0.2	change-01	31-32
# ::node	0.2.0	nothing	29-30
# ::node	0.2.1	year	24-25
# ::node	0.2.2	and	28-29
# ::root	0	contrast-01
# ::edge	action	quant	some	0.0.1	0.0.1.0	
# ::edge	and	op1	change-01	0.2.2	0.2	
# ::edge	change-01	ARG0	nothing	0.2	0.2.0	
# ::edge	change-01	ARG1	year	0.2	0.2.1	
# ::edge	contrast-01	ARG1	promise-01	0	0.0	
# ::edge	contrast-01	ARG2	change-01	0	0.2	
# ::edge	have-org-role-91	ARG1	health	0.0.0.0	0.0.0.0.0	
# ::edge	have-org-role-91	ARG2	minister	0.0.0.0	0.0.0	
# ::edge	health	mod	junior	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	health	mod	public	0.1.0.0	0.1.0.0.0	
# ::edge	medicine	beneficiary	health	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG1	minister	0.0	0.0.0	
# ::edge	promise-01	ARG2	action	0.0	0.0.1	
# ::edge	say-01	ARG0	medicine	0.1	0.1.0	
# ::edge	say-01	ARG1	contrast-01	0.1	0	
# ::edge	say-01	ARG2	year	0.1	0.1.1	
(c2 / contrast-01 
      :ARG1 (p / promise-01 
            :ARG1 (m / minister 
                  :ARG2-of (h / have-org-role-91 
                        :ARG1 (h2 / health 
                              :mod (j / junior)))) 
            :ARG2 (a2 / action 
                  :quant (s / some))) 
      :ARG1-of (s2 / say-01 
            :ARG0 (m2 / medicine 
                  :beneficiary (h3 / health 
                        :mod (p2 / public))) 
            :ARG2 (y2 / year)) 
      :ARG2 (c / change-01 
            :ARG0 (n / nothing) 
            :ARG1 (y / year) 
            :op-of (a / and)))

# ::snt the publicity indistinguishable from the surrounding pornography promises that accounts of lesbianism beatings and seduction await
# ::tok the publicity indistinguishable from the surrounding pornography promises that accounts of lesbianism beatings and seduction await
# ::alignments 13-14|0 12-13|0.1 9-10|0.2 7-8|0.0 6-7|0.0.1.0 5-6|0.0.1 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:16.832
# ::node	0	and	13-14
# ::node	0.0	promise-01	7-8
# ::node	0.0.0	publicity	1-2
# ::node	0.0.1	surround-01	5-6
# ::node	0.0.1.0	pornography	6-7
# ::node	0.1	beat-01	12-13
# ::node	0.2	account	9-10
# ::root	0	and
# ::edge	account	topic	and	0.2	0	
# ::edge	and	op1	beat-01	0	0.1	
# ::edge	promise-01	ARG0	publicity	0.0	0.0.0	
# ::edge	promise-01	ARG1	and	0.0	0	
# ::edge	surround-01	ARG0	promise-01	0.0.1	0.0	
# ::edge	surround-01	ARG1	pornography	0.0.1	0.0.1.0	
(a / and 
      :ARG1-of (p / promise-01 
            :ARG0 (p3 / publicity) 
            :ARG0-of (s / surround-01 
                  :ARG1 (p2 / pornography))) 
      :op1 (b / beat-01) 
      :topic-of (a2 / account))

# ::snt proposed arms cuts promised this week by the us defence secretary dick cheney go beyond the levels now being negotiated in vienna and are expected to crank the talks back on course in time for a deal within a year
# ::tok proposed arms cuts promised this week by the us defence secretary dick cheney go beyond the levels now being negotiated in vienna and are expected to crank the talks back on course in time for a deal within a year
# ::alignments 39-40|0.0.0 37-38|0.0.0.0 36-37|0.0 33-34|0.3.1.0 29-30|0.3.1.1 28-29|0.3.1 24-25|0.3 22-23|0 17-18|0.1.2.0 16-17|0.3.0 14-15|0.3.0.0 11-13|0.2.0.0+0.2.0.1+0.2.0+0.2 10-11|0.1.2.1 9-10|0.1.2 5-6|0.1.1 4-5|0.1.1.0 3-4|0.1 2-3|0.1.0 1-2|0.1.0.0 0-1|0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:17.793
# ::node	0	and	22-23
# ::node	0.0	deal-01	36-37
# ::node	0.0.0	year	39-40
# ::node	0.0.0.0	within	37-38
# ::node	0.1	promise-01	3-4
# ::node	0.1.0	cut-02	2-3
# ::node	0.1.0.0	arm	1-2
# ::node	0.1.0.1	propose-01	0-1
# ::node	0.1.1	week	5-6
# ::node	0.1.1.0	this	4-5
# ::node	0.1.2	defend-01	9-10
# ::node	0.1.2.0	now	17-18
# ::node	0.1.2.1	secretary	10-11
# ::node	0.2	person	11-13
# ::node	0.2.0	name	11-13
# ::node	0.2.0.0	"cheney"	11-13
# ::node	0.2.0.1	"dick"	11-13
# ::node	0.3	expect-01	24-25
# ::node	0.3.0	level	16-17
# ::node	0.3.0.0	beyond	14-15
# ::node	0.3.1	talk-01	28-29
# ::node	0.3.1.0	time	33-34
# ::node	0.3.1.1	back	29-30
# ::root	0	and
# ::edge	and	op1	promise-01	0	0.1	
# ::edge	and	op2	person	0	0.2	
# ::edge	and	op3	expect-01	0	0.3	
# ::edge	beyond	op1	level	0.3.0.0	0.3.0	
# ::edge	cut-02	ARG1	arm	0.1.0	0.1.0.0	
# ::edge	deal-01	ARG0	and	0.0	0	
# ::edge	deal-01	ARG1	year	0.0	0.0.0	
# ::edge	defend-01	ARG1	now	0.1.2	0.1.2.0	
# ::edge	expect-01	ARG0	level	0.3	0.3.0	
# ::edge	expect-01	ARG1	talk-01	0.3	0.3.1	
# ::edge	name	op1	"cheney"	0.2.0	0.2.0.0	
# ::edge	name	op2	"dick"	0.2.0	0.2.0.1	
# ::edge	person	name	name	0.2	0.2.0	
# ::edge	promise-01	ARG0	cut-02	0.1	0.1.0	
# ::edge	promise-01	ARG1	week	0.1	0.1.1	
# ::edge	promise-01	time	defend-01	0.1	0.1.2	
# ::edge	propose-01	ARG1	cut-02	0.1.0.1	0.1.0	
# ::edge	secretary	mod	defend-01	0.1.2.1	0.1.2	
# ::edge	talk-01	ARG0	time	0.3.1	0.3.1.0	
# ::edge	talk-01	ARG1	back	0.3.1	0.3.1.1	
# ::edge	week	mod	this	0.1.1	0.1.1.0	
# ::edge	within	op1	year	0.0.0.0	0.0.0	
(a / and 
      :ARG0-of (d / deal-01 
            :ARG1 (y / year 
                  :op-of (w / within))) 
      :op1 (p2 / promise-01 
            :ARG0 (c / cut-02 
                  :ARG1 (a2 / arm) 
                  :ARG1-of (p3 / propose-01)) 
            :ARG1 (w2 / week 
                  :mod (t3 / this)) 
            :time (d2 / defend-01 
                  :ARG1 (n / now) 
                  :mod-of (s / secretary))) 
      :op2 (p / person 
            :name (n2 / name 
                  :op1 "cheney" 
                  :op2 "dick")) 
      :op3 (e / expect-01 
            :ARG0 (l / level 
                  :op-of (b2 / beyond)) 
            :ARG1 (t2 / talk-01 
                  :ARG0 (t / time) 
                  :ARG1 (b / back))))

# ::snt the deadlock was not conjured away by the ingenious compromise of december 1932 promising germany equality of status within a system of security
# ::tok the deadlock was not conjured away by the ingenious compromise of december 1932 promising germany equality of status within a system of security
# ::alignments 22-23|0.0.2.1 20-21|0.0.2.0 18-19|0.0.2 17-18|0.0.1.0 15-16|0.0.1 13-14|0.0 11-13|0.0.4.1+0.0.4.0+0.0.4 9-10|0.0.0 5-6|0.0.3 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:18.329
# ::node	0	deadlock-01	1-2
# ::node	0.0	promise-01	13-14
# ::node	0.0.0	compromise-01	9-10
# ::node	0.0.1	equal-01	15-16
# ::node	0.0.1.0	status	17-18
# ::node	0.0.2	within	18-19
# ::node	0.0.2.0	system	20-21
# ::node	0.0.2.1	security	22-23
# ::node	0.0.3	away	5-6
# ::node	0.0.4	date-entity	11-13
# ::node	0.0.4.0	12	11-13
# ::node	0.0.4.1	1932	11-13
# ::root	0	deadlock-01
(d2 / deadlock-01 
      :ARG0-of (p / promise-01 
            :ARG1 (c / compromise-01) 
            :ARG2 (e / equal-01 
                  :ARG1 (s3 / status)) 
            :location (w / within 
                  :op1 (s2 / system) 
                  :op2 (s / security)) 
            :op-of (a / away) 
            :time (d / date-entity 
                  :month 12 
                  :year 1932)))

# ::snt the workers education authority based in brewers street oxford has promised to send tutors to the centre for six weeks starting tomorrow
# ::tok the workers education authority based in brewers street oxford has promised to send tutors to the centre for six weeks starting tomorrow
# ::alignments 21-22|0.1.1 20-21|0.1.1.0 19-20|0.1.0.0.0.1+0.1.0.0.0 18-19|0.1.0.0.0.0 13-14|0.1.0.0+0.1.0 12-13|0.1 10-11|0 7-8|0.0.1.1 4-5|0.0.0 3-4|0.0 2-3|0.0.1 1-2|0.0.1.0.0+0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:18.822
# ::node	0	promise-01	10-11
# ::node	0.0	authority	3-4
# ::node	0.0.0	base-01	4-5
# ::node	0.0.1	educate-01	2-3
# ::node	0.0.1.0	person	1-2
# ::node	0.0.1.0.0	work-01	1-2
# ::node	0.0.1.1	street	7-8
# ::node	0.1	send-01	12-13
# ::node	0.1.0	person	13-14
# ::node	0.1.0.0	tutor-01	13-14
# ::node	0.1.0.0.0	temporal-quantity	19-20
# ::node	0.1.0.0.0.0	6	18-19
# ::node	0.1.0.0.0.1	week	19-20
# ::node	0.1.1	tomorrow	21-22
# ::node	0.1.1.0	start-01	20-21
# ::root	0	promise-01
# ::edge	base-01	ARG1	authority	0.0.0	0.0	
# ::edge	educate-01	ARG0	person	0.0.1	0.0.1.0	
# ::edge	educate-01	ARG1	authority	0.0.1	0.0	
# ::edge	educate-01	ARG3	street	0.0.1	0.0.1.1	
# ::edge	promise-01	ARG0	authority	0	0.0	
# ::edge	promise-01	ARG2	send-01	0	0.1	
# ::edge	send-01	ARG1	person	0.1	0.1.0	
# ::edge	send-01	time	tomorrow	0.1	0.1.1	
# ::edge	start-01	ARG1	tomorrow	0.1.1.0	0.1.1	
# ::edge	temporal-quantity	quant	6	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	temporal-quantity	unit	week	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	tutor-01	ARG0	person	0.1.0.0	0.1.0	
# ::edge	tutor-01	duration	temporal-quantity	0.1.0.0	0.1.0.0.0	
# ::edge	work-01	ARG0	person	0.0.1.0.0	0.0.1.0	
(p2 / promise-01 
      :ARG0 (a / authority 
            :ARG1-of (b / base-01) 
            :ARG1-of (e / educate-01 
                  :ARG0 (p3 / person 
                        :ARG0-of (w2 / work-01)) 
                  :ARG3 (s3 / street))) 
      :ARG2 (s2 / send-01 
            :ARG1 (p / person 
                  :ARG0-of (t3 / tutor-01 
                        :duration (t2 / temporal-quantity 
                              :quant 6 
                              :unit (w / week)))) 
            :time (t / tomorrow 
                  :ARG1-of (s / start-01))))

# ::snt the council has also promised not to be a party to any tobacco advertising
# ::tok the council has also promised not to be a party to any tobacco advertising
# ::alignments 12-13|0.2 11-12|0.1.0 9-10|0.1 4-5|0 3-4|0.3 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:18.959
# ::node	0	promise-01	4-5
# ::node	0.0	council	1-2
# ::node	0.1	party	9-10
# ::node	0.1.0	any	11-12
# ::node	0.2	tobacco	12-13
# ::node	0.3	also	3-4
# ::root	0	promise-01
# ::edge	party	prep-to	any	0.1	0.1.0	
# ::edge	promise-01	ARG0	council	0	0.0	
# ::edge	promise-01	ARG1	party	0	0.1	
# ::edge	promise-01	ARG2	tobacco	0	0.2	
# ::edge	promise-01	mod	also	0	0.3	
(p2 / promise-01 
      :ARG0 (c / council) 
      :ARG1 (p / party 
            :prep-to (a / any)) 
      :ARG2 (t / tobacco) 
      :mod (a2 / also))

# ::snt for example i have a duty to water certain plants because i promised their owners to looked after them while they are away on holiday
# ::tok for example i have a duty to water certain plants because i promised their owners to looked after them while they are away on holiday
# ::alignments 24-25|0.0.2.0 22-23|0.2 20-21|0.1.0.1 17-18|0.0.2.1 16-17|0.0.2 14-15|0.0.0.0.0+0.0.0.0 12-13|0.0 11-12|0.0.0 10-11|0 9-10|0.0.1 8-9|0.0.1.0 7-8|0.1 5-6|0.1.0 2-3|0.1.0.0 1-2|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:19.302
# ::node	0	cause-01	10-11
# ::node	0.0	promise-01	12-13
# ::node	0.0.0	i	11-12
# ::node	0.0.0.0	person	14-15
# ::node	0.0.0.0.0	own-01	14-15
# ::node	0.0.0.0.1	example	1-2
# ::node	0.0.1	plant	9-10
# ::node	0.0.1.0	certain	8-9
# ::node	0.0.2	look-01	16-17
# ::node	0.0.2.0	holiday	24-25
# ::node	0.0.2.1	after	17-18
# ::node	0.1	water	7-8
# ::node	0.1.0	duty	5-6
# ::node	0.1.0.0	i	2-3
# ::node	0.1.0.1	they	20-21
# ::node	0.2	away	22-23
# ::root	0	cause-01
# ::edge	away	op1	cause-01	0.2	0	
# ::edge	cause-01	ARG0	promise-01	0	0.0	
# ::edge	cause-01	ARG1	water	0	0.1	
# ::edge	duty	example	i	0.1.0	0.1.0.0	
# ::edge	duty	poss	they	0.1.0	0.1.0.1	
# ::edge	example	mod	person	0.0.0.0.1	0.0.0.0	
# ::edge	look-01	ARG1	holiday	0.0.2	0.0.2.0	
# ::edge	look-01	time	after	0.0.2	0.0.2.1	
# ::edge	own-01	ARG0	person	0.0.0.0.0	0.0.0.0	
# ::edge	person	poss	i	0.0.0.0	0.0.0	
# ::edge	plant	mod	certain	0.0.1	0.0.1.0	
# ::edge	promise-01	ARG0	i	0.0	0.0.0	
# ::edge	promise-01	ARG1	plant	0.0	0.0.1	
# ::edge	promise-01	ARG2	look-01	0.0	0.0.2	
# ::edge	water	consist	duty	0.1	0.1.0	
(c / cause-01 
      :ARG0 (p2 / promise-01 
            :ARG0 (i / i 
                  :poss-of (p / person 
                        :ARG0-of (o / own-01) 
                        :mod-of (e / example))) 
            :ARG1 (p3 / plant 
                  :mod (c2 / certain)) 
            :ARG2 (l / look-01 
                  :ARG1 (h / holiday) 
                  :time (a2 / after))) 
      :ARG1 (w / water 
            :consist (d / duty 
                  :example (i2 / i) 
                  :poss (t / they))) 
      :op-of (a / away))

# ::snt ive promised them all total confidentiality
# ::tok ive promised them all total confidentiality
# ::alignments 5-6|0.0 3-4|0.0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:19.314
# ::node	0	promise-01	1-2
# ::node	0.0	confidentiality	5-6
# ::node	0.0.0	all	3-4
# ::root	0	promise-01
# ::edge	confidentiality	quant	all	0.0	0.0.0	
# ::edge	promise-01	ARG2	confidentiality	0	0.0	
(p / promise-01 
      :ARG2 (c / confidentiality 
            :quant (a / all)))

# ::snt but the british md was promising too much technical development to customers without checking with the r and
# ::tok but the british md was promising too much technical development to customers without checking with the r and
# ::alignments 17-18|0.0 13-14|0.0.0 11-12|0.0.2.0 9-10|0.0.2 8-9|0.0.2.2 7-8|0.0.2.1 6-7|0.0.2.1.0 5-6|0.0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:19.402
# ::node	0	contrast-01	0-1
# ::node	0.0	and	17-18
# ::node	0.0.0	check-01	13-14
# ::node	0.0.1	promise-01	5-6
# ::node	0.0.2	develop-02	9-10
# ::node	0.0.2.0	customer	11-12
# ::node	0.0.2.1	much	7-8
# ::node	0.0.2.1.0	too	6-7
# ::node	0.0.2.2	technical	8-9
# ::root	0	contrast-01
# ::edge	and	op1	promise-01	0.0	0.0.1	
# ::edge	and	op2	develop-02	0.0	0.0.2	
# ::edge	check-01	ARG1	and	0.0.0	0.0	
# ::edge	contrast-01	ARG2	and	0	0.0	
# ::edge	develop-02	ARG1	customer	0.0.2	0.0.2.0	
# ::edge	develop-02	degree	much	0.0.2	0.0.2.1	
# ::edge	develop-02	mod	technical	0.0.2	0.0.2.2	
# ::edge	much	degree	too	0.0.2.1	0.0.2.1.0	
(c3 / contrast-01 
      :ARG2 (a / and 
            :ARG1-of (c / check-01) 
            :op1 (p / promise-01) 
            :op2 (d / develop-02 
                  :ARG1 (c2 / customer) 
                  :degree (m / much 
                        :degree (t2 / too)) 
                  :mod (t / technical))))

# ::snt instead the conference agreed to try to persuade boat people to return home while promising to review this policy in october
# ::tok instead the conference agreed to try to persuade boat people to return home while promising to review this policy in october
# ::alignments 20-21|0.1.1.1.0+0.1.1.1 18-19|0.2.0.0 17-18|0.2.0.1.0 16-17|0.2.0 14-15|0.2.0.1 12-13|0.2 8-9|0.0 7-8|0 5-6|0.1 3-4|0.1.1 2-3|0.1.0 0-1|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:20.175
# ::node	0	persuade-01	7-8
# ::node	0.0	boat	8-9
# ::node	0.1	try-01	5-6
# ::node	0.1.0	conference	2-3
# ::node	0.1.1	agree-01	3-4
# ::node	0.1.1.0	instead	0-1
# ::node	0.1.1.1	date-entity	20-21
# ::node	0.1.1.1.0	10	20-21
# ::node	0.2	home	12-13
# ::node	0.2.0	review-01	16-17
# ::node	0.2.0.0	policy	18-19
# ::node	0.2.0.1	promise-01	14-15
# ::node	0.2.0.1.0	this	17-18
# ::root	0	persuade-01
# ::edge	agree-01	ARG1	try-01	0.1.1	0.1	
# ::edge	agree-01	concession	instead	0.1.1	0.1.1.0	
# ::edge	agree-01	time	date-entity	0.1.1	0.1.1.1	
# ::edge	date-entity	month	10	0.1.1.1	0.1.1.1.0	
# ::edge	persuade-01	ARG1	boat	0	0.0	
# ::edge	persuade-01	ARG2	home	0	0.2	
# ::edge	promise-01	ARG0	this	0.2.0.1	0.2.0.1.0	
# ::edge	promise-01	ARG1	review-01	0.2.0.1	0.2.0	
# ::edge	review-01	ARG0	home	0.2.0	0.2	
# ::edge	review-01	ARG1	policy	0.2.0	0.2.0.0	
# ::edge	try-01	ARG0	conference	0.1	0.1.0	
# ::edge	try-01	ARG1	persuade-01	0.1	0	
(p3 / persuade-01 
      :ARG1 (b / boat) 
      :ARG1-of (t2 / try-01 
            :ARG0 (c / conference) 
            :ARG1-of (a / agree-01 
                  :concession (i / instead) 
                  :time (d / date-entity 
                        :month 10))) 
      :ARG2 (h / home 
            :ARG0-of (r / review-01 
                  :ARG1 (p / policy) 
                  :ARG1-of (p2 / promise-01 
                        :ARG0 (t / this)))))

# ::snt for three seasons now barnet have promised to win the gm vauxhall conference only to display their annual spring cleanout of ideas
# ::tok for three seasons now barnet have promised to win the gm vauxhall conference only to display their annual spring cleanout of ideas
# ::alignments 21-22|0.1.1.0.1 18-19|0.1.1.0.0 15-16|0.1.1.0 13-14|0.1.1.0.2 12-13|0.1.1 8-9|0.1 6-7|0 3-4|0.0 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:20.318
# ::node	0	promise-01	6-7
# ::node	0.0	now	3-4
# ::node	0.1	win-01	8-9
# ::node	0.1.0	3	1-2
# ::node	0.1.1	conference	12-13
# ::node	0.1.1.0	display-01	15-16
# ::node	0.1.1.0.0	spring	18-19
# ::node	0.1.1.0.1	idea	21-22
# ::node	0.1.1.0.2	only	13-14
# ::root	0	promise-01
# ::edge	display-01	ARG0	conference	0.1.1.0	0.1.1	
# ::edge	display-01	ARG1	spring	0.1.1.0	0.1.1.0.0	
# ::edge	display-01	manner	idea	0.1.1.0	0.1.1.0.1	
# ::edge	display-01	mod	only	0.1.1.0	0.1.1.0.2	
# ::edge	promise-01	ARG1	now	0	0.0	
# ::edge	promise-01	ARG2	win-01	0	0.1	
# ::edge	win-01	ARG0	3	0.1	0.1.0	
# ::edge	win-01	ARG1	conference	0.1	0.1.1	
(p / promise-01 
      :ARG1 (n / now) 
      :ARG2 (w / win-01 
            :ARG0 3 
            :ARG1 (c / conference 
                  :ARG0-of (d / display-01 
                        :ARG1 (s / spring) 
                        :manner (i / idea) 
                        :mod (o / only)))))

# ::snt during that trip he was promised 200 sovietdesigned t55 tanks as a gift
# ::tok during that trip he was promised 200 sovietdesigned t55 tanks as a gift
# ::alignments 12-13|0.0.0 9-10|0.0.0.0 6-7|0.0.0.0.0 5-6|0 3-4|0.0 2-3|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:20.369
# ::node	0	promise-01	5-6
# ::node	0.0	he	3-4
# ::node	0.0.0	gift-01	12-13
# ::node	0.0.0.0	tank	9-10
# ::node	0.0.0.0.0	200	6-7
# ::node	0.1	trip-01	2-3
# ::root	0	promise-01
# ::edge	gift-01	ARG0	he	0.0.0	0.0	
# ::edge	gift-01	ARG1	tank	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG0	he	0	0.0	
# ::edge	promise-01	ARG1	trip-01	0	0.1	
# ::edge	tank	quant	200	0.0.0.0	0.0.0.0.0	
(p / promise-01 
      :ARG0 (h / he 
            :ARG0-of (g / gift-01 
                  :ARG1 (t / tank 
                        :quant 200))) 
      :ARG1 (t2 / trip-01))

# ::snt he promised an end to serfdom reform of landholdings and an extension of the suffrage a programme which in turn alienated an important part of the magyar gentry and rendered them much more favourably disposed to suspending national demands in favour of outside intervention to protect existing social relationships
# ::tok he promised an end to serfdom reform of landholdings and an extension of the suffrage a programme which in turn alienated an important part of the magyar gentry and rendered them much more favourably disposed to suspending national demands in favour of outside intervention to protect existing social relationships
# ::alignments 48-49|0.0.0.1.0.0.0 47-48|0.0.0.1.0.0.0.0 46-47|0.0.0.1.0.0.1.2 45-46|0.0.0.1.0.0 43-44|0.0.0.1.0.0.1 42-43|0.0.0.1.0.0.1.0 40-41|0.0.0.1.0.0.1.1 38-39|0 37-38|0.1 36-37|0.0 34-35|0.0.0 31-32|0.0.0.0 29-30|0.0.0.1 28-29|0.0.0.1.1 22-23|0.0.0.1.0.1.0 20-21|0.0.0.1.0.2 16-17|0.0.0.1.0.2.0 11-12|0.0.0.1.1.0.0.0 9-10|0.0.0.1.1.0.0 6-7|0.0.0.1.1.0 1-2|0.0.0.1.0.1 0-1|0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:21.296
# ::node	0	demand-01	38-39
# ::node	0.0	suspend-01	36-37
# ::node	0.0.0	dispose-01	34-35
# ::node	0.0.0.0	much	31-32
# ::node	0.0.0.1	render-01	29-30
# ::node	0.0.0.1.0	he	0-1
# ::node	0.0.0.1.0.0	protect-01	45-46
# ::node	0.0.0.1.0.0.0	relationship	48-49
# ::node	0.0.0.1.0.0.0.0	society	47-48
# ::node	0.0.0.1.0.0.1	intervene-01	43-44
# ::node	0.0.0.1.0.0.1.0	outside	42-43
# ::node	0.0.0.1.0.0.1.1	favor-01	40-41
# ::node	0.0.0.1.0.0.1.2	exist-01	46-47
# ::node	0.0.0.1.0.1	promise-01	1-2
# ::node	0.0.0.1.0.1.0	important	22-23
# ::node	0.0.0.1.0.2	alienate-01	20-21
# ::node	0.0.0.1.0.2.0	program	16-17
# ::node	0.0.0.1.1	and	28-29
# ::node	0.0.0.1.1.0	reform-01	6-7
# ::node	0.0.0.1.1.0.0	and	9-10
# ::node	0.0.0.1.1.0.0.0	extend-01	11-12
# ::node	0.1	nation	37-38
# ::root	0	demand-01
# ::edge	alienate-01	ARG0	he	0.0.0.1.0.2	0.0.0.1.0	
# ::edge	alienate-01	ARG1	program	0.0.0.1.0.2	0.0.0.1.0.2.0	
# ::edge	and	op1	reform-01	0.0.0.1.1.0.0	0.0.0.1.1.0	
# ::edge	and	op1	render-01	0.0.0.1.1	0.0.0.1	
# ::edge	and	op2	extend-01	0.0.0.1.1.0.0	0.0.0.1.1.0.0.0	
# ::edge	demand-01	mod	nation	0	0.1	
# ::edge	dispose-01	ARG0	much	0.0.0	0.0.0.0	
# ::edge	dispose-01	ARG1	suspend-01	0.0.0	0.0	
# ::edge	exist-01	ARG1	intervene-01	0.0.0.1.0.0.1.2	0.0.0.1.0.0.1	
# ::edge	favor-01	ARG1	intervene-01	0.0.0.1.0.0.1.1	0.0.0.1.0.0.1	
# ::edge	intervene-01	ARG0	outside	0.0.0.1.0.0.1	0.0.0.1.0.0.1.0	
# ::edge	intervene-01	ARG1	protect-01	0.0.0.1.0.0.1	0.0.0.1.0.0	
# ::edge	promise-01	ARG0	he	0.0.0.1.0.1	0.0.0.1.0	
# ::edge	promise-01	ARG1	important	0.0.0.1.0.1	0.0.0.1.0.1.0	
# ::edge	protect-01	ARG0	he	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	protect-01	ARG1	relationship	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	reform-01	ARG1	and	0.0.0.1.1.0	0.0.0.1.1	
# ::edge	relationship	mod	society	0.0.0.1.0.0.0	0.0.0.1.0.0.0.0	
# ::edge	render-01	ARG0	he	0.0.0.1	0.0.0.1.0	
# ::edge	render-01	ARG1	dispose-01	0.0.0.1	0.0.0	
# ::edge	suspend-01	ARG1	demand-01	0.0	0	
(d / demand-01 
      :ARG1-of (s2 / suspend-01 
            :ARG1-of (d2 / dispose-01 
                  :ARG0 (m / much) 
                  :ARG1-of (r2 / render-01 
                        :ARG0 (h / he 
                              :ARG0-of (p / protect-01 
                                    :ARG1 (r / relationship 
                                          :mod (s / society)) 
                                    :ARG1-of (i / intervene-01 
                                          :ARG0 (o / outside) 
                                          :ARG1-of (f / favor-01) 
                                          :ARG1-of (e / exist-01))) 
                              :ARG0-of (p3 / promise-01 
                                    :ARG1 (i2 / important)) 
                              :ARG0-of (a2 / alienate-01 
                                    :ARG1 (p2 / program))) 
                        :op-of (a / and 
                              :ARG1-of (r3 / reform-01 
                                    :op-of (a3 / and 
                                          :op1 (e2 / extend-01))))))) 
      :mod (n / nation))

# ::snt meanwhile free elections were promised for the spring of next year
# ::tok meanwhile free elections were promised for the spring of next year
# ::alignments 10-11|0.1.0 9-10|0.1.0.0 7-8|0.0.0 4-5|0.0 2-3|0 1-2|0.1 0-1|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:21.357
# ::node	0	elect-01	2-3
# ::node	0.0	promise-01	4-5
# ::node	0.0.0	spring	7-8
# ::node	0.1	free-41	1-2
# ::node	0.1.0	year	10-11
# ::node	0.1.0.0	next	9-10
# ::node	0.1.1	meanwhile	0-1
# ::root	0	elect-01
(e / elect-01 
      :ARG0-of (p / promise-01 
            :ARG1 (s / spring)) 
      :ARG1-of (f / free-41 
            :ARG0 (y / year 
                  :mod (n / next)) 
            :manner (m / meanwhile)))

# ::snt henri leconte another player of imagination many would like to see succeed on grass promised much but eventually failed to deliver against the burly austrian alex antonitsch and went down 26 64 76 26 63
# ::tok henri leconte another player of imagination many would like to see succeed on grass promised much but eventually failed to deliver against the burly austrian alex antonitsch and went down 26 64 76 26 63
# ::alignments 32-35|0.0.0.0.1.3+0.0.0.0.1.1+0.0.0.0.1.0+0.0.0.0.1 31-32|0.0.0.0.1.2 30-31|0.1.0 29-30|0.1.0.0 27-28|0.1.2 20-21|0.1.1 18-19|0.1 17-18|0.1.3 16-17|0 15-16|0.0.1 14-15|0.0 13-14|0.0.0 11-12|0.0.0.0 10-11|0.0.0.0.0 6-7|0.0.0.0.0.0 2-3|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:22.037
# ::node	0	contrast-01	16-17
# ::node	0.0	promise-01	14-15
# ::node	0.0.0	grass-roots	13-14
# ::node	0.0.0.0	succeed-01	11-12
# ::node	0.0.0.0.0	see-01	10-11
# ::node	0.0.0.0.0.0	many	6-7
# ::node	0.0.0.0.1	date-entity	32-35
# ::node	0.0.0.0.1.0	63	32-35
# ::node	0.0.0.0.1.1	26	32-35
# ::node	0.0.0.0.1.2	64	31-32
# ::node	0.0.0.0.1.3	76	32-35
# ::node	0.0.1	much	15-16
# ::node	0.1	fail-01	18-19
# ::node	0.1.0	26	30-31
# ::node	0.1.0.0	down	29-30
# ::node	0.1.1	deliver-01	20-21
# ::node	0.1.1.0	another	2-3
# ::node	0.1.2	and	27-28
# ::node	0.1.3	eventual	17-18
# ::root	0	contrast-01
# ::edge	and	op1	fail-01	0.1.2	0.1	
# ::edge	contrast-01	ARG1	promise-01	0	0.0	
# ::edge	contrast-01	ARG2	fail-01	0	0.1	
# ::edge	date-entity	day	63	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	date-entity	month	26	0.0.0.0.1	0.0.0.0.1.1	
# ::edge	date-entity	quant	64	0.0.0.0.1	0.0.0.0.1.2	
# ::edge	date-entity	year	76	0.0.0.0.1	0.0.0.0.1.3	
# ::edge	deliver-01	ARG1	another	0.1.1	0.1.1.0	
# ::edge	down	op1	26	0.1.0.0	0.1.0	
# ::edge	fail-01	ARG1	26	0.1	0.1.0	
# ::edge	fail-01	ARG2	deliver-01	0.1	0.1.1	
# ::edge	fail-01	time	eventual	0.1	0.1.3	
# ::edge	promise-01	ARG0	grass-roots	0.0	0.0.0	
# ::edge	promise-01	ARG1	much	0.0	0.0.1	
# ::edge	see-01	ARG0	many	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	see-01	ARG1	succeed-01	0.0.0.0.0	0.0.0.0	
# ::edge	succeed-01	ARG1	grass-roots	0.0.0.0	0.0.0	
# ::edge	succeed-01	time	date-entity	0.0.0.0	0.0.0.0.1	
(c / contrast-01 
      :ARG1 (p / promise-01 
            :ARG0 (g / grass-roots 
                  :ARG1-of (s / succeed-01 
                        :ARG1-of (s2 / see-01 
                              :ARG0 (m2 / many)) 
                        :time (d / date-entity 
                              :day 63 
                              :month 26 
                              :quant 64 
                              :year 76))) 
            :ARG1 (m / much)) 
      :ARG2 (f / fail-01 
            :ARG1 (22 / 26 
                  :op-of (d2 / down)) 
            :ARG2 (d3 / deliver-01 
                  :ARG1 (a2 / another)) 
            :op-of (a / and) 
            :time (e / eventual)))

# ::snt   he appeared to be reassuring secular muslims and the christian minority when he promised that the rights of all jordanians are sacred and they are rights that will not be affected
# ::tok he appeared to be reassuring secular muslims and the christian minority when he promised that the rights of all jordanians are sacred and they are rights that will not be affected
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:22.039
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt   new head of bbc documentary features colin cameron is promising more programmes making use of historical archive film but in a fresh way to explain how past events shape modern life
# ::tok new head of bbc documentary features colin cameron is promising more programmes making use of historical archive film but in a fresh way to explain how past events shape modern life
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:22.041
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt but even if nestle had been spared to offer the exhaustive treatment of the subject that he promised the severe limitations of our knowledge of aeschylus would hardly have allowed him to put the case for a late date beyond reasonable doubt
# ::tok but even if nestle had been spared to offer the exhaustive treatment of the subject that he promised the severe limitations of our knowledge of aeschylus would hardly have allowed him to put the case for a late date beyond reasonable doubt
# ::alignments 41-42|0.0.1.0.1.1.2 40-41|0.0.1.0.1.1.2.0 39-40|0.0.1.0.1.1.2.1 38-39|0.0.1.0.1.1.2.1.0 37-38|0.0.1.0.1.1.2.1.0.0 34-35|0.0.1.0.1.1.0.0 29-30|0.0.1.0.1.1.0 27-28|0.0.0 23-24|0.0.1.0.1.1.1 20-21|0.0.1.0.1.1 19-20|0.0.1.0.1.1.3 17-18|0.0.1.0.1 16-17|0.0.1.0.1.0 14-15|0.0.1.0.0 11-12|0.0.1.0 10-11|0.0.1.0.2 8-9|0.0.1 6-7|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:22.899
# ::node	0	contrast-01	0-1
# ::node	0.0	spare-01	6-7
# ::node	0.0.0	hardly	27-28
# ::node	0.0.1	offer-01	8-9
# ::node	0.0.1.0	treat-03	11-12
# ::node	0.0.1.0.0	subject	14-15
# ::node	0.0.1.0.1	promise-01	17-18
# ::node	0.0.1.0.1.0	he	16-17
# ::node	0.0.1.0.1.1	limit-01	20-21
# ::node	0.0.1.0.1.1.0	allow-01	29-30
# ::node	0.0.1.0.1.1.0.0	case	34-35
# ::node	0.0.1.0.1.1.1	knowledge	23-24
# ::node	0.0.1.0.1.1.2	doubt-01	41-42
# ::node	0.0.1.0.1.1.2.0	reasonable	40-41
# ::node	0.0.1.0.1.1.2.1	beyond	39-40
# ::node	0.0.1.0.1.1.2.1.0	date	38-39
# ::node	0.0.1.0.1.1.2.1.0.0	late	37-38
# ::node	0.0.1.0.1.1.3	severe	19-20
# ::node	0.0.1.0.2	exhaustive	10-11
# ::root	0	contrast-01
# ::edge	allow-01	ARG0	limit-01	0.0.1.0.1.1.0	0.0.1.0.1.1	
# ::edge	allow-01	ARG1	case	0.0.1.0.1.1.0	0.0.1.0.1.1.0.0	
# ::edge	beyond	op1	doubt-01	0.0.1.0.1.1.2.1	0.0.1.0.1.1.2	
# ::edge	contrast-01	ARG1	spare-01	0	0.0	
# ::edge	date	location	beyond	0.0.1.0.1.1.2.1.0	0.0.1.0.1.1.2.1	
# ::edge	date	mod	late	0.0.1.0.1.1.2.1.0	0.0.1.0.1.1.2.1.0.0	
# ::edge	doubt-01	ARG1	limit-01	0.0.1.0.1.1.2	0.0.1.0.1.1	
# ::edge	doubt-01	mod	reasonable	0.0.1.0.1.1.2	0.0.1.0.1.1.2.0	
# ::edge	limit-01	ARG1	knowledge	0.0.1.0.1.1	0.0.1.0.1.1.1	
# ::edge	limit-01	mod	severe	0.0.1.0.1.1	0.0.1.0.1.1.3	
# ::edge	offer-01	ARG1	treat-03	0.0.1	0.0.1.0	
# ::edge	promise-01	ARG0	he	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	promise-01	ARG1	limit-01	0.0.1.0.1	0.0.1.0.1.1	
# ::edge	spare-01	ARG0	hardly	0.0	0.0.0	
# ::edge	spare-01	ARG1	offer-01	0.0	0.0.1	
# ::edge	treat-03	ARG1	subject	0.0.1.0	0.0.1.0.0	
# ::edge	treat-03	ARG2	promise-01	0.0.1.0	0.0.1.0.1	
# ::edge	treat-03	mod	exhaustive	0.0.1.0	0.0.1.0.2	
(c2 / contrast-01 
      :ARG1 (s3 / spare-01 
            :ARG0 (h / hardly) 
            :ARG1 (o / offer-01 
                  :ARG1 (t / treat-03 
                        :ARG1 (s2 / subject) 
                        :ARG2 (p / promise-01 
                              :ARG0 (h2 / he) 
                              :ARG1 (l2 / limit-01 
                                    :ARG0-of (a / allow-01 
                                          :ARG1 (c / case)) 
                                    :ARG1 (k / knowledge) 
                                    :ARG1-of (d / doubt-01 
                                          :mod (r / reasonable) 
                                          :op-of (b / beyond 
                                                :location-of (d2 / date 
                                                      :mod (l / late)))) 
                                    :mod (s / severe))) 
                        :mod (e / exhaustive)))))

# ::snt you had no right to promise yves anything he said bluntly going into the shower
# ::tok you had no right to promise yves anything he said bluntly going into the shower
# ::alignments 14-15|0.0.0 10-11|0.2 9-10|0 8-9|0.0 7-8|0.1 5-6|0.1.0.0 2-3|0.1.0.0.0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:23.062
# ::node	0	say-01	9-10
# ::node	0.0	he	8-9
# ::node	0.0.0	shower-01	14-15
# ::node	0.1	anything	7-8
# ::node	0.1.0	you	0-1
# ::node	0.1.0.0	promise-01	5-6
# ::node	0.1.0.0.0	-	2-3
# ::node	0.2	blunt	10-11
# ::root	0	say-01
# ::edge	anything	poss	you	0.1	0.1.0	
# ::edge	promise-01	ARG0	you	0.1.0.0	0.1.0	
# ::edge	promise-01	ARG1	-	0.1.0.0	0.1.0.0.0	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	anything	0	0.1	
# ::edge	say-01	ARG3	blunt	0	0.2	
# ::edge	shower-01	ARG1	he	0.0.0	0.0	
(s2 / say-01 
      :ARG0 (h / he 
            :ARG1-of (s / shower-01)) 
      :ARG1 (a / anything 
            :poss (y / you 
                  :ARG0-of (p / promise-01 
                        :ARG1 (- / -)))) 
      :ARG3 (b / blunt))

# ::snt again selfreference albeit of a slightly different character is essential to the analyses of valid consent and of promising which are acts changing the normative situation because they are undertaken in the belief that they so change the normative situation
# ::tok again selfreference albeit of a slightly different character is essential to the analyses of valid consent and of promising which are acts changing the normative situation because they are undertaken in the belief that they so change the normative situation
# ::alignments 39-40|0.0.0.0.0.0.0 36-37|0.0.0.0.0.0 35-36|0.0.0.0.0.0.1 34-35|0.0.0.0.0 32-33|0.0.0.0 29-30|0.0 27-28|0.0.0 26-27|0 25-26|0.1.0 22-23|0.1 18-19|0.0.0.0.0.0.2.1 16-17|0.0.0.0.0.0.2 15-16|0.0.0.0.0.0.2.0 14-15|0.0.0.0.0.0.2.0.1 12-13|0.0.0.0.0.0.2.0.0 9-10|0.0.0.0.0.0.2.1.0.1 7-8|0.0.0.0.0.0.2.1.0 6-7|0.0.0.0.0.0.2.1.0.0 5-6|0.0.0.0.0.0.2.1.0.0.0 0-1|0.0.0.0.0.0.2.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:23.930
# ::node	0	cause-01	26-27
# ::node	0.0	undertake-01	29-30
# ::node	0.0.0	they	27-28
# ::node	0.0.0.0	believe-01	32-33
# ::node	0.0.0.0.0	they	34-35
# ::node	0.0.0.0.0.0	change-01	36-37
# ::node	0.0.0.0.0.0.0	situation	39-40
# ::node	0.0.0.0.0.0.1	so	35-36
# ::node	0.0.0.0.0.0.2	and	16-17
# ::node	0.0.0.0.0.0.2.0	consent-01	15-16
# ::node	0.0.0.0.0.0.2.0.0	analysis	12-13
# ::node	0.0.0.0.0.0.2.0.1	valid-41	14-15
# ::node	0.0.0.0.0.0.2.1	promise-01	18-19
# ::node	0.0.0.0.0.0.2.1.0	character	7-8
# ::node	0.0.0.0.0.0.2.1.0.0	differ-02	6-7
# ::node	0.0.0.0.0.0.2.1.0.0.0	slight	5-6
# ::node	0.0.0.0.0.0.2.1.0.1	essential	9-10
# ::node	0.0.0.0.0.0.2.2	again	0-1
# ::node	0.1	change-01	22-23
# ::node	0.1.0	situation	25-26
# ::root	0	cause-01
# ::edge	and	op1	consent-01	0.0.0.0.0.0.2	0.0.0.0.0.0.2.0	
# ::edge	and	op2	promise-01	0.0.0.0.0.0.2	0.0.0.0.0.0.2.1	
# ::edge	and	op3	change-01	0.0.0.0.0.0.2	0.0.0.0.0.0	
# ::edge	and	time	again	0.0.0.0.0.0.2	0.0.0.0.0.0.2.2	
# ::edge	believe-01	ARG0	they	0.0.0.0	0.0.0	
# ::edge	believe-01	ARG1	they	0.0.0.0	0.0.0.0.0	
# ::edge	cause-01	ARG0	undertake-01	0	0.0	
# ::edge	cause-01	ARG1	change-01	0	0.1	
# ::edge	change-01	ARG0	they	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	change-01	ARG1	situation	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	change-01	ARG1	situation	0.1	0.1.0	
# ::edge	change-01	mod	so	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	consent-01	ARG1	analysis	0.0.0.0.0.0.2.0	0.0.0.0.0.0.2.0.0	
# ::edge	differ-02	ARG1	character	0.0.0.0.0.0.2.1.0.0	0.0.0.0.0.0.2.1.0	
# ::edge	differ-02	degree	slight	0.0.0.0.0.0.2.1.0.0	0.0.0.0.0.0.2.1.0.0.0	
# ::edge	essential	domain	character	0.0.0.0.0.0.2.1.0.1	0.0.0.0.0.0.2.1.0	
# ::edge	promise-01	ARG0	character	0.0.0.0.0.0.2.1	0.0.0.0.0.0.2.1.0	
# ::edge	undertake-01	ARG1	they	0.0	0.0.0	
# ::edge	valid-41	ARG1	consent-01	0.0.0.0.0.0.2.0.1	0.0.0.0.0.0.2.0	
(c2 / cause-01 
      :ARG0 (u / undertake-01 
            :ARG1 (t2 / they 
                  :ARG0-of (b / believe-01 
                        :ARG1 (t / they 
                              :ARG0-of (c / change-01 
                                    :ARG1 (s / situation) 
                                    :mod (s2 / so) 
                                    :op-of (a / and 
                                          :op1 (c4 / consent-01 
                                                :ARG1 (a2 / analysis) 
                                                :ARG1-of (v / valid-41)) 
                                          :op2 (p / promise-01 
                                                :ARG0 (c5 / character 
                                                      :ARG1-of (d / differ-02 
                                                            :degree (s4 / slight)) 
                                                      :domain-of (e / essential))) 
                                          :time (a3 / again))))))) 
      :ARG1 (c3 / change-01 
            :ARG1 (s3 / situation)))

# ::snt   a big northwest company had already promised 2
# ::tok a big northwest company had already promised 2
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:23.931
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt well aware how sensitive such a move is bound to prove britain is seeking to make repatriation more palatable by promising that physical force will not be used to put vietnamese on planes bound for hanoi and that each person will have the right to refuse
# ::tok well aware how sensitive such a move is bound to prove britain is seeking to make repatriation more palatable by promising that physical force will not be used to put vietnamese on planes bound for hanoi and that each person will have the right to refuse
# ::alignments 45-46|0.1.1.0.0.0.0.0.0 39-40|0.1.1.0.0.0.0.0 38-39|0.1.1.0.1.0 36-37|0.1.1.0.0.0 32-33|0.1.0 27-28|0.1.1.0.0.0.0 23-24|0.1.1.0.0.0.0.1 22-23|0.1.1.0.0.0.0.1.0 20-21|0.1.1.0.0 18-19|0.1.1.0.0.1 16-17|0.1.1.0.1 13-14|0.1.1 11-12|0.1.1.0.2.0+0.1.1.0.2+0.1.1.0 10-11|0.1 4-5|0.0 3-4|0 0-1|0.1.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:24.201
# ::node	0	sensitive-41	3-4
# ::node	0.0	such	4-5
# ::node	0.1	prove-01	10-11
# ::node	0.1.0	plane	32-33
# ::node	0.1.1	seek-01	13-14
# ::node	0.1.1.0	country	11-12
# ::node	0.1.1.0.0	promise-01	20-21
# ::node	0.1.1.0.0.0	and	36-37
# ::node	0.1.1.0.0.0.0	use-01	27-28
# ::node	0.1.1.0.0.0.0.0	person	39-40
# ::node	0.1.1.0.0.0.0.0.0	refuse-01	45-46
# ::node	0.1.1.0.0.0.0.1	force	23-24
# ::node	0.1.1.0.0.0.0.1.0	physical	22-23
# ::node	0.1.1.0.0.1	palatable	18-19
# ::node	0.1.1.0.1	repatriate-01	16-17
# ::node	0.1.1.0.1.0	each	38-39
# ::node	0.1.1.0.2	name	11-12
# ::node	0.1.1.0.2.0	"Britain"	11-12
# ::node	0.1.1.1	well	0-1
# ::root	0	sensitive-41
# ::edge	and	op1	use-01	0.1.1.0.0.0	0.1.1.0.0.0.0	
# ::edge	country	name	name	0.1.1.0	0.1.1.0.2	
# ::edge	force	mod	physical	0.1.1.0.0.0.0.1	0.1.1.0.0.0.0.1.0	
# ::edge	name	op1	"Britain"	0.1.1.0.2	0.1.1.0.2.0	
# ::edge	palatable	concession	promise-01	0.1.1.0.0.1	0.1.1.0.0	
# ::edge	promise-01	ARG0	country	0.1.1.0.0	0.1.1.0	
# ::edge	promise-01	ARG1	and	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	prove-01	ARG0	plane	0.1	0.1.0	
# ::edge	prove-01	ARG1	seek-01	0.1	0.1.1	
# ::edge	prove-01	manner	sensitive-41	0.1	0	
# ::edge	refuse-01	ARG0	person	0.1.1.0.0.0.0.0.0	0.1.1.0.0.0.0.0	
# ::edge	repatriate-01	ARG0	each	0.1.1.0.1	0.1.1.0.1.0	
# ::edge	repatriate-01	ARG1	country	0.1.1.0.1	0.1.1.0	
# ::edge	seek-01	ARG0	country	0.1.1	0.1.1.0	
# ::edge	seek-01	ARG1	well	0.1.1	0.1.1.1	
# ::edge	sensitive-41	ARG1	such	0	0.0	
# ::edge	use-01	ARG0	person	0.1.1.0.0.0.0	0.1.1.0.0.0.0.0	
# ::edge	use-01	ARG1	force	0.1.1.0.0.0.0	0.1.1.0.0.0.0.1	
(s3 / sensitive-41 
      :ARG1 (s2 / such) 
      :manner-of (p6 / prove-01 
            :ARG0 (p2 / plane) 
            :ARG1 (s / seek-01 
                  :ARG0 (c / country 
                        :ARG0-of (p4 / promise-01 
                              :ARG1 (a / and 
                                    :op1 (u / use-01 
                                          :ARG0 (p / person 
                                                :ARG0-of (r / refuse-01)) 
                                          :ARG1 (f / force 
                                                :mod (p3 / physical)))) 
                              :concession-of (p5 / palatable)) 
                        :ARG1-of (r2 / repatriate-01 
                              :ARG0 (e / each)) 
                        :name (n / name 
                              :op1 "Britain")) 
                  :ARG1 (w / well))))

# ::snt he said the workers who had demanded more local control and a reduced role for the communist party had voted to go back to work after mining officials promised to meet demands on living conditions and increased holidays
# ::tok he said the workers who had demanded more local control and a reduced role for the communist party had voted to go back to work after mining officials promised to meet demands on living conditions and increased holidays
# ::alignments 37-38|0.1.0.1.1.0.0.1.0 36-37|0.1.0.1.1.0.0.1 35-36|0.1.0.1.1.0.0 34-35|0.1.0.1.1.0 33-34|0.1.0.1.1 31-32|0.1.0.1.1.0.0.0 28-29|0.1.0.1.1.0.0.0.0 27-28|0.1.0.1.2+0.1.0.1 26-27|0.1.0.1.0 25-26|0.1.0.1.1.0.0.0.0.0 22-23|0.1.1.0.0.0 19-20|0.1 16-18|0.1.1.0.1.0.0+0.1.1.0.1.0.1+0.1.1.0.1.0+0.1.1.0.1 13-14|0.1.1.0 12-13|0.1.1.0.0 10-11|0.1.1 9-10|0.1.0.0.0 8-9|0.1.0.0.0.0 6-7|0.1.0.0 3-4|0.1.0.2+0.1.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:26.827
# ::node	0	say-01	1-2
# ::node	0.0	he	0-1
# ::node	0.1	vote-01	19-20
# ::node	0.1.0	person	3-4
# ::node	0.1.0.0	demand-01	6-7
# ::node	0.1.0.0.0	control-01	9-10
# ::node	0.1.0.0.0.0	local	8-9
# ::node	0.1.0.1	have-org-role-91	27-28
# ::node	0.1.0.1.0	mine-01	26-27
# ::node	0.1.0.1.1	live-01	33-34
# ::node	0.1.0.1.1.0	condition	34-35
# ::node	0.1.0.1.1.0.0	and	35-36
# ::node	0.1.0.1.1.0.0.0	demand-01	31-32
# ::node	0.1.0.1.1.0.0.0.0	promise-01	28-29
# ::node	0.1.0.1.1.0.0.0.0.0	after	25-26
# ::node	0.1.0.1.1.0.0.1	increase-01	36-37
# ::node	0.1.0.1.1.0.0.1.0	holiday	37-38
# ::node	0.1.0.1.2	official	27-28
# ::node	0.1.0.2	work-01	3-4
# ::node	0.1.1	and	10-11
# ::node	0.1.1.0	role	13-14
# ::node	0.1.1.0.0	reduce-01	12-13
# ::node	0.1.1.0.0.0	back	22-23
# ::node	0.1.1.0.1	political-party	16-18
# ::node	0.1.1.0.1.0	name	16-18
# ::node	0.1.1.0.1.0.0	"Communist"	16-18
# ::node	0.1.1.0.1.0.1	"Party"	16-18
# ::root	0	say-01
# ::edge	after	op1	promise-01	0.1.0.1.1.0.0.0.0.0	0.1.0.1.1.0.0.0.0	
# ::edge	and	op1	condition	0.1.0.1.1.0.0	0.1.0.1.1.0	
# ::edge	and	op1	role	0.1.1	0.1.1.0	
# ::edge	and	op2	increase-01	0.1.0.1.1.0.0	0.1.0.1.1.0.0.1	
# ::edge	condition	mod	live-01	0.1.0.1.1.0	0.1.0.1.1	
# ::edge	control-01	ARG1	local	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	demand-01	ARG0	person	0.1.0.0	0.1.0	
# ::edge	demand-01	ARG1	and	0.1.0.1.1.0.0.0	0.1.0.1.1.0.0	
# ::edge	demand-01	ARG1	control-01	0.1.0.0	0.1.0.0.0	
# ::edge	have-org-role-91	ARG0	person	0.1.0.1	0.1.0	
# ::edge	have-org-role-91	ARG1	mine-01	0.1.0.1	0.1.0.1.0	
# ::edge	have-org-role-91	ARG2	official	0.1.0.1	0.1.0.1.2	
# ::edge	increase-01	ARG1	holiday	0.1.0.1.1.0.0.1	0.1.0.1.1.0.0.1.0	
# ::edge	live-01	ARG1	have-org-role-91	0.1.0.1.1	0.1.0.1	
# ::edge	name	op1	"Communist"	0.1.1.0.1.0	0.1.1.0.1.0.0	
# ::edge	name	op2	"Party"	0.1.1.0.1.0	0.1.1.0.1.0.1	
# ::edge	political-party	name	name	0.1.1.0.1	0.1.1.0.1.0	
# ::edge	promise-01	ARG1	demand-01	0.1.0.1.1.0.0.0.0	0.1.0.1.1.0.0.0	
# ::edge	reduce-01	ARG0	role	0.1.1.0.0	0.1.1.0	
# ::edge	reduce-01	ARG1	back	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	role	poss	political-party	0.1.1.0	0.1.1.0.1	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	vote-01	0	0.1	
# ::edge	vote-01	ARG0	person	0.1	0.1.0	
# ::edge	vote-01	ARG1	and	0.1	0.1.1	
# ::edge	work-01	ARG0	person	0.1.0.2	0.1.0	
(s / say-01 
      :ARG0 (h3 / he) 
      :ARG1 (v / vote-01 
            :ARG0 (p3 / person 
                  :ARG0-of (d2 / demand-01 
                        :ARG1 (c2 / control-01 
                              :ARG1 (l2 / local))) 
                  :ARG0-of (h2 / have-org-role-91 
                        :ARG1 (m / mine-01) 
                        :ARG1-of (l / live-01 
                              :mod-of (c / condition 
                                    :op-of (a / and 
                                          :ARG1-of (d / demand-01 
                                                :ARG1-of (p / promise-01 
                                                      :op-of (a2 / after))) 
                                          :op1 (i / increase-01 
                                                :ARG1 (h / holiday))))) 
                        :ARG2 (o / official)) 
                  :ARG0-of (w / work-01)) 
            :ARG1 (a3 / and 
                  :op1 (r / role 
                        :ARG0-of (r2 / reduce-01 
                              :ARG1 (b / back)) 
                        :poss (p2 / political-party 
                              :name (n / name 
                                    :op1 "Communist" 
                                    :op2 "Party"))))))

# ::snt consenting is very similar to promising
# ::tok consenting is very similar to promising
# ::alignments 5-6|0 2-3|0.0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:26.840
# ::node	0	promise-01	5-6
# ::node	0.0	very	2-3
# ::node	0.1	consent-01	0-1
# ::root	0	promise-01
# ::edge	consent-01	ARG1	promise-01	0.1	0	
# ::edge	promise-01	ARG1	very	0	0.0	
(p / promise-01 
      :ARG1 (v / very) 
      :ARG1-of (c / consent-01))

# ::snt we were promised a dinnerdance
# ::tok we were promised a dinnerdance
# ::alignments 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:26.845
# ::node	0	promise-01	2-3
# ::node	0.0	we	0-1
# ::root	0	promise-01
# ::edge	promise-01	ARG1	we	0	0.0	
(p / promise-01 
      :ARG1 (w / we))

# ::snt at the end of 1988 the home secretary promised an additional 1230 officers for 198990
# ::tok at the end of 1988 the home secretary promised an additional 1230 officers for 198990
# ::alignments 14-15|0.3.3+0.3.1+0.3.0+0.3 12-13|0.3.2.1+0.3.2 11-12|0.1.0+0.1 10-11|0.3.2.0 8-9|0 7-8|0.0 6-7|0.0.0 4-5|0.2.0+0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:27.030
# ::node	0	promise-01	8-9
# ::node	0.0	secretary	7-8
# ::node	0.0.0	home	6-7
# ::node	0.1	date-entity	11-12
# ::node	0.1.0	1230	11-12
# ::node	0.2	date-entity	4-5
# ::node	0.2.0	1988	4-5
# ::node	0.3	date-entity	14-15
# ::node	0.3.0	90	14-15
# ::node	0.3.1	89	14-15
# ::node	0.3.2	have-org-role-91	12-13
# ::node	0.3.2.0	additional	10-11
# ::node	0.3.2.1	officer	12-13
# ::node	0.3.3	19	14-15
# ::root	0	promise-01
# ::edge	date-entity	day	90	0.3	0.3.0	
# ::edge	date-entity	month	89	0.3	0.3.1	
# ::edge	date-entity	year	1230	0.1	0.1.0	
# ::edge	date-entity	year	19	0.3	0.3.3	
# ::edge	date-entity	year	1988	0.2	0.2.0	
# ::edge	have-org-role-91	ARG1	additional	0.3.2	0.3.2.0	
# ::edge	have-org-role-91	ARG2	officer	0.3.2	0.3.2.1	
# ::edge	have-org-role-91	time	date-entity	0.3.2	0.3	
# ::edge	promise-01	ARG0	secretary	0	0.0	
# ::edge	promise-01	ARG1	date-entity	0	0.1	
# ::edge	promise-01	time	date-entity	0	0.2	
# ::edge	promise-01	time	date-entity	0	0.3	
# ::edge	secretary	mod	home	0.0	0.0.0	
(p / promise-01 
      :ARG0 (s / secretary 
            :mod (h2 / home)) 
      :ARG1 (d2 / date-entity 
            :year 1230) 
      :time (d3 / date-entity 
            :year 1988) 
      :time (d / date-entity 
            :day 90 
            :month 89 
            :time-of (h / have-org-role-91 
                  :ARG1 (a / additional) 
                  :ARG2 (o / officer)) 
            :year 19))

# ::snt in promising to crack down on unofficial strikes mr norman fowler the employment secretary has reopened the complex issue of unions liability for the action of their members dash
# ::tok in promising to crack down on unofficial strikes mr norman fowler the employment secretary has reopened the complex issue of unions liability for the action of their members dash
# ::alignments 27-28|0.1.1.0.1+0.1.1.0 24-25|0.1.0 21-22|0.1.1 20-21|0.1.1.1 18-19|0.1 17-18|0.1.2 15-16|0 13-14|0.0 12-13|0.0.0 7-8|0.1.1.0.0.0 4-5|0.1.1.0.0.2 3-4|0.1.1.0.0 1-2|0.1.1.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:27.466
# ::node	0	reopen-01	15-16
# ::node	0.0	secretary	13-14
# ::node	0.0.0	employment	12-13
# ::node	0.1	issue	18-19
# ::node	0.1.0	action	24-25
# ::node	0.1.1	liability	21-22
# ::node	0.1.1.0	have-org-role-91	27-28
# ::node	0.1.1.0.0	crack-02	3-4
# ::node	0.1.1.0.0.0	strike-01	7-8
# ::node	0.1.1.0.0.1	promise-01	1-2
# ::node	0.1.1.0.0.2	down	4-5
# ::node	0.1.1.0.1	member	27-28
# ::node	0.1.1.1	union	20-21
# ::node	0.1.2	complex	17-18
# ::root	0	reopen-01
# ::edge	crack-02	ARG1	strike-01	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	crack-02	direction	down	0.1.1.0.0	0.1.1.0.0.2	
# ::edge	have-org-role-91	ARG0	liability	0.1.1.0	0.1.1	
# ::edge	have-org-role-91	ARG1	crack-02	0.1.1.0	0.1.1.0.0	
# ::edge	have-org-role-91	ARG2	member	0.1.1.0	0.1.1.0.1	
# ::edge	issue	location	action	0.1	0.1.0	
# ::edge	issue	location	liability	0.1	0.1.1	
# ::edge	issue	mod	complex	0.1	0.1.2	
# ::edge	liability	mod	union	0.1.1	0.1.1.1	
# ::edge	promise-01	ARG1	crack-02	0.1.1.0.0.1	0.1.1.0.0	
# ::edge	reopen-01	ARG0	secretary	0	0.0	
# ::edge	reopen-01	ARG1	issue	0	0.1	
# ::edge	secretary	mod	employment	0.0	0.0.0	
(r / reopen-01 
      :ARG0 (s / secretary 
            :mod (e / employment)) 
      :ARG1 (i / issue 
            :location (a / action) 
            :location (l / liability 
                  :ARG0-of (h / have-org-role-91 
                        :ARG1 (c2 / crack-02 
                              :ARG1 (s2 / strike-01) 
                              :ARG1-of (p / promise-01) 
                              :direction (d / down)) 
                        :ARG2 (m / member)) 
                  :mod (u / union)) 
            :mod (c / complex)))

# ::snt it will be sorted out within a couple of hours i promise you
# ::tok it will be sorted out within a couple of hours i promise you
# ::alignments 12-13|0.1 11-12|0 10-11|0.0 9-10|0.2.1.0.0.0+0.2.1.0.0 7-8|0.2.1.0 5-6|0.2.1 3-4|0.2 0-1|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:27.597
# ::node	0	promise-01	11-12
# ::node	0.0	i	10-11
# ::node	0.1	you	12-13
# ::node	0.2	sort-02	3-4
# ::node	0.2.0	it	0-1
# ::node	0.2.1	within	5-6
# ::node	0.2.1.0	couple	7-8
# ::node	0.2.1.0.0	temporal-quantity	9-10
# ::node	0.2.1.0.0.0	hour	9-10
# ::root	0	promise-01
# ::edge	couple	op1	temporal-quantity	0.2.1.0	0.2.1.0.0	
# ::edge	promise-01	ARG0	i	0	0.0	
# ::edge	promise-01	ARG1	you	0	0.1	
# ::edge	promise-01	purpose	sort-02	0	0.2	
# ::edge	sort-02	ARG1	it	0.2	0.2.0	
# ::edge	sort-02	location	within	0.2	0.2.1	
# ::edge	temporal-quantity	unit	hour	0.2.1.0.0	0.2.1.0.0.0	
# ::edge	within	op1	couple	0.2.1	0.2.1.0	
(p / promise-01 
      :ARG0 (i / i) 
      :ARG1 (y / you) 
      :purpose (s / sort-02 
            :ARG1 (i2 / it) 
            :location (w / within 
                  :op1 (c / couple 
                        :op1 (t / temporal-quantity 
                              :unit (h / hour))))))

# ::snt  ill get some of the boys to check it over the officer promised
# ::tok ill get some of the boys to check it over the officer promised
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:27.598
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt in which he more or less accidentally dispatches his wife but cant bring himself to take the plunge and throw himself into the river as promised
# ::tok in which he more or less accidentally dispatches his wife but cant bring himself to take the plunge and throw himself into the river as promised
# ::alignments 25-26|0.0.1.1.1 23-24|0.0.1.1.0 19-20|0.0.1.1 18-19|0.0.1 17-18|0.0.1.0 12-13|0.0 10-11|0 9-10|0.0.0.0.0+0.0.0.0 6-7|0.0.2 5-6|0.0.3.0 4-5|0.0.3 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:27.844
# ::node	0	contrast-01	10-11
# ::node	0.0	bring-01	12-13
# ::node	0.0.0	he	2-3
# ::node	0.0.0.0	have-rel-role-91	9-10
# ::node	0.0.0.0.0	wife	9-10
# ::node	0.0.1	and	18-19
# ::node	0.0.1.0	plunge-01	17-18
# ::node	0.0.1.1	throw-01	19-20
# ::node	0.0.1.1.0	river	23-24
# ::node	0.0.1.1.1	promise-01	25-26
# ::node	0.0.2	accidental	6-7
# ::node	0.0.3	or	4-5
# ::node	0.0.3.0	less	5-6
# ::root	0	contrast-01
# ::edge	and	op1	plunge-01	0.0.1	0.0.1.0	
# ::edge	and	op2	throw-01	0.0.1	0.0.1.1	
# ::edge	bring-01	ARG0	he	0.0	0.0.0	
# ::edge	bring-01	ARG1	and	0.0	0.0.1	
# ::edge	bring-01	manner	accidental	0.0	0.0.2	
# ::edge	contrast-01	ARG2	bring-01	0	0.0	
# ::edge	have-rel-role-91	ARG1	he	0.0.0.0	0.0.0	
# ::edge	have-rel-role-91	ARG2	wife	0.0.0.0	0.0.0.0.0	
# ::edge	or	op1	less	0.0.3	0.0.3.0	
# ::edge	or	op2	bring-01	0.0.3	0.0	
# ::edge	throw-01	ARG2	river	0.0.1.1	0.0.1.1.0	
# ::edge	throw-01	time	promise-01	0.0.1.1	0.0.1.1.1	
(c / contrast-01 
      :ARG2 (b / bring-01 
            :ARG0 (h2 / he 
                  :ARG1-of (h / have-rel-role-91 
                        :ARG2 (w / wife))) 
            :ARG1 (a / and 
                  :op1 (p2 / plunge-01) 
                  :op2 (t / throw-01 
                        :ARG2 (r / river) 
                        :time (p / promise-01))) 
            :manner (a2 / accidental) 
            :op-of (o / or 
                  :op1 (l / less))))

# ::snt it would however defuse what promises otherwise to be an explosive confrontation with brussels
# ::tok it would however defuse what promises otherwise to be an explosive confrontation with brussels
# ::alignments 11-12|0.1.0 10-11|0.1.0.0 6-7|0.1.1 5-6|0.1 3-4|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:27.874
# ::node	0	defuse-01	3-4
# ::node	0.0	it	0-1
# ::node	0.1	promise-01	5-6
# ::node	0.1.0	confront-01	11-12
# ::node	0.1.0.0	explode-01	10-11
# ::node	0.1.1	otherwise	6-7
# ::root	0	defuse-01
# ::edge	defuse-01	ARG0	it	0	0.0	
# ::edge	defuse-01	ARG1	promise-01	0	0.1	
# ::edge	explode-01	ARG1	confront-01	0.1.0.0	0.1.0	
# ::edge	promise-01	ARG1	confront-01	0.1	0.1.0	
# ::edge	promise-01	mod	otherwise	0.1	0.1.1	
(d / defuse-01 
      :ARG0 (i / it) 
      :ARG1 (p / promise-01 
            :ARG1 (c / confront-01 
                  :ARG1-of (e / explode-01)) 
            :mod (o / otherwise)))

# ::snt but he promised further talks with mps after the publication of the report into the piper alpha disaster
# ::tok but he promised further talks with mps after the publication of the report into the piper alpha disaster
# ::alignments 17-18|0.1.1.0 15-16|0.1.1.0.0 12-13|0.0 9-10|0.1.2.0 7-8|0.1.2 4-5|0.1.1 3-4|0.1.1.1 2-3|0.1 1-2|0.1.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:27.933
# ::node	0	contrast-01	0-1
# ::node	0.0	report	12-13
# ::node	0.1	promise-01	2-3
# ::node	0.1.0	he	1-2
# ::node	0.1.1	talk-01	4-5
# ::node	0.1.1.0	disaster	17-18
# ::node	0.1.1.0.0	piper	15-16
# ::node	0.1.1.1	further	3-4
# ::node	0.1.2	after	7-8
# ::node	0.1.2.0	publication	9-10
# ::root	0	contrast-01
# ::edge	after	op1	publication	0.1.2	0.1.2.0	
# ::edge	contrast-01	ARG0	report	0	0.0	
# ::edge	contrast-01	ARG2	promise-01	0	0.1	
# ::edge	disaster	mod	piper	0.1.1.0	0.1.1.0.0	
# ::edge	promise-01	ARG0	he	0.1	0.1.0	
# ::edge	promise-01	ARG1	talk-01	0.1	0.1.1	
# ::edge	promise-01	time	after	0.1	0.1.2	
# ::edge	talk-01	ARG1	disaster	0.1.1	0.1.1.0	
# ::edge	talk-01	degree	further	0.1.1	0.1.1.1	
(c / contrast-01 
      :ARG0 (r / report) 
      :ARG2 (p3 / promise-01 
            :ARG0 (h / he) 
            :ARG1 (t / talk-01 
                  :ARG1 (d / disaster 
                        :mod (p / piper)) 
                  :degree (f / further)) 
            :time (a / after 
                  :op1 (p2 / publication))))

# ::snt englands win was well merited although there were times in an evenly balanced absorbing match when belgiums greater awareness near goal promised to take les diables rouges through
# ::tok englands win was well merited although there were times in an evenly balanced absorbing match when belgiums greater awareness near goal promised to take les diables rouges through
# ::alignments 21-22|0 20-21|0.0 19-20|0.0.0 18-19|0.0.0.0 17-18|0.0.0.0.1 14-15|0.0.0.0.0.0.0 13-14|0.0.0.0.0.0.0.1 12-13|0.0.0.0.0.0.0.2 11-12|0.0.0.0.0.0 3-4|0.0.0.0.0.0.0.0 1-2|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:28.123
# ::node	0	promise-01	21-22
# ::node	0.0	goal	20-21
# ::node	0.0.0	near	19-20
# ::node	0.0.0.0	awareness	18-19
# ::node	0.0.0.0.0	win-01	1-2
# ::node	0.0.0.0.0.0	even-01	11-12
# ::node	0.0.0.0.0.0.0	match-01	14-15
# ::node	0.0.0.0.0.0.0.0	well	3-4
# ::node	0.0.0.0.0.0.0.1	absorb-01	13-14
# ::node	0.0.0.0.0.0.0.2	balance-01	12-13
# ::node	0.0.0.0.1	great	17-18
# ::root	0	promise-01
# ::edge	awareness	location	near	0.0.0.0	0.0.0	
# ::edge	awareness	mod	great	0.0.0.0	0.0.0.0.1	
# ::edge	balance-01	ARG1	match-01	0.0.0.0.0.0.0.2	0.0.0.0.0.0.0	
# ::edge	even-01	ARG1	match-01	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	match-01	ARG0	well	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	match-01	ARG1	absorb-01	0.0.0.0.0.0.0	0.0.0.0.0.0.0.1	
# ::edge	near	op1	goal	0.0.0	0.0	
# ::edge	promise-01	ARG1	goal	0	0.0	
# ::edge	win-01	ARG0	awareness	0.0.0.0.0	0.0.0.0	
# ::edge	win-01	ARG1	even-01	0.0.0.0.0	0.0.0.0.0.0	
(p / promise-01 
      :ARG1 (g / goal 
            :op-of (n / near 
                  :location-of (a / awareness 
                        :ARG0-of (w2 / win-01 
                              :ARG1 (e / even-01 
                                    :ARG1 (m / match-01 
                                          :ARG0 (w / well) 
                                          :ARG1 (a2 / absorb-01) 
                                          :ARG1-of (b / balance-01)))) 
                        :mod (g2 / great)))))

# ::snt the home office has promised a shake up of the training and selection of senior police officers but rejected mps calls for a central pool for appointments to the highest ranks writes terry kirby
# ::tok the home office has promised a shake up of the training and selection of senior police officers but rejected mps calls for a central pool for appointments to the highest ranks writes terry kirby
# ::alignments 31-32|0.1.0 30-31|0.1.0.0 29-30|0.1.0.0.0.0+0.1.0.0.0 24-25|0.1.1 23-24|0.1.1.0 18-19|0.1 17-18|0 16-17|0.1.2.1.0.1+0.1.2.1.0 15-16|0.1.2.1.0.0 14-15|0.1.2.1.0.1.0 12-13|0.1.2.1 11-12|0.1.2 10-11|0.1.2.0 6-7|0.0.1 4-5|0.0 2-3|0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:28.470
# ::node	0	contrast-01	17-18
# ::node	0.0	promise-01	4-5
# ::node	0.0.0	office	2-3
# ::node	0.0.0.0	home	1-2
# ::node	0.0.1	shake-01	6-7
# ::node	0.1	reject-01	18-19
# ::node	0.1.0	write-01	31-32
# ::node	0.1.0.0	rank	30-31
# ::node	0.1.0.0.0	high	29-30
# ::node	0.1.0.0.0.0	most	29-30
# ::node	0.1.1	pool	24-25
# ::node	0.1.1.0	central	23-24
# ::node	0.1.2	and	11-12
# ::node	0.1.2.0	train-01	10-11
# ::node	0.1.2.1	select-01	12-13
# ::node	0.1.2.1.0	have-org-role-91	16-17
# ::node	0.1.2.1.0.0	police	15-16
# ::node	0.1.2.1.0.1	officer	16-17
# ::node	0.1.2.1.0.1.0	senior	14-15
# ::root	0	contrast-01
# ::edge	and	op1	train-01	0.1.2	0.1.2.0	
# ::edge	and	op2	select-01	0.1.2	0.1.2.1	
# ::edge	and	op3	reject-01	0.1.2	0.1	
# ::edge	contrast-01	ARG1	promise-01	0	0.0	
# ::edge	contrast-01	ARG2	reject-01	0	0.1	
# ::edge	have-org-role-91	ARG1	police	0.1.2.1.0	0.1.2.1.0.0	
# ::edge	have-org-role-91	ARG2	officer	0.1.2.1.0	0.1.2.1.0.1	
# ::edge	high	degree	most	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	office	mod	home	0.0.0	0.0.0.0	
# ::edge	officer	mod	senior	0.1.2.1.0.1	0.1.2.1.0.1.0	
# ::edge	pool	mod	central	0.1.1	0.1.1.0	
# ::edge	promise-01	ARG0	office	0.0	0.0.0	
# ::edge	promise-01	ARG1	shake-01	0.0	0.0.1	
# ::edge	rank	mod	high	0.1.0.0	0.1.0.0.0	
# ::edge	reject-01	manner	pool	0.1	0.1.1	
# ::edge	select-01	ARG1	have-org-role-91	0.1.2.1	0.1.2.1.0	
# ::edge	write-01	ARG0	rank	0.1.0	0.1.0.0	
# ::edge	write-01	ARG1	reject-01	0.1.0	0.1	
(c2 / contrast-01 
      :ARG1 (p3 / promise-01 
            :ARG0 (o2 / office 
                  :mod (h3 / home)) 
            :ARG1 (s3 / shake-01)) 
      :ARG2 (r2 / reject-01 
            :ARG1-of (w / write-01 
                  :ARG0 (r / rank 
                        :mod (h / high 
                              :degree (m / most)))) 
            :manner (p / pool 
                  :mod (c / central)) 
            :op-of (a / and 
                  :op1 (t / train-01) 
                  :op2 (s2 / select-01 
                        :ARG1 (h2 / have-org-role-91 
                              :ARG1 (p2 / police) 
                              :ARG2 (o / officer 
                                    :mod (s / senior)))))))

# ::snt labour promised more and stuck to the existing rules in practice
# ::tok labour promised more and stuck to the existing rules in practice
# ::alignments 10-11|0.2 8-9|0 7-8|0.1 4-5|0.0 3-4|0.0.0 1-2|0.0.0.0 0-1|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:28.493
# ::node	0	rule	8-9
# ::node	0.0	stick-01	4-5
# ::node	0.0.0	and	3-4
# ::node	0.0.0.0	promise-01	1-2
# ::node	0.0.0.0.0	labour	0-1
# ::node	0.1	exist-01	7-8
# ::node	0.2	practice-01	10-11
# ::root	0	rule
# ::edge	and	op1	stick-01	0.0.0	0.0	
# ::edge	exist-01	ARG1	rule	0.1	0	
# ::edge	promise-01	ARG0	labour	0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	ARG2	and	0.0.0.0	0.0.0	
# ::edge	rule	topic	practice-01	0	0.2	
# ::edge	stick-01	ARG1	rule	0.0	0	
(r / rule 
      :ARG1-of (s / stick-01 
            :op-of (a / and 
                  :ARG2-of (p2 / promise-01 
                        :ARG0 (l / labour)))) 
      :ARG1-of (e / exist-01) 
      :topic (p / practice-01))

# ::snt he promised to hold elections in six months calling a meeting of national reconciliation in the town of buchanan for next saturday
# ::tok he promised to hold elections in six months calling a meeting of national reconciliation in the town of buchanan for next saturday
# ::alignments 21-22|0.0.0.1 20-21|0.1 16-17|0.0.0.0.0.0 13-14|0.0.0.0.0 12-13|0.0.0.0.0.1 10-11|0.0.0.0 7-8|0.0.1+0.0.1.0 6-7|0.0.1.0.0 4-5|0.0.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:28.615
# ::node	0	promise-01	1-2
# ::node	0.0	he	0-1
# ::node	0.0.0	elect-01	4-5
# ::node	0.0.0.0	meet-03	10-11
# ::node	0.0.0.0.0	reconcile-01	13-14
# ::node	0.0.0.0.0.0	town	16-17
# ::node	0.0.0.0.0.1	nation	12-13
# ::node	0.0.0.1	saturday	21-22
# ::node	0.0.1	month	7-8
# ::node	0.0.1.0	temporal-quantity	7-8
# ::node	0.0.1.0.0	6	6-7
# ::node	0.1	next	20-21
# ::root	0	promise-01
# ::edge	elect-01	ARG0	he	0.0.0	0.0	
# ::edge	meet-03	ARG0	reconcile-01	0.0.0.0	0.0.0.0.0	
# ::edge	meet-03	ARG1	elect-01	0.0.0.0	0.0.0	
# ::edge	month	poss	he	0.0.1	0.0	
# ::edge	promise-01	ARG0	he	0	0.0	
# ::edge	promise-01	ARG1	next	0	0.1	
# ::edge	reconcile-01	ARG1	town	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	reconcile-01	mod	nation	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	saturday	op1	elect-01	0.0.0.1	0.0.0	
# ::edge	temporal-quantity	quant	6	0.0.1.0	0.0.1.0.0	
# ::edge	temporal-quantity	unit	month	0.0.1.0	0.0.1	
(p / promise-01 
      :ARG0 (h / he 
            :ARG0-of (e / elect-01 
                  :ARG1-of (m / meet-03 
                        :ARG0 (r / reconcile-01 
                              :ARG1 (t / town) 
                              :mod (n2 / nation))) 
                  :op-of (s / saturday)) 
            :poss-of (m2 / month 
                  :unit-of (t2 / temporal-quantity 
                        :quant 6))) 
      :ARG1 (n / next))

# ::snt have you noticed how so many adverts for chocolate are aimed at girls they promise romance sex fun ellip
# ::tok have you noticed how so many adverts for chocolate are aimed at girls they promise romance sex fun ellip
# ::alignments 17-18|0.0.0.0.1.0 16-17|0.0.0.0.1 14-15|0.0.0.0.0 13-14|0.0.0.0 12-13|0.0.0.0.0.0 10-11|0.0.0 5-6|0.1.0 4-5|0.1 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:28.866
# ::node	0	notice-01	2-3
# ::node	0.0	you	1-2
# ::node	0.0.0	aim-02	10-11
# ::node	0.0.0.0	they	13-14
# ::node	0.0.0.0.0	promise-01	14-15
# ::node	0.0.0.0.0.0	girl	12-13
# ::node	0.0.0.0.1	sex	16-17
# ::node	0.0.0.0.1.0	fun	17-18
# ::node	0.1	so	4-5
# ::node	0.1.0	many	5-6
# ::root	0	notice-01
# ::edge	aim-02	ARG0	they	0.0.0	0.0.0.0	
# ::edge	aim-02	ARG1	you	0.0.0	0.0	
# ::edge	fun	mod	sex	0.0.0.0.1.0	0.0.0.0.1	
# ::edge	many	degree	so	0.1.0	0.1	
# ::edge	notice-01	ARG0	you	0	0.0	
# ::edge	notice-01	ARG1	so	0	0.1	
# ::edge	promise-01	ARG0	they	0.0.0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	girl	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	sex	domain	they	0.0.0.0.1	0.0.0.0	
(n / notice-01 
      :ARG0 (y / you 
            :ARG1-of (a / aim-02 
                  :ARG0 (t / they 
                        :ARG0-of (p / promise-01 
                              :ARG1 (g / girl)) 
                        :domain-of (s / sex 
                              :mod-of (f / fun))))) 
      :ARG1 (s2 / so 
            :degree-of (m / many)))

# ::snt finally in may 1939 there came a white paper promising the end of jewish immigration after a further 75000 jews had been admitted
# ::tok finally in may 1939 there came a white paper promising the end of jewish immigration after a further 75000 jews had been admitted
# ::alignments 22-23|0 19-20|0.0.0.0+0.0.0+0.0 17-18|0.1.0.0 15-16|0.1 14-15|0.1.0 13-14|0.1.0.2.0.0+0.1.0.2.0+0.1.0.2 9-10|0.1.0.1 8-9|0.1.0.1.1 7-8|0.1.0.1.1.0 2-4|0.1.0.1.0.0.1+0.1.0.1.0.0.0+0.1.0.1.0.0 0-1|0.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:29.173
# ::node	0	admit-01	22-23
# ::node	0.0	ethnic-group	19-20
# ::node	0.0.0	name	19-20
# ::node	0.0.0.0	"Jew"	19-20
# ::node	0.1	after	15-16
# ::node	0.1.0	immigrate-01	14-15
# ::node	0.1.0.0	further	17-18
# ::node	0.1.0.1	promise-01	9-10
# ::node	0.1.0.1.0	final	0-1
# ::node	0.1.0.1.0.0	date-entity	2-4
# ::node	0.1.0.1.0.0.0	5	2-4
# ::node	0.1.0.1.0.0.1	1939	2-4
# ::node	0.1.0.1.1	paper	8-9
# ::node	0.1.0.1.1.0	white	7-8
# ::node	0.1.0.2	ethnic-group	13-14
# ::node	0.1.0.2.0	name	13-14
# ::node	0.1.0.2.0.0	"Jew"	13-14
# ::root	0	admit-01
# ::edge	admit-01	ARG1	ethnic-group	0	0.0	
# ::edge	after	op1	admit-01	0.1	0	
# ::edge	date-entity	month	5	0.1.0.1.0.0	0.1.0.1.0.0.0	
# ::edge	date-entity	time	final	0.1.0.1.0.0	0.1.0.1.0	
# ::edge	date-entity	year	1939	0.1.0.1.0.0	0.1.0.1.0.0.1	
# ::edge	ethnic-group	name	name	0.0	0.0.0	
# ::edge	ethnic-group	name	name	0.1.0.2	0.1.0.2.0	
# ::edge	immigrate-01	ARG1	further	0.1.0	0.1.0.0	
# ::edge	immigrate-01	mod	ethnic-group	0.1.0	0.1.0.2	
# ::edge	immigrate-01	time	after	0.1.0	0.1	
# ::edge	name	op1	"Jew"	0.0.0	0.0.0.0	
# ::edge	name	op1	"Jew"	0.1.0.2.0	0.1.0.2.0.0	
# ::edge	paper	mod	white	0.1.0.1.1	0.1.0.1.1.0	
# ::edge	promise-01	ARG0	final	0.1.0.1	0.1.0.1.0	
# ::edge	promise-01	ARG1	paper	0.1.0.1	0.1.0.1.1	
# ::edge	promise-01	ARG2	immigrate-01	0.1.0.1	0.1.0	
(a / admit-01 
      :ARG1 (e / ethnic-group 
            :name (n / name 
                  :op1 "Jew")) 
      :op-of (a2 / after 
            :time-of (i / immigrate-01 
                  :ARG1 (f / further) 
                  :ARG2-of (p / promise-01 
                        :ARG0 (f2 / final 
                              :time-of (d / date-entity 
                                    :month 5 
                                    :year 1939)) 
                        :ARG1 (p2 / paper 
                              :mod (w / white))) 
                  :mod (e2 / ethnic-group 
                        :name (n2 / name 
                              :op1 "Jew")))))

# ::snt petar mladenov the communist party leader promised democratic multiparty elections by next june and the end of guarantees of the partys leading role
# ::tok petar mladenov the communist party leader promised democratic multiparty elections by next june and the end of guarantees of the partys leading role
# ::alignments 22-23|0.2 21-22|0.2.0 17-18|0.2.1 13-14|0 12-13|0.1.1+0.1 11-12|0.1.0 9-10|0.0.1 7-8|0.0.1.0 6-7|0.0 5-6|0.0.0.0+0.0.0 3-5|0.0.0.1.0.0+0.0.0.1.0.1+0.0.0.1.0+0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:29.300
# ::node	0	and	13-14
# ::node	0.0	promise-01	6-7
# ::node	0.0.0	person	5-6
# ::node	0.0.0.0	lead-02	5-6
# ::node	0.0.0.1	political-party	3-5
# ::node	0.0.0.1.0	name	3-5
# ::node	0.0.0.1.0.0	"Communist"	3-5
# ::node	0.0.0.1.0.1	"Party"	3-5
# ::node	0.0.1	elect-01	9-10
# ::node	0.0.1.0	democracy	7-8
# ::node	0.1	date-entity	12-13
# ::node	0.1.0	next	11-12
# ::node	0.1.1	6	12-13
# ::node	0.2	role	22-23
# ::node	0.2.0	lead-01	21-22
# ::node	0.2.1	guarantee-01	17-18
# ::root	0	and
# ::edge	and	op1	date-entity	0	0.1	
# ::edge	and	op2	role	0	0.2	
# ::edge	date-entity	mod	next	0.1	0.1.0	
# ::edge	date-entity	month	6	0.1	0.1.1	
# ::edge	elect-01	mod	democracy	0.0.1	0.0.1.0	
# ::edge	guarantee-01	ARG0	role	0.2.1	0.2	
# ::edge	lead-01	ARG0	role	0.2.0	0.2	
# ::edge	lead-02	ARG0	person	0.0.0.0	0.0.0	
# ::edge	name	op1	"Communist"	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	name	op2	"Party"	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	person	mod	political-party	0.0.0	0.0.0.1	
# ::edge	political-party	name	name	0.0.0.1	0.0.0.1.0	
# ::edge	promise-01	ARG0	person	0.0	0.0.0	
# ::edge	promise-01	ARG1	and	0.0	0	
# ::edge	promise-01	ARG2	elect-01	0.0	0.0.1	
(a / and 
      :ARG1-of (p / promise-01 
            :ARG0 (p2 / person 
                  :ARG0-of (l2 / lead-02) 
                  :mod (p3 / political-party 
                        :name (n2 / name 
                              :op1 "Communist" 
                              :op2 "Party"))) 
            :ARG2 (e / elect-01 
                  :mod (d2 / democracy))) 
      :op1 (d / date-entity 
            :mod (n / next) 
            :month 6) 
      :op2 (r / role 
            :ARG0-of (l / lead-01) 
            :ARG0-of (g / guarantee-01)))

# ::snt however the understanding among the summit leaders is that most of this could be met by a planned increase in overseas aid promised by japan and other rich countries unable to provide food
# ::tok however the understanding among the summit leaders is that most of this could be met by a planned increase in overseas aid promised by japan and other rich countries unable to provide food
# ::alignments 32-33|0.0.1.0.2 31-32|0.0.1.0.2.0 28-29|0.0.1.0.0.0.0 27-28|0.0.1.0.0.0.0.1 26-27|0.0.1.0.0.0.0.0 25-26|0.0.1.0.0.0 22-23|0.0.1.0.0 21-22|0.0.1.0 20-21|0.0.1.0.1 18-19|0.0.1 17-18|0.0.1.1 14-15|0.0 12-13|0 11-12|0.0.1.0.2.0.0 9-10|0.0.1.1.0 6-7|0.0.0.1+0.0.0 5-6|0.0.0.0.0 3-4|0.0.0.0.0.0 2-3|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:29.742
# ::node	0	possible	12-13
# ::node	0.0	meet-03	14-15
# ::node	0.0.0	person	6-7
# ::node	0.0.0.0	understand-01	2-3
# ::node	0.0.0.0.0	summit	5-6
# ::node	0.0.0.0.0.0	among	3-4
# ::node	0.0.0.1	lead-02	6-7
# ::node	0.0.1	increase-01	18-19
# ::node	0.0.1.0	aid-01	21-22
# ::node	0.0.1.0.0	promise-01	22-23
# ::node	0.0.1.0.0.0	and	25-26
# ::node	0.0.1.0.0.0.0	country	28-29
# ::node	0.0.1.0.0.0.0.0	other	26-27
# ::node	0.0.1.0.0.0.0.1	rich	27-28
# ::node	0.0.1.0.1	overseas	20-21
# ::node	0.0.1.0.2	food	32-33
# ::node	0.0.1.0.2.0	provide-01	31-32
# ::node	0.0.1.0.2.0.0	this	11-12
# ::node	0.0.1.1	plan-01	17-18
# ::node	0.0.1.1.0	most	9-10
# ::root	0	possible
# ::edge	aid-01	location	overseas	0.0.1.0	0.0.1.0.1	
# ::edge	among	op1	summit	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	and	op1	country	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	country	mod	other	0.0.1.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	country	mod	rich	0.0.1.0.0.0.0	0.0.1.0.0.0.0.1	
# ::edge	food	op1	aid-01	0.0.1.0.2	0.0.1.0	
# ::edge	increase-01	ARG1	aid-01	0.0.1	0.0.1.0	
# ::edge	lead-02	ARG0	person	0.0.0.1	0.0.0	
# ::edge	meet-03	ARG0	person	0.0	0.0.0	
# ::edge	meet-03	ARG1	increase-01	0.0	0.0.1	
# ::edge	plan-01	ARG0	most	0.0.1.1	0.0.1.1.0	
# ::edge	plan-01	ARG1	increase-01	0.0.1.1	0.0.1	
# ::edge	possible	domain	meet-03	0	0.0	
# ::edge	promise-01	ARG1	aid-01	0.0.1.0.0	0.0.1.0	
# ::edge	promise-01	ARG2	and	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	provide-01	ARG0	this	0.0.1.0.2.0	0.0.1.0.2.0.0	
# ::edge	provide-01	ARG1	food	0.0.1.0.2.0	0.0.1.0.2	
# ::edge	understand-01	ARG0	person	0.0.0.0	0.0.0	
# ::edge	understand-01	ARG1	summit	0.0.0.0	0.0.0.0.0	
(p4 / possible 
      :domain (m / meet-03 
            :ARG0 (p5 / person 
                  :ARG0-of (u / understand-01 
                        :ARG1 (s / summit 
                              :op-of (a3 / among))) 
                  :ARG0-of (l / lead-02)) 
            :ARG1 (i / increase-01 
                  :ARG1 (a2 / aid-01 
                        :ARG1-of (p2 / promise-01 
                              :ARG2 (a / and 
                                    :op1 (c / country 
                                          :mod (o / other) 
                                          :mod (r / rich)))) 
                        :location (o2 / overseas) 
                        :op-of (f / food 
                              :ARG1-of (p / provide-01 
                                    :ARG0 (t / this)))) 
                  :ARG1-of (p3 / plan-01 
                        :ARG0 (m2 / most)))))

# ::snt in his inaugural speech to congress mr menem promised a crackdown on corruption dash
# ::tok in his inaugural speech to congress mr menem promised a crackdown on corruption dash
# ::alignments 12-13|0.1.0 10-11|0.1 8-9|0 5-6|0.0.0.0+0.0.0+0.0 3-4|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:29.778
# ::node	0	promise-01	8-9
# ::node	0.0	government-organization	5-6
# ::node	0.0.0	name	5-6
# ::node	0.0.0.0	"Congress"	5-6
# ::node	0.1	crack-06	10-11
# ::node	0.1.0	corrupt-01	12-13
# ::node	0.1.1	speech	3-4
# ::root	0	promise-01
# ::edge	crack-06	ARG1	corrupt-01	0.1	0.1.0	
# ::edge	government-organization	name	name	0.0	0.0.0	
# ::edge	name	op1	"Congress"	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG0	government-organization	0	0.0	
# ::edge	promise-01	ARG1	crack-06	0	0.1	
# ::edge	speech	poss	crack-06	0.1.1	0.1	
(p / promise-01 
      :ARG0 (g / government-organization 
            :name (n / name 
                  :op1 "Congress")) 
      :ARG1 (c2 / crack-06 
            :ARG1 (c / corrupt-01) 
            :poss-of (s / speech)))

# ::snt knighton has promised to post a formal offer document to shareholders by 11 october but he could run into problems with the city panel on takeovers and mergers which is likely to require details of his financial backing
# ::tok knighton has promised to post a formal offer document to shareholders by 11 october but he could run into problems with the city panel on takeovers and mergers which is likely to require details of his financial backing
# ::alignments 37-38|0.1.1.0.1.0.1.0.0.0.1 36-37|0.1.1.0.1.0.1.0.0.0.1.0 33-34|0.1.1.0.1.0.1.0.0.0 32-33|0.1.1.0.1.0.1.0.0 30-31|0.1.1.0.1.0.1.0 27-28|0.1.1.0.1.0.1 26-27|0.1.1.0.1.0 23-24|0.1.1.0.1.0.0.0 22-23|0.1.1.0.1.0.0.0.0 19-20|0.1.1.0.1.0.0 16-17|0.2 15-16|0.1.0 14-15|0 13-14|0.0.0+0.0 12-13|0.1.1.0.1.0.1.0.0.0.0 8-9|0.1.1.0 7-8|0.1.1.0.1 6-7|0.1.1.0.0 4-5|0.1.1 2-3|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:30.372
# ::node	0	contrast-01	14-15
# ::node	0.0	date-entity	13-14
# ::node	0.0.0	10	13-14
# ::node	0.1	promise-01	2-3
# ::node	0.1.0	he	15-16
# ::node	0.1.1	post	4-5
# ::node	0.1.1.0	document	8-9
# ::node	0.1.1.0.0	formal	6-7
# ::node	0.1.1.0.1	offer-01	7-8
# ::node	0.1.1.0.1.0	and	26-27
# ::node	0.1.1.0.1.0.0	problem	19-20
# ::node	0.1.1.0.1.0.0.0	panel	23-24
# ::node	0.1.1.0.1.0.0.0.0	city	22-23
# ::node	0.1.1.0.1.0.1	merge-01	27-28
# ::node	0.1.1.0.1.0.1.0	likely	30-31
# ::node	0.1.1.0.1.0.1.0.0	require-01	32-33
# ::node	0.1.1.0.1.0.1.0.0.0	detail-01	33-34
# ::node	0.1.1.0.1.0.1.0.0.0.0	11	12-13
# ::node	0.1.1.0.1.0.1.0.0.0.1	back-01	37-38
# ::node	0.1.1.0.1.0.1.0.0.0.1.0	finance	36-37
# ::node	0.2	possible	16-17
# ::root	0	contrast-01
# ::edge	and	op1	problem	0.1.1.0.1.0	0.1.1.0.1.0.0	
# ::edge	and	op2	merge-01	0.1.1.0.1.0	0.1.1.0.1.0.1	
# ::edge	back-01	ARG1	finance	0.1.1.0.1.0.1.0.0.0.1	0.1.1.0.1.0.1.0.0.0.1.0	
# ::edge	contrast-01	ARG1	date-entity	0	0.0	
# ::edge	contrast-01	ARG2	possible	0	0.2	
# ::edge	date-entity	month	10	0.0	0.0.0	
# ::edge	detail-01	ARG0	11	0.1.1.0.1.0.1.0.0.0	0.1.1.0.1.0.1.0.0.0.0	
# ::edge	detail-01	ARG1	back-01	0.1.1.0.1.0.1.0.0.0	0.1.1.0.1.0.1.0.0.0.1	
# ::edge	document	mod	formal	0.1.1.0	0.1.1.0.0	
# ::edge	document	source	offer-01	0.1.1.0	0.1.1.0.1	
# ::edge	likely	domain	require-01	0.1.1.0.1.0.1.0	0.1.1.0.1.0.1.0.0	
# ::edge	merge-01	ARG1	likely	0.1.1.0.1.0.1	0.1.1.0.1.0.1.0	
# ::edge	offer-01	ARG1	and	0.1.1.0.1	0.1.1.0.1.0	
# ::edge	panel	mod	city	0.1.1.0.1.0.0.0	0.1.1.0.1.0.0.0.0	
# ::edge	post	manner	document	0.1.1	0.1.1.0	
# ::edge	problem	location	panel	0.1.1.0.1.0.0	0.1.1.0.1.0.0.0	
# ::edge	promise-01	ARG0	he	0.1	0.1.0	
# ::edge	promise-01	ARG1	contrast-01	0.1	0	
# ::edge	promise-01	ARG2	post	0.1	0.1.1	
# ::edge	require-01	ARG1	detail-01	0.1.1.0.1.0.1.0.0	0.1.1.0.1.0.1.0.0.0	
(c2 / contrast-01 
      :ARG1 (d2 / date-entity 
            :month 10) 
      :ARG1-of (p5 / promise-01 
            :ARG0 (h / he) 
            :ARG2 (p4 / post 
                  :manner (d3 / document 
                        :mod (f2 / formal) 
                        :source (o / offer-01 
                              :ARG1 (a / and 
                                    :op1 (p2 / problem 
                                          :location (p / panel 
                                                :mod (c / city))) 
                                    :op2 (m / merge-01 
                                          :ARG1 (l / likely 
                                                :domain (r / require-01 
                                                      :ARG1 (d / detail-01 
                                                            :ARG0 11 
                                                            :ARG1 (b / back-01 
                                                                  :ARG1 (f / finance))))))))))) 
      :ARG2 (p3 / possible))

# ::snt you may think you have to cut back on the necessities of life for a few days or cancel a treat you had promised yourself and the family
# ::tok you may think you have to cut back on the necessities of life for a few days or cancel a treat you had promised yourself and the family
# ::alignments 27-28|0.1 25-26|0 23-24|0.0.2 21-22|0.0.2.0 20-21|0.0 18-19|0.0.1 17-18|0.0.1.1 16-17|0.0.1.1.1.1+0.0.1.1.1 15-16|0.0.1.1.1.0 12-13|0.0.3 7-8|0.0.0 3-4|0.0.1.0 2-3|0.0.1.1.0 1-2|0.0.1.1.0.1.0+0.0.1.1.0.1 0-1|0.0.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:31.522
# ::node	0	and	25-26
# ::node	0.0	treat-01	20-21
# ::node	0.0.0	back	7-8
# ::node	0.0.1	cancel-01	18-19
# ::node	0.0.1.0	you	3-4
# ::node	0.0.1.1	or	17-18
# ::node	0.0.1.1.0	think-01	2-3
# ::node	0.0.1.1.0.0	you	0-1
# ::node	0.0.1.1.0.1	date-entity	1-2
# ::node	0.0.1.1.0.1.0	5	1-2
# ::node	0.0.1.1.1	temporal-quantity	16-17
# ::node	0.0.1.1.1.0	few	15-16
# ::node	0.0.1.1.1.1	day	16-17
# ::node	0.0.2	promise-01	23-24
# ::node	0.0.2.0	you	21-22
# ::node	0.0.3	life	12-13
# ::node	0.1	family	27-28
# ::root	0	and
# ::edge	and	op1	treat-01	0	0.0	
# ::edge	and	op2	family	0	0.1	
# ::edge	cancel-01	ARG0	you	0.0.1	0.0.1.0	
# ::edge	cancel-01	ARG1	treat-01	0.0.1	0.0	
# ::edge	date-entity	month	5	0.0.1.1.0.1	0.0.1.1.0.1.0	
# ::edge	few	op1	temporal-quantity	0.0.1.1.1.0	0.0.1.1.1	
# ::edge	or	op1	temporal-quantity	0.0.1.1	0.0.1.1.1	
# ::edge	or	op2	cancel-01	0.0.1.1	0.0.1	
# ::edge	promise-01	ARG0	you	0.0.2	0.0.2.0	
# ::edge	promise-01	ARG1	treat-01	0.0.2	0.0	
# ::edge	temporal-quantity	unit	day	0.0.1.1.1	0.0.1.1.1.1	
# ::edge	think-01	ARG0	you	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	think-01	ARG1	or	0.0.1.1.0	0.0.1.1	
# ::edge	think-01	mod	date-entity	0.0.1.1.0	0.0.1.1.0.1	
# ::edge	treat-01	ARG1	back	0.0	0.0.0	
# ::edge	treat-01	mod	life	0.0	0.0.3	
(a / and 
      :op1 (t / treat-01 
            :ARG1 (b / back) 
            :ARG1-of (c / cancel-01 
                  :ARG0 (y2 / you) 
                  :op-of (o / or 
                        :ARG1-of (t3 / think-01 
                              :ARG0 (y3 / you) 
                              :mod (d2 / date-entity 
                                    :month 5)) 
                        :op1 (t2 / temporal-quantity 
                              :op-of (f2 / few) 
                              :unit (d / day)))) 
            :ARG1-of (p / promise-01 
                  :ARG0 (y / you)) 
            :mod (l / life)) 
      :op2 (f / family))

# ::snt the warden of wadham sir claus moser said i am delighted at this excellent agreement as part of what promises to be a most worthwhile relationship
# ::tok the warden of wadham sir claus moser said i am delighted at this excellent agreement as part of what promises to be a most worthwhile relationship
# ::alignments 25-26|0.0.0.0.0.0 24-25|0.0.0.0.0.0.0 23-24|0.0.0.0.0.0.0.0 19-20|0.0.0.0.0 14-15|0.0.0.0 13-14|0.0.0.0.1 12-13|0.0.0.0.2 10-11|0.0.0 8-9|0.0 7-8|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:31.579
# ::node	0	say-01	7-8
# ::node	0.0	i	8-9
# ::node	0.0.0	delight-01	10-11
# ::node	0.0.0.0	agree-01	14-15
# ::node	0.0.0.0.0	promise-01	19-20
# ::node	0.0.0.0.0.0	relationship	25-26
# ::node	0.0.0.0.0.0.0	worthwhile	24-25
# ::node	0.0.0.0.0.0.0.0	most	23-24
# ::node	0.0.0.0.1	excellent	13-14
# ::node	0.0.0.0.2	this	12-13
# ::root	0	say-01
# ::edge	agree-01	ARG0	promise-01	0.0.0.0	0.0.0.0.0	
# ::edge	agree-01	ARG1	excellent	0.0.0.0	0.0.0.0.1	
# ::edge	agree-01	mod	this	0.0.0.0	0.0.0.0.2	
# ::edge	delight-01	ARG2	agree-01	0.0.0	0.0.0.0	
# ::edge	delight-01	domain	i	0.0.0	0.0	
# ::edge	promise-01	ARG1	relationship	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	relationship	mod	worthwhile	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	say-01	ARG0	i	0	0.0	
# ::edge	worthwhile	degree	most	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
(s / say-01 
      :ARG0 (i / i 
            :domain-of (d / delight-01 
                  :ARG2 (a / agree-01 
                        :ARG0 (p / promise-01 
                              :ARG1 (r / relationship 
                                    :mod (w / worthwhile 
                                          :degree (m / most)))) 
                        :ARG1 (e / excellent) 
                        :mod (t / this)))))

# ::snt the south african police promised a highlevel investigation yesterday into claims by a former security police captain that with the full knowledge of topranking officers who allegedly ran terror missions in and out of the country he had headed a hit squad which eliminated political enemies of the government
# ::tok the south african police promised a highlevel investigation yesterday into claims by a former security police captain that with the full knowledge of topranking officers who allegedly ran terror missions in and out of the country he had headed a hit squad which eliminated political enemies of the government
# ::alignments 45-46|0.0.1.0.0.0.0.2.1.0.0.0.0+0.0.1.0.0.0.0.2.1.0.0.0 44-45|0.0.1.0.0.0.0.2.1.0.0.0.0.0 43-44|0.0.1.0.0.0.0.2.1.0 41-42|0.0.1.0.0.0.0.2.1.0.0 40-41|0.0.1.0.0.0.0.2.1.1 36-37|0.0.1.0.0.0.0.2.1 35-36|0.0.1.0.0.0.0.0 31-32|0 29-30|0.0.1.0.0.0.0.3 28-29|0.0.1.0.0.0.0.3.0 26-27|0.0.1.0.0.0 24-25|0.0.1.0.0.0.0.1+0.0.1.0.0.0.0 21-22|0.0.1.0.0.0.0.2 20-21|0.0.1.0.0.0.0.2.0 16-17|0.0.0+0.0.0.0 15-16|0.0.0.0.0 14-15|0.0.0.0.0.0 13-14|0.0.0.0.1 10-11|0.0 8-9|0.0.1.1 7-8|0.0.1.0.0 4-5|0.0.1 3-4|0.0.1.0 1-2|0.0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:32.922
# ::node	0	and	31-32
# ::node	0.0	claim-01	10-11
# ::node	0.0.0	captain	16-17
# ::node	0.0.0.0	have-org-role-91	16-17
# ::node	0.0.0.0.0	police	15-16
# ::node	0.0.0.0.0.0	security	14-15
# ::node	0.0.0.0.1	former	13-14
# ::node	0.0.1	promise-01	4-5
# ::node	0.0.1.0	police	3-4
# ::node	0.0.1.0.0	investigate-01	7-8
# ::node	0.0.1.0.0.0	allege-01	26-27
# ::node	0.0.1.0.0.0.0	have-org-role-91	24-25
# ::node	0.0.1.0.0.0.0.0	country	35-36
# ::node	0.0.1.0.0.0.0.1	officer	24-25
# ::node	0.0.1.0.0.0.0.2	knowledge	21-22
# ::node	0.0.1.0.0.0.0.2.0	full	20-21
# ::node	0.0.1.0.0.0.0.2.1	he	36-37
# ::node	0.0.1.0.0.0.0.2.1.0	eliminate-01	43-44
# ::node	0.0.1.0.0.0.0.2.1.0.0	squad	41-42
# ::node	0.0.1.0.0.0.0.2.1.0.0.0	have-rel-role-91	45-46
# ::node	0.0.1.0.0.0.0.2.1.0.0.0.0	enemy	45-46
# ::node	0.0.1.0.0.0.0.2.1.0.0.0.0.0	politics	44-45
# ::node	0.0.1.0.0.0.0.2.1.1	hit-01	40-41
# ::node	0.0.1.0.0.0.0.3	mission	29-30
# ::node	0.0.1.0.0.0.0.3.0	terror	28-29
# ::node	0.0.1.0.1	south	1-2
# ::node	0.0.1.1	yesterday	8-9
# ::root	0	and
# ::edge	allege-01	ARG1	have-org-role-91	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	and	op1	claim-01	0	0.0	
# ::edge	claim-01	ARG0	captain	0.0	0.0.0	
# ::edge	eliminate-01	ARG0	he	0.0.1.0.0.0.0.2.1.0	0.0.1.0.0.0.0.2.1	
# ::edge	eliminate-01	ARG1	squad	0.0.1.0.0.0.0.2.1.0	0.0.1.0.0.0.0.2.1.0.0	
# ::edge	enemy	mod	politics	0.0.1.0.0.0.0.2.1.0.0.0.0	0.0.1.0.0.0.0.2.1.0.0.0.0.0	
# ::edge	have-org-role-91	ARG1	country	0.0.1.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	have-org-role-91	ARG1	police	0.0.0.0	0.0.0.0.0	
# ::edge	have-org-role-91	ARG2	captain	0.0.0.0	0.0.0	
# ::edge	have-org-role-91	ARG2	officer	0.0.1.0.0.0.0	0.0.1.0.0.0.0.1	
# ::edge	have-org-role-91	time	former	0.0.0.0	0.0.0.0.1	
# ::edge	have-rel-role-91	ARG0	squad	0.0.1.0.0.0.0.2.1.0.0.0	0.0.1.0.0.0.0.2.1.0.0	
# ::edge	have-rel-role-91	ARG2	enemy	0.0.1.0.0.0.0.2.1.0.0.0	0.0.1.0.0.0.0.2.1.0.0.0.0	
# ::edge	hit-01	ARG0	he	0.0.1.0.0.0.0.2.1.1	0.0.1.0.0.0.0.2.1	
# ::edge	investigate-01	ARG0	police	0.0.1.0.0	0.0.1.0	
# ::edge	investigate-01	ARG1	allege-01	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	knowledge	location	have-org-role-91	0.0.1.0.0.0.0.2	0.0.1.0.0.0.0	
# ::edge	knowledge	mod	full	0.0.1.0.0.0.0.2	0.0.1.0.0.0.0.2.0	
# ::edge	knowledge	poss	he	0.0.1.0.0.0.0.2	0.0.1.0.0.0.0.2.1	
# ::edge	mission	mod	terror	0.0.1.0.0.0.0.3	0.0.1.0.0.0.0.3.0	
# ::edge	mission	topic	have-org-role-91	0.0.1.0.0.0.0.3	0.0.1.0.0.0.0	
# ::edge	police	mod	security	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	police	mod	south	0.0.1.0	0.0.1.0.1	
# ::edge	promise-01	ARG0	police	0.0.1	0.0.1.0	
# ::edge	promise-01	ARG1	claim-01	0.0.1	0.0	
# ::edge	promise-01	time	yesterday	0.0.1	0.0.1.1	
(a / and 
      :op1 (c3 / claim-01 
            :ARG0 (c2 / captain 
                  :ARG2-of (h5 / have-org-role-91 
                        :ARG1 (p2 / police 
                              :mod (s2 / security)) 
                        :time (f2 / former))) 
            :ARG1-of (p3 / promise-01 
                  :ARG0 (p4 / police 
                        :ARG0-of (i / investigate-01 
                              :ARG1 (a2 / allege-01 
                                    :ARG1 (h4 / have-org-role-91 
                                          :ARG1 (c / country) 
                                          :ARG2 (o / officer) 
                                          :location-of (k / knowledge 
                                                :mod (f / full) 
                                                :poss (h3 / he 
                                                      :ARG0-of (e2 / eliminate-01 
                                                            :ARG1 (s / squad 
                                                                  :ARG0-of (h / have-rel-role-91 
                                                                        :ARG2 (e / enemy 
                                                                              :mod (p / politics))))) 
                                                      :ARG0-of (h2 / hit-01))) 
                                          :topic-of (m / mission 
                                                :mod (t / terror))))) 
                        :mod (s3 / south)) 
                  :time (y / yesterday))))

# ::snt i was in scarborough on the day that hugh gaitskell promised to fight fight and fight again to save the party that he loved
# ::tok i was in scarborough on the day that hugh gaitskell promised to fight fight and fight again to save the party that he loved
# ::alignments 23-24|0.0 22-23|0.0.0 20-21|0.0.1 18-19|0 16-17|0.1.0 15-16|0.1 14-15|0.1.1 13-14|0.1.1.0.1.0 12-13|0.1.1.0.1 10-11|0.1.1.0 6-7|0.1.1.0.1.1 0-1|0.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:33.006
# ::node	0	save-02	18-19
# ::node	0.0	love-01	23-24
# ::node	0.0.0	he	22-23
# ::node	0.0.1	party	20-21
# ::node	0.1	fight-01	15-16
# ::node	0.1.0	again	16-17
# ::node	0.1.1	and	14-15
# ::node	0.1.1.0	promise-01	10-11
# ::node	0.1.1.0.0	i	0-1
# ::node	0.1.1.0.1	fight-01	12-13
# ::node	0.1.1.0.1.0	fight-01	13-14
# ::node	0.1.1.0.1.1	day	6-7
# ::root	0	save-02
# ::edge	and	op1	fight-01	0.1.1	0.1	
# ::edge	day	domain	fight-01	0.1.1.0.1.1	0.1.1.0.1	
# ::edge	fight-01	ARG1	fight-01	0.1.1.0.1	0.1.1.0.1.0	
# ::edge	fight-01	ARG2	save-02	0.1	0	
# ::edge	fight-01	mod	again	0.1	0.1.0	
# ::edge	love-01	ARG0	he	0.0	0.0.0	
# ::edge	love-01	ARG1	party	0.0	0.0.1	
# ::edge	promise-01	ARG0	i	0.1.1.0	0.1.1.0.0	
# ::edge	promise-01	ARG1	and	0.1.1.0	0.1.1	
# ::edge	promise-01	ARG2	fight-01	0.1.1.0	0.1.1.0.1	
# ::edge	save-02	ARG1	love-01	0	0.0	
(s / save-02 
      :ARG1 (l / love-01 
            :ARG0 (h / he) 
            :ARG1 (p / party)) 
      :ARG2-of (f / fight-01 
            :mod (a / again) 
            :op-of (a2 / and 
                  :ARG1-of (p2 / promise-01 
                        :ARG0 (i / i) 
                        :ARG2 (f3 / fight-01 
                              :ARG1 (f2 / fight-01) 
                              :domain-of (d / day))))))

# ::snt the syrians ensured the continuation of maronite rule by arranging for the installation of elias sarkis a banker of political probity whose rule was to be marked by the further collapse of the country he promised to save
# ::tok the syrians ensured the continuation of maronite rule by arranging for the installation of elias sarkis a banker of political probity whose rule was to be marked by the further collapse of the country he promised to save
# ::alignments 37-38|0.0.1.0.0 35-36|0.0.1.0 34-35|0.0.1.0.0.0 33-34|0.0.1.0.0.1 30-31|0.0.1 29-30|0.0.1.1 26-27|0 22-23|0.0 19-20|0.0.0 12-13|0.0.1.0.0.1.0.1 7-8|0.0.1.0.0.1.0 4-5|0.0.1.0.0.1.0.0 2-3|0.0.1.0.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:33.186
# ::node	0	mark-01	26-27
# ::node	0.0	rule-03	22-23
# ::node	0.0.0	politics	19-20
# ::node	0.0.1	collapse-01	30-31
# ::node	0.0.1.0	promise-01	35-36
# ::node	0.0.1.0.0	save-02	37-38
# ::node	0.0.1.0.0.0	he	34-35
# ::node	0.0.1.0.0.1	country	33-34
# ::node	0.0.1.0.0.1.0	rule-03	7-8
# ::node	0.0.1.0.0.1.0.0	continue-01	4-5
# ::node	0.0.1.0.0.1.0.0.0	ensure-01	2-3
# ::node	0.0.1.0.0.1.0.1	install-01	12-13
# ::node	0.0.1.1	further	29-30
# ::root	0	mark-01
# ::edge	collapse-01	degree	further	0.0.1	0.0.1.1	
# ::edge	continue-01	ARG1	rule-03	0.0.1.0.0.1.0.0	0.0.1.0.0.1.0	
# ::edge	ensure-01	ARG1	continue-01	0.0.1.0.0.1.0.0.0	0.0.1.0.0.1.0.0	
# ::edge	mark-01	ARG1	rule-03	0	0.0	
# ::edge	promise-01	ARG1	collapse-01	0.0.1.0	0.0.1	
# ::edge	promise-01	ARG2	save-02	0.0.1.0	0.0.1.0.0	
# ::edge	rule-03	ARG0	country	0.0.1.0.0.1.0	0.0.1.0.0.1	
# ::edge	rule-03	ARG1	politics	0.0	0.0.0	
# ::edge	rule-03	ARG2	install-01	0.0.1.0.0.1.0	0.0.1.0.0.1.0.1	
# ::edge	rule-03	frequency	collapse-01	0.0	0.0.1	
# ::edge	save-02	ARG0	he	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	save-02	ARG1	country	0.0.1.0.0	0.0.1.0.0.1	
(m / mark-01 
      :ARG1 (r / rule-03 
            :ARG1 (p2 / politics) 
            :frequency (c2 / collapse-01 
                  :ARG1-of (p / promise-01 
                        :ARG2 (s / save-02 
                              :ARG0 (h / he) 
                              :ARG1 (c / country 
                                    :ARG0-of (r2 / rule-03 
                                          :ARG1-of (c3 / continue-01 
                                                :ARG1-of (e / ensure-01)) 
                                          :ARG2 (i / install-01))))) 
                  :degree (f / further))))

# ::snt he also promised a new deal on environmental protection which was largely ignored under the national partys big development policies
# ::tok he also promised a new deal on environmental protection which was largely ignored under the national partys big development policies
# ::alignments 19-20|0.2.0 18-19|0.2.0.1 17-18|0.2.0.0 15-16|0.2.1.1 12-13|0.2.1 11-12|0.2.1.0 8-9|0.2 7-8|0.2.2 5-6|0.1 4-5|0.1.0 2-3|0 1-2|0.3 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:33.343
# ::node	0	promise-01	2-3
# ::node	0.0	he	0-1
# ::node	0.1	deal-01	5-6
# ::node	0.1.0	new	4-5
# ::node	0.2	protect-01	8-9
# ::node	0.2.0	policy	19-20
# ::node	0.2.0.0	big	17-18
# ::node	0.2.0.1	develop-02	18-19
# ::node	0.2.1	ignore-01	12-13
# ::node	0.2.1.0	large	11-12
# ::node	0.2.1.1	nation	15-16
# ::node	0.2.2	environment	7-8
# ::node	0.3	also	1-2
# ::root	0	promise-01
# ::edge	deal-01	mod	new	0.1	0.1.0	
# ::edge	ignore-01	ARG0	protect-01	0.2.1	0.2	
# ::edge	ignore-01	degree	large	0.2.1	0.2.1.0	
# ::edge	ignore-01	duration	nation	0.2.1	0.2.1.1	
# ::edge	policy	mod	big	0.2.0	0.2.0.0	
# ::edge	policy	topic	develop-02	0.2.0	0.2.0.1	
# ::edge	promise-01	ARG0	he	0	0.0	
# ::edge	promise-01	ARG1	deal-01	0	0.1	
# ::edge	promise-01	manner	protect-01	0	0.2	
# ::edge	promise-01	mod	also	0	0.3	
# ::edge	protect-01	ARG0	policy	0.2	0.2.0	
# ::edge	protect-01	ARG1	environment	0.2	0.2.2	
(p3 / promise-01 
      :ARG0 (h / he) 
      :ARG1 (d2 / deal-01 
            :mod (n2 / new)) 
      :manner (p2 / protect-01 
            :ARG0 (p / policy 
                  :mod (b / big) 
                  :topic (d / develop-02)) 
            :ARG0-of (i / ignore-01 
                  :degree (l / large) 
                  :duration (n / nation)) 
            :ARG1 (e / environment)) 
      :mod (a / also))

# ::snt if that doesnt attract you or youre not interested in the solitary life of home exercise you could instead try step reebok the latest buzzword in exercisetomusic which we used to call aerobics didnt we  this lowimpact high energy workout promises the aerobic equivalent of a seven mph run with the impact to the legs equivalent only of a three mph walk
# ::tok if that doesnt attract you or youre not interested in the solitary life of home exercise you could instead try step reebok the latest buzzword in exercisetomusic which we used to call aerobics didnt we this lowimpact high energy workout promises the aerobic equivalent of a seven mph run with the impact to the legs equivalent only of a three mph walk
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:33.346
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt like other companies thames promises a progressive dividend policy
# ::tok like other companies thames promises a progressive dividend policy
# ::alignments 8-9|0.0 6-7|0.0.0 4-5|0 2-3|0.0.1.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:33.361
# ::node	0	promise-01	4-5
# ::node	0.0	policy	8-9
# ::node	0.0.0	progressive	6-7
# ::node	0.0.1	other	1-2
# ::node	0.0.1.0	company	2-3
# ::root	0	promise-01
# ::edge	company	mod	other	0.0.1.0	0.0.1	
# ::edge	policy	mod	other	0.0	0.0.1	
# ::edge	policy	mod	progressive	0.0	0.0.0	
# ::edge	promise-01	ARG1	policy	0	0.0	
(p3 / promise-01 
      :ARG1 (p / policy 
            :mod (p2 / progressive) 
            :mod (o / other 
                  :mod-of (c / company))))

# ::snt she would hold them up against the children not actually promising them anything because she felt that these pieces of silk were too special
# ::tok she would hold them up against the children not actually promising them anything because she felt that these pieces of silk were too special
# ::alignments 23-24|0.0.1 22-23|0.0.1.0 18-19|0.0.1.1 15-16|0.0 14-15|0.0.0 13-14|0 12-13|0.1.1 10-11|0.1 9-10|0.1.2 7-8|0.1.0 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:33.625
# ::node	0	cause-01	13-14
# ::node	0.0	feel-01	15-16
# ::node	0.0.0	she	14-15
# ::node	0.0.1	special	23-24
# ::node	0.0.1.0	too	22-23
# ::node	0.0.1.1	piece	18-19
# ::node	0.1	promise-01	10-11
# ::node	0.1.0	child	7-8
# ::node	0.1.1	anything	12-13
# ::node	0.1.2	actual	9-10
# ::node	0.2	she	0-1
# ::root	0	cause-01
# ::edge	cause-01	ARG0	feel-01	0	0.0	
# ::edge	cause-01	ARG1	promise-01	0	0.1	
# ::edge	feel-01	ARG0	she	0.0	0.0.0	
# ::edge	feel-01	ARG1	special	0.0	0.0.1	
# ::edge	promise-01	ARG0	child	0.1	0.1.0	
# ::edge	promise-01	ARG1	anything	0.1	0.1.1	
# ::edge	promise-01	mod	actual	0.1	0.1.2	
# ::edge	she	op1	cause-01	0.2	0	
# ::edge	special	degree	too	0.0.1	0.0.1.0	
# ::edge	special	domain	piece	0.0.1	0.0.1.1	
(c / cause-01 
      :ARG0 (f / feel-01 
            :ARG0 (s2 / she) 
            :ARG1 (s / special 
                  :degree (t / too) 
                  :domain (p / piece))) 
      :ARG1 (p2 / promise-01 
            :ARG0 (c2 / child) 
            :ARG1 (a / anything) 
            :mod (a2 / actual)) 
      :op-of (s3 / she))

# ::snt but here we are two years on reflecting on a summer of government disasters while we wait for what promises to be the bloodiest of mrs thatchers many cabinet reshuffles
# ::tok but here we are two years on reflecting on a summer of government disasters while we wait for what promises to be the bloodiest of mrs thatchers many cabinet reshuffles
# ::alignments 28-29|0.0.2.0.1 27-28|0.0.2.0.2.2.0 23-24|0.0.2.0.2.2.1.0+0.0.2.0.2.2.1 19-20|0.0.2.0.2.2 16-17|0.0.2.0.2 15-16|0.0.2.0.2.1 13-14|0.0.2.0.2.0 10-11|0.0.2.0.3 7-8|0.0.2.0 5-6|0.0.2+0.0 4-5|0.0.1 2-3|0.0.2.0.0 1-2|0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:34.013
# ::node	0	contrast-01	0-1
# ::node	0.0	temporal-quantity	5-6
# ::node	0.0.0	here	1-2
# ::node	0.0.1	2	4-5
# ::node	0.0.2	year	5-6
# ::node	0.0.2.0	reflect-01	7-8
# ::node	0.0.2.0.0	we	2-3
# ::node	0.0.2.0.1	cabinet	28-29
# ::node	0.0.2.0.2	wait-01	16-17
# ::node	0.0.2.0.2.0	disaster	13-14
# ::node	0.0.2.0.2.1	we	15-16
# ::node	0.0.2.0.2.2	promise-01	19-20
# ::node	0.0.2.0.2.2.0	many	27-28
# ::node	0.0.2.0.2.2.1	bloody	23-24
# ::node	0.0.2.0.2.2.1.0	most	23-24
# ::node	0.0.2.0.3	summer	10-11
# ::root	0	contrast-01
# ::edge	bloody	degree	most	0.0.2.0.2.2.1	0.0.2.0.2.2.1.0	
# ::edge	contrast-01	ARG2	temporal-quantity	0	0.0	
# ::edge	promise-01	ARG0	many	0.0.2.0.2.2	0.0.2.0.2.2.0	
# ::edge	promise-01	ARG1	bloody	0.0.2.0.2.2	0.0.2.0.2.2.1	
# ::edge	reflect-01	ARG0	we	0.0.2.0	0.0.2.0.0	
# ::edge	reflect-01	ARG1	cabinet	0.0.2.0	0.0.2.0.1	
# ::edge	reflect-01	time	summer	0.0.2.0	0.0.2.0.3	
# ::edge	reflect-01	time	wait-01	0.0.2.0	0.0.2.0.2	
# ::edge	temporal-quantity	location	here	0.0	0.0.0	
# ::edge	temporal-quantity	quant	2	0.0	0.0.1	
# ::edge	temporal-quantity	unit	year	0.0	0.0.2	
# ::edge	wait-01	ARG0	disaster	0.0.2.0.2	0.0.2.0.2.0	
# ::edge	wait-01	ARG1	we	0.0.2.0.2	0.0.2.0.2.1	
# ::edge	wait-01	ARG2	promise-01	0.0.2.0.2	0.0.2.0.2.2	
# ::edge	year	purpose	reflect-01	0.0.2	0.0.2.0	
(c2 / contrast-01 
      :ARG2 (t / temporal-quantity 
            :location (h / here) 
            :quant 2 
            :unit (y / year 
                  :purpose (r / reflect-01 
                        :ARG0 (w3 / we) 
                        :ARG1 (c / cabinet) 
                        :time (w / wait-01 
                              :ARG0 (d / disaster) 
                              :ARG1 (w2 / we) 
                              :ARG2 (p / promise-01 
                                    :ARG0 (m / many) 
                                    :ARG1 (b / bloody 
                                          :degree (m2 / most)))) 
                        :time (s / summer)))))

# ::snt specialised materials which tootal promised would be an engine of growth has yet to prove its worth though continued heavy investment could be blamed for a 40 per cent fall in profits
# ::tok specialised materials which tootal promised would be an engine of growth has yet to prove its worth though continued heavy investment could be blamed for a 40 per cent fall in profits
# ::alignments 31-32|0.1.0.1.1 28-29|0.1.0.1.0.1.0+0.1.0.1.0.1 26-27|0.0 23-24|0.1.0.1 21-22|0.1.0.1.2 20-21|0.1.0.1.0 19-20|0.1.0.1.0.0 18-19|0.1.0.1.1.0.0 16-17|0.1.0.0 14-15|0.1.0 12-13|0.1.0.2 10-11|0.1.0.1.1.0 8-9|0.1.0.1.1.0.1 4-5|0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:34.281
# ::node	0	promise-01	4-5
# ::node	0.0	40	26-27
# ::node	0.1	material	1-2
# ::node	0.1.0	prove-01	14-15
# ::node	0.1.0.0	worth	16-17
# ::node	0.1.0.1	blame-01	23-24
# ::node	0.1.0.1.0	invest-01	20-21
# ::node	0.1.0.1.0.0	heavy	19-20
# ::node	0.1.0.1.0.1	monetary-quantity	28-29
# ::node	0.1.0.1.0.1.0	cent	28-29
# ::node	0.1.0.1.1	profit-01	31-32
# ::node	0.1.0.1.1.0	grow-01	10-11
# ::node	0.1.0.1.1.0.0	continue-01	18-19
# ::node	0.1.0.1.1.0.1	engine	8-9
# ::node	0.1.0.1.2	possible	21-22
# ::node	0.1.0.2	yet	12-13
# ::root	0	promise-01
# ::edge	blame-01	ARG1	invest-01	0.1.0.1	0.1.0.1.0	
# ::edge	blame-01	ARG2	profit-01	0.1.0.1	0.1.0.1.1	
# ::edge	continue-01	ARG1	grow-01	0.1.0.1.1.0.0	0.1.0.1.1.0	
# ::edge	engine	topic	grow-01	0.1.0.1.1.0.1	0.1.0.1.1.0	
# ::edge	grow-01	ARG1	profit-01	0.1.0.1.1.0	0.1.0.1.1	
# ::edge	invest-01	ARG0	heavy	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	invest-01	ARG1	monetary-quantity	0.1.0.1.0	0.1.0.1.0.1	
# ::edge	monetary-quantity	unit	cent	0.1.0.1.0.1	0.1.0.1.0.1.0	
# ::edge	possible	domain	blame-01	0.1.0.1.2	0.1.0.1	
# ::edge	promise-01	ARG0	40	0	0.0	
# ::edge	promise-01	ARG1	material	0	0.1	
# ::edge	prove-01	ARG0	material	0.1.0	0.1	
# ::edge	prove-01	ARG1	worth	0.1.0	0.1.0.0	
# ::edge	prove-01	condition	blame-01	0.1.0	0.1.0.1	
# ::edge	prove-01	time	yet	0.1.0	0.1.0.2	
(p4 / promise-01 
      :ARG0 40 
      :ARG1 (m2 / material 
            :ARG0-of (p3 / prove-01 
                  :ARG1 (w / worth) 
                  :condition (b / blame-01 
                        :ARG1 (i / invest-01 
                              :ARG0 (h / heavy) 
                              :ARG1 (m / monetary-quantity 
                                    :unit (c / cent))) 
                        :ARG2 (p / profit-01 
                              :ARG1-of (g / grow-01 
                                    :ARG1-of (c2 / continue-01) 
                                    :topic-of (e / engine))) 
                        :domain-of (p2 / possible)) 
                  :time (y / yet))))

# ::snt   he confirmed that a party control commission would investigate allegations of corruption and abuse of office against deposed members of the old guard and promised free elections which would send our best people into parliament but remained vague as to precisely how free the elections would be
# ::tok he confirmed that a party control commission would investigate allegations of corruption and abuse of office against deposed members of the old guard and promised free elections which would send our best people into parliament but remained vague as to precisely how free the elections would be
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:34.282
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt he should be offered the choice of political asylum in the vatican on condition that he promises forthwith to enter a monastic order as a novice monk spending the rest of his life in abstinence and penitence or he should be allowed to walk out of the papal nuncios residence in panama whenever he wishes
# ::tok he should be offered the choice of political asylum in the vatican on condition that he promises forthwith to enter a monastic order as a novice monk spending the rest of his life in abstinence and penitence or he should be allowed to walk out of the papal nuncios residence in panama whenever he wishes
# ::alignments 54-55|0.1.1.0.1.0 53-54|0.1.1.0.1 52-53|0.1.1.0.3 49-50|0.1.1.0.2 43-44|0.1.1.0 41-42|0.1.1 39-40|0.1 38-39|0.1.1.0.0 37-38|0.1.2 35-36|0 34-35|0.1.2.0 32-33|0.0.1.0 29-30|0.0.1 27-28|0.0 25-26|0.0.0 19-20|0.1.0.0.1 16-17|0.1.0.0 15-16|0.1.0 13-14|0.1.0.1.1.0 8-9|0.1.0.0.0 7-8|0.1.0.0.0.0 3-4|0.1.0.1 1-2|0.1.0.1.1 0-1|0.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:35.365
# ::node	0	and	35-36
# ::node	0.0	spend-01	27-28
# ::node	0.0.0	novice	25-26
# ::node	0.0.1	rest	29-30
# ::node	0.0.1.0	life	32-33
# ::node	0.1	recommend-01	39-40
# ::node	0.1.0	he	15-16
# ::node	0.1.0.0	promise-01	16-17
# ::node	0.1.0.0.0	asylum	8-9
# ::node	0.1.0.0.0.0	politics	7-8
# ::node	0.1.0.0.1	enter-01	19-20
# ::node	0.1.0.1	offer-01	3-4
# ::node	0.1.0.1.0	he	0-1
# ::node	0.1.0.1.1	recommend-01	1-2
# ::node	0.1.0.1.1.0	condition	13-14
# ::node	0.1.1	allow-01	41-42
# ::node	0.1.1.0	walk-01	43-44
# ::node	0.1.1.0.0	he	38-39
# ::node	0.1.1.0.1	he	53-54
# ::node	0.1.1.0.1.0	wish-01	54-55
# ::node	0.1.1.0.2	reside-01	49-50
# ::node	0.1.1.0.3	whenever	52-53
# ::node	0.1.2	or	37-38
# ::node	0.1.2.0	abstain-01	34-35
# ::root	0	and
# ::edge	allow-01	ARG1	walk-01	0.1.1	0.1.1.0	
# ::edge	and	op1	recommend-01	0	0.1	
# ::edge	asylum	mod	politics	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	life	part	rest	0.0.1.0	0.0.1	
# ::edge	offer-01	ARG0	he	0.1.0.1	0.1.0	
# ::edge	offer-01	ARG1	he	0.1.0.1	0.1.0.1.0	
# ::edge	or	op1	abstain-01	0.1.2	0.1.2.0	
# ::edge	or	op2	recommend-01	0.1.2	0.1	
# ::edge	promise-01	ARG0	he	0.1.0.0	0.1.0	
# ::edge	promise-01	ARG1	asylum	0.1.0.0	0.1.0.0.0	
# ::edge	promise-01	ARG2	enter-01	0.1.0.0	0.1.0.0.1	
# ::edge	recommend-01	ARG0	he	0.1	0.1.0	
# ::edge	recommend-01	ARG1	allow-01	0.1	0.1.1	
# ::edge	recommend-01	ARG1	offer-01	0.1.0.1.1	0.1.0.1	
# ::edge	recommend-01	location	condition	0.1.0.1.1	0.1.0.1.1.0	
# ::edge	spend-01	ARG1	novice	0.0	0.0.0	
# ::edge	spend-01	ARG2	and	0.0	0	
# ::edge	spend-01	ARG3	rest	0.0	0.0.1	
# ::edge	walk-01	ARG0	he	0.1.1.0	0.1.1.0.0	
# ::edge	walk-01	ARG1	he	0.1.1.0	0.1.1.0.1	
# ::edge	walk-01	ARG2	reside-01	0.1.1.0	0.1.1.0.2	
# ::edge	walk-01	frequency	whenever	0.1.1.0	0.1.1.0.3	
# ::edge	wish-01	ARG0	he	0.1.1.0.1.0	0.1.1.0.1	
(a2 / and 
      :ARG2-of (s / spend-01 
            :ARG1 (n / novice) 
            :ARG3 (r3 / rest 
                  :part-of (l / life))) 
      :op1 (r2 / recommend-01 
            :ARG0 (h3 / he 
                  :ARG0-of (p / promise-01 
                        :ARG1 (a4 / asylum 
                              :mod (p2 / politics)) 
                        :ARG2 (e / enter-01)) 
                  :ARG0-of (o2 / offer-01 
                        :ARG1 (h4 / he) 
                        :ARG1-of (r4 / recommend-01 
                              :location (c / condition)))) 
            :ARG1 (a / allow-01 
                  :ARG1 (w3 / walk-01 
                        :ARG0 (h2 / he) 
                        :ARG1 (h / he 
                              :ARG0-of (w / wish-01)) 
                        :ARG2 (r / reside-01) 
                        :frequency (w2 / whenever))) 
            :op-of (o / or 
                  :op1 (a3 / abstain-01))))

# ::snt he lounged over on the studio lot to deliver the not very perspicacious remark that he was glad to have heard khrushchev promise the russians would surpass the americans because competition was a capitalist idea
# ::tok he lounged over on the studio lot to deliver the not very perspicacious remark that he was glad to have heard khrushchev promise the russians would surpass the americans because competition was a capitalist idea
# ::alignments 34-35|0.1.1 33-34|0.1.1.0 30-31|0.1 29-30|0 28-29|0.0.0.0.0.0+0.0.0.0.0+0.0.0.0+0.0.0 26-27|0.0 22-23|0.0.1 20-21|0.0.1.0 17-18|0.0.1.0.0.0 15-16|0.0.1.0.0 13-14|0.0.1.0.0.0.0.0.0 11-12|0.1.0 8-9|0.0.1.0.0.0.0 6-7|0.0.1.0.0.0.0.1 0-1|0.0.1.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:36.103
# ::node	0	cause-01	29-30
# ::node	0.0	surpass-01	26-27
# ::node	0.0.0	person	28-29
# ::node	0.0.0.0	country	28-29
# ::node	0.0.0.0.0	name	28-29
# ::node	0.0.0.0.0.0	"America"	28-29
# ::node	0.0.1	promise-01	22-23
# ::node	0.0.1.0	hear-01	20-21
# ::node	0.0.1.0.0	he	15-16
# ::node	0.0.1.0.0.0	glad	17-18
# ::node	0.0.1.0.0.0.0	deliver-01	8-9
# ::node	0.0.1.0.0.0.0.0	he	0-1
# ::node	0.0.1.0.0.0.0.0.0	remark-01	13-14
# ::node	0.0.1.0.0.0.0.1	lot	6-7
# ::node	0.1	compete-01	30-31
# ::node	0.1.0	very	11-12
# ::node	0.1.1	idea	34-35
# ::node	0.1.1.0	capitalist	33-34
# ::root	0	cause-01
# ::edge	cause-01	ARG1	surpass-01	0	0.0	
# ::edge	cause-01	time	compete-01	0	0.1	
# ::edge	compete-01	ARG1	very	0.1	0.1.0	
# ::edge	country	name	name	0.0.0.0	0.0.0.0.0	
# ::edge	deliver-01	ARG0	he	0.0.1.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	deliver-01	ARG1	glad	0.0.1.0.0.0.0	0.0.1.0.0.0	
# ::edge	glad	domain	he	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	hear-01	ARG0	he	0.0.1.0	0.0.1.0.0	
# ::edge	hear-01	ARG1	promise-01	0.0.1.0	0.0.1	
# ::edge	idea	domain	compete-01	0.1.1	0.1	
# ::edge	idea	mod	capitalist	0.1.1	0.1.1.0	
# ::edge	lot	purpose	deliver-01	0.0.1.0.0.0.0.1	0.0.1.0.0.0.0	
# ::edge	name	op1	"America"	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	person	mod	country	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	surpass-01	0.0.1	0.0	
# ::edge	remark-01	ARG1	he	0.0.1.0.0.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	surpass-01	ARG1	person	0.0	0.0.0	
(c3 / cause-01 
      :ARG1 (s / surpass-01 
            :ARG1 (p / person 
                  :mod (c4 / country 
                        :name (n / name 
                              :op1 "America"))) 
            :ARG1-of (p2 / promise-01 
                  :ARG1-of (h / hear-01 
                        :ARG0 (h2 / he 
                              :domain-of (g / glad 
                                    :ARG1-of (d / deliver-01 
                                          :ARG0 (h3 / he 
                                                :ARG1-of (r / remark-01)) 
                                          :purpose-of (l / lot))))))) 
      :time (c2 / compete-01 
            :ARG1 (v / very) 
            :domain-of (i / idea 
                  :mod (c / capitalist))))

# ::snt british gas yesterday claimed the issues are very complex but promised to agree changes by september
# ::tok british gas yesterday claimed the issues are very complex but promised to agree changes by september
# ::alignments 15-16|0.1.2.1.0+0.1.2.1 13-14|0.1.2.0 12-13|0.1.2 10-11|0.1 9-10|0 8-9|0.0 7-8|0.0.1 5-6|0.1.0 3-4|0.0.0 2-3|0.0.0.0 1-2|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:36.199
# ::node	0	contrast-01	9-10
# ::node	0.0	complex	8-9
# ::node	0.0.0	claim-01	3-4
# ::node	0.0.0.0	yesterday	2-3
# ::node	0.0.1	very	7-8
# ::node	0.1	promise-01	10-11
# ::node	0.1.0	issue	5-6
# ::node	0.1.1	gas	1-2
# ::node	0.1.2	agree-01	12-13
# ::node	0.1.2.0	change-01	13-14
# ::node	0.1.2.1	date-entity	15-16
# ::node	0.1.2.1.0	9	15-16
# ::root	0	contrast-01
# ::edge	agree-01	ARG1	change-01	0.1.2	0.1.2.0	
# ::edge	agree-01	time	date-entity	0.1.2	0.1.2.1	
# ::edge	claim-01	ARG1	complex	0.0.0	0.0	
# ::edge	claim-01	time	yesterday	0.0.0	0.0.0.0	
# ::edge	complex	degree	very	0.0	0.0.1	
# ::edge	contrast-01	ARG1	complex	0	0.0	
# ::edge	contrast-01	ARG2	promise-01	0	0.1	
# ::edge	date-entity	month	9	0.1.2.1	0.1.2.1.0	
# ::edge	promise-01	ARG0	issue	0.1	0.1.0	
# ::edge	promise-01	ARG1	gas	0.1	0.1.1	
# ::edge	promise-01	ARG2	agree-01	0.1	0.1.2	
(c2 / contrast-01 
      :ARG1 (c3 / complex 
            :ARG1-of (c4 / claim-01 
                  :time (y / yesterday)) 
            :degree (v / very)) 
      :ARG2 (p / promise-01 
            :ARG0 (i / issue) 
            :ARG1 (g / gas) 
            :ARG2 (a / agree-01 
                  :ARG1 (c / change-01) 
                  :time (d / date-entity 
                        :month 9))))

# ::snt however employers have promised to improve their 5
# ::tok however employers have promised to improve their 5
# ::alignments 7-8|0.0.0 5-6|0.0 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:36.209
# ::node	0	promise-01	3-4
# ::node	0.0	improve-01	5-6
# ::node	0.0.0	5	7-8
# ::root	0	promise-01
# ::edge	improve-01	ARG1	5	0.0	0.0.0	
# ::edge	promise-01	ARG2	improve-01	0	0.0	
(p / promise-01 
      :ARG2 (i / improve-01 
            :ARG1 5))

# ::snt referring to the declarations made by margaret thatcher at the last ec summit in spain he added im sure thats why the united kingdom promised in madrid last june to join when inflation starts going down
# ::tok referring to the declarations made by margaret thatcher at the last ec summit in spain he added im sure thats why the united kingdom promised in madrid last june to join when inflation starts going down
# ::alignments 35-36|0.1.0.1.2.1 33-34|0.1.0.1.2 32-33|0.1.0.1.2.0 30-31|0.1.0 28-29|0.1.0.1.3.1+0.1.0.1.3 27-28|0.1.0.1.3.0 24-25|0.1.0.1 22-24|0.1.0.1.0.0.0+0.1.0.1.0.0.1+0.1.0.1.0.0+0.1.0.1.0 19-20|0.1.0.1.1.0.0 16-17|0.1.0.1.1.0 15-16|0.1.0.1.1 12-13|0.0 10-11|0.1.0.0 6-8|0.1.1.0+0.1.1.1+0.1.1+0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:36.725
# ::node	0	refer-01	0-1
# ::node	0.0	summit	12-13
# ::node	0.1	person	6-8
# ::node	0.1.0	join-01	30-31
# ::node	0.1.0.0	last	10-11
# ::node	0.1.0.1	promise-01	24-25
# ::node	0.1.0.1.0	country	22-24
# ::node	0.1.0.1.0.0	name	22-24
# ::node	0.1.0.1.0.0.0	"kingdom"	22-24
# ::node	0.1.0.1.0.0.1	"united"	22-24
# ::node	0.1.0.1.1	he	15-16
# ::node	0.1.0.1.1.0	add-01	16-17
# ::node	0.1.0.1.1.0.0	that	19-20
# ::node	0.1.0.1.2	start-01	33-34
# ::node	0.1.0.1.2.0	inflation	32-33
# ::node	0.1.0.1.2.1	down	35-36
# ::node	0.1.0.1.3	date-entity	28-29
# ::node	0.1.0.1.3.0	last	27-28
# ::node	0.1.0.1.3.1	6	28-29
# ::node	0.1.1	name	6-8
# ::node	0.1.1.0	"thatcher"	6-8
# ::node	0.1.1.1	"margaret"	6-8
# ::root	0	refer-01
# ::edge	add-01	ARG0	he	0.1.0.1.1.0	0.1.0.1.1	
# ::edge	add-01	ARG1	that	0.1.0.1.1.0	0.1.0.1.1.0.0	
# ::edge	country	name	name	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	date-entity	mod	last	0.1.0.1.3	0.1.0.1.3.0	
# ::edge	date-entity	month	6	0.1.0.1.3	0.1.0.1.3.1	
# ::edge	join-01	ARG0	person	0.1.0	0.1	
# ::edge	join-01	ARG1	last	0.1.0	0.1.0.0	
# ::edge	name	op1	"kingdom"	0.1.0.1.0.0	0.1.0.1.0.0.0	
# ::edge	name	op1	"thatcher"	0.1.1	0.1.1.0	
# ::edge	name	op2	"margaret"	0.1.1	0.1.1.1	
# ::edge	name	op2	"united"	0.1.0.1.0.0	0.1.0.1.0.0.1	
# ::edge	person	name	name	0.1	0.1.1	
# ::edge	promise-01	ARG0	country	0.1.0.1	0.1.0.1.0	
# ::edge	promise-01	ARG1	he	0.1.0.1	0.1.0.1.1	
# ::edge	promise-01	ARG2	join-01	0.1.0.1	0.1.0	
# ::edge	promise-01	condition	start-01	0.1.0.1	0.1.0.1.2	
# ::edge	promise-01	time	date-entity	0.1.0.1	0.1.0.1.3	
# ::edge	refer-01	ARG0	summit	0	0.0	
# ::edge	refer-01	ARG1	person	0	0.1	
# ::edge	start-01	ARG0	inflation	0.1.0.1.2	0.1.0.1.2.0	
# ::edge	start-01	ARG1	down	0.1.0.1.2	0.1.0.1.2.1	
(r / refer-01 
      :ARG0 (s2 / summit) 
      :ARG1 (p2 / person 
            :ARG0-of (j / join-01 
                  :ARG1 (l2 / last) 
                  :ARG2-of (p / promise-01 
                        :ARG0 (c / country 
                              :name (n / name 
                                    :op1 "kingdom" 
                                    :op2 "united")) 
                        :ARG1 (h / he 
                              :ARG0-of (a / add-01 
                                    :ARG1 (t / that))) 
                        :condition (s / start-01 
                              :ARG0 (i / inflation) 
                              :ARG1 (d / down)) 
                        :time (d2 / date-entity 
                              :mod (l / last) 
                              :month 6))) 
            :name (n2 / name 
                  :op1 "thatcher" 
                  :op2 "margaret")))

# ::snt she did not actually promise him she would drop her inquiry her words were too vague for that but she did encourage him to hope she had been warned off
# ::tok she did not actually promise him she would drop her inquiry her words were too vague for that but she did encourage him to hope she had been warned off
# ::alignments 29-30|0.1.0.0.0.1 28-29|0.1.0.0.0 25-26|0.1.0.0.0.0 24-25|0.1.0.0 21-22|0.1 19-20|0.1.0 18-19|0 15-16|0.0 14-15|0.0.0 12-13|0.0.1 10-11|0.1.1 8-9|0.1.1.0 6-7|0.1.1.0.0 4-5|0.1.1.0.0.0 3-4|0.1.1.0.0.0.1 0-1|0.1.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:37.090
# ::node	0	contrast-01	18-19
# ::node	0.0	vague	15-16
# ::node	0.0.0	too	14-15
# ::node	0.0.1	word	12-13
# ::node	0.1	encourage-01	21-22
# ::node	0.1.0	she	19-20
# ::node	0.1.0.0	hope-01	24-25
# ::node	0.1.0.0.0	warn-01	28-29
# ::node	0.1.0.0.0.0	she	25-26
# ::node	0.1.0.0.0.1	off	29-30
# ::node	0.1.1	inquire-01	10-11
# ::node	0.1.1.0	drop-01	8-9
# ::node	0.1.1.0.0	she	6-7
# ::node	0.1.1.0.0.0	promise-01	4-5
# ::node	0.1.1.0.0.0.0	she	0-1
# ::node	0.1.1.0.0.0.1	actual	3-4
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	vague	0	0.0	
# ::edge	contrast-01	ARG2	encourage-01	0	0.1	
# ::edge	drop-01	ARG0	she	0.1.1.0	0.1.1.0.0	
# ::edge	drop-01	ARG1	inquire-01	0.1.1.0	0.1.1	
# ::edge	encourage-01	ARG0	she	0.1	0.1.0	
# ::edge	encourage-01	ARG1	inquire-01	0.1	0.1.1	
# ::edge	hope-01	ARG0	she	0.1.0.0	0.1.0	
# ::edge	hope-01	ARG1	warn-01	0.1.0.0	0.1.0.0.0	
# ::edge	promise-01	ARG0	she	0.1.1.0.0.0	0.1.1.0.0.0.0	
# ::edge	promise-01	ARG1	she	0.1.1.0.0.0	0.1.1.0.0	
# ::edge	promise-01	mod	actual	0.1.1.0.0.0	0.1.1.0.0.0.1	
# ::edge	vague	degree	too	0.0	0.0.0	
# ::edge	vague	domain	word	0.0	0.0.1	
# ::edge	warn-01	ARG1	she	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	warn-01	direction	off	0.1.0.0.0	0.1.0.0.0.1	
(c / contrast-01 
      :ARG1 (v / vague 
            :degree (t / too) 
            :domain (w2 / word)) 
      :ARG2 (e / encourage-01 
            :ARG0 (s2 / she 
                  :ARG0-of (h / hope-01 
                        :ARG1 (w / warn-01 
                              :ARG1 (s / she) 
                              :direction (o / off)))) 
            :ARG1 (i / inquire-01 
                  :ARG1-of (d / drop-01 
                        :ARG0 (s3 / she 
                              :ARG1-of (p / promise-01 
                                    :ARG0 (s4 / she) 
                                    :mod (a / actual)))))))

# ::snt now 3com which has battled to sell os2 lan manager has promised 3open conection for netware
# ::tok now 3com which has battled to sell os2 lan manager has promised 3open conection for netware
# ::alignments 11-12|0 9-10|0.0 6-7|0.0.0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:37.109
# ::node	0	promise-01	11-12
# ::node	0.0	manage-01	9-10
# ::node	0.0.0	sell-01	6-7
# ::node	0.1	now	0-1
# ::root	0	promise-01
# ::edge	promise-01	ARG0	manage-01	0	0.0	
# ::edge	promise-01	ARG1	now	0	0.1	
# ::edge	sell-01	ARG1	manage-01	0.0.0	0.0	
(p / promise-01 
      :ARG0 (m / manage-01 
            :ARG1-of (s / sell-01)) 
      :ARG1 (n / now))

# ::snt  he said that to her every night she went up behind pet and every night she promised she wouldnt
# ::tok he said that to her every night she went up behind pet and every night she promised she wouldnt
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:37.110
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt i promise you
# ::tok i promise you
# ::alignments 2-3|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:37.116
# ::node	0	promise-01	1-2
# ::node	0.0	i	0-1
# ::node	0.1	you	2-3
# ::root	0	promise-01
# ::edge	promise-01	ARG0	i	0	0.0	
# ::edge	promise-01	ARG1	you	0	0.1	
(p / promise-01 
      :ARG0 (i / i) 
      :ARG1 (y / you))

# ::snt with the teams lying first and third respectively in division 1 the game promised much although they had to contend with a strong and difficult wind
# ::tok with the teams lying first and third respectively in division 1 the game promised much although they had to contend with a strong and difficult wind
# ::alignments 25-26|0.3.0 24-25|0.3 23-24|0 22-23|0.2 19-20|0.0 16-17|0.0.0 14-15|0.0.0.0.1 13-14|0.0.0.0 12-13|0.0.0.0.0 10-11|0.0.1 9-10|0.1.0.1 7-8|0.1.0.2 5-6|0.1 3-4|0.1.0 2-3|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:37.761
# ::node	0	and	23-24
# ::node	0.0	contend-01	19-20
# ::node	0.0.0	they	16-17
# ::node	0.0.0.0	promise-01	13-14
# ::node	0.0.0.0.0	game	12-13
# ::node	0.0.0.0.1	much	14-15
# ::node	0.0.1	1	10-11
# ::node	0.1	and	5-6
# ::node	0.1.0	lie-01	3-4
# ::node	0.1.0.0	team	2-3
# ::node	0.1.0.1	division	9-10
# ::node	0.1.0.2	respective	7-8
# ::node	0.2	strong	22-23
# ::node	0.3	difficult	24-25
# ::node	0.3.0	wind	25-26
# ::root	0	and
# ::edge	and	op1	and	0	0.1	
# ::edge	and	op1	lie-01	0.1	0.1.0	
# ::edge	and	op2	strong	0	0.2	
# ::edge	and	op3	difficult	0	0.3	
# ::edge	contend-01	ARG0	they	0.0	0.0.0	
# ::edge	contend-01	ARG1	and	0.0	0	
# ::edge	contend-01	ARG2	1	0.0	0.0.1	
# ::edge	lie-01	ARG1	team	0.1.0	0.1.0.0	
# ::edge	lie-01	ARG2	division	0.1.0	0.1.0.1	
# ::edge	lie-01	mod	respective	0.1.0	0.1.0.2	
# ::edge	promise-01	ARG0	they	0.0.0.0	0.0.0	
# ::edge	promise-01	ARG1	game	0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	concession	much	0.0.0.0	0.0.0.0.1	
# ::edge	wind	mod	difficult	0.3.0	0.3	
(a / and 
      :ARG1-of (c / contend-01 
            :ARG0 (t / they 
                  :ARG0-of (p / promise-01 
                        :ARG1 (g / game) 
                        :concession (m / much))) 
            :ARG2 1) 
      :op1 (a2 / and 
            :op1 (l / lie-01 
                  :ARG1 (t2 / team) 
                  :ARG2 (d2 / division) 
                  :mod (r / respective))) 
      :op2 (s / strong) 
      :op3 (d / difficult 
            :mod-of (w / wind)))

# ::snt a 12line three sentence denial of the charges made by the tabloid new york post failed to satisfy mr rathers critics who had been promised a pointbypoint rebuttal of the accusations
# ::tok a 12line three sentence denial of the charges made by the tabloid new york post failed to satisfy mr rathers critics who had been promised a pointbypoint rebuttal of the accusations
# ::alignments 30-31|0 27-28|0.0 24-25|0.0.0 20-21|0.0.0.0 17-18|0.0.0.0.0 15-16|0.0.0.0.0.0 14-15|0.0.0.0.0.0.0 12-13|0.0.0.0.0.0.0.0 11-12|0.0.0.0.0.0.0.1 3-4|0.0.0.1 2-3|0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:37.851
# ::node	0	accuse-01	30-31
# ::node	0.0	rebuttal	27-28
# ::node	0.0.0	promise-01	24-25
# ::node	0.0.0.0	critic	20-21
# ::node	0.0.0.0.0	satisfy-01	17-18
# ::node	0.0.0.0.0.0	fail-01	15-16
# ::node	0.0.0.0.0.0.0	post	14-15
# ::node	0.0.0.0.0.0.0.0	new	12-13
# ::node	0.0.0.0.0.0.0.1	tabloid	11-12
# ::node	0.0.0.1	sentence-01	3-4
# ::node	0.0.0.1.0	3	2-3
# ::root	0	accuse-01
(a / accuse-01 
      :topic-of (r / rebuttal 
            :ARG1-of (p / promise-01 
                  :ARG0 (c / critic 
                        :ARG1-of (s / satisfy-01 
                              :ARG2-of (f / fail-01 
                                    :ARG1 (p2 / post 
                                          :mod (n / new) 
                                          :mod (t / tabloid))))) 
                  :ARG1-of (s2 / sentence-01 
                        :quant 3))))

# ::snt even though this meant weaselingout of previous pledges to put a representative elected government into hong kong before 1997 and even though peking itself had promised a hong kong run by hong kong people
# ::tok even though this meant weaselingout of previous pledges to put a representative elected government into hong kong before 1997 and even though peking itself had promised a hong kong run by hong kong people
# ::alignments 31-33|0.2.1.0.0.0+0.2.1.0.0.1+0.2.1.0.0+0.2.1.0 27-29|0.2.1.1.0.0+0.2.1.1.0.1+0.2.1.1.0+0.2.1.1 25-26|0.2.1 19-20|0.2 18-19|0.2.0.0.1.0.0+0.2.0.0.1.0 17-18|0.2.0.0.1 15-17|0.2.0.0.0.0+0.2.0.0.0.1+0.2.0.0.0+0.2.0.0 12-13|0.2.1.2 11-12|0.2.0 7-8|0.1 6-7|0.1.0 3-4|0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:38.100
# ::node	0	mean-01	3-4
# ::node	0.0	this	2-3
# ::node	0.1	pledge-01	7-8
# ::node	0.1.0	previous	6-7
# ::node	0.2	and	19-20
# ::node	0.2.0	represent-01	11-12
# ::node	0.2.0.0	country	15-17
# ::node	0.2.0.0.0	name	15-17
# ::node	0.2.0.0.0.0	"kong"	15-17
# ::node	0.2.0.0.0.1	"hong"	15-17
# ::node	0.2.0.0.1	before	17-18
# ::node	0.2.0.0.1.0	date-entity	18-19
# ::node	0.2.0.0.1.0.0	1997	18-19
# ::node	0.2.1	promise-01	25-26
# ::node	0.2.1.0	country	31-33
# ::node	0.2.1.0.0	name	31-33
# ::node	0.2.1.0.0.0	"kong"	31-33
# ::node	0.2.1.0.0.1	"hong"	31-33
# ::node	0.2.1.1	country	27-29
# ::node	0.2.1.1.0	name	27-29
# ::node	0.2.1.1.0.0	"kong"	27-29
# ::node	0.2.1.1.0.1	"hong"	27-29
# ::node	0.2.1.2	elect-01	12-13
# ::root	0	mean-01
# ::edge	and	op1	mean-01	0.2	0	
# ::edge	and	op2	promise-01	0.2	0.2.1	
# ::edge	before	op1	date-entity	0.2.0.0.1	0.2.0.0.1.0	
# ::edge	country	name	name	0.2.0.0	0.2.0.0.0	
# ::edge	country	name	name	0.2.1.0	0.2.1.0.0	
# ::edge	country	name	name	0.2.1.1	0.2.1.1.0	
# ::edge	country	time	before	0.2.0.0	0.2.0.0.1	
# ::edge	date-entity	year	1997	0.2.0.0.1.0	0.2.0.0.1.0.0	
# ::edge	elect-01	ARG2	promise-01	0.2.1.2	0.2.1	
# ::edge	mean-01	ARG0	this	0	0.0	
# ::edge	mean-01	ARG1	pledge-01	0	0.1	
# ::edge	name	op1	"kong"	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	name	op1	"kong"	0.2.1.0.0	0.2.1.0.0.0	
# ::edge	name	op1	"kong"	0.2.1.1.0	0.2.1.1.0.0	
# ::edge	name	op2	"hong"	0.2.0.0.0	0.2.0.0.0.1	
# ::edge	name	op2	"hong"	0.2.1.0.0	0.2.1.0.0.1	
# ::edge	name	op2	"hong"	0.2.1.1.0	0.2.1.1.0.1	
# ::edge	pledge-01	time	previous	0.1	0.1.0	
# ::edge	promise-01	ARG0	country	0.2.1	0.2.1.0	
# ::edge	promise-01	ARG2	country	0.2.1	0.2.1.1	
# ::edge	represent-01	ARG0	and	0.2.0	0.2	
# ::edge	represent-01	ARG1	country	0.2.0	0.2.0.0	
(m / mean-01 
      :ARG0 (t / this) 
      :ARG1 (p2 / pledge-01 
            :time (p3 / previous)) 
      :op-of (a / and 
            :ARG0-of (r / represent-01 
                  :ARG1 (c3 / country 
                        :name (n3 / name 
                              :op1 "kong" 
                              :op2 "hong") 
                        :time (b / before 
                              :op1 (d / date-entity 
                                    :year 1997)))) 
            :op1 (p / promise-01 
                  :ARG0 (c / country 
                        :name (n / name 
                              :op1 "kong" 
                              :op2 "hong")) 
                  :ARG2 (c2 / country 
                        :name (n2 / name 
                              :op1 "kong" 
                              :op2 "hong")) 
                  :ARG2-of (e / elect-01))))

# ::snt now that east germany has promised its citizens unrestricted passage and free elections chancellor kohl can only fulfill his promise of substantial aid for the east german economy
# ::tok now that east germany has promised its citizens unrestricted passage and free elections chancellor kohl can only fulfill his promise of substantial aid for the east german economy
# ::alignments 27-28|0.0.1.0.0 25-26|0.0.1.0.0.0 22-23|0.0.1.0 21-22|0.0.1.0.2 19-20|0.0.1 17-18|0.0 16-17|0.0.2 15-16|0 12-13|0.0.0.2 11-12|0.0.0.2.0 10-11|0.0.0 9-10|0.0.0.1 7-8|0.0.0.0.0 5-6|0.0.0.0 2-3|0.0.1.0.1 0-1|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:38.438
# ::node	0	possible	15-16
# ::node	0.0	fulfill-01	17-18
# ::node	0.0.0	and	10-11
# ::node	0.0.0.0	promise-01	5-6
# ::node	0.0.0.0.0	citizen	7-8
# ::node	0.0.0.0.1	now	0-1
# ::node	0.0.0.1	pass-01	9-10
# ::node	0.0.0.2	elect-01	12-13
# ::node	0.0.0.2.0	free-41	11-12
# ::node	0.0.1	promise-01	19-20
# ::node	0.0.1.0	aid-01	22-23
# ::node	0.0.1.0.0	economy	27-28
# ::node	0.0.1.0.0.0	east	25-26
# ::node	0.0.1.0.1	east	2-3
# ::node	0.0.1.0.2	substantial	21-22
# ::node	0.0.2	only	16-17
# ::root	0	possible
# ::edge	aid-01	ARG0	economy	0.0.1.0	0.0.1.0.0	
# ::edge	aid-01	ARG1	east	0.0.1.0	0.0.1.0.1	
# ::edge	aid-01	mod	substantial	0.0.1.0	0.0.1.0.2	
# ::edge	and	op1	pass-01	0.0.0	0.0.0.1	
# ::edge	and	op2	elect-01	0.0.0	0.0.0.2	
# ::edge	economy	mod	east	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	free-41	ARG1	elect-01	0.0.0.2.0	0.0.0.2	
# ::edge	fulfill-01	ARG0	and	0.0	0.0.0	
# ::edge	fulfill-01	ARG1	promise-01	0.0	0.0.1	
# ::edge	fulfill-01	mod	only	0.0	0.0.2	
# ::edge	possible	domain	fulfill-01	0	0.0	
# ::edge	promise-01	ARG1	aid-01	0.0.1	0.0.1.0	
# ::edge	promise-01	ARG1	citizen	0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	ARG2	and	0.0.0.0	0.0.0	
# ::edge	promise-01	time	now	0.0.0.0	0.0.0.0.1	
(p2 / possible 
      :domain (f / fulfill-01 
            :ARG0 (a2 / and 
                  :ARG2-of (p4 / promise-01 
                        :ARG1 (c / citizen) 
                        :time (n / now)) 
                  :op1 (p3 / pass-01) 
                  :op2 (e3 / elect-01 
                        :ARG1-of (f2 / free-41))) 
            :ARG1 (p / promise-01 
                  :ARG1 (a / aid-01 
                        :ARG0 (e / economy 
                              :mod (e2 / east)) 
                        :ARG1 (e4 / east) 
                        :mod (s / substantial))) 
            :mod (o / only)))

# ::snt similarly while all papers promise not to authorise payments to criminals only three could bring themselves to extend that pledge to their families or associates
# ::tok similarly while all papers promise not to authorise payments to criminals only three could bring themselves to extend that pledge to their families or associates
# ::alignments 23-24|0.0.0 22-23|0.0 19-20|0 17-18|0.1 14-15|0.1.0 13-14|0.1.0.2 12-13|0.1.0.0 11-12|0.1.0.3 10-11|0.1.0.1 8-9|0.1.0.4.1 4-5|0.1.0.4 3-4|0.1.0.4.0 2-3|0.1.0.4.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:38.626
# ::node	0	pledge-01	19-20
# ::node	0.0	family	22-23
# ::node	0.0.0	or	23-24
# ::node	0.1	extend-01	17-18
# ::node	0.1.0	bring-01	14-15
# ::node	0.1.0.0	3	12-13
# ::node	0.1.0.1	criminal	10-11
# ::node	0.1.0.2	possible	13-14
# ::node	0.1.0.3	only	11-12
# ::node	0.1.0.4	promise-01	4-5
# ::node	0.1.0.4.0	paper	3-4
# ::node	0.1.0.4.0.0	all	2-3
# ::node	0.1.0.4.1	payment	8-9
# ::root	0	pledge-01
# ::edge	bring-01	ARG0	3	0.1.0	0.1.0.0	
# ::edge	bring-01	ARG1	criminal	0.1.0	0.1.0.1	
# ::edge	bring-01	ARG2	extend-01	0.1.0	0.1	
# ::edge	bring-01	mod	possible	0.1.0	0.1.0.2	
# ::edge	bring-01	time	only	0.1.0	0.1.0.3	
# ::edge	bring-01	time	promise-01	0.1.0	0.1.0.4	
# ::edge	extend-01	ARG1	pledge-01	0.1	0	
# ::edge	or	op1	family	0.0.0	0.0	
# ::edge	paper	quant	all	0.1.0.4.0	0.1.0.4.0.0	
# ::edge	pledge-01	ARG1	family	0	0.0	
# ::edge	promise-01	ARG0	paper	0.1.0.4	0.1.0.4.0	
# ::edge	promise-01	ARG1	payment	0.1.0.4	0.1.0.4.1	
(p / pledge-01 
      :ARG1 (f / family 
            :op-of (o / or)) 
      :ARG1-of (e / extend-01 
            :ARG2-of (b / bring-01 
                  :ARG0 3 
                  :ARG1 (c / criminal) 
                  :mod (p2 / possible) 
                  :time (o2 / only) 
                  :time (p4 / promise-01 
                        :ARG0 (p5 / paper 
                              :quant (a / all)) 
                        :ARG1 (p3 / payment)))))

# ::snt having run out of money and not wanting to call david to ask for any angie got in touch with an english journalist in london saying she was ready to give her side of the story which led to the sunday mirror promising to send over cash with the reporter and photographer
# ::tok having run out of money and not wanting to call david to ask for any angie got in touch with an english journalist in london saying she was ready to give her side of the story which led to the sunday mirror promising to send over cash with the reporter and photographer
# ::alignments 50-51|0.1.2.0.1.0.0.0.2.0 49-50|0.1.2.0.1.0.0.0.2 46-47|0.1.2.0.1.0.0.0.0 44-45|0.1.2.0.1.0.0.0 42-43|0.1.2.0.1.0.0.0.1 41-42|0.1.2.0.1.0.0 40-41|0.1.2.0.1.0.0.1 37-38|0.1.2.0.1.0 35-36|0.1.2.0.1 32-33|0.1.2.0 30-31|0.1.2 28-29|0.1 26-27|0.1.1 25-26|0 24-25|0.0.1.0.0+0.0.1.0+0.0.1 22-23|0.0 21-22|0.0.2.0.0+0.0.2.0+0.0.2 18-19|0.0.0 14-15|0.1.0 12-13|0.2 7-8|0.1.2.0.0 5-6|0.1.2.0.0.1 4-5|0.1.2.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:39.425
# ::node	0	say-01	25-26
# ::node	0.0	journalist	22-23
# ::node	0.0.0	touch-01	18-19
# ::node	0.0.1	city	24-25
# ::node	0.0.1.0	name	24-25
# ::node	0.0.1.0.0	"London"	24-25
# ::node	0.0.2	language	21-22
# ::node	0.0.2.0	name	21-22
# ::node	0.0.2.0.0	"English"	21-22
# ::node	0.1	ready-01	28-29
# ::node	0.1.0	any	14-15
# ::node	0.1.1	she	26-27
# ::node	0.1.2	give-01	30-31
# ::node	0.1.2.0	side	32-33
# ::node	0.1.2.0.0	want-01	7-8
# ::node	0.1.2.0.0.0	money	4-5
# ::node	0.1.2.0.0.1	and	5-6
# ::node	0.1.2.0.1	story	35-36
# ::node	0.1.2.0.1.0	lead-02	37-38
# ::node	0.1.2.0.1.0.0	mirror	41-42
# ::node	0.1.2.0.1.0.0.0	send-01	44-45
# ::node	0.1.2.0.1.0.0.0.0	cash	46-47
# ::node	0.1.2.0.1.0.0.0.1	promise-01	42-43
# ::node	0.1.2.0.1.0.0.0.2	report-01	49-50
# ::node	0.1.2.0.1.0.0.0.2.0	and	50-51
# ::node	0.1.2.0.1.0.0.1	sunday	40-41
# ::node	0.2	ask-01	12-13
# ::root	0	say-01
# ::edge	and	op1	report-01	0.1.2.0.1.0.0.0.2.0	0.1.2.0.1.0.0.0.2	
# ::edge	and	op1	want-01	0.1.2.0.0.1	0.1.2.0.0	
# ::edge	ask-01	ARG2	say-01	0.2	0	
# ::edge	city	name	name	0.0.1	0.0.1.0	
# ::edge	give-01	ARG1	side	0.1.2	0.1.2.0	
# ::edge	journalist	location	city	0.0	0.0.1	
# ::edge	journalist	mod	language	0.0	0.0.2	
# ::edge	language	name	name	0.0.2	0.0.2.0	
# ::edge	lead-02	ARG0	story	0.1.2.0.1.0	0.1.2.0.1	
# ::edge	lead-02	ARG2	mirror	0.1.2.0.1.0	0.1.2.0.1.0.0	
# ::edge	mirror	mod	sunday	0.1.2.0.1.0.0	0.1.2.0.1.0.0.1	
# ::edge	name	op1	"English"	0.0.2.0	0.0.2.0.0	
# ::edge	name	op1	"London"	0.0.1.0	0.0.1.0.0	
# ::edge	promise-01	ARG2	send-01	0.1.2.0.1.0.0.0.1	0.1.2.0.1.0.0.0	
# ::edge	ready-01	ARG0	any	0.1	0.1.0	
# ::edge	ready-01	ARG1	she	0.1	0.1.1	
# ::edge	ready-01	ARG2	give-01	0.1	0.1.2	
# ::edge	say-01	ARG0	journalist	0	0.0	
# ::edge	say-01	ARG1	ready-01	0	0.1	
# ::edge	send-01	ARG0	mirror	0.1.2.0.1.0.0.0	0.1.2.0.1.0.0	
# ::edge	send-01	ARG1	cash	0.1.2.0.1.0.0.0	0.1.2.0.1.0.0.0.0	
# ::edge	send-01	purpose	report-01	0.1.2.0.1.0.0.0	0.1.2.0.1.0.0.0.2	
# ::edge	side	poss	story	0.1.2.0	0.1.2.0.1	
# ::edge	touch-01	ARG1	journalist	0.0.0	0.0	
# ::edge	want-01	ARG0	side	0.1.2.0.0	0.1.2.0	
# ::edge	want-01	ARG1	money	0.1.2.0.0	0.1.2.0.0.0	
(s6 / say-01 
      :ARG0 (j / journalist 
            :ARG1-of (t / touch-01) 
            :location (c2 / city 
                  :name (n / name 
                        :op1 "London")) 
            :mod (l2 / language 
                  :name (n2 / name 
                        :op1 "English"))) 
      :ARG1 (r2 / ready-01 
            :ARG0 (a2 / any) 
            :ARG1 (s5 / she) 
            :ARG2 (g / give-01 
                  :ARG1 (s4 / side 
                        :ARG0-of (w / want-01 
                              :ARG1 (m2 / money) 
                              :op-of (a4 / and)) 
                        :poss (s3 / story 
                              :ARG0-of (l / lead-02 
                                    :ARG2 (m / mirror 
                                          :ARG0-of (s / send-01 
                                                :ARG1 (c / cash) 
                                                :ARG2-of (p / promise-01) 
                                                :purpose (r / report-01 
                                                      :op-of (a / and))) 
                                          :mod (s2 / sunday))))))) 
      :ARG2-of (a3 / ask-01))

# ::snt offering mad go go dancers orange at choice 25 royal exchange square glasgow is a new night promising a live drag show featuring queen of queens shahbaz
# ::tok offering mad go go dancers orange at choice 25 royal exchange square glasgow is a new night promising a live drag show featuring queen of queens shahbaz
# ::alignments 22-23|0.1 21-22|0 20-21|0.2 19-20|0.3 17-18|0.4 16-17|0.4.0 15-16|0.4.0.0 11-12|0.2.0.0.0 10-11|0.2.0.0 9-10|0.2.0 8-9|0.1.0.1 5-6|0.0.0.0 4-5|0.0.0+0.0 1-2|0.1.0.0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:39.870
# ::node	0	show-01	21-22
# ::node	0.0	person	4-5
# ::node	0.0.0	dance-01	4-5
# ::node	0.0.0.0	orange	5-6
# ::node	0.1	feature-01	22-23
# ::node	0.1.0	offer-01	0-1
# ::node	0.1.0.0	mad	1-2
# ::node	0.1.0.1	25	8-9
# ::node	0.2	drag-01	20-21
# ::node	0.2.0	royal	9-10
# ::node	0.2.0.0	exchange-01	10-11
# ::node	0.2.0.0.0	square	11-12
# ::node	0.3	live-01	19-20
# ::node	0.4	promise-01	17-18
# ::node	0.4.0	night	16-17
# ::node	0.4.0.0	new	15-16
# ::root	0	show-01
# ::edge	dance-01	ARG0	person	0.0.0	0.0	
# ::edge	dance-01	ARG1	orange	0.0.0	0.0.0.0	
# ::edge	drag-01	ARG1	royal	0.2	0.2.0	
# ::edge	exchange-01	ARG0	square	0.2.0.0	0.2.0.0.0	
# ::edge	exchange-01	ARG1	royal	0.2.0.0	0.2.0	
# ::edge	feature-01	ARG0	show-01	0.1	0	
# ::edge	feature-01	ARG1	offer-01	0.1	0.1.0	
# ::edge	live-01	ARG1	show-01	0.3	0	
# ::edge	night	mod	new	0.4.0	0.4.0.0	
# ::edge	offer-01	ARG1	mad	0.1.0	0.1.0.0	
# ::edge	offer-01	time	25	0.1.0	0.1.0.1	
# ::edge	promise-01	ARG1	night	0.4	0.4.0	
# ::edge	promise-01	ARG2	show-01	0.4	0	
# ::edge	show-01	ARG0	person	0	0.0	
# ::edge	show-01	ARG1	drag-01	0	0.2	
(s / show-01 
      :ARG0 (p2 / person 
            :ARG0-of (d2 / dance-01 
                  :ARG1 (o / orange))) 
      :ARG0-of (f / feature-01 
            :ARG1 (o2 / offer-01 
                  :ARG1 (m / mad) 
                  :time 25)) 
      :ARG1 (d / drag-01 
            :ARG1 (r / royal 
                  :ARG1-of (e / exchange-01 
                        :ARG0 (s2 / square)))) 
      :ARG1-of (l / live-01) 
      :ARG2-of (p / promise-01 
            :ARG1 (n / night 
                  :mod (n2 / new))))

# ::snt bia said it was looking for a partner to inject fresh capital and promised further clarification
# ::tok bia said it was looking for a partner to inject fresh capital and promised further clarification
# ::alignments 14-15|0.0.1.1.0.0 13-14|0.0.1.1.0 12-13|0.0.1.1 11-12|0.0.1 10-11|0.0.1.0 7-8|0.0.0 2-3|0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:39.908
# ::node	0	say-01	1-2
# ::node	0.0	it	2-3
# ::node	0.0.0	partner-01	7-8
# ::node	0.0.1	capital	11-12
# ::node	0.0.1.0	fresh	10-11
# ::node	0.0.1.1	and	12-13
# ::node	0.0.1.1.0	promise-01	13-14
# ::node	0.0.1.1.0.0	further	14-15
# ::root	0	say-01
# ::edge	and	op1	capital	0.0.1.1	0.0.1	
# ::edge	and	op2	promise-01	0.0.1.1	0.0.1.1.0	
# ::edge	capital	mod	fresh	0.0.1	0.0.1.0	
# ::edge	capital	poss	it	0.0.1	0.0	
# ::edge	partner-01	ARG1	it	0.0.0	0.0	
# ::edge	promise-01	ARG1	further	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	say-01	ARG0	it	0	0.0	
(s / say-01 
      :ARG0 (i / it 
            :ARG1-of (p2 / partner-01) 
            :poss-of (c / capital 
                  :mod (f2 / fresh) 
                  :op-of (a / and 
                        :op1 (p / promise-01 
                              :ARG1 (f / further))))))

# ::snt in the same message he promised to end his assassination campaign against plo officials which began with the killing of the london representative said hammami in 1978
# ::tok in the same message he promised to end his assassination campaign against plo officials which began with the killing of the london representative said hammami in 1978
# ::alignments 26-27|0.2.0+0.2 23-24|0 22-23|0.0.0 21-22|0.0.0.0.0.0+0.0.0.0.0+0.0.0.0 18-19|0.0 15-16|0.1 13-14|0.1.0.0.1.0+0.1.0.0.1 10-11|0.1.0 9-10|0.1.0.0.2 5-6|0.1.0.0.0 4-5|0.1.0.0 3-4|0.1.0.0.0.0 2-3|0.1.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:40.017
# ::node	0	say-01	23-24
# ::node	0.0	kill-01	18-19
# ::node	0.0.0	represent-01	22-23
# ::node	0.0.0.0	city	21-22
# ::node	0.0.0.0.0	name	21-22
# ::node	0.0.0.0.0.0	"London"	21-22
# ::node	0.1	begin-01	15-16
# ::node	0.1.0	campaign-01	10-11
# ::node	0.1.0.0	he	4-5
# ::node	0.1.0.0.0	promise-01	5-6
# ::node	0.1.0.0.0.0	message	3-4
# ::node	0.1.0.0.0.0.0	same-41	2-3
# ::node	0.1.0.0.1	have-org-role-91	13-14
# ::node	0.1.0.0.1.0	official	13-14
# ::node	0.1.0.0.2	assassinate-01	9-10
# ::node	0.2	date-entity	26-27
# ::node	0.2.0	1978	26-27
# ::root	0	say-01
# ::edge	assassinate-01	ARG1	he	0.1.0.0.2	0.1.0.0	
# ::edge	begin-01	ARG1	campaign-01	0.1	0.1.0	
# ::edge	begin-01	condition	say-01	0.1	0	
# ::edge	campaign-01	ARG0	he	0.1.0	0.1.0.0	
# ::edge	city	name	name	0.0.0.0	0.0.0.0.0	
# ::edge	date-entity	year	1978	0.2	0.2.0	
# ::edge	have-org-role-91	ARG1	he	0.1.0.0.1	0.1.0.0	
# ::edge	have-org-role-91	ARG2	official	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	kill-01	ARG1	represent-01	0.0	0.0.0	
# ::edge	name	op1	"London"	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	promise-01	ARG0	he	0.1.0.0.0	0.1.0.0	
# ::edge	promise-01	ARG1	message	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	represent-01	ARG1	city	0.0.0	0.0.0.0	
# ::edge	same-41	ARG1	message	0.1.0.0.0.0.0	0.1.0.0.0.0	
# ::edge	say-01	ARG0	kill-01	0	0.0	
# ::edge	say-01	time	date-entity	0	0.2	
(s / say-01 
      :ARG0 (k / kill-01 
            :ARG1 (r / represent-01 
                  :ARG1 (c / city 
                        :name (n / name 
                              :op1 "London")))) 
      :condition-of (b / begin-01 
            :ARG1 (c2 / campaign-01 
                  :ARG0 (h2 / he 
                        :ARG0-of (p / promise-01 
                              :ARG1 (m / message 
                                    :ARG1-of (s2 / same-41))) 
                        :ARG1-of (h / have-org-role-91 
                              :ARG2 (o / official)) 
                        :ARG1-of (a / assassinate-01)))) 
      :time (d / date-entity 
            :year 1978))

# ::snt democratic officials believe that president bush sliding on other conservative issues such as nicaragua star wars soviet relations and gun control feels he must deliver on his reaganesque campaign promise to cut capital gains taxes
# ::tok democratic officials believe that president bush sliding on other conservative issues such as nicaragua star wars soviet relations and gun control feels he must deliver on his reaganesque campaign promise to cut capital gains taxes
# ::alignments 34-35|0.2.0.0.0 32-33|0.2.0.0.0.2 29-30|0.2.0.0.0.1 28-29|0.2.0.0 24-25|0.2 22-23|0.2.0 20-21|0.1 19-20|0.1.0 18-19|0 17-18|0.0 15-16|0.2.1 14-15|0.2.1.1 11-12|0.2.1.0 10-11|0.2.0.0.0.1.0.0 9-10|0.2.0.0.0.1.0.0.0 8-9|0.2.0.0.0.1.0 5-6|0.2.0.0.0.0 4-5|0.2.0.0.0.0.0.0+0.2.0.0.0.0.0 2-3|0.2.0.0.0.1.1 1-2|0.2.0.1.0+0.2.0.1 0-1|0.2.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:40.427
# ::node	0	and	18-19
# ::node	0.0	relation	17-18
# ::node	0.1	control-01	20-21
# ::node	0.1.0	gun	19-20
# ::node	0.2	deliver-01	24-25
# ::node	0.2.0	he	22-23
# ::node	0.2.0.0	campaign-01	28-29
# ::node	0.2.0.0.0	tax-01	34-35
# ::node	0.2.0.0.0.0	bush-league	5-6
# ::node	0.2.0.0.0.0.0	have-org-role-91	4-5
# ::node	0.2.0.0.0.0.0.0	president	4-5
# ::node	0.2.0.0.0.1	promise-01	29-30
# ::node	0.2.0.0.0.1.0	other	8-9
# ::node	0.2.0.0.0.1.0.0	issue	10-11
# ::node	0.2.0.0.0.1.0.0.0	conservative	9-10
# ::node	0.2.0.0.0.1.1	believe-01	2-3
# ::node	0.2.0.0.0.2	capital	32-33
# ::node	0.2.0.1	have-org-role-91	1-2
# ::node	0.2.0.1.0	official	1-2
# ::node	0.2.0.1.0.0	democracy	0-1
# ::node	0.2.1	war-01	15-16
# ::node	0.2.1.0	such	11-12
# ::node	0.2.1.1	star	14-15
# ::root	0	and
# ::edge	and	op1	relation	0	0.0	
# ::edge	and	op2	control-01	0	0.1	
# ::edge	and	op3	deliver-01	0	0.2	
# ::edge	believe-01	ARG1	promise-01	0.2.0.0.0.1.1	0.2.0.0.0.1	
# ::edge	campaign-01	ARG0	he	0.2.0.0	0.2.0	
# ::edge	campaign-01	ARG1	tax-01	0.2.0.0	0.2.0.0.0	
# ::edge	control-01	ARG1	gun	0.1	0.1.0	
# ::edge	deliver-01	ARG0	he	0.2	0.2.0	
# ::edge	deliver-01	ARG1	war-01	0.2	0.2.1	
# ::edge	have-org-role-91	ARG0	bush-league	0.2.0.0.0.0.0	0.2.0.0.0.0	
# ::edge	have-org-role-91	ARG0	he	0.2.0.1	0.2.0	
# ::edge	have-org-role-91	ARG2	official	0.2.0.1	0.2.0.1.0	
# ::edge	have-org-role-91	ARG2	president	0.2.0.0.0.0.0	0.2.0.0.0.0.0.0	
# ::edge	issue	mod	conservative	0.2.0.0.0.1.0.0	0.2.0.0.0.1.0.0.0	
# ::edge	issue	mod	other	0.2.0.0.0.1.0.0	0.2.0.0.0.1.0	
# ::edge	official	mod	democracy	0.2.0.1.0	0.2.0.1.0.0	
# ::edge	promise-01	ARG0	other	0.2.0.0.0.1	0.2.0.0.0.1.0	
# ::edge	promise-01	ARG1	tax-01	0.2.0.0.0.1	0.2.0.0.0	
# ::edge	tax-01	ARG0	bush-league	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	tax-01	ARG3	capital	0.2.0.0.0	0.2.0.0.0.2	
# ::edge	war-01	ARG0	such	0.2.1	0.2.1.0	
# ::edge	war-01	ARG1	star	0.2.1	0.2.1.1	
(a / and 
      :op1 (r / relation) 
      :op2 (c3 / control-01 
            :ARG1 (g / gun)) 
      :op3 (d / deliver-01 
            :ARG0 (h / he 
                  :ARG0-of (c2 / campaign-01 
                        :ARG1 (t / tax-01 
                              :ARG0 (b / bush-league 
                                    :ARG0-of (h2 / have-org-role-91 
                                          :ARG2 (p2 / president))) 
                              :ARG1-of (p / promise-01 
                                    :ARG0 (o / other 
                                          :mod-of (i / issue 
                                                :mod (c4 / conservative))) 
                                    :ARG1-of (b2 / believe-01)) 
                              :ARG3 (c / capital))) 
                  :ARG0-of (h3 / have-org-role-91 
                        :ARG2 (o2 / official 
                              :mod (d2 / democracy)))) 
            :ARG1 (w / war-01 
                  :ARG0 (s2 / such) 
                  :ARG1 (s / star))))

# ::snt his mission had been planned two years ago when he worked well with stablemate balthus the 1987 cambridgeshire winner and glover promises he has something else in the yard to continue the trend in two years
# ::tok his mission had been planned two years ago when he worked well with stablemate balthus the 1987 cambridgeshire winner and glover promises he has something else in the yard to continue the trend in two years
# ::alignments 35-36|0.0.0.0.0.0.1.2.1+0.0.0.0.0.0.1.2 34-35|0.0.0.0.0.0.1.2.0 32-33|0.0.0.0.0.0.1 30-31|0.0.0.0.0.0 28-29|0.0.0.0.0.0.0 25-26|0.0.0.0.0 24-25|0.0.0.0 22-23|0.0.0 21-22|0.0 19-20|0 16-17|0.0.0.0.0.0.1.0.0+0.0.0.0.0.0.1.0 11-12|0.0.0.0.0.0.1.1.1 10-11|0.0.0.0.0.0.1.1 9-10|0.0.0.0.0.0.1.1.0 6-7|0.0.0.0.0.0.2.1+0.0.0.0.0.0.2 5-6|0.0.0.0.0.0.2.0 4-5|0.0.0.0.0.0.1.1.0.0 1-2|0.0.0.0.0.0.1.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:41.235
# ::node	0	and	19-20
# ::node	0.0	promise-01	21-22
# ::node	0.0.0	he	22-23
# ::node	0.0.0.0	something	24-25
# ::node	0.0.0.0.0	else	25-26
# ::node	0.0.0.0.0.0	continue-01	30-31
# ::node	0.0.0.0.0.0.0	yard	28-29
# ::node	0.0.0.0.0.0.1	trend-01	32-33
# ::node	0.0.0.0.0.0.1.0	date-entity	16-17
# ::node	0.0.0.0.0.0.1.0.0	1987	16-17
# ::node	0.0.0.0.0.0.1.1	work-01	10-11
# ::node	0.0.0.0.0.0.1.1.0	he	9-10
# ::node	0.0.0.0.0.0.1.1.0.0	plan-01	4-5
# ::node	0.0.0.0.0.0.1.1.0.0.0	mission	1-2
# ::node	0.0.0.0.0.0.1.1.1	well	11-12
# ::node	0.0.0.0.0.0.1.2	temporal-quantity	35-36
# ::node	0.0.0.0.0.0.1.2.0	2	34-35
# ::node	0.0.0.0.0.0.1.2.1	year	35-36
# ::node	0.0.0.0.0.0.2	temporal-quantity	6-7
# ::node	0.0.0.0.0.0.2.0	2	5-6
# ::node	0.0.0.0.0.0.2.1	year	6-7
# ::root	0	and
(a / and 
      :ARG1-of (p / promise-01 
            :ARG0 (h / he 
                  :poss-of (s / something 
                        :mod (e / else 
                              :purpose (c / continue-01 
                                    :ARG0 (y2 / yard) 
                                    :ARG1 (t2 / trend-01 
                                          :ARG0 (d / date-entity 
                                                :year 1987) 
                                          :ARG1 (w2 / work-01 
                                                :ARG0 (h2 / he 
                                                      :ARG0-of (p2 / plan-01 
                                                            :ARG1 (m / mission))) 
                                                :ARG1 (w / well)) 
                                          :ARG2 (t / temporal-quantity 
                                                :quant 2 
                                                :unit (y / year))) 
                                    :op-of (t3 / temporal-quantity 
                                          :quant 2 
                                          :unit (y3 / year))))))))

# ::snt they had to promise him that if there was trouble again they would give him every help to stay in dublin or to go to london
# ::tok they had to promise him that if there was trouble again they would give him every help to stay in dublin or to go to london
# ::alignments 25-26|0.0.1.0.0+0.0.1.0+0.0.1 21-22|0 18-19|0.0 16-17|0.0.0.0.0 15-16|0.0.0.0.0.0 13-14|0.0.0.0 11-12|0.0.0 10-11|0.0.0.0.2.0 9-10|0.0.0.0.2 3-4|0.0.0.0.1 0-1|0.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:41.301
# ::node	0	or	21-22
# ::node	0.0	stay-01	18-19
# ::node	0.0.0	they	11-12
# ::node	0.0.0.0	give-01	13-14
# ::node	0.0.0.0.0	help-01	16-17
# ::node	0.0.0.0.0.0	every	15-16
# ::node	0.0.0.0.1	promise-01	3-4
# ::node	0.0.0.0.1.0	they	0-1
# ::node	0.0.0.0.2	trouble-01	9-10
# ::node	0.0.0.0.2.0	again	10-11
# ::node	0.0.1	city	25-26
# ::node	0.0.1.0	name	25-26
# ::node	0.0.1.0.0	"London"	25-26
# ::root	0	or
# ::edge	city	name	name	0.0.1	0.0.1.0	
# ::edge	give-01	ARG0	they	0.0.0.0	0.0.0	
# ::edge	give-01	ARG1	help-01	0.0.0.0	0.0.0.0.0	
# ::edge	give-01	condition	trouble-01	0.0.0.0	0.0.0.0.2	
# ::edge	help-01	mod	every	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	name	op1	"London"	0.0.1.0	0.0.1.0.0	
# ::edge	or	op1	stay-01	0	0.0	
# ::edge	promise-01	ARG0	they	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	promise-01	ARG1	give-01	0.0.0.0.1	0.0.0.0	
# ::edge	stay-01	ARG0	they	0.0	0.0.0	
# ::edge	stay-01	ARG1	city	0.0	0.0.1	
# ::edge	trouble-01	mod	again	0.0.0.0.2	0.0.0.0.2.0	
(o / or 
      :op1 (s / stay-01 
            :ARG0 (t / they 
                  :ARG0-of (g / give-01 
                        :ARG1 (h / help-01 
                              :mod (e / every)) 
                        :ARG1-of (p / promise-01 
                              :ARG0 (t3 / they)) 
                        :condition (t2 / trouble-01 
                              :mod (a / again)))) 
            :ARG1 (c / city 
                  :name (n / name 
                        :op1 "London"))))

# ::snt   she promised greater control over the recruitment and retention of staff and the provision of services for patients
# ::tok she promised greater control over the recruitment and retention of staff and the provision of services for patients
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:41.302
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt a donation has been promised from the robert daniel memorial fund and the way in which this will be spent will be discussed at the next committee meeting
# ::tok a donation has been promised from the robert daniel memorial fund and the way in which this will be spent will be discussed at the next committee meeting
# ::alignments 27-28|0.1.0.0.0 26-27|0.1.0.0.0.0 25-26|0.1.0.0.0.1 22-23|0.1.0.0 19-20|0.0 16-17|0.0.0 13-14|0.3 11-12|0 10-11|0.2 9-10|0.2.0 4-5|0.1 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:41.461
# ::node	0	and	11-12
# ::node	0.0	spend-01	19-20
# ::node	0.0.0	this	16-17
# ::node	0.1	promise-01	4-5
# ::node	0.1.0	donate-01	1-2
# ::node	0.1.0.0	discuss-01	22-23
# ::node	0.1.0.0.0	meet-03	27-28
# ::node	0.1.0.0.0.0	committee	26-27
# ::node	0.1.0.0.0.1	next	25-26
# ::node	0.2	fund-01	10-11
# ::node	0.2.0	memorial	9-10
# ::node	0.3	way	13-14
# ::root	0	and
# ::edge	and	op1	fund-01	0	0.2	
# ::edge	and	op2	way	0	0.3	
# ::edge	discuss-01	ARG1	donate-01	0.1.0.0	0.1.0	
# ::edge	discuss-01	time	meet-03	0.1.0.0	0.1.0.0.0	
# ::edge	fund-01	ARG1	memorial	0.2	0.2.0	
# ::edge	meet-03	ARG0	committee	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	meet-03	mod	next	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	promise-01	ARG1	donate-01	0.1	0.1.0	
# ::edge	promise-01	ARG2	and	0.1	0	
# ::edge	spend-01	ARG0	and	0.0	0	
# ::edge	spend-01	ARG1	this	0.0	0.0.0	
(a / and 
      :ARG0-of (s / spend-01 
            :ARG1 (t / this)) 
      :ARG2-of (p / promise-01 
            :ARG1 (d2 / donate-01 
                  :ARG1-of (d / discuss-01 
                        :time (m / meet-03 
                              :ARG0 (c / committee) 
                              :mod (n / next))))) 
      :op1 (f / fund-01 
            :ARG1 (m2 / memorial)) 
      :op2 (w / way))

# ::snt president gorbachev promised better maternity and infant care and an improved lifestyle for women in the soviet union
# ::tok president gorbachev promised better maternity and infant care and an improved lifestyle for women in the soviet union
# ::alignments 17-18|0.2.1.0 13-14|0.2.1 11-12|0.0.0 10-11|0.0.0.0 8-9|0.0 7-8|0.2.0 6-7|0.2.0.0 5-6|0.2 2-3|0 0-1|0.1.0+0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:41.572
# ::node	0	promise-01	2-3
# ::node	0.0	and	8-9
# ::node	0.0.0	lifestyle	11-12
# ::node	0.0.0.0	improve-01	10-11
# ::node	0.1	have-org-role-91	0-1
# ::node	0.1.0	president	0-1
# ::node	0.2	and	5-6
# ::node	0.2.0	care-01	7-8
# ::node	0.2.0.0	infant	6-7
# ::node	0.2.1	woman	13-14
# ::node	0.2.1.0	union	17-18
# ::root	0	promise-01
# ::edge	and	op1	lifestyle	0.0	0.0.0	
# ::edge	and	op1	promise-01	0.2	0	
# ::edge	and	op2	care-01	0.2	0.2.0	
# ::edge	and	op3	woman	0.2	0.2.1	
# ::edge	care-01	ARG1	infant	0.2.0	0.2.0.0	
# ::edge	have-org-role-91	ARG1	promise-01	0.1	0	
# ::edge	have-org-role-91	ARG2	president	0.1	0.1.0	
# ::edge	improve-01	ARG1	lifestyle	0.0.0.0	0.0.0	
# ::edge	promise-01	ARG1	and	0	0.0	
# ::edge	woman	poss	union	0.2.1	0.2.1.0	
(p / promise-01 
      :ARG1 (a / and 
            :op1 (l / lifestyle 
                  :ARG1-of (i / improve-01))) 
      :ARG1-of (h / have-org-role-91 
            :ARG2 (p2 / president)) 
      :op-of (a2 / and 
            :op1 (c / care-01 
                  :ARG1 (i2 / infant)) 
            :op2 (w / woman 
                  :poss (u / union))))

# ::snt smith promises his crew are suitably fired up to prevent a hattrick
# ::tok smith promises his crew are suitably fired up to prevent a hattrick
# ::alignments 9-10|0.0.2 6-7|0.0 5-6|0.0.1 3-4|0.0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:41.589
# ::node	0	promise-01	1-2
# ::node	0.0	fire-01	6-7
# ::node	0.0.0	crew	3-4
# ::node	0.0.1	suit-01	5-6
# ::node	0.0.2	prevent-01	9-10
# ::root	0	promise-01
# ::edge	fire-01	ARG1	crew	0.0	0.0.0	
# ::edge	fire-01	purpose	prevent-01	0.0	0.0.2	
# ::edge	promise-01	ARG1	fire-01	0	0.0	
# ::edge	suit-01	ARG1	fire-01	0.0.1	0.0	
(p2 / promise-01 
      :ARG1 (f / fire-01 
            :ARG1 (c / crew) 
            :ARG1-of (s / suit-01) 
            :purpose (p / prevent-01)))

# ::snt mr attali promised to hand copies of the toes final declaration to the g7 leaders dash
# ::tok mr attali promised to hand copies of the toes final declaration to the g7 leaders dash
# ::alignments 14-15|0.0.1.0.0+0.0.1.0 10-11|0.0.1 9-10|0.0.1.2 8-9|0.0.1.1 5-6|0.0 4-5|0.0.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:41.662
# ::node	0	promise-01	2-3
# ::node	0.0	copy-01	5-6
# ::node	0.0.0	hand	4-5
# ::node	0.0.1	declare-02	10-11
# ::node	0.0.1.0	person	14-15
# ::node	0.0.1.0.0	lead-02	14-15
# ::node	0.0.1.1	toe-01	8-9
# ::node	0.0.1.2	final	9-10
# ::root	0	promise-01
# ::edge	copy-01	ARG0	hand	0.0	0.0.0	
# ::edge	copy-01	ARG1	declare-02	0.0	0.0.1	
# ::edge	declare-02	ARG1	person	0.0.1	0.0.1.0	
# ::edge	declare-02	mod	final	0.0.1	0.0.1.2	
# ::edge	lead-02	ARG0	person	0.0.1.0.0	0.0.1.0	
# ::edge	promise-01	ARG1	copy-01	0	0.0	
# ::edge	toe-01	ARG1	declare-02	0.0.1.1	0.0.1	
(p2 / promise-01 
      :ARG1 (c / copy-01 
            :ARG0 (h / hand) 
            :ARG1 (d / declare-02 
                  :ARG1 (p / person 
                        :ARG0-of (l / lead-02)) 
                  :ARG1-of (t / toe-01) 
                  :mod (f / final))))

# ::snt as we now enter the new decade of the nineties which promises such a different world for us all he enters a personal decade which is certain to include some of the hardest changes and the most memorable pleasures of his life
# ::tok as we now enter the new decade of the nineties which promises such a different world for us all he enters a personal decade which is certain to include some of the hardest changes and the most memorable pleasures of his life
# ::alignments 41-42|0.1.0 36-37|0.0.0.0.0.0.0.1.0.0 34-35|0 33-34|0.1 32-33|0.1.1.0+0.1.1 29-30|0.0.1 28-29|0.0 26-27|0.0.2 23-24|0.0.0.0+0.0.0 22-23|0.0.0.0.1 20-21|0.0.0.0.0 19-20|0.0.0.0.0.0 18-19|0.0.0.0.0.0.0.0.0.0.0.0 15-16|0.0.0.0.0.0.0.1 14-15|0.0.0.0.0.0.0.1.0 12-13|0.0.0.0.0.0.0.1.0.1 11-12|0.0.0.0.0.0.0 6-7|0.0.0.0.0.0.0.0.0.0+0.0.0.0.0.0.0.0.0.0.1 5-6|0.0.0.0.0.0.0.0.0.0.0 3-4|0.0.0.0.0.0.0.0.0 2-3|0.0.0.0.0.0.0.0.0.1 1-2|0.0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:42.306
# ::node	0	and	34-35
# ::node	0.0	include-01	28-29
# ::node	0.0.0	temporal-quantity	23-24
# ::node	0.0.0.0	decade	23-24
# ::node	0.0.0.0.0	enter-01	20-21
# ::node	0.0.0.0.0.0	he	19-20
# ::node	0.0.0.0.0.0.0	promise-01	11-12
# ::node	0.0.0.0.0.0.0.0	we	1-2
# ::node	0.0.0.0.0.0.0.0.0	enter-01	3-4
# ::node	0.0.0.0.0.0.0.0.0.0	decade	6-7
# ::node	0.0.0.0.0.0.0.0.0.0.0	new	5-6
# ::node	0.0.0.0.0.0.0.0.0.0.0.0	all	18-19
# ::node	0.0.0.0.0.0.0.0.0.0.1	temporal-quantity	6-7
# ::node	0.0.0.0.0.0.0.0.0.1	now	2-3
# ::node	0.0.0.0.0.0.0.1	world	15-16
# ::node	0.0.0.0.0.0.0.1.0	differ-02	14-15
# ::node	0.0.0.0.0.0.0.1.0.0	most	36-37
# ::node	0.0.0.0.0.0.0.1.0.1	such	12-13
# ::node	0.0.0.0.1	personal	22-23
# ::node	0.0.1	some	29-30
# ::node	0.0.2	certain	26-27
# ::node	0.1	change-01	33-34
# ::node	0.1.0	life	41-42
# ::node	0.1.1	hard	32-33
# ::node	0.1.1.0	most	32-33
# ::root	0	and
# ::edge	all	mod	new	0.0.0.0.0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0.0.0	
# ::edge	and	op1	include-01	0	0.0	
# ::edge	and	op2	change-01	0	0.1	
# ::edge	certain	domain	include-01	0.0.2	0.0	
# ::edge	change-01	ARG1	life	0.1	0.1.0	
# ::edge	change-01	mod	hard	0.1	0.1.1	
# ::edge	decade	mod	new	0.0.0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0.0.0	
# ::edge	decade	mod	personal	0.0.0.0	0.0.0.0.1	
# ::edge	differ-02	ARG0	most	0.0.0.0.0.0.0.1.0	0.0.0.0.0.0.0.1.0.0	
# ::edge	differ-02	ARG1	world	0.0.0.0.0.0.0.1.0	0.0.0.0.0.0.0.1	
# ::edge	differ-02	degree	such	0.0.0.0.0.0.0.1.0	0.0.0.0.0.0.0.1.0.1	
# ::edge	enter-01	ARG0	he	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	enter-01	ARG0	we	0.0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	enter-01	ARG1	decade	0.0.0.0.0	0.0.0.0	
# ::edge	enter-01	ARG1	decade	0.0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0.0	
# ::edge	enter-01	time	now	0.0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0.1	
# ::edge	hard	degree	most	0.1.1	0.1.1.0	
# ::edge	include-01	ARG0	temporal-quantity	0.0	0.0.0	
# ::edge	include-01	ARG1	some	0.0	0.0.1	
# ::edge	promise-01	ARG0	he	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	promise-01	ARG1	we	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	promise-01	ARG2	world	0.0.0.0.0.0.0	0.0.0.0.0.0.0.1	
# ::edge	temporal-quantity	unit	decade	0.0.0	0.0.0.0	
# ::edge	temporal-quantity	unit	decade	0.0.0.0.0.0.0.0.0.0.1	0.0.0.0.0.0.0.0.0.0	
(a / and 
      :op1 (i / include-01 
            :ARG0 (t / temporal-quantity 
                  :unit (d / decade 
                        :ARG1-of (e / enter-01 
                              :ARG0 (h2 / he 
                                    :ARG0-of (p2 / promise-01 
                                          :ARG1 (w2 / we 
                                                :ARG0-of (e2 / enter-01 
                                                      :ARG1 (d3 / decade 
                                                            :mod (n / new 
                                                                  :mod-of (a2 / all)) 
                                                            :unit-of (t2 / temporal-quantity)) 
                                                      :time (n2 / now))) 
                                          :ARG2 (w / world 
                                                :ARG1-of (d2 / differ-02 
                                                      :ARG0 (m / most) 
                                                      :degree (s2 / such)))))) 
                        :mod (p / personal))) 
            :ARG1 (s / some) 
            :domain-of (c2 / certain)) 
      :op2 (c / change-01 
            :ARG1 (l / life) 
            :mod (h / hard 
                  :degree (m2 / most))))

# ::snt but what if it is taken together with the alleged allusion to democracy at argos  during the great scene in which the danaids supplicate the argive king pelasgus the king warns them that he cannot promise them support without the consent of the whole citizen body 3689
# ::tok but what if it is taken together with the alleged allusion to democracy at argos during the great scene in which the danaids supplicate the argive king pelasgus the king warns them that he cannot promise them support without the consent of the whole citizen body 3689
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:42.307
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt   but roger smith director of the legal action group said the bill promises more than it actually delivers
# ::tok but roger smith director of the legal action group said the bill promises more than it actually delivers
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:42.309
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt a few months ago mrs thatcher promised us that no one would ever want to go private again
# ::tok a few months ago mrs thatcher promised us that no one would ever want to go private again
# ::alignments 17-18|0.1.0.0 16-17|0.1.0 13-14|0.1 12-13|0.1.2 9-10|0.1.1 6-7|0 2-3|0.0.1+0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:42.441
# ::node	0	promise-01	6-7
# ::node	0.0	temporal-quantity	2-3
# ::node	0.0.0	few	1-2
# ::node	0.0.1	month	2-3
# ::node	0.1	want-01	13-14
# ::node	0.1.0	private	16-17
# ::node	0.1.0.0	again	17-18
# ::node	0.1.1	-	9-10
# ::node	0.1.2	ever	12-13
# ::root	0	promise-01
# ::edge	again	degree	private	0.1.0.0	0.1.0	
# ::edge	few	op1	temporal-quantity	0.0.0	0.0	
# ::edge	promise-01	ARG0	temporal-quantity	0	0.0	
# ::edge	promise-01	ARG1	want-01	0	0.1	
# ::edge	temporal-quantity	unit	month	0.0	0.0.1	
# ::edge	want-01	ARG1	private	0.1	0.1.0	
# ::edge	want-01	polarity	-	0.1	0.1.1	
# ::edge	want-01	time	ever	0.1	0.1.2	
(p2 / promise-01 
      :ARG0 (t / temporal-quantity 
            :op-of (f / few) 
            :unit (m / month)) 
      :ARG1 (w / want-01 
            :ARG1 (p / private 
                  :degree-of (a / again)) 
            :polarity (- / -) 
            :time (e / ever)))

# ::snt the weekends solent points races promise a closefought admirals cup
# ::tok the weekends solent points races promise a closefought admirals cup
# ::alignments 9-10|0.0.1 5-6|0.0 4-5|0.0.0 3-4|0 1-2|0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:42.496
# ::node	0	point	3-4
# ::node	0.0	promise-01	5-6
# ::node	0.0.0	race	4-5
# ::node	0.0.1	cup	9-10
# ::node	0.0.2	weekend	1-2
# ::root	0	point
# ::edge	point	purpose	promise-01	0	0.0	
# ::edge	promise-01	ARG0	race	0.0	0.0.0	
# ::edge	promise-01	ARG1	cup	0.0	0.0.1	
# ::edge	promise-01	time	weekend	0.0	0.0.2	
(p2 / point 
      :purpose (p / promise-01 
            :ARG0 (r / race) 
            :ARG1 (c / cup) 
            :time (w / weekend)))

# ::snt mr bob morgan promised to call a meeting in may or june
# ::tok mr bob morgan promised to call a meeting in may or june
# ::alignments 11-12|0.0.0.1.0+0.0.0.1 10-11|0.0.0 9-10|0.0.0.0.0+0.0.0.0 7-8|0.0 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:42.518
# ::node	0	promise-01	3-4
# ::node	0.0	meet-03	7-8
# ::node	0.0.0	or	10-11
# ::node	0.0.0.0	date-entity	9-10
# ::node	0.0.0.0.0	5	9-10
# ::node	0.0.0.1	date-entity	11-12
# ::node	0.0.0.1.0	6	11-12
# ::root	0	promise-01
# ::edge	date-entity	month	5	0.0.0.0	0.0.0.0.0	
# ::edge	date-entity	month	6	0.0.0.1	0.0.0.1.0	
# ::edge	meet-03	ARG0	or	0.0	0.0.0	
# ::edge	or	op1	date-entity	0.0.0	0.0.0.0	
# ::edge	or	op2	date-entity	0.0.0	0.0.0.1	
# ::edge	promise-01	ARG1	meet-03	0	0.0	
(p / promise-01 
      :ARG1 (m / meet-03 
            :ARG0 (o / or 
                  :op1 (d2 / date-entity 
                        :month 5) 
                  :op2 (d / date-entity 
                        :month 6))))

# ::snt for instance 2000 plants that promise to be valuable in treating cancer come from the rainforests
# ::tok for instance 2000 plants that promise to be valuable in treating cancer come from the rainforests
# ::alignments 11-12|0.0.1 10-11|0.0 8-9|0 5-6|0.1 3-4|0.1.0 2-3|0.0.0.0+0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:42.579
# ::node	0	value-01	8-9
# ::node	0.0	treat-03	10-11
# ::node	0.0.0	date-entity	2-3
# ::node	0.0.0.0	2000	2-3
# ::node	0.0.1	cancer	11-12
# ::node	0.1	promise-01	5-6
# ::node	0.1.0	plant	3-4
# ::root	0	value-01
# ::edge	date-entity	year	2000	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG0	plant	0.1	0.1.0	
# ::edge	promise-01	ARG1	value-01	0.1	0	
# ::edge	treat-03	ARG0	date-entity	0.0	0.0.0	
# ::edge	treat-03	ARG1	cancer	0.0	0.0.1	
# ::edge	value-01	ARG1	treat-03	0	0.0	
(v / value-01 
      :ARG1 (t / treat-03 
            :ARG0 (d / date-entity 
                  :year 2000) 
            :ARG1 (c / cancer)) 
      :ARG1-of (p / promise-01 
            :ARG0 (p2 / plant)))

# ::snt like everything they touch the pet shop boys tour promises to be orchestrated with an imagination and attention to detail that makes most of their competitors look positively pedestrian
# ::tok like everything they touch the pet shop boys tour promises to be orchestrated with an imagination and attention to detail that makes most of their competitors look positively pedestrian
# ::alignments 28-29|0 27-28|0.1 25-26|0.0.2.1.0 22-23|0.0.2.1.0.0 19-20|0.0.2.1 17-18|0.0.2.0 16-17|0.0.2 12-13|0.0.1 9-10|0.0 8-9|0.0.0 7-8|0.0.0.0 6-7|0.0.0.0.0 5-6|0.0.0.1 3-4|0.0.1.0.0 2-3|0.0.1.0 1-2|0.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:42.795
# ::node	0	pedestrian	28-29
# ::node	0.0	promise-01	9-10
# ::node	0.0.0	tour-01	8-9
# ::node	0.0.0.0	boy	7-8
# ::node	0.0.0.0.0	shop	6-7
# ::node	0.0.0.1	pet	5-6
# ::node	0.0.1	orchestrate-01	12-13
# ::node	0.0.1.0	they	2-3
# ::node	0.0.1.0.0	touch-01	3-4
# ::node	0.0.1.0.0.0	everything	1-2
# ::node	0.0.2	and	16-17
# ::node	0.0.2.0	attention	17-18
# ::node	0.0.2.1	detail-01	19-20
# ::node	0.0.2.1.0	company	25-26
# ::node	0.0.2.1.0.0	most	22-23
# ::node	0.1	positive	27-28
# ::root	0	pedestrian
# ::edge	and	op1	promise-01	0.0.2	0.0	
# ::edge	and	op2	attention	0.0.2	0.0.2.0	
# ::edge	and	op3	detail-01	0.0.2	0.0.2.1	
# ::edge	boy	mod	shop	0.0.0.0	0.0.0.0.0	
# ::edge	company	quant	most	0.0.2.1.0	0.0.2.1.0.0	
# ::edge	detail-01	ARG0	company	0.0.2.1	0.0.2.1.0	
# ::edge	orchestrate-01	ARG0	they	0.0.1	0.0.1.0	
# ::edge	pedestrian	mod	positive	0	0.1	
# ::edge	promise-01	ARG0	tour-01	0.0	0.0.0	
# ::edge	promise-01	ARG1	pedestrian	0.0	0	
# ::edge	promise-01	ARG2	orchestrate-01	0.0	0.0.1	
# ::edge	touch-01	ARG0	they	0.0.1.0.0	0.0.1.0	
# ::edge	touch-01	ARG1	everything	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	tour-01	ARG0	boy	0.0.0	0.0.0.0	
# ::edge	tour-01	ARG1	pet	0.0.0	0.0.0.1	
(p / pedestrian 
      :ARG1-of (p3 / promise-01 
            :ARG0 (t / tour-01 
                  :ARG0 (b / boy 
                        :mod (s / shop)) 
                  :ARG1 (p4 / pet)) 
            :ARG2 (o / orchestrate-01 
                  :ARG0 (t3 / they 
                        :ARG0-of (t2 / touch-01 
                              :ARG1 (e / everything)))) 
            :op-of (a2 / and 
                  :op1 (a / attention) 
                  :op2 (d / detail-01 
                        :ARG0 (c / company 
                              :quant (m / most))))) 
      :mod (p2 / positive))

# ::snt mr lula whose party is committed to declaring an immediate moratorium on brazils dollars 114bn foreign debt has promised to pick a fight of an international scale with our creditors
# ::tok mr lula whose party is committed to declaring an immediate moratorium on brazils dollars 114bn foreign debt has promised to pick a fight of an international scale with our creditors
# ::alignments 26-27|0.0.0.0.0.0.0.0 25-26|0.0.0.0.0.0.0.0.0 22-23|0.0.0.0.0.0.0 20-21|0.0.0.0.0.0 18-19|0.0.0.0.0 16-17|0.0.0.0 15-16|0.0.0.0.1 13-14|0.2.0+0.2 10-11|0 9-10|0.1 7-8|0.0 5-6|0.0.0 3-4|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:43.044
# ::node	0	moratorium	10-11
# ::node	0.0	declare-01	7-8
# ::node	0.0.0	commit-01	5-6
# ::node	0.0.0.0	debt	16-17
# ::node	0.0.0.0.0	promise-01	18-19
# ::node	0.0.0.0.0.0	pick-01	20-21
# ::node	0.0.0.0.0.0.0	fight-01	22-23
# ::node	0.0.0.0.0.0.0.0	scale	26-27
# ::node	0.0.0.0.0.0.0.0.0	international	25-26
# ::node	0.0.0.0.1	foreign	15-16
# ::node	0.0.0.1	party	3-4
# ::node	0.1	immediate	9-10
# ::node	0.2	monetary-quantity	13-14
# ::node	0.2.0	dollar	13-14
# ::root	0	moratorium
# ::edge	commit-01	ARG0	debt	0.0.0	0.0.0.0	
# ::edge	commit-01	ARG1	party	0.0.0	0.0.0.1	
# ::edge	commit-01	ARG2	declare-01	0.0.0	0.0	
# ::edge	debt	mod	foreign	0.0.0.0	0.0.0.0.1	
# ::edge	declare-01	ARG1	moratorium	0.0	0	
# ::edge	fight-01	ARG1	scale	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	monetary-quantity	unit	dollar	0.2	0.2.0	
# ::edge	moratorium	time	immediate	0	0.1	
# ::edge	moratorium	topic	monetary-quantity	0	0.2	
# ::edge	pick-01	ARG1	fight-01	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	promise-01	ARG1	debt	0.0.0.0.0	0.0.0.0	
# ::edge	promise-01	ARG2	pick-01	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	scale	mod	international	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0	
(m2 / moratorium 
      :ARG1-of (d3 / declare-01 
            :ARG2-of (c / commit-01 
                  :ARG0 (d / debt 
                        :ARG1-of (p2 / promise-01 
                              :ARG2 (p / pick-01 
                                    :ARG1 (f / fight-01 
                                          :ARG1 (s / scale 
                                                :mod (i / international))))) 
                        :mod (f2 / foreign)) 
                  :ARG1 (p3 / party))) 
      :time (i2 / immediate) 
      :topic (m / monetary-quantity 
            :unit (d2 / dollar)))

# ::snt in the oresteia produced in 458 agamemnon rules not in mycenae as in homer nor in sparta or amyclae as in the lyric poets but in argos and orestes promises that argos will requite his acquittal by an athenian court by helping athens in time of war
# ::tok in the oresteia produced in 458 agamemnon rules not in mycenae as in homer nor in sparta or amyclae as in the lyric poets but in argos and orestes promises that argos will requite his acquittal by an athenian court by helping athens in time of war
# ::alignments 46-47|0.0.2.0.0.1.0 44-45|0.0.2.0.0.1 41-42|0.0.2.0.0 39-40|0.0.2.0 31-32|0.0.2.1.0.0+0.0.2.1.0+0.0.2.1 29-30|0.0.2 27-28|0.0 26-27|0.0.1.1.0+0.0.1.1+0.0.1 24-25|0 23-24|0.0.0 17-18|0.0.2.0.0.0 7-8|0.0.1.0.0 3-4|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:43.260
# ::node	0	contrast-01	24-25
# ::node	0.0	and	27-28
# ::node	0.0.0	poet	23-24
# ::node	0.0.1	company	26-27
# ::node	0.0.1.0	produce-01	3-4
# ::node	0.0.1.0.0	rule	7-8
# ::node	0.0.1.1	name	26-27
# ::node	0.0.1.1.0	"Argos"	26-27
# ::node	0.0.2	promise-01	29-30
# ::node	0.0.2.0	court	39-40
# ::node	0.0.2.0.0	help-01	41-42
# ::node	0.0.2.0.0.0	or	17-18
# ::node	0.0.2.0.0.1	time	44-45
# ::node	0.0.2.0.0.1.0	war	46-47
# ::node	0.0.2.1	company	31-32
# ::node	0.0.2.1.0	name	31-32
# ::node	0.0.2.1.0.0	"Argos"	31-32
# ::root	0	contrast-01
# ::edge	and	op1	poet	0.0	0.0.0	
# ::edge	and	op2	company	0.0	0.0.1	
# ::edge	and	op3	promise-01	0.0	0.0.2	
# ::edge	company	name	name	0.0.1	0.0.1.1	
# ::edge	company	name	name	0.0.2.1	0.0.2.1.0	
# ::edge	contrast-01	ARG1	and	0	0.0	
# ::edge	court	topic	help-01	0.0.2.0	0.0.2.0.0	
# ::edge	help-01	ARG0	or	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	help-01	ARG1	time	0.0.2.0.0	0.0.2.0.0.1	
# ::edge	name	op1	"Argos"	0.0.1.1	0.0.1.1.0	
# ::edge	name	op1	"Argos"	0.0.2.1.0	0.0.2.1.0.0	
# ::edge	produce-01	ARG0	company	0.0.1.0	0.0.1	
# ::edge	produce-01	ARG1	rule	0.0.1.0	0.0.1.0.0	
# ::edge	promise-01	ARG0	court	0.0.2	0.0.2.0	
# ::edge	promise-01	ARG1	company	0.0.2	0.0.2.1	
# ::edge	time	topic	war	0.0.2.0.0.1	0.0.2.0.0.1.0	
(c4 / contrast-01 
      :ARG1 (a / and 
            :op1 (p2 / poet) 
            :op2 (c3 / company 
                  :ARG0-of (p3 / produce-01 
                        :ARG1 (r / rule)) 
                  :name (n2 / name 
                        :op1 "Argos")) 
            :op3 (p / promise-01 
                  :ARG0 (c / court 
                        :topic (h / help-01 
                              :ARG0 (o / or) 
                              :ARG1 (t / time 
                                    :topic (w / war)))) 
                  :ARG1 (c2 / company 
                        :name (n / name 
                              :op1 "Argos")))))

# ::snt a cabinet reshuffle is expected soon in which she will dump some of her more incompetent ministers but include new ones who have been promised jobs if they deserted the opposition
# ::tok a cabinet reshuffle is expected soon in which she will dump some of her more incompetent ministers but include new ones who have been promised jobs if they deserted the opposition
# ::alignments 30-31|0.1.0.0.1.0.0 28-29|0.1.0.0.1 27-28|0.1.0.0.1.0 25-26|0.1.0.0.0 24-25|0.1.0.0 20-21|0.1.0 19-20|0.1.0.1 18-19|0.1 17-18|0 16-17|0.0.0.0.1+0.0.0.0 15-16|0.0.0.0.1.0 11-12|0.0.1 8-9|0.0.0 5-6|0.0.2 4-5|0.0 1-2|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:43.449
# ::node	0	contrast-01	17-18
# ::node	0.0	expect-01	4-5
# ::node	0.0.0	she	8-9
# ::node	0.0.0.0	have-org-role-91	16-17
# ::node	0.0.0.0.0	cabinet	1-2
# ::node	0.0.0.0.1	minister	16-17
# ::node	0.0.0.0.1.0	incompetence	15-16
# ::node	0.0.1	some	11-12
# ::node	0.0.2	soon	5-6
# ::node	0.1	include-01	18-19
# ::node	0.1.0	one	20-21
# ::node	0.1.0.0	promise-01	24-25
# ::node	0.1.0.0.0	job	25-26
# ::node	0.1.0.0.1	desert-01	28-29
# ::node	0.1.0.0.1.0	they	27-28
# ::node	0.1.0.0.1.0.0	oppose-01	30-31
# ::node	0.1.0.1	new	19-20
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	expect-01	0	0.0	
# ::edge	contrast-01	ARG2	include-01	0	0.1	
# ::edge	desert-01	ARG0	they	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	desert-01	ARG1	promise-01	0.1.0.0.1	0.1.0.0	
# ::edge	expect-01	ARG0	she	0.0	0.0.0	
# ::edge	expect-01	ARG1	some	0.0	0.0.1	
# ::edge	expect-01	time	soon	0.0	0.0.2	
# ::edge	have-org-role-91	ARG0	she	0.0.0.0	0.0.0	
# ::edge	have-org-role-91	ARG1	cabinet	0.0.0.0	0.0.0.0.0	
# ::edge	have-org-role-91	ARG2	minister	0.0.0.0	0.0.0.0.1	
# ::edge	include-01	ARG1	one	0.1	0.1.0	
# ::edge	minister	mod	incompetence	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	one	mod	new	0.1.0	0.1.0.1	
# ::edge	oppose-01	ARG1	they	0.1.0.0.1.0.0	0.1.0.0.1.0	
# ::edge	promise-01	ARG0	one	0.1.0.0	0.1.0	
# ::edge	promise-01	ARG1	job	0.1.0.0	0.1.0.0.0	
(c / contrast-01 
      :ARG1 (e / expect-01 
            :ARG0 (s2 / she 
                  :ARG0-of (h / have-org-role-91 
                        :ARG1 (c2 / cabinet) 
                        :ARG2 (m / minister 
                              :mod (i2 / incompetence)))) 
            :ARG1 (s / some) 
            :time (s3 / soon)) 
      :ARG2 (i / include-01 
            :ARG1 (o2 / one 
                  :ARG0-of (p / promise-01 
                        :ARG1 (j / job) 
                        :ARG1-of (d / desert-01 
                              :ARG0 (t / they 
                                    :ARG1-of (o / oppose-01)))) 
                  :mod (n / new))))

# ::snt people embraced and wept promising to stay in touch only to realise in some cases that they had no addresses to exchange
# ::tok people embraced and wept promising to stay in touch only to realise in some cases that they had no addresses to exchange
# ::alignments 21-22|0.1.1.0.0 19-20|0.1.1.0 18-19|0.1.1 16-17|0.0.0 14-15|0.0 13-14|0.0.1 11-12|0 9-10|0.1.0.1.0 8-9|0.1.0.1 6-7|0.1 4-5|0.1.0 2-3|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:43.537
# ::node	0	realize-01	11-12
# ::node	0.0	case	14-15
# ::node	0.0.0	they	16-17
# ::node	0.0.1	some	13-14
# ::node	0.1	stay-01	6-7
# ::node	0.1.0	promise-01	4-5
# ::node	0.1.0.0	and	2-3
# ::node	0.1.0.1	touch-01	8-9
# ::node	0.1.0.1.0	only	9-10
# ::node	0.1.1	-	18-19
# ::node	0.1.1.0	address	19-20
# ::node	0.1.1.0.0	exchange-01	21-22
# ::root	0	realize-01
# ::edge	address	polarity	-	0.1.1.0	0.1.1	
# ::edge	case	poss	they	0.0	0.0.0	
# ::edge	case	quant	some	0.0	0.0.1	
# ::edge	exchange-01	ARG1	address	0.1.1.0.0	0.1.1.0	
# ::edge	promise-01	ARG0	and	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG1	touch-01	0.1.0	0.1.0.1	
# ::edge	promise-01	ARG2	stay-01	0.1.0	0.1	
# ::edge	realize-01	ARG1	case	0	0.0	
# ::edge	stay-01	ARG1	realize-01	0.1	0	
# ::edge	stay-01	polarity	-	0.1	0.1.1	
# ::edge	touch-01	ARG1	only	0.1.0.1	0.1.0.1.0	
(r / realize-01 
      :ARG1 (c / case 
            :poss (t / they) 
            :quant (s / some)) 
      :ARG1-of (s2 / stay-01 
            :ARG2-of (p / promise-01 
                  :ARG0 (a2 / and) 
                  :ARG1 (t2 / touch-01 
                        :ARG1 (o / only))) 
            :polarity (- / - 
                  :polarity-of (a / address 
                        :ARG1-of (e / exchange-01)))))

# ::snt chancellor helmut kohls coalition government is likely to announce later this week that it has accepted the bundesbank proposal which gives east germans a much less favourable exchange rate than they were promised during the election campaign
# ::tok chancellor helmut kohls coalition government is likely to announce later this week that it has accepted the bundesbank proposal which gives east germans a much less favourable exchange rate than they were promised during the election campaign
# ::alignments 36-37|0.1.0.1 35-36|0.1.0.1.0 32-33|0.1.0 30-31|0.1.0.0 28-29|0.1 27-28|0 25-26|0.1.1.2 24-25|0.1.1.2.0 22-23|0.1.1.1.0.0.0+0.1.1.1.0.0+0.1.1.1.0+0.1.1.1 21-22|0.1.1.1.1 20-21|0.1.1 18-19|0.1.1.0 15-16|0.1.1.0.1 13-14|0.1.1.0.1.0 11-12|0.1.1.0.0.1.0 10-11|0.1.1.0.0.1.0.0 9-10|0.1.1.0.0.1 8-9|0.1.1.0.0 6-7|0.1.1.0.0.0 3-4|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:44.743
# ::node	0	exchange-01	27-28
# ::node	0.0	coalition	3-4
# ::node	0.1	rate	28-29
# ::node	0.1.0	promise-01	32-33
# ::node	0.1.0.0	they	30-31
# ::node	0.1.0.1	campaign-01	36-37
# ::node	0.1.0.1.0	elect-01	35-36
# ::node	0.1.1	give-01	20-21
# ::node	0.1.1.0	propose-01	18-19
# ::node	0.1.1.0.0	announce-01	8-9
# ::node	0.1.1.0.0.0	likely	6-7
# ::node	0.1.1.0.0.1	late	9-10
# ::node	0.1.1.0.0.1.0	week	11-12
# ::node	0.1.1.0.0.1.0.0	this	10-11
# ::node	0.1.1.0.1	accept-01	15-16
# ::node	0.1.1.0.1.0	it	13-14
# ::node	0.1.1.1	person	22-23
# ::node	0.1.1.1.0	country	22-23
# ::node	0.1.1.1.0.0	name	22-23
# ::node	0.1.1.1.0.0.0	"Germany"	22-23
# ::node	0.1.1.1.1	east	21-22
# ::node	0.1.1.2	less	25-26
# ::node	0.1.1.2.0	much	24-25
# ::root	0	exchange-01
# ::edge	accept-01	ARG0	it	0.1.1.0.1	0.1.1.0.1.0	
# ::edge	accept-01	ARG1	propose-01	0.1.1.0.1	0.1.1.0	
# ::edge	announce-01	ARG1	propose-01	0.1.1.0.0	0.1.1.0	
# ::edge	announce-01	time	late	0.1.1.0.0	0.1.1.0.0.1	
# ::edge	campaign-01	ARG1	elect-01	0.1.0.1	0.1.0.1.0	
# ::edge	country	name	name	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	exchange-01	ARG0	coalition	0	0.0	
# ::edge	exchange-01	ARG1	rate	0	0.1	
# ::edge	give-01	ARG0	propose-01	0.1.1	0.1.1.0	
# ::edge	give-01	ARG1	rate	0.1.1	0.1	
# ::edge	give-01	ARG2	person	0.1.1	0.1.1.1	
# ::edge	give-01	time	less	0.1.1	0.1.1.2	
# ::edge	late	op1	week	0.1.1.0.0.1	0.1.1.0.0.1.0	
# ::edge	less	quant	much	0.1.1.2	0.1.1.2.0	
# ::edge	likely	domain	announce-01	0.1.1.0.0.0	0.1.1.0.0	
# ::edge	name	op1	"Germany"	0.1.1.1.0.0	0.1.1.1.0.0.0	
# ::edge	person	mod	country	0.1.1.1	0.1.1.1.0	
# ::edge	person	mod	east	0.1.1.1	0.1.1.1.1	
# ::edge	promise-01	ARG0	rate	0.1.0	0.1	
# ::edge	promise-01	ARG1	they	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG2	campaign-01	0.1.0	0.1.0.1	
# ::edge	week	mod	this	0.1.1.0.0.1.0	0.1.1.0.0.1.0.0	
(e2 / exchange-01 
      :ARG0 (c3 / coalition) 
      :ARG1 (r / rate 
            :ARG0-of (p / promise-01 
                  :ARG1 (t / they) 
                  :ARG2 (c / campaign-01 
                        :ARG1 (e / elect-01))) 
            :ARG1-of (g / give-01 
                  :ARG0 (p3 / propose-01 
                        :ARG1-of (a2 / announce-01 
                              :domain-of (l3 / likely) 
                              :time (l2 / late 
                                    :op1 (w / week 
                                          :mod (t2 / this)))) 
                        :ARG1-of (a / accept-01 
                              :ARG0 (i / it))) 
                  :ARG2 (p2 / person 
                        :mod (c2 / country 
                              :name (n / name 
                                    :op1 "Germany")) 
                        :mod (e3 / east)) 
                  :time (l / less 
                        :quant (m / much)))))

# ::snt   according to health visitor and group leader ms frances davies were not promising a miracle cure but if people really want to stop smoking they may be able to manage it with the support of the group even though they failed on their own
# ::tok according to health visitor and group leader ms frances davies were not promising a miracle cure but if people really want to stop smoking they may be able to manage it with the support of the group even though they failed on their own
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:44.744
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt an exciting time is promised if theres a new romance
# ::tok an exciting time is promised if theres a new romance
# ::alignments 8-9|0.0.0.0 4-5|0 2-3|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:44.756
# ::node	0	promise-01	4-5
# ::node	0.0	time	2-3
# ::node	0.0.0	excite-01	1-2
# ::node	0.0.0.0	new	8-9
# ::root	0	promise-01
# ::edge	excite-01	ARG0	time	0.0.0	0.0	
# ::edge	excite-01	ARG1	new	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	time	0	0.0	
(p / promise-01 
      :ARG1 (t / time 
            :ARG0-of (e / excite-01 
                  :ARG1 (n / new))))

# ::snt peter dalembord who shared her fears had promised to restrain sharpe if he appeared
# ::tok peter dalembord who shared her fears had promised to restrain sharpe if he appeared
# ::alignments 13-14|0 12-13|0.0 9-10|0.1 7-8|0.1.0 5-6|0.1.0.0 3-4|0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:44.808
# ::node	0	appear-01	13-14
# ::node	0.0	he	12-13
# ::node	0.1	restrain-01	9-10
# ::node	0.1.0	promise-01	7-8
# ::node	0.1.0.0	fear-01	5-6
# ::node	0.1.0.1	share-01	3-4
# ::root	0	appear-01
# ::edge	appear-01	ARG0	he	0	0.0	
# ::edge	appear-01	ARG1	restrain-01	0	0.1	
# ::edge	promise-01	ARG0	fear-01	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG1	restrain-01	0.1.0	0.1	
# ::edge	share-01	ARG1	promise-01	0.1.0.1	0.1.0	
(a / appear-01 
      :ARG0 (h / he) 
      :ARG1 (r / restrain-01 
            :ARG1-of (p / promise-01 
                  :ARG0 (f / fear-01) 
                  :ARG1-of (s / share-01))))

# ::snt but we can promise to have something ready to televise if you decide to come
# ::tok but we can promise to have something ready to televise if you decide to come
# ::alignments 12-13|0.0.1.0.0 11-12|0.0.1.0.0.0 7-8|0.0.1.0 6-7|0.0.1 3-4|0.0 2-3|0.1 1-2|0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:44.888
# ::node	0	contrast-01	0-1
# ::node	0.0	promise-01	3-4
# ::node	0.0.0	we	1-2
# ::node	0.0.1	something	6-7
# ::node	0.0.1.0	ready-01	7-8
# ::node	0.0.1.0.0	decide-01	12-13
# ::node	0.0.1.0.0.0	you	11-12
# ::node	0.1	possible	2-3
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	promise-01	0	0.0	
# ::edge	contrast-01	ARG2	possible	0	0.1	
# ::edge	decide-01	ARG0	you	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	promise-01	ARG0	we	0.0	0.0.0	
# ::edge	promise-01	ARG1	something	0.0	0.0.1	
# ::edge	ready-01	ARG1	something	0.0.1.0	0.0.1	
# ::edge	ready-01	time	decide-01	0.0.1.0	0.0.1.0.0	
(c / contrast-01 
      :ARG1 (p / promise-01 
            :ARG0 (w / we) 
            :ARG1 (s / something 
                  :ARG1-of (r / ready-01 
                        :time (d / decide-01 
                              :ARG0 (y / you))))) 
      :ARG2 (p2 / possible))

# ::snt before president robert mugabes zimbabwe african national union zanupf government took power in 1980 promising land reform 6000 mostly white commercial farmers owned the best half of the countrys farming land while 800000 black families crowded into the remainder
# ::tok before president robert mugabes zimbabwe african national union zanupf government took power in 1980 promising land reform 6000 mostly white commercial farmers owned the best half of the countrys farming land while 800000 black families crowded into the remainder
# ::alignments 38-39|0.2 35-36|0 34-35|0.0 33-34|0.0.0 32-33|0.4.2+0.4.1+0.4.0+0.4 30-31|0.1 29-30|0.1.0 25-26|0.3.1 22-23|0.3 21-22|0.3.0.0+0.3.0 20-21|0.3.0.0.0 19-20|0.1.0.0 18-19|0.3.0.0.1 17-18|0.3.0.3 16-17|0.3.0.1.0 15-16|0.3.0.1.0.0 14-15|0.3.0.1 13-14|0.3.0.1.0.2.0+0.3.0.1.0.2 11-12|0.3.0.1.0.1 7-8|0.3.0.2.0.0 6-7|0.3.0.2.0 1-2|0.3.0.2.1+0.3.0.2 0-1|0.3.0.2.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:46.209
# ::node	0	crowd-01	35-36
# ::node	0.0	family	34-35
# ::node	0.0.0	black	33-34
# ::node	0.1	land	30-31
# ::node	0.1.0	farm-01	29-30
# ::node	0.1.0.0	white	19-20
# ::node	0.2	remainder	38-39
# ::node	0.3	own-01	22-23
# ::node	0.3.0	person	21-22
# ::node	0.3.0.0	farm-01	21-22
# ::node	0.3.0.0.0	commerce	20-21
# ::node	0.3.0.0.1	most	18-19
# ::node	0.3.0.1	promise-01	14-15
# ::node	0.3.0.1.0	reform-01	16-17
# ::node	0.3.0.1.0.0	land	15-16
# ::node	0.3.0.1.0.1	power	11-12
# ::node	0.3.0.1.0.2	date-entity	13-14
# ::node	0.3.0.1.0.2.0	1980	13-14
# ::node	0.3.0.2	have-org-role-91	1-2
# ::node	0.3.0.2.0	nation	6-7
# ::node	0.3.0.2.0.0	union	7-8
# ::node	0.3.0.2.1	president	1-2
# ::node	0.3.0.2.2	before	0-1
# ::node	0.3.0.3	6000	17-18
# ::node	0.3.1	half	25-26
# ::node	0.4	date-entity	32-33
# ::node	0.4.0	0	32-33
# ::node	0.4.1	0	32-33
# ::node	0.4.2	80	32-33
# ::root	0	crowd-01
# ::edge	before	op1	have-org-role-91	0.3.0.2.2	0.3.0.2	
# ::edge	crowd-01	ARG0	family	0	0.0	
# ::edge	crowd-01	ARG1	land	0	0.1	
# ::edge	crowd-01	ARG2	remainder	0	0.2	
# ::edge	crowd-01	time	date-entity	0	0.4	
# ::edge	date-entity	day	0	0.4	0.4.0	
# ::edge	date-entity	month	0	0.4	0.4.1	
# ::edge	date-entity	year	1980	0.3.0.1.0.2	0.3.0.1.0.2.0	
# ::edge	date-entity	year	80	0.4	0.4.2	
# ::edge	family	mod	black	0.0	0.0.0	
# ::edge	farm-01	ARG0	person	0.3.0.0	0.3.0	
# ::edge	farm-01	ARG1	commerce	0.3.0.0	0.3.0.0.0	
# ::edge	farm-01	ARG1	white	0.1.0	0.1.0.0	
# ::edge	farm-01	time	most	0.3.0.0	0.3.0.0.1	
# ::edge	have-org-role-91	ARG0	person	0.3.0.2	0.3.0	
# ::edge	have-org-role-91	ARG1	nation	0.3.0.2	0.3.0.2.0	
# ::edge	have-org-role-91	ARG2	president	0.3.0.2	0.3.0.2.1	
# ::edge	land	purpose	farm-01	0.1	0.1.0	
# ::edge	own-01	ARG0	person	0.3	0.3.0	
# ::edge	own-01	ARG1	half	0.3	0.3.1	
# ::edge	own-01	purpose	crowd-01	0.3	0	
# ::edge	person	quant	6000	0.3.0	0.3.0.3	
# ::edge	power	purpose	reform-01	0.3.0.1.0.1	0.3.0.1.0	
# ::edge	promise-01	ARG0	person	0.3.0.1	0.3.0	
# ::edge	promise-01	ARG1	reform-01	0.3.0.1	0.3.0.1.0	
# ::edge	reform-01	ARG1	land	0.3.0.1.0	0.3.0.1.0.0	
# ::edge	reform-01	time	date-entity	0.3.0.1.0	0.3.0.1.0.2	
# ::edge	union	mod	nation	0.3.0.2.0.0	0.3.0.2.0	
(c / crowd-01 
      :ARG0 (f / family 
            :mod (b / black)) 
      :ARG1 (l / land 
            :purpose (f2 / farm-01 
                  :ARG1 (w / white))) 
      :ARG2 (r / remainder) 
      :purpose-of (o / own-01 
            :ARG0 (p / person 
                  :ARG0-of (f3 / farm-01 
                        :ARG1 (c2 / commerce) 
                        :time (m / most)) 
                  :ARG0-of (p2 / promise-01 
                        :ARG1 (r2 / reform-01 
                              :ARG1 (l2 / land) 
                              :purpose-of (p3 / power) 
                              :time (d2 / date-entity 
                                    :year 1980))) 
                  :ARG0-of (h2 / have-org-role-91 
                        :ARG1 (n / nation 
                              :mod-of (u / union)) 
                        :ARG2 (p4 / president) 
                        :op-of (b2 / before)) 
                  :quant 6000) 
            :ARG1 (h / half)) 
      :time (d / date-entity 
            :day 0 
            :month 0 
            :year 80))

# ::snt she also warned that honest politicians could not promise the goods and services which only people could provide by adopting the spirit to succeed
# ::tok she also warned that honest politicians could not promise the goods and services which only people could provide by adopting the spirit to succeed
# ::alignments 23-24|0.1.1.0.0.2 21-22|0.1.1.0.0.0 19-20|0.1.1.0.0 17-18|0.1.1.0 16-17|0.1.1.0.1 14-15|0.1.1.0.0.1 12-13|0.1.2.0 11-12|0.1.2 10-11|0.1.1 8-9|0.1 6-7|0.1.3 5-6|0.1.0 4-5|0.1.0.0 2-3|0 1-2|0.2 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:46.565
# ::node	0	warn-01	2-3
# ::node	0.0	she	0-1
# ::node	0.1	promise-01	8-9
# ::node	0.1.0	politician	5-6
# ::node	0.1.0.0	honest	4-5
# ::node	0.1.1	good	10-11
# ::node	0.1.1.0	provide-01	17-18
# ::node	0.1.1.0.0	adopt-01	19-20
# ::node	0.1.1.0.0.0	spirit	21-22
# ::node	0.1.1.0.0.1	only	14-15
# ::node	0.1.1.0.0.2	succeed-01	23-24
# ::node	0.1.1.0.1	possible	16-17
# ::node	0.1.2	and	11-12
# ::node	0.1.2.0	service	12-13
# ::node	0.1.3	possible	6-7
# ::node	0.2	also	1-2
# ::root	0	warn-01
# ::edge	adopt-01	ARG1	spirit	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	adopt-01	mod	only	0.1.1.0.0	0.1.1.0.0.1	
# ::edge	adopt-01	purpose	succeed-01	0.1.1.0.0	0.1.1.0.0.2	
# ::edge	and	op1	service	0.1.2	0.1.2.0	
# ::edge	politician	mod	honest	0.1.0	0.1.0.0	
# ::edge	possible	domain	promise-01	0.1.3	0.1	
# ::edge	promise-01	ARG0	politician	0.1	0.1.0	
# ::edge	promise-01	ARG1	good	0.1	0.1.1	
# ::edge	promise-01	ARG2	and	0.1	0.1.2	
# ::edge	provide-01	ARG0	good	0.1.1.0	0.1.1	
# ::edge	provide-01	ARG1	adopt-01	0.1.1.0	0.1.1.0.0	
# ::edge	provide-01	mod	possible	0.1.1.0	0.1.1.0.1	
# ::edge	warn-01	ARG0	she	0	0.0	
# ::edge	warn-01	ARG1	promise-01	0	0.1	
# ::edge	warn-01	mod	also	0	0.2	
(w / warn-01 
      :ARG0 (s4 / she) 
      :ARG1 (p3 / promise-01 
            :ARG0 (p5 / politician 
                  :mod (h / honest)) 
            :ARG1 (g / good 
                  :ARG0-of (p / provide-01 
                        :ARG1 (a / adopt-01 
                              :ARG1 (s2 / spirit) 
                              :mod (o / only) 
                              :purpose (s / succeed-01)) 
                        :mod (p2 / possible))) 
            :ARG2 (a2 / and 
                  :op1 (s3 / service)) 
            :domain-of (p4 / possible)) 
      :mod (a3 / also))

# ::snt   apparently she was waiting for some show of defiance and when loring merely returned her look meekly she lost some of her asperity and said ill make enquiries but i cant promise anything
# ::tok apparently she was waiting for some show of defiance and when loring merely returned her look meekly she lost some of her asperity and said ill make enquiries but i cant promise anything
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:46.566
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt labour delegates were warned yesterday that the party would lack electoral credibilty if it promised increases in public spending which could only be met by higher borrowing or taxes
# ::tok labour delegates were warned yesterday that the party would lack electoral credibilty if it promised increases in public spending which could only be met by higher borrowing or taxes
# ::alignments 28-29|0.0.1.1.0 27-28|0.0.1.1 26-27|0.0.1 25-26|0.0.1.0 23-24|0.0 21-22|0.0.2 20-21|0 18-19|0.0.0.0.0.1.0.0.0 17-18|0.0.0.0.0.1.0.0.0.0 15-16|0.0.0.0.0.1.0.0 14-15|0.0.0.0.0.1 13-14|0.0.0.0.0.1.0 10-11|0.0.0.1 9-10|0.0.0.0.0 7-8|0.0.0.0.0.0 4-5|0.0.0.0.1 3-4|0.0.0.0 1-2|0.0.0.2+0.0.0 0-1|0.0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:47.279
# ::node	0	possible	20-21
# ::node	0.0	meet-03	23-24
# ::node	0.0.0	person	1-2
# ::node	0.0.0.0	warn-01	3-4
# ::node	0.0.0.0.0	lack-01	9-10
# ::node	0.0.0.0.0.0	party	7-8
# ::node	0.0.0.0.0.1	promise-01	14-15
# ::node	0.0.0.0.0.1.0	it	13-14
# ::node	0.0.0.0.0.1.0.0	increase-01	15-16
# ::node	0.0.0.0.0.1.0.0.0	spend-01	18-19
# ::node	0.0.0.0.0.1.0.0.0.0	public	17-18
# ::node	0.0.0.0.1	yesterday	4-5
# ::node	0.0.0.1	elect-01	10-11
# ::node	0.0.0.2	delegate-01	1-2
# ::node	0.0.0.2.0	labour	0-1
# ::node	0.0.1	borrow-01	26-27
# ::node	0.0.1.0	high	25-26
# ::node	0.0.1.1	or	27-28
# ::node	0.0.1.1.0	tax-01	28-29
# ::node	0.0.2	only	21-22
# ::root	0	possible
# ::edge	borrow-01	mod	high	0.0.1	0.0.1.0	
# ::edge	delegate-01	ARG2	person	0.0.0.2	0.0.0	
# ::edge	delegate-01	mod	labour	0.0.0.2	0.0.0.2.0	
# ::edge	elect-01	ARG1	person	0.0.0.1	0.0.0	
# ::edge	increase-01	ARG0	it	0.0.0.0.0.1.0.0	0.0.0.0.0.1.0	
# ::edge	increase-01	ARG1	spend-01	0.0.0.0.0.1.0.0	0.0.0.0.0.1.0.0.0	
# ::edge	lack-01	ARG0	party	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	meet-03	ARG0	person	0.0	0.0.0	
# ::edge	meet-03	ARG1	borrow-01	0.0	0.0.1	
# ::edge	meet-03	mod	only	0.0	0.0.2	
# ::edge	or	op1	borrow-01	0.0.1.1	0.0.1	
# ::edge	or	op2	tax-01	0.0.1.1	0.0.1.1.0	
# ::edge	possible	domain	meet-03	0	0.0	
# ::edge	promise-01	ARG0	it	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	promise-01	ARG1	lack-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	spend-01	mod	public	0.0.0.0.0.1.0.0.0	0.0.0.0.0.1.0.0.0.0	
# ::edge	warn-01	ARG0	person	0.0.0.0	0.0.0	
# ::edge	warn-01	ARG1	lack-01	0.0.0.0	0.0.0.0.0	
# ::edge	warn-01	time	yesterday	0.0.0.0	0.0.0.0.1	
(p / possible 
      :domain (m / meet-03 
            :ARG0 (p5 / person 
                  :ARG0-of (w / warn-01 
                        :ARG1 (l / lack-01 
                              :ARG0 (p4 / party) 
                              :ARG1-of (p3 / promise-01 
                                    :ARG0 (i2 / it 
                                          :ARG0-of (i / increase-01 
                                                :ARG1 (s / spend-01 
                                                      :mod (p2 / public)))))) 
                        :time (y / yesterday)) 
                  :ARG1-of (e / elect-01) 
                  :ARG2-of (d / delegate-01 
                        :mod (l2 / labour))) 
            :ARG1 (b / borrow-01 
                  :mod (h / high) 
                  :op-of (o / or 
                        :op1 (t / tax-01))) 
            :mod (o2 / only)))

# ::snt many said they couldnt see any sense in a sexually unstable world in promising to be faithful for life when life might mean 50 years
# ::tok many said they couldnt see any sense in a sexually unstable world in promising to be faithful for life when life might mean 50 years
# ::alignments 24-25|0.0.0.1.1.0.1.1+0.0.0.1.1.0.1 23-24|0.0.0.1.1.0.1.0 22-23|0.0.0.1.1.0 20-21|0.0.0.1.1.0.0 18-19|0.0.0.1.1.1 16-17|0.0.0.1.1 13-14|0.0.0.1 11-12|0.0.0.1.0 10-11|0.0.0.1.0.0.0+0.0.0.1.0.0 9-10|0.0.0.1.0.1 6-7|0.0.0.0 5-6|0.0.0.0.0 4-5|0.0.0 2-3|0.0 1-2|0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:47.691
# ::node	0	say-01	1-2
# ::node	0.0	they	2-3
# ::node	0.0.0	see-01	4-5
# ::node	0.0.0.0	sense	6-7
# ::node	0.0.0.0.0	any	5-6
# ::node	0.0.0.1	promise-01	13-14
# ::node	0.0.0.1.0	world	11-12
# ::node	0.0.0.1.0.0	stable	10-11
# ::node	0.0.0.1.0.0.0	-	10-11
# ::node	0.0.0.1.0.1	sexual	9-10
# ::node	0.0.0.1.1	faithful	16-17
# ::node	0.0.0.1.1.0	mean-01	22-23
# ::node	0.0.0.1.1.0.0	life	20-21
# ::node	0.0.0.1.1.0.1	temporal-quantity	24-25
# ::node	0.0.0.1.1.0.1.0	50	23-24
# ::node	0.0.0.1.1.0.1.1	year	24-25
# ::node	0.0.0.1.1.1	life	18-19
# ::node	0.1	many	0-1
# ::root	0	say-01
# ::edge	faithful	condition	mean-01	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	faithful	mod	life	0.0.0.1.1	0.0.0.1.1.1	
# ::edge	mean-01	ARG0	life	0.0.0.1.1.0	0.0.0.1.1.0.0	
# ::edge	mean-01	ARG1	temporal-quantity	0.0.0.1.1.0	0.0.0.1.1.0.1	
# ::edge	promise-01	ARG0	world	0.0.0.1	0.0.0.1.0	
# ::edge	promise-01	ARG1	faithful	0.0.0.1	0.0.0.1.1	
# ::edge	say-01	ARG0	they	0	0.0	
# ::edge	say-01	ARG1	many	0	0.1	
# ::edge	see-01	ARG0	they	0.0.0	0.0	
# ::edge	see-01	ARG1	sense	0.0.0	0.0.0.0	
# ::edge	see-01	manner	promise-01	0.0.0	0.0.0.1	
# ::edge	sense	mod	any	0.0.0.0	0.0.0.0.0	
# ::edge	stable	polarity	-	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	temporal-quantity	quant	50	0.0.0.1.1.0.1	0.0.0.1.1.0.1.0	
# ::edge	temporal-quantity	unit	year	0.0.0.1.1.0.1	0.0.0.1.1.0.1.1	
# ::edge	world	mod	sexual	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	world	mod	stable	0.0.0.1.0	0.0.0.1.0.0	
(s5 / say-01 
      :ARG0 (t2 / they 
            :ARG0-of (s4 / see-01 
                  :ARG1 (s3 / sense 
                        :mod (a / any)) 
                  :manner (p / promise-01 
                        :ARG0 (w / world 
                              :mod (s / stable 
                                    :polarity -) 
                              :mod (s2 / sexual)) 
                        :ARG1 (f / faithful 
                              :condition (m / mean-01 
                                    :ARG0 (l / life) 
                                    :ARG1 (t / temporal-quantity 
                                          :quant 50 
                                          :unit (y / year))) 
                              :mod (l2 / life))))) 
      :ARG1 (m2 / many))

# ::snt all it needs is to promise a highpowered investigation such as a royal commission into the practicalities of an alternative voting system surely justified by the intense public interest now abounding
# ::tok all it needs is to promise a highpowered investigation such as a royal commission into the practicalities of an alternative voting system surely justified by the intense public interest now abounding
# ::alignments 29-30|0.1.0.0.0.0.1.0 28-29|0 27-28|0.0 26-27|0.2 23-24|0.1 22-23|0.1.1 21-22|0.1.0 20-21|0.1.0.0 19-20|0.1.0.0.1 13-14|0.1.0.0.0 12-13|0.1.0.0.0.1 9-10|0.1.0.0.0.0.1.1 8-9|0.1.0.0.0.0.1 5-6|0.1.0.0.0.0 2-3|0.1.0.0.0.0.0.0 1-2|0.1.0.0.0.0.0 0-1|0.1.0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:47.909
# ::node	0	interest-01	28-29
# ::node	0.0	public	27-28
# ::node	0.1	justify-01	23-24
# ::node	0.1.0	system	21-22
# ::node	0.1.0.0	vote-01	20-21
# ::node	0.1.0.0.0	commission	13-14
# ::node	0.1.0.0.0.0	promise-01	5-6
# ::node	0.1.0.0.0.0.0	it	1-2
# ::node	0.1.0.0.0.0.0.0	need-01	2-3
# ::node	0.1.0.0.0.0.0.0.0	all	0-1
# ::node	0.1.0.0.0.0.1	investigate-01	8-9
# ::node	0.1.0.0.0.0.1.0	now	29-30
# ::node	0.1.0.0.0.0.1.1	such	9-10
# ::node	0.1.0.0.0.1	royal	12-13
# ::node	0.1.0.0.1	alternative	19-20
# ::node	0.1.1	sure	22-23
# ::node	0.2	intense	26-27
# ::root	0	interest-01
# ::edge	commission	mod	royal	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	interest-01	ARG1	public	0	0.0	
# ::edge	interest-01	degree	intense	0	0.2	
# ::edge	investigate-01	ARG0	now	0.1.0.0.0.0.1	0.1.0.0.0.0.1.0	
# ::edge	investigate-01	ARG1	such	0.1.0.0.0.0.1	0.1.0.0.0.0.1.1	
# ::edge	justify-01	ARG0	system	0.1	0.1.0	
# ::edge	justify-01	ARG1	interest-01	0.1	0	
# ::edge	need-01	ARG0	it	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	need-01	mod	all	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0.0.0	
# ::edge	promise-01	ARG0	it	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	promise-01	ARG1	commission	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	promise-01	ARG2	investigate-01	0.1.0.0.0.0	0.1.0.0.0.0.1	
# ::edge	sure	domain	justify-01	0.1.1	0.1	
# ::edge	vote-01	instrument	system	0.1.0.0	0.1.0	
# ::edge	vote-01	mod	alternative	0.1.0.0	0.1.0.0.1	
# ::edge	vote-01	mod	commission	0.1.0.0	0.1.0.0.0	
(i / interest-01 
      :ARG1 (p / public) 
      :ARG1-of (j / justify-01 
            :ARG0 (s2 / system 
                  :instrument-of (v / vote-01 
                        :mod (c / commission 
                              :ARG1-of (p2 / promise-01 
                                    :ARG0 (i4 / it 
                                          :ARG0-of (n2 / need-01 
                                                :mod (a2 / all))) 
                                    :ARG2 (i3 / investigate-01 
                                          :ARG0 (n / now) 
                                          :ARG1 (s3 / such))) 
                              :mod (r / royal)) 
                        :mod (a / alternative))) 
            :domain-of (s / sure)) 
      :degree (i2 / intense))

# ::snt back in cairo the americans agreed not to insist on an operation in the indian ocean even though roosevelt had promised it to chiang kaishek now that they had got their way in regard to overlord
# ::tok back in cairo the americans agreed not to insist on an operation in the indian ocean even though roosevelt had promised it to chiang kaishek now that they had got their way in regard to overlord
# ::alignments 33-34|0 31-32|0.0.1 27-28|0.0 25-26|0.0.0.2 21-22|0.0.0.0 20-21|0.0.0 14-16|0.0.0.1.1.0.0.0+0.0.0.1.1.0.0.1+0.0.0.1.1.0.0+0.0.0.1.1.0 11-12|0.0.0.1.1 8-9|0.0.0.1 5-6|0.0.0.1.0.0 4-5|0.0.0.1.0.1.0.0+0.0.0.1.0.1.0+0.0.0.1.0.1+0.0.0.1.0 0-1|0.0.0.1.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:48.307
# ::node	0	regard-01	33-34
# ::node	0.0	they	27-28
# ::node	0.0.0	promise-01	20-21
# ::node	0.0.0.0	it	21-22
# ::node	0.0.0.1	insist-01	8-9
# ::node	0.0.0.1.0	person	4-5
# ::node	0.0.0.1.0.0	agree-01	5-6
# ::node	0.0.0.1.0.1	country	4-5
# ::node	0.0.0.1.0.1.0	name	4-5
# ::node	0.0.0.1.0.1.0.0	"America"	4-5
# ::node	0.0.0.1.0.2	back	0-1
# ::node	0.0.0.1.1	operation	11-12
# ::node	0.0.0.1.1.0	ocean	14-16
# ::node	0.0.0.1.1.0.0	name	14-16
# ::node	0.0.0.1.1.0.0.0	"Indian"	14-16
# ::node	0.0.0.1.1.0.0.1	"Ocean"	14-16
# ::node	0.0.0.2	now	25-26
# ::node	0.0.1	way	31-32
# ::root	0	regard-01
# ::edge	agree-01	ARG0	person	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	country	name	name	0.0.0.1.0.1	0.0.0.1.0.1.0	
# ::edge	insist-01	ARG0	person	0.0.0.1	0.0.0.1.0	
# ::edge	insist-01	ARG1	operation	0.0.0.1	0.0.0.1.1	
# ::edge	insist-01	purpose	promise-01	0.0.0.1	0.0.0	
# ::edge	name	op1	"America"	0.0.0.1.0.1.0	0.0.0.1.0.1.0.0	
# ::edge	name	op1	"Indian"	0.0.0.1.1.0.0	0.0.0.1.1.0.0.0	
# ::edge	name	op2	"Ocean"	0.0.0.1.1.0.0	0.0.0.1.1.0.0.1	
# ::edge	ocean	name	name	0.0.0.1.1.0	0.0.0.1.1.0.0	
# ::edge	operation	mod	ocean	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	person	mod	country	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	person	time	back	0.0.0.1.0	0.0.0.1.0.2	
# ::edge	promise-01	ARG0	they	0.0.0	0.0	
# ::edge	promise-01	ARG1	it	0.0.0	0.0.0.0	
# ::edge	promise-01	time	now	0.0.0	0.0.0.2	
# ::edge	regard-01	ARG1	they	0	0.0	
# ::edge	way	poss	they	0.0.1	0.0	
(r / regard-01 
      :ARG1 (t / they 
            :ARG0-of (p / promise-01 
                  :ARG1 (i / it) 
                  :purpose-of (i2 / insist-01 
                        :ARG0 (p2 / person 
                              :ARG0-of (a / agree-01) 
                              :mod (c / country 
                                    :name (n3 / name 
                                          :op1 "America")) 
                              :time (b / back)) 
                        :ARG1 (o2 / operation 
                              :mod (o / ocean 
                                    :name (n2 / name 
                                          :op1 "Indian" 
                                          :op2 "Ocean")))) 
                  :time (n / now)) 
            :poss-of (w / way)))

# ::snt the equally earnest anglofrench declaration of 1918 promising the arabs of former ottoman colonies their independence if they supported the allies against the turks fell into much the same category although it was not a promise that was intended to be kept
# ::tok the equally earnest anglofrench declaration of 1918 promising the arabs of former ottoman colonies their independence if they supported the allies against the turks fell into much the same category although it was not a promise that was intended to be kept
# ::alignments 41-42|0.1.1 38-39|0.1 35-36|0 31-32|0.0 29-30|0.1.0.1.1 28-29|0.1.0.1.1.0 26-27|0.1.0.1.1.1 24-25|0.1.0.1 20-21|0.1.0.1.0 18-19|0.1.0.0 17-18|0.1.0 15-16|0.1.0.0.0.1+0.1.0.0.0 13-14|0.1.0.0.0.0 11-12|0.1.0.0.0.0.0 7-8|0.1.0.2 6-7|0.1.0.2.0.1.0+0.1.0.2.0.1 4-5|0.1.0.2.0 1-2|0.1.0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:49.395
# ::node	0	promise-01	35-36
# ::node	0.0	it	31-32
# ::node	0.1	intend-01	38-39
# ::node	0.1.0	they	17-18
# ::node	0.1.0.0	support-01	18-19
# ::node	0.1.0.0.0	depend-01	15-16
# ::node	0.1.0.0.0.0	colony	13-14
# ::node	0.1.0.0.0.0.0	former	11-12
# ::node	0.1.0.0.0.1	-	15-16
# ::node	0.1.0.1	fall-01	24-25
# ::node	0.1.0.1.0	ally-01	20-21
# ::node	0.1.0.1.1	category	29-30
# ::node	0.1.0.1.1.0	same-41	28-29
# ::node	0.1.0.1.1.1	much	26-27
# ::node	0.1.0.2	promise-01	7-8
# ::node	0.1.0.2.0	declare-02	4-5
# ::node	0.1.0.2.0.0	equal	1-2
# ::node	0.1.0.2.0.1	date-entity	6-7
# ::node	0.1.0.2.0.1.0	1918	6-7
# ::node	0.1.1	keep-01	41-42
# ::root	0	promise-01
# ::edge	category	quant	much	0.1.0.1.1	0.1.0.1.1.1	
# ::edge	colony	time	former	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	date-entity	year	1918	0.1.0.2.0.1	0.1.0.2.0.1.0	
# ::edge	declare-02	ARG1	equal	0.1.0.2.0	0.1.0.2.0.0	
# ::edge	declare-02	time	date-entity	0.1.0.2.0	0.1.0.2.0.1	
# ::edge	depend-01	ARG1	colony	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	depend-01	polarity	-	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	fall-01	ARG0	they	0.1.0.1	0.1.0	
# ::edge	fall-01	ARG1	ally-01	0.1.0.1	0.1.0.1.0	
# ::edge	fall-01	ARG4	category	0.1.0.1	0.1.0.1.1	
# ::edge	intend-01	ARG0	they	0.1	0.1.0	
# ::edge	intend-01	ARG1	keep-01	0.1	0.1.1	
# ::edge	intend-01	ARG2	promise-01	0.1	0	
# ::edge	promise-01	ARG0	they	0.1.0.2	0.1.0	
# ::edge	promise-01	ARG1	declare-02	0.1.0.2	0.1.0.2.0	
# ::edge	promise-01	ARG1	it	0	0.0	
# ::edge	same-41	ARG1	category	0.1.0.1.1.0	0.1.0.1.1	
# ::edge	support-01	ARG0	they	0.1.0.0	0.1.0	
# ::edge	support-01	ARG1	depend-01	0.1.0.0	0.1.0.0.0	
(p / promise-01 
      :ARG1 (i2 / it) 
      :ARG2-of (i / intend-01 
            :ARG0 (t / they 
                  :ARG0-of (s2 / support-01 
                        :ARG1 (d / depend-01 
                              :ARG1 (c2 / colony 
                                    :time (f2 / former)) 
                              :polarity -)) 
                  :ARG0-of (f / fall-01 
                        :ARG1 (a / ally-01) 
                        :ARG4 (c / category 
                              :ARG1-of (s / same-41) 
                              :quant (m / much))) 
                  :ARG0-of (p2 / promise-01 
                        :ARG1 (d3 / declare-02 
                              :ARG1 (e / equal) 
                              :time (d2 / date-entity 
                                    :year 1918)))) 
            :ARG1 (k / keep-01)))

# ::snt law a canadian promised tranquillity  astor an american made the times once more respectable dash, politics after the fall of lloyd george seemed far from the tranquillity which law had promised
# ::tok law a canadian promised tranquillity astor an american made the times once more respectable dash , politics after the fall of lloyd george seemed far from the tranquillity which law had promised
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:49.396
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt we do not want a level of taxation which is going to depress effort the labour leader said after promising an unsentimental approach to public spending
# ::tok we do not want a level of taxation which is going to depress effort the labour leader said after promising an unsentimental approach to public spending
# ::alignments 25-26|0.0.0 24-25|0.0.0.0 22-23|0.2.0.0 19-20|0.2.0 18-19|0.2 17-18|0 16-17|0.0.1+0.0 15-16|0.0.1.0 13-14|0.1 5-6|0.2.0.1.1 3-4|0.2.0.1 0-1|0.2.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:49.751
# ::node	0	say-01	17-18
# ::node	0.0	person	16-17
# ::node	0.0.0	spend-01	25-26
# ::node	0.0.0.0	public	24-25
# ::node	0.0.1	lead-02	16-17
# ::node	0.0.1.0	labour	15-16
# ::node	0.1	effort	13-14
# ::node	0.2	after	18-19
# ::node	0.2.0	promise-01	19-20
# ::node	0.2.0.0	approach-02	22-23
# ::node	0.2.0.1	want-01	3-4
# ::node	0.2.0.1.0	we	0-1
# ::node	0.2.0.1.1	level	5-6
# ::root	0	say-01
# ::edge	after	op1	promise-01	0.2	0.2.0	
# ::edge	lead-02	ARG0	person	0.0.1	0.0	
# ::edge	lead-02	ARG1	labour	0.0.1	0.0.1.0	
# ::edge	promise-01	ARG1	approach-02	0.2.0	0.2.0.0	
# ::edge	say-01	ARG0	person	0	0.0	
# ::edge	say-01	ARG1	effort	0	0.1	
# ::edge	say-01	time	after	0	0.2	
# ::edge	spend-01	ARG0	person	0.0.0	0.0	
# ::edge	spend-01	mod	public	0.0.0	0.0.0.0	
# ::edge	want-01	ARG0	we	0.2.0.1	0.2.0.1.0	
# ::edge	want-01	ARG1	level	0.2.0.1	0.2.0.1.1	
# ::edge	want-01	ARG2	promise-01	0.2.0.1	0.2.0	
(s2 / say-01 
      :ARG0 (p3 / person 
            :ARG0-of (s / spend-01 
                  :mod (p / public)) 
            :ARG0-of (l / lead-02 
                  :ARG1 (l2 / labour))) 
      :ARG1 (e / effort) 
      :time (a2 / after 
            :op1 (p2 / promise-01 
                  :ARG1 (a / approach-02) 
                  :ARG2-of (w / want-01 
                        :ARG0 (w2 / we) 
                        :ARG1 (l3 / level)))))

# ::snt whilst we promise you a fair fight the defeat we are certain to inflict upon you will be so massive and crippling that you will not rise again he said
# ::tok whilst we promise you a fair fight the defeat we are certain to inflict upon you will be so massive and crippling that you will not rise again he said
# ::alignments 29-30|0 28-29|0.0 27-28|0.2 26-27|0.1.0.0 23-24|0.1.0.0.0 21-22|0.1.0 20-21|0.1.0.1 19-20|0.1.0.1.1 18-19|0.1.0.1.1.0 15-16|0.1 13-14|0.1.0.1.0 11-12|0.1.0.1.0.1 9-10|0.1.0.1.0.0 8-9|0.1.0.1.0.1.0.1 6-7|0.1.0.1.0.1.0 5-6|0.1.0.1.0.1.0.1.0 3-4|0.1.0.1.0.1.0.0.0.0 2-3|0.1.0.1.0.1.0.0.0 1-2|0.1.0.1.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:50.046
# ::node	0	say-01	29-30
# ::node	0.0	he	28-29
# ::node	0.1	you	15-16
# ::node	0.1.0	cripple-01	21-22
# ::node	0.1.0.0	rise-01	26-27
# ::node	0.1.0.0.0	you	23-24
# ::node	0.1.0.1	and	20-21
# ::node	0.1.0.1.0	inflict-01	13-14
# ::node	0.1.0.1.0.0	we	9-10
# ::node	0.1.0.1.0.1	certain	11-12
# ::node	0.1.0.1.0.1.0	fight-01	6-7
# ::node	0.1.0.1.0.1.0.0	we	1-2
# ::node	0.1.0.1.0.1.0.0.0	promise-01	2-3
# ::node	0.1.0.1.0.1.0.0.0.0	you	3-4
# ::node	0.1.0.1.0.1.0.1	defeat-01	8-9
# ::node	0.1.0.1.0.1.0.1.0	fair	5-6
# ::node	0.1.0.1.1	massive	19-20
# ::node	0.1.0.1.1.0	so	18-19
# ::node	0.2	again	27-28
# ::root	0	say-01
# ::edge	and	op1	massive	0.1.0.1	0.1.0.1.1	
# ::edge	and	op2	cripple-01	0.1.0.1	0.1.0	
# ::edge	certain	domain	inflict-01	0.1.0.1.0.1	0.1.0.1.0	
# ::edge	cripple-01	ARG1	you	0.1.0	0.1	
# ::edge	defeat-01	ARG0	fair	0.1.0.1.0.1.0.1	0.1.0.1.0.1.0.1.0	
# ::edge	fight-01	ARG0	we	0.1.0.1.0.1.0	0.1.0.1.0.1.0.0	
# ::edge	fight-01	ARG1	certain	0.1.0.1.0.1.0	0.1.0.1.0.1	
# ::edge	fight-01	ARG2	defeat-01	0.1.0.1.0.1.0	0.1.0.1.0.1.0.1	
# ::edge	inflict-01	ARG0	we	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	inflict-01	ARG1	and	0.1.0.1.0	0.1.0.1	
# ::edge	massive	degree	so	0.1.0.1.1	0.1.0.1.1.0	
# ::edge	promise-01	ARG0	we	0.1.0.1.0.1.0.0.0	0.1.0.1.0.1.0.0	
# ::edge	promise-01	ARG1	you	0.1.0.1.0.1.0.0.0	0.1.0.1.0.1.0.0.0.0	
# ::edge	rise-01	ARG0	you	0.1.0.0	0.1.0.0.0	
# ::edge	rise-01	ARG1	cripple-01	0.1.0.0	0.1.0	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	you	0	0.1	
# ::edge	say-01	mod	again	0	0.2	
(s / say-01 
      :ARG0 (h / he) 
      :ARG1 (y2 / you 
            :ARG1-of (c / cripple-01 
                  :ARG1-of (r / rise-01 
                        :ARG0 (y / you)) 
                  :op-of (a2 / and 
                        :ARG1-of (i / inflict-01 
                              :ARG0 (w / we) 
                              :domain-of (c2 / certain 
                                    :ARG1-of (f / fight-01 
                                          :ARG0 (w2 / we 
                                                :ARG0-of (p / promise-01 
                                                      :ARG1 (y3 / you))) 
                                          :ARG2 (d / defeat-01 
                                                :ARG0 (f2 / fair))))) 
                        :op1 (m / massive 
                              :degree (s2 / so))))) 
      :mod (a / again))

# ::snt all of us can feel the tears of the many mothers and fathers he said promising to address the issues that had led to the exodus
# ::tok all of us can feel the tears of the many mothers and fathers he said promising to address the issues that had led to the exodus
# ::alignments 22-23|0.1.0 19-20|0.1 17-18|0 15-16|0.2 14-15|0.0.0 13-14|0.0 12-13|0.0.0.0 11-12|0.0.0.1 10-11|0.2.0.0+0.2.0 9-10|0.0.0.1.1 6-7|0.0.0.1.0.0 4-5|0.0.0.1.0 3-4|0.0.0.1.0.1 0-1|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:50.562
# ::node	0	address-02	17-18
# ::node	0.0	he	13-14
# ::node	0.0.0	say-01	14-15
# ::node	0.0.0.0	father	12-13
# ::node	0.0.0.1	and	11-12
# ::node	0.0.0.1.0	feel-01	4-5
# ::node	0.0.0.1.0.0	tear	6-7
# ::node	0.0.0.1.0.1	possible	3-4
# ::node	0.0.0.1.1	many	9-10
# ::node	0.1	issue	19-20
# ::node	0.1.0	lead-02	22-23
# ::node	0.1.0.0	all	0-1
# ::node	0.2	promise-01	15-16
# ::node	0.2.0	have-rel-role-91	10-11
# ::node	0.2.0.0	mother	10-11
# ::root	0	address-02
# ::edge	address-02	ARG0	he	0	0.0	
# ::edge	address-02	ARG1	issue	0	0.1	
# ::edge	all	op1	lead-02	0.1.0.0	0.1.0	
# ::edge	and	op1	feel-01	0.0.0.1	0.0.0.1.0	
# ::edge	and	op2	say-01	0.0.0.1	0.0.0	
# ::edge	and	quant	many	0.0.0.1	0.0.0.1.1	
# ::edge	feel-01	ARG1	tear	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	have-rel-role-91	ARG2	mother	0.2.0	0.2.0.0	
# ::edge	lead-02	ARG1	issue	0.1.0	0.1	
# ::edge	possible	domain	feel-01	0.0.0.1.0.1	0.0.0.1.0	
# ::edge	promise-01	ARG1	have-rel-role-91	0.2	0.2.0	
# ::edge	promise-01	ARG2	address-02	0.2	0	
# ::edge	say-01	ARG0	he	0.0.0	0.0	
# ::edge	say-01	ARG1	father	0.0.0	0.0.0.0	
(a / address-02 
      :ARG0 (h / he 
            :ARG0-of (s / say-01 
                  :ARG1 (f / father) 
                  :op-of (a2 / and 
                        :op1 (f2 / feel-01 
                              :ARG1 (t / tear) 
                              :domain-of (p2 / possible)) 
                        :quant (m2 / many)))) 
      :ARG1 (i / issue 
            :ARG1-of (l / lead-02 
                  :op-of (a3 / all))) 
      :ARG2-of (p / promise-01 
            :ARG1 (h2 / have-rel-role-91 
                  :ARG2 (m / mother))))

# ::snt it is calling the range country house collection and promises an increased fabric selection
# ::tok it is calling the range country house collection and promises an increased fabric selection
# ::alignments 13-14|0.1.0 12-13|0.1.0.0 11-12|0.1.0.1 9-10|0.1 8-9|0 7-8|0.0 6-7|0.0.1 5-6|0.0.2.0 4-5|0.0.2 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:50.656
# ::node	0	and	8-9
# ::node	0.0	collect-01	7-8
# ::node	0.0.0	it	0-1
# ::node	0.0.1	house	6-7
# ::node	0.0.2	range-01	4-5
# ::node	0.0.2.0	country	5-6
# ::node	0.1	promise-01	9-10
# ::node	0.1.0	select-01	13-14
# ::node	0.1.0.0	fabric	12-13
# ::node	0.1.0.1	increase-01	11-12
# ::root	0	and
# ::edge	and	op1	collect-01	0	0.0	
# ::edge	and	op2	promise-01	0	0.1	
# ::edge	collect-01	ARG0	it	0.0	0.0.0	
# ::edge	collect-01	ARG1	house	0.0	0.0.1	
# ::edge	increase-01	ARG1	select-01	0.1.0.1	0.1.0	
# ::edge	promise-01	ARG1	select-01	0.1	0.1.0	
# ::edge	range-01	ARG0	country	0.0.2	0.0.2.0	
# ::edge	range-01	ARG1	collect-01	0.0.2	0.0	
# ::edge	select-01	ARG1	fabric	0.1.0	0.1.0.0	
(a / and 
      :op1 (c / collect-01 
            :ARG0 (i2 / it) 
            :ARG1 (h / house) 
            :ARG1-of (r / range-01 
                  :ARG0 (c2 / country))) 
      :op2 (p / promise-01 
            :ARG1 (s / select-01 
                  :ARG1 (f / fabric) 
                  :ARG1-of (i / increase-01))))

# ::snt most people end up relying upon the colourful packets tins and jars of commercial baby foods which at least promise lots of vitamins and no longer have added salt sugar colours or artificial flavours
# ::tok most people end up relying upon the colourful packets tins and jars of commercial baby foods which at least promise lots of vitamins and no longer have added salt sugar colours or artificial flavours
# ::alignments 32-33|0 31-32|0.0 30-31|0.0.0.0 29-30|0.0.0.0.0 28-29|0.0.0.0.0.0 27-28|0.0.0 25-26|0.0.0.1 24-25|0.0.0.4 23-24|0.0.0.2 22-23|0.0.0.3.0.1.0 20-21|0.0.0.3.0.1 19-20|0.0.0.3.0 15-16|0.0.0.3.0.0 14-15|0.0.0.3.0.0.0 13-14|0.0.0.3.0.0.1 10-11|0.0.0.3 8-9|0.0.0.3.1.0 4-5|0.0.0.3.1 0-1|0.0.0.3.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:51.290
# ::node	0	artificial	32-33
# ::node	0.0	or	31-32
# ::node	0.0.0	add-01	27-28
# ::node	0.0.0.0	color	30-31
# ::node	0.0.0.0.0	sugar-cane	29-30
# ::node	0.0.0.0.0.0	salt	28-29
# ::node	0.0.0.1	long	25-26
# ::node	0.0.0.2	and	23-24
# ::node	0.0.0.3	and	10-11
# ::node	0.0.0.3.0	promise-01	19-20
# ::node	0.0.0.3.0.0	food	15-16
# ::node	0.0.0.3.0.0.0	baby	14-15
# ::node	0.0.0.3.0.0.1	commerce	13-14
# ::node	0.0.0.3.0.1	lot	20-21
# ::node	0.0.0.3.0.1.0	vitamin	22-23
# ::node	0.0.0.3.0.2	most	0-1
# ::node	0.0.0.3.1	rely-01	4-5
# ::node	0.0.0.3.1.0	packet	8-9
# ::node	0.0.0.4	-	24-25
# ::root	0	artificial
(a / artificial 
      :op-of (o / or 
            :ARG0-of (a2 / add-01 
                  :ARG1 (c / color 
                        :mod (s / sugar-cane 
                              :mod (s2 / salt))) 
                  :duration (l / long) 
                  :op-of (a3 / and) 
                  :op-of (a4 / and 
                        :ARG0-of (p / promise-01 
                              :ARG1 (f / food 
                                    :mod (b / baby) 
                                    :mod (c2 / commerce)) 
                              :ARG2 (l2 / lot 
                                    :quant-of (v / vitamin)) 
                              :op-of (m / most)) 
                        :ARG1-of (r / rely-01 
                              :ARG0 (p2 / packet))) 
                  :polarity (- / -))))

# ::snt remind crew that they have promised to return later to meet the passengers and their relatives for an open evening and that tomorrow is the jumble sale to raise funds for the onboard computer
# ::tok remind crew that they have promised to return later to meet the passengers and their relatives for an open evening and that tomorrow is the jumble sale to raise funds for the onboard computer
# ::alignments 33-34|0.1.0.0.0.1 29-30|0.1.0.0 28-29|0.1.0.0.0 22-23|0.1.0.0.0.0 20-21|0.0.2 19-20|0.1.0.2 15-16|0.1.0.1+0.1.0 13-14|0 12-13|0.1 8-9|0.0.1 5-6|0.0 3-4|0.0.0 1-2|0.0.2.0.0 0-1|0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:51.709
# ::node	0	and	13-14
# ::node	0.0	promise-01	5-6
# ::node	0.0.0	they	3-4
# ::node	0.0.1	late	8-9
# ::node	0.0.2	and	20-21
# ::node	0.0.2.0	remind-01	0-1
# ::node	0.0.2.0.0	crew	1-2
# ::node	0.1	passenger	12-13
# ::node	0.1.0	have-rel-role-91	15-16
# ::node	0.1.0.0	fund	29-30
# ::node	0.1.0.0.0	raise-01	28-29
# ::node	0.1.0.0.0.0	tomorrow	22-23
# ::node	0.1.0.0.0.1	computer	33-34
# ::node	0.1.0.1	relative	15-16
# ::node	0.1.0.2	evening	19-20
# ::root	0	and
# ::edge	and	op1	promise-01	0	0.0	
# ::edge	and	op1	promise-01	0.0.2	0.0	
# ::edge	and	op2	passenger	0	0.1	
# ::edge	have-rel-role-91	ARG0	fund	0.1.0	0.1.0.0	
# ::edge	have-rel-role-91	ARG1	passenger	0.1.0	0.1	
# ::edge	have-rel-role-91	ARG2	relative	0.1.0	0.1.0.1	
# ::edge	have-rel-role-91	location	evening	0.1.0	0.1.0.2	
# ::edge	promise-01	ARG0	they	0.0	0.0.0	
# ::edge	promise-01	ARG1	late	0.0	0.0.1	
# ::edge	raise-01	ARG0	tomorrow	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	raise-01	ARG1	computer	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	raise-01	ARG2	fund	0.1.0.0.0	0.1.0.0	
# ::edge	remind-01	ARG1	and	0.0.2.0	0.0.2	
# ::edge	remind-01	ARG2	crew	0.0.2.0	0.0.2.0.0	
(a2 / and 
      :op1 (p2 / promise-01 
            :ARG0 (t2 / they) 
            :ARG1 (l / late) 
            :op-of (a / and 
                  :ARG1-of (r3 / remind-01 
                        :ARG2 (c2 / crew)))) 
      :op2 (p / passenger 
            :ARG1-of (h / have-rel-role-91 
                  :ARG0 (f / fund 
                        :ARG2-of (r / raise-01 
                              :ARG0 (t / tomorrow) 
                              :ARG1 (c / computer))) 
                  :ARG2 (r2 / relative) 
                  :location (e / evening))))

# ::snt scott nisbet a central defender has rejected a move to the premier divisions bottom club although the midfield player ian mccall has promised to give dundee an answer shortly after discussing terms with their manager gordon wallace this afternoon
# ::tok scott nisbet a central defender has rejected a move to the premier divisions bottom club although the midfield player ian mccall has promised to give dundee an answer shortly after discussing terms with their manager gordon wallace this afternoon
# ::alignments 38-39|0.3 37-38|0.0.0.1.0 34-35|0.0.0.0.0.0 31-32|0.1 30-31|0 29-30|0.2 28-29|0.2.0 27-28|0.0.0.1.1 24-25|0.0.0.1 22-23|0.0.0 19-21|0.0.1.0+0.0.1.1+0.0.1+0.0 14-15|0.0.0.0 13-14|0.0.0.0.0 12-13|0.0.0.1.1.0.1 11-12|0.0.0.1.1.0.1.0 6-7|0.0.0.1.1.0 4-5|0.0.0.1.1.0.0 3-4|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:52.218
# ::node	0	discuss-01	30-31
# ::node	0.0	person	19-21
# ::node	0.0.0	promise-01	22-23
# ::node	0.0.0.0	club	14-15
# ::node	0.0.0.0.0	bottom	13-14
# ::node	0.0.0.0.0.0	manage-01	34-35
# ::node	0.0.0.0.1	central	3-4
# ::node	0.0.0.1	give-01	24-25
# ::node	0.0.0.1.0	this	37-38
# ::node	0.0.0.1.1	answer-01	27-28
# ::node	0.0.0.1.1.0	reject-01	6-7
# ::node	0.0.0.1.1.0.0	defend-01	4-5
# ::node	0.0.0.1.1.0.1	division	12-13
# ::node	0.0.0.1.1.0.1.0	premier	11-12
# ::node	0.0.1	name	19-21
# ::node	0.0.1.0	"mccall"	19-21
# ::node	0.0.1.1	"ian"	19-21
# ::node	0.1	term	31-32
# ::node	0.2	after	29-30
# ::node	0.2.0	short	28-29
# ::node	0.3	afternoon	38-39
# ::root	0	discuss-01
# ::edge	after	mod	short	0.2	0.2.0	
# ::edge	after	op1	discuss-01	0.2	0	
# ::edge	club	mod	bottom	0.0.0.0	0.0.0.0.0	
# ::edge	club	mod	central	0.0.0.0	0.0.0.0.1	
# ::edge	discuss-01	ARG0	person	0	0.0	
# ::edge	discuss-01	ARG1	term	0	0.1	
# ::edge	discuss-01	time	afternoon	0	0.3	
# ::edge	division	mod	premier	0.0.0.1.1.0.1	0.0.0.1.1.0.1.0	
# ::edge	give-01	ARG0	this	0.0.0.1	0.0.0.1.0	
# ::edge	give-01	ARG1	answer-01	0.0.0.1	0.0.0.1.1	
# ::edge	manage-01	ARG1	bottom	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	name	op1	"mccall"	0.0.1	0.0.1.0	
# ::edge	name	op2	"ian"	0.0.1	0.0.1.1	
# ::edge	person	name	name	0.0	0.0.1	
# ::edge	promise-01	ARG0	person	0.0.0	0.0	
# ::edge	promise-01	ARG1	club	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG2	give-01	0.0.0	0.0.0.1	
# ::edge	reject-01	ARG0	defend-01	0.0.0.1.1.0	0.0.0.1.1.0.0	
# ::edge	reject-01	ARG1	answer-01	0.0.0.1.1.0	0.0.0.1.1	
# ::edge	reject-01	ARG2	division	0.0.0.1.1.0	0.0.0.1.1.0.1	
(d / discuss-01 
      :ARG0 (p2 / person 
            :ARG0-of (p / promise-01 
                  :ARG1 (c / club 
                        :mod (b / bottom 
                              :ARG1-of (m / manage-01)) 
                        :mod (c2 / central)) 
                  :ARG2 (g / give-01 
                        :ARG0 (t / this) 
                        :ARG1 (a3 / answer-01 
                              :ARG1-of (r / reject-01 
                                    :ARG0 (d3 / defend-01) 
                                    :ARG2 (d2 / division 
                                          :mod (p3 / premier)))))) 
            :name (n / name 
                  :op1 "mccall" 
                  :op2 "ian")) 
      :ARG1 (t2 / term) 
      :op-of (a2 / after 
            :mod (s / short)) 
      :time (a / afternoon))

# ::snt it is conceivable that audiences at the ninehour live mahabharata did experience something of ganeshas promised transformation
# ::tok it is conceivable that audiences at the ninehour live mahabharata did experience something of ganeshas promised transformation
# ::alignments 16-17|0.2 15-16|0 12-13|0.1 11-12|0.1.0 8-9|0.2.0.0.0 4-5|0.0 2-3|0.2.0.0 0-1|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:52.269
# ::node	0	promise-01	15-16
# ::node	0.0	audience	4-5
# ::node	0.1	something	12-13
# ::node	0.1.0	experience-01	11-12
# ::node	0.2	transform-01	16-17
# ::node	0.2.0	it	0-1
# ::node	0.2.0.0	conceive-01	2-3
# ::node	0.2.0.0.0	live-01	8-9
# ::root	0	promise-01
# ::edge	conceive-01	ARG1	it	0.2.0.0	0.2.0	
# ::edge	experience-01	ARG1	something	0.1.0	0.1	
# ::edge	live-01	ARG1	conceive-01	0.2.0.0.0	0.2.0.0	
# ::edge	promise-01	ARG0	audience	0	0.0	
# ::edge	promise-01	ARG1	something	0	0.1	
# ::edge	promise-01	ARG2	transform-01	0	0.2	
# ::edge	transform-01	ARG1	it	0.2	0.2.0	
(p / promise-01 
      :ARG0 (a / audience) 
      :ARG1 (s / something 
            :ARG1-of (e / experience-01)) 
      :ARG2 (t / transform-01 
            :ARG1 (i / it 
                  :ARG1-of (c / conceive-01 
                        :ARG1-of (l / live-01)))))

# ::snt when the campaign began just over a week ago it promised voters good profits and a long bull run which seemed a safe enough pledge
# ::tok when the campaign began just over a week ago it promised voters good profits and a long bull run which seemed a safe enough pledge
# ::alignments 24-25|0 23-24|0.2 22-23|0.1 20-21|0.1.1 17-18|0.1.0 14-15|0.0.1.1 13-14|0.0.1.1.0 12-13|0.0.1.3 11-12|0.0.0+0.0 10-11|0.0.1 9-10|0.0.1.0 7-8|0.0.1.2.0.0 4-5|0.0.1.2.0.1 3-4|0.0.1.2.0 2-3|0.0.1.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:52.532
# ::node	0	pledge-01	24-25
# ::node	0.0	person	11-12
# ::node	0.0.0	vote-01	11-12
# ::node	0.0.1	promise-01	10-11
# ::node	0.0.1.0	it	9-10
# ::node	0.0.1.1	and	14-15
# ::node	0.0.1.1.0	profit-01	13-14
# ::node	0.0.1.2	campaign-01	2-3
# ::node	0.0.1.2.0	begin-01	3-4
# ::node	0.0.1.2.0.0	week	7-8
# ::node	0.0.1.2.0.1	just	4-5
# ::node	0.0.1.3	good	12-13
# ::node	0.1	safe-41	22-23
# ::node	0.1.0	bull	17-18
# ::node	0.1.1	seem-01	20-21
# ::node	0.2	enough	23-24
# ::root	0	pledge-01
# ::edge	and	op1	profit-01	0.0.1.1	0.0.1.1.0	
# ::edge	begin-01	ARG0	campaign-01	0.0.1.2.0	0.0.1.2	
# ::edge	begin-01	ARG1	week	0.0.1.2.0	0.0.1.2.0.0	
# ::edge	begin-01	mod	just	0.0.1.2.0	0.0.1.2.0.1	
# ::edge	campaign-01	ARG1	promise-01	0.0.1.2	0.0.1	
# ::edge	good	condition	promise-01	0.0.1.3	0.0.1	
# ::edge	pledge-01	ARG0	person	0	0.0	
# ::edge	pledge-01	quant	enough	0	0.2	
# ::edge	promise-01	ARG0	it	0.0.1	0.0.1.0	
# ::edge	promise-01	ARG1	and	0.0.1	0.0.1.1	
# ::edge	promise-01	ARG2	person	0.0.1	0.0	
# ::edge	safe-41	ARG0	bull	0.1	0.1.0	
# ::edge	safe-41	ARG1	pledge-01	0.1	0	
# ::edge	seem-01	ARG1	safe-41	0.1.1	0.1	
# ::edge	vote-01	ARG0	person	0.0.0	0.0	
(p / pledge-01 
      :ARG0 (p3 / person 
            :ARG0-of (v / vote-01) 
            :ARG2-of (p4 / promise-01 
                  :ARG0 (i / it) 
                  :ARG1 (a / and 
                        :op1 (p2 / profit-01)) 
                  :ARG1-of (c / campaign-01 
                        :ARG0-of (b2 / begin-01 
                              :ARG1 (w / week) 
                              :mod (j / just))) 
                  :condition-of (g / good))) 
      :ARG1-of (s / safe-41 
            :ARG0 (b / bull) 
            :ARG1-of (s2 / seem-01)) 
      :quant (e / enough))

# ::snt 2 million has been promised
# ::tok 2 million has been promised
# ::alignments 4-5|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:52.537
# ::node	0	promise-01	4-5
# ::node	0.0	2	0-1
# ::root	0	promise-01
# ::edge	promise-01	ARG1	2	0	0.0	
(p / promise-01 
      :ARG1 2)

# ::snt with greeces general election on sunday promising either a very narrow overall majority for the new democracy conservatives or perhaps for a fragile leftwing alliance western diplomats have grown concerned by the countrys accumulation of pressing economic and foreign policy problems
# ::tok with greeces general election on sunday promising either a very narrow overall majority for the new democracy conservatives or perhaps for a fragile leftwing alliance western diplomats have grown concerned by the countrys accumulation of pressing economic and foreign policy problems
# ::alignments 40-41|0.1 39-40|0.1.1 38-39|0.0 37-38|0 36-37|0.1.1.0 35-36|0.1.0 29-30|0.1.0.0.1 28-29|0.1.0.0 26-27|0.1.0.0.2.0+0.1.0.0.2 25-26|0.1.0.0.1.0.0.0.0.1.2.0.0+0.1.0.0.1.0.0.0.0.1.2.0+0.1.0.0.1.0.0.0.0.1.2 24-25|0.1.0.0.1.0.0.0.0.1.1 22-23|0.1.0.0.1.0.0.0.0.1.1.0 19-20|0.1.0.0.1.0.0.0.0.1.0 18-19|0.1.0.0.1.0.0.0.0.1 17-18|0.1.0.0.1.0.0.0.0 16-17|0.1.0.0.1.0.0.0 15-16|0.1.0.0.1.0.0.0.0.0 12-13|0.1.0.0.1.0.1 11-12|0.1.0.0.1.0.1.1 10-11|0.1.0.0.1.0.1.0 9-10|0.1.0.0.1.0.1.0.0 7-8|0.1.0.0.0 6-7|0.1.0.0.1.0 5-6|0.1.0.0.1.0.2 3-4|0.1.0.0.1.0.0 2-3|0.1.0.0.1.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:53.984
# ::node	0	and	37-38
# ::node	0.0	foreign	38-39
# ::node	0.1	problem	40-41
# ::node	0.1.0	press-01	35-36
# ::node	0.1.0.0	grow-03	28-29
# ::node	0.1.0.0.0	either	7-8
# ::node	0.1.0.0.1	concern-01	29-30
# ::node	0.1.0.0.1.0	promise-01	6-7
# ::node	0.1.0.0.1.0.0	elect-01	3-4
# ::node	0.1.0.0.1.0.0.0	democracy	16-17
# ::node	0.1.0.0.1.0.0.0.0	conservative	17-18
# ::node	0.1.0.0.1.0.0.0.0.0	new	15-16
# ::node	0.1.0.0.1.0.0.0.0.1	or	18-19
# ::node	0.1.0.0.1.0.0.0.0.1.0	perhaps	19-20
# ::node	0.1.0.0.1.0.0.0.0.1.1	alliance	24-25
# ::node	0.1.0.0.1.0.0.0.0.1.1.0	fragile	22-23
# ::node	0.1.0.0.1.0.0.0.0.1.2	world-region	25-26
# ::node	0.1.0.0.1.0.0.0.0.1.2.0	name	25-26
# ::node	0.1.0.0.1.0.0.0.0.1.2.0.0	"West"	25-26
# ::node	0.1.0.0.1.0.0.1	general	2-3
# ::node	0.1.0.0.1.0.1	majority	12-13
# ::node	0.1.0.0.1.0.1.0	narrow-01	10-11
# ::node	0.1.0.0.1.0.1.0.0	very	9-10
# ::node	0.1.0.0.1.0.1.1	overall	11-12
# ::node	0.1.0.0.1.0.2	sunday	5-6
# ::node	0.1.0.0.2	have-org-role-91	26-27
# ::node	0.1.0.0.2.0	diplomat	26-27
# ::node	0.1.1	policy	39-40
# ::node	0.1.1.0	economy	36-37
# ::root	0	and
# ::edge	alliance	mod	fragile	0.1.0.0.1.0.0.0.0.1.1	0.1.0.0.1.0.0.0.0.1.1.0	
# ::edge	and	op1	foreign	0	0.0	
# ::edge	and	op2	problem	0	0.1	
# ::edge	concern-01	ARG1	promise-01	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	conservative	mod	democracy	0.1.0.0.1.0.0.0.0	0.1.0.0.1.0.0.0	
# ::edge	conservative	mod	new	0.1.0.0.1.0.0.0.0	0.1.0.0.1.0.0.0.0.0	
# ::edge	elect-01	ARG1	democracy	0.1.0.0.1.0.0	0.1.0.0.1.0.0.0	
# ::edge	elect-01	mod	general	0.1.0.0.1.0.0	0.1.0.0.1.0.0.1	
# ::edge	grow-03	ARG0	either	0.1.0.0	0.1.0.0.0	
# ::edge	grow-03	ARG1	concern-01	0.1.0.0	0.1.0.0.1	
# ::edge	grow-03	ARG2	have-org-role-91	0.1.0.0	0.1.0.0.2	
# ::edge	have-org-role-91	ARG2	diplomat	0.1.0.0.2	0.1.0.0.2.0	
# ::edge	majority	mod	overall	0.1.0.0.1.0.1	0.1.0.0.1.0.1.1	
# ::edge	name	op1	"West"	0.1.0.0.1.0.0.0.0.1.2.0	0.1.0.0.1.0.0.0.0.1.2.0.0	
# ::edge	narrow-01	ARG1	majority	0.1.0.0.1.0.1.0	0.1.0.0.1.0.1	
# ::edge	narrow-01	degree	very	0.1.0.0.1.0.1.0	0.1.0.0.1.0.1.0.0	
# ::edge	or	op1	conservative	0.1.0.0.1.0.0.0.0.1	0.1.0.0.1.0.0.0.0	
# ::edge	or	op2	perhaps	0.1.0.0.1.0.0.0.0.1	0.1.0.0.1.0.0.0.0.1.0	
# ::edge	or	op3	alliance	0.1.0.0.1.0.0.0.0.1	0.1.0.0.1.0.0.0.0.1.1	
# ::edge	or	op4	world-region	0.1.0.0.1.0.0.0.0.1	0.1.0.0.1.0.0.0.0.1.2	
# ::edge	policy	mod	economy	0.1.1	0.1.1.0	
# ::edge	press-01	ARG1	problem	0.1.0	0.1	
# ::edge	press-01	condition	grow-03	0.1.0	0.1.0.0	
# ::edge	problem	mod	policy	0.1	0.1.1	
# ::edge	promise-01	ARG0	elect-01	0.1.0.0.1.0	0.1.0.0.1.0.0	
# ::edge	promise-01	ARG1	majority	0.1.0.0.1.0	0.1.0.0.1.0.1	
# ::edge	promise-01	manner	sunday	0.1.0.0.1.0	0.1.0.0.1.0.2	
# ::edge	world-region	name	name	0.1.0.0.1.0.0.0.0.1.2	0.1.0.0.1.0.0.0.0.1.2.0	
(a / and 
      :op1 (f / foreign) 
      :op2 (p / problem 
            :ARG1-of (p3 / press-01 
                  :condition (g / grow-03 
                        :ARG0 (e2 / either) 
                        :ARG1 (c / concern-01 
                              :ARG1 (p5 / promise-01 
                                    :ARG0 (e3 / elect-01 
                                          :ARG1 (d2 / democracy 
                                                :mod-of (c2 / conservative 
                                                      :mod (n2 / new) 
                                                      :op-of (o / or 
                                                            :op1 (p4 / perhaps) 
                                                            :op2 (a2 / alliance 
                                                                  :mod (f2 / fragile)) 
                                                            :op3 (w / world-region 
                                                                  :name (n / name 
                                                                        :op1 "West"))))) 
                                          :mod (g2 / general)) 
                                    :ARG1 (m / majority 
                                          :ARG1-of (n3 / narrow-01 
                                                :degree (v / very)) 
                                          :mod (o2 / overall)) 
                                    :manner (s / sunday))) 
                        :ARG2 (h / have-org-role-91 
                              :ARG2 (d / diplomat)))) 
            :mod (p2 / policy 
                  :mod (e / economy))))

# ::snt in front of the church of st maurice i met lenka a music student who had promised to show me what she described as the biggest organ in central europe all 2311 pipes of it the largest more than thirty feet tall the smallest eight millimetres of solid silver
# ::tok in front of the church of st maurice i met lenka a music student who had promised to show me what she described as the biggest organ in central europe all 2311 pipes of it the largest more than thirty feet tall the smallest eight millimetres of solid silver
# ::alignments 48-49|0 47-48|0.0 44-45|0.0.0.0.0.1 43-44|0.0.0.0.0.0+0.0.0.0.0 41-42|0.0.0.0.1.1.2.0 40-41|0.0.0.0.1.1.2 36-37|0.0.0.0.1.1.0.0+0.0.0.0.1.1.0 34-35|0.0.0.0.1.1.1.0.0 31-32|0.0.0.0.1.1.1.1.3.1+0.0.0.0.1.1.1.1.3 30-31|0.0.0.0.1.1.1.1.3.0 29-30|0.0.0.0.2.0.1.0+0.0.0.0.2.0.1+0.0.0.0.2.0 28-29|0.0.0.0.2.0.0 26-27|0.0.0.0.2 25-26|0.0.0.0.2.1.0+0.0.0.0.2.1 22-23|0.0.0.0 21-22|0.0.0 18-19|0.0.0.0.1 16-17|0.0.0.0.1.1 13-14|0.0.0.0.1.1.1.0+0.0.0.0.1.1.1 12-13|0.0.0.0.1.0 9-10|0.0.0.0.1.1.1.1 8-9|0.0.0.0.1.1.1.1.0 4-5|0.0.0.0.1.1.1.1.1 1-2|0.0.0.0.1.1.1.1.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:55.482
# ::node	0	silver	48-49
# ::node	0.0	solid	47-48
# ::node	0.0.0	she	21-22
# ::node	0.0.0.0	describe-01	22-23
# ::node	0.0.0.0.0	small	43-44
# ::node	0.0.0.0.0.0	most	43-44
# ::node	0.0.0.0.0.1	8	44-45
# ::node	0.0.0.0.1	show-01	18-19
# ::node	0.0.0.0.1.0	music	12-13
# ::node	0.0.0.0.1.1	promise-01	16-17
# ::node	0.0.0.0.1.1.0	large	36-37
# ::node	0.0.0.0.1.1.0.0	most	36-37
# ::node	0.0.0.0.1.1.1	person	13-14
# ::node	0.0.0.0.1.1.1.0	study-01	13-14
# ::node	0.0.0.0.1.1.1.0.0	it	34-35
# ::node	0.0.0.0.1.1.1.1	meet-03	9-10
# ::node	0.0.0.0.1.1.1.1.0	i	8-9
# ::node	0.0.0.0.1.1.1.1.1	church	4-5
# ::node	0.0.0.0.1.1.1.1.2	front	1-2
# ::node	0.0.0.0.1.1.1.1.3	date-entity	31-32
# ::node	0.0.0.0.1.1.1.1.3.0	all	30-31
# ::node	0.0.0.0.1.1.1.1.3.1	2311	31-32
# ::node	0.0.0.0.1.1.2	foot	40-41
# ::node	0.0.0.0.1.1.2.0	tall	41-42
# ::node	0.0.0.0.2	organ	26-27
# ::node	0.0.0.0.2.0	continent	29-30
# ::node	0.0.0.0.2.0.0	central	28-29
# ::node	0.0.0.0.2.0.1	name	29-30
# ::node	0.0.0.0.2.0.1.0	"Europe"	29-30
# ::node	0.0.0.0.2.1	big	25-26
# ::node	0.0.0.0.2.1.0	most	25-26
# ::root	0	silver
# ::edge	all	op1	date-entity	0.0.0.0.1.1.1.1.3.0	0.0.0.0.1.1.1.1.3	
# ::edge	big	degree	most	0.0.0.0.2.1	0.0.0.0.2.1.0	
# ::edge	continent	mod	central	0.0.0.0.2.0	0.0.0.0.2.0.0	
# ::edge	continent	name	name	0.0.0.0.2.0	0.0.0.0.2.0.1	
# ::edge	date-entity	year	2311	0.0.0.0.1.1.1.1.3	0.0.0.0.1.1.1.1.3.1	
# ::edge	describe-01	ARG0	she	0.0.0.0	0.0.0	
# ::edge	describe-01	ARG1	small	0.0.0.0	0.0.0.0.0	
# ::edge	describe-01	ARG2	organ	0.0.0.0	0.0.0.0.2	
# ::edge	foot	op1	promise-01	0.0.0.0.1.1.2	0.0.0.0.1.1	
# ::edge	large	degree	most	0.0.0.0.1.1.0	0.0.0.0.1.1.0.0	
# ::edge	meet-03	ARG0	person	0.0.0.0.1.1.1.1	0.0.0.0.1.1.1	
# ::edge	meet-03	ARG1	i	0.0.0.0.1.1.1.1	0.0.0.0.1.1.1.1.0	
# ::edge	meet-03	ARG2	church	0.0.0.0.1.1.1.1	0.0.0.0.1.1.1.1.1	
# ::edge	meet-03	location	front	0.0.0.0.1.1.1.1	0.0.0.0.1.1.1.1.2	
# ::edge	meet-03	time	date-entity	0.0.0.0.1.1.1.1	0.0.0.0.1.1.1.1.3	
# ::edge	name	op1	"Europe"	0.0.0.0.2.0.1	0.0.0.0.2.0.1.0	
# ::edge	organ	location	continent	0.0.0.0.2	0.0.0.0.2.0	
# ::edge	organ	mod	big	0.0.0.0.2	0.0.0.0.2.1	
# ::edge	promise-01	ARG0	large	0.0.0.0.1.1	0.0.0.0.1.1.0	
# ::edge	promise-01	ARG1	person	0.0.0.0.1.1	0.0.0.0.1.1.1	
# ::edge	promise-01	ARG2	show-01	0.0.0.0.1.1	0.0.0.0.1	
# ::edge	show-01	ARG0	music	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	show-01	ARG1	describe-01	0.0.0.0.1	0.0.0.0	
# ::edge	silver	mod	solid	0	0.0	
# ::edge	small	degree	most	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	small	op1	8	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	solid	domain	she	0.0	0.0.0	
# ::edge	study-01	ARG0	person	0.0.0.0.1.1.1.0	0.0.0.0.1.1.1	
# ::edge	study-01	ARG1	it	0.0.0.0.1.1.1.0	0.0.0.0.1.1.1.0.0	
# ::edge	tall	domain	foot	0.0.0.0.1.1.2.0	0.0.0.0.1.1.2	
(s / silver 
      :mod (s2 / solid 
            :domain (s4 / she 
                  :ARG0-of (d2 / describe-01 
                        :ARG1 (s3 / small 
                              :degree (m / most) 
                              :op1 8) 
                        :ARG1-of (s5 / show-01 
                              :ARG0 (m4 / music) 
                              :ARG2-of (p / promise-01 
                                    :ARG0 (l / large 
                                          :degree (m2 / most)) 
                                    :ARG1 (p2 / person 
                                          :ARG0-of (s6 / study-01 
                                                :ARG1 (i / it)) 
                                          :ARG0-of (m5 / meet-03 
                                                :ARG1 (i2 / i) 
                                                :ARG2 (c3 / church) 
                                                :location (f2 / front) 
                                                :time (d / date-entity 
                                                      :op-of (a / all) 
                                                      :year 2311))) 
                                    :op-of (f / foot 
                                          :domain-of (t / tall)))) 
                        :ARG2 (o / organ 
                              :location (c / continent 
                                    :mod (c2 / central) 
                                    :name (n / name 
                                          :op1 "Europe")) 
                              :mod (b / big 
                                    :degree (m3 / most)))))))

# ::snt soviet russia promised to stay neutral if germany were involved in war there were also secret clauses limiting the gains which the germans could make in poland
# ::tok soviet russia promised to stay neutral if germany were involved in war there were also secret clauses limiting the gains which the germans could make in poland
# ::alignments 23-24|0 22-23|0.0.0.2.0.0.0.0+0.0.0.2.0.0.0+0.0.0.2.0.0+0.0.0.2.0 17-18|0.0.0.2.1.0 16-17|0.0.0.2.1.0.0 15-16|0.0.0.2.1.0.0.0 14-15|0.0.0.0 11-12|0.0.0.2.1 9-10|0.0.0.2 5-6|0.0.0.1 4-5|0.0.0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:55.606
# ::node	0	possible	23-24
# ::node	0.0	promise-01	2-3
# ::node	0.0.0	stay-01	4-5
# ::node	0.0.0.0	also	14-15
# ::node	0.0.0.1	neutral	5-6
# ::node	0.0.0.2	involve-01	9-10
# ::node	0.0.0.2.0	person	22-23
# ::node	0.0.0.2.0.0	country	22-23
# ::node	0.0.0.2.0.0.0	name	22-23
# ::node	0.0.0.2.0.0.0.0	"Germany"	22-23
# ::node	0.0.0.2.1	war	11-12
# ::node	0.0.0.2.1.0	limit-01	17-18
# ::node	0.0.0.2.1.0.0	clause	16-17
# ::node	0.0.0.2.1.0.0.0	secret	15-16
# ::root	0	possible
(p / possible 
      :ARG0-of (p3 / promise-01 
            :ARG1 (s2 / stay-01 
                  :ARG0 (a / also) 
                  :ARG3 (n2 / neutral) 
                  :condition (i / involve-01 
                        :ARG1 (p2 / person 
                              :mod (c / country 
                                    :name (n / name 
                                          :op1 "Germany"))) 
                        :ARG2 (w / war 
                              :ARG0-of (l / limit-01 
                                    :ARG1 (c2 / clause 
                                          :mod (s / secret))))))))

# ::snt how had a conservative government happened  where were the golden days which paris and chicago and grosvenor square had promised them
# ::tok how had a conservative government happened where were the golden days which paris and chicago and grosvenor square had promised them
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:55.607
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt my colleague on the independent has promised a drink in return for a favourable mention
# ::tok my colleague on the independent has promised a drink in return for a favourable mention
# ::alignments 14-15|0.0.0.0 8-9|0.0 6-7|0.0.0 4-5|0.1+0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:55.639
# ::node	0	depend-01	4-5
# ::node	0.0	drink-01	8-9
# ::node	0.0.0	promise-01	6-7
# ::node	0.0.0.0	mention-01	14-15
# ::node	0.1	-	4-5
# ::root	0	depend-01
# ::edge	depend-01	ARG1	drink-01	0	0.0	
# ::edge	depend-01	polarity	-	0	0.1	
# ::edge	mention-01	ARG1	promise-01	0.0.0.0	0.0.0	
# ::edge	promise-01	ARG1	drink-01	0.0.0	0.0	
(d2 / depend-01 
      :ARG1 (d / drink-01 
            :ARG1-of (p / promise-01 
                  :ARG1-of (m / mention-01))) 
      :polarity -)

# ::snt she promised and delivered complete confidentiality
# ::tok she promised and delivered complete confidentiality
# ::alignments 5-6|0.0.0.0.0 4-5|0.0.0.0.0.0 3-4|0.0.0.0 2-3|0 1-2|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:55.653
# ::node	0	and	2-3
# ::node	0.0	promise-01	1-2
# ::node	0.0.0	she	0-1
# ::node	0.0.0.0	deliver-01	3-4
# ::node	0.0.0.0.0	confidentiality	5-6
# ::node	0.0.0.0.0.0	complete	4-5
# ::root	0	and
# ::edge	and	op1	promise-01	0	0.0	
# ::edge	confidentiality	mod	complete	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	deliver-01	ARG0	she	0.0.0.0	0.0.0	
# ::edge	deliver-01	ARG1	confidentiality	0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	ARG0	she	0.0	0.0.0	
(a / and 
      :op1 (p / promise-01 
            :ARG0 (s / she 
                  :ARG0-of (d / deliver-01 
                        :ARG1 (c / confidentiality 
                              :mod (c2 / complete))))))

# ::snt 9131 promise-v 800221 Promising 537527
# ::tok 9131 promise - v 800221 Promising 537527
# ::alignments 6-7|0.0.2+0.0.1+0.0.0+0.0 4-5|0.1.0.2+0.1.0.1+0.1.0.0+0.1.0 1-2|0 0-1|0.1.1+0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:55.688
# ::node	0	promise-01	1-2
# ::node	0.0	date-entity	6-7
# ::node	0.0.0	27	6-7
# ::node	0.0.1	75	6-7
# ::node	0.0.2	53	6-7
# ::node	0.1	date-entity	0-1
# ::node	0.1.0	date-entity	4-5
# ::node	0.1.0.0	21	4-5
# ::node	0.1.0.1	2	4-5
# ::node	0.1.0.2	80	4-5
# ::node	0.1.1	9131	0-1
# ::root	0	promise-01
# ::edge	date-entity	day	21	0.1.0	0.1.0.0	
# ::edge	date-entity	day	27	0.0	0.0.0	
# ::edge	date-entity	month	2	0.1.0	0.1.0.1	
# ::edge	date-entity	month	75	0.0	0.0.1	
# ::edge	date-entity	name	date-entity	0.1	0.1.0	
# ::edge	date-entity	year	53	0.0	0.0.2	
# ::edge	date-entity	year	80	0.1.0	0.1.0.2	
# ::edge	date-entity	year	9131	0.1	0.1.1	
# ::edge	promise-01	ARG1	date-entity	0	0.0	
# ::edge	promise-01	time	date-entity	0	0.1	
(p / promise-01 
      :ARG1 (d / date-entity 
            :day 27 
            :month 75 
            :year 53) 
      :time (d3 / date-entity 
            :name (d2 / date-entity 
                  :day 21 
                  :month 2 
                  :year 80) 
            :year 9131))

# ::snt  He was calling her.  Promising her.
# ::tok He was calling her . Promising her .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:55.688
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt EMPTY_SENTENCE
# ::tok EMPTY_SENTENCE
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:55.691
# ::node	0	amr-empty	0-1
# ::root	0	amr-empty
(a / amr-empty)

# ::snt so far we have discussed the right to promise
# ::tok so far we have discussed the right to promise
# ::alignments 8-9|0.1 4-5|0 2-3|0.0 1-2|0.2 0-1|0.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:55.703
# ::node	0	discuss-01	4-5
# ::node	0.0	we	2-3
# ::node	0.1	promise-01	8-9
# ::node	0.2	far	1-2
# ::node	0.3	so	0-1
# ::root	0	discuss-01
# ::edge	discuss-01	ARG0	we	0	0.0	
# ::edge	discuss-01	ARG2	promise-01	0	0.1	
# ::edge	discuss-01	location	far	0	0.2	
# ::edge	discuss-01	time	so	0	0.3	
(d / discuss-01 
      :ARG0 (w / we) 
      :ARG2 (p / promise-01) 
      :location (f / far) 
      :time (s / so))

# ::snt has anything happened to it  before harry could understand this question they had arrived in the forecourt of the royal charitable hospital in five minutes just as howard had promised
# ::tok has anything happened to it before harry could understand this question they had arrived in the forecourt of the royal charitable hospital in five minutes just as howard had promised
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:55.704
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt   mr forsyth yesterday met his new staff and promised to listen before acting
# ::tok mr forsyth yesterday met his new staff and promised to listen before acting
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:55.706
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt admittedly banque indosuez has promised not to bid for 12 months and insists it is looking to forge a friendly partnership
# ::tok admittedly banque indosuez has promised not to bid for 12 months and insists it is looking to forge a friendly partnership
# ::alignments 20-21|0.2.1 19-20|0.2.1.0 17-18|0.2 13-14|0.2.0 12-13|0.1 11-12|0 10-11|0.2.0.0.1+0.2.0.0 9-10|0.2.0.0.0 7-8|0.0.0 4-5|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:55.760
# ::node	0	and	11-12
# ::node	0.0	promise-01	4-5
# ::node	0.0.0	bid-01	7-8
# ::node	0.1	insist-01	12-13
# ::node	0.2	forge-02	17-18
# ::node	0.2.0	it	13-14
# ::node	0.2.0.0	temporal-quantity	10-11
# ::node	0.2.0.0.0	12	9-10
# ::node	0.2.0.0.1	month	10-11
# ::node	0.2.1	partner-01	20-21
# ::node	0.2.1.0	friendly-41	19-20
# ::root	0	and
# ::edge	and	op1	promise-01	0	0.0	
# ::edge	and	op2	insist-01	0	0.1	
# ::edge	and	op3	forge-02	0	0.2	
# ::edge	forge-02	ARG0	it	0.2	0.2.0	
# ::edge	forge-02	ARG1	partner-01	0.2	0.2.1	
# ::edge	friendly-41	ARG1	partner-01	0.2.1.0	0.2.1	
# ::edge	it	part	temporal-quantity	0.2.0	0.2.0.0	
# ::edge	promise-01	ARG2	bid-01	0.0	0.0.0	
# ::edge	temporal-quantity	quant	12	0.2.0.0	0.2.0.0.0	
# ::edge	temporal-quantity	unit	month	0.2.0.0	0.2.0.0.1	
(a / and 
      :op1 (p2 / promise-01 
            :ARG2 (b / bid-01)) 
      :op2 (i2 / insist-01) 
      :op3 (f2 / forge-02 
            :ARG0 (i / it 
                  :part (t / temporal-quantity 
                        :quant 12 
                        :unit (m / month))) 
            :ARG1 (p / partner-01 
                  :ARG1-of (f / friendly-41))))

# ::snt the mens quarterfinals promise to be more fiercely contested the holders malory facing the unpredictable speedwell rucanor in the tie of the round
# ::tok the mens quarterfinals promise to be more fiercely contested the holders malory facing the unpredictable speedwell rucanor in the tie of the round
# ::alignments 22-23|0.0.0.0.1 19-20|0.0.0.0 14-15|0.0.0.0.0 12-13|0.0.0 10-11|0+0.0 8-9|0.0.0.1 3-4|0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:55.837
# ::node	0	hold-01	10-11
# ::node	0.0	person	10-11
# ::node	0.0.0	face-01	12-13
# ::node	0.0.0.0	tie	19-20
# ::node	0.0.0.0.0	predict-01	14-15
# ::node	0.0.0.0.1	round	22-23
# ::node	0.0.0.1	contest-01	8-9
# ::node	0.0.0.1.0	promise-01	3-4
# ::root	0	hold-01
# ::edge	contest-01	ARG1	face-01	0.0.0.1	0.0.0	
# ::edge	face-01	ARG0	person	0.0.0	0.0	
# ::edge	face-01	ARG1	tie	0.0.0	0.0.0.0	
# ::edge	hold-01	ARG0	person	0	0.0	
# ::edge	predict-01	ARG1	tie	0.0.0.0.0	0.0.0.0	
# ::edge	promise-01	ARG2	contest-01	0.0.0.1.0	0.0.0.1	
# ::edge	tie	location	round	0.0.0.0	0.0.0.0.1	
(h / hold-01 
      :ARG0 (p2 / person 
            :ARG0-of (f / face-01 
                  :ARG1 (t / tie 
                        :ARG1-of (p / predict-01) 
                        :location (r / round)) 
                  :ARG1-of (c / contest-01 
                        :ARG2-of (p3 / promise-01)))))

# ::snt ramona looks back on her highschool romance with ed specifically a saturday night years ago when she waited in tremulous anticipation for eds pickup to return im comin for you he promised lovers words that will later ring with menace
# ::tok ramona looks back on her highschool romance with ed specifically a saturday night years ago when she waited in tremulous anticipation for eds pickup to return im comin for you he promised lovers words that will later ring with menace
# ::alignments 39-40|0.1.0.0.0.0 37-38|0.1.0.0.0 36-37|0.1.0.0.0.1 33-34|0.1.0.0 32-33|0 31-32|0.1 30-31|0.1.0 29-30|0.0.1 23-24|0.1.0.0.0.0.0.0 20-21|0.1.0.0.0.0.0 17-18|0.0 16-17|0.0.0 13-14|0.0.2.1+0.0.2 12-13|0.0.2.0 11-12|0.0.3.0 9-10|0.1.1 2-3|0.0.3.1 1-2|0.0.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:56.387
# ::node	0	lover	32-33
# ::node	0.0	wait-01	17-18
# ::node	0.0.0	she	16-17
# ::node	0.0.1	you	29-30
# ::node	0.0.2	temporal-quantity	13-14
# ::node	0.0.2.0	night	12-13
# ::node	0.0.2.1	year	13-14
# ::node	0.0.3	look-02	1-2
# ::node	0.0.3.0	saturday	11-12
# ::node	0.0.3.1	back	2-3
# ::node	0.1	promise-01	31-32
# ::node	0.1.0	he	30-31
# ::node	0.1.0.0	word	33-34
# ::node	0.1.0.0.0	ring	37-38
# ::node	0.1.0.0.0.0	menace-01	39-40
# ::node	0.1.0.0.0.0.0	anticipate-01	20-21
# ::node	0.1.0.0.0.0.0.0	pickup	23-24
# ::node	0.1.0.0.0.1	late	36-37
# ::node	0.1.1	specific	9-10
# ::root	0	lover
(l2 / lover 
      :ARG2-of (w2 / wait-01 
            :ARG0 (s / she) 
            :ARG1 (y / you) 
            :duration (t / temporal-quantity 
                  :mod (n / night) 
                  :unit (y2 / year)) 
            :time-of (l3 / look-02 
                  :ARG1 (s2 / saturday) 
                  :direction (b / back))) 
      :ARG2-of (p / promise-01 
            :ARG0 (h / he 
                  :poss-of (w / word 
                        :source-of (r / ring 
                              :source (m / menace-01 
                                    :ARG1 (a / anticipate-01 
                                          :ARG1 (p2 / pickup))) 
                              :time (l / late)))) 
            :op-of (s3 / specific)))

# ::snt declaring global warming caused by the build up of carbon dioxide and other gases to be the most worrisome of all environmental threats dr cunningham promised a major longterm programme of energy conservation
# ::tok declaring global warming caused by the build up of carbon dioxide and other gases to be the most worrisome of all environmental threats dr cunningham promised a major longterm programme of energy conservation
# ::alignments 32-33|0.0.1 31-32|0.0.1.0 29-30|0.0 27-28|0.0.2 25-26|0.0.0 22-23|0.1.1.1.0.0.1 21-22|0.1.1.1.0.0.1.0 20-21|0.1.1.0 18-19|0.1.1.1.0.0 17-18|0.1.1.1.0.0.2 13-14|0.1.1.1.0 12-13|0.1.1.1.0.0.0 11-12|0.1.1.1 6-7|0.0.2.0 3-4|0 2-3|0.1 1-2|0.1.0 0-1|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:56.919
# ::node	0	cause-01	3-4
# ::node	0.0	program	29-30
# ::node	0.0.0	promise-01	25-26
# ::node	0.0.1	conserve-01	32-33
# ::node	0.0.1.0	energy	31-32
# ::node	0.0.2	major	27-28
# ::node	0.0.2.0	build-01	6-7
# ::node	0.1	warm-01	2-3
# ::node	0.1.0	globe	1-2
# ::node	0.1.1	declare-01	0-1
# ::node	0.1.1.0	all	20-21
# ::node	0.1.1.1	and	11-12
# ::node	0.1.1.1.0	gas	13-14
# ::node	0.1.1.1.0.0	worry-01	18-19
# ::node	0.1.1.1.0.0.0	other	12-13
# ::node	0.1.1.1.0.0.1	threaten-01	22-23
# ::node	0.1.1.1.0.0.1.0	environment	21-22
# ::node	0.1.1.1.0.0.2	most	17-18
# ::root	0	cause-01
# ::edge	and	op1	declare-01	0.1.1.1	0.1.1	
# ::edge	and	op2	gas	0.1.1.1	0.1.1.1.0	
# ::edge	build-01	ARG1	major	0.0.2.0	0.0.2	
# ::edge	cause-01	ARG0	program	0	0.0	
# ::edge	cause-01	ARG1	warm-01	0	0.1	
# ::edge	conserve-01	ARG1	energy	0.0.1	0.0.1.0	
# ::edge	conserve-01	consist	program	0.0.1	0.0	
# ::edge	declare-01	ARG0	all	0.1.1	0.1.1.0	
# ::edge	declare-01	ARG1	warm-01	0.1.1	0.1	
# ::edge	gas	domain	worry-01	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	program	mod	major	0.0	0.0.2	
# ::edge	promise-01	ARG1	program	0.0.0	0.0	
# ::edge	threaten-01	ARG1	environment	0.1.1.1.0.0.1	0.1.1.1.0.0.1.0	
# ::edge	warm-01	ARG1	globe	0.1	0.1.0	
# ::edge	worry-01	ARG1	other	0.1.1.1.0.0	0.1.1.1.0.0.0	
# ::edge	worry-01	ARG2	threaten-01	0.1.1.1.0.0	0.1.1.1.0.0.1	
# ::edge	worry-01	degree	most	0.1.1.1.0.0	0.1.1.1.0.0.2	
(c2 / cause-01 
      :ARG0 (p / program 
            :ARG1-of (p2 / promise-01) 
            :consist-of (c / conserve-01 
                  :ARG1 (e / energy)) 
            :mod (m / major 
                  :ARG1-of (b / build-01))) 
      :ARG1 (w2 / warm-01 
            :ARG1 (g2 / globe) 
            :ARG1-of (d / declare-01 
                  :ARG0 (a / all) 
                  :op-of (a2 / and 
                        :op1 (g / gas 
                              :domain (w / worry-01 
                                    :ARG1 (o / other) 
                                    :ARG2 (t / threaten-01 
                                          :ARG1 (e2 / environment)) 
                                    :degree (m2 / most)))))))

# ::snt he promised a british government report within the next few weeks quantifying how much damage could be expected in the uk
# ::tok he promised a british government report within the next few weeks quantifying how much damage could be expected in the uk
# ::alignments 17-18|0.0 15-16|0 14-15|0.0.0 13-14|0.0.0.0 10-11|0.0.1.2.0.1+0.0.1.2.0 9-10|0.0.1.2.0.0 8-9|0.0.1.2.0.1.0 6-7|0.0.1.2 5-6|0.0.1.1 1-2|0.0.1 0-1|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:56.979
# ::node	0	possible	15-16
# ::node	0.0	expect-01	17-18
# ::node	0.0.0	damage-01	14-15
# ::node	0.0.0.0	much	13-14
# ::node	0.0.1	promise-01	1-2
# ::node	0.0.1.0	he	0-1
# ::node	0.0.1.1	report	5-6
# ::node	0.0.1.2	within	6-7
# ::node	0.0.1.2.0	temporal-quantity	10-11
# ::node	0.0.1.2.0.0	few	9-10
# ::node	0.0.1.2.0.1	week	10-11
# ::node	0.0.1.2.0.1.0	next	8-9
# ::root	0	possible
# ::edge	damage-01	ARG1	much	0.0.0	0.0.0.0	
# ::edge	expect-01	ARG1	damage-01	0.0	0.0.0	
# ::edge	expect-01	time	promise-01	0.0	0.0.1	
# ::edge	few	op1	temporal-quantity	0.0.1.2.0.0	0.0.1.2.0	
# ::edge	possible	domain	expect-01	0	0.0	
# ::edge	promise-01	ARG0	he	0.0.1	0.0.1.0	
# ::edge	promise-01	ARG1	report	0.0.1	0.0.1.1	
# ::edge	promise-01	location	within	0.0.1	0.0.1.2	
# ::edge	temporal-quantity	unit	week	0.0.1.2.0	0.0.1.2.0.1	
# ::edge	week	mod	next	0.0.1.2.0.1	0.0.1.2.0.1.0	
# ::edge	within	op1	temporal-quantity	0.0.1.2	0.0.1.2.0	
(p / possible 
      :domain (e / expect-01 
            :ARG1 (d / damage-01 
                  :ARG1 (m / much)) 
            :time (p2 / promise-01 
                  :ARG0 (h / he) 
                  :ARG1 (r / report) 
                  :location (w2 / within 
                        :op1 (t / temporal-quantity 
                              :op-of (f / few) 
                              :unit (w / week 
                                    :mod (n / next)))))))

# ::snt with the local black market flooded with hundreds of gallons of cutprice vodka brought in by entrepreneurial poles it promises to be a spectacular bash
# ::tok with the local black market flooded with hundreds of gallons of cutprice vodka brought in by entrepreneurial poles it promises to be a spectacular bash
# ::alignments 23-24|0.1.0 19-20|0 18-19|0.0 12-13|0.1.2 9-10|0.1.2.0.0+0.1.2.0 5-6|0.1 4-5|0.1.1 3-4|0.1.1.1 2-3|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:57.181
# ::node	0	promise-01	19-20
# ::node	0.0	it	18-19
# ::node	0.1	flood-01	5-6
# ::node	0.1.0	spectacular	23-24
# ::node	0.1.1	market	4-5
# ::node	0.1.1.0	local	2-3
# ::node	0.1.1.1	black	3-4
# ::node	0.1.2	vodka	12-13
# ::node	0.1.2.0	volume-quantity	9-10
# ::node	0.1.2.0.0	gallon	9-10
# ::root	0	promise-01
# ::edge	flood-01	ARG0	spectacular	0.1	0.1.0	
# ::edge	flood-01	ARG1	market	0.1	0.1.1	
# ::edge	flood-01	duration	vodka	0.1	0.1.2	
# ::edge	market	mod	black	0.1.1	0.1.1.1	
# ::edge	market	mod	local	0.1.1	0.1.1.0	
# ::edge	promise-01	ARG0	it	0	0.0	
# ::edge	promise-01	ARG2	flood-01	0	0.1	
# ::edge	vodka	quant	volume-quantity	0.1.2	0.1.2.0	
# ::edge	volume-quantity	unit	gallon	0.1.2.0	0.1.2.0.0	
(p / promise-01 
      :ARG0 (i / it) 
      :ARG2 (f / flood-01 
            :ARG0 (s / spectacular) 
            :ARG1 (m / market 
                  :mod (l / local) 
                  :mod (b / black)) 
            :duration (v / vodka 
                  :quant (v2 / volume-quantity 
                        :unit (g / gallon)))))

# ::snt salary is said to have been an initial sticking point but even promises that the new br chairman would get at least double the annual 92000 sir robert currently receives dash
# ::tok salary is said to have been an initial sticking point but even promises that the new br chairman would get at least double the annual 92000 sir robert currently receives dash
# ::alignments 29-30|0.3.0.2 28-29|0.3.0.2.0 22-23|0.3.0.1 17-18|0.2.0+0.2 15-16|0.0 12-13|0.3.0 10-11|0.3 9-10|0.1 8-9|0.1.1 7-8|0.1.0 2-3|0 0-1|0.3.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:57.288
# ::node	0	say-01	2-3
# ::node	0.0	new	15-16
# ::node	0.1	point	9-10
# ::node	0.1.0	initial	7-8
# ::node	0.1.1	stick-01	8-9
# ::node	0.2	have-org-role-91	17-18
# ::node	0.2.0	chairman	17-18
# ::node	0.3	contrast-01	10-11
# ::node	0.3.0	promise-01	12-13
# ::node	0.3.0.0	salary	0-1
# ::node	0.3.0.1	double	22-23
# ::node	0.3.0.2	receive-01	29-30
# ::node	0.3.0.2.0	current	28-29
# ::root	0	say-01
# ::edge	contrast-01	ARG1	say-01	0.3	0	
# ::edge	contrast-01	ARG2	promise-01	0.3	0.3.0	
# ::edge	have-org-role-91	ARG1	say-01	0.2	0	
# ::edge	have-org-role-91	ARG2	chairman	0.2	0.2.0	
# ::edge	point	mod	initial	0.1	0.1.0	
# ::edge	point	mod	stick-01	0.1	0.1.1	
# ::edge	promise-01	ARG0	salary	0.3.0	0.3.0.0	
# ::edge	promise-01	ARG1	double	0.3.0	0.3.0.1	
# ::edge	receive-01	ARG1	promise-01	0.3.0.2	0.3.0	
# ::edge	receive-01	manner	current	0.3.0.2	0.3.0.2.0	
# ::edge	say-01	ARG0	new	0	0.0	
# ::edge	say-01	ARG1	point	0	0.1	
(s2 / say-01 
      :ARG0 (n / new) 
      :ARG1 (p2 / point 
            :mod (i / initial) 
            :mod (s / stick-01)) 
      :ARG1-of (h / have-org-role-91 
            :ARG2 (c2 / chairman)) 
      :ARG1-of (c3 / contrast-01 
            :ARG2 (p / promise-01 
                  :ARG0 (s3 / salary) 
                  :ARG1 (d / double) 
                  :ARG1-of (r / receive-01 
                        :manner (c / current)))))

# ::snt still next weeks finale of civilization promises to tell the tales of how slim became both a movie star and marvin gayes fatherinlaw
# ::tok still next weeks finale of civilization promises to tell the tales of how slim became both a movie star and marvin gayes fatherinlaw
# ::alignments 19-20|0 18-19|0.0 17-18|0.0.1 15-16|0.0.0 14-15|0.0.0.0.0 13-14|0.0.0.0 8-9|0.0.0.0.0.0 6-7|0.0.0.0.0.0.2 5-6|0.0.0.0.0.0.0 2-3|0.0.0.0.0.0.1.0+0.0.0.0.0.0.1 1-2|0.0.0.0.0.0.2.0.0 0-1|0.0.0.0.0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:57.439
# ::node	0	and	19-20
# ::node	0.0	star	18-19
# ::node	0.0.0	both	15-16
# ::node	0.0.0.0	slim-02	13-14
# ::node	0.0.0.0.0	become-01	14-15
# ::node	0.0.0.0.0.0	tell-01	8-9
# ::node	0.0.0.0.0.0.0	civilization	5-6
# ::node	0.0.0.0.0.0.1	temporal-quantity	2-3
# ::node	0.0.0.0.0.0.1.0	week	2-3
# ::node	0.0.0.0.0.0.2	promise-01	6-7
# ::node	0.0.0.0.0.0.2.0	still	0-1
# ::node	0.0.0.0.0.0.2.0.0	next	1-2
# ::node	0.0.1	movie	17-18
# ::root	0	and
# ::edge	and	op1	star	0	0.0	
# ::edge	next	manner	still	0.0.0.0.0.0.2.0.0	0.0.0.0.0.0.2.0	
# ::edge	promise-01	ARG0	still	0.0.0.0.0.0.2	0.0.0.0.0.0.2.0	
# ::edge	promise-01	ARG1	tell-01	0.0.0.0.0.0.2	0.0.0.0.0.0	
# ::edge	slim-02	ARG1	both	0.0.0.0	0.0.0	
# ::edge	slim-02	ARG2	become-01	0.0.0.0	0.0.0.0.0	
# ::edge	star	mod	both	0.0	0.0.0	
# ::edge	star	mod	movie	0.0	0.0.1	
# ::edge	tell-01	ARG0	civilization	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	tell-01	ARG1	temporal-quantity	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	tell-01	ARG2	become-01	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	temporal-quantity	unit	week	0.0.0.0.0.0.1	0.0.0.0.0.0.1.0	
(a / and 
      :op1 (s / star 
            :mod (b / both 
                  :ARG1-of (s2 / slim-02 
                        :ARG2 (b2 / become-01 
                              :ARG2-of (t / tell-01 
                                    :ARG0 (c / civilization) 
                                    :ARG1 (t2 / temporal-quantity 
                                          :unit (w / week)) 
                                    :ARG1-of (p / promise-01 
                                          :ARG0 (s3 / still 
                                                :manner-of (n / next))))))) 
            :mod (m / movie)))

# ::snt elektrowatt has almost 30 per cent of unitech but has promised not to mount a bid unless a third party intervenes
# ::tok elektrowatt has almost 30 per cent of unitech but has promised not to mount a bid unless a third party intervenes
# ::alignments 19-20|0.1.1.1.0 15-16|0.1.1.1 13-14|0.1.1 10-11|0.1 8-9|0 5-6|0.0.0+0.0 3-4|0.1.0 2-3|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:57.521
# ::node	0	contrast-01	8-9
# ::node	0.0	monetary-quantity	5-6
# ::node	0.0.0	cent	5-6
# ::node	0.1	promise-01	10-11
# ::node	0.1.0	30	3-4
# ::node	0.1.1	mount-01	13-14
# ::node	0.1.1.0	almost	2-3
# ::node	0.1.1.1	bid-01	15-16
# ::node	0.1.1.1.0	party	19-20
# ::root	0	contrast-01
# ::edge	bid-01	ARG0	party	0.1.1.1	0.1.1.1.0	
# ::edge	contrast-01	ARG1	monetary-quantity	0	0.0	
# ::edge	contrast-01	ARG2	promise-01	0	0.1	
# ::edge	monetary-quantity	unit	cent	0.0	0.0.0	
# ::edge	mount-01	ARG0	almost	0.1.1	0.1.1.0	
# ::edge	mount-01	ARG1	bid-01	0.1.1	0.1.1.1	
# ::edge	promise-01	ARG1	30	0.1	0.1.0	
# ::edge	promise-01	ARG2	mount-01	0.1	0.1.1	
(c / contrast-01 
      :ARG1 (m2 / monetary-quantity 
            :unit (c2 / cent)) 
      :ARG2 (p2 / promise-01 
            :ARG1 30 
            :ARG2 (m / mount-01 
                  :ARG0 (a / almost) 
                  :ARG1 (b / bid-01 
                        :ARG0 (p / party)))))

# ::snt but i suspect that the desire for instant gratification which the pass promises is also a factor
# ::tok but i suspect that the desire for instant gratification which the pass promises is also a factor
# ::alignments 16-17|0.1.1 14-15|0.1.1.1 12-13|0.1.1.0.0 7-8|0.0 5-6|0.1.1.0 2-3|0.1 1-2|0.1.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:57.637
# ::node	0	contrast-01	0-1
# ::node	0.0	instant	7-8
# ::node	0.1	suspect-01	2-3
# ::node	0.1.0	i	1-2
# ::node	0.1.1	factor	16-17
# ::node	0.1.1.0	desire-01	5-6
# ::node	0.1.1.0.0	promise-01	12-13
# ::node	0.1.1.1	also	14-15
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	instant	0	0.0	
# ::edge	contrast-01	ARG2	suspect-01	0	0.1	
# ::edge	factor	domain	desire-01	0.1.1	0.1.1.0	
# ::edge	factor	mod	also	0.1.1	0.1.1.1	
# ::edge	promise-01	ARG1	desire-01	0.1.1.0.0	0.1.1.0	
# ::edge	suspect-01	ARG0	i	0.1	0.1.0	
# ::edge	suspect-01	ARG1	factor	0.1	0.1.1	
(c / contrast-01 
      :ARG1 (i / instant) 
      :ARG2 (s / suspect-01 
            :ARG0 (i2 / i) 
            :ARG1 (f / factor 
                  :domain (d / desire-01 
                        :ARG1-of (p / promise-01)) 
                  :mod (a / also))))

# ::snt seldom has royal ascot promised such exciting racing throughout the four days
# ::tok seldom has royal ascot promised such exciting racing throughout the four days
# ::alignments 11-12|0.1.1.0.1+0.1.1.0 10-11|0.1.1.0.0 8-9|0.1.2 7-8|0.1 6-7|0.1.1 5-6|0.1.0 4-5|0 2-3|0.0 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:57.685
# ::node	0	promise-01	4-5
# ::node	0.0	royal	2-3
# ::node	0.1	race-01	7-8
# ::node	0.1.0	such	5-6
# ::node	0.1.1	excite-01	6-7
# ::node	0.1.1.0	temporal-quantity	11-12
# ::node	0.1.1.0.0	4	10-11
# ::node	0.1.1.0.1	day	11-12
# ::node	0.1.2	throughout	8-9
# ::node	0.2	seldom	0-1
# ::root	0	promise-01
# ::edge	excite-01	ARG0	temporal-quantity	0.1.1	0.1.1.0	
# ::edge	excite-01	ARG1	race-01	0.1.1	0.1	
# ::edge	promise-01	ARG1	royal	0	0.0	
# ::edge	promise-01	ARG2	race-01	0	0.1	
# ::edge	promise-01	time	seldom	0	0.2	
# ::edge	race-01	ARG1	such	0.1	0.1.0	
# ::edge	race-01	ARG2	throughout	0.1	0.1.2	
# ::edge	temporal-quantity	quant	4	0.1.1.0	0.1.1.0.0	
# ::edge	temporal-quantity	unit	day	0.1.1.0	0.1.1.0.1	
(p / promise-01 
      :ARG1 (r2 / royal) 
      :ARG2 (r / race-01 
            :ARG1 (s / such) 
            :ARG1-of (e / excite-01 
                  :ARG0 (t / temporal-quantity 
                        :quant 4 
                        :unit (d / day))) 
            :ARG2 (t2 / throughout)) 
      :time (s2 / seldom))

# ::snt the classic procedure if the weather promises fair is to leave the refuge before daybreak in order to be on or close to the summit by sunrise
# ::tok the classic procedure if the weather promises fair is to leave the refuge before daybreak in order to be on or close to the summit by sunrise
# ::alignments 24-25|0.0.1.0.2 20-21|0 13-14|0.0.1.0.1 12-13|0.0.1.0.0 10-11|0.0.1.0 7-8|0.0.2 6-7|0.0 5-6|0.0.0 2-3|0.0.1 1-2|0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:57.882
# ::node	0	or	20-21
# ::node	0.0	promise-01	6-7
# ::node	0.0.0	weather	5-6
# ::node	0.0.1	procedure	2-3
# ::node	0.0.1.0	leave-01	10-11
# ::node	0.0.1.0.0	refuge	12-13
# ::node	0.0.1.0.1	before	13-14
# ::node	0.0.1.0.2	summit	24-25
# ::node	0.0.1.1	classic	1-2
# ::node	0.0.2	fair	7-8
# ::root	0	or
(o / or 
      :ARG3-of (p / promise-01 
            :ARG0 (w / weather) 
            :ARG1 (p2 / procedure 
                  :ARG0-of (l / leave-01 
                        :ARG1 (r / refuge) 
                        :time (b / before) 
                        :topic (s / summit)) 
                  :mod (c / classic)) 
            :ARG2 (f / fair)))

# ::snt the panos report points to some examples where biotechnology promises to help some of the poorest countries but it also highlights instances where it could actually be a disadvantage
# ::tok the panos report points to some examples where biotechnology promises to help some of the poorest countries but it also highlights instances where it could actually be a disadvantage
# ::alignments 28-29|0.1.1.0 25-26|0.1.1.0.2 24-25|0.1.1.0.1 23-24|0.1.1.0.0 21-22|0.1.1 20-21|0.1 19-20|0.1.2 18-19|0.1.0 17-18|0 16-17|0.0.1.1.0 15-16|0.0.1.1.0.0.0+0.0.1.1.0.0 12-13|0.0.1.1 11-12|0.0.1 9-10|0.0 8-9|0.0.1.0 6-7|0.0.1.2 5-6|0.0.1.2.0 3-4|0.0.0 2-3|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:58.263
# ::node	0	contrast-01	17-18
# ::node	0.0	promise-01	9-10
# ::node	0.0.0	point	3-4
# ::node	0.0.0.0	report	2-3
# ::node	0.0.1	help-01	11-12
# ::node	0.0.1.0	biotechnology	8-9
# ::node	0.0.1.1	some	12-13
# ::node	0.0.1.1.0	country	16-17
# ::node	0.0.1.1.0.0	poor	15-16
# ::node	0.0.1.1.0.0.0	most	15-16
# ::node	0.0.1.2	example	6-7
# ::node	0.0.1.2.0	some	5-6
# ::node	0.1	highlight-01	20-21
# ::node	0.1.0	it	18-19
# ::node	0.1.1	instance	21-22
# ::node	0.1.1.0	disadvantage-00	28-29
# ::node	0.1.1.0.0	it	23-24
# ::node	0.1.1.0.1	possible	24-25
# ::node	0.1.1.0.2	actual	25-26
# ::node	0.1.2	also	19-20
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	promise-01	0	0.0	
# ::edge	contrast-01	ARG2	highlight-01	0	0.1	
# ::edge	country	mod	poor	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	country	quant	some	0.0.1.1.0	0.0.1.1	
# ::edge	disadvantage-00	ARG0	instance	0.1.1.0	0.1.1	
# ::edge	disadvantage-00	domain	it	0.1.1.0	0.1.1.0.0	
# ::edge	disadvantage-00	mod	actual	0.1.1.0	0.1.1.0.2	
# ::edge	example	quant	some	0.0.1.2	0.0.1.2.0	
# ::edge	help-01	ARG0	biotechnology	0.0.1	0.0.1.0	
# ::edge	help-01	ARG1	some	0.0.1	0.0.1.1	
# ::edge	help-01	location	example	0.0.1	0.0.1.2	
# ::edge	highlight-01	ARG0	it	0.1	0.1.0	
# ::edge	highlight-01	ARG1	instance	0.1	0.1.1	
# ::edge	highlight-01	mod	also	0.1	0.1.2	
# ::edge	point	mod	report	0.0.0	0.0.0.0	
# ::edge	poor	degree	most	0.0.1.1.0.0	0.0.1.1.0.0.0	
# ::edge	possible	domain	disadvantage-00	0.1.1.0.1	0.1.1.0	
# ::edge	promise-01	ARG1	point	0.0	0.0.0	
# ::edge	promise-01	ARG2	help-01	0.0	0.0.1	
(c / contrast-01 
      :ARG1 (p3 / promise-01 
            :ARG1 (p4 / point 
                  :mod (r / report)) 
            :ARG2 (h2 / help-01 
                  :ARG0 (b / biotechnology) 
                  :ARG1 (s / some 
                        :quant-of (c2 / country 
                              :mod (p2 / poor 
                                    :degree (m / most)))) 
                  :location (e / example 
                        :quant (s2 / some)))) 
      :ARG2 (h / highlight-01 
            :ARG0 (i3 / it) 
            :ARG1 (i2 / instance 
                  :ARG0-of (d / disadvantage-00 
                        :domain (i / it) 
                        :domain-of (p / possible) 
                        :mod (a / actual))) 
            :mod (a2 / also)))

# ::snt he promised having spoken recently to both president bush and president gorbachev that over the next few months the arabs could expect a number of studied steps to reduce the impact of the arrival of soviet jews in israel
# ::tok he promised having spoken recently to both president bush and president gorbachev that over the next few months the arabs could expect a number of studied steps to reduce the impact of the arrival of soviet jews in israel
# ::alignments 38-39|0.1.0.1.0.0+0.1.0.1.0+0.1.0.1 36-37|0.1.0.0.0.0.0+0.1.0.0.0.0+0.1.0.0.0 33-34|0.1.0.0 30-31|0.1.0 28-29|0.1.0.2 26-27|0.1.0.2.0 25-26|0.1.0.2.0.0 23-24|0.1.0.2.0.1 21-22|0.1 20-21|0 17-18|0.1.1.0.0+0.1.1.0 16-17|0.1.1 15-16|0.1.1.0.0.0 10-11|0.0.1.1.0+0.0.1.1 9-10|0.0.0 8-9|0.0.1 7-8|0.0.1.0.0+0.0.1.0 6-7|0.0.0.0 4-5|0.0.3 3-4|0.0 1-2|0.0.2 0-1|0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:58.575
# ::node	0	possible	20-21
# ::node	0.0	speak-01	3-4
# ::node	0.0.0	and	9-10
# ::node	0.0.0.0	both	6-7
# ::node	0.0.1	bush-league	8-9
# ::node	0.0.1.0	have-org-role-91	7-8
# ::node	0.0.1.0.0	president	7-8
# ::node	0.0.1.1	have-org-role-91	10-11
# ::node	0.0.1.1.0	president	10-11
# ::node	0.0.2	promise-01	1-2
# ::node	0.0.2.0	he	0-1
# ::node	0.0.3	recent	4-5
# ::node	0.1	expect-01	21-22
# ::node	0.1.0	impact-01	30-31
# ::node	0.1.0.0	arrive-01	33-34
# ::node	0.1.0.0.0	ethnic-group	36-37
# ::node	0.1.0.0.0.0	name	36-37
# ::node	0.1.0.0.0.0.0	"Jew"	36-37
# ::node	0.1.0.1	country	38-39
# ::node	0.1.0.1.0	name	38-39
# ::node	0.1.0.1.0.0	"Israel"	38-39
# ::node	0.1.0.2	reduce-01	28-29
# ::node	0.1.0.2.0	step-01	26-27
# ::node	0.1.0.2.0.0	study-01	25-26
# ::node	0.1.0.2.0.1	number	23-24
# ::node	0.1.1	few	16-17
# ::node	0.1.1.0	temporal-quantity	17-18
# ::node	0.1.1.0.0	month	17-18
# ::node	0.1.1.0.0.0	next	15-16
# ::root	0	possible
# ::edge	and	mod	both	0.0.0	0.0.0.0	
# ::edge	arrive-01	ARG1	ethnic-group	0.1.0.0	0.1.0.0.0	
# ::edge	country	name	name	0.1.0.1	0.1.0.1.0	
# ::edge	ethnic-group	name	name	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	expect-01	ARG1	impact-01	0.1	0.1.0	
# ::edge	expect-01	duration	few	0.1	0.1.1	
# ::edge	few	op1	temporal-quantity	0.1.1	0.1.1.0	
# ::edge	have-org-role-91	ARG0	bush-league	0.0.1.0	0.0.1	
# ::edge	have-org-role-91	ARG0	bush-league	0.0.1.1	0.0.1	
# ::edge	have-org-role-91	ARG2	president	0.0.1.0	0.0.1.0.0	
# ::edge	have-org-role-91	ARG2	president	0.0.1.1	0.0.1.1.0	
# ::edge	impact-01	ARG0	arrive-01	0.1.0	0.1.0.0	
# ::edge	impact-01	ARG1	country	0.1.0	0.1.0.1	
# ::edge	month	mod	next	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	name	op1	"Israel"	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	name	op1	"Jew"	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	possible	domain	expect-01	0	0.1	
# ::edge	promise-01	ARG0	he	0.0.2	0.0.2.0	
# ::edge	promise-01	ARG2	speak-01	0.0.2	0.0	
# ::edge	reduce-01	ARG1	impact-01	0.1.0.2	0.1.0	
# ::edge	speak-01	ARG0	and	0.0	0.0.0	
# ::edge	speak-01	ARG1	possible	0.0	0	
# ::edge	speak-01	ARG2	bush-league	0.0	0.0.1	
# ::edge	speak-01	time	recent	0.0	0.0.3	
# ::edge	step-01	ARG1	reduce-01	0.1.0.2.0	0.1.0.2	
# ::edge	step-01	mod	study-01	0.1.0.2.0	0.1.0.2.0.0	
# ::edge	step-01	quant	number	0.1.0.2.0	0.1.0.2.0.1	
# ::edge	temporal-quantity	unit	month	0.1.1.0	0.1.1.0.0	
(p / possible 
      :ARG1-of (s3 / speak-01 
            :ARG0 (a2 / and 
                  :mod (b2 / both)) 
            :ARG2 (b / bush-league 
                  :ARG0-of (h2 / have-org-role-91 
                        :ARG2 (p3 / president)) 
                  :ARG0-of (h / have-org-role-91 
                        :ARG2 (p2 / president))) 
            :ARG2-of (p4 / promise-01 
                  :ARG0 (h3 / he)) 
            :time (r2 / recent)) 
      :domain (e2 / expect-01 
            :ARG1 (i / impact-01 
                  :ARG0 (a / arrive-01 
                        :ARG1 (e / ethnic-group 
                              :name (n2 / name 
                                    :op1 "Jew"))) 
                  :ARG1 (c / country 
                        :name (n / name 
                              :op1 "Israel")) 
                  :ARG1-of (r / reduce-01 
                        :ARG1-of (s / step-01 
                              :mod (s2 / study-01) 
                              :quant (n3 / number)))) 
            :duration (f / few 
                  :op1 (t / temporal-quantity 
                        :unit (m / month 
                              :mod (n4 / next))))))

# ::snt it has also promised not to build any new hydroelectric dams the source of the rest of the countrys electricity
# ::tok it has also promised not to build any new hydroelectric dams the source of the rest of the countrys electricity
# ::alignments 19-20|0.1.3.0 15-16|0.1.3 12-13|0.1.1 8-9|0.1.2 7-8|0.0 6-7|0.1 3-4|0 2-3|0.2 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:58.791
# ::node	0	promise-01	3-4
# ::node	0.0	any	7-8
# ::node	0.1	build-01	6-7
# ::node	0.1.0	it	0-1
# ::node	0.1.1	source	12-13
# ::node	0.1.2	new	8-9
# ::node	0.1.3	rest	15-16
# ::node	0.1.3.0	electricity	19-20
# ::node	0.2	also	2-3
# ::root	0	promise-01
# ::edge	build-01	ARG0	it	0.1	0.1.0	
# ::edge	build-01	ARG1	source	0.1	0.1.1	
# ::edge	build-01	ARG4	new	0.1	0.1.2	
# ::edge	build-01	location	rest	0.1	0.1.3	
# ::edge	electricity	part	rest	0.1.3.0	0.1.3	
# ::edge	promise-01	ARG0	any	0	0.0	
# ::edge	promise-01	ARG2	build-01	0	0.1	
# ::edge	promise-01	mod	also	0	0.2	
(p / promise-01 
      :ARG0 (a / any) 
      :ARG2 (b / build-01 
            :ARG0 (i / it) 
            :ARG1 (s / source) 
            :ARG4 (n / new) 
            :location (r / rest 
                  :part-of (e / electricity))) 
      :mod (a2 / also))

# ::snt margaret gregory now poured out her woes to lady dunsany lady gregory had promised that when her son married yeats would cease to live at coole for most of the year he still occupied the master of the houses bedroom he was indifferent to lady gregorys opinion knowing she would always forgive him in the end and had no shame about staying on even though he knew robert and margaret disliked his presence
# ::tok margaret gregory now poured out her woes to lady dunsany lady gregory had promised that when her son married yeats would cease to live at coole for most of the year he still occupied the master of the houses bedroom he was indifferent to lady gregorys opinion knowing she would always forgive him in the end and had no shame about staying on even though he knew robert and margaret disliked his presence
# ::alignments 72-73|0.1.0 68-69|0.1 66-67|0 65-66|0.0 61-62|0.0.0 59-60|0.0.0.0 58-59|0.0.0.0.0 56-57|0.0.0.0.1.1.5 51-52|0.0.0.0.1.1.5.0 50-51|0.0.0.0.1.1.5.0.1 48-49|0.0.0.0.1.1.5.0.0 47-48|0.0.0.0.1.1.5.0.0.0 46-47|0.0.0.0.1.1.5.0.0.0.0 44-45|0.0.0.0.1.1.5.0.0.0.0.0 40-41|0.0.0.0.1.1.2.0 39-40|0.0.0.0.1.0.1 38-39|0.0.0.0.1.0.1.0 35-36|0.0.0.0.1.1.0 33-34|0.0.0.0.1.1 32-33|0.0.0.0.1.1.4 31-32|0.0.0.0.1 30-31|0.0.0.0.1.1.3 27-28|0.0.0.0.1.1.3.0 23-24|0.0.0.0.1.0.0.1 21-22|0.0.0.0.1.0.0 18-19|0.0.0.0.1.0 17-18|0.0.0.0.1.1.2.0.0.1+0.0.0.0.1.1.2.0.0 13-14|0.0.0.0.1.1.2 10-11|0.0.0.0.1.0.0.0 8-9|0.0.0.0.1.1.2.0.0.0 3-4|0.0.0.0.1.1.1 2-3|0.0.0.0.1.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:28:59.968
# ::node	0	know-01	66-67
# ::node	0.0	he	65-66
# ::node	0.0.0	stay-01	61-62
# ::node	0.0.0.0	shame	59-60
# ::node	0.0.0.0.0	-	58-59
# ::node	0.0.0.0.1	he	31-32
# ::node	0.0.0.0.1.0	marry-01	18-19
# ::node	0.0.0.0.1.0.0	cease-01	21-22
# ::node	0.0.0.0.1.0.0.0	lady	10-11
# ::node	0.0.0.0.1.0.0.1	live-01	23-24
# ::node	0.0.0.0.1.0.1	bedroom	39-40
# ::node	0.0.0.0.1.0.1.0	house	38-39
# ::node	0.0.0.0.1.1	occupy-01	33-34
# ::node	0.0.0.0.1.1.0	master	35-36
# ::node	0.0.0.0.1.1.1	pour-01	3-4
# ::node	0.0.0.0.1.1.1.0	now	2-3
# ::node	0.0.0.0.1.1.2	promise-01	13-14
# ::node	0.0.0.0.1.1.2.0	he	40-41
# ::node	0.0.0.0.1.1.2.0.0	have-rel-role-91	17-18
# ::node	0.0.0.0.1.1.2.0.0.0	lady	8-9
# ::node	0.0.0.0.1.1.2.0.0.1	son	17-18
# ::node	0.0.0.0.1.1.3	year	30-31
# ::node	0.0.0.0.1.1.3.0	most	27-28
# ::node	0.0.0.0.1.1.4	still	32-33
# ::node	0.0.0.0.1.1.5	and	56-57
# ::node	0.0.0.0.1.1.5.0	forgive-01	51-52
# ::node	0.0.0.0.1.1.5.0.0	she	48-49
# ::node	0.0.0.0.1.1.5.0.0.0	know-01	47-48
# ::node	0.0.0.0.1.1.5.0.0.0.0	opine-01	46-47
# ::node	0.0.0.0.1.1.5.0.0.0.0.0	lady	44-45
# ::node	0.0.0.0.1.1.5.0.1	always	50-51
# ::node	0.1	and	68-69
# ::node	0.1.0	presence	72-73
# ::root	0	know-01
# ::edge	and	op1	know-01	0.1	0	
# ::edge	and	op1	occupy-01	0.0.0.0.1.1.5	0.0.0.0.1.1	
# ::edge	and	op2	forgive-01	0.0.0.0.1.1.5	0.0.0.0.1.1.5.0	
# ::edge	bedroom	mod	house	0.0.0.0.1.0.1	0.0.0.0.1.0.1.0	
# ::edge	cease-01	ARG0	lady	0.0.0.0.1.0.0	0.0.0.0.1.0.0.0	
# ::edge	cease-01	ARG1	live-01	0.0.0.0.1.0.0	0.0.0.0.1.0.0.1	
# ::edge	forgive-01	ARG0	she	0.0.0.0.1.1.5.0	0.0.0.0.1.1.5.0.0	
# ::edge	forgive-01	time	always	0.0.0.0.1.1.5.0	0.0.0.0.1.1.5.0.1	
# ::edge	have-rel-role-91	ARG0	lady	0.0.0.0.1.1.2.0.0	0.0.0.0.1.1.2.0.0.0	
# ::edge	have-rel-role-91	ARG1	he	0.0.0.0.1.1.2.0.0	0.0.0.0.1.1.2.0	
# ::edge	have-rel-role-91	ARG2	son	0.0.0.0.1.1.2.0.0	0.0.0.0.1.1.2.0.0.1	
# ::edge	know-01	ARG0	he	0	0.0	
# ::edge	know-01	ARG0	she	0.0.0.0.1.1.5.0.0.0	0.0.0.0.1.1.5.0.0	
# ::edge	know-01	ARG1	opine-01	0.0.0.0.1.1.5.0.0.0	0.0.0.0.1.1.5.0.0.0.0	
# ::edge	marry-01	ARG0	he	0.0.0.0.1.0	0.0.0.0.1	
# ::edge	marry-01	ARG1	cease-01	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	marry-01	ARG2	bedroom	0.0.0.0.1.0	0.0.0.0.1.0.1	
# ::edge	occupy-01	ARG0	he	0.0.0.0.1.1	0.0.0.0.1	
# ::edge	occupy-01	ARG1	master	0.0.0.0.1.1	0.0.0.0.1.1.0	
# ::edge	occupy-01	location	year	0.0.0.0.1.1	0.0.0.0.1.1.3	
# ::edge	occupy-01	mod	still	0.0.0.0.1.1	0.0.0.0.1.1.4	
# ::edge	opine-01	ARG1	lady	0.0.0.0.1.1.5.0.0.0.0	0.0.0.0.1.1.5.0.0.0.0.0	
# ::edge	pour-01	ARG1	occupy-01	0.0.0.0.1.1.1	0.0.0.0.1.1	
# ::edge	pour-01	time	now	0.0.0.0.1.1.1	0.0.0.0.1.1.1.0	
# ::edge	presence	poss	and	0.1.0	0.1	
# ::edge	promise-01	ARG0	he	0.0.0.0.1.1.2	0.0.0.0.1.1.2.0	
# ::edge	promise-01	ARG1	occupy-01	0.0.0.0.1.1.2	0.0.0.0.1.1	
# ::edge	shame	polarity	-	0.0.0.0	0.0.0.0.0	
# ::edge	shame	poss	he	0.0.0.0	0.0.0.0.1	
# ::edge	stay-01	ARG0	shame	0.0.0	0.0.0.0	
# ::edge	stay-01	ARG1	he	0.0.0	0.0	
# ::edge	year	quant	most	0.0.0.0.1.1.3	0.0.0.0.1.1.3.0	
(k / know-01 
      :ARG0 (h / he 
            :ARG1-of (s / stay-01 
                  :ARG0 (s2 / shame 
                        :polarity (- / -) 
                        :poss (h4 / he 
                              :ARG0-of (m3 / marry-01 
                                    :ARG1 (c / cease-01 
                                          :ARG0 (l3 / lady) 
                                          :ARG1 (l2 / live-01)) 
                                    :ARG2 (b / bedroom 
                                          :mod (h3 / house))) 
                              :ARG0-of (o2 / occupy-01 
                                    :ARG1 (m / master) 
                                    :ARG1-of (p3 / pour-01 
                                          :time (n / now)) 
                                    :ARG1-of (p2 / promise-01 
                                          :ARG0 (h2 / he 
                                                :ARG1-of (h5 / have-rel-role-91 
                                                      :ARG0 (l4 / lady) 
                                                      :ARG2 (s5 / son)))) 
                                    :location (y / year 
                                          :quant (m2 / most)) 
                                    :mod (s4 / still) 
                                    :op-of (a2 / and 
                                          :op1 (f / forgive-01 
                                                :ARG0 (s3 / she 
                                                      :ARG0-of (k2 / know-01 
                                                            :ARG1 (o / opine-01 
                                                                  :ARG1 (l / lady)))) 
                                                :time (a3 / always)))))))) 
      :op-of (a / and 
            :poss-of (p / presence)))

# ::snt pensioners are at the mercy of unscrupulous financial advisers who promise a painless way to boost the elderlys meagre income by using their home as security
# ::tok pensioners are at the mercy of unscrupulous financial advisers who promise a painless way to boost the elderlys meagre income by using their home as security
# ::alignments 25-26|0.0.0.2.1 23-24|0.0.0.2.0 21-22|0.0.0.2 19-20|0.0 18-19|0 15-16|0.0.0 13-14|0.0.0.1.0 12-13|0.0.0.1.0.0 10-11|0.0.0.1 7-8|0.0.0.0 0-1|0.0.0.2.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:00.101
# ::node	0	meagre	18-19
# ::node	0.0	income	19-20
# ::node	0.0.0	boost-01	15-16
# ::node	0.0.0.0	finance	7-8
# ::node	0.0.0.1	promise-01	10-11
# ::node	0.0.0.1.0	way	13-14
# ::node	0.0.0.1.0.0	painless	12-13
# ::node	0.0.0.2	use-01	21-22
# ::node	0.0.0.2.0	home	23-24
# ::node	0.0.0.2.1	security	25-26
# ::node	0.0.0.2.2	pensioner	0-1
# ::root	0	meagre
(m / meagre 
      :mod-of (i / income 
            :ARG1-of (b / boost-01 
                  :ARG0 (f / finance) 
                  :ARG2-of (p2 / promise-01 
                        :ARG1 (w / way 
                              :mod (p / painless))) 
                  :manner (u / use-01 
                        :ARG1 (h / home) 
                        :ARG2 (s / security) 
                        :op-of (p3 / pensioner)))))

# ::snt is intrinsically flimsy and lacks the longterm corrosion resistance promised by its galvanised finish fig 22
# ::tok is intrinsically flimsy and lacks the longterm corrosion resistance promised by its galvanised finish fig 22
# ::alignments 15-16|0.0.1.0 13-14|0.0.1.1 9-10|0.0.1.2 8-9|0.0.1 4-5|0.0 3-4|0 1-2|0.0.0.0+0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:00.192
# ::node	0	and	3-4
# ::node	0.0	lack-01	4-5
# ::node	0.0.0	intrinsic	1-2
# ::node	0.0.0.0	-	1-2
# ::node	0.0.1	resist-01	8-9
# ::node	0.0.1.0	22	15-16
# ::node	0.0.1.1	finish-01	13-14
# ::node	0.0.1.2	promise-01	9-10
# ::root	0	and
# ::edge	and	op1	lack-01	0	0.0	
# ::edge	finish-01	ARG1	resist-01	0.0.1.1	0.0.1	
# ::edge	intrinsic	polarity	-	0.0.0	0.0.0.0	
# ::edge	lack-01	ARG0	intrinsic	0.0	0.0.0	
# ::edge	lack-01	ARG1	resist-01	0.0	0.0.1	
# ::edge	promise-01	ARG1	resist-01	0.0.1.2	0.0.1	
# ::edge	resist-01	ARG0	22	0.0.1	0.0.1.0	
(a / and 
      :op1 (l / lack-01 
            :ARG0 (i / intrinsic 
                  :polarity -) 
            :ARG1 (r / resist-01 
                  :ARG0 22 
                  :ARG1-of (f / finish-01) 
                  :ARG1-of (p / promise-01))))

# ::snt in two years everyone would have a proper home the soviet prime minister nikolai ryzhkov once promised
# ::tok in two years everyone would have a proper home the soviet prime minister nikolai ryzhkov once promised
# ::alignments 16-17|0.0.0 15-16|0.0.0.1 12-13|0.2+0 11-12|0.2.0 8-9|0.1.0 7-8|0.1 3-4|0.0 2-3|0.0.0.0.0.0+0.0.0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:00.272
# ::node	0	have-org-role-91	12-13
# ::node	0.0	everyone	3-4
# ::node	0.0.0	promise-01	16-17
# ::node	0.0.0.0	2	1-2
# ::node	0.0.0.0.0	temporal-quantity	2-3
# ::node	0.0.0.0.0.0	year	2-3
# ::node	0.0.0.1	once	15-16
# ::node	0.1	proper	7-8
# ::node	0.1.0	home	8-9
# ::node	0.2	minister	12-13
# ::node	0.2.0	prime	11-12
# ::root	0	have-org-role-91
# ::edge	have-org-role-91	ARG0	everyone	0	0.0	
# ::edge	have-org-role-91	ARG1	proper	0	0.1	
# ::edge	have-org-role-91	ARG2	minister	0	0.2	
# ::edge	home	mod	proper	0.1.0	0.1	
# ::edge	minister	mod	prime	0.2	0.2.0	
# ::edge	promise-01	ARG0	everyone	0.0.0	0.0	
# ::edge	promise-01	ARG1	2	0.0.0	0.0.0.0	
# ::edge	promise-01	time	once	0.0.0	0.0.0.1	
# ::edge	temporal-quantity	quant	2	0.0.0.0.0	0.0.0.0	
# ::edge	temporal-quantity	unit	year	0.0.0.0.0	0.0.0.0.0.0	
(h / have-org-role-91 
      :ARG0 (e / everyone 
            :ARG0-of (p / promise-01 
                  :ARG1 (2 / 2 
                        :quant-of (t / temporal-quantity 
                              :unit (y / year))) 
                  :time (o / once))) 
      :ARG1 (p3 / proper 
            :mod-of (h2 / home)) 
      :ARG2 (m / minister 
            :mod (p2 / prime)))

# ::snt he promised a dialogue of different opinions and that all suggestions would be assessed on their merits provided they did not challenge socialism itself or the leading role of the sed
# ::tok he promised a dialogue of different opinions and that all suggestions would be assessed on their merits provided they did not challenge socialism itself or the leading role of the sed
# ::alignments 27-28|0.1.0.2.0.0.1.0 26-27|0.1.0.2.0.0.1.0.0 24-25|0.1.0.2.0.0.1 22-23|0.1.0.2.0.0.0 21-22|0.1.0.2.0.0 18-19|0.1.0.2.0 17-18|0.1.0.2 16-17|0 10-11|0.0 9-10|0.1.0.1.0.0 7-8|0.1 6-7|0.1.0.1.0 5-6|0.1.0.1.0.1 3-4|0.1.0.1 1-2|0.1.0 0-1|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:00.870
# ::node	0	merit-01	16-17
# ::node	0.0	suggest-01	10-11
# ::node	0.1	and	7-8
# ::node	0.1.0	promise-01	1-2
# ::node	0.1.0.0	he	0-1
# ::node	0.1.0.1	dialogue	3-4
# ::node	0.1.0.1.0	opine-01	6-7
# ::node	0.1.0.1.0.0	all	9-10
# ::node	0.1.0.1.0.1	differ-02	5-6
# ::node	0.1.0.2	provide-01	17-18
# ::node	0.1.0.2.0	they	18-19
# ::node	0.1.0.2.0.0	challenge-01	21-22
# ::node	0.1.0.2.0.0.0	socialism	22-23
# ::node	0.1.0.2.0.0.1	or	24-25
# ::node	0.1.0.2.0.0.1.0	role	27-28
# ::node	0.1.0.2.0.0.1.0.0	lead-01	26-27
# ::root	0	merit-01
# ::edge	and	op1	promise-01	0.1	0.1.0	
# ::edge	and	op2	merit-01	0.1	0	
# ::edge	challenge-01	ARG0	they	0.1.0.2.0.0	0.1.0.2.0	
# ::edge	challenge-01	ARG1	socialism	0.1.0.2.0.0	0.1.0.2.0.0.0	
# ::edge	challenge-01	ARG2	or	0.1.0.2.0.0	0.1.0.2.0.0.1	
# ::edge	dialogue	concession	opine-01	0.1.0.1	0.1.0.1.0	
# ::edge	lead-01	ARG0	role	0.1.0.2.0.0.1.0.0	0.1.0.2.0.0.1.0	
# ::edge	merit-01	ARG1	suggest-01	0	0.0	
# ::edge	opine-01	ARG1	all	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	opine-01	manner	differ-02	0.1.0.1.0	0.1.0.1.0.1	
# ::edge	or	op1	role	0.1.0.2.0.0.1	0.1.0.2.0.0.1.0	
# ::edge	promise-01	ARG0	he	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG1	dialogue	0.1.0	0.1.0.1	
# ::edge	provide-01	ARG0	they	0.1.0.2	0.1.0.2.0	
# ::edge	provide-01	ARG1	promise-01	0.1.0.2	0.1.0	
(m / merit-01 
      :ARG1 (s2 / suggest-01) 
      :op-of (a2 / and 
            :op1 (p2 / promise-01 
                  :ARG0 (h / he) 
                  :ARG1 (d2 / dialogue 
                        :concession (o2 / opine-01 
                              :ARG1 (a / all) 
                              :manner (d / differ-02))) 
                  :ARG1-of (p / provide-01 
                        :ARG0 (t / they 
                              :ARG0-of (c / challenge-01 
                                    :ARG1 (s / socialism) 
                                    :ARG2 (o / or 
                                          :op1 (r / role 
                                                :ARG0-of (l / lead-01)))))))))

# ::snt these landmark buildings promise to reduce the overall average height of the site by 11
# ::tok these landmark buildings promise to reduce the overall average height of the site by 11
# ::alignments 14-15|0.1 12-13|0.2.2 7-8|0.2.1 5-6|0.2 3-4|0 2-3|0.0 1-2|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:00.959
# ::node	0	promise-01	3-4
# ::node	0.0	building	2-3
# ::node	0.1	11	14-15
# ::node	0.2	reduce-01	5-6
# ::node	0.2.0	landmark	1-2
# ::node	0.2.1	overall	7-8
# ::node	0.2.2	site	12-13
# ::root	0	promise-01
# ::edge	promise-01	ARG0	building	0	0.0	
# ::edge	promise-01	ARG1	11	0	0.1	
# ::edge	promise-01	ARG2	reduce-01	0	0.2	
# ::edge	reduce-01	ARG0	landmark	0.2	0.2.0	
# ::edge	reduce-01	ARG1	overall	0.2	0.2.1	
# ::edge	reduce-01	location	site	0.2	0.2.2	
(p / promise-01 
      :ARG0 (b / building) 
      :ARG1 11 
      :ARG2 (r / reduce-01 
            :ARG0 (l / landmark) 
            :ARG1 (o / overall) 
            :location (s / site)))

# ::snt what can be done to give even a tenth of our people the opportunity to acquire a small stake in the land and to replace the missing bottom rungs in the farming ladder  the present climate is not promising
# ::tok what can be done to give even a tenth of our people the opportunity to acquire a small stake in the land and to replace the missing bottom rungs in the farming ladder the present climate is not promising
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:00.961
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt having been promised that i could be a page or a herald depending on whether i could learn to play the trumpet and watch him come out on top of lincoln cathedral i was bitterly disappointed when my mother took his trousers away and called in the doctor
# ::tok having been promised that i could be a page or a herald depending on whether i could learn to play the trumpet and watch him come out on top of lincoln cathedral i was bitterly disappointed when my mother took his trousers away and called in the doctor
# ::alignments 47-48|0.0.0.0.1.0.1.0.0.1.0.0.0 43-44|0.0.0.0.1.0.1.0.0.1.0.0 42-43|0.0.1 41-42|0.0.0.0.1.0.0.0.1 38-39|0.0.0.0.1.0.0.0.0+0.0.0.0.1.0.0.0 35-36|0.0 34-35|0 32-33|0.0.0 28-29|0.0.0.0.0 23-24|0.0.0.0 22-23|0.0.0.0.1 19-20|0.0.0.0.1.0.2 17-18|0.0.0.0.1.0 16-17|0.0.0.0.1.0.3 15-16|0.0.0.0.1.0.0 12-13|0.0.0.0.1.0.1 11-12|0.0.0.0.1.0.1.0.1 9-10|0.0.0.0.1.0.1.0 8-9|0.0.0.0.1.0.1.0.0 5-6|0.0.0.0.1.0.1.0.0.1 4-5|0.0.0.0.1.0.1.0.0.0 2-3|0.0.0.0.1.0.1.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:02.770
# ::node	0	bitter	34-35
# ::node	0.0	disappoint-01	35-36
# ::node	0.0.0	i	32-33
# ::node	0.0.0.0	watch-01	23-24
# ::node	0.0.0.0.0	top	28-29
# ::node	0.0.0.0.1	and	22-23
# ::node	0.0.0.0.1.0	learn-01	17-18
# ::node	0.0.0.0.1.0.0	i	15-16
# ::node	0.0.0.0.1.0.0.0	have-rel-role-91	38-39
# ::node	0.0.0.0.1.0.0.0.0	mother	38-39
# ::node	0.0.0.0.1.0.0.0.1	trousers	41-42
# ::node	0.0.0.0.1.0.1	depend-01	12-13
# ::node	0.0.0.0.1.0.1.0	or	9-10
# ::node	0.0.0.0.1.0.1.0.0	page	8-9
# ::node	0.0.0.0.1.0.1.0.0.0	i	4-5
# ::node	0.0.0.0.1.0.1.0.0.1	possible	5-6
# ::node	0.0.0.0.1.0.1.0.0.1.0	promise-01	2-3
# ::node	0.0.0.0.1.0.1.0.0.1.0.0	and	43-44
# ::node	0.0.0.0.1.0.1.0.0.1.0.0.0	doctor	47-48
# ::node	0.0.0.0.1.0.1.0.1	herald-01	11-12
# ::node	0.0.0.0.1.0.2	play-01	19-20
# ::node	0.0.0.0.1.0.3	possible	16-17
# ::node	0.0.1	away	42-43
# ::root	0	bitter
(b / bitter 
      :degree-of (d2 / disappoint-01 
            :ARG1 (i / i 
                  :ARG0-of (w / watch-01 
                        :ARG1 (t2 / top) 
                        :op-of (a3 / and 
                              :purpose-of (l / learn-01 
                                    :ARG0 (i2 / i 
                                          :ARG1-of (h / have-rel-role-91 
                                                :ARG2 (m / mother) 
                                                :poss-of (t / trousers))) 
                                    :ARG1-of (d3 / depend-01 
                                          :ARG0 (o / or 
                                                :op1 (p3 / page 
                                                      :domain (i3 / i) 
                                                      :domain-of (p4 / possible 
                                                            :ARG0-of (p5 / promise-01 
                                                                  :op-of (a / and 
                                                                        :op1 (d / doctor))))) 
                                                :op2 (h2 / herald-01))) 
                                    :ARG2 (p / play-01) 
                                    :domain-of (p2 / possible))))) 
            :concession (a2 / away)))

# ::snt as calls for an allout ambulance strike grew yesterday kenneth clarke secretary of state for health promised to listen carefully to peace proposals drawn up by a leading conservative backbencher
# ::tok as calls for an allout ambulance strike grew yesterday kenneth clarke secretary of state for health promised to listen carefully to peace proposals drawn up by a leading conservative backbencher
# ::alignments 28-29|0.0.0.0 27-28|0 22-23|0.0.0.1.0.1.0+0.0.0.1.0.1 21-22|0.0.0.1.0.1.1 19-20|0.0.0.1.0.2 18-19|0.0.0.1.0 16-17|0.0.0.1 15-16|0.0.0.1.0.0.0.0 13-14|0.0.0.1.0.0.0 11-12|0.0.0.1.0.0 8-9|0.0.0.2 7-8|0.0.0 6-7|0.0 5-6|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:03.244
# ::node	0	lead-01	27-28
# ::node	0.0	strike-01	6-7
# ::node	0.0.0	grow-01	7-8
# ::node	0.0.0.0	conservative	28-29
# ::node	0.0.0.1	promise-01	16-17
# ::node	0.0.0.1.0	listen-01	18-19
# ::node	0.0.0.1.0.0	secretary	11-12
# ::node	0.0.0.1.0.0.0	state	13-14
# ::node	0.0.0.1.0.0.0.0	health	15-16
# ::node	0.0.0.1.0.1	thing	22-23
# ::node	0.0.0.1.0.1.0	propose-01	22-23
# ::node	0.0.0.1.0.1.1	peace	21-22
# ::node	0.0.0.1.0.2	careful	19-20
# ::node	0.0.0.2	yesterday	8-9
# ::node	0.0.1	ambulance	5-6
# ::root	0	lead-01
# ::edge	grow-01	ARG0	conservative	0.0.0	0.0.0.0	
# ::edge	grow-01	ARG1	promise-01	0.0.0	0.0.0.1	
# ::edge	grow-01	manner	strike-01	0.0.0	0.0	
# ::edge	grow-01	time	yesterday	0.0.0	0.0.0.2	
# ::edge	lead-01	ARG1	strike-01	0	0.0	
# ::edge	listen-01	ARG0	secretary	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	listen-01	ARG1	thing	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	listen-01	manner	careful	0.0.0.1.0	0.0.0.1.0.2	
# ::edge	promise-01	ARG1	listen-01	0.0.0.1	0.0.0.1.0	
# ::edge	propose-01	ARG1	thing	0.0.0.1.0.1.0	0.0.0.1.0.1	
# ::edge	secretary	mod	state	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	state	mod	health	0.0.0.1.0.0.0	0.0.0.1.0.0.0.0	
# ::edge	strike-01	mod	ambulance	0.0	0.0.1	
# ::edge	thing	mod	peace	0.0.0.1.0.1	0.0.0.1.0.1.1	
(l / lead-01 
      :ARG1 (s3 / strike-01 
            :manner-of (g / grow-01 
                  :ARG0 (c / conservative) 
                  :ARG1 (p3 / promise-01 
                        :ARG1 (l2 / listen-01 
                              :ARG0 (s2 / secretary 
                                    :mod (s / state 
                                          :mod (h / health))) 
                              :ARG1 (t / thing 
                                    :ARG1-of (p / propose-01) 
                                    :mod (p2 / peace)) 
                              :manner (c2 / careful))) 
                  :time (y / yesterday)) 
            :mod (a / ambulance)))

# ::snt   the new offer will appeal to arbitrageurs believed to hold up to 30 per cent of sea containers common stock who invested heavily after mr sherwood promised his plan would give stockholders between dollars 70 and dollars 100 a share
# ::tok the new offer will appeal to arbitrageurs believed to hold up to 30 per cent of sea containers common stock who invested heavily after mr sherwood promised his plan would give stockholders between dollars 70 and dollars 100 a share
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:03.245
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt this friendly pension is owned and run by the burger family and all guests are promised a warm welcome
# ::tok this friendly pension is owned and run by the burger family and all guests are promised a warm welcome
# ::alignments 18-19|0.0.0.0 17-18|0.0.0.0.0 15-16|0.0 13-14|0.0.0 12-13|0.0.0.1 11-12|0 10-11|0.0.1.0.0 5-6|0.0.1 4-5|0.0.1.0 2-3|0.0.1.0.1 1-2|0.0.1.0.1.0 0-1|0.0.1.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:03.398
# ::node	0	and	11-12
# ::node	0.0	promise-01	15-16
# ::node	0.0.0	guest	13-14
# ::node	0.0.0.0	welcome-01	18-19
# ::node	0.0.0.0.0	warm	17-18
# ::node	0.0.0.1	all	12-13
# ::node	0.0.1	and	5-6
# ::node	0.0.1.0	own-01	4-5
# ::node	0.0.1.0.0	family	10-11
# ::node	0.0.1.0.1	pension	2-3
# ::node	0.0.1.0.1.0	friendly-41	1-2
# ::node	0.0.1.0.1.1	this	0-1
# ::root	0	and
# ::edge	and	op1	own-01	0.0.1	0.0.1.0	
# ::edge	and	op1	promise-01	0	0.0	
# ::edge	and	op2	promise-01	0.0.1	0.0	
# ::edge	friendly-41	ARG1	pension	0.0.1.0.1.0	0.0.1.0.1	
# ::edge	guest	quant	all	0.0.0	0.0.0.1	
# ::edge	own-01	ARG0	family	0.0.1.0	0.0.1.0.0	
# ::edge	own-01	ARG1	pension	0.0.1.0	0.0.1.0.1	
# ::edge	pension	mod	this	0.0.1.0.1	0.0.1.0.1.1	
# ::edge	promise-01	ARG1	guest	0.0	0.0.0	
# ::edge	welcome-01	ARG0	guest	0.0.0.0	0.0.0	
# ::edge	welcome-01	ARG1	warm	0.0.0.0	0.0.0.0.0	
(a2 / and 
      :op1 (p / promise-01 
            :ARG1 (g / guest 
                  :ARG0-of (w / welcome-01 
                        :ARG1 (w2 / warm)) 
                  :quant (a / all)) 
            :op-of (a3 / and 
                  :op1 (o / own-01 
                        :ARG0 (f / family) 
                        :ARG1 (p2 / pension 
                              :ARG1-of (f2 / friendly-41) 
                              :mod (t / this))))))

# ::snt but memories remain of the nkomati accord in 1984 when south africa promised to stop backing the mnr and instead stepped up support
# ::tok but memories remain of the nkomati accord in 1984 when south africa promised to stop backing the mnr and instead stepped up support
# ::alignments 22-23|0.0.2.0.0.0.0 20-21|0.0.2.0.0.0 19-20|0.0.2.0.0.0.1 18-19|0.0.2 15-16|0.0.2.0.1.0 14-15|0.0.2.0.1 12-13|0.0.2.0 10-12|0.0.2.0.0.1.0+0.0.2.0.0.1.1+0.0.2.0.0.1+0.0.2.0.0 8-9|0.0.3.0+0.0.3 6-7|0.0.1 2-3|0.0 1-2|0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:03.577
# ::node	0	contrast-01	0-1
# ::node	0.0	remain-01	2-3
# ::node	0.0.0	memory	1-2
# ::node	0.0.1	accord	6-7
# ::node	0.0.2	and	18-19
# ::node	0.0.2.0	promise-01	12-13
# ::node	0.0.2.0.0	country	10-12
# ::node	0.0.2.0.0.0	step-02	20-21
# ::node	0.0.2.0.0.0.0	support-01	22-23
# ::node	0.0.2.0.0.0.1	instead	19-20
# ::node	0.0.2.0.0.1	name	10-12
# ::node	0.0.2.0.0.1.0	"africa"	10-12
# ::node	0.0.2.0.0.1.1	"south"	10-12
# ::node	0.0.2.0.1	stop-01	14-15
# ::node	0.0.2.0.1.0	back-01	15-16
# ::node	0.0.3	date-entity	8-9
# ::node	0.0.3.0	1984	8-9
# ::root	0	contrast-01
# ::edge	and	op1	promise-01	0.0.2	0.0.2.0	
# ::edge	contrast-01	ARG1	remain-01	0	0.0	
# ::edge	country	name	name	0.0.2.0.0	0.0.2.0.0.1	
# ::edge	date-entity	year	1984	0.0.3	0.0.3.0	
# ::edge	name	op1	"africa"	0.0.2.0.0.1	0.0.2.0.0.1.0	
# ::edge	name	op2	"south"	0.0.2.0.0.1	0.0.2.0.0.1.1	
# ::edge	promise-01	ARG0	country	0.0.2.0	0.0.2.0.0	
# ::edge	promise-01	ARG1	stop-01	0.0.2.0	0.0.2.0.1	
# ::edge	remain-01	ARG1	memory	0.0	0.0.0	
# ::edge	remain-01	ARG3	accord	0.0	0.0.1	
# ::edge	remain-01	condition	and	0.0	0.0.2	
# ::edge	remain-01	time	date-entity	0.0	0.0.3	
# ::edge	step-02	ARG0	country	0.0.2.0.0.0	0.0.2.0.0	
# ::edge	step-02	ARG1	support-01	0.0.2.0.0.0	0.0.2.0.0.0.0	
# ::edge	step-02	mod	instead	0.0.2.0.0.0	0.0.2.0.0.0.1	
# ::edge	stop-01	ARG1	back-01	0.0.2.0.1	0.0.2.0.1.0	
(c2 / contrast-01 
      :ARG1 (r / remain-01 
            :ARG1 (m / memory) 
            :ARG3 (a2 / accord) 
            :condition (a / and 
                  :op1 (p / promise-01 
                        :ARG0 (c / country 
                              :ARG0-of (s2 / step-02 
                                    :ARG1 (s / support-01) 
                                    :mod (i / instead)) 
                              :name (n / name 
                                    :op1 "africa" 
                                    :op2 "south")) 
                        :ARG1 (s3 / stop-01 
                              :ARG1 (b / back-01)))) 
            :time (d / date-entity 
                  :year 1984)))

# ::snt fate had thrown us together  as he left clutching my documentation he said adrian during the week we are in moscow do you promise swear give me your word that you will not utter one word about the norwegian leather industry
# ::tok fate had thrown us together as he left clutching my documentation he said adrian during the week we are in moscow do you promise swear give me your word that you will not utter one word about the norwegian leather industry
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:03.579
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt it follows that peoples interest in being able to bind themselves is the basis of a power to promise which they possess and of an obligation to keep promises they make, but neither the power nor the obligation point to a right to promise
# ::tok it follows that peoples interest in being able to bind themselves is the basis of a power to promise which they possess and of an obligation to keep promises they make , but neither the power nor the obligation point to a right to promise
# ::alignments 44-45|0.0.0.2.0 39-40|0.0.0.2.0.1 38-39|0 35-36|0.0.0.2.0.0 32-33|0.0.0.2.0.1.0 29-30|0.0.0.2.0.1.0.0.0 28-29|0.0.0.2.0.1.0.0 25-26|0.0.0.2.0.1.0.0.1 22-23|0.0.0.2 21-22|0.0.0 20-21|0.0 18-19|0.0.0.1 16-17|0.0.0.1.0 7-8|0.0.0.2.0.1.0.0.1.0.0 4-5|0.0.0.2.0.1.0.0.1.0 3-4|0.0.0.2.0.1.0.0.1.0.1 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:04.246
# ::node	0	obligate-01	38-39
# ::node	0.0	they	20-21
# ::node	0.0.0	possess-01	21-22
# ::node	0.0.0.0	it	0-1
# ::node	0.0.0.1	promise-01	18-19
# ::node	0.0.0.1.0	power	16-17
# ::node	0.0.0.2	and	22-23
# ::node	0.0.0.2.0	promise-01	44-45
# ::node	0.0.0.2.0.0	power	35-36
# ::node	0.0.0.2.0.1	point	39-40
# ::node	0.0.0.2.0.1.0	contrast-01	32-33
# ::node	0.0.0.2.0.1.0.0	promise-01	28-29
# ::node	0.0.0.2.0.1.0.0.0	they	29-30
# ::node	0.0.0.2.0.1.0.0.1	obligate-01	25-26
# ::node	0.0.0.2.0.1.0.0.1.0	interest-01	4-5
# ::node	0.0.0.2.0.1.0.0.1.0.0	possible	7-8
# ::node	0.0.0.2.0.1.0.0.1.0.1	people	3-4
# ::root	0	obligate-01
# ::edge	and	op1	possess-01	0.0.0.2	0.0.0	
# ::edge	contrast-01	ARG1	promise-01	0.0.0.2.0.1.0	0.0.0.2.0.1.0.0	
# ::edge	contrast-01	ARG2	point	0.0.0.2.0.1.0	0.0.0.2.0.1	
# ::edge	interest-01	ARG0	possible	0.0.0.2.0.1.0.0.1.0	0.0.0.2.0.1.0.0.1.0.0	
# ::edge	interest-01	ARG1	people	0.0.0.2.0.1.0.0.1.0	0.0.0.2.0.1.0.0.1.0.1	
# ::edge	obligate-01	ARG1	interest-01	0.0.0.2.0.1.0.0.1	0.0.0.2.0.1.0.0.1.0	
# ::edge	obligate-01	ARG1	they	0	0.0	
# ::edge	point	op1	promise-01	0.0.0.2.0.1	0.0.0.2.0	
# ::edge	possess-01	ARG0	they	0.0.0	0.0	
# ::edge	possess-01	ARG1	it	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG0	power	0.0.0.1	0.0.0.1.0	
# ::edge	promise-01	ARG0	they	0.0.0.2.0.1.0.0	0.0.0.2.0.1.0.0.0	
# ::edge	promise-01	ARG1	obligate-01	0.0.0.2.0.1.0.0	0.0.0.2.0.1.0.0.1	
# ::edge	promise-01	ARG1	possess-01	0.0.0.1	0.0.0	
# ::edge	promise-01	ARG1	power	0.0.0.2.0	0.0.0.2.0.0	
# ::edge	promise-01	ARG2	and	0.0.0.2.0	0.0.0.2	
(o / obligate-01 
      :ARG1 (t2 / they 
            :ARG0-of (p5 / possess-01 
                  :ARG1 (i2 / it) 
                  :ARG1-of (p6 / promise-01 
                        :ARG0 (p7 / power)) 
                  :op-of (a / and 
                        :ARG2-of (p / promise-01 
                              :ARG1 (p3 / power) 
                              :op-of (p2 / point 
                                    :ARG2-of (c / contrast-01 
                                          :ARG1 (p4 / promise-01 
                                                :ARG0 (t / they) 
                                                :ARG1 (o2 / obligate-01 
                                                      :ARG1 (i / interest-01 
                                                            :ARG0 (p8 / possible) 
                                                            :ARG1 (p9 / people)))))))))))

# ::snt   the east german government has promised to reduce sulphur dioxide emissions 30 per cent by 1993 and as part of the new glasnost sweeping the administration it now publishes air pollution figures in national newspapers
# ::tok the east german government has promised to reduce sulphur dioxide emissions 30 per cent by 1993 and as part of the new glasnost sweeping the administration it now publishes air pollution figures in national newspapers
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:04.246
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the tory manifesto of that general election year again promised action to enforce adequate procedure agreements in essential services but the idea was again shelved in favour of action on union democracy
# ::tok the tory manifesto of that general election year again promised action to enforce adequate procedure agreements in essential services but the idea was again shelved in favour of action on union democracy
# ::alignments 31-32|0.2.1 30-31|0.2.1.0 28-29|0.2.0.0 26-27|0.2.0 24-25|0.2 23-24|0.2.2 21-22|0.0.1 19-20|0 18-19|0.0.2.0.2 17-18|0.0.2.0.2.0 15-16|0.0.2.0 14-15|0.0.2.0.1 13-14|0.0.2.0.3 12-13|0.0.2 10-11|0.0.2.1 9-10|0.0 8-9|0.0.3 7-8|0.0.0 6-7|0.1 5-6|0.1.0 1-2|0.0.2.0.0.0.0+0.0.2.0.0.0+0.0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:04.594
# ::node	0	contrast-01	19-20
# ::node	0.0	promise-01	9-10
# ::node	0.0.0	year	7-8
# ::node	0.0.1	idea	21-22
# ::node	0.0.2	enforce-01	12-13
# ::node	0.0.2.0	agree-01	15-16
# ::node	0.0.2.0.0	political-party	1-2
# ::node	0.0.2.0.0.0	name	1-2
# ::node	0.0.2.0.0.0.0	"Tory"	1-2
# ::node	0.0.2.0.1	procedure	14-15
# ::node	0.0.2.0.2	service	18-19
# ::node	0.0.2.0.2.0	essential	17-18
# ::node	0.0.2.0.3	adequate	13-14
# ::node	0.0.2.1	action	10-11
# ::node	0.0.3	again	8-9
# ::node	0.1	elect-01	6-7
# ::node	0.1.0	general	5-6
# ::node	0.2	shelve-01	24-25
# ::node	0.2.0	favor-01	26-27
# ::node	0.2.0.0	action	28-29
# ::node	0.2.1	democracy	31-32
# ::node	0.2.1.0	union	30-31
# ::node	0.2.2	again	23-24
# ::root	0	contrast-01
# ::edge	action	purpose	enforce-01	0.0.2.1	0.0.2	
# ::edge	agree-01	ARG0	political-party	0.0.2.0	0.0.2.0.0	
# ::edge	agree-01	ARG1	procedure	0.0.2.0	0.0.2.0.1	
# ::edge	agree-01	ARG2	service	0.0.2.0	0.0.2.0.2	
# ::edge	agree-01	mod	adequate	0.0.2.0	0.0.2.0.3	
# ::edge	contrast-01	ARG1	promise-01	0	0.0	
# ::edge	contrast-01	ARG2	shelve-01	0	0.2	
# ::edge	democracy	mod	union	0.2.1	0.2.1.0	
# ::edge	elect-01	ARG1	contrast-01	0.1	0	
# ::edge	elect-01	mod	general	0.1	0.1.0	
# ::edge	enforce-01	ARG1	agree-01	0.0.2	0.0.2.0	
# ::edge	favor-01	ARG1	action	0.2.0	0.2.0.0	
# ::edge	name	op1	"Tory"	0.0.2.0.0.0	0.0.2.0.0.0.0	
# ::edge	political-party	name	name	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	promise-01	ARG0	year	0.0	0.0.0	
# ::edge	promise-01	ARG1	idea	0.0	0.0.1	
# ::edge	promise-01	ARG2	enforce-01	0.0	0.0.2	
# ::edge	promise-01	mod	again	0.0	0.0.3	
# ::edge	service	mod	essential	0.0.2.0.2	0.0.2.0.2.0	
# ::edge	shelve-01	ARG1	favor-01	0.2	0.2.0	
# ::edge	shelve-01	ARG2	democracy	0.2	0.2.1	
# ::edge	shelve-01	manner	again	0.2	0.2.2	
(c / contrast-01 
      :ARG1 (p2 / promise-01 
            :ARG0 (y / year) 
            :ARG1 (i / idea) 
            :ARG2 (e2 / enforce-01 
                  :ARG1 (a3 / agree-01 
                        :ARG0 (p3 / political-party 
                              :name (n / name 
                                    :op1 "Tory")) 
                        :ARG1 (p / procedure) 
                        :ARG2 (s2 / service 
                              :mod (e / essential)) 
                        :mod (a4 / adequate)) 
                  :purpose-of (a5 / action)) 
            :mod (a6 / again)) 
      :ARG1-of (e3 / elect-01 
            :mod (g / general)) 
      :ARG2 (s / shelve-01 
            :ARG1 (f / favor-01 
                  :ARG1 (a / action)) 
            :ARG2 (d / democracy 
                  :mod (u / union)) 
            :manner (a2 / again)))

# ::snt i promised to return on wednesday
# ::tok i promised to return on wednesday
# ::alignments 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:04.599
# ::node	0	promise-01	1-2
# ::node	0.0	i	0-1
# ::root	0	promise-01
# ::edge	promise-01	ARG0	i	0	0.0	
(p / promise-01 
      :ARG0 (i / i))

# ::snt that leaves virusbub which momentarily promises to perform minor miracles but ultimately comes across like a killing joke tribute to gregory isaacs
# ::tok that leaves virusbub which momentarily promises to perform minor miracles but ultimately comes across like a killing joke tribute to gregory isaacs
# ::alignments 18-19|0.0.2.0 17-18|0.0.2 16-17|0.0.2.0.0 13-14|0.0.2.0.0.0 11-12|0.0.1.0.0 10-11|0 9-10|0.0.0 8-9|0.0.0.0 7-8|0.0 5-6|0.0.1 1-2|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:04.718
# ::node	0	contrast-01	10-11
# ::node	0.0	perform-01	7-8
# ::node	0.0.0	miracle	9-10
# ::node	0.0.0.0	minor	8-9
# ::node	0.0.1	promise-01	5-6
# ::node	0.0.1.0	leave-01	1-2
# ::node	0.0.1.0.0	ultimate	11-12
# ::node	0.0.2	joke-01	17-18
# ::node	0.0.2.0	tribute	18-19
# ::node	0.0.2.0.0	kill-01	16-17
# ::node	0.0.2.0.0.0	across	13-14
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	perform-01	0	0.0	
# ::edge	joke-01	ARG0	tribute	0.0.2	0.0.2.0	
# ::edge	joke-01	ARG1	perform-01	0.0.2	0.0	
# ::edge	kill-01	ARG0	across	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	kill-01	ARG1	tribute	0.0.2.0.0	0.0.2.0	
# ::edge	leave-01	ARG0	ultimate	0.0.1.0	0.0.1.0.0	
# ::edge	leave-01	ARG1	promise-01	0.0.1.0	0.0.1	
# ::edge	miracle	mod	minor	0.0.0	0.0.0.0	
# ::edge	perform-01	ARG1	miracle	0.0	0.0.0	
# ::edge	promise-01	ARG1	perform-01	0.0.1	0.0	
(c / contrast-01 
      :ARG1 (p / perform-01 
            :ARG1 (m / miracle 
                  :mod (m2 / minor)) 
            :ARG1-of (p2 / promise-01 
                  :ARG1-of (l / leave-01 
                        :ARG0 (u / ultimate))) 
            :ARG1-of (j / joke-01 
                  :ARG0 (t / tribute 
                        :ARG1-of (k / kill-01 
                              :ARG0 (a / across))))))

# ::snt it promises more codsociology since it intends to look at what british films tell us about our society lifestyles and culture
# ::tok it promises more codsociology since it intends to look at what british films tell us about our society lifestyles and culture
# ::alignments 20-21|0.2.1 19-20|0.2 18-19|0.2.0 17-18|0.1.0 13-14|0 12-13|0.1 6-7|0.0.0 5-6|0.0 4-5|0.0.0.0 1-2|0.0.0.0.0 0-1|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:04.944
# ::node	0	tell-01	13-14
# ::node	0.0	it	5-6
# ::node	0.0.0	intend-01	6-7
# ::node	0.0.0.0	since	4-5
# ::node	0.0.0.0.0	promise-01	1-2
# ::node	0.0.0.0.0.0	it	0-1
# ::node	0.1	film	12-13
# ::node	0.1.0	society	17-18
# ::node	0.2	and	19-20
# ::node	0.2.0	lifestyle	18-19
# ::node	0.2.1	culture	20-21
# ::root	0	tell-01
# ::edge	and	op1	lifestyle	0.2	0.2.0	
# ::edge	and	op2	culture	0.2	0.2.1	
# ::edge	intend-01	ARG0	it	0.0.0	0.0	
# ::edge	promise-01	ARG0	it	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	since	op1	promise-01	0.0.0.0	0.0.0.0.0	
# ::edge	since	op2	intend-01	0.0.0.0	0.0.0	
# ::edge	society	poss	film	0.1.0	0.1	
# ::edge	tell-01	ARG0	it	0	0.0	
# ::edge	tell-01	ARG1	film	0	0.1	
# ::edge	tell-01	ARG2	and	0	0.2	
(t / tell-01 
      :ARG0 (i2 / it 
            :ARG0-of (i / intend-01 
                  :op-of (s2 / since 
                        :op1 (p / promise-01 
                              :ARG0 (i3 / it))))) 
      :ARG1 (f / film 
            :poss-of (s / society)) 
      :ARG2 (a / and 
            :op1 (l / lifestyle) 
            :op2 (c / culture)))

# ::snt only newfoundland and new zealand promised support
# ::tok only newfoundland and new zealand promised support
# ::alignments 6-7|0.1 5-6|0 3-5|0.2.0.0+0.2.0.1+0.2.0+0.2 2-3|0.0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:05.089
# ::node	0	promise-01	5-6
# ::node	0.0	and	2-3
# ::node	0.1	support-01	6-7
# ::node	0.1.0	only	0-1
# ::node	0.2	country	3-5
# ::node	0.2.0	name	3-5
# ::node	0.2.0.0	"zealand"	3-5
# ::node	0.2.0.1	"new"	3-5
# ::root	0	promise-01
# ::edge	country	name	name	0.2	0.2.0	
# ::edge	name	op1	"zealand"	0.2.0	0.2.0.0	
# ::edge	name	op2	"new"	0.2.0	0.2.0.1	
# ::edge	promise-01	ARG0	and	0	0.0	
# ::edge	promise-01	ARG1	support-01	0	0.1	
# ::edge	promise-01	instrument	country	0	0.2	
# ::edge	support-01	ARG1	only	0.1	0.1.0	
(p / promise-01 
      :ARG0 (a / and) 
      :ARG1 (s / support-01 
            :ARG1 (o / only)) 
      :instrument (c / country 
            :name (n / name 
                  :op1 "zealand" 
                  :op2 "new")))

# ::snt the plans promise a painless way to provide a lump sum extra cash for school fees and home improvements or to boost the income of the retired but there is frequently a high price to pay
# ::tok the plans promise a painless way to provide a lump sum extra cash for school fees and home improvements or to boost the income of the retired but there is frequently a high price to pay
# ::alignments 35-36|0.1.1.1.0.0 33-34|0.1.1.1.0.0.0+0.1.1.1.0.0.0.0 32-33|0.1.1.1.0.0.0.0.0 30-31|0.1.1.1.2.0 27-28|0 26-27|0.0 23-24|0.1.1.2 21-22|0.1 19-20|0.1.1 18-19|0.1.1.1.0.2 17-18|0.1.1.1.0.2.0 16-17|0.1.1.1.0 15-16|0.1.1.1.0.1 14-15|0.1.1.1.0.1.0 12-13|0.1.1.0 11-12|0.1.1.0.0 10-11|0.1.0 9-10|0.1.1.1.2 7-8|0.1.1.1 5-6|0.1.1.1.1 4-5|0.1.1.1.1.1 2-3|0.1.1.1.1.0 1-2|0.1.1.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:05.773
# ::node	0	contrast-01	27-28
# ::node	0.0	retire-01	26-27
# ::node	0.1	boost-01	21-22
# ::node	0.1.0	sum	10-11
# ::node	0.1.1	or	19-20
# ::node	0.1.1.0	cash	12-13
# ::node	0.1.1.0.0	extra	11-12
# ::node	0.1.1.1	provide-01	7-8
# ::node	0.1.1.1.0	and	16-17
# ::node	0.1.1.1.0.0	pay-01	35-36
# ::node	0.1.1.1.0.0.0	price-01	33-34
# ::node	0.1.1.1.0.0.0.0	thing	33-34
# ::node	0.1.1.1.0.0.0.0.0	high	32-33
# ::node	0.1.1.1.0.1	fee	15-16
# ::node	0.1.1.1.0.1.0	school	14-15
# ::node	0.1.1.1.0.2	improve-01	18-19
# ::node	0.1.1.1.0.2.0	home	17-18
# ::node	0.1.1.1.1	way	5-6
# ::node	0.1.1.1.1.0	promise-01	2-3
# ::node	0.1.1.1.1.0.0	plan-01	1-2
# ::node	0.1.1.1.1.1	painless	4-5
# ::node	0.1.1.1.2	lump-01	9-10
# ::node	0.1.1.1.2.0	frequent	30-31
# ::node	0.1.1.2	income	23-24
# ::root	0	contrast-01
# ::edge	and	op1	fee	0.1.1.1.0	0.1.1.1.0.1	
# ::edge	and	op2	improve-01	0.1.1.1.0	0.1.1.1.0.2	
# ::edge	boost-01	ARG0	sum	0.1	0.1.0	
# ::edge	boost-01	ARG1	contrast-01	0.1	0	
# ::edge	cash	mod	extra	0.1.1.0	0.1.1.0.0	
# ::edge	contrast-01	ARG1	retire-01	0	0.0	
# ::edge	fee	mod	school	0.1.1.1.0.1	0.1.1.1.0.1.0	
# ::edge	improve-01	ARG1	home	0.1.1.1.0.2	0.1.1.1.0.2.0	
# ::edge	lump-01	ARG1	frequent	0.1.1.1.2	0.1.1.1.2.0	
# ::edge	or	consist	cash	0.1.1	0.1.1.0	
# ::edge	or	op1	provide-01	0.1.1	0.1.1.1	
# ::edge	or	op2	boost-01	0.1.1	0.1	
# ::edge	or	op3	income	0.1.1	0.1.1.2	
# ::edge	pay-01	ARG3	and	0.1.1.1.0.0	0.1.1.1.0	
# ::edge	price-01	ARG1	pay-01	0.1.1.1.0.0.0	0.1.1.1.0.0	
# ::edge	price-01	ARG2	thing	0.1.1.1.0.0.0	0.1.1.1.0.0.0.0	
# ::edge	promise-01	ARG0	plan-01	0.1.1.1.1.0	0.1.1.1.1.0.0	
# ::edge	promise-01	ARG1	way	0.1.1.1.1.0	0.1.1.1.1	
# ::edge	provide-01	ARG0	and	0.1.1.1	0.1.1.1.0	
# ::edge	provide-01	ARG1	way	0.1.1.1	0.1.1.1.1	
# ::edge	provide-01	purpose	lump-01	0.1.1.1	0.1.1.1.2	
# ::edge	thing	mod	high	0.1.1.1.0.0.0.0	0.1.1.1.0.0.0.0.0	
# ::edge	way	mod	painless	0.1.1.1.1	0.1.1.1.1.1	
(c / contrast-01 
      :ARG1 (r / retire-01) 
      :ARG1-of (b / boost-01 
            :ARG0 (s2 / sum) 
            :op-of (o / or 
                  :consist (c2 / cash 
                        :mod (e / extra)) 
                  :op1 (p3 / provide-01 
                        :ARG0 (a / and 
                              :ARG3-of (p / pay-01 
                                    :ARG1-of (p2 / price-01 
                                          :ARG2 (t / thing 
                                                :mod (h / high)))) 
                              :op1 (f2 / fee 
                                    :mod (s / school)) 
                              :op2 (i2 / improve-01 
                                    :ARG1 (h2 / home))) 
                        :ARG1 (w / way 
                              :ARG1-of (p5 / promise-01 
                                    :ARG0 (p6 / plan-01)) 
                              :mod (p4 / painless)) 
                        :purpose (l / lump-01 
                              :ARG1 (f / frequent))) 
                  :op2 (i / income))))

# ::snt even though the new series looks good with one of its highlights promising to be the smallscreen debut of paul whitehead and he has at least three other projects on the go harry enfield still hasnt figured out what it is that he does exactly
# ::tok even though the new series looks good with one of its highlights promising to be the smallscreen debut of paul whitehead and he has at least three other projects on the go harry enfield still hasnt figured out what it is that he does exactly
# ::alignments 44-45|0.0.0.1 42-43|0.0.0.3 39-40|0.0.0.2.1 36-37|0.0.0.2 34-35|0.0.0.2.2 28-29|0.0.0.2.0.0 27-28|0.0.0.2.0.0.0 26-27|0.0.0.2.0.0.1 22-23|0.0.0.2.0 21-22|0.0.0 12-13|0.0 11-12|0 6-7|0.0.0.0.0 5-6|0.0.0.0 4-5|0.0.0.0.1 3-4|0.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:06.513
# ::node	0	highlight-01	11-12
# ::node	0.0	promise-01	12-13
# ::node	0.0.0	and	21-22
# ::node	0.0.0.0	look-02	5-6
# ::node	0.0.0.0.0	good	6-7
# ::node	0.0.0.0.1	series	4-5
# ::node	0.0.0.0.1.0	new	3-4
# ::node	0.0.0.1	exact	44-45
# ::node	0.0.0.2	figure-05	36-37
# ::node	0.0.0.2.0	he	22-23
# ::node	0.0.0.2.0.0	project	28-29
# ::node	0.0.0.2.0.0.0	other	27-28
# ::node	0.0.0.2.0.0.1	3	26-27
# ::node	0.0.0.2.1	it	39-40
# ::node	0.0.0.2.2	still	34-35
# ::node	0.0.0.3	he	42-43
# ::root	0	highlight-01
(h3 / highlight-01 
      :ARG1-of (p2 / promise-01 
            :ARG0 (a / and 
                  :ARG0-of (l / look-02 
                        :ARG1 (g / good) 
                        :ARG2 (s2 / series 
                              :mod (n / new))) 
                  :mod (e / exact) 
                  :op1 (f / figure-05 
                        :ARG0 (h2 / he 
                              :poss-of (p / project 
                                    :mod (o / other) 
                                    :quant 3)) 
                        :ARG1 (i / it) 
                        :mod (s / still)) 
                  :op2 (h / he))))

# ::snt the vg deal is a step forward in the growth pattern he said pointing out that the group had promised it would enhance earnings with last years purchase of pennwalt and had exceeded that prediction
# ::tok the vg deal is a step forward in the growth pattern he said pointing out that the group had promised it would enhance earnings with last years purchase of pennwalt and had exceeded that prediction
# ::alignments 34-35|0.0.0.0 32-33|0.0.0 30-31|0.0.0.1 27-28|0.0.0.1.0 26-27|0.0.0.1.0.0.0+0.0.0.1.0.0 25-26|0.0.0.1.0.2 23-24|0.0.0.1.1.0.0.0.0 22-23|0.0.0.1.1.0.0 20-21|0.0.0.1.1.0.0.0 19-20|0.0.0.1.1 17-18|0.0.0.1.1.0 13-14|0.1 12-13|0 11-12|0.0 10-11|0.1.0 9-10|0.1.0.0 6-7|0.1.0.1 2-3|0.0.0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:07.882
# ::node	0	say-01	12-13
# ::node	0.0	he	11-12
# ::node	0.0.0	exceed-01	32-33
# ::node	0.0.0.0	predict-01	34-35
# ::node	0.0.0.1	and	30-31
# ::node	0.0.0.1.0	purchase-01	27-28
# ::node	0.0.0.1.0.0	temporal-quantity	26-27
# ::node	0.0.0.1.0.0.0	year	26-27
# ::node	0.0.0.1.0.1	deal-01	2-3
# ::node	0.0.0.1.0.2	last	25-26
# ::node	0.0.0.1.1	promise-01	19-20
# ::node	0.0.0.1.1.0	group	17-18
# ::node	0.0.0.1.1.0.0	enhance-01	22-23
# ::node	0.0.0.1.1.0.0.0	it	20-21
# ::node	0.0.0.1.1.0.0.0.0	earn-01	23-24
# ::node	0.1	point-02	13-14
# ::node	0.1.0	pattern	10-11
# ::node	0.1.0.0	grow-01	9-10
# ::node	0.1.0.1	forward	6-7
# ::root	0	say-01
# ::edge	and	op1	exceed-01	0.0.0.1	0.0.0	
# ::edge	deal-01	ARG1	purchase-01	0.0.0.1.0.1	0.0.0.1.0	
# ::edge	earn-01	ARG0	it	0.0.0.1.1.0.0.0.0	0.0.0.1.1.0.0.0	
# ::edge	enhance-01	ARG0	group	0.0.0.1.1.0.0	0.0.0.1.1.0	
# ::edge	enhance-01	ARG1	it	0.0.0.1.1.0.0	0.0.0.1.1.0.0.0	
# ::edge	exceed-01	ARG0	he	0.0.0	0.0	
# ::edge	exceed-01	ARG1	predict-01	0.0.0	0.0.0.0	
# ::edge	forward	op1	pattern	0.1.0.1	0.1.0	
# ::edge	pattern	mod	grow-01	0.1.0	0.1.0.0	
# ::edge	point-02	ARG1	pattern	0.1	0.1.0	
# ::edge	promise-01	ARG0	group	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	promise-01	ARG2	and	0.0.0.1.1	0.0.0.1	
# ::edge	purchase-01	ARG0	and	0.0.0.1.0	0.0.0.1	
# ::edge	purchase-01	ARG1	temporal-quantity	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	purchase-01	mod	last	0.0.0.1.0	0.0.0.1.0.2	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	point-02	0	0.1	
# ::edge	temporal-quantity	unit	year	0.0.0.1.0.0	0.0.0.1.0.0.0	
(s / say-01 
      :ARG0 (h / he 
            :ARG0-of (e / exceed-01 
                  :ARG1 (p / predict-01) 
                  :op-of (a / and 
                        :ARG0-of (p2 / purchase-01 
                              :ARG1 (t / temporal-quantity 
                                    :unit (y / year)) 
                              :ARG1-of (d / deal-01) 
                              :mod (l / last)) 
                        :ARG2-of (p3 / promise-01 
                              :ARG0 (g / group 
                                    :ARG0-of (e3 / enhance-01 
                                          :ARG1 (i / it 
                                                :ARG0-of (e2 / earn-01)))))))) 
      :ARG1 (p4 / point-02 
            :ARG1 (p5 / pattern 
                  :mod (g2 / grow-01) 
                  :op-of (f / forward))))

# ::snt but ive promised to go horseriding and ill try my hand at minigolf
# ::tok but ive promised to go horseriding and ill try my hand at minigolf
# ::alignments 10-11|0.0.0.0.0 8-9|0.0.0.0 7-8|0.0.0.0.1 6-7|0.0.0 2-3|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:07.915
# ::node	0	contrast-01	0-1
# ::node	0.0	promise-01	2-3
# ::node	0.0.0	and	6-7
# ::node	0.0.0.0	try-01	8-9
# ::node	0.0.0.0.0	hand	10-11
# ::node	0.0.0.0.1	ill-41	7-8
# ::root	0	contrast-01
# ::edge	and	op1	try-01	0.0.0	0.0.0.0	
# ::edge	contrast-01	ARG1	promise-01	0	0.0	
# ::edge	promise-01	ARG1	and	0.0	0.0.0	
# ::edge	try-01	ARG1	hand	0.0.0.0	0.0.0.0.0	
# ::edge	try-01	manner	ill-41	0.0.0.0	0.0.0.0.1	
(c / contrast-01 
      :ARG1 (p / promise-01 
            :ARG1 (a / and 
                  :op1 (t / try-01 
                        :ARG1 (h / hand) 
                        :manner (i / ill-41)))))

# ::snt 9174 promise-v 800296 Promise 537527
# ::tok 9174 promise - v 800296 Promise 537527
# ::alignments 6-7|0.0.2+0.0.1+0.0.0+0.0 4-5|0.1.0.2+0.1.0.1+0.1.0.0+0.1.0 1-2|0 0-1|0.1.1+0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:07.952
# ::node	0	promise-01	1-2
# ::node	0.0	date-entity	6-7
# ::node	0.0.0	27	6-7
# ::node	0.0.1	75	6-7
# ::node	0.0.2	53	6-7
# ::node	0.1	date-entity	0-1
# ::node	0.1.0	date-entity	4-5
# ::node	0.1.0.0	96	4-5
# ::node	0.1.0.1	2	4-5
# ::node	0.1.0.2	80	4-5
# ::node	0.1.1	9174	0-1
# ::root	0	promise-01
# ::edge	date-entity	day	27	0.0	0.0.0	
# ::edge	date-entity	day	96	0.1.0	0.1.0.0	
# ::edge	date-entity	month	2	0.1.0	0.1.0.1	
# ::edge	date-entity	month	75	0.0	0.0.1	
# ::edge	date-entity	name	date-entity	0.1	0.1.0	
# ::edge	date-entity	year	53	0.0	0.0.2	
# ::edge	date-entity	year	80	0.1.0	0.1.0.2	
# ::edge	date-entity	year	9174	0.1	0.1.1	
# ::edge	promise-01	ARG1	date-entity	0	0.0	
# ::edge	promise-01	time	date-entity	0	0.1	
(p / promise-01 
      :ARG1 (d / date-entity 
            :day 27 
            :month 75 
            :year 53) 
      :time (d3 / date-entity 
            :name (d2 / date-entity 
                  :day 96 
                  :month 2 
                  :year 80) 
            :year 9174))

# ::snt  I don\t want you discussing it.  Promise?"
# ::tok I don\t want you discussing it . Promise ? "
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:07.953
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt EMPTY_SENTENCE
# ::tok EMPTY_SENTENCE
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:07.955
# ::node	0	amr-empty	0-1
# ::root	0	amr-empty
(a / amr-empty)

# ::snt it wouldnt she promised be a difficult decision
# ::tok it wouldnt she promised be a difficult decision
# ::alignments 7-8|0.0 6-7|0 3-4|0.0.0.0 2-3|0.0.0 0-1|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:07.987
# ::node	0	difficult	6-7
# ::node	0.0	decide-01	7-8
# ::node	0.0.0	she	2-3
# ::node	0.0.0.0	promise-01	3-4
# ::node	0.0.0.0.0	it	0-1
# ::root	0	difficult
(d2 / difficult 
      :mod-of (d / decide-01 
            :ARG0 (s / she 
                  :ARG0-of (p / promise-01 
                        :ARG1 (i / it)))))

# ::snt they also promised a simple answer to all problems with the slogan islam is the solution
# ::tok they also promised a simple answer to all problems with the slogan islam is the solution
# ::alignments 15-16|0.1 12-13|0.2.0.1.0+0.2.0.1+0.2.0 11-12|0.2.0.0 8-9|0.2.1 7-8|0.2.1.0 5-6|0.2 4-5|0.2.2 2-3|0 1-2|0.3 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:08.165
# ::node	0	promise-01	2-3
# ::node	0.0	they	0-1
# ::node	0.1	solution	15-16
# ::node	0.2	answer-01	5-6
# ::node	0.2.0	religious-group	12-13
# ::node	0.2.0.0	slogan	11-12
# ::node	0.2.0.1	name	12-13
# ::node	0.2.0.1.0	"Islam"	12-13
# ::node	0.2.1	problem	8-9
# ::node	0.2.1.0	all	7-8
# ::node	0.2.2	simple	4-5
# ::node	0.3	also	1-2
# ::root	0	promise-01
# ::edge	answer-01	ARG0	religious-group	0.2	0.2.0	
# ::edge	answer-01	ARG1	problem	0.2	0.2.1	
# ::edge	answer-01	mod	simple	0.2	0.2.2	
# ::edge	name	op1	"Islam"	0.2.0.1	0.2.0.1.0	
# ::edge	problem	quant	all	0.2.1	0.2.1.0	
# ::edge	promise-01	ARG0	they	0	0.0	
# ::edge	promise-01	ARG1	solution	0	0.1	
# ::edge	promise-01	ARG2	answer-01	0	0.2	
# ::edge	promise-01	mod	also	0	0.3	
# ::edge	religious-group	mod	slogan	0.2.0	0.2.0.0	
# ::edge	religious-group	name	name	0.2.0	0.2.0.1	
(p2 / promise-01 
      :ARG0 (t / they) 
      :ARG1 (s / solution) 
      :ARG2 (a2 / answer-01 
            :ARG0 (r / religious-group 
                  :mod (s2 / slogan) 
                  :name (n / name 
                        :op1 "Islam")) 
            :ARG1 (p / problem 
                  :quant (a / all)) 
            :mod (s3 / simple)) 
      :mod (a3 / also))

# ::snt one can waive ones rights by consenting but not by promising except in the special case in which the very undertaking of an obligation to act in a certain way terminates ones right not to do so
# ::tok one can waive ones rights by consenting but not by promising except in the special case in which the very undertaking of an obligation to act in a certain way terminates ones right not to do so
# ::alignments 36-37|0.1.0 31-32|0.0.0 29-30|0.0.1 28-29|0.0.1.0 25-26|0.0 23-24|0 20-21|0.1 19-20|0.1.1 15-16|0.0.0.0.0.0 14-15|0.0.0.0.0.0.0 11-12|0.0.0.0.0 10-11|0.0.0.0 7-8|0.0.1.0.0 6-7|0.0.1.0.0.0.0 4-5|0.0.1.0.0.0.0.0 3-4|0.0.1.0.0.0.0.0.0 1-2|0.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:08.405
# ::node	0	obligate-01	23-24
# ::node	0.0	act-02	25-26
# ::node	0.0.0	one	31-32
# ::node	0.0.0.0	promise-01	10-11
# ::node	0.0.0.0.0	except-00	11-12
# ::node	0.0.0.0.0.0	case	15-16
# ::node	0.0.0.0.0.0.0	special	14-15
# ::node	0.0.1	way	29-30
# ::node	0.0.1.0	certain	28-29
# ::node	0.0.1.0.0	contrast-01	7-8
# ::node	0.0.1.0.0.0	possible	1-2
# ::node	0.0.1.0.0.0.0	consent-01	6-7
# ::node	0.0.1.0.0.0.0.0	right	4-5
# ::node	0.0.1.0.0.0.0.0.0	one	3-4
# ::node	0.1	undertake-01	20-21
# ::node	0.1.0	so	36-37
# ::node	0.1.1	very	19-20
# ::root	0	obligate-01
# ::edge	act-02	ARG1	one	0.0	0.0.0	
# ::edge	act-02	manner	way	0.0	0.0.1	
# ::edge	case	mod	special	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	consent-01	ARG0	right	0.0.1.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	contrast-01	ARG1	certain	0.0.1.0.0	0.0.1.0	
# ::edge	contrast-01	ARG2	possible	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	except-00	ARG1	case	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	obligate-01	ARG1	act-02	0	0.0	
# ::edge	possible	manner	consent-01	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	promise-01	ARG0	one	0.0.0.0	0.0.0	
# ::edge	promise-01	ARG1	except-00	0.0.0.0	0.0.0.0.0	
# ::edge	right	mod	one	0.0.1.0.0.0.0.0	0.0.1.0.0.0.0.0.0	
# ::edge	undertake-01	ARG0	so	0.1	0.1.0	
# ::edge	undertake-01	ARG1	obligate-01	0.1	0	
# ::edge	undertake-01	mod	very	0.1	0.1.1	
# ::edge	way	mod	certain	0.0.1	0.0.1.0	
(o2 / obligate-01 
      :ARG1 (a / act-02 
            :ARG1 (o / one 
                  :ARG0-of (p / promise-01 
                        :ARG1 (e / except-00 
                              :ARG1 (c2 / case 
                                    :mod (s2 / special))))) 
            :manner (w / way 
                  :mod (c / certain 
                        :ARG1-of (c3 / contrast-01 
                              :ARG2 (p2 / possible 
                                    :manner (c4 / consent-01 
                                          :ARG0 (r / right 
                                                :mod (o3 / one)))))))) 
      :ARG1-of (u / undertake-01 
            :ARG0 (s / so) 
            :mod (v / very)))

# ::snt the most optimistic prediction might be that a new multiparty system after the already promised free elections next year would delay for a few years dash
# ::tok the most optimistic prediction might be that a new multiparty system after the already promised free elections next year would delay for a few years dash
# ::alignments 24-25|0.0.0.0.0.0.0.1+0.0.0.0.0.0.0 23-24|0.0.0.0.0.0.0.0 20-21|0.0.0 18-19|0.0.0.0.4 17-18|0.0.0.0.4.0 16-17|0.0.0.0.1 15-16|0.0.0.0.1.1 14-15|0.0.0.0 13-14|0.0.0.0.3 11-12|0.0.0.0.2 10-11|0.0.0.0.0 8-9|0.0.0.0.1.0 3-4|0.0.0.0.0.0 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:08.544
# ::node	0	optimistic	2-3
# ::node	0.0	most	1-2
# ::node	0.0.0	delay-01	20-21
# ::node	0.0.0.0	promise-01	14-15
# ::node	0.0.0.0.0	system	10-11
# ::node	0.0.0.0.0.0	predict-01	3-4
# ::node	0.0.0.0.0.0.0	temporal-quantity	24-25
# ::node	0.0.0.0.0.0.0.0	few	23-24
# ::node	0.0.0.0.0.0.0.1	year	24-25
# ::node	0.0.0.0.1	elect-01	16-17
# ::node	0.0.0.0.1.0	new	8-9
# ::node	0.0.0.0.1.1	free-41	15-16
# ::node	0.0.0.0.2	after	11-12
# ::node	0.0.0.0.3	already	13-14
# ::node	0.0.0.0.4	year	18-19
# ::node	0.0.0.0.4.0	next	17-18
# ::root	0	optimistic
# ::edge	after	op1	promise-01	0.0.0.0.2	0.0.0.0	
# ::edge	delay-01	ARG0	promise-01	0.0.0	0.0.0.0	
# ::edge	delay-01	ARG1	most	0.0.0	0.0	
# ::edge	elect-01	ARG1	new	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	few	op1	temporal-quantity	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	free-41	ARG1	elect-01	0.0.0.0.1.1	0.0.0.0.1	
# ::edge	optimistic	degree	most	0	0.0	
# ::edge	predict-01	ARG0	temporal-quantity	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	predict-01	ARG1	system	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	ARG1	system	0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	ARG2	elect-01	0.0.0.0	0.0.0.0.1	
# ::edge	promise-01	time	already	0.0.0.0	0.0.0.0.3	
# ::edge	promise-01	time	year	0.0.0.0	0.0.0.0.4	
# ::edge	temporal-quantity	unit	year	0.0.0.0.0.0.0	0.0.0.0.0.0.0.1	
# ::edge	year	mod	next	0.0.0.0.4	0.0.0.0.4.0	
(o / optimistic 
      :degree (m / most 
            :ARG1-of (d / delay-01 
                  :ARG0 (p / promise-01 
                        :ARG1 (s / system 
                              :ARG1-of (p2 / predict-01 
                                    :ARG0 (t / temporal-quantity 
                                          :op-of (f / few) 
                                          :unit (y / year)))) 
                        :ARG2 (e / elect-01 
                              :ARG1 (n2 / new) 
                              :ARG1-of (f2 / free-41)) 
                        :op-of (a2 / after) 
                        :time (a / already) 
                        :time (y2 / year 
                              :mod (n / next))))))

# ::snt but the writers patiently gathered in neville braybrookes seeds in the wind fully formed literary grownups have acquired retrospective childhoods their early writing promises a sneak preview of their more mature productions
# ::tok but the writers patiently gathered in neville braybrookes seeds in the wind fully formed literary grownups have acquired retrospective childhoods their early writing promises a sneak preview of their more mature productions
# ::alignments 30-31|0.0.1.0 25-26|0.0.2 23-24|0.0.0.1 22-23|0.0.0.1.0 21-22|0.0.0.1.0.1 17-18|0.0.0.1.0.0 14-15|0.0.0.1.0.0.0.0.0 13-14|0.0.0.1.0.0.0.0 12-13|0.0.0.1.0.0.0.0.1 11-12|0.0.0.1.0.0.0 8-9|0.0.1 4-5|0.0 2-3|0.0.0.0+0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:08.771
# ::node	0	contrast-01	0-1
# ::node	0.0	gather-01	4-5
# ::node	0.0.0	person	2-3
# ::node	0.0.0.0	write-01	2-3
# ::node	0.0.0.1	promise-01	23-24
# ::node	0.0.0.1.0	write-01	22-23
# ::node	0.0.0.1.0.0	acquire-01	17-18
# ::node	0.0.0.1.0.0.0	wind	11-12
# ::node	0.0.0.1.0.0.0.0	form-01	13-14
# ::node	0.0.0.1.0.0.0.0.0	literary	14-15
# ::node	0.0.0.1.0.0.0.0.1	full	12-13
# ::node	0.0.0.1.0.1	early	21-22
# ::node	0.0.1	seed	8-9
# ::node	0.0.1.0	mature-01	30-31
# ::node	0.0.2	sneak-01	25-26
# ::root	0	contrast-01
# ::edge	acquire-01	ARG0	wind	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	acquire-01	ARG1	write-01	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	contrast-01	ARG2	gather-01	0	0.0	
# ::edge	form-01	ARG0	wind	0.0.0.1.0.0.0.0	0.0.0.1.0.0.0	
# ::edge	form-01	ARG1	literary	0.0.0.1.0.0.0.0	0.0.0.1.0.0.0.0.0	
# ::edge	form-01	degree	full	0.0.0.1.0.0.0.0	0.0.0.1.0.0.0.0.1	
# ::edge	gather-01	ARG0	person	0.0	0.0.0	
# ::edge	gather-01	ARG1	seed	0.0	0.0.1	
# ::edge	mature-01	ARG1	seed	0.0.1.0	0.0.1	
# ::edge	promise-01	ARG0	write-01	0.0.0.1	0.0.0.1.0	
# ::edge	promise-01	ARG1	person	0.0.0.1	0.0.0	
# ::edge	sneak-01	ARG1	gather-01	0.0.2	0.0	
# ::edge	write-01	ARG0	person	0.0.0.0	0.0.0	
# ::edge	write-01	time	early	0.0.0.1.0	0.0.0.1.0.1	
(c / contrast-01 
      :ARG2 (g / gather-01 
            :ARG0 (p2 / person 
                  :ARG0-of (w3 / write-01) 
                  :ARG1-of (p / promise-01 
                        :ARG0 (w / write-01 
                              :ARG1-of (a / acquire-01 
                                    :ARG0 (w2 / wind 
                                          :ARG0-of (f / form-01 
                                                :ARG1 (l / literary) 
                                                :degree (f2 / full)))) 
                              :time (e / early)))) 
            :ARG1 (s2 / seed 
                  :ARG1-of (m / mature-01)) 
            :ARG1-of (s / sneak-01)))

# ::snt if they were freemen they had to give up their right to  graze in port meadow because vocal soundum the hay was  to be grown there to be promised to his majesty
# ::tok if they were freemen they had to give up their right to graze in port meadow because vocal soundum the hay was to be grown there to be promised to his majesty
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:08.772
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the terms allow the uk group to launch up to 40 disney titles over the next year and pickwick is promising a heavyweight promotion campaign to support the launch of its products
# ::tok the terms allow the uk group to launch up to 40 disney titles over the next year and pickwick is promising a heavyweight promotion campaign to support the launch of its products
# ::alignments 31-32|0.1.2.0.0 28-29|0.1.2.0 26-27|0.1.2 24-25|0.1.1 23-24|0.1.1.0 22-23|0.1.1.0.1 20-21|0.1 17-18|0 16-17|0.0 15-16|0.0.0 12-13|0.1.0.0.0 10-11|0.1.1.0.0 7-8|0.1.0.0 5-6|0.1.0 2-3|0.1.0.1 1-2|0.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:08.910
# ::node	0	and	17-18
# ::node	0.0	year	16-17
# ::node	0.0.0	next	15-16
# ::node	0.1	promise-01	20-21
# ::node	0.1.0	group	5-6
# ::node	0.1.0.0	launch-01	7-8
# ::node	0.1.0.0.0	title	12-13
# ::node	0.1.0.1	allow-01	2-3
# ::node	0.1.0.1.0	term	1-2
# ::node	0.1.1	campaign-01	24-25
# ::node	0.1.1.0	promote-02	23-24
# ::node	0.1.1.0.0	40	10-11
# ::node	0.1.1.0.1	heavyweight	22-23
# ::node	0.1.2	support-01	26-27
# ::node	0.1.2.0	launch-01	28-29
# ::node	0.1.2.0.0	product	31-32
# ::root	0	and
# ::edge	allow-01	ARG0	term	0.1.0.1	0.1.0.1.0	
# ::edge	allow-01	ARG1	group	0.1.0.1	0.1.0	
# ::edge	and	op1	year	0	0.0	
# ::edge	and	op2	promise-01	0	0.1	
# ::edge	campaign-01	ARG1	promote-02	0.1.1	0.1.1.0	
# ::edge	launch-01	ARG0	group	0.1.0.0	0.1.0	
# ::edge	launch-01	ARG1	product	0.1.2.0	0.1.2.0.0	
# ::edge	launch-01	ARG1	title	0.1.0.0	0.1.0.0.0	
# ::edge	promise-01	ARG0	group	0.1	0.1.0	
# ::edge	promise-01	ARG1	campaign-01	0.1	0.1.1	
# ::edge	promise-01	ARG2	support-01	0.1	0.1.2	
# ::edge	promote-02	ARG1	40	0.1.1.0	0.1.1.0.0	
# ::edge	promote-02	mod	heavyweight	0.1.1.0	0.1.1.0.1	
# ::edge	support-01	ARG1	launch-01	0.1.2	0.1.2.0	
# ::edge	year	mod	next	0.0	0.0.0	
(a / and 
      :op1 (y / year 
            :mod (n / next)) 
      :op2 (p3 / promise-01 
            :ARG0 (g / group 
                  :ARG0-of (l2 / launch-01 
                        :ARG1 (t / title)) 
                  :ARG1-of (a2 / allow-01 
                        :ARG0 (t2 / term))) 
            :ARG1 (c / campaign-01 
                  :ARG1 (p2 / promote-02 
                        :ARG1 40 
                        :mod (h / heavyweight))) 
            :ARG2 (s / support-01 
                  :ARG1 (l / launch-01 
                        :ARG1 (p / product)))))

# ::snt at the end of it the boa treasurer robert watson promised the funds to set up a committee with competitors from every sport and to hold another conference for a much larger gathering than yesterdays before the end of the year
# ::tok at the end of it the boa treasurer robert watson promised the funds to set up a committee with competitors from every sport and to hold another conference for a much larger gathering than yesterdays before the end of the year
# ::alignments 40-41|0.3.3.0.0 35-36|0.3.3 32-33|0.3.3.0 31-32|0.3.3.0.1 30-31|0.0 27-28|0.3.2 26-27|0.3.2.0 23-24|0.3 22-23|0.3.1 21-22|0.3.1.0 19-20|0.3.4 17-18|0.3.0 12-13|0.2 10-11|0 4-5|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:09.109
# ::node	0	promise-01	10-11
# ::node	0.0	much	30-31
# ::node	0.1	it	4-5
# ::node	0.2	fund	12-13
# ::node	0.3	and	23-24
# ::node	0.3.0	committee	17-18
# ::node	0.3.1	sport	22-23
# ::node	0.3.1.0	every	21-22
# ::node	0.3.2	conference	27-28
# ::node	0.3.2.0	another	26-27
# ::node	0.3.3	before	35-36
# ::node	0.3.3.0	gather-01	32-33
# ::node	0.3.3.0.0	year	40-41
# ::node	0.3.3.0.1	large	31-32
# ::node	0.3.4	company	19-20
# ::root	0	promise-01
# ::edge	and	op1	promise-01	0.3	0	
# ::edge	and	op2	committee	0.3	0.3.0	
# ::edge	and	op3	sport	0.3	0.3.1	
# ::edge	and	op4	conference	0.3	0.3.2	
# ::edge	and	op5	before	0.3	0.3.3	
# ::edge	company	source	and	0.3.4	0.3	
# ::edge	conference	mod	another	0.3.2	0.3.2.0	
# ::edge	gather-01	ARG1	year	0.3.3.0	0.3.3.0.0	
# ::edge	gather-01	mod	large	0.3.3.0	0.3.3.0.1	
# ::edge	gather-01	time	before	0.3.3.0	0.3.3	
# ::edge	promise-01	ARG0	much	0	0.0	
# ::edge	promise-01	ARG1	it	0	0.1	
# ::edge	promise-01	ARG2	fund	0	0.2	
# ::edge	sport	mod	every	0.3.1	0.3.1.0	
(p / promise-01 
      :ARG0 (m / much) 
      :ARG1 (i / it) 
      :ARG2 (f / fund) 
      :op-of (a2 / and 
            :op1 (c3 / committee) 
            :op2 (s / sport 
                  :mod (e / every)) 
            :op3 (c / conference 
                  :mod (a / another)) 
            :op4 (b / before 
                  :time-of (g / gather-01 
                        :ARG1 (y / year) 
                        :mod (l / large))) 
            :source-of (c2 / company)))

# ::snt he had just juggled the ball in front of the stretford end and promised to do the trick better than any other first division chairman
# ::tok he had just juggled the ball in front of the stretford end and promised to do the trick better than any other first division chairman
# ::alignments 24-25|0.0.1+0.0 23-24|0 21-22|0.0.1.0.0 20-21|0.0.1.0 17-18|0.0.0.0.0 13-14|0.0.0.0 12-13|0.0.0.0.1 7-8|0.0.0.0.1.0.0 5-6|0.0.0.0.1.0 2-3|0.0.2 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:09.248
# ::node	0	division	23-24
# ::node	0.0	have-org-role-91	24-25
# ::node	0.0.0	he	0-1
# ::node	0.0.0.0	promise-01	13-14
# ::node	0.0.0.0.0	trick	17-18
# ::node	0.0.0.0.1	and	12-13
# ::node	0.0.0.0.1.0	ball	5-6
# ::node	0.0.0.0.1.0.0	front	7-8
# ::node	0.0.1	chairman	24-25
# ::node	0.0.1.0	any	20-21
# ::node	0.0.1.0.0	other	21-22
# ::node	0.0.2	just	2-3
# ::root	0	division
(d / division 
      :ARG1-of (h / have-org-role-91 
            :ARG0 (h2 / he 
                  :ARG0-of (p / promise-01 
                        :ARG1 (t / trick) 
                        :op-of (a2 / and 
                              :op1 (b / ball 
                                    :location (f / front))))) 
            :ARG2 (c / chairman 
                  :mod (a / any 
                        :mod-of (o / other))) 
            :op-of (j / just)))

# ::snt put on to the defensive by sustained opposition attacks mr haughey agreed that calling another election would be a doomsday solution but after being berated by deputies for his anticoalition stance he promised as many discussions as possible
# ::tok put on to the defensive by sustained opposition attacks mr haughey agreed that calling another election would be a doomsday solution but after being berated by deputies for his anticoalition stance he promised as many discussions as possible
# ::alignments 37-38|0.1.1.0.0.1 35-36|0.1.2 34-35|0.1.2.0 32-33|0.1 31-32|0.1.0 30-31|0.1.1 26-27|0.1.1.1.0+0.1.1.1 22-23|0.1.3 21-22|0 20-21|0.0 19-20|0.0.1 15-16|0.0.0.0 14-15|0.0.0.0.0 11-12|0.0.0 8-9|0.1.1.0.0 7-8|0.1.1.0 6-7|0.1.1.0.0.0 4-5|0.1.1.0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:09.636
# ::node	0	contrast-01	21-22
# ::node	0.0	solution	20-21
# ::node	0.0.0	agree-01	11-12
# ::node	0.0.0.0	elect-01	15-16
# ::node	0.0.0.0.0	another	14-15
# ::node	0.0.1	doomsday	19-20
# ::node	0.1	promise-01	32-33
# ::node	0.1.0	he	31-32
# ::node	0.1.1	stance	30-31
# ::node	0.1.1.0	oppose-01	7-8
# ::node	0.1.1.0.0	attack-01	8-9
# ::node	0.1.1.0.0.0	sustain-01	6-7
# ::node	0.1.1.0.0.1	possible	37-38
# ::node	0.1.1.0.0.2	defensive	4-5
# ::node	0.1.1.1	have-org-role-91	26-27
# ::node	0.1.1.1.0	deputy	26-27
# ::node	0.1.2	discuss-01	35-36
# ::node	0.1.2.0	many	34-35
# ::node	0.1.3	after	22-23
# ::root	0	contrast-01
# ::edge	agree-01	ARG1	solution	0.0.0	0.0	
# ::edge	contrast-01	ARG1	solution	0	0.0	
# ::edge	contrast-01	ARG2	promise-01	0	0.1	
# ::edge	defensive	prep-with	attack-01	0.1.1.0.0.2	0.1.1.0.0	
# ::edge	discuss-01	quant	many	0.1.2	0.1.2.0	
# ::edge	elect-01	ARG1	agree-01	0.0.0.0	0.0.0	
# ::edge	elect-01	mod	another	0.0.0.0	0.0.0.0.0	
# ::edge	have-org-role-91	ARG1	stance	0.1.1.1	0.1.1	
# ::edge	have-org-role-91	ARG2	deputy	0.1.1.1	0.1.1.1.0	
# ::edge	oppose-01	ARG0	stance	0.1.1.0	0.1.1	
# ::edge	oppose-01	ARG1	attack-01	0.1.1.0	0.1.1.0.0	
# ::edge	possible	domain	attack-01	0.1.1.0.0.1	0.1.1.0.0	
# ::edge	promise-01	ARG0	he	0.1	0.1.0	
# ::edge	promise-01	ARG1	stance	0.1	0.1.1	
# ::edge	promise-01	purpose	discuss-01	0.1	0.1.2	
# ::edge	promise-01	time	after	0.1	0.1.3	
# ::edge	solution	mod	doomsday	0.0	0.0.1	
# ::edge	sustain-01	ARG1	attack-01	0.1.1.0.0.0	0.1.1.0.0	
(c / contrast-01 
      :ARG1 (s2 / solution 
            :ARG1-of (a3 / agree-01 
                  :ARG1-of (e / elect-01 
                        :mod (a2 / another))) 
            :mod (d3 / doomsday)) 
      :ARG2 (p2 / promise-01 
            :ARG0 (h / he) 
            :ARG1 (s / stance 
                  :ARG0-of (o / oppose-01 
                        :ARG1 (a4 / attack-01 
                              :ARG1-of (s3 / sustain-01) 
                              :domain-of (p / possible) 
                              :prep-with-of (d4 / defensive))) 
                  :ARG1-of (h2 / have-org-role-91 
                        :ARG2 (d2 / deputy))) 
            :purpose (d / discuss-01 
                  :quant (m / many)) 
            :time (a / after)))

# ::snt she promised to telephone imber as soon as there was any news at all
# ::tok she promised to telephone imber as soon as there was any news at all
# ::alignments 13-14|0.0.2.0.0 11-12|0.0.2.0 10-11|0.0.1 6-7|0.0.2 3-4|0.0 1-2|0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:09.659
# ::node	0	promise-01	1-2
# ::node	0.0	telephone-01	3-4
# ::node	0.0.0	she	0-1
# ::node	0.0.1	any	10-11
# ::node	0.0.2	soon	6-7
# ::node	0.0.2.0	news	11-12
# ::node	0.0.2.0.0	all	13-14
# ::root	0	promise-01
# ::edge	news	prep-at	all	0.0.2.0	0.0.2.0.0	
# ::edge	news	time	soon	0.0.2.0	0.0.2	
# ::edge	promise-01	ARG2	telephone-01	0	0.0	
# ::edge	telephone-01	ARG0	she	0.0	0.0.0	
# ::edge	telephone-01	ARG1	any	0.0	0.0.1	
# ::edge	telephone-01	time	soon	0.0	0.0.2	
(p / promise-01 
      :ARG2 (t / telephone-01 
            :ARG0 (s2 / she) 
            :ARG1 (a2 / any) 
            :time (s / soon 
                  :time-of (n / news 
                        :prep-at (a / all)))))

# ::snt you can have it all we were told even eternal life was promised
# ::tok you can have it all we were told even eternal life was promised
# ::alignments 12-13|0.0.0 10-11|0.0 9-10|0 7-8|0.0.0.1 5-6|0.0.0.1.2 4-5|0.0.0.1.1.0 3-4|0.0.0.1.1 1-2|0.0.0.0 0-1|0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:09.897
# ::node	0	eternal	9-10
# ::node	0.0	life	10-11
# ::node	0.0.0	promise-01	12-13
# ::node	0.0.0.0	possible	1-2
# ::node	0.0.0.1	tell-01	7-8
# ::node	0.0.0.1.0	you	0-1
# ::node	0.0.0.1.1	it	3-4
# ::node	0.0.0.1.1.0	all	4-5
# ::node	0.0.0.1.2	we	5-6
# ::root	0	eternal
(e / eternal 
      :mod-of (l / life 
            :ARG1-of (p / promise-01 
                  :ARG0 (p2 / possible) 
                  :purpose-of (t / tell-01 
                        :ARG0 (y / you) 
                        :ARG1 (i / it 
                              :quant (a / all)) 
                        :ARG2 (w / we)))))

# ::snt we live in a terraced house with a fairly long narrow garden and the children say that they will promise to take the new dog on walks at least every day
# ::tok we live in a terraced house with a fairly long narrow garden and the children say that they will promise to take the new dog on walks at least every day
# ::alignments 30-31|0.1.1.0.0 29-30|0.1.1.0.0.0 26-27|0.1.1.0 24-25|0.1.1 23-24|0.2.0.1.0.1 19-20|0.1 17-18|0.1.0 15-16|0 14-15|0.0 12-13|0.2 11-12|0.2.0 10-11|0.2.0.0 8-9|0.2.0.0.0 5-6|0.2.0.1 1-2|0.2.0.1.0 0-1|0.2.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:10.853
# ::node	0	say-01	15-16
# ::node	0.0	child	14-15
# ::node	0.1	promise-01	19-20
# ::node	0.1.0	they	17-18
# ::node	0.1.1	dog	24-25
# ::node	0.1.1.0	walk-01	26-27
# ::node	0.1.1.0.0	day	30-31
# ::node	0.1.1.0.0.0	every	29-30
# ::node	0.2	and	12-13
# ::node	0.2.0	garden	11-12
# ::node	0.2.0.0	narrow-01	10-11
# ::node	0.2.0.0.0	fair	8-9
# ::node	0.2.0.1	house	5-6
# ::node	0.2.0.1.0	live-01	1-2
# ::node	0.2.0.1.0.0	we	0-1
# ::node	0.2.0.1.0.1	new	23-24
# ::root	0	say-01
# ::edge	and	op1	garden	0.2	0.2.0	
# ::edge	and	op2	say-01	0.2	0	
# ::edge	day	mod	every	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	house	poss	garden	0.2.0.1	0.2.0	
# ::edge	live-01	ARG0	we	0.2.0.1.0	0.2.0.1.0.0	
# ::edge	live-01	ARG1	new	0.2.0.1.0	0.2.0.1.0.1	
# ::edge	live-01	location	house	0.2.0.1.0	0.2.0.1	
# ::edge	narrow-01	ARG0	fair	0.2.0.0	0.2.0.0.0	
# ::edge	narrow-01	ARG1	garden	0.2.0.0	0.2.0	
# ::edge	promise-01	ARG0	they	0.1	0.1.0	
# ::edge	promise-01	ARG1	dog	0.1	0.1.1	
# ::edge	say-01	ARG0	child	0	0.0	
# ::edge	say-01	ARG1	promise-01	0	0.1	
# ::edge	walk-01	ARG0	dog	0.1.1.0	0.1.1	
# ::edge	walk-01	time	day	0.1.1.0	0.1.1.0.0	
(s / say-01 
      :ARG0 (c / child) 
      :ARG1 (p / promise-01 
            :ARG0 (t / they) 
            :ARG1 (d2 / dog 
                  :ARG0-of (w / walk-01 
                        :time (d / day 
                              :mod (e / every))))) 
      :op-of (a / and 
            :op1 (g / garden 
                  :ARG1-of (n2 / narrow-01 
                        :ARG0 (f / fair)) 
                  :poss-of (h / house 
                        :location-of (l / live-01 
                              :ARG0 (w2 / we) 
                              :ARG1 (n / new))))))

# ::snt answering a suggestion that the president mr ranasinghe premadasa may face criticism for not upholding the freedom of the press as promised in his election manifesto mr wijeratne replied who cares what the critics say when subversives are trying to topple the government
# ::tok answering a suggestion that the president mr ranasinghe premadasa may face criticism for not upholding the freedom of the press as promised in his election manifesto mr wijeratne replied who cares what the critics say when subversives are trying to topple the government
# ::alignments 40-41|0.1 38-39|0.1.0 34-35|0 33-34|0.0 30-31|0.2.1.0.0.0.0.0.0 28-29|0.2.1.0.0.0.0.0 24-25|0.2.1.0.0.1 21-22|0.2.1.0.0.0.0 19-20|0.2.1.0.0.0 16-17|0.2.1.0.0 14-15|0.2.1.0 11-12|0.2.1 10-11|0.2 9-10|0.2.2.0+0.2.2 5-6|0.2.0.1.0.0+0.2.0.1.0 2-3|0.2.0.1+0.2.0 0-1|0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:11.658
# ::node	0	say-01	34-35
# ::node	0.0	critic	33-34
# ::node	0.1	topple-01	40-41
# ::node	0.1.0	try-01	38-39
# ::node	0.2	face-01	10-11
# ::node	0.2.0	thing	2-3
# ::node	0.2.0.0	answer-01	0-1
# ::node	0.2.0.1	suggest-01	2-3
# ::node	0.2.0.1.0	have-org-role-91	5-6
# ::node	0.2.0.1.0.0	president	5-6
# ::node	0.2.1	criticize-01	11-12
# ::node	0.2.1.0	uphold-01	14-15
# ::node	0.2.1.0.0	free-41	16-17
# ::node	0.2.1.0.0.0	press	19-20
# ::node	0.2.1.0.0.0.0	promise-01	21-22
# ::node	0.2.1.0.0.0.0.0	reply-01	28-29
# ::node	0.2.1.0.0.0.0.0.0	care-01	30-31
# ::node	0.2.1.0.0.1	elect-01	24-25
# ::node	0.2.2	date-entity	9-10
# ::node	0.2.2.0	5	9-10
# ::root	0	say-01
# ::edge	answer-01	ARG1	thing	0.2.0.0	0.2.0	
# ::edge	criticize-01	ARG2	uphold-01	0.2.1	0.2.1.0	
# ::edge	date-entity	domain	face-01	0.2.2	0.2	
# ::edge	date-entity	month	5	0.2.2	0.2.2.0	
# ::edge	elect-01	ARG1	free-41	0.2.1.0.0.1	0.2.1.0.0	
# ::edge	face-01	ARG0	thing	0.2	0.2.0	
# ::edge	face-01	ARG1	criticize-01	0.2	0.2.1	
# ::edge	free-41	ARG1	press	0.2.1.0.0	0.2.1.0.0.0	
# ::edge	have-org-role-91	ARG2	president	0.2.0.1.0	0.2.0.1.0.0	
# ::edge	promise-01	ARG0	press	0.2.1.0.0.0.0	0.2.1.0.0.0	
# ::edge	reply-01	ARG0	promise-01	0.2.1.0.0.0.0.0	0.2.1.0.0.0.0	
# ::edge	reply-01	ARG1	care-01	0.2.1.0.0.0.0.0	0.2.1.0.0.0.0.0.0	
# ::edge	say-01	ARG0	critic	0	0.0	
# ::edge	say-01	ARG1	topple-01	0	0.1	
# ::edge	say-01	ARG2	face-01	0	0.2	
# ::edge	suggest-01	ARG1	thing	0.2.0.1	0.2.0	
# ::edge	suggest-01	time	have-org-role-91	0.2.0.1	0.2.0.1.0	
# ::edge	try-01	ARG1	topple-01	0.1.0	0.1	
# ::edge	uphold-01	ARG1	free-41	0.2.1.0	0.2.1.0.0	
(s / say-01 
      :ARG0 (c / critic) 
      :ARG1 (t / topple-01 
            :ARG1-of (t2 / try-01)) 
      :ARG2 (f2 / face-01 
            :ARG0 (t3 / thing 
                  :ARG1-of (a / answer-01) 
                  :ARG1-of (s2 / suggest-01 
                        :time (h / have-org-role-91 
                              :ARG2 (p3 / president)))) 
            :ARG1 (c3 / criticize-01 
                  :ARG2 (u / uphold-01 
                        :ARG1 (f / free-41 
                              :ARG1 (p2 / press 
                                    :ARG0-of (p / promise-01 
                                          :ARG0-of (r / reply-01 
                                                :ARG1 (c2 / care-01)))) 
                              :ARG1-of (e / elect-01)))) 
            :domain-of (d / date-entity 
                  :month 5)))

# ::snt walking into what promises to be the last room of the show you encounter a cornucopian tradefair display of products made by a variety of fih subsidiaries including harkwell adhesive labels they do the labels for polyclens brush cleaner simply rinses paint away under the tap harkwell cartons the st bernard underwired top lace cup bra and pendy plastic products paco rabanne coathangers
# ::tok walking into what promises to be the last room of the show you encounter a cornucopian tradefair display of products made by a variety of fih subsidiaries including harkwell adhesive labels they do the labels for polyclens brush cleaner simply rinses paint away under the tap harkwell cartons the st bernard underwired top lace cup bra and pendy plastic products paco rabanne coathangers
# ::alignments 59-60|0.1.1.1.0 58-59|0.1.1.1.0.0 56-57|0.1.2.0.0.0 54-55|0.1.1.0.0.0.0 53-54|0.1.1.0.0.0 52-53|0.1.1.0.0.1 45-46|0.1.0.0.0 42-43|0.1.1.2.0 41-42|0.1.1.2 39-40|0.1.1.3 38-39|0.1.1.1 37-38|0.1.1.1.1 34-35|0.1.1 31-32|0.1.1.0 30-31|0.1.1.0.0 26-27|0.1.0 23-24|0.1.0.0 19-20|0.0.0.0 17-18|0.0.0 13-14|0 12-13|0.0 11-12|0.1 8-9|0.1.2 7-8|0.1.2.1 3-4|0.1.2.0 0-1|0.1.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:12.846
# ::node	0	encounter-01	13-14
# ::node	0.0	you	12-13
# ::node	0.0.0	display-01	17-18
# ::node	0.0.0.0	product	19-20
# ::node	0.1	show-01	11-12
# ::node	0.1.0	subsidiary	26-27
# ::node	0.1.0.0	variety	23-24
# ::node	0.1.0.0.0	tap-03	45-46
# ::node	0.1.1	label-01	34-35
# ::node	0.1.1.0	they	31-32
# ::node	0.1.1.0.0	label-01	30-31
# ::node	0.1.1.0.0.0	lace	53-54
# ::node	0.1.1.0.0.0.0	cup	54-55
# ::node	0.1.1.0.0.1	top	52-53
# ::node	0.1.1.1	clean-01	38-39
# ::node	0.1.1.1.0	product	59-60
# ::node	0.1.1.1.0.0	plastic	58-59
# ::node	0.1.1.1.1	brush	37-38
# ::node	0.1.1.2	paint	41-42
# ::node	0.1.1.2.0	away	42-43
# ::node	0.1.1.3	simple	39-40
# ::node	0.1.2	room	8-9
# ::node	0.1.2.0	promise-01	3-4
# ::node	0.1.2.0.0	walk-01	0-1
# ::node	0.1.2.0.0.0	and	56-57
# ::node	0.1.2.1	last	7-8
# ::root	0	encounter-01
# ::edge	clean-01	ARG0	product	0.1.1.1	0.1.1.1.0	
# ::edge	clean-01	ARG1	brush	0.1.1.1	0.1.1.1.1	
# ::edge	cup	mod	lace	0.1.1.0.0.0.0	0.1.1.0.0.0	
# ::edge	display-01	ARG0	you	0.0.0	0.0	
# ::edge	display-01	ARG1	product	0.0.0	0.0.0.0	
# ::edge	encounter-01	ARG0	you	0	0.0	
# ::edge	encounter-01	ARG1	show-01	0	0.1	
# ::edge	label-01	ARG0	they	0.1.1	0.1.1.0	
# ::edge	label-01	ARG0	they	0.1.1.0.0	0.1.1.0	
# ::edge	label-01	ARG1	clean-01	0.1.1	0.1.1.1	
# ::edge	label-01	mod	show-01	0.1.1	0.1	
# ::edge	label-01	prep-in	paint	0.1.1	0.1.1.2	
# ::edge	label-01	time	simple	0.1.1	0.1.1.3	
# ::edge	lace	op1	label-01	0.1.1.0.0.0	0.1.1.0.0	
# ::edge	paint	direction	away	0.1.1.2	0.1.1.2.0	
# ::edge	product	mod	plastic	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	promise-01	ARG1	room	0.1.2.0	0.1.2	
# ::edge	room	mod	last	0.1.2	0.1.2.1	
# ::edge	room	purpose	show-01	0.1.2	0.1	
# ::edge	subsidiary	mod	show-01	0.1.0	0.1	
# ::edge	subsidiary	mod	variety	0.1.0	0.1.0.0	
# ::edge	tap-03	ARG1	variety	0.1.0.0.0	0.1.0.0	
# ::edge	top	op1	label-01	0.1.1.0.0.1	0.1.1.0.0	
# ::edge	walk-01	ARG0	and	0.1.2.0.0	0.1.2.0.0.0	
# ::edge	walk-01	ARG1	promise-01	0.1.2.0.0	0.1.2.0	
(e / encounter-01 
      :ARG0 (y / you 
            :ARG0-of (d / display-01 
                  :ARG1 (p4 / product))) 
      :ARG1 (s3 / show-01 
            :mod-of (s2 / subsidiary 
                  :mod (v / variety 
                        :ARG1-of (t2 / tap-03))) 
            :mod-of (l2 / label-01 
                  :ARG0 (t3 / they 
                        :ARG0-of (l3 / label-01 
                              :op-of (l / lace 
                                    :mod-of (c / cup)) 
                              :op-of (t / top))) 
                  :ARG1 (c2 / clean-01 
                        :ARG0 (p / product 
                              :mod (p2 / plastic)) 
                        :ARG1 (b / brush)) 
                  :prep-in (p3 / paint 
                        :direction (a2 / away)) 
                  :time (s / simple)) 
            :purpose-of (r / room 
                  :ARG1-of (p5 / promise-01 
                        :ARG1-of (w / walk-01 
                              :ARG0 (a / and))) 
                  :mod (l4 / last))))

# ::snt free elections are promised by april
# ::tok free elections are promised by april
# ::alignments 5-6|0.1.0+0.1 3-4|0 1-2|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:12.858
# ::node	0	promise-01	3-4
# ::node	0.0	elect-01	1-2
# ::node	0.0.0	free-41	0-1
# ::node	0.1	date-entity	5-6
# ::node	0.1.0	4	5-6
# ::root	0	promise-01
# ::edge	date-entity	month	4	0.1	0.1.0	
# ::edge	free-41	ARG1	elect-01	0.0.0	0.0	
# ::edge	promise-01	ARG1	elect-01	0	0.0	
# ::edge	promise-01	time	date-entity	0	0.1	
(p / promise-01 
      :ARG1 (e / elect-01 
            :ARG1-of (f / free-41)) 
      :time (d / date-entity 
            :month 4))

# ::snt the choice for the electorate of 82 million was commendably clear on the centre right fernando collor de mello a charismatic sprig of the elite oligarchy committed to opening up the economy reducing state intervention and fighting corruption on the left luis inacio lula da silva a bearded trade unionist promising land reform a fairer distribution of wealth and strong central planning
# ::tok the choice for the electorate of 82 million was commendably clear on the centre right fernando collor de mello a charismatic sprig of the elite oligarchy committed to opening up the economy reducing state intervention and fighting corruption on the left luis inacio lula da silva a bearded trade unionist promising land reform a fairer distribution of wealth and strong central planning
# ::alignments 61-62|0.2.2.1 60-61|0.2.2.1.0 59-60|0.2.2.1.1 58-59|0.2.2.1.2 57-58|0.2.2.1.2.1 55-56|0.2.2.1.2.0 54-55|0.2.2.1.2.0.1 52-53|0.2.2.1.2.0.0.0.0 51-52|0.2.2.1.2.0.0.0 50-51|0.2.2.1.2.0.0 49-50|0.2.2.2 48-49|0.2.2.2.1 47-48|0.2.2.2.0 37-38|0.2.2.0.0 36-37|0.2.2.0 35-36|0.2.2 34-35|0.2.1.0.0 33-34|0.2.1.0.0.0 32-33|0.2.1.0 31-32|0.2.1 28-29|0.2 26-27|0 25-26|0.1 24-25|0.1.0 20-21|0.2.1.0.0.1 10-11|0.3 6-7|0.2.0 4-5|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:13.691
# ::node	0	commit-01	26-27
# ::node	0.0	electorate	4-5
# ::node	0.1	oligarchy	25-26
# ::node	0.1.0	elite	24-25
# ::node	0.2	open-01	28-29
# ::node	0.2.0	82	6-7
# ::node	0.2.1	economy	31-32
# ::node	0.2.1.0	reduce-01	32-33
# ::node	0.2.1.0.0	intervene-01	34-35
# ::node	0.2.1.0.0.0	state	33-34
# ::node	0.2.1.0.0.1	charisma	20-21
# ::node	0.2.2	and	35-36
# ::node	0.2.2.0	fight-01	36-37
# ::node	0.2.2.0.0	corrupt-01	37-38
# ::node	0.2.2.1	plan-01	61-62
# ::node	0.2.2.1.0	central	60-61
# ::node	0.2.2.1.1	strong	59-60
# ::node	0.2.2.1.2	and	58-59
# ::node	0.2.2.1.2.0	distribute-01	55-56
# ::node	0.2.2.1.2.0.0	promise-01	50-51
# ::node	0.2.2.1.2.0.0.0	land	51-52
# ::node	0.2.2.1.2.0.0.0.0	reform-01	52-53
# ::node	0.2.2.1.2.0.1	fair	54-55
# ::node	0.2.2.1.2.1	wealth	57-58
# ::node	0.2.2.2	unionist	49-50
# ::node	0.2.2.2.0	beard-02	47-48
# ::node	0.2.2.2.1	trade-01	48-49
# ::node	0.3	clear	10-11
# ::root	0	commit-01
# ::edge	and	op1	open-01	0.2.2	0.2	
# ::edge	and	op1	wealth	0.2.2.1.2	0.2.2.1.2.1	
# ::edge	and	op2	plan-01	0.2.2.1.2	0.2.2.1	
# ::edge	and	op2	unionist	0.2.2	0.2.2.2	
# ::edge	beard-02	ARG1	unionist	0.2.2.2.0	0.2.2.2	
# ::edge	clear	op1	commit-01	0.3	0	
# ::edge	commit-01	ARG0	electorate	0	0.0	
# ::edge	commit-01	ARG1	oligarchy	0	0.1	
# ::edge	commit-01	ARG2	open-01	0	0.2	
# ::edge	distribute-01	ARG0	and	0.2.2.1.2.0	0.2.2.1.2	
# ::edge	distribute-01	mod	fair	0.2.2.1.2.0	0.2.2.1.2.0.1	
# ::edge	fight-01	ARG0	and	0.2.2.0	0.2.2	
# ::edge	fight-01	ARG1	corrupt-01	0.2.2.0	0.2.2.0.0	
# ::edge	intervene-01	ARG0	state	0.2.1.0.0	0.2.1.0.0.0	
# ::edge	intervene-01	ARG1	charisma	0.2.1.0.0	0.2.1.0.0.1	
# ::edge	oligarchy	mod	elite	0.1	0.1.0	
# ::edge	open-01	ARG0	82	0.2	0.2.0	
# ::edge	open-01	ARG1	economy	0.2	0.2.1	
# ::edge	plan-01	ARG1	and	0.2.2.1	0.2.2	
# ::edge	plan-01	mod	central	0.2.2.1	0.2.2.1.0	
# ::edge	plan-01	mod	strong	0.2.2.1	0.2.2.1.1	
# ::edge	promise-01	ARG1	distribute-01	0.2.2.1.2.0.0	0.2.2.1.2.0	
# ::edge	promise-01	ARG2	land	0.2.2.1.2.0.0	0.2.2.1.2.0.0.0	
# ::edge	reduce-01	ARG0	economy	0.2.1.0	0.2.1	
# ::edge	reduce-01	ARG1	intervene-01	0.2.1.0	0.2.1.0.0	
# ::edge	reform-01	ARG1	land	0.2.2.1.2.0.0.0.0	0.2.2.1.2.0.0.0	
# ::edge	unionist	mod	trade-01	0.2.2.2	0.2.2.2.1	
(c3 / commit-01 
      :ARG0 (e3 / electorate) 
      :ARG1 (o2 / oligarchy 
            :mod (e2 / elite)) 
      :ARG2 (o / open-01 
            :ARG0 82 
            :ARG1 (e / economy 
                  :ARG0-of (r2 / reduce-01 
                        :ARG1 (i / intervene-01 
                              :ARG0 (s2 / state) 
                              :ARG1 (c4 / charisma)))) 
            :op-of (a2 / and 
                  :ARG0-of (f2 / fight-01 
                        :ARG1 (c2 / corrupt-01)) 
                  :ARG1-of (p / plan-01 
                        :mod (c / central) 
                        :mod (s / strong) 
                        :op-of (a / and 
                              :ARG0-of (d / distribute-01 
                                    :ARG1-of (p2 / promise-01 
                                          :ARG2 (l / land 
                                                :ARG1-of (r / reform-01))) 
                                    :mod (f / fair)) 
                              :op1 (w / wealth))) 
                  :op1 (u / unionist 
                        :ARG1-of (b / beard-02) 
                        :mod (t / trade-01)))) 
      :op-of (c5 / clear))

# ::snt 6 per cent was far too high for a conservative government she promised it would be brought down again
# ::tok 6 per cent was far too high for a conservative government she promised it would be brought down again
# ::alignments 18-19|0.1.3.0 17-18|0.1.3 13-14|0.1.2 12-13|0.1 11-12|0.1.0 9-10|0.1.1.0 6-7|0.0 5-6|0.0.0 4-5|0.0.0.0 2-3|0.2+0 0-1|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:13.861
# ::node	0	monetary-quantity	2-3
# ::node	0.0	high	6-7
# ::node	0.0.0	too	5-6
# ::node	0.0.0.0	far	4-5
# ::node	0.1	promise-01	12-13
# ::node	0.1.0	she	11-12
# ::node	0.1.1	6	0-1
# ::node	0.1.1.0	conservative	9-10
# ::node	0.1.2	it	13-14
# ::node	0.1.3	down	17-18
# ::node	0.1.3.0	again	18-19
# ::node	0.2	cent	2-3
# ::root	0	monetary-quantity
# ::edge	6	poss	conservative	0.1.1	0.1.1.0	
# ::edge	down	op1	promise-01	0.1.3	0.1	
# ::edge	down	op2	again	0.1.3	0.1.3.0	
# ::edge	high	degree	too	0.0	0.0.0	
# ::edge	high	domain	monetary-quantity	0.0	0	
# ::edge	monetary-quantity	unit	cent	0	0.2	
# ::edge	promise-01	ARG0	she	0.1	0.1.0	
# ::edge	promise-01	ARG1	6	0.1	0.1.1	
# ::edge	promise-01	ARG2	it	0.1	0.1.2	
# ::edge	promise-01	location	monetary-quantity	0.1	0	
# ::edge	too	op1	far	0.0.0	0.0.0.0	
(m / monetary-quantity 
      :domain-of (h / high 
            :degree (t / too 
                  :op1 (f / far))) 
      :location-of (p / promise-01 
            :ARG0 (s / she) 
            :ARG1 (6 / 6 
                  :poss (c / conservative)) 
            :ARG2 (i / it) 
            :op-of (d / down 
                  :op1 (a / again))) 
      :unit (c2 / cent))

# ::snt new research at the university of oxford now promises to overcome this problem
# ::tok new research at the university of oxford now promises to overcome this problem
# ::alignments 12-13|0.1.0 11-12|0.1.0.0 10-11|0.1 8-9|0 7-8|0.2 4-7|0.0.0.0.0+0.0.0.0.1+0.0.0.0.2+0.0.0.0+0.0.0 1-2|0.0 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:13.915
# ::node	0	promise-01	8-9
# ::node	0.0	research-01	1-2
# ::node	0.0.0	organization	4-7
# ::node	0.0.0.0	name	4-7
# ::node	0.0.0.0.0	"oxford"	4-7
# ::node	0.0.0.0.1	"of"	4-7
# ::node	0.0.0.0.2	"university"	4-7
# ::node	0.0.1	new	0-1
# ::node	0.1	overcome-01	10-11
# ::node	0.1.0	problem	12-13
# ::node	0.1.0.0	this	11-12
# ::node	0.2	now	7-8
# ::root	0	promise-01
# ::edge	name	op1	"oxford"	0.0.0.0	0.0.0.0.0	
# ::edge	name	op2	"of"	0.0.0.0	0.0.0.0.1	
# ::edge	name	op3	"university"	0.0.0.0	0.0.0.0.2	
# ::edge	organization	name	name	0.0.0	0.0.0.0	
# ::edge	overcome-01	ARG1	problem	0.1	0.1.0	
# ::edge	problem	mod	this	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG0	research-01	0	0.0	
# ::edge	promise-01	ARG1	overcome-01	0	0.1	
# ::edge	promise-01	time	now	0	0.2	
# ::edge	research-01	ARG1	organization	0.0	0.0.0	
# ::edge	research-01	mod	new	0.0	0.0.1	
(p2 / promise-01 
      :ARG0 (r / research-01 
            :ARG1 (o2 / organization 
                  :name (n2 / name 
                        :op1 "oxford" 
                        :op2 "of" 
                        :op3 "university")) 
            :mod (n3 / new)) 
      :ARG1 (o / overcome-01 
            :ARG1 (p / problem 
                  :mod (t / this))) 
      :time (n / now))

# ::snt chancellor kohl had promised to investigate the matter earlier this year
# ::tok chancellor kohl had promised to investigate the matter earlier this year
# ::alignments 10-11|0.0.1.0 9-10|0.0.1.1 8-9|0.0.1 7-8|0.0.0 5-6|0.0 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:13.936
# ::node	0	promise-01	3-4
# ::node	0.0	investigate-01	5-6
# ::node	0.0.0	matter	7-8
# ::node	0.0.1	early	8-9
# ::node	0.0.1.0	year	10-11
# ::node	0.0.1.1	this	9-10
# ::root	0	promise-01
# ::edge	early	mod	this	0.0.1	0.0.1.1	
# ::edge	investigate-01	ARG1	matter	0.0	0.0.0	
# ::edge	investigate-01	time	early	0.0	0.0.1	
# ::edge	promise-01	ARG1	investigate-01	0	0.0	
# ::edge	year	degree	early	0.0.1.0	0.0.1	
(p / promise-01 
      :ARG1 (i / investigate-01 
            :ARG1 (m / matter) 
            :time (e / early 
                  :degree-of (y / year) 
                  :mod (t / this))))

# ::snt he promised to stand by asquith and then abandoned him
# ::tok he promised to stand by asquith and then abandoned him
# ::alignments 8-9|0.1 7-8|0.1.0 6-7|0 1-2|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:13.949
# ::node	0	and	6-7
# ::node	0.0	promise-01	1-2
# ::node	0.0.0	he	0-1
# ::node	0.1	abandon-01	8-9
# ::node	0.1.0	then	7-8
# ::root	0	and
# ::edge	abandon-01	time	then	0.1	0.1.0	
# ::edge	and	op1	promise-01	0	0.0	
# ::edge	and	op2	abandon-01	0	0.1	
# ::edge	promise-01	ARG0	he	0.0	0.0.0	
(a2 / and 
      :op1 (p / promise-01 
            :ARG0 (h / he)) 
      :op2 (a / abandon-01 
            :time (t / then)))

# ::snt itll not exactly be standing still when june 16 comes round promised andy
# ::tok itll not exactly be standing still when june 16 comes round promised andy
# ::alignments 11-12|0.0 10-11|0 8-9|0.0.1 7-8|0.1.0+0.1 5-6|0.0.0 2-3|0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:13.992
# ::node	0	round	10-11
# ::node	0.0	promise-01	11-12
# ::node	0.0.0	still	5-6
# ::node	0.0.1	16	8-9
# ::node	0.0.2	exact	2-3
# ::node	0.1	date-entity	7-8
# ::node	0.1.0	6	7-8
# ::root	0	round
# ::edge	date-entity	month	6	0.1	0.1.0	
# ::edge	exact	op1	promise-01	0.0.2	0.0	
# ::edge	promise-01	ARG0	still	0.0	0.0.0	
# ::edge	promise-01	ARG1	round	0.0	0	
# ::edge	promise-01	ARG2	16	0.0	0.0.1	
# ::edge	round	poss	date-entity	0	0.1	
(r / round 
      :ARG1-of (p / promise-01 
            :ARG0 (s / still) 
            :ARG2 16 
            :op-of (e / exact)) 
      :poss (d / date-entity 
            :month 6))

# ::snt three and a half million animals are experimented to death so we promise to try and cut the wastage its more costeffective too
# ::tok three and a half million animals are experimented to death so we promise to try and cut the wastage its more costeffective too
# ::alignments 22-23|0.0.1.2.0 15-16|0.0.1.2.1 14-15|0.0.1 12-13|0.0.1.2 11-12|0.0.1.0 10-11|0.0.1.2.2 9-10|0.0 5-6|0.0.1.1 3-4|0.0.1.1.0 1-2|0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:14.121
# ::node	0	and	1-2
# ::node	0.0	die-01	9-10
# ::node	0.0.0	3	0-1
# ::node	0.0.1	try-01	14-15
# ::node	0.0.1.0	we	11-12
# ::node	0.0.1.1	animal	5-6
# ::node	0.0.1.1.0	half	3-4
# ::node	0.0.1.2	promise-01	12-13
# ::node	0.0.1.2.0	too	22-23
# ::node	0.0.1.2.1	and	15-16
# ::node	0.0.1.2.2	so	10-11
# ::root	0	and
(a3 / and 
      :ARG1-of (d / die-01 
            :ARG0 3 
            :ARG3-of (t2 / try-01 
                  :ARG0 (w / we) 
                  :ARG1 (a2 / animal 
                        :quant (h / half)) 
                  :ARG1-of (p / promise-01 
                        :ARG0 (t / too) 
                        :ARG2 (a / and) 
                        :op-of (s / so)))))

# ::snt the tories at the 1979 general election promised that industrial action in essential services would be restricted but a subsequent green paper killed the idea saying that existing legal provisions such as the 1875 conspiracy act had been little used and that workers in most key industries had exercised restraint and pleading difficulties in defining the relevant groups of workers
# ::tok the tories at the 1979 general election promised that industrial action in essential services would be restricted but a subsequent green paper killed the idea saying that existing legal provisions such as the 1875 conspiracy act had been little used and that workers in most key industries had exercised restraint and pleading difficulties in defining the relevant groups of workers
# ::alignments 59-60|0.1.0.1.0.1.0.0.0.0+0.1.0.1.0.1.0.0.0 57-58|0.1.0.1.0.1.0.0 56-57|0.1.0.1.0.1.0 52-53|0.1.0.1.0.1 51-52|0.1.0.1.0 50-51|0.1.0.1 48-49|0.1.1 46-47|0.1.0.1.0.0 45-46|0.1.0.1.0.0.0 44-45|0.1.0.1.0.0.0.0 42-43|0.1.1.0.0+0.1.1.0 40-41|0.1 39-40|0.1.0 38-39|0.1.0.0 35-36|0.0.0 33-34|0.0.1.1.1.0.0.0.2.0+0.0.1.1.1.0.0.0.2 30-31|0.0.0.0 29-30|0.1.1.1 28-29|0.1.1.1.1 27-28|0.1.1.1.0 25-26|0 24-25|0.0 22-23|0.0.1 21-22|0.0.1.0 20-21|0.0.1.0.0 19-20|0.0.1.0.1 17-18|0.0.1.1 16-17|0.0.1.1.1 13-14|0.0.1.1.0 12-13|0.0.1.1.0.0 10-11|0.0.1.1.1.0 9-10|0.0.1.1.1.0.1 7-8|0.0.1.1.1.0.0 6-7|0.0.1.1.1.0.0.0 5-6|0.0.1.1.1.0.0.0.0 4-5|0.0.1.1.1.0.0.0.1.0+0.0.1.1.1.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:16.130
# ::node	0	say-01	25-26
# ::node	0.0	idea	24-25
# ::node	0.0.0	act-02	35-36
# ::node	0.0.0.0	such	30-31
# ::node	0.0.1	kill-01	22-23
# ::node	0.0.1.0	paper	21-22
# ::node	0.0.1.0.0	green	20-21
# ::node	0.0.1.0.1	subsequent	19-20
# ::node	0.0.1.1	contrast-01	17-18
# ::node	0.0.1.1.0	service	13-14
# ::node	0.0.1.1.0.0	essential	12-13
# ::node	0.0.1.1.1	restrict-01	16-17
# ::node	0.0.1.1.1.0	action	10-11
# ::node	0.0.1.1.1.0.0	promise-01	7-8
# ::node	0.0.1.1.1.0.0.0	elect-01	6-7
# ::node	0.0.1.1.1.0.0.0.0	general	5-6
# ::node	0.0.1.1.1.0.0.0.1	date-entity	4-5
# ::node	0.0.1.1.1.0.0.0.1.0	1979	4-5
# ::node	0.0.1.1.1.0.0.0.2	date-entity	33-34
# ::node	0.0.1.1.1.0.0.0.2.0	1875	33-34
# ::node	0.0.1.1.1.0.1	industry	9-10
# ::node	0.1	and	40-41
# ::node	0.1.0	use-01	39-40
# ::node	0.1.0.0	little	38-39
# ::node	0.1.0.1	and	50-51
# ::node	0.1.0.1.0	plead-01	51-52
# ::node	0.1.0.1.0.0	industry	46-47
# ::node	0.1.0.1.0.0.0	key	45-46
# ::node	0.1.0.1.0.0.0.0	most	44-45
# ::node	0.1.0.1.0.1	difficulty	52-53
# ::node	0.1.0.1.0.1.0	relevant-41	56-57
# ::node	0.1.0.1.0.1.0.0	group	57-58
# ::node	0.1.0.1.0.1.0.0.0	person	59-60
# ::node	0.1.0.1.0.1.0.0.0.0	work-01	59-60
# ::node	0.1.1	exercise-01	48-49
# ::node	0.1.1.0	person	42-43
# ::node	0.1.1.0.0	work-01	42-43
# ::node	0.1.1.1	provision	29-30
# ::node	0.1.1.1.0	exist-01	27-28
# ::node	0.1.1.1.1	legal	28-29
# ::root	0	say-01
# ::edge	act-02	ARG0	idea	0.0.0	0.0	
# ::edge	act-02	ARG1	such	0.0.0	0.0.0.0	
# ::edge	action	mod	industry	0.0.1.1.1.0	0.0.1.1.1.0.1	
# ::edge	and	op1	use-01	0.1	0.1.0	
# ::edge	and	op1	use-01	0.1.0.1	0.1.0	
# ::edge	and	op2	exercise-01	0.1	0.1.1	
# ::edge	and	op2	plead-01	0.1.0.1	0.1.0.1.0	
# ::edge	contrast-01	ARG0	service	0.0.1.1	0.0.1.1.0	
# ::edge	contrast-01	ARG1	kill-01	0.0.1.1	0.0.1	
# ::edge	contrast-01	ARG2	restrict-01	0.0.1.1	0.0.1.1.1	
# ::edge	date-entity	year	1875	0.0.1.1.1.0.0.0.2	0.0.1.1.1.0.0.0.2.0	
# ::edge	date-entity	year	1979	0.0.1.1.1.0.0.0.1	0.0.1.1.1.0.0.0.1.0	
# ::edge	elect-01	mod	general	0.0.1.1.1.0.0.0	0.0.1.1.1.0.0.0.0	
# ::edge	elect-01	time	date-entity	0.0.1.1.1.0.0.0	0.0.1.1.1.0.0.0.1	
# ::edge	elect-01	time	date-entity	0.0.1.1.1.0.0.0	0.0.1.1.1.0.0.0.2	
# ::edge	exercise-01	ARG0	person	0.1.1	0.1.1.0	
# ::edge	exercise-01	ARG1	provision	0.1.1	0.1.1.1	
# ::edge	exist-01	ARG1	provision	0.1.1.1.0	0.1.1.1	
# ::edge	industry	mod	key	0.1.0.1.0.0	0.1.0.1.0.0.0	
# ::edge	key	degree	most	0.1.0.1.0.0.0	0.1.0.1.0.0.0.0	
# ::edge	kill-01	ARG0	paper	0.0.1	0.0.1.0	
# ::edge	kill-01	ARG1	idea	0.0.1	0.0	
# ::edge	paper	mod	green	0.0.1.0	0.0.1.0.0	
# ::edge	paper	mod	subsequent	0.0.1.0	0.0.1.0.1	
# ::edge	person	consist	group	0.1.0.1.0.1.0.0.0	0.1.0.1.0.1.0.0	
# ::edge	plead-01	ARG0	industry	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	plead-01	ARG1	difficulty	0.1.0.1.0	0.1.0.1.0.1	
# ::edge	promise-01	ARG0	elect-01	0.0.1.1.1.0.0	0.0.1.1.1.0.0.0	
# ::edge	promise-01	ARG1	action	0.0.1.1.1.0.0	0.0.1.1.1.0	
# ::edge	provision	mod	legal	0.1.1.1	0.1.1.1.1	
# ::edge	relevant-41	ARG1	group	0.1.0.1.0.1.0	0.1.0.1.0.1.0.0	
# ::edge	relevant-41	ARG2	difficulty	0.1.0.1.0.1.0	0.1.0.1.0.1	
# ::edge	restrict-01	ARG1	action	0.0.1.1.1	0.0.1.1.1.0	
# ::edge	say-01	ARG0	idea	0	0.0	
# ::edge	say-01	ARG1	and	0	0.1	
# ::edge	service	mod	essential	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	use-01	manner	little	0.1.0	0.1.0.0	
# ::edge	work-01	ARG0	person	0.1.0.1.0.1.0.0.0.0	0.1.0.1.0.1.0.0.0	
# ::edge	work-01	ARG0	person	0.1.1.0.0	0.1.1.0	
(s2 / say-01 
      :ARG0 (i2 / idea 
            :ARG0-of (a3 / act-02 
                  :ARG1 (s / such)) 
            :ARG1-of (k2 / kill-01 
                  :ARG0 (p5 / paper 
                        :mod (g2 / green) 
                        :mod (s3 / subsequent)) 
                  :ARG1-of (c / contrast-01 
                        :ARG0 (s4 / service 
                              :mod (e3 / essential)) 
                        :ARG2 (r2 / restrict-01 
                              :ARG1 (a4 / action 
                                    :ARG1-of (p6 / promise-01 
                                          :ARG0 (e4 / elect-01 
                                                :mod (g3 / general) 
                                                :time (d3 / date-entity 
                                                      :year 1979) 
                                                :time (d2 / date-entity 
                                                      :year 1875))) 
                                    :mod (i3 / industry)))))) 
      :ARG1 (a2 / and 
            :op1 (u / use-01 
                  :manner (l / little) 
                  :op-of (a / and 
                        :op1 (p2 / plead-01 
                              :ARG0 (i / industry 
                                    :mod (k / key 
                                          :degree (m / most))) 
                              :ARG1 (d / difficulty 
                                    :ARG2-of (r / relevant-41 
                                          :ARG1 (g / group 
                                                :consist-of (p / person 
                                                      :ARG0-of (w / work-01)))))))) 
            :op2 (e / exercise-01 
                  :ARG0 (p3 / person 
                        :ARG0-of (w2 / work-01)) 
                  :ARG1 (p4 / provision 
                        :ARG1-of (e2 / exist-01) 
                        :mod (l2 / legal)))))

# ::snt some labour men including arthur henderson maybe took this promise seriously
# ::tok some labour men including arthur henderson maybe took this promise seriously
# ::alignments 10-11|0.0.1 9-10|0.0 8-9|0.0.2 6-7|0 2-3|0.0.0 1-2|0.0.0.0 0-1|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:16.162
# ::node	0	maybe	6-7
# ::node	0.0	promise-01	9-10
# ::node	0.0.0	man	2-3
# ::node	0.0.0.0	labour	1-2
# ::node	0.0.0.1	some	0-1
# ::node	0.0.1	serious	10-11
# ::node	0.0.2	this	8-9
# ::root	0	maybe
(m / maybe 
      :manner-of (p / promise-01 
            :ARG0 (m2 / man 
                  :mod (l / labour) 
                  :mod (s2 / some)) 
            :direction (s / serious) 
            :mod (t / this)))

# ::snt you can take your time honey she syllabled droopy with promise in the drawl
# ::tok you can take your time honey she syllabled droopy with promise in the drawl
# ::alignments 10-11|0.0 6-7|0.0.0 4-5|0.0.1.0 1-2|0 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:16.197
# ::node	0	possible	1-2
# ::node	0.0	promise-01	10-11
# ::node	0.0.0	she	6-7
# ::node	0.0.1	you	0-1
# ::node	0.0.1.0	time	4-5
# ::root	0	possible
# ::edge	possible	op1	promise-01	0	0.0	
# ::edge	promise-01	ARG0	she	0.0	0.0.0	
# ::edge	promise-01	ARG1	you	0.0	0.0.1	
# ::edge	time	poss	you	0.0.1.0	0.0.1	
(p2 / possible 
      :op1 (p / promise-01 
            :ARG0 (s / she) 
            :ARG1 (y / you 
                  :poss-of (t / time))))

# ::snt roosevelt without warning his shipping authorities promised to transfer some american shipping from the pacific to the british
# ::tok roosevelt without warning his shipping authorities promised to transfer some american shipping from the pacific to the british
# ::alignments 11-12|0 10-11|0.0.0.0+0.0.0+0.0 9-10|0.2 8-9|0.1 6-7|0.1.1 5-6|0.1.0 4-5|0.1.2 2-3|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:16.238
# ::node	0	ship-01	11-12
# ::node	0.0	country	10-11
# ::node	0.0.0	name	10-11
# ::node	0.0.0.0	"America"	10-11
# ::node	0.1	transfer-01	8-9
# ::node	0.1.0	authority	5-6
# ::node	0.1.0.0	warn-01	2-3
# ::node	0.1.1	promise-01	6-7
# ::node	0.1.2	ship-01	4-5
# ::node	0.2	some	9-10
# ::root	0	ship-01
# ::edge	country	name	name	0.0	0.0.0	
# ::edge	name	op1	"America"	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	transfer-01	0.1.1	0.1	
# ::edge	ship-01	ARG1	country	0	0.0	
# ::edge	ship-01	ARG1	transfer-01	0.1.2	0.1	
# ::edge	ship-01	quant	some	0	0.2	
# ::edge	transfer-01	ARG0	authority	0.1	0.1.0	
# ::edge	transfer-01	ARG1	ship-01	0.1	0	
# ::edge	warn-01	ARG1	authority	0.1.0.0	0.1.0	
(s / ship-01 
      :ARG1 (c / country 
            :name (n / name 
                  :op1 "America")) 
      :ARG1-of (t / transfer-01 
            :ARG0 (a / authority 
                  :ARG1-of (w / warn-01)) 
            :ARG1-of (p / promise-01) 
            :ARG1-of (s3 / ship-01)) 
      :quant (s2 / some))

# ::snt the labour leader signed the coalition agreements necessary to form a government but was robbed of power by the lastminute defection of religious mps who had earlier promised to back him
# ::tok the labour leader signed the coalition agreements necessary to form a government but was robbed of power by the lastminute defection of religious mps who had earlier promised to back him
# ::alignments 29-30|0.1.0.2.0 27-28|0.1.0.2 26-27|0.1.0.2.1 16-17|0.1.1 14-15|0.1 12-13|0 9-10|0.0 6-7|0.1.0.0.0 5-6|0.1.0.0.0.0 3-4|0.1.0.0 2-3|0.1.0.1+0.1.0 1-2|0.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:16.333
# ::node	0	contrast-01	12-13
# ::node	0.0	form	9-10
# ::node	0.1	rob-01	14-15
# ::node	0.1.0	person	2-3
# ::node	0.1.0.0	sign-02	3-4
# ::node	0.1.0.0.0	agree-01	6-7
# ::node	0.1.0.0.0.0	coalition	5-6
# ::node	0.1.0.1	lead-02	2-3
# ::node	0.1.0.1.0	labour	1-2
# ::node	0.1.0.2	promise-01	27-28
# ::node	0.1.0.2.0	back	29-30
# ::node	0.1.0.2.1	early	26-27
# ::node	0.1.1	power	16-17
# ::root	0	contrast-01
# ::edge	agree-01	ARG1	coalition	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	contrast-01	ARG1	form	0	0.0	
# ::edge	contrast-01	ARG2	rob-01	0	0.1	
# ::edge	lead-02	ARG0	person	0.1.0.1	0.1.0	
# ::edge	lead-02	ARG1	labour	0.1.0.1	0.1.0.1.0	
# ::edge	promise-01	ARG1	person	0.1.0.2	0.1.0	
# ::edge	promise-01	ARG2	back	0.1.0.2	0.1.0.2.0	
# ::edge	promise-01	time	early	0.1.0.2	0.1.0.2.1	
# ::edge	rob-01	ARG0	person	0.1	0.1.0	
# ::edge	rob-01	ARG1	power	0.1	0.1.1	
# ::edge	sign-02	ARG0	person	0.1.0.0	0.1.0	
# ::edge	sign-02	ARG1	agree-01	0.1.0.0	0.1.0.0.0	
(c / contrast-01 
      :ARG1 (f / form) 
      :ARG2 (r / rob-01 
            :ARG0 (p3 / person 
                  :ARG0-of (s / sign-02 
                        :ARG1 (a / agree-01 
                              :ARG1 (c2 / coalition))) 
                  :ARG0-of (l / lead-02 
                        :ARG1 (l2 / labour)) 
                  :ARG1-of (p / promise-01 
                        :ARG2 (b / back) 
                        :time (e / early))) 
            :ARG1 (p2 / power)))

# ::snt of course property men have for some years been alighting upon clubs promising redevelopment and departing when authority stood in their way their motives have not always been admirable and the public has needed protection
# ::tok of course property men have for some years been alighting upon clubs promising redevelopment and departing when authority stood in their way their motives have not always been admirable and the public has needed protection
# ::alignments 34-35|0.1.0.0 33-34|0.1 31-32|0.1.0 29-30|0 28-29|0.0 26-27|0.0.1 23-24|0.0.0 21-22|0.1.1.1.0 18-19|0.1.1 17-18|0.1.1.1 15-16|0.1.1.0.1 14-15|0.1.1.0 12-13|0.1.1.0.0 11-12|0.1.1.0.0.0 7-8|0.1.1.0.1.1.1+0.1.1.0.1.1 6-7|0.1.1.0.1.1.0 3-4|0.1.1.0.0.1 2-3|0.1.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:17.067
# ::node	0	and	29-30
# ::node	0.0	admirable	28-29
# ::node	0.0.0	motive	23-24
# ::node	0.0.1	always	26-27
# ::node	0.1	need-01	33-34
# ::node	0.1.0	public	31-32
# ::node	0.1.0.0	protect-01	34-35
# ::node	0.1.1	stand-01	18-19
# ::node	0.1.1.0	and	14-15
# ::node	0.1.1.0.0	promise-01	12-13
# ::node	0.1.1.0.0.0	club	11-12
# ::node	0.1.1.0.0.1	man	3-4
# ::node	0.1.1.0.1	depart-01	15-16
# ::node	0.1.1.0.1.0	property	2-3
# ::node	0.1.1.0.1.1	temporal-quantity	7-8
# ::node	0.1.1.0.1.1.0	some	6-7
# ::node	0.1.1.0.1.1.1	year	7-8
# ::node	0.1.1.1	authority	17-18
# ::node	0.1.1.1.0	way	21-22
# ::root	0	and
# ::edge	admirable	domain	motive	0.0	0.0.0	
# ::edge	admirable	time	always	0.0	0.0.1	
# ::edge	and	op1	admirable	0	0.0	
# ::edge	and	op1	depart-01	0.1.1.0	0.1.1.0.1	
# ::edge	and	op2	need-01	0	0.1	
# ::edge	depart-01	ARG0	property	0.1.1.0.1	0.1.1.0.1.0	
# ::edge	depart-01	ARG1	temporal-quantity	0.1.1.0.1	0.1.1.0.1.1	
# ::edge	need-01	ARG0	public	0.1	0.1.0	
# ::edge	need-01	ARG1	stand-01	0.1	0.1.1	
# ::edge	promise-01	ARG0	club	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	promise-01	ARG1	man	0.1.1.0.0	0.1.1.0.0.1	
# ::edge	promise-01	ARG2	and	0.1.1.0.0	0.1.1.0	
# ::edge	protect-01	ARG1	public	0.1.0.0	0.1.0	
# ::edge	stand-01	ARG0	and	0.1.1	0.1.1.0	
# ::edge	stand-01	ARG1	authority	0.1.1	0.1.1.1	
# ::edge	temporal-quantity	mod	some	0.1.1.0.1.1	0.1.1.0.1.1.0	
# ::edge	temporal-quantity	unit	year	0.1.1.0.1.1	0.1.1.0.1.1.1	
# ::edge	way	poss	authority	0.1.1.1.0	0.1.1.1	
(a / and 
      :op1 (a2 / admirable 
            :domain (m / motive) 
            :time (a3 / always)) 
      :op2 (n / need-01 
            :ARG0 (p2 / public 
                  :ARG1-of (p / protect-01)) 
            :ARG1 (s / stand-01 
                  :ARG0 (a5 / and 
                        :ARG2-of (p3 / promise-01 
                              :ARG0 (c / club) 
                              :ARG1 (m2 / man)) 
                        :op1 (d / depart-01 
                              :ARG0 (p4 / property) 
                              :ARG1 (t / temporal-quantity 
                                    :mod (s2 / some) 
                                    :unit (y / year)))) 
                  :ARG1 (a4 / authority 
                        :poss-of (w / way)))))

# ::snt mr vargas llosa promises to restructure the state privatise all state companies take personal charge of the antisubversive war and bring inflation down to 10 per cent within a year
# ::tok mr vargas llosa promises to restructure the state privatise all state companies take personal charge of the antisubversive war and bring inflation down to 10 per cent within a year
# ::alignments 29-30|0.0.0.2.0 27-28|0.0.0.2.0.0 26-27|0.0.0.2.1+0.0.0.2 24-25|0.0.0.1 22-23|0.2.2 21-22|0.2.1 20-21|0.2 19-20|0 18-19|0.1 13-14|0.0.0.0 11-12|0.2.0 10-11|0.2.0.0 9-10|0.2.0.1 7-8|0.0 3-4|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:17.300
# ::node	0	and	19-20
# ::node	0.0	state	7-8
# ::node	0.0.0	promise-01	3-4
# ::node	0.0.0.0	personal	13-14
# ::node	0.0.0.1	10	24-25
# ::node	0.0.0.2	monetary-quantity	26-27
# ::node	0.0.0.2.0	year	29-30
# ::node	0.0.0.2.0.0	within	27-28
# ::node	0.0.0.2.1	cent	26-27
# ::node	0.1	war	18-19
# ::node	0.2	bring-01	20-21
# ::node	0.2.0	company	11-12
# ::node	0.2.0.0	state	10-11
# ::node	0.2.0.1	all	9-10
# ::node	0.2.1	inflation	21-22
# ::node	0.2.2	down	22-23
# ::root	0	and
# ::edge	10	op1	promise-01	0.0.0.1	0.0.0	
# ::edge	and	op1	state	0	0.0	
# ::edge	and	op2	war	0	0.1	
# ::edge	and	op3	bring-01	0	0.2	
# ::edge	bring-01	ARG0	company	0.2	0.2.0	
# ::edge	bring-01	ARG1	inflation	0.2	0.2.1	
# ::edge	bring-01	ARG2	down	0.2	0.2.2	
# ::edge	company	mod	state	0.2.0	0.2.0.0	
# ::edge	company	quant	all	0.2.0	0.2.0.1	
# ::edge	monetary-quantity	op1	promise-01	0.0.0.2	0.0.0	
# ::edge	monetary-quantity	time	year	0.0.0.2	0.0.0.2.0	
# ::edge	monetary-quantity	unit	cent	0.0.0.2	0.0.0.2.1	
# ::edge	promise-01	ARG0	state	0.0.0	0.0	
# ::edge	promise-01	ARG1	personal	0.0.0	0.0.0.0	
# ::edge	within	op1	year	0.0.0.2.0.0	0.0.0.2.0	
(a / and 
      :op1 (s2 / state 
            :ARG0-of (p2 / promise-01 
                  :ARG1 (p / personal) 
                  :op-of 10 
                  :op-of (m / monetary-quantity 
                        :time (y / year 
                              :op-of (w / within)) 
                        :unit (c / cent)))) 
      :op2 (w2 / war) 
      :op3 (b / bring-01 
            :ARG0 (c2 / company 
                  :mod (s / state) 
                  :quant (a2 / all)) 
            :ARG1 (i / inflation) 
            :ARG2 (d / down)))

# ::snt   she promised me that she would come
# ::tok she promised me that she would come
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:17.301
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt and then hangs himself from a bloody chandelier  over the next few minutes rain outlined what she knew about alf wilson and she promised to tell his cousin anything else she learned
# ::tok and then hangs himself from a bloody chandelier over the next few minutes rain outlined what she knew about alf wilson and she promised to tell his cousin anything else she learned
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:17.303
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt they promise an honest to goodness family holiday in the sun and thats exactly what we got
# ::tok they promise an honest to goodness family holiday in the sun and thats exactly what we got
# ::alignments 15-16|0.1.1 13-14|0.2.0 12-13|0.2 11-12|0 10-11|0.1.0.0.0 7-8|0.1.0.0 6-7|0.0 3-4|0.1.0.0.1 1-2|0.1 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:17.400
# ::node	0	and	11-12
# ::node	0.0	family	6-7
# ::node	0.1	promise-01	1-2
# ::node	0.1.0	they	0-1
# ::node	0.1.0.0	holiday	7-8
# ::node	0.1.0.0.0	sun	10-11
# ::node	0.1.0.0.1	honest	3-4
# ::node	0.1.1	we	15-16
# ::node	0.2	that	12-13
# ::node	0.2.0	exact	13-14
# ::root	0	and
# ::edge	and	mod	family	0	0.0	
# ::edge	and	op1	promise-01	0	0.1	
# ::edge	and	op2	that	0	0.2	
# ::edge	holiday	location	sun	0.1.0.0	0.1.0.0.0	
# ::edge	holiday	mod	honest	0.1.0.0	0.1.0.0.1	
# ::edge	holiday	poss	they	0.1.0.0	0.1.0	
# ::edge	promise-01	ARG0	they	0.1	0.1.0	
# ::edge	promise-01	ARG1	we	0.1	0.1.1	
# ::edge	that	manner	exact	0.2	0.2.0	
(a / and 
      :mod (f / family) 
      :op1 (p / promise-01 
            :ARG0 (t2 / they 
                  :poss-of (h / holiday 
                        :location (s / sun) 
                        :mod (h2 / honest))) 
            :ARG1 (w / we)) 
      :op2 (t / that 
            :manner (e / exact)))

# ::snt the girls mother patricia kent told the court how mr hammond had promised the two eldest of his three children sweets if they spelt their names
# ::tok the girls mother patricia kent told the court how mr hammond had promised the two eldest of his three children sweets if they spelt their names
# ::alignments 25-26|0.1.2 22-23|0.1.2.0 19-20|0.0 18-19|0.1.0 14-15|0.1.1 12-13|0.1 7-8|0.2 5-6|0 2-3|0.2.0.1+0.2.0 1-2|0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:17.604
# ::node	0	tell-01	5-6
# ::node	0.0	child	19-20
# ::node	0.1	promise-01	12-13
# ::node	0.1.0	3	18-19
# ::node	0.1.1	2	14-15
# ::node	0.1.2	name	25-26
# ::node	0.1.2.0	they	22-23
# ::node	0.2	court	7-8
# ::node	0.2.0	have-rel-role-91	2-3
# ::node	0.2.0.0	girl	1-2
# ::node	0.2.0.1	mother	2-3
# ::root	0	tell-01
# ::edge	have-rel-role-91	ARG0	court	0.2.0	0.2	
# ::edge	have-rel-role-91	ARG1	girl	0.2.0	0.2.0.0	
# ::edge	have-rel-role-91	ARG2	mother	0.2.0	0.2.0.1	
# ::edge	name	poss	they	0.1.2	0.1.2.0	
# ::edge	promise-01	ARG0	3	0.1	0.1.0	
# ::edge	promise-01	ARG1	2	0.1	0.1.1	
# ::edge	promise-01	ARG2	name	0.1	0.1.2	
# ::edge	tell-01	ARG0	child	0	0.0	
# ::edge	tell-01	ARG1	promise-01	0	0.1	
# ::edge	tell-01	ARG2	court	0	0.2	
(t2 / tell-01 
      :ARG0 (c / child) 
      :ARG1 (p / promise-01 
            :ARG0 3 
            :ARG1 2 
            :ARG2 (n / name 
                  :poss (t / they))) 
      :ARG2 (c2 / court 
            :ARG0-of (h / have-rel-role-91 
                  :ARG1 (g / girl) 
                  :ARG2 (m / mother))))

# ::snt easier travel direct to west germany promised soon will allow even more east germans pessimistic about the chances of real change to leave for good
# ::tok easier travel direct to west germany promised soon will allow even more east germans pessimistic about the chances of real change to leave for good
# ::alignments 24-25|0.0.0.3 22-23|0.0.0 20-21|0.0.0.2 19-20|0.0.0.2.0 17-18|0.0.0.4 13-14|0.0.0.0.1.0.0+0.0.0.0.1.0+0.0.0.0.1+0.0.0.0 12-13|0.0.0.0.2 9-10|0.0.0.1 7-8|0.0.0.0.0.0 6-7|0.0.0.0.0 4-5|0.0.0.4.0 2-3|0.0.1 1-2|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:17.920
# ::node	0	easy	0-1
# ::node	0.0	travel-01	1-2
# ::node	0.0.0	leave-01	22-23
# ::node	0.0.0.0	person	13-14
# ::node	0.0.0.0.0	promise-01	6-7
# ::node	0.0.0.0.0.0	soon	7-8
# ::node	0.0.0.0.1	country	13-14
# ::node	0.0.0.0.1.0	name	13-14
# ::node	0.0.0.0.1.0.0	"Germany"	13-14
# ::node	0.0.0.0.2	east	12-13
# ::node	0.0.0.1	allow-01	9-10
# ::node	0.0.0.2	change-01	20-21
# ::node	0.0.0.2.0	real	19-20
# ::node	0.0.0.3	good	24-25
# ::node	0.0.0.4	chance-01	17-18
# ::node	0.0.0.4.0	west	4-5
# ::node	0.0.1	direct	2-3
# ::root	0	easy
(e2 / easy 
      :mod-of (t / travel-01 
            :ARG1-of (l / leave-01 
                  :ARG0 (p / person 
                        :ARG1-of (p2 / promise-01 
                              :time (s / soon)) 
                        :mod (c3 / country 
                              :name (n / name 
                                    :op1 "Germany")) 
                        :mod (e / east)) 
                  :ARG1-of (a / allow-01) 
                  :ARG1-of (c / change-01 
                        :mod (r / real)) 
                  :ARG2 (g / good) 
                  :purpose-of (c2 / chance-01 
                        :ARG1 (w / west))) 
            :manner (d / direct)))

# ::snt she had already promised herself she wouldnt tell him till after christmas
# ::tok she had already promised herself she wouldnt tell him till after christmas
# ::alignments 10-11|0.0.0.1.0 9-10|0.0.0.1 7-8|0.0.0 5-6|0.0.0.0 3-4|0 2-3|0.1 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:18.011
# ::node	0	promise-01	3-4
# ::node	0.0	she	0-1
# ::node	0.0.0	tell-01	7-8
# ::node	0.0.0.0	she	5-6
# ::node	0.0.0.1	till	9-10
# ::node	0.0.0.1.0	after	10-11
# ::node	0.1	already	2-3
# ::root	0	promise-01
# ::edge	promise-01	ARG0	she	0	0.0	
# ::edge	promise-01	time	already	0	0.1	
# ::edge	tell-01	ARG0	she	0.0.0	0.0.0.0	
# ::edge	tell-01	ARG1	till	0.0.0	0.0.0.1	
# ::edge	tell-01	ARG2	she	0.0.0	0.0	
# ::edge	till	op1	after	0.0.0.1	0.0.0.1.0	
(p / promise-01 
      :ARG0 (s2 / she 
            :ARG2-of (t2 / tell-01 
                  :ARG0 (s / she) 
                  :ARG1 (t / till 
                        :op1 (a / after)))) 
      :time (a2 / already))

# ::snt mr cheney promised that the united states would consult its allies before making reductions in its forces based in europe
# ::tok mr cheney promised that the united states would consult its allies before making reductions in its forces based in europe
# ::alignments 19-20|0.0.1.0.0.0+0.0.1.0.0+0.0.1.0 17-18|0.0.1.1.0.0 16-17|0.0.1.1 13-14|0.0.1.1.0 11-12|0.0.2 10-11|0.0.1 8-9|0.0 5-7|0.0.0.0.0+0.0.0.0.1+0.0.0.0+0.0.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:18.087
# ::node	0	promise-01	2-3
# ::node	0.0	consult-01	8-9
# ::node	0.0.0	country	5-7
# ::node	0.0.0.0	name	5-7
# ::node	0.0.0.0.0	"states"	5-7
# ::node	0.0.0.0.1	"united"	5-7
# ::node	0.0.1	ally-01	10-11
# ::node	0.0.1.0	continent	19-20
# ::node	0.0.1.0.0	name	19-20
# ::node	0.0.1.0.0.0	"Europe"	19-20
# ::node	0.0.1.1	force	16-17
# ::node	0.0.1.1.0	reduce-01	13-14
# ::node	0.0.1.1.0.0	base-01	17-18
# ::node	0.0.2	before	11-12
# ::root	0	promise-01
# ::edge	base-01	ARG1	reduce-01	0.0.1.1.0.0	0.0.1.1.0	
# ::edge	consult-01	ARG0	country	0.0	0.0.0	
# ::edge	consult-01	ARG1	ally-01	0.0	0.0.1	
# ::edge	consult-01	ARG4	before	0.0	0.0.2	
# ::edge	continent	name	name	0.0.1.0	0.0.1.0.0	
# ::edge	continent	poss	ally-01	0.0.1.0	0.0.1	
# ::edge	country	name	name	0.0.0	0.0.0.0	
# ::edge	force	poss	ally-01	0.0.1.1	0.0.1	
# ::edge	name	op1	"Europe"	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	name	op1	"states"	0.0.0.0	0.0.0.0.0	
# ::edge	name	op2	"united"	0.0.0.0	0.0.0.0.1	
# ::edge	promise-01	ARG1	consult-01	0	0.0	
# ::edge	reduce-01	ARG1	force	0.0.1.1.0	0.0.1.1	
(p / promise-01 
      :ARG1 (c2 / consult-01 
            :ARG0 (c3 / country 
                  :name (n2 / name 
                        :op1 "states" 
                        :op2 "united")) 
            :ARG1 (a / ally-01 
                  :poss-of (c / continent 
                        :name (n / name 
                              :op1 "Europe")) 
                  :poss-of (f / force 
                        :ARG1-of (r / reduce-01 
                              :ARG1-of (b / base-01)))) 
            :ARG4 (b2 / before)))

# ::snt this had been allowed by the oxfordshire county councils highways department and dr ware promised to look into the matter
# ::tok this had been allowed by the oxfordshire county councils highways department and dr ware promised to look into the matter
# ::alignments 19-20|0.0.0 14-15|0.0 11-12|0 10-11|0.2 9-10|0.1.1 8-9|0.1.1.0 7-8|0.1.1.0.0 3-4|0.1 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:18.181
# ::node	0	and	11-12
# ::node	0.0	promise-01	14-15
# ::node	0.0.0	matter	19-20
# ::node	0.1	allow-01	3-4
# ::node	0.1.0	this	0-1
# ::node	0.1.1	highway	9-10
# ::node	0.1.1.0	council	8-9
# ::node	0.1.1.0.0	county	7-8
# ::node	0.2	department	10-11
# ::root	0	and
# ::edge	allow-01	ARG1	this	0.1	0.1.0	
# ::edge	allow-01	destination	highway	0.1	0.1.1	
# ::edge	and	op1	allow-01	0	0.1	
# ::edge	and	op2	department	0	0.2	
# ::edge	council	mod	county	0.1.1.0	0.1.1.0.0	
# ::edge	highway	mod	council	0.1.1	0.1.1.0	
# ::edge	promise-01	ARG0	matter	0.0	0.0.0	
# ::edge	promise-01	ARG1	and	0.0	0	
(a / and 
      :ARG1-of (p / promise-01 
            :ARG0 (m / matter)) 
      :op1 (a2 / allow-01 
            :ARG1 (t / this) 
            :destination (h / highway 
                  :mod (c / council 
                        :mod (c2 / county)))) 
      :op2 (d / department))

# ::snt i want everyone to know that we are well on the way to reaching our target of 10550 and with the finance already promised we are now in a position to order the equipment
# ::tok i want everyone to know that we are well on the way to reaching our target of 10550 and with the finance already promised we are now in a position to order the equipment
# ::alignments 33-34|0.2.1.0 29-30|0.0 26-27|0.2.0.0 24-25|0.2.1 23-24|0.2.0 22-23|0.2.0.3 21-22|0.2 18-19|0.2.0.2 15-16|0 13-14|0.1 11-12|0.1.0 8-9|0.1.1 6-7|0.2.0.1 4-5|0.2.0.2.0 2-3|0.2.0.2.0.0 1-2|0.2.0.2.0.1 0-1|0.2.0.2.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:19.297
# ::node	0	target-01	15-16
# ::node	0.0	position	29-30
# ::node	0.1	reach-01	13-14
# ::node	0.1.0	way	11-12
# ::node	0.1.1	well	8-9
# ::node	0.2	finance-01	21-22
# ::node	0.2.0	promise-01	23-24
# ::node	0.2.0.0	now	26-27
# ::node	0.2.0.1	we	6-7
# ::node	0.2.0.2	and	18-19
# ::node	0.2.0.2.0	know-01	4-5
# ::node	0.2.0.2.0.0	everyone	2-3
# ::node	0.2.0.2.0.1	want-01	1-2
# ::node	0.2.0.2.0.1.0	i	0-1
# ::node	0.2.0.3	already	22-23
# ::node	0.2.1	we	24-25
# ::node	0.2.1.0	equipment	33-34
# ::root	0	target-01
# ::edge	and	op1	promise-01	0.2.0.2	0.2.0	
# ::edge	equipment	poss	we	0.2.1.0	0.2.1	
# ::edge	finance-01	ARG1	we	0.2	0.2.1	
# ::edge	know-01	ARG0	everyone	0.2.0.2.0	0.2.0.2.0.0	
# ::edge	know-01	ARG1	and	0.2.0.2.0	0.2.0.2	
# ::edge	promise-01	ARG0	finance-01	0.2.0	0.2	
# ::edge	promise-01	ARG3	now	0.2.0	0.2.0.0	
# ::edge	promise-01	domain	we	0.2.0	0.2.0.1	
# ::edge	promise-01	time	already	0.2.0	0.2.0.3	
# ::edge	reach-01	ARG1	target-01	0.1	0	
# ::edge	target-01	ARG1	position	0	0.0	
# ::edge	target-01	mod	finance-01	0	0.2	
# ::edge	want-01	ARG0	i	0.2.0.2.0.1	0.2.0.2.0.1.0	
# ::edge	want-01	ARG1	know-01	0.2.0.2.0.1	0.2.0.2.0	
# ::edge	way	purpose	reach-01	0.1.0	0.1	
# ::edge	well	purpose	reach-01	0.1.1	0.1	
(t / target-01 
      :ARG1 (p / position) 
      :ARG1-of (r / reach-01 
            :purpose-of (w2 / way) 
            :purpose-of (w3 / well)) 
      :mod (f / finance-01 
            :ARG0-of (p2 / promise-01 
                  :ARG3 (n / now) 
                  :domain (w4 / we) 
                  :op-of (a2 / and 
                        :ARG1-of (k / know-01 
                              :ARG0 (e2 / everyone) 
                              :ARG1-of (w5 / want-01 
                                    :ARG0 (i / i)))) 
                  :time (a / already)) 
            :ARG1 (w / we 
                  :poss-of (e / equipment))))

# ::snt how will the fiftythousandandfirst person in that queue feel  mr kaufman repeatedly cheered by tory backbenchers promised if the scheme was embodied in an act an incoming labour government would examine how far it had gone and how it was working
# ::tok how will the fiftythousandandfirst person in that queue feel mr kaufman repeatedly cheered by tory backbenchers promised if the scheme was embodied in an act an incoming labour government would examine how far it had gone and how it was working
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:19.298
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt theyve promised to do so as soon as a new constitution has been written but western diplomats say that could take up to two years
# ::tok theyve promised to do so as soon as a new constitution has been written but western diplomats say that could take up to two years
# ::alignments 24-25|0.1.1.2.0.0.0+0.1.1.2.0.0 23-24|0.1.1.2.0 19-20|0.0 17-18|0 16-17|0.1.1.0.1+0.1.1.0 15-16|0.1.1.0.0.0.0+0.1.1.0.0.0+0.1.1.0.0 14-15|0.1 13-14|0.1.1 10-11|0.1.1.1 9-10|0.1.1.1.0 6-7|0.1.1.3 4-5|0.1.0 1-2|0.1.1.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:19.806
# ::node	0	say-01	17-18
# ::node	0.0	possible	19-20
# ::node	0.1	contrast-01	14-15
# ::node	0.1.0	so	4-5
# ::node	0.1.1	write-01	13-14
# ::node	0.1.1.0	have-org-role-91	16-17
# ::node	0.1.1.0.0	world-region	15-16
# ::node	0.1.1.0.0.0	name	15-16
# ::node	0.1.1.0.0.0.0	"West"	15-16
# ::node	0.1.1.0.1	diplomat	16-17
# ::node	0.1.1.1	constitution	10-11
# ::node	0.1.1.1.0	new	9-10
# ::node	0.1.1.2	promise-01	1-2
# ::node	0.1.1.2.0	2	23-24
# ::node	0.1.1.2.0.0	temporal-quantity	24-25
# ::node	0.1.1.2.0.0.0	year	24-25
# ::node	0.1.1.3	soon	6-7
# ::root	0	say-01
# ::edge	constitution	mod	new	0.1.1.1	0.1.1.1.0	
# ::edge	contrast-01	ARG0	so	0.1	0.1.0	
# ::edge	contrast-01	ARG1	write-01	0.1	0.1.1	
# ::edge	contrast-01	ARG2	say-01	0.1	0	
# ::edge	have-org-role-91	ARG1	world-region	0.1.1.0	0.1.1.0.0	
# ::edge	have-org-role-91	ARG2	diplomat	0.1.1.0	0.1.1.0.1	
# ::edge	name	op1	"West"	0.1.1.0.0.0	0.1.1.0.0.0.0	
# ::edge	promise-01	ARG1	2	0.1.1.2	0.1.1.2.0	
# ::edge	promise-01	condition	write-01	0.1.1.2	0.1.1	
# ::edge	say-01	ARG1	possible	0	0.0	
# ::edge	temporal-quantity	quant	2	0.1.1.2.0.0	0.1.1.2.0	
# ::edge	temporal-quantity	unit	year	0.1.1.2.0.0	0.1.1.2.0.0.0	
# ::edge	world-region	name	name	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	write-01	ARG0	have-org-role-91	0.1.1	0.1.1.0	
# ::edge	write-01	ARG1	constitution	0.1.1	0.1.1.1	
# ::edge	write-01	time	soon	0.1.1	0.1.1.3	
(s / say-01 
      :ARG1 (p / possible) 
      :ARG2-of (c / contrast-01 
            :ARG0 (s3 / so) 
            :ARG1 (w2 / write-01 
                  :ARG0 (h / have-org-role-91 
                        :ARG1 (w / world-region 
                              :name (n / name 
                                    :op1 "West")) 
                        :ARG2 (d / diplomat)) 
                  :ARG1 (c2 / constitution 
                        :mod (n2 / new)) 
                  :condition-of (p2 / promise-01 
                        :ARG1 (2 / 2 
                              :quant-of (t / temporal-quantity 
                                    :unit (y / year)))) 
                  :time (s2 / soon))))

# ::snt lord mackay said that county courts in particular in the southeast had faced staff turnover problems but he promised improvements
# ::tok lord mackay said that county courts in particular in the southeast had faced staff turnover problems but he promised improvements
# ::alignments 19-20|0.1.2 18-19|0.1 17-18|0.1.0 16-17|0 15-16|0.0 14-15|0.0.1 13-14|0.1.1.0+0.1.1 12-13|0.0.0 10-11|0.0.0.2 7-8|0.0.0.2.0 5-6|0.0.0.0 4-5|0.0.0.0.0 2-3|0.0.0.1 0-1|0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:20.249
# ::node	0	contrast-01	16-17
# ::node	0.0	problem	15-16
# ::node	0.0.0	face-01	12-13
# ::node	0.0.0.0	court	5-6
# ::node	0.0.0.0.0	county	4-5
# ::node	0.0.0.1	say-01	2-3
# ::node	0.0.0.1.0	lord	0-1
# ::node	0.0.0.2	southeast	10-11
# ::node	0.0.0.2.0	particular	7-8
# ::node	0.0.1	turnover	14-15
# ::node	0.1	promise-01	18-19
# ::node	0.1.0	he	17-18
# ::node	0.1.1	person	13-14
# ::node	0.1.1.0	staff-01	13-14
# ::node	0.1.2	improve-01	19-20
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	problem	0	0.0	
# ::edge	contrast-01	ARG2	promise-01	0	0.1	
# ::edge	court	mod	county	0.0.0.0	0.0.0.0.0	
# ::edge	face-01	ARG0	court	0.0.0	0.0.0.0	
# ::edge	face-01	ARG1	problem	0.0.0	0.0	
# ::edge	face-01	ARG2	southeast	0.0.0	0.0.0.2	
# ::edge	particular	compared-to	southeast	0.0.0.2.0	0.0.0.2	
# ::edge	problem	mod	turnover	0.0	0.0.1	
# ::edge	promise-01	ARG0	he	0.1	0.1.0	
# ::edge	promise-01	ARG1	person	0.1	0.1.1	
# ::edge	promise-01	ARG2	improve-01	0.1	0.1.2	
# ::edge	say-01	ARG0	lord	0.0.0.1	0.0.0.1.0	
# ::edge	say-01	ARG1	face-01	0.0.0.1	0.0.0	
# ::edge	staff-01	ARG2	person	0.1.1.0	0.1.1	
(c / contrast-01 
      :ARG1 (p2 / problem 
            :ARG1-of (f / face-01 
                  :ARG0 (c2 / court 
                        :mod (c3 / county)) 
                  :ARG1-of (s3 / say-01 
                        :ARG0 (l / lord)) 
                  :ARG2 (s2 / southeast 
                        :compared-to-of (p4 / particular))) 
            :mod (t / turnover)) 
      :ARG2 (p / promise-01 
            :ARG0 (h / he) 
            :ARG1 (p3 / person 
                  :ARG2-of (s / staff-01)) 
            :ARG2 (i / improve-01)))

# ::snt but mr gratwick promised that there would be no dramatic moves
# ::tok but mr gratwick promised that there would be no dramatic moves
# ::alignments 10-11|0.0.0 9-10|0.0.0.0 8-9|0.0.0.1 3-4|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:20.268
# ::node	0	contrast-01	0-1
# ::node	0.0	promise-01	3-4
# ::node	0.0.0	move-02	10-11
# ::node	0.0.0.0	dramatic	9-10
# ::node	0.0.0.1	-	8-9
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	promise-01	0	0.0	
# ::edge	move-02	manner	dramatic	0.0.0	0.0.0.0	
# ::edge	move-02	polarity	-	0.0.0	0.0.0.1	
# ::edge	promise-01	ARG1	move-02	0.0	0.0.0	
(c / contrast-01 
      :ARG1 (p / promise-01 
            :ARG1 (m / move-02 
                  :manner (d / dramatic) 
                  :polarity (- / -))))

# ::snt mr gandhi has also been promising greater devolution of power to the villages
# ::tok mr gandhi has also been promising greater devolution of power to the villages
# ::alignments 12-13|0.1 9-10|0.0 6-7|0.0.0 5-6|0 3-4|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:20.297
# ::node	0	promise-01	5-6
# ::node	0.0	power	9-10
# ::node	0.0.0	great	6-7
# ::node	0.1	village	12-13
# ::node	0.2	also	3-4
# ::root	0	promise-01
# ::edge	power	mod	great	0.0	0.0.0	
# ::edge	promise-01	ARG1	power	0	0.0	
# ::edge	promise-01	ARG2	village	0	0.1	
# ::edge	promise-01	mod	also	0	0.2	
(p2 / promise-01 
      :ARG1 (p / power 
            :mod (g / great)) 
      :ARG2 (v / village) 
      :mod (a / also))

# ::snt he promised to put the sleeping policeman idea to the county council
# ::tok he promised to put the sleeping policeman idea to the county council
# ::alignments 11-12|0.2.0 10-11|0.2 7-8|0.1 6-7|0.1.1 5-6|0.1.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:20.365
# ::node	0	promise-01	1-2
# ::node	0.0	he	0-1
# ::node	0.1	idea	7-8
# ::node	0.1.0	sleep-01	5-6
# ::node	0.1.1	policeman	6-7
# ::node	0.2	county	10-11
# ::node	0.2.0	council	11-12
# ::root	0	promise-01
# ::edge	council	mod	county	0.2.0	0.2	
# ::edge	county	op1	promise-01	0.2	0	
# ::edge	idea	mod	policeman	0.1	0.1.1	
# ::edge	promise-01	ARG0	he	0	0.0	
# ::edge	promise-01	ARG1	idea	0	0.1	
# ::edge	sleep-01	ARG1	idea	0.1.0	0.1	
(p2 / promise-01 
      :ARG0 (h / he) 
      :ARG1 (i / idea 
            :ARG1-of (s / sleep-01) 
            :mod (p / policeman)) 
      :op-of (c2 / county 
            :mod-of (c / council)))

# ::snt it wont be for long i promise ellip
# ::tok it wont be for long i promise ellip
# ::alignments 6-7|0 5-6|0.0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:20.372
# ::node	0	promise-01	6-7
# ::node	0.0	i	5-6
# ::node	0.1	it	0-1
# ::root	0	promise-01
# ::edge	it	op1	promise-01	0.1	0	
# ::edge	promise-01	ARG0	i	0	0.0	
(p / promise-01 
      :ARG0 (i / i) 
      :op-of (i2 / it))

# ::snt theres even the blinding firework display the count promises at the end to send everybody especially the producer peter hall who in 1973 had to make do with sparklers away joyful
# ::tok theres even the blinding firework display the count promises at the end to send everybody especially the producer peter hall who in 1973 had to make do with sparklers away joyful
# ::alignments 30-31|0.0.0.0.0 29-30|0.0.0.0 22-23|0.3.0+0.3 19-20|0.0.0.1.0 17-18|0.0.0.1.0.0 15-16|0.2 14-15|0.1 13-14|0 8-9|0.0.0 7-8|0.0 5-6|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:20.460
# ::node	0	send-01	13-14
# ::node	0.0	count-01	7-8
# ::node	0.0.0	promise-01	8-9
# ::node	0.0.0.0	away	29-30
# ::node	0.0.0.0.0	joyful	30-31
# ::node	0.0.0.1	display-01	5-6
# ::node	0.0.0.1.0	hall	19-20
# ::node	0.0.0.1.0.0	produce-01	17-18
# ::node	0.1	everybody	14-15
# ::node	0.2	especially	15-16
# ::node	0.3	date-entity	22-23
# ::node	0.3.0	1973	22-23
# ::root	0	send-01
# ::edge	date-entity	year	1973	0.3	0.3.0	
# ::edge	display-01	ARG0	hall	0.0.0.1	0.0.0.1.0	
# ::edge	display-01	ARG1	promise-01	0.0.0.1	0.0.0	
# ::edge	joyful	degree	away	0.0.0.0.0	0.0.0.0	
# ::edge	produce-01	ARG1	hall	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	promise-01	ARG0	count-01	0.0.0	0.0	
# ::edge	promise-01	ARG1	away	0.0.0	0.0.0.0	
# ::edge	send-01	ARG0	count-01	0	0.0	
# ::edge	send-01	ARG1	everybody	0	0.1	
# ::edge	send-01	mod	especially	0	0.2	
# ::edge	send-01	time	date-entity	0	0.3	
(s / send-01 
      :ARG0 (c / count-01 
            :ARG0-of (p2 / promise-01 
                  :ARG1 (a / away 
                        :degree-of (j / joyful)) 
                  :ARG1-of (d2 / display-01 
                        :ARG0 (h / hall 
                              :ARG1-of (p / produce-01))))) 
      :ARG1 (e2 / everybody) 
      :mod (e / especially) 
      :time (d / date-entity 
            :year 1973))

# ::snt it would also appear to promise that all effective sanctions will be removed which impose on unions an incentive to obey the law
# ::tok it would also appear to promise that all effective sanctions will be removed which impose on unions an incentive to obey the law
# ::alignments 22-23|0.0.1.0.1 18-19|0.0.1.0.1.0 16-17|0.0.1.0.0 14-15|0.0.1.0 12-13|0.0.1 9-10|0.0.1.1 8-9|0.0.1.1.0 7-8|0.0.1.1.1 5-6|0.0 3-4|0 2-3|0.1 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:20.712
# ::node	0	appear-02	3-4
# ::node	0.0	promise-01	5-6
# ::node	0.0.0	it	0-1
# ::node	0.0.1	remove-01	12-13
# ::node	0.0.1.0	impose-01	14-15
# ::node	0.0.1.0.0	union	16-17
# ::node	0.0.1.0.1	law	22-23
# ::node	0.0.1.0.1.0	incentivize-01	18-19
# ::node	0.0.1.1	sanction-02	9-10
# ::node	0.0.1.1.0	effective	8-9
# ::node	0.0.1.1.1	all	7-8
# ::node	0.1	also	2-3
# ::root	0	appear-02
# ::edge	appear-02	ARG1	promise-01	0	0.0	
# ::edge	appear-02	mod	also	0	0.1	
# ::edge	impose-01	ARG0	remove-01	0.0.1.0	0.0.1	
# ::edge	impose-01	ARG2	union	0.0.1.0	0.0.1.0.0	
# ::edge	impose-01	purpose	law	0.0.1.0	0.0.1.0.1	
# ::edge	incentivize-01	ARG2	law	0.0.1.0.1.0	0.0.1.0.1	
# ::edge	promise-01	ARG0	it	0.0	0.0.0	
# ::edge	promise-01	ARG1	remove-01	0.0	0.0.1	
# ::edge	remove-01	ARG1	sanction-02	0.0.1	0.0.1.1	
# ::edge	sanction-02	mod	effective	0.0.1.1	0.0.1.1.0	
# ::edge	sanction-02	quant	all	0.0.1.1	0.0.1.1.1	
(a2 / appear-02 
      :ARG1 (p / promise-01 
            :ARG0 (i3 / it) 
            :ARG1 (r / remove-01 
                  :ARG0-of (i2 / impose-01 
                        :ARG2 (u / union) 
                        :purpose (l / law 
                              :ARG2-of (i / incentivize-01))) 
                  :ARG1 (s / sanction-02 
                        :mod (e / effective) 
                        :quant (a / all)))) 
      :mod (a3 / also))

# ::snt the open residential or free settlement areas will lay the foundation the government plans for the new political dispensation mr de klerk persistently promises
# ::tok the open residential or free settlement areas will lay the foundation the government plans for the new political dispensation mr de klerk persistently promises
# ::alignments 23-24|0 17-18|0.0.0.1.0.1.0 16-17|0.0.0.1.0.0 13-14|0.0.0.0.0 10-11|0.0.0.0 8-9|0.0.0 6-7|0.0 5-6|0.0.0.1.0 4-5|0.0.0.1.0.1 3-4|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:20.803
# ::node	0	promise-01	23-24
# ::node	0.0	area	6-7
# ::node	0.0.0	lay-01	8-9
# ::node	0.0.0.0	foundation	10-11
# ::node	0.0.0.0.0	plan-01	13-14
# ::node	0.0.0.1	or	3-4
# ::node	0.0.0.1.0	settle-02	5-6
# ::node	0.0.0.1.0.0	new	16-17
# ::node	0.0.0.1.0.1	free-41	4-5
# ::node	0.0.0.1.0.1.0	politics	17-18
# ::root	0	promise-01
# ::edge	free-41	ARG0	politics	0.0.0.1.0.1	0.0.0.1.0.1.0	
# ::edge	free-41	ARG1	settle-02	0.0.0.1.0.1	0.0.0.1.0	
# ::edge	lay-01	ARG0	area	0.0.0	0.0	
# ::edge	lay-01	ARG1	foundation	0.0.0	0.0.0.0	
# ::edge	or	op1	lay-01	0.0.0.1	0.0.0	
# ::edge	plan-01	ARG1	foundation	0.0.0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	area	0	0.0	
# ::edge	settle-02	ARG0	new	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	settle-02	ARG1	or	0.0.0.1.0	0.0.0.1	
(p / promise-01 
      :ARG1 (a / area 
            :ARG0-of (l / lay-01 
                  :ARG1 (f / foundation 
                        :ARG1-of (p3 / plan-01)) 
                  :op-of (o / or 
                        :ARG1-of (s / settle-02 
                              :ARG0 (n / new) 
                              :ARG1-of (f2 / free-41 
                                    :ARG0 (p2 / politics)))))))

# ::snt   violation of the duty not to interfere with a persons promising will frustrate his right to promise and the interest on which it is base either by preventing the person from exercising his rights or by perverting the considerations on which he decides whether to promise or not, the fact that such interferences with the right are infrequent is reflected by the fact that the right to promise is rarely invoked in ordinary practical discourse
# ::tok violation of the duty not to interfere with a persons promising will frustrate his right to promise and the interest on which it is base either by preventing the person from exercising his rights or by perverting the considerations on which he decides whether to promise or not , the fact that such interferences with the right are infrequent is reflected by the fact that the right to promise is rarely invoked in ordinary practical discourse
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:20.803
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt iraq yesterday promised to allow british officials in baghdad to visit farzad bazoft the observer journalist arrested on 15 september after trying to investigate the mystery explosion at an arms factory which killed hundreds
# ::tok iraq yesterday promised to allow british officials in baghdad to visit farzad bazoft the observer journalist arrested on 15 september after trying to investigate the mystery explosion at an arms factory which killed hundreds
# ::alignments 32-33|0.0.0 30-31|0.0.0.0 29-30|0.0.0.0.0 26-27|0.0 25-26|0.0.1 23-24|0 21-22|0.1 20-21|0.1.0 19-20|0.1.0.0.1.0+0.1.0.0.1 18-19|0.1.0.0.1.1 16-17|0.1.0.0 15-16|0.1.0.0.0 14-15|0.1.0.0.0.0 10-11|0.1.0.0.0.1.0.1 6-7|0.1.0.0.0.1.0.1.0.0+0.1.0.0.0.1.0.1.0 4-5|0.1.0.0.0.1.0 2-3|0.1.0.0.0.1 1-2|0.1.0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:21.260
# ::node	0	investigate-01	23-24
# ::node	0.0	explode-01	26-27
# ::node	0.0.0	kill-01	32-33
# ::node	0.0.0.0	factory	30-31
# ::node	0.0.0.0.0	arm	29-30
# ::node	0.0.1	mystery	25-26
# ::node	0.1	try-01	21-22
# ::node	0.1.0	after	20-21
# ::node	0.1.0.0	arrest-01	16-17
# ::node	0.1.0.0.0	journalist	15-16
# ::node	0.1.0.0.0.0	observe-01	14-15
# ::node	0.1.0.0.0.1	promise-01	2-3
# ::node	0.1.0.0.0.1.0	allow-01	4-5
# ::node	0.1.0.0.0.1.0.0	yesterday	1-2
# ::node	0.1.0.0.0.1.0.1	visit-01	10-11
# ::node	0.1.0.0.0.1.0.1.0	have-org-role-91	6-7
# ::node	0.1.0.0.0.1.0.1.0.0	official	6-7
# ::node	0.1.0.0.1	date-entity	19-20
# ::node	0.1.0.0.1.0	9	19-20
# ::node	0.1.0.0.1.1	15	18-19
# ::root	0	investigate-01
# ::edge	after	op1	try-01	0.1.0	0.1	
# ::edge	allow-01	ARG0	yesterday	0.1.0.0.0.1.0	0.1.0.0.0.1.0.0	
# ::edge	allow-01	ARG1	visit-01	0.1.0.0.0.1.0	0.1.0.0.0.1.0.1	
# ::edge	arrest-01	ARG1	journalist	0.1.0.0	0.1.0.0.0	
# ::edge	arrest-01	time	after	0.1.0.0	0.1.0	
# ::edge	arrest-01	time	date-entity	0.1.0.0	0.1.0.0.1	
# ::edge	date-entity	month	9	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	date-entity	quant	15	0.1.0.0.1	0.1.0.0.1.1	
# ::edge	explode-01	ARG1	mystery	0.0	0.0.1	
# ::edge	factory	mod	arm	0.0.0.0	0.0.0.0.0	
# ::edge	have-org-role-91	ARG1	visit-01	0.1.0.0.0.1.0.1.0	0.1.0.0.0.1.0.1	
# ::edge	have-org-role-91	ARG2	official	0.1.0.0.0.1.0.1.0	0.1.0.0.0.1.0.1.0.0	
# ::edge	investigate-01	ARG1	explode-01	0	0.0	
# ::edge	kill-01	ARG0	explode-01	0.0.0	0.0	
# ::edge	kill-01	ARG1	factory	0.0.0	0.0.0.0	
# ::edge	observe-01	ARG0	journalist	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	promise-01	ARG0	journalist	0.1.0.0.0.1	0.1.0.0.0	
# ::edge	promise-01	ARG1	allow-01	0.1.0.0.0.1	0.1.0.0.0.1.0	
# ::edge	try-01	ARG1	investigate-01	0.1	0	
(i / investigate-01 
      :ARG1 (e / explode-01 
            :ARG0-of (k / kill-01 
                  :ARG1 (f / factory 
                        :mod (a / arm))) 
            :ARG1 (m / mystery)) 
      :ARG1-of (t / try-01 
            :op-of (a2 / after 
                  :time-of (a3 / arrest-01 
                        :ARG1 (j / journalist 
                              :ARG0-of (o / observe-01) 
                              :ARG0-of (p / promise-01 
                                    :ARG1 (a4 / allow-01 
                                          :ARG0 (y / yesterday) 
                                          :ARG1 (v / visit-01 
                                                :ARG1-of (h / have-org-role-91 
                                                      :ARG2 (o2 / official)))))) 
                        :time (d / date-entity 
                              :month 9 
                              :quant 15)))))

# ::snt he promised bemused correspondents that he would return within a year shake off his heavy security and don high heels and a wig to visit the barrios unobserved
# ::tok he promised bemused correspondents that he would return within a year shake off his heavy security and don high heels and a wig to visit the barrios unobserved
# ::alignments 24-25|0.1.1.0.0 22-23|0.2 20-21|0 18-19|0.0 16-17|0.1 15-16|0.1.1.1 14-15|0.1.1.1.0 12-13|0.1.1.2 11-12|0.1.1 10-11|0.1.1.3.0 8-9|0.1.1.3 5-6|0.1.1.0 1-2|0.1.0 0-1|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:21.461
# ::node	0	and	20-21
# ::node	0.0	high	18-19
# ::node	0.1	and	16-17
# ::node	0.1.0	promise-01	1-2
# ::node	0.1.0.0	he	0-1
# ::node	0.1.1	shake-01	11-12
# ::node	0.1.1.0	he	5-6
# ::node	0.1.1.0.0	visit-01	24-25
# ::node	0.1.1.1	security	15-16
# ::node	0.1.1.1.0	heavy	14-15
# ::node	0.1.1.2	off	12-13
# ::node	0.1.1.3	within	8-9
# ::node	0.1.1.3.0	year	10-11
# ::node	0.2	wig	22-23
# ::root	0	and
# ::edge	and	mod	high	0	0.0	
# ::edge	and	op1	shake-01	0.1	0.1.1	
# ::edge	and	op1	wig	0	0.2	
# ::edge	and	op2	and	0.1	0	
# ::edge	promise-01	ARG0	he	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG1	and	0.1.0	0.1	
# ::edge	security	mod	heavy	0.1.1.1	0.1.1.1.0	
# ::edge	shake-01	ARG0	he	0.1.1	0.1.1.0	
# ::edge	shake-01	ARG1	security	0.1.1	0.1.1.1	
# ::edge	shake-01	direction	off	0.1.1	0.1.1.2	
# ::edge	visit-01	ARG0	he	0.1.1.0.0	0.1.1.0	
# ::edge	within	domain	shake-01	0.1.1.3	0.1.1	
# ::edge	within	op1	year	0.1.1.3	0.1.1.3.0	
(a / and 
      :mod (h / high) 
      :op-of (a2 / and 
            :ARG1-of (p / promise-01 
                  :ARG0 (h4 / he)) 
            :op1 (s2 / shake-01 
                  :ARG0 (h3 / he 
                        :ARG0-of (v / visit-01)) 
                  :ARG1 (s / security 
                        :mod (h2 / heavy)) 
                  :direction (o / off) 
                  :domain-of (w2 / within 
                        :op1 (y / year)))) 
      :op1 (w / wig))

# ::snt by leading him to the altar of television you will be consecrating his loss and promising him redemption from his unworthiness
# ::tok by leading him to the altar of television you will be consecrating his loss and promising him redemption from his unworthiness
# ::alignments 17-18|0.1 15-16|0 14-15|0.2 8-9|0.2.0.0 7-8|0.0 1-2|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:21.501
# ::node	0	promise-01	15-16
# ::node	0.0	television	7-8
# ::node	0.1	redemption	17-18
# ::node	0.2	and	14-15
# ::node	0.2.0	lead-01	1-2
# ::node	0.2.0.0	you	8-9
# ::root	0	promise-01
# ::edge	and	op1	promise-01	0.2	0	
# ::edge	lead-01	ARG0	you	0.2.0	0.2.0.0	
# ::edge	lead-01	ARG1	and	0.2.0	0.2	
# ::edge	promise-01	ARG0	television	0	0.0	
# ::edge	promise-01	ARG1	redemption	0	0.1	
(p / promise-01 
      :ARG0 (t / television) 
      :ARG1 (r / redemption) 
      :op-of (a / and 
            :ARG1-of (l / lead-01 
                  :ARG0 (y / you))))

# ::snt the attorneygeneral had promised to take the matter to cabinet his lawyers said
# ::tok the attorneygeneral had promised to take the matter to cabinet his lawyers said
# ::alignments 12-13|0 11-12|0.0 9-10|0.1 7-8|0.2.0 3-4|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:21.557
# ::node	0	say-01	12-13
# ::node	0.0	lawyer	11-12
# ::node	0.1	cabinet	9-10
# ::node	0.2	promise-01	3-4
# ::node	0.2.0	matter	7-8
# ::root	0	say-01
# ::edge	promise-01	ARG1	matter	0.2	0.2.0	
# ::edge	say-01	ARG0	lawyer	0	0.0	
# ::edge	say-01	ARG1	cabinet	0	0.1	
# ::edge	say-01	time	promise-01	0	0.2	
(s / say-01 
      :ARG0 (l / lawyer) 
      :ARG1 (c / cabinet) 
      :time (p / promise-01 
            :ARG1 (m / matter)))

# ::snt 2bn last year and promised a similar return next time
# ::tok 2bn last year and promised a similar return next time
# ::alignments 9-10|0.0.1 8-9|0.0.1.0 4-5|0.0 3-4|0 2-3|0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:21.586
# ::node	0	and	3-4
# ::node	0.0	promise-01	4-5
# ::node	0.0.0	year	2-3
# ::node	0.0.0.0	last	1-2
# ::node	0.0.1	time	9-10
# ::node	0.0.1.0	next	8-9
# ::root	0	and
# ::edge	and	op1	promise-01	0	0.0	
# ::edge	promise-01	ARG0	year	0.0	0.0.0	
# ::edge	promise-01	ARG1	time	0.0	0.0.1	
# ::edge	time	mod	next	0.0.1	0.0.1.0	
# ::edge	year	mod	last	0.0.0	0.0.0.0	
(a / and 
      :op1 (p / promise-01 
            :ARG0 (y / year 
                  :mod (l / last)) 
            :ARG1 (t / time 
                  :mod (n / next))))

# ::snt a motorist who promised a friend he would get to the station on time drove down a platform and crashed into a train teesside magistrates were told yesterday
# ::tok a motorist who promised a friend he would get to the station on time drove down a platform and crashed into a train teesside magistrates were told yesterday
# ::alignments 27-28|0.1.0.0.0 26-27|0.1.0.0 22-23|0.1.0 19-20|0.1 18-19|0 17-18|0.0.1 15-16|0.0.3 14-15|0.0 13-14|0.0.0 11-12|0.0.0.0 6-7|0.0.2.0 5-6|0.0.2.0.0.0+0.0.2.0.0 3-4|0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:21.709
# ::node	0	and	18-19
# ::node	0.0	drive-02	14-15
# ::node	0.0.0	time	13-14
# ::node	0.0.0.0	station	11-12
# ::node	0.0.1	platform	17-18
# ::node	0.0.2	promise-01	3-4
# ::node	0.0.2.0	he	6-7
# ::node	0.0.2.0.0	have-rel-role-91	5-6
# ::node	0.0.2.0.0.0	friend	5-6
# ::node	0.0.3	down	15-16
# ::node	0.1	crash-01	19-20
# ::node	0.1.0	train	22-23
# ::node	0.1.0.0	tell-01	26-27
# ::node	0.1.0.0.0	yesterday	27-28
# ::root	0	and
# ::edge	and	op1	drive-02	0	0.0	
# ::edge	and	op2	crash-01	0	0.1	
# ::edge	crash-01	ARG1	train	0.1	0.1.0	
# ::edge	drive-02	ARG0	time	0.0	0.0.0	
# ::edge	drive-02	ARG1	platform	0.0	0.0.1	
# ::edge	drive-02	ARG2	down	0.0	0.0.3	
# ::edge	have-rel-role-91	ARG0	he	0.0.2.0.0	0.0.2.0	
# ::edge	have-rel-role-91	ARG2	friend	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	promise-01	ARG0	he	0.0.2	0.0.2.0	
# ::edge	promise-01	ARG1	drive-02	0.0.2	0.0	
# ::edge	station	mod	time	0.0.0.0	0.0.0	
# ::edge	tell-01	ARG1	train	0.1.0.0	0.1.0	
# ::edge	tell-01	time	yesterday	0.1.0.0	0.1.0.0.0	
(a / and 
      :op1 (d2 / drive-02 
            :ARG0 (t3 / time 
                  :mod-of (s / station)) 
            :ARG1 (p / platform) 
            :ARG1-of (p2 / promise-01 
                  :ARG0 (h / he 
                        :ARG0-of (h2 / have-rel-role-91 
                              :ARG2 (f / friend)))) 
            :ARG2 (d / down)) 
      :op2 (c / crash-01 
            :ARG1 (t2 / train 
                  :ARG1-of (t / tell-01 
                        :time (y / yesterday)))))

# ::snt as some 3000 east german wouldbe emigrants poured into west germanys embassy in prague yesterday the east germans apparently furious at the latest development accused west germany of gross breach of trust claiming that bonn had promised to stop the flow
# ::tok as some 3000 east german wouldbe emigrants poured into west germanys embassy in prague yesterday the east germans apparently furious at the latest development accused west germany of gross breach of trust claiming that bonn had promised to stop the flow
# ::alignments 40-41|0.1.1.0.0.0.0 38-39|0.1.1.0.0.0 36-37|0.1.1.0.0 32-33|0.1.1.0 31-32|0.0 29-30|0 28-29|0.2 25-26|0.1.1.0.0.0.0.0 24-25|0.1 23-24|0.1.1 22-23|0.1.1.3.0+0.1.1.3 19-20|0.1.1.2 18-19|0.1.1.2.0 17-18|0.1.1.2.1.1.0.0+0.1.1.2.1.1.0+0.1.1.2.1.1+0.1.1.2.1 16-17|0.1.1.2.1.2 14-15|0.1.1.2.1.3.0 11-12|0.1.1.2.1.3 9-10|0.1.1.2.1.0.0 7-8|0.1.1.2.1.0 3-4|0.1.0 2-3|0.1.1.3.1.0+0.1.1.3.1 1-2|0.1.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:22.596
# ::node	0	breach-01	29-30
# ::node	0.0	trust-01	31-32
# ::node	0.1	accuse-01	24-25
# ::node	0.1.0	east	3-4
# ::node	0.1.1	develop-02	23-24
# ::node	0.1.1.0	claim-01	32-33
# ::node	0.1.1.0.0	promise-01	36-37
# ::node	0.1.1.0.0.0	stop-01	38-39
# ::node	0.1.1.0.0.0.0	flow-01	40-41
# ::node	0.1.1.0.0.0.0.0	west	25-26
# ::node	0.1.1.1	some	1-2
# ::node	0.1.1.2	furious	19-20
# ::node	0.1.1.2.0	apparent	18-19
# ::node	0.1.1.2.1	person	17-18
# ::node	0.1.1.2.1.0	pour-01	7-8
# ::node	0.1.1.2.1.0.0	west	9-10
# ::node	0.1.1.2.1.1	country	17-18
# ::node	0.1.1.2.1.1.0	name	17-18
# ::node	0.1.1.2.1.1.0.0	"Germany"	17-18
# ::node	0.1.1.2.1.2	east	16-17
# ::node	0.1.1.2.1.3	embassy	11-12
# ::node	0.1.1.2.1.3.0	yesterday	14-15
# ::node	0.1.1.3	late	22-23
# ::node	0.1.1.3.0	most	22-23
# ::node	0.1.1.3.1	date-entity	2-3
# ::node	0.1.1.3.1.0	3000	2-3
# ::node	0.2	gross	28-29
# ::root	0	breach-01
# ::edge	accuse-01	ARG0	east	0.1	0.1.0	
# ::edge	accuse-01	ARG1	develop-02	0.1	0.1.1	
# ::edge	accuse-01	ARG2	breach-01	0.1	0	
# ::edge	breach-01	ARG1	trust-01	0	0.0	
# ::edge	breach-01	mod	gross	0	0.2	
# ::edge	claim-01	ARG0	develop-02	0.1.1.0	0.1.1	
# ::edge	claim-01	ARG1	promise-01	0.1.1.0	0.1.1.0.0	
# ::edge	country	name	name	0.1.1.2.1.1	0.1.1.2.1.1.0	
# ::edge	date-entity	year	3000	0.1.1.3.1	0.1.1.3.1.0	
# ::edge	develop-02	ARG1	some	0.1.1	0.1.1.1	
# ::edge	develop-02	time	late	0.1.1	0.1.1.3	
# ::edge	embassy	poss	person	0.1.1.2.1.3	0.1.1.2.1	
# ::edge	embassy	topic	yesterday	0.1.1.2.1.3	0.1.1.2.1.3.0	
# ::edge	flow-01	ARG1	west	0.1.1.0.0.0.0	0.1.1.0.0.0.0.0	
# ::edge	furious	mod	apparent	0.1.1.2	0.1.1.2.0	
# ::edge	furious	purpose	develop-02	0.1.1.2	0.1.1	
# ::edge	late	degree	most	0.1.1.3	0.1.1.3.0	
# ::edge	late	op1	date-entity	0.1.1.3	0.1.1.3.1	
# ::edge	name	op1	"Germany"	0.1.1.2.1.1.0	0.1.1.2.1.1.0.0	
# ::edge	person	mod	country	0.1.1.2.1	0.1.1.2.1.1	
# ::edge	person	mod	east	0.1.1.2.1	0.1.1.2.1.2	
# ::edge	person	mod	furious	0.1.1.2.1	0.1.1.2	
# ::edge	pour-01	ARG0	person	0.1.1.2.1.0	0.1.1.2.1	
# ::edge	pour-01	ARG1	west	0.1.1.2.1.0	0.1.1.2.1.0.0	
# ::edge	promise-01	ARG1	stop-01	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	stop-01	ARG1	flow-01	0.1.1.0.0.0	0.1.1.0.0.0.0	
(b / breach-01 
      :ARG1 (t / trust-01) 
      :ARG2-of (a / accuse-01 
            :ARG0 (e3 / east) 
            :ARG1 (d / develop-02 
                  :ARG0-of (c / claim-01 
                        :ARG1 (p / promise-01 
                              :ARG1 (s / stop-01 
                                    :ARG1 (f / flow-01 
                                          :ARG1 (w / west))))) 
                  :ARG1 (s2 / some) 
                  :purpose-of (f2 / furious 
                        :mod (a2 / apparent) 
                        :mod-of (p2 / person 
                              :ARG0-of (p3 / pour-01 
                                    :ARG1 (w2 / west)) 
                              :mod (c2 / country 
                                    :name (n / name 
                                          :op1 "Germany")) 
                              :mod (e / east) 
                              :poss-of (e2 / embassy 
                                    :topic (y / yesterday)))) 
                  :time (l / late 
                        :degree (m / most) 
                        :op1 (d2 / date-entity 
                              :year 3000)))) 
      :mod (g / gross))

# ::snt cable and wireless mercurys parent has been virtually promised a licence and one or two more will be granted by the government by the beginning of next year
# ::tok cable and wireless mercurys parent has been virtually promised a licence and one or two more will be granted by the government by the beginning of next year
# ::alignments 27-28|0.3.0 26-27|0.3.0.0 24-25|0.3 18-19|0.3.1 14-15|0.3.1.0 13-14|0.0.0.0 11-12|0.0.2 10-11|0.0.0 8-9|0.0 7-8|0.0.3 4-5|0.0.1 2-3|0.2 1-2|0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:23.161
# ::node	0	and	1-2
# ::node	0.0	promise-01	8-9
# ::node	0.0.0	licence	10-11
# ::node	0.0.0.0	or	13-14
# ::node	0.0.1	parent	4-5
# ::node	0.0.2	and	11-12
# ::node	0.0.3	virtual	7-8
# ::node	0.1	cable	0-1
# ::node	0.2	wireless	2-3
# ::node	0.3	begin-01	24-25
# ::node	0.3.0	year	27-28
# ::node	0.3.0.0	next	26-27
# ::node	0.3.1	grant-01	18-19
# ::node	0.3.1.0	2	14-15
# ::root	0	and
# ::edge	and	op1	cable	0	0.1	
# ::edge	and	op2	wireless	0	0.2	
# ::edge	and	op3	begin-01	0	0.3	
# ::edge	begin-01	ARG1	year	0.3	0.3.0	
# ::edge	grant-01	ARG1	2	0.3.1	0.3.1.0	
# ::edge	grant-01	time	begin-01	0.3.1	0.3	
# ::edge	or	op1	licence	0.0.0.0	0.0.0	
# ::edge	promise-01	ARG0	licence	0.0	0.0.0	
# ::edge	promise-01	ARG1	parent	0.0	0.0.1	
# ::edge	promise-01	ARG2	and	0.0	0	
# ::edge	promise-01	ARG3	and	0.0	0.0.2	
# ::edge	promise-01	time	virtual	0.0	0.0.3	
# ::edge	year	mod	next	0.3.0	0.3.0.0	
(a2 / and 
      :ARG2-of (p / promise-01 
            :ARG0 (l / licence 
                  :op-of (o / or)) 
            :ARG1 (p2 / parent) 
            :ARG3 (a / and) 
            :time (v / virtual)) 
      :op1 (c / cable) 
      :op2 (w / wireless) 
      :op3 (b / begin-01 
            :ARG1 (y / year 
                  :mod (n / next)) 
            :time-of (g / grant-01 
                  :ARG1 2)))

# ::snt furthermore if it is not permissible to have bonds based on immorality ones right to promise does not include the right to promise to perform immoral acts
# ::tok furthermore if it is not permissible to have bonds based on immorality ones right to promise does not include the right to promise to perform immoral acts
# ::alignments 25-26|0 24-25|0.0.1.0.0.0 22-23|0.0.1.0.0 18-19|0.0.1.0 15-16|0.0.1.1 12-13|0.0.1 9-10|0.0 8-9|0.0.0 5-6|0.0.0.0 2-3|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:23.325
# ::node	0	immoral	25-26
# ::node	0.0	base-01	9-10
# ::node	0.0.0	bond	8-9
# ::node	0.0.0.0	permit-01	5-6
# ::node	0.0.0.0.0	it	2-3
# ::node	0.0.1	one	12-13
# ::node	0.0.1.0	include-01	18-19
# ::node	0.0.1.0.0	promise-01	22-23
# ::node	0.0.1.0.0.0	perform-01	24-25
# ::node	0.0.1.1	promise-01	15-16
# ::root	0	immoral
(i / immoral 
      :ARG0-of (b / base-01 
            :ARG1 (b2 / bond 
                  :ARG1-of (p4 / permit-01 
                        :ARG0 (i3 / it))) 
            :location (o / one 
                  :ARG0-of (i2 / include-01 
                        :ARG1 (p2 / promise-01 
                              :ARG1 (p / perform-01))) 
                  :ARG0-of (p3 / promise-01))))

# ::snt hrer has decided upon the extermination of jewry and promised it
# ::tok hrer has decided upon the extermination of jewry and promised it
# ::alignments 10-11|0.1.0 9-10|0.1 8-9|0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:23.344
# ::node	0	and	8-9
# ::node	0.0	decide-01	2-3
# ::node	0.1	promise-01	9-10
# ::node	0.1.0	it	10-11
# ::root	0	and
# ::edge	and	op1	decide-01	0	0.0	
# ::edge	and	op2	promise-01	0	0.1	
# ::edge	promise-01	ARG1	it	0.1	0.1.0	
(a / and 
      :op1 (d / decide-01) 
      :op2 (p / promise-01 
            :ARG1 (i / it)))

# ::snt on the other hand since i have promised my neighbour to saw off a branch overhanging a corner of his garden this week i have a duty and therefore i ought to do so
# ::tok on the other hand since i have promised my neighbour to saw off a branch overhanging a corner of his garden this week i have a duty and therefore i ought to do so
# ::alignments 33-34|0.0.1.0.3 29-30|0.0.1.0.0 27-28|0 26-27|0.1 23-24|0.1.0 22-23|0.0 21-22|0.0.0 20-21|0.0.1.1 17-18|0.0.1.1.0 14-15|0.0.1 12-13|0.0.1.0.2 11-12|0.0.1.0 9-10|0.0.1.0.1 7-8|0.0.1.0.1.0 5-6|0.0.1.0.1.0.0 4-5|0.0.1.0.1.0.1 3-4|0.0.1.0.1.0.1.0 2-3|0.0.1.0.1.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:23.734
# ::node	0	and	27-28
# ::node	0.0	week	22-23
# ::node	0.0.0	this	21-22
# ::node	0.0.1	branch	14-15
# ::node	0.0.1.0	see-01	11-12
# ::node	0.0.1.0.0	i	29-30
# ::node	0.0.1.0.1	neighbor-01	9-10
# ::node	0.0.1.0.1.0	promise-01	7-8
# ::node	0.0.1.0.1.0.0	i	5-6
# ::node	0.0.1.0.1.0.1	since	4-5
# ::node	0.0.1.0.1.0.1.0	hand	3-4
# ::node	0.0.1.0.1.0.1.0.0	other	2-3
# ::node	0.0.1.0.2	off	12-13
# ::node	0.0.1.0.3	so	33-34
# ::node	0.0.1.1	garden	20-21
# ::node	0.0.1.1.0	corner	17-18
# ::node	0.1	duty	26-27
# ::node	0.1.0	i	23-24
# ::root	0	and
# ::edge	and	op1	week	0	0.0	
# ::edge	and	op2	duty	0	0.1	
# ::edge	branch	poss	week	0.0.1	0.0	
# ::edge	duty	example	i	0.1	0.1.0	
# ::edge	garden	part	corner	0.0.1.1	0.0.1.1.0	
# ::edge	garden	poss	branch	0.0.1.1	0.0.1	
# ::edge	hand	mod	other	0.0.1.0.1.0.1.0	0.0.1.0.1.0.1.0.0	
# ::edge	neighbor-01	ARG1	see-01	0.0.1.0.1	0.0.1.0	
# ::edge	promise-01	ARG0	i	0.0.1.0.1.0	0.0.1.0.1.0.0	
# ::edge	promise-01	ARG1	neighbor-01	0.0.1.0.1.0	0.0.1.0.1	
# ::edge	see-01	ARG0	i	0.0.1.0	0.0.1.0.0	
# ::edge	see-01	ARG1	branch	0.0.1.0	0.0.1	
# ::edge	see-01	location	off	0.0.1.0	0.0.1.0.2	
# ::edge	see-01	mod	so	0.0.1.0	0.0.1.0.3	
# ::edge	since	op1	promise-01	0.0.1.0.1.0.1	0.0.1.0.1.0	
# ::edge	since	quant	hand	0.0.1.0.1.0.1	0.0.1.0.1.0.1.0	
# ::edge	week	mod	this	0.0	0.0.0	
(a / and 
      :op1 (w / week 
            :mod (t / this) 
            :poss-of (b / branch 
                  :ARG1-of (s2 / see-01 
                        :ARG0 (i / i) 
                        :ARG1-of (n / neighbor-01 
                              :ARG1-of (p / promise-01 
                                    :ARG0 (i3 / i) 
                                    :op-of (s3 / since 
                                          :quant (h / hand 
                                                :mod (o2 / other))))) 
                        :location (o / off) 
                        :mod (s / so)) 
                  :poss-of (g / garden 
                        :part (c / corner)))) 
      :op2 (d / duty 
            :example (i2 / i)))

# ::snt however though promised no coffee appeared in fact nothing appeared so we trooped back inside for the final session of that day
# ::tok however though promised no coffee appeared in fact nothing appeared so we trooped back inside for the final session of that day
# ::alignments 21-22|0.2.0.0.0.1 18-19|0.2.0.0.0 17-18|0.2.0.0.0.0 14-15|0.3.0 13-14|0.3.0.0 11-12|0.2.0.0 10-11|0.3 9-10|0 8-9|0.1 7-8|0.1.0 5-6|0.2 4-5|0.0 3-4|0.0.0 2-3|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:24.029
# ::node	0	appear-01	9-10
# ::node	0.0	coffee	4-5
# ::node	0.0.0	-	3-4
# ::node	0.1	nothing	8-9
# ::node	0.1.0	fact	7-8
# ::node	0.2	appear-01	5-6
# ::node	0.2.0	promise-01	2-3
# ::node	0.2.0.0	we	11-12
# ::node	0.2.0.0.0	session	18-19
# ::node	0.2.0.0.0.0	final	17-18
# ::node	0.2.0.0.0.1	day	21-22
# ::node	0.3	so	10-11
# ::node	0.3.0	inside	14-15
# ::node	0.3.0.0	back	13-14
# ::root	0	appear-01
# ::edge	appear-01	ARG0	coffee	0	0.0	
# ::edge	appear-01	ARG1	appear-01	0.2	0	
# ::edge	appear-01	ARG1	nothing	0	0.1	
# ::edge	appear-01	manner	so	0	0.3	
# ::edge	coffee	polarity	-	0.0	0.0.0	
# ::edge	inside	mod	back	0.3.0	0.3.0.0	
# ::edge	nothing	mod	fact	0.1	0.1.0	
# ::edge	promise-01	ARG0	we	0.2.0	0.2.0.0	
# ::edge	promise-01	ARG1	appear-01	0.2.0	0.2	
# ::edge	session	mod	final	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	session	time	day	0.2.0.0.0	0.2.0.0.0.1	
# ::edge	so	op1	inside	0.3	0.3.0	
# ::edge	we	prep-in	session	0.2.0.0	0.2.0.0.0	
(a / appear-01 
      :ARG0 (c / coffee 
            :polarity (- / -)) 
      :ARG1 (n / nothing 
            :mod (f2 / fact)) 
      :ARG1-of (a2 / appear-01 
            :ARG1-of (p / promise-01 
                  :ARG0 (w / we 
                        :prep-in (s / session 
                              :mod (f / final) 
                              :time (d / day))))) 
      :manner (s2 / so 
            :op1 (i / inside 
                  :mod (b / back))))

# ::snt he argues that a vote for the coalition of the left in cephalonia is effectively a vote for new democracy and stresses mr papandreou has promised to act as a responsible greek dash
# ::tok he argues that a vote for the coalition of the left in cephalonia is effectively a vote for new democracy and stresses mr papandreou has promised to act as a responsible greek dash
# ::alignments 30-31|0 27-28|0.0.1.1 25-26|0.0.1 21-22|0.0.0 20-21|0.0 19-20|0.0.0.0.1.0 18-19|0.0.0.0.1.0.0 16-17|0.0.0.0.1 14-15|0.0.1.0 7-8|0.0.0.0.1.1.0 4-5|0.0.0.0.1.1 1-2|0.0.0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:24.454
# ::node	0	responsible-41	30-31
# ::node	0.0	and	20-21
# ::node	0.0.0	stress-01	21-22
# ::node	0.0.0.0	he	0-1
# ::node	0.0.0.0.0	argue-01	1-2
# ::node	0.0.0.0.1	vote-01	16-17
# ::node	0.0.0.0.1.0	democracy	19-20
# ::node	0.0.0.0.1.0.0	new	18-19
# ::node	0.0.0.0.1.1	vote-01	4-5
# ::node	0.0.0.0.1.1.0	coalition	7-8
# ::node	0.0.1	promise-01	25-26
# ::node	0.0.1.0	effective	14-15
# ::node	0.0.1.1	act-02	27-28
# ::root	0	responsible-41
(r / responsible-41 
      :op-of (a2 / and 
            :op1 (s / stress-01 
                  :ARG0 (h / he 
                        :ARG0-of (a3 / argue-01) 
                        :ARG0-of (v / vote-01 
                              :ARG1 (d / democracy 
                                    :mod (n / new)) 
                              :ARG2 (v2 / vote-01 
                                    :ARG1 (c / coalition))))) 
            :op2 (p / promise-01 
                  :ARG1 (e / effective) 
                  :ARG2 (a / act-02))))

# ::snt he promised similar proposals next spring for lorries
# ::tok he promised similar proposals next spring for lorries
# ::alignments 5-6|0.1.0.0 4-5|0.1.0.0.0 3-4|0.1.0+0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:24.471
# ::node	0	promise-01	1-2
# ::node	0.0	he	0-1
# ::node	0.1	thing	3-4
# ::node	0.1.0	propose-01	3-4
# ::node	0.1.0.0	spring	5-6
# ::node	0.1.0.0.0	next	4-5
# ::root	0	promise-01
# ::edge	promise-01	ARG0	he	0	0.0	
# ::edge	promise-01	ARG1	thing	0	0.1	
# ::edge	propose-01	ARG1	thing	0.1.0	0.1	
# ::edge	propose-01	time	spring	0.1.0	0.1.0.0	
# ::edge	spring	mod	next	0.1.0.0	0.1.0.0.0	
(p2 / promise-01 
      :ARG0 (h / he) 
      :ARG1 (t / thing 
            :ARG1-of (p / propose-01 
                  :time (s / spring 
                        :mod (n / next)))))

# ::snt she promised that nothing would change that she would come home every friday night that she loved him as she had before yet they both knew she was kidding herself
# ::tok she promised that nothing would change that she would come home every friday night that she loved him as she had before yet they both knew she was kidding herself
# ::alignments 28-29|0.1 26-27|0.1.1 25-26|0 24-25|0.1.0.0 23-24|0.1.0 22-23|0.2 21-22|0.3 19-20|0.0 16-17|0.0.0 15-16|0.0.0.1 13-14|0.0.1 12-13|0.0.0.0.0.0.0.0 11-12|0.0.1.0 10-11|0.0.2 7-8|0.0.0.0 5-6|0.0.0.0.0 3-4|0.0.0.0.0.1 1-2|0.0.0.0.0.0.0 0-1|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:26.151
# ::node	0	know-01	25-26
# ::node	0.0	she	19-20
# ::node	0.0.0	love-01	16-17
# ::node	0.0.0.0	she	7-8
# ::node	0.0.0.0.0	change-01	5-6
# ::node	0.0.0.0.0.0	she	0-1
# ::node	0.0.0.0.0.0.0	promise-01	1-2
# ::node	0.0.0.0.0.0.0.0	friday	12-13
# ::node	0.0.0.0.0.1	nothing	3-4
# ::node	0.0.0.1	she	15-16
# ::node	0.0.1	night	13-14
# ::node	0.0.1.0	every	11-12
# ::node	0.0.2	home	10-11
# ::node	0.1	kid-01	28-29
# ::node	0.1.0	they	23-24
# ::node	0.1.0.0	both	24-25
# ::node	0.1.1	she	26-27
# ::node	0.2	yet	22-23
# ::node	0.3	before	21-22
# ::root	0	know-01
# ::edge	change-01	ARG0	she	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	change-01	ARG1	nothing	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	change-01	ARG2	she	0.0.0.0.0	0.0.0.0	
# ::edge	home	poss	she	0.0.2	0.0	
# ::edge	kid-01	ARG0	they	0.1	0.1.0	
# ::edge	kid-01	ARG1	she	0.1	0.1.1	
# ::edge	know-01	ARG0	she	0	0.0	
# ::edge	know-01	ARG1	kid-01	0	0.1	
# ::edge	know-01	mod	yet	0	0.2	
# ::edge	know-01	time	before	0	0.3	
# ::edge	love-01	ARG0	she	0.0.0	0.0.0.0	
# ::edge	love-01	ARG1	she	0.0.0	0.0	
# ::edge	love-01	ARG2	she	0.0.0	0.0.0.1	
# ::edge	night	beneficiary	she	0.0.1	0.0	
# ::edge	night	mod	every	0.0.1	0.0.1.0	
# ::edge	promise-01	ARG0	she	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	promise-01	ARG1	friday	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	they	mod	both	0.1.0	0.1.0.0	
(k2 / know-01 
      :ARG0 (s2 / she 
            :ARG1-of (l / love-01 
                  :ARG0 (s4 / she 
                        :ARG2-of (c / change-01 
                              :ARG0 (s5 / she 
                                    :ARG0-of (p / promise-01 
                                          :ARG1 (f / friday))) 
                              :ARG1 (n2 / nothing))) 
                  :ARG2 (s3 / she)) 
            :beneficiary-of (n / night 
                  :mod (e / every)) 
            :poss-of (h / home)) 
      :ARG1 (k / kid-01 
            :ARG0 (t / they 
                  :mod (b / both)) 
            :ARG1 (s / she)) 
      :mod (y / yet) 
      :time (b2 / before))

# ::snt at the end of this year as long since promised we shall commence a 31 2 year programme of professional explanation and demonstration of the safety of our shuttle system
# ::tok at the end of this year as long since promised we shall commence a 31 2 year programme of professional explanation and demonstration of the safety of our shuttle system
# ::alignments 29-30|0.1.0 28-29|0.1.0.0 25-26|0.1 22-23|0 21-22|0.2 20-21|0.2.0 19-20|0.2.0.0 17-18|0.2.0.1 16-17|0.2.0.1.1 15-16|0.0 12-13|0.2.0.1.0 10-11|0.2.0.1.0.0 9-10|0.2.0.1.0.1 8-9|0.2.0.1.0.1.1 5-6|0.2.0.1.0.1.0 4-5|0.2.0.1.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:26.328
# ::node	0	demonstrate-01	22-23
# ::node	0.0	2	15-16
# ::node	0.1	safe-41	25-26
# ::node	0.1.0	system	29-30
# ::node	0.1.0.0	shuttle	28-29
# ::node	0.2	and	21-22
# ::node	0.2.0	explain-01	20-21
# ::node	0.2.0.0	professional	19-20
# ::node	0.2.0.1	program	17-18
# ::node	0.2.0.1.0	commence-01	12-13
# ::node	0.2.0.1.0.0	we	10-11
# ::node	0.2.0.1.0.1	promise-01	9-10
# ::node	0.2.0.1.0.1.0	year	5-6
# ::node	0.2.0.1.0.1.0.0	this	4-5
# ::node	0.2.0.1.0.1.1	since	8-9
# ::node	0.2.0.1.1	year	16-17
# ::root	0	demonstrate-01
# ::edge	and	op1	demonstrate-01	0.2	0	
# ::edge	commence-01	ARG0	we	0.2.0.1.0	0.2.0.1.0.0	
# ::edge	commence-01	ARG1	program	0.2.0.1.0	0.2.0.1	
# ::edge	demonstrate-01	ARG0	2	0	0.0	
# ::edge	demonstrate-01	ARG1	safe-41	0	0.1	
# ::edge	explain-01	ARG1	and	0.2.0	0.2	
# ::edge	explain-01	mod	professional	0.2.0	0.2.0.0	
# ::edge	program	mod	year	0.2.0.1	0.2.0.1.1	
# ::edge	program	purpose	explain-01	0.2.0.1	0.2.0	
# ::edge	promise-01	ARG0	year	0.2.0.1.0.1	0.2.0.1.0.1.0	
# ::edge	promise-01	ARG1	commence-01	0.2.0.1.0.1	0.2.0.1.0	
# ::edge	safe-41	ARG1	system	0.1	0.1.0	
# ::edge	since	op1	promise-01	0.2.0.1.0.1.1	0.2.0.1.0.1	
# ::edge	system	mod	shuttle	0.1.0	0.1.0.0	
# ::edge	year	mod	this	0.2.0.1.0.1.0	0.2.0.1.0.1.0.0	
(d / demonstrate-01 
      :ARG0 2 
      :ARG1 (s3 / safe-41 
            :ARG1 (s / system 
                  :mod (s2 / shuttle))) 
      :op-of (a / and 
            :ARG1-of (e / explain-01 
                  :mod (p / professional) 
                  :purpose-of (p2 / program 
                        :ARG1-of (c / commence-01 
                              :ARG0 (w / we) 
                              :ARG1-of (p3 / promise-01 
                                    :ARG0 (y2 / year 
                                          :mod (t / this)) 
                                    :op-of (s4 / since))) 
                        :mod (y / year)))))

# ::snt furthermore if it is not permissible to have bonds based on immorality ones right to promise does not include the right to promise to perform immoral acts, the right to promise is no doubt further qualified
# ::tok furthermore if it is not permissible to have bonds based on immorality ones right to promise does not include the right to promise to perform immoral acts , the right to promise is no doubt further qualified
# ::alignments 36-37|0.0 35-36|0.0.2 34-35|0 33-34|0.1 31-32|0.0.0 25-26|0.0.0.0 24-25|0.0.1.0.0.0.0 22-23|0.0.1.0.0.0 18-19|0.0.1.0.0 15-16|0.0.1 12-13|0.0.1.0 9-10|0.0.1.0.1 8-9|0.0.1.0.1.0 5-6|0.0.1.0.1.0.0 2-3|0.0.1.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:26.646
# ::node	0	doubt-01	34-35
# ::node	0.0	qualify-02	36-37
# ::node	0.0.0	promise-01	31-32
# ::node	0.0.0.0	immoral	25-26
# ::node	0.0.1	promise-01	15-16
# ::node	0.0.1.0	one	12-13
# ::node	0.0.1.0.0	include-01	18-19
# ::node	0.0.1.0.0.0	promise-01	22-23
# ::node	0.0.1.0.0.0.0	perform-01	24-25
# ::node	0.0.1.0.1	base-01	9-10
# ::node	0.0.1.0.1.0	bond	8-9
# ::node	0.0.1.0.1.0.0	permit-01	5-6
# ::node	0.0.1.0.1.0.0.0	it	2-3
# ::node	0.0.2	further	35-36
# ::node	0.1	-	33-34
# ::root	0	doubt-01
# ::edge	base-01	ARG1	bond	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	base-01	location	one	0.0.1.0.1	0.0.1.0	
# ::edge	doubt-01	ARG1	qualify-02	0	0.0	
# ::edge	doubt-01	polarity	-	0	0.1	
# ::edge	include-01	ARG0	one	0.0.1.0.0	0.0.1.0	
# ::edge	include-01	ARG1	promise-01	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	permit-01	ARG0	it	0.0.1.0.1.0.0	0.0.1.0.1.0.0.0	
# ::edge	permit-01	ARG1	bond	0.0.1.0.1.0.0	0.0.1.0.1.0	
# ::edge	promise-01	ARG0	one	0.0.1	0.0.1.0	
# ::edge	promise-01	ARG1	immoral	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	perform-01	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	promise-01	ARG1	qualify-02	0.0.1	0.0	
# ::edge	qualify-02	ARG1	promise-01	0.0	0.0.0	
# ::edge	qualify-02	degree	further	0.0	0.0.2	
(d / doubt-01 
      :ARG1 (q / qualify-02 
            :ARG1 (p / promise-01 
                  :ARG1 (i / immoral)) 
            :ARG1-of (p4 / promise-01 
                  :ARG0 (o / one 
                        :ARG0-of (i2 / include-01 
                              :ARG1 (p3 / promise-01 
                                    :ARG1 (p2 / perform-01))) 
                        :location-of (b / base-01 
                              :ARG1 (b2 / bond 
                                    :ARG1-of (p5 / permit-01 
                                          :ARG0 (i3 / it)))))) 
            :degree (f / further)) 
      :polarity (- / -))

# ::snt you know ellip   she introduced the two bolivians and after a few minutes of awkward small talk patrick and his partner returned to the ballroom for what they promised was one last dance
# ::tok you know ellip she introduced the two bolivians and after a few minutes of awkward small talk patrick and his partner returned to the ballroom for what they promised was one last dance
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:26.646
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the social democrats called a general strike in protest denounced by the leadership of the petrograd soviet as mob rule which the russian governor general banned promising to put down all disorders by force
# ::tok the social democrats called a general strike in protest denounced by the leadership of the petrograd soviet as mob rule which the russian governor general banned promising to put down all disorders by force
# ::alignments 33-34|0.1.0.0.0.0 30-31|0.0.0.1 29-30|0.1.0.1 26-27|0.1.0 25-26|0.1 24-25|0.1.0.0 23-24|0.1.0.0.0.1+0.1.0.0.0 19-20|0.0.0.0.0 18-19|0.0.0.0.0.0 9-10|0 8-9|0.0.0 6-7|0.0 5-6|0.0.1 2-3|0.0.0.0 1-2|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:26.912
# ::node	0	denounce-01	9-10
# ::node	0.0	strike-01	6-7
# ::node	0.0.0	protest-01	8-9
# ::node	0.0.0.0	democrat	2-3
# ::node	0.0.0.0.0	rule-03	19-20
# ::node	0.0.0.0.0.0	mob	18-19
# ::node	0.0.0.0.1	society	1-2
# ::node	0.0.0.1	all	30-31
# ::node	0.0.1	general	5-6
# ::node	0.1	ban-01	25-26
# ::node	0.1.0	promise-01	26-27
# ::node	0.1.0.0	general	24-25
# ::node	0.1.0.0.0	have-org-role-91	23-24
# ::node	0.1.0.0.0.0	force	33-34
# ::node	0.1.0.0.0.1	governor	23-24
# ::node	0.1.0.1	down	29-30
# ::root	0	denounce-01
# ::edge	ban-01	ARG1	promise-01	0.1	0.1.0	
# ::edge	democrat	mod	society	0.0.0.0	0.0.0.0.1	
# ::edge	denounce-01	ARG0	strike-01	0	0.0	
# ::edge	denounce-01	ARG1	ban-01	0	0.1	
# ::edge	have-org-role-91	ARG1	force	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	have-org-role-91	ARG2	governor	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	have-org-role-91	mod	general	0.1.0.0.0	0.1.0.0	
# ::edge	promise-01	ARG0	general	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG1	down	0.1.0	0.1.0.1	
# ::edge	protest-01	ARG0	democrat	0.0.0	0.0.0.0	
# ::edge	protest-01	ARG1	all	0.0.0	0.0.0.1	
# ::edge	rule-03	ARG0	democrat	0.0.0.0.0	0.0.0.0	
# ::edge	rule-03	ARG1	mob	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	strike-01	ARG1	protest-01	0.0	0.0.0	
# ::edge	strike-01	mod	general	0.0	0.0.1	
(d2 / denounce-01 
      :ARG0 (s / strike-01 
            :ARG1 (p2 / protest-01 
                  :ARG0 (d3 / democrat 
                        :ARG0-of (r / rule-03 
                              :ARG1 (m / mob)) 
                        :mod (s2 / society)) 
                  :ARG1 (a / all)) 
            :mod (g3 / general)) 
      :ARG1 (b / ban-01 
            :ARG1 (p / promise-01 
                  :ARG0 (g / general 
                        :mod-of (h / have-org-role-91 
                              :ARG1 (f / force) 
                              :ARG2 (g2 / governor))) 
                  :ARG1 (d / down))))

# ::snt shes so convincing that coproducer alex cutler promises  shell break your heart
# ::tok shes so convincing that coproducer alex cutler promises shell break your heart
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:26.913
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt meanwhile the massive technological spinoff from the space programmes promises to change our social and working lives completely during the next two decades
# ::tok meanwhile the massive technological spinoff from the space programmes promises to change our social and working lives completely during the next two decades
# ::alignments 22-23|0.2.0.0.0.1+0.2.0.0.0 21-22|0.2.0.0.0.0 20-21|0.2.0.0 17-18|0.0.3 16-17|0.2 15-16|0.2.0 14-15|0 13-14|0.0.1 11-12|0.0 9-10|0.0.2 8-9|0.0.2.0 7-8|0.0.2.1 3-4|0.1 2-3|0.1.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:27.254
# ::node	0	and	14-15
# ::node	0.0	change-01	11-12
# ::node	0.0.0	meanwhile	0-1
# ::node	0.0.1	society	13-14
# ::node	0.0.2	promise-01	9-10
# ::node	0.0.2.0	program	8-9
# ::node	0.0.2.1	space	7-8
# ::node	0.0.3	complete	17-18
# ::node	0.1	technology	3-4
# ::node	0.1.0	massive	2-3
# ::node	0.2	life	16-17
# ::node	0.2.0	work-01	15-16
# ::node	0.2.0.0	next	20-21
# ::node	0.2.0.0.0	temporal-quantity	22-23
# ::node	0.2.0.0.0.0	2	21-22
# ::node	0.2.0.0.0.1	decade	22-23
# ::root	0	and
# ::edge	and	op1	technology	0	0.1	
# ::edge	and	op2	life	0	0.2	
# ::edge	change-01	ARG0	meanwhile	0.0	0.0.0	
# ::edge	change-01	ARG1	and	0.0	0	
# ::edge	change-01	ARG2	society	0.0	0.0.1	
# ::edge	change-01	manner	complete	0.0	0.0.3	
# ::edge	next	op1	temporal-quantity	0.2.0.0	0.2.0.0.0	
# ::edge	promise-01	ARG0	program	0.0.2	0.0.2.0	
# ::edge	promise-01	ARG1	space	0.0.2	0.0.2.1	
# ::edge	promise-01	ARG2	change-01	0.0.2	0.0	
# ::edge	technology	mod	massive	0.1	0.1.0	
# ::edge	temporal-quantity	quant	2	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	temporal-quantity	unit	decade	0.2.0.0.0	0.2.0.0.0.1	
# ::edge	work-01	ARG0	life	0.2.0	0.2	
# ::edge	work-01	ARG1	next	0.2.0	0.2.0.0	
(a / and 
      :ARG1-of (c2 / change-01 
            :ARG0 (m2 / meanwhile) 
            :ARG2 (s / society) 
            :ARG2-of (p / promise-01 
                  :ARG0 (p2 / program) 
                  :ARG1 (s2 / space)) 
            :manner (c / complete)) 
      :op1 (t2 / technology 
            :mod (m / massive)) 
      :op2 (l / life 
            :ARG0-of (w / work-01 
                  :ARG1 (n / next 
                        :op1 (t / temporal-quantity 
                              :quant 2 
                              :unit (d / decade))))))

# ::snt pensioners are at the mercy of unscrupulous financial advisers who promise a painless way to boost the elderlys meagre income by using their home as security, the elderly are particularly easy prey to smoothtalking financial salesmen who promise an end to their financial worries
# ::tok pensioners are at the mercy of unscrupulous financial advisers who promise a painless way to boost the elderlys meagre income by using their home as security , the elderly are particularly easy prey to smoothtalking financial salesmen who promise an end to their financial worries
# ::alignments 44-45|0.0.2.1 43-44|0.0.2.1.1 38-39|0.0.2.1.0 35-36|0.0.1.0 32-33|0.2 31-32|0 30-31|0.1 28-29|0.0.2.1.0.0 25-26|0.0.2.2 23-24|0.0.2.0 21-22|0.0.2 19-20|0.0.0 18-19|0.0.0.0 15-16|0.0 13-14|0.0.1.1 12-13|0.0.1.1.0 10-11|0.0.1 7-8|0.0.2.3 0-1|0.0.2.4 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:27.616
# ::node	0	easy	31-32
# ::node	0.0	boost-01	15-16
# ::node	0.0.0	income	19-20
# ::node	0.0.0.0	meagre	18-19
# ::node	0.0.1	promise-01	10-11
# ::node	0.0.1.0	finance	35-36
# ::node	0.0.1.1	way	13-14
# ::node	0.0.1.1.0	painless	12-13
# ::node	0.0.2	use-01	21-22
# ::node	0.0.2.0	home	23-24
# ::node	0.0.2.1	worry-01	44-45
# ::node	0.0.2.1.0	promise-01	38-39
# ::node	0.0.2.1.0.0	elderly	28-29
# ::node	0.0.2.1.1	finance	43-44
# ::node	0.0.2.2	security	25-26
# ::node	0.0.2.3	finance	7-8
# ::node	0.0.2.4	pensioner	0-1
# ::node	0.1	particular	30-31
# ::node	0.2	prey	32-33
# ::root	0	easy
# ::edge	boost-01	ARG1	income	0.0	0.0.0	
# ::edge	boost-01	manner	easy	0.0	0	
# ::edge	boost-01	manner	use-01	0.0	0.0.2	
# ::edge	easy	mod	particular	0	0.1	
# ::edge	finance	op1	use-01	0.0.2.3	0.0.2	
# ::edge	income	mod	meagre	0.0.0	0.0.0.0	
# ::edge	pensioner	op1	use-01	0.0.2.4	0.0.2	
# ::edge	prey	op1	easy	0.2	0	
# ::edge	promise-01	ARG0	finance	0.0.1	0.0.1.0	
# ::edge	promise-01	ARG1	elderly	0.0.2.1.0	0.0.2.1.0.0	
# ::edge	promise-01	ARG1	way	0.0.1	0.0.1.1	
# ::edge	promise-01	ARG2	boost-01	0.0.1	0.0	
# ::edge	promise-01	ARG2	worry-01	0.0.2.1.0	0.0.2.1	
# ::edge	use-01	ARG1	home	0.0.2	0.0.2.0	
# ::edge	use-01	ARG2	security	0.0.2	0.0.2.2	
# ::edge	way	mod	painless	0.0.1.1	0.0.1.1.0	
# ::edge	worry-01	ARG1	use-01	0.0.2.1	0.0.2	
# ::edge	worry-01	mod	finance	0.0.2.1	0.0.2.1.1	
(e / easy 
      :manner-of (b / boost-01 
            :ARG1 (i / income 
                  :mod (m / meagre)) 
            :ARG2-of (p5 / promise-01 
                  :ARG0 (f2 / finance) 
                  :ARG1 (w2 / way 
                        :mod (p4 / painless))) 
            :manner (u / use-01 
                  :ARG1 (h / home) 
                  :ARG1-of (w / worry-01 
                        :ARG2-of (p / promise-01 
                              :ARG1 (e2 / elderly)) 
                        :mod (f / finance)) 
                  :ARG2 (s / security) 
                  :op-of (f3 / finance) 
                  :op-of (p6 / pensioner))) 
      :mod (p3 / particular) 
      :op-of (p2 / prey))

# ::snt   mr louisdreyfus who graduated from harvard with an mba promised to tighten budgetary control throughout the group
# ::tok mr louisdreyfus who graduated from harvard with an mba promised to tighten budgetary control throughout the group
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:27.616
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the french had promised independence to lebanon but dash
# ::tok the french had promised independence to lebanon but dash
# ::alignments 7-8|0 4-5|0.0.1+0.0 3-4|0.0.0 1-2|0.0.0.0.0.0+0.0.0.0.0+0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:27.630
# ::node	0	contrast-01	7-8
# ::node	0.0	depend-01	4-5
# ::node	0.0.0	promise-01	3-4
# ::node	0.0.0.0	country	1-2
# ::node	0.0.0.0.0	name	1-2
# ::node	0.0.0.0.0.0	"France"	1-2
# ::node	0.0.1	-	4-5
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	depend-01	0	0.0	
# ::edge	country	name	name	0.0.0.0	0.0.0.0.0	
# ::edge	depend-01	polarity	-	0.0	0.0.1	
# ::edge	name	op1	"France"	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	promise-01	ARG0	country	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	depend-01	0.0.0	0.0	
(c / contrast-01 
      :ARG1 (d / depend-01 
            :ARG1-of (p / promise-01 
                  :ARG0 (c2 / country 
                        :name (n / name 
                              :op1 "France"))) 
            :polarity -))

# ::snt meanwhile mr yeltsin promised on saturday to pursue an economic reform programme which unlike the government plan would not lower living standards
# ::tok meanwhile mr yeltsin promised on saturday to pursue an economic reform programme which unlike the government plan would not lower living standards
# ::alignments 21-22|0.0 20-21|0.0.0 19-20|0.2 16-17|0 11-12|0.1 10-11|0.1.1 9-10|0.1.1.0 7-8|0.1.0 5-6|0.1.0.0 3-4|0.1.0.1 0-1|0.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:27.714
# ::node	0	plan-01	16-17
# ::node	0.0	standard	21-22
# ::node	0.0.0	live-01	20-21
# ::node	0.1	program	11-12
# ::node	0.1.0	pursue-01	7-8
# ::node	0.1.0.0	saturday	5-6
# ::node	0.1.0.1	promise-01	3-4
# ::node	0.1.0.1.0	meanwhile	0-1
# ::node	0.1.1	reform-01	10-11
# ::node	0.1.1.0	economy	9-10
# ::node	0.2	low	19-20
# ::root	0	plan-01
# ::edge	low	concession	plan-01	0.2	0	
# ::edge	plan-01	ARG0	standard	0	0.0	
# ::edge	plan-01	ARG1	program	0	0.1	
# ::edge	program	mod	reform-01	0.1	0.1.1	
# ::edge	promise-01	ARG1	meanwhile	0.1.0.1	0.1.0.1.0	
# ::edge	promise-01	ARG2	pursue-01	0.1.0.1	0.1.0	
# ::edge	pursue-01	ARG0	saturday	0.1.0	0.1.0.0	
# ::edge	pursue-01	ARG1	program	0.1.0	0.1	
# ::edge	reform-01	ARG1	economy	0.1.1	0.1.1.0	
# ::edge	standard	mod	live-01	0.0	0.0.0	
(p / plan-01 
      :ARG0 (s / standard 
            :mod (l / live-01)) 
      :ARG1 (p2 / program 
            :ARG1-of (p3 / pursue-01 
                  :ARG0 (s2 / saturday) 
                  :ARG2-of (p4 / promise-01 
                        :ARG1 (m / meanwhile))) 
            :mod (r / reform-01 
                  :ARG1 (e / economy))) 
      :concession-of (l2 / low))

# ::snt but unlike mr nixon who had sharp words for his host mr kissinger praised mr deng as one of the few statesmen who have always done more than promised
# ::tok but unlike mr nixon who had sharp words for his host mr kissinger praised mr deng as one of the few statesmen who have always done more than promised
# ::alignments 28-29|0.0.1 24-25|0.0.1.0 20-21|0.0.0.0.0 13-14|0.0 10-11|0.0.0.0 7-8|0.0.0 6-7|0.0.0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:27.810
# ::node	0	contrast-01	0-1
# ::node	0.0	praise-01	13-14
# ::node	0.0.0	word	7-8
# ::node	0.0.0.0	host-01	10-11
# ::node	0.0.0.0.0	few	20-21
# ::node	0.0.0.1	sharp	6-7
# ::node	0.0.1	promise-01	28-29
# ::node	0.0.1.0	always	24-25
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	praise-01	0	0.0	
# ::edge	host-01	ARG0	few	0.0.0.0	0.0.0.0.0	
# ::edge	host-01	ARG1	word	0.0.0.0	0.0.0	
# ::edge	praise-01	ARG1	word	0.0	0.0.0	
# ::edge	praise-01	condition	promise-01	0.0	0.0.1	
# ::edge	promise-01	ARG1	always	0.0.1	0.0.1.0	
# ::edge	word	mod	sharp	0.0.0	0.0.0.1	
(c / contrast-01 
      :ARG1 (p2 / praise-01 
            :ARG1 (w / word 
                  :ARG1-of (h / host-01 
                        :ARG0 (f / few)) 
                  :mod (s / sharp)) 
            :condition (p / promise-01 
                  :ARG1 (a / always))))

# ::snt press officer glyn shailes is assembling a number of former british alltime greats who have represented england over the last 40 years and it promises to be a great night
# ::tok press officer glyn shailes is assembling a number of former british alltime greats who have represented england over the last 40 years and it promises to be a great night
# ::alignments 29-30|0.0 28-29|0 24-25|0.0.0 23-24|0.0.0.0 22-23|0.0.0.2 21-22|0.0.0.2.1.2.1+0.0.0.2.1.2 20-21|0.0.0.2.1.2.0 19-20|0.0.0.2.1.2.1.0 16-17|0.0.0.2.1.1.0.0.0.0+0.0.0.2.1.1.0.0.0+0.0.0.2.1.1.0.0 15-16|0.0.0.2.1.1.0 9-10|0.0.0.1 7-8|0.0.0.2.1.1 5-6|0.0.0.2.1 1-2|0.0.0.2.1.0 0-1|0.0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:28.478
# ::node	0	great	28-29
# ::node	0.0	night	29-30
# ::node	0.0.0	promise-01	24-25
# ::node	0.0.0.0	it	23-24
# ::node	0.0.0.1	former	9-10
# ::node	0.0.0.2	and	22-23
# ::node	0.0.0.2.0	press	0-1
# ::node	0.0.0.2.1	assemble-01	5-6
# ::node	0.0.0.2.1.0	officer	1-2
# ::node	0.0.0.2.1.1	number	7-8
# ::node	0.0.0.2.1.1.0	represent-01	15-16
# ::node	0.0.0.2.1.1.0.0	country	16-17
# ::node	0.0.0.2.1.1.0.0.0	name	16-17
# ::node	0.0.0.2.1.1.0.0.0.0	"England"	16-17
# ::node	0.0.0.2.1.2	temporal-quantity	21-22
# ::node	0.0.0.2.1.2.0	40	20-21
# ::node	0.0.0.2.1.2.1	year	21-22
# ::node	0.0.0.2.1.2.1.0	last	19-20
# ::root	0	great
(g / great 
      :mod-of (n / night 
            :ARG1-of (p / promise-01 
                  :ARG0 (i / it) 
                  :op-of (f / former) 
                  :op-of (a / and 
                        :op1 (p2 / press) 
                        :op2 (a2 / assemble-01 
                              :ARG0 (o / officer) 
                              :ARG1 (n3 / number 
                                    :ARG0-of (r / represent-01 
                                          :ARG1 (c / country 
                                                :name (n2 / name 
                                                      :op1 "England")))) 
                              :op-of (t / temporal-quantity 
                                    :quant 40 
                                    :unit (y / year 
                                          :mod (l / last))))))))

# ::snt the right exists because the very same interest on which the power to promise and the duty to keep promises are based is also the ground for holding others to be subject to a duty not to interfere with ones promising, it also requires one not to force people to promise nor to induce them improperly to promise or not to promise
# ::tok the right exists because the very same interest on which the power to promise and the duty to keep promises are based is also the ground for holding others to be subject to a duty not to interfere with ones promising , it also requires one not to force people to promise nor to induce them improperly to promise or not to promise
# ::alignments 62-63|0.1.0.0.0.0.2.1.0.0.1.0.0.1 59-60|0.1.0.0.0.0.2.1.0.0.1.0.0 58-59|0.1.0.0.0.0.2.1.0.0.1.0.0.0.0 54-55|0.1.0.0.0.0.2.1.0.0.1.0.0.0 51-52|0.1.0.0.0.0.2.1.0.0.1.0 48-49|0.1.0.0.0.0.2.1.0.0.1 44-45|0.1.0.0.0.0.2.1.0.0 43-44|0.1.0.0.0.0.2.1.0.0.2 42-43|0.1.0.0.0.0.2.1.0.0.0 40-41|0.1.0.0.0.0.2.1.0 39-40|0.1.0.0.0.0.2.1 37-38|0.1.0.0.0.0.2 34-35|0.1.0.0.0.0.2.0 31-32|0.1.0.0.0.0.2.0.0 28-29|0.1.0.0.0.0.1 27-28|0.1.0.0.0.0 25-26|0.1.0.0.0 23-24|0.1.0.0.0.0.0 21-22|0.1.0.0 19-20|0.1.0.2.0 16-17|0.1.0.2 14-15|0.1.0 13-14|0.1.0.1 11-12|0.1 7-8|0 6-7|0.2 5-6|0.2.0 3-4|0.0 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:29.919
# ::node	0	interest-01	7-8
# ::node	0.0	cause-01	3-4
# ::node	0.0.0	exist-01	2-3
# ::node	0.1	power	11-12
# ::node	0.1.0	and	14-15
# ::node	0.1.0.0	base-01	21-22
# ::node	0.1.0.0.0	ground	25-26
# ::node	0.1.0.0.0.0	hold-01	27-28
# ::node	0.1.0.0.0.0.0	also	23-24
# ::node	0.1.0.0.0.0.1	other	28-29
# ::node	0.1.0.0.0.0.2	interfere-01	37-38
# ::node	0.1.0.0.0.0.2.0	duty	34-35
# ::node	0.1.0.0.0.0.2.0.0	subject	31-32
# ::node	0.1.0.0.0.0.2.1	one	39-40
# ::node	0.1.0.0.0.0.2.1.0	promise-01	40-41
# ::node	0.1.0.0.0.0.2.1.0.0	require-01	44-45
# ::node	0.1.0.0.0.0.2.1.0.0.0	it	42-43
# ::node	0.1.0.0.0.0.2.1.0.0.1	force	48-49
# ::node	0.1.0.0.0.0.2.1.0.0.1.0	promise-01	51-52
# ::node	0.1.0.0.0.0.2.1.0.0.1.0.0	or	59-60
# ::node	0.1.0.0.0.0.2.1.0.0.1.0.0.0	induce-01	54-55
# ::node	0.1.0.0.0.0.2.1.0.0.1.0.0.0.0	promise-01	58-59
# ::node	0.1.0.0.0.0.2.1.0.0.1.0.0.1	promise-01	62-63
# ::node	0.1.0.0.0.0.2.1.0.0.2	also	43-44
# ::node	0.1.0.1	promise-01	13-14
# ::node	0.1.0.2	duty	16-17
# ::node	0.1.0.2.0	promise-01	19-20
# ::node	0.2	same-41	6-7
# ::node	0.2.0	very	5-6
# ::root	0	interest-01
# ::edge	and	op1	power	0.1.0	0.1	
# ::edge	and	op2	promise-01	0.1.0	0.1.0.1	
# ::edge	and	op3	duty	0.1.0	0.1.0.2	
# ::edge	base-01	ARG0	ground	0.1.0.0	0.1.0.0.0	
# ::edge	base-01	ARG1	and	0.1.0.0	0.1.0	
# ::edge	cause-01	ARG0	interest-01	0.0	0	
# ::edge	cause-01	ARG1	exist-01	0.0	0.0.0	
# ::edge	force	purpose	promise-01	0.1.0.0.0.0.2.1.0.0.1	0.1.0.0.0.0.2.1.0.0.1.0	
# ::edge	ground	topic	hold-01	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	hold-01	ARG0	also	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	hold-01	ARG1	other	0.1.0.0.0.0	0.1.0.0.0.0.1	
# ::edge	hold-01	purpose	interfere-01	0.1.0.0.0.0	0.1.0.0.0.0.2	
# ::edge	induce-01	ARG2	promise-01	0.1.0.0.0.0.2.1.0.0.1.0.0.0	0.1.0.0.0.0.2.1.0.0.1.0.0.0.0	
# ::edge	interest-01	ARG1	power	0	0.1	
# ::edge	interfere-01	ARG0	duty	0.1.0.0.0.0.2	0.1.0.0.0.0.2.0	
# ::edge	interfere-01	ARG1	one	0.1.0.0.0.0.2	0.1.0.0.0.0.2.1	
# ::edge	or	op1	induce-01	0.1.0.0.0.0.2.1.0.0.1.0.0	0.1.0.0.0.0.2.1.0.0.1.0.0.0	
# ::edge	or	op2	promise-01	0.1.0.0.0.0.2.1.0.0.1.0.0	0.1.0.0.0.0.2.1.0.0.1.0.0.1	
# ::edge	promise-01	ARG1	duty	0.1.0.2.0	0.1.0.2	
# ::edge	promise-01	ARG1	one	0.1.0.0.0.0.2.1.0	0.1.0.0.0.0.2.1	
# ::edge	promise-01	ARG1	or	0.1.0.0.0.0.2.1.0.0.1.0	0.1.0.0.0.0.2.1.0.0.1.0.0	
# ::edge	require-01	ARG0	it	0.1.0.0.0.0.2.1.0.0	0.1.0.0.0.0.2.1.0.0.0	
# ::edge	require-01	ARG1	force	0.1.0.0.0.0.2.1.0.0	0.1.0.0.0.0.2.1.0.0.1	
# ::edge	require-01	condition	promise-01	0.1.0.0.0.0.2.1.0.0	0.1.0.0.0.0.2.1.0	
# ::edge	require-01	mod	also	0.1.0.0.0.0.2.1.0.0	0.1.0.0.0.0.2.1.0.0.2	
# ::edge	same-41	ARG1	interest-01	0.2	0	
# ::edge	same-41	degree	very	0.2	0.2.0	
# ::edge	subject	prep-to	duty	0.1.0.0.0.0.2.0.0	0.1.0.0.0.0.2.0	
(i4 / interest-01 
      :ARG0-of (c / cause-01 
            :ARG1 (e / exist-01)) 
      :ARG1 (p7 / power 
            :op-of (a3 / and 
                  :ARG1-of (b / base-01 
                        :ARG0 (g / ground 
                              :topic (h / hold-01 
                                    :ARG0 (a2 / also) 
                                    :ARG1 (o3 / other) 
                                    :purpose (i3 / interfere-01 
                                          :ARG0 (d / duty 
                                                :prep-to-of (s / subject)) 
                                          :ARG1 (o2 / one 
                                                :ARG1-of (p4 / promise-01 
                                                      :condition-of (r / require-01 
                                                            :ARG0 (i2 / it) 
                                                            :ARG1 (f / force 
                                                                  :purpose (p3 / promise-01 
                                                                        :ARG1 (o / or 
                                                                              :op1 (i / induce-01 
                                                                                    :ARG2 (p2 / promise-01)) 
                                                                              :op2 (p / promise-01)))) 
                                                            :mod (a / also)))))))) 
                  :op1 (p6 / promise-01) 
                  :op2 (d2 / duty 
                        :ARG1-of (p5 / promise-01)))) 
      :ARG1-of (s2 / same-41 
            :degree (v / very)))

# ::snt in the 1950s willie had watched ben hogan practising for the open and he had promised himself he was going to carry for someone like him
# ::tok in the 1950s willie had watched ben hogan practising for the open and he had promised himself he was going to carry for someone like him
# ::alignments 23-24|0.1.2.0 17-18|0.1.2 15-16|0.1 13-14|0.1.0 12-13|0 5-6|0.0 2-3|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:29.967
# ::node	0	and	12-13
# ::node	0.0	watch-01	5-6
# ::node	0.1	promise-01	15-16
# ::node	0.1.0	he	13-14
# ::node	0.1.1	1950	2-3
# ::node	0.1.2	he	17-18
# ::node	0.1.2.0	someone	23-24
# ::root	0	and
# ::edge	and	op1	watch-01	0	0.0	
# ::edge	and	op2	promise-01	0	0.1	
# ::edge	promise-01	ARG0	he	0.1	0.1.0	
# ::edge	promise-01	ARG1	1950	0.1	0.1.1	
# ::edge	promise-01	ARG2	he	0.1	0.1.2	
# ::edge	someone	poss	he	0.1.2.0	0.1.2	
(a / and 
      :op1 (w / watch-01) 
      :op2 (p / promise-01 
            :ARG0 (h2 / he) 
            :ARG1 1950 
            :ARG2 (h / he 
                  :poss-of (s / someone))))

# ::snt we did not expect to have so many voters on the first day he said and promised that the un and the administratorgenerals office were dealing with the shortages at the polling stations
# ::tok we did not expect to have so many voters on the first day he said and promised that the un and the administratorgenerals office were dealing with the shortages at the polling stations
# ::alignments 32-33|0.0.0.1.0.1.0 28-29|0.0.0.1.0.1 25-26|0.0.0.1.0 23-24|0.0.0.1.0.0.0 20-21|0.0.0.1.0.0 16-17|0.0.0 15-16|0.0.0.1 14-15|0 13-14|0.0 12-13|0.0.0.0 8-9|0.0.0.0.0+0.0.0.0.0.0 7-8|0.0.0.0.0.0.0 6-7|0.0.0.0.0.0.0.0 3-4|0.1 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:30.287
# ::node	0	say-01	14-15
# ::node	0.0	he	13-14
# ::node	0.0.0	promise-01	16-17
# ::node	0.0.0.0	day	12-13
# ::node	0.0.0.0.0	vote-01	8-9
# ::node	0.0.0.0.0.0	person	8-9
# ::node	0.0.0.0.0.0.0	many	7-8
# ::node	0.0.0.0.0.0.0.0	so	6-7
# ::node	0.0.0.1	and	15-16
# ::node	0.0.0.1.0	deal-01	25-26
# ::node	0.0.0.1.0.0	and	20-21
# ::node	0.0.0.1.0.0.0	office	23-24
# ::node	0.0.0.1.0.1	short-41	28-29
# ::node	0.0.0.1.0.1.0	station	32-33
# ::node	0.1	expect-01	3-4
# ::node	0.1.0	we	0-1
# ::root	0	say-01
# ::edge	and	op1	office	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	and	op1	promise-01	0.0.0.1	0.0.0	
# ::edge	and	op2	deal-01	0.0.0.1	0.0.0.1.0	
# ::edge	deal-01	ARG0	and	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	deal-01	ARG1	short-41	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	expect-01	ARG0	we	0.1	0.1.0	
# ::edge	many	degree	so	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	person	quant	many	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	promise-01	ARG0	he	0.0.0	0.0	
# ::edge	promise-01	ARG1	day	0.0.0	0.0.0.0	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	expect-01	0	0.1	
# ::edge	short-41	ARG2	station	0.0.0.1.0.1	0.0.0.1.0.1.0	
# ::edge	vote-01	ARG0	person	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	vote-01	ARG1	day	0.0.0.0.0	0.0.0.0	
(s3 / say-01 
      :ARG0 (h / he 
            :ARG0-of (p / promise-01 
                  :ARG1 (d2 / day 
                        :ARG1-of (v / vote-01 
                              :ARG0 (p2 / person 
                                    :quant (m / many 
                                          :degree (s4 / so))))) 
                  :op-of (a2 / and 
                        :op1 (d / deal-01 
                              :ARG0 (a / and 
                                    :op1 (o / office)) 
                              :ARG1 (s2 / short-41 
                                    :ARG2 (s / station)))))) 
      :ARG1 (e / expect-01 
            :ARG0 (w / we)))

# ::snt the developers are promising 1000 to anyone who recommends a friend to them provided that the friend reserves and buys a wates house before december 31
# ::tok the developers are promising 1000 to anyone who recommends a friend to them provided that the friend reserves and buys a wates house before december 31
# ::alignments 24-25|0.1.0.0+0.1.0 23-24|0.1 22-23|0.0.1.1 19-20|0.0.1 18-19|0.0 17-18|0 16-17|0.0.1.0.1+0.0.1.0 13-14|0.0.0 10-11|0.0.1.2.0+0.0.1.2 8-9|0.0.0.0 6-7|0.0.0.0.0 4-5|0.0.1.0.0.0.0.0+0.0.1.0.0.0.0 3-4|0.0.1.0.0.0 1-2|0.0.1.0.0.1+0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:30.675
# ::node	0	reserve-01	17-18
# ::node	0.0	and	18-19
# ::node	0.0.0	provide-01	13-14
# ::node	0.0.0.0	recommend-01	8-9
# ::node	0.0.0.0.0	anyone	6-7
# ::node	0.0.1	buy-01	19-20
# ::node	0.0.1.0	have-rel-role-91	16-17
# ::node	0.0.1.0.0	person	1-2
# ::node	0.0.1.0.0.0	promise-01	3-4
# ::node	0.0.1.0.0.0.0	date-entity	4-5
# ::node	0.0.1.0.0.0.0.0	1000	4-5
# ::node	0.0.1.0.0.1	develop-02	1-2
# ::node	0.0.1.0.1	friend	16-17
# ::node	0.0.1.1	house	22-23
# ::node	0.0.1.2	have-rel-role-91	10-11
# ::node	0.0.1.2.0	friend	10-11
# ::node	0.1	before	23-24
# ::node	0.1.0	date-entity	24-25
# ::node	0.1.0.0	12	24-25
# ::root	0	reserve-01
# ::edge	and	op1	reserve-01	0.0	0	
# ::edge	and	op2	buy-01	0.0	0.0.1	
# ::edge	before	op1	date-entity	0.1	0.1.0	
# ::edge	buy-01	ARG0	have-rel-role-91	0.0.1	0.0.1.0	
# ::edge	buy-01	ARG1	house	0.0.1	0.0.1.1	
# ::edge	buy-01	ARG2	have-rel-role-91	0.0.1	0.0.1.2	
# ::edge	date-entity	month	12	0.1.0	0.1.0.0	
# ::edge	date-entity	year	1000	0.0.1.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	develop-02	ARG0	person	0.0.1.0.0.1	0.0.1.0.0	
# ::edge	have-rel-role-91	ARG1	person	0.0.1.0	0.0.1.0.0	
# ::edge	have-rel-role-91	ARG2	friend	0.0.1.0	0.0.1.0.1	
# ::edge	have-rel-role-91	ARG2	friend	0.0.1.2	0.0.1.2.0	
# ::edge	promise-01	ARG0	person	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	promise-01	time	date-entity	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	provide-01	ARG1	and	0.0.0	0.0	
# ::edge	recommend-01	ARG0	anyone	0.0.0.0	0.0.0.0.0	
# ::edge	recommend-01	ARG1	provide-01	0.0.0.0	0.0.0	
# ::edge	reserve-01	time	before	0	0.1	
(r / reserve-01 
      :op-of (a / and 
            :ARG1-of (p / provide-01 
                  :ARG1-of (r2 / recommend-01 
                        :ARG0 (a2 / anyone))) 
            :op1 (b2 / buy-01 
                  :ARG0 (h2 / have-rel-role-91 
                        :ARG1 (p3 / person 
                              :ARG0-of (p2 / promise-01 
                                    :time (d2 / date-entity 
                                          :year 1000)) 
                              :ARG0-of (d3 / develop-02)) 
                        :ARG2 (f / friend)) 
                  :ARG1 (h / house) 
                  :ARG2 (h3 / have-rel-role-91 
                        :ARG2 (f2 / friend)))) 
      :time (b / before 
            :op1 (d / date-entity 
                  :month 12)))

# ::snt the balance of payments will improve over the same period halving as a proportion of gdp but reductions in the rate of inflation promise only to be slight it adds
# ::tok the balance of payments will improve over the same period halving as a proportion of gdp but reductions in the rate of inflation promise only to be slight it adds
# ::alignments 29-30|0.0.1.0 28-29|0.0.1.0.0 27-28|0.0.1.0.1 24-25|0.2 23-24|0.1.1 22-23|0.1.1.0 20-21|0.1.0 17-18|0.1 16-17|0 15-16|0.0.0.0+0.0.0+0.0 13-14|0.0.1 9-10|0.1.1.1.0.0 8-9|0.1.1.1.0.0.0 5-6|0.1.1.1.0 3-4|0.1.1.1.1 1-2|0.1.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:31.158
# ::node	0	contrast-01	16-17
# ::node	0.0	thing	15-16
# ::node	0.0.0	name	15-16
# ::node	0.0.0.0	"Gdp"	15-16
# ::node	0.0.1	proportion	13-14
# ::node	0.0.1.0	add-03	29-30
# ::node	0.0.1.0.0	it	28-29
# ::node	0.0.1.0.1	slight	27-28
# ::node	0.1	reduce-01	17-18
# ::node	0.1.0	rate	20-21
# ::node	0.1.1	promise-01	23-24
# ::node	0.1.1.0	inflation	22-23
# ::node	0.1.1.1	balance-01	1-2
# ::node	0.1.1.1.0	improve-01	5-6
# ::node	0.1.1.1.0.0	period	9-10
# ::node	0.1.1.1.0.0.0	same-41	8-9
# ::node	0.1.1.1.1	payment	3-4
# ::node	0.2	only	24-25
# ::root	0	contrast-01
# ::edge	add-03	ARG0	proportion	0.0.1.0	0.0.1	
# ::edge	add-03	ARG1	it	0.0.1.0	0.0.1.0.0	
# ::edge	balance-01	ARG1	payment	0.1.1.1	0.1.1.1.1	
# ::edge	contrast-01	ARG1	thing	0	0.0	
# ::edge	contrast-01	ARG2	reduce-01	0	0.1	
# ::edge	contrast-01	mod	only	0	0.2	
# ::edge	improve-01	ARG0	balance-01	0.1.1.1.0	0.1.1.1	
# ::edge	improve-01	ARG1	period	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	name	op1	"Gdp"	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG0	inflation	0.1.1	0.1.1.0	
# ::edge	promise-01	ARG1	balance-01	0.1.1	0.1.1.1	
# ::edge	reduce-01	ARG1	rate	0.1	0.1.0	
# ::edge	reduce-01	ARG2	promise-01	0.1	0.1.1	
# ::edge	same-41	ARG1	period	0.1.1.1.0.0.0	0.1.1.1.0.0	
# ::edge	slight	domain	add-03	0.0.1.0.1	0.0.1.0	
# ::edge	thing	name	name	0.0	0.0.0	
# ::edge	thing	quant	proportion	0.0	0.0.1	
(c / contrast-01 
      :ARG1 (t / thing 
            :name (n / name 
                  :op1 "Gdp") 
            :quant (p2 / proportion 
                  :ARG0-of (a / add-03 
                        :ARG1 (i / it) 
                        :domain-of (s / slight)))) 
      :ARG2 (r2 / reduce-01 
            :ARG1 (r / rate) 
            :ARG2 (p / promise-01 
                  :ARG0 (i2 / inflation) 
                  :ARG1 (b / balance-01 
                        :ARG0-of (i3 / improve-01 
                              :ARG1 (p3 / period 
                                    :ARG1-of (s2 / same-41))) 
                        :ARG1 (p4 / payment)))) 
      :mod (o / only))

# ::snt count tolstoy had promised nigel watts he would admit his authorship and he voluntarily joined the defence
# ::tok count tolstoy had promised nigel watts he would admit his authorship and he voluntarily joined the defence
# ::alignments 16-17|0.2.1 14-15|0.2 13-14|0.2.2 12-13|0.2.0 11-12|0 8-9|0.0 6-7|0.0.0 3-4|0.1 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:31.211
# ::node	0	and	11-12
# ::node	0.0	admit-01	8-9
# ::node	0.0.0	he	6-7
# ::node	0.1	promise-01	3-4
# ::node	0.1.0	count-01	0-1
# ::node	0.2	join-01	14-15
# ::node	0.2.0	he	12-13
# ::node	0.2.1	defend-01	16-17
# ::node	0.2.2	volunteer-01	13-14
# ::root	0	and
# ::edge	admit-01	ARG0	he	0.0	0.0.0	
# ::edge	admit-01	ARG1	and	0.0	0	
# ::edge	and	op1	promise-01	0	0.1	
# ::edge	and	op2	join-01	0	0.2	
# ::edge	join-01	ARG0	he	0.2	0.2.0	
# ::edge	join-01	ARG1	defend-01	0.2	0.2.1	
# ::edge	promise-01	ARG1	count-01	0.1	0.1.0	
# ::edge	volunteer-01	ARG1	join-01	0.2.2	0.2	
(a / and 
      :ARG1-of (a2 / admit-01 
            :ARG0 (h2 / he)) 
      :op1 (p / promise-01 
            :ARG1 (c / count-01)) 
      :op2 (j / join-01 
            :ARG0 (h / he) 
            :ARG1 (d / defend-01) 
            :ARG1-of (v / volunteer-01)))

# ::snt the gravel supplied by rayners ltd of east hagbourne was promised at even greater discount in return for publicity
# ::tok the gravel supplied by rayners ltd of east hagbourne was promised at even greater discount in return for publicity
# ::alignments 18-19|0.1.0 14-15|0.1 13-14|0.1.2 10-11|0 7-8|0.1.1 2-3|0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:31.261
# ::node	0	promise-01	10-11
# ::node	0.0	gravel	1-2
# ::node	0.0.0	supply-01	2-3
# ::node	0.1	discount-02	14-15
# ::node	0.1.0	publicity	18-19
# ::node	0.1.1	east	7-8
# ::node	0.1.2	great	13-14
# ::root	0	promise-01
# ::edge	discount-02	ARG0	publicity	0.1	0.1.0	
# ::edge	discount-02	ARG1	east	0.1	0.1.1	
# ::edge	discount-02	mod	great	0.1	0.1.2	
# ::edge	promise-01	ARG1	gravel	0	0.0	
# ::edge	promise-01	ARG2	discount-02	0	0.1	
# ::edge	supply-01	ARG1	gravel	0.0.0	0.0	
(p2 / promise-01 
      :ARG1 (g2 / gravel 
            :ARG1-of (s / supply-01)) 
      :ARG2 (d / discount-02 
            :ARG0 (p / publicity) 
            :ARG1 (e / east) 
            :mod (g / great)))

# ::snt the right to prosecute in the crown court had promised to boost the services attractions and ease recruitment problems
# ::tok the right to prosecute in the crown court had promised to boost the services attractions and ease recruitment problems
# ::alignments 18-19|0.0.0.1.0.0.0 17-18|0.0.0.1.0.0.0.0 16-17|0.0.0.1.0.0 15-16|0.0.0.1.0 14-15|0.0.0.0.0+0.0.0.0 13-14|0.0.0.0.0.0 11-12|0.0.0 9-10|0.0.0.1 7-8|0.0 6-7|0 3-4|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:31.397
# ::node	0	crown-01	6-7
# ::node	0.0	court	7-8
# ::node	0.0.0	boost-01	11-12
# ::node	0.0.0.0	thing	14-15
# ::node	0.0.0.0.0	attract-01	14-15
# ::node	0.0.0.0.0.0	service	13-14
# ::node	0.0.0.1	promise-01	9-10
# ::node	0.0.0.1.0	and	15-16
# ::node	0.0.0.1.0.0	ease-02	16-17
# ::node	0.0.0.1.0.0.0	problem	18-19
# ::node	0.0.0.1.0.0.0.0	recruit-01	17-18
# ::node	0.0.1	prosecute-01	3-4
# ::root	0	crown-01
# ::edge	and	op1	ease-02	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	attract-01	ARG0	thing	0.0.0.0.0	0.0.0.0	
# ::edge	attract-01	ARG1	service	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	boost-01	ARG0	court	0.0.0	0.0	
# ::edge	boost-01	ARG1	thing	0.0.0	0.0.0.0	
# ::edge	crown-01	ARG1	court	0	0.0	
# ::edge	ease-02	ARG1	problem	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	problem	mod	recruit-01	0.0.0.1.0.0.0	0.0.0.1.0.0.0.0	
# ::edge	promise-01	ARG1	and	0.0.0.1	0.0.0.1.0	
# ::edge	promise-01	ARG2	boost-01	0.0.0.1	0.0.0	
# ::edge	prosecute-01	location	court	0.0.1	0.0	
(c2 / crown-01 
      :ARG1 (c / court 
            :ARG0-of (b / boost-01 
                  :ARG1 (t / thing 
                        :ARG0-of (a2 / attract-01 
                              :ARG1 (s / service))) 
                  :ARG2-of (p2 / promise-01 
                        :ARG1 (a / and 
                              :op1 (e / ease-02 
                                    :ARG1 (p / problem 
                                          :mod (r / recruit-01)))))) 
            :location-of (p3 / prosecute-01)))

# ::snt   there will be no pointers to the tiresome truth i promise
# ::tok there will be no pointers to the tiresome truth i promise
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:31.398
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the banks start promising to look after you much better than ever before and to shower you with presents
# ::tok the banks start promising to look after you much better than ever before and to shower you with presents
# ::alignments 18-19|0 16-17|0.0 15-16|0.0.0 13-14|0.0.0.0 12-13|0.0.0.0.1.0 11-12|0.0.0.0.1 8-9|0.1 7-8|0.0.0.0.0.0.0 6-7|0.0.0.0.0.0 3-4|0.0.0.0.0 2-3|0.0.0.0.0.1 1-2|0.0.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:31.495
# ::node	0	present-01	18-19
# ::node	0.0	you	16-17
# ::node	0.0.0	shower-01	15-16
# ::node	0.0.0.0	and	13-14
# ::node	0.0.0.0.0	promise-01	3-4
# ::node	0.0.0.0.0.0	after	6-7
# ::node	0.0.0.0.0.0.0	you	7-8
# ::node	0.0.0.0.0.1	start-01	2-3
# ::node	0.0.0.0.0.1.0	bank	1-2
# ::node	0.0.0.0.1	ever	11-12
# ::node	0.0.0.0.1.0	before	12-13
# ::node	0.1	much	8-9
# ::root	0	present-01
# ::edge	after	op1	you	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	and	op1	ever	0.0.0.0	0.0.0.0.1	
# ::edge	and	op2	shower-01	0.0.0.0	0.0.0	
# ::edge	before	mod	ever	0.0.0.0.1.0	0.0.0.0.1	
# ::edge	present-01	ARG0	you	0	0.0	
# ::edge	present-01	ARG1	much	0	0.1	
# ::edge	promise-01	ARG0	after	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	promise-01	ARG1	and	0.0.0.0.0	0.0.0.0	
# ::edge	shower-01	ARG1	you	0.0.0	0.0	
# ::edge	start-01	ARG0	bank	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	start-01	ARG1	promise-01	0.0.0.0.0.1	0.0.0.0.0	
(p / present-01 
      :ARG0 (y / you 
            :ARG1-of (s / shower-01 
                  :op-of (a / and 
                        :ARG1-of (p2 / promise-01 
                              :ARG0 (a2 / after 
                                    :op1 (y2 / you)) 
                              :ARG1-of (s2 / start-01 
                                    :ARG0 (b2 / bank))) 
                        :op1 (e / ever 
                              :mod-of (b / before))))) 
      :ARG1 (m / much))

# ::snt the bec promises to put faults right immediately if the customer is dissatisfied or if the builder defaults in any way on the contract by going bust for example
# ::tok the bec promises to put faults right immediately if the customer is dissatisfied or if the builder defaults in any way on the contract by going bust for example
# ::alignments 28-29|0.0 26-27|0 23-24|0.1 20-21|0.1.1 19-20|0.1.1.0 13-14|0.2 10-11|0.1.0.0 7-8|0.1.0.1 2-3|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:31.558
# ::node	0	bust-01	26-27
# ::node	0.0	example	28-29
# ::node	0.1	contract-02	23-24
# ::node	0.1.0	promise-01	2-3
# ::node	0.1.0.0	customer	10-11
# ::node	0.1.0.1	immediate	7-8
# ::node	0.1.1	way	20-21
# ::node	0.1.1.0	any	19-20
# ::node	0.2	or	13-14
# ::root	0	bust-01
# ::edge	bust-01	ARG1	example	0	0.0	
# ::edge	contract-02	ARG1	promise-01	0.1	0.1.0	
# ::edge	contract-02	ARG2	bust-01	0.1	0	
# ::edge	or	op1	bust-01	0.2	0	
# ::edge	promise-01	ARG0	customer	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG1	immediate	0.1.0	0.1.0.1	
# ::edge	way	mod	any	0.1.1	0.1.1.0	
# ::edge	way	mod	contract-02	0.1.1	0.1	
(b / bust-01 
      :ARG1 (e / example) 
      :ARG2-of (c / contract-02 
            :ARG1 (p / promise-01 
                  :ARG0 (c2 / customer) 
                  :ARG1 (i / immediate)) 
            :mod-of (w / way 
                  :mod (a / any))) 
      :op-of (o / or))

# ::snt john prescott labours transport spokesman made a blistering attack on the governments underinvestment in rail and promised that labours transport policies would be geared to preventing environmental damage
# ::tok john prescott labours transport spokesman made a blistering attack on the governments underinvestment in rail and promised that labours transport policies would be geared to preventing environmental damage
# ::alignments 27-28|0.1.0 26-27|0.1.0.0 25-26|0.1 23-24|0 20-21|0.0 19-20|0.0.0 16-17|0.2.1 15-16|0.2 14-15|0.2.1.1 11-12|0.2.0.0.0+0.2.0.0 8-9|0.2.0 4-5|0.2.1.0+0.2.1.0.0 3-4|0.2.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:31.745
# ::node	0	gear-01	23-24
# ::node	0.0	policy	20-21
# ::node	0.0.0	transport-01	19-20
# ::node	0.1	prevent-01	25-26
# ::node	0.1.0	damage-01	27-28
# ::node	0.1.0.0	environment	26-27
# ::node	0.2	and	15-16
# ::node	0.2.0	attack-01	8-9
# ::node	0.2.0.0	government-organization	11-12
# ::node	0.2.0.0.0	govern-01	11-12
# ::node	0.2.1	promise-01	16-17
# ::node	0.2.1.0	spokesman	4-5
# ::node	0.2.1.0.0	have-org-role-91	4-5
# ::node	0.2.1.0.0.0	transport-01	3-4
# ::node	0.2.1.1	rail	14-15
# ::root	0	gear-01
# ::edge	and	op1	attack-01	0.2	0.2.0	
# ::edge	and	op2	promise-01	0.2	0.2.1	
# ::edge	and	op3	gear-01	0.2	0	
# ::edge	attack-01	location	government-organization	0.2.0	0.2.0.0	
# ::edge	damage-01	ARG1	environment	0.1.0	0.1.0.0	
# ::edge	gear-01	ARG1	policy	0	0.0	
# ::edge	gear-01	ARG2	prevent-01	0	0.1	
# ::edge	govern-01	ARG0	government-organization	0.2.0.0.0	0.2.0.0	
# ::edge	have-org-role-91	ARG1	transport-01	0.2.1.0.0	0.2.1.0.0.0	
# ::edge	have-org-role-91	ARG2	spokesman	0.2.1.0.0	0.2.1.0	
# ::edge	policy	topic	transport-01	0.0	0.0.0	
# ::edge	prevent-01	ARG1	damage-01	0.1	0.1.0	
# ::edge	promise-01	ARG0	spokesman	0.2.1	0.2.1.0	
# ::edge	promise-01	ARG1	rail	0.2.1	0.2.1.1	
(g / gear-01 
      :ARG1 (p2 / policy 
            :topic (t / transport-01)) 
      :ARG2 (p / prevent-01 
            :ARG1 (d / damage-01 
                  :ARG1 (e / environment))) 
      :op-of (a / and 
            :op1 (a2 / attack-01 
                  :location (g2 / government-organization 
                        :ARG0-of (g3 / govern-01))) 
            :op2 (p3 / promise-01 
                  :ARG0 (s / spokesman 
                        :ARG2-of (h / have-org-role-91 
                              :ARG1 (t2 / transport-01))) 
                  :ARG1 (r / rail))))

# ::snt polanski still wanted to do the film for one thing he needed the money and evans had promised him plenty
# ::tok polanski still wanted to do the film for one thing he needed the money and evans had promised him plenty
# ::alignments 19-20|0.1.1.0.2 17-18|0.0 14-15|0 13-14|0.0.0 11-12|0.1 10-11|0.1.0 9-10|0.1.1 6-7|0.1.1.0.0 2-3|0.1.1.0 1-2|0.1.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:31.903
# ::node	0	and	14-15
# ::node	0.0	promise-01	17-18
# ::node	0.0.0	money	13-14
# ::node	0.1	need-01	11-12
# ::node	0.1.0	he	10-11
# ::node	0.1.1	thing	9-10
# ::node	0.1.1.0	want-01	2-3
# ::node	0.1.1.0.0	film	6-7
# ::node	0.1.1.0.1	still	1-2
# ::node	0.1.1.0.2	plenty	19-20
# ::root	0	and
# ::edge	and	op1	need-01	0	0.1	
# ::edge	need-01	ARG0	he	0.1	0.1.0	
# ::edge	need-01	ARG1	thing	0.1	0.1.1	
# ::edge	plenty	op1	want-01	0.1.1.0.2	0.1.1.0	
# ::edge	promise-01	ARG0	and	0.0	0	
# ::edge	promise-01	ARG1	money	0.0	0.0.0	
# ::edge	want-01	ARG1	film	0.1.1.0	0.1.1.0.0	
# ::edge	want-01	duration	thing	0.1.1.0	0.1.1	
# ::edge	want-01	mod	still	0.1.1.0	0.1.1.0.1	
(a / and 
      :ARG0-of (p2 / promise-01 
            :ARG1 (m / money)) 
      :op1 (n / need-01 
            :ARG0 (h / he) 
            :ARG1 (t / thing 
                  :duration-of (w / want-01 
                        :ARG1 (f / film) 
                        :mod (s / still) 
                        :op-of (p / plenty)))))

# ::snt his family from tyneside persuaded him to throw at the gateshead meeting rather than on the continent he has also promised the sponsor a world record
# ::tok his family from tyneside persuaded him to throw at the gateshead meeting rather than on the continent he has also promised the sponsor a world record
# ::alignments 25-26|0.1.0.0 24-25|0.1.0.0.0 22-23|0.1.1 20-21|0.1 19-20|0.1.2 17-18|0.1.0 16-17|0.1.3 11-12|0.2.0 7-8|0.2 4-5|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:32.009
# ::node	0	persuade-01	4-5
# ::node	0.0	family	1-2
# ::node	0.1	promise-01	20-21
# ::node	0.1.0	he	17-18
# ::node	0.1.0.0	record	25-26
# ::node	0.1.0.0.0	world	24-25
# ::node	0.1.1	sponsor-01	22-23
# ::node	0.1.2	also	19-20
# ::node	0.1.3	continent	16-17
# ::node	0.2	throw-01	7-8
# ::node	0.2.0	meet-03	11-12
# ::root	0	persuade-01
# ::edge	persuade-01	ARG0	family	0	0.0	
# ::edge	persuade-01	ARG1	promise-01	0	0.1	
# ::edge	persuade-01	ARG2	throw-01	0	0.2	
# ::edge	promise-01	ARG0	he	0.1	0.1.0	
# ::edge	promise-01	ARG1	sponsor-01	0.1	0.1.1	
# ::edge	promise-01	mod	also	0.1	0.1.2	
# ::edge	promise-01	time	continent	0.1	0.1.3	
# ::edge	record	mod	world	0.1.0.0	0.1.0.0.0	
# ::edge	record	poss	he	0.1.0.0	0.1.0	
# ::edge	throw-01	time	meet-03	0.2	0.2.0	
(p2 / persuade-01 
      :ARG0 (f / family) 
      :ARG1 (p / promise-01 
            :ARG0 (h / he 
                  :poss-of (r / record 
                        :mod (w / world))) 
            :ARG1 (s / sponsor-01) 
            :mod (a / also) 
            :time (c / continent)) 
      :ARG2 (t / throw-01 
            :time (m / meet-03)))

# ::snt local authority employers have promised to improve their 5
# ::tok local authority employers have promised to improve their 5
# ::alignments 8-9|0.1.0 6-7|0.1 4-5|0 1-2|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:32.028
# ::node	0	promise-01	4-5
# ::node	0.0	authority	1-2
# ::node	0.0.0	local	0-1
# ::node	0.1	improve-01	6-7
# ::node	0.1.0	5	8-9
# ::root	0	promise-01
# ::edge	authority	mod	local	0.0	0.0.0	
# ::edge	improve-01	ARG1	5	0.1	0.1.0	
# ::edge	promise-01	ARG1	authority	0	0.0	
# ::edge	promise-01	ARG2	improve-01	0	0.1	
(p / promise-01 
      :ARG1 (a / authority 
            :mod (l / local)) 
      :ARG2 (i / improve-01 
            :ARG1 5))

# ::snt more important still he secured an expansion of the building industry by promising that the scheme would operate steadily for fifteen years
# ::tok more important still he secured an expansion of the building industry by promising that the scheme would operate steadily for fifteen years
# ::alignments 21-22|0.0.0.0.0.0.0.0+0.0.0.0.0.0.0 18-19|0.1.2 17-18|0.1 15-16|0.1.1 12-13|0 10-11|0.0.0.0.0 9-10|0.0.0.0.0.0 6-7|0.0.0.0 4-5|0.0.0 3-4|0.0 2-3|0.0.0.1 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:32.158
# ::node	0	promise-01	12-13
# ::node	0.0	he	3-4
# ::node	0.0.0	secure-01	4-5
# ::node	0.0.0.0	expand-01	6-7
# ::node	0.0.0.0.0	industry	10-11
# ::node	0.0.0.0.0.0	build-01	9-10
# ::node	0.0.0.0.0.0.0	temporal-quantity	21-22
# ::node	0.0.0.0.0.0.0.0	year	21-22
# ::node	0.0.0.1	still	2-3
# ::node	0.1	operate-01	17-18
# ::node	0.1.0	important	1-2
# ::node	0.1.1	scheme	15-16
# ::node	0.1.2	steady	18-19
# ::root	0	promise-01
# ::edge	build-01	ARG0	temporal-quantity	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	expand-01	ARG1	industry	0.0.0.0	0.0.0.0.0	
# ::edge	industry	mod	build-01	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	operate-01	ARG0	important	0.1	0.1.0	
# ::edge	operate-01	ARG1	scheme	0.1	0.1.1	
# ::edge	operate-01	manner	steady	0.1	0.1.2	
# ::edge	promise-01	ARG0	he	0	0.0	
# ::edge	promise-01	ARG1	operate-01	0	0.1	
# ::edge	secure-01	ARG0	he	0.0.0	0.0	
# ::edge	secure-01	ARG1	expand-01	0.0.0	0.0.0.0	
# ::edge	secure-01	mod	still	0.0.0	0.0.0.1	
# ::edge	temporal-quantity	unit	year	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
(p / promise-01 
      :ARG0 (h / he 
            :ARG0-of (s3 / secure-01 
                  :ARG1 (e / expand-01 
                        :ARG1 (i / industry 
                              :mod (b / build-01 
                                    :ARG0 (t / temporal-quantity 
                                          :unit (y / year))))) 
                  :mod (s4 / still))) 
      :ARG1 (o / operate-01 
            :ARG0 (i2 / important) 
            :ARG1 (s2 / scheme) 
            :manner (s / steady)))

# ::snt but the threeweek drive of courage clubs championship activity which begins in england today promises to settle more issues
# ::tok but the threeweek drive of courage clubs championship activity which begins in england today promises to settle more issues
# ::alignments 18-19|0.0.0.0.0.0 16-17|0.0.0.0.0 14-15|0.0.0.0.0.1 13-14|0.0.0.0.0.1.1 12-13|0.0.0.0.0.1.0.0.0+0.0.0.0.0.1.0.0+0.0.0.0.0.1.0 10-11|0.0.0.0 8-9|0.0.0 6-7|0.0.1 5-6|0.0.1.0 3-4|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:32.308
# ::node	0	contrast-01	0-1
# ::node	0.0	drive-01	3-4
# ::node	0.0.0	activity	8-9
# ::node	0.0.0.0	begin-01	10-11
# ::node	0.0.0.0.0	settle-02	16-17
# ::node	0.0.0.0.0.0	issue	18-19
# ::node	0.0.0.0.0.1	promise-01	14-15
# ::node	0.0.0.0.0.1.0	country	12-13
# ::node	0.0.0.0.0.1.0.0	name	12-13
# ::node	0.0.0.0.0.1.0.0.0	"England"	12-13
# ::node	0.0.0.0.0.1.1	today	13-14
# ::node	0.0.1	club	6-7
# ::node	0.0.1.0	courage	5-6
# ::root	0	contrast-01
# ::edge	begin-01	ARG1	activity	0.0.0.0	0.0.0	
# ::edge	begin-01	purpose	settle-02	0.0.0.0	0.0.0.0.0	
# ::edge	club	mod	courage	0.0.1	0.0.1.0	
# ::edge	contrast-01	ARG1	drive-01	0	0.0	
# ::edge	country	name	name	0.0.0.0.0.1.0	0.0.0.0.0.1.0.0	
# ::edge	drive-01	ARG0	activity	0.0	0.0.0	
# ::edge	drive-01	ARG1	club	0.0	0.0.1	
# ::edge	name	op1	"England"	0.0.0.0.0.1.0.0	0.0.0.0.0.1.0.0.0	
# ::edge	promise-01	ARG0	country	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	promise-01	ARG1	settle-02	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	promise-01	time	today	0.0.0.0.0.1	0.0.0.0.0.1.1	
# ::edge	settle-02	ARG1	issue	0.0.0.0.0	0.0.0.0.0.0	
(c4 / contrast-01 
      :ARG1 (d / drive-01 
            :ARG0 (a / activity 
                  :ARG1-of (b / begin-01 
                        :purpose (s / settle-02 
                              :ARG1 (i / issue) 
                              :ARG1-of (p / promise-01 
                                    :ARG0 (c / country 
                                          :name (n / name 
                                                :op1 "England")) 
                                    :time (t / today))))) 
            :ARG1 (c2 / club 
                  :mod (c3 / courage))))

# ::snt king hussein earlier inaugurated parliament with an address to the elected lower house and the royally appointed senate in which he promised political and economic reforms and hinted that he might lift martial law imposed 22 years ago
# ::tok king hussein earlier inaugurated parliament with an address to the elected lower house and the royally appointed senate in which he promised political and economic reforms and hinted that he might lift martial law imposed 22 years ago
# ::alignments 36-37|0.0.0.1.0.1.1.0.0.0+0.0.0.1.0.1.1.0.0 35-36|0.0.0.1.0.1.1.0 34-35|0.1.0 33-34|0.1 32-33|0.1.1 31-32|0 29-30|0.0 27-28|0.0.0 26-27|0.0.0.1 25-26|0.0.0.1.0.0.0 24-25|0.0.0.1.0.0.0.0 23-24|0.0.0.1.0.0.0.1 22-23|0.0.0.1.1 21-22|0.0.0.1.0 20-21|0.0.0.1.0.0 17-18|0.0.0.1.0.2.0.0 16-17|0.0.0.1.0.2.0 13-14|0.0.0.1.0.2 11-13|0.0.0.0.0+0.0.0.0.1+0.0.0.0 10-11|0.0.0.1.0.1.1 7-8|0.0.0.1.0.1.3 4-5|0.0.0.1.0.1.2.0+0.0.0.1.0.1.2+0.0.0.1.0.1 3-4|0.0.0.1.0.1.0 2-3|0.0.0.1.0.1.4 0-1|0.0.0.1.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:33.633
# ::node	0	lift-01	31-32
# ::node	0.0	he	29-30
# ::node	0.0.0	hint-01	27-28
# ::node	0.0.0.0	name	11-13
# ::node	0.0.0.0.0	"Lower"	11-13
# ::node	0.0.0.0.1	"House"	11-13
# ::node	0.0.0.1	and	26-27
# ::node	0.0.0.1.0	promise-01	21-22
# ::node	0.0.0.1.0.0	he	20-21
# ::node	0.0.0.1.0.0.0	reform-01	25-26
# ::node	0.0.0.1.0.0.0.0	economy	24-25
# ::node	0.0.0.1.0.0.0.1	and	23-24
# ::node	0.0.0.1.0.1	government-organization	4-5
# ::node	0.0.0.1.0.1.0	inaugurate-02	3-4
# ::node	0.0.0.1.0.1.0.0	king	0-1
# ::node	0.0.0.1.0.1.1	elect-01	10-11
# ::node	0.0.0.1.0.1.1.0	22	35-36
# ::node	0.0.0.1.0.1.1.0.0	temporal-quantity	36-37
# ::node	0.0.0.1.0.1.1.0.0.0	year	36-37
# ::node	0.0.0.1.0.1.2	name	4-5
# ::node	0.0.0.1.0.1.2.0	"Parliament"	4-5
# ::node	0.0.0.1.0.1.3	address-02	7-8
# ::node	0.0.0.1.0.1.4	early	2-3
# ::node	0.0.0.1.0.2	and	13-14
# ::node	0.0.0.1.0.2.0	appoint-01	16-17
# ::node	0.0.0.1.0.2.0.0	senate	17-18
# ::node	0.0.0.1.1	politics	22-23
# ::node	0.1	law	33-34
# ::node	0.1.0	impose-01	34-35
# ::node	0.1.1	martial	32-33
# ::root	0	lift-01
# ::edge	and	op1	appoint-01	0.0.0.1.0.2	0.0.0.1.0.2.0	
# ::edge	and	op1	promise-01	0.0.0.1	0.0.0.1.0	
# ::edge	and	op1	reform-01	0.0.0.1.0.0.0.1	0.0.0.1.0.0.0	
# ::edge	and	op2	politics	0.0.0.1	0.0.0.1.1	
# ::edge	and	op2	promise-01	0.0.0.1.0.2	0.0.0.1.0	
# ::edge	and	op3	hint-01	0.0.0.1	0.0.0	
# ::edge	appoint-01	ARG1	senate	0.0.0.1.0.2.0	0.0.0.1.0.2.0.0	
# ::edge	elect-01	ARG0	22	0.0.0.1.0.1.1	0.0.0.1.0.1.1.0	
# ::edge	government-organization	mod	elect-01	0.0.0.1.0.1	0.0.0.1.0.1.1	
# ::edge	government-organization	name	name	0.0.0.1.0.1	0.0.0.1.0.1.2	
# ::edge	government-organization	time	address-02	0.0.0.1.0.1	0.0.0.1.0.1.3	
# ::edge	government-organization	time	early	0.0.0.1.0.1	0.0.0.1.0.1.4	
# ::edge	hint-01	ARG0	he	0.0.0	0.0	
# ::edge	hint-01	ARG1	name	0.0.0	0.0.0.0	
# ::edge	impose-01	ARG1	law	0.1.0	0.1	
# ::edge	inaugurate-02	ARG0	king	0.0.0.1.0.1.0	0.0.0.1.0.1.0.0	
# ::edge	inaugurate-02	ARG1	government-organization	0.0.0.1.0.1.0	0.0.0.1.0.1	
# ::edge	law	mod	martial	0.1	0.1.1	
# ::edge	lift-01	ARG0	he	0	0.0	
# ::edge	lift-01	ARG1	law	0	0.1	
# ::edge	name	op1	"Lower"	0.0.0.0	0.0.0.0.0	
# ::edge	name	op1	"Parliament"	0.0.0.1.0.1.2	0.0.0.1.0.1.2.0	
# ::edge	name	op2	"House"	0.0.0.0	0.0.0.0.1	
# ::edge	promise-01	ARG0	he	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	promise-01	ARG1	government-organization	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	reform-01	ARG0	he	0.0.0.1.0.0.0	0.0.0.1.0.0	
# ::edge	reform-01	ARG1	economy	0.0.0.1.0.0.0	0.0.0.1.0.0.0.0	
# ::edge	temporal-quantity	quant	22	0.0.0.1.0.1.1.0.0	0.0.0.1.0.1.1.0	
# ::edge	temporal-quantity	unit	year	0.0.0.1.0.1.1.0.0	0.0.0.1.0.1.1.0.0.0	
(l2 / lift-01 
      :ARG0 (h / he 
            :ARG0-of (h2 / hint-01 
                  :ARG1 (n / name 
                        :op1 "Lower" 
                        :op2 "House") 
                  :op-of (a / and 
                        :op1 (p2 / promise-01 
                              :ARG0 (h3 / he 
                                    :ARG0-of (r / reform-01 
                                          :ARG1 (e / economy) 
                                          :op-of (a2 / and))) 
                              :ARG1 (g / government-organization 
                                    :ARG1-of (i2 / inaugurate-02 
                                          :ARG0 (k / king)) 
                                    :mod (e2 / elect-01 
                                          :ARG0 (2 / 22 
                                                :quant-of (t / temporal-quantity 
                                                      :unit (y / year)))) 
                                    :name (n2 / name 
                                          :op1 "Parliament") 
                                    :time (a5 / address-02) 
                                    :time (e3 / early)) 
                              :op-of (a4 / and 
                                    :op1 (a3 / appoint-01 
                                          :ARG1 (s / senate)))) 
                        :op2 (p / politics)))) 
      :ARG1 (l / law 
            :ARG1-of (i / impose-01) 
            :mod (m / martial)))

# ::snt he promised to come and
# ::tok he promised to come and
# ::alignments 4-5|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:33.639
# ::node	0	promise-01	1-2
# ::node	0.0	he	0-1
# ::node	0.1	and	4-5
# ::root	0	promise-01
# ::edge	promise-01	ARG0	he	0	0.0	
# ::edge	promise-01	ARG1	and	0	0.1	
(p / promise-01 
      :ARG0 (h / he) 
      :ARG1 (a / and))

# ::snt will the radical review of natos doctrines and strategies which it promises aimed at adjusting to the new political situation in europe produce real changes such as abandonment of the first strike doctrine and of the strategy of flexible response
# ::tok will the radical review of natos doctrines and strategies which it promises aimed at adjusting to the new political situation in europe produce real changes such as abandonment of the first strike doctrine and of the strategy of flexible response
# ::alignments 39-40|0 38-39|0.2 36-37|0.1 33-34|0.0.0 32-33|0.0.0.1.0 31-32|0.0.0.1.0.0 27-28|0.0.0.1 25-26|0.0.0.0.0.0 24-25|0.0.0.0.0 23-24|0.0.0.0.0.1 22-23|0.0.0.0 21-22|0.0.2.0+0.0.2+0.0 19-20|0.0.1 18-19|0.0.1.1 17-18|0.0.1.2 14-15|0.0.1.0 12-13|0.0.1.0.0 11-12|0.0.1.0.0.0 10-11|0.0.1.0.0.0.0 8-9|0.0.1.0.0.0.1.1 7-8|0.0.1.0.0.0.1 3-4|0.0.1.0.0.0.1.0 2-3|0.0.1.0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:34.883
# ::node	0	respond-01	39-40
# ::node	0.0	continent	21-22
# ::node	0.0.0	and	33-34
# ::node	0.0.0.0	produce-01	22-23
# ::node	0.0.0.0.0	change-01	24-25
# ::node	0.0.0.0.0.0	such	25-26
# ::node	0.0.0.0.0.1	real	23-24
# ::node	0.0.0.1	abandon-03	27-28
# ::node	0.0.0.1.0	doctrine	32-33
# ::node	0.0.0.1.0.0	strike-01	31-32
# ::node	0.0.1	situation	19-20
# ::node	0.0.1.0	adjust-01	14-15
# ::node	0.0.1.0.0	aim-02	12-13
# ::node	0.0.1.0.0.0	promise-01	11-12
# ::node	0.0.1.0.0.0.0	it	10-11
# ::node	0.0.1.0.0.0.1	and	7-8
# ::node	0.0.1.0.0.0.1.0	review-01	3-4
# ::node	0.0.1.0.0.0.1.0.0	radical	2-3
# ::node	0.0.1.0.0.0.1.1	strategy	8-9
# ::node	0.0.1.1	politics	18-19
# ::node	0.0.1.2	new	17-18
# ::node	0.0.2	name	21-22
# ::node	0.0.2.0	"Europe"	21-22
# ::node	0.1	strategy	36-37
# ::node	0.2	flexible	38-39
# ::root	0	respond-01
# ::edge	abandon-03	ARG1	doctrine	0.0.0.1	0.0.0.1.0	
# ::edge	adjust-01	ARG1	situation	0.0.1.0	0.0.1	
# ::edge	aim-02	ARG2	adjust-01	0.0.1.0.0	0.0.1.0	
# ::edge	and	domain	continent	0.0.0	0.0	
# ::edge	and	op1	produce-01	0.0.0	0.0.0.0	
# ::edge	and	op1	strategy	0.0.1.0.0.0.1	0.0.1.0.0.0.1.1	
# ::edge	and	op2	abandon-03	0.0.0	0.0.0.1	
# ::edge	change-01	ARG1	such	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	change-01	mod	real	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	continent	name	name	0.0	0.0.2	
# ::edge	name	op1	"Europe"	0.0.2	0.0.2.0	
# ::edge	produce-01	ARG1	change-01	0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	ARG0	it	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	promise-01	ARG1	aim-02	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	promise-01	ARG2	and	0.0.1.0.0.0	0.0.1.0.0.0.1	
# ::edge	respond-01	ARG0	continent	0	0.0	
# ::edge	respond-01	ARG1	strategy	0	0.1	
# ::edge	respond-01	mod	flexible	0	0.2	
# ::edge	review-01	ARG1	and	0.0.1.0.0.0.1.0	0.0.1.0.0.0.1	
# ::edge	review-01	mod	radical	0.0.1.0.0.0.1.0	0.0.1.0.0.0.1.0.0	
# ::edge	situation	location	continent	0.0.1	0.0	
# ::edge	situation	mod	new	0.0.1	0.0.1.2	
# ::edge	situation	mod	politics	0.0.1	0.0.1.1	
# ::edge	strike-01	ARG0	doctrine	0.0.0.1.0.0	0.0.0.1.0	
(r / respond-01 
      :ARG0 (c2 / continent 
            :domain-of (a / and 
                  :op1 (p / produce-01 
                        :ARG1 (c / change-01 
                              :ARG1 (s3 / such) 
                              :mod (r2 / real))) 
                  :op2 (a2 / abandon-03 
                        :ARG1 (d / doctrine 
                              :ARG0-of (s2 / strike-01)))) 
            :location-of (s4 / situation 
                  :ARG1-of (a3 / adjust-01 
                        :ARG2-of (a4 / aim-02 
                              :ARG1-of (p3 / promise-01 
                                    :ARG0 (i / it) 
                                    :ARG2 (a5 / and 
                                          :ARG1-of (r3 / review-01 
                                                :mod (r4 / radical)) 
                                          :op1 (s5 / strategy))))) 
                  :mod (p2 / politics) 
                  :mod (n2 / new)) 
            :name (n / name 
                  :op1 "Europe")) 
      :ARG1 (s / strategy) 
      :mod (f / flexible))

# ::snt he has shown as he promised he would at the start of the student unrest that china would not follow eastern europe on the path to democratic change
# ::tok he has shown as he promised he would at the start of the student unrest that china would not follow eastern europe on the path to democratic change
# ::alignments 27-28|0.1.1.1.1.0 26-27|0.1.1.1.1.0.0 24-25|0.1.1.1.2 21-22|0.1.1.1.1.2.0+0.1.1.1.1.2+0.1.1.1.1 20-21|0.1.1.1.1.1 19-20|0.1.1.1 16-17|0.1.1.1.0.0.0+0.1.1.1.0.0+0.1.1.1.0 14-15|0.1.1.2 13-14|0.1.1.2.0.0+0.1.1.2.0 10-11|0.1.1 6-7|0.1.1.0 5-6|0.1 4-5|0.1.0 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:35.848
# ::node	0	show-01	2-3
# ::node	0.0	he	0-1
# ::node	0.1	promise-01	5-6
# ::node	0.1.0	he	4-5
# ::node	0.1.1	start-01	10-11
# ::node	0.1.1.0	he	6-7
# ::node	0.1.1.1	follow-02	19-20
# ::node	0.1.1.1.0	country	16-17
# ::node	0.1.1.1.0.0	name	16-17
# ::node	0.1.1.1.0.0.0	"China"	16-17
# ::node	0.1.1.1.1	continent	21-22
# ::node	0.1.1.1.1.0	change-01	27-28
# ::node	0.1.1.1.1.0.0	democracy	26-27
# ::node	0.1.1.1.1.1	east	20-21
# ::node	0.1.1.1.1.2	name	21-22
# ::node	0.1.1.1.1.2.0	"Europe"	21-22
# ::node	0.1.1.1.2	path	24-25
# ::node	0.1.1.2	unrest	14-15
# ::node	0.1.1.2.0	person	13-14
# ::node	0.1.1.2.0.0	study-01	13-14
# ::root	0	show-01
# ::edge	change-01	ARG1	continent	0.1.1.1.1.0	0.1.1.1.1	
# ::edge	change-01	mod	democracy	0.1.1.1.1.0	0.1.1.1.1.0.0	
# ::edge	continent	mod	east	0.1.1.1.1	0.1.1.1.1.1	
# ::edge	continent	name	name	0.1.1.1.1	0.1.1.1.1.2	
# ::edge	country	name	name	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	follow-02	ARG0	country	0.1.1.1	0.1.1.1.0	
# ::edge	follow-02	ARG1	continent	0.1.1.1	0.1.1.1.1	
# ::edge	follow-02	manner	path	0.1.1.1	0.1.1.1.2	
# ::edge	name	op1	"China"	0.1.1.1.0.0	0.1.1.1.0.0.0	
# ::edge	name	op1	"Europe"	0.1.1.1.1.2	0.1.1.1.1.2.0	
# ::edge	promise-01	ARG0	he	0.1	0.1.0	
# ::edge	promise-01	ARG1	start-01	0.1	0.1.1	
# ::edge	show-01	ARG0	he	0	0.0	
# ::edge	show-01	ARG1	promise-01	0	0.1	
# ::edge	start-01	ARG0	he	0.1.1	0.1.1.0	
# ::edge	start-01	ARG1	follow-02	0.1.1	0.1.1.1	
# ::edge	start-01	ARG2	unrest	0.1.1	0.1.1.2	
# ::edge	study-01	ARG0	person	0.1.1.2.0.0	0.1.1.2.0	
# ::edge	unrest	mod	person	0.1.1.2	0.1.1.2.0	
(s3 / show-01 
      :ARG0 (h3 / he) 
      :ARG1 (p3 / promise-01 
            :ARG0 (h2 / he) 
            :ARG1 (s2 / start-01 
                  :ARG0 (h / he) 
                  :ARG1 (f / follow-02 
                        :ARG0 (c3 / country 
                              :name (n2 / name 
                                    :op1 "China")) 
                        :ARG1 (c2 / continent 
                              :ARG1-of (c / change-01 
                                    :mod (d / democracy)) 
                              :mod (e / east) 
                              :name (n / name 
                                    :op1 "Europe")) 
                        :manner (p / path)) 
                  :ARG2 (u / unrest 
                        :mod (p2 / person 
                              :ARG0-of (s / study-01))))))

# ::snt who else 64 but ronald reagan would have the folie de grandeur to promise to invite the steel and oil industries to rewrite the environmental protection agencys regulations
# ::tok who else 64 but ronald reagan would have the folie de grandeur to promise to invite the steel and oil industries to rewrite the environmental protection agencys regulations
# ::alignments 27-28|0.2.0.0.0.0.0 25-26|0.2.0.0.0.0.0.0 24-25|0.2.0.0.0.0.0.0.0 20-21|0.2.0.0.0.0 19-20|0.2.0.0.0.2 18-19|0.2.0.0.0 17-18|0.2.0.0.0.1 15-16|0.2.0 13-14|0.2.0.0 4-6|0.2.1.0+0.2.1.1+0.2.1+0.2 3-4|0 2-3|0.1 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:36.017
# ::node	0	contrast-01	3-4
# ::node	0.0	else	1-2
# ::node	0.1	64	2-3
# ::node	0.2	person	4-6
# ::node	0.2.0	invite-01	15-16
# ::node	0.2.0.0	promise-01	13-14
# ::node	0.2.0.0.0	and	18-19
# ::node	0.2.0.0.0.0	industry	20-21
# ::node	0.2.0.0.0.0.0	regulate-01	27-28
# ::node	0.2.0.0.0.0.0.0	protect-01	25-26
# ::node	0.2.0.0.0.0.0.0.0	environment	24-25
# ::node	0.2.0.0.0.1	steel	17-18
# ::node	0.2.0.0.0.2	oil	19-20
# ::node	0.2.1	name	4-6
# ::node	0.2.1.0	"reagan"	4-6
# ::node	0.2.1.1	"ronald"	4-6
# ::root	0	contrast-01
# ::edge	and	consist	industry	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	and	op1	steel	0.2.0.0.0	0.2.0.0.0.1	
# ::edge	and	op2	oil	0.2.0.0.0	0.2.0.0.0.2	
# ::edge	contrast-01	ARG0	else	0	0.0	
# ::edge	contrast-01	ARG1	64	0	0.1	
# ::edge	contrast-01	ARG2	person	0	0.2	
# ::edge	invite-01	ARG1	person	0.2.0	0.2	
# ::edge	name	op1	"reagan"	0.2.1	0.2.1.0	
# ::edge	name	op2	"ronald"	0.2.1	0.2.1.1	
# ::edge	person	name	name	0.2	0.2.1	
# ::edge	promise-01	ARG1	and	0.2.0.0	0.2.0.0.0	
# ::edge	promise-01	ARG2	invite-01	0.2.0.0	0.2.0	
# ::edge	protect-01	ARG0	regulate-01	0.2.0.0.0.0.0.0	0.2.0.0.0.0.0	
# ::edge	protect-01	ARG1	environment	0.2.0.0.0.0.0.0	0.2.0.0.0.0.0.0.0	
# ::edge	regulate-01	ARG1	industry	0.2.0.0.0.0.0	0.2.0.0.0.0	
(c / contrast-01 
      :ARG0 (e2 / else) 
      :ARG1 64 
      :ARG2 (p3 / person 
            :ARG1-of (i2 / invite-01 
                  :ARG2-of (p2 / promise-01 
                        :ARG1 (a / and 
                              :consist (i / industry 
                                    :ARG1-of (r / regulate-01 
                                          :ARG0-of (p / protect-01 
                                                :ARG1 (e / environment)))) 
                              :op1 (s / steel) 
                              :op2 (o / oil)))) 
            :name (n / name 
                  :op1 "reagan" 
                  :op2 "ronald")))

# ::snt i cannot promise to make you into a world authority on ingredients but i do hope to share my passion for good food with you and to inspire you to try a different type of tea or a new way of serving pasta
# ::tok i cannot promise to make you into a world authority on ingredients but i do hope to share my passion for good food with you and to inspire you to try a different type of tea or a new way of serving pasta
# ::alignments 41-42|0.1.1.1.0.0 39-40|0.1.1.1.0 38-39|0.1.1.1.0.1 36-37|0.1.1.1 35-36|0.1.2.1 33-34|0.1.2 32-33|0.1.2.0 30-31|0.1.1 28-29|0.1.1.0 27-28|0.1 25-26|0 24-25|0.1.0 22-23|0.0.2 21-22|0.0.2.0 19-20|0.0.0 17-18|0.0 15-16|0.0.1 13-14|0.0.1.0 12-13|0.0.1.1 11-12|0.0.1.1.0.1 9-10|0.0.1.1.0 8-9|0.0.1.1.0.0 5-6|0.0.1.1.1.1 2-3|0.0.1.1.1 0-1|0.0.1.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:37.468
# ::node	0	and	25-26
# ::node	0.0	share-01	17-18
# ::node	0.0.0	passion	19-20
# ::node	0.0.1	hope-01	15-16
# ::node	0.0.1.0	i	13-14
# ::node	0.0.1.1	contrast-01	12-13
# ::node	0.0.1.1.0	authority	9-10
# ::node	0.0.1.1.0.0	world	8-9
# ::node	0.0.1.1.0.1	ingredient	11-12
# ::node	0.0.1.1.1	promise-01	2-3
# ::node	0.0.1.1.1.0	i	0-1
# ::node	0.0.1.1.1.1	you	5-6
# ::node	0.0.2	food	22-23
# ::node	0.0.2.0	good	21-22
# ::node	0.1	inspire-01	27-28
# ::node	0.1.0	you	24-25
# ::node	0.1.1	try-01	30-31
# ::node	0.1.1.0	you	28-29
# ::node	0.1.1.1	or	36-37
# ::node	0.1.1.1.0	way	39-40
# ::node	0.1.1.1.0.0	serve-01	41-42
# ::node	0.1.1.1.0.1	new	38-39
# ::node	0.1.2	type	33-34
# ::node	0.1.2.0	differ-02	32-33
# ::node	0.1.2.1	tea	35-36
# ::root	0	and
# ::edge	and	op1	inspire-01	0	0.1	
# ::edge	authority	mod	world	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	authority	poss	ingredient	0.0.1.1.0	0.0.1.1.0.1	
# ::edge	contrast-01	ARG1	authority	0.0.1.1	0.0.1.1.0	
# ::edge	contrast-01	ARG2	hope-01	0.0.1.1	0.0.1	
# ::edge	differ-02	ARG1	type	0.1.2.0	0.1.2	
# ::edge	food	mod	good	0.0.2	0.0.2.0	
# ::edge	hope-01	ARG0	i	0.0.1	0.0.1.0	
# ::edge	hope-01	ARG1	share-01	0.0.1	0.0	
# ::edge	inspire-01	ARG0	you	0.1	0.1.0	
# ::edge	inspire-01	ARG1	try-01	0.1	0.1.1	
# ::edge	inspire-01	ARG2	type	0.1	0.1.2	
# ::edge	or	op1	way	0.1.1.1	0.1.1.1.0	
# ::edge	promise-01	ARG0	i	0.0.1.1.1	0.0.1.1.1.0	
# ::edge	promise-01	ARG1	contrast-01	0.0.1.1.1	0.0.1.1	
# ::edge	promise-01	ARG2	you	0.0.1.1.1	0.0.1.1.1.1	
# ::edge	serve-01	instrument	way	0.1.1.1.0.0	0.1.1.1.0	
# ::edge	share-01	ARG0	and	0.0	0	
# ::edge	share-01	ARG1	passion	0.0	0.0.0	
# ::edge	share-01	ARG2	food	0.0	0.0.2	
# ::edge	tea	mod	type	0.1.2.1	0.1.2	
# ::edge	try-01	ARG0	you	0.1.1	0.1.1.0	
# ::edge	try-01	ARG1	or	0.1.1	0.1.1.1	
# ::edge	way	mod	new	0.1.1.1.0	0.1.1.1.0.1	
(a / and 
      :ARG0-of (s2 / share-01 
            :ARG1 (p / passion) 
            :ARG1-of (h / hope-01 
                  :ARG0 (i2 / i) 
                  :ARG2-of (c / contrast-01 
                        :ARG1 (a2 / authority 
                              :mod (w2 / world) 
                              :poss (i3 / ingredient)) 
                        :ARG1-of (p2 / promise-01 
                              :ARG0 (i4 / i) 
                              :ARG2 (y3 / you)))) 
            :ARG2 (f / food 
                  :mod (g / good))) 
      :op1 (i / inspire-01 
            :ARG0 (y2 / you) 
            :ARG1 (t3 / try-01 
                  :ARG0 (y / you) 
                  :ARG1 (o / or 
                        :op1 (w / way 
                              :instrument-of (s / serve-01) 
                              :mod (n / new)))) 
            :ARG2 (t2 / type 
                  :ARG1-of (d / differ-02) 
                  :mod-of (t / tea))))

# ::snt if the market in its superior wisdom kindly provides a fall in the exchange rate why does mr major not just relax and enjoy it  after all it promises to boost output and help close the current account deficit which he is believed to take more seriously than did his predecessor
# ::tok if the market in its superior wisdom kindly provides a fall in the exchange rate why does mr major not just relax and enjoy it after all it promises to boost output and help close the current account deficit which he is believed to take more seriously than did his predecessor
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:37.470
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt mercury has already been promised a stake in the latest portable telephone round leaving gecplessey to compete for up to two other licences on offer
# ::tok mercury has already been promised a stake in the latest portable telephone round leaving gecplessey to compete for up to two other licences on offer
# ::alignments 24-25|0 21-22|0.0.0.1.0.1 20-21|0.0.0.1.0.0 16-17|0.0.0.1.0.2.0 13-14|0.0.0.1.0.2.0.0 12-13|0.0.0.1.0.2 11-12|0.0.0.1.0 10-11|0.0.0.1.0.2.1 9-10|0.0.0.1.0.2.2.0+0.0.0.1.0.2.2 6-7|0.0.0.1 4-5|0.0.0 2-3|0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:37.782
# ::node	0	offer-01	24-25
# ::node	0.0	already	2-3
# ::node	0.0.0	promise-01	4-5
# ::node	0.0.0.0	mercury	0-1
# ::node	0.0.0.1	stake	6-7
# ::node	0.0.0.1.0	telephone-01	11-12
# ::node	0.0.0.1.0.0	2	20-21
# ::node	0.0.0.1.0.1	other	21-22
# ::node	0.0.0.1.0.2	round	12-13
# ::node	0.0.0.1.0.2.0	compete-01	16-17
# ::node	0.0.0.1.0.2.0.0	leave-01	13-14
# ::node	0.0.0.1.0.2.1	portable	10-11
# ::node	0.0.0.1.0.2.2	late	9-10
# ::node	0.0.0.1.0.2.2.0	most	9-10
# ::root	0	offer-01
# ::edge	compete-01	ARG1	round	0.0.0.1.0.2.0	0.0.0.1.0.2	
# ::edge	late	degree	most	0.0.0.1.0.2.2	0.0.0.1.0.2.2.0	
# ::edge	leave-01	ARG1	compete-01	0.0.0.1.0.2.0.0	0.0.0.1.0.2.0	
# ::edge	offer-01	ARG1	already	0	0.0	
# ::edge	promise-01	ARG1	mercury	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG2	stake	0.0.0	0.0.0.1	
# ::edge	promise-01	time	already	0.0.0	0.0	
# ::edge	round	mod	portable	0.0.0.1.0.2	0.0.0.1.0.2.1	
# ::edge	round	mod	telephone-01	0.0.0.1.0.2	0.0.0.1.0	
# ::edge	round	time	late	0.0.0.1.0.2	0.0.0.1.0.2.2	
# ::edge	stake	op1	telephone-01	0.0.0.1	0.0.0.1.0	
# ::edge	telephone-01	ARG0	2	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	telephone-01	ARG1	other	0.0.0.1.0	0.0.0.1.0.1	
(o / offer-01 
      :ARG1 (a / already 
            :time-of (p2 / promise-01 
                  :ARG1 (m2 / mercury) 
                  :ARG2 (s / stake 
                        :op1 (t / telephone-01 
                              :ARG0 2 
                              :ARG1 (o2 / other) 
                              :mod-of (r / round 
                                    :ARG1-of (c / compete-01 
                                          :ARG1-of (l / leave-01)) 
                                    :mod (p / portable) 
                                    :time (l2 / late 
                                          :degree (m / most))))))))

# ::snt   we recognise the importance of the sport and i can promise you it is a very faithful connection between the north and south
# ::tok we recognise the importance of the sport and i can promise you it is a very faithful connection between the north and south
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:37.783
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt mr boston discovering that his literary invention has been borrowed has demanded and been promised an apology
# ::tok mr boston discovering that his literary invention has been borrowed has demanded and been promised an apology
# ::alignments 16-17|0.0.0.0.0 14-15|0.0.0.0 12-13|0.0.0.0.1 11-12|0.0.0.0.1.0 9-10|0.0.0 6-7|0.0 5-6|0 2-3|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:37.815
# ::node	0	literary	5-6
# ::node	0.0	invent-01	6-7
# ::node	0.0.0	borrow-01	9-10
# ::node	0.0.0.0	promise-01	14-15
# ::node	0.0.0.0.0	apologize-01	16-17
# ::node	0.0.0.0.1	and	12-13
# ::node	0.0.0.0.1.0	demand-01	11-12
# ::node	0.0.1	discover-01	2-3
# ::root	0	literary
(l / literary 
      :mod-of (i / invent-01 
            :ARG1-of (b / borrow-01 
                  :ARG2 (p / promise-01 
                        :ARG1 (a / apologize-01) 
                        :op-of (a2 / and 
                              :op1 (d / demand-01)))) 
            :ARG1-of (d2 / discover-01)))

# ::snt like a good commander he said he was only concerned for his men and very grateful that the americans have promised there will be no reprisals against the troops
# ::tok like a good commander he said he was only concerned for his men and very grateful that the americans have promised there will be no reprisals against the troops
# ::alignments 28-29|0.1.3.0.1.1 25-26|0.1.3.0.1 24-25|0.1.3.0.1.0 20-21|0.1.3.0 18-19|0.1.3.0.0.0.0.0+0.1.3.0.0.0.0+0.1.3.0.0.0+0.1.3.0.0 14-15|0.1.1.0.0 13-14|0.1.3 12-13|0.1.0 9-10|0.1 8-9|0.1.2 6-7|0.1.1 5-6|0 4-5|0.0 3-4|0.1.1.0.1+0.1.1.0 2-3|0.1.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:38.573
# ::node	0	say-01	5-6
# ::node	0.0	he	4-5
# ::node	0.1	concern-01	9-10
# ::node	0.1.0	man	12-13
# ::node	0.1.1	he	6-7
# ::node	0.1.1.0	have-org-role-91	3-4
# ::node	0.1.1.0.0	very	14-15
# ::node	0.1.1.0.1	commander	3-4
# ::node	0.1.1.0.1.0	good	2-3
# ::node	0.1.2	only	8-9
# ::node	0.1.3	and	13-14
# ::node	0.1.3.0	promise-01	20-21
# ::node	0.1.3.0.0	person	18-19
# ::node	0.1.3.0.0.0	country	18-19
# ::node	0.1.3.0.0.0.0	name	18-19
# ::node	0.1.3.0.0.0.0.0	"America"	18-19
# ::node	0.1.3.0.1	reprisal	25-26
# ::node	0.1.3.0.1.0	-	24-25
# ::node	0.1.3.0.1.1	troop	28-29
# ::root	0	say-01
# ::edge	and	op1	concern-01	0.1.3	0.1	
# ::edge	and	op2	promise-01	0.1.3	0.1.3.0	
# ::edge	commander	mod	good	0.1.1.0.1	0.1.1.0.1.0	
# ::edge	concern-01	ARG0	man	0.1	0.1.0	
# ::edge	concern-01	ARG1	he	0.1	0.1.1	
# ::edge	concern-01	mod	only	0.1	0.1.2	
# ::edge	country	name	name	0.1.3.0.0.0	0.1.3.0.0.0.0	
# ::edge	have-org-role-91	ARG0	he	0.1.1.0	0.1.1	
# ::edge	have-org-role-91	ARG1	very	0.1.1.0	0.1.1.0.0	
# ::edge	have-org-role-91	ARG2	commander	0.1.1.0	0.1.1.0.1	
# ::edge	name	op1	"America"	0.1.3.0.0.0.0	0.1.3.0.0.0.0.0	
# ::edge	person	mod	country	0.1.3.0.0	0.1.3.0.0.0	
# ::edge	promise-01	ARG0	person	0.1.3.0	0.1.3.0.0	
# ::edge	promise-01	ARG1	reprisal	0.1.3.0	0.1.3.0.1	
# ::edge	reprisal	polarity	-	0.1.3.0.1	0.1.3.0.1.0	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	concern-01	0	0.1	
# ::edge	troop	subevent	reprisal	0.1.3.0.1.1	0.1.3.0.1	
(s / say-01 
      :ARG0 (h2 / he) 
      :ARG1 (c2 / concern-01 
            :ARG0 (m / man) 
            :ARG1 (h / he 
                  :ARG0-of (h3 / have-org-role-91 
                        :ARG1 (v / very) 
                        :ARG2 (c3 / commander 
                              :mod (g / good)))) 
            :mod (o / only) 
            :op-of (a / and 
                  :op1 (p / promise-01 
                        :ARG0 (p2 / person 
                              :mod (c / country 
                                    :name (n / name 
                                          :op1 "America"))) 
                        :ARG1 (r / reprisal 
                              :polarity (- / -) 
                              :subevent-of (t / troop))))))

# ::snt the king wrote to his bridetobe i promise to take you as my only lover banishing from my mind and heart all others and serving only you
# ::tok the king wrote to his bridetobe i promise to take you as my only lover banishing from my mind and heart all others and serving only you
# ::alignments 26-27|0.2.1 25-26|0.2.1.0 24-25|0.2 23-24|0.2.2 22-23|0.2.0 21-22|0.2.0.0 20-21|0.1 19-20|0 18-19|0.0 13-14|0.0.1 10-11|0.0.0.0.0.0.0 7-8|0.0.0.0 6-7|0.0.0 2-3|0.0.0.0.0.0 1-2|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:38.762
# ::node	0	and	19-20
# ::node	0.0	mind	18-19
# ::node	0.0.0	i	6-7
# ::node	0.0.0.0	promise-01	7-8
# ::node	0.0.0.0.0	king	1-2
# ::node	0.0.0.0.0.0	write-01	2-3
# ::node	0.0.0.0.0.0.0	you	10-11
# ::node	0.0.1	only	13-14
# ::node	0.1	heart	20-21
# ::node	0.2	serve-01	24-25
# ::node	0.2.0	other	22-23
# ::node	0.2.0.0	all	21-22
# ::node	0.2.1	you	26-27
# ::node	0.2.1.0	only	25-26
# ::node	0.2.2	and	23-24
# ::root	0	and
# ::edge	and	op1	mind	0	0.0	
# ::edge	and	op1	serve-01	0.2.2	0.2	
# ::edge	and	op2	heart	0	0.1	
# ::edge	and	op3	serve-01	0	0.2	
# ::edge	mind	poss	i	0.0	0.0.0	
# ::edge	mind	poss	only	0.0	0.0.1	
# ::edge	other	quant	all	0.2.0	0.2.0.0	
# ::edge	promise-01	ARG0	king	0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	mod	i	0.0.0.0	0.0.0	
# ::edge	serve-01	ARG0	other	0.2	0.2.0	
# ::edge	serve-01	ARG1	you	0.2	0.2.1	
# ::edge	write-01	ARG0	you	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	write-01	ARG1	king	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	you	mod	only	0.2.1	0.2.1.0	
(a3 / and 
      :op1 (m / mind 
            :poss (i / i 
                  :mod-of (p / promise-01 
                        :ARG0 (k / king 
                              :ARG1-of (w / write-01 
                                    :ARG0 (y2 / you))))) 
            :poss (o3 / only)) 
      :op2 (h / heart) 
      :op3 (s / serve-01 
            :ARG0 (o2 / other 
                  :quant (a2 / all)) 
            :ARG1 (y / you 
                  :mod (o / only)) 
            :op-of (a / and)))

# ::snt but hardly had he promised a derisory 100 lei  7 wage increase across the board than members of the crowd began shouting down with ceausescu
# ::tok but hardly had he promised a derisory 100 lei 7 wage increase across the board than members of the crowd began shouting down with ceausescu
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:38.762
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt we promised coventry well have a look at the stretch again before the zander spawn in april
# ::tok we promised coventry well have a look at the stretch again before the zander spawn in april
# ::alignments 16-17|0.2.0+0.2 11-12|0.2.1 10-11|0.2.1.0 9-10|0.2.1.1+0.2.1.1.0 3-4|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:38.848
# ::node	0	promise-01	1-2
# ::node	0.0	we	0-1
# ::node	0.1	well	3-4
# ::node	0.2	date-entity	16-17
# ::node	0.2.0	4	16-17
# ::node	0.2.1	before	11-12
# ::node	0.2.1.0	again	10-11
# ::node	0.2.1.1	stretch-01	9-10
# ::node	0.2.1.1.0	thing	9-10
# ::root	0	promise-01
# ::edge	again	op1	before	0.2.1.0	0.2.1	
# ::edge	before	op1	date-entity	0.2.1	0.2	
# ::edge	date-entity	month	4	0.2	0.2.0	
# ::edge	promise-01	ARG0	we	0	0.0	
# ::edge	promise-01	ARG1	well	0	0.1	
# ::edge	promise-01	ARG2	date-entity	0	0.2	
# ::edge	stretch-01	ARG1	thing	0.2.1.1	0.2.1.1.0	
# ::edge	stretch-01	time	before	0.2.1.1	0.2.1	
(p / promise-01 
      :ARG0 (w2 / we) 
      :ARG1 (w / well) 
      :ARG2 (d / date-entity 
            :month 4 
            :op-of (b / before 
                  :op-of (a / again) 
                  :time-of (s / stretch-01 
                        :ARG1 (t / thing)))))

# ::snt the organisers had already begun to promise a strong local bill topped by the two biggest attractions in manchester at the time the chameleons and of course the smiths
# ::tok the organisers had already begun to promise a strong local bill topped by the two biggest attractions in manchester at the time the chameleons and of course the smiths
# ::alignments 24-25|0.0.2 21-22|0.0.0.0.1.0.0 18-19|0.0.2.0.0.0+0.0.2.0.0+0.0.2.0 16-17|0.0.0.0.1.0+0.0.0.0.1 15-16|0.0.0.0.0+0.0.0.0 14-15|0.0.0.0.1.1 11-12|0.0.0 10-11|0.0.1 9-10|0.0.1.1 8-9|0.0.1.0 6-7|0.0 4-5|0 3-4|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:39.192
# ::node	0	begin-01	4-5
# ::node	0.0	promise-01	6-7
# ::node	0.0.0	top-02	11-12
# ::node	0.0.0.0	big	15-16
# ::node	0.0.0.0.0	most	15-16
# ::node	0.0.0.0.1	thing	16-17
# ::node	0.0.0.0.1.0	attract-01	16-17
# ::node	0.0.0.0.1.0.0	time	21-22
# ::node	0.0.0.0.1.1	2	14-15
# ::node	0.0.1	bill	10-11
# ::node	0.0.1.0	strong	8-9
# ::node	0.0.1.1	local	9-10
# ::node	0.0.2	and	24-25
# ::node	0.0.2.0	city	18-19
# ::node	0.0.2.0.0	name	18-19
# ::node	0.0.2.0.0.0	"Manchester"	18-19
# ::node	0.1	already	3-4
# ::root	0	begin-01
# ::edge	and	op1	promise-01	0.0.2	0.0	
# ::edge	and	op2	city	0.0.2	0.0.2.0	
# ::edge	attract-01	ARG0	thing	0.0.0.0.1.0	0.0.0.0.1	
# ::edge	attract-01	ARG1	time	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	begin-01	ARG1	promise-01	0	0.0	
# ::edge	begin-01	time	already	0	0.1	
# ::edge	big	degree	most	0.0.0.0	0.0.0.0.0	
# ::edge	bill	mod	local	0.0.1	0.0.1.1	
# ::edge	bill	mod	strong	0.0.1	0.0.1.0	
# ::edge	city	name	name	0.0.2.0	0.0.2.0.0	
# ::edge	name	op1	"Manchester"	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	promise-01	ARG1	top-02	0.0	0.0.0	
# ::edge	promise-01	ARG2	bill	0.0	0.0.1	
# ::edge	thing	mod	big	0.0.0.0.1	0.0.0.0	
# ::edge	thing	quant	2	0.0.0.0.1	0.0.0.0.1.1	
# ::edge	top-02	ARG1	big	0.0.0	0.0.0.0	
(b3 / begin-01 
      :ARG1 (p / promise-01 
            :ARG1 (t3 / top-02 
                  :ARG1 (b / big 
                        :degree (m / most) 
                        :mod-of (t2 / thing 
                              :ARG0-of (a2 / attract-01 
                                    :ARG1 (t / time)) 
                              :quant 2))) 
            :ARG2 (b2 / bill 
                  :mod (s / strong) 
                  :mod (l / local)) 
            :op-of (a / and 
                  :op1 (c / city 
                        :name (n / name 
                              :op1 "Manchester")))) 
      :time (a3 / already))

# ::snt he got the students to leave the memorial hall by promising a national affairs conference to reach a consensus on issues such as constitutional reform and mainland china policy
# ::tok he got the students to leave the memorial hall by promising a national affairs conference to reach a consensus on issues such as constitutional reform and mainland china policy
# ::alignments 28-29|0.1 27-28|0.1.0.0.0+0.1.0.0+0.1.0 26-27|0.1.0.1 25-26|0 24-25|0.0 23-24|0.0.1 21-22|0.0.0 20-21|0.2 18-19|0.2.0 16-17|0.2.0.0 14-15|0.2.0.0.1.1 13-14|0.2.0.0.0 12-13|0.2.0.0.0.0 10-11|0.2.0.0.1 8-9|0.2.0.0.1.2.1 7-8|0.2.0.0.1.2.1.0 5-6|0.2.0.0.1.2 3-4|0.2.0.0.1.2.0.0+0.2.0.0.1.2.0 0-1|0.2.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:39.793
# ::node	0	and	25-26
# ::node	0.0	reform-01	24-25
# ::node	0.0.0	such	21-22
# ::node	0.0.1	constitution	23-24
# ::node	0.1	policy	28-29
# ::node	0.1.0	country	27-28
# ::node	0.1.0.0	name	27-28
# ::node	0.1.0.0.0	"China"	27-28
# ::node	0.1.0.1	mainland	26-27
# ::node	0.2	issue	20-21
# ::node	0.2.0	consensus	18-19
# ::node	0.2.0.0	reach-01	16-17
# ::node	0.2.0.0.0	affair	13-14
# ::node	0.2.0.0.0.0	nation	12-13
# ::node	0.2.0.0.1	promise-01	10-11
# ::node	0.2.0.0.1.0	he	0-1
# ::node	0.2.0.0.1.1	conference	14-15
# ::node	0.2.0.0.1.2	leave-01	5-6
# ::node	0.2.0.0.1.2.0	person	3-4
# ::node	0.2.0.0.1.2.0.0	study-01	3-4
# ::node	0.2.0.0.1.2.1	hall	8-9
# ::node	0.2.0.0.1.2.1.0	memorial	7-8
# ::root	0	and
# ::edge	affair	mod	nation	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	and	op1	reform-01	0	0.0	
# ::edge	and	op2	policy	0	0.1	
# ::edge	consensus	topic	issue	0.2.0	0.2	
# ::edge	country	name	name	0.1.0	0.1.0.0	
# ::edge	hall	mod	memorial	0.2.0.0.1.2.1	0.2.0.0.1.2.1.0	
# ::edge	issue	topic	and	0.2	0	
# ::edge	leave-01	ARG0	person	0.2.0.0.1.2	0.2.0.0.1.2.0	
# ::edge	leave-01	ARG1	hall	0.2.0.0.1.2	0.2.0.0.1.2.1	
# ::edge	leave-01	manner	promise-01	0.2.0.0.1.2	0.2.0.0.1	
# ::edge	mainland	op1	country	0.1.0.1	0.1.0	
# ::edge	name	op1	"China"	0.1.0.0	0.1.0.0.0	
# ::edge	policy	mod	country	0.1	0.1.0	
# ::edge	promise-01	ARG0	he	0.2.0.0.1	0.2.0.0.1.0	
# ::edge	promise-01	ARG1	conference	0.2.0.0.1	0.2.0.0.1.1	
# ::edge	promise-01	ARG2	reach-01	0.2.0.0.1	0.2.0.0	
# ::edge	reach-01	ARG0	affair	0.2.0.0	0.2.0.0.0	
# ::edge	reach-01	ARG1	consensus	0.2.0.0	0.2.0	
# ::edge	reform-01	ARG0	such	0.0	0.0.0	
# ::edge	reform-01	ARG1	constitution	0.0	0.0.1	
# ::edge	study-01	ARG0	person	0.2.0.0.1.2.0.0	0.2.0.0.1.2.0	
(a / and 
      :op1 (r / reform-01 
            :ARG0 (s / such) 
            :ARG1 (c2 / constitution)) 
      :op2 (p / policy 
            :mod (c / country 
                  :name (n / name 
                        :op1 "China") 
                  :op-of (m / mainland))) 
      :topic-of (i / issue 
            :topic-of (c3 / consensus 
                  :ARG1-of (r2 / reach-01 
                        :ARG0 (a2 / affair 
                              :mod (n2 / nation)) 
                        :ARG2-of (p2 / promise-01 
                              :ARG0 (h2 / he) 
                              :ARG1 (c4 / conference) 
                              :manner-of (l / leave-01 
                                    :ARG0 (p3 / person 
                                          :ARG0-of (s2 / study-01)) 
                                    :ARG1 (h / hall 
                                          :mod (m2 / memorial))))))))

# ::snt he had been promised recovery and he waited for it
# ::tok he had been promised recovery and he waited for it
# ::alignments 9-10|0.0.0.0.1 7-8|0.0.0.0 6-7|0.0.0.0.0 5-6|0 4-5|0.0.0.0.0.0 3-4|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:39.834
# ::node	0	and	5-6
# ::node	0.0	promise-01	3-4
# ::node	0.0.0	he	0-1
# ::node	0.0.0.0	wait-01	7-8
# ::node	0.0.0.0.0	he	6-7
# ::node	0.0.0.0.0.0	recover-01	4-5
# ::node	0.0.0.0.1	it	9-10
# ::root	0	and
# ::edge	and	op1	promise-01	0	0.0	
# ::edge	promise-01	ARG0	he	0.0	0.0.0	
# ::edge	recover-01	ARG1	he	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	wait-01	ARG0	he	0.0.0.0	0.0.0.0.0	
# ::edge	wait-01	ARG1	he	0.0.0.0	0.0.0	
# ::edge	wait-01	ARG2	it	0.0.0.0	0.0.0.0.1	
(a / and 
      :op1 (p / promise-01 
            :ARG0 (h2 / he 
                  :ARG1-of (w / wait-01 
                        :ARG0 (h / he 
                              :ARG1-of (r / recover-01)) 
                        :ARG2 (i / it)))))

# ::snt a buying boom in chemists shops for those overthecounter remedies which promise relief from the alltoofamiliar symptoms
# ::tok a buying boom in chemists shops for those overthecounter remedies which promise relief from the alltoofamiliar symptoms
# ::alignments 16-17|0 12-13|0.0 11-12|0.0.0 5-6|0.0.0.0 2-3|0.0.0.0.0 1-2|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:39.870
# ::node	0	symptom	16-17
# ::node	0.0	relieve-01	12-13
# ::node	0.0.0	promise-01	11-12
# ::node	0.0.0.0	shop	5-6
# ::node	0.0.0.0.0	boom-02	2-3
# ::node	0.0.0.0.0.0	buy-01	1-2
# ::root	0	symptom
(s / symptom 
      :ARG1-of (r / relieve-01 
            :ARG1-of (p / promise-01 
                  :ARG0 (s2 / shop 
                        :ARG1-of (b / boom-02 
                              :ARG1-of (b2 / buy-01))))))

# ::snt he has promised to break off with this woman and i must play fair too
# ::tok he has promised to break off with this woman and i must play fair too
# ::alignments 14-15|0.1.3 13-14|0.1.1 12-13|0.1 10-11|0.1.2 9-10|0 8-9|0.0 7-8|0.0.0 5-6|0.1.0.0.0 2-3|0.1.0.0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:39.978
# ::node	0	and	9-10
# ::node	0.0	woman	8-9
# ::node	0.0.0	this	7-8
# ::node	0.1	play-01	12-13
# ::node	0.1.0	he	0-1
# ::node	0.1.0.0	promise-01	2-3
# ::node	0.1.0.0.0	off	5-6
# ::node	0.1.1	fair	13-14
# ::node	0.1.2	i	10-11
# ::node	0.1.3	too	14-15
# ::root	0	and
# ::edge	and	op1	woman	0	0.0	
# ::edge	and	op2	play-01	0	0.1	
# ::edge	play-01	ARG0	he	0.1	0.1.0	
# ::edge	play-01	ARG1	fair	0.1	0.1.1	
# ::edge	play-01	ARG2	i	0.1	0.1.2	
# ::edge	play-01	mod	too	0.1	0.1.3	
# ::edge	promise-01	ARG0	he	0.1.0.0	0.1.0	
# ::edge	promise-01	ARG1	off	0.1.0.0	0.1.0.0.0	
# ::edge	woman	mod	this	0.0	0.0.0	
(a / and 
      :op1 (w / woman 
            :mod (t2 / this)) 
      :op2 (p / play-01 
            :ARG0 (h / he 
                  :ARG0-of (p2 / promise-01 
                        :ARG1 (o / off))) 
            :ARG1 (f / fair) 
            :ARG2 (i / i) 
            :mod (t / too)))

# ::snt president daniel ortega of nicaragua promised to hold free fair and democratic elections next year but defended his decision to end a 19month ceasefire with usbacked rebels
# ::tok president daniel ortega of nicaragua promised to hold free fair and democratic elections next year but defended his decision to end a 19month ceasefire with usbacked rebels
# ::alignments 26-27|0.1.1.0.0.0+0.1.1.0.0 23-24|0.1.1.0 18-19|0.1.1 16-17|0.1 15-16|0 14-15|0.0.0.0 13-14|0.0.0.0.0 12-13|0.0.0 11-12|0.0.0.1 10-11|0.0 9-10|0.0.0.2.0 8-9|0.0.0.2 5-6|0.1.0.0 1-3|0.1.0.2.0+0.1.0.2.1+0.1.0.2+0.1.0 0-1|0.1.0.1.0+0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:40.290
# ::node	0	contrast-01	15-16
# ::node	0.0	and	10-11
# ::node	0.0.0	elect-01	12-13
# ::node	0.0.0.0	year	14-15
# ::node	0.0.0.0.0	next	13-14
# ::node	0.0.0.1	democracy	11-12
# ::node	0.0.0.2	free-41	8-9
# ::node	0.0.0.2.0	fair	9-10
# ::node	0.1	defend-01	16-17
# ::node	0.1.0	person	1-3
# ::node	0.1.0.0	promise-01	5-6
# ::node	0.1.0.1	have-org-role-91	0-1
# ::node	0.1.0.1.0	president	0-1
# ::node	0.1.0.2	name	1-3
# ::node	0.1.0.2.0	"ortega"	1-3
# ::node	0.1.0.2.1	"daniel"	1-3
# ::node	0.1.1	decide-01	18-19
# ::node	0.1.1.0	cease-01	23-24
# ::node	0.1.1.0.0	person	26-27
# ::node	0.1.1.0.0.0	rebel-01	26-27
# ::root	0	contrast-01
# ::edge	cease-01	ARG0	person	0.1.1.0	0.1.1.0.0	
# ::edge	cease-01	ARG1	decide-01	0.1.1.0	0.1.1	
# ::edge	contrast-01	ARG1	and	0	0.0	
# ::edge	contrast-01	ARG2	defend-01	0	0.1	
# ::edge	defend-01	ARG0	person	0.1	0.1.0	
# ::edge	defend-01	ARG1	decide-01	0.1	0.1.1	
# ::edge	elect-01	ARG0	and	0.0.0	0.0	
# ::edge	elect-01	ARG1	year	0.0.0	0.0.0.0	
# ::edge	elect-01	mod	democracy	0.0.0	0.0.0.1	
# ::edge	elect-01	time	free-41	0.0.0	0.0.0.2	
# ::edge	free-41	ARG1	fair	0.0.0.2	0.0.0.2.0	
# ::edge	have-org-role-91	ARG0	person	0.1.0.1	0.1.0	
# ::edge	have-org-role-91	ARG2	president	0.1.0.1	0.1.0.1.0	
# ::edge	name	op1	"ortega"	0.1.0.2	0.1.0.2.0	
# ::edge	name	op2	"daniel"	0.1.0.2	0.1.0.2.1	
# ::edge	person	name	name	0.1.0	0.1.0.2	
# ::edge	promise-01	ARG0	person	0.1.0.0	0.1.0	
# ::edge	rebel-01	ARG0	person	0.1.1.0.0.0	0.1.1.0.0	
# ::edge	year	mod	next	0.0.0.0	0.0.0.0.0	
(c2 / contrast-01 
      :ARG1 (a / and 
            :ARG0-of (e / elect-01 
                  :ARG1 (y / year 
                        :mod (n / next)) 
                  :mod (d3 / democracy) 
                  :time (f2 / free-41 
                        :ARG1 (f / fair)))) 
      :ARG2 (d2 / defend-01 
            :ARG0 (p3 / person 
                  :ARG0-of (p2 / promise-01) 
                  :ARG0-of (h / have-org-role-91 
                        :ARG2 (p4 / president)) 
                  :name (n2 / name 
                        :op1 "ortega" 
                        :op2 "daniel")) 
            :ARG1 (d / decide-01 
                  :ARG1-of (c / cease-01 
                        :ARG0 (p / person 
                              :ARG0-of (r / rebel-01))))))

# ::snt i spent the next day at the falls which were even more spectacular than the photographs had promised
# ::tok i spent the next day at the falls which were even more spectacular than the photographs had promised
# ::alignments 17-18|0.1 15-16|0 12-13|0.0 4-5|0.1.0.1 3-4|0.1.0.1.0 1-2|0.1.0 0-1|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:40.320
# ::node	0	photograph-01	15-16
# ::node	0.0	spectacular	12-13
# ::node	0.1	promise-01	17-18
# ::node	0.1.0	spend-01	1-2
# ::node	0.1.0.0	i	0-1
# ::node	0.1.0.1	day	4-5
# ::node	0.1.0.1.0	next	3-4
# ::root	0	photograph-01
# ::edge	day	mod	next	0.1.0.1	0.1.0.1.0	
# ::edge	photograph-01	ARG0	spectacular	0	0.0	
# ::edge	promise-01	ARG0	photograph-01	0.1	0	
# ::edge	promise-01	ARG1	spend-01	0.1	0.1.0	
# ::edge	spend-01	ARG0	i	0.1.0	0.1.0.0	
# ::edge	spend-01	ARG1	day	0.1.0	0.1.0.1	
(p2 / photograph-01 
      :ARG0 (s / spectacular) 
      :ARG0-of (p / promise-01 
            :ARG1 (s2 / spend-01 
                  :ARG0 (i / i) 
                  :ARG1 (d / day 
                        :mod (n / next)))))

# ::snt great okay nick thanks for that well come back to you in just a moment but i did promise a racing competition
# ::tok great okay nick thanks for that well come back to you in just a moment but i did promise a racing competition
# ::alignments 21-22|0.2.0 20-21|0.2.0.1 18-19|0.2.0.2 16-17|0.2 15-16|0 14-15|0.1 12-13|0.1.0 10-11|0.2.0.2.0.0 8-9|0.2.0.0 6-7|0.0 3-4|0.2.0.2.0 1-2|0.2.0.2.0.1 0-1|0.2.0.2.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:40.578
# ::node	0	contrast-01	15-16
# ::node	0.0	well	6-7
# ::node	0.1	moment	14-15
# ::node	0.1.0	just	12-13
# ::node	0.2	i	16-17
# ::node	0.2.0	compete-01	21-22
# ::node	0.2.0.0	back	8-9
# ::node	0.2.0.1	race-01	20-21
# ::node	0.2.0.2	promise-01	18-19
# ::node	0.2.0.2.0	thank-01	3-4
# ::node	0.2.0.2.0.0	you	10-11
# ::node	0.2.0.2.0.1	okay-01	1-2
# ::node	0.2.0.2.0.2	great	0-1
# ::root	0	contrast-01
# ::edge	compete-01	ARG0	i	0.2.0	0.2	
# ::edge	compete-01	ARG1	back	0.2.0	0.2.0.0	
# ::edge	contrast-01	ARG0	well	0	0.0	
# ::edge	contrast-01	ARG1	moment	0	0.1	
# ::edge	i	topic	contrast-01	0.2	0	
# ::edge	moment	mod	just	0.1	0.1.0	
# ::edge	okay-01	ARG1	thank-01	0.2.0.2.0.1	0.2.0.2.0	
# ::edge	promise-01	ARG0	thank-01	0.2.0.2	0.2.0.2.0	
# ::edge	promise-01	ARG1	compete-01	0.2.0.2	0.2.0	
# ::edge	race-01	ARG1	compete-01	0.2.0.1	0.2.0	
# ::edge	thank-01	ARG1	you	0.2.0.2.0	0.2.0.2.0.0	
# ::edge	thank-01	mod	great	0.2.0.2.0	0.2.0.2.0.2	
(c2 / contrast-01 
      :ARG0 (w / well) 
      :ARG1 (m / moment 
            :mod (j / just)) 
      :topic-of (i / i 
            :ARG0-of (c / compete-01 
                  :ARG1 (b / back) 
                  :ARG1-of (r / race-01) 
                  :ARG1-of (p / promise-01 
                        :ARG0 (t / thank-01 
                              :ARG1 (y / you) 
                              :ARG1-of (o / okay-01) 
                              :mod (g / great))))))

# ::snt devi lal for instance seems obsessed with appeasing the farmers and has rashly promised to write off their massive loans to the government
# ::tok devi lal for instance seems obsessed with appeasing the farmers and has rashly promised to write off their massive loans to the government
# ::alignments 19-20|0.0.1.0.0.0 18-19|0.0.1.0.0.0.0 16-17|0.0.1.0.0.1 15-16|0.0.1.0.0 13-14|0.0.1.0 10-11|0.0.1 9-10|0.0.0.0+0.0.0 5-6|0.0 4-5|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:40.631
# ::node	0	seem-01	4-5
# ::node	0.0	obsess-01	5-6
# ::node	0.0.0	person	9-10
# ::node	0.0.0.0	farm-01	9-10
# ::node	0.0.1	and	10-11
# ::node	0.0.1.0	promise-01	13-14
# ::node	0.0.1.0.0	write-01	15-16
# ::node	0.0.1.0.0.0	loan-01	19-20
# ::node	0.0.1.0.0.0.0	massive	18-19
# ::node	0.0.1.0.0.1	off	16-17
# ::root	0	seem-01
# ::edge	and	op1	obsess-01	0.0.1	0.0	
# ::edge	and	op2	promise-01	0.0.1	0.0.1.0	
# ::edge	farm-01	ARG0	person	0.0.0.0	0.0.0	
# ::edge	loan-01	mod	massive	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	obsess-01	ARG0	person	0.0	0.0.0	
# ::edge	promise-01	ARG1	write-01	0.0.1.0	0.0.1.0.0	
# ::edge	seem-01	ARG2	obsess-01	0	0.0	
# ::edge	write-01	ARG1	loan-01	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	write-01	direction	off	0.0.1.0.0	0.0.1.0.0.1	
(s / seem-01 
      :ARG2 (o2 / obsess-01 
            :ARG0 (p2 / person 
                  :ARG0-of (f / farm-01)) 
            :op-of (a / and 
                  :op1 (p / promise-01 
                        :ARG1 (w / write-01 
                              :ARG1 (l / loan-01 
                                    :mod (m / massive)) 
                              :direction (o / off))))))

# ::snt gerrard went on i was promised it would keep the head out of the water
# ::tok gerrard went on i was promised it would keep the head out of the water
# ::alignments 14-15|0.1.1 10-11|0.1 6-7|0.1.0 5-6|0 3-4|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:40.648
# ::node	0	promise-01	5-6
# ::node	0.0	i	3-4
# ::node	0.1	head-01	10-11
# ::node	0.1.0	it	6-7
# ::node	0.1.1	water	14-15
# ::root	0	promise-01
# ::edge	head-01	ARG0	it	0.1	0.1.0	
# ::edge	head-01	source	water	0.1	0.1.1	
# ::edge	promise-01	ARG0	i	0	0.0	
# ::edge	promise-01	ARG1	head-01	0	0.1	
(p / promise-01 
      :ARG0 (i2 / i) 
      :ARG1 (h / head-01 
            :ARG0 (i / it) 
            :source (w / water)))

# ::snt with ceausescu dead and free elections promised for april the elderly militant and his friends dream of gathering enough supporters to present a candidate
# ::tok with ceausescu dead and free elections promised for april the elderly militant and his friends dream of gathering enough supporters to present a candidate
# ::alignments 23-24|0.3.1.0.0.0.0.0 21-22|0.3.1.0.0.0.0 19-20|0.3.1.0.0.0+0.3.1.0.0 18-19|0.3.1.0.0.1 17-18|0.3.1.0 15-16|0.3.1 14-15|0.0.0.0+0.0.0 12-13|0.3 11-12|0.0 10-11|0.3.0 8-9|0.4.0+0.4 6-7|0 5-6|0.2 4-5|0.2.0 3-4|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:40.991
# ::node	0	promise-01	6-7
# ::node	0.0	militant	11-12
# ::node	0.0.0	have-rel-role-91	14-15
# ::node	0.0.0.0	friend	14-15
# ::node	0.1	and	3-4
# ::node	0.2	elect-01	5-6
# ::node	0.2.0	free-41	4-5
# ::node	0.3	and	12-13
# ::node	0.3.0	elderly	10-11
# ::node	0.3.1	dream-01	15-16
# ::node	0.3.1.0	gather-01	17-18
# ::node	0.3.1.0.0	person	19-20
# ::node	0.3.1.0.0.0	support-01	19-20
# ::node	0.3.1.0.0.0.0	present	21-22
# ::node	0.3.1.0.0.0.0.0	candidate	23-24
# ::node	0.3.1.0.0.1	enough	18-19
# ::node	0.4	date-entity	8-9
# ::node	0.4.0	4	8-9
# ::root	0	promise-01
# ::edge	and	mod	elderly	0.3	0.3.0	
# ::edge	and	op1	promise-01	0.3	0	
# ::edge	and	op2	dream-01	0.3	0.3.1	
# ::edge	date-entity	month	4	0.4	0.4.0	
# ::edge	dream-01	ARG1	gather-01	0.3.1	0.3.1.0	
# ::edge	free-41	ARG1	elect-01	0.2.0	0.2	
# ::edge	gather-01	ARG1	person	0.3.1.0	0.3.1.0.0	
# ::edge	have-rel-role-91	ARG1	militant	0.0.0	0.0	
# ::edge	have-rel-role-91	ARG2	friend	0.0.0	0.0.0.0	
# ::edge	person	quant	enough	0.3.1.0.0	0.3.1.0.0.1	
# ::edge	present	mod	candidate	0.3.1.0.0.0.0	0.3.1.0.0.0.0.0	
# ::edge	promise-01	ARG0	militant	0	0.0	
# ::edge	promise-01	ARG1	and	0	0.1	
# ::edge	promise-01	manner	elect-01	0	0.2	
# ::edge	promise-01	time	date-entity	0	0.4	
# ::edge	support-01	ARG0	person	0.3.1.0.0.0	0.3.1.0.0	
# ::edge	support-01	ARG1	present	0.3.1.0.0.0	0.3.1.0.0.0.0	
(p3 / promise-01 
      :ARG0 (m / militant 
            :ARG1-of (h / have-rel-role-91 
                  :ARG2 (f / friend))) 
      :ARG1 (a2 / and) 
      :manner (e3 / elect-01 
            :ARG1-of (f2 / free-41)) 
      :op-of (a / and 
            :mod (e2 / elderly) 
            :op1 (d / dream-01 
                  :ARG1 (g / gather-01 
                        :ARG1 (p2 / person 
                              :ARG0-of (s / support-01 
                                    :ARG1 (p / present 
                                          :mod (c / candidate))) 
                              :quant (e / enough))))) 
      :time (d2 / date-entity 
            :month 4))

# ::snt   he promised labour would introduce new railway legislation to lay down in law the broad policy objectives that the party would expect from br
# ::tok he promised labour would introduce new railway legislation to lay down in law the broad policy objectives that the party would expect from br
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:40.992
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt berkshire motor caravans promise one of the countrys biggest selection of new motor caravans from autohomes autosleeper autotrial and richard holdsworth together with dozens of used vehicles
# ::tok berkshire motor caravans promise one of the countrys biggest selection of new motor caravans from autohomes autosleeper autotrial and richard holdsworth together with dozens of used vehicles
# ::alignments 26-27|0.0.0.1.1 25-26|0.0.0.1 21-22|0.0.0.1.1.0 18-19|0 12-13|0.1 11-12|0.0.0.1.0 9-10|0.0 8-9|0.0.1.0+0.0.1 3-4|0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:41.112
# ::node	0	and	18-19
# ::node	0.0	select-01	9-10
# ::node	0.0.0	promise-01	3-4
# ::node	0.0.0.0	motorcycle	1-2
# ::node	0.0.0.1	use-01	25-26
# ::node	0.0.0.1.0	new	11-12
# ::node	0.0.0.1.1	vehicle	26-27
# ::node	0.0.0.1.1.0	together	21-22
# ::node	0.0.1	big	8-9
# ::node	0.0.1.0	most	8-9
# ::node	0.1	motorcycle	12-13
# ::root	0	and
# ::edge	and	op1	motorcycle	0	0.1	
# ::edge	big	degree	most	0.0.1	0.0.1.0	
# ::edge	big	domain	select-01	0.0.1	0.0	
# ::edge	promise-01	ARG0	motorcycle	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	select-01	0.0.0	0.0	
# ::edge	promise-01	ARG2	use-01	0.0.0	0.0.0.1	
# ::edge	select-01	ARG1	and	0.0	0	
# ::edge	use-01	ARG0	new	0.0.0.1	0.0.0.1.0	
# ::edge	use-01	ARG1	vehicle	0.0.0.1	0.0.0.1.1	
# ::edge	vehicle	mod	together	0.0.0.1.1	0.0.0.1.1.0	
(a / and 
      :ARG1-of (s / select-01 
            :ARG1-of (p / promise-01 
                  :ARG0 (m3 / motorcycle) 
                  :ARG2 (u / use-01 
                        :ARG0 (n / new) 
                        :ARG1 (v / vehicle 
                              :mod (t / together)))) 
            :domain-of (b / big 
                  :degree (m2 / most))) 
      :op1 (m / motorcycle))

# ::snt urging the crowd to elect a worker to the presidency for the first time ever lula promised that once elected he would declare an immediate debt moratorium and start carving up large agricultural estates
# ::tok urging the crowd to elect a worker to the presidency for the first time ever lula promised that once elected he would declare an immediate debt moratorium and start carving up large agricultural estates
# ::alignments 33-34|0.0.0.1.1 32-33|0.0.0.1.1.0 31-32|0.0.0.1.1.1 28-29|0.0.0 27-28|0.0.0.1 26-27|0.1 25-26|0.0.0.0 24-25|0.1.0 22-23|0 20-21|0.0 19-20|0.2 18-19|0.2.1 16-17|0.2.0 14-15|0.2.0.1 13-14|0.2.0.0 6-7|0.0.0.1.0.0+0.0.0.1.0 4-5|0.0.0.1.0.1 2-3|0.0.0.1.0.1.0.0 0-1|0.0.0.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:42.442
# ::node	0	declare-02	22-23
# ::node	0.0	he	20-21
# ::node	0.0.0	start-01	28-29
# ::node	0.0.0.0	debt	25-26
# ::node	0.0.0.1	and	27-28
# ::node	0.0.0.1.0	person	6-7
# ::node	0.0.0.1.0.0	work-01	6-7
# ::node	0.0.0.1.0.1	elect-01	4-5
# ::node	0.0.0.1.0.1.0	urge-01	0-1
# ::node	0.0.0.1.0.1.0.0	crowd	2-3
# ::node	0.0.0.1.1	estate	33-34
# ::node	0.0.0.1.1.0	agriculture	32-33
# ::node	0.0.0.1.1.1	large	31-32
# ::node	0.1	moratorium	26-27
# ::node	0.1.0	immediate	24-25
# ::node	0.2	elect-01	19-20
# ::node	0.2.0	promise-01	16-17
# ::node	0.2.0.0	time	13-14
# ::node	0.2.0.1	ever	14-15
# ::node	0.2.1	once	18-19
# ::root	0	declare-02
# ::edge	and	op1	person	0.0.0.1	0.0.0.1.0	
# ::edge	and	op2	start-01	0.0.0.1	0.0.0	
# ::edge	and	op3	estate	0.0.0.1	0.0.0.1.1	
# ::edge	declare-02	ARG0	he	0	0.0	
# ::edge	declare-02	ARG1	moratorium	0	0.1	
# ::edge	elect-01	ARG1	declare-02	0.2	0	
# ::edge	elect-01	ARG1	person	0.0.0.1.0.1	0.0.0.1.0	
# ::edge	elect-01	time	once	0.2	0.2.1	
# ::edge	estate	mod	agriculture	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	estate	mod	large	0.0.0.1.1	0.0.0.1.1.1	
# ::edge	moratorium	time	immediate	0.1	0.1.0	
# ::edge	promise-01	ARG0	time	0.2.0	0.2.0.0	
# ::edge	promise-01	ARG1	elect-01	0.2.0	0.2	
# ::edge	promise-01	time	ever	0.2.0	0.2.0.1	
# ::edge	start-01	ARG0	he	0.0.0	0.0	
# ::edge	start-01	ARG1	debt	0.0.0	0.0.0.0	
# ::edge	urge-01	ARG1	elect-01	0.0.0.1.0.1.0	0.0.0.1.0.1	
# ::edge	urge-01	ARG2	crowd	0.0.0.1.0.1.0	0.0.0.1.0.1.0.0	
# ::edge	work-01	ARG0	person	0.0.0.1.0.0	0.0.0.1.0	
(d2 / declare-02 
      :ARG0 (h / he 
            :ARG0-of (s / start-01 
                  :ARG1 (d / debt) 
                  :op-of (a2 / and 
                        :op1 (p2 / person 
                              :ARG0-of (w / work-01) 
                              :ARG1-of (e4 / elect-01 
                                    :ARG1-of (u / urge-01 
                                          :ARG2 (c / crowd)))) 
                        :op2 (e / estate 
                              :mod (a / agriculture) 
                              :mod (l / large))))) 
      :ARG1 (m / moratorium 
            :time (i / immediate)) 
      :ARG1-of (e2 / elect-01 
            :ARG1-of (p / promise-01 
                  :ARG0 (t / time) 
                  :time (e3 / ever)) 
            :time (o / once)))

# ::snt they were never promised that they could stay for ever he said
# ::tok they were never promised that they could stay for ever he said
# ::alignments 11-12|0 10-11|0.0 9-10|0.1 7-8|0.0.0 6-7|0.0.0.2 5-6|0.0.0.0 3-4|0.0.0.1 0-1|0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:42.551
# ::node	0	say-01	11-12
# ::node	0.0	he	10-11
# ::node	0.0.0	stay-01	7-8
# ::node	0.0.0.0	they	5-6
# ::node	0.0.0.1	promise-01	3-4
# ::node	0.0.0.1.0	they	0-1
# ::node	0.0.0.2	possible	6-7
# ::node	0.1	ever	9-10
# ::root	0	say-01
# ::edge	possible	domain	stay-01	0.0.0.2	0.0.0	
# ::edge	promise-01	ARG0	they	0.0.0.1	0.0.0.1.0	
# ::edge	promise-01	ARG1	stay-01	0.0.0.1	0.0.0	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	time	ever	0	0.1	
# ::edge	stay-01	ARG0	they	0.0.0	0.0.0.0	
# ::edge	stay-01	ARG1	he	0.0.0	0.0	
(s / say-01 
      :ARG0 (h / he 
            :ARG1-of (s2 / stay-01 
                  :ARG0 (t / they) 
                  :ARG1-of (p2 / promise-01 
                        :ARG0 (t2 / they)) 
                  :domain-of (p / possible))) 
      :time (e / ever))

# ::snt a cast list boasting characters called hesione hushabye and lady ariadne utterword does not promise an evening of undertones
# ::tok a cast list boasting characters called hesione hushabye and lady ariadne utterword does not promise an evening of undertones
# ::alignments 18-19|0.0.0 16-17|0.0.1 14-15|0.0 9-10|0.1.0 8-9|0 4-5|0.1.1.0 2-3|0.1.1 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:42.635
# ::node	0	and	8-9
# ::node	0.0	promise-01	14-15
# ::node	0.0.0	undertone	18-19
# ::node	0.0.1	evening	16-17
# ::node	0.1	cast-01	1-2
# ::node	0.1.0	lady	9-10
# ::node	0.1.1	list-01	2-3
# ::node	0.1.1.0	character	4-5
# ::root	0	and
# ::edge	and	op1	cast-01	0	0.1	
# ::edge	cast-01	ARG1	lady	0.1	0.1.0	
# ::edge	list-01	ARG1	character	0.1.1	0.1.1.0	
# ::edge	list-01	ARG2	cast-01	0.1.1	0.1	
# ::edge	promise-01	ARG0	and	0.0	0	
# ::edge	promise-01	ARG1	undertone	0.0	0.0.0	
# ::edge	promise-01	ARG2	evening	0.0	0.0.1	
(a / and 
      :ARG0-of (p / promise-01 
            :ARG1 (u / undertone) 
            :ARG2 (e / evening)) 
      :op1 (c2 / cast-01 
            :ARG1 (l / lady) 
            :ARG2-of (l2 / list-01 
                  :ARG1 (c / character))))

# ::snt in the meanwhile it has promised to leave general portfolio intact
# ::tok in the meanwhile it has promised to leave general portfolio intact
# ::alignments 10-11|0.1.1 8-9|0.1.0.0 7-8|0.1 5-6|0 3-4|0.1.0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:42.653
# ::node	0	promise-01	5-6
# ::node	0.0	meanwhile	2-3
# ::node	0.1	leave-01	7-8
# ::node	0.1.0	it	3-4
# ::node	0.1.0.0	general	8-9
# ::node	0.1.1	intact	10-11
# ::root	0	promise-01
# ::edge	general	op1	it	0.1.0.0	0.1.0	
# ::edge	leave-01	ARG0	it	0.1	0.1.0	
# ::edge	leave-01	ARG1	intact	0.1	0.1.1	
# ::edge	promise-01	ARG1	meanwhile	0	0.0	
# ::edge	promise-01	ARG2	leave-01	0	0.1	
(p / promise-01 
      :ARG1 (m / meanwhile) 
      :ARG2 (l / leave-01 
            :ARG0 (i2 / it 
                  :op-of (g / general)) 
            :ARG1 (i / intact)))

# ::snt we had this lot round last weekend and he promised us solemnly that hed have enough police here to stop it happening again
# ::tok we had this lot round last weekend and he promised us solemnly that hed have enough police here to stop it happening again
# ::alignments 22-23|0.2 21-22|0 20-21|0.0 19-20|0.1 17-18|0.1.1 16-17|0.1.1.0 15-16|0.1.1.0.0 11-12|0.1.0.0.4 9-10|0.1.0.0 8-9|0.1.0 7-8|0.1.0.0.3 6-7|0.1.0.0.0 5-6|0.1.0.0.0.0 4-5|0.1.0.0.3.0 3-4|0.1.0.0.2 2-3|0.1.0.0.2.0 0-1|0.1.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:43.276
# ::node	0	happen-01	21-22
# ::node	0.0	it	20-21
# ::node	0.1	stop-01	19-20
# ::node	0.1.0	he	8-9
# ::node	0.1.0.0	promise-01	9-10
# ::node	0.1.0.0.0	weekend	6-7
# ::node	0.1.0.0.0.0	last	5-6
# ::node	0.1.0.0.1	we	0-1
# ::node	0.1.0.0.2	lot	3-4
# ::node	0.1.0.0.2.0	this	2-3
# ::node	0.1.0.0.3	and	7-8
# ::node	0.1.0.0.3.0	round	4-5
# ::node	0.1.0.0.4	solemn	11-12
# ::node	0.1.1	here	17-18
# ::node	0.1.1.0	police	16-17
# ::node	0.1.1.0.0	enough	15-16
# ::node	0.2	again	22-23
# ::root	0	happen-01
# ::edge	and	op1	round	0.1.0.0.3	0.1.0.0.3.0	
# ::edge	and	op2	promise-01	0.1.0.0.3	0.1.0.0	
# ::edge	happen-01	ARG1	it	0	0.0	
# ::edge	happen-01	mod	again	0	0.2	
# ::edge	lot	mod	this	0.1.0.0.2	0.1.0.0.2.0	
# ::edge	police	location	here	0.1.1.0	0.1.1	
# ::edge	police	quant	enough	0.1.1.0	0.1.1.0.0	
# ::edge	promise-01	ARG0	he	0.1.0.0	0.1.0	
# ::edge	promise-01	ARG1	weekend	0.1.0.0	0.1.0.0.0	
# ::edge	promise-01	ARG2	we	0.1.0.0	0.1.0.0.1	
# ::edge	promise-01	instrument	lot	0.1.0.0	0.1.0.0.2	
# ::edge	promise-01	time	solemn	0.1.0.0	0.1.0.0.4	
# ::edge	stop-01	ARG0	he	0.1	0.1.0	
# ::edge	stop-01	ARG1	happen-01	0.1	0	
# ::edge	stop-01	mod	here	0.1	0.1.1	
# ::edge	weekend	mod	last	0.1.0.0.0	0.1.0.0.0.0	
(h / happen-01 
      :ARG1 (i / it) 
      :ARG1-of (s / stop-01 
            :ARG0 (h3 / he 
                  :ARG0-of (p2 / promise-01 
                        :ARG1 (w / weekend 
                              :mod (l / last)) 
                        :ARG2 (w2 / we) 
                        :instrument (l2 / lot 
                              :mod (t / this)) 
                        :op-of (a2 / and 
                              :op1 (r / round)) 
                        :time (s2 / solemn))) 
            :mod (h2 / here 
                  :location-of (p / police 
                        :quant (e / enough)))) 
      :mod (a / again))

# ::snt the ministry officials were hopeful that a national debate promised by premier gorbachev into the whole nuclear issue will eventually come down in their favour
# ::tok the ministry officials were hopeful that a national debate promised by premier gorbachev into the whole nuclear issue will eventually come down in their favour
# ::alignments 24-25|0.1 21-22|0.0.0 19-20|0.1.1 17-18|0.2.0 16-17|0.2.0.0 15-16|0.2 11-12|0.3 9-10|0.1.0.0 8-9|0.1.0 7-8|0.1.0.1 4-5|0 2-3|0.0.2+0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:43.499
# ::node	0	hope-01	4-5
# ::node	0.0	have-org-role-91	2-3
# ::node	0.0.0	down	21-22
# ::node	0.0.1	ministry	1-2
# ::node	0.0.2	official	2-3
# ::node	0.1	favor-01	24-25
# ::node	0.1.0	debate-01	8-9
# ::node	0.1.0.0	promise-01	9-10
# ::node	0.1.0.1	nation	7-8
# ::node	0.1.1	eventual	19-20
# ::node	0.2	whole	15-16
# ::node	0.2.0	issue	17-18
# ::node	0.2.0.0	nucleus	16-17
# ::node	0.3	premier	11-12
# ::root	0	hope-01
# ::edge	debate-01	mod	nation	0.1.0	0.1.0.1	
# ::edge	favor-01	ARG0	debate-01	0.1	0.1.0	
# ::edge	favor-01	degree	eventual	0.1	0.1.1	
# ::edge	have-org-role-91	ARG0	down	0.0	0.0.0	
# ::edge	have-org-role-91	ARG1	ministry	0.0	0.0.1	
# ::edge	have-org-role-91	ARG2	official	0.0	0.0.2	
# ::edge	hope-01	ARG0	have-org-role-91	0	0.0	
# ::edge	hope-01	ARG2	favor-01	0	0.1	
# ::edge	hope-01	topic	premier	0	0.3	
# ::edge	hope-01	topic	whole	0	0.2	
# ::edge	issue	mod	nucleus	0.2.0	0.2.0.0	
# ::edge	issue	mod	whole	0.2.0	0.2	
# ::edge	promise-01	ARG1	debate-01	0.1.0.0	0.1.0	
(h / hope-01 
      :ARG0 (h2 / have-org-role-91 
            :ARG0 (d / down) 
            :ARG1 (m / ministry) 
            :ARG2 (o / official)) 
      :ARG2 (f / favor-01 
            :ARG0 (d2 / debate-01 
                  :ARG1-of (p2 / promise-01) 
                  :mod (n2 / nation)) 
            :degree (e / eventual)) 
      :topic (w / whole 
            :mod-of (i / issue 
                  :mod (n / nucleus))) 
      :topic (p / premier))

# ::snt promising differs from consenting in two respects, first while promising always purports to impose obligations on the promisor consenting does not always do so
# ::tok promising differs from consenting in two respects , first while promising always purports to impose obligations on the promisor consenting does not always do so
# ::alignments 24-25|0.1.0.2.1 22-23|0.1.0.2.0 19-20|0.2 15-16|0 14-15|0.1 12-13|0.1.0 11-12|0.1.0.3 10-11|0.1.0.0 5-6|0.0 3-4|0.1.0.2 0-1|0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:43.581
# ::node	0	obligate-01	15-16
# ::node	0.0	2	5-6
# ::node	0.1	impose-01	14-15
# ::node	0.1.0	purport-01	12-13
# ::node	0.1.0.0	promise-01	10-11
# ::node	0.1.0.1	promise-01	0-1
# ::node	0.1.0.2	consent-01	3-4
# ::node	0.1.0.2.0	always	22-23
# ::node	0.1.0.2.1	so	24-25
# ::node	0.1.0.3	always	11-12
# ::node	0.2	consent-01	19-20
# ::root	0	obligate-01
# ::edge	consent-01	ARG0	always	0.1.0.2	0.1.0.2.0	
# ::edge	consent-01	ARG1	obligate-01	0.2	0	
# ::edge	consent-01	ARG1	so	0.1.0.2	0.1.0.2.1	
# ::edge	consent-01	condition	purport-01	0.1.0.2	0.1.0	
# ::edge	impose-01	ARG1	obligate-01	0.1	0	
# ::edge	obligate-01	ARG1	2	0	0.0	
# ::edge	promise-01	ARG1	purport-01	0.1.0.1	0.1.0	
# ::edge	purport-01	ARG0	promise-01	0.1.0	0.1.0.0	
# ::edge	purport-01	ARG1	impose-01	0.1.0	0.1	
# ::edge	purport-01	mod	always	0.1.0	0.1.0.3	
(o / obligate-01 
      :ARG1 2 
      :ARG1-of (i / impose-01 
            :ARG1-of (p / purport-01 
                  :ARG0 (p2 / promise-01) 
                  :ARG1-of (p3 / promise-01) 
                  :condition-of (c2 / consent-01 
                        :ARG0 (a / always) 
                        :ARG1 (s / so)) 
                  :mod (a2 / always))) 
      :ARG1-of (c / consent-01))

# ::snt mrs thatcher was a notable absentee from this years welsh tory conference but representatives were promised a visit before christmas
# ::tok mrs thatcher was a notable absentee from this years welsh tory conference but representatives were promised a visit before christmas
# ::alignments 18-19|0.0.1 17-18|0.0.0.1 15-16|0.0 13-14|0.0.0.0+0.0.0 12-13|0 11-12|0.0.0.0.0.0 10-11|0.0.0.0.0.0.0.0.0+0.0.0.0.0.0.0.0+0.0.0.0.0.0.0 8-9|0.0.0.0.0.1+0.0.0.0.0 7-8|0.0.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:43.723
# ::node	0	contrast-01	12-13
# ::node	0.0	promise-01	15-16
# ::node	0.0.0	person	13-14
# ::node	0.0.0.0	represent-01	13-14
# ::node	0.0.0.0.0	temporal-quantity	8-9
# ::node	0.0.0.0.0.0	conference	11-12
# ::node	0.0.0.0.0.0.0	political-party	10-11
# ::node	0.0.0.0.0.0.0.0	name	10-11
# ::node	0.0.0.0.0.0.0.0.0	"Tory"	10-11
# ::node	0.0.0.0.0.0.1	this	7-8
# ::node	0.0.0.0.0.1	year	8-9
# ::node	0.0.0.1	visit-01	17-18
# ::node	0.0.1	before	18-19
# ::root	0	contrast-01
# ::edge	conference	duration	temporal-quantity	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	conference	mod	political-party	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	conference	mod	this	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	contrast-01	ARG1	promise-01	0	0.0	
# ::edge	name	op1	"Tory"	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0	
# ::edge	political-party	name	name	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	promise-01	ARG1	person	0.0	0.0.0	
# ::edge	promise-01	time	before	0.0	0.0.1	
# ::edge	represent-01	ARG0	person	0.0.0.0	0.0.0	
# ::edge	represent-01	ARG1	temporal-quantity	0.0.0.0	0.0.0.0.0	
# ::edge	temporal-quantity	unit	year	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	visit-01	ARG0	person	0.0.0.1	0.0.0	
(c / contrast-01 
      :ARG1 (p / promise-01 
            :ARG1 (p2 / person 
                  :ARG0-of (r / represent-01 
                        :ARG1 (t / temporal-quantity 
                              :duration-of (c2 / conference 
                                    :mod (p3 / political-party 
                                          :name (n / name 
                                                :op1 "Tory")) 
                                    :mod (t2 / this)) 
                              :unit (y / year))) 
                  :ARG0-of (v / visit-01)) 
            :time (b / before)))

# ::snt every winter heralds the arrival of a new batch of products which give comfort and promise quick relief
# ::tok every winter heralds the arrival of a new batch of products which give comfort and promise quick relief
# ::alignments 17-18|0.0.1.0 16-17|0.0.1.0.0 15-16|0.1 14-15|0 13-14|0.0.1 12-13|0.0 10-11|0.0.0 8-9|0.1.0.2+0.1.0 7-8|0.1.0.1 4-5|0.1.0.0 1-2|0.1.0.0.0 0-1|0.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:44.154
# ::node	0	and	14-15
# ::node	0.0	give-01	12-13
# ::node	0.0.0	product	10-11
# ::node	0.0.1	comfort-01	13-14
# ::node	0.0.1.0	relieve-01	17-18
# ::node	0.0.1.0.0	quick	16-17
# ::node	0.1	promise-01	15-16
# ::node	0.1.0	person	8-9
# ::node	0.1.0.0	arrive-01	4-5
# ::node	0.1.0.0.0	winter	1-2
# ::node	0.1.0.0.0.0	every	0-1
# ::node	0.1.0.1	new	7-8
# ::node	0.1.0.2	batch	8-9
# ::root	0	and
# ::edge	and	op1	promise-01	0	0.1	
# ::edge	arrive-01	ARG0	winter	0.1.0.0	0.1.0.0.0	
# ::edge	arrive-01	ARG1	person	0.1.0.0	0.1.0	
# ::edge	comfort-01	ARG1	relieve-01	0.0.1	0.0.1.0	
# ::edge	give-01	ARG0	product	0.0	0.0.0	
# ::edge	give-01	ARG1	and	0.0	0	
# ::edge	give-01	ARG2	comfort-01	0.0	0.0.1	
# ::edge	person	mod	new	0.1.0	0.1.0.1	
# ::edge	person	source	batch	0.1.0	0.1.0.2	
# ::edge	promise-01	ARG1	person	0.1	0.1.0	
# ::edge	relieve-01	mod	quick	0.0.1.0	0.0.1.0.0	
# ::edge	winter	mod	every	0.1.0.0.0	0.1.0.0.0.0	
(a / and 
      :ARG1-of (g / give-01 
            :ARG0 (p2 / product) 
            :ARG2 (c / comfort-01 
                  :ARG1 (r / relieve-01 
                        :mod (q / quick)))) 
      :op1 (p / promise-01 
            :ARG1 (p3 / person 
                  :ARG1-of (a2 / arrive-01 
                        :ARG0 (w / winter 
                              :mod (e / every))) 
                  :mod (n / new) 
                  :source (b / batch))))

# ::snt friends had provided 15000 in help after promising 1m
# ::tok friends had provided 15000 in help after promising 1m
# ::alignments 7-8|0.0.0 6-7|0.2 5-6|0.2.0 3-4|0.1 2-3|0 0-1|0.0.1+0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:44.208
# ::node	0	provide-01	2-3
# ::node	0.0	have-rel-role-91	0-1
# ::node	0.0.0	promise-01	7-8
# ::node	0.0.1	friend	0-1
# ::node	0.1	15000	3-4
# ::node	0.2	after	6-7
# ::node	0.2.0	help-01	5-6
# ::root	0	provide-01
# ::edge	have-rel-role-91	ARG2	friend	0.0	0.0.1	
# ::edge	help-01	time	after	0.2.0	0.2	
# ::edge	promise-01	ARG1	have-rel-role-91	0.0.0	0.0	
# ::edge	provide-01	ARG0	have-rel-role-91	0	0.0	
# ::edge	provide-01	ARG1	15000	0	0.1	
# ::edge	provide-01	time	after	0	0.2	
(p2 / provide-01 
      :ARG0 (h2 / have-rel-role-91 
            :ARG1-of (p / promise-01) 
            :ARG2 (f / friend)) 
      :ARG1 15000 
      :time (a / after 
            :time-of (h / help-01)))

# ::snt it promises to be a hot and gruelling day
# ::tok it promises to be a hot and gruelling day
# ::alignments 8-9|0.0.0 6-7|0.1 5-6|0.1.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:44.252
# ::node	0	promise-01	1-2
# ::node	0.0	it	0-1
# ::node	0.0.0	day	8-9
# ::node	0.1	and	6-7
# ::node	0.1.0	hot	5-6
# ::root	0	promise-01
# ::edge	and	op1	hot	0.1	0.1.0	
# ::edge	day	domain	it	0.0.0	0.0	
# ::edge	promise-01	ARG0	it	0	0.0	
# ::edge	promise-01	ARG1	and	0	0.1	
(p / promise-01 
      :ARG0 (i / it 
            :domain-of (d / day)) 
      :ARG1 (a / and 
            :op1 (h / hot)))

# ::snt fish fingers ellip  if youd like to help the desperate plight of east germany send as much money as you can to tim chubbley and he promises to shut up
# ::tok fish fingers ellip if youd like to help the desperate plight of east germany send as much money as you can to tim chubbley and he promises to shut up
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:44.253
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the meeting promised an eventual rerun of the selection contest
# ::tok the meeting promised an eventual rerun of the selection contest
# ::alignments 9-10|0.0.0.0 8-9|0.0.0 4-5|0.1 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:44.277
# ::node	0	promise-01	2-3
# ::node	0.0	meet-03	1-2
# ::node	0.0.0	select-01	8-9
# ::node	0.0.0.0	contest-00	9-10
# ::node	0.1	eventual	4-5
# ::root	0	promise-01
# ::edge	contest-00	ARG1	select-01	0.0.0.0	0.0.0	
# ::edge	promise-01	ARG0	meet-03	0	0.0	
# ::edge	promise-01	ARG1	eventual	0	0.1	
# ::edge	select-01	ARG1	meet-03	0.0.0	0.0	
(p / promise-01 
      :ARG0 (m / meet-03 
            :ARG1-of (s / select-01 
                  :ARG1-of (c / contest-00))) 
      :ARG1 (e / eventual))

# ::snt the hindu promised fresh disclosures the next day but wednesdays paper contained no more reports
# ::tok the hindu promised fresh disclosures the next day but wednesdays paper contained no more reports
# ::alignments 14-15|0.1.1 12-13|0.1.2 11-12|0.1 10-11|0.1.0 8-9|0 7-8|0.0.0 6-7|0.0.0.0 3-4|0.1.1.0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:44.310
# ::node	0	contrast-01	8-9
# ::node	0.0	promise-01	2-3
# ::node	0.0.0	day	7-8
# ::node	0.0.0.0	next	6-7
# ::node	0.1	contain-01	11-12
# ::node	0.1.0	paper	10-11
# ::node	0.1.1	report-01	14-15
# ::node	0.1.1.0	fresh	3-4
# ::node	0.1.2	-	12-13
# ::root	0	contrast-01
# ::edge	contain-01	ARG0	paper	0.1	0.1.0	
# ::edge	contain-01	ARG1	report-01	0.1	0.1.1	
# ::edge	contain-01	polarity	-	0.1	0.1.2	
# ::edge	contrast-01	ARG1	promise-01	0	0.0	
# ::edge	contrast-01	ARG2	contain-01	0	0.1	
# ::edge	day	mod	next	0.0.0	0.0.0.0	
# ::edge	promise-01	time	day	0.0	0.0.0	
# ::edge	report-01	ARG1	fresh	0.1.1	0.1.1.0	
(c2 / contrast-01 
      :ARG1 (p2 / promise-01 
            :time (d / day 
                  :mod (n / next))) 
      :ARG2 (c / contain-01 
            :ARG0 (p / paper) 
            :ARG1 (r / report-01 
                  :ARG1 (f / fresh)) 
            :polarity (- / -)))

# ::snt do we have a chance of beating the soviets the president inquires by putting a laboratory in space or by a trip around the moon or by a rocket to land on the moon or by a rocket to go to the moon and back with a man was there any other space effort which promises dramatic results in which we could win the president further instructed johnson to find out whether work was going on 24 hours day and if not why not
# ::tok do we have a chance of beating the soviets the president inquires by putting a laboratory in space or by a trip around the moon or by a rocket to land on the moon or by a rocket to go to the moon and back with a man was there any other space effort which promises dramatic results in which we could win the president further instructed johnson to find out whether work was going on 24 hours day and if not why not
# ::alignments 79-80|0.0.0.1.0 78-79|0.0.0.0.0 77-78|0.0.1.0.0.0.0+0.0.1.0.0.0 76-77|0.0.1.0.0 66-67|0.0.0.1 65-66|0.0.0.1.1 64-65|0.0.1+0.0.1.0 62-63|0.0 61-62|0 60-61|0.0.0 57-58|0.0.0.0 56-57|0.0.0.0.2 55-56|0.0.0.0.1 53-54|0.0.0.0.1.0 52-53|0.0.0.0.1.0.2 51-52|0.0.0.0.1.0.1 50-51|0.0.0.0.1.0.3 47-48|0.0.0.0.1.0.0 44-45|0.0.0.0.1.0.0.0.1.0.0.0 43-44|0.0.0.0.1.0.0.0 42-43|0.0.0.0.1.0.0.0.2 37-38|0.0.0.0.1.0.0.0.1.0.0.1.1 34-35|0.0.0.0.1.0.0.0.1.0.0.1.1.0 33-34|0.0.0.0.1.0.0.0.0.1.1 30-31|0.0.0.0.1.0.0.0.1.0.0.1.0.0 28-29|0.0.0.0.1.0.0.0.1.0.0.1.0 25-26|0.0.0.0.1.0.0.0.1.0.0.1 24-25|0.0.0.0.1.0.0.0.1.0.0.2.0 22-23|0.0.0.0.1.0.0.0.1.0.0.2 21-22|0.0.0.0.1.0.0.0.1.0.0 18-19|0.0.0.0.1.0.0.0.1.0 17-18|0.0.0.0.1.0.0.0.1.2 15-16|0.0.0.0.1.0.0.0.1.1 13-14|0.0.0.0.1.0.0.0.1 10-11|0.0.0.0.1.0.0.0.0.1.0+0.0.0.0.1.0.0.0.0.1 6-7|0.0.0.0.1.0.0.0.0 4-5|0.0.0.0.1.0.0.0.0.2 1-2|0.0.0.0.1.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:47.053
# ::node	0	possible	61-62
# ::node	0.0	win-01	62-63
# ::node	0.0.0	we	60-61
# ::node	0.0.0.0	result-01	57-58
# ::node	0.0.0.0.0	day	78-79
# ::node	0.0.0.0.1	promise-01	55-56
# ::node	0.0.0.0.1.0	effort	53-54
# ::node	0.0.0.0.1.0.0	man	47-48
# ::node	0.0.0.0.1.0.0.0	and	43-44
# ::node	0.0.0.0.1.0.0.0.0	beat-01	6-7
# ::node	0.0.0.0.1.0.0.0.0.0	we	1-2
# ::node	0.0.0.0.1.0.0.0.0.1	have-org-role-91	10-11
# ::node	0.0.0.0.1.0.0.0.0.1.0	president	10-11
# ::node	0.0.0.0.1.0.0.0.0.1.1	moon	33-34
# ::node	0.0.0.0.1.0.0.0.0.2	chance	4-5
# ::node	0.0.0.0.1.0.0.0.1	put-01	13-14
# ::node	0.0.0.0.1.0.0.0.1.0	or	18-19
# ::node	0.0.0.0.1.0.0.0.1.0.0	trip-01	21-22
# ::node	0.0.0.0.1.0.0.0.1.0.0.0	back	44-45
# ::node	0.0.0.0.1.0.0.0.1.0.0.1	or	25-26
# ::node	0.0.0.0.1.0.0.0.1.0.0.1.0	rocket	28-29
# ::node	0.0.0.0.1.0.0.0.1.0.0.1.0.0	land	30-31
# ::node	0.0.0.0.1.0.0.0.1.0.0.1.1	rocket	37-38
# ::node	0.0.0.0.1.0.0.0.1.0.0.1.1.0	or	34-35
# ::node	0.0.0.0.1.0.0.0.1.0.0.2	around	22-23
# ::node	0.0.0.0.1.0.0.0.1.0.0.2.0	moon	24-25
# ::node	0.0.0.0.1.0.0.0.1.1	laboratory	15-16
# ::node	0.0.0.0.1.0.0.0.1.2	space	17-18
# ::node	0.0.0.0.1.0.0.0.2	moon	42-43
# ::node	0.0.0.0.1.0.1	other	51-52
# ::node	0.0.0.0.1.0.2	space	52-53
# ::node	0.0.0.0.1.0.3	any	50-51
# ::node	0.0.0.0.2	dramatic	56-57
# ::node	0.0.0.1	instruct-01	66-67
# ::node	0.0.0.1.0	and	79-80
# ::node	0.0.0.1.1	further	65-66
# ::node	0.0.1	president	64-65
# ::node	0.0.1.0	have-org-role-91	64-65
# ::node	0.0.1.0.0	24	76-77
# ::node	0.0.1.0.0.0	temporal-quantity	77-78
# ::node	0.0.1.0.0.0.0	hour	77-78
# ::root	0	possible
# ::edge	and	op1	beat-01	0.0.0.0.1.0.0.0	0.0.0.0.1.0.0.0.0	
# ::edge	and	op2	put-01	0.0.0.0.1.0.0.0	0.0.0.0.1.0.0.0.1	
# ::edge	and	op3	moon	0.0.0.0.1.0.0.0	0.0.0.0.1.0.0.0.2	
# ::edge	and	op4	man	0.0.0.0.1.0.0.0	0.0.0.0.1.0.0	
# ::edge	around	op1	moon	0.0.0.0.1.0.0.0.1.0.0.2	0.0.0.0.1.0.0.0.1.0.0.2.0	
# ::edge	beat-01	ARG0	we	0.0.0.0.1.0.0.0.0	0.0.0.0.1.0.0.0.0.0	
# ::edge	beat-01	condition	have-org-role-91	0.0.0.0.1.0.0.0.0	0.0.0.0.1.0.0.0.0.1	
# ::edge	chance	mod	beat-01	0.0.0.0.1.0.0.0.0.2	0.0.0.0.1.0.0.0.0	
# ::edge	effort	domain	man	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	effort	mod	any	0.0.0.0.1.0	0.0.0.0.1.0.3	
# ::edge	effort	mod	other	0.0.0.0.1.0	0.0.0.0.1.0.1	
# ::edge	effort	mod	space	0.0.0.0.1.0	0.0.0.0.1.0.2	
# ::edge	have-org-role-91	ARG1	24	0.0.1.0	0.0.1.0.0	
# ::edge	have-org-role-91	ARG2	president	0.0.0.0.1.0.0.0.0.1	0.0.0.0.1.0.0.0.0.1.0	
# ::edge	have-org-role-91	ARG2	president	0.0.1.0	0.0.1	
# ::edge	instruct-01	ARG0	we	0.0.0.1	0.0.0	
# ::edge	instruct-01	ARG1	and	0.0.0.1	0.0.0.1.0	
# ::edge	instruct-01	degree	further	0.0.0.1	0.0.0.1.1	
# ::edge	moon	op1	have-org-role-91	0.0.0.0.1.0.0.0.0.1.1	0.0.0.0.1.0.0.0.0.1	
# ::edge	or	op1	rocket	0.0.0.0.1.0.0.0.1.0.0.1	0.0.0.0.1.0.0.0.1.0.0.1.0	
# ::edge	or	op1	rocket	0.0.0.0.1.0.0.0.1.0.0.1.1.0	0.0.0.0.1.0.0.0.1.0.0.1.1	
# ::edge	or	op1	trip-01	0.0.0.0.1.0.0.0.1.0	0.0.0.0.1.0.0.0.1.0.0	
# ::edge	or	op2	rocket	0.0.0.0.1.0.0.0.1.0.0.1	0.0.0.0.1.0.0.0.1.0.0.1.1	
# ::edge	possible	domain	win-01	0	0.0	
# ::edge	promise-01	ARG0	effort	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	promise-01	ARG1	result-01	0.0.0.0.1	0.0.0.0	
# ::edge	put-01	ARG0	or	0.0.0.0.1.0.0.0.1	0.0.0.0.1.0.0.0.1.0	
# ::edge	put-01	ARG1	laboratory	0.0.0.0.1.0.0.0.1	0.0.0.0.1.0.0.0.1.1	
# ::edge	put-01	ARG2	space	0.0.0.0.1.0.0.0.1	0.0.0.0.1.0.0.0.1.2	
# ::edge	result-01	ARG0	we	0.0.0.0	0.0.0	
# ::edge	result-01	ARG1	day	0.0.0.0	0.0.0.0.0	
# ::edge	result-01	manner	dramatic	0.0.0.0	0.0.0.0.2	
# ::edge	rocket	mod	land	0.0.0.0.1.0.0.0.1.0.0.1.0	0.0.0.0.1.0.0.0.1.0.0.1.0.0	
# ::edge	temporal-quantity	quant	24	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	temporal-quantity	unit	hour	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	trip-01	ARG0	back	0.0.0.0.1.0.0.0.1.0.0	0.0.0.0.1.0.0.0.1.0.0.0	
# ::edge	trip-01	ARG1	or	0.0.0.0.1.0.0.0.1.0.0	0.0.0.0.1.0.0.0.1.0.0.1	
# ::edge	trip-01	location	around	0.0.0.0.1.0.0.0.1.0.0	0.0.0.0.1.0.0.0.1.0.0.2	
# ::edge	win-01	ARG0	we	0.0	0.0.0	
# ::edge	win-01	ARG1	president	0.0	0.0.1	
(p2 / possible 
      :domain (w / win-01 
            :ARG0 (w2 / we 
                  :ARG0-of (r / result-01 
                        :ARG1 (d / day) 
                        :ARG1-of (p3 / promise-01 
                              :ARG0 (e / effort 
                                    :domain (m / man 
                                          :op-of (a3 / and 
                                                :op1 (b2 / beat-01 
                                                      :ARG0 (w3 / we) 
                                                      :condition (h3 / have-org-role-91 
                                                            :ARG2 (p5 / president) 
                                                            :op-of (m3 / moon)) 
                                                      :mod-of (c / chance)) 
                                                :op2 (p4 / put-01 
                                                      :ARG0 (o4 / or 
                                                            :op1 (t2 / trip-01 
                                                                  :ARG0 (b / back) 
                                                                  :ARG1 (o3 / or 
                                                                        :op1 (r3 / rocket 
                                                                              :mod (l / land)) 
                                                                        :op2 (r2 / rocket 
                                                                              :op-of (o2 / or))) 
                                                                  :location (a4 / around 
                                                                        :op1 (m4 / moon)))) 
                                                      :ARG1 (l2 / laboratory) 
                                                      :ARG2 (s2 / space)) 
                                                :op3 (m2 / moon))) 
                                    :mod (o / other) 
                                    :mod (s / space) 
                                    :mod (a2 / any))) 
                        :manner (d2 / dramatic)) 
                  :ARG0-of (i / instruct-01 
                        :ARG1 (a / and) 
                        :degree (f / further))) 
            :ARG1 (p / president 
                  :ARG2-of (h2 / have-org-role-91 
                        :ARG1 (2 / 24 
                              :quant-of (t / temporal-quantity 
                                    :unit (h / hour)))))))

# ::snt i promised genevieve trevaunce id check on her sister
# ::tok i promised genevieve trevaunce id check on her sister
# ::alignments 8-9|0.1.0.0+0.1.0 4-5|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:47.086
# ::node	0	promise-01	1-2
# ::node	0.0	i	0-1
# ::node	0.1	id	4-5
# ::node	0.1.0	have-rel-role-91	8-9
# ::node	0.1.0.0	sister	8-9
# ::root	0	promise-01
# ::edge	have-rel-role-91	ARG2	sister	0.1.0	0.1.0.0	
# ::edge	id	purpose	have-rel-role-91	0.1	0.1.0	
# ::edge	promise-01	ARG0	i	0	0.0	
# ::edge	promise-01	ARG1	id	0	0.1	
(p / promise-01 
      :ARG0 (i2 / i) 
      :ARG1 (i / id 
            :purpose (h / have-rel-role-91 
                  :ARG2 (s / sister))))

# ::snt mr mladenov 53 who took over from todor zhivkov on friday promised sweeping reforms in bulgarias centralised economic structure and more say for ordinary people in public affairs within the framework of socialism
# ::tok mr mladenov 53 who took over from todor zhivkov on friday promised sweeping reforms in bulgarias centralised economic structure and more say for ordinary people in public affairs within the framework of socialism
# ::alignments 32-33|0.2.0.1 30-31|0.2.0 28-29|0.2.0.0 27-28|0.2 26-27|0.2.1 23-24|0.1.0.1.1.0 21-22|0 19-20|0.1 18-19|0.1.0.1.0.0 17-18|0.1.0.1.0 13-14|0.1.0.1 12-13|0.1.0.1.1 11-12|0.1.0 10-11|0.1.0.0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:47.413
# ::node	0	say-01	21-22
# ::node	0.0	53	2-3
# ::node	0.1	and	19-20
# ::node	0.1.0	promise-01	11-12
# ::node	0.1.0.0	friday	10-11
# ::node	0.1.0.1	reform-01	13-14
# ::node	0.1.0.1.0	economy	17-18
# ::node	0.1.0.1.0.0	structure	18-19
# ::node	0.1.0.1.1	sweep-01	12-13
# ::node	0.1.0.1.1.0	ordinary	23-24
# ::node	0.2	affair	27-28
# ::node	0.2.0	framework	30-31
# ::node	0.2.0.0	within	28-29
# ::node	0.2.0.1	socialism	32-33
# ::node	0.2.1	public	26-27
# ::root	0	say-01
# ::edge	affair	location	framework	0.2	0.2.0	
# ::edge	affair	mod	public	0.2	0.2.1	
# ::edge	framework	poss	socialism	0.2.0	0.2.0.1	
# ::edge	promise-01	ARG0	and	0.1.0	0.1	
# ::edge	promise-01	ARG1	friday	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG2	reform-01	0.1.0	0.1.0.1	
# ::edge	reform-01	ARG1	economy	0.1.0.1	0.1.0.1.0	
# ::edge	say-01	ARG0	53	0	0.0	
# ::edge	say-01	ARG1	and	0	0.1	
# ::edge	say-01	purpose	affair	0	0.2	
# ::edge	structure	mod	economy	0.1.0.1.0.0	0.1.0.1.0	
# ::edge	sweep-01	ARG0	ordinary	0.1.0.1.1	0.1.0.1.1.0	
# ::edge	sweep-01	ARG1	reform-01	0.1.0.1.1	0.1.0.1	
# ::edge	within	op1	framework	0.2.0.0	0.2.0	
(s2 / say-01 
      :ARG0 53 
      :ARG1 (a2 / and 
            :ARG0-of (p2 / promise-01 
                  :ARG1 (f2 / friday) 
                  :ARG2 (r / reform-01 
                        :ARG1 (e / economy 
                              :mod-of (s3 / structure)) 
                        :ARG1-of (s4 / sweep-01 
                              :ARG0 (o / ordinary))))) 
      :purpose (a / affair 
            :location (f / framework 
                  :op-of (w / within) 
                  :poss (s / socialism)) 
            :mod (p / public)))

# ::snt all i can promise you is a spectacle
# ::tok all i can promise you is a spectacle
# ::alignments 7-8|0 4-5|0.1 3-4|0.0 2-3|0.0.2 1-2|0.0.0 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:47.513
# ::node	0	spectacle	7-8
# ::node	0.0	promise-01	3-4
# ::node	0.0.0	i	1-2
# ::node	0.0.1	all	0-1
# ::node	0.0.2	possible	2-3
# ::node	0.1	you	4-5
# ::root	0	spectacle
# ::edge	promise-01	ARG0	i	0.0	0.0.0	
# ::edge	promise-01	ARG1	all	0.0	0.0.1	
# ::edge	promise-01	concession	spectacle	0.0	0	
# ::edge	promise-01	mod	possible	0.0	0.0.2	
# ::edge	spectacle	domain	you	0	0.1	
(s / spectacle 
      :concession-of (p / promise-01 
            :ARG0 (i / i) 
            :ARG1 (a / all) 
            :mod (p2 / possible)) 
      :domain (y / you))

# ::snt   dr kavanagh who is a director of the goldsmith press promises to be in dublin to fight his sacred keepers corner in court
# ::tok dr kavanagh who is a director of the goldsmith press promises to be in dublin to fight his sacred keepers corner in court
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:47.513
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the forecasts promised several days of hot weather and because he had help in the house moran decided to cut all the meadows
# ::tok the forecasts promised several days of hot weather and because he had help in the house moran decided to cut all the meadows
# ::alignments 20-21|0.0.0.0.0.0 17-18|0.0.2 15-16|0.0.1 12-13|0.0 10-11|0.0.0 9-10|0 8-9|0.0.0.0.1.1 7-8|0.0.0.0.1.1.0 6-7|0.0.0.0.1.1.0.0 4-5|0.0.0.0.1.2+0.0.0.0.1 3-4|0.0.0.0.1.0 2-3|0.0.0.0 1-2|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:47.736
# ::node	0	cause-01	9-10
# ::node	0.0	help-01	12-13
# ::node	0.0.0	he	10-11
# ::node	0.0.0.0	promise-01	2-3
# ::node	0.0.0.0.0	forecast-01	1-2
# ::node	0.0.0.0.0.0	all	20-21
# ::node	0.0.0.0.1	temporal-quantity	4-5
# ::node	0.0.0.0.1.0	several	3-4
# ::node	0.0.0.0.1.1	and	8-9
# ::node	0.0.0.0.1.1.0	weather	7-8
# ::node	0.0.0.0.1.1.0.0	hot	6-7
# ::node	0.0.0.0.1.2	day	4-5
# ::node	0.0.1	house	15-16
# ::node	0.0.2	decide-01	17-18
# ::root	0	cause-01
# ::edge	and	op1	weather	0.0.0.0.1.1	0.0.0.0.1.1.0	
# ::edge	cause-01	ARG0	help-01	0	0.0	
# ::edge	decide-01	ARG1	help-01	0.0.2	0.0	
# ::edge	forecast-01	ARG1	all	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	help-01	ARG0	he	0.0	0.0.0	
# ::edge	help-01	ARG1	house	0.0	0.0.1	
# ::edge	promise-01	ARG0	he	0.0.0.0	0.0.0	
# ::edge	promise-01	ARG1	forecast-01	0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	ARG2	temporal-quantity	0.0.0.0	0.0.0.0.1	
# ::edge	several	op1	temporal-quantity	0.0.0.0.1.0	0.0.0.0.1	
# ::edge	temporal-quantity	topic	and	0.0.0.0.1	0.0.0.0.1.1	
# ::edge	temporal-quantity	unit	day	0.0.0.0.1	0.0.0.0.1.2	
# ::edge	weather	mod	hot	0.0.0.0.1.1.0	0.0.0.0.1.1.0.0	
(c / cause-01 
      :ARG0 (h2 / help-01 
            :ARG0 (h3 / he 
                  :ARG0-of (p / promise-01 
                        :ARG1 (f / forecast-01 
                              :ARG1 (a / all)) 
                        :ARG2 (t / temporal-quantity 
                              :op-of (s / several) 
                              :topic (a2 / and 
                                    :op1 (w / weather 
                                          :mod (h4 / hot))) 
                              :unit (d2 / day)))) 
            :ARG1 (h / house) 
            :ARG1-of (d / decide-01)))

# ::snt as a result kuwait and the united arab emirates the other big overproducer were forced to promise to be good in future dash, although in the case of the emirates the promise is fairly hollow as the two main oilproducing components of that unlikely country abu dhabi and dubai are frequently at odds with each other
# ::tok as a result kuwait and the united arab emirates the other big overproducer were forced to promise to be good in future dash , although in the case of the emirates the promise is fairly hollow as the two main oilproducing components of that unlikely country abu dhabi and dubai are frequently at odds with each other
# ::alignments 56-57|0.0.3.0 55-56|0.0.3 53-54|0.0.4 51-52|0.1 48-49|0 45-46|0.0.0.0.1.0 44-45|0.0.0.0.1.0.0.0+0.0.0.0.1.0.0 41-42|0.0.0.1 39-40|0.0.0.1.0 38-39|0.0.0.1.1 35-36|0.0.0 34-35|0.0.0.2 32-33|0.0 27-28|0.0.5 21-22|0.0.0.0.2.0.0 19-20|0.0.0.0.1.1 16-17|0.0.0.0.1 14-15|0.0.0.0 11-12|0.0.1 10-11|0.0.2 6-9|0.0.0.0.0.0.0+0.0.0.0.0.0.1+0.0.0.0.0.0.2+0.0.0.0.0.0+0.0.0.0.0 4-5|0.0.0.0.2 2-3|0.0.0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:48.222
# ::node	0	and	48-49
# ::node	0.0	promise-01	32-33
# ::node	0.0.0	hollow	35-36
# ::node	0.0.0.0	force-01	14-15
# ::node	0.0.0.0.0	country	6-9
# ::node	0.0.0.0.0.0	name	6-9
# ::node	0.0.0.0.0.0.0	"emirates"	6-9
# ::node	0.0.0.0.0.0.1	"arab"	6-9
# ::node	0.0.0.0.0.0.2	"united"	6-9
# ::node	0.0.0.0.1	promise-01	16-17
# ::node	0.0.0.0.1.0	country	45-46
# ::node	0.0.0.0.1.0.0	likely	44-45
# ::node	0.0.0.0.1.0.0.0	-	44-45
# ::node	0.0.0.0.1.1	good	19-20
# ::node	0.0.0.0.2	and	4-5
# ::node	0.0.0.0.2.0	result-01	2-3
# ::node	0.0.0.0.2.0.0	future	21-22
# ::node	0.0.0.1	component	41-42
# ::node	0.0.0.1.0	main	39-40
# ::node	0.0.0.1.1	2	38-39
# ::node	0.0.0.2	fair	34-35
# ::node	0.0.1	big	11-12
# ::node	0.0.2	other	10-11
# ::node	0.0.3	each	55-56
# ::node	0.0.3.0	other	56-57
# ::node	0.0.4	odds	53-54
# ::node	0.0.5	case	27-28
# ::node	0.1	frequent	51-52
# ::root	0	and
# ::edge	and	op1	force-01	0.0.0.0.2	0.0.0.0	
# ::edge	and	op1	frequent	0	0.1	
# ::edge	big	op1	promise-01	0.0.1	0.0	
# ::edge	case	time	promise-01	0.0.5	0.0	
# ::edge	component	mod	main	0.0.0.1	0.0.0.1.0	
# ::edge	component	quant	2	0.0.0.1	0.0.0.1.1	
# ::edge	country	mod	likely	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	country	name	name	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	each	op1	promise-01	0.0.3	0.0	
# ::edge	force-01	ARG0	country	0.0.0.0	0.0.0.0.0	
# ::edge	force-01	ARG1	hollow	0.0.0.0	0.0.0	
# ::edge	force-01	ARG2	promise-01	0.0.0.0	0.0.0.0.1	
# ::edge	hollow	condition	component	0.0.0	0.0.0.1	
# ::edge	hollow	degree	fair	0.0.0	0.0.0.2	
# ::edge	hollow	domain	promise-01	0.0.0	0.0	
# ::edge	likely	polarity	-	0.0.0.0.1.0.0	0.0.0.0.1.0.0.0	
# ::edge	name	op1	"emirates"	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	name	op2	"arab"	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	name	op3	"united"	0.0.0.0.0.0	0.0.0.0.0.0.2	
# ::edge	odds	op1	promise-01	0.0.4	0.0	
# ::edge	other	mod	each	0.0.3.0	0.0.3	
# ::edge	other	op1	promise-01	0.0.2	0.0	
# ::edge	promise-01	ARG0	country	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	promise-01	ARG1	good	0.0.0.0.1	0.0.0.0.1.1	
# ::edge	promise-01	ARG2	and	0.0	0	
# ::edge	result-01	ARG0	future	0.0.0.0.2.0	0.0.0.0.2.0.0	
# ::edge	result-01	ARG1	and	0.0.0.0.2.0	0.0.0.0.2	
(a / and 
      :ARG2-of (p / promise-01 
            :domain-of (h / hollow 
                  :ARG1-of (f4 / force-01 
                        :ARG0 (c4 / country 
                              :name (n / name 
                                    :op1 "emirates" 
                                    :op2 "arab" 
                                    :op3 "united")) 
                        :ARG2 (p2 / promise-01 
                              :ARG0 (c / country 
                                    :mod (l / likely 
                                          :polarity -)) 
                              :ARG1 (g / good)) 
                        :op-of (a2 / and 
                              :ARG1-of (r / result-01 
                                    :ARG0 (f3 / future)))) 
                  :condition (c2 / component 
                        :mod (m / main) 
                        :quant 2) 
                  :degree (f2 / fair)) 
            :op-of (b / big) 
            :op-of (o3 / other) 
            :op-of (e / each 
                  :mod-of (o / other)) 
            :op-of (o2 / odds) 
            :time-of (c3 / case)) 
      :op1 (f / frequent))

# ::snt the scotland manager was furious when nicol and gillespie failed to appear for last months trip to genoa and promised to give preferential treatment to those players who did turn up
# ::tok the scotland manager was furious when nicol and gillespie failed to appear for last months trip to genoa and promised to give preferential treatment to those players who did turn up
# ::alignments 26-27|0.0.1.0.0+0.0.1.0 23-24|0.0 22-23|0 21-22|0.0.1 19-20|0.0.1.1 18-19|0.0.1.1.0 15-16|0.0.1.1.0.0.2.0 14-15|0.0.1.1.0.0.2.0.0.0+0.0.1.1.0.0.2.0.0 13-14|0.0.0 11-12|0.0.1.1.0.0.2 9-10|0.0.1.1.0.0 7-8|0.0.1.1.0.0.0 4-5|0.0.1.1.0.0.1.1 2-3|0.0.1.1.0.0.1 1-2|0.0.1.1.0.0.1.0.0.0+0.0.1.1.0.0.1.0.0+0.0.1.1.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:48.417
# ::node	0	prefer-01	22-23
# ::node	0.0	treat-03	23-24
# ::node	0.0.0	last	13-14
# ::node	0.0.1	give-01	21-22
# ::node	0.0.1.0	person	26-27
# ::node	0.0.1.0.0	play-01	26-27
# ::node	0.0.1.1	promise-01	19-20
# ::node	0.0.1.1.0	and	18-19
# ::node	0.0.1.1.0.0	fail-01	9-10
# ::node	0.0.1.1.0.0.0	and	7-8
# ::node	0.0.1.1.0.0.1	manage-01	2-3
# ::node	0.0.1.1.0.0.1.0	country	1-2
# ::node	0.0.1.1.0.0.1.0.0	name	1-2
# ::node	0.0.1.1.0.0.1.0.0.0	"Scotland"	1-2
# ::node	0.0.1.1.0.0.1.1	furious	4-5
# ::node	0.0.1.1.0.0.2	appear-02	11-12
# ::node	0.0.1.1.0.0.2.0	trip-01	15-16
# ::node	0.0.1.1.0.0.2.0.0	temporal-quantity	14-15
# ::node	0.0.1.1.0.0.2.0.0.0	month	14-15
# ::root	0	prefer-01
(p3 / prefer-01 
      :mod-of (t / treat-03 
            :ARG1 (l / last) 
            :ARG1-of (g / give-01 
                  :ARG2 (p / person 
                        :ARG0-of (p2 / play-01)) 
                  :ARG2-of (p4 / promise-01 
                        :op-of (a / and 
                              :op1 (f / fail-01 
                                    :ARG0 (a3 / and) 
                                    :ARG1 (m2 / manage-01 
                                          :ARG1 (c / country 
                                                :name (n / name 
                                                      :op1 "Scotland")) 
                                          :domain-of (f2 / furious)) 
                                    :ARG2 (a2 / appear-02 
                                          :ARG1 (t2 / trip-01 
                                                :ARG1 (t3 / temporal-quantity 
                                                      :unit (m / month))))))))))

# ::snt tickets for the opens are 10 with entry 30 for the bigmoney classic which promises 1500 to the winner down to 100 for seventh and 16 50 section prizes
# ::tok tickets for the opens are 10 with entry 30 for the bigmoney classic which promises 1500 to the winner down to 100 for seventh and 16 50 section prizes
# ::alignments 27-28|0.0.0 26-27|0.0.2 25-26|0.0.3 24-25|0 21-22|0.1.1.0 19-20|0.1.1 15-16|0.1.2.0+0.1.2 14-15|0.1 12-13|0.1.0 8-9|0.0.1 5-6|0.0.2.0 3-4|0.0 0-1|0.0.4 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:48.585
# ::node	0	and	24-25
# ::node	0.0	open-01	3-4
# ::node	0.0.0	section	27-28
# ::node	0.0.1	30	8-9
# ::node	0.0.2	50	26-27
# ::node	0.0.2.0	10	5-6
# ::node	0.0.3	16	25-26
# ::node	0.0.4	ticket	0-1
# ::node	0.1	promise-01	14-15
# ::node	0.1.0	classic	12-13
# ::node	0.1.1	down	19-20
# ::node	0.1.1.0	100	21-22
# ::node	0.1.2	date-entity	15-16
# ::node	0.1.2.0	1500	15-16
# ::root	0	and
# ::edge	100	mod	down	0.1.1.0	0.1.1	
# ::edge	16	op1	open-01	0.0.3	0.0	
# ::edge	50	op1	open-01	0.0.2	0.0	
# ::edge	50	poss	10	0.0.2	0.0.2.0	
# ::edge	and	op1	open-01	0	0.0	
# ::edge	and	op2	promise-01	0	0.1	
# ::edge	date-entity	year	1500	0.1.2	0.1.2.0	
# ::edge	open-01	ARG1	section	0.0	0.0.0	
# ::edge	open-01	ARG2	30	0.0	0.0.1	
# ::edge	promise-01	ARG0	classic	0.1	0.1.0	
# ::edge	promise-01	ARG2	down	0.1	0.1.1	
# ::edge	promise-01	time	date-entity	0.1	0.1.2	
# ::edge	ticket	topic	open-01	0.0.4	0.0	
(a / and 
      :op1 (o / open-01 
            :ARG1 (s / section) 
            :ARG2 30 
            :op-of (5 / 50 
                  :poss 10) 
            :op-of 16 
            :topic-of (t / ticket)) 
      :op2 (p / promise-01 
            :ARG0 (c / classic) 
            :ARG2 (d / down 
                  :mod-of 100) 
            :time (d2 / date-entity 
                  :year 1500)))

# ::snt he has spent two years on a shoestring budget developing what promises to be the ski accessory this winter
# ::tok he has spent two years on a shoestring budget developing what promises to be the ski accessory this winter
# ::alignments 18-19|0.0.0 17-18|0.0.0.0 16-17|0 11-12|0.0 9-10|0.0.1 8-9|0.0.1.0 4-5|0.0.1.1.1.1+0.0.1.1.1 3-4|0.0.1.1.1.0 2-3|0.0.1.1 0-1|0.0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:48.743
# ::node	0	accessory	16-17
# ::node	0.0	promise-01	11-12
# ::node	0.0.0	winter	18-19
# ::node	0.0.0.0	this	17-18
# ::node	0.0.1	develop-02	9-10
# ::node	0.0.1.0	budget	8-9
# ::node	0.0.1.1	spend-01	2-3
# ::node	0.0.1.1.0	he	0-1
# ::node	0.0.1.1.1	temporal-quantity	4-5
# ::node	0.0.1.1.1.0	2	3-4
# ::node	0.0.1.1.1.1	year	4-5
# ::root	0	accessory
(a / accessory 
      :ARG1-of (p / promise-01 
            :ARG0 (w / winter 
                  :mod (t / this)) 
            :ARG1-of (d / develop-02 
                  :ARG0 (b / budget) 
                  :purpose-of (s / spend-01 
                        :ARG0 (h / he) 
                        :ARG1 (t2 / temporal-quantity 
                              :quant 2 
                              :unit (y / year))))))

# ::snt but it is only chapter one in what promises to be a long saga
# ::tok but it is only chapter one in what promises to be a long saga
# ::alignments 8-9|0.0.0 4-5|0.0 3-4|0.0.1 1-2|0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:48.759
# ::node	0	contrast-01	0-1
# ::node	0.0	chapter	4-5
# ::node	0.0.0	promise-01	8-9
# ::node	0.0.1	only	3-4
# ::node	0.1	it	1-2
# ::root	0	contrast-01
# ::edge	chapter	mod	only	0.0	0.0.1	
# ::edge	contrast-01	ARG1	chapter	0	0.0	
# ::edge	contrast-01	ARG2	it	0	0.1	
# ::edge	promise-01	ARG1	chapter	0.0.0	0.0	
(c2 / contrast-01 
      :ARG1 (c / chapter 
            :ARG1-of (p / promise-01) 
            :mod (o / only)) 
      :ARG2 (i / it))

# ::snt does it mean that electricity workers could strike in support of miners because they have a genuine interest in the impact that the price of coal has on the demand for electricity  second mr meacher has promised to make it impossible for an employer to get an injunction to stop an unlawful strike
# ::tok does it mean that electricity workers could strike in support of miners because they have a genuine interest in the impact that the price of coal has on the demand for electricity second mr meacher has promised to make it impossible for an employer to get an injunction to stop an unlawful strike
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:48.762
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt but the new healthier breed of rabbit is proving no joke for farmers and rabbits are now beginning to take a big bite out of cereal profit margins in what is already promising to be a difficult year
# ::tok but the new healthier breed of rabbit is proving no joke for farmers and rabbits are now beginning to take a big bite out of cereal profit margins in what is already promising to be a difficult year
# ::alignments 37-38|0.0.0.0.0.0.0.0.0 36-37|0.0.0.0.0.0.0.0.0.0 32-33|0.0.0.0.0.0.0.0 31-32|0.0.0.0.0.0.0.0.1 27-28|0.0.0.0.0.0 26-27|0.0.0.0.0.0.0 22-23|0.0.0.0 21-22|0.0.0.0.1 17-18|0.0.0.0.0 16-17|0.0.0.0.0.2 13-14|0.0.0.0.0.1 12-13|0.0.0.0.0.1.0.0+0.0.0.0.0.1.0 10-11|0.0.0.1 9-10|0.0.0.1.0 8-9|0.0.0 4-5|0.0 2-3|0.0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:49.568
# ::node	0	contrast-01	0-1
# ::node	0.0	breed-01	4-5
# ::node	0.0.0	prove-01	8-9
# ::node	0.0.0.0	bite	22-23
# ::node	0.0.0.0.0	begin-01	17-18
# ::node	0.0.0.0.0.0	margin	27-28
# ::node	0.0.0.0.0.0.0	profit-01	26-27
# ::node	0.0.0.0.0.0.0.0	promise-01	32-33
# ::node	0.0.0.0.0.0.0.0.0	year	37-38
# ::node	0.0.0.0.0.0.0.0.0.0	difficult	36-37
# ::node	0.0.0.0.0.0.0.0.1	already	31-32
# ::node	0.0.0.0.0.1	and	13-14
# ::node	0.0.0.0.0.1.0	person	12-13
# ::node	0.0.0.0.0.1.0.0	farm-01	12-13
# ::node	0.0.0.0.0.2	now	16-17
# ::node	0.0.0.0.1	big	21-22
# ::node	0.0.0.1	joke-01	10-11
# ::node	0.0.0.1.0	-	9-10
# ::node	0.0.1	new	2-3
# ::root	0	contrast-01
# ::edge	and	op1	person	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	and	op2	begin-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	begin-01	ARG0	margin	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	begin-01	ARG1	bite	0.0.0.0.0	0.0.0.0	
# ::edge	begin-01	time	now	0.0.0.0.0	0.0.0.0.0.2	
# ::edge	bite	mod	big	0.0.0.0	0.0.0.0.1	
# ::edge	breed-01	ARG1	prove-01	0.0	0.0.0	
# ::edge	breed-01	mod	new	0.0	0.0.1	
# ::edge	contrast-01	ARG2	breed-01	0	0.0	
# ::edge	farm-01	ARG0	person	0.0.0.0.0.1.0.0	0.0.0.0.0.1.0	
# ::edge	joke-01	polarity	-	0.0.0.1	0.0.0.1.0	
# ::edge	margin	mod	profit-01	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	profit-01	ARG1	promise-01	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	promise-01	ARG1	year	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0	
# ::edge	promise-01	time	already	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.1	
# ::edge	prove-01	ARG0	bite	0.0.0	0.0.0.0	
# ::edge	prove-01	ARG1	joke-01	0.0.0	0.0.0.1	
# ::edge	year	mod	difficult	0.0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0.0	
(c / contrast-01 
      :ARG2 (b4 / breed-01 
            :ARG1 (p4 / prove-01 
                  :ARG0 (b / bite 
                        :ARG1-of (b3 / begin-01 
                              :ARG0 (m / margin 
                                    :mod (p2 / profit-01 
                                          :ARG1 (p / promise-01 
                                                :ARG1 (y / year 
                                                      :mod (d / difficult)) 
                                                :time (a / already)))) 
                              :op-of (a2 / and 
                                    :op1 (p3 / person 
                                          :ARG0-of (f / farm-01))) 
                              :time (n / now)) 
                        :mod (b2 / big)) 
                  :ARG1 (j / joke-01 
                        :polarity (- / -))) 
            :mod (n2 / new)))

# ::snt it has promised 90000 over three years towards running costs and installed dr roscoe howells as chairman
# ::tok it has promised 90000 over three years towards running costs and installed dr roscoe howells as chairman
# ::alignments 16-17|0.0.1.0.1+0.0.1.0 11-12|0.1 10-11|0 9-10|0.0.0.0 6-7|0.0.1.2+0.0.1 5-6|0.0.1.1 3-4|0.0.1.0.0 2-3|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:49.618
# ::node	0	and	10-11
# ::node	0.0	promise-01	2-3
# ::node	0.0.0	it	0-1
# ::node	0.0.0.0	cost-01	9-10
# ::node	0.0.1	temporal-quantity	6-7
# ::node	0.0.1.0	have-org-role-91	16-17
# ::node	0.0.1.0.0	90000	3-4
# ::node	0.0.1.0.1	chairman	16-17
# ::node	0.0.1.1	3	5-6
# ::node	0.0.1.2	year	6-7
# ::node	0.1	install-01	11-12
# ::root	0	and
# ::edge	and	op1	promise-01	0	0.0	
# ::edge	and	op2	install-01	0	0.1	
# ::edge	cost-01	ARG1	it	0.0.0.0	0.0.0	
# ::edge	have-org-role-91	ARG0	temporal-quantity	0.0.1.0	0.0.1	
# ::edge	have-org-role-91	ARG1	90000	0.0.1.0	0.0.1.0.0	
# ::edge	have-org-role-91	ARG2	chairman	0.0.1.0	0.0.1.0.1	
# ::edge	promise-01	ARG0	it	0.0	0.0.0	
# ::edge	promise-01	ARG1	temporal-quantity	0.0	0.0.1	
# ::edge	temporal-quantity	quant	3	0.0.1	0.0.1.1	
# ::edge	temporal-quantity	unit	year	0.0.1	0.0.1.2	
(a / and 
      :op1 (p / promise-01 
            :ARG0 (i2 / it 
                  :ARG1-of (c2 / cost-01)) 
            :ARG1 (t / temporal-quantity 
                  :ARG0-of (h / have-org-role-91 
                        :ARG1 90000 
                        :ARG2 (c / chairman)) 
                  :quant 3 
                  :unit (y / year))) 
      :op2 (i / install-01))

# ::snt no i wont i promise
# ::tok no i wont i promise
# ::alignments 4-5|0 3-4|0.0 1-2|0.2 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:49.654
# ::node	0	promise-01	4-5
# ::node	0.0	i	3-4
# ::node	0.1	-	0-1
# ::node	0.2	i	1-2
# ::root	0	promise-01
# ::edge	promise-01	ARG0	i	0	0.0	
# ::edge	promise-01	ARG1	-	0	0.1	
# ::edge	promise-01	ARG2	i	0	0.2	
(p / promise-01 
      :ARG0 (i / i) 
      :ARG1 (- / -) 
      :ARG2 (i2 / i))

# ::snt hes going to have to hold down tremendous expectations and it wont be long before people ask whats democracy doing for me   mindful of the business leaders and the generals mr aylwin has repeatedly promised to build on the past maintaining an open and competitive economy with clear rules and stability
# ::tok hes going to have to hold down tremendous expectations and it wont be long before people ask whats democracy doing for me mindful of the business leaders and the generals mr aylwin has repeatedly promised to build on the past maintaining an open and competitive economy with clear rules and stability
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:49.656
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the new state premier is wayne goss 38 a liberal lawyer who led the queensland labour party to its first victory in 32 years and promised a new society free from the corruption and political scandals which have afflicted queensland for almost a generation
# ::tok the new state premier is wayne goss 38 a liberal lawyer who led the queensland labour party to its first victory in 32 years and promised a new society free from the corruption and political scandals which have afflicted queensland for almost a generation
# ::alignments 43-44|0.1.1.1.0 41-42|0.1.1.0.0 34-35|0.0.2 33-34|0.1.1.0.1.0 32-33|0.1.1.0.1 29-30|0.1.1.0 28-29|0.1.1 27-28|0.1.1.1 25-26|0.1 24-25|0 23-24|0.1.0.1+0.1.0 22-23|0.1.0.0 16-17|0.0.1 15-16|0.0.1.0 12-13|0.0 10-11|0.0.0 9-10|0.0.0.0 7-8|0.1.1.0.1.0.0.2 5-7|0.1.1.0.1.0.0.1.0+0.1.1.0.1.0.0.1.1+0.1.1.0.1.0.0.1+0.1.1.0.1.0.0 3-4|0.1.1.0.1.0.0.0 2-3|0.1.1.0.1.0.0.0.0 1-2|0.1.1.0.1.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:51.332
# ::node	0	and	24-25
# ::node	0.0	lead-02	12-13
# ::node	0.0.0	lawyer	10-11
# ::node	0.0.0.0	liberal	9-10
# ::node	0.0.1	party	16-17
# ::node	0.0.1.0	labour	15-16
# ::node	0.0.2	politics	34-35
# ::node	0.1	promise-01	25-26
# ::node	0.1.0	temporal-quantity	23-24
# ::node	0.1.0.0	32	22-23
# ::node	0.1.0.1	year	23-24
# ::node	0.1.1	society	28-29
# ::node	0.1.1.0	free-41	29-30
# ::node	0.1.1.0.0	almost	41-42
# ::node	0.1.1.0.1	corrupt-01	32-33
# ::node	0.1.1.0.1.0	and	33-34
# ::node	0.1.1.0.1.0.0	person	5-7
# ::node	0.1.1.0.1.0.0.0	premier	3-4
# ::node	0.1.1.0.1.0.0.0.0	state	2-3
# ::node	0.1.1.0.1.0.0.0.1	new	1-2
# ::node	0.1.1.0.1.0.0.1	name	5-7
# ::node	0.1.1.0.1.0.0.1.0	"goss"	5-7
# ::node	0.1.1.0.1.0.0.1.1	"wayne"	5-7
# ::node	0.1.1.0.1.0.0.2	38	7-8
# ::node	0.1.1.1	new	27-28
# ::node	0.1.1.1.0	generation	43-44
# ::root	0	and
# ::edge	and	op1	lead-02	0	0.0	
# ::edge	and	op1	person	0.1.1.0.1.0	0.1.1.0.1.0.0	
# ::edge	and	op2	corrupt-01	0.1.1.0.1.0	0.1.1.0.1	
# ::edge	and	op2	promise-01	0	0.1	
# ::edge	free-41	ARG0	almost	0.1.1.0	0.1.1.0.0	
# ::edge	free-41	ARG1	society	0.1.1.0	0.1.1	
# ::edge	free-41	ARG2	corrupt-01	0.1.1.0	0.1.1.0.1	
# ::edge	generation	mod	new	0.1.1.1.0	0.1.1.1	
# ::edge	lawyer	mod	liberal	0.0.0	0.0.0.0	
# ::edge	lead-02	ARG0	lawyer	0.0	0.0.0	
# ::edge	lead-02	ARG1	party	0.0	0.0.1	
# ::edge	lead-02	mod	politics	0.0	0.0.2	
# ::edge	name	op1	"goss"	0.1.1.0.1.0.0.1	0.1.1.0.1.0.0.1.0	
# ::edge	name	op2	"wayne"	0.1.1.0.1.0.0.1	0.1.1.0.1.0.0.1.1	
# ::edge	party	mod	labour	0.0.1	0.0.1.0	
# ::edge	person	domain	premier	0.1.1.0.1.0.0	0.1.1.0.1.0.0.0	
# ::edge	person	name	name	0.1.1.0.1.0.0	0.1.1.0.1.0.0.1	
# ::edge	person	time	38	0.1.1.0.1.0.0	0.1.1.0.1.0.0.2	
# ::edge	premier	mod	new	0.1.1.0.1.0.0.0	0.1.1.0.1.0.0.0.1	
# ::edge	premier	mod	state	0.1.1.0.1.0.0.0	0.1.1.0.1.0.0.0.0	
# ::edge	promise-01	ARG0	temporal-quantity	0.1	0.1.0	
# ::edge	promise-01	ARG2	society	0.1	0.1.1	
# ::edge	society	mod	new	0.1.1	0.1.1.1	
# ::edge	temporal-quantity	quant	32	0.1.0	0.1.0.0	
# ::edge	temporal-quantity	unit	year	0.1.0	0.1.0.1	
(a3 / and 
      :op1 (l2 / lead-02 
            :ARG0 (l3 / lawyer 
                  :mod (l4 / liberal)) 
            :ARG1 (p3 / party 
                  :mod (l / labour)) 
            :mod (p / politics)) 
      :op2 (p2 / promise-01 
            :ARG0 (t / temporal-quantity 
                  :quant 32 
                  :unit (y / year)) 
            :ARG2 (s / society 
                  :ARG1-of (f / free-41 
                        :ARG0 (a / almost) 
                        :ARG2 (c / corrupt-01 
                              :op-of (a2 / and 
                                    :op1 (p4 / person 
                                          :domain (p5 / premier 
                                                :mod (s2 / state) 
                                                :mod (n3 / new)) 
                                          :name (n2 / name 
                                                :op1 "goss" 
                                                :op2 "wayne") 
                                          :time 38)))) 
                  :mod (n / new 
                        :mod-of (g / generation)))))

# ::snt he signed the despatch with his name and rank then handed it to blasendorf who promised it would be delivered as swiftly as his horses could cross country
# ::tok he signed the despatch with his name and rank then handed it to blasendorf who promised it would be delivered as swiftly as his horses could cross country
# ::alignments 27-28|0.0.1 26-27|0.0 25-26|0 24-25|0.0.0 21-22|0.0.1.0.2 19-20|0.0.1.0 16-17|0.0.1.0.0 15-16|0.0.1.0.1 11-12|0.0.1.0.1.0.0.0 10-11|0.0.1.0.1.0.0 9-10|0.0.1.0.1.0.0.1 7-8|0.0.1.0.1.0.1.0 1-2|0.0.1.0.1.0.1 0-1|0.0.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:51.642
# ::node	0	possible	25-26
# ::node	0.0	cross-02	26-27
# ::node	0.0.0	horse	24-25
# ::node	0.0.1	country	27-28
# ::node	0.0.1.0	deliver-01	19-20
# ::node	0.0.1.0.0	it	16-17
# ::node	0.0.1.0.1	promise-01	15-16
# ::node	0.0.1.0.1.0	he	0-1
# ::node	0.0.1.0.1.0.0	hand-02	10-11
# ::node	0.0.1.0.1.0.0.0	it	11-12
# ::node	0.0.1.0.1.0.0.1	then	9-10
# ::node	0.0.1.0.1.0.1	sign-02	1-2
# ::node	0.0.1.0.1.0.1.0	and	7-8
# ::node	0.0.1.0.2	swift	21-22
# ::root	0	possible
# ::edge	and	op1	sign-02	0.0.1.0.1.0.1.0	0.0.1.0.1.0.1	
# ::edge	cross-02	ARG0	horse	0.0	0.0.0	
# ::edge	cross-02	ARG1	country	0.0	0.0.1	
# ::edge	deliver-01	ARG0	country	0.0.1.0	0.0.1	
# ::edge	deliver-01	ARG1	it	0.0.1.0	0.0.1.0.0	
# ::edge	deliver-01	mod	swift	0.0.1.0	0.0.1.0.2	
# ::edge	hand-02	ARG0	he	0.0.1.0.1.0.0	0.0.1.0.1.0	
# ::edge	hand-02	ARG1	it	0.0.1.0.1.0.0	0.0.1.0.1.0.0.0	
# ::edge	hand-02	time	then	0.0.1.0.1.0.0	0.0.1.0.1.0.0.1	
# ::edge	possible	domain	cross-02	0	0.0	
# ::edge	promise-01	ARG0	he	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	promise-01	ARG1	deliver-01	0.0.1.0.1	0.0.1.0	
# ::edge	sign-02	ARG0	he	0.0.1.0.1.0.1	0.0.1.0.1.0	
(p / possible 
      :domain (c2 / cross-02 
            :ARG0 (h / horse) 
            :ARG1 (c / country 
                  :ARG0-of (d / deliver-01 
                        :ARG1 (i / it) 
                        :ARG1-of (p2 / promise-01 
                              :ARG0 (h3 / he 
                                    :ARG0-of (h2 / hand-02 
                                          :ARG1 (i2 / it) 
                                          :time (t / then)) 
                                    :ARG0-of (s2 / sign-02 
                                          :op-of (a / and)))) 
                        :mod (s / swift)))))

# ::snt she also mounted a strong attack on the claws campaigners who had failed she claimed to deliver the petition they had promised to back their demand
# ::tok she also mounted a strong attack on the claws campaigners who had failed she claimed to deliver the petition they had promised to back their demand
# ::alignments 25-26|0 23-24|0.0 21-22|0.0.0 19-20|0.0.0.0 18-19|0.0.0.1 16-17|0.0.0.1.0 14-15|0.0.0.1.0.1 13-14|0.0.0.1.0.0 12-13|0.0.0.1.0.1.0 9-10|0.0.0.1.0.1.0.0.0+0.0.0.1.0.1.0.0 8-9|0.0.0.1.0.1.0.0.2 5-6|0.0.0.1.0.1.0.0.1 4-5|0.0.0.1.0.1.0.0.1.1 1-2|0.0.0.1.0.1.0.0.1.2 0-1|0.0.0.1.0.1.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:52.258
# ::node	0	demand-01	25-26
# ::node	0.0	back	23-24
# ::node	0.0.0	promise-01	21-22
# ::node	0.0.0.0	they	19-20
# ::node	0.0.0.1	petition-01	18-19
# ::node	0.0.0.1.0	deliver-01	16-17
# ::node	0.0.0.1.0.0	she	13-14
# ::node	0.0.0.1.0.1	claim-01	14-15
# ::node	0.0.0.1.0.1.0	fail-01	12-13
# ::node	0.0.0.1.0.1.0.0	person	9-10
# ::node	0.0.0.1.0.1.0.0.0	campaign-01	9-10
# ::node	0.0.0.1.0.1.0.0.1	attack-01	5-6
# ::node	0.0.0.1.0.1.0.0.1.0	she	0-1
# ::node	0.0.0.1.0.1.0.0.1.1	strong	4-5
# ::node	0.0.0.1.0.1.0.0.1.2	also	1-2
# ::node	0.0.0.1.0.1.0.0.2	claw	8-9
# ::root	0	demand-01
(d / demand-01 
      :part-of (b / back 
            :ARG2-of (p / promise-01 
                  :ARG0 (t / they) 
                  :ARG1 (p2 / petition-01 
                        :ARG1-of (d2 / deliver-01 
                              :ARG0 (s / she) 
                              :ARG1-of (c / claim-01 
                                    :concession (f / fail-01 
                                          :ARG1 (p3 / person 
                                                :ARG0-of (c2 / campaign-01) 
                                                :ARG1-of (a / attack-01 
                                                      :ARG0 (s3 / she) 
                                                      :mod (s2 / strong) 
                                                      :mod (a2 / also)) 
                                                :mod (c3 / claw)))))))))

# ::snt mr lee chinghua secretarygeneral of taiwans olympic committee said on monday his mainland counterpart had sent a cable promising early release for mr huang because we cherish the easing of tension and have fully considered the wishes of taiwans leaders
# ::tok mr lee chinghua secretarygeneral of taiwans olympic committee said on monday his mainland counterpart had sent a cable promising early release for mr huang because we cherish the easing of tension and have fully considered the wishes of taiwans leaders
# ::alignments 39-40|0.0.0.1.0.0+0.0.0.1.0 36-37|0.0.0.1 34-35|0.0.0 33-34|0.0.0.2 31-32|0.0 30-31|0.0.0.1.0.1.0.1.0 25-26|0.0.0.0 24-25|0 20-21|0.0.0.1.0.1 19-20|0.0.0.1.0.1.2 18-19|0.0.0.1.0.1.1 17-18|0.0.0.1.0.1.0.2 15-16|0.0.0.1.0.1.0 13-14|0.0.0.1.0.1.0.0 12-13|0.0.0.1.0.1.0.0.0 8-9|0.0.0.1.0.1.0.1 7-8|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:53.254
# ::node	0	cause-01	24-25
# ::node	0.0	and	31-32
# ::node	0.0.0	consider-01	34-35
# ::node	0.0.0.0	we	25-26
# ::node	0.0.0.1	wish-01	36-37
# ::node	0.0.0.1.0	person	39-40
# ::node	0.0.0.1.0.0	lead-02	39-40
# ::node	0.0.0.1.0.1	release-01	20-21
# ::node	0.0.0.1.0.1.0	send-01	15-16
# ::node	0.0.0.1.0.1.0.0	country	13-14
# ::node	0.0.0.1.0.1.0.0.0	mainland	12-13
# ::node	0.0.0.1.0.1.0.1	say-01	8-9
# ::node	0.0.0.1.0.1.0.1.0	tension	30-31
# ::node	0.0.0.1.0.1.0.2	cable	17-18
# ::node	0.0.0.1.0.1.1	promise-01	18-19
# ::node	0.0.0.1.0.1.2	early	19-20
# ::node	0.0.0.2	full	33-34
# ::node	0.1	committee	7-8
# ::root	0	cause-01
# ::edge	and	op1	consider-01	0.0	0.0.0	
# ::edge	cause-01	ARG0	and	0	0.0	
# ::edge	cause-01	ARG1	committee	0	0.1	
# ::edge	consider-01	ARG0	we	0.0.0	0.0.0.0	
# ::edge	consider-01	ARG1	wish-01	0.0.0	0.0.0.1	
# ::edge	consider-01	degree	full	0.0.0	0.0.0.2	
# ::edge	country	mod	mainland	0.0.0.1.0.1.0.0	0.0.0.1.0.1.0.0.0	
# ::edge	lead-02	ARG0	person	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	promise-01	ARG1	release-01	0.0.0.1.0.1.1	0.0.0.1.0.1	
# ::edge	release-01	ARG1	person	0.0.0.1.0.1	0.0.0.1.0	
# ::edge	release-01	time	early	0.0.0.1.0.1	0.0.0.1.0.1.2	
# ::edge	say-01	ARG0	tension	0.0.0.1.0.1.0.1	0.0.0.1.0.1.0.1.0	
# ::edge	say-01	ARG1	send-01	0.0.0.1.0.1.0.1	0.0.0.1.0.1.0	
# ::edge	send-01	ARG0	country	0.0.0.1.0.1.0	0.0.0.1.0.1.0.0	
# ::edge	send-01	ARG1	release-01	0.0.0.1.0.1.0	0.0.0.1.0.1	
# ::edge	send-01	ARG2	cable	0.0.0.1.0.1.0	0.0.0.1.0.1.0.2	
# ::edge	wish-01	ARG0	person	0.0.0.1	0.0.0.1.0	
(c2 / cause-01 
      :ARG0 (a / and 
            :op1 (c / consider-01 
                  :ARG0 (w2 / we) 
                  :ARG1 (w / wish-01 
                        :ARG0 (p / person 
                              :ARG0-of (l / lead-02) 
                              :ARG1-of (r / release-01 
                                    :ARG1-of (s / send-01 
                                          :ARG0 (c4 / country 
                                                :mod (m / mainland)) 
                                          :ARG1-of (s2 / say-01 
                                                :ARG0 (t / tension)) 
                                          :ARG2 (c3 / cable)) 
                                    :ARG1-of (p2 / promise-01) 
                                    :time (e / early)))) 
                  :degree (f / full))) 
      :ARG1 (c5 / committee))

# ::snt yesterday the miners in prokopyevsk were promised an increase in food supplies by 20 to 30 per cent longer vacations and more soap and washing powder
# ::tok yesterday the miners in prokopyevsk were promised an increase in food supplies by 20 to 30 per cent longer vacations and more soap and washing powder
# ::alignments 25-26|0.1 24-25|0.1.1 23-24|0 22-23|0.0 20-21|0.0.1 18-19|0.0.0 17-18|0.0.1.0.1.1.0+0.0.1.0.1.1 15-16|0.1.0 13-14|0.1.1.0 11-12|0.0.1.0.1.0 10-11|0.0.1.0.1.0.0 8-9|0.0.1.0.1 6-7|0.0.1.0 2-3|0.0.1.0.0.0+0.0.1.0.0 0-1|0.0.1.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:53.696
# ::node	0	and	23-24
# ::node	0.0	soap	22-23
# ::node	0.0.0	long	18-19
# ::node	0.0.1	and	20-21
# ::node	0.0.1.0	promise-01	6-7
# ::node	0.0.1.0.0	person	2-3
# ::node	0.0.1.0.0.0	mine-01	2-3
# ::node	0.0.1.0.1	increase-01	8-9
# ::node	0.0.1.0.1.0	supply-01	11-12
# ::node	0.0.1.0.1.0.0	food	10-11
# ::node	0.0.1.0.1.1	monetary-quantity	17-18
# ::node	0.0.1.0.1.1.0	cent	17-18
# ::node	0.0.1.0.2	yesterday	0-1
# ::node	0.1	powder-01	25-26
# ::node	0.1.0	30	15-16
# ::node	0.1.1	wash-01	24-25
# ::node	0.1.1.0	20	13-14
# ::root	0	and
# ::edge	and	op1	promise-01	0.0.1	0.0.1.0	
# ::edge	and	op1	soap	0	0.0	
# ::edge	and	op2	powder-01	0	0.1	
# ::edge	and	op2	soap	0.0.1	0.0	
# ::edge	increase-01	ARG1	supply-01	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	increase-01	ARG3	monetary-quantity	0.0.1.0.1	0.0.1.0.1.1	
# ::edge	mine-01	ARG0	person	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	monetary-quantity	unit	cent	0.0.1.0.1.1	0.0.1.0.1.1.0	
# ::edge	powder-01	ARG0	30	0.1	0.1.0	
# ::edge	powder-01	ARG1	wash-01	0.1	0.1.1	
# ::edge	promise-01	ARG0	person	0.0.1.0	0.0.1.0.0	
# ::edge	promise-01	ARG1	increase-01	0.0.1.0	0.0.1.0.1	
# ::edge	promise-01	time	yesterday	0.0.1.0	0.0.1.0.2	
# ::edge	soap	degree	long	0.0	0.0.0	
# ::edge	supply-01	ARG1	food	0.0.1.0.1.0	0.0.1.0.1.0.0	
# ::edge	wash-01	ARG1	20	0.1.1	0.1.1.0	
(a / and 
      :op1 (s / soap 
            :degree (l / long) 
            :op-of (a2 / and 
                  :op1 (p2 / promise-01 
                        :ARG0 (p3 / person 
                              :ARG0-of (m2 / mine-01)) 
                        :ARG1 (i / increase-01 
                              :ARG1 (s2 / supply-01 
                                    :ARG1 (f / food)) 
                              :ARG3 (m / monetary-quantity 
                                    :unit (c / cent))) 
                        :time (y / yesterday)))) 
      :op2 (p / powder-01 
            :ARG0 30 
            :ARG1 (w / wash-01 
                  :ARG1 20)))

# ::snt noise baffles have been promised but their success elsewhere is still a debatable matter
# ::tok noise baffles have been promised but their success elsewhere is still a debatable matter
# ::alignments 13-14|0.0 10-11|0.0.0 8-9|0.3 7-8|0.1 5-6|0 4-5|0.2 1-2|0.2.0 0-1|0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:53.828
# ::node	0	contrast-01	5-6
# ::node	0.0	matter	13-14
# ::node	0.0.0	still	10-11
# ::node	0.1	succeed-01	7-8
# ::node	0.2	promise-01	4-5
# ::node	0.2.0	baffle-01	1-2
# ::node	0.2.0.0	noise	0-1
# ::node	0.3	elsewhere	8-9
# ::root	0	contrast-01
# ::edge	baffle-01	ARG1	noise	0.2.0	0.2.0.0	
# ::edge	contrast-01	ARG1	matter	0	0.0	
# ::edge	contrast-01	ARG2	succeed-01	0	0.1	
# ::edge	contrast-01	ARG4	promise-01	0	0.2	
# ::edge	elsewhere	condition	contrast-01	0.3	0	
# ::edge	matter	mod	still	0.0	0.0.0	
# ::edge	promise-01	ARG1	baffle-01	0.2	0.2.0	
(c / contrast-01 
      :ARG1 (m / matter 
            :mod (s / still)) 
      :ARG2 (s2 / succeed-01) 
      :ARG4 (p / promise-01 
            :ARG1 (b / baffle-01 
                  :ARG1 (n / noise))) 
      :condition-of (e / elsewhere))

# ::snt men who had promised so much and could not now deliver the goods just like her father five years before
# ::tok men who had promised so much and could not now deliver the goods just like her father five years before
# ::alignments 19-20|0.0.1.0 18-19|0.1.0.0.0.0+0.1.0.0.0 17-18|0.1.0.0 16-17|0.0.1.1+0.0.1 13-14|0.0.2 12-13|0.0.0 10-11|0.0 9-10|0.2 7-8|0 6-7|0.1 5-6|0.1.0.2 4-5|0.1.0.2.0 3-4|0.1.0 0-1|0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:54.023
# ::node	0	possible	7-8
# ::node	0.0	deliver-01	10-11
# ::node	0.0.0	good	12-13
# ::node	0.0.1	have-rel-role-91	16-17
# ::node	0.0.1.0	before	19-20
# ::node	0.0.1.1	father	16-17
# ::node	0.0.2	just	13-14
# ::node	0.1	and	6-7
# ::node	0.1.0	promise-01	3-4
# ::node	0.1.0.0	5	17-18
# ::node	0.1.0.0.0	temporal-quantity	18-19
# ::node	0.1.0.0.0.0	year	18-19
# ::node	0.1.0.1	man	0-1
# ::node	0.1.0.2	much	5-6
# ::node	0.1.0.2.0	so	4-5
# ::node	0.2	now	9-10
# ::root	0	possible
# ::edge	and	op1	promise-01	0.1	0.1.0	
# ::edge	and	op2	possible	0.1	0	
# ::edge	deliver-01	ARG1	good	0.0	0.0.0	
# ::edge	deliver-01	ARG2	have-rel-role-91	0.0	0.0.1	
# ::edge	deliver-01	mod	just	0.0	0.0.2	
# ::edge	deliver-01	mod	possible	0.0	0	
# ::edge	have-rel-role-91	ARG0	before	0.0.1	0.0.1.0	
# ::edge	have-rel-role-91	ARG2	father	0.0.1	0.0.1.1	
# ::edge	much	degree	so	0.1.0.2	0.1.0.2.0	
# ::edge	possible	time	now	0	0.2	
# ::edge	promise-01	ARG0	5	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG1	man	0.1.0	0.1.0.1	
# ::edge	promise-01	mod	much	0.1.0	0.1.0.2	
# ::edge	temporal-quantity	quant	5	0.1.0.0.0	0.1.0.0	
# ::edge	temporal-quantity	unit	year	0.1.0.0.0	0.1.0.0.0.0	
(p / possible 
      :mod-of (d / deliver-01 
            :ARG1 (g / good) 
            :ARG2 (h / have-rel-role-91 
                  :ARG0 (b / before) 
                  :ARG2 (f / father)) 
            :mod (j / just)) 
      :op-of (a / and 
            :op1 (p2 / promise-01 
                  :ARG0 (5 / 5 
                        :quant-of (t / temporal-quantity 
                              :unit (y / year))) 
                  :ARG1 (m2 / man) 
                  :mod (m / much 
                        :degree (s / so)))) 
      :time (n / now))

# ::snt and she had promised that tomorrow she would tell her detective that the man at butlers was not john gower and she would send him to search elsewhere
# ::tok and she had promised that tomorrow she would tell her detective that the man at butlers was not john gower and she would send him to search elsewhere
# ::alignments 27-28|0.1.0.0.0 26-27|0.1.0.0 23-24|0.1.0.0.1 21-22|0.1.0.0.1.0 20-21|0.1.0.0.1.1 18-20|0.1.0.0.1.1.0.0.0+0.1.0.0.1.1.0.0.1+0.1.0.0.1.1.0.0+0.1.0.0.1.1.0 13-14|0.2 10-11|0.1.1 8-9|0.1 6-7|0.1.0 5-6|0.1.2 3-4|0.0 1-2|0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:54.292
# ::node	0	and	0-1
# ::node	0.0	promise-01	3-4
# ::node	0.0.0	she	1-2
# ::node	0.1	tell-01	8-9
# ::node	0.1.0	she	6-7
# ::node	0.1.0.0	search-01	26-27
# ::node	0.1.0.0.0	elsewhere	27-28
# ::node	0.1.0.0.1	send-01	23-24
# ::node	0.1.0.0.1.0	she	21-22
# ::node	0.1.0.0.1.1	and	20-21
# ::node	0.1.0.0.1.1.0	person	18-20
# ::node	0.1.0.0.1.1.0.0	name	18-20
# ::node	0.1.0.0.1.1.0.0.0	"gower"	18-20
# ::node	0.1.0.0.1.1.0.0.1	"john"	18-20
# ::node	0.1.1	detective	10-11
# ::node	0.1.2	tomorrow	5-6
# ::node	0.2	man	13-14
# ::root	0	and
# ::edge	and	op1	person	0.1.0.0.1.1	0.1.0.0.1.1.0	
# ::edge	and	op1	promise-01	0	0.0	
# ::edge	and	op2	send-01	0.1.0.0.1.1	0.1.0.0.1	
# ::edge	and	op2	tell-01	0	0.1	
# ::edge	and	op3	man	0	0.2	
# ::edge	name	op1	"gower"	0.1.0.0.1.1.0.0	0.1.0.0.1.1.0.0.0	
# ::edge	name	op2	"john"	0.1.0.0.1.1.0.0	0.1.0.0.1.1.0.0.1	
# ::edge	person	name	name	0.1.0.0.1.1.0	0.1.0.0.1.1.0.0	
# ::edge	promise-01	ARG0	she	0.0	0.0.0	
# ::edge	search-01	ARG0	she	0.1.0.0	0.1.0	
# ::edge	search-01	ARG1	elsewhere	0.1.0.0	0.1.0.0.0	
# ::edge	send-01	ARG0	she	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	send-01	ARG2	search-01	0.1.0.0.1	0.1.0.0	
# ::edge	tell-01	ARG0	she	0.1	0.1.0	
# ::edge	tell-01	ARG1	detective	0.1	0.1.1	
# ::edge	tell-01	time	tomorrow	0.1	0.1.2	
(a2 / and 
      :op1 (p2 / promise-01 
            :ARG0 (s5 / she)) 
      :op2 (t / tell-01 
            :ARG0 (s4 / she 
                  :ARG0-of (s / search-01 
                        :ARG1 (e / elsewhere) 
                        :ARG2-of (s2 / send-01 
                              :ARG0 (s3 / she) 
                              :op-of (a / and 
                                    :op1 (p / person 
                                          :name (n / name 
                                                :op1 "gower" 
                                                :op2 "john")))))) 
            :ARG1 (d / detective) 
            :time (t2 / tomorrow)) 
      :op3 (m / man))

# ::snt in puritania religion had been the stuff of cant of laws of promised punishments for behaviour which the pilgrims inner conscience could not condemn, which he had glimpsed through a hole in the wall and which promised all the things which lewis and greeves had come to label it or joy
# ::tok in puritania religion had been the stuff of cant of laws of promised punishments for behaviour which the pilgrims inner conscience could not condemn , which he had glimpsed through a hole in the wall and which promised all the things which lewis and greeves had come to label it or joy
# ::alignments 51-52|0.0.2.0.1.0 50-51|0.0.2.0.1 49-50|0.0.2.0.0.0.0 48-49|0.0.2.0.0.0 43-44|0.0.2.0.0.0.1 40-41|0.0.2.0 38-39|0.0.2.0.0 37-38|0.0.2.3 35-36|0.0.2 34-35|0.0.2.2 31-32|0.0.2.1 26-27|0.0.0 23-24|0.0 21-22|0 20-21|0.0.2.3.0 19-20|0.0.2.3.0.0 15-16|0.0.0.0.0.0 13-14|0.0.0.0.0 12-13|0.0.0.0 10-11|0.0.0.0.0.1 6-7|0.0.0.0.0.0.0 2-3|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:54.585
# ::node	0	possible	21-22
# ::node	0.0	condemn-01	23-24
# ::node	0.0.0	he	26-27
# ::node	0.0.0.0	promise-01	12-13
# ::node	0.0.0.0.0	punish-01	13-14
# ::node	0.0.0.0.0.0	behave-01	15-16
# ::node	0.0.0.0.0.0.0	stuff	6-7
# ::node	0.0.0.0.0.1	law	10-11
# ::node	0.0.1	religion	2-3
# ::node	0.0.2	and	35-36
# ::node	0.0.2.0	thing	40-41
# ::node	0.0.2.0.0	all	38-39
# ::node	0.0.2.0.0.0	label	48-49
# ::node	0.0.2.0.0.0.0	it	49-50
# ::node	0.0.2.0.0.0.1	and	43-44
# ::node	0.0.2.0.1	or	50-51
# ::node	0.0.2.0.1.0	joy	51-52
# ::node	0.0.2.1	hole	31-32
# ::node	0.0.2.2	wall	34-35
# ::node	0.0.2.3	promise-01	37-38
# ::node	0.0.2.3.0	conscience	20-21
# ::node	0.0.2.3.0.0	inner	19-20
# ::root	0	possible
# ::edge	and	op1	condemn-01	0.0.2	0.0	
# ::edge	and	op1	label	0.0.2.0.0.0.1	0.0.2.0.0.0	
# ::edge	and	op2	hole	0.0.2	0.0.2.1	
# ::edge	and	op3	wall	0.0.2	0.0.2.2	
# ::edge	and	op4	promise-01	0.0.2	0.0.2.3	
# ::edge	behave-01	ARG0	stuff	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	condemn-01	ARG0	he	0.0	0.0.0	
# ::edge	condemn-01	ARG1	religion	0.0	0.0.1	
# ::edge	conscience	mod	inner	0.0.2.3.0	0.0.2.3.0.0	
# ::edge	label	degree	it	0.0.2.0.0.0	0.0.2.0.0.0.0	
# ::edge	label	quant	all	0.0.2.0.0.0	0.0.2.0.0	
# ::edge	law	topic	punish-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	or	op1	thing	0.0.2.0.1	0.0.2.0	
# ::edge	or	op2	joy	0.0.2.0.1	0.0.2.0.1.0	
# ::edge	possible	domain	condemn-01	0	0.0	
# ::edge	promise-01	ARG0	conscience	0.0.2.3	0.0.2.3.0	
# ::edge	promise-01	ARG0	he	0.0.0.0	0.0.0	
# ::edge	promise-01	ARG1	punish-01	0.0.0.0	0.0.0.0.0	
# ::edge	punish-01	ARG1	behave-01	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	thing	domain	all	0.0.2.0	0.0.2.0.0	
# ::edge	thing	domain	and	0.0.2.0	0.0.2	
(p2 / possible 
      :domain (c / condemn-01 
            :ARG0 (h2 / he 
                  :ARG0-of (p4 / promise-01 
                        :ARG1 (p3 / punish-01 
                              :ARG1 (b / behave-01 
                                    :ARG0 (s / stuff)) 
                              :topic-of (l2 / law)))) 
            :ARG1 (r / religion) 
            :op-of (a3 / and 
                  :domain-of (t / thing 
                        :domain (a2 / all 
                              :quant-of (l / label 
                                    :degree (i / it) 
                                    :op-of (a / and))) 
                        :op-of (o / or 
                              :op1 (j / joy))) 
                  :op1 (h / hole) 
                  :op2 (w / wall) 
                  :op3 (p / promise-01 
                        :ARG0 (c2 / conscience 
                              :mod (i2 / inner))))))

# ::snt mr de klerk also promised that legislative amendments would be tabled at the beginning of the next session of parliament next year
# ::tok mr de klerk also promised that legislative amendments would be tabled at the beginning of the next session of parliament next year
# ::alignments 21-22|0.0.1.1 20-21|0.0.1.1.0 19-20|0.0.1.0.1.0.0+0.0.1.0.1.0+0.0.1.0.1 17-18|0.0.1.0 16-17|0.0.1.0.0 13-14|0.0.1 7-8|0.0 6-7|0.0.0 4-5|0 3-4|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:54.688
# ::node	0	promise-01	4-5
# ::node	0.0	amend-01	7-8
# ::node	0.0.0	legislate-01	6-7
# ::node	0.0.1	begin-01	13-14
# ::node	0.0.1.0	session	17-18
# ::node	0.0.1.0.0	next	16-17
# ::node	0.0.1.0.1	government-organization	19-20
# ::node	0.0.1.0.1.0	name	19-20
# ::node	0.0.1.0.1.0.0	"Parliament"	19-20
# ::node	0.0.1.1	year	21-22
# ::node	0.0.1.1.0	next	20-21
# ::node	0.1	also	3-4
# ::root	0	promise-01
# ::edge	begin-01	ARG0	amend-01	0.0.1	0.0	
# ::edge	begin-01	ARG1	session	0.0.1	0.0.1.0	
# ::edge	begin-01	time	year	0.0.1	0.0.1.1	
# ::edge	government-organization	name	name	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	legislate-01	ARG0	amend-01	0.0.0	0.0	
# ::edge	name	op1	"Parliament"	0.0.1.0.1.0	0.0.1.0.1.0.0	
# ::edge	promise-01	ARG1	amend-01	0	0.0	
# ::edge	promise-01	mod	also	0	0.1	
# ::edge	session	mod	next	0.0.1.0	0.0.1.0.0	
# ::edge	session	poss	government-organization	0.0.1.0	0.0.1.0.1	
# ::edge	year	mod	next	0.0.1.1	0.0.1.1.0	
(p / promise-01 
      :ARG1 (a / amend-01 
            :ARG0-of (l / legislate-01) 
            :ARG0-of (b / begin-01 
                  :ARG1 (s / session 
                        :mod (n3 / next) 
                        :poss (g / government-organization 
                              :name (n2 / name 
                                    :op1 "Parliament"))) 
                  :time (y / year 
                        :mod (n / next)))) 
      :mod (a2 / also))

# ::snt a voice from the landing above said sister marrow i did promise ellip
# ::tok a voice from the landing above said sister marrow i did promise ellip
# ::alignments 11-12|0.0.0 9-10|0.0 7-8|0.1.0.0+0.1.0 6-7|0 5-6|0.2 4-5|0.1 1-2|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:54.713
# ::node	0	say-01	6-7
# ::node	0.0	i	9-10
# ::node	0.0.0	promise-01	11-12
# ::node	0.1	land-01	4-5
# ::node	0.1.0	have-rel-role-91	7-8
# ::node	0.1.0.0	sister	7-8
# ::node	0.1.1	voice	1-2
# ::node	0.2	above	5-6
# ::root	0	say-01
# ::edge	have-rel-role-91	ARG0	land-01	0.1.0	0.1	
# ::edge	have-rel-role-91	ARG2	sister	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG0	i	0.0.0	0.0	
# ::edge	say-01	ARG0	i	0	0.0	
# ::edge	say-01	ARG1	land-01	0	0.1	
# ::edge	say-01	mod	above	0	0.2	
# ::edge	voice	poss	land-01	0.1.1	0.1	
(s2 / say-01 
      :ARG0 (i / i 
            :ARG0-of (p / promise-01)) 
      :ARG1 (l / land-01 
            :ARG0-of (h / have-rel-role-91 
                  :ARG2 (s / sister)) 
            :poss-of (v / voice)) 
      :mod (a / above))

# ::snt   just to round the day off the mayor of los angeles norris poulson told khrushchev at the banquet in his honour that he was wellknown to americans as the man who had promised to bury them
# ::tok just to round the day off the mayor of los angeles norris poulson told khrushchev at the banquet in his honour that he was wellknown to americans as the man who had promised to bury them
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:54.713
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt weeping piteously ensnarled in the sheets hedda promised to return as soon as she knew that her father was safe
# ::tok weeping piteously ensnarled in the sheets hedda promised to return as soon as she knew that her father was safe
# ::alignments 19-20|0.1 17-18|0.1.0.0+0.1.0 14-15|0 13-14|0.0 11-12|0.1.1 7-8|0.1.1.0 5-6|0.1.1.0.0.0 0-1|0.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:54.759
# ::node	0	know-01	14-15
# ::node	0.0	she	13-14
# ::node	0.1	safe-41	19-20
# ::node	0.1.0	have-rel-role-91	17-18
# ::node	0.1.0.0	father	17-18
# ::node	0.1.1	soon	11-12
# ::node	0.1.1.0	promise-01	7-8
# ::node	0.1.1.0.0	weep-01	0-1
# ::node	0.1.1.0.0.0	sheet	5-6
# ::root	0	know-01
# ::edge	have-rel-role-91	ARG2	father	0.1.0	0.1.0.0	
# ::edge	know-01	ARG0	she	0	0.0	
# ::edge	know-01	ARG1	safe-41	0	0.1	
# ::edge	promise-01	ARG1	weep-01	0.1.1.0	0.1.1.0.0	
# ::edge	promise-01	time	soon	0.1.1.0	0.1.1	
# ::edge	safe-41	ARG1	have-rel-role-91	0.1	0.1.0	
# ::edge	soon	concession	safe-41	0.1.1	0.1	
# ::edge	weep-01	ARG1	sheet	0.1.1.0.0	0.1.1.0.0.0	
(k / know-01 
      :ARG0 (s2 / she) 
      :ARG1 (s / safe-41 
            :ARG1 (h / have-rel-role-91 
                  :ARG2 (f / father)) 
            :concession-of (s3 / soon 
                  :time-of (p / promise-01 
                        :ARG1 (w / weep-01 
                              :ARG1 (s4 / sheet))))))

# ::snt you sip your tea gratefully and leave promising to return when you have more time more money and a new found interest in carpets
# ::tok you sip your tea gratefully and leave promising to return when you have more time more money and a new found interest in carpets
# ::alignments 23-24|0.2 21-22|0 20-21|0.1 19-20|0.0.1 17-18|0.0 16-17|0.0.0 14-15|0.1.1 11-12|0.1.0 7-8|0.1.0.0.2 6-7|0.1.0.0 5-6|0.1.0.0.1 4-5|0.1.0.0.0.0 3-4|0.1.0.0.0.1 0-1|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:55.230
# ::node	0	interest-01	21-22
# ::node	0.0	and	17-18
# ::node	0.0.0	money	16-17
# ::node	0.0.1	new	19-20
# ::node	0.1	find-01	20-21
# ::node	0.1.0	you	11-12
# ::node	0.1.0.0	leave-01	6-7
# ::node	0.1.0.0.0	you	0-1
# ::node	0.1.0.0.0.0	grateful	4-5
# ::node	0.1.0.0.0.1	tea	3-4
# ::node	0.1.0.0.1	and	5-6
# ::node	0.1.0.0.2	promise-01	7-8
# ::node	0.1.1	time	14-15
# ::node	0.2	carpet	23-24
# ::root	0	interest-01
# ::edge	and	op1	leave-01	0.1.0.0.1	0.1.0.0	
# ::edge	and	op1	money	0.0	0.0.0	
# ::edge	and	op2	new	0.0	0.0.1	
# ::edge	find-01	ARG0	you	0.1	0.1.0	
# ::edge	find-01	ARG1	interest-01	0.1	0	
# ::edge	find-01	time	time	0.1	0.1.1	
# ::edge	grateful	poss	you	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	interest-01	ARG1	and	0	0.0	
# ::edge	interest-01	ARG2	carpet	0	0.2	
# ::edge	leave-01	ARG0	you	0.1.0.0	0.1.0.0.0	
# ::edge	leave-01	ARG1	you	0.1.0.0	0.1.0	
# ::edge	leave-01	purpose	promise-01	0.1.0.0	0.1.0.0.2	
# ::edge	tea	poss	you	0.1.0.0.0.1	0.1.0.0.0	
(i / interest-01 
      :ARG1 (a / and 
            :op1 (m / money) 
            :op2 (n / new)) 
      :ARG1-of (f / find-01 
            :ARG0 (y / you 
                  :ARG1-of (l / leave-01 
                        :ARG0 (y2 / you 
                              :poss-of (g / grateful) 
                              :poss-of (t2 / tea)) 
                        :op-of (a2 / and) 
                        :purpose (p / promise-01))) 
            :time (t / time)) 
      :ARG2 (c / carpet))

# ::snt the prime minister promising an allparty conference said he wanted to move fast towards a solution
# ::tok the prime minister promising an allparty conference said he wanted to move fast towards a solution
# ::alignments 15-16|0.1.0.0 12-13|0.1.1 9-10|0.1 8-9|0.1.0 7-8|0 6-7|0.0 3-4|0.0.0 2-3|0.0.0.0+0.0.0.0.0 1-2|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:55.384
# ::node	0	say-01	7-8
# ::node	0.0	conference	6-7
# ::node	0.0.0	promise-01	3-4
# ::node	0.0.0.0	minister	2-3
# ::node	0.0.0.0.0	have-org-role-91	2-3
# ::node	0.0.0.0.1	prime	1-2
# ::node	0.1	want-01	9-10
# ::node	0.1.0	he	8-9
# ::node	0.1.0.0	solution	15-16
# ::node	0.1.1	fast	12-13
# ::root	0	say-01
# ::edge	have-org-role-91	ARG2	minister	0.0.0.0.0	0.0.0.0	
# ::edge	minister	mod	prime	0.0.0.0	0.0.0.0.1	
# ::edge	promise-01	ARG1	minister	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG2	conference	0.0.0	0.0	
# ::edge	say-01	ARG0	conference	0	0.0	
# ::edge	say-01	ARG1	want-01	0	0.1	
# ::edge	solution	poss	he	0.1.0.0	0.1.0	
# ::edge	want-01	ARG0	he	0.1	0.1.0	
# ::edge	want-01	ARG1	fast	0.1	0.1.1	
(s2 / say-01 
      :ARG0 (c / conference 
            :ARG2-of (p / promise-01 
                  :ARG1 (m / minister 
                        :ARG2-of (h2 / have-org-role-91) 
                        :mod (p2 / prime)))) 
      :ARG1 (w / want-01 
            :ARG0 (h / he 
                  :poss-of (s / solution)) 
            :ARG1 (f / fast)))

# ::snt early reliability figures however are promising
# ::tok early reliability figures however are promising
# ::alignments 5-6|0 2-3|0.0 1-2|0.0.0 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:55.394
# ::node	0	promise-01	5-6
# ::node	0.0	figure	2-3
# ::node	0.0.0	reliable	1-2
# ::node	0.0.1	early	0-1
# ::root	0	promise-01
# ::edge	early	op1	figure	0.0.1	0.0	
# ::edge	figure	mod	reliable	0.0	0.0.0	
# ::edge	promise-01	ARG1	figure	0	0.0	
(p / promise-01 
      :ARG1 (f / figure 
            :mod (r / reliable) 
            :op-of (e / early)))

# ::snt bobby robson was keen enough on the 25yearold south african to promise him a place in his next b team if he would renounce his commitment to the americans with whom he hopes to fulfil his world cup ambitions next summer
# ::tok bobby robson was keen enough on the 25yearold south african to promise him a place in his next b team if he would renounce his commitment to the americans with whom he hopes to fulfil his world cup ambitions next summer
# ::alignments 40-41|0.2.0.0.0.2 39-40|0.2.0.0.2 38-39|0.1 37-38|0.1.0 36-37|0.0.0 34-35|0 32-33|0.2 31-32|0.0 28-29|0.2.0.0.0.1.0.0.0+0.2.0.0.0.1.0.0+0.2.0.0.0.1.0+0.2.0.0.0.1 25-26|0.2.0.0.0 23-24|0.2.0.0 21-22|0.2.0 19-20|0.2.0.0.1 18-19|0.2.0.0.1.1 17-18|0.2.0.0.1.2 14-15|0.2.0.0.1.0.1 11-12|0.2.0.0.1.0 8-9|0.2.0.0.1.0.0 4-5|0.2.0.0.1.0.2.0 3-4|0.2.0.0.1.0.2 0-1|0.2.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:56.124
# ::node	0	fulfill-01	34-35
# ::node	0.0	he	31-32
# ::node	0.0.0	world	36-37
# ::node	0.1	ambition	38-39
# ::node	0.1.0	cup	37-38
# ::node	0.2	hope-01	32-33
# ::node	0.2.0	he	21-22
# ::node	0.2.0.0	renounce-01	23-24
# ::node	0.2.0.0.0	commit-01	25-26
# ::node	0.2.0.0.0.0	bobby	0-1
# ::node	0.2.0.0.0.1	person	28-29
# ::node	0.2.0.0.0.1.0	country	28-29
# ::node	0.2.0.0.0.1.0.0	name	28-29
# ::node	0.2.0.0.0.1.0.0.0	"America"	28-29
# ::node	0.2.0.0.0.2	summer	40-41
# ::node	0.2.0.0.1	team	19-20
# ::node	0.2.0.0.1.0	promise-01	11-12
# ::node	0.2.0.0.1.0.0	south	8-9
# ::node	0.2.0.0.1.0.1	place	14-15
# ::node	0.2.0.0.1.0.2	keen-41	3-4
# ::node	0.2.0.0.1.0.2.0	enough	4-5
# ::node	0.2.0.0.1.1	b	18-19
# ::node	0.2.0.0.1.2	next	17-18
# ::node	0.2.0.0.2	next	39-40
# ::root	0	fulfill-01
# ::edge	ambition	mod	cup	0.1	0.1.0	
# ::edge	commit-01	ARG0	bobby	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	commit-01	ARG1	person	0.2.0.0.0	0.2.0.0.0.1	
# ::edge	country	name	name	0.2.0.0.0.1.0	0.2.0.0.0.1.0.0	
# ::edge	fulfill-01	ARG0	he	0	0.0	
# ::edge	fulfill-01	ARG1	ambition	0	0.1	
# ::edge	he	part	world	0.0	0.0.0	
# ::edge	hope-01	ARG0	he	0.2	0.2.0	
# ::edge	hope-01	ARG1	fulfill-01	0.2	0	
# ::edge	keen-41	ARG2	promise-01	0.2.0.0.1.0.2	0.2.0.0.1.0	
# ::edge	keen-41	degree	enough	0.2.0.0.1.0.2	0.2.0.0.1.0.2.0	
# ::edge	name	op1	"America"	0.2.0.0.0.1.0.0	0.2.0.0.0.1.0.0.0	
# ::edge	next	op1	renounce-01	0.2.0.0.2	0.2.0.0	
# ::edge	person	mod	country	0.2.0.0.0.1	0.2.0.0.0.1.0	
# ::edge	promise-01	ARG0	south	0.2.0.0.1.0	0.2.0.0.1.0.0	
# ::edge	promise-01	ARG1	team	0.2.0.0.1.0	0.2.0.0.1	
# ::edge	promise-01	ARG2	place	0.2.0.0.1.0	0.2.0.0.1.0.1	
# ::edge	renounce-01	ARG0	he	0.2.0.0	0.2.0	
# ::edge	renounce-01	ARG1	commit-01	0.2.0.0	0.2.0.0.0	
# ::edge	summer	op1	commit-01	0.2.0.0.0.2	0.2.0.0.0	
# ::edge	team	mod	b	0.2.0.0.1	0.2.0.0.1.1	
# ::edge	team	mod	next	0.2.0.0.1	0.2.0.0.1.2	
# ::edge	team	mod	renounce-01	0.2.0.0.1	0.2.0.0	
(f / fulfill-01 
      :ARG0 (h2 / he 
            :part (w / world)) 
      :ARG1 (a / ambition 
            :mod (c / cup)) 
      :ARG1-of (h / hope-01 
            :ARG0 (h3 / he 
                  :ARG0-of (r / renounce-01 
                        :ARG1 (c3 / commit-01 
                              :ARG0 (b2 / bobby) 
                              :ARG1 (p / person 
                                    :mod (c2 / country 
                                          :name (n2 / name 
                                                :op1 "America"))) 
                              :op-of (s / summer)) 
                        :mod-of (t / team 
                              :ARG1-of (p3 / promise-01 
                                    :ARG0 (s2 / south) 
                                    :ARG2 (p2 / place) 
                                    :ARG2-of (k / keen-41 
                                          :degree (e / enough))) 
                              :mod (b / b) 
                              :mod (n3 / next)) 
                        :op-of (n / next)))))

# ::snt just damn you because you could have been more generous because you promised me you would be you promised me that you wanted a colleague not a housewife that work was the centre of love and you did not keep your word
# ::tok just damn you because you could have been more generous because you promised me you would be you promised me that you wanted a colleague not a housewife that work was the centre of love and you did not keep your word
# ::alignments 41-42|0.2.1.0.1.0.1.1 36-37|0.2.1.0.1.0.1.1.0 35-36|0.2.1.0.1.0.2 34-35|0.2.1.0.1.0.2.0 22-23|0.2.1.0.1.0.1 21-22|0.2.1.0.1.0.1.0 18-19|0.2.1.0.1.0 17-18|0.2.1.0.1.0.0 14-15|0.2.1.0.1 12-13|0.2.1.0 11-12|0.2.1.0.0 10-11|0.2.1 9-10|0.2 5-6|0.0 4-5|0.2.0 3-4|0 2-3|0.1.0 1-2|0.1 0-1|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:57.689
# ::node	0	cause-01	3-4
# ::node	0.0	possible	5-6
# ::node	0.1	damn	1-2
# ::node	0.1.0	you	2-3
# ::node	0.1.0.0	just	0-1
# ::node	0.2	generous-41	9-10
# ::node	0.2.0	you	4-5
# ::node	0.2.1	cause-01	10-11
# ::node	0.2.1.0	promise-01	12-13
# ::node	0.2.1.0.0	you	11-12
# ::node	0.2.1.0.1	you	14-15
# ::node	0.2.1.0.1.0	promise-01	18-19
# ::node	0.2.1.0.1.0.0	you	17-18
# ::node	0.2.1.0.1.0.1	want-01	22-23
# ::node	0.2.1.0.1.0.1.0	you	21-22
# ::node	0.2.1.0.1.0.1.1	word	41-42
# ::node	0.2.1.0.1.0.1.1.0	you	36-37
# ::node	0.2.1.0.1.0.2	and	35-36
# ::node	0.2.1.0.1.0.2.0	love-01	34-35
# ::root	0	cause-01
# ::edge	and	op1	promise-01	0.2.1.0.1.0.2	0.2.1.0.1.0	
# ::edge	and	op2	love-01	0.2.1.0.1.0.2	0.2.1.0.1.0.2.0	
# ::edge	cause-01	ARG0	possible	0	0.0	
# ::edge	cause-01	ARG0	promise-01	0.2.1	0.2.1.0	
# ::edge	cause-01	ARG1	damn	0	0.1	
# ::edge	cause-01	ARG1	generous-41	0.2.1	0.2	
# ::edge	cause-01	condition	generous-41	0	0.2	
# ::edge	damn	degree	you	0.1	0.1.0	
# ::edge	generous-41	ARG0	you	0.2	0.2.0	
# ::edge	promise-01	ARG0	you	0.2.1.0	0.2.1.0.0	
# ::edge	promise-01	ARG0	you	0.2.1.0.1.0	0.2.1.0.1.0.0	
# ::edge	promise-01	ARG1	want-01	0.2.1.0.1.0	0.2.1.0.1.0.1	
# ::edge	promise-01	ARG1	you	0.2.1.0	0.2.1.0.1	
# ::edge	promise-01	ARG2	you	0.2.1.0.1.0	0.2.1.0.1	
# ::edge	want-01	ARG0	you	0.2.1.0.1.0.1	0.2.1.0.1.0.1.0	
# ::edge	want-01	ARG1	word	0.2.1.0.1.0.1	0.2.1.0.1.0.1.1	
# ::edge	word	poss	you	0.2.1.0.1.0.1.1	0.2.1.0.1.0.1.1.0	
# ::edge	you	mod	just	0.1.0	0.1.0.0	
(c2 / cause-01 
      :ARG0 (p3 / possible) 
      :ARG1 (d / damn 
            :degree (y7 / you 
                  :mod (j / just))) 
      :condition (g / generous-41 
            :ARG0 (y6 / you) 
            :ARG1-of (c / cause-01 
                  :ARG0 (p2 / promise-01 
                        :ARG0 (y5 / you) 
                        :ARG1 (y4 / you 
                              :ARG2-of (p / promise-01 
                                    :ARG0 (y3 / you) 
                                    :ARG1 (w2 / want-01 
                                          :ARG0 (y2 / you) 
                                          :ARG1 (w / word 
                                                :poss (y / you))) 
                                    :op-of (a / and 
                                          :op1 (l / love-01))))))))

# ::snt michael promised he would hold out and went to bed feeling much better
# ::tok michael promised he would hold out and went to bed feeling much better
# ::alignments 11-12|0.1.1 10-11|0.0 9-10|0.0.0 6-7|0 2-3|0.1.0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:57.715
# ::node	0	and	6-7
# ::node	0.0	feel-01	10-11
# ::node	0.0.0	bed	9-10
# ::node	0.1	promise-01	1-2
# ::node	0.1.0	he	2-3
# ::node	0.1.1	much	11-12
# ::root	0	and
# ::edge	and	op1	promise-01	0	0.1	
# ::edge	feel-01	ARG0	and	0.0	0	
# ::edge	feel-01	ARG1	bed	0.0	0.0.0	
# ::edge	promise-01	ARG0	he	0.1	0.1.0	
# ::edge	promise-01	ARG1	much	0.1	0.1.1	
(a / and 
      :ARG0-of (f / feel-01 
            :ARG1 (b / bed)) 
      :op1 (p / promise-01 
            :ARG0 (h / he) 
            :ARG1 (m / much)))

# ::snt mercury has promised to use the opportunity to develop the first mobile phone affordable by the general public
# ::tok mercury has promised to use the opportunity to develop the first mobile phone affordable by the general public
# ::alignments 17-18|0.0.1.0.0.0.0 16-17|0.0.1.0.0.0.0.0 13-14|0.0.1.0.0.0 12-13|0.0.1.0.0 11-12|0.0.1.0.0.1 8-9|0.0.1.0 6-7|0.0.1 4-5|0.0 2-3|0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:57.760
# ::node	0	promise-01	2-3
# ::node	0.0	use-01	4-5
# ::node	0.0.0	mercury	0-1
# ::node	0.0.1	opportunity	6-7
# ::node	0.0.1.0	develop-02	8-9
# ::node	0.0.1.0.0	phone	12-13
# ::node	0.0.1.0.0.0	afford-01	13-14
# ::node	0.0.1.0.0.0.0	public	17-18
# ::node	0.0.1.0.0.0.0.0	general	16-17
# ::node	0.0.1.0.0.1	mobile	11-12
# ::root	0	promise-01
# ::edge	afford-01	ARG1	phone	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	afford-01	ARG2	public	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	develop-02	ARG1	phone	0.0.1.0	0.0.1.0.0	
# ::edge	opportunity	purpose	develop-02	0.0.1	0.0.1.0	
# ::edge	phone	mod	mobile	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	promise-01	ARG1	use-01	0	0.0	
# ::edge	public	mod	general	0.0.1.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	use-01	ARG0	mercury	0.0	0.0.0	
# ::edge	use-01	ARG1	opportunity	0.0	0.0.1	
(p3 / promise-01 
      :ARG1 (u / use-01 
            :ARG0 (m2 / mercury) 
            :ARG1 (o / opportunity 
                  :purpose (d / develop-02 
                        :ARG1 (p2 / phone 
                              :ARG1-of (a / afford-01 
                                    :ARG2 (p / public 
                                          :mod (g / general))) 
                              :mod (m / mobile))))))

# ::snt hans modrow the prime minister has downgraded it from a ministry to an office and its new head wolfgang schwanitz has promised it will no longer be a tool of political oppression
# ::tok hans modrow the prime minister has downgraded it from a ministry to an office and its new head wolfgang schwanitz has promised it will no longer be a tool of political oppression
# ::alignments 31-32|0.0 30-31|0.0.1 28-29|0 25-26|0.2 24-25|0.3 22-23|0.1 21-22|0.1.0 17-18|0.1.0.2.0.1 16-17|0.0.0 14-15|0.1.0.2 13-14|0.1.0.2.0.1.0 10-11|0.1.0.1 7-8|0.1.0.0 4-5|0.1.0.2.0.0.0+0.1.0.2.0.0 3-4|0.1.0.2.0.0.0.0 0-2|0.1.0.2.0.2.0+0.1.0.2.0.2.1+0.1.0.2.0.2+0.1.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:58.380
# ::node	0	tool	28-29
# ::node	0.0	oppress-01	31-32
# ::node	0.0.0	new	16-17
# ::node	0.0.1	politics	30-31
# ::node	0.1	it	22-23
# ::node	0.1.0	promise-01	21-22
# ::node	0.1.0.0	it	7-8
# ::node	0.1.0.1	ministry	10-11
# ::node	0.1.0.2	and	14-15
# ::node	0.1.0.2.0	person	0-2
# ::node	0.1.0.2.0.0	have-org-role-91	4-5
# ::node	0.1.0.2.0.0.0	minister	4-5
# ::node	0.1.0.2.0.0.0.0	prime	3-4
# ::node	0.1.0.2.0.1	head-01	17-18
# ::node	0.1.0.2.0.1.0	office	13-14
# ::node	0.1.0.2.0.2	name	0-2
# ::node	0.1.0.2.0.2.0	"modrow"	0-2
# ::node	0.1.0.2.0.2.1	"hans"	0-2
# ::node	0.2	long	25-26
# ::node	0.3	-	24-25
# ::root	0	tool
# ::edge	and	op1	person	0.1.0.2	0.1.0.2.0	
# ::edge	and	op2	promise-01	0.1.0.2	0.1.0	
# ::edge	have-org-role-91	ARG0	person	0.1.0.2.0.0	0.1.0.2.0	
# ::edge	have-org-role-91	ARG2	minister	0.1.0.2.0.0	0.1.0.2.0.0.0	
# ::edge	head-01	ARG0	person	0.1.0.2.0.1	0.1.0.2.0	
# ::edge	head-01	poss	office	0.1.0.2.0.1	0.1.0.2.0.1.0	
# ::edge	minister	mod	prime	0.1.0.2.0.0.0	0.1.0.2.0.0.0.0	
# ::edge	name	op1	"modrow"	0.1.0.2.0.2	0.1.0.2.0.2.0	
# ::edge	name	op2	"hans"	0.1.0.2.0.2	0.1.0.2.0.2.1	
# ::edge	oppress-01	ARG0	new	0.0	0.0.0	
# ::edge	oppress-01	ARG1	tool	0.0	0	
# ::edge	oppress-01	mod	politics	0.0	0.0.1	
# ::edge	person	name	name	0.1.0.2.0	0.1.0.2.0.2	
# ::edge	promise-01	ARG0	it	0.1.0	0.1	
# ::edge	promise-01	ARG1	it	0.1.0	0.1.0.0	
# ::edge	promise-01	location	ministry	0.1.0	0.1.0.1	
# ::edge	tool	domain	it	0	0.1	
# ::edge	tool	mod	long	0	0.2	
# ::edge	tool	polarity	-	0	0.3	
(t / tool 
      :ARG1-of (o / oppress-01 
            :ARG0 (n / new) 
            :mod (p / politics)) 
      :domain (i / it 
            :ARG0-of (p2 / promise-01 
                  :ARG1 (i2 / it) 
                  :location (m / ministry) 
                  :op-of (a / and 
                        :op1 (p4 / person 
                              :ARG0-of (h2 / have-org-role-91 
                                    :ARG2 (m2 / minister 
                                          :mod (p3 / prime))) 
                              :ARG0-of (h / head-01 
                                    :poss (o2 / office)) 
                              :name (n2 / name 
                                    :op1 "modrow" 
                                    :op2 "hans"))))) 
      :mod (l / long) 
      :polarity (- / -))

# ::snt he opened the berlin wall and the border to let his people travel he promised free multiparty elections and eventually agreed to abolish the communists constitutional right to political control
# ::tok he opened the berlin wall and the border to let his people travel he promised free multiparty elections and eventually agreed to abolish the communists constitutional right to political control
# ::alignments 29-30|0.1.0.0.0.0.0.0.0 28-29|0.1.0.0.0.0.0.0.0.0 25-26|0.1.0.0.0.1.1.0 24-25|0.1.0.0.0.1.0 22-23|0.1.0.0.0.0.0.0 20-21|0.1.0.0.0.0.0 19-20|0.1.0.0.0.0.0.1 18-19|0.1.0.0.0.2 17-18|0.1.0.0.0.1 15-16|0.1.0.0.0.1.1 14-15|0.1.0.0.0 13-14|0.1.0.0.0.0 12-13|0.1.0.0 9-10|0 7-8|0.1 5-6|0.1.0 4-5|0.0.0.0 1-2|0.0.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:58.754
# ::node	0	let-01	9-10
# ::node	0.0	he	0-1
# ::node	0.0.0	open-01	1-2
# ::node	0.0.0.0	wall	4-5
# ::node	0.1	border-01	7-8
# ::node	0.1.0	and	5-6
# ::node	0.1.0.0	travel-01	12-13
# ::node	0.1.0.0.0	promise-01	14-15
# ::node	0.1.0.0.0.0	he	13-14
# ::node	0.1.0.0.0.0.0	agree-01	20-21
# ::node	0.1.0.0.0.0.0.0	abolish-01	22-23
# ::node	0.1.0.0.0.0.0.0.0	control-01	29-30
# ::node	0.1.0.0.0.0.0.0.0.0	politics	28-29
# ::node	0.1.0.0.0.0.0.1	eventual	19-20
# ::node	0.1.0.0.0.1	elect-01	17-18
# ::node	0.1.0.0.0.1.0	communism	24-25
# ::node	0.1.0.0.0.1.1	free-41	15-16
# ::node	0.1.0.0.0.1.1.0	constitution	25-26
# ::node	0.1.0.0.0.2	and	18-19
# ::root	0	let-01
# ::edge	abolish-01	ARG1	control-01	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0.0.0	
# ::edge	agree-01	ARG0	he	0.1.0.0.0.0.0	0.1.0.0.0.0	
# ::edge	agree-01	ARG1	abolish-01	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	agree-01	time	eventual	0.1.0.0.0.0.0	0.1.0.0.0.0.0.1	
# ::edge	and	op1	border-01	0.1.0	0.1	
# ::edge	and	op1	promise-01	0.1.0.0.0.2	0.1.0.0.0	
# ::edge	border-01	ARG1	let-01	0.1	0	
# ::edge	control-01	ARG1	politics	0.1.0.0.0.0.0.0.0	0.1.0.0.0.0.0.0.0.0	
# ::edge	elect-01	ARG1	communism	0.1.0.0.0.1	0.1.0.0.0.1.0	
# ::edge	free-41	ARG0	constitution	0.1.0.0.0.1.1	0.1.0.0.0.1.1.0	
# ::edge	free-41	ARG1	elect-01	0.1.0.0.0.1.1	0.1.0.0.0.1	
# ::edge	let-01	ARG0	he	0	0.0	
# ::edge	open-01	ARG0	he	0.0.0	0.0	
# ::edge	open-01	ARG1	wall	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG0	he	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	promise-01	ARG2	elect-01	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	travel-01	ARG0	and	0.1.0.0	0.1.0	
# ::edge	travel-01	ARG1	promise-01	0.1.0.0	0.1.0.0.0	
(l / let-01 
      :ARG0 (h2 / he 
            :ARG0-of (o / open-01 
                  :ARG1 (w / wall))) 
      :ARG1-of (b / border-01 
            :op-of (a4 / and 
                  :ARG0-of (t / travel-01 
                        :ARG1 (p2 / promise-01 
                              :ARG0 (h / he 
                                    :ARG0-of (a2 / agree-01 
                                          :ARG1 (a / abolish-01 
                                                :ARG1 (c / control-01 
                                                      :ARG1 (p / politics))) 
                                          :time (e / eventual))) 
                              :ARG2 (e2 / elect-01 
                                    :ARG1 (c3 / communism) 
                                    :ARG1-of (f / free-41 
                                          :ARG0 (c2 / constitution))) 
                              :op-of (a3 / and))))))

# ::snt the crew had removed most of the roof promising faithfully to replace all the glass and tiles
# ::tok the crew had removed most of the roof promising faithfully to replace all the glass and tiles
# ::alignments 15-16|0 14-15|0.0.0 12-13|0.0.0.0 11-12|0.0 8-9|0.0.1 7-8|0.0.1.0 4-5|0.1.1 3-4|0.1 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:58.925
# ::node	0	and	15-16
# ::node	0.0	replace-01	11-12
# ::node	0.0.0	glass	14-15
# ::node	0.0.0.0	all	12-13
# ::node	0.0.1	promise-01	8-9
# ::node	0.0.1.0	roof	7-8
# ::node	0.1	remove-01	3-4
# ::node	0.1.0	crew	1-2
# ::node	0.1.1	most	4-5
# ::root	0	and
# ::edge	and	op1	remove-01	0	0.1	
# ::edge	glass	quant	all	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	roof	0.0.1	0.0.1.0	
# ::edge	promise-01	ARG2	replace-01	0.0.1	0.0	
# ::edge	remove-01	ARG0	crew	0.1	0.1.0	
# ::edge	remove-01	ARG1	most	0.1	0.1.1	
# ::edge	replace-01	ARG1	and	0.0	0	
# ::edge	replace-01	ARG2	glass	0.0	0.0.0	
(a / and 
      :ARG1-of (r / replace-01 
            :ARG2 (g / glass 
                  :quant (a2 / all)) 
            :ARG2-of (p / promise-01 
                  :ARG1 (r2 / roof))) 
      :op1 (r3 / remove-01 
            :ARG0 (c / crew) 
            :ARG1 (m / most)))

# ::snt i cant promise it will be like that for the rest of the journey
# ::tok i cant promise it will be like that for the rest of the journey
# ::alignments 13-14|0 10-11|0.1 3-4|0.0.1 2-3|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:58.958
# ::node	0	journey-01	13-14
# ::node	0.0	promise-01	2-3
# ::node	0.0.0	i	0-1
# ::node	0.0.1	it	3-4
# ::node	0.1	rest	10-11
# ::root	0	journey-01
# ::edge	journey-01	part	rest	0	0.1	
# ::edge	promise-01	ARG0	i	0.0	0.0.0	
# ::edge	promise-01	ARG1	journey-01	0.0	0	
# ::edge	promise-01	ARG2	it	0.0	0.0.1	
(j / journey-01 
      :ARG1-of (p / promise-01 
            :ARG0 (i2 / i) 
            :ARG2 (i / it)) 
      :part (r / rest))

# ::snt an oxford firm at the centre of a row about the smell around its woodstock road site for the past 16 years has promised to clean up its act
# ::tok an oxford firm at the centre of a row about the smell around its woodstock road site for the past 16 years has promised to clean up its act
# ::alignments 28-29|0.2.0 25-26|0.2 23-24|0 21-22|0.1.0.1+0.1.0 20-21|0.1.0.0 19-20|0.1 16-17|0.2.0.0.1 15-16|0.2.0.0.1.0 12-13|0.2.0.0.1.1 11-12|0.2.0.0 8-9|0.2.0.0.0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:59.090
# ::node	0	promise-01	23-24
# ::node	0.0	firm	2-3
# ::node	0.1	past	19-20
# ::node	0.1.0	temporal-quantity	21-22
# ::node	0.1.0.0	16	20-21
# ::node	0.1.0.1	year	21-22
# ::node	0.2	clean	25-26
# ::node	0.2.0	act-02	28-29
# ::node	0.2.0.0	smell-01	11-12
# ::node	0.2.0.0.0	row	8-9
# ::node	0.2.0.0.1	site	16-17
# ::node	0.2.0.0.1.0	road	15-16
# ::node	0.2.0.0.1.1	around	12-13
# ::root	0	promise-01
# ::edge	act-02	ARG0	clean	0.2.0	0.2	
# ::edge	act-02	ARG1	smell-01	0.2.0	0.2.0.0	
# ::edge	around	op1	site	0.2.0.0.1.1	0.2.0.0.1	
# ::edge	past	op1	temporal-quantity	0.1	0.1.0	
# ::edge	promise-01	ARG0	firm	0	0.0	
# ::edge	promise-01	ARG1	past	0	0.1	
# ::edge	promise-01	ARG2	clean	0	0.2	
# ::edge	site	mod	road	0.2.0.0.1	0.2.0.0.1.0	
# ::edge	smell-01	ARG0	row	0.2.0.0	0.2.0.0.0	
# ::edge	smell-01	ARG1	site	0.2.0.0	0.2.0.0.1	
# ::edge	temporal-quantity	quant	16	0.1.0	0.1.0.0	
# ::edge	temporal-quantity	unit	year	0.1.0	0.1.0.1	
(p / promise-01 
      :ARG0 (f / firm) 
      :ARG1 (p2 / past 
            :op1 (t / temporal-quantity 
                  :quant 16 
                  :unit (y / year))) 
      :ARG2 (c / clean 
            :ARG0-of (a / act-02 
                  :ARG1 (s2 / smell-01 
                        :ARG0 (r2 / row) 
                        :ARG1 (s / site 
                              :mod (r / road) 
                              :op-of (a2 / around))))))

# ::snt the tenth he promises will reflect how lucky he feels to be alive when in 1984 the doctors gave him only two years to live
# ::tok the tenth he promises will reflect how lucky he feels to be alive when in 1984 the doctors gave him only two years to live
# ::alignments 24-25|0 22-23|0.2.2+0.2 21-22|0.2.1 20-21|0.2.0 17-18|0.0 15-16|0.1.1.0.0+0.1.1.0 8-9|0.1.1.1.0 7-8|0.1.1.1 5-6|0.1.1 3-4|0.1 2-3|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:59.202
# ::node	0	live-01	24-25
# ::node	0.0	doctor	17-18
# ::node	0.1	promise-01	3-4
# ::node	0.1.0	he	2-3
# ::node	0.1.1	reflect-01	5-6
# ::node	0.1.1.0	date-entity	15-16
# ::node	0.1.1.0.0	1984	15-16
# ::node	0.1.1.1	lucky	7-8
# ::node	0.1.1.1.0	he	8-9
# ::node	0.2	temporal-quantity	22-23
# ::node	0.2.0	only	20-21
# ::node	0.2.1	2	21-22
# ::node	0.2.2	year	22-23
# ::root	0	live-01
# ::edge	date-entity	year	1984	0.1.1.0	0.1.1.0.0	
# ::edge	live-01	ARG0	doctor	0	0.0	
# ::edge	live-01	ARG1	promise-01	0	0.1	
# ::edge	live-01	duration	temporal-quantity	0	0.2	
# ::edge	lucky	domain	he	0.1.1.1	0.1.1.1.0	
# ::edge	promise-01	ARG0	he	0.1	0.1.0	
# ::edge	promise-01	ARG1	reflect-01	0.1	0.1.1	
# ::edge	reflect-01	ARG0	date-entity	0.1.1	0.1.1.0	
# ::edge	reflect-01	ARG1	lucky	0.1.1	0.1.1.1	
# ::edge	temporal-quantity	mod	only	0.2	0.2.0	
# ::edge	temporal-quantity	quant	2	0.2	0.2.1	
# ::edge	temporal-quantity	unit	year	0.2	0.2.2	
(l / live-01 
      :ARG0 (d / doctor) 
      :ARG1 (p / promise-01 
            :ARG0 (h2 / he) 
            :ARG1 (r / reflect-01 
                  :ARG0 (d2 / date-entity 
                        :year 1984) 
                  :ARG1 (l2 / lucky 
                        :domain (h / he)))) 
      :duration (t / temporal-quantity 
            :mod (o / only) 
            :quant 2 
            :unit (y / year)))

# ::snt despite the seriousness of the affair most of the 150 people arrested have since been released and the former commander of the revolutionary guards mohsen rafiqdost who was called to the scene promised the demonstrators that the complaints of the people would be reported to the government
# ::tok despite the seriousness of the affair most of the 150 people arrested have since been released and the former commander of the revolutionary guards mohsen rafiqdost who was called to the scene promised the demonstrators that the complaints of the people would be reported to the government
# ::alignments 43-44|0.0.0.1.1 37-38|0.0.0.1.1.0 34-35|0+0.0 32-33|0.0.0 31-32|0.0.0.2 23-24|0.0.0.0.0.0.0+0.0.0.0.0.0 22-23|0.0.0.0.0.0.1 19-20|0.0.0.0+0.0.0.0.0 18-19|0.0.0.0.0.2 16-17|0.0.0.1 15-16|0.0.0.1.0 13-14|0.0.0.1.0.1 11-12|0.0.1 9-10|0.0.0.0.0.1 6-7|0.0.0.1.0.0.1 5-6|0.0.0.1.0.0 2-3|0.0.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:29:59.778
# ::node	0	demonstrate-01	34-35
# ::node	0.0	person	34-35
# ::node	0.0.0	promise-01	32-33
# ::node	0.0.0.0	commander	19-20
# ::node	0.0.0.0.0	have-org-role-91	19-20
# ::node	0.0.0.0.0.0	person	23-24
# ::node	0.0.0.0.0.0.0	guard-01	23-24
# ::node	0.0.0.0.0.0.1	revolution	22-23
# ::node	0.0.0.0.0.1	150	9-10
# ::node	0.0.0.0.0.2	former	18-19
# ::node	0.0.0.1	and	16-17
# ::node	0.0.0.1.0	release-01	15-16
# ::node	0.0.0.1.0.0	affair	5-6
# ::node	0.0.0.1.0.0.0	serious-41	2-3
# ::node	0.0.0.1.0.0.1	most	6-7
# ::node	0.0.0.1.0.1	since	13-14
# ::node	0.0.0.1.1	report-01	43-44
# ::node	0.0.0.1.1.0	complain-01	37-38
# ::node	0.0.0.2	scene	31-32
# ::node	0.0.1	arrest-01	11-12
# ::root	0	demonstrate-01
# ::edge	affair	mod	most	0.0.0.1.0.0	0.0.0.1.0.0.1	
# ::edge	and	op1	release-01	0.0.0.1	0.0.0.1.0	
# ::edge	and	op2	promise-01	0.0.0.1	0.0.0	
# ::edge	and	op3	report-01	0.0.0.1	0.0.0.1.1	
# ::edge	arrest-01	ARG1	person	0.0.1	0.0	
# ::edge	demonstrate-01	ARG0	person	0	0.0	
# ::edge	guard-01	ARG0	person	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	have-org-role-91	ARG0	person	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	have-org-role-91	ARG1	150	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	have-org-role-91	ARG2	commander	0.0.0.0.0	0.0.0.0	
# ::edge	have-org-role-91	time	former	0.0.0.0.0	0.0.0.0.0.2	
# ::edge	person	mod	revolution	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	promise-01	ARG0	commander	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	person	0.0.0	0.0	
# ::edge	promise-01	time	scene	0.0.0	0.0.0.2	
# ::edge	release-01	ARG0	affair	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	release-01	time	since	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	report-01	ARG1	complain-01	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	serious-41	ARG2	affair	0.0.0.1.0.0.0	0.0.0.1.0.0	
(d / demonstrate-01 
      :ARG0 (p / person 
            :ARG1-of (p2 / promise-01 
                  :ARG0 (c2 / commander 
                        :ARG2-of (h / have-org-role-91 
                              :ARG0 (p3 / person 
                                    :ARG0-of (g / guard-01) 
                                    :mod (r2 / revolution)) 
                              :ARG1 150 
                              :time (f / former))) 
                  :op-of (a / and 
                        :op1 (r3 / release-01 
                              :ARG0 (a3 / affair 
                                    :ARG2-of (s3 / serious-41) 
                                    :mod (m / most)) 
                              :time (s2 / since)) 
                        :op2 (r / report-01 
                              :ARG1 (c / complain-01))) 
                  :time (s / scene)) 
            :ARG1-of (a2 / arrest-01)))

# ::snt inspired by their octogenarian leaders nostalgia fashion designers are promising a return to the austere clothing of the 1950s now hailed as the highwater mark of the revolutionary tradition of bitter struggle and hard living
# ::tok inspired by their octogenarian leaders nostalgia fashion designers are promising a return to the austere clothing of the 1950s now hailed as the highwater mark of the revolutionary tradition of bitter struggle and hard living
# ::alignments 34-35|0.0.0.0.0.0.0.1.1.1.0 33-34|0.0.0.0.0.0.0.1.1.1.0.0 32-33|0.0.0.0.0.0.0.1.1.1 31-32|0.0 30-31|0 28-29|0.0.0 27-28|0.0.0.1 24-25|0.0.0.0 20-21|0.0.0.0.0 19-20|0.0.0.0.0.1 18-19|0.0.0.0.0.0 15-16|0.0.0.0.0.0.0.0 14-15|0.0.0.0.0.0.0.0.0 9-10|0.0.0.0.0.0.0 6-7|0.0.0.0.0.0.0.1.1.0 4-5|0.0.0.0.0.0.0.1.0+0.0.0.0.0.0.0.1 0-1|0.0.0.0.0.0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:00.137
# ::node	0	bitter	30-31
# ::node	0.0	struggle-01	31-32
# ::node	0.0.0	tradition	28-29
# ::node	0.0.0.0	mark-01	24-25
# ::node	0.0.0.0.0	hail-02	20-21
# ::node	0.0.0.0.0.0	1950	18-19
# ::node	0.0.0.0.0.0.0	promise-01	9-10
# ::node	0.0.0.0.0.0.0.0	clothing	15-16
# ::node	0.0.0.0.0.0.0.0.0	austere	14-15
# ::node	0.0.0.0.0.0.0.1	person	4-5
# ::node	0.0.0.0.0.0.0.1.0	lead-02	4-5
# ::node	0.0.0.0.0.0.0.1.1	inspire-01	0-1
# ::node	0.0.0.0.0.0.0.1.1.0	fashion	6-7
# ::node	0.0.0.0.0.0.0.1.1.1	and	32-33
# ::node	0.0.0.0.0.0.0.1.1.1.0	live-01	34-35
# ::node	0.0.0.0.0.0.0.1.1.1.0.0	hard	33-34
# ::node	0.0.0.0.0.1	now	19-20
# ::node	0.0.0.1	revolution	27-28
# ::root	0	bitter
(b / bitter 
      :mod-of (s / struggle-01 
            :topic-of (t / tradition 
                  :ARG1-of (m / mark-01 
                        :ARG2-of (h2 / hail-02 
                              :ARG1 (1 / 1950 
                                    :ARG3-of (p / promise-01 
                                          :ARG0 (c / clothing 
                                                :mod (a2 / austere)) 
                                          :ARG1 (p2 / person 
                                                :ARG0-of (l2 / lead-02) 
                                                :ARG0-of (i / inspire-01 
                                                      :ARG1 (f / fashion) 
                                                      :op-of (a / and 
                                                            :op1 (l / live-01 
                                                                  :ARG1 (h / hard))))))) 
                              :time (n / now))) 
                  :mod (r / revolution))))

# ::snt iraq yesterday promised to allow british officials in baghdad to visit farzad bazoft the observer journalist arrested on 15 september after trying to investigate the mystery explosion at an arms factory which killed hundreds, iraq also promised to allow consular access very soon to a british nurse daphne parish arrested at the same time as mr bazoft
# ::tok iraq yesterday promised to allow british officials in baghdad to visit farzad bazoft the observer journalist arrested on 15 september after trying to investigate the mystery explosion at an arms factory which killed hundreds , iraq also promised to allow consular access very soon to a british nurse daphne parish arrested at the same time as mr bazoft
# ::alignments 54-55|0.0.0.1.0.0 53-54|0.0.0.1.0.0.0 50-51|0.0.0.1.0 47-48|0.0.0.1.1+0.0.0.1 43-44|0.1.2 42-43|0.1.2.0 41-42|0.1.1 39-40|0.1 37-38|0 36-37|0.2 32-33|0.0 30-31|0.0.1 29-30|0.0.1.0 26-27|0.0.0 25-26|0.0.0.0 23-24|0.0.0.2 21-22|0.0.0.2.0 20-21|0.0.0.2.0.0 19-20|0.0.0.2.0.0.0.1.0+0.0.0.2.0.0.0.1 18-19|0.1.0 16-17|0.0.0.2.0.0.0 15-16|0.0.0.2.0.0.0.0 14-15|0.0.0.2.0.0.0.0.1 10-11|0.0.0.2.0.0.0.0.0.0.1 6-7|0.0.0.2.0.0.0.0.0.0.1.0.0+0.0.0.2.0.0.0.0.0.0.1.0 4-5|0.0.0.2.0.0.0.0.0.0 2-3|0.0.0.2.0.0.0.0.0 1-2|0.0.0.2.0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:01.243
# ::node	0	promise-01	37-38
# ::node	0.0	kill-01	32-33
# ::node	0.0.0	explode-01	26-27
# ::node	0.0.0.0	mystery	25-26
# ::node	0.0.0.1	have-org-role-91	47-48
# ::node	0.0.0.1.0	arrest-01	50-51
# ::node	0.0.0.1.0.0	time	54-55
# ::node	0.0.0.1.0.0.0	same-41	53-54
# ::node	0.0.0.1.1	nurse	47-48
# ::node	0.0.0.2	investigate-01	23-24
# ::node	0.0.0.2.0	try-01	21-22
# ::node	0.0.0.2.0.0	after	20-21
# ::node	0.0.0.2.0.0.0	arrest-01	16-17
# ::node	0.0.0.2.0.0.0.0	journalist	15-16
# ::node	0.0.0.2.0.0.0.0.0	promise-01	2-3
# ::node	0.0.0.2.0.0.0.0.0.0	allow-01	4-5
# ::node	0.0.0.2.0.0.0.0.0.0.0	yesterday	1-2
# ::node	0.0.0.2.0.0.0.0.0.0.1	visit-01	10-11
# ::node	0.0.0.2.0.0.0.0.0.0.1.0	have-org-role-91	6-7
# ::node	0.0.0.2.0.0.0.0.0.0.1.0.0	official	6-7
# ::node	0.0.0.2.0.0.0.0.1	observe-01	14-15
# ::node	0.0.0.2.0.0.0.1	date-entity	19-20
# ::node	0.0.0.2.0.0.0.1.0	9	19-20
# ::node	0.0.1	factory	30-31
# ::node	0.0.1.0	arm	29-30
# ::node	0.1	allow-01	39-40
# ::node	0.1.0	15	18-19
# ::node	0.1.1	access-01	41-42
# ::node	0.1.2	soon	43-44
# ::node	0.1.2.0	very	42-43
# ::node	0.2	also	36-37
# ::root	0	promise-01
# ::edge	after	op1	try-01	0.0.0.2.0.0	0.0.0.2.0	
# ::edge	allow-01	ARG0	15	0.1	0.1.0	
# ::edge	allow-01	ARG0	yesterday	0.0.0.2.0.0.0.0.0.0	0.0.0.2.0.0.0.0.0.0.0	
# ::edge	allow-01	ARG1	access-01	0.1	0.1.1	
# ::edge	allow-01	ARG1	visit-01	0.0.0.2.0.0.0.0.0.0	0.0.0.2.0.0.0.0.0.0.1	
# ::edge	allow-01	time	soon	0.1	0.1.2	
# ::edge	arrest-01	ARG1	have-org-role-91	0.0.0.1.0	0.0.0.1	
# ::edge	arrest-01	ARG1	journalist	0.0.0.2.0.0.0	0.0.0.2.0.0.0.0	
# ::edge	arrest-01	time	after	0.0.0.2.0.0.0	0.0.0.2.0.0	
# ::edge	arrest-01	time	date-entity	0.0.0.2.0.0.0	0.0.0.2.0.0.0.1	
# ::edge	arrest-01	time	time	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	date-entity	month	9	0.0.0.2.0.0.0.1	0.0.0.2.0.0.0.1.0	
# ::edge	explode-01	ARG1	mystery	0.0.0	0.0.0.0	
# ::edge	factory	mod	arm	0.0.1	0.0.1.0	
# ::edge	have-org-role-91	ARG1	explode-01	0.0.0.1	0.0.0	
# ::edge	have-org-role-91	ARG1	visit-01	0.0.0.2.0.0.0.0.0.0.1.0	0.0.0.2.0.0.0.0.0.0.1	
# ::edge	have-org-role-91	ARG2	nurse	0.0.0.1	0.0.0.1.1	
# ::edge	have-org-role-91	ARG2	official	0.0.0.2.0.0.0.0.0.0.1.0	0.0.0.2.0.0.0.0.0.0.1.0.0	
# ::edge	investigate-01	ARG1	explode-01	0.0.0.2	0.0.0	
# ::edge	kill-01	ARG0	explode-01	0.0	0.0.0	
# ::edge	kill-01	ARG1	factory	0.0	0.0.1	
# ::edge	observe-01	ARG0	journalist	0.0.0.2.0.0.0.0.1	0.0.0.2.0.0.0.0	
# ::edge	promise-01	ARG0	journalist	0.0.0.2.0.0.0.0.0	0.0.0.2.0.0.0.0	
# ::edge	promise-01	ARG1	allow-01	0.0.0.2.0.0.0.0.0	0.0.0.2.0.0.0.0.0.0	
# ::edge	promise-01	ARG1	kill-01	0	0.0	
# ::edge	promise-01	ARG2	allow-01	0	0.1	
# ::edge	promise-01	mod	also	0	0.2	
# ::edge	same-41	ARG1	time	0.0.0.1.0.0.0	0.0.0.1.0.0	
# ::edge	soon	degree	very	0.1.2	0.1.2.0	
# ::edge	try-01	ARG1	investigate-01	0.0.0.2.0	0.0.0.2	
(p / promise-01 
      :ARG1 (k / kill-01 
            :ARG0 (e / explode-01 
                  :ARG1 (m / mystery) 
                  :ARG1-of (h / have-org-role-91 
                        :ARG1-of (a / arrest-01 
                              :time (t / time 
                                    :ARG1-of (s / same-41))) 
                        :ARG2 (n / nurse)) 
                  :ARG1-of (i / investigate-01 
                        :ARG1-of (t2 / try-01 
                              :op-of (a6 / after 
                                    :time-of (a7 / arrest-01 
                                          :ARG1 (j / journalist 
                                                :ARG0-of (p2 / promise-01 
                                                      :ARG1 (a8 / allow-01 
                                                            :ARG0 (y / yesterday) 
                                                            :ARG1 (v2 / visit-01 
                                                                  :ARG1-of (h2 / have-org-role-91 
                                                                        :ARG2 (o2 / official))))) 
                                                :ARG0-of (o / observe-01)) 
                                          :time (d / date-entity 
                                                :month 9)))))) 
            :ARG1 (f / factory 
                  :mod (a5 / arm))) 
      :ARG2 (a3 / allow-01 
            :ARG0 15 
            :ARG1 (a2 / access-01) 
            :time (s2 / soon 
                  :degree (v / very))) 
      :mod (a4 / also))

# ::snt but the young royals he had been promised had let him down
# ::tok but the young royals he had been promised had let him down
# ::alignments 11-12|0.0.0.0.0 9-10|0.0.0.0 7-8|0.0 4-5|0.0.0 2-3|0.0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:01.259
# ::node	0	contrast-01	0-1
# ::node	0.0	promise-01	7-8
# ::node	0.0.0	he	4-5
# ::node	0.0.0.0	let-01	9-10
# ::node	0.0.0.0.0	down	11-12
# ::node	0.0.1	young	2-3
# ::root	0	contrast-01
# ::edge	contrast-01	ARG2	promise-01	0	0.0	
# ::edge	let-01	ARG0	he	0.0.0.0	0.0.0	
# ::edge	let-01	ARG1	down	0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	ARG0	he	0.0	0.0.0	
# ::edge	promise-01	ARG1	young	0.0	0.0.1	
(c / contrast-01 
      :ARG2 (p / promise-01 
            :ARG0 (h / he 
                  :ARG0-of (l / let-01 
                        :ARG1 (d / down))) 
            :ARG1 (y / young)))

# ::snt tony newton secretary of state for social security won support in the commons in october by promising the 100m increase in benefits
# ::tok tony newton secretary of state for social security won support in the commons in october by promising the 100m increase in benefits
# ::alignments 21-22|0.1.1.0 19-20|0.1.1.1 16-17|0.1.1 14-15|0.1.1.0.0.0+0.1.1.0.0 12-13|0.1.0.0.0+0.1.0.0+0.1.0 9-10|0.1 8-9|0 7-8|0.0.0.1 6-7|0.0.0.0 4-5|0.0.0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:01.367
# ::node	0	win-01	8-9
# ::node	0.0	secretary	2-3
# ::node	0.0.0	state	4-5
# ::node	0.0.0.0	society	6-7
# ::node	0.0.0.1	security	7-8
# ::node	0.1	support-01	9-10
# ::node	0.1.0	government-organization	12-13
# ::node	0.1.0.0	name	12-13
# ::node	0.1.0.0.0	"Commons"	12-13
# ::node	0.1.1	promise-01	16-17
# ::node	0.1.1.0	benefit-01	21-22
# ::node	0.1.1.0.0	date-entity	14-15
# ::node	0.1.1.0.0.0	10	14-15
# ::node	0.1.1.1	increase-01	19-20
# ::root	0	win-01
# ::edge	benefit-01	ARG0	date-entity	0.1.1.0	0.1.1.0.0	
# ::edge	date-entity	month	10	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	government-organization	name	name	0.1.0	0.1.0.0	
# ::edge	name	op1	"Commons"	0.1.0.0	0.1.0.0.0	
# ::edge	promise-01	ARG1	benefit-01	0.1.1	0.1.1.0	
# ::edge	promise-01	ARG2	increase-01	0.1.1	0.1.1.1	
# ::edge	secretary	mod	state	0.0	0.0.0	
# ::edge	state	poss	society	0.0.0	0.0.0.0	
# ::edge	state	purpose	security	0.0.0	0.0.0.1	
# ::edge	support-01	ARG0	government-organization	0.1	0.1.0	
# ::edge	support-01	ARG1	promise-01	0.1	0.1.1	
# ::edge	win-01	ARG0	secretary	0	0.0	
# ::edge	win-01	ARG1	support-01	0	0.1	
(w / win-01 
      :ARG0 (s5 / secretary 
            :mod (s4 / state 
                  :poss (s3 / society) 
                  :purpose (s2 / security))) 
      :ARG1 (s / support-01 
            :ARG0 (g / government-organization 
                  :name (n / name 
                        :op1 "Commons")) 
            :ARG1 (p / promise-01 
                  :ARG1 (b / benefit-01 
                        :ARG0 (d / date-entity 
                              :month 10)) 
                  :ARG2 (i / increase-01))))

# ::snt if the people involved could be tracked down promised a man from the current czech administration they would be sent to jail
# ::tok if the people involved could be tracked down promised a man from the current czech administration they would be sent to jail
# ::alignments 21-22|0.0.1.0.1 19-20|0.0.1.0 16-17|0.0.1.0.0 15-16|0.0.1.0.0.0 13-14|0.0.1.0.0.0.0 10-11|0.0.1 8-9|0.0 7-8|0.0.0 4-5|0 3-4|0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:01.469
# ::node	0	possible	4-5
# ::node	0.0	promise-01	8-9
# ::node	0.0.0	down	7-8
# ::node	0.0.1	man	10-11
# ::node	0.0.1.0	send-01	19-20
# ::node	0.0.1.0.0	they	16-17
# ::node	0.0.1.0.0.0	administrate-01	15-16
# ::node	0.0.1.0.0.0.0	current	13-14
# ::node	0.0.1.0.1	jail	21-22
# ::node	0.0.1.1	involve-01	3-4
# ::root	0	possible
# ::edge	administrate-01	ARG1	they	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	administrate-01	time	current	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	involve-01	ARG1	man	0.0.1.1	0.0.1	
# ::edge	possible	domain	promise-01	0	0.0	
# ::edge	promise-01	ARG0	down	0.0	0.0.0	
# ::edge	promise-01	ARG1	man	0.0	0.0.1	
# ::edge	send-01	ARG0	man	0.0.1.0	0.0.1	
# ::edge	send-01	ARG1	they	0.0.1.0	0.0.1.0.0	
# ::edge	send-01	ARG2	jail	0.0.1.0	0.0.1.0.1	
(p2 / possible 
      :domain (p / promise-01 
            :ARG0 (d / down) 
            :ARG1 (m / man 
                  :ARG0-of (s / send-01 
                        :ARG1 (t / they 
                              :ARG1-of (a / administrate-01 
                                    :time (c / current))) 
                        :ARG2 (j / jail)) 
                  :ARG1-of (i / involve-01))))

# ::snt even south africa seemed to have buried the hatchet with swapo and president f w de klerk promised his cooperation in a spirit of goodneighbourliness
# ::tok even south africa seemed to have buried the hatchet with swapo and president f w de klerk promised his cooperation in a spirit of goodneighbourliness
# ::alignments 22-23|0.0.0.0.0.0 19-20|0.0.0.0.0 17-18|0.0.0.0.0.1 13-14|0.0.0.0.0.1.0 12-13|0.0.0.0.0.1.0.0.0+0.0.0.0.0.1.0.0 11-12|0 6-7|0.0 3-4|0.0.0 1-3|0.0.0.0.1.0+0.0.0.0.1.1+0.0.0.0.1+0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:01.799
# ::node	0	and	11-12
# ::node	0.0	bury-01	6-7
# ::node	0.0.0	seem-01	3-4
# ::node	0.0.0.0	country	1-3
# ::node	0.0.0.0.0	cooperate-01	19-20
# ::node	0.0.0.0.0.0	spirit	22-23
# ::node	0.0.0.0.0.1	promise-01	17-18
# ::node	0.0.0.0.0.1.0	f	13-14
# ::node	0.0.0.0.0.1.0.0	have-org-role-91	12-13
# ::node	0.0.0.0.0.1.0.0.0	president	12-13
# ::node	0.0.0.0.1	name	1-3
# ::node	0.0.0.0.1.0	"africa"	1-3
# ::node	0.0.0.0.1.1	"south"	1-3
# ::root	0	and
(a / and 
      :ARG1-of (b / bury-01 
            :ARG1-of (s2 / seem-01 
                  :mod (c2 / country 
                        :ARG0-of (c / cooperate-01 
                              :ARG1 (s / spirit) 
                              :ARG1-of (p / promise-01 
                                    :ARG0 (f / f 
                                          :ARG1-of (h / have-org-role-91 
                                                :ARG2 (p2 / president))))) 
                        :name (n / name 
                              :op1 "africa" 
                              :op2 "south")))))

# ::snt and vietnam has promised everyone that it will do all it can to stop people leaving
# ::tok and vietnam has promised everyone that it will do all it can to stop people leaving
# ::alignments 15-16|0.0.0.0 13-14|0.0.0 11-12|0 10-11|0.0 9-10|0.0.0.1 6-7|0.0.0.0.0.0.0 4-5|0.0.0.0.0.0.1 3-4|0.0.0.0.0.0 0-1|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:01.938
# ::node	0	possible	11-12
# ::node	0.0	it	10-11
# ::node	0.0.0	stop-01	13-14
# ::node	0.0.0.0	leave-01	15-16
# ::node	0.0.0.0.0	and	0-1
# ::node	0.0.0.0.0.0	promise-01	3-4
# ::node	0.0.0.0.0.0.0	it	6-7
# ::node	0.0.0.0.0.0.1	everyone	4-5
# ::node	0.0.0.1	all	9-10
# ::root	0	possible
# ::edge	leave-01	ARG0	and	0.0.0.0	0.0.0.0.0	
# ::edge	possible	domain	it	0	0.0	
# ::edge	promise-01	ARG0	and	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	ARG1	it	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	promise-01	ARG2	everyone	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	stop-01	ARG0	it	0.0.0	0.0	
# ::edge	stop-01	ARG1	leave-01	0.0.0	0.0.0.0	
# ::edge	stop-01	ARG2	all	0.0.0	0.0.0.1	
(p / possible 
      :domain (i / it 
            :ARG0-of (s / stop-01 
                  :ARG1 (l / leave-01 
                        :ARG0 (a2 / and 
                              :ARG0-of (p2 / promise-01 
                                    :ARG1 (i2 / it) 
                                    :ARG2 (e / everyone)))) 
                  :ARG2 (a / all))))

# ::snt bnl reforms the board of italys banca nazionale del lavoro promised concrete reforms within a fortnight in response to criticisms of the bank in the wake of alleged unauthorised loans to iraq
# ::tok bnl reforms the board of italys banca nazionale del lavoro promised concrete reforms within a fortnight in response to criticisms of the bank in the wake of alleged unauthorised loans to iraq
# ::alignments 29-30|0.1.0.0.1.0.0 27-28|0.1.0.0.1.0 25-26|0.1.0.0.1 22-23|0.1.0.0.1.0.0.0 19-20|0.0 17-18|0 13-14|0.1 12-13|0.1.0.0 11-12|0.1.0.0.0 10-11|0.1.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:02.129
# ::node	0	respond-01	17-18
# ::node	0.0	criticism	19-20
# ::node	0.0.0	reform-01	1-2
# ::node	0.1	within	13-14
# ::node	0.1.0	promise-01	10-11
# ::node	0.1.0.0	reform-01	12-13
# ::node	0.1.0.0.0	concrete	11-12
# ::node	0.1.0.0.1	wake-02	25-26
# ::node	0.1.0.0.1.0	allege-01	27-28
# ::node	0.1.0.0.1.0.0	loan-01	29-30
# ::node	0.1.0.0.1.0.0.0	bank	22-23
# ::root	0	respond-01
# ::edge	allege-01	ARG1	loan-01	0.1.0.0.1.0	0.1.0.0.1.0.0	
# ::edge	loan-01	ARG0	bank	0.1.0.0.1.0.0	0.1.0.0.1.0.0.0	
# ::edge	promise-01	ARG2	reform-01	0.1.0	0.1.0.0	
# ::edge	promise-01	time	within	0.1.0	0.1	
# ::edge	reform-01	ARG1	concrete	0.1.0.0	0.1.0.0.0	
# ::edge	reform-01	ARG1	criticism	0.0.0	0.0	
# ::edge	reform-01	ARG2	wake-02	0.1.0.0	0.1.0.0.1	
# ::edge	respond-01	ARG1	criticism	0	0.0	
# ::edge	wake-02	ARG1	allege-01	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	within	op1	respond-01	0.1	0	
(r / respond-01 
      :ARG1 (c / criticism 
            :ARG1-of (r3 / reform-01)) 
      :op-of (w2 / within 
            :time-of (p / promise-01 
                  :ARG2 (r2 / reform-01 
                        :ARG1 (c2 / concrete) 
                        :ARG2 (w / wake-02 
                              :ARG1 (a / allege-01 
                                    :ARG1 (l / loan-01 
                                          :ARG0 (b / bank))))))))

# ::snt a proud john broome showed off his new baby boldly promising that the battersea would open at 2
# ::tok a proud john broome showed off his new baby boldly promising that the battersea would open at 2
# ::alignments 17-18|0.0 10-11|0.1.0 9-10|0.1.0.0 8-9|0.1 7-8|0.1.1 5-6|0.2 4-5|0 1-2|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:02.166
# ::node	0	show-01	4-5
# ::node	0.0	2	17-18
# ::node	0.1	baby	8-9
# ::node	0.1.0	promise-01	10-11
# ::node	0.1.0.0	bold	9-10
# ::node	0.1.1	new	7-8
# ::node	0.2	off	5-6
# ::node	0.2.0	proud-41	1-2
# ::root	0	show-01
# ::edge	baby	mod	new	0.1	0.1.1	
# ::edge	promise-01	ARG0	baby	0.1.0	0.1	
# ::edge	promise-01	degree	bold	0.1.0	0.1.0.0	
# ::edge	proud-41	ARG1	off	0.2.0	0.2	
# ::edge	show-01	ARG0	2	0	0.0	
# ::edge	show-01	ARG1	baby	0	0.1	
# ::edge	show-01	direction	off	0	0.2	
(s / show-01 
      :ARG0 2 
      :ARG1 (b2 / baby 
            :ARG0-of (p / promise-01 
                  :degree (b / bold)) 
            :mod (n / new)) 
      :direction (o / off 
            :ARG1-of (p2 / proud-41)))

# ::snt  book publishers like in fact need to hype up their products and rugby union has had a long line of ghosted autobiographies which have promised more than they have fulfilled
# ::tok book publishers like in fact need to hype up their products and rugby union has had a long line of ghosted autobiographies which have promised more than they have fulfilled
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:02.167
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt i cannot promise you riches although i have 139
# ::tok i cannot promise you riches although i have 139
# ::alignments 6-7|0.1.1 4-5|0.1 3-4|0.1.0 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:02.180
# ::node	0	promise-01	2-3
# ::node	0.0	i	0-1
# ::node	0.1	riches	4-5
# ::node	0.1.0	you	3-4
# ::node	0.1.1	i	6-7
# ::root	0	promise-01
# ::edge	promise-01	ARG0	i	0	0.0	
# ::edge	promise-01	ARG1	riches	0	0.1	
# ::edge	riches	mod	you	0.1	0.1.0	
# ::edge	riches	poss	i	0.1	0.1.1	
(p / promise-01 
      :ARG0 (i2 / i) 
      :ARG1 (r / riches 
            :mod (y / you) 
            :poss (i / i)))

# ::snt the map of the ghetto shows the maze of small streets and promises a claustrophobic perspective but this is never properly realised
# ::tok the map of the ghetto shows the maze of small streets and promises a claustrophobic perspective but this is never properly realised
# ::alignments 21-22|0.0 20-21|0.0.1 17-18|0.0.0 16-17|0 15-16|0.0.2.1.1 12-13|0.0.2.1 11-12|0.0.2 10-11|0.0.2.0.0 9-10|0.0.2.0.0.0 5-6|0.0.2.0 1-2|0.0.2.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:02.446
# ::node	0	contrast-01	16-17
# ::node	0.0	realize-01	21-22
# ::node	0.0.0	this	17-18
# ::node	0.0.1	proper	20-21
# ::node	0.0.2	and	11-12
# ::node	0.0.2.0	show-01	5-6
# ::node	0.0.2.0.0	street	10-11
# ::node	0.0.2.0.0.0	small	9-10
# ::node	0.0.2.1	promise-01	12-13
# ::node	0.0.2.1.0	map	1-2
# ::node	0.0.2.1.1	perspective	15-16
# ::root	0	contrast-01
# ::edge	and	op1	show-01	0.0.2	0.0.2.0	
# ::edge	and	op2	promise-01	0.0.2	0.0.2.1	
# ::edge	and	op3	realize-01	0.0.2	0.0	
# ::edge	contrast-01	ARG1	realize-01	0	0.0	
# ::edge	promise-01	ARG0	map	0.0.2.1	0.0.2.1.0	
# ::edge	promise-01	ARG1	perspective	0.0.2.1	0.0.2.1.1	
# ::edge	realize-01	ARG1	this	0.0	0.0.0	
# ::edge	realize-01	manner	proper	0.0	0.0.1	
# ::edge	show-01	ARG1	street	0.0.2.0	0.0.2.0.0	
# ::edge	street	mod	small	0.0.2.0.0	0.0.2.0.0.0	
(c / contrast-01 
      :ARG1 (r / realize-01 
            :ARG1 (t / this) 
            :manner (p / proper) 
            :op-of (a / and 
                  :op1 (s3 / show-01 
                        :ARG1 (s / street 
                              :mod (s2 / small))) 
                  :op2 (p3 / promise-01 
                        :ARG0 (m / map) 
                        :ARG1 (p2 / perspective)))))

# ::snt along with three friends and a totally unconnected young man of eighteen who had been visiting a caretaker living in the grounds naturally caused polanski extreme mental torture made worse by the knowledge that he had promised to return to the house himself and had not made it in time
# ::tok along with three friends and a totally unconnected young man of eighteen who had been visiting a caretaker living in the grounds naturally caused polanski extreme mental torture made worse by the knowledge that he had promised to return to the house himself and had not made it in time
# ::alignments 49-50|0.3.0.1.0 47-48|0.3.0.1 43-44|0.3 41-42|0.1.0.0.0.2 36-37|0.3.0 34-35|0.3.0.0 32-33|0.3.0.2 29-30|0.0.0 27-28|0.0 26-27|0.0.3 25-26|0.0.4 23-24|0 22-23|0.2 21-22|0.1.0.0.0.1 18-19|0.1.0.0.0 15-16|0.1.0.0 9-10|0.1.0 8-9|0.1.0.1 6-7|0.0.1 4-5|0.1 3-4|0.0.2.1+0.0.2 2-3|0.1.0.0.0.0 0-1|0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:03.063
# ::node	0	cause-01	23-24
# ::node	0.0	torture-01	27-28
# ::node	0.0.0	bad	29-30
# ::node	0.0.1	total	6-7
# ::node	0.0.2	have-rel-role-91	3-4
# ::node	0.0.2.0	along	0-1
# ::node	0.0.2.1	friend	3-4
# ::node	0.0.3	mental	26-27
# ::node	0.0.4	extreme	25-26
# ::node	0.1	and	4-5
# ::node	0.1.0	man	9-10
# ::node	0.1.0.0	visit-01	15-16
# ::node	0.1.0.0.0	live-01	18-19
# ::node	0.1.0.0.0.0	3	2-3
# ::node	0.1.0.0.0.1	ground	21-22
# ::node	0.1.0.0.0.2	house	41-42
# ::node	0.1.0.1	young	8-9
# ::node	0.2	natural	22-23
# ::node	0.3	and	43-44
# ::node	0.3.0	promise-01	36-37
# ::node	0.3.0.0	he	34-35
# ::node	0.3.0.1	it	47-48
# ::node	0.3.0.1.0	time	49-50
# ::node	0.3.0.2	knowledge	32-33
# ::root	0	cause-01
# ::edge	and	op1	cause-01	0.3	0	
# ::edge	and	op1	man	0.1	0.1.0	
# ::edge	and	op2	promise-01	0.3	0.3.0	
# ::edge	cause-01	ARG0	torture-01	0	0.0	
# ::edge	cause-01	ARG1	and	0	0.1	
# ::edge	cause-01	mod	natural	0	0.2	
# ::edge	have-rel-role-91	ARG0	along	0.0.2	0.0.2.0	
# ::edge	have-rel-role-91	ARG1	torture-01	0.0.2	0.0	
# ::edge	have-rel-role-91	ARG2	friend	0.0.2	0.0.2.1	
# ::edge	it	topic	time	0.3.0.1	0.3.0.1.0	
# ::edge	live-01	ARG0	3	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	live-01	ARG1	ground	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	live-01	location	house	0.1.0.0.0	0.1.0.0.0.2	
# ::edge	man	mod	young	0.1.0	0.1.0.1	
# ::edge	promise-01	ARG0	he	0.3.0	0.3.0.0	
# ::edge	promise-01	ARG1	it	0.3.0	0.3.0.1	
# ::edge	promise-01	prep-on	knowledge	0.3.0	0.3.0.2	
# ::edge	torture-01	ARG0	bad	0.0	0.0.0	
# ::edge	torture-01	ARG1	total	0.0	0.0.1	
# ::edge	torture-01	manner	mental	0.0	0.0.3	
# ::edge	torture-01	mod	extreme	0.0	0.0.4	
# ::edge	visit-01	ARG0	man	0.1.0.0	0.1.0	
# ::edge	visit-01	ARG1	live-01	0.1.0.0	0.1.0.0.0	
(c / cause-01 
      :ARG0 (t2 / torture-01 
            :ARG0 (b / bad) 
            :ARG1 (t3 / total) 
            :ARG1-of (h3 / have-rel-role-91 
                  :ARG0 (a3 / along) 
                  :ARG2 (f / friend)) 
            :manner (m / mental) 
            :mod (e / extreme)) 
      :ARG1 (a2 / and 
            :op1 (m2 / man 
                  :ARG0-of (v / visit-01 
                        :ARG1 (l / live-01 
                              :ARG0 3 
                              :ARG1 (g / ground) 
                              :location (h / house))) 
                  :mod (y / young))) 
      :mod (n / natural) 
      :op-of (a / and 
            :op1 (p / promise-01 
                  :ARG0 (h2 / he) 
                  :ARG1 (i / it 
                        :topic (t / time)) 
                  :prep-on (k / knowledge))))

# ::snt he also promised that any agreement would have to be sanctioned by them and the partys national executive
# ::tok he also promised that any agreement would have to be sanctioned by them and the partys national executive
# ::alignments 17-18|0.1 16-17|0.0.1.0 13-14|0 10-11|0.0 5-6|0.0.1 4-5|0.0.1.1 2-3|0.0.0.0 1-2|0.0.0.0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:03.126
# ::node	0	and	13-14
# ::node	0.0	sanction-01	10-11
# ::node	0.0.0	he	0-1
# ::node	0.0.0.0	promise-01	2-3
# ::node	0.0.0.0.0	also	1-2
# ::node	0.0.1	agree-01	5-6
# ::node	0.0.1.0	nation	16-17
# ::node	0.0.1.1	any	4-5
# ::node	0.1	executive	17-18
# ::root	0	and
# ::edge	agree-01	ARG0	nation	0.0.1	0.0.1.0	
# ::edge	agree-01	mod	any	0.0.1	0.0.1.1	
# ::edge	and	op1	executive	0	0.1	
# ::edge	promise-01	ARG0	he	0.0.0.0	0.0.0	
# ::edge	promise-01	mod	also	0.0.0.0	0.0.0.0.0	
# ::edge	sanction-01	ARG0	he	0.0	0.0.0	
# ::edge	sanction-01	ARG1	agree-01	0.0	0.0.1	
# ::edge	sanction-01	ARG2	and	0.0	0	
(a / and 
      :ARG2-of (s / sanction-01 
            :ARG0 (h / he 
                  :ARG0-of (p / promise-01 
                        :mod (a4 / also))) 
            :ARG1 (a2 / agree-01 
                  :ARG0 (n / nation) 
                  :mod (a3 / any))) 
      :op1 (e / executive))

# ::snt my mother used to din into me greater is he that ruleth his spirit than he that taketh a city and various treats conditionally promised were withheld because i had yielded to the devils seduction into my besetting sin
# ::tok my mother used to din into me greater is he that ruleth his spirit than he that taketh a city and various treats conditionally promised were withheld because i had yielded to the devils seduction into my besetting sin
# ::alignments 38-39|0.0.2 30-31|0.0 28-29|0.0.0 27-28|0 24-25|0.1.0 21-22|0.0.0.0.0.0 20-21|0.1 19-20|0.1.0.0.0 15-16|0.1.0.0 13-14|0.1.0.0.1 9-10|0.0.0.0.0.1 7-8|0.0.1 2-3|0.0.0.0 1-2|0.0.0.0.0.2+0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:03.326
# ::node	0	cause-01	27-28
# ::node	0.0	yield-01	30-31
# ::node	0.0.0	i	28-29
# ::node	0.0.0.0	use-01	2-3
# ::node	0.0.0.0.0	have-rel-role-91	1-2
# ::node	0.0.0.0.0.0	various	21-22
# ::node	0.0.0.0.0.1	he	9-10
# ::node	0.0.0.0.0.2	mother	1-2
# ::node	0.0.1	great	7-8
# ::node	0.0.2	sin-01	38-39
# ::node	0.1	and	20-21
# ::node	0.1.0	promise-01	24-25
# ::node	0.1.0.0	he	15-16
# ::node	0.1.0.0.0	city	19-20
# ::node	0.1.0.0.1	spirit	13-14
# ::root	0	cause-01
# ::edge	cause-01	ARG0	yield-01	0	0.0	
# ::edge	cause-01	ARG1	and	0	0.1	
# ::edge	city	op1	he	0.1.0.0.0	0.1.0.0	
# ::edge	have-rel-role-91	ARG0	various	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	have-rel-role-91	ARG1	he	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	have-rel-role-91	ARG2	mother	0.0.0.0.0	0.0.0.0.0.2	
# ::edge	promise-01	ARG0	he	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG2	and	0.1.0	0.1	
# ::edge	sin-01	ARG1	yield-01	0.0.2	0.0	
# ::edge	spirit	poss	he	0.1.0.0.1	0.1.0.0	
# ::edge	use-01	ARG0	i	0.0.0.0	0.0.0	
# ::edge	use-01	ARG1	have-rel-role-91	0.0.0.0	0.0.0.0.0	
# ::edge	yield-01	ARG0	i	0.0	0.0.0	
# ::edge	yield-01	ARG1	great	0.0	0.0.1	
(c / cause-01 
      :ARG0 (y / yield-01 
            :ARG0 (i / i 
                  :ARG0-of (u / use-01 
                        :ARG1 (h3 / have-rel-role-91 
                              :ARG0 (v / various) 
                              :ARG1 (h2 / he) 
                              :ARG2 (m / mother)))) 
            :ARG1 (g / great) 
            :ARG1-of (s / sin-01)) 
      :ARG1 (a / and 
            :ARG2-of (p / promise-01 
                  :ARG0 (h / he 
                        :op-of (c2 / city) 
                        :poss-of (s2 / spirit)))))

# ::snt the national nuclear corporation has recently been called in to sort out the a90 project and promises to have it in production by 1992
# ::tok the national nuclear corporation has recently been called in to sort out the a90 project and promises to have it in production by 1992
# ::alignments 23-24|0.2.2.0+0.2.2 21-22|0.2.1 19-20|0.2.1.0 16-17|0.2 15-16|0 14-15|0.1 10-11|0.0 5-6|0.3 3-4|0.2.0 2-3|0.2.1.1 1-2|0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:03.561
# ::node	0	and	15-16
# ::node	0.0	sort	10-11
# ::node	0.1	project	14-15
# ::node	0.2	promise-01	16-17
# ::node	0.2.0	corporation	3-4
# ::node	0.2.0.0	nation	1-2
# ::node	0.2.1	produce-01	21-22
# ::node	0.2.1.0	it	19-20
# ::node	0.2.1.1	nucleus	2-3
# ::node	0.2.2	date-entity	23-24
# ::node	0.2.2.0	1992	23-24
# ::node	0.3	recent	5-6
# ::root	0	and
# ::edge	and	op1	sort	0	0.0	
# ::edge	and	op2	project	0	0.1	
# ::edge	and	op3	promise-01	0	0.2	
# ::edge	and	time	recent	0	0.3	
# ::edge	corporation	mod	nation	0.2.0	0.2.0.0	
# ::edge	date-entity	year	1992	0.2.2	0.2.2.0	
# ::edge	produce-01	ARG0	it	0.2.1	0.2.1.0	
# ::edge	produce-01	ARG1	nucleus	0.2.1	0.2.1.1	
# ::edge	promise-01	ARG0	corporation	0.2	0.2.0	
# ::edge	promise-01	ARG1	produce-01	0.2	0.2.1	
# ::edge	promise-01	time	date-entity	0.2	0.2.2	
(a / and 
      :op1 (s / sort) 
      :op2 (p3 / project) 
      :op3 (p2 / promise-01 
            :ARG0 (c / corporation 
                  :mod (n2 / nation)) 
            :ARG1 (p / produce-01 
                  :ARG0 (i / it) 
                  :ARG1 (n / nucleus)) 
            :time (d / date-entity 
                  :year 1992)) 
      :time (r / recent))

# ::snt if i cant make it ill get a message to the box office for you he had promised
# ::tok if i cant make it ill get a message to the box office for you he had promised
# ::alignments 17-18|0.0.0 15-16|0.0.0.0 14-15|0.0.1 12-13|0.0 11-12|0 8-9|0.0.0.1.0.0 5-6|0.0.0.1.0 4-5|0.0.0.1 1-2|0.0.0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:03.727
# ::node	0	box	11-12
# ::node	0.0	office	12-13
# ::node	0.0.0	promise-01	17-18
# ::node	0.0.0.0	he	15-16
# ::node	0.0.0.1	it	4-5
# ::node	0.0.0.1.0	ill-41	5-6
# ::node	0.0.0.1.0.0	message	8-9
# ::node	0.0.0.1.0.1	i	1-2
# ::node	0.0.1	you	14-15
# ::root	0	box
(b / box 
      :mod-of (o / office 
            :ARG2-of (p / promise-01 
                  :ARG0 (h / he) 
                  :ARG1 (i2 / it 
                        :ARG1-of (i / ill-41 
                              :ARG0 (m / message) 
                              :ARG2 (i3 / i)))) 
            :beneficiary (y / you)))

# ::snt veyrat promises that by the time the first of 20 40000 sports cars are built by june 1001 weight will still be under 2000lb and acceleration electrifying
# ::tok veyrat promises that by the time the first of 20 40000 sports cars are built by june 1001 weight will still be under 2000lb and acceleration electrifying
# ::alignments 25-26|0 24-25|0.2 20-21|0.0 18-19|0.2.0.0.0.2 16-18|0.2.0.0.0.0.1+0.2.0.0.0.0.0+0.2.0.0.0.0 14-15|0.2.0.0.0 12-13|0.2.0.0.0.1 11-12|0.2.0.0 10-11|0.2.0.0.1 9-10|0.1 5-6|0.2.0.1 1-2|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:04.159
# ::node	0	accelerate-01	25-26
# ::node	0.0	still	20-21
# ::node	0.1	20	9-10
# ::node	0.2	and	24-25
# ::node	0.2.0	promise-01	1-2
# ::node	0.2.0.0	sport	11-12
# ::node	0.2.0.0.0	build-01	14-15
# ::node	0.2.0.0.0.0	date-entity	16-18
# ::node	0.2.0.0.0.0.0	6	16-18
# ::node	0.2.0.0.0.0.1	1001	16-18
# ::node	0.2.0.0.0.1	car	12-13
# ::node	0.2.0.0.0.2	weight	18-19
# ::node	0.2.0.0.1	40000	10-11
# ::node	0.2.0.1	time	5-6
# ::root	0	accelerate-01
# ::edge	20	op1	accelerate-01	0.1	0	
# ::edge	accelerate-01	ARG1	still	0	0.0	
# ::edge	and	op1	accelerate-01	0.2	0	
# ::edge	build-01	ARG0	date-entity	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	build-01	ARG1	car	0.2.0.0.0	0.2.0.0.0.1	
# ::edge	build-01	manner	sport	0.2.0.0.0	0.2.0.0	
# ::edge	build-01	manner	weight	0.2.0.0.0	0.2.0.0.0.2	
# ::edge	date-entity	month	6	0.2.0.0.0.0	0.2.0.0.0.0.0	
# ::edge	date-entity	year	1001	0.2.0.0.0.0	0.2.0.0.0.0.1	
# ::edge	promise-01	ARG0	sport	0.2.0	0.2.0.0	
# ::edge	promise-01	ARG1	and	0.2.0	0.2	
# ::edge	promise-01	location	time	0.2.0	0.2.0.1	
# ::edge	sport	quant	40000	0.2.0.0	0.2.0.0.1	
(a / accelerate-01 
      :ARG1 (s / still) 
      :op-of 20 
      :op-of (a2 / and 
            :ARG1-of (p / promise-01 
                  :ARG0 (s2 / sport 
                        :manner-of (b / build-01 
                              :ARG0 (d / date-entity 
                                    :month 6 
                                    :year 1001) 
                              :ARG1 (c / car) 
                              :manner (w / weight)) 
                        :quant 40000) 
                  :location (t / time))))

# ::snt it promises to a baptism of fire
# ::tok it promises to a baptism of fire
# ::alignments 4-5|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:04.165
# ::node	0	promise-01	1-2
# ::node	0.0	it	0-1
# ::node	0.1	baptize-01	4-5
# ::root	0	promise-01
# ::edge	promise-01	ARG0	it	0	0.0	
# ::edge	promise-01	ARG2	baptize-01	0	0.1	
(p / promise-01 
      :ARG0 (i / it) 
      :ARG2 (b / baptize-01))

# ::snt the government promised that no ratepayer would have to pay more than 3 per week extra under the poll tax
# ::tok the government promised that no ratepayer would have to pay more than 3 per week extra under the poll tax
# ::alignments 19-20|0.1.0 18-19|0.1 15-16|0.1.1 14-15|0.1.1.0 12-13|0.0 9-10|0.1.0.0 4-5|0.1.0.0.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:04.203
# ::node	0	promise-01	2-3
# ::node	0.0	3	12-13
# ::node	0.1	poll-01	18-19
# ::node	0.1.0	tax-01	19-20
# ::node	0.1.0.0	pay-01	9-10
# ::node	0.1.0.0.0	-	4-5
# ::node	0.1.1	extra	15-16
# ::node	0.1.1.0	week	14-15
# ::root	0	promise-01
# ::edge	pay-01	ARG3	tax-01	0.1.0.0	0.1.0	
# ::edge	pay-01	polarity	-	0.1.0.0	0.1.0.0.0	
# ::edge	poll-01	ARG1	promise-01	0.1	0	
# ::edge	poll-01	location	extra	0.1	0.1.1	
# ::edge	promise-01	ARG1	3	0	0.0	
# ::edge	tax-01	ARG1	poll-01	0.1.0	0.1	
# ::edge	week	mod	extra	0.1.1.0	0.1.1	
(p3 / promise-01 
      :ARG1 3 
      :ARG1-of (p / poll-01 
            :ARG1-of (t / tax-01 
                  :ARG3-of (p2 / pay-01 
                        :polarity (- / -))) 
            :location (e / extra 
                  :mod-of (w / week))))

# ::snt but details of the location promised for after midnight failed to materialise
# ::tok but details of the location promised for after midnight failed to materialise
# ::alignments 9-10|0.0.0 8-9|0.0.0.0 7-8|0.0.1 5-6|0.0 4-5|0.1.0 1-2|0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:04.223
# ::node	0	contrast-01	0-1
# ::node	0.0	promise-01	5-6
# ::node	0.0.0	fail-01	9-10
# ::node	0.0.0.0	midnight	8-9
# ::node	0.0.1	after	7-8
# ::node	0.1	detail-01	1-2
# ::node	0.1.0	location	4-5
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	promise-01	0	0.0	
# ::edge	contrast-01	ARG2	detail-01	0	0.1	
# ::edge	detail-01	ARG1	location	0.1	0.1.0	
# ::edge	fail-01	ARG1	midnight	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	fail-01	0.0	0.0.0	
# ::edge	promise-01	time	after	0.0	0.0.1	
(c / contrast-01 
      :ARG1 (p / promise-01 
            :ARG1 (f / fail-01 
                  :ARG1 (m / midnight)) 
            :time (a / after)) 
      :ARG2 (d / detail-01 
            :ARG1 (l / location)))

# ::snt a stopgap measure was conceived to entice them to settle instead in amazonia where they were promised a better future and title to land
# ::tok a stopgap measure was conceived to entice them to settle instead in amazonia where they were promised a better future and title to land
# ::alignments 23-24|0.4 21-22|0.3 20-21|0 19-20|0.2 16-17|0.1 14-15|0.1.0 10-11|0.0.1 9-10|0.0 4-5|0.0.0.0 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:04.342
# ::node	0	and	20-21
# ::node	0.0	settle-02	9-10
# ::node	0.0.0	measure	2-3
# ::node	0.0.0.0	conceive-01	4-5
# ::node	0.0.1	instead	10-11
# ::node	0.1	promise-01	16-17
# ::node	0.1.0	they	14-15
# ::node	0.2	future	19-20
# ::node	0.3	title	21-22
# ::node	0.4	land	23-24
# ::root	0	and
# ::edge	and	op1	future	0	0.2	
# ::edge	and	op2	title	0	0.3	
# ::edge	and	op3	land	0	0.4	
# ::edge	conceive-01	ARG1	measure	0.0.0.0	0.0.0	
# ::edge	promise-01	ARG1	they	0.1	0.1.0	
# ::edge	promise-01	ARG2	and	0.1	0	
# ::edge	settle-02	ARG0	measure	0.0	0.0.0	
# ::edge	settle-02	ARG1	and	0.0	0	
# ::edge	settle-02	mod	instead	0.0	0.0.1	
(a / and 
      :ARG1-of (s / settle-02 
            :ARG0 (m / measure 
                  :ARG1-of (c / conceive-01)) 
            :mod (i / instead)) 
      :ARG2-of (p / promise-01 
            :ARG1 (t2 / they)) 
      :op1 (f / future) 
      :op2 (t / title) 
      :op3 (l / land))

# ::snt for nearly halfanhour belgium outnumbering england in midfield because robson had reverted to the sweeper system he had introduced in the goalless draw against holland promised to make telling use of the advantage
# ::tok for nearly halfanhour belgium outnumbering england in midfield because robson had reverted to the sweeper system he had introduced in the goalless draw against holland promised to make telling use of the advantage
# ::alignments 32-33|0.0.0 29-30|0.0 28-29|0 25-26|0.1 22-23|0.1.0.0.1 18-19|0.1.0.0 16-17|0.1.0 15-16|0.1.0.0.0 8-9|0.0.1 5-6|0.1.0.0.1.0.1.0+0.1.0.0.1.0.1+0.1.0.0.1.0 1-2|0.1.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:04.446
# ::node	0	tell-01	28-29
# ::node	0.0	use-01	29-30
# ::node	0.0.0	advantage	32-33
# ::node	0.0.1	cause-01	8-9
# ::node	0.1	promise-01	25-26
# ::node	0.1.0	he	16-17
# ::node	0.1.0.0	introduce-02	18-19
# ::node	0.1.0.0.0	system	15-16
# ::node	0.1.0.0.1	draw-02	22-23
# ::node	0.1.0.0.1.0	country	5-6
# ::node	0.1.0.0.1.0.0	nearly	1-2
# ::node	0.1.0.0.1.0.1	name	5-6
# ::node	0.1.0.0.1.0.1.0	"England"	5-6
# ::root	0	tell-01
# ::edge	cause-01	ARG1	use-01	0.0.1	0.0	
# ::edge	country	mod	nearly	0.1.0.0.1.0	0.1.0.0.1.0.0	
# ::edge	country	name	name	0.1.0.0.1.0	0.1.0.0.1.0.1	
# ::edge	draw-02	ARG0	country	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	introduce-02	ARG0	he	0.1.0.0	0.1.0	
# ::edge	introduce-02	ARG1	system	0.1.0.0	0.1.0.0.0	
# ::edge	introduce-02	ARG2	draw-02	0.1.0.0	0.1.0.0.1	
# ::edge	name	op1	"England"	0.1.0.0.1.0.1	0.1.0.0.1.0.1.0	
# ::edge	promise-01	ARG0	he	0.1	0.1.0	
# ::edge	promise-01	ARG2	tell-01	0.1	0	
# ::edge	tell-01	ARG1	use-01	0	0.0	
# ::edge	use-01	ARG1	advantage	0.0	0.0.0	
(t / tell-01 
      :ARG1 (u / use-01 
            :ARG1 (a / advantage) 
            :ARG1-of (c / cause-01)) 
      :ARG2-of (p / promise-01 
            :ARG0 (h / he 
                  :ARG0-of (i / introduce-02 
                        :ARG1 (s / system) 
                        :ARG2 (d / draw-02 
                              :ARG0 (c2 / country 
                                    :mod (n2 / nearly) 
                                    :name (n / name 
                                          :op1 "England")))))))

# ::snt he is still prominent on the partys list but the new candidate mr martinez maldonado is a quiet lawyer who promises pluralism and a reduced role for the state
# ::tok he is still prominent on the partys list but the new candidate mr martinez maldonado is a quiet lawyer who promises pluralism and a reduced role for the state
# ::alignments 28-29|0.0.0.0.0.1 25-26|0.0.0.0.0 24-25|0.0.0.0.0.0 22-23|0.0.0.0 20-21|0.0.0 18-19|0.0 17-18|0.0.1 11-12|0.0.0.0.0.1.0.1 10-11|0.1 8-9|0 7-8|0.0.0.0.0.1.0 3-4|0.0.0.0.0.1.0.0.0 2-3|0.0.0.0.0.1.0.0.0.0 0-1|0.0.0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:04.639
# ::node	0	contrast-01	8-9
# ::node	0.0	lawyer	18-19
# ::node	0.0.0	promise-01	20-21
# ::node	0.0.0.0	and	22-23
# ::node	0.0.0.0.0	role	25-26
# ::node	0.0.0.0.0.0	reduce-01	24-25
# ::node	0.0.0.0.0.1	state	28-29
# ::node	0.0.0.0.0.1.0	list-01	7-8
# ::node	0.0.0.0.0.1.0.0	he	0-1
# ::node	0.0.0.0.0.1.0.0.0	prominent	3-4
# ::node	0.0.0.0.0.1.0.0.0.0	still	2-3
# ::node	0.0.0.0.0.1.0.1	candidate	11-12
# ::node	0.0.1	quiet-41	17-18
# ::node	0.1	new	10-11
# ::root	0	contrast-01
# ::edge	and	op1	role	0.0.0.0	0.0.0.0.0	
# ::edge	contrast-01	ARG1	lawyer	0	0.0	
# ::edge	contrast-01	ARG2	new	0	0.1	
# ::edge	list-01	ARG0	he	0.0.0.0.0.1.0	0.0.0.0.0.1.0.0	
# ::edge	list-01	ARG1	state	0.0.0.0.0.1.0	0.0.0.0.0.1	
# ::edge	list-01	mod	candidate	0.0.0.0.0.1.0	0.0.0.0.0.1.0.1	
# ::edge	prominent	domain	he	0.0.0.0.0.1.0.0.0	0.0.0.0.0.1.0.0	
# ::edge	prominent	mod	still	0.0.0.0.0.1.0.0.0	0.0.0.0.0.1.0.0.0.0	
# ::edge	promise-01	ARG0	lawyer	0.0.0	0.0	
# ::edge	promise-01	ARG1	and	0.0.0	0.0.0.0	
# ::edge	quiet-41	ARG1	lawyer	0.0.1	0.0	
# ::edge	reduce-01	ARG0	role	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	role	poss	state	0.0.0.0.0	0.0.0.0.0.1	
(c2 / contrast-01 
      :ARG1 (l / lawyer 
            :ARG0-of (p / promise-01 
                  :ARG1 (a / and 
                        :op1 (r / role 
                              :ARG0-of (r2 / reduce-01) 
                              :poss (s / state 
                                    :ARG1-of (l2 / list-01 
                                          :ARG0 (h / he 
                                                :domain-of (p2 / prominent 
                                                      :mod (s2 / still))) 
                                          :mod (c / candidate)))))) 
            :ARG1-of (q / quiet-41)) 
      :ARG2 (n / new))

# ::snt pravda said he promised the city party plenum which elected him unanimously to take an active part in the further democratisation of our society
# ::tok pravda said he promised the city party plenum which elected him unanimously to take an active part in the further democratisation of our society
# ::alignments 23-24|0.1 19-20|0.0.0.0.0 15-16|0.2 11-12|0.0.0.0.1 9-10|0.0.0.0 6-7|0.0.1.0 5-6|0.0.1 3-4|0.0 2-3|0.0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:04.801
# ::node	0	say-01	1-2
# ::node	0.0	promise-01	3-4
# ::node	0.0.0	he	2-3
# ::node	0.0.0.0	elect-01	9-10
# ::node	0.0.0.0.0	further	19-20
# ::node	0.0.0.0.1	unanimous	11-12
# ::node	0.0.1	city	5-6
# ::node	0.0.1.0	party	6-7
# ::node	0.1	society	23-24
# ::node	0.2	active	15-16
# ::root	0	say-01
# ::edge	active	op1	say-01	0.2	0	
# ::edge	elect-01	ARG0	he	0.0.0.0	0.0.0	
# ::edge	elect-01	ARG1	further	0.0.0.0	0.0.0.0.0	
# ::edge	elect-01	ARG2	unanimous	0.0.0.0	0.0.0.0.1	
# ::edge	party	mod	city	0.0.1.0	0.0.1	
# ::edge	promise-01	ARG0	he	0.0	0.0.0	
# ::edge	promise-01	ARG1	city	0.0	0.0.1	
# ::edge	say-01	ARG1	promise-01	0	0.0	
# ::edge	society	op1	say-01	0.1	0	
(s2 / say-01 
      :ARG1 (p2 / promise-01 
            :ARG0 (h / he 
                  :ARG0-of (e / elect-01 
                        :ARG1 (f / further) 
                        :ARG2 (u / unanimous))) 
            :ARG1 (c / city 
                  :mod-of (p / party))) 
      :op-of (s / society) 
      :op-of (a / active))

# ::snt italy has promised dollars 400m  255m in export credits
# ::tok italy has promised dollars 400m 255m in export credits
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:04.801
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt for those with more specific euromemories the gem of dejavu is the recollection that in 1979 mrs thatcher attending her first european summit in strasbourg promised that britain would join european monetary system when the time was right
# ::tok for those with more specific euromemories the gem of dejavu is the recollection that in 1979 mrs thatcher attending her first european summit in strasbourg promised that britain would join european monetary system when the time was right
# ::alignments 35-36|0.0 32-33|0.1.0.0 31-32|0.1.0.0.1 30-31|0.1.0.0.0.0.0.0.0+0.1.0.0.0.0.0.0+0.1.0.0.0.0.0 29-30|0.1.0.0.0.0 27-28|0.1.0.0.0.1.0+0.1.0.0.0.1+0.1.0.0.0 25-26|0.1.0 22-23|0.1 21-22|0.1.1.0.0+0.1.1.0+0.1.1 18-19|0 15-16|0.1.0.0.0.0.1.0+0.1.0.0.0.0.1 4-5|0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:05.083
# ::node	0	attend-01	18-19
# ::node	0.0	time	35-36
# ::node	0.1	summit	22-23
# ::node	0.1.0	promise-01	25-26
# ::node	0.1.0.0	system	32-33
# ::node	0.1.0.0.0	country	27-28
# ::node	0.1.0.0.0.0	join-01	29-30
# ::node	0.1.0.0.0.0.0	continent	30-31
# ::node	0.1.0.0.0.0.0.0	name	30-31
# ::node	0.1.0.0.0.0.0.0.0	"Europe"	30-31
# ::node	0.1.0.0.0.0.1	date-entity	15-16
# ::node	0.1.0.0.0.0.1.0	1979	15-16
# ::node	0.1.0.0.0.1	name	27-28
# ::node	0.1.0.0.0.1.0	"Britain"	27-28
# ::node	0.1.0.0.1	money	31-32
# ::node	0.1.0.1	specific	4-5
# ::node	0.1.1	continent	21-22
# ::node	0.1.1.0	name	21-22
# ::node	0.1.1.0.0	"Europe"	21-22
# ::root	0	attend-01
# ::edge	attend-01	ARG0	time	0	0.0	
# ::edge	attend-01	ARG1	summit	0	0.1	
# ::edge	continent	name	name	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	continent	name	name	0.1.1	0.1.1.0	
# ::edge	country	name	name	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	date-entity	year	1979	0.1.0.0.0.0.1	0.1.0.0.0.0.1.0	
# ::edge	join-01	ARG0	country	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	join-01	ARG1	continent	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	join-01	time	date-entity	0.1.0.0.0.0	0.1.0.0.0.0.1	
# ::edge	name	op1	"Britain"	0.1.0.0.0.1	0.1.0.0.0.1.0	
# ::edge	name	op1	"Europe"	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0.0.0	
# ::edge	name	op1	"Europe"	0.1.1.0	0.1.1.0.0	
# ::edge	promise-01	ARG0	system	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG1	specific	0.1.0	0.1.0.1	
# ::edge	promise-01	ARG2	summit	0.1.0	0.1	
# ::edge	summit	mod	continent	0.1	0.1.1	
# ::edge	system	mod	country	0.1.0.0	0.1.0.0.0	
# ::edge	system	topic	money	0.1.0.0	0.1.0.0.1	
(a / attend-01 
      :ARG0 (t / time) 
      :ARG1 (s2 / summit 
            :ARG2-of (p / promise-01 
                  :ARG0 (s / system 
                        :mod (c2 / country 
                              :ARG0-of (j / join-01 
                                    :ARG1 (c / continent 
                                          :name (n / name 
                                                :op1 "Europe")) 
                                    :time (d / date-entity 
                                          :year 1979)) 
                              :name (n2 / name 
                                    :op1 "Britain")) 
                        :topic (m / money)) 
                  :ARG1 (s3 / specific)) 
            :mod (c3 / continent 
                  :name (n3 / name 
                        :op1 "Europe"))))

# ::snt it is interesting to note that despite being promised job security the majority of ncc staff in scotland are against the split
# ::tok it is interesting to note that despite being promised job security the majority of ncc staff in scotland are against the split
# ::alignments 21-22|0.1.0.0 17-18|0.1.1.0.0+0.1.1.0+0.1.1 15-16|0.1.0.1+0.1.0 12-13|0.1 10-11|0.0 9-10|0.0.0 8-9|0 4-5|0.1.0.0.0.0.0 2-3|0.1.0.0.0.0 0-1|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:05.287
# ::node	0	promise-01	8-9
# ::node	0.0	security	10-11
# ::node	0.0.0	job	9-10
# ::node	0.1	majority	12-13
# ::node	0.1.0	person	15-16
# ::node	0.1.0.0	split-01	21-22
# ::node	0.1.0.0.0	it	0-1
# ::node	0.1.0.0.0.0	interesting	2-3
# ::node	0.1.0.0.0.0.0	note	4-5
# ::node	0.1.0.1	staff-01	15-16
# ::node	0.1.1	country	17-18
# ::node	0.1.1.0	name	17-18
# ::node	0.1.1.0.0	"Scotland"	17-18
# ::root	0	promise-01
# ::edge	country	name	name	0.1.1	0.1.1.0	
# ::edge	interesting	domain	note	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	it	mod	interesting	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	majority	topic	country	0.1	0.1.1	
# ::edge	name	op1	"Scotland"	0.1.1.0	0.1.1.0.0	
# ::edge	person	quant	majority	0.1.0	0.1	
# ::edge	promise-01	ARG0	security	0	0.0	
# ::edge	promise-01	ARG1	majority	0	0.1	
# ::edge	security	mod	job	0.0	0.0.0	
# ::edge	split-01	ARG0	person	0.1.0.0	0.1.0	
# ::edge	split-01	ARG1	it	0.1.0.0	0.1.0.0.0	
# ::edge	staff-01	ARG2	person	0.1.0.1	0.1.0	
(p2 / promise-01 
      :ARG0 (s3 / security 
            :mod (j / job)) 
      :ARG1 (m / majority 
            :quant-of (p / person 
                  :ARG0-of (s / split-01 
                        :ARG1 (i2 / it 
                              :mod (i / interesting 
                                    :domain (n2 / note)))) 
                  :ARG2-of (s2 / staff-01)) 
            :topic (c / country 
                  :name (n / name 
                        :op1 "Scotland"))))

# ::snt the council promised its support
# ::tok the council promised its support
# ::alignments 4-5|0.0.0 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:05.292
# ::node	0	promise-01	2-3
# ::node	0.0	council	1-2
# ::node	0.0.0	support-01	4-5
# ::root	0	promise-01
# ::edge	promise-01	ARG0	council	0	0.0	
# ::edge	support-01	ARG1	council	0.0.0	0.0	
(p / promise-01 
      :ARG0 (c / council 
            :ARG1-of (s / support-01)))

# ::snt id always promised myself a smart jersey dash
# ::tok id always promised myself a smart jersey dash
# ::alignments 5-6|0.1 2-3|0 1-2|0.2 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:05.302
# ::node	0	promise-01	2-3
# ::node	0.0	id	0-1
# ::node	0.1	smart	5-6
# ::node	0.2	always	1-2
# ::root	0	promise-01
# ::edge	promise-01	ARG0	id	0	0.0	
# ::edge	promise-01	ARG1	smart	0	0.1	
# ::edge	promise-01	time	always	0	0.2	
(p / promise-01 
      :ARG0 (i / id) 
      :ARG1 (s / smart) 
      :time (a / always))

# ::snt he took her to a pompous oyster bar around the corner as he had promised
# ::tok he took her to a pompous oyster bar around the corner as he had promised
# ::alignments 14-15|0 12-13|0.0 10-11|0.1.0.0.0 8-9|0.1.0.0 7-8|0.1.0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:05.387
# ::node	0	promise-01	14-15
# ::node	0.0	he	12-13
# ::node	0.1	he	0-1
# ::node	0.1.0	bar-01	7-8
# ::node	0.1.0.0	around	8-9
# ::node	0.1.0.0.0	corner	10-11
# ::root	0	promise-01
# ::edge	around	op1	corner	0.1.0.0	0.1.0.0.0	
# ::edge	bar-01	ARG1	he	0.1.0	0.1	
# ::edge	bar-01	location	around	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG0	he	0	0.0	
# ::edge	promise-01	ARG1	he	0	0.1	
(p / promise-01 
      :ARG0 (h / he) 
      :ARG1 (h2 / he 
            :ARG1-of (b / bar-01 
                  :location (a / around 
                        :op1 (c / corner)))))

# ::snt no murky ending is what president george bush promised the us public in a nationally televised speech on november 29 1990 to whip up support for operation desert shield later renamed operation desert storm washingtons latest middle east military adventure
# ::tok no murky ending is what president george bush promised the us public in a nationally televised speech on november 29 1990 to whip up support for operation desert shield later renamed operation desert storm washingtons latest middle east military adventure
# ::alignments 38-39|0.0.0.0.0.1.0.0.0.0.0 37-38|0.0.0.0.1 36-37|0.0.0.0 35-36|0.0.0.0.0.1.3.0+0.0.0.0.0.1.3 33-34|0 32-33|0.0 31-32|0.0.0 29-30|0.0.0.0.0.1.0.0.0.1.1 28-29|0.0.0.0.0.1.0.0.0.1.0 27-28|0.0.0.0.0.1.0.0.0.1.0.0 26-27|0.0.0.0.0.1.0.0.0.1.0.1 24-25|0.0.0.0.0.1.0.0.0.1 18-21|0.0.0.0.0.1.4+0.0.0.0.0.1.2+0.0.0.0.0.1.1+0.0.0.0.0.1 16-17|0.0.0.0.0.0 15-16|0.0.0.0.0 11-12|0.0.0.0.0.1.0.0.1 8-9|0.0.0.0.0.1.0.0 7-8|0.0.0.0.0.1.0.0.0 5-6|0.0.0.0.0.1.0.0.0.0.1+0.0.0.0.0.1.0.0.0.0 2-3|0.0.0.0.0.1.0 0-1|0.0.0.0.0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:06.681
# ::node	0	storm	33-34
# ::node	0.0	desert	32-33
# ::node	0.0.0	operation	31-32
# ::node	0.0.0.0	middle	36-37
# ::node	0.0.0.0.0	televise-01	15-16
# ::node	0.0.0.0.0.0	speech	16-17
# ::node	0.0.0.0.0.1	date-entity	18-21
# ::node	0.0.0.0.0.1.0	end-01	2-3
# ::node	0.0.0.0.0.1.0.0	promise-01	8-9
# ::node	0.0.0.0.0.1.0.0.0	bush-league	7-8
# ::node	0.0.0.0.0.1.0.0.0.0	have-org-role-91	5-6
# ::node	0.0.0.0.0.1.0.0.0.0.0	military	38-39
# ::node	0.0.0.0.0.1.0.0.0.0.1	president	5-6
# ::node	0.0.0.0.0.1.0.0.0.1	support-01	24-25
# ::node	0.0.0.0.0.1.0.0.0.1.0	shield	28-29
# ::node	0.0.0.0.0.1.0.0.0.1.0.0	desert	27-28
# ::node	0.0.0.0.0.1.0.0.0.1.0.1	operation	26-27
# ::node	0.0.0.0.0.1.0.0.0.1.1	late	29-30
# ::node	0.0.0.0.0.1.0.0.1	public	11-12
# ::node	0.0.0.0.0.1.0.1	-	0-1
# ::node	0.0.0.0.0.1.1	29	18-21
# ::node	0.0.0.0.0.1.2	11	18-21
# ::node	0.0.0.0.0.1.3	late	35-36
# ::node	0.0.0.0.0.1.3.0	most	35-36
# ::node	0.0.0.0.0.1.4	1990	18-21
# ::node	0.0.0.0.1	east	37-38
# ::root	0	storm
# ::edge	date-entity	day	29	0.0.0.0.0.1	0.0.0.0.0.1.1	
# ::edge	date-entity	month	11	0.0.0.0.0.1	0.0.0.0.0.1.2	
# ::edge	date-entity	year	1990	0.0.0.0.0.1	0.0.0.0.0.1.4	
# ::edge	desert	mod	operation	0.0	0.0.0	
# ::edge	east	mod	middle	0.0.0.0.1	0.0.0.0	
# ::edge	end-01	ARG1	date-entity	0.0.0.0.0.1.0	0.0.0.0.0.1	
# ::edge	end-01	polarity	-	0.0.0.0.0.1.0	0.0.0.0.0.1.0.1	
# ::edge	have-org-role-91	ARG0	bush-league	0.0.0.0.0.1.0.0.0.0	0.0.0.0.0.1.0.0.0	
# ::edge	have-org-role-91	ARG1	military	0.0.0.0.0.1.0.0.0.0	0.0.0.0.0.1.0.0.0.0.0	
# ::edge	have-org-role-91	ARG2	president	0.0.0.0.0.1.0.0.0.0	0.0.0.0.0.1.0.0.0.0.1	
# ::edge	late	degree	most	0.0.0.0.0.1.3	0.0.0.0.0.1.3.0	
# ::edge	late	op1	date-entity	0.0.0.0.0.1.3	0.0.0.0.0.1	
# ::edge	late	op1	support-01	0.0.0.0.0.1.0.0.0.1.1	0.0.0.0.0.1.0.0.0.1	
# ::edge	operation	mod	middle	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG0	bush-league	0.0.0.0.0.1.0.0	0.0.0.0.0.1.0.0.0	
# ::edge	promise-01	ARG1	end-01	0.0.0.0.0.1.0.0	0.0.0.0.0.1.0	
# ::edge	promise-01	ARG2	public	0.0.0.0.0.1.0.0	0.0.0.0.0.1.0.0.1	
# ::edge	shield	mod	desert	0.0.0.0.0.1.0.0.0.1.0	0.0.0.0.0.1.0.0.0.1.0.0	
# ::edge	shield	mod	operation	0.0.0.0.0.1.0.0.0.1.0	0.0.0.0.0.1.0.0.0.1.0.1	
# ::edge	storm	mod	desert	0	0.0	
# ::edge	support-01	ARG0	bush-league	0.0.0.0.0.1.0.0.0.1	0.0.0.0.0.1.0.0.0	
# ::edge	support-01	ARG1	shield	0.0.0.0.0.1.0.0.0.1	0.0.0.0.0.1.0.0.0.1.0	
# ::edge	televise-01	ARG0	middle	0.0.0.0.0	0.0.0.0	
# ::edge	televise-01	ARG1	speech	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	televise-01	time	date-entity	0.0.0.0.0	0.0.0.0.0.1	
(s / storm 
      :mod (d / desert 
            :mod (o / operation 
                  :mod (m2 / middle 
                        :ARG0-of (t / televise-01 
                              :ARG1 (s4 / speech) 
                              :time (d3 / date-entity 
                                    :ARG1-of (e2 / end-01 
                                          :ARG1-of (p2 / promise-01 
                                                :ARG0 (b / bush-league 
                                                      :ARG0-of (h / have-org-role-91 
                                                            :ARG1 (m / military) 
                                                            :ARG2 (p3 / president)) 
                                                      :ARG0-of (s3 / support-01 
                                                            :ARG1 (s2 / shield 
                                                                  :mod (d2 / desert) 
                                                                  :mod (o2 / operation)) 
                                                            :op-of (l2 / late))) 
                                                :ARG2 (p / public)) 
                                          :polarity (- / -)) 
                                    :day 29 
                                    :month 11 
                                    :op-of (l / late 
                                          :degree (m3 / most)) 
                                    :year 1990)) 
                        :mod-of (e / east)))))

# ::snt he has already promised them to the secretary michael bonallack
# ::tok he has already promised them to the secretary michael bonallack
# ::alignments 8-10|0.1.1.0+0.1.1.1+0.1.1+0.1 7-8|0.1.0 3-4|0 2-3|0.2 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:06.697
# ::node	0	promise-01	3-4
# ::node	0.0	he	0-1
# ::node	0.1	person	8-10
# ::node	0.1.0	secretary	7-8
# ::node	0.1.1	name	8-10
# ::node	0.1.1.0	"bonallack"	8-10
# ::node	0.1.1.1	"michael"	8-10
# ::node	0.2	already	2-3
# ::root	0	promise-01
# ::edge	name	op1	"bonallack"	0.1.1	0.1.1.0	
# ::edge	name	op2	"michael"	0.1.1	0.1.1.1	
# ::edge	person	mod	secretary	0.1	0.1.0	
# ::edge	person	name	name	0.1	0.1.1	
# ::edge	promise-01	ARG0	he	0	0.0	
# ::edge	promise-01	ARG2	person	0	0.1	
# ::edge	promise-01	time	already	0	0.2	
(p2 / promise-01 
      :ARG0 (h / he) 
      :ARG2 (p / person 
            :mod (s / secretary) 
            :name (n / name 
                  :op1 "bonallack" 
                  :op2 "michael")) 
      :time (a / already))

# ::snt the mini master with the 582 promises a takeoff roll of 650 ft landing roll of 520 ft and a range of 575 miles without reserve at a 75 per cent cruise of 110 mph
# ::tok the mini master with the 582 promises a takeoff roll of 650 ft landing roll of 520 ft and a range of 575 miles without reserve at a 75 per cent cruise of 110 mph
# ::alignments 33-34|0.0.0.1.0.0 31-32|0.0.0.0.0.1.0 30-31|0.0.0.0.0.1.1+0.0.0.0.0.1 28-29|0.0.0.0.0.0 25-26|0 23-24|0.0.0.1.2.0.0+0.0.0.1.2.0 20-21|0.0.0.1.2 18-19|0.0.0.1 14-15|0.0.0.1.1 13-14|0.0.0.1.0 9-10|0.0.0.0 8-9|0.0.0.0.0 6-7|0.0.0 2-3|0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:07.016
# ::node	0	reserve-01	25-26
# ::node	0.0	master	2-3
# ::node	0.0.0	promise-01	6-7
# ::node	0.0.0.0	roll	9-10
# ::node	0.0.0.0.0	take-08	8-9
# ::node	0.0.0.0.0.0	75	28-29
# ::node	0.0.0.0.0.1	monetary-quantity	30-31
# ::node	0.0.0.0.0.1.0	cruise	31-32
# ::node	0.0.0.0.0.1.1	cent	30-31
# ::node	0.0.0.1	and	18-19
# ::node	0.0.0.1.0	land-01	13-14
# ::node	0.0.0.1.0.0	110	33-34
# ::node	0.0.0.1.1	roll	14-15
# ::node	0.0.0.1.2	range-01	20-21
# ::node	0.0.0.1.2.0	distance-quantity	23-24
# ::node	0.0.0.1.2.0.0	mile	23-24
# ::node	0.0.1	mini-vassal	1-2
# ::root	0	reserve-01
# ::edge	and	op1	promise-01	0.0.0.1	0.0.0	
# ::edge	and	op2	land-01	0.0.0.1	0.0.0.1.0	
# ::edge	and	op3	roll	0.0.0.1	0.0.0.1.1	
# ::edge	and	op4	range-01	0.0.0.1	0.0.0.1.2	
# ::edge	cruise	mod	monetary-quantity	0.0.0.0.0.1.0	0.0.0.0.0.1	
# ::edge	distance-quantity	unit	mile	0.0.0.1.2.0	0.0.0.1.2.0.0	
# ::edge	land-01	ARG1	110	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	master	mod	mini-vassal	0.0	0.0.1	
# ::edge	monetary-quantity	unit	cent	0.0.0.0.0.1	0.0.0.0.0.1.1	
# ::edge	promise-01	ARG0	master	0.0.0	0.0	
# ::edge	promise-01	ARG1	roll	0.0.0	0.0.0.0	
# ::edge	range-01	ARG4	distance-quantity	0.0.0.1.2	0.0.0.1.2.0	
# ::edge	reserve-01	ARG0	master	0	0.0	
# ::edge	roll	mod	take-08	0.0.0.0	0.0.0.0.0	
# ::edge	take-08	ARG0	75	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	take-08	ARG1	monetary-quantity	0.0.0.0.0	0.0.0.0.0.1	
(r / reserve-01 
      :ARG0 (m3 / master 
            :ARG0-of (p / promise-01 
                  :ARG1 (r4 / roll 
                        :mod (t / take-08 
                              :ARG0 75 
                              :ARG1 (m / monetary-quantity 
                                    :mod-of (c / cruise) 
                                    :unit (c2 / cent)))) 
                  :op-of (a / and 
                        :op1 (l / land-01 
                              :ARG1 110) 
                        :op2 (r3 / roll) 
                        :op3 (r2 / range-01 
                              :ARG4 (d / distance-quantity 
                                    :unit (m2 / mile))))) 
            :mod (m4 / mini-vassal)))

# ::snt the communist party has said it will renounce its leading role in government and has promised free elections but many of bulgarias burgeoning opposition groups say these pledges do not go far enough
# ::tok the communist party has said it will renounce its leading role in government and has promised free elections but many of bulgarias burgeoning opposition groups say these pledges do not go far enough
# ::alignments 32-33|0.2.0.0.0.0.0.1.0.0.0 31-32|0.2.0.0.0.0.0.1.0.0 27-28|0.1 25-26|0 24-25|0.0 23-24|0.0.0 22-23|0.0.1 19-20|0.2 18-19|0.2.0 17-18|0.2.0.0.1 16-17|0.2.0.0.1.0 15-16|0.2.0.0 13-14|0.2.0.0.2 10-11|0.2.0.0.0.0.0.1 9-10|0.2.0.0.0.0.0.1.0 7-8|0.2.0.0.0.0.0 5-6|0.2.0.0.0.0.0.0 4-5|0.2.0.0.0.0 1-3|0.2.0.0.0.1.0+0.2.0.0.0.1.1+0.2.0.0.0.1+0.2.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:07.618
# ::node	0	say-01	25-26
# ::node	0.0	group	24-25
# ::node	0.0.0	oppose-01	23-24
# ::node	0.0.1	burgeon-01	22-23
# ::node	0.1	pledge-01	27-28
# ::node	0.2	many	19-20
# ::node	0.2.0	contrast-01	18-19
# ::node	0.2.0.0	promise-01	15-16
# ::node	0.2.0.0.0	political-party	1-3
# ::node	0.2.0.0.0.0	say-01	4-5
# ::node	0.2.0.0.0.0.0	renounce-01	7-8
# ::node	0.2.0.0.0.0.0.0	it	5-6
# ::node	0.2.0.0.0.0.0.1	role	10-11
# ::node	0.2.0.0.0.0.0.1.0	lead-01	9-10
# ::node	0.2.0.0.0.0.0.1.0.0	far	31-32
# ::node	0.2.0.0.0.0.0.1.0.0.0	enough	32-33
# ::node	0.2.0.0.0.1	name	1-3
# ::node	0.2.0.0.0.1.0	"Communist"	1-3
# ::node	0.2.0.0.0.1.1	"Party"	1-3
# ::node	0.2.0.0.1	elect-01	17-18
# ::node	0.2.0.0.1.0	free-41	16-17
# ::node	0.2.0.0.2	and	13-14
# ::root	0	say-01
# ::edge	and	op1	promise-01	0.2.0.0.2	0.2.0.0	
# ::edge	burgeon-01	ARG1	group	0.0.1	0.0	
# ::edge	contrast-01	ARG1	many	0.2.0	0.2	
# ::edge	far	degree	enough	0.2.0.0.0.0.0.1.0.0	0.2.0.0.0.0.0.1.0.0.0	
# ::edge	free-41	ARG1	elect-01	0.2.0.0.1.0	0.2.0.0.1	
# ::edge	lead-01	ARG0	role	0.2.0.0.0.0.0.1.0	0.2.0.0.0.0.0.1	
# ::edge	lead-01	ARG1	far	0.2.0.0.0.0.0.1.0	0.2.0.0.0.0.0.1.0.0	
# ::edge	name	op1	"Communist"	0.2.0.0.0.1	0.2.0.0.0.1.0	
# ::edge	name	op2	"Party"	0.2.0.0.0.1	0.2.0.0.0.1.1	
# ::edge	oppose-01	ARG0	group	0.0.0	0.0	
# ::edge	political-party	name	name	0.2.0.0.0	0.2.0.0.0.1	
# ::edge	promise-01	ARG0	political-party	0.2.0.0	0.2.0.0.0	
# ::edge	promise-01	ARG1	contrast-01	0.2.0.0	0.2.0	
# ::edge	promise-01	ARG2	elect-01	0.2.0.0	0.2.0.0.1	
# ::edge	renounce-01	ARG0	it	0.2.0.0.0.0.0	0.2.0.0.0.0.0.0	
# ::edge	renounce-01	ARG1	role	0.2.0.0.0.0.0	0.2.0.0.0.0.0.1	
# ::edge	say-01	ARG0	group	0	0.0	
# ::edge	say-01	ARG0	political-party	0.2.0.0.0.0	0.2.0.0.0	
# ::edge	say-01	ARG1	pledge-01	0	0.1	
# ::edge	say-01	ARG1	renounce-01	0.2.0.0.0.0	0.2.0.0.0.0.0	
# ::edge	say-01	mod	many	0	0.2	
(s / say-01 
      :ARG0 (g / group 
            :ARG0-of (o / oppose-01) 
            :ARG1-of (b / burgeon-01)) 
      :ARG1 (p / pledge-01) 
      :mod (m / many 
            :ARG1-of (c / contrast-01 
                  :ARG1-of (p2 / promise-01 
                        :ARG0 (p3 / political-party 
                              :ARG0-of (s2 / say-01 
                                    :ARG1 (r2 / renounce-01 
                                          :ARG0 (i / it) 
                                          :ARG1 (r / role 
                                                :ARG0-of (l / lead-01 
                                                      :ARG1 (f / far 
                                                            :degree (e / enough)))))) 
                              :name (n / name 
                                    :op1 "Communist" 
                                    :op2 "Party")) 
                        :ARG2 (e2 / elect-01 
                              :ARG1-of (f2 / free-41)) 
                        :op-of (a / and)))))

# ::snt there are a limited number of places available for what promises to be an enormously enjoyable occasion so tickets at 15
# ::tok there are a limited number of places available for what promises to be an enormously enjoyable occasion so tickets at 15
# ::alignments 20-21|0.0.0 18-19|0.0.0.0.0 17-18|0.0.0.0 16-17|0 14-15|0.0.2.0 10-11|0.0 7-8|0.0.1 6-7|0.0.2.1.0 4-5|0.0.2.1 3-4|0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:07.724
# ::node	0	occasion	16-17
# ::node	0.0	promise-01	10-11
# ::node	0.0.0	15	20-21
# ::node	0.0.0.0	so	17-18
# ::node	0.0.0.0.0	ticket	18-19
# ::node	0.0.1	available	7-8
# ::node	0.0.2	limit-01	3-4
# ::node	0.0.2.0	enormous	14-15
# ::node	0.0.2.1	number	4-5
# ::node	0.0.2.1.0	place	6-7
# ::root	0	occasion
(o / occasion 
      :ARG1-of (p / promise-01 
            :ARG0 (1 / 15 
                  :op-of (s / so 
                        :mod-of (t / ticket))) 
            :compared-to-of (a / available) 
            :manner (l / limit-01 
                  :ARG0 (e / enormous) 
                  :ARG1 (n / number 
                        :quant-of (p2 / place)))))

# ::snt hammersmith in west london home of some all too visible faceless architecture has been chosen as the site of what promises to be one of britains most remarkable buildings an enormous office block designed on natural lines by the royal gold medallist ralph erskine jonathan glancey writes
# ::tok hammersmith in west london home of some all too visible faceless architecture has been chosen as the site of what promises to be one of britains most remarkable buildings an enormous office block designed on natural lines by the royal gold medallist ralph erskine jonathan glancey writes
# ::alignments 46-47|0.2.0.1 40-41|0.2.0.1.0.0.1.0 39-40|0.2.0.1.0.0.1.0.0 36-37|0.2.0.1.0.0.1 35-36|0.0 33-34|0.2.0.1.0 32-33|0.2.0.1.0.0 31-32|0.2.0.1.0.0.0 30-31|0.2.0.1.0.0.2 28-29|0.2.0.1.0.1 27-28|0.2.0.1.0.1.0 26-27|0.2.0.1.0.1.0.0 20-21|0.2.0 17-18|0.2 14-15|0 9-10|0.2.0.1.0.0.4 8-9|0.2.0.1.0.0.4.0 7-8|0.2.0.1.0.0.3 6-7|0.2.0.0 4-5|0.1 3-4|0.1.0.0.0+0.1.0.0+0.1.0 2-3|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:08.663
# ::node	0	choose-01	14-15
# ::node	0.0	natural	35-36
# ::node	0.1	home	4-5
# ::node	0.1.0	city	3-4
# ::node	0.1.0.0	name	3-4
# ::node	0.1.0.0.0	"London"	3-4
# ::node	0.1.1	west	2-3
# ::node	0.2	site	17-18
# ::node	0.2.0	promise-01	20-21
# ::node	0.2.0.0	some	6-7
# ::node	0.2.0.1	write-01	46-47
# ::node	0.2.0.1.0	design-01	33-34
# ::node	0.2.0.1.0.0	block-01	32-33
# ::node	0.2.0.1.0.0.0	office	31-32
# ::node	0.2.0.1.0.0.1	line	36-37
# ::node	0.2.0.1.0.0.1.0	gold	40-41
# ::node	0.2.0.1.0.0.1.0.0	royal	39-40
# ::node	0.2.0.1.0.0.2	enormous	30-31
# ::node	0.2.0.1.0.0.3	all	7-8
# ::node	0.2.0.1.0.0.4	visible	9-10
# ::node	0.2.0.1.0.0.4.0	too	8-9
# ::node	0.2.0.1.0.1	building	28-29
# ::node	0.2.0.1.0.1.0	remarkable	27-28
# ::node	0.2.0.1.0.1.0.0	most	26-27
# ::root	0	choose-01
# ::edge	all	op1	block-01	0.2.0.1.0.0.3	0.2.0.1.0.0	
# ::edge	block-01	ARG1	office	0.2.0.1.0.0	0.2.0.1.0.0.0	
# ::edge	block-01	location	line	0.2.0.1.0.0	0.2.0.1.0.0.1	
# ::edge	block-01	mod	enormous	0.2.0.1.0.0	0.2.0.1.0.0.2	
# ::edge	building	mod	remarkable	0.2.0.1.0.1	0.2.0.1.0.1.0	
# ::edge	choose-01	ARG0	natural	0	0.0	
# ::edge	choose-01	ARG1	home	0	0.1	
# ::edge	choose-01	location	site	0	0.2	
# ::edge	city	name	name	0.1.0	0.1.0.0	
# ::edge	design-01	ARG1	block-01	0.2.0.1.0	0.2.0.1.0.0	
# ::edge	design-01	ARG3	building	0.2.0.1.0	0.2.0.1.0.1	
# ::edge	gold	mod	royal	0.2.0.1.0.0.1.0	0.2.0.1.0.0.1.0.0	
# ::edge	home	location	city	0.1	0.1.0	
# ::edge	home	mod	west	0.1	0.1.1	
# ::edge	line	location	gold	0.2.0.1.0.0.1	0.2.0.1.0.0.1.0	
# ::edge	name	op1	"London"	0.1.0.0	0.1.0.0.0	
# ::edge	promise-01	ARG1	some	0.2.0	0.2.0.0	
# ::edge	remarkable	degree	most	0.2.0.1.0.1.0	0.2.0.1.0.1.0.0	
# ::edge	site	beneficiary	promise-01	0.2	0.2.0	
# ::edge	visible	degree	too	0.2.0.1.0.0.4	0.2.0.1.0.0.4.0	
# ::edge	visible	op1	block-01	0.2.0.1.0.0.4	0.2.0.1.0.0	
# ::edge	write-01	ARG0	design-01	0.2.0.1	0.2.0.1.0	
# ::edge	write-01	ARG1	promise-01	0.2.0.1	0.2.0	
(c / choose-01 
      :ARG0 (n / natural) 
      :ARG1 (h / home 
            :location (c2 / city 
                  :name (n2 / name 
                        :op1 "London")) 
            :mod (w2 / west)) 
      :location (s / site 
            :beneficiary (p / promise-01 
                  :ARG1 (s2 / some) 
                  :ARG1-of (w / write-01 
                        :ARG0 (d / design-01 
                              :ARG1 (b / block-01 
                                    :ARG1 (o / office) 
                                    :location (l / line 
                                          :location (g / gold 
                                                :mod (r / royal))) 
                                    :mod (e / enormous) 
                                    :op-of (a / all) 
                                    :op-of (v / visible 
                                          :degree (t / too))) 
                              :ARG3 (b2 / building 
                                    :mod (r2 / remarkable 
                                          :degree (m / most))))))))

# ::snt the economic crisis faced by third world debtors was set yesterday to become a key issue of the annual economic summit as japan promised new proposals for debt relief and third world leaders stepped up the pressure for more help
# ::tok the economic crisis faced by third world debtors was set yesterday to become a key issue of the annual economic summit as japan promised new proposals for debt relief and third world leaders stepped up the pressure for more help
# ::alignments 39-40|0.0.2.0.1.1 36-37|0.0.2.0.1 33-34|0.0.2.0 32-33|0.1.0+0.1 31-32|0.1.0.0 29-30|0 28-29|0.0.2.0.1.0.0.0 27-28|0.0.2.1 25-26|0.0.2.0.1.0.0+0.0.2.0.1.0 24-25|0.0.2.0.1.0.1 23-24|0.0.2 20-21|0.0.2.0.2 19-20|0.0.2.0.2.0 15-16|0.0.1 14-15|0.0.1.0 12-13|0.0 10-11|0.0.2.0.0 7-8|0.0.0.0.0 6-7|0.0.0.0.0.0 3-4|0.0.0.0 2-3|0.0.0 1-2|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:09.827
# ::node	0	and	29-30
# ::node	0.0	become-01	12-13
# ::node	0.0.0	crisis	2-3
# ::node	0.0.0.0	face-01	3-4
# ::node	0.0.0.0.0	debtor	7-8
# ::node	0.0.0.0.0.0	world	6-7
# ::node	0.0.0.1	economy	1-2
# ::node	0.0.1	issue	15-16
# ::node	0.0.1.0	key	14-15
# ::node	0.0.2	promise-01	23-24
# ::node	0.0.2.0	step-02	33-34
# ::node	0.0.2.0.0	yesterday	10-11
# ::node	0.0.2.0.1	pressure-01	36-37
# ::node	0.0.2.0.1.0	thing	25-26
# ::node	0.0.2.0.1.0.0	propose-01	25-26
# ::node	0.0.2.0.1.0.0.0	relieve-01	28-29
# ::node	0.0.2.0.1.0.1	new	24-25
# ::node	0.0.2.0.1.1	help-01	39-40
# ::node	0.0.2.0.2	summit	20-21
# ::node	0.0.2.0.2.0	economy	19-20
# ::node	0.0.2.1	debt	27-28
# ::node	0.1	person	32-33
# ::node	0.1.0	lead-02	32-33
# ::node	0.1.0.0	world	31-32
# ::root	0	and
# ::edge	and	op1	become-01	0	0.0	
# ::edge	and	op2	person	0	0.1	
# ::edge	become-01	ARG1	crisis	0.0	0.0.0	
# ::edge	become-01	ARG2	issue	0.0	0.0.1	
# ::edge	become-01	time	promise-01	0.0	0.0.2	
# ::edge	crisis	mod	economy	0.0.0	0.0.0.1	
# ::edge	debtor	mod	world	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	face-01	ARG0	debtor	0.0.0.0	0.0.0.0.0	
# ::edge	face-01	ARG1	crisis	0.0.0.0	0.0.0	
# ::edge	issue	mod	key	0.0.1	0.0.1.0	
# ::edge	lead-02	ARG0	person	0.1.0	0.1	
# ::edge	lead-02	ARG1	world	0.1.0	0.1.0.0	
# ::edge	pressure-01	ARG1	thing	0.0.2.0.1	0.0.2.0.1.0	
# ::edge	pressure-01	ARG2	help-01	0.0.2.0.1	0.0.2.0.1.1	
# ::edge	promise-01	ARG1	step-02	0.0.2	0.0.2.0	
# ::edge	promise-01	prep-with	debt	0.0.2	0.0.2.1	
# ::edge	propose-01	ARG1	thing	0.0.2.0.1.0.0	0.0.2.0.1.0	
# ::edge	propose-01	ARG2	relieve-01	0.0.2.0.1.0.0	0.0.2.0.1.0.0.0	
# ::edge	step-02	ARG0	yesterday	0.0.2.0	0.0.2.0.0	
# ::edge	step-02	ARG1	pressure-01	0.0.2.0	0.0.2.0.1	
# ::edge	step-02	ARG2	summit	0.0.2.0	0.0.2.0.2	
# ::edge	summit	mod	economy	0.0.2.0.2	0.0.2.0.2.0	
# ::edge	thing	mod	new	0.0.2.0.1.0	0.0.2.0.1.0.1	
(a / and 
      :op1 (b / become-01 
            :ARG1 (c / crisis 
                  :ARG1-of (f / face-01 
                        :ARG0 (d2 / debtor 
                              :mod (w2 / world))) 
                  :mod (e2 / economy)) 
            :ARG2 (i / issue 
                  :mod (k / key)) 
            :time (p4 / promise-01 
                  :ARG1 (s / step-02 
                        :ARG0 (y / yesterday) 
                        :ARG1 (p / pressure-01 
                              :ARG1 (t / thing 
                                    :ARG1-of (p3 / propose-01 
                                          :ARG2 (r / relieve-01)) 
                                    :mod (n / new)) 
                              :ARG2 (h / help-01)) 
                        :ARG2 (s2 / summit 
                              :mod (e / economy))) 
                  :prep-with (d / debt))) 
      :op2 (p2 / person 
            :ARG0-of (l / lead-02 
                  :ARG1 (w / world))))

# ::snt the electricity supply industry will be privatised as promised
# ::tok the electricity supply industry will be privatised as promised
# ::alignments 8-9|0 3-4|0.0.0 2-3|0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:09.839
# ::node	0	promise-01	8-9
# ::node	0.0	supply-01	2-3
# ::node	0.0.0	industry	3-4
# ::node	0.0.1	electricity	1-2
# ::root	0	promise-01
# ::edge	promise-01	ARG1	supply-01	0	0.0	
# ::edge	supply-01	ARG0	industry	0.0	0.0.0	
# ::edge	supply-01	ARG1	electricity	0.0	0.0.1	
(p / promise-01 
      :ARG1 (s / supply-01 
            :ARG0 (i / industry) 
            :ARG1 (e / electricity)))

# ::snt i cant see much harm in what you propose just so long as you promise me not to let it go further
# ::tok i cant see much harm in what you propose just so long as you promise me not to let it go further
# ::alignments 21-22|0.0 19-20|0.1 18-19|0 14-15|0.2 13-14|0.2.0 10-11|0.2.0.0.1 9-10|0.2.0.0.2 8-9|0.2.0.0 7-8|0.2.0.0.0 4-5|0.2.0.1 3-4|0.2.0.1.1 2-3|0.2.0.1.0 0-1|0.2.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:10.267
# ::node	0	let-01	18-19
# ::node	0.0	further	21-22
# ::node	0.1	it	19-20
# ::node	0.2	promise-01	14-15
# ::node	0.2.0	you	13-14
# ::node	0.2.0.0	propose-01	8-9
# ::node	0.2.0.0.0	you	7-8
# ::node	0.2.0.0.1	so	10-11
# ::node	0.2.0.0.2	just	9-10
# ::node	0.2.0.1	harm-01	4-5
# ::node	0.2.0.1.0	see-01	2-3
# ::node	0.2.0.1.0.0	i	0-1
# ::node	0.2.0.1.1	much	3-4
# ::root	0	let-01
# ::edge	harm-01	ARG1	you	0.2.0.1	0.2.0	
# ::edge	harm-01	quant	much	0.2.0.1	0.2.0.1.1	
# ::edge	let-01	ARG0	further	0	0.0	
# ::edge	let-01	ARG1	it	0	0.1	
# ::edge	promise-01	ARG0	you	0.2	0.2.0	
# ::edge	promise-01	ARG4	let-01	0.2	0	
# ::edge	propose-01	ARG0	you	0.2.0.0	0.2.0	
# ::edge	propose-01	ARG1	you	0.2.0.0	0.2.0.0.0	
# ::edge	propose-01	ARG2	so	0.2.0.0	0.2.0.0.1	
# ::edge	propose-01	concession	just	0.2.0.0	0.2.0.0.2	
# ::edge	see-01	ARG0	i	0.2.0.1.0	0.2.0.1.0.0	
# ::edge	see-01	ARG1	harm-01	0.2.0.1.0	0.2.0.1	
(l / let-01 
      :ARG0 (f / further) 
      :ARG1 (i / it) 
      :ARG4-of (p / promise-01 
            :ARG0 (y / you 
                  :ARG0-of (p2 / propose-01 
                        :ARG1 (y2 / you) 
                        :ARG2 (s / so) 
                        :concession (j / just)) 
                  :ARG1-of (h / harm-01 
                        :ARG1-of (s2 / see-01 
                              :ARG0 (i2 / i)) 
                        :quant (m / much)))))

# ::snt the national covenant had already been weakened by chamouns decision to accept the eisenhower doctrine under which the united states promised to use its forces to help any nation which requested assistance against aggressors controlled by international communism
# ::tok the national covenant had already been weakened by chamouns decision to accept the eisenhower doctrine under which the united states promised to use its forces to help any nation which requested assistance against aggressors controlled by international communism
# ::alignments 37-38|0.1.0.0 36-37|0.1.0.0.0 34-35|0.1.0 33-34|0.1.0.1 31-32|0.1 30-31|0 28-29|0.0 27-28|0.0.1 26-27|0.0.0 24-25|0.0.0.0.1 22-23|0.0.0.0 20-21|0.0.0.0.2 18-20|0.0.0.0.2.0.0.0+0.0.0.0.2.0.0.1+0.0.0.0.2.0.0+0.0.0.0.2.0 14-15|0.0.0.0.3.0 11-12|0.0.0.0.3 9-10|0.0.0.0.3.1.0 6-7|0.0.0.0.3.1 4-5|0.0.0.0.3.1.1 1-2|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:11.280
# ::node	0	request-01	30-31
# ::node	0.0	nation	28-29
# ::node	0.0.0	help-01	26-27
# ::node	0.0.0.0	use-01	22-23
# ::node	0.0.0.0.0	nation	1-2
# ::node	0.0.0.0.1	force	24-25
# ::node	0.0.0.0.2	promise-01	20-21
# ::node	0.0.0.0.2.0	country	18-20
# ::node	0.0.0.0.2.0.0	name	18-20
# ::node	0.0.0.0.2.0.0.0	"states"	18-20
# ::node	0.0.0.0.2.0.0.1	"united"	18-20
# ::node	0.0.0.0.3	accept-01	11-12
# ::node	0.0.0.0.3.0	doctrine	14-15
# ::node	0.0.0.0.3.1	weaken-01	6-7
# ::node	0.0.0.0.3.1.0	decide-01	9-10
# ::node	0.0.0.0.3.1.1	already	4-5
# ::node	0.0.1	any	27-28
# ::node	0.1	assist-01	31-32
# ::node	0.1.0	control-01	34-35
# ::node	0.1.0.0	communism	37-38
# ::node	0.1.0.0.0	international	36-37
# ::node	0.1.0.1	aggressor	33-34
# ::root	0	request-01
# ::edge	accept-01	ARG1	doctrine	0.0.0.0.3	0.0.0.0.3.0	
# ::edge	accept-01	condition	use-01	0.0.0.0.3	0.0.0.0	
# ::edge	assist-01	ARG1	control-01	0.1	0.1.0	
# ::edge	communism	mod	international	0.1.0.0	0.1.0.0.0	
# ::edge	control-01	ARG0	communism	0.1.0	0.1.0.0	
# ::edge	control-01	ARG1	aggressor	0.1.0	0.1.0.1	
# ::edge	country	name	name	0.0.0.0.2.0	0.0.0.0.2.0.0	
# ::edge	help-01	ARG1	nation	0.0.0	0.0	
# ::edge	name	op1	"states"	0.0.0.0.2.0.0	0.0.0.0.2.0.0.0	
# ::edge	name	op2	"united"	0.0.0.0.2.0.0	0.0.0.0.2.0.0.1	
# ::edge	nation	mod	any	0.0	0.0.1	
# ::edge	promise-01	ARG0	country	0.0.0.0.2	0.0.0.0.2.0	
# ::edge	promise-01	ARG1	use-01	0.0.0.0.2	0.0.0.0	
# ::edge	request-01	ARG0	nation	0	0.0	
# ::edge	request-01	ARG1	assist-01	0	0.1	
# ::edge	use-01	ARG0	nation	0.0.0.0	0.0.0.0.0	
# ::edge	use-01	ARG1	force	0.0.0.0	0.0.0.0.1	
# ::edge	use-01	ARG2	help-01	0.0.0.0	0.0.0	
# ::edge	weaken-01	ARG0	decide-01	0.0.0.0.3.1	0.0.0.0.3.1.0	
# ::edge	weaken-01	purpose	accept-01	0.0.0.0.3.1	0.0.0.0.3	
# ::edge	weaken-01	time	already	0.0.0.0.3.1	0.0.0.0.3.1.1	
(r / request-01 
      :ARG0 (n / nation 
            :ARG1-of (h / help-01 
                  :ARG2-of (u / use-01 
                        :ARG0 (n3 / nation) 
                        :ARG1 (f / force) 
                        :ARG1-of (p / promise-01 
                              :ARG0 (c3 / country 
                                    :name (n2 / name 
                                          :op1 "states" 
                                          :op2 "united"))) 
                        :condition-of (a4 / accept-01 
                              :ARG1 (d / doctrine) 
                              :purpose-of (w / weaken-01 
                                    :ARG0 (d2 / decide-01) 
                                    :time (a5 / already))))) 
            :mod (a3 / any)) 
      :ARG1 (a2 / assist-01 
            :ARG1 (c2 / control-01 
                  :ARG0 (c / communism 
                        :mod (i / international)) 
                  :ARG1 (a / aggressor))))

# ::snt promising a better yesterday
# ::tok promising a better yesterday
# ::alignments 3-4|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:11.283
# ::node	0	promise-01	0-1
# ::node	0.0	yesterday	3-4
# ::root	0	promise-01
# ::edge	promise-01	time	yesterday	0	0.0	
(p / promise-01 
      :time (y / yesterday))

# ::snt the last time the maronites promised reforms dash
# ::tok the last time the maronites promised reforms dash
# ::alignments 6-7|0.0.0 5-6|0.0 2-3|0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:11.292
# ::node	0	time	2-3
# ::node	0.0	promise-01	5-6
# ::node	0.0.0	reform-01	6-7
# ::node	0.1	last	1-2
# ::root	0	time
# ::edge	promise-01	ARG0	time	0.0	0	
# ::edge	promise-01	ARG1	reform-01	0.0	0.0.0	
# ::edge	time	mod	last	0	0.1	
(t / time 
      :ARG0-of (p / promise-01 
            :ARG1 (r / reform-01)) 
      :mod (l / last))

# ::snt he pazzi does not favour it but has promised to consider it and the matter is still under discussion
# ::tok he pazzi does not favour it but has promised to consider it and the matter is still under discussion
# ::alignments 18-19|0.0.2.0 16-17|0.0.2.0.0 14-15|0.0.2.1 12-13|0.0.2 11-12|0.0.1.0 10-11|0.0.1 8-9|0.0 6-7|0 5-6|0.0.0.0.0 4-5|0.0.0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:11.340
# ::node	0	contrast-01	6-7
# ::node	0.0	promise-01	8-9
# ::node	0.0.0	he	0-1
# ::node	0.0.0.0	favor-01	4-5
# ::node	0.0.0.0.0	it	5-6
# ::node	0.0.1	consider-02	10-11
# ::node	0.0.1.0	it	11-12
# ::node	0.0.2	and	12-13
# ::node	0.0.2.0	discuss-01	18-19
# ::node	0.0.2.0.0	still	16-17
# ::node	0.0.2.1	matter	14-15
# ::root	0	contrast-01
# ::edge	and	op1	promise-01	0.0.2	0.0	
# ::edge	and	op2	matter	0.0.2	0.0.2.1	
# ::edge	consider-02	ARG1	it	0.0.1	0.0.1.0	
# ::edge	contrast-01	ARG2	promise-01	0	0.0	
# ::edge	discuss-01	ARG1	and	0.0.2.0	0.0.2	
# ::edge	discuss-01	manner	still	0.0.2.0	0.0.2.0.0	
# ::edge	favor-01	ARG0	he	0.0.0.0	0.0.0	
# ::edge	favor-01	ARG1	it	0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	ARG0	he	0.0	0.0.0	
# ::edge	promise-01	ARG1	consider-02	0.0	0.0.1	
(c2 / contrast-01 
      :ARG2 (p / promise-01 
            :ARG0 (h / he 
                  :ARG0-of (f / favor-01 
                        :ARG1 (i2 / it))) 
            :ARG1 (c / consider-02 
                  :ARG1 (i / it)) 
            :op-of (a / and 
                  :ARG1-of (d / discuss-01 
                        :manner (s / still)) 
                  :op1 (m / matter))))

# ::snt was shakespeare in fact an arab  a muslim magazine launched today promises to tackle such topics with irreverent humour and muslim selfconfidence writes jack osullivan
# ::tok was shakespeare in fact an arab a muslim magazine launched today promises to tackle such topics with irreverent humour and muslim selfconfidence writes jack osullivan
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:11.341
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt hospital chiefs have launched an inquiry and promised to tighten security
# ::tok hospital chiefs have launched an inquiry and promised to tighten security
# ::alignments 10-11|0.1.1.0 9-10|0.1.1 7-8|0.1 6-7|0 5-6|0.0.0 3-4|0.0 1-2|0.1.0+0.1.0.0 0-1|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:11.373
# ::node	0	and	6-7
# ::node	0.0	launch-01	3-4
# ::node	0.0.0	inquire-01	5-6
# ::node	0.1	promise-01	7-8
# ::node	0.1.0	chief	1-2
# ::node	0.1.0.0	have-org-role-91	1-2
# ::node	0.1.0.0.0	hospital	0-1
# ::node	0.1.1	tighten-01	9-10
# ::node	0.1.1.0	security	10-11
# ::root	0	and
# ::edge	and	op1	launch-01	0	0.0	
# ::edge	and	op2	promise-01	0	0.1	
# ::edge	have-org-role-91	ARG1	hospital	0.1.0.0	0.1.0.0.0	
# ::edge	have-org-role-91	ARG2	chief	0.1.0.0	0.1.0	
# ::edge	launch-01	ARG1	inquire-01	0.0	0.0.0	
# ::edge	promise-01	ARG0	chief	0.1	0.1.0	
# ::edge	promise-01	ARG2	tighten-01	0.1	0.1.1	
# ::edge	tighten-01	ARG1	security	0.1.1	0.1.1.0	
(a / and 
      :op1 (l / launch-01 
            :ARG1 (i / inquire-01)) 
      :op2 (p / promise-01 
            :ARG0 (c / chief 
                  :ARG2-of (h / have-org-role-91 
                        :ARG1 (h2 / hospital))) 
            :ARG2 (t / tighten-01 
                  :ARG1 (s / security))))

# ::snt treasury officials emphasised that nigel lawson the chancellor has never promised a soft landing in which inflation abates but growth continues moderately
# ::tok treasury officials emphasised that nigel lawson the chancellor has never promised a soft landing in which inflation abates but growth continues moderately
# ::alignments 21-22|0.1 20-21|0.0 19-20|0.0.1 18-19|0 16-17|0.0.1.0 13-14|0.0.0 12-13|0.0.0.2 10-11|0.0.0.1 1-2|0.0.0.0.0.0+0.0.0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:11.522
# ::node	0	contrast-01	18-19
# ::node	0.0	continue-01	20-21
# ::node	0.0.0	land-01	13-14
# ::node	0.0.0.0	treasury	0-1
# ::node	0.0.0.0.0	have-org-role-91	1-2
# ::node	0.0.0.0.0.0	official	1-2
# ::node	0.0.0.1	promise-01	10-11
# ::node	0.0.0.2	soft	12-13
# ::node	0.0.1	grow-01	19-20
# ::node	0.0.1.0	inflation	16-17
# ::node	0.1	moderate	21-22
# ::root	0	contrast-01
# ::edge	continue-01	ARG0	land-01	0.0	0.0.0	
# ::edge	continue-01	ARG1	grow-01	0.0	0.0.1	
# ::edge	contrast-01	ARG1	continue-01	0	0.0	
# ::edge	contrast-01	ARG2	moderate	0	0.1	
# ::edge	grow-01	ARG1	inflation	0.0.1	0.0.1.0	
# ::edge	have-org-role-91	ARG1	treasury	0.0.0.0.0	0.0.0.0	
# ::edge	have-org-role-91	ARG2	official	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	land-01	ARG1	treasury	0.0.0	0.0.0.0	
# ::edge	land-01	manner	soft	0.0.0	0.0.0.2	
# ::edge	promise-01	ARG1	land-01	0.0.0.1	0.0.0	
(c2 / contrast-01 
      :ARG1 (c / continue-01 
            :ARG0 (l / land-01 
                  :ARG1 (t / treasury 
                        :ARG1-of (h / have-org-role-91 
                              :ARG2 (o / official))) 
                  :ARG1-of (p / promise-01) 
                  :manner (s / soft)) 
            :ARG1 (g / grow-01 
                  :ARG1 (i / inflation))) 
      :ARG2 (m / moderate))

# ::snt 9400 promise-v 800700 Promising 537527
# ::tok 9400 promise - v 800700 Promising 537527
# ::alignments 6-7|0.0.2+0.0.1+0.0.0+0.0 4-5|0.1.0.2+0.1.0.1+0.1.0.0+0.1.0 1-2|0 0-1|0.1.1+0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:11.554
# ::node	0	promise-01	1-2
# ::node	0.0	date-entity	6-7
# ::node	0.0.0	27	6-7
# ::node	0.0.1	75	6-7
# ::node	0.0.2	53	6-7
# ::node	0.1	date-entity	0-1
# ::node	0.1.0	date-entity	4-5
# ::node	0.1.0.0	0	4-5
# ::node	0.1.0.1	7	4-5
# ::node	0.1.0.2	80	4-5
# ::node	0.1.1	9400	0-1
# ::root	0	promise-01
# ::edge	date-entity	day	0	0.1.0	0.1.0.0	
# ::edge	date-entity	day	27	0.0	0.0.0	
# ::edge	date-entity	month	7	0.1.0	0.1.0.1	
# ::edge	date-entity	month	75	0.0	0.0.1	
# ::edge	date-entity	name	date-entity	0.1	0.1.0	
# ::edge	date-entity	year	53	0.0	0.0.2	
# ::edge	date-entity	year	80	0.1.0	0.1.0.2	
# ::edge	date-entity	year	9400	0.1	0.1.1	
# ::edge	promise-01	ARG1	date-entity	0	0.0	
# ::edge	promise-01	time	date-entity	0	0.1	
(p / promise-01 
      :ARG1 (d / date-entity 
            :day 27 
            :month 75 
            :year 53) 
      :time (d3 / date-entity 
            :name (d2 / date-entity 
                  :day 0 
                  :month 7 
                  :year 80) 
            :year 9400))

# ::snt  But Labour, too, was disappointing in its reluctance to sketch out what an alternative science policy might look like.  Promising extra money, though welcome in itself, is the easy option.
# ::tok But Labour , too , was disappointing in its reluctance to sketch out what an alternative science policy might look like . Promising extra money , though welcome in itself , is the easy option .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:11.555
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt EMPTY_SENTENCE
# ::tok EMPTY_SENTENCE
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:11.557
# ::node	0	amr-empty	0-1
# ::root	0	amr-empty
(a / amr-empty)

# ::snt in the first place mr meacher has promised that a labour government would allow sympathy strikes dash
# ::tok in the first place mr meacher has promised that a labour government would allow sympathy strikes dash
# ::alignments 15-16|0.0.1 14-15|0.0.1.1 13-14|0.0 10-11|0.0.0 7-8|0 3-4|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:11.589
# ::node	0	promise-01	7-8
# ::node	0.0	allow-01	13-14
# ::node	0.0.0	labour	10-11
# ::node	0.0.1	strike-01	15-16
# ::node	0.0.1.0	place	3-4
# ::node	0.0.1.1	sympathy	14-15
# ::root	0	promise-01
# ::edge	allow-01	ARG0	labour	0.0	0.0.0	
# ::edge	allow-01	ARG1	strike-01	0.0	0.0.1	
# ::edge	promise-01	ARG1	allow-01	0	0.0	
# ::edge	strike-01	ARG0	place	0.0.1	0.0.1.0	
# ::edge	strike-01	ARG1	sympathy	0.0.1	0.0.1.1	
(p / promise-01 
      :ARG1 (a / allow-01 
            :ARG0 (l / labour) 
            :ARG1 (s / strike-01 
                  :ARG0 (p2 / place) 
                  :ARG1 (s2 / sympathy))))

# ::snt for a year the chancellor has promised that inflation is a temporary blip on the road to zero inflation
# ::tok for a year the chancellor has promised that inflation is a temporary blip on the road to zero inflation
# ::alignments 18-19|0.0.0 17-18|0.0 15-16|0.0.1 11-12|0.0.0.0 8-9|0.1 6-7|0 2-3|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:11.663
# ::node	0	promise-01	6-7
# ::node	0.0	zero	17-18
# ::node	0.0.0	inflation	18-19
# ::node	0.0.0.0	temporary	11-12
# ::node	0.0.1	road	15-16
# ::node	0.1	inflation	8-9
# ::node	0.2	year	2-3
# ::root	0	promise-01
# ::edge	inflation	mod	temporary	0.0.0	0.0.0.0	
# ::edge	inflation	mod	zero	0.0.0	0.0	
# ::edge	promise-01	ARG0	zero	0	0.0	
# ::edge	promise-01	ARG1	inflation	0	0.1	
# ::edge	promise-01	duration	year	0	0.2	
# ::edge	road	mod	zero	0.0.1	0.0	
(p / promise-01 
      :ARG0 (z / zero 
            :mod-of (i / inflation 
                  :mod (t / temporary)) 
            :mod-of (r / road)) 
      :ARG1 (i2 / inflation) 
      :duration (y / year))

# ::snt harry tisch the national trade union leader went as promised to be replaced by annelis kimmel
# ::tok harry tisch the national trade union leader went as promised to be replaced by annelis kimmel
# ::alignments 12-13|0.1 9-10|0 6-7|0.0.0+0.0 5-6|0.0.0.0 4-5|0.0.0.0.0 3-4|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:11.691
# ::node	0	promise-01	9-10
# ::node	0.0	person	6-7
# ::node	0.0.0	lead-02	6-7
# ::node	0.0.0.0	union	5-6
# ::node	0.0.0.0.0	trade-01	4-5
# ::node	0.0.1	nation	3-4
# ::node	0.1	replace-01	12-13
# ::root	0	promise-01
# ::edge	lead-02	ARG0	person	0.0.0	0.0	
# ::edge	lead-02	ARG1	union	0.0.0	0.0.0.0	
# ::edge	person	mod	nation	0.0	0.0.1	
# ::edge	promise-01	ARG1	person	0	0.0	
# ::edge	promise-01	ARG2	replace-01	0	0.1	
# ::edge	union	mod	trade-01	0.0.0.0	0.0.0.0.0	
(p / promise-01 
      :ARG1 (p2 / person 
            :ARG0-of (l / lead-02 
                  :ARG1 (u / union 
                        :mod (t / trade-01))) 
            :mod (n / nation)) 
      :ARG2 (r / replace-01))

# ::snt in her turn she promises to follow him to the ends of the earth with her dresses her black eyes her violin and her folly
# ::tok in her turn she promises to follow him to the ends of the earth with her dresses her black eyes her violin and her folly
# ::alignments 22-23|0 19-20|0.1 18-19|0.1.0 13-14|0.0.0 10-11|0.0 6-7|0.0.1 4-5|0.0.1.1 3-4|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:11.783
# ::node	0	and	22-23
# ::node	0.0	end-01	10-11
# ::node	0.0.0	earth	13-14
# ::node	0.0.1	follow-02	6-7
# ::node	0.0.1.0	she	3-4
# ::node	0.0.1.1	promise-01	4-5
# ::node	0.1	eye	19-20
# ::node	0.1.0	black	18-19
# ::root	0	and
# ::edge	and	op1	eye	0	0.1	
# ::edge	end-01	ARG0	earth	0.0	0.0.0	
# ::edge	end-01	ARG1	and	0.0	0	
# ::edge	eye	mod	black	0.1	0.1.0	
# ::edge	follow-02	ARG0	she	0.0.1	0.0.1.0	
# ::edge	follow-02	ARG2	end-01	0.0.1	0.0	
# ::edge	promise-01	ARG1	follow-02	0.0.1.1	0.0.1	
(a / and 
      :ARG1-of (e3 / end-01 
            :ARG0 (e2 / earth) 
            :ARG2-of (f / follow-02 
                  :ARG0 (s / she) 
                  :ARG1-of (p / promise-01))) 
      :op1 (e / eye 
            :mod (b / black)))

# ::snt i think i can promise you that
# ::tok i think i can promise you that
# ::alignments 5-6|0.1.0.1 4-5|0.1.0 3-4|0.1 2-3|0.1.0.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:11.909
# ::node	0	think-01	1-2
# ::node	0.0	i	0-1
# ::node	0.1	possible	3-4
# ::node	0.1.0	promise-01	4-5
# ::node	0.1.0.0	i	2-3
# ::node	0.1.0.1	you	5-6
# ::root	0	think-01
# ::edge	promise-01	ARG0	i	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG2	you	0.1.0	0.1.0.1	
# ::edge	promise-01	mod	possible	0.1.0	0.1	
# ::edge	think-01	ARG0	i	0	0.0	
# ::edge	think-01	ARG1	possible	0	0.1	
(t / think-01 
      :ARG0 (i2 / i) 
      :ARG1 (p2 / possible 
            :mod-of (p / promise-01 
                  :ARG0 (i / i) 
                  :ARG2 (y / you))))

# ::snt but the minister promised tough new legal penalties for all polluters
# ::tok but the minister promised tough new legal penalties for all polluters
# ::alignments 9-10|0.0.0 7-8|0.0.2 6-7|0.0.2.2 5-6|0.0.2.1 4-5|0.0.2.0 3-4|0.0 2-3|0.0.1+0.0.1.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:11.947
# ::node	0	contrast-01	0-1
# ::node	0.0	promise-01	3-4
# ::node	0.0.0	all	9-10
# ::node	0.0.1	minister	2-3
# ::node	0.0.1.0	have-org-role-91	2-3
# ::node	0.0.2	penalize-01	7-8
# ::node	0.0.2.0	tough	4-5
# ::node	0.0.2.1	new	5-6
# ::node	0.0.2.2	legal	6-7
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	promise-01	0	0.0	
# ::edge	have-org-role-91	ARG2	minister	0.0.1.0	0.0.1	
# ::edge	penalize-01	manner	tough	0.0.2	0.0.2.0	
# ::edge	penalize-01	mod	legal	0.0.2	0.0.2.2	
# ::edge	penalize-01	mod	new	0.0.2	0.0.2.1	
# ::edge	promise-01	ARG0	all	0.0	0.0.0	
# ::edge	promise-01	ARG1	minister	0.0	0.0.1	
# ::edge	promise-01	ARG2	penalize-01	0.0	0.0.2	
(c / contrast-01 
      :ARG1 (p2 / promise-01 
            :ARG0 (a / all) 
            :ARG1 (m / minister 
                  :ARG2-of (h / have-org-role-91)) 
            :ARG2 (p / penalize-01 
                  :manner (t / tough) 
                  :mod (n / new) 
                  :mod (l / legal))))

# ::snt the riches of mount kare and porgera together with extraordinary discoveries elsewhere of copper oil gold and silver promise to transform this third world country
# ::tok the riches of mount kare and porgera together with extraordinary discoveries elsewhere of copper oil gold and silver promise to transform this third world country
# ::alignments 24-25|0.0.1.0.2 23-24|0.0.1.3 21-22|0.0.1.0.2.0 20-21|0.0.1.0 18-19|0.0.1 17-18|0.0.1.1 16-17|0.0.1.2 15-16|0.0.1.2.0 14-15|0.0.1.2.0.0 13-14|0.0.1.2.0.0.0 11-12|0.0.1.0.0 10-11|0.0.1.0.1 9-10|0.0.0.0 7-8|0.0.1.0.1.0 5-6|0.0 3-4|0.0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:12.153
# ::node	0	riches	1-2
# ::node	0.0	and	5-6
# ::node	0.0.0	mount-01	3-4
# ::node	0.0.0.0	extraordinary	9-10
# ::node	0.0.1	promise-01	18-19
# ::node	0.0.1.0	transform-01	20-21
# ::node	0.0.1.0.0	elsewhere	11-12
# ::node	0.0.1.0.1	discover-01	10-11
# ::node	0.0.1.0.1.0	together	7-8
# ::node	0.0.1.0.2	country	24-25
# ::node	0.0.1.0.2.0	this	21-22
# ::node	0.0.1.1	silver	17-18
# ::node	0.0.1.2	and	16-17
# ::node	0.0.1.2.0	gold	15-16
# ::node	0.0.1.2.0.0	oil	14-15
# ::node	0.0.1.2.0.0.0	copper	13-14
# ::node	0.0.1.3	world	23-24
# ::root	0	riches
# ::edge	and	op1	gold	0.0.1.2	0.0.1.2.0	
# ::edge	and	op1	promise-01	0.0	0.0.1	
# ::edge	and	op2	promise-01	0.0.1.2	0.0.1	
# ::edge	country	mod	this	0.0.1.0.2	0.0.1.0.2.0	
# ::edge	discover-01	ARG0	transform-01	0.0.1.0.1	0.0.1.0	
# ::edge	discover-01	ARG1	together	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	gold	mod	oil	0.0.1.2.0	0.0.1.2.0.0	
# ::edge	mount-01	ARG0	extraordinary	0.0.0	0.0.0.0	
# ::edge	mount-01	ARG1	and	0.0.0	0.0	
# ::edge	oil	mod	copper	0.0.1.2.0.0	0.0.1.2.0.0.0	
# ::edge	promise-01	ARG1	transform-01	0.0.1	0.0.1.0	
# ::edge	promise-01	mod	silver	0.0.1	0.0.1.1	
# ::edge	riches	topic	and	0	0.0	
# ::edge	transform-01	ARG0	elsewhere	0.0.1.0	0.0.1.0.0	
# ::edge	transform-01	ARG1	country	0.0.1.0	0.0.1.0.2	
# ::edge	world	op1	promise-01	0.0.1.3	0.0.1	
(r / riches 
      :topic (a2 / and 
            :ARG1-of (m / mount-01 
                  :ARG0 (e2 / extraordinary)) 
            :op1 (p / promise-01 
                  :ARG1 (t2 / transform-01 
                        :ARG0 (e / elsewhere) 
                        :ARG0-of (d / discover-01 
                              :ARG1 (t3 / together)) 
                        :ARG1 (c / country 
                              :mod (t / this))) 
                  :mod (s / silver) 
                  :op-of (a / and 
                        :op1 (g / gold 
                              :mod (o / oil 
                                    :mod (c2 / copper)))) 
                  :op-of (w / world))))

# ::snt at an emergency session of the central committee on 11 december he promised to hold free multiparty elections by next may and to abolish the partys leading role
# ::tok at an emergency session of the central committee on 11 december he promised to hold free multiparty elections by next may and to abolish the partys leading role
# ::alignments 27-28|0.0.0.0 26-27|0.0.0.0.0 23-24|0.0.0 21-22|0.0.0.1 20-21|0.0.0.1.1.1+0.0.0.1.1 19-20|0.0.0.1.1.0 17-18|0.0.0.1.0 15-16|0.0.0.1.0.0 12-13|0 11-12|0.0 10-11|0.1.0+0.1 9-10|0.0.1.1.1 7-8|0.0.1.1 6-7|0.0.1.1.0 3-4|0.0.1 2-3|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:12.442
# ::node	0	promise-01	12-13
# ::node	0.0	he	11-12
# ::node	0.0.0	abolish-01	23-24
# ::node	0.0.0.0	role	27-28
# ::node	0.0.0.0.0	lead-01	26-27
# ::node	0.0.0.1	and	21-22
# ::node	0.0.0.1.0	elect-01	17-18
# ::node	0.0.0.1.0.0	free-41	15-16
# ::node	0.0.0.1.1	date-entity	20-21
# ::node	0.0.0.1.1.0	next	19-20
# ::node	0.0.0.1.1.1	5	20-21
# ::node	0.0.1	session	3-4
# ::node	0.0.1.0	emergency	2-3
# ::node	0.0.1.1	committee	7-8
# ::node	0.0.1.1.0	central	6-7
# ::node	0.0.1.1.1	11	9-10
# ::node	0.1	date-entity	10-11
# ::node	0.1.0	12	10-11
# ::root	0	promise-01
# ::edge	abolish-01	ARG0	he	0.0.0	0.0	
# ::edge	abolish-01	ARG1	role	0.0.0	0.0.0.0	
# ::edge	and	op1	elect-01	0.0.0.1	0.0.0.1.0	
# ::edge	and	op2	date-entity	0.0.0.1	0.0.0.1.1	
# ::edge	and	op3	abolish-01	0.0.0.1	0.0.0	
# ::edge	committee	mod	central	0.0.1.1	0.0.1.1.0	
# ::edge	committee	time	11	0.0.1.1	0.0.1.1.1	
# ::edge	date-entity	month	12	0.1	0.1.0	
# ::edge	date-entity	month	5	0.0.0.1.1	0.0.0.1.1.1	
# ::edge	free-41	ARG1	elect-01	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	lead-01	ARG0	role	0.0.0.0.0	0.0.0.0	
# ::edge	next	mod	date-entity	0.0.0.1.1.0	0.0.0.1.1	
# ::edge	promise-01	ARG0	he	0	0.0	
# ::edge	promise-01	ARG1	date-entity	0	0.1	
# ::edge	session	mod	emergency	0.0.1	0.0.1.0	
# ::edge	session	poss	committee	0.0.1	0.0.1.1	
# ::edge	session	poss	he	0.0.1	0.0	
(p / promise-01 
      :ARG0 (h / he 
            :ARG0-of (a / abolish-01 
                  :ARG1 (r / role 
                        :ARG0-of (l / lead-01)) 
                  :op-of (a2 / and 
                        :op1 (e / elect-01 
                              :ARG1-of (f / free-41)) 
                        :op2 (d / date-entity 
                              :mod-of (n / next) 
                              :month 5))) 
            :poss-of (s / session 
                  :mod (e2 / emergency) 
                  :poss (c / committee 
                        :mod (c2 / central) 
                        :time 11))) 
      :ARG1 (d2 / date-entity 
            :month 12))

# ::snt the biff promised diced beef fillet in a sauce of sauteed onions and mustard and delivered not so much dice as cubes of beef which were nevertheless tender enough for someone undergoing a crowns renewal course
# ::tok the biff promised diced beef fillet in a sauce of sauteed onions and mustard and delivered not so much dice as cubes of beef which were nevertheless tender enough for someone undergoing a crowns renewal course
# ::alignments 30-31|0.0.0 28-29|0.1.0 27-28|0.1.2 23-24|0.0.2 18-19|0.1.1.0 17-18|0.1.1 15-16|0.1 14-15|0 12-13|0.1.3 4-5|0.0.1 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:12.590
# ::node	0	and	14-15
# ::node	0.0	promise-01	2-3
# ::node	0.0.0	someone	30-31
# ::node	0.0.1	beef	4-5
# ::node	0.0.2	beef	23-24
# ::node	0.1	deliver-01	15-16
# ::node	0.1.0	enough	28-29
# ::node	0.1.1	so	17-18
# ::node	0.1.1.0	much	18-19
# ::node	0.1.2	tender	27-28
# ::node	0.1.3	and	12-13
# ::root	0	and
# ::edge	and	op1	deliver-01	0.1.3	0.1	
# ::edge	and	op1	promise-01	0	0.0	
# ::edge	and	op2	deliver-01	0	0.1	
# ::edge	beef	op1	promise-01	0.0.2	0.0	
# ::edge	deliver-01	ARG0	enough	0.1	0.1.0	
# ::edge	deliver-01	ARG1	so	0.1	0.1.1	
# ::edge	much	degree	so	0.1.1.0	0.1.1	
# ::edge	promise-01	ARG0	someone	0.0	0.0.0	
# ::edge	promise-01	ARG1	beef	0.0	0.0.1	
# ::edge	tender	domain	deliver-01	0.1.2	0.1	
(a / and 
      :op1 (p / promise-01 
            :ARG0 (s / someone) 
            :ARG1 (b2 / beef) 
            :op-of (b / beef)) 
      :op2 (d / deliver-01 
            :ARG0 (e / enough) 
            :ARG1 (s2 / so 
                  :degree-of (m / much)) 
            :domain-of (t / tender) 
            :op-of (a2 / and)))

# ::snt  and such now promises to be the immediate outcome of an affair which justifiably has become a cause celebre
# ::tok and such now promises to be the immediate outcome of an affair which justifiably has become a cause celebre
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:12.591
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt this latest encounter between the two sides promises to be more exciting than ever before
# ::tok this latest encounter between the two sides promises to be more exciting than ever before
# ::alignments 14-15|0.0.0.1 13-14|0.0.0.0 11-12|0.0.0 7-8|0.0 6-7|0.1.0 5-6|0.1.0.0 3-4|0.1 2-3|0 1-2|0.3.0+0.3 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:12.687
# ::node	0	encounter-01	2-3
# ::node	0.0	promise-01	7-8
# ::node	0.0.0	excite-01	11-12
# ::node	0.0.0.0	ever	13-14
# ::node	0.0.0.1	before	14-15
# ::node	0.1	between	3-4
# ::node	0.1.0	side	6-7
# ::node	0.1.0.0	2	5-6
# ::node	0.2	this	0-1
# ::node	0.3	late	1-2
# ::node	0.3.0	most	1-2
# ::root	0	encounter-01
# ::edge	between	op1	side	0.1	0.1.0	
# ::edge	encounter-01	ARG1	between	0	0.1	
# ::edge	encounter-01	mod	this	0	0.2	
# ::edge	encounter-01	time	late	0	0.3	
# ::edge	excite-01	ARG1	ever	0.0.0	0.0.0.0	
# ::edge	excite-01	mod	before	0.0.0	0.0.0.1	
# ::edge	late	degree	most	0.3	0.3.0	
# ::edge	promise-01	ARG0	encounter-01	0.0	0	
# ::edge	promise-01	ARG1	excite-01	0.0	0.0.0	
# ::edge	side	quant	2	0.1.0	0.1.0.0	
(e3 / encounter-01 
      :ARG0-of (p / promise-01 
            :ARG1 (e2 / excite-01 
                  :ARG1 (e / ever) 
                  :mod (b / before))) 
      :ARG1 (b2 / between 
            :op1 (s / side 
                  :quant 2)) 
      :mod (t / this) 
      :time (l / late 
            :degree (m / most)))

# ::snt we have got a strong mandate to continue with what we promised
# ::tok we have got a strong mandate to continue with what we promised
# ::alignments 11-12|0.0.0.0 10-11|0.0.0.0.0 7-8|0.0 5-6|0 4-5|0.1 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:12.739
# ::node	0	mandate	5-6
# ::node	0.0	continue-01	7-8
# ::node	0.0.0	we	0-1
# ::node	0.0.0.0	promise-01	11-12
# ::node	0.0.0.0.0	we	10-11
# ::node	0.1	strong	4-5
# ::root	0	mandate
# ::edge	continue-01	ARG0	we	0.0	0.0.0	
# ::edge	continue-01	ARG1	mandate	0.0	0	
# ::edge	mandate	mod	strong	0	0.1	
# ::edge	promise-01	ARG0	we	0.0.0.0	0.0.0	
# ::edge	promise-01	ARG1	we	0.0.0.0	0.0.0.0.0	
(m / mandate 
      :ARG1-of (c / continue-01 
            :ARG0 (w2 / we 
                  :ARG0-of (p / promise-01 
                        :ARG1 (w / we)))) 
      :mod (s / strong))

# ::snt his performance was intended as a celebration of that renaissance and also of the prospects for world peace for in moscow comrade gorbachev and president reagan were holding a summit meeting which promised to bear fruit in disarmament
# ::tok his performance was intended as a celebration of that renaissance and also of the prospects for world peace for in moscow comrade gorbachev and president reagan were holding a summit meeting which promised to bear fruit in disarmament
# ::alignments 37-38|0.0.1.0 35-36|0.0.1 34-35|0.0 32-33|0 30-31|0.0.0 29-30|0.0.0.1 27-28|0.0.0.0 24-25|0.0.0.0.0.0.0.1.0.0+0.0.0.0.0.0.0.1.0 23-24|0.0.0.0.0 17-18|0.0.0.0.0.0.0.1.1 16-17|0.0.0.0.0.0.0.1.1.0 14-15|0.0.0.0.0.0.0.1 11-12|0.0.0.0.0.1 10-11|0.0.0.0.0.0.0.0 9-10|0.0.0.0.0.0.0.2.0 6-7|0.0.0.0.0.0.0.2 3-4|0.0.0.0.0.0.0 1-2|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:13.130
# ::node	0	promise-01	32-33
# ::node	0.0	bear-02	34-35
# ::node	0.0.0	meet-03	30-31
# ::node	0.0.0.0	hold-01	27-28
# ::node	0.0.0.0.0	and	23-24
# ::node	0.0.0.0.0.0	perform-01	1-2
# ::node	0.0.0.0.0.0.0	intend-01	3-4
# ::node	0.0.0.0.0.0.0.0	and	10-11
# ::node	0.0.0.0.0.0.0.1	prospect	14-15
# ::node	0.0.0.0.0.0.0.1.0	have-org-role-91	24-25
# ::node	0.0.0.0.0.0.0.1.0.0	president	24-25
# ::node	0.0.0.0.0.0.0.1.1	peace	17-18
# ::node	0.0.0.0.0.0.0.1.1.0	world	16-17
# ::node	0.0.0.0.0.0.0.2	celebrate-02	6-7
# ::node	0.0.0.0.0.0.0.2.0	renaissance	9-10
# ::node	0.0.0.0.0.1	also	11-12
# ::node	0.0.0.1	summit	29-30
# ::node	0.0.1	fruit	35-36
# ::node	0.0.1.0	disarm-01	37-38
# ::root	0	promise-01
# ::edge	and	mod	also	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	bear-02	ARG0	meet-03	0.0	0.0.0	
# ::edge	bear-02	ARG1	fruit	0.0	0.0.1	
# ::edge	celebrate-02	ARG1	renaissance	0.0.0.0.0.0.0.2	0.0.0.0.0.0.0.2.0	
# ::edge	fruit	prep-in	disarm-01	0.0.1	0.0.1.0	
# ::edge	have-org-role-91	ARG0	prospect	0.0.0.0.0.0.0.1.0	0.0.0.0.0.0.0.1	
# ::edge	have-org-role-91	ARG2	president	0.0.0.0.0.0.0.1.0	0.0.0.0.0.0.0.1.0.0	
# ::edge	hold-01	ARG0	and	0.0.0.0	0.0.0.0.0	
# ::edge	hold-01	ARG1	meet-03	0.0.0.0	0.0.0	
# ::edge	intend-01	ARG0	and	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	intend-01	ARG1	perform-01	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	intend-01	ARG2	prospect	0.0.0.0.0.0.0	0.0.0.0.0.0.0.1	
# ::edge	intend-01	time	celebrate-02	0.0.0.0.0.0.0	0.0.0.0.0.0.0.2	
# ::edge	meet-03	mod	summit	0.0.0	0.0.0.1	
# ::edge	peace	mod	world	0.0.0.0.0.0.0.1.1	0.0.0.0.0.0.0.1.1.0	
# ::edge	perform-01	ARG0	and	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	ARG2	bear-02	0	0.0	
# ::edge	prospect	poss	peace	0.0.0.0.0.0.0.1	0.0.0.0.0.0.0.1.1	
(p / promise-01 
      :ARG2 (b / bear-02 
            :ARG0 (m / meet-03 
                  :ARG1-of (h / hold-01 
                        :ARG0 (a / and 
                              :ARG0-of (p5 / perform-01 
                                    :ARG1-of (i / intend-01 
                                          :ARG0 (a3 / and) 
                                          :ARG2 (p4 / prospect 
                                                :ARG0-of (h2 / have-org-role-91 
                                                      :ARG2 (p2 / president)) 
                                                :poss (p3 / peace 
                                                      :mod (w / world))) 
                                          :time (c / celebrate-02 
                                                :ARG1 (r / renaissance)))) 
                              :mod (a2 / also))) 
                  :mod (s / summit)) 
            :ARG1 (f / fruit 
                  :prep-in (d / disarm-01))))

# ::snt but im not promising youll find the golden moment youre looking for among todays events and happenings
# ::tok but im not promising youll find the golden moment youre looking for among todays events and happenings
# ::alignments 15-16|0.1 14-15|0.1.1 12-13|0.1.1.0 8-9|0.0 7-8|0.1.0.0 3-4|0.1.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:13.159
# ::node	0	contrast-01	0-1
# ::node	0.0	moment	8-9
# ::node	0.1	and	15-16
# ::node	0.1.0	promise-01	3-4
# ::node	0.1.0.0	gold	7-8
# ::node	0.1.1	event	14-15
# ::node	0.1.1.0	among	12-13
# ::root	0	contrast-01
# ::edge	among	op1	event	0.1.1.0	0.1.1	
# ::edge	and	op1	event	0.1	0.1.1	
# ::edge	contrast-01	ARG1	moment	0	0.0	
# ::edge	contrast-01	ARG2	and	0	0.1	
# ::edge	promise-01	ARG1	gold	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG2	and	0.1.0	0.1	
(c / contrast-01 
      :ARG1 (m / moment) 
      :ARG2 (a / and 
            :ARG2-of (p / promise-01 
                  :ARG1 (g / gold)) 
            :op1 (e / event 
                  :op-of (a2 / among))))

# ::snt a new political party for west germanys older generation the greys was born yesterday promising to fight for pensioners rights and greater social acceptance of the increasing numbers of oversixties anna tomforde writes from bonn
# ::tok a new political party for west germanys older generation the greys was born yesterday promising to fight for pensioners rights and greater social acceptance of the increasing numbers of oversixties anna tomforde writes from bonn
# ::alignments 32-33|0.2 27-28|0.1 26-27|0 23-24|0.2.0 22-23|0.2.0.0 21-22|0.2.1.0.1.1.1.1 20-21|0.2.1 19-20|0.2.1.0.1.1.1 18-19|0.2.1.0.1.1.1.0 16-17|0.2.1.0.1.1 14-15|0.2.1.0.1 13-14|0.2.1.0.1.1.0 12-13|0.2.1.0 8-9|0.2.1.0.1.0 7-8|0.2.1.0.1.0.0 5-6|0.0 3-4|0.2.1.0.0 2-3|0.2.1.0.0.0 1-2|0.2.1.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:13.378
# ::node	0	increase-01	26-27
# ::node	0.0	west	5-6
# ::node	0.1	number	27-28
# ::node	0.2	write-01	32-33
# ::node	0.2.0	accept-01	23-24
# ::node	0.2.0.0	society	22-23
# ::node	0.2.1	and	20-21
# ::node	0.2.1.0	bear-02	12-13
# ::node	0.2.1.0.0	party	3-4
# ::node	0.2.1.0.0.0	politics	2-3
# ::node	0.2.1.0.0.1	new	1-2
# ::node	0.2.1.0.1	promise-01	14-15
# ::node	0.2.1.0.1.0	generation	8-9
# ::node	0.2.1.0.1.0.0	old	7-8
# ::node	0.2.1.0.1.1	fight-01	16-17
# ::node	0.2.1.0.1.1.0	yesterday	13-14
# ::node	0.2.1.0.1.1.1	right	19-20
# ::node	0.2.1.0.1.1.1.0	pensioner	18-19
# ::node	0.2.1.0.1.1.1.1	great	21-22
# ::root	0	increase-01
# ::edge	accept-01	ARG1	society	0.2.0	0.2.0.0	
# ::edge	and	op1	bear-02	0.2.1	0.2.1.0	
# ::edge	and	op2	write-01	0.2.1	0.2	
# ::edge	bear-02	ARG0	party	0.2.1.0	0.2.1.0.0	
# ::edge	bear-02	ARG1	promise-01	0.2.1.0	0.2.1.0.1	
# ::edge	fight-01	ARG0	yesterday	0.2.1.0.1.1	0.2.1.0.1.1.0	
# ::edge	fight-01	purpose	right	0.2.1.0.1.1	0.2.1.0.1.1.1	
# ::edge	generation	mod	old	0.2.1.0.1.0	0.2.1.0.1.0.0	
# ::edge	increase-01	ARG0	west	0	0.0	
# ::edge	increase-01	ARG1	number	0	0.1	
# ::edge	party	mod	new	0.2.1.0.0	0.2.1.0.0.1	
# ::edge	party	mod	politics	0.2.1.0.0	0.2.1.0.0.0	
# ::edge	promise-01	ARG1	generation	0.2.1.0.1	0.2.1.0.1.0	
# ::edge	promise-01	ARG2	fight-01	0.2.1.0.1	0.2.1.0.1.1	
# ::edge	right	mod	pensioner	0.2.1.0.1.1.1	0.2.1.0.1.1.1.0	
# ::edge	right	quant	great	0.2.1.0.1.1.1	0.2.1.0.1.1.1.1	
# ::edge	write-01	ARG1	accept-01	0.2	0.2.0	
# ::edge	write-01	ARG2	increase-01	0.2	0	
(i / increase-01 
      :ARG0 (w2 / west) 
      :ARG1 (n / number) 
      :ARG2-of (w / write-01 
            :ARG1 (a / accept-01 
                  :ARG1 (s / society)) 
            :op-of (a2 / and 
                  :op1 (b / bear-02 
                        :ARG0 (p3 / party 
                              :mod (p4 / politics) 
                              :mod (n2 / new)) 
                        :ARG1 (p2 / promise-01 
                              :ARG1 (g2 / generation 
                                    :mod (o / old)) 
                              :ARG2 (f / fight-01 
                                    :ARG0 (y / yesterday) 
                                    :purpose (r / right 
                                          :mod (p / pensioner) 
                                          :quant (g / great))))))))

# ::snt john gummer minister for agriculture and fisheries promised in the commons to fight for the best deal possible for britains fishing industry in next weeks ec negotiations to agree catch quotas for 1990
# ::tok john gummer minister for agriculture and fisheries promised in the commons to fight for the best deal possible for britains fishing industry in next weeks ec negotiations to agree catch quotas for 1990
# ::alignments 32-33|0.0.0.2.0+0.0.0.2 30-31|0.0.0.0 28-29|0.0.0 26-27|0.0.0.1 24-25|0.0.0.1.1.0+0.0.0.1.1.0.0 23-24|0.0.0.1.1 21-22|0.0 20-21|0 17-18|0.0.0.1.0.0.0.1 16-17|0.0.0.1.0 12-13|0.0.0.1.0.0 10-11|0.0.0.1.0.0.1.0.0.0+0.0.0.1.0.0.1.0.0+0.0.0.1.0.0.1.0 7-8|0.0.0.1.0.0.1 5-6|0.0.0.1.0.0.0 4-5|0.0.0.1.0.0.0.0 2-3|0.0.0.1.0.0.0.0.0.0+0.0.0.1.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:13.619
# ::node	0	fish-01	20-21
# ::node	0.0	industry	21-22
# ::node	0.0.0	agree-01	28-29
# ::node	0.0.0.0	quota	30-31
# ::node	0.0.0.1	negotiate-01	26-27
# ::node	0.0.0.1.0	deal-01	16-17
# ::node	0.0.0.1.0.0	fight-01	12-13
# ::node	0.0.0.1.0.0.0	and	5-6
# ::node	0.0.0.1.0.0.0.0	agriculture	4-5
# ::node	0.0.0.1.0.0.0.0.0	have-org-role-91	2-3
# ::node	0.0.0.1.0.0.0.0.0.0	minister	2-3
# ::node	0.0.0.1.0.0.0.1	possible	17-18
# ::node	0.0.0.1.0.0.1	promise-01	7-8
# ::node	0.0.0.1.0.0.1.0	government-organization	10-11
# ::node	0.0.0.1.0.0.1.0.0	name	10-11
# ::node	0.0.0.1.0.0.1.0.0.0	"Commons"	10-11
# ::node	0.0.0.1.1	next	23-24
# ::node	0.0.0.1.1.0	week	24-25
# ::node	0.0.0.1.1.0.0	temporal-quantity	24-25
# ::node	0.0.0.2	date-entity	32-33
# ::node	0.0.0.2.0	1990	32-33
# ::root	0	fish-01
(f / fish-01 
      :mod-of (i / industry 
            :ARG0-of (a / agree-01 
                  :ARG1 (q / quota) 
                  :ARG2-of (n / negotiate-01 
                        :ARG1 (d2 / deal-01 
                              :ARG2-of (f2 / fight-01 
                                    :ARG0 (a2 / and 
                                          :op1 (a3 / agriculture 
                                                :ARG1-of (h / have-org-role-91 
                                                      :ARG2 (m / minister))) 
                                          :op2 (p / possible)) 
                                    :ARG2-of (p2 / promise-01 
                                          :ARG0 (g / government-organization 
                                                :name (n3 / name 
                                                      :op1 "Commons"))))) 
                        :mod (n2 / next 
                              :mod-of (w / week 
                                    :unit-of (t / temporal-quantity)))) 
                  :time (d / date-entity 
                        :year 1990))))

# ::snt dora promised that she would go to the station before lunch and fetch the case
# ::tok dora promised that she would go to the station before lunch and fetch the case
# ::alignments 14-15|0.0.0 11-12|0.1 10-11|0.1.1.0 9-10|0.1.1 8-9|0.1.0 3-4|0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:13.643
# ::node	0	promise-01	1-2
# ::node	0.0	she	3-4
# ::node	0.0.0	case	14-15
# ::node	0.1	and	11-12
# ::node	0.1.0	station	8-9
# ::node	0.1.1	before	9-10
# ::node	0.1.1.0	lunch-01	10-11
# ::root	0	promise-01
# ::edge	and	op1	station	0.1	0.1.0	
# ::edge	and	time	before	0.1	0.1.1	
# ::edge	before	op1	lunch-01	0.1.1	0.1.1.0	
# ::edge	case	poss	she	0.0.0	0.0	
# ::edge	promise-01	ARG0	she	0	0.0	
# ::edge	promise-01	ARG1	and	0	0.1	
(p / promise-01 
      :ARG0 (s2 / she 
            :poss-of (c / case)) 
      :ARG1 (a / and 
            :op1 (s / station) 
            :time (b / before 
                  :op1 (l / lunch-01))))

# ::snt and mark my words oxford united will be at the top half of the of the division by christmas i promise you once they get it sorted out theres not one side in the second division who are better than oxford
# ::tok and mark my words oxford united will be at the top half of the of the division by christmas i promise you once they get it sorted out theres not one side in the second division who are better than oxford
# ::alignments 35-36|0.1.0.0.1.0.2 31-32|0.1.0.0.1.0.2.0 26-27|0.1.0.0 25-26|0.1.0.0.0 23-24|0.1.0.0.1 22-23|0.1.0.0.1.0.3 21-22|0.1.0.0.1.0.1 20-21|0.1.0.0.1.0 19-20|0.1.0.0.1.0.0 16-17|0.0 11-12|0.2.0 10-11|0.2.0.0 5-6|0.1.0 3-4|0.1 1-2|0 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:14.001
# ::node	0	mark-01	1-2
# ::node	0.0	division	16-17
# ::node	0.1	word	3-4
# ::node	0.1.0	unite-01	5-6
# ::node	0.1.0.0	sort-02	26-27
# ::node	0.1.0.0.0	it	25-26
# ::node	0.1.0.0.1	they	23-24
# ::node	0.1.0.0.1.0	promise-01	20-21
# ::node	0.1.0.0.1.0.0	i	19-20
# ::node	0.1.0.0.1.0.1	you	21-22
# ::node	0.1.0.0.1.0.2	division	35-36
# ::node	0.1.0.0.1.0.2.0	side	31-32
# ::node	0.1.0.0.1.0.3	once	22-23
# ::node	0.2	and	0-1
# ::node	0.2.0	half	11-12
# ::node	0.2.0.0	top	10-11
# ::root	0	mark-01
# ::edge	and	op1	mark-01	0.2	0	
# ::edge	division	op1	promise-01	0.1.0.0.1.0.2	0.1.0.0.1.0	
# ::edge	half	mod	top	0.2.0	0.2.0.0	
# ::edge	half	poss	and	0.2.0	0.2	
# ::edge	mark-01	ARG0	division	0	0.0	
# ::edge	mark-01	ARG1	word	0	0.1	
# ::edge	promise-01	ARG0	i	0.1.0.0.1.0	0.1.0.0.1.0.0	
# ::edge	promise-01	ARG1	you	0.1.0.0.1.0	0.1.0.0.1.0.1	
# ::edge	promise-01	ARG2	they	0.1.0.0.1.0	0.1.0.0.1	
# ::edge	promise-01	time	once	0.1.0.0.1.0	0.1.0.0.1.0.3	
# ::edge	side	location	division	0.1.0.0.1.0.2.0	0.1.0.0.1.0.2	
# ::edge	sort-02	ARG0	it	0.1.0.0	0.1.0.0.0	
# ::edge	sort-02	ARG1	they	0.1.0.0	0.1.0.0.1	
# ::edge	sort-02	ARG2	unite-01	0.1.0.0	0.1.0	
# ::edge	unite-01	ARG0	word	0.1.0	0.1	
(m / mark-01 
      :ARG0 (d2 / division) 
      :ARG1 (w / word 
            :ARG0-of (u / unite-01 
                  :ARG2-of (s2 / sort-02 
                        :ARG0 (i / it) 
                        :ARG1 (t / they 
                              :ARG2-of (p / promise-01 
                                    :ARG0 (i2 / i) 
                                    :ARG1 (y / you) 
                                    :op-of (d / division 
                                          :location-of (s / side)) 
                                    :time (o / once)))))) 
      :op-of (a / and 
            :poss-of (h / half 
                  :mod (t2 / top))))

# ::snt time was when the studio logo did the job promising a distinctive house style stars and creative personnel but given the vagaries of dealmaking in modern hollywood these packages cannot be counted on any more
# ::tok time was when the studio logo did the job promising a distinctive house style stars and creative personnel but given the vagaries of dealmaking in modern hollywood these packages cannot be counted on any more
# ::alignments 33-34|0.1.3 31-32|0.3.0.0 28-29|0.3+0.3.0 26-27|0.3.0.0.0.0.0+0.3.0.0.0.0+0.3.0.0.0 25-26|0.2.0 19-20|0.2 18-19|0 17-18|0.2.1.0 15-16|0.2.1 14-15|0.1.2 13-14|0.1.1 12-13|0.1.1.0 9-10|0.1 8-9|0.1.0 5-6|0.1.1.0.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:14.423
# ::node	0	contrast-01	18-19
# ::node	0.0	time	0-1
# ::node	0.1	promise-01	9-10
# ::node	0.1.0	job	8-9
# ::node	0.1.1	style	13-14
# ::node	0.1.1.0	house	12-13
# ::node	0.1.1.0.0	logo	5-6
# ::node	0.1.2	star	14-15
# ::node	0.1.3	any	33-34
# ::node	0.2	give-01	19-20
# ::node	0.2.0	modern	25-26
# ::node	0.2.1	and	15-16
# ::node	0.2.1.0	personnel	17-18
# ::node	0.3	package-01	28-29
# ::node	0.3.0	thing	28-29
# ::node	0.3.0.0	count-02	31-32
# ::node	0.3.0.0.0	organization	26-27
# ::node	0.3.0.0.0.0	name	26-27
# ::node	0.3.0.0.0.0.0	"Hollywood"	26-27
# ::root	0	contrast-01
# ::edge	and	op1	personnel	0.2.1	0.2.1.0	
# ::edge	any	op1	promise-01	0.1.3	0.1	
# ::edge	contrast-01	ARG0	time	0	0.0	
# ::edge	contrast-01	ARG1	promise-01	0	0.1	
# ::edge	contrast-01	ARG2	give-01	0	0.2	
# ::edge	count-02	ARG0	organization	0.3.0.0	0.3.0.0.0	
# ::edge	count-02	ARG1	thing	0.3.0.0	0.3.0	
# ::edge	give-01	ARG0	modern	0.2	0.2.0	
# ::edge	give-01	ARG1	and	0.2	0.2.1	
# ::edge	house	domain	logo	0.1.1.0	0.1.1.0.0	
# ::edge	name	op1	"Hollywood"	0.3.0.0.0.0	0.3.0.0.0.0.0	
# ::edge	organization	name	name	0.3.0.0.0	0.3.0.0.0.0	
# ::edge	package-01	ARG1	thing	0.3	0.3.0	
# ::edge	package-01	topic	contrast-01	0.3	0	
# ::edge	promise-01	ARG0	job	0.1	0.1.0	
# ::edge	promise-01	ARG1	style	0.1	0.1.1	
# ::edge	promise-01	ARG2	star	0.1	0.1.2	
# ::edge	style	mod	house	0.1.1	0.1.1.0	
(c2 / contrast-01 
      :ARG0 (t2 / time) 
      :ARG1 (p3 / promise-01 
            :ARG0 (j / job) 
            :ARG1 (s2 / style 
                  :mod (h / house 
                        :domain (l / logo))) 
            :ARG2 (s / star) 
            :op-of (a / any)) 
      :ARG2 (g / give-01 
            :ARG0 (m / modern) 
            :ARG1 (a2 / and 
                  :op1 (p2 / personnel))) 
      :topic-of (p / package-01 
            :ARG1 (t / thing 
                  :ARG1-of (c / count-02 
                        :ARG0 (o / organization 
                              :name (n / name 
                                    :op1 "Hollywood"))))))

# ::snt mr gould promised the party would restore the great utilities to public ownership and insist on higher standards of regulation than those which had prevailed under the conservatives
# ::tok mr gould promised the party would restore the great utilities to public ownership and insist on higher standards of regulation than those which had prevailed under the conservatives
# ::alignments 27-28|0.0.0.0.1.0 24-25|0.0.0.0.1 19-20|0.0.0.0.0.1 17-18|0.0.0.0.0 16-17|0.0.0.0.0.0 14-15|0.0.0.0 13-14|0.0.0.0.3 12-13|0.0.0.0.2 11-12|0.0.0.0.2.0 8-9|0.0.0.0.0.1.0 6-7|0.0 4-5|0.0.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:14.564
# ::node	0	promise-01	2-3
# ::node	0.0	restore-01	6-7
# ::node	0.0.0	party	4-5
# ::node	0.0.0.0	insist-01	14-15
# ::node	0.0.0.0.0	standard	17-18
# ::node	0.0.0.0.0.0	high	16-17
# ::node	0.0.0.0.0.1	regulate-01	19-20
# ::node	0.0.0.0.0.1.0	great	8-9
# ::node	0.0.0.0.1	prevail-01	24-25
# ::node	0.0.0.0.1.0	conservative	27-28
# ::node	0.0.0.0.2	ownership	12-13
# ::node	0.0.0.0.2.0	public	11-12
# ::node	0.0.0.0.3	and	13-14
# ::root	0	promise-01
# ::edge	and	op1	insist-01	0.0.0.0.3	0.0.0.0	
# ::edge	insist-01	ARG0	party	0.0.0.0	0.0.0	
# ::edge	insist-01	ARG1	standard	0.0.0.0	0.0.0.0.0	
# ::edge	insist-01	ARG2	prevail-01	0.0.0.0	0.0.0.0.1	
# ::edge	insist-01	ARG3	ownership	0.0.0.0	0.0.0.0.2	
# ::edge	ownership	mod	public	0.0.0.0.2	0.0.0.0.2.0	
# ::edge	prevail-01	ARG1	conservative	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	promise-01	ARG1	restore-01	0	0.0	
# ::edge	regulate-01	ARG1	great	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	restore-01	ARG0	party	0.0	0.0.0	
# ::edge	standard	mod	high	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	standard	mod	regulate-01	0.0.0.0.0	0.0.0.0.0.1	
(p4 / promise-01 
      :ARG1 (r2 / restore-01 
            :ARG0 (p3 / party 
                  :ARG0-of (i / insist-01 
                        :ARG1 (s / standard 
                              :mod (h / high) 
                              :mod (r / regulate-01 
                                    :ARG1 (g / great))) 
                        :ARG2 (p / prevail-01 
                              :ARG1 (c / conservative)) 
                        :ARG3 (o / ownership 
                              :mod (p2 / public)) 
                        :op-of (a / and)))))

# ::snt some day ill live in the countryside ive promised myself that
# ::tok some day ill live in the countryside ive promised myself that
# ::alignments 8-9|0 6-7|0.0 3-4|0.1 2-3|0.1.0 1-2|0.1.0.0 0-1|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:14.587
# ::node	0	promise-01	8-9
# ::node	0.0	countryside	6-7
# ::node	0.1	live-01	3-4
# ::node	0.1.0	ill-41	2-3
# ::node	0.1.0.0	day	1-2
# ::node	0.1.0.0.0	some	0-1
# ::root	0	promise-01
# ::edge	day	quant	some	0.1.0.0	0.1.0.0.0	
# ::edge	ill-41	ARG0	day	0.1.0	0.1.0.0	
# ::edge	live-01	ARG1	promise-01	0.1	0	
# ::edge	live-01	manner	ill-41	0.1	0.1.0	
# ::edge	promise-01	ARG1	countryside	0	0.0	
(p / promise-01 
      :ARG1 (c / countryside) 
      :ARG1-of (l / live-01 
            :manner (i / ill-41 
                  :ARG0 (d / day 
                        :quant (s / some)))))

# ::snt perhaps the outcome of tomorrows draw will explain their change of heart they are rumoured to have been promised a base near genoa
# ::tok perhaps the outcome of tomorrows draw will explain their change of heart they are rumoured to have been promised a base near genoa
# ::alignments 21-22|0.1.1.0.0.0 20-21|0.1.1.0.0 18-19|0.1.1.0 12-13|0.1.1 11-12|0.1.2 9-10|0.1 7-8|0 5-6|0.1.0 2-3|0.0 0-1|0.1.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:14.769
# ::node	0	explain-01	7-8
# ::node	0.0	outcome	2-3
# ::node	0.1	change-01	9-10
# ::node	0.1.0	draw-02	5-6
# ::node	0.1.1	they	12-13
# ::node	0.1.1.0	promise-01	18-19
# ::node	0.1.1.0.0	base	20-21
# ::node	0.1.1.0.0.0	near	21-22
# ::node	0.1.1.0.1	perhaps	0-1
# ::node	0.1.2	heart	11-12
# ::root	0	explain-01
# ::edge	base	location	near	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	change-01	ARG0	draw-02	0.1	0.1.0	
# ::edge	change-01	ARG1	they	0.1	0.1.1	
# ::edge	change-01	location	heart	0.1	0.1.2	
# ::edge	explain-01	ARG0	outcome	0	0.0	
# ::edge	explain-01	ARG1	change-01	0	0.1	
# ::edge	perhaps	op1	promise-01	0.1.1.0.1	0.1.1.0	
# ::edge	promise-01	ARG0	they	0.1.1.0	0.1.1	
# ::edge	promise-01	ARG1	base	0.1.1.0	0.1.1.0.0	
(e / explain-01 
      :ARG0 (o / outcome) 
      :ARG1 (c / change-01 
            :ARG0 (d / draw-02) 
            :ARG1 (t / they 
                  :ARG0-of (p / promise-01 
                        :ARG1 (b / base 
                              :location (n / near)) 
                        :op-of (p2 / perhaps))) 
            :location (h / heart)))

# ::snt we promise to give up opening articles with the words it cannot have escaped your attention that ellip
# ::tok we promise to give up opening articles with the words it cannot have escaped your attention that ellip
# ::alignments 15-16|0.0.1.1.0.1 13-14|0.0.1.1.0 10-11|0.0.1.1.0.0 9-10|0.0.1.1 6-7|0.0.1 5-6|0.0.1.0 3-4|0.0 1-2|0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:14.881
# ::node	0	promise-01	1-2
# ::node	0.0	give-01	3-4
# ::node	0.0.0	we	0-1
# ::node	0.0.1	article	6-7
# ::node	0.0.1.0	open-01	5-6
# ::node	0.0.1.1	word	9-10
# ::node	0.0.1.1.0	escape-01	13-14
# ::node	0.0.1.1.0.0	it	10-11
# ::node	0.0.1.1.0.1	attention	15-16
# ::root	0	promise-01
# ::edge	article	location	word	0.0.1	0.0.1.1	
# ::edge	escape-01	ARG0	it	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	escape-01	ARG1	attention	0.0.1.1.0	0.0.1.1.0.1	
# ::edge	escape-01	ARG2	word	0.0.1.1.0	0.0.1.1	
# ::edge	give-01	ARG0	we	0.0	0.0.0	
# ::edge	give-01	ARG1	article	0.0	0.0.1	
# ::edge	open-01	ARG1	article	0.0.1.0	0.0.1	
# ::edge	promise-01	ARG2	give-01	0	0.0	
(p / promise-01 
      :ARG2 (g / give-01 
            :ARG0 (w2 / we) 
            :ARG1 (a2 / article 
                  :ARG1-of (o / open-01) 
                  :location (w / word 
                        :ARG2-of (e / escape-01 
                              :ARG0 (i / it) 
                              :ARG1 (a / attention))))))

# ::snt the university has promised to review its recruitment practice and promotion procedures
# ::tok the university has promised to review its recruitment practice and promotion procedures
# ::alignments 11-12|0.1.0.0 10-11|0.1.0.0.0 9-10|0.1.0 8-9|0.1.1 7-8|0.1.1.0 5-6|0.1 3-4|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:15.048
# ::node	0	promise-01	3-4
# ::node	0.0	university	1-2
# ::node	0.1	review-01	5-6
# ::node	0.1.0	and	9-10
# ::node	0.1.0.0	procedure	11-12
# ::node	0.1.0.0.0	promote-02	10-11
# ::node	0.1.1	practice-01	8-9
# ::node	0.1.1.0	recruit-01	7-8
# ::root	0	promise-01
# ::edge	and	op1	procedure	0.1.0	0.1.0.0	
# ::edge	practice-01	ARG1	recruit-01	0.1.1	0.1.1.0	
# ::edge	promise-01	ARG0	university	0	0.0	
# ::edge	promise-01	ARG2	review-01	0	0.1	
# ::edge	promote-02	ARG1	procedure	0.1.0.0.0	0.1.0.0	
# ::edge	review-01	ARG0	and	0.1	0.1.0	
# ::edge	review-01	ARG1	practice-01	0.1	0.1.1	
(p4 / promise-01 
      :ARG0 (u / university) 
      :ARG2 (r2 / review-01 
            :ARG0 (a / and 
                  :op1 (p / procedure 
                        :ARG1-of (p2 / promote-02))) 
            :ARG1 (p3 / practice-01 
                  :ARG1 (r / recruit-01))))

# ::snt he was less happy with the conduct of some of his players and promised an internal inquiry
# ::tok he was less happy with the conduct of some of his players and promised an internal inquiry
# ::alignments 16-17|0.1.1 15-16|0.1.1.0 13-14|0.1 12-13|0 11-12|0.0.0+0.0 8-9|0.0.2 6-7|0.0.1 3-4|0.1.0.0 2-3|0.1.0.0.0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:15.128
# ::node	0	and	12-13
# ::node	0.0	person	11-12
# ::node	0.0.0	play-01	11-12
# ::node	0.0.1	conduct-01	6-7
# ::node	0.0.2	some	8-9
# ::node	0.1	promise-01	13-14
# ::node	0.1.0	he	0-1
# ::node	0.1.0.0	happy	3-4
# ::node	0.1.0.0.0	less	2-3
# ::node	0.1.1	inquire-01	16-17
# ::node	0.1.1.0	internal	15-16
# ::root	0	and
# ::edge	and	op1	person	0	0.0	
# ::edge	and	op2	promise-01	0	0.1	
# ::edge	conduct-01	ARG1	person	0.0.1	0.0	
# ::edge	happy	degree	less	0.1.0.0	0.1.0.0.0	
# ::edge	happy	domain	he	0.1.0.0	0.1.0	
# ::edge	inquire-01	mod	internal	0.1.1	0.1.1.0	
# ::edge	person	quant	some	0.0	0.0.2	
# ::edge	play-01	ARG0	person	0.0.0	0.0	
# ::edge	promise-01	ARG0	he	0.1	0.1.0	
# ::edge	promise-01	ARG1	inquire-01	0.1	0.1.1	
(a / and 
      :op1 (p2 / person 
            :ARG0-of (p3 / play-01) 
            :ARG1-of (c / conduct-01) 
            :quant (s / some)) 
      :op2 (p / promise-01 
            :ARG0 (h2 / he 
                  :domain-of (h / happy 
                        :degree (l / less))) 
            :ARG1 (i / inquire-01 
                  :mod (i2 / internal))))

# ::snt hitler in the part of the speech which attracted most attention demanded full powers to act immediately and ruthlessly independent of person and status where anyone was found not to be fulfilling his duties to the peoples community and failing in the war effort and promised an inexorable challenge to every form of corruption and omission of duty
# ::tok hitler in the part of the speech which attracted most attention demanded full powers to act immediately and ruthlessly independent of person and status where anyone was found not to be fulfilling his duties to the peoples community and failing in the war effort and promised an inexorable challenge to every form of corruption and omission of duty
# ::alignments 57-58|0.3.1.1.0.0.0.1.0 54-55|0.3.1.1.0.0.0.1.1 53-54|0.3.1.1.0.0.0.1 51-52|0.3.1.1.0.0.0 50-51|0.3.1.1.0.0.0.0 48-49|0.3.1.1.0.0 45-46|0.3.1.1.0 44-45|0.3.1.1 43-44|0.3.1.0 42-43|0.3.1.0.0 39-40|0.3.1 38-39|0.3 37-38|0.1 36-37|0.2 33-34|0.0 31-32|0 27-28|0.3.0 25-26|0.3.0.0 23-24|0.3.1.1.0.1.2.1.1 22-23|0.3.1.1.0.1.2.1 21-22|0.3.1.1.0.1.2.1.0 19-20|0.3.1.1.0.1.2.2+0.3.1.1.0.1.2 18-19|0.3.1.1.0.1.2.0 17-18|0.3.1.1.0.1 16-17|0.3.1.1.0.1.1.1.0.1 15-16|0.3.1.1.0.1.1.1.0 13-14|0.3.1.1.0.1.1.1.0.0 12-13|0.3.1.1.0.1.1.1.0.0.0 11-12|0.3.1.1.0.1.1 10-11|0.3.1.1.0.1.1.1 9-10|0.3.1.1.0.1.1.0 8-9|0.3.1.1.0.1.0 6-7|0.3.1.1.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:16.238
# ::node	0	fulfill-01	31-32
# ::node	0.0	duty	33-34
# ::node	0.1	community	37-38
# ::node	0.2	people	36-37
# ::node	0.3	and	38-39
# ::node	0.3.0	find-01	27-28
# ::node	0.3.0.0	anyone	25-26
# ::node	0.3.1	fail-01	39-40
# ::node	0.3.1.0	effort	43-44
# ::node	0.3.1.0.0	war	42-43
# ::node	0.3.1.1	and	44-45
# ::node	0.3.1.1.0	promise-01	45-46
# ::node	0.3.1.1.0.0	challenge-01	48-49
# ::node	0.3.1.1.0.0.0	form	51-52
# ::node	0.3.1.1.0.0.0.0	every	50-51
# ::node	0.3.1.1.0.0.0.1	corrupt-01	53-54
# ::node	0.3.1.1.0.0.0.1.0	duty	57-58
# ::node	0.3.1.1.0.0.0.1.1	and	54-55
# ::node	0.3.1.1.0.1	and	17-18
# ::node	0.3.1.1.0.1.0	attract-01	8-9
# ::node	0.3.1.1.0.1.0.0	speech	6-7
# ::node	0.3.1.1.0.1.1	demand-01	11-12
# ::node	0.3.1.1.0.1.1.0	most	9-10
# ::node	0.3.1.1.0.1.1.1	attention	10-11
# ::node	0.3.1.1.0.1.1.1.0	act-02	15-16
# ::node	0.3.1.1.0.1.1.1.0.0	power	13-14
# ::node	0.3.1.1.0.1.1.1.0.0.0	full	12-13
# ::node	0.3.1.1.0.1.1.1.0.1	immediate	16-17
# ::node	0.3.1.1.0.1.2	depend-01	19-20
# ::node	0.3.1.1.0.1.2.0	ruthless	18-19
# ::node	0.3.1.1.0.1.2.1	and	22-23
# ::node	0.3.1.1.0.1.2.1.0	person	21-22
# ::node	0.3.1.1.0.1.2.1.1	status	23-24
# ::node	0.3.1.1.0.1.2.2	-	19-20
# ::root	0	fulfill-01
# ::edge	act-02	ARG1	attention	0.3.1.1.0.1.1.1.0	0.3.1.1.0.1.1.1	
# ::edge	act-02	time	immediate	0.3.1.1.0.1.1.1.0	0.3.1.1.0.1.1.1.0.1	
# ::edge	and	op1	corrupt-01	0.3.1.1.0.0.0.1.1	0.3.1.1.0.0.0.1	
# ::edge	and	op1	demand-01	0.3.1.1.0.1	0.3.1.1.0.1.1	
# ::edge	and	op1	depend-01	0.3.1.1.0.1.2.1	0.3.1.1.0.1.2	
# ::edge	and	op1	fail-01	0.3.1.1	0.3.1	
# ::edge	and	op1	fulfill-01	0.3	0	
# ::edge	and	op2	depend-01	0.3.1.1.0.1	0.3.1.1.0.1.2	
# ::edge	and	op2	fail-01	0.3	0.3.1	
# ::edge	and	op2	person	0.3.1.1.0.1.2.1	0.3.1.1.0.1.2.1.0	
# ::edge	and	op2	promise-01	0.3.1.1	0.3.1.1.0	
# ::edge	and	op3	promise-01	0.3.1.1.0.1	0.3.1.1.0	
# ::edge	and	op3	status	0.3.1.1.0.1.2.1	0.3.1.1.0.1.2.1.1	
# ::edge	attract-01	ARG0	speech	0.3.1.1.0.1.0	0.3.1.1.0.1.0.0	
# ::edge	attract-01	ARG1	and	0.3.1.1.0.1.0	0.3.1.1.0.1	
# ::edge	challenge-01	ARG1	form	0.3.1.1.0.0	0.3.1.1.0.0.0	
# ::edge	corrupt-01	ARG1	duty	0.3.1.1.0.0.0.1	0.3.1.1.0.0.0.1.0	
# ::edge	demand-01	ARG0	most	0.3.1.1.0.1.1	0.3.1.1.0.1.1.0	
# ::edge	demand-01	ARG1	attention	0.3.1.1.0.1.1	0.3.1.1.0.1.1.1	
# ::edge	depend-01	degree	ruthless	0.3.1.1.0.1.2	0.3.1.1.0.1.2.0	
# ::edge	depend-01	polarity	-	0.3.1.1.0.1.2	0.3.1.1.0.1.2.2	
# ::edge	effort	mod	war	0.3.1.0	0.3.1.0.0	
# ::edge	fail-01	ARG1	effort	0.3.1	0.3.1.0	
# ::edge	find-01	ARG0	and	0.3.0	0.3	
# ::edge	find-01	ARG1	anyone	0.3.0	0.3.0.0	
# ::edge	form	mod	every	0.3.1.1.0.0.0	0.3.1.1.0.0.0.0	
# ::edge	form	topic	corrupt-01	0.3.1.1.0.0.0	0.3.1.1.0.0.0.1	
# ::edge	fulfill-01	ARG1	duty	0	0.0	
# ::edge	fulfill-01	ARG2	community	0	0.1	
# ::edge	fulfill-01	destination	people	0	0.2	
# ::edge	power	mod	full	0.3.1.1.0.1.1.1.0.0	0.3.1.1.0.1.1.1.0.0.0	
# ::edge	power	purpose	act-02	0.3.1.1.0.1.1.1.0.0	0.3.1.1.0.1.1.1.0	
# ::edge	promise-01	ARG1	challenge-01	0.3.1.1.0	0.3.1.1.0.0	
(f3 / fulfill-01 
      :ARG1 (d2 / duty) 
      :ARG2 (c3 / community) 
      :destination (p2 / people) 
      :op-of (a3 / and 
            :ARG0-of (f4 / find-01 
                  :ARG1 (a4 / anyone)) 
            :op1 (f2 / fail-01 
                  :ARG1 (e2 / effort 
                        :mod (w / war)) 
                  :op-of (a2 / and 
                        :op1 (p / promise-01 
                              :ARG1 (c2 / challenge-01 
                                    :ARG1 (f / form 
                                          :mod (e / every) 
                                          :topic (c / corrupt-01 
                                                :ARG1 (d / duty) 
                                                :op-of (a / and)))) 
                              :op-of (a6 / and 
                                    :ARG1-of (a9 / attract-01 
                                          :ARG0 (s2 / speech)) 
                                    :op1 (d4 / demand-01 
                                          :ARG0 (m / most) 
                                          :ARG1 (a8 / attention 
                                                :ARG1-of (a7 / act-02 
                                                      :purpose-of (p4 / power 
                                                            :mod (f5 / full)) 
                                                      :time (i / immediate)))) 
                                    :op2 (d3 / depend-01 
                                          :degree (r / ruthless) 
                                          :op-of (a5 / and 
                                                :op1 (p3 / person) 
                                                :op2 (s / status)) 
                                          :polarity -)))))))

# ::snt 3 million adults receiving income support will lose out under the poll tax next year despite government promises to protect their income michael meacher labours social security spokesman said yesterday writes john pienaar
# ::tok 3 million adults receiving income support will lose out under the poll tax next year despite government promises to protect their income michael meacher labours social security spokesman said yesterday writes john pienaar
# ::alignments 30-31|0.0 29-30|0.0.0 28-29|0 27-28|0.1.3.1+0.1.3 26-27|0.1.3.0 25-26|0.1.3.0.0 21-22|0.1.1.0 19-20|0.1 17-18|0.1.1 14-15|0.1.0 13-14|0.1.0.1 12-13|0.1.0.0 11-12|0.1.0.0.0 7-8|0.1.2 5-6|0.1.2.0.0.0 4-5|0.1.2.0.0.0.1 3-4|0.1.2.0.0 2-3|0.1.2.0 0-1|0.1.2.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:16.931
# ::node	0	say-01	28-29
# ::node	0.0	write-01	30-31
# ::node	0.0.0	yesterday	29-30
# ::node	0.1	protect-01	19-20
# ::node	0.1.0	year	14-15
# ::node	0.1.0.0	tax-01	12-13
# ::node	0.1.0.0.0	poll-01	11-12
# ::node	0.1.0.1	next	13-14
# ::node	0.1.1	promise-01	17-18
# ::node	0.1.1.0	income	21-22
# ::node	0.1.2	lose-02	7-8
# ::node	0.1.2.0	adult	2-3
# ::node	0.1.2.0.0	receive-01	3-4
# ::node	0.1.2.0.0.0	support-01	5-6
# ::node	0.1.2.0.0.0.0	3	0-1
# ::node	0.1.2.0.0.0.1	income	4-5
# ::node	0.1.3	have-org-role-91	27-28
# ::node	0.1.3.0	security	26-27
# ::node	0.1.3.0.0	society	25-26
# ::node	0.1.3.1	spokesman	27-28
# ::root	0	say-01
# ::edge	have-org-role-91	ARG1	security	0.1.3	0.1.3.0	
# ::edge	have-org-role-91	ARG2	spokesman	0.1.3	0.1.3.1	
# ::edge	lose-02	ARG0	adult	0.1.2	0.1.2.0	
# ::edge	lose-02	ARG1	protect-01	0.1.2	0.1	
# ::edge	promise-01	ARG1	protect-01	0.1.1	0.1	
# ::edge	promise-01	part	income	0.1.1	0.1.1.0	
# ::edge	protect-01	ARG0	year	0.1	0.1.0	
# ::edge	protect-01	ARG1	say-01	0.1	0	
# ::edge	protect-01	concession	have-org-role-91	0.1	0.1.3	
# ::edge	receive-01	ARG0	adult	0.1.2.0.0	0.1.2.0	
# ::edge	receive-01	ARG1	support-01	0.1.2.0.0	0.1.2.0.0.0	
# ::edge	say-01	ARG1	write-01	0	0.0	
# ::edge	security	mod	society	0.1.3.0	0.1.3.0.0	
# ::edge	support-01	ARG0	3	0.1.2.0.0.0	0.1.2.0.0.0.0	
# ::edge	support-01	ARG1	income	0.1.2.0.0.0	0.1.2.0.0.0.1	
# ::edge	tax-01	ARG1	year	0.1.0.0	0.1.0	
# ::edge	tax-01	ARG3	poll-01	0.1.0.0	0.1.0.0.0	
# ::edge	write-01	ARG1	yesterday	0.0	0.0.0	
# ::edge	year	mod	next	0.1.0	0.1.0.1	
(s / say-01 
      :ARG1 (w / write-01 
            :ARG1 (y / yesterday)) 
      :ARG1-of (p / protect-01 
            :ARG0 (y2 / year 
                  :ARG1-of (t / tax-01 
                        :ARG3 (p3 / poll-01)) 
                  :mod (n / next)) 
            :ARG1-of (p2 / promise-01 
                  :part (i / income)) 
            :ARG1-of (l / lose-02 
                  :ARG0 (a / adult 
                        :ARG0-of (r / receive-01 
                              :ARG1 (s5 / support-01 
                                    :ARG0 3 
                                    :ARG1 (i2 / income))))) 
            :concession (h / have-org-role-91 
                  :ARG1 (s3 / security 
                        :mod (s4 / society)) 
                  :ARG2 (s2 / spokesman))))

# ::snt the councils recreation and amenities committee has promised the proposal will be after a petition calling for the park was received by the committee chairman mr dave cowan
# ::tok the councils recreation and amenities committee has promised the proposal will be after a petition calling for the park was received by the committee chairman mr dave cowan
# ::alignments 24-25|0.1.1.1.0.1+0.1.1.1.0 23-24|0.1.1.1.0.0 20-21|0.1.1 18-19|0.1.1.0.0 14-15|0.1.1.0 12-13|0.1.1.1 9-10|0.1 7-8|0 5-6|0.0.0 4-5|0.0.0.0 3-4|0.0 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:17.193
# ::node	0	promise-01	7-8
# ::node	0.0	and	3-4
# ::node	0.0.0	committee	5-6
# ::node	0.0.0.0	amenity	4-5
# ::node	0.1	propose-01	9-10
# ::node	0.1.0	council	1-2
# ::node	0.1.1	receive-01	20-21
# ::node	0.1.1.0	petition-01	14-15
# ::node	0.1.1.0.0	park	18-19
# ::node	0.1.1.1	after	12-13
# ::node	0.1.1.1.0	have-org-role-91	24-25
# ::node	0.1.1.1.0.0	committee	23-24
# ::node	0.1.1.1.0.1	chairman	24-25
# ::root	0	promise-01
# ::edge	after	op1	receive-01	0.1.1.1	0.1.1	
# ::edge	and	op1	committee	0.0	0.0.0	
# ::edge	committee	mod	amenity	0.0.0	0.0.0.0	
# ::edge	have-org-role-91	ARG0	after	0.1.1.1.0	0.1.1.1	
# ::edge	have-org-role-91	ARG1	committee	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	have-org-role-91	ARG2	chairman	0.1.1.1.0	0.1.1.1.0.1	
# ::edge	petition-01	ARG0	park	0.1.1.0	0.1.1.0.0	
# ::edge	promise-01	ARG0	and	0	0.0	
# ::edge	promise-01	ARG1	propose-01	0	0.1	
# ::edge	propose-01	ARG0	council	0.1	0.1.0	
# ::edge	receive-01	ARG0	propose-01	0.1.1	0.1	
# ::edge	receive-01	ARG1	petition-01	0.1.1	0.1.1.0	
(p4 / promise-01 
      :ARG0 (a3 / and 
            :op1 (c3 / committee 
                  :mod (a2 / amenity))) 
      :ARG1 (p3 / propose-01 
            :ARG0 (c4 / council) 
            :ARG0-of (r / receive-01 
                  :ARG1 (p2 / petition-01 
                        :ARG0 (p / park)) 
                  :op-of (a / after 
                        :ARG0-of (h / have-org-role-91 
                              :ARG1 (c2 / committee) 
                              :ARG2 (c / chairman))))))

# ::snt we are as distressed as anybody when things go wrong sometimes under intolerable pressure and i can promise patients that despite mr richardsons views to the contrary they can continue to put their trust in us
# ::tok we are as distressed as anybody when things go wrong sometimes under intolerable pressure and i can promise patients that despite mr richardsons views to the contrary they can continue to put their trust in us
# ::alignments 33-34|0.0.0.0 29-30|0.0 28-29|0 27-28|0.0.0 26-27|0.0.1 18-19|0.0.2.2.0.0.1+0.0.2.2.0.0 17-18|0.0.2.2 16-17|0.0.2.1 15-16|0.0.2.2.0 14-15|0.0.2 13-14|0.0.2.2.1.0.1 10-11|0.0.2.0 9-10|0.0.2.2.1.0 7-8|0.0.2.2.1 5-6|0.0.2.2.1.0.0 0-1|0.0.2.2.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:18.212
# ::node	0	possible	28-29
# ::node	0.0	continue-01	29-30
# ::node	0.0.0	they	27-28
# ::node	0.0.0.0	trust-01	33-34
# ::node	0.0.1	contrary-41	26-27
# ::node	0.0.2	and	14-15
# ::node	0.0.2.0	sometimes	10-11
# ::node	0.0.2.1	possible	16-17
# ::node	0.0.2.2	promise-01	17-18
# ::node	0.0.2.2.0	i	15-16
# ::node	0.0.2.2.0.0	have-rel-role-91	18-19
# ::node	0.0.2.2.0.0.0	we	0-1
# ::node	0.0.2.2.0.0.1	patient	18-19
# ::node	0.0.2.2.1	thing	7-8
# ::node	0.0.2.2.1.0	wrong-41	9-10
# ::node	0.0.2.2.1.0.0	anybody	5-6
# ::node	0.0.2.2.1.0.1	pressure-01	13-14
# ::root	0	possible
# ::edge	and	op1	sometimes	0.0.2	0.0.2.0	
# ::edge	and	op2	possible	0.0.2	0.0.2.1	
# ::edge	and	op3	promise-01	0.0.2	0.0.2.2	
# ::edge	and	op4	continue-01	0.0.2	0.0	
# ::edge	continue-01	ARG0	they	0.0	0.0.0	
# ::edge	continue-01	ARG1	contrary-41	0.0	0.0.1	
# ::edge	have-rel-role-91	ARG0	we	0.0.2.2.0.0	0.0.2.2.0.0.0	
# ::edge	have-rel-role-91	ARG1	i	0.0.2.2.0.0	0.0.2.2.0	
# ::edge	have-rel-role-91	ARG2	patient	0.0.2.2.0.0	0.0.2.2.0.0.1	
# ::edge	possible	domain	continue-01	0	0.0	
# ::edge	pressure-01	manner	wrong-41	0.0.2.2.1.0.1	0.0.2.2.1.0	
# ::edge	promise-01	ARG0	i	0.0.2.2	0.0.2.2.0	
# ::edge	promise-01	ARG1	thing	0.0.2.2	0.0.2.2.1	
# ::edge	trust-01	poss	they	0.0.0.0	0.0.0	
# ::edge	wrong-41	ARG0	anybody	0.0.2.2.1.0	0.0.2.2.1.0.0	
# ::edge	wrong-41	ARG1	thing	0.0.2.2.1.0	0.0.2.2.1	
(p / possible 
      :domain (c / continue-01 
            :ARG0 (t2 / they 
                  :poss-of (t / trust-01)) 
            :ARG1 (c2 / contrary-41) 
            :op-of (a / and 
                  :op1 (s / sometimes) 
                  :op2 (p4 / possible) 
                  :op3 (p3 / promise-01 
                        :ARG0 (i / i 
                              :ARG1-of (h / have-rel-role-91 
                                    :ARG0 (w2 / we) 
                                    :ARG2 (p2 / patient))) 
                        :ARG1 (t3 / thing 
                              :ARG1-of (w / wrong-41 
                                    :ARG0 (a2 / anybody) 
                                    :manner-of (p5 / pressure-01)))))))

# ::snt to finance a dollars 94bn social spending programme promised during the campaign the new administration plans to increase taxes by about 65 per cent while economists expect a sharp recession next year
# ::tok to finance a dollars 94bn social spending programme promised during the campaign the new administration plans to increase taxes by about 65 per cent while economists expect a sharp recession next year
# ::alignments 31-32|0.1.1.1.0.2 30-31|0.1.1.1.0.2.0 29-30|0.1.1.1.0.1 28-29|0.1.1.1.0.1.0 26-27|0.1.1.1.0 25-26|0.1.1.1.0.0 23-24|0.1.0.0+0.1.0 21-22|0.2.0.0.0 18-19|0.1 17-18|0.1.1 15-16|0.1.1.1 14-15|0.1.1.0 13-14|0.1.1.0.0.0 11-12|0.2.0.0 8-9|0.2.0 7-8|0.2 6-7|0 5-6|0.0 3-4|0.1.1.0.0.1.0+0.1.1.0.0.1 1-2|0.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:18.991
# ::node	0	spend-01	6-7
# ::node	0.0	society	5-6
# ::node	0.1	tax-01	18-19
# ::node	0.1.0	monetary-quantity	23-24
# ::node	0.1.0.0	cent	23-24
# ::node	0.1.1	increase-01	17-18
# ::node	0.1.1.0	administrate-01	14-15
# ::node	0.1.1.0.0	finance-01	1-2
# ::node	0.1.1.0.0.0	new	13-14
# ::node	0.1.1.0.0.1	monetary-quantity	3-4
# ::node	0.1.1.0.0.1.0	dollar	3-4
# ::node	0.1.1.1	plan-01	15-16
# ::node	0.1.1.1.0	expect-01	26-27
# ::node	0.1.1.1.0.0	economy	25-26
# ::node	0.1.1.1.0.1	recession	29-30
# ::node	0.1.1.1.0.1.0	sharp	28-29
# ::node	0.1.1.1.0.2	year	31-32
# ::node	0.1.1.1.0.2.0	next	30-31
# ::node	0.2	program	7-8
# ::node	0.2.0	promise-01	8-9
# ::node	0.2.0.0	campaign-01	11-12
# ::node	0.2.0.0.0	65	21-22
# ::root	0	spend-01
# ::edge	campaign-01	ARG1	65	0.2.0.0	0.2.0.0.0	
# ::edge	expect-01	ARG0	economy	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	expect-01	ARG1	recession	0.1.1.1.0	0.1.1.1.0.1	
# ::edge	expect-01	time	year	0.1.1.1.0	0.1.1.1.0.2	
# ::edge	finance-01	ARG0	new	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	finance-01	ARG1	monetary-quantity	0.1.1.0.0	0.1.1.0.0.1	
# ::edge	finance-01	condition	administrate-01	0.1.1.0.0	0.1.1.0	
# ::edge	increase-01	ARG0	administrate-01	0.1.1	0.1.1.0	
# ::edge	increase-01	ARG1	tax-01	0.1.1	0.1	
# ::edge	monetary-quantity	unit	cent	0.1.0	0.1.0.0	
# ::edge	monetary-quantity	unit	dollar	0.1.1.0.0.1	0.1.1.0.0.1.0	
# ::edge	plan-01	ARG1	increase-01	0.1.1.1	0.1.1	
# ::edge	plan-01	purpose	expect-01	0.1.1.1	0.1.1.1.0	
# ::edge	program	mod	spend-01	0.2	0	
# ::edge	promise-01	ARG0	program	0.2.0	0.2	
# ::edge	promise-01	ARG2	campaign-01	0.2.0	0.2.0.0	
# ::edge	recession	mod	sharp	0.1.1.1.0.1	0.1.1.1.0.1.0	
# ::edge	spend-01	ARG0	society	0	0.0	
# ::edge	spend-01	ARG1	tax-01	0	0.1	
# ::edge	tax-01	ARG1	monetary-quantity	0.1	0.1.0	
# ::edge	year	mod	next	0.1.1.1.0.2	0.1.1.1.0.2.0	
(s2 / spend-01 
      :ARG0 (s3 / society) 
      :ARG1 (t / tax-01 
            :ARG1 (m / monetary-quantity 
                  :unit (c / cent)) 
            :ARG1-of (i / increase-01 
                  :ARG0 (a / administrate-01 
                        :condition-of (f / finance-01 
                              :ARG0 (n2 / new) 
                              :ARG1 (m2 / monetary-quantity 
                                    :unit (d / dollar)))) 
                  :ARG1-of (p / plan-01 
                        :purpose (e / expect-01 
                              :ARG0 (e2 / economy) 
                              :ARG1 (r / recession 
                                    :mod (s / sharp)) 
                              :time (y / year 
                                    :mod (n / next)))))) 
      :mod-of (p3 / program 
            :ARG0-of (p2 / promise-01 
                  :ARG2 (c2 / campaign-01 
                        :ARG1 65))))

# ::snt in february 1989 greenwich promised in its development plan to maintain existing crossboundary arrangements
# ::tok in february 1989 greenwich promised in its development plan to maintain existing crossboundary arrangements
# ::alignments 13-14|0.1.0 11-12|0.0.1 10-11|0.1 8-9|0.0 7-8|0.0.0 4-5|0 1-3|0.2.1+0.2.0+0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:19.072
# ::node	0	promise-01	4-5
# ::node	0.0	plan-01	8-9
# ::node	0.0.0	develop-02	7-8
# ::node	0.0.1	exist-01	11-12
# ::node	0.1	maintain-01	10-11
# ::node	0.1.0	arrange-01	13-14
# ::node	0.2	date-entity	1-3
# ::node	0.2.0	2	1-3
# ::node	0.2.1	1989	1-3
# ::root	0	promise-01
# ::edge	date-entity	month	2	0.2	0.2.0	
# ::edge	date-entity	year	1989	0.2	0.2.1	
# ::edge	exist-01	ARG1	plan-01	0.0.1	0.0	
# ::edge	maintain-01	ARG1	arrange-01	0.1	0.1.0	
# ::edge	plan-01	ARG1	develop-02	0.0	0.0.0	
# ::edge	promise-01	ARG1	plan-01	0	0.0	
# ::edge	promise-01	ARG2	maintain-01	0	0.1	
# ::edge	promise-01	time	date-entity	0	0.2	
(p2 / promise-01 
      :ARG1 (p / plan-01 
            :ARG1 (d / develop-02) 
            :ARG1-of (e / exist-01)) 
      :ARG2 (m / maintain-01 
            :ARG1 (a / arrange-01)) 
      :time (d2 / date-entity 
            :month 2 
            :year 1989))

# ::snt   he promised that anyone who had been treated unjustly or humiliated could resort to law
# ::tok he promised that anyone who had been treated unjustly or humiliated could resort to law
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:19.073
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt he can promise you a seat in the cabinet
# ::tok he can promise you a seat in the cabinet
# ::alignments 8-9|0.0.1 5-6|0.0.0.0 3-4|0.0.2 2-3|0.0 1-2|0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:19.117
# ::node	0	possible	1-2
# ::node	0.0	promise-01	2-3
# ::node	0.0.0	he	0-1
# ::node	0.0.0.0	seat	5-6
# ::node	0.0.1	cabinet	8-9
# ::node	0.0.2	you	3-4
# ::root	0	possible
(p2 / possible 
      :mod-of (p / promise-01 
            :ARG0 (h / he 
                  :poss-of (s / seat)) 
            :ARG1 (c / cabinet) 
            :ARG2 (y / you)))

# ::snt in 1985 and 1986 with major landdrainage grants cut and the price of wheat  promising to fall some farmers were still carrying out land drainage to promote  cereal production which with the enforcement of dairy quotas continued at  least for the time being to offer a good return
# ::tok in 1985 and 1986 with major landdrainage grants cut and the price of wheat promising to fall some farmers were still carrying out land drainage to promote cereal production which with the enforcement of dairy quotas continued at least for the time being to offer a good return
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:19.118
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt those who assign sufficient importance to the interest people have in being able to impose on themselves obligations to other people as a means of creating special bonds with other people believe in a right to promise
# ::tok those who assign sufficient importance to the interest people have in being able to impose on themselves obligations to other people as a means of creating special bonds with other people believe in a right to promise
# ::alignments 36-37|0.0.2.2.0 31-32|0.0.2 29-30|0.0.0.0 27-28|0.0.2.2.1.0 26-27|0.0.2.1 25-26|0.0.2.2.1 23-24|0.0.2.2 19-20|0.0.2.0 17-18|0 14-15|0.0 12-13|0.0.1 7-8|0.0.0 4-5|0.0.0.1 3-4|0.0.0.1.0 2-3|0.0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:19.346
# ::node	0	obligate-01	17-18
# ::node	0.0	impose-01	14-15
# ::node	0.0.0	interest-01	7-8
# ::node	0.0.0.0	other	29-30
# ::node	0.0.0.1	important	4-5
# ::node	0.0.0.1.0	suffice-01	3-4
# ::node	0.0.0.1.1	assign-01	2-3
# ::node	0.0.1	possible	12-13
# ::node	0.0.2	believe-01	31-32
# ::node	0.0.2.0	other	19-20
# ::node	0.0.2.1	special	26-27
# ::node	0.0.2.2	mean-01	23-24
# ::node	0.0.2.2.0	promise-01	36-37
# ::node	0.0.2.2.1	create-01	25-26
# ::node	0.0.2.2.1.0	bond	27-28
# ::root	0	obligate-01
(o3 / obligate-01 
      :ARG2-of (i / impose-01 
            :ARG1 (i2 / interest-01 
                  :ARG0 (o / other) 
                  :ARG1 (i3 / important 
                        :ARG0-of (s2 / suffice-01) 
                        :ARG1-of (a / assign-01))) 
            :domain-of (p2 / possible) 
            :purpose (b / believe-01 
                  :ARG0 (o2 / other) 
                  :ARG1 (s / special) 
                  :ARG1-of (m / mean-01 
                        :ARG1-of (p / promise-01) 
                        :ARG2 (c / create-01 
                              :ARG1 (b2 / bond))))))

# ::snt in their declaration on liberated europe the three leaders promised to help the peoples freed from the domination of nazi germany to solve by democratic means their pressing political and economic problems
# ::tok in their declaration on liberated europe the three leaders promised to help the peoples freed from the domination of nazi germany to solve by democratic means their pressing political and economic problems
# ::alignments 31-32|0.0.1.1 30-31|0.0.1.1.0 29-30|0.0.1 28-29|0.0.1.0.0 27-28|0.0.1.0 25-26|0 24-25|0.1 22-23|0.0 19-20|0.0.0 14-15|0.0.2 13-14|0.0.2.0 11-12|0.0.2.0.0 9-10|0.0.2.0.0.0.1 8-9|0.0.2.0.0.0.0+0.0.2.0.0.0 7-8|0.0.2.0.0.0.2 5-6|0.0.2.0.0.0.1.0.0.0.0+0.0.2.0.0.0.1.0.0.0+0.0.2.0.0.0.1.0.0 2-3|0.0.2.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:19.834
# ::node	0	mean-01	25-26
# ::node	0.0	solve-01	22-23
# ::node	0.0.0	nazi	19-20
# ::node	0.0.1	and	29-30
# ::node	0.0.1.0	press-01	27-28
# ::node	0.0.1.0.0	politics	28-29
# ::node	0.0.1.1	problem	31-32
# ::node	0.0.1.1.0	economy	30-31
# ::node	0.0.2	free-01	14-15
# ::node	0.0.2.0	people	13-14
# ::node	0.0.2.0.0	help-01	11-12
# ::node	0.0.2.0.0.0	person	8-9
# ::node	0.0.2.0.0.0.0	lead-02	8-9
# ::node	0.0.2.0.0.0.1	promise-01	9-10
# ::node	0.0.2.0.0.0.1.0	declare-02	2-3
# ::node	0.0.2.0.0.0.1.0.0	continent	5-6
# ::node	0.0.2.0.0.0.1.0.0.0	name	5-6
# ::node	0.0.2.0.0.0.1.0.0.0.0	"Europe"	5-6
# ::node	0.0.2.0.0.0.2	3	7-8
# ::node	0.1	democracy	24-25
# ::root	0	mean-01
# ::edge	and	op1	problem	0.0.1	0.0.1.1	
# ::edge	continent	name	name	0.0.2.0.0.0.1.0.0	0.0.2.0.0.0.1.0.0.0	
# ::edge	declare-02	ARG0	continent	0.0.2.0.0.0.1.0	0.0.2.0.0.0.1.0.0	
# ::edge	free-01	ARG1	people	0.0.2	0.0.2.0	
# ::edge	free-01	purpose	solve-01	0.0.2	0.0	
# ::edge	help-01	ARG0	person	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	help-01	ARG1	people	0.0.2.0.0	0.0.2.0	
# ::edge	lead-02	ARG0	person	0.0.2.0.0.0.0	0.0.2.0.0.0	
# ::edge	mean-01	mod	democracy	0	0.1	
# ::edge	name	op1	"Europe"	0.0.2.0.0.0.1.0.0.0	0.0.2.0.0.0.1.0.0.0.0	
# ::edge	person	quant	3	0.0.2.0.0.0	0.0.2.0.0.0.2	
# ::edge	press-01	ARG0	politics	0.0.1.0	0.0.1.0.0	
# ::edge	press-01	ARG1	and	0.0.1.0	0.0.1	
# ::edge	problem	mod	economy	0.0.1.1	0.0.1.1.0	
# ::edge	promise-01	ARG0	person	0.0.2.0.0.0.1	0.0.2.0.0.0	
# ::edge	promise-01	ARG1	declare-02	0.0.2.0.0.0.1	0.0.2.0.0.0.1.0	
# ::edge	solve-01	ARG0	nazi	0.0	0.0.0	
# ::edge	solve-01	ARG1	and	0.0	0.0.1	
# ::edge	solve-01	ARG2	mean-01	0.0	0	
(m / mean-01 
      :ARG2-of (s / solve-01 
            :ARG0 (n / nazi) 
            :ARG1 (a / and 
                  :ARG1-of (p3 / press-01 
                        :ARG0 (p2 / politics)) 
                  :op1 (p / problem 
                        :mod (e / economy))) 
            :purpose-of (f / free-01 
                  :ARG1 (p4 / people 
                        :ARG1-of (h / help-01 
                              :ARG0 (p6 / person 
                                    :ARG0-of (l / lead-02) 
                                    :ARG0-of (p5 / promise-01 
                                          :ARG1 (d2 / declare-02 
                                                :ARG0 (c / continent 
                                                      :name (n2 / name 
                                                            :op1 "Europe")))) 
                                    :quant 3))))) 
      :mod (d / democracy))

# ::snt his performance was intended as a celebration of that renaissance and also of the prospects for world peace for in moscow comrade gorbachev and president reagan were holding a summit meeting which promised to bear fruit in disarmament, celebratory events were taking place all over the soviet union but none was more extraordinary in its modest way than charskys promised to be
# ::tok his performance was intended as a celebration of that renaissance and also of the prospects for world peace for in moscow comrade gorbachev and president reagan were holding a summit meeting which promised to bear fruit in disarmament , celebratory events were taking place all over the soviet union but none was more extraordinary in its modest way than charskys promised to be
# ::alignments 60-61|0.0.0.0 57-58|0.0.1 56-57|0.0.1.0 53-54|0.0 50-51|0.0.0 49-50|0 48-49|0.1.2.0.0.0.0 44-45|0.1.1.0.0.0.1 43-44|0.1.2.2 40-41|0.1.1.0.0.0.0 37-38|0.1.1.0.0.0 35-36|0.1.1.0.0 34-35|0.1.1.0 32-33|0.1.1.0.1 30-31|0.1.1 29-30|0.1.1.1 27-28|0.1 24-25|0.1.2.0.0.0.1+0.1.2.0.0.0 23-24|0.1.2 17-18|0.1.0.0 16-17|0.1.0 14-15|0.1.0.0.0 11-12|0.1.2.1 10-11|0.1.3 9-10|0.1.2.0.1.0 6-7|0.1.2.0.1 3-4|0.1.2.0 1-2|0.1.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:21.791
# ::node	0	contrast-01	49-50
# ::node	0.0	extraordinary	53-54
# ::node	0.0.0	none	50-51
# ::node	0.0.0.0	promise-01	60-61
# ::node	0.0.1	way	57-58
# ::node	0.0.1.0	modest	56-57
# ::node	0.1	hold-01	27-28
# ::node	0.1.0	world	16-17
# ::node	0.1.0.0	peace	17-18
# ::node	0.1.0.0.0	prospect	14-15
# ::node	0.1.1	meet-03	30-31
# ::node	0.1.1.0	bear-02	34-35
# ::node	0.1.1.0.0	fruit	35-36
# ::node	0.1.1.0.0.0	disarm-01	37-38
# ::node	0.1.1.0.0.0.0	event	40-41
# ::node	0.1.1.0.0.0.1	all	44-45
# ::node	0.1.1.0.1	promise-01	32-33
# ::node	0.1.1.1	summit	29-30
# ::node	0.1.2	and	23-24
# ::node	0.1.2.0	intend-01	3-4
# ::node	0.1.2.0.0	perform-01	1-2
# ::node	0.1.2.0.0.0	have-org-role-91	24-25
# ::node	0.1.2.0.0.0.0	union	48-49
# ::node	0.1.2.0.0.0.1	president	24-25
# ::node	0.1.2.0.1	celebrate-02	6-7
# ::node	0.1.2.0.1.0	renaissance	9-10
# ::node	0.1.2.1	also	11-12
# ::node	0.1.2.2	place	43-44
# ::node	0.1.3	and	10-11
# ::root	0	contrast-01
# ::edge	and	mod	also	0.1.2	0.1.2.1	
# ::edge	and	op1	hold-01	0.1.2	0.1	
# ::edge	and	op1	hold-01	0.1.3	0.1	
# ::edge	bear-02	ARG0	meet-03	0.1.1.0	0.1.1	
# ::edge	bear-02	ARG1	fruit	0.1.1.0	0.1.1.0.0	
# ::edge	celebrate-02	ARG1	renaissance	0.1.2.0.1	0.1.2.0.1.0	
# ::edge	contrast-01	ARG1	extraordinary	0	0.0	
# ::edge	contrast-01	ARG2	hold-01	0	0.1	
# ::edge	disarm-01	ARG0	event	0.1.1.0.0.0	0.1.1.0.0.0.0	
# ::edge	disarm-01	ARG1	all	0.1.1.0.0.0	0.1.1.0.0.0.1	
# ::edge	extraordinary	domain	none	0.0	0.0.0	
# ::edge	extraordinary	time	way	0.0	0.0.1	
# ::edge	fruit	prep-in	disarm-01	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	have-org-role-91	ARG1	union	0.1.2.0.0.0	0.1.2.0.0.0.0	
# ::edge	have-org-role-91	ARG2	president	0.1.2.0.0.0	0.1.2.0.0.0.1	
# ::edge	hold-01	ARG0	world	0.1	0.1.0	
# ::edge	hold-01	ARG1	meet-03	0.1	0.1.1	
# ::edge	intend-01	ARG1	and	0.1.2.0	0.1.2	
# ::edge	intend-01	ARG2	perform-01	0.1.2.0	0.1.2.0.0	
# ::edge	intend-01	time	celebrate-02	0.1.2.0	0.1.2.0.1	
# ::edge	meet-03	mod	summit	0.1.1	0.1.1.1	
# ::edge	peace	mod	world	0.1.0.0	0.1.0	
# ::edge	perform-01	ARG1	have-org-role-91	0.1.2.0.0	0.1.2.0.0.0	
# ::edge	place	poss	and	0.1.2.2	0.1.2	
# ::edge	promise-01	ARG1	none	0.0.0.0	0.0.0	
# ::edge	promise-01	ARG2	bear-02	0.1.1.0.1	0.1.1.0	
# ::edge	prospect	poss	peace	0.1.0.0.0	0.1.0.0	
# ::edge	way	mod	modest	0.0.1	0.0.1.0	
(c / contrast-01 
      :ARG1 (e / extraordinary 
            :domain (n / none 
                  :ARG1-of (p / promise-01)) 
            :time (w / way 
                  :mod (m / modest))) 
      :ARG2 (h / hold-01 
            :ARG0 (w2 / world 
                  :mod-of (p5 / peace 
                        :poss-of (p6 / prospect))) 
            :ARG1 (m2 / meet-03 
                  :ARG0-of (b / bear-02 
                        :ARG1 (f / fruit 
                              :prep-in (d / disarm-01 
                                    :ARG0 (e2 / event) 
                                    :ARG1 (a / all))) 
                        :ARG2-of (p3 / promise-01)) 
                  :mod (s / summit)) 
            :op-of (a2 / and 
                  :ARG1-of (i / intend-01 
                        :ARG2 (p7 / perform-01 
                              :ARG1 (h2 / have-org-role-91 
                                    :ARG1 (u / union) 
                                    :ARG2 (p4 / president))) 
                        :time (c2 / celebrate-02 
                              :ARG1 (r / renaissance))) 
                  :mod (a3 / also) 
                  :poss-of (p2 / place)) 
            :op-of (a4 / and)))

# ::snt miss ashbrook explained the law for common land was promised in the conservative partys 1987 election manifesto but we are still waiting
# ::tok miss ashbrook explained the law for common land was promised in the conservative partys 1987 election manifesto but we are still waiting
# ::alignments 21-22|0.1 20-21|0.1.2 18-19|0.1.1 17-18|0 15-16|0.0.0.1 14-15|0.0.0.0.0+0.0.0.0 12-13|0.0.0.1.0 9-10|0.0 7-8|0.1.0.0 6-7|0.1.0.0.0 4-5|0.1.0 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:22.079
# ::node	0	contrast-01	17-18
# ::node	0.0	promise-01	9-10
# ::node	0.0.0	explain-01	2-3
# ::node	0.0.0.0	date-entity	14-15
# ::node	0.0.0.0.0	1987	14-15
# ::node	0.0.0.1	elect-01	15-16
# ::node	0.0.0.1.0	conservative	12-13
# ::node	0.1	wait-01	21-22
# ::node	0.1.0	law	4-5
# ::node	0.1.0.0	land	7-8
# ::node	0.1.0.0.0	common	6-7
# ::node	0.1.1	we	18-19
# ::node	0.1.2	still	20-21
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	promise-01	0	0.0	
# ::edge	contrast-01	ARG2	wait-01	0	0.1	
# ::edge	date-entity	year	1987	0.0.0.0	0.0.0.0.0	
# ::edge	elect-01	ARG1	explain-01	0.0.0.1	0.0.0	
# ::edge	elect-01	ARG2	conservative	0.0.0.1	0.0.0.1.0	
# ::edge	explain-01	ARG0	date-entity	0.0.0	0.0.0.0	
# ::edge	explain-01	ARG1	promise-01	0.0.0	0.0	
# ::edge	land	mod	common	0.1.0.0	0.1.0.0.0	
# ::edge	land	quant	law	0.1.0.0	0.1.0	
# ::edge	wait-01	ARG0	law	0.1	0.1.0	
# ::edge	wait-01	ARG1	we	0.1	0.1.1	
# ::edge	wait-01	mod	still	0.1	0.1.2	
(c / contrast-01 
      :ARG1 (p / promise-01 
            :ARG1-of (e2 / explain-01 
                  :ARG0 (d / date-entity 
                        :year 1987) 
                  :ARG1-of (e / elect-01 
                        :ARG2 (c2 / conservative)))) 
      :ARG2 (w / wait-01 
            :ARG0 (l2 / law 
                  :quant-of (l / land 
                        :mod (c3 / common))) 
            :ARG1 (w2 / we) 
            :mod (s / still)))

# ::snt the patriarch escorted to the airport terminal by lebanese troops and the same syrian soldiers general aoun once promised to throw out of lebanon then drove to east beirut where he was expected to hold talks with the general
# ::tok the patriarch escorted to the airport terminal by lebanese troops and the same syrian soldiers general aoun once promised to throw out of lebanon then drove to east beirut where he was expected to hold talks with the general
# ::alignments 38-39|0.0.1.0 35-36|0.0.0 32-33|0.0.1 30-31|0.0 27-28|0.0.1.1.0 25-26|0.0.1.1 24-25|0.0.1.1.1 20-21|0.2 18-19|0 17-18|0.3 15-16|0.1 14-15|0.1.0 12-13|0.2.0 10-11|0.2.0.0.0 9-10|0.2.0.0 6-7|0.2.0.0.0.0.0 5-6|0.2.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:22.567
# ::node	0	promise-01	18-19
# ::node	0.0	he	30-31
# ::node	0.0.0	talk-01	35-36
# ::node	0.0.1	expect-01	32-33
# ::node	0.0.1.0	general	38-39
# ::node	0.0.1.1	drive-02	25-26
# ::node	0.0.1.1.0	east	27-28
# ::node	0.0.1.1.1	then	24-25
# ::node	0.1	general	15-16
# ::node	0.1.0	soldier	14-15
# ::node	0.2	throw-01	20-21
# ::node	0.2.0	same-41	12-13
# ::node	0.2.0.0	troop	9-10
# ::node	0.2.0.0.0	and	10-11
# ::node	0.2.0.0.0.0	airport	5-6
# ::node	0.2.0.0.0.0.0	terminal	6-7
# ::node	0.3	once	17-18
# ::root	0	promise-01
# ::edge	and	op1	airport	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	and	op2	troop	0.2.0.0.0	0.2.0.0	
# ::edge	drive-02	ARG1	east	0.0.1.1	0.0.1.1.0	
# ::edge	drive-02	condition	expect-01	0.0.1.1	0.0.1	
# ::edge	drive-02	time	then	0.0.1.1	0.0.1.1.1	
# ::edge	expect-01	ARG0	he	0.0.1	0.0	
# ::edge	expect-01	ARG1	general	0.0.1	0.0.1.0	
# ::edge	general	mod	soldier	0.1	0.1.0	
# ::edge	promise-01	ARG0	he	0	0.0	
# ::edge	promise-01	ARG1	general	0	0.1	
# ::edge	promise-01	ARG2	throw-01	0	0.2	
# ::edge	promise-01	time	once	0	0.3	
# ::edge	same-41	ARG2	troop	0.2.0	0.2.0.0	
# ::edge	talk-01	ARG0	he	0.0.0	0.0	
# ::edge	terminal	mod	airport	0.2.0.0.0.0.0	0.2.0.0.0.0	
# ::edge	throw-01	ARG1	same-41	0.2	0.2.0	
(p / promise-01 
      :ARG0 (h / he 
            :ARG0-of (t / talk-01) 
            :ARG0-of (e / expect-01 
                  :ARG1 (g / general) 
                  :condition-of (d / drive-02 
                        :ARG1 (e2 / east) 
                        :time (t2 / then)))) 
      :ARG1 (g2 / general 
            :mod (s / soldier)) 
      :ARG2 (t3 / throw-01 
            :ARG1 (s2 / same-41 
                  :ARG2 (t4 / troop 
                        :op-of (a / and 
                              :op1 (a2 / airport 
                                    :mod-of (t5 / terminal)))))) 
      :time (o / once))

# ::snt he promised labour cooperation with a bill paving the way for the line provided the scheme answered the environmental concerns of the south with a government grant and the strategic needs of the north
# ::tok he promised labour cooperation with a bill paving the way for the line provided the scheme answered the environmental concerns of the south with a government grant and the strategic needs of the north
# ::alignments 33-34|0.1.0.0.0 30-31|0.1.0.0 29-30|0.1.0.0.1 27-28|0.1.0 26-27|0.1.1.0 22-23|0.1.1 19-20|0.1 18-19|0.1.2 16-17|0 15-16|0.0 13-14|0.0.0 12-13|0.0.0.0.1.0 9-10|0.0.0.0.1 6-7|0.0.0.0.0.0.1 3-4|0.0.0.0 2-3|0.0.0.0.0.0.0 1-2|0.0.0.0.0.0 0-1|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:22.924
# ::node	0	answer-01	16-17
# ::node	0.0	scheme	15-16
# ::node	0.0.0	provide-01	13-14
# ::node	0.0.0.0	cooperate-01	3-4
# ::node	0.0.0.0.0	he	0-1
# ::node	0.0.0.0.0.0	promise-01	1-2
# ::node	0.0.0.0.0.0.0	labour	2-3
# ::node	0.0.0.0.0.0.1	bill	6-7
# ::node	0.0.0.0.1	way	9-10
# ::node	0.0.0.0.1.0	line	12-13
# ::node	0.1	concern-01	19-20
# ::node	0.1.0	and	27-28
# ::node	0.1.0.0	need-01	30-31
# ::node	0.1.0.0.0	north	33-34
# ::node	0.1.0.0.1	strategy	29-30
# ::node	0.1.1	south	22-23
# ::node	0.1.1.0	grant-01	26-27
# ::node	0.1.2	environment	18-19
# ::root	0	answer-01
# ::edge	and	op1	need-01	0.1.0	0.1.0.0	
# ::edge	answer-01	ARG0	scheme	0	0.0	
# ::edge	answer-01	ARG1	concern-01	0	0.1	
# ::edge	concern-01	ARG0	and	0.1	0.1.0	
# ::edge	concern-01	location	south	0.1	0.1.1	
# ::edge	concern-01	mod	environment	0.1	0.1.2	
# ::edge	cooperate-01	ARG0	he	0.0.0.0	0.0.0.0.0	
# ::edge	cooperate-01	ARG1	provide-01	0.0.0.0	0.0.0	
# ::edge	cooperate-01	ARG2	way	0.0.0.0	0.0.0.0.1	
# ::edge	grant-01	ARG1	south	0.1.1.0	0.1.1	
# ::edge	need-01	ARG1	north	0.1.0.0	0.1.0.0.0	
# ::edge	need-01	mod	strategy	0.1.0.0	0.1.0.0.1	
# ::edge	promise-01	ARG0	he	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	ARG1	labour	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	promise-01	ARG2	bill	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	provide-01	ARG1	scheme	0.0.0	0.0	
# ::edge	way	mod	line	0.0.0.0.1	0.0.0.0.1.0	
(a2 / answer-01 
      :ARG0 (s3 / scheme 
            :ARG1-of (p / provide-01 
                  :ARG1-of (c2 / cooperate-01 
                        :ARG0 (h / he 
                              :ARG0-of (p2 / promise-01 
                                    :ARG1 (l2 / labour) 
                                    :ARG2 (b / bill))) 
                        :ARG2 (w / way 
                              :mod (l / line))))) 
      :ARG1 (c / concern-01 
            :ARG0 (a / and 
                  :op1 (n2 / need-01 
                        :ARG1 (n / north) 
                        :mod (s / strategy))) 
            :location (s2 / south 
                  :ARG1-of (g / grant-01)) 
            :mod (e / environment)))

# ::snt although he promised to promote hungarys claims at this weekends economic summit in paris his support package for the country totalled 36
# ::tok although he promised to promote hungarys claims at this weekends economic summit in paris his support package for the country totalled 36
# ::alignments 21-22|0.0.0.0.1.0.0.0 19-20|0.0.0 16-17|0 15-16|0.0 11-12|0.0.0.0.0 10-11|0.0.0.0.0.0 9-10|0.0.0.0.0.1 8-9|0.0.0.0.0.2 6-7|0.0.0.0 4-5|0.0.0.0.1 2-3|0.0.0.0.1.0.0 1-2|0.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:23.049
# ::node	0	package	16-17
# ::node	0.0	support-01	15-16
# ::node	0.0.0	country	19-20
# ::node	0.0.0.0	claim-01	6-7
# ::node	0.0.0.0.0	summit	11-12
# ::node	0.0.0.0.0.0	economy	10-11
# ::node	0.0.0.0.0.1	weekend	9-10
# ::node	0.0.0.0.0.2	this	8-9
# ::node	0.0.0.0.1	promote-02	4-5
# ::node	0.0.0.0.1.0	he	1-2
# ::node	0.0.0.0.1.0.0	promise-01	2-3
# ::node	0.0.0.0.1.0.0.0	36	21-22
# ::root	0	package
(p / package 
      :ARG0-of (s / support-01 
            :ARG1 (c / country 
                  :ARG0-of (c2 / claim-01 
                        :ARG1 (s2 / summit 
                              :mod (e / economy) 
                              :mod (w / weekend) 
                              :mod (t / this)) 
                        :ARG1-of (p2 / promote-02 
                              :ARG0 (h / he 
                                    :ARG0-of (p3 / promise-01 
                                          :ARG1 36)))))))

# ::snt hed just promised them a house early in the new year
# ::tok hed just promised them a house early in the new year
# ::alignments 10-11|0.3 9-10|0.3.0 6-7|0.2 5-6|0.0 2-3|0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:23.073
# ::node	0	promise-01	2-3
# ::node	0.0	house	5-6
# ::node	0.1	just	1-2
# ::node	0.2	early	6-7
# ::node	0.3	year	10-11
# ::node	0.3.0	new	9-10
# ::root	0	promise-01
# ::edge	promise-01	ARG1	house	0	0.0	
# ::edge	promise-01	mod	just	0	0.1	
# ::edge	promise-01	time	early	0	0.2	
# ::edge	promise-01	time	year	0	0.3	
# ::edge	year	mod	new	0.3	0.3.0	
(p / promise-01 
      :ARG1 (h / house) 
      :mod (j / just) 
      :time (e / early) 
      :time (y / year 
            :mod (n / new)))

# ::snt he is thought to have promised to look at the situation of solicitors in rural areas which was concerning some mps
# ::tok he is thought to have promised to look at the situation of solicitors in rural areas which was concerning some mps
# ::alignments 19-20|0.0 18-19|0.1.1.0 15-16|0.1.1.0.0 14-15|0.1.1.0.0.0 10-11|0.1.1 5-6|0.1 2-3|0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:23.128
# ::node	0	think-01	2-3
# ::node	0.0	some	19-20
# ::node	0.1	promise-01	5-6
# ::node	0.1.0	he	0-1
# ::node	0.1.1	situation	10-11
# ::node	0.1.1.0	concern-02	18-19
# ::node	0.1.1.0.0	area	15-16
# ::node	0.1.1.0.0.0	rural	14-15
# ::root	0	think-01
# ::edge	area	mod	rural	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	concern-02	ARG0	area	0.1.1.0	0.1.1.0.0	
# ::edge	concern-02	ARG1	situation	0.1.1.0	0.1.1	
# ::edge	promise-01	ARG0	he	0.1	0.1.0	
# ::edge	promise-01	ARG1	situation	0.1	0.1.1	
# ::edge	think-01	ARG0	some	0	0.0	
# ::edge	think-01	ARG1	promise-01	0	0.1	
(t / think-01 
      :ARG0 (s / some) 
      :ARG1 (p / promise-01 
            :ARG0 (h / he) 
            :ARG1 (s2 / situation 
                  :ARG1-of (c / concern-02 
                        :ARG0 (a / area 
                              :mod (r / rural))))))

# ::snt while the pair promise an exhilarating hour and a half with costume changes rising into double figures and a deluge of dancing framed against jarmans cinematic responses to the songs it is their own reaction to the spectacle and the audience that may provide the most intriguing aspect of the shows
# ::tok while the pair promise an exhilarating hour and a half with costume changes rising into double figures and a deluge of dancing framed against jarmans cinematic responses to the songs it is their own reaction to the spectacle and the audience that may provide the most intriguing aspect of the shows
# ::alignments 50-51|0.0.1 47-48|0.0 46-47|0 45-46|0.1 43-44|0.0.0 42-43|0.0.0.1.0+0.0.0.1 40-41|0.0.0.0 38-39|0.0.0.0.0 37-38|0.0.0.0.0.1.1 34-35|0.0.0.0.0.1 30-31|0.0.0.0.0.1.0 29-30|0.0.0.0.0.0.0.2.0.1.0 26-27|0.0.0.0.0.0.0.2.0.1 25-26|0.0.0.0.0.0.0.2.0.1.2 22-23|0.0.0.0.0.0.0.2.0.1.1 17-18|0.0.0.0.0.0 16-17|0.0.0.0.0.0.0.1 15-16|0.0.0.0.0.0.0.1.0 13-14|0.0.0.0.0.0.0 12-13|0.0.0.0.0.0.0.0 11-12|0.0.0.0.0.0.0.0.0 9-10|0.0.0.0.0.0.0.2.0.0 7-8|0.0.0.0.0.0.0.2.0 6-7|0.0.0.0.0.0.0.2.1.0+0.0.0.0.0.0.0.2.1 3-4|0.0.0.0.0.0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:24.090
# ::node	0	intrigue-01	46-47
# ::node	0.0	aspect	47-48
# ::node	0.0.0	provide-01	43-44
# ::node	0.0.0.0	audience	40-41
# ::node	0.0.0.0.0	and	38-39
# ::node	0.0.0.0.0.0	and	17-18
# ::node	0.0.0.0.0.0.0	rise-01	13-14
# ::node	0.0.0.0.0.0.0.0	change-01	12-13
# ::node	0.0.0.0.0.0.0.0.0	costume-01	11-12
# ::node	0.0.0.0.0.0.0.1	figure	16-17
# ::node	0.0.0.0.0.0.0.1.0	double	15-16
# ::node	0.0.0.0.0.0.0.2	promise-01	3-4
# ::node	0.0.0.0.0.0.0.2.0	and	7-8
# ::node	0.0.0.0.0.0.0.2.0.0	half	9-10
# ::node	0.0.0.0.0.0.0.2.0.1	respond-01	26-27
# ::node	0.0.0.0.0.0.0.2.0.1.0	song	29-30
# ::node	0.0.0.0.0.0.0.2.0.1.1	frame-06	22-23
# ::node	0.0.0.0.0.0.0.2.0.1.2	cinema	25-26
# ::node	0.0.0.0.0.0.0.2.1	temporal-quantity	6-7
# ::node	0.0.0.0.0.0.0.2.1.0	hour	6-7
# ::node	0.0.0.0.0.1	react-01	34-35
# ::node	0.0.0.0.0.1.0	it	30-31
# ::node	0.0.0.0.0.1.1	spectacle	37-38
# ::node	0.0.0.1	date-entity	42-43
# ::node	0.0.0.1.0	5	42-43
# ::node	0.0.1	show-01	50-51
# ::node	0.1	most	45-46
# ::root	0	intrigue-01
# ::edge	and	op1	audience	0.0.0.0.0	0.0.0.0	
# ::edge	and	op1	half	0.0.0.0.0.0.0.2.0	0.0.0.0.0.0.0.2.0.0	
# ::edge	and	op1	rise-01	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	and	op2	and	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	and	op2	respond-01	0.0.0.0.0.0.0.2.0	0.0.0.0.0.0.0.2.0.1	
# ::edge	aspect	domain	show-01	0.0	0.0.1	
# ::edge	costume-01	ARG1	change-01	0.0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	date-entity	month	5	0.0.0.1	0.0.0.1.0	
# ::edge	figure	mod	double	0.0.0.0.0.0.0.1	0.0.0.0.0.0.0.1.0	
# ::edge	frame-06	ARG1	respond-01	0.0.0.0.0.0.0.2.0.1.1	0.0.0.0.0.0.0.2.0.1	
# ::edge	intrigue-01	ARG1	aspect	0	0.0	
# ::edge	intrigue-01	degree	most	0	0.1	
# ::edge	promise-01	ARG1	and	0.0.0.0.0.0.0.2	0.0.0.0.0.0.0.2.0	
# ::edge	promise-01	ARG2	temporal-quantity	0.0.0.0.0.0.0.2	0.0.0.0.0.0.0.2.1	
# ::edge	promise-01	time	rise-01	0.0.0.0.0.0.0.2	0.0.0.0.0.0.0	
# ::edge	provide-01	ARG0	audience	0.0.0	0.0.0.0	
# ::edge	provide-01	ARG1	aspect	0.0.0	0.0	
# ::edge	provide-01	mod	date-entity	0.0.0	0.0.0.1	
# ::edge	react-01	ARG0	it	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	react-01	ARG1	spectacle	0.0.0.0.0.1	0.0.0.0.0.1.1	
# ::edge	react-01	prep-to	and	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	respond-01	ARG1	song	0.0.0.0.0.0.0.2.0.1	0.0.0.0.0.0.0.2.0.1.0	
# ::edge	respond-01	manner	cinema	0.0.0.0.0.0.0.2.0.1	0.0.0.0.0.0.0.2.0.1.2	
# ::edge	rise-01	ARG1	change-01	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	rise-01	location	figure	0.0.0.0.0.0.0	0.0.0.0.0.0.0.1	
# ::edge	temporal-quantity	unit	hour	0.0.0.0.0.0.0.2.1	0.0.0.0.0.0.0.2.1.0	
(i / intrigue-01 
      :ARG1 (a / aspect 
            :ARG1-of (p / provide-01 
                  :ARG0 (a2 / audience 
                        :op-of (a3 / and 
                              :op-of (a4 / and 
                                    :op1 (r3 / rise-01 
                                          :ARG1 (c2 / change-01 
                                                :ARG1-of (c3 / costume-01)) 
                                          :location (f2 / figure 
                                                :mod (d2 / double)) 
                                          :time-of (p2 / promise-01 
                                                :ARG1 (a5 / and 
                                                      :op1 (h / half) 
                                                      :op2 (r2 / respond-01 
                                                            :ARG1 (s3 / song) 
                                                            :ARG1-of (f / frame-06) 
                                                            :manner (c / cinema))) 
                                                :ARG2 (t / temporal-quantity 
                                                      :unit (h2 / hour))))) 
                              :prep-to-of (r / react-01 
                                    :ARG0 (i2 / it) 
                                    :ARG1 (s2 / spectacle)))) 
                  :mod (d / date-entity 
                        :month 5)) 
            :domain (s / show-01)) 
      :degree (m / most))

# ::snt his hope was to push that moment off as long as possible to maintain a suffering silence which the face promised was deep and awful, this promise is what attracted me to len and the attraction ended the moment i penetrated the sad little secret
# ::tok his hope was to push that moment off as long as possible to maintain a suffering silence which the face promised was deep and awful , this promise is what attracted me to len and the attraction ended the moment i penetrated the sad little secret
# ::alignments 45-46|0.0 44-45|0.0.1 43-44|0 41-42|0.0.0 40-41|0.0.0.0 39-40|0.0.0.0.1 37-38|0.0.0.0.0 36-37|0.0.0.0.0.1 34-35|0.0.0.0.0.2 30-31|0.0.0.0.0.2.0 27-28|0.0.0.0.0.2.0.0 26-27|0.0.0.0.0.2.0.0.0 24-25|0.0.0.0.0.0.1.2 23-24|0.0.0.0.0.0.1 22-23|0.0.0.0.0.0.1.1 20-21|0.0.0.0.0.0.1.0 19-20|0.0.0.0.0.0.1.0.0 16-17|0.0.0.0.0.0.1.0.1 15-16|0.0.0.0.0.0.1.0.1.0 13-14|0.0.0.0.0.0.1.0.1.1 11-12|0.0.0.0.0.0.1.0.1.1.0 7-8|0.0.0.0.0.0.0.1 6-7|0.0.0.0.0.0.0.0 4-5|0.0.0.0.0.0.0 1-2|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:24.904
# ::node	0	sad	43-44
# ::node	0.0	secret	45-46
# ::node	0.0.0	penetrate-01	41-42
# ::node	0.0.0.0	i	40-41
# ::node	0.0.0.0.0	end-01	37-38
# ::node	0.0.0.0.0.0	hope-01	1-2
# ::node	0.0.0.0.0.0.0	push-02	4-5
# ::node	0.0.0.0.0.0.0.0	moment	6-7
# ::node	0.0.0.0.0.0.0.1	off	7-8
# ::node	0.0.0.0.0.0.1	and	23-24
# ::node	0.0.0.0.0.0.1.0	promise-01	20-21
# ::node	0.0.0.0.0.0.1.0.0	face-01	19-20
# ::node	0.0.0.0.0.0.1.0.1	silence-01	16-17
# ::node	0.0.0.0.0.0.1.0.1.0	suffer-01	15-16
# ::node	0.0.0.0.0.0.1.0.1.1	maintain-01	13-14
# ::node	0.0.0.0.0.0.1.0.1.1.0	possible	11-12
# ::node	0.0.0.0.0.0.1.1	deep	22-23
# ::node	0.0.0.0.0.0.1.2	awful	24-25
# ::node	0.0.0.0.0.1	attract-01	36-37
# ::node	0.0.0.0.0.2	and	34-35
# ::node	0.0.0.0.0.2.0	attract-01	30-31
# ::node	0.0.0.0.0.2.0.0	promise-01	27-28
# ::node	0.0.0.0.0.2.0.0.0	this	26-27
# ::node	0.0.0.0.1	moment	39-40
# ::node	0.0.1	little	44-45
# ::root	0	sad
(s2 / sad 
      :mod-of (s / secret 
            :ARG1-of (p / penetrate-01 
                  :ARG0 (i / i 
                        :ARG1-of (e / end-01 
                              :ARG0 (h / hope-01 
                                    :ARG0-of (p5 / push-02 
                                          :ARG1 (m3 / moment) 
                                          :ARG3 (o / off)) 
                                    :ARG1 (a5 / and 
                                          :op1 (p3 / promise-01 
                                                :ARG0 (f / face-01) 
                                                :ARG1 (s3 / silence-01 
                                                      :ARG0-of (s4 / suffer-01) 
                                                      :ARG1-of (m2 / maintain-01 
                                                            :domain-of (p4 / possible)))) 
                                          :op2 (d / deep) 
                                          :op3 (a4 / awful))) 
                              :ARG2 (a / attract-01) 
                              :op-of (a2 / and 
                                    :op1 (a3 / attract-01 
                                          :ARG1 (p2 / promise-01 
                                                :mod (t / this))))) 
                        :poss-of (m / moment))) 
            :degree (l / little)))

# ::snt earlier mr taylor had announced the formation of a new government with himself at its head and promised to capture mr doe and put him on trial
# ::tok earlier mr taylor had announced the formation of a new government with himself at its head and promised to capture mr doe and put him on trial
# ::alignments 26-27|0.2.0.2.0 22-23|0.2.0.1 19-20|0.2.0.2 17-18|0.2.0 16-17|0.2 15-16|0.2.0.0 9-10|0.2.0.0.0 6-7|0.1 4-5|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:25.018
# ::node	0	announce-01	4-5
# ::node	0.0	early	0-1
# ::node	0.1	form-01	6-7
# ::node	0.2	and	16-17
# ::node	0.2.0	promise-01	17-18
# ::node	0.2.0.0	head-01	15-16
# ::node	0.2.0.0.0	new	9-10
# ::node	0.2.0.1	and	22-23
# ::node	0.2.0.2	capture-01	19-20
# ::node	0.2.0.2.0	trial	26-27
# ::root	0	announce-01
# ::edge	and	op1	announce-01	0.2	0	
# ::edge	and	op2	promise-01	0.2	0.2.0	
# ::edge	announce-01	ARG0	early	0	0.0	
# ::edge	announce-01	ARG1	form-01	0	0.1	
# ::edge	capture-01	ARG1	trial	0.2.0.2	0.2.0.2.0	
# ::edge	head-01	ARG1	new	0.2.0.0	0.2.0.0.0	
# ::edge	promise-01	ARG0	head-01	0.2.0	0.2.0.0	
# ::edge	promise-01	ARG1	and	0.2.0	0.2.0.1	
# ::edge	promise-01	ARG2	capture-01	0.2.0	0.2.0.2	
(a3 / announce-01 
      :ARG0 (e / early) 
      :ARG1 (f / form-01) 
      :op-of (a2 / and 
            :op1 (p / promise-01 
                  :ARG0 (h / head-01 
                        :ARG1 (n / new)) 
                  :ARG1 (a / and) 
                  :ARG2 (c / capture-01 
                        :ARG1 (t / trial)))))

# ::snt i promise not to look or phone the police
# ::tok i promise not to look or phone the police
# ::alignments 8-9|0.1.0.0 6-7|0.1.0 5-6|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:25.032
# ::node	0	promise-01	1-2
# ::node	0.0	i	0-1
# ::node	0.1	or	5-6
# ::node	0.1.0	phone	6-7
# ::node	0.1.0.0	police	8-9
# ::root	0	promise-01
# ::edge	or	op1	phone	0.1	0.1.0	
# ::edge	phone	mod	police	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG0	i	0	0.0	
# ::edge	promise-01	ARG1	or	0	0.1	
(p3 / promise-01 
      :ARG0 (i / i) 
      :ARG1 (o / or 
            :op1 (p2 / phone 
                  :mod (p / police))))

# ::snt the analogy with promising can serve here as well
# ::tok the analogy with promising can serve here as well
# ::alignments 8-9|0.0.2 6-7|0.0.1 5-6|0.0 4-5|0 3-4|0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:25.046
# ::node	0	possible	4-5
# ::node	0.0	serve-01	5-6
# ::node	0.0.0	promise-01	3-4
# ::node	0.0.0.0	analogy	1-2
# ::node	0.0.1	here	6-7
# ::node	0.0.2	well	8-9
# ::root	0	possible
# ::edge	possible	domain	serve-01	0	0.0	
# ::edge	promise-01	ARG0	analogy	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	serve-01	0.0.0	0.0	
# ::edge	serve-01	location	here	0.0	0.0.1	
# ::edge	serve-01	mod	well	0.0	0.0.2	
(p / possible 
      :domain (s / serve-01 
            :ARG1-of (p2 / promise-01 
                  :ARG0 (a / analogy)) 
            :location (h / here) 
            :mod (w / well)))

# ::snt youve to promise to look after them and let me have them back when i come up next
# ::tok youve to promise to look after them and let me have them back when i come up next
# ::alignments 17-18|0.0.0 14-15|0.1.0 12-13|0.1.1 8-9|0.1 7-8|0 5-6|0.0.1 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:25.094
# ::node	0	and	7-8
# ::node	0.0	promise-01	2-3
# ::node	0.0.0	next	17-18
# ::node	0.0.1	after	5-6
# ::node	0.1	let-01	8-9
# ::node	0.1.0	i	14-15
# ::node	0.1.1	back	12-13
# ::root	0	and
# ::edge	and	op1	promise-01	0	0.0	
# ::edge	and	op2	let-01	0	0.1	
# ::edge	let-01	ARG0	i	0.1	0.1.0	
# ::edge	let-01	ARG1	back	0.1	0.1.1	
# ::edge	promise-01	ARG0	next	0.0	0.0.0	
# ::edge	promise-01	ARG1	after	0.0	0.0.1	
(a / and 
      :op1 (p / promise-01 
            :ARG0 (n / next) 
            :ARG1 (a2 / after)) 
      :op2 (l / let-01 
            :ARG0 (i / i) 
            :ARG1 (b / back)))

# ::snt she promised to hide in the cellar
# ::tok she promised to hide in the cellar
# ::alignments 3-4|0.0 1-2|0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:25.100
# ::node	0	promise-01	1-2
# ::node	0.0	hide-01	3-4
# ::node	0.0.0	she	0-1
# ::root	0	promise-01
# ::edge	hide-01	ARG0	she	0.0	0.0.0	
# ::edge	promise-01	ARG2	hide-01	0	0.0	
(p / promise-01 
      :ARG2 (h / hide-01 
            :ARG0 (s / she)))

# ::snt leo july 24aug 23 why not take a leaf out of a buddys book and adopt a more speculative approach to your future financial strategies  youll be encouraged and enthused by a pals plans for making money and therell rarely be a better time for chancing your luck and investing in a scheme that promises rich pickings
# ::tok leo july 24aug 23 why not take a leaf out of a buddys book and adopt a more speculative approach to your future financial strategies youll be encouraged and enthused by a pals plans for making money and therell rarely be a better time for chancing your luck and investing in a scheme that promises rich pickings
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:25.102
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the chief architects of wellingtons win on wednesday the loose forward mike kuiti and scrumhalf geoffrey tangira play in a maori side that promises a tough game which a week before the second test is what britain need and want
# ::tok the chief architects of wellingtons win on wednesday the loose forward mike kuiti and scrumhalf geoffrey tangira play in a maori side that promises a tough game which a week before the second test is what britain need and want
# ::alignments 39-40|0.0 38-39|0 37-38|0.0.0.0 36-37|0.0.0.1.0+0.0.0.1+0.0.0 33-34|0.0.0.0.0 30-31|0.0.0.0.0.1 29-30|0.0.1 26-27|0.1 25-26|0.1.2 23-24|0.1.1 21-22|0.1.1.0 17-18|0.1.1.0.0 13-14|0.1.1.0.0.0 10-11|0.0.0.0.0.0 9-10|0.1.0 5-6|0.1.1.0.0.1 1-2|0.1.1.1.0+0.1.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:25.556
# ::node	0	and	38-39
# ::node	0.0	want-01	39-40
# ::node	0.0.0	country	36-37
# ::node	0.0.0.0	need-01	37-38
# ::node	0.0.0.0.0	test-01	33-34
# ::node	0.0.0.0.0.0	forward	10-11
# ::node	0.0.0.0.0.1	before	30-31
# ::node	0.0.0.1	name	36-37
# ::node	0.0.0.1.0	"Britain"	36-37
# ::node	0.0.1	week	29-30
# ::node	0.1	game	26-27
# ::node	0.1.0	loose-01	9-10
# ::node	0.1.1	promise-01	23-24
# ::node	0.1.1.0	side	21-22
# ::node	0.1.1.0.0	play-01	17-18
# ::node	0.1.1.0.0.0	and	13-14
# ::node	0.1.1.0.0.1	win-01	5-6
# ::node	0.1.1.1	have-org-role-91	1-2
# ::node	0.1.1.1.0	chief	1-2
# ::node	0.1.2	tough	25-26
# ::root	0	and
# ::edge	and	op1	want-01	0	0.0	
# ::edge	before	op1	test-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	country	name	name	0.0.0	0.0.0.1	
# ::edge	game	mod	tough	0.1	0.1.2	
# ::edge	game	purpose	and	0.1	0	
# ::edge	have-org-role-91	ARG1	promise-01	0.1.1.1	0.1.1	
# ::edge	have-org-role-91	ARG2	chief	0.1.1.1	0.1.1.1.0	
# ::edge	loose-01	ARG1	game	0.1.0	0.1	
# ::edge	name	op1	"Britain"	0.0.0.1	0.0.0.1.0	
# ::edge	need-01	ARG0	country	0.0.0.0	0.0.0	
# ::edge	need-01	ARG1	test-01	0.0.0.0	0.0.0.0.0	
# ::edge	play-01	ARG0	and	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	play-01	ARG1	side	0.1.1.0.0	0.1.1.0	
# ::edge	promise-01	ARG0	side	0.1.1	0.1.1.0	
# ::edge	promise-01	ARG1	game	0.1.1	0.1	
# ::edge	test-01	ARG1	forward	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	want-01	ARG0	country	0.0	0.0.0	
# ::edge	want-01	ARG1	week	0.0	0.0.1	
# ::edge	win-01	ARG1	play-01	0.1.1.0.0.1	0.1.1.0.0	
(a / and 
      :op1 (w / want-01 
            :ARG0 (c / country 
                  :ARG0-of (n / need-01 
                        :ARG1 (t / test-01 
                              :ARG1 (f / forward) 
                              :op-of (b / before))) 
                  :name (n2 / name 
                        :op1 "Britain")) 
            :ARG1 (w2 / week)) 
      :purpose-of (g / game 
            :ARG1-of (l / loose-01) 
            :ARG1-of (p / promise-01 
                  :ARG0 (s / side 
                        :ARG1-of (p2 / play-01 
                              :ARG0 (a2 / and) 
                              :ARG1-of (w3 / win-01))) 
                  :ARG1-of (h / have-org-role-91 
                        :ARG2 (c2 / chief))) 
            :mod (t2 / tough)))

# ::snt mr field last night promised to stand by the result of a second selection contest rather than resign and force a byelection
# ::tok mr field last night promised to stand by the result of a second selection contest rather than resign and force a byelection
# ::alignments 19-20|0.0.0.0.0 18-19|0.0.0.0 17-18|0.0.0 14-15|0.1.0 13-14|0.1.0.0 9-10|0.1 4-5|0 3-4|0.2 2-3|0.2.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:25.637
# ::node	0	promise-01	4-5
# ::node	0.0	field	1-2
# ::node	0.0.0	resign-01	17-18
# ::node	0.0.0.0	and	18-19
# ::node	0.0.0.0.0	force	19-20
# ::node	0.1	result-01	9-10
# ::node	0.1.0	contest-00	14-15
# ::node	0.1.0.0	select-01	13-14
# ::node	0.2	night	3-4
# ::node	0.2.0	last	2-3
# ::root	0	promise-01
# ::edge	and	op1	resign-01	0.0.0.0	0.0.0	
# ::edge	and	op2	force	0.0.0.0	0.0.0.0.0	
# ::edge	contest-00	ARG1	select-01	0.1.0	0.1.0.0	
# ::edge	night	mod	last	0.2	0.2.0	
# ::edge	promise-01	ARG0	field	0	0.0	
# ::edge	promise-01	ARG1	result-01	0	0.1	
# ::edge	promise-01	time	night	0	0.2	
# ::edge	resign-01	ARG0	field	0.0.0	0.0	
# ::edge	result-01	ARG1	contest-00	0.1	0.1.0	
(p / promise-01 
      :ARG0 (f2 / field 
            :ARG0-of (r / resign-01 
                  :op-of (a / and 
                        :op1 (f / force)))) 
      :ARG1 (r2 / result-01 
            :ARG1 (c / contest-00 
                  :ARG1 (s / select-01))) 
      :time (n / night 
            :mod (l / last)))

# ::snt where milton promises his lycidas a joyous immortality with all kinds of saintly company kleins poet can barely achieve an evanescent lonely glow at the bottom of the sea
# ::tok where milton promises his lycidas a joyous immortality with all kinds of saintly company kleins poet can barely achieve an evanescent lonely glow at the bottom of the sea
# ::alignments 28-29|0.1.0 25-26|0.1 22-23|0 18-19|0.2 17-18|0.2.2 16-17|0.2.1 15-16|0.2.0 13-14|0.0.0.0 10-11|0.0 9-10|0.0.1 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:25.847
# ::node	0	glow-01	22-23
# ::node	0.0	kind	10-11
# ::node	0.0.0	promise-01	2-3
# ::node	0.0.0.0	company	13-14
# ::node	0.0.1	all	9-10
# ::node	0.1	bottom	25-26
# ::node	0.1.0	sea	28-29
# ::node	0.2	achieve-01	18-19
# ::node	0.2.0	poet	15-16
# ::node	0.2.1	possible	16-17
# ::node	0.2.2	barely	17-18
# ::root	0	glow-01
# ::edge	achieve-01	ARG0	poet	0.2	0.2.0	
# ::edge	achieve-01	ARG1	glow-01	0.2	0	
# ::edge	achieve-01	mod	barely	0.2	0.2.2	
# ::edge	bottom	location	sea	0.1	0.1.0	
# ::edge	glow-01	ARG0	kind	0	0.0	
# ::edge	glow-01	ARG1	bottom	0	0.1	
# ::edge	kind	quant	all	0.0	0.0.1	
# ::edge	possible	domain	achieve-01	0.2.1	0.2	
# ::edge	promise-01	ARG0	company	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	kind	0.0.0	0.0	
(g / glow-01 
      :ARG0 (k / kind 
            :ARG1-of (p3 / promise-01 
                  :ARG0 (c / company)) 
            :quant (a2 / all)) 
      :ARG1 (b / bottom 
            :location (s / sea)) 
      :ARG1-of (a / achieve-01 
            :ARG0 (p2 / poet) 
            :domain-of (p / possible) 
            :mod (b2 / barely)))

# ::snt clips of his greatest hits various filmed interviews and the odd surprise guest are promised followed by both taking questions from the floor
# ::tok clips of his greatest hits various filmed interviews and the odd surprise guest are promised followed by both taking questions from the floor
# ::alignments 22-23|0.1 19-20|0 17-18|0.0 15-16|0.2.1.1 14-15|0.2.1.1.0 12-13|0.2.0.0 11-12|0.2.0.0.0 10-11|0.2.0.0.1 8-9|0.2.1 7-8|0.2 5-6|0.2.1.0 4-5|0.2.0 3-4|0.2.0.1.0+0.2.0.1 0-1|0.2.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:25.935
# ::node	0	question-01	19-20
# ::node	0.0	both	17-18
# ::node	0.1	floor	22-23
# ::node	0.2	interview-01	7-8
# ::node	0.2.0	hit-01	4-5
# ::node	0.2.0.0	guest	12-13
# ::node	0.2.0.0.0	surprise-01	11-12
# ::node	0.2.0.0.1	odd	10-11
# ::node	0.2.0.1	great	3-4
# ::node	0.2.0.1.0	most	3-4
# ::node	0.2.1	and	8-9
# ::node	0.2.1.0	various	5-6
# ::node	0.2.1.1	follow-01	15-16
# ::node	0.2.1.1.0	promise-01	14-15
# ::node	0.2.1.1.0.0	clip	0-1
# ::root	0	question-01
# ::edge	and	mod	various	0.2.1	0.2.1.0	
# ::edge	and	op1	interview-01	0.2.1	0.2	
# ::edge	and	op2	follow-01	0.2.1	0.2.1.1	
# ::edge	follow-01	ARG1	promise-01	0.2.1.1	0.2.1.1.0	
# ::edge	great	degree	most	0.2.0.1	0.2.0.1.0	
# ::edge	guest	mod	odd	0.2.0.0	0.2.0.0.1	
# ::edge	hit-01	ARG0	interview-01	0.2.0	0.2	
# ::edge	hit-01	ARG1	guest	0.2.0	0.2.0.0	
# ::edge	hit-01	ARG2	great	0.2.0	0.2.0.1	
# ::edge	interview-01	ARG1	question-01	0.2	0	
# ::edge	promise-01	ARG1	clip	0.2.1.1.0	0.2.1.1.0.0	
# ::edge	question-01	ARG0	both	0	0.0	
# ::edge	question-01	ARG1	floor	0	0.1	
# ::edge	surprise-01	ARG0	guest	0.2.0.0.0	0.2.0.0	
(q / question-01 
      :ARG0 (b / both) 
      :ARG1 (f / floor) 
      :ARG1-of (i / interview-01 
            :ARG0-of (h / hit-01 
                  :ARG1 (g / guest 
                        :ARG0-of (s / surprise-01) 
                        :mod (o / odd)) 
                  :ARG2 (g2 / great 
                        :degree (m / most))) 
            :op-of (a / and 
                  :mod (v / various) 
                  :op1 (f2 / follow-01 
                        :ARG1 (p / promise-01 
                              :ARG1 (c / clip))))))

# ::snt we will cosset you with fluffy towelling bathrobes fresh flowers a glossy magazine and a chilled bottle of champagne with breakfast promises the brochure
# ::tok we will cosset you with fluffy towelling bathrobes fresh flowers a glossy magazine and a chilled bottle of champagne with breakfast promises the brochure
# ::alignments 21-22|0.2.1.0 18-19|0.2.1 16-17|0.2 15-16|0.2.0 13-14|0 12-13|0.1 11-12|0.1.0 9-10|0.0 8-9|0.0.0 3-4|0.2.0.0 0-1|0.2.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:26.041
# ::node	0	and	13-14
# ::node	0.0	flower	9-10
# ::node	0.0.0	fresh	8-9
# ::node	0.1	magazine	12-13
# ::node	0.1.0	glossy	11-12
# ::node	0.2	bottle	16-17
# ::node	0.2.0	chill-01	15-16
# ::node	0.2.0.0	you	3-4
# ::node	0.2.1	champagne	18-19
# ::node	0.2.1.0	promise-01	21-22
# ::node	0.2.1.0.0	we	0-1
# ::root	0	and
# ::edge	and	op1	flower	0	0.0	
# ::edge	and	op2	magazine	0	0.1	
# ::edge	and	op3	bottle	0	0.2	
# ::edge	champagne	quant	bottle	0.2.1	0.2	
# ::edge	chill-01	ARG0	you	0.2.0	0.2.0.0	
# ::edge	chill-01	ARG1	bottle	0.2.0	0.2	
# ::edge	flower	mod	fresh	0.0	0.0.0	
# ::edge	magazine	mod	glossy	0.1	0.1.0	
# ::edge	promise-01	ARG0	champagne	0.2.1.0	0.2.1	
# ::edge	promise-01	ARG1	we	0.2.1.0	0.2.1.0.0	
(a / and 
      :op1 (f / flower 
            :mod (f2 / fresh)) 
      :op2 (m / magazine 
            :mod (g / glossy)) 
      :op3 (b / bottle 
            :ARG1-of (c2 / chill-01 
                  :ARG0 (y / you)) 
            :quant-of (c / champagne 
                  :ARG0-of (p / promise-01 
                        :ARG1 (w / we)))))

# ::snt by promising that palestine should become a national home for the jews
# ::tok by promising that palestine should become a national home for the jews
# ::alignments 11-12|0.0.0.0.0.0+0.0.0.0.0+0.0.0.0 8-9|0.0.0 7-8|0.0.0.1 5-6|0.0 4-5|0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:26.081
# ::node	0	recommend-01	4-5
# ::node	0.0	become-01	5-6
# ::node	0.0.0	home	8-9
# ::node	0.0.0.0	ethnic-group	11-12
# ::node	0.0.0.0.0	name	11-12
# ::node	0.0.0.0.0.0	"Jew"	11-12
# ::node	0.0.0.1	nation	7-8
# ::node	0.1	promise-01	1-2
# ::root	0	recommend-01
# ::edge	become-01	ARG2	home	0.0	0.0.0	
# ::edge	ethnic-group	name	name	0.0.0.0	0.0.0.0.0	
# ::edge	home	location	ethnic-group	0.0.0	0.0.0.0	
# ::edge	home	mod	nation	0.0.0	0.0.0.1	
# ::edge	name	op1	"Jew"	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	promise-01	ARG1	recommend-01	0.1	0	
# ::edge	recommend-01	ARG1	become-01	0	0.0	
(r / recommend-01 
      :ARG1 (b / become-01 
            :ARG2 (h / home 
                  :location (e / ethnic-group 
                        :name (n / name 
                              :op1 "Jew")) 
                  :mod (n2 / nation))) 
      :ARG1-of (p / promise-01))

# ::snt   rain laughed with her promising her it was going to be far more like the boring doorstepping that journalists indulged in than like any thriller pat had ever read
# ::tok rain laughed with her promising her it was going to be far more like the boring doorstepping that journalists indulged in than like any thriller pat had ever read
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:26.081
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the british government did not underwrite the french claim to alsace and lorraine until october 1917 and the secret treaties except for the treaty of london which promised unconditionally what italy will receive  were attempts to avoid conflict between the allies after victory not definitions of the objects for which the war was being fought
# ::tok the british government did not underwrite the french claim to alsace and lorraine until october 1917 and the secret treaties except for the treaty of london which promised unconditionally what italy will receive were attempts to avoid conflict between the allies after victory not definitions of the objects for which the war was being fought
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:26.084
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt in their introductory verses berlin and his contemporaries always promised to teach you the new dance sensation but ended up just enthusing over it
# ::tok in their introductory verses berlin and his contemporaries always promised to teach you the new dance sensation but ended up just enthusing over it
# ::alignments 23-24|0.0.0.0 20-21|0.1.1 18-19|0.1 17-18|0 16-17|0.0.0.1 15-16|0.0.0.1.0 14-15|0.0.0.1.1 12-13|0.0.0.2 11-12|0.0.0 9-10|0.0 8-9|0.0.1 5-6|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:26.179
# ::node	0	contrast-01	17-18
# ::node	0.0	promise-01	9-10
# ::node	0.0.0	teach-01	11-12
# ::node	0.0.0.0	it	23-24
# ::node	0.0.0.1	sensation	16-17
# ::node	0.0.0.1.0	dance-01	15-16
# ::node	0.0.0.1.1	new	14-15
# ::node	0.0.0.2	you	12-13
# ::node	0.0.1	always	8-9
# ::node	0.1	end-01	18-19
# ::node	0.1.0	and	5-6
# ::node	0.1.1	just	20-21
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	promise-01	0	0.0	
# ::edge	contrast-01	ARG2	end-01	0	0.1	
# ::edge	end-01	ARG1	and	0.1	0.1.0	
# ::edge	end-01	mod	just	0.1	0.1.1	
# ::edge	promise-01	ARG2	teach-01	0.0	0.0.0	
# ::edge	promise-01	time	always	0.0	0.0.1	
# ::edge	sensation	mod	dance-01	0.0.0.1	0.0.0.1.0	
# ::edge	sensation	mod	new	0.0.0.1	0.0.0.1.1	
# ::edge	teach-01	ARG0	it	0.0.0	0.0.0.0	
# ::edge	teach-01	ARG1	sensation	0.0.0	0.0.0.1	
# ::edge	teach-01	ARG2	you	0.0.0	0.0.0.2	
(c / contrast-01 
      :ARG1 (p / promise-01 
            :ARG2 (t / teach-01 
                  :ARG0 (i / it) 
                  :ARG1 (s / sensation 
                        :mod (d / dance-01) 
                        :mod (n / new)) 
                  :ARG2 (y / you)) 
            :time (a / always)) 
      :ARG2 (e / end-01 
            :ARG1 (a2 / and) 
            :mod (j / just)))

# ::snt at the same time the americans would move forward in the pacific and the british promised to undertake an offensive in burma also dash
# ::tok at the same time the americans would move forward in the pacific and the british promised to undertake an offensive in burma also dash
# ::alignments 22-23|0.0.1.2.0 19-20|0 17-18|0.0 15-16|0.0.1 12-13|0.0.1.0 8-9|0.0.0 5-6|0.0.1.1.0.0.0+0.0.1.1.0.0+0.0.1.1.0+0.0.1.1 3-4|0.0.1.2.1 2-3|0.0.1.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:26.304
# ::node	0	offensive	19-20
# ::node	0.0	undertake-01	17-18
# ::node	0.0.0	forward	8-9
# ::node	0.0.1	promise-01	15-16
# ::node	0.0.1.0	and	12-13
# ::node	0.0.1.1	person	5-6
# ::node	0.0.1.1.0	country	5-6
# ::node	0.0.1.1.0.0	name	5-6
# ::node	0.0.1.1.0.0.0	"America"	5-6
# ::node	0.0.1.2	same-41	2-3
# ::node	0.0.1.2.0	also	22-23
# ::node	0.0.1.2.1	time	3-4
# ::root	0	offensive
(o / offensive 
      :ARG1-of (u / undertake-01 
            :ARG0 (f / forward) 
            :ARG2-of (p / promise-01 
                  :ARG0 (a2 / and) 
                  :ARG1 (p2 / person 
                        :mod (c / country 
                              :name (n / name 
                                    :op1 "America"))) 
                  :ARG2-of (s / same-41 
                        :ARG0 (a / also) 
                        :ARG1 (t / time)))))

# ::snt the basic law will still be enacted promising a panoply of rights and freedoms for 50 years beyond 1997
# ::tok the basic law will still be enacted promising a panoply of rights and freedoms for 50 years beyond 1997
# ::alignments 18-19|0.2.0.0+0.2.0 17-18|0.2 16-17|0.0.1.1.0.1+0.0.1.1.0 15-16|0.0.1.1.0.0 13-14|0.0.1.1 12-13|0.0.1 11-12|0.0.1.0 7-8|0.0 6-7|0 4-5|0.1 2-3|0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:26.749
# ::node	0	enact-01	6-7
# ::node	0.0	promise-01	7-8
# ::node	0.0.0	law	2-3
# ::node	0.0.0.0	basic	1-2
# ::node	0.0.1	and	12-13
# ::node	0.0.1.0	right	11-12
# ::node	0.0.1.1	free-41	13-14
# ::node	0.0.1.1.0	temporal-quantity	16-17
# ::node	0.0.1.1.0.0	50	15-16
# ::node	0.0.1.1.0.1	year	16-17
# ::node	0.1	still	4-5
# ::node	0.2	beyond	17-18
# ::node	0.2.0	date-entity	18-19
# ::node	0.2.0.0	1997	18-19
# ::root	0	enact-01
# ::edge	and	op1	right	0.0.1	0.0.1.0	
# ::edge	and	op2	free-41	0.0.1	0.0.1.1	
# ::edge	beyond	op1	date-entity	0.2	0.2.0	
# ::edge	date-entity	year	1997	0.2.0	0.2.0.0	
# ::edge	enact-01	ARG1	promise-01	0	0.0	
# ::edge	enact-01	mod	still	0	0.1	
# ::edge	enact-01	time	beyond	0	0.2	
# ::edge	free-41	duration	temporal-quantity	0.0.1.1	0.0.1.1.0	
# ::edge	law	mod	basic	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG0	law	0.0	0.0.0	
# ::edge	promise-01	ARG1	and	0.0	0.0.1	
# ::edge	temporal-quantity	quant	50	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	temporal-quantity	unit	year	0.0.1.1.0	0.0.1.1.0.1	
(e / enact-01 
      :ARG1 (p / promise-01 
            :ARG0 (l / law 
                  :mod (b2 / basic)) 
            :ARG1 (a / and 
                  :op1 (r / right) 
                  :op2 (f / free-41 
                        :duration (t / temporal-quantity 
                              :quant 50 
                              :unit (y / year))))) 
      :mod (s / still) 
      :time (b / beyond 
            :op1 (d / date-entity 
                  :year 1997)))

# ::snt feel that a reform programme promised by mr federico mayor unescos directorgeneral has taken too long to implement
# ::tok feel that a reform programme promised by mr federico mayor unescos directorgeneral has taken too long to implement
# ::alignments 17-18|0.0.2.0 14-15|0.0.0 9-10|0.0.1.0+0.0.1 5-6|0.0.2.1 4-5|0.0.2 3-4|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:26.816
# ::node	0	feel-01	0-1
# ::node	0.0	reform-01	3-4
# ::node	0.0.0	too	14-15
# ::node	0.0.1	have-org-role-91	9-10
# ::node	0.0.1.0	mayor	9-10
# ::node	0.0.2	program	4-5
# ::node	0.0.2.0	implement-01	17-18
# ::node	0.0.2.1	promise-01	5-6
# ::root	0	feel-01
# ::edge	feel-01	ARG1	reform-01	0	0.0	
# ::edge	have-org-role-91	ARG2	mayor	0.0.1	0.0.1.0	
# ::edge	implement-01	ARG1	program	0.0.2.0	0.0.2	
# ::edge	program	mod	reform-01	0.0.2	0.0	
# ::edge	promise-01	ARG1	program	0.0.2.1	0.0.2	
# ::edge	reform-01	ARG0	too	0.0	0.0.0	
# ::edge	reform-01	ARG1	have-org-role-91	0.0	0.0.1	
(f / feel-01 
      :ARG1 (r / reform-01 
            :ARG0 (t / too) 
            :ARG1 (h / have-org-role-91 
                  :ARG2 (m / mayor)) 
            :mod-of (p2 / program 
                  :ARG1-of (i / implement-01) 
                  :ARG1-of (p / promise-01))))

# ::snt but why is it a right  the interest on which it is based validates the promising principle namely if a person communicates an intention to undertake by that very act of communication a certain obligation then he has that obligation, the promising principle establishes that if we promise we are obligated to act as we promised
# ::tok but why is it a right the interest on which it is based validates the promising principle namely if a person communicates an intention to undertake by that very act of communication a certain obligation then he has that obligation , the promising principle establishes that if we promise we are obligated to act as we promised
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:26.817
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt   holly promised she was sworn to secrecy
# ::tok holly promised she was sworn to secrecy
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:26.817
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the area of dispute which promises to occupy all of a meeting of ec finance ministers in luxembourg today is over the commissions proposal that the current system of exporting goods free of vat be abandoned and that after 1992 the tax should be levied in the country of origin before export
# ::tok the area of dispute which promises to occupy all of a meeting of ec finance ministers in luxembourg today is over the commissions proposal that the current system of exporting goods free of vat be abandoned and that after 1992 the tax should be levied in the country of origin before export
# ::alignments 51-52|0.0.2.0.3.0 50-51|0.0.2.0.3 49-50|0.0.2.0.0.0 47-48|0.0.2.0.0 44-45|0.0.2.0 42-43|0.0.2 41-42|0.0.2.0.1 39-40|0.0.2.0.2.0.0+0.0.2.0.2.0 38-39|0.0.2.0.2 36-37|0.0 35-36|0.0.1 33-34|0.0.1.0.0.0.0 31-32|0.0.1.0.0.0 30-31|0.0.1.0.0 29-30|0.0.1.0.0.1 27-28|0.0.1.0 26-27|0.0.1.0.1 23-24|0.0.0 22-23|0.0.0.1 18-19|0.0.1.1.0.1 15-16|0.0.1.1.0.0+0.0.1.1.0 14-15|0.0.1.1 11-12|0 8-9|0.1 7-8|0.0.0.0.0 5-6|0.0.0.0.0.1 3-4|0.0.0.0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:28.622
# ::node	0	meet-03	11-12
# ::node	0.0	and	36-37
# ::node	0.0.0	propose-01	23-24
# ::node	0.0.0.0	area	1-2
# ::node	0.0.0.0.0	occupy-01	7-8
# ::node	0.0.0.0.0.0	dispute-01	3-4
# ::node	0.0.0.0.0.1	promise-01	5-6
# ::node	0.0.0.1	commission	22-23
# ::node	0.0.1	abandon-01	35-36
# ::node	0.0.1.0	system	27-28
# ::node	0.0.1.0.0	good	30-31
# ::node	0.0.1.0.0.0	free-41	31-32
# ::node	0.0.1.0.0.0.0	vat	33-34
# ::node	0.0.1.0.0.1	export-01	29-30
# ::node	0.0.1.0.1	current	26-27
# ::node	0.0.1.1	finance-01	14-15
# ::node	0.0.1.1.0	have-org-role-91	15-16
# ::node	0.0.1.1.0.0	minister	15-16
# ::node	0.0.1.1.0.1	today	18-19
# ::node	0.0.2	recommend-01	42-43
# ::node	0.0.2.0	levy-01	44-45
# ::node	0.0.2.0.0	country	47-48
# ::node	0.0.2.0.0.0	originate-01	49-50
# ::node	0.0.2.0.1	tax-01	41-42
# ::node	0.0.2.0.2	after	38-39
# ::node	0.0.2.0.2.0	date-entity	39-40
# ::node	0.0.2.0.2.0.0	1992	39-40
# ::node	0.0.2.0.3	before	50-51
# ::node	0.0.2.0.3.0	export-01	51-52
# ::node	0.1	all	8-9
# ::root	0	meet-03
# ::edge	abandon-01	ARG1	system	0.0.1	0.0.1.0	
# ::edge	abandon-01	ARG2	finance-01	0.0.1	0.0.1.1	
# ::edge	after	op1	date-entity	0.0.2.0.2	0.0.2.0.2.0	
# ::edge	and	op1	propose-01	0.0	0.0.0	
# ::edge	and	op2	abandon-01	0.0	0.0.1	
# ::edge	and	op3	recommend-01	0.0	0.0.2	
# ::edge	before	op1	export-01	0.0.2.0.3	0.0.2.0.3.0	
# ::edge	date-entity	year	1992	0.0.2.0.2.0	0.0.2.0.2.0.0	
# ::edge	export-01	ARG1	good	0.0.1.0.0.1	0.0.1.0.0	
# ::edge	free-41	ARG1	good	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	free-41	ARG2	vat	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	have-org-role-91	ARG1	finance-01	0.0.1.1.0	0.0.1.1	
# ::edge	have-org-role-91	ARG2	minister	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	have-org-role-91	prep-with	today	0.0.1.1.0	0.0.1.1.0.1	
# ::edge	levy-01	ARG0	country	0.0.2.0	0.0.2.0.0	
# ::edge	levy-01	ARG1	tax-01	0.0.2.0	0.0.2.0.1	
# ::edge	levy-01	time	after	0.0.2.0	0.0.2.0.2	
# ::edge	levy-01	time	before	0.0.2.0	0.0.2.0.3	
# ::edge	meet-03	ARG0	and	0	0.0	
# ::edge	meet-03	quant	all	0	0.1	
# ::edge	occupy-01	ARG0	dispute-01	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	occupy-01	ARG1	area	0.0.0.0.0	0.0.0.0	
# ::edge	originate-01	ARG1	country	0.0.2.0.0.0	0.0.2.0.0	
# ::edge	promise-01	ARG1	occupy-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	propose-01	ARG0	area	0.0.0	0.0.0.0	
# ::edge	propose-01	ARG1	commission	0.0.0	0.0.0.1	
# ::edge	recommend-01	ARG1	levy-01	0.0.2	0.0.2.0	
# ::edge	system	location	good	0.0.1.0	0.0.1.0.0	
# ::edge	system	time	current	0.0.1.0	0.0.1.0.1	
(m2 / meet-03 
      :ARG0 (a2 / and 
            :op1 (p / propose-01 
                  :ARG0 (a5 / area 
                        :ARG1-of (o2 / occupy-01 
                              :ARG0 (d2 / dispute-01) 
                              :ARG1-of (p2 / promise-01))) 
                  :ARG1 (c3 / commission)) 
            :op2 (a3 / abandon-01 
                  :ARG1 (s / system 
                        :location (g / good 
                              :ARG1-of (f / free-41 
                                    :ARG2 (v / vat)) 
                              :ARG1-of (e2 / export-01)) 
                        :time (c2 / current)) 
                  :ARG2 (f2 / finance-01 
                        :ARG1-of (h / have-org-role-91 
                              :ARG2 (m / minister) 
                              :prep-with (t2 / today)))) 
            :op3 (r / recommend-01 
                  :ARG1 (l / levy-01 
                        :ARG0 (c / country 
                              :ARG1-of (o / originate-01)) 
                        :ARG1 (t / tax-01) 
                        :time (a / after 
                              :op1 (d / date-entity 
                                    :year 1992)) 
                        :time (b / before 
                              :op1 (e / export-01))))) 
      :quant (a4 / all))

# ::snt shell take one look at us and revise her itinerary immediately sheldon promised confidently adjusting his shirtcuffs and settling his tie
# ::tok shell take one look at us and revise her itinerary immediately sheldon promised confidently adjusting his shirtcuffs and settling his tie
# ::alignments 20-21|0.2.0 18-19|0.2 17-18|0 14-15|0.0 12-13|0.1 10-11|0.0.0 9-10|0.1.0 7-8|0.1.0.0 6-7|0.1.0.0.0 0-1|0.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:28.684
# ::node	0	and	17-18
# ::node	0.0	adjust-01	14-15
# ::node	0.0.0	immediate	10-11
# ::node	0.1	promise-01	12-13
# ::node	0.1.0	itinerary	9-10
# ::node	0.1.0.0	revise-01	7-8
# ::node	0.1.0.0.0	and	6-7
# ::node	0.1.0.0.0.0	shell	0-1
# ::node	0.2	settle-03	18-19
# ::node	0.2.0	tie	20-21
# ::root	0	and
# ::edge	adjust-01	ARG1	and	0.0	0	
# ::edge	adjust-01	time	immediate	0.0	0.0.0	
# ::edge	and	op1	settle-03	0	0.2	
# ::edge	and	op1	shell	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	and	op2	revise-01	0.1.0.0.0	0.1.0.0	
# ::edge	promise-01	ARG0	itinerary	0.1	0.1.0	
# ::edge	promise-01	ARG1	and	0.1	0	
# ::edge	revise-01	ARG1	itinerary	0.1.0.0	0.1.0	
# ::edge	settle-03	ARG1	tie	0.2	0.2.0	
(a / and 
      :ARG1-of (a2 / adjust-01 
            :time (i / immediate)) 
      :ARG1-of (p / promise-01 
            :ARG0 (i2 / itinerary 
                  :ARG1-of (r / revise-01 
                        :op-of (a3 / and 
                              :op1 (s2 / shell))))) 
      :op1 (s / settle-03 
            :ARG1 (t / tie)))

# ::snt today promises to be hectic in the markets
# ::tok today promises to be hectic in the markets
# ::alignments 7-8|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:28.691
# ::node	0	promise-01	1-2
# ::node	0.0	today	0-1
# ::node	0.1	market	7-8
# ::root	0	promise-01
# ::edge	promise-01	ARG0	today	0	0.0	
# ::edge	promise-01	ARG1	market	0	0.1	
(p / promise-01 
      :ARG0 (t / today) 
      :ARG1 (m / market))

# ::snt in vain did she promise to choose a suitable play an educational play shakespeare
# ::tok in vain did she promise to choose a suitable play an educational play shakespeare
# ::alignments 12-13|0.1.1.0.0 11-12|0.1.1.0 9-10|0.1.1 8-9|0.1.1.1 6-7|0.1 4-5|0 3-4|0.1.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:28.754
# ::node	0	promise-01	4-5
# ::node	0.0	vain	1-2
# ::node	0.1	choose-01	6-7
# ::node	0.1.0	she	3-4
# ::node	0.1.1	play-01	9-10
# ::node	0.1.1.0	educate-01	11-12
# ::node	0.1.1.0.0	play-01	12-13
# ::node	0.1.1.1	suit-01	8-9
# ::root	0	promise-01
# ::edge	choose-01	ARG0	she	0.1	0.1.0	
# ::edge	choose-01	ARG1	play-01	0.1	0.1.1	
# ::edge	educate-01	ARG0	play-01	0.1.1.0	0.1.1	
# ::edge	educate-01	ARG1	play-01	0.1.1.0	0.1.1.0.0	
# ::edge	promise-01	ARG1	vain	0	0.0	
# ::edge	promise-01	ARG2	choose-01	0	0.1	
# ::edge	suit-01	ARG2	play-01	0.1.1.1	0.1.1	
(p3 / promise-01 
      :ARG1 (v / vain) 
      :ARG2 (c / choose-01 
            :ARG0 (s2 / she) 
            :ARG1 (p2 / play-01 
                  :ARG0-of (e / educate-01 
                        :ARG1 (p / play-01)) 
                  :ARG2-of (s / suit-01))))

# ::snt when a big tree falls the earth beneath it shakes he said though earlier this year he promised that everybody will be brought to book through the legal system
# ::tok when a big tree falls the earth beneath it shakes he said though earlier this year he promised that everybody will be brought to book through the legal system
# ::alignments 28-29|0.4.0 27-28|0.4 24-25|0.4.0.0 19-20|0.5.1 17-18|0.5 16-17|0.5.0 15-16|0.5.2 14-15|0.5.3.0 13-14|0.5.3 11-12|0 10-11|0.0 8-9|0.1 7-8|0.1.0 6-7|0.3 3-4|0.2 2-3|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:29.260
# ::node	0	say-01	11-12
# ::node	0.0	he	10-11
# ::node	0.1	it	8-9
# ::node	0.1.0	beneath	7-8
# ::node	0.2	tree	3-4
# ::node	0.2.0	big	2-3
# ::node	0.3	earth	6-7
# ::node	0.4	legal	27-28
# ::node	0.4.0	system	28-29
# ::node	0.4.0.0	book	24-25
# ::node	0.5	promise-01	17-18
# ::node	0.5.0	he	16-17
# ::node	0.5.1	everybody	19-20
# ::node	0.5.2	year	15-16
# ::node	0.5.3	early	13-14
# ::node	0.5.3.0	this	14-15
# ::root	0	say-01
# ::edge	beneath	op1	it	0.1.0	0.1	
# ::edge	book	location	system	0.4.0.0	0.4.0	
# ::edge	early	mod	this	0.5.3	0.5.3.0	
# ::edge	legal	op1	say-01	0.4	0	
# ::edge	promise-01	ARG0	he	0.5	0.5.0	
# ::edge	promise-01	ARG1	everybody	0.5	0.5.1	
# ::edge	promise-01	time	early	0.5	0.5.3	
# ::edge	promise-01	time	year	0.5	0.5.2	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	it	0	0.1	
# ::edge	say-01	ARG2	tree	0	0.2	
# ::edge	say-01	domain	earth	0	0.3	
# ::edge	say-01	time	promise-01	0	0.5	
# ::edge	system	mod	legal	0.4.0	0.4	
# ::edge	tree	mod	big	0.2	0.2.0	
(s2 / say-01 
      :ARG0 (h2 / he) 
      :ARG1 (i / it 
            :op-of (b2 / beneath)) 
      :ARG2 (t2 / tree 
            :mod (b3 / big)) 
      :domain (e3 / earth) 
      :op-of (l / legal 
            :mod-of (s / system 
                  :location-of (b / book))) 
      :time (p / promise-01 
            :ARG0 (h / he) 
            :ARG1 (e / everybody) 
            :time (y / year) 
            :time (e2 / early 
                  :mod (t / this))))

# ::snt when we got married i promised id give you everything you want and so i will
# ::tok when we got married i promised id give you everything you want and so i will
# ::alignments 14-15|0.1.1.0.1.0 13-14|0.1.1.0.1 12-13|0.1.1.0.2 11-12|0.1.1.0 10-11|0.1.1.0.0 9-10|0.1.1 8-9|0.1.2 7-8|0.1 6-7|0.1.0 5-6|0 4-5|0.0 3-4|0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:29.551
# ::node	0	promise-01	5-6
# ::node	0.0	i	4-5
# ::node	0.0.0	marry-01	3-4
# ::node	0.0.0.0	we	1-2
# ::node	0.1	give-01	7-8
# ::node	0.1.0	id	6-7
# ::node	0.1.1	everything	9-10
# ::node	0.1.1.0	want-01	11-12
# ::node	0.1.1.0.0	you	10-11
# ::node	0.1.1.0.1	so	13-14
# ::node	0.1.1.0.1.0	i	14-15
# ::node	0.1.1.0.2	and	12-13
# ::node	0.1.2	you	8-9
# ::root	0	promise-01
# ::edge	and	op1	want-01	0.1.1.0.2	0.1.1.0	
# ::edge	give-01	ARG0	id	0.1	0.1.0	
# ::edge	give-01	ARG1	everything	0.1	0.1.1	
# ::edge	give-01	ARG2	you	0.1	0.1.2	
# ::edge	i	mod	so	0.1.1.0.1.0	0.1.1.0.1	
# ::edge	marry-01	ARG0	we	0.0.0	0.0.0.0	
# ::edge	marry-01	ARG1	i	0.0.0	0.0	
# ::edge	promise-01	ARG0	i	0	0.0	
# ::edge	promise-01	ARG1	give-01	0	0.1	
# ::edge	want-01	ARG0	you	0.1.1.0	0.1.1.0.0	
# ::edge	want-01	ARG1	everything	0.1.1.0	0.1.1	
# ::edge	want-01	ARG2	so	0.1.1.0	0.1.1.0.1	
(p / promise-01 
      :ARG0 (i3 / i 
            :ARG1-of (m / marry-01 
                  :ARG0 (w2 / we))) 
      :ARG1 (g / give-01 
            :ARG0 (i2 / id) 
            :ARG1 (e / everything 
                  :ARG1-of (w / want-01 
                        :ARG0 (y / you) 
                        :ARG2 (s / so 
                              :mod-of (i / i)) 
                        :op-of (a / and))) 
            :ARG2 (y2 / you)))

# ::snt we know that vocal soundum sixteen schools at least are taking part at the cotswold wildlife park vocal soundum we know of at least ten at the walk at broughton park vocal soundum weve got vocal soundum students from polytechnics brownies guides headington slimmers magazine club have registered a team the advisory centre for multicultural education oxford city courier newspaper are promising to send teams
# ::tok we know that vocal soundum sixteen schools at least are taking part at the cotswold wildlife park vocal soundum we know of at least ten at the walk at broughton park vocal soundum weve got vocal soundum students from polytechnics brownies guides headington slimmers magazine club have registered a team the advisory centre for multicultural education oxford city courier newspaper are promising to send teams
# ::alignments 64-65|0.1.1.1.0.0.1.2 63-64|0.1.1.1.0.0.1.2.0 61-62|0.1.1.1.0.0.1.2.0.0 59-60|0.1.1.1.0.0.1.2.0.0.1 57-58|0.1.1.1.0.0.1.2.0.0.0 55-56|0.1.1.1.0.0.1.2.0.0.1.0 54-55|0.1.1.1.0.0.1.2.0.0.1.0.0 51-52|0.1.1.0 49-50|0.1.1 47-48|0.1.1.1 45-46|0.1.1.1.0 44-45|0.1.1.1.0.0.1.2.1 41-42|0.1.1.1.0.0.1 37-38|0.1.1.1.0.0.0+0.1.1.1.0.0 35-36|0.1.1.1.0.0.3 31-32|0.1.1.1.0.0.1.1 30-31|0.1.1.0.0 27-28|0.1 20-21|0 19-20|0.0 17-18|0.1.1.1.0.0.1.0 16-17|0.1.1.1.0.0.2 15-16|0.1.1.1.0.0.2.0 6-7|0.1.0 3-4|0.1.0.1 1-2|0.1.0.0 0-1|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:31.070
# ::node	0	know-01	20-21
# ::node	0.0	we	19-20
# ::node	0.1	walk-01	27-28
# ::node	0.1.0	school	6-7
# ::node	0.1.0.0	know-01	1-2
# ::node	0.1.0.0.0	we	0-1
# ::node	0.1.0.1	vocal	3-4
# ::node	0.1.1	team	49-50
# ::node	0.1.1.0	advise-01	51-52
# ::node	0.1.1.0.0	park	30-31
# ::node	0.1.1.1	register-02	47-48
# ::node	0.1.1.1.0	club	45-46
# ::node	0.1.1.1.0.0	person	37-38
# ::node	0.1.1.1.0.0.0	study-01	37-38
# ::node	0.1.1.1.0.0.1	guide-01	41-42
# ::node	0.1.1.1.0.0.1.0	vocal	17-18
# ::node	0.1.1.1.0.0.1.1	vocal	31-32
# ::node	0.1.1.1.0.0.1.2	team	64-65
# ::node	0.1.1.1.0.0.1.2.0	send-01	63-64
# ::node	0.1.1.1.0.0.1.2.0.0	promise-01	61-62
# ::node	0.1.1.1.0.0.1.2.0.0.0	city	57-58
# ::node	0.1.1.1.0.0.1.2.0.0.1	newspaper	59-60
# ::node	0.1.1.1.0.0.1.2.0.0.1.0	educate-01	55-56
# ::node	0.1.1.1.0.0.1.2.0.0.1.0.0	multicultural	54-55
# ::node	0.1.1.1.0.0.1.2.1	magazine	44-45
# ::node	0.1.1.1.0.0.2	park	16-17
# ::node	0.1.1.1.0.0.2.0	wildlife	15-16
# ::node	0.1.1.1.0.0.3	vocal	35-36
# ::root	0	know-01
# ::edge	advise-01	ARG0	team	0.1.1.0	0.1.1	
# ::edge	advise-01	ARG1	park	0.1.1.0	0.1.1.0.0	
# ::edge	club	poss	person	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	educate-01	ARG1	newspaper	0.1.1.1.0.0.1.2.0.0.1.0	0.1.1.1.0.0.1.2.0.0.1	
# ::edge	educate-01	mod	multicultural	0.1.1.1.0.0.1.2.0.0.1.0	0.1.1.1.0.0.1.2.0.0.1.0.0	
# ::edge	guide-01	ARG0	person	0.1.1.1.0.0.1	0.1.1.1.0.0	
# ::edge	guide-01	ARG1	vocal	0.1.1.1.0.0.1	0.1.1.1.0.0.1.0	
# ::edge	guide-01	mod	vocal	0.1.1.1.0.0.1	0.1.1.1.0.0.1.1	
# ::edge	know-01	ARG0	we	0	0.0	
# ::edge	know-01	ARG0	we	0.1.0.0	0.1.0.0.0	
# ::edge	know-01	ARG1	school	0.1.0.0	0.1.0	
# ::edge	know-01	ARG1	walk-01	0	0.1	
# ::edge	park	domain	person	0.1.1.1.0.0.2	0.1.1.1.0.0	
# ::edge	park	mod	wildlife	0.1.1.1.0.0.2	0.1.1.1.0.0.2.0	
# ::edge	person	mod	vocal	0.1.1.1.0.0	0.1.1.1.0.0.3	
# ::edge	promise-01	ARG0	city	0.1.1.1.0.0.1.2.0.0	0.1.1.1.0.0.1.2.0.0.0	
# ::edge	promise-01	ARG1	newspaper	0.1.1.1.0.0.1.2.0.0	0.1.1.1.0.0.1.2.0.0.1	
# ::edge	promise-01	ARG2	send-01	0.1.1.1.0.0.1.2.0.0	0.1.1.1.0.0.1.2.0	
# ::edge	register-02	ARG0	club	0.1.1.1	0.1.1.1.0	
# ::edge	register-02	ARG1	team	0.1.1.1	0.1.1	
# ::edge	school	mod	vocal	0.1.0	0.1.0.1	
# ::edge	send-01	ARG1	team	0.1.1.1.0.0.1.2.0	0.1.1.1.0.0.1.2	
# ::edge	study-01	ARG0	person	0.1.1.1.0.0.0	0.1.1.1.0.0	
# ::edge	team	mod	guide-01	0.1.1.1.0.0.1.2	0.1.1.1.0.0.1	
# ::edge	team	mod	magazine	0.1.1.1.0.0.1.2	0.1.1.1.0.0.1.2.1	
# ::edge	walk-01	ARG0	school	0.1	0.1.0	
# ::edge	walk-01	ARG1	team	0.1	0.1.1	
(k / know-01 
      :ARG0 (w2 / we) 
      :ARG1 (w / walk-01 
            :ARG0 (s3 / school 
                  :ARG1-of (k2 / know-01 
                        :ARG0 (w4 / we)) 
                  :mod (v4 / vocal)) 
            :ARG1 (t2 / team 
                  :ARG0-of (a / advise-01 
                        :ARG1 (p3 / park)) 
                  :ARG1-of (r / register-02 
                        :ARG0 (c2 / club 
                              :poss (p2 / person 
                                    :ARG0-of (s2 / study-01) 
                                    :ARG0-of (g / guide-01 
                                          :ARG1 (v3 / vocal) 
                                          :mod (v2 / vocal) 
                                          :mod-of (t / team 
                                                :ARG1-of (s / send-01 
                                                      :ARG2-of (p / promise-01 
                                                            :ARG0 (c / city) 
                                                            :ARG1 (n / newspaper 
                                                                  :ARG1-of (e / educate-01 
                                                                        :mod (m / multicultural))))) 
                                                :mod (m2 / magazine))) 
                                    :domain-of (p4 / park 
                                          :mod (w3 / wildlife)) 
                                    :mod (v / vocal)))))))

# ::snt kitchener went for a walk with joffre and promised not to oppose an offensive in the autumn if hamiltons further attack at gallipoli were allowed to take place first
# ::tok kitchener went for a walk with joffre and promised not to oppose an offensive in the autumn if hamiltons further attack at gallipoli were allowed to take place first
# ::alignments 27-28|0.1.0.1.0 24-25|0.1.0.1 20-21|0.1.0.1.1 19-20|0.1.0.1.1.0 13-14|0.1.0.0 11-12|0.1.0 8-9|0.1 7-8|0 4-5|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:31.122
# ::node	0	and	7-8
# ::node	0.0	walk-01	4-5
# ::node	0.1	promise-01	8-9
# ::node	0.1.0	oppose-01	11-12
# ::node	0.1.0.0	offensive	13-14
# ::node	0.1.0.1	allow-01	24-25
# ::node	0.1.0.1.0	place	27-28
# ::node	0.1.0.1.1	attack-01	20-21
# ::node	0.1.0.1.1.0	further	19-20
# ::root	0	and
# ::edge	allow-01	ARG1	place	0.1.0.1	0.1.0.1.0	
# ::edge	allow-01	ARG2	attack-01	0.1.0.1	0.1.0.1.1	
# ::edge	and	op1	promise-01	0	0.1	
# ::edge	attack-01	mod	further	0.1.0.1.1	0.1.0.1.1.0	
# ::edge	oppose-01	ARG1	offensive	0.1.0	0.1.0.0	
# ::edge	oppose-01	condition	allow-01	0.1.0	0.1.0.1	
# ::edge	promise-01	ARG2	oppose-01	0.1	0.1.0	
# ::edge	walk-01	ARG0	and	0.0	0	
(a3 / and 
      :ARG0-of (w / walk-01) 
      :op1 (p2 / promise-01 
            :ARG2 (o2 / oppose-01 
                  :ARG1 (o / offensive) 
                  :condition (a / allow-01 
                        :ARG1 (p / place) 
                        :ARG2 (a2 / attack-01 
                              :mod (f / further))))))

# ::snt an urgent inquiry into allegations that some credit reference agencies are supplying dangerous and misleading information to lenders was promised by a government minister in the commons yesterday
# ::tok an urgent inquiry into allegations that some credit reference agencies are supplying dangerous and misleading information to lenders was promised by a government minister in the commons yesterday
# ::alignments 27-28|0.1.0.1 26-27|0.1.0.1.0.0.0.0+0.1.0.1.0.0.0+0.1.0.1.0.0 23-24|0.1.0.1.0.1+0.1.0.1.0 19-20|0.1.0 17-18|0.1.0.0 15-16|0.1 14-15|0 13-14|0.0.0.0 12-13|0.0.0.0.0 11-12|0.0.0 9-10|0.0 8-9|0.0.1 7-8|0.0.2 6-7|0.1.0.0.0 4-5|0.0.0.1 2-3|0.0.0.1.0 1-2|0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:31.433
# ::node	0	mislead-02	14-15
# ::node	0.0	agency	9-10
# ::node	0.0.0	supply-01	11-12
# ::node	0.0.0.0	and	13-14
# ::node	0.0.0.0.0	dangerous	12-13
# ::node	0.0.0.1	allege-01	4-5
# ::node	0.0.0.1.0	inquire-01	2-3
# ::node	0.0.0.1.0.0	urgent	1-2
# ::node	0.0.1	reference-01	8-9
# ::node	0.0.2	credit-02	7-8
# ::node	0.1	information	15-16
# ::node	0.1.0	promise-01	19-20
# ::node	0.1.0.0	lend-01	17-18
# ::node	0.1.0.0.0	some	6-7
# ::node	0.1.0.1	yesterday	27-28
# ::node	0.1.0.1.0	have-org-role-91	23-24
# ::node	0.1.0.1.0.0	government-organization	26-27
# ::node	0.1.0.1.0.0.0	name	26-27
# ::node	0.1.0.1.0.0.0.0	"Commons"	26-27
# ::node	0.1.0.1.0.1	minister	23-24
# ::root	0	mislead-02
# ::edge	allege-01	ARG1	supply-01	0.0.0.1	0.0.0	
# ::edge	and	op1	dangerous	0.0.0.0	0.0.0.0.0	
# ::edge	credit-02	ARG1	agency	0.0.2	0.0	
# ::edge	government-organization	name	name	0.1.0.1.0.0	0.1.0.1.0.0.0	
# ::edge	have-org-role-91	ARG1	government-organization	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	have-org-role-91	ARG2	minister	0.1.0.1.0	0.1.0.1.0.1	
# ::edge	have-org-role-91	time	yesterday	0.1.0.1.0	0.1.0.1	
# ::edge	inquire-01	ARG1	allege-01	0.0.0.1.0	0.0.0.1	
# ::edge	inquire-01	mod	urgent	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	lend-01	ARG1	some	0.1.0.0	0.1.0.0.0	
# ::edge	mislead-02	ARG0	agency	0	0.0	
# ::edge	mislead-02	ARG1	information	0	0.1	
# ::edge	name	op1	"Commons"	0.1.0.1.0.0.0	0.1.0.1.0.0.0.0	
# ::edge	promise-01	ARG0	information	0.1.0	0.1	
# ::edge	promise-01	ARG1	lend-01	0.1.0	0.1.0.0	
# ::edge	promise-01	time	yesterday	0.1.0	0.1.0.1	
# ::edge	reference-01	ARG1	agency	0.0.1	0.0	
# ::edge	supply-01	ARG0	agency	0.0.0	0.0	
# ::edge	supply-01	ARG1	and	0.0.0	0.0.0.0	
(m2 / mislead-02 
      :ARG0 (a2 / agency 
            :ARG0-of (s / supply-01 
                  :ARG1 (a / and 
                        :op1 (d / dangerous)) 
                  :ARG1-of (a3 / allege-01 
                        :ARG1-of (i2 / inquire-01 
                              :mod (u / urgent)))) 
            :ARG1-of (r / reference-01) 
            :ARG1-of (c / credit-02)) 
      :ARG1 (i / information 
            :ARG0-of (p / promise-01 
                  :ARG1 (l / lend-01 
                        :ARG1 (s2 / some)) 
                  :time (y / yesterday 
                        :time-of (h / have-org-role-91 
                              :ARG1 (g / government-organization 
                                    :name (n / name 
                                          :op1 "Commons")) 
                              :ARG2 (m / minister))))))

# ::snt given that the company still has to deliver the goods promised in its restructuring programme and continues to face the prospect of another bid from sir james this could prove beneficial
# ::tok given that the company still has to deliver the goods promised in its restructuring programme and continues to face the prospect of another bid from sir james this could prove beneficial
# ::alignments 30-31|0.0.0 29-30|0.0 28-29|0 27-28|0.0.0.1 23-24|0.0.0.0.0.0.0.0.0 22-23|0.0.0.0.0.0.0.0.0.0 20-21|0.0.0.0.0.0.0.0 18-19|0.0.0.0.0.0.0 16-17|0.0.0.0.3 15-16|0.0.0.0 14-15|0.0.0.0.2.1 13-14|0.0.0.0.2.1.0 10-11|0.0.0.0.2 9-10|0.0.0.0.2.0 7-8|0.0.0.0.0 4-5|0.0.0.0.3.0 3-4|0.0.0.0.0.0 0-1|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:31.845
# ::node	0	possible	28-29
# ::node	0.0	prove-01	29-30
# ::node	0.0.0	benefit-01	30-31
# ::node	0.0.0.0	and	15-16
# ::node	0.0.0.0.0	deliver-01	7-8
# ::node	0.0.0.0.0.0	company	3-4
# ::node	0.0.0.0.0.0.0	face-01	18-19
# ::node	0.0.0.0.0.0.0.0	prospect	20-21
# ::node	0.0.0.0.0.0.0.0.0	bid-01	23-24
# ::node	0.0.0.0.0.0.0.0.0.0	another	22-23
# ::node	0.0.0.0.1	give-01	0-1
# ::node	0.0.0.0.2	promise-01	10-11
# ::node	0.0.0.0.2.0	good	9-10
# ::node	0.0.0.0.2.1	program	14-15
# ::node	0.0.0.0.2.1.0	restructure-01	13-14
# ::node	0.0.0.0.3	continue-01	16-17
# ::node	0.0.0.0.3.0	still	4-5
# ::node	0.0.0.1	this	27-28
# ::root	0	possible
(p2 / possible 
      :mod-of (p / prove-01 
            :ARG1 (b / benefit-01 
                  :ARG0 (a2 / and 
                        :ARG1-of (d / deliver-01 
                              :ARG0 (c2 / company 
                                    :ARG0-of (f / face-01 
                                          :ARG1 (p3 / prospect 
                                                :domain (b2 / bid-01 
                                                      :mod (a / another)))))) 
                        :op1 (g2 / give-01) 
                        :op2 (p5 / promise-01 
                              :ARG0 (g / good) 
                              :ARG2 (p4 / program 
                                    :mod (r / restructure-01))) 
                        :op3 (c / continue-01 
                              :ARG1 (s / still))) 
                  :ARG1 (t / this))))

# ::snt the next sunday preaching in the town bulley promised that it would rise like a phoenix from its ashes
# ::tok the next sunday preaching in the town bulley promised that it would rise like a phoenix from its ashes
# ::alignments 12-13|0.1 10-11|0.1.0 8-9|0 6-7|0.0.2 3-4|0.0 2-3|0.0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:31.966
# ::node	0	promise-01	8-9
# ::node	0.0	preach-01	3-4
# ::node	0.0.0	sunday	2-3
# ::node	0.0.1	next	1-2
# ::node	0.0.2	town	6-7
# ::node	0.1	rise-01	12-13
# ::node	0.1.0	it	10-11
# ::root	0	promise-01
# ::edge	preach-01	ARG1	sunday	0.0	0.0.0	
# ::edge	preach-01	mod	next	0.0	0.0.1	
# ::edge	preach-01	time	town	0.0	0.0.2	
# ::edge	promise-01	ARG0	preach-01	0	0.0	
# ::edge	promise-01	ARG1	rise-01	0	0.1	
# ::edge	rise-01	ARG0	it	0.1	0.1.0	
(p / promise-01 
      :ARG0 (p2 / preach-01 
            :ARG1 (s / sunday) 
            :mod (n / next) 
            :time (t / town)) 
      :ARG1 (r / rise-01 
            :ARG0 (i / it)))

# ::snt like all these technical innovations that promise to improve the profitability of an enterprise if you dont take advantage of them you get left behind in what is a competitive world
# ::tok like all these technical innovations that promise to improve the profitability of an enterprise if you dont take advantage of them you get left behind in what is a competitive world
# ::alignments 30-31|0.1.0.0.0.0 29-30|0.1.0.0.0 24-25|0.1.0.1.0.0 21-22|0.0 18-19|0 15-16|0.1 13-14|0.1.0.0 8-9|0.1.0 6-7|0.1.0.1 4-5|0.1.0.1.0 3-4|0.1.0.1.0.1 1-2|0.1.0.1.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:32.102
# ::node	0	advantage	18-19
# ::node	0.0	you	21-22
# ::node	0.1	you	15-16
# ::node	0.1.0	improve-01	8-9
# ::node	0.1.0.0	enterprise	13-14
# ::node	0.1.0.0.0	compete-01	29-30
# ::node	0.1.0.0.0.0	world	30-31
# ::node	0.1.0.1	promise-01	6-7
# ::node	0.1.0.1.0	innovate-01	4-5
# ::node	0.1.0.1.0.0	behind	24-25
# ::node	0.1.0.1.0.1	technical	3-4
# ::node	0.1.0.1.0.2	all	1-2
# ::root	0	advantage
# ::edge	advantage	poss	you	0	0.0	
# ::edge	advantage	poss	you	0	0.1	
# ::edge	compete-01	ARG0	enterprise	0.1.0.0.0	0.1.0.0	
# ::edge	compete-01	ARG1	world	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	improve-01	ARG0	you	0.1.0	0.1	
# ::edge	improve-01	ARG1	enterprise	0.1.0	0.1.0.0	
# ::edge	innovate-01	ARG1	behind	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	innovate-01	mod	technical	0.1.0.1.0	0.1.0.1.0.1	
# ::edge	innovate-01	quant	all	0.1.0.1.0	0.1.0.1.0.2	
# ::edge	promise-01	ARG1	innovate-01	0.1.0.1	0.1.0.1.0	
# ::edge	promise-01	ARG2	improve-01	0.1.0.1	0.1.0	
(a / advantage 
      :poss (y / you) 
      :poss (y2 / you 
            :ARG0-of (i / improve-01 
                  :ARG1 (e / enterprise 
                        :ARG0-of (c / compete-01 
                              :ARG1 (w / world))) 
                  :ARG2-of (p / promise-01 
                        :ARG1 (i2 / innovate-01 
                              :ARG1 (b / behind) 
                              :mod (t / technical) 
                              :quant (a2 / all))))))

# ::snt to be sure he specifically repudiated monnets notion of the united states of europe promising there is no plot against the nation state no one is being asked to renounce a legitimate patriotism
# ::tok to be sure he specifically repudiated monnets notion of the united states of europe promising there is no plot against the nation state no one is being asked to renounce a legitimate patriotism
# ::alignments 32-33|0.1 31-32|0.1.0 29-30|0 27-28|0.2 23-24|0.2.1 22-23|0.2.0.1 21-22|0.2.0.1.0 18-19|0.2.0 17-18|0.2.0.3 14-15|0.2.0.2 13-14|0.2.0.2.0.0.0+0.2.0.2.0.0+0.2.0.2.0 10-12|0.0.1.0+0.0.1.1+0.0.1+0.0 7-8|0.0.0 4-5|0.2.0.0 3-4|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:33.047
# ::node	0	renounce-01	29-30
# ::node	0.0	country	10-12
# ::node	0.0.0	notion	7-8
# ::node	0.0.0.0	he	3-4
# ::node	0.0.1	name	10-12
# ::node	0.0.1.0	"states"	10-12
# ::node	0.0.1.1	"united"	10-12
# ::node	0.1	patriotism	32-33
# ::node	0.1.0	legitimate	31-32
# ::node	0.2	ask-02	27-28
# ::node	0.2.0	plot-01	18-19
# ::node	0.2.0.0	specific	4-5
# ::node	0.2.0.1	state	22-23
# ::node	0.2.0.1.0	nation	21-22
# ::node	0.2.0.2	promise-01	14-15
# ::node	0.2.0.2.0	continent	13-14
# ::node	0.2.0.2.0.0	name	13-14
# ::node	0.2.0.2.0.0.0	"Europe"	13-14
# ::node	0.2.0.3	-	17-18
# ::node	0.2.1	-	23-24
# ::root	0	renounce-01
# ::edge	ask-02	ARG0	plot-01	0.2	0.2.0	
# ::edge	ask-02	ARG1	renounce-01	0.2	0	
# ::edge	ask-02	polarity	-	0.2	0.2.1	
# ::edge	continent	name	name	0.2.0.2.0	0.2.0.2.0.0	
# ::edge	country	name	name	0.0	0.0.1	
# ::edge	name	op1	"Europe"	0.2.0.2.0.0	0.2.0.2.0.0.0	
# ::edge	name	op1	"states"	0.0.1	0.0.1.0	
# ::edge	name	op2	"united"	0.0.1	0.0.1.1	
# ::edge	notion	location	country	0.0.0	0.0	
# ::edge	notion	poss	he	0.0.0	0.0.0.0	
# ::edge	patriotism	mod	legitimate	0.1	0.1.0	
# ::edge	plot-01	ARG0	specific	0.2.0	0.2.0.0	
# ::edge	plot-01	ARG1	state	0.2.0	0.2.0.1	
# ::edge	plot-01	polarity	-	0.2.0	0.2.0.3	
# ::edge	promise-01	ARG1	continent	0.2.0.2	0.2.0.2.0	
# ::edge	promise-01	ARG2	plot-01	0.2.0.2	0.2.0	
# ::edge	renounce-01	ARG0	country	0	0.0	
# ::edge	renounce-01	ARG1	patriotism	0	0.1	
# ::edge	state	mod	nation	0.2.0.1	0.2.0.1.0	
(r / renounce-01 
      :ARG0 (c2 / country 
            :location-of (n4 / notion 
                  :poss (h / he)) 
            :name (n3 / name 
                  :op1 "states" 
                  :op2 "united")) 
      :ARG1 (p / patriotism 
            :mod (l / legitimate)) 
      :ARG1-of (a / ask-02 
            :ARG0 (p2 / plot-01 
                  :ARG0 (s2 / specific) 
                  :ARG1 (s / state 
                        :mod (n / nation)) 
                  :ARG2-of (p3 / promise-01 
                        :ARG1 (c / continent 
                              :name (n2 / name 
                                    :op1 "Europe"))) 
                  :polarity (-2 / -)) 
            :polarity (- / -)))

# ::snt yesterdays newspaper columns on the election were devoted to mr dinkins promises to defend jewish interests in the same way that mayor ed koch did for the past 12 years
# ::tok yesterdays newspaper columns on the election were devoted to mr dinkins promises to defend jewish interests in the same way that mayor ed koch did for the past 12 years
# ::alignments 29-30|0.0.0.2.0.0.0.1+0.0.0.2.0.0.0 28-29|0.0.0.2.0.0.0.0 27-28|0.0.0.2.0.0 21-22|0.0.0.1.0+0.0.0.1 19-20|0.0.0.3 18-19|0.0.0.3.0 15-16|0.0.0.0 14-15|0.0.0.0.0.0.0+0.0.0.0.0.0+0.0.0.0.0 13-14|0.0.0 11-12|0.0.0.2 7-8|0 5-6|0.0.0.2.0 2-3|0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:33.331
# ::node	0	devote-01	7-8
# ::node	0.0	column	2-3
# ::node	0.0.0	defend-01	13-14
# ::node	0.0.0.0	interest	15-16
# ::node	0.0.0.0.0	ethnic-group	14-15
# ::node	0.0.0.0.0.0	name	14-15
# ::node	0.0.0.0.0.0.0	"Jew"	14-15
# ::node	0.0.0.1	have-org-role-91	21-22
# ::node	0.0.0.1.0	mayor	21-22
# ::node	0.0.0.2	promise-01	11-12
# ::node	0.0.0.2.0	elect-01	5-6
# ::node	0.0.0.2.0.0	past	27-28
# ::node	0.0.0.2.0.0.0	temporal-quantity	29-30
# ::node	0.0.0.2.0.0.0.0	12	28-29
# ::node	0.0.0.2.0.0.0.1	year	29-30
# ::node	0.0.0.3	way	19-20
# ::node	0.0.0.3.0	same-41	18-19
# ::node	0.0.1	newspaper	1-2
# ::root	0	devote-01
# ::edge	column	mod	newspaper	0.0	0.0.1	
# ::edge	defend-01	ARG0	column	0.0.0	0.0	
# ::edge	defend-01	ARG1	interest	0.0.0	0.0.0.0	
# ::edge	defend-01	manner	way	0.0.0	0.0.0.3	
# ::edge	devote-01	ARG1	column	0	0.0	
# ::edge	elect-01	ARG1	past	0.0.0.2.0	0.0.0.2.0.0	
# ::edge	ethnic-group	name	name	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	have-org-role-91	ARG1	defend-01	0.0.0.1	0.0.0	
# ::edge	have-org-role-91	ARG2	mayor	0.0.0.1	0.0.0.1.0	
# ::edge	interest	mod	ethnic-group	0.0.0.0	0.0.0.0.0	
# ::edge	name	op1	"Jew"	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	past	op1	temporal-quantity	0.0.0.2.0.0	0.0.0.2.0.0.0	
# ::edge	promise-01	ARG1	elect-01	0.0.0.2	0.0.0.2.0	
# ::edge	promise-01	ARG2	defend-01	0.0.0.2	0.0.0	
# ::edge	same-41	ARG1	way	0.0.0.3.0	0.0.0.3	
# ::edge	temporal-quantity	quant	12	0.0.0.2.0.0.0	0.0.0.2.0.0.0.0	
# ::edge	temporal-quantity	unit	year	0.0.0.2.0.0.0	0.0.0.2.0.0.0.1	
(d2 / devote-01 
      :ARG1 (c / column 
            :ARG0-of (d / defend-01 
                  :ARG1 (i / interest 
                        :mod (e / ethnic-group 
                              :name (n / name 
                                    :op1 "Jew"))) 
                  :ARG1-of (h / have-org-role-91 
                        :ARG2 (m / mayor)) 
                  :ARG2-of (p2 / promise-01 
                        :ARG1 (e2 / elect-01 
                              :ARG1 (p / past 
                                    :op1 (t / temporal-quantity 
                                          :quant 12 
                                          :unit (y / year))))) 
                  :manner (w / way 
                        :ARG1-of (s / same-41))) 
            :mod (n2 / newspaper)))

# ::snt its raising to 15 was often promised and as often postponed
# ::tok its raising to 15 was often promised and as often postponed
# ::alignments 10-11|0.2 9-10|0.2.1 7-8|0 6-7|0.1 5-6|0.0 3-4|0.2.0.0 1-2|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:33.351
# ::node	0	and	7-8
# ::node	0.0	often	5-6
# ::node	0.1	promise-01	6-7
# ::node	0.2	postpone-01	10-11
# ::node	0.2.0	raise-01	1-2
# ::node	0.2.0.0	15	3-4
# ::node	0.2.1	often	9-10
# ::root	0	and
# ::edge	and	frequency	often	0	0.0	
# ::edge	and	op1	promise-01	0	0.1	
# ::edge	and	op2	postpone-01	0	0.2	
# ::edge	postpone-01	ARG1	raise-01	0.2	0.2.0	
# ::edge	postpone-01	frequency	often	0.2	0.2.1	
# ::edge	raise-01	ARG1	15	0.2.0	0.2.0.0	
(a / and 
      :frequency (o2 / often) 
      :op1 (p2 / promise-01) 
      :op2 (p / postpone-01 
            :ARG1 (r / raise-01 
                  :ARG1 15) 
            :frequency (o / often)))

# ::snt he promised that the government would fight to keep finland
# ::tok he promised that the government would fight to keep finland
# ::alignments 6-7|0.0.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:33.359
# ::node	0	promise-01	1-2
# ::node	0.0	he	0-1
# ::node	0.0.0	fight-01	6-7
# ::root	0	promise-01
# ::edge	fight-01	ARG0	he	0.0.0	0.0	
# ::edge	promise-01	ARG0	he	0	0.0	
(p / promise-01 
      :ARG0 (h / he 
            :ARG0-of (f / fight-01)))

# ::snt gill promises a friendly informal talk with plenty of time for questions
# ::tok gill promises a friendly informal talk with plenty of time for questions
# ::alignments 11-12|0 9-10|0.0 7-8|0.0.0 5-6|0.1 4-5|0.1.3.0+0.1.3 3-4|0.1.1 1-2|0.1.2 0-1|0.1.0.0.0+0.1.0.0+0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:33.388
# ::node	0	question-01	11-12
# ::node	0.0	time	9-10
# ::node	0.0.0	plenty	7-8
# ::node	0.1	talk-01	5-6
# ::node	0.1.0	person	0-1
# ::node	0.1.0.0	name	0-1
# ::node	0.1.0.0.0	"Gill"	0-1
# ::node	0.1.1	friendly-41	3-4
# ::node	0.1.2	promise-01	1-2
# ::node	0.1.3	formal	4-5
# ::node	0.1.3.0	-	4-5
# ::root	0	question-01
# ::edge	formal	polarity	-	0.1.3	0.1.3.0	
# ::edge	friendly-41	ARG1	talk-01	0.1.1	0.1	
# ::edge	name	op1	"Gill"	0.1.0.0	0.1.0.0.0	
# ::edge	person	name	name	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG1	talk-01	0.1.2	0.1	
# ::edge	question-01	ARG1	time	0	0.0	
# ::edge	talk-01	ARG0	person	0.1	0.1.0	
# ::edge	talk-01	ARG1	question-01	0.1	0	
# ::edge	talk-01	manner	formal	0.1	0.1.3	
# ::edge	time	quant	plenty	0.0	0.0.0	
(q / question-01 
      :ARG1 (t / time 
            :quant (p / plenty)) 
      :ARG1-of (t2 / talk-01 
            :ARG0 (p3 / person 
                  :name (n / name 
                        :op1 "Gill")) 
            :ARG1-of (f2 / friendly-41) 
            :ARG1-of (p2 / promise-01) 
            :manner (f / formal 
                  :polarity -)))

# ::snt with much better weather now promised a colourful second week looms
# ::tok with much better weather now promised a colourful second week looms
# ::alignments 9-10|0.1 5-6|0 4-5|0.2 3-4|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:33.402
# ::node	0	promise-01	5-6
# ::node	0.0	weather	3-4
# ::node	0.0.0	much	1-2
# ::node	0.1	week	9-10
# ::node	0.2	now	4-5
# ::root	0	promise-01
# ::edge	promise-01	ARG0	weather	0	0.0	
# ::edge	promise-01	ARG1	week	0	0.1	
# ::edge	promise-01	time	now	0	0.2	
# ::edge	weather	quant	much	0.0	0.0.0	
(p / promise-01 
      :ARG0 (w2 / weather 
            :quant (m / much)) 
      :ARG1 (w / week) 
      :time (n / now))

# ::snt hrer had always promised them when the sun would shine again
# ::tok hrer had always promised them when the sun would shine again
# ::alignments 10-11|0.0.1 9-10|0.0 7-8|0.0.0 3-4|0 2-3|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:33.415
# ::node	0	promise-01	3-4
# ::node	0.0	shine-01	9-10
# ::node	0.0.0	sun	7-8
# ::node	0.0.1	again	10-11
# ::node	0.1	always	2-3
# ::root	0	promise-01
# ::edge	promise-01	condition	shine-01	0	0.0	
# ::edge	promise-01	time	always	0	0.1	
# ::edge	shine-01	ARG0	sun	0.0	0.0.0	
# ::edge	shine-01	mod	again	0.0	0.0.1	
(p / promise-01 
      :condition (s / shine-01 
            :ARG0 (s2 / sun) 
            :mod (a / again)) 
      :time (a2 / always))

# ::snt nevertheless the scenario at yearend remains breathtaking vaclav havel as czechoslovak president and alexander dubcek as speaker of parliament the berlin wall breached ceausescu executed and free elections promised everywhere except albania and of course the soviet union
# ::tok nevertheless the scenario at yearend remains breathtaking vaclav havel as czechoslovak president and alexander dubcek as speaker of parliament the berlin wall breached ceausescu executed and free elections promised everywhere except albania and of course the soviet union
# ::alignments 37-38|0.0.1 32-33|0.0 30-31|0 29-30|0.0.0.1 28-29|0.0.0 27-28|0.0.0.0.2 26-27|0.0.0.0.2.0 25-26|0.0.0.0 24-25|0.0.0.0.1 22-23|0.0.0.0.1.0.0 21-22|0.0.0.0.1.0 18-19|0.0.0.0.0.0.0.0.0+0.0.0.0.0.0.0.0+0.0.0.0.0.0.0 16-17|0.0.0.0.0.1+0.0.0.0.0 12-13|0.0.0.0.2.1 11-12|0.0.0.0.0.0.1+0.0.0.0.0.0 5-6|0.0.0.0.2.1.0 2-3|0.0.0.0.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:34.271
# ::node	0	except-00	30-31
# ::node	0.0	and	32-33
# ::node	0.0.0	promise-01	28-29
# ::node	0.0.0.0	and	25-26
# ::node	0.0.0.0.0	person	16-17
# ::node	0.0.0.0.0.0	have-org-role-91	11-12
# ::node	0.0.0.0.0.0.0	government-organization	18-19
# ::node	0.0.0.0.0.0.0.0	name	18-19
# ::node	0.0.0.0.0.0.0.0.0	"Parliament"	18-19
# ::node	0.0.0.0.0.0.1	president	11-12
# ::node	0.0.0.0.0.1	speak-01	16-17
# ::node	0.0.0.0.1	execute-01	24-25
# ::node	0.0.0.0.1.0	wall	21-22
# ::node	0.0.0.0.1.0.0	breach-01	22-23
# ::node	0.0.0.0.2	elect-01	27-28
# ::node	0.0.0.0.2.0	free-41	26-27
# ::node	0.0.0.0.2.1	and	12-13
# ::node	0.0.0.0.2.1.0	remain-01	5-6
# ::node	0.0.0.0.3	scenario	2-3
# ::node	0.0.0.1	everywhere	29-30
# ::node	0.0.1	union	37-38
# ::root	0	except-00
# ::edge	and	op1	elect-01	0.0.0.0.2.1	0.0.0.0.2	
# ::edge	and	op1	person	0.0.0.0	0.0.0.0.0	
# ::edge	and	op1	promise-01	0.0	0.0.0	
# ::edge	and	op2	execute-01	0.0.0.0	0.0.0.0.1	
# ::edge	and	op2	union	0.0	0.0.1	
# ::edge	and	op3	elect-01	0.0.0.0	0.0.0.0.2	
# ::edge	breach-01	ARG1	wall	0.0.0.0.1.0.0	0.0.0.0.1.0	
# ::edge	except-00	ARG1	and	0	0.0	
# ::edge	execute-01	ARG1	wall	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	free-41	ARG1	elect-01	0.0.0.0.2.0	0.0.0.0.2	
# ::edge	government-organization	name	name	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	have-org-role-91	ARG0	person	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	have-org-role-91	ARG1	government-organization	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	have-org-role-91	ARG2	president	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	name	op1	"Parliament"	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0	
# ::edge	promise-01	ARG0	and	0.0.0	0.0.0.0	
# ::edge	promise-01	location	everywhere	0.0.0	0.0.0.1	
# ::edge	remain-01	ARG1	and	0.0.0.0.2.1.0	0.0.0.0.2.1	
# ::edge	scenario	poss	and	0.0.0.0.3	0.0.0.0	
# ::edge	speak-01	ARG0	person	0.0.0.0.0.1	0.0.0.0.0	
(e / except-00 
      :ARG1 (a / and 
            :op1 (p / promise-01 
                  :ARG0 (a2 / and 
                        :op1 (p2 / person 
                              :ARG0-of (h / have-org-role-91 
                                    :ARG1 (g / government-organization 
                                          :name (n / name 
                                                :op1 "Parliament")) 
                                    :ARG2 (p3 / president)) 
                              :ARG0-of (s / speak-01)) 
                        :op2 (e4 / execute-01 
                              :ARG1 (w / wall 
                                    :ARG1-of (b / breach-01))) 
                        :op3 (e3 / elect-01 
                              :ARG1-of (f / free-41) 
                              :op-of (a3 / and 
                                    :ARG1-of (r / remain-01))) 
                        :poss-of (s2 / scenario)) 
                  :location (e2 / everywhere)) 
            :op2 (u / union)))

# ::snt tre of the gcse has at the same time been answered in a different way which may in the end prove embarrassing to the des and the sec and may seem to promise yet another shift of power
# ::tok tre of the gcse has at the same time been answered in a different way which may in the end prove embarrassing to the des and the sec and may seem to promise yet another shift of power
# ::alignments 37-38|0.0.0.0.0 35-36|0.0.0.0 34-35|0.0.0.0.1 33-34|0.0.0.2 32-33|0.0.0 30-31|0.0.0.1.2 29-30|0.0.0.1.2.1.0+0.0.0.1.2.1 28-29|0.0.0.1 25-26|0.0.0.1.1 20-21|0.0.0.1.0 16-17|0.0.0.1.2.0.0+0.0.0.1.2.0 14-15|0.0 13-14|0.0.1 10-11|0 8-9|0.1 7-8|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:34.606
# ::node	0	answer-01	10-11
# ::node	0.0	way	14-15
# ::node	0.0.0	promise-01	32-33
# ::node	0.0.0.0	shift-01	35-36
# ::node	0.0.0.0.0	power	37-38
# ::node	0.0.0.0.1	another	34-35
# ::node	0.0.0.1	and	28-29
# ::node	0.0.0.1.0	prove-01	20-21
# ::node	0.0.0.1.1	and	25-26
# ::node	0.0.0.1.2	seem-01	30-31
# ::node	0.0.0.1.2.0	date-entity	16-17
# ::node	0.0.0.1.2.0.0	5	16-17
# ::node	0.0.0.1.2.1	date-entity	29-30
# ::node	0.0.0.1.2.1.0	5	29-30
# ::node	0.0.0.2	yet	33-34
# ::node	0.0.1	differ-02	13-14
# ::node	0.1	time	8-9
# ::node	0.1.0	same-41	7-8
# ::root	0	answer-01
# ::edge	and	op1	prove-01	0.0.0.1	0.0.0.1.0	
# ::edge	and	op2	and	0.0.0.1	0.0.0.1.1	
# ::edge	and	op3	seem-01	0.0.0.1	0.0.0.1.2	
# ::edge	and	op4	promise-01	0.0.0.1	0.0.0	
# ::edge	answer-01	ARG1	way	0	0.0	
# ::edge	answer-01	time	time	0	0.1	
# ::edge	date-entity	month	5	0.0.0.1.2.0	0.0.0.1.2.0.0	
# ::edge	date-entity	month	5	0.0.0.1.2.1	0.0.0.1.2.1.0	
# ::edge	differ-02	ARG1	way	0.0.1	0.0	
# ::edge	promise-01	ARG0	way	0.0.0	0.0	
# ::edge	promise-01	ARG1	shift-01	0.0.0	0.0.0.0	
# ::edge	promise-01	time	yet	0.0.0	0.0.0.2	
# ::edge	same-41	ARG1	time	0.1.0	0.1	
# ::edge	seem-01	ARG1	date-entity	0.0.0.1.2	0.0.0.1.2.0	
# ::edge	seem-01	mod	date-entity	0.0.0.1.2	0.0.0.1.2.1	
# ::edge	shift-01	ARG1	power	0.0.0.0	0.0.0.0.0	
# ::edge	shift-01	mod	another	0.0.0.0	0.0.0.0.1	
(a4 / answer-01 
      :ARG1 (w / way 
            :ARG0-of (p2 / promise-01 
                  :ARG1 (s / shift-01 
                        :ARG1 (p / power) 
                        :mod (a / another)) 
                  :op-of (a2 / and 
                        :op1 (p3 / prove-01) 
                        :op2 (a3 / and) 
                        :op3 (s2 / seem-01 
                              :ARG1 (d2 / date-entity 
                                    :month 5) 
                              :mod (d / date-entity 
                                    :month 5))) 
                  :time (y / yet)) 
            :ARG1-of (d3 / differ-02)) 
      :time (t / time 
            :ARG1-of (s3 / same-41)))

# ::snt ring back people when you promise to
# ::tok ring back people when you promise to
# ::alignments 5-6|0.0.0 4-5|0.0.0.0 1-2|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:34.614
# ::node	0	ring	0-1
# ::node	0.0	back	1-2
# ::node	0.0.0	promise-01	5-6
# ::node	0.0.0.0	you	4-5
# ::root	0	ring
# ::edge	promise-01	ARG0	you	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	back	0.0.0	0.0	
# ::edge	ring	direction	back	0	0.0	
(r / ring 
      :direction (b / back 
            :ARG1-of (p / promise-01 
                  :ARG0 (y / you))))

# ::snt where he promised to be kinder education the environment social policy he has been inactive or even cruel
# ::tok where he promised to be kinder education the environment social policy he has been inactive or even cruel
# ::alignments 17-18|0.1.0 15-16|0.1.0.1 11-12|0.1.0.0 10-11|0.1.1.0 9-10|0.1.2 8-9|0.1.1 6-7|0.1 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:34.717
# ::node	0	promise-01	2-3
# ::node	0.0	he	1-2
# ::node	0.1	educate-01	6-7
# ::node	0.1.0	cruel	17-18
# ::node	0.1.0.0	he	11-12
# ::node	0.1.0.1	or	15-16
# ::node	0.1.1	environment	8-9
# ::node	0.1.1.0	policy	10-11
# ::node	0.1.2	society	9-10
# ::root	0	promise-01
# ::edge	cruel	domain	he	0.1.0	0.1.0.0	
# ::edge	educate-01	ARG0	cruel	0.1	0.1.0	
# ::edge	educate-01	ARG1	environment	0.1	0.1.1	
# ::edge	educate-01	ARG2	society	0.1	0.1.2	
# ::edge	or	op1	cruel	0.1.0.1	0.1.0	
# ::edge	policy	poss	environment	0.1.1.0	0.1.1	
# ::edge	promise-01	ARG0	he	0	0.0	
# ::edge	promise-01	ARG1	educate-01	0	0.1	
(p2 / promise-01 
      :ARG0 (h2 / he) 
      :ARG1 (e2 / educate-01 
            :ARG0 (c / cruel 
                  :domain (h / he) 
                  :op-of (o / or)) 
            :ARG1 (e / environment 
                  :poss-of (p / policy)) 
            :ARG2 (s / society)))

# ::snt but 1982 promised more than financial riches
# ::tok but 1982 promised more than financial riches
# ::alignments 6-7|0.0 5-6|0.0.0 2-3|0.1 1-2|0.1.0.0+0.1.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:34.730
# ::node	0	contrast-01	0-1
# ::node	0.0	riches	6-7
# ::node	0.0.0	finance	5-6
# ::node	0.1	promise-01	2-3
# ::node	0.1.0	date-entity	1-2
# ::node	0.1.0.0	1982	1-2
# ::root	0	contrast-01
# ::edge	contrast-01	ARG0	riches	0	0.0	
# ::edge	contrast-01	ARG1	promise-01	0	0.1	
# ::edge	date-entity	year	1982	0.1.0	0.1.0.0	
# ::edge	promise-01	time	date-entity	0.1	0.1.0	
# ::edge	riches	mod	finance	0.0	0.0.0	
(c / contrast-01 
      :ARG0 (r / riches 
            :mod (f / finance)) 
      :ARG1 (p / promise-01 
            :time (d / date-entity 
                  :year 1982)))

# ::snt so much for the professional tightlyrun business that was promised when the new regime took over at spurs in 1983
# ::tok so much for the professional tightlyrun business that was promised when the new regime took over at spurs in 1983
# ::alignments 19-20|0.0.0.0.0.0+0.0.0.0.0 13-14|0 12-13|0.1 9-10|0.0 6-7|0.0.0 4-5|0.0.0.0 1-2|0.0.0.1 0-1|0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:34.777
# ::node	0	regime	13-14
# ::node	0.0	promise-01	9-10
# ::node	0.0.0	business	6-7
# ::node	0.0.0.0	professional	4-5
# ::node	0.0.0.0.0	date-entity	19-20
# ::node	0.0.0.0.0.0	1983	19-20
# ::node	0.0.0.1	much	1-2
# ::node	0.0.0.1.0	so	0-1
# ::node	0.1	new	12-13
# ::root	0	regime
# ::edge	business	mod	much	0.0.0	0.0.0.1	
# ::edge	business	mod	professional	0.0.0	0.0.0.0	
# ::edge	date-entity	year	1983	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	much	degree	so	0.0.0.1	0.0.0.1.0	
# ::edge	professional	poss	date-entity	0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	ARG0	regime	0.0	0	
# ::edge	promise-01	ARG1	business	0.0	0.0.0	
# ::edge	regime	mod	new	0	0.1	
(r / regime 
      :ARG0-of (p / promise-01 
            :ARG1 (b / business 
                  :mod (p2 / professional 
                        :poss (d / date-entity 
                              :year 1983)) 
                  :mod (m / much 
                        :degree (s / so)))) 
      :mod (n / new))

# ::snt in the end hitler promised not to act before 1 october before which in any case his military plans would not mature
# ::tok in the end hitler promised not to act before 1 october before which in any case his military plans would not mature
# ::alignments 21-22|0.1 18-19|0 17-18|0.0 15-16|0.1.2 14-15|0.1.2.0 11-12|0.1.1 10-11|0.1.1.0.0.0+0.1.1.0.0 9-10|0.1.0 8-9|0.1.1.0.1.0 7-8|0.1.1.0.1 4-5|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:34.875
# ::node	0	plan-01	18-19
# ::node	0.0	military	17-18
# ::node	0.1	mature-01	21-22
# ::node	0.1.0	1	9-10
# ::node	0.1.1	before	11-12
# ::node	0.1.1.0	promise-01	4-5
# ::node	0.1.1.0.0	date-entity	10-11
# ::node	0.1.1.0.0.0	10	10-11
# ::node	0.1.1.0.1	act-02	7-8
# ::node	0.1.1.0.1.0	before	8-9
# ::node	0.1.2	case	15-16
# ::node	0.1.2.0	any	14-15
# ::root	0	plan-01
# ::edge	act-02	time	before	0.1.1.0.1	0.1.1.0.1.0	
# ::edge	before	op1	mature-01	0.1.1	0.1	
# ::edge	case	mod	any	0.1.2	0.1.2.0	
# ::edge	date-entity	month	10	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	mature-01	ARG0	plan-01	0.1	0	
# ::edge	mature-01	ARG1	1	0.1	0.1.0	
# ::edge	mature-01	time	case	0.1	0.1.2	
# ::edge	plan-01	ARG0	military	0	0.0	
# ::edge	promise-01	ARG0	date-entity	0.1.1.0	0.1.1.0.0	
# ::edge	promise-01	ARG1	before	0.1.1.0	0.1.1	
# ::edge	promise-01	ARG2	act-02	0.1.1.0	0.1.1.0.1	
(p / plan-01 
      :ARG0 (m2 / military) 
      :ARG0-of (m / mature-01 
            :ARG1 1 
            :op-of (b / before 
                  :ARG1-of (p2 / promise-01 
                        :ARG0 (d / date-entity 
                              :month 10) 
                        :ARG2 (a2 / act-02 
                              :time (b2 / before)))) 
            :time (c / case 
                  :mod (a / any))))

# ::snt he condemned the disgraceful criminal behaviour and promised that the police would make every effort to bring to justice those who committed these appalling crimes
# ::tok he condemned the disgraceful criminal behaviour and promised that the police would make every effort to bring to justice those who committed these appalling crimes
# ::alignments 24-25|0.1 23-24|0.1.0 21-22|0 18-19|0.0.0.1.0.0.0.0 16-17|0.0.0.1.0.0.0 14-15|0.0.0.1.0.0.0.1 13-14|0.0.0.1.0.0.0.1.0 10-11|0.0.0.1.0.0 7-8|0.0.0.1.0 6-7|0.0.0.1 5-6|0.0.0.0 4-5|0.0.0.0.0 3-4|0.0.0.0.1 1-2|0.0.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:35.089
# ::node	0	commit-01	21-22
# ::node	0.0	he	0-1
# ::node	0.0.0	condemn-01	1-2
# ::node	0.0.0.0	behave-01	5-6
# ::node	0.0.0.0.0	crime	4-5
# ::node	0.0.0.0.1	disgrace-01	3-4
# ::node	0.0.0.1	and	6-7
# ::node	0.0.0.1.0	promise-01	7-8
# ::node	0.0.0.1.0.0	police	10-11
# ::node	0.0.0.1.0.0.0	bring-01	16-17
# ::node	0.0.0.1.0.0.0.0	justice	18-19
# ::node	0.0.0.1.0.0.0.1	effort	14-15
# ::node	0.0.0.1.0.0.0.1.0	every	13-14
# ::node	0.1	crime	24-25
# ::node	0.1.0	appall-01	23-24
# ::root	0	commit-01
# ::edge	and	op1	condemn-01	0.0.0.1	0.0.0	
# ::edge	and	op2	promise-01	0.0.0.1	0.0.0.1.0	
# ::edge	appall-01	ARG1	crime	0.1.0	0.1	
# ::edge	behave-01	ARG1	crime	0.0.0.0	0.0.0.0.0	
# ::edge	bring-01	ARG1	police	0.0.0.1.0.0.0	0.0.0.1.0.0	
# ::edge	bring-01	ARG2	justice	0.0.0.1.0.0.0	0.0.0.1.0.0.0.0	
# ::edge	commit-01	ARG0	he	0	0.0	
# ::edge	commit-01	ARG1	crime	0	0.1	
# ::edge	condemn-01	ARG0	he	0.0.0	0.0	
# ::edge	condemn-01	ARG1	behave-01	0.0.0	0.0.0.0	
# ::edge	disgrace-01	ARG1	behave-01	0.0.0.0.1	0.0.0.0	
# ::edge	effort	mod	every	0.0.0.1.0.0.0.1	0.0.0.1.0.0.0.1.0	
# ::edge	effort	purpose	bring-01	0.0.0.1.0.0.0.1	0.0.0.1.0.0.0	
# ::edge	promise-01	ARG0	police	0.0.0.1.0	0.0.0.1.0.0	
(c2 / commit-01 
      :ARG0 (h / he 
            :ARG0-of (c4 / condemn-01 
                  :ARG1 (b2 / behave-01 
                        :ARG1 (c3 / crime) 
                        :ARG1-of (d / disgrace-01)) 
                  :op-of (a2 / and 
                        :op1 (p2 / promise-01 
                              :ARG0 (p / police 
                                    :ARG1-of (b / bring-01 
                                          :ARG2 (j / justice) 
                                          :purpose-of (e / effort 
                                                :mod (e2 / every)))))))) 
      :ARG1 (c / crime 
            :ARG1-of (a / appall-01)))

# ::snt investors have argued that the involvement of the french government which provided cheap land and finance for and is promising a rail link to the project is seen as an insurance project
# ::tok investors have argued that the involvement of the french government which provided cheap land and finance for and is promising a rail link to the project is seen as an insurance project
# ::alignments 31-32|0.0.0.0.1.0 30-31|0.0.0.0.1.0.0 27-28|0.0.0.0.1 25-26|0.3.1.0.0 22-23|0.3.1.0 21-22|0.3.1 19-20|0.3 17-18|0 15-16|0.1.0.0 14-15|0.1.0 13-14|0.2 12-13|0.2.0 11-12|0.1 8-9|0.3.0.0.0+0.3.0.0+0.3.0 5-6|0.0 2-3|0.0.0 0-1|0.0.0.0.0+0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:35.577
# ::node	0	and	17-18
# ::node	0.0	involve-01	5-6
# ::node	0.0.0	argue-01	2-3
# ::node	0.0.0.0	person	0-1
# ::node	0.0.0.0.0	invest-01	0-1
# ::node	0.0.0.0.1	see-01	27-28
# ::node	0.0.0.0.1.0	project	31-32
# ::node	0.0.0.0.1.0.0	insure-02	30-31
# ::node	0.1	provide-01	11-12
# ::node	0.1.0	and	14-15
# ::node	0.1.0.0	finance-01	15-16
# ::node	0.2	land	13-14
# ::node	0.2.0	cheap	12-13
# ::node	0.3	promise-01	19-20
# ::node	0.3.0	country	8-9
# ::node	0.3.0.0	name	8-9
# ::node	0.3.0.0.0	"France"	8-9
# ::node	0.3.1	rail	21-22
# ::node	0.3.1.0	link-01	22-23
# ::node	0.3.1.0.0	project	25-26
# ::root	0	and
# ::edge	and	op1	finance-01	0.1.0	0.1.0.0	
# ::edge	and	op1	provide-01	0	0.1	
# ::edge	and	op2	land	0	0.2	
# ::edge	and	op3	promise-01	0	0.3	
# ::edge	argue-01	ARG0	person	0.0.0	0.0.0.0	
# ::edge	argue-01	ARG1	involve-01	0.0.0	0.0	
# ::edge	country	name	name	0.3.0	0.3.0.0	
# ::edge	invest-01	ARG0	person	0.0.0.0.0	0.0.0.0	
# ::edge	involve-01	ARG1	and	0.0	0	
# ::edge	land	mod	cheap	0.2	0.2.0	
# ::edge	link-01	ARG1	project	0.3.1.0	0.3.1.0.0	
# ::edge	link-01	ARG2	rail	0.3.1.0	0.3.1	
# ::edge	name	op1	"France"	0.3.0.0	0.3.0.0.0	
# ::edge	project	mod	insure-02	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	promise-01	ARG0	country	0.3	0.3.0	
# ::edge	promise-01	ARG1	rail	0.3	0.3.1	
# ::edge	provide-01	ARG1	and	0.1	0.1.0	
# ::edge	see-01	ARG0	person	0.0.0.0.1	0.0.0.0	
# ::edge	see-01	ARG2	project	0.0.0.0.1	0.0.0.0.1.0	
(a / and 
      :ARG1-of (i2 / involve-01 
            :ARG1-of (a3 / argue-01 
                  :ARG0 (p5 / person 
                        :ARG0-of (i3 / invest-01) 
                        :ARG0-of (s / see-01 
                              :ARG2 (p / project 
                                    :mod (i / insure-02)))))) 
      :op1 (p4 / provide-01 
            :ARG1 (a2 / and 
                  :op1 (f / finance-01))) 
      :op2 (l2 / land 
            :mod (c / cheap)) 
      :op3 (p3 / promise-01 
            :ARG0 (c2 / country 
                  :name (n / name 
                        :op1 "France")) 
            :ARG1 (r / rail 
                  :ARG2-of (l / link-01 
                        :ARG1 (p2 / project)))))

# ::snt in short after promising to hit the ground running people wonder why the president has become the leader of the slow is beautiful movement
# ::tok in short after promising to hit the ground running people wonder why the president has become the leader of the slow is beautiful movement
# ::alignments 23-24|0.0.1.0.0.0 22-23|0.0.1.0.0.0.0 17-18|0.0.1.0.0+0.0.1.0 15-16|0.0.1.0.1 13-14|0.1.0+0.1 10-11|0.0.1 7-8|0.0.0 5-6|0.0 3-4|0 2-3|0.2 1-2|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:35.644
# ::node	0	promise-01	3-4
# ::node	0.0	hit-01	5-6
# ::node	0.0.0	ground	7-8
# ::node	0.0.1	wonder-01	10-11
# ::node	0.0.1.0	person	17-18
# ::node	0.0.1.0.0	lead-02	17-18
# ::node	0.0.1.0.0.0	movement	23-24
# ::node	0.0.1.0.0.0.0	beautiful	22-23
# ::node	0.0.1.0.1	become-01	15-16
# ::node	0.1	have-org-role-91	13-14
# ::node	0.1.0	president	13-14
# ::node	0.2	after	2-3
# ::node	0.2.0	short	1-2
# ::root	0	promise-01
# ::edge	after	op1	promise-01	0.2	0	
# ::edge	become-01	ARG1	person	0.0.1.0.1	0.0.1.0	
# ::edge	have-org-role-91	ARG1	promise-01	0.1	0	
# ::edge	have-org-role-91	ARG2	president	0.1	0.1.0	
# ::edge	hit-01	ARG1	ground	0.0	0.0.0	
# ::edge	lead-02	ARG0	person	0.0.1.0.0	0.0.1.0	
# ::edge	lead-02	ARG1	movement	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	movement	mod	beautiful	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	promise-01	ARG1	hit-01	0	0.0	
# ::edge	short	time	after	0.2.0	0.2	
# ::edge	wonder-01	ARG0	person	0.0.1	0.0.1.0	
# ::edge	wonder-01	ARG1	hit-01	0.0.1	0.0	
(p3 / promise-01 
      :ARG1 (h2 / hit-01 
            :ARG1 (g / ground) 
            :ARG1-of (w / wonder-01 
                  :ARG0 (p / person 
                        :ARG0-of (l / lead-02 
                              :ARG1 (m / movement 
                                    :mod (b / beautiful))) 
                        :ARG1-of (b2 / become-01)))) 
      :ARG1-of (h / have-org-role-91 
            :ARG2 (p2 / president)) 
      :op-of (a / after 
            :time-of (s / short)))

# ::snt during the negotiations the bush administration reportedly promised to drop the indictment of noriega and even wrote out a draft court order dismissing the charges
# ::tok during the negotiations the bush administration reportedly promised to drop the indictment of noriega and even wrote out a draft court order dismissing the charges
# ::alignments 22-23|0.1.0 20-21|0.0.1.0.0 19-20|0.0.1.0 16-17|0.1 14-15|0 11-12|0.0.2.1 9-10|0.0.2 7-8|0.0 6-7|0.0.1 5-6|0.0.2.0 4-5|0.0.2.0.0 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:35.852
# ::node	0	and	14-15
# ::node	0.0	promise-01	7-8
# ::node	0.0.0	negotiate-01	2-3
# ::node	0.0.1	report-01	6-7
# ::node	0.0.1.0	draft-01	19-20
# ::node	0.0.1.0.0	court	20-21
# ::node	0.0.2	drop-01	9-10
# ::node	0.0.2.0	administrate-01	5-6
# ::node	0.0.2.0.0	bush-league	4-5
# ::node	0.0.2.1	indict-01	11-12
# ::node	0.1	write-01	16-17
# ::node	0.1.0	dismiss-02	22-23
# ::root	0	and
# ::edge	administrate-01	mod	bush-league	0.0.2.0	0.0.2.0.0	
# ::edge	and	op1	promise-01	0	0.0	
# ::edge	and	op2	write-01	0	0.1	
# ::edge	court	mod	draft-01	0.0.1.0.0	0.0.1.0	
# ::edge	draft-01	ARG1	report-01	0.0.1.0	0.0.1	
# ::edge	drop-01	ARG0	administrate-01	0.0.2	0.0.2.0	
# ::edge	drop-01	ARG1	indict-01	0.0.2	0.0.2.1	
# ::edge	promise-01	ARG1	negotiate-01	0.0	0.0.0	
# ::edge	promise-01	ARG2	drop-01	0.0	0.0.2	
# ::edge	report-01	ARG1	promise-01	0.0.1	0.0	
# ::edge	write-01	ARG1	dismiss-02	0.1	0.1.0	
(a / and 
      :op1 (p / promise-01 
            :ARG1 (n / negotiate-01) 
            :ARG1-of (r / report-01 
                  :ARG1-of (d2 / draft-01 
                        :mod-of (c / court))) 
            :ARG2 (d3 / drop-01 
                  :ARG0 (a2 / administrate-01 
                        :mod (b / bush-league)) 
                  :ARG1 (i / indict-01))) 
      :op2 (w / write-01 
            :ARG1 (d / dismiss-02)))

# ::snt it is an affair which promises to endear the trainer to the nations punters for another season
# ::tok it is an affair which promises to endear the trainer to the nations punters for another season
# ::alignments 16-17|0.0.0.0 15-16|0.0.0 12-13|0 9-10|0.0 5-6|0.0.1 3-4|0.0.1.0 0-1|0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:35.894
# ::node	0	nation	12-13
# ::node	0.0	train-01	9-10
# ::node	0.0.0	another	15-16
# ::node	0.0.0.0	season	16-17
# ::node	0.0.1	promise-01	5-6
# ::node	0.0.1.0	affair	3-4
# ::node	0.0.1.0.0	it	0-1
# ::root	0	nation
(n / nation 
      :ARG1-of (t / train-01 
            :ARG0 (a / another 
                  :mod-of (s / season)) 
            :ARG1-of (p / promise-01 
                  :ARG0 (a2 / affair 
                        :domain (i / it)))))

# ::snt ah this damned war walid promised that all displaced christian civilians would be allowed to return to their homes with appropriate compensation
# ::tok ah this damned war walid promised that all displaced christian civilians would be allowed to return to their homes with appropriate compensation
# ::alignments 21-22|0 20-21|0.2 18-19|0.1.0.0.2 13-14|0.1.0.0.0 10-11|0.1.0.0 9-10|0.1.0.0.1.0.0+0.1.0.0.1.0+0.1.0.0.1 8-9|0.1.0+0.1 7-8|0.0 5-6|0.1.0.0.0.1 3-4|0.1.0.0.0.1.0 2-3|0.1.0.0.0.1.0.0 1-2|0.3 0-1|0.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:36.395
# ::node	0	compensate-01	21-22
# ::node	0.0	all	7-8
# ::node	0.1	person	8-9
# ::node	0.1.0	displace-01	8-9
# ::node	0.1.0.0	civilian	10-11
# ::node	0.1.0.0.0	allow-01	13-14
# ::node	0.1.0.0.0.0	ah	0-1
# ::node	0.1.0.0.0.1	promise-01	5-6
# ::node	0.1.0.0.0.1.0	war	3-4
# ::node	0.1.0.0.0.1.0.0	damn-01	2-3
# ::node	0.1.0.0.1	religious-group	9-10
# ::node	0.1.0.0.1.0	name	9-10
# ::node	0.1.0.0.1.0.0	"Christian"	9-10
# ::node	0.1.0.0.2	home	18-19
# ::node	0.2	appropriate	20-21
# ::node	0.3	this	1-2
# ::root	0	compensate-01
# ::edge	allow-01	ARG0	ah	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	allow-01	ARG1	civilian	0.1.0.0.0	0.1.0.0	
# ::edge	civilian	mod	religious-group	0.1.0.0	0.1.0.0.1	
# ::edge	compensate-01	ARG0	all	0	0.0	
# ::edge	compensate-01	ARG2	person	0	0.1	
# ::edge	compensate-01	mod	appropriate	0	0.2	
# ::edge	damn-01	ARG1	war	0.1.0.0.0.1.0.0	0.1.0.0.0.1.0	
# ::edge	displace-01	ARG0	civilian	0.1.0	0.1.0.0	
# ::edge	displace-01	ARG1	person	0.1.0	0.1	
# ::edge	home	op1	civilian	0.1.0.0.2	0.1.0.0	
# ::edge	name	op1	"Christian"	0.1.0.0.1.0	0.1.0.0.1.0.0	
# ::edge	promise-01	ARG0	war	0.1.0.0.0.1	0.1.0.0.0.1.0	
# ::edge	promise-01	ARG1	allow-01	0.1.0.0.0.1	0.1.0.0.0	
# ::edge	religious-group	name	name	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	this	op1	compensate-01	0.3	0	
(c / compensate-01 
      :ARG0 (a3 / all) 
      :ARG2 (p / person 
            :ARG1-of (d / displace-01 
                  :ARG0 (c2 / civilian 
                        :ARG1-of (a2 / allow-01 
                              :ARG0 (a4 / ah) 
                              :ARG1-of (p2 / promise-01 
                                    :ARG0 (w / war 
                                          :ARG1-of (d2 / damn-01)))) 
                        :mod (r / religious-group 
                              :name (n / name 
                                    :op1 "Christian")) 
                        :op-of (h / home)))) 
      :mod (a / appropriate) 
      :op-of (t / this))

# ::snt not surprisingly a box number has to be written to for a course in witchcraft promising tuition by the worlds foremost witches
# ::tok not surprisingly a box number has to be written to for a course in witchcraft promising tuition by the worlds foremost witches
# ::alignments 20-21|0 19-20|0.0.0 16-17|0.0.1.0.0 15-16|0.0.1.0 8-9|0.0.1.1 4-5|0.0.1 3-4|0.0.1.2 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:36.443
# ::node	0	foremost	20-21
# ::node	0.0	surprise-01	1-2
# ::node	0.0.0	world	19-20
# ::node	0.0.1	number	4-5
# ::node	0.0.1.0	promise-01	15-16
# ::node	0.0.1.0.0	tuition	16-17
# ::node	0.0.1.1	write-01	8-9
# ::node	0.0.1.2	box	3-4
# ::root	0	foremost
(f / foremost 
      :ARG0-of (s / surprise-01 
            :ARG1 (w / world) 
            :time-of (n / number 
                  :ARG0-of (p / promise-01 
                        :ARG1 (t / tuition)) 
                  :ARG1-of (w2 / write-01) 
                  :mod (b / box))))

# ::snt while it is possible to buy the original artwork for an illustration by contacting a cartoonist through a publication the cartoon gallery promises to shorten the process by doing that for you
# ::tok while it is possible to buy the original artwork for an illustration by contacting a cartoonist through a publication the cartoon gallery promises to shorten the process by doing that for you
# ::alignments 31-32|0.0.1.0.0 28-29|0.0.0.0 26-27|0.0.0 22-23|0.0 20-21|0 18-19|0.0.1 13-14|0.0.1.0 11-12|0.0.1.0.1 7-8|0.0.0.0.0 5-6|0.0.1.0.2 3-4|0.0.1.0.2.1 1-2|0.0.1.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:36.696
# ::node	0	cartoon	20-21
# ::node	0.0	promise-01	22-23
# ::node	0.0.0	process	26-27
# ::node	0.0.0.0	do-02	28-29
# ::node	0.0.0.0.0	original	7-8
# ::node	0.0.1	publication	18-19
# ::node	0.0.1.0	contact-01	13-14
# ::node	0.0.1.0.0	you	31-32
# ::node	0.0.1.0.1	illustrate-01	11-12
# ::node	0.0.1.0.2	buy-01	5-6
# ::node	0.0.1.0.2.0	it	1-2
# ::node	0.0.1.0.2.1	possible	3-4
# ::root	0	cartoon
(c / cartoon 
      :ARG0-of (p2 / promise-01 
            :ARG1 (p / process 
                  :ARG0-of (d / do-02 
                        :op-of (o / original))) 
            :time (p3 / publication 
                  :ARG1-of (c2 / contact-01 
                        :ARG0 (y / you) 
                        :ARG1-of (i / illustrate-01) 
                        :ARG2-of (b / buy-01 
                              :ARG0 (i2 / it) 
                              :domain-of (p4 / possible))))))

# ::snt yet consenting and promising while overlapping are not the same, according to simmons consenting differs from promising in two ways first consent in the strict sense is always given to the actions of other persons
# ::tok yet consenting and promising while overlapping are not the same , according to simmons consenting differs from promising in two ways first consent in the strict sense is always given to the actions of other persons
# ::alignments 35-36|0.1.0.0.0.0.0 34-35|0.1.0.0.0.0.0.0 32-33|0.1.0.0.0.0 29-30|0.1.0.0.0 28-29|0.1.0.0.0.1 26-27|0.1.0.0 25-26|0.1.0.0.1 22-23|0.1.0 20-21|0.0.0.1 19-20|0.0.0.1.0 17-18|0.0.0 14-15|0.0.0.0 9-10|0.2 3-4|0.1 2-3|0 1-2|0.0 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:37.000
# ::node	0	and	2-3
# ::node	0.0	consent-01	1-2
# ::node	0.0.0	promise-01	17-18
# ::node	0.0.0.0	consent-01	14-15
# ::node	0.0.0.1	way	20-21
# ::node	0.0.0.1.0	2	19-20
# ::node	0.0.1	yet	0-1
# ::node	0.1	promise-01	3-4
# ::node	0.1.0	consent-01	22-23
# ::node	0.1.0.0	sense	26-27
# ::node	0.1.0.0.0	give-01	29-30
# ::node	0.1.0.0.0.0	action	32-33
# ::node	0.1.0.0.0.0.0	person	35-36
# ::node	0.1.0.0.0.0.0.0	other	34-35
# ::node	0.1.0.0.0.1	always	28-29
# ::node	0.1.0.0.1	strict	25-26
# ::node	0.2	same-41	9-10
# ::root	0	and
# ::edge	action	poss	person	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	and	op1	consent-01	0	0.0	
# ::edge	and	op2	promise-01	0	0.1	
# ::edge	and	op3	same-41	0	0.2	
# ::edge	consent-01	ARG0	sense	0.1.0	0.1.0.0	
# ::edge	consent-01	time	yet	0.0	0.0.1	
# ::edge	give-01	ARG1	sense	0.1.0.0.0	0.1.0.0	
# ::edge	give-01	ARG2	action	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	give-01	time	always	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	person	mod	other	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	promise-01	ARG0	consent-01	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG0	consent-01	0.1	0.1.0	
# ::edge	promise-01	ARG1	consent-01	0.0.0	0.0	
# ::edge	promise-01	ARG2	way	0.0.0	0.0.0.1	
# ::edge	sense	mod	strict	0.1.0.0	0.1.0.0.1	
# ::edge	way	quant	2	0.0.0.1	0.0.0.1.0	
(a3 / and 
      :op1 (c3 / consent-01 
            :ARG1-of (p2 / promise-01 
                  :ARG0 (c2 / consent-01) 
                  :ARG2 (w / way 
                        :quant 2)) 
            :time (y / yet)) 
      :op2 (p3 / promise-01 
            :ARG0 (c / consent-01 
                  :ARG0 (s / sense 
                        :ARG1-of (g / give-01 
                              :ARG2 (a / action 
                                    :poss (p / person 
                                          :mod (o / other))) 
                              :time (a2 / always)) 
                        :mod (s2 / strict)))) 
      :op3 (s3 / same-41))

# ::snt this year trading conditions promise to be no less difficult but the board expects all its companies to operate creditably
# ::tok this year trading conditions promise to be no less difficult but the board expects all its companies to operate creditably
# ::alignments 18-19|0.1.0.0 16-17|0.1.0 14-15|0.1.0.1 13-14|0.1 10-11|0 9-10|0.0 8-9|0.0.1 7-8|0.0.1.0 4-5|0.0.0 3-4|0.0.0.0 2-3|0.0.0.0.0 1-2|0.0.0.0.1.0 0-1|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:37.162
# ::node	0	contrast-01	10-11
# ::node	0.0	difficult	9-10
# ::node	0.0.0	promise-01	4-5
# ::node	0.0.0.0	condition	3-4
# ::node	0.0.0.0.0	trade-01	2-3
# ::node	0.0.0.0.1	this	0-1
# ::node	0.0.0.0.1.0	year	1-2
# ::node	0.0.1	less	8-9
# ::node	0.0.1.0	-	7-8
# ::node	0.1	expect-01	13-14
# ::node	0.1.0	company	16-17
# ::node	0.1.0.0	operate-01	18-19
# ::node	0.1.0.1	all	14-15
# ::root	0	contrast-01
# ::edge	company	quant	all	0.1.0	0.1.0.1	
# ::edge	condition	mod	this	0.0.0.0	0.0.0.0.1	
# ::edge	condition	mod	trade-01	0.0.0.0	0.0.0.0.0	
# ::edge	contrast-01	ARG1	difficult	0	0.0	
# ::edge	contrast-01	ARG2	expect-01	0	0.1	
# ::edge	difficult	degree	less	0.0	0.0.1	
# ::edge	expect-01	ARG1	company	0.1	0.1.0	
# ::edge	less	polarity	-	0.0.1	0.0.1.0	
# ::edge	operate-01	ARG0	company	0.1.0.0	0.1.0	
# ::edge	promise-01	ARG0	condition	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	difficult	0.0.0	0.0	
# ::edge	year	mod	this	0.0.0.0.1.0	0.0.0.0.1	
(c2 / contrast-01 
      :ARG1 (d / difficult 
            :ARG1-of (p / promise-01 
                  :ARG0 (c3 / condition 
                        :mod (t / trade-01) 
                        :mod (t2 / this 
                              :mod-of (y / year)))) 
            :degree (l / less 
                  :polarity (- / -))) 
      :ARG2 (e / expect-01 
            :ARG1 (c / company 
                  :ARG0-of (o / operate-01) 
                  :quant (a / all))))

# ::snt his style as a charismatic evangelical who emphasises personal conversion promises to be very different from that of his predecessor dr robert runcie a liberal anglocatholic
# ::tok his style as a charismatic evangelical who emphasises personal conversion promises to be very different from that of his predecessor dr robert runcie a liberal anglocatholic
# ::alignments 24-25|0.0 14-15|0.1 13-14|0.1.1 10-11|0 9-10|0.2 8-9|0.2.0 5-6|0.1.0 4-5|0.1.0.0 1-2|0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:37.217
# ::node	0	promise-01	10-11
# ::node	0.0	liberal	24-25
# ::node	0.1	differ-02	14-15
# ::node	0.1.0	evangelical	5-6
# ::node	0.1.0.0	charisma	4-5
# ::node	0.1.0.1	style	1-2
# ::node	0.1.1	very	13-14
# ::node	0.2	convert-01	9-10
# ::node	0.2.0	personal	8-9
# ::root	0	promise-01
# ::edge	convert-01	mod	personal	0.2	0.2.0	
# ::edge	differ-02	ARG0	evangelical	0.1	0.1.0	
# ::edge	differ-02	ARG1	promise-01	0.1	0	
# ::edge	differ-02	degree	very	0.1	0.1.1	
# ::edge	evangelical	mod	charisma	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG1	liberal	0	0.0	
# ::edge	promise-01	time	convert-01	0	0.2	
# ::edge	style	poss	evangelical	0.1.0.1	0.1.0	
(p / promise-01 
      :ARG1 (l / liberal) 
      :ARG1-of (d / differ-02 
            :ARG0 (e / evangelical 
                  :mod (c2 / charisma) 
                  :poss-of (s / style)) 
            :degree (v / very)) 
      :time (c / convert-01 
            :mod (p2 / personal)))

# ::snt   violation of the duty not to interfere with a persons promising will frustrate his right to promise and the interest on which it is base either by preventing the person from exercising his rights or by perverting the considerations on which he decides whether to promise or not
# ::tok violation of the duty not to interfere with a persons promising will frustrate his right to promise and the interest on which it is base either by preventing the person from exercising his rights or by perverting the considerations on which he decides whether to promise or not
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:37.218
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt indosuez has conditionally promised not to do this for 12 months
# ::tok indosuez has conditionally promised not to do this for 12 months
# ::alignments 10-11|0.0.1+0.0 9-10|0.0.0 7-8|0.1 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:37.237
# ::node	0	promise-01	3-4
# ::node	0.0	temporal-quantity	10-11
# ::node	0.0.0	12	9-10
# ::node	0.0.1	month	10-11
# ::node	0.1	this	7-8
# ::root	0	promise-01
# ::edge	promise-01	ARG0	temporal-quantity	0	0.0	
# ::edge	promise-01	ARG1	this	0	0.1	
# ::edge	temporal-quantity	quant	12	0.0	0.0.0	
# ::edge	temporal-quantity	unit	month	0.0	0.0.1	
(p / promise-01 
      :ARG0 (t / temporal-quantity 
            :quant 12 
            :unit (m / month)) 
      :ARG1 (t2 / this))

# ::snt   the tories had promised bigger incomes and delivered bigger debts
# ::tok the tories had promised bigger incomes and delivered bigger debts
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:37.237
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt in the course of 1970s leftist guerrillas filtered into the region and promised to help the indians in their struggle against local landlords for land and respect for their traditions
# ::tok in the course of 1970s leftist guerrillas filtered into the region and promised to help the indians in their struggle against local landlords for land and respect for their traditions
# ::alignments 29-30|0.1 26-27|0.2 25-26|0 24-25|0.0.1 21-22|0.0.2 19-20|0.0 14-15|0.0.0 12-13|0.0.0.1 11-12|0.0.0.1.0 10-11|0.0.0.0.0.0 7-8|0.0.0.0.0 6-7|0.0.0.0 5-6|0.0.0.0.1 4-5|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:37.400
# ::node	0	and	25-26
# ::node	0.0	struggle-01	19-20
# ::node	0.0.0	help-01	14-15
# ::node	0.0.0.0	guerrilla	6-7
# ::node	0.0.0.0.0	filter-02	7-8
# ::node	0.0.0.0.0.0	region	10-11
# ::node	0.0.0.0.1	leftist	5-6
# ::node	0.0.0.1	promise-01	12-13
# ::node	0.0.0.1.0	and	11-12
# ::node	0.0.1	land	24-25
# ::node	0.0.2	local	21-22
# ::node	0.1	tradition	29-30
# ::node	0.2	respect-01	26-27
# ::node	0.2.0	1970	4-5
# ::root	0	and
# ::edge	and	mod	tradition	0	0.1	
# ::edge	and	op1	promise-01	0.0.0.1.0	0.0.0.1	
# ::edge	and	op1	respect-01	0	0.2	
# ::edge	filter-02	ARG0	region	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	filter-02	ARG1	guerrilla	0.0.0.0.0	0.0.0.0	
# ::edge	guerrilla	mod	leftist	0.0.0.0	0.0.0.0.1	
# ::edge	help-01	ARG1	guerrilla	0.0.0	0.0.0.0	
# ::edge	help-01	ARG2	struggle-01	0.0.0	0.0	
# ::edge	promise-01	ARG1	help-01	0.0.0.1	0.0.0	
# ::edge	respect-01	ARG1	1970	0.2	0.2.0	
# ::edge	struggle-01	ARG1	and	0.0	0	
# ::edge	struggle-01	location	land	0.0	0.0.1	
# ::edge	struggle-01	location	local	0.0	0.0.2	
(a / and 
      :ARG1-of (s / struggle-01 
            :ARG2-of (h / help-01 
                  :ARG1 (g / guerrilla 
                        :ARG1-of (f / filter-02 
                              :ARG0 (r2 / region)) 
                        :mod (l3 / leftist)) 
                  :ARG1-of (p / promise-01 
                        :op-of (a2 / and))) 
            :location (l / land) 
            :location (l2 / local)) 
      :mod (t / tradition) 
      :op1 (r / respect-01 
            :ARG1 1970))

# ::snt the identity card scheme for football fans will not be implemented until the government is satisfied that the turnstile technology is workable efficient and safe the minister for sport promised last night
# ::tok the identity card scheme for football fans will not be implemented until the government is satisfied that the turnstile technology is workable efficient and safe the minister for sport promised last night
# ::alignments 31-32|0.1.1.0.1 30-31|0.1.1.0.1.1 29-30|0.1.1.0 28-29|0.1.1 26-27|0.1.1.0.0+0.1.1.0.0.0 24-25|0.1 23-24|0 22-23|0.0 19-20|0.1.0 15-16|0.1.1.0.1.0.0.0 11-12|0.1.1.0.1.0.2 10-11|0.1.1.0.1.0 6-7|0.1.1.0.1.0.1 5-6|0.1.1.0.1.0.1.0 3-4|0.1.1.0.1.0.0 2-3|0.1.1.0.1.0.0.1 1-2|0.1.1.0.1.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:37.729
# ::node	0	and	23-24
# ::node	0.0	efficiency	22-23
# ::node	0.1	safe-41	24-25
# ::node	0.1.0	technology	19-20
# ::node	0.1.1	sport	28-29
# ::node	0.1.1.0	promise-01	29-30
# ::node	0.1.1.0.0	minister	26-27
# ::node	0.1.1.0.0.0	have-org-role-91	26-27
# ::node	0.1.1.0.1	night	31-32
# ::node	0.1.1.0.1.0	implement-01	10-11
# ::node	0.1.1.0.1.0.0	scheme	3-4
# ::node	0.1.1.0.1.0.0.0	satisfy-01	15-16
# ::node	0.1.1.0.1.0.0.1	card	2-3
# ::node	0.1.1.0.1.0.0.1.0	identity	1-2
# ::node	0.1.1.0.1.0.1	fan	6-7
# ::node	0.1.1.0.1.0.1.0	football	5-6
# ::node	0.1.1.0.1.0.2	until	11-12
# ::node	0.1.1.0.1.1	last	30-31
# ::root	0	and
# ::edge	and	op1	efficiency	0	0.0	
# ::edge	and	op2	safe-41	0	0.1	
# ::edge	card	mod	identity	0.1.1.0.1.0.0.1	0.1.1.0.1.0.0.1.0	
# ::edge	fan	mod	football	0.1.1.0.1.0.1	0.1.1.0.1.0.1.0	
# ::edge	have-org-role-91	ARG2	minister	0.1.1.0.0.0	0.1.1.0.0	
# ::edge	implement-01	ARG0	night	0.1.1.0.1.0	0.1.1.0.1	
# ::edge	implement-01	ARG1	scheme	0.1.1.0.1.0	0.1.1.0.1.0.0	
# ::edge	implement-01	ARG2	fan	0.1.1.0.1.0	0.1.1.0.1.0.1	
# ::edge	implement-01	time	until	0.1.1.0.1.0	0.1.1.0.1.0.2	
# ::edge	night	mod	last	0.1.1.0.1	0.1.1.0.1.1	
# ::edge	promise-01	ARG0	sport	0.1.1.0	0.1.1	
# ::edge	promise-01	ARG1	minister	0.1.1.0	0.1.1.0.0	
# ::edge	promise-01	time	night	0.1.1.0	0.1.1.0.1	
# ::edge	safe-41	ARG0	technology	0.1	0.1.0	
# ::edge	safe-41	ARG1	sport	0.1	0.1.1	
# ::edge	satisfy-01	ARG1	scheme	0.1.1.0.1.0.0.0	0.1.1.0.1.0.0	
# ::edge	scheme	mod	card	0.1.1.0.1.0.0	0.1.1.0.1.0.0.1	
(a / and 
      :op1 (e / efficiency) 
      :op2 (s2 / safe-41 
            :ARG0 (t / technology) 
            :ARG1 (s / sport 
                  :ARG0-of (p / promise-01 
                        :ARG1 (m / minister 
                              :ARG2-of (h / have-org-role-91)) 
                        :time (n / night 
                              :ARG0-of (i / implement-01 
                                    :ARG1 (s4 / scheme 
                                          :ARG1-of (s3 / satisfy-01) 
                                          :mod (c / card 
                                                :mod (i2 / identity))) 
                                    :ARG2 (f / fan 
                                          :mod (f2 / football)) 
                                    :time (u / until)) 
                              :mod (l / last))))))

# ::snt the government promised to take action to prevent police officers avoiding disciplinary charges by retiring prematurely on medical grounds
# ::tok the government promised to take action to prevent police officers avoiding disciplinary charges by retiring prematurely on medical grounds
# ::alignments 18-19|0.0.0.0.0.0 17-18|0.0.0.0.0.0.0 15-16|0 11-12|0.0.1 10-11|0.0.0 9-10|0.0.0.0+0.0.0.0.0 8-9|0.0.0.0.0.1 7-8|0.0 5-6|0.0.2 2-3|0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:37.813
# ::node	0	premature	15-16
# ::node	0.0	prevent-01	7-8
# ::node	0.0.0	avoid-01	10-11
# ::node	0.0.0.0	officer	9-10
# ::node	0.0.0.0.0	have-org-role-91	9-10
# ::node	0.0.0.0.0.0	ground	18-19
# ::node	0.0.0.0.0.0.0	medicine	17-18
# ::node	0.0.0.0.0.1	police	8-9
# ::node	0.0.1	discipline	11-12
# ::node	0.0.2	action	5-6
# ::node	0.0.2.0	promise-01	2-3
# ::root	0	premature
(p / premature 
      :ARG0-of (p3 / prevent-01 
            :ARG1 (a / avoid-01 
                  :ARG1 (o / officer 
                        :ARG2-of (h / have-org-role-91 
                              :ARG0 (g / ground 
                                    :mod (m / medicine)) 
                              :ARG1 (p2 / police)))) 
            :domain-of (d / discipline) 
            :purpose-of (a2 / action 
                  :ARG1-of (p4 / promise-01))))

# ::snt 9509 promise-v 800891 Promising 537527
# ::tok 9509 promise - v 800891 Promising 537527
# ::alignments 6-7|0.0.2+0.0.1+0.0.0+0.0 4-5|0.1.0.2+0.1.0.1+0.1.0.0+0.1.0 1-2|0 0-1|0.1.1+0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:37.848
# ::node	0	promise-01	1-2
# ::node	0.0	date-entity	6-7
# ::node	0.0.0	27	6-7
# ::node	0.0.1	75	6-7
# ::node	0.0.2	53	6-7
# ::node	0.1	date-entity	0-1
# ::node	0.1.0	date-entity	4-5
# ::node	0.1.0.0	91	4-5
# ::node	0.1.0.1	8	4-5
# ::node	0.1.0.2	80	4-5
# ::node	0.1.1	9509	0-1
# ::root	0	promise-01
# ::edge	date-entity	day	27	0.0	0.0.0	
# ::edge	date-entity	day	91	0.1.0	0.1.0.0	
# ::edge	date-entity	month	75	0.0	0.0.1	
# ::edge	date-entity	month	8	0.1.0	0.1.0.1	
# ::edge	date-entity	name	date-entity	0.1	0.1.0	
# ::edge	date-entity	year	53	0.0	0.0.2	
# ::edge	date-entity	year	80	0.1.0	0.1.0.2	
# ::edge	date-entity	year	9509	0.1	0.1.1	
# ::edge	promise-01	ARG1	date-entity	0	0.0	
# ::edge	promise-01	time	date-entity	0	0.1	
(p / promise-01 
      :ARG1 (d / date-entity 
            :day 27 
            :month 75 
            :year 53) 
      :time (d3 / date-entity 
            :name (d2 / date-entity 
                  :day 91 
                  :month 8 
                  :year 80) 
            :year 9509))

# ::snt  Promises quite often concern the actions of others: to consent to be governed by another is to promise to obey him; to consent to his joining the expedition is to promise to provide him with the facilities and the help made available to members of the expedition.  Finally these examples in which to consent is to promise refute the suggestion that in one case the purpose is to confer rights and in the other to undertake an obligation. Promising differs from consenting in two respects.
# ::tok Promises quite often concern the actions of others : to consent to be governed by another is to promise to obey him ; to consent to his joining the expedition is to promise to provide him with the facilities and the help made available to members of the expedition . Finally these examples in which to consent is to promise refute the suggestion that in one case the purpose is to confer rights and in the other to undertake an obligation . Promising differs from consenting in two respects .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:37.849
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt EMPTY_SENTENCE
# ::tok EMPTY_SENTENCE
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:37.851
# ::node	0	amr-empty	0-1
# ::root	0	amr-empty
(a / amr-empty)

# ::snt so i promised i wouldnt go out with him again
# ::tok so i promised i wouldnt go out with him again
# ::alignments 9-10|0.3 3-4|0.2 2-3|0 1-2|0.0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:37.898
# ::node	0	promise-01	2-3
# ::node	0.0	i	1-2
# ::node	0.1	so	0-1
# ::node	0.2	i	3-4
# ::node	0.3	again	9-10
# ::root	0	promise-01
# ::edge	promise-01	ARG0	i	0	0.0	
# ::edge	promise-01	ARG2	so	0	0.1	
# ::edge	promise-01	instrument	i	0	0.2	
# ::edge	promise-01	manner	again	0	0.3	
(p / promise-01 
      :ARG0 (i2 / i) 
      :ARG2 (s / so) 
      :instrument (i / i) 
      :manner (a / again))

# ::snt more details of this are promised later this summer
# ::tok more details of this are promised later this summer
# ::alignments 8-9|0.1.0 7-8|0.1.0.0 6-7|0.1 5-6|0 3-4|0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:37.916
# ::node	0	promise-01	5-6
# ::node	0.0	detail-01	1-2
# ::node	0.0.0	this	3-4
# ::node	0.1	late	6-7
# ::node	0.1.0	summer	8-9
# ::node	0.1.0.0	this	7-8
# ::root	0	promise-01
# ::edge	detail-01	ARG1	this	0.0	0.0.0	
# ::edge	late	op1	summer	0.1	0.1.0	
# ::edge	promise-01	ARG1	detail-01	0	0.0	
# ::edge	promise-01	time	late	0	0.1	
# ::edge	summer	mod	this	0.1.0	0.1.0.0	
(p / promise-01 
      :ARG1 (d / detail-01 
            :ARG1 (t2 / this)) 
      :time (l / late 
            :op1 (s / summer 
                  :mod (t / this))))

# ::snt we are dedicated to the exportoriented economy promised wu binghui the director of the provincial capitals commission for foreign economic relations and trade
# ::tok we are dedicated to the exportoriented economy promised wu binghui the director of the provincial capitals commission for foreign economic relations and trade
# ::alignments 22-23|0.1 21-22|0 20-21|0.0 19-20|0.0.0 18-19|0.1.1 16-17|0.0.1 14-15|0.0.1.1 11-12|0.0.1.0.0+0.0.1.0 7-8|0.1.0.0.0.0 6-7|0.1.0.0.0 2-3|0.1.0.0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:38.324
# ::node	0	and	21-22
# ::node	0.0	relation	20-21
# ::node	0.0.0	economy	19-20
# ::node	0.0.1	commission	16-17
# ::node	0.0.1.0	have-org-role-91	11-12
# ::node	0.0.1.0.0	director	11-12
# ::node	0.0.1.1	province	14-15
# ::node	0.1	trade-01	22-23
# ::node	0.1.0	we	0-1
# ::node	0.1.0.0	dedicate-01	2-3
# ::node	0.1.0.0.0	economy	6-7
# ::node	0.1.0.0.0.0	promise-01	7-8
# ::node	0.1.1	foreign	18-19
# ::root	0	and
# ::edge	and	op1	relation	0	0.0	
# ::edge	and	op2	trade-01	0	0.1	
# ::edge	commission	mod	province	0.0.1	0.0.1.1	
# ::edge	commission	topic	relation	0.0.1	0.0	
# ::edge	dedicate-01	ARG0	we	0.1.0.0	0.1.0	
# ::edge	dedicate-01	ARG2	economy	0.1.0.0	0.1.0.0.0	
# ::edge	have-org-role-91	ARG1	commission	0.0.1.0	0.0.1	
# ::edge	have-org-role-91	ARG2	director	0.0.1.0	0.0.1.0.0	
# ::edge	promise-01	ARG1	economy	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	relation	mod	economy	0.0	0.0.0	
# ::edge	trade-01	ARG0	we	0.1	0.1.0	
# ::edge	trade-01	mod	foreign	0.1	0.1.1	
(a / and 
      :op1 (r / relation 
            :mod (e / economy) 
            :topic-of (c / commission 
                  :ARG1-of (h / have-org-role-91 
                        :ARG2 (d / director)) 
                  :mod (p / province))) 
      :op2 (t / trade-01 
            :ARG0 (w / we 
                  :ARG0-of (d2 / dedicate-01 
                        :ARG2 (e2 / economy 
                              :ARG1-of (p2 / promise-01)))) 
            :mod (f / foreign)))

# ::snt reflection on the analogous case of promises dispels this impression, there are times when making a certain promise say to look after a friends child if the friend dies before the child comes of age are morally worthwhile but where one does not have an obligation to make them remember that in this example too one may find other adequate ways to help ones friend, certainly one is not under an obligation to look after the child if one did not promise to do so just because it would have been a good thing to promise
# ::tok reflection on the analogous case of promises dispels this impression , there are times when making a certain promise say to look after a friends child if the friend dies before the child comes of age are morally worthwhile but where one does not have an obligation to make them remember that in this example too one may find other adequate ways to help ones friend , certainly one is not under an obligation to look after the child if one did not promise to do so just because it would have been a good thing to promise
# ::alignments 97-98|0.0.0.0.0.0.1.0.0.0.0 95-96|0.0.0.0.0.0.1.0.0.0 94-95|0.0.0.0.0.0.1.0.0 89-90|0.0.0.0.0.0.1.1.0.1.0 88-89|0.0.0.0.0.0.1.1.0.1 87-88|0.0.0.0.0.0.1.1.0 86-87|0.0.0.0.0.0.1.1.0.0 83-84|0.0.0.0.0.0.1.1 78-79|0.0.0.0.0.0.1 76-77|0.0.0.0.0.0.1.2 73-74|0.0.0.0.0.0.1.0 67-68|0.0.0.0.0.0.1.0.1 65-66|0.0.0.0.0.0.2+0.0.0.0.0.0 64-65|0.0.0.0.0 63-64|0.0.0.0 61-62|0.0.0.0.1 60-61|0.0.0.0.1.0 59-60|0.0.0.0.1.1 57-58|0.0.0.1+0.0.0 55-56|0.1.0.0.0.1.0.0.0.0 54-55|0.0.0.0.0.0.0 53-54|0.0.0.0.0.0.0.0 50-51|0.0 46-47|0 39-40|0.1.0.0.0.1.1.0.0 38-39|0.1.0.0.0.1.1.0 37-38|0.1.0.0.0.1.1.0.1 35-36|0.1.0.0.0.1.0.0.0 32-33|0.1.0.0.0.1.0.0 30-31|0.1.0.0.0.1 29-30|0.1.0.0.0.1.0 28-29|0.1.0.0.0.1.1.2+0.1.0.0.0.1.1 25-26|0.1.0 24-25|0.1.1+0.1 22-23|0.1.0.0 19-20|0.1.0.0.0 18-19|0.1.0.0.0.0 17-18|0.1.0.0.0.0.0 9-10|0.1.0.0.0.1.1.0.0.0 8-9|0.1.0.0.0.1.1.0.0.0.0 6-7|0.1.0.0.0.1.1.1 4-5|0.1.0.0.0.1.1.1.0 0-1|0.1.0.0.0.1.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:41.077
# ::node	0	obligate-01	46-47
# ::node	0.0	remember-01	50-51
# ::node	0.0.0	date-entity	57-58
# ::node	0.0.0.0	help-01	63-64
# ::node	0.0.0.0.0	one	64-65
# ::node	0.0.0.0.0.0	have-rel-role-91	65-66
# ::node	0.0.0.0.0.0.0	example	54-55
# ::node	0.0.0.0.0.0.0.0	this	53-54
# ::node	0.0.0.0.0.0.1	child	78-79
# ::node	0.0.0.0.0.0.1.0	obligate-01	73-74
# ::node	0.0.0.0.0.0.1.0.0	good	94-95
# ::node	0.0.0.0.0.0.1.0.0.0	thing	95-96
# ::node	0.0.0.0.0.0.1.0.0.0.0	promise-01	97-98
# ::node	0.0.0.0.0.0.1.0.1	certain	67-68
# ::node	0.0.0.0.0.0.1.1	promise-01	83-84
# ::node	0.0.0.0.0.0.1.1.0	just	87-88
# ::node	0.0.0.0.0.0.1.1.0.0	so	86-87
# ::node	0.0.0.0.0.0.1.1.0.1	cause-01	88-89
# ::node	0.0.0.0.0.0.1.1.0.1.0	it	89-90
# ::node	0.0.0.0.0.0.1.2	after	76-77
# ::node	0.0.0.0.0.0.2	friend	65-66
# ::node	0.0.0.0.1	way	61-62
# ::node	0.0.0.0.1.0	adequate	60-61
# ::node	0.0.0.0.1.1	other	59-60
# ::node	0.0.0.1	5	57-58
# ::node	0.1	have-rel-role-91	24-25
# ::node	0.1.0	child	25-26
# ::node	0.1.0.0	after	22-23
# ::node	0.1.0.0.0	say-01	19-20
# ::node	0.1.0.0.0.0	promise-01	18-19
# ::node	0.1.0.0.0.0.0	certain	17-18
# ::node	0.1.0.0.0.1	before	30-31
# ::node	0.1.0.0.0.1.0	die-01	29-30
# ::node	0.1.0.0.0.1.0.0	child	32-33
# ::node	0.1.0.0.0.1.0.0.0	age-01	35-36
# ::node	0.1.0.0.0.1.0.0.0.0	too	55-56
# ::node	0.1.0.0.0.1.1	have-rel-role-91	28-29
# ::node	0.1.0.0.0.1.1.0	worthwhile	38-39
# ::node	0.1.0.0.0.1.1.0.0	contrast-01	39-40
# ::node	0.1.0.0.0.1.1.0.0.0	impression	9-10
# ::node	0.1.0.0.0.1.1.0.0.0.0	this	8-9
# ::node	0.1.0.0.0.1.1.0.1	moral	37-38
# ::node	0.1.0.0.0.1.1.1	promise-01	6-7
# ::node	0.1.0.0.0.1.1.1.0	case	4-5
# ::node	0.1.0.0.0.1.1.1.0.0	reflect-01	0-1
# ::node	0.1.0.0.0.1.1.2	friend	28-29
# ::node	0.1.1	friend	24-25
# ::root	0	obligate-01
# ::edge	after	op1	child	0.0.0.0.0.0.1.2	0.0.0.0.0.0.1	
# ::edge	after	op1	child	0.1.0.0	0.1.0	
# ::edge	age-01	ARG0	too	0.1.0.0.0.1.0.0.0	0.1.0.0.0.1.0.0.0.0	
# ::edge	age-01	ARG1	child	0.1.0.0.0.1.0.0.0	0.1.0.0.0.1.0.0	
# ::edge	case	topic	promise-01	0.1.0.0.0.1.1.1.0	0.1.0.0.0.1.1.1	
# ::edge	cause-01	ARG1	it	0.0.0.0.0.0.1.1.0.1	0.0.0.0.0.0.1.1.0.1.0	
# ::edge	cause-01	mod	just	0.0.0.0.0.0.1.1.0.1	0.0.0.0.0.0.1.1.0	
# ::edge	contrast-01	ARG0	worthwhile	0.1.0.0.0.1.1.0.0	0.1.0.0.0.1.1.0	
# ::edge	contrast-01	ARG1	impression	0.1.0.0.0.1.1.0.0	0.1.0.0.0.1.1.0.0.0	
# ::edge	date-entity	month	5	0.0.0	0.0.0.1	
# ::edge	die-01	ARG1	child	0.1.0.0.0.1.0	0.1.0.0.0.1.0.0	
# ::edge	die-01	time	before	0.1.0.0.0.1.0	0.1.0.0.0.1	
# ::edge	example	mod	this	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	have-rel-role-91	ARG0	child	0.1	0.1.0	
# ::edge	have-rel-role-91	ARG0	example	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	have-rel-role-91	ARG1	child	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	have-rel-role-91	ARG1	obligate-01	0.1	0	
# ::edge	have-rel-role-91	ARG1	worthwhile	0.1.0.0.0.1.1	0.1.0.0.0.1.1.0	
# ::edge	have-rel-role-91	ARG2	friend	0.0.0.0.0.0	0.0.0.0.0.0.2	
# ::edge	have-rel-role-91	ARG2	friend	0.1	0.1.1	
# ::edge	have-rel-role-91	ARG2	friend	0.1.0.0.0.1.1	0.1.0.0.0.1.1.2	
# ::edge	have-rel-role-91	location	one	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	have-rel-role-91	time	before	0.1.0.0.0.1.1	0.1.0.0.0.1	
# ::edge	help-01	ARG0	date-entity	0.0.0.0	0.0.0	
# ::edge	help-01	ARG1	one	0.0.0.0	0.0.0.0.0	
# ::edge	help-01	instrument	way	0.0.0.0	0.0.0.0.1	
# ::edge	impression	mod	this	0.1.0.0.0.1.1.0.0.0	0.1.0.0.0.1.1.0.0.0.0	
# ::edge	just	degree	so	0.0.0.0.0.0.1.1.0	0.0.0.0.0.0.1.1.0.0	
# ::edge	obligate-01	ARG0	child	0.0.0.0.0.0.1.0	0.0.0.0.0.0.1	
# ::edge	obligate-01	ARG1	good	0.0.0.0.0.0.1.0	0.0.0.0.0.0.1.0.0	
# ::edge	obligate-01	ARG1	remember-01	0	0.0	
# ::edge	obligate-01	manner	certain	0.0.0.0.0.0.1.0	0.0.0.0.0.0.1.0.1	
# ::edge	promise-01	ARG0	child	0.0.0.0.0.0.1.1	0.0.0.0.0.0.1	
# ::edge	promise-01	ARG1	have-rel-role-91	0.1.0.0.0.1.1.1	0.1.0.0.0.1.1	
# ::edge	promise-01	ARG1	just	0.0.0.0.0.0.1.1	0.0.0.0.0.0.1.1.0	
# ::edge	promise-01	ARG1	thing	0.0.0.0.0.0.1.0.0.0.0	0.0.0.0.0.0.1.0.0.0	
# ::edge	promise-01	ARG2	certain	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	reflect-01	ARG1	case	0.1.0.0.0.1.1.1.0.0	0.1.0.0.0.1.1.1.0	
# ::edge	remember-01	ARG1	date-entity	0.0	0.0.0	
# ::edge	say-01	ARG1	promise-01	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	say-01	time	after	0.1.0.0.0	0.1.0.0	
# ::edge	say-01	time	before	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	thing	mod	good	0.0.0.0.0.0.1.0.0.0	0.0.0.0.0.0.1.0.0	
# ::edge	way	mod	adequate	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	way	mod	other	0.0.0.0.1	0.0.0.0.1.1	
# ::edge	worthwhile	mod	moral	0.1.0.0.0.1.1.0	0.1.0.0.0.1.1.0.1	
(o4 / obligate-01 
      :ARG1 (r / remember-01 
            :ARG1 (d / date-entity 
                  :ARG0-of (h2 / help-01 
                        :ARG1 (o2 / one 
                              :location-of (h / have-rel-role-91 
                                    :ARG0 (e / example 
                                          :mod (t3 / this)) 
                                    :ARG1 (c2 / child 
                                          :ARG0-of (o / obligate-01 
                                                :ARG1 (g / good 
                                                      :mod-of (t / thing 
                                                            :ARG1-of (p / promise-01))) 
                                                :manner (c3 / certain)) 
                                          :ARG0-of (p2 / promise-01 
                                                :ARG1 (j / just 
                                                      :degree (s / so) 
                                                      :mod-of (c / cause-01 
                                                            :ARG1 (i / it)))) 
                                          :op-of (a / after)) 
                                    :ARG2 (f / friend))) 
                        :instrument (w / way 
                              :mod (a2 / adequate) 
                              :mod (o3 / other))) 
                  :month 5)) 
      :ARG1-of (h4 / have-rel-role-91 
            :ARG0 (c6 / child 
                  :op-of (a4 / after 
                        :time-of (s2 / say-01 
                              :ARG1 (p3 / promise-01 
                                    :ARG2 (c7 / certain)) 
                              :time (b / before 
                                    :time-of (d2 / die-01 
                                          :ARG1 (c5 / child 
                                                :ARG1-of (a3 / age-01 
                                                      :ARG0 (t2 / too)))) 
                                    :time-of (h3 / have-rel-role-91 
                                          :ARG1 (w2 / worthwhile 
                                                :ARG0-of (c4 / contrast-01 
                                                      :ARG1 (i2 / impression 
                                                            :mod (t4 / this))) 
                                                :mod (m / moral)) 
                                          :ARG1-of (p4 / promise-01 
                                                :topic-of (c8 / case 
                                                      :ARG1-of (r2 / reflect-01))) 
                                          :ARG2 (f2 / friend)))))) 
            :ARG2 (f3 / friend)))

# ::snt however privatization now promises to change the ground rules whereby land drainage remains within the water authorities at all
# ::tok however privatization now promises to change the ground rules whereby land drainage remains within the water authorities at all
# ::alignments 18-19|0.1.1.1 16-17|0.1.1.2.0 15-16|0.1.1.2.0.0 13-14|0.1.1.2 12-13|0.1.1 10-11|0.1.1.0 8-9|0.1.0 7-8|0.1.0.0 5-6|0.1 3-4|0 2-3|0.2 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:41.199
# ::node	0	promise-01	3-4
# ::node	0.0	privatize-01	1-2
# ::node	0.1	change-01	5-6
# ::node	0.1.0	rule	8-9
# ::node	0.1.0.0	ground	7-8
# ::node	0.1.1	remain-01	12-13
# ::node	0.1.1.0	land	10-11
# ::node	0.1.1.1	all	18-19
# ::node	0.1.1.2	within	13-14
# ::node	0.1.1.2.0	authority	16-17
# ::node	0.1.1.2.0.0	water	15-16
# ::node	0.2	now	2-3
# ::root	0	promise-01
# ::edge	authority	mod	water	0.1.1.2.0	0.1.1.2.0.0	
# ::edge	change-01	ARG1	rule	0.1	0.1.0	
# ::edge	change-01	time	remain-01	0.1	0.1.1	
# ::edge	promise-01	ARG0	privatize-01	0	0.0	
# ::edge	promise-01	ARG1	change-01	0	0.1	
# ::edge	promise-01	time	now	0	0.2	
# ::edge	remain-01	ARG0	land	0.1.1	0.1.1.0	
# ::edge	remain-01	ARG1	all	0.1.1	0.1.1.1	
# ::edge	remain-01	time	within	0.1.1	0.1.1.2	
# ::edge	rule	location	ground	0.1.0	0.1.0.0	
# ::edge	within	op1	authority	0.1.1.2	0.1.1.2.0	
(p / promise-01 
      :ARG0 (p2 / privatize-01) 
      :ARG1 (c / change-01 
            :ARG1 (r2 / rule 
                  :location (g / ground)) 
            :time (r / remain-01 
                  :ARG0 (l / land) 
                  :ARG1 (a / all) 
                  :time (w2 / within 
                        :op1 (a2 / authority 
                              :mod (w / water))))) 
      :time (n / now))

# ::snt pete waterman had once promised his prodigy that one day he  would transform her into the madonna
# ::tok pete waterman had once promised his prodigy that one day he would transform her into the madonna
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:41.200
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt he promised to resign as chairman of the central electricity generating board if the public inquiry into the building of the sizewell nuclear station went against him and later if the lights had gone out during the miners strike
# ::tok he promised to resign as chairman of the central electricity generating board if the public inquiry into the building of the sizewell nuclear station went against him and later if the lights had gone out during the miners strike
# ::alignments 38-39|0.0.0 37-38|0+0.0 31-32|0.0.0.0.2 28-29|0.0.0.0.1.0.1.0 27-28|0.0.0.0 23-24|0.0.0.0.1 22-23|0.0.0.0.1.1 18-19|0.0.0.0.1.0 15-16|0.0.0.0.1.0.1 14-15|0.0.0.0.1.0.1.1 10-11|0.0.0.0.0.0.0.0 9-10|0.0.0.0.0.0.0.0.0 8-9|0.0.0.0.1.0.0 5-6|0.0.0.0.0.0.0.1+0.0.0.0.0.0.0 3-4|0.0.0.0.0.1 1-2|0.0.0.0.0 0-1|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:41.480
# ::node	0	mine-01	37-38
# ::node	0.0	person	37-38
# ::node	0.0.0	strike-01	38-39
# ::node	0.0.0.0	and	27-28
# ::node	0.0.0.0.0	promise-01	1-2
# ::node	0.0.0.0.0.0	he	0-1
# ::node	0.0.0.0.0.0.0	have-org-role-91	5-6
# ::node	0.0.0.0.0.0.0.0	generate-01	10-11
# ::node	0.0.0.0.0.0.0.0.0	electricity	9-10
# ::node	0.0.0.0.0.0.0.1	chairman	5-6
# ::node	0.0.0.0.0.1	resign-01	3-4
# ::node	0.0.0.0.1	station	23-24
# ::node	0.0.0.0.1.0	build-01	18-19
# ::node	0.0.0.0.1.0.0	central	8-9
# ::node	0.0.0.0.1.0.1	inquire-01	15-16
# ::node	0.0.0.0.1.0.1.0	late	28-29
# ::node	0.0.0.0.1.0.1.1	public	14-15
# ::node	0.0.0.0.1.1	nucleus	22-23
# ::node	0.0.0.0.2	light	31-32
# ::root	0	mine-01
# ::edge	and	op1	station	0.0.0.0	0.0.0.0.1	
# ::edge	and	op2	light	0.0.0.0	0.0.0.0.2	
# ::edge	build-01	ARG1	central	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	build-01	ARG2	station	0.0.0.0.1.0	0.0.0.0.1	
# ::edge	generate-01	ARG1	electricity	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0	
# ::edge	have-org-role-91	ARG0	he	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	have-org-role-91	ARG1	generate-01	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	have-org-role-91	ARG2	chairman	0.0.0.0.0.0.0	0.0.0.0.0.0.0.1	
# ::edge	inquire-01	ARG0	late	0.0.0.0.1.0.1	0.0.0.0.1.0.1.0	
# ::edge	inquire-01	ARG1	build-01	0.0.0.0.1.0.1	0.0.0.0.1.0	
# ::edge	inquire-01	mod	public	0.0.0.0.1.0.1	0.0.0.0.1.0.1.1	
# ::edge	mine-01	ARG0	person	0	0.0	
# ::edge	promise-01	ARG0	he	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	promise-01	ARG1	and	0.0.0.0.0	0.0.0.0	
# ::edge	promise-01	ARG2	resign-01	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	station	mod	nucleus	0.0.0.0.1	0.0.0.0.1.1	
# ::edge	strike-01	ARG0	person	0.0.0	0.0	
# ::edge	strike-01	ARG1	and	0.0.0	0.0.0.0	
(m / mine-01 
      :ARG0 (p / person 
            :ARG0-of (s / strike-01 
                  :ARG1 (a / and 
                        :ARG1-of (p3 / promise-01 
                              :ARG0 (h2 / he 
                                    :ARG0-of (h / have-org-role-91 
                                          :ARG1 (g / generate-01 
                                                :ARG1 (e / electricity)) 
                                          :ARG2 (c2 / chairman))) 
                              :ARG2 (r / resign-01)) 
                        :op1 (s2 / station 
                              :ARG2-of (b / build-01 
                                    :ARG1 (c / central) 
                                    :ARG1-of (i / inquire-01 
                                          :ARG0 (l2 / late) 
                                          :mod (p2 / public))) 
                              :mod (n / nucleus)) 
                        :op2 (l / light)))))

# ::snt afghans he went on had been optimistic when miss bhutto came to power but she had betrayed all her promises to settle the afghan conflict
# ::tok afghans he went on had been optimistic when miss bhutto came to power but she had betrayed all her promises to settle the afghan conflict
# ::alignments 24-25|0.0 23-24|0.0.1.0.0+0.0.1.0+0.0.1 21-22|0.0.0 19-20|0.0.0.1 17-18|0.0.0.1.2 14-15|0.0.0.0 13-14|0.0.0.1.1 12-13|0.0.0.1.1.0 6-7|0 1-2|0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:41.557
# ::node	0	optimistic	6-7
# ::node	0.0	conflict-01	24-25
# ::node	0.0.0	settle-02	21-22
# ::node	0.0.0.0	she	14-15
# ::node	0.0.0.1	promise-01	19-20
# ::node	0.0.0.1.0	he	1-2
# ::node	0.0.0.1.1	contrast-01	13-14
# ::node	0.0.0.1.1.0	power	12-13
# ::node	0.0.0.1.2	all	17-18
# ::node	0.0.1	country	23-24
# ::node	0.0.1.0	name	23-24
# ::node	0.0.1.0.0	"Afghanistan"	23-24
# ::root	0	optimistic
(o / optimistic 
      :ARG1-of (c / conflict-01 
            :ARG1-of (s / settle-02 
                  :ARG0 (s2 / she) 
                  :ARG1-of (p / promise-01 
                        :ARG0 (h / he) 
                        :ARG2-of (c3 / contrast-01 
                              :ARG1 (p2 / power)) 
                        :quant (a / all))) 
            :mod (c2 / country 
                  :name (n / name 
                        :op1 "Afghanistan"))))

# ::snt he has promised to tighten budgetary control throughout the group
# ::tok he has promised to tighten budgetary control throughout the group
# ::alignments 9-10|0.1.0.0 7-8|0.1.0.0.0 6-7|0.1.0 5-6|0.0.0 4-5|0.1 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:41.576
# ::node	0	promise-01	2-3
# ::node	0.0	he	0-1
# ::node	0.0.0	budget-01	5-6
# ::node	0.1	tighten-01	4-5
# ::node	0.1.0	control-01	6-7
# ::node	0.1.0.0	group	9-10
# ::node	0.1.0.0.0	throughout	7-8
# ::root	0	promise-01
# ::edge	budget-01	ARG1	he	0.0.0	0.0	
# ::edge	control-01	ARG1	group	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG0	he	0	0.0	
# ::edge	promise-01	ARG2	tighten-01	0	0.1	
# ::edge	throughout	op1	group	0.1.0.0.0	0.1.0.0	
# ::edge	tighten-01	ARG1	control-01	0.1	0.1.0	
(p / promise-01 
      :ARG0 (h / he 
            :ARG1-of (b / budget-01)) 
      :ARG2 (t2 / tighten-01 
            :ARG1 (c / control-01 
                  :ARG1 (g / group 
                        :op-of (t / throughout)))))

# ::snt laws election manifesto sturdily promised negations
# ::tok laws election manifesto sturdily promised negations
# ::alignments 4-5|0.0 1-2|0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:41.583
# ::node	0	law	0-1
# ::node	0.0	promise-01	4-5
# ::node	0.1	elect-01	1-2
# ::root	0	law
(l / law 
      :ARG0-of (p / promise-01) 
      :ARG1-of (e / elect-01))

# ::snt money guardian is edited by personal finance editor margaret hughes  direct line the royal bank of scotland offshoot has thrown down another gauntlet in the household insurance battlefield with a promise to cut 20 per cent off some insurance bills
# ::tok money guardian is edited by personal finance editor margaret hughes direct line the royal bank of scotland offshoot has thrown down another gauntlet in the household insurance battlefield with a promise to cut 20 per cent off some insurance bills
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:41.584
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt mr bush has promised that malta will not be yalta
# ::tok mr bush has promised that malta will not be yalta
# ::alignments 3-4|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:41.593
# ::node	0	promise-01	3-4
# ::node	0.0	bush-league	1-2
# ::root	0	promise-01
# ::edge	promise-01	ARG0	bush-league	0	0.0	
(p / promise-01 
      :ARG0 (b / bush-league))

# ::snt mr jospin has promised to announce plans shortly for an ambitious building and repair programme which includes several new university departments both in and out of paris
# ::tok mr jospin has promised to announce plans shortly for an ambitious building and repair programme which includes several new university departments both in and out of paris
# ::alignments 23-24|0 21-22|0.0.0 20-21|0.0.1.1.0.0.0.0 19-20|0.0.1.1.0.0.0 18-19|0.0.1.1.0.0.0.0.0 17-18|0.0.1.1.0.0.0.0.1 16-17|0.0 14-15|0.0.1.1.1 13-14|0.0.1.1.1.0 12-13|0.0.1.1 11-12|0.0.1 10-11|0.0.1.0 7-8|0.0.1.1.1.0.0 6-7|0.0.1.1.0 5-6|0.0.1.1.0.0 3-4|0.0.1.1.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:41.841
# ::node	0	and	23-24
# ::node	0.0	include-01	16-17
# ::node	0.0.0	both	21-22
# ::node	0.0.1	build-01	11-12
# ::node	0.0.1.0	ambitious	10-11
# ::node	0.0.1.1	and	12-13
# ::node	0.0.1.1.0	plan-01	6-7
# ::node	0.0.1.1.0.0	announce-01	5-6
# ::node	0.0.1.1.0.0.0	university	19-20
# ::node	0.0.1.1.0.0.0.0	department	20-21
# ::node	0.0.1.1.0.0.0.0.0	new	18-19
# ::node	0.0.1.1.0.0.0.0.1	several	17-18
# ::node	0.0.1.1.0.0.1	promise-01	3-4
# ::node	0.0.1.1.1	program	14-15
# ::node	0.0.1.1.1.0	repair-01	13-14
# ::node	0.0.1.1.1.0.0	short	7-8
# ::root	0	and
(a / and 
      :ARG2-of (i / include-01 
            :ARG0 (b / both) 
            :ARG1 (b2 / build-01 
                  :mod (a3 / ambitious) 
                  :op-of (a2 / and 
                        :ARG1-of (p2 / plan-01 
                              :ARG1-of (a4 / announce-01 
                                    :ARG0 (u / university 
                                          :part (d / department 
                                                :mod (n / new) 
                                                :quant (s / several))) 
                                    :ARG2-of (p3 / promise-01))) 
                        :op1 (p / program 
                              :mod (r / repair-01 
                                    :mod (s2 / short)))))))

# ::snt but he perked up quickly and promised we will keep up the argument
# ::tok but he perked up quickly and promised we will keep up the argument
# ::alignments 12-13|0.0.1.1 7-8|0.0.1.1.0 6-7|0.0.1 5-6|0.0 4-5|0.0.0 1-2|0.0.1.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:41.861
# ::node	0	contrast-01	0-1
# ::node	0.0	and	5-6
# ::node	0.0.0	quick	4-5
# ::node	0.0.1	promise-01	6-7
# ::node	0.0.1.0	he	1-2
# ::node	0.0.1.1	argue-01	12-13
# ::node	0.0.1.1.0	we	7-8
# ::root	0	contrast-01
# ::edge	and	op1	quick	0.0	0.0.0	
# ::edge	and	op2	promise-01	0.0	0.0.1	
# ::edge	argue-01	ARG0	we	0.0.1.1	0.0.1.1.0	
# ::edge	contrast-01	ARG2	and	0	0.0	
# ::edge	promise-01	ARG0	he	0.0.1	0.0.1.0	
# ::edge	promise-01	ARG1	argue-01	0.0.1	0.0.1.1	
(c / contrast-01 
      :ARG2 (a2 / and 
            :op1 (q / quick) 
            :op2 (p / promise-01 
                  :ARG0 (h / he) 
                  :ARG1 (a / argue-01 
                        :ARG0 (w / we)))))

# ::snt  comedy real pain and even rational intelligence glimmer fitfully in his speech promise the great human achievement coherence only to see them seconds later gutter out in the wind and the rain that blew through his skull
# ::tok comedy real pain and even rational intelligence glimmer fitfully in his speech promise the great human achievement coherence only to see them seconds later gutter out in the wind and the rain that blew through his skull
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:41.861
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt in what follows however he engagingly halfcontradicts himself  he urges her to verse promising to guard her good name and ending with an echo of coleridges frost at midnight
# ::tok in what follows however he engagingly halfcontradicts himself he urges her to verse promising to guard her good name and ending with an echo of coleridges frost at midnight
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:41.862
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt at least dollars 50000 went directly to rafael angel calderon the opposition social christian candidate who described president ariass peace plan as a defamation of masculine values and promised to back us policy in central america
# ::tok at least dollars 50000 went directly to rafael angel calderon the opposition social christian candidate who described president ariass peace plan as a defamation of masculine values and promised to back us policy in central america
# ::alignments 35-36|0.0.1.0+0.0.1+0.0 34-35|0.0.0 32-33|0.3.0.1.0 30-31|0.3.0.1 28-29|0.3.0 27-28|0.3 26-27|0.4.0 23-24|0.4 20-21|0 19-20|0.1 17-18|0.2.1.2+0.2.1 16-17|0.2 14-15|0.2.0 13-14|0.2.0.1.0.0+0.2.0.1.0+0.2.0.1 12-13|0.2.1.0 11-12|0.2.0.0 5-6|0.2.1.1 3-4|0.2.0.0.0 2-3|0.3.0.0.0+0.3.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:42.445
# ::node	0	plan-01	20-21
# ::node	0.0	country	35-36
# ::node	0.0.0	central	34-35
# ::node	0.0.1	name	35-36
# ::node	0.0.1.0	"America"	35-36
# ::node	0.1	peace	19-20
# ::node	0.2	describe-01	16-17
# ::node	0.2.0	candidate	14-15
# ::node	0.2.0.0	oppose-01	11-12
# ::node	0.2.0.0.0	50000	3-4
# ::node	0.2.0.1	religious-group	13-14
# ::node	0.2.0.1.0	name	13-14
# ::node	0.2.0.1.0.0	"Christian"	13-14
# ::node	0.2.1	have-org-role-91	17-18
# ::node	0.2.1.0	society	12-13
# ::node	0.2.1.1	direct	5-6
# ::node	0.2.1.2	president	17-18
# ::node	0.3	and	27-28
# ::node	0.3.0	promise-01	28-29
# ::node	0.3.0.0	monetary-quantity	2-3
# ::node	0.3.0.0.0	dollar	2-3
# ::node	0.3.0.1	back	30-31
# ::node	0.3.0.1.0	policy	32-33
# ::node	0.4	defame-01	23-24
# ::node	0.4.0	value	26-27
# ::root	0	plan-01
# ::edge	and	op1	plan-01	0.3	0	
# ::edge	and	op2	promise-01	0.3	0.3.0	
# ::edge	back	quant	policy	0.3.0.1	0.3.0.1.0	
# ::edge	candidate	mod	religious-group	0.2.0	0.2.0.1	
# ::edge	country	mod	central	0.0	0.0.0	
# ::edge	country	name	name	0.0	0.0.1	
# ::edge	defame-01	ARG1	value	0.4	0.4.0	
# ::edge	describe-01	ARG0	candidate	0.2	0.2.0	
# ::edge	describe-01	ARG1	plan-01	0.2	0	
# ::edge	describe-01	ARG2	have-org-role-91	0.2	0.2.1	
# ::edge	have-org-role-91	ARG0	society	0.2.1	0.2.1.0	
# ::edge	have-org-role-91	ARG1	direct	0.2.1	0.2.1.1	
# ::edge	have-org-role-91	ARG2	president	0.2.1	0.2.1.2	
# ::edge	monetary-quantity	unit	dollar	0.3.0.0	0.3.0.0.0	
# ::edge	name	op1	"America"	0.0.1	0.0.1.0	
# ::edge	name	op1	"Christian"	0.2.0.1.0	0.2.0.1.0.0	
# ::edge	oppose-01	ARG0	candidate	0.2.0.0	0.2.0	
# ::edge	oppose-01	ARG1	50000	0.2.0.0	0.2.0.0.0	
# ::edge	plan-01	ARG0	country	0	0.0	
# ::edge	plan-01	ARG1	peace	0	0.1	
# ::edge	plan-01	time	defame-01	0	0.4	
# ::edge	promise-01	ARG0	monetary-quantity	0.3.0	0.3.0.0	
# ::edge	promise-01	ARG2	back	0.3.0	0.3.0.1	
# ::edge	religious-group	name	name	0.2.0.1	0.2.0.1.0	
(p3 / plan-01 
      :ARG0 (c / country 
            :mod (c2 / central) 
            :name (n / name 
                  :op1 "America")) 
      :ARG1 (p4 / peace) 
      :ARG1-of (d2 / describe-01 
            :ARG0 (c3 / candidate 
                  :ARG0-of (o / oppose-01 
                        :ARG1 50000) 
                  :mod (r / religious-group 
                        :name (n2 / name 
                              :op1 "Christian"))) 
            :ARG2 (h / have-org-role-91 
                  :ARG0 (s / society) 
                  :ARG1 (d3 / direct) 
                  :ARG2 (p5 / president))) 
      :op-of (a / and 
            :op1 (p2 / promise-01 
                  :ARG0 (m / monetary-quantity 
                        :unit (d4 / dollar)) 
                  :ARG2 (b / back 
                        :quant (p / policy)))) 
      :time (d / defame-01 
            :ARG1 (v / value)))

# ::snt whatever the mortgage rates their support would be promised as readily as jumble for the cobham village fete
# ::tok whatever the mortgage rates their support would be promised as readily as jumble for the cobham village fete
# ::alignments 16-17|0.0.0.0.0 10-11|0.0.0.1 8-9|0.0.0 5-6|0.0.0.0 3-4|0 2-3|0.0 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:42.472
# ::node	0	rate	3-4
# ::node	0.0	mortgage-01	2-3
# ::node	0.0.0	promise-01	8-9
# ::node	0.0.0.0	support-01	5-6
# ::node	0.0.0.0.0	village	16-17
# ::node	0.0.0.1	ready	10-11
# ::node	0.0.1	whatever	0-1
# ::root	0	rate
# ::edge	mortgage-01	ARG1	whatever	0.0	0.0.1	
# ::edge	promise-01	ARG0	mortgage-01	0.0.0	0.0	
# ::edge	promise-01	ARG1	support-01	0.0.0	0.0.0.0	
# ::edge	promise-01	manner	ready	0.0.0	0.0.0.1	
# ::edge	rate	mod	mortgage-01	0	0.0	
# ::edge	support-01	ARG1	village	0.0.0.0	0.0.0.0.0	
(r2 / rate 
      :mod (m / mortgage-01 
            :ARG0-of (p / promise-01 
                  :ARG1 (s / support-01 
                        :ARG1 (v / village)) 
                  :manner (r / ready)) 
            :ARG1 (w / whatever)))

# ::snt four months after the royal ordnance purchase was completed he is seen as the architect of the plant closure and redevelopment plans which promise to allow bae to recoup the 190m purchase price many times over
# ::tok four months after the royal ordnance purchase was completed he is seen as the architect of the plant closure and redevelopment plans which promise to allow bae to recoup the 190m purchase price many times over
# ::alignments 33-34|0.0.1.0.0 32-33|0.0.1.1+0.0.1 31-32|0.0.1.0 25-26|0.0 23-24|0 21-22|0.0.0 19-20|0.0.0.0 17-18|0.0.0.0.0.1.0.0 11-12|0.0.0.0.0 9-10|0.0.0.0.0.0 8-9|0.0.0.0.0.1 6-7|0.0.0.0.0.1.0 4-5|0.0.0.0.0.1.0.1 2-3|0.0.0.0.0.1.1 1-2|0.0.0.0.0.1.1.0.1+0.0.0.0.0.1.1.0 0-1|0.0.0.0.0.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:43.370
# ::node	0	promise-01	23-24
# ::node	0.0	allow-01	25-26
# ::node	0.0.0	plan-01	21-22
# ::node	0.0.0.0	and	19-20
# ::node	0.0.0.0.0	see-01	11-12
# ::node	0.0.0.0.0.0	he	9-10
# ::node	0.0.0.0.0.1	complete-01	8-9
# ::node	0.0.0.0.0.1.0	purchase-01	6-7
# ::node	0.0.0.0.0.1.0.0	plant	17-18
# ::node	0.0.0.0.0.1.0.1	royal	4-5
# ::node	0.0.0.0.0.1.1	after	2-3
# ::node	0.0.0.0.0.1.1.0	temporal-quantity	1-2
# ::node	0.0.0.0.0.1.1.0.0	4	0-1
# ::node	0.0.0.0.0.1.1.0.1	month	1-2
# ::node	0.0.1	thing	32-33
# ::node	0.0.1.0	purchase-01	31-32
# ::node	0.0.1.0.0	many	33-34
# ::node	0.0.1.1	price-01	32-33
# ::root	0	promise-01
# ::edge	after	op1	complete-01	0.0.0.0.0.1.1	0.0.0.0.0.1	
# ::edge	after	quant	temporal-quantity	0.0.0.0.0.1.1	0.0.0.0.0.1.1.0	
# ::edge	allow-01	ARG0	plan-01	0.0	0.0.0	
# ::edge	allow-01	ARG1	thing	0.0	0.0.1	
# ::edge	and	op1	plan-01	0.0.0.0	0.0.0	
# ::edge	complete-01	ARG1	see-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	complete-01	ARG2	purchase-01	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	price-01	ARG2	thing	0.0.1.1	0.0.1	
# ::edge	promise-01	ARG1	allow-01	0	0.0	
# ::edge	purchase-01	ARG0	thing	0.0.1.0	0.0.1	
# ::edge	purchase-01	ARG1	many	0.0.1.0	0.0.1.0.0	
# ::edge	purchase-01	ARG1	plant	0.0.0.0.0.1.0	0.0.0.0.0.1.0.0	
# ::edge	purchase-01	ARG4	royal	0.0.0.0.0.1.0	0.0.0.0.0.1.0.1	
# ::edge	see-01	ARG0	he	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	see-01	ARG1	and	0.0.0.0.0	0.0.0.0	
# ::edge	temporal-quantity	quant	4	0.0.0.0.0.1.1.0	0.0.0.0.0.1.1.0.0	
# ::edge	temporal-quantity	unit	month	0.0.0.0.0.1.1.0	0.0.0.0.0.1.1.0.1	
(p3 / promise-01 
      :ARG1 (a / allow-01 
            :ARG0 (p4 / plan-01 
                  :op-of (a2 / and 
                        :ARG1-of (s / see-01 
                              :ARG0 (h / he) 
                              :ARG1-of (c / complete-01 
                                    :ARG2 (p6 / purchase-01 
                                          :ARG1 (p5 / plant) 
                                          :ARG4 (r / royal)) 
                                    :op-of (a3 / after 
                                          :quant (t2 / temporal-quantity 
                                                :quant 4 
                                                :unit (m2 / month))))))) 
            :ARG1 (t / thing 
                  :ARG0-of (p2 / purchase-01 
                        :ARG1 (m / many)) 
                  :ARG2-of (p / price-01))))

# ::snt to make swifter unity on west german terms more attractive to east germans mr kohl has all but promised that their savings will be converted over time from monopolymoney ostmarks into rockribbed dmarks at the ridiculously unrealistic rate of 11
# ::tok to make swifter unity on west german terms more attractive to east germans mr kohl has all but promised that their savings will be converted over time from monopolymoney ostmarks into rockribbed dmarks at the ridiculously unrealistic rate of 11
# ::alignments 39-40|0.0 37-38|0.0.0 36-37|0.0.0.0 35-36|0.0.0.0.0 26-27|0.2.1.1 24-25|0.2.1 18-19|0.2 17-18|0 16-17|0.1 12-13|0.2.0.1.0.0+0.2.0.1.0+0.2.0.1+0.2.0 11-12|0.2.0.2 9-10|0.2.0.0 7-8|0.2.0.0.0 5-6|0.2.0.0.0.0 3-4|0.2.1.0.0+0.2.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:43.739
# ::node	0	contrast-01	17-18
# ::node	0.0	11	39-40
# ::node	0.0.0	rate	37-38
# ::node	0.0.0.0	realistic	36-37
# ::node	0.0.0.0.0	ridiculous	35-36
# ::node	0.1	all	16-17
# ::node	0.2	promise-01	18-19
# ::node	0.2.0	person	12-13
# ::node	0.2.0.0	attract-01	9-10
# ::node	0.2.0.0.0	term	7-8
# ::node	0.2.0.0.0.0	west	5-6
# ::node	0.2.0.1	country	12-13
# ::node	0.2.0.1.0	name	12-13
# ::node	0.2.0.1.0.0	"Germany"	12-13
# ::node	0.2.0.2	east	11-12
# ::node	0.2.1	convert-01	24-25
# ::node	0.2.1.0	name	3-4
# ::node	0.2.1.0.0	"Unity"	3-4
# ::node	0.2.1.1	time	26-27
# ::root	0	contrast-01
# ::edge	attract-01	ARG1	person	0.2.0.0	0.2.0	
# ::edge	attract-01	ARG2	term	0.2.0.0	0.2.0.0.0	
# ::edge	contrast-01	ARG0	11	0	0.0	
# ::edge	contrast-01	ARG1	all	0	0.1	
# ::edge	contrast-01	ARG2	promise-01	0	0.2	
# ::edge	convert-01	ARG1	name	0.2.1	0.2.1.0	
# ::edge	convert-01	ARG2	time	0.2.1	0.2.1.1	
# ::edge	country	name	name	0.2.0.1	0.2.0.1.0	
# ::edge	name	op1	"Germany"	0.2.0.1.0	0.2.0.1.0.0	
# ::edge	name	op1	"Unity"	0.2.1.0	0.2.1.0.0	
# ::edge	person	mod	country	0.2.0	0.2.0.1	
# ::edge	person	mod	east	0.2.0	0.2.0.2	
# ::edge	promise-01	ARG0	person	0.2	0.2.0	
# ::edge	promise-01	ARG1	convert-01	0.2	0.2.1	
# ::edge	rate	mod	realistic	0.0.0	0.0.0.0	
# ::edge	rate	time	11	0.0.0	0.0	
# ::edge	realistic	mod	ridiculous	0.0.0.0	0.0.0.0.0	
# ::edge	term	mod	west	0.2.0.0.0	0.2.0.0.0.0	
(c2 / contrast-01 
      :ARG0 (1 / 11 
            :time-of (r / rate 
                  :mod (r2 / realistic 
                        :mod (r3 / ridiculous)))) 
      :ARG1 (a / all) 
      :ARG2 (p / promise-01 
            :ARG0 (p2 / person 
                  :ARG1-of (a2 / attract-01 
                        :ARG2 (t2 / term 
                              :mod (w / west))) 
                  :mod (c3 / country 
                        :name (n / name 
                              :op1 "Germany")) 
                  :mod (e / east)) 
            :ARG1 (c / convert-01 
                  :ARG1 (n2 / name 
                        :op1 "Unity") 
                  :ARG2 (t / time))))

# ::snt tomas brolin who may be too young to know better also promises a lack of inhibition
# ::tok tomas brolin who may be too young to know better also promises a lack of inhibition
# ::alignments 13-14|0.0 11-12|0 10-11|0.1 8-9|0.1.0 6-7|0.1.0.0 5-6|0.1.0.0.0 3-4|0.1.0.0.1.0+0.1.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:43.773
# ::node	0	promise-01	11-12
# ::node	0.0	lack-01	13-14
# ::node	0.1	also	10-11
# ::node	0.1.0	know-01	8-9
# ::node	0.1.0.0	young	6-7
# ::node	0.1.0.0.0	too	5-6
# ::node	0.1.0.0.1	date-entity	3-4
# ::node	0.1.0.0.1.0	5	3-4
# ::root	0	promise-01
# ::edge	date-entity	domain	young	0.1.0.0.1	0.1.0.0	
# ::edge	date-entity	month	5	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	know-01	mod	also	0.1.0	0.1	
# ::edge	promise-01	ARG1	lack-01	0	0.0	
# ::edge	promise-01	manner	also	0	0.1	
# ::edge	young	degree	too	0.1.0.0	0.1.0.0.0	
# ::edge	young	domain	know-01	0.1.0.0	0.1.0	
(p / promise-01 
      :ARG1 (l / lack-01) 
      :manner (a / also 
            :mod-of (k / know-01 
                  :domain-of (y / young 
                        :degree (t / too) 
                        :domain-of (d / date-entity 
                              :month 5)))))

# ::snt reforms were promised to remove persisting inequities
# ::tok reforms were promised to remove persisting inequities
# ::alignments 5-6|0.1.0 4-5|0.1 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:43.782
# ::node	0	promise-01	2-3
# ::node	0.0	reform-01	0-1
# ::node	0.1	remove-01	4-5
# ::node	0.1.0	persist-01	5-6
# ::root	0	promise-01
# ::edge	promise-01	ARG1	reform-01	0	0.0	
# ::edge	promise-01	ARG2	remove-01	0	0.1	
# ::edge	remove-01	ARG1	persist-01	0.1	0.1.0	
(p2 / promise-01 
      :ARG1 (r2 / reform-01) 
      :ARG2 (r / remove-01 
            :ARG1 (p / persist-01)))

# ::snt in todays mood of widespread resentment against the press they prudently did not want to be caught out promising more than they could deliver
# ::tok in todays mood of widespread resentment against the press they prudently did not want to be caught out promising more than they could deliver
# ::alignments 23-24|0.0 22-23|0 21-22|0.0.0 18-19|0.0.0.0 13-14|0.0.0.0.0 9-10|0.0.0.0.0.0 8-9|0.0.0.0.0.1 5-6|0.0.0.0.0.1.0 4-5|0.0.0.0.0.1.0.1 2-3|0.0.0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:44.065
# ::node	0	possible	22-23
# ::node	0.0	deliver-01	23-24
# ::node	0.0.0	they	21-22
# ::node	0.0.0.0	promise-01	18-19
# ::node	0.0.0.0.0	want-01	13-14
# ::node	0.0.0.0.0.0	they	9-10
# ::node	0.0.0.0.0.1	press	8-9
# ::node	0.0.0.0.0.1.0	resent-01	5-6
# ::node	0.0.0.0.0.1.0.0	mood	2-3
# ::node	0.0.0.0.0.1.0.1	wide	4-5
# ::root	0	possible
(p / possible 
      :mod-of (d / deliver-01 
            :ARG0 (t / they 
                  :ARG0-of (p2 / promise-01 
                        :ARG1 (w / want-01 
                              :ARG0 (t2 / they) 
                              :ARG1 (p3 / press 
                                    :ARG0-of (r / resent-01 
                                          :ARG1 (m / mood) 
                                          :mod (w2 / wide))))))))

# ::snt new years eve promises to be one immense berlin wall party with millions of east berliners joining the fun dash
# ::tok new years eve promises to be one immense berlin wall party with millions of east berliners joining the fun dash
# ::alignments 18-19|0.2.0 16-17|0.2 14-15|0.3 10-11|0.1 9-10|0.1.0 7-8|0.1.1 3-4|0 2-3|0.0 1-2|0.0.0.0+0.0.0 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:44.187
# ::node	0	promise-01	3-4
# ::node	0.0	eve	2-3
# ::node	0.0.0	temporal-quantity	1-2
# ::node	0.0.0.0	year	1-2
# ::node	0.0.1	new	0-1
# ::node	0.1	party	10-11
# ::node	0.1.0	wall	9-10
# ::node	0.1.1	immense	7-8
# ::node	0.2	join-01	16-17
# ::node	0.2.0	fun	18-19
# ::node	0.3	east	14-15
# ::root	0	promise-01
# ::edge	east	op1	promise-01	0.3	0	
# ::edge	eve	duration	temporal-quantity	0.0	0.0.0	
# ::edge	eve	mod	new	0.0	0.0.1	
# ::edge	join-01	ARG1	fun	0.2	0.2.0	
# ::edge	party	mod	immense	0.1	0.1.1	
# ::edge	party	mod	wall	0.1	0.1.0	
# ::edge	promise-01	ARG0	eve	0	0.0	
# ::edge	promise-01	ARG1	party	0	0.1	
# ::edge	promise-01	ARG2	join-01	0	0.2	
# ::edge	temporal-quantity	unit	year	0.0.0	0.0.0.0	
(p2 / promise-01 
      :ARG0 (e2 / eve 
            :duration (t / temporal-quantity 
                  :unit (y / year)) 
            :mod (n / new)) 
      :ARG1 (p / party 
            :mod (w / wall) 
            :mod (i / immense)) 
      :ARG2 (j / join-01 
            :ARG1 (f / fun)) 
      :op-of (e / east))

# ::snt for a bike that promised to be boring hondas pacific coast was surprisingly good fun to ride and its comfort and luggage space were welcome
# ::tok for a bike that promised to be boring hondas pacific coast was surprisingly good fun to ride and its comfort and luggage space were welcome
# ::alignments 24-25|0.1 22-23|0.1.1.1 21-22|0.1.1.1.0 20-21|0.1.1 19-20|0.1.1.0 17-18|0 16-17|0.0.0 14-15|0.0 13-14|0.0.1 12-13|0.1.0.0.0.0 10-11|0.0.0.0 7-8|0.1.0.0 4-5|0.1.0.0.0 2-3|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:44.366
# ::node	0	and	17-18
# ::node	0.0	fun	14-15
# ::node	0.0.0	ride-01	16-17
# ::node	0.0.0.0	coast	10-11
# ::node	0.0.1	good	13-14
# ::node	0.1	welcome-01	24-25
# ::node	0.1.0	bike	2-3
# ::node	0.1.0.0	bore-02	7-8
# ::node	0.1.0.0.0	promise-01	4-5
# ::node	0.1.0.0.0.0	surprise-01	12-13
# ::node	0.1.1	and	20-21
# ::node	0.1.1.0	comfort-01	19-20
# ::node	0.1.1.1	space	22-23
# ::node	0.1.1.1.0	luggage	21-22
# ::root	0	and
# ::edge	and	op1	comfort-01	0.1.1	0.1.1.0	
# ::edge	and	op1	fun	0	0.0	
# ::edge	and	op2	space	0.1.1	0.1.1.1	
# ::edge	and	op2	welcome-01	0	0.1	
# ::edge	bore-02	ARG1	bike	0.1.0.0	0.1.0	
# ::edge	fun	mod	good	0.0	0.0.1	
# ::edge	promise-01	ARG2	bore-02	0.1.0.0.0	0.1.0.0	
# ::edge	ride-01	ARG0	fun	0.0.0	0.0	
# ::edge	ride-01	ARG1	coast	0.0.0	0.0.0.0	
# ::edge	space	mod	luggage	0.1.1.1	0.1.1.1.0	
# ::edge	surprise-01	ARG1	promise-01	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	welcome-01	ARG0	bike	0.1	0.1.0	
# ::edge	welcome-01	ARG1	and	0.1	0.1.1	
(a2 / and 
      :op1 (f / fun 
            :ARG0-of (r / ride-01 
                  :ARG1 (c2 / coast)) 
            :mod (g / good)) 
      :op2 (w / welcome-01 
            :ARG0 (b2 / bike 
                  :ARG1-of (b / bore-02 
                        :ARG2-of (p / promise-01 
                              :ARG1-of (s2 / surprise-01)))) 
            :ARG1 (a / and 
                  :op1 (c / comfort-01) 
                  :op2 (s / space 
                        :mod (l / luggage)))))

# ::snt although graciela winkelreid was keifetzs only child by his second wife neither father nor daughter had acknowledged each other since gracielas fourteenth birthday when keifetz had given her a mercedesbenz when he knew well that it was an astonmartin he had promised her
# ::tok although graciela winkelreid was keifetzs only child by his second wife neither father nor daughter had acknowledged each other since gracielas fourteenth birthday when keifetz had given her a mercedesbenz when he knew well that it was an astonmartin he had promised her
# ::alignments 41-42|0.1 39-40|0.1.0 35-36|0.0.0.1.0 33-34|0.2 32-33|0 31-32|0.0 26-27|0.0.0 22-23|0.0.0.0 19-20|0.0.0.0.0 18-19|0.0.0.0.0.0 17-18|0.0.0.0.0.0.0 16-17|0.0.0.1 14-15|0.1.0.0.0+0.1.0.0 12-13|0.0.2.0+0.0.2 10-11|0.0.1.0+0.0.1 6-7|0.0.0.1.1 5-6|0.0.0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:45.373
# ::node	0	know-01	32-33
# ::node	0.0	he	31-32
# ::node	0.0.0	give-01	26-27
# ::node	0.0.0.0	birthday	22-23
# ::node	0.0.0.0.0	since	19-20
# ::node	0.0.0.0.0.0	other	18-19
# ::node	0.0.0.0.0.0.0	each	17-18
# ::node	0.0.0.1	acknowledge-01	16-17
# ::node	0.0.0.1.0	it	35-36
# ::node	0.0.0.1.1	child	6-7
# ::node	0.0.0.1.1.0	only	5-6
# ::node	0.0.1	have-rel-role-91	10-11
# ::node	0.0.1.0	wife	10-11
# ::node	0.0.2	have-rel-role-91	12-13
# ::node	0.0.2.0	father	12-13
# ::node	0.1	promise-01	41-42
# ::node	0.1.0	he	39-40
# ::node	0.1.0.0	have-rel-role-91	14-15
# ::node	0.1.0.0.0	daughter	14-15
# ::node	0.2	well	33-34
# ::root	0	know-01
# ::edge	acknowledge-01	ARG0	it	0.0.0.1	0.0.0.1.0	
# ::edge	acknowledge-01	ARG1	child	0.0.0.1	0.0.0.1.1	
# ::edge	acknowledge-01	time	give-01	0.0.0.1	0.0.0	
# ::edge	child	mod	only	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	give-01	ARG0	he	0.0.0	0.0	
# ::edge	give-01	ARG1	birthday	0.0.0	0.0.0.0	
# ::edge	have-rel-role-91	ARG1	he	0.0.1	0.0	
# ::edge	have-rel-role-91	ARG1	he	0.0.2	0.0	
# ::edge	have-rel-role-91	ARG1	he	0.1.0.0	0.1.0	
# ::edge	have-rel-role-91	ARG2	daughter	0.1.0.0	0.1.0.0.0	
# ::edge	have-rel-role-91	ARG2	father	0.0.2	0.0.2.0	
# ::edge	have-rel-role-91	ARG2	wife	0.0.1	0.0.1.0	
# ::edge	know-01	ARG0	he	0	0.0	
# ::edge	know-01	ARG1	promise-01	0	0.1	
# ::edge	know-01	manner	well	0	0.2	
# ::edge	other	mod	each	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	other	time	since	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	ARG0	he	0.1	0.1.0	
# ::edge	since	op1	birthday	0.0.0.0.0	0.0.0.0	
(k / know-01 
      :ARG0 (h2 / he 
            :ARG0-of (g / give-01 
                  :ARG1 (b / birthday 
                        :op-of (s / since 
                              :time-of (o / other 
                                    :mod (e / each)))) 
                  :time-of (a / acknowledge-01 
                        :ARG0 (i / it) 
                        :ARG1 (c / child 
                              :mod (o2 / only)))) 
            :ARG1-of (h5 / have-rel-role-91 
                  :ARG2 (w2 / wife)) 
            :ARG1-of (h4 / have-rel-role-91 
                  :ARG2 (f / father))) 
      :ARG1 (p / promise-01 
            :ARG0 (h / he 
                  :ARG1-of (h3 / have-rel-role-91 
                        :ARG2 (d / daughter)))) 
      :manner (w / well))

# ::snt and the fears were not lessened by comments in recent hitler speeches hinting at a hard year of struggle ahead and promising better weapons for the wehrmacht next year
# ::tok and the fears were not lessened by comments in recent hitler speeches hinting at a hard year of struggle ahead and promising better weapons for the wehrmacht next year
# ::alignments 28-29|0.1.0.2 27-28|0.1.0.2.0 23-24|0.1.0.1 21-22|0.1.0 20-21|0.1 19-20|0.0 18-19|0.1.0.0 16-17|0.1.0.0.0 15-16|0.1.0.0.0.0 11-12|0.2.1.0 9-10|0.2.1.0.0 7-8|0.2.1 5-6|0.2 2-3|0 0-1|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:45.532
# ::node	0	fear-01	2-3
# ::node	0.0	ahead	19-20
# ::node	0.1	and	20-21
# ::node	0.1.0	promise-01	21-22
# ::node	0.1.0.0	struggle-01	18-19
# ::node	0.1.0.0.0	year	16-17
# ::node	0.1.0.0.0.0	hard	15-16
# ::node	0.1.0.1	weapon	23-24
# ::node	0.1.0.2	year	28-29
# ::node	0.1.0.2.0	next	27-28
# ::node	0.2	lessen-01	5-6
# ::node	0.2.0	and	0-1
# ::node	0.2.1	comment-01	7-8
# ::node	0.2.1.0	speech	11-12
# ::node	0.2.1.0.0	recent	9-10
# ::root	0	fear-01
# ::edge	and	op1	lessen-01	0.2.0	0.2	
# ::edge	and	op1	promise-01	0.1	0.1.0	
# ::edge	comment-01	ARG1	speech	0.2.1	0.2.1.0	
# ::edge	fear-01	ARG0	ahead	0	0.0	
# ::edge	fear-01	ARG1	and	0	0.1	
# ::edge	lessen-01	ARG1	fear-01	0.2	0	
# ::edge	lessen-01	purpose	comment-01	0.2	0.2.1	
# ::edge	promise-01	ARG1	struggle-01	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG3	weapon	0.1.0	0.1.0.1	
# ::edge	promise-01	time	year	0.1.0	0.1.0.2	
# ::edge	speech	time	recent	0.2.1.0	0.2.1.0.0	
# ::edge	struggle-01	time	year	0.1.0.0	0.1.0.0.0	
# ::edge	year	mod	hard	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	year	mod	next	0.1.0.2	0.1.0.2.0	
(f / fear-01 
      :ARG0 (a2 / ahead) 
      :ARG1 (a / and 
            :op1 (p / promise-01 
                  :ARG1 (s / struggle-01 
                        :time (y2 / year 
                              :mod (h / hard))) 
                  :ARG3 (w / weapon) 
                  :time (y / year 
                        :mod (n / next)))) 
      :ARG1-of (l / lessen-01 
            :op-of (a3 / and) 
            :purpose (c / comment-01 
                  :ARG1 (s2 / speech 
                        :time (r / recent)))))

# ::snt the bjp extends chauvinism to economics promising to keep multinationals at bay and an industrial policy that is strongly nationalistic in approach and content
# ::tok the bjp extends chauvinism to economics promising to keep multinationals at bay and an industrial policy that is strongly nationalistic in approach and content
# ::alignments 23-24|0.1.0.1.1 22-23|0.1.0.1 21-22|0.1.0.1.0 19-20|0.1.0 18-19|0.1.0.0 15-16|0.1 14-15|0.1.1 12-13|0 6-7|0.0 5-6|0.0.0 2-3|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:45.592
# ::node	0	and	12-13
# ::node	0.0	promise-01	6-7
# ::node	0.0.0	economics	5-6
# ::node	0.0.1	extend-01	2-3
# ::node	0.1	policy	15-16
# ::node	0.1.0	nationalism	19-20
# ::node	0.1.0.0	strong	18-19
# ::node	0.1.0.1	and	22-23
# ::node	0.1.0.1.0	approach-02	21-22
# ::node	0.1.0.1.1	content	23-24
# ::node	0.1.1	industry	14-15
# ::root	0	and
# ::edge	and	op1	nationalism	0.1.0.1	0.1.0	
# ::edge	and	op1	promise-01	0	0.0	
# ::edge	and	op2	approach-02	0.1.0.1	0.1.0.1.0	
# ::edge	and	op2	policy	0	0.1	
# ::edge	and	op3	content	0.1.0.1	0.1.0.1.1	
# ::edge	extend-01	ARG1	promise-01	0.0.1	0.0	
# ::edge	nationalism	degree	strong	0.1.0	0.1.0.0	
# ::edge	policy	mod	industry	0.1	0.1.1	
# ::edge	policy	mod	nationalism	0.1	0.1.0	
# ::edge	promise-01	ARG1	economics	0.0	0.0.0	
(a3 / and 
      :op1 (p2 / promise-01 
            :ARG1 (e / economics) 
            :ARG1-of (e2 / extend-01)) 
      :op2 (p / policy 
            :mod (n / nationalism 
                  :degree (s / strong) 
                  :op-of (a / and 
                        :op1 (a2 / approach-02) 
                        :op2 (c / content))) 
            :mod (i / industry)))

# ::snt for them japan was a magnet promising them wages many times what they could earn at home but according to one pakistani worker who yesterday decided to speak out publicly the reality was very different
# ::tok for them japan was a magnet promising them wages many times what they could earn at home but according to one pakistani worker who yesterday decided to speak out publicly the reality was very different
# ::alignments 34-35|0.1.2.0 33-34|0.1.2.0.1 31-32|0.1.2.0.0 29-30|0.1.2.0.0.0.2 27-28|0.1.2.0.0.0 25-26|0.1.2.0.0.0.1 24-25|0.1.2.0.0.0.0 22-23|0.1.2.0.0.0.1.0.1+0.1.2.0.0.0.1.0 17-18|0 16-17|0.0 14-15|0.1 13-14|0.1.2 12-13|0.1.0 9-10|0.1.1 8-9|0.1.2.0.0.0.1.0.0.0 6-7|0.1.2.0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:46.316
# ::node	0	contrast-01	17-18
# ::node	0.0	home	16-17
# ::node	0.1	earn-01	14-15
# ::node	0.1.0	they	12-13
# ::node	0.1.1	many	9-10
# ::node	0.1.2	possible	13-14
# ::node	0.1.2.0	differ-02	34-35
# ::node	0.1.2.0.0	reality	31-32
# ::node	0.1.2.0.0.0	speak-01	27-28
# ::node	0.1.2.0.0.0.0	yesterday	24-25
# ::node	0.1.2.0.0.0.1	decide-01	25-26
# ::node	0.1.2.0.0.0.1.0	person	22-23
# ::node	0.1.2.0.0.0.1.0.0	promise-01	6-7
# ::node	0.1.2.0.0.0.1.0.0.0	wage	8-9
# ::node	0.1.2.0.0.0.1.0.1	work-01	22-23
# ::node	0.1.2.0.0.0.2	public	29-30
# ::node	0.1.2.0.1	very	33-34
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	home	0	0.0	
# ::edge	decide-01	ARG0	person	0.1.2.0.0.0.1	0.1.2.0.0.0.1.0	
# ::edge	decide-01	ARG1	speak-01	0.1.2.0.0.0.1	0.1.2.0.0.0	
# ::edge	differ-02	ARG0	possible	0.1.2.0	0.1.2	
# ::edge	differ-02	ARG1	reality	0.1.2.0	0.1.2.0.0	
# ::edge	differ-02	degree	very	0.1.2.0	0.1.2.0.1	
# ::edge	earn-01	ARG0	they	0.1	0.1.0	
# ::edge	earn-01	ARG1	many	0.1	0.1.1	
# ::edge	earn-01	ARG2	contrast-01	0.1	0	
# ::edge	possible	domain	earn-01	0.1.2	0.1	
# ::edge	promise-01	ARG0	person	0.1.2.0.0.0.1.0.0	0.1.2.0.0.0.1.0	
# ::edge	promise-01	ARG1	wage	0.1.2.0.0.0.1.0.0	0.1.2.0.0.0.1.0.0.0	
# ::edge	speak-01	ARG0	yesterday	0.1.2.0.0.0	0.1.2.0.0.0.0	
# ::edge	speak-01	ARG1	reality	0.1.2.0.0.0	0.1.2.0.0	
# ::edge	speak-01	manner	public	0.1.2.0.0.0	0.1.2.0.0.0.2	
# ::edge	work-01	ARG0	person	0.1.2.0.0.0.1.0.1	0.1.2.0.0.0.1.0	
(c / contrast-01 
      :ARG1 (h / home) 
      :ARG2-of (e / earn-01 
            :ARG0 (t / they) 
            :ARG1 (m / many) 
            :domain-of (p3 / possible 
                  :ARG0-of (d / differ-02 
                        :ARG1 (r / reality 
                              :ARG1-of (s / speak-01 
                                    :ARG0 (y / yesterday) 
                                    :ARG1-of (d2 / decide-01 
                                          :ARG0 (p2 / person 
                                                :ARG0-of (p4 / promise-01 
                                                      :ARG1 (w2 / wage)) 
                                                :ARG0-of (w / work-01))) 
                                    :manner (p / public))) 
                        :degree (v / very)))))

# ::snt the deal comes at a time when chiltern is planning a stock market flotation a move it promised to shareholders at the time of its defence against crown
# ::tok the deal comes at a time when chiltern is planning a stock market flotation a move it promised to shareholders at the time of its defence against crown
# ::alignments 27-28|0 25-26|0.1 22-23|0.0 17-18|0.0.0 16-17|0.0.0.0 12-13|0.0.0.0.0.0.0.0 11-12|0.0.0.0.0.0.0.0.0 9-10|0.0.0.0.0.0.0 5-6|0.0.0.0.0.0 1-2|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:46.439
# ::node	0	crown-01	27-28
# ::node	0.0	time	22-23
# ::node	0.0.0	promise-01	17-18
# ::node	0.0.0.0	it	16-17
# ::node	0.0.0.0.0	deal-01	1-2
# ::node	0.0.0.0.0.0	time	5-6
# ::node	0.0.0.0.0.0.0	plan-01	9-10
# ::node	0.0.0.0.0.0.0.0	market	12-13
# ::node	0.0.0.0.0.0.0.0.0	stock	11-12
# ::node	0.1	defend-01	25-26
# ::root	0	crown-01
# ::edge	crown-01	ARG0	time	0	0.0	
# ::edge	deal-01	ARG1	it	0.0.0.0.0	0.0.0.0	
# ::edge	deal-01	location	time	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	defend-01	ARG1	crown-01	0.1	0	
# ::edge	market	mod	stock	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0	
# ::edge	plan-01	ARG1	market	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	promise-01	ARG0	it	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG2	time	0.0.0	0.0	
# ::edge	time	time	plan-01	0.0.0.0.0.0	0.0.0.0.0.0.0	
(c / crown-01 
      :ARG0 (t / time 
            :ARG2-of (p / promise-01 
                  :ARG0 (i / it 
                        :ARG1-of (d2 / deal-01 
                              :location (t2 / time 
                                    :time (p2 / plan-01 
                                          :ARG1 (m / market 
                                                :mod (s / stock)))))))) 
      :ARG1-of (d / defend-01))

# ::snt three days after the coup the provisional picture which has emerged from carefully phrased official clarifications and unofficial leaks is that the bush administration did not initiate the rebellion but knew about it at least two days in advance and had promised or at least hinted at limited support
# ::tok three days after the coup the provisional picture which has emerged from carefully phrased official clarifications and unofficial leaks is that the bush administration did not initiate the rebellion but knew about it at least two days in advance and had promised or at least hinted at limited support
# ::alignments 48-49|0.1.3.0.1.0 47-48|0.1.3.0.1.0.0 45-46|0.1.3.0.1 42-43|0.1.3.0 41-42|0.1.3.0.0 39-40|0.1.3 38-39|0.1.1 36-37|0.1.3.0.0.1.1+0.1.3.0.0.1 35-36|0.1.3.0.0.1.0 32-33|0.1.0 30-31|0.1 29-30|0 28-29|0.0.0 26-27|0.0 23-24|0.0.0.1 22-23|0.0.0.1.1 18-19|0.0.0.0.0 16-17|0.0.0.0.0.1 14-15|0.0.0.0.0.0.0+0.0.0.0.0.0 12-13|0.0.0.1.0 10-11|0.0.0.0.1 7-8|0.0.0.0 6-7|0.0.0.0.2 4-5|0.1.3.0.0.0 2-3|0.1.2 1-2|0.1.2.0.1+0.1.2.0 0-1|0.1.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:47.135
# ::node	0	contrast-01	29-30
# ::node	0.0	initiate-01	26-27
# ::node	0.0.0	rebel-01	28-29
# ::node	0.0.0.0	picture	7-8
# ::node	0.0.0.0.0	leak-01	18-19
# ::node	0.0.0.0.0.0	have-org-role-91	14-15
# ::node	0.0.0.0.0.0.0	official	14-15
# ::node	0.0.0.0.0.1	and	16-17
# ::node	0.0.0.0.1	emerge-02	10-11
# ::node	0.0.0.0.2	provisional	6-7
# ::node	0.0.0.1	administrate-01	23-24
# ::node	0.0.0.1.0	careful	12-13
# ::node	0.0.0.1.1	bush-league	22-23
# ::node	0.1	know-01	30-31
# ::node	0.1.0	it	32-33
# ::node	0.1.1	advance-01	38-39
# ::node	0.1.2	after	2-3
# ::node	0.1.2.0	temporal-quantity	1-2
# ::node	0.1.2.0.0	3	0-1
# ::node	0.1.2.0.1	day	1-2
# ::node	0.1.3	and	39-40
# ::node	0.1.3.0	or	42-43
# ::node	0.1.3.0.0	promise-01	41-42
# ::node	0.1.3.0.0.0	coup	4-5
# ::node	0.1.3.0.0.1	temporal-quantity	36-37
# ::node	0.1.3.0.0.1.0	2	35-36
# ::node	0.1.3.0.0.1.1	day	36-37
# ::node	0.1.3.0.1	hint-01	45-46
# ::node	0.1.3.0.1.0	support-01	48-49
# ::node	0.1.3.0.1.0.0	limit-01	47-48
# ::root	0	contrast-01
# ::edge	administrate-01	ARG1	careful	0.0.0.1	0.0.0.1.0	
# ::edge	administrate-01	mod	bush-league	0.0.0.1	0.0.0.1.1	
# ::edge	after	op1	know-01	0.1.2	0.1	
# ::edge	after	quant	temporal-quantity	0.1.2	0.1.2.0	
# ::edge	and	op1	know-01	0.1.3	0.1	
# ::edge	and	op1	leak-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	and	op2	or	0.1.3	0.1.3.0	
# ::edge	contrast-01	ARG1	initiate-01	0	0.0	
# ::edge	contrast-01	ARG2	know-01	0	0.1	
# ::edge	emerge-02	ARG1	picture	0.0.0.0.1	0.0.0.0	
# ::edge	have-org-role-91	ARG0	leak-01	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	have-org-role-91	ARG2	official	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	hint-01	ARG2	support-01	0.1.3.0.1	0.1.3.0.1.0	
# ::edge	initiate-01	ARG1	rebel-01	0.0	0.0.0	
# ::edge	know-01	ARG1	it	0.1	0.1.0	
# ::edge	know-01	manner	advance-01	0.1	0.1.1	
# ::edge	leak-01	ARG0	picture	0.0.0.0.0	0.0.0.0	
# ::edge	limit-01	ARG1	support-01	0.1.3.0.1.0.0	0.1.3.0.1.0	
# ::edge	or	op1	promise-01	0.1.3.0	0.1.3.0.0	
# ::edge	or	op2	hint-01	0.1.3.0	0.1.3.0.1	
# ::edge	picture	mod	provisional	0.0.0.0	0.0.0.0.2	
# ::edge	promise-01	ARG0	coup	0.1.3.0.0	0.1.3.0.0.0	
# ::edge	promise-01	ARG1	temporal-quantity	0.1.3.0.0	0.1.3.0.0.1	
# ::edge	rebel-01	ARG0	picture	0.0.0	0.0.0.0	
# ::edge	rebel-01	ARG2	administrate-01	0.0.0	0.0.0.1	
# ::edge	temporal-quantity	quant	2	0.1.3.0.0.1	0.1.3.0.0.1.0	
# ::edge	temporal-quantity	quant	3	0.1.2.0	0.1.2.0.0	
# ::edge	temporal-quantity	unit	day	0.1.2.0	0.1.2.0.1	
# ::edge	temporal-quantity	unit	day	0.1.3.0.0.1	0.1.3.0.0.1.1	
(c / contrast-01 
      :ARG1 (i2 / initiate-01 
            :ARG1 (r / rebel-01 
                  :ARG0 (p2 / picture 
                        :ARG0-of (l2 / leak-01 
                              :ARG0-of (h2 / have-org-role-91 
                                    :ARG2 (o2 / official)) 
                              :op-of (a4 / and)) 
                        :ARG1-of (e / emerge-02) 
                        :mod (p3 / provisional)) 
                  :ARG2 (a3 / administrate-01 
                        :ARG1 (c2 / careful) 
                        :mod (b / bush-league)))) 
      :ARG2 (k / know-01 
            :ARG1 (i / it) 
            :manner (a2 / advance-01) 
            :op-of (a5 / after 
                  :quant (t2 / temporal-quantity 
                        :quant 3 
                        :unit (d2 / day))) 
            :op-of (a / and 
                  :op1 (o / or 
                        :op1 (p / promise-01 
                              :ARG0 (c3 / coup) 
                              :ARG1 (t / temporal-quantity 
                                    :quant 2 
                                    :unit (d / day))) 
                        :op2 (h / hint-01 
                              :ARG2 (s / support-01 
                                    :ARG1-of (l / limit-01)))))))

# ::snt the korean government has promised to remove quotas on whisky from 1 january 1990 but no one in scotland is holding his breath
# ::tok the korean government has promised to remove quotas on whisky from 1 january 1990 but no one in scotland is holding his breath
# ::alignments 22-23|0.1.0 20-21|0.1 18-19|0.0.0.0.0+0.0.0.0+0.0.0 15-16|0.1.1 14-15|0 11-14|0.0.2.0.2+0.0.2.0.1+0.0.2.0.0+0.0.2.0 7-8|0.0.1 6-7|0.0.2 4-5|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:47.235
# ::node	0	contrast-01	14-15
# ::node	0.0	promise-01	4-5
# ::node	0.0.0	country	18-19
# ::node	0.0.0.0	name	18-19
# ::node	0.0.0.0.0	"Scotland"	18-19
# ::node	0.0.1	quota	7-8
# ::node	0.0.2	remove-01	6-7
# ::node	0.0.2.0	date-entity	11-14
# ::node	0.0.2.0.0	1	11-14
# ::node	0.0.2.0.1	1	11-14
# ::node	0.0.2.0.2	1990	11-14
# ::node	0.1	hold-01	20-21
# ::node	0.1.0	breathe-01	22-23
# ::node	0.1.1	-	15-16
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	promise-01	0	0.0	
# ::edge	contrast-01	ARG2	hold-01	0	0.1	
# ::edge	country	name	name	0.0.0	0.0.0.0	
# ::edge	date-entity	day	1	0.0.2.0	0.0.2.0.0	
# ::edge	date-entity	month	1	0.0.2.0	0.0.2.0.1	
# ::edge	date-entity	year	1990	0.0.2.0	0.0.2.0.2	
# ::edge	hold-01	ARG1	breathe-01	0.1	0.1.0	
# ::edge	hold-01	time	-	0.1	0.1.1	
# ::edge	name	op1	"Scotland"	0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	ARG0	country	0.0	0.0.0	
# ::edge	promise-01	ARG1	quota	0.0	0.0.1	
# ::edge	promise-01	ARG2	remove-01	0.0	0.0.2	
# ::edge	remove-01	time	date-entity	0.0.2	0.0.2.0	
(c2 / contrast-01 
      :ARG1 (p / promise-01 
            :ARG0 (c / country 
                  :name (n / name 
                        :op1 "Scotland")) 
            :ARG1 (q / quota) 
            :ARG2 (r / remove-01 
                  :time (d / date-entity 
                        :day 1 
                        :month 1 
                        :year 1990))) 
      :ARG2 (h / hold-01 
            :ARG1 (b / breathe-01) 
            :time (- / -)))

# ::snt rob said john i promise you this lady lacks nothing
# ::tok rob said john i promise you this lady lacks nothing
# ::alignments 9-10|0.0.1.0.1 8-9|0.0.1.0 7-8|0.0.1.0.0 6-7|0.0.1.0.0.0 5-6|0.0.1 4-5|0.0 3-4|0.0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:47.472
# ::node	0	say-01	1-2
# ::node	0.0	promise-01	4-5
# ::node	0.0.0	i	3-4
# ::node	0.0.1	you	5-6
# ::node	0.0.1.0	lack-01	8-9
# ::node	0.0.1.0.0	lady	7-8
# ::node	0.0.1.0.0.0	this	6-7
# ::node	0.0.1.0.1	nothing	9-10
# ::root	0	say-01
# ::edge	lack-01	ARG0	lady	0.0.1.0	0.0.1.0.0	
# ::edge	lack-01	ARG1	nothing	0.0.1.0	0.0.1.0.1	
# ::edge	lack-01	ARG2	you	0.0.1.0	0.0.1	
# ::edge	lady	mod	this	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	promise-01	ARG0	i	0.0	0.0.0	
# ::edge	promise-01	ARG1	you	0.0	0.0.1	
# ::edge	say-01	ARG1	promise-01	0	0.0	
(s / say-01 
      :ARG1 (p / promise-01 
            :ARG0 (i / i) 
            :ARG1 (y / you 
                  :ARG2-of (l / lack-01 
                        :ARG0 (l2 / lady 
                              :mod (t / this)) 
                        :ARG1 (n / nothing)))))

# ::snt murray who won the 3000m here last year was promised a pacemaker
# ::tok murray who won the 3000m here last year was promised a pacemaker
# ::alignments 9-10|0.0 7-8|0.0.1 6-7|0.0.1.0 5-6|0.0.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:47.485
# ::node	0	win-01	2-3
# ::node	0.0	promise-01	9-10
# ::node	0.0.0	here	5-6
# ::node	0.0.1	year	7-8
# ::node	0.0.1.0	last	6-7
# ::root	0	win-01
# ::edge	promise-01	ARG0	here	0.0	0.0.0	
# ::edge	promise-01	time	year	0.0	0.0.1	
# ::edge	win-01	ARG1	promise-01	0	0.0	
# ::edge	year	mod	last	0.0.1	0.0.1.0	
(w / win-01 
      :ARG1 (p / promise-01 
            :ARG0 (h / here) 
            :time (y / year 
                  :mod (l / last))))

# ::snt while a big northwesterly made a spectacular start for the 126 yachts leaving sydney harbour it soon turned into the south increased to between 30 and 40 knots and promised a rugged opening night
# ::tok while a big northwesterly made a spectacular start for the 126 yachts leaving sydney harbour it soon turned into the south increased to between 30 and 40 knots and promised a rugged opening night
# ::alignments 33-34|0.0.1.0.2.1.3 32-33|0.0.1.0.2.1.2 31-32|0.0.1.0.2.1.2.1 29-30|0.0.1.0.2.1 28-29|0.0.1.0.2 26-27|0.0.1.0.2.1.0.0.0 25-26|0 24-25|0.0.1.0.2.1.2.0 23-24|0.0.1.0.0 21-22|0.0.1.0.2.1.0.0 20-21|0.0.1.0.2.1.0 16-17|0.0.1.0.2.0.0 15-16|0.0.1.0.2.1.1 14-15|0.0.1.0.2.0 12-13|0.0 11-12|0.0.1 7-8|0.0.1.0 6-7|0.0.1.0.1 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:48.122
# ::node	0	and	25-26
# ::node	0.0	leave-01	12-13
# ::node	0.0.0	big	2-3
# ::node	0.0.1	yacht	11-12
# ::node	0.0.1.0	start-01	7-8
# ::node	0.0.1.0.0	between	23-24
# ::node	0.0.1.0.1	spectacular	6-7
# ::node	0.0.1.0.2	and	28-29
# ::node	0.0.1.0.2.0	harbour	14-15
# ::node	0.0.1.0.2.0.0	soon	16-17
# ::node	0.0.1.0.2.1	promise-01	29-30
# ::node	0.0.1.0.2.1.0	south	20-21
# ::node	0.0.1.0.2.1.0.0	increase-01	21-22
# ::node	0.0.1.0.2.1.0.0.0	40	26-27
# ::node	0.0.1.0.2.1.1	it	15-16
# ::node	0.0.1.0.2.1.2	open-01	32-33
# ::node	0.0.1.0.2.1.2.0	30	24-25
# ::node	0.0.1.0.2.1.2.1	rugged	31-32
# ::node	0.0.1.0.2.1.3	night	33-34
# ::root	0	and
# ::edge	and	op1	leave-01	0	0.0	
# ::edge	and	op1	start-01	0.0.1.0.2	0.0.1.0	
# ::edge	and	op2	harbour	0.0.1.0.2	0.0.1.0.2.0	
# ::edge	and	op3	promise-01	0.0.1.0.2	0.0.1.0.2.1	
# ::edge	harbour	mod	soon	0.0.1.0.2.0	0.0.1.0.2.0.0	
# ::edge	increase-01	ARG0	40	0.0.1.0.2.1.0.0	0.0.1.0.2.1.0.0.0	
# ::edge	increase-01	ARG1	south	0.0.1.0.2.1.0.0	0.0.1.0.2.1.0	
# ::edge	leave-01	ARG0	big	0.0	0.0.0	
# ::edge	leave-01	ARG1	yacht	0.0	0.0.1	
# ::edge	open-01	ARG1	30	0.0.1.0.2.1.2	0.0.1.0.2.1.2.0	
# ::edge	open-01	mod	rugged	0.0.1.0.2.1.2	0.0.1.0.2.1.2.1	
# ::edge	promise-01	ARG0	south	0.0.1.0.2.1	0.0.1.0.2.1.0	
# ::edge	promise-01	ARG1	it	0.0.1.0.2.1	0.0.1.0.2.1.1	
# ::edge	promise-01	ARG2	open-01	0.0.1.0.2.1	0.0.1.0.2.1.2	
# ::edge	promise-01	time	night	0.0.1.0.2.1	0.0.1.0.2.1.3	
# ::edge	start-01	ARG0	between	0.0.1.0	0.0.1.0.0	
# ::edge	start-01	ARG1	yacht	0.0.1.0	0.0.1	
# ::edge	start-01	mod	spectacular	0.0.1.0	0.0.1.0.1	
(a2 / and 
      :op1 (l / leave-01 
            :ARG0 (b2 / big) 
            :ARG1 (y / yacht 
                  :ARG1-of (s3 / start-01 
                        :ARG0 (b / between) 
                        :mod (s4 / spectacular) 
                        :op-of (a / and 
                              :op1 (h / harbour 
                                    :mod (s2 / soon)) 
                              :op2 (p / promise-01 
                                    :ARG0 (s / south 
                                          :ARG1-of (i / increase-01 
                                                :ARG0 40)) 
                                    :ARG1 (i2 / it) 
                                    :ARG2 (o / open-01 
                                          :ARG1 30 
                                          :mod (r / rugged)) 
                                    :time (n / night)))))))

# ::snt  mr clarke kept trying to push him off promising him a white paper in the autumn but mr cook went on chasing
# ::tok mr clarke kept trying to push him off promising him a white paper in the autumn but mr cook went on chasing
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:48.122
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt run away on to the streets  but shes promised father not to run away hasnt she
# ::tok run away on to the streets but shes promised father not to run away hasnt she
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:48.123
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt sir paul girolami glaxo chairman and a member of ambrosettis advisory board in the uk has promised a warts and all session
# ::tok sir paul girolami glaxo chairman and a member of ambrosettis advisory board in the uk has promised a warts and all session
# ::alignments 21-22|0.3.1 20-21|0.3.1.0 19-20|0.1 16-17|0 10-11|0.2 7-8|0.3.0.0+0.3.0 5-6|0.3 4-5|0.0+0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:48.317
# ::node	0	promise-01	16-17
# ::node	0.0	chairman	4-5
# ::node	0.0.0	have-org-role-91	4-5
# ::node	0.1	and	19-20
# ::node	0.2	advise-01	10-11
# ::node	0.3	and	5-6
# ::node	0.3.0	have-org-role-91	7-8
# ::node	0.3.0.0	member	7-8
# ::node	0.3.1	session	21-22
# ::node	0.3.1.0	all	20-21
# ::root	0	promise-01
# ::edge	and	op1	have-org-role-91	0.3	0.3.0	
# ::edge	and	op2	promise-01	0.3	0	
# ::edge	and	op3	session	0.3	0.3.1	
# ::edge	have-org-role-91	ARG2	chairman	0.0.0	0.0	
# ::edge	have-org-role-91	ARG2	member	0.3.0	0.3.0.0	
# ::edge	promise-01	ARG0	chairman	0	0.0	
# ::edge	promise-01	ARG1	and	0	0.1	
# ::edge	promise-01	ARG2	advise-01	0	0.2	
# ::edge	session	mod	all	0.3.1	0.3.1.0	
(p / promise-01 
      :ARG0 (c / chairman 
            :ARG2-of (h2 / have-org-role-91)) 
      :ARG1 (a2 / and) 
      :ARG2 (a3 / advise-01) 
      :op-of (a4 / and 
            :op1 (h / have-org-role-91 
                  :ARG2 (m / member)) 
            :op2 (s / session 
                  :mod (a / all))))

# ::snt   a vital new part in the complex structure required to win an olympic medal was promised yesterday by the british olympic association dash
# ::tok a vital new part in the complex structure required to win an olympic medal was promised yesterday by the british olympic association dash
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:48.317
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt foster plans to commission a group of distinguished european architects the quality of the architecture promises to be very high
# ::tok foster plans to commission a group of distinguished european architects the quality of the architecture promises to be very high
# ::alignments 19-20|0.0.1.0.1 18-19|0.0.1.0.1.0 15-16|0.0.1.0 11-12|0.0.1.0.0 8-9|0.0.0.0.0.0.0+0.0.0.0.0.0+0.0.0.0.0 7-8|0.0.0.0 5-6|0.0.1 3-4|0.0 1-2|0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:48.777
# ::node	0	foster	0-1
# ::node	0.0	commission	3-4
# ::node	0.0.0	plan-01	1-2
# ::node	0.0.0.0	distinguish-01	7-8
# ::node	0.0.0.0.0	continent	8-9
# ::node	0.0.0.0.0.0	name	8-9
# ::node	0.0.0.0.0.0.0	"Europe"	8-9
# ::node	0.0.1	group	5-6
# ::node	0.0.1.0	promise-01	15-16
# ::node	0.0.1.0.0	quality	11-12
# ::node	0.0.1.0.1	high	19-20
# ::node	0.0.1.0.1.0	very	18-19
# ::root	0	foster
# ::edge	commission	mod	group	0.0	0.0.1	
# ::edge	continent	name	name	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	distinguish-01	ARG1	continent	0.0.0.0	0.0.0.0.0	
# ::edge	distinguish-01	ARG2	plan-01	0.0.0.0	0.0.0	
# ::edge	foster	purpose	commission	0	0.0	
# ::edge	high	degree	very	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	name	op1	"Europe"	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	plan-01	ARG1	commission	0.0.0	0.0	
# ::edge	promise-01	ARG0	quality	0.0.1.0	0.0.1.0.0	
# ::edge	promise-01	ARG1	high	0.0.1.0	0.0.1.0.1	
# ::edge	promise-01	source	group	0.0.1.0	0.0.1	
(f / foster 
      :purpose (c2 / commission 
            :ARG1-of (p2 / plan-01 
                  :ARG2-of (d / distinguish-01 
                        :ARG1 (c / continent 
                              :name (n / name 
                                    :op1 "Europe")))) 
            :mod (g / group 
                  :source-of (p / promise-01 
                        :ARG0 (q / quality) 
                        :ARG1 (h / high 
                              :degree (v / very))))))

# ::snt that is why if the stock exchange had built taurus many years ago as promised it could also have ensured the earlier abolition of stamp duty
# ::tok that is why if the stock exchange had built taurus many years ago as promised it could also have ensured the earlier abolition of stamp duty
# ::alignments 25-26|0.0.0.1.0.1.0 24-25|0.0.0.1.0.1.0.0 22-23|0.0.0.1.0.1 21-22|0.0.0.1.0.1.1 19-20|0.0.0.1.0 17-18|0.0.0.1.1 16-17|0.0.0.1 15-16|0.0.0.1.0.0 14-15|0.0.0 11-12|0.0.0.0.1+0.0.0.0 10-11|0.0.0.0.0 8-9|0.0 6-7|0 5-6|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:48.872
# ::node	0	exchange-01	6-7
# ::node	0.0	build-01	8-9
# ::node	0.0.0	promise-01	14-15
# ::node	0.0.0.0	temporal-quantity	11-12
# ::node	0.0.0.0.0	many	10-11
# ::node	0.0.0.0.1	year	11-12
# ::node	0.0.0.1	possible	16-17
# ::node	0.0.0.1.0	ensure-01	19-20
# ::node	0.0.0.1.0.0	it	15-16
# ::node	0.0.0.1.0.1	abolish-01	22-23
# ::node	0.0.0.1.0.1.0	duty	25-26
# ::node	0.0.0.1.0.1.0.0	stamp-05	24-25
# ::node	0.0.0.1.0.1.1	early	21-22
# ::node	0.0.0.1.1	also	17-18
# ::node	0.1	stock	5-6
# ::root	0	exchange-01
# ::edge	abolish-01	ARG1	duty	0.0.0.1.0.1	0.0.0.1.0.1.0	
# ::edge	abolish-01	mod	early	0.0.0.1.0.1	0.0.0.1.0.1.1	
# ::edge	build-01	ARG0	exchange-01	0.0	0	
# ::edge	build-01	ARG1	promise-01	0.0	0.0.0	
# ::edge	duty	topic	stamp-05	0.0.0.1.0.1.0	0.0.0.1.0.1.0.0	
# ::edge	ensure-01	ARG0	it	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	ensure-01	ARG1	abolish-01	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	exchange-01	ARG1	stock	0	0.1	
# ::edge	many	op1	temporal-quantity	0.0.0.0.0	0.0.0.0	
# ::edge	possible	domain	ensure-01	0.0.0.1	0.0.0.1.0	
# ::edge	possible	mod	also	0.0.0.1	0.0.0.1.1	
# ::edge	promise-01	ARG0	temporal-quantity	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	possible	0.0.0	0.0.0.1	
# ::edge	temporal-quantity	unit	year	0.0.0.0	0.0.0.0.1	
(e3 / exchange-01 
      :ARG0-of (b / build-01 
            :ARG1 (p2 / promise-01 
                  :ARG0 (t / temporal-quantity 
                        :op-of (m / many) 
                        :unit (y / year)) 
                  :ARG1 (p / possible 
                        :domain (e2 / ensure-01 
                              :ARG0 (i / it) 
                              :ARG1 (a / abolish-01 
                                    :ARG1 (d / duty 
                                          :topic (s / stamp-05)) 
                                    :mod (e / early))) 
                        :mod (a2 / also)))) 
      :ARG1 (s2 / stock))

# ::snt for it had been organized in aid of some religious charity and promised to be more decorous than a fair should be
# ::tok for it had been organized in aid of some religious charity and promised to be more decorous than a fair should be
# ::alignments 20-21|0 19-20|0.0 12-13|0.1.1 11-12|0.1 10-11|0.1.0.0.0.0 8-9|0.1.0.0.0.0.0 6-7|0.1.0.0.0 4-5|0.1.0 1-2|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:48.927
# ::node	0	recommend-01	20-21
# ::node	0.0	fair	19-20
# ::node	0.1	and	11-12
# ::node	0.1.0	organize-01	4-5
# ::node	0.1.0.0	it	1-2
# ::node	0.1.0.0.0	aid-01	6-7
# ::node	0.1.0.0.0.0	charity	10-11
# ::node	0.1.0.0.0.0.0	some	8-9
# ::node	0.1.1	promise-01	12-13
# ::root	0	recommend-01
# ::edge	aid-01	ARG0	it	0.1.0.0.0	0.1.0.0	
# ::edge	aid-01	ARG1	charity	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	and	op1	organize-01	0.1	0.1.0	
# ::edge	and	op2	promise-01	0.1	0.1.1	
# ::edge	and	op3	recommend-01	0.1	0	
# ::edge	charity	mod	some	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	organize-01	ARG1	it	0.1.0	0.1.0.0	
# ::edge	recommend-01	ARG1	fair	0	0.0	
(r / recommend-01 
      :ARG1 (f / fair) 
      :op-of (a / and 
            :op1 (o / organize-01 
                  :ARG1 (i / it 
                        :ARG0-of (a2 / aid-01 
                              :ARG1 (c / charity 
                                    :mod (s / some))))) 
            :op2 (p / promise-01)))

# ::snt subsequently he can claim credit for being on the side of common sense in opposing the poll tax which promises to be an awful liability for the government
# ::tok subsequently he can claim credit for being on the side of common sense in opposing the poll tax which promises to be an awful liability for the government
# ::alignments 24-25|0.0.0.0.0.0 23-24|0.0.0.0.0.0.0 19-20|0.0.0.0.0 17-18|0.0.0.0 16-17|0.0.0.0.1 14-15|0.0.0.0.2 12-13|0.0.0.0.2.0 11-12|0.0.0.0.2.0.0 9-10|0.0.0.0.2.0.1 4-5|0.0.1 3-4|0.0 2-3|0 1-2|0.0.0 0-1|0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:49.275
# ::node	0	possible	2-3
# ::node	0.0	claim-01	3-4
# ::node	0.0.0	he	1-2
# ::node	0.0.0.0	tax-01	17-18
# ::node	0.0.0.0.0	promise-01	19-20
# ::node	0.0.0.0.0.0	liability	24-25
# ::node	0.0.0.0.0.0.0	awful	23-24
# ::node	0.0.0.0.1	poll-01	16-17
# ::node	0.0.0.0.2	oppose-01	14-15
# ::node	0.0.0.0.2.0	sense	12-13
# ::node	0.0.0.0.2.0.0	common	11-12
# ::node	0.0.0.0.2.0.1	side	9-10
# ::node	0.0.1	credit-02	4-5
# ::node	0.0.2	subsequent	0-1
# ::root	0	possible
# ::edge	claim-01	ARG0	he	0.0	0.0.0	
# ::edge	claim-01	ARG1	credit-02	0.0	0.0.1	
# ::edge	claim-01	manner	subsequent	0.0	0.0.2	
# ::edge	liability	degree	awful	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	oppose-01	ARG0	sense	0.0.0.0.2	0.0.0.0.2.0	
# ::edge	oppose-01	ARG1	tax-01	0.0.0.0.2	0.0.0.0	
# ::edge	possible	domain	claim-01	0	0.0	
# ::edge	promise-01	ARG0	tax-01	0.0.0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	liability	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	sense	mod	common	0.0.0.0.2.0	0.0.0.0.2.0.0	
# ::edge	side	mod	sense	0.0.0.0.2.0.1	0.0.0.0.2.0	
# ::edge	tax-01	ARG0	he	0.0.0.0	0.0.0	
# ::edge	tax-01	ARG1	poll-01	0.0.0.0	0.0.0.0.1	
(p3 / possible 
      :domain (c3 / claim-01 
            :ARG0 (h / he 
                  :ARG0-of (t / tax-01 
                        :ARG0-of (p / promise-01 
                              :ARG1 (l / liability 
                                    :degree (a / awful))) 
                        :ARG1 (p2 / poll-01) 
                        :ARG1-of (o / oppose-01 
                              :ARG0 (s / sense 
                                    :mod (c / common) 
                                    :mod-of (s2 / side))))) 
            :ARG1 (c2 / credit-02) 
            :manner (s3 / subsequent)))

# ::snt perhaps the most positive feature of yesterdays session was the gungho contribution of the captain finlay calder who promised intense allround commitment at ballymore
# ::tok perhaps the most positive feature of yesterdays session was the gungho contribution of the captain finlay calder who promised intense allround commitment at ballymore
# ::alignments 21-22|0.1.0 19-20|0.1.0.0 18-19|0.1 15-17|0.0.1.0+0.0.1.1+0.0.1+0.0 14-15|0.0.0.1+0.0.0 11-12|0 7-8|0.0.0.0 4-5|0.0.0.0.0 3-4|0.0.0.0.0.1 2-3|0.0.0.0.0.1.0 0-1|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:49.394
# ::node	0	contribute-01	11-12
# ::node	0.0	person	15-17
# ::node	0.0.0	have-org-role-91	14-15
# ::node	0.0.0.0	session	7-8
# ::node	0.0.0.0.0	feature-01	4-5
# ::node	0.0.0.0.0.0	perhaps	0-1
# ::node	0.0.0.0.0.1	positive	3-4
# ::node	0.0.0.0.0.1.0	most	2-3
# ::node	0.0.0.1	captain	14-15
# ::node	0.0.1	name	15-17
# ::node	0.0.1.0	"calder"	15-17
# ::node	0.0.1.1	"finlay"	15-17
# ::node	0.1	promise-01	18-19
# ::node	0.1.0	commit-01	21-22
# ::node	0.1.0.0	intense	19-20
# ::root	0	contribute-01
# ::edge	commit-01	mod	intense	0.1.0	0.1.0.0	
# ::edge	contribute-01	ARG0	person	0	0.0	
# ::edge	feature-01	ARG1	session	0.0.0.0.0	0.0.0.0	
# ::edge	feature-01	mod	perhaps	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	feature-01	mod	positive	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	have-org-role-91	ARG0	person	0.0.0	0.0	
# ::edge	have-org-role-91	ARG1	session	0.0.0	0.0.0.0	
# ::edge	have-org-role-91	ARG2	captain	0.0.0	0.0.0.1	
# ::edge	name	op1	"calder"	0.0.1	0.0.1.0	
# ::edge	name	op2	"finlay"	0.0.1	0.0.1.1	
# ::edge	person	name	name	0.0	0.0.1	
# ::edge	positive	degree	most	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	promise-01	ARG0	contribute-01	0.1	0	
# ::edge	promise-01	ARG1	commit-01	0.1	0.1.0	
(c3 / contribute-01 
      :ARG0 (p2 / person 
            :ARG0-of (h / have-org-role-91 
                  :ARG1 (s / session 
                        :ARG1-of (f / feature-01 
                              :mod (p4 / perhaps) 
                              :mod (p3 / positive 
                                    :degree (m / most)))) 
                  :ARG2 (c2 / captain)) 
            :name (n / name 
                  :op1 "calder" 
                  :op2 "finlay")) 
      :ARG0-of (p / promise-01 
            :ARG1 (c / commit-01 
                  :mod (i / intense))))

# ::snt to bring him once and for all to his senses was like faroff thunder that could promise any sort of weather
# ::tok to bring him once and for all to his senses was like faroff thunder that could promise any sort of weather
# ::alignments 20-21|0.1.0 18-19|0.0 17-18|0.0.0 16-17|0.1 15-16|0 9-10|0.1.1.0.0 6-7|0.1.1.0.1 4-5|0.1.1 3-4|0.1.1.0.2 1-2|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:49.477
# ::node	0	possible	15-16
# ::node	0.0	sort	18-19
# ::node	0.0.0	any	17-18
# ::node	0.1	promise-01	16-17
# ::node	0.1.0	weather	20-21
# ::node	0.1.1	and	4-5
# ::node	0.1.1.0	bring-01	1-2
# ::node	0.1.1.0.0	sense	9-10
# ::node	0.1.1.0.1	all	6-7
# ::node	0.1.1.0.2	once	3-4
# ::root	0	possible
# ::edge	bring-01	ARG0	sense	0.1.1.0	0.1.1.0.0	
# ::edge	bring-01	ARG1	all	0.1.1.0	0.1.1.0.1	
# ::edge	bring-01	ARG2	and	0.1.1.0	0.1.1	
# ::edge	bring-01	direction	once	0.1.1.0	0.1.1.0.2	
# ::edge	possible	domain	sort	0	0.0	
# ::edge	promise-01	ARG1	weather	0.1	0.1.0	
# ::edge	promise-01	ARG2	and	0.1	0.1.1	
# ::edge	promise-01	mod	possible	0.1	0	
# ::edge	sort	mod	any	0.0	0.0.0	
(p2 / possible 
      :domain (s / sort 
            :mod (a / any)) 
      :mod-of (p / promise-01 
            :ARG1 (w / weather) 
            :ARG2 (a3 / and 
                  :ARG2-of (b / bring-01 
                        :ARG0 (s2 / sense) 
                        :ARG1 (a2 / all) 
                        :direction (o / once)))))

# ::snt the films highly misleading poster all sassy sixtiesstyle graphics and buzzwords promises an upbeat yoof movie but amiss sour little story translates badly to the screen
# ::tok the films highly misleading poster all sassy sixtiesstyle graphics and buzzwords promises an upbeat yoof movie but amiss sour little story translates badly to the screen
# ::alignments 25-26|0.0 20-21|0.3.0 19-20|0.3.0.0 16-17|0.1.0.0.0.0 15-16|0.1.0.0.0 11-12|0.1.0.0 9-10|0.1.0 5-6|0.1.0.1 4-5|0.1 3-4|0 2-3|0.3 1-2|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:49.758
# ::node	0	mislead-02	3-4
# ::node	0.0	screen	25-26
# ::node	0.1	poster	4-5
# ::node	0.1.0	and	9-10
# ::node	0.1.0.0	promise-01	11-12
# ::node	0.1.0.0.0	movie	15-16
# ::node	0.1.0.0.0.0	contrast-01	16-17
# ::node	0.1.0.1	all	5-6
# ::node	0.2	film	1-2
# ::node	0.3	high	2-3
# ::node	0.3.0	story	20-21
# ::node	0.3.0.0	little	19-20
# ::root	0	mislead-02
# ::edge	and	op1	poster	0.1.0	0.1	
# ::edge	and	quant	all	0.1.0	0.1.0.1	
# ::edge	contrast-01	ARG1	movie	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	mislead-02	ARG0	screen	0	0.0	
# ::edge	mislead-02	ARG1	poster	0	0.1	
# ::edge	mislead-02	ARG2	film	0	0.2	
# ::edge	mislead-02	degree	high	0	0.3	
# ::edge	promise-01	ARG0	and	0.1.0.0	0.1.0	
# ::edge	promise-01	ARG1	movie	0.1.0.0	0.1.0.0.0	
# ::edge	story	mod	high	0.3.0	0.3	
# ::edge	story	mod	little	0.3.0	0.3.0.0	
(m2 / mislead-02 
      :ARG0 (s / screen) 
      :ARG1 (p2 / poster 
            :op-of (a / and 
                  :ARG0-of (p / promise-01 
                        :ARG1 (m / movie 
                              :ARG1-of (c / contrast-01))) 
                  :quant (a2 / all))) 
      :ARG2 (f / film) 
      :degree (h / high 
            :mod-of (s2 / story 
                  :mod (l / little))))

# ::snt freer travel has been promised but free elections dash
# ::tok freer travel has been promised but free elections dash
# ::alignments 7-8|0.1 6-7|0.1.0 5-6|0 4-5|0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:49.801
# ::node	0	contrast-01	5-6
# ::node	0.0	travel-01	1-2
# ::node	0.0.0	promise-01	4-5
# ::node	0.1	elect-01	7-8
# ::node	0.1.0	free-41	6-7
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	travel-01	0	0.0	
# ::edge	elect-01	ARG2	contrast-01	0.1	0	
# ::edge	free-41	ARG1	elect-01	0.1.0	0.1	
# ::edge	promise-01	ARG1	travel-01	0.0.0	0.0	
(c / contrast-01 
      :ARG1 (t / travel-01 
            :ARG1-of (p / promise-01)) 
      :ARG2-of (e / elect-01 
            :ARG1-of (f / free-41)))

# ::snt the rest of the meeting promises as much
# ::tok the rest of the meeting promises as much
# ::alignments 7-8|0.1 5-6|0 4-5|0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:49.815
# ::node	0	promise-01	5-6
# ::node	0.0	rest	1-2
# ::node	0.0.0	meet-03	4-5
# ::node	0.1	much	7-8
# ::root	0	promise-01
# ::edge	meet-03	part	rest	0.0.0	0.0	
# ::edge	promise-01	ARG0	rest	0	0.0	
# ::edge	promise-01	mod	much	0	0.1	
(p / promise-01 
      :ARG0 (r / rest 
            :part-of (m2 / meet-03)) 
      :mod (m / much))

# ::snt in his speech mr krenz also promised deep reforms in the economy education and the constitution and appealed to east germans not to join the human tide of emigration from the country
# ::tok in his speech mr krenz also promised deep reforms in the economy education and the constitution and appealed to east germans not to join the human tide of emigration from the country
# ::alignments 31-32|0.0.0 26-27|0.3.1.1 25-26|0.3.1.1.0 23-24|0.3.1 20-21|0.3.0.0.0.0+0.3.0.0.0+0.3.0.0+0.3.0 19-20|0.3.0.1 17-18|0.3 16-17|0.3.2 15-16|0.2 13-14|0 12-13|0.1 11-12|0.1.0 8-9|0.0 7-8|0.0.1 6-7|0.0.2 5-6|0.0.2.0 2-3|0.3.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:50.216
# ::node	0	and	13-14
# ::node	0.0	reform-01	8-9
# ::node	0.0.0	country	31-32
# ::node	0.0.1	deep	7-8
# ::node	0.0.2	promise-01	6-7
# ::node	0.0.2.0	also	5-6
# ::node	0.1	educate-01	12-13
# ::node	0.1.0	economy	11-12
# ::node	0.2	constitution	15-16
# ::node	0.3	appeal-02	17-18
# ::node	0.3.0	person	20-21
# ::node	0.3.0.0	country	20-21
# ::node	0.3.0.0.0	name	20-21
# ::node	0.3.0.0.0.0	"Germany"	20-21
# ::node	0.3.0.1	east	19-20
# ::node	0.3.1	join-01	23-24
# ::node	0.3.1.0	speech	2-3
# ::node	0.3.1.1	tide	26-27
# ::node	0.3.1.1.0	human	25-26
# ::node	0.3.2	and	16-17
# ::root	0	and
# ::edge	and	op1	appeal-02	0.3.2	0.3	
# ::edge	and	op1	educate-01	0	0.1	
# ::edge	and	op2	constitution	0	0.2	
# ::edge	and	op3	appeal-02	0	0.3	
# ::edge	appeal-02	ARG1	person	0.3	0.3.0	
# ::edge	appeal-02	ARG2	join-01	0.3	0.3.1	
# ::edge	country	name	name	0.3.0.0	0.3.0.0.0	
# ::edge	educate-01	mod	economy	0.1	0.1.0	
# ::edge	join-01	ARG0	speech	0.3.1	0.3.1.0	
# ::edge	join-01	ARG1	tide	0.3.1	0.3.1.1	
# ::edge	name	op1	"Germany"	0.3.0.0.0	0.3.0.0.0.0	
# ::edge	person	mod	country	0.3.0	0.3.0.0	
# ::edge	person	mod	east	0.3.0	0.3.0.1	
# ::edge	promise-01	ARG1	reform-01	0.0.2	0.0	
# ::edge	promise-01	mod	also	0.0.2	0.0.2.0	
# ::edge	reform-01	ARG0	country	0.0	0.0.0	
# ::edge	reform-01	ARG1	deep	0.0	0.0.1	
# ::edge	reform-01	example	and	0.0	0	
# ::edge	tide	mod	human	0.3.1.1	0.3.1.1.0	
(a3 / and 
      :example-of (r / reform-01 
            :ARG0 (c / country) 
            :ARG1 (d / deep) 
            :ARG1-of (p2 / promise-01 
                  :mod (a4 / also))) 
      :op1 (e2 / educate-01 
            :mod (e3 / economy)) 
      :op2 (c3 / constitution) 
      :op3 (a / appeal-02 
            :ARG1 (p / person 
                  :mod (c2 / country 
                        :name (n / name 
                              :op1 "Germany")) 
                  :mod (e / east)) 
            :ARG2 (j / join-01 
                  :ARG0 (s / speech) 
                  :ARG1 (t / tide 
                        :mod (h / human))) 
            :op-of (a2 / and)))

# ::snt a kind of son of ellip   rather than a straight second series it promises to have learned the lessons of the past
# ::tok a kind of son of ellip rather than a straight second series it promises to have learned the lessons of the past
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:50.217
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt two dishes had come down and one man had promised to remove his
# ::tok two dishes had come down and one man had promised to remove his
# ::alignments 11-12|0.1.1 9-10|0.1 7-8|0.1.0 5-6|0 4-5|0.0 0-1|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:50.235
# ::node	0	and	5-6
# ::node	0.0	down	4-5
# ::node	0.1	promise-01	9-10
# ::node	0.1.0	man	7-8
# ::node	0.1.1	remove-01	11-12
# ::node	0.1.1.0	2	0-1
# ::root	0	and
# ::edge	and	direction	down	0	0.0	
# ::edge	and	op1	promise-01	0	0.1	
# ::edge	promise-01	ARG0	man	0.1	0.1.0	
# ::edge	promise-01	ARG2	remove-01	0.1	0.1.1	
# ::edge	remove-01	ARG1	2	0.1.1	0.1.1.0	
(a / and 
      :direction (d / down) 
      :op1 (p / promise-01 
            :ARG0 (m / man) 
            :ARG2 (r / remove-01 
                  :ARG1 2)))

# ::snt when her complaint was passed on to the west oxfordshire councils chief executive he promised immediate action and commented i can understand how upsetting it is
# ::tok when her complaint was passed on to the west oxfordshire councils chief executive he promised immediate action and commented i can understand how upsetting it is
# ::alignments 24-25|0.0.1.0 23-24|0.0.1 21-22|0.0 20-21|0 19-20|0.0.0 18-19|0.0.2 17-18|0.0.2.0 16-17|0.0.2.0.0.2 15-16|0.0.2.0.0.2.0 14-15|0.0.2.0.0 13-14|0.0.2.0.0.0 12-13|0.0.2.0.0.1 11-12|0.0.2.0.0.1.0.1+0.0.2.0.0.1.0 10-11|0.0.2.0.0.1.0.0 8-9|0.0.2.0.0.1.0.2 2-3|0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:50.709
# ::node	0	possible	20-21
# ::node	0.0	understand-01	21-22
# ::node	0.0.0	i	19-20
# ::node	0.0.1	upset-01	23-24
# ::node	0.0.1.0	it	24-25
# ::node	0.0.1.1	complain-01	2-3
# ::node	0.0.2	comment-01	18-19
# ::node	0.0.2.0	and	17-18
# ::node	0.0.2.0.0	promise-01	14-15
# ::node	0.0.2.0.0.0	he	13-14
# ::node	0.0.2.0.0.1	executive	12-13
# ::node	0.0.2.0.0.1.0	have-org-role-91	11-12
# ::node	0.0.2.0.0.1.0.0	council	10-11
# ::node	0.0.2.0.0.1.0.1	chief	11-12
# ::node	0.0.2.0.0.1.0.2	west	8-9
# ::node	0.0.2.0.0.2	action	16-17
# ::node	0.0.2.0.0.2.0	immediate	15-16
# ::root	0	possible
# ::edge	action	time	immediate	0.0.2.0.0.2	0.0.2.0.0.2.0	
# ::edge	and	op1	promise-01	0.0.2.0	0.0.2.0.0	
# ::edge	and	op2	comment-01	0.0.2.0	0.0.2	
# ::edge	comment-01	ARG1	understand-01	0.0.2	0.0	
# ::edge	complain-01	ARG1	upset-01	0.0.1.1	0.0.1	
# ::edge	have-org-role-91	ARG0	executive	0.0.2.0.0.1.0	0.0.2.0.0.1	
# ::edge	have-org-role-91	ARG1	council	0.0.2.0.0.1.0	0.0.2.0.0.1.0.0	
# ::edge	have-org-role-91	ARG2	chief	0.0.2.0.0.1.0	0.0.2.0.0.1.0.1	
# ::edge	have-org-role-91	time	west	0.0.2.0.0.1.0	0.0.2.0.0.1.0.2	
# ::edge	possible	domain	understand-01	0	0.0	
# ::edge	promise-01	ARG0	he	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	promise-01	ARG1	executive	0.0.2.0.0	0.0.2.0.0.1	
# ::edge	promise-01	ARG2	action	0.0.2.0.0	0.0.2.0.0.2	
# ::edge	understand-01	ARG0	i	0.0	0.0.0	
# ::edge	understand-01	ARG1	upset-01	0.0	0.0.1	
# ::edge	upset-01	ARG1	it	0.0.1	0.0.1.0	
(p / possible 
      :domain (u2 / understand-01 
            :ARG0 (i2 / i) 
            :ARG1 (u / upset-01 
                  :ARG1 (i / it) 
                  :ARG1-of (c4 / complain-01)) 
            :ARG1-of (c / comment-01 
                  :op-of (a / and 
                        :op1 (p2 / promise-01 
                              :ARG0 (h / he) 
                              :ARG1 (e / executive 
                                    :ARG0-of (h2 / have-org-role-91 
                                          :ARG1 (c3 / council) 
                                          :ARG2 (c2 / chief) 
                                          :time (w / west))) 
                              :ARG2 (a2 / action 
                                    :time (i3 / immediate)))))))

# ::snt  i promised both clubs a decision when i returned from holiday
# ::tok i promised both clubs a decision when i returned from holiday
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:50.710
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt ill get you some sensible clothes martha promised noticing that grime had already attached itself to the hem of the dress
# ::tok ill get you some sensible clothes martha promised noticing that grime had already attached itself to the hem of the dress
# ::alignments 20-21|0 13-14|0.0.1.0.1 12-13|0.0.1.0.1.0 7-8|0.0.1.0 5-6|0.0.1.0.0 4-5|0.0.0 3-4|0.0.1.1 2-3|0.0.1 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:50.764
# ::node	0	dress	20-21
# ::node	0.0	ill-41	0-1
# ::node	0.0.0	sensible	4-5
# ::node	0.0.1	you	2-3
# ::node	0.0.1.0	promise-01	7-8
# ::node	0.0.1.0.0	clothes	5-6
# ::node	0.0.1.0.1	attach-01	13-14
# ::node	0.0.1.0.1.0	already	12-13
# ::node	0.0.1.1	some	3-4
# ::root	0	dress
(d / dress 
      :ARG0-of (i / ill-41 
            :ARG1 (s / sensible) 
            :mod-of (y / you 
                  :ARG1-of (p / promise-01 
                        :ARG0 (c / clothes) 
                        :ARG1-of (a / attach-01 
                              :time (a2 / already))) 
                  :quant (s2 / some))))

# ::snt the allrounder said my new contract was for less money than i had been promised for 1990
# ::tok the allrounder said my new contract was for less money than i had been promised for 1990
# ::alignments 16-17|0.1.0.1.0+0.1.0.1 14-15|0.1.0 11-12|0.1.0.0 9-10|0.1.0.0.0 8-9|0.0 5-6|0.1 4-5|0.1.1 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:50.812
# ::node	0	say-01	2-3
# ::node	0.0	less	8-9
# ::node	0.1	contract-02	5-6
# ::node	0.1.0	promise-01	14-15
# ::node	0.1.0.0	i	11-12
# ::node	0.1.0.0.0	money	9-10
# ::node	0.1.0.1	date-entity	16-17
# ::node	0.1.0.1.0	1990	16-17
# ::node	0.1.1	new	4-5
# ::root	0	say-01
# ::edge	contract-02	mod	new	0.1	0.1.1	
# ::edge	date-entity	year	1990	0.1.0.1	0.1.0.1.0	
# ::edge	money	poss	i	0.1.0.0.0	0.1.0.0	
# ::edge	promise-01	ARG0	contract-02	0.1.0	0.1	
# ::edge	promise-01	ARG1	i	0.1.0	0.1.0.0	
# ::edge	promise-01	time	date-entity	0.1.0	0.1.0.1	
# ::edge	say-01	ARG0	less	0	0.0	
# ::edge	say-01	ARG1	contract-02	0	0.1	
(s / say-01 
      :ARG0 (l / less) 
      :ARG1 (c / contract-02 
            :ARG0-of (p / promise-01 
                  :ARG1 (i / i 
                        :poss-of (m / money)) 
                  :time (d / date-entity 
                        :year 1990)) 
            :mod (n / new)))

# ::snt at the outset of a season which promises much for his hampshire yard baldings slight preference is for the champion
# ::tok at the outset of a season which promises much for his hampshire yard baldings slight preference is for the champion
# ::alignments 19-20|0.0 15-16|0 14-15|0.3 12-13|0.1 8-9|0.2.1 7-8|0.2 5-6|0.2.0 2-3|0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:50.851
# ::node	0	prefer-01	15-16
# ::node	0.0	champion	19-20
# ::node	0.1	yard	12-13
# ::node	0.2	promise-01	7-8
# ::node	0.2.0	season	5-6
# ::node	0.2.0.0	outset	2-3
# ::node	0.2.1	much	8-9
# ::node	0.3	slight	14-15
# ::root	0	prefer-01
# ::edge	outset	location	season	0.2.0.0	0.2.0	
# ::edge	prefer-01	ARG0	champion	0	0.0	
# ::edge	prefer-01	ARG1	yard	0	0.1	
# ::edge	prefer-01	mod	slight	0	0.3	
# ::edge	promise-01	ARG0	season	0.2	0.2.0	
# ::edge	promise-01	ARG1	prefer-01	0.2	0	
# ::edge	promise-01	concession	much	0.2	0.2.1	
(p / prefer-01 
      :ARG0 (c / champion) 
      :ARG1 (y / yard) 
      :ARG1-of (p2 / promise-01 
            :ARG0 (s2 / season 
                  :location-of (o / outset)) 
            :concession (m / much)) 
      :mod (s / slight))

# ::snt we will be much more visible promised brett yesterday
# ::tok we will be much more visible promised brett yesterday
# ::alignments 8-9|0.1.1 6-7|0.1 5-6|0 3-4|0.1.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:50.891
# ::node	0	visible	5-6
# ::node	0.0	we	0-1
# ::node	0.1	promise-01	6-7
# ::node	0.1.0	much	3-4
# ::node	0.1.1	yesterday	8-9
# ::root	0	visible
# ::edge	promise-01	ARG0	much	0.1	0.1.0	
# ::edge	promise-01	ARG1	yesterday	0.1	0.1.1	
# ::edge	visible	domain	we	0	0.0	
# ::edge	visible	time	promise-01	0	0.1	
(v / visible 
      :domain (w / we) 
      :time (p / promise-01 
            :ARG0 (m / much) 
            :ARG1 (y / yesterday)))

# ::snt a thorough review of brs industrial tactics is promised after the strike
# ::tok a thorough review of brs industrial tactics is promised after the strike
# ::alignments 11-12|0.1.0 9-10|0.1 8-9|0 6-7|0.0.0 5-6|0.0.0.0 2-3|0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:50.912
# ::node	0	promise-01	8-9
# ::node	0.0	review-01	2-3
# ::node	0.0.0	tactic	6-7
# ::node	0.0.0.0	industry	5-6
# ::node	0.0.1	thorough	1-2
# ::node	0.1	after	9-10
# ::node	0.1.0	strike-01	11-12
# ::root	0	promise-01
# ::edge	after	op1	strike-01	0.1	0.1.0	
# ::edge	promise-01	ARG1	review-01	0	0.0	
# ::edge	promise-01	time	after	0	0.1	
# ::edge	review-01	ARG1	tactic	0.0	0.0.0	
# ::edge	review-01	manner	thorough	0.0	0.0.1	
# ::edge	tactic	mod	industry	0.0.0	0.0.0.0	
(p / promise-01 
      :ARG1 (r / review-01 
            :ARG1 (t / tactic 
                  :mod (i / industry)) 
            :manner (t2 / thorough)) 
      :time (a / after 
            :op1 (s / strike-01)))

# ::snt the somerset levels esa promises to absorb 1
# ::tok the somerset levels esa promises to absorb 1
# ::alignments 7-8|0.2 6-7|0.1 4-5|0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:50.920
# ::node	0	promise-01	4-5
# ::node	0.0	level	2-3
# ::node	0.1	absorb-01	6-7
# ::node	0.2	1	7-8
# ::root	0	promise-01
# ::edge	promise-01	ARG1	level	0	0.0	
# ::edge	promise-01	ARG2	absorb-01	0	0.1	
# ::edge	promise-01	ARG3	1	0	0.2	
(p / promise-01 
      :ARG1 (l / level) 
      :ARG2 (a / absorb-01) 
      :ARG3 1)

# ::snt cheeks glazed with tears he promised her that now that his rank had been increased he would be able to increase the amount of money he had been sending to her in order to make up from what he would be costing them by refusing to resign from the army and sign with the morris office
# ::tok cheeks glazed with tears he promised her that now that his rank had been increased he would be able to increase the amount of money he had been sending to her in order to make up from what he would be costing them by refusing to resign from the army and sign with the morris office
# ::alignments 55-56|0.0.1.0.0.1.0.1.0 50-51|0.0.1.0.0.1 49-50|0.0.1.0.0.1.0.0 46-47|0.0.1.0.0.1.0 44-45|0.0.1.0.0.1.0.1 41-42|0.0.1.0.0.1.0.1.1 38-39|0.0.1.0.0.1.0.1.1.0 28-29|0.0.1.0.0 25-26|0.0.1.0.0.0 24-25|0.0.1.0 22-23|0.0.1 20-21|0.0 18-19|0 15-16|0.0.0 14-15|0.0.1.0.0.0.0 8-9|0.0.1.0.0.0.0.0.0.1 5-6|0.0.1.0.0.0.0.0.0 4-5|0.0.1.0.0.0.0.0 3-4|0.0.1.0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:51.352
# ::node	0	possible	18-19
# ::node	0.0	increase-01	20-21
# ::node	0.0.0	he	15-16
# ::node	0.0.1	amount	22-23
# ::node	0.0.1.0	money	24-25
# ::node	0.0.1.0.0	send-01	28-29
# ::node	0.0.1.0.0.0	he	25-26
# ::node	0.0.1.0.0.0.0	increase-01	14-15
# ::node	0.0.1.0.0.0.0.0	he	4-5
# ::node	0.0.1.0.0.0.0.0.0	promise-01	5-6
# ::node	0.0.1.0.0.0.0.0.0.0	tear	3-4
# ::node	0.0.1.0.0.0.0.0.0.1	now	8-9
# ::node	0.0.1.0.0.1	and	50-51
# ::node	0.0.1.0.0.1.0	resign-01	46-47
# ::node	0.0.1.0.0.1.0.0	army	49-50
# ::node	0.0.1.0.0.1.0.1	refuse-01	44-45
# ::node	0.0.1.0.0.1.0.1.0	office	55-56
# ::node	0.0.1.0.0.1.0.1.1	cost-01	41-42
# ::node	0.0.1.0.0.1.0.1.1.0	he	38-39
# ::root	0	possible
# ::edge	and	op1	send-01	0.0.1.0.0.1	0.0.1.0.0	
# ::edge	and	op2	resign-01	0.0.1.0.0.1	0.0.1.0.0.1.0	
# ::edge	cost-01	ARG0	he	0.0.1.0.0.1.0.1.1	0.0.1.0.0.1.0.1.1.0	
# ::edge	cost-01	ARG1	refuse-01	0.0.1.0.0.1.0.1.1	0.0.1.0.0.1.0.1	
# ::edge	increase-01	ARG0	he	0.0	0.0.0	
# ::edge	increase-01	ARG0	he	0.0.1.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	increase-01	ARG1	amount	0.0	0.0.1	
# ::edge	increase-01	ARG1	he	0.0.1.0.0.0.0	0.0.1.0.0.0	
# ::edge	money	quant	amount	0.0.1.0	0.0.1	
# ::edge	possible	domain	increase-01	0	0.0	
# ::edge	promise-01	ARG0	he	0.0.1.0.0.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	promise-01	ARG1	tear	0.0.1.0.0.0.0.0.0	0.0.1.0.0.0.0.0.0.0	
# ::edge	promise-01	degree	now	0.0.1.0.0.0.0.0.0	0.0.1.0.0.0.0.0.0.1	
# ::edge	refuse-01	ARG0	office	0.0.1.0.0.1.0.1	0.0.1.0.0.1.0.1.0	
# ::edge	refuse-01	ARG1	resign-01	0.0.1.0.0.1.0.1	0.0.1.0.0.1.0	
# ::edge	resign-01	ARG0	army	0.0.1.0.0.1.0	0.0.1.0.0.1.0.0	
# ::edge	send-01	ARG0	he	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	send-01	ARG1	money	0.0.1.0.0	0.0.1.0	
(p / possible 
      :domain (i / increase-01 
            :ARG0 (h3 / he) 
            :ARG1 (a3 / amount 
                  :quant-of (m / money 
                        :ARG1-of (s / send-01 
                              :ARG0 (h2 / he 
                                    :ARG1-of (i2 / increase-01 
                                          :ARG0 (h4 / he 
                                                :ARG0-of (p2 / promise-01 
                                                      :ARG1 (t / tear) 
                                                      :degree (n / now))))) 
                              :op-of (a / and 
                                    :op1 (r / resign-01 
                                          :ARG0 (a2 / army) 
                                          :ARG1-of (r2 / refuse-01 
                                                :ARG0 (o / office) 
                                                :ARG1-of (c / cost-01 
                                                      :ARG0 (h / he))))))))))

# ::snt delegates to the conference promised to set up a survey on antarctica which by virtue of its isolation is one of the purest research environments from which to study the ozone hole and its impact on atmospheric change
# ::tok delegates to the conference promised to set up a survey on antarctica which by virtue of its isolation is one of the purest research environments from which to study the ozone hole and its impact on atmospheric change
# ::alignments 37-38|0.0.0 36-37|0.0.0.0 34-35|0.1 32-33|0 31-32|0.1.0 30-31|0.1.1 28-29|0.0 24-25|0.0.2 23-24|0.0.2.0 17-18|0.0.1.0.0.0.0 14-15|0.0.1.0.0.0 9-10|0.0.1.0.0 4-5|0.0.1 3-4|0.0.1.0.1.0 0-1|0.0.1.0.1+0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:51.707
# ::node	0	and	32-33
# ::node	0.0	study-01	28-29
# ::node	0.0.0	change-01	37-38
# ::node	0.0.0.0	atmosphere	36-37
# ::node	0.0.1	promise-01	4-5
# ::node	0.0.1.0	person	0-1
# ::node	0.0.1.0.0	survey-01	9-10
# ::node	0.0.1.0.0.0	virtue	14-15
# ::node	0.0.1.0.0.0.0	isolate-01	17-18
# ::node	0.0.1.0.1	delegate-01	0-1
# ::node	0.0.1.0.1.0	conference	3-4
# ::node	0.0.2	environment	24-25
# ::node	0.0.2.0	research-01	23-24
# ::node	0.1	impact-01	34-35
# ::node	0.1.0	hole	31-32
# ::node	0.1.1	ozone	30-31
# ::root	0	and
# ::edge	and	op1	impact-01	0	0.1	
# ::edge	change-01	mod	atmosphere	0.0.0	0.0.0.0	
# ::edge	delegate-01	ARG2	person	0.0.1.0.1	0.0.1.0	
# ::edge	delegate-01	location	conference	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	environment	mod	research-01	0.0.2	0.0.2.0	
# ::edge	environment	purpose	study-01	0.0.2	0.0	
# ::edge	impact-01	ARG0	hole	0.1	0.1.0	
# ::edge	impact-01	ARG1	ozone	0.1	0.1.1	
# ::edge	isolate-01	ARG1	virtue	0.0.1.0.0.0.0	0.0.1.0.0.0	
# ::edge	promise-01	ARG0	person	0.0.1	0.0.1.0	
# ::edge	promise-01	ARG2	study-01	0.0.1	0.0	
# ::edge	study-01	ARG1	and	0.0	0	
# ::edge	study-01	ARG2	change-01	0.0	0.0.0	
# ::edge	survey-01	ARG0	person	0.0.1.0.0	0.0.1.0	
# ::edge	survey-01	ARG1	virtue	0.0.1.0.0	0.0.1.0.0.0	
(a2 / and 
      :ARG1-of (s / study-01 
            :ARG2 (c / change-01 
                  :mod (a / atmosphere)) 
            :ARG2-of (p / promise-01 
                  :ARG0 (p2 / person 
                        :ARG0-of (s2 / survey-01 
                              :ARG1 (v / virtue 
                                    :ARG1-of (i2 / isolate-01))) 
                        :ARG2-of (d / delegate-01 
                              :location (c2 / conference)))) 
            :purpose-of (e / environment 
                  :mod (r / research-01))) 
      :op1 (i / impact-01 
            :ARG0 (h / hole) 
            :ARG1 (o / ozone)))

# ::snt indeed promising to do something and failing will further undermine public trust already hard hit this autumn by a series of scandals
# ::tok indeed promising to do something and failing will further undermine public trust already hard hit this autumn by a series of scandals
# ::alignments 19-20|0.1.0.0.0 15-16|0.1.1.0.0 14-15|0.1.0.0 13-14|0.1.0 12-13|0.3 11-12|0.0 10-11|0.0.0 9-10|0 8-9|0.2 6-7|0.1 5-6|0.1.1 4-5|0.1.1.0.1 1-2|0.1.1.0 0-1|0.1.1.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:52.032
# ::node	0	undermine-01	9-10
# ::node	0.0	trust-01	11-12
# ::node	0.0.0	public	10-11
# ::node	0.1	fail-01	6-7
# ::node	0.1.0	hard	13-14
# ::node	0.1.0.0	hit-01	14-15
# ::node	0.1.0.0.0	series	19-20
# ::node	0.1.1	and	5-6
# ::node	0.1.1.0	promise-01	1-2
# ::node	0.1.1.0.0	this	15-16
# ::node	0.1.1.0.1	something	4-5
# ::node	0.1.1.0.2	indeed	0-1
# ::node	0.2	further	8-9
# ::node	0.3	already	12-13
# ::root	0	undermine-01
# ::edge	and	op1	promise-01	0.1.1	0.1.1.0	
# ::edge	and	op2	fail-01	0.1.1	0.1	
# ::edge	fail-01	ARG0	hard	0.1	0.1.0	
# ::edge	fail-01	ARG1	undermine-01	0.1	0	
# ::edge	hit-01	ARG1	series	0.1.0.0	0.1.0.0.0	
# ::edge	hit-01	mod	hard	0.1.0.0	0.1.0	
# ::edge	promise-01	ARG0	this	0.1.1.0	0.1.1.0.0	
# ::edge	promise-01	ARG1	something	0.1.1.0	0.1.1.0.1	
# ::edge	promise-01	mod	indeed	0.1.1.0	0.1.1.0.2	
# ::edge	trust-01	mod	public	0.0	0.0.0	
# ::edge	undermine-01	ARG1	trust-01	0	0.0	
# ::edge	undermine-01	degree	further	0	0.2	
# ::edge	undermine-01	time	already	0	0.3	
(u / undermine-01 
      :ARG1 (t2 / trust-01 
            :mod (p / public)) 
      :ARG1-of (f2 / fail-01 
            :ARG0 (h2 / hard 
                  :mod-of (h / hit-01 
                        :ARG1 (s / series))) 
            :op-of (a2 / and 
                  :op1 (p2 / promise-01 
                        :ARG0 (t / this) 
                        :ARG1 (s2 / something) 
                        :mod (i / indeed)))) 
      :degree (f / further) 
      :time (a / already))

# ::snt qpr v liverpool trevor francis is promising a new formation
# ::tok qpr v liverpool trevor francis is promising a new formation
# ::alignments 9-10|0.0 8-9|0.0.0 6-7|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:52.040
# ::node	0	promise-01	6-7
# ::node	0.0	form-01	9-10
# ::node	0.0.0	new	8-9
# ::root	0	promise-01
# ::edge	form-01	mod	new	0.0	0.0.0	
# ::edge	promise-01	ARG1	form-01	0	0.0	
(p / promise-01 
      :ARG1 (f / form-01 
            :mod (n / new)))

# ::snt he virtuously promised reform and a committee of elder statesmen was set up to scrutinize future recommendations dash
# ::tok he virtuously promised reform and a committee of elder statesmen was set up to scrutinize future recommendations dash
# ::alignments 16-17|0.0.1.0 15-16|0.0.0.1 8-9|0 6-7|0.0.1.1 4-5|0.0.1 3-4|0.0 2-3|0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:52.071
# ::node	0	elder	8-9
# ::node	0.0	reform-01	3-4
# ::node	0.0.0	promise-01	2-3
# ::node	0.0.0.0	he	0-1
# ::node	0.0.0.1	future	15-16
# ::node	0.0.1	and	4-5
# ::node	0.0.1.0	recommend-01	16-17
# ::node	0.0.1.1	committee	6-7
# ::root	0	elder
(e / elder 
      :ARG1-of (r2 / reform-01 
            :ARG2-of (p / promise-01 
                  :ARG0 (h / he) 
                  :ARG1 (f / future)) 
            :op-of (a / and 
                  :ARG1-of (r / recommend-01) 
                  :op1 (c / committee))))

# ::snt john major the foreign secretary promised to keep the lebanon hostages high on the public agenda after attending a memorial service for the mother of the missing british journalist john mccarthy
# ::tok john major the foreign secretary promised to keep the lebanon hostages high on the public agenda after attending a memorial service for the mother of the missing british journalist john mccarthy
# ::alignments 28-29|0.0 26-27|0 23-24|0.0.0.1+0.0.0 19-20|0.1.1.0.0 17-18|0.1.1.0 16-17|0.1.1.0.1 15-16|0.1.1.0.2 14-15|0.1.1.0.2.1 11-12|0.1.1.0.2.0 10-11|0.1.1 5-6|0.1 4-5|0.1.0 3-4|0.1.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:52.411
# ::node	0	miss-01	26-27
# ::node	0.0	journalist	28-29
# ::node	0.0.0	have-rel-role-91	23-24
# ::node	0.0.0.0	major	1-2
# ::node	0.0.0.1	mother	23-24
# ::node	0.1	promise-01	5-6
# ::node	0.1.0	secretary	4-5
# ::node	0.1.0.0	foreign	3-4
# ::node	0.1.1	hostage	10-11
# ::node	0.1.1.0	attend-01	17-18
# ::node	0.1.1.0.0	memorial	19-20
# ::node	0.1.1.0.1	after	16-17
# ::node	0.1.1.0.2	agenda	15-16
# ::node	0.1.1.0.2.0	high	11-12
# ::node	0.1.1.0.2.1	public	14-15
# ::root	0	miss-01
# ::edge	after	op1	attend-01	0.1.1.0.1	0.1.1.0	
# ::edge	agenda	mod	public	0.1.1.0.2	0.1.1.0.2.1	
# ::edge	agenda	topic	attend-01	0.1.1.0.2	0.1.1.0	
# ::edge	attend-01	ARG0	hostage	0.1.1.0	0.1.1	
# ::edge	attend-01	ARG1	memorial	0.1.1.0	0.1.1.0.0	
# ::edge	have-rel-role-91	ARG0	major	0.0.0	0.0.0.0	
# ::edge	have-rel-role-91	ARG1	journalist	0.0.0	0.0	
# ::edge	have-rel-role-91	ARG2	mother	0.0.0	0.0.0.1	
# ::edge	high	location	agenda	0.1.1.0.2.0	0.1.1.0.2	
# ::edge	miss-01	ARG0	journalist	0	0.0	
# ::edge	miss-01	ARG1	promise-01	0	0.1	
# ::edge	promise-01	ARG0	secretary	0.1	0.1.0	
# ::edge	promise-01	ARG1	hostage	0.1	0.1.1	
# ::edge	secretary	mod	foreign	0.1.0	0.1.0.0	
(m / miss-01 
      :ARG0 (j / journalist 
            :ARG1-of (h / have-rel-role-91 
                  :ARG0 (m4 / major) 
                  :ARG2 (m2 / mother))) 
      :ARG1 (p2 / promise-01 
            :ARG0 (s / secretary 
                  :mod (f / foreign)) 
            :ARG1 (h3 / hostage 
                  :ARG0-of (a / attend-01 
                        :ARG1 (m3 / memorial) 
                        :op-of (a2 / after) 
                        :topic-of (a3 / agenda 
                              :location-of (h2 / high) 
                              :mod (p / public))))))

# ::snt even the bush administration which has rejected the targeted industrybyindustry response advocated by many in the us congress has promised to produce its own competitiveness agenda following realese of the presidents new budget in january
# ::tok even the bush administration which has rejected the targeted industrybyindustry response advocated by many in the us congress has promised to produce its own competitiveness agenda following realese of the presidents new budget in january
# ::alignments 34-35|0.0.0.1.0.0.0.0.0.0.0+0.0.0.1.0.0.0.0.0.0 32-33|0.0.0.1.0.0.0.0.0 31-32|0.0.0.1.0.0.0.0 30-31|0.0.0.1.0.0.0.2.0 25-26|0.0.0 24-25|0.0.0.1 21-22|0.0 19-20|0 17-18|0.0.0.1.0.1.0+0.0.0.1.0.1+0.0.0.1.0 13-14|0.0.0.0.0 11-12|0.0.0.1.0.0 10-11|0.0.0.1.0.0.0 8-9|0.0.0.1.0.0.0.2 6-7|0.0.0.1.0.0.0.1 3-4|0.0.0.0 2-3|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:52.921
# ::node	0	promise-01	19-20
# ::node	0.0	produce-01	21-22
# ::node	0.0.0	agenda	25-26
# ::node	0.0.0.0	administrate-01	3-4
# ::node	0.0.0.0.0	many	13-14
# ::node	0.0.0.0.1	bush-league	2-3
# ::node	0.0.0.1	competitiveness	24-25
# ::node	0.0.0.1.0	government-organization	17-18
# ::node	0.0.0.1.0.0	advocate-01	11-12
# ::node	0.0.0.1.0.0.0	respond-01	10-11
# ::node	0.0.0.1.0.0.0.0	new	31-32
# ::node	0.0.0.1.0.0.0.0.0	budget	32-33
# ::node	0.0.0.1.0.0.0.0.0.0	date-entity	34-35
# ::node	0.0.0.1.0.0.0.0.0.0.0	1	34-35
# ::node	0.0.0.1.0.0.0.1	reject-01	6-7
# ::node	0.0.0.1.0.0.0.2	target-01	8-9
# ::node	0.0.0.1.0.0.0.2.0	president	30-31
# ::node	0.0.0.1.0.1	name	17-18
# ::node	0.0.0.1.0.1.0	"Congress"	17-18
# ::root	0	promise-01
# ::edge	administrate-01	ARG1	many	0.0.0.0	0.0.0.0.0	
# ::edge	administrate-01	mod	bush-league	0.0.0.0	0.0.0.0.1	
# ::edge	advocate-01	ARG0	government-organization	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	advocate-01	ARG1	respond-01	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	agenda	domain	administrate-01	0.0.0	0.0.0.0	
# ::edge	agenda	mod	competitiveness	0.0.0	0.0.0.1	
# ::edge	budget	mod	new	0.0.0.1.0.0.0.0.0	0.0.0.1.0.0.0.0	
# ::edge	budget	poss	date-entity	0.0.0.1.0.0.0.0.0	0.0.0.1.0.0.0.0.0.0	
# ::edge	competitiveness	poss	government-organization	0.0.0.1	0.0.0.1.0	
# ::edge	date-entity	month	1	0.0.0.1.0.0.0.0.0.0	0.0.0.1.0.0.0.0.0.0.0	
# ::edge	government-organization	name	name	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	name	op1	"Congress"	0.0.0.1.0.1	0.0.0.1.0.1.0	
# ::edge	produce-01	ARG1	agenda	0.0	0.0.0	
# ::edge	promise-01	ARG1	produce-01	0	0.0	
# ::edge	reject-01	ARG1	respond-01	0.0.0.1.0.0.0.1	0.0.0.1.0.0.0	
# ::edge	respond-01	ARG1	new	0.0.0.1.0.0.0	0.0.0.1.0.0.0.0	
# ::edge	target-01	ARG0	president	0.0.0.1.0.0.0.2	0.0.0.1.0.0.0.2.0	
# ::edge	target-01	ARG1	respond-01	0.0.0.1.0.0.0.2	0.0.0.1.0.0.0	
(p3 / promise-01 
      :ARG1 (p2 / produce-01 
            :ARG1 (a / agenda 
                  :domain (a3 / administrate-01 
                        :ARG1 (m / many) 
                        :mod (b2 / bush-league)) 
                  :mod (c / competitiveness 
                        :poss (g / government-organization 
                              :ARG0-of (a2 / advocate-01 
                                    :ARG1 (r / respond-01 
                                          :ARG1 (n / new 
                                                :mod-of (b / budget 
                                                      :poss (d / date-entity 
                                                            :month 1))) 
                                          :ARG1-of (r2 / reject-01) 
                                          :ARG1-of (t / target-01 
                                                :ARG0 (p / president)))) 
                              :name (n2 / name 
                                    :op1 "Congress"))))))

# ::snt the greek people are promised another election in the autumn to sort out the leftright thing
# ::tok the greek people are promised another election in the autumn to sort out the leftright thing
# ::alignments 15-16|0.1.0 11-12|0.1 6-7|0.0 5-6|0.0.0 4-5|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:52.940
# ::node	0	promise-01	4-5
# ::node	0.0	elect-01	6-7
# ::node	0.0.0	another	5-6
# ::node	0.1	sort	11-12
# ::node	0.1.0	thing	15-16
# ::root	0	promise-01
# ::edge	elect-01	mod	another	0.0	0.0.0	
# ::edge	promise-01	ARG2	elect-01	0	0.0	
# ::edge	promise-01	purpose	sort	0	0.1	
# ::edge	sort	path	thing	0.1	0.1.0	
(p / promise-01 
      :ARG2 (e / elect-01 
            :mod (a / another)) 
      :purpose (s / sort 
            :path (t / thing)))

# ::snt consumer goods output next year would rise by 66bn roubles mr ryzhkov promised compared with the recent average of 17bn
# ::tok consumer goods output next year would rise by 66bn roubles mr ryzhkov promised compared with the recent average of 17bn
# ::alignments 16-17|0.0.0.0.0 13-14|0 12-13|0.0 6-7|0.0.1 4-5|0.0.1.0 3-4|0.0.1.0.0 2-3|0.0.0 1-2|0.0.0.1 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:52.982
# ::node	0	compare-01	13-14
# ::node	0.0	promise-01	12-13
# ::node	0.0.0	output	2-3
# ::node	0.0.0.0	consume-01	0-1
# ::node	0.0.0.0.0	recent	16-17
# ::node	0.0.0.1	good	1-2
# ::node	0.0.1	rise-01	6-7
# ::node	0.0.1.0	year	4-5
# ::node	0.0.1.0.0	next	3-4
# ::root	0	compare-01
# ::edge	compare-01	ARG1	promise-01	0	0.0	
# ::edge	consume-01	ARG0	recent	0.0.0.0	0.0.0.0.0	
# ::edge	consume-01	ARG1	output	0.0.0.0	0.0.0	
# ::edge	output	mod	good	0.0.0	0.0.0.1	
# ::edge	promise-01	ARG1	output	0.0	0.0.0	
# ::edge	rise-01	ARG1	promise-01	0.0.1	0.0	
# ::edge	rise-01	time	year	0.0.1	0.0.1.0	
# ::edge	year	mod	next	0.0.1.0	0.0.1.0.0	
(c / compare-01 
      :ARG1 (p / promise-01 
            :ARG1 (o / output 
                  :ARG1-of (c2 / consume-01 
                        :ARG0 (r / recent)) 
                  :mod (g / good)) 
            :ARG1-of (r2 / rise-01 
                  :time (y / year 
                        :mod (n / next)))))

# ::snt   this caring image is based on performance in that the oxfordshire labour party in both the 1985 and 1989 election manifestos promised a countywide bus pass scheme and the labour transport spokesperson initiated such a scheme in 1987 on the basis of a shared cost with the district councils
# ::tok this caring image is based on performance in that the oxfordshire labour party in both the 1985 and 1989 election manifestos promised a countywide bus pass scheme and the labour transport spokesperson initiated such a scheme in 1987 on the basis of a shared cost with the district councils
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:52.983
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt yesterday afternoon was hot enough for the beach and the weather forecast promised more of the same
# ::tok yesterday afternoon was hot enough for the beach and the weather forecast promised more of the same
# ::alignments 16-17|0 12-13|0.0 11-12|0.0.0.0 10-11|0.0.0.0.0 8-9|0.0.0 4-5|0.0.1.0.0 3-4|0.0.1.0 1-2|0.0.1 0-1|0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:53.021
# ::node	0	same-41	16-17
# ::node	0.0	promise-01	12-13
# ::node	0.0.0	and	8-9
# ::node	0.0.0.0	forecast-01	11-12
# ::node	0.0.0.0.0	weather	10-11
# ::node	0.0.1	afternoon	1-2
# ::node	0.0.1.0	hot	3-4
# ::node	0.0.1.0.0	enough	4-5
# ::node	0.0.1.1	yesterday	0-1
# ::root	0	same-41
# ::edge	and	op1	forecast-01	0.0.0	0.0.0.0	
# ::edge	forecast-01	ARG1	weather	0.0.0.0	0.0.0.0.0	
# ::edge	hot	degree	enough	0.0.1.0	0.0.1.0.0	
# ::edge	hot	domain	afternoon	0.0.1.0	0.0.1	
# ::edge	promise-01	ARG0	and	0.0	0.0.0	
# ::edge	promise-01	ARG1	afternoon	0.0	0.0.1	
# ::edge	same-41	ARG1	promise-01	0	0.0	
# ::edge	yesterday	part	afternoon	0.0.1.1	0.0.1	
(s / same-41 
      :ARG1 (p / promise-01 
            :ARG0 (a / and 
                  :op1 (f / forecast-01 
                        :ARG1 (w / weather))) 
            :ARG1 (a2 / afternoon 
                  :domain-of (h / hot 
                        :degree (e / enough)) 
                  :part-of (y / yesterday))))

# ::snt in 1955 former nightclub hostess ruth ellis went to the gallows for killing david blakely a man whose wealthy origins and good looks had seemed to promise her a rise up the social scale
# ::tok in 1955 former nightclub hostess ruth ellis went to the gallows for killing david blakely a man whose wealthy origins and good looks had seemed to promise her a rise up the social scale
# ::alignments 33-34|0.0.0.0 32-33|0.3.0.0.0 29-30|0.0.0 26-27|0.0 24-25|0.0.1 22-23|0.3 21-22|0.3.2 20-21|0 18-19|0.2 16-17|0.1 12-13|0.3.0.0 5-7|0.3.0.1.0+0.3.0.1.1+0.3.0.1+0.3.0 3-4|0.0.1.1 2-3|0.0.1.0 1-2|0.3.1.0+0.3.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:53.452
# ::node	0	and	20-21
# ::node	0.0	promise-01	26-27
# ::node	0.0.0	rise-01	29-30
# ::node	0.0.0.0	scale	33-34
# ::node	0.0.1	seem-01	24-25
# ::node	0.0.1.0	former	2-3
# ::node	0.0.1.1	night	3-4
# ::node	0.1	man	16-17
# ::node	0.2	wealth	18-19
# ::node	0.3	look-02	22-23
# ::node	0.3.0	person	5-7
# ::node	0.3.0.0	kill-01	12-13
# ::node	0.3.0.0.0	society	32-33
# ::node	0.3.0.1	name	5-7
# ::node	0.3.0.1.0	"ellis"	5-7
# ::node	0.3.0.1.1	"ruth"	5-7
# ::node	0.3.1	date-entity	1-2
# ::node	0.3.1.0	1955	1-2
# ::node	0.3.2	good	21-22
# ::root	0	and
# ::edge	and	op1	man	0	0.1	
# ::edge	and	op2	wealth	0	0.2	
# ::edge	and	op3	look-02	0	0.3	
# ::edge	date-entity	year	1955	0.3.1	0.3.1.0	
# ::edge	former	op1	seem-01	0.0.1.0	0.0.1	
# ::edge	kill-01	ARG0	person	0.3.0.0	0.3.0	
# ::edge	look-02	ARG0	person	0.3	0.3.0	
# ::edge	look-02	ARG1	date-entity	0.3	0.3.1	
# ::edge	look-02	mod	good	0.3	0.3.2	
# ::edge	name	op1	"ellis"	0.3.0.1	0.3.0.1.0	
# ::edge	name	op2	"ruth"	0.3.0.1	0.3.0.1.1	
# ::edge	night	op1	seem-01	0.0.1.1	0.0.1	
# ::edge	person	name	name	0.3.0	0.3.0.1	
# ::edge	promise-01	ARG0	and	0.0	0	
# ::edge	promise-01	ARG1	rise-01	0.0	0.0.0	
# ::edge	rise-01	ARG1	scale	0.0.0	0.0.0.0	
# ::edge	seem-01	ARG1	promise-01	0.0.1	0.0	
# ::edge	society	op1	kill-01	0.3.0.0.0	0.3.0.0	
(a / and 
      :ARG0-of (p / promise-01 
            :ARG1 (r / rise-01 
                  :ARG1 (s / scale)) 
            :ARG1-of (s3 / seem-01 
                  :op-of (f / former) 
                  :op-of (n2 / night))) 
      :op1 (m / man) 
      :op2 (w / wealth) 
      :op3 (l / look-02 
            :ARG0 (p2 / person 
                  :ARG0-of (k / kill-01 
                        :op-of (s2 / society)) 
                  :name (n / name 
                        :op1 "ellis" 
                        :op2 "ruth")) 
            :ARG1 (d / date-entity 
                  :year 1955) 
            :mod (g / good)))

# ::snt belford made his presentation to union leaders and family members promising a 5 million tv movie that would be delivered within 18 months
# ::tok belford made his presentation to union leaders and family members promising a 5 million tv movie that would be delivered within 18 months
# ::alignments 22-23|0.0.0.2.0.1+0.0.0.2.0 21-22|0.0.0.2.0.0 20-21|0.0.0.2 19-20|0.0.0 15-16|0.0 12-13|0.0.0.1 10-11|0 9-10|0.0.1.1+0.0.1 8-9|0.0.1.0 7-8|0.0.0.0.2 6-7|0.0.0.0.0+0.0.0.0 5-6|0.0.0.0.0.0 3-4|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:53.866
# ::node	0	promise-01	10-11
# ::node	0.0	movie	15-16
# ::node	0.0.0	deliver-01	19-20
# ::node	0.0.0.0	person	6-7
# ::node	0.0.0.0.0	lead-02	6-7
# ::node	0.0.0.0.0.0	union	5-6
# ::node	0.0.0.0.1	presentation	3-4
# ::node	0.0.0.0.2	and	7-8
# ::node	0.0.0.1	5	12-13
# ::node	0.0.0.2	within	20-21
# ::node	0.0.0.2.0	temporal-quantity	22-23
# ::node	0.0.0.2.0.0	18	21-22
# ::node	0.0.0.2.0.1	month	22-23
# ::node	0.0.1	have-org-role-91	9-10
# ::node	0.0.1.0	family	8-9
# ::node	0.0.1.1	member	9-10
# ::root	0	promise-01
# ::edge	and	op1	person	0.0.0.0.2	0.0.0.0	
# ::edge	deliver-01	ARG0	person	0.0.0	0.0.0.0	
# ::edge	deliver-01	ARG1	movie	0.0.0	0.0	
# ::edge	deliver-01	ARG2	5	0.0.0	0.0.0.1	
# ::edge	deliver-01	time	within	0.0.0	0.0.0.2	
# ::edge	have-org-role-91	ARG1	family	0.0.1	0.0.1.0	
# ::edge	have-org-role-91	ARG2	member	0.0.1	0.0.1.1	
# ::edge	lead-02	ARG0	person	0.0.0.0.0	0.0.0.0	
# ::edge	lead-02	ARG1	union	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	movie	op1	have-org-role-91	0.0	0.0.1	
# ::edge	person	mod	presentation	0.0.0.0	0.0.0.0.1	
# ::edge	promise-01	ARG2	movie	0	0.0	
# ::edge	temporal-quantity	quant	18	0.0.0.2.0	0.0.0.2.0.0	
# ::edge	temporal-quantity	unit	month	0.0.0.2.0	0.0.0.2.0.1	
# ::edge	within	op1	temporal-quantity	0.0.0.2	0.0.0.2.0	
(p / promise-01 
      :ARG2 (m2 / movie 
            :ARG1-of (d / deliver-01 
                  :ARG0 (p2 / person 
                        :ARG0-of (l / lead-02 
                              :ARG1 (u / union)) 
                        :mod (p3 / presentation) 
                        :op-of (a / and)) 
                  :ARG2 5 
                  :time (w / within 
                        :op1 (t / temporal-quantity 
                              :quant 18 
                              :unit (m / month)))) 
            :op1 (h / have-org-role-91 
                  :ARG1 (f / family) 
                  :ARG2 (m3 / member))))

# ::snt like all of the marcos affairs the trial promises to be complex
# ::tok like all of the marcos affairs the trial promises to be complex
# ::alignments 11-12|0.1 8-9|0 7-8|0.0 5-6|0.2 1-2|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:53.889
# ::node	0	promise-01	8-9
# ::node	0.0	trial	7-8
# ::node	0.1	complex	11-12
# ::node	0.2	affair	5-6
# ::node	0.2.0	all	1-2
# ::root	0	promise-01
# ::edge	affair	quant	all	0.2	0.2.0	
# ::edge	promise-01	ARG0	trial	0	0.0	
# ::edge	promise-01	ARG1	complex	0	0.1	
# ::edge	promise-01	location	affair	0	0.2	
(p / promise-01 
      :ARG0 (t / trial) 
      :ARG1 (c / complex) 
      :location (a / affair 
            :quant (a2 / all)))

# ::snt in saddam they see a strong leader who for once puts into action what he promises
# ::tok in saddam they see a strong leader who for once puts into action what he promises
# ::alignments 15-16|0.1.1.0.0 14-15|0.1.1.0.0.0 12-13|0.1.1.0 10-11|0.1.1 9-10|0.1.1.1 6-7|0.1.0+0.1 5-6|0.1.0.0 3-4|0 2-3|0.0 1-2|0.2.0.0+0.2.0+0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:54.182
# ::node	0	see-01	3-4
# ::node	0.0	they	2-3
# ::node	0.1	person	6-7
# ::node	0.1.0	lead-02	6-7
# ::node	0.1.0.0	strong	5-6
# ::node	0.1.1	put-01	10-11
# ::node	0.1.1.0	action	12-13
# ::node	0.1.1.0.0	promise-01	15-16
# ::node	0.1.1.0.0.0	he	14-15
# ::node	0.1.1.1	once	9-10
# ::node	0.2	person	1-2
# ::node	0.2.0	name	1-2
# ::node	0.2.0.0	"Saddam"	1-2
# ::root	0	see-01
# ::edge	lead-02	ARG0	person	0.1.0	0.1	
# ::edge	lead-02	mod	strong	0.1.0	0.1.0.0	
# ::edge	name	op1	"Saddam"	0.2.0	0.2.0.0	
# ::edge	person	name	name	0.2	0.2.0	
# ::edge	promise-01	ARG0	he	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	promise-01	ARG1	action	0.1.1.0.0	0.1.1.0	
# ::edge	put-01	ARG1	person	0.1.1	0.1	
# ::edge	put-01	ARG2	action	0.1.1	0.1.1.0	
# ::edge	put-01	time	once	0.1.1	0.1.1.1	
# ::edge	see-01	ARG0	they	0	0.0	
# ::edge	see-01	ARG1	person	0	0.1	
# ::edge	see-01	time	person	0	0.2	
(s2 / see-01 
      :ARG0 (t / they) 
      :ARG1 (p3 / person 
            :ARG0-of (l / lead-02 
                  :mod (s / strong)) 
            :ARG1-of (p2 / put-01 
                  :ARG2 (a / action 
                        :ARG1-of (p / promise-01 
                              :ARG0 (h / he))) 
                  :time (o / once))) 
      :time (p4 / person 
            :name (n / name 
                  :op1 "Saddam")))

# ::snt but sweden has also promised that in 20 years its emissions of carbon dioxide subscript baseco sub2 the main greenhouse gas will have dropped to 1986 levels
# ::tok but sweden has also promised that in 20 years its emissions of carbon dioxide subscript baseco sub2 the main greenhouse gas will have dropped to 1986 levels
# ::alignments 26-27|0.1.0.0 25-26|0.1.0.1+0.1.0 23-24|0.0 20-21|0.0.0 19-20|0.0.0.0 18-19|0.0.0.0.0 8-9|0.0.1.0.0+0.0.1.0 7-8|0.0.1 4-5|0.1 3-4|0.1.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:54.377
# ::node	0	contrast-01	0-1
# ::node	0.0	drop-01	23-24
# ::node	0.0.0	gas	20-21
# ::node	0.0.0.0	greenhouse	19-20
# ::node	0.0.0.0.0	main	18-19
# ::node	0.0.1	20	7-8
# ::node	0.0.1.0	temporal-quantity	8-9
# ::node	0.0.1.0.0	year	8-9
# ::node	0.1	promise-01	4-5
# ::node	0.1.0	date-entity	25-26
# ::node	0.1.0.0	level	26-27
# ::node	0.1.0.1	1986	25-26
# ::node	0.1.1	also	3-4
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	drop-01	0	0.0	
# ::edge	contrast-01	ARG2	promise-01	0	0.1	
# ::edge	date-entity	year	1986	0.1.0	0.1.0.1	
# ::edge	drop-01	ARG0	gas	0.0	0.0.0	
# ::edge	drop-01	ARG1	20	0.0	0.0.1	
# ::edge	gas	mod	greenhouse	0.0.0	0.0.0.0	
# ::edge	greenhouse	mod	main	0.0.0.0	0.0.0.0.0	
# ::edge	level	mod	date-entity	0.1.0.0	0.1.0	
# ::edge	promise-01	ARG1	date-entity	0.1	0.1.0	
# ::edge	promise-01	mod	also	0.1	0.1.1	
# ::edge	temporal-quantity	quant	20	0.0.1.0	0.0.1	
# ::edge	temporal-quantity	unit	year	0.0.1.0	0.0.1.0.0	
(c / contrast-01 
      :ARG1 (d2 / drop-01 
            :ARG0 (g / gas 
                  :mod (g2 / greenhouse 
                        :mod (m / main))) 
            :ARG1 (2 / 20 
                  :quant-of (t / temporal-quantity 
                        :unit (y / year)))) 
      :ARG2 (p / promise-01 
            :ARG1 (d / date-entity 
                  :mod-of (l / level) 
                  :year 1986) 
            :mod (a / also)))

# ::snt ive talked to chaps in my regiment whore in northern ireland and ellip   if you lived in beirut i promise you it would start to seem perfectly logical
# ::tok ive talked to chaps in my regiment whore in northern ireland and ellip if you lived in beirut i promise you it would start to seem perfectly logical
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:54.378
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt shareholders and analysts who have long been hardened to the succession of nasties to emerge from the nonedible operations stemming from an irresistible urge to makes deals will also be grateful if berisford as promised decides to concentrate on its bristar food business
# ::tok shareholders and analysts who have long been hardened to the succession of nasties to emerge from the nonedible operations stemming from an irresistible urge to makes deals will also be grateful if berisford as promised decides to concentrate on its bristar food business
# ::alignments 42-43|0.1.0.0.1.0 41-42|0.1.0.0.1.0.0 37-38|0.1.0.0.1 35-36|0.1.0.0.1.1 34-35|0.1.0.0.1.1.0 28-29|0.1.0.0.1.1.0.0 26-27|0.1.0.0.0.0 23-24|0 19-20|0.1 18-19|0.1.0 14-15|0.1.0.0 10-11|0.1.0.0.0 2-3|0.0.0+0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:54.604
# ::node	0	urge-01	23-24
# ::node	0.0	person	2-3
# ::node	0.0.0	analyze-01	2-3
# ::node	0.0.1	and	1-2
# ::node	0.1	stem-02	19-20
# ::node	0.1.0	operation	18-19
# ::node	0.1.0.0	emerge-01	14-15
# ::node	0.1.0.0.0	succeed-03	10-11
# ::node	0.1.0.0.0.0	deal-01	26-27
# ::node	0.1.0.0.1	concentrate-01	37-38
# ::node	0.1.0.0.1.0	business	42-43
# ::node	0.1.0.0.1.0.0	food	41-42
# ::node	0.1.0.0.1.1	decide-01	35-36
# ::node	0.1.0.0.1.1.0	promise-01	34-35
# ::node	0.1.0.0.1.1.0.0	also	28-29
# ::root	0	urge-01
# ::edge	analyze-01	ARG0	person	0.0.0	0.0	
# ::edge	and	op1	person	0.0.1	0.0	
# ::edge	business	topic	food	0.1.0.0.1.0	0.1.0.0.1.0.0	
# ::edge	concentrate-01	ARG0	business	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	concentrate-01	ARG1	emerge-01	0.1.0.0.1	0.1.0.0	
# ::edge	deal-01	ARG2	succeed-03	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	decide-01	ARG1	concentrate-01	0.1.0.0.1.1	0.1.0.0.1	
# ::edge	emerge-01	ARG2	operation	0.1.0.0	0.1.0	
# ::edge	promise-01	ARG0	also	0.1.0.0.1.1.0	0.1.0.0.1.1.0.0	
# ::edge	promise-01	ARG1	decide-01	0.1.0.0.1.1.0	0.1.0.0.1.1	
# ::edge	stem-02	ARG0	operation	0.1	0.1.0	
# ::edge	stem-02	ARG1	urge-01	0.1	0	
# ::edge	succeed-03	ARG1	emerge-01	0.1.0.0.0	0.1.0.0	
# ::edge	urge-01	ARG1	person	0	0.0	
(u / urge-01 
      :ARG1 (p2 / person 
            :ARG0-of (a2 / analyze-01) 
            :op-of (a3 / and)) 
      :ARG1-of (s / stem-02 
            :ARG0 (o / operation 
                  :ARG2-of (e / emerge-01 
                        :ARG1-of (s2 / succeed-03 
                              :ARG2-of (d2 / deal-01)) 
                        :ARG1-of (c / concentrate-01 
                              :ARG0 (b / business 
                                    :topic (f / food)) 
                              :ARG1-of (d / decide-01 
                                    :ARG1-of (p / promise-01 
                                          :ARG0 (a / also))))))))

# ::snt he blamed the teachers industrial action three years ago for contributing to a decline in school sports matches and said the party would talk to teachers organisations to find ways of reinstituting outofschool activities without promising extra payments for overtime
# ::tok he blamed the teachers industrial action three years ago for contributing to a decline in school sports matches and said the party would talk to teachers organisations to find ways of reinstituting outofschool activities without promising extra payments for overtime
# ::alignments 39-40|0.1.0.0.0.2 37-38|0.1.0.0.0.1 36-37|0.1.0.0.0.1.0 35-36|0.1.0.0.0 33-34|0.1.0.0.0.0 29-30|0.1.0.0 26-27|0.1.1 25-26|0.1.1.0.0+0.1.1.0 23-24|0.1 21-22|0.1.0 19-20|0 18-19|0.2 17-18|0.2.2 16-17|0.0 15-16|0.2.1 13-14|0.2.0.2 10-11|0.2.0 7-8|0.2.0.1.0.0+0.2.0.1.0 6-7|0.2.0.1 5-6|0.2.0.0.0.0 4-5|0.2.0.0.0.0.1 3-4|0.2.0.0.0.0.0+0.2.0.0.0.0.0.0 1-2|0.2.0.0.0 0-1|0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:56.172
# ::node	0	say-01	19-20
# ::node	0.0	sport	16-17
# ::node	0.1	talk-01	23-24
# ::node	0.1.0	party	21-22
# ::node	0.1.0.0	way	29-30
# ::node	0.1.0.0.0	promise-01	35-36
# ::node	0.1.0.0.0.0	activity	33-34
# ::node	0.1.0.0.0.1	payment	37-38
# ::node	0.1.0.0.0.1.0	extra	36-37
# ::node	0.1.0.0.0.2	overtime	39-40
# ::node	0.1.1	organization	26-27
# ::node	0.1.1.0	person	25-26
# ::node	0.1.1.0.0	teach-01	25-26
# ::node	0.2	and	18-19
# ::node	0.2.0	contribute-01	10-11
# ::node	0.2.0.0	he	0-1
# ::node	0.2.0.0.0	blame-01	1-2
# ::node	0.2.0.0.0.0	action	5-6
# ::node	0.2.0.0.0.0.0	teach-01	3-4
# ::node	0.2.0.0.0.0.0.0	person	3-4
# ::node	0.2.0.0.0.0.1	industry	4-5
# ::node	0.2.0.1	3	6-7
# ::node	0.2.0.1.0	temporal-quantity	7-8
# ::node	0.2.0.1.0.0	year	7-8
# ::node	0.2.0.2	decline-01	13-14
# ::node	0.2.1	school	15-16
# ::node	0.2.2	match	17-18
# ::root	0	say-01
# ::edge	action	mod	industry	0.2.0.0.0.0	0.2.0.0.0.0.1	
# ::edge	and	op1	school	0.2	0.2.1	
# ::edge	and	op2	match	0.2	0.2.2	
# ::edge	and	op3	say-01	0.2	0	
# ::edge	blame-01	ARG0	he	0.2.0.0.0	0.2.0.0	
# ::edge	blame-01	ARG1	action	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	contribute-01	ARG0	he	0.2.0	0.2.0.0	
# ::edge	contribute-01	ARG1	3	0.2.0	0.2.0.1	
# ::edge	contribute-01	ARG2	decline-01	0.2.0	0.2.0.2	
# ::edge	contribute-01	condition	and	0.2.0	0.2	
# ::edge	organization	mod	person	0.1.1	0.1.1.0	
# ::edge	payment	mod	extra	0.1.0.0.0.1	0.1.0.0.0.1.0	
# ::edge	promise-01	ARG0	way	0.1.0.0.0	0.1.0.0	
# ::edge	promise-01	ARG1	activity	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	promise-01	ARG2	payment	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	promise-01	time	overtime	0.1.0.0.0	0.1.0.0.0.2	
# ::edge	say-01	ARG0	sport	0	0.0	
# ::edge	say-01	ARG1	talk-01	0	0.1	
# ::edge	talk-01	ARG0	party	0.1	0.1.0	
# ::edge	talk-01	ARG1	organization	0.1	0.1.1	
# ::edge	teach-01	ARG0	person	0.1.1.0.0	0.1.1.0	
# ::edge	teach-01	ARG0	person	0.2.0.0.0.0.0	0.2.0.0.0.0.0.0	
# ::edge	teach-01	ARG1	action	0.2.0.0.0.0.0	0.2.0.0.0.0	
# ::edge	temporal-quantity	quant	3	0.2.0.1.0	0.2.0.1	
# ::edge	temporal-quantity	unit	year	0.2.0.1.0	0.2.0.1.0.0	
# ::edge	way	poss	party	0.1.0.0	0.1.0	
(s / say-01 
      :ARG0 (s2 / sport) 
      :ARG1 (t2 / talk-01 
            :ARG0 (p4 / party 
                  :poss-of (w / way 
                        :ARG0-of (p2 / promise-01 
                              :ARG1 (a / activity) 
                              :ARG2 (p / payment 
                                    :mod (e / extra)) 
                              :time (o / overtime)))) 
            :ARG1 (o2 / organization 
                  :mod (p3 / person 
                        :ARG0-of (t / teach-01)))) 
      :op-of (a2 / and 
            :condition-of (c / contribute-01 
                  :ARG0 (h / he 
                        :ARG0-of (b / blame-01 
                              :ARG1 (a3 / action 
                                    :ARG1-of (t4 / teach-01 
                                          :ARG0 (p5 / person)) 
                                    :mod (i / industry)))) 
                  :ARG1 (3 / 3 
                        :quant-of (t3 / temporal-quantity 
                              :unit (y / year))) 
                  :ARG2 (d / decline-01)) 
            :op1 (s3 / school) 
            :op2 (m / match)))

# ::snt if this is true history has been wickedly distorted sir arthur gold author of the boards history who promised to investigate said
# ::tok if this is true history has been wickedly distorted sir arthur gold author of the boards history who promised to investigate said
# ::alignments 21-22|0 20-21|0.1 18-19|0.1.0 16-17|0.1.0.0 12-13|0.0.0+0.0 11-12|0.0.0.0 8-9|0.0.0.0.0 4-5|0.0.0.0.0.0 3-4|0.0.0.0.0.0.0 1-2|0.0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:56.346
# ::node	0	say-01	21-22
# ::node	0.0	person	12-13
# ::node	0.0.0	author-01	12-13
# ::node	0.0.0.0	gold	11-12
# ::node	0.0.0.0.0	distort-01	8-9
# ::node	0.0.0.0.0.0	history	4-5
# ::node	0.0.0.0.0.0.0	true	3-4
# ::node	0.0.0.0.0.0.0.0	this	1-2
# ::node	0.1	investigate-01	20-21
# ::node	0.1.0	promise-01	18-19
# ::node	0.1.0.0	history	16-17
# ::root	0	say-01
# ::edge	author-01	ARG0	person	0.0.0	0.0	
# ::edge	author-01	ARG1	gold	0.0.0	0.0.0.0	
# ::edge	distort-01	ARG0	gold	0.0.0.0.0	0.0.0.0	
# ::edge	distort-01	ARG1	history	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	history	mod	true	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	investigate-01	ARG1	say-01	0.1	0	
# ::edge	promise-01	ARG0	history	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG1	investigate-01	0.1.0	0.1	
# ::edge	say-01	ARG0	person	0	0.0	
# ::edge	true	domain	this	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
(s / say-01 
      :ARG0 (p2 / person 
            :ARG0-of (a / author-01 
                  :ARG1 (g / gold 
                        :ARG0-of (d / distort-01 
                              :ARG1 (h2 / history 
                                    :mod (t / true 
                                          :domain (t2 / this))))))) 
      :ARG1-of (i / investigate-01 
            :ARG1-of (p / promise-01 
                  :ARG0 (h / history))))

# ::snt during the inquiry lord romsey promised he would spend 9m on urgent restoration work on his estate but that the income from visitors to broadlands was insufficient to carry out the renovations
# ::tok during the inquiry lord romsey promised he would spend 9m on urgent restoration work on his estate but that the income from visitors to broadlands was insufficient to carry out the renovations
# ::alignments 26-27|0.2.1+0.2 22-23|0.1.0.0+0.1.0 20-21|0.2.0 17-18|0 16-17|0.1.1 12-13|0.1 11-12|0.1.2 8-9|0.0.1 6-7|0.0.1.0 5-6|0.0 3-4|0.0.1.1 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:56.787
# ::node	0	contrast-01	17-18
# ::node	0.0	promise-01	5-6
# ::node	0.0.0	inquire-01	2-3
# ::node	0.0.1	spend-01	8-9
# ::node	0.0.1.0	he	6-7
# ::node	0.0.1.1	lord	3-4
# ::node	0.1	restore-01	12-13
# ::node	0.1.0	person	22-23
# ::node	0.1.0.0	visit-01	22-23
# ::node	0.1.1	estate	16-17
# ::node	0.1.2	urgent	11-12
# ::node	0.2	suffice-01	26-27
# ::node	0.2.0	income	20-21
# ::node	0.2.1	-	26-27
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	promise-01	0	0.0	
# ::edge	contrast-01	ARG2	suffice-01	0	0.2	
# ::edge	promise-01	ARG0	inquire-01	0.0	0.0.0	
# ::edge	promise-01	ARG1	spend-01	0.0	0.0.1	
# ::edge	restore-01	ARG0	person	0.1	0.1.0	
# ::edge	restore-01	ARG1	contrast-01	0.1	0	
# ::edge	restore-01	ARG2	estate	0.1	0.1.1	
# ::edge	restore-01	mod	urgent	0.1	0.1.2	
# ::edge	spend-01	ARG0	he	0.0.1	0.0.1.0	
# ::edge	spend-01	ARG1	lord	0.0.1	0.0.1.1	
# ::edge	suffice-01	ARG1	income	0.2	0.2.0	
# ::edge	suffice-01	polarity	-	0.2	0.2.1	
# ::edge	visit-01	ARG0	person	0.1.0.0	0.1.0	
(c / contrast-01 
      :ARG1 (p2 / promise-01 
            :ARG0 (i2 / inquire-01) 
            :ARG1 (s2 / spend-01 
                  :ARG0 (h / he) 
                  :ARG1 (l / lord))) 
      :ARG1-of (r / restore-01 
            :ARG0 (p / person 
                  :ARG0-of (v / visit-01)) 
            :ARG2 (e / estate) 
            :mod (u / urgent)) 
      :ARG2 (s / suffice-01 
            :ARG1 (i / income) 
            :polarity -))

# ::snt they are going to get it he promises in much better shape for the second year
# ::tok they are going to get it he promises in much better shape for the second year
# ::alignments 15-16|0.2 11-12|0 9-10|0.0 7-8|0.3 6-7|0.3.0 5-6|0.3.1 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:56.876
# ::node	0	shape-01	11-12
# ::node	0.0	much	9-10
# ::node	0.1	they	0-1
# ::node	0.2	year	15-16
# ::node	0.3	promise-01	7-8
# ::node	0.3.0	he	6-7
# ::node	0.3.1	it	5-6
# ::root	0	shape-01
# ::edge	promise-01	ARG0	he	0.3	0.3.0	
# ::edge	promise-01	ARG1	it	0.3	0.3.1	
# ::edge	promise-01	ARG2	shape-01	0.3	0	
# ::edge	shape-01	ARG0	much	0	0.0	
# ::edge	shape-01	ARG1	they	0	0.1	
# ::edge	shape-01	ARG2	year	0	0.2	
(s / shape-01 
      :ARG0 (m / much) 
      :ARG1 (t / they) 
      :ARG2 (y / year) 
      :ARG2-of (p / promise-01 
            :ARG0 (h / he) 
            :ARG1 (i / it)))

# ::snt he promised an abundance of news in the coming months
# ::tok he promised an abundance of news in the coming months
# ::alignments 9-10|0.1.0.0+0.1.0 5-6|0.1 3-4|0.2 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:56.928
# ::node	0	promise-01	1-2
# ::node	0.0	he	0-1
# ::node	0.1	news	5-6
# ::node	0.1.0	temporal-quantity	9-10
# ::node	0.1.0.0	month	9-10
# ::node	0.2	abundance	3-4
# ::root	0	promise-01
# ::edge	promise-01	ARG0	he	0	0.0	
# ::edge	promise-01	ARG1	news	0	0.1	
# ::edge	promise-01	ARG2	abundance	0	0.2	
# ::edge	temporal-quantity	part	news	0.1.0	0.1	
# ::edge	temporal-quantity	unit	month	0.1.0	0.1.0.0	
(p / promise-01 
      :ARG0 (h / he) 
      :ARG1 (n / news 
            :part-of (t / temporal-quantity 
                  :unit (m / month))) 
      :ARG2 (a / abundance))

# ::snt mark reefer who makes the first defence of his commonwealth superfeatherweight title tonight has been promised a shot at the european crown held by frenchman daniel londas at the international centre brentwood on 14 february
# ::tok mark reefer who makes the first defence of his commonwealth superfeatherweight title tonight has been promised a shot at the european crown held by frenchman daniel londas at the international centre brentwood on 14 february
# ::alignments 34-35|0.0.1.2.1.0+0.0.1.2.1 33-34|0.0.1.2.1.1 29-30|0.0.2 21-22|0.0.1.2 20-21|0.0.1.2.0.0.0+0.0.1.2.0.0+0.0.1.2.0 17-18|0.0 15-16|0 12-13|0.0.0 11-12|0.0.1.0 6-7|0.0.1 0-1|0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:57.085
# ::node	0	promise-01	15-16
# ::node	0.0	shoot-02	17-18
# ::node	0.0.0	tonight	12-13
# ::node	0.0.1	defend-01	6-7
# ::node	0.0.1.0	title	11-12
# ::node	0.0.1.1	mark-01	0-1
# ::node	0.0.1.2	crown-01	21-22
# ::node	0.0.1.2.0	continent	20-21
# ::node	0.0.1.2.0.0	name	20-21
# ::node	0.0.1.2.0.0.0	"Europe"	20-21
# ::node	0.0.1.2.1	date-entity	34-35
# ::node	0.0.1.2.1.0	2	34-35
# ::node	0.0.1.2.1.1	14	33-34
# ::node	0.0.2	international	29-30
# ::root	0	promise-01
# ::edge	continent	name	name	0.0.1.2.0	0.0.1.2.0.0	
# ::edge	crown-01	ARG0	continent	0.0.1.2	0.0.1.2.0	
# ::edge	crown-01	ARG1	defend-01	0.0.1.2	0.0.1	
# ::edge	date-entity	month	2	0.0.1.2.1	0.0.1.2.1.0	
# ::edge	date-entity	op1	crown-01	0.0.1.2.1	0.0.1.2	
# ::edge	date-entity	quant	14	0.0.1.2.1	0.0.1.2.1.1	
# ::edge	defend-01	ARG1	title	0.0.1	0.0.1.0	
# ::edge	mark-01	ARG1	defend-01	0.0.1.1	0.0.1	
# ::edge	name	op1	"Europe"	0.0.1.2.0.0	0.0.1.2.0.0.0	
# ::edge	promise-01	ARG1	shoot-02	0	0.0	
# ::edge	shoot-02	ARG0	tonight	0.0	0.0.0	
# ::edge	shoot-02	ARG1	defend-01	0.0	0.0.1	
# ::edge	shoot-02	manner	international	0.0	0.0.2	
(p / promise-01 
      :ARG1 (s / shoot-02 
            :ARG0 (t / tonight) 
            :ARG1 (d2 / defend-01 
                  :ARG1 (t2 / title) 
                  :ARG1-of (m / mark-01) 
                  :ARG1-of (c / crown-01 
                        :ARG0 (c2 / continent 
                              :name (n / name 
                                    :op1 "Europe")) 
                        :op-of (d / date-entity 
                              :month 2 
                              :quant 14))) 
            :manner (i / international)))

# ::snt the arts council has already been promised 160m for next year and 168m for the year after
# ::tok the arts council has already been promised 160m for next year and 168m for the year after
# ::alignments 16-17|0.2 15-16|0.2.0 11-12|0.0 10-11|0.0.0 9-10|0.0.0.0 6-7|0 4-5|0.3 2-3|0.1 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:57.119
# ::node	0	promise-01	6-7
# ::node	0.0	and	11-12
# ::node	0.0.0	year	10-11
# ::node	0.0.0.0	next	9-10
# ::node	0.1	council	2-3
# ::node	0.1.0	art	1-2
# ::node	0.2	after	16-17
# ::node	0.2.0	year	15-16
# ::node	0.3	already	4-5
# ::root	0	promise-01
# ::edge	and	op1	year	0.0	0.0.0	
# ::edge	council	mod	art	0.1	0.1.0	
# ::edge	promise-01	ARG0	and	0	0.0	
# ::edge	promise-01	ARG1	council	0	0.1	
# ::edge	promise-01	time	after	0	0.2	
# ::edge	promise-01	time	already	0	0.3	
# ::edge	year	mod	next	0.0.0	0.0.0.0	
# ::edge	year	time	after	0.2.0	0.2	
(p / promise-01 
      :ARG0 (a2 / and 
            :op1 (y2 / year 
                  :mod (n / next))) 
      :ARG1 (c / council 
            :mod (a4 / art)) 
      :time (a / after 
            :time-of (y / year)) 
      :time (a3 / already))

# ::snt hence perhaps the indecisive outcome that promises a bumpy ride to parliamentary democracy
# ::tok hence perhaps the indecisive outcome that promises a bumpy ride to parliamentary democracy
# ::alignments 12-13|0.0.0.1 9-10|0.0.0 6-7|0.0 4-5|0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:57.137
# ::node	0	outcome	4-5
# ::node	0.0	promise-01	6-7
# ::node	0.0.0	ride-01	9-10
# ::node	0.0.0.0	perhaps	1-2
# ::node	0.0.0.1	democracy	12-13
# ::root	0	outcome
(o / outcome 
      :ARG0-of (p / promise-01 
            :ARG1 (r / ride-01 
                  :ARG0 (p2 / perhaps) 
                  :ARG1 (d / democracy))))

# ::snt it promises not a bedrock to philosophy and lifestyle but a feast of weird explanations a mental trip
# ::tok it promises not a bedrock to philosophy and lifestyle but a feast of weird explanations a mental trip
# ::alignments 17-18|0.1.0 16-17|0.1.0.1 14-15|0.1 13-14|0.1.1 9-10|0 8-9|0.0 7-8|0.0.0 6-7|0.0.0.0 1-2|0.1.0.0.0 0-1|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:57.198
# ::node	0	contrast-01	9-10
# ::node	0.0	lifestyle	8-9
# ::node	0.0.0	and	7-8
# ::node	0.0.0.0	philosophy	6-7
# ::node	0.1	explain-01	14-15
# ::node	0.1.0	trip-01	17-18
# ::node	0.1.0.0	it	0-1
# ::node	0.1.0.0.0	promise-01	1-2
# ::node	0.1.0.1	mental	16-17
# ::node	0.1.1	weird	13-14
# ::root	0	contrast-01
# ::edge	and	op1	philosophy	0.0.0	0.0.0.0	
# ::edge	and	op2	lifestyle	0.0.0	0.0	
# ::edge	contrast-01	ARG1	lifestyle	0	0.0	
# ::edge	contrast-01	ARG2	explain-01	0	0.1	
# ::edge	explain-01	ARG1	trip-01	0.1	0.1.0	
# ::edge	explain-01	mod	weird	0.1	0.1.1	
# ::edge	promise-01	ARG0	it	0.1.0.0.0	0.1.0.0	
# ::edge	trip-01	ARG0	it	0.1.0	0.1.0.0	
# ::edge	trip-01	manner	mental	0.1.0	0.1.0.1	
(c / contrast-01 
      :ARG1 (l / lifestyle 
            :op-of (a / and 
                  :op1 (p / philosophy))) 
      :ARG2 (e / explain-01 
            :ARG1 (t / trip-01 
                  :ARG0 (i / it 
                        :ARG0-of (p2 / promise-01)) 
                  :manner (m / mental)) 
            :mod (w / weird)))

# ::snt as well the allies bribed italy into the war by the treaty of london 26 april 1915 which promised her tyrol istria and north dalmatia without fiume rijeka
# ::tok as well the allies bribed italy into the war by the treaty of london 26 april 1915 which promised her tyrol istria and north dalmatia without fiume rijeka
# ::alignments 23-24|0.0.0 22-23|0 18-19|0.0 14-17|0.0.1.1.1.2+0.0.1.1.1.1+0.0.1.1.1.0+0.0.1.1.1 13-14|0.0.1.1.0.0.0+0.0.1.1.0.0+0.0.1.1.0 11-12|0.0.1.1 8-9|0.0.1.3 5-6|0.0.1.2.0.0+0.0.1.2.0+0.0.1.2 4-5|0.0.1 3-4|0.0.1.0 1-2|0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:57.404
# ::node	0	and	22-23
# ::node	0.0	promise-01	18-19
# ::node	0.0.0	north	23-24
# ::node	0.0.1	bribe-01	4-5
# ::node	0.0.1.0	ally-01	3-4
# ::node	0.0.1.0.0	well	1-2
# ::node	0.0.1.1	treaty	11-12
# ::node	0.0.1.1.0	city	13-14
# ::node	0.0.1.1.0.0	name	13-14
# ::node	0.0.1.1.0.0.0	"London"	13-14
# ::node	0.0.1.1.1	date-entity	14-17
# ::node	0.0.1.1.1.0	26	14-17
# ::node	0.0.1.1.1.1	4	14-17
# ::node	0.0.1.1.1.2	1915	14-17
# ::node	0.0.1.2	country	5-6
# ::node	0.0.1.2.0	name	5-6
# ::node	0.0.1.2.0.0	"Italy"	5-6
# ::node	0.0.1.3	war	8-9
# ::root	0	and
(a / and 
      :ARG1-of (p / promise-01 
            :ARG0 (n / north) 
            :ARG1-of (b / bribe-01 
                  :ARG0 (a2 / ally-01 
                        :mod (w2 / well)) 
                  :ARG2 (t / treaty 
                        :location (c / city 
                              :name (n2 / name 
                                    :op1 "London")) 
                        :time (d / date-entity 
                              :day 26 
                              :month 4 
                              :year 1915)) 
                  :manner (c2 / country 
                        :name (n3 / name 
                              :op1 "Italy")) 
                  :time (w / war))))

# ::snt mr hinchliffe promised that wilkes would reveal today how large a profit it had made on its shareholding in neill
# ::tok mr hinchliffe promised that wilkes would reveal today how large a profit it had made on its shareholding in neill
# ::alignments 12-13|0.0 11-12|0 9-10|0.0.0.0 7-8|0.0.0.2 6-7|0.0.0 2-3|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:57.430
# ::node	0	profit-01	11-12
# ::node	0.0	it	12-13
# ::node	0.0.0	reveal-01	6-7
# ::node	0.0.0.0	large	9-10
# ::node	0.0.0.1	promise-01	2-3
# ::node	0.0.0.2	today	7-8
# ::root	0	profit-01
# ::edge	profit-01	ARG0	it	0	0.0	
# ::edge	promise-01	ARG1	reveal-01	0.0.0.1	0.0.0	
# ::edge	reveal-01	ARG0	it	0.0.0	0.0	
# ::edge	reveal-01	ARG1	large	0.0.0	0.0.0.0	
# ::edge	reveal-01	time	today	0.0.0	0.0.0.2	
(p / profit-01 
      :ARG0 (i / it 
            :ARG0-of (r / reveal-01 
                  :ARG1 (l / large) 
                  :ARG1-of (p2 / promise-01) 
                  :time (t / today))))

# ::snt well i promise i wont keep them more than that but this coming from a party thats brought about that and then being critical of others and the lack of intent i think the ellip
# ::tok well i promise i wont keep them more than that but this coming from a party thats brought about that and then being critical of others and the lack of intent i think the ellip
# ::alignments 32-33|0.0 31-32|0.0.0.1 30-31|0.0.0.1.0 28-29|0.0.0 26-27|0.0.2.0.1 25-26|0.0.2.0.0 23-24|0.0.2.0 21-22|0.0.2.0.2 20-21|0.0.2 16-17|0.0.1 15-16|0.0.1.0 11-12|0.0.0.1.0.0 10-11|0 3-4|0.0.0.0 2-3|0.0.0.0.0 1-2|0.0.0.0.0.0 0-1|0.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:57.922
# ::node	0	contrast-01	10-11
# ::node	0.0	think-01	32-33
# ::node	0.0.0	lack-01	28-29
# ::node	0.0.0.0	i	3-4
# ::node	0.0.0.0.0	promise-01	2-3
# ::node	0.0.0.0.0.0	i	1-2
# ::node	0.0.0.0.0.1	well	0-1
# ::node	0.0.0.1	i	31-32
# ::node	0.0.0.1.0	intend-01	30-31
# ::node	0.0.0.1.0.0	this	11-12
# ::node	0.0.1	that	16-17
# ::node	0.0.1.0	party	15-16
# ::node	0.0.2	and	20-21
# ::node	0.0.2.0	critical	23-24
# ::node	0.0.2.0.0	other	25-26
# ::node	0.0.2.0.1	and	26-27
# ::node	0.0.2.0.2	then	21-22
# ::root	0	contrast-01
# ::edge	and	op1	critical	0.0.2	0.0.2.0	
# ::edge	and	op1	critical	0.0.2.0.1	0.0.2.0	
# ::edge	and	op2	think-01	0.0.2	0.0	
# ::edge	contrast-01	ARG2	think-01	0	0.0	
# ::edge	critical	compared-to	other	0.0.2.0	0.0.2.0.0	
# ::edge	critical	time	then	0.0.2.0	0.0.2.0.2	
# ::edge	intend-01	ARG0	i	0.0.0.1.0	0.0.0.1	
# ::edge	intend-01	ARG1	this	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	lack-01	ARG0	i	0.0.0	0.0.0.0	
# ::edge	lack-01	ARG1	i	0.0.0	0.0.0.1	
# ::edge	promise-01	ARG0	i	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	promise-01	ARG1	i	0.0.0.0.0	0.0.0.0	
# ::edge	promise-01	ARG2	well	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	that	mod	party	0.0.1	0.0.1.0	
# ::edge	think-01	ARG0	lack-01	0.0	0.0.0	
# ::edge	think-01	ARG1	that	0.0	0.0.1	
(c2 / contrast-01 
      :ARG2 (t / think-01 
            :ARG0 (l / lack-01 
                  :ARG0 (i3 / i 
                        :ARG1-of (p2 / promise-01 
                              :ARG0 (i4 / i) 
                              :ARG2 (w / well))) 
                  :ARG1 (i / i 
                        :ARG0-of (i2 / intend-01 
                              :ARG1 (t4 / this)))) 
            :ARG1 (t3 / that 
                  :mod (p / party)) 
            :op-of (a2 / and 
                  :op1 (c / critical 
                        :compared-to (o / other) 
                        :op-of (a / and) 
                        :time (t2 / then)))))

# ::snt bernard schwartz the chairman of loral has been widely quoted here as saying the heavy selloff is an overreaction to events and promising an acquisition in the near future
# ::tok bernard schwartz the chairman of loral has been widely quoted here as saying the heavy selloff is an overreaction to events and promising an acquisition in the near future
# ::alignments 28-29|0.1.0.0.1 27-28|0.1.0.0.1.0 24-25|0.1.0.0.0 22-23|0.1.0.0 21-22|0.1.0 20-21|0.1.0.1 14-15|0.1.0.0.0.0 12-13|0 10-11|0.1.2 9-10|0.1 8-9|0.1.1 3-4|0.0.0+0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:58.154
# ::node	0	say-01	12-13
# ::node	0.0	have-org-role-91	3-4
# ::node	0.0.0	chairman	3-4
# ::node	0.1	quote-01	9-10
# ::node	0.1.0	and	21-22
# ::node	0.1.0.0	promise-01	22-23
# ::node	0.1.0.0.0	acquire-01	24-25
# ::node	0.1.0.0.0.0	heavy	14-15
# ::node	0.1.0.0.1	future	28-29
# ::node	0.1.0.0.1.0	near	27-28
# ::node	0.1.0.1	event	20-21
# ::node	0.1.1	wide	8-9
# ::node	0.1.2	here	10-11
# ::root	0	say-01
# ::edge	acquire-01	ARG1	heavy	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	and	op1	event	0.1.0	0.1.0.1	
# ::edge	future	mod	near	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	have-org-role-91	ARG2	chairman	0.0	0.0.0	
# ::edge	promise-01	ARG0	and	0.1.0.0	0.1.0	
# ::edge	promise-01	ARG1	acquire-01	0.1.0.0	0.1.0.0.0	
# ::edge	promise-01	ARG2	future	0.1.0.0	0.1.0.0.1	
# ::edge	quote-01	ARG1	and	0.1	0.1.0	
# ::edge	quote-01	ARG2	say-01	0.1	0	
# ::edge	quote-01	degree	wide	0.1	0.1.1	
# ::edge	quote-01	location	here	0.1	0.1.2	
# ::edge	say-01	ARG1	have-org-role-91	0	0.0	
(s / say-01 
      :ARG1 (h3 / have-org-role-91 
            :ARG2 (c / chairman)) 
      :ARG2-of (q / quote-01 
            :ARG1 (a2 / and 
                  :ARG0-of (p / promise-01 
                        :ARG1 (a / acquire-01 
                              :ARG1 (h / heavy)) 
                        :ARG2 (f / future 
                              :mod (n / near))) 
                  :op1 (e / event)) 
            :degree (w / wide) 
            :location (h2 / here)))

# ::snt research at oxford university promises to reduce considerably the volume of mathematics generated
# ::tok research at oxford university promises to reduce considerably the volume of mathematics generated
# ::alignments 12-13|0.1.0.0 11-12|0.1.0.0.0 9-10|0.1.0 7-8|0.1.2 6-7|0.1 4-5|0 3-4|0.0 0-1|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:58.206
# ::node	0	promise-01	4-5
# ::node	0.0	university	3-4
# ::node	0.1	reduce-01	6-7
# ::node	0.1.0	volume	9-10
# ::node	0.1.0.0	generate-01	12-13
# ::node	0.1.0.0.0	mathematics	11-12
# ::node	0.1.1	research-01	0-1
# ::node	0.1.2	considerable	7-8
# ::root	0	promise-01
# ::edge	generate-01	ARG0	volume	0.1.0.0	0.1.0	
# ::edge	generate-01	ARG1	mathematics	0.1.0.0	0.1.0.0.0	
# ::edge	promise-01	ARG0	university	0	0.0	
# ::edge	promise-01	ARG1	reduce-01	0	0.1	
# ::edge	reduce-01	ARG1	volume	0.1	0.1.0	
# ::edge	reduce-01	manner	considerable	0.1	0.1.2	
# ::edge	research-01	ARG1	reduce-01	0.1.1	0.1	
(p / promise-01 
      :ARG0 (u / university) 
      :ARG1 (r / reduce-01 
            :ARG1 (v / volume 
                  :ARG0-of (g / generate-01 
                        :ARG1 (m / mathematics))) 
            :ARG1-of (r2 / research-01) 
            :manner (c / considerable)))

# ::snt nonpolitical onlookers have reason to be concerned at the damage the nation may suffer if it is to be subjected for two more years to the whims of a prime minister who constantly promises to remain out of step with the rest of the world
# ::tok nonpolitical onlookers have reason to be concerned at the damage the nation may suffer if it is to be subjected for two more years to the whims of a prime minister who constantly promises to remain out of step with the rest of the world
# ::alignments 44-45|0.1.0.1.0 41-42|0.1.0.1 35-36|0.1.0 33-34|0.1.0.0 32-33|0.1.0.0.2 30-31|0.1.0.0.0+0.1.0.0.0.0 29-30|0.1.0.0.0.1 26-27|0.1 23-24|0.1.0.0.1.0.0+0.1.0.0.1.0 21-22|0.1.0.0.1 19-20|0 15-16|0.0 13-14|0.0.0.0 12-13|0.0.0.0.1.0+0.0.0.0.1 11-12|0.0.0 9-10|0.0.0.0.0 6-7|0.0.0.0.0.0 3-4|0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:58.436
# ::node	0	subject-01	19-20
# ::node	0.0	it	15-16
# ::node	0.0.0	nation	11-12
# ::node	0.0.0.0	suffer-01	13-14
# ::node	0.0.0.0.0	damage-01	9-10
# ::node	0.0.0.0.0.0	concern-01	6-7
# ::node	0.0.0.0.0.0.0	reason	3-4
# ::node	0.0.0.0.1	date-entity	12-13
# ::node	0.0.0.0.1.0	5	12-13
# ::node	0.1	whim	26-27
# ::node	0.1.0	remain-01	35-36
# ::node	0.1.0.0	promise-01	33-34
# ::node	0.1.0.0.0	minister	30-31
# ::node	0.1.0.0.0.0	have-org-role-91	30-31
# ::node	0.1.0.0.0.1	prime	29-30
# ::node	0.1.0.0.1	2	21-22
# ::node	0.1.0.0.1.0	temporal-quantity	23-24
# ::node	0.1.0.0.1.0.0	year	23-24
# ::node	0.1.0.0.2	constant	32-33
# ::node	0.1.0.1	rest	41-42
# ::node	0.1.0.1.0	world	44-45
# ::root	0	subject-01
# ::edge	concern-01	ARG0	damage-01	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	concern-01	ARG1	reason	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	date-entity	month	5	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	have-org-role-91	ARG2	minister	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	minister	mod	prime	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	nation	poss	it	0.0.0	0.0	
# ::edge	promise-01	ARG0	minister	0.1.0.0	0.1.0.0.0	
# ::edge	promise-01	ARG1	2	0.1.0.0	0.1.0.0.1	
# ::edge	promise-01	ARG2	remain-01	0.1.0.0	0.1.0	
# ::edge	promise-01	manner	constant	0.1.0.0	0.1.0.0.2	
# ::edge	remain-01	ARG1	whim	0.1.0	0.1	
# ::edge	remain-01	ARG3	rest	0.1.0	0.1.0.1	
# ::edge	subject-01	ARG1	it	0	0.0	
# ::edge	subject-01	ARG2	whim	0	0.1	
# ::edge	suffer-01	ARG0	nation	0.0.0.0	0.0.0	
# ::edge	suffer-01	ARG1	damage-01	0.0.0.0	0.0.0.0.0	
# ::edge	suffer-01	mod	date-entity	0.0.0.0	0.0.0.0.1	
# ::edge	temporal-quantity	quant	2	0.1.0.0.1.0	0.1.0.0.1	
# ::edge	temporal-quantity	unit	year	0.1.0.0.1.0	0.1.0.0.1.0.0	
# ::edge	world	part	rest	0.1.0.1.0	0.1.0.1	
(s / subject-01 
      :ARG1 (i / it 
            :poss-of (n / nation 
                  :ARG0-of (s2 / suffer-01 
                        :ARG1 (d2 / damage-01 
                              :ARG0-of (c2 / concern-01 
                                    :ARG1 (r3 / reason))) 
                        :mod (d / date-entity 
                              :month 5)))) 
      :ARG2 (w2 / whim 
            :ARG1-of (r2 / remain-01 
                  :ARG2-of (p / promise-01 
                        :ARG0 (m / minister 
                              :ARG2-of (h / have-org-role-91) 
                              :mod (p2 / prime)) 
                        :ARG1 (2 / 2 
                              :quant-of (t / temporal-quantity 
                                    :unit (y / year))) 
                        :manner (c / constant)) 
                  :ARG3 (r / rest 
                        :part-of (w / world)))))

# ::snt   oh i dont think theres any problem said gerrard quickly and went on to promise a postcard from barbados
# ::tok oh i dont think theres any problem said gerrard quickly and went on to promise a postcard from barbados
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:58.437
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt by agreeing to give him a right one purports to confer it on him or one promises to do so in the future the expression is ambiguous
# ::tok by agreeing to give him a right one purports to confer it on him or one promises to do so in the future the expression is ambiguous
# ::alignments 24-25|0.0.0.1.0 22-23|0.0.0.0 19-20|0.1 16-17|0 14-15|0.0 11-12|0.0.0.2.0.0 10-11|0.0.0.2.0 8-9|0.0.0.2 3-4|0.0.0.1 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:58.571
# ::node	0	promise-01	16-17
# ::node	0.0	or	14-15
# ::node	0.0.0	agree-01	1-2
# ::node	0.0.0.0	future	22-23
# ::node	0.0.0.1	give-01	3-4
# ::node	0.0.0.1.0	express-01	24-25
# ::node	0.0.0.2	purport-01	8-9
# ::node	0.0.0.2.0	confer-01	10-11
# ::node	0.0.0.2.0.0	it	11-12
# ::node	0.1	so	19-20
# ::root	0	promise-01
# ::edge	agree-01	ARG0	future	0.0.0	0.0.0.0	
# ::edge	agree-01	ARG1	give-01	0.0.0	0.0.0.1	
# ::edge	confer-01	ARG1	it	0.0.0.2.0	0.0.0.2.0.0	
# ::edge	give-01	ARG0	express-01	0.0.0.1	0.0.0.1.0	
# ::edge	or	op1	agree-01	0.0	0.0.0	
# ::edge	promise-01	ARG0	or	0	0.0	
# ::edge	promise-01	ARG1	so	0	0.1	
# ::edge	purport-01	ARG1	confer-01	0.0.0.2	0.0.0.2.0	
# ::edge	purport-01	ARG2	agree-01	0.0.0.2	0.0.0	
(p / promise-01 
      :ARG0 (o / or 
            :op1 (a / agree-01 
                  :ARG0 (f / future) 
                  :ARG1 (g / give-01 
                        :ARG0 (e / express-01)) 
                  :ARG2-of (p2 / purport-01 
                        :ARG1 (c / confer-01 
                              :ARG1 (i / it))))) 
      :ARG1 (s / so))

# ::snt 9604 promise-v 801044 Promise 537527
# ::tok 9604 promise - v 801044 Promise 537527
# ::alignments 6-7|0.0.2+0.0.1+0.0.0+0.0 4-5|0.1.0.2+0.1.0.1+0.1.0.0+0.1.0 1-2|0 0-1|0.1.1+0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:58.603
# ::node	0	promise-01	1-2
# ::node	0.0	date-entity	6-7
# ::node	0.0.0	27	6-7
# ::node	0.0.1	75	6-7
# ::node	0.0.2	53	6-7
# ::node	0.1	date-entity	0-1
# ::node	0.1.0	date-entity	4-5
# ::node	0.1.0.0	44	4-5
# ::node	0.1.0.1	10	4-5
# ::node	0.1.0.2	80	4-5
# ::node	0.1.1	9604	0-1
# ::root	0	promise-01
# ::edge	date-entity	day	27	0.0	0.0.0	
# ::edge	date-entity	day	44	0.1.0	0.1.0.0	
# ::edge	date-entity	month	10	0.1.0	0.1.0.1	
# ::edge	date-entity	month	75	0.0	0.0.1	
# ::edge	date-entity	name	date-entity	0.1	0.1.0	
# ::edge	date-entity	year	53	0.0	0.0.2	
# ::edge	date-entity	year	80	0.1.0	0.1.0.2	
# ::edge	date-entity	year	9604	0.1	0.1.1	
# ::edge	promise-01	ARG1	date-entity	0	0.0	
# ::edge	promise-01	time	date-entity	0	0.1	
(p / promise-01 
      :ARG1 (d / date-entity 
            :day 27 
            :month 75 
            :year 53) 
      :time (d3 / date-entity 
            :name (d2 / date-entity 
                  :day 44 
                  :month 10 
                  :year 80) 
            :year 9604))

# ::snt  I\ll go back to London."  Promise soothingly that I heard them say they would depart after lunch.
# ::tok I\ll go back to London . " Promise soothingly that I heard them say they would depart after lunch .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:58.604
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt EMPTY_SENTENCE
# ::tok EMPTY_SENTENCE
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:58.605
# ::node	0	amr-empty	0-1
# ::root	0	amr-empty
(a / amr-empty)

# ::snt   two men from poor northern city backgrounds who later became very wealthy tried to set up their elderly parents in comfort andrew carnegie american millionaire bachelor gave his scots mother my best friend and trustiest counsellor a house and a carriage and pair as he had promised her when young while a manchester millowner failed to persuade his old mother to spend more than 1 a week but would pet her like the sweetheart she was
# ::tok two men from poor northern city backgrounds who later became very wealthy tried to set up their elderly parents in comfort andrew carnegie american millionaire bachelor gave his scots mother my best friend and trustiest counsellor a house and a carriage and pair as he had promised her when young while a manchester millowner failed to persuade his old mother to spend more than 1 a week but would pet her like the sweetheart she was
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:58.606
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt he is also expected to promise reforms of the electoral system to make way for free and secret elections
# ::tok he is also expected to promise reforms of the electoral system to make way for free and secret elections
# ::alignments 18-19|0.3.0 17-18|0.3 16-17|0 15-16|0.2 13-14|0.1 10-11|0.0.0.2 9-10|0.0.0.2.0 6-7|0.0 5-6|0.0.0 3-4|0.0.0.1 2-3|0.0.0.1.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:58.679
# ::node	0	and	16-17
# ::node	0.0	reform-01	6-7
# ::node	0.0.0	promise-01	5-6
# ::node	0.0.0.0	he	0-1
# ::node	0.0.0.1	expect-01	3-4
# ::node	0.0.0.1.0	also	2-3
# ::node	0.0.0.2	system	10-11
# ::node	0.0.0.2.0	elect-01	9-10
# ::node	0.1	way	13-14
# ::node	0.2	free-41	15-16
# ::node	0.3	secret	17-18
# ::node	0.3.0	elect-01	18-19
# ::root	0	and
# ::edge	and	op1	way	0	0.1	
# ::edge	and	op2	free-41	0	0.2	
# ::edge	and	op3	secret	0	0.3	
# ::edge	elect-01	instrument	system	0.0.0.2.0	0.0.0.2	
# ::edge	elect-01	mod	secret	0.3.0	0.3	
# ::edge	expect-01	ARG1	promise-01	0.0.0.1	0.0.0	
# ::edge	expect-01	mod	also	0.0.0.1	0.0.0.1.0	
# ::edge	promise-01	ARG0	he	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	reform-01	0.0.0	0.0	
# ::edge	promise-01	ARG2	system	0.0.0	0.0.0.2	
# ::edge	reform-01	ARG1	and	0.0	0	
(a / and 
      :ARG1-of (r / reform-01 
            :ARG1-of (p / promise-01 
                  :ARG0 (h / he) 
                  :ARG1-of (e3 / expect-01 
                        :mod (a2 / also)) 
                  :ARG2 (s2 / system 
                        :instrument-of (e2 / elect-01)))) 
      :op1 (w / way) 
      :op2 (f / free-41) 
      :op3 (s / secret 
            :mod-of (e / elect-01)))

# ::snt forsyth promised to put in a sequence that would lose roschmann the sympathy of former comrades but refused to let him escape unpunished as the real roschmann had
# ::tok forsyth promised to put in a sequence that would lose roschmann the sympathy of former comrades but refused to let him escape unpunished as the real roschmann had
# ::alignments 25-26|0.0.0.0 21-22|0.1.0.0 19-20|0.1.0 17-18|0.1 16-17|0 15-16|0.0.0.1+0.0.0 14-15|0.0.0.2 12-13|0.1.0.1 9-10|0.1.0.1.0 6-7|0.1.0.1.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:58.766
# ::node	0	contrast-01	16-17
# ::node	0.0	promise-01	1-2
# ::node	0.0.0	have-rel-role-91	15-16
# ::node	0.0.0.0	real	25-26
# ::node	0.0.0.1	comrade	15-16
# ::node	0.0.0.2	former	14-15
# ::node	0.1	refuse-01	17-18
# ::node	0.1.0	let-01	19-20
# ::node	0.1.0.0	escape-01	21-22
# ::node	0.1.0.1	sympathy	12-13
# ::node	0.1.0.1.0	lose-02	9-10
# ::node	0.1.0.1.0.0	sequence-00	6-7
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	promise-01	0	0.0	
# ::edge	contrast-01	ARG2	refuse-01	0	0.1	
# ::edge	have-rel-role-91	ARG1	real	0.0.0	0.0.0.0	
# ::edge	have-rel-role-91	ARG2	comrade	0.0.0	0.0.0.1	
# ::edge	have-rel-role-91	time	former	0.0.0	0.0.0.2	
# ::edge	let-01	ARG1	escape-01	0.1.0	0.1.0.0	
# ::edge	let-01	ARG3	sympathy	0.1.0	0.1.0.1	
# ::edge	lose-02	ARG0	sequence-00	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	lose-02	ARG1	sympathy	0.1.0.1.0	0.1.0.1	
# ::edge	promise-01	ARG1	have-rel-role-91	0.0	0.0.0	
# ::edge	refuse-01	ARG1	let-01	0.1	0.1.0	
(c / contrast-01 
      :ARG1 (p / promise-01 
            :ARG1 (h / have-rel-role-91 
                  :ARG1 (r / real) 
                  :ARG2 (c2 / comrade) 
                  :time (f / former))) 
      :ARG2 (r2 / refuse-01 
            :ARG1 (l / let-01 
                  :ARG1 (e / escape-01) 
                  :ARG3 (s / sympathy 
                        :ARG1-of (l2 / lose-02 
                              :ARG0 (s2 / sequence-00))))))

# ::snt the junior agriculture minister david curry promised to consider the matter
# ::tok the junior agriculture minister david curry promised to consider the matter
# ::alignments 10-11|0.1.1 8-9|0.1 6-7|0 5-6|0.1.0 3-4|0.0.0.0+0.0.0 2-3|0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:58.823
# ::node	0	promise-01	6-7
# ::node	0.0	agriculture	2-3
# ::node	0.0.0	have-org-role-91	3-4
# ::node	0.0.0.0	minister	3-4
# ::node	0.0.1	junior	1-2
# ::node	0.1	consider-02	8-9
# ::node	0.1.0	curry	5-6
# ::node	0.1.1	matter	10-11
# ::root	0	promise-01
# ::edge	agriculture	mod	junior	0.0	0.0.1	
# ::edge	consider-02	ARG0	curry	0.1	0.1.0	
# ::edge	consider-02	ARG1	matter	0.1	0.1.1	
# ::edge	have-org-role-91	ARG1	agriculture	0.0.0	0.0	
# ::edge	have-org-role-91	ARG2	minister	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	agriculture	0	0.0	
# ::edge	promise-01	ARG2	consider-02	0	0.1	
(p / promise-01 
      :ARG1 (a / agriculture 
            :ARG1-of (h / have-org-role-91 
                  :ARG2 (m2 / minister)) 
            :mod (j / junior)) 
      :ARG2 (c / consider-02 
            :ARG0 (c2 / curry) 
            :ARG1 (m / matter)))

# ::snt this afternoons game at bari promises more enterprise although the animating spirit is likely to be commerce
# ::tok this afternoons game at bari promises more enterprise although the animating spirit is likely to be commerce
# ::alignments 16-17|0.2.0.0 13-14|0.2 11-12|0.2.0 7-8|0.1 5-6|0 2-3|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:58.909
# ::node	0	promise-01	5-6
# ::node	0.0	game	2-3
# ::node	0.0.0	this	0-1
# ::node	0.1	enterprise	7-8
# ::node	0.2	likely	13-14
# ::node	0.2.0	spirit	11-12
# ::node	0.2.0.0	commerce	16-17
# ::root	0	promise-01
# ::edge	commerce	op1	spirit	0.2.0.0	0.2.0	
# ::edge	game	mod	this	0.0	0.0.0	
# ::edge	likely	domain	spirit	0.2	0.2.0	
# ::edge	promise-01	ARG0	game	0	0.0	
# ::edge	promise-01	ARG1	enterprise	0	0.1	
# ::edge	promise-01	condition	likely	0	0.2	
(p / promise-01 
      :ARG0 (g / game 
            :mod (t / this)) 
      :ARG1 (e / enterprise) 
      :condition (l / likely 
            :domain (s / spirit 
                  :op-of (c / commerce))))

# ::snt many clients making claims for storm damage have been visited by builders on spec promising to carry out quick repairs
# ::tok many clients making claims for storm damage have been visited by builders on spec promising to carry out quick repairs
# ::alignments 19-20|0.0.0.0 18-19|0.0.0.0.0 14-15|0.0.0 9-10|0.0.1.0.0 6-7|0.0 5-6|0 3-4|0.0.1 1-2|0.0.1.0 0-1|0.0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:59.097
# ::node	0	storm	5-6
# ::node	0.0	damage-01	6-7
# ::node	0.0.0	promise-01	14-15
# ::node	0.0.0.0	repair-01	19-20
# ::node	0.0.0.0.0	quick	18-19
# ::node	0.0.1	claim-01	3-4
# ::node	0.0.1.0	client	1-2
# ::node	0.0.1.0.0	visit-01	9-10
# ::node	0.0.1.0.1	many	0-1
# ::root	0	storm
(s / storm 
      :ARG1-of (d / damage-01 
            :ARG0-of (p / promise-01 
                  :ARG1 (r / repair-01 
                        :mod (q / quick))) 
            :ARG1-of (c / claim-01 
                  :ARG0 (c2 / client 
                        :ARG1-of (v / visit-01) 
                        :quant (m / many)))))

# ::snt these incorporate a very long run which promises high speed
# ::tok these incorporate a very long run which promises high speed
# ::alignments 9-10|0.1 8-9|0.1.0 7-8|0 3-4|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:59.108
# ::node	0	promise-01	7-8
# ::node	0.0	very	3-4
# ::node	0.1	speed	9-10
# ::node	0.1.0	high	8-9
# ::root	0	promise-01
# ::edge	promise-01	ARG0	very	0	0.0	
# ::edge	promise-01	ARG1	speed	0	0.1	
# ::edge	speed	mod	high	0.1	0.1.0	
(p / promise-01 
      :ARG0 (v / very) 
      :ARG1 (s / speed 
            :mod (h / high)))

# ::snt he has addressed the concerns of this new south promising to reduce real estate taxes encourage growth and solve the areas chronic traffic congestion
# ::tok he has addressed the concerns of this new south promising to reduce real estate taxes encourage growth and solve the areas chronic traffic congestion
# ::alignments 23-24|0.2 22-23|0.2.0 21-22|0.2.1 20-21|0.1 18-19|0 17-18|0.3 16-17|0.3.1.0 15-16|0.3.1 14-15|0.0 13-14|0.0.0 12-13|0.0.0.0 11-12|0.3.0 9-10|0.3.0.1 8-9|0.3.0.0 7-8|0.3.0.0.1 6-7|0.3.0.0.2 4-5|0.3.0.0.0 2-3|0.3.0.0.0.0 0-1|0.3.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:59.708
# ::node	0	solve-01	18-19
# ::node	0.0	tax-01	14-15
# ::node	0.0.0	estate	13-14
# ::node	0.0.0.0	real	12-13
# ::node	0.1	area	20-21
# ::node	0.2	congest-01	23-24
# ::node	0.2.0	traffic	22-23
# ::node	0.2.1	chronic	21-22
# ::node	0.3	and	17-18
# ::node	0.3.0	reduce-01	11-12
# ::node	0.3.0.0	south	8-9
# ::node	0.3.0.0.0	concern-01	4-5
# ::node	0.3.0.0.0.0	address-01	2-3
# ::node	0.3.0.0.0.0.0	he	0-1
# ::node	0.3.0.0.1	new	7-8
# ::node	0.3.0.0.2	this	6-7
# ::node	0.3.0.1	promise-01	9-10
# ::node	0.3.1	encourage-01	15-16
# ::node	0.3.1.0	grow-01	16-17
# ::root	0	solve-01
# ::edge	address-01	ARG0	he	0.3.0.0.0.0	0.3.0.0.0.0.0	
# ::edge	address-01	ARG1	concern-01	0.3.0.0.0.0	0.3.0.0.0	
# ::edge	and	op1	encourage-01	0.3	0.3.1	
# ::edge	and	op2	solve-01	0.3	0	
# ::edge	concern-01	ARG0	south	0.3.0.0.0	0.3.0.0	
# ::edge	congest-01	ARG1	traffic	0.2	0.2.0	
# ::edge	congest-01	mod	chronic	0.2	0.2.1	
# ::edge	encourage-01	ARG1	grow-01	0.3.1	0.3.1.0	
# ::edge	estate	mod	real	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	reduce-01	0.3.0.1	0.3.0	
# ::edge	reduce-01	ARG0	south	0.3.0	0.3.0.0	
# ::edge	reduce-01	ARG1	and	0.3.0	0.3	
# ::edge	solve-01	ARG0	tax-01	0	0.0	
# ::edge	solve-01	ARG1	area	0	0.1	
# ::edge	solve-01	ARG2	congest-01	0	0.2	
# ::edge	south	mod	new	0.3.0.0	0.3.0.0.1	
# ::edge	south	mod	this	0.3.0.0	0.3.0.0.2	
# ::edge	tax-01	ARG3	estate	0.0	0.0.0	
(s / solve-01 
      :ARG0 (t2 / tax-01 
            :ARG3 (e2 / estate 
                  :mod (r / real))) 
      :ARG1 (a / area) 
      :ARG2 (c / congest-01 
            :ARG1 (t / traffic) 
            :mod (c2 / chronic)) 
      :op-of (a2 / and 
            :ARG1-of (r2 / reduce-01 
                  :ARG0 (s2 / south 
                        :ARG0-of (c3 / concern-01 
                              :ARG1-of (a3 / address-01 
                                    :ARG0 (h / he))) 
                        :mod (n / new) 
                        :mod (t3 / this)) 
                  :ARG1-of (p / promise-01)) 
            :op1 (e / encourage-01 
                  :ARG1 (g / grow-01))))

# ::snt i had promised to go and see a man i had met only once before
# ::tok i had promised to go and see a man i had met only once before
# ::alignments 14-15|0.1.0.0.0.2 13-14|0.1.0.0.0.1 12-13|0.1.0.0.0.1.0 11-12|0.1.0.0.0 9-10|0.1.0.0.0.0 8-9|0.1.0.0 6-7|0.1.0 5-6|0.1 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:59.810
# ::node	0	promise-01	2-3
# ::node	0.0	i	0-1
# ::node	0.1	and	5-6
# ::node	0.1.0	see-01	6-7
# ::node	0.1.0.0	man	8-9
# ::node	0.1.0.0.0	meet-03	11-12
# ::node	0.1.0.0.0.0	i	9-10
# ::node	0.1.0.0.0.1	once	13-14
# ::node	0.1.0.0.0.1.0	only	12-13
# ::node	0.1.0.0.0.2	before	14-15
# ::root	0	promise-01
# ::edge	and	op1	see-01	0.1	0.1.0	
# ::edge	meet-03	ARG0	i	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	meet-03	ARG1	man	0.1.0.0.0	0.1.0.0	
# ::edge	meet-03	ARG2	once	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	meet-03	time	before	0.1.0.0.0	0.1.0.0.0.2	
# ::edge	once	degree	only	0.1.0.0.0.1	0.1.0.0.0.1.0	
# ::edge	promise-01	ARG0	i	0	0.0	
# ::edge	promise-01	ARG1	and	0	0.1	
# ::edge	see-01	ARG1	man	0.1.0	0.1.0.0	
(p / promise-01 
      :ARG0 (i2 / i) 
      :ARG1 (a / and 
            :op1 (s / see-01 
                  :ARG1 (m2 / man 
                        :ARG1-of (m / meet-03 
                              :ARG0 (i / i) 
                              :ARG2 (o / once 
                                    :degree (o2 / only)) 
                              :time (b / before))))))

# ::snt whats more you have promised to deliver the rewrites in five days because the producer is going on holiday he has a cottage in county cork coincidentally and would like to work on the rewrites sway from the office
# ::tok whats more you have promised to deliver the rewrites in five days because the producer is going on holiday he has a cottage in county cork coincidentally and would like to work on the rewrites sway from the office
# ::alignments 38-39|0.0.0.0 35-36|0.0.0 27-28|0.1 24-25|0.0.0.1 19-20|0.0.1.1.0 18-19|0.1.0 14-15|0.0 12-13|0 11-12|0.2.1+0.2 10-11|0.2.0 6-7|0.0.1 4-5|0.0.1.1 2-3|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:30:59.939
# ::node	0	cause-01	12-13
# ::node	0.0	produce-01	14-15
# ::node	0.0.0	sway-01	35-36
# ::node	0.0.0.0	office	38-39
# ::node	0.0.0.1	county	24-25
# ::node	0.0.1	deliver-01	6-7
# ::node	0.0.1.0	you	2-3
# ::node	0.0.1.1	promise-01	4-5
# ::node	0.0.1.1.0	he	19-20
# ::node	0.1	and	27-28
# ::node	0.1.0	holiday	18-19
# ::node	0.2	temporal-quantity	11-12
# ::node	0.2.0	5	10-11
# ::node	0.2.1	day	11-12
# ::root	0	cause-01
# ::edge	and	op1	holiday	0.1	0.1.0	
# ::edge	cause-01	ARG0	produce-01	0	0.0	
# ::edge	cause-01	ARG1	and	0	0.1	
# ::edge	cause-01	ARG2	temporal-quantity	0	0.2	
# ::edge	deliver-01	ARG0	you	0.0.1	0.0.1.0	
# ::edge	produce-01	ARG1	sway-01	0.0	0.0.0	
# ::edge	produce-01	subevent	deliver-01	0.0	0.0.1	
# ::edge	promise-01	ARG0	he	0.0.1.1	0.0.1.1.0	
# ::edge	promise-01	ARG2	deliver-01	0.0.1.1	0.0.1	
# ::edge	sway-01	ARG1	office	0.0.0	0.0.0.0	
# ::edge	sway-01	mod	county	0.0.0	0.0.0.1	
# ::edge	temporal-quantity	quant	5	0.2	0.2.0	
# ::edge	temporal-quantity	unit	day	0.2	0.2.1	
(c2 / cause-01 
      :ARG0 (p / produce-01 
            :ARG1 (s / sway-01 
                  :ARG1 (o / office) 
                  :mod (c / county)) 
            :subevent (d2 / deliver-01 
                  :ARG0 (y / you) 
                  :ARG2-of (p2 / promise-01 
                        :ARG0 (h / he)))) 
      :ARG1 (a / and 
            :op1 (h2 / holiday)) 
      :ARG2 (t / temporal-quantity 
            :quant 5 
            :unit (d / day)))

# ::snt i promise you they will know him all right after italys match at wembley in a fortnights time
# ::tok i promise you they will know him all right after italys match at wembley in a fortnights time
# ::alignments 17-18|0.1.0.0 11-12|0.1.0.1 9-10|0.1.0.1.0 7-8|0.3 5-6|0.1.0 3-4|0.1 2-3|0.2 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:00.167
# ::node	0	promise-01	1-2
# ::node	0.0	i	0-1
# ::node	0.1	they	3-4
# ::node	0.1.0	know-01	5-6
# ::node	0.1.0.0	time	17-18
# ::node	0.1.0.1	match-01	11-12
# ::node	0.1.0.1.0	after	9-10
# ::node	0.2	you	2-3
# ::node	0.3	all	7-8
# ::root	0	promise-01
# ::edge	after	op1	match-01	0.1.0.1.0	0.1.0.1	
# ::edge	know-01	ARG0	they	0.1.0	0.1	
# ::edge	know-01	ARG1	time	0.1.0	0.1.0.0	
# ::edge	match-01	ARG1	know-01	0.1.0.1	0.1.0	
# ::edge	promise-01	ARG0	i	0	0.0	
# ::edge	promise-01	ARG1	they	0	0.1	
# ::edge	promise-01	ARG2	you	0	0.2	
# ::edge	promise-01	manner	all	0	0.3	
(p / promise-01 
      :ARG0 (i / i) 
      :ARG1 (t2 / they 
            :ARG0-of (k / know-01 
                  :ARG1 (t / time) 
                  :ARG1-of (m / match-01 
                        :op-of (a / after)))) 
      :ARG2 (y / you) 
      :manner (a2 / all))

# ::snt she bought the ticket gave him money for the journey and forced her way on board the boat where she found a purser who promised to look after michael and to put him on the london train
# ::tok she bought the ticket gave him money for the journey and forced her way on board the boat where she found a purser who promised to look after michael and to put him on the london train
# ::alignments 36-37|0.0.0.0.0.0.1.2.0.0.0 35-36|0.0.0.0.0.0.1.2.0.0.1.0+0.0.0.0.0.0.1.2.0.0.1+0.0.0.0.0.0.1.2.0.0 29-30|0 27-28|0.0.1 24-25|0.0 20-21|0.0.0.0 19-20|0.0.0 17-18|0.0.0.0.0 13-14|0.0.0.0.0.0.1.1 11-12|0.0.0.0.0.0.1 10-11|0.0.0.0.0.0 9-10|0.0.0.0.0.0.1.2.0 6-7|0.0.0.0.0.0.1.2 3-4|0.0.0.0.0.0.1.0 1-2|0.0.0.0.0.0.0 0-1|0.0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:00.457
# ::node	0	and	29-30
# ::node	0.0	promise-01	24-25
# ::node	0.0.0	she	19-20
# ::node	0.0.0.0	find-01	20-21
# ::node	0.0.0.0.0	boat	17-18
# ::node	0.0.0.0.0.0	and	10-11
# ::node	0.0.0.0.0.0.0	buy-01	1-2
# ::node	0.0.0.0.0.0.0.0	she	0-1
# ::node	0.0.0.0.0.0.1	force-01	11-12
# ::node	0.0.0.0.0.0.1.0	ticket	3-4
# ::node	0.0.0.0.0.0.1.1	way	13-14
# ::node	0.0.0.0.0.0.1.2	money	6-7
# ::node	0.0.0.0.0.0.1.2.0	journey-01	9-10
# ::node	0.0.0.0.0.0.1.2.0.0	city	35-36
# ::node	0.0.0.0.0.0.1.2.0.0.0	train	36-37
# ::node	0.0.0.0.0.0.1.2.0.0.1	name	35-36
# ::node	0.0.0.0.0.0.1.2.0.0.1.0	"London"	35-36
# ::node	0.0.1	after	27-28
# ::root	0	and
# ::edge	and	op1	force-01	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	and	op1	promise-01	0	0.0	
# ::edge	and	op2	boat	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	buy-01	ARG0	she	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	buy-01	ARG1	and	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	city	name	name	0.0.0.0.0.0.1.2.0.0	0.0.0.0.0.0.1.2.0.0.1	
# ::edge	find-01	ARG0	she	0.0.0.0	0.0.0	
# ::edge	find-01	ARG1	boat	0.0.0.0	0.0.0.0.0	
# ::edge	force-01	ARG0	ticket	0.0.0.0.0.0.1	0.0.0.0.0.0.1.0	
# ::edge	force-01	ARG1	way	0.0.0.0.0.0.1	0.0.0.0.0.0.1.1	
# ::edge	force-01	ARG2	money	0.0.0.0.0.0.1	0.0.0.0.0.0.1.2	
# ::edge	journey-01	ARG1	city	0.0.0.0.0.0.1.2.0	0.0.0.0.0.0.1.2.0.0	
# ::edge	money	beneficiary	journey-01	0.0.0.0.0.0.1.2	0.0.0.0.0.0.1.2.0	
# ::edge	name	op1	"London"	0.0.0.0.0.0.1.2.0.0.1	0.0.0.0.0.0.1.2.0.0.1.0	
# ::edge	promise-01	ARG0	she	0.0	0.0.0	
# ::edge	promise-01	ARG1	after	0.0	0.0.1	
# ::edge	train	mod	city	0.0.0.0.0.0.1.2.0.0.0	0.0.0.0.0.0.1.2.0.0	
(a / and 
      :op1 (p / promise-01 
            :ARG0 (s / she 
                  :ARG0-of (f / find-01 
                        :ARG1 (b / boat 
                              :op-of (a3 / and 
                                    :ARG1-of (b2 / buy-01 
                                          :ARG0 (s2 / she)) 
                                    :op1 (f2 / force-01 
                                          :ARG0 (t2 / ticket) 
                                          :ARG1 (w / way) 
                                          :ARG2 (m / money 
                                                :beneficiary (j / journey-01 
                                                      :ARG1 (c / city 
                                                            :mod-of (t / train) 
                                                            :name (n / name 
                                                                  :op1 "London"))))))))) 
            :ARG1 (a2 / after)))

# ::snt the honour of formally opening the new music suite has been promised to larkmeads former head of music christine whild who spent her entire teaching career in a temporary classroom
# ::tok the honour of formally opening the new music suite has been promised to larkmeads former head of music christine whild who spent her entire teaching career in a temporary classroom
# ::alignments 29-30|0 28-29|0.0 25-26|0.1 24-25|0.1.1 23-24|0.1.1.1 21-22|0.1.0 17-18|0.1.0.0 15-16|0.1.0.1 14-15|0.1.0.1.2 11-12|0.1.0.1.0 7-8|0.1.0.1.1 6-7|0.1.1.0 4-5|0.1.0.1.0.0.0 3-4|0.1.0.1.0.0.0.0 1-2|0.1.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:00.687
# ::node	0	classroom	29-30
# ::node	0.0	temporary	28-29
# ::node	0.1	career	25-26
# ::node	0.1.0	spend-01	21-22
# ::node	0.1.0.0	music	17-18
# ::node	0.1.0.1	head-01	15-16
# ::node	0.1.0.1.0	promise-01	11-12
# ::node	0.1.0.1.0.0	honor-01	1-2
# ::node	0.1.0.1.0.0.0	open-01	4-5
# ::node	0.1.0.1.0.0.0.0	formal	3-4
# ::node	0.1.0.1.1	music	7-8
# ::node	0.1.0.1.2	former	14-15
# ::node	0.1.1	teach-01	24-25
# ::node	0.1.1.0	new	6-7
# ::node	0.1.1.1	entire	23-24
# ::root	0	classroom
# ::edge	career	location	classroom	0.1	0	
# ::edge	career	mod	teach-01	0.1	0.1.1	
# ::edge	classroom	duration	temporary	0	0.0	
# ::edge	head-01	ARG0	spend-01	0.1.0.1	0.1.0	
# ::edge	head-01	location	music	0.1.0.1	0.1.0.1.1	
# ::edge	head-01	time	former	0.1.0.1	0.1.0.1.2	
# ::edge	honor-01	ARG2	open-01	0.1.0.1.0.0	0.1.0.1.0.0.0	
# ::edge	open-01	manner	formal	0.1.0.1.0.0.0	0.1.0.1.0.0.0.0	
# ::edge	promise-01	ARG1	honor-01	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	promise-01	ARG2	head-01	0.1.0.1.0	0.1.0.1	
# ::edge	spend-01	ARG0	music	0.1.0	0.1.0.0	
# ::edge	spend-01	ARG1	career	0.1.0	0.1	
# ::edge	teach-01	ARG1	new	0.1.1	0.1.1.0	
# ::edge	teach-01	ARG2	entire	0.1.1	0.1.1.1	
(c / classroom 
      :duration (t / temporary) 
      :location-of (c2 / career 
            :ARG1-of (s / spend-01 
                  :ARG0 (m / music) 
                  :ARG0-of (h / head-01 
                        :ARG2-of (p / promise-01 
                              :ARG1 (h2 / honor-01 
                                    :ARG2 (o / open-01 
                                          :manner (f2 / formal)))) 
                        :location (m2 / music) 
                        :time (f / former))) 
            :mod (t2 / teach-01 
                  :ARG1 (n / new) 
                  :ARG2 (e / entire))))

# ::snt as sweden has promised
# ::tok as sweden has promised
# ::alignments 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:00.689
# ::node	0	promise-01	3-4
# ::root	0	promise-01
(p / promise-01)

# ::snt safety first the polyotter float suit she pushed the crisis of oneparent families high up the political agenda by promising to set up a new child support agency
# ::tok safety first the polyotter float suit she pushed the crisis of oneparent families high up the political agenda by promising to set up a new child support agency
# ::alignments 27-28|0.1.1.2.0 26-27|0.1.1.2 25-26|0.1.1.2.0.1 24-25|0.1.1.2.0.0 19-20|0 17-18|0.2 16-17|0.2.0 13-14|0.1.2.0 12-13|0.1.2 9-10|0.0 7-8|0.1 6-7|0.1.0 5-6|0.1.1 4-5|0.1.1.0 0-1|0.1.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:01.140
# ::node	0	promise-01	19-20
# ::node	0.0	crisis	9-10
# ::node	0.1	push-01	7-8
# ::node	0.1.0	she	6-7
# ::node	0.1.1	suit-01	5-6
# ::node	0.1.1.0	float-01	4-5
# ::node	0.1.1.1	safe-41	0-1
# ::node	0.1.1.2	support-01	26-27
# ::node	0.1.1.2.0	agency	27-28
# ::node	0.1.1.2.0.0	new	24-25
# ::node	0.1.1.2.0.1	child	25-26
# ::node	0.1.2	family	12-13
# ::node	0.1.2.0	high	13-14
# ::node	0.2	agenda	17-18
# ::node	0.2.0	politics	16-17
# ::root	0	promise-01
# ::edge	agency	mod	new	0.1.1.2.0	0.1.1.2.0.0	
# ::edge	agency	mod	support-01	0.1.1.2.0	0.1.1.2	
# ::edge	agency	poss	child	0.1.1.2.0	0.1.1.2.0.1	
# ::edge	agenda	mod	politics	0.2	0.2.0	
# ::edge	agenda	topic	promise-01	0.2	0	
# ::edge	high	mod	family	0.1.2.0	0.1.2	
# ::edge	promise-01	ARG1	crisis	0	0.0	
# ::edge	push-01	ARG0	she	0.1	0.1.0	
# ::edge	push-01	ARG1	suit-01	0.1	0.1.1	
# ::edge	push-01	ARG2	family	0.1	0.1.2	
# ::edge	push-01	manner	promise-01	0.1	0	
# ::edge	safe-41	ARG1	suit-01	0.1.1.1	0.1.1	
# ::edge	suit-01	ARG1	float-01	0.1.1	0.1.1.0	
# ::edge	support-01	ARG1	suit-01	0.1.1.2	0.1.1	
(p / promise-01 
      :ARG1 (c2 / crisis) 
      :manner-of (p3 / push-01 
            :ARG0 (s2 / she) 
            :ARG1 (s3 / suit-01 
                  :ARG1 (f2 / float-01) 
                  :ARG1-of (s4 / safe-41) 
                  :ARG1-of (s / support-01 
                        :mod-of (a / agency 
                              :mod (n / new) 
                              :poss (c / child)))) 
            :ARG2 (f / family 
                  :mod-of (h / high))) 
      :topic-of (a2 / agenda 
            :mod (p2 / politics)))

# ::snt while the economic reforms of mr deng and his ousted heir apparent mr zhao pushed china into the unknown creating uncomfortable uncertainty and dangerous risks mr chen and his acolytes offer a more reassuring view promising the certainty of planning and the stability of central control
# ::tok while the economic reforms of mr deng and his ousted heir apparent mr zhao pushed china into the unknown creating uncomfortable uncertainty and dangerous risks mr chen and his acolytes offer a more reassuring view promising the certainty of planning and the stability of central control
# ::alignments 45-46|0.0.0.0.2.0 44-45|0.0.0.0.2.0.0 42-43|0.0.0.0.2 40-41|0.0.0.0 39-40|0.0.0.0.1 37-38|0.0.0.0.0.1 35-36|0.0.0.0.0 30-31|0.0.0.0.0.0 27-28|0.0.0.0.0.0.2 24-25|0.2 23-24|0.2.1 22-23|0 21-22|0.1.1+0.1 20-21|0.1.0.0+0.1.0 19-20|0.0 18-19|0.0.0.1+0.0.0 15-16|0.0.0.0.0.0.2.0.0.0.0+0.0.0.0.0.0.2.0.0.0+0.0.0.0.0.0.2.0.0 14-15|0.0.0.0.0.0.2.0 11-12|0.2.0 9-10|0.0.0.0.0.0.1 7-8|0.0.0.0.0.0.0.1 3-4|0.0.0.0.0.0.0 2-3|0.0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:02.617
# ::node	0	and	22-23
# ::node	0.0	create-01	19-20
# ::node	0.0.0	know-01	18-19
# ::node	0.0.0.0	and	40-41
# ::node	0.0.0.0.0	promise-01	35-36
# ::node	0.0.0.0.0.0	offer-01	30-31
# ::node	0.0.0.0.0.0.0	reform-01	3-4
# ::node	0.0.0.0.0.0.0.0	economy	2-3
# ::node	0.0.0.0.0.0.0.1	and	7-8
# ::node	0.0.0.0.0.0.1	oust-01	9-10
# ::node	0.0.0.0.0.0.2	and	27-28
# ::node	0.0.0.0.0.0.2.0	push-01	14-15
# ::node	0.0.0.0.0.0.2.0.0	country	15-16
# ::node	0.0.0.0.0.0.2.0.0.0	name	15-16
# ::node	0.0.0.0.0.0.2.0.0.0.0	"China"	15-16
# ::node	0.0.0.0.0.1	certainty	37-38
# ::node	0.0.0.0.1	plan-01	39-40
# ::node	0.0.0.0.2	stability	42-43
# ::node	0.0.0.0.2.0	control-01	45-46
# ::node	0.0.0.0.2.0.0	central	44-45
# ::node	0.0.0.1	-	18-19
# ::node	0.1	certainty	21-22
# ::node	0.1.0	comfort-01	20-21
# ::node	0.1.0.0	-	20-21
# ::node	0.1.1	-	21-22
# ::node	0.2	risk-01	24-25
# ::node	0.2.0	apparent	11-12
# ::node	0.2.1	dangerous	23-24
# ::root	0	and
# ::edge	and	op1	certainty	0	0.1	
# ::edge	and	op1	plan-01	0.0.0.0	0.0.0.0.1	
# ::edge	and	op1	push-01	0.0.0.0.0.0.2	0.0.0.0.0.0.2.0	
# ::edge	and	op2	offer-01	0.0.0.0.0.0.2	0.0.0.0.0.0	
# ::edge	and	op2	risk-01	0	0.2	
# ::edge	and	op2	stability	0.0.0.0	0.0.0.0.2	
# ::edge	certainty	polarity	-	0.1	0.1.1	
# ::edge	comfort-01	ARG1	certainty	0.1.0	0.1	
# ::edge	comfort-01	polarity	-	0.1.0	0.1.0.0	
# ::edge	control-01	manner	central	0.0.0.0.2.0	0.0.0.0.2.0.0	
# ::edge	country	name	name	0.0.0.0.0.0.2.0.0	0.0.0.0.0.0.2.0.0.0	
# ::edge	create-01	ARG1	and	0.0	0	
# ::edge	know-01	ARG1	and	0.0.0	0.0.0.0	
# ::edge	know-01	manner	create-01	0.0.0	0.0	
# ::edge	know-01	polarity	-	0.0.0	0.0.0.1	
# ::edge	name	op1	"China"	0.0.0.0.0.0.2.0.0.0	0.0.0.0.0.0.2.0.0.0.0	
# ::edge	offer-01	ARG0	reform-01	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	offer-01	ARG1	promise-01	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	oust-01	ARG1	offer-01	0.0.0.0.0.0.1	0.0.0.0.0.0	
# ::edge	promise-01	ARG1	and	0.0.0.0.0	0.0.0.0	
# ::edge	promise-01	ARG2	certainty	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	push-01	ARG1	country	0.0.0.0.0.0.2.0	0.0.0.0.0.0.2.0.0	
# ::edge	reform-01	ARG1	economy	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	reform-01	example	and	0.0.0.0.0.0.0	0.0.0.0.0.0.0.1	
# ::edge	risk-01	ARG0	apparent	0.2	0.2.0	
# ::edge	risk-01	mod	dangerous	0.2	0.2.1	
# ::edge	stability	mod	control-01	0.0.0.0.2	0.0.0.0.2.0	
(a3 / and 
      :ARG1-of (c6 / create-01 
            :manner-of (k / know-01 
                  :ARG1 (a / and 
                        :ARG1-of (p2 / promise-01 
                              :ARG1-of (o / offer-01 
                                    :ARG0 (r2 / reform-01 
                                          :ARG1 (e / economy) 
                                          :example (a5 / and)) 
                                    :ARG1-of (o2 / oust-01) 
                                    :op-of (a2 / and 
                                          :op1 (p3 / push-01 
                                                :ARG1 (c7 / country 
                                                      :name (n / name 
                                                            :op1 "China"))))) 
                              :ARG2 (c3 / certainty)) 
                        :op1 (p / plan-01) 
                        :op2 (s / stability 
                              :mod (c / control-01 
                                    :manner (c2 / central)))) 
                  :polarity -)) 
      :op1 (c4 / certainty 
            :ARG1-of (c5 / comfort-01 
                  :polarity -) 
            :polarity -) 
      :op2 (r / risk-01 
            :ARG0 (a4 / apparent) 
            :mod (d / dangerous)))

# ::snt 9621 promise-v 801076 Promise 537527
# ::tok 9621 promise - v 801076 Promise 537527
# ::alignments 6-7|0.0.2+0.0.1+0.0.0+0.0 4-5|0.1.0.2+0.1.0.1+0.1.0.0+0.1.0 1-2|0 0-1|0.1.1+0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:02.650
# ::node	0	promise-01	1-2
# ::node	0.0	date-entity	6-7
# ::node	0.0.0	27	6-7
# ::node	0.0.1	75	6-7
# ::node	0.0.2	53	6-7
# ::node	0.1	date-entity	0-1
# ::node	0.1.0	date-entity	4-5
# ::node	0.1.0.0	76	4-5
# ::node	0.1.0.1	10	4-5
# ::node	0.1.0.2	80	4-5
# ::node	0.1.1	9621	0-1
# ::root	0	promise-01
# ::edge	date-entity	day	27	0.0	0.0.0	
# ::edge	date-entity	day	76	0.1.0	0.1.0.0	
# ::edge	date-entity	month	10	0.1.0	0.1.0.1	
# ::edge	date-entity	month	75	0.0	0.0.1	
# ::edge	date-entity	name	date-entity	0.1	0.1.0	
# ::edge	date-entity	year	53	0.0	0.0.2	
# ::edge	date-entity	year	80	0.1.0	0.1.0.2	
# ::edge	date-entity	year	9621	0.1	0.1.1	
# ::edge	promise-01	ARG1	date-entity	0	0.0	
# ::edge	promise-01	time	date-entity	0	0.1	
(p / promise-01 
      :ARG1 (d / date-entity 
            :day 27 
            :month 75 
            :year 53) 
      :time (d3 / date-entity 
            :name (d2 / date-entity 
                  :day 76 
                  :month 10 
                  :year 80) 
            :year 9621))

# ::snt  "`And I hate to see you unhappy, and you wont feel better if you stay in and frowst by the fire all day.  Promise me youll do something tomorrow?"
# ::tok " ' And I hate to see you unhappy , and you wont feel better if you stay in and frowst by the fire all day . Promise me youll do something tomorrow ? "
# ::alignments 32-33|0.1.2 31-32|0.1.2.0 25-26|0.0.2 24-25|0.0.2.0 19-20|0 17-18|0.1 16-17|0.1.1 13-14|0.0 11-12|0.0.0 10-11|0.0.1 8-9|0.0.1.0.2.0+0.0.1.0.2 7-8|0.1.0 6-7|0.0.1.0 4-5|0.0.1.0.0.0 3-4|0.0.1.0.0 2-3|0.0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:03.249
# ::node	0	and	19-20
# ::node	0.0	feel-01	13-14
# ::node	0.0.0	you	11-12
# ::node	0.0.1	and	10-11
# ::node	0.0.1.0	see-01	6-7
# ::node	0.0.1.0.0	i	3-4
# ::node	0.0.1.0.0.0	hate-01	4-5
# ::node	0.0.1.0.1	and	2-3
# ::node	0.0.1.0.2	happy	8-9
# ::node	0.0.1.0.2.0	-	8-9
# ::node	0.0.2	day	25-26
# ::node	0.0.2.0	all	24-25
# ::node	0.1	stay-01	17-18
# ::node	0.1.0	you	7-8
# ::node	0.1.1	you	16-17
# ::node	0.1.2	tomorrow	32-33
# ::node	0.1.2.0	something	31-32
# ::root	0	and
# ::edge	and	op1	feel-01	0	0.0	
# ::edge	and	op1	see-01	0.0.1	0.0.1.0	
# ::edge	and	op2	stay-01	0	0.1	
# ::edge	day	mod	all	0.0.2	0.0.2.0	
# ::edge	feel-01	ARG0	you	0.0	0.0.0	
# ::edge	feel-01	ARG1	and	0.0	0.0.1	
# ::edge	feel-01	ARG2	day	0.0	0.0.2	
# ::edge	happy	polarity	-	0.0.1.0.2	0.0.1.0.2.0	
# ::edge	hate-01	ARG0	i	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	see-01	ARG0	i	0.0.1.0	0.0.1.0.0	
# ::edge	see-01	ARG1	and	0.0.1.0	0.0.1.0.1	
# ::edge	see-01	ARG2	happy	0.0.1.0	0.0.1.0.2	
# ::edge	stay-01	ARG0	you	0.1	0.1.0	
# ::edge	stay-01	ARG1	you	0.1	0.1.1	
# ::edge	stay-01	ARG2	tomorrow	0.1	0.1.2	
# ::edge	tomorrow	mod	something	0.1.2	0.1.2.0	
(a2 / and 
      :op1 (f / feel-01 
            :ARG0 (y2 / you) 
            :ARG1 (a3 / and 
                  :op1 (s3 / see-01 
                        :ARG0 (i / i 
                              :ARG0-of (h2 / hate-01)) 
                        :ARG1 (a4 / and) 
                        :ARG2 (h / happy 
                              :polarity -))) 
            :ARG2 (d / day 
                  :mod (a / all))) 
      :op2 (s2 / stay-01 
            :ARG0 (y3 / you) 
            :ARG1 (y / you) 
            :ARG2 (t / tomorrow 
                  :mod (s / something))))

# ::snt EMPTY_SENTENCE
# ::tok EMPTY_SENTENCE
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:03.250
# ::node	0	amr-empty	0-1
# ::root	0	amr-empty
(a / amr-empty)

# ::snt even that amount will worry supporters and shareholders as well as manager terry venables who was promised that the nonfootballing side of spurs business would enable him to fund the creation of a championship winning team
# ::tok even that amount will worry supporters and shareholders as well as manager terry venables who was promised that the nonfootballing side of spurs business would enable him to fund the creation of a championship winning team
# ::alignments 35-36|0.0 34-35|0.0.0 30-31|0 28-29|0.1 25-26|0.1.1 23-24|0.1.1.0 20-21|0.1.0 16-17|0.1.0.0 12-14|0.1.0.0.0.1.0+0.1.0.0.0.1.1+0.1.0.0.0.1+0.1.0.0.0 11-12|0.1.0.0.0.0 9-10|0.1.0.0.0.2.0.1.0.0 6-7|0.1.0.0.0.2 5-6|0.1.0.0.0.2.0.1.0+0.1.0.0.0.2.0.1 4-5|0.1.0.0.0.2.0 2-3|0.1.0.0.0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:03.597
# ::node	0	create-01	30-31
# ::node	0.0	team	35-36
# ::node	0.0.0	win-01	34-35
# ::node	0.1	fund-01	28-29
# ::node	0.1.0	side	20-21
# ::node	0.1.0.0	promise-01	16-17
# ::node	0.1.0.0.0	person	12-14
# ::node	0.1.0.0.0.0	manage-01	11-12
# ::node	0.1.0.0.0.1	name	12-14
# ::node	0.1.0.0.0.1.0	"venables"	12-14
# ::node	0.1.0.0.0.1.1	"terry"	12-14
# ::node	0.1.0.0.0.2	and	6-7
# ::node	0.1.0.0.0.2.0	worry-02	4-5
# ::node	0.1.0.0.0.2.0.0	amount	2-3
# ::node	0.1.0.0.0.2.0.1	person	5-6
# ::node	0.1.0.0.0.2.0.1.0	support-01	5-6
# ::node	0.1.0.0.0.2.0.1.0.0	well	9-10
# ::node	0.1.1	enable-01	25-26
# ::node	0.1.1.0	business	23-24
# ::root	0	create-01
# ::edge	and	op1	person	0.1.0.0.0.2	0.1.0.0.0	
# ::edge	create-01	ARG1	team	0	0.0	
# ::edge	enable-01	ARG0	business	0.1.1	0.1.1.0	
# ::edge	enable-01	ARG1	fund-01	0.1.1	0.1	
# ::edge	fund-01	ARG0	side	0.1	0.1.0	
# ::edge	fund-01	ARG1	create-01	0.1	0	
# ::edge	manage-01	ARG0	person	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	name	op1	"venables"	0.1.0.0.0.1	0.1.0.0.0.1.0	
# ::edge	name	op2	"terry"	0.1.0.0.0.1	0.1.0.0.0.1.1	
# ::edge	person	name	name	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	promise-01	ARG0	person	0.1.0.0	0.1.0.0.0	
# ::edge	promise-01	ARG1	side	0.1.0.0	0.1.0	
# ::edge	support-01	ARG0	person	0.1.0.0.0.2.0.1.0	0.1.0.0.0.2.0.1	
# ::edge	support-01	ARG1	well	0.1.0.0.0.2.0.1.0	0.1.0.0.0.2.0.1.0.0	
# ::edge	win-01	ARG1	team	0.0.0	0.0	
# ::edge	worry-02	ARG0	amount	0.1.0.0.0.2.0	0.1.0.0.0.2.0.0	
# ::edge	worry-02	ARG1	and	0.1.0.0.0.2.0	0.1.0.0.0.2	
# ::edge	worry-02	ARG2	person	0.1.0.0.0.2.0	0.1.0.0.0.2.0.1	
(c / create-01 
      :ARG1 (t / team 
            :ARG1-of (w / win-01)) 
      :ARG1-of (f / fund-01 
            :ARG0 (s / side 
                  :ARG1-of (p / promise-01 
                        :ARG0 (p2 / person 
                              :ARG0-of (m / manage-01) 
                              :name (n / name 
                                    :op1 "venables" 
                                    :op2 "terry") 
                              :op-of (a / and 
                                    :ARG1-of (w3 / worry-02 
                                          :ARG0 (a2 / amount) 
                                          :ARG2 (p3 / person 
                                                :ARG0-of (s2 / support-01 
                                                      :ARG1 (w2 / well)))))))) 
            :ARG1-of (e / enable-01 
                  :ARG0 (b / business))))

# ::snt the sandinistas are promising an absolutely transparent election dash
# ::tok the sandinistas are promising an absolutely transparent election dash
# ::alignments 7-8|0.0 6-7|0.0.0 5-6|0.0.0.0 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:03.607
# ::node	0	promise-01	3-4
# ::node	0.0	elect-01	7-8
# ::node	0.0.0	transparent	6-7
# ::node	0.0.0.0	absolute	5-6
# ::root	0	promise-01
# ::edge	elect-01	mod	transparent	0.0	0.0.0	
# ::edge	promise-01	ARG1	elect-01	0	0.0	
# ::edge	transparent	degree	absolute	0.0.0	0.0.0.0	
(p / promise-01 
      :ARG1 (e / elect-01 
            :mod (t / transparent 
                  :degree (a / absolute))))

# ::snt in fact lewis thinks i should tip him but with the exception of thethingaboutitis whenever i have tipped his horses in the past year they have lost and i do not want to spoil what promises to be his best season since he took up training
# ::tok in fact lewis thinks i should tip him but with the exception of thethingaboutitis whenever i have tipped his horses in the past year they have lost and i do not want to spoil what promises to be his best season since he took up training
# ::alignments 45-46|0.0.3.1.1.0.0.0 42-43|0.0.3.1.1.0.0 41-42|0.0.3.1.1.0.0.0.0 40-41|0.0.3.1.1.0.1 35-36|0.0.3.1.1.0 33-34|0.0.3.1.1 31-32|0.0.3.1 28-29|0.0.3.1.0 27-28|0.0.3 26-27|0.0.3.0 24-25|0.0.3.0.0 23-24|0.0.3.0.1 22-23|0.0.3.0.1.0 19-20|0.0.2.0.0 15-16|0.0.2.0 14-15|0.0.1.1 11-12|0.0.3.1.1.1 8-9|0 6-7|0.0.1 5-6|0.0 4-5|0.0.1.0 3-4|0.0.2 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:04.774
# ::node	0	contrast-01	8-9
# ::node	0.0	recommend-01	5-6
# ::node	0.0.0	fact	1-2
# ::node	0.0.1	tip	6-7
# ::node	0.0.1.0	i	4-5
# ::node	0.0.1.1	whenever	14-15
# ::node	0.0.2	think-01	3-4
# ::node	0.0.2.0	i	15-16
# ::node	0.0.2.0.0	horse	19-20
# ::node	0.0.3	and	27-28
# ::node	0.0.3.0	lose-02	26-27
# ::node	0.0.3.0.0	they	24-25
# ::node	0.0.3.0.1	year	23-24
# ::node	0.0.3.0.1.0	past	22-23
# ::node	0.0.3.1	want-01	31-32
# ::node	0.0.3.1.0	i	28-29
# ::node	0.0.3.1.1	spoil-01	33-34
# ::node	0.0.3.1.1.0	promise-01	35-36
# ::node	0.0.3.1.1.0.0	he	42-43
# ::node	0.0.3.1.1.0.0.0	train-01	45-46
# ::node	0.0.3.1.1.0.0.0.0	since	41-42
# ::node	0.0.3.1.1.0.1	season	40-41
# ::node	0.0.3.1.1.1	except-00	11-12
# ::root	0	contrast-01
# ::edge	and	op1	recommend-01	0.0.3	0.0	
# ::edge	and	op2	lose-02	0.0.3	0.0.3.0	
# ::edge	and	op3	want-01	0.0.3	0.0.3.1	
# ::edge	contrast-01	ARG1	recommend-01	0	0.0	
# ::edge	except-00	ARG1	spoil-01	0.0.3.1.1.1	0.0.3.1.1	
# ::edge	horse	poss	i	0.0.2.0.0	0.0.2.0	
# ::edge	lose-02	ARG0	they	0.0.3.0	0.0.3.0.0	
# ::edge	lose-02	ARG1	year	0.0.3.0	0.0.3.0.1	
# ::edge	promise-01	ARG0	he	0.0.3.1.1.0	0.0.3.1.1.0.0	
# ::edge	promise-01	ARG1	season	0.0.3.1.1.0	0.0.3.1.1.0.1	
# ::edge	recommend-01	ARG0	fact	0.0	0.0.0	
# ::edge	recommend-01	ARG1	tip	0.0	0.0.1	
# ::edge	since	op1	train-01	0.0.3.1.1.0.0.0.0	0.0.3.1.1.0.0.0	
# ::edge	spoil-01	ARG1	promise-01	0.0.3.1.1	0.0.3.1.1.0	
# ::edge	think-01	ARG0	i	0.0.2	0.0.2.0	
# ::edge	think-01	ARG1	recommend-01	0.0.2	0.0	
# ::edge	tip	ARG0	i	0.0.1	0.0.1.0	
# ::edge	tip	frequency	whenever	0.0.1	0.0.1.1	
# ::edge	train-01	ARG0	he	0.0.3.1.1.0.0.0	0.0.3.1.1.0.0	
# ::edge	want-01	ARG0	i	0.0.3.1	0.0.3.1.0	
# ::edge	want-01	ARG1	spoil-01	0.0.3.1	0.0.3.1.1	
# ::edge	year	mod	past	0.0.3.0.1	0.0.3.0.1.0	
(c / contrast-01 
      :ARG1 (r / recommend-01 
            :ARG0 (f / fact) 
            :ARG1 (t3 / tip 
                  :ARG0 (i3 / i) 
                  :frequency (w2 / whenever)) 
            :ARG1-of (t4 / think-01 
                  :ARG0 (i2 / i 
                        :poss-of (h2 / horse))) 
            :op-of (a / and 
                  :op1 (l / lose-02 
                        :ARG0 (t2 / they) 
                        :ARG1 (y / year 
                              :mod (p2 / past))) 
                  :op2 (w / want-01 
                        :ARG0 (i / i) 
                        :ARG1 (s3 / spoil-01 
                              :ARG1 (p / promise-01 
                                    :ARG0 (h / he 
                                          :ARG0-of (t / train-01 
                                                :op-of (s / since))) 
                                    :ARG1 (s2 / season)) 
                              :ARG1-of (e / except-00))))))

# ::snt the publication follows a government promise to strengthen safety guidelines for school trips after the deaths of four schoolboys during a visit to austria last year
# ::tok the publication follows a government promise to strengthen safety guidelines for school trips after the deaths of four schoolboys during a visit to austria last year
# ::alignments 25-26|0.0.0 24-25|0.0 21-22|0.2.0.0 17-18|0.3 13-14|0.2.1 11-12|0.2.0.0.0 9-10|0.2.0 8-9|0.2.0.1 7-8|0.2 5-6|0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:04.931
# ::node	0	promise-01	5-6
# ::node	0.0	last	24-25
# ::node	0.0.0	year	25-26
# ::node	0.1	publication	1-2
# ::node	0.2	strengthen-01	7-8
# ::node	0.2.0	guideline	9-10
# ::node	0.2.0.0	visit-01	21-22
# ::node	0.2.0.0.0	school	11-12
# ::node	0.2.0.1	safe-41	8-9
# ::node	0.2.1	after	13-14
# ::node	0.3	4	17-18
# ::root	0	promise-01
# ::edge	guideline	mod	safe-41	0.2.0	0.2.0.1	
# ::edge	promise-01	ARG0	last	0	0.0	
# ::edge	promise-01	ARG1	publication	0	0.1	
# ::edge	promise-01	ARG2	strengthen-01	0	0.2	
# ::edge	promise-01	quant	4	0	0.3	
# ::edge	strengthen-01	ARG1	guideline	0.2	0.2.0	
# ::edge	strengthen-01	time	after	0.2	0.2.1	
# ::edge	visit-01	ARG0	guideline	0.2.0.0	0.2.0	
# ::edge	visit-01	ARG1	school	0.2.0.0	0.2.0.0.0	
# ::edge	year	mod	last	0.0.0	0.0	
(p / promise-01 
      :ARG0 (l / last 
            :mod-of (y / year)) 
      :ARG1 (p2 / publication) 
      :ARG2 (s3 / strengthen-01 
            :ARG1 (g / guideline 
                  :ARG0-of (v / visit-01 
                        :ARG1 (s / school)) 
                  :mod (s2 / safe-41)) 
            :time (a / after)) 
      :quant 4)

# ::snt one observer predicts a bloodbath as the current mergers slash staff to make the savings necessary to produce the economies of scale which have been promised
# ::tok one observer predicts a bloodbath as the current mergers slash staff to make the savings necessary to produce the economies of scale which have been promised
# ::alignments 25-26|0.0.0 21-22|0.0.0.0 19-20|0.0.0.0.0.0 17-18|0.0.0.0.0 10-11|0.1.1.0+0.1.1 9-10|0.1 8-9|0.1.0 7-8|0.1.0.0 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:05.260
# ::node	0	predict-01	2-3
# ::node	0.0	observe-01	1-2
# ::node	0.0.0	promise-01	25-26
# ::node	0.0.0.0	scale	21-22
# ::node	0.0.0.0.0	produce-01	17-18
# ::node	0.0.0.0.0.0	economy	19-20
# ::node	0.1	slash-01	9-10
# ::node	0.1.0	merge-01	8-9
# ::node	0.1.0.0	current	7-8
# ::node	0.1.1	person	10-11
# ::node	0.1.1.0	staff-01	10-11
# ::root	0	predict-01
# ::edge	merge-01	time	current	0.1.0	0.1.0.0	
# ::edge	observe-01	ARG1	promise-01	0.0	0.0.0	
# ::edge	predict-01	ARG1	observe-01	0	0.0	
# ::edge	predict-01	time	slash-01	0	0.1	
# ::edge	produce-01	ARG1	economy	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	produce-01	duration	scale	0.0.0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	scale	0.0.0	0.0.0.0	
# ::edge	slash-01	ARG0	merge-01	0.1	0.1.0	
# ::edge	slash-01	ARG1	person	0.1	0.1.1	
# ::edge	staff-01	ARG2	person	0.1.1.0	0.1.1	
(p4 / predict-01 
      :ARG1 (o / observe-01 
            :ARG1 (p / promise-01 
                  :ARG1 (s / scale 
                        :duration-of (p2 / produce-01 
                              :ARG1 (e / economy))))) 
      :time (s3 / slash-01 
            :ARG0 (m / merge-01 
                  :time (c / current)) 
            :ARG1 (p3 / person 
                  :ARG2-of (s2 / staff-01))))

# ::snt small compensation that virgin vision are promising to release a 1984 video of hytners staging in the spring while david athertons premiere recording with the london sinfonietta for decca has just been rereleased on cd together with the four symphonies and first three string quartets
# ::tok small compensation that virgin vision are promising to release a 1984 video of hytners staging in the spring while david athertons premiere recording with the london sinfonietta for decca has just been rereleased on cd together with the four symphonies and first three string quartets
# ::alignments 43-44|0.0.0 42-43|0.0.0.0 40-41|0 38-39|0.0.3.1 35-36|0.0.3.0.1 30-31|0.0.3.0.0.0.0.0 25-26|0.0.1.0.0+0.0.1.0+0.0.1 22-23|0.0 17-18|0.0.3 14-15|0.0.3.0 11-12|0.0.3.0.0 10-11|0.0.3.0.0.0.0.1.0.0+0.0.3.0.0.0.0.1.0 8-9|0.0.3.0.0.0 6-7|0.0.3.0.0.0.0 3-4|0.0.2 1-2|0.0.3.0.0.0.0.1 0-1|0.0.3.0.0.0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:05.731
# ::node	0	and	40-41
# ::node	0.0	record-01	22-23
# ::node	0.0.0	string	43-44
# ::node	0.0.0.0	3	42-43
# ::node	0.0.1	city	25-26
# ::node	0.0.1.0	name	25-26
# ::node	0.0.1.0.0	"London"	25-26
# ::node	0.0.2	virgin	3-4
# ::node	0.0.3	spring	17-18
# ::node	0.0.3.0	stage-01	14-15
# ::node	0.0.3.0.0	video	11-12
# ::node	0.0.3.0.0.0	release-01	8-9
# ::node	0.0.3.0.0.0.0	promise-01	6-7
# ::node	0.0.3.0.0.0.0.0	just	30-31
# ::node	0.0.3.0.0.0.0.1	compensate-01	1-2
# ::node	0.0.3.0.0.0.0.1.0	date-entity	10-11
# ::node	0.0.3.0.0.0.0.1.0.0	1984	10-11
# ::node	0.0.3.0.0.0.0.1.1	small	0-1
# ::node	0.0.3.0.1	together	35-36
# ::node	0.0.3.1	4	38-39
# ::root	0	and
(a / and 
      :ARG1-of (r / record-01 
            :ARG0 (s / string 
                  :quant 3) 
            :location (c / city 
                  :name (n / name 
                        :op1 "London")) 
            :op-of (v2 / virgin) 
            :prep-against-of (s2 / spring 
                  :location-of (s3 / stage-01 
                        :ARG0 (v / video 
                              :ARG1-of (r2 / release-01 
                                    :ARG2-of (p / promise-01 
                                          :ARG1 (j / just) 
                                          :ARG1-of (c2 / compensate-01 
                                                :ARG0 (d / date-entity 
                                                      :year 1984) 
                                                :mod (s4 / small))))) 
                        :op-of (t / together)) 
                  :poss 4)))

# ::snt but it could be better and it was promising to be so and for every member in the household god bless them for there were never a better master nor mistress
# ::tok but it could be better and it was promising to be so and for every member in the household god bless them for there were never a better master nor mistress
# ::alignments 30-31|0.3.1.1.0.0.0 28-29|0.0 19-20|0.3.1.1.0 18-19|0.3.1.1 15-16|0.3.1.1.0.0.1+0.3.1.1.0.0 14-15|0.1 12-13|0.3.1 11-12|0.3.1.0 8-9|0.3 6-7|0.3.0 5-6|0.3.2 2-3|0.2 1-2|0.2.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:05.958
# ::node	0	contrast-01	0-1
# ::node	0.0	master	28-29
# ::node	0.1	every	14-15
# ::node	0.2	possible	2-3
# ::node	0.2.0	it	1-2
# ::node	0.3	promise-01	8-9
# ::node	0.3.0	it	6-7
# ::node	0.3.1	and	12-13
# ::node	0.3.1.0	so	11-12
# ::node	0.3.1.1	household	18-19
# ::node	0.3.1.1.0	god	19-20
# ::node	0.3.1.1.0.0	have-org-role-91	15-16
# ::node	0.3.1.1.0.0.0	mistress	30-31
# ::node	0.3.1.1.0.0.1	member	15-16
# ::node	0.3.2	and	5-6
# ::root	0	contrast-01
# ::edge	and	op1	promise-01	0.3.2	0.3	
# ::edge	and	op1	so	0.3.1	0.3.1.0	
# ::edge	and	op2	household	0.3.1	0.3.1.1	
# ::edge	contrast-01	ARG0	master	0	0.0	
# ::edge	contrast-01	ARG1	every	0	0.1	
# ::edge	contrast-01	ARG2	possible	0	0.2	
# ::edge	god	mod	household	0.3.1.1.0	0.3.1.1	
# ::edge	have-org-role-91	ARG0	mistress	0.3.1.1.0.0	0.3.1.1.0.0.0	
# ::edge	have-org-role-91	ARG1	god	0.3.1.1.0.0	0.3.1.1.0	
# ::edge	have-org-role-91	ARG2	member	0.3.1.1.0.0	0.3.1.1.0.0.1	
# ::edge	possible	domain	it	0.2	0.2.0	
# ::edge	promise-01	ARG0	it	0.3	0.3.0	
# ::edge	promise-01	ARG1	and	0.3	0.3.1	
# ::edge	promise-01	ARG2	contrast-01	0.3	0	
(c / contrast-01 
      :ARG0 (m2 / master) 
      :ARG1 (e / every) 
      :ARG2 (p2 / possible 
            :domain (i2 / it)) 
      :ARG2-of (p / promise-01 
            :ARG0 (i / it) 
            :ARG1 (a / and 
                  :op1 (s / so) 
                  :op2 (h / household 
                        :mod-of (g / god 
                              :ARG1-of (h2 / have-org-role-91 
                                    :ARG0 (m / mistress) 
                                    :ARG2 (m3 / member))))) 
            :op-of (a2 / and)))

# ::snt he also promised that the police would investigate apparent contraventions of the law at the rally summoned in soweto on sunday to welcome back walter sisulu and the other veteran leaders
# ::tok he also promised that the police would investigate apparent contraventions of the law at the rally summoned in soweto on sunday to welcome back walter sisulu and the other veteran leaders
# ::alignments 30-31|0.0.1.0.0+0.0.1.0 29-30|0.0.1.0.2 28-29|0.0.1.0.1 26-27|0.0.1 24-26|0.0.0.0+0.0.0.1+0.0.0+0.0 23-24|0.1 22-23|0 20-21|0.4.0.0.0.0 16-17|0.4 15-16|0.4.0 12-13|0.2 8-9|0.3 7-8|0.4.0.0.0 5-6|0.4.0.0 2-3|0.4.0.0.0.1 1-2|0.4.0.0.0.1.1 0-1|0.4.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:06.331
# ::node	0	welcome-01	22-23
# ::node	0.0	person	24-26
# ::node	0.0.0	name	24-26
# ::node	0.0.0.0	"sisulu"	24-26
# ::node	0.0.0.1	"walter"	24-26
# ::node	0.0.1	and	26-27
# ::node	0.0.1.0	person	30-31
# ::node	0.0.1.0.0	lead-02	30-31
# ::node	0.0.1.0.1	other	28-29
# ::node	0.0.1.0.2	veteran	29-30
# ::node	0.1	back	23-24
# ::node	0.2	law	12-13
# ::node	0.3	apparent	8-9
# ::node	0.4	summon-01	16-17
# ::node	0.4.0	rally-01	15-16
# ::node	0.4.0.0	police	5-6
# ::node	0.4.0.0.0	investigate-01	7-8
# ::node	0.4.0.0.0.0	sunday	20-21
# ::node	0.4.0.0.0.1	promise-01	2-3
# ::node	0.4.0.0.0.1.0	he	0-1
# ::node	0.4.0.0.0.1.1	also	1-2
# ::root	0	welcome-01
# ::edge	and	op1	person	0.0.1	0.0	
# ::edge	and	op2	person	0.0.1	0.0.1.0	
# ::edge	apparent	op1	welcome-01	0.3	0	
# ::edge	investigate-01	ARG0	police	0.4.0.0.0	0.4.0.0	
# ::edge	investigate-01	ARG1	sunday	0.4.0.0.0	0.4.0.0.0.0	
# ::edge	lead-02	ARG0	person	0.0.1.0.0	0.0.1.0	
# ::edge	name	op1	"sisulu"	0.0.0	0.0.0.0	
# ::edge	name	op2	"walter"	0.0.0	0.0.0.1	
# ::edge	person	mod	other	0.0.1.0	0.0.1.0.1	
# ::edge	person	mod	veteran	0.0.1.0	0.0.1.0.2	
# ::edge	person	name	name	0.0	0.0.0	
# ::edge	promise-01	ARG0	he	0.4.0.0.0.1	0.4.0.0.0.1.0	
# ::edge	promise-01	ARG1	investigate-01	0.4.0.0.0.1	0.4.0.0.0	
# ::edge	promise-01	mod	also	0.4.0.0.0.1	0.4.0.0.0.1.1	
# ::edge	rally-01	ARG0	police	0.4.0	0.4.0.0	
# ::edge	summon-01	ARG1	rally-01	0.4	0.4.0	
# ::edge	summon-01	purpose	welcome-01	0.4	0	
# ::edge	welcome-01	ARG1	person	0	0.0	
# ::edge	welcome-01	direction	back	0	0.1	
# ::edge	welcome-01	location	law	0	0.2	
(w / welcome-01 
      :ARG1 (p2 / person 
            :name (n / name 
                  :op1 "sisulu" 
                  :op2 "walter") 
            :op-of (a / and 
                  :op1 (p / person 
                        :ARG0-of (l / lead-02) 
                        :mod (o / other) 
                        :mod (v / veteran)))) 
      :direction (b / back) 
      :location (l2 / law) 
      :op-of (a2 / apparent) 
      :purpose-of (s2 / summon-01 
            :ARG1 (r / rally-01 
                  :ARG0 (p3 / police 
                        :ARG0-of (i / investigate-01 
                              :ARG1 (s / sunday) 
                              :ARG1-of (p4 / promise-01 
                                    :ARG0 (h / he) 
                                    :mod (a3 / also)))))))

# ::snt the european commission promised to produce proposals for a legislative programme of social measures
# ::tok the european commission promised to produce proposals for a legislative programme of social measures
# ::alignments 13-14|0.1.1.1 12-13|0.1.1.1.0 10-11|0.1.1 9-10|0.1.1.0 6-7|0.1.0.0+0.1.0 5-6|0.1 3-4|0 2-3|0.0 1-2|0.0.0.0.0+0.0.0.0+0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:06.374
# ::node	0	promise-01	3-4
# ::node	0.0	commission	2-3
# ::node	0.0.0	continent	1-2
# ::node	0.0.0.0	name	1-2
# ::node	0.0.0.0.0	"Europe"	1-2
# ::node	0.1	produce-01	5-6
# ::node	0.1.0	thing	6-7
# ::node	0.1.0.0	propose-01	6-7
# ::node	0.1.1	program	10-11
# ::node	0.1.1.0	legislate-01	9-10
# ::node	0.1.1.1	measure	13-14
# ::node	0.1.1.1.0	society	12-13
# ::root	0	promise-01
# ::edge	commission	mod	continent	0.0	0.0.0	
# ::edge	continent	name	name	0.0.0	0.0.0.0	
# ::edge	legislate-01	ARG0	program	0.1.1.0	0.1.1	
# ::edge	measure	consist	program	0.1.1.1	0.1.1	
# ::edge	measure	mod	society	0.1.1.1	0.1.1.1.0	
# ::edge	name	op1	"Europe"	0.0.0.0	0.0.0.0.0	
# ::edge	produce-01	ARG1	thing	0.1	0.1.0	
# ::edge	produce-01	ARG3	program	0.1	0.1.1	
# ::edge	promise-01	ARG0	commission	0	0.0	
# ::edge	promise-01	ARG1	produce-01	0	0.1	
# ::edge	propose-01	ARG1	thing	0.1.0.0	0.1.0	
(p4 / promise-01 
      :ARG0 (c / commission 
            :mod (c2 / continent 
                  :name (n / name 
                        :op1 "Europe"))) 
      :ARG1 (p3 / produce-01 
            :ARG1 (t / thing 
                  :ARG1-of (p2 / propose-01)) 
            :ARG3 (p / program 
                  :ARG0-of (l / legislate-01) 
                  :consist-of (m / measure 
                        :mod (s / society)))))

# ::snt   this years freshers have just finished being subjected to the rituals of formal college dinners matriculation wearing dinner party attire and clutching a flat hat while listening to an academic speak latin in an old building and bodleian library registration wearing a gown and looking a librarian solemnly in the face while promising not to damage his library
# ::tok this years freshers have just finished being subjected to the rituals of formal college dinners matriculation wearing dinner party attire and clutching a flat hat while listening to an academic speak latin in an old building and bodleian library registration wearing a gown and looking a librarian solemnly in the face while promising not to damage his library
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:06.374
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt fox had promised the job to the players union secretary in august as a plank in his own election platform only to be overruled by the committee who insisted that taylor should be interviewed along with the three other shortlisted candidates
# ::tok fox had promised the job to the players union secretary in august as a plank in his own election platform only to be overruled by the committee who insisted that taylor should be interviewed along with the three other shortlisted candidates
# ::alignments 40-41|0.0.1.2 38-39|0.0.1.2.0 37-38|0.0.1.2.1 34-35|0.0.1.1 33-34|0.0.1 31-32|0.0.1.0 28-29|0.0.1.0.0 26-27|0.0.1.0.0.0 20-21|0.2.2.0.0 19-20|0.2.2.0 18-19|0.2.2 11-12|0.2.1+0.2 9-10|0.2.0 8-9|0.2.0.0 7-8|0.0.0+0.0 4-5|0.1 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:06.615
# ::node	0	promise-01	2-3
# ::node	0.0	person	7-8
# ::node	0.0.0	play-01	7-8
# ::node	0.0.1	interview-01	33-34
# ::node	0.0.1.0	recommend-01	31-32
# ::node	0.0.1.0.0	insist-01	28-29
# ::node	0.0.1.0.0.0	committee	26-27
# ::node	0.0.1.1	along	34-35
# ::node	0.0.1.2	candidate	40-41
# ::node	0.0.1.2.0	other	38-39
# ::node	0.0.1.2.1	3	37-38
# ::node	0.1	job	4-5
# ::node	0.2	date-entity	11-12
# ::node	0.2.0	secretary	9-10
# ::node	0.2.0.0	union	8-9
# ::node	0.2.1	8	11-12
# ::node	0.2.2	elect-01	18-19
# ::node	0.2.2.0	platform	19-20
# ::node	0.2.2.0.0	only	20-21
# ::root	0	promise-01
# ::edge	candidate	mod	other	0.0.1.2	0.0.1.2.0	
# ::edge	candidate	quant	3	0.0.1.2	0.0.1.2.1	
# ::edge	date-entity	month	8	0.2	0.2.1	
# ::edge	elect-01	time	date-entity	0.2.2	0.2	
# ::edge	insist-01	ARG0	committee	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	insist-01	ARG1	recommend-01	0.0.1.0.0	0.0.1.0	
# ::edge	interview-01	ARG1	person	0.0.1	0.0	
# ::edge	interview-01	ARG2	along	0.0.1	0.0.1.1	
# ::edge	interview-01	medium	candidate	0.0.1	0.0.1.2	
# ::edge	platform	mod	only	0.2.2.0	0.2.2.0.0	
# ::edge	platform	topic	elect-01	0.2.2.0	0.2.2	
# ::edge	play-01	ARG0	person	0.0.0	0.0	
# ::edge	promise-01	ARG1	person	0	0.0	
# ::edge	promise-01	ARG2	job	0	0.1	
# ::edge	promise-01	time	date-entity	0	0.2	
# ::edge	recommend-01	ARG1	interview-01	0.0.1.0	0.0.1	
# ::edge	secretary	mod	date-entity	0.2.0	0.2	
# ::edge	secretary	mod	union	0.2.0	0.2.0.0	
(p4 / promise-01 
      :ARG1 (p2 / person 
            :ARG0-of (p3 / play-01) 
            :ARG1-of (i / interview-01 
                  :ARG1-of (r / recommend-01 
                        :ARG1-of (i2 / insist-01 
                              :ARG0 (c2 / committee))) 
                  :ARG2 (a / along) 
                  :medium (c / candidate 
                        :mod (o / other) 
                        :quant 3))) 
      :ARG2 (j / job) 
      :time (d / date-entity 
            :mod-of (s / secretary 
                  :mod (u / union)) 
            :month 8 
            :time-of (e / elect-01 
                  :topic-of (p / platform 
                        :mod (o2 / only)))))

# ::snt jim mcdonnell the camden town caretaker who was stopped by ghanas azumah nelson in the 12th and last round of a wbc superfeatherweight title challenge last month has been promised a meeting with the winner of februarys wba title fight between brian mitchell and jackie beard
# ::tok jim mcdonnell the camden town caretaker who was stopped by ghanas azumah nelson in the 12th and last round of a wbc superfeatherweight title challenge last month has been promised a meeting with the winner of februarys wba title fight between brian mitchell and jackie beard
# ::alignments 43-44|0 40-41|0.1.1 39-40|0.1 38-39|0.1.0 31-32|0.0 29-30|0.0.1 26-27|0.0.1.0.2.0.0+0.0.1.0.2.0 25-26|0.0.1.0.2.0.0.0 24-25|0.0.1.0.2 23-24|0.0.1.0.2.1 18-19|0.0.1.0.1 17-18|0.0.1.0.0 16-17|0.0.1.0 8-9|0.0.0 4-5|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:06.959
# ::node	0	and	43-44
# ::node	0.0	meet-03	31-32
# ::node	0.0.0	stop-01	8-9
# ::node	0.0.0.0	town	4-5
# ::node	0.0.1	promise-01	29-30
# ::node	0.0.1.0	and	16-17
# ::node	0.0.1.0.0	last	17-18
# ::node	0.0.1.0.1	round	18-19
# ::node	0.0.1.0.2	challenge-01	24-25
# ::node	0.0.1.0.2.0	temporal-quantity	26-27
# ::node	0.0.1.0.2.0.0	month	26-27
# ::node	0.0.1.0.2.0.0.0	last	25-26
# ::node	0.0.1.0.2.1	title	23-24
# ::node	0.1	fight-01	39-40
# ::node	0.1.0	title	38-39
# ::node	0.1.1	between	40-41
# ::root	0	and
# ::edge	and	op1	fight-01	0	0.1	
# ::edge	and	op1	last	0.0.1.0	0.0.1.0.0	
# ::edge	and	op2	round	0.0.1.0	0.0.1.0.1	
# ::edge	and	op3	challenge-01	0.0.1.0	0.0.1.0.2	
# ::edge	and	op4	promise-01	0.0.1.0	0.0.1	
# ::edge	challenge-01	ARG1	temporal-quantity	0.0.1.0.2	0.0.1.0.2.0	
# ::edge	challenge-01	mod	title	0.0.1.0.2	0.0.1.0.2.1	
# ::edge	fight-01	ARG0	title	0.1	0.1.0	
# ::edge	fight-01	ARG1	between	0.1	0.1.1	
# ::edge	meet-03	ARG0	and	0.0	0	
# ::edge	month	mod	last	0.0.1.0.2.0.0	0.0.1.0.2.0.0.0	
# ::edge	promise-01	ARG1	meet-03	0.0.1	0.0	
# ::edge	stop-01	ARG0	town	0.0.0	0.0.0.0	
# ::edge	stop-01	ARG1	meet-03	0.0.0	0.0	
# ::edge	temporal-quantity	unit	month	0.0.1.0.2.0	0.0.1.0.2.0.0	
(a / and 
      :ARG0-of (m / meet-03 
            :ARG1-of (s / stop-01 
                  :ARG0 (t4 / town)) 
            :ARG1-of (p / promise-01 
                  :op-of (a2 / and 
                        :op1 (l2 / last) 
                        :op2 (r / round) 
                        :op3 (c / challenge-01 
                              :ARG1 (t2 / temporal-quantity 
                                    :unit (m2 / month 
                                          :mod (l / last))) 
                              :mod (t3 / title))))) 
      :op1 (f / fight-01 
            :ARG0 (t / title) 
            :ARG1 (b / between)))

# ::snt she felt ashamed of her erratic behaviour and promised amendment
# ::tok she felt ashamed of her erratic behaviour and promised amendment
# ::alignments 9-10|0.1.1.0 8-9|0.1.1.0.0 7-8|0.1.1 6-7|0.1 5-6|0.1.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:06.989
# ::node	0	feel-01	1-2
# ::node	0.0	she	0-1
# ::node	0.1	behave-01	6-7
# ::node	0.1.0	erratic	5-6
# ::node	0.1.1	and	7-8
# ::node	0.1.1.0	amend-01	9-10
# ::node	0.1.1.0.0	promise-01	8-9
# ::root	0	feel-01
# ::edge	and	op1	behave-01	0.1.1	0.1	
# ::edge	and	op2	amend-01	0.1.1	0.1.1.0	
# ::edge	behave-01	ARG1	erratic	0.1	0.1.0	
# ::edge	feel-01	ARG0	she	0	0.0	
# ::edge	feel-01	time	behave-01	0	0.1	
# ::edge	promise-01	ARG2	amend-01	0.1.1.0.0	0.1.1.0	
(f / feel-01 
      :ARG0 (s / she) 
      :time (b / behave-01 
            :ARG1 (e / erratic) 
            :op-of (a2 / and 
                  :op1 (a / amend-01 
                        :ARG2-of (p / promise-01)))))

# ::snt after a rumpus in 1982 about mrs reagans habit of borrowing dollars 20000  12500 dresses from leading designers the first lady promised to accept no more loans
# ::tok after a rumpus in 1982 about mrs reagans habit of borrowing dollars 20000 12500 dresses from leading designers the first lady promised to accept no more loans
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:06.990
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the labour leader also promised to abolish the poll tax within a year and said labour was close to announcing its own solutions but that it would wait to see the governments own efforts at reforming a system which was only two months old
# ::tok the labour leader also promised to abolish the poll tax within a year and said labour was close to announcing its own solutions but that it would wait to see the governments own efforts at reforming a system which was only two months old
# ::alignments 43-44|0.2.1.1.1.0.1 42-43|0.2.1.1.1.0.0.2+0.2.1.1.1.0.0 41-42|0.2.1.1.1.0.0.1 40-41|0.2.1.1.1.0.0.0 37-38|0.2.1.1.1.0 35-36|0.2.1.1.1 33-34|0.2.1.1.1.1 31-32|0.2.1.1.0+0.2.1.1 29-30|0.2.1 27-28|0.2 25-26|0.2.1.0 23-24|0 22-23|0.0 19-20|0.0.0 15-16|0.2.0 14-15|0.1 13-14|0.1.1 12-13|0.1.0.0.0.1.0 10-11|0.1.0.0.0.1 9-10|0.1.0.0.0.0 8-9|0.1.0.0.0.0.0 6-7|0.1.0.0.0 4-5|0.1.0.0 3-4|0.1.0.0.1 2-3|0.1.0.1+0.1.0 1-2|0.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:07.582
# ::node	0	contrast-01	23-24
# ::node	0.0	solution	22-23
# ::node	0.0.0	announce-01	19-20
# ::node	0.1	say-01	14-15
# ::node	0.1.0	person	2-3
# ::node	0.1.0.0	promise-01	4-5
# ::node	0.1.0.0.0	abolish-01	6-7
# ::node	0.1.0.0.0.0	tax-01	9-10
# ::node	0.1.0.0.0.0.0	poll-01	8-9
# ::node	0.1.0.0.0.1	within	10-11
# ::node	0.1.0.0.0.1.0	year	12-13
# ::node	0.1.0.0.1	also	3-4
# ::node	0.1.0.1	lead-02	2-3
# ::node	0.1.0.1.0	labour	1-2
# ::node	0.1.1	and	13-14
# ::node	0.2	wait-01	27-28
# ::node	0.2.0	labour	15-16
# ::node	0.2.1	see-01	29-30
# ::node	0.2.1.0	it	25-26
# ::node	0.2.1.1	government-organization	31-32
# ::node	0.2.1.1.0	govern-01	31-32
# ::node	0.2.1.1.1	reform-01	35-36
# ::node	0.2.1.1.1.0	system	37-38
# ::node	0.2.1.1.1.0.0	temporal-quantity	42-43
# ::node	0.2.1.1.1.0.0.0	only	40-41
# ::node	0.2.1.1.1.0.0.1	2	41-42
# ::node	0.2.1.1.1.0.0.2	month	42-43
# ::node	0.2.1.1.1.0.1	old	43-44
# ::node	0.2.1.1.1.1	effort	33-34
# ::root	0	contrast-01
# ::edge	abolish-01	ARG1	tax-01	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	abolish-01	time	within	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	and	op1	say-01	0.1.1	0.1	
# ::edge	announce-01	ARG1	solution	0.0.0	0.0	
# ::edge	contrast-01	ARG1	solution	0	0.0	
# ::edge	contrast-01	ARG2	wait-01	0	0.2	
# ::edge	effort	purpose	reform-01	0.2.1.1.1.1	0.2.1.1.1	
# ::edge	govern-01	ARG0	government-organization	0.2.1.1.0	0.2.1.1	
# ::edge	lead-02	ARG0	person	0.1.0.1	0.1.0	
# ::edge	lead-02	ARG1	labour	0.1.0.1	0.1.0.1.0	
# ::edge	promise-01	ARG0	person	0.1.0.0	0.1.0	
# ::edge	promise-01	ARG2	abolish-01	0.1.0.0	0.1.0.0.0	
# ::edge	promise-01	mod	also	0.1.0.0	0.1.0.0.1	
# ::edge	reform-01	ARG0	government-organization	0.2.1.1.1	0.2.1.1	
# ::edge	reform-01	ARG1	system	0.2.1.1.1	0.2.1.1.1.0	
# ::edge	say-01	ARG0	person	0.1	0.1.0	
# ::edge	say-01	ARG1	contrast-01	0.1	0	
# ::edge	see-01	ARG0	it	0.2.1	0.2.1.0	
# ::edge	see-01	ARG1	government-organization	0.2.1	0.2.1.1	
# ::edge	system	age	temporal-quantity	0.2.1.1.1.0	0.2.1.1.1.0.0	
# ::edge	system	mod	old	0.2.1.1.1.0	0.2.1.1.1.0.1	
# ::edge	tax-01	ARG1	poll-01	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	temporal-quantity	mod	only	0.2.1.1.1.0.0	0.2.1.1.1.0.0.0	
# ::edge	temporal-quantity	quant	2	0.2.1.1.1.0.0	0.2.1.1.1.0.0.1	
# ::edge	temporal-quantity	unit	month	0.2.1.1.1.0.0	0.2.1.1.1.0.0.2	
# ::edge	wait-01	ARG0	labour	0.2	0.2.0	
# ::edge	wait-01	ARG2	see-01	0.2	0.2.1	
# ::edge	within	op1	year	0.1.0.0.0.1	0.1.0.0.0.1.0	
(c / contrast-01 
      :ARG1 (s3 / solution 
            :ARG1-of (a / announce-01)) 
      :ARG1-of (s4 / say-01 
            :ARG0 (p3 / person 
                  :ARG0-of (p2 / promise-01 
                        :ARG2 (a3 / abolish-01 
                              :ARG1 (t2 / tax-01 
                                    :ARG1 (p / poll-01)) 
                              :time (w2 / within 
                                    :op1 (y / year))) 
                        :mod (a4 / also)) 
                  :ARG0-of (l2 / lead-02 
                        :ARG1 (l3 / labour))) 
            :op-of (a2 / and)) 
      :ARG2 (w / wait-01 
            :ARG0 (l / labour) 
            :ARG2 (s2 / see-01 
                  :ARG0 (i / it) 
                  :ARG1 (g / government-organization 
                        :ARG0-of (g2 / govern-01) 
                        :ARG0-of (r / reform-01 
                              :ARG1 (s / system 
                                    :age (t / temporal-quantity 
                                          :mod (o2 / only) 
                                          :quant 2 
                                          :unit (m / month)) 
                                    :mod (o / old)) 
                              :purpose-of (e / effort))))))

# ::snt he promised to maintain the us commitment to europe as a strategic fact of the next century as it has been of this one
# ::tok he promised to maintain the us commitment to europe as a strategic fact of the next century as it has been of this one
# ::alignments 22-23|0.1 18-19|0.2.1.0 15-16|0.0 12-13|0.2.1.1.1 11-12|0.2.1.1.1.0 8-9|0.2.1.1.0.0+0.2.1.1.0+0.2.1.1 6-7|0.2.1 3-4|0.2 1-2|0 0-1|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:07.701
# ::node	0	promise-01	1-2
# ::node	0.0	next	15-16
# ::node	0.1	this	22-23
# ::node	0.2	maintain-01	3-4
# ::node	0.2.0	he	0-1
# ::node	0.2.1	commit-01	6-7
# ::node	0.2.1.0	it	18-19
# ::node	0.2.1.1	continent	8-9
# ::node	0.2.1.1.0	name	8-9
# ::node	0.2.1.1.0.0	"Europe"	8-9
# ::node	0.2.1.1.1	fact	12-13
# ::node	0.2.1.1.1.0	strategy	11-12
# ::root	0	promise-01
# ::edge	commit-01	ARG0	it	0.2.1	0.2.1.0	
# ::edge	commit-01	ARG1	continent	0.2.1	0.2.1.1	
# ::edge	continent	name	name	0.2.1.1	0.2.1.1.0	
# ::edge	continent	prep-in	fact	0.2.1.1	0.2.1.1.1	
# ::edge	fact	mod	strategy	0.2.1.1.1	0.2.1.1.1.0	
# ::edge	maintain-01	ARG0	he	0.2	0.2.0	
# ::edge	maintain-01	ARG1	commit-01	0.2	0.2.1	
# ::edge	name	op1	"Europe"	0.2.1.1.0	0.2.1.1.0.0	
# ::edge	promise-01	ARG0	next	0	0.0	
# ::edge	promise-01	ARG1	this	0	0.1	
# ::edge	promise-01	ARG2	maintain-01	0	0.2	
(p / promise-01 
      :ARG0 (n / next) 
      :ARG1 (t / this) 
      :ARG2 (m / maintain-01 
            :ARG0 (h / he) 
            :ARG1 (c2 / commit-01 
                  :ARG0 (i / it) 
                  :ARG1 (c / continent 
                        :name (n2 / name 
                              :op1 "Europe") 
                        :prep-in (f / fact 
                              :mod (s / strategy))))))

# ::snt the person has promised they will get in before the end of the week
# ::tok the person has promised they will get in before the end of the week
# ::alignments 13-14|0.2 8-9|0.3 4-5|0.1 3-4|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:07.763
# ::node	0	promise-01	3-4
# ::node	0.0	person	1-2
# ::node	0.1	they	4-5
# ::node	0.2	week	13-14
# ::node	0.3	before	8-9
# ::root	0	promise-01
# ::edge	promise-01	ARG1	person	0	0.0	
# ::edge	promise-01	ARG2	they	0	0.1	
# ::edge	promise-01	time	before	0	0.3	
# ::edge	week	op1	promise-01	0.2	0	
(p / promise-01 
      :ARG1 (p2 / person) 
      :ARG2 (t / they) 
      :op-of (w / week) 
      :time (b / before))

# ::snt ron atkinson the sheffield wednesday manager yesterday promised the shareholders agm that the team will not be relegated and will climb from the bottom of the first division by christmas
# ::tok ron atkinson the sheffield wednesday manager yesterday promised the shareholders agm that the team will not be relegated and will climb from the bottom of the first division by christmas
# ::alignments 27-28|0 23-24|0.1 18-19|0.0.0.1 13-14|0.0.0.0 7-8|0.0.0 6-7|0.0.0.2 5-6|0.0 0-2|0.0.0.1.0.0.0+0.0.0.1.0.0.1+0.0.0.1.0.0+0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:07.863
# ::node	0	division	27-28
# ::node	0.0	manage-01	5-6
# ::node	0.0.0	promise-01	7-8
# ::node	0.0.0.0	team	13-14
# ::node	0.0.0.1	and	18-19
# ::node	0.0.0.1.0	person	0-2
# ::node	0.0.0.1.0.0	name	0-2
# ::node	0.0.0.1.0.0.0	"atkinson"	0-2
# ::node	0.0.0.1.0.0.1	"ron"	0-2
# ::node	0.0.0.2	yesterday	6-7
# ::node	0.1	bottom	23-24
# ::root	0	division
(d / division 
      :ARG1-of (m / manage-01 
            :ARG1-of (p / promise-01 
                  :ARG0 (t / team) 
                  :op-of (a / and 
                        :op1 (p2 / person 
                              :name (n / name 
                                    :op1 "atkinson" 
                                    :op2 "ron"))) 
                  :time (y / yesterday))) 
      :poss-of (b / bottom))

# ::snt the communist party has already said it will renounce its leading role and has promised free elections
# ::tok the communist party has already said it will renounce its leading role and has promised free elections
# ::alignments 16-17|0.0.0.0 15-16|0.0.0.0.0 14-15|0.0.0 12-13|0.0.0.1 11-12|0.1.1 10-11|0.1.1.0 8-9|0.1 6-7|0.1.0 5-6|0 4-5|0.2 1-3|0.0.1.0+0.0.1.1+0.0.1+0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:07.930
# ::node	0	say-01	5-6
# ::node	0.0	political-party	1-3
# ::node	0.0.0	promise-01	14-15
# ::node	0.0.0.0	elect-01	16-17
# ::node	0.0.0.0.0	free-41	15-16
# ::node	0.0.0.1	and	12-13
# ::node	0.0.1	name	1-3
# ::node	0.0.1.0	"Communist"	1-3
# ::node	0.0.1.1	"Party"	1-3
# ::node	0.1	renounce-01	8-9
# ::node	0.1.0	it	6-7
# ::node	0.1.1	role	11-12
# ::node	0.1.1.0	lead-01	10-11
# ::node	0.2	already	4-5
# ::root	0	say-01
# ::edge	and	op1	promise-01	0.0.0.1	0.0.0	
# ::edge	free-41	ARG1	elect-01	0.0.0.0.0	0.0.0.0	
# ::edge	lead-01	ARG0	role	0.1.1.0	0.1.1	
# ::edge	name	op1	"Communist"	0.0.1	0.0.1.0	
# ::edge	name	op2	"Party"	0.0.1	0.0.1.1	
# ::edge	political-party	name	name	0.0	0.0.1	
# ::edge	promise-01	ARG0	political-party	0.0.0	0.0	
# ::edge	promise-01	ARG2	elect-01	0.0.0	0.0.0.0	
# ::edge	renounce-01	ARG0	it	0.1	0.1.0	
# ::edge	renounce-01	ARG1	role	0.1	0.1.1	
# ::edge	say-01	ARG0	political-party	0	0.0	
# ::edge	say-01	ARG1	renounce-01	0	0.1	
# ::edge	say-01	time	already	0	0.2	
(s / say-01 
      :ARG0 (p2 / political-party 
            :ARG0-of (p / promise-01 
                  :ARG2 (e / elect-01 
                        :ARG1-of (f / free-41)) 
                  :op-of (a / and)) 
            :name (n / name 
                  :op1 "Communist" 
                  :op2 "Party")) 
      :ARG1 (r2 / renounce-01 
            :ARG0 (i / it) 
            :ARG1 (r / role 
                  :ARG0-of (l / lead-01))) 
      :time (a2 / already))

# ::snt  laughing rain shooed holly into the kitchen promising to tell as much as she could about alf wilson but only if they could eat while she did so holly refreshed freds bowl of water and made a fuss of him while rain cooked
# ::tok laughing rain shooed holly into the kitchen promising to tell as much as she could about alf wilson but only if they could eat while she did so holly refreshed freds bowl of water and made a fuss of him while rain cooked
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:07.931
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt she stood there encased in the sort of external beauty which promises an adventurous even raunchy soul beneath
# ::tok she stood there encased in the sort of external beauty which promises an adventurous even raunchy soul beneath
# ::alignments 17-18|0.1.1.0 16-17|0.1.1 11-12|0.1 9-10|0.1.0.0 8-9|0.1.0.0.0 6-7|0.1.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:08.012
# ::node	0	stand-01	1-2
# ::node	0.0	she	0-1
# ::node	0.1	promise-01	11-12
# ::node	0.1.0	sort	6-7
# ::node	0.1.0.0	beauty	9-10
# ::node	0.1.0.0.0	external	8-9
# ::node	0.1.1	soul	16-17
# ::node	0.1.1.0	beneath	17-18
# ::root	0	stand-01
# ::edge	beauty	mod	external	0.1.0.0	0.1.0.0.0	
# ::edge	beauty	mod	sort	0.1.0.0	0.1.0	
# ::edge	promise-01	ARG0	sort	0.1	0.1.0	
# ::edge	promise-01	ARG1	soul	0.1	0.1.1	
# ::edge	soul	location	beneath	0.1.1	0.1.1.0	
# ::edge	stand-01	ARG0	she	0	0.0	
# ::edge	stand-01	ARG1	promise-01	0	0.1	
(s3 / stand-01 
      :ARG0 (s4 / she) 
      :ARG1 (p / promise-01 
            :ARG0 (s2 / sort 
                  :mod-of (b2 / beauty 
                        :mod (e / external))) 
            :ARG1 (s / soul 
                  :location (b / beneath))))

# ::snt in creative terms arsenal promised more than was delivered rocastle often stirring the crowd with technical wizardry only to let them down with an aimless pass but i still thought grahams verdict a shade harsh and indeed misguided when he added we never seem to do our best after international matches
# ::tok in creative terms arsenal promised more than was delivered rocastle often stirring the crowd with technical wizardry only to let them down with an aimless pass but i still thought grahams verdict a shade harsh and indeed misguided when he added we never seem to do our best after international matches
# ::alignments 50-51|0.0.1.2.1.1.0.3.1.1.0 49-50|0.0.1.2.1.1.0.3.1.1.0.0 48-49|0.0.1.2.1.1.0.3.1.1 43-44|0.0.1.2.1.1.0.3.1 41-42|0.0.1.2.1.1.0.3.1.0 40-41|0.0.1.2.1.1.0.3 39-40|0.0.1.2.1.1.0.3.0 37-38|0.0.1.2.1.1.0 36-37|0.0.1.2.1.1.0.2 35-36|0.0.1.2.1.1 34-35|0.0.1.2.1.1.0.1 33-34|0.0.1.2.1.1.0.1.0 31-32|0.0.0.0 29-30|0.0.0 28-29|0.0.0.1 27-28|0.0 26-27|0 21-22|0.0.1.0 19-20|0.0.1 17-18|0.0.1.1 15-16|0.0.1.2.1.1.0.0 13-14|0.0.1.2.0 11-12|0.0.1.2 10-11|0.0.1.2.2 8-9|0.0.1.2.1 4-5|0.0.1.2.1.0.0 3-4|0.0.1.2.1.0 2-3|0.0.1.2.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:10.130
# ::node	0	contrast-01	26-27
# ::node	0.0	i	27-28
# ::node	0.0.0	think-01	29-30
# ::node	0.0.0.0	verdict	31-32
# ::node	0.0.0.1	still	28-29
# ::node	0.0.1	let-01	19-20
# ::node	0.0.1.0	down	21-22
# ::node	0.0.1.1	only	17-18
# ::node	0.0.1.2	stir-04	11-12
# ::node	0.0.1.2.0	crowd	13-14
# ::node	0.0.1.2.1	deliver-01	8-9
# ::node	0.0.1.2.1.0	arsenal	3-4
# ::node	0.0.1.2.1.0.0	promise-01	4-5
# ::node	0.0.1.2.1.0.1	term	2-3
# ::node	0.0.1.2.1.1	and	35-36
# ::node	0.0.1.2.1.1.0	misguide-01	37-38
# ::node	0.0.1.2.1.1.0.0	technical	15-16
# ::node	0.0.1.2.1.1.0.1	harsh	34-35
# ::node	0.0.1.2.1.1.0.1.0	shade	33-34
# ::node	0.0.1.2.1.1.0.2	indeed	36-37
# ::node	0.0.1.2.1.1.0.3	add-01	40-41
# ::node	0.0.1.2.1.1.0.3.0	he	39-40
# ::node	0.0.1.2.1.1.0.3.1	seem-01	43-44
# ::node	0.0.1.2.1.1.0.3.1.0	we	41-42
# ::node	0.0.1.2.1.1.0.3.1.1	after	48-49
# ::node	0.0.1.2.1.1.0.3.1.1.0	match	50-51
# ::node	0.0.1.2.1.1.0.3.1.1.0.0	international	49-50
# ::node	0.0.1.2.2	often	10-11
# ::root	0	contrast-01
# ::edge	add-01	ARG0	he	0.0.1.2.1.1.0.3	0.0.1.2.1.1.0.3.0	
# ::edge	add-01	ARG1	seem-01	0.0.1.2.1.1.0.3	0.0.1.2.1.1.0.3.1	
# ::edge	after	op1	match	0.0.1.2.1.1.0.3.1.1	0.0.1.2.1.1.0.3.1.1.0	
# ::edge	and	op1	misguide-01	0.0.1.2.1.1	0.0.1.2.1.1.0	
# ::edge	contrast-01	ARG1	i	0	0.0	
# ::edge	deliver-01	ARG0	arsenal	0.0.1.2.1	0.0.1.2.1.0	
# ::edge	deliver-01	ARG1	and	0.0.1.2.1	0.0.1.2.1.1	
# ::edge	harsh	domain	shade	0.0.1.2.1.1.0.1	0.0.1.2.1.1.0.1.0	
# ::edge	let-01	ARG0	i	0.0.1	0.0	
# ::edge	let-01	ARG1	down	0.0.1	0.0.1.0	
# ::edge	let-01	mod	only	0.0.1	0.0.1.1	
# ::edge	match	mod	international	0.0.1.2.1.1.0.3.1.1.0	0.0.1.2.1.1.0.3.1.1.0.0	
# ::edge	misguide-01	ARG0	technical	0.0.1.2.1.1.0	0.0.1.2.1.1.0.0	
# ::edge	misguide-01	ARG1	harsh	0.0.1.2.1.1.0	0.0.1.2.1.1.0.1	
# ::edge	misguide-01	mod	indeed	0.0.1.2.1.1.0	0.0.1.2.1.1.0.2	
# ::edge	misguide-01	time	add-01	0.0.1.2.1.1.0	0.0.1.2.1.1.0.3	
# ::edge	promise-01	ARG1	arsenal	0.0.1.2.1.0.0	0.0.1.2.1.0	
# ::edge	seem-01	ARG1	we	0.0.1.2.1.1.0.3.1	0.0.1.2.1.1.0.3.1.0	
# ::edge	seem-01	time	after	0.0.1.2.1.1.0.3.1	0.0.1.2.1.1.0.3.1.1	
# ::edge	stir-04	ARG1	crowd	0.0.1.2	0.0.1.2.0	
# ::edge	stir-04	ARG2	deliver-01	0.0.1.2	0.0.1.2.1	
# ::edge	stir-04	frequency	often	0.0.1.2	0.0.1.2.2	
# ::edge	stir-04	purpose	let-01	0.0.1.2	0.0.1	
# ::edge	term	consist	arsenal	0.0.1.2.1.0.1	0.0.1.2.1.0	
# ::edge	think-01	ARG0	i	0.0.0	0.0	
# ::edge	think-01	ARG1	verdict	0.0.0	0.0.0.0	
# ::edge	think-01	mod	still	0.0.0	0.0.0.1	
(c / contrast-01 
      :ARG1 (i3 / i 
            :ARG0-of (t / think-01 
                  :ARG1 (v / verdict) 
                  :mod (s3 / still)) 
            :ARG0-of (l / let-01 
                  :ARG1 (d / down) 
                  :mod (o / only) 
                  :purpose-of (s4 / stir-04 
                        :ARG1 (c2 / crowd) 
                        :ARG2 (d2 / deliver-01 
                              :ARG0 (a4 / arsenal 
                                    :ARG1-of (p / promise-01) 
                                    :consist-of (t3 / term)) 
                              :ARG1 (a3 / and 
                                    :op1 (m2 / misguide-01 
                                          :ARG0 (t2 / technical) 
                                          :ARG1 (h2 / harsh 
                                                :domain (s2 / shade)) 
                                          :mod (i2 / indeed) 
                                          :time (a2 / add-01 
                                                :ARG0 (h / he) 
                                                :ARG1 (s / seem-01 
                                                      :ARG1 (w / we) 
                                                      :time (a / after 
                                                            :op1 (m / match 
                                                                  :mod (i / international)))))))) 
                        :frequency (o2 / often)))))

# ::snt the british government has promised tighter vetting of recruits to the udr
# ::tok the british government has promised tighter vetting of recruits to the udr
# ::alignments 8-9|0.0.0+0.0 5-6|0.0.0.0 4-5|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:10.143
# ::node	0	promise-01	4-5
# ::node	0.0	person	8-9
# ::node	0.0.0	recruit-01	8-9
# ::node	0.0.0.0	tight	5-6
# ::root	0	promise-01
# ::edge	promise-01	ARG1	person	0	0.0	
# ::edge	recruit-01	ARG0	tight	0.0.0	0.0.0.0	
# ::edge	recruit-01	ARG1	person	0.0.0	0.0	
(p2 / promise-01 
      :ARG1 (p / person 
            :ARG1-of (r / recruit-01 
                  :ARG0 (t / tight))))

# ::snt on 6 october sea containers promised that by the end of the month it would make public a recommended alternative to the hostile tender offer by temple holdings which would involve significant asset sales
# ::tok on 6 october sea containers promised that by the end of the month it would make public a recommended alternative to the hostile tender offer by temple holdings which would involve significant asset sales
# ::alignments 32-33|0.0.1.1.0 31-32|0 30-31|0.0.1.1 27-28|0.0 26-27|0.0.0 24-25|0.0.1 23-24|0.0.1.0 22-23|0.0.1.2 19-20|0.0.1.2.0.1 18-19|0.0.1.2.0 16-17|0.0.1.2.0.1.0.0 13-14|0.0.1.1.1 12-13|0.0.2.0+0.0.2 5-6|0.0.1.2.0.1.0 4-5|0.0.1.2.0.1.0.1 3-4|0.0.1.2.0.1.0.1.0 2-3|0.0.1.3.0+0.0.1.3 1-2|0.0.1.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:10.602
# ::node	0	significant	31-32
# ::node	0.0	hold-01	27-28
# ::node	0.0.0	temple	26-27
# ::node	0.0.1	offer-01	24-25
# ::node	0.0.1.0	tender	23-24
# ::node	0.0.1.1	involve-01	30-31
# ::node	0.0.1.1.0	asset	32-33
# ::node	0.0.1.1.1	it	13-14
# ::node	0.0.1.2	hostile	22-23
# ::node	0.0.1.2.0	recommend-01	18-19
# ::node	0.0.1.2.0.0	6	1-2
# ::node	0.0.1.2.0.1	alternative	19-20
# ::node	0.0.1.2.0.1.0	promise-01	5-6
# ::node	0.0.1.2.0.1.0.0	public	16-17
# ::node	0.0.1.2.0.1.0.1	container	4-5
# ::node	0.0.1.2.0.1.0.1.0	sea	3-4
# ::node	0.0.1.3	date-entity	2-3
# ::node	0.0.1.3.0	10	2-3
# ::node	0.0.2	temporal-quantity	12-13
# ::node	0.0.2.0	month	12-13
# ::root	0	significant
# ::edge	container	mod	sea	0.0.1.2.0.1.0.1	0.0.1.2.0.1.0.1.0	
# ::edge	date-entity	month	10	0.0.1.3	0.0.1.3.0	
# ::edge	hold-01	ARG1	temple	0.0	0.0.0	
# ::edge	involve-01	ARG0	offer-01	0.0.1.1	0.0.1	
# ::edge	involve-01	ARG1	asset	0.0.1.1	0.0.1.1.0	
# ::edge	involve-01	ARG2	it	0.0.1.1	0.0.1.1.1	
# ::edge	offer-01	ARG0	tender	0.0.1	0.0.1.0	
# ::edge	offer-01	ARG2	hold-01	0.0.1	0.0	
# ::edge	offer-01	mod	hostile	0.0.1	0.0.1.2	
# ::edge	offer-01	time	date-entity	0.0.1	0.0.1.3	
# ::edge	promise-01	ARG0	alternative	0.0.1.2.0.1.0	0.0.1.2.0.1	
# ::edge	promise-01	ARG1	public	0.0.1.2.0.1.0	0.0.1.2.0.1.0.0	
# ::edge	promise-01	manner	container	0.0.1.2.0.1.0	0.0.1.2.0.1.0.1	
# ::edge	recommend-01	ARG0	6	0.0.1.2.0	0.0.1.2.0.0	
# ::edge	recommend-01	ARG1	alternative	0.0.1.2.0	0.0.1.2.0.1	
# ::edge	recommend-01	ARG2	hostile	0.0.1.2.0	0.0.1.2	
# ::edge	significant	op1	hold-01	0	0.0	
# ::edge	temporal-quantity	op1	hold-01	0.0.2	0.0	
# ::edge	temporal-quantity	unit	month	0.0.2	0.0.2.0	
(s / significant 
      :op1 (h / hold-01 
            :ARG1 (t / temple) 
            :ARG2-of (o / offer-01 
                  :ARG0 (t2 / tender) 
                  :ARG0-of (i / involve-01 
                        :ARG1 (a / asset) 
                        :ARG2 (i2 / it)) 
                  :mod (h2 / hostile 
                        :ARG2-of (r / recommend-01 
                              :ARG0 6 
                              :ARG1 (a2 / alternative 
                                    :ARG0-of (p2 / promise-01 
                                          :ARG1 (p / public) 
                                          :manner (c / container 
                                                :mod (s2 / sea)))))) 
                  :time (d / date-entity 
                        :month 10)) 
            :op-of (t3 / temporal-quantity 
                  :unit (m / month))))

# ::snt he also promised to give magistrates the same immunity from civil actions arising from court cases that judges enjoy
# ::tok he also promised to give magistrates the same immunity from civil actions arising from court cases that judges enjoy
# ::alignments 18-19|0 17-18|0.1 15-16|0.0.1.1.0 14-15|0.0.1.1.0.0 11-12|0.0 10-11|0.0.0 8-9|0.0.1 7-8|0.0.1.0 4-5|0.0.1.1 2-3|0.0.1.1.1 1-2|0.0.1.1.1.1 0-1|0.0.1.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:10.794
# ::node	0	enjoy-01	18-19
# ::node	0.0	action	11-12
# ::node	0.0.0	civil	10-11
# ::node	0.0.1	immunity	8-9
# ::node	0.0.1.0	same-41	7-8
# ::node	0.0.1.1	give-01	4-5
# ::node	0.0.1.1.0	case	15-16
# ::node	0.0.1.1.0.0	court	14-15
# ::node	0.0.1.1.1	promise-01	2-3
# ::node	0.0.1.1.1.0	he	0-1
# ::node	0.0.1.1.1.1	also	1-2
# ::node	0.1	judge-01	17-18
# ::root	0	enjoy-01
# ::edge	action	mod	civil	0.0	0.0.0	
# ::edge	case	mod	court	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	enjoy-01	ARG0	action	0	0.0	
# ::edge	enjoy-01	ARG1	judge-01	0	0.1	
# ::edge	give-01	ARG0	case	0.0.1.1	0.0.1.1.0	
# ::edge	give-01	ARG1	immunity	0.0.1.1	0.0.1	
# ::edge	immunity	mod	action	0.0.1	0.0	
# ::edge	promise-01	ARG0	he	0.0.1.1.1	0.0.1.1.1.0	
# ::edge	promise-01	ARG2	give-01	0.0.1.1.1	0.0.1.1	
# ::edge	promise-01	mod	also	0.0.1.1.1	0.0.1.1.1.1	
# ::edge	same-41	ARG1	immunity	0.0.1.0	0.0.1	
(e / enjoy-01 
      :ARG0 (a / action 
            :mod (c3 / civil) 
            :mod-of (i / immunity 
                  :ARG1-of (s / same-41) 
                  :ARG1-of (g / give-01 
                        :ARG0 (c / case 
                              :mod (c2 / court)) 
                        :ARG2-of (p / promise-01 
                              :ARG0 (h / he) 
                              :mod (a2 / also))))) 
      :ARG1 (j / judge-01))

# ::snt  mr goss promised to make the fitzgerald inquirys recommendations for the reform of the electoral and criminal justice systems the top priority of his administration
# ::tok mr goss promised to make the fitzgerald inquirys recommendations for the reform of the electoral and criminal justice systems the top priority of his administration
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:10.795
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt one of the palestinian guerrillas turned irritably to a companion and asked why dont we shoot at them  had he not heard the arab league spokesman that morning promising that the syrian peacekeepers would strike with an iron fist at any resistance
# ::tok one of the palestinian guerrillas turned irritably to a companion and asked why dont we shoot at them had he not heard the arab league spokesman that morning promising that the syrian peacekeepers would strike with an iron fist at any resistance
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:10.797
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt if your father were an outofwork actor and he dressed up as a formidably grand housekeeper and babysitter would your mum recognise him  well anyway i promise it makes a splendid read
# ::tok if your father were an outofwork actor and he dressed up as a formidably grand housekeeper and babysitter would your mum recognise him well anyway i promise it makes a splendid read
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:10.799
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt 2m per year to broadcast the tournament and other atp events in germany and the mayor of frankfurt dr volker hauff has promised to showcase the event with a week of concerts exhibitions and international symposiums
# ::tok 2m per year to broadcast the tournament and other atp events in germany and the mayor of frankfurt dr volker hauff has promised to showcase the event with a week of concerts exhibitions and international symposiums
# ::alignments 34-35|0.2 33-34|0.1.1 32-33|0.1 29-30|0.1.1.0 26-27|0.0.1.0.0 22-23|0.0.1.0 15-16|0.1.0.0+0.1.0 13-14|0 10-11|0.0.0.0 8-9|0.0.0.0.0 7-8|0.0.0 4-5|0.0 2-3|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:11.018
# ::node	0	and	13-14
# ::node	0.0	broadcast-01	4-5
# ::node	0.0.0	and	7-8
# ::node	0.0.0.0	event	10-11
# ::node	0.0.0.0.0	other	8-9
# ::node	0.0.1	year	2-3
# ::node	0.0.1.0	promise-01	22-23
# ::node	0.0.1.0.0	event	26-27
# ::node	0.1	exhibit-01	32-33
# ::node	0.1.0	have-org-role-91	15-16
# ::node	0.1.0.0	mayor	15-16
# ::node	0.1.1	and	33-34
# ::node	0.1.1.0	week	29-30
# ::node	0.2	international	34-35
# ::root	0	and
# ::edge	and	mod	international	0	0.2	
# ::edge	and	op1	event	0.0.0	0.0.0.0	
# ::edge	and	op1	exhibit-01	0.1.1	0.1	
# ::edge	broadcast-01	ARG0	and	0.0	0	
# ::edge	broadcast-01	ARG1	and	0.0	0.0.0	
# ::edge	broadcast-01	ARG2	year	0.0	0.0.1	
# ::edge	event	mod	other	0.0.0.0	0.0.0.0.0	
# ::edge	exhibit-01	ARG1	and	0.1	0	
# ::edge	exhibit-01	ARG2	have-org-role-91	0.1	0.1.0	
# ::edge	have-org-role-91	ARG2	mayor	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG0	year	0.0.1.0	0.0.1	
# ::edge	promise-01	ARG1	event	0.0.1.0	0.0.1.0.0	
# ::edge	week	topic	and	0.1.1.0	0.1.1	
(a2 / and 
      :ARG0-of (b / broadcast-01 
            :ARG1 (a3 / and 
                  :op1 (e3 / event 
                        :mod (o / other))) 
            :ARG2 (y / year 
                  :ARG0-of (p / promise-01 
                        :ARG1 (e2 / event)))) 
      :ARG1-of (e / exhibit-01 
            :ARG2 (h / have-org-role-91 
                  :ARG2 (m / mayor)) 
            :op-of (a / and 
                  :topic-of (w / week))) 
      :mod (i / international))

# ::snt he promised a meeting of top officials here on 17 november to consider how the august agreements were being implemented and he appealed to the reason and honour of miners throughout the country to ensure the normal life of the soviet people this winter
# ::tok he promised a meeting of top officials here on 17 november to consider how the august agreements were being implemented and he appealed to the reason and honour of miners throughout the country to ensure the normal life of the soviet people this winter
# ::alignments 43-44|0.1.0.2.1.0 42-43|0.1.0.2.1.0.0 37-38|0.1.0.0.0.0 36-37|0.1.0.0.0.0.0 34-35|0.1.0.0.0 32-33|0.1.0.2.1.2.0 30-31|0.1.0.2.1.2 29-30|0.0.1+0.0 27-28|0 26-27|0.1 25-26|0.1.0.1 22-23|0.1.0 21-22|0.1.0.0 20-21|0.1.0.2 19-20|0.1.0.2.1 16-17|0.1.0.2.1.1 15-16|0.1.0.2.1.1.0.0+0.1.0.2.1.1.0 12-13|0.1.0.2.0 10-11|0.1.0.2.0.1.0+0.1.0.2.0.1 9-10|0.0.0.1.0 7-8|0.0.0.1 6-7|0.0.0.0+0.0.0 5-6|0.0.0.0.0 3-4|0.1.0.2.0.0.0.0 1-2|0.1.0.2.0.0 0-1|0.1.0.2.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:12.307
# ::node	0	honor-01	27-28
# ::node	0.0	person	29-30
# ::node	0.0.0	have-org-role-91	6-7
# ::node	0.0.0.0	official	6-7
# ::node	0.0.0.0.0	top	5-6
# ::node	0.0.0.1	here	7-8
# ::node	0.0.0.1.0	17	9-10
# ::node	0.0.1	mine-01	29-30
# ::node	0.1	and	26-27
# ::node	0.1.0	appeal-02	22-23
# ::node	0.1.0.0	he	21-22
# ::node	0.1.0.0.0	ensure-01	34-35
# ::node	0.1.0.0.0.0	life	37-38
# ::node	0.1.0.0.0.0.0	normal	36-37
# ::node	0.1.0.1	reason	25-26
# ::node	0.1.0.2	and	20-21
# ::node	0.1.0.2.0	consider-02	12-13
# ::node	0.1.0.2.0.0	promise-01	1-2
# ::node	0.1.0.2.0.0.0	he	0-1
# ::node	0.1.0.2.0.0.0.0	meet-03	3-4
# ::node	0.1.0.2.0.1	date-entity	10-11
# ::node	0.1.0.2.0.1.0	11	10-11
# ::node	0.1.0.2.1	implement-01	19-20
# ::node	0.1.0.2.1.0	winter	43-44
# ::node	0.1.0.2.1.0.0	this	42-43
# ::node	0.1.0.2.1.1	agree-01	16-17
# ::node	0.1.0.2.1.1.0	date-entity	15-16
# ::node	0.1.0.2.1.1.0.0	8	15-16
# ::node	0.1.0.2.1.2	throughout	30-31
# ::node	0.1.0.2.1.2.0	country	32-33
# ::root	0	honor-01
# ::edge	agree-01	time	date-entity	0.1.0.2.1.1	0.1.0.2.1.1.0	
# ::edge	and	op1	honor-01	0.1	0	
# ::edge	and	op1	implement-01	0.1.0.2	0.1.0.2.1	
# ::edge	and	op2	appeal-02	0.1.0.2	0.1.0	
# ::edge	appeal-02	ARG0	he	0.1.0	0.1.0.0	
# ::edge	appeal-02	ARG1	reason	0.1.0	0.1.0.1	
# ::edge	appeal-02	ARG2	and	0.1.0	0.1	
# ::edge	consider-02	ARG1	and	0.1.0.2.0	0.1.0.2	
# ::edge	date-entity	month	11	0.1.0.2.0.1	0.1.0.2.0.1.0	
# ::edge	date-entity	month	8	0.1.0.2.1.1.0	0.1.0.2.1.1.0.0	
# ::edge	date-entity	purpose	consider-02	0.1.0.2.0.1	0.1.0.2.0	
# ::edge	ensure-01	ARG0	he	0.1.0.0.0	0.1.0.0	
# ::edge	ensure-01	ARG1	life	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	have-org-role-91	ARG0	person	0.0.0	0.0	
# ::edge	have-org-role-91	ARG2	official	0.0.0	0.0.0.0	
# ::edge	have-org-role-91	location	here	0.0.0	0.0.0.1	
# ::edge	here	op1	17	0.0.0.1	0.0.0.1.0	
# ::edge	honor-01	ARG1	person	0	0.0	
# ::edge	implement-01	ARG0	winter	0.1.0.2.1	0.1.0.2.1.0	
# ::edge	implement-01	ARG1	agree-01	0.1.0.2.1	0.1.0.2.1.1	
# ::edge	implement-01	concession	throughout	0.1.0.2.1	0.1.0.2.1.2	
# ::edge	life	mod	normal	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	meet-03	ARG0	he	0.1.0.2.0.0.0.0	0.1.0.2.0.0.0	
# ::edge	mine-01	ARG0	person	0.0.1	0.0	
# ::edge	official	mod	top	0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	ARG0	he	0.1.0.2.0.0	0.1.0.2.0.0.0	
# ::edge	promise-01	ARG2	consider-02	0.1.0.2.0.0	0.1.0.2.0	
# ::edge	throughout	op1	country	0.1.0.2.1.2	0.1.0.2.1.2.0	
# ::edge	winter	mod	this	0.1.0.2.1.0	0.1.0.2.1.0.0	
(h / honor-01 
      :ARG1 (p / person 
            :ARG0-of (h4 / have-org-role-91 
                  :ARG2 (o / official 
                        :mod (t3 / top)) 
                  :location (h3 / here 
                        :op1 17)) 
            :ARG0-of (m / mine-01)) 
      :op-of (a / and 
            :ARG2-of (a2 / appeal-02 
                  :ARG0 (h2 / he 
                        :ARG0-of (e / ensure-01 
                              :ARG1 (l / life 
                                    :mod (n / normal)))) 
                  :ARG1 (r / reason) 
                  :op-of (a3 / and 
                        :ARG1-of (c2 / consider-02 
                              :ARG2-of (p2 / promise-01 
                                    :ARG0 (h5 / he 
                                          :ARG0-of (m2 / meet-03))) 
                              :purpose-of (d2 / date-entity 
                                    :month 11)) 
                        :op1 (i / implement-01 
                              :ARG0 (w / winter 
                                    :mod (t / this)) 
                              :ARG1 (a4 / agree-01 
                                    :time (d / date-entity 
                                          :month 8)) 
                              :concession (t2 / throughout 
                                    :op1 (c / country)))))))

# ::snt to say we promised the job to gordon taylor is also incorrect
# ::tok to say we promised the job to gordon taylor is also incorrect
# ::alignments 11-12|0.0.1.2+0.0.1 10-11|0.0.1.1 5-6|0.0.1.0 3-4|0.0 2-3|0.0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:12.324
# ::node	0	say-01	1-2
# ::node	0.0	promise-01	3-4
# ::node	0.0.0	we	2-3
# ::node	0.0.1	correct	11-12
# ::node	0.0.1.0	job	5-6
# ::node	0.0.1.1	also	10-11
# ::node	0.0.1.2	-	11-12
# ::root	0	say-01
# ::edge	correct	domain	job	0.0.1	0.0.1.0	
# ::edge	correct	mod	also	0.0.1	0.0.1.1	
# ::edge	correct	polarity	-	0.0.1	0.0.1.2	
# ::edge	promise-01	ARG0	we	0.0	0.0.0	
# ::edge	promise-01	ARG1	correct	0.0	0.0.1	
# ::edge	say-01	ARG1	promise-01	0	0.0	
(s / say-01 
      :ARG1 (p / promise-01 
            :ARG0 (w / we) 
            :ARG1 (c / correct 
                  :domain (j / job) 
                  :mod (a / also) 
                  :polarity -)))

# ::snt page 27 drg forecast  the stationery group has promised a profits forecast to rally support against the 697m bid from pembridge investments
# ::tok page 27 drg forecast the stationery group has promised a profits forecast to rally support against the 697m bid from pembridge investments
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:12.324
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt i wish to god the allies would hurry up and make this landing weve all been promised for so long
# ::tok i wish to god the allies would hurry up and make this landing weve all been promised for so long
# ::alignments 18-19|0.1.2.0 16-17|0 14-15|0.0 12-13|0.1.0 11-12|0.1.0.0 9-10|0.1 5-6|0.1.2 3-4|0.1.1 1-2|0.1.1.0 0-1|0.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:12.479
# ::node	0	promise-01	16-17
# ::node	0.0	all	14-15
# ::node	0.1	and	9-10
# ::node	0.1.0	land-01	12-13
# ::node	0.1.0.0	this	11-12
# ::node	0.1.1	god	3-4
# ::node	0.1.1.0	wish-01	1-2
# ::node	0.1.1.0.0	i	0-1
# ::node	0.1.2	ally-01	5-6
# ::node	0.1.2.0	so	18-19
# ::root	0	promise-01
# ::edge	ally-01	ARG1	so	0.1.2	0.1.2.0	
# ::edge	and	op1	god	0.1	0.1.1	
# ::edge	and	op2	ally-01	0.1	0.1.2	
# ::edge	and	op3	promise-01	0.1	0	
# ::edge	land-01	ARG0	and	0.1.0	0.1	
# ::edge	land-01	mod	this	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG0	all	0	0.0	
# ::edge	wish-01	ARG0	i	0.1.1.0	0.1.1.0.0	
# ::edge	wish-01	ARG1	god	0.1.1.0	0.1.1	
(p / promise-01 
      :ARG0 (a / all) 
      :op-of (a2 / and 
            :ARG0-of (l / land-01 
                  :mod (t / this)) 
            :op1 (g / god 
                  :ARG1-of (w / wish-01 
                        :ARG0 (i / i))) 
            :op2 (a3 / ally-01 
                  :ARG1 (s / so))))

# ::snt this years benson final promises to be one of the best with the clash of probably the two best allround oneday sides in the country
# ::tok this years benson final promises to be one of the best with the clash of probably the two best allround oneday sides in the country
# ::alignments 24-25|0.0.0.0 21-22|0.0.0 17-18|0.0.0.1 15-16|0 13-14|0.0 4-5|0.0.0.0.0 3-4|0.0.0.0.0.1 1-2|0.0.0.0.0.0.0+0.0.0.0.0.0 0-1|0.0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:12.528
# ::node	0	probable	15-16
# ::node	0.0	clash-01	13-14
# ::node	0.0.0	side	21-22
# ::node	0.0.0.0	country	24-25
# ::node	0.0.0.0.0	promise-01	4-5
# ::node	0.0.0.0.0.0	temporal-quantity	1-2
# ::node	0.0.0.0.0.0.0	year	1-2
# ::node	0.0.0.0.0.0.0.0	this	0-1
# ::node	0.0.0.0.0.1	final	3-4
# ::node	0.0.0.1	2	17-18
# ::root	0	probable
(p / probable 
      :ARG1-of (c2 / clash-01 
            :ARG0 (s / side 
                  :part-of (c / country 
                        :ARG0-of (p2 / promise-01 
                              :ARG1 (t / temporal-quantity 
                                    :unit (y / year 
                                          :mod (t2 / this))) 
                              :mod (f / final))) 
                  :quant 2)))

# ::snt japan has promised to spend an extra 35 billion on recycling funds to developing countries which will extend its present programme until 1991
# ::tok japan has promised to spend an extra 35 billion on recycling funds to developing countries which will extend its present programme until 1991
# ::alignments 22-23|0.0.0.0.0.1.0.0+0.0.0.0.0.1.0 21-22|0.0.0.0.0.1 20-21|0.0.0.0.0.0 19-20|0.0.0.0.0.0.0 17-18|0.0.0.0.0 14-15|0.0.0.0 13-14|0.0.0.0.1 11-12|0.0.0.0.1.0 10-11|0.0.0.0.1.0.0 7-8|0.1 6-7|0 4-5|0.0 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:12.714
# ::node	0	extra	6-7
# ::node	0.0	spend-01	4-5
# ::node	0.0.0	promise-01	2-3
# ::node	0.0.0.0	country	14-15
# ::node	0.0.0.0.0	extend-01	17-18
# ::node	0.0.0.0.0.0	program	20-21
# ::node	0.0.0.0.0.0.0	present	19-20
# ::node	0.0.0.0.0.1	until	21-22
# ::node	0.0.0.0.0.1.0	date-entity	22-23
# ::node	0.0.0.0.0.1.0.0	1991	22-23
# ::node	0.0.0.0.1	develop-02	13-14
# ::node	0.0.0.0.1.0	fund	11-12
# ::node	0.0.0.0.1.0.0	recycle-01	10-11
# ::node	0.1	35	7-8
# ::root	0	extra
# ::edge	date-entity	year	1991	0.0.0.0.0.1.0	0.0.0.0.0.1.0.0	
# ::edge	develop-02	ARG0	fund	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	develop-02	ARG1	country	0.0.0.0.1	0.0.0.0	
# ::edge	extend-01	ARG0	country	0.0.0.0.0	0.0.0.0	
# ::edge	extend-01	ARG1	program	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	extend-01	ARG2	until	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	extra	mod	35	0	0.1	
# ::edge	fund	purpose	recycle-01	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	program	time	present	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	promise-01	ARG1	spend-01	0.0.0	0.0	
# ::edge	promise-01	ARG2	country	0.0.0	0.0.0.0	
# ::edge	spend-01	ARG1	extra	0.0	0	
# ::edge	until	op1	date-entity	0.0.0.0.0.1	0.0.0.0.0.1.0	
(e2 / extra 
      :ARG1-of (s / spend-01 
            :ARG1-of (p3 / promise-01 
                  :ARG2 (c / country 
                        :ARG0-of (e / extend-01 
                              :ARG1 (p / program 
                                    :time (p2 / present)) 
                              :ARG2 (u / until 
                                    :op1 (d / date-entity 
                                          :year 1991))) 
                        :ARG1-of (d2 / develop-02 
                              :ARG0 (f / fund 
                                    :purpose (r / recycle-01)))))) 
      :mod 35)

# ::snt the party has promised to retire them all within the next decade confident that with an average age well over 80 few will survive that long
# ::tok the party has promised to retire them all within the next decade confident that with an average age well over 80 few will survive that long
# ::alignments 23-24|0.0.0 21-22|0.0.0.0 20-21|0.1 18-19|0.2.0 17-18|0.0.0.1 12-13|0.2.1.1.0 11-12|0.2.1.1.1+0.2.1.1 10-11|0.2.1.1.1.0 8-9|0.2.1 7-8|0.2.1.0 5-6|0.2 3-4|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:13.010
# ::node	0	promise-01	3-4
# ::node	0.0	party	1-2
# ::node	0.0.0	survive-01	23-24
# ::node	0.0.0.0	few	21-22
# ::node	0.0.0.1	age-01	17-18
# ::node	0.1	80	20-21
# ::node	0.2	retire-01	5-6
# ::node	0.2.0	well	18-19
# ::node	0.2.1	within	8-9
# ::node	0.2.1.0	all	7-8
# ::node	0.2.1.1	temporal-quantity	11-12
# ::node	0.2.1.1.0	confident-41	12-13
# ::node	0.2.1.1.1	decade	11-12
# ::node	0.2.1.1.1.0	next	10-11
# ::root	0	promise-01
# ::edge	confident-41	ARG1	temporal-quantity	0.2.1.1.0	0.2.1.1	
# ::edge	decade	mod	next	0.2.1.1.1	0.2.1.1.1.0	
# ::edge	promise-01	ARG0	party	0	0.0	
# ::edge	promise-01	ARG1	80	0	0.1	
# ::edge	promise-01	ARG2	retire-01	0	0.2	
# ::edge	retire-01	ARG0	well	0.2	0.2.0	
# ::edge	retire-01	time	within	0.2	0.2.1	
# ::edge	survive-01	ARG0	party	0.0.0	0.0	
# ::edge	survive-01	ARG1	few	0.0.0	0.0.0.0	
# ::edge	survive-01	time	age-01	0.0.0	0.0.0.1	
# ::edge	temporal-quantity	unit	decade	0.2.1.1	0.2.1.1.1	
# ::edge	within	mod	all	0.2.1	0.2.1.0	
# ::edge	within	op1	temporal-quantity	0.2.1	0.2.1.1	
(p / promise-01 
      :ARG0 (p2 / party 
            :ARG0-of (s / survive-01 
                  :ARG1 (f / few) 
                  :time (a / age-01))) 
      :ARG1 80 
      :ARG2 (r / retire-01 
            :ARG0 (w / well) 
            :time (w2 / within 
                  :mod (a2 / all) 
                  :op1 (t / temporal-quantity 
                        :ARG1-of (c / confident-41) 
                        :unit (d / decade 
                              :mod (n / next))))))

# ::snt the students had been promised free time to see the sights
# ::tok the students had been promised free time to see the sights
# ::alignments 10-11|0.1.0 8-9|0.1 6-7|0.2 5-6|0.2.0 4-5|0 1-2|0.0.0+0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:13.031
# ::node	0	promise-01	4-5
# ::node	0.0	person	1-2
# ::node	0.0.0	study-01	1-2
# ::node	0.1	see-01	8-9
# ::node	0.1.0	sight-01	10-11
# ::node	0.2	time	6-7
# ::node	0.2.0	free-41	5-6
# ::root	0	promise-01
# ::edge	free-41	ARG1	time	0.2.0	0.2	
# ::edge	promise-01	ARG1	person	0	0.0	
# ::edge	promise-01	ARG2	see-01	0	0.1	
# ::edge	promise-01	time	time	0	0.2	
# ::edge	see-01	ARG1	sight-01	0.1	0.1.0	
# ::edge	study-01	ARG0	person	0.0.0	0.0	
(p / promise-01 
      :ARG1 (p2 / person 
            :ARG0-of (s3 / study-01)) 
      :ARG2 (s2 / see-01 
            :ARG1 (s / sight-01)) 
      :time (t / time 
            :ARG1-of (f / free-41)))

# ::snt eric latham the new chairman of st helens has promised money will be found to sign new players
# ::tok eric latham the new chairman of st helens has promised money will be found to sign new players
# ::alignments 17-18|0.0.0+0.0 16-17|0.0.1 13-14|0 10-11|0.1.0.0.0 9-10|0.1.0.0 4-5|0.1.0+0.1 3-4|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:13.089
# ::node	0	find-01	13-14
# ::node	0.0	person	17-18
# ::node	0.0.0	play-01	17-18
# ::node	0.0.1	new	16-17
# ::node	0.1	have-org-role-91	4-5
# ::node	0.1.0	chairman	4-5
# ::node	0.1.0.0	promise-01	9-10
# ::node	0.1.0.0.0	money	10-11
# ::node	0.1.1	new	3-4
# ::root	0	find-01
# ::edge	find-01	ARG0	person	0	0.0	
# ::edge	find-01	ARG1	have-org-role-91	0	0.1	
# ::edge	have-org-role-91	ARG2	chairman	0.1	0.1.0	
# ::edge	have-org-role-91	mod	new	0.1	0.1.1	
# ::edge	person	mod	new	0.0	0.0.1	
# ::edge	play-01	ARG0	person	0.0.0	0.0	
# ::edge	promise-01	ARG0	chairman	0.1.0.0	0.1.0	
# ::edge	promise-01	ARG1	money	0.1.0.0	0.1.0.0.0	
(f / find-01 
      :ARG0 (p / person 
            :ARG0-of (p2 / play-01) 
            :mod (n / new)) 
      :ARG1 (h / have-org-role-91 
            :ARG2 (c / chairman 
                  :ARG0-of (p3 / promise-01 
                        :ARG1 (m / money))) 
            :mod (n2 / new)))

# ::snt on this occasion as an added piquancy the festival promised to have a distinctly radical flavour
# ::tok on this occasion as an added piquancy the festival promised to have a distinctly radical flavour
# ::alignments 14-15|0.2.0.0 13-14|0.2.0 9-10|0 8-9|0.0 5-6|0.2 2-3|0.1 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:13.123
# ::node	0	promise-01	9-10
# ::node	0.0	festival	8-9
# ::node	0.1	occasion	2-3
# ::node	0.1.0	this	1-2
# ::node	0.2	add-01	5-6
# ::node	0.2.0	distinct	13-14
# ::node	0.2.0.0	radical	14-15
# ::root	0	promise-01
# ::edge	add-01	ARG0	distinct	0.2	0.2.0	
# ::edge	add-01	ARG1	promise-01	0.2	0	
# ::edge	occasion	mod	this	0.1	0.1.0	
# ::edge	promise-01	ARG0	festival	0	0.0	
# ::edge	promise-01	ARG1	occasion	0	0.1	
# ::edge	radical	degree	distinct	0.2.0.0	0.2.0	
(p / promise-01 
      :ARG0 (f / festival) 
      :ARG1 (o / occasion 
            :mod (t / this)) 
      :ARG1-of (a / add-01 
            :ARG0 (d / distinct 
                  :degree-of (r / radical))))

# ::snt then he promised west germany would be ready to offer assistance
# ::tok then he promised west germany would be ready to offer assistance
# ::alignments 10-11|0.1.0.0 9-10|0.1.0 7-8|0.1 3-4|0.2.0 2-3|0 1-2|0.0 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:13.142
# ::node	0	promise-01	2-3
# ::node	0.0	he	1-2
# ::node	0.1	ready-01	7-8
# ::node	0.1.0	offer-01	9-10
# ::node	0.1.0.0	assist-01	10-11
# ::node	0.2	then	0-1
# ::node	0.2.0	west	3-4
# ::root	0	promise-01
# ::edge	offer-01	ARG1	assist-01	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG0	he	0	0.0	
# ::edge	promise-01	ARG1	ready-01	0	0.1	
# ::edge	promise-01	time	then	0	0.2	
# ::edge	ready-01	ARG2	offer-01	0.1	0.1.0	
# ::edge	west	time	then	0.2.0	0.2	
(p / promise-01 
      :ARG0 (h / he) 
      :ARG1 (r / ready-01 
            :ARG2 (o / offer-01 
                  :ARG1 (a / assist-01))) 
      :time (t / then 
            :time-of (w / west)))

# ::snt her contract was completed but as with many others in her situation she was not sent home as promised
# ::tok her contract was completed but as with many others in her situation she was not sent home as promised
# ::alignments 18-19|0.0.0.0.0.0 16-17|0.0.0.0.0.0.1 15-16|0.0.0.0 12-13|0.0.0.0.0 11-12|0.0.0.0.0.0.0 8-9|0.0.0.0.0.0.0.0 7-8|0.0.0.0.0.0.0.0.0 4-5|0 3-4|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:13.343
# ::node	0	contrast-01	4-5
# ::node	0.0	complete-01	3-4
# ::node	0.0.0	contract-02	1-2
# ::node	0.0.0.0	send-01	15-16
# ::node	0.0.0.0.0	she	12-13
# ::node	0.0.0.0.0.0	promise-01	18-19
# ::node	0.0.0.0.0.0.0	situation	11-12
# ::node	0.0.0.0.0.0.0.0	other	8-9
# ::node	0.0.0.0.0.0.0.0.0	many	7-8
# ::node	0.0.0.0.0.0.1	home	16-17
# ::root	0	contrast-01
# ::edge	complete-01	ARG1	contract-02	0.0	0.0.0	
# ::edge	contract-02	ARG1	send-01	0.0.0	0.0.0.0	
# ::edge	contrast-01	ARG1	complete-01	0	0.0	
# ::edge	other	quant	many	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0	
# ::edge	promise-01	ARG0	she	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	ARG1	situation	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	promise-01	mod	home	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	send-01	ARG1	she	0.0.0.0	0.0.0.0.0	
# ::edge	situation	part	other	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
(c / contrast-01 
      :ARG1 (c2 / complete-01 
            :ARG1 (c3 / contract-02 
                  :ARG1 (s / send-01 
                        :ARG1 (s2 / she 
                              :ARG0-of (p / promise-01 
                                    :ARG1 (s3 / situation 
                                          :part (o / other 
                                                :quant (m / many))) 
                                    :mod (h / home)))))))

# ::snt but across the garishly painted railway bridge where all traffic was now prohibited the tube station promised infallible noise noise enough and to spare
# ::tok but across the garishly painted railway bridge where all traffic was now prohibited the tube station promised infallible noise noise enough and to spare
# ::alignments 23-24|0.1.2 21-22|0.1 20-21|0.1.1 19-20|0.1.0.1 18-19|0.1.0.1.0 16-17|0.1.0 15-16|0.1.0.0 14-15|0.1.0.0.0 12-13|0.0.0.0 11-12|0.0.0.0.1 9-10|0.0.0.0.0 8-9|0.0.0.0.0.0 6-7|0.0.0 5-6|0.0.0.1.0 4-5|0.0.0.1 1-2|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:14.064
# ::node	0	contrast-01	0-1
# ::node	0.0	across	1-2
# ::node	0.0.0	bridge	6-7
# ::node	0.0.0.0	prohibit-01	12-13
# ::node	0.0.0.0.0	traffic	9-10
# ::node	0.0.0.0.0.0	all	8-9
# ::node	0.0.0.0.1	now	11-12
# ::node	0.0.0.1	paint-03	4-5
# ::node	0.0.0.1.0	railway	5-6
# ::node	0.1	and	21-22
# ::node	0.1.0	promise-01	16-17
# ::node	0.1.0.0	station	15-16
# ::node	0.1.0.0.0	tube	14-15
# ::node	0.1.0.1	noise	19-20
# ::node	0.1.0.1.0	noise	18-19
# ::node	0.1.1	enough	20-21
# ::node	0.1.2	spare-02	23-24
# ::root	0	contrast-01
# ::edge	across	op1	bridge	0.0	0.0.0	
# ::edge	and	op1	promise-01	0.1	0.1.0	
# ::edge	and	op2	enough	0.1	0.1.1	
# ::edge	and	op3	spare-02	0.1	0.1.2	
# ::edge	contrast-01	ARG1	across	0	0.0	
# ::edge	contrast-01	ARG2	and	0	0.1	
# ::edge	noise	mod	noise	0.1.0.1	0.1.0.1.0	
# ::edge	paint-03	ARG1	bridge	0.0.0.1	0.0.0	
# ::edge	prohibit-01	ARG0	bridge	0.0.0.0	0.0.0	
# ::edge	prohibit-01	ARG1	traffic	0.0.0.0	0.0.0.0.0	
# ::edge	prohibit-01	time	now	0.0.0.0	0.0.0.0.1	
# ::edge	promise-01	ARG0	station	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG1	noise	0.1.0	0.1.0.1	
# ::edge	railway	mod	paint-03	0.0.0.1.0	0.0.0.1	
# ::edge	station	mod	tube	0.1.0.0	0.1.0.0.0	
# ::edge	traffic	quant	all	0.0.0.0.0	0.0.0.0.0.0	
(c / contrast-01 
      :ARG1 (a3 / across 
            :op1 (b / bridge 
                  :ARG0-of (p2 / prohibit-01 
                        :ARG1 (t2 / traffic 
                              :quant (a2 / all)) 
                        :time (n3 / now)) 
                  :ARG1-of (p3 / paint-03 
                        :mod-of (r / railway)))) 
      :ARG2 (a / and 
            :op1 (p / promise-01 
                  :ARG0 (s2 / station 
                        :mod (t / tube)) 
                  :ARG1 (n / noise 
                        :mod (n2 / noise))) 
            :op2 (e / enough) 
            :op3 (s / spare-02)))

# ::snt this was promised a long 10 years ago
# ::tok this was promised a long 10 years ago
# ::alignments 6-7|0.0.0.0+0.0.0 5-6|0.0 2-3|0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:14.076
# ::node	0	promise-01	2-3
# ::node	0.0	10	5-6
# ::node	0.0.0	temporal-quantity	6-7
# ::node	0.0.0.0	year	6-7
# ::node	0.1	this	0-1
# ::root	0	promise-01
# ::edge	promise-01	ARG0	10	0	0.0	
# ::edge	promise-01	ARG1	this	0	0.1	
# ::edge	temporal-quantity	quant	10	0.0.0	0.0	
# ::edge	temporal-quantity	unit	year	0.0.0	0.0.0.0	
(p / promise-01 
      :ARG0 (1 / 10 
            :quant-of (t / temporal-quantity 
                  :unit (y / year))) 
      :ARG1 (t2 / this))

# ::snt  she admitted that the party machine was now likely to deliver the vote for a switch in policy at conference and she promised as a front bench spokeswoman to abide by the partys democratic decisions
# ::tok she admitted that the party machine was now likely to deliver the vote for a switch in policy at conference and she promised as a front bench spokeswoman to abide by the partys democratic decisions
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:14.077
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt   well have a look he promised
# ::tok well have a look he promised
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:14.077
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt they promised to keep themselves only unto themselves in sickness and in health so long as they both should live
# ::tok they promised to keep themselves only unto themselves in sickness and in health so long as they both should live
# ::alignments 19-20|0.2.0 18-19|0.2 17-18|0.2.0.0.0 16-17|0.2.0.0 13-14|0.2.0.1.1 12-13|0.1 10-11|0 9-10|0.0 5-6|0.2.0.1.1.0 1-2|0.2.0.1 0-1|0.2.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:14.144
# ::node	0	and	10-11
# ::node	0.0	sickness	9-10
# ::node	0.1	health	12-13
# ::node	0.2	recommend-01	18-19
# ::node	0.2.0	live-01	19-20
# ::node	0.2.0.0	they	16-17
# ::node	0.2.0.0.0	both	17-18
# ::node	0.2.0.1	promise-01	1-2
# ::node	0.2.0.1.0	they	0-1
# ::node	0.2.0.1.1	so	13-14
# ::node	0.2.0.1.1.0	only	5-6
# ::root	0	and
# ::edge	and	op1	sickness	0	0.0	
# ::edge	and	op2	health	0	0.1	
# ::edge	and	op3	recommend-01	0	0.2	
# ::edge	live-01	ARG0	they	0.2.0	0.2.0.0	
# ::edge	live-01	ARG1	promise-01	0.2.0	0.2.0.1	
# ::edge	promise-01	ARG0	they	0.2.0.1	0.2.0.1.0	
# ::edge	promise-01	ARG1	so	0.2.0.1	0.2.0.1.1	
# ::edge	recommend-01	ARG1	live-01	0.2	0.2.0	
# ::edge	so	mod	only	0.2.0.1.1	0.2.0.1.1.0	
# ::edge	they	mod	both	0.2.0.0	0.2.0.0.0	
(a / and 
      :op1 (s2 / sickness) 
      :op2 (h / health) 
      :op3 (r / recommend-01 
            :ARG1 (l / live-01 
                  :ARG0 (t / they 
                        :mod (b / both)) 
                  :ARG1 (p / promise-01 
                        :ARG0 (t2 / they) 
                        :ARG1 (s / so 
                              :mod (o / only))))))

# ::snt a just cause and it promises later electoral success provided everything is thrown at the enemy and his swift defeat is assured
# ::tok a just cause and it promises later electoral success provided everything is thrown at the enemy and his swift defeat is assured
# ::alignments 21-22|0.2.0.1.0.0 19-20|0.2.0.1.0.0.0 18-19|0.2.0.1.0.0.0.1 16-17|0.2.0.1.0 15-16|0.2.0.1.0.0.0.0.0+0.2.0.1.0.0.0.0 12-13|0.2.0.1.0.1 10-11|0.2.0.1.0.1.0 9-10|0.2.0.1 8-9|0.2.0.0 7-8|0.2.0.0.0 6-7|0.2.0.0.1 5-6|0.2.0 4-5|0.0 3-4|0.2 2-3|0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:14.592
# ::node	0	cause-01	2-3
# ::node	0.0	it	4-5
# ::node	0.1	just	1-2
# ::node	0.2	and	3-4
# ::node	0.2.0	promise-01	5-6
# ::node	0.2.0.0	succeed-01	8-9
# ::node	0.2.0.0.0	elect-01	7-8
# ::node	0.2.0.0.1	late	6-7
# ::node	0.2.0.1	provide-01	9-10
# ::node	0.2.0.1.0	and	16-17
# ::node	0.2.0.1.0.0	assure-01	21-22
# ::node	0.2.0.1.0.0.0	defeat-01	19-20
# ::node	0.2.0.1.0.0.0.0	have-rel-role-91	15-16
# ::node	0.2.0.1.0.0.0.0.0	enemy	15-16
# ::node	0.2.0.1.0.0.0.1	swift	18-19
# ::node	0.2.0.1.0.1	throw-01	12-13
# ::node	0.2.0.1.0.1.0	everything	10-11
# ::root	0	cause-01
# ::edge	and	op1	cause-01	0.2	0	
# ::edge	and	op1	throw-01	0.2.0.1.0	0.2.0.1.0.1	
# ::edge	assure-01	ARG0	and	0.2.0.1.0.0	0.2.0.1.0	
# ::edge	assure-01	ARG1	defeat-01	0.2.0.1.0.0	0.2.0.1.0.0.0	
# ::edge	cause-01	ARG1	it	0	0.0	
# ::edge	cause-01	mod	just	0	0.1	
# ::edge	defeat-01	ARG2	have-rel-role-91	0.2.0.1.0.0.0	0.2.0.1.0.0.0.0	
# ::edge	defeat-01	mod	swift	0.2.0.1.0.0.0	0.2.0.1.0.0.0.1	
# ::edge	have-rel-role-91	ARG2	enemy	0.2.0.1.0.0.0.0	0.2.0.1.0.0.0.0.0	
# ::edge	promise-01	ARG0	and	0.2.0	0.2	
# ::edge	promise-01	ARG1	succeed-01	0.2.0	0.2.0.0	
# ::edge	provide-01	ARG1	promise-01	0.2.0.1	0.2.0	
# ::edge	provide-01	manner	and	0.2.0.1	0.2.0.1.0	
# ::edge	succeed-01	mod	elect-01	0.2.0.0	0.2.0.0.0	
# ::edge	succeed-01	time	late	0.2.0.0	0.2.0.0.1	
# ::edge	throw-01	ARG1	everything	0.2.0.1.0.1	0.2.0.1.0.1.0	
(c / cause-01 
      :ARG1 (i / it) 
      :mod (j / just) 
      :op-of (a3 / and 
            :ARG0-of (p2 / promise-01 
                  :ARG1 (s2 / succeed-01 
                        :mod (e3 / elect-01) 
                        :time (l / late)) 
                  :ARG1-of (p / provide-01 
                        :manner (a2 / and 
                              :ARG0-of (a / assure-01 
                                    :ARG1 (d / defeat-01 
                                          :ARG2 (h / have-rel-role-91 
                                                :ARG2 (e / enemy)) 
                                          :mod (s / swift))) 
                              :op1 (t / throw-01 
                                    :ARG1 (e2 / everything)))))))

# ::snt in west germany an interior ministry official promised last night that no one would be turned back from the east
# ::tok in west germany an interior ministry official promised last night that no one would be turned back from the east
# ::alignments 19-20|0.1.3 16-17|0.1.0 11-12|0.0 9-10|0.2 8-9|0.2.0 7-8|0 6-7|0.1.2+0.1 4-6|0.1.1.0.0+0.1.1.0.1+0.1.1.0+0.1.1 1-2|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:14.720
# ::node	0	promise-01	7-8
# ::node	0.0	-	11-12
# ::node	0.1	have-org-role-91	6-7
# ::node	0.1.0	back	16-17
# ::node	0.1.0.0	west	1-2
# ::node	0.1.1	government-organization	4-6
# ::node	0.1.1.0	name	4-6
# ::node	0.1.1.0.0	"Interior"	4-6
# ::node	0.1.1.0.1	"Ministry"	4-6
# ::node	0.1.2	official	6-7
# ::node	0.1.3	east	19-20
# ::node	0.2	night	9-10
# ::node	0.2.0	last	8-9
# ::root	0	promise-01
# ::edge	back	poss	west	0.1.0	0.1.0.0	
# ::edge	government-organization	name	name	0.1.1	0.1.1.0	
# ::edge	have-org-role-91	ARG0	back	0.1	0.1.0	
# ::edge	have-org-role-91	ARG1	government-organization	0.1	0.1.1	
# ::edge	have-org-role-91	ARG2	official	0.1	0.1.2	
# ::edge	have-org-role-91	mod	east	0.1	0.1.3	
# ::edge	name	op1	"Interior"	0.1.1.0	0.1.1.0.0	
# ::edge	name	op2	"Ministry"	0.1.1.0	0.1.1.0.1	
# ::edge	night	mod	last	0.2	0.2.0	
# ::edge	promise-01	ARG0	-	0	0.0	
# ::edge	promise-01	ARG1	have-org-role-91	0	0.1	
# ::edge	promise-01	time	night	0	0.2	
(p / promise-01 
      :ARG0 (- / -) 
      :ARG1 (h / have-org-role-91 
            :ARG0 (b / back 
                  :poss (w / west)) 
            :ARG1 (g / government-organization 
                  :name (n2 / name 
                        :op1 "Interior" 
                        :op2 "Ministry")) 
            :ARG2 (o / official) 
            :mod (e / east)) 
      :time (n / night 
            :mod (l / last)))

# ::snt whitehall and peking did a grubby deal britain promised to hand all of hong kong over to china in 1997 peking pledged that the colony would enjoy a new status as an autonomous special administrative region of china governed by its own people under a democratic system enshrining the rule of law and the commonlaw justice system
# ::tok whitehall and peking did a grubby deal britain promised to hand all of hong kong over to china in 1997 peking pledged that the colony would enjoy a new status as an autonomous special administrative region of china governed by its own people under a democratic system enshrining the rule of law and the commonlaw justice system
# ::alignments 56-57|0.0.0.0.0.0.1.0.2.0.0.0 55-56|0.0.0.0.0.0.1.0.2.0.0.0.0 52-53|0.0.0.0.0.0.1.0.2.0.0 51-52|0.0.0.0.0.0.1.0.2.0 49-50|0.0.0.0.0.0.1.0.2 46-47|0.0.0.0.0.0.2 45-46|0.0.0.0.0.0.0.0 38-39|0.0.0.0 37-38|0.0.0.1.0+0.0.0.1+0.0.0 35-36|0.0 34-35|0.0.2 33-34|0.0.1 32-33|0 29-30|0.0.0.0.0 28-29|0.0.0.0.0.1 26-27|0.0.0.0.0.0 24-25|0.0.0.0.0.0.0 21-22|0.0.0.0.0.0.1 19-20|0.0.0.0.0.0.1.0.0.0.0+0.0.0.0.0.0.1.0.0.0 17-18|0.0.0.0.0.0.1.1.0.0+0.0.0.0.0.0.1.1.0+0.0.0.0.0.0.1.1 13-15|0.0.0.0.0.2.0.0+0.0.0.0.0.2.0.1+0.0.0.0.0.2.0+0.0.0.0.0.2 11-12|0.0.2.0 10-11|0.0.0.0.0.0.1.0.0.1 8-9|0.0.0.0.0.0.1.0.0 7-8|0.0.0.0.0.0.1.0.3.0+0.0.0.0.0.0.1.0.3+0.0.0.0.0.0.1.0 6-7|0.0.0.0.0.0.1.0.1 1-2|0.0.0.0.0.0.1.0.2.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:17.214
# ::node	0	autonomy	32-33
# ::node	0.0	region	35-36
# ::node	0.0.0	country	37-38
# ::node	0.0.0.0	govern-01	38-39
# ::node	0.0.0.0.0	status	29-30
# ::node	0.0.0.0.0.0	enjoy-01	26-27
# ::node	0.0.0.0.0.0.0	colony	24-25
# ::node	0.0.0.0.0.0.0.0	democracy	45-46
# ::node	0.0.0.0.0.0.1	pledge-01	21-22
# ::node	0.0.0.0.0.0.1.0	country	7-8
# ::node	0.0.0.0.0.0.1.0.0	promise-01	8-9
# ::node	0.0.0.0.0.0.1.0.0.0	date-entity	19-20
# ::node	0.0.0.0.0.0.1.0.0.0.0	1997	19-20
# ::node	0.0.0.0.0.0.1.0.0.1	hand	10-11
# ::node	0.0.0.0.0.0.1.0.1	deal-01	6-7
# ::node	0.0.0.0.0.0.1.0.2	rule-03	49-50
# ::node	0.0.0.0.0.0.1.0.2.0	law	51-52
# ::node	0.0.0.0.0.0.1.0.2.0.0	and	52-53
# ::node	0.0.0.0.0.0.1.0.2.0.0.0	system	56-57
# ::node	0.0.0.0.0.0.1.0.2.0.0.0.0	justice	55-56
# ::node	0.0.0.0.0.0.1.0.2.1	and	1-2
# ::node	0.0.0.0.0.0.1.0.3	name	7-8
# ::node	0.0.0.0.0.0.1.0.3.0	"Britain"	7-8
# ::node	0.0.0.0.0.0.1.1	country	17-18
# ::node	0.0.0.0.0.0.1.1.0	name	17-18
# ::node	0.0.0.0.0.0.1.1.0.0	"China"	17-18
# ::node	0.0.0.0.0.0.2	system	46-47
# ::node	0.0.0.0.0.1	new	28-29
# ::node	0.0.0.0.0.2	country	13-15
# ::node	0.0.0.0.0.2.0	name	13-15
# ::node	0.0.0.0.0.2.0.0	"kong"	13-15
# ::node	0.0.0.0.0.2.0.1	"hong"	13-15
# ::node	0.0.0.1	name	37-38
# ::node	0.0.0.1.0	"China"	37-38
# ::node	0.0.1	special	33-34
# ::node	0.0.2	administrate-01	34-35
# ::node	0.0.2.0	all	11-12
# ::root	0	autonomy
(a3 / autonomy 
      :mod-of (r2 / region 
            :location (c / country 
                  :ARG1-of (g / govern-01 
                        :ARG0 (s4 / status 
                              :ARG1-of (e / enjoy-01 
                                    :ARG0 (c2 / colony 
                                          :mod-of (d / democracy)) 
                                    :ARG1-of (p / pledge-01 
                                          :ARG0 (c5 / country 
                                                :ARG0-of (p2 / promise-01 
                                                      :ARG1 (d2 / date-entity 
                                                            :year 1997) 
                                                      :ARG2 (h / hand)) 
                                                :ARG0-of (d3 / deal-01) 
                                                :ARG1-of (r / rule-03 
                                                      :ARG0 (l / law 
                                                            :op-of (a / and 
                                                                  :op1 (s / system 
                                                                        :mod (j / justice)))) 
                                                      :op-of (a5 / and)) 
                                                :name (n5 / name 
                                                      :op1 "Britain")) 
                                          :consist (c3 / country 
                                                :name (n3 / name 
                                                      :op1 "China"))) 
                                    :op-of (s2 / system)) 
                              :mod (n2 / new) 
                              :poss (c4 / country 
                                    :name (n4 / name 
                                          :op1 "kong" 
                                          :op2 "hong")))) 
                  :name (n / name 
                        :op1 "China")) 
            :mod (s3 / special) 
            :mod (a2 / administrate-01 
                  :ARG0 (a4 / all))))

# ::snt hed promised to relieve andy ramsay at the secondhand book stall
# ::tok hed promised to relieve andy ramsay at the secondhand book stall
# ::alignments 9-10|0.1 3-4|0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:17.225
# ::node	0	promise-01	1-2
# ::node	0.0	relieve-01	3-4
# ::node	0.1	book	9-10
# ::root	0	promise-01
# ::edge	book	op1	promise-01	0.1	0	
# ::edge	promise-01	ARG2	relieve-01	0	0.0	
(p / promise-01 
      :ARG2 (r / relieve-01) 
      :op-of (b / book))

# ::snt chancellor kohl has promised generous aid to support reforms in east germany
# ::tok chancellor kohl has promised generous aid to support reforms in east germany
# ::alignments 10-11|0.0.1.0 8-9|0.0.1 7-8|0.0 5-6|0.0.0 4-5|0.0.0.0 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:17.246
# ::node	0	promise-01	3-4
# ::node	0.0	support-01	7-8
# ::node	0.0.0	aid-01	5-6
# ::node	0.0.0.0	generous-41	4-5
# ::node	0.0.1	reform-01	8-9
# ::node	0.0.1.0	east	10-11
# ::root	0	promise-01
# ::edge	generous-41	ARG1	aid-01	0.0.0.0	0.0.0	
# ::edge	promise-01	ARG2	support-01	0	0.0	
# ::edge	reform-01	mod	east	0.0.1	0.0.1.0	
# ::edge	support-01	ARG0	aid-01	0.0	0.0.0	
# ::edge	support-01	ARG1	reform-01	0.0	0.0.1	
(p / promise-01 
      :ARG2 (s / support-01 
            :ARG0 (a / aid-01 
                  :ARG1-of (g / generous-41)) 
            :ARG1 (r / reform-01 
                  :mod (e / east))))

# ::snt law a canadian promised tranquillity  astor an american made the times once more respectable dash
# ::tok law a canadian promised tranquillity astor an american made the times once more respectable dash
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:17.247
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt what a time to fall sick wont be long promised hazel coming back
# ::tok what a time to fall sick wont be long promised hazel coming back
# ::alignments 12-13|0.1 9-10|0 5-6|0.1.0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:17.260
# ::node	0	promise-01	9-10
# ::node	0.0	time	2-3
# ::node	0.1	back	12-13
# ::node	0.1.0	sick	5-6
# ::root	0	promise-01
# ::edge	back	mod	sick	0.1	0.1.0	
# ::edge	promise-01	ARG0	time	0	0.0	
# ::edge	promise-01	time	back	0	0.1	
(p / promise-01 
      :ARG0 (t / time) 
      :time (b / back 
            :mod (s / sick)))

# ::snt one of their players lawrie pearson has promised the plasticpitch practitioners from the third a rough ride especially if the wind blows off the sea and a spot of rain makes our ground heavy
# ::tok one of their players lawrie pearson has promised the plasticpitch practitioners from the third a rough ride especially if the wind blows off the sea and a spot of rain makes our ground heavy
# ::alignments 33-34|0.0.0.4.0.0 32-33|0.0.0.4.0.0.0 29-30|0.0.0.4.0 27-28|0.0.0.4 25-26|0.0.0 24-25|0.0.0.2.0 22-23|0.0.0.2 20-21|0.0.0.1 17-18|0.0.0.0 16-17|0.0 15-16|0.0.1 7-8|0 3-4|0.0.0.3.0+0.0.0.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:17.417
# ::node	0	promise-01	7-8
# ::node	0.0	ride-01	16-17
# ::node	0.0.0	and	25-26
# ::node	0.0.0.0	especially	17-18
# ::node	0.0.0.1	wind	20-21
# ::node	0.0.0.2	off	22-23
# ::node	0.0.0.2.0	sea	24-25
# ::node	0.0.0.3	person	3-4
# ::node	0.0.0.3.0	play-01	3-4
# ::node	0.0.0.4	spot	27-28
# ::node	0.0.0.4.0	rain-01	29-30
# ::node	0.0.0.4.0.0	heavy	33-34
# ::node	0.0.0.4.0.0.0	ground	32-33
# ::node	0.0.1	rough	15-16
# ::root	0	promise-01
# ::edge	and	mod	especially	0.0.0	0.0.0.0	
# ::edge	and	mod	wind	0.0.0	0.0.0.1	
# ::edge	and	op1	person	0.0.0	0.0.0.3	
# ::edge	and	op2	spot	0.0.0	0.0.0.4	
# ::edge	heavy	location	ground	0.0.0.4.0.0	0.0.0.4.0.0.0	
# ::edge	heavy	op1	rain-01	0.0.0.4.0.0	0.0.0.4.0	
# ::edge	off	op1	sea	0.0.0.2	0.0.0.2.0	
# ::edge	off	op2	and	0.0.0.2	0.0.0	
# ::edge	play-01	ARG0	person	0.0.0.3.0	0.0.0.3	
# ::edge	promise-01	ARG1	ride-01	0	0.0	
# ::edge	ride-01	ARG1	and	0.0	0.0.0	
# ::edge	ride-01	mod	rough	0.0	0.0.1	
# ::edge	spot	topic	rain-01	0.0.0.4	0.0.0.4.0	
(p / promise-01 
      :ARG1 (r2 / ride-01 
            :ARG1 (a / and 
                  :mod (e / especially) 
                  :mod (w / wind) 
                  :op-of (o / off 
                        :op1 (s2 / sea)) 
                  :op1 (p2 / person 
                        :ARG0-of (p3 / play-01)) 
                  :op2 (s / spot 
                        :topic (r / rain-01 
                              :op-of (h / heavy 
                                    :location (g / ground))))) 
            :mod (r3 / rough)))

# ::snt as they left the embassy those who had arrived in cars were invited to leave their keys and in return were promised that their vehicles would be brought eventually to the west
# ::tok as they left the embassy those who had arrived in cars were invited to leave their keys and in return were promised that their vehicles would be brought eventually to the west
# ::alignments 31-32|0.1.1.0.0.0 28-29|0.1.0 24-25|0.1.2.0.1 21-22|0.1.2.0 17-18|0.1.2 16-17|0.1.1 14-15|0.1 12-13|0 10-11|0.1.1.0 8-9|0.1.1.0.0 4-5|0.1.2.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:17.510
# ::node	0	invite-01	12-13
# ::node	0.0	they	1-2
# ::node	0.1	leave-01	14-15
# ::node	0.1.0	eventual	28-29
# ::node	0.1.1	key	16-17
# ::node	0.1.1.0	car	10-11
# ::node	0.1.1.0.0	arrive-01	8-9
# ::node	0.1.1.0.0.0	west	31-32
# ::node	0.1.2	and	17-18
# ::node	0.1.2.0	promise-01	21-22
# ::node	0.1.2.0.0	embassy	4-5
# ::node	0.1.2.0.1	vehicle	24-25
# ::root	0	invite-01
# ::edge	and	op1	leave-01	0.1.2	0.1	
# ::edge	and	op2	promise-01	0.1.2	0.1.2.0	
# ::edge	arrive-01	ARG1	west	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	arrive-01	ARG4	car	0.1.1.0.0	0.1.1.0	
# ::edge	invite-01	ARG0	they	0	0.0	
# ::edge	invite-01	ARG1	leave-01	0	0.1	
# ::edge	key	poss	car	0.1.1	0.1.1.0	
# ::edge	leave-01	ARG0	eventual	0.1	0.1.0	
# ::edge	leave-01	ARG1	key	0.1	0.1.1	
# ::edge	promise-01	ARG0	embassy	0.1.2.0	0.1.2.0.0	
# ::edge	promise-01	ARG1	vehicle	0.1.2.0	0.1.2.0.1	
(i / invite-01 
      :ARG0 (t / they) 
      :ARG1 (l / leave-01 
            :ARG0 (e / eventual) 
            :ARG1 (k / key 
                  :poss (c / car 
                        :ARG4-of (a2 / arrive-01 
                              :ARG1 (w / west)))) 
            :op-of (a / and 
                  :op1 (p / promise-01 
                        :ARG0 (e2 / embassy) 
                        :ARG1 (v / vehicle)))))

# ::snt have promised superego that this echoing afternoon will be packed with domestic and professional toil
# ::tok have promised superego that this echoing afternoon will be packed with domestic and professional toil
# ::alignments 13-14|0.0.1.0 12-13|0 11-12|0.1 9-10|0.0 6-7|0.0.0 4-5|0.0.0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:17.545
# ::node	0	and	12-13
# ::node	0.0	pack-01	9-10
# ::node	0.0.0	afternoon	6-7
# ::node	0.0.0.0	this	4-5
# ::node	0.0.1	promise-01	1-2
# ::node	0.0.1.0	professional	13-14
# ::node	0.1	domestic	11-12
# ::root	0	and
# ::edge	afternoon	mod	this	0.0.0	0.0.0.0	
# ::edge	and	op1	domestic	0	0.1	
# ::edge	pack-01	ARG1	afternoon	0.0	0.0.0	
# ::edge	pack-01	ARG2	and	0.0	0	
# ::edge	promise-01	ARG0	professional	0.0.1	0.0.1.0	
# ::edge	promise-01	ARG1	pack-01	0.0.1	0.0	
(a / and 
      :ARG2-of (p2 / pack-01 
            :ARG1 (a2 / afternoon 
                  :mod (t / this)) 
            :ARG1-of (p3 / promise-01 
                  :ARG0 (p / professional))) 
      :op1 (d / domestic))

# ::snt promise me youll never leave me, i promise she whispered
# ::tok promise me youll never leave me , i promise she whispered
# ::alignments 10-11|0.1 9-10|0.1.0 8-9|0 7-8|0.0 4-5|0.0.0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:17.642
# ::node	0	promise-01	8-9
# ::node	0.0	i	7-8
# ::node	0.0.0	promise-01	0-1
# ::node	0.0.0.0	leave-01	4-5
# ::node	0.1	whisper-01	10-11
# ::node	0.1.0	she	9-10
# ::root	0	promise-01
# ::edge	promise-01	ARG0	i	0	0.0	
# ::edge	promise-01	ARG0	i	0.0.0	0.0	
# ::edge	promise-01	ARG1	leave-01	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	whisper-01	0	0.1	
# ::edge	whisper-01	ARG0	she	0.1	0.1.0	
(p / promise-01 
      :ARG0 (i / i 
            :ARG0-of (p2 / promise-01 
                  :ARG1 (l / leave-01))) 
      :ARG1 (w / whisper-01 
            :ARG0 (s / she)))

# ::snt we suspected her of having let the side down by promising all sorts of privileges and services wives werent supposed to deliver any more
# ::tok we suspected her of having let the side down by promising all sorts of privileges and services wives werent supposed to deliver any more
# ::alignments 22-23|0.0.1 21-22|0.0 19-20|0 16-17|0.1.0.1 15-16|0.1.0 14-15|0.1.0.0 12-13|0.0.0 11-12|0.0.0.0 10-11|0.1 8-9|0.1.2 7-8|0.1.1.0 5-6|0.1.1 1-2|0.1.1.1 0-1|0.1.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:17.794
# ::node	0	suppose-02	19-20
# ::node	0.0	deliver-01	21-22
# ::node	0.0.0	sort	12-13
# ::node	0.0.0.0	all	11-12
# ::node	0.0.1	any	22-23
# ::node	0.1	promise-01	10-11
# ::node	0.1.0	and	15-16
# ::node	0.1.0.0	privilege	14-15
# ::node	0.1.0.1	service	16-17
# ::node	0.1.1	let-01	5-6
# ::node	0.1.1.0	side	7-8
# ::node	0.1.1.1	suspect-01	1-2
# ::node	0.1.1.1.0	we	0-1
# ::node	0.1.2	down	8-9
# ::root	0	suppose-02
# ::edge	and	op1	privilege	0.1.0	0.1.0.0	
# ::edge	and	op2	service	0.1.0	0.1.0.1	
# ::edge	deliver-01	ARG0	sort	0.0	0.0.0	
# ::edge	deliver-01	ARG2	any	0.0	0.0.1	
# ::edge	let-01	ARG1	side	0.1.1	0.1.1.0	
# ::edge	let-01	manner	promise-01	0.1.1	0.1	
# ::edge	promise-01	ARG1	and	0.1	0.1.0	
# ::edge	promise-01	mod	down	0.1	0.1.2	
# ::edge	promise-01	purpose	suppose-02	0.1	0	
# ::edge	sort	mod	all	0.0.0	0.0.0.0	
# ::edge	suppose-02	ARG2	deliver-01	0	0.0	
# ::edge	suspect-01	ARG0	we	0.1.1.1	0.1.1.1.0	
# ::edge	suspect-01	ARG1	let-01	0.1.1.1	0.1.1	
(s / suppose-02 
      :ARG2 (d / deliver-01 
            :ARG0 (s3 / sort 
                  :mod (a3 / all)) 
            :ARG2 (a / any)) 
      :purpose-of (p2 / promise-01 
            :ARG1 (a2 / and 
                  :op1 (p / privilege) 
                  :op2 (s2 / service)) 
            :manner-of (l / let-01 
                  :ARG1 (s4 / side) 
                  :ARG1-of (s5 / suspect-01 
                        :ARG0 (w / we))) 
            :mod (d2 / down)))

# ::snt regarded as the architect of chiles relative economic stability mr buchi promised jobs education and material gains
# ::tok regarded as the architect of chiles relative economic stability mr buchi promised jobs education and material gains
# ::alignments 15-16|0.2 14-15|0 13-14|0.1.1 12-13|0.1.2 11-12|0.1 8-9|0.1.0 7-8|0.1.1.0.0 6-7|0.1.1.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:17.895
# ::node	0	and	14-15
# ::node	0.0	regard-01	0-1
# ::node	0.1	promise-01	11-12
# ::node	0.1.0	stability	8-9
# ::node	0.1.1	educate-01	13-14
# ::node	0.1.1.0	relative	6-7
# ::node	0.1.1.0.0	economy	7-8
# ::node	0.1.2	job	12-13
# ::node	0.2	material	15-16
# ::root	0	and
# ::edge	and	op1	promise-01	0	0.1	
# ::edge	and	op2	material	0	0.2	
# ::edge	economy	degree	relative	0.1.1.0.0	0.1.1.0	
# ::edge	educate-01	ARG1	relative	0.1.1	0.1.1.0	
# ::edge	promise-01	ARG0	stability	0.1	0.1.0	
# ::edge	promise-01	ARG1	educate-01	0.1	0.1.1	
# ::edge	promise-01	ARG2	job	0.1	0.1.2	
# ::edge	regard-01	ARG0	and	0.0	0	
(a / and 
      :ARG0-of (r2 / regard-01) 
      :op1 (p / promise-01 
            :ARG0 (s / stability) 
            :ARG1 (e / educate-01 
                  :ARG1 (r / relative 
                        :degree-of (e2 / economy))) 
            :ARG2 (j / job)) 
      :op2 (m / material))

# ::snt this evening he was in luck or so it promised
# ::tok this evening he was in luck or so it promised
# ::alignments 9-10|0.0.0 8-9|0.0.0.1 7-8|0.0.0.2 6-7|0.0 5-6|0 2-3|0.0.0.0 1-2|0.0.0.0.0 0-1|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:17.929
# ::node	0	luck	5-6
# ::node	0.0	or	6-7
# ::node	0.0.0	promise-01	9-10
# ::node	0.0.0.0	he	2-3
# ::node	0.0.0.0.0	evening	1-2
# ::node	0.0.0.0.0.0	this	0-1
# ::node	0.0.0.1	it	8-9
# ::node	0.0.0.2	so	7-8
# ::root	0	luck
(l / luck 
      :op-of (o / or 
            :op1 (p / promise-01 
                  :ARG0 (h / he 
                        :domain-of (e / evening 
                              :mod (t / this))) 
                  :ARG1 (i / it) 
                  :op-of (s / so))))

# ::snt but again the state sector is obliged to come to some kind of rescue for a law was passed last year promising grants of about 500 million towards all world cuprelated hotel improvement schemes
# ::tok but again the state sector is obliged to come to some kind of rescue for a law was passed last year promising grants of about 500 million towards all world cuprelated hotel improvement schemes
# ::alignments 33-34|0.2.2.1 32-33|0.2.2.1.0 31-32|0.2.2.1.0.0 29-30|0.2.2.1.0.1 28-29|0.2.2.1.1 25-26|0.0 22-23|0.2.2 21-22|0.2 20-21|0.1.0 19-20|0.1.0.0 16-17|0.2.1 13-14|0.2.0.1 11-12|0.2.0 10-11|0.2.0.0 6-7|0.1 4-5|0.1.1 3-4|0.1.1.0 1-2|0.2.2.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:18.368
# ::node	0	contrast-01	0-1
# ::node	0.0	500	25-26
# ::node	0.1	oblige-02	6-7
# ::node	0.1.0	year	20-21
# ::node	0.1.0.0	last	19-20
# ::node	0.1.1	sector	4-5
# ::node	0.1.1.0	state	3-4
# ::node	0.2	promise-01	21-22
# ::node	0.2.0	kind	11-12
# ::node	0.2.0.0	some	10-11
# ::node	0.2.0.1	rescue-01	13-14
# ::node	0.2.1	law	16-17
# ::node	0.2.2	grant-01	22-23
# ::node	0.2.2.0	again	1-2
# ::node	0.2.2.1	scheme-01	33-34
# ::node	0.2.2.1.0	improve-01	32-33
# ::node	0.2.2.1.0.0	hotel	31-32
# ::node	0.2.2.1.0.1	world	29-30
# ::node	0.2.2.1.1	all	28-29
# ::root	0	contrast-01
# ::edge	contrast-01	ARG0	500	0	0.0	
# ::edge	contrast-01	ARG1	oblige-02	0	0.1	
# ::edge	contrast-01	ARG2	promise-01	0	0.2	
# ::edge	grant-01	ARG0	again	0.2.2	0.2.2.0	
# ::edge	grant-01	ARG1	scheme-01	0.2.2	0.2.2.1	
# ::edge	improve-01	ARG0	hotel	0.2.2.1.0	0.2.2.1.0.0	
# ::edge	improve-01	ARG1	world	0.2.2.1.0	0.2.2.1.0.1	
# ::edge	kind	mod	some	0.2.0	0.2.0.0	
# ::edge	oblige-02	ARG0	year	0.1	0.1.0	
# ::edge	oblige-02	ARG1	sector	0.1	0.1.1	
# ::edge	promise-01	ARG0	kind	0.2	0.2.0	
# ::edge	promise-01	ARG1	law	0.2	0.2.1	
# ::edge	promise-01	ARG2	grant-01	0.2	0.2.2	
# ::edge	rescue-01	mod	kind	0.2.0.1	0.2.0	
# ::edge	scheme-01	ARG1	improve-01	0.2.2.1	0.2.2.1.0	
# ::edge	scheme-01	mod	all	0.2.2.1	0.2.2.1.1	
# ::edge	sector	mod	state	0.1.1	0.1.1.0	
# ::edge	year	mod	last	0.1.0	0.1.0.0	
(c / contrast-01 
      :ARG0 500 
      :ARG1 (o / oblige-02 
            :ARG0 (y / year 
                  :mod (l / last)) 
            :ARG1 (s3 / sector 
                  :mod (s4 / state))) 
      :ARG2 (p / promise-01 
            :ARG0 (k / kind 
                  :mod (s2 / some) 
                  :mod-of (r / rescue-01)) 
            :ARG1 (l2 / law) 
            :ARG2 (g / grant-01 
                  :ARG0 (a2 / again) 
                  :ARG1 (s / scheme-01 
                        :ARG1 (i / improve-01 
                              :ARG0 (h / hotel) 
                              :ARG1 (w / world)) 
                        :mod (a / all)))))

# ::snt and mr mawson warning against vigilante protection promised that all resources necessary would be deployed to stop attacks
# ::tok and mr mawson warning against vigilante protection promised that all resources necessary would be deployed to stop attacks
# ::alignments 17-18|0.0.1 16-17|0.0.1.0 14-15|0.0.1.0.1 10-11|0.0.1.0.0 9-10|0.0.1.0.0.0 7-8|0.0.0 6-7|0.0.0.0 3-4|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:18.523
# ::node	0	and	0-1
# ::node	0.0	warn-01	3-4
# ::node	0.0.0	promise-01	7-8
# ::node	0.0.0.0	protect-01	6-7
# ::node	0.0.1	attack-01	17-18
# ::node	0.0.1.0	stop-01	16-17
# ::node	0.0.1.0.0	resource	10-11
# ::node	0.0.1.0.0.0	all	9-10
# ::node	0.0.1.0.1	deploy-01	14-15
# ::root	0	and
# ::edge	and	op1	warn-01	0	0.0	
# ::edge	attack-01	ARG1	warn-01	0.0.1	0.0	
# ::edge	deploy-01	ARG1	stop-01	0.0.1.0.1	0.0.1.0	
# ::edge	promise-01	ARG0	warn-01	0.0.0	0.0	
# ::edge	promise-01	ARG1	protect-01	0.0.0	0.0.0.0	
# ::edge	resource	quant	all	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	stop-01	ARG0	resource	0.0.1.0	0.0.1.0.0	
# ::edge	stop-01	ARG1	attack-01	0.0.1.0	0.0.1	
(a3 / and 
      :op1 (w / warn-01 
            :ARG0-of (p / promise-01 
                  :ARG1 (p2 / protect-01)) 
            :ARG1-of (a / attack-01 
                  :ARG1-of (s / stop-01 
                        :ARG0 (r / resource 
                              :quant (a2 / all)) 
                        :ARG1-of (d / deploy-01)))))

# ::snt why bother about the poor and the persecuted but instead the senate also subjected these bills to intense scrutiny to prolonged hearings of experts in the field concerned and proposed a string of amendments to make the legislation more effective more humane and better able to stand up to what promised to be formidable challenges in the courts
# ::tok why bother about the poor and the persecuted but instead the senate also subjected these bills to intense scrutiny to prolonged hearings of experts in the field concerned and proposed a string of amendments to make the legislation more effective more humane and better able to stand up to what promised to be formidable challenges in the courts
# ::alignments 57-58|0.0.0.1.1.0.0.0 54-55|0.0.0.1.1.0.0+0.0.0.1.1.0 50-51|0.0.0.1.1 44-45|0.0.0.1.0.1.0.0.2 42-43|0.0.0.1.0.1.0.0 41-42|0.0.0.1.0.1.0.0.1 39-40|0.0.0.1.0.1.0.0.0 37-38|0.0.0.1.0.1.0 33-34|0.0.0.1.0.1 31-32|0.0.0.0 29-30|0.0.0.1.0 28-29|0.0.0.1 27-28|0.0.0 26-27|0.0.0.1.0.0 23-24|0.1.3.0+0.1.3 21-22|0.1.0 20-21|0.1.0.0 18-19|0.1.2 17-18|0.1.2.0 15-16|0.1.0.1 13-14|0.1 12-13|0.1.4 11-12|0.1.1 9-10|0.0.3.0 8-9|0 7-8|0.0.3 5-6|0.0 4-5|0.0.2 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:19.888
# ::node	0	contrast-01	8-9
# ::node	0.0	and	5-6
# ::node	0.0.0	concern-01	27-28
# ::node	0.0.0.0	string	31-32
# ::node	0.0.0.1	and	28-29
# ::node	0.0.0.1.0	propose-01	29-30
# ::node	0.0.0.1.0.0	field	26-27
# ::node	0.0.0.1.0.1	amend-01	33-34
# ::node	0.0.0.1.0.1.0	legislation	37-38
# ::node	0.0.0.1.0.1.0.0	and	42-43
# ::node	0.0.0.1.0.1.0.0.0	effective	39-40
# ::node	0.0.0.1.0.1.0.0.1	humane	41-42
# ::node	0.0.0.1.0.1.0.0.2	possible	44-45
# ::node	0.0.0.1.1	promise-01	50-51
# ::node	0.0.0.1.1.0	thing	54-55
# ::node	0.0.0.1.1.0.0	challenge-01	54-55
# ::node	0.0.0.1.1.0.0.0	court	57-58
# ::node	0.0.1	bother-02	1-2
# ::node	0.0.2	poor	4-5
# ::node	0.0.3	persecute-01	7-8
# ::node	0.0.3.0	instead	9-10
# ::node	0.1	subject-01	13-14
# ::node	0.1.0	hearing	21-22
# ::node	0.1.0.0	prolong-01	20-21
# ::node	0.1.0.1	bill-01	15-16
# ::node	0.1.1	senate	11-12
# ::node	0.1.2	scrutiny	18-19
# ::node	0.1.2.0	intense	17-18
# ::node	0.1.3	person	23-24
# ::node	0.1.3.0	expert-41	23-24
# ::node	0.1.4	also	12-13
# ::root	0	contrast-01
# ::edge	amend-01	ARG2	legislation	0.0.0.1.0.1	0.0.0.1.0.1.0	
# ::edge	and	op1	concern-01	0.0.0.1	0.0.0	
# ::edge	and	op1	legislation	0.0.0.1.0.1.0.0	0.0.0.1.0.1.0	
# ::edge	and	op1	poor	0.0	0.0.2	
# ::edge	and	op2	effective	0.0.0.1.0.1.0.0	0.0.0.1.0.1.0.0.0	
# ::edge	and	op2	persecute-01	0.0	0.0.3	
# ::edge	and	op2	propose-01	0.0.0.1	0.0.0.1.0	
# ::edge	and	op3	humane	0.0.0.1.0.1.0.0	0.0.0.1.0.1.0.0.1	
# ::edge	and	op3	promise-01	0.0.0.1	0.0.0.1.1	
# ::edge	and	op4	possible	0.0.0.1.0.1.0.0	0.0.0.1.0.1.0.0.2	
# ::edge	bill-01	ARG1	hearing	0.1.0.1	0.1.0	
# ::edge	bother-02	ARG1	and	0.0.1	0.0	
# ::edge	challenge-01	ARG1	court	0.0.0.1.1.0.0	0.0.0.1.1.0.0.0	
# ::edge	challenge-01	ARG2	thing	0.0.0.1.1.0.0	0.0.0.1.1.0	
# ::edge	concern-01	ARG0	and	0.0.0	0.0	
# ::edge	concern-01	ARG1	string	0.0.0	0.0.0.0	
# ::edge	contrast-01	ARG1	and	0	0.0	
# ::edge	contrast-01	ARG2	subject-01	0	0.1	
# ::edge	expert-41	ARG1	person	0.1.3.0	0.1.3	
# ::edge	persecute-01	ARG1	instead	0.0.3	0.0.3.0	
# ::edge	prolong-01	ARG1	hearing	0.1.0.0	0.1.0	
# ::edge	promise-01	ARG1	thing	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	propose-01	ARG0	field	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	propose-01	ARG1	amend-01	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	scrutiny	mod	intense	0.1.2	0.1.2.0	
# ::edge	subject-01	ARG0	hearing	0.1	0.1.0	
# ::edge	subject-01	ARG1	senate	0.1	0.1.1	
# ::edge	subject-01	ARG2	scrutiny	0.1	0.1.2	
# ::edge	subject-01	ARG3	person	0.1	0.1.3	
# ::edge	subject-01	mod	also	0.1	0.1.4	
(c4 / contrast-01 
      :ARG1 (a5 / and 
            :ARG0-of (c3 / concern-01 
                  :ARG1 (s / string) 
                  :op-of (a3 / and 
                        :op1 (p3 / propose-01 
                              :ARG0 (f / field) 
                              :ARG1 (a2 / amend-01 
                                    :ARG2 (l / legislation 
                                          :op-of (a / and 
                                                :op1 (e / effective) 
                                                :op2 (h / humane) 
                                                :op3 (p2 / possible))))) 
                        :op2 (p / promise-01 
                              :ARG1 (t / thing 
                                    :ARG2-of (c2 / challenge-01 
                                          :ARG1 (c / court)))))) 
            :ARG1-of (b2 / bother-02) 
            :op1 (p7 / poor) 
            :op2 (p6 / persecute-01 
                  :ARG1 (i2 / instead))) 
      :ARG2 (s3 / subject-01 
            :ARG0 (h2 / hearing 
                  :ARG1-of (p5 / prolong-01) 
                  :ARG1-of (b / bill-01)) 
            :ARG1 (s4 / senate) 
            :ARG2 (s2 / scrutiny 
                  :mod (i / intense)) 
            :ARG3 (p4 / person 
                  :ARG1-of (e2 / expert-41)) 
            :mod (a4 / also)))

# ::snt gerrard said i never promised to pay it john
# ::tok gerrard said i never promised to pay it john
# ::alignments 7-8|0.0.1.0 6-7|0.0.1 4-5|0.0 2-3|0.0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:19.899
# ::node	0	say-01	1-2
# ::node	0.0	promise-01	4-5
# ::node	0.0.0	i	2-3
# ::node	0.0.1	pay-01	6-7
# ::node	0.0.1.0	it	7-8
# ::root	0	say-01
# ::edge	pay-01	ARG1	it	0.0.1	0.0.1.0	
# ::edge	promise-01	ARG0	i	0.0	0.0.0	
# ::edge	promise-01	ARG2	pay-01	0.0	0.0.1	
# ::edge	say-01	ARG1	promise-01	0	0.0	
(s / say-01 
      :ARG1 (p2 / promise-01 
            :ARG0 (i2 / i) 
            :ARG2 (p / pay-01 
                  :ARG1 (i / it))))

# ::snt but the opposition promised to carry on its offensive against her and continuing political uncertainty will make government difficult
# ::tok but the opposition promised to carry on its offensive against her and continuing political uncertainty will make government difficult
# ::alignments 18-19|0.0.1 14-15|0.1.1.2+0.1.1 13-14|0.1.1.1 12-13|0.1.1.0 11-12|0.1 8-9|0.1.0 3-4|0.0 2-3|0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:19.969
# ::node	0	contrast-01	0-1
# ::node	0.0	promise-01	3-4
# ::node	0.0.0	oppose-01	2-3
# ::node	0.0.1	difficult	18-19
# ::node	0.1	and	11-12
# ::node	0.1.0	offensive	8-9
# ::node	0.1.1	certainty	14-15
# ::node	0.1.1.0	continue-01	12-13
# ::node	0.1.1.1	politics	13-14
# ::node	0.1.1.2	-	14-15
# ::root	0	contrast-01
# ::edge	and	op1	offensive	0.1	0.1.0	
# ::edge	and	op2	certainty	0.1	0.1.1	
# ::edge	certainty	mod	politics	0.1.1	0.1.1.1	
# ::edge	certainty	polarity	-	0.1.1	0.1.1.2	
# ::edge	continue-01	ARG1	certainty	0.1.1.0	0.1.1	
# ::edge	contrast-01	ARG1	promise-01	0	0.0	
# ::edge	contrast-01	ARG2	and	0	0.1	
# ::edge	promise-01	ARG0	oppose-01	0.0	0.0.0	
# ::edge	promise-01	ARG1	difficult	0.0	0.0.1	
(c3 / contrast-01 
      :ARG1 (p2 / promise-01 
            :ARG0 (o2 / oppose-01) 
            :ARG1 (d / difficult)) 
      :ARG2 (a / and 
            :op1 (o / offensive) 
            :op2 (c / certainty 
                  :ARG1-of (c2 / continue-01) 
                  :mod (p / politics) 
                  :polarity -)))

# ::snt i guess its a pretty boring job so i promised to behave
# ::tok i guess its a pretty boring job so i promised to behave
# ::alignments 11-12|0.1.1 9-10|0.1 8-9|0.1.0 7-8|0.1.2 6-7|0.2.0 5-6|0.2 4-5|0.2.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:20.084
# ::node	0	guess-01	1-2
# ::node	0.0	i	0-1
# ::node	0.1	promise-01	9-10
# ::node	0.1.0	i	8-9
# ::node	0.1.1	behave-01	11-12
# ::node	0.1.2	so	7-8
# ::node	0.2	bore-02	5-6
# ::node	0.2.0	job	6-7
# ::node	0.2.1	pretty	4-5
# ::root	0	guess-01
# ::edge	bore-02	ARG1	job	0.2	0.2.0	
# ::edge	bore-02	degree	pretty	0.2	0.2.1	
# ::edge	guess-01	ARG0	i	0	0.0	
# ::edge	guess-01	ARG2	bore-02	0	0.2	
# ::edge	promise-01	ARG0	i	0.1	0.1.0	
# ::edge	promise-01	ARG1	guess-01	0.1	0	
# ::edge	promise-01	ARG2	behave-01	0.1	0.1.1	
# ::edge	so	op1	promise-01	0.1.2	0.1	
(g / guess-01 
      :ARG0 (i2 / i) 
      :ARG1-of (p / promise-01 
            :ARG0 (i / i) 
            :ARG2 (b / behave-01) 
            :op-of (s / so)) 
      :ARG2 (b2 / bore-02 
            :ARG1 (j / job) 
            :degree (p2 / pretty)))

# ::snt you see chris the stuffers deep freezes are so full that a while back i promised him i would take the overflow
# ::tok you see chris the stuffers deep freezes are so full that a while back i promised him i would take the overflow
# ::alignments 17-18|0.3 15-16|0 14-15|0.0 13-14|0.2 9-10|0.2.0 8-9|0.2.0.0 6-7|0.2.0.1 5-6|0.2.0.1.0 2-3|0.1.1.0+0.1.1+0.1 1-2|0.1.0 0-1|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:20.323
# ::node	0	promise-01	15-16
# ::node	0.0	i	14-15
# ::node	0.1	person	2-3
# ::node	0.1.0	see-01	1-2
# ::node	0.1.0.0	you	0-1
# ::node	0.1.1	name	2-3
# ::node	0.1.1.0	"chris"	2-3
# ::node	0.2	back	13-14
# ::node	0.2.0	full	9-10
# ::node	0.2.0.0	so	8-9
# ::node	0.2.0.1	freeze-01	6-7
# ::node	0.2.0.1.0	deep	5-6
# ::node	0.3	i	17-18
# ::root	0	promise-01
# ::edge	back	ARG1	promise-01	0.2	0	
# ::edge	freeze-01	degree	deep	0.2.0.1	0.2.0.1.0	
# ::edge	full	degree	so	0.2.0	0.2.0.0	
# ::edge	full	domain	back	0.2.0	0.2	
# ::edge	full	domain	freeze-01	0.2.0	0.2.0.1	
# ::edge	name	op1	"chris"	0.1.1	0.1.1.0	
# ::edge	person	name	name	0.1	0.1.1	
# ::edge	promise-01	ARG0	i	0	0.0	
# ::edge	promise-01	ARG1	person	0	0.1	
# ::edge	promise-01	mod	i	0	0.3	
# ::edge	see-01	ARG0	you	0.1.0	0.1.0.0	
# ::edge	see-01	ARG1	person	0.1.0	0.1	
(p / promise-01 
      :ARG0 (i2 / i) 
      :ARG1 (p2 / person 
            :ARG1-of (s2 / see-01 
                  :ARG0 (y / you)) 
            :name (n / name 
                  :op1 "chris")) 
      :ARG1-of (b / back 
            :domain-of (f / full 
                  :degree (s / so) 
                  :domain (f2 / freeze-01 
                        :degree (d / deep)))) 
      :mod (i / i))

# ::snt eduard shevardnadze the soviet foreign minister promised an early response when he met james baker the us secretary of state in copenhagen earlier this week
# ::tok eduard shevardnadze the soviet foreign minister promised an early response when he met james baker the us secretary of state in copenhagen earlier this week
# ::alignments 24-25|0.1.1.0 23-24|0.1.1.0.0 22-23|0.1.1 19-20|0.1.0.0.0.0 17-18|0.1.0.0.0 12-13|0.1.0.0 11-12|0.1.0 9-10|0.1 8-9|0.1.2 6-7|0 5-6|0.0.0+0.0 4-5|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:20.530
# ::node	0	promise-01	6-7
# ::node	0.0	have-org-role-91	5-6
# ::node	0.0.0	minister	5-6
# ::node	0.0.0.0	foreign	4-5
# ::node	0.1	respond-01	9-10
# ::node	0.1.0	he	11-12
# ::node	0.1.0.0	meet-03	12-13
# ::node	0.1.0.0.0	secretary	17-18
# ::node	0.1.0.0.0.0	state	19-20
# ::node	0.1.1	early	22-23
# ::node	0.1.1.0	week	24-25
# ::node	0.1.1.0.0	this	23-24
# ::node	0.1.2	early	8-9
# ::root	0	promise-01
# ::edge	early	op1	week	0.1.1	0.1.1.0	
# ::edge	have-org-role-91	ARG2	minister	0.0	0.0.0	
# ::edge	meet-03	ARG0	he	0.1.0.0	0.1.0	
# ::edge	meet-03	ARG1	secretary	0.1.0.0	0.1.0.0.0	
# ::edge	minister	mod	foreign	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG0	have-org-role-91	0	0.0	
# ::edge	promise-01	ARG1	respond-01	0	0.1	
# ::edge	respond-01	ARG0	he	0.1	0.1.0	
# ::edge	respond-01	ARG1	early	0.1	0.1.1	
# ::edge	respond-01	mod	early	0.1	0.1.2	
# ::edge	secretary	mod	state	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	week	mod	this	0.1.1.0	0.1.1.0.0	
(p / promise-01 
      :ARG0 (h2 / have-org-role-91 
            :ARG2 (m2 / minister 
                  :mod (f / foreign))) 
      :ARG1 (r / respond-01 
            :ARG0 (h / he 
                  :ARG0-of (m / meet-03 
                        :ARG1 (s2 / secretary 
                              :mod (s / state)))) 
            :ARG1 (e / early 
                  :op1 (w / week 
                        :mod (t / this))) 
            :mod (e2 / early)))

# ::snt but the minute he promises you a particular portfolio he makes enemies of every one of the seven or eight other men who want that portfolio
# ::tok but the minute he promises you a particular portfolio he makes enemies of every one of the seven or eight other men who want that portfolio
# ::alignments 23-24|0.2 21-22|0.2.0.0.0.1 20-21|0.2.0.0.0.1.0 19-20|0.2.0.0.0.1.1 18-19|0.2.0.0.0 17-18|0.2.0.0.0.0 13-14|0.0 11-12|0.2.0.0.1+0.2.0.0 9-10|0.2.0 7-8|0.2.1 5-6|0.1.2 4-5|0.1 3-4|0.1.0 2-3|0.1.1.0+0.1.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:21.072
# ::node	0	contrast-01	0-1
# ::node	0.0	every	13-14
# ::node	0.1	promise-01	4-5
# ::node	0.1.0	he	3-4
# ::node	0.1.1	temporal-quantity	2-3
# ::node	0.1.1.0	minute	2-3
# ::node	0.1.2	you	5-6
# ::node	0.2	want-01	23-24
# ::node	0.2.0	he	9-10
# ::node	0.2.0.0	have-rel-role-91	11-12
# ::node	0.2.0.0.0	or	18-19
# ::node	0.2.0.0.0.0	7	17-18
# ::node	0.2.0.0.0.1	man	21-22
# ::node	0.2.0.0.0.1.0	other	20-21
# ::node	0.2.0.0.0.1.1	8	19-20
# ::node	0.2.0.0.1	enemy	11-12
# ::node	0.2.1	particular	7-8
# ::root	0	contrast-01
# ::edge	contrast-01	ARG0	every	0	0.0	
# ::edge	contrast-01	ARG1	promise-01	0	0.1	
# ::edge	contrast-01	ARG2	want-01	0	0.2	
# ::edge	have-rel-role-91	ARG0	or	0.2.0.0	0.2.0.0.0	
# ::edge	have-rel-role-91	ARG1	he	0.2.0.0	0.2.0	
# ::edge	have-rel-role-91	ARG2	enemy	0.2.0.0	0.2.0.0.1	
# ::edge	man	mod	other	0.2.0.0.0.1	0.2.0.0.0.1.0	
# ::edge	man	quant	8	0.2.0.0.0.1	0.2.0.0.0.1.1	
# ::edge	or	op1	7	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	or	op2	man	0.2.0.0.0	0.2.0.0.0.1	
# ::edge	promise-01	ARG0	he	0.1	0.1.0	
# ::edge	promise-01	ARG1	temporal-quantity	0.1	0.1.1	
# ::edge	promise-01	ARG2	you	0.1	0.1.2	
# ::edge	temporal-quantity	unit	minute	0.1.1	0.1.1.0	
# ::edge	want-01	ARG0	he	0.2	0.2.0	
# ::edge	want-01	ARG1	particular	0.2	0.2.1	
(c / contrast-01 
      :ARG0 (e / every) 
      :ARG1 (p2 / promise-01 
            :ARG0 (h3 / he) 
            :ARG1 (t / temporal-quantity 
                  :unit (m2 / minute)) 
            :ARG2 (y / you)) 
      :ARG2 (w / want-01 
            :ARG0 (h2 / he 
                  :ARG1-of (h / have-rel-role-91 
                        :ARG0 (o2 / or 
                              :op1 7 
                              :op2 (m / man 
                                    :mod (o / other) 
                                    :quant 8)) 
                        :ARG2 (e2 / enemy))) 
            :ARG1 (p / particular)))

# ::snt   east germans wanting to return were urged to apply to the countrys diplomatic missions abroad and providing no important reasons stand in their way the foreign ministry promised to help them find their feet again in the homeland
# ::tok east germans wanting to return were urged to apply to the countrys diplomatic missions abroad and providing no important reasons stand in their way the foreign ministry promised to help them find their feet again in the homeland
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:21.073
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt in a way the match promises to be a microcosm of english footballs position compared to the rest of a world which has already wondered at the precocious skills of cameroon the dash of lacatus and the art of donadoni
# ::tok in a way the match promises to be a microcosm of english footballs position compared to the rest of a world which has already wondered at the precocious skills of cameroon the dash of lacatus and the art of donadoni
# ::alignments 37-38|0.2.0 35-36|0.2 28-29|0.1 24-25|0 23-24|0.3 20-21|0.0 17-18|0.0.0 14-15|0.0.0.0 13-14|0.0.0.0.1 11-12|0.0.0.0.1.0.0.0+0.0.0.0.1.0.0+0.0.0.0.1.0 9-10|0.0.0.0.0 5-6|0.0.0.0.0.0 4-5|0.0.0.0.0.0.0 2-3|0.0.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:21.367
# ::node	0	wonder-01	24-25
# ::node	0.0	world	20-21
# ::node	0.0.0	rest	17-18
# ::node	0.0.0.0	compare-01	14-15
# ::node	0.0.0.0.0	microcosm	9-10
# ::node	0.0.0.0.0.0	promise-01	5-6
# ::node	0.0.0.0.0.0.0	match-01	4-5
# ::node	0.0.0.0.0.0.1	way	2-3
# ::node	0.0.0.0.1	position	13-14
# ::node	0.0.0.0.1.0	language	11-12
# ::node	0.0.0.0.1.0.0	name	11-12
# ::node	0.0.0.0.1.0.0.0	"English"	11-12
# ::node	0.1	skill	28-29
# ::node	0.2	and	35-36
# ::node	0.2.0	art	37-38
# ::node	0.3	already	23-24
# ::root	0	wonder-01
# ::edge	and	op1	wonder-01	0.2	0	
# ::edge	and	op2	art	0.2	0.2.0	
# ::edge	compare-01	ARG0	microcosm	0.0.0.0	0.0.0.0.0	
# ::edge	compare-01	ARG1	position	0.0.0.0	0.0.0.0.1	
# ::edge	compare-01	ARG2	rest	0.0.0.0	0.0.0	
# ::edge	language	name	name	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	name	op1	"English"	0.0.0.0.1.0.0	0.0.0.0.1.0.0.0	
# ::edge	position	mod	language	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	promise-01	ARG0	match-01	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	promise-01	ARG1	microcosm	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	manner	way	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	wonder-01	ARG0	world	0	0.0	
# ::edge	wonder-01	ARG1	skill	0	0.1	
# ::edge	wonder-01	time	already	0	0.3	
# ::edge	world	part	rest	0.0	0.0.0	
(w / wonder-01 
      :ARG0 (w2 / world 
            :part (r / rest 
                  :ARG2-of (c / compare-01 
                        :ARG0 (m / microcosm 
                              :ARG1-of (p2 / promise-01 
                                    :ARG0 (m2 / match-01) 
                                    :manner (w3 / way))) 
                        :ARG1 (p / position 
                              :mod (l / language 
                                    :name (n / name 
                                          :op1 "English")))))) 
      :ARG1 (s / skill) 
      :op-of (a2 / and 
            :op1 (a / art)) 
      :time (a3 / already))

# ::snt children with special needs were today promised that they will not be pushed beyond their ability by radical changes in education
# ::tok children with special needs were today promised that they will not be pushed beyond their ability by radical changes in education
# ::alignments 20-21|0.0.0.2.0 18-19|0.0.0.2 17-18|0.0.0.2.1 15-16|0.0.0.1 13-14|0.0.0.1.0 12-13|0.0.0 8-9|0.0 6-7|0 5-6|0.0.0.0 3-4|0.2 2-3|0.1 0-1|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:21.432
# ::node	0	promise-01	6-7
# ::node	0.0	they	8-9
# ::node	0.0.0	push-01	12-13
# ::node	0.0.0.0	today	5-6
# ::node	0.0.0.1	ability	15-16
# ::node	0.0.0.1.0	beyond	13-14
# ::node	0.0.0.2	change-01	18-19
# ::node	0.0.0.2.0	educate-01	20-21
# ::node	0.0.0.2.1	radical	17-18
# ::node	0.1	special	2-3
# ::node	0.2	need-01	3-4
# ::node	0.2.0	child	0-1
# ::root	0	promise-01
# ::edge	beyond	op1	ability	0.0.0.1.0	0.0.0.1	
# ::edge	change-01	ARG1	educate-01	0.0.0.2	0.0.0.2.0	
# ::edge	change-01	mod	radical	0.0.0.2	0.0.0.2.1	
# ::edge	need-01	ARG0	child	0.2	0.2.0	
# ::edge	promise-01	ARG0	they	0	0.0	
# ::edge	promise-01	ARG1	special	0	0.1	
# ::edge	promise-01	ARG2	need-01	0	0.2	
# ::edge	push-01	ARG0	today	0.0.0	0.0.0.0	
# ::edge	push-01	ARG1	they	0.0.0	0.0	
# ::edge	push-01	medium	ability	0.0.0	0.0.0.1	
# ::edge	push-01	prep-without	change-01	0.0.0	0.0.0.2	
(p2 / promise-01 
      :ARG0 (t / they 
            :ARG1-of (p / push-01 
                  :ARG0 (t2 / today) 
                  :medium (a / ability 
                        :op-of (b / beyond)) 
                  :prep-without (c / change-01 
                        :ARG1 (e / educate-01) 
                        :mod (r / radical)))) 
      :ARG1 (s / special) 
      :ARG2 (n / need-01 
            :ARG0 (c2 / child)))

# ::snt city were leading with 15 minutes left clive allens sixth goal of the season promising to bring them their first away win in the first division since january 1986
# ::tok city were leading with 15 minutes left clive allens sixth goal of the season promising to bring them their first away win in the first division since january 1986
# ::alignments 27-29|0.0.2.2+0.0.2.0+0.0.2 26-27|0.0.2.1 25-26|0 21-22|0.0 20-21|0.0.3 16-17|0.0.1 14-15|0.0.1.1 13-14|0.0.1.0 10-11|0.0.1.2 5-6|0.0.1.1.0.1+0.0.1.1.0 4-5|0.0.1.1.0.0 2-3|0.0.0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:21.602
# ::node	0	division	25-26
# ::node	0.0	win-01	21-22
# ::node	0.0.0	city	0-1
# ::node	0.0.0.0	lead-01	2-3
# ::node	0.0.1	bring-01	16-17
# ::node	0.0.1.0	season	13-14
# ::node	0.0.1.1	promise-01	14-15
# ::node	0.0.1.1.0	temporal-quantity	5-6
# ::node	0.0.1.1.0.0	15	4-5
# ::node	0.0.1.1.0.1	minute	5-6
# ::node	0.0.1.2	goal	10-11
# ::node	0.0.2	date-entity	27-29
# ::node	0.0.2.0	1	27-29
# ::node	0.0.2.1	since	26-27
# ::node	0.0.2.2	1986	27-29
# ::node	0.0.3	away	20-21
# ::root	0	division
(d2 / division 
      :manner-of (w / win-01 
            :ARG1 (c / city 
                  :ARG0-of (l / lead-01)) 
            :ARG1-of (b / bring-01 
                  :ARG0 (s2 / season) 
                  :ARG1-of (p / promise-01 
                        :ARG0 (t / temporal-quantity 
                              :quant 15 
                              :unit (m / minute))) 
                  :purpose-of (g / goal)) 
            :time (d / date-entity 
                  :month 1 
                  :op-of (s / since) 
                  :year 1986) 
            :time (a / away)))

# ::snt but besides the fact that the details of his method cannot be read into many of the advances made in the sciences his promise of certainty has come to seem inappropriate
# ::tok but besides the fact that the details of his method cannot be read into many of the advances made in the sciences his promise of certainty has come to seem inappropriate
# ::alignments 29-30|0.0.0.1.0.0.0.0 25-26|0.0.0.1.0.0.0 23-24|0.0.0.1.0.0 21-22|0.0.0.1.0 17-18|0.0.0.1 14-15|0.0.0.1.1 12-13|0.0.0 9-10|0.0.0.0.0 6-7|0.0.0.0 3-4|0.0.1 1-2|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:21.779
# ::node	0	contrast-01	0-1
# ::node	0.0	besides	1-2
# ::node	0.0.0	read-01	12-13
# ::node	0.0.0.0	detail-01	6-7
# ::node	0.0.0.0.0	method	9-10
# ::node	0.0.0.1	advance-01	17-18
# ::node	0.0.0.1.0	science	21-22
# ::node	0.0.0.1.0.0	promise-01	23-24
# ::node	0.0.0.1.0.0.0	certainty	25-26
# ::node	0.0.0.1.0.0.0.0	seem-01	29-30
# ::node	0.0.0.1.1	many	14-15
# ::node	0.0.1	fact	3-4
# ::root	0	contrast-01
# ::edge	advance-01	ARG0	science	0.0.0.1	0.0.0.1.0	
# ::edge	advance-01	quant	many	0.0.0.1	0.0.0.1.1	
# ::edge	besides	op1	fact	0.0	0.0.1	
# ::edge	contrast-01	ARG1	besides	0	0.0	
# ::edge	detail-01	ARG1	method	0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	ARG0	science	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	promise-01	ARG1	certainty	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	read-01	ARG1	detail-01	0.0.0	0.0.0.0	
# ::edge	read-01	ARG2	besides	0.0.0	0.0	
# ::edge	read-01	duration	advance-01	0.0.0	0.0.0.1	
# ::edge	seem-01	ARG1	certainty	0.0.0.1.0.0.0.0	0.0.0.1.0.0.0	
(c2 / contrast-01 
      :ARG1 (b / besides 
            :ARG2-of (r / read-01 
                  :ARG1 (d / detail-01 
                        :ARG1 (m2 / method)) 
                  :duration (a / advance-01 
                        :ARG0 (s2 / science 
                              :ARG0-of (p / promise-01 
                                    :ARG1 (c / certainty 
                                          :ARG1-of (s / seem-01)))) 
                        :quant (m / many))) 
            :op1 (f / fact)))

# ::snt lord mackay has promised that the high court will be reserved for judicial review and other specialist cases and for general cases of unusual substance importance or difficulty
# ::tok lord mackay has promised that the high court will be reserved for judicial review and other specialist cases and for general cases of unusual substance importance or difficulty
# ::alignments 27-28|0.0.1.0.0.0 26-27|0.0.1.0.0 25-26|0.0.1.0 24-25|0.0.1.0.0.1.1 23-24|0.0.1.0.0.1.1.0.0+0.0.1.0.0.1.1.0 21-22|0.0.1.0.0.1 20-21|0.0.1.0.0.1.0 18-19|0 17-18|0.0.2 16-17|0.0.2.0.0+0.0.2.0 15-16|0.0.2.1 14-15|0.0 13-14|0.0.1 12-13|0.0.1.1 10-11|0.0.0 7-8|0.0.0.1 6-7|0.0.0.1.0 3-4|0.0.0.0 0-1|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:22.224
# ::node	0	and	18-19
# ::node	0.0	and	14-15
# ::node	0.0.0	reserved	10-11
# ::node	0.0.0.0	promise-01	3-4
# ::node	0.0.0.0.0	lord	0-1
# ::node	0.0.0.1	court	7-8
# ::node	0.0.0.1.0	high	6-7
# ::node	0.0.1	review-01	13-14
# ::node	0.0.1.0	important	25-26
# ::node	0.0.1.0.0	or	26-27
# ::node	0.0.1.0.0.0	difficult	27-28
# ::node	0.0.1.0.0.1	case	21-22
# ::node	0.0.1.0.0.1.0	general	20-21
# ::node	0.0.1.0.0.1.1	substance	24-25
# ::node	0.0.1.0.0.1.1.0	usual	23-24
# ::node	0.0.1.0.0.1.1.0.0	-	23-24
# ::node	0.0.1.1	judicial	12-13
# ::node	0.0.2	case	17-18
# ::node	0.0.2.0	person	16-17
# ::node	0.0.2.0.0	specialize-01	16-17
# ::node	0.0.2.1	other	15-16
# ::root	0	and
# ::edge	and	op1	and	0	0.0	
# ::edge	and	op1	reserved	0.0	0.0.0	
# ::edge	and	op2	review-01	0.0	0.0.1	
# ::edge	and	op3	case	0.0	0.0.2	
# ::edge	case	mod	general	0.0.1.0.0.1	0.0.1.0.0.1.0	
# ::edge	case	mod	other	0.0.2	0.0.2.1	
# ::edge	case	mod	person	0.0.2	0.0.2.0	
# ::edge	case	topic	substance	0.0.1.0.0.1	0.0.1.0.0.1.1	
# ::edge	court	mod	high	0.0.0.1	0.0.0.1.0	
# ::edge	lord	op1	promise-01	0.0.0.0.0	0.0.0.0	
# ::edge	or	op1	important	0.0.1.0.0	0.0.1.0	
# ::edge	or	op2	difficult	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	or	part	case	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	promise-01	ARG1	reserved	0.0.0.0	0.0.0	
# ::edge	reserved	domain	court	0.0.0	0.0.0.1	
# ::edge	review-01	ARG1	important	0.0.1	0.0.1.0	
# ::edge	review-01	mod	judicial	0.0.1	0.0.1.1	
# ::edge	specialize-01	ARG0	person	0.0.2.0.0	0.0.2.0	
# ::edge	substance	mod	usual	0.0.1.0.0.1.1	0.0.1.0.0.1.1.0	
# ::edge	usual	polarity	-	0.0.1.0.0.1.1.0	0.0.1.0.0.1.1.0.0	
(a / and 
      :op1 (a2 / and 
            :op1 (r2 / reserved 
                  :ARG1-of (p2 / promise-01 
                        :op-of (l / lord)) 
                  :domain (c3 / court 
                        :mod (h / high))) 
            :op2 (r / review-01 
                  :ARG1 (i / important 
                        :op-of (o / or 
                              :op1 (d / difficult) 
                              :part (c / case 
                                    :mod (g / general) 
                                    :topic (s / substance 
                                          :mod (u / usual 
                                                :polarity -))))) 
                  :mod (j / judicial)) 
            :op3 (c2 / case 
                  :mod (p / person 
                        :ARG0-of (s2 / specialize-01)) 
                  :mod (o2 / other))))

# ::snt a total of 76000 has been promised over four years of which 57000 is in hand now
# ::tok a total of 76000 has been promised over four years of which 57000 is in hand now
# ::alignments 16-17|0.0 15-16|0.1 9-10|0.2.1+0.2 8-9|0.2.0 6-7|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:22.247
# ::node	0	promise-01	6-7
# ::node	0.0	now	16-17
# ::node	0.1	hand	15-16
# ::node	0.2	temporal-quantity	9-10
# ::node	0.2.0	4	8-9
# ::node	0.2.1	year	9-10
# ::root	0	promise-01
# ::edge	promise-01	ARG0	now	0	0.0	
# ::edge	promise-01	ARG1	hand	0	0.1	
# ::edge	promise-01	duration	temporal-quantity	0	0.2	
# ::edge	temporal-quantity	quant	4	0.2	0.2.0	
# ::edge	temporal-quantity	unit	year	0.2	0.2.1	
(p / promise-01 
      :ARG0 (n / now) 
      :ARG1 (h / hand) 
      :duration (t / temporal-quantity 
            :quant 4 
            :unit (y / year)))

# ::snt in a fresh attempt to answer british objections to the ec social charter the european commission yesterday announced a threeyear programme of social measures that promises a minimum of intervention in national policymaking
# ::tok in a fresh attempt to answer british objections to the ec social charter the european commission yesterday announced a threeyear programme of social measures that promises a minimum of intervention in national policymaking
# ::alignments 31-32|0.2.0.0.0.0 29-30|0.1.0.0 27-28|0.1.0.0.0 25-26|0.1.0 23-24|0.1.1 22-23|0.1.1.0 20-21|0.1 17-18|0 16-17|0.0 15-16|0.0.0 14-15|0.0.0.0.0.0+0.0.0.0.0+0.0.0.0 12-13|0.2.0.0.0 11-12|0.2.0.0.0.1 7-8|0.2.0.0 5-6|0.2.0 3-4|0.2 2-3|0.2.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:22.587
# ::node	0	announce-01	17-18
# ::node	0.0	yesterday	16-17
# ::node	0.0.0	commission	15-16
# ::node	0.0.0.0	continent	14-15
# ::node	0.0.0.0.0	name	14-15
# ::node	0.0.0.0.0.0	"Europe"	14-15
# ::node	0.1	program	20-21
# ::node	0.1.0	promise-01	25-26
# ::node	0.1.0.0	intervene-01	29-30
# ::node	0.1.0.0.0	minimum	27-28
# ::node	0.1.1	measure	23-24
# ::node	0.1.1.0	society	22-23
# ::node	0.2	attempt-01	3-4
# ::node	0.2.0	answer-01	5-6
# ::node	0.2.0.0	objection	7-8
# ::node	0.2.0.0.0	charter-01	12-13
# ::node	0.2.0.0.0.0	nation	31-32
# ::node	0.2.0.0.0.1	society	11-12
# ::node	0.2.1	fresh	2-3
# ::root	0	announce-01
# ::edge	announce-01	ARG0	yesterday	0	0.0	
# ::edge	announce-01	ARG1	program	0	0.1	
# ::edge	announce-01	purpose	attempt-01	0	0.2	
# ::edge	answer-01	ARG1	objection	0.2.0	0.2.0.0	
# ::edge	attempt-01	ARG1	answer-01	0.2	0.2.0	
# ::edge	attempt-01	mod	fresh	0.2	0.2.1	
# ::edge	charter-01	ARG0	nation	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	charter-01	ARG1	society	0.2.0.0.0	0.2.0.0.0.1	
# ::edge	commission	mod	continent	0.0.0	0.0.0.0	
# ::edge	continent	name	name	0.0.0.0	0.0.0.0.0	
# ::edge	intervene-01	quant	minimum	0.1.0.0	0.1.0.0.0	
# ::edge	measure	consist	program	0.1.1	0.1	
# ::edge	measure	mod	society	0.1.1	0.1.1.0	
# ::edge	name	op1	"Europe"	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	objection	purpose	charter-01	0.2.0.0	0.2.0.0.0	
# ::edge	promise-01	ARG0	program	0.1.0	0.1	
# ::edge	promise-01	ARG1	intervene-01	0.1.0	0.1.0.0	
# ::edge	yesterday	mod	commission	0.0	0.0.0	
(a / announce-01 
      :ARG0 (y / yesterday 
            :mod (c / commission 
                  :mod (c2 / continent 
                        :name (n2 / name 
                              :op1 "Europe")))) 
      :ARG1 (p2 / program 
            :ARG0-of (p / promise-01 
                  :ARG1 (i / intervene-01 
                        :quant (m / minimum))) 
            :consist-of (m2 / measure 
                  :mod (s / society))) 
      :purpose (a3 / attempt-01 
            :ARG1 (a2 / answer-01 
                  :ARG1 (o / objection 
                        :purpose (c3 / charter-01 
                              :ARG0 (n / nation) 
                              :ARG1 (s2 / society)))) 
            :mod (f / fresh)))

# ::snt in defence of this stratospheric amount an air force spokesman replied defensively that it is not your ordinary fax machine and promises it will function in the desert the arctic or anywhere else that uncle sam deems to be a battlefield
# ::tok in defence of this stratospheric amount an air force spokesman replied defensively that it is not your ordinary fax machine and promises it will function in the desert the arctic or anywhere else that uncle sam deems to be a battlefield
# ::alignments 40-41|0.1.2.0.0 34-35|0.1.2.0.1+0.1.2.0 32-33|0.1.2.1 31-32|0.1.2.1.0 30-31|0.1.2 27-28|0.1.1.2 24-25|0.1.1 22-23|0.1.1.1 21-22|0.1 20-21|0 19-20|0.1.1.0 17-18|0.1.1.0.0 13-14|0.0.0 10-11|0.0 9-10|0.1.0+0.1.0.0 7-9|0.1.0.0.0.0.0+0.1.0.0.0.0.1+0.1.0.0.0.0+0.1.0.0.0 5-6|0.0.1.0 3-4|0.0.1.0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:23.587
# ::node	0	and	20-21
# ::node	0.0	reply-01	10-11
# ::node	0.0.0	it	13-14
# ::node	0.0.1	defend-01	1-2
# ::node	0.0.1.0	amount	5-6
# ::node	0.0.1.0.0	this	3-4
# ::node	0.1	promise-01	21-22
# ::node	0.1.0	spokesman	9-10
# ::node	0.1.0.0	have-org-role-91	9-10
# ::node	0.1.0.0.0	military	7-9
# ::node	0.1.0.0.0.0	name	7-9
# ::node	0.1.0.0.0.0.0	"Air"	7-9
# ::node	0.1.0.0.0.0.1	"Force"	7-9
# ::node	0.1.1	function-01	24-25
# ::node	0.1.1.0	machine	19-20
# ::node	0.1.1.0.0	ordinary	17-18
# ::node	0.1.1.1	it	22-23
# ::node	0.1.1.2	desert	27-28
# ::node	0.1.2	or	30-31
# ::node	0.1.2.0	have-rel-role-91	34-35
# ::node	0.1.2.0.0	battlefield	40-41
# ::node	0.1.2.0.1	uncle	34-35
# ::node	0.1.2.1	else	32-33
# ::node	0.1.2.1.0	anywhere	31-32
# ::root	0	and
# ::edge	amount	mod	this	0.0.1.0	0.0.1.0.0	
# ::edge	and	op1	reply-01	0	0.0	
# ::edge	and	op2	promise-01	0	0.1	
# ::edge	anywhere	mod	else	0.1.2.1.0	0.1.2.1	
# ::edge	defend-01	ARG1	amount	0.0.1	0.0.1.0	
# ::edge	function-01	ARG0	machine	0.1.1	0.1.1.0	
# ::edge	function-01	ARG1	it	0.1.1	0.1.1.1	
# ::edge	function-01	manner	desert	0.1.1	0.1.1.2	
# ::edge	have-org-role-91	ARG1	military	0.1.0.0	0.1.0.0.0	
# ::edge	have-org-role-91	ARG2	spokesman	0.1.0.0	0.1.0	
# ::edge	have-rel-role-91	ARG0	battlefield	0.1.2.0	0.1.2.0.0	
# ::edge	have-rel-role-91	ARG1	or	0.1.2.0	0.1.2	
# ::edge	have-rel-role-91	ARG2	uncle	0.1.2.0	0.1.2.0.1	
# ::edge	machine	mod	ordinary	0.1.1.0	0.1.1.0.0	
# ::edge	military	name	name	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	name	op1	"Air"	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	name	op2	"Force"	0.1.0.0.0.0	0.1.0.0.0.0.1	
# ::edge	or	op1	else	0.1.2	0.1.2.1	
# ::edge	promise-01	ARG0	spokesman	0.1	0.1.0	
# ::edge	promise-01	ARG1	function-01	0.1	0.1.1	
# ::edge	promise-01	condition	or	0.1	0.1.2	
# ::edge	reply-01	ARG0	it	0.0	0.0.0	
# ::edge	reply-01	ARG1	defend-01	0.0	0.0.1	
(a2 / and 
      :op1 (r / reply-01 
            :ARG0 (i2 / it) 
            :ARG1 (d2 / defend-01 
                  :ARG1 (a3 / amount 
                        :mod (t / this)))) 
      :op2 (p / promise-01 
            :ARG0 (s / spokesman 
                  :ARG2-of (h2 / have-org-role-91 
                        :ARG1 (m2 / military 
                              :name (n / name 
                                    :op1 "Air" 
                                    :op2 "Force")))) 
            :ARG1 (f / function-01 
                  :ARG0 (m / machine 
                        :mod (o2 / ordinary)) 
                  :ARG1 (i / it) 
                  :manner (d / desert)) 
            :condition (o / or 
                  :ARG1-of (h / have-rel-role-91 
                        :ARG0 (b / battlefield) 
                        :ARG2 (u / uncle)) 
                  :op1 (e / else 
                        :mod-of (a / anywhere)))))

# ::snt but if the imf decides that the cuts promised in the budget are too small hungary could find itself under severe pressure with no means to respond
# ::tok but if the imf decides that the cuts promised in the budget are too small hungary could find itself under severe pressure with no means to respond
# ::alignments 26-27|0.0.1 24-25|0.0.1.0 23-24|0.0.1.0.0 21-22|0.0.1.1 20-21|0.0.1.1.0 16-17|0.1 14-15|0.0.0 13-14|0.0.0.0.1 11-12|0.0.0.0.0.0 8-9|0.0.0.0.0 7-8|0.0.0.0 4-5|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:23.715
# ::node	0	contrast-01	0-1
# ::node	0.0	decide-01	4-5
# ::node	0.0.0	small	14-15
# ::node	0.0.0.0	cut-02	7-8
# ::node	0.0.0.0.0	promise-01	8-9
# ::node	0.0.0.0.0.0	budget	11-12
# ::node	0.0.0.0.1	too	13-14
# ::node	0.0.1	respond-01	26-27
# ::node	0.0.1.0	mean-01	24-25
# ::node	0.0.1.0.0	-	23-24
# ::node	0.0.1.1	pressure-01	21-22
# ::node	0.0.1.1.0	severe	20-21
# ::node	0.1	possible	16-17
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	decide-01	0	0.0	
# ::edge	contrast-01	ARG2	possible	0	0.1	
# ::edge	cut-02	quant	too	0.0.0.0	0.0.0.0.1	
# ::edge	decide-01	ARG1	small	0.0	0.0.0	
# ::edge	mean-01	ARG1	respond-01	0.0.1.0	0.0.1	
# ::edge	mean-01	polarity	-	0.0.1.0	0.0.1.0.0	
# ::edge	pressure-01	ARG2	respond-01	0.0.1.1	0.0.1	
# ::edge	pressure-01	mod	severe	0.0.1.1	0.0.1.1.0	
# ::edge	promise-01	ARG1	cut-02	0.0.0.0.0	0.0.0.0	
# ::edge	promise-01	location	budget	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	respond-01	ARG2	decide-01	0.0.1	0.0	
# ::edge	small	domain	cut-02	0.0.0	0.0.0.0	
(c2 / contrast-01 
      :ARG1 (d / decide-01 
            :ARG1 (s2 / small 
                  :domain (c / cut-02 
                        :ARG1-of (p3 / promise-01 
                              :location (b / budget)) 
                        :quant (t / too))) 
            :ARG2-of (r / respond-01 
                  :ARG1-of (m / mean-01 
                        :polarity (- / -)) 
                  :ARG2-of (p / pressure-01 
                        :mod (s / severe)))) 
      :ARG2 (p2 / possible))

# ::snt the marketing board promised yesterday that contaminated dairy products would not be diluted by uncontaminated ones
# ::tok the marketing board promised yesterday that contaminated dairy products would not be diluted by uncontaminated ones
# ::alignments 15-16|0.0.0 12-13|0.0 8-9|0.0.1 7-8|0.0.1.0 4-5|0.2 3-4|0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:23.771
# ::node	0	promise-01	3-4
# ::node	0.0	dilute-01	12-13
# ::node	0.0.0	one	15-16
# ::node	0.0.1	product	8-9
# ::node	0.0.1.0	dairy	7-8
# ::node	0.1	market-01	1-2
# ::node	0.2	yesterday	4-5
# ::root	0	promise-01
# ::edge	dilute-01	ARG0	one	0.0	0.0.0	
# ::edge	dilute-01	ARG1	product	0.0	0.0.1	
# ::edge	market-01	ARG1	promise-01	0.1	0	
# ::edge	product	mod	dairy	0.0.1	0.0.1.0	
# ::edge	promise-01	ARG1	dilute-01	0	0.0	
# ::edge	promise-01	time	yesterday	0	0.2	
(p2 / promise-01 
      :ARG1 (d / dilute-01 
            :ARG0 (o / one) 
            :ARG1 (p / product 
                  :mod (d2 / dairy))) 
      :ARG1-of (m / market-01) 
      :time (y / yesterday))

# ::snt life the antiabortion organisation promised to beseige parliament with the largest number of petitions in its history
# ::tok life the antiabortion organisation promised to beseige parliament with the largest number of petitions in its history
# ::alignments 16-17|0.0.0 11-12|0.2.0 10-11|0.2.0.0.0+0.2.0.0 7-8|0.2.1.0+0.2.1+0.2 4-5|0 3-4|0.0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:23.925
# ::node	0	promise-01	4-5
# ::node	0.0	organize-01	3-4
# ::node	0.0.0	history	16-17
# ::node	0.1	life	0-1
# ::node	0.2	government-organization	7-8
# ::node	0.2.0	number	11-12
# ::node	0.2.0.0	large	10-11
# ::node	0.2.0.0.0	most	10-11
# ::node	0.2.1	name	7-8
# ::node	0.2.1.0	"Parliament"	7-8
# ::root	0	promise-01
# ::edge	government-organization	location	number	0.2	0.2.0	
# ::edge	government-organization	name	name	0.2	0.2.1	
# ::edge	large	degree	most	0.2.0.0	0.2.0.0.0	
# ::edge	name	op1	"Parliament"	0.2.1	0.2.1.0	
# ::edge	number	mod	large	0.2.0	0.2.0.0	
# ::edge	organize-01	ARG1	history	0.0	0.0.0	
# ::edge	promise-01	ARG0	organize-01	0	0.0	
# ::edge	promise-01	ARG1	life	0	0.1	
# ::edge	promise-01	ARG2	government-organization	0	0.2	
(p / promise-01 
      :ARG0 (o / organize-01 
            :ARG1 (h / history)) 
      :ARG1 (l2 / life) 
      :ARG2 (g / government-organization 
            :location (n / number 
                  :mod (l / large 
                        :degree (m / most))) 
            :name (n2 / name 
                  :op1 "Parliament")))

# ::snt if the nottingham test proves as successful as the system seems to have worked in florida it could mean even better business for marconi in swindon who promise more jobs
# ::tok if the nottingham test proves as successful as the system seems to have worked in florida it could mean even better business for marconi in swindon who promise more jobs
# ::alignments 29-30|0.1.0.0 27-28|0.1.0 21-22|0.1 18-19|0 17-18|0.2 16-17|0.0 15-16|0.0.0.2.0.0+0.0.0.2.0+0.0.0.2 13-14|0.0.0 10-11|0.0.0.1 9-10|0.0.0.0 6-7|0.0.0.1.0 4-5|0.0.0.1.0.0 3-4|0.0.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:24.096
# ::node	0	mean-01	18-19
# ::node	0.0	it	16-17
# ::node	0.0.0	work-01	13-14
# ::node	0.0.0.0	system	9-10
# ::node	0.0.0.1	seem-01	10-11
# ::node	0.0.0.1.0	succeed-01	6-7
# ::node	0.0.0.1.0.0	prove-01	4-5
# ::node	0.0.0.1.0.0.0	test-01	3-4
# ::node	0.0.0.2	state	15-16
# ::node	0.0.0.2.0	name	15-16
# ::node	0.0.0.2.0.0	"Florida"	15-16
# ::node	0.1	business	21-22
# ::node	0.1.0	promise-01	27-28
# ::node	0.1.0.0	job	29-30
# ::node	0.2	possible	17-18
# ::root	0	mean-01
# ::edge	mean-01	ARG0	it	0	0.0	
# ::edge	mean-01	ARG1	business	0	0.1	
# ::edge	name	op1	"Florida"	0.0.0.2.0	0.0.0.2.0.0	
# ::edge	possible	domain	mean-01	0.2	0	
# ::edge	promise-01	ARG0	business	0.1.0	0.1	
# ::edge	promise-01	ARG1	job	0.1.0	0.1.0.0	
# ::edge	prove-01	ARG0	test-01	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	prove-01	ARG1	succeed-01	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	seem-01	ARG1	work-01	0.0.0.1	0.0.0	
# ::edge	state	name	name	0.0.0.2	0.0.0.2.0	
# ::edge	succeed-01	ARG2	seem-01	0.0.0.1.0	0.0.0.1	
# ::edge	work-01	ARG0	it	0.0.0	0.0	
# ::edge	work-01	ARG1	system	0.0.0	0.0.0.0	
# ::edge	work-01	location	state	0.0.0	0.0.0.2	
(m / mean-01 
      :ARG0 (i / it 
            :ARG0-of (w / work-01 
                  :ARG1 (s3 / system) 
                  :ARG1-of (s2 / seem-01 
                        :ARG2-of (s4 / succeed-01 
                              :ARG1-of (p3 / prove-01 
                                    :ARG0 (t / test-01)))) 
                  :location (s / state 
                        :name (n / name 
                              :op1 "Florida")))) 
      :ARG1 (b / business 
            :ARG0-of (p / promise-01 
                  :ARG1 (j / job))) 
      :domain-of (p2 / possible))

# ::snt michael their younger brother had promised to come from london at easter but luke the eldest still would not come
# ::tok michael their younger brother had promised to come from london at easter but luke the eldest still would not come
# ::alignments 16-17|0.1.1 12-13|0 9-10|0.1.0.0.0+0.1.0.0+0.1.0 5-6|0.1.2 3-4|0.1.3+0.1 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:24.134
# ::node	0	contrast-01	12-13
# ::node	0.0	young	2-3
# ::node	0.1	have-rel-role-91	3-4
# ::node	0.1.0	city	9-10
# ::node	0.1.0.0	name	9-10
# ::node	0.1.0.0.0	"London"	9-10
# ::node	0.1.1	still	16-17
# ::node	0.1.2	promise-01	5-6
# ::node	0.1.3	brother	3-4
# ::root	0	contrast-01
# ::edge	city	name	name	0.1.0	0.1.0.0	
# ::edge	contrast-01	ARG1	young	0	0.0	
# ::edge	contrast-01	ARG2	have-rel-role-91	0	0.1	
# ::edge	have-rel-role-91	ARG0	city	0.1	0.1.0	
# ::edge	have-rel-role-91	ARG1	still	0.1	0.1.1	
# ::edge	have-rel-role-91	ARG2	brother	0.1	0.1.3	
# ::edge	name	op1	"London"	0.1.0.0	0.1.0.0.0	
# ::edge	promise-01	ARG1	have-rel-role-91	0.1.2	0.1	
(c / contrast-01 
      :ARG1 (y / young) 
      :ARG2 (h / have-rel-role-91 
            :ARG0 (c2 / city 
                  :name (n / name 
                        :op1 "London")) 
            :ARG1 (s / still) 
            :ARG1-of (p / promise-01) 
            :ARG2 (b / brother)))

# ::snt is there one word of evidence that this was ever promised by anyone let along agreed on
# ::tok is there one word of evidence that this was ever promised by anyone let along agreed on
# ::alignments 15-16|0.0.0.0 14-15|0.0.0.1.2 13-14|0.0.0 12-13|0.0.0.0.0 10-11|0.0.0.1 9-10|0.0.0.1.1 7-8|0.0.0.1.0 5-6|0 3-4|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:24.267
# ::node	0	evidence-01	5-6
# ::node	0.0	word	3-4
# ::node	0.0.0	let-01	13-14
# ::node	0.0.0.0	agree-01	15-16
# ::node	0.0.0.0.0	anyone	12-13
# ::node	0.0.0.1	promise-01	10-11
# ::node	0.0.0.1.0	this	7-8
# ::node	0.0.0.1.1	ever	9-10
# ::node	0.0.0.1.2	along	14-15
# ::root	0	evidence-01
(e2 / evidence-01 
      :prep-against-of (w / word 
            :ARG1-of (l / let-01 
                  :ARG2 (a / agree-01 
                        :ARG1 (a3 / anyone)) 
                  :condition-of (p / promise-01 
                        :ARG1 (t / this) 
                        :time (e / ever) 
                        :time (a2 / along)))))

# ::snt a new fifa president joao havelange had been elected after campaigning vigorously among the less powerful countries promising them an expanded tournament to meet their increased ambitions
# ::tok a new fifa president joao havelange had been elected after campaigning vigorously among the less powerful countries promising them an expanded tournament to meet their increased ambitions
# ::alignments 26-27|0.1 25-26|0 20-21|0.2 17-18|0.2.0.0 16-17|0.2.0 15-16|0.2.0.2 14-15|0.2.0.2.0 12-13|0.2.0.3 11-12|0.2.0.3.0.0 10-11|0.2.0.3.0 9-10|0.2.0.3.0.1 8-9|0.2.0.3.0.1.0 3-4|0.2.0.1.0+0.2.0.1 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:24.457
# ::node	0	increase-01	25-26
# ::node	0.0	new	1-2
# ::node	0.1	ambition	26-27
# ::node	0.2	expand-01	20-21
# ::node	0.2.0	country	16-17
# ::node	0.2.0.0	promise-01	17-18
# ::node	0.2.0.1	have-org-role-91	3-4
# ::node	0.2.0.1.0	president	3-4
# ::node	0.2.0.2	powerful	15-16
# ::node	0.2.0.2.0	less	14-15
# ::node	0.2.0.3	among	12-13
# ::node	0.2.0.3.0	campaign-01	10-11
# ::node	0.2.0.3.0.0	vigorous	11-12
# ::node	0.2.0.3.0.1	after	9-10
# ::node	0.2.0.3.0.1.0	elect-01	8-9
# ::root	0	increase-01
# ::edge	after	op1	campaign-01	0.2.0.3.0.1	0.2.0.3.0	
# ::edge	among	op1	country	0.2.0.3	0.2.0	
# ::edge	campaign-01	location	among	0.2.0.3.0	0.2.0.3	
# ::edge	campaign-01	manner	vigorous	0.2.0.3.0	0.2.0.3.0.0	
# ::edge	country	mod	powerful	0.2.0	0.2.0.2	
# ::edge	elect-01	time	after	0.2.0.3.0.1.0	0.2.0.3.0.1	
# ::edge	expand-01	ARG0	country	0.2	0.2.0	
# ::edge	expand-01	ARG1	increase-01	0.2	0	
# ::edge	have-org-role-91	ARG1	country	0.2.0.1	0.2.0	
# ::edge	have-org-role-91	ARG2	president	0.2.0.1	0.2.0.1.0	
# ::edge	increase-01	ARG0	new	0	0.0	
# ::edge	increase-01	ARG1	ambition	0	0.1	
# ::edge	powerful	degree	less	0.2.0.2	0.2.0.2.0	
# ::edge	promise-01	ARG0	country	0.2.0.0	0.2.0	
(i / increase-01 
      :ARG0 (n / new) 
      :ARG1 (a / ambition) 
      :ARG1-of (e / expand-01 
            :ARG0 (c / country 
                  :ARG0-of (p / promise-01) 
                  :ARG1-of (h / have-org-role-91 
                        :ARG2 (p3 / president)) 
                  :mod (p2 / powerful 
                        :degree (l / less)) 
                  :op-of (a2 / among 
                        :location-of (c2 / campaign-01 
                              :manner (v / vigorous) 
                              :op-of (a3 / after 
                                    :time-of (e2 / elect-01)))))))

# ::snt the premier mr michael ahern who took the leadership of the national party from mr bjelkepetersen 18 months ago promised to carry out all the commissions recommendations swiftly
# ::tok the premier mr michael ahern who took the leadership of the national party from mr bjelkepetersen 18 months ago promised to carry out all the commissions recommendations swiftly
# ::alignments 27-28|0.2 26-27|0.1 25-26|0.1.0 23-24|0.1.2 19-20|0 17-18|0.1.1.0.0+0.1.1.0 16-17|0.1.1 12-13|0.0 11-12|0.0.0 1-2|0.1.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:24.616
# ::node	0	promise-01	19-20
# ::node	0.0	party	12-13
# ::node	0.0.0	nation	11-12
# ::node	0.1	recommend-01	26-27
# ::node	0.1.0	commission	25-26
# ::node	0.1.1	18	16-17
# ::node	0.1.1.0	temporal-quantity	17-18
# ::node	0.1.1.0.0	month	17-18
# ::node	0.1.2	all	23-24
# ::node	0.1.2.0	premier	1-2
# ::node	0.2	swift	27-28
# ::root	0	promise-01
# ::edge	18	op1	recommend-01	0.1.1	0.1	
# ::edge	all	poss	premier	0.1.2	0.1.2.0	
# ::edge	party	mod	nation	0.0	0.0.0	
# ::edge	promise-01	ARG0	party	0	0.0	
# ::edge	promise-01	ARG1	recommend-01	0	0.1	
# ::edge	recommend-01	ARG1	commission	0.1	0.1.0	
# ::edge	recommend-01	quant	all	0.1	0.1.2	
# ::edge	swift	condition	promise-01	0.2	0	
# ::edge	temporal-quantity	quant	18	0.1.1.0	0.1.1	
# ::edge	temporal-quantity	unit	month	0.1.1.0	0.1.1.0.0	
(p / promise-01 
      :ARG0 (p2 / party 
            :mod (n / nation)) 
      :ARG1 (r / recommend-01 
            :ARG1 (c / commission) 
            :op-of (1 / 18 
                  :quant-of (t / temporal-quantity 
                        :unit (m / month))) 
            :quant (a / all 
                  :poss (p3 / premier))) 
      :condition-of (s / swift))

# ::snt the takeover target which has dismissed the offer as completely inadequate has promised to unveil a rival buyout package valuing each share at between 75 and 100
# ::tok the takeover target which has dismissed the offer as completely inadequate has promised to unveil a rival buyout package valuing each share at between 75 and 100
# ::alignments 26-27|0.0.1.1.2.1 25-26|0 24-25|0.0.1.1.0.0 23-24|0.0.1.1.2.0 21-22|0.0.1.1.2 20-21|0.0.1.1.2.2 18-19|0.0.1.1.1.0 16-17|0.0.1.1.1.0.0 12-13|0.0.1.1.1 10-11|0.0.0.0+0.0.0 9-10|0.0.1.0 7-8|0.0 5-6|0.0.1 2-3|0.0.1.1 1-2|0.0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:24.906
# ::node	0	and	25-26
# ::node	0.0	offer-01	7-8
# ::node	0.0.0	adequate	10-11
# ::node	0.0.0.0	-	10-11
# ::node	0.0.1	dismiss-01	5-6
# ::node	0.0.1.0	complete	9-10
# ::node	0.0.1.1	target-01	2-3
# ::node	0.0.1.1.0	take-12	1-2
# ::node	0.0.1.1.0.0	75	24-25
# ::node	0.0.1.1.1	promise-01	12-13
# ::node	0.0.1.1.1.0	package	18-19
# ::node	0.0.1.1.1.0.0	rival-01	16-17
# ::node	0.0.1.1.2	share-01	21-22
# ::node	0.0.1.1.2.0	between	23-24
# ::node	0.0.1.1.2.1	100	26-27
# ::node	0.0.1.1.2.2	each	20-21
# ::root	0	and
(a / and 
      :ARG1-of (o / offer-01 
            :ARG0 (a2 / adequate 
                  :polarity -) 
            :ARG2-of (d / dismiss-01 
                  :ARG0 (c / complete) 
                  :ARG1 (t / target-01 
                        :ARG1 (t2 / take-12 
                              :ARG1 75) 
                        :ARG1-of (p2 / promise-01 
                              :ARG2 (p / package 
                                    :ARG0-of (r / rival-01))) 
                        :ARG2-of (s / share-01 
                              :ARG0 (b / between) 
                              :ARG1 100 
                              :mod (e / each))))))

# ::snt both men have promised not to make public statements on the peace process in an attempt to avoid compromising chances for a settlement again
# ::tok both men have promised not to make public statements on the peace process in an attempt to avoid compromising chances for a settlement again
# ::alignments 23-24|0.0.0.0.0.0 22-23|0.1 19-20|0 17-18|0.0 15-16|0.0.0 12-13|0.0.0.1.2 11-12|0.0.0.1.2.0 8-9|0.0.0.1+0.0.0.1.1 7-8|0.0.0.1.0 3-4|0.0.0.0.0 1-2|0.0.0.0 0-1|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:25.037
# ::node	0	chance-01	19-20
# ::node	0.0	avoid-01	17-18
# ::node	0.0.0	attempt-01	15-16
# ::node	0.0.0.0	man	1-2
# ::node	0.0.0.0.0	promise-01	3-4
# ::node	0.0.0.0.0.0	again	23-24
# ::node	0.0.0.0.1	both	0-1
# ::node	0.0.0.1	state-01	8-9
# ::node	0.0.0.1.0	public	7-8
# ::node	0.0.0.1.1	thing	8-9
# ::node	0.0.0.1.2	process	12-13
# ::node	0.0.0.1.2.0	peace	11-12
# ::node	0.1	settle-02	22-23
# ::root	0	chance-01
# ::edge	attempt-01	ARG0	man	0.0.0	0.0.0.0	
# ::edge	attempt-01	ARG1	avoid-01	0.0.0	0.0	
# ::edge	avoid-01	ARG1	chance-01	0.0	0	
# ::edge	chance-01	ARG2	settle-02	0	0.1	
# ::edge	man	mod	both	0.0.0.0	0.0.0.0.1	
# ::edge	process	mod	peace	0.0.0.1.2	0.0.0.1.2.0	
# ::edge	promise-01	ARG0	man	0.0.0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	again	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	state-01	ARG0	public	0.0.0.1	0.0.0.1.0	
# ::edge	state-01	ARG1	thing	0.0.0.1	0.0.0.1.1	
# ::edge	state-01	location	process	0.0.0.1	0.0.0.1.2	
# ::edge	state-01	topic	attempt-01	0.0.0.1	0.0.0	
(c / chance-01 
      :ARG1-of (a2 / avoid-01 
            :ARG1-of (a3 / attempt-01 
                  :ARG0 (m / man 
                        :ARG0-of (p4 / promise-01 
                              :ARG1 (a / again)) 
                        :mod (b / both)) 
                  :topic-of (s2 / state-01 
                        :ARG0 (p3 / public) 
                        :ARG1 (t / thing) 
                        :location (p / process 
                              :mod (p2 / peace))))) 
      :ARG2 (s / settle-02))

# ::snt and united scientific holdings being bid for by meggitt the engineering company promised to restore dividend payments
# ::tok and united scientific holdings being bid for by meggitt the engineering company promised to restore dividend payments
# ::alignments 16-17|0 14-15|0.0 12-13|0.0.0 11-12|0.0.0.0 10-11|0.0.0.0.0 5-6|0.0.0.0.0.0.0 3-4|0.0.0.0.0.0.0.0 2-3|0.0.0.0.0.0.0.0.1 1-2|0.0.0.0.0.0.0.0.0 0-1|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:25.160
# ::node	0	payment	16-17
# ::node	0.0	restore-01	14-15
# ::node	0.0.0	promise-01	12-13
# ::node	0.0.0.0	company	11-12
# ::node	0.0.0.0.0	engineer-01	10-11
# ::node	0.0.0.0.0.0	and	0-1
# ::node	0.0.0.0.0.0.0	bid-01	5-6
# ::node	0.0.0.0.0.0.0.0	hold-01	3-4
# ::node	0.0.0.0.0.0.0.0.0	unite-01	1-2
# ::node	0.0.0.0.0.0.0.0.1	science	2-3
# ::root	0	payment
(p / payment 
      :ARG1-of (r / restore-01 
            :ARG1-of (p2 / promise-01 
                  :ARG0 (c / company 
                        :mod (e / engineer-01 
                              :ARG1 (a / and 
                                    :ARG0-of (b / bid-01 
                                          :ARG1 (h / hold-01 
                                                :ARG1-of (u / unite-01) 
                                                :mod (s / science)))))))))

# ::snt cecil parkinson secretary of state for transport promised earlier this month that money would be no obstacle to the new safety measures after clapham
# ::tok cecil parkinson secretary of state for transport promised earlier this month that money would be no obstacle to the new safety measures after clapham
# ::alignments 22-23|0.1.0.0.0.0 21-22|0.1.0.0.0 20-21|0.1.0 19-20|0.1.0.0 16-17|0.1 15-16|0.1.2 12-13|0.1.1 10-11|0.2.0+0.2.0.1 9-10|0.2.0.0 8-9|0.2 7-8|0 6-7|0.0.0.0 4-5|0.0.0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:25.269
# ::node	0	promise-01	7-8
# ::node	0.0	secretary	2-3
# ::node	0.0.0	state	4-5
# ::node	0.0.0.0	transport-01	6-7
# ::node	0.1	obstacle	16-17
# ::node	0.1.0	safe-41	20-21
# ::node	0.1.0.0	new	19-20
# ::node	0.1.0.0.0	measure	21-22
# ::node	0.1.0.0.0.0	after	22-23
# ::node	0.1.1	money	12-13
# ::node	0.1.2	-	15-16
# ::node	0.2	early	8-9
# ::node	0.2.0	month	10-11
# ::node	0.2.0.0	this	9-10
# ::node	0.2.0.1	temporal-quantity	10-11
# ::root	0	promise-01
# ::edge	measure	location	after	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	measure	mod	new	0.1.0.0.0	0.1.0.0	
# ::edge	month	mod	this	0.2.0	0.2.0.0	
# ::edge	month	time	early	0.2.0	0.2	
# ::edge	obstacle	domain	money	0.1	0.1.1	
# ::edge	obstacle	polarity	-	0.1	0.1.2	
# ::edge	promise-01	ARG0	secretary	0	0.0	
# ::edge	promise-01	ARG1	obstacle	0	0.1	
# ::edge	promise-01	time	early	0	0.2	
# ::edge	safe-41	ARG0	obstacle	0.1.0	0.1	
# ::edge	safe-41	ARG1	new	0.1.0	0.1.0.0	
# ::edge	secretary	mod	state	0.0	0.0.0	
# ::edge	state	name	transport-01	0.0.0	0.0.0.0	
# ::edge	temporal-quantity	unit	month	0.2.0.1	0.2.0	
(p / promise-01 
      :ARG0 (s3 / secretary 
            :mod (s2 / state 
                  :name (t3 / transport-01))) 
      :ARG1 (o / obstacle 
            :ARG0-of (s / safe-41 
                  :ARG1 (n / new 
                        :mod-of (m / measure 
                              :location (a / after)))) 
            :domain (m2 / money) 
            :polarity (- / -)) 
      :time (e / early 
            :time-of (m3 / month 
                  :mod (t2 / this) 
                  :unit-of (t / temporal-quantity))))

# ::snt a full inquiry was promised today into a gas leak at a nuclear power station which prompted the evacuation of 250 workers
# ::tok a full inquiry was promised today into a gas leak at a nuclear power station which prompted the evacuation of 250 workers
# ::alignments 21-22|0.1.0.0.0+0.1.0.0 20-21|0.0.0 16-17|0.1.0 14-15|0.1 13-14|0.1.1 12-13|0.1.1.1 9-10|0.1.1.0 8-9|0.1.1.0.0 5-6|0.2 4-5|0 2-3|0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:25.491
# ::node	0	promise-01	4-5
# ::node	0.0	inquire-01	2-3
# ::node	0.0.0	250	20-21
# ::node	0.0.1	full	1-2
# ::node	0.1	station	14-15
# ::node	0.1.0	prompt-02	16-17
# ::node	0.1.0.0	person	21-22
# ::node	0.1.0.0.0	work-01	21-22
# ::node	0.1.1	power	13-14
# ::node	0.1.1.0	leak-01	9-10
# ::node	0.1.1.0.0	gas	8-9
# ::node	0.1.1.1	nucleus	12-13
# ::node	0.2	today	5-6
# ::root	0	promise-01
# ::edge	inquire-01	ARG1	250	0.0	0.0.0	
# ::edge	inquire-01	mod	full	0.0	0.0.1	
# ::edge	leak-01	ARG1	power	0.1.1.0	0.1.1	
# ::edge	leak-01	ARG3	gas	0.1.1.0	0.1.1.0.0	
# ::edge	power	mod	nucleus	0.1.1	0.1.1.1	
# ::edge	promise-01	ARG1	inquire-01	0	0.0	
# ::edge	promise-01	ARG2	station	0	0.1	
# ::edge	promise-01	time	today	0	0.2	
# ::edge	prompt-02	ARG0	station	0.1.0	0.1	
# ::edge	prompt-02	ARG1	person	0.1.0	0.1.0.0	
# ::edge	station	mod	power	0.1	0.1.1	
# ::edge	work-01	ARG0	person	0.1.0.0.0	0.1.0.0	
(p4 / promise-01 
      :ARG1 (i / inquire-01 
            :ARG1 250 
            :mod (f / full)) 
      :ARG2 (s / station 
            :ARG0-of (p2 / prompt-02 
                  :ARG1 (p / person 
                        :ARG0-of (w / work-01))) 
            :mod (p3 / power 
                  :ARG1-of (l / leak-01 
                        :ARG3 (g / gas)) 
                  :mod (n / nucleus))) 
      :time (t / today))

# ::snt councillor arthur titherington told members of the district councils planning committee on monday the county council had promised to provide a lorry park in the witney area
# ::tok councillor arthur titherington told members of the district councils planning committee on monday the county council had promised to provide a lorry park in the witney area
# ::alignments 26-27|0.0.1.1 22-23|0.0.1.0 19-20|0.0.1 17-18|0.0 15-16|0.0.0 14-15|0.0.0.0 10-11|0.1.0 9-10|0.1.0.0 8-9|0.1.0.0.0 7-8|0.1.0.0.1 4-5|0.1.1+0.1 3-4|0 0-1|0.1.0.1.0+0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:25.689
# ::node	0	tell-01	3-4
# ::node	0.0	promise-01	17-18
# ::node	0.0.0	council	15-16
# ::node	0.0.0.0	county	14-15
# ::node	0.0.1	provide-01	19-20
# ::node	0.0.1.0	park	22-23
# ::node	0.0.1.1	area	26-27
# ::node	0.1	have-org-role-91	4-5
# ::node	0.1.0	committee	10-11
# ::node	0.1.0.0	plan-01	9-10
# ::node	0.1.0.0.0	council	8-9
# ::node	0.1.0.0.1	district	7-8
# ::node	0.1.0.1	have-org-role-91	0-1
# ::node	0.1.0.1.0	councillor	0-1
# ::node	0.1.1	member	4-5
# ::root	0	tell-01
# ::edge	council	mod	county	0.0.0	0.0.0.0	
# ::edge	have-org-role-91	ARG1	committee	0.1	0.1.0	
# ::edge	have-org-role-91	ARG1	committee	0.1.0.1	0.1.0	
# ::edge	have-org-role-91	ARG2	councillor	0.1.0.1	0.1.0.1.0	
# ::edge	have-org-role-91	ARG2	member	0.1	0.1.1	
# ::edge	plan-01	ARG0	committee	0.1.0.0	0.1.0	
# ::edge	plan-01	ARG1	council	0.1.0.0	0.1.0.0.0	
# ::edge	plan-01	mod	district	0.1.0.0	0.1.0.0.1	
# ::edge	promise-01	ARG0	council	0.0	0.0.0	
# ::edge	promise-01	ARG2	provide-01	0.0	0.0.1	
# ::edge	provide-01	ARG1	park	0.0.1	0.0.1.0	
# ::edge	provide-01	ARG2	area	0.0.1	0.0.1.1	
# ::edge	tell-01	ARG1	promise-01	0	0.0	
# ::edge	tell-01	ARG2	have-org-role-91	0	0.1	
(t / tell-01 
      :ARG1 (p3 / promise-01 
            :ARG0 (c / council 
                  :mod (c2 / county)) 
            :ARG2 (p2 / provide-01 
                  :ARG1 (p / park) 
                  :ARG2 (a / area))) 
      :ARG2 (h / have-org-role-91 
            :ARG1 (c3 / committee 
                  :ARG0-of (p4 / plan-01 
                        :ARG1 (c4 / council) 
                        :mod (d / district)) 
                  :ARG1-of (h2 / have-org-role-91 
                        :ARG2 (c5 / councillor))) 
            :ARG2 (m / member)))

# ::snt he also promised speedy punishment for all those who commit highway robbery burglary and weaken peoples morale
# ::tok he also promised speedy punishment for all those who commit highway robbery burglary and weaken peoples morale
# ::alignments 15-16|0.0.0.1.0.0 14-15|0.0.0.1.0 13-14|0.0.0.1 12-13|0.0 10-11|0 9-10|0.0.0 6-7|0.0.0.0.0.0 4-5|0.0.0.0.0 2-3|0.0.0.0.1 1-2|0.0.0.0.1.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:25.790
# ::node	0	highway	10-11
# ::node	0.0	burgle-01	12-13
# ::node	0.0.0	commit-02	9-10
# ::node	0.0.0.0	he	0-1
# ::node	0.0.0.0.0	punish-01	4-5
# ::node	0.0.0.0.0.0	all	6-7
# ::node	0.0.0.0.1	promise-01	2-3
# ::node	0.0.0.0.1.0	also	1-2
# ::node	0.0.0.1	and	13-14
# ::node	0.0.0.1.0	weaken-01	14-15
# ::node	0.0.0.1.0.0	people	15-16
# ::root	0	highway
(h / highway 
      :ARG1-of (b / burgle-01 
            :ARG1-of (c / commit-02 
                  :ARG0 (h2 / he 
                        :ARG0-of (p2 / punish-01 
                              :ARG1 (a2 / all)) 
                        :ARG0-of (p3 / promise-01 
                              :mod (a3 / also))) 
                  :op-of (a / and 
                        :op1 (w / weaken-01 
                              :ARG1 (p / people))))))

# ::snt bulgarias communist leaders yesterday promised talks with the opposition early in 1990
# ::tok bulgarias communist leaders yesterday promised talks with the opposition early in 1990
# ::alignments 11-12|0.0.1.0+0.0.1 9-10|0.1.0 8-9|0.1 5-6|0.0 4-5|0 3-4|0.2 2-3|0.0.0.0+0.0.0 1-2|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:25.827
# ::node	0	promise-01	4-5
# ::node	0.0	talk-01	5-6
# ::node	0.0.0	person	2-3
# ::node	0.0.0.0	lead-02	2-3
# ::node	0.0.0.0.0	communism	1-2
# ::node	0.0.1	date-entity	11-12
# ::node	0.0.1.0	1990	11-12
# ::node	0.1	oppose-01	8-9
# ::node	0.1.0	early	9-10
# ::node	0.2	yesterday	3-4
# ::root	0	promise-01
# ::edge	date-entity	year	1990	0.0.1	0.0.1.0	
# ::edge	lead-02	ARG0	person	0.0.0.0	0.0.0	
# ::edge	lead-02	ARG1	communism	0.0.0.0	0.0.0.0.0	
# ::edge	oppose-01	time	early	0.1	0.1.0	
# ::edge	promise-01	ARG1	talk-01	0	0.0	
# ::edge	promise-01	ARG2	oppose-01	0	0.1	
# ::edge	promise-01	time	yesterday	0	0.2	
# ::edge	talk-01	ARG0	person	0.0	0.0.0	
# ::edge	talk-01	time	date-entity	0.0	0.0.1	
(p / promise-01 
      :ARG1 (t / talk-01 
            :ARG0 (p2 / person 
                  :ARG0-of (l / lead-02 
                        :ARG1 (c / communism))) 
            :time (d / date-entity 
                  :year 1990)) 
      :ARG2 (o / oppose-01 
            :time (e / early)) 
      :time (y / yesterday))

# ::snt i trust they will keep the emergency service on the road as they have promised
# ::tok i trust they will keep the emergency service on the road as they have promised
# ::alignments 14-15|0 12-13|0.1 10-11|0.3 6-7|0.2.0.0 2-3|0.0 1-2|0.2.0 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:25.955
# ::node	0	promise-01	14-15
# ::node	0.0	they	2-3
# ::node	0.1	they	12-13
# ::node	0.2	i	0-1
# ::node	0.2.0	trust-01	1-2
# ::node	0.2.0.0	emergency	6-7
# ::node	0.3	road	10-11
# ::root	0	promise-01
# ::edge	promise-01	ARG0	they	0	0.0	
# ::edge	promise-01	ARG1	they	0	0.1	
# ::edge	promise-01	ARG2	i	0	0.2	
# ::edge	promise-01	prep-on	road	0	0.3	
# ::edge	trust-01	ARG0	i	0.2.0	0.2	
# ::edge	trust-01	ARG1	emergency	0.2.0	0.2.0.0	
(p / promise-01 
      :ARG0 (t2 / they) 
      :ARG1 (t / they) 
      :ARG2 (i / i 
            :ARG0-of (t3 / trust-01 
                  :ARG1 (e / emergency))) 
      :prep-on (r / road))

# ::snt mr kaifu surprised critics with a policy speech early last month in which he broke new ground by officially recognising a trend towards income disparities pledging to bring down land prices and promising to work towards genuine equal opportunity for women
# ::tok mr kaifu surprised critics with a policy speech early last month in which he broke new ground by officially recognising a trend towards income disparities pledging to bring down land prices and promising to work towards genuine equal opportunity for women
# ::alignments 40-41|0.1.0.0.0.0.0 38-39|0.1.0.0.0.0 37-38|0.1.0.0.0 36-37|0.1.0.0.0.0.1 32-33|0.1.0 31-32|0.1 30-31|0.0.0 29-30|0.0.0.1 28-29|0.0.1 27-28|0.0 25-26|0 23-24|0.1.0.1.1 21-22|0.1.0.1 18-19|0.0.0.0 16-17|0.1.0.0 15-16|0.1.0.0.1 13-14|0.1.0.1.0 10-11|0.1.0.1.0.0.2.0.0+0.1.0.1.0.0.2.0 9-10|0.1.0.1.0.0.2.0.0.0 8-9|0.1.0.1.0.0.2 7-8|0.1.0.1.0.0.0 6-7|0.1.0.1.0.0.0.0 3-4|0.1.0.1.0.0.1 2-3|0.1.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:26.532
# ::node	0	pledge-01	25-26
# ::node	0.0	bring-01	27-28
# ::node	0.0.0	price-01	30-31
# ::node	0.0.0.0	official	18-19
# ::node	0.0.0.1	land	29-30
# ::node	0.0.1	down	28-29
# ::node	0.1	and	31-32
# ::node	0.1.0	promise-01	32-33
# ::node	0.1.0.0	ground	16-17
# ::node	0.1.0.0.0	equal-01	37-38
# ::node	0.1.0.0.0.0	opportunity	38-39
# ::node	0.1.0.0.0.0.0	woman	40-41
# ::node	0.1.0.0.0.0.1	genuine	36-37
# ::node	0.1.0.0.1	new	15-16
# ::node	0.1.0.1	trend-01	21-22
# ::node	0.1.0.1.0	he	13-14
# ::node	0.1.0.1.0.0	surprise-01	2-3
# ::node	0.1.0.1.0.0.0	speech	7-8
# ::node	0.1.0.1.0.0.0.0	policy	6-7
# ::node	0.1.0.1.0.0.1	critic	3-4
# ::node	0.1.0.1.0.0.2	early	8-9
# ::node	0.1.0.1.0.0.2.0	temporal-quantity	10-11
# ::node	0.1.0.1.0.0.2.0.0	month	10-11
# ::node	0.1.0.1.0.0.2.0.0.0	last	9-10
# ::node	0.1.0.1.1	income	23-24
# ::root	0	pledge-01
# ::edge	and	op1	pledge-01	0.1	0	
# ::edge	and	op2	promise-01	0.1	0.1.0	
# ::edge	bring-01	ARG1	price-01	0.0	0.0.0	
# ::edge	bring-01	direction	down	0.0	0.0.1	
# ::edge	early	op1	temporal-quantity	0.1.0.1.0.0.2	0.1.0.1.0.0.2.0	
# ::edge	equal-01	ARG0	ground	0.1.0.0.0	0.1.0.0	
# ::edge	equal-01	ARG1	opportunity	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	ground	mod	new	0.1.0.0	0.1.0.0.1	
# ::edge	income	prep-instead	trend-01	0.1.0.1.1	0.1.0.1	
# ::edge	month	mod	last	0.1.0.1.0.0.2.0.0	0.1.0.1.0.0.2.0.0.0	
# ::edge	opportunity	beneficiary	woman	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	opportunity	mod	genuine	0.1.0.0.0.0	0.1.0.0.0.0.1	
# ::edge	pledge-01	ARG1	bring-01	0	0.0	
# ::edge	price-01	ARG0	official	0.0.0	0.0.0.0	
# ::edge	price-01	ARG1	land	0.0.0	0.0.0.1	
# ::edge	promise-01	ARG0	ground	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG1	trend-01	0.1.0	0.1.0.1	
# ::edge	speech	mod	policy	0.1.0.1.0.0.0	0.1.0.1.0.0.0.0	
# ::edge	surprise-01	ARG0	speech	0.1.0.1.0.0	0.1.0.1.0.0.0	
# ::edge	surprise-01	ARG1	critic	0.1.0.1.0.0	0.1.0.1.0.0.1	
# ::edge	surprise-01	ARG2	he	0.1.0.1.0.0	0.1.0.1.0	
# ::edge	surprise-01	time	early	0.1.0.1.0.0	0.1.0.1.0.0.2	
# ::edge	temporal-quantity	unit	month	0.1.0.1.0.0.2.0	0.1.0.1.0.0.2.0.0	
# ::edge	trend-01	ARG0	he	0.1.0.1	0.1.0.1.0	
(p3 / pledge-01 
      :ARG1 (b / bring-01 
            :ARG1 (p2 / price-01 
                  :ARG0 (o2 / official) 
                  :ARG1 (l / land)) 
            :direction (d / down)) 
      :op-of (a / and 
            :op1 (p / promise-01 
                  :ARG0 (g2 / ground 
                        :ARG0-of (e / equal-01 
                              :ARG1 (o / opportunity 
                                    :beneficiary (w / woman) 
                                    :mod (g / genuine))) 
                        :mod (n / new)) 
                  :ARG1 (t / trend-01 
                        :ARG0 (h / he 
                              :ARG2-of (s2 / surprise-01 
                                    :ARG0 (s / speech 
                                          :mod (p4 / policy)) 
                                    :ARG1 (c / critic) 
                                    :time (e2 / early 
                                          :op1 (t2 / temporal-quantity 
                                                :unit (m / month 
                                                      :mod (l2 / last)))))) 
                        :prep-instead-of (i / income)))))

# ::snt 9718 promise-v 801256 Promise 537527
# ::tok 9718 promise - v 801256 Promise 537527
# ::alignments 6-7|0.0.2+0.0.1+0.0.0+0.0 4-5|0.1.0.2+0.1.0.1+0.1.0.0+0.1.0 1-2|0 0-1|0.1.1+0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:26.565
# ::node	0	promise-01	1-2
# ::node	0.0	date-entity	6-7
# ::node	0.0.0	27	6-7
# ::node	0.0.1	75	6-7
# ::node	0.0.2	53	6-7
# ::node	0.1	date-entity	0-1
# ::node	0.1.0	date-entity	4-5
# ::node	0.1.0.0	56	4-5
# ::node	0.1.0.1	12	4-5
# ::node	0.1.0.2	80	4-5
# ::node	0.1.1	9718	0-1
# ::root	0	promise-01
# ::edge	date-entity	day	27	0.0	0.0.0	
# ::edge	date-entity	day	56	0.1.0	0.1.0.0	
# ::edge	date-entity	month	12	0.1.0	0.1.0.1	
# ::edge	date-entity	month	75	0.0	0.0.1	
# ::edge	date-entity	name	date-entity	0.1	0.1.0	
# ::edge	date-entity	year	53	0.0	0.0.2	
# ::edge	date-entity	year	80	0.1.0	0.1.0.2	
# ::edge	date-entity	year	9718	0.1	0.1.1	
# ::edge	promise-01	ARG1	date-entity	0	0.0	
# ::edge	promise-01	time	date-entity	0	0.1	
(p / promise-01 
      :ARG1 (d / date-entity 
            :day 27 
            :month 75 
            :year 53) 
      :time (d3 / date-entity 
            :name (d2 / date-entity 
                  :day 56 
                  :month 12 
                  :year 80) 
            :year 9718))

# ::snt  Don\t ever let me lose you, Tory.  Promise me you\ll never leave me."
# ::tok Don\t ever let me lose you , Tory . Promise me you\ll never leave me . "
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:26.565
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt EMPTY_SENTENCE
# ::tok EMPTY_SENTENCE
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:26.567
# ::node	0	amr-empty	0-1
# ::root	0	amr-empty
(a / amr-empty)

# ::snt it is not implausible that in such elections a government might be elected which promised speedy reunification regardless of what the rest of europe thinks and that in free national elections in west germany a government might be elected which promised the same
# ::tok it is not implausible that in such elections a government might be elected which promised speedy reunification regardless of what the rest of europe thinks and that in free national elections in west germany a government might be elected which promised the same
# ::alignments 42-43|0.1.2.0.0 40-41|0.1.2.0 38-39|0.1.2 32-33|0.1.2.0.0.0 30-31|0.1.2.1 29-30|0.1.2.1.1 28-29|0.1.2.1.0 25-26|0.1 24-25|0 23-24|0.0.0.0.0+0.0.0.0+0.0.0 21-22|0.0 14-15|0.1.1 12-13|0.1.0 7-8|0.1.0.1 6-7|0.1.0.1.0 0-1|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:26.721
# ::node	0	think-01	24-25
# ::node	0.0	rest	21-22
# ::node	0.0.0	continent	23-24
# ::node	0.0.0.0	name	23-24
# ::node	0.0.0.0.0	"Europe"	23-24
# ::node	0.1	and	25-26
# ::node	0.1.0	elect-01	12-13
# ::node	0.1.0.0	it	0-1
# ::node	0.1.0.1	elect-01	7-8
# ::node	0.1.0.1.0	such	6-7
# ::node	0.1.1	promise-01	14-15
# ::node	0.1.2	elect-01	38-39
# ::node	0.1.2.0	promise-01	40-41
# ::node	0.1.2.0.0	same-41	42-43
# ::node	0.1.2.0.0.0	west	32-33
# ::node	0.1.2.1	elect-01	30-31
# ::node	0.1.2.1.0	free-41	28-29
# ::node	0.1.2.1.1	nation	29-30
# ::root	0	think-01
# ::edge	and	op1	promise-01	0.1	0.1.1	
# ::edge	and	op2	think-01	0.1	0	
# ::edge	and	op3	elect-01	0.1	0.1.2	
# ::edge	continent	name	name	0.0.0	0.0.0.0	
# ::edge	continent	part	rest	0.0.0	0.0	
# ::edge	elect-01	ARG0	it	0.1.0	0.1.0.0	
# ::edge	elect-01	ARG1	and	0.1.0	0.1	
# ::edge	elect-01	ARG1	promise-01	0.1.2	0.1.2.0	
# ::edge	elect-01	mod	nation	0.1.2.1	0.1.2.1.1	
# ::edge	elect-01	mod	such	0.1.0.1	0.1.0.1.0	
# ::edge	elect-01	time	elect-01	0.1.0	0.1.0.1	
# ::edge	elect-01	time	elect-01	0.1.2	0.1.2.1	
# ::edge	free-41	ARG1	elect-01	0.1.2.1.0	0.1.2.1	
# ::edge	name	op1	"Europe"	0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	ARG1	same-41	0.1.2.0	0.1.2.0.0	
# ::edge	same-41	ARG1	west	0.1.2.0.0	0.1.2.0.0.0	
# ::edge	think-01	ARG0	rest	0	0.0	
(t / think-01 
      :ARG0 (r / rest 
            :part-of (c / continent 
                  :name (n2 / name 
                        :op1 "Europe"))) 
      :op-of (a / and 
            :ARG1-of (e3 / elect-01 
                  :ARG0 (i / it) 
                  :time (e4 / elect-01 
                        :mod (s2 / such))) 
            :op1 (p2 / promise-01) 
            :op2 (e / elect-01 
                  :ARG1 (p / promise-01 
                        :ARG1 (s / same-41 
                              :ARG1 (w / west))) 
                  :time (e2 / elect-01 
                        :ARG1-of (f / free-41) 
                        :mod (n / nation)))))

# ::snt she d heard about the peoples palace a museum concerned with glasgow and its past and promised herself shed pay it a visit in the near future
# ::tok she d heard about the peoples palace a museum concerned with glasgow and its past and promised herself shed pay it a visit in the near future
# ::alignments 26-27|0.1.0.0.1.1 25-26|0.1.0.0.1.1.0 22-23|0.1.0.0.1 20-21|0.1.0.0.1.0 19-20|0.1.0.0 18-19|0.1.0 16-17|0.1.0.1 15-16|0.1.0.1.1 14-15|0.1 12-13|0 9-10|0.0 5-6|0.1.0.0.0 2-3|0.1.0.1.0.0 1-2|0.1.0.1.0.1 0-1|0.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:27.089
# ::node	0	and	12-13
# ::node	0.0	concern-01	9-10
# ::node	0.1	past	14-15
# ::node	0.1.0	shed-01	18-19
# ::node	0.1.0.0	pay-01	19-20
# ::node	0.1.0.0.0	people	5-6
# ::node	0.1.0.0.1	visit-01	22-23
# ::node	0.1.0.0.1.0	it	20-21
# ::node	0.1.0.0.1.1	future	26-27
# ::node	0.1.0.0.1.1.0	near	25-26
# ::node	0.1.0.1	promise-01	16-17
# ::node	0.1.0.1.0	she	0-1
# ::node	0.1.0.1.0.0	hear-01	2-3
# ::node	0.1.0.1.0.1	d	1-2
# ::node	0.1.0.1.1	and	15-16
# ::root	0	and
# ::edge	and	op1	past	0	0.1	
# ::edge	and	op1	promise-01	0.1.0.1.1	0.1.0.1	
# ::edge	concern-01	ARG0	and	0.0	0	
# ::edge	d	quant	she	0.1.0.1.0.1	0.1.0.1.0	
# ::edge	future	mod	near	0.1.0.0.1.1	0.1.0.0.1.1.0	
# ::edge	hear-01	ARG0	she	0.1.0.1.0.0	0.1.0.1.0	
# ::edge	pay-01	ARG0	people	0.1.0.0	0.1.0.0.0	
# ::edge	pay-01	ARG1	visit-01	0.1.0.0	0.1.0.0.1	
# ::edge	promise-01	ARG0	she	0.1.0.1	0.1.0.1.0	
# ::edge	promise-01	ARG1	shed-01	0.1.0.1	0.1.0	
# ::edge	shed-01	ARG0	past	0.1.0	0.1	
# ::edge	shed-01	ARG1	pay-01	0.1.0	0.1.0.0	
# ::edge	visit-01	ARG1	it	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	visit-01	time	future	0.1.0.0.1	0.1.0.0.1.1	
(a2 / and 
      :ARG0-of (c / concern-01) 
      :op1 (p3 / past 
            :ARG0-of (s / shed-01 
                  :ARG1 (p / pay-01 
                        :ARG0 (p4 / people) 
                        :ARG1 (v / visit-01 
                              :ARG1 (i / it) 
                              :time (f / future 
                                    :mod (n / near)))) 
                  :ARG1-of (p2 / promise-01 
                        :ARG0 (s2 / she 
                              :ARG0-of (h / hear-01) 
                              :quant-of (d / d)) 
                        :op-of (a / and)))))

# ::snt when dennis bark and david gress set out five years ago to write their history of west germany from 1945 to the present they cannot have known that its publication would coincide with the beginning of what promises to be the only successful revolution from below in german history
# ::tok when dennis bark and david gress set out five years ago to write their history of west germany from 1945 to the present they cannot have known that its publication would coincide with the beginning of what promises to be the only successful revolution from below in german history
# ::alignments 48-49|0.1.1.0 45-46|0.1.1 43-44|0.1 42-43|0.1.0 41-42|0.1.0.0 37-38|0 34-35|0.2 29-30|0.3 26-27|0.3.0 23-24|0.3.0.0 22-23|0.3.0.2 19-20|0.2.1.0+0.2.1 16-17|0.0 14-15|0.3.0.1 12-13|0.3.0.1.0 9-10|0.2.0.1+0.2.0 8-9|0.2.0.0 3-4|0.3.0.1.0.0 2-3|0.3.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:27.856
# ::node	0	promise-01	37-38
# ::node	0.0	west	16-17
# ::node	0.1	revolution	43-44
# ::node	0.1.0	succeed-01	42-43
# ::node	0.1.0.0	only	41-42
# ::node	0.1.1	below	45-46
# ::node	0.1.1.0	history	48-49
# ::node	0.2	begin-01	34-35
# ::node	0.2.0	temporal-quantity	9-10
# ::node	0.2.0.0	5	8-9
# ::node	0.2.0.1	year	9-10
# ::node	0.2.1	date-entity	19-20
# ::node	0.2.1.0	1945	19-20
# ::node	0.3	publication	29-30
# ::node	0.3.0	know-01	26-27
# ::node	0.3.0.0	they	23-24
# ::node	0.3.0.1	history	14-15
# ::node	0.3.0.1.0	write-01	12-13
# ::node	0.3.0.1.0.0	and	3-4
# ::node	0.3.0.1.0.0.0	bark-01	2-3
# ::node	0.3.0.2	present	22-23
# ::root	0	promise-01
# ::edge	and	op1	bark-01	0.3.0.1.0.0	0.3.0.1.0.0.0	
# ::edge	begin-01	ARG1	promise-01	0.2	0	
# ::edge	begin-01	time	date-entity	0.2	0.2.1	
# ::edge	below	op1	history	0.1.1	0.1.1.0	
# ::edge	date-entity	year	1945	0.2.1	0.2.1.0	
# ::edge	know-01	ARG0	they	0.3.0	0.3.0.0	
# ::edge	know-01	ARG1	history	0.3.0	0.3.0.1	
# ::edge	know-01	ARG2	publication	0.3.0	0.3	
# ::edge	know-01	time	present	0.3.0	0.3.0.2	
# ::edge	promise-01	ARG0	west	0	0.0	
# ::edge	promise-01	ARG1	revolution	0	0.1	
# ::edge	promise-01	ARG2	publication	0	0.3	
# ::edge	revolution	source	below	0.1	0.1.1	
# ::edge	succeed-01	ARG1	revolution	0.1.0	0.1	
# ::edge	succeed-01	mod	only	0.1.0	0.1.0.0	
# ::edge	temporal-quantity	op1	begin-01	0.2.0	0.2	
# ::edge	temporal-quantity	quant	5	0.2.0	0.2.0.0	
# ::edge	temporal-quantity	unit	year	0.2.0	0.2.0.1	
# ::edge	write-01	ARG0	and	0.3.0.1.0	0.3.0.1.0.0	
# ::edge	write-01	ARG1	history	0.3.0.1.0	0.3.0.1	
(p / promise-01 
      :ARG0 (w / west) 
      :ARG1 (r / revolution 
            :ARG1-of (s / succeed-01 
                  :mod (o / only)) 
            :source (b / below 
                  :op1 (h / history))) 
      :ARG1-of (b2 / begin-01 
            :op-of (t2 / temporal-quantity 
                  :quant 5 
                  :unit (y / year)) 
            :time (d / date-entity 
                  :year 1945)) 
      :ARG2 (p2 / publication 
            :ARG2-of (k / know-01 
                  :ARG0 (t / they) 
                  :ARG1 (h2 / history 
                        :ARG1-of (w2 / write-01 
                              :ARG0 (a / and 
                                    :op1 (b3 / bark-01)))) 
                  :time (p3 / present))))

# ::snt the caravan on the withy bed was again discussed and the owners have promised to move it
# ::tok the caravan on the withy bed was again discussed and the owners have promised to move it
# ::alignments 16-17|0.1.0.0.0 13-14|0.1 11-12|0.1.0.0+0.1.0 9-10|0 8-9|0.0 7-8|0.0.1 5-6|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:27.885
# ::node	0	and	9-10
# ::node	0.0	discuss-01	8-9
# ::node	0.0.0	bed	5-6
# ::node	0.0.1	again	7-8
# ::node	0.1	promise-01	13-14
# ::node	0.1.0	person	11-12
# ::node	0.1.0.0	own-01	11-12
# ::node	0.1.0.0.0	it	16-17
# ::root	0	and
# ::edge	and	op1	discuss-01	0	0.0	
# ::edge	and	op2	promise-01	0	0.1	
# ::edge	discuss-01	ARG1	bed	0.0	0.0.0	
# ::edge	discuss-01	mod	again	0.0	0.0.1	
# ::edge	own-01	ARG0	person	0.1.0.0	0.1.0	
# ::edge	own-01	ARG1	it	0.1.0.0	0.1.0.0.0	
# ::edge	promise-01	ARG0	person	0.1	0.1.0	
(a / and 
      :op1 (d / discuss-01 
            :ARG1 (b / bed) 
            :mod (a2 / again)) 
      :op2 (p / promise-01 
            :ARG0 (p2 / person 
                  :ARG0-of (o / own-01 
                        :ARG1 (i / it)))))

# ::snt the baroness promised to write to outline the governments policy towards providing support for new initiatives
# ::tok the baroness promised to write to outline the governments policy towards providing support for new initiatives
# ::alignments 15-16|0 14-15|0.1 12-13|0.0 11-12|0.0.0 9-10|0.0.0.0.0 8-9|0.0.0.0.0.0.0+0.0.0.0.0.0 6-7|0.0.0.0 4-5|0.0.0.0.1 2-3|0.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:27.926
# ::node	0	initiative	15-16
# ::node	0.0	support-01	12-13
# ::node	0.0.0	provide-01	11-12
# ::node	0.0.0.0	outline-01	6-7
# ::node	0.0.0.0.0	policy	9-10
# ::node	0.0.0.0.0.0	government-organization	8-9
# ::node	0.0.0.0.0.0.0	govern-01	8-9
# ::node	0.0.0.0.1	write-01	4-5
# ::node	0.0.0.0.1.0	promise-01	2-3
# ::node	0.1	new	14-15
# ::root	0	initiative
# ::edge	govern-01	ARG0	government-organization	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	initiative	mod	new	0	0.1	
# ::edge	outline-01	ARG1	policy	0.0.0.0	0.0.0.0.0	
# ::edge	outline-01	manner	provide-01	0.0.0.0	0.0.0	
# ::edge	policy	mod	government-organization	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	promise-01	ARG1	write-01	0.0.0.0.1.0	0.0.0.0.1	
# ::edge	provide-01	ARG1	support-01	0.0.0	0.0	
# ::edge	support-01	ARG0	initiative	0.0	0	
# ::edge	write-01	ARG1	outline-01	0.0.0.0.1	0.0.0.0	
(i / initiative 
      :ARG0-of (s / support-01 
            :ARG1-of (p / provide-01 
                  :manner-of (o / outline-01 
                        :ARG1 (p2 / policy 
                              :mod (g / government-organization 
                                    :ARG0-of (g2 / govern-01))) 
                        :ARG1-of (w / write-01 
                              :ARG1-of (p3 / promise-01))))) 
      :mod (n / new))

# ::snt the sunday service was promised to the industrys watchdog the post office users national council when tariffs were increased last year
# ::tok the sunday service was promised to the industrys watchdog the post office users national council when tariffs were increased last year
# ::alignments 20-21|0.2.3 19-20|0.2.3.0 18-19|0.2 16-17|0.2.1 14-15|0.2.2 13-14|0.2.2.0 11-12|0.0 10-11|0.0.0 8-9|0.1 4-5|0 1-2|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:28.023
# ::node	0	promise-01	4-5
# ::node	0.0	office	11-12
# ::node	0.0.0	post	10-11
# ::node	0.1	watchdog	8-9
# ::node	0.2	increase-01	18-19
# ::node	0.2.0	sunday	1-2
# ::node	0.2.1	tariff	16-17
# ::node	0.2.2	council	14-15
# ::node	0.2.2.0	nation	13-14
# ::node	0.2.3	year	20-21
# ::node	0.2.3.0	last	19-20
# ::root	0	promise-01
# ::edge	council	mod	nation	0.2.2	0.2.2.0	
# ::edge	increase-01	ARG0	sunday	0.2	0.2.0	
# ::edge	increase-01	ARG1	tariff	0.2	0.2.1	
# ::edge	increase-01	location	council	0.2	0.2.2	
# ::edge	increase-01	time	year	0.2	0.2.3	
# ::edge	office	mod	post	0.0	0.0.0	
# ::edge	promise-01	ARG1	office	0	0.0	
# ::edge	promise-01	ARG2	watchdog	0	0.1	
# ::edge	promise-01	condition	increase-01	0	0.2	
# ::edge	year	mod	last	0.2.3	0.2.3.0	
(p2 / promise-01 
      :ARG1 (o / office 
            :mod (p / post)) 
      :ARG2 (w / watchdog) 
      :condition (i / increase-01 
            :ARG0 (s / sunday) 
            :ARG1 (t / tariff) 
            :location (c / council 
                  :mod (n / nation)) 
            :time (y / year 
                  :mod (l / last))))

# ::snt yarranton in the appropriate setting of the royal society of arts promised that sport would be more sophisticated in massaging the system
# ::tok yarranton in the appropriate setting of the royal society of arts promised that sport would be more sophisticated in massaging the system
# ::alignments 21-22|0.0.0 17-18|0.1 13-14|0.1.0 11-12|0 7-11|0.0.1.0.0+0.0.1.0.1+0.0.1.0.2+0.0.1.0.3+0.0.1.0+0.0.1 4-5|0.0 3-4|0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:28.126
# ::node	0	promise-01	11-12
# ::node	0.0	set-02	4-5
# ::node	0.0.0	system	21-22
# ::node	0.0.1	organization	7-11
# ::node	0.0.1.0	name	7-11
# ::node	0.0.1.0.0	"arts"	7-11
# ::node	0.0.1.0.1	"of"	7-11
# ::node	0.0.1.0.2	"society"	7-11
# ::node	0.0.1.0.3	"royal"	7-11
# ::node	0.0.2	appropriate	3-4
# ::node	0.1	sophisticated	17-18
# ::node	0.1.0	sport	13-14
# ::root	0	promise-01
# ::edge	name	op1	"arts"	0.0.1.0	0.0.1.0.0	
# ::edge	name	op2	"of"	0.0.1.0	0.0.1.0.1	
# ::edge	name	op3	"society"	0.0.1.0	0.0.1.0.2	
# ::edge	name	op4	"royal"	0.0.1.0	0.0.1.0.3	
# ::edge	organization	name	name	0.0.1	0.0.1.0	
# ::edge	promise-01	ARG0	set-02	0	0.0	
# ::edge	promise-01	ARG1	sophisticated	0	0.1	
# ::edge	set-02	ARG0	system	0.0	0.0.0	
# ::edge	set-02	ARG1	organization	0.0	0.0.1	
# ::edge	set-02	mod	appropriate	0.0	0.0.2	
# ::edge	sophisticated	domain	sport	0.1	0.1.0	
(p / promise-01 
      :ARG0 (s4 / set-02 
            :ARG0 (s / system) 
            :ARG1 (o / organization 
                  :name (n / name 
                        :op1 "arts" 
                        :op2 "of" 
                        :op3 "society" 
                        :op4 "royal")) 
            :mod (a / appropriate)) 
      :ARG1 (s2 / sophisticated 
            :domain (s3 / sport)))

# ::snt she promised her support on the condition that mays and berthon were sidelined and rudd was given his chance
# ::tok she promised her support on the condition that mays and berthon were sidelined and rudd was given his chance
# ::alignments 18-19|0.1.0.0 16-17|0.1.0 13-14|0 12-13|0.1 9-10|0.0.0 6-7|0.2 3-4|0.0.1 1-2|0.0 0-1|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:28.303
# ::node	0	and	13-14
# ::node	0.0	promise-01	1-2
# ::node	0.0.0	and	9-10
# ::node	0.0.1	support-01	3-4
# ::node	0.0.1.0	she	0-1
# ::node	0.1	sideline	12-13
# ::node	0.1.0	give-01	16-17
# ::node	0.1.0.0	chance	18-19
# ::node	0.2	condition	6-7
# ::root	0	and
# ::edge	and	op1	sideline	0	0.1	
# ::edge	condition	poss	and	0.2	0	
# ::edge	give-01	ARG1	sideline	0.1.0	0.1	
# ::edge	give-01	ARG2	chance	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG0	and	0.0	0.0.0	
# ::edge	promise-01	ARG1	support-01	0.0	0.0.1	
# ::edge	promise-01	ARG4	and	0.0	0	
# ::edge	support-01	ARG1	she	0.0.1	0.0.1.0	
(a / and 
      :ARG4-of (p / promise-01 
            :ARG0 (a2 / and) 
            :ARG1 (s2 / support-01 
                  :ARG1 (s3 / she))) 
      :op1 (s / sideline 
            :ARG1-of (g / give-01 
                  :ARG2 (c / chance))) 
      :poss-of (c2 / condition))

# ::snt ministers promised that noone would be more than 3 per week worse off
# ::tok ministers promised that noone would be more than 3 per week worse off
# ::alignments 12-13|0.1.0 11-12|0.1 10-11|0.0.0.1 8-9|0.0.0.0 1-2|0 0-1|0.0+0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:28.428
# ::node	0	promise-01	1-2
# ::node	0.0	minister	0-1
# ::node	0.0.0	have-org-role-91	0-1
# ::node	0.0.0.0	3	8-9
# ::node	0.0.0.1	week	10-11
# ::node	0.1	bad	11-12
# ::node	0.1.0	off	12-13
# ::root	0	promise-01
# ::edge	bad	mod	off	0.1	0.1.0	
# ::edge	have-org-role-91	ARG0	3	0.0.0	0.0.0.0	
# ::edge	have-org-role-91	ARG1	week	0.0.0	0.0.0.1	
# ::edge	have-org-role-91	ARG2	minister	0.0.0	0.0	
# ::edge	promise-01	ARG0	minister	0	0.0	
# ::edge	promise-01	ARG1	bad	0	0.1	
(p / promise-01 
      :ARG0 (m / minister 
            :ARG2-of (h / have-org-role-91 
                  :ARG0 3 
                  :ARG1 (w / week))) 
      :ARG1 (b / bad 
            :mod (o / off)))

# ::snt indoor courts are a priority and by the end of next year 450 are promised
# ::tok indoor courts are a priority and by the end of next year 450 are promised
# ::alignments 14-15|0.0 12-13|0.0.1 11-12|0.0.0 10-11|0.0.0.0 5-6|0 4-5|0.1 1-2|0.1.0 0-1|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:28.465
# ::node	0	and	5-6
# ::node	0.0	promise-01	14-15
# ::node	0.0.0	year	11-12
# ::node	0.0.0.0	next	10-11
# ::node	0.0.1	450	12-13
# ::node	0.1	priority	4-5
# ::node	0.1.0	court	1-2
# ::node	0.1.0.0	indoor	0-1
# ::root	0	and
# ::edge	450	mod	promise-01	0.0.1	0.0	
# ::edge	and	op1	priority	0	0.1	
# ::edge	court	mod	indoor	0.1.0	0.1.0.0	
# ::edge	priority	domain	court	0.1	0.1.0	
# ::edge	promise-01	ARG0	year	0.0	0.0.0	
# ::edge	promise-01	ARG2	and	0.0	0	
# ::edge	year	mod	next	0.0.0	0.0.0.0	
(a / and 
      :ARG2-of (p / promise-01 
            :ARG0 (y / year 
                  :mod (n / next)) 
            :mod-of 450) 
      :op1 (p2 / priority 
            :domain (c / court 
                  :mod (i / indoor))))

# ::snt fertilizers remain an attractive option for many farmers but because of finite fossil  fuel reserves and the political instability of countries from which phosphate is  obtained the prices promise to rise still further
# ::tok fertilizers remain an attractive option for many farmers but because of finite fossil fuel reserves and the political instability of countries from which phosphate is obtained the prices promise to rise still further
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:28.468
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt we should remind ourselves that while the promisee may not be the initiator of the bond of which the promise is the whole or a part he is not entirely passive either, it is always up to him to waive his right under the promise and thus terminate the binding force of the promise
# ::tok we should remind ourselves that while the promisee may not be the initiator of the bond of which the promise is the whole or a part he is not entirely passive either , it is always up to him to waive his right under the promise and thus terminate the binding force of the promise
# ::alignments 54-55|0.0.0 51-52|0.0.2.0.0.1 50-51|0.0.2.0.0.1.0 48-49|0.0.2.0.0 46-47|0.0.2.0 45-46|0.0.2 35-36|0.0.2.0.1 33-34|0.0.2.0.0.0 31-32|0.0.0.0 30-31|0.0.3 29-30|0.0.3.0 26-27|0.0 23-24|0.1.0 22-23|0.1 19-20|0 8-9|0.0.1.0.1.0+0.0.1.0.1 2-3|0.0.1.0 1-2|0.0.1 0-1|0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:28.737
# ::node	0	promise-01	19-20
# ::node	0.0	he	26-27
# ::node	0.0.0	promise-01	54-55
# ::node	0.0.0.0	either	31-32
# ::node	0.0.1	recommend-01	1-2
# ::node	0.0.1.0	remind-01	2-3
# ::node	0.0.1.0.0	we	0-1
# ::node	0.0.1.0.1	date-entity	8-9
# ::node	0.0.1.0.1.0	5	8-9
# ::node	0.0.2	promise-01	45-46
# ::node	0.0.2.0	and	46-47
# ::node	0.0.2.0.0	terminate-01	48-49
# ::node	0.0.2.0.0.0	it	33-34
# ::node	0.0.2.0.0.1	force	51-52
# ::node	0.0.2.0.0.1.0	bind-01	50-51
# ::node	0.0.2.0.1	always	35-36
# ::node	0.0.3	passive	30-31
# ::node	0.0.3.0	entire	29-30
# ::node	0.1	whole	22-23
# ::node	0.1.0	or	23-24
# ::root	0	promise-01
# ::edge	and	op1	promise-01	0.0.2.0	0.0.2	
# ::edge	and	op2	terminate-01	0.0.2.0	0.0.2.0.0	
# ::edge	and	time	always	0.0.2.0	0.0.2.0.1	
# ::edge	bind-01	ARG1	force	0.0.2.0.0.1.0	0.0.2.0.0.1	
# ::edge	date-entity	month	5	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	or	op1	whole	0.1.0	0.1	
# ::edge	passive	degree	entire	0.0.3	0.0.3.0	
# ::edge	passive	domain	he	0.0.3	0.0	
# ::edge	promise-01	ARG0	he	0	0.0	
# ::edge	promise-01	ARG0	he	0.0.0	0.0	
# ::edge	promise-01	ARG0	he	0.0.2	0.0	
# ::edge	promise-01	ARG1	either	0.0.0	0.0.0.0	
# ::edge	recommend-01	ARG0	he	0.0.1	0.0	
# ::edge	recommend-01	ARG1	remind-01	0.0.1	0.0.1.0	
# ::edge	remind-01	ARG0	we	0.0.1.0	0.0.1.0.0	
# ::edge	remind-01	ARG1	date-entity	0.0.1.0	0.0.1.0.1	
# ::edge	terminate-01	ARG0	it	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	terminate-01	ARG1	force	0.0.2.0.0	0.0.2.0.0.1	
# ::edge	whole	domain	promise-01	0.1	0	
(p4 / promise-01 
      :ARG0 (h / he 
            :ARG0-of (p / promise-01 
                  :ARG1 (e / either)) 
            :ARG0-of (r2 / recommend-01 
                  :ARG1 (r / remind-01 
                        :ARG0 (w2 / we) 
                        :ARG1 (d / date-entity 
                              :month 5))) 
            :ARG0-of (p2 / promise-01 
                  :op-of (a / and 
                        :op1 (t / terminate-01 
                              :ARG0 (i / it) 
                              :ARG1 (f / force 
                                    :ARG1-of (b / bind-01))) 
                        :time (a2 / always))) 
            :domain-of (p3 / passive 
                  :degree (e2 / entire))) 
      :domain-of (w / whole 
            :op-of (o / or)))

# ::snt a network of up to 12 regional freight terminals is also planned promising increased employment in these areas and other benefits including taking the equivalent of some 400000 lorryloads off britains roads a year
# ::tok a network of up to 12 regional freight terminals is also planned promising increased employment in these areas and other benefits including taking the equivalent of some 400000 lorryloads off britains roads a year
# ::alignments 33-34|0.0.5 31-32|0.0.0.0.0.0 29-30|0.0.0.0.0.0.0 27-28|0.0.2.1.1.2+0.0.2.1.1.1+0.0.2.1.1.0+0.0.2.1.1 26-27|0.0.4 24-25|0 20-21|0.0.0.0.0 19-20|0.0.0.0.0.1 18-19|0.0.3 17-18|0.0.0.0 14-15|0.0.0 13-14|0.0 12-13|0.0.2 11-12|0.0.2.1 10-11|0.0.2.1.0 7-8|0.0.1 6-7|0.0.1.0 5-6|0.0.0.0.0.2 1-2|0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:29.403
# ::node	0	equivalent	24-25
# ::node	0.0	increase-01	13-14
# ::node	0.0.0	employment	14-15
# ::node	0.0.0.0	area	17-18
# ::node	0.0.0.0.0	benefit-01	20-21
# ::node	0.0.0.0.0.0	road	31-32
# ::node	0.0.0.0.0.0.0	off	29-30
# ::node	0.0.0.0.0.1	other	19-20
# ::node	0.0.0.0.0.2	12	5-6
# ::node	0.0.1	freight	7-8
# ::node	0.0.1.0	region	6-7
# ::node	0.0.2	promise-01	12-13
# ::node	0.0.2.0	network	1-2
# ::node	0.0.2.1	plan-01	11-12
# ::node	0.0.2.1.0	also	10-11
# ::node	0.0.2.1.1	date-entity	27-28
# ::node	0.0.2.1.1.0	0	27-28
# ::node	0.0.2.1.1.1	0	27-28
# ::node	0.0.2.1.1.2	40	27-28
# ::node	0.0.3	and	18-19
# ::node	0.0.4	some	26-27
# ::node	0.0.5	year	33-34
# ::root	0	equivalent
(e / equivalent 
      :ARG0-of (i / increase-01 
            :ARG1 (e2 / employment 
                  :location (a2 / area 
                        :ARG1-of (b / benefit-01 
                              :ARG0 (r / road 
                                    :op-of (o / off)) 
                              :mod (o2 / other) 
                              :op-of 12))) 
            :ARG2 (f / freight 
                  :mod (r2 / region)) 
            :ARG2-of (p / promise-01 
                  :ARG1 (n / network) 
                  :ARG1-of (p2 / plan-01 
                        :mod (a3 / also) 
                        :op-of (d / date-entity 
                              :day 0 
                              :month 0 
                              :year 40))) 
            :op-of (a / and) 
            :op-of (s / some) 
            :time (y / year)))

# ::snt like much else the destroyers were a gesture ofsympathy promising great things in the future
# ::tok like much else the destroyers were a gesture ofsympathy promising great things in the future
# ::alignments 14-15|0.0.1.1 11-12|0.0.1.0 10-11|0.0.1.0.0 9-10|0.0.1 7-8|0.0 4-5|0 2-3|0.0.0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:29.573
# ::node	0	destroyer	4-5
# ::node	0.0	gesture-01	7-8
# ::node	0.0.0	else	2-3
# ::node	0.0.1	promise-01	9-10
# ::node	0.0.1.0	thing	11-12
# ::node	0.0.1.0.0	great	10-11
# ::node	0.0.1.1	future	14-15
# ::node	0.1	much	1-2
# ::root	0	destroyer
# ::edge	destroyer	mod	much	0	0.1	
# ::edge	gesture-01	ARG0	destroyer	0.0	0	
# ::edge	gesture-01	ARG1	else	0.0	0.0.0	
# ::edge	promise-01	ARG1	gesture-01	0.0.1	0.0	
# ::edge	promise-01	ARG2	thing	0.0.1	0.0.1.0	
# ::edge	promise-01	location	future	0.0.1	0.0.1.1	
# ::edge	thing	mod	great	0.0.1.0	0.0.1.0.0	
(d / destroyer 
      :ARG0-of (g2 / gesture-01 
            :ARG1 (e / else) 
            :ARG1-of (p / promise-01 
                  :ARG2 (t / thing 
                        :mod (g / great)) 
                  :location (f / future))) 
      :mod (m / much))

# ::snt im going to make you the new madonna waterman promised  his new prodigy but even today he shakes his head  disbelievingly at the opportunity others missed
# ::tok im going to make you the new madonna waterman promised his new prodigy but even today he shakes his head disbelievingly at the opportunity others missed
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:29.573
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt mr lula of the pt workers party promises to deploy 1
# ::tok mr lula of the pt workers party promises to deploy 1
# ::alignments 10-11|0.2 9-10|0.1 7-8|0 6-7|0.0 5-6|0.0.0.0+0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:29.591
# ::node	0	promise-01	7-8
# ::node	0.0	party	6-7
# ::node	0.0.0	person	5-6
# ::node	0.0.0.0	work-01	5-6
# ::node	0.1	deploy-01	9-10
# ::node	0.2	1	10-11
# ::root	0	promise-01
# ::edge	party	mod	person	0.0	0.0.0	
# ::edge	promise-01	ARG0	party	0	0.0	
# ::edge	promise-01	ARG1	deploy-01	0	0.1	
# ::edge	promise-01	ARG3	1	0	0.2	
# ::edge	work-01	ARG0	person	0.0.0.0	0.0.0	
(p / promise-01 
      :ARG0 (p2 / party 
            :mod (p3 / person 
                  :ARG0-of (w / work-01))) 
      :ARG1 (d / deploy-01) 
      :ARG3 1)

# ::snt the campaign was boosted when king hussein of jordan promised his help during lunch with mrs thatcher yesterday at chequers
# ::tok the campaign was boosted when king hussein of jordan promised his help during lunch with mrs thatcher yesterday at chequers
# ::alignments 17-18|0.0.1.1 13-14|0 11-12|0.0 9-10|0.0.1 5-6|0.0.0 1-2|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:29.646
# ::node	0	lunch-01	13-14
# ::node	0.0	help-01	11-12
# ::node	0.0.0	king	5-6
# ::node	0.0.1	promise-01	9-10
# ::node	0.0.1.0	campaign-01	1-2
# ::node	0.0.1.1	yesterday	17-18
# ::root	0	lunch-01
# ::edge	help-01	ARG0	king	0.0	0.0.0	
# ::edge	lunch-01	ARG1	help-01	0	0.0	
# ::edge	promise-01	ARG0	campaign-01	0.0.1	0.0.1.0	
# ::edge	promise-01	ARG1	help-01	0.0.1	0.0	
# ::edge	promise-01	time	yesterday	0.0.1	0.0.1.1	
(l / lunch-01 
      :ARG1 (h / help-01 
            :ARG0 (k / king) 
            :ARG1-of (p / promise-01 
                  :ARG0 (c / campaign-01) 
                  :time (y / yesterday))))

# ::snt 9736 promise-v 801282 Promise 537527
# ::tok 9736 promise - v 801282 Promise 537527
# ::alignments 6-7|0.0.2+0.0.1+0.0.0+0.0 4-5|0.1.0.2+0.1.0.1+0.1.0.0+0.1.0 1-2|0 0-1|0.1.1+0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:29.679
# ::node	0	promise-01	1-2
# ::node	0.0	date-entity	6-7
# ::node	0.0.0	27	6-7
# ::node	0.0.1	75	6-7
# ::node	0.0.2	53	6-7
# ::node	0.1	date-entity	0-1
# ::node	0.1.0	date-entity	4-5
# ::node	0.1.0.0	82	4-5
# ::node	0.1.0.1	12	4-5
# ::node	0.1.0.2	80	4-5
# ::node	0.1.1	9736	0-1
# ::root	0	promise-01
# ::edge	date-entity	day	27	0.0	0.0.0	
# ::edge	date-entity	day	82	0.1.0	0.1.0.0	
# ::edge	date-entity	month	12	0.1.0	0.1.0.1	
# ::edge	date-entity	month	75	0.0	0.0.1	
# ::edge	date-entity	name	date-entity	0.1	0.1.0	
# ::edge	date-entity	year	53	0.0	0.0.2	
# ::edge	date-entity	year	80	0.1.0	0.1.0.2	
# ::edge	date-entity	year	9736	0.1	0.1.1	
# ::edge	promise-01	ARG1	date-entity	0	0.0	
# ::edge	promise-01	time	date-entity	0	0.1	
(p / promise-01 
      :ARG1 (d / date-entity 
            :day 27 
            :month 75 
            :year 53) 
      :time (d3 / date-entity 
            :name (d2 / date-entity 
                  :day 82 
                  :month 12 
                  :year 80) 
            :year 9736))

# ::snt  `The glossy magazine was Ritz and the horse idea was mine.  Promise you won\t write about it?"
# ::tok ' The glossy magazine was Ritz and the horse idea was mine . Promise you won\t write about it ? "
# ::alignments 18-19|0.2.0.1 16-17|0.2.0 14-15|0.2.0.0 11-12|0.2 9-10|0.1.0 8-9|0.1 6-7|0 3-4|0.0 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:29.738
# ::node	0	and	6-7
# ::node	0.0	magazine	3-4
# ::node	0.0.0	glossy	2-3
# ::node	0.1	horse	8-9
# ::node	0.1.0	idea	9-10
# ::node	0.2	mine	11-12
# ::node	0.2.0	write-01	16-17
# ::node	0.2.0.0	you	14-15
# ::node	0.2.0.1	it	18-19
# ::root	0	and
# ::edge	and	op1	magazine	0	0.0	
# ::edge	and	op2	horse	0	0.1	
# ::edge	and	op3	mine	0	0.2	
# ::edge	idea	mod	horse	0.1.0	0.1	
# ::edge	magazine	part	glossy	0.0	0.0.0	
# ::edge	write-01	ARG0	you	0.2.0	0.2.0.0	
# ::edge	write-01	ARG1	mine	0.2.0	0.2	
# ::edge	write-01	ARG2	it	0.2.0	0.2.0.1	
(a / and 
      :op1 (m2 / magazine 
            :part (g / glossy)) 
      :op2 (h / horse 
            :mod-of (i2 / idea)) 
      :op3 (m / mine 
            :ARG1-of (w / write-01 
                  :ARG0 (y / you) 
                  :ARG2 (i / it))))

# ::snt EMPTY_SENTENCE
# ::tok EMPTY_SENTENCE
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:29.740
# ::node	0	amr-empty	0-1
# ::root	0	amr-empty
(a / amr-empty)

# ::snt full details of what promise to be uplifting and enjoyable celebrations are carried on page 4 and the back cover
# ::tok full details of what promise to be uplifting and enjoyable celebrations are carried on page 4 and the back cover
# ::alignments 18-19|0.0.2.2 16-17|0.0.2.0 15-16|0.0.0 14-15|0.0.1 8-9|0 4-5|0.0 1-2|0.0.2 0-1|0.0.2.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:29.831
# ::node	0	and	8-9
# ::node	0.0	promise-01	4-5
# ::node	0.0.0	4	15-16
# ::node	0.0.1	page	14-15
# ::node	0.0.2	detail-01	1-2
# ::node	0.0.2.0	and	16-17
# ::node	0.0.2.1	full	0-1
# ::node	0.0.2.2	back	18-19
# ::root	0	and
# ::edge	and	op1	promise-01	0	0.0	
# ::edge	back	op1	detail-01	0.0.2.2	0.0.2	
# ::edge	detail-01	ARG0	and	0.0.2	0.0.2.0	
# ::edge	detail-01	ARG1	promise-01	0.0.2	0.0	
# ::edge	detail-01	mod	full	0.0.2	0.0.2.1	
# ::edge	promise-01	ARG0	4	0.0	0.0.0	
# ::edge	promise-01	ARG1	page	0.0	0.0.1	
(a2 / and 
      :op1 (p2 / promise-01 
            :ARG0 4 
            :ARG1 (p / page) 
            :ARG1-of (d / detail-01 
                  :ARG0 (a / and) 
                  :mod (f / full) 
                  :op-of (b / back))))

# ::snt tomorrow you take us to freuds house hmm  i promised to do that
# ::tok tomorrow you take us to freuds house hmm i promised to do that
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:29.832
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt whatever leisure the holidays had promised was now ended
# ::tok whatever leisure the holidays had promised was now ended
# ::alignments 8-9|0 7-8|0.2 5-6|0.0 3-4|0.0.0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:29.884
# ::node	0	end-01	8-9
# ::node	0.0	promise-01	5-6
# ::node	0.0.0	holiday	3-4
# ::node	0.1	whatever	0-1
# ::node	0.2	now	7-8
# ::root	0	end-01
# ::edge	end-01	ARG0	promise-01	0	0.0	
# ::edge	end-01	ARG1	whatever	0	0.1	
# ::edge	end-01	time	now	0	0.2	
# ::edge	promise-01	ARG0	holiday	0.0	0.0.0	
(e / end-01 
      :ARG0 (p / promise-01 
            :ARG0 (h / holiday)) 
      :ARG1 (w / whatever) 
      :time (n / now))

# ::snt east germany yesterday promised to consult the roundtable group of ruling parties and opposition figures on legislation and offered reformers seats on parliamentary committees
# ::tok east germany yesterday promised to consult the roundtable group of ruling parties and opposition figures on legislation and offered reformers seats on parliamentary committees
# ::alignments 20-21|0.0 18-19|0.1.0.0.1.0.0.0 17-18|0.1.0.0.1.0.0.0.0 16-17|0.1.0.0.1.0.0.0.0.0 14-15|0.1.0.0.1.0 13-14|0.1.0.0.1.0.0 12-13|0.1.0.0.1 11-12|0.1.0.0 10-11|0.1.0.0.0 8-9|0.1.0 5-6|0.1 3-4|0 2-3|0.2 0-1|0.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:29.984
# ::node	0	promise-01	3-4
# ::node	0.0	seat	20-21
# ::node	0.1	consult-01	5-6
# ::node	0.1.0	group	8-9
# ::node	0.1.0.0	party	11-12
# ::node	0.1.0.0.0	rule-03	10-11
# ::node	0.1.0.0.1	and	12-13
# ::node	0.1.0.0.1.0	figure	14-15
# ::node	0.1.0.0.1.0.0	oppose-01	13-14
# ::node	0.1.0.0.1.0.0.0	offer-01	18-19
# ::node	0.1.0.0.1.0.0.0.0	and	17-18
# ::node	0.1.0.0.1.0.0.0.0.0	legislation	16-17
# ::node	0.2	yesterday	2-3
# ::node	0.3	east	0-1
# ::root	0	promise-01
# ::edge	and	op1	legislation	0.1.0.0.1.0.0.0.0	0.1.0.0.1.0.0.0.0.0	
# ::edge	and	op1	party	0.1.0.0.1	0.1.0.0	
# ::edge	and	op2	figure	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	and	op2	offer-01	0.1.0.0.1.0.0.0.0	0.1.0.0.1.0.0.0	
# ::edge	consult-01	ARG1	group	0.1	0.1.0	
# ::edge	group	poss	party	0.1.0	0.1.0.0	
# ::edge	offer-01	ARG2	oppose-01	0.1.0.0.1.0.0.0	0.1.0.0.1.0.0	
# ::edge	oppose-01	ARG1	figure	0.1.0.0.1.0.0	0.1.0.0.1.0	
# ::edge	promise-01	ARG1	seat	0	0.0	
# ::edge	promise-01	ARG2	consult-01	0	0.1	
# ::edge	promise-01	time	east	0	0.3	
# ::edge	promise-01	time	yesterday	0	0.2	
# ::edge	rule-03	ARG0	party	0.1.0.0.0	0.1.0.0	
(p2 / promise-01 
      :ARG1 (s / seat) 
      :ARG2 (c / consult-01 
            :ARG1 (g / group 
                  :poss (p / party 
                        :ARG0-of (r / rule-03) 
                        :op-of (a2 / and 
                              :op1 (f / figure 
                                    :ARG1-of (o2 / oppose-01 
                                          :ARG2-of (o / offer-01 
                                                :op-of (a / and 
                                                      :op1 (l / legislation))))))))) 
      :time (y / yesterday) 
      :time (e / east))

# ::snt balding is embarking on what promises to be a richly remunerative jumps campaign
# ::tok balding is embarking on what promises to be a richly remunerative jumps campaign
# ::alignments 12-13|0 5-6|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:29.995
# ::node	0	campaign-01	12-13
# ::node	0.0	promise-01	5-6
# ::root	0	campaign-01
(c / campaign-01 
      :ARG1-of (p / promise-01))

# ::snt like the crooks pursued by the hero in calling bulldog drummond 1951 for whom life in peacetime seemed unbearably flat or the exofficers who take over their old ship for smuggling runs across the channel in the ship that died of shame 1955 or the league of gentlemen 1960 for whom robbing a bank promises their finest hour many filmmakers seemed to feel that there was nothing to do now the war was over and the hopes of peace had faded than go back to the site of old glories
# ::tok like the crooks pursued by the hero in calling bulldog drummond 1951 for whom life in peacetime seemed unbearably flat or the exofficers who take over their old ship for smuggling runs across the channel in the ship that died of shame 1955 or the league of gentlemen 1960 for whom robbing a bank promises their finest hour many filmmakers seemed to feel that there was nothing to do now the war was over and the hopes of peace had faded than go back to the site of old glories
# ::alignments 88-89|0.0.0.1.1.2.2.1.0 86-87|0.0.0.1.0.2 83-84|0.0.0.1.0.3 80-81|0.0.0.1.1.2.2.1.2 78-79|0.0.0.1.1.2.2.1.1 76-77|0.0.0.1.1.2.2.1 74-75|0.0.0.1.1.2.2 71-72|0.0.0.1.1.2.2.0 69-70|0.0.0.1.1.2.2.1.3 66-67|0.0.0.1.0.0 62-63|0.0.0.1.0 60-61|0.0.0.1.0.1 58-59|0.0.0.1.1.2.2.1.2.0 57-58|0.0.0.1.2+0.0.0.1 56-57|0.0.0.1.1.1.0+0.0.0.1.1.1 54-55|0.0.0.1.1 53-54|0.0.0.1.1.0 51-52|0.0.0.1.1.2 48-49|0.0.0.1.1.2.0.0+0.0.0.1.1.2.0 45-46|0.0.0.0 43-44|0.0.0 42-43|0.0.3.0+0.0.3 41-42|0 39-40|0.0 37-38|0.0.1 34-35|0.0.0.1.1.2.1.1 32-33|0.0.0.1.1.2.1.1.0 30-31|0.0.0.1.1.2.1 28-29|0.0.0.1.1.2.1.0 27-28|0.0.0.1.1.2.1.0.0 20-21|0.0.2.1.1 19-20|0.0.2.1 17-18|0.0.2 14-15|0.0.2.1.0 11-12|0.0.2.0.0+0.0.2.0 6-7|0.0.0.1.1.2.1.0.0.0.1 3-4|0.0.0.1.1.2.1.0.0.0 2-3|0.0.0.1.1.2.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:32.201
# ::node	0	shame	41-42
# ::node	0.0	die-01	39-40
# ::node	0.0.0	or	43-44
# ::node	0.0.0.0	league	45-46
# ::node	0.0.0.1	temporal-quantity	57-58
# ::node	0.0.0.1.0	feel-01	62-63
# ::node	0.0.0.1.0.0	nothing	66-67
# ::node	0.0.0.1.0.1	seem-01	60-61
# ::node	0.0.0.1.0.2	site	86-87
# ::node	0.0.0.1.0.3	back	83-84
# ::node	0.0.0.1.1	promise-01	54-55
# ::node	0.0.0.1.1.0	bank	53-54
# ::node	0.0.0.1.1.1	fine	56-57
# ::node	0.0.0.1.1.1.0	most	56-57
# ::node	0.0.0.1.1.2	rob-01	51-52
# ::node	0.0.0.1.1.2.0	date-entity	48-49
# ::node	0.0.0.1.1.2.0.0	1960	48-49
# ::node	0.0.0.1.1.2.1	smuggle-01	30-31
# ::node	0.0.0.1.1.2.1.0	ship	28-29
# ::node	0.0.0.1.1.2.1.0.0	old	27-28
# ::node	0.0.0.1.1.2.1.0.0.0	pursue-01	3-4
# ::node	0.0.0.1.1.2.1.0.0.0.0	crook	2-3
# ::node	0.0.0.1.1.2.1.0.0.0.1	hero	6-7
# ::node	0.0.0.1.1.2.1.1	channel	34-35
# ::node	0.0.0.1.1.2.1.1.0	across	32-33
# ::node	0.0.0.1.1.2.2	and	74-75
# ::node	0.0.0.1.1.2.2.0	war	71-72
# ::node	0.0.0.1.1.2.2.1	hope-01	76-77
# ::node	0.0.0.1.1.2.2.1.0	old	88-89
# ::node	0.0.0.1.1.2.2.1.1	peace	78-79
# ::node	0.0.0.1.1.2.2.1.2	fade-01	80-81
# ::node	0.0.0.1.1.2.2.1.2.0	many	58-59
# ::node	0.0.0.1.1.2.2.1.3	now	69-70
# ::node	0.0.0.1.2	hour	57-58
# ::node	0.0.1	ship	37-38
# ::node	0.0.2	seem-01	17-18
# ::node	0.0.2.0	date-entity	11-12
# ::node	0.0.2.0.0	1951	11-12
# ::node	0.0.2.1	flat	19-20
# ::node	0.0.2.1.0	life	14-15
# ::node	0.0.2.1.1	or	20-21
# ::node	0.0.3	date-entity	42-43
# ::node	0.0.3.0	1955	42-43
# ::root	0	shame
(s3 / shame 
      :location-of (d3 / die-01 
            :ARG0 (o2 / or 
                  :op1 (l / league) 
                  :poss-of (t / temporal-quantity 
                        :ARG1-of (f2 / feel-01 
                              :ARG0 (n2 / nothing) 
                              :ARG1-of (s2 / seem-01) 
                              :op-of (s / site) 
                              :op-of (b / back)) 
                        :ARG1-of (p2 / promise-01 
                              :ARG0 (b2 / bank) 
                              :manner (f3 / fine 
                                    :degree (m2 / most)) 
                              :time (r / rob-01 
                                    :ARG1 (d / date-entity 
                                          :year 1960) 
                                    :ARG2 (s5 / smuggle-01 
                                          :ARG0 (s6 / ship 
                                                :mod (o3 / old 
                                                      :ARG0-of (p3 / pursue-01 
                                                            :ARG1 (c2 / crook) 
                                                            :ARG2 (h3 / hero)))) 
                                          :ARG1 (c / channel 
                                                :op-of (a2 / across))) 
                                    :op-of (a / and 
                                          :mod (w / war) 
                                          :op1 (h / hope-01 
                                                :ARG0 (o / old) 
                                                :ARG1 (p / peace) 
                                                :ARG1-of (f / fade-01 
                                                      :op-of (m / many)) 
                                                :time (n / now))))) 
                        :unit (h2 / hour))) 
            :ARG1 (s4 / ship) 
            :ARG2 (s7 / seem-01 
                  :ARG0 (d4 / date-entity 
                        :year 1951) 
                  :ARG1 (f4 / flat 
                        :domain (l2 / life) 
                        :op-of (o4 / or))) 
            :time (d2 / date-entity 
                  :year 1955)))

# ::snt ruben promised to find iced water and returned soon with a waiter carrying a tinkling pitcher and three glasses
# ::tok ruben promised to find iced water and returned soon with a waiter carrying a tinkling pitcher and three glasses
# ::alignments 18-19|0.1 17-18|0.1.0 16-17|0 12-13|0.0 8-9|0.0.0 7-8|0.0.0.0 6-7|0.0.0.0.0 5-6|0.0.0.0.0.1 1-2|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:32.259
# ::node	0	and	16-17
# ::node	0.0	carry-01	12-13
# ::node	0.0.0	soon	8-9
# ::node	0.0.0.0	return-01	7-8
# ::node	0.0.0.0.0	and	6-7
# ::node	0.0.0.0.0.0	promise-01	1-2
# ::node	0.0.0.0.0.1	water	5-6
# ::node	0.1	glass	18-19
# ::node	0.1.0	3	17-18
# ::root	0	and
# ::edge	and	op1	glass	0	0.1	
# ::edge	and	op1	promise-01	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	and	op2	water	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	and	op3	return-01	0.0.0.0.0	0.0.0.0	
# ::edge	carry-01	ARG1	and	0.0	0	
# ::edge	carry-01	mod	soon	0.0	0.0.0	
# ::edge	glass	quant	3	0.1	0.1.0	
# ::edge	return-01	time	soon	0.0.0.0	0.0.0	
(a / and 
      :ARG1-of (c / carry-01 
            :mod (s / soon 
                  :time-of (r / return-01 
                        :op-of (a2 / and 
                              :op1 (p / promise-01) 
                              :op2 (w / water))))) 
      :op1 (g / glass 
            :quant 3))

# ::snt the day after the july ruling in the supreme court bob martinez governor of florida promised a special session of the state legislature to push through abortionrestricting laws
# ::tok the day after the july ruling in the supreme court bob martinez governor of florida promised a special session of the state legislature to push through abortionrestricting laws
# ::alignments 27-28|0.2.0.1 24-25|0.2.0 22-23|0.2.0.0 21-22|0.2.0.0.1 18-19|0.2 17-18|0.2.1 15-16|0 14-15|0.0.0.0.0+0.0.0.0+0.0.0 12-13|0.0.1+0.0 9-10|0.2.0.0.0 8-9|0.2.0.0.0.0 5-6|0.1 4-5|0.1.0.0+0.1.0 2-3|0.3 1-2|0.3.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:32.761
# ::node	0	promise-01	15-16
# ::node	0.0	have-org-role-91	12-13
# ::node	0.0.0	state	14-15
# ::node	0.0.0.0	name	14-15
# ::node	0.0.0.0.0	"Florida"	14-15
# ::node	0.0.1	governor	12-13
# ::node	0.1	rule-03	5-6
# ::node	0.1.0	date-entity	4-5
# ::node	0.1.0.0	7	4-5
# ::node	0.2	session	18-19
# ::node	0.2.0	push-02	24-25
# ::node	0.2.0.0	legislate-01	22-23
# ::node	0.2.0.0.0	court	9-10
# ::node	0.2.0.0.0.0	supreme	8-9
# ::node	0.2.0.0.1	state	21-22
# ::node	0.2.0.1	law	27-28
# ::node	0.2.1	special	17-18
# ::node	0.3	after	2-3
# ::node	0.3.0	day	1-2
# ::root	0	promise-01
# ::edge	after	op1	promise-01	0.3	0	
# ::edge	after	quant	day	0.3	0.3.0	
# ::edge	court	mod	supreme	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	date-entity	month	7	0.1.0	0.1.0.0	
# ::edge	have-org-role-91	ARG1	state	0.0	0.0.0	
# ::edge	have-org-role-91	ARG2	governor	0.0	0.0.1	
# ::edge	legislate-01	ARG0	court	0.2.0.0	0.2.0.0.0	
# ::edge	legislate-01	ARG1	state	0.2.0.0	0.2.0.0.1	
# ::edge	name	op1	"Florida"	0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	ARG0	have-org-role-91	0	0.0	
# ::edge	promise-01	ARG1	rule-03	0	0.1	
# ::edge	promise-01	ARG2	session	0	0.2	
# ::edge	push-02	ARG0	session	0.2.0	0.2	
# ::edge	push-02	ARG1	legislate-01	0.2.0	0.2.0.0	
# ::edge	push-02	instrument	law	0.2.0	0.2.0.1	
# ::edge	rule-03	ARG1	date-entity	0.1	0.1.0	
# ::edge	session	mod	special	0.2	0.2.1	
# ::edge	state	name	name	0.0.0	0.0.0.0	
(p2 / promise-01 
      :ARG0 (h / have-org-role-91 
            :ARG1 (s4 / state 
                  :name (n / name 
                        :op1 "Florida")) 
            :ARG2 (g / governor)) 
      :ARG1 (r / rule-03 
            :ARG1 (d / date-entity 
                  :month 7)) 
      :ARG2 (s2 / session 
            :ARG0-of (p / push-02 
                  :ARG1 (l2 / legislate-01 
                        :ARG0 (c / court 
                              :mod (s5 / supreme)) 
                        :ARG1 (s / state)) 
                  :instrument (l / law)) 
            :mod (s3 / special)) 
      :op-of (a / after 
            :quant (d2 / day)))

# ::snt he promised that no attested married men should be called up until all unmarried men had been taken
# ::tok he promised that no attested married men should be called up until all unmarried men had been taken
# ::alignments 14-15|0.0.0.0.0 12-13|0.0.0.0.0.0 11-12|0.0.0.0 7-8|0.0.0 6-7|0.0 5-6|0.0.1 4-5|0 3-4|0.0.1.0 1-2|0.0.0.1 0-1|0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:32.855
# ::node	0	attest-01	4-5
# ::node	0.0	man	6-7
# ::node	0.0.0	recommend-01	7-8
# ::node	0.0.0.0	until	11-12
# ::node	0.0.0.0.0	man	14-15
# ::node	0.0.0.0.0.0	all	12-13
# ::node	0.0.0.1	promise-01	1-2
# ::node	0.0.0.1.0	he	0-1
# ::node	0.0.1	marry-01	5-6
# ::node	0.0.1.0	-	3-4
# ::root	0	attest-01
# ::edge	attest-01	ARG1	man	0	0.0	
# ::edge	man	mod	all	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	marry-01	ARG1	man	0.0.1	0.0	
# ::edge	marry-01	polarity	-	0.0.1	0.0.1.0	
# ::edge	promise-01	ARG0	he	0.0.0.1	0.0.0.1.0	
# ::edge	promise-01	ARG1	recommend-01	0.0.0.1	0.0.0	
# ::edge	recommend-01	ARG0	until	0.0.0	0.0.0.0	
# ::edge	recommend-01	ARG1	man	0.0.0	0.0	
# ::edge	until	op1	man	0.0.0.0	0.0.0.0.0	
(a2 / attest-01 
      :ARG1 (m2 / man 
            :ARG1-of (r / recommend-01 
                  :ARG0 (u / until 
                        :op1 (m / man 
                              :mod (a / all))) 
                  :ARG1-of (p / promise-01 
                        :ARG0 (h / he))) 
            :ARG1-of (m3 / marry-01 
                  :polarity (- / -))))

# ::snt wasps missing david pegler and with jeff probyn and gary holmes at prop begin their push this afternoon in what promises to be a home pushover against ailing moseley hampered by the longterm absence of simon robson their england b scrumhalf who crushed his hand in a midweek weighttraining accident
# ::tok wasps missing david pegler and with jeff probyn and gary holmes at prop begin their push this afternoon in what promises to be a home pushover against ailing moseley hampered by the longterm absence of simon robson their england b scrumhalf who crushed his hand in a midweek weighttraining accident
# ::alignments 49-50|0.0.1.2.2 44-45|0.0.1.2.1 42-43|0.0.1.2 39-40|0.0.1.2.0 38-39|0.0.1.0.0.0+0.0.1.0.0+0.0.1.0 33-34|0.0.0.1 24-25|0.0.0.1.0 20-21|0.0.1 17-18|0.0.1.3 16-17|0.0.1.1 15-16|0 13-14|0.0 12-13|0.0.0 8-9|0.0.0.0 4-5|0.0.0.2 1-2|0.0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:33.581
# ::node	0	push-02	15-16
# ::node	0.0	begin-01	13-14
# ::node	0.0.0	prop-01	12-13
# ::node	0.0.0.0	and	8-9
# ::node	0.0.0.1	absent-01	33-34
# ::node	0.0.0.1.0	home	24-25
# ::node	0.0.0.2	and	4-5
# ::node	0.0.0.2.0	miss-01	1-2
# ::node	0.0.1	promise-01	20-21
# ::node	0.0.1.0	country	38-39
# ::node	0.0.1.0.0	name	38-39
# ::node	0.0.1.0.0.0	"England"	38-39
# ::node	0.0.1.1	this	16-17
# ::node	0.0.1.2	crush-01	42-43
# ::node	0.0.1.2.0	b	39-40
# ::node	0.0.1.2.1	hand	44-45
# ::node	0.0.1.2.2	accident	49-50
# ::node	0.0.1.3	afternoon	17-18
# ::root	0	push-02
(p2 / push-02 
      :ARG1-of (b2 / begin-01 
            :ARG1-of (p3 / prop-01 
                  :ARG0 (a4 / and) 
                  :ARG1-of (a2 / absent-01 
                        :ARG0 (h2 / home)) 
                  :op-of (a5 / and 
                        :op1 (m / miss-01))) 
            :ARG2 (p / promise-01 
                  :ARG0 (c2 / country 
                        :name (n / name 
                              :op1 "England")) 
                  :ARG1 (t / this) 
                  :ARG2-of (c / crush-01 
                        :ARG0 (b / b) 
                        :ARG1 (h / hand) 
                        :prep-on (a / accident)) 
                  :topic-of (a3 / afternoon))))

# ::snt what happened when you left hatton and pertwee at the bridge  stamford had promised to give burden all the help they could and they were as good as their word
# ::tok what happened when you left hatton and pertwee at the bridge stamford had promised to give burden all the help they could and they were as good as their word
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:33.582
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the route promised to throw a variety of weather at us
# ::tok the route promised to throw a variety of weather at us
# ::alignments 8-9|0.1.0.0 6-7|0.1.0 4-5|0.1 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:33.625
# ::node	0	promise-01	2-3
# ::node	0.0	route	1-2
# ::node	0.1	throw-01	4-5
# ::node	0.1.0	variety	6-7
# ::node	0.1.0.0	weather	8-9
# ::root	0	promise-01
# ::edge	promise-01	ARG0	route	0	0.0	
# ::edge	promise-01	ARG2	throw-01	0	0.1	
# ::edge	throw-01	ARG1	variety	0.1	0.1.0	
# ::edge	weather	mod	variety	0.1.0.0	0.1.0	
(p / promise-01 
      :ARG0 (r / route) 
      :ARG2 (t / throw-01 
            :ARG1 (v / variety 
                  :mod-of (w / weather))))

# ::snt the publishers not only accepted spirits in prison for publication they also assured lewis that john galsworthy the novelist and author of the forsyte saga would give it some publicity in his magazine reveille in which a selection of work by contemporary poets was promised
# ::tok the publishers not only accepted spirits in prison for publication they also assured lewis that john galsworthy the novelist and author of the forsyte saga would give it some publicity in his magazine reveille in which a selection of work by contemporary poets was promised
# ::alignments 44-45|0.1.1.0.0 42-43|0.1.1.0.0.0 41-42|0.1.1.0.0.0.0 37-38|0.1.1.0 32-33|0.1.0.0.0 29-30|0.1.1 28-29|0.1.1.1 27-28|0.1.2 26-27|0.1 20-21|0.0.0+0.0 19-20|0 12-13|0.1.0.0 11-12|0.1.0.0.2 10-11|0.1.0 9-10|0.1.0.0.1 7-8|0.1.0.1 5-6|0.1.0.1.0 4-5|0.1.0.1.0.0 3-4|0.1.0.1.0.0.1 1-2|0.1.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:35.057
# ::node	0	and	19-20
# ::node	0.0	person	20-21
# ::node	0.0.0	author-01	20-21
# ::node	0.1	give-01	26-27
# ::node	0.1.0	they	10-11
# ::node	0.1.0.0	assure-01	12-13
# ::node	0.1.0.0.0	magazine	32-33
# ::node	0.1.0.0.1	publication	9-10
# ::node	0.1.0.0.2	also	11-12
# ::node	0.1.0.1	prison	7-8
# ::node	0.1.0.1.0	spirit	5-6
# ::node	0.1.0.1.0.0	accept-01	4-5
# ::node	0.1.0.1.0.0.0	publish-01	1-2
# ::node	0.1.0.1.0.0.1	only	3-4
# ::node	0.1.1	publicity	29-30
# ::node	0.1.1.0	select-01	37-38
# ::node	0.1.1.0.0	promise-01	44-45
# ::node	0.1.1.0.0.0	poet	42-43
# ::node	0.1.1.0.0.0.0	contemporary	41-42
# ::node	0.1.1.1	some	28-29
# ::node	0.1.2	it	27-28
# ::root	0	and
# ::edge	accept-01	ARG0	publish-01	0.1.0.1.0.0	0.1.0.1.0.0.0	
# ::edge	accept-01	ARG1	spirit	0.1.0.1.0.0	0.1.0.1.0	
# ::edge	accept-01	mod	only	0.1.0.1.0.0	0.1.0.1.0.0.1	
# ::edge	and	op1	person	0	0.0	
# ::edge	and	op2	give-01	0	0.1	
# ::edge	assure-01	ARG0	they	0.1.0.0	0.1.0	
# ::edge	assure-01	ARG1	magazine	0.1.0.0	0.1.0.0.0	
# ::edge	assure-01	location	publication	0.1.0.0	0.1.0.0.1	
# ::edge	assure-01	mod	also	0.1.0.0	0.1.0.0.2	
# ::edge	author-01	ARG0	person	0.0.0	0.0	
# ::edge	give-01	ARG0	they	0.1	0.1.0	
# ::edge	give-01	ARG1	publicity	0.1	0.1.1	
# ::edge	give-01	ARG2	it	0.1	0.1.2	
# ::edge	poet	time	contemporary	0.1.1.0.0.0	0.1.1.0.0.0.0	
# ::edge	prison	poss	they	0.1.0.1	0.1.0	
# ::edge	promise-01	ARG0	poet	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	promise-01	ARG1	select-01	0.1.1.0.0	0.1.1.0	
# ::edge	publicity	quant	some	0.1.1	0.1.1.1	
# ::edge	select-01	ARG1	publicity	0.1.1.0	0.1.1	
# ::edge	spirit	mod	prison	0.1.0.1.0	0.1.0.1	
(a2 / and 
      :op1 (p4 / person 
            :ARG0-of (a / author-01)) 
      :op2 (g / give-01 
            :ARG0 (t / they 
                  :ARG0-of (a3 / assure-01 
                        :ARG1 (m / magazine) 
                        :location (p5 / publication) 
                        :mod (a4 / also)) 
                  :poss-of (p6 / prison 
                        :mod-of (s3 / spirit 
                              :ARG1-of (a5 / accept-01 
                                    :ARG0 (p7 / publish-01) 
                                    :mod (o / only))))) 
            :ARG1 (p3 / publicity 
                  :ARG1-of (s / select-01 
                        :ARG1-of (p / promise-01 
                              :ARG0 (p2 / poet 
                                    :time (c / contemporary)))) 
                  :quant (s2 / some)) 
            :ARG2 (i / it)))

# ::snt producers who owe the organisation nearly 140m in levy arrears have promised to attempt to repay some of the debt
# ::tok producers who owe the organisation nearly 140m in levy arrears have promised to attempt to repay some of the debt
# ::alignments 19-20|0.0.0.0.0.0.0 16-17|0.0.0.0.0.0 15-16|0.0.0.0.0 13-14|0.0.0.0 11-12|0.0.0.0.1 5-6|0.0.1 4-5|0 2-3|0.0 0-1|0.0.0.1+0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:35.171
# ::node	0	organize-01	4-5
# ::node	0.0	owe-01	2-3
# ::node	0.0.0	person	0-1
# ::node	0.0.0.0	attempt-01	13-14
# ::node	0.0.0.0.0	repay-01	15-16
# ::node	0.0.0.0.0.0	some	16-17
# ::node	0.0.0.0.0.0.0	debt	19-20
# ::node	0.0.0.0.1	promise-01	11-12
# ::node	0.0.0.1	produce-01	0-1
# ::node	0.0.1	nearly	5-6
# ::root	0	organize-01
(o / organize-01 
      :ARG1-of (o2 / owe-01 
            :ARG0 (p2 / person 
                  :ARG0-of (a / attempt-01 
                        :ARG1 (r / repay-01 
                              :ARG1 (s / some 
                                    :quant-of (d / debt))) 
                        :ARG2-of (p / promise-01)) 
                  :ARG0-of (p3 / produce-01)) 
            :ARG2 (n / nearly)))

# ::snt 20 they are anagrams of life sensemaking promised by billy graham
# ::tok 20 they are anagrams of life sensemaking promised by billy graham
# ::alignments 7-8|0 5-6|0.1 1-2|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:35.183
# ::node	0	promise-01	7-8
# ::node	0.0	they	1-2
# ::node	0.0.0	20	0-1
# ::node	0.1	life	5-6
# ::root	0	promise-01
# ::edge	promise-01	ARG0	they	0	0.0	
# ::edge	promise-01	ARG1	life	0	0.1	
# ::edge	they	op1	20	0.0	0.0.0	
(p / promise-01 
      :ARG0 (t / they 
            :op1 20) 
      :ARG1 (l / life))

# ::snt we had none to look forward to since the one promised had been held four months early to mark the kings wedding
# ::tok we had none to look forward to since the one promised had been held four months early to mark the kings wedding
# ::alignments 21-22|0.1 18-19|0 16-17|0.0 15-16|0.0.0.1+0.0.0 14-15|0.0.0.0 10-11|0.1.0.0.0 7-8|0.1.0.0.0.1 5-6|0.1.0.0.0.0 2-3|0.1.0.0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:35.233
# ::node	0	mark-01	18-19
# ::node	0.0	early	16-17
# ::node	0.0.0	temporal-quantity	15-16
# ::node	0.0.0.0	4	14-15
# ::node	0.0.0.1	month	15-16
# ::node	0.1	wed-01	21-22
# ::node	0.1.0	we	0-1
# ::node	0.1.0.0	none	2-3
# ::node	0.1.0.0.0	promise-01	10-11
# ::node	0.1.0.0.0.0	forward	5-6
# ::node	0.1.0.0.0.1	since	7-8
# ::root	0	mark-01
# ::edge	early	op1	temporal-quantity	0.0	0.0.0	
# ::edge	mark-01	ARG0	early	0	0.0	
# ::edge	mark-01	ARG1	wed-01	0	0.1	
# ::edge	none	name	we	0.1.0.0	0.1.0	
# ::edge	promise-01	ARG0	none	0.1.0.0.0	0.1.0.0	
# ::edge	promise-01	ARG1	forward	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	since	op1	promise-01	0.1.0.0.0.1	0.1.0.0.0	
# ::edge	temporal-quantity	quant	4	0.0.0	0.0.0.0	
# ::edge	temporal-quantity	unit	month	0.0.0	0.0.0.1	
# ::edge	wed-01	ARG1	we	0.1	0.1.0	
(m / mark-01 
      :ARG0 (e / early 
            :op1 (t / temporal-quantity 
                  :quant 4 
                  :unit (m2 / month))) 
      :ARG1 (w / wed-01 
            :ARG1 (w2 / we 
                  :name-of (n / none 
                        :ARG0-of (p / promise-01 
                              :ARG1 (f / forward) 
                              :op-of (s / since))))))

# ::snt alan wells then promised similar fine fare until he was visibly flabbergasted to be adjudged caught behind
# ::tok alan wells then promised similar fine fare until he was visibly flabbergasted to be adjudged caught behind
# ::alignments 16-17|0.3 8-9|0.0.0 7-8|0.5 6-7|0.2 5-6|0.1 3-4|0 2-3|0.4 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:35.303
# ::node	0	promise-01	3-4
# ::node	0.0	well	1-2
# ::node	0.0.0	he	8-9
# ::node	0.1	fine	5-6
# ::node	0.2	fare	6-7
# ::node	0.3	behind	16-17
# ::node	0.4	then	2-3
# ::node	0.5	until	7-8
# ::root	0	promise-01
# ::edge	behind	op1	promise-01	0.3	0	
# ::edge	promise-01	ARG0	well	0	0.0	
# ::edge	promise-01	ARG1	fine	0	0.1	
# ::edge	promise-01	ARG2	fare	0	0.2	
# ::edge	promise-01	time	then	0	0.4	
# ::edge	promise-01	time	until	0	0.5	
# ::edge	well	poss	he	0.0	0.0.0	
(p / promise-01 
      :ARG0 (w / well 
            :poss (h / he)) 
      :ARG1 (f2 / fine) 
      :ARG2 (f / fare) 
      :op-of (b / behind) 
      :time (t / then) 
      :time (u / until))

# ::snt gladiators and berinsfield clashed in the last game of the season two sides who promised so much yet failed to find any consistency
# ::tok gladiators and berinsfield clashed in the last game of the season two sides who promised so much yet failed to find any consistency
# ::alignments 22-23|0 21-22|0.1 18-19|0.0 17-18|0.0.1 16-17|0.0.0.0.2 15-16|0.0.0.0.2.0 14-15|0.0.0.0 12-13|0.0.0 11-12|0.0.0.1 10-11|0.0.0.0.0.0 7-8|0.0.0.0.0 6-7|0.0.0.0.0.1 1-2|0.0.0.0.1 0-1|0.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:35.562
# ::node	0	consistency	22-23
# ::node	0.0	fail-01	18-19
# ::node	0.0.0	side	12-13
# ::node	0.0.0.0	promise-01	14-15
# ::node	0.0.0.0.0	game	7-8
# ::node	0.0.0.0.0.0	season	10-11
# ::node	0.0.0.0.0.1	last	6-7
# ::node	0.0.0.0.1	and	1-2
# ::node	0.0.0.0.1.0	gladiator	0-1
# ::node	0.0.0.0.2	much	16-17
# ::node	0.0.0.0.2.0	so	15-16
# ::node	0.0.0.1	2	11-12
# ::node	0.0.1	yet	17-18
# ::node	0.1	any	21-22
# ::root	0	consistency
# ::edge	and	op1	gladiator	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	consistency	mod	any	0	0.1	
# ::edge	fail-01	ARG0	side	0.0	0.0.0	
# ::edge	fail-01	ARG1	consistency	0.0	0	
# ::edge	game	location	season	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	game	mod	last	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	much	degree	so	0.0.0.0.2	0.0.0.0.2.0	
# ::edge	promise-01	ARG0	side	0.0.0.0	0.0.0	
# ::edge	promise-01	ARG1	game	0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	ARG2	and	0.0.0.0	0.0.0.0.1	
# ::edge	promise-01	mod	much	0.0.0.0	0.0.0.0.2	
# ::edge	side	quant	2	0.0.0	0.0.0.1	
# ::edge	yet	op1	fail-01	0.0.1	0.0	
(c / consistency 
      :ARG1-of (f / fail-01 
            :ARG0 (s2 / side 
                  :ARG0-of (p / promise-01 
                        :ARG1 (g / game 
                              :location (s3 / season) 
                              :mod (l / last)) 
                        :ARG2 (a2 / and 
                              :op1 (g2 / gladiator)) 
                        :mod (m / much 
                              :degree (s / so))) 
                  :quant 2) 
            :op-of (y / yet)) 
      :mod (a / any))

# ::snt the local force have promised me all the help i need
# ::tok the local force have promised me all the help i need
# ::alignments 10-11|0.1.0.0 9-10|0.1.0 8-9|0.1 6-7|0.1.1 4-5|0 2-3|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:35.581
# ::node	0	promise-01	4-5
# ::node	0.0	force	2-3
# ::node	0.0.0	local	1-2
# ::node	0.1	help-01	8-9
# ::node	0.1.0	i	9-10
# ::node	0.1.0.0	need-01	10-11
# ::node	0.1.1	all	6-7
# ::root	0	promise-01
# ::edge	force	mod	local	0.0	0.0.0	
# ::edge	help-01	ARG1	i	0.1	0.1.0	
# ::edge	help-01	quant	all	0.1	0.1.1	
# ::edge	need-01	ARG0	i	0.1.0.0	0.1.0	
# ::edge	promise-01	ARG0	force	0	0.0	
# ::edge	promise-01	ARG1	help-01	0	0.1	
(p / promise-01 
      :ARG0 (f / force 
            :mod (l / local)) 
      :ARG1 (h / help-01 
            :ARG1 (i / i 
                  :ARG0-of (n / need-01)) 
            :quant (a / all)))

# ::snt middlebridge is counterclaiming damages for alleged misrepresentation and breach of contract it accepts the car is the one which crashed at brooklands in 1932 but says it is not the one promised the le mans winner of 1929 and 1930 and is completely rebuilt
# ::tok middlebridge is counterclaiming damages for alleged misrepresentation and breach of contract it accepts the car is the one which crashed at brooklands in 1932 but says it is not the one promised the le mans winner of 1929 and 1930 and is completely rebuilt
# ::alignments 42-43|0.2.0.0 40-41|0.1 39-40|0.1.0.0.0.0+0.1.0.0.0 38-39|0.1.0.0 37-38|0.1.0.1.0+0.1.0.1 31-32|0.1.0 26-27|0.0 25-26|0 24-25|0.2 23-24|0.2.0.2.0+0.2.0.2 19-20|0.2.0 14-15|0.2.0.1 12-13|0.2.0.1.0 11-12|0.2.0.1.0.0 10-11|0.2.0.1.0.1.0.0 8-9|0.2.0.1.0.1.0 7-8|0.2.0.1.0.1 5-6|0.2.0.1.0.1.1.0 3-4|0.2.0.1.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:36.525
# ::node	0	say-01	25-26
# ::node	0.0	it	26-27
# ::node	0.1	and	40-41
# ::node	0.1.0	promise-01	31-32
# ::node	0.1.0.0	and	38-39
# ::node	0.1.0.0.0	date-entity	39-40
# ::node	0.1.0.0.0.0	1930	39-40
# ::node	0.1.0.1	date-entity	37-38
# ::node	0.1.0.1.0	1929	37-38
# ::node	0.2	contrast-01	24-25
# ::node	0.2.0	crash-01	19-20
# ::node	0.2.0.0	complete	42-43
# ::node	0.2.0.1	car	14-15
# ::node	0.2.0.1.0	accept-01	12-13
# ::node	0.2.0.1.0.0	it	11-12
# ::node	0.2.0.1.0.1	and	7-8
# ::node	0.2.0.1.0.1.0	breach-01	8-9
# ::node	0.2.0.1.0.1.0.0	contract-02	10-11
# ::node	0.2.0.1.0.1.1	damage-01	3-4
# ::node	0.2.0.1.0.1.1.0	allege-01	5-6
# ::node	0.2.0.2	date-entity	23-24
# ::node	0.2.0.2.0	1932	23-24
# ::root	0	say-01
# ::edge	accept-01	ARG0	it	0.2.0.1.0	0.2.0.1.0.0	
# ::edge	accept-01	ARG1	car	0.2.0.1.0	0.2.0.1	
# ::edge	and	op1	breach-01	0.2.0.1.0.1	0.2.0.1.0.1.0	
# ::edge	and	op1	date-entity	0.1.0.0	0.1.0.0.0	
# ::edge	and	op1	promise-01	0.1	0.1.0	
# ::edge	and	op2	accept-01	0.2.0.1.0.1	0.2.0.1.0	
# ::edge	breach-01	ARG1	contract-02	0.2.0.1.0.1.0	0.2.0.1.0.1.0.0	
# ::edge	contrast-01	ARG1	crash-01	0.2	0.2.0	
# ::edge	contrast-01	ARG2	say-01	0.2	0	
# ::edge	crash-01	ARG0	complete	0.2.0	0.2.0.0	
# ::edge	crash-01	ARG1	car	0.2.0	0.2.0.1	
# ::edge	crash-01	time	date-entity	0.2.0	0.2.0.2	
# ::edge	damage-01	ARG1	allege-01	0.2.0.1.0.1.1	0.2.0.1.0.1.1.0	
# ::edge	damage-01	time	and	0.2.0.1.0.1.1	0.2.0.1.0.1	
# ::edge	date-entity	year	1929	0.1.0.1	0.1.0.1.0	
# ::edge	date-entity	year	1930	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	date-entity	year	1932	0.2.0.2	0.2.0.2.0	
# ::edge	promise-01	ARG0	and	0.1.0	0.1.0.0	
# ::edge	promise-01	time	date-entity	0.1.0	0.1.0.1	
# ::edge	say-01	ARG0	it	0	0.0	
# ::edge	say-01	ARG1	and	0	0.1	
(s / say-01 
      :ARG0 (i / it) 
      :ARG1 (a / and 
            :op1 (p / promise-01 
                  :ARG0 (a2 / and 
                        :op1 (d / date-entity 
                              :year 1930)) 
                  :time (d2 / date-entity 
                        :year 1929))) 
      :ARG2-of (c2 / contrast-01 
            :ARG1 (c3 / crash-01 
                  :ARG0 (c / complete) 
                  :ARG1 (c4 / car 
                        :ARG1-of (a3 / accept-01 
                              :ARG0 (i2 / it) 
                              :op-of (a4 / and 
                                    :op1 (b / breach-01 
                                          :ARG1 (c5 / contract-02)) 
                                    :time-of (d4 / damage-01 
                                          :ARG1 (a5 / allege-01))))) 
                  :time (d3 / date-entity 
                        :year 1932))))

# ::snt at the duchesss ball  sharpe had been promised that his duties to the prince were not social but only to provide advice during battle
# ::tok at the duchesss ball sharpe had been promised that his duties to the prince were not social but only to provide advice during battle
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:36.526
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the party is committed to renationalising the water industry but syd tierney on behalf of the national executive committee said it could not promise to buy back acre by acre any land which is sold
# ::tok the party is committed to renationalising the water industry but syd tierney on behalf of the national executive committee said it could not promise to buy back acre by acre any land which is sold
# ::alignments 34-35|0.1.1.0.1.0.0 31-32|0.1.1.0.1.0 30-31|0.1.1.0.1.0.1 26-27|0.1.1.0.1.1 25-26|0.1.1.0.1 23-24|0.1.1.0 21-22|0.1.1 20-21|0.1.1.0.0 19-20|0.1 18-19|0.1.0 17-18|0.1.0.0 16-17|0.1.0.0.0 9-10|0 8-9|0.0.1 7-8|0.0.1.0 3-4|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:36.800
# ::node	0	contrast-01	9-10
# ::node	0.0	commit-01	3-4
# ::node	0.0.0	party	1-2
# ::node	0.0.1	industry	8-9
# ::node	0.0.1.0	water	7-8
# ::node	0.1	say-01	19-20
# ::node	0.1.0	committee	18-19
# ::node	0.1.0.0	executive	17-18
# ::node	0.1.0.0.0	nation	16-17
# ::node	0.1.1	possible	21-22
# ::node	0.1.1.0	promise-01	23-24
# ::node	0.1.1.0.0	it	20-21
# ::node	0.1.1.0.1	buy-01	25-26
# ::node	0.1.1.0.1.0	land	31-32
# ::node	0.1.1.0.1.0.0	sell-01	34-35
# ::node	0.1.1.0.1.0.1	any	30-31
# ::node	0.1.1.0.1.1	back	26-27
# ::root	0	contrast-01
# ::edge	buy-01	ARG1	land	0.1.1.0.1	0.1.1.0.1.0	
# ::edge	buy-01	direction	back	0.1.1.0.1	0.1.1.0.1.1	
# ::edge	commit-01	ARG1	party	0.0	0.0.0	
# ::edge	commit-01	ARG2	industry	0.0	0.0.1	
# ::edge	committee	mod	executive	0.1.0	0.1.0.0	
# ::edge	contrast-01	ARG1	commit-01	0	0.0	
# ::edge	contrast-01	ARG2	say-01	0	0.1	
# ::edge	executive	mod	nation	0.1.0.0	0.1.0.0.0	
# ::edge	industry	mod	water	0.0.1	0.0.1.0	
# ::edge	land	mod	any	0.1.1.0.1.0	0.1.1.0.1.0.1	
# ::edge	possible	domain	promise-01	0.1.1	0.1.1.0	
# ::edge	promise-01	ARG0	it	0.1.1.0	0.1.1.0.0	
# ::edge	promise-01	ARG1	buy-01	0.1.1.0	0.1.1.0.1	
# ::edge	say-01	ARG0	committee	0.1	0.1.0	
# ::edge	say-01	ARG1	possible	0.1	0.1.1	
# ::edge	sell-01	ARG1	land	0.1.1.0.1.0.0	0.1.1.0.1.0	
(c2 / contrast-01 
      :ARG1 (c3 / commit-01 
            :ARG1 (p3 / party) 
            :ARG2 (i2 / industry 
                  :mod (w / water))) 
      :ARG2 (s2 / say-01 
            :ARG0 (c / committee 
                  :mod (e / executive 
                        :mod (n / nation))) 
            :ARG1 (p2 / possible 
                  :domain (p / promise-01 
                        :ARG0 (i / it) 
                        :ARG1 (b2 / buy-01 
                              :ARG1 (l / land 
                                    :ARG1-of (s / sell-01) 
                                    :mod (a / any)) 
                              :direction (b / back))))))

# ::snt the trouble is weve promised the king of nepal well keep them or put the household cavalry a bunch of amateurs out to grass or scrap a few of the 40 remaining frigates and destroyers sitting ducks but the navy loves holding cocktail parties on the afterdeck submarines arent much good for that women hate going up and down the ladders or do anything but kill the loamshires
# ::tok the trouble is weve promised the king of nepal well keep them or put the household cavalry a bunch of amateurs out to grass or scrap a few of the 40 remaining frigates and destroyers sitting ducks but the navy loves holding cocktail parties on the afterdeck submarines arent much good for that women hate going up and down the ladders or do anything but kill the loamshires
# ::alignments 65-66|0.1 64-65|0 63-64|0.2.2 61-62|0.2 58-59|0.0.0 57-58|0.0 54-55|0.2.1.2.0.0.1 53-54|0.2.1.2.0.0.1.0 50-51|0.2.1.1 49-50|0.2.1.1.1 47-48|0.2.1.2.1 43-44|0.2.1.1.0 42-43|0.2.1.1.0.1 41-42|0.2.1.1.0.0 40-41|0.2.1 39-40|0.2.1.0 37-38|0.2.1.2 36-37|0.2.1.2.0.0.0.1 35-36|0.2.1.2.0.0.0 34-35|0.2.1.1.0.2 33-34|0.2.1.2.0.0 31-32|0.2.1.2.0 30-31|0.2.1.2.0.0.0.0 27-28|0.2.0.2 25-26|0.2.0 24-25|0.2.0.3 23-24|0.1.1.0.0.0 20-21|0.2.0.1 18-19|0.2.0.3.1 16-17|0.2.0.3.0 15-16|0.2.0.0 12-13|0.1.1 9-10|0.1.1.1 6-7|0.1.0 4-5|0.1.1.0 1-2|0.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:39.612
# ::node	0	contrast-01	64-65
# ::node	0.0	and	57-58
# ::node	0.0.0	down	58-59
# ::node	0.1	kill-01	65-66
# ::node	0.1.0	king	6-7
# ::node	0.1.1	or	12-13
# ::node	0.1.1.0	promise-01	4-5
# ::node	0.1.1.0.0	trouble-01	1-2
# ::node	0.1.1.0.0.0	grass-roots	23-24
# ::node	0.1.1.1	well	9-10
# ::node	0.2	or	61-62
# ::node	0.2.0	scrap-01	25-26
# ::node	0.2.0.0	household	15-16
# ::node	0.2.0.1	amateur	20-21
# ::node	0.2.0.2	few	27-28
# ::node	0.2.0.3	or	24-25
# ::node	0.2.0.3.0	cavalry	16-17
# ::node	0.2.0.3.1	bunch	18-19
# ::node	0.2.1	love-01	40-41
# ::node	0.2.1.0	navy	39-40
# ::node	0.2.1.1	good	50-51
# ::node	0.2.1.1.0	party	43-44
# ::node	0.2.1.1.0.0	hold-01	41-42
# ::node	0.2.1.1.0.1	cocktail	42-43
# ::node	0.2.1.1.0.2	destroyer	34-35
# ::node	0.2.1.1.1	much	49-50
# ::node	0.2.1.2	contrast-01	37-38
# ::node	0.2.1.2.0	remain-01	31-32
# ::node	0.2.1.2.0.0	and	33-34
# ::node	0.2.1.2.0.0.0	sit-01	35-36
# ::node	0.2.1.2.0.0.0.0	40	30-31
# ::node	0.2.1.2.0.0.0.1	duck	36-37
# ::node	0.2.1.2.0.0.1	hate-01	54-55
# ::node	0.2.1.2.0.0.1.0	woman	53-54
# ::node	0.2.1.2.1	submarine	47-48
# ::node	0.2.2	anything	63-64
# ::root	0	contrast-01
# ::edge	and	direction	down	0.0	0.0.0	
# ::edge	and	op1	remain-01	0.2.1.2.0.0	0.2.1.2.0	
# ::edge	and	op2	sit-01	0.2.1.2.0.0	0.2.1.2.0.0.0	
# ::edge	and	op3	hate-01	0.2.1.2.0.0	0.2.1.2.0.0.1	
# ::edge	contrast-01	ARG1	and	0	0.0	
# ::edge	contrast-01	ARG1	love-01	0.2.1.2	0.2.1	
# ::edge	contrast-01	ARG2	kill-01	0	0.1	
# ::edge	contrast-01	ARG2	submarine	0.2.1.2	0.2.1.2.1	
# ::edge	good	domain	party	0.2.1.1	0.2.1.1.0	
# ::edge	good	quant	much	0.2.1.1	0.2.1.1.1	
# ::edge	hate-01	ARG1	woman	0.2.1.2.0.0.1	0.2.1.2.0.0.1.0	
# ::edge	hold-01	ARG1	party	0.2.1.1.0.0	0.2.1.1.0	
# ::edge	kill-01	ARG0	king	0.1	0.1.0	
# ::edge	love-01	ARG0	navy	0.2.1	0.2.1.0	
# ::edge	love-01	ARG1	good	0.2.1	0.2.1.1	
# ::edge	or	mod	well	0.1.1	0.1.1.1	
# ::edge	or	op1	cavalry	0.2.0.3	0.2.0.3.0	
# ::edge	or	op1	kill-01	0.1.1	0.1	
# ::edge	or	op1	scrap-01	0.2	0.2.0	
# ::edge	or	op2	bunch	0.2.0.3	0.2.0.3.1	
# ::edge	or	op2	love-01	0.2	0.2.1	
# ::edge	or	op3	anything	0.2	0.2.2	
# ::edge	or	op3	scrap-01	0.2.0.3	0.2.0	
# ::edge	or	op4	contrast-01	0.2	0	
# ::edge	party	mod	cocktail	0.2.1.1.0	0.2.1.1.0.1	
# ::edge	party	poss	destroyer	0.2.1.1.0	0.2.1.1.0.2	
# ::edge	promise-01	ARG0	trouble-01	0.1.1.0	0.1.1.0.0	
# ::edge	promise-01	ARG1	or	0.1.1.0	0.1.1	
# ::edge	remain-01	ARG1	contrast-01	0.2.1.2.0	0.2.1.2	
# ::edge	scrap-01	ARG0	household	0.2.0	0.2.0.0	
# ::edge	scrap-01	ARG1	amateur	0.2.0	0.2.0.1	
# ::edge	scrap-01	ARG2	few	0.2.0	0.2.0.2	
# ::edge	sit-01	ARG0	40	0.2.1.2.0.0.0	0.2.1.2.0.0.0.0	
# ::edge	sit-01	ARG1	duck	0.2.1.2.0.0.0	0.2.1.2.0.0.0.1	
# ::edge	trouble-01	ARG1	grass-roots	0.1.1.0.0	0.1.1.0.0.0	
(c / contrast-01 
      :ARG1 (a2 / and 
            :direction (d / down)) 
      :ARG2 (k / kill-01 
            :ARG0 (k2 / king) 
            :op-of (o3 / or 
                  :ARG1-of (p2 / promise-01 
                        :ARG0 (t / trouble-01 
                              :ARG1 (g2 / grass-roots))) 
                  :mod (w2 / well))) 
      :op-of (o / or 
            :op1 (s3 / scrap-01 
                  :ARG0 (h3 / household) 
                  :ARG1 (a4 / amateur) 
                  :ARG2 (f / few) 
                  :op-of (o2 / or 
                        :op1 (c4 / cavalry) 
                        :op2 (b / bunch))) 
            :op2 (l / love-01 
                  :ARG0 (n / navy) 
                  :ARG1 (g / good 
                        :domain (p / party 
                              :ARG1-of (h2 / hold-01) 
                              :mod (c2 / cocktail) 
                              :poss (d3 / destroyer)) 
                        :quant (m / much)) 
                  :ARG1-of (c3 / contrast-01 
                        :ARG1-of (r / remain-01 
                              :op-of (a3 / and 
                                    :op1 (s2 / sit-01 
                                          :ARG0 40 
                                          :ARG1 (d2 / duck)) 
                                    :op2 (h / hate-01 
                                          :ARG1 (w / woman)))) 
                        :ARG2 (s / submarine))) 
            :op3 (a / anything)))

# ::snt i have an inner force call it mystical esoteric theological whatever you like he said promising that once elected he would surround himself with wellintentioned men to solve all the nations problems
# ::tok i have an inner force call it mystical esoteric theological whatever you like he said promising that once elected he would surround himself with wellintentioned men to solve all the nations problems
# ::alignments 31-32|0.0.0.0.0.0.0 30-31|0.0.0.0.0.0.0.0 28-29|0.0.0.0.0.0.0.1 27-28|0.0.0.0.0.0 25-26|0.0.0.0.0.0.2 19-20|0.0.0.0.0 18-19|0.0.0.0 17-18|0.0.0.0.2 15-16|0.0.0 14-15|0 13-14|0.0 11-12|0.1 10-11|0.1.0 7-8|0.0.0.0.0.0.1.0 6-7|0.0.0.0.0.0.1 4-5|0.0.0.0.1 3-4|0.0.0.0.1.0 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:40.533
# ::node	0	say-01	14-15
# ::node	0.0	he	13-14
# ::node	0.0.0	promise-01	15-16
# ::node	0.0.0.0	elect-01	18-19
# ::node	0.0.0.0.0	he	19-20
# ::node	0.0.0.0.0.0	solve-01	27-28
# ::node	0.0.0.0.0.0.0	problem	31-32
# ::node	0.0.0.0.0.0.0.0	nation	30-31
# ::node	0.0.0.0.0.0.0.1	all	28-29
# ::node	0.0.0.0.0.0.1	it	6-7
# ::node	0.0.0.0.0.0.1.0	mystical	7-8
# ::node	0.0.0.0.0.0.2	man	25-26
# ::node	0.0.0.0.1	force	4-5
# ::node	0.0.0.0.1.0	inner	3-4
# ::node	0.0.0.0.2	once	17-18
# ::node	0.1	you	11-12
# ::node	0.1.0	whatever	10-11
# ::node	0.2	i	0-1
# ::root	0	say-01
# ::edge	elect-01	ARG0	he	0.0.0.0	0.0.0.0.0	
# ::edge	elect-01	ARG1	force	0.0.0.0	0.0.0.0.1	
# ::edge	elect-01	time	once	0.0.0.0	0.0.0.0.2	
# ::edge	force	mod	inner	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	it	op1	solve-01	0.0.0.0.0.0.1	0.0.0.0.0.0	
# ::edge	man	purpose	solve-01	0.0.0.0.0.0.2	0.0.0.0.0.0	
# ::edge	mystical	domain	it	0.0.0.0.0.0.1.0	0.0.0.0.0.0.1	
# ::edge	problem	mod	nation	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	problem	quant	all	0.0.0.0.0.0.0	0.0.0.0.0.0.0.1	
# ::edge	promise-01	ARG0	he	0.0.0	0.0	
# ::edge	promise-01	ARG1	elect-01	0.0.0	0.0.0.0	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	you	0	0.1	
# ::edge	say-01	ARG2	i	0	0.2	
# ::edge	solve-01	ARG0	he	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	solve-01	ARG1	problem	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	whatever	mod	you	0.1.0	0.1	
(s2 / say-01 
      :ARG0 (h2 / he 
            :ARG0-of (p2 / promise-01 
                  :ARG1 (e / elect-01 
                        :ARG0 (h / he 
                              :ARG0-of (s / solve-01 
                                    :ARG1 (p / problem 
                                          :mod (n / nation) 
                                          :quant (a / all)) 
                                    :op-of (i / it 
                                          :domain-of (m2 / mystical)) 
                                    :purpose-of (m / man))) 
                        :ARG1 (f / force 
                              :mod (i2 / inner)) 
                        :time (o / once)))) 
      :ARG1 (y / you 
            :mod-of (w / whatever)) 
      :ARG2 (i3 / i))

# ::snt meanwhile mr modrow who promised that honesty modesty and competence would be among the guidelines of his new government has been setting an entirely new personal style
# ::tok meanwhile mr modrow who promised that honesty modesty and competence would be among the guidelines of his new government has been setting an entirely new personal style
# ::alignments 26-27|0.0.1 25-26|0.0.1.1 24-25|0.0.1.2 23-24|0.0.1.2.0 21-22|0.0.1.0 17-18|0.0.0 14-15|0.1.0 12-13|0.1.0.0 9-10|0.1 8-9|0 6-7|0.1.1 4-5|0.0 0-1|0.1.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:40.754
# ::node	0	and	8-9
# ::node	0.0	promise-01	4-5
# ::node	0.0.0	new	17-18
# ::node	0.0.1	style	26-27
# ::node	0.0.1.0	set-02	21-22
# ::node	0.0.1.1	personal	25-26
# ::node	0.0.1.2	new	24-25
# ::node	0.0.1.2.0	entire	23-24
# ::node	0.1	competent-41	9-10
# ::node	0.1.0	guideline	14-15
# ::node	0.1.0.0	among	12-13
# ::node	0.1.1	honesty	6-7
# ::node	0.1.2	meanwhile	0-1
# ::root	0	and
# ::edge	among	op1	guideline	0.1.0.0	0.1.0	
# ::edge	and	op1	promise-01	0	0.0	
# ::edge	and	op2	competent-41	0	0.1	
# ::edge	competent-41	ARG1	guideline	0.1	0.1.0	
# ::edge	competent-41	ARG2	honesty	0.1	0.1.1	
# ::edge	meanwhile	op1	competent-41	0.1.2	0.1	
# ::edge	new	degree	entire	0.0.1.2	0.0.1.2.0	
# ::edge	promise-01	ARG0	new	0.0	0.0.0	
# ::edge	promise-01	ARG1	style	0.0	0.0.1	
# ::edge	set-02	ARG1	style	0.0.1.0	0.0.1	
# ::edge	style	mod	new	0.0.1	0.0.1.2	
# ::edge	style	mod	personal	0.0.1	0.0.1.1	
(a2 / and 
      :op1 (p2 / promise-01 
            :ARG0 (n2 / new) 
            :ARG1 (s / style 
                  :ARG1-of (s2 / set-02) 
                  :mod (p / personal) 
                  :mod (n / new 
                        :degree (e / entire)))) 
      :op2 (c / competent-41 
            :ARG1 (g / guideline 
                  :op-of (a / among)) 
            :ARG2 (h / honesty) 
            :op-of (m / meanwhile)))

# ::snt roubaud himself finally produced the book that his great and varied talent had always promised le grand incendie de londres seuil 13
# ::tok roubaud himself finally produced the book that his great and varied talent had always promised le grand incendie de londres seuil 13
# ::alignments 21-22|0.0.0 15-17|0.0.1.1.0.0.0+0.0.1.1.0.0.1+0.0.1.1.0.0+0.0.1.1.0 14-15|0.0.1.1 13-14|0.0.1.1.1 11-12|0.0.1 10-11|0.0 9-10|0 8-9|0.0.1.2 5-6|0.0.1.0.0 3-4|0.0.1.0 2-3|0.0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:40.965
# ::node	0	and	9-10
# ::node	0.0	vary-01	10-11
# ::node	0.0.0	13	21-22
# ::node	0.0.1	talent	11-12
# ::node	0.0.1.0	produce-01	3-4
# ::node	0.0.1.0.0	book	5-6
# ::node	0.0.1.0.1	final	2-3
# ::node	0.0.1.1	promise-01	14-15
# ::node	0.0.1.1.0	country	15-17
# ::node	0.0.1.1.0.0	name	15-17
# ::node	0.0.1.1.0.0.0	"grand"	15-17
# ::node	0.0.1.1.0.0.1	"le"	15-17
# ::node	0.0.1.1.1	always	13-14
# ::node	0.0.1.2	great	8-9
# ::root	0	and
# ::edge	and	op1	vary-01	0	0.0	
# ::edge	country	name	name	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	name	op1	"grand"	0.0.1.1.0.0	0.0.1.1.0.0.0	
# ::edge	name	op2	"le"	0.0.1.1.0.0	0.0.1.1.0.0.1	
# ::edge	produce-01	ARG0	talent	0.0.1.0	0.0.1	
# ::edge	produce-01	ARG1	book	0.0.1.0	0.0.1.0.0	
# ::edge	produce-01	time	final	0.0.1.0	0.0.1.0.1	
# ::edge	promise-01	ARG0	talent	0.0.1.1	0.0.1	
# ::edge	promise-01	ARG1	country	0.0.1.1	0.0.1.1.0	
# ::edge	promise-01	time	always	0.0.1.1	0.0.1.1.1	
# ::edge	talent	mod	great	0.0.1	0.0.1.2	
# ::edge	vary-01	ARG0	13	0.0	0.0.0	
# ::edge	vary-01	ARG1	talent	0.0	0.0.1	
(a2 / and 
      :op1 (v / vary-01 
            :ARG0 13 
            :ARG1 (t / talent 
                  :ARG0-of (p2 / produce-01 
                        :ARG1 (b / book) 
                        :time (f / final)) 
                  :ARG0-of (p / promise-01 
                        :ARG1 (c / country 
                              :name (n / name 
                                    :op1 "grand" 
                                    :op2 "le")) 
                        :time (a / always)) 
                  :mod (g / great))))

# ::snt since there are literally millions of fans of coronation street a book that promises the inside story of the thriceweekly soap opera will doubtless sell well, 95 isnt the book it promises to be
# ::tok since there are literally millions of fans of coronation street a book that promises the inside story of the thriceweekly soap opera will doubtless sell well , 95 isnt the book it promises to be
# ::alignments 32-33|0.1.0.0.0.0 31-32|0.1.0.0.0.0.0 30-31|0.1.0.0.0.0.1 27-28|0.1.2 25-26|0.1.3 24-25|0.1 23-24|0 21-22|0.1.0.2 20-21|0.1.0.2.0 16-17|0.1.0 15-16|0.1.0.1 13-14|0.1.0.0 11-12|0.1.0.0.0 9-10|0.1.0.0.0.1.0 6-7|0.1.0.0.0.1 3-4|0.1.1 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:41.476
# ::node	0	doubt-01	23-24
# ::node	0.0	since	0-1
# ::node	0.1	sell-01	24-25
# ::node	0.1.0	story	16-17
# ::node	0.1.0.0	promise-01	13-14
# ::node	0.1.0.0.0	book	11-12
# ::node	0.1.0.0.0.0	promise-01	32-33
# ::node	0.1.0.0.0.0.0	it	31-32
# ::node	0.1.0.0.0.0.1	book	30-31
# ::node	0.1.0.0.0.1	fan	6-7
# ::node	0.1.0.0.0.1.0	street	9-10
# ::node	0.1.0.1	inside	15-16
# ::node	0.1.0.2	opera	21-22
# ::node	0.1.0.2.0	soap	20-21
# ::node	0.1.1	literal	3-4
# ::node	0.1.2	95	27-28
# ::node	0.1.3	well	25-26
# ::root	0	doubt-01
# ::edge	book	mod	fan	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	doubt-01	ARG0	since	0	0.0	
# ::edge	doubt-01	ARG1	sell-01	0	0.1	
# ::edge	fan	location	street	0.1.0.0.0.1	0.1.0.0.0.1.0	
# ::edge	opera	mod	soap	0.1.0.2	0.1.0.2.0	
# ::edge	promise-01	ARG0	book	0.1.0.0	0.1.0.0.0	
# ::edge	promise-01	ARG0	it	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	promise-01	ARG1	book	0.1.0.0.0.0	0.1.0.0.0.0.1	
# ::edge	promise-01	ARG1	story	0.1.0.0	0.1.0	
# ::edge	promise-01	ARG2	book	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	sell-01	ARG0	story	0.1	0.1.0	
# ::edge	sell-01	ARG1	literal	0.1	0.1.1	
# ::edge	sell-01	ARG2	95	0.1	0.1.2	
# ::edge	sell-01	manner	well	0.1	0.1.3	
# ::edge	story	mod	inside	0.1.0	0.1.0.1	
# ::edge	story	topic	opera	0.1.0	0.1.0.2	
(d / doubt-01 
      :ARG0 (s5 / since) 
      :ARG1 (s / sell-01 
            :ARG0 (s3 / story 
                  :ARG1-of (p2 / promise-01 
                        :ARG0 (b2 / book 
                              :ARG2-of (p / promise-01 
                                    :ARG0 (i / it) 
                                    :ARG1 (b / book)) 
                              :mod (f / fan 
                                    :location (s4 / street)))) 
                  :mod (i2 / inside) 
                  :topic (o / opera 
                        :mod (s2 / soap))) 
            :ARG1 (l / literal) 
            :ARG2 95 
            :manner (w / well)))

# ::snt british rail today promised a thorough investigation into a train crash in which seven people were injured one seriously
# ::tok british rail today promised a thorough investigation into a train crash in which seven people were injured one seriously
# ::alignments 18-19|0.1.2.0 16-17|0.1.2 13-14|0.1.0 10-11|0.1 9-10|0.1.1 6-7|0.2 5-6|0.2.0 3-4|0 2-3|0.3 0-2|0.0.0.0+0.0.0.1+0.0.0+0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:41.553
# ::node	0	promise-01	3-4
# ::node	0.0	organization	0-2
# ::node	0.0.0	name	0-2
# ::node	0.0.0.0	"rail"	0-2
# ::node	0.0.0.1	"british"	0-2
# ::node	0.1	crash-01	10-11
# ::node	0.1.0	7	13-14
# ::node	0.1.1	train	9-10
# ::node	0.1.2	injure-01	16-17
# ::node	0.1.2.0	serious	18-19
# ::node	0.2	investigate-01	6-7
# ::node	0.2.0	thorough	5-6
# ::node	0.3	today	2-3
# ::root	0	promise-01
# ::edge	crash-01	ARG0	7	0.1	0.1.0	
# ::edge	crash-01	ARG1	train	0.1	0.1.1	
# ::edge	injure-01	ARG1	crash-01	0.1.2	0.1	
# ::edge	injure-01	degree	serious	0.1.2	0.1.2.0	
# ::edge	investigate-01	manner	thorough	0.2	0.2.0	
# ::edge	name	op1	"rail"	0.0.0	0.0.0.0	
# ::edge	name	op2	"british"	0.0.0	0.0.0.1	
# ::edge	organization	name	name	0.0	0.0.0	
# ::edge	promise-01	ARG0	organization	0	0.0	
# ::edge	promise-01	ARG1	crash-01	0	0.1	
# ::edge	promise-01	ARG2	investigate-01	0	0.2	
# ::edge	promise-01	time	today	0	0.3	
(p / promise-01 
      :ARG0 (o / organization 
            :name (n / name 
                  :op1 "rail" 
                  :op2 "british")) 
      :ARG1 (c / crash-01 
            :ARG0 7 
            :ARG1 (t / train) 
            :ARG1-of (i / injure-01 
                  :degree (s / serious))) 
      :ARG2 (i2 / investigate-01 
            :manner (t2 / thorough)) 
      :time (t3 / today))

# ::snt her mother had been promising more time in the future all her life
# ::tok her mother had been promising more time in the future all her life
# ::alignments 12-13|0.2 10-11|0.2.0 9-10|0.1.0 6-7|0.1 4-5|0 1-2|0.0+0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:41.574
# ::node	0	promise-01	4-5
# ::node	0.0	mother	1-2
# ::node	0.0.0	have-rel-role-91	1-2
# ::node	0.1	time	6-7
# ::node	0.1.0	future	9-10
# ::node	0.2	life	12-13
# ::node	0.2.0	all	10-11
# ::root	0	promise-01
# ::edge	have-rel-role-91	ARG2	mother	0.0.0	0.0	
# ::edge	life	quant	all	0.2	0.2.0	
# ::edge	promise-01	ARG0	mother	0	0.0	
# ::edge	promise-01	ARG1	time	0	0.1	
# ::edge	promise-01	time	life	0	0.2	
# ::edge	time	location	future	0.1	0.1.0	
(p / promise-01 
      :ARG0 (m / mother 
            :ARG2-of (h / have-rel-role-91)) 
      :ARG1 (t / time 
            :location (f / future)) 
      :time (l / life 
            :quant (a / all)))

# ::snt neighbouring sri lanka was also promised peace
# ::tok neighbouring sri lanka was also promised peace
# ::alignments 6-7|0.1 5-6|0 4-5|0.2 1-3|0.0.1.0+0.0.1.1+0.0.1+0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:41.594
# ::node	0	promise-01	5-6
# ::node	0.0	country	1-3
# ::node	0.0.0	neighbor-01	0-1
# ::node	0.0.1	name	1-3
# ::node	0.0.1.0	"lanka"	1-3
# ::node	0.0.1.1	"sri"	1-3
# ::node	0.1	peace	6-7
# ::node	0.2	also	4-5
# ::root	0	promise-01
# ::edge	country	name	name	0.0	0.0.1	
# ::edge	name	op1	"lanka"	0.0.1	0.0.1.0	
# ::edge	name	op2	"sri"	0.0.1	0.0.1.1	
# ::edge	neighbor-01	ARG1	country	0.0.0	0.0	
# ::edge	promise-01	ARG1	country	0	0.0	
# ::edge	promise-01	ARG2	peace	0	0.1	
# ::edge	promise-01	mod	also	0	0.2	
(p2 / promise-01 
      :ARG1 (c / country 
            :ARG1-of (n2 / neighbor-01) 
            :name (n / name 
                  :op1 "lanka" 
                  :op2 "sri")) 
      :ARG2 (p / peace) 
      :mod (a / also))

# ::snt but double payment specially developed for readers digest by  guardian royal exchange promises you fullcover life insurance  and a generous cash sum dash
# ::tok but double payment specially developed for readers digest by guardian royal exchange promises you fullcover life insurance and a generous cash sum dash
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:41.595
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt finally himmler himself summoned vlasov and promised his aid in the creation of a liberation army
# ::tok finally himmler himself summoned vlasov and promised his aid in the creation of a liberation army
# ::alignments 15-16|0.1.1.0 14-15|0.1.1.0.0 11-12|0.1.1 8-9|0.1.0 6-7|0.1 5-6|0 3-4|0.0 0-1|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:41.625
# ::node	0	and	5-6
# ::node	0.0	summon-01	3-4
# ::node	0.1	promise-01	6-7
# ::node	0.1.0	aid-01	8-9
# ::node	0.1.0.0	final	0-1
# ::node	0.1.1	create-01	11-12
# ::node	0.1.1.0	army	15-16
# ::node	0.1.1.0.0	liberate-01	14-15
# ::root	0	and
# ::edge	aid-01	ARG1	final	0.1.0	0.1.0.0	
# ::edge	and	op1	summon-01	0	0.0	
# ::edge	and	op2	promise-01	0	0.1	
# ::edge	create-01	ARG1	army	0.1.1	0.1.1.0	
# ::edge	liberate-01	ARG0	army	0.1.1.0.0	0.1.1.0	
# ::edge	promise-01	ARG1	aid-01	0.1	0.1.0	
# ::edge	promise-01	purpose	create-01	0.1	0.1.1	
(a3 / and 
      :op1 (s / summon-01) 
      :op2 (p / promise-01 
            :ARG1 (a2 / aid-01 
                  :ARG1 (f / final)) 
            :purpose (c / create-01 
                  :ARG1 (a / army 
                        :ARG0-of (l / liberate-01)))))

# ::snt but trudeau never promised it would
# ::tok but trudeau never promised it would
# ::alignments 4-5|0.0.0 3-4|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:41.631
# ::node	0	contrast-01	0-1
# ::node	0.0	promise-01	3-4
# ::node	0.0.0	it	4-5
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	promise-01	0	0.0	
# ::edge	promise-01	ARG1	it	0.0	0.0.0	
(c / contrast-01 
      :ARG1 (p / promise-01 
            :ARG1 (i / it)))

# ::snt the right exists because the very same interest on which the power to promise and the duty to keep promises are based is also the ground for holding others to be subject to a duty not to interfere with ones promising, the duty requires one not to prevent a person from promising e
# ::tok the right exists because the very same interest on which the power to promise and the duty to keep promises are based is also the ground for holding others to be subject to a duty not to interfere with ones promising , the duty requires one not to prevent a person from promising e
# ::alignments 52-53|0.0.0.0.0.2.1.0.0.0 50-51|0.0.0.0.0.2.1.0.0 48-49|0.0.0.0.0.2.1.0.0.1 44-45|0.0.0.0.0.2.1.0.0.1.0 43-44|0.0.0.0.0.2.1.0.0.1.0.0 40-41|0.0.0.0.0.2.1.0 39-40|0.0.0.0.0.2.1 37-38|0.0.0.0.0.2 34-35|0.0.0.0.0.2.0 31-32|0.0.0.0.0.2.0.0 28-29|0.0.0.0.0.1 27-28|0.0.0.0.0 25-26|0.0.0.0 23-24|0.0.0.0.0.0 21-22|0.1.0.0 19-20|0.1.0.2.0 16-17|0.1.0.2 14-15|0.1.0 13-14|0.1.0.1 11-12|0.1 7-8|0 6-7|0.2 5-6|0.2.0 3-4|0.0 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:43.312
# ::node	0	interest-01	7-8
# ::node	0.0	cause-01	3-4
# ::node	0.0.0	exist-01	2-3
# ::node	0.0.0.0	ground	25-26
# ::node	0.0.0.0.0	hold-01	27-28
# ::node	0.0.0.0.0.0	also	23-24
# ::node	0.0.0.0.0.1	other	28-29
# ::node	0.0.0.0.0.2	interfere-01	37-38
# ::node	0.0.0.0.0.2.0	duty	34-35
# ::node	0.0.0.0.0.2.0.0	subject	31-32
# ::node	0.0.0.0.0.2.1	one	39-40
# ::node	0.0.0.0.0.2.1.0	promise-01	40-41
# ::node	0.0.0.0.0.2.1.0.0	person	50-51
# ::node	0.0.0.0.0.2.1.0.0.0	promise-01	52-53
# ::node	0.0.0.0.0.2.1.0.0.1	prevent-01	48-49
# ::node	0.0.0.0.0.2.1.0.0.1.0	require-01	44-45
# ::node	0.0.0.0.0.2.1.0.0.1.0.0	duty	43-44
# ::node	0.1	power	11-12
# ::node	0.1.0	and	14-15
# ::node	0.1.0.0	base-01	21-22
# ::node	0.1.0.1	promise-01	13-14
# ::node	0.1.0.2	duty	16-17
# ::node	0.1.0.2.0	promise-01	19-20
# ::node	0.2	same-41	6-7
# ::node	0.2.0	very	5-6
# ::root	0	interest-01
# ::edge	and	op1	power	0.1.0	0.1	
# ::edge	and	op2	promise-01	0.1.0	0.1.0.1	
# ::edge	and	op3	duty	0.1.0	0.1.0.2	
# ::edge	base-01	ARG1	and	0.1.0.0	0.1.0	
# ::edge	cause-01	ARG0	interest-01	0.0	0	
# ::edge	cause-01	ARG1	exist-01	0.0	0.0.0	
# ::edge	exist-01	ARG1	ground	0.0.0	0.0.0.0	
# ::edge	ground	topic	hold-01	0.0.0.0	0.0.0.0.0	
# ::edge	hold-01	ARG0	also	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	hold-01	ARG1	other	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	hold-01	purpose	interfere-01	0.0.0.0.0	0.0.0.0.0.2	
# ::edge	interest-01	ARG1	power	0	0.1	
# ::edge	interfere-01	ARG0	duty	0.0.0.0.0.2	0.0.0.0.0.2.0	
# ::edge	interfere-01	ARG1	one	0.0.0.0.0.2	0.0.0.0.0.2.1	
# ::edge	prevent-01	ARG1	person	0.0.0.0.0.2.1.0.0.1	0.0.0.0.0.2.1.0.0	
# ::edge	promise-01	ARG0	person	0.0.0.0.0.2.1.0	0.0.0.0.0.2.1.0.0	
# ::edge	promise-01	ARG1	duty	0.1.0.2.0	0.1.0.2	
# ::edge	promise-01	ARG1	one	0.0.0.0.0.2.1.0	0.0.0.0.0.2.1	
# ::edge	promise-01	ARG1	person	0.0.0.0.0.2.1.0.0.0	0.0.0.0.0.2.1.0.0	
# ::edge	require-01	ARG0	duty	0.0.0.0.0.2.1.0.0.1.0	0.0.0.0.0.2.1.0.0.1.0.0	
# ::edge	require-01	ARG1	prevent-01	0.0.0.0.0.2.1.0.0.1.0	0.0.0.0.0.2.1.0.0.1	
# ::edge	same-41	ARG1	interest-01	0.2	0	
# ::edge	same-41	degree	very	0.2	0.2.0	
# ::edge	subject	prep-to	duty	0.0.0.0.0.2.0.0	0.0.0.0.0.2.0	
(i2 / interest-01 
      :ARG0-of (c / cause-01 
            :ARG1 (e / exist-01 
                  :ARG1 (g / ground 
                        :topic (h / hold-01 
                              :ARG0 (a / also) 
                              :ARG1 (o2 / other) 
                              :purpose (i / interfere-01 
                                    :ARG0 (d2 / duty 
                                          :prep-to-of (s / subject)) 
                                    :ARG1 (o / one 
                                          :ARG1-of (p4 / promise-01 
                                                :ARG0 (p2 / person 
                                                      :ARG1-of (p / promise-01) 
                                                      :ARG1-of (p3 / prevent-01 
                                                            :ARG1-of (r / require-01 
                                                                  :ARG0 (d / duty))))))))))) 
      :ARG1 (p7 / power 
            :op-of (a2 / and 
                  :ARG1-of (b / base-01) 
                  :op1 (p6 / promise-01) 
                  :op2 (d3 / duty 
                        :ARG1-of (p5 / promise-01)))) 
      :ARG1-of (s2 / same-41 
            :degree (v / very)))

# ::snt gateshead festival 79 dont miss what promises to be one of the garden festivals of the year
# ::tok gateshead festival 79 dont miss what promises to be one of the garden festivals of the year
# ::alignments 16-17|0.0.1 12-13|0 6-7|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:43.341
# ::node	0	garden	12-13
# ::node	0.0	promise-01	6-7
# ::node	0.0.0	festival	1-2
# ::node	0.0.1	year	16-17
# ::root	0	garden
(g / garden 
      :ARG0-of (p / promise-01 
            :ARG1 (f / festival) 
            :op-of (y / year)))

# ::snt he promises to pay on a definite date
# ::tok he promises to pay on a definite date
# ::alignments 7-8|0.0.1 6-7|0.0.1.0 3-4|0.0.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:43.354
# ::node	0	promise-01	1-2
# ::node	0.0	he	0-1
# ::node	0.0.0	pay-01	3-4
# ::node	0.0.1	date	7-8
# ::node	0.0.1.0	definite	6-7
# ::root	0	promise-01
# ::edge	date	mod	definite	0.0.1	0.0.1.0	
# ::edge	date	poss	he	0.0.1	0.0	
# ::edge	pay-01	ARG0	he	0.0.0	0.0	
# ::edge	promise-01	ARG0	he	0	0.0	
(p2 / promise-01 
      :ARG0 (h / he 
            :ARG0-of (p / pay-01) 
            :poss-of (d / date 
                  :mod (d2 / definite))))

# ::snt yet there are others in this age group who really believe youve trekked all the way from the north pole and have painstakingly prepared letters for you and will promise to leave out some mince pies for rudolph
# ::tok yet there are others in this age group who really believe youve trekked all the way from the north pole and have painstakingly prepared letters for you and will promise to leave out some mince pies for rudolph
# ::alignments 33-34|0.0.0 31-32|0.0.3.0 29-30|0.0.3.0.0 27-28|0.0.3 26-27|0.2.1.0 24-25|0.2.1 23-24|0.2 20-21|0 19-20|0.1.1 18-19|0.1.1.0 15-16|0.1 13-14|0.1.0 10-11|0.0 9-10|0.0.2 7-8|0.0.1.0 6-7|0.0.1 5-6|0.0.1.0.0 3-4|0.0.3.0.0.0 0-1|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:44.177
# ::node	0	and	20-21
# ::node	0.0	believe-01	10-11
# ::node	0.0.0	some	33-34
# ::node	0.0.1	age-01	6-7
# ::node	0.0.1.0	group	7-8
# ::node	0.0.1.0.0	this	5-6
# ::node	0.0.2	really	9-10
# ::node	0.0.3	and	27-28
# ::node	0.0.3.0	leave-01	31-32
# ::node	0.0.3.0.0	promise-01	29-30
# ::node	0.0.3.0.0.0	other	3-4
# ::node	0.1	way	15-16
# ::node	0.1.0	all	13-14
# ::node	0.1.1	pole	19-20
# ::node	0.1.1.0	north	18-19
# ::node	0.2	prepare-02	23-24
# ::node	0.2.0	yet	0-1
# ::node	0.2.1	letter	24-25
# ::node	0.2.1.0	you	26-27
# ::root	0	and
# ::edge	age-01	ARG0	group	0.0.1	0.0.1.0	
# ::edge	age-01	ARG1	believe-01	0.0.1	0.0	
# ::edge	and	op1	believe-01	0.0.3	0.0	
# ::edge	and	op1	way	0	0.1	
# ::edge	and	op2	leave-01	0.0.3	0.0.3.0	
# ::edge	and	op2	prepare-02	0	0.2	
# ::edge	believe-01	ARG0	some	0.0	0.0.0	
# ::edge	believe-01	ARG1	and	0.0	0	
# ::edge	believe-01	mod	really	0.0	0.0.2	
# ::edge	group	mod	this	0.0.1.0	0.0.1.0.0	
# ::edge	letter	poss	you	0.2.1	0.2.1.0	
# ::edge	pole	mod	north	0.1.1	0.1.1.0	
# ::edge	prepare-02	ARG0	yet	0.2	0.2.0	
# ::edge	prepare-02	ARG1	letter	0.2	0.2.1	
# ::edge	promise-01	ARG0	other	0.0.3.0.0	0.0.3.0.0.0	
# ::edge	promise-01	ARG2	leave-01	0.0.3.0.0	0.0.3.0	
# ::edge	way	mod	all	0.1	0.1.0	
# ::edge	way	purpose	pole	0.1	0.1.1	
(a2 / and 
      :ARG1-of (b / believe-01 
            :ARG0 (s / some) 
            :ARG1-of (a4 / age-01 
                  :ARG0 (g / group 
                        :mod (t / this))) 
            :mod (r / really) 
            :op-of (a / and 
                  :op1 (l / leave-01 
                        :ARG2-of (p / promise-01 
                              :ARG0 (o / other))))) 
      :op1 (w / way 
            :mod (a3 / all) 
            :purpose (p3 / pole 
                  :mod (n / north))) 
      :op2 (p2 / prepare-02 
            :ARG0 (y2 / yet) 
            :ARG1 (l2 / letter 
                  :poss (y / you))))

# ::snt take our aid but you must promise to buy our goods and especially weapons
# ::tok take our aid but you must promise to buy our goods and especially weapons
# ::alignments 13-14|0.0.2.0.0 12-13|0.0.2.0.0.0 11-12|0.0.2.0 10-11|0.0.0.0 8-9|0.0.2 6-7|0.0 4-5|0.0.0 3-4|0 2-3|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:44.242
# ::node	0	contrast-01	3-4
# ::node	0.0	promise-01	6-7
# ::node	0.0.0	you	4-5
# ::node	0.0.0.0	good	10-11
# ::node	0.0.1	aid-01	2-3
# ::node	0.0.2	buy-01	8-9
# ::node	0.0.2.0	and	11-12
# ::node	0.0.2.0.0	weapon	13-14
# ::node	0.0.2.0.0.0	especially	12-13
# ::root	0	contrast-01
# ::edge	and	op1	weapon	0.0.2.0	0.0.2.0.0	
# ::edge	buy-01	ARG1	and	0.0.2	0.0.2.0	
# ::edge	contrast-01	ARG1	promise-01	0	0.0	
# ::edge	good	poss	you	0.0.0.0	0.0.0	
# ::edge	promise-01	ARG0	you	0.0	0.0.0	
# ::edge	promise-01	ARG1	aid-01	0.0	0.0.1	
# ::edge	promise-01	ARG2	buy-01	0.0	0.0.2	
# ::edge	weapon	mod	especially	0.0.2.0.0	0.0.2.0.0.0	
(c / contrast-01 
      :ARG1 (p / promise-01 
            :ARG0 (y / you 
                  :poss-of (g / good)) 
            :ARG1 (a2 / aid-01) 
            :ARG2 (b / buy-01 
                  :ARG1 (a / and 
                        :op1 (w / weapon 
                              :mod (e / especially))))))

# ::snt with the barbarities of a decadelong military dictatorship behind them uruguayans emerged this week into full democracy for the first time in 18 years electing a president who promised to do nothing to upset their muchprized status quo
# ::tok with the barbarities of a decadelong military dictatorship behind them uruguayans emerged this week into full democracy for the first time in 18 years electing a president who promised to do nothing to upset their muchprized status quo
# ::alignments 36-37|0.1 33-34|0 31-32|0.0 28-29|0.0.0 26-27|0.0.0.0.0.1+0.0.0.0.0.1.0 24-25|0.0.0.0.0 23-24|0.0.0.0.2+0.0.0.0 22-23|0.0.0.0.1 20-21|0.0.0.0.0.0 16-17|0.0.0.0.0.0.0 15-16|0.0.0.0.0.0.0.1 13-14|0.0.0.0.0.0.0.0.1 12-13|0.0.0.0.0.0.0.0.1.0 11-12|0.0.0.0.0.0.0.0 8-9|0.0.0.0.0.0.0.0.0.0 7-8|0.0.0.0.0.0.0.0.0 6-7|0.0.0.0.0.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:45.145
# ::node	0	upset-01	33-34
# ::node	0.0	nothing	31-32
# ::node	0.0.0	promise-01	28-29
# ::node	0.0.0.0	temporal-quantity	23-24
# ::node	0.0.0.0.0	elect-01	24-25
# ::node	0.0.0.0.0.0	time	20-21
# ::node	0.0.0.0.0.0.0	democracy	16-17
# ::node	0.0.0.0.0.0.0.0	emerge-02	11-12
# ::node	0.0.0.0.0.0.0.0.0	dictatorship	7-8
# ::node	0.0.0.0.0.0.0.0.0.0	behind	8-9
# ::node	0.0.0.0.0.0.0.0.0.1	military	6-7
# ::node	0.0.0.0.0.0.0.0.1	week	13-14
# ::node	0.0.0.0.0.0.0.0.1.0	this	12-13
# ::node	0.0.0.0.0.0.0.1	full	15-16
# ::node	0.0.0.0.0.1	president	26-27
# ::node	0.0.0.0.0.1.0	have-org-role-91	26-27
# ::node	0.0.0.0.1	18	22-23
# ::node	0.0.0.0.2	year	23-24
# ::node	0.1	status	36-37
# ::root	0	upset-01
# ::edge	democracy	mod	full	0.0.0.0.0.0.0	0.0.0.0.0.0.0.1	
# ::edge	democracy	time	time	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	dictatorship	location	behind	0.0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0.0	
# ::edge	dictatorship	mod	emerge-02	0.0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	dictatorship	mod	military	0.0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0.1	
# ::edge	elect-01	ARG0	time	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	elect-01	ARG1	president	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	elect-01	ARG2	temporal-quantity	0.0.0.0.0	0.0.0.0	
# ::edge	emerge-02	ARG2	democracy	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	emerge-02	time	week	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.1	
# ::edge	have-org-role-91	ARG2	president	0.0.0.0.0.1.0	0.0.0.0.0.1	
# ::edge	promise-01	ARG0	temporal-quantity	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	nothing	0.0.0	0.0	
# ::edge	temporal-quantity	quant	18	0.0.0.0	0.0.0.0.1	
# ::edge	temporal-quantity	unit	year	0.0.0.0	0.0.0.0.2	
# ::edge	upset-01	ARG0	nothing	0	0.0	
# ::edge	upset-01	ARG1	status	0	0.1	
# ::edge	week	mod	this	0.0.0.0.0.0.0.0.1	0.0.0.0.0.0.0.0.1.0	
(u / upset-01 
      :ARG0 (n / nothing 
            :ARG1-of (p / promise-01 
                  :ARG0 (t / temporal-quantity 
                        :ARG2-of (e / elect-01 
                              :ARG0 (t2 / time 
                                    :time-of (d / democracy 
                                          :ARG2-of (e2 / emerge-02 
                                                :mod-of (d2 / dictatorship 
                                                      :location (b / behind) 
                                                      :mod (m / military)) 
                                                :time (w / week 
                                                      :mod (t3 / this))) 
                                          :mod (f / full))) 
                              :ARG1 (p2 / president 
                                    :ARG2-of (h / have-org-role-91))) 
                        :quant 18 
                        :unit (y / year)))) 
      :ARG1 (s / status))

# ::snt the soviet minister was shattered by mr genschers account of the nightmare conditions in which the refugees were living in prague and promised to do all he could to help
# ::tok the soviet minister was shattered by mr genschers account of the nightmare conditions in which the refugees were living in prague and promised to do all he could to help
# ::alignments 29-30|0.0.0 27-28|0 26-27|0.0 25-26|0.0.0.0 22-23|0.0.1 21-22|0.0.1.1 18-19|0.0.1.1.0 16-17|0.0.1.1.0.0 12-13|0.0.1.1.0.1 11-12|0.0.1.1.0.1.0 8-9|0.0.1.1.1.0 4-5|0.0.1.1.1 2-3|0.0.1.0.0+0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:45.385
# ::node	0	possible	27-28
# ::node	0.0	he	26-27
# ::node	0.0.0	help-01	29-30
# ::node	0.0.0.0	all	25-26
# ::node	0.0.1	promise-01	22-23
# ::node	0.0.1.0	have-org-role-91	2-3
# ::node	0.0.1.0.0	minister	2-3
# ::node	0.0.1.1	and	21-22
# ::node	0.0.1.1.0	live-01	18-19
# ::node	0.0.1.1.0.0	refugee	16-17
# ::node	0.0.1.1.0.1	condition	12-13
# ::node	0.0.1.1.0.1.0	nightmare	11-12
# ::node	0.0.1.1.1	shatter-01	4-5
# ::node	0.0.1.1.1.0	account	8-9
# ::root	0	possible
# ::edge	and	op1	shatter-01	0.0.1.1	0.0.1.1.1	
# ::edge	and	op2	promise-01	0.0.1.1	0.0.1	
# ::edge	condition	mod	nightmare	0.0.1.1.0.1	0.0.1.1.0.1.0	
# ::edge	have-org-role-91	ARG2	minister	0.0.1.0	0.0.1.0.0	
# ::edge	help-01	ARG0	he	0.0.0	0.0	
# ::edge	help-01	ARG1	all	0.0.0	0.0.0.0	
# ::edge	live-01	ARG0	refugee	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	live-01	ARG1	condition	0.0.1.1.0	0.0.1.1.0.1	
# ::edge	live-01	ARG2	and	0.0.1.1.0	0.0.1.1	
# ::edge	possible	domain	he	0	0.0	
# ::edge	promise-01	ARG0	he	0.0.1	0.0	
# ::edge	promise-01	ARG1	have-org-role-91	0.0.1	0.0.1.0	
# ::edge	shatter-01	ARG2	account	0.0.1.1.1	0.0.1.1.1.0	
(p / possible 
      :domain (h2 / he 
            :ARG0-of (h / help-01 
                  :ARG1 (a / all)) 
            :ARG0-of (p2 / promise-01 
                  :ARG1 (h3 / have-org-role-91 
                        :ARG2 (m / minister)) 
                  :op-of (a2 / and 
                        :ARG2-of (l / live-01 
                              :ARG0 (r / refugee) 
                              :ARG1 (c / condition 
                                    :mod (n / nightmare))) 
                        :op1 (s / shatter-01 
                              :ARG2 (a3 / account))))))

# ::snt if europe is going to be serious the first thing it has to do before making new communiques and new declarations is to carry out what its already promised
# ::tok if europe is going to be serious the first thing it has to do before making new communiques and new declarations is to carry out what its already promised
# ::alignments 28-29|0.0 27-28|0.0.4 19-20|0.0.1 18-19|0 16-17|0.1 14-15|0.0.0.0 10-11|0.0.0 9-10|0.2 6-7|0.0.3 1-2|0.0.2.0.0+0.0.2.0+0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:45.474
# ::node	0	and	18-19
# ::node	0.0	promise-01	28-29
# ::node	0.0.0	it	10-11
# ::node	0.0.0.0	before	14-15
# ::node	0.0.1	new	19-20
# ::node	0.0.2	continent	1-2
# ::node	0.0.2.0	name	1-2
# ::node	0.0.2.0.0	"Europe"	1-2
# ::node	0.0.3	serious	6-7
# ::node	0.0.4	already	27-28
# ::node	0.1	new	16-17
# ::node	0.2	thing	9-10
# ::root	0	and
# ::edge	and	mod	new	0	0.1	
# ::edge	and	op1	thing	0	0.2	
# ::edge	before	domain	it	0.0.0.0	0.0.0	
# ::edge	continent	name	name	0.0.2	0.0.2.0	
# ::edge	continent	op1	promise-01	0.0.2	0.0	
# ::edge	name	op1	"Europe"	0.0.2.0	0.0.2.0.0	
# ::edge	promise-01	ARG0	it	0.0	0.0.0	
# ::edge	promise-01	ARG1	new	0.0	0.0.1	
# ::edge	promise-01	ARG2	and	0.0	0	
# ::edge	promise-01	time	already	0.0	0.0.4	
# ::edge	serious	op1	promise-01	0.0.3	0.0	
(a2 / and 
      :ARG2-of (p / promise-01 
            :ARG0 (i / it 
                  :domain-of (b / before)) 
            :ARG1 (n / new) 
            :op-of (c / continent 
                  :name (n3 / name 
                        :op1 "Europe")) 
            :op-of (s / serious) 
            :time (a / already)) 
      :mod (n2 / new) 
      :op1 (t / thing))

# ::snt arthur morris chairman of durbans civic action league promised yesterday that he would have teams of scouts on the lookout ready to complain all the time at the sight of any nonwhite who might presume to encroach on the sacred surf
# ::tok arthur morris chairman of durbans civic action league promised yesterday that he would have teams of scouts on the lookout ready to complain all the time at the sight of any nonwhite who might presume to encroach on the sacred surf
# ::alignments 39-40|0.0.0 34-35|0 30-31|0.0.1.2.0.0.0 28-29|0.0 25-26|0.0.1.1 23-24|0.0.1.1.0 22-23|0.0.1 20-21|0.0.1.3 14-15|0.0.1.3.0 11-12|0.0.1.0 9-10|0.0.1.2.0.0.1 8-9|0.0.1.2.0.0 7-8|0.0.1.2.0 6-7|0.0.1.2.0.1 2-3|0.0.1.2.1+0.0.1.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:45.886
# ::node	0	presume-01	34-35
# ::node	0.0	sight-01	28-29
# ::node	0.0.0	sacred	39-40
# ::node	0.0.1	complain-01	22-23
# ::node	0.0.1.0	he	11-12
# ::node	0.0.1.1	time	25-26
# ::node	0.0.1.1.0	all	23-24
# ::node	0.0.1.2	have-org-role-91	2-3
# ::node	0.0.1.2.0	league	7-8
# ::node	0.0.1.2.0.0	promise-01	8-9
# ::node	0.0.1.2.0.0.0	any	30-31
# ::node	0.0.1.2.0.0.1	yesterday	9-10
# ::node	0.0.1.2.0.1	action	6-7
# ::node	0.0.1.2.1	chairman	2-3
# ::node	0.0.1.3	ready-01	20-21
# ::node	0.0.1.3.0	team	14-15
# ::root	0	presume-01
# ::edge	complain-01	ARG0	he	0.0.1	0.0.1.0	
# ::edge	complain-01	ARG1	time	0.0.1	0.0.1.1	
# ::edge	complain-01	ARG2	have-org-role-91	0.0.1	0.0.1.2	
# ::edge	complain-01	ARG4	sight-01	0.0.1	0.0	
# ::edge	have-org-role-91	ARG1	league	0.0.1.2	0.0.1.2.0	
# ::edge	have-org-role-91	ARG2	chairman	0.0.1.2	0.0.1.2.1	
# ::edge	league	mod	action	0.0.1.2.0	0.0.1.2.0.1	
# ::edge	presume-01	ARG1	sight-01	0	0.0	
# ::edge	promise-01	ARG0	league	0.0.1.2.0.0	0.0.1.2.0	
# ::edge	promise-01	ARG1	any	0.0.1.2.0.0	0.0.1.2.0.0.0	
# ::edge	promise-01	time	yesterday	0.0.1.2.0.0	0.0.1.2.0.0.1	
# ::edge	ready-01	ARG1	team	0.0.1.3	0.0.1.3.0	
# ::edge	ready-01	ARG2	complain-01	0.0.1.3	0.0.1	
# ::edge	sight-01	ARG1	sacred	0.0	0.0.0	
# ::edge	time	quant	all	0.0.1.1	0.0.1.1.0	
(p / presume-01 
      :ARG1 (s2 / sight-01 
            :ARG1 (s / sacred) 
            :ARG4-of (c / complain-01 
                  :ARG0 (h / he) 
                  :ARG1 (t / time 
                        :quant (a2 / all)) 
                  :ARG2 (h2 / have-org-role-91 
                        :ARG1 (l / league 
                              :ARG0-of (p2 / promise-01 
                                    :ARG1 (a / any) 
                                    :time (y / yesterday)) 
                              :mod (a3 / action)) 
                        :ARG2 (c2 / chairman)) 
                  :ARG2-of (r / ready-01 
                        :ARG1 (t2 / team)))))

# ::snt it signed a standstill agreement under which it promised not to increase its holding for three years
# ::tok it signed a standstill agreement under which it promised not to increase its holding for three years
# ::alignments 16-17|0.1.0.0.0+0.1.0.0 15-16|0.1.0 13-14|0.1.1.0.1 11-12|0.1.1.0 8-9|0.1.1 7-8|0.1.1.0.0 4-5|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:45.977
# ::node	0	sign-02	1-2
# ::node	0.0	it	0-1
# ::node	0.1	agree-01	4-5
# ::node	0.1.0	3	15-16
# ::node	0.1.0.0	temporal-quantity	16-17
# ::node	0.1.0.0.0	year	16-17
# ::node	0.1.1	promise-01	8-9
# ::node	0.1.1.0	increase-01	11-12
# ::node	0.1.1.0.0	it	7-8
# ::node	0.1.1.0.1	hold-01	13-14
# ::root	0	sign-02
# ::edge	agree-01	ARG1	3	0.1	0.1.0	
# ::edge	increase-01	ARG0	it	0.1.1.0	0.1.1.0.0	
# ::edge	increase-01	ARG1	hold-01	0.1.1.0	0.1.1.0.1	
# ::edge	promise-01	ARG1	agree-01	0.1.1	0.1	
# ::edge	promise-01	ARG2	increase-01	0.1.1	0.1.1.0	
# ::edge	sign-02	ARG0	it	0	0.0	
# ::edge	sign-02	ARG1	agree-01	0	0.1	
# ::edge	temporal-quantity	quant	3	0.1.0.0	0.1.0	
# ::edge	temporal-quantity	unit	year	0.1.0.0	0.1.0.0.0	
(s / sign-02 
      :ARG0 (i3 / it) 
      :ARG1 (a / agree-01 
            :ARG1 (3 / 3 
                  :quant-of (t / temporal-quantity 
                        :unit (y / year))) 
            :ARG1-of (p / promise-01 
                  :ARG2 (i / increase-01 
                        :ARG0 (i2 / it) 
                        :ARG1 (h / hold-01)))))

# ::snt bulgarians were promised a multiparty system and free elections on monday
# ::tok bulgarians were promised a multiparty system and free elections on monday
# ::alignments 8-9|0.0.0 7-8|0.0.0.0 6-7|0.0 5-6|0.1 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:46.004
# ::node	0	promise-01	2-3
# ::node	0.0	and	6-7
# ::node	0.0.0	elect-01	8-9
# ::node	0.0.0.0	free-41	7-8
# ::node	0.1	system	5-6
# ::root	0	promise-01
# ::edge	and	op1	elect-01	0.0	0.0.0	
# ::edge	free-41	ARG1	elect-01	0.0.0.0	0.0.0	
# ::edge	promise-01	ARG1	and	0	0.0	
# ::edge	promise-01	ARG2	system	0	0.1	
(p / promise-01 
      :ARG1 (a / and 
            :op1 (e / elect-01 
                  :ARG1-of (f / free-41))) 
      :ARG2 (s / system))

# ::snt james sharp 48 a doctor who charged patients 700 for an experimental aids treatment which he promised could enable them to live indefinitely was ordered to be struck off after being found guilty of serious professional misconduct
# ::tok james sharp 48 a doctor who charged patients 700 for an experimental aids treatment which he promised could enable them to live indefinitely was ordered to be struck off after being found guilty of serious professional misconduct
# ::alignments 35-36|0.1.2.0.0.1.0 34-35|0.1.2.0.0.1 32-33|0.1.2.0.0 31-32|0.1.2.0 29-30|0.1.2 28-29|0.1.1 27-28|0.1 24-25|0 22-23|0.1.0.0.0.0.0 21-22|0.1.0.0.0.0 18-19|0.1.0.0.0 17-18|0.1.0.0.0.1 16-17|0.1.0.0.1 15-16|0.1.0.0 13-14|0.1.0.0.1.0 12-13|0.1.0.0.1.0.0 11-12|0.1.0.0.1.0.0.0 8-9|0.1.2.0.0.0 7-8|0.1.0.2+0.1.0 6-7|0.1.0.1 4-5|0.1.0.1.0 2-3|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:46.294
# ::node	0	order-01	24-25
# ::node	0.0	48	2-3
# ::node	0.0.0	sharp	1-2
# ::node	0.1	strike-01	27-28
# ::node	0.1.0	have-rel-role-91	7-8
# ::node	0.1.0.0	he	15-16
# ::node	0.1.0.0.0	enable-01	18-19
# ::node	0.1.0.0.0.0	live-01	21-22
# ::node	0.1.0.0.0.0.0	indefinite	22-23
# ::node	0.1.0.0.0.1	possible	17-18
# ::node	0.1.0.0.1	promise-01	16-17
# ::node	0.1.0.0.1.0	treat-03	13-14
# ::node	0.1.0.0.1.0.0	aid-01	12-13
# ::node	0.1.0.0.1.0.0.0	experiment-01	11-12
# ::node	0.1.0.1	charge-05	6-7
# ::node	0.1.0.1.0	doctor	4-5
# ::node	0.1.0.2	patient	7-8
# ::node	0.1.1	off	28-29
# ::node	0.1.2	after	29-30
# ::node	0.1.2.0	find-01	31-32
# ::node	0.1.2.0.0	guilty-41	32-33
# ::node	0.1.2.0.0.0	700	8-9
# ::node	0.1.2.0.0.1	serious	34-35
# ::node	0.1.2.0.0.1.0	professional	35-36
# ::root	0	order-01
# ::edge	after	op1	find-01	0.1.2	0.1.2.0	
# ::edge	charge-05	ARG0	doctor	0.1.0.1	0.1.0.1.0	
# ::edge	charge-05	ARG1	have-rel-role-91	0.1.0.1	0.1.0	
# ::edge	enable-01	ARG0	he	0.1.0.0.0	0.1.0.0	
# ::edge	enable-01	ARG1	live-01	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	experiment-01	ARG1	aid-01	0.1.0.0.1.0.0.0	0.1.0.0.1.0.0	
# ::edge	find-01	ARG1	guilty-41	0.1.2.0	0.1.2.0.0	
# ::edge	guilty-41	ARG1	700	0.1.2.0.0	0.1.2.0.0.0	
# ::edge	guilty-41	ARG2	serious	0.1.2.0.0	0.1.2.0.0.1	
# ::edge	have-rel-role-91	ARG1	he	0.1.0	0.1.0.0	
# ::edge	have-rel-role-91	ARG2	patient	0.1.0	0.1.0.2	
# ::edge	live-01	duration	indefinite	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	order-01	ARG1	48	0	0.0	
# ::edge	order-01	ARG2	strike-01	0	0.1	
# ::edge	possible	domain	enable-01	0.1.0.0.0.1	0.1.0.0.0	
# ::edge	professional	mod	serious	0.1.2.0.0.1.0	0.1.2.0.0.1	
# ::edge	promise-01	ARG0	he	0.1.0.0.1	0.1.0.0	
# ::edge	promise-01	ARG1	treat-03	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	sharp	quant	48	0.0.0	0.0	
# ::edge	strike-01	ARG1	have-rel-role-91	0.1	0.1.0	
# ::edge	strike-01	direction	off	0.1	0.1.1	
# ::edge	strike-01	time	after	0.1	0.1.2	
# ::edge	treat-03	ARG1	aid-01	0.1.0.0.1.0	0.1.0.0.1.0.0	
(o2 / order-01 
      :ARG1 (4 / 48 
            :quant-of (s3 / sharp)) 
      :ARG2 (s2 / strike-01 
            :ARG1 (h2 / have-rel-role-91 
                  :ARG1 (h / he 
                        :ARG0-of (e / enable-01 
                              :ARG1 (l / live-01 
                                    :duration (i / indefinite)) 
                              :domain-of (p2 / possible)) 
                        :ARG0-of (p3 / promise-01 
                              :ARG1 (t / treat-03 
                                    :ARG1 (a2 / aid-01 
                                          :ARG1-of (e2 / experiment-01))))) 
                  :ARG1-of (c / charge-05 
                        :ARG0 (d / doctor)) 
                  :ARG2 (p4 / patient)) 
            :direction (o / off) 
            :time (a / after 
                  :op1 (f / find-01 
                        :ARG1 (g / guilty-41 
                              :ARG1 700 
                              :ARG2 (s / serious 
                                    :mod-of (p / professional)))))))

# ::snt sir james goldsmiths long battle for control of bat industries suffered another unexpected setback over the weekend when the chairman of axa midi the french insurance company that has promised to buy bats farmers insurance group if the bid is successful was admitted to hospital suddenly for heart surgery
# ::tok sir james goldsmiths long battle for control of bat industries suffered another unexpected setback over the weekend when the chairman of axa midi the french insurance company that has promised to buy bats farmers insurance group if the bid is successful was admitted to hospital suddenly for heart surgery
# ::alignments 48-49|0.0.0.1.2.0.0.2 47-48|0.0.0.1.2.0.0.2.0 45-46|0.0.0.1.2.0.0.3 44-45|0.0.0.1.2.0.0.1 42-43|0.0.0.1.2.0.0 40-41|0.0 38-39|0 35-36|0.0.0 34-35|0.0.0.0 33-34|0.0.0.1.0.0+0.0.0.1.0 31-32|0.0.0.1 29-30|0.0.0.1.2 26-27|0.0.0.1.2.0 25-26|0.0.0.1.2.0.0.0.1 24-25|0.0.0.1.2.0.2.0.0+0.0.0.1.2.0.2.0+0.0.0.1.2.0.2 19-20|0.0.0.1.2.0.1.0+0.0.0.1.2.0.1 16-17|0.0.0.1.2.0.0.0.0.0.0.0 12-13|0.0.0.1.1.0+0.0.0.1.1 11-12|0.0.0.0.0 10-11|0.0.0.1.2.0.0.0.0.0.0 9-10|0.0.0.1.2.0.0.0.0.0 6-7|0.0.0.1.2.0.0.0.0 4-5|0.0.0.1.2.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:46.927
# ::node	0	bid-01	38-39
# ::node	0.0	succeed-01	40-41
# ::node	0.0.0	group	35-36
# ::node	0.0.0.0	insure-02	34-35
# ::node	0.0.0.0.0	another	11-12
# ::node	0.0.0.1	buy-01	31-32
# ::node	0.0.0.1.0	person	33-34
# ::node	0.0.0.1.0.0	farm-01	33-34
# ::node	0.0.0.1.1	expect-01	12-13
# ::node	0.0.0.1.1.0	-	12-13
# ::node	0.0.0.1.2	promise-01	29-30
# ::node	0.0.0.1.2.0	company	26-27
# ::node	0.0.0.1.2.0.0	admit-01	42-43
# ::node	0.0.0.1.2.0.0.0	battle-01	4-5
# ::node	0.0.0.1.2.0.0.0.0	control-01	6-7
# ::node	0.0.0.1.2.0.0.0.0.0	industry	9-10
# ::node	0.0.0.1.2.0.0.0.0.0.0	suffer-01	10-11
# ::node	0.0.0.1.2.0.0.0.0.0.0.0	weekend	16-17
# ::node	0.0.0.1.2.0.0.0.1	insure-02	25-26
# ::node	0.0.0.1.2.0.0.1	hospital	44-45
# ::node	0.0.0.1.2.0.0.2	surgery	48-49
# ::node	0.0.0.1.2.0.0.2.0	heart	47-48
# ::node	0.0.0.1.2.0.0.3	sudden	45-46
# ::node	0.0.0.1.2.0.1	have-org-role-91	19-20
# ::node	0.0.0.1.2.0.1.0	chairman	19-20
# ::node	0.0.0.1.2.0.2	country	24-25
# ::node	0.0.0.1.2.0.2.0	name	24-25
# ::node	0.0.0.1.2.0.2.0.0	"France"	24-25
# ::root	0	bid-01
(b / bid-01 
      :ARG0-of (s3 / succeed-01 
            :ARG1 (g / group 
                  :ARG0-of (i / insure-02 
                        :ARG1 (a2 / another)) 
                  :ARG1-of (b2 / buy-01 
                        :ARG0 (p / person 
                              :ARG0-of (f / farm-01)) 
                        :ARG1-of (e / expect-01 
                              :polarity -) 
                        :ARG1-of (p2 / promise-01 
                              :ARG0 (c / company 
                                    :ARG1-of (a / admit-01 
                                          :ARG0 (b3 / battle-01 
                                                :ARG1 (c4 / control-01 
                                                      :ARG1 (i3 / industry 
                                                            :ARG1-of (s4 / suffer-01 
                                                                  :time (w / weekend)))) 
                                                :ARG1-of (i2 / insure-02)) 
                                          :ARG2 (h2 / hospital) 
                                          :ARG3 (s / surgery 
                                                :mod (h / heart)) 
                                          :frequency (s2 / sudden)) 
                                    :ARG1-of (h3 / have-org-role-91 
                                          :ARG2 (c3 / chairman)) 
                                    :mod (c2 / country 
                                          :name (n / name 
                                                :op1 "France"))))))))

# ::snt basque terrorists who have promised not to shed more blood are being released from spanish prisons writes tim mcgirk
# ::tok basque terrorists who have promised not to shed more blood are being released from spanish prisons writes tim mcgirk
# ::alignments 16-17|0.1.0.0.0.0 15-16|0.1.0.0.0 14-15|0.1.0.0.0.1.0.0+0.1.0.0.0.1.0+0.1.0.0.0.1 12-13|0.1.0.0 9-10|0.0 7-8|0 4-5|0.1 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:47.090
# ::node	0	shed-01	7-8
# ::node	0.0	blood	9-10
# ::node	0.1	promise-01	4-5
# ::node	0.1.0	terrorist	1-2
# ::node	0.1.0.0	release-01	12-13
# ::node	0.1.0.0.0	prison	15-16
# ::node	0.1.0.0.0.0	write-01	16-17
# ::node	0.1.0.0.0.1	language	14-15
# ::node	0.1.0.0.0.1.0	name	14-15
# ::node	0.1.0.0.0.1.0.0	"Spanish"	14-15
# ::root	0	shed-01
# ::edge	language	name	name	0.1.0.0.0.1	0.1.0.0.0.1.0	
# ::edge	name	op1	"Spanish"	0.1.0.0.0.1.0	0.1.0.0.0.1.0.0	
# ::edge	prison	mod	language	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	promise-01	ARG0	terrorist	0.1	0.1.0	
# ::edge	promise-01	ARG2	shed-01	0.1	0	
# ::edge	release-01	ARG0	prison	0.1.0.0	0.1.0.0.0	
# ::edge	release-01	ARG1	terrorist	0.1.0.0	0.1.0	
# ::edge	shed-01	ARG1	blood	0	0.0	
# ::edge	write-01	ARG1	prison	0.1.0.0.0.0	0.1.0.0.0	
(s / shed-01 
      :ARG1 (b / blood) 
      :ARG2-of (p2 / promise-01 
            :ARG0 (t / terrorist 
                  :ARG1-of (r / release-01 
                        :ARG0 (p / prison 
                              :ARG1-of (w / write-01) 
                              :mod (l / language 
                                    :name (n / name 
                                          :op1 "Spanish")))))))

# ::snt under a giant makeshift marquee tadashi kume the president of honda promised that the japanese company would become a good citizen of europe buying 80 per cent of components for its swindonbuilt cars from european suppliers
# ::tok under a giant makeshift marquee tadashi kume the president of honda promised that the japanese company would become a good citizen of europe buying 80 per cent of components for its swindonbuilt cars from european suppliers
# ::alignments 35-36|0.0.0 34-35|0.0.0.1.0.0+0.0.0.1.0+0.0.0.1 32-33|0.0 28-29|0 26-27|0.0.0.0.1+0.0.0.0 24-25|0.0.0.0.0.1.0.1.0.0.0 23-24|0.0.0.0.0 22-23|0.0.0.0.0.0.0.0+0.0.0.0.0.0.0+0.0.0.0.0.0 20-21|0.0.0.0.0.1 19-20|0.0.0.0.0.1.1 17-18|0.0.0.0.0.1.0 15-16|0.0.0.0.0.1.0.0 11-12|0.0.0.0.0.1.0.1 8-9|0.0.0.0.0.1.0.1.0+0.0.0.0.0.1.0.1.0.0 2-3|0.0.0.0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:47.492
# ::node	0	component	28-29
# ::node	0.0	car	32-33
# ::node	0.0.0	supply-01	35-36
# ::node	0.0.0.0	monetary-quantity	26-27
# ::node	0.0.0.0.0	buy-01	23-24
# ::node	0.0.0.0.0.0	continent	22-23
# ::node	0.0.0.0.0.0.0	name	22-23
# ::node	0.0.0.0.0.0.0.0	"Europe"	22-23
# ::node	0.0.0.0.0.1	citizen	20-21
# ::node	0.0.0.0.0.1.0	become-01	17-18
# ::node	0.0.0.0.0.1.0.0	company	15-16
# ::node	0.0.0.0.0.1.0.1	promise-01	11-12
# ::node	0.0.0.0.0.1.0.1.0	president	8-9
# ::node	0.0.0.0.0.1.0.1.0.0	have-org-role-91	8-9
# ::node	0.0.0.0.0.1.0.1.0.0.0	80	24-25
# ::node	0.0.0.0.0.1.1	good	19-20
# ::node	0.0.0.0.0.2	giant	2-3
# ::node	0.0.0.0.1	cent	26-27
# ::node	0.0.0.1	continent	34-35
# ::node	0.0.0.1.0	name	34-35
# ::node	0.0.0.1.0.0	"Europe"	34-35
# ::root	0	component
# ::edge	become-01	ARG1	company	0.0.0.0.0.1.0	0.0.0.0.0.1.0.0	
# ::edge	become-01	ARG2	citizen	0.0.0.0.0.1.0	0.0.0.0.0.1	
# ::edge	buy-01	ARG0	continent	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	buy-01	ARG1	citizen	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	buy-01	location	monetary-quantity	0.0.0.0.0	0.0.0.0	
# ::edge	citizen	mod	good	0.0.0.0.0.1	0.0.0.0.0.1.1	
# ::edge	component	location	car	0	0.0	
# ::edge	continent	name	name	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	continent	name	name	0.0.0.1	0.0.0.1.0	
# ::edge	giant	op1	buy-01	0.0.0.0.0.2	0.0.0.0.0	
# ::edge	have-org-role-91	ARG0	80	0.0.0.0.0.1.0.1.0.0	0.0.0.0.0.1.0.1.0.0.0	
# ::edge	have-org-role-91	ARG2	president	0.0.0.0.0.1.0.1.0.0	0.0.0.0.0.1.0.1.0	
# ::edge	monetary-quantity	unit	cent	0.0.0.0	0.0.0.0.1	
# ::edge	name	op1	"Europe"	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	name	op1	"Europe"	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	promise-01	ARG0	president	0.0.0.0.0.1.0.1	0.0.0.0.0.1.0.1.0	
# ::edge	promise-01	ARG1	become-01	0.0.0.0.0.1.0.1	0.0.0.0.0.1.0	
# ::edge	supply-01	ARG0	car	0.0.0	0.0	
# ::edge	supply-01	ARG1	monetary-quantity	0.0.0	0.0.0.0	
# ::edge	supply-01	ARG2	continent	0.0.0	0.0.0.1	
(c3 / component 
      :location (c2 / car 
            :ARG0-of (s / supply-01 
                  :ARG1 (m / monetary-quantity 
                        :location-of (b / buy-01 
                              :ARG0 (c5 / continent 
                                    :name (n2 / name 
                                          :op1 "Europe")) 
                              :ARG1 (c6 / citizen 
                                    :ARG2-of (b2 / become-01 
                                          :ARG1 (c7 / company) 
                                          :ARG1-of (p / promise-01 
                                                :ARG0 (p2 / president 
                                                      :ARG2-of (h / have-org-role-91 
                                                            :ARG0 80)))) 
                                    :mod (g / good)) 
                              :op-of (g2 / giant)) 
                        :unit (c4 / cent)) 
                  :ARG2 (c / continent 
                        :name (n / name 
                              :op1 "Europe")))))

# ::snt violation of the duty not to interfere with a persons promising will frustrate his right to promise and the interest on which it is base either by preventing the person from exercising his rights or by perverting the considerations on which he decides whether to promise or not, the fact that such interferences with the right are infrequent is reflected by the fact that the right to promise is rarely invoked in ordinary practical discourse, to conclude the power to promise and the right to promise are distinct notions
# ::tok violation of the duty not to interfere with a persons promising will frustrate his right to promise and the interest on which it is base either by preventing the person from exercising his rights or by perverting the considerations on which he decides whether to promise or not , the fact that such interferences with the right are infrequent is reflected by the fact that the right to promise is rarely invoked in ordinary practical discourse , to conclude the power to promise and the right to promise are distinct notions
# ::alignments 90-91|0.0.2 89-90|0.0.2.0 87-88|0.0.0 83-84|0.0 82-83|0.2 80-81|0.1 78-79|0 74-75|0.0.0.0 73-74|0.2.0 70-71|0.0.1.1.1.1 68-69|0.0.1.0 63-64|0.0.1.1.0 52-53|0.0.1.2.0.0.0.0.0.0.0.0.2 50-51|0.0.1.0.0 46-47|0.0.1.1.1.0 45-46|0.0.1.1.1 42-43|0.0.1.1 41-42|0.0.1 38-39|0.0.1.3 34-35|0.0.1.2.0.0.0.0.0.0.0.0.1 33-34|0.0.1.2.0.0.0.0.0.0.0.0.0 31-32|0.0.1.2.0.0.0.0.0.0.0.0 29-30|0.0.1.2.0.0.0.0.0.0.0 27-28|0.0.1.2.0.0.0.0.0.0 25-26|0.0.1.1.1.0.0 24-25|0.0.1.2.0.0.0.0.0 22-23|0.0.1.2.0.0.0.0 19-20|0.0.1.2.0.0.0 17-18|0.0.1.2.0.0 16-17|0.0.1.2 12-13|0.0.1.2.0 10-11|0.0.1.2.0.1 9-10|0.0.1.2.0.1.0 6-7|0.0.1.2.0.1.0.0 3-4|0.0.1.2.0.1.0.0.0 0-1|0.0.1.2.0.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:49.057
# ::node	0	conclude-02	78-79
# ::node	0.0	and	83-84
# ::node	0.0.0	promise-01	87-88
# ::node	0.0.0.0	practical	74-75
# ::node	0.0.1	he	41-42
# ::node	0.0.1.0	promise-01	68-69
# ::node	0.0.1.0.0	fact	50-51
# ::node	0.0.1.1	decide-01	42-43
# ::node	0.0.1.1.0	fact	63-64
# ::node	0.0.1.1.1	promise-01	45-46
# ::node	0.0.1.1.1.0	or	46-47
# ::node	0.0.1.1.1.0.0	either	25-26
# ::node	0.0.1.1.1.1	rare	70-71
# ::node	0.0.1.2	promise-01	16-17
# ::node	0.0.1.2.0	frustrate-01	12-13
# ::node	0.0.1.2.0.0	and	17-18
# ::node	0.0.1.2.0.0.0	interest-01	19-20
# ::node	0.0.1.2.0.0.0.0	it	22-23
# ::node	0.0.1.2.0.0.0.0.0	base	24-25
# ::node	0.0.1.2.0.0.0.0.0.0	prevent-01	27-28
# ::node	0.0.1.2.0.0.0.0.0.0.0	person	29-30
# ::node	0.0.1.2.0.0.0.0.0.0.0.0	exercise-02	31-32
# ::node	0.0.1.2.0.0.0.0.0.0.0.0.0	right	33-34
# ::node	0.0.1.2.0.0.0.0.0.0.0.0.1	or	34-35
# ::node	0.0.1.2.0.0.0.0.0.0.0.0.2	such	52-53
# ::node	0.0.1.2.0.1	promise-01	10-11
# ::node	0.0.1.2.0.1.0	person	9-10
# ::node	0.0.1.2.0.1.0.0	interfere-01	6-7
# ::node	0.0.1.2.0.1.0.0.0	duty	3-4
# ::node	0.0.1.2.0.1.0.0.0.0	violate-01	0-1
# ::node	0.0.1.3	consider-01	38-39
# ::node	0.0.2	notion	90-91
# ::node	0.0.2.0	distinct	89-90
# ::node	0.1	power	80-81
# ::node	0.2	promise-01	82-83
# ::node	0.2.0	ordinary	73-74
# ::root	0	conclude-02
# ::edge	and	op1	he	0.0	0.0.1	
# ::edge	and	op1	interest-01	0.0.1.2.0.0	0.0.1.2.0.0.0	
# ::edge	and	op2	notion	0.0	0.0.2	
# ::edge	base	compared-to	prevent-01	0.0.1.2.0.0.0.0.0	0.0.1.2.0.0.0.0.0.0	
# ::edge	base	domain	it	0.0.1.2.0.0.0.0.0	0.0.1.2.0.0.0.0	
# ::edge	conclude-02	ARG0	and	0	0.0	
# ::edge	conclude-02	ARG1	power	0	0.1	
# ::edge	conclude-02	ARG2	promise-01	0	0.2	
# ::edge	consider-01	ARG1	he	0.0.1.3	0.0.1	
# ::edge	decide-01	ARG0	he	0.0.1.1	0.0.1	
# ::edge	decide-01	ARG1	fact	0.0.1.1	0.0.1.1.0	
# ::edge	decide-01	ARG2	promise-01	0.0.1.1	0.0.1.1.1	
# ::edge	exercise-02	ARG0	person	0.0.1.2.0.0.0.0.0.0.0.0	0.0.1.2.0.0.0.0.0.0.0	
# ::edge	exercise-02	ARG1	right	0.0.1.2.0.0.0.0.0.0.0.0	0.0.1.2.0.0.0.0.0.0.0.0.0	
# ::edge	frustrate-01	ARG1	and	0.0.1.2.0	0.0.1.2.0.0	
# ::edge	frustrate-01	ARG2	promise-01	0.0.1.2.0	0.0.1.2	
# ::edge	interest-01	ARG1	it	0.0.1.2.0.0.0	0.0.1.2.0.0.0.0	
# ::edge	interfere-01	ARG0	person	0.0.1.2.0.1.0.0	0.0.1.2.0.1.0	
# ::edge	interfere-01	ARG1	duty	0.0.1.2.0.1.0.0	0.0.1.2.0.1.0.0.0	
# ::edge	notion	mod	distinct	0.0.2	0.0.2.0	
# ::edge	or	mod	either	0.0.1.1.1.0	0.0.1.1.1.0.0	
# ::edge	or	op1	exercise-02	0.0.1.2.0.0.0.0.0.0.0.0.1	0.0.1.2.0.0.0.0.0.0.0.0	
# ::edge	prevent-01	ARG1	person	0.0.1.2.0.0.0.0.0.0	0.0.1.2.0.0.0.0.0.0.0	
# ::edge	promise-01	ARG0	he	0.0.1.0	0.0.1	
# ::edge	promise-01	ARG0	he	0.0.1.2	0.0.1	
# ::edge	promise-01	ARG0	or	0.0.1.1.1	0.0.1.1.1.0	
# ::edge	promise-01	ARG0	person	0.0.1.2.0.1	0.0.1.2.0.1.0	
# ::edge	promise-01	ARG1	fact	0.0.1.0	0.0.1.0.0	
# ::edge	promise-01	ARG1	frustrate-01	0.0.1.2.0.1	0.0.1.2.0	
# ::edge	promise-01	ARG1	ordinary	0.2	0.2.0	
# ::edge	promise-01	ARG1	rare	0.0.1.1.1	0.0.1.1.1.1	
# ::edge	promise-01	ARG2	and	0.0.0	0.0	
# ::edge	promise-01	mod	practical	0.0.0	0.0.0.0	
# ::edge	such	op1	exercise-02	0.0.1.2.0.0.0.0.0.0.0.0.2	0.0.1.2.0.0.0.0.0.0.0.0	
# ::edge	violate-01	ARG1	duty	0.0.1.2.0.1.0.0.0.0	0.0.1.2.0.1.0.0.0	
(c / conclude-02 
      :ARG0 (a / and 
            :ARG2-of (p / promise-01 
                  :mod (p4 / practical)) 
            :op1 (h / he 
                  :ARG0-of (p5 / promise-01 
                        :ARG1 (f2 / fact)) 
                  :ARG0-of (d2 / decide-01 
                        :ARG1 (f / fact) 
                        :ARG2 (p6 / promise-01 
                              :ARG0 (o2 / or 
                                    :mod (e2 / either)) 
                              :ARG1 (r / rare))) 
                  :ARG0-of (p9 / promise-01 
                        :ARG2-of (f3 / frustrate-01 
                              :ARG1 (a2 / and 
                                    :op1 (i2 / interest-01 
                                          :ARG1 (i / it 
                                                :domain-of (b / base 
                                                      :compared-to (p8 / prevent-01 
                                                            :ARG1 (p7 / person 
                                                                  :ARG0-of (e / exercise-02 
                                                                        :ARG1 (r2 / right) 
                                                                        :op-of (o3 / or) 
                                                                        :op-of (s / such)))))))) 
                              :ARG1-of (p10 / promise-01 
                                    :ARG0 (p11 / person 
                                          :ARG0-of (i3 / interfere-01 
                                                :ARG1 (d3 / duty 
                                                      :ARG1-of (v / violate-01))))))) 
                  :ARG1-of (c2 / consider-01)) 
            :op2 (n / notion 
                  :mod (d / distinct))) 
      :ARG1 (p3 / power) 
      :ARG2 (p2 / promise-01 
            :ARG1 (o / ordinary)))

# ::snt we used to have to promise to do things to get elected and now we have to promise not to
# ::tok we used to have to promise to do things to get elected and now we have to promise not to
# ::alignments 17-18|0.0.0.0 14-15|0.0.0.0.0 13-14|0.2 12-13|0 11-12|0.1 8-9|0.1.0 5-6|0.0.0.1 1-2|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:49.124
# ::node	0	and	12-13
# ::node	0.0	use-01	1-2
# ::node	0.0.0	we	0-1
# ::node	0.0.0.0	promise-01	17-18
# ::node	0.0.0.0.0	we	14-15
# ::node	0.0.0.1	promise-01	5-6
# ::node	0.1	elect-01	11-12
# ::node	0.1.0	thing	8-9
# ::node	0.2	now	13-14
# ::root	0	and
# ::edge	and	op1	elect-01	0	0.1	
# ::edge	and	time	now	0	0.2	
# ::edge	elect-01	ARG1	thing	0.1	0.1.0	
# ::edge	promise-01	ARG0	we	0.0.0.0	0.0.0	
# ::edge	promise-01	ARG0	we	0.0.0.1	0.0.0	
# ::edge	promise-01	ARG1	we	0.0.0.0	0.0.0.0.0	
# ::edge	use-01	ARG0	we	0.0	0.0.0	
# ::edge	use-01	ARG1	and	0.0	0	
(a / and 
      :ARG1-of (u / use-01 
            :ARG0 (w2 / we 
                  :ARG0-of (p / promise-01 
                        :ARG1 (w / we)) 
                  :ARG0-of (p2 / promise-01))) 
      :op1 (e / elect-01 
            :ARG1 (t / thing)) 
      :time (n / now))

# ::snt british rail had promised that if a new station were built in kidlington services to and from banbury would stop there giving the village a train every two hours
# ::tok british rail had promised that if a new station were built in kidlington services to and from banbury would stop there giving the village a train every two hours
# ::alignments 28-29|0.0.2.0.0.0.0.2+0.0.2.0.0.0.0 27-28|0.0.2.0.0.0.0.1 26-27|0.0.2.0.0.0.0.0 25-26|0.0.2.0.0.0 23-24|0.0.2.1 19-20|0.0.2 15-16|0 13-14|0.0.0 10-11|0.0 8-9|0.0.1 7-8|0.0.1.0 3-4|0.0.2.0.0 0-2|0.0.2.0.1.0+0.0.2.0.1.1+0.0.2.0.1+0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:49.487
# ::node	0	and	15-16
# ::node	0.0	build-01	10-11
# ::node	0.0.0	service	13-14
# ::node	0.0.1	station	8-9
# ::node	0.0.1.0	new	7-8
# ::node	0.0.2	stop-01	19-20
# ::node	0.0.2.0	organization	0-2
# ::node	0.0.2.0.0	promise-01	3-4
# ::node	0.0.2.0.0.0	train	25-26
# ::node	0.0.2.0.0.0.0	temporal-quantity	28-29
# ::node	0.0.2.0.0.0.0.0	every	26-27
# ::node	0.0.2.0.0.0.0.1	2	27-28
# ::node	0.0.2.0.0.0.0.2	hour	28-29
# ::node	0.0.2.0.1	name	0-2
# ::node	0.0.2.0.1.0	"rail"	0-2
# ::node	0.0.2.0.1.1	"british"	0-2
# ::node	0.0.2.1	village	23-24
# ::root	0	and
(a / and 
      :ARG2-of (b / build-01 
            :ARG0 (s2 / service) 
            :ARG1 (s3 / station 
                  :mod (n / new)) 
            :time-of (s / stop-01 
                  :ARG0 (o / organization 
                        :ARG0-of (p / promise-01 
                              :ARG1 (t2 / train 
                                    :consist-of (t / temporal-quantity 
                                          :mod (e / every) 
                                          :quant 2 
                                          :unit (h / hour)))) 
                        :name (n2 / name 
                              :op1 "rail" 
                              :op2 "british")) 
                  :ARG1 (v / village))))

# ::snt the coasters sang of young blood the everly brothers sang bye bye love and all i have to do is dream frankie lymon and the teenagers asked why do fools fall in love dion and the belmonts expounded on a teenager in love tab hunter suffered from young love the babyvoiced buddy holly and the crickets promised thatll be the day and most explicitly of all nat king cole plaintively rebuked the middleaged in the song too young
# ::tok the coasters sang of young blood the everly brothers sang bye bye love and all i have to do is dream frankie lymon and the teenagers asked why do fools fall in love dion and the belmonts expounded on a teenager in love tab hunter suffered from young love the babyvoiced buddy holly and the crickets promised thatll be the day and most explicitly of all nat king cole plaintively rebuked the middleaged in the song too young
# ::alignments 77-78|0.0.2.0.0 76-77|0.0.2.0.0.0 75-76|0.0.2.1.2.0 67-68|0.0.2.1.1.2 65-66|0.0.2.1.0 63-64|0.0.2.1.1.0.2 62-63|0.0.2.1.1.0.2.0 61-62|0.0.2.0.1 60-61|0.0.2.0.1.0 56-57|0.0.2.0 53-54|0.0.2 51-52|0.0.2.1.2.1+0.0.2.1.2 48-49|0.0.2.1 47-48|0.0.2.1.1.3 45-46|0.0.2.1.1 43-44|0.0.2.1.1.0.0 42-43|0.0.2.1.1.0 40-41|0.0.2.1.1.1 34-35|0.0.0.1.0 32-33|0.0.0.0 29-30|0.0.2.1.2.2 26-27|0.0 25-26|0.0.1 23-24|0 20-21|0.0.2.1.1.0.1 15-16|0.0.0 14-15|0.0.0.1.1.1.1 13-14|0.0.0.1.1 12-13|0.0.0.1 9-10|0.0.0.1.1.1 8-9|0.0.0.1.1.1.0+0.0.0.1.1.1.0.0 5-6|0.0.0.1.1.1.2 4-5|0.0.0.1.1.1.2.0 2-3|0.0.0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:51.156
# ::node	0	and	23-24
# ::node	0.0	ask-02	26-27
# ::node	0.0.0	i	15-16
# ::node	0.0.0.0	love-01	32-33
# ::node	0.0.0.1	love-01	12-13
# ::node	0.0.0.1.0	and	34-35
# ::node	0.0.0.1.1	and	13-14
# ::node	0.0.0.1.1.0	sing-01	2-3
# ::node	0.0.0.1.1.1	sing-01	9-10
# ::node	0.0.0.1.1.1.0	brother	8-9
# ::node	0.0.0.1.1.1.0.0	have-rel-role-91	8-9
# ::node	0.0.0.1.1.1.1	all	14-15
# ::node	0.0.0.1.1.1.2	blood	5-6
# ::node	0.0.0.1.1.1.2.0	young	4-5
# ::node	0.0.1	teenager	25-26
# ::node	0.0.2	and	53-54
# ::node	0.0.2.0	promise-01	56-57
# ::node	0.0.2.0.0	young	77-78
# ::node	0.0.2.0.0.0	too	76-77
# ::node	0.0.2.0.1	and	61-62
# ::node	0.0.2.0.1.0	day	60-61
# ::node	0.0.2.1	love-01	48-49
# ::node	0.0.2.1.0	all	65-66
# ::node	0.0.2.1.1	suffer-01	45-46
# ::node	0.0.2.1.1.0	love-01	42-43
# ::node	0.0.2.1.1.0.0	tab	43-44
# ::node	0.0.2.1.1.0.1	dream-01	20-21
# ::node	0.0.2.1.1.0.2	explicit	63-64
# ::node	0.0.2.1.1.0.2.0	most	62-63
# ::node	0.0.2.1.1.1	teenager	40-41
# ::node	0.0.2.1.1.2	king	67-68
# ::node	0.0.2.1.1.3	young	47-48
# ::node	0.0.2.1.2	have-rel-role-91	51-52
# ::node	0.0.2.1.2.0	song	75-76
# ::node	0.0.2.1.2.1	buddy	51-52
# ::node	0.0.2.1.2.2	fool	29-30
# ::root	0	and
(a6 / and 
      :ARG2-of (a5 / ask-02 
            :ARG0 (i / i 
                  :ARG0-of (l3 / love-01) 
                  :ARG1-of (l4 / love-01 
                        :op-of (a4 / and) 
                        :op-of (a8 / and 
                              :op1 (s4 / sing-01) 
                              :op2 (s3 / sing-01 
                                    :ARG0 (b2 / brother 
                                          :ARG2-of (h2 / have-rel-role-91)) 
                                    :ARG1 (a7 / all) 
                                    :location (b3 / blood 
                                          :mod (y3 / young)))))) 
            :ARG1 (t4 / teenager) 
            :op-of (a3 / and 
                  :ARG0-of (p / promise-01 
                        :ARG1 (y / young 
                              :degree (t / too)) 
                        :op-of (a2 / and 
                              :op1 (d / day))) 
                  :op1 (l / love-01 
                        :ARG0 (a / all) 
                        :ARG0-of (s2 / suffer-01 
                              :ARG1 (l2 / love-01 
                                    :ARG1 (t2 / tab) 
                                    :ARG1-of (d2 / dream-01) 
                                    :op-of (e / explicit 
                                          :time-of (m / most))) 
                              :ARG2 (t3 / teenager) 
                              :op-of (k / king) 
                              :time (y2 / young)) 
                        :ARG1 (h / have-rel-role-91 
                              :ARG1 (s / song) 
                              :ARG2 (b / buddy) 
                              :topic-of (f / fool))))))

# ::snt the military government officially called the state law and order restoration committee has promised to hold elections by may
# ::tok the military government officially called the state law and order restoration committee has promised to hold elections by may
# ::alignments 18-19|0.0.0.1.0+0.0.0.1 16-17|0.0.0 13-14|0.0 11-12|0.2 10-11|0.2.0 8-9|0 7-8|0.1 6-7|0.1.0 3-4|0.2.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:51.236
# ::node	0	and	8-9
# ::node	0.0	promise-01	13-14
# ::node	0.0.0	elect-01	16-17
# ::node	0.0.0.0	military	1-2
# ::node	0.0.0.1	date-entity	18-19
# ::node	0.0.0.1.0	5	18-19
# ::node	0.1	law	7-8
# ::node	0.1.0	state	6-7
# ::node	0.2	committee	11-12
# ::node	0.2.0	restore-01	10-11
# ::node	0.2.0.0	official	3-4
# ::root	0	and
# ::edge	and	op1	law	0	0.1	
# ::edge	and	op2	committee	0	0.2	
# ::edge	date-entity	month	5	0.0.0.1	0.0.0.1.0	
# ::edge	elect-01	ARG1	military	0.0.0	0.0.0.0	
# ::edge	elect-01	time	date-entity	0.0.0	0.0.0.1	
# ::edge	law	topic	state	0.1	0.1.0	
# ::edge	promise-01	ARG0	and	0.0	0	
# ::edge	promise-01	ARG1	elect-01	0.0	0.0.0	
# ::edge	restore-01	ARG0	committee	0.2.0	0.2	
# ::edge	restore-01	ARG1	official	0.2.0	0.2.0.0	
(a / and 
      :ARG0-of (p / promise-01 
            :ARG1 (e / elect-01 
                  :ARG1 (m / military) 
                  :time (d / date-entity 
                        :month 5))) 
      :op1 (l / law 
            :topic (s / state)) 
      :op2 (c / committee 
            :ARG0-of (r / restore-01 
                  :ARG1 (o / official))))

# ::snt as an alternative security for japan the british and the americans promised not to develop their naval bases at hong kong and in the philippines
# ::tok as an alternative security for japan the british and the americans promised not to develop their naval bases at hong kong and in the philippines
# ::alignments 21-22|0 19-21|0.0.2.0.0.0+0.0.2.0.0.1+0.0.2.0.0+0.0.2.0 17-18|0.0.2.1 14-15|0.0.2 11-12|0.0 10-11|0.0.0.0.0.0.0+0.0.0.0.0.0+0.0.0.0.0+0.0.0.0 8-9|0.0.0 3-4|0.0.1 2-3|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:51.301
# ::node	0	and	21-22
# ::node	0.0	promise-01	11-12
# ::node	0.0.0	and	8-9
# ::node	0.0.0.0	person	10-11
# ::node	0.0.0.0.0	country	10-11
# ::node	0.0.0.0.0.0	name	10-11
# ::node	0.0.0.0.0.0.0	"America"	10-11
# ::node	0.0.1	security	3-4
# ::node	0.0.1.0	alternative	2-3
# ::node	0.0.2	develop-02	14-15
# ::node	0.0.2.0	country	19-21
# ::node	0.0.2.0.0	name	19-21
# ::node	0.0.2.0.0.0	"kong"	19-21
# ::node	0.0.2.0.0.1	"hong"	19-21
# ::node	0.0.2.1	base	17-18
# ::root	0	and
# ::edge	and	op1	person	0.0.0	0.0.0.0	
# ::edge	and	op1	promise-01	0	0.0	
# ::edge	country	name	name	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	country	name	name	0.0.2.0	0.0.2.0.0	
# ::edge	develop-02	ARG0	country	0.0.2	0.0.2.0	
# ::edge	develop-02	ARG1	base	0.0.2	0.0.2.1	
# ::edge	name	op1	"America"	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	name	op1	"kong"	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	name	op2	"hong"	0.0.2.0.0	0.0.2.0.0.1	
# ::edge	person	mod	country	0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	ARG0	and	0.0	0.0.0	
# ::edge	promise-01	ARG1	security	0.0	0.0.1	
# ::edge	promise-01	ARG2	develop-02	0.0	0.0.2	
# ::edge	security	mod	alternative	0.0.1	0.0.1.0	
(a / and 
      :op1 (p / promise-01 
            :ARG0 (a2 / and 
                  :op1 (p2 / person 
                        :mod (c2 / country 
                              :name (n2 / name 
                                    :op1 "America")))) 
            :ARG1 (s / security 
                  :mod (a3 / alternative)) 
            :ARG2 (d / develop-02 
                  :ARG0 (c / country 
                        :name (n / name 
                              :op1 "kong" 
                              :op2 "hong")) 
                  :ARG1 (b / base))))

# ::snt he promised to form a national unity cabinet to implement the peace accord dash
# ::tok he promised to form a national unity cabinet to implement the peace accord dash
# ::alignments 12-13|0.1.0.1 11-12|0.1.0.1.0 9-10|0.1.0 7-8|0.1.0.0 6-7|0.1.0.0.1.0+0.1.0.0.1 5-6|0.1.0.0.0 3-4|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:51.351
# ::node	0	promise-01	1-2
# ::node	0.0	he	0-1
# ::node	0.1	form	3-4
# ::node	0.1.0	implement-01	9-10
# ::node	0.1.0.0	cabinet	7-8
# ::node	0.1.0.0.0	nation	5-6
# ::node	0.1.0.0.1	name	6-7
# ::node	0.1.0.0.1.0	"Unity"	6-7
# ::node	0.1.0.1	accord	12-13
# ::node	0.1.0.1.0	peace	11-12
# ::root	0	promise-01
# ::edge	accord	mod	peace	0.1.0.1	0.1.0.1.0	
# ::edge	cabinet	mod	nation	0.1.0.0	0.1.0.0.0	
# ::edge	cabinet	name	name	0.1.0.0	0.1.0.0.1	
# ::edge	form	purpose	implement-01	0.1	0.1.0	
# ::edge	implement-01	ARG0	cabinet	0.1.0	0.1.0.0	
# ::edge	implement-01	ARG1	accord	0.1.0	0.1.0.1	
# ::edge	name	op1	"Unity"	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	promise-01	ARG0	he	0	0.0	
# ::edge	promise-01	ARG1	form	0	0.1	
(p2 / promise-01 
      :ARG0 (h / he) 
      :ARG1 (f / form 
            :purpose (i / implement-01 
                  :ARG0 (c / cabinet 
                        :mod (n2 / nation) 
                        :name (n / name 
                              :op1 "Unity")) 
                  :ARG1 (a / accord 
                        :mod (p / peace)))))

# ::snt us officials say privately that washington promised the rebels that american troops would block two key roads leading to the headquarters of the panamanian defence forces pdf
# ::tok us officials say privately that washington promised the rebels that american troops would block two key roads leading to the headquarters of the panamanian defence forces pdf
# ::alignments 25-26|0.1.1.1.0.0 24-25|0.1.1.1.0 20-21|0.1.1.0.0 17-18|0.1.1.0 16-17|0.1.1 15-16|0.1.1.1 14-15|0.1.1.2 13-14|0.1 11-12|0.1.0 10-11|0.1.0.0.1.0+0.1.0.0.1+0.1.0.0 8-9|0.0.0.0+0.0.0 6-7|0.0 2-3|0 1-2|0.1.0.0.0.0+0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:52.258
# ::node	0	say-01	2-3
# ::node	0.0	promise-01	6-7
# ::node	0.0.0	person	8-9
# ::node	0.0.0.0	rebel-01	8-9
# ::node	0.1	block-01	13-14
# ::node	0.1.0	troop	11-12
# ::node	0.1.0.0	country	10-11
# ::node	0.1.0.0.0	have-org-role-91	1-2
# ::node	0.1.0.0.0.0	official	1-2
# ::node	0.1.0.0.1	name	10-11
# ::node	0.1.0.0.1.0	"America"	10-11
# ::node	0.1.1	road	16-17
# ::node	0.1.1.0	lead-01	17-18
# ::node	0.1.1.0.0	headquarters	20-21
# ::node	0.1.1.1	key	15-16
# ::node	0.1.1.1.0	defend-01	24-25
# ::node	0.1.1.1.0.0	force	25-26
# ::node	0.1.1.2	2	14-15
# ::root	0	say-01
# ::edge	block-01	ARG0	troop	0.1	0.1.0	
# ::edge	block-01	ARG1	road	0.1	0.1.1	
# ::edge	block-01	time	say-01	0.1	0	
# ::edge	country	name	name	0.1.0.0	0.1.0.0.1	
# ::edge	defend-01	ARG0	force	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	defend-01	mod	key	0.1.1.1.0	0.1.1.1	
# ::edge	have-org-role-91	ARG1	country	0.1.0.0.0	0.1.0.0	
# ::edge	have-org-role-91	ARG2	official	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	lead-01	ARG0	road	0.1.1.0	0.1.1	
# ::edge	lead-01	ARG4	headquarters	0.1.1.0	0.1.1.0.0	
# ::edge	name	op1	"America"	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	promise-01	ARG1	person	0.0	0.0.0	
# ::edge	rebel-01	ARG0	person	0.0.0.0	0.0.0	
# ::edge	road	mod	key	0.1.1	0.1.1.1	
# ::edge	road	quant	2	0.1.1	0.1.1.2	
# ::edge	say-01	ARG1	promise-01	0	0.0	
# ::edge	troop	mod	country	0.1.0	0.1.0.0	
(s / say-01 
      :ARG1 (p2 / promise-01 
            :ARG1 (p / person 
                  :ARG0-of (r2 / rebel-01))) 
      :time-of (b / block-01 
            :ARG0 (t / troop 
                  :mod (c / country 
                        :ARG1-of (h2 / have-org-role-91 
                              :ARG2 (o / official)) 
                        :name (n / name 
                              :op1 "America"))) 
            :ARG1 (r / road 
                  :ARG0-of (l / lead-01 
                        :ARG4 (h / headquarters)) 
                  :mod (k / key 
                        :mod-of (d / defend-01 
                              :ARG0 (f / force))) 
                  :quant 2)))

# ::snt but both major networks have promised substantial coverage sheffield will hope for at least one daily 50minute programme of highlights on bbc dash
# ::tok but both major networks have promised substantial coverage sheffield will hope for at least one daily 50minute programme of highlights on bbc dash
# ::alignments 19-20|0.0.1.1.0 17-18|0.0.1.1 10-11|0.0.1 7-8|0.0.1.0 6-7|0.0.1.0.0 5-6|0.0 3-4|0.0.0 2-3|0.0.0.0 1-2|0.0.0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:52.442
# ::node	0	contrast-01	0-1
# ::node	0.0	promise-01	5-6
# ::node	0.0.0	network	3-4
# ::node	0.0.0.0	major	2-3
# ::node	0.0.0.1	both	1-2
# ::node	0.0.1	hope-01	10-11
# ::node	0.0.1.0	cover-03	7-8
# ::node	0.0.1.0.0	substantial	6-7
# ::node	0.0.1.1	program	17-18
# ::node	0.0.1.1.0	highlight-01	19-20
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	promise-01	0	0.0	
# ::edge	cover-03	ARG0	substantial	0.0.1.0	0.0.1.0.0	
# ::edge	highlight-01	ARG0	program	0.0.1.1.0	0.0.1.1	
# ::edge	hope-01	ARG0	cover-03	0.0.1	0.0.1.0	
# ::edge	hope-01	ARG1	program	0.0.1	0.0.1.1	
# ::edge	network	mod	both	0.0.0	0.0.0.1	
# ::edge	network	mod	major	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG0	network	0.0	0.0.0	
# ::edge	promise-01	ARG1	hope-01	0.0	0.0.1	
(c2 / contrast-01 
      :ARG1 (p2 / promise-01 
            :ARG0 (n / network 
                  :mod (m / major) 
                  :mod (b / both)) 
            :ARG1 (h2 / hope-01 
                  :ARG0 (c / cover-03 
                        :ARG0 (s / substantial)) 
                  :ARG1 (p / program 
                        :ARG0-of (h / highlight-01)))))

# ::snt what promised to be one of the most controversial aspects of the bill dash
# ::tok what promised to be one of the most controversial aspects of the bill dash
# ::alignments 12-13|0.1 9-10|0.0 8-9|0.0.0 7-8|0.0.0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:52.457
# ::node	0	promise-01	1-2
# ::node	0.0	aspect	9-10
# ::node	0.0.0	controversy	8-9
# ::node	0.0.0.0	most	7-8
# ::node	0.1	bill	12-13
# ::root	0	promise-01
# ::edge	aspect	mod	controversy	0.0	0.0.0	
# ::edge	controversy	degree	most	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	aspect	0	0.0	
# ::edge	promise-01	ARG2	bill	0	0.1	
(p / promise-01 
      :ARG1 (a / aspect 
            :mod (c / controversy 
                  :degree (m / most))) 
      :ARG2 (b / bill))

# ::snt david oxley the rugby leagues chief executive has promised a full inquiry into the crowd misbehavior
# ::tok david oxley the rugby leagues chief executive has promised a full inquiry into the crowd misbehavior
# ::alignments 14-15|0.2.0 11-12|0.2 10-11|0.2.1 8-9|0 6-7|0.0 5-6|0.0.0.0+0.0.0 4-5|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:52.504
# ::node	0	promise-01	8-9
# ::node	0.0	executive	6-7
# ::node	0.0.0	have-org-role-91	5-6
# ::node	0.0.0.0	chief	5-6
# ::node	0.1	league	4-5
# ::node	0.2	inquire-01	11-12
# ::node	0.2.0	crowd	14-15
# ::node	0.2.1	full	10-11
# ::root	0	promise-01
# ::edge	have-org-role-91	ARG0	executive	0.0.0	0.0	
# ::edge	have-org-role-91	ARG2	chief	0.0.0	0.0.0.0	
# ::edge	inquire-01	ARG1	crowd	0.2	0.2.0	
# ::edge	inquire-01	mod	full	0.2	0.2.1	
# ::edge	promise-01	ARG0	executive	0	0.0	
# ::edge	promise-01	ARG1	league	0	0.1	
# ::edge	promise-01	ARG2	inquire-01	0	0.2	
(p / promise-01 
      :ARG0 (e / executive 
            :ARG0-of (h / have-org-role-91 
                  :ARG2 (c2 / chief))) 
      :ARG1 (l / league) 
      :ARG2 (i / inquire-01 
            :ARG1 (c / crowd) 
            :mod (f / full)))

# ::snt although a forest at dawn with a deer hunt is very dark cleaning promises to bring out more depth according to christies
# ::tok although a forest at dawn with a deer hunt is very dark cleaning promises to bring out more depth according to christies
# ::alignments 15-16|0.0.2 13-14|0.0.2.0 12-13|0.0 11-12|0 10-11|0.1 8-9|0.0.1 4-5|0.0.1.0 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:52.593
# ::node	0	dark	11-12
# ::node	0.0	clean-02	12-13
# ::node	0.0.0	forest	2-3
# ::node	0.0.1	hunt-01	8-9
# ::node	0.0.1.0	dawn-01	4-5
# ::node	0.0.2	bring-01	15-16
# ::node	0.0.2.0	promise-01	13-14
# ::node	0.1	very	10-11
# ::root	0	dark
# ::edge	clean-02	ARG0	dark	0.0	0	
# ::edge	clean-02	ARG1	forest	0.0	0.0.0	
# ::edge	clean-02	ARG2	hunt-01	0.0	0.0.1	
# ::edge	clean-02	purpose	bring-01	0.0	0.0.2	
# ::edge	dark	degree	very	0	0.1	
# ::edge	dawn-01	ARG1	hunt-01	0.0.1.0	0.0.1	
# ::edge	promise-01	ARG1	bring-01	0.0.2.0	0.0.2	
(d / dark 
      :ARG0-of (c / clean-02 
            :ARG1 (f / forest) 
            :ARG2 (h / hunt-01 
                  :ARG1-of (d2 / dawn-01)) 
            :purpose (b / bring-01 
                  :ARG1-of (p / promise-01))) 
      :degree (v / very))

# ::snt the czechoslovak prime minister ladislav adamec bargained yesterday with the opposition over bringing more noncommunists into the government and promised to resign if a new cabinet he is to announce tomorrow failed to win the peoples confidence
# ::tok the czechoslovak prime minister ladislav adamec bargained yesterday with the opposition over bringing more noncommunists into the government and promised to resign if a new cabinet he is to announce tomorrow failed to win the peoples confidence
# ::alignments 36-37|0.1.0.0.0 35-36|0.1.0.0.0.0 33-34|0.1.0.0 31-32|0.1.0 30-31|0.2 29-30|0 26-27|0.0 25-26|0.1 24-25|0.1.1 21-22|0.1.0.1.0.1 19-20|0.1.0.1.0 18-19|0.1.0.1 12-13|0.1.0.1.0.0.0.2 10-11|0.1.0.1.0.0.0.1 7-8|0.1.0.1.0.0.0.3 6-7|0.1.0.1.0.0.0+0.1.0.1.0.0.0.0 4-6|0.1.0.1.0.0.2.0+0.1.0.1.0.0.2.1+0.1.0.1.0.0.2+0.1.0.1.0.0 3-4|0.1.0.1.0.0.1.0+0.1.0.1.0.0.1 2-3|0.1.0.1.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:52.793
# ::node	0	announce-01	29-30
# ::node	0.0	he	26-27
# ::node	0.1	cabinet	25-26
# ::node	0.1.0	fail-01	31-32
# ::node	0.1.0.0	win-01	33-34
# ::node	0.1.0.0.0	confidence	36-37
# ::node	0.1.0.0.0.0	people	35-36
# ::node	0.1.0.1	and	18-19
# ::node	0.1.0.1.0	promise-01	19-20
# ::node	0.1.0.1.0.0	person	4-6
# ::node	0.1.0.1.0.0.0	bargain-01	6-7
# ::node	0.1.0.1.0.0.0.0	thing	6-7
# ::node	0.1.0.1.0.0.0.1	oppose-01	10-11
# ::node	0.1.0.1.0.0.0.2	bring-01	12-13
# ::node	0.1.0.1.0.0.0.3	yesterday	7-8
# ::node	0.1.0.1.0.0.1	have-org-role-91	3-4
# ::node	0.1.0.1.0.0.1.0	minister	3-4
# ::node	0.1.0.1.0.0.1.0.0	prime	2-3
# ::node	0.1.0.1.0.0.2	name	4-6
# ::node	0.1.0.1.0.0.2.0	"adamec"	4-6
# ::node	0.1.0.1.0.0.2.1	"ladislav"	4-6
# ::node	0.1.0.1.0.1	resign-01	21-22
# ::node	0.1.1	new	24-25
# ::node	0.2	tomorrow	30-31
# ::root	0	announce-01
# ::edge	and	op1	promise-01	0.1.0.1	0.1.0.1.0	
# ::edge	and	purpose	fail-01	0.1.0.1	0.1.0	
# ::edge	announce-01	ARG0	he	0	0.0	
# ::edge	announce-01	ARG1	cabinet	0	0.1	
# ::edge	announce-01	time	tomorrow	0	0.2	
# ::edge	bargain-01	ARG0	person	0.1.0.1.0.0.0	0.1.0.1.0.0	
# ::edge	bargain-01	ARG1	thing	0.1.0.1.0.0.0	0.1.0.1.0.0.0.0	
# ::edge	bargain-01	ARG2	oppose-01	0.1.0.1.0.0.0	0.1.0.1.0.0.0.1	
# ::edge	bargain-01	manner	bring-01	0.1.0.1.0.0.0	0.1.0.1.0.0.0.2	
# ::edge	bargain-01	time	yesterday	0.1.0.1.0.0.0	0.1.0.1.0.0.0.3	
# ::edge	cabinet	mod	new	0.1	0.1.1	
# ::edge	confidence	mod	people	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	fail-01	ARG1	cabinet	0.1.0	0.1	
# ::edge	fail-01	ARG2	win-01	0.1.0	0.1.0.0	
# ::edge	have-org-role-91	ARG0	person	0.1.0.1.0.0.1	0.1.0.1.0.0	
# ::edge	have-org-role-91	ARG2	minister	0.1.0.1.0.0.1	0.1.0.1.0.0.1.0	
# ::edge	minister	mod	prime	0.1.0.1.0.0.1.0	0.1.0.1.0.0.1.0.0	
# ::edge	name	op1	"adamec"	0.1.0.1.0.0.2	0.1.0.1.0.0.2.0	
# ::edge	name	op2	"ladislav"	0.1.0.1.0.0.2	0.1.0.1.0.0.2.1	
# ::edge	person	name	name	0.1.0.1.0.0	0.1.0.1.0.0.2	
# ::edge	promise-01	ARG0	person	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	promise-01	ARG2	resign-01	0.1.0.1.0	0.1.0.1.0.1	
# ::edge	win-01	ARG1	confidence	0.1.0.0	0.1.0.0.0	
(a / announce-01 
      :ARG0 (h / he) 
      :ARG1 (c2 / cabinet 
            :ARG1-of (f / fail-01 
                  :ARG2 (w / win-01 
                        :ARG1 (c / confidence 
                              :mod (p / people))) 
                  :purpose-of (a2 / and 
                        :op1 (p2 / promise-01 
                              :ARG0 (p3 / person 
                                    :ARG0-of (b2 / bargain-01 
                                          :ARG1 (t2 / thing) 
                                          :ARG2 (o / oppose-01) 
                                          :manner (b / bring-01) 
                                          :time (y / yesterday)) 
                                    :ARG0-of (h2 / have-org-role-91 
                                          :ARG2 (m / minister 
                                                :mod (p4 / prime))) 
                                    :name (n2 / name 
                                          :op1 "adamec" 
                                          :op2 "ladislav")) 
                              :ARG2 (r / resign-01)))) 
            :mod (n / new)) 
      :time (t / tomorrow))

# ::snt the weekly mail in johannesburg said the tour scheduled to start in january was out of place in the current political atmosphere with new president f w de klerk introducing or promising a series of reforms
# ::tok the weekly mail in johannesburg said the tour scheduled to start in january was out of place in the current political atmosphere with new president f w de klerk introducing or promising a series of reforms
# ::alignments 35-36|0.1.0.1.0.0 33-34|0.1.0.1.0 31-32|0.1.0.1 30-31|0.1.0.1.1 29-30|0.1.0.1.1.0 25-26|0.1.0.1.1.0.0 24-25|0.1.0.1.1.0.0.0.0+0.1.0.1.1.0.0.0 23-24|0.1.0.1.1.0.0.0.0.0 21-22|0.1.0.1.1.0.0.0.1 20-21|0.1.0.1.1.0.0.0.1.1 19-20|0.1.0.1.1.0.0.0.1.2 16-17|0.1.0.1.1.0.0.0.1.0 12-13|0.1.0.2.0+0.1.0.2 10-11|0.1.0 8-9|0.1 7-8|0.1.0.0 5-6|0 2-3|0.0 1-2|0.0.0.0+0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:53.316
# ::node	0	say-01	5-6
# ::node	0.0	mail-01	2-3
# ::node	0.0.0	temporal-quantity	1-2
# ::node	0.0.0.0	week	1-2
# ::node	0.1	schedule-01	8-9
# ::node	0.1.0	start-01	10-11
# ::node	0.1.0.0	tour-01	7-8
# ::node	0.1.0.1	promise-01	31-32
# ::node	0.1.0.1.0	series	33-34
# ::node	0.1.0.1.0.0	reform-01	35-36
# ::node	0.1.0.1.1	or	30-31
# ::node	0.1.0.1.1.0	introduce-02	29-30
# ::node	0.1.0.1.1.0.0	f	25-26
# ::node	0.1.0.1.1.0.0.0	have-org-role-91	24-25
# ::node	0.1.0.1.1.0.0.0.0	president	24-25
# ::node	0.1.0.1.1.0.0.0.0.0	new	23-24
# ::node	0.1.0.1.1.0.0.0.1	atmosphere	21-22
# ::node	0.1.0.1.1.0.0.0.1.0	place	16-17
# ::node	0.1.0.1.1.0.0.0.1.1	politics	20-21
# ::node	0.1.0.1.1.0.0.0.1.2	current	19-20
# ::node	0.1.0.2	date-entity	12-13
# ::node	0.1.0.2.0	1	12-13
# ::root	0	say-01
# ::edge	atmosphere	mod	politics	0.1.0.1.1.0.0.0.1	0.1.0.1.1.0.0.0.1.1	
# ::edge	atmosphere	time	current	0.1.0.1.1.0.0.0.1	0.1.0.1.1.0.0.0.1.2	
# ::edge	atmosphere	topic	have-org-role-91	0.1.0.1.1.0.0.0.1	0.1.0.1.1.0.0.0	
# ::edge	date-entity	month	1	0.1.0.2	0.1.0.2.0	
# ::edge	have-org-role-91	ARG1	f	0.1.0.1.1.0.0.0	0.1.0.1.1.0.0	
# ::edge	have-org-role-91	ARG2	president	0.1.0.1.1.0.0.0	0.1.0.1.1.0.0.0.0	
# ::edge	introduce-02	ARG1	f	0.1.0.1.1.0	0.1.0.1.1.0.0	
# ::edge	mail-01	ARG2	temporal-quantity	0.0	0.0.0	
# ::edge	or	op1	introduce-02	0.1.0.1.1	0.1.0.1.1.0	
# ::edge	or	op2	promise-01	0.1.0.1.1	0.1.0.1	
# ::edge	place	location	atmosphere	0.1.0.1.1.0.0.0.1.0	0.1.0.1.1.0.0.0.1	
# ::edge	president	mod	new	0.1.0.1.1.0.0.0.0	0.1.0.1.1.0.0.0.0.0	
# ::edge	promise-01	ARG1	series	0.1.0.1	0.1.0.1.0	
# ::edge	reform-01	quant	series	0.1.0.1.0.0	0.1.0.1.0	
# ::edge	say-01	ARG0	mail-01	0	0.0	
# ::edge	say-01	ARG1	schedule-01	0	0.1	
# ::edge	schedule-01	ARG1	start-01	0.1	0.1.0	
# ::edge	start-01	ARG0	tour-01	0.1.0	0.1.0.0	
# ::edge	start-01	ARG1	promise-01	0.1.0	0.1.0.1	
# ::edge	start-01	time	date-entity	0.1.0	0.1.0.2	
# ::edge	temporal-quantity	unit	week	0.0.0	0.0.0.0	
(s4 / say-01 
      :ARG0 (m / mail-01 
            :ARG2 (t2 / temporal-quantity 
                  :unit (w / week))) 
      :ARG1 (s3 / schedule-01 
            :ARG1 (s2 / start-01 
                  :ARG0 (t / tour-01) 
                  :ARG1 (p / promise-01 
                        :ARG1 (s / series 
                              :quant-of (r / reform-01)) 
                        :op-of (o / or 
                              :op1 (i / introduce-02 
                                    :ARG1 (f / f 
                                          :ARG1-of (h / have-org-role-91 
                                                :ARG2 (p2 / president 
                                                      :mod (n / new)) 
                                                :topic-of (a / atmosphere 
                                                      :location-of (p4 / place) 
                                                      :mod (p3 / politics) 
                                                      :time (c / current))))))) 
                  :time (d / date-entity 
                        :month 1))))

# ::snt ill find you some earrings he promised and the car will come for you at six ready or not
# ::tok ill find you some earrings he promised and the car will come for you at six ready or not
# ::alignments 17-18|0.0.2.0 16-17|0.0.2 15-16|0.0.2.0.0 13-14|0.1.0 9-10|0.1 7-8|0 6-7|0.0 5-6|0.0.0 4-5|0.0.1 3-4|0.0.1.1 2-3|0.0.1.0 0-1|0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:53.375
# ::node	0	and	7-8
# ::node	0.0	promise-01	6-7
# ::node	0.0.0	he	5-6
# ::node	0.0.1	earring	4-5
# ::node	0.0.1.0	you	2-3
# ::node	0.0.1.0.0	ill-41	0-1
# ::node	0.0.1.1	some	3-4
# ::node	0.0.2	ready-01	16-17
# ::node	0.0.2.0	or	17-18
# ::node	0.0.2.0.0	6	15-16
# ::node	0.1	car	9-10
# ::node	0.1.0	you	13-14
# ::root	0	and
# ::edge	and	op1	promise-01	0	0.0	
# ::edge	and	op2	car	0	0.1	
# ::edge	car	poss	you	0.1	0.1.0	
# ::edge	earring	name	you	0.0.1	0.0.1.0	
# ::edge	earring	quant	some	0.0.1	0.0.1.1	
# ::edge	or	op1	ready-01	0.0.2.0	0.0.2	
# ::edge	or	quant	6	0.0.2.0	0.0.2.0.0	
# ::edge	promise-01	ARG0	he	0.0	0.0.0	
# ::edge	promise-01	ARG1	earring	0.0	0.0.1	
# ::edge	ready-01	ARG1	promise-01	0.0.2	0.0	
# ::edge	you	mod	ill-41	0.0.1.0	0.0.1.0.0	
(a / and 
      :op1 (p / promise-01 
            :ARG0 (h / he) 
            :ARG1 (e / earring 
                  :name (y2 / you 
                        :mod (i / ill-41)) 
                  :quant (s / some)) 
            :ARG1-of (r / ready-01 
                  :op-of (o / or 
                        :quant 6))) 
      :op2 (c / car 
            :poss (y / you)))

# ::snt   i wont laugh i promise
# ::tok i wont laugh i promise
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:53.376
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt remembering the economic morass that followed the return to democracy in brazil peru and argentina mr aylwin promises to preserve pinochet policies he says resemble those of socialist spain
# ::tok remembering the economic morass that followed the return to democracy in brazil peru and argentina mr aylwin promises to preserve pinochet policies he says resemble those of socialist spain
# ::alignments 27-28|0.1.0.1.0.0 23-24|0 22-23|0.0 21-22|0.1 19-20|0.1.0.0 17-18|0.1.0 14-15|0.1.0.1.2.0.0+0.1.0.1.2.0+0.1.0.1.2 13-14|0.1.0.1 9-10|0.1.0.1.0.1 5-6|0.1.0.1.0 2-3|0.1.0.0.0 0-1|0.1.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:53.565
# ::node	0	say-01	23-24
# ::node	0.0	he	22-23
# ::node	0.1	policy	21-22
# ::node	0.1.0	promise-01	17-18
# ::node	0.1.0.0	preserve-01	19-20
# ::node	0.1.0.0.0	economy	2-3
# ::node	0.1.0.1	and	13-14
# ::node	0.1.0.1.0	follow-01	5-6
# ::node	0.1.0.1.0.0	socialist	27-28
# ::node	0.1.0.1.0.1	democracy	9-10
# ::node	0.1.0.1.1	remember-01	0-1
# ::node	0.1.0.1.2	country	14-15
# ::node	0.1.0.1.2.0	name	14-15
# ::node	0.1.0.1.2.0.0	"Argentina"	14-15
# ::root	0	say-01
# ::edge	and	op1	remember-01	0.1.0.1	0.1.0.1.1	
# ::edge	and	op2	country	0.1.0.1	0.1.0.1.2	
# ::edge	and	op3	promise-01	0.1.0.1	0.1.0	
# ::edge	country	name	name	0.1.0.1.2	0.1.0.1.2.0	
# ::edge	follow-01	ARG0	socialist	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	follow-01	ARG1	and	0.1.0.1.0	0.1.0.1	
# ::edge	follow-01	ARG2	democracy	0.1.0.1.0	0.1.0.1.0.1	
# ::edge	name	op1	"Argentina"	0.1.0.1.2.0	0.1.0.1.2.0.0	
# ::edge	preserve-01	ARG0	economy	0.1.0.0	0.1.0.0.0	
# ::edge	promise-01	ARG1	policy	0.1.0	0.1	
# ::edge	promise-01	ARG2	preserve-01	0.1.0	0.1.0.0	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	policy	0	0.1	
(s2 / say-01 
      :ARG0 (h / he) 
      :ARG1 (p / policy 
            :ARG1-of (p3 / promise-01 
                  :ARG2 (p2 / preserve-01 
                        :ARG0 (e / economy)) 
                  :op-of (a / and 
                        :ARG1-of (f / follow-01 
                              :ARG0 (s / socialist) 
                              :ARG2 (d / democracy)) 
                        :op1 (r / remember-01) 
                        :op2 (c / country 
                              :name (n / name 
                                    :op1 "Argentina"))))))

# ::snt the green bill promised by the government for the autumn is not expected to include measures to ban undesirable products or make them more expensive
# ::tok the green bill promised by the government for the autumn is not expected to include measures to ban undesirable products or make them more expensive
# ::alignments 24-25|0.0.0.0.0 20-21|0.0.1.0.1 19-20|0.0.1.0.0 18-19|0.0.1.0.0.0.0+0.0.1.0.0.0 17-18|0.0.1.0 15-16|0.0.1 14-15|0.0 12-13|0 3-4|0.0.0.0 2-3|0.0.0 1-2|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:53.664
# ::node	0	expect-01	12-13
# ::node	0.0	include-01	14-15
# ::node	0.0.0	bill	2-3
# ::node	0.0.0.0	promise-01	3-4
# ::node	0.0.0.0.0	expensive	24-25
# ::node	0.0.0.1	green	1-2
# ::node	0.0.1	measure	15-16
# ::node	0.0.1.0	ban-01	17-18
# ::node	0.0.1.0.0	product	19-20
# ::node	0.0.1.0.0.0	desire-01	18-19
# ::node	0.0.1.0.0.0.0	-	18-19
# ::node	0.0.1.0.1	or	20-21
# ::root	0	expect-01
# ::edge	ban-01	ARG1	product	0.0.1.0	0.0.1.0.0	
# ::edge	ban-01	instrument	measure	0.0.1.0	0.0.1	
# ::edge	bill	mod	green	0.0.0	0.0.0.1	
# ::edge	desire-01	ARG1	product	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	desire-01	polarity	-	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	expect-01	ARG1	include-01	0	0.0	
# ::edge	include-01	ARG0	bill	0.0	0.0.0	
# ::edge	include-01	ARG1	measure	0.0	0.0.1	
# ::edge	or	op1	ban-01	0.0.1.0.1	0.0.1.0	
# ::edge	promise-01	ARG0	bill	0.0.0.0	0.0.0	
# ::edge	promise-01	ARG1	expensive	0.0.0.0	0.0.0.0.0	
(e2 / expect-01 
      :ARG1 (i / include-01 
            :ARG0 (b2 / bill 
                  :ARG0-of (p2 / promise-01 
                        :ARG1 (e / expensive)) 
                  :mod (g / green)) 
            :ARG1 (m / measure 
                  :instrument-of (b / ban-01 
                        :ARG1 (p / product 
                              :ARG1-of (d / desire-01 
                                    :polarity -)) 
                        :op-of (o / or)))))

# ::snt i made father promise that he would never extend credit again
# ::tok i made father promise that he would never extend credit again
# ::alignments 10-11|0.1.1 9-10|0.1.0.0 8-9|0.1 5-6|0.1.0 3-4|0 2-3|0.0.0.0+0.0.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:53.702
# ::node	0	promise-01	3-4
# ::node	0.0	i	0-1
# ::node	0.0.0	have-rel-role-91	2-3
# ::node	0.0.0.0	father	2-3
# ::node	0.1	extend-01	8-9
# ::node	0.1.0	he	5-6
# ::node	0.1.0.0	credit-02	9-10
# ::node	0.1.1	again	10-11
# ::root	0	promise-01
# ::edge	credit-02	ARG1	he	0.1.0.0	0.1.0	
# ::edge	extend-01	ARG0	he	0.1	0.1.0	
# ::edge	extend-01	mod	again	0.1	0.1.1	
# ::edge	have-rel-role-91	ARG1	i	0.0.0	0.0	
# ::edge	have-rel-role-91	ARG2	father	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG0	i	0	0.0	
# ::edge	promise-01	ARG1	extend-01	0	0.1	
(p / promise-01 
      :ARG0 (i / i 
            :ARG1-of (h2 / have-rel-role-91 
                  :ARG2 (f / father))) 
      :ARG1 (e / extend-01 
            :ARG0 (h / he 
                  :ARG1-of (c / credit-02)) 
            :mod (a / again)))

# ::snt   they promise they will not teach any particular reassuring system of belief nor is it a therapeutic or counselling centre
# ::tok they promise they will not teach any particular reassuring system of belief nor is it a therapeutic or counselling centre
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:53.703
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt just as we round the arc to start the performance contrary to all promises the whole width of the avenue is awash with water
# ::tok just as we round the arc to start the performance contrary to all promises the whole width of the avenue is awash with water
# ::alignments 23-24|0.1 15-16|0.0.1.0 13-14|0 12-13|0.2 10-11|0.0 9-10|0.0.1 7-8|0.0.1.1 3-4|0.0.1.1.0.0 2-3|0.0.1.1.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:53.818
# ::node	0	promise-01	13-14
# ::node	0.0	contrary-41	10-11
# ::node	0.0.0	just	0-1
# ::node	0.0.1	perform-01	9-10
# ::node	0.0.1.0	whole	15-16
# ::node	0.0.1.1	start-01	7-8
# ::node	0.0.1.1.0	we	2-3
# ::node	0.0.1.1.0.0	round	3-4
# ::node	0.1	water	23-24
# ::node	0.2	all	12-13
# ::root	0	promise-01
# ::edge	contrary-41	ARG0	just	0.0	0.0.0	
# ::edge	contrary-41	ARG1	perform-01	0.0	0.0.1	
# ::edge	contrary-41	ARG2	promise-01	0.0	0	
# ::edge	perform-01	ARG1	whole	0.0.1	0.0.1.0	
# ::edge	promise-01	quant	all	0	0.2	
# ::edge	round	ARG0	we	0.0.1.1.0.0	0.0.1.1.0	
# ::edge	start-01	ARG0	we	0.0.1.1	0.0.1.1.0	
# ::edge	start-01	ARG1	perform-01	0.0.1.1	0.0.1	
# ::edge	water	op1	promise-01	0.1	0	
(p / promise-01 
      :ARG2-of (c / contrary-41 
            :ARG0 (j / just) 
            :ARG1 (p2 / perform-01 
                  :ARG1 (w2 / whole) 
                  :ARG1-of (s / start-01 
                        :ARG0 (w3 / we 
                              :ARG0-of (r / round))))) 
      :op-of (w / water) 
      :quant (a / all))

# ::snt mr foster is promising to respond with a lecture to the weekly meeting of the plp today warning mps to exercise a special selfcontrol in the next two weeks in the face of provocative government tactics
# ::tok mr foster is promising to respond with a lecture to the weekly meeting of the plp today warning mps to exercise a special selfcontrol in the next two weeks in the face of provocative government tactics
# ::alignments 35-36|0.0 33-34|0 31-32|0.0.0 28-29|0.0.0.0.1.1+0.0.0.0.1 27-28|0.0.0.0.1.0 26-27|0.0.0.0.0.0.0.0 22-23|0.0.0.0.0.0.0.1.0 20-21|0.0.0.0 17-18|0.0.0.0.2 16-17|0.0.0.0.0 12-13|0.0.0.0.0.0 11-12|0.0.0.0.0.0.1.0+0.0.0.0.0.0.1 8-9|0.0.0.0.0.0.0.2 5-6|0.0.0.0.0.0.0 3-4|0.0.0.0.0.0.0.1 1-2|0.0.0.0.0.0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:54.208
# ::node	0	provoke-01	33-34
# ::node	0.0	tactic	35-36
# ::node	0.0.0	face-01	31-32
# ::node	0.0.0.0	exercise-02	20-21
# ::node	0.0.0.0.0	today	16-17
# ::node	0.0.0.0.0.0	meet-03	12-13
# ::node	0.0.0.0.0.0.0	respond-01	5-6
# ::node	0.0.0.0.0.0.0.0	next	26-27
# ::node	0.0.0.0.0.0.0.1	promise-01	3-4
# ::node	0.0.0.0.0.0.0.1.0	special	22-23
# ::node	0.0.0.0.0.0.0.1.1	foster	1-2
# ::node	0.0.0.0.0.0.0.2	lecture-01	8-9
# ::node	0.0.0.0.0.0.1	temporal-quantity	11-12
# ::node	0.0.0.0.0.0.1.0	week	11-12
# ::node	0.0.0.0.1	temporal-quantity	28-29
# ::node	0.0.0.0.1.0	2	27-28
# ::node	0.0.0.0.1.1	week	28-29
# ::node	0.0.0.0.2	warn-01	17-18
# ::root	0	provoke-01
# ::edge	exercise-02	ARG0	today	0.0.0.0	0.0.0.0.0	
# ::edge	exercise-02	ARG1	temporal-quantity	0.0.0.0	0.0.0.0.1	
# ::edge	exercise-02	time	face-01	0.0.0.0	0.0.0	
# ::edge	face-01	ARG1	tactic	0.0.0	0.0	
# ::edge	meet-03	ARG1	today	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	meet-03	duration	temporal-quantity	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	promise-01	ARG0	special	0.0.0.0.0.0.0.1	0.0.0.0.0.0.0.1.0	
# ::edge	promise-01	ARG1	foster	0.0.0.0.0.0.0.1	0.0.0.0.0.0.0.1.1	
# ::edge	promise-01	ARG2	respond-01	0.0.0.0.0.0.0.1	0.0.0.0.0.0.0	
# ::edge	provoke-01	ARG1	tactic	0	0.0	
# ::edge	respond-01	ARG0	next	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	respond-01	ARG1	meet-03	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	respond-01	time	lecture-01	0.0.0.0.0.0.0	0.0.0.0.0.0.0.2	
# ::edge	temporal-quantity	quant	2	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	temporal-quantity	unit	week	0.0.0.0.0.0.1	0.0.0.0.0.0.1.0	
# ::edge	temporal-quantity	unit	week	0.0.0.0.1	0.0.0.0.1.1	
# ::edge	warn-01	ARG1	exercise-02	0.0.0.0.2	0.0.0.0	
(p / provoke-01 
      :ARG1 (t / tactic 
            :ARG1-of (f / face-01 
                  :time-of (e / exercise-02 
                        :ARG0 (t3 / today 
                              :ARG1-of (m / meet-03 
                                    :ARG1-of (r / respond-01 
                                          :ARG0 (n / next) 
                                          :ARG2-of (p2 / promise-01 
                                                :ARG0 (s / special) 
                                                :ARG1 (f2 / foster)) 
                                          :time (l / lecture-01)) 
                                    :duration (t4 / temporal-quantity 
                                          :unit (w3 / week)))) 
                        :ARG1 (t2 / temporal-quantity 
                              :quant 2 
                              :unit (w / week)) 
                        :ARG1-of (w2 / warn-01)))))

# ::snt the main purpose of what promises to be a major international gathering in the former home of the muchloved marque is to celebrate the opening of the clubs new office headquarters and archive centre in cemetery road close to where the former factory once stood
# ::tok the main purpose of what promises to be a major international gathering in the former home of the muchloved marque is to celebrate the opening of the clubs new office headquarters and archive centre in cemetery road close to where the former factory once stood
# ::alignments 44-45|0 43-44|0.1 42-43|0.0 41-42|0.0.0 36-37|0.1.0.0.1.1.3 35-36|0.1.0.0.1.1.3.0 31-32|0.1.0.0.1 30-31|0.1.0.0.1.1 29-30|0.1.0.0.1.1.2 28-29|0.1.0.0.1.1.0 27-28|0.1.0.0.1.1.1 24-25|0.1.0.0 22-23|0.1.0 15-16|0.1.0.0.1.0.0 14-15|0.1.0.0.1.0.0.0 11-12|0.1.0.0.1.0 10-11|0.1.0.0.1.0.2 9-10|0.1.0.0.1.0.3 5-6|0.1.0.0.1.0.1 2-3|0.1.0.0.0 1-2|0.1.0.0.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:54.817
# ::node	0	stand-01	44-45
# ::node	0.0	factory	42-43
# ::node	0.0.0	former	41-42
# ::node	0.1	once	43-44
# ::node	0.1.0	celebrate-02	22-23
# ::node	0.1.0.0	open-01	24-25
# ::node	0.1.0.0.0	purpose	2-3
# ::node	0.1.0.0.1	and	31-32
# ::node	0.1.0.0.1.0	gather-01	11-12
# ::node	0.1.0.0.1.0.0	home	15-16
# ::node	0.1.0.0.1.0.0.0	former	14-15
# ::node	0.1.0.0.1.0.1	promise-01	5-6
# ::node	0.1.0.0.1.0.1.0	main	1-2
# ::node	0.1.0.0.1.0.2	international	10-11
# ::node	0.1.0.0.1.0.3	major	9-10
# ::node	0.1.0.0.1.1	headquarters	30-31
# ::node	0.1.0.0.1.1.0	new	28-29
# ::node	0.1.0.0.1.1.1	club	27-28
# ::node	0.1.0.0.1.1.2	office	29-30
# ::node	0.1.0.0.1.1.3	road	36-37
# ::node	0.1.0.0.1.1.3.0	cemetery	35-36
# ::root	0	stand-01
# ::edge	and	op1	gather-01	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	and	op2	headquarters	0.1.0.0.1	0.1.0.0.1.1	
# ::edge	celebrate-02	ARG0	once	0.1.0	0.1	
# ::edge	celebrate-02	ARG1	open-01	0.1.0	0.1.0.0	
# ::edge	factory	time	former	0.0	0.0.0	
# ::edge	gather-01	ARG1	home	0.1.0.0.1.0	0.1.0.0.1.0.0	
# ::edge	gather-01	mod	international	0.1.0.0.1.0	0.1.0.0.1.0.2	
# ::edge	gather-01	mod	major	0.1.0.0.1.0	0.1.0.0.1.0.3	
# ::edge	headquarters	mod	club	0.1.0.0.1.1	0.1.0.0.1.1.1	
# ::edge	headquarters	mod	new	0.1.0.0.1.1	0.1.0.0.1.1.0	
# ::edge	headquarters	mod	office	0.1.0.0.1.1	0.1.0.0.1.1.2	
# ::edge	headquarters	poss	road	0.1.0.0.1.1	0.1.0.0.1.1.3	
# ::edge	home	time	former	0.1.0.0.1.0.0	0.1.0.0.1.0.0.0	
# ::edge	open-01	ARG0	purpose	0.1.0.0	0.1.0.0.0	
# ::edge	open-01	ARG1	and	0.1.0.0	0.1.0.0.1	
# ::edge	promise-01	ARG0	main	0.1.0.0.1.0.1	0.1.0.0.1.0.1.0	
# ::edge	promise-01	ARG1	gather-01	0.1.0.0.1.0.1	0.1.0.0.1.0	
# ::edge	road	mod	cemetery	0.1.0.0.1.1.3	0.1.0.0.1.1.3.0	
# ::edge	stand-01	ARG1	factory	0	0.0	
# ::edge	stand-01	time	once	0	0.1	
(s / stand-01 
      :ARG1 (f / factory 
            :time (f2 / former)) 
      :time (o / once 
            :ARG0-of (c3 / celebrate-02 
                  :ARG1 (o3 / open-01 
                        :ARG0 (p2 / purpose) 
                        :ARG1 (a / and 
                              :op1 (g / gather-01 
                                    :ARG1 (h2 / home 
                                          :time (f3 / former)) 
                                    :ARG1-of (p / promise-01 
                                          :ARG0 (m2 / main)) 
                                    :mod (i / international) 
                                    :mod (m / major)) 
                              :op2 (h / headquarters 
                                    :mod (n / new) 
                                    :mod (c2 / club) 
                                    :mod (o2 / office) 
                                    :poss (r / road 
                                          :mod (c / cemetery))))))))

# ::snt freedom to travel already promised has given way in the list of priorities to free elections the legalisation of new forum the opposition group and the disbanding of the secret police
# ::tok freedom to travel already promised has given way in the list of priorities to free elections the legalisation of new forum the opposition group and the disbanding of the secret police
# ::alignments 30-31|0.0.0.1 29-30|0.0.0.1.0 24-25|0.0.0.0.0 23-24|0.0.0.0.0.0 22-23|0.0.0.0.0.0.0 20-21|0.0.0.0.1.0 19-20|0.0.0.0.1.0.0 17-18|0.0.0.0.1 15-16|0.0 14-15|0.0.1 12-13|0.1 10-11|0 7-8|0.0.0 6-7|0.0.0.0 4-5|0.0.0.0.2 3-4|0.0.0.0.2.0.0.0 2-3|0.0.0.0.2.0.0 0-1|0.0.0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:55.212
# ::node	0	list-01	10-11
# ::node	0.0	elect-01	15-16
# ::node	0.0.0	way	7-8
# ::node	0.0.0.0	give-01	6-7
# ::node	0.0.0.0.0	and	24-25
# ::node	0.0.0.0.0.0	group	23-24
# ::node	0.0.0.0.0.0.0	oppose-01	22-23
# ::node	0.0.0.0.1	legalize-01	17-18
# ::node	0.0.0.0.1.0	forum	20-21
# ::node	0.0.0.0.1.0.0	new	19-20
# ::node	0.0.0.0.2	promise-01	4-5
# ::node	0.0.0.0.2.0	free-41	0-1
# ::node	0.0.0.0.2.0.0	travel-01	2-3
# ::node	0.0.0.0.2.0.0.0	already	3-4
# ::node	0.0.0.1	police	30-31
# ::node	0.0.0.1.0	secret	29-30
# ::node	0.0.1	free-41	14-15
# ::node	0.1	priority	12-13
# ::root	0	list-01
# ::edge	and	op1	group	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	elect-01	ARG1	way	0.0	0.0.0	
# ::edge	forum	mod	new	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	free-41	ARG1	elect-01	0.0.1	0.0	
# ::edge	free-41	ARG1	travel-01	0.0.0.0.2.0	0.0.0.0.2.0.0	
# ::edge	give-01	ARG0	and	0.0.0.0	0.0.0.0.0	
# ::edge	give-01	ARG1	legalize-01	0.0.0.0	0.0.0.0.1	
# ::edge	give-01	ARG2	way	0.0.0.0	0.0.0	
# ::edge	legalize-01	ARG1	forum	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	list-01	ARG1	elect-01	0	0.0	
# ::edge	list-01	ARG2	priority	0	0.1	
# ::edge	oppose-01	ARG0	group	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	police	mod	secret	0.0.0.1	0.0.0.1.0	
# ::edge	promise-01	ARG1	free-41	0.0.0.0.2	0.0.0.0.2.0	
# ::edge	promise-01	ARG2	give-01	0.0.0.0.2	0.0.0.0	
# ::edge	travel-01	time	already	0.0.0.0.2.0.0	0.0.0.0.2.0.0.0	
# ::edge	way	mod	police	0.0.0	0.0.0.1	
(l2 / list-01 
      :ARG1 (e / elect-01 
            :ARG1 (w / way 
                  :ARG2-of (g2 / give-01 
                        :ARG0 (a / and 
                              :op1 (g / group 
                                    :ARG0-of (o / oppose-01))) 
                        :ARG1 (l / legalize-01 
                              :ARG1 (f / forum 
                                    :mod (n / new))) 
                        :ARG2-of (p3 / promise-01 
                              :ARG1 (f3 / free-41 
                                    :ARG1 (t / travel-01 
                                          :time (a2 / already))))) 
                  :mod (p / police 
                        :mod (s / secret))) 
            :ARG1-of (f2 / free-41)) 
      :ARG2 (p2 / priority))

# ::snt he sought to remove these fears by promises of british support which he was confident would never be called on
# ::tok he sought to remove these fears by promises of british support which he was confident would never be called on
# ::alignments 14-15|0.0.0.1.0.0 12-13|0.0.0.1.0.0.0 10-11|0.0.0.1.0 7-8|0.0.0.1 5-6|0.0.0.0 3-4|0.0.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:55.362
# ::node	0	seek-01	1-2
# ::node	0.0	he	0-1
# ::node	0.0.0	remove-01	3-4
# ::node	0.0.0.0	fear-01	5-6
# ::node	0.0.0.1	promise-01	7-8
# ::node	0.0.0.1.0	support-01	10-11
# ::node	0.0.0.1.0.0	confident-41	14-15
# ::node	0.0.0.1.0.0.0	he	12-13
# ::root	0	seek-01
# ::edge	confident-41	ARG1	he	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	confident-41	ARG2	support-01	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	promise-01	ARG1	support-01	0.0.0.1	0.0.0.1.0	
# ::edge	remove-01	ARG0	he	0.0.0	0.0	
# ::edge	remove-01	ARG1	fear-01	0.0.0	0.0.0.0	
# ::edge	remove-01	ARG2	promise-01	0.0.0	0.0.0.1	
# ::edge	seek-01	ARG0	he	0	0.0	
(s2 / seek-01 
      :ARG0 (h2 / he 
            :ARG0-of (r / remove-01 
                  :ARG1 (f / fear-01) 
                  :ARG2 (p / promise-01 
                        :ARG1 (s / support-01 
                              :ARG2-of (c / confident-41 
                                    :ARG1 (h / he)))))))

# ::snt sir eric sharp chairman of cable and wireless is thought to be keen to stand down though his job may already have been promised to lord young who was ousted from the cabinet in the last reshuffle
# ::tok sir eric sharp chairman of cable and wireless is thought to be keen to stand down though his job may already have been promised to lord young who was ousted from the cabinet in the last reshuffle
# ::alignments 35-36|0.0.0.0 32-33|0.1 29-30|0 26-27|0.0.1 25-26|0.0 23-24|0.0.0 20-21|0.0.0.3 19-20|0.0.0.2.0+0.0.0.2 18-19|0.0.0.1 15-16|0.0.0.4.0 12-13|0.0.0.4 9-10|0.0.0.4.2 7-8|0.0.0.4.2.0.1 6-7|0.0.0.4.2.0 5-6|0.0.0.4.2.0.0 3-4|0.0.0.4.1.1+0.0.0.4.1 2-3|0.0.0.4.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:55.787
# ::node	0	oust-01	29-30
# ::node	0.0	lord	25-26
# ::node	0.0.0	promise-01	23-24
# ::node	0.0.0.0	last	35-36
# ::node	0.0.0.1	job	18-19
# ::node	0.0.0.2	date-entity	19-20
# ::node	0.0.0.2.0	5	19-20
# ::node	0.0.0.3	already	20-21
# ::node	0.0.0.4	keen-41	12-13
# ::node	0.0.0.4.0	down	15-16
# ::node	0.0.0.4.1	have-org-role-91	3-4
# ::node	0.0.0.4.1.0	sharp	2-3
# ::node	0.0.0.4.1.1	chairman	3-4
# ::node	0.0.0.4.2	think-01	9-10
# ::node	0.0.0.4.2.0	and	6-7
# ::node	0.0.0.4.2.0.0	cable	5-6
# ::node	0.0.0.4.2.0.1	wireless	7-8
# ::node	0.0.1	young	26-27
# ::node	0.1	cabinet	32-33
# ::root	0	oust-01
# ::edge	and	op1	cable	0.0.0.4.2.0	0.0.0.4.2.0.0	
# ::edge	and	op2	wireless	0.0.0.4.2.0	0.0.0.4.2.0.1	
# ::edge	and	op3	think-01	0.0.0.4.2.0	0.0.0.4.2	
# ::edge	date-entity	domain	promise-01	0.0.0.2	0.0.0	
# ::edge	date-entity	month	5	0.0.0.2	0.0.0.2.0	
# ::edge	have-org-role-91	ARG1	sharp	0.0.0.4.1	0.0.0.4.1.0	
# ::edge	have-org-role-91	ARG2	chairman	0.0.0.4.1	0.0.0.4.1.1	
# ::edge	keen-41	ARG0	down	0.0.0.4	0.0.0.4.0	
# ::edge	keen-41	ARG1	have-org-role-91	0.0.0.4	0.0.0.4.1	
# ::edge	keen-41	time	promise-01	0.0.0.4	0.0.0	
# ::edge	lord	location	young	0.0	0.0.1	
# ::edge	oust-01	ARG0	lord	0	0.0	
# ::edge	oust-01	ARG1	cabinet	0	0.1	
# ::edge	promise-01	ARG0	last	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	job	0.0.0	0.0.0.1	
# ::edge	promise-01	ARG2	lord	0.0.0	0.0	
# ::edge	promise-01	time	already	0.0.0	0.0.0.3	
# ::edge	think-01	ARG1	keen-41	0.0.0.4.2	0.0.0.4	
(o / oust-01 
      :ARG0 (l2 / lord 
            :ARG2-of (p / promise-01 
                  :ARG0 (l / last) 
                  :ARG1 (j / job) 
                  :domain-of (d / date-entity 
                        :month 5) 
                  :time (a / already) 
                  :time-of (k / keen-41 
                        :ARG0 (d2 / down) 
                        :ARG1 (h / have-org-role-91 
                              :ARG1 (s / sharp) 
                              :ARG2 (c3 / chairman)) 
                        :ARG1-of (t / think-01 
                              :op-of (a2 / and 
                                    :op1 (c2 / cable) 
                                    :op2 (w / wireless))))) 
            :location (y / young)) 
      :ARG1 (c / cabinet))

# ::snt now an australian inventor richard sarich has come up with a new design of engine that promises both lower fuel consumption and less environmental pollution
# ::tok now an australian inventor richard sarich has come up with a new design of engine that promises both lower fuel consumption and less environmental pollution
# ::alignments 24-25|0.0 23-24|0.0.0 22-23|0.0.0.0 21-22|0 20-21|0.1.1 19-20|0.1.1.0 18-19|0.1.1.2 17-18|0.1.1.1 16-17|0.1 14-15|0.1.0.1 12-13|0.1.0 11-12|0.1.0.2 0-1|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:56.114
# ::node	0	and	21-22
# ::node	0.0	pollute-01	24-25
# ::node	0.0.0	environment	23-24
# ::node	0.0.0.0	less	22-23
# ::node	0.1	promise-01	16-17
# ::node	0.1.0	design-01	12-13
# ::node	0.1.0.0	now	0-1
# ::node	0.1.0.1	engine	14-15
# ::node	0.1.0.2	new	11-12
# ::node	0.1.1	consume-01	20-21
# ::node	0.1.1.0	fuel	19-20
# ::node	0.1.1.1	both	17-18
# ::node	0.1.1.2	low	18-19
# ::root	0	and
(a / and 
      :ARG0-of (p / pollute-01 
            :ARG1 (e / environment 
                  :extent (l / less))) 
      :ARG2-of (p2 / promise-01 
            :ARG0 (d / design-01 
                  :ARG0 (n2 / now) 
                  :ARG1 (e2 / engine) 
                  :mod (n / new)) 
            :ARG1 (c / consume-01 
                  :ARG1 (f / fuel) 
                  :mod (b / both) 
                  :mod (l2 / low))))

# ::snt what is her relationship to david mamet  the queens film theatre university square mews belfast is promising a christmas rescue service for all harrassed parents
# ::tok what is her relationship to david mamet the queens film theatre university square mews belfast is promising a christmas rescue service for all harrassed parents
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:56.115
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt i promised my wife id stay until the final curtain ellip
# ::tok i promised my wife id stay until the final curtain ellip
# ::alignments 9-10|0.2.0 8-9|0.2.0.0 6-7|0.3 5-6|0.2 4-5|0.1 3-4|0.0.0.0+0.0.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:56.298
# ::node	0	promise-01	1-2
# ::node	0.0	i	0-1
# ::node	0.0.0	have-rel-role-91	3-4
# ::node	0.0.0.0	wife	3-4
# ::node	0.1	id	4-5
# ::node	0.2	stay-01	5-6
# ::node	0.2.0	curtain	9-10
# ::node	0.2.0.0	final	8-9
# ::node	0.3	until	6-7
# ::root	0	promise-01
# ::edge	curtain	mod	final	0.2.0	0.2.0.0	
# ::edge	have-rel-role-91	ARG1	i	0.0.0	0.0	
# ::edge	have-rel-role-91	ARG2	wife	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG0	i	0	0.0	
# ::edge	promise-01	ARG1	id	0	0.1	
# ::edge	promise-01	ARG2	stay-01	0	0.2	
# ::edge	promise-01	time	until	0	0.3	
# ::edge	stay-01	ARG1	curtain	0.2	0.2.0	
(p / promise-01 
      :ARG0 (i2 / i 
            :ARG1-of (h / have-rel-role-91 
                  :ARG2 (w / wife))) 
      :ARG1 (i / id) 
      :ARG2 (s / stay-01 
            :ARG1 (c / curtain 
                  :mod (f / final))) 
      :time (u / until))

# ::snt promises quite often concern the actions of others to consent to be governed by another is to promise to obey him to consent to his joining the expedition is to promise to provide him with the facilities and the help made available to members of the expedition, finally these examples in which to consent is to promise refute the suggestion that in one case the purpose is to confer rights and in the other to undertake an obligation
# ::tok promises quite often concern the actions of others to consent to be governed by another is to promise to obey him to consent to his joining the expedition is to promise to provide him with the facilities and the help made available to members of the expedition , finally these examples in which to consent is to promise refute the suggestion that in one case the purpose is to confer rights and in the other to undertake an obligation
# ::alignments 78-79|0 76-77|0.1 74-75|0.1.0 71-72|0.0.0.0.0.2.0.1.0.3 70-71|0.0.0.0.0.2.0.1.0.3.0.1 69-70|0.0.0.0.0.2.0.1.0.3.0 66-67|0.0.0.0.0.2.0.1.0.3.0.0 64-65|0.0.0.0.0.2.0.1.0.3.1 60-61|0.0.1.0+0.0.1 57-58|0.0 54-55|0.0.0.0 50-51|0.0.0 48-49|0.0.0.0.0.2.2.0.0.0 43-44|0.0.0.0.0.2.2.0.0.1+0.0.0.0.0.2.2.0.0 41-42|0.0.0.0.0.2.2.0 39-40|0.0.0.0.0.2.2 37-38|0.0.0.0.0.2 36-37|0.0.0.0.0.0 32-33|0.0.0.0.0 30-31|0.0.0.0.0.1 25-26|0.0.0.0.0.2.1.1.0 22-23|0.0.0.0.0.2.1.1 17-18|0.0.0.0.0.2.1 14-15|0.0.0.0.0.2.1.0 12-13|0.0.0.0.0.2.0 9-10|0.0.0.0.0.2.0.1 7-8|0.0.0.0.0.2.0.0 5-6|0.0.0.0.0.2.0.1.1 3-4|0.0.0.0.0.2.0.1.0.1 2-3|0.0.0.0.0.2.0.1.0.0 1-2|0.0.0.0.0.2.0.1.0.2 0-1|0.0.0.0.0.2.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:57.760
# ::node	0	obligate-01	78-79
# ::node	0.0	promise-01	57-58
# ::node	0.0.0	example	50-51
# ::node	0.0.0.0	consent-01	54-55
# ::node	0.0.0.0.0	provide-01	32-33
# ::node	0.0.0.0.0.0	facility	36-37
# ::node	0.0.0.0.0.1	promise-01	30-31
# ::node	0.0.0.0.0.2	and	37-38
# ::node	0.0.0.0.0.2.0	govern-01	12-13
# ::node	0.0.0.0.0.2.0.0	other	7-8
# ::node	0.0.0.0.0.2.0.1	consent-01	9-10
# ::node	0.0.0.0.0.2.0.1.0	promise-01	0-1
# ::node	0.0.0.0.0.2.0.1.0.0	often	2-3
# ::node	0.0.0.0.0.2.0.1.0.1	concern-01	3-4
# ::node	0.0.0.0.0.2.0.1.0.2	quite	1-2
# ::node	0.0.0.0.0.2.0.1.0.3	and	71-72
# ::node	0.0.0.0.0.2.0.1.0.3.0	confer-01	69-70
# ::node	0.0.0.0.0.2.0.1.0.3.0.0	purpose	66-67
# ::node	0.0.0.0.0.2.0.1.0.3.0.1	right	70-71
# ::node	0.0.0.0.0.2.0.1.0.3.1	case	64-65
# ::node	0.0.0.0.0.2.0.1.1	action	5-6
# ::node	0.0.0.0.0.2.1	promise-01	17-18
# ::node	0.0.0.0.0.2.1.0	another	14-15
# ::node	0.0.0.0.0.2.1.1	consent-01	22-23
# ::node	0.0.0.0.0.2.1.1.0	join-01	25-26
# ::node	0.0.0.0.0.2.2	help-01	39-40
# ::node	0.0.0.0.0.2.2.0	available	41-42
# ::node	0.0.0.0.0.2.2.0.0	have-org-role-91	43-44
# ::node	0.0.0.0.0.2.2.0.0.0	final	48-49
# ::node	0.0.0.0.0.2.2.0.0.1	member	43-44
# ::node	0.0.1	thing	60-61
# ::node	0.0.1.0	suggest-01	60-61
# ::node	0.1	undertake-01	76-77
# ::node	0.1.0	other	74-75
# ::root	0	obligate-01
# ::edge	action	purpose	consent-01	0.0.0.0.0.2.0.1.1	0.0.0.0.0.2.0.1	
# ::edge	and	op1	promise-01	0.0.0.0.0.2	0.0.0.0.0.2.1	
# ::edge	and	op1	promise-01	0.0.0.0.0.2.0.1.0.3	0.0.0.0.0.2.0.1.0	
# ::edge	and	op2	confer-01	0.0.0.0.0.2.0.1.0.3	0.0.0.0.0.2.0.1.0.3.0	
# ::edge	and	op2	provide-01	0.0.0.0.0.2	0.0.0.0.0	
# ::edge	and	op3	help-01	0.0.0.0.0.2	0.0.0.0.0.2.2	
# ::edge	and	time	case	0.0.0.0.0.2.0.1.0.3	0.0.0.0.0.2.0.1.0.3.1	
# ::edge	available	domain	have-org-role-91	0.0.0.0.0.2.2.0	0.0.0.0.0.2.2.0.0	
# ::edge	confer-01	ARG0	purpose	0.0.0.0.0.2.0.1.0.3.0	0.0.0.0.0.2.0.1.0.3.0.0	
# ::edge	confer-01	ARG1	right	0.0.0.0.0.2.0.1.0.3.0	0.0.0.0.0.2.0.1.0.3.0.1	
# ::edge	consent-01	ARG1	govern-01	0.0.0.0.0.2.0.1	0.0.0.0.0.2.0	
# ::edge	consent-01	ARG1	join-01	0.0.0.0.0.2.1.1	0.0.0.0.0.2.1.1.0	
# ::edge	consent-01	ARG1	provide-01	0.0.0.0	0.0.0.0.0	
# ::edge	example	purpose	consent-01	0.0.0	0.0.0.0	
# ::edge	govern-01	ARG1	other	0.0.0.0.0.2.0	0.0.0.0.0.2.0.0	
# ::edge	govern-01	manner	and	0.0.0.0.0.2.0	0.0.0.0.0.2	
# ::edge	have-org-role-91	ARG1	final	0.0.0.0.0.2.2.0.0	0.0.0.0.0.2.2.0.0.0	
# ::edge	have-org-role-91	ARG2	member	0.0.0.0.0.2.2.0.0	0.0.0.0.0.2.2.0.0.1	
# ::edge	help-01	ARG1	available	0.0.0.0.0.2.2	0.0.0.0.0.2.2.0	
# ::edge	obligate-01	ARG1	promise-01	0	0.0	
# ::edge	other	domain	undertake-01	0.1.0	0.1	
# ::edge	promise-01	ARG0	example	0.0	0.0.0	
# ::edge	promise-01	ARG0	often	0.0.0.0.0.2.0.1.0	0.0.0.0.0.2.0.1.0.0	
# ::edge	promise-01	ARG1	another	0.0.0.0.0.2.1	0.0.0.0.0.2.1.0	
# ::edge	promise-01	ARG1	concern-01	0.0.0.0.0.2.0.1.0	0.0.0.0.0.2.0.1.0.1	
# ::edge	promise-01	ARG1	thing	0.0	0.0.1	
# ::edge	promise-01	ARG2	consent-01	0.0.0.0.0.2.0.1.0	0.0.0.0.0.2.0.1	
# ::edge	promise-01	ARG2	provide-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	promise-01	ARG3	quite	0.0.0.0.0.2.0.1.0	0.0.0.0.0.2.0.1.0.2	
# ::edge	promise-01	purpose	consent-01	0.0.0.0.0.2.1	0.0.0.0.0.2.1.1	
# ::edge	provide-01	ARG1	facility	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	suggest-01	ARG1	thing	0.0.1.0	0.0.1	
# ::edge	undertake-01	ARG1	obligate-01	0.1	0	
(o / obligate-01 
      :ARG1 (p2 / promise-01 
            :ARG0 (e / example 
                  :purpose (c3 / consent-01 
                        :ARG1 (p3 / provide-01 
                              :ARG1 (f2 / facility) 
                              :ARG2-of (p4 / promise-01) 
                              :op-of (a3 / and 
                                    :manner-of (g / govern-01 
                                          :ARG1 (o3 / other) 
                                          :ARG1-of (c5 / consent-01 
                                                :ARG2-of (p6 / promise-01 
                                                      :ARG0 (o4 / often) 
                                                      :ARG1 (c6 / concern-01) 
                                                      :ARG3 (q / quite) 
                                                      :op-of (a / and 
                                                            :op1 (c / confer-01 
                                                                  :ARG0 (p / purpose) 
                                                                  :ARG1 (r / right)) 
                                                            :time (c2 / case))) 
                                                :purpose-of (a5 / action))) 
                                    :op1 (p5 / promise-01 
                                          :ARG1 (a4 / another) 
                                          :purpose (c4 / consent-01 
                                                :ARG1 (j / join-01))) 
                                    :op2 (h2 / help-01 
                                          :ARG1 (a2 / available 
                                                :domain (h / have-org-role-91 
                                                      :ARG1 (f / final) 
                                                      :ARG2 (m / member)))))))) 
            :ARG1 (t / thing 
                  :ARG1-of (s / suggest-01))) 
      :ARG1-of (u / undertake-01 
            :domain-of (o2 / other)))

# ::snt sundays opening promises to be a colourful and chaotic event with the bank open 12 hours
# ::tok sundays opening promises to be a colourful and chaotic event with the bank open 12 hours
# ::alignments 15-16|0.0.0.0.0+0.0.0.0 14-15|0.0.0 12-13|0.1.0 9-10|0.2 7-8|0.1 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:57.884
# ::node	0	promise-01	2-3
# ::node	0.0	open-01	1-2
# ::node	0.0.0	12	14-15
# ::node	0.0.0.0	temporal-quantity	15-16
# ::node	0.0.0.0.0	hour	15-16
# ::node	0.1	and	7-8
# ::node	0.1.0	bank	12-13
# ::node	0.2	event	9-10
# ::root	0	promise-01
# ::edge	and	op1	bank	0.1	0.1.0	
# ::edge	open-01	ARG1	12	0.0	0.0.0	
# ::edge	promise-01	ARG0	open-01	0	0.0	
# ::edge	promise-01	ARG1	and	0	0.1	
# ::edge	promise-01	ARG2	event	0	0.2	
# ::edge	temporal-quantity	quant	12	0.0.0.0	0.0.0	
# ::edge	temporal-quantity	unit	hour	0.0.0.0	0.0.0.0.0	
(p / promise-01 
      :ARG0 (o / open-01 
            :ARG1 (1 / 12 
                  :quant-of (t / temporal-quantity 
                        :unit (h / hour)))) 
      :ARG1 (a / and 
            :op1 (b / bank)) 
      :ARG2 (e / event))

# ::snt even south africa seemed to have buried the hatchet with swapo and president f w de klerk promised his cooperation in a spirit of goodneighbourliness, but there was less harmony in pretoria itself where the government has promised to investigate allegations that the security police ran a death squad to eliminate political opponents notably the anc
# ::tok even south africa seemed to have buried the hatchet with swapo and president f w de klerk promised his cooperation in a spirit of goodneighbourliness , but there was less harmony in pretoria itself where the government has promised to investigate allegations that the security police ran a death squad to eliminate political opponents notably the anc
# ::alignments 54-55|0.1.1.1.0.2 53-54|0.1.1.1.0.1.0+0.1.1.1.0.1 52-53|0.1.1.1.0.1.1 51-52|0.1.1.1.0 49-50|0.1.1.1.0.0 48-49|0.1.1.1.0.0.0 45-46|0.1.1.0 44-45|0.1.1.0.0 41-42|0.1.1.1 40-41|0.1.1 38-39|0.1 30-31|0.1.0 29-30|0.1.0.0 26-27|0 22-23|0.0.1.1 19-20|0.0.1 17-18|0.0 13-14|0.0.0 12-13|0.0.0.0.0+0.0.0.0 11-12|0.0.1.0.0.0.0 6-7|0.0.1.0.0.0 3-4|0.0.1.0.0 1-3|0.0.1.0.1.0+0.0.1.0.1.1+0.0.1.0.1+0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:59.414
# ::node	0	contrast-01	26-27
# ::node	0.0	promise-01	17-18
# ::node	0.0.0	f	13-14
# ::node	0.0.0.0	have-org-role-91	12-13
# ::node	0.0.0.0.0	president	12-13
# ::node	0.0.1	cooperate-01	19-20
# ::node	0.0.1.0	country	1-3
# ::node	0.0.1.0.0	seem-01	3-4
# ::node	0.0.1.0.0.0	bury-01	6-7
# ::node	0.0.1.0.0.0.0	and	11-12
# ::node	0.0.1.0.1	name	1-3
# ::node	0.0.1.0.1.0	"africa"	1-3
# ::node	0.0.1.0.1.1	"south"	1-3
# ::node	0.0.1.1	spirit	22-23
# ::node	0.1	promise-01	38-39
# ::node	0.1.0	harmony	30-31
# ::node	0.1.0.0	less	29-30
# ::node	0.1.1	investigate-01	40-41
# ::node	0.1.1.0	police	45-46
# ::node	0.1.1.0.0	security	44-45
# ::node	0.1.1.1	allege-01	41-42
# ::node	0.1.1.1.0	eliminate-01	51-52
# ::node	0.1.1.1.0.0	squad	49-50
# ::node	0.1.1.1.0.0.0	die-01	48-49
# ::node	0.1.1.1.0.1	person	53-54
# ::node	0.1.1.1.0.1.0	oppose-01	53-54
# ::node	0.1.1.1.0.1.1	politics	52-53
# ::node	0.1.1.1.0.2	notable	54-55
# ::root	0	contrast-01
# ::edge	allege-01	ARG1	eliminate-01	0.1.1.1	0.1.1.1.0	
# ::edge	bury-01	ARG1	and	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	contrast-01	ARG1	promise-01	0	0.0	
# ::edge	contrast-01	ARG2	promise-01	0	0.1	
# ::edge	cooperate-01	ARG0	country	0.0.1	0.0.1.0	
# ::edge	cooperate-01	ARG1	spirit	0.0.1	0.0.1.1	
# ::edge	country	name	name	0.0.1.0	0.0.1.0.1	
# ::edge	eliminate-01	ARG0	squad	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	eliminate-01	ARG1	person	0.1.1.1.0	0.1.1.1.0.1	
# ::edge	eliminate-01	mod	notable	0.1.1.1.0	0.1.1.1.0.2	
# ::edge	harmony	degree	less	0.1.0	0.1.0.0	
# ::edge	have-org-role-91	ARG1	f	0.0.0.0	0.0.0	
# ::edge	have-org-role-91	ARG2	president	0.0.0.0	0.0.0.0.0	
# ::edge	investigate-01	ARG0	police	0.1.1	0.1.1.0	
# ::edge	investigate-01	ARG1	allege-01	0.1.1	0.1.1.1	
# ::edge	name	op1	"africa"	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	name	op2	"south"	0.0.1.0.1	0.0.1.0.1.1	
# ::edge	oppose-01	ARG0	person	0.1.1.1.0.1.0	0.1.1.1.0.1	
# ::edge	person	mod	politics	0.1.1.1.0.1	0.1.1.1.0.1.1	
# ::edge	police	mod	security	0.1.1.0	0.1.1.0.0	
# ::edge	promise-01	ARG0	f	0.0	0.0.0	
# ::edge	promise-01	ARG1	cooperate-01	0.0	0.0.1	
# ::edge	promise-01	ARG1	harmony	0.1	0.1.0	
# ::edge	promise-01	ARG2	investigate-01	0.1	0.1.1	
# ::edge	seem-01	ARG1	bury-01	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	seem-01	mod	country	0.0.1.0.0	0.0.1.0	
# ::edge	squad	mod	die-01	0.1.1.1.0.0	0.1.1.1.0.0.0	
(c / contrast-01 
      :ARG1 (p5 / promise-01 
            :ARG0 (f / f 
                  :ARG1-of (h2 / have-org-role-91 
                        :ARG2 (p6 / president))) 
            :ARG1 (c2 / cooperate-01 
                  :ARG0 (c3 / country 
                        :mod-of (s4 / seem-01 
                              :ARG1 (b / bury-01 
                                    :ARG1 (a2 / and))) 
                        :name (n2 / name 
                              :op1 "africa" 
                              :op2 "south")) 
                  :ARG1 (s3 / spirit))) 
      :ARG2 (p4 / promise-01 
            :ARG1 (h / harmony 
                  :degree (l / less)) 
            :ARG2 (i / investigate-01 
                  :ARG0 (p3 / police 
                        :mod (s2 / security)) 
                  :ARG1 (a / allege-01 
                        :ARG1 (e / eliminate-01 
                              :ARG0 (s / squad 
                                    :mod (d / die-01)) 
                              :ARG1 (p / person 
                                    :ARG0-of (o / oppose-01) 
                                    :mod (p2 / politics)) 
                              :mod (n / notable))))))

# ::snt youll be completely private there gerrard had promised when he had offered it as a hideout
# ::tok youll be completely private there gerrard had promised when he had offered it as a hideout
# ::alignments 15-16|0 12-13|0.0.1 11-12|0.0 9-10|0.0.0 7-8|0.0.1.0 3-4|0.0.1.0.0 2-3|0.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:59.477
# ::node	0	hide-02	15-16
# ::node	0.0	offer-01	11-12
# ::node	0.0.0	he	9-10
# ::node	0.0.1	it	12-13
# ::node	0.0.1.0	promise-01	7-8
# ::node	0.0.1.0.0	private	3-4
# ::node	0.0.1.0.0.0	complete	2-3
# ::root	0	hide-02
# ::edge	hide-02	ARG1	offer-01	0	0.0	
# ::edge	offer-01	ARG0	he	0.0	0.0.0	
# ::edge	offer-01	ARG1	it	0.0	0.0.1	
# ::edge	private	manner	complete	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	promise-01	ARG0	private	0.0.1.0	0.0.1.0.0	
# ::edge	promise-01	ARG1	it	0.0.1.0	0.0.1	
(h / hide-02 
      :ARG1 (o / offer-01 
            :ARG0 (h2 / he) 
            :ARG1 (i / it 
                  :ARG1-of (p / promise-01 
                        :ARG0 (p2 / private 
                              :manner (c / complete))))))

# ::snt ill come back ellip  i promise ellip
# ::tok ill come back ellip i promise ellip
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:59.478
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt   dorothea could not bring herself to enquire further but was happy that the matter was in his hands and she only promised to visit kathleen lavender that day twelve miles away in the hospital of the cross
# ::tok dorothea could not bring herself to enquire further but was happy that the matter was in his hands and she only promised to visit kathleen lavender that day twelve miles away in the hospital of the cross
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:59.478
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt mr singh who has promised to give priority to tackling sikh extremism will visit the golden temple the sikhs holiest shrine with mr lal today reuter reports
# ::tok mr singh who has promised to give priority to tackling sikh extremism will visit the golden temple the sikhs holiest shrine with mr lal today reuter reports
# ::alignments 26-27|0.2 24-25|0.2.0 20-21|0.2.1 16-17|0.1 15-16|0.1.0 13-14|0 11-12|0.0 7-8|0.2.1.0.0 6-7|0.2.1.0 4-5|0.2.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:59.634
# ::node	0	visit-01	13-14
# ::node	0.0	extremism	11-12
# ::node	0.1	temple	16-17
# ::node	0.1.0	gold	15-16
# ::node	0.2	report-01	26-27
# ::node	0.2.0	today	24-25
# ::node	0.2.1	shrine	20-21
# ::node	0.2.1.0	give-01	6-7
# ::node	0.2.1.0.0	priority	7-8
# ::node	0.2.1.0.1	promise-01	4-5
# ::root	0	visit-01
# ::edge	give-01	ARG1	shrine	0.2.1.0	0.2.1	
# ::edge	give-01	ARG2	priority	0.2.1.0	0.2.1.0.0	
# ::edge	promise-01	ARG2	give-01	0.2.1.0.1	0.2.1.0	
# ::edge	report-01	ARG0	today	0.2	0.2.0	
# ::edge	report-01	ARG1	visit-01	0.2	0	
# ::edge	shrine	topic	report-01	0.2.1	0.2	
# ::edge	temple	mod	gold	0.1	0.1.0	
# ::edge	visit-01	ARG0	extremism	0	0.0	
# ::edge	visit-01	ARG1	temple	0	0.1	
(v / visit-01 
      :ARG0 (e / extremism) 
      :ARG1 (t2 / temple 
            :mod (g / gold)) 
      :ARG1-of (r / report-01 
            :ARG0 (t / today) 
            :topic-of (s / shrine 
                  :ARG1-of (g2 / give-01 
                        :ARG2 (p / priority) 
                        :ARG2-of (p2 / promise-01)))))

# ::snt that is why they coexist and one has the power to promise if and only if one has the right to do so
# ::tok that is why they coexist and one has the power to promise if and only if one has the right to do so
# ::alignments 22-23|0.1 14-15|0.3 13-14|0.2 11-12|0 9-10|0.0 5-6|0.2.0 4-5|0.2.0.0 3-4|0.2.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:31:59.673
# ::node	0	promise-01	11-12
# ::node	0.0	power	9-10
# ::node	0.1	so	22-23
# ::node	0.2	and	13-14
# ::node	0.2.0	and	5-6
# ::node	0.2.0.0	coexist-01	4-5
# ::node	0.2.0.0.0	they	3-4
# ::node	0.3	only	14-15
# ::root	0	promise-01
# ::edge	and	op1	and	0.2	0.2.0	
# ::edge	and	op1	coexist-01	0.2.0	0.2.0.0	
# ::edge	and	op2	promise-01	0.2	0	
# ::edge	coexist-01	ARG1	they	0.2.0.0	0.2.0.0.0	
# ::edge	promise-01	ARG0	power	0	0.0	
# ::edge	promise-01	ARG1	so	0	0.1	
# ::edge	promise-01	time	only	0	0.3	
(p / promise-01 
      :ARG0 (p2 / power) 
      :ARG1 (s / so) 
      :op-of (a / and 
            :op1 (a2 / and 
                  :op1 (c / coexist-01 
                        :ARG1 (t / they)))) 
      :time (o / only))

# ::snt the sellotape to basildon bond stationery group drg in a move to rally support against the 697m bid from roland franklins pembridge investments is promising a profits forecast a statement on future dividend policy and further details of its property profits
# ::tok the sellotape to basildon bond stationery group drg in a move to rally support against the 697m bid from roland franklins pembridge investments is promising a profits forecast a statement on future dividend policy and further details of its property profits
# ::alignments 40-41|0.0.0.0.2.0 39-40|0.0.0.0.2.0.0 36-37|0.0.0.0.2 35-36|0.0.0.0.2.1 34-35|0.0.0.0 33-34|0.0.0.0.1 31-32|0.0.0.0.1.0 29-30|0.0.0.0.0 27-28|0.0.0.0.0.1 26-27|0.0.0.0.0.1.0 24-25|0.0.0.0.0.1.0.0 22-23|0.0.0.0.0.1.0.0.0 17-18|0 13-14|0.0.0 12-13|0.0 6-7|0.0.0.0.0.0 5-6|0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:00.235
# ::node	0	bid-01	17-18
# ::node	0.0	rally-01	12-13
# ::node	0.0.0	support-01	13-14
# ::node	0.0.0.0	and	34-35
# ::node	0.0.0.0.0	state-01	29-30
# ::node	0.0.0.0.0.0	group	6-7
# ::node	0.0.0.0.0.0.0	stationery	5-6
# ::node	0.0.0.0.0.1	forecast-01	27-28
# ::node	0.0.0.0.0.1.0	profit-01	26-27
# ::node	0.0.0.0.0.1.0.0	promise-01	24-25
# ::node	0.0.0.0.0.1.0.0.0	invest-01	22-23
# ::node	0.0.0.0.1	policy	33-34
# ::node	0.0.0.0.1.0	future	31-32
# ::node	0.0.0.0.2	detail-01	36-37
# ::node	0.0.0.0.2.0	profit-01	40-41
# ::node	0.0.0.0.2.0.0	property	39-40
# ::node	0.0.0.0.2.1	further	35-36
# ::root	0	bid-01
(b / bid-01 
      :ARG2-of (r / rally-01 
            :ARG1 (s2 / support-01 
                  :op-of (a / and 
                        :ARG1-of (s / state-01 
                              :ARG0 (g / group 
                                    :mod (s3 / stationery)) 
                              :ARG1-of (f3 / forecast-01 
                                    :ARG0 (p4 / profit-01 
                                          :ARG1-of (p5 / promise-01 
                                                :ARG0 (i / invest-01))))) 
                        :op1 (p3 / policy 
                              :time (f2 / future)) 
                        :op2 (d / detail-01 
                              :ARG1 (p / profit-01 
                                    :ARG0 (p2 / property)) 
                              :degree (f / further))))))

# ::snt the prospect of running highspeed trains overground promises to provoke an even greater outcry
# ::tok the prospect of running highspeed trains overground promises to provoke an even greater outcry
# ::alignments 13-14|0.1.0 12-13|0.1.0.0 9-10|0.1 7-8|0 5-6|0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:00.255
# ::node	0	promise-01	7-8
# ::node	0.0	prospect	1-2
# ::node	0.0.0	train	5-6
# ::node	0.1	provoke-01	9-10
# ::node	0.1.0	outcry	13-14
# ::node	0.1.0.0	great	12-13
# ::root	0	promise-01
# ::edge	outcry	mod	great	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG0	prospect	0	0.0	
# ::edge	promise-01	ARG1	provoke-01	0	0.1	
# ::edge	provoke-01	ARG1	outcry	0.1	0.1.0	
# ::edge	train	mod	prospect	0.0.0	0.0	
(p2 / promise-01 
      :ARG0 (p3 / prospect 
            :mod-of (t / train)) 
      :ARG1 (p / provoke-01 
            :ARG1 (o / outcry 
                  :mod (g / great))))

# ::snt if some of you have had bad experiences with other amway people let me promise that i am not like that
# ::tok if some of you have had bad experiences with other amway people let me promise that i am not like that
# ::alignments 16-17|0.2.1.0 14-15|0 12-13|0.2 9-10|0.0 7-8|0.2.1 6-7|0.2.1.1 3-4|0.2.0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:00.356
# ::node	0	promise-01	14-15
# ::node	0.0	other	9-10
# ::node	0.1	some	1-2
# ::node	0.2	let-01	12-13
# ::node	0.2.0	you	3-4
# ::node	0.2.1	experience-01	7-8
# ::node	0.2.1.0	i	16-17
# ::node	0.2.1.1	bad	6-7
# ::root	0	promise-01
# ::edge	experience-01	ARG0	i	0.2.1	0.2.1.0	
# ::edge	experience-01	mod	bad	0.2.1	0.2.1.1	
# ::edge	let-01	ARG0	you	0.2	0.2.0	
# ::edge	let-01	ARG1	promise-01	0.2	0	
# ::edge	let-01	ARG2	experience-01	0.2	0.2.1	
# ::edge	promise-01	ARG0	other	0	0.0	
# ::edge	promise-01	ARG1	some	0	0.1	
(p / promise-01 
      :ARG0 (o / other) 
      :ARG1 (s / some) 
      :ARG1-of (l / let-01 
            :ARG0 (y / you) 
            :ARG2 (e / experience-01 
                  :ARG0 (i / i) 
                  :mod (b / bad))))

# ::snt resentment at the rich has helped propel the populist mr menem and his peronist movement to power but also promises to make his first days in office testing ones
# ::tok resentment at the rich has helped propel the populist mr menem and his peronist movement to power but also promises to make his first days in office testing ones
# ::alignments 28-29|0.0.1.0.2.1 27-28|0.0.1.0.2 26-27|0.0.1.0.2.0 24-25|0.0.0.0.0+0.0.0.0 19-20|0.1 18-19|0.1.0 17-18|0 16-17|0.0.1.0.1 14-15|0.0.1.0.0 11-12|0.0.1.0 6-7|0.0.1 5-6|0.0 3-4|0.0.0.1 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:00.759
# ::node	0	contrast-01	17-18
# ::node	0.0	help-01	5-6
# ::node	0.0.0	resent-01	0-1
# ::node	0.0.0.0	temporal-quantity	24-25
# ::node	0.0.0.0.0	day	24-25
# ::node	0.0.0.1	rich	3-4
# ::node	0.0.1	propel-01	6-7
# ::node	0.0.1.0	and	11-12
# ::node	0.0.1.0.0	movement	14-15
# ::node	0.0.1.0.1	power	16-17
# ::node	0.0.1.0.2	test-01	27-28
# ::node	0.0.1.0.2.0	office	26-27
# ::node	0.0.1.0.2.1	one	28-29
# ::node	0.1	promise-01	19-20
# ::node	0.1.0	also	18-19
# ::root	0	contrast-01
# ::edge	and	op1	movement	0.0.1.0	0.0.1.0.0	
# ::edge	and	op2	power	0.0.1.0	0.0.1.0.1	
# ::edge	and	op3	test-01	0.0.1.0	0.0.1.0.2	
# ::edge	contrast-01	ARG1	help-01	0	0.0	
# ::edge	contrast-01	ARG2	promise-01	0	0.1	
# ::edge	help-01	ARG0	resent-01	0.0	0.0.0	
# ::edge	help-01	ARG1	propel-01	0.0	0.0.1	
# ::edge	one	mod	test-01	0.0.1.0.2.1	0.0.1.0.2	
# ::edge	promise-01	mod	also	0.1	0.1.0	
# ::edge	propel-01	ARG1	and	0.0.1	0.0.1.0	
# ::edge	resent-01	ARG0	temporal-quantity	0.0.0	0.0.0.0	
# ::edge	resent-01	ARG1	rich	0.0.0	0.0.0.1	
# ::edge	temporal-quantity	unit	day	0.0.0.0	0.0.0.0.0	
# ::edge	test-01	ARG1	office	0.0.1.0.2	0.0.1.0.2.0	
(c / contrast-01 
      :ARG1 (h / help-01 
            :ARG0 (r2 / resent-01 
                  :ARG0 (t2 / temporal-quantity 
                        :unit (d / day)) 
                  :ARG1 (r / rich)) 
            :ARG1 (p3 / propel-01 
                  :ARG1 (a2 / and 
                        :op1 (m / movement) 
                        :op2 (p2 / power) 
                        :op3 (t / test-01 
                              :ARG1 (o2 / office) 
                              :mod-of (o / one))))) 
      :ARG2 (p / promise-01 
            :mod (a / also)))

# ::snt the elfin figure with a dark prettiness that promised to bloom into beauty
# ::tok the elfin figure with a dark prettiness that promised to bloom into beauty
# ::alignments 12-13|0 8-9|0.0 5-6|0.0.0 2-3|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:00.771
# ::node	0	beauty	12-13
# ::node	0.0	promise-01	8-9
# ::node	0.0.0	dark	5-6
# ::node	0.0.1	figure	2-3
# ::root	0	beauty
(b / beauty 
      :ARG1-of (p / promise-01 
            :ARG0 (d / dark) 
            :op-of (f / figure)))

# ::snt   the board has promised not to dilute the butter or the 1500 tonnes of powder
# ::tok the board has promised not to dilute the butter or the 1500 tonnes of powder
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:00.772
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt waless instant reaction a try by arthur emyr and subsequent steady improvement bringing wellcrafted tries for emyr and robert jones promised more than was later fulfilled
# ::tok waless instant reaction a try by arthur emyr and subsequent steady improvement bringing wellcrafted tries for emyr and robert jones promised more than was later fulfilled
# ::alignments 25-26|0 24-25|0.1 20-21|0.0 17-18|0.0.0 14-15|0.0.0.0 12-13|0.0.0.0.0 11-12|0.0.0.0.0.0 10-11|0.0.0.0.0.0.0 9-10|0.0.0.0.0.0.0.0 8-9|0.0.0.0.0.0.1 4-5|0.0.0.0.0.0.1.0 2-3|0.0.0.0.0.0.1.0.0 1-2|0.0.0.0.0.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:01.082
# ::node	0	fulfill-01	25-26
# ::node	0.0	promise-01	20-21
# ::node	0.0.0	and	17-18
# ::node	0.0.0.0	try-01	14-15
# ::node	0.0.0.0.0	bring-01	12-13
# ::node	0.0.0.0.0.0	improve-01	11-12
# ::node	0.0.0.0.0.0.0	steady	10-11
# ::node	0.0.0.0.0.0.0.0	subsequent	9-10
# ::node	0.0.0.0.0.0.1	and	8-9
# ::node	0.0.0.0.0.0.1.0	try-01	4-5
# ::node	0.0.0.0.0.0.1.0.0	react-01	2-3
# ::node	0.0.0.0.0.0.1.0.0.0	instant	1-2
# ::node	0.1	late	24-25
# ::root	0	fulfill-01
# ::edge	and	op1	improve-01	0.0.0.0.0.0.1	0.0.0.0.0.0	
# ::edge	bring-01	ARG0	improve-01	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	bring-01	ARG1	try-01	0.0.0.0.0	0.0.0.0	
# ::edge	fulfill-01	ARG1	promise-01	0	0.0	
# ::edge	fulfill-01	time	late	0	0.1	
# ::edge	improve-01	mod	steady	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	promise-01	ARG1	and	0.0	0.0.0	
# ::edge	react-01	ARG1	try-01	0.0.0.0.0.0.1.0.0	0.0.0.0.0.0.1.0	
# ::edge	react-01	mod	instant	0.0.0.0.0.0.1.0.0	0.0.0.0.0.0.1.0.0.0	
# ::edge	steady	degree	subsequent	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	try-01	ARG0	and	0.0.0.0	0.0.0	
# ::edge	try-01	ARG1	and	0.0.0.0.0.0.1.0	0.0.0.0.0.0.1	
(f / fulfill-01 
      :ARG1 (p / promise-01 
            :ARG1 (a / and 
                  :ARG0-of (t / try-01 
                        :ARG1-of (b / bring-01 
                              :ARG0 (i / improve-01 
                                    :mod (s / steady 
                                          :degree (s2 / subsequent)) 
                                    :op-of (a2 / and 
                                          :ARG1-of (t2 / try-01 
                                                :ARG1-of (r / react-01 
                                                      :mod (i2 / instant))))))))) 
      :time (l / late))

# ::snt the launch of the new lexus range from toyota which is being sold entirely separately from traditional toyota dealers already promises to be a great success
# ::tok the launch of the new lexus range from toyota which is being sold entirely separately from traditional toyota dealers already promises to be a great success
# ::alignments 25-26|0.1 24-25|0.1.2 20-21|0 19-20|0.2 18-19|0.1.1.1+0.1.1 16-17|0.1.1.2 14-15|0.1.1.0.0.0 13-14|0.1.1.0.0 12-13|0.1.1.0 6-7|0.0.0 4-5|0.1.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:01.296
# ::node	0	promise-01	20-21
# ::node	0.0	launch-01	1-2
# ::node	0.0.0	range-01	6-7
# ::node	0.1	succeed-01	25-26
# ::node	0.1.0	new	4-5
# ::node	0.1.1	person	18-19
# ::node	0.1.1.0	sell-01	12-13
# ::node	0.1.1.0.0	entire	13-14
# ::node	0.1.1.0.0.0	separate-01	14-15
# ::node	0.1.1.1	deal-01	18-19
# ::node	0.1.1.2	tradition	16-17
# ::node	0.1.2	great	24-25
# ::node	0.2	already	19-20
# ::root	0	promise-01
# ::edge	deal-01	ARG0	person	0.1.1.1	0.1.1	
# ::edge	launch-01	ARG1	range-01	0.0	0.0.0	
# ::edge	person	mod	tradition	0.1.1	0.1.1.2	
# ::edge	promise-01	ARG0	launch-01	0	0.0	
# ::edge	promise-01	ARG1	succeed-01	0	0.1	
# ::edge	promise-01	manner	already	0	0.2	
# ::edge	sell-01	ARG0	person	0.1.1.0	0.1.1	
# ::edge	sell-01	ARG1	entire	0.1.1.0	0.1.1.0.0	
# ::edge	separate-01	ARG1	entire	0.1.1.0.0.0	0.1.1.0.0	
# ::edge	succeed-01	ARG0	new	0.1	0.1.0	
# ::edge	succeed-01	ARG1	person	0.1	0.1.1	
# ::edge	succeed-01	mod	great	0.1	0.1.2	
(p / promise-01 
      :ARG0 (l / launch-01 
            :ARG1 (r / range-01)) 
      :ARG1 (s / succeed-01 
            :ARG0 (n / new) 
            :ARG1 (p2 / person 
                  :ARG0-of (s3 / sell-01 
                        :ARG1 (e / entire 
                              :ARG1-of (s2 / separate-01))) 
                  :ARG0-of (d / deal-01) 
                  :mod (t / tradition)) 
            :mod (g / great)) 
      :manner (a / already))

# ::snt it has also promised to review the ban on television advertising of condoms and the high import duty imposed on them
# ::tok it has also promised to review the ban on television advertising of condoms and the high import duty imposed on them
# ::alignments 18-19|0.0.1.0.0 17-18|0.0.1.0.0.0 16-17|0.0.1.0.0.0.0 15-16|0.0.1.0.0.0.0.0 13-14|0.0.1.0 9-10|0.0.1.1 7-8|0.0.1 5-6|0.0 3-4|0 2-3|0.1 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:01.347
# ::node	0	promise-01	3-4
# ::node	0.0	review-01	5-6
# ::node	0.0.0	it	0-1
# ::node	0.0.1	ban-01	7-8
# ::node	0.0.1.0	and	13-14
# ::node	0.0.1.0.0	impose-01	18-19
# ::node	0.0.1.0.0.0	duty	17-18
# ::node	0.0.1.0.0.0.0	import-01	16-17
# ::node	0.0.1.0.0.0.0.0	high	15-16
# ::node	0.0.1.1	television	9-10
# ::node	0.1	also	2-3
# ::root	0	promise-01
# ::edge	ban-01	ARG1	and	0.0.1	0.0.1.0	
# ::edge	ban-01	source	television	0.0.1	0.0.1.1	
# ::edge	duty	mod	import-01	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	import-01	ARG2	high	0.0.1.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	impose-01	ARG1	duty	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	impose-01	ARG2	and	0.0.1.0.0	0.0.1.0	
# ::edge	promise-01	ARG2	review-01	0	0.0	
# ::edge	promise-01	mod	also	0	0.1	
# ::edge	review-01	ARG0	it	0.0	0.0.0	
# ::edge	review-01	ARG1	ban-01	0.0	0.0.1	
(p / promise-01 
      :ARG2 (r / review-01 
            :ARG0 (i3 / it) 
            :ARG1 (b / ban-01 
                  :ARG1 (a / and 
                        :ARG2-of (i / impose-01 
                              :ARG1 (d / duty 
                                    :mod (i2 / import-01 
                                          :ARG2 (h / high))))) 
                  :source (t / television))) 
      :mod (a2 / also))

# ::snt dale duesing and joan rodgers as figaro and susanna are also a youthful inexperienced pair she certainly promises to be memorable
# ::tok dale duesing and joan rodgers as figaro and susanna are also a youthful inexperienced pair she certainly promises to be memorable
# ::alignments 17-18|0.0.2 16-17|0.0.2.1 15-16|0.0.2.0 13-14|0.0.0.0+0.0.0 10-11|0.1 7-8|0 2-3|0.0 0-1|0.0.1.0.0+0.0.1.0+0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:01.410
# ::node	0	and	7-8
# ::node	0.0	and	2-3
# ::node	0.0.0	experience-01	13-14
# ::node	0.0.0.0	-	13-14
# ::node	0.0.1	person	0-1
# ::node	0.0.1.0	name	0-1
# ::node	0.0.1.0.0	"Dale"	0-1
# ::node	0.0.2	promise-01	17-18
# ::node	0.0.2.0	she	15-16
# ::node	0.0.2.1	certain	16-17
# ::node	0.1	also	10-11
# ::root	0	and
# ::edge	and	location	and	0.0	0	
# ::edge	and	op1	also	0	0.1	
# ::edge	and	op1	person	0.0	0.0.1	
# ::edge	and	op2	promise-01	0.0	0.0.2	
# ::edge	experience-01	ARG1	and	0.0.0	0.0	
# ::edge	experience-01	polarity	-	0.0.0	0.0.0.0	
# ::edge	name	op1	"Dale"	0.0.1.0	0.0.1.0.0	
# ::edge	person	name	name	0.0.1	0.0.1.0	
# ::edge	promise-01	ARG0	she	0.0.2	0.0.2.0	
# ::edge	promise-01	mod	certain	0.0.2	0.0.2.1	
(a2 / and 
      :location-of (a3 / and 
            :ARG1-of (e / experience-01 
                  :polarity -) 
            :op1 (p2 / person 
                  :name (n / name 
                        :op1 "Dale")) 
            :op2 (p / promise-01 
                  :ARG0 (s / she) 
                  :mod (c / certain))) 
      :op1 (a / also))

# ::snt you think i cant promise but i can i know exactly how
# ::tok you think i cant promise but i can i know exactly how
# ::alignments 10-11|0.1.1 9-10|0.1 8-9|0.1.3 7-8|0.1.2 6-7|0.0.0 5-6|0 4-5|0.0 2-3|0.1.0 1-2|0.1.2.0 0-1|0.1.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:01.709
# ::node	0	contrast-01	5-6
# ::node	0.0	promise-01	4-5
# ::node	0.0.0	i	6-7
# ::node	0.1	know-01	9-10
# ::node	0.1.0	i	2-3
# ::node	0.1.1	exact	10-11
# ::node	0.1.2	possible	7-8
# ::node	0.1.2.0	think-01	1-2
# ::node	0.1.2.0.0	you	0-1
# ::node	0.1.3	i	8-9
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	promise-01	0	0.0	
# ::edge	contrast-01	ARG2	know-01	0	0.1	
# ::edge	know-01	ARG0	i	0.1	0.1.0	
# ::edge	know-01	ARG1	exact	0.1	0.1.1	
# ::edge	know-01	manner	i	0.1	0.1.3	
# ::edge	possible	domain	know-01	0.1.2	0.1	
# ::edge	promise-01	ARG0	i	0.0	0.0.0	
# ::edge	think-01	ARG0	you	0.1.2.0	0.1.2.0.0	
# ::edge	think-01	ARG1	possible	0.1.2.0	0.1.2	
(c / contrast-01 
      :ARG1 (p2 / promise-01 
            :ARG0 (i2 / i)) 
      :ARG2 (k / know-01 
            :ARG0 (i3 / i) 
            :ARG1 (e / exact) 
            :domain-of (p / possible 
                  :ARG1-of (t / think-01 
                        :ARG0 (y / you))) 
            :manner (i / i)))

# ::snt 9833 promise-v 801456 Promising 537527
# ::tok 9833 promise - v 801456 Promising 537527
# ::alignments 6-7|0.0.2+0.0.1+0.0.0+0.0 4-5|0.1.0.2+0.1.0.1+0.1.0.0+0.1.0 1-2|0 0-1|0.1.1+0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:01.741
# ::node	0	promise-01	1-2
# ::node	0.0	date-entity	6-7
# ::node	0.0.0	27	6-7
# ::node	0.0.1	75	6-7
# ::node	0.0.2	53	6-7
# ::node	0.1	date-entity	0-1
# ::node	0.1.0	date-entity	4-5
# ::node	0.1.0.0	56	4-5
# ::node	0.1.0.1	14	4-5
# ::node	0.1.0.2	80	4-5
# ::node	0.1.1	9833	0-1
# ::root	0	promise-01
# ::edge	date-entity	day	27	0.0	0.0.0	
# ::edge	date-entity	day	56	0.1.0	0.1.0.0	
# ::edge	date-entity	month	14	0.1.0	0.1.0.1	
# ::edge	date-entity	month	75	0.0	0.0.1	
# ::edge	date-entity	name	date-entity	0.1	0.1.0	
# ::edge	date-entity	year	53	0.0	0.0.2	
# ::edge	date-entity	year	80	0.1.0	0.1.0.2	
# ::edge	date-entity	year	9833	0.1	0.1.1	
# ::edge	promise-01	ARG1	date-entity	0	0.0	
# ::edge	promise-01	time	date-entity	0	0.1	
(p / promise-01 
      :ARG1 (d / date-entity 
            :day 27 
            :month 75 
            :year 53) 
      :time (d3 / date-entity 
            :name (d2 / date-entity 
                  :day 56 
                  :month 14 
                  :year 80) 
            :year 9833))

# ::snt  His best reporters were getting `instructions to give it their highest priority."  Promising to keep Tiny Rowland informed of further progress, Trelford ended: `Your continuing interest and encouragement are much appreciated at the Observer."
# ::tok His best reporters were getting ' instructions to give it their highest priority . " Promising to keep Tiny Rowland informed of further progress , Trelford ended : ' Your continuing interest and encouragement are much appreciated at the Observer . "
# ::alignments 36-37|0.0.1 35-36|0.0.0.0 33-34|0.0.0 32-33|0.0.5.1 31-32|0.0 30-31|0.0.5 26-27|0.0.2 23-24|0.0.4 22-23|0.0.4.0 20-21|0 12-13|0.0.3.2.1 11-12|0.0.3.2.0+0.0.3.2 9-10|0.0.5.0 8-9|0.0.3 6-7|0.0.3.0 2-3|0.0.3.1+0.0.3.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:03.210
# ::node	0	inform-01	20-21
# ::node	0.0	interest-01	31-32
# ::node	0.0.0	encourage-01	33-34
# ::node	0.0.0.0	much	35-36
# ::node	0.0.1	appreciate-02	36-37
# ::node	0.0.2	end-01	26-27
# ::node	0.0.3	give-01	8-9
# ::node	0.0.3.0	instruction	6-7
# ::node	0.0.3.1	report-01	2-3
# ::node	0.0.3.1.0	person	2-3
# ::node	0.0.3.2	high	11-12
# ::node	0.0.3.2.0	most	11-12
# ::node	0.0.3.2.1	priority	12-13
# ::node	0.0.4	progress-01	23-24
# ::node	0.0.4.0	further	22-23
# ::node	0.0.5	continue-01	30-31
# ::node	0.0.5.0	it	9-10
# ::node	0.0.5.1	and	32-33
# ::root	0	inform-01
# ::edge	and	op1	continue-01	0.0.5.1	0.0.5	
# ::edge	continue-01	ARG0	it	0.0.5	0.0.5.0	
# ::edge	continue-01	ARG1	interest-01	0.0.5	0.0	
# ::edge	encourage-01	ARG0	interest-01	0.0.0	0.0	
# ::edge	encourage-01	ARG1	much	0.0.0	0.0.0.0	
# ::edge	end-01	ARG1	interest-01	0.0.2	0.0	
# ::edge	give-01	ARG0	instruction	0.0.3	0.0.3.0	
# ::edge	give-01	ARG1	interest-01	0.0.3	0.0	
# ::edge	give-01	ARG2	high	0.0.3	0.0.3.2	
# ::edge	high	degree	most	0.0.3.2	0.0.3.2.0	
# ::edge	inform-01	ARG1	interest-01	0	0.0	
# ::edge	interest-01	ARG1	appreciate-02	0.0	0.0.1	
# ::edge	priority	mod	high	0.0.3.2.1	0.0.3.2	
# ::edge	progress-01	ARG0	further	0.0.4	0.0.4.0	
# ::edge	progress-01	ARG1	interest-01	0.0.4	0.0	
# ::edge	report-01	ARG0	person	0.0.3.1	0.0.3.1.0	
# ::edge	report-01	ARG1	give-01	0.0.3.1	0.0.3	
(i2 / inform-01 
      :ARG1 (i / interest-01 
            :ARG0-of (e / encourage-01 
                  :ARG1 (m / much)) 
            :ARG1 (a / appreciate-02) 
            :ARG1-of (e2 / end-01) 
            :ARG1-of (g / give-01 
                  :ARG0 (i4 / instruction) 
                  :ARG1-of (r / report-01 
                        :ARG0 (p3 / person)) 
                  :ARG2 (h / high 
                        :degree (m2 / most) 
                        :mod-of (p2 / priority))) 
            :ARG1-of (p / progress-01 
                  :ARG0 (f / further)) 
            :ARG1-of (c / continue-01 
                  :ARG0 (i3 / it) 
                  :op-of (a2 / and))))

# ::snt EMPTY_SENTENCE
# ::tok EMPTY_SENTENCE
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:03.211
# ::node	0	amr-empty	0-1
# ::root	0	amr-empty
(a / amr-empty)

# ::snt wellington schools physically small side continue to prosper losing only to st pauls 84 and their match against unbeaten epsom promises much
# ::tok wellington schools physically small side continue to prosper losing only to st pauls 84 and their match against unbeaten epsom promises much
# ::alignments 21-22|0.1.2 20-21|0.1.1 16-17|0.1 14-15|0 13-14|0.1.0 9-10|0.0.1 8-9|0.0 5-6|0.0.0 4-5|0.0.0.0 3-4|0.0.0.0.1 2-3|0.1.1.0 1-2|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:03.332
# ::node	0	and	14-15
# ::node	0.0	lose-02	8-9
# ::node	0.0.0	continue-01	5-6
# ::node	0.0.0.0	side	4-5
# ::node	0.0.0.0.0	school	1-2
# ::node	0.0.0.0.1	small	3-4
# ::node	0.0.1	only	9-10
# ::node	0.1	match-01	16-17
# ::node	0.1.0	84	13-14
# ::node	0.1.1	promise-01	20-21
# ::node	0.1.1.0	physical	2-3
# ::node	0.1.2	much	21-22
# ::root	0	and
# ::edge	and	op1	match-01	0	0.1	
# ::edge	continue-01	ARG1	side	0.0.0	0.0.0.0	
# ::edge	continue-01	ARG2	lose-02	0.0.0	0.0	
# ::edge	lose-02	ARG1	and	0.0	0	
# ::edge	lose-02	mod	only	0.0	0.0.1	
# ::edge	match-01	ARG0	84	0.1	0.1.0	
# ::edge	match-01	ARG1	promise-01	0.1	0.1.1	
# ::edge	match-01	time	much	0.1	0.1.2	
# ::edge	promise-01	ARG1	physical	0.1.1	0.1.1.0	
# ::edge	school	location	side	0.0.0.0.0	0.0.0.0	
# ::edge	side	mod	small	0.0.0.0	0.0.0.0.1	
(a / and 
      :ARG1-of (l / lose-02 
            :ARG2-of (c / continue-01 
                  :ARG1 (s / side 
                        :location-of (s3 / school) 
                        :mod (s2 / small))) 
            :mod (o / only)) 
      :op1 (m2 / match-01 
            :ARG0 84 
            :ARG1 (p / promise-01 
                  :ARG1 (p2 / physical)) 
            :time (m / much)))

# ::snt with the greatly increased numbers of backpackers and the rise of phenomena such as khao san road cheap independent travel in asia in the 1990s promises to be less like a weary forced march and more like an extended summer holiday
# ::tok with the greatly increased numbers of backpackers and the rise of phenomena such as khao san road cheap independent travel in asia in the 1990s promises to be less like a weary forced march and more like an extended summer holiday
# ::alignments 40-41|0.2.0 39-40|0.2.0.0.0 38-39|0.2.0.0 34-35|0.2 33-34|0.0.0.0+0.0.0 32-33|0.0 28-29|0.1.1 25-26|0.1.0.0 24-25|0.1.0.0.0 21-22|0.2.1.1.2.0+0.2.1.1.2 19-20|0.2.1.1 18-19|0.2.1.1.0.0+0.2.1.1.0 17-18|0.2.1.1.3 16-17|0.2.1.1.1 12-13|0.2.1.0.0 11-12|0.2.1.0 9-10|0.2.1 7-8|0 4-5|0.1.0 3-4|0.1 2-3|0.1.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:04.456
# ::node	0	and	7-8
# ::node	0.0	force-01	32-33
# ::node	0.0.0	date-entity	33-34
# ::node	0.0.0.0	3	33-34
# ::node	0.1	increase-01	3-4
# ::node	0.1.0	number	4-5
# ::node	0.1.0.0	promise-01	25-26
# ::node	0.1.0.0.0	1990	24-25
# ::node	0.1.1	less	28-29
# ::node	0.1.2	great	2-3
# ::node	0.2	and	34-35
# ::node	0.2.0	holiday	40-41
# ::node	0.2.0.0	extend-01	38-39
# ::node	0.2.0.0.0	summer	39-40
# ::node	0.2.1	rise-01	9-10
# ::node	0.2.1.0	phenomenon	11-12
# ::node	0.2.1.0.0	such	12-13
# ::node	0.2.1.1	travel-01	19-20
# ::node	0.2.1.1.0	depend-01	18-19
# ::node	0.2.1.1.0.0	-	18-19
# ::node	0.2.1.1.1	road	16-17
# ::node	0.2.1.1.2	name	21-22
# ::node	0.2.1.1.2.0	"Asia"	21-22
# ::node	0.2.1.1.3	cheap	17-18
# ::root	0	and
# ::edge	and	instrument	holiday	0.2	0.2.0	
# ::edge	and	op1	and	0	0.2	
# ::edge	and	op1	rise-01	0.2	0.2.1	
# ::edge	date-entity	month	3	0.0.0	0.0.0.0	
# ::edge	depend-01	ARG0	travel-01	0.2.1.1.0	0.2.1.1	
# ::edge	depend-01	polarity	-	0.2.1.1.0	0.2.1.1.0.0	
# ::edge	extend-01	ARG0	holiday	0.2.0.0	0.2.0	
# ::edge	extend-01	ARG1	summer	0.2.0.0	0.2.0.0.0	
# ::edge	force-01	ARG1	date-entity	0.0	0.0.0	
# ::edge	force-01	ARG2	and	0.0	0	
# ::edge	increase-01	ARG1	number	0.1	0.1.0	
# ::edge	increase-01	ARG2	less	0.1	0.1.1	
# ::edge	increase-01	degree	great	0.1	0.1.2	
# ::edge	increase-01	location	and	0.1	0	
# ::edge	name	op1	"Asia"	0.2.1.1.2	0.2.1.1.2.0	
# ::edge	promise-01	ARG1	number	0.1.0.0	0.1.0	
# ::edge	promise-01	quant	1990	0.1.0.0	0.1.0.0.0	
# ::edge	rise-01	ARG1	phenomenon	0.2.1	0.2.1.0	
# ::edge	rise-01	ARG2	travel-01	0.2.1	0.2.1.1	
# ::edge	such	mod	phenomenon	0.2.1.0.0	0.2.1.0	
# ::edge	travel-01	ARG1	road	0.2.1.1	0.2.1.1.1	
# ::edge	travel-01	location	name	0.2.1.1	0.2.1.1.2	
# ::edge	travel-01	mod	cheap	0.2.1.1	0.2.1.1.3	
(a2 / and 
      :ARG2-of (f / force-01 
            :ARG1 (d / date-entity 
                  :month 3)) 
      :location-of (i / increase-01 
            :ARG1 (n2 / number 
                  :ARG1-of (p / promise-01 
                        :quant 1990)) 
            :ARG2 (l / less) 
            :degree (g / great)) 
      :op1 (a / and 
            :instrument (h / holiday 
                  :ARG0-of (e / extend-01 
                        :ARG1 (s / summer))) 
            :op1 (r2 / rise-01 
                  :ARG1 (p2 / phenomenon 
                        :mod-of (s2 / such)) 
                  :ARG2 (t / travel-01 
                        :ARG0-of (d2 / depend-01 
                              :polarity -) 
                        :ARG1 (r / road) 
                        :location (n / name 
                              :op1 "Asia") 
                        :mod (c / cheap)))))

# ::snt as thirtysomething safeness spreads through the high street her jigsaw and own label designs promise to delay the moment when the fawn raincoat takes over the world
# ::tok as thirtysomething safeness spreads through the high street her jigsaw and own label designs promise to delay the moment when the fawn raincoat takes over the world
# ::alignments 26-27|0.1.0.1.1 18-19|0.1.0.0 16-17|0.1.0 14-15|0.1.0.1 13-14|0 12-13|0.0 10-11|0.1 7-8|0.1.0.1.0 6-7|0.1.0.1.0.1 3-4|0.1.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:04.637
# ::node	0	design-01	13-14
# ::node	0.0	label	12-13
# ::node	0.1	and	10-11
# ::node	0.1.0	delay-01	16-17
# ::node	0.1.0.0	moment	18-19
# ::node	0.1.0.1	promise-01	14-15
# ::node	0.1.0.1.0	street	7-8
# ::node	0.1.0.1.0.0	spread-02	3-4
# ::node	0.1.0.1.0.1	high	6-7
# ::node	0.1.0.1.1	world	26-27
# ::root	0	design-01
# ::edge	and	op1	design-01	0.1	0	
# ::edge	delay-01	ARG0	and	0.1.0	0.1	
# ::edge	delay-01	ARG1	moment	0.1.0	0.1.0.0	
# ::edge	design-01	ARG1	label	0	0.0	
# ::edge	promise-01	ARG0	street	0.1.0.1	0.1.0.1.0	
# ::edge	promise-01	ARG1	world	0.1.0.1	0.1.0.1.1	
# ::edge	promise-01	ARG2	delay-01	0.1.0.1	0.1.0	
# ::edge	spread-02	ARG1	street	0.1.0.1.0.0	0.1.0.1.0	
# ::edge	street	mod	high	0.1.0.1.0	0.1.0.1.0.1	
(d2 / design-01 
      :ARG1 (l / label) 
      :op-of (a / and 
            :ARG0-of (d / delay-01 
                  :ARG1 (m / moment) 
                  :ARG2-of (p / promise-01 
                        :ARG0 (s / street 
                              :ARG1-of (s2 / spread-02) 
                              :mod (h / high)) 
                        :ARG1 (w / world)))))

# ::snt after the july incident there were calls for tighter security and the authorities promised to conduct a security review at shorts and at the harbour airport
# ::tok after the july incident there were calls for tighter security and the authorities promised to conduct a security review at shorts and at the harbour airport
# ::alignments 25-26|0.1.0.0.0.1.0 24-25|0.1.0.0.0.1 21-22|0 18-19|0.1.0.0.0 17-18|0.1.0.0.0.0 15-16|0.1.0.0 13-14|0.1.0 12-13|0.1 10-11|0.1.1 9-10|0.1.1.0 8-9|0.1.1.0.0 3-4|0.0 2-3|0.0.0.0+0.0.0 0-1|0.1.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:05.116
# ::node	0	and	21-22
# ::node	0.0	incident	3-4
# ::node	0.0.0	date-entity	2-3
# ::node	0.0.0.0	7	2-3
# ::node	0.1	authority	12-13
# ::node	0.1.0	promise-01	13-14
# ::node	0.1.0.0	conduct-01	15-16
# ::node	0.1.0.0.0	review-01	18-19
# ::node	0.1.0.0.0.0	security	17-18
# ::node	0.1.0.0.0.1	harbour	24-25
# ::node	0.1.0.0.0.1.0	airport	25-26
# ::node	0.1.1	and	10-11
# ::node	0.1.1.0	security	9-10
# ::node	0.1.1.0.0	tight	8-9
# ::node	0.1.1.0.1	after	0-1
# ::root	0	and
# ::edge	after	op1	security	0.1.1.0.1	0.1.1.0	
# ::edge	airport	mod	harbour	0.1.0.0.0.1.0	0.1.0.0.0.1	
# ::edge	and	op1	incident	0	0.0	
# ::edge	and	op1	security	0.1.1	0.1.1.0	
# ::edge	and	op2	authority	0	0.1	
# ::edge	and	op2	authority	0.1.1	0.1	
# ::edge	conduct-01	ARG1	review-01	0.1.0.0	0.1.0.0.0	
# ::edge	date-entity	month	7	0.0.0	0.0.0.0	
# ::edge	incident	time	date-entity	0.0	0.0.0	
# ::edge	promise-01	ARG1	authority	0.1.0	0.1	
# ::edge	promise-01	ARG2	conduct-01	0.1.0	0.1.0.0	
# ::edge	review-01	ARG1	security	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	review-01	location	harbour	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	security	mod	tight	0.1.1.0	0.1.1.0.0	
(a2 / and 
      :op1 (i / incident 
            :time (d / date-entity 
                  :month 7)) 
      :op2 (a3 / authority 
            :ARG1-of (p / promise-01 
                  :ARG2 (c / conduct-01 
                        :ARG1 (r / review-01 
                              :ARG1 (s / security) 
                              :location (h / harbour 
                                    :mod-of (a / airport))))) 
            :op-of (a4 / and 
                  :op1 (s2 / security 
                        :mod (t / tight) 
                        :op-of (a5 / after)))))

# ::snt organizations like the rspca say theyre disappointed but promise to continue their battle for a scheme to be introduced
# ::tok organizations like the rspca say theyre disappointed but promise to continue their battle for a scheme to be introduced
# ::alignments 18-19|0.1.0.1.0.0.0 15-16|0.1.0.1.0.0 12-13|0.1.0.1.0 10-11|0.1.0.1 8-9|0.1.0 7-8|0.1 6-7|0.0 4-5|0 0-1|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:05.155
# ::node	0	say-01	4-5
# ::node	0.0	disappoint-01	6-7
# ::node	0.1	contrast-01	7-8
# ::node	0.1.0	promise-01	8-9
# ::node	0.1.0.0	organization	0-1
# ::node	0.1.0.1	continue-01	10-11
# ::node	0.1.0.1.0	battle-01	12-13
# ::node	0.1.0.1.0.0	scheme	15-16
# ::node	0.1.0.1.0.0.0	introduce-02	18-19
# ::root	0	say-01
# ::edge	battle-01	ARG1	scheme	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	continue-01	ARG1	battle-01	0.1.0.1	0.1.0.1.0	
# ::edge	contrast-01	ARG1	say-01	0.1	0	
# ::edge	contrast-01	ARG2	promise-01	0.1	0.1.0	
# ::edge	introduce-02	ARG1	scheme	0.1.0.1.0.0.0	0.1.0.1.0.0	
# ::edge	promise-01	ARG0	organization	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG2	continue-01	0.1.0	0.1.0.1	
# ::edge	say-01	ARG1	disappoint-01	0	0.0	
(s2 / say-01 
      :ARG1 (d / disappoint-01) 
      :ARG1-of (c2 / contrast-01 
            :ARG2 (p / promise-01 
                  :ARG0 (o / organization) 
                  :ARG2 (c / continue-01 
                        :ARG1 (b / battle-01 
                              :ARG1 (s / scheme 
                                    :ARG1-of (i / introduce-02)))))))

# ::snt independent auditors will make checks to ensure advertisers get the service promised
# ::tok independent auditors will make checks to ensure advertisers get the service promised
# ::alignments 11-12|0 6-7|0.1 4-5|0.1.0 0-1|0.0.0+0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:05.168
# ::node	0	promise-01	11-12
# ::node	0.0	depend-01	0-1
# ::node	0.0.0	-	0-1
# ::node	0.1	ensure-01	6-7
# ::node	0.1.0	check-01	4-5
# ::root	0	promise-01
# ::edge	depend-01	polarity	-	0.0	0.0.0	
# ::edge	ensure-01	ARG0	check-01	0.1	0.1.0	
# ::edge	ensure-01	ARG2	promise-01	0.1	0	
# ::edge	promise-01	ARG1	depend-01	0	0.0	
(p / promise-01 
      :ARG1 (d / depend-01 
            :polarity -) 
      :ARG2-of (e / ensure-01 
            :ARG0 (c / check-01)))

# ::snt while anno domini will catch up with little polveir shortly the fyfield staying standard promises to be flown with continuing distinction by boraceva
# ::tok while anno domini will catch up with little polveir shortly the fyfield staying standard promises to be flown with continuing distinction by boraceva
# ::alignments 20-21|0 19-20|0.2 17-18|0.0.1 14-15|0.0 13-14|0.0.2 12-13|0.0.0 9-10|0.0.0.0 7-8|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:05.244
# ::node	0	distinguish-01	20-21
# ::node	0.0	promise-01	14-15
# ::node	0.0.0	stay-01	12-13
# ::node	0.0.0.0	short	9-10
# ::node	0.0.1	fly-01	17-18
# ::node	0.0.2	standard	13-14
# ::node	0.1	little	7-8
# ::node	0.2	continue-01	19-20
# ::root	0	distinguish-01
# ::edge	continue-01	ARG1	distinguish-01	0.2	0	
# ::edge	distinguish-01	ARG0	promise-01	0	0.0	
# ::edge	distinguish-01	ARG1	little	0	0.1	
# ::edge	fly-01	ARG1	promise-01	0.0.1	0.0	
# ::edge	promise-01	mod	standard	0.0	0.0.2	
# ::edge	stay-01	ARG1	promise-01	0.0.0	0.0	
# ::edge	stay-01	mod	short	0.0.0	0.0.0.0	
(d / distinguish-01 
      :ARG0 (p / promise-01 
            :ARG1-of (s2 / stay-01 
                  :mod (s3 / short)) 
            :ARG1-of (f / fly-01) 
            :mod (s / standard)) 
      :ARG1 (l / little) 
      :ARG1-of (c / continue-01))

# ::snt 9841 promise-v 801469 Promised 537527
# ::tok 9841 promise - v 801469 Promised 537527
# ::alignments 6-7|0.0.2+0.0.1+0.0.0+0.0 4-5|0.1.0.2+0.1.0.1+0.1.0.0+0.1.0 1-2|0 0-1|0.1.1+0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:05.276
# ::node	0	promise-01	1-2
# ::node	0.0	date-entity	6-7
# ::node	0.0.0	27	6-7
# ::node	0.0.1	75	6-7
# ::node	0.0.2	53	6-7
# ::node	0.1	date-entity	0-1
# ::node	0.1.0	date-entity	4-5
# ::node	0.1.0.0	69	4-5
# ::node	0.1.0.1	14	4-5
# ::node	0.1.0.2	80	4-5
# ::node	0.1.1	9841	0-1
# ::root	0	promise-01
# ::edge	date-entity	day	27	0.0	0.0.0	
# ::edge	date-entity	day	69	0.1.0	0.1.0.0	
# ::edge	date-entity	month	14	0.1.0	0.1.0.1	
# ::edge	date-entity	month	75	0.0	0.0.1	
# ::edge	date-entity	name	date-entity	0.1	0.1.0	
# ::edge	date-entity	year	53	0.0	0.0.2	
# ::edge	date-entity	year	80	0.1.0	0.1.0.2	
# ::edge	date-entity	year	9841	0.1	0.1.1	
# ::edge	promise-01	ARG1	date-entity	0	0.0	
# ::edge	promise-01	time	date-entity	0	0.1	
(p / promise-01 
      :ARG1 (d / date-entity 
            :day 27 
            :month 75 
            :year 53) 
      :time (d3 / date-entity 
            :name (d2 / date-entity 
                  :day 69 
                  :month 14 
                  :year 80) 
            :year 9841))

# ::snt  I was at work but Marilyn got a couple of hours off from the shop and went down there with him.  Promised the bloke the money, he did, more like her dad than &dash. just a friend."
# ::tok I was at work but Marilyn got a couple of hours off from the shop and went down there with him . Promised the bloke the money , he did , more like her dad than & dash . just a friend . "
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:05.277
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt EMPTY_SENTENCE
# ::tok EMPTY_SENTENCE
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:05.278
# ::node	0	amr-empty	0-1
# ::root	0	amr-empty
(a / amr-empty)

# ::snt he promised he would resort to nothing as extreme as plastic surgery
# ::tok he promised he would resort to nothing as extreme as plastic surgery
# ::alignments 11-12|0.1.1 10-11|0.1.1.0 8-9|0.1.2.0 6-7|0.1.2 4-5|0.1 2-3|0.1.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:05.461
# ::node	0	promise-01	1-2
# ::node	0.0	he	0-1
# ::node	0.1	resort-01	4-5
# ::node	0.1.0	he	2-3
# ::node	0.1.1	surgery	11-12
# ::node	0.1.1.0	plastic	10-11
# ::node	0.1.2	nothing	6-7
# ::node	0.1.2.0	extreme	8-9
# ::root	0	promise-01
# ::edge	nothing	mod	extreme	0.1.2	0.1.2.0	
# ::edge	promise-01	ARG0	he	0	0.0	
# ::edge	promise-01	ARG1	resort-01	0	0.1	
# ::edge	resort-01	ARG0	he	0.1	0.1.0	
# ::edge	resort-01	ARG2	surgery	0.1	0.1.1	
# ::edge	resort-01	ARG4	nothing	0.1	0.1.2	
# ::edge	surgery	mod	plastic	0.1.1	0.1.1.0	
(p2 / promise-01 
      :ARG0 (h2 / he) 
      :ARG1 (r / resort-01 
            :ARG0 (h / he) 
            :ARG2 (s / surgery 
                  :mod (p / plastic)) 
            :ARG4 (n / nothing 
                  :mod (e / extreme))))

# ::snt worcestershire scored 199 in their second innings a total that promised at one stage to be much more substantial
# ::tok worcestershire scored 199 in their second innings a total that promised at one stage to be much more substantial
# ::alignments 18-19|0.0.0 16-17|0.0.1.0 13-14|0 10-11|0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:05.492
# ::node	0	stage	13-14
# ::node	0.0	promise-01	10-11
# ::node	0.0.0	substantial	18-19
# ::node	0.0.1	score-01	1-2
# ::node	0.0.1.0	much	16-17
# ::root	0	stage
(s2 / stage 
      :time-of (p / promise-01 
            :ARG1 (s / substantial) 
            :ARG1-of (s3 / score-01 
                  :ARG0 (m / much))))

# ::snt if you want to order by mail do not delay as the suppliers have promised they will do their utmost to ensure cheeses for christmas provided you send off for them now
# ::tok if you want to order by mail do not delay as the suppliers have promised they will do their utmost to ensure cheeses for christmas provided you send off for them now
# ::alignments 31-32|0.0.0.1.0.0.1 28-29|0.0.0.1.0.0.2 27-28|0.0.0.1.0.0 26-27|0.0.0.1.0 25-26|0.0.0.1.0.0.0 21-22|0 15-16|0.1 14-15|0.0.0.1.1 12-13|0.0.0.1.1.0 9-10|0.0.0.1 6-7|0.0.0.0 2-3|0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:05.901
# ::node	0	ensure-01	21-22
# ::node	0.0	you	1-2
# ::node	0.0.0	want-01	2-3
# ::node	0.0.0.0	mail-01	6-7
# ::node	0.0.0.1	delay-01	9-10
# ::node	0.0.0.1.0	you	26-27
# ::node	0.0.0.1.0.0	send-01	27-28
# ::node	0.0.0.1.0.0.0	provide-01	25-26
# ::node	0.0.0.1.0.0.1	now	31-32
# ::node	0.0.0.1.0.0.2	off	28-29
# ::node	0.0.0.1.1	promise-01	14-15
# ::node	0.0.0.1.1.0	supply-01	12-13
# ::node	0.1	they	15-16
# ::root	0	ensure-01
# ::edge	delay-01	ARG0	you	0.0.0.1	0.0.0.1.0	
# ::edge	delay-01	ARG1	want-01	0.0.0.1	0.0.0	
# ::edge	ensure-01	ARG0	you	0	0.0	
# ::edge	ensure-01	ARG1	they	0	0.1	
# ::edge	promise-01	ARG0	supply-01	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	promise-01	ARG1	delay-01	0.0.0.1.1	0.0.0.1	
# ::edge	provide-01	ARG1	send-01	0.0.0.1.0.0.0	0.0.0.1.0.0	
# ::edge	send-01	ARG0	you	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	send-01	concession	now	0.0.0.1.0.0	0.0.0.1.0.0.1	
# ::edge	send-01	direction	off	0.0.0.1.0.0	0.0.0.1.0.0.2	
# ::edge	want-01	ARG0	you	0.0.0	0.0	
# ::edge	want-01	ARG1	mail-01	0.0.0	0.0.0.0	
(e / ensure-01 
      :ARG0 (y2 / you 
            :ARG0-of (w / want-01 
                  :ARG1 (m / mail-01) 
                  :ARG1-of (d / delay-01 
                        :ARG0 (y / you 
                              :ARG0-of (s / send-01 
                                    :ARG1-of (p / provide-01) 
                                    :concession (n / now) 
                                    :direction (o / off))) 
                        :ARG1-of (p2 / promise-01 
                              :ARG0 (s2 / supply-01))))) 
      :ARG1 (t / they))

# ::snt hic and its associates sold worthless 1930 weimar republic bonds stolen from berlin in 1945 promising investors returns of up to 45 per cent
# ::tok hic and its associates sold worthless 1930 weimar republic bonds stolen from berlin in 1945 promising investors returns of up to 45 per cent
# ::alignments 23-24|0.0.0+0.0 21-22|0.1.1 17-18|0.1 16-17|0.1.2.0+0.1.2 15-16|0 14-15|0.1.3.0+0.1.3 10-11|0.1.0.0 9-10|0.1.0 8-9|0.1.0.1 6-7|0.1.0.2.0+0.1.0.2 5-6|0.1.0.0.0.0.0 4-5|0.1.0.0.0.0 1-2|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:06.395
# ::node	0	promise-01	15-16
# ::node	0.0	monetary-quantity	23-24
# ::node	0.0.0	cent	23-24
# ::node	0.1	return-02	17-18
# ::node	0.1.0	bond	9-10
# ::node	0.1.0.0	steal-01	10-11
# ::node	0.1.0.0.0	and	1-2
# ::node	0.1.0.0.0.0	sell-01	4-5
# ::node	0.1.0.0.0.0.0	worth	5-6
# ::node	0.1.0.1	republic	8-9
# ::node	0.1.0.2	date-entity	6-7
# ::node	0.1.0.2.0	1930	6-7
# ::node	0.1.1	45	21-22
# ::node	0.1.2	person	16-17
# ::node	0.1.2.0	invest-01	16-17
# ::node	0.1.3	date-entity	14-15
# ::node	0.1.3.0	1945	14-15
# ::root	0	promise-01
# ::edge	bond	mod	republic	0.1.0	0.1.0.1	
# ::edge	bond	quant	date-entity	0.1.0	0.1.0.2	
# ::edge	date-entity	year	1930	0.1.0.2	0.1.0.2.0	
# ::edge	date-entity	year	1945	0.1.3	0.1.3.0	
# ::edge	invest-01	ARG0	person	0.1.2.0	0.1.2	
# ::edge	monetary-quantity	unit	cent	0.0	0.0.0	
# ::edge	promise-01	ARG0	monetary-quantity	0	0.0	
# ::edge	promise-01	ARG1	return-02	0	0.1	
# ::edge	return-02	ARG0	bond	0.1	0.1.0	
# ::edge	return-02	ARG1	45	0.1	0.1.1	
# ::edge	return-02	ARG2	person	0.1	0.1.2	
# ::edge	return-02	time	date-entity	0.1	0.1.3	
# ::edge	sell-01	ARG0	and	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	sell-01	ARG1	worth	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	steal-01	ARG0	and	0.1.0.0	0.1.0.0.0	
# ::edge	steal-01	ARG1	bond	0.1.0.0	0.1.0	
(p2 / promise-01 
      :ARG0 (m / monetary-quantity 
            :unit (c / cent)) 
      :ARG1 (r / return-02 
            :ARG0 (b / bond 
                  :ARG1-of (s / steal-01 
                        :ARG0 (a / and 
                              :ARG0-of (s2 / sell-01 
                                    :ARG1 (w / worth)))) 
                  :mod (r2 / republic) 
                  :quant (d2 / date-entity 
                        :year 1930)) 
            :ARG1 45 
            :ARG2 (p / person 
                  :ARG0-of (i / invest-01)) 
            :time (d / date-entity 
                  :year 1945)))

# ::snt their demands include guaranteed employment in the civilian sector up to the age of 58 after they retire from the armed forces a contrite syria yesterday promised a full investigation into turkish claims that two syrian mig21 fighters shot down a civilian survey plane killing five people inside turkish airspace
# ::tok their demands include guaranteed employment in the civilian sector up to the age of 58 after they retire from the armed forces a contrite syria yesterday promised a full investigation into turkish claims that two syrian mig21 fighters shot down a civilian survey plane killing five people inside turkish airspace
# ::alignments 49-50|0.0.0.0.1.1.1.0.1.0.0 47-48|0.0.0.0.1.1.1.0.1.0 45-46|0.0.0.0.1.1.0 44-45|0.0.0.0.1.1.1.0.1 43-44|0.0.0.0.1.1.1.1 42-43|0.0.0.0.1.1.1.3 41-42|0.0.0.0.1.1.1.3.0 39-40|0.0.0.0.1.1.1.4 38-39|0.0.0.0.1.1.1 37-38|0.0.0.0.1.1.1.0.0+0.0.0.0.1.1.1.0 34-35|0.0.0.0.1.1.1.0.2 32-33|0.0.0.0.1.1.1.2 29-30|0.0.0.0.1.1 28-29|0.0.0.0.1.1.2 26-27|0.0.0.0.1 25-26|0.0.0.0.1.0 24-25|0.0.1.1.0.0.0.0+0.0.1.1.0.0.0+0.0.1.1.0.0 21-22|0.0.0.0 20-21|0.0.0.0.0 17-18|0.0.0 16-17|0.0 15-16|0.0.0.1 14-15|0.0.1.0 12-13|0 8-9|0.0.1.1.0.2 7-8|0.0.1.1.0.2.0 4-5|0.0.1.1.0.1 3-4|0.0.1.1.0 2-3|0.0.1.1 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:08.201
# ::node	0	age-01	12-13
# ::node	0.0	they	16-17
# ::node	0.0.0	retire-01	17-18
# ::node	0.0.0.0	force	21-22
# ::node	0.0.0.0.0	arm-01	20-21
# ::node	0.0.0.0.1	promise-01	26-27
# ::node	0.0.0.0.1.0	yesterday	25-26
# ::node	0.0.0.0.1.1	investigate-01	29-30
# ::node	0.0.0.0.1.1.0	5	45-46
# ::node	0.0.0.0.1.1.1	shoot-02	38-39
# ::node	0.0.0.0.1.1.1.0	person	37-38
# ::node	0.0.0.0.1.1.1.0.0	fight-01	37-38
# ::node	0.0.0.0.1.1.1.0.1	kill-01	44-45
# ::node	0.0.0.0.1.1.1.0.1.0	inside	47-48
# ::node	0.0.0.0.1.1.1.0.1.0.0	airspace	49-50
# ::node	0.0.0.0.1.1.1.0.2	2	34-35
# ::node	0.0.0.0.1.1.1.1	plane	43-44
# ::node	0.0.0.0.1.1.1.2	claim-01	32-33
# ::node	0.0.0.0.1.1.1.3	survey-01	42-43
# ::node	0.0.0.0.1.1.1.3.0	civilian	41-42
# ::node	0.0.0.0.1.1.1.4	down	39-40
# ::node	0.0.0.0.1.1.2	full	28-29
# ::node	0.0.0.1	after	15-16
# ::node	0.0.1	demand-01	1-2
# ::node	0.0.1.0	58	14-15
# ::node	0.0.1.1	include-01	2-3
# ::node	0.0.1.1.0	guarantee-01	3-4
# ::node	0.0.1.1.0.0	country	24-25
# ::node	0.0.1.1.0.0.0	name	24-25
# ::node	0.0.1.1.0.0.0.0	"Syria"	24-25
# ::node	0.0.1.1.0.1	employment	4-5
# ::node	0.0.1.1.0.2	sector	8-9
# ::node	0.0.1.1.0.2.0	civilian	7-8
# ::root	0	age-01
# ::edge	after	op1	retire-01	0.0.0.1	0.0.0	
# ::edge	age-01	ARG1	they	0	0.0	
# ::edge	arm-01	ARG1	force	0.0.0.0.0	0.0.0.0	
# ::edge	claim-01	ARG1	shoot-02	0.0.0.0.1.1.1.2	0.0.0.0.1.1.1	
# ::edge	country	name	name	0.0.1.1.0.0	0.0.1.1.0.0.0	
# ::edge	demand-01	ARG0	they	0.0.1	0.0	
# ::edge	demand-01	ARG1	58	0.0.1	0.0.1.0	
# ::edge	fight-01	ARG0	person	0.0.0.0.1.1.1.0.0	0.0.0.0.1.1.1.0	
# ::edge	guarantee-01	ARG0	country	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	guarantee-01	ARG1	employment	0.0.1.1.0	0.0.1.1.0.1	
# ::edge	guarantee-01	ARG2	sector	0.0.1.1.0	0.0.1.1.0.2	
# ::edge	include-01	ARG1	guarantee-01	0.0.1.1	0.0.1.1.0	
# ::edge	include-01	ARG2	demand-01	0.0.1.1	0.0.1	
# ::edge	inside	op1	airspace	0.0.0.0.1.1.1.0.1.0	0.0.0.0.1.1.1.0.1.0.0	
# ::edge	investigate-01	ARG0	5	0.0.0.0.1.1	0.0.0.0.1.1.0	
# ::edge	investigate-01	ARG1	shoot-02	0.0.0.0.1.1	0.0.0.0.1.1.1	
# ::edge	investigate-01	mod	full	0.0.0.0.1.1	0.0.0.0.1.1.2	
# ::edge	kill-01	ARG1	person	0.0.0.0.1.1.1.0.1	0.0.0.0.1.1.1.0	
# ::edge	kill-01	time	inside	0.0.0.0.1.1.1.0.1	0.0.0.0.1.1.1.0.1.0	
# ::edge	name	op1	"Syria"	0.0.1.1.0.0.0	0.0.1.1.0.0.0.0	
# ::edge	person	quant	2	0.0.0.0.1.1.1.0	0.0.0.0.1.1.1.0.2	
# ::edge	promise-01	ARG0	yesterday	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	promise-01	ARG1	force	0.0.0.0.1	0.0.0.0	
# ::edge	promise-01	ARG2	investigate-01	0.0.0.0.1	0.0.0.0.1.1	
# ::edge	retire-01	ARG0	they	0.0.0	0.0	
# ::edge	retire-01	ARG1	force	0.0.0	0.0.0.0	
# ::edge	sector	mod	civilian	0.0.1.1.0.2	0.0.1.1.0.2.0	
# ::edge	shoot-02	ARG0	person	0.0.0.0.1.1.1	0.0.0.0.1.1.1.0	
# ::edge	shoot-02	ARG1	plane	0.0.0.0.1.1.1	0.0.0.0.1.1.1.1	
# ::edge	shoot-02	direction	down	0.0.0.0.1.1.1	0.0.0.0.1.1.1.4	
# ::edge	survey-01	ARG1	shoot-02	0.0.0.0.1.1.1.3	0.0.0.0.1.1.1	
# ::edge	survey-01	mod	civilian	0.0.0.0.1.1.1.3	0.0.0.0.1.1.1.3.0	
(a4 / age-01 
      :ARG1 (t / they 
            :ARG0-of (r / retire-01 
                  :ARG1 (f3 / force 
                        :ARG1-of (a2 / arm-01) 
                        :ARG1-of (p3 / promise-01 
                              :ARG0 (y / yesterday) 
                              :ARG2 (i2 / investigate-01 
                                    :ARG0 5 
                                    :ARG1 (s2 / shoot-02 
                                          :ARG0 (p2 / person 
                                                :ARG0-of (f / fight-01) 
                                                :ARG1-of (k / kill-01 
                                                      :time (i / inside 
                                                            :op1 (a / airspace))) 
                                                :quant 2) 
                                          :ARG1 (p / plane) 
                                          :ARG1-of (c2 / claim-01) 
                                          :ARG1-of (s / survey-01 
                                                :mod (c / civilian)) 
                                          :direction (d / down)) 
                                    :mod (f2 / full)))) 
                  :op-of (a3 / after)) 
            :ARG0-of (d2 / demand-01 
                  :ARG1 58 
                  :ARG2-of (i3 / include-01 
                        :ARG1 (g / guarantee-01 
                              :ARG0 (c3 / country 
                                    :name (n / name 
                                          :op1 "Syria")) 
                              :ARG1 (e / employment) 
                              :ARG2 (s3 / sector 
                                    :mod (c4 / civilian)))))))

# ::snt on an intermediate platform ali ross a small feisty scotsman promises to get you off it and onto the steeper slopes beyond
# ::tok on an intermediate platform ali ross a small feisty scotsman promises to get you off it and onto the steeper slopes beyond
# ::alignments 21-22|0.2 17-18|0.1.0.0 16-17|0.1.0 15-16|0.1.1 14-15|0.1 13-14|0.0 10-11|0 7-8|0.1.0.1 3-4|0.1.0.0.0.0 2-3|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:08.290
# ::node	0	promise-01	10-11
# ::node	0.0	you	13-14
# ::node	0.1	off	14-15
# ::node	0.1.0	and	16-17
# ::node	0.1.0.0	onto	17-18
# ::node	0.1.0.0.0	intermediate	2-3
# ::node	0.1.0.0.0.0	platform	3-4
# ::node	0.1.0.1	small	7-8
# ::node	0.1.1	it	15-16
# ::node	0.2	beyond	21-22
# ::root	0	promise-01
# ::edge	and	op1	off	0.1.0	0.1	
# ::edge	and	op2	onto	0.1.0	0.1.0.0	
# ::edge	and	poss	small	0.1.0	0.1.0.1	
# ::edge	intermediate	poss	onto	0.1.0.0.0	0.1.0.0	
# ::edge	off	op1	it	0.1	0.1.1	
# ::edge	platform	mod	intermediate	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	promise-01	ARG0	you	0	0.0	
# ::edge	promise-01	ARG1	off	0	0.1	
# ::edge	promise-01	time	beyond	0	0.2	
(p / promise-01 
      :ARG0 (y / you) 
      :ARG1 (o2 / off 
            :op-of (a / and 
                  :op1 (o / onto 
                        :poss-of (i2 / intermediate 
                              :mod-of (p2 / platform))) 
                  :poss (s / small)) 
            :op1 (i / it)) 
      :time (b / beyond))

# ::snt because it pays no commission to intermediaries direct line has promised to cut 20 per cent off the insurance bills of some customers those who have bought their houses in the past five years through one of the main building societies and have continuously insured their properties through them
# ::tok because it pays no commission to intermediaries direct line has promised to cut 20 per cent off the insurance bills of some customers those who have bought their houses in the past five years through one of the main building societies and have continuously insured their properties through them
# ::alignments 46-47|0.2.1.0 44-45|0.2.1+0.2 43-44|0.2.0 41-42|0 40-41|0.1.1 39-40|0.1.1.0 38-39|0.1.1.1 33-34|0.0.3.1.0.0.1+0.0.3.1.0.0 32-33|0.0.3.1.0.0.0 31-32|0.0.3.1.0 28-29|0.1.0 26-27|0.1 22-23|0.0.3.0.2.0 21-22|0.0.3.0.2.0.0 19-20|0.0.3.0 18-19|0.0.3.0.0 16-17|0.0.3.0.1 15-16|0.0.3.0.2.1+0.0.3.0.2 13-14|0.0.3.1.1 10-11|0.0.3.1 8-9|0.0.3 7-8|0.0.3.2 6-7|0.0.3.0.0.0 4-5|0.0.2 3-4|0.0.2.0 2-3|0.0 1-2|0.0.0 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:11.415
# ::node	0	and	41-42
# ::node	0.0	pay-01	2-3
# ::node	0.0.0	it	1-2
# ::node	0.0.1	cause-01	0-1
# ::node	0.0.2	commission	4-5
# ::node	0.0.2.0	-	3-4
# ::node	0.0.3	line	8-9
# ::node	0.0.3.0	bill-01	19-20
# ::node	0.0.3.0.0	insure-02	18-19
# ::node	0.0.3.0.0.0	intermediary	6-7
# ::node	0.0.3.0.1	off	16-17
# ::node	0.0.3.0.2	monetary-quantity	15-16
# ::node	0.0.3.0.2.0	customer	22-23
# ::node	0.0.3.0.2.0.0	some	21-22
# ::node	0.0.3.0.2.1	cent	15-16
# ::node	0.0.3.1	promise-01	10-11
# ::node	0.0.3.1.0	past	31-32
# ::node	0.0.3.1.0.0	temporal-quantity	33-34
# ::node	0.0.3.1.0.0.0	5	32-33
# ::node	0.0.3.1.0.0.1	year	33-34
# ::node	0.0.3.1.1	20	13-14
# ::node	0.0.3.2	direct	7-8
# ::node	0.1	buy-01	26-27
# ::node	0.1.0	house	28-29
# ::node	0.1.1	society	40-41
# ::node	0.1.1.0	build-01	39-40
# ::node	0.1.1.1	main	38-39
# ::node	0.2	person	44-45
# ::node	0.2.0	continue-01	43-44
# ::node	0.2.1	insure-02	44-45
# ::node	0.2.1.0	property	46-47
# ::root	0	and
# ::edge	and	op1	buy-01	0	0.1	
# ::edge	and	op2	person	0	0.2	
# ::edge	bill-01	ARG0	line	0.0.3.0	0.0.3	
# ::edge	bill-01	ARG1	insure-02	0.0.3.0	0.0.3.0.0	
# ::edge	build-01	ARG0	society	0.1.1.0	0.1.1	
# ::edge	buy-01	ARG1	house	0.1	0.1.0	
# ::edge	buy-01	extent	society	0.1	0.1.1	
# ::edge	cause-01	ARG0	pay-01	0.0.1	0.0	
# ::edge	commission	polarity	-	0.0.2	0.0.2.0	
# ::edge	continue-01	ARG1	person	0.2.0	0.2	
# ::edge	customer	quant	some	0.0.3.0.2.0	0.0.3.0.2.0.0	
# ::edge	insure-02	ARG1	intermediary	0.0.3.0.0	0.0.3.0.0.0	
# ::edge	insure-02	ARG1	person	0.2.1	0.2	
# ::edge	insure-02	ARG2	property	0.2.1	0.2.1.0	
# ::edge	line	mod	direct	0.0.3	0.0.3.2	
# ::edge	monetary-quantity	topic	bill-01	0.0.3.0.2	0.0.3.0	
# ::edge	monetary-quantity	topic	customer	0.0.3.0.2	0.0.3.0.2.0	
# ::edge	monetary-quantity	unit	cent	0.0.3.0.2	0.0.3.0.2.1	
# ::edge	off	op1	bill-01	0.0.3.0.1	0.0.3.0	
# ::edge	past	op1	temporal-quantity	0.0.3.1.0	0.0.3.1.0.0	
# ::edge	pay-01	ARG0	it	0.0	0.0.0	
# ::edge	pay-01	ARG1	commission	0.0	0.0.2	
# ::edge	pay-01	ARG2	line	0.0	0.0.3	
# ::edge	pay-01	ARG3	and	0.0	0	
# ::edge	promise-01	ARG0	line	0.0.3.1	0.0.3	
# ::edge	promise-01	ARG1	past	0.0.3.1	0.0.3.1.0	
# ::edge	promise-01	ARG3	20	0.0.3.1	0.0.3.1.1	
# ::edge	society	mod	main	0.1.1	0.1.1.1	
# ::edge	temporal-quantity	quant	5	0.0.3.1.0.0	0.0.3.1.0.0.0	
# ::edge	temporal-quantity	unit	year	0.0.3.1.0.0	0.0.3.1.0.0.1	
(a / and 
      :ARG3-of (p5 / pay-01 
            :ARG0 (i4 / it) 
            :ARG0-of (c5 / cause-01) 
            :ARG1 (c4 / commission 
                  :polarity (- / -)) 
            :ARG2 (l / line 
                  :ARG0-of (b3 / bill-01 
                        :ARG1 (i2 / insure-02 
                              :ARG1 (i3 / intermediary)) 
                        :op-of (o / off) 
                        :topic-of (m2 / monetary-quantity 
                              :topic (c2 / customer 
                                    :quant (s2 / some)) 
                              :unit (c3 / cent))) 
                  :ARG0-of (p4 / promise-01 
                        :ARG1 (p3 / past 
                              :op1 (t / temporal-quantity 
                                    :quant 5 
                                    :unit (y / year))) 
                        :ARG3 20) 
                  :mod (d / direct))) 
      :op1 (b2 / buy-01 
            :ARG1 (h / house) 
            :extent (s / society 
                  :ARG0-of (b / build-01) 
                  :mod (m / main))) 
      :op2 (p2 / person 
            :ARG1-of (c / continue-01) 
            :ARG1-of (i / insure-02 
                  :ARG2 (p / property))))

# ::snt i promise
# ::tok i promise
# ::alignments 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:11.418
# ::node	0	promise-01	1-2
# ::node	0.0	i	0-1
# ::root	0	promise-01
# ::edge	promise-01	ARG0	i	0	0.0	
(p / promise-01 
      :ARG0 (i / i))

# ::snt i promise
# ::tok i promise
# ::alignments 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:11.421
# ::node	0	promise-01	1-2
# ::node	0.0	i	0-1
# ::root	0	promise-01
# ::edge	promise-01	ARG0	i	0	0.0	
(p / promise-01 
      :ARG0 (i / i))

# ::snt ulema do not possess or monopolize a unique mediating role between the believer and god they cannot promise or refuse salvation or grace and the keys to hell or paradise are not in their hands
# ::tok ulema do not possess or monopolize a unique mediating role between the believer and god they cannot promise or refuse salvation or grace and the keys to hell or paradise are not in their hands
# ::alignments 34-35|0.0.0.0.0.0.0.0.0 29-30|0 28-29|0.0 27-28|0.0.1 25-26|0.0.0 23-24|0.0.0.0 22-23|0.0.0.0.1 21-22|0.0.0.0.0.1 19-20|0.0.0.0.0.0.0 18-19|0.0.0.0.0.2 17-18|0.0.0.0.0 15-16|0.0.0.0.0.0 14-15|0.0.0.0.0.0.0.0.2.0 13-14|0.0.0.0.0.0.0.0.1 12-13|0.0.0.0.0.0.0.0 10-11|0.0.0.0.0.0.0.0.2 9-10|0.0.0.0.0.0.0.0.1.0 8-9|0.0.0.0.0.0.0.0.1.0.2 7-8|0.0.0.0.0.0.0.0.1.0.1 4-5|0.0.0.0.0.0.0.0.1.0.0.0 3-4|0.0.0.0.0.0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:11.660
# ::node	0	paradise	29-30
# ::node	0.0	or	28-29
# ::node	0.0.0	key	25-26
# ::node	0.0.0.0	and	23-24
# ::node	0.0.0.0.0	promise-01	17-18
# ::node	0.0.0.0.0.0	they	15-16
# ::node	0.0.0.0.0.0.0	refuse-01	19-20
# ::node	0.0.0.0.0.0.0.0	believe-01	12-13
# ::node	0.0.0.0.0.0.0.0.0	hand	34-35
# ::node	0.0.0.0.0.0.0.0.1	and	13-14
# ::node	0.0.0.0.0.0.0.0.1.0	role	9-10
# ::node	0.0.0.0.0.0.0.0.1.0.0	possess-01	3-4
# ::node	0.0.0.0.0.0.0.0.1.0.0.0	or	4-5
# ::node	0.0.0.0.0.0.0.0.1.0.1	unique	7-8
# ::node	0.0.0.0.0.0.0.0.1.0.2	mediate-01	8-9
# ::node	0.0.0.0.0.0.0.0.2	between	10-11
# ::node	0.0.0.0.0.0.0.0.2.0	god	14-15
# ::node	0.0.0.0.0.1	or	21-22
# ::node	0.0.0.0.0.2	or	18-19
# ::node	0.0.0.0.1	grace-01	22-23
# ::node	0.0.1	hell	27-28
# ::root	0	paradise
(p / paradise 
      :op-of (o / or 
            :beneficiary-of (k / key 
                  :op-of (a / and 
                        :op1 (p2 / promise-01 
                              :ARG0 (t / they 
                                    :ARG0-of (r / refuse-01 
                                          :ARG1 (b / believe-01 
                                                :ARG1 (h / hand) 
                                                :op-of (a2 / and 
                                                      :op1 (r2 / role 
                                                            :ARG1-of (p3 / possess-01 
                                                                  :op-of (o4 / or)) 
                                                            :mod (u / unique) 
                                                            :mod (m / mediate-01))) 
                                                :op-of (b2 / between 
                                                      :op1 (g2 / god))))) 
                              :ARG1 (o2 / or) 
                              :op-of (o3 / or)) 
                        :op2 (g / grace-01))) 
            :op1 (h2 / hell)))

# ::snt national callups have affected club selection for the poundstretcher national league programme this weekend which promises to test teams who have just found form while offering little hope for those struggling to improve their lot writes bill colwill
# ::tok national callups have affected club selection for the poundstretcher national league programme this weekend which promises to test teams who have just found form while offering little hope for those struggling to improve their lot writes bill colwill
# ::alignments 36-37|0.0.1.0 35-36|0.0.1 34-35|0.0.0 32-33|0.0 30-31|0 27-28|0.0.1.1.2 26-27|0.0.1.1.2.1 25-26|0.0.1.1.2.0 23-24|0.0.1.1.1 22-23|0.0.1.1 21-22|0.0.1.1.3 18-19|0.0.1.1.0 17-18|0.0.1.1.0.0 15-16|0.0.1.1.0.0.1 13-14|0.0.1.1.0.0.1.0 12-13|0.0.1.1.0.0.1.0.0 11-12|0.0.1.1.0.0.0 10-11|0.0.1.1.0.0.0.1 9-10|0.0.1.1.0.0.0.1.0 5-6|0.0.1.1.0.0.0.0.0 4-5|0.0.1.1.0.0.0.0.0.0 3-4|0.0.1.1.0.0.0.0 0-1|0.0.1.1.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:12.909
# ::node	0	struggle-02	30-31
# ::node	0.0	improve-01	32-33
# ::node	0.0.0	lot	34-35
# ::node	0.0.1	write-01	35-36
# ::node	0.0.1.0	bill	36-37
# ::node	0.0.1.1	find-01	22-23
# ::node	0.0.1.1.0	team	18-19
# ::node	0.0.1.1.0.0	test-01	17-18
# ::node	0.0.1.1.0.0.0	program	11-12
# ::node	0.0.1.1.0.0.0.0	affect-01	3-4
# ::node	0.0.1.1.0.0.0.0.0	select-01	5-6
# ::node	0.0.1.1.0.0.0.0.0.0	club	4-5
# ::node	0.0.1.1.0.0.0.1	league	10-11
# ::node	0.0.1.1.0.0.0.1.0	nation	9-10
# ::node	0.0.1.1.0.0.1	promise-01	15-16
# ::node	0.0.1.1.0.0.1.0	weekend	13-14
# ::node	0.0.1.1.0.0.1.0.0	this	12-13
# ::node	0.0.1.1.1	form	23-24
# ::node	0.0.1.1.2	hope-01	27-28
# ::node	0.0.1.1.2.0	offer-01	25-26
# ::node	0.0.1.1.2.0.0	nation	0-1
# ::node	0.0.1.1.2.1	little	26-27
# ::node	0.0.1.1.3	just	21-22
# ::root	0	struggle-02
# ::edge	affect-01	ARG0	program	0.0.1.1.0.0.0.0	0.0.1.1.0.0.0	
# ::edge	affect-01	ARG1	select-01	0.0.1.1.0.0.0.0	0.0.1.1.0.0.0.0.0	
# ::edge	find-01	ARG0	team	0.0.1.1	0.0.1.1.0	
# ::edge	find-01	ARG1	form	0.0.1.1	0.0.1.1.1	
# ::edge	find-01	ARG2	hope-01	0.0.1.1	0.0.1.1.2	
# ::edge	find-01	time	just	0.0.1.1	0.0.1.1.3	
# ::edge	find-01	time	write-01	0.0.1.1	0.0.1	
# ::edge	hope-01	ARG1	offer-01	0.0.1.1.2	0.0.1.1.2.0	
# ::edge	hope-01	mod	little	0.0.1.1.2	0.0.1.1.2.1	
# ::edge	improve-01	ARG1	lot	0.0	0.0.0	
# ::edge	improve-01	ARG2	write-01	0.0	0.0.1	
# ::edge	league	mod	nation	0.0.1.1.0.0.0.1	0.0.1.1.0.0.0.1.0	
# ::edge	offer-01	ARG1	nation	0.0.1.1.2.0	0.0.1.1.2.0.0	
# ::edge	program	mod	league	0.0.1.1.0.0.0	0.0.1.1.0.0.0.1	
# ::edge	promise-01	ARG1	weekend	0.0.1.1.0.0.1	0.0.1.1.0.0.1.0	
# ::edge	promise-01	ARG2	test-01	0.0.1.1.0.0.1	0.0.1.1.0.0	
# ::edge	select-01	ARG1	club	0.0.1.1.0.0.0.0.0	0.0.1.1.0.0.0.0.0.0	
# ::edge	struggle-02	ARG1	improve-01	0	0.0	
# ::edge	test-01	ARG0	program	0.0.1.1.0.0	0.0.1.1.0.0.0	
# ::edge	test-01	ARG1	team	0.0.1.1.0.0	0.0.1.1.0	
# ::edge	weekend	mod	this	0.0.1.1.0.0.1.0	0.0.1.1.0.0.1.0.0	
# ::edge	write-01	ARG1	bill	0.0.1	0.0.1.0	
(s / struggle-02 
      :ARG1 (i / improve-01 
            :ARG1 (l / lot) 
            :ARG2 (w / write-01 
                  :ARG1 (b / bill) 
                  :time-of (f2 / find-01 
                        :ARG0 (t / team 
                              :ARG1-of (t2 / test-01 
                                    :ARG0 (p2 / program 
                                          :ARG0-of (a / affect-01 
                                                :ARG1 (s2 / select-01 
                                                      :ARG1 (c / club))) 
                                          :mod (l3 / league 
                                                :mod (n / nation))) 
                                    :ARG2-of (p / promise-01 
                                          :ARG1 (w2 / weekend 
                                                :mod (t3 / this))))) 
                        :ARG1 (f / form) 
                        :ARG2 (h / hope-01 
                              :ARG1 (o / offer-01 
                                    :ARG1 (n2 / nation)) 
                              :mod (l2 / little)) 
                        :time (j / just)))))

# ::snt district councils have promised to give nonprofitmaking organisations generous rate relief
# ::tok district councils have promised to give nonprofitmaking organisations generous rate relief
# ::alignments 10-11|0.1.0 9-10|0.1.0.1 8-9|0.1.0.0 7-8|0.1.1 5-6|0.1 3-4|0 1-2|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:12.962
# ::node	0	promise-01	3-4
# ::node	0.0	council	1-2
# ::node	0.0.0	district	0-1
# ::node	0.1	give-01	5-6
# ::node	0.1.0	relieve-01	10-11
# ::node	0.1.0.0	generous-41	8-9
# ::node	0.1.0.1	rate	9-10
# ::node	0.1.1	organization	7-8
# ::root	0	promise-01
# ::edge	council	mod	district	0.0	0.0.0	
# ::edge	generous-41	ARG1	relieve-01	0.1.0.0	0.1.0	
# ::edge	give-01	ARG1	relieve-01	0.1	0.1.0	
# ::edge	give-01	ARG2	organization	0.1	0.1.1	
# ::edge	promise-01	ARG0	council	0	0.0	
# ::edge	promise-01	ARG2	give-01	0	0.1	
# ::edge	relieve-01	ARG3	rate	0.1.0	0.1.0.1	
(p / promise-01 
      :ARG0 (c / council 
            :mod (d / district)) 
      :ARG2 (g2 / give-01 
            :ARG1 (r / relieve-01 
                  :ARG1-of (g / generous-41) 
                  :ARG3 (r2 / rate)) 
            :ARG2 (o / organization)))

# ::snt the yugoslav federal president janez drnovsek has promised mr vlasi a free public trial but this looks unlikely in a climate of albanian civil disorder in kosovo and pressure within serbia for mr vlasis conviction
# ::tok the yugoslav federal president janez drnovsek has promised mr vlasi a free public trial but this looks unlikely in a climate of albanian civil disorder in kosovo and pressure within serbia for mr vlasis conviction
# ::alignments 34-35|0.1.2.2 29-30|0.1.2.1.0 28-29|0.1.2.1 27-28|0.1.2 23-24|0.0.0.1 20-21|0.1.1 17-18|0.1.2.0.0+0.1.2.0 16-17|0.1 15-16|0.1.0 14-15|0 13-14|0.0.1 12-13|0.0.1.1 11-12|0.0.1.0 7-8|0.0 3-4|0.0.0.2+0.0.0 2-3|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:13.176
# ::node	0	contrast-01	14-15
# ::node	0.0	promise-01	7-8
# ::node	0.0.0	have-org-role-91	3-4
# ::node	0.0.0.0	federal	2-3
# ::node	0.0.0.1	civil	23-24
# ::node	0.0.0.2	president	3-4
# ::node	0.0.1	trial	13-14
# ::node	0.0.1.0	free-41	11-12
# ::node	0.0.1.1	public	12-13
# ::node	0.1	look-02	16-17
# ::node	0.1.0	this	15-16
# ::node	0.1.1	climate	20-21
# ::node	0.1.2	and	27-28
# ::node	0.1.2.0	likely	17-18
# ::node	0.1.2.0.0	-	17-18
# ::node	0.1.2.1	pressure-01	28-29
# ::node	0.1.2.1.0	within	29-30
# ::node	0.1.2.2	convict-01	34-35
# ::root	0	contrast-01
# ::edge	and	op1	look-02	0.1.2	0.1	
# ::edge	and	op2	likely	0.1.2	0.1.2.0	
# ::edge	and	op3	pressure-01	0.1.2	0.1.2.1	
# ::edge	and	op4	convict-01	0.1.2	0.1.2.2	
# ::edge	contrast-01	ARG1	promise-01	0	0.0	
# ::edge	contrast-01	ARG2	look-02	0	0.1	
# ::edge	free-41	ARG1	trial	0.0.1.0	0.0.1	
# ::edge	have-org-role-91	ARG0	federal	0.0.0	0.0.0.0	
# ::edge	have-org-role-91	ARG1	civil	0.0.0	0.0.0.1	
# ::edge	have-org-role-91	ARG2	president	0.0.0	0.0.0.2	
# ::edge	likely	polarity	-	0.1.2.0	0.1.2.0.0	
# ::edge	look-02	ARG0	this	0.1	0.1.0	
# ::edge	look-02	ARG1	climate	0.1	0.1.1	
# ::edge	pressure-01	location	within	0.1.2.1	0.1.2.1.0	
# ::edge	promise-01	ARG0	have-org-role-91	0.0	0.0.0	
# ::edge	promise-01	ARG1	trial	0.0	0.0.1	
# ::edge	trial	mod	public	0.0.1	0.0.1.1	
(c4 / contrast-01 
      :ARG1 (p3 / promise-01 
            :ARG0 (h / have-org-role-91 
                  :ARG0 (f2 / federal) 
                  :ARG1 (c2 / civil) 
                  :ARG2 (p4 / president)) 
            :ARG1 (t2 / trial 
                  :ARG1-of (f / free-41) 
                  :mod (p2 / public))) 
      :ARG2 (l2 / look-02 
            :ARG0 (t / this) 
            :ARG1 (c3 / climate) 
            :op-of (a / and 
                  :op1 (l / likely 
                        :polarity -) 
                  :op2 (p / pressure-01 
                        :location (w / within)) 
                  :op3 (c / convict-01))))

# ::snt up the empire to a group of communist students from the uk gathered at the bar of his hotel promises to do something about the blooming awful state of soviet plumbing and ends up making a deal with stalin with the insouciance of george formby addressing himself to hitler
# ::tok up the empire to a group of communist students from the uk gathered at the bar of his hotel promises to do something about the blooming awful state of soviet plumbing and ends up making a deal with stalin with the insouciance of george formby addressing himself to hitler
# ::alignments 45-46|0.1.1.0 36-37|0.1.1 32-33|0.1 31-32|0 27-28|0.1.0.0 26-27|0.1.0.0.0 22-23|0.1.0 19-20|0.0.1.0 18-19|0.0.1.0.1 15-16|0.0.1 12-13|0.0 8-9|0.0.1.0.0.0+0.0.1.0.0 7-8|0.0.1.0.0.2 5-6|0.0.1.0.0.1 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:13.419
# ::node	0	and	31-32
# ::node	0.0	gather-01	12-13
# ::node	0.0.0	empire	2-3
# ::node	0.0.1	bar-01	15-16
# ::node	0.0.1.0	promise-01	19-20
# ::node	0.0.1.0.0	person	8-9
# ::node	0.0.1.0.0.0	study-01	8-9
# ::node	0.0.1.0.0.1	group	5-6
# ::node	0.0.1.0.0.2	communism	7-8
# ::node	0.0.1.0.1	hotel	18-19
# ::node	0.1	end-01	32-33
# ::node	0.1.0	something	22-23
# ::node	0.1.0.0	state	27-28
# ::node	0.1.0.0.0	awful	26-27
# ::node	0.1.1	deal-01	36-37
# ::node	0.1.1.0	address-02	45-46
# ::root	0	and
# ::edge	and	op1	gather-01	0	0.0	
# ::edge	and	op2	end-01	0	0.1	
# ::edge	bar-01	ARG1	promise-01	0.0.1	0.0.1.0	
# ::edge	deal-01	ARG1	address-02	0.1.1	0.1.1.0	
# ::edge	end-01	ARG0	something	0.1	0.1.0	
# ::edge	end-01	ARG1	deal-01	0.1	0.1.1	
# ::edge	gather-01	ARG0	empire	0.0	0.0.0	
# ::edge	gather-01	ARG1	bar-01	0.0	0.0.1	
# ::edge	person	consist	group	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	person	mod	communism	0.0.1.0.0	0.0.1.0.0.2	
# ::edge	promise-01	ARG1	person	0.0.1.0	0.0.1.0.0	
# ::edge	promise-01	time	hotel	0.0.1.0	0.0.1.0.1	
# ::edge	something	prep-in	state	0.1.0	0.1.0.0	
# ::edge	state	degree	awful	0.1.0.0	0.1.0.0.0	
# ::edge	study-01	ARG0	person	0.0.1.0.0.0	0.0.1.0.0	
(a2 / and 
      :op1 (g / gather-01 
            :ARG0 (e2 / empire) 
            :ARG1 (b / bar-01 
                  :ARG1 (p / promise-01 
                        :ARG1 (p2 / person 
                              :ARG0-of (s3 / study-01) 
                              :consist (g2 / group) 
                              :mod (c / communism)) 
                        :time (h / hotel)))) 
      :op2 (e / end-01 
            :ARG0 (s2 / something 
                  :prep-in (s / state 
                        :degree (a3 / awful))) 
            :ARG1 (d / deal-01 
                  :ARG1 (a / address-02))))

# ::snt we were promised two hostesses
# ::tok we were promised two hostesses
# ::alignments 3-4|0.0.0 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:13.425
# ::node	0	promise-01	2-3
# ::node	0.0	we	0-1
# ::node	0.0.0	2	3-4
# ::root	0	promise-01
# ::edge	2	op1	we	0.0.0	0.0	
# ::edge	promise-01	ARG1	we	0	0.0	
(p / promise-01 
      :ARG1 (w / we 
            :op-of 2))

# ::snt my local host the tourist authority had promised the food would be superb
# ::tok my local host the tourist authority had promised the food would be superb
# ::alignments 9-10|0.0.0.0.0 7-8|0.0.0.0 5-6|0.0.0 4-5|0+0.0 2-3|0.0.0.0.1 1-2|0.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:13.550
# ::node	0	tour-01	4-5
# ::node	0.0	person	4-5
# ::node	0.0.0	authority	5-6
# ::node	0.0.0.0	promise-01	7-8
# ::node	0.0.0.0.0	food	9-10
# ::node	0.0.0.0.1	host-01	2-3
# ::node	0.0.0.0.1.0	local	1-2
# ::root	0	tour-01
# ::edge	authority	mod	person	0.0.0	0.0	
# ::edge	host-01	mod	local	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	promise-01	ARG0	authority	0.0.0.0	0.0.0	
# ::edge	promise-01	ARG1	food	0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	time	host-01	0.0.0.0	0.0.0.0.1	
# ::edge	tour-01	ARG0	person	0	0.0	
(t / tour-01 
      :ARG0 (p2 / person 
            :mod-of (a / authority 
                  :ARG0-of (p / promise-01 
                        :ARG1 (f / food) 
                        :time (h / host-01 
                              :mod (l / local))))))

# ::snt the udf promised to improve the education system by injecting money and giving a better deal than we now have she said
# ::tok the udf promised to improve the education system by injecting money and giving a better deal than we now have she said
# ::alignments 21-22|0 20-21|0.0 18-19|0.1.0.0.0.0 17-18|0.0.0.0 15-16|0.0.0 11-12|0.1 10-11|0.1.1 7-8|0.1.0.0 6-7|0.1.0.0.0 4-5|0.1.0 2-3|0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:13.961
# ::node	0	say-01	21-22
# ::node	0.0	she	20-21
# ::node	0.0.0	deal-01	15-16
# ::node	0.0.0.0	we	17-18
# ::node	0.1	and	11-12
# ::node	0.1.0	improve-01	4-5
# ::node	0.1.0.0	system	7-8
# ::node	0.1.0.0.0	educate-01	6-7
# ::node	0.1.0.0.0.0	now	18-19
# ::node	0.1.0.1	promise-01	2-3
# ::node	0.1.1	money	10-11
# ::root	0	say-01
# ::edge	and	op1	money	0.1	0.1.1	
# ::edge	deal-01	ARG0	she	0.0.0	0.0	
# ::edge	deal-01	ARG1	we	0.0.0	0.0.0.0	
# ::edge	educate-01	ARG1	now	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	improve-01	ARG1	system	0.1.0	0.1.0.0	
# ::edge	improve-01	manner	and	0.1.0	0.1	
# ::edge	promise-01	ARG2	improve-01	0.1.0.1	0.1.0	
# ::edge	say-01	ARG0	she	0	0.0	
# ::edge	say-01	ARG1	and	0	0.1	
# ::edge	system	mod	educate-01	0.1.0.0	0.1.0.0.0	
(s / say-01 
      :ARG0 (s2 / she 
            :ARG0-of (d / deal-01 
                  :ARG1 (w / we))) 
      :ARG1 (a / and 
            :manner-of (i / improve-01 
                  :ARG1 (s3 / system 
                        :mod (e / educate-01 
                              :ARG1 (n / now))) 
                  :ARG2-of (p / promise-01)) 
            :op1 (m / money)))

# ::snt fox had promised the job to the players union secretary in august as a plank in his own election platform only to be overruled by the committee who insisted that taylor should be interviewed along with the three other shortlisted candidates
# ::tok fox had promised the job to the players union secretary in august as a plank in his own election platform only to be overruled by the committee who insisted that taylor should be interviewed along with the three other shortlisted candidates
# ::alignments 40-41|0.0.1.2 38-39|0.0.1.2.0 37-38|0.0.1.2.1 34-35|0.0.1.1 33-34|0.0.1 31-32|0.0.1.0 28-29|0.0.1.0.0 26-27|0.0.1.0.0.0 20-21|0.2.2.0.0 19-20|0.2.2.0 18-19|0.2.2 11-12|0.2.1+0.2 9-10|0.2.0 8-9|0.2.0.0 7-8|0.0.0+0.0 4-5|0.1 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:14.205
# ::node	0	promise-01	2-3
# ::node	0.0	person	7-8
# ::node	0.0.0	play-01	7-8
# ::node	0.0.1	interview-01	33-34
# ::node	0.0.1.0	recommend-01	31-32
# ::node	0.0.1.0.0	insist-01	28-29
# ::node	0.0.1.0.0.0	committee	26-27
# ::node	0.0.1.1	along	34-35
# ::node	0.0.1.2	candidate	40-41
# ::node	0.0.1.2.0	other	38-39
# ::node	0.0.1.2.1	3	37-38
# ::node	0.1	job	4-5
# ::node	0.2	date-entity	11-12
# ::node	0.2.0	secretary	9-10
# ::node	0.2.0.0	union	8-9
# ::node	0.2.1	8	11-12
# ::node	0.2.2	elect-01	18-19
# ::node	0.2.2.0	platform	19-20
# ::node	0.2.2.0.0	only	20-21
# ::root	0	promise-01
# ::edge	candidate	mod	other	0.0.1.2	0.0.1.2.0	
# ::edge	candidate	quant	3	0.0.1.2	0.0.1.2.1	
# ::edge	date-entity	month	8	0.2	0.2.1	
# ::edge	elect-01	time	date-entity	0.2.2	0.2	
# ::edge	insist-01	ARG0	committee	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	insist-01	ARG1	recommend-01	0.0.1.0.0	0.0.1.0	
# ::edge	interview-01	ARG1	person	0.0.1	0.0	
# ::edge	interview-01	ARG2	along	0.0.1	0.0.1.1	
# ::edge	interview-01	medium	candidate	0.0.1	0.0.1.2	
# ::edge	platform	mod	only	0.2.2.0	0.2.2.0.0	
# ::edge	platform	topic	elect-01	0.2.2.0	0.2.2	
# ::edge	play-01	ARG0	person	0.0.0	0.0	
# ::edge	promise-01	ARG1	person	0	0.0	
# ::edge	promise-01	ARG2	job	0	0.1	
# ::edge	promise-01	time	date-entity	0	0.2	
# ::edge	recommend-01	ARG1	interview-01	0.0.1.0	0.0.1	
# ::edge	secretary	mod	date-entity	0.2.0	0.2	
# ::edge	secretary	mod	union	0.2.0	0.2.0.0	
(p4 / promise-01 
      :ARG1 (p2 / person 
            :ARG0-of (p3 / play-01) 
            :ARG1-of (i / interview-01 
                  :ARG1-of (r / recommend-01 
                        :ARG1-of (i2 / insist-01 
                              :ARG0 (c2 / committee))) 
                  :ARG2 (a / along) 
                  :medium (c / candidate 
                        :mod (o / other) 
                        :quant 3))) 
      :ARG2 (j / job) 
      :time (d / date-entity 
            :mod-of (s / secretary 
                  :mod (u / union)) 
            :month 8 
            :time-of (e / elect-01 
                  :topic-of (p / platform 
                        :mod (o2 / only)))))

# ::snt i should think the dogs of stratforduponavon are delighted with the councils collection  well yesterdays forecast promised you snow and this was the result
# ::tok i should think the dogs of stratforduponavon are delighted with the councils collection well yesterdays forecast promised you snow and this was the result
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:14.206
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt but kings taunton are currently unbeaten and promise much
# ::tok but kings taunton are currently unbeaten and promise much
# ::alignments 8-9|0.0.1 7-8|0.0.2 6-7|0.0 4-5|0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:14.218
# ::node	0	contrast-01	0-1
# ::node	0.0	and	6-7
# ::node	0.0.0	current	4-5
# ::node	0.0.1	much	8-9
# ::node	0.0.2	promise-01	7-8
# ::root	0	contrast-01
# ::edge	and	mod	current	0.0	0.0.0	
# ::edge	and	op1	promise-01	0.0	0.0.2	
# ::edge	contrast-01	ARG2	and	0	0.0	
# ::edge	much	op1	and	0.0.1	0.0	
(c2 / contrast-01 
      :ARG2 (a / and 
            :mod (c / current) 
            :op-of (m / much) 
            :op1 (p / promise-01)))

# ::snt a department of education spokesman said ministers are studying the question of increased flexibility for immigrants from hong kong as promised by the prime minister in parliament last week
# ::tok a department of education spokesman said ministers are studying the question of increased flexibility for immigrants from hong kong as promised by the prime minister in parliament last week
# ::alignments 28-29|0.1.0.0.1.2.2 27-28|0.1.0.0.1.2.2.0 26-27|0.1.0.0.1.2.0.0.0+0.1.0.0.1.2.0.0+0.1.0.0.1.2.0 24-25|0.1.0.0.1.2.1+0.1.0.0.1.2 23-24|0.1.0.0.1.2.1.0 20-21|0.1.0.0.1.1.0.0 17-19|0.1.0.0.1.1.0.2.0+0.1.0.0.1.1.0.2.1+0.1.0.0.1.1.0.2+0.1.0.0.1.1.0 15-16|0.1.0.0.1.1+0.1.0.0.1 13-14|0.1.0.0 12-13|0.1.0.0.0 10-11|0.1.0 8-9|0.1 6-7|0.1.0.0.1.1.0.1.0+0.1.0.0.1.1.0.1 5-6|0 4-5|0.1.0.0.1.0.1+0.1.0.0.1.0 3-4|0.1.0.0.1.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:14.679
# ::node	0	say-01	5-6
# ::node	0.0	department	1-2
# ::node	0.1	study-01	8-9
# ::node	0.1.0	question-01	10-11
# ::node	0.1.0.0	flexibility	13-14
# ::node	0.1.0.0.0	increase-01	12-13
# ::node	0.1.0.0.1	person	15-16
# ::node	0.1.0.0.1.0	have-org-role-91	4-5
# ::node	0.1.0.0.1.0.0	educate-01	3-4
# ::node	0.1.0.0.1.0.1	spokesman	4-5
# ::node	0.1.0.0.1.1	immigrate-01	15-16
# ::node	0.1.0.0.1.1.0	country	17-19
# ::node	0.1.0.0.1.1.0.0	promise-01	20-21
# ::node	0.1.0.0.1.1.0.1	have-org-role-91	6-7
# ::node	0.1.0.0.1.1.0.1.0	minister	6-7
# ::node	0.1.0.0.1.1.0.2	name	17-19
# ::node	0.1.0.0.1.1.0.2.0	"kong"	17-19
# ::node	0.1.0.0.1.1.0.2.1	"hong"	17-19
# ::node	0.1.0.0.1.2	have-org-role-91	24-25
# ::node	0.1.0.0.1.2.0	government-organization	26-27
# ::node	0.1.0.0.1.2.0.0	name	26-27
# ::node	0.1.0.0.1.2.0.0.0	"Parliament"	26-27
# ::node	0.1.0.0.1.2.1	minister	24-25
# ::node	0.1.0.0.1.2.1.0	prime	23-24
# ::node	0.1.0.0.1.2.2	week	28-29
# ::node	0.1.0.0.1.2.2.0	last	27-28
# ::root	0	say-01
# ::edge	country	name	name	0.1.0.0.1.1.0	0.1.0.0.1.1.0.2	
# ::edge	flexibility	poss	person	0.1.0.0	0.1.0.0.1	
# ::edge	government-organization	name	name	0.1.0.0.1.2.0	0.1.0.0.1.2.0.0	
# ::edge	have-org-role-91	ARG0	person	0.1.0.0.1.0	0.1.0.0.1	
# ::edge	have-org-role-91	ARG0	person	0.1.0.0.1.2	0.1.0.0.1	
# ::edge	have-org-role-91	ARG1	country	0.1.0.0.1.1.0.1	0.1.0.0.1.1.0	
# ::edge	have-org-role-91	ARG1	educate-01	0.1.0.0.1.0	0.1.0.0.1.0.0	
# ::edge	have-org-role-91	ARG1	government-organization	0.1.0.0.1.2	0.1.0.0.1.2.0	
# ::edge	have-org-role-91	ARG2	minister	0.1.0.0.1.1.0.1	0.1.0.0.1.1.0.1.0	
# ::edge	have-org-role-91	ARG2	minister	0.1.0.0.1.2	0.1.0.0.1.2.1	
# ::edge	have-org-role-91	ARG2	spokesman	0.1.0.0.1.0	0.1.0.0.1.0.1	
# ::edge	have-org-role-91	time	week	0.1.0.0.1.2	0.1.0.0.1.2.2	
# ::edge	immigrate-01	ARG0	person	0.1.0.0.1.1	0.1.0.0.1	
# ::edge	immigrate-01	ARG1	country	0.1.0.0.1.1	0.1.0.0.1.1.0	
# ::edge	increase-01	ARG1	flexibility	0.1.0.0.0	0.1.0.0	
# ::edge	minister	mod	prime	0.1.0.0.1.2.1	0.1.0.0.1.2.1.0	
# ::edge	name	op1	"Parliament"	0.1.0.0.1.2.0.0	0.1.0.0.1.2.0.0.0	
# ::edge	name	op1	"kong"	0.1.0.0.1.1.0.2	0.1.0.0.1.1.0.2.0	
# ::edge	name	op2	"hong"	0.1.0.0.1.1.0.2	0.1.0.0.1.1.0.2.1	
# ::edge	promise-01	ARG0	country	0.1.0.0.1.1.0.0	0.1.0.0.1.1.0	
# ::edge	question-01	location	flexibility	0.1.0	0.1.0.0	
# ::edge	say-01	ARG0	department	0	0.0	
# ::edge	say-01	ARG1	study-01	0	0.1	
# ::edge	study-01	ARG1	question-01	0.1	0.1.0	
# ::edge	week	mod	last	0.1.0.0.1.2.2	0.1.0.0.1.2.2.0	
(s2 / say-01 
      :ARG0 (d / department) 
      :ARG1 (s / study-01 
            :ARG1 (q / question-01 
                  :location (f / flexibility 
                        :ARG1-of (i2 / increase-01) 
                        :poss (p3 / person 
                              :ARG0-of (h3 / have-org-role-91 
                                    :ARG1 (e / educate-01) 
                                    :ARG2 (s3 / spokesman)) 
                              :ARG0-of (i / immigrate-01 
                                    :ARG1 (c / country 
                                          :ARG0-of (p2 / promise-01) 
                                          :ARG1-of (h2 / have-org-role-91 
                                                :ARG2 (m2 / minister)) 
                                          :name (n2 / name 
                                                :op1 "kong" 
                                                :op2 "hong"))) 
                              :ARG0-of (h / have-org-role-91 
                                    :ARG1 (g / government-organization 
                                          :name (n / name 
                                                :op1 "Parliament")) 
                                    :ARG2 (m / minister 
                                          :mod (p / prime)) 
                                    :time (w / week 
                                          :mod (l / last))))))))

# ::snt the application to the council of state recalls that in the bill proclaiming the referendum the french government promised not to amnesty anyone who was guilty of violent crimes
# ::tok the application to the council of state recalls that in the bill proclaiming the referendum the french government promised not to amnesty anyone who was guilty of violent crimes
# ::alignments 28-29|0.1.0.0.1 27-28|0.1.0.0.1.0 25-26|0.1.0.0 22-23|0.1.0 21-22|0.1.1 18-19|0.1 16-17|0.1.0.0.0.0.0+0.1.0.0.0.0+0.1.0.0.0 14-15|0.0.1 11-12|0.0.0 7-8|0 6-7|0.2 4-5|0.0.2 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:15.089
# ::node	0	recall-02	7-8
# ::node	0.0	apply-01	1-2
# ::node	0.0.0	bill	11-12
# ::node	0.0.1	referendum	14-15
# ::node	0.0.2	council	4-5
# ::node	0.1	promise-01	18-19
# ::node	0.1.0	anyone	22-23
# ::node	0.1.0.0	guilty-41	25-26
# ::node	0.1.0.0.0	country	16-17
# ::node	0.1.0.0.0.0	name	16-17
# ::node	0.1.0.0.0.0.0	"France"	16-17
# ::node	0.1.0.0.1	crime	28-29
# ::node	0.1.0.0.1.0	violent	27-28
# ::node	0.1.1	amnesty	21-22
# ::node	0.2	state	6-7
# ::root	0	recall-02
# ::edge	apply-01	ARG0	bill	0.0	0.0.0	
# ::edge	apply-01	ARG1	referendum	0.0	0.0.1	
# ::edge	apply-01	ARG2	council	0.0	0.0.2	
# ::edge	country	name	name	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	crime	mod	violent	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	guilty-41	ARG0	country	0.1.0.0	0.1.0.0.0	
# ::edge	guilty-41	ARG1	anyone	0.1.0.0	0.1.0	
# ::edge	guilty-41	ARG2	crime	0.1.0.0	0.1.0.0.1	
# ::edge	name	op1	"France"	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	promise-01	ARG1	anyone	0.1	0.1.0	
# ::edge	promise-01	ARG2	amnesty	0.1	0.1.1	
# ::edge	recall-02	ARG0	apply-01	0	0.0	
# ::edge	recall-02	ARG1	promise-01	0	0.1	
# ::edge	recall-02	time	state	0	0.2	
(r2 / recall-02 
      :ARG0 (a3 / apply-01 
            :ARG0 (b / bill) 
            :ARG1 (r / referendum) 
            :ARG2 (c3 / council)) 
      :ARG1 (p / promise-01 
            :ARG1 (a / anyone 
                  :ARG1-of (g / guilty-41 
                        :ARG0 (c2 / country 
                              :name (n / name 
                                    :op1 "France")) 
                        :ARG2 (c / crime 
                              :mod (v / violent)))) 
            :ARG2 (a2 / amnesty)) 
      :time (s / state))

# ::snt sir robert appeared to rule out any deal to save the ravenscraig strip mill pointing out that bs had never promised to consider private bids for it
# ::tok sir robert appeared to rule out any deal to save the ravenscraig strip mill pointing out that bs had never promised to consider private bids for it
# ::alignments 26-27|0.1.0.0.0.0.0.0 23-24|0.0 22-23|0.1.0.0.0.0.0 20-21|0.1.0.0.0.0 14-15|0.1.0.0.0 12-13|0.1.0.1 9-10|0.1.0.0 7-8|0.1.0 6-7|0.1.0.2 4-5|0.1 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:15.171
# ::node	0	appear-01	2-3
# ::node	0.0	private	23-24
# ::node	0.1	rule-03	4-5
# ::node	0.1.0	deal-01	7-8
# ::node	0.1.0.0	save-02	9-10
# ::node	0.1.0.0.0	point-02	14-15
# ::node	0.1.0.0.0.0	promise-01	20-21
# ::node	0.1.0.0.0.0.0	consider-02	22-23
# ::node	0.1.0.0.0.0.0.0	it	26-27
# ::node	0.1.0.1	strip-01	12-13
# ::node	0.1.0.2	any	6-7
# ::root	0	appear-01
# ::edge	appear-01	ARG0	private	0	0.0	
# ::edge	appear-01	ARG1	rule-03	0	0.1	
# ::edge	consider-02	ARG1	it	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	deal-01	ARG1	save-02	0.1.0	0.1.0.0	
# ::edge	deal-01	mod	any	0.1.0	0.1.0.2	
# ::edge	point-02	ARG1	promise-01	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	promise-01	ARG1	consider-02	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	rule-03	ARG1	deal-01	0.1	0.1.0	
# ::edge	save-02	ARG1	point-02	0.1.0.0	0.1.0.0.0	
# ::edge	strip-01	ARG1	deal-01	0.1.0.1	0.1.0	
(a2 / appear-01 
      :ARG0 (p / private) 
      :ARG1 (r / rule-03 
            :ARG1 (d / deal-01 
                  :ARG1 (s2 / save-02 
                        :ARG1 (p3 / point-02 
                              :ARG1 (p2 / promise-01 
                                    :ARG1 (c / consider-02 
                                          :ARG1 (i / it))))) 
                  :ARG1-of (s / strip-01) 
                  :mod (a / any))))

# ::snt the cable channel cnn promises viewers of its twiceweekly show that they will see a sensual blonde ritually humiliating balding middleaged white males in public
# ::tok the cable channel cnn promises viewers of its twiceweekly show that they will see a sensual blonde ritually humiliating balding middleaged white males in public
# ::alignments 24-25|0.1.0.0.0.0.0 22-23|0.1.0.0.0.0.0.0 21-22|0.1.0.0.0.0.0.0.0 17-18|0.1.0.0.0.1 16-17|0.1.0.0.0.1.0 13-14|0.1.0.0.0 11-12|0.1.0.0.0.0 9-10|0.1.0.0 5-6|0.1.0+0.1 4-5|0 2-3|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:15.493
# ::node	0	promise-01	4-5
# ::node	0.0	channel	2-3
# ::node	0.0.0	cable	1-2
# ::node	0.1	person	5-6
# ::node	0.1.0	view-01	5-6
# ::node	0.1.0.0	show-01	9-10
# ::node	0.1.0.0.0	see-01	13-14
# ::node	0.1.0.0.0.0	they	11-12
# ::node	0.1.0.0.0.0.0	public	24-25
# ::node	0.1.0.0.0.0.0.0	male	22-23
# ::node	0.1.0.0.0.0.0.0.0	white	21-22
# ::node	0.1.0.0.0.1	ritual	17-18
# ::node	0.1.0.0.0.1.0	blonde	16-17
# ::root	0	promise-01
# ::edge	channel	mod	cable	0.0	0.0.0	
# ::edge	male	location	public	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	male	mod	white	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0.0.0	
# ::edge	promise-01	ARG0	channel	0	0.0	
# ::edge	promise-01	ARG1	person	0	0.1	
# ::edge	public	poss	they	0.1.0.0.0.0.0	0.1.0.0.0.0	
# ::edge	ritual	mod	blonde	0.1.0.0.0.1	0.1.0.0.0.1.0	
# ::edge	see-01	ARG0	they	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	see-01	ARG1	ritual	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	show-01	ARG2	see-01	0.1.0.0	0.1.0.0.0	
# ::edge	view-01	ARG0	person	0.1.0	0.1	
# ::edge	view-01	ARG1	show-01	0.1.0	0.1.0.0	
(p3 / promise-01 
      :ARG0 (c / channel 
            :mod (c2 / cable)) 
      :ARG1 (p2 / person 
            :ARG0-of (v / view-01 
                  :ARG1 (s2 / show-01 
                        :ARG2 (s / see-01 
                              :ARG0 (t / they 
                                    :poss-of (p / public 
                                          :location-of (m / male 
                                                :mod (w / white)))) 
                              :ARG1 (r / ritual 
                                    :mod (b / blonde)))))))

# ::snt rather different to the falling fares we have been promised from deregulation and greater aircraft efficiency
# ::tok rather different to the falling fares we have been promised from deregulation and greater aircraft efficiency
# ::alignments 15-16|0.2 14-15|0.2.1 13-14|0.2.0 12-13|0 11-12|0.1 9-10|0.0 6-7|0.0.0 5-6|0.0.1 4-5|0.0.0.0 1-2|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:15.720
# ::node	0	and	12-13
# ::node	0.0	promise-01	9-10
# ::node	0.0.0	we	6-7
# ::node	0.0.0.0	fall-01	4-5
# ::node	0.0.1	fare	5-6
# ::node	0.0.1.0	differ-02	1-2
# ::node	0.1	deregulate-01	11-12
# ::node	0.2	efficiency	15-16
# ::node	0.2.0	great	13-14
# ::node	0.2.1	aircraft	14-15
# ::root	0	and
# ::edge	and	op1	deregulate-01	0	0.1	
# ::edge	and	op2	efficiency	0	0.2	
# ::edge	differ-02	ARG1	fare	0.0.1.0	0.0.1	
# ::edge	efficiency	mod	aircraft	0.2	0.2.1	
# ::edge	efficiency	mod	great	0.2	0.2.0	
# ::edge	fall-01	ARG1	we	0.0.0.0	0.0.0	
# ::edge	promise-01	ARG0	and	0.0	0	
# ::edge	promise-01	ARG1	we	0.0	0.0.0	
# ::edge	promise-01	ARG2	fare	0.0	0.0.1	
(a2 / and 
      :ARG0-of (p / promise-01 
            :ARG1 (w / we 
                  :ARG1-of (f2 / fall-01)) 
            :ARG2 (f / fare 
                  :ARG1-of (d2 / differ-02))) 
      :op1 (d / deregulate-01) 
      :op2 (e / efficiency 
            :mod (g / great) 
            :mod (a / aircraft)))

# ::snt addressing 80000 people in a north indian field mr gandhi promised to restore a mythical hindu kingdom of perfection under the deity ram if his party won on 22 24 and 26 november
# ::tok addressing 80000 people in a north indian field mr gandhi promised to restore a mythical hindu kingdom of perfection under the deity ram if his party won on 22 24 and 26 november
# ::alignments 32-33|0.0.3.0+0.0.3 31-32|0.0.2.2.0 30-31|0 29-30|0.0.2.0.0 28-29|0.0.2.0 26-27|0.0 25-26|0.0.0 16-17|0.0.2.1 12-13|0.0.2 10-11|0.0.2.2 7-8|0.0.2.2.1 5-6|0.0.1 0-1|0.0.2.2.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:15.993
# ::node	0	and	30-31
# ::node	0.0	win-01	26-27
# ::node	0.0.0	party	25-26
# ::node	0.0.1	north	5-6
# ::node	0.0.2	restore-01	12-13
# ::node	0.0.2.0	22	28-29
# ::node	0.0.2.0.0	24	29-30
# ::node	0.0.2.1	kingdom	16-17
# ::node	0.0.2.2	promise-01	10-11
# ::node	0.0.2.2.0	26	31-32
# ::node	0.0.2.2.1	field	7-8
# ::node	0.0.2.2.2	address-02	0-1
# ::node	0.0.3	date-entity	32-33
# ::node	0.0.3.0	11	32-33
# ::root	0	and
# ::edge	24	quant	22	0.0.2.0.0	0.0.2.0	
# ::edge	address-02	ARG3	promise-01	0.0.2.2.2	0.0.2.2	
# ::edge	and	op1	win-01	0	0.0	
# ::edge	date-entity	month	11	0.0.3	0.0.3.0	
# ::edge	promise-01	ARG0	26	0.0.2.2	0.0.2.2.0	
# ::edge	promise-01	ARG1	field	0.0.2.2	0.0.2.2.1	
# ::edge	promise-01	ARG2	restore-01	0.0.2.2	0.0.2	
# ::edge	restore-01	ARG0	22	0.0.2	0.0.2.0	
# ::edge	restore-01	ARG1	kingdom	0.0.2	0.0.2.1	
# ::edge	restore-01	ARG2	win-01	0.0.2	0.0	
# ::edge	win-01	ARG0	party	0.0	0.0.0	
# ::edge	win-01	ARG1	north	0.0	0.0.1	
# ::edge	win-01	time	date-entity	0.0	0.0.3	
(a / and 
      :op1 (w / win-01 
            :ARG0 (p / party) 
            :ARG1 (n / north) 
            :ARG2-of (r / restore-01 
                  :ARG0 (23 / 22 
                        :quant-of 24) 
                  :ARG1 (k / kingdom) 
                  :ARG2-of (p2 / promise-01 
                        :ARG0 26 
                        :ARG1 (f / field) 
                        :ARG3-of (a2 / address-02))) 
            :time (d / date-entity 
                  :month 11)))

# ::snt the government has since promised more complex measures first to restrict unofficial strikes such as those on the london underground and second to stop official strikes in essential services such as british rail
# ::tok the government has since promised more complex measures first to restrict unofficial strikes such as those on the london underground and second to stop official strikes in essential services such as british rail
# ::alignments 31-33|0.0.0.1.0.2.0.0+0.0.0.1.0.2.0.1+0.0.0.1.0.2.0+0.0.0.1.0.2 29-30|0.0.0.1.0.1 28-29|0.0.0.1.0 27-28|0.0.0.1.0.0 25-26|0.0.0.1 24-25|0.0.0.0+0.0.0 23-24|0.0.0.1.1 20-21|0 18-20|0.0.1.0+0.0.1.1+0.0.1+0.0 13-14|0.0.0.1.1.0.0.0 12-13|0.0.0.1.1.0.0 10-11|0.0.0.1.1.0 7-8|0.0.0.1.1.0.1.0 6-7|0.0.0.1.1.0.1.0.0 4-5|0.0.0.1.1.0.1 3-4|0.0.0.1.1.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:16.635
# ::node	0	and	20-21
# ::node	0.0	organization	18-20
# ::node	0.0.0	have-org-role-91	24-25
# ::node	0.0.0.0	official	24-25
# ::node	0.0.0.1	strike-01	25-26
# ::node	0.0.0.1.0	service	28-29
# ::node	0.0.0.1.0.0	essential	27-28
# ::node	0.0.0.1.0.1	such	29-30
# ::node	0.0.0.1.0.2	organization	31-33
# ::node	0.0.0.1.0.2.0	name	31-33
# ::node	0.0.0.1.0.2.0.0	"rail"	31-33
# ::node	0.0.0.1.0.2.0.1	"british"	31-33
# ::node	0.0.0.1.1	stop-01	23-24
# ::node	0.0.0.1.1.0	restrict-01	10-11
# ::node	0.0.0.1.1.0.0	strike-01	12-13
# ::node	0.0.0.1.1.0.0.0	such	13-14
# ::node	0.0.0.1.1.0.1	promise-01	4-5
# ::node	0.0.0.1.1.0.1.0	measure	7-8
# ::node	0.0.0.1.1.0.1.0.0	complex	6-7
# ::node	0.0.0.1.1.0.1.1	since	3-4
# ::node	0.0.1	name	18-20
# ::node	0.0.1.0	"underground"	18-20
# ::node	0.0.1.1	"london"	18-20
# ::root	0	and
# ::edge	and	op1	organization	0	0.0	
# ::edge	have-org-role-91	ARG1	organization	0.0.0	0.0	
# ::edge	have-org-role-91	ARG2	official	0.0.0	0.0.0.0	
# ::edge	measure	mod	complex	0.0.0.1.1.0.1.0	0.0.0.1.1.0.1.0.0	
# ::edge	name	op1	"rail"	0.0.0.1.0.2.0	0.0.0.1.0.2.0.0	
# ::edge	name	op1	"underground"	0.0.1	0.0.1.0	
# ::edge	name	op2	"british"	0.0.0.1.0.2.0	0.0.0.1.0.2.0.1	
# ::edge	name	op2	"london"	0.0.1	0.0.1.1	
# ::edge	organization	name	name	0.0	0.0.1	
# ::edge	organization	name	name	0.0.0.1.0.2	0.0.0.1.0.2.0	
# ::edge	promise-01	ARG1	measure	0.0.0.1.1.0.1	0.0.0.1.1.0.1.0	
# ::edge	promise-01	ARG2	restrict-01	0.0.0.1.1.0.1	0.0.0.1.1.0	
# ::edge	promise-01	time	since	0.0.0.1.1.0.1	0.0.0.1.1.0.1.1	
# ::edge	restrict-01	ARG1	strike-01	0.0.0.1.1.0	0.0.0.1.1.0.0	
# ::edge	restrict-01	ARG2	stop-01	0.0.0.1.1.0	0.0.0.1.1	
# ::edge	service	mod	essential	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	service	poss	organization	0.0.0.1.0	0.0.0.1.0.2	
# ::edge	stop-01	ARG1	strike-01	0.0.0.1.1	0.0.0.1	
# ::edge	strike-01	ARG1	service	0.0.0.1	0.0.0.1.0	
# ::edge	strike-01	ARG1	such	0.0.0.1.1.0.0	0.0.0.1.1.0.0.0	
# ::edge	strike-01	mod	have-org-role-91	0.0.0.1	0.0.0	
# ::edge	such	mod	service	0.0.0.1.0.1	0.0.0.1.0	
(a / and 
      :op1 (o3 / organization 
            :ARG1-of (h / have-org-role-91 
                  :ARG2 (o2 / official) 
                  :mod-of (s3 / strike-01 
                        :ARG1 (s2 / service 
                              :mod (e / essential) 
                              :mod-of (s / such) 
                              :poss (o / organization 
                                    :name (n / name 
                                          :op1 "rail" 
                                          :op2 "british"))) 
                        :ARG1-of (s4 / stop-01 
                              :ARG2-of (r / restrict-01 
                                    :ARG1 (s6 / strike-01 
                                          :ARG1 (s5 / such)) 
                                    :ARG2-of (p / promise-01 
                                          :ARG1 (m / measure 
                                                :mod (c / complex)) 
                                          :time (s7 / since)))))) 
            :name (n2 / name 
                  :op1 "underground" 
                  :op2 "london")))

# ::snt they turned their attention to the 25yearold welshman after failing to persuade liverpool to enter into a similar agreement promising them first refusal in the event of peter beardsley becoming available for transfer
# ::tok they turned their attention to the 25yearold welshman after failing to persuade liverpool to enter into a similar agreement promising them first refusal in the event of peter beardsley becoming available for transfer
# ::alignments 32-33|0.0.0 30-31|0.0.1.0 29-30|0.0.1 25-26|0.0 22-23|0 19-20|0.1 18-19|0.1.0 14-15|0.1.0.0 11-12|0.1.0.0.0 9-10|0.1.0.0.0.0 8-9|0.1.0.0.0.0.1 3-4|0.1.0.0.0.0.0.0 0-1|0.1.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:16.726
# ::node	0	refuse-01	22-23
# ::node	0.0	event	25-26
# ::node	0.0.0	transfer-01	32-33
# ::node	0.0.1	become-01	29-30
# ::node	0.0.1.0	available	30-31
# ::node	0.1	promise-01	19-20
# ::node	0.1.0	agree-01	18-19
# ::node	0.1.0.0	enter-01	14-15
# ::node	0.1.0.0.0	persuade-01	11-12
# ::node	0.1.0.0.0.0	fail-01	9-10
# ::node	0.1.0.0.0.0.0	they	0-1
# ::node	0.1.0.0.0.0.0.0	attention	3-4
# ::node	0.1.0.0.0.0.1	after	8-9
# ::root	0	refuse-01
# ::edge	after	op1	fail-01	0.1.0.0.0.0.1	0.1.0.0.0.0	
# ::edge	attention	poss	they	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	become-01	ARG1	event	0.0.1	0.0	
# ::edge	become-01	ARG2	available	0.0.1	0.0.1.0	
# ::edge	enter-01	ARG1	agree-01	0.1.0.0	0.1.0	
# ::edge	fail-01	ARG0	they	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	fail-01	ARG2	persuade-01	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	persuade-01	ARG2	enter-01	0.1.0.0.0	0.1.0.0	
# ::edge	promise-01	ARG1	agree-01	0.1	0.1.0	
# ::edge	promise-01	ARG2	refuse-01	0.1	0	
# ::edge	refuse-01	ARG1	event	0	0.0	
# ::edge	transfer-01	ARG0	event	0.0.0	0.0	
(r / refuse-01 
      :ARG1 (e / event 
            :ARG0-of (t / transfer-01) 
            :ARG1-of (b / become-01 
                  :ARG2 (a / available))) 
      :ARG2-of (p / promise-01 
            :ARG1 (a2 / agree-01 
                  :ARG1-of (e2 / enter-01 
                        :ARG2-of (p2 / persuade-01 
                              :ARG2-of (f / fail-01 
                                    :ARG0 (t2 / they 
                                          :poss-of (a4 / attention)) 
                                    :op-of (a3 / after)))))))

# ::snt chay promised her that by the time she returned even if she were please god to be back by the following afternoon he would have found a sweet little house for them
# ::tok chay promised her that by the time she returned even if she were please god to be back by the following afternoon he would have found a sweet little house for them
# ::alignments 29-30|0.1.0.1.0.0.0.0 28-29|0.1.0.1.0.0.0.0.0 27-28|0.1.0.1.0.0.0.0.1 25-26|0.1.0.1.0.0.0 22-23|0.1.0.1.0.0 21-22|0.1.0.1.0.0.0.1 17-18|0.1.0.1.0.1 14-15|0.0 13-14|0 11-12|0.1 8-9|0.1.0 7-8|0.1.0.0 6-7|0.1.0.1 1-2|0.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:17.486
# ::node	0	please-01	13-14
# ::node	0.0	god	14-15
# ::node	0.1	she	11-12
# ::node	0.1.0	return-01	8-9
# ::node	0.1.0.0	she	7-8
# ::node	0.1.0.1	time	6-7
# ::node	0.1.0.1.0	promise-01	1-2
# ::node	0.1.0.1.0.0	he	22-23
# ::node	0.1.0.1.0.0.0	find-01	25-26
# ::node	0.1.0.1.0.0.0.0	house	29-30
# ::node	0.1.0.1.0.0.0.0.0	little	28-29
# ::node	0.1.0.1.0.0.0.0.1	sweet	27-28
# ::node	0.1.0.1.0.0.0.1	afternoon	21-22
# ::node	0.1.0.1.0.1	back	17-18
# ::root	0	please-01
# ::edge	find-01	ARG0	he	0.1.0.1.0.0.0	0.1.0.1.0.0	
# ::edge	find-01	ARG1	house	0.1.0.1.0.0.0	0.1.0.1.0.0.0.0	
# ::edge	find-01	duration	afternoon	0.1.0.1.0.0.0	0.1.0.1.0.0.0.1	
# ::edge	house	mod	little	0.1.0.1.0.0.0.0	0.1.0.1.0.0.0.0.0	
# ::edge	house	mod	sweet	0.1.0.1.0.0.0.0	0.1.0.1.0.0.0.0.1	
# ::edge	please-01	ARG0	god	0	0.0	
# ::edge	please-01	ARG1	she	0	0.1	
# ::edge	promise-01	ARG0	he	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	promise-01	ARG1	back	0.1.0.1.0	0.1.0.1.0.1	
# ::edge	promise-01	purpose	time	0.1.0.1.0	0.1.0.1	
# ::edge	return-01	ARG0	she	0.1.0	0.1	
# ::edge	return-01	ARG1	she	0.1.0	0.1.0.0	
# ::edge	return-01	time	time	0.1.0	0.1.0.1	
(p / please-01 
      :ARG0 (g / god) 
      :ARG1 (s2 / she 
            :ARG0-of (r / return-01 
                  :ARG1 (s3 / she) 
                  :time (t / time 
                        :purpose-of (p2 / promise-01 
                              :ARG0 (h2 / he 
                                    :ARG0-of (f / find-01 
                                          :ARG1 (h / house 
                                                :mod (l / little) 
                                                :mod (s / sweet)) 
                                          :duration (a / afternoon))) 
                              :ARG1 (b / back))))))

# ::snt libra sept 24oct 23 if youve been prevaricating procrastinating or putting off until tomorrow what should be done today youll be pleased to know that tomorrows here  nows your chance to clear any backlog of correspondence tasks or chores youve been promising to catch up with and by july 29th youll be giving yourself a pat on the back
# ::tok libra sept 24oct 23 if youve been prevaricating procrastinating or putting off until tomorrow what should be done today youll be pleased to know that tomorrows here nows your chance to clear any backlog of correspondence tasks or chores youve been promising to catch up with and by july 29th youll be giving yourself a pat on the back
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:17.488
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt beirut appeared poised for a brutal and decisive battle last night as more than 8000 syrian troops with artillery and armour converged on the front lines above the presidential palace where the christian general michel aoun dismissed hours earlier by lebanons newlyelected president elias hrawi promised to fight to the death rather than submit to the wishes of the syrianbacked and internationally recognised government
# ::tok beirut appeared poised for a brutal and decisive battle last night as more than 8000 syrian troops with artillery and armour converged on the front lines above the presidential palace where the christian general michel aoun dismissed hours earlier by lebanons newlyelected president elias hrawi promised to fight to the death rather than submit to the wishes of the syrianbacked and internationally recognised government
# ::alignments 62-63|0.0.2.1.1.0.0.0.0.0 61-62|0.0.2.1.1.0.0.0.0.0.0 60-61|0.0.2.1.1.0.0.0.0 56-57|0.0.2.1.1.0.0.0 53-54|0.0.2.1.1.0.0 50-51|0.0.2.1.1.1.0 47-48|0.0.2.1.1.1 45-46|0.0.2.1.1 43-45|0.0.2.1.1.0.3.0+0.0.2.1.1.0.3.1+0.0.2.1.1.0.3+0.0.2.1.1.0 42-43|0.0.2.1.1.0.2.0+0.0.2.1.1.0.2 38-39|0.0.2.1.0.0 37-38|0.0.2.1.0.0.0.0+0.0.2.1.0.0.0 36-37|0.0.2.1.0 34-36|0.0.2.1.4.0+0.0.2.1.4.1+0.0.2.1.4+0.0.2.1 33-34|0.0.2.1.3 32-33|0.0.2.1.2.0.0+0.0.2.1.2.0+0.0.2.1.2 28-29|0.0.2.1.1.0.1.0+0.0.2.1.1.0.1 26-27|0.0.1 25-26|0.0.1.0 24-25|0.0.1.0.0 21-22|0.0.2 20-21|0.0.2.0.1 19-20|0.0.2.0 18-19|0.0.2.0.0 16-17|0.0.2.2 14-15|0.0.2.2.0 10-11|0.0.0.0.0 9-10|0.0.0.0.0.0 8-9|0.0.0.0 7-8|0.0.0.2 6-7|0.0.0 5-6|0.0.0.1 2-3|0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:19.117
# ::node	0	appear-01	1-2
# ::node	0.0	poise-01	2-3
# ::node	0.0.0	and	6-7
# ::node	0.0.0.0	battle-01	8-9
# ::node	0.0.0.0.0	night	10-11
# ::node	0.0.0.0.0.0	last	9-10
# ::node	0.0.0.1	brutal	5-6
# ::node	0.0.0.2	decisive	7-8
# ::node	0.0.1	above	26-27
# ::node	0.0.1.0	line	25-26
# ::node	0.0.1.0.0	front	24-25
# ::node	0.0.2	converge-01	21-22
# ::node	0.0.2.0	and	19-20
# ::node	0.0.2.0.0	artillery	18-19
# ::node	0.0.2.0.1	armour	20-21
# ::node	0.0.2.1	person	34-36
# ::node	0.0.2.1.0	dismiss-01	36-37
# ::node	0.0.2.1.0.0	early	38-39
# ::node	0.0.2.1.0.0.0	temporal-quantity	37-38
# ::node	0.0.2.1.0.0.0.0	hour	37-38
# ::node	0.0.2.1.1	promise-01	45-46
# ::node	0.0.2.1.1.0	person	43-45
# ::node	0.0.2.1.1.0.0	submit-01	53-54
# ::node	0.0.2.1.1.0.0.0	wish-01	56-57
# ::node	0.0.2.1.1.0.0.0.0	and	60-61
# ::node	0.0.2.1.1.0.0.0.0.0	recognize-01	62-63
# ::node	0.0.2.1.1.0.0.0.0.0.0	international	61-62
# ::node	0.0.2.1.1.0.1	have-org-role-91	28-29
# ::node	0.0.2.1.1.0.1.0	president	28-29
# ::node	0.0.2.1.1.0.2	have-org-role-91	42-43
# ::node	0.0.2.1.1.0.2.0	president	42-43
# ::node	0.0.2.1.1.0.3	name	43-45
# ::node	0.0.2.1.1.0.3.0	"hrawi"	43-45
# ::node	0.0.2.1.1.0.3.1	"elias"	43-45
# ::node	0.0.2.1.1.1	fight-01	47-48
# ::node	0.0.2.1.1.1.0	die-01	50-51
# ::node	0.0.2.1.2	religious-group	32-33
# ::node	0.0.2.1.2.0	name	32-33
# ::node	0.0.2.1.2.0.0	"Christian"	32-33
# ::node	0.0.2.1.3	general	33-34
# ::node	0.0.2.1.4	name	34-36
# ::node	0.0.2.1.4.0	"aoun"	34-36
# ::node	0.0.2.1.4.1	"michel"	34-36
# ::node	0.0.2.2	troop	16-17
# ::node	0.0.2.2.0	8000	14-15
# ::root	0	appear-01
# ::edge	above	degree	line	0.0.1	0.0.1.0	
# ::edge	and	op1	artillery	0.0.2.0	0.0.2.0.0	
# ::edge	and	op1	brutal	0.0.0	0.0.0.1	
# ::edge	and	op1	recognize-01	0.0.2.1.1.0.0.0.0	0.0.2.1.1.0.0.0.0.0	
# ::edge	and	op2	armour	0.0.2.0	0.0.2.0.1	
# ::edge	and	op2	decisive	0.0.0	0.0.0.2	
# ::edge	appear-01	ARG2	poise-01	0	0.0	
# ::edge	battle-01	ARG1	night	0.0.0.0	0.0.0.0.0	
# ::edge	battle-01	ARG2	and	0.0.0.0	0.0.0	
# ::edge	converge-01	ARG0	and	0.0.2	0.0.2.0	
# ::edge	converge-01	ARG1	person	0.0.2	0.0.2.1	
# ::edge	converge-01	ARG2	troop	0.0.2	0.0.2.2	
# ::edge	dismiss-01	ARG0	person	0.0.2.1.0	0.0.2.1	
# ::edge	dismiss-01	ARG1	early	0.0.2.1.0	0.0.2.1.0.0	
# ::edge	early	quant	temporal-quantity	0.0.2.1.0.0	0.0.2.1.0.0.0	
# ::edge	fight-01	ARG2	die-01	0.0.2.1.1.1	0.0.2.1.1.1.0	
# ::edge	have-org-role-91	ARG0	person	0.0.2.1.1.0.1	0.0.2.1.1.0	
# ::edge	have-org-role-91	ARG0	person	0.0.2.1.1.0.2	0.0.2.1.1.0	
# ::edge	have-org-role-91	ARG2	president	0.0.2.1.1.0.1	0.0.2.1.1.0.1.0	
# ::edge	have-org-role-91	ARG2	president	0.0.2.1.1.0.2	0.0.2.1.1.0.2.0	
# ::edge	line	mod	front	0.0.1.0	0.0.1.0.0	
# ::edge	name	op1	"Christian"	0.0.2.1.2.0	0.0.2.1.2.0.0	
# ::edge	name	op1	"aoun"	0.0.2.1.4	0.0.2.1.4.0	
# ::edge	name	op1	"hrawi"	0.0.2.1.1.0.3	0.0.2.1.1.0.3.0	
# ::edge	name	op2	"elias"	0.0.2.1.1.0.3	0.0.2.1.1.0.3.1	
# ::edge	name	op2	"michel"	0.0.2.1.4	0.0.2.1.4.1	
# ::edge	night	mod	last	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	person	mod	general	0.0.2.1	0.0.2.1.3	
# ::edge	person	mod	religious-group	0.0.2.1	0.0.2.1.2	
# ::edge	person	name	name	0.0.2.1	0.0.2.1.4	
# ::edge	person	name	name	0.0.2.1.1.0	0.0.2.1.1.0.3	
# ::edge	poise-01	ARG0	and	0.0	0.0.0	
# ::edge	poise-01	ARG1	above	0.0	0.0.1	
# ::edge	poise-01	time	converge-01	0.0	0.0.2	
# ::edge	promise-01	ARG0	person	0.0.2.1.1	0.0.2.1.1.0	
# ::edge	promise-01	ARG1	person	0.0.2.1.1	0.0.2.1	
# ::edge	promise-01	ARG2	fight-01	0.0.2.1.1	0.0.2.1.1.1	
# ::edge	recognize-01	mod	international	0.0.2.1.1.0.0.0.0.0	0.0.2.1.1.0.0.0.0.0.0	
# ::edge	religious-group	name	name	0.0.2.1.2	0.0.2.1.2.0	
# ::edge	submit-01	ARG0	person	0.0.2.1.1.0.0	0.0.2.1.1.0	
# ::edge	submit-01	ARG2	wish-01	0.0.2.1.1.0.0	0.0.2.1.1.0.0.0	
# ::edge	temporal-quantity	unit	hour	0.0.2.1.0.0.0	0.0.2.1.0.0.0.0	
# ::edge	troop	quant	8000	0.0.2.2	0.0.2.2.0	
# ::edge	wish-01	ARG0	and	0.0.2.1.1.0.0.0	0.0.2.1.1.0.0.0.0	
(a7 / appear-01 
      :ARG2 (p6 / poise-01 
            :ARG0 (a6 / and 
                  :ARG2-of (b / battle-01 
                        :ARG1 (n4 / night 
                              :mod (l2 / last))) 
                  :op1 (b2 / brutal) 
                  :op2 (d3 / decisive)) 
            :ARG1 (a2 / above 
                  :degree (l / line 
                        :mod (f2 / front))) 
            :time (c / converge-01 
                  :ARG0 (a4 / and 
                        :op1 (a5 / artillery) 
                        :op2 (a3 / armour)) 
                  :ARG1 (p4 / person 
                        :ARG0-of (d2 / dismiss-01 
                              :ARG1 (e / early 
                                    :quant (t / temporal-quantity 
                                          :unit (h2 / hour)))) 
                        :ARG1-of (p / promise-01 
                              :ARG0 (p2 / person 
                                    :ARG0-of (s / submit-01 
                                          :ARG2 (w / wish-01 
                                                :ARG0 (a / and 
                                                      :op1 (r / recognize-01 
                                                            :mod (i / international))))) 
                                    :ARG0-of (h3 / have-org-role-91 
                                          :ARG2 (p5 / president)) 
                                    :ARG0-of (h / have-org-role-91 
                                          :ARG2 (p3 / president)) 
                                    :name (n / name 
                                          :op1 "hrawi" 
                                          :op2 "elias")) 
                              :ARG2 (f / fight-01 
                                    :ARG2 (d / die-01))) 
                        :mod (r2 / religious-group 
                              :name (n3 / name 
                                    :op1 "Christian")) 
                        :mod (g / general) 
                        :name (n2 / name 
                              :op1 "aoun" 
                              :op2 "michel")) 
                  :ARG2 (t2 / troop 
                        :quant 8000))))

# ::snt albanias ambassador to italy said last night that the tirana government had promised to issue passports and exit visas to all refugees in foreign embassies who had committed no crime
# ::tok albanias ambassador to italy said last night that the tirana government had promised to issue passports and exit visas to all refugees in foreign embassies who had committed no crime
# ::alignments 29-30|0.1.1.0.0.0 28-29|0.1.1.0.0.2 27-28|0.1.1.0.0 24-25|0.1.1.0.0.1 23-24|0.1.1.0.0.1.0 21-22|0.1.1.1.0 20-21|0.1.1.1.0.0 18-19|0.1.1.1.1 17-18|0.1.1.1 16-17|0.1.1 15-16|0.1.1.0 14-15|0.1.0 12-13|0.1 6-7|0.2 5-6|0.2.0 4-5|0 3-4|0.0.1.0+0.0.1+0.0 1-2|0.0.0.0+0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:19.596
# ::node	0	say-01	4-5
# ::node	0.0	country	3-4
# ::node	0.0.0	have-org-role-91	1-2
# ::node	0.0.0.0	ambassador	1-2
# ::node	0.0.1	name	3-4
# ::node	0.0.1.0	"Italy"	3-4
# ::node	0.1	promise-01	12-13
# ::node	0.1.0	issue	14-15
# ::node	0.1.1	and	16-17
# ::node	0.1.1.0	passport	15-16
# ::node	0.1.1.0.0	commit-01	27-28
# ::node	0.1.1.0.0.0	crime	29-30
# ::node	0.1.1.0.0.1	embassy	24-25
# ::node	0.1.1.0.0.1.0	foreign	23-24
# ::node	0.1.1.0.0.2	-	28-29
# ::node	0.1.1.1	exit-01	17-18
# ::node	0.1.1.1.0	refugee	21-22
# ::node	0.1.1.1.0.0	all	20-21
# ::node	0.1.1.1.1	visa	18-19
# ::node	0.2	night	6-7
# ::node	0.2.0	last	5-6
# ::root	0	say-01
# ::edge	and	op1	passport	0.1.1	0.1.1.0	
# ::edge	and	op2	exit-01	0.1.1	0.1.1.1	
# ::edge	commit-01	ARG0	passport	0.1.1.0.0	0.1.1.0	
# ::edge	commit-01	ARG1	crime	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	commit-01	ARG2	embassy	0.1.1.0.0	0.1.1.0.0.1	
# ::edge	commit-01	polarity	-	0.1.1.0.0	0.1.1.0.0.2	
# ::edge	country	name	name	0.0	0.0.1	
# ::edge	embassy	mod	foreign	0.1.1.0.0.1	0.1.1.0.0.1.0	
# ::edge	exit-01	ARG2	refugee	0.1.1.1	0.1.1.1.0	
# ::edge	have-org-role-91	ARG1	country	0.0.0	0.0	
# ::edge	have-org-role-91	ARG2	ambassador	0.0.0	0.0.0.0	
# ::edge	name	op1	"Italy"	0.0.1	0.0.1.0	
# ::edge	night	mod	last	0.2	0.2.0	
# ::edge	promise-01	ARG1	issue	0.1	0.1.0	
# ::edge	promise-01	ARG2	and	0.1	0.1.1	
# ::edge	refugee	quant	all	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	say-01	ARG0	country	0	0.0	
# ::edge	say-01	ARG1	promise-01	0	0.1	
# ::edge	say-01	time	night	0	0.2	
# ::edge	visa	mod	exit-01	0.1.1.1.1	0.1.1.1	
(s / say-01 
      :ARG0 (c3 / country 
            :ARG1-of (h / have-org-role-91 
                  :ARG2 (a3 / ambassador)) 
            :name (n2 / name 
                  :op1 "Italy")) 
      :ARG1 (p2 / promise-01 
            :ARG1 (i / issue) 
            :ARG2 (a2 / and 
                  :op1 (p / passport 
                        :ARG0-of (c2 / commit-01 
                              :ARG1 (c / crime) 
                              :ARG2 (e / embassy 
                                    :mod (f / foreign)) 
                              :polarity (- / -))) 
                  :op2 (e2 / exit-01 
                        :ARG2 (r / refugee 
                              :quant (a / all)) 
                        :mod-of (v / visa)))) 
      :time (n / night 
            :mod (l / last)))

# ::snt festival organisers say the emphasis is on enjoying music and promise something for everyone whether young or old beginner or virtuoso performer or listener
# ::tok festival organisers say the emphasis is on enjoying music and promise something for everyone whether young or old beginner or virtuoso performer or listener
# ::alignments 22-23|0.1.0.2 21-22|0.1.0.2.1.0.0.0+0.1.0.2.1.0.0 19-20|0.1.0.2.1.0 17-18|0.1.0.2.1.2 16-17|0.1.0.2.1 15-16|0.1.0.2.1.1 13-14|0.1.0.0.0 11-12|0.1.0.1 10-11|0.1.1 9-10|0.1 8-9|0.1.0.2.0 7-8|0.1.0 4-5|0.1.0.0 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:20.134
# ::node	0	say-01	2-3
# ::node	0.0	festival	0-1
# ::node	0.1	and	9-10
# ::node	0.1.0	enjoy-01	7-8
# ::node	0.1.0.0	emphasize-01	4-5
# ::node	0.1.0.0.0	everyone	13-14
# ::node	0.1.0.1	something	11-12
# ::node	0.1.0.2	or	22-23
# ::node	0.1.0.2.0	music	8-9
# ::node	0.1.0.2.1	or	16-17
# ::node	0.1.0.2.1.0	or	19-20
# ::node	0.1.0.2.1.0.0	person	21-22
# ::node	0.1.0.2.1.0.0.0	perform-01	21-22
# ::node	0.1.0.2.1.1	young	15-16
# ::node	0.1.0.2.1.2	old	17-18
# ::node	0.1.1	promise-01	10-11
# ::root	0	say-01
# ::edge	and	op1	enjoy-01	0.1	0.1.0	
# ::edge	and	op2	promise-01	0.1	0.1.1	
# ::edge	emphasize-01	ARG1	everyone	0.1.0.0	0.1.0.0.0	
# ::edge	enjoy-01	ARG0	emphasize-01	0.1.0	0.1.0.0	
# ::edge	enjoy-01	ARG1	something	0.1.0	0.1.0.1	
# ::edge	enjoy-01	ARG2	or	0.1.0	0.1.0.2	
# ::edge	or	op1	music	0.1.0.2	0.1.0.2.0	
# ::edge	or	op1	or	0.1.0.2.1.0	0.1.0.2.1	
# ::edge	or	op1	young	0.1.0.2.1	0.1.0.2.1.1	
# ::edge	or	op2	old	0.1.0.2.1	0.1.0.2.1.2	
# ::edge	or	op2	or	0.1.0.2	0.1.0.2.1	
# ::edge	or	op2	person	0.1.0.2.1.0	0.1.0.2.1.0.0	
# ::edge	perform-01	ARG0	person	0.1.0.2.1.0.0.0	0.1.0.2.1.0.0	
# ::edge	say-01	ARG0	festival	0	0.0	
# ::edge	say-01	ARG1	and	0	0.1	
(s2 / say-01 
      :ARG0 (f / festival) 
      :ARG1 (a / and 
            :op1 (e2 / enjoy-01 
                  :ARG0 (e3 / emphasize-01 
                        :ARG1 (e / everyone)) 
                  :ARG1 (s / something) 
                  :ARG2 (o / or 
                        :op1 (m / music) 
                        :op2 (o4 / or 
                              :op-of (o2 / or 
                                    :op1 (p / person 
                                          :ARG0-of (p2 / perform-01))) 
                              :op1 (y / young) 
                              :op2 (o3 / old)))) 
            :op2 (p3 / promise-01)))

# ::snt recent buys in exeter and lanzarote promise to boost margins
# ::tok recent buys in exeter and lanzarote promise to boost margins
# ::alignments 9-10|0.1.0 8-9|0.1 6-7|0 4-5|0.0.0 1-2|0.0 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:20.150
# ::node	0	promise-01	6-7
# ::node	0.0	buy-01	1-2
# ::node	0.0.0	and	4-5
# ::node	0.0.1	recent	0-1
# ::node	0.1	boost-01	8-9
# ::node	0.1.0	margin	9-10
# ::root	0	promise-01
# ::edge	boost-01	ARG1	margin	0.1	0.1.0	
# ::edge	buy-01	ARG1	and	0.0	0.0.0	
# ::edge	buy-01	time	recent	0.0	0.0.1	
# ::edge	promise-01	ARG1	buy-01	0	0.0	
# ::edge	promise-01	ARG2	boost-01	0	0.1	
(p / promise-01 
      :ARG1 (b2 / buy-01 
            :ARG1 (a / and) 
            :time (r / recent)) 
      :ARG2 (b / boost-01 
            :ARG1 (m / margin)))

# ::snt yet lord duveen the great art dealer who financed the three big extensions to the tate of 1910 1926 and 1937 promised mullerury a gallery there all to himself
# ::tok yet lord duveen the great art dealer who financed the three big extensions to the tate of 1910 1926 and 1937 promised mullerury a gallery there all to himself
# ::alignments 26-27|0.0.1.0 21-22|0.1 20-21|0.1.3.0+0.1.3 19-20|0 17-19|0.1.1.2+0.1.1.1+0.1.1.0+0.1.1 11-12|0.1.0 10-11|0.1.2 8-9|0.0.1 6-7|0.0.0+0.0 5-6|0.0.0.0 4-5|0.0.2 1-2|0.0.3 0-1|0.0.3.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:20.439
# ::node	0	and	19-20
# ::node	0.0	person	6-7
# ::node	0.0.0	deal-01	6-7
# ::node	0.0.0.0	art	5-6
# ::node	0.0.1	finance-01	8-9
# ::node	0.0.1.0	all	26-27
# ::node	0.0.2	great	4-5
# ::node	0.0.3	lord	1-2
# ::node	0.0.3.0	yet	0-1
# ::node	0.1	promise-01	21-22
# ::node	0.1.0	big	11-12
# ::node	0.1.1	date-entity	17-19
# ::node	0.1.1.0	26	17-19
# ::node	0.1.1.1	19	17-19
# ::node	0.1.1.2	1910	17-19
# ::node	0.1.2	3	10-11
# ::node	0.1.3	date-entity	20-21
# ::node	0.1.3.0	1937	20-21
# ::root	0	and
# ::edge	3	op1	promise-01	0.1.2	0.1	
# ::edge	and	op1	person	0	0.0	
# ::edge	and	op2	promise-01	0	0.1	
# ::edge	date-entity	day	26	0.1.1	0.1.1.0	
# ::edge	date-entity	month	19	0.1.1	0.1.1.1	
# ::edge	date-entity	year	1910	0.1.1	0.1.1.2	
# ::edge	date-entity	year	1937	0.1.3	0.1.3.0	
# ::edge	deal-01	ARG0	person	0.0.0	0.0	
# ::edge	deal-01	ARG1	art	0.0.0	0.0.0.0	
# ::edge	finance-01	ARG0	person	0.0.1	0.0	
# ::edge	finance-01	ARG1	all	0.0.1	0.0.1.0	
# ::edge	lord	mod	person	0.0.3	0.0	
# ::edge	lord	mod	yet	0.0.3	0.0.3.0	
# ::edge	person	mod	great	0.0	0.0.2	
# ::edge	promise-01	ARG0	big	0.1	0.1.0	
# ::edge	promise-01	ARG1	date-entity	0.1	0.1.1	
# ::edge	promise-01	time	date-entity	0.1	0.1.3	
(a2 / and 
      :op1 (p2 / person 
            :ARG0-of (d3 / deal-01 
                  :ARG1 (a3 / art)) 
            :ARG0-of (f / finance-01 
                  :ARG1 (a / all)) 
            :mod (g / great) 
            :mod-of (l / lord 
                  :mod (y / yet))) 
      :op2 (p / promise-01 
            :ARG0 (b / big) 
            :ARG1 (d2 / date-entity 
                  :day 26 
                  :month 19 
                  :year 1910) 
            :op-of 3 
            :time (d / date-entity 
                  :year 1937)))

# ::snt 9877 promise-v 801531 Promise 537527
# ::tok 9877 promise - v 801531 Promise 537527
# ::alignments 6-7|0.0.2+0.0.1+0.0.0+0.0 4-5|0.1.0.2+0.1.0.1+0.1.0.0+0.1.0 1-2|0 0-1|0.1.1+0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:20.470
# ::node	0	promise-01	1-2
# ::node	0.0	date-entity	6-7
# ::node	0.0.0	27	6-7
# ::node	0.0.1	75	6-7
# ::node	0.0.2	53	6-7
# ::node	0.1	date-entity	0-1
# ::node	0.1.0	date-entity	4-5
# ::node	0.1.0.0	31	4-5
# ::node	0.1.0.1	15	4-5
# ::node	0.1.0.2	80	4-5
# ::node	0.1.1	9877	0-1
# ::root	0	promise-01
# ::edge	date-entity	day	27	0.0	0.0.0	
# ::edge	date-entity	day	31	0.1.0	0.1.0.0	
# ::edge	date-entity	month	15	0.1.0	0.1.0.1	
# ::edge	date-entity	month	75	0.0	0.0.1	
# ::edge	date-entity	name	date-entity	0.1	0.1.0	
# ::edge	date-entity	year	53	0.0	0.0.2	
# ::edge	date-entity	year	80	0.1.0	0.1.0.2	
# ::edge	date-entity	year	9877	0.1	0.1.1	
# ::edge	promise-01	ARG1	date-entity	0	0.0	
# ::edge	promise-01	time	date-entity	0	0.1	
(p / promise-01 
      :ARG1 (d / date-entity 
            :day 27 
            :month 75 
            :year 53) 
      :time (d3 / date-entity 
            :name (d2 / date-entity 
                  :day 31 
                  :month 15 
                  :year 80) 
            :year 9877))

# ::snt  I m playing knights of the round table" `I\d love to," Charlie agreed.  `Promise?
# ::tok I m playing knights of the round table " ' I\d love to , " Charlie agreed . ' Promise ?
# ::alignments 16-17|0.0 11-12|0.0.0.0 7-8|0.0.0 6-7|0 2-3|0.0.0.0.0.0 0-1|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:20.547
# ::node	0	round	6-7
# ::node	0.0	agree-01	16-17
# ::node	0.0.0	table	7-8
# ::node	0.0.0.0	love-01	11-12
# ::node	0.0.0.0.0	i	0-1
# ::node	0.0.0.0.0.0	play-01	2-3
# ::root	0	round
(r / round 
      :ARG0-of (a / agree-01 
            :ARG1 (t / table 
                  :ARG1-of (l / love-01 
                        :ARG0 (i / i 
                              :ARG1-of (p / play-01))))))

# ::snt EMPTY_SENTENCE
# ::tok EMPTY_SENTENCE
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:20.549
# ::node	0	amr-empty	0-1
# ::root	0	amr-empty
(a / amr-empty)

# ::snt the right to promise is based on the promisors interest to be able to forge special bonds with other people
# ::tok the right to promise is based on the promisors interest to be able to forge special bonds with other people
# ::alignments 18-19|0.0.0.1.0.0 16-17|0.0.0.0 15-16|0.0.0.0.0 14-15|0.0.0 12-13|0.0.0.1 9-10|0.0 5-6|0.0.0.1.0 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:20.595
# ::node	0	promise-01	3-4
# ::node	0.0	interest-01	9-10
# ::node	0.0.0	forge-02	14-15
# ::node	0.0.0.0	bond	16-17
# ::node	0.0.0.0.0	special	15-16
# ::node	0.0.0.1	possible	12-13
# ::node	0.0.0.1.0	base-01	5-6
# ::node	0.0.0.1.0.0	other	18-19
# ::root	0	promise-01
(p2 / promise-01 
      :ARG0-of (i / interest-01 
            :ARG0-of (f / forge-02 
                  :ARG1 (b / bond 
                        :mod (s / special)) 
                  :domain-of (p / possible 
                        :ARG1-of (b2 / base-01 
                              :ARG0 (o / other))))))

# ::snt  one of sarahs friends has promised to lend them a tent and they are determined to camp on church green unless the council help them
# ::tok one of sarahs friends has promised to lend them a tent and they are determined to camp on church green unless the council help them
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:20.595
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt shakespeare enthusiasts will have to take sides in the roughandtumble of what promises to be one of londons more interesting cultural debates
# ::tok shakespeare enthusiasts will have to take sides in the roughandtumble of what promises to be one of londons more interesting cultural debates
# ::alignments 21-22|0 20-21|0.0 19-20|0.2 12-13|0.1 6-7|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:20.623
# ::node	0	debate-01	21-22
# ::node	0.0	culture	20-21
# ::node	0.1	promise-01	12-13
# ::node	0.1.0	side	6-7
# ::node	0.2	interesting	19-20
# ::root	0	debate-01
# ::edge	debate-01	ARG1	culture	0	0.0	
# ::edge	debate-01	mod	interesting	0	0.2	
# ::edge	promise-01	ARG0	side	0.1	0.1.0	
# ::edge	promise-01	ARG1	debate-01	0.1	0	
(d / debate-01 
      :ARG1 (c / culture) 
      :ARG1-of (p / promise-01 
            :ARG0 (s / side)) 
      :mod (i / interesting))

# ::snt this year however still promising no new taxes carignon was convincingly reelected
# ::tok this year however still promising no new taxes carignon was convincingly reelected
# ::alignments 11-12|0.1 10-11|0.1.1 7-8|0.1.0 6-7|0.1.0.0 5-6|0.1.1.0 4-5|0 3-4|0.2 1-2|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:20.678
# ::node	0	promise-01	4-5
# ::node	0.0	year	1-2
# ::node	0.0.0	this	0-1
# ::node	0.1	reelect-01	11-12
# ::node	0.1.0	tax-01	7-8
# ::node	0.1.0.0	new	6-7
# ::node	0.1.1	convince-01	10-11
# ::node	0.1.1.0	-	5-6
# ::node	0.2	still	3-4
# ::root	0	promise-01
# ::edge	convince-01	ARG0	-	0.1.1	0.1.1.0	
# ::edge	promise-01	ARG0	year	0	0.0	
# ::edge	promise-01	ARG1	reelect-01	0	0.1	
# ::edge	promise-01	mod	still	0	0.2	
# ::edge	reelect-01	ARG1	tax-01	0.1	0.1.0	
# ::edge	reelect-01	manner	convince-01	0.1	0.1.1	
# ::edge	tax-01	ARG0	new	0.1.0	0.1.0.0	
# ::edge	year	mod	this	0.0	0.0.0	
(p / promise-01 
      :ARG0 (y / year 
            :mod (t2 / this)) 
      :ARG1 (r / reelect-01 
            :ARG1 (t / tax-01 
                  :ARG0 (n / new)) 
            :manner (c / convince-01 
                  :ARG0 (- / -))) 
      :mod (s / still))

# ::snt the play was extensivley researched in prisions and probation centres and promises to be hardedged involving theatre
# ::tok the play was extensivley researched in prisions and probation centres and promises to be hardedged involving theatre
# ::alignments 15-16|0.1.2 11-12|0.1 10-11|0 9-10|0.0 7-8|0.1.1 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:20.701
# ::node	0	and	10-11
# ::node	0.0	centre	9-10
# ::node	0.1	promise-01	11-12
# ::node	0.1.0	play-01	1-2
# ::node	0.1.1	and	7-8
# ::node	0.1.2	involve-01	15-16
# ::root	0	and
# ::edge	and	op1	centre	0	0.0	
# ::edge	and	op1	promise-01	0.1.1	0.1	
# ::edge	and	op2	promise-01	0	0.1	
# ::edge	promise-01	ARG1	play-01	0.1	0.1.0	
# ::edge	promise-01	purpose	involve-01	0.1	0.1.2	
(a / and 
      :op1 (c / centre) 
      :op2 (p / promise-01 
            :ARG1 (p2 / play-01) 
            :op-of (a2 / and) 
            :purpose (i / involve-01)))

# ::snt opening the debate on a motion condemning the governments handling of science and science education straw promised that a labour government would insulate the science budget from inflationary pressures
# ::tok opening the debate on a motion condemning the governments handling of science and science education straw promised that a labour government would insulate the science budget from inflationary pressures
# ::alignments 28-29|0.0.0.0 25-26|0.0.0.0.0 24-25|0.0.0.0.0.0 19-20|0.0.1.0.0.0 16-17|0.1 15-16|0.1.0 14-15|0.1.0.0 13-14|0.1.0.0.0 12-13|0 11-12|0.1.0.0.1 9-10|0.0 8-9|0.0.0.1+0.0.0 6-7|0.0.1 5-6|0.0.1.0 2-3|0.0.1.0.0.1 0-1|0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:21.253
# ::node	0	and	12-13
# ::node	0.0	handle-01	9-10
# ::node	0.0.0	government-organization	8-9
# ::node	0.0.0.0	pressure-01	28-29
# ::node	0.0.0.0.0	budget	25-26
# ::node	0.0.0.0.0.0	science	24-25
# ::node	0.0.0.1	govern-01	8-9
# ::node	0.0.1	condemn-01	6-7
# ::node	0.0.1.0	motion	5-6
# ::node	0.0.1.0.0	open-01	0-1
# ::node	0.0.1.0.0.0	labour	19-20
# ::node	0.0.1.0.0.1	debate-01	2-3
# ::node	0.1	promise-01	16-17
# ::node	0.1.0	straw	15-16
# ::node	0.1.0.0	educate-01	14-15
# ::node	0.1.0.0.0	science	13-14
# ::node	0.1.0.0.1	science	11-12
# ::root	0	and
(a / and 
      :ARG1-of (h / handle-01 
            :ARG0 (g / government-organization 
                  :ARG0-of (p / pressure-01 
                        :topic-of (b / budget 
                              :mod (s / science))) 
                  :ARG0-of (g2 / govern-01)) 
            :ARG1-of (c / condemn-01 
                  :ARG0 (m / motion 
                        :location-of (o / open-01 
                              :ARG0 (l / labour) 
                              :ARG1 (d / debate-01))))) 
      :ARG1-of (p2 / promise-01 
            :ARG0 (s2 / straw 
                  :ARG1-of (e / educate-01 
                        :ARG0 (s3 / science) 
                        :mod (s4 / science)))))

# ::snt about 20 major bills are promised this session
# ::tok about 20 major bills are promised this session
# ::alignments 7-8|0.1 6-7|0.1.0 5-6|0 3-4|0.0 2-3|0.0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:21.322
# ::node	0	promise-01	5-6
# ::node	0.0	bill-01	3-4
# ::node	0.0.0	major	2-3
# ::node	0.0.1	20	1-2
# ::node	0.1	session	7-8
# ::node	0.1.0	this	6-7
# ::root	0	promise-01
# ::edge	bill-01	mod	major	0.0	0.0.0	
# ::edge	bill-01	quant	20	0.0	0.0.1	
# ::edge	promise-01	ARG1	bill-01	0	0.0	
# ::edge	promise-01	ARG2	session	0	0.1	
# ::edge	session	mod	this	0.1	0.1.0	
(p / promise-01 
      :ARG1 (b / bill-01 
            :mod (m / major) 
            :quant 20) 
      :ARG2 (s / session 
            :mod (t / this)))

# ::snt it was outlined as the first step towards the review of assistance for the disabled as promised by the government in response to the findings of a national survey
# ::tok it was outlined as the first step towards the review of assistance for the disabled as promised by the government in response to the findings of a national survey
# ::alignments 28-29|0.1.1.0.0 27-28|0.1.1.0.0.0 24-25|0.1.1.0+0.1.1 21-22|0.1.1.1 16-17|0.1 14-15|0 11-12|0.0 9-10|0.0.0 2-3|0.1.0.0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:21.494
# ::node	0	disable-01	14-15
# ::node	0.0	assist-01	11-12
# ::node	0.0.0	review-01	9-10
# ::node	0.1	promise-01	16-17
# ::node	0.1.0	it	0-1
# ::node	0.1.0.0	outline-01	2-3
# ::node	0.1.1	thing	24-25
# ::node	0.1.1.0	find-01	24-25
# ::node	0.1.1.0.0	survey-01	28-29
# ::node	0.1.1.0.0.0	nation	27-28
# ::node	0.1.1.1	respond-01	21-22
# ::root	0	disable-01
# ::edge	assist-01	ARG1	disable-01	0.0	0	
# ::edge	disable-01	ARG2	promise-01	0	0.1	
# ::edge	find-01	ARG1	thing	0.1.1.0	0.1.1	
# ::edge	find-01	ARG2	survey-01	0.1.1.0	0.1.1.0.0	
# ::edge	outline-01	ARG1	it	0.1.0.0	0.1.0	
# ::edge	promise-01	ARG0	it	0.1	0.1.0	
# ::edge	promise-01	ARG1	thing	0.1	0.1.1	
# ::edge	respond-01	ARG1	thing	0.1.1.1	0.1.1	
# ::edge	review-01	ARG1	assist-01	0.0.0	0.0	
# ::edge	survey-01	ARG1	nation	0.1.1.0.0	0.1.1.0.0.0	
(d / disable-01 
      :ARG1-of (a / assist-01 
            :ARG1-of (r2 / review-01)) 
      :ARG2 (p / promise-01 
            :ARG0 (i / it 
                  :ARG1-of (o / outline-01)) 
            :ARG1 (t / thing 
                  :ARG1-of (f / find-01 
                        :ARG2 (s / survey-01 
                              :ARG1 (n / nation))) 
                  :ARG1-of (r / respond-01))))

# ::snt 9886 promise-v 801543 Promising 537527
# ::tok 9886 promise - v 801543 Promising 537527
# ::alignments 6-7|0.0.2+0.0.1+0.0.0+0.0 4-5|0.1.0.2+0.1.0.1+0.1.0.0+0.1.0 1-2|0 0-1|0.1.1+0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:21.527
# ::node	0	promise-01	1-2
# ::node	0.0	date-entity	6-7
# ::node	0.0.0	27	6-7
# ::node	0.0.1	75	6-7
# ::node	0.0.2	53	6-7
# ::node	0.1	date-entity	0-1
# ::node	0.1.0	date-entity	4-5
# ::node	0.1.0.0	43	4-5
# ::node	0.1.0.1	15	4-5
# ::node	0.1.0.2	80	4-5
# ::node	0.1.1	9886	0-1
# ::root	0	promise-01
# ::edge	date-entity	day	27	0.0	0.0.0	
# ::edge	date-entity	day	43	0.1.0	0.1.0.0	
# ::edge	date-entity	month	15	0.1.0	0.1.0.1	
# ::edge	date-entity	month	75	0.0	0.0.1	
# ::edge	date-entity	name	date-entity	0.1	0.1.0	
# ::edge	date-entity	year	53	0.0	0.0.2	
# ::edge	date-entity	year	80	0.1.0	0.1.0.2	
# ::edge	date-entity	year	9886	0.1	0.1.1	
# ::edge	promise-01	ARG1	date-entity	0	0.0	
# ::edge	promise-01	time	date-entity	0	0.1	
(p / promise-01 
      :ARG1 (d / date-entity 
            :day 27 
            :month 75 
            :year 53) 
      :time (d3 / date-entity 
            :name (d2 / date-entity 
                  :day 43 
                  :month 15 
                  :year 80) 
            :year 9886))

# ::snt  TRANSPORT ministers and British Rail directors yesterday insisted that the King\s Cross rail development scheme should go ahead despite the collapse of the #3.5 billion Eurorail high speed train scheme.  The uncertainty surrounding the Channel Tunnel rail link does `not invalidate progress on the bill" (to build the #600 million terminal extension), Roger Freeman, the transport minister, told yesterday\s conference in London of local authority associations. Promising that the Government had not ruled out the possibility of backing any future rail link scheme with money, Mr Freeman said: `There is absolutely no reason why progress on a bill should not proceed."
# ::tok TRANSPORT ministers and British Rail directors yesterday insisted that the King\s Cross rail development scheme should go ahead despite the collapse of the #3.5 billion Eurorail high speed train scheme . The uncertainty surrounding the Channel Tunnel rail link does ' not invalidate progress on the bill " ( to build the #600 million terminal extension ) , Roger Freeman , the transport minister , told yesterday\s conference in London of local authority associations . Promising that the Government had not ruled out the possibility of backing any future rail link scheme with money , Mr Freeman said : ' There is absolutely no reason why progress on a bill should not proceed . "
# ::alignments 110-111|0.0.3.1 109-110|0.0.3.1.0 106-107|0.0.3 104-105|0.0.3.0 103-104|0.0.3.1.1 102-103|0.0.3.0.0 97-98|0 93-94|0.1 91-92|0.0.2.1 90-91|0.0.2 89-90|0.0.2.0 88-89|0.0.0.1.0 87-88|0.0.0.1 86-87|0.0.0 84-85|0.0.0.0 81-82|0.0.6 78-79|0.0.6.0.0+0.0.6.0 73-74|0.0.8 72-73|0.0 71-72|0.0.7 69-70|0.0.1.0.0.0.0+0.0.1.0.0.0+0.0.1.0.0 67-68|0.0.1.0 65-66|0.0.1 63-64|0.0.5.0+0.0.5.0.0 62-63|0.0.5 55-56|0.0.4.0.3 54-55|0.0.4.0.3.0 50-51|0.0.4 46-47|0.0.4.0.0 43-44|0.0.4.0 42-43|0.0.4.0.1 38-39|0.0.4.0.5 37-38|0.0.4.0.5.0 33-34|0.0.4.0.2 32-33|0.0.4.0.2.0.0+0.0.4.0.2.0 29-30|0.0.4.0.4.0.1 28-29|0.0.4.0.4.0 27-28|0.0.4.0.4.0.0 26-27|0.0.4.0.4.0.0.0 20-21|0.0.4.0.4 17-18|0.0.4.0.5.1.2.2.0 15-16|0.0.4.0.5.1.2.2 14-15|0.0.4.0.5.1.2.2.1 13-14|0.0.4.0.5.1.2 12-13|0.0.4.0.5.1.2.0 11-12|0.0.4.0.5.1.2.1 7-8|0.0.4.0.5.1.1 6-7|0.0.4.0.5.1.1.0 5-6|0.0.4.0.5.1.1.2 3-4|0.0.4.0.5.1.1.1 2-3|0.0.4.0.5.1 1-2|0.0.4.0.5.1.0.0+0.0.4.0.5.1.0.0.0 0-1|0.0.4.0.5.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:27.093
# ::node	0	say-01	97-98
# ::node	0.0	authority	72-73
# ::node	0.0.0	back-01	86-87
# ::node	0.0.0.0	possible	84-85
# ::node	0.0.0.1	any	87-88
# ::node	0.0.0.1.0	future	88-89
# ::node	0.0.1	tell-01	65-66
# ::node	0.0.1.0	conference	67-68
# ::node	0.0.1.0.0	city	69-70
# ::node	0.0.1.0.0.0	name	69-70
# ::node	0.0.1.0.0.0.0	"London"	69-70
# ::node	0.0.2	link-01	90-91
# ::node	0.0.2.0	rail	89-90
# ::node	0.0.2.1	scheme	91-92
# ::node	0.0.3	progress-01	106-107
# ::node	0.0.3.0	reason	104-105
# ::node	0.0.3.0.0	absolute	102-103
# ::node	0.0.3.1	recommend-01	110-111
# ::node	0.0.3.1.0	bill	109-110
# ::node	0.0.3.1.1	-	103-104
# ::node	0.0.4	build-01	50-51
# ::node	0.0.4.0	progress-01	43-44
# ::node	0.0.4.0.0	bill	46-47
# ::node	0.0.4.0.1	invalidate-01	42-43
# ::node	0.0.4.0.2	surround-01	33-34
# ::node	0.0.4.0.2.0	certainty	32-33
# ::node	0.0.4.0.2.0.0	-	32-33
# ::node	0.0.4.0.3	extend-01	55-56
# ::node	0.0.4.0.3.0	terminal	54-55
# ::node	0.0.4.0.4	collapse-01	20-21
# ::node	0.0.4.0.4.0	train	28-29
# ::node	0.0.4.0.4.0.0	speed	27-28
# ::node	0.0.4.0.4.0.0.0	high	26-27
# ::node	0.0.4.0.4.0.1	scheme	29-30
# ::node	0.0.4.0.5	link-01	38-39
# ::node	0.0.4.0.5.0	rail	37-38
# ::node	0.0.4.0.5.1	and	2-3
# ::node	0.0.4.0.5.1.0	transport-01	0-1
# ::node	0.0.4.0.5.1.0.0	minister	1-2
# ::node	0.0.4.0.5.1.0.0.0	have-org-role-91	1-2
# ::node	0.0.4.0.5.1.1	insist-01	7-8
# ::node	0.0.4.0.5.1.1.0	yesterday	6-7
# ::node	0.0.4.0.5.1.1.1	"Britain"	3-4
# ::node	0.0.4.0.5.1.1.2	director	5-6
# ::node	0.0.4.0.5.1.2	develop-02	13-14
# ::node	0.0.4.0.5.1.2.0	rail	12-13
# ::node	0.0.4.0.5.1.2.1	cross-01	11-12
# ::node	0.0.4.0.5.1.2.2	recommend-01	15-16
# ::node	0.0.4.0.5.1.2.2.0	ahead	17-18
# ::node	0.0.4.0.5.1.2.2.1	scheme	14-15
# ::node	0.0.5	transport-01	62-63
# ::node	0.0.5.0	minister	63-64
# ::node	0.0.5.0.0	have-org-role-91	63-64
# ::node	0.0.6	rule-03	81-82
# ::node	0.0.6.0	government-organization	78-79
# ::node	0.0.6.0.0	govern-01	78-79
# ::node	0.0.7	local	71-72
# ::node	0.0.8	association	73-74
# ::node	0.1	money	93-94
# ::root	0	say-01
# ::edge	and	op1	insist-01	0.0.4.0.5.1	0.0.4.0.5.1.1	
# ::edge	and	op2	develop-02	0.0.4.0.5.1	0.0.4.0.5.1.2	
# ::edge	association	mod	authority	0.0.8	0.0	
# ::edge	authority	mod	local	0.0	0.0.7	
# ::edge	back-01	ARG0	authority	0.0.0	0.0	
# ::edge	back-01	ARG1	possible	0.0.0	0.0.0.0	
# ::edge	back-01	mod	any	0.0.0	0.0.0.1	
# ::edge	build-01	ARG1	authority	0.0.4	0.0	
# ::edge	build-01	ARG2	progress-01	0.0.4	0.0.4.0	
# ::edge	certainty	polarity	-	0.0.4.0.2.0	0.0.4.0.2.0.0	
# ::edge	city	name	name	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	collapse-01	ARG1	train	0.0.4.0.4	0.0.4.0.4.0	
# ::edge	collapse-01	ARG2	progress-01	0.0.4.0.4	0.0.4.0	
# ::edge	conference	location	city	0.0.1.0	0.0.1.0.0	
# ::edge	cross-01	ARG1	develop-02	0.0.4.0.5.1.2.1	0.0.4.0.5.1.2	
# ::edge	develop-02	ARG1	rail	0.0.4.0.5.1.2	0.0.4.0.5.1.2.0	
# ::edge	extend-01	ARG1	terminal	0.0.4.0.3	0.0.4.0.3.0	
# ::edge	extend-01	ARG2	progress-01	0.0.4.0.3	0.0.4.0	
# ::edge	future	mod	any	0.0.0.1.0	0.0.0.1	
# ::edge	govern-01	ARG0	government-organization	0.0.6.0.0	0.0.6.0	
# ::edge	have-org-role-91	ARG2	minister	0.0.4.0.5.1.0.0.0	0.0.4.0.5.1.0.0	
# ::edge	have-org-role-91	ARG2	minister	0.0.5.0.0	0.0.5.0	
# ::edge	insist-01	ARG0	yesterday	0.0.4.0.5.1.1	0.0.4.0.5.1.1.0	
# ::edge	insist-01	ARG1	"Britain"	0.0.4.0.5.1.1	0.0.4.0.5.1.1.1	
# ::edge	insist-01	ARG2	director	0.0.4.0.5.1.1	0.0.4.0.5.1.1.2	
# ::edge	invalidate-01	ARG1	progress-01	0.0.4.0.1	0.0.4.0	
# ::edge	link-01	ARG0	authority	0.0.2	0.0	
# ::edge	link-01	ARG0	rail	0.0.4.0.5	0.0.4.0.5.0	
# ::edge	link-01	ARG1	and	0.0.4.0.5	0.0.4.0.5.1	
# ::edge	link-01	ARG2	progress-01	0.0.4.0.5	0.0.4.0	
# ::edge	link-01	ARG2	rail	0.0.2	0.0.2.0	
# ::edge	minister	mod	transport-01	0.0.4.0.5.1.0.0	0.0.4.0.5.1.0	
# ::edge	minister	mod	transport-01	0.0.5.0	0.0.5	
# ::edge	name	op1	"London"	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	progress-01	ARG0	authority	0.0.3	0.0	
# ::edge	progress-01	ARG1	bill	0.0.4.0	0.0.4.0.0	
# ::edge	progress-01	ARG1	reason	0.0.3	0.0.3.0	
# ::edge	reason	mod	absolute	0.0.3.0	0.0.3.0.0	
# ::edge	recommend-01	ARG1	ahead	0.0.4.0.5.1.2.2	0.0.4.0.5.1.2.2.0	
# ::edge	recommend-01	ARG1	bill	0.0.3.1	0.0.3.1.0	
# ::edge	recommend-01	mod	scheme	0.0.4.0.5.1.2.2	0.0.4.0.5.1.2.2.1	
# ::edge	recommend-01	polarity	-	0.0.3.1	0.0.3.1.1	
# ::edge	recommend-01	time	develop-02	0.0.4.0.5.1.2.2	0.0.4.0.5.1.2	
# ::edge	recommend-01	time	progress-01	0.0.3.1	0.0.3	
# ::edge	rule-03	ARG0	government-organization	0.0.6	0.0.6.0	
# ::edge	rule-03	ARG1	authority	0.0.6	0.0	
# ::edge	say-01	ARG0	authority	0	0.0	
# ::edge	say-01	ARG1	money	0	0.1	
# ::edge	scheme	mod	link-01	0.0.2.1	0.0.2	
# ::edge	scheme	mod	train	0.0.4.0.4.0.1	0.0.4.0.4.0	
# ::edge	speed	mod	high	0.0.4.0.4.0.0	0.0.4.0.4.0.0.0	
# ::edge	surround-01	ARG1	certainty	0.0.4.0.2	0.0.4.0.2.0	
# ::edge	surround-01	ARG2	progress-01	0.0.4.0.2	0.0.4.0	
# ::edge	tell-01	ARG0	authority	0.0.1	0.0	
# ::edge	tell-01	ARG1	conference	0.0.1	0.0.1.0	
# ::edge	train	mod	speed	0.0.4.0.4.0	0.0.4.0.4.0.0	
# ::edge	transport-01	ARG1	and	0.0.4.0.5.1.0	0.0.4.0.5.1	
# ::edge	transport-01	ARG1	authority	0.0.5	0.0	
(s / say-01 
      :ARG0 (a4 / authority 
            :ARG0-of (b2 / back-01 
                  :ARG1 (p2 / possible) 
                  :mod (a2 / any 
                        :mod-of (f / future))) 
            :ARG0-of (t / tell-01 
                  :ARG1 (c2 / conference 
                        :location (c / city 
                              :name (n / name 
                                    :op1 "London")))) 
            :ARG0-of (l / link-01 
                  :ARG2 (r3 / rail) 
                  :mod-of (s2 / scheme)) 
            :ARG0-of (p / progress-01 
                  :ARG1 (r2 / reason 
                        :mod (a / absolute)) 
                  :time-of (r / recommend-01 
                        :ARG1 (b / bill) 
                        :polarity (- / -))) 
            :ARG1-of (b3 / build-01 
                  :ARG2 (p3 / progress-01 
                        :ARG1 (b4 / bill) 
                        :ARG1-of (i / invalidate-01) 
                        :ARG2-of (s3 / surround-01 
                              :ARG1 (c3 / certainty 
                                    :polarity -)) 
                        :ARG2-of (e / extend-01 
                              :ARG1 (t3 / terminal)) 
                        :ARG2-of (c4 / collapse-01 
                              :ARG1 (t4 / train 
                                    :mod (s5 / speed 
                                          :mod (h2 / high)) 
                                    :mod-of (s4 / scheme))) 
                        :ARG2-of (l3 / link-01 
                              :ARG0 (r5 / rail) 
                              :ARG1 (a6 / and 
                                    :ARG1-of (t5 / transport-01 
                                          :mod-of (m3 / minister 
                                                :ARG2-of (h3 / have-org-role-91))) 
                                    :op1 (i2 / insist-01 
                                          :ARG0 (y / yesterday) 
                                          :ARG1 "Britain" 
                                          :ARG2 (d2 / director)) 
                                    :op2 (d / develop-02 
                                          :ARG1 (r7 / rail) 
                                          :ARG1-of (c5 / cross-01) 
                                          :time-of (r6 / recommend-01 
                                                :ARG1 (a5 / ahead) 
                                                :mod (s6 / scheme))))))) 
            :ARG1-of (t2 / transport-01 
                  :mod-of (m2 / minister 
                        :ARG2-of (h / have-org-role-91))) 
            :ARG1-of (r4 / rule-03 
                  :ARG0 (g / government-organization 
                        :ARG0-of (g2 / govern-01))) 
            :mod (l2 / local) 
            :mod-of (a3 / association)) 
      :ARG1 (m / money))

# ::snt EMPTY_SENTENCE
# ::tok EMPTY_SENTENCE
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:27.095
# ::node	0	amr-empty	0-1
# ::root	0	amr-empty
(a / amr-empty)

# ::snt they are promising to reveal all to mr grimstone in return for a further contribution to charity
# ::tok they are promising to reveal all to mr grimstone in return for a further contribution to charity
# ::alignments 16-17|0.0.2.0 14-15|0.0.2 13-14|0.0.2.1 5-6|0.0.1 4-5|0.0 2-3|0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:27.153
# ::node	0	promise-01	2-3
# ::node	0.0	reveal-01	4-5
# ::node	0.0.0	they	0-1
# ::node	0.0.1	all	5-6
# ::node	0.0.2	contribute-01	14-15
# ::node	0.0.2.0	charity	16-17
# ::node	0.0.2.1	further	13-14
# ::root	0	promise-01
# ::edge	contribute-01	ARG1	charity	0.0.2	0.0.2.0	
# ::edge	contribute-01	degree	further	0.0.2	0.0.2.1	
# ::edge	promise-01	ARG1	reveal-01	0	0.0	
# ::edge	reveal-01	ARG0	they	0.0	0.0.0	
# ::edge	reveal-01	ARG1	all	0.0	0.0.1	
# ::edge	reveal-01	purpose	contribute-01	0.0	0.0.2	
(p / promise-01 
      :ARG1 (r / reveal-01 
            :ARG0 (t / they) 
            :ARG1 (a / all) 
            :purpose (c2 / contribute-01 
                  :ARG1 (c / charity) 
                  :degree (f / further))))

# ::snt according to tass the strikers are demanding that privileges for officials be abolished and that a new constitution be adopted incorporating all the reform promises of the past three years
# ::tok according to tass the strikers are demanding that privileges for officials be abolished and that a new constitution be adopted incorporating all the reform promises of the past three years
# ::alignments 29-30|0.1.0.1.0.0.1+0.1.0.1.0.0 28-29|0.1.0.1.0.0.0 27-28|0.1.0.1.0 24-25|0.1.0.1 23-24|0.1.0.1.2 21-22|0.1.0.1.1 19-20|0.1.0 17-18|0.1.0.0 16-17|0.1.0.0.0 13-14|0.1 10-11|0.0.1.0+0.0.1 8-9|0.1.0.1.2.0 6-7|0 4-5|0.0.0+0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:27.732
# ::node	0	demand-01	6-7
# ::node	0.0	person	4-5
# ::node	0.0.0	strike-02	4-5
# ::node	0.0.1	have-org-role-91	10-11
# ::node	0.0.1.0	official	10-11
# ::node	0.1	and	13-14
# ::node	0.1.0	adopt-01	19-20
# ::node	0.1.0.0	constitution	17-18
# ::node	0.1.0.0.0	new	16-17
# ::node	0.1.0.1	promise-01	24-25
# ::node	0.1.0.1.0	past	27-28
# ::node	0.1.0.1.0.0	temporal-quantity	29-30
# ::node	0.1.0.1.0.0.0	3	28-29
# ::node	0.1.0.1.0.0.1	year	29-30
# ::node	0.1.0.1.1	all	21-22
# ::node	0.1.0.1.2	reform-01	23-24
# ::node	0.1.0.1.2.0	privilege	8-9
# ::root	0	demand-01
# ::edge	adopt-01	ARG1	constitution	0.1.0	0.1.0.0	
# ::edge	adopt-01	ARG2	promise-01	0.1.0	0.1.0.1	
# ::edge	and	op1	adopt-01	0.1	0.1.0	
# ::edge	constitution	mod	new	0.1.0.0	0.1.0.0.0	
# ::edge	demand-01	ARG0	person	0	0.0	
# ::edge	demand-01	ARG1	and	0	0.1	
# ::edge	have-org-role-91	ARG0	person	0.0.1	0.0	
# ::edge	have-org-role-91	ARG2	official	0.0.1	0.0.1.0	
# ::edge	past	op1	temporal-quantity	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	promise-01	ARG1	past	0.1.0.1	0.1.0.1.0	
# ::edge	promise-01	quant	all	0.1.0.1	0.1.0.1.1	
# ::edge	promise-01	time	reform-01	0.1.0.1	0.1.0.1.2	
# ::edge	reform-01	ARG1	privilege	0.1.0.1.2	0.1.0.1.2.0	
# ::edge	strike-02	ARG0	person	0.0.0	0.0	
# ::edge	temporal-quantity	quant	3	0.1.0.1.0.0	0.1.0.1.0.0.0	
# ::edge	temporal-quantity	unit	year	0.1.0.1.0.0	0.1.0.1.0.0.1	
(d / demand-01 
      :ARG0 (p4 / person 
            :ARG0-of (s / strike-02) 
            :ARG0-of (h / have-org-role-91 
                  :ARG2 (o / official))) 
      :ARG1 (a3 / and 
            :op1 (a2 / adopt-01 
                  :ARG1 (c / constitution 
                        :mod (n / new)) 
                  :ARG2 (p2 / promise-01 
                        :ARG1 (p / past 
                              :op1 (t / temporal-quantity 
                                    :quant 3 
                                    :unit (y / year))) 
                        :quant (a / all) 
                        :time (r / reform-01 
                              :ARG1 (p3 / privilege))))))

# ::snt   yet moran made no move towards her promised nothing gave no hint of any reciprocation of interest lent her no support
# ::tok yet moran made no move towards her promised nothing gave no hint of any reciprocation of interest lent her no support
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:27.733
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt but rajiv gandhi is because he had vowed to purge the party of its wheelerdealers dangled the vision of a government that works faster and promised to lead indians into the shining dawn of a 21st century where no one would starve
# ::tok but rajiv gandhi is because he had vowed to purge the party of its wheelerdealers dangled the vision of a government that works faster and promised to lead indians into the shining dawn of a 21st century where no one would starve
# ::alignments 41-42|0.0.1.0.1 38-39|0.0.1.0.0.0 32-33|0.0.2.0 25-26|0.0.1.0.0 24-25|0.0.1.0 23-24|0.0.1.0.0.1 11-12|0.0.2 7-8|0.0 5-6|0.0.0 4-5|0.0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:27.879
# ::node	0	contrast-01	0-1
# ::node	0.0	vow-01	7-8
# ::node	0.0.0	he	5-6
# ::node	0.0.1	cause-01	4-5
# ::node	0.0.1.0	and	24-25
# ::node	0.0.1.0.0	promise-01	25-26
# ::node	0.0.1.0.0.0	-	38-39
# ::node	0.0.1.0.0.1	fast	23-24
# ::node	0.0.1.0.1	starve-01	41-42
# ::node	0.0.2	party	11-12
# ::node	0.0.2.0	dawn-01	32-33
# ::root	0	contrast-01
# ::edge	and	op1	promise-01	0.0.1.0	0.0.1.0.0	
# ::edge	and	purpose	starve-01	0.0.1.0	0.0.1.0.1	
# ::edge	cause-01	ARG0	vow-01	0.0.1	0.0	
# ::edge	cause-01	ARG1	and	0.0.1	0.0.1.0	
# ::edge	contrast-01	ARG1	vow-01	0	0.0	
# ::edge	dawn-01	ARG1	party	0.0.2.0	0.0.2	
# ::edge	promise-01	ARG0	-	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	promise-01	ARG1	fast	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	vow-01	ARG0	he	0.0	0.0.0	
# ::edge	vow-01	ARG1	party	0.0	0.0.2	
(c2 / contrast-01 
      :ARG1 (v / vow-01 
            :ARG0 (h / he) 
            :ARG0-of (c / cause-01 
                  :ARG1 (a / and 
                        :op1 (p / promise-01 
                              :ARG0 (- / -) 
                              :ARG1 (f / fast)) 
                        :purpose (s / starve-01))) 
            :ARG1 (p2 / party 
                  :ARG1-of (d / dawn-01))))

# ::snt when he first arrived at central park monie promised a subtle change of emphasis saying it might take three or four months for his influence to show through
# ::tok when he first arrived at central park monie promised a subtle change of emphasis saying it might take three or four months for his influence to show through
# ::alignments 26-27|0.1.0.0 24-25|0.1.0 21-22|0.1.3+0.1 20-21|0.1.2 19-20|0.1.1 18-19|0.2.0.0.0 15-16|0.0 14-15|0 13-14|0.2.0.0 11-12|0.2.0 8-9|0.2 6-7|0.1.0.0.0 5-6|0.1.0.0.1 3-4|0.2.1 1-2|0.2.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:28.202
# ::node	0	say-01	14-15
# ::node	0.0	it	15-16
# ::node	0.1	temporal-quantity	21-22
# ::node	0.1.0	influence-01	24-25
# ::node	0.1.0.0	show-01	26-27
# ::node	0.1.0.0.0	park	6-7
# ::node	0.1.0.0.1	central	5-6
# ::node	0.1.1	or	19-20
# ::node	0.1.2	4	20-21
# ::node	0.1.3	month	21-22
# ::node	0.2	promise-01	8-9
# ::node	0.2.0	change-01	11-12
# ::node	0.2.0.0	emphasize-01	13-14
# ::node	0.2.0.0.0	3	18-19
# ::node	0.2.1	arrive-01	3-4
# ::node	0.2.1.0	he	1-2
# ::root	0	say-01
# ::edge	arrive-01	ARG1	he	0.2.1	0.2.1.0	
# ::edge	arrive-01	manner	promise-01	0.2.1	0.2	
# ::edge	change-01	ARG1	emphasize-01	0.2.0	0.2.0.0	
# ::edge	emphasize-01	ARG1	3	0.2.0.0	0.2.0.0.0	
# ::edge	influence-01	ARG1	show-01	0.1.0	0.1.0.0	
# ::edge	or	op1	temporal-quantity	0.1.1	0.1	
# ::edge	promise-01	ARG1	change-01	0.2	0.2.0	
# ::edge	promise-01	ARG2	say-01	0.2	0	
# ::edge	say-01	ARG0	it	0	0.0	
# ::edge	say-01	ARG1	temporal-quantity	0	0.1	
# ::edge	show-01	ARG0	park	0.1.0.0	0.1.0.0.0	
# ::edge	show-01	ARG1	central	0.1.0.0	0.1.0.0.1	
# ::edge	temporal-quantity	location	influence-01	0.1	0.1.0	
# ::edge	temporal-quantity	quant	4	0.1	0.1.2	
# ::edge	temporal-quantity	unit	month	0.1	0.1.3	
(s2 / say-01 
      :ARG0 (i2 / it) 
      :ARG1 (t / temporal-quantity 
            :location (i / influence-01 
                  :ARG1 (s / show-01 
                        :ARG0 (p2 / park) 
                        :ARG1 (c2 / central))) 
            :op-of (o / or) 
            :quant 4 
            :unit (m / month)) 
      :ARG2-of (p / promise-01 
            :ARG1 (c / change-01 
                  :ARG1 (e / emphasize-01 
                        :ARG1 3)) 
            :manner-of (a / arrive-01 
                  :ARG1 (h / he))))

# ::snt president bush making light of surgery to remove a cyst from his right middle finger said it was no federal case and promised to show off his scar afterward
# ::tok president bush making light of surgery to remove a cyst from his right middle finger said it was no federal case and promised to show off his scar afterward
# ::alignments 28-29|0.2.0.1 25-26|0.2.0.2.0 24-25|0.2.0.2 22-23|0.2.0 21-22|0.2 20-21|0.1 19-20|0.1.0 18-19|0.0.0 16-17|0.0 15-16|0 14-15|0.2.0.0.1.0.1 13-14|0.2.0.0.1.0.2 7-8|0.2.0.0.1.0 5-6|0.2.0.0.1.0.0 3-4|0.2.0.0.1 1-2|0.2.0.0 0-1|0.2.0.0.0.0+0.2.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:28.899
# ::node	0	say-01	15-16
# ::node	0.0	it	16-17
# ::node	0.0.0	-	18-19
# ::node	0.1	case	20-21
# ::node	0.1.0	federal	19-20
# ::node	0.2	and	21-22
# ::node	0.2.0	promise-01	22-23
# ::node	0.2.0.0	bush-league	1-2
# ::node	0.2.0.0.0	have-org-role-91	0-1
# ::node	0.2.0.0.0.0	president	0-1
# ::node	0.2.0.0.1	light	3-4
# ::node	0.2.0.0.1.0	remove-01	7-8
# ::node	0.2.0.0.1.0.0	surgery	5-6
# ::node	0.2.0.0.1.0.1	finger	14-15
# ::node	0.2.0.0.1.0.2	middle	13-14
# ::node	0.2.0.1	afterward	28-29
# ::node	0.2.0.2	show-01	24-25
# ::node	0.2.0.2.0	off	25-26
# ::root	0	say-01
# ::edge	and	op1	say-01	0.2	0	
# ::edge	and	op2	promise-01	0.2	0.2.0	
# ::edge	case	mod	federal	0.1	0.1.0	
# ::edge	have-org-role-91	ARG0	bush-league	0.2.0.0.0	0.2.0.0	
# ::edge	have-org-role-91	ARG2	president	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	it	mod	-	0.0	0.0.0	
# ::edge	light	mod	bush-league	0.2.0.0.1	0.2.0.0	
# ::edge	promise-01	ARG0	bush-league	0.2.0	0.2.0.0	
# ::edge	promise-01	ARG1	afterward	0.2.0	0.2.0.1	
# ::edge	promise-01	ARG2	show-01	0.2.0	0.2.0.2	
# ::edge	remove-01	ARG0	light	0.2.0.0.1.0	0.2.0.0.1	
# ::edge	remove-01	ARG1	surgery	0.2.0.0.1.0	0.2.0.0.1.0.0	
# ::edge	remove-01	ARG2	finger	0.2.0.0.1.0	0.2.0.0.1.0.1	
# ::edge	remove-01	manner	middle	0.2.0.0.1.0	0.2.0.0.1.0.2	
# ::edge	say-01	ARG0	it	0	0.0	
# ::edge	say-01	ARG1	case	0	0.1	
# ::edge	show-01	direction	off	0.2.0.2	0.2.0.2.0	
(s2 / say-01 
      :ARG0 (i / it 
            :mod (- / -)) 
      :ARG1 (c / case 
            :mod (f / federal)) 
      :op-of (a2 / and 
            :op1 (p / promise-01 
                  :ARG0 (b / bush-league 
                        :ARG0-of (h / have-org-role-91 
                              :ARG2 (p2 / president)) 
                        :mod-of (l / light 
                              :ARG0-of (r / remove-01 
                                    :ARG1 (s3 / surgery) 
                                    :ARG2 (f2 / finger) 
                                    :manner (m / middle)))) 
                  :ARG1 (a / afterward) 
                  :ARG2 (s / show-01 
                        :direction (o / off)))))

# ::snt   nor are those who do receive him promised either success or comfort
# ::tok nor are those who do receive him promised either success or comfort
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:28.900
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the ministers concerned must have congratulated themselves that politically at least they had done the right thing by ignoring the environmental bodies and promising eightlane motorways and an expenditure of 12
# ::tok the ministers concerned must have congratulated themselves that politically at least they had done the right thing by ignoring the environmental bodies and promising eightlane motorways and an expenditure of 12
# ::alignments 30-31|0.0.1.0 28-29|0.0.1 26-27|0 23-24|0.0.0.0.0.0.0 22-23|0.0 21-22|0.0.0.1 20-21|0.0.0.1.0 18-19|0.0.0 16-17|0.0.0.2 11-12|0.0.0.0 5-6|0.0.0.0.0 2-3|0.0.0.0.0.0 1-2|0.0.0.0.0.0.1.0+0.0.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:29.585
# ::node	0	and	26-27
# ::node	0.0	and	22-23
# ::node	0.0.0	ignore-01	18-19
# ::node	0.0.0.0	they	11-12
# ::node	0.0.0.0.0	congratulate-01	5-6
# ::node	0.0.0.0.0.0	concern-01	2-3
# ::node	0.0.0.0.0.0.0	promise-01	23-24
# ::node	0.0.0.0.0.0.1	have-org-role-91	1-2
# ::node	0.0.0.0.0.0.1.0	minister	1-2
# ::node	0.0.0.1	body	21-22
# ::node	0.0.0.1.0	environment	20-21
# ::node	0.0.0.2	thing	16-17
# ::node	0.0.1	expend-01	28-29
# ::node	0.0.1.0	12	30-31
# ::root	0	and
(a / and 
      :op-of (a2 / and 
            :ARG1-of (i / ignore-01 
                  :ARG0 (t2 / they 
                        :ARG0-of (c / congratulate-01 
                              :ARG1-of (c2 / concern-01 
                                    :ARG1-of (p / promise-01) 
                                    :ARG1-of (h / have-org-role-91 
                                          :ARG2 (m / minister))))) 
                  :ARG2 (b / body 
                        :mod (e2 / environment)) 
                  :time (t / thing)) 
            :op1 (e / expend-01 
                  :time 12)))

# ::snt the rebel faribundo marti national liberation front fmln had promised to step up the war to disprove government assertions that the rebels were weak militarily as well to force the government to make concessions in the peace talks that started in september
# ::tok the rebel faribundo marti national liberation front fmln had promised to step up the war to disprove government assertions that the rebels were weak militarily as well to force the government to make concessions in the peace talks that started in september
# ::alignments 41-42|0.1.1.0.0+0.1.1.0 39-40|0.1.1 37-38|0.1 36-37|0.1.2 33-34|0 28-29|0.0 26-27|0.0.0 24-25|0.0.0.0.1.1.0 23-24|0.1.0.1 21-22|0.1.0.0+0.1.0 18-19|0.1.0.1.0 14-15|0.0.0.0.1.0 9-10|0.0.0.0.1 6-7|0.0.0.0.0 5-6|0.0.0.0 4-5|0.0.0.0.2 1-2|0.0.0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:29.817
# ::node	0	concede-01	33-34
# ::node	0.0	force	28-29
# ::node	0.0.0	well	26-27
# ::node	0.0.0.0	liberate-01	5-6
# ::node	0.0.0.0.0	front	6-7
# ::node	0.0.0.0.1	promise-01	9-10
# ::node	0.0.0.0.1.0	war	14-15
# ::node	0.0.0.0.1.1	rebel-01	1-2
# ::node	0.0.0.0.1.1.0	military	24-25
# ::node	0.0.0.0.2	nation	4-5
# ::node	0.1	talk-01	37-38
# ::node	0.1.0	person	21-22
# ::node	0.1.0.0	rebel-01	21-22
# ::node	0.1.0.1	weak	23-24
# ::node	0.1.0.1.0	assert-03	18-19
# ::node	0.1.1	start-01	39-40
# ::node	0.1.1.0	date-entity	41-42
# ::node	0.1.1.0.0	9	41-42
# ::node	0.1.2	peace	36-37
# ::root	0	concede-01
# ::edge	assert-03	ARG1	weak	0.1.0.1.0	0.1.0.1	
# ::edge	concede-01	ARG0	force	0	0.0	
# ::edge	concede-01	time	talk-01	0	0.1	
# ::edge	date-entity	month	9	0.1.1.0	0.1.1.0.0	
# ::edge	force	mod	well	0.0	0.0.0	
# ::edge	liberate-01	ARG0	front	0.0.0.0	0.0.0.0.0	
# ::edge	liberate-01	ARG1	well	0.0.0.0	0.0.0	
# ::edge	liberate-01	mod	nation	0.0.0.0	0.0.0.0.2	
# ::edge	promise-01	ARG0	liberate-01	0.0.0.0.1	0.0.0.0	
# ::edge	promise-01	ARG1	war	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	rebel-01	ARG0	military	0.0.0.0.1.1	0.0.0.0.1.1.0	
# ::edge	rebel-01	ARG0	person	0.1.0.0	0.1.0	
# ::edge	rebel-01	ARG2	promise-01	0.0.0.0.1.1	0.0.0.0.1	
# ::edge	start-01	ARG1	talk-01	0.1.1	0.1	
# ::edge	start-01	time	date-entity	0.1.1	0.1.1.0	
# ::edge	talk-01	ARG0	person	0.1	0.1.0	
# ::edge	talk-01	topic	peace	0.1	0.1.2	
# ::edge	weak	domain	person	0.1.0.1	0.1.0	
(c / concede-01 
      :ARG0 (f / force 
            :mod (w / well 
                  :ARG1-of (l / liberate-01 
                        :ARG0 (f2 / front) 
                        :ARG0-of (p3 / promise-01 
                              :ARG1 (w3 / war) 
                              :ARG2-of (r2 / rebel-01 
                                    :ARG0 (m / military))) 
                        :mod (n / nation)))) 
      :time (t / talk-01 
            :ARG0 (p2 / person 
                  :ARG0-of (r / rebel-01) 
                  :domain-of (w2 / weak 
                        :ARG1-of (a / assert-03))) 
            :ARG1-of (s / start-01 
                  :time (d / date-entity 
                        :month 9)) 
            :topic (p / peace)))

# ::snt various junior ministers at the home office have made apologetic noises about problems caused by ec standardisation and new computers but all have promised at various times that something would be done
# ::tok various junior ministers at the home office have made apologetic noises about problems caused by ec standardisation and new computers but all have promised at various times that something would be done
# ::alignments 28-29|0.2.0 25-26|0.2.1 23-24|0.2.2 21-22|0.2.2.1 20-21|0.2 19-20|0.1.0 18-19|0.1.0.0 17-18|0.1 13-14|0 12-13|0.0 10-11|0.3 6-7|0.2.2.0.0 5-6|0.2.2.0.0.0 2-3|0.2.2.0.1+0.2.2.0 1-2|0.2.2.0.1.0 0-1|0.2.2.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:30.638
# ::node	0	cause-01	13-14
# ::node	0.0	problem	12-13
# ::node	0.1	and	17-18
# ::node	0.1.0	computer	19-20
# ::node	0.1.0.0	new	18-19
# ::node	0.2	contrast-01	20-21
# ::node	0.2.0	something	28-29
# ::node	0.2.1	various	25-26
# ::node	0.2.2	promise-01	23-24
# ::node	0.2.2.0	have-org-role-91	2-3
# ::node	0.2.2.0.0	office	6-7
# ::node	0.2.2.0.0.0	home	5-6
# ::node	0.2.2.0.1	minister	2-3
# ::node	0.2.2.0.1.0	junior	1-2
# ::node	0.2.2.0.1.1	various	0-1
# ::node	0.2.2.1	all	21-22
# ::node	0.3	noise	10-11
# ::root	0	cause-01
# ::edge	and	op1	computer	0.1	0.1.0	
# ::edge	cause-01	ARG0	problem	0	0.0	
# ::edge	cause-01	ARG1	and	0	0.1	
# ::edge	cause-01	ARG2	contrast-01	0	0.2	
# ::edge	computer	mod	new	0.1.0	0.1.0.0	
# ::edge	contrast-01	ARG0	something	0.2	0.2.0	
# ::edge	contrast-01	ARG1	various	0.2	0.2.1	
# ::edge	contrast-01	ARG2	promise-01	0.2	0.2.2	
# ::edge	have-org-role-91	ARG1	office	0.2.2.0	0.2.2.0.0	
# ::edge	have-org-role-91	ARG2	minister	0.2.2.0	0.2.2.0.1	
# ::edge	minister	mod	junior	0.2.2.0.1	0.2.2.0.1.0	
# ::edge	minister	mod	various	0.2.2.0.1	0.2.2.0.1.1	
# ::edge	noise	topic	cause-01	0.3	0	
# ::edge	office	mod	home	0.2.2.0.0	0.2.2.0.0.0	
# ::edge	promise-01	ARG1	have-org-role-91	0.2.2	0.2.2.0	
# ::edge	promise-01	mod	all	0.2.2	0.2.2.1	
(c3 / cause-01 
      :ARG0 (p2 / problem) 
      :ARG1 (a2 / and 
            :op1 (c2 / computer 
                  :mod (n / new))) 
      :ARG2 (c / contrast-01 
            :ARG0 (s / something) 
            :ARG1 (v / various) 
            :ARG2 (p / promise-01 
                  :ARG1 (h2 / have-org-role-91 
                        :ARG1 (o / office 
                              :mod (h / home)) 
                        :ARG2 (m / minister 
                              :mod (j / junior) 
                              :mod (v2 / various))) 
                  :mod (a / all))) 
      :topic-of (n2 / noise))

# ::snt first edition richard branson head of virgin records promised yesterday to fund further legal defences by the irish family planning association if more prosecutions are brought for selling condoms at the virgin shop in dublin
# ::tok first edition richard branson head of virgin records promised yesterday to fund further legal defences by the irish family planning association if more prosecutions are brought for selling condoms at the virgin shop in dublin
# ::alignments 32-33|0.0 31-32|0 27-28|0.0.0 20-21|0.0.0.0.1.1 19-20|0.0.0.0.1.1.0 18-19|0.0.0.0.1.1.0.0 14-15|0.0.0.0.1.0 13-14|0.0.0.0.1.0.2 12-13|0.0.0.0.1.0.1 11-12|0.0.0.0.1 9-10|0.0.0.0.1.0.1.0.0 8-9|0.0.0.0.1.0.1.0 7-8|0.0.0.0.0 6-7|0.0.0.0.0.0 4-5|0.0.0.0 1-2|0.0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:30.894
# ::node	0	virgin	31-32
# ::node	0.0	shop	32-33
# ::node	0.0.0	sell-01	27-28
# ::node	0.0.0.0	head-01	4-5
# ::node	0.0.0.0.0	record	7-8
# ::node	0.0.0.0.0.0	virgin	6-7
# ::node	0.0.0.0.1	fund-01	11-12
# ::node	0.0.0.0.1.0	defend-01	14-15
# ::node	0.0.0.0.1.0.0	edition	1-2
# ::node	0.0.0.0.1.0.1	further	12-13
# ::node	0.0.0.0.1.0.1.0	promise-01	8-9
# ::node	0.0.0.0.1.0.1.0.0	yesterday	9-10
# ::node	0.0.0.0.1.0.2	legal	13-14
# ::node	0.0.0.0.1.1	associate-01	20-21
# ::node	0.0.0.0.1.1.0	plan-01	19-20
# ::node	0.0.0.0.1.1.0.0	family	18-19
# ::root	0	virgin
(v / virgin 
      :mod-of (s / shop 
            :location-of (s2 / sell-01 
                  :ARG1 (h / head-01 
                        :ARG1 (r / record 
                              :mod (v2 / virgin)) 
                        :ARG2 (f3 / fund-01 
                              :ARG1 (d / defend-01 
                                    :ARG0 (e / edition) 
                                    :degree (f2 / further 
                                          :ARG1-of (p2 / promise-01 
                                                :ARG0 (y / yesterday))) 
                                    :mod (l / legal)) 
                              :ARG2 (a / associate-01 
                                    :ARG1 (p / plan-01 
                                          :ARG1 (f / family))))))))

# ::snt   he again promised a letter from john wright but instead it was he who again wrote at the end of october you obviously havent read my letter carefully
# ::tok he again promised a letter from john wright but instead it was he who again wrote at the end of october you obviously havent read my letter carefully
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:30.895
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt balloons deluged germany with news of allied successes and the german lines with certificates promising good treatment for those who surrendered
# ::tok balloons deluged germany with news of allied successes and the german lines with certificates promising good treatment for those who surrendered
# ::alignments 20-21|0 16-17|0.0 15-16|0.0.2 14-15|0.0.1 11-12|0.0.1.0 8-9|0.0.0.1 7-8|0.0.0 6-7|0.0.0.0 4-5|0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:30.944
# ::node	0	surrender-01	20-21
# ::node	0.0	treat-03	16-17
# ::node	0.0.0	success	7-8
# ::node	0.0.0.0	ally-01	6-7
# ::node	0.0.0.1	and	8-9
# ::node	0.0.0.1.0	news	4-5
# ::node	0.0.1	promise-01	14-15
# ::node	0.0.1.0	line	11-12
# ::node	0.0.2	good	15-16
# ::root	0	surrender-01
# ::edge	ally-01	ARG1	success	0.0.0.0	0.0.0	
# ::edge	and	op1	success	0.0.0.1	0.0.0	
# ::edge	news	topic	and	0.0.0.1.0	0.0.0.1	
# ::edge	promise-01	ARG0	line	0.0.1	0.0.1.0	
# ::edge	promise-01	ARG1	treat-03	0.0.1	0.0	
# ::edge	surrender-01	ARG1	treat-03	0	0.0	
# ::edge	treat-03	ARG1	success	0.0	0.0.0	
# ::edge	treat-03	mod	good	0.0	0.0.2	
(s / surrender-01 
      :ARG1 (t / treat-03 
            :ARG1 (s2 / success 
                  :ARG1-of (a2 / ally-01) 
                  :op-of (a / and 
                        :topic-of (n / news))) 
            :ARG1-of (p / promise-01 
                  :ARG0 (l / line)) 
            :mod (g / good)))

# ::snt the rsdlp should be reorganized as a federal party with the bund being recognized as the sole representative of jewish workers and the party programme promising personal cultural autonomy that is all jewish workers regardless of where they lived in the empire would be members of a national jewish association responsible for all jewish educational and cultural affairs
# ::tok the rsdlp should be reorganized as a federal party with the bund being recognized as the sole representative of jewish workers and the party programme promising personal cultural autonomy that is all jewish workers regardless of where they lived in the empire would be members of a national jewish association responsible for all jewish educational and cultural affairs
# ::alignments 57-58|0.1.0.1.1.0.2.0.0.0 56-57|0.1.0.1.1.0.2.0.0.0.1 55-56|0.1.0.1.1.0.2.0 54-55|0.1.0.1.1.0.2.0.0 53-54|0.1.0.1.1.0.2.0.0.0.0.0.0+0.1.0.1.1.0.2.0.0.0.0.0+0.1.0.1.1.0.2.0.0.0.0 52-53|0.1.0.1.1.0.2.0.1 50-51|0.1.0.1.1.0.2 49-50|0.1.0.1.1.0 48-49|0.1.0.1.1.0.0.0.0+0.1.0.1.1.0.0.0+0.1.0.1.1.0.0 47-48|0.1.0.1.1.0.3 44-45|0.1.0.1.1.0.1.1+0.1.0.1.1.0.1 41-42|0.1.0.1.1 38-39|0.1.0.1 37-38|0.1.0.1.0 33-34|0.1.0.1.1.0.1.0.0+0.1.0.1.1.0.1.0 32-33|0.1.0.1.1.0.1.0.1.0.0+0.1.0.1.1.0.1.0.1.0+0.1.0.1.1.0.1.0.1 31-32|0.1.0.1.1.0.1.0.2 28-29|0.1.2.0.0 27-28|0.0 26-27|0.1.2.0.0.0 25-26|0.1.2.0 24-25|0.1.2 23-24|0.1.2.1 21-22|0.1 20-21|0.1.0.0.0+0.1.0.0 19-20|0.1.0.2.0.0+0.1.0.2.0+0.1.0.2 17-18|0.1.0 16-17|0.1.0.3 13-14|0 8-9|0.1.1.0.0 7-8|0.1.1.0 2-3|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:33.614
# ::node	0	recognize-01	13-14
# ::node	0.0	culture	27-28
# ::node	0.1	and	21-22
# ::node	0.1.0	represent-01	17-18
# ::node	0.1.0.0	person	20-21
# ::node	0.1.0.0.0	work-01	20-21
# ::node	0.1.0.1	live-01	38-39
# ::node	0.1.0.1.0	they	37-38
# ::node	0.1.0.1.1	empire	41-42
# ::node	0.1.0.1.1.0	associate-01	49-50
# ::node	0.1.0.1.1.0.0	ethnic-group	48-49
# ::node	0.1.0.1.1.0.0.0	name	48-49
# ::node	0.1.0.1.1.0.0.0.0	"Jew"	48-49
# ::node	0.1.0.1.1.0.1	have-org-role-91	44-45
# ::node	0.1.0.1.1.0.1.0	person	33-34
# ::node	0.1.0.1.1.0.1.0.0	work-01	33-34
# ::node	0.1.0.1.1.0.1.0.1	ethnic-group	32-33
# ::node	0.1.0.1.1.0.1.0.1.0	name	32-33
# ::node	0.1.0.1.1.0.1.0.1.0.0	"Jew"	32-33
# ::node	0.1.0.1.1.0.1.0.2	all	31-32
# ::node	0.1.0.1.1.0.1.1	member	44-45
# ::node	0.1.0.1.1.0.2	responsible-41	50-51
# ::node	0.1.0.1.1.0.2.0	and	55-56
# ::node	0.1.0.1.1.0.2.0.0	educate-01	54-55
# ::node	0.1.0.1.1.0.2.0.0.0	affair	57-58
# ::node	0.1.0.1.1.0.2.0.0.0.0	ethnic-group	53-54
# ::node	0.1.0.1.1.0.2.0.0.0.0.0	name	53-54
# ::node	0.1.0.1.1.0.2.0.0.0.0.0.0	"Jew"	53-54
# ::node	0.1.0.1.1.0.2.0.0.0.1	culture	56-57
# ::node	0.1.0.1.1.0.2.0.1	all	52-53
# ::node	0.1.0.1.1.0.3	nation	47-48
# ::node	0.1.0.2	ethnic-group	19-20
# ::node	0.1.0.2.0	name	19-20
# ::node	0.1.0.2.0.0	"Jew"	19-20
# ::node	0.1.0.3	sole	16-17
# ::node	0.1.1	recommend-01	2-3
# ::node	0.1.1.0	federal	7-8
# ::node	0.1.1.0.0	party	8-9
# ::node	0.1.2	program	24-25
# ::node	0.1.2.0	promise-01	25-26
# ::node	0.1.2.0.0	autonomy	28-29
# ::node	0.1.2.0.0.0	personal	26-27
# ::node	0.1.2.1	party	23-24
# ::root	0	recognize-01
# ::edge	affair	mod	culture	0.1.0.1.1.0.2.0.0.0	0.1.0.1.1.0.2.0.0.0.1	
# ::edge	affair	mod	ethnic-group	0.1.0.1.1.0.2.0.0.0	0.1.0.1.1.0.2.0.0.0.0	
# ::edge	and	op1	educate-01	0.1.0.1.1.0.2.0	0.1.0.1.1.0.2.0.0	
# ::edge	and	op1	program	0.1	0.1.2	
# ::edge	and	quant	all	0.1.0.1.1.0.2.0	0.1.0.1.1.0.2.0.1	
# ::edge	associate-01	ARG0	empire	0.1.0.1.1.0	0.1.0.1.1	
# ::edge	associate-01	ARG1	ethnic-group	0.1.0.1.1.0	0.1.0.1.1.0.0	
# ::edge	associate-01	mod	nation	0.1.0.1.1.0	0.1.0.1.1.0.3	
# ::edge	autonomy	mod	personal	0.1.2.0.0	0.1.2.0.0.0	
# ::edge	educate-01	ARG1	affair	0.1.0.1.1.0.2.0.0	0.1.0.1.1.0.2.0.0.0	
# ::edge	ethnic-group	name	name	0.1.0.1.1.0.0	0.1.0.1.1.0.0.0	
# ::edge	ethnic-group	name	name	0.1.0.1.1.0.1.0.1	0.1.0.1.1.0.1.0.1.0	
# ::edge	ethnic-group	name	name	0.1.0.1.1.0.2.0.0.0.0	0.1.0.1.1.0.2.0.0.0.0.0	
# ::edge	ethnic-group	name	name	0.1.0.2	0.1.0.2.0	
# ::edge	have-org-role-91	ARG0	person	0.1.0.1.1.0.1	0.1.0.1.1.0.1.0	
# ::edge	have-org-role-91	ARG1	associate-01	0.1.0.1.1.0.1	0.1.0.1.1.0	
# ::edge	have-org-role-91	ARG2	member	0.1.0.1.1.0.1	0.1.0.1.1.0.1.1	
# ::edge	live-01	ARG0	they	0.1.0.1	0.1.0.1.0	
# ::edge	live-01	ARG1	represent-01	0.1.0.1	0.1.0	
# ::edge	live-01	location	empire	0.1.0.1	0.1.0.1.1	
# ::edge	name	op1	"Jew"	0.1.0.1.1.0.0.0	0.1.0.1.1.0.0.0.0	
# ::edge	name	op1	"Jew"	0.1.0.1.1.0.1.0.1.0	0.1.0.1.1.0.1.0.1.0.0	
# ::edge	name	op1	"Jew"	0.1.0.1.1.0.2.0.0.0.0.0	0.1.0.1.1.0.2.0.0.0.0.0.0	
# ::edge	name	op1	"Jew"	0.1.0.2.0	0.1.0.2.0.0	
# ::edge	party	mod	federal	0.1.1.0.0	0.1.1.0	
# ::edge	person	mod	ethnic-group	0.1.0.1.1.0.1.0	0.1.0.1.1.0.1.0.1	
# ::edge	person	quant	all	0.1.0.1.1.0.1.0	0.1.0.1.1.0.1.0.2	
# ::edge	program	mod	party	0.1.2	0.1.2.1	
# ::edge	promise-01	ARG0	program	0.1.2.0	0.1.2	
# ::edge	promise-01	ARG1	autonomy	0.1.2.0	0.1.2.0.0	
# ::edge	recognize-01	ARG0	culture	0	0.0	
# ::edge	recognize-01	ARG1	and	0	0.1	
# ::edge	recommend-01	ARG0	federal	0.1.1	0.1.1.0	
# ::edge	recommend-01	ARG1	and	0.1.1	0.1	
# ::edge	represent-01	ARG0	person	0.1.0	0.1.0.0	
# ::edge	represent-01	ARG1	and	0.1.0	0.1	
# ::edge	represent-01	location	ethnic-group	0.1.0	0.1.0.2	
# ::edge	represent-01	mod	sole	0.1.0	0.1.0.3	
# ::edge	responsible-41	ARG1	associate-01	0.1.0.1.1.0.2	0.1.0.1.1.0	
# ::edge	responsible-41	ARG2	and	0.1.0.1.1.0.2	0.1.0.1.1.0.2.0	
# ::edge	work-01	ARG0	person	0.1.0.0.0	0.1.0.0	
# ::edge	work-01	ARG0	person	0.1.0.1.1.0.1.0.0	0.1.0.1.1.0.1.0	
(r3 / recognize-01 
      :ARG0 (c2 / culture) 
      :ARG1 (a7 / and 
            :ARG1-of (r2 / represent-01 
                  :ARG0 (p6 / person 
                        :ARG0-of (w2 / work-01)) 
                  :ARG1-of (l / live-01 
                        :ARG0 (t / they) 
                        :location (e4 / empire 
                              :ARG0-of (a4 / associate-01 
                                    :ARG1 (e3 / ethnic-group 
                                          :name (n2 / name 
                                                :op1 "Jew")) 
                                    :ARG1-of (h / have-org-role-91 
                                          :ARG0 (p / person 
                                                :ARG0-of (w / work-01) 
                                                :mod (e5 / ethnic-group 
                                                      :name (n4 / name 
                                                            :op1 "Jew")) 
                                                :quant (a5 / all)) 
                                          :ARG2 (m / member)) 
                                    :ARG1-of (r / responsible-41 
                                          :ARG2 (a2 / and 
                                                :op1 (e / educate-01 
                                                      :ARG1 (a / affair 
                                                            :mod (e2 / ethnic-group 
                                                                  :name (n / name 
                                                                        :op1 "Jew")) 
                                                            :mod (c / culture))) 
                                                :quant (a3 / all))) 
                                    :mod (n3 / nation)))) 
                  :location (e6 / ethnic-group 
                        :name (n5 / name 
                              :op1 "Jew")) 
                  :mod (s / sole)) 
            :ARG1-of (r4 / recommend-01 
                  :ARG0 (f / federal 
                        :mod-of (p7 / party))) 
            :op1 (p4 / program 
                  :ARG0-of (p3 / promise-01 
                        :ARG1 (a6 / autonomy 
                              :mod (p2 / personal))) 
                  :mod (p5 / party))))

# ::snt while we are promised it will not happen again the match that may well decide the destiny of this seasons first division trophy has to compete with the scrum descending on twickenham this afternoon
# ::tok while we are promised it will not happen again the match that may well decide the destiny of this seasons first division trophy has to compete with the scrum descending on twickenham this afternoon
# ::alignments 33-34|0.0.0.0 32-33|0.0.0.1.1.0.0.0.1 25-26|0.0.0 22-23|0.0 21-22|0 18-19|0.0.0.1.0 16-17|0.0.0.1.1.0.0.0.0.0 14-15|0.0.0.1.1.0.0.0.0 13-14|0.0.0.1.1.0.0.0.0.2 12-13|0.0.0.1.1.0.0.0.0.1.0+0.0.0.1.1.0.0.0.0.1 10-11|0.0.0.1.1.0.0.0 8-9|0.0.0.1.1.0.1 7-8|0.0.0.1.1.0 4-5|0.0.0.1.1.0.0 3-4|0.0.0.1 1-2|0.0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:34.158
# ::node	0	division	21-22
# ::node	0.0	trophy	22-23
# ::node	0.0.0	compete-01	25-26
# ::node	0.0.0.0	afternoon	33-34
# ::node	0.0.0.1	promise-01	3-4
# ::node	0.0.0.1.0	this	18-19
# ::node	0.0.0.1.1	we	1-2
# ::node	0.0.0.1.1.0	happen-01	7-8
# ::node	0.0.0.1.1.0.0	it	4-5
# ::node	0.0.0.1.1.0.0.0	match-01	10-11
# ::node	0.0.0.1.1.0.0.0.0	decide-01	14-15
# ::node	0.0.0.1.1.0.0.0.0.0	destiny	16-17
# ::node	0.0.0.1.1.0.0.0.0.1	date-entity	12-13
# ::node	0.0.0.1.1.0.0.0.0.1.0	5	12-13
# ::node	0.0.0.1.1.0.0.0.0.2	well	13-14
# ::node	0.0.0.1.1.0.0.0.1	this	32-33
# ::node	0.0.0.1.1.0.1	again	8-9
# ::root	0	division
(d / division 
      :mod-of (t2 / trophy 
            :ARG0-of (c / compete-01 
                  :ARG1 (a / afternoon) 
                  :ARG2 (p / promise-01 
                        :ARG0 (t3 / this) 
                        :ARG1 (w2 / we 
                              :ARG0-of (h / happen-01 
                                    :ARG1 (i / it 
                                          :ARG0-of (m / match-01 
                                                :ARG0-of (d3 / decide-01 
                                                      :ARG1 (d2 / destiny) 
                                                      :domain-of (d4 / date-entity 
                                                            :month 5) 
                                                      :mod (w / well)) 
                                                :ARG1 (t / this))) 
                                    :mod (a2 / again)))))))

# ::snt hypercard 2 expected at next months macworld in boston may promise an answer but silicon beachs supercard offers colour here and now and is hypercardcompatible
# ::tok hypercard 2 expected at next months macworld in boston may promise an answer but silicon beachs supercard offers colour here and now and is hypercardcompatible
# ::alignments 22-23|0.0.0 21-22|0.1 20-21|0 19-20|0.0 18-19|0.0.0.1 17-18|0.0.0.0.0.0.0 14-15|0.0.0.0.1 13-14|0.0.0.0 12-13|0.0.0.0.0.0 10-11|0.0.0.0.0 9-10|0.0.0.0.0.2.0+0.0.0.0.0.2 5-6|0.0.0.0.0.1.0+0.0.0.0.0.1 4-5|0.0.0.0.0.1.0.0 2-3|0.0.0.0.0.0.1 1-2|0.0.0.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:34.513
# ::node	0	and	20-21
# ::node	0.0	here	19-20
# ::node	0.0.0	and	22-23
# ::node	0.0.0.0	contrast-01	13-14
# ::node	0.0.0.0.0	promise-01	10-11
# ::node	0.0.0.0.0.0	answer-01	12-13
# ::node	0.0.0.0.0.0.0	offer-01	17-18
# ::node	0.0.0.0.0.0.1	expect-01	2-3
# ::node	0.0.0.0.0.0.1.0	2	1-2
# ::node	0.0.0.0.0.1	temporal-quantity	5-6
# ::node	0.0.0.0.0.1.0	month	5-6
# ::node	0.0.0.0.0.1.0.0	next	4-5
# ::node	0.0.0.0.0.2	date-entity	9-10
# ::node	0.0.0.0.0.2.0	5	9-10
# ::node	0.0.0.0.1	silicon	14-15
# ::node	0.0.0.1	colour	18-19
# ::node	0.1	now	21-22
# ::root	0	and
# ::edge	and	op1	colour	0.0.0	0.0.0.1	
# ::edge	and	op1	here	0	0.0	
# ::edge	and	op2	here	0.0.0	0.0	
# ::edge	and	op2	now	0	0.1	
# ::edge	answer-01	ARG0	offer-01	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	contrast-01	ARG1	promise-01	0.0.0.0	0.0.0.0.0	
# ::edge	contrast-01	ARG2	and	0.0.0.0	0.0.0	
# ::edge	contrast-01	instrument	silicon	0.0.0.0	0.0.0.0.1	
# ::edge	date-entity	month	5	0.0.0.0.0.2	0.0.0.0.0.2.0	
# ::edge	expect-01	ARG0	2	0.0.0.0.0.0.1	0.0.0.0.0.0.1.0	
# ::edge	expect-01	ARG1	answer-01	0.0.0.0.0.0.1	0.0.0.0.0.0	
# ::edge	month	mod	next	0.0.0.0.0.1.0	0.0.0.0.0.1.0.0	
# ::edge	promise-01	ARG1	answer-01	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	promise-01	ARG2	temporal-quantity	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	promise-01	mod	date-entity	0.0.0.0.0	0.0.0.0.0.2	
# ::edge	temporal-quantity	unit	month	0.0.0.0.0.1	0.0.0.0.0.1.0	
(a2 / and 
      :op1 (h / here 
            :op-of (a / and 
                  :ARG2-of (c2 / contrast-01 
                        :ARG1 (p / promise-01 
                              :ARG1 (a3 / answer-01 
                                    :ARG0 (o / offer-01) 
                                    :ARG1-of (e / expect-01 
                                          :ARG0 2)) 
                              :ARG2 (t / temporal-quantity 
                                    :unit (m / month 
                                          :mod (n2 / next))) 
                              :mod (d / date-entity 
                                    :month 5)) 
                        :instrument (s / silicon)) 
                  :op1 (c / colour))) 
      :op2 (n / now))

# ::snt the rebellion fizzled out after the health secretary kenneth clarke promised a new specific grant for voluntary bodies involved in preventing and treating drug and alcohol abuse
# ::tok the rebellion fizzled out after the health secretary kenneth clarke promised a new specific grant for voluntary bodies involved in preventing and treating drug and alcohol abuse
# ::alignments 26-27|0.0.1.0.0 25-26|0.0.1.0.0.0 24-25|0 23-24|0.0.0 22-23|0.0 21-22|0.0.1 20-21|0.0.1.0 18-19|0.0.1.0.1 17-18|0.0.1.0.1.0 16-17|0.0.1.0.1.0.0 14-15|0.0.1.0.1.0.1 13-14|0.0.1.0.1.0.1.1 12-13|0.0.1.0.1.0.1.2 10-11|0.0.1.0.1.0.1.0 8-10|0.0.1.0.1.0.1.0.0.0.0+0.0.1.0.1.0.1.0.0.0.1+0.0.1.0.1.0.1.0.0.0+0.0.1.0.1.0.1.0.0 7-8|0.0.1.0.1.0.1.0.1.0.0 6-7|0.0.1.0.1.0.1.0.1.0 4-5|0.0.1.0.1.0.1.0.2 1-2|0.0.1.0.1.0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:35.389
# ::node	0	and	24-25
# ::node	0.0	treat-03	22-23
# ::node	0.0.0	drug	23-24
# ::node	0.0.1	and	21-22
# ::node	0.0.1.0	prevent-01	20-21
# ::node	0.0.1.0.0	abuse-01	26-27
# ::node	0.0.1.0.0.0	alcohol	25-26
# ::node	0.0.1.0.1	involve-01	18-19
# ::node	0.0.1.0.1.0	body	17-18
# ::node	0.0.1.0.1.0.0	volunteer-01	16-17
# ::node	0.0.1.0.1.0.1	grant-01	14-15
# ::node	0.0.1.0.1.0.1.0	promise-01	10-11
# ::node	0.0.1.0.1.0.1.0.0	person	8-10
# ::node	0.0.1.0.1.0.1.0.0.0	name	8-10
# ::node	0.0.1.0.1.0.1.0.0.0.0	"clarke"	8-10
# ::node	0.0.1.0.1.0.1.0.0.0.1	"kenneth"	8-10
# ::node	0.0.1.0.1.0.1.0.1	rebel-01	1-2
# ::node	0.0.1.0.1.0.1.0.1.0	health	6-7
# ::node	0.0.1.0.1.0.1.0.1.0.0	secretary	7-8
# ::node	0.0.1.0.1.0.1.0.2	after	4-5
# ::node	0.0.1.0.1.0.1.1	specific	13-14
# ::node	0.0.1.0.1.0.1.2	new	12-13
# ::root	0	and
# ::edge	abuse-01	mod	alcohol	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	after	op1	promise-01	0.0.1.0.1.0.1.0.2	0.0.1.0.1.0.1.0	
# ::edge	and	op1	prevent-01	0.0.1	0.0.1.0	
# ::edge	and	op1	treat-03	0	0.0	
# ::edge	and	op2	treat-03	0.0.1	0.0	
# ::edge	grant-01	ARG2	body	0.0.1.0.1.0.1	0.0.1.0.1.0	
# ::edge	grant-01	mod	new	0.0.1.0.1.0.1	0.0.1.0.1.0.1.2	
# ::edge	grant-01	mod	specific	0.0.1.0.1.0.1	0.0.1.0.1.0.1.1	
# ::edge	involve-01	ARG1	body	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	involve-01	ARG2	prevent-01	0.0.1.0.1	0.0.1.0	
# ::edge	name	op1	"clarke"	0.0.1.0.1.0.1.0.0.0	0.0.1.0.1.0.1.0.0.0.0	
# ::edge	name	op2	"kenneth"	0.0.1.0.1.0.1.0.0.0	0.0.1.0.1.0.1.0.0.0.1	
# ::edge	person	name	name	0.0.1.0.1.0.1.0.0	0.0.1.0.1.0.1.0.0.0	
# ::edge	prevent-01	ARG1	abuse-01	0.0.1.0	0.0.1.0.0	
# ::edge	promise-01	ARG0	person	0.0.1.0.1.0.1.0	0.0.1.0.1.0.1.0.0	
# ::edge	promise-01	ARG1	rebel-01	0.0.1.0.1.0.1.0	0.0.1.0.1.0.1.0.1	
# ::edge	promise-01	ARG2	grant-01	0.0.1.0.1.0.1.0	0.0.1.0.1.0.1	
# ::edge	rebel-01	ARG0	health	0.0.1.0.1.0.1.0.1	0.0.1.0.1.0.1.0.1.0	
# ::edge	secretary	mod	health	0.0.1.0.1.0.1.0.1.0.0	0.0.1.0.1.0.1.0.1.0	
# ::edge	treat-03	ARG1	drug	0.0	0.0.0	
# ::edge	volunteer-01	ARG1	body	0.0.1.0.1.0.0	0.0.1.0.1.0	
(a3 / and 
      :op1 (t / treat-03 
            :ARG1 (d / drug) 
            :op-of (a4 / and 
                  :op1 (p / prevent-01 
                        :ARG1 (a / abuse-01 
                              :mod (a2 / alcohol)) 
                        :ARG2-of (i / involve-01 
                              :ARG1 (b / body 
                                    :ARG1-of (v / volunteer-01) 
                                    :ARG2-of (g / grant-01 
                                          :ARG2-of (p2 / promise-01 
                                                :ARG0 (p3 / person 
                                                      :name (n2 / name 
                                                            :op1 "clarke" 
                                                            :op2 "kenneth")) 
                                                :ARG1 (r / rebel-01 
                                                      :ARG0 (h / health 
                                                            :mod-of (s2 / secretary))) 
                                                :op-of (a5 / after)) 
                                          :mod (s / specific) 
                                          :mod (n / new))))))))

# ::snt the great powers great britain and france who had promised to aid poland and had tried to aid norway could not turn away from small countries on their very doorstep
# ::tok the great powers great britain and france who had promised to aid poland and had tried to aid norway could not turn away from small countries on their very doorstep
# ::alignments 28-29|0.1.1.1.0.0.1 25-26|0.1.1.1.0.0.0 24-25|0.1.1.1.0.0.0.0 22-23|0.1.1.1.0.0.0.1 19-20|0.1.1.1.1 17-18|0.1 15-16|0.1.1 13-14|0 11-12|0.1.1.1.0.0 9-10|0.1.1.1.0 6-7|0.0.0.0+0.0.0+0.0 5-6|0.1.1.1 4-5|0.1.1.0.1.0+0.1.1.0.1+0.1.1.0 3-4|0.1.1.0.0 2-3|0.1.0 1-2|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:35.654
# ::node	0	and	13-14
# ::node	0.0	country	6-7
# ::node	0.0.0	name	6-7
# ::node	0.0.0.0	"France"	6-7
# ::node	0.1	aid-01	17-18
# ::node	0.1.0	power	2-3
# ::node	0.1.0.0	great	1-2
# ::node	0.1.1	try-01	15-16
# ::node	0.1.1.0	country	4-5
# ::node	0.1.1.0.0	great	3-4
# ::node	0.1.1.0.1	name	4-5
# ::node	0.1.1.0.1.0	"Britain"	4-5
# ::node	0.1.1.1	and	5-6
# ::node	0.1.1.1.0	promise-01	9-10
# ::node	0.1.1.1.0.0	aid-01	11-12
# ::node	0.1.1.1.0.0.0	country	25-26
# ::node	0.1.1.1.0.0.0.0	small	24-25
# ::node	0.1.1.1.0.0.0.1	away	22-23
# ::node	0.1.1.1.0.0.1	very	28-29
# ::node	0.1.1.1.1	possible	19-20
# ::root	0	and
# ::edge	aid-01	ARG0	country	0.1.1.1.0.0	0.1.1.1.0.0.0	
# ::edge	aid-01	ARG0	power	0.1	0.1.0	
# ::edge	aid-01	ARG1	very	0.1.1.1.0.0	0.1.1.1.0.0.1	
# ::edge	and	op1	country	0	0.0	
# ::edge	and	op1	try-01	0.1.1.1	0.1.1	
# ::edge	and	op2	aid-01	0	0.1	
# ::edge	and	op2	possible	0.1.1.1	0.1.1.1.1	
# ::edge	away	op1	country	0.1.1.1.0.0.0.1	0.1.1.1.0.0.0	
# ::edge	country	mod	great	0.1.1.0	0.1.1.0.0	
# ::edge	country	mod	small	0.1.1.1.0.0.0	0.1.1.1.0.0.0.0	
# ::edge	country	name	name	0.0	0.0.0	
# ::edge	country	name	name	0.1.1.0	0.1.1.0.1	
# ::edge	name	op1	"Britain"	0.1.1.0.1	0.1.1.0.1.0	
# ::edge	name	op1	"France"	0.0.0	0.0.0.0	
# ::edge	power	mod	great	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG0	and	0.1.1.1.0	0.1.1.1	
# ::edge	promise-01	ARG1	aid-01	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	try-01	ARG0	country	0.1.1	0.1.1.0	
# ::edge	try-01	ARG1	aid-01	0.1.1	0.1	
(a3 / and 
      :op1 (c2 / country 
            :name (n / name 
                  :op1 "France")) 
      :op2 (a2 / aid-01 
            :ARG0 (p3 / power 
                  :mod (g2 / great)) 
            :ARG1-of (t / try-01 
                  :ARG0 (c3 / country 
                        :mod (g / great) 
                        :name (n2 / name 
                              :op1 "Britain")) 
                  :op-of (a5 / and 
                        :ARG0-of (p2 / promise-01 
                              :ARG1 (a4 / aid-01 
                                    :ARG0 (c / country 
                                          :mod (s / small) 
                                          :op-of (a / away)) 
                                    :ARG1 (v / very))) 
                        :op1 (p / possible)))))

# ::snt   mr vitler promised to forward an off the shelf petition to his head office
# ::tok mr vitler promised to forward an off the shelf petition to his head office
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:35.654
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt in california all three candidates for governor have promised to keep the gas chamber busy
# ::tok in california all three candidates for governor have promised to keep the gas chamber busy
# ::alignments 14-15|0.0.0.1 13-14|0.0.0.1.0 12-13|0.0.0.1.0.0 8-9|0 6-7|0.0.0.0+0.0.0 4-5|0.0 3-4|0.0.1 2-3|0.0.0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:35.725
# ::node	0	promise-01	8-9
# ::node	0.0	candidate	4-5
# ::node	0.0.0	have-org-role-91	6-7
# ::node	0.0.0.0	governor	6-7
# ::node	0.0.0.1	busy	14-15
# ::node	0.0.0.1.0	chamber	13-14
# ::node	0.0.0.1.0.0	gas	12-13
# ::node	0.0.0.1.0.1	all	2-3
# ::node	0.0.1	3	3-4
# ::root	0	promise-01
# ::edge	all	poss	chamber	0.0.0.1.0.1	0.0.0.1.0	
# ::edge	busy	domain	have-org-role-91	0.0.0.1	0.0.0	
# ::edge	candidate	quant	3	0.0	0.0.1	
# ::edge	chamber	mod	busy	0.0.0.1.0	0.0.0.1	
# ::edge	gas	consist	chamber	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	have-org-role-91	ARG0	candidate	0.0.0	0.0	
# ::edge	have-org-role-91	ARG2	governor	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG0	candidate	0	0.0	
(p / promise-01 
      :ARG0 (c2 / candidate 
            :ARG0-of (h / have-org-role-91 
                  :ARG2 (g2 / governor) 
                  :domain-of (b / busy 
                        :mod-of (c / chamber 
                              :consist-of (g / gas) 
                              :poss-of (a / all)))) 
            :quant 3))

# ::snt id promised a policeman my overalls for charity so he got them
# ::tok id promised a policeman my overalls for charity so he got them
# ::alignments 9-10|0.0 8-9|0.3 7-8|0.0.0 3-4|0.1 1-2|0 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:35.776
# ::node	0	promise-01	1-2
# ::node	0.0	he	9-10
# ::node	0.0.0	charity	7-8
# ::node	0.1	policeman	3-4
# ::node	0.2	id	0-1
# ::node	0.3	so	8-9
# ::root	0	promise-01
# ::edge	charity	poss	he	0.0.0	0.0	
# ::edge	promise-01	ARG0	he	0	0.0	
# ::edge	promise-01	ARG1	policeman	0	0.1	
# ::edge	promise-01	time	id	0	0.2	
# ::edge	promise-01	time	so	0	0.3	
(p2 / promise-01 
      :ARG0 (h / he 
            :poss-of (c / charity)) 
      :ARG1 (p / policeman) 
      :time (i / id) 
      :time (s / so))

# ::snt i promise you rain protested
# ::tok i promise you rain protested
# ::alignments 4-5|0.1.1 3-4|0.1 2-3|0.1.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:35.796
# ::node	0	promise-01	1-2
# ::node	0.0	i	0-1
# ::node	0.1	rain-01	3-4
# ::node	0.1.0	you	2-3
# ::node	0.1.1	protest-01	4-5
# ::root	0	promise-01
# ::edge	promise-01	ARG0	i	0	0.0	
# ::edge	promise-01	ARG1	rain-01	0	0.1	
# ::edge	rain-01	ARG0	you	0.1	0.1.0	
# ::edge	rain-01	ARG1	protest-01	0.1	0.1.1	
(p2 / promise-01 
      :ARG0 (i / i) 
      :ARG1 (r / rain-01 
            :ARG0 (y / you) 
            :ARG1 (p / protest-01)))

# ::snt in december 1977 the headmistress of st anselms school in canterbury one of britains leading roman catholic comprehensives allowed a teacher who was a national front candidate to continue in her post alter she had promised that her national front views would not affect her treatment to black pupils
# ::tok in december 1977 the headmistress of st anselms school in canterbury one of britains leading roman catholic comprehensives allowed a teacher who was a national front candidate to continue in her post alter she had promised that her national front views would not affect her treatment to black pupils
# ::alignments 48-49|0.0.0.1 47-48|0.0.0.1.0 45-46|0.0.0.0 43-44|0.0.0 39-40|0.1 38-39|0.2.0.0.0 35-36|0 33-34|0.0 32-33|0.2 31-32|0.2.0 28-29|0.2.0.0 26-27|0.2.0.0.1 25-26|0.2.0.0.1.0 24-25|0.2.0.0.1.1 20-21|0.0.0.0.0.1+0.0.0.0.0 18-19|0.0.0.0.0.0 16-17|0.0.0.0.0.0.0.0.0+0.0.0.0.0.0.0.0+0.0.0.0.0.0.0 14-15|0.0.0.0.0.0.1 8-9|0.0.0.0.0.0.1.0 1-3|0.0.0.0.0.2.0.0+0.0.0.0.0.2+0.0.0.0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:36.499
# ::node	0	promise-01	35-36
# ::node	0.0	she	33-34
# ::node	0.0.0	affect-01	43-44
# ::node	0.0.0.0	treat-03	45-46
# ::node	0.0.0.0.0	person	20-21
# ::node	0.0.0.0.0.0	allow-01	18-19
# ::node	0.0.0.0.0.0.0	religious-group	16-17
# ::node	0.0.0.0.0.0.0.0	name	16-17
# ::node	0.0.0.0.0.0.0.0.0	"Catholic"	16-17
# ::node	0.0.0.0.0.0.1	lead-01	14-15
# ::node	0.0.0.0.0.0.1.0	school	8-9
# ::node	0.0.0.0.0.1	teach-01	20-21
# ::node	0.0.0.0.0.2	12	1-3
# ::node	0.0.0.0.0.2.0	date-entity	1-3
# ::node	0.0.0.0.0.2.0.0	1977	1-3
# ::node	0.0.0.1	pupil	48-49
# ::node	0.0.0.1.0	black	47-48
# ::node	0.1	front	39-40
# ::node	0.2	alter-01	32-33
# ::node	0.2.0	post	31-32
# ::node	0.2.0.0	continue-01	28-29
# ::node	0.2.0.0.0	nation	38-39
# ::node	0.2.0.0.1	candidate	26-27
# ::node	0.2.0.0.1.0	front	25-26
# ::node	0.2.0.0.1.1	nation	24-25
# ::root	0	promise-01
# ::edge	12	poss	person	0.0.0.0.0.2	0.0.0.0.0	
# ::edge	affect-01	ARG0	she	0.0.0	0.0	
# ::edge	affect-01	ARG1	treat-03	0.0.0	0.0.0.0	
# ::edge	affect-01	ARG2	pupil	0.0.0	0.0.0.1	
# ::edge	allow-01	ARG0	person	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	allow-01	ARG1	religious-group	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	allow-01	ARG2	lead-01	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	alter-01	ARG0	post	0.2	0.2.0	
# ::edge	alter-01	ARG1	promise-01	0.2	0	
# ::edge	candidate	mod	front	0.2.0.0.1	0.2.0.0.1.0	
# ::edge	candidate	mod	nation	0.2.0.0.1	0.2.0.0.1.1	
# ::edge	candidate	purpose	continue-01	0.2.0.0.1	0.2.0.0	
# ::edge	continue-01	ARG0	nation	0.2.0.0	0.2.0.0.0	
# ::edge	continue-01	ARG1	post	0.2.0.0	0.2.0	
# ::edge	date-entity	month	12	0.0.0.0.0.2.0	0.0.0.0.0.2	
# ::edge	date-entity	year	1977	0.0.0.0.0.2.0	0.0.0.0.0.2.0.0	
# ::edge	lead-01	ARG1	school	0.0.0.0.0.0.1	0.0.0.0.0.0.1.0	
# ::edge	name	op1	"Catholic"	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0	
# ::edge	promise-01	ARG0	she	0	0.0	
# ::edge	promise-01	ARG1	front	0	0.1	
# ::edge	pupil	mod	black	0.0.0.1	0.0.0.1.0	
# ::edge	religious-group	name	name	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	teach-01	ARG0	person	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	treat-03	ARG1	person	0.0.0.0	0.0.0.0.0	
(p2 / promise-01 
      :ARG0 (s / she 
            :ARG0-of (a / affect-01 
                  :ARG1 (t / treat-03 
                        :ARG1 (p4 / person 
                              :ARG0-of (a3 / allow-01 
                                    :ARG1 (r / religious-group 
                                          :name (n3 / name 
                                                :op1 "Catholic")) 
                                    :ARG2 (l / lead-01 
                                          :ARG1 (s2 / school))) 
                              :ARG0-of (t2 / teach-01) 
                              :poss-of (1 / 12 
                                    :month-of (d / date-entity 
                                          :year 1977)))) 
                  :ARG2 (p / pupil 
                        :mod (b / black)))) 
      :ARG1 (f / front) 
      :ARG1-of (a2 / alter-01 
            :ARG0 (p3 / post 
                  :ARG1-of (c / continue-01 
                        :ARG0 (n / nation) 
                        :purpose-of (c2 / candidate 
                              :mod (f2 / front) 
                              :mod (n2 / nation))))))

# ::snt mr patten promised to help mr burch who had flown 3000 miles from his amazon forest home to meet him at a lunch for british businessmen in sao paulo
# ::tok mr patten promised to help mr burch who had flown 3000 miles from his amazon forest home to meet him at a lunch for british businessmen in sao paulo
# ::alignments 27-29|0.0.0.1.0+0.0.0.1.1+0.0.0.1+0.0.0 25-26|0.0 22-23|0 16-17|0.0.0.0.0.1 15-16|0.0.0.0.0.1.0 11-12|0.0.0.0.0.0.1+0.0.0.0.0.0 10-11|0.0.0.0.0.0.0.0+0.0.0.0.0.0.0 9-10|0.0.0.0.0 4-5|0.0.0.0 2-3|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:36.576
# ::node	0	lunch-01	22-23
# ::node	0.0	businessman	25-26
# ::node	0.0.0	country	27-29
# ::node	0.0.0.0	help-01	4-5
# ::node	0.0.0.0.0	fly-01	9-10
# ::node	0.0.0.0.0.0	distance-quantity	11-12
# ::node	0.0.0.0.0.0.0	date-entity	10-11
# ::node	0.0.0.0.0.0.0.0	3000	10-11
# ::node	0.0.0.0.0.0.1	mile	11-12
# ::node	0.0.0.0.0.1	home	16-17
# ::node	0.0.0.0.0.1.0	forest	15-16
# ::node	0.0.0.0.1	promise-01	2-3
# ::node	0.0.0.1	name	27-29
# ::node	0.0.0.1.0	"paulo"	27-29
# ::node	0.0.0.1.1	"sao"	27-29
# ::root	0	lunch-01
# ::edge	businessman	location	country	0.0	0.0.0	
# ::edge	country	name	name	0.0.0	0.0.0.1	
# ::edge	date-entity	year	3000	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	distance-quantity	quant	date-entity	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	distance-quantity	unit	mile	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	fly-01	ARG1	distance-quantity	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	fly-01	location	home	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	help-01	ARG1	fly-01	0.0.0.0	0.0.0.0.0	
# ::edge	help-01	ARG2	country	0.0.0.0	0.0.0	
# ::edge	home	mod	forest	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	lunch-01	ARG1	businessman	0	0.0	
# ::edge	name	op1	"paulo"	0.0.0.1	0.0.0.1.0	
# ::edge	name	op2	"sao"	0.0.0.1	0.0.0.1.1	
# ::edge	promise-01	ARG1	help-01	0.0.0.0.1	0.0.0.0	
(l / lunch-01 
      :ARG1 (b / businessman 
            :location (c / country 
                  :ARG2-of (h2 / help-01 
                        :ARG1 (f2 / fly-01 
                              :ARG1 (d / distance-quantity 
                                    :quant (d2 / date-entity 
                                          :year 3000) 
                                    :unit (m / mile)) 
                              :location (h / home 
                                    :mod (f / forest))) 
                        :ARG1-of (p / promise-01)) 
                  :name (n / name 
                        :op1 "paulo" 
                        :op2 "sao"))))

# ::snt already michael palin had promised when setting off around the world in 80 days not to pretend he was alone though there must have been some viewers puzzled by his habit of calling his invisible companions passepartout
# ::tok already michael palin had promised when setting off around the world in 80 days not to pretend he was alone though there must have been some viewers puzzled by his habit of calling his invisible companions passepartout
# ::alignments 35-36|0.0 34-35|0.1+0 30-31|0.0.0.2.3.0.0.1 26-27|0.0.0.2.3.0.0.0+0.0.0.2.3.0.0 25-26|0.0.0.2.3.0 19-20|0.0.0.0 17-18|0.0.0.1 16-17|0.0.0 13-14|0.0.0.2.1.0.0.1+0.0.0.2.1.0.0 12-13|0.0.0.2.1.0.0.0 10-11|0.0.0.2.1 8-9|0.0.0.2.1.0 7-8|0.0.0.2.2 6-7|0.0.0.2 4-5|0.0.0.2.3 0-1|0.0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:36.931
# ::node	0	visible	34-35
# ::node	0.0	companion	35-36
# ::node	0.0.0	pretend-01	16-17
# ::node	0.0.0.0	alone	19-20
# ::node	0.0.0.1	he	17-18
# ::node	0.0.0.2	set-02	6-7
# ::node	0.0.0.2.0	already	0-1
# ::node	0.0.0.2.1	world	10-11
# ::node	0.0.0.2.1.0	around	8-9
# ::node	0.0.0.2.1.0.0	temporal-quantity	13-14
# ::node	0.0.0.2.1.0.0.0	80	12-13
# ::node	0.0.0.2.1.0.0.1	day	13-14
# ::node	0.0.0.2.2	off	7-8
# ::node	0.0.0.2.3	promise-01	4-5
# ::node	0.0.0.2.3.0	some	25-26
# ::node	0.0.0.2.3.0.0	person	26-27
# ::node	0.0.0.2.3.0.0.0	view-01	26-27
# ::node	0.0.0.2.3.0.0.1	habit	30-31
# ::node	0.1	-	34-35
# ::root	0	visible
# ::edge	around	op1	world	0.0.0.2.1.0	0.0.0.2.1	
# ::edge	companion	mod	visible	0.0	0	
# ::edge	companion	op1	pretend-01	0.0	0.0.0	
# ::edge	habit	poss	person	0.0.0.2.3.0.0.1	0.0.0.2.3.0.0	
# ::edge	person	quant	some	0.0.0.2.3.0.0	0.0.0.2.3.0	
# ::edge	pretend-01	ARG0	alone	0.0.0	0.0.0.0	
# ::edge	pretend-01	ARG1	he	0.0.0	0.0.0.1	
# ::edge	promise-01	ARG1	some	0.0.0.2.3	0.0.0.2.3.0	
# ::edge	promise-01	time	set-02	0.0.0.2.3	0.0.0.2	
# ::edge	set-02	ARG0	already	0.0.0.2	0.0.0.2.0	
# ::edge	set-02	ARG1	pretend-01	0.0.0.2	0.0.0	
# ::edge	set-02	ARG2	world	0.0.0.2	0.0.0.2.1	
# ::edge	set-02	direction	off	0.0.0.2	0.0.0.2.2	
# ::edge	temporal-quantity	op1	around	0.0.0.2.1.0.0	0.0.0.2.1.0	
# ::edge	temporal-quantity	quant	80	0.0.0.2.1.0.0	0.0.0.2.1.0.0.0	
# ::edge	temporal-quantity	unit	day	0.0.0.2.1.0.0	0.0.0.2.1.0.0.1	
# ::edge	view-01	ARG0	person	0.0.0.2.3.0.0.0	0.0.0.2.3.0.0	
# ::edge	visible	polarity	-	0	0.1	
(v / visible 
      :mod-of (c / companion 
            :op1 (p2 / pretend-01 
                  :ARG0 (a / alone) 
                  :ARG1 (h2 / he) 
                  :ARG1-of (s2 / set-02 
                        :ARG0 (a3 / already) 
                        :ARG2 (w / world 
                              :op-of (a2 / around 
                                    :op-of (t / temporal-quantity 
                                          :quant 80 
                                          :unit (d / day)))) 
                        :direction (o / off) 
                        :time-of (p3 / promise-01 
                              :ARG1 (s / some 
                                    :quant-of (p / person 
                                          :ARG0-of (v2 / view-01) 
                                          :poss-of (h / habit))))))) 
      :polarity -)

# ::snt   the innovations he promises are hardly the kind to set pulses racing more indepth analysis of processes within the party interviews with politburo members after the regular weekly meetings and detailed coverage of developments at the grass roots
# ::tok the innovations he promises are hardly the kind to set pulses racing more indepth analysis of processes within the party interviews with politburo members after the regular weekly meetings and detailed coverage of developments at the grass roots
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:36.931
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt even bulgaria has promised free elections though not yet set a date
# ::tok even bulgaria has promised free elections though not yet set a date
# ::alignments 11-12|0.0 8-9|0.1.0.0 5-6|0.1 4-5|0.1.0 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:36.949
# ::node	0	promise-01	3-4
# ::node	0.0	date	11-12
# ::node	0.1	elect-01	5-6
# ::node	0.1.0	free-41	4-5
# ::node	0.1.0.0	yet	8-9
# ::root	0	promise-01
# ::edge	free-41	ARG1	elect-01	0.1.0	0.1	
# ::edge	free-41	degree	yet	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG0	date	0	0.0	
# ::edge	promise-01	ARG2	elect-01	0	0.1	
(p / promise-01 
      :ARG0 (d / date) 
      :ARG2 (e / elect-01 
            :ARG1-of (f / free-41 
                  :degree (y / yet))))

# ::snt now i have the opportunity ill make the most of it collins promised
# ::tok now i have the opportunity ill make the most of it collins promised
# ::alignments 12-13|0 10-11|0.2 8-9|0.1 5-6|0.1.0 4-5|0.1.0.0 1-2|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:37.015
# ::node	0	promise-01	12-13
# ::node	0.0	i	1-2
# ::node	0.0.0	now	0-1
# ::node	0.1	most	8-9
# ::node	0.1.0	ill-41	5-6
# ::node	0.1.0.0	opportunity	4-5
# ::node	0.2	it	10-11
# ::root	0	promise-01
# ::edge	i	mod	now	0.0	0.0.0	
# ::edge	ill-41	ARG0	opportunity	0.1.0	0.1.0.0	
# ::edge	ill-41	ARG1	most	0.1.0	0.1	
# ::edge	promise-01	ARG0	i	0	0.0	
# ::edge	promise-01	ARG1	most	0	0.1	
# ::edge	promise-01	ARG2	it	0	0.2	
(p / promise-01 
      :ARG0 (i3 / i 
            :mod (n / now)) 
      :ARG1 (m / most 
            :ARG1-of (i2 / ill-41 
                  :ARG0 (o / opportunity))) 
      :ARG2 (i / it))

# ::snt less than two months ago the regional health authority promised 335000 for the project
# ::tok less than two months ago the regional health authority promised 335000 for the project
# ::alignments 13-14|0.2 10-11|0.3.2+0.3.1+0.3.0+0.3 9-10|0 8-9|0.1 7-8|0.1.0 6-7|0.1.0.0 3-4|0.0.2+0.0 2-3|0.0.1 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:37.172
# ::node	0	promise-01	9-10
# ::node	0.0	temporal-quantity	3-4
# ::node	0.0.0	less	0-1
# ::node	0.0.1	2	2-3
# ::node	0.0.2	month	3-4
# ::node	0.1	authority	8-9
# ::node	0.1.0	health	7-8
# ::node	0.1.0.0	region	6-7
# ::node	0.2	project	13-14
# ::node	0.3	date-entity	10-11
# ::node	0.3.0	0	10-11
# ::node	0.3.1	50	10-11
# ::node	0.3.2	33	10-11
# ::root	0	promise-01
# ::edge	authority	mod	health	0.1	0.1.0	
# ::edge	date-entity	day	0	0.3	0.3.0	
# ::edge	date-entity	month	50	0.3	0.3.1	
# ::edge	date-entity	year	33	0.3	0.3.2	
# ::edge	health	mod	region	0.1.0	0.1.0.0	
# ::edge	less	op1	temporal-quantity	0.0.0	0.0	
# ::edge	promise-01	ARG0	temporal-quantity	0	0.0	
# ::edge	promise-01	ARG1	authority	0	0.1	
# ::edge	promise-01	location	project	0	0.2	
# ::edge	promise-01	time	date-entity	0	0.3	
# ::edge	temporal-quantity	quant	2	0.0	0.0.1	
# ::edge	temporal-quantity	unit	month	0.0	0.0.2	
(p2 / promise-01 
      :ARG0 (t / temporal-quantity 
            :op-of (l / less) 
            :quant 2 
            :unit (m / month)) 
      :ARG1 (a / authority 
            :mod (h / health 
                  :mod (r / region))) 
      :location (p / project) 
      :time (d / date-entity 
            :day 0 
            :month 50 
            :year 33))

# ::snt apparently he promised not to attack douglas hurd personally but then quotes stitched him up and hung him out to dry over the classlessness thing
# ::tok apparently he promised not to attack douglas hurd personally but then quotes stitched him up and hung him out to dry over the classlessness thing
# ::alignments 24-25|0.1.0.1.0.0 20-21|0.1.0.1.0 16-17|0.1.0.1 15-16|0.1.0.1.1 11-12|0.2 10-11|0.2.0 9-10|0 8-9|0.0 5-6|0.1 2-3|0.1.0.0 1-2|0.1.0 0-1|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:37.279
# ::node	0	contrast-01	9-10
# ::node	0.0	personal	8-9
# ::node	0.1	attack-01	5-6
# ::node	0.1.0	he	1-2
# ::node	0.1.0.0	promise-01	2-3
# ::node	0.1.0.0.0	apparent	0-1
# ::node	0.1.0.1	hang-04	16-17
# ::node	0.1.0.1.0	dry-02	20-21
# ::node	0.1.0.1.0.0	thing	24-25
# ::node	0.1.0.1.1	and	15-16
# ::node	0.2	quote-01	11-12
# ::node	0.2.0	then	10-11
# ::root	0	contrast-01
# ::edge	and	op1	hang-04	0.1.0.1.1	0.1.0.1	
# ::edge	attack-01	ARG0	he	0.1	0.1.0	
# ::edge	attack-01	ARG1	contrast-01	0.1	0	
# ::edge	contrast-01	ARG1	personal	0	0.0	
# ::edge	contrast-01	ARG2	quote-01	0	0.2	
# ::edge	dry-02	ARG1	thing	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	hang-04	ARG0	he	0.1.0.1	0.1.0	
# ::edge	hang-04	ARG4	dry-02	0.1.0.1	0.1.0.1.0	
# ::edge	promise-01	ARG0	he	0.1.0.0	0.1.0	
# ::edge	promise-01	time	apparent	0.1.0.0	0.1.0.0.0	
# ::edge	quote-01	ARG0	then	0.2	0.2.0	
(c / contrast-01 
      :ARG1 (p / personal) 
      :ARG1-of (a2 / attack-01 
            :ARG0 (h2 / he 
                  :ARG0-of (p2 / promise-01 
                        :time (a3 / apparent)) 
                  :ARG0-of (h / hang-04 
                        :ARG4 (d / dry-02 
                              :ARG1 (t / thing)) 
                        :op-of (a / and)))) 
      :ARG2 (q / quote-01 
            :ARG0 (t2 / then)))

# ::snt in homer agamemnon excuses his behaviour by pointing to the action of ate on his mind but it does not occur to him to deny his responsibility or to shuffle out of paying the enormous compensation which he has promised to achilles
# ::tok in homer agamemnon excuses his behaviour by pointing to the action of ate on his mind but it does not occur to him to deny his responsibility or to shuffle out of paying the enormous compensation which he has promised to achilles
# ::alignments 39-40|0.1.1.0.0.0 37-38|0.1.1.0.0 35-36|0.1.1.0.0.0.0 34-35|0.1.1.0.0.0.0.1 32-33|0.1.1.0.0.0.0.0 27-28|0.1.1.1 26-27|0.1.1.0 24-25|0.1.1 20-21|0.1 17-18|0.1.0 16-17|0 15-16|0.0.2 10-11|0.0.0 7-8|0.0 5-6|0.0.1.0 3-4|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:37.498
# ::node	0	contrast-01	16-17
# ::node	0.0	point-02	7-8
# ::node	0.0.0	action	10-11
# ::node	0.0.1	excuse-01	3-4
# ::node	0.0.1.0	behave-01	5-6
# ::node	0.0.2	mind	15-16
# ::node	0.1	occur-01	20-21
# ::node	0.1.0	it	17-18
# ::node	0.1.1	deny-01	24-25
# ::node	0.1.1.0	responsible-41	26-27
# ::node	0.1.1.0.0	he	37-38
# ::node	0.1.1.0.0.0	promise-01	39-40
# ::node	0.1.1.0.0.0.0	compensate-01	35-36
# ::node	0.1.1.0.0.0.0.0	pay-01	32-33
# ::node	0.1.1.0.0.0.0.1	enormous	34-35
# ::node	0.1.1.1	or	27-28
# ::root	0	contrast-01
# ::edge	compensate-01	mod	enormous	0.1.1.0.0.0.0	0.1.1.0.0.0.0.1	
# ::edge	contrast-01	ARG2	occur-01	0	0.1	
# ::edge	deny-01	ARG1	responsible-41	0.1.1	0.1.1.0	
# ::edge	excuse-01	ARG1	behave-01	0.0.1	0.0.1.0	
# ::edge	excuse-01	manner	point-02	0.0.1	0.0	
# ::edge	occur-01	ARG0	it	0.1	0.1.0	
# ::edge	occur-01	ARG1	deny-01	0.1	0.1.1	
# ::edge	or	op1	deny-01	0.1.1.1	0.1.1	
# ::edge	pay-01	ARG1	compensate-01	0.1.1.0.0.0.0.0	0.1.1.0.0.0.0	
# ::edge	point-02	ARG1	contrast-01	0.0	0	
# ::edge	point-02	ARG2	action	0.0	0.0.0	
# ::edge	point-02	prep-with	mind	0.0	0.0.2	
# ::edge	promise-01	ARG0	he	0.1.1.0.0.0	0.1.1.0.0	
# ::edge	promise-01	ARG1	compensate-01	0.1.1.0.0.0	0.1.1.0.0.0.0	
# ::edge	responsible-41	ARG1	he	0.1.1.0	0.1.1.0.0	
(c2 / contrast-01 
      :ARG1-of (p3 / point-02 
            :ARG2 (a / action) 
            :manner-of (e2 / excuse-01 
                  :ARG1 (b / behave-01)) 
            :prep-with (m / mind)) 
      :ARG2 (o2 / occur-01 
            :ARG0 (i / it) 
            :ARG1 (d / deny-01 
                  :ARG1 (r / responsible-41 
                        :ARG1 (h / he 
                              :ARG0-of (p / promise-01 
                                    :ARG1 (c / compensate-01 
                                          :ARG1-of (p2 / pay-01) 
                                          :mod (e / enormous))))) 
                  :op-of (o / or))))

# ::snt deputy hospital general manager mr seamus mannion promised that the money would go towards a play area for children on level four
# ::tok deputy hospital general manager mr seamus mannion promised that the money would go towards a play area for children on level four
# ::alignments 21-22|0.0.0.0 20-21|0.0.1 18-19|0.0.1.0 16-17|0.0.1.0.0 15-16|0.0.1.0.0.0 10-11|0.0 7-8|0 3-4|0.0.0 2-3|0.0.1.0.0.0.0 1-2|0.0.0.1 0-1|0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:37.575
# ::node	0	promise-01	7-8
# ::node	0.0	money	10-11
# ::node	0.0.0	manage-01	3-4
# ::node	0.0.0.0	4	21-22
# ::node	0.0.0.1	hospital	1-2
# ::node	0.0.0.1.0	deputy	0-1
# ::node	0.0.1	level	20-21
# ::node	0.0.1.0	child	18-19
# ::node	0.0.1.0.0	area	16-17
# ::node	0.0.1.0.0.0	play-01	15-16
# ::node	0.0.1.0.0.0.0	general	2-3
# ::root	0	promise-01
# ::edge	area	mod	child	0.0.1.0.0	0.0.1.0	
# ::edge	area	purpose	play-01	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	child	location	level	0.0.1.0	0.0.1	
# ::edge	hospital	mod	deputy	0.0.0.1	0.0.0.1.0	
# ::edge	hospital	mod	manage-01	0.0.0.1	0.0.0	
# ::edge	level	poss	money	0.0.1	0.0	
# ::edge	manage-01	ARG0	4	0.0.0	0.0.0.0	
# ::edge	manage-01	ARG1	money	0.0.0	0.0	
# ::edge	play-01	ARG0	general	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	promise-01	ARG0	money	0	0.0	
(p2 / promise-01 
      :ARG0 (m / money 
            :ARG1-of (m2 / manage-01 
                  :ARG0 4 
                  :mod-of (h / hospital 
                        :mod (d / deputy))) 
            :poss-of (l / level 
                  :location-of (c / child 
                        :mod-of (a / area 
                              :purpose (p / play-01 
                                    :ARG0 (g / general)))))))

# ::snt on 19 august kitchener sent the fifth division to france on 1 september when french lost his nerve kitchener promised to send the sixth also
# ::tok on 19 august kitchener sent the fifth division to france on 1 september when french lost his nerve kitchener promised to send the sixth also
# ::alignments 24-25|0.0.0.0.1.1 21-22|0.0.0.0.1 19-20|0.0.0.0 17-18|0 15-16|0.0 14-15|0.0.0.1.0+0.0.0.1+0.0.0 12-13|0.0.0.0.0.0+0.0.0.0.0 11-12|0.0.0.0.1.0 9-10|0.0.0.0.0.1.1.0.0+0.0.0.0.0.1.1.0+0.0.0.0.0.1.1 7-8|0.0.0.0.0.1.0 4-5|0.0.0.0.0.1 2-3|0.0.1.0+0.0.1 1-2|0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:37.889
# ::node	0	nerve	17-18
# ::node	0.0	lose-02	15-16
# ::node	0.0.0	country	14-15
# ::node	0.0.0.0	promise-01	19-20
# ::node	0.0.0.0.0	date-entity	12-13
# ::node	0.0.0.0.0.0	9	12-13
# ::node	0.0.0.0.0.1	send-01	4-5
# ::node	0.0.0.0.0.1.0	division	7-8
# ::node	0.0.0.0.0.1.1	country	9-10
# ::node	0.0.0.0.0.1.1.0	name	9-10
# ::node	0.0.0.0.0.1.1.0.0	"France"	9-10
# ::node	0.0.0.0.1	send-01	21-22
# ::node	0.0.0.0.1.0	1	11-12
# ::node	0.0.0.0.1.1	also	24-25
# ::node	0.0.0.1	name	14-15
# ::node	0.0.0.1.0	"France"	14-15
# ::node	0.0.1	date-entity	2-3
# ::node	0.0.1.0	8	2-3
# ::node	0.0.1.1	19	1-2
# ::root	0	nerve
(n / nerve 
      :ARG1-of (l / lose-02 
            :ARG0 (c / country 
                  :ARG0-of (p / promise-01 
                        :ARG1 (d / date-entity 
                              :month 9 
                              :time-of (s2 / send-01 
                                    :ARG1 (d2 / division) 
                                    :purpose (c2 / country 
                                          :name (n3 / name 
                                                :op1 "France")))) 
                        :ARG2 (s / send-01 
                              :ARG1 1 
                              :mod (a / also))) 
                  :name (n2 / name 
                        :op1 "France")) 
            :time (d3 / date-entity 
                  :month 8 
                  :quant 19)))

# ::snt it follows that peoples interest in being able to bind themselves is the basis of a power to promise which they possess and of an obligation to keep promises they make, but neither the power nor the obligation point to a right to promise, the right exists because the very same interest on which the power to promise and the duty to keep promises are based is also the ground for holding others to be subject to a duty not to interfere with ones promising
# ::tok it follows that peoples interest in being able to bind themselves is the basis of a power to promise which they possess and of an obligation to keep promises they make , but neither the power nor the obligation point to a right to promise , the right exists because the very same interest on which the power to promise and the duty to keep promises are based is also the ground for holding others to be subject to a duty not to interfere with ones promising
# ::alignments 86-87|0.0.1.0.3.6.0.2.1.0 85-86|0.0.1.0.3.6.0.2.1 83-84|0.0.1.0.3.6.0.2 80-81|0.0.1.0.3.6.0.2.0 77-78|0.0.1.0.3.6.0.2.0.0 74-75|0.0.1.0.3.6.0.1 73-74|0.0.1.0.3.6.0 71-72|0.0.1.0.3.6 69-70|0.0.1.0.3.6.0.0 67-68|0.0.1.0.3.0 65-66|0.0.1.0.3.0.0 62-63|0.0.1.0.3.5 60-61|0.0.1.0.3 59-60|0.0.1.0.3.4.0 57-58|0.0.1.0.3.4 53-54|0.0.1.0.3.4.0.0 52-53|0.0.1.0.3.4.0.0.0 51-52|0.0.1.0.3.4.0.0.0.0 49-50|0.0.1.0.2 48-49|0.0.1.0 44-45|0.0.1.0.3.1 39-40|0.0.1.0.3.3 38-39|0.0.1.0.3.4.0.1 35-36|0.0.1.0.3.2 32-33|0.0.1 29-30|0.0.1.0.1 28-29|0.0 25-26|0 22-23|0.0.1.0.2.0 21-22|0.0.1.0.2.0.0 20-21|0.0.1.0.2.0.0.0 18-19|0.0.1.0.2.0.0.1 16-17|0.0.1.0.2.0.0.1.0 7-8|0.0.0.0 4-5|0.0.0 3-4|0.0.0.1 0-1|0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:40.279
# ::node	0	obligate-01	25-26
# ::node	0.0	promise-01	28-29
# ::node	0.0.0	interest-01	4-5
# ::node	0.0.0.0	possible	7-8
# ::node	0.0.0.1	people	3-4
# ::node	0.0.1	contrast-01	32-33
# ::node	0.0.1.0	exist-01	48-49
# ::node	0.0.1.0.0	it	0-1
# ::node	0.0.1.0.1	they	29-30
# ::node	0.0.1.0.2	cause-01	49-50
# ::node	0.0.1.0.2.0	and	22-23
# ::node	0.0.1.0.2.0.0	possess-01	21-22
# ::node	0.0.1.0.2.0.0.0	they	20-21
# ::node	0.0.1.0.2.0.0.1	promise-01	18-19
# ::node	0.0.1.0.2.0.0.1.0	power	16-17
# ::node	0.0.1.0.3	and	60-61
# ::node	0.0.1.0.3.0	base-01	67-68
# ::node	0.0.1.0.3.0.0	promise-01	65-66
# ::node	0.0.1.0.3.1	promise-01	44-45
# ::node	0.0.1.0.3.2	power	35-36
# ::node	0.0.1.0.3.3	point	39-40
# ::node	0.0.1.0.3.4	power	57-58
# ::node	0.0.1.0.3.4.0	promise-01	59-60
# ::node	0.0.1.0.3.4.0.0	interest-01	53-54
# ::node	0.0.1.0.3.4.0.0.0	same-41	52-53
# ::node	0.0.1.0.3.4.0.0.0.0	very	51-52
# ::node	0.0.1.0.3.4.0.1	obligate-01	38-39
# ::node	0.0.1.0.3.5	duty	62-63
# ::node	0.0.1.0.3.6	ground	71-72
# ::node	0.0.1.0.3.6.0	hold-01	73-74
# ::node	0.0.1.0.3.6.0.0	also	69-70
# ::node	0.0.1.0.3.6.0.1	other	74-75
# ::node	0.0.1.0.3.6.0.2	interfere-01	83-84
# ::node	0.0.1.0.3.6.0.2.0	duty	80-81
# ::node	0.0.1.0.3.6.0.2.0.0	subject	77-78
# ::node	0.0.1.0.3.6.0.2.1	one	85-86
# ::node	0.0.1.0.3.6.0.2.1.0	promise-01	86-87
# ::root	0	obligate-01
(o4 / obligate-01 
      :ARG1-of (p8 / promise-01 
            :ARG0 (i3 / interest-01 
                  :ARG0 (p12 / possible) 
                  :ARG1 (p13 / people)) 
            :ARG1-of (c2 / contrast-01 
                  :ARG2 (e / exist-01 
                        :ARG0 (i4 / it) 
                        :ARG1 (t / they) 
                        :ARG1-of (c / cause-01 
                              :ARG0 (a3 / and 
                                    :op1 (p9 / possess-01 
                                          :ARG0 (t2 / they) 
                                          :ARG1-of (p10 / promise-01 
                                                :ARG0 (p11 / power))))) 
                        :op-of (a2 / and 
                              :ARG0-of (b / base-01 
                                    :ARG1 (p2 / promise-01)) 
                              :ARG0-of (p5 / promise-01) 
                              :op1 (p7 / power) 
                              :op2 (p6 / point) 
                              :op3 (p4 / power 
                                    :ARG0-of (p3 / promise-01 
                                          :ARG1 (i2 / interest-01 
                                                :ARG1-of (s2 / same-41 
                                                      :degree (v / very))) 
                                          :ARG1-of (o3 / obligate-01))) 
                              :op4 (d2 / duty) 
                              :op5 (g / ground 
                                    :topic (h / hold-01 
                                          :ARG0 (a / also) 
                                          :ARG1 (o2 / other) 
                                          :purpose (i / interfere-01 
                                                :ARG0 (d / duty 
                                                      :prep-to-of (s / subject)) 
                                                :ARG1 (o / one 
                                                      :ARG1-of (p / promise-01))))))))))

# ::snt the egyptian president hosni mubarak and the libyan leader muammar gaddafi enemies for years promised yesterday to respect each others laws security and stability
# ::tok the egyptian president hosni mubarak and the libyan leader muammar gaddafi enemies for years promised yesterday to respect each others laws security and stability
# ::alignments 23-24|0.2 22-23|0 21-22|0.1 20-21|0.0.0.1 19-20|0.0.0.1.0 18-19|0.1.0 17-18|0.0.0 15-16|0.0.1 14-15|0.0 13-14|0.0.0.0.0+0.0.0.0 11-12|0.0.0.2.0.1.0+0.0.0.2.0.1 8-9|0.0.0.2.1.0+0.0.0.2.1 5-6|0.0.0.2 3-5|0.0.0.2.0.2.0+0.0.0.2.0.2.1+0.0.0.2.0.2+0.0.0.2.0 2-3|0.0.0.2.0.0.0+0.0.0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:41.183
# ::node	0	and	22-23
# ::node	0.0	promise-01	14-15
# ::node	0.0.0	respect-01	17-18
# ::node	0.0.0.0	temporal-quantity	13-14
# ::node	0.0.0.0.0	year	13-14
# ::node	0.0.0.1	law	20-21
# ::node	0.0.0.1.0	other	19-20
# ::node	0.0.0.2	and	5-6
# ::node	0.0.0.2.0	person	3-5
# ::node	0.0.0.2.0.0	have-org-role-91	2-3
# ::node	0.0.0.2.0.0.0	president	2-3
# ::node	0.0.0.2.0.1	have-rel-role-91	11-12
# ::node	0.0.0.2.0.1.0	enemy	11-12
# ::node	0.0.0.2.0.2	name	3-5
# ::node	0.0.0.2.0.2.0	"mubarak"	3-5
# ::node	0.0.0.2.0.2.1	"hosni"	3-5
# ::node	0.0.0.2.1	person	8-9
# ::node	0.0.0.2.1.0	lead-02	8-9
# ::node	0.0.1	yesterday	15-16
# ::node	0.1	security	21-22
# ::node	0.1.0	each	18-19
# ::node	0.2	stability	23-24
# ::root	0	and
# ::edge	and	op1	person	0.0.0.2	0.0.0.2.0	
# ::edge	and	op1	security	0	0.1	
# ::edge	and	op2	person	0.0.0.2	0.0.0.2.1	
# ::edge	and	op2	stability	0	0.2	
# ::edge	and	op3	respect-01	0.0.0.2	0.0.0	
# ::edge	have-org-role-91	ARG0	person	0.0.0.2.0.0	0.0.0.2.0	
# ::edge	have-org-role-91	ARG2	president	0.0.0.2.0.0	0.0.0.2.0.0.0	
# ::edge	have-rel-role-91	ARG1	person	0.0.0.2.0.1	0.0.0.2.0	
# ::edge	have-rel-role-91	ARG2	enemy	0.0.0.2.0.1	0.0.0.2.0.1.0	
# ::edge	law	mod	other	0.0.0.1	0.0.0.1.0	
# ::edge	lead-02	ARG0	person	0.0.0.2.1.0	0.0.0.2.1	
# ::edge	name	op1	"mubarak"	0.0.0.2.0.2	0.0.0.2.0.2.0	
# ::edge	name	op2	"hosni"	0.0.0.2.0.2	0.0.0.2.0.2.1	
# ::edge	person	name	name	0.0.0.2.0	0.0.0.2.0.2	
# ::edge	promise-01	ARG1	respect-01	0.0	0.0.0	
# ::edge	promise-01	ARG2	and	0.0	0	
# ::edge	promise-01	time	yesterday	0.0	0.0.1	
# ::edge	respect-01	ARG0	temporal-quantity	0.0.0	0.0.0.0	
# ::edge	respect-01	ARG1	law	0.0.0	0.0.0.1	
# ::edge	security	mod	each	0.1	0.1.0	
# ::edge	temporal-quantity	unit	year	0.0.0.0	0.0.0.0.0	
(a / and 
      :ARG2-of (p / promise-01 
            :ARG1 (r / respect-01 
                  :ARG0 (t / temporal-quantity 
                        :unit (y2 / year)) 
                  :ARG1 (l / law 
                        :mod (o / other)) 
                  :op-of (a2 / and 
                        :op1 (p3 / person 
                              :ARG0-of (h2 / have-org-role-91 
                                    :ARG2 (p4 / president)) 
                              :ARG1-of (h / have-rel-role-91 
                                    :ARG2 (e2 / enemy)) 
                              :name (n / name 
                                    :op1 "mubarak" 
                                    :op2 "hosni")) 
                        :op2 (p2 / person 
                              :ARG0-of (l2 / lead-02)))) 
            :time (y / yesterday)) 
      :op1 (s2 / security 
            :mod (e / each)) 
      :op2 (s / stability))

# ::snt   for three nights rain went to the nightclub an accommodating barmaid promising to point out drummond
# ::tok for three nights rain went to the nightclub an accommodating barmaid promising to point out drummond
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:41.184
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the evident commitment of the 11 to the project virtually ensures that the strasbourg summit on 8 and 9 december will end with margaret thatcher being formally outvoted on what promises to be a central plank of community policy in the next decade
# ::tok the evident commitment of the 11 to the project virtually ensures that the strasbourg summit on 8 and 9 december will end with margaret thatcher being formally outvoted on what promises to be a central plank of community policy in the next decade
# ::alignments 42-43|0.1.0.0+0.1.0 41-42|0.1.0.0.0 38-39|0.3 37-38|0.3.0 34-35|0.1.1 30-31|0.1 26-27|0.0.2 19-20|0.4.0+0.4 18-19|0.0.0 17-18|0 16-17|0.0.3 14-15|0.4.1 9-10|0.1.2 8-9|0.2 5-6|0.0.4 2-3|0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:41.481
# ::node	0	and	17-18
# ::node	0.0	commit-01	2-3
# ::node	0.0.0	9	18-19
# ::node	0.0.1	evident	1-2
# ::node	0.0.2	formal	26-27
# ::node	0.0.3	8	16-17
# ::node	0.0.4	11	5-6
# ::node	0.1	promise-01	30-31
# ::node	0.1.0	temporal-quantity	42-43
# ::node	0.1.0.0	decade	42-43
# ::node	0.1.0.0.0	next	41-42
# ::node	0.1.1	central	34-35
# ::node	0.1.2	virtual	9-10
# ::node	0.2	project	8-9
# ::node	0.3	policy	38-39
# ::node	0.3.0	community	37-38
# ::node	0.4	date-entity	19-20
# ::node	0.4.0	12	19-20
# ::node	0.4.1	summit	14-15
# ::root	0	and
# ::edge	8	op1	commit-01	0.0.3	0.0	
# ::edge	and	op1	project	0	0.2	
# ::edge	and	op2	policy	0	0.3	
# ::edge	and	time	date-entity	0	0.4	
# ::edge	commit-01	ARG0	9	0.0	0.0.0	
# ::edge	commit-01	ARG1	and	0.0	0	
# ::edge	commit-01	mod	evident	0.0	0.0.1	
# ::edge	commit-01	time	11	0.0	0.0.4	
# ::edge	date-entity	month	12	0.4	0.4.0	
# ::edge	decade	mod	next	0.1.0.0	0.1.0.0.0	
# ::edge	formal	op1	commit-01	0.0.2	0.0	
# ::edge	policy	mod	community	0.3	0.3.0	
# ::edge	promise-01	ARG0	temporal-quantity	0.1	0.1.0	
# ::edge	promise-01	ARG1	central	0.1	0.1.1	
# ::edge	promise-01	ARG2	and	0.1	0	
# ::edge	summit	time	date-entity	0.4.1	0.4	
# ::edge	temporal-quantity	unit	decade	0.1.0	0.1.0.0	
# ::edge	virtual	op1	promise-01	0.1.2	0.1	
(a / and 
      :ARG1-of (c3 / commit-01 
            :ARG0 9 
            :mod (e / evident) 
            :op-of (f / formal) 
            :op-of 8 
            :time 11) 
      :ARG2-of (p2 / promise-01 
            :ARG0 (t / temporal-quantity 
                  :unit (d / decade 
                        :mod (n / next))) 
            :ARG1 (c2 / central) 
            :op-of (v / virtual)) 
      :op1 (p3 / project) 
      :op2 (p / policy 
            :mod (c / community)) 
      :time (d2 / date-entity 
            :month 12 
            :time-of (s / summit)))

# ::snt she must he thought as he crossed the thames by chelsea bridge be used to men who were smarter wittier and certainly taller than he men with more time to court her able to offer her participation in their useful lives promising untroubled committed relationships not the public ordeal which was all his company implied
# ::tok she must he thought as he crossed the thames by chelsea bridge be used to men who were smarter wittier and certainly taller than he men with more time to court her able to offer her participation in their useful lives promising untroubled committed relationships not the public ordeal which was all his company implied
# ::alignments 54-55|0.1.0.0.0.0 53-54|0.1.0.0.0 51-52|0.1.0.0.0.0.0 48-49|0.1.0.0.1.0.0 47-48|0.1.0.0.1.0 44-45|0.0.0.1.0 43-44|0.0.0.1.0.0 41-42|0.0.0.1 40-41|0.1.0.0.1.1 39-40|0.1.0.0.1.1.0 36-37|0.1.0.0.1 34-35|0.1.0.0 32-33|0.1.0 30-31|0.1 28-29|0.1.1 25-26|0.1.1.0 24-25|0.1.1.0.0 21-22|0.0.0.0.0 20-21|0 15-16|0.0.0.0.1 13-14|0.0.0.0 11-12|0.0.1 6-7|0.0 5-6|0.0.0 3-4|0.0.2 2-3|0.0.2.0 0-1|0.0.2.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:42.776
# ::node	0	and	20-21
# ::node	0.0	cross-00	6-7
# ::node	0.0.0	he	5-6
# ::node	0.0.0.0	use-01	13-14
# ::node	0.0.0.0.0	certain	21-22
# ::node	0.0.0.0.1	man	15-16
# ::node	0.0.0.1	promise-01	41-42
# ::node	0.0.0.1.0	relationship	44-45
# ::node	0.0.0.1.0.0	commit-01	43-44
# ::node	0.0.1	bridge	11-12
# ::node	0.0.2	think-01	3-4
# ::node	0.0.2.0	he	2-3
# ::node	0.0.2.1	she	0-1
# ::node	0.1	court	30-31
# ::node	0.1.0	possible	32-33
# ::node	0.1.0.0	offer-01	34-35
# ::node	0.1.0.0.0	company	53-54
# ::node	0.1.0.0.0.0	imply-01	54-55
# ::node	0.1.0.0.0.0.0	all	51-52
# ::node	0.1.0.0.1	participate-01	36-37
# ::node	0.1.0.0.1.0	public	47-48
# ::node	0.1.0.0.1.0.0	ordeal	48-49
# ::node	0.1.0.0.1.1	life	40-41
# ::node	0.1.0.0.1.1.0	useful	39-40
# ::node	0.1.1	time	28-29
# ::node	0.1.1.0	man	25-26
# ::node	0.1.1.0.0	he	24-25
# ::root	0	and
# ::edge	and	condition	cross-00	0	0.0	
# ::edge	and	op1	court	0	0.1	
# ::edge	commit-01	ARG1	relationship	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	court	purpose	possible	0.1	0.1.0	
# ::edge	cross-00	ARG0	he	0.0	0.0.0	
# ::edge	cross-00	ARG1	bridge	0.0	0.0.1	
# ::edge	he	mod	man	0.1.1.0.0	0.1.1.0	
# ::edge	imply-01	ARG0	company	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	imply-01	quant	all	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	life	mod	useful	0.1.0.0.1.1	0.1.0.0.1.1.0	
# ::edge	man	time	time	0.1.1.0	0.1.1	
# ::edge	offer-01	ARG0	company	0.1.0.0	0.1.0.0.0	
# ::edge	offer-01	ARG1	participate-01	0.1.0.0	0.1.0.0.1	
# ::edge	ordeal	mod	public	0.1.0.0.1.0.0	0.1.0.0.1.0	
# ::edge	participate-01	ARG0	public	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	participate-01	ARG1	life	0.1.0.0.1	0.1.0.0.1.1	
# ::edge	possible	domain	offer-01	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG0	he	0.0.0.1	0.0.0	
# ::edge	promise-01	ARG1	relationship	0.0.0.1	0.0.0.1.0	
# ::edge	think-01	ARG0	he	0.0.2	0.0.2.0	
# ::edge	think-01	ARG1	she	0.0.2	0.0.2.1	
# ::edge	think-01	time	cross-00	0.0.2	0.0	
# ::edge	time	purpose	court	0.1.1	0.1	
# ::edge	use-01	ARG0	he	0.0.0.0	0.0.0	
# ::edge	use-01	ARG1	certain	0.0.0.0	0.0.0.0.0	
# ::edge	use-01	ARG2	man	0.0.0.0	0.0.0.0.1	
(a2 / and 
      :condition (c5 / cross-00 
            :ARG0 (h2 / he 
                  :ARG0-of (u2 / use-01 
                        :ARG1 (c4 / certain) 
                        :ARG2 (m2 / man)) 
                  :ARG0-of (p2 / promise-01 
                        :ARG1 (r / relationship 
                              :ARG1-of (c2 / commit-01)))) 
            :ARG1 (b / bridge) 
            :time-of (t2 / think-01 
                  :ARG0 (h3 / he) 
                  :ARG1 (s / she))) 
      :op1 (c3 / court 
            :purpose (p4 / possible 
                  :domain (o2 / offer-01 
                        :ARG0 (c / company 
                              :ARG0-of (i / imply-01 
                                    :quant (a / all))) 
                        :ARG1 (p3 / participate-01 
                              :ARG0 (p / public 
                                    :mod-of (o / ordeal)) 
                              :ARG1 (l / life 
                                    :mod (u / useful))))) 
            :purpose-of (t / time 
                  :time-of (m / man 
                        :mod-of (h / he)))))

# ::snt the abolition of dutyfree facilities between european states and the threat to impose vat on tickets would lead to dearer fares not cheaper ones which the ec had promised would be a direct result of liberalisation he said
# ::tok the abolition of dutyfree facilities between european states and the threat to impose vat on tickets would lead to dearer fares not cheaper ones which the ec had promised would be a direct result of liberalisation he said
# ::alignments 37-38|0 36-37|0.0 33-34|0.2 32-33|0.2.1 28-29|0.2.0.0 23-24|0.2.0 22-23|0.2.0.1 20-21|0.2.0.1.0 15-16|0.1.0.0.0 13-14|0.1.0.0 12-13|0.1.0 10-11|0.1.0.1 8-9|0.1 7-8|0.1.0.1.0.1 6-7|0.1.0.1.0.0.0.0.0.0+0.1.0.1.0.0.0.0.0+0.1.0.1.0.0.0.0 5-6|0.1.0.1.0 4-5|0.1.0.1.0.0 1-2|0.1.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:42.977
# ::node	0	say-01	37-38
# ::node	0.0	he	36-37
# ::node	0.1	and	8-9
# ::node	0.1.0	impose-01	12-13
# ::node	0.1.0.0	vat	13-14
# ::node	0.1.0.0.0	ticket	15-16
# ::node	0.1.0.1	threaten-01	10-11
# ::node	0.1.0.1.0	between	5-6
# ::node	0.1.0.1.0.0	facility	4-5
# ::node	0.1.0.1.0.0.0	abolish-01	1-2
# ::node	0.1.0.1.0.0.0.0	continent	6-7
# ::node	0.1.0.1.0.0.0.0.0	name	6-7
# ::node	0.1.0.1.0.0.0.0.0.0	"Europe"	6-7
# ::node	0.1.0.1.0.1	state	7-8
# ::node	0.2	result-01	33-34
# ::node	0.2.0	one	23-24
# ::node	0.2.0.0	promise-01	28-29
# ::node	0.2.0.1	cheap	22-23
# ::node	0.2.0.1.0	fare	20-21
# ::node	0.2.1	direct	32-33
# ::root	0	say-01
# ::edge	abolish-01	ARG1	facility	0.1.0.1.0.0.0	0.1.0.1.0.0	
# ::edge	abolish-01	location	continent	0.1.0.1.0.0.0	0.1.0.1.0.0.0.0	
# ::edge	between	op1	state	0.1.0.1.0	0.1.0.1.0.1	
# ::edge	between	op2	threaten-01	0.1.0.1.0	0.1.0.1	
# ::edge	cheap	domain	fare	0.2.0.1	0.2.0.1.0	
# ::edge	continent	name	name	0.1.0.1.0.0.0.0	0.1.0.1.0.0.0.0.0	
# ::edge	facility	location	between	0.1.0.1.0.0	0.1.0.1.0	
# ::edge	impose-01	ARG0	and	0.1.0	0.1	
# ::edge	impose-01	ARG1	vat	0.1.0	0.1.0.0	
# ::edge	name	op1	"Europe"	0.1.0.1.0.0.0.0.0	0.1.0.1.0.0.0.0.0.0	
# ::edge	one	mod	cheap	0.2.0	0.2.0.1	
# ::edge	promise-01	ARG0	one	0.2.0.0	0.2.0	
# ::edge	result-01	ARG2	one	0.2	0.2.0	
# ::edge	result-01	manner	direct	0.2	0.2.1	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	and	0	0.1	
# ::edge	say-01	ARG3	result-01	0	0.2	
# ::edge	threaten-01	ARG1	impose-01	0.1.0.1	0.1.0	
# ::edge	vat	location	ticket	0.1.0.0	0.1.0.0.0	
(s / say-01 
      :ARG0 (h / he) 
      :ARG1 (a / and 
            :ARG0-of (i / impose-01 
                  :ARG1 (v / vat 
                        :location (t / ticket)) 
                  :ARG1-of (t2 / threaten-01 
                        :op-of (b / between 
                              :location-of (f2 / facility 
                                    :ARG1-of (a2 / abolish-01 
                                          :location (c2 / continent 
                                                :name (n / name 
                                                      :op1 "Europe")))) 
                              :op1 (s2 / state))))) 
      :ARG3 (r / result-01 
            :ARG2 (o / one 
                  :ARG0-of (p / promise-01) 
                  :mod (c / cheap 
                        :domain (f / fare))) 
            :manner (d / direct)))

# ::snt with paul appleton as the project architect allies and morrison is promising a park and treelined square which will leave an uninterrupted view of the existing buildings from the river
# ::tok with paul appleton as the project architect allies and morrison is promising a park and treelined square which will leave an uninterrupted view of the existing buildings from the river
# ::alignments 29-30|0.0.0.1.0 26-27|0.1.0.0 25-26|0.1.0.0.0 19-20|0.1.0 16-17|0.1 14-15|0 13-14|0.0.1 11-12|0.0 8-9|0.0.0 7-8|0.0.0.1 5-6|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:43.070
# ::node	0	and	14-15
# ::node	0.0	promise-01	11-12
# ::node	0.0.0	and	8-9
# ::node	0.0.0.0	project	5-6
# ::node	0.0.0.1	ally-01	7-8
# ::node	0.0.0.1.0	river	29-30
# ::node	0.0.1	park	13-14
# ::node	0.1	square	16-17
# ::node	0.1.0	leave-01	19-20
# ::node	0.1.0.0	building	26-27
# ::node	0.1.0.0.0	exist-01	25-26
# ::root	0	and
# ::edge	ally-01	ARG1	river	0.0.0.1	0.0.0.1.0	
# ::edge	and	op1	project	0.0.0	0.0.0.0	
# ::edge	and	op1	promise-01	0	0.0	
# ::edge	and	op2	ally-01	0.0.0	0.0.0.1	
# ::edge	and	op2	square	0	0.1	
# ::edge	exist-01	ARG1	building	0.1.0.0.0	0.1.0.0	
# ::edge	leave-01	ARG0	square	0.1.0	0.1	
# ::edge	leave-01	ARG1	building	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG0	and	0.0	0.0.0	
# ::edge	promise-01	ARG1	park	0.0	0.0.1	
(a / and 
      :op1 (p2 / promise-01 
            :ARG0 (a2 / and 
                  :op1 (p3 / project) 
                  :op2 (a3 / ally-01 
                        :ARG1 (r / river))) 
            :ARG1 (p / park)) 
      :op2 (s / square 
            :ARG0-of (l / leave-01 
                  :ARG1 (b / building 
                        :ARG1-of (e / exist-01)))))

# ::snt the white horse pub in london road headington raised 500 for the girls and regulars are promising to raise even more money before the pair set off on wednesday
# ::tok the white horse pub in london road headington raised 500 for the girls and regulars are promising to raise even more money before the pair set off on wednesday
# ::alignments 26-27|0.1.1.2.0 22-23|0.1.1.2 21-22|0.1.1.1 18-19|0.1.1 16-17|0.1 13-14|0 12-13|0.0 9-10|0.0.0 8-9|0.1.2 6-7|0.1.1.0 5-6|0.1.0.0.0+0.1.0.0+0.1.0 3-4|0.1.2.0 2-3|0.1.2.0.0 1-2|0.1.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:43.251
# ::node	0	and	13-14
# ::node	0.0	girl	12-13
# ::node	0.0.0	500	9-10
# ::node	0.1	promise-01	16-17
# ::node	0.1.0	city	5-6
# ::node	0.1.0.0	name	5-6
# ::node	0.1.0.0.0	"London"	5-6
# ::node	0.1.1	raise-01	18-19
# ::node	0.1.1.0	road	6-7
# ::node	0.1.1.1	money	21-22
# ::node	0.1.1.2	before	22-23
# ::node	0.1.1.2.0	off	26-27
# ::node	0.1.2	raise-01	8-9
# ::node	0.1.2.0	pub	3-4
# ::node	0.1.2.0.0	horse	2-3
# ::node	0.1.3	white	1-2
# ::root	0	and
# ::edge	and	op1	girl	0	0.0	
# ::edge	and	op2	promise-01	0	0.1	
# ::edge	before	op1	off	0.1.1.2	0.1.1.2.0	
# ::edge	city	name	name	0.1.0	0.1.0.0	
# ::edge	girl	quant	500	0.0	0.0.0	
# ::edge	name	op1	"London"	0.1.0.0	0.1.0.0.0	
# ::edge	promise-01	ARG0	city	0.1	0.1.0	
# ::edge	promise-01	ARG1	raise-01	0.1	0.1.1	
# ::edge	promise-01	prep-against	white	0.1	0.1.3	
# ::edge	pub	mod	horse	0.1.2.0	0.1.2.0.0	
# ::edge	raise-01	ARG0	pub	0.1.2	0.1.2.0	
# ::edge	raise-01	ARG0	road	0.1.1	0.1.1.0	
# ::edge	raise-01	ARG1	money	0.1.1	0.1.1.1	
# ::edge	raise-01	ARG1	promise-01	0.1.2	0.1	
# ::edge	raise-01	time	before	0.1.1	0.1.1.2	
(a / and 
      :op1 (g / girl 
            :quant 500) 
      :op2 (p / promise-01 
            :ARG0 (c / city 
                  :name (n / name 
                        :op1 "London")) 
            :ARG1 (r / raise-01 
                  :ARG0 (r3 / road) 
                  :ARG1 (m / money) 
                  :time (b / before 
                        :op1 (o / off))) 
            :ARG1-of (r2 / raise-01 
                  :ARG0 (p2 / pub 
                        :mod (h / horse))) 
            :prep-against (w / white)))

# ::snt what is the affair so important as to leave you no time to write to your devoted lover  what affection stifles and puts to one side the love the tender and constant love you promised him
# ::tok what is the affair so important as to leave you no time to write to your devoted lover what affection stifles and puts to one side the love the tender and constant love you promised him
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:43.252
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt he promised to demystify the allpowerful presidency and make it more accountable to congress and the voter
# ::tok he promised to demystify the allpowerful presidency and make it more accountable to congress and the voter
# ::alignments 16-17|0.0.0+0.0 14-15|0 13-14|0.1.2.0.0+0.1.2.0+0.1.2 11-12|0.1 9-10|0.1.1 7-8|0.1.0 1-2|0.1.0.0 0-1|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:43.393
# ::node	0	and	14-15
# ::node	0.0	person	16-17
# ::node	0.0.0	vote-01	16-17
# ::node	0.1	accountable-41	11-12
# ::node	0.1.0	and	7-8
# ::node	0.1.0.0	promise-01	1-2
# ::node	0.1.0.0.0	he	0-1
# ::node	0.1.1	it	9-10
# ::node	0.1.2	government-organization	13-14
# ::node	0.1.2.0	name	13-14
# ::node	0.1.2.0.0	"Congress"	13-14
# ::root	0	and
# ::edge	accountable-41	ARG0	and	0.1	0.1.0	
# ::edge	accountable-41	ARG1	it	0.1	0.1.1	
# ::edge	accountable-41	ARG2	government-organization	0.1	0.1.2	
# ::edge	accountable-41	prep-to	and	0.1	0	
# ::edge	and	op1	person	0	0.0	
# ::edge	government-organization	name	name	0.1.2	0.1.2.0	
# ::edge	name	op1	"Congress"	0.1.2.0	0.1.2.0.0	
# ::edge	promise-01	ARG0	he	0.1.0.0	0.1.0.0.0	
# ::edge	promise-01	ARG1	and	0.1.0.0	0.1.0	
# ::edge	vote-01	ARG0	person	0.0.0	0.0	
(a / and 
      :op1 (p / person 
            :ARG0-of (v / vote-01)) 
      :prep-to-of (a2 / accountable-41 
            :ARG0 (a3 / and 
                  :ARG1-of (p2 / promise-01 
                        :ARG0 (h / he))) 
            :ARG1 (i / it) 
            :ARG2 (g / government-organization 
                  :name (n / name 
                        :op1 "Congress"))))

# ::snt these writings are the latest skirmishes in what promises to be a struggle bitter even by ecclesiastical standards over the next few weeks
# ::tok these writings are the latest skirmishes in what promises to be a struggle bitter even by ecclesiastical standards over the next few weeks
# ::alignments 22-23|0.2.0.1+0.2.0 21-22|0.2.0.0 20-21|0.2.0.1.0 17-18|0.2 13-14|0 12-13|0.0 8-9|0.1 4-5|0.1.0.0+0.1.0 1-2|0.0.0.0+0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:43.507
# ::node	0	bitter	13-14
# ::node	0.0	struggle-01	12-13
# ::node	0.0.0	thing	1-2
# ::node	0.0.0.0	write-01	1-2
# ::node	0.1	promise-01	8-9
# ::node	0.1.0	late	4-5
# ::node	0.1.0.0	most	4-5
# ::node	0.2	standard	17-18
# ::node	0.2.0	temporal-quantity	22-23
# ::node	0.2.0.0	few	21-22
# ::node	0.2.0.1	week	22-23
# ::node	0.2.0.1.0	next	20-21
# ::root	0	bitter
# ::edge	bitter	compared-to	standard	0	0.2	
# ::edge	few	op1	temporal-quantity	0.2.0.0	0.2.0	
# ::edge	late	degree	most	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG0	late	0.1	0.1.0	
# ::edge	promise-01	ARG1	bitter	0.1	0	
# ::edge	standard	poss	temporal-quantity	0.2	0.2.0	
# ::edge	struggle-01	ARG0	thing	0.0	0.0.0	
# ::edge	struggle-01	ARG1	bitter	0.0	0	
# ::edge	temporal-quantity	unit	week	0.2.0	0.2.0.1	
# ::edge	week	mod	next	0.2.0.1	0.2.0.1.0	
# ::edge	write-01	ARG1	thing	0.0.0.0	0.0.0	
(b / bitter 
      :ARG1-of (s2 / struggle-01 
            :ARG0 (t2 / thing 
                  :ARG1-of (w2 / write-01))) 
      :ARG1-of (p / promise-01 
            :ARG0 (l / late 
                  :degree (m / most))) 
      :compared-to (s / standard 
            :poss (t / temporal-quantity 
                  :op-of (f / few) 
                  :unit (w / week 
                        :mod (n / next)))))

# ::snt the big mass up front guarantees initial understeer and the ample power to the back promises the balancing availability of power oversteer
# ::tok the big mass up front guarantees initial understeer and the ample power to the back promises the balancing availability of power oversteer
# ::alignments 20-21|0.1.1 18-19|0.0.0 17-18|0.0.0.0 15-16|0.0 14-15|0.2.0 11-12|0.2 8-9|0 6-7|0.0.0.0.0 5-6|0.1 4-5|0.1.2 2-3|0.1.0 1-2|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:43.683
# ::node	0	and	8-9
# ::node	0.0	promise-01	15-16
# ::node	0.0.0	available	18-19
# ::node	0.0.0.0	balance-01	17-18
# ::node	0.0.0.0.0	initial	6-7
# ::node	0.1	guarantee-01	5-6
# ::node	0.1.0	mass	2-3
# ::node	0.1.0.0	big	1-2
# ::node	0.1.1	power	20-21
# ::node	0.1.2	front	4-5
# ::node	0.2	power	11-12
# ::node	0.2.0	back	14-15
# ::root	0	and
# ::edge	and	op1	guarantee-01	0	0.1	
# ::edge	and	op2	power	0	0.2	
# ::edge	balance-01	ARG0	initial	0.0.0.0	0.0.0.0.0	
# ::edge	balance-01	ARG1	available	0.0.0.0	0.0.0	
# ::edge	guarantee-01	ARG0	mass	0.1	0.1.0	
# ::edge	guarantee-01	ARG1	power	0.1	0.1.1	
# ::edge	guarantee-01	mod	front	0.1	0.1.2	
# ::edge	mass	mod	big	0.1.0	0.1.0.0	
# ::edge	power	destination	back	0.2	0.2.0	
# ::edge	promise-01	ARG0	and	0.0	0	
# ::edge	promise-01	ARG1	available	0.0	0.0.0	
(a2 / and 
      :ARG0-of (p2 / promise-01 
            :ARG1 (a / available 
                  :ARG1-of (b / balance-01 
                        :ARG0 (i / initial)))) 
      :op1 (g / guarantee-01 
            :ARG0 (m / mass 
                  :mod (b3 / big)) 
            :ARG1 (p / power) 
            :mod (f / front)) 
      :op2 (p3 / power 
            :destination (b2 / back)))

# ::snt i promise you that you rarely want to go home and read about it
# ::tok i promise you that you rarely want to go home and read about it
# ::alignments 13-14|0.2.1.0.0 11-12|0.2.1.0 10-11|0.2.1 9-10|0.2.0.0 6-7|0.2 5-6|0.2.2 4-5|0.2.0 2-3|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:43.809
# ::node	0	promise-01	1-2
# ::node	0.0	i	0-1
# ::node	0.1	you	2-3
# ::node	0.2	want-01	6-7
# ::node	0.2.0	you	4-5
# ::node	0.2.0.0	home	9-10
# ::node	0.2.1	and	10-11
# ::node	0.2.1.0	read-01	11-12
# ::node	0.2.1.0.0	it	13-14
# ::node	0.2.2	rare	5-6
# ::root	0	promise-01
# ::edge	and	op1	read-01	0.2.1	0.2.1.0	
# ::edge	home	poss	you	0.2.0.0	0.2.0	
# ::edge	promise-01	ARG0	i	0	0.0	
# ::edge	promise-01	ARG1	you	0	0.1	
# ::edge	promise-01	ARG2	want-01	0	0.2	
# ::edge	read-01	ARG1	it	0.2.1.0	0.2.1.0.0	
# ::edge	want-01	ARG0	you	0.2	0.2.0	
# ::edge	want-01	ARG1	and	0.2	0.2.1	
# ::edge	want-01	frequency	rare	0.2	0.2.2	
(p / promise-01 
      :ARG0 (i2 / i) 
      :ARG1 (y2 / you) 
      :ARG2 (w / want-01 
            :ARG0 (y / you 
                  :poss-of (h / home)) 
            :ARG1 (a / and 
                  :op1 (r / read-01 
                        :ARG1 (i / it))) 
            :frequency (r2 / rare)))

# ::snt in what promises to be a scientific landmark groups from the medical research council and the imperial cancer research fund say they may have found an elusive sexdetermining gene
# ::tok in what promises to be a scientific landmark groups from the medical research council and the imperial cancer research fund say they may have found an elusive sexdetermining gene
# ::alignments 28-29|0.1.0.1 26-27|0.1.0.1.0 24-25|0.1.0 22-23|0.1.1+0.1 21-22|0.1.0.0 20-21|0 19-20|0.2.0 18-19|0.2.0.0 17-18|0.2.0.0.0 14-15|0.2 13-14|0.2.1 12-13|0.2.1.0 11-12|0.2.1.0.0 8-9|0.0 7-8|0.1.0.0.0.0 6-7|0.1.0.0.0.0.0 2-3|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:44.155
# ::node	0	say-01	20-21
# ::node	0.0	group	8-9
# ::node	0.1	date-entity	22-23
# ::node	0.1.0	find-01	24-25
# ::node	0.1.0.0	they	21-22
# ::node	0.1.0.0.0	promise-01	2-3
# ::node	0.1.0.0.0.0	landmark	7-8
# ::node	0.1.0.0.0.0.0	science	6-7
# ::node	0.1.0.1	gene	28-29
# ::node	0.1.0.1.0	elusive	26-27
# ::node	0.1.1	5	22-23
# ::node	0.2	and	14-15
# ::node	0.2.0	fund-01	19-20
# ::node	0.2.0.0	research-01	18-19
# ::node	0.2.0.0.0	cancer	17-18
# ::node	0.2.1	council	13-14
# ::node	0.2.1.0	research-01	12-13
# ::node	0.2.1.0.0	medicine	11-12
# ::root	0	say-01
# ::edge	and	op1	council	0.2	0.2.1	
# ::edge	and	op2	say-01	0.2	0	
# ::edge	council	mod	research-01	0.2.1	0.2.1.0	
# ::edge	date-entity	domain	find-01	0.1	0.1.0	
# ::edge	date-entity	month	5	0.1	0.1.1	
# ::edge	find-01	ARG0	they	0.1.0	0.1.0.0	
# ::edge	find-01	ARG1	gene	0.1.0	0.1.0.1	
# ::edge	fund-01	ARG0	and	0.2.0	0.2	
# ::edge	fund-01	ARG1	research-01	0.2.0	0.2.0.0	
# ::edge	gene	mod	elusive	0.1.0.1	0.1.0.1.0	
# ::edge	landmark	mod	science	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	promise-01	ARG0	they	0.1.0.0.0	0.1.0.0	
# ::edge	promise-01	ARG1	landmark	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	research-01	ARG1	cancer	0.2.0.0	0.2.0.0.0	
# ::edge	research-01	mod	medicine	0.2.1.0	0.2.1.0.0	
# ::edge	say-01	ARG0	group	0	0.0	
# ::edge	say-01	ARG1	date-entity	0	0.1	
(s / say-01 
      :ARG0 (g2 / group) 
      :ARG1 (d / date-entity 
            :domain (f / find-01 
                  :ARG0 (t / they 
                        :ARG0-of (p / promise-01 
                              :ARG1 (l / landmark 
                                    :mod (s2 / science)))) 
                  :ARG1 (g / gene 
                        :mod (e / elusive))) 
            :month 5) 
      :op-of (a / and 
            :ARG0-of (f2 / fund-01 
                  :ARG1 (r / research-01 
                        :ARG1 (c / cancer))) 
            :op1 (c2 / council 
                  :mod (r2 / research-01 
                        :mod (m / medicine)))))

# ::snt biotherm will give him a free facial and skin care gift worth 60 while estee lauder has promised her a free makeup gold compact and gift from its beautiful collection valued at 65
# ::tok biotherm will give him a free facial and skin care gift worth 60 while estee lauder has promised her a free makeup gold compact and gift from its beautiful collection valued at 65
# ::alignments 32-33|0.1.0.1.1.0.0 30-31|0.3.0.0 29-30|0.3.0 28-29|0.3.0.1 25-26|0.3 24-25|0 23-24|0.2 22-23|0.2.2 21-22|0.2.1 20-21|0.2.1.0 17-18|0.0 12-13|0.2.0 11-12|0.1.0.1.0 10-11|0.1.0.1 9-10|0.1.0.1.1.0 8-9|0.1.0.1.1 7-8|0.1.0 5-6|0.1.0.0 2-3|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:44.591
# ::node	0	and	24-25
# ::node	0.0	promise-01	17-18
# ::node	0.1	give-01	2-3
# ::node	0.1.0	and	7-8
# ::node	0.1.0.0	free-41	5-6
# ::node	0.1.0.1	gift-01	10-11
# ::node	0.1.0.1.0	worth	11-12
# ::node	0.1.0.1.1	skin	8-9
# ::node	0.1.0.1.1.0	care-01	9-10
# ::node	0.1.0.1.1.0.0	65	32-33
# ::node	0.2	compact-01	23-24
# ::node	0.2.0	60	12-13
# ::node	0.2.1	makeup	21-22
# ::node	0.2.1.0	free-41	20-21
# ::node	0.2.2	gold	22-23
# ::node	0.3	gift-01	25-26
# ::node	0.3.0	collect-01	29-30
# ::node	0.3.0.0	value-01	30-31
# ::node	0.3.0.1	beautiful	28-29
# ::root	0	and
# ::edge	and	op1	compact-01	0	0.2	
# ::edge	and	op1	gift-01	0.1.0	0.1.0.1	
# ::edge	and	op2	gift-01	0	0.3	
# ::edge	care-01	ARG0	65	0.1.0.1.1.0	0.1.0.1.1.0.0	
# ::edge	care-01	ARG1	skin	0.1.0.1.1.0	0.1.0.1.1	
# ::edge	collect-01	mod	beautiful	0.3.0	0.3.0.1	
# ::edge	compact-01	ARG0	60	0.2	0.2.0	
# ::edge	compact-01	mod	gold	0.2	0.2.2	
# ::edge	compact-01	mod	makeup	0.2	0.2.1	
# ::edge	free-41	ARG1	and	0.1.0.0	0.1.0	
# ::edge	free-41	ARG1	makeup	0.2.1.0	0.2.1	
# ::edge	gift-01	ARG0	worth	0.1.0.1	0.1.0.1.0	
# ::edge	gift-01	ARG1	collect-01	0.3	0.3.0	
# ::edge	gift-01	ARG1	skin	0.1.0.1	0.1.0.1.1	
# ::edge	give-01	ARG1	and	0.1	0.1.0	
# ::edge	give-01	ARG2	and	0.1	0	
# ::edge	promise-01	ARG1	and	0.0	0	
# ::edge	value-01	ARG1	collect-01	0.3.0.0	0.3.0	
(a / and 
      :ARG1-of (p / promise-01) 
      :ARG2-of (g4 / give-01 
            :ARG1 (a2 / and 
                  :ARG1-of (f2 / free-41) 
                  :op1 (g3 / gift-01 
                        :ARG0 (w / worth) 
                        :ARG1 (s / skin 
                              :ARG1-of (c3 / care-01 
                                    :ARG0 65))))) 
      :op1 (c2 / compact-01 
            :ARG0 60 
            :mod (m / makeup 
                  :ARG1-of (f / free-41)) 
            :mod (g2 / gold)) 
      :op2 (g / gift-01 
            :ARG1 (c / collect-01 
                  :ARG1-of (v / value-01) 
                  :mod (b / beautiful))))

# ::snt in the early stages of what promises to be a furious legal debate the school district offered ms graham an alreadydead frog to dissect but ms graham whose mother is perhaps irrelevantly perhaps not a publicityconscious animal rights campaigner refused alleging she could not be certain of the provenance or natural death of said frog
# ::tok in the early stages of what promises to be a furious legal debate the school district offered ms graham an alreadydead frog to dissect but ms graham whose mother is perhaps irrelevantly perhaps not a publicityconscious animal rights campaigner refused alleging she could not be certain of the provenance or natural death of said frog
# ::alignments 53-54|0 51-52|0.1.0 50-51|0.1.0.1 49-50|0.1 45-46|0.0.0 42-43|0.0.0.0 41-42|0.0 40-41|0.0.0.0.0 39-40|0.0.0.0.0.1 37-38|0.0.0.0.1.0.1.0.0 36-37|0.0.0.0.1.0.1.0 32-33|0.0.0.0.0.1.0 30-31|0.1.0.0 28-29|0.0.0.0.0.0.0+0.0.0.0.0.0 24-25|0.0.0.0.1 16-17|0.0.0.0.1.0 15-16|0.0.0.0.1.0.0 14-15|0.0.0.0.1.0.0.0 12-13|0.0.0.0.1.0.1 11-12|0.0.0.0.1.0.1.3 10-11|0.0.0.0.1.0.1.2 6-7|0.0.0.0.1.0.1.1 3-4|0.0.0.0.1.0.1.1.0 2-3|0.0.0.0.1.0.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:45.266
# ::node	0	say-01	53-54
# ::node	0.0	she	41-42
# ::node	0.0.0	certain	45-46
# ::node	0.0.0.0	possible	42-43
# ::node	0.0.0.0.0	allege-01	40-41
# ::node	0.0.0.0.0.0	have-rel-role-91	28-29
# ::node	0.0.0.0.0.0.0	mother	28-29
# ::node	0.0.0.0.0.1	refuse-01	39-40
# ::node	0.0.0.0.0.1.0	perhaps	32-33
# ::node	0.0.0.0.1	contrast-01	24-25
# ::node	0.0.0.0.1.0	offer-01	16-17
# ::node	0.0.0.0.1.0.0	district	15-16
# ::node	0.0.0.0.1.0.0.0	school	14-15
# ::node	0.0.0.0.1.0.1	debate-01	12-13
# ::node	0.0.0.0.1.0.1.0	animal	36-37
# ::node	0.0.0.0.1.0.1.0.0	right	37-38
# ::node	0.0.0.0.1.0.1.1	promise-01	6-7
# ::node	0.0.0.0.1.0.1.1.0	stage	3-4
# ::node	0.0.0.0.1.0.1.1.0.0	early	2-3
# ::node	0.0.0.0.1.0.1.2	furious	10-11
# ::node	0.0.0.0.1.0.1.3	legal	11-12
# ::node	0.1	or	49-50
# ::node	0.1.0	die-01	51-52
# ::node	0.1.0.0	perhaps	30-31
# ::node	0.1.0.1	natural	50-51
# ::root	0	say-01
# ::edge	allege-01	ARG0	have-rel-role-91	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	allege-01	ARG1	possible	0.0.0.0.0	0.0.0.0	
# ::edge	certain	domain	she	0.0.0	0.0	
# ::edge	contrast-01	ARG1	offer-01	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	contrast-01	ARG2	possible	0.0.0.0.1	0.0.0.0	
# ::edge	debate-01	ARG1	animal	0.0.0.0.1.0.1	0.0.0.0.1.0.1.0	
# ::edge	debate-01	mod	furious	0.0.0.0.1.0.1	0.0.0.0.1.0.1.2	
# ::edge	debate-01	mod	legal	0.0.0.0.1.0.1	0.0.0.0.1.0.1.3	
# ::edge	die-01	ARG1	perhaps	0.1.0	0.1.0.0	
# ::edge	die-01	mod	natural	0.1.0	0.1.0.1	
# ::edge	district	mod	school	0.0.0.0.1.0.0	0.0.0.0.1.0.0.0	
# ::edge	have-rel-role-91	ARG2	mother	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	offer-01	ARG0	district	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	offer-01	ARG1	debate-01	0.0.0.0.1.0	0.0.0.0.1.0.1	
# ::edge	or	op1	die-01	0.1	0.1.0	
# ::edge	or	purpose	say-01	0.1	0	
# ::edge	possible	domain	certain	0.0.0.0	0.0.0	
# ::edge	promise-01	ARG1	debate-01	0.0.0.0.1.0.1.1	0.0.0.0.1.0.1	
# ::edge	refuse-01	ARG1	allege-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	refuse-01	mod	perhaps	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	right	mod	animal	0.0.0.0.1.0.1.0.0	0.0.0.0.1.0.1.0	
# ::edge	say-01	ARG0	she	0	0.0	
# ::edge	stage	beneficiary	promise-01	0.0.0.0.1.0.1.1.0	0.0.0.0.1.0.1.1	
# ::edge	stage	time	early	0.0.0.0.1.0.1.1.0	0.0.0.0.1.0.1.1.0.0	
(s / say-01 
      :ARG0 (s2 / she 
            :domain-of (c / certain 
                  :domain-of (p / possible 
                        :ARG1-of (a / allege-01 
                              :ARG0 (h / have-rel-role-91 
                                    :ARG2 (m / mother)) 
                              :ARG1-of (r / refuse-01 
                                    :mod (p2 / perhaps))) 
                        :ARG2-of (c2 / contrast-01 
                              :ARG1 (o2 / offer-01 
                                    :ARG0 (d2 / district 
                                          :mod (s3 / school)) 
                                    :ARG1 (d3 / debate-01 
                                          :ARG1 (a2 / animal 
                                                :mod-of (r2 / right)) 
                                          :ARG1-of (p4 / promise-01 
                                                :beneficiary-of (s4 / stage 
                                                      :time (e / early))) 
                                          :mod (f / furious) 
                                          :mod (l / legal))))))) 
      :purpose-of (o / or 
            :op1 (d / die-01 
                  :ARG1 (p3 / perhaps) 
                  :mod (n / natural))))

# ::snt chairman john bellak promised to deliver the muchoverdue investment programme on time and at or below budget
# ::tok chairman john bellak promised to deliver the muchoverdue investment programme on time and at or below budget
# ::alignments 16-17|0.1 15-16|0.0.0.0.1.0.0 14-15|0.0.0.0.1.0 12-13|0 11-12|0.0.0.1 9-10|0.0.0.0 8-9|0.0.0.0.1 5-6|0.0.0 3-4|0.0 0-1|0.0.0.0.0.0+0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:45.352
# ::node	0	and	12-13
# ::node	0.0	promise-01	3-4
# ::node	0.0.0	deliver-01	5-6
# ::node	0.0.0.0	program	9-10
# ::node	0.0.0.0.0	have-org-role-91	0-1
# ::node	0.0.0.0.0.0	chairman	0-1
# ::node	0.0.0.0.1	invest-01	8-9
# ::node	0.0.0.0.1.0	or	14-15
# ::node	0.0.0.0.1.0.0	below	15-16
# ::node	0.0.0.1	time	11-12
# ::node	0.1	budget	16-17
# ::root	0	and
# ::edge	and	op1	promise-01	0	0.0	
# ::edge	and	op2	budget	0	0.1	
# ::edge	deliver-01	ARG1	program	0.0.0	0.0.0.0	
# ::edge	deliver-01	time	time	0.0.0	0.0.0.1	
# ::edge	have-org-role-91	ARG1	program	0.0.0.0.0	0.0.0.0	
# ::edge	have-org-role-91	ARG2	chairman	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	invest-01	location	or	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	or	op1	below	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	program	mod	invest-01	0.0.0.0	0.0.0.0.1	
# ::edge	promise-01	ARG2	deliver-01	0.0	0.0.0	
(a / and 
      :op1 (p2 / promise-01 
            :ARG2 (d / deliver-01 
                  :ARG1 (p / program 
                        :ARG1-of (h / have-org-role-91 
                              :ARG2 (c / chairman)) 
                        :mod (i / invest-01 
                              :location (o / or 
                                    :op1 (b2 / below)))) 
                  :time (t / time))) 
      :op2 (b / budget))

# ::snt a man she knew slightly waved to her not the man she had come to meet for a drink the one promising to fit the final piece in the jigsaw of an exposeacute
# ::tok a man she knew slightly waved to her not the man she had come to meet for a drink the one promising to fit the final piece in the jigsaw of an exposeacute
# ::alignments 26-27|0.2.0 25-26|0.2.0.0 23-24|0.2 21-22|0 18-19|0.0.0 11-12|0.0 10-11|0.1 5-6|0.0.0.0.1 4-5|0.0.0.0.0.1 3-4|0.0.0.0.0 2-3|0.0.0.0 1-2|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:45.485
# ::node	0	promise-01	21-22
# ::node	0.0	she	11-12
# ::node	0.0.0	drink-01	18-19
# ::node	0.0.0.0	she	2-3
# ::node	0.0.0.0.0	know-01	3-4
# ::node	0.0.0.0.0.0	man	1-2
# ::node	0.0.0.0.0.1	slight	4-5
# ::node	0.0.0.0.1	wave-01	5-6
# ::node	0.1	man	10-11
# ::node	0.2	fit-01	23-24
# ::node	0.2.0	piece	26-27
# ::node	0.2.0.0	final	25-26
# ::root	0	promise-01
# ::edge	drink-01	ARG0	she	0.0.0	0.0.0.0	
# ::edge	drink-01	ARG1	she	0.0.0	0.0	
# ::edge	fit-01	ARG1	piece	0.2	0.2.0	
# ::edge	know-01	ARG0	she	0.0.0.0.0	0.0.0.0	
# ::edge	know-01	ARG1	man	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	know-01	ARG3	slight	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	piece	mod	final	0.2.0	0.2.0.0	
# ::edge	promise-01	ARG0	she	0	0.0	
# ::edge	promise-01	ARG1	man	0	0.1	
# ::edge	promise-01	ARG2	fit-01	0	0.2	
# ::edge	wave-01	ARG0	she	0.0.0.0.1	0.0.0.0	
(p2 / promise-01 
      :ARG0 (s / she 
            :ARG1-of (d / drink-01 
                  :ARG0 (s3 / she 
                        :ARG0-of (k / know-01 
                              :ARG1 (m2 / man) 
                              :ARG3 (s2 / slight)) 
                        :ARG0-of (w / wave-01)))) 
      :ARG1 (m / man) 
      :ARG2 (f2 / fit-01 
            :ARG1 (p / piece 
                  :mod (f / final))))

# ::snt bonn promises monetary union by june 30th but the alliance needs twothirds of the parliamentary vote before it can complete unification
# ::tok bonn promises monetary union by june 30th but the alliance needs twothirds of the parliamentary vote before it can complete unification
# ::alignments 20-21|0.0.0.0 19-20|0.0 18-19|0 17-18|0.0.0 16-17|0.1 15-16|0.1.0.1 10-11|0.1.0 9-10|0.1.0.0 7-8|0.1.0.2 5-6|0.0.0.0.0.0+0.0.0.0.0 3-4|0.1.0.2.0.0 2-3|0.1.0.2.0.0.0 1-2|0.1.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:45.557
# ::node	0	possible	18-19
# ::node	0.0	complete	19-20
# ::node	0.0.0	it	17-18
# ::node	0.0.0.0	unify-01	20-21
# ::node	0.0.0.0.0	date-entity	5-6
# ::node	0.0.0.0.0.0	6	5-6
# ::node	0.1	before	16-17
# ::node	0.1.0	need-01	10-11
# ::node	0.1.0.0	alliance	9-10
# ::node	0.1.0.1	vote-01	15-16
# ::node	0.1.0.2	contrast-01	7-8
# ::node	0.1.0.2.0	promise-01	1-2
# ::node	0.1.0.2.0.0	union	3-4
# ::node	0.1.0.2.0.0.0	money	2-3
# ::root	0	possible
# ::edge	before	op1	possible	0.1	0	
# ::edge	complete	part	it	0.0	0.0.0	
# ::edge	contrast-01	ARG1	promise-01	0.1.0.2	0.1.0.2.0	
# ::edge	contrast-01	ARG2	need-01	0.1.0.2	0.1.0	
# ::edge	date-entity	month	6	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	need-01	ARG0	alliance	0.1.0	0.1.0.0	
# ::edge	need-01	ARG1	vote-01	0.1.0	0.1.0.1	
# ::edge	need-01	time	before	0.1.0	0.1	
# ::edge	possible	domain	complete	0	0.0	
# ::edge	promise-01	ARG1	union	0.1.0.2.0	0.1.0.2.0.0	
# ::edge	unify-01	ARG0	it	0.0.0.0	0.0.0	
# ::edge	unify-01	ARG1	date-entity	0.0.0.0	0.0.0.0.0	
# ::edge	union	topic	money	0.1.0.2.0.0	0.1.0.2.0.0.0	
(p / possible 
      :domain (c / complete 
            :part (i / it 
                  :ARG0-of (u / unify-01 
                        :ARG1 (d / date-entity 
                              :month 6)))) 
      :op-of (b / before 
            :time-of (n / need-01 
                  :ARG0 (a / alliance) 
                  :ARG1 (v / vote-01) 
                  :ARG2-of (c2 / contrast-01 
                        :ARG1 (p2 / promise-01 
                              :ARG1 (u2 / union 
                                    :topic (m / money)))))))

# ::snt   well be ready in time she promised please
# ::tok well be ready in time she promised please
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:45.557
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt in her end of term report to 150 tory peers last night she promised a light legislative programme but implied she would not go to the polls until the health service reforms were in place
# ::tok in her end of term report to 150 tory peers last night she promised a light legislative programme but implied she would not go to the polls until the health service reforms were in place
# ::alignments 34-35|0.2.0.1 31-32|0.2.0.0.0.0 29-30|0.2.0.0.0 27-28|0.2.0.0.0.0.1 26-27|0.2.0.0 20-21|0.2.0 19-20|0.2 18-19|0 17-18|0.1.1 16-17|0.1.1.0 15-16|0.1.1.1 13-14|0.1 12-13|0.1.0 11-12|0.1.2 10-11|0.1.2.0 9-10|0.2.0.0.0.0.0 8-9|0.2.0.0.0.0.0.0.0.0+0.2.0.0.0.0.0.0.0+0.2.0.0.0.0.0.0 7-8|0.2.1 5-6|0.0 4-5|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:46.077
# ::node	0	contrast-01	18-19
# ::node	0.0	report	5-6
# ::node	0.0.0	term	4-5
# ::node	0.1	promise-01	13-14
# ::node	0.1.0	she	12-13
# ::node	0.1.1	program	17-18
# ::node	0.1.1.0	legislate-01	16-17
# ::node	0.1.1.1	light	15-16
# ::node	0.1.2	night	11-12
# ::node	0.1.2.0	last	10-11
# ::node	0.2	imply-01	19-20
# ::node	0.2.0	she	20-21
# ::node	0.2.0.0	poll-01	26-27
# ::node	0.2.0.0.0	health	29-30
# ::node	0.2.0.0.0.0	reform-01	31-32
# ::node	0.2.0.0.0.0.0	peer	9-10
# ::node	0.2.0.0.0.0.0.0	political-party	8-9
# ::node	0.2.0.0.0.0.0.0.0	name	8-9
# ::node	0.2.0.0.0.0.0.0.0.0	"Tory"	8-9
# ::node	0.2.0.0.0.0.1	until	27-28
# ::node	0.2.0.1	place	34-35
# ::node	0.2.1	150	7-8
# ::root	0	contrast-01
# ::edge	contrast-01	ARG0	report	0	0.0	
# ::edge	contrast-01	ARG1	promise-01	0	0.1	
# ::edge	contrast-01	ARG2	imply-01	0	0.2	
# ::edge	imply-01	ARG0	she	0.2	0.2.0	
# ::edge	imply-01	ARG1	150	0.2	0.2.1	
# ::edge	legislate-01	ARG0	program	0.1.1.0	0.1.1	
# ::edge	name	op1	"Tory"	0.2.0.0.0.0.0.0.0	0.2.0.0.0.0.0.0.0.0	
# ::edge	night	mod	last	0.1.2	0.1.2.0	
# ::edge	peer	mod	political-party	0.2.0.0.0.0.0	0.2.0.0.0.0.0.0	
# ::edge	political-party	name	name	0.2.0.0.0.0.0.0	0.2.0.0.0.0.0.0.0	
# ::edge	poll-01	ARG0	she	0.2.0.0	0.2.0	
# ::edge	poll-01	ARG1	health	0.2.0.0	0.2.0.0.0	
# ::edge	program	mod	light	0.1.1	0.1.1.1	
# ::edge	promise-01	ARG0	she	0.1	0.1.0	
# ::edge	promise-01	ARG1	program	0.1	0.1.1	
# ::edge	promise-01	ARG2	night	0.1	0.1.2	
# ::edge	reform-01	ARG0	peer	0.2.0.0.0.0	0.2.0.0.0.0.0	
# ::edge	reform-01	ARG1	health	0.2.0.0.0.0	0.2.0.0.0	
# ::edge	report	mod	term	0.0	0.0.0	
# ::edge	she	part	place	0.2.0	0.2.0.1	
# ::edge	until	op1	reform-01	0.2.0.0.0.0.1	0.2.0.0.0.0	
(c / contrast-01 
      :ARG0 (r2 / report 
            :mod (t / term)) 
      :ARG1 (p4 / promise-01 
            :ARG0 (s2 / she) 
            :ARG1 (p3 / program 
                  :ARG0-of (l / legislate-01) 
                  :mod (l2 / light)) 
            :ARG2 (n / night 
                  :mod (l3 / last))) 
      :ARG2 (i / imply-01 
            :ARG0 (s / she 
                  :ARG0-of (p2 / poll-01 
                        :ARG1 (h / health 
                              :ARG1-of (r / reform-01 
                                    :ARG0 (p5 / peer 
                                          :mod (p6 / political-party 
                                                :name (n2 / name 
                                                      :op1 "Tory"))) 
                                    :op-of (u / until)))) 
                  :part (p / place)) 
            :ARG1 150))

# ::snt the department promises protection to those using the hotline but within weeks of reporting his employer mitchell was sacked
# ::tok the department promises protection to those using the hotline but within weeks of reporting his employer mitchell was sacked
# ::alignments 13-14|0.0.0.0 11-12|0.0.0.1+0.0.0 10-11|0.0 9-10|0 6-7|0.1 3-4|0.1.0 2-3|0.1.0.0 1-2|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:46.115
# ::node	0	contrast-01	9-10
# ::node	0.0	within	10-11
# ::node	0.0.0	temporal-quantity	11-12
# ::node	0.0.0.0	report-01	13-14
# ::node	0.0.0.1	week	11-12
# ::node	0.1	use-01	6-7
# ::node	0.1.0	protect-01	3-4
# ::node	0.1.0.0	promise-01	2-3
# ::node	0.1.0.0.0	department	1-2
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	within	0	0.0	
# ::edge	contrast-01	ARG2	use-01	0	0.1	
# ::edge	promise-01	ARG0	department	0.1.0.0	0.1.0.0.0	
# ::edge	promise-01	ARG1	protect-01	0.1.0.0	0.1.0	
# ::edge	protect-01	ARG1	use-01	0.1.0	0.1	
# ::edge	report-01	ARG0	temporal-quantity	0.0.0.0	0.0.0	
# ::edge	temporal-quantity	unit	week	0.0.0	0.0.0.1	
# ::edge	within	op1	temporal-quantity	0.0	0.0.0	
(c / contrast-01 
      :ARG1 (w2 / within 
            :op1 (t / temporal-quantity 
                  :ARG0-of (r / report-01) 
                  :unit (w / week))) 
      :ARG2 (u / use-01 
            :ARG1-of (p / protect-01 
                  :ARG1-of (p2 / promise-01 
                        :ARG0 (d / department)))))

# ::snt this haemorrhage of enterprising and skilled young people promises to cause serious damage to the gdrs economy
# ::tok this haemorrhage of enterprising and skilled young people promises to cause serious damage to the gdrs economy
# ::alignments 16-17|0.1.1 12-13|0.1 11-12|0.1.2 10-11|0 8-9|0.2 6-7|0.1.0 4-5|0.0 0-1|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:46.174
# ::node	0	cause-01	10-11
# ::node	0.0	and	4-5
# ::node	0.1	damage-01	12-13
# ::node	0.1.0	young	6-7
# ::node	0.1.1	economy	16-17
# ::node	0.1.2	serious	11-12
# ::node	0.2	promise-01	8-9
# ::node	0.2.0	this	0-1
# ::root	0	cause-01
# ::edge	cause-01	ARG0	and	0	0.0	
# ::edge	cause-01	ARG1	damage-01	0	0.1	
# ::edge	damage-01	ARG0	young	0.1	0.1.0	
# ::edge	damage-01	ARG1	economy	0.1	0.1.1	
# ::edge	damage-01	mod	serious	0.1	0.1.2	
# ::edge	promise-01	ARG1	this	0.2	0.2.0	
# ::edge	promise-01	ARG2	cause-01	0.2	0	
(c / cause-01 
      :ARG0 (a / and) 
      :ARG1 (d / damage-01 
            :ARG0 (y / young) 
            :ARG1 (e / economy) 
            :mod (s / serious)) 
      :ARG2-of (p / promise-01 
            :ARG1 (t / this)))

# ::snt i had been promised a gripping afternoons shoot in the locarno gents where the original play was entirely set
# ::tok i had been promised a gripping afternoons shoot in the locarno gents where the original play was entirely set
# ::alignments 17-18|0.2.0.0 15-16|0.0.0 14-15|0.0 7-8|0.2 5-6|0.2.0 3-4|0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:46.266
# ::node	0	promise-01	3-4
# ::node	0.0	original	14-15
# ::node	0.0.0	play-01	15-16
# ::node	0.1	i	0-1
# ::node	0.2	shoot-05	7-8
# ::node	0.2.0	grip-01	5-6
# ::node	0.2.0.0	entire	17-18
# ::root	0	promise-01
# ::edge	grip-01	ARG0	entire	0.2.0	0.2.0.0	
# ::edge	grip-01	ARG1	shoot-05	0.2.0	0.2	
# ::edge	play-01	ARG1	original	0.0.0	0.0	
# ::edge	promise-01	ARG0	original	0	0.0	
# ::edge	promise-01	ARG1	i	0	0.1	
# ::edge	promise-01	ARG2	shoot-05	0	0.2	
(p2 / promise-01 
      :ARG0 (o / original 
            :ARG1-of (p / play-01)) 
      :ARG1 (i / i) 
      :ARG2 (s / shoot-05 
            :ARG1-of (g / grip-01 
                  :ARG0 (e / entire))))

# ::snt more than 600 jobs are promised for the first phase of the project which will be complete in five years
# ::tok more than 600 jobs are promised for the first phase of the project which will be complete in five years
# ::alignments 19-20|0.0.1+0.0 18-19|0.0.0 16-17|0.2.0.0 12-13|0.2.0 9-10|0.2 5-6|0 3-4|0.1 2-3|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:46.317
# ::node	0	promise-01	5-6
# ::node	0.0	temporal-quantity	19-20
# ::node	0.0.0	5	18-19
# ::node	0.0.1	year	19-20
# ::node	0.1	job	3-4
# ::node	0.1.0	600	2-3
# ::node	0.2	phase	9-10
# ::node	0.2.0	project	12-13
# ::node	0.2.0.0	complete	16-17
# ::root	0	promise-01
# ::edge	job	quant	600	0.1	0.1.0	
# ::edge	project	mod	complete	0.2.0	0.2.0.0	
# ::edge	project	part	phase	0.2.0	0.2	
# ::edge	promise-01	ARG0	temporal-quantity	0	0.0	
# ::edge	promise-01	ARG1	job	0	0.1	
# ::edge	promise-01	ARG2	phase	0	0.2	
# ::edge	temporal-quantity	quant	5	0.0	0.0.0	
# ::edge	temporal-quantity	unit	year	0.0	0.0.1	
(p3 / promise-01 
      :ARG0 (t / temporal-quantity 
            :quant 5 
            :unit (y / year)) 
      :ARG1 (j / job 
            :quant 600) 
      :ARG2 (p2 / phase 
            :part-of (p / project 
                  :mod (c / complete))))

# ::snt   the east german prime minister hans modrow promised on tuesday that all political prisoners would be released from his countrys jails by christmas but he did not say whether this included those imprisoned for spying
# ::tok the east german prime minister hans modrow promised on tuesday that all political prisoners would be released from his countrys jails by christmas but he did not say whether this included those imprisoned for spying
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:46.317
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt sergei was promising to ring sonia tomorrow
# ::tok sergei was promising to ring sonia tomorrow
# ::alignments 6-7|0.0.0 4-5|0.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:46.325
# ::node	0	promise-01	2-3
# ::node	0.0	ring	4-5
# ::node	0.0.0	tomorrow	6-7
# ::root	0	promise-01
# ::edge	promise-01	ARG1	ring	0	0.0	
# ::edge	ring	time	tomorrow	0.0	0.0.0	
(p / promise-01 
      :ARG1 (r / ring 
            :time (t / tomorrow)))

# ::snt but strasbourgs antinicotine brigade has won a consolation prize the health and socialaffairs commissioner mrs vasso papandreou has promised to look at a ban in the future
# ::tok but strasbourgs antinicotine brigade has won a consolation prize the health and socialaffairs commissioner mrs vasso papandreou has promised to look at a ban in the future
# ::alignments 26-27|0.0.0.1.0.0 23-24|0.0.0.1.0 18-19|0.0.0.1 13-14|0.1.0+0.1 11-12|0.0.0 10-11|0.0.1 8-9|0.0.0.0 7-8|0.0.0.0.0 5-6|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:46.531
# ::node	0	contrast-01	0-1
# ::node	0.0	win-01	5-6
# ::node	0.0.0	and	11-12
# ::node	0.0.0.0	prize-01	8-9
# ::node	0.0.0.0.0	console-01	7-8
# ::node	0.0.0.1	promise-01	18-19
# ::node	0.0.0.1.0	ban-01	23-24
# ::node	0.0.0.1.0.0	future	26-27
# ::node	0.0.1	health	10-11
# ::node	0.1	have-org-role-91	13-14
# ::node	0.1.0	commissioner	13-14
# ::root	0	contrast-01
# ::edge	ban-01	ARG1	future	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	contrast-01	ARG1	win-01	0	0.0	
# ::edge	have-org-role-91	ARG1	contrast-01	0.1	0	
# ::edge	have-org-role-91	ARG2	commissioner	0.1	0.1.0	
# ::edge	prize-01	ARG0	and	0.0.0.0	0.0.0	
# ::edge	prize-01	ARG1	console-01	0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	ARG0	and	0.0.0.1	0.0.0	
# ::edge	promise-01	ARG1	ban-01	0.0.0.1	0.0.0.1.0	
# ::edge	win-01	ARG0	and	0.0	0.0.0	
# ::edge	win-01	ARG1	health	0.0	0.0.1	
(c3 / contrast-01 
      :ARG1 (w / win-01 
            :ARG0 (a / and 
                  :ARG0-of (p2 / prize-01 
                        :ARG1 (c2 / console-01)) 
                  :ARG0-of (p / promise-01 
                        :ARG1 (b / ban-01 
                              :ARG1 (f / future)))) 
            :ARG1 (h2 / health)) 
      :ARG1-of (h / have-org-role-91 
            :ARG2 (c / commissioner)))

# ::snt ravinder kumar founder of the iop promises to promote religious strife and caste conflict and makes a special pledge to encourage nepotism and assist its leaders to amass fortunes
# ::tok ravinder kumar founder of the iop promises to promote religious strife and caste conflict and makes a special pledge to encourage nepotism and assist its leaders to amass fortunes
# ::alignments 25-26|0.1.0.0+0.1.0 23-24|0.1 22-23|0 20-21|0.0 18-19|0.0.1 17-18|0.0.1.0 14-15|0.0.0.0.1 13-14|0.0.0.0.0.0.0 11-12|0.0.0.0.0.0 8-9|0.0.0.0.0 6-7|0.0.0.0 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:46.611
# ::node	0	and	22-23
# ::node	0.0	encourage-01	20-21
# ::node	0.0.0	found-01	2-3
# ::node	0.0.0.0	promise-01	6-7
# ::node	0.0.0.0.0	promote-02	8-9
# ::node	0.0.0.0.0.0	and	11-12
# ::node	0.0.0.0.0.0.0	conflict-01	13-14
# ::node	0.0.0.0.1	and	14-15
# ::node	0.0.1	pledge-01	18-19
# ::node	0.0.1.0	special	17-18
# ::node	0.1	assist-01	23-24
# ::node	0.1.0	person	25-26
# ::node	0.1.0.0	lead-02	25-26
# ::root	0	and
# ::edge	and	op1	encourage-01	0	0.0	
# ::edge	and	op1	promise-01	0.0.0.0.1	0.0.0.0	
# ::edge	and	op1	promote-02	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	and	op2	assist-01	0	0.1	
# ::edge	and	op2	conflict-01	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	assist-01	ARG1	person	0.1	0.1.0	
# ::edge	encourage-01	ARG1	found-01	0.0	0.0.0	
# ::edge	lead-02	ARG0	person	0.1.0.0	0.1.0	
# ::edge	pledge-01	ARG1	encourage-01	0.0.1	0.0	
# ::edge	pledge-01	mod	special	0.0.1	0.0.1.0	
# ::edge	promise-01	ARG0	found-01	0.0.0.0	0.0.0	
# ::edge	promise-01	ARG2	promote-02	0.0.0.0	0.0.0.0.0	
(a2 / and 
      :op1 (e / encourage-01 
            :ARG1 (f / found-01 
                  :ARG0-of (p4 / promise-01 
                        :ARG2 (p3 / promote-02 
                              :op-of (a4 / and 
                                    :op1 (c / conflict-01))) 
                        :op-of (a3 / and))) 
            :ARG1-of (p2 / pledge-01 
                  :mod (s / special))) 
      :op2 (a / assist-01 
            :ARG1 (p / person 
                  :ARG0-of (l / lead-02))))

# ::snt is modern living taking its toll on your complexion  no7 promises to smooth away signs of the times with its new extra care nurture 7
# ::tok is modern living taking its toll on your complexion no7 promises to smooth away signs of the times with its new extra care nurture 7
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:46.612
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the cseu therefore decided to target a small number of important factories and to promise members there unusually high levels of strike pay if they voted to come out
# ::tok the cseu therefore decided to target a small number of important factories and to promise members there unusually high levels of strike pay if they voted to come out
# ::alignments 25-26|0 24-25|0.0 22-23|0.1 21-22|0.1.0.0 19-20|0.1.0 18-19|0.0.0.0.1.0.1 17-18|0.0.0.0.1.0.2.0+0.0.0.0.1.0.2 15-16|0.0.0.0.1.0.0.0+0.0.0.0.1.0.0 14-15|0.0.0.0.1.0 12-13|0.0.0.0.1 11-12|0.0.0.0.0.1 10-11|0.0.0.0.0.1.0 8-9|0.0.0.0.0 7-8|0.0.0.0.0.0 5-6|0.0.0.0 3-4|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:46.757
# ::node	0	vote-01	25-26
# ::node	0.0	they	24-25
# ::node	0.0.0	decide-01	3-4
# ::node	0.0.0.0	target-01	5-6
# ::node	0.0.0.0.0	number	8-9
# ::node	0.0.0.0.0.0	small	7-8
# ::node	0.0.0.0.0.1	factory	11-12
# ::node	0.0.0.0.0.1.0	important	10-11
# ::node	0.0.0.0.1	and	12-13
# ::node	0.0.0.0.1.0	promise-01	14-15
# ::node	0.0.0.0.1.0.0	have-org-role-91	15-16
# ::node	0.0.0.0.1.0.0.0	member	15-16
# ::node	0.0.0.0.1.0.1	high	18-19
# ::node	0.0.0.0.1.0.2	usual	17-18
# ::node	0.0.0.0.1.0.2.0	-	17-18
# ::node	0.1	pay-01	22-23
# ::node	0.1.0	level	19-20
# ::node	0.1.0.0	strike-01	21-22
# ::root	0	vote-01
# ::edge	and	op1	target-01	0.0.0.0.1	0.0.0.0	
# ::edge	and	op2	promise-01	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	decide-01	ARG0	they	0.0.0	0.0	
# ::edge	decide-01	ARG1	target-01	0.0.0	0.0.0.0	
# ::edge	factory	mod	important	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	factory	quant	number	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	have-org-role-91	ARG0	promise-01	0.0.0.0.1.0.0	0.0.0.0.1.0	
# ::edge	have-org-role-91	ARG2	member	0.0.0.0.1.0.0	0.0.0.0.1.0.0.0	
# ::edge	level	mod	strike-01	0.1.0	0.1.0.0	
# ::edge	number	mod	small	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	pay-01	ARG0	level	0.1	0.1.0	
# ::edge	pay-01	time	vote-01	0.1	0	
# ::edge	promise-01	ARG1	high	0.0.0.0.1.0	0.0.0.0.1.0.1	
# ::edge	promise-01	mod	usual	0.0.0.0.1.0	0.0.0.0.1.0.2	
# ::edge	target-01	ARG1	number	0.0.0.0	0.0.0.0.0	
# ::edge	usual	polarity	-	0.0.0.0.1.0.2	0.0.0.0.1.0.2.0	
# ::edge	vote-01	ARG0	they	0	0.0	
(v / vote-01 
      :ARG0 (t / they 
            :ARG0-of (d / decide-01 
                  :ARG1 (t2 / target-01 
                        :ARG1 (n / number 
                              :mod (s2 / small) 
                              :quant-of (f / factory 
                                    :mod (i / important))) 
                        :op-of (a / and 
                              :op1 (p2 / promise-01 
                                    :ARG0-of (h2 / have-org-role-91 
                                          :ARG2 (m / member)) 
                                    :ARG1 (h / high) 
                                    :mod (u / usual 
                                          :polarity -)))))) 
      :time-of (p / pay-01 
            :ARG0 (l / level 
                  :mod (s / strike-01))))

# ::snt inaccuracies in pricing units are believed to have occurred and dumenils french parent has promised to make good any shortfall suffered by investors
# ::tok inaccuracies in pricing units are believed to have occurred and dumenils french parent has promised to make good any shortfall suffered by investors
# ::alignments 22-23|0.0.1.1.0.0.0+0.0.1.1.0.0 20-21|0.0.1.1.0 18-19|0.0.1.1.1 17-18|0.0.1.1 14-15|0.0.1 12-13|0.0.1.0 11-12|0.0.1.0.0.0.0+0.0.1.0.0.0+0.0.1.0.0 9-10|0 5-6|0.0 3-4|0.0.0 2-3|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:46.829
# ::node	0	and	9-10
# ::node	0.0	believe-01	5-6
# ::node	0.0.0	unit	3-4
# ::node	0.0.0.0	price-01	2-3
# ::node	0.0.1	promise-01	14-15
# ::node	0.0.1.0	parent	12-13
# ::node	0.0.1.0.0	country	11-12
# ::node	0.0.1.0.0.0	name	11-12
# ::node	0.0.1.0.0.0.0	"France"	11-12
# ::node	0.0.1.1	good	17-18
# ::node	0.0.1.1.0	suffer-01	20-21
# ::node	0.0.1.1.0.0	person	22-23
# ::node	0.0.1.1.0.0.0	invest-01	22-23
# ::node	0.0.1.1.1	any	18-19
# ::root	0	and
# ::edge	and	op1	believe-01	0	0.0	
# ::edge	any	degree	good	0.0.1.1.1	0.0.1.1	
# ::edge	believe-01	ARG1	unit	0.0	0.0.0	
# ::edge	country	name	name	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	invest-01	ARG0	person	0.0.1.1.0.0.0	0.0.1.1.0.0	
# ::edge	name	op1	"France"	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	parent	mod	country	0.0.1.0	0.0.1.0.0	
# ::edge	price-01	ARG0	unit	0.0.0.0	0.0.0	
# ::edge	promise-01	ARG0	parent	0.0.1	0.0.1.0	
# ::edge	promise-01	ARG1	good	0.0.1	0.0.1.1	
# ::edge	promise-01	ARG2	believe-01	0.0.1	0.0	
# ::edge	suffer-01	ARG0	person	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	suffer-01	ARG1	good	0.0.1.1.0	0.0.1.1	
(a2 / and 
      :op1 (b / believe-01 
            :ARG1 (u / unit 
                  :ARG0-of (p4 / price-01)) 
            :ARG2-of (p2 / promise-01 
                  :ARG0 (p3 / parent 
                        :mod (c / country 
                              :name (n / name 
                                    :op1 "France"))) 
                  :ARG1 (g / good 
                        :ARG1-of (s / suffer-01 
                              :ARG0 (p / person 
                                    :ARG0-of (i / invest-01))) 
                        :degree-of (a / any)))))

# ::snt albania relaxed its ban on foreign economic aid in may and its ruling party has promised to embark on a long overdue process of political relaxation
# ::tok albania relaxed its ban on foreign economic aid in may and its ruling party has promised to embark on a long overdue process of political relaxation
# ::alignments 25-26|0.0.0.1 24-25|0.0.0.1.0 22-23|0.0.0.1.1 15-16|0.2 13-14|0.2.0 12-13|0.2.0.0 10-11|0 9-10|0.1.0+0.1 7-8|0.0.0.0 6-7|0.0.0.0.0 5-6|0.0.0.0.0.0 3-4|0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:46.963
# ::node	0	and	10-11
# ::node	0.0	relax-01	1-2
# ::node	0.0.0	ban-01	3-4
# ::node	0.0.0.0	aid-01	7-8
# ::node	0.0.0.0.0	economy	6-7
# ::node	0.0.0.0.0.0	foreign	5-6
# ::node	0.0.0.1	relax-01	25-26
# ::node	0.0.0.1.0	politics	24-25
# ::node	0.0.0.1.1	process	22-23
# ::node	0.1	date-entity	9-10
# ::node	0.1.0	5	9-10
# ::node	0.2	promise-01	15-16
# ::node	0.2.0	party	13-14
# ::node	0.2.0.0	rule-03	12-13
# ::root	0	and
# ::edge	aid-01	mod	economy	0.0.0.0	0.0.0.0.0	
# ::edge	and	op1	relax-01	0	0.0	
# ::edge	and	op2	date-entity	0	0.1	
# ::edge	and	op3	promise-01	0	0.2	
# ::edge	ban-01	ARG1	aid-01	0.0.0	0.0.0.0	
# ::edge	date-entity	month	5	0.1	0.1.0	
# ::edge	economy	mod	foreign	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	process	purpose	relax-01	0.0.0.1.1	0.0.0.1	
# ::edge	promise-01	ARG0	party	0.2	0.2.0	
# ::edge	relax-01	ARG1	ban-01	0.0	0.0.0	
# ::edge	relax-01	ARG1	ban-01	0.0.0.1	0.0.0	
# ::edge	relax-01	mod	politics	0.0.0.1	0.0.0.1.0	
# ::edge	rule-03	ARG0	party	0.2.0.0	0.2.0	
(a / and 
      :op1 (r3 / relax-01 
            :ARG1 (b / ban-01 
                  :ARG1 (a2 / aid-01 
                        :mod (e / economy 
                              :mod (f / foreign))) 
                  :ARG1-of (r / relax-01 
                        :mod (p / politics) 
                        :purpose-of (p2 / process)))) 
      :op2 (d / date-entity 
            :month 5) 
      :op3 (p3 / promise-01 
            :ARG0 (p4 / party 
                  :ARG0-of (r2 / rule-03))))

# ::snt id be glad to hear from anyone who feels they would like to be a volunteer and i can promise many rewards from doing such a worthwhile job
# ::tok id be glad to hear from anyone who feels they would like to be a volunteer and i can promise many rewards from doing such a worthwhile job
# ::alignments 27-28|0.0.0.2.1 26-27|0.0.0.2.1.0.0 24-25|0.0.0.2.1.0 23-24|0.0.0.2 20-21|0.0.0.1.0.0 19-20|0.0.0 18-19|0 17-18|0.0.0.0 16-17|0.0 15-16|0.0.0.1.0 9-10|0.0.0.1 6-7|0.0.0.2.0 4-5|0.0.0.0.0 2-3|0.0.0.0.0.1 0-1|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:47.488
# ::node	0	possible	18-19
# ::node	0.0	and	16-17
# ::node	0.0.0	promise-01	19-20
# ::node	0.0.0.0	i	17-18
# ::node	0.0.0.0.0	hear-01	4-5
# ::node	0.0.0.0.0.0	id	0-1
# ::node	0.0.0.0.0.1	glad	2-3
# ::node	0.0.0.1	they	9-10
# ::node	0.0.0.1.0	volunteer-01	15-16
# ::node	0.0.0.1.0.0	many	20-21
# ::node	0.0.0.2	do-02	23-24
# ::node	0.0.0.2.0	anyone	6-7
# ::node	0.0.0.2.1	job	27-28
# ::node	0.0.0.2.1.0	such	24-25
# ::node	0.0.0.2.1.0.0	worthwhile	26-27
# ::root	0	possible
(p2 / possible 
      :op-of (a / and 
            :op1 (p / promise-01 
                  :ARG0 (i / i 
                        :ARG0-of (h / hear-01 
                              :ARG1 (i2 / id) 
                              :domain-of (g / glad))) 
                  :ARG1 (t / they 
                        :ARG0-of (v / volunteer-01 
                              :ARG1 (m / many))) 
                  :manner (d / do-02 
                        :ARG0 (a2 / anyone) 
                        :ARG1 (j / job 
                              :mod (s / such 
                                    :degree-of (w / worthwhile)))))))

# ::snt the iaaf medical committee chairman arne lundquist will read and report to his executive while britains sir arthur gold one of the most prominent activists against drug abuse has promised that the sports councils drug abuse group of which he is chairman will study the report
# ::tok the iaaf medical committee chairman arne lundquist will read and report to his executive while britains sir arthur gold one of the most prominent activists against drug abuse has promised that the sports councils drug abuse group of which he is chairman will study the report
# ::alignments 45-46|0.2.3.0.0.0.1.0 43-44|0.2.3.0.0.0.1 41-42|0.2.3.0.0.0.2.1+0.2.3.0.0.0.2 39-40|0.2.3.0.0.0.2.0 36-37|0.2.3.0.0.0 35-36|0.2.3.0.0.0.0 34-35|0.2.3.0.0.0.0.0 33-34|0.2.3.0.0 32-33|0.2.3.0.0.1 29-30|0.2.3.0 27-28|0.2 26-27|0.2.1 24-25|0.2.3 23-24|0.2.3.0.0.0.1.1.0 22-23|0.2.3.0.0.0.1.1 18-19|0.0.0 13-14|0.0.1 10-11|0.1 9-10|0 8-9|0.0 4-5|0.2.2.1+0.2.2 3-4|0.2.2.0 2-3|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:48.483
# ::node	0	and	9-10
# ::node	0.0	read-01	8-9
# ::node	0.0.0	gold	18-19
# ::node	0.0.1	executive	13-14
# ::node	0.1	report	10-11
# ::node	0.2	abuse-01	27-28
# ::node	0.2.0	medicine	2-3
# ::node	0.2.1	drug	26-27
# ::node	0.2.2	have-org-role-91	4-5
# ::node	0.2.2.0	committee	3-4
# ::node	0.2.2.1	chairman	4-5
# ::node	0.2.3	activist	24-25
# ::node	0.2.3.0	promise-01	29-30
# ::node	0.2.3.0.0	council	33-34
# ::node	0.2.3.0.0.0	group	36-37
# ::node	0.2.3.0.0.0.0	abuse-01	35-36
# ::node	0.2.3.0.0.0.0.0	drug	34-35
# ::node	0.2.3.0.0.0.1	study-01	43-44
# ::node	0.2.3.0.0.0.1.0	report	45-46
# ::node	0.2.3.0.0.0.1.1	most	22-23
# ::node	0.2.3.0.0.0.1.1.0	prominent	23-24
# ::node	0.2.3.0.0.0.2	have-org-role-91	41-42
# ::node	0.2.3.0.0.0.2.0	he	39-40
# ::node	0.2.3.0.0.0.2.1	chairman	41-42
# ::node	0.2.3.0.0.1	sport	32-33
# ::root	0	and
# ::edge	abuse-01	ARG0	group	0.2.3.0.0.0.0	0.2.3.0.0.0	
# ::edge	abuse-01	ARG0	medicine	0.2	0.2.0	
# ::edge	abuse-01	ARG1	drug	0.2	0.2.1	
# ::edge	abuse-01	ARG1	drug	0.2.3.0.0.0.0	0.2.3.0.0.0.0.0	
# ::edge	abuse-01	ARG2	have-org-role-91	0.2	0.2.2	
# ::edge	activist	topic	abuse-01	0.2.3	0.2	
# ::edge	and	op1	read-01	0	0.0	
# ::edge	and	op2	report	0	0.1	
# ::edge	and	op3	abuse-01	0	0.2	
# ::edge	council	beneficiary	group	0.2.3.0.0	0.2.3.0.0.0	
# ::edge	council	mod	sport	0.2.3.0.0	0.2.3.0.0.1	
# ::edge	have-org-role-91	ARG0	he	0.2.3.0.0.0.2	0.2.3.0.0.0.2.0	
# ::edge	have-org-role-91	ARG1	committee	0.2.2	0.2.2.0	
# ::edge	have-org-role-91	ARG1	group	0.2.3.0.0.0.2	0.2.3.0.0.0	
# ::edge	have-org-role-91	ARG2	chairman	0.2.2	0.2.2.1	
# ::edge	have-org-role-91	ARG2	chairman	0.2.3.0.0.0.2	0.2.3.0.0.0.2.1	
# ::edge	most	op1	study-01	0.2.3.0.0.0.1.1	0.2.3.0.0.0.1	
# ::edge	prominent	degree	most	0.2.3.0.0.0.1.1.0	0.2.3.0.0.0.1.1	
# ::edge	promise-01	ARG0	activist	0.2.3.0	0.2.3	
# ::edge	promise-01	ARG1	council	0.2.3.0	0.2.3.0.0	
# ::edge	read-01	ARG0	gold	0.0	0.0.0	
# ::edge	read-01	ARG1	executive	0.0	0.0.1	
# ::edge	study-01	ARG0	group	0.2.3.0.0.0.1	0.2.3.0.0.0	
# ::edge	study-01	ARG1	report	0.2.3.0.0.0.1	0.2.3.0.0.0.1.0	
(a4 / and 
      :op1 (r3 / read-01 
            :ARG0 (g2 / gold) 
            :ARG1 (e / executive)) 
      :op2 (r2 / report) 
      :op3 (a2 / abuse-01 
            :ARG0 (m2 / medicine) 
            :ARG1 (d2 / drug) 
            :ARG2 (h3 / have-org-role-91 
                  :ARG1 (c4 / committee) 
                  :ARG2 (c3 / chairman)) 
            :topic-of (a3 / activist 
                  :ARG0-of (p / promise-01 
                        :ARG1 (c2 / council 
                              :beneficiary (g / group 
                                    :ARG0-of (a / abuse-01 
                                          :ARG1 (d / drug)) 
                                    :ARG0-of (s / study-01 
                                          :ARG1 (r / report) 
                                          :op-of (m / most 
                                                :degree-of (p2 / prominent))) 
                                    :ARG1-of (h / have-org-role-91 
                                          :ARG0 (h2 / he) 
                                          :ARG2 (c / chairman))) 
                              :mod (s2 / sport))))))

# ::snt but last month the swedish government renewed a promise to close down the nuclear plants within 20 years this week 26 january
# ::tok but last month the swedish government renewed a promise to close down the nuclear plants within 20 years this week 26 january
# ::alignments 21-22|0.0.0+0.0 20-21|0.3.0 19-20|0.3.1.0 18-19|0.3.1.0.0 17-18|0.3.1.1.1.0.0.1+0.3.1.1.1.0.0 16-17|0.3.1.1.1.0.0.0 15-16|0.3.1.1.1.0 14-15|0.3.1.1.1 13-14|0.3.1.1.0 11-12|0.3.1.1 8-9|0.3.1 6-7|0.3 2-3|0.2.0+0.2 1-2|0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:48.810
# ::node	0	contrast-01	0-1
# ::node	0.0	date-entity	21-22
# ::node	0.0.0	1	21-22
# ::node	0.1	last	1-2
# ::node	0.2	temporal-quantity	2-3
# ::node	0.2.0	month	2-3
# ::node	0.3	renew-01	6-7
# ::node	0.3.0	26	20-21
# ::node	0.3.1	promise-01	8-9
# ::node	0.3.1.0	week	19-20
# ::node	0.3.1.0.0	this	18-19
# ::node	0.3.1.1	down	11-12
# ::node	0.3.1.1.0	nucleus	13-14
# ::node	0.3.1.1.1	plant	14-15
# ::node	0.3.1.1.1.0	within	15-16
# ::node	0.3.1.1.1.0.0	temporal-quantity	17-18
# ::node	0.3.1.1.1.0.0.0	20	16-17
# ::node	0.3.1.1.1.0.0.1	year	17-18
# ::root	0	contrast-01
# ::edge	contrast-01	ARG0	date-entity	0	0.0	
# ::edge	contrast-01	ARG1	last	0	0.1	
# ::edge	contrast-01	ARG2	temporal-quantity	0	0.2	
# ::edge	contrast-01	time	renew-01	0	0.3	
# ::edge	date-entity	month	1	0.0	0.0.0	
# ::edge	nucleus	mod	down	0.3.1.1.0	0.3.1.1	
# ::edge	plant	mod	down	0.3.1.1.1	0.3.1.1	
# ::edge	promise-01	ARG0	week	0.3.1	0.3.1.0	
# ::edge	promise-01	ARG1	down	0.3.1	0.3.1.1	
# ::edge	renew-01	ARG0	26	0.3	0.3.0	
# ::edge	renew-01	ARG1	promise-01	0.3	0.3.1	
# ::edge	temporal-quantity	quant	20	0.3.1.1.1.0.0	0.3.1.1.1.0.0.0	
# ::edge	temporal-quantity	unit	month	0.2	0.2.0	
# ::edge	temporal-quantity	unit	year	0.3.1.1.1.0.0	0.3.1.1.1.0.0.1	
# ::edge	week	mod	this	0.3.1.0	0.3.1.0.0	
# ::edge	within	op1	plant	0.3.1.1.1.0	0.3.1.1.1	
# ::edge	within	op2	temporal-quantity	0.3.1.1.1.0	0.3.1.1.1.0.0	
(c / contrast-01 
      :ARG0 (d / date-entity 
            :month 1) 
      :ARG1 (l / last) 
      :ARG2 (t3 / temporal-quantity 
            :unit (m / month)) 
      :time (r / renew-01 
            :ARG0 26 
            :ARG1 (p2 / promise-01 
                  :ARG0 (w / week 
                        :mod (t / this)) 
                  :ARG1 (d2 / down 
                        :mod-of (n / nucleus) 
                        :mod-of (p / plant 
                              :op-of (w2 / within 
                                    :op1 (t2 / temporal-quantity 
                                          :quant 20 
                                          :unit (y / year))))))))

# ::snt but the full easy strength of her dancing and the scale of her projection promise important things to come
# ::tok but the full easy strength of her dancing and the scale of her projection promise important things to come
# ::alignments 16-17|0.1.0.0 15-16|0.1.0.0.0 14-15|0.1.0 13-14|0.1.1.0 10-11|0.1.1 8-9|0.1 4-5|0.0 3-4|0.0.0 2-3|0.0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:48.880
# ::node	0	contrast-01	0-1
# ::node	0.0	strength	4-5
# ::node	0.0.0	easy	3-4
# ::node	0.0.1	full	2-3
# ::node	0.1	and	8-9
# ::node	0.1.0	promise-01	14-15
# ::node	0.1.0.0	thing	16-17
# ::node	0.1.0.0.0	important	15-16
# ::node	0.1.1	scale	10-11
# ::node	0.1.1.0	project-01	13-14
# ::root	0	contrast-01
# ::edge	and	op1	scale	0.1	0.1.1	
# ::edge	contrast-01	ARG1	strength	0	0.0	
# ::edge	contrast-01	ARG2	and	0	0.1	
# ::edge	promise-01	ARG0	and	0.1.0	0.1	
# ::edge	promise-01	ARG1	thing	0.1.0	0.1.0.0	
# ::edge	scale	poss	project-01	0.1.1	0.1.1.0	
# ::edge	strength	mod	easy	0.0	0.0.0	
# ::edge	strength	mod	full	0.0	0.0.1	
# ::edge	thing	mod	important	0.1.0.0	0.1.0.0.0	
(c / contrast-01 
      :ARG1 (s2 / strength 
            :mod (e / easy) 
            :mod (f / full)) 
      :ARG2 (a / and 
            :ARG0-of (p / promise-01 
                  :ARG1 (t / thing 
                        :mod (i / important))) 
            :op1 (s / scale 
                  :poss (p2 / project-01))))

# ::snt i promise you if youll pardon the expression coming from me that you wont regret it
# ::tok i promise you if youll pardon the expression coming from me that you wont regret it
# ::alignments 15-16|0.1 14-15|0 12-13|0.0 7-8|0.2 5-6|0.2.0.2 2-3|0.2.0.1 1-2|0.2.0 0-1|0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:48.931
# ::node	0	regret-01	14-15
# ::node	0.0	you	12-13
# ::node	0.1	it	15-16
# ::node	0.2	express-01	7-8
# ::node	0.2.0	promise-01	1-2
# ::node	0.2.0.0	i	0-1
# ::node	0.2.0.1	you	2-3
# ::node	0.2.0.2	pardon	5-6
# ::root	0	regret-01
# ::edge	express-01	ARG1	regret-01	0.2	0	
# ::edge	promise-01	ARG0	i	0.2.0	0.2.0.0	
# ::edge	promise-01	ARG1	you	0.2.0	0.2.0.1	
# ::edge	promise-01	ARG2	express-01	0.2.0	0.2	
# ::edge	promise-01	time	pardon	0.2.0	0.2.0.2	
# ::edge	regret-01	ARG0	you	0	0.0	
# ::edge	regret-01	ARG1	it	0	0.1	
(r / regret-01 
      :ARG0 (y / you) 
      :ARG1 (i / it) 
      :ARG1-of (e / express-01 
            :ARG2-of (p2 / promise-01 
                  :ARG0 (i2 / i) 
                  :ARG1 (y2 / you) 
                  :time (p / pardon))))

# ::snt the portuguese authorities had promised to hear ferraris appeal against the fine next wednesday after which the fia the international automobile federation was due to reach a decision on ferraris appeal over mansells ban from the spanish grand prix which was staged on 1 october
# ::tok the portuguese authorities had promised to hear ferraris appeal against the fine next wednesday after which the fia the international automobile federation was due to reach a decision on ferraris appeal over mansells ban from the spanish grand prix which was staged on 1 october
# ::alignments 44-45|0.0.0.0.0+0.0.0.0 43-44|0.0.0.0.1 41-42|0.0.1.0.1 37-38|0 36-37|0.0.1.1.0.1.0.0.0+0.0.1.1.0.1.0.0+0.0.1.1.0.1.0 33-34|0.0.1.0 30-31|0.0.1 27-28|0.0 25-26|0.0.0 20-21|0.0.1.0.1.0 19-20|0.0.1.0.1.0.0 14-15|0.0.1.1 12-13|0.0.1.0.0 11-12|0.0.1.1.0.1.1 8-9|0.0.1.1.0.1 6-7|0.0.1.1.0 4-5|0.0.1.1.0.2 2-3|0.0.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:49.499
# ::node	0	grand	37-38
# ::node	0.0	decide-01	27-28
# ::node	0.0.0	reach-01	25-26
# ::node	0.0.0.0	date-entity	44-45
# ::node	0.0.0.0.0	10	44-45
# ::node	0.0.0.0.1	1	43-44
# ::node	0.0.1	appeal-02	30-31
# ::node	0.0.1.0	ban-01	33-34
# ::node	0.0.1.0.0	next	12-13
# ::node	0.0.1.0.1	stage-01	41-42
# ::node	0.0.1.0.1.0	automobile	20-21
# ::node	0.0.1.0.1.0.0	international	19-20
# ::node	0.0.1.1	after	14-15
# ::node	0.0.1.1.0	hear-01	6-7
# ::node	0.0.1.1.0.0	authority	2-3
# ::node	0.0.1.1.0.1	appeal-02	8-9
# ::node	0.0.1.1.0.1.0	language	36-37
# ::node	0.0.1.1.0.1.0.0	name	36-37
# ::node	0.0.1.1.0.1.0.0.0	"Spanish"	36-37
# ::node	0.0.1.1.0.1.1	fine	11-12
# ::node	0.0.1.1.0.2	promise-01	4-5
# ::root	0	grand
(g / grand 
      :ARG1-of (d2 / decide-01 
            :ARG1-of (r / reach-01 
                  :ARG0 (d / date-entity 
                        :month 10 
                        :quant 1)) 
            :ARG2-of (a / appeal-02 
                  :ARG1 (b / ban-01 
                        :ARG0 (n2 / next) 
                        :ARG2-of (s / stage-01 
                              :op-of (a2 / automobile 
                                    :mod (i / international)))) 
                  :time (a3 / after 
                        :time-of (h / hear-01 
                              :ARG0 (a5 / authority) 
                              :ARG1 (a4 / appeal-02 
                                    :ARG0 (l / language 
                                          :name (n / name 
                                                :op1 "Spanish")) 
                                    :ARG1 (f / fine)) 
                              :ARG2-of (p / promise-01))))))

# ::snt its going to be a yard long i promise you
# ::tok its going to be a yard long i promise you
# ::alignments 9-10|0.1 8-9|0 7-8|0.0 5-6|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:49.548
# ::node	0	promise-01	8-9
# ::node	0.0	i	7-8
# ::node	0.0.0	yard	5-6
# ::node	0.1	you	9-10
# ::root	0	promise-01
# ::edge	i	condition	yard	0.0	0.0.0	
# ::edge	promise-01	ARG0	i	0	0.0	
# ::edge	promise-01	ARG1	you	0	0.1	
(p / promise-01 
      :ARG0 (i / i 
            :condition (y2 / yard)) 
      :ARG1 (y / you))

# ::snt negotiators for the polytechnics have retaliated by promising to get tough to protect students by possibly bringing in local deals
# ::tok negotiators for the polytechnics have retaliated by promising to get tough to protect students by possibly bringing in local deals
# ::alignments 19-20|0.0.0 18-19|0.0.0.0 16-17|0.0 15-16|0 13-14|0.0.1.0.0+0.0.1.0 12-13|0.0.1 10-11|0.0.1.1 7-8|0.0.1.1.0 5-6|0.0.1.1.0.0 0-1|0.0.1.1.0.0.0.0+0.0.1.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:49.614
# ::node	0	possible	15-16
# ::node	0.0	bring-01	16-17
# ::node	0.0.0	deal-01	19-20
# ::node	0.0.0.0	local	18-19
# ::node	0.0.1	protect-01	12-13
# ::node	0.0.1.0	person	13-14
# ::node	0.0.1.0.0	study-01	13-14
# ::node	0.0.1.1	tough	10-11
# ::node	0.0.1.1.0	promise-01	7-8
# ::node	0.0.1.1.0.0	retaliate-01	5-6
# ::node	0.0.1.1.0.0.0	person	0-1
# ::node	0.0.1.1.0.0.0.0	negotiate-01	0-1
# ::root	0	possible
(p / possible 
      :mod-of (b / bring-01 
            :ARG2 (d / deal-01 
                  :mod (l / local)) 
            :manner-of (p3 / protect-01 
                  :ARG1 (p2 / person 
                        :ARG0-of (s / study-01)) 
                  :mod (t / tough 
                        :ARG1-of (p4 / promise-01 
                              :ARG1-of (r / retaliate-01 
                                    :ARG0 (p5 / person 
                                          :ARG0-of (n / negotiate-01))))))))

# ::snt mr deng has repeatedly promised to retire in recent years but yesterday was the first time he had reissued the pledge since the tiananmen square massacre and a shakeup of the party leadership
# ::tok mr deng has repeatedly promised to retire in recent years but yesterday was the first time he had reissued the pledge since the tiananmen square massacre and a shakeup of the party leadership
# ::alignments 31-32|0.1.0.0 26-27|0.2 25-26|0.1 24-25|0.1.0 21-22|0.1.1 20-21|0 16-17|0.0 15-16|0.2.0.0.1 11-12|0.2.0.0.0 10-11|0.2.0.0 9-10|0.2.0.1.0.1+0.2.0.1.0 8-9|0.2.0.1.0.0 6-7|0.2.0 4-5|0.2.0.1 3-4|0.2.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:49.931
# ::node	0	pledge-01	20-21
# ::node	0.0	he	16-17
# ::node	0.1	massacre-01	25-26
# ::node	0.1.0	square	24-25
# ::node	0.1.0.0	party	31-32
# ::node	0.1.1	since	21-22
# ::node	0.2	and	26-27
# ::node	0.2.0	retire-01	6-7
# ::node	0.2.0.0	contrast-01	10-11
# ::node	0.2.0.0.0	yesterday	11-12
# ::node	0.2.0.0.1	time	15-16
# ::node	0.2.0.1	promise-01	4-5
# ::node	0.2.0.1.0	temporal-quantity	9-10
# ::node	0.2.0.1.0.0	recent	8-9
# ::node	0.2.0.1.0.1	year	9-10
# ::node	0.2.0.1.1	repeat-01	3-4
# ::root	0	pledge-01
# ::edge	and	op1	pledge-01	0.2	0	
# ::edge	contrast-01	ARG0	yesterday	0.2.0.0	0.2.0.0.0	
# ::edge	contrast-01	ARG2	time	0.2.0.0	0.2.0.0.1	
# ::edge	massacre-01	mod	square	0.1	0.1.0	
# ::edge	party	mod	square	0.1.0.0	0.1.0	
# ::edge	pledge-01	ARG0	he	0	0.0	
# ::edge	pledge-01	ARG1	massacre-01	0	0.1	
# ::edge	promise-01	ARG1	temporal-quantity	0.2.0.1	0.2.0.1.0	
# ::edge	promise-01	ARG2	retire-01	0.2.0.1	0.2.0	
# ::edge	repeat-01	ARG1	promise-01	0.2.0.1.1	0.2.0.1	
# ::edge	retire-01	ARG0	contrast-01	0.2.0	0.2.0.0	
# ::edge	retire-01	ARG1	and	0.2.0	0.2	
# ::edge	since	op1	massacre-01	0.1.1	0.1	
# ::edge	temporal-quantity	time	recent	0.2.0.1.0	0.2.0.1.0.0	
# ::edge	temporal-quantity	unit	year	0.2.0.1.0	0.2.0.1.0.1	
(p2 / pledge-01 
      :ARG0 (h / he) 
      :ARG1 (m / massacre-01 
            :mod (s / square 
                  :mod-of (p / party)) 
            :op-of (s2 / since)) 
      :op-of (a / and 
            :ARG1-of (r2 / retire-01 
                  :ARG0 (c / contrast-01 
                        :ARG0 (y / yesterday) 
                        :ARG2 (t / time)) 
                  :ARG2-of (p3 / promise-01 
                        :ARG1 (t2 / temporal-quantity 
                              :time (r / recent) 
                              :unit (y2 / year)) 
                        :ARG1-of (r3 / repeat-01)))))

# ::snt although nigel lawson promised in washington that we would do more
# ::tok although nigel lawson promised in washington that we would do more
# ::alignments 7-8|0.0 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:49.938
# ::node	0	promise-01	3-4
# ::node	0.0	we	7-8
# ::root	0	promise-01
(p / promise-01 
      :condition-of (w / we))

# ::snt we shall take the issue to all international forums he promised
# ::tok we shall take the issue to all international forums he promised
# ::alignments 10-11|0.0 9-10|0.0.0 8-9|0.0.1 7-8|0.0.1.0 6-7|0.0.1.1 4-5|0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:50.042
# ::node	0	issue	4-5
# ::node	0.0	promise-01	10-11
# ::node	0.0.0	he	9-10
# ::node	0.0.1	forum	8-9
# ::node	0.0.1.0	international	7-8
# ::node	0.0.1.1	all	6-7
# ::node	0.1	we	0-1
# ::root	0	issue
# ::edge	forum	mod	international	0.0.1	0.0.1.0	
# ::edge	forum	quant	all	0.0.1	0.0.1.1	
# ::edge	issue	name	we	0	0.1	
# ::edge	promise-01	ARG0	he	0.0	0.0.0	
# ::edge	promise-01	ARG1	issue	0.0	0	
# ::edge	promise-01	ARG2	forum	0.0	0.0.1	
(i2 / issue 
      :ARG1-of (p / promise-01 
            :ARG0 (h / he) 
            :ARG2 (f / forum 
                  :mod (i / international) 
                  :quant (a / all))) 
      :name (w / we))

# ::snt the citys social welfare department has promised the 13000 or more people who live on the dump loans to set up their own businesses
# ::tok the citys social welfare department has promised the 13000 or more people who live on the dump loans to set up their own businesses
# ::alignments 23-24|0.0.0.0 17-18|0.0.0.2 13-14|0.0.0 9-10|0.0.0.1 8-9|0.0.0.1.0 6-7|0 4-5|0.0 3-4|0.0.1 2-3|0.0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:50.104
# ::node	0	promise-01	6-7
# ::node	0.0	department	4-5
# ::node	0.0.0	live-01	13-14
# ::node	0.0.0.0	business	23-24
# ::node	0.0.0.1	or	9-10
# ::node	0.0.0.1.0	13000	8-9
# ::node	0.0.0.2	loan-01	17-18
# ::node	0.0.0.2.0	society	2-3
# ::node	0.0.1	welfare	3-4
# ::root	0	promise-01
# ::edge	department	mod	welfare	0.0	0.0.1	
# ::edge	live-01	ARG0	department	0.0.0	0.0	
# ::edge	live-01	ARG1	business	0.0.0	0.0.0.0	
# ::edge	live-01	location	or	0.0.0	0.0.0.1	
# ::edge	live-01	manner	loan-01	0.0.0	0.0.0.2	
# ::edge	loan-01	ARG0	society	0.0.0.2	0.0.0.2.0	
# ::edge	or	op1	13000	0.0.0.1	0.0.0.1.0	
# ::edge	promise-01	ARG0	department	0	0.0	
(p / promise-01 
      :ARG0 (d / department 
            :ARG0-of (l2 / live-01 
                  :ARG1 (b / business) 
                  :location (o / or 
                        :op1 13000) 
                  :manner (l / loan-01 
                        :ARG0 (s / society))) 
            :mod (w / welfare)))

# ::snt mr ozals popularity has slumped since he first won office in 1983 when he promised an economic miracle
# ::tok mr ozals popularity has slumped since he first won office in 1983 when he promised an economic miracle
# ::alignments 16-17|0.0 14-15|0.2.0.0.0 13-14|0.2.0.0.0.0 11-12|0.2.0.2.0+0.2.0.2 9-10|0.2.0.1 8-9|0.2.0 6-7|0.2.0.0 5-6|0.2 4-5|0 2-3|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:50.162
# ::node	0	slump-01	4-5
# ::node	0.0	economy	16-17
# ::node	0.1	popularity	2-3
# ::node	0.2	since	5-6
# ::node	0.2.0	win-01	8-9
# ::node	0.2.0.0	he	6-7
# ::node	0.2.0.0.0	promise-01	14-15
# ::node	0.2.0.0.0.0	he	13-14
# ::node	0.2.0.1	office	9-10
# ::node	0.2.0.2	date-entity	11-12
# ::node	0.2.0.2.0	1983	11-12
# ::root	0	slump-01
# ::edge	date-entity	year	1983	0.2.0.2	0.2.0.2.0	
# ::edge	promise-01	ARG0	he	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	promise-01	ARG1	he	0.2.0.0.0	0.2.0.0	
# ::edge	since	op1	win-01	0.2	0.2.0	
# ::edge	slump-01	ARG0	economy	0	0.0	
# ::edge	slump-01	ARG1	popularity	0	0.1	
# ::edge	slump-01	time	since	0	0.2	
# ::edge	win-01	ARG0	he	0.2.0	0.2.0.0	
# ::edge	win-01	ARG1	office	0.2.0	0.2.0.1	
# ::edge	win-01	time	date-entity	0.2.0	0.2.0.2	
(s2 / slump-01 
      :ARG0 (e / economy) 
      :ARG1 (p2 / popularity) 
      :time (s / since 
            :op1 (w / win-01 
                  :ARG0 (h2 / he 
                        :ARG1-of (p / promise-01 
                              :ARG0 (h / he))) 
                  :ARG1 (o / office) 
                  :time (d / date-entity 
                        :year 1983))))

# ::snt agassi had clearly been expecting to meet muster who would have been a much more predictable opponent than gomez but promised the lefthander and fourth seed a long hard afternoon
# ::tok agassi had clearly been expecting to meet muster who would have been a much more predictable opponent than gomez but promised the lefthander and fourth seed a long hard afternoon
# ::alignments 29-30|0.0.0.1.0 28-29|0.0.0.1 25-26|0.1.1.0 24-25|0.1.1.0.0 23-24|0.1.1 20-21|0.1 19-20|0 16-17|0.1.0.0+0.1.0 13-14|0.0.0.0 7-8|0.0.0 4-5|0.0 2-3|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:50.330
# ::node	0	contrast-01	19-20
# ::node	0.0	expect-01	4-5
# ::node	0.0.0	muster-01	7-8
# ::node	0.0.0.0	much	13-14
# ::node	0.0.0.1	hard	28-29
# ::node	0.0.0.1.0	afternoon	29-30
# ::node	0.0.1	clear	2-3
# ::node	0.1	promise-01	20-21
# ::node	0.1.0	person	16-17
# ::node	0.1.0.0	oppose-01	16-17
# ::node	0.1.1	and	23-24
# ::node	0.1.1.0	seed	25-26
# ::node	0.1.1.0.0	fourth	24-25
# ::root	0	contrast-01
# ::edge	afternoon	mod	hard	0.0.0.1.0	0.0.0.1	
# ::edge	and	op1	promise-01	0.1.1	0.1	
# ::edge	and	op2	seed	0.1.1	0.1.1.0	
# ::edge	contrast-01	ARG1	expect-01	0	0.0	
# ::edge	contrast-01	ARG2	promise-01	0	0.1	
# ::edge	expect-01	ARG1	muster-01	0.0	0.0.0	
# ::edge	expect-01	mod	clear	0.0	0.0.1	
# ::edge	muster-01	ARG0	much	0.0.0	0.0.0.0	
# ::edge	muster-01	ARG1	hard	0.0.0	0.0.0.1	
# ::edge	oppose-01	ARG0	person	0.1.0.0	0.1.0	
# ::edge	promise-01	ARG1	person	0.1	0.1.0	
# ::edge	seed	mod	fourth	0.1.1.0	0.1.1.0.0	
(c / contrast-01 
      :ARG1 (e / expect-01 
            :ARG1 (m2 / muster-01 
                  :ARG0 (m / much) 
                  :ARG1 (h / hard 
                        :mod-of (a / afternoon))) 
            :mod (c2 / clear)) 
      :ARG2 (p / promise-01 
            :ARG1 (p2 / person 
                  :ARG0-of (o / oppose-01)) 
            :op-of (a2 / and 
                  :op1 (s / seed 
                        :mod (f / fourth)))))

# ::snt neville green grown plumper and bluechinned called early as he had promised
# ::tok neville green grown plumper and bluechinned called early as he had promised
# ::alignments 11-12|0.1 9-10|0.1.0 7-8|0.2 4-5|0 2-3|0.0 1-2|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:50.402
# ::node	0	and	4-5
# ::node	0.0	grow-03	2-3
# ::node	0.1	promise-01	11-12
# ::node	0.1.0	he	9-10
# ::node	0.1.1	green	1-2
# ::node	0.2	early	7-8
# ::root	0	and
# ::edge	and	op1	early	0	0.2	
# ::edge	grow-03	ARG1	and	0.0	0	
# ::edge	promise-01	ARG0	he	0.1	0.1.0	
# ::edge	promise-01	ARG1	green	0.1	0.1.1	
# ::edge	promise-01	ARG2	and	0.1	0	
(a / and 
      :ARG1-of (g / grow-03) 
      :ARG2-of (p / promise-01 
            :ARG0 (h / he) 
            :ARG1 (g2 / green)) 
      :op1 (e / early))

# ::snt the bush administration promised that heads would roll
# ::tok the bush administration promised that heads would roll
# ::alignments 7-8|0.1 3-4|0 2-3|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:50.442
# ::node	0	promise-01	3-4
# ::node	0.0	administrate-01	2-3
# ::node	0.0.0	bush-league	1-2
# ::node	0.1	roll	7-8
# ::root	0	promise-01
# ::edge	administrate-01	mod	bush-league	0.0	0.0.0	
# ::edge	promise-01	ARG0	administrate-01	0	0.0	
# ::edge	promise-01	ARG1	roll	0	0.1	
(p / promise-01 
      :ARG0 (a / administrate-01 
            :mod (b / bush-league)) 
      :ARG1 (r / roll))

# ::snt the smiths never forgot the debt they owed to john peel and promised to repay some day
# ::tok the smiths never forgot the debt they owed to john peel and promised to repay some day
# ::alignments 16-17|0.1.0.0 15-16|0.1.0.0.0 14-15|0.1.0 12-13|0.1 11-12|0 7-8|0.0.0.0 6-7|0.0.0.0.0 5-6|0.0.0 3-4|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:50.478
# ::node	0	and	11-12
# ::node	0.0	forget-01	3-4
# ::node	0.0.0	debt	5-6
# ::node	0.0.0.0	owe-01	7-8
# ::node	0.0.0.0.0	they	6-7
# ::node	0.1	promise-01	12-13
# ::node	0.1.0	repay-01	14-15
# ::node	0.1.0.0	day	16-17
# ::node	0.1.0.0.0	some	15-16
# ::root	0	and
# ::edge	and	op1	forget-01	0	0.0	
# ::edge	and	op2	promise-01	0	0.1	
# ::edge	day	quant	some	0.1.0.0	0.1.0.0.0	
# ::edge	forget-01	ARG1	debt	0.0	0.0.0	
# ::edge	owe-01	ARG0	they	0.0.0.0	0.0.0.0.0	
# ::edge	owe-01	ARG1	debt	0.0.0.0	0.0.0	
# ::edge	promise-01	ARG2	repay-01	0.1	0.1.0	
# ::edge	repay-01	time	day	0.1.0	0.1.0.0	
(a / and 
      :op1 (f / forget-01 
            :ARG1 (d2 / debt 
                  :ARG1-of (o / owe-01 
                        :ARG0 (t / they)))) 
      :op2 (p / promise-01 
            :ARG2 (r / repay-01 
                  :time (d / day 
                        :quant (s / some)))))

# ::snt six months and we can leave all this behind us i promise you
# ::tok six months and we can leave all this behind us i promise you
# ::alignments 12-13|0.1 11-12|0 10-11|0.0 8-9|0.2 7-8|0.2.1 6-7|0.2.1.0 5-6|0.2.0 4-5|0.2.0.1 3-4|0.2.0.0 2-3|0.2.0.2 1-2|0.2.0.0.0.1+0.2.0.0.0 0-1|0.2.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:50.716
# ::node	0	promise-01	11-12
# ::node	0.0	i	10-11
# ::node	0.1	you	12-13
# ::node	0.2	behind	8-9
# ::node	0.2.0	leave-01	5-6
# ::node	0.2.0.0	we	3-4
# ::node	0.2.0.0.0	temporal-quantity	1-2
# ::node	0.2.0.0.0.0	6	0-1
# ::node	0.2.0.0.0.1	month	1-2
# ::node	0.2.0.1	possible	4-5
# ::node	0.2.0.2	and	2-3
# ::node	0.2.1	this	7-8
# ::node	0.2.1.0	all	6-7
# ::root	0	promise-01
# ::edge	and	op1	leave-01	0.2.0.2	0.2.0	
# ::edge	behind	mod	this	0.2	0.2.1	
# ::edge	leave-01	ARG1	we	0.2.0	0.2.0.0	
# ::edge	leave-01	location	behind	0.2.0	0.2	
# ::edge	possible	domain	leave-01	0.2.0.1	0.2.0	
# ::edge	promise-01	ARG0	i	0	0.0	
# ::edge	promise-01	ARG1	you	0	0.1	
# ::edge	promise-01	ARG2	behind	0	0.2	
# ::edge	temporal-quantity	mod	we	0.2.0.0.0	0.2.0.0	
# ::edge	temporal-quantity	quant	6	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	temporal-quantity	unit	month	0.2.0.0.0	0.2.0.0.0.1	
# ::edge	this	mod	all	0.2.1	0.2.1.0	
(p / promise-01 
      :ARG0 (i / i) 
      :ARG1 (y / you) 
      :ARG2 (b / behind 
            :location-of (l / leave-01 
                  :ARG1 (w / we 
                        :mod-of (t2 / temporal-quantity 
                              :quant 6 
                              :unit (m / month))) 
                  :domain-of (p2 / possible) 
                  :op-of (a2 / and)) 
            :mod (t / this 
                  :mod (a / all))))

# ::snt he came back in a trice with what promised to be a ph
# ::tok he came back in a trice with what promised to be a ph
# ::alignments 8-9|0 2-3|0.1 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:50.726
# ::node	0	promise-01	8-9
# ::node	0.0	he	0-1
# ::node	0.1	back	2-3
# ::root	0	promise-01
# ::edge	promise-01	ARG0	he	0	0.0	
# ::edge	promise-01	ARG1	back	0	0.1	
(p / promise-01 
      :ARG0 (h / he) 
      :ARG1 (b / back))

# ::snt to take some of the sting out of what was unmistakably a defeat for traditional nationalism provisions were included promising equality of esteem and a collective recognition of the legitimacy of nationalism
# ::tok to take some of the sting out of what was unmistakably a defeat for traditional nationalism provisions were included promising equality of esteem and a collective recognition of the legitimacy of nationalism
# ::alignments 31-32|0.1.0 29-30|0.1 26-27|0 25-26|0.2 23-24|0.3 20-21|0.3.0.0.1 19-20|0.3.0.0 18-19|0.3.0 16-17|0.3.0.0.0.0 15-16|0.3.0.0.0.0.0 14-15|0.3.0.0.0.0.1 12-13|0.3.0.0.0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:51.037
# ::node	0	recognize-01	26-27
# ::node	0.0	some	2-3
# ::node	0.1	legitimacy	29-30
# ::node	0.1.0	nationalism	31-32
# ::node	0.2	collective	25-26
# ::node	0.3	and	23-24
# ::node	0.3.0	include-01	18-19
# ::node	0.3.0.0	promise-01	19-20
# ::node	0.3.0.0.0	defeat-01	12-13
# ::node	0.3.0.0.0.0	provision	16-17
# ::node	0.3.0.0.0.0.0	nationalism	15-16
# ::node	0.3.0.0.0.0.1	tradition	14-15
# ::node	0.3.0.0.1	equal-01	20-21
# ::root	0	recognize-01
# ::edge	and	op1	recognize-01	0.3	0	
# ::edge	defeat-01	ARG1	provision	0.3.0.0.0	0.3.0.0.0.0	
# ::edge	include-01	ARG1	promise-01	0.3.0	0.3.0.0	
# ::edge	include-01	location	and	0.3.0	0.3	
# ::edge	legitimacy	mod	nationalism	0.1	0.1.0	
# ::edge	promise-01	ARG1	defeat-01	0.3.0.0	0.3.0.0.0	
# ::edge	promise-01	ARG2	equal-01	0.3.0.0	0.3.0.0.1	
# ::edge	provision	mod	nationalism	0.3.0.0.0.0	0.3.0.0.0.0.0	
# ::edge	provision	mod	tradition	0.3.0.0.0.0	0.3.0.0.0.0.1	
# ::edge	recognize-01	ARG0	some	0	0.0	
# ::edge	recognize-01	ARG1	legitimacy	0	0.1	
# ::edge	recognize-01	mod	collective	0	0.2	
(r / recognize-01 
      :ARG0 (s / some) 
      :ARG1 (l / legitimacy 
            :mod (n / nationalism)) 
      :mod (c / collective) 
      :op-of (a / and 
            :location-of (i / include-01 
                  :ARG1 (p / promise-01 
                        :ARG1 (d / defeat-01 
                              :ARG1 (p2 / provision 
                                    :mod (n2 / nationalism) 
                                    :mod (t / tradition))) 
                        :ARG2 (e / equal-01)))))

# ::snt hadnt there been a family only recently who had come across a stradivarius cello in their cellar and sold it for a fortune my father should clear up our attic as he kept promising one never knew what one might find
# ::tok hadnt there been a family only recently who had come across a stradivarius cello in their cellar and sold it for a fortune my father should clear up our attic as he kept promising one never knew what one might find
# ::alignments 36-37|0 33-34|0.0.0 32-33|0.0.1 31-32|0.0 26-27|0.0.1.1.1 25-26|0.0.1.1 24-25|0.0.1.1.2.2+0.0.1.1.2 22-23|0.0.1.1.2.1 19-20|0.0.1.1.2.1.0.0 18-19|0.0.1.1.2.1.0 17-18|0.0.1.1.2.1.0.1 10-11|0.0.1.0 6-7|0.0.1.1.2.0 5-6|0.0.1.1.2.0.0 4-5|0.0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:51.376
# ::node	0	know-01	36-37
# ::node	0.0	he	31-32
# ::node	0.0.0	promise-01	33-34
# ::node	0.0.1	keep-01	32-33
# ::node	0.0.1.0	across	10-11
# ::node	0.0.1.1	recommend-01	25-26
# ::node	0.0.1.1.0	family	4-5
# ::node	0.0.1.1.1	clear	26-27
# ::node	0.0.1.1.2	have-rel-role-91	24-25
# ::node	0.0.1.1.2.0	recent	6-7
# ::node	0.0.1.1.2.0.0	only	5-6
# ::node	0.0.1.1.2.1	fortune	22-23
# ::node	0.0.1.1.2.1.0	sell-01	18-19
# ::node	0.0.1.1.2.1.0.0	it	19-20
# ::node	0.0.1.1.2.1.0.1	and	17-18
# ::node	0.0.1.1.2.2	father	24-25
# ::root	0	know-01
# ::edge	and	op1	sell-01	0.0.1.1.2.1.0.1	0.0.1.1.2.1.0	
# ::edge	have-rel-role-91	ARG0	recent	0.0.1.1.2	0.0.1.1.2.0	
# ::edge	have-rel-role-91	ARG1	fortune	0.0.1.1.2	0.0.1.1.2.1	
# ::edge	have-rel-role-91	ARG2	father	0.0.1.1.2	0.0.1.1.2.2	
# ::edge	keep-01	ARG0	he	0.0.1	0.0	
# ::edge	keep-01	ARG1	across	0.0.1	0.0.1.0	
# ::edge	know-01	ARG0	he	0	0.0	
# ::edge	promise-01	ARG0	he	0.0.0	0.0	
# ::edge	recent	mod	only	0.0.1.1.2.0	0.0.1.1.2.0.0	
# ::edge	recommend-01	ARG0	family	0.0.1.1	0.0.1.1.0	
# ::edge	recommend-01	ARG1	clear	0.0.1.1	0.0.1.1.1	
# ::edge	recommend-01	ARG2	have-rel-role-91	0.0.1.1	0.0.1.1.2	
# ::edge	recommend-01	condition	keep-01	0.0.1.1	0.0.1	
# ::edge	sell-01	ARG1	it	0.0.1.1.2.1.0	0.0.1.1.2.1.0.0	
# ::edge	sell-01	time	fortune	0.0.1.1.2.1.0	0.0.1.1.2.1	
(k / know-01 
      :ARG0 (h / he 
            :ARG0-of (p / promise-01) 
            :ARG0-of (k2 / keep-01 
                  :ARG1 (a2 / across) 
                  :condition-of (r / recommend-01 
                        :ARG0 (f3 / family) 
                        :ARG1 (c / clear) 
                        :ARG2 (h2 / have-rel-role-91 
                              :ARG0 (r2 / recent 
                                    :mod (o / only)) 
                              :ARG1 (f2 / fortune 
                                    :time-of (s / sell-01 
                                          :ARG1 (i / it) 
                                          :op-of (a / and))) 
                              :ARG2 (f / father))))))

# ::snt benns adviser ambrose mendy said yesterday promoter bob arum has promised nigel a fight with the winner of the duransugar ray leonard fight in december
# ::tok benns adviser ambrose mendy said yesterday promoter bob arum has promised nigel a fight with the winner of the duransugar ray leonard fight in december
# ::alignments 24-25|0.1.1.0.0+0.1.1.0 22-23|0.1.1 13-14|0.1.0 10-11|0.1 5-6|0.2 4-5|0 1-2|0.0.0+0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:51.444
# ::node	0	say-01	4-5
# ::node	0.0	person	1-2
# ::node	0.0.0	advise-01	1-2
# ::node	0.1	promise-01	10-11
# ::node	0.1.0	fight-01	13-14
# ::node	0.1.1	fight-01	22-23
# ::node	0.1.1.0	date-entity	24-25
# ::node	0.1.1.0.0	12	24-25
# ::node	0.2	yesterday	5-6
# ::root	0	say-01
# ::edge	advise-01	ARG0	person	0.0.0	0.0	
# ::edge	date-entity	month	12	0.1.1.0	0.1.1.0.0	
# ::edge	fight-01	ARG1	date-entity	0.1.1	0.1.1.0	
# ::edge	fight-01	concession	promise-01	0.1.1	0.1	
# ::edge	promise-01	ARG1	fight-01	0.1	0.1.0	
# ::edge	say-01	ARG0	person	0	0.0	
# ::edge	say-01	ARG1	promise-01	0	0.1	
# ::edge	say-01	time	yesterday	0	0.2	
(s / say-01 
      :ARG0 (p2 / person 
            :ARG0-of (a / advise-01)) 
      :ARG1 (p / promise-01 
            :ARG1 (f2 / fight-01) 
            :concession-of (f / fight-01 
                  :ARG1 (d / date-entity 
                        :month 12))) 
      :time (y / yesterday))

# ::snt it promises to be a fun event as well as having a serious side
# ::tok it promises to be a fun event as well as having a serious side
# ::alignments 13-14|0.0.0.0 12-13|0.0.0 8-9|0.2 6-7|0.1 5-6|0.1.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:51.503
# ::node	0	promise-01	1-2
# ::node	0.0	it	0-1
# ::node	0.0.0	serious	12-13
# ::node	0.0.0.0	side	13-14
# ::node	0.1	event	6-7
# ::node	0.1.0	fun	5-6
# ::node	0.2	well	8-9
# ::root	0	promise-01
# ::edge	event	mod	fun	0.1	0.1.0	
# ::edge	it	mod	serious	0.0	0.0.0	
# ::edge	promise-01	ARG0	it	0	0.0	
# ::edge	promise-01	ARG1	event	0	0.1	
# ::edge	promise-01	ARG2	well	0	0.2	
# ::edge	side	mod	serious	0.0.0.0	0.0.0	
(p / promise-01 
      :ARG0 (i / it 
            :mod (s2 / serious 
                  :mod-of (s / side))) 
      :ARG1 (e / event 
            :mod (f / fun)) 
      :ARG2 (w / well))

# ::snt they were later released after their commanders promised there would be no further incidents said duty officer paulino cardoso
# ::tok they were later released after their commanders promised there would be no further incidents said duty officer paulino cardoso
# ::alignments 16-17|0.1.0 15-16|0.1 14-15|0 13-14|0.0.0.0 12-13|0.0.0.0.0 11-12|0.0.0.0.1 7-8|0.0.0 6-7|0.0.1+0.0 4-5|0.0.0.1 3-4|0.0.0.1.0 2-3|0.0.0.1.0.1 0-1|0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:51.709
# ::node	0	say-01	14-15
# ::node	0.0	person	6-7
# ::node	0.0.0	promise-01	7-8
# ::node	0.0.0.0	incident	13-14
# ::node	0.0.0.0.0	further	12-13
# ::node	0.0.0.0.1	-	11-12
# ::node	0.0.0.1	after	4-5
# ::node	0.0.0.1.0	release-01	3-4
# ::node	0.0.0.1.0.0	they	0-1
# ::node	0.0.0.1.0.1	late	2-3
# ::node	0.0.1	command-02	6-7
# ::node	0.1	duty	15-16
# ::node	0.1.0	officer	16-17
# ::root	0	say-01
# ::edge	after	time	promise-01	0.0.0.1	0.0.0	
# ::edge	command-02	ARG0	person	0.0.1	0.0	
# ::edge	incident	mod	further	0.0.0.0	0.0.0.0.0	
# ::edge	incident	polarity	-	0.0.0.0	0.0.0.0.1	
# ::edge	officer	mod	duty	0.1.0	0.1	
# ::edge	promise-01	ARG0	person	0.0.0	0.0	
# ::edge	promise-01	ARG1	incident	0.0.0	0.0.0.0	
# ::edge	release-01	ARG1	they	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	release-01	time	after	0.0.0.1.0	0.0.0.1	
# ::edge	release-01	time	late	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	say-01	ARG0	person	0	0.0	
# ::edge	say-01	ARG1	duty	0	0.1	
(s / say-01 
      :ARG0 (p2 / person 
            :ARG0-of (p / promise-01 
                  :ARG1 (i / incident 
                        :mod (f / further) 
                        :polarity (- / -)) 
                  :time-of (a / after 
                        :time-of (r / release-01 
                              :ARG1 (t / they) 
                              :time (l / late)))) 
            :ARG0-of (c / command-02)) 
      :ARG1 (d / duty 
            :mod-of (o / officer)))

# ::snt the chosen few will either be given full british passports or promised copperbottomed guarantees of a safe haven in britain
# ::tok the chosen few will either be given full british passports or promised copperbottomed guarantees of a safe haven in britain
# ::alignments 19-20|0.0.0.2.0.0.0+0.0.0.2.0.0+0.0.0.2.0 17-18|0.0.0.2.1.0.0 16-17|0.0.0.2.1.0.0.0 13-14|0.0.0.2.1.0 11-12|0.0.0.2.1 10-11|0.0.0.2 9-10|0.0.0.0 7-8|0.0.0.0.0 6-7|0.0.0 4-5|0.0.0.1 2-3|0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:51.891
# ::node	0	choose-01	1-2
# ::node	0.0	few	2-3
# ::node	0.0.0	give-01	6-7
# ::node	0.0.0.0	passport	9-10
# ::node	0.0.0.0.0	full	7-8
# ::node	0.0.0.1	either	4-5
# ::node	0.0.0.2	or	10-11
# ::node	0.0.0.2.0	country	19-20
# ::node	0.0.0.2.0.0	name	19-20
# ::node	0.0.0.2.0.0.0	"Britain"	19-20
# ::node	0.0.0.2.1	promise-01	11-12
# ::node	0.0.0.2.1.0	guarantee-01	13-14
# ::node	0.0.0.2.1.0.0	haven	17-18
# ::node	0.0.0.2.1.0.0.0	safe-41	16-17
# ::root	0	choose-01
# ::edge	choose-01	ARG1	few	0	0.0	
# ::edge	country	name	name	0.0.0.2.0	0.0.0.2.0.0	
# ::edge	give-01	ARG0	few	0.0.0	0.0	
# ::edge	give-01	ARG1	passport	0.0.0	0.0.0.0	
# ::edge	give-01	mod	either	0.0.0	0.0.0.1	
# ::edge	guarantee-01	ARG0	haven	0.0.0.2.1.0	0.0.0.2.1.0.0	
# ::edge	name	op1	"Britain"	0.0.0.2.0.0	0.0.0.2.0.0.0	
# ::edge	or	duration	country	0.0.0.2	0.0.0.2.0	
# ::edge	or	op1	give-01	0.0.0.2	0.0.0	
# ::edge	or	op2	promise-01	0.0.0.2	0.0.0.2.1	
# ::edge	passport	mod	full	0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	ARG1	guarantee-01	0.0.0.2.1	0.0.0.2.1.0	
# ::edge	safe-41	ARG1	haven	0.0.0.2.1.0.0.0	0.0.0.2.1.0.0	
(c2 / choose-01 
      :ARG1 (f2 / few 
            :ARG0-of (g2 / give-01 
                  :ARG1 (p2 / passport 
                        :mod (f / full)) 
                  :mod (e / either) 
                  :op-of (o / or 
                        :duration (c / country 
                              :name (n / name 
                                    :op1 "Britain")) 
                        :op1 (p / promise-01 
                              :ARG1 (g / guarantee-01 
                                    :ARG0 (h / haven 
                                          :ARG1-of (s / safe-41))))))))

# ::snt as it happens there is a substantial engine refurbishment contract in the offing which although tenders have not yet been invited promises to bring someone several tens of millions of pounds in revenue over a period of a few years
# ::tok as it happens there is a substantial engine refurbishment contract in the offing which although tenders have not yet been invited promises to bring someone several tens of millions of pounds in revenue over a period of a few years
# ::alignments 39-40|0.0.1.1.0.0.1+0.0.1.1.0.0 38-39|0.0.1.1.0.0.0 35-36|0.0.1.3 32-33|0.0.1.1.0 25-26|0.0.1.2 24-25|0.0.0 23-24|0.0.1 21-22|0.0 20-21|0 18-19|0.1 9-10|0.0.1.1 7-8|0.0.1.1.1 6-7|0.0.1.1.2 2-3|0.0.1.0.0 1-2|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:52.278
# ::node	0	invite-01	20-21
# ::node	0.0	promise-01	21-22
# ::node	0.0.0	someone	24-25
# ::node	0.0.1	bring-01	23-24
# ::node	0.0.1.0	it	1-2
# ::node	0.0.1.0.0	happen-01	2-3
# ::node	0.0.1.1	contract-02	9-10
# ::node	0.0.1.1.0	revenue	32-33
# ::node	0.0.1.1.0.0	temporal-quantity	39-40
# ::node	0.0.1.1.0.0.0	few	38-39
# ::node	0.0.1.1.0.0.1	year	39-40
# ::node	0.0.1.1.1	engine	7-8
# ::node	0.0.1.1.2	substantial	6-7
# ::node	0.0.1.2	several	25-26
# ::node	0.0.1.3	period	35-36
# ::node	0.1	yet	18-19
# ::root	0	invite-01
# ::edge	bring-01	ARG0	it	0.0.1	0.0.1.0	
# ::edge	bring-01	ARG1	contract-02	0.0.1	0.0.1.1	
# ::edge	bring-01	duration	period	0.0.1	0.0.1.3	
# ::edge	contract-02	ARG0	revenue	0.0.1.1	0.0.1.1.0	
# ::edge	contract-02	ARG1	engine	0.0.1.1	0.0.1.1.1	
# ::edge	contract-02	mod	substantial	0.0.1.1	0.0.1.1.2	
# ::edge	few	op1	temporal-quantity	0.0.1.1.0.0.0	0.0.1.1.0.0	
# ::edge	happen-01	ARG1	it	0.0.1.0.0	0.0.1.0	
# ::edge	invite-01	mod	yet	0	0.1	
# ::edge	promise-01	ARG0	invite-01	0.0	0	
# ::edge	promise-01	ARG1	someone	0.0	0.0.0	
# ::edge	promise-01	ARG2	bring-01	0.0	0.0.1	
# ::edge	several	condition	bring-01	0.0.1.2	0.0.1	
# ::edge	temporal-quantity	mod	revenue	0.0.1.1.0.0	0.0.1.1.0	
# ::edge	temporal-quantity	unit	year	0.0.1.1.0.0	0.0.1.1.0.0.1	
(i / invite-01 
      :ARG0-of (p2 / promise-01 
            :ARG1 (s2 / someone) 
            :ARG2 (b / bring-01 
                  :ARG0 (i2 / it 
                        :ARG1-of (h / happen-01)) 
                  :ARG1 (c / contract-02 
                        :ARG0 (r / revenue 
                              :mod-of (t / temporal-quantity 
                                    :op-of (f / few) 
                                    :unit (y / year))) 
                        :ARG1 (e / engine) 
                        :mod (s3 / substantial)) 
                  :condition-of (s / several) 
                  :duration (p / period))) 
      :mod (y2 / yet))

# ::snt not long after angela came to live there tales of the unhappy trio began to trickle out and speculation was rife indeed some locals even promising to steal over the high wall into the kitchen garden to get a gawk through the drawing room window
# ::tok not long after angela came to live there tales of the unhappy trio began to trickle out and speculation was rife indeed some locals even promising to steal over the high wall into the kitchen garden to get a gawk through the drawing room window
# ::alignments 44-45|0.1 43-44|0.1.0 42-43|0 35-36|0.2 31-32|0.2.0 30-31|0.2.0.0.1.0.0.0 27-28|0.2.0.0 25-26|0.2.0.0.1 23-24|0.2.0.0.0 22-23|0.2.0.0.1.1 21-22|0.0 20-21|0.2.0.0.1.0 18-19|0.2.0.0.1.0.0 17-18|0.2.0.0.1.0.1 13-14|0.2.0.0.1.0.1.1 12-13|0.2.0.0.1.0.1.1.0 11-12|0.2.0.0.1.0.1.1.0.0.0+0.2.0.0.1.0.1.1.0.0 6-7|0.2.0.0.1.0.1.0 2-3|0.2.0.0.1.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:52.664
# ::node	0	draw-02	42-43
# ::node	0.0	indeed	21-22
# ::node	0.1	window	44-45
# ::node	0.1.0	room	43-44
# ::node	0.2	garden	35-36
# ::node	0.2.0	wall	31-32
# ::node	0.2.0.0	steal-01	27-28
# ::node	0.2.0.0.0	local	23-24
# ::node	0.2.0.0.1	promise-01	25-26
# ::node	0.2.0.0.1.0	rife	20-21
# ::node	0.2.0.0.1.0.0	speculate-01	18-19
# ::node	0.2.0.0.1.0.0.0	high	30-31
# ::node	0.2.0.0.1.0.1	and	17-18
# ::node	0.2.0.0.1.0.1.0	live-01	6-7
# ::node	0.2.0.0.1.0.1.0.0	after	2-3
# ::node	0.2.0.0.1.0.1.1	begin-01	13-14
# ::node	0.2.0.0.1.0.1.1.0	trio	12-13
# ::node	0.2.0.0.1.0.1.1.0.0	happy	11-12
# ::node	0.2.0.0.1.0.1.1.0.0.0	-	11-12
# ::node	0.2.0.0.1.1	some	22-23
# ::root	0	draw-02
# ::edge	and	op1	begin-01	0.2.0.0.1.0.1	0.2.0.0.1.0.1.1	
# ::edge	and	op2	rife	0.2.0.0.1.0.1	0.2.0.0.1.0	
# ::edge	begin-01	ARG1	trio	0.2.0.0.1.0.1.1	0.2.0.0.1.0.1.1.0	
# ::edge	draw-02	ARG0	indeed	0	0.0	
# ::edge	draw-02	ARG1	window	0	0.1	
# ::edge	draw-02	ARG2	garden	0	0.2	
# ::edge	happy	polarity	-	0.2.0.0.1.0.1.1.0.0	0.2.0.0.1.0.1.1.0.0.0	
# ::edge	live-01	ARG0	and	0.2.0.0.1.0.1.0	0.2.0.0.1.0.1	
# ::edge	live-01	ARG1	after	0.2.0.0.1.0.1.0	0.2.0.0.1.0.1.0.0	
# ::edge	promise-01	ARG0	rife	0.2.0.0.1	0.2.0.0.1.0	
# ::edge	promise-01	ARG1	some	0.2.0.0.1	0.2.0.0.1.1	
# ::edge	promise-01	ARG2	steal-01	0.2.0.0.1	0.2.0.0	
# ::edge	rife	domain	speculate-01	0.2.0.0.1.0	0.2.0.0.1.0.0	
# ::edge	speculate-01	ARG1	high	0.2.0.0.1.0.0	0.2.0.0.1.0.0.0	
# ::edge	steal-01	ARG0	local	0.2.0.0	0.2.0.0.0	
# ::edge	steal-01	ARG1	wall	0.2.0.0	0.2.0	
# ::edge	trio	mod	happy	0.2.0.0.1.0.1.1.0	0.2.0.0.1.0.1.1.0.0	
# ::edge	wall	mod	garden	0.2.0	0.2	
# ::edge	window	mod	room	0.1	0.1.0	
(d / draw-02 
      :ARG0 (i / indeed) 
      :ARG1 (w / window 
            :mod (r / room)) 
      :ARG2 (g / garden 
            :mod-of (w2 / wall 
                  :ARG1-of (s / steal-01 
                        :ARG0 (l / local) 
                        :ARG2-of (p / promise-01 
                              :ARG0 (r2 / rife 
                                    :domain (s3 / speculate-01 
                                          :ARG1 (h / high)) 
                                    :op-of (a / and 
                                          :ARG0-of (l2 / live-01 
                                                :ARG1 (a2 / after)) 
                                          :op1 (b / begin-01 
                                                :ARG1 (t / trio 
                                                      :mod (h2 / happy 
                                                            :polarity -))))) 
                              :ARG1 (s2 / some))))))

# ::snt we knew that despite what they promised we wouldnt get any real control comments gilbert hernandez
# ::tok we knew that despite what they promised we wouldnt get any real control comments gilbert hernandez
# ::alignments 13-14|0.1.0.0 12-13|0.1.0.0.0 11-12|0.1.0.0.0.1 10-11|0.1.0.0.1 7-8|0.1.0.0.0.0 6-7|0 5-6|0.0 1-2|0.1.0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:52.719
# ::node	0	promise-01	6-7
# ::node	0.0	they	5-6
# ::node	0.1	we	0-1
# ::node	0.1.0	know-01	1-2
# ::node	0.1.0.0	comment-01	13-14
# ::node	0.1.0.0.0	control-01	12-13
# ::node	0.1.0.0.0.0	we	7-8
# ::node	0.1.0.0.0.1	real	11-12
# ::node	0.1.0.0.1	any	10-11
# ::root	0	promise-01
# ::edge	comment-01	ARG1	control-01	0.1.0.0	0.1.0.0.0	
# ::edge	comment-01	mod	any	0.1.0.0	0.1.0.0.1	
# ::edge	control-01	ARG1	we	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	control-01	mod	real	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	know-01	ARG0	we	0.1.0	0.1	
# ::edge	know-01	ARG1	comment-01	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG0	they	0	0.0	
# ::edge	promise-01	ARG1	we	0	0.1	
(p / promise-01 
      :ARG0 (t / they) 
      :ARG1 (w2 / we 
            :ARG0-of (k / know-01 
                  :ARG1 (c / comment-01 
                        :ARG1 (c2 / control-01 
                              :ARG1 (w / we) 
                              :mod (r / real)) 
                        :mod (a / any)))))

# ::snt as he ploughed through his prepared statement promising a judicial inquiry and talking of the ultimate vindication of british justice his hands unconsciously explored the ministerial dispatch box in the manner of a bomb disposal man with a suspect package
# ::tok as he ploughed through his prepared statement promising a judicial inquiry and talking of the ultimate vindication of british justice his hands unconsciously explored the ministerial dispatch box in the manner of a bomb disposal man with a suspect package
# ::alignments 39-40|0.1.1.0.0.0.1 38-39|0.1.1.0.0.0 35-36|0.1.1.0.0 33-34|0.1.1.0 30-31|0.0.1 27-28|0.0 26-27|0 25-26|0.0.0.0+0.0.0 21-22|0.1.1.1 19-20|0.1.0.0.0.0 15-16|0.1.1.0.0.0.0 12-13|0.1.1 11-12|0.1 10-11|0.1.0.1 9-10|0.1.0.1.0 7-8|0.1.0 6-7|0.1.0.0.0 5-6|0.1.0.0.0.1 1-2|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:53.059
# ::node	0	dispatch-01	26-27
# ::node	0.0	box	27-28
# ::node	0.0.0	have-org-role-91	25-26
# ::node	0.0.0.0	minister	25-26
# ::node	0.0.1	manner	30-31
# ::node	0.1	and	11-12
# ::node	0.1.0	promise-01	7-8
# ::node	0.1.0.0	he	1-2
# ::node	0.1.0.0.0	state-01	6-7
# ::node	0.1.0.0.0.0	justice	19-20
# ::node	0.1.0.0.0.1	prepare-02	5-6
# ::node	0.1.0.1	inquire-01	10-11
# ::node	0.1.0.1.0	judicial	9-10
# ::node	0.1.1	talk-01	12-13
# ::node	0.1.1.0	bomb	33-34
# ::node	0.1.1.0.0	man	35-36
# ::node	0.1.1.0.0.0	suspect-01	38-39
# ::node	0.1.1.0.0.0.0	ultimate	15-16
# ::node	0.1.1.0.0.0.1	package	39-40
# ::node	0.1.1.1	hand	21-22
# ::root	0	dispatch-01
# ::edge	and	op1	promise-01	0.1	0.1.0	
# ::edge	and	op2	talk-01	0.1	0.1.1	
# ::edge	and	op3	dispatch-01	0.1	0	
# ::edge	box	location	manner	0.0	0.0.1	
# ::edge	dispatch-01	ARG1	box	0	0.0	
# ::edge	have-org-role-91	ARG1	box	0.0.0	0.0	
# ::edge	have-org-role-91	ARG2	minister	0.0.0	0.0.0.0	
# ::edge	inquire-01	mod	judicial	0.1.0.1	0.1.0.1.0	
# ::edge	man	mod	bomb	0.1.1.0.0	0.1.1.0	
# ::edge	man	topic	suspect-01	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	prepare-02	ARG1	state-01	0.1.0.0.0.1	0.1.0.0.0	
# ::edge	promise-01	ARG0	he	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG1	inquire-01	0.1.0	0.1.0.1	
# ::edge	state-01	ARG0	he	0.1.0.0.0	0.1.0.0	
# ::edge	state-01	ARG1	justice	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	suspect-01	ARG0	ultimate	0.1.1.0.0.0	0.1.1.0.0.0.0	
# ::edge	suspect-01	ARG1	package	0.1.1.0.0.0	0.1.1.0.0.0.1	
# ::edge	talk-01	ARG1	bomb	0.1.1	0.1.1.0	
# ::edge	talk-01	prep-for	hand	0.1.1	0.1.1.1	
(d / dispatch-01 
      :ARG1 (b2 / box 
            :ARG1-of (h / have-org-role-91 
                  :ARG2 (m3 / minister)) 
            :location (m2 / manner)) 
      :op-of (a / and 
            :op1 (p2 / promise-01 
                  :ARG0 (h3 / he 
                        :ARG0-of (s2 / state-01 
                              :ARG1 (j / justice) 
                              :ARG1-of (p3 / prepare-02))) 
                  :ARG1 (i / inquire-01 
                        :mod (j2 / judicial))) 
            :op2 (t / talk-01 
                  :ARG1 (b / bomb 
                        :mod-of (m / man 
                              :topic (s / suspect-01 
                                    :ARG0 (u / ultimate) 
                                    :ARG1 (p / package)))) 
                  :prep-for (h2 / hand))))

# ::snt mr lacalle has promised to privatise some stateowned companies though not at the frenetic pace that carlos menem is attempting in neighbouring argentina and to promote montevideos burgeoning role as an offshore banking centre
# ::tok mr lacalle has promised to privatise some stateowned companies though not at the frenetic pace that carlos menem is attempting in neighbouring argentina and to promote montevideos burgeoning role as an offshore banking centre
# ::alignments 32-33|0.0.2.0.0.0 31-32|0.0.2.0.0.0.0 28-29|0.0.2.0 27-28|0.0.2.0.0 25-26|0.0.2 23-24|0.0 22-23|0.0.0.1.0.0.0+0.0.0.1.0.0+0.0.0.1.0 21-22|0.0.0.1 19-20|0.0.0 14-15|0.0.0.0 8-9|0.0.1 6-7|0.0.1.0 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:53.338
# ::node	0	promise-01	3-4
# ::node	0.0	and	23-24
# ::node	0.0.0	attempt-01	19-20
# ::node	0.0.0.0	pace	14-15
# ::node	0.0.0.1	neighbor-01	21-22
# ::node	0.0.0.1.0	country	22-23
# ::node	0.0.0.1.0.0	name	22-23
# ::node	0.0.0.1.0.0.0	"Argentina"	22-23
# ::node	0.0.1	company	8-9
# ::node	0.0.1.0	some	6-7
# ::node	0.0.2	promote-02	25-26
# ::node	0.0.2.0	role	28-29
# ::node	0.0.2.0.0	burgeon-01	27-28
# ::node	0.0.2.0.0.0	banking	32-33
# ::node	0.0.2.0.0.0.0	offshore	31-32
# ::root	0	promise-01
# ::edge	and	op1	company	0.0	0.0.1	
# ::edge	and	op2	promote-02	0.0	0.0.2	
# ::edge	attempt-01	ARG0	pace	0.0.0	0.0.0.0	
# ::edge	attempt-01	ARG1	neighbor-01	0.0.0	0.0.0.1	
# ::edge	attempt-01	ARG2	and	0.0.0	0.0	
# ::edge	banking	mod	offshore	0.0.2.0.0.0	0.0.2.0.0.0.0	
# ::edge	burgeon-01	ARG1	role	0.0.2.0.0	0.0.2.0	
# ::edge	burgeon-01	ARG2	banking	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	company	quant	some	0.0.1	0.0.1.0	
# ::edge	country	name	name	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	name	op1	"Argentina"	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	neighbor-01	ARG1	country	0.0.0.1	0.0.0.1.0	
# ::edge	promise-01	ARG1	and	0	0.0	
# ::edge	promote-02	ARG1	role	0.0.2	0.0.2.0	
(p3 / promise-01 
      :ARG1 (a / and 
            :ARG2-of (a2 / attempt-01 
                  :ARG0 (p2 / pace) 
                  :ARG1 (n2 / neighbor-01 
                        :ARG1 (c / country 
                              :name (n / name 
                                    :op1 "Argentina")))) 
            :op1 (c2 / company 
                  :quant (s / some)) 
            :op2 (p / promote-02 
                  :ARG1 (r / role 
                        :ARG1-of (b2 / burgeon-01 
                              :ARG2 (b / banking 
                                    :mod (o / offshore)))))))

# ::snt the aristotelian talk of definitions does not reveal nature to us but only does the same as the man who promised to discover a treasure and then says look where it is hidden and you will find it
# ::tok the aristotelian talk of definitions does not reveal nature to us but only does the same as the man who promised to discover a treasure and then says look where it is hidden and you will find it
# ::alignments 37-38|0.0.0.1 34-35|0.0.0.0 33-34|0.0 32-33|0.0.0 30-31|0.0.0.2 27-28|0 26-27|0.2 25-26|0.1 24-25|0.1.0.1.0 22-23|0.1.0.1 20-21|0.1.0 18-19|0.1.0.0 15-16|0.1.0.0.0 12-13|0.1.0.0.0.0.0.0.0 11-12|0.1.0.0.0.0 8-9|0.1.0.0.0.0.0.1 7-8|0.1.0.0.0.0.0 4-5|0.1.0.0.0.0.0.0.1 2-3|0.1.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:54.223
# ::node	0	say-01	27-28
# ::node	0.0	and	33-34
# ::node	0.0.0	hide-01	32-33
# ::node	0.0.0.0	you	34-35
# ::node	0.0.0.1	it	37-38
# ::node	0.0.0.2	it	30-31
# ::node	0.1	and	25-26
# ::node	0.1.0	promise-01	20-21
# ::node	0.1.0.0	man	18-19
# ::node	0.1.0.0.0	same-41	15-16
# ::node	0.1.0.0.0.0	contrast-01	11-12
# ::node	0.1.0.0.0.0.0	reveal-01	7-8
# ::node	0.1.0.0.0.0.0.0	talk-01	2-3
# ::node	0.1.0.0.0.0.0.0.0	only	12-13
# ::node	0.1.0.0.0.0.0.0.1	definition	4-5
# ::node	0.1.0.0.0.0.0.1	nature	8-9
# ::node	0.1.0.1	discover-01	22-23
# ::node	0.1.0.1.0	treasure-01	24-25
# ::node	0.2	then	26-27
# ::root	0	say-01
# ::edge	and	op1	hide-01	0.0	0.0.0	
# ::edge	and	op1	promise-01	0.1	0.1.0	
# ::edge	and	op2	say-01	0.1	0	
# ::edge	contrast-01	ARG1	reveal-01	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	discover-01	ARG1	treasure-01	0.1.0.1	0.1.0.1.0	
# ::edge	hide-01	ARG0	you	0.0.0	0.0.0.0	
# ::edge	hide-01	ARG1	it	0.0.0	0.0.0.1	
# ::edge	hide-01	ARG2	it	0.0.0	0.0.0.2	
# ::edge	promise-01	ARG0	man	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG2	discover-01	0.1.0	0.1.0.1	
# ::edge	reveal-01	ARG0	talk-01	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	reveal-01	ARG1	nature	0.1.0.0.0.0.0	0.1.0.0.0.0.0.1	
# ::edge	same-41	ARG1	contrast-01	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	same-41	ARG2	man	0.1.0.0.0	0.1.0.0	
# ::edge	say-01	ARG1	and	0	0.0	
# ::edge	say-01	time	then	0	0.2	
# ::edge	talk-01	ARG0	only	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0.0.0	
# ::edge	talk-01	location	definition	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0.0.1	
(s / say-01 
      :ARG1 (a / and 
            :op1 (h / hide-01 
                  :ARG0 (y / you) 
                  :ARG1 (i / it) 
                  :ARG2 (i2 / it))) 
      :op-of (a2 / and 
            :op1 (p / promise-01 
                  :ARG0 (m / man 
                        :ARG2-of (s2 / same-41 
                              :ARG1 (c / contrast-01 
                                    :ARG1 (r / reveal-01 
                                          :ARG0 (t3 / talk-01 
                                                :ARG0 (o / only) 
                                                :location (d2 / definition)) 
                                          :ARG1 (n / nature))))) 
                  :ARG2 (d / discover-01 
                        :ARG1 (t2 / treasure-01)))) 
      :time (t / then))

# ::snt   the lucullan excesses which hefner promised were all in the mind at any rate as long as the fifties lasted
# ::tok the lucullan excesses which hefner promised were all in the mind at any rate as long as the fifties lasted
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:54.224
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt already it seems the wage rises mr menem promised during his campaign will be eaten up as quickly as they are paid
# ::tok already it seems the wage rises mr menem promised during his campaign will be eaten up as quickly as they are paid
# ::alignments 21-22|0.1.0.0.0.0.0 19-20|0.1.0.0.0.0 17-18|0.1.0.1 14-15|0.1.0 11-12|0.1.0.0.0 8-9|0.1.0.0 5-6|0.0 4-5|0.0.0 2-3|0 1-2|0.1 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:54.352
# ::node	0	seem-01	2-3
# ::node	0.0	rise-01	5-6
# ::node	0.0.0	wage-01	4-5
# ::node	0.1	it	1-2
# ::node	0.1.0	eat-01	14-15
# ::node	0.1.0.0	promise-01	8-9
# ::node	0.1.0.0.0	campaign-01	11-12
# ::node	0.1.0.0.0.0	they	19-20
# ::node	0.1.0.0.0.0.0	pay-01	21-22
# ::node	0.1.0.1	quick	17-18
# ::node	0.2	already	0-1
# ::root	0	seem-01
# ::edge	campaign-01	ARG0	they	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	eat-01	ARG1	it	0.1.0	0.1	
# ::edge	eat-01	manner	quick	0.1.0	0.1.0.1	
# ::edge	pay-01	ARG1	they	0.1.0.0.0.0.0	0.1.0.0.0.0	
# ::edge	promise-01	ARG1	eat-01	0.1.0.0	0.1.0	
# ::edge	promise-01	ARG3	campaign-01	0.1.0.0	0.1.0.0.0	
# ::edge	rise-01	ARG1	wage-01	0.0	0.0.0	
# ::edge	seem-01	ARG1	rise-01	0	0.0	
# ::edge	seem-01	ARG2	it	0	0.1	
# ::edge	seem-01	time	already	0	0.2	
(s / seem-01 
      :ARG1 (r / rise-01 
            :ARG1 (w / wage-01)) 
      :ARG2 (i / it 
            :ARG1-of (e / eat-01 
                  :ARG1-of (p2 / promise-01 
                        :ARG3 (c / campaign-01 
                              :ARG0 (t / they 
                                    :ARG1-of (p / pay-01)))) 
                  :manner (q / quick))) 
      :time (a / already))

# ::snt instead he said the one thing that he had promised himself he wouldnt
# ::tok instead he said the one thing that he had promised himself he wouldnt
# ::alignments 11-12|0.1.0.1 9-10|0.1.0 7-8|0.1.0.0 5-6|0.1 2-3|0 1-2|0.0 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:54.423
# ::node	0	say-01	2-3
# ::node	0.0	he	1-2
# ::node	0.1	thing	5-6
# ::node	0.1.0	promise-01	9-10
# ::node	0.1.0.0	he	7-8
# ::node	0.1.0.1	he	11-12
# ::node	0.2	instead	0-1
# ::root	0	say-01
# ::edge	promise-01	ARG0	he	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG1	thing	0.1.0	0.1	
# ::edge	promise-01	ARG2	he	0.1.0	0.1.0.1	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	thing	0	0.1	
# ::edge	say-01	time	instead	0	0.2	
(s / say-01 
      :ARG0 (h3 / he) 
      :ARG1 (t / thing 
            :ARG1-of (p / promise-01 
                  :ARG0 (h2 / he) 
                  :ARG2 (h / he))) 
      :time (i / instead))

# ::snt in no way was this the prime minister everyone loves to hate said one soothed peer although she promised to fight the social charter tooth and nail
# ::tok in no way was this the prime minister everyone loves to hate said one soothed peer although she promised to fight the social charter tooth and nail
# ::alignments 26-27|0.0.0.0.1.0.0.0 25-26|0.0.0.0.1.0.0 24-25|0.0.0.0.1.0 23-24|0.0.0.0.1 22-23|0.0.0.0.1.1 20-21|0.0.0.0 18-19|0.0.0 17-18|0.0.0.0.0 15-16|0.0 12-13|0 11-12|0.2 9-10|0.2.1 8-9|0.2.0 7-8|0.2.0.0.1+0.2.0.0 6-7|0.2.0.0.1.0 4-5|0.2.0.0.0 2-3|0.1 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:54.627
# ::node	0	say-01	12-13
# ::node	0.0	peer	15-16
# ::node	0.0.0	promise-01	18-19
# ::node	0.0.0.0	fight-01	20-21
# ::node	0.0.0.0.0	she	17-18
# ::node	0.0.0.0.1	charter-01	23-24
# ::node	0.0.0.0.1.0	tooth	24-25
# ::node	0.0.0.0.1.0.0	and	25-26
# ::node	0.0.0.0.1.0.0.0	nail	26-27
# ::node	0.0.0.0.1.1	society	22-23
# ::node	0.1	way	2-3
# ::node	0.1.0	-	1-2
# ::node	0.2	hate-01	11-12
# ::node	0.2.0	everyone	8-9
# ::node	0.2.0.0	have-org-role-91	7-8
# ::node	0.2.0.0.0	this	4-5
# ::node	0.2.0.0.1	minister	7-8
# ::node	0.2.0.0.1.0	prime	6-7
# ::node	0.2.1	love-01	9-10
# ::root	0	say-01
# ::edge	and	op1	tooth	0.0.0.0.1.0.0	0.0.0.0.1.0	
# ::edge	and	op2	nail	0.0.0.0.1.0.0	0.0.0.0.1.0.0.0	
# ::edge	charter-01	ARG0	tooth	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	charter-01	ARG1	society	0.0.0.0.1	0.0.0.0.1.1	
# ::edge	fight-01	ARG0	she	0.0.0.0	0.0.0.0.0	
# ::edge	fight-01	ARG1	charter-01	0.0.0.0	0.0.0.0.1	
# ::edge	hate-01	ARG0	everyone	0.2	0.2.0	
# ::edge	hate-01	ARG1	say-01	0.2	0	
# ::edge	have-org-role-91	ARG0	everyone	0.2.0.0	0.2.0	
# ::edge	have-org-role-91	ARG1	this	0.2.0.0	0.2.0.0.0	
# ::edge	have-org-role-91	ARG2	minister	0.2.0.0	0.2.0.0.1	
# ::edge	love-01	ARG1	hate-01	0.2.1	0.2	
# ::edge	minister	mod	prime	0.2.0.0.1	0.2.0.0.1.0	
# ::edge	promise-01	ARG1	peer	0.0.0	0.0	
# ::edge	promise-01	ARG2	fight-01	0.0.0	0.0.0.0	
# ::edge	say-01	ARG0	peer	0	0.0	
# ::edge	say-01	ARG1	way	0	0.1	
# ::edge	way	polarity	-	0.1	0.1.0	
(s3 / say-01 
      :ARG0 (p2 / peer 
            :ARG1-of (p / promise-01 
                  :ARG2 (f / fight-01 
                        :ARG0 (s2 / she) 
                        :ARG1 (c / charter-01 
                              :ARG0 (t / tooth 
                                    :op-of (a / and 
                                          :op1 (n / nail))) 
                              :ARG1 (s / society))))) 
      :ARG1 (w / way 
            :polarity (- / -)) 
      :ARG1-of (h / hate-01 
            :ARG0 (e / everyone 
                  :ARG0-of (h2 / have-org-role-91 
                        :ARG1 (t2 / this) 
                        :ARG2 (m / minister 
                              :mod (p3 / prime)))) 
            :ARG1-of (l / love-01)))

# ::snt in april this year after guards took away their clothing medicines and books they went on a hunger strike which ended 21 days later when the prison authorities promised reforms
# ::tok in april this year after guards took away their clothing medicines and books they went on a hunger strike which ended 21 days later when the prison authorities promised reforms
# ::alignments 29-30|0.0.1.1.1 28-29|0.0.1.1 27-28|0.0.1.1.0 26-27|0.0.1.1.0.0 23-24|0.0.1.2 22-23|0.0.1.0.1+0.0.1.0 21-22|0.0.1.0.0 20-21|0.0.1 18-19|0.0 17-18|0.0.2 13-14|0.0.0 12-13|0.3 11-12|0 10-11|0.2 9-10|0.0.2.0 7-8|0.0.1.1.1.0 5-6|0.1.0+0.1 4-5|0.2.0 3-4|0.1.0.0 2-3|0.1.0.0.0 1-2|0.0.1.2.0.0+0.0.1.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:55.144
# ::node	0	and	11-12
# ::node	0.0	strike-01	18-19
# ::node	0.0.0	they	13-14
# ::node	0.0.1	end-01	20-21
# ::node	0.0.1.0	temporal-quantity	22-23
# ::node	0.0.1.0.0	21	21-22
# ::node	0.0.1.0.1	day	22-23
# ::node	0.0.1.1	promise-01	28-29
# ::node	0.0.1.1.0	authority	27-28
# ::node	0.0.1.1.0.0	prison	26-27
# ::node	0.0.1.1.1	reform-01	29-30
# ::node	0.0.1.1.1.0	away	7-8
# ::node	0.0.1.2	late	23-24
# ::node	0.0.1.2.0	date-entity	1-2
# ::node	0.0.1.2.0.0	4	1-2
# ::node	0.0.2	hunger-01	17-18
# ::node	0.0.2.0	clothing	9-10
# ::node	0.1	person	5-6
# ::node	0.1.0	guard-01	5-6
# ::node	0.1.0.0	year	3-4
# ::node	0.1.0.0.0	this	2-3
# ::node	0.2	medicine	10-11
# ::node	0.2.0	after	4-5
# ::node	0.3	book	12-13
# ::root	0	and
# ::edge	after	op1	medicine	0.2.0	0.2	
# ::edge	and	op1	person	0	0.1	
# ::edge	and	op2	medicine	0	0.2	
# ::edge	and	op3	book	0	0.3	
# ::edge	authority	mod	prison	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	date-entity	month	4	0.0.1.2.0	0.0.1.2.0.0	
# ::edge	end-01	ARG0	strike-01	0.0.1	0.0	
# ::edge	end-01	ARG1	temporal-quantity	0.0.1	0.0.1.0	
# ::edge	end-01	ARG2	late	0.0.1	0.0.1.2	
# ::edge	guard-01	ARG0	person	0.1.0	0.1	
# ::edge	guard-01	ARG1	year	0.1.0	0.1.0.0	
# ::edge	hunger-01	ARG1	clothing	0.0.2	0.0.2.0	
# ::edge	late	op1	date-entity	0.0.1.2	0.0.1.2.0	
# ::edge	promise-01	ARG0	authority	0.0.1.1	0.0.1.1.0	
# ::edge	promise-01	ARG1	end-01	0.0.1.1	0.0.1	
# ::edge	promise-01	ARG2	reform-01	0.0.1.1	0.0.1.1.1	
# ::edge	reform-01	ARG1	away	0.0.1.1.1	0.0.1.1.1.0	
# ::edge	strike-01	ARG0	they	0.0	0.0.0	
# ::edge	strike-01	ARG1	and	0.0	0	
# ::edge	strike-01	mod	hunger-01	0.0	0.0.2	
# ::edge	temporal-quantity	quant	21	0.0.1.0	0.0.1.0.0	
# ::edge	temporal-quantity	unit	day	0.0.1.0	0.0.1.0.1	
# ::edge	year	mod	this	0.1.0.0	0.1.0.0.0	
(a2 / and 
      :ARG1-of (s / strike-01 
            :ARG0 (t2 / they) 
            :ARG0-of (e / end-01 
                  :ARG1 (t / temporal-quantity 
                        :quant 21 
                        :unit (d / day)) 
                  :ARG1-of (p / promise-01 
                        :ARG0 (a / authority 
                              :mod (p2 / prison)) 
                        :ARG2 (r / reform-01 
                              :ARG1 (a3 / away))) 
                  :ARG2 (l / late 
                        :op1 (d2 / date-entity 
                              :month 4))) 
            :mod (h / hunger-01 
                  :ARG1 (c / clothing))) 
      :op1 (p3 / person 
            :ARG0-of (g / guard-01 
                  :ARG1 (y / year 
                        :mod (t3 / this)))) 
      :op2 (m / medicine 
            :op-of (a4 / after)) 
      :op3 (b / book))

# ::snt others who went home claim they were tricked by turkish travel agents who promised them work in the uk and sold them air tickets
# ::tok others who went home claim they were tricked by turkish travel agents who promised them work in the uk and sold them air tickets
# ::alignments 23-24|0.1.1 22-23|0.1.1.0 20-21|0.1 19-20|0 13-14|0.0 11-12|0.0.0 10-11|0.0.0.0 5-6|0.1.0 4-5|0.1.0.0 3-4|0.1.0.0.1 0-1|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:55.388
# ::node	0	and	19-20
# ::node	0.0	promise-01	13-14
# ::node	0.0.0	agent	11-12
# ::node	0.0.0.0	travel-01	10-11
# ::node	0.1	sell-01	20-21
# ::node	0.1.0	they	5-6
# ::node	0.1.0.0	claim-01	4-5
# ::node	0.1.0.0.0	other	0-1
# ::node	0.1.0.0.1	home	3-4
# ::node	0.1.1	ticket	23-24
# ::node	0.1.1.0	air	22-23
# ::root	0	and
# ::edge	agent	mod	travel-01	0.0.0	0.0.0.0	
# ::edge	and	op1	sell-01	0	0.1	
# ::edge	claim-01	ARG0	they	0.1.0.0	0.1.0	
# ::edge	claim-01	ARG1	other	0.1.0.0	0.1.0.0.0	
# ::edge	claim-01	time	home	0.1.0.0	0.1.0.0.1	
# ::edge	promise-01	ARG0	agent	0.0	0.0.0	
# ::edge	promise-01	ARG1	and	0.0	0	
# ::edge	sell-01	ARG0	they	0.1	0.1.0	
# ::edge	sell-01	ARG1	ticket	0.1	0.1.1	
# ::edge	ticket	mod	air	0.1.1	0.1.1.0	
(a2 / and 
      :ARG1-of (p / promise-01 
            :ARG0 (a3 / agent 
                  :mod (t2 / travel-01))) 
      :op1 (s / sell-01 
            :ARG0 (t3 / they 
                  :ARG0-of (c / claim-01 
                        :ARG1 (o / other) 
                        :time (h / home))) 
            :ARG1 (t / ticket 
                  :mod (a / air))))

# ::snt i promised the missus id be home by eleven
# ::tok i promised the missus id be home by eleven
# ::alignments 6-7|0.2 4-5|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:55.404
# ::node	0	promise-01	1-2
# ::node	0.0	i	0-1
# ::node	0.1	id	4-5
# ::node	0.2	home	6-7
# ::root	0	promise-01
# ::edge	home	op1	promise-01	0.2	0	
# ::edge	promise-01	ARG0	i	0	0.0	
# ::edge	promise-01	ARG1	id	0	0.1	
(p / promise-01 
      :ARG0 (i2 / i) 
      :ARG1 (i / id) 
      :op-of (h / home))

# ::snt the position of the lizard lighthouse in relation to buildings above bass point promised him that
# ::tok the position of the lizard lighthouse in relation to buildings above bass point promised him that
# ::alignments 13-14|0 12-13|0.0 10-11|0.0.0 9-10|0.0.0.0 7-8|0.0.0.0.0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:55.435
# ::node	0	promise-01	13-14
# ::node	0.0	point	12-13
# ::node	0.0.0	above	10-11
# ::node	0.0.0.0	building	9-10
# ::node	0.0.0.0.0	relate-01	7-8
# ::node	0.1	position	1-2
# ::root	0	promise-01
# ::edge	above	degree	building	0.0.0	0.0.0.0	
# ::edge	above	op1	point	0.0.0	0.0	
# ::edge	promise-01	ARG0	point	0	0.0	
# ::edge	promise-01	ARG1	position	0	0.1	
# ::edge	relate-01	ARG1	building	0.0.0.0.0	0.0.0.0	
(p / promise-01 
      :ARG0 (p2 / point 
            :op-of (a / above 
                  :degree (b / building 
                        :ARG1-of (r / relate-01)))) 
      :ARG1 (p3 / position))

# ::snt however the judge said that even though the man promised not to do it again he found such behaviour extremely offensive and ordered him to give 50 to each of the women
# ::tok however the judge said that even though the man promised not to do it again he found such behaviour extremely offensive and ordered him to give 50 to each of the women
# ::alignments 31-32|0.1.1.0.0.0 28-29|0.1.1.0.0 26-27|0.1.1.0.1 25-26|0.1.1.0 22-23|0.1.1 21-22|0.1 20-21|0.1.0.1 19-20|0.1.0.1.0 18-19|0.1.0.2 17-18|0.1.0.2.1 16-17|0.1.0 15-16|0.1.0.0 14-15|0.1.0.3.1 13-14|0.1.0.2.0 9-10|0.1.0.3 8-9|0.1.0.3.0 3-4|0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:56.247
# ::node	0	say-01	3-4
# ::node	0.0	judge-01	2-3
# ::node	0.1	and	21-22
# ::node	0.1.0	find-01	16-17
# ::node	0.1.0.0	he	15-16
# ::node	0.1.0.1	offensive	20-21
# ::node	0.1.0.1.0	extreme	19-20
# ::node	0.1.0.2	behave-01	18-19
# ::node	0.1.0.2.0	it	13-14
# ::node	0.1.0.2.1	such	17-18
# ::node	0.1.0.3	promise-01	9-10
# ::node	0.1.0.3.0	man	8-9
# ::node	0.1.0.3.1	again	14-15
# ::node	0.1.1	order-01	22-23
# ::node	0.1.1.0	give-01	25-26
# ::node	0.1.1.0.0	each	28-29
# ::node	0.1.1.0.0.0	woman	31-32
# ::node	0.1.1.0.1	50	26-27
# ::root	0	say-01
# ::edge	and	op1	find-01	0.1	0.1.0	
# ::edge	and	op2	order-01	0.1	0.1.1	
# ::edge	behave-01	ARG0	it	0.1.0.2	0.1.0.2.0	
# ::edge	behave-01	mod	such	0.1.0.2	0.1.0.2.1	
# ::edge	find-01	ARG0	he	0.1.0	0.1.0.0	
# ::edge	find-01	ARG1	offensive	0.1.0	0.1.0.1	
# ::edge	find-01	ARG3	behave-01	0.1.0	0.1.0.2	
# ::edge	find-01	time	promise-01	0.1.0	0.1.0.3	
# ::edge	give-01	ARG0	each	0.1.1.0	0.1.1.0.0	
# ::edge	give-01	ARG1	50	0.1.1.0	0.1.1.0.1	
# ::edge	offensive	degree	extreme	0.1.0.1	0.1.0.1.0	
# ::edge	order-01	ARG2	give-01	0.1.1	0.1.1.0	
# ::edge	promise-01	ARG0	man	0.1.0.3	0.1.0.3.0	
# ::edge	promise-01	ARG1	again	0.1.0.3	0.1.0.3.1	
# ::edge	say-01	ARG0	judge-01	0	0.0	
# ::edge	say-01	ARG1	and	0	0.1	
# ::edge	woman	mod	each	0.1.1.0.0.0	0.1.1.0.0	
(s2 / say-01 
      :ARG0 (j / judge-01) 
      :ARG1 (a / and 
            :op1 (f / find-01 
                  :ARG0 (h / he) 
                  :ARG1 (o2 / offensive 
                        :degree (e2 / extreme)) 
                  :ARG3 (b / behave-01 
                        :ARG0 (i / it) 
                        :mod (s / such)) 
                  :time (p / promise-01 
                        :ARG0 (m / man) 
                        :ARG1 (a2 / again))) 
            :op2 (o / order-01 
                  :ARG2 (g / give-01 
                        :ARG0 (e / each 
                              :mod-of (w / woman)) 
                        :ARG1 50))))

# ::snt in an early morning meeting with stock analysts in new york mr akers promised the cuts would lead to substantial improvement in our current financial performance
# ::tok in an early morning meeting with stock analysts in new york mr akers promised the cuts would lead to substantial improvement in our current financial performance
# ::alignments 25-26|0.1.1 24-25|0.1.1.1 23-24|0.1.1.2 20-21|0.1.1.0 19-20|0.1.1.0.0 15-16|0.0 13-14|0 9-11|0.1.0.1.0.0+0.1.0.1.0.1+0.1.0.1.0+0.1.0.1 7-8|0.1.0.0+0.1.0 6-7|0.1.0.0.0 4-5|0.1 3-4|0.1.2 2-3|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:56.394
# ::node	0	promise-01	13-14
# ::node	0.0	cut-02	15-16
# ::node	0.1	meet-03	4-5
# ::node	0.1.0	person	7-8
# ::node	0.1.0.0	analyze-01	7-8
# ::node	0.1.0.0.0	stock	6-7
# ::node	0.1.0.1	country	9-11
# ::node	0.1.0.1.0	name	9-11
# ::node	0.1.0.1.0.0	"york"	9-11
# ::node	0.1.0.1.0.1	"new"	9-11
# ::node	0.1.1	perform-01	25-26
# ::node	0.1.1.0	improve-01	20-21
# ::node	0.1.1.0.0	substantial	19-20
# ::node	0.1.1.1	finance	24-25
# ::node	0.1.1.2	current	23-24
# ::node	0.1.2	morning	3-4
# ::node	0.2	early	2-3
# ::root	0	promise-01
# ::edge	analyze-01	ARG0	person	0.1.0.0	0.1.0	
# ::edge	analyze-01	ARG1	stock	0.1.0.0	0.1.0.0.0	
# ::edge	country	name	name	0.1.0.1	0.1.0.1.0	
# ::edge	improve-01	ARG1	perform-01	0.1.1.0	0.1.1	
# ::edge	improve-01	degree	substantial	0.1.1.0	0.1.1.0.0	
# ::edge	meet-03	ARG0	person	0.1	0.1.0	
# ::edge	meet-03	time	morning	0.1	0.1.2	
# ::edge	name	op1	"york"	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	name	op2	"new"	0.1.0.1.0	0.1.0.1.0.1	
# ::edge	perform-01	ARG1	meet-03	0.1.1	0.1	
# ::edge	perform-01	mod	finance	0.1.1	0.1.1.1	
# ::edge	perform-01	time	current	0.1.1	0.1.1.2	
# ::edge	person	location	country	0.1.0	0.1.0.1	
# ::edge	promise-01	ARG1	cut-02	0	0.0	
# ::edge	promise-01	time	early	0	0.2	
# ::edge	promise-01	time	meet-03	0	0.1	
(p2 / promise-01 
      :ARG1 (c2 / cut-02) 
      :time (m / meet-03 
            :ARG0 (p3 / person 
                  :ARG0-of (a / analyze-01 
                        :ARG1 (s2 / stock)) 
                  :location (c3 / country 
                        :name (n / name 
                              :op1 "york" 
                              :op2 "new"))) 
            :ARG1-of (p / perform-01 
                  :ARG1-of (i / improve-01 
                        :degree (s / substantial)) 
                  :mod (f / finance) 
                  :time (c / current)) 
            :time (m2 / morning)) 
      :time (e / early))

# ::snt i promise on my honour
# ::tok i promise on my honour
# ::alignments 4-5|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:56.399
# ::node	0	promise-01	1-2
# ::node	0.0	i	0-1
# ::node	0.1	honor-01	4-5
# ::root	0	promise-01
# ::edge	promise-01	ARG0	i	0	0.0	
# ::edge	promise-01	ARG2	honor-01	0	0.1	
(p / promise-01 
      :ARG0 (i / i) 
      :ARG2 (h / honor-01))

# ::snt in 1949 he betrayed a close friend laszlo rajk by promising his life for a false confession
# ::tok in 1949 he betrayed a close friend laszlo rajk by promising his life for a false confession
# ::alignments 16-17|0.0 15-16|0 12-13|0.0.1 10-11|0.0.1.0 6-7|0.0.1.0.0.0.0+0.0.1.0.0.0 2-3|0.0.1.0.0 1-2|0.0.0.0+0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:56.441
# ::node	0	false	15-16
# ::node	0.0	confess-01	16-17
# ::node	0.0.0	date-entity	1-2
# ::node	0.0.0.0	1949	1-2
# ::node	0.0.1	life	12-13
# ::node	0.0.1.0	promise-01	10-11
# ::node	0.0.1.0.0	he	2-3
# ::node	0.0.1.0.0.0	have-rel-role-91	6-7
# ::node	0.0.1.0.0.0.0	friend	6-7
# ::root	0	false
(f / false 
      :mod-of (c / confess-01 
            :ARG0 (d / date-entity 
                  :year 1949) 
            :ARG1 (l / life 
                  :ARG1-of (p / promise-01 
                        :ARG0 (h2 / he 
                              :ARG1-of (h / have-rel-role-91 
                                    :ARG2 (f2 / friend)))))))

# ::snt it promises no manna tomorrow it might be dubbed the radical moderate option a compromise between those fearful of any further reforms and radicals who would plunge the economy into the icy bath of capitalism tomorrow
# ::tok it promises no manna tomorrow it might be dubbed the radical moderate option a compromise between those fearful of any further reforms and radicals who would plunge the economy into the icy bath of capitalism tomorrow
# ::alignments 35-36|0.0.0.0.0.0.0.0.2.0.2 34-35|0.0.0.0.0.0.0.0.2.0.1.0 32-33|0.0.0.0.0.0.0.0.2.0.1 28-29|0.0.0.0.0.0.0.0.2.0.0 26-27|0.0.0.0.0.0.0.0.2.0 23-24|0.0.0.0.0.0.0.0.2 22-23|0.0.0.0.0.0.0.0 21-22|0.0.0.0.0.0.0 20-21|0.0.0.0.0.0.0.0.0 19-20|0.0.0.0.0.0.0.0.1 17-18|0.0.0.0.0.0 15-16|0.0.0.0.0.0.1 14-15|0.0.0.0.0 12-13|0.2 11-12|0.2.0 10-11|0.2.1 8-9|0 5-6|0.1 4-5|0.0 2-3|0.0.1 1-2|0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:57.141
# ::node	0	dub-01	8-9
# ::node	0.0	tomorrow	4-5
# ::node	0.0.0	promise-01	1-2
# ::node	0.0.0.0	it	0-1
# ::node	0.0.0.0.0	compromise-01	14-15
# ::node	0.0.0.0.0.0	fear-01	17-18
# ::node	0.0.0.0.0.0.0	reform-01	21-22
# ::node	0.0.0.0.0.0.0.0	and	22-23
# ::node	0.0.0.0.0.0.0.0.0	further	20-21
# ::node	0.0.0.0.0.0.0.0.1	any	19-20
# ::node	0.0.0.0.0.0.0.0.2	radical	23-24
# ::node	0.0.0.0.0.0.0.0.2.0	plunge-01	26-27
# ::node	0.0.0.0.0.0.0.0.2.0.0	economy	28-29
# ::node	0.0.0.0.0.0.0.0.2.0.1	bathe-01	32-33
# ::node	0.0.0.0.0.0.0.0.2.0.1.0	capitalism	34-35
# ::node	0.0.0.0.0.0.0.0.2.0.2	tomorrow	35-36
# ::node	0.0.0.0.0.0.1	between	15-16
# ::node	0.0.1	-	2-3
# ::node	0.1	it	5-6
# ::node	0.2	option	12-13
# ::node	0.2.0	moderate	11-12
# ::node	0.2.1	radical	10-11
# ::root	0	dub-01
# ::edge	and	degree	further	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0	
# ::edge	and	mod	any	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.1	
# ::edge	and	op1	reform-01	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	and	op2	radical	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.2	
# ::edge	bathe-01	ARG1	capitalism	0.0.0.0.0.0.0.0.2.0.1	0.0.0.0.0.0.0.0.2.0.1.0	
# ::edge	between	op1	fear-01	0.0.0.0.0.0.1	0.0.0.0.0.0	
# ::edge	compromise-01	ARG0	it	0.0.0.0.0	0.0.0.0	
# ::edge	compromise-01	ARG1	fear-01	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	dub-01	ARG0	tomorrow	0	0.0	
# ::edge	dub-01	ARG1	it	0	0.1	
# ::edge	dub-01	ARG2	option	0	0.2	
# ::edge	fear-01	ARG1	reform-01	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	option	mod	moderate	0.2	0.2.0	
# ::edge	option	mod	radical	0.2	0.2.1	
# ::edge	plunge-01	ARG0	radical	0.0.0.0.0.0.0.0.2.0	0.0.0.0.0.0.0.0.2	
# ::edge	plunge-01	ARG1	economy	0.0.0.0.0.0.0.0.2.0	0.0.0.0.0.0.0.0.2.0.0	
# ::edge	plunge-01	ARG2	bathe-01	0.0.0.0.0.0.0.0.2.0	0.0.0.0.0.0.0.0.2.0.1	
# ::edge	plunge-01	time	tomorrow	0.0.0.0.0.0.0.0.2.0	0.0.0.0.0.0.0.0.2.0.2	
# ::edge	promise-01	ARG0	it	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	tomorrow	0.0.0	0.0	
# ::edge	tomorrow	polarity	-	0.0	0.0.1	
(d / dub-01 
      :ARG0 (t2 / tomorrow 
            :ARG1-of (p2 / promise-01 
                  :ARG0 (i2 / it 
                        :ARG0-of (c2 / compromise-01 
                              :ARG1 (f2 / fear-01 
                                    :ARG1 (r2 / reform-01 
                                          :op-of (a / and 
                                                :degree (f / further) 
                                                :mod (a2 / any) 
                                                :op1 (r / radical 
                                                      :ARG0-of (p / plunge-01 
                                                            :ARG1 (e / economy) 
                                                            :ARG2 (b / bathe-01 
                                                                  :ARG1 (c / capitalism)) 
                                                            :time (t / tomorrow))))) 
                                    :op-of (b2 / between))))) 
            :polarity (- / -)) 
      :ARG1 (i / it) 
      :ARG2 (o / option 
            :mod (m / moderate) 
            :mod (r3 / radical)))

# ::snt but now his intellectual horizons had shrunk to debates about motorways or endless conversations about the right school for ones child it was as if he didnt want to remember the henry who had once promised a little more than that
# ::tok but now his intellectual horizons had shrunk to debates about motorways or endless conversations about the right school for ones child it was as if he didnt want to remember the henry who had once promised a little more than that
# ::alignments 37-38|0.1.2.1.1.0.0.0 35-36|0.1.1 34-35|0.1.1.0 29-30|0.1.2 27-28|0.1 25-26|0.1.2.0 21-22|0.1.0 20-21|0.1.2.1 19-20|0.1.2.1.0 17-18|0.1.2.1.1 12-13|0.1.2.1.1.0.1 11-12|0.1.2.1.1.0 8-9|0.1.2.1.1.0.0 3-4|0.0 1-2|0.1.2.1.1.0.0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:57.509
# ::node	0	contrast-01	0-1
# ::node	0.0	intellectual	3-4
# ::node	0.1	want-01	27-28
# ::node	0.1.0	it	21-22
# ::node	0.1.1	promise-01	35-36
# ::node	0.1.1.0	once	34-35
# ::node	0.1.2	remember-01	29-30
# ::node	0.1.2.0	he	25-26
# ::node	0.1.2.1	child	20-21
# ::node	0.1.2.1.0	one	19-20
# ::node	0.1.2.1.1	school	17-18
# ::node	0.1.2.1.1.0	or	11-12
# ::node	0.1.2.1.1.0.0	debate-01	8-9
# ::node	0.1.2.1.1.0.0.0	little	37-38
# ::node	0.1.2.1.1.0.0.1	now	1-2
# ::node	0.1.2.1.1.0.1	endless	12-13
# ::root	0	contrast-01
# ::edge	child	mod	one	0.1.2.1	0.1.2.1.0	
# ::edge	contrast-01	ARG1	intellectual	0	0.0	
# ::edge	contrast-01	ARG2	want-01	0	0.1	
# ::edge	debate-01	ARG0	little	0.1.2.1.1.0.0	0.1.2.1.1.0.0.0	
# ::edge	debate-01	ARG1	or	0.1.2.1.1.0.0	0.1.2.1.1.0	
# ::edge	now	mod	debate-01	0.1.2.1.1.0.0.1	0.1.2.1.1.0.0	
# ::edge	or	op1	endless	0.1.2.1.1.0	0.1.2.1.1.0.1	
# ::edge	or	prep-with	school	0.1.2.1.1.0	0.1.2.1.1	
# ::edge	promise-01	ARG0	want-01	0.1.1	0.1	
# ::edge	promise-01	time	once	0.1.1	0.1.1.0	
# ::edge	remember-01	ARG0	he	0.1.2	0.1.2.0	
# ::edge	remember-01	ARG1	child	0.1.2	0.1.2.1	
# ::edge	school	poss	child	0.1.2.1.1	0.1.2.1	
# ::edge	want-01	ARG0	it	0.1	0.1.0	
# ::edge	want-01	ARG1	remember-01	0.1	0.1.2	
(c2 / contrast-01 
      :ARG1 (i2 / intellectual) 
      :ARG2 (w / want-01 
            :ARG0 (i / it) 
            :ARG0-of (p / promise-01 
                  :time (o / once)) 
            :ARG1 (r / remember-01 
                  :ARG0 (h / he) 
                  :ARG1 (c / child 
                        :mod (o2 / one) 
                        :poss-of (s / school 
                              :prep-with-of (o3 / or 
                                    :ARG1-of (d / debate-01 
                                          :ARG0 (l / little) 
                                          :mod-of (n / now)) 
                                    :op1 (e / endless)))))))

# ::snt eric forth the consumer affairs minister has promised an urgent inquiry into the way some agencies use addresses as the basis of a reference
# ::tok eric forth the consumer affairs minister has promised an urgent inquiry into the way some agencies use addresses as the basis of a reference
# ::alignments 23-24|0.1.1 17-18|0.1.0 16-17|0.1.0.0 15-16|0.1.0.0.0 14-15|0.1.0.1 13-14|0.2 10-11|0.1 9-10|0.1.2 7-8|0 5-6|0.0.1+0.0 4-5|0.0.0.0 3-4|0.0.0 1-2|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:57.732
# ::node	0	promise-01	7-8
# ::node	0.0	have-org-role-91	5-6
# ::node	0.0.0	consume-01	3-4
# ::node	0.0.0.0	affair	4-5
# ::node	0.0.0.0.0	forth	1-2
# ::node	0.0.1	minister	5-6
# ::node	0.1	inquire-01	10-11
# ::node	0.1.0	address	17-18
# ::node	0.1.0.0	use-01	16-17
# ::node	0.1.0.0.0	agency	15-16
# ::node	0.1.0.1	some	14-15
# ::node	0.1.1	reference-01	23-24
# ::node	0.1.2	urgent	9-10
# ::node	0.2	way	13-14
# ::root	0	promise-01
# ::edge	address	mod	some	0.1.0	0.1.0.1	
# ::edge	consume-01	ARG0	affair	0.0.0	0.0.0.0	
# ::edge	forth	op1	affair	0.0.0.0.0	0.0.0.0	
# ::edge	have-org-role-91	ARG1	consume-01	0.0	0.0.0	
# ::edge	have-org-role-91	ARG2	minister	0.0	0.0.1	
# ::edge	inquire-01	ARG1	address	0.1	0.1.0	
# ::edge	inquire-01	ARG2	reference-01	0.1	0.1.1	
# ::edge	inquire-01	mod	urgent	0.1	0.1.2	
# ::edge	promise-01	ARG1	have-org-role-91	0	0.0	
# ::edge	promise-01	ARG2	inquire-01	0	0.1	
# ::edge	promise-01	manner	way	0	0.2	
# ::edge	use-01	ARG0	address	0.1.0.0	0.1.0	
# ::edge	use-01	ARG1	agency	0.1.0.0	0.1.0.0.0	
(p / promise-01 
      :ARG1 (h / have-org-role-91 
            :ARG1 (c / consume-01 
                  :ARG0 (a3 / affair 
                        :op-of (f / forth))) 
            :ARG2 (m / minister)) 
      :ARG2 (i / inquire-01 
            :ARG1 (a / address 
                  :ARG0-of (u / use-01 
                        :ARG1 (a2 / agency)) 
                  :mod (s / some)) 
            :ARG2 (r / reference-01) 
            :mod (u2 / urgent)) 
      :manner (w / way))

# ::snt this race promises to prove one of the highlights with warning attempting to redeem his reputation dented by his performance in the eclipse when the distance was too far and the ground too soft
# ::tok this race promises to prove one of the highlights with warning attempting to redeem his reputation dented by his performance in the eclipse when the distance was too far and the ground too soft
# ::alignments 33-34|0.0.1.0.1.0.1 32-33|0.0.1.0.1.0.1.0 31-32|0.0.0 29-30|0.0.1.0.1.0 28-29|0.0.1.0.1.0.0 27-28|0.0.1.0.1.0.0.0 25-26|0.0.1.0.1.1 19-20|0.0.1.0.1 15-16|0.0.1.0.0 13-14|0.0.1.0 11-12|0.0.1 10-11|0.0 8-9|0 4-5|0.0.2 2-3|0.0.2.0.0 1-2|0.0.2.0 0-1|0.0.2.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:57.900
# ::node	0	highlight-01	8-9
# ::node	0.0	warn-01	10-11
# ::node	0.0.0	ground	31-32
# ::node	0.0.1	attempt-01	11-12
# ::node	0.0.1.0	redeem-01	13-14
# ::node	0.0.1.0.0	reputation	15-16
# ::node	0.0.1.0.1	perform-01	19-20
# ::node	0.0.1.0.1.0	and	29-30
# ::node	0.0.1.0.1.0.0	far	28-29
# ::node	0.0.1.0.1.0.0.0	too	27-28
# ::node	0.0.1.0.1.0.1	soft	33-34
# ::node	0.0.1.0.1.0.1.0	too	32-33
# ::node	0.0.1.0.1.1	distance-01	25-26
# ::node	0.0.2	prove-01	4-5
# ::node	0.0.2.0	race	1-2
# ::node	0.0.2.0.0	promise-01	2-3
# ::node	0.0.2.0.1	this	0-1
# ::root	0	highlight-01
# ::edge	and	op1	far	0.0.1.0.1.0	0.0.1.0.1.0.0	
# ::edge	and	op2	soft	0.0.1.0.1.0	0.0.1.0.1.0.1	
# ::edge	attempt-01	ARG1	redeem-01	0.0.1	0.0.1.0	
# ::edge	distance-01	ARG1	perform-01	0.0.1.0.1.1	0.0.1.0.1	
# ::edge	far	degree	too	0.0.1.0.1.0.0	0.0.1.0.1.0.0.0	
# ::edge	highlight-01	ARG1	warn-01	0	0.0	
# ::edge	perform-01	ARG1	and	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	promise-01	ARG0	race	0.0.2.0.0	0.0.2.0	
# ::edge	prove-01	ARG0	race	0.0.2	0.0.2.0	
# ::edge	prove-01	manner	warn-01	0.0.2	0.0	
# ::edge	race	mod	this	0.0.2.0	0.0.2.0.1	
# ::edge	redeem-01	ARG1	reputation	0.0.1.0	0.0.1.0.0	
# ::edge	redeem-01	ARG2	perform-01	0.0.1.0	0.0.1.0.1	
# ::edge	soft	degree	too	0.0.1.0.1.0.1	0.0.1.0.1.0.1.0	
# ::edge	warn-01	ARG0	ground	0.0	0.0.0	
# ::edge	warn-01	ARG1	attempt-01	0.0	0.0.1	
(h / highlight-01 
      :ARG1 (w / warn-01 
            :ARG0 (g / ground) 
            :ARG1 (a2 / attempt-01 
                  :ARG1 (r2 / redeem-01 
                        :ARG1 (r / reputation) 
                        :ARG2 (p / perform-01 
                              :ARG1 (a / and 
                                    :op1 (f / far 
                                          :degree (t2 / too)) 
                                    :op2 (s / soft 
                                          :degree (t / too))) 
                              :ARG1-of (d / distance-01)))) 
            :manner-of (p2 / prove-01 
                  :ARG0 (r3 / race 
                        :ARG0-of (p3 / promise-01) 
                        :mod (t3 / this)))))

# ::snt it could buy that second car youve always promised yourself
# ::tok it could buy that second car youve always promised yourself
# ::alignments 8-9|0.1.1 7-8|0.1.1.0 5-6|0.0 2-3|0.1 1-2|0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:57.926
# ::node	0	possible	1-2
# ::node	0.0	car	5-6
# ::node	0.1	buy-01	2-3
# ::node	0.1.0	it	0-1
# ::node	0.1.1	promise-01	8-9
# ::node	0.1.1.0	always	7-8
# ::root	0	possible
# ::edge	buy-01	ARG0	it	0.1	0.1.0	
# ::edge	buy-01	ARG1	promise-01	0.1	0.1.1	
# ::edge	buy-01	mod	possible	0.1	0	
# ::edge	possible	domain	car	0	0.0	
# ::edge	promise-01	time	always	0.1.1	0.1.1.0	
(p2 / possible 
      :domain (c / car) 
      :mod-of (b / buy-01 
            :ARG0 (i / it) 
            :ARG1 (p / promise-01 
                  :time (a / always))))

# ::snt though they claimed that hitler was bluffing and would run away if faced with united opposition they would not call this bluff without a firm promise of support from great britain, they acquiesced in extracting concessions from czechoslovakia when this promise was refused
# ::tok though they claimed that hitler was bluffing and would run away if faced with united opposition they would not call this bluff without a firm promise of support from great britain , they acquiesced in extracting concessions from czechoslovakia when this promise was refused
# ::alignments 43-44|0.0.0.1.2.0.0.1 41-42|0.0.0.1.2.0.0.1.0 40-41|0.0.0.1.2.0.0.1.0.0 36-37|0.0.0.1.2.0.0.0 32-33|0.0.0.1.2.0.0 29-31|0.0.0.1.0.0.0+0.0.0.1.0.0.1+0.0.0.1.0.0+0.0.0.1.0 27-28|0.1 25-26|0 24-25|0.2 21-22|0.0.1 20-21|0.0.1.0 16-17|0.0 15-16|0.0.0 14-15|0.0.0.0 12-13|0.0.0.1 10-11|0.0.0.1.1 7-8|0.0.0.1.2 2-3|0.0.0.1.2.0 1-2|0.0.0.1.2.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:58.882
# ::node	0	promise-01	25-26
# ::node	0.0	they	16-17
# ::node	0.0.0	oppose-01	15-16
# ::node	0.0.0.0	unite-01	14-15
# ::node	0.0.0.1	face-01	12-13
# ::node	0.0.0.1.0	country	29-31
# ::node	0.0.0.1.0.0	name	29-31
# ::node	0.0.0.1.0.0.0	"britain"	29-31
# ::node	0.0.0.1.0.0.1	"great"	29-31
# ::node	0.0.0.1.1	away	10-11
# ::node	0.0.0.1.2	and	7-8
# ::node	0.0.0.1.2.0	claim-01	2-3
# ::node	0.0.0.1.2.0.0	they	32-33
# ::node	0.0.0.1.2.0.0.0	concede-01	36-37
# ::node	0.0.0.1.2.0.0.1	refuse-01	43-44
# ::node	0.0.0.1.2.0.0.1.0	promise-01	41-42
# ::node	0.0.0.1.2.0.0.1.0.0	this	40-41
# ::node	0.0.0.1.2.0.1	they	1-2
# ::node	0.0.1	bluff-01	21-22
# ::node	0.0.1.0	this	20-21
# ::node	0.1	support-01	27-28
# ::node	0.2	firm	24-25
# ::root	0	promise-01
# ::edge	and	op1	claim-01	0.0.0.1.2	0.0.0.1.2.0	
# ::edge	and	op2	face-01	0.0.0.1.2	0.0.0.1	
# ::edge	bluff-01	ARG1	they	0.0.1	0.0	
# ::edge	bluff-01	mod	this	0.0.1	0.0.1.0	
# ::edge	claim-01	ARG0	they	0.0.0.1.2.0	0.0.0.1.2.0.0	
# ::edge	claim-01	ARG1	they	0.0.0.1.2.0	0.0.0.1.2.0.1	
# ::edge	concede-01	ARG0	they	0.0.0.1.2.0.0.0	0.0.0.1.2.0.0	
# ::edge	country	name	name	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	face-01	ARG0	country	0.0.0.1	0.0.0.1.0	
# ::edge	face-01	ARG1	away	0.0.0.1	0.0.0.1.1	
# ::edge	face-01	instrument	oppose-01	0.0.0.1	0.0.0	
# ::edge	name	op1	"britain"	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	name	op2	"great"	0.0.0.1.0.0	0.0.0.1.0.0.1	
# ::edge	oppose-01	ARG0	they	0.0.0	0.0	
# ::edge	promise-01	ARG0	they	0	0.0	
# ::edge	promise-01	ARG1	support-01	0	0.1	
# ::edge	promise-01	manner	firm	0	0.2	
# ::edge	promise-01	mod	this	0.0.0.1.2.0.0.1.0	0.0.0.1.2.0.0.1.0.0	
# ::edge	refuse-01	ARG0	they	0.0.0.1.2.0.0.1	0.0.0.1.2.0.0	
# ::edge	refuse-01	ARG1	promise-01	0.0.0.1.2.0.0.1	0.0.0.1.2.0.0.1.0	
# ::edge	unite-01	ARG1	oppose-01	0.0.0.0	0.0.0	
(p2 / promise-01 
      :ARG0 (t4 / they 
            :ARG0-of (o / oppose-01 
                  :ARG1-of (u / unite-01) 
                  :instrument-of (f2 / face-01 
                        :ARG0 (c2 / country 
                              :name (n / name 
                                    :op1 "britain" 
                                    :op2 "great")) 
                        :ARG1 (a / away) 
                        :op-of (a2 / and 
                              :op1 (c3 / claim-01 
                                    :ARG0 (t2 / they 
                                          :ARG0-of (c / concede-01) 
                                          :ARG0-of (r / refuse-01 
                                                :ARG1 (p / promise-01 
                                                      :mod (t / this)))) 
                                    :ARG1 (t5 / they))))) 
            :ARG1-of (b / bluff-01 
                  :mod (t3 / this))) 
      :ARG1 (s / support-01) 
      :manner (f / firm))

# ::snt but will this work when people have seen it for themselves  as eastern european states enjoy the benefits of the greater self determination promised by mikhail gorbachev there will be increased dangers of tension between them
# ::tok but will this work when people have seen it for themselves as eastern european states enjoy the benefits of the greater self determination promised by mikhail gorbachev there will be increased dangers of tension between them
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:58.883
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt when first elected in 1983 he promised to force the pace of economic change to make turkey leap an age
# ::tok when first elected in 1983 he promised to force the pace of economic change to make turkey leap an age
# ::alignments 19-20|0 13-14|0.0.0.0.0 12-13|0.0.0.0.0.0 10-11|0.0.0.0 8-9|0.0.0.2 6-7|0.0.0 5-6|0.0 4-5|0.0.0.3.0+0.0.0.3 2-3|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:58.926
# ::node	0	age-01	19-20
# ::node	0.0	he	5-6
# ::node	0.0.0	promise-01	6-7
# ::node	0.0.0.0	pace	10-11
# ::node	0.0.0.0.0	change-01	13-14
# ::node	0.0.0.0.0.0	economy	12-13
# ::node	0.0.0.1	elect-01	2-3
# ::node	0.0.0.2	force	8-9
# ::node	0.0.0.3	date-entity	4-5
# ::node	0.0.0.3.0	1983	4-5
# ::root	0	age-01
# ::edge	age-01	ARG1	he	0	0.0	
# ::edge	change-01	ARG1	economy	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	date-entity	year	1983	0.0.0.3	0.0.0.3.0	
# ::edge	elect-01	ARG1	promise-01	0.0.0.1	0.0.0	
# ::edge	pace	poss	change-01	0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	ARG0	he	0.0.0	0.0	
# ::edge	promise-01	ARG1	pace	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG2	force	0.0.0	0.0.0.2	
# ::edge	promise-01	time	date-entity	0.0.0	0.0.0.3	
(a / age-01 
      :ARG1 (h / he 
            :ARG0-of (p2 / promise-01 
                  :ARG1 (p / pace 
                        :poss (c / change-01 
                              :ARG1 (e / economy))) 
                  :ARG1-of (e2 / elect-01) 
                  :ARG2 (f / force) 
                  :time (d / date-entity 
                        :year 1983))))

# ::snt the nationalists promised to end the drain of resources out of the country to industrialize in order to supply home consumption
# ::tok the nationalists promised to end the drain of resources out of the country to industrialize in order to supply home consumption
# ::alignments 20-21|0.1.0.0.0.0 19-20|0.1.0.0.0.0.0 18-19|0.1.0.0.0 12-13|0.1.0.0 8-9|0.1.0 6-7|0.1 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:58.963
# ::node	0	promise-01	2-3
# ::node	0.0	nationalist	1-2
# ::node	0.1	drain-01	6-7
# ::node	0.1.0	resource	8-9
# ::node	0.1.0.0	country	12-13
# ::node	0.1.0.0.0	supply-01	18-19
# ::node	0.1.0.0.0.0	consume-01	20-21
# ::node	0.1.0.0.0.0.0	home	19-20
# ::root	0	promise-01
# ::edge	consume-01	ARG1	home	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	drain-01	ARG1	resource	0.1	0.1.0	
# ::edge	promise-01	ARG0	nationalist	0	0.0	
# ::edge	promise-01	ARG1	drain-01	0	0.1	
# ::edge	resource	poss	country	0.1.0	0.1.0.0	
# ::edge	supply-01	ARG0	country	0.1.0.0.0	0.1.0.0	
# ::edge	supply-01	ARG1	consume-01	0.1.0.0.0	0.1.0.0.0.0	
(p / promise-01 
      :ARG0 (n / nationalist) 
      :ARG1 (d / drain-01 
            :ARG1 (r / resource 
                  :poss (c2 / country 
                        :ARG0-of (s / supply-01 
                              :ARG1 (c / consume-01 
                                    :ARG1 (h / home)))))))

# ::snt oh no i can promise you that
# ::tok oh no i can promise you that
# ::alignments 5-6|0.0.2 4-5|0.0 3-4|0 2-3|0.0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:59.029
# ::node	0	possible	3-4
# ::node	0.0	promise-01	4-5
# ::node	0.0.0	i	2-3
# ::node	0.0.1	-	1-2
# ::node	0.0.2	you	5-6
# ::root	0	possible
(p2 / possible 
      :mod-of (p / promise-01 
            :ARG0 (i / i) 
            :ARG1 (- / -) 
            :ARG2 (y / you)))

# ::snt 10006 promise-v 801775 Promising 537584
# ::tok 10006 promise - v 801775 Promising 537584
# ::alignments 6-7|0.0.2+0.0.1+0.0.0+0.0 4-5|0.1.2+0.1.1+0.1.0+0.1 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:59.067
# ::node	0	promise-01	1-2
# ::node	0.0	date-entity	6-7
# ::node	0.0.0	84	6-7
# ::node	0.0.1	75	6-7
# ::node	0.0.2	53	6-7
# ::node	0.1	date-entity	4-5
# ::node	0.1.0	75	4-5
# ::node	0.1.1	17	4-5
# ::node	0.1.2	80	4-5
# ::root	0	promise-01
# ::edge	date-entity	day	75	0.1	0.1.0	
# ::edge	date-entity	day	84	0.0	0.0.0	
# ::edge	date-entity	month	17	0.1	0.1.1	
# ::edge	date-entity	month	75	0.0	0.0.1	
# ::edge	date-entity	year	53	0.0	0.0.2	
# ::edge	date-entity	year	80	0.1	0.1.2	
# ::edge	promise-01	ARG1	date-entity	0	0.0	
# ::edge	promise-01	li	date-entity	0	0.1	
(p / promise-01 
      :ARG1 (d / date-entity 
            :day 84 
            :month 75 
            :year 53) 
      :li (d2 / date-entity 
            :day 75 
            :month 17 
            :year 80))

# ::snt  "From May 20-June 5; details on 071 490 4734.  Promising an all star line-up of DJs in the weeks to come (Paul Oakenfold, Mike Pickering, NOrman Cook etc), Brightons Escape Club reopens from June 9."
# ::tok " From May 20 - June 5 ; details on 071 490 4734 . Promising an all star line - up of DJs in the weeks to come ( Paul Oakenfold , Mike Pickering , NOrman Cook etc ) , Brightons Escape Club reopens from June 9. "
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:59.068
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt EMPTY_SENTENCE
# ::tok EMPTY_SENTENCE
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:59.070
# ::node	0	amr-empty	0-1
# ::root	0	amr-empty
(a / amr-empty)

# ::snt professor hartt told the court that he hoped the money would be a bonus promised by mr de bry
# ::tok professor hartt told the court that he hoped the money would be a bonus promised by mr de bry
# ::alignments 14-15|0 13-14|0.0 9-10|0.0.0 7-8|0.0.0.0 6-7|0.0.0.0.0 4-5|0.0.0.0.0.0.0 2-3|0.0.0.0.0.0 0-1|0.0.0.0.0.1.0+0.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:59.168
# ::node	0	promise-01	14-15
# ::node	0.0	bonus	13-14
# ::node	0.0.0	money	9-10
# ::node	0.0.0.0	hope-01	7-8
# ::node	0.0.0.0.0	he	6-7
# ::node	0.0.0.0.0.0	tell-01	2-3
# ::node	0.0.0.0.0.0.0	court	4-5
# ::node	0.0.0.0.0.1	have-org-role-91	0-1
# ::node	0.0.0.0.0.1.0	professor	0-1
# ::root	0	promise-01
# ::edge	bonus	domain	money	0.0	0.0.0	
# ::edge	have-org-role-91	ARG0	he	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	have-org-role-91	ARG2	professor	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	hope-01	ARG0	he	0.0.0.0	0.0.0.0.0	
# ::edge	hope-01	ARG1	money	0.0.0.0	0.0.0	
# ::edge	promise-01	ARG1	bonus	0	0.0	
# ::edge	tell-01	ARG0	he	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	tell-01	ARG2	court	0.0.0.0.0.0	0.0.0.0.0.0.0	
(p / promise-01 
      :ARG1 (b / bonus 
            :domain (m / money 
                  :ARG1-of (h / hope-01 
                        :ARG0 (h2 / he 
                              :ARG0-of (t / tell-01 
                                    :ARG2 (c / court)) 
                              :ARG0-of (h3 / have-org-role-91 
                                    :ARG2 (p2 / professor)))))))

# ::snt christ all bloody mighty she was thinking ive landed myself a good one here  you can come twice for that she promised and showed him the tip of her tongue
# ::tok christ all bloody mighty she was thinking ive landed myself a good one here you can come twice for that she promised and showed him the tip of her tongue
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:59.169
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the president tried to soothe the unions by promising that as inflation drops to zero in a few weeks real pay will increase
# ::tok the president tried to soothe the unions by promising that as inflation drops to zero in a few weeks real pay will increase
# ::alignments 22-23|0.2 20-21|0.2.0 19-20|0.2.0.1 18-19|0.2.0.0.1+0.2.0.0 17-18|0.2.0.0.0 14-15|0.1 12-13|0 11-12|0.0 8-9|0.2.1 6-7|0.2.1.0 2-3|0.2.1.0.0 1-2|0.2.1.0.0.0+0.2.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:59.266
# ::node	0	drop-01	12-13
# ::node	0.0	inflation	11-12
# ::node	0.1	zero	14-15
# ::node	0.2	increase-01	22-23
# ::node	0.2.0	pay-01	20-21
# ::node	0.2.0.0	temporal-quantity	18-19
# ::node	0.2.0.0.0	few	17-18
# ::node	0.2.0.0.1	week	18-19
# ::node	0.2.0.1	real	19-20
# ::node	0.2.1	promise-01	8-9
# ::node	0.2.1.0	union	6-7
# ::node	0.2.1.0.0	try-01	2-3
# ::node	0.2.1.0.0.0	president	1-2
# ::node	0.2.1.0.0.0.0	have-org-role-91	1-2
# ::root	0	drop-01
# ::edge	drop-01	ARG0	inflation	0	0.0	
# ::edge	drop-01	ARG1	zero	0	0.1	
# ::edge	few	op1	temporal-quantity	0.2.0.0.0	0.2.0.0	
# ::edge	have-org-role-91	ARG2	president	0.2.1.0.0.0.0	0.2.1.0.0.0	
# ::edge	increase-01	ARG0	pay-01	0.2	0.2.0	
# ::edge	increase-01	purpose	drop-01	0.2	0	
# ::edge	pay-01	location	temporal-quantity	0.2.0	0.2.0.0	
# ::edge	pay-01	mod	real	0.2.0	0.2.0.1	
# ::edge	promise-01	ARG0	union	0.2.1	0.2.1.0	
# ::edge	promise-01	ARG1	increase-01	0.2.1	0.2	
# ::edge	temporal-quantity	unit	week	0.2.0.0	0.2.0.0.1	
# ::edge	try-01	ARG0	president	0.2.1.0.0	0.2.1.0.0.0	
# ::edge	try-01	ARG1	union	0.2.1.0.0	0.2.1.0	
(d / drop-01 
      :ARG0 (i2 / inflation) 
      :ARG1 (z / zero) 
      :purpose-of (i / increase-01 
            :ARG0 (p / pay-01 
                  :location (t / temporal-quantity 
                        :op-of (f / few) 
                        :unit (w / week)) 
                  :mod (r / real)) 
            :ARG1-of (p2 / promise-01 
                  :ARG0 (u / union 
                        :ARG1-of (t2 / try-01 
                              :ARG0 (p3 / president 
                                    :ARG2-of (h / have-org-role-91)))))))

# ::snt   among the firms current commissions the new glyndebourne opera house which will have three fullsize stages promises to be among the most challenging
# ::tok among the firms current commissions the new glyndebourne opera house which will have three fullsize stages promises to be among the most challenging
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:59.266
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt tadeusz mazowiecki polands first noncommunist prime minister since the war yesterday promised his soviet hosts that the country would fully honour its commitments within the warsaw pact and the east blocs trading organisation comecon writes rupert cornwell
# ::tok tadeusz mazowiecki polands first noncommunist prime minister since the war yesterday promised his soviet hosts that the country would fully honour its commitments within the warsaw pact and the east blocs trading organisation comecon writes rupert cornwell
# ::alignments 34-35|0.0 32-33|0.0.0 31-32|0.0.0.0 30-31|0 29-30|0.0.1.2 27-28|0.0.1 25-27|0.0.1.1.3.0.0.0+0.0.1.1.3.0.0.1+0.0.1.1.3.0.0+0.0.1.1.3.0 23-24|0.0.1.1.3 22-23|0.0.1.1.1 20-21|0.0.1.1 19-20|0.0.1.1.2 17-18|0.0.1.1.0 11-12|0.0.1.0 10-11|0.0.1.0.3 9-10|0.0.1.0.0 7-8|0.0.1.0.2 6-7|0.0.1.0.1.0+0.0.1.0.1 5-6|0.0.1.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:59.505
# ::node	0	bloc	30-31
# ::node	0.0	write-01	34-35
# ::node	0.0.0	organize-01	32-33
# ::node	0.0.0.0	trade-01	31-32
# ::node	0.0.1	and	27-28
# ::node	0.0.1.0	promise-01	11-12
# ::node	0.0.1.0.0	war	9-10
# ::node	0.0.1.0.1	have-org-role-91	6-7
# ::node	0.0.1.0.1.0	minister	6-7
# ::node	0.0.1.0.1.0.0	prime	5-6
# ::node	0.0.1.0.2	since	7-8
# ::node	0.0.1.0.3	yesterday	10-11
# ::node	0.0.1.1	honor-01	20-21
# ::node	0.0.1.1.0	country	17-18
# ::node	0.0.1.1.1	commit-01	22-23
# ::node	0.0.1.1.2	full	19-20
# ::node	0.0.1.1.3	within	23-24
# ::node	0.0.1.1.3.0	organization	25-27
# ::node	0.0.1.1.3.0.0	name	25-27
# ::node	0.0.1.1.3.0.0.0	"pact"	25-27
# ::node	0.0.1.1.3.0.0.1	"warsaw"	25-27
# ::node	0.0.1.2	east	29-30
# ::root	0	bloc
(b / bloc 
      :ARG0-of (w / write-01 
            :ARG1 (o / organize-01 
                  :ARG1 (t / trade-01)) 
            :op-of (a / and 
                  :op1 (p / promise-01 
                        :ARG0 (w3 / war) 
                        :ARG1 (h2 / have-org-role-91 
                              :ARG2 (m / minister 
                                    :mod (p2 / prime))) 
                        :op-of (s / since) 
                        :time (y / yesterday)) 
                  :op2 (h / honor-01 
                        :ARG0 (c2 / country) 
                        :ARG1 (c / commit-01) 
                        :degree (f / full) 
                        :duration (w2 / within 
                              :op1 (o2 / organization 
                                    :name (n / name 
                                          :op1 "pact" 
                                          :op2 "warsaw")))) 
                  :op3 (e / east))))

# ::snt they had after all gone into the series promising a 30 result
# ::tok they had after all gone into the series promising a 30 result
# ::alignments 11-12|0.0.0.1 10-11|0.0.0.1.0 8-9|0.0.0 7-8|0.0.0.0 3-4|0.1 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:59.587
# ::node	0	after	2-3
# ::node	0.0	they	0-1
# ::node	0.0.0	promise-01	8-9
# ::node	0.0.0.0	series	7-8
# ::node	0.0.0.1	result-01	11-12
# ::node	0.0.0.1.0	30	10-11
# ::node	0.1	all	3-4
# ::root	0	after
# ::edge	after	op1	all	0	0.1	
# ::edge	promise-01	ARG0	series	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	they	0.0.0	0.0	
# ::edge	promise-01	ARG2	result-01	0.0.0	0.0.0.1	
# ::edge	result-01	quant	30	0.0.0.1	0.0.0.1.0	
# ::edge	they	mod	after	0.0	0	
(a2 / after 
      :mod-of (t / they 
            :ARG1-of (p / promise-01 
                  :ARG0 (s / series) 
                  :ARG2 (r / result-01 
                        :quant 30))) 
      :op1 (a / all))

# ::snt if this promises significantly more than could be raised in a flotation a formal auction will be initiated
# ::tok if this promises significantly more than could be raised in a flotation a formal auction will be initiated
# ::alignments 17-18|0 14-15|0.0 13-14|0.0.1 8-9|0.0.0.1 6-7|0.0.0.1.1 3-4|0.0.0.1.0 2-3|0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:59.634
# ::node	0	initiate-01	17-18
# ::node	0.0	auction-01	14-15
# ::node	0.0.0	promise-01	2-3
# ::node	0.0.0.0	this	1-2
# ::node	0.0.0.1	raise-01	8-9
# ::node	0.0.0.1.0	significant	3-4
# ::node	0.0.0.1.1	possible	6-7
# ::node	0.0.1	formal	13-14
# ::root	0	initiate-01
# ::edge	auction-01	ARG1	promise-01	0.0	0.0.0	
# ::edge	auction-01	mod	formal	0.0	0.0.1	
# ::edge	initiate-01	ARG1	auction-01	0	0.0	
# ::edge	possible	domain	raise-01	0.0.0.1.1	0.0.0.1	
# ::edge	promise-01	ARG0	this	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	raise-01	0.0.0	0.0.0.1	
# ::edge	raise-01	ARG1	significant	0.0.0.1	0.0.0.1.0	
(i / initiate-01 
      :ARG1 (a / auction-01 
            :ARG1 (p2 / promise-01 
                  :ARG0 (t / this) 
                  :ARG1 (r / raise-01 
                        :ARG1 (s / significant) 
                        :domain-of (p / possible))) 
            :mod (f / formal)))

# ::snt 10014 promise-v 801789 Promise 537527
# ::tok 10014 promise - v 801789 Promise 537527
# ::alignments 6-7|0.0.2+0.0.1+0.0.0+0.0 4-5|0.1.2+0.1.1+0.1.0+0.1 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:59.656
# ::node	0	promise-01	1-2
# ::node	0.0	date-entity	6-7
# ::node	0.0.0	27	6-7
# ::node	0.0.1	75	6-7
# ::node	0.0.2	53	6-7
# ::node	0.1	date-entity	4-5
# ::node	0.1.0	89	4-5
# ::node	0.1.1	17	4-5
# ::node	0.1.2	80	4-5
# ::root	0	promise-01
# ::edge	date-entity	day	27	0.0	0.0.0	
# ::edge	date-entity	day	89	0.1	0.1.0	
# ::edge	date-entity	month	17	0.1	0.1.1	
# ::edge	date-entity	month	75	0.0	0.0.1	
# ::edge	date-entity	year	53	0.0	0.0.2	
# ::edge	date-entity	year	80	0.1	0.1.2	
# ::edge	promise-01	ARG1	date-entity	0	0.0	
# ::edge	promise-01	li	date-entity	0	0.1	
(p / promise-01 
      :ARG1 (d / date-entity 
            :day 27 
            :month 75 
            :year 53) 
      :li (d2 / date-entity 
            :day 89 
            :month 17 
            :year 80))

# ::snt  I don\t want you discussing it.  Promise?" `Promise."
# ::tok I don\t want you discussing it . Promise ? " ' Promise . "
# ::alignments 5-6|0.1 4-5|0 3-4|0.0 2-3|0.2 0-1|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:59.696
# ::node	0	discuss-01	4-5
# ::node	0.0	you	3-4
# ::node	0.1	it	5-6
# ::node	0.2	want-01	2-3
# ::node	0.2.0	i	0-1
# ::root	0	discuss-01
# ::edge	discuss-01	ARG0	you	0	0.0	
# ::edge	discuss-01	ARG1	it	0	0.1	
# ::edge	want-01	ARG0	i	0.2	0.2.0	
# ::edge	want-01	ARG1	discuss-01	0.2	0	
(d / discuss-01 
      :ARG0 (y / you) 
      :ARG1 (i / it) 
      :ARG1-of (w / want-01 
            :ARG0 (i2 / i)))

# ::snt EMPTY_SENTENCE
# ::tok EMPTY_SENTENCE
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:59.697
# ::node	0	amr-empty	0-1
# ::root	0	amr-empty
(a / amr-empty)

# ::snt the us has promised to step up and improve the quality of arms supplies in the hope that the mojahedin win a victory by the end of the summer
# ::tok the us has promised to step up and improve the quality of arms supplies in the hope that the mojahedin win a victory by the end of the summer
# ::alignments 28-29|0.0.1.0.0 20-21|0.0.1.0 16-17|0.0.1.0.1 13-14|0.0.1 12-13|0.0.0.0.0 10-11|0.0.0.0 8-9|0.0.0 7-8|0.0 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:59.753
# ::node	0	promise-01	3-4
# ::node	0.0	and	7-8
# ::node	0.0.0	improve-01	8-9
# ::node	0.0.0.0	quality	10-11
# ::node	0.0.0.0.0	arm	12-13
# ::node	0.0.1	supply-01	13-14
# ::node	0.0.1.0	win-01	20-21
# ::node	0.0.1.0.0	summer	28-29
# ::node	0.0.1.0.1	hope-01	16-17
# ::root	0	promise-01
# ::edge	and	op1	improve-01	0.0	0.0.0	
# ::edge	and	op2	supply-01	0.0	0.0.1	
# ::edge	hope-01	ARG1	win-01	0.0.1.0.1	0.0.1.0	
# ::edge	improve-01	ARG1	quality	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	and	0	0.0	
# ::edge	quality	poss	arm	0.0.0.0	0.0.0.0.0	
# ::edge	supply-01	ARG1	win-01	0.0.1	0.0.1.0	
# ::edge	win-01	ARG1	summer	0.0.1.0	0.0.1.0.0	
(p / promise-01 
      :ARG1 (a2 / and 
            :op1 (i / improve-01 
                  :ARG1 (q / quality 
                        :poss (a / arm))) 
            :op2 (s2 / supply-01 
                  :ARG1 (w / win-01 
                        :ARG1 (s / summer) 
                        :ARG1-of (h / hope-01)))))

# ::snt isnt that just typical  well have to get her to open up somehow i promised the girls id give them the story from the horses mouth the minute i got here
# ::tok isnt that just typical well have to get her to open up somehow i promised the girls id give them the story from the horses mouth the minute i got here
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:59.753
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt if you promise to behave yourself you can stay in the office for tonight
# ::tok if you promise to behave yourself you can stay in the office for tonight
# ::alignments 13-14|0.0.1.0 11-12|0.0.1 8-9|0.0 7-8|0 6-7|0.0.0 4-5|0.0.0.0 2-3|0.0.0.0.1 1-2|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:32:59.779
# ::node	0	possible	7-8
# ::node	0.0	stay-01	8-9
# ::node	0.0.0	you	6-7
# ::node	0.0.0.0	behave-01	4-5
# ::node	0.0.0.0.0	you	1-2
# ::node	0.0.0.0.1	promise-01	2-3
# ::node	0.0.1	office	11-12
# ::node	0.0.1.0	tonight	13-14
# ::root	0	possible
# ::edge	behave-01	ARG0	you	0.0.0.0	0.0.0.0.0	
# ::edge	behave-01	ARG1	you	0.0.0.0	0.0.0	
# ::edge	office	location	tonight	0.0.1	0.0.1.0	
# ::edge	possible	domain	stay-01	0	0.0	
# ::edge	promise-01	ARG2	behave-01	0.0.0.0.1	0.0.0.0	
# ::edge	stay-01	ARG0	you	0.0	0.0.0	
# ::edge	stay-01	location	office	0.0	0.0.1	
(p / possible 
      :domain (s / stay-01 
            :ARG0 (y / you 
                  :ARG1-of (b / behave-01 
                        :ARG0 (y2 / you) 
                        :ARG2-of (p2 / promise-01))) 
            :location (o / office 
                  :location (t / tonight))))

# ::snt its being reported by an american television network that iraq is saying that all foreign hostages in saddam husseins human shield can leave kuwait and baghdad if president bush promises not to launch an attack
# ::tok its being reported by an american television network that iraq is saying that all foreign hostages in saddam husseins human shield can leave kuwait and baghdad if president bush promises not to launch an attack
# ::alignments 34-35|0.2.2.2.1 32-33|0.2.2.2 29-30|0.2.2 28-29|0.2.2.0 27-28|0.2.2.0.0.1+0.2.2.0.0 24-25|0.2.1 22-23|0.2 21-22|0.2.3 20-21|0.2.0 19-20|0.2.0.0 17-18|0.2.2.1.0.0+0.2.2.1.0+0.2.2.1 15-16|0.2.2.2.0 14-15|0.2.2.2.0.0 13-14|0.2.2.2.1.0 11-12|0 7-8|0.0 6-7|0.0.0 5-6|0.2.2.0.0.0.0.0+0.2.2.0.0.0.0+0.2.2.0.0.0 2-3|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:00.868
# ::node	0	say-01	11-12
# ::node	0.0	network	7-8
# ::node	0.0.0	television	6-7
# ::node	0.1	report-01	2-3
# ::node	0.2	leave-01	22-23
# ::node	0.2.0	shield	20-21
# ::node	0.2.0.0	human	19-20
# ::node	0.2.1	and	24-25
# ::node	0.2.2	promise-01	29-30
# ::node	0.2.2.0	bush-league	28-29
# ::node	0.2.2.0.0	have-org-role-91	27-28
# ::node	0.2.2.0.0.0	country	5-6
# ::node	0.2.2.0.0.0.0	name	5-6
# ::node	0.2.2.0.0.0.0.0	"America"	5-6
# ::node	0.2.2.0.0.1	president	27-28
# ::node	0.2.2.1	person	17-18
# ::node	0.2.2.1.0	name	17-18
# ::node	0.2.2.1.0.0	"Saddam"	17-18
# ::node	0.2.2.2	launch-01	32-33
# ::node	0.2.2.2.0	hostage	15-16
# ::node	0.2.2.2.0.0	foreign	14-15
# ::node	0.2.2.2.1	attack-01	34-35
# ::node	0.2.2.2.1.0	all	13-14
# ::node	0.2.3	possible	21-22
# ::root	0	say-01
# ::edge	attack-01	ARG1	all	0.2.2.2.1	0.2.2.2.1.0	
# ::edge	country	name	name	0.2.2.0.0.0	0.2.2.0.0.0.0	
# ::edge	have-org-role-91	ARG0	bush-league	0.2.2.0.0	0.2.2.0	
# ::edge	have-org-role-91	ARG1	country	0.2.2.0.0	0.2.2.0.0.0	
# ::edge	have-org-role-91	ARG2	president	0.2.2.0.0	0.2.2.0.0.1	
# ::edge	hostage	mod	foreign	0.2.2.2.0	0.2.2.2.0.0	
# ::edge	launch-01	ARG0	hostage	0.2.2.2	0.2.2.2.0	
# ::edge	launch-01	ARG1	attack-01	0.2.2.2	0.2.2.2.1	
# ::edge	leave-01	ARG0	shield	0.2	0.2.0	
# ::edge	leave-01	ARG1	say-01	0.2	0	
# ::edge	leave-01	ARG2	and	0.2	0.2.1	
# ::edge	leave-01	condition	promise-01	0.2	0.2.2	
# ::edge	name	op1	"America"	0.2.2.0.0.0.0	0.2.2.0.0.0.0.0	
# ::edge	name	op1	"Saddam"	0.2.2.1.0	0.2.2.1.0.0	
# ::edge	network	mod	television	0.0	0.0.0	
# ::edge	person	name	name	0.2.2.1	0.2.2.1.0	
# ::edge	possible	domain	leave-01	0.2.3	0.2	
# ::edge	promise-01	ARG0	bush-league	0.2.2	0.2.2.0	
# ::edge	promise-01	ARG1	person	0.2.2	0.2.2.1	
# ::edge	promise-01	ARG2	launch-01	0.2.2	0.2.2.2	
# ::edge	report-01	ARG1	say-01	0.1	0	
# ::edge	say-01	ARG1	network	0	0.0	
# ::edge	shield	mod	human	0.2.0	0.2.0.0	
(s2 / say-01 
      :ARG1 (n2 / network 
            :mod (t / television)) 
      :ARG1-of (r / report-01) 
      :ARG1-of (l2 / leave-01 
            :ARG0 (s / shield 
                  :mod (h2 / human)) 
            :ARG2 (a2 / and) 
            :condition (p / promise-01 
                  :ARG0 (b / bush-league 
                        :ARG0-of (h / have-org-role-91 
                              :ARG1 (c / country 
                                    :name (n3 / name 
                                          :op1 "America")) 
                              :ARG2 (p2 / president))) 
                  :ARG1 (p4 / person 
                        :name (n / name 
                              :op1 "Saddam")) 
                  :ARG2 (l / launch-01 
                        :ARG0 (h3 / hostage 
                              :mod (f / foreign)) 
                        :ARG1 (a / attack-01 
                              :ARG1 (a3 / all)))) 
            :domain-of (p3 / possible)))

# ::snt president gorbachev promised yesterday to lift the blockade on lithuania if the rebel republic froze its declaration of independence while negotiations with moscow went ahead
# ::tok president gorbachev promised yesterday to lift the blockade on lithuania if the rebel republic froze its declaration of independence while negotiations with moscow went ahead
# ::alignments 24-25|0.0.0.1.0.0 20-21|0 18-19|0.0.1+0.0 16-17|0.0.0 14-15|0.0.0.1 13-14|0.0.0.0 12-13|0.0.0.0.0 7-8|0.0.0.1.0.2.0 5-6|0.0.0.1.0.2 3-4|0.0.0.1.0.3 2-3|0.0.0.1.0 0-1|0.0.0.1.0.1.0+0.0.0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:00.971
# ::node	0	negotiate-01	20-21
# ::node	0.0	depend-01	18-19
# ::node	0.0.0	declare-02	16-17
# ::node	0.0.0.0	republic	13-14
# ::node	0.0.0.0.0	rebel-01	12-13
# ::node	0.0.0.1	freeze-02	14-15
# ::node	0.0.0.1.0	promise-01	2-3
# ::node	0.0.0.1.0.0	ahead	24-25
# ::node	0.0.0.1.0.1	have-org-role-91	0-1
# ::node	0.0.0.1.0.1.0	president	0-1
# ::node	0.0.0.1.0.2	lift-01	5-6
# ::node	0.0.0.1.0.2.0	blockade-01	7-8
# ::node	0.0.0.1.0.3	yesterday	3-4
# ::node	0.0.1	-	18-19
# ::root	0	negotiate-01
(n / negotiate-01 
      :ARG1-of (d / depend-01 
            :ARG1-of (d2 / declare-02 
                  :ARG0 (r / republic 
                        :ARG0-of (r2 / rebel-01)) 
                  :ARG1-of (f / freeze-02 
                        :condition-of (p / promise-01 
                              :ARG1 (a / ahead) 
                              :ARG1-of (h / have-org-role-91 
                                    :ARG2 (p2 / president)) 
                              :ARG2 (l / lift-01 
                                    :ARG1 (b / blockade-01)) 
                              :time (y / yesterday)))) 
            :polarity -))

# ::snt richard luce the minister of arts has promised that the government will match pound for pound the 2m offered to the museum by the developers mepc
# ::tok richard luce the minister of arts has promised that the government will match pound for pound the 2m offered to the museum by the developers mepc
# ::alignments 24-25|0.2.0.0+0.2.0 18-19|0.2.1 12-13|0.1 7-8|0 5-6|0.0 3-4|0.2.2+0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:01.088
# ::node	0	promise-01	7-8
# ::node	0.0	art	5-6
# ::node	0.1	match-01	12-13
# ::node	0.2	have-org-role-91	3-4
# ::node	0.2.0	person	24-25
# ::node	0.2.0.0	develop-02	24-25
# ::node	0.2.1	offer-01	18-19
# ::node	0.2.2	minister	3-4
# ::root	0	promise-01
# ::edge	develop-02	ARG0	person	0.2.0.0	0.2.0	
# ::edge	have-org-role-91	ARG0	person	0.2	0.2.0	
# ::edge	have-org-role-91	ARG1	promise-01	0.2	0	
# ::edge	have-org-role-91	ARG2	minister	0.2	0.2.2	
# ::edge	offer-01	ARG1	have-org-role-91	0.2.1	0.2	
# ::edge	promise-01	ARG0	art	0	0.0	
# ::edge	promise-01	ARG1	match-01	0	0.1	
(p2 / promise-01 
      :ARG0 (a / art) 
      :ARG1 (m / match-01) 
      :ARG1-of (h / have-org-role-91 
            :ARG0 (p / person 
                  :ARG0-of (d / develop-02)) 
            :ARG1-of (o / offer-01) 
            :ARG2 (m2 / minister)))

# ::snt she had promised to the next day and was on her way out the door feeling tired but with racket in hand when the doctor called her
# ::tok she had promised to the next day and was on her way out the door feeling tired but with racket in hand when the doctor called her
# ::alignments 24-25|0.1.1.0.0.0 21-22|0.1.0 17-18|0 16-17|0.1 15-16|0.1.1 14-15|0.0 11-12|0.0.0 7-8|0.1.1.0.0.2 6-7|0.1.1.0.0.1 5-6|0.1.1.0.0.1.0 2-3|0.1.1.0.0 0-1|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:01.290
# ::node	0	contrast-01	17-18
# ::node	0.0	door	14-15
# ::node	0.0.0	way	11-12
# ::node	0.1	tire-01	16-17
# ::node	0.1.0	hand	21-22
# ::node	0.1.1	feel-01	15-16
# ::node	0.1.1.0	she	0-1
# ::node	0.1.1.0.0	promise-01	2-3
# ::node	0.1.1.0.0.0	doctor	24-25
# ::node	0.1.1.0.0.1	day	6-7
# ::node	0.1.1.0.0.1.0	next	5-6
# ::node	0.1.1.0.0.2	and	7-8
# ::root	0	contrast-01
# ::edge	and	op1	promise-01	0.1.1.0.0.2	0.1.1.0.0	
# ::edge	contrast-01	ARG0	door	0	0.0	
# ::edge	contrast-01	ARG1	tire-01	0	0.1	
# ::edge	day	mod	next	0.1.1.0.0.1	0.1.1.0.0.1.0	
# ::edge	feel-01	ARG0	she	0.1.1	0.1.1.0	
# ::edge	feel-01	ARG1	tire-01	0.1.1	0.1	
# ::edge	promise-01	ARG0	she	0.1.1.0.0	0.1.1.0	
# ::edge	promise-01	ARG1	doctor	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	promise-01	ARG2	day	0.1.1.0.0	0.1.1.0.0.1	
# ::edge	tire-01	ARG1	hand	0.1	0.1.0	
# ::edge	way	location	door	0.0.0	0.0	
(c / contrast-01 
      :ARG0 (d2 / door 
            :location-of (w / way)) 
      :ARG1 (t / tire-01 
            :ARG1 (h / hand) 
            :ARG1-of (f / feel-01 
                  :ARG0 (s / she 
                        :ARG0-of (p / promise-01 
                              :ARG1 (d / doctor) 
                              :ARG2 (d3 / day 
                                    :mod (n / next)) 
                              :op-of (a / and))))))

# ::snt they have not been paid for aerial installation work which bsb had promised to subsidise
# ::tok they have not been paid for aerial installation work which bsb had promised to subsidise
# ::alignments 14-15|0.1 12-13|0.1.1 7-8|0.1.0 6-7|0.1.0.0 4-5|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:01.310
# ::node	0	pay-01	4-5
# ::node	0.0	they	0-1
# ::node	0.1	subsidize-01	14-15
# ::node	0.1.0	install-01	7-8
# ::node	0.1.0.0	aerial	6-7
# ::node	0.1.1	promise-01	12-13
# ::root	0	pay-01
# ::edge	install-01	ARG0	aerial	0.1.0	0.1.0.0	
# ::edge	install-01	ARG1	subsidize-01	0.1.0	0.1	
# ::edge	pay-01	ARG1	they	0	0.0	
# ::edge	promise-01	ARG2	subsidize-01	0.1.1	0.1	
# ::edge	subsidize-01	ARG1	pay-01	0.1	0	
(p2 / pay-01 
      :ARG1 (t / they) 
      :ARG1-of (s / subsidize-01 
            :ARG1-of (i / install-01 
                  :ARG0 (a / aerial)) 
            :ARG2-of (p / promise-01)))

# ::snt he had promised to change sides and align himself with the noncommunist resistance after vietnamese troops withdrew in september
# ::tok he had promised to change sides and align himself with the noncommunist resistance after vietnamese troops withdrew in september
# ::alignments 18-19|0.1.0.2.0+0.1.0.2 16-17|0.1.0 15-16|0.1.0.0 13-14|0.1.0.1 12-13|0.2.1 6-7|0.1 5-6|0.2.0 4-5|0.2 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:01.398
# ::node	0	promise-01	2-3
# ::node	0.0	he	0-1
# ::node	0.1	and	6-7
# ::node	0.1.0	withdraw-01	16-17
# ::node	0.1.0.0	troop	15-16
# ::node	0.1.0.1	after	13-14
# ::node	0.1.0.2	date-entity	18-19
# ::node	0.1.0.2.0	9	18-19
# ::node	0.2	change-01	4-5
# ::node	0.2.0	side	5-6
# ::node	0.2.1	resist-01	12-13
# ::root	0	promise-01
# ::edge	after	op1	withdraw-01	0.1.0.1	0.1.0	
# ::edge	and	op1	withdraw-01	0.1	0.1.0	
# ::edge	change-01	ARG1	side	0.2	0.2.0	
# ::edge	date-entity	month	9	0.1.0.2	0.1.0.2.0	
# ::edge	promise-01	ARG0	he	0	0.0	
# ::edge	promise-01	ARG1	and	0	0.1	
# ::edge	promise-01	ARG2	change-01	0	0.2	
# ::edge	resist-01	ARG1	change-01	0.2.1	0.2	
# ::edge	withdraw-01	ARG1	troop	0.1.0	0.1.0.0	
# ::edge	withdraw-01	time	date-entity	0.1.0	0.1.0.2	
(p / promise-01 
      :ARG0 (h / he) 
      :ARG1 (a2 / and 
            :op1 (w / withdraw-01 
                  :ARG1 (t / troop) 
                  :op-of (a / after) 
                  :time (d / date-entity 
                        :month 9))) 
      :ARG2 (c / change-01 
            :ARG1 (s / side) 
            :ARG1-of (r / resist-01)))

# ::snt what did you want anyway  i promised genevieve id keep an eye out for her sister
# ::tok what did you want anyway i promised genevieve id keep an eye out for her sister
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:01.398
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the treacherous oak swayed above the tree that had promised the milk of paradise but had stood guard instead overtop the spilling of other fluids
# ::tok the treacherous oak swayed above the tree that had promised the milk of paradise but had stood guard instead overtop the spilling of other fluids
# ::alignments 23-24|0.1.0.0.0.0 18-19|0.2 16-17|0.1 14-15|0 13-14|0.0.0 11-12|0.0.1 9-10|0.0 6-7|0.1.0 4-5|0.1.0.0 3-4|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:01.534
# ::node	0	contrast-01	14-15
# ::node	0.0	promise-01	9-10
# ::node	0.0.0	paradise	13-14
# ::node	0.0.1	milk	11-12
# ::node	0.1	stand-01	16-17
# ::node	0.1.0	tree	6-7
# ::node	0.1.0.0	above	4-5
# ::node	0.1.0.0.0	sway-02	3-4
# ::node	0.1.0.0.0.0	other	23-24
# ::node	0.2	instead	18-19
# ::root	0	contrast-01
# ::edge	above	op1	tree	0.1.0.0	0.1.0	
# ::edge	contrast-01	ARG1	promise-01	0	0.0	
# ::edge	contrast-01	ARG2	stand-01	0	0.1	
# ::edge	instead	op1	contrast-01	0.2	0	
# ::edge	promise-01	ARG1	paradise	0.0	0.0.0	
# ::edge	promise-01	ARG2	milk	0.0	0.0.1	
# ::edge	stand-01	ARG0	tree	0.1	0.1.0	
# ::edge	sway-02	ARG1	other	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	sway-02	ARG2	above	0.1.0.0.0	0.1.0.0	
(c / contrast-01 
      :ARG1 (p2 / promise-01 
            :ARG1 (p / paradise) 
            :ARG2 (m / milk)) 
      :ARG2 (s / stand-01 
            :ARG0 (t / tree 
                  :op-of (a / above 
                        :ARG2-of (s2 / sway-02 
                              :ARG1 (o / other))))) 
      :op-of (i / instead))

# ::snt only free elections which the communist party promises but is almost bound to lose will persuade people to stay in east germany or to return there from the west
# ::tok only free elections which the communist party promises but is almost bound to lose will persuade people to stay in east germany or to return there from the west
# ::alignments 28-29|0.0.0.0.0.0.0.0 22-23|0.0.0.0.0.0 20-21|0.0.0.0.0.0.0.1 18-19|0.0.0.0.0.0.0 15-16|0.0.0.0.0 13-14|0.0.0.0 10-11|0.0.1.0 8-9|0 7-8|0.0 5-7|0.0.0.1.0+0.0.0.1.1+0.0.0.1+0.0.0 2-3|0.0.1 1-2|0.0.1.1 0-1|0.0.1.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:01.984
# ::node	0	contrast-01	8-9
# ::node	0.0	promise-01	7-8
# ::node	0.0.0	political-party	5-7
# ::node	0.0.0.0	lose-02	13-14
# ::node	0.0.0.0.0	persuade-01	15-16
# ::node	0.0.0.0.0.0	or	22-23
# ::node	0.0.0.0.0.0.0	stay-01	18-19
# ::node	0.0.0.0.0.0.0.0	west	28-29
# ::node	0.0.0.0.0.0.0.1	east	20-21
# ::node	0.0.0.1	name	5-7
# ::node	0.0.0.1.0	"Communist"	5-7
# ::node	0.0.0.1.1	"Party"	5-7
# ::node	0.0.1	elect-01	2-3
# ::node	0.0.1.0	almost	10-11
# ::node	0.0.1.1	free-41	1-2
# ::node	0.0.1.2	only	0-1
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	promise-01	0	0.0	
# ::edge	elect-01	ARG1	almost	0.0.1	0.0.1.0	
# ::edge	elect-01	mod	only	0.0.1	0.0.1.2	
# ::edge	free-41	ARG1	elect-01	0.0.1.1	0.0.1	
# ::edge	lose-02	ARG0	political-party	0.0.0.0	0.0.0	
# ::edge	lose-02	ARG1	persuade-01	0.0.0.0	0.0.0.0.0	
# ::edge	name	op1	"Communist"	0.0.0.1	0.0.0.1.0	
# ::edge	name	op2	"Party"	0.0.0.1	0.0.0.1.1	
# ::edge	or	op1	stay-01	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	persuade-01	ARG1	or	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	political-party	name	name	0.0.0	0.0.0.1	
# ::edge	promise-01	ARG0	political-party	0.0	0.0.0	
# ::edge	promise-01	ARG1	elect-01	0.0	0.0.1	
# ::edge	stay-01	ARG0	west	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	stay-01	ARG1	east	0.0.0.0.0.0.0	0.0.0.0.0.0.0.1	
(c / contrast-01 
      :ARG1 (p2 / promise-01 
            :ARG0 (p3 / political-party 
                  :ARG0-of (l / lose-02 
                        :ARG1 (p / persuade-01 
                              :ARG1 (o / or 
                                    :op1 (s / stay-01 
                                          :ARG0 (w / west) 
                                          :ARG1 (e / east))))) 
                  :name (n / name 
                        :op1 "Communist" 
                        :op2 "Party")) 
            :ARG1 (e2 / elect-01 
                  :ARG1 (a / almost) 
                  :ARG1-of (f / free-41) 
                  :mod (o2 / only))))

# ::snt   chinas new party leader has sent a doubleedged message to hong kong promising that capitalism can continue after 1997 but repeating warnings against interference from hong kong in mainland affairs
# ::tok chinas new party leader has sent a doubleedged message to hong kong promising that capitalism can continue after 1997 but repeating warnings against interference from hong kong in mainland affairs
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:01.985
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt i promised them wed go up and see them next weekend
# ::tok i promised them wed go up and see them next weekend
# ::alignments 10-11|0.0.0.1 9-10|0.0.0.1.0 7-8|0.0.0 6-7|0.0.0.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:02.002
# ::node	0	promise-01	1-2
# ::node	0.0	i	0-1
# ::node	0.0.0	see-01	7-8
# ::node	0.0.0.0	and	6-7
# ::node	0.0.0.1	weekend	10-11
# ::node	0.0.0.1.0	next	9-10
# ::root	0	promise-01
# ::edge	and	op1	see-01	0.0.0.0	0.0.0	
# ::edge	promise-01	ARG0	i	0	0.0	
# ::edge	see-01	ARG0	i	0.0.0	0.0	
# ::edge	see-01	time	weekend	0.0.0	0.0.0.1	
# ::edge	weekend	mod	next	0.0.0.1	0.0.0.1.0	
(p / promise-01 
      :ARG0 (i / i 
            :ARG0-of (s / see-01 
                  :op-of (a / and) 
                  :time (w / weekend 
                        :mod (n / next)))))

# ::snt for the opening game in the olympic stadium italy offer the prospect of a slow tactical game austria promise to play for a draw
# ::tok for the opening game in the olympic stadium italy offer the prospect of a slow tactical game austria promise to play for a draw
# ::alignments 23-24|0 20-21|0.1 18-19|0.1.0 16-17|0.1.0.1 15-16|0.0 11-12|0.1.0.0 9-10|0.1.0.2 8-9|0.1.0.2.0.1.0.0+0.1.0.2.0.1.0+0.1.0.2.0.1 6-8|0.1.0.2.0.0.0.0.0+0.1.0.2.0.0.0.0.1+0.1.0.2.0.0.0.0+0.1.0.2.0.0.0 3-4|0.1.0.2.0 2-3|0.1.0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:02.421
# ::node	0	draw-02	23-24
# ::node	0.0	tactic	15-16
# ::node	0.1	play-01	20-21
# ::node	0.1.0	promise-01	18-19
# ::node	0.1.0.0	prospect	11-12
# ::node	0.1.0.1	game	16-17
# ::node	0.1.0.2	offer-01	9-10
# ::node	0.1.0.2.0	game	3-4
# ::node	0.1.0.2.0.0	open-01	2-3
# ::node	0.1.0.2.0.0.0	thing	6-8
# ::node	0.1.0.2.0.0.0.0	name	6-8
# ::node	0.1.0.2.0.0.0.0.0	"stadium"	6-8
# ::node	0.1.0.2.0.0.0.0.1	"olympic"	6-8
# ::node	0.1.0.2.0.1	country	8-9
# ::node	0.1.0.2.0.1.0	name	8-9
# ::node	0.1.0.2.0.1.0.0	"Italy"	8-9
# ::root	0	draw-02
# ::edge	country	name	name	0.1.0.2.0.1	0.1.0.2.0.1.0	
# ::edge	draw-02	ARG1	tactic	0	0.0	
# ::edge	game	location	country	0.1.0.2.0	0.1.0.2.0.1	
# ::edge	name	op1	"Italy"	0.1.0.2.0.1.0	0.1.0.2.0.1.0.0	
# ::edge	name	op1	"stadium"	0.1.0.2.0.0.0.0	0.1.0.2.0.0.0.0.0	
# ::edge	name	op2	"olympic"	0.1.0.2.0.0.0.0	0.1.0.2.0.0.0.0.1	
# ::edge	offer-01	ARG0	game	0.1.0.2	0.1.0.2.0	
# ::edge	offer-01	ARG1	promise-01	0.1.0.2	0.1.0	
# ::edge	open-01	ARG0	game	0.1.0.2.0.0	0.1.0.2.0	
# ::edge	open-01	ARG1	thing	0.1.0.2.0.0	0.1.0.2.0.0.0	
# ::edge	play-01	ARG1	draw-02	0.1	0	
# ::edge	promise-01	ARG0	prospect	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG1	game	0.1.0	0.1.0.1	
# ::edge	promise-01	ARG2	play-01	0.1.0	0.1	
# ::edge	thing	name	name	0.1.0.2.0.0.0	0.1.0.2.0.0.0.0	
(d / draw-02 
      :ARG1 (t / tactic) 
      :ARG1-of (p / play-01 
            :ARG2-of (p2 / promise-01 
                  :ARG0 (p3 / prospect) 
                  :ARG1 (g / game) 
                  :ARG1-of (o / offer-01 
                        :ARG0 (g2 / game 
                              :ARG0-of (o2 / open-01 
                                    :ARG1 (t2 / thing 
                                          :name (n2 / name 
                                                :op1 "stadium" 
                                                :op2 "olympic"))) 
                              :location (c / country 
                                    :name (n / name 
                                          :op1 "Italy")))))))

# ::snt the actress playing in the western abandons her cowboy lover for the comic after he promises to take her to hollywood and put her name up in lights but the scandal that follows wrecks her career
# ::tok the actress playing in the western abandons her cowboy lover for the comic after he promises to take her to hollywood and put her name up in lights but the scandal that follows wrecks her career
# ::alignments 35-36|0.0.0.0 30-31|0.0.0.0.0 28-29|0 27-28|0.0.2.0.0 21-22|0.0.1.1 20-21|0.0.1.0.0+0.0.1.0+0.0.1 15-16|0.0 14-15|0.0.0 13-14|0.0.2 6-7|0.0.2.0 5-6|0.0.2.0.1.0.0.0+0.0.2.0.1.0.0+0.0.2.0.1.0 2-3|0.0.2.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:02.845
# ::node	0	contrast-01	28-29
# ::node	0.0	promise-01	15-16
# ::node	0.0.0	he	14-15
# ::node	0.0.0.0	career	35-36
# ::node	0.0.0.0.0	scandal	30-31
# ::node	0.0.1	organization	20-21
# ::node	0.0.1.0	name	20-21
# ::node	0.0.1.0.0	"Hollywood"	20-21
# ::node	0.0.1.1	and	21-22
# ::node	0.0.2	after	13-14
# ::node	0.0.2.0	abandon-01	6-7
# ::node	0.0.2.0.0	light	27-28
# ::node	0.0.2.0.1	play-01	2-3
# ::node	0.0.2.0.1.0	world-region	5-6
# ::node	0.0.2.0.1.0.0	name	5-6
# ::node	0.0.2.0.1.0.0.0	"West"	5-6
# ::root	0	contrast-01
# ::edge	abandon-01	ARG0	light	0.0.2.0	0.0.2.0.0	
# ::edge	abandon-01	ARG1	play-01	0.0.2.0	0.0.2.0.1	
# ::edge	abandon-01	time	after	0.0.2.0	0.0.2	
# ::edge	after	op1	promise-01	0.0.2	0.0	
# ::edge	and	op1	organization	0.0.1.1	0.0.1	
# ::edge	career	poss	he	0.0.0.0	0.0.0	
# ::edge	career	poss	scandal	0.0.0.0	0.0.0.0.0	
# ::edge	contrast-01	ARG1	promise-01	0	0.0	
# ::edge	name	op1	"Hollywood"	0.0.1.0	0.0.1.0.0	
# ::edge	name	op1	"West"	0.0.2.0.1.0.0	0.0.2.0.1.0.0.0	
# ::edge	organization	name	name	0.0.1	0.0.1.0	
# ::edge	play-01	ARG1	world-region	0.0.2.0.1	0.0.2.0.1.0	
# ::edge	promise-01	ARG0	he	0.0	0.0.0	
# ::edge	promise-01	ARG2	organization	0.0	0.0.1	
# ::edge	world-region	name	name	0.0.2.0.1.0	0.0.2.0.1.0.0	
(c2 / contrast-01 
      :ARG1 (p / promise-01 
            :ARG0 (h / he 
                  :poss-of (c / career 
                        :poss (s / scandal))) 
            :ARG2 (o / organization 
                  :name (n / name 
                        :op1 "Hollywood") 
                  :op-of (a / and)) 
            :op-of (a2 / after 
                  :time-of (a3 / abandon-01 
                        :ARG0 (l / light) 
                        :ARG1 (p2 / play-01 
                              :ARG1 (w / world-region 
                                    :name (n2 / name 
                                          :op1 "West")))))))

# ::snt when the enclave returns to chinese rule it will do so on similar terms to those promised for hong kong with peking guaranteeing that a capitalist system and lifestyle will be maintained for at least 50 years
# ::tok when the enclave returns to chinese rule it will do so on similar terms to those promised for hong kong with peking guaranteeing that a capitalist system and lifestyle will be maintained for at least 50 years
# ::alignments 36-37|0.0.0.0.0.0.1+0.0.0.0.0.0 35-36|0.0.0.0.0.0.0 31-32|0.0 28-29|0.2 27-28|0 26-27|0.1 25-26|0.1.0 22-23|0.0.0 18-20|0.0.0.0.2.0+0.0.0.0.2.1+0.0.0.0.2+0.0.0.0 16-17|0.0.0.0.0 13-14|0.0.0.0.0.1 10-11|0.0.0.0.0.1.0 7-8|0.0.0.0.1.0 6-7|0.0.0.0.1 5-6|0.0.0.0.1.1.1.0.0.0+0.0.0.0.1.1.1.0.0+0.0.0.0.1.1.1.0+0.0.0.0.1.1.1 3-4|0.0.0.0.1.1 2-3|0.0.0.0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:03.196
# ::node	0	and	27-28
# ::node	0.0	maintain-01	31-32
# ::node	0.0.0	guarantee-01	22-23
# ::node	0.0.0.0	country	18-20
# ::node	0.0.0.0.0	promise-01	16-17
# ::node	0.0.0.0.0.0	temporal-quantity	36-37
# ::node	0.0.0.0.0.0.0	50	35-36
# ::node	0.0.0.0.0.0.1	year	36-37
# ::node	0.0.0.0.0.1	term	13-14
# ::node	0.0.0.0.0.1.0	so	10-11
# ::node	0.0.0.0.1	rule-03	6-7
# ::node	0.0.0.0.1.0	it	7-8
# ::node	0.0.0.0.1.1	return-02	3-4
# ::node	0.0.0.0.1.1.0	enclave	2-3
# ::node	0.0.0.0.1.1.1	person	5-6
# ::node	0.0.0.0.1.1.1.0	country	5-6
# ::node	0.0.0.0.1.1.1.0.0	name	5-6
# ::node	0.0.0.0.1.1.1.0.0.0	"China"	5-6
# ::node	0.0.0.0.2	name	18-20
# ::node	0.0.0.0.2.0	"kong"	18-20
# ::node	0.0.0.0.2.1	"hong"	18-20
# ::node	0.1	system	26-27
# ::node	0.1.0	capitalist	25-26
# ::node	0.2	lifestyle	28-29
# ::root	0	and
# ::edge	and	op1	system	0	0.1	
# ::edge	and	op2	lifestyle	0	0.2	
# ::edge	country	name	name	0.0.0.0	0.0.0.0.2	
# ::edge	country	name	name	0.0.0.0.1.1.1.0	0.0.0.0.1.1.1.0.0	
# ::edge	guarantee-01	ARG0	country	0.0.0	0.0.0.0	
# ::edge	guarantee-01	ARG1	maintain-01	0.0.0	0.0	
# ::edge	maintain-01	ARG1	and	0.0	0	
# ::edge	name	op1	"China"	0.0.0.0.1.1.1.0.0	0.0.0.0.1.1.1.0.0.0	
# ::edge	name	op1	"kong"	0.0.0.0.2	0.0.0.0.2.0	
# ::edge	name	op2	"hong"	0.0.0.0.2	0.0.0.0.2.1	
# ::edge	person	mod	country	0.0.0.0.1.1.1	0.0.0.0.1.1.1.0	
# ::edge	promise-01	ARG0	temporal-quantity	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	promise-01	ARG1	country	0.0.0.0.0	0.0.0.0	
# ::edge	return-02	ARG0	enclave	0.0.0.0.1.1	0.0.0.0.1.1.0	
# ::edge	return-02	ARG1	rule-03	0.0.0.0.1.1	0.0.0.0.1	
# ::edge	return-02	ARG2	person	0.0.0.0.1.1	0.0.0.0.1.1.1	
# ::edge	rule-03	ARG0	it	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	rule-03	ARG1	country	0.0.0.0.1	0.0.0.0	
# ::edge	system	mod	capitalist	0.1	0.1.0	
# ::edge	temporal-quantity	quant	50	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	temporal-quantity	unit	year	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	term	degree	so	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	term	op1	promise-01	0.0.0.0.0.1	0.0.0.0.0	
(a / and 
      :ARG1-of (m / maintain-01 
            :ARG1-of (g / guarantee-01 
                  :ARG0 (c2 / country 
                        :ARG1-of (p / promise-01 
                              :ARG0 (t / temporal-quantity 
                                    :quant 50 
                                    :unit (y / year)) 
                              :op-of (t2 / term 
                                    :degree (s2 / so))) 
                        :ARG1-of (r / rule-03 
                              :ARG0 (i / it) 
                              :ARG1-of (r2 / return-02 
                                    :ARG0 (e / enclave) 
                                    :ARG2 (p2 / person 
                                          :mod (c3 / country 
                                                :name (n2 / name 
                                                      :op1 "China"))))) 
                        :name (n / name 
                              :op1 "kong" 
                              :op2 "hong")))) 
      :op1 (s / system 
            :mod (c / capitalist)) 
      :op2 (l / lifestyle))

# ::snt although saddled by his predecessor with the decision to fragment the ncc mr patten promised at the conservative party conference to produce a white paper on environment policy
# ::tok although saddled by his predecessor with the decision to fragment the ncc mr patten promised at the conservative party conference to produce a white paper on environment policy
# ::alignments 27-28|0.1.2 26-27|0.1.2.0 24-25|0.1.0 23-24|0.1.0.0 21-22|0.1 19-20|0.0 18-19|0.0.0 17-18|0.0.0.0 14-15|0 7-8|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:03.323
# ::node	0	promise-01	14-15
# ::node	0.0	conference	19-20
# ::node	0.0.0	party	18-19
# ::node	0.0.0.0	conservative	17-18
# ::node	0.1	produce-01	21-22
# ::node	0.1.0	paper	24-25
# ::node	0.1.0.0	white	23-24
# ::node	0.1.1	decide-01	7-8
# ::node	0.1.2	policy	27-28
# ::node	0.1.2.0	environment	26-27
# ::root	0	promise-01
# ::edge	conference	mod	party	0.0	0.0.0	
# ::edge	decide-01	ARG1	produce-01	0.1.1	0.1	
# ::edge	paper	mod	white	0.1.0	0.1.0.0	
# ::edge	party	mod	conservative	0.0.0	0.0.0.0	
# ::edge	policy	topic	environment	0.1.2	0.1.2.0	
# ::edge	produce-01	ARG1	paper	0.1	0.1.0	
# ::edge	produce-01	ARG2	policy	0.1	0.1.2	
# ::edge	promise-01	ARG0	conference	0	0.0	
# ::edge	promise-01	ARG2	produce-01	0	0.1	
(p5 / promise-01 
      :ARG0 (c / conference 
            :mod (p4 / party 
                  :mod (c2 / conservative))) 
      :ARG2 (p3 / produce-01 
            :ARG1 (p2 / paper 
                  :mod (w / white)) 
            :ARG1-of (d / decide-01) 
            :ARG2 (p / policy 
                  :topic (e / environment))))

# ::snt later that day 15 oct at the questors theatre in ealing he will be the guest of honour at a fundraising event for the questors in which we are promised the opportunity to find out what makes a critic what are his prejudices and his preferences and what are his fears and hopes for british and world theatre
# ::tok later that day 15 oct at the questors theatre in ealing he will be the guest of honour at a fundraising event for the questors in which we are promised the opportunity to find out what makes a critic what are his prejudices and his preferences and what are his fears and hopes for british and world theatre
# ::alignments 56-57|0.0.1 55-56|0.0 52-53|0.0.0 51-52|0.1.1 50-51|0 46-47|0.1 43-44|0.1.0.0 38-39|0.1.0 31-32|0.0.0.0.0.1 29-30|0.0.0.0.0 27-28|0.0.0.0 21-22|0.1.0.1.1 17-18|0.1.0.1 15-16|0.1.0.1.2 11-12|0.0.0.0.0.0 4-5|0.1.0.1.1.0.0.0+0.1.0.1.1.0.0 3-4|0.1.0.1.0 2-3|0.1.0.1.0.0 0-1|0.1.0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:04.143
# ::node	0	fear-01	50-51
# ::node	0.0	and	55-56
# ::node	0.0.0	hope-01	52-53
# ::node	0.0.0.0	we	27-28
# ::node	0.0.0.0.0	promise-01	29-30
# ::node	0.0.0.0.0.0	he	11-12
# ::node	0.0.0.0.0.1	opportunity	31-32
# ::node	0.0.1	world	56-57
# ::node	0.1	and	46-47
# ::node	0.1.0	criticize-01	38-39
# ::node	0.1.0.0	and	43-44
# ::node	0.1.0.1	honor-01	17-18
# ::node	0.1.0.1.0	15	3-4
# ::node	0.1.0.1.0.0	day	2-3
# ::node	0.1.0.1.1	event	21-22
# ::node	0.1.0.1.1.0	late	0-1
# ::node	0.1.0.1.1.0.0	date-entity	4-5
# ::node	0.1.0.1.1.0.0.0	10	4-5
# ::node	0.1.0.1.2	guest	15-16
# ::node	0.1.1	and	51-52
# ::root	0	fear-01
# ::edge	and	op1	criticize-01	0.1	0.1.0	
# ::edge	and	op1	world	0.0	0.0.1	
# ::edge	and	op2	fear-01	0.1	0	
# ::edge	and	op3	and	0.1	0.1.1	
# ::edge	criticize-01	ARG0	and	0.1.0	0.1.0.0	
# ::edge	criticize-01	ARG1	honor-01	0.1.0	0.1.0.1	
# ::edge	date-entity	month	10	0.1.0.1.1.0.0	0.1.0.1.1.0.0.0	
# ::edge	day	mod	15	0.1.0.1.0.0	0.1.0.1.0	
# ::edge	fear-01	ARG0	and	0	0.0	
# ::edge	guest	poss	honor-01	0.1.0.1.2	0.1.0.1	
# ::edge	honor-01	ARG0	15	0.1.0.1	0.1.0.1.0	
# ::edge	honor-01	ARG1	event	0.1.0.1	0.1.0.1.1	
# ::edge	hope-01	ARG0	we	0.0.0	0.0.0.0	
# ::edge	hope-01	ARG1	and	0.0.0	0.0	
# ::edge	late	op1	date-entity	0.1.0.1.1.0	0.1.0.1.1.0.0	
# ::edge	late	poss	event	0.1.0.1.1.0	0.1.0.1.1	
# ::edge	promise-01	ARG0	he	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	promise-01	ARG1	we	0.0.0.0.0	0.0.0.0	
# ::edge	promise-01	ARG2	opportunity	0.0.0.0.0	0.0.0.0.0.1	
(f / fear-01 
      :ARG0 (a / and 
            :ARG1-of (h / hope-01 
                  :ARG0 (w2 / we 
                        :ARG1-of (p / promise-01 
                              :ARG0 (h3 / he) 
                              :ARG2 (o / opportunity)))) 
            :op1 (w / world)) 
      :op-of (a3 / and 
            :op1 (c / criticize-01 
                  :ARG0 (a4 / and) 
                  :ARG1 (h2 / honor-01 
                        :ARG0 (12 / 15 
                              :mod-of (d2 / day)) 
                        :ARG1 (e / event 
                              :poss-of (l / late 
                                    :op1 (d / date-entity 
                                          :month 10))) 
                        :poss-of (g / guest))) 
            :op2 (a2 / and)))

# ::snt yet in 1987 investment promises to continue unabated
# ::tok yet in 1987 investment promises to continue unabated
# ::alignments 6-7|0.0 4-5|0 3-4|0.0.0 2-3|0.0.0.1.0+0.0.0.1 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:04.157
# ::node	0	promise-01	4-5
# ::node	0.0	continue-01	6-7
# ::node	0.0.0	invest-01	3-4
# ::node	0.0.0.0	yet	0-1
# ::node	0.0.0.1	date-entity	2-3
# ::node	0.0.0.1.0	1987	2-3
# ::root	0	promise-01
# ::edge	continue-01	ARG1	invest-01	0.0	0.0.0	
# ::edge	date-entity	year	1987	0.0.0.1	0.0.0.1.0	
# ::edge	invest-01	ARG1	yet	0.0.0	0.0.0.0	
# ::edge	invest-01	time	date-entity	0.0.0	0.0.0.1	
# ::edge	promise-01	ARG1	continue-01	0	0.0	
(p / promise-01 
      :ARG1 (c / continue-01 
            :ARG1 (i / invest-01 
                  :ARG1 (y / yet) 
                  :time (d / date-entity 
                        :year 1987))))

# ::snt   european deals also do not promise the same rewards as the uk megadeals of recent times
# ::tok european deals also do not promise the same rewards as the uk megadeals of recent times
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:04.157
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt alas best hopes were dashed as the potential rival turned out to be robert maxwell and mirror group newspapers which does not promise a bonanza for monotype shareholders
# ::tok alas best hopes were dashed as the potential rival turned out to be robert maxwell and mirror group newspapers which does not promise a bonanza for monotype shareholders
# ::alignments 24-25|0.0.0.0 22-23|0.0.0 18-19|0.0 17-18|0.0.2 16-17|0 15-16|0.0.1 8-9|0.0.1.0.0 7-8|0.0.1.0.0.0 2-3|0.0.1.0 0-1|0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:04.212
# ::node	0	mirror	16-17
# ::node	0.0	newspaper	18-19
# ::node	0.0.0	promise-01	22-23
# ::node	0.0.0.0	bonanza	24-25
# ::node	0.0.1	and	15-16
# ::node	0.0.1.0	hope-01	2-3
# ::node	0.0.1.0.0	rival-01	8-9
# ::node	0.0.1.0.0.0	potential	7-8
# ::node	0.0.1.1	alas	0-1
# ::node	0.0.2	group	17-18
# ::root	0	mirror
(m / mirror 
      :mod-of (n / newspaper 
            :ARG0-of (p / promise-01 
                  :ARG1 (b / bonanza)) 
            :op-of (a / and 
                  :ARG1-of (h / hope-01 
                        :ARG0-of (r / rival-01 
                              :mod (p2 / potential))) 
                  :source-of (a2 / alas)) 
            :poss (g / group)))

# ::snt ministers promise a white paper in the autumn and legislation to make it easier for families to be paid maintenance by divorced or absent parents
# ::tok ministers promise a white paper in the autumn and legislation to make it easier for families to be paid maintenance by divorced or absent parents
# ::alignments 24-25|0.1.1.0.0.0.0+0.1.1.0.0.0 23-24|0.1.1.0.1 22-23|0.1.1.0 21-22|0.1.1.0.0 19-20|0.1.1 18-19|0.1 15-16|0.1.0 13-14|0 12-13|0.0 9-10|0.1.2.1 8-9|0.1.2 4-5|0.1.2.0 3-4|0.1.2.0.1 1-2|0.1.2.0.0 0-1|0.1.0.0.0+0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:04.480
# ::node	0	easy	13-14
# ::node	0.0	it	12-13
# ::node	0.1	pay-01	18-19
# ::node	0.1.0	family	15-16
# ::node	0.1.0.0	have-org-role-91	0-1
# ::node	0.1.0.0.0	minister	0-1
# ::node	0.1.1	maintain-01	19-20
# ::node	0.1.1.0	or	22-23
# ::node	0.1.1.0.0	divorce-01	21-22
# ::node	0.1.1.0.0.0	have-rel-role-91	24-25
# ::node	0.1.1.0.0.0.0	parent	24-25
# ::node	0.1.1.0.1	absent-01	23-24
# ::node	0.1.2	and	8-9
# ::node	0.1.2.0	paper	4-5
# ::node	0.1.2.0.0	promise-01	1-2
# ::node	0.1.2.0.1	white	3-4
# ::node	0.1.2.1	legislation	9-10
# ::root	0	easy
# ::edge	and	op1	paper	0.1.2	0.1.2.0	
# ::edge	and	op2	legislation	0.1.2	0.1.2.1	
# ::edge	divorce-01	ARG1	have-rel-role-91	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	easy	domain	it	0	0.0	
# ::edge	have-org-role-91	ARG1	family	0.1.0.0	0.1.0	
# ::edge	have-org-role-91	ARG2	minister	0.1.0.0	0.1.0.0.0	
# ::edge	have-rel-role-91	ARG2	parent	0.1.1.0.0.0	0.1.1.0.0.0.0	
# ::edge	maintain-01	ARG1	or	0.1.1	0.1.1.0	
# ::edge	or	op1	divorce-01	0.1.1.0	0.1.1.0.0	
# ::edge	or	op2	absent-01	0.1.1.0	0.1.1.0.1	
# ::edge	paper	mod	white	0.1.2.0	0.1.2.0.1	
# ::edge	pay-01	ARG0	family	0.1	0.1.0	
# ::edge	pay-01	ARG1	maintain-01	0.1	0.1.1	
# ::edge	pay-01	ARG3	and	0.1	0.1.2	
# ::edge	pay-01	manner	easy	0.1	0	
# ::edge	promise-01	ARG1	paper	0.1.2.0.0	0.1.2.0	
(e / easy 
      :domain (i / it) 
      :manner-of (p2 / pay-01 
            :ARG0 (f / family 
                  :ARG1-of (h2 / have-org-role-91 
                        :ARG2 (m2 / minister))) 
            :ARG1 (m / maintain-01 
                  :ARG1 (o / or 
                        :op1 (d / divorce-01 
                              :ARG1 (h / have-rel-role-91 
                                    :ARG2 (p / parent))) 
                        :op2 (a / absent-01))) 
            :ARG3 (a2 / and 
                  :op1 (p3 / paper 
                        :ARG1-of (p4 / promise-01) 
                        :mod (w / white)) 
                  :op2 (l / legislation))))

# ::snt the syrian authorities had promised president moawad that they would withdraw their troops within two years
# ::tok the syrian authorities had promised president moawad that they would withdraw their troops within two years
# ::alignments 15-16|0.1.0.0.2.0.1+0.1.0.0.2.0 14-15|0.1.0.0.2.0.0 13-14|0.1.0.0.2 12-13|0.1.0.0.1 10-11|0.1.0.0 8-9|0.1.0.0.0 5-6|0.1+0.1.0 4-5|0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:04.728
# ::node	0	promise-01	4-5
# ::node	0.0	authority	2-3
# ::node	0.1	president	5-6
# ::node	0.1.0	have-org-role-91	5-6
# ::node	0.1.0.0	withdraw-01	10-11
# ::node	0.1.0.0.0	they	8-9
# ::node	0.1.0.0.1	troop	12-13
# ::node	0.1.0.0.2	within	13-14
# ::node	0.1.0.0.2.0	temporal-quantity	15-16
# ::node	0.1.0.0.2.0.0	2	14-15
# ::node	0.1.0.0.2.0.1	year	15-16
# ::root	0	promise-01
# ::edge	have-org-role-91	ARG1	withdraw-01	0.1.0	0.1.0.0	
# ::edge	have-org-role-91	ARG2	president	0.1.0	0.1	
# ::edge	promise-01	ARG0	authority	0	0.0	
# ::edge	promise-01	ARG2	president	0	0.1	
# ::edge	temporal-quantity	quant	2	0.1.0.0.2.0	0.1.0.0.2.0.0	
# ::edge	temporal-quantity	unit	year	0.1.0.0.2.0	0.1.0.0.2.0.1	
# ::edge	withdraw-01	ARG0	they	0.1.0.0	0.1.0.0.0	
# ::edge	withdraw-01	ARG1	troop	0.1.0.0	0.1.0.0.1	
# ::edge	withdraw-01	duration	within	0.1.0.0	0.1.0.0.2	
# ::edge	within	op1	temporal-quantity	0.1.0.0.2	0.1.0.0.2.0	
(p2 / promise-01 
      :ARG0 (a / authority) 
      :ARG2 (p / president 
            :ARG2-of (h / have-org-role-91 
                  :ARG1 (w2 / withdraw-01 
                        :ARG0 (t3 / they) 
                        :ARG1 (t2 / troop) 
                        :duration (w / within 
                              :op1 (t / temporal-quantity 
                                    :quant 2 
                                    :unit (y / year)))))))

# ::snt life the antiabortion organisation yesterday promised to fight the proposed pagan measures and to besiege parliament with the largest number of petitions in its history
# ::tok life the antiabortion organisation yesterday promised to fight the proposed pagan measures and to besiege parliament with the largest number of petitions in its history
# ::alignments 24-25|0.0.0.0.0.0 19-20|0.0.0.1.1.0 18-19|0.0.0.1.1.0.0.0+0.0.0.1.1.0.0 15-16|0.0.0.1.1.1.0.0+0.0.0.1.1.1.0+0.0.0.1.1.1 14-15|0.0.0.1.1 12-13|0.0.0.1 11-12|0.0 9-10|0 7-8|0.0.0 5-6|0.0.0.1.0 4-5|0.0.0.0 3-4|0.0.0.0.0 0-1|0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:05.290
# ::node	0	propose-01	9-10
# ::node	0.0	measure	11-12
# ::node	0.0.0	fight-01	7-8
# ::node	0.0.0.0	yesterday	4-5
# ::node	0.0.0.0.0	organize-01	3-4
# ::node	0.0.0.0.0.0	history	24-25
# ::node	0.0.0.1	and	12-13
# ::node	0.0.0.1.0	promise-01	5-6
# ::node	0.0.0.1.0.0	life	0-1
# ::node	0.0.0.1.1	besiege-01	14-15
# ::node	0.0.0.1.1.0	number	19-20
# ::node	0.0.0.1.1.0.0	large	18-19
# ::node	0.0.0.1.1.0.0.0	most	18-19
# ::node	0.0.0.1.1.1	government-organization	15-16
# ::node	0.0.0.1.1.1.0	name	15-16
# ::node	0.0.0.1.1.1.0.0	"Parliament"	15-16
# ::root	0	propose-01
# ::edge	and	op1	fight-01	0.0.0.1	0.0.0	
# ::edge	and	op2	besiege-01	0.0.0.1	0.0.0.1.1	
# ::edge	besiege-01	ARG0	number	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	besiege-01	ARG1	government-organization	0.0.0.1.1	0.0.0.1.1.1	
# ::edge	fight-01	ARG0	yesterday	0.0.0	0.0.0.0	
# ::edge	fight-01	ARG1	measure	0.0.0	0.0	
# ::edge	government-organization	name	name	0.0.0.1.1.1	0.0.0.1.1.1.0	
# ::edge	large	degree	most	0.0.0.1.1.0.0	0.0.0.1.1.0.0.0	
# ::edge	name	op1	"Parliament"	0.0.0.1.1.1.0	0.0.0.1.1.1.0.0	
# ::edge	number	mod	large	0.0.0.1.1.0	0.0.0.1.1.0.0	
# ::edge	organize-01	ARG0	yesterday	0.0.0.0.0	0.0.0.0	
# ::edge	organize-01	ARG1	history	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	promise-01	ARG0	life	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	promise-01	ARG2	and	0.0.0.1.0	0.0.0.1	
# ::edge	propose-01	ARG1	measure	0	0.0	
(p / propose-01 
      :ARG1 (m2 / measure 
            :ARG1-of (f / fight-01 
                  :ARG0 (y / yesterday 
                        :ARG0-of (o / organize-01 
                              :ARG1 (h / history))) 
                  :op-of (a / and 
                        :ARG2-of (p2 / promise-01 
                              :ARG0 (l2 / life)) 
                        :op1 (b / besiege-01 
                              :ARG0 (n / number 
                                    :mod (l / large 
                                          :degree (m / most))) 
                              :ARG1 (g / government-organization 
                                    :name (n2 / name 
                                          :op1 "Parliament")))))))

# ::snt another 250 has been promised from the banbury historial societys brinkworth prize which will be presented by lord saye and sele the societys president next month
# ::tok another 250 has been promised from the banbury historial societys brinkworth prize which will be presented by lord saye and sele the societys president next month
# ::alignments 25-26|0.0.1.2.0.0+0.0.1.2.0 24-25|0.0.1.2.0.0.0 23-24|0.0.1.1.1+0.0.1.1 19-20|0 17-18|0.0.1.0 15-16|0.0 11-12|0.0.1 4-5|0.0.1.2 1-2|0.0.1.1.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:05.434
# ::node	0	and	19-20
# ::node	0.0	present-01	15-16
# ::node	0.0.0	another	0-1
# ::node	0.0.1	prize-01	11-12
# ::node	0.0.1.0	lord	17-18
# ::node	0.0.1.1	have-org-role-91	23-24
# ::node	0.0.1.1.0	250	1-2
# ::node	0.0.1.1.1	president	23-24
# ::node	0.0.1.2	promise-01	4-5
# ::node	0.0.1.2.0	temporal-quantity	25-26
# ::node	0.0.1.2.0.0	month	25-26
# ::node	0.0.1.2.0.0.0	next	24-25
# ::root	0	and
# ::edge	and	op1	present-01	0	0.0	
# ::edge	have-org-role-91	ARG0	250	0.0.1.1	0.0.1.1.0	
# ::edge	have-org-role-91	ARG1	prize-01	0.0.1.1	0.0.1	
# ::edge	have-org-role-91	ARG2	president	0.0.1.1	0.0.1.1.1	
# ::edge	month	mod	next	0.0.1.2.0.0	0.0.1.2.0.0.0	
# ::edge	present-01	ARG0	another	0.0	0.0.0	
# ::edge	present-01	ARG1	prize-01	0.0	0.0.1	
# ::edge	prize-01	ARG0	lord	0.0.1	0.0.1.0	
# ::edge	promise-01	ARG0	temporal-quantity	0.0.1.2	0.0.1.2.0	
# ::edge	promise-01	ARG1	prize-01	0.0.1.2	0.0.1	
# ::edge	temporal-quantity	unit	month	0.0.1.2.0	0.0.1.2.0.0	
(a / and 
      :op1 (p2 / present-01 
            :ARG0 (a2 / another) 
            :ARG1 (p3 / prize-01 
                  :ARG0 (l / lord) 
                  :ARG1-of (h / have-org-role-91 
                        :ARG0 250 
                        :ARG2 (p / president)) 
                  :ARG1-of (p4 / promise-01 
                        :ARG0 (t / temporal-quantity 
                              :unit (m / month 
                                    :mod (n / next)))))))

# ::snt   lyle went to wimbledon on mens quarterfinal day saw ivan lendl and they promised each other lessons
# ::tok lyle went to wimbledon on mens quarterfinal day saw ivan lendl and they promised each other lessons
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:05.434
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt i would die he promised if i didnt get a catheter inserted immediately
# ::tok i would die he promised if i didnt get a catheter inserted immediately
# ::alignments 12-13|0.1 11-12|0 6-7|0.0.0.0 4-5|0.0 3-4|0.0.0 2-3|0.0.1 0-1|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:05.498
# ::node	0	insert-01	11-12
# ::node	0.0	promise-01	4-5
# ::node	0.0.0	he	3-4
# ::node	0.0.0.0	i	6-7
# ::node	0.0.1	die-01	2-3
# ::node	0.0.1.0	i	0-1
# ::node	0.1	immediate	12-13
# ::root	0	insert-01
# ::edge	die-01	ARG0	i	0.0.1	0.0.1.0	
# ::edge	die-01	ARG1	promise-01	0.0.1	0.0	
# ::edge	i	domain	he	0.0.0.0	0.0.0	
# ::edge	insert-01	time	immediate	0	0.1	
# ::edge	promise-01	ARG0	he	0.0	0.0.0	
# ::edge	promise-01	ARG1	insert-01	0.0	0	
(i2 / insert-01 
      :ARG1-of (p / promise-01 
            :ARG0 (h / he 
                  :domain-of (i3 / i)) 
            :ARG1-of (d / die-01 
                  :ARG0 (i4 / i))) 
      :time (i / immediate))

# ::snt al rasd the plo security agency also promised it would do everything possible to stop palestinian rebels attacking the flights
# ::tok al rasd the plo security agency also promised it would do everything possible to stop palestinian rebels attacking the flights
# ::alignments 17-18|0 16-17|0.0.0+0.0 15-16|0.0.1.0.0+0.0.1.0+0.0.1 14-15|0.1 12-13|0.1.0.0 11-12|0.1.0 8-9|0.1.0.0.0.1 7-8|0.1.0.0.0 6-7|0.1.0.0.0.2 5-6|0.1.0.0.0.0 4-5|0.1.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:06.217
# ::node	0	attack-01	17-18
# ::node	0.0	person	16-17
# ::node	0.0.0	rebel-01	16-17
# ::node	0.0.1	country	15-16
# ::node	0.0.1.0	name	15-16
# ::node	0.0.1.0.0	"Palestine"	15-16
# ::node	0.1	stop-01	14-15
# ::node	0.1.0	everything	11-12
# ::node	0.1.0.0	possible	12-13
# ::node	0.1.0.0.0	promise-01	7-8
# ::node	0.1.0.0.0.0	agency	5-6
# ::node	0.1.0.0.0.0.0	security	4-5
# ::node	0.1.0.0.0.1	it	8-9
# ::node	0.1.0.0.0.2	also	6-7
# ::root	0	attack-01
# ::edge	agency	mod	security	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	attack-01	ARG0	person	0	0.0	
# ::edge	country	name	name	0.0.1	0.0.1.0	
# ::edge	everything	mod	possible	0.1.0	0.1.0.0	
# ::edge	name	op1	"Palestine"	0.0.1.0	0.0.1.0.0	
# ::edge	person	source	country	0.0	0.0.1	
# ::edge	promise-01	ARG0	agency	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	promise-01	ARG1	possible	0.1.0.0.0	0.1.0.0	
# ::edge	promise-01	manner	it	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	promise-01	mod	also	0.1.0.0.0	0.1.0.0.0.2	
# ::edge	rebel-01	ARG0	person	0.0.0	0.0	
# ::edge	stop-01	ARG0	everything	0.1	0.1.0	
# ::edge	stop-01	ARG1	attack-01	0.1	0	
(a / attack-01 
      :ARG0 (p / person 
            :ARG0-of (r / rebel-01) 
            :source (c / country 
                  :name (n / name 
                        :op1 "Palestine"))) 
      :ARG1-of (s / stop-01 
            :ARG0 (e / everything 
                  :mod (p2 / possible 
                        :ARG1-of (p3 / promise-01 
                              :ARG0 (a3 / agency 
                                    :mod (s2 / security)) 
                              :manner (i / it) 
                              :mod (a2 / also))))))

# ::snt accelerating export growth is promising but it will have to outpace import growth by a permanently wide margin to reverse the record current account deficit
# ::tok accelerating export growth is promising but it will have to outpace import growth by a permanently wide margin to reverse the record current account deficit
# ::alignments 24-25|0.0.1.0.0 23-24|0.0.1.0.0.0 22-23|0.0.0.0.0 21-22|0.0.1.0.0.1 19-20|0.0.1.0 17-18|0.0.1.0.1 16-17|0.0.1.0.1.0 15-16|0.0.1.0.1.0.0 12-13|0.0.1.1 11-12|0.0.1.1.0 6-7|0.0.1 5-6|0 4-5|0.0 2-3|0.0.0 1-2|0.0.0.0 0-1|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:06.643
# ::node	0	contrast-01	5-6
# ::node	0.0	promise-01	4-5
# ::node	0.0.0	grow-01	2-3
# ::node	0.0.0.0	export-01	1-2
# ::node	0.0.0.0.0	current	22-23
# ::node	0.0.0.1	accelerate-01	0-1
# ::node	0.0.1	it	6-7
# ::node	0.0.1.0	reverse-01	19-20
# ::node	0.0.1.0.0	deficit	24-25
# ::node	0.0.1.0.0.0	account	23-24
# ::node	0.0.1.0.0.1	record	21-22
# ::node	0.0.1.0.1	margin	17-18
# ::node	0.0.1.0.1.0	wide	16-17
# ::node	0.0.1.0.1.0.0	permanent	15-16
# ::node	0.0.1.1	grow-01	12-13
# ::node	0.0.1.1.0	import-01	11-12
# ::root	0	contrast-01
# ::edge	accelerate-01	ARG1	grow-01	0.0.0.1	0.0.0	
# ::edge	contrast-01	ARG1	promise-01	0	0.0	
# ::edge	deficit	mod	account	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	deficit	mod	record	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	export-01	ARG1	current	0.0.0.0	0.0.0.0.0	
# ::edge	grow-01	ARG0	it	0.0.1.1	0.0.1	
# ::edge	grow-01	ARG1	export-01	0.0.0	0.0.0.0	
# ::edge	grow-01	ARG1	import-01	0.0.1.1	0.0.1.1.0	
# ::edge	margin	mod	wide	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	promise-01	ARG0	grow-01	0.0	0.0.0	
# ::edge	promise-01	ARG1	it	0.0	0.0.1	
# ::edge	reverse-01	ARG0	it	0.0.1.0	0.0.1	
# ::edge	reverse-01	ARG1	deficit	0.0.1.0	0.0.1.0.0	
# ::edge	reverse-01	ARG2	margin	0.0.1.0	0.0.1.0.1	
# ::edge	wide	degree	permanent	0.0.1.0.1.0	0.0.1.0.1.0.0	
(c2 / contrast-01 
      :ARG1 (p2 / promise-01 
            :ARG0 (g2 / grow-01 
                  :ARG1 (e / export-01 
                        :ARG1 (c / current)) 
                  :ARG1-of (a2 / accelerate-01)) 
            :ARG1 (i2 / it 
                  :ARG0-of (r2 / reverse-01 
                        :ARG1 (d / deficit 
                              :mod (a / account) 
                              :mod (r / record)) 
                        :ARG2 (m / margin 
                              :mod (w / wide 
                                    :degree (p / permanent)))) 
                  :ARG0-of (g / grow-01 
                        :ARG1 (i / import-01)))))

# ::snt   there was a pause during which he did not promise not to protect her from dragons and during which she persuaded herself not to stress the point
# ::tok there was a pause during which he did not promise not to protect her from dragons and during which she persuaded herself not to stress the point
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:06.644
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt 10046 promise-v 801852 Promising 537527
# ::tok 10046 promise - v 801852 Promising 537527
# ::alignments 6-7|0.0.2+0.0.1+0.0.0+0.0 4-5|0.1.2+0.1.1+0.1.0+0.1 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:06.666
# ::node	0	promise-01	1-2
# ::node	0.0	date-entity	6-7
# ::node	0.0.0	27	6-7
# ::node	0.0.1	75	6-7
# ::node	0.0.2	53	6-7
# ::node	0.1	date-entity	4-5
# ::node	0.1.0	52	4-5
# ::node	0.1.1	18	4-5
# ::node	0.1.2	80	4-5
# ::root	0	promise-01
# ::edge	date-entity	day	27	0.0	0.0.0	
# ::edge	date-entity	day	52	0.1	0.1.0	
# ::edge	date-entity	month	18	0.1	0.1.1	
# ::edge	date-entity	month	75	0.0	0.0.1	
# ::edge	date-entity	year	53	0.0	0.0.2	
# ::edge	date-entity	year	80	0.1	0.1.2	
# ::edge	promise-01	ARG1	date-entity	0	0.0	
# ::edge	promise-01	li	date-entity	0	0.1	
(p / promise-01 
      :ARG1 (d / date-entity 
            :day 27 
            :month 75 
            :year 53) 
      :li (d2 / date-entity 
            :day 52 
            :month 18 
            :year 80))

# ::snt  `When did you last test a Hydrogen bomb?" is the inviting headline.  Promising `exceptional opportunities for graduates", the AWE is looking for recruits to its Weapons Diagnostic Division &dash. which, it boasts, `test fires all of Britain\s nuclear warhead designs at the American Nevada Test Site &ellip
# ::tok ' When did you last test a Hydrogen bomb ? " is the inviting headline . Promising ' exceptional opportunities for graduates " , the AWE is looking for recruits to its Weapons Diagnostic Division & dash . which , it boasts , ' test fires all of Britain\s nuclear warhead designs at the American Nevada Test Site & ellip
# ::alignments 51-52|0.0.2.1.0 50-51|0.0.2.1.0.0 49-50|0.0.2.1.0.0.0 46-47|0.0.4 45-46|0 44-45|0.0 41-42|0.0.2 40-41|0.0.2.0 32-33|0.0.1 29-30|0.0.2.1.1+0.0.2.1 21-22|0.0.3 19-20|0.0.3.1 18-19|0.0.3.0 14-15|0.0.2.1.1.0 8-9|0.0.0.0.0 5-6|0.0.0.0 4-5|0.0.0.0.1 3-4|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:07.343
# ::node	0	fire	45-46
# ::node	0.0	test-01	44-45
# ::node	0.0.0	you	3-4
# ::node	0.0.0.0	test-01	5-6
# ::node	0.0.0.0.0	bomb	8-9
# ::node	0.0.0.0.1	last	4-5
# ::node	0.0.1	weapon	32-33
# ::node	0.0.2	boast-01	41-42
# ::node	0.0.2.0	it	40-41
# ::node	0.0.2.1	person	29-30
# ::node	0.0.2.1.0	design-01	51-52
# ::node	0.0.2.1.0.0	warhead	50-51
# ::node	0.0.2.1.0.0.0	nucleus	49-50
# ::node	0.0.2.1.1	recruit-01	29-30
# ::node	0.0.2.1.1.0	headline	14-15
# ::node	0.0.3	graduate-01	21-22
# ::node	0.0.3.0	exceptional	18-19
# ::node	0.0.3.1	opportunity	19-20
# ::node	0.0.4	all	46-47
# ::root	0	fire
(f / fire 
      :ARG2-of (t / test-01 
            :ARG0 (y / you 
                  :ARG0-of (t2 / test-01 
                        :ARG1 (b2 / bomb) 
                        :mod (l / last))) 
            :ARG1 (w2 / weapon) 
            :ARG2-of (b / boast-01 
                  :ARG0 (i / it) 
                  :ARG1 (p / person 
                        :ARG0-of (d / design-01 
                              :ARG1 (w / warhead 
                                    :mod (n / nucleus))) 
                        :ARG1-of (r / recruit-01 
                              :ARG0 (h / headline)))) 
            :ARG2-of (g / graduate-01 
                  :ARG0 (e / exceptional) 
                  :ARG1 (o / opportunity)) 
            :location (a / all)))

# ::snt EMPTY_SENTENCE
# ::tok EMPTY_SENTENCE
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:07.344
# ::node	0	amr-empty	0-1
# ::root	0	amr-empty
(a / amr-empty)

# ::snt kelly had promised to meet her but they had parted so coldly she was suddenly afraid that he had changed his mind
# ::tok kelly had promised to meet her but they had parted so coldly she was suddenly afraid that he had changed his mind
# ::alignments 21-22|0.0.0 19-20|0.0.0.0 17-18|0.0 14-15|0.1.0 12-13|0.1.1.1 10-11|0.1.1.2 9-10|0.1.1 7-8|0.1.1.0 6-7|0.1 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:07.435
# ::node	0	promise-01	2-3
# ::node	0.0	he	17-18
# ::node	0.0.0	mind	21-22
# ::node	0.0.0.0	change-01	19-20
# ::node	0.1	contrast-01	6-7
# ::node	0.1.0	sudden	14-15
# ::node	0.1.1	part-01	9-10
# ::node	0.1.1.0	they	7-8
# ::node	0.1.1.1	she	12-13
# ::node	0.1.1.2	so	10-11
# ::root	0	promise-01
# ::edge	change-01	ARG1	mind	0.0.0.0	0.0.0	
# ::edge	contrast-01	ARG1	sudden	0.1	0.1.0	
# ::edge	contrast-01	ARG2	part-01	0.1	0.1.1	
# ::edge	mind	poss	he	0.0.0	0.0	
# ::edge	part-01	ARG0	they	0.1.1	0.1.1.0	
# ::edge	part-01	ARG1	she	0.1.1	0.1.1.1	
# ::edge	part-01	time	so	0.1.1	0.1.1.2	
# ::edge	promise-01	ARG0	he	0	0.0	
# ::edge	promise-01	ARG1	contrast-01	0	0.1	
(p2 / promise-01 
      :ARG0 (h / he 
            :poss-of (m / mind 
                  :ARG1-of (c / change-01))) 
      :ARG1 (c2 / contrast-01 
            :ARG1 (s / sudden) 
            :ARG2 (p / part-01 
                  :ARG0 (t / they) 
                  :ARG1 (s2 / she) 
                  :time (s3 / so))))

# ::snt weve haggled a bit but eventually agreed and now hes promised to let me know on monday morning
# ::tok weve haggled a bit but eventually agreed and now hes promised to let me know on monday morning
# ::alignments 17-18|0.0.1.0.0.0 14-15|0.0.1.0.0 12-13|0.0.1.0 10-11|0.0.1 8-9|0.0.1.1 7-8|0.0 6-7|0.0.0 5-6|0.0.0.1 4-5|0 3-4|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:07.478
# ::node	0	contrast-01	4-5
# ::node	0.0	and	7-8
# ::node	0.0.0	agree-01	6-7
# ::node	0.0.0.0	bit	3-4
# ::node	0.0.0.1	eventual	5-6
# ::node	0.0.1	promise-01	10-11
# ::node	0.0.1.0	let-01	12-13
# ::node	0.0.1.0.0	know-01	14-15
# ::node	0.0.1.0.0.0	morning	17-18
# ::node	0.0.1.1	now	8-9
# ::root	0	contrast-01
# ::edge	agree-01	ARG1	bit	0.0.0	0.0.0.0	
# ::edge	agree-01	time	eventual	0.0.0	0.0.0.1	
# ::edge	and	op1	agree-01	0.0	0.0.0	
# ::edge	and	op2	promise-01	0.0	0.0.1	
# ::edge	contrast-01	ARG2	and	0	0.0	
# ::edge	know-01	ARG1	morning	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	let-01	ARG1	know-01	0.0.1.0	0.0.1.0.0	
# ::edge	promise-01	ARG1	let-01	0.0.1	0.0.1.0	
# ::edge	promise-01	mod	now	0.0.1	0.0.1.1	
(c / contrast-01 
      :ARG2 (a / and 
            :op1 (a2 / agree-01 
                  :ARG1 (b / bit) 
                  :time (e / eventual)) 
            :op2 (p / promise-01 
                  :ARG1 (l / let-01 
                        :ARG1 (k / know-01 
                              :ARG1 (m / morning))) 
                  :mod (n / now))))

# ::snt balanced fair and evenhanded  third mr meacher has promised to give trade unions absolute protection against the possibility of having their assets sequestrated
# ::tok balanced fair and evenhanded third mr meacher has promised to give trade unions absolute protection against the possibility of having their assets sequestrated
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:07.478
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the british film distributor goldcrest which has promised that costagavras missing betrayed would direct its film
# ::tok the british film distributor goldcrest which has promised that costagavras missing betrayed would direct its film
# ::alignments 15-16|0.1.0.0 13-14|0.1.0 10-11|0 7-8|0.1 3-4|0.0 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:07.501
# ::node	0	miss-01	10-11
# ::node	0.0	distribute-01	3-4
# ::node	0.0.0	film	2-3
# ::node	0.1	promise-01	7-8
# ::node	0.1.0	direct	13-14
# ::node	0.1.0.0	film	15-16
# ::root	0	miss-01
# ::edge	direct	part	film	0.1.0	0.1.0.0	
# ::edge	distribute-01	ARG1	film	0.0	0.0.0	
# ::edge	miss-01	ARG1	distribute-01	0	0.0	
# ::edge	promise-01	ARG1	direct	0.1	0.1.0	
# ::edge	promise-01	ARG2	miss-01	0.1	0	
(m / miss-01 
      :ARG1 (d2 / distribute-01 
            :ARG1 (f2 / film)) 
      :ARG2-of (p / promise-01 
            :ARG1 (d / direct 
                  :part (f / film))))

# ::snt the rebound in the metal price promises a return to multimillion pound profitability and job security this year
# ::tok the rebound in the metal price promises a return to multimillion pound profitability and job security this year
# ::alignments 17-18|0.0.0 16-17|0.0.0.0 15-16|0.1.0 14-15|0.1.0.0 13-14|0.1 6-7|0 5-6|0.0.1.0+0.0.1 4-5|0.0.1.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:07.554
# ::node	0	promise-01	6-7
# ::node	0.0	rebound-01	1-2
# ::node	0.0.0	year	17-18
# ::node	0.0.0.0	this	16-17
# ::node	0.0.1	thing	5-6
# ::node	0.0.1.0	price-01	5-6
# ::node	0.0.1.0.0	metal	4-5
# ::node	0.1	and	13-14
# ::node	0.1.0	security	15-16
# ::node	0.1.0.0	job	14-15
# ::root	0	promise-01
# ::edge	and	op1	security	0.1	0.1.0	
# ::edge	price-01	ARG1	metal	0.0.1.0	0.0.1.0.0	
# ::edge	price-01	ARG2	thing	0.0.1.0	0.0.1	
# ::edge	promise-01	ARG0	rebound-01	0	0.0	
# ::edge	promise-01	ARG2	and	0	0.1	
# ::edge	rebound-01	ARG0	year	0.0	0.0.0	
# ::edge	rebound-01	ARG1	thing	0.0	0.0.1	
# ::edge	security	mod	job	0.1.0	0.1.0.0	
# ::edge	year	mod	this	0.0.0	0.0.0.0	
(p / promise-01 
      :ARG0 (r / rebound-01 
            :ARG0 (y / year 
                  :mod (t / this)) 
            :ARG1 (t2 / thing 
                  :ARG2-of (p2 / price-01 
                        :ARG1 (m / metal)))) 
      :ARG2 (a / and 
            :op1 (s / security 
                  :mod (j / job))))

# ::snt the promises to cut taxes had been brushed to one side but it was unlikely that the government would wish to fight the next election against a background of undertakings that would entail their actually being increased
# ::tok the promises to cut taxes had been brushed to one side but it was unlikely that the government would wish to fight the next election against a background of undertakings that would entail their actually being increased
# ::alignments 36-37|0.2.0.0.1.0.0 34-35|0.0 27-28|0.2.0.0.1.0 24-25|0.2.0.0.1 23-24|0.2.0.0.1.1 21-22|0.2.0.0 19-20|0.2.0 14-15|0.2.1+0.2 12-13|0.2.0.0.0 11-12|0 10-11|0.2.0.0.0.0 7-8|0.1 4-5|0.1.0 1-2|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:07.818
# ::node	0	contrast-01	11-12
# ::node	0.0	actual	34-35
# ::node	0.1	brush-02	7-8
# ::node	0.1.0	tax-01	4-5
# ::node	0.1.0.0	promise-01	1-2
# ::node	0.2	likely	14-15
# ::node	0.2.0	wish-01	19-20
# ::node	0.2.0.0	fight-01	21-22
# ::node	0.2.0.0.0	it	12-13
# ::node	0.2.0.0.0.0	side	10-11
# ::node	0.2.0.0.1	elect-01	24-25
# ::node	0.2.0.0.1.0	background	27-28
# ::node	0.2.0.0.1.0.0	increase-01	36-37
# ::node	0.2.0.0.1.1	next	23-24
# ::node	0.2.1	-	14-15
# ::root	0	contrast-01
# ::edge	brush-02	ARG1	tax-01	0.1	0.1.0	
# ::edge	contrast-01	ARG0	actual	0	0.0	
# ::edge	contrast-01	ARG1	brush-02	0	0.1	
# ::edge	contrast-01	ARG2	likely	0	0.2	
# ::edge	elect-01	ARG1	background	0.2.0.0.1	0.2.0.0.1.0	
# ::edge	elect-01	mod	next	0.2.0.0.1	0.2.0.0.1.1	
# ::edge	fight-01	ARG1	it	0.2.0.0	0.2.0.0.0	
# ::edge	fight-01	ARG2	elect-01	0.2.0.0	0.2.0.0.1	
# ::edge	increase-01	ARG1	background	0.2.0.0.1.0.0	0.2.0.0.1.0	
# ::edge	it	prep-in	side	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	likely	domain	wish-01	0.2	0.2.0	
# ::edge	likely	polarity	-	0.2	0.2.1	
# ::edge	promise-01	ARG1	tax-01	0.1.0.0	0.1.0	
# ::edge	wish-01	ARG1	fight-01	0.2.0	0.2.0.0	
(c / contrast-01 
      :ARG0 (a / actual) 
      :ARG1 (b2 / brush-02 
            :ARG1 (t / tax-01 
                  :ARG1-of (p / promise-01))) 
      :ARG2 (l / likely 
            :domain (w / wish-01 
                  :ARG1 (f / fight-01 
                        :ARG1 (i2 / it 
                              :prep-in (s / side)) 
                        :ARG2 (e / elect-01 
                              :ARG1 (b / background 
                                    :ARG1-of (i / increase-01)) 
                              :mod (n / next)))) 
            :polarity -))

# ::snt there is the right to promise which a promisor must have if his promise is to be binding
# ::tok there is the right to promise which a promisor must have if his promise is to be binding
# ::alignments 17-18|0.0 13-14|0 5-6|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:07.845
# ::node	0	promise-01	13-14
# ::node	0.0	bind-01	17-18
# ::node	0.0.0	promise-01	5-6
# ::root	0	promise-01
(p / promise-01 
      :ARG0-of (b / bind-01 
            :ARG1 (p2 / promise-01)))

# ::snt sir robert agreed that brs industrial relations had to be improved and promised to do so as soon as the strike was over
# ::tok sir robert agreed that brs industrial relations had to be improved and promised to do so as soon as the strike was over
# ::alignments 20-21|0 17-18|0.0 15-16|0.1.0.0.1.0 12-13|0.1.0.0.1 11-12|0.1.0.0 10-11|0.1.0 6-7|0.1 5-6|0.2 2-3|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:07.967
# ::node	0	strike-01	20-21
# ::node	0.0	soon	17-18
# ::node	0.1	relation	6-7
# ::node	0.1.0	improve-01	10-11
# ::node	0.1.0.0	and	11-12
# ::node	0.1.0.0.0	agree-01	2-3
# ::node	0.1.0.0.1	promise-01	12-13
# ::node	0.1.0.0.1.0	so	15-16
# ::node	0.2	industry	5-6
# ::root	0	strike-01
# ::edge	agree-01	ARG1	and	0.1.0.0.0	0.1.0.0	
# ::edge	and	op1	improve-01	0.1.0.0	0.1.0	
# ::edge	and	op2	promise-01	0.1.0.0	0.1.0.0.1	
# ::edge	improve-01	ARG1	relation	0.1.0	0.1	
# ::edge	industry	op1	strike-01	0.2	0	
# ::edge	promise-01	ARG1	so	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	strike-01	ARG0	soon	0	0.0	
# ::edge	strike-01	ARG1	relation	0	0.1	
(s / strike-01 
      :ARG0 (s2 / soon) 
      :ARG1 (r / relation 
            :ARG1-of (i / improve-01 
                  :op-of (a / and 
                        :ARG1-of (a2 / agree-01) 
                        :op1 (p / promise-01 
                              :ARG1 (s3 / so))))) 
      :op-of (i2 / industry))

# ::snt   but with the dramatic pace of change now in east germany the wall effectively broken free elections promised are they not tempted to go back
# ::tok but with the dramatic pace of change now in east germany the wall effectively broken free elections promised are they not tempted to go back
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:07.967
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the plan is to market the chaser alongside the french ax3 a twoseat sidebyside aircraft which promises to offer good value and sparkling performance
# ::tok the plan is to market the chaser alongside the french ax3 a twoseat sidebyside aircraft which promises to offer good value and sparkling performance
# ::alignments 23-24|0.3 21-22|0 20-21|0.2 19-20|0.0.2 18-19|0.0 16-17|0.0.1 14-15|0.0.1.0 9-10|0.0.0.0.0+0.0.0.0+0.0.0 7-8|0.1.0.0 4-5|0.1.0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:08.120
# ::node	0	and	21-22
# ::node	0.0	offer-01	18-19
# ::node	0.0.0	country	9-10
# ::node	0.0.0.0	name	9-10
# ::node	0.0.0.0.0	"France"	9-10
# ::node	0.0.1	promise-01	16-17
# ::node	0.0.1.0	aircraft	14-15
# ::node	0.0.2	good	19-20
# ::node	0.1	plan-01	1-2
# ::node	0.1.0	market	4-5
# ::node	0.1.0.0	alongside	7-8
# ::node	0.2	value-01	20-21
# ::node	0.3	perform-01	23-24
# ::root	0	and
# ::edge	and	op1	value-01	0	0.2	
# ::edge	and	op2	perform-01	0	0.3	
# ::edge	country	name	name	0.0.0	0.0.0.0	
# ::edge	market	time	alongside	0.1.0	0.1.0.0	
# ::edge	name	op1	"France"	0.0.0.0	0.0.0.0.0	
# ::edge	offer-01	ARG0	country	0.0	0.0.0	
# ::edge	offer-01	ARG1	and	0.0	0	
# ::edge	offer-01	ARG2	good	0.0	0.0.2	
# ::edge	plan-01	ARG1	and	0.1	0	
# ::edge	plan-01	purpose	market	0.1	0.1.0	
# ::edge	promise-01	ARG0	aircraft	0.0.1	0.0.1.0	
# ::edge	promise-01	ARG1	offer-01	0.0.1	0.0	
(a / and 
      :ARG1-of (o / offer-01 
            :ARG0 (c / country 
                  :name (n / name 
                        :op1 "France")) 
            :ARG1-of (p2 / promise-01 
                  :ARG0 (a2 / aircraft)) 
            :ARG2 (g / good)) 
      :ARG1-of (p3 / plan-01 
            :purpose (m / market 
                  :time (a3 / alongside))) 
      :op1 (v / value-01) 
      :op2 (p / perform-01))

# ::snt people promise permanence and fidelity and often it doesnt work out
# ::tok people promise permanence and fidelity and often it doesnt work out
# ::alignments 7-8|0.2 6-7|0.1.0 5-6|0.1 3-4|0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:08.179
# ::node	0	promise-01	1-2
# ::node	0.0	and	3-4
# ::node	0.1	and	5-6
# ::node	0.1.0	often	6-7
# ::node	0.2	it	7-8
# ::root	0	promise-01
# ::edge	and	op1	often	0.1	0.1.0	
# ::edge	promise-01	ARG0	and	0	0.0	
# ::edge	promise-01	ARG1	and	0	0.1	
# ::edge	promise-01	ARG2	it	0	0.2	
(p / promise-01 
      :ARG0 (a2 / and) 
      :ARG1 (a / and 
            :op1 (o / often)) 
      :ARG2 (i / it))

# ::snt he had thought he was undergoing medical examination to see whether he was fit to take up a job in london that he had been promised by tunc kunter
# ::tok he had thought he was undergoing medical examination to see whether he was fit to take up a job in london that he had been promised by tunc kunter
# ::alignments 25-26|0.1.0.1.1 22-23|0.1.0.1.1.0 20-21|0.1.0.1.1.2.0.0+0.1.0.1.1.2.0+0.1.0.1.1.2 18-19|0.1.0.1.1.1 13-14|0.1.0.1 11-12|0.1.0.1.0 9-10|0.1.0 7-8|0.1 6-7|0.1.1 3-4|0.1.0.0 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:09.449
# ::node	0	think-01	2-3
# ::node	0.0	he	0-1
# ::node	0.1	examine-01	7-8
# ::node	0.1.0	see-01	9-10
# ::node	0.1.0.0	he	3-4
# ::node	0.1.0.1	fit-01	13-14
# ::node	0.1.0.1.0	he	11-12
# ::node	0.1.0.1.1	promise-01	25-26
# ::node	0.1.0.1.1.0	he	22-23
# ::node	0.1.0.1.1.1	job	18-19
# ::node	0.1.0.1.1.2	city	20-21
# ::node	0.1.0.1.1.2.0	name	20-21
# ::node	0.1.0.1.1.2.0.0	"London"	20-21
# ::node	0.1.1	medicine	6-7
# ::root	0	think-01
# ::edge	city	name	name	0.1.0.1.1.2	0.1.0.1.1.2.0	
# ::edge	examine-01	ARG1	see-01	0.1	0.1.0	
# ::edge	examine-01	mod	medicine	0.1	0.1.1	
# ::edge	fit-01	ARG1	he	0.1.0.1	0.1.0.1.0	
# ::edge	name	op1	"London"	0.1.0.1.1.2.0	0.1.0.1.1.2.0.0	
# ::edge	promise-01	ARG0	he	0.1.0.1.1	0.1.0.1.1.0	
# ::edge	promise-01	ARG4	job	0.1.0.1.1	0.1.0.1.1.1	
# ::edge	promise-01	concession	fit-01	0.1.0.1.1	0.1.0.1	
# ::edge	promise-01	prep-on	city	0.1.0.1.1	0.1.0.1.1.2	
# ::edge	see-01	ARG0	he	0.1.0	0.1.0.0	
# ::edge	see-01	ARG1	fit-01	0.1.0	0.1.0.1	
# ::edge	think-01	ARG0	he	0	0.0	
# ::edge	think-01	ARG1	examine-01	0	0.1	
(t / think-01 
      :ARG0 (h4 / he) 
      :ARG1 (e / examine-01 
            :ARG1 (s / see-01 
                  :ARG0 (h3 / he) 
                  :ARG1 (f / fit-01 
                        :ARG1 (h2 / he) 
                        :concession-of (p / promise-01 
                              :ARG0 (h / he) 
                              :ARG4 (j / job) 
                              :prep-on (c / city 
                                    :name (n / name 
                                          :op1 "London"))))) 
            :mod (m / medicine)))

# ::snt it wont be too long i promise
# ::tok it wont be too long i promise
# ::alignments 6-7|0 5-6|0.0 3-4|0.2 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:09.467
# ::node	0	promise-01	6-7
# ::node	0.0	i	5-6
# ::node	0.1	it	0-1
# ::node	0.2	too	3-4
# ::root	0	promise-01
# ::edge	promise-01	ARG0	i	0	0.0	
# ::edge	promise-01	ARG1	it	0	0.1	
# ::edge	promise-01	ARG2	too	0	0.2	
(p / promise-01 
      :ARG0 (i / i) 
      :ARG1 (i2 / it) 
      :ARG2 (t / too))

# ::snt like all the other armies they promised to stay not one hour dash
# ::tok like all the other armies they promised to stay not one hour dash
# ::alignments 11-12|0.1.0.0+0.1.0 8-9|0.1 6-7|0 5-6|0.0 4-5|0.2 3-4|0.2.0 1-2|0.2.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:09.506
# ::node	0	promise-01	6-7
# ::node	0.0	they	5-6
# ::node	0.1	stay-01	8-9
# ::node	0.1.0	temporal-quantity	11-12
# ::node	0.1.0.0	hour	11-12
# ::node	0.2	army	4-5
# ::node	0.2.0	other	3-4
# ::node	0.2.1	all	1-2
# ::root	0	promise-01
# ::edge	army	mod	other	0.2	0.2.0	
# ::edge	army	quant	all	0.2	0.2.1	
# ::edge	promise-01	ARG0	they	0	0.0	
# ::edge	promise-01	ARG1	stay-01	0	0.1	
# ::edge	promise-01	source	army	0	0.2	
# ::edge	stay-01	ARG0	temporal-quantity	0.1	0.1.0	
# ::edge	temporal-quantity	unit	hour	0.1.0	0.1.0.0	
(p / promise-01 
      :ARG0 (t2 / they) 
      :ARG1 (s / stay-01 
            :ARG0 (t / temporal-quantity 
                  :unit (h / hour))) 
      :source (a / army 
            :mod (o / other) 
            :quant (a2 / all)))

# ::snt the prime minister xenophon zolotas presented to parliament a programme promising economic austerity writes peter thompson
# ::tok the prime minister xenophon zolotas presented to parliament a programme promising economic austerity writes peter thompson
# ::alignments 13-14|0.0.0.0.0 11-12|0.0.0.0.0.0 10-11|0 9-10|0.0 7-8|0.0.0.1.0.0+0.0.0.1.0+0.0.0.1 5-6|0.0.0 3-5|0.0.0.0.2.0+0.0.0.0.2.1+0.0.0.0.2+0.0.0.0 2-3|0.0.0.0.1.0+0.0.0.0.1 1-2|0.0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:09.613
# ::node	0	promise-01	10-11
# ::node	0.0	program	9-10
# ::node	0.0.0	present-01	5-6
# ::node	0.0.0.0	person	3-5
# ::node	0.0.0.0.0	write-01	13-14
# ::node	0.0.0.0.0.0	economy	11-12
# ::node	0.0.0.0.1	have-org-role-91	2-3
# ::node	0.0.0.0.1.0	minister	2-3
# ::node	0.0.0.0.1.0.0	prime	1-2
# ::node	0.0.0.0.2	name	3-5
# ::node	0.0.0.0.2.0	"zolotas"	3-5
# ::node	0.0.0.0.2.1	"xenophon"	3-5
# ::node	0.0.0.1	government-organization	7-8
# ::node	0.0.0.1.0	name	7-8
# ::node	0.0.0.1.0.0	"Parliament"	7-8
# ::root	0	promise-01
# ::edge	government-organization	name	name	0.0.0.1	0.0.0.1.0	
# ::edge	have-org-role-91	ARG0	person	0.0.0.0.1	0.0.0.0	
# ::edge	have-org-role-91	ARG2	minister	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	minister	mod	prime	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	name	op1	"Parliament"	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	name	op1	"zolotas"	0.0.0.0.2	0.0.0.0.2.0	
# ::edge	name	op2	"xenophon"	0.0.0.0.2	0.0.0.0.2.1	
# ::edge	person	name	name	0.0.0.0	0.0.0.0.2	
# ::edge	present-01	ARG0	person	0.0.0	0.0.0.0	
# ::edge	present-01	ARG1	program	0.0.0	0.0	
# ::edge	present-01	ARG2	government-organization	0.0.0	0.0.0.1	
# ::edge	promise-01	ARG1	program	0	0.0	
# ::edge	write-01	ARG0	person	0.0.0.0.0	0.0.0.0	
# ::edge	write-01	ARG1	economy	0.0.0.0.0	0.0.0.0.0.0	
(p / promise-01 
      :ARG1 (p2 / program 
            :ARG1-of (p3 / present-01 
                  :ARG0 (p4 / person 
                        :ARG0-of (w / write-01 
                              :ARG1 (e / economy)) 
                        :ARG0-of (h / have-org-role-91 
                              :ARG2 (m / minister 
                                    :mod (p5 / prime))) 
                        :name (n2 / name 
                              :op1 "zolotas" 
                              :op2 "xenophon")) 
                  :ARG2 (g / government-organization 
                        :name (n / name 
                              :op1 "Parliament")))))

# ::snt moscow promised a package of measures last summer to end an unprecedented nationwide miners strike
# ::tok moscow promised a package of measures last summer to end an unprecedented nationwide miners strike
# ::alignments 14-15|0.0.0 13-14|0.0.0.0.0+0.0.0.0 12-13|0.0.0.2 11-12|0.0.0.1.0+0.0.0.1 7-8|0.0.0.0.0.0 6-7|0.0.0.0.0.0.0 5-6|0.0.1 3-4|0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:09.674
# ::node	0	promise-01	1-2
# ::node	0.0	package	3-4
# ::node	0.0.0	strike-01	14-15
# ::node	0.0.0.0	person	13-14
# ::node	0.0.0.0.0	mine-01	13-14
# ::node	0.0.0.0.0.0	summer	7-8
# ::node	0.0.0.0.0.0.0	last	6-7
# ::node	0.0.0.1	precedent	11-12
# ::node	0.0.0.1.0	-	11-12
# ::node	0.0.0.2	nationwide	12-13
# ::node	0.0.1	measure	5-6
# ::root	0	promise-01
# ::edge	measure	consist	package	0.0.1	0.0	
# ::edge	mine-01	ARG0	person	0.0.0.0.0	0.0.0.0	
# ::edge	mine-01	ARG1	summer	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	precedent	polarity	-	0.0.0.1	0.0.0.1.0	
# ::edge	promise-01	ARG1	package	0	0.0	
# ::edge	strike-01	ARG0	person	0.0.0	0.0.0.0	
# ::edge	strike-01	ARG1	package	0.0.0	0.0	
# ::edge	strike-01	mod	nationwide	0.0.0	0.0.0.2	
# ::edge	strike-01	mod	precedent	0.0.0	0.0.0.1	
# ::edge	summer	mod	last	0.0.0.0.0.0	0.0.0.0.0.0.0	
(p4 / promise-01 
      :ARG1 (p3 / package 
            :ARG1-of (s / strike-01 
                  :ARG0 (p / person 
                        :ARG0-of (m / mine-01 
                              :ARG1 (s2 / summer 
                                    :mod (l / last)))) 
                  :mod (p2 / precedent 
                        :polarity -) 
                  :mod (n / nationwide)) 
            :consist-of (m2 / measure)))

# ::snt rather it is like the change occasioned by promising a creation in that case of a duty one did not have before
# ::tok rather it is like the change occasioned by promising a creation in that case of a duty one did not have before
# ::alignments 21-22|0.0.0 16-17|0.1.1 13-14|0.1.0 10-11|0.1 8-9|0 5-6|0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:09.729
# ::node	0	promise-01	8-9
# ::node	0.0	change-01	5-6
# ::node	0.0.0	before	21-22
# ::node	0.0.1	it	1-2
# ::node	0.1	create-01	10-11
# ::node	0.1.0	case	13-14
# ::node	0.1.1	duty	16-17
# ::root	0	promise-01
# ::edge	change-01	ARG0	before	0.0	0.0.0	
# ::edge	change-01	ARG1	it	0.0	0.0.1	
# ::edge	create-01	ARG0	case	0.1	0.1.0	
# ::edge	create-01	ARG1	duty	0.1	0.1.1	
# ::edge	promise-01	ARG0	change-01	0	0.0	
# ::edge	promise-01	ARG1	create-01	0	0.1	
(p / promise-01 
      :ARG0 (c3 / change-01 
            :ARG0 (b / before) 
            :ARG1 (i / it)) 
      :ARG1 (c2 / create-01 
            :ARG0 (c / case) 
            :ARG1 (d / duty)))

# ::snt matata slept outside and promised to keep the fire burning i hoped he was a light sleeper
# ::tok matata slept outside and promised to keep the fire burning i hoped he was a light sleeper
# ::alignments 15-16|0.0.0.0 12-13|0.1 11-12|0 10-11|0.0 9-10|0.0.0 4-5|0.0.0.1 3-4|0.0.0.1.0 2-3|0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:09.787
# ::node	0	hope-01	11-12
# ::node	0.0	i	10-11
# ::node	0.0.0	burn-01	9-10
# ::node	0.0.0.0	light	15-16
# ::node	0.0.0.1	promise-01	4-5
# ::node	0.0.0.1.0	and	3-4
# ::node	0.0.0.1.0.0	outside	2-3
# ::node	0.1	he	12-13
# ::root	0	hope-01
# ::edge	and	op1	outside	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	and	op2	promise-01	0.0.0.1.0	0.0.0.1	
# ::edge	burn-01	ARG0	light	0.0.0	0.0.0.0	
# ::edge	burn-01	ARG1	i	0.0.0	0.0	
# ::edge	hope-01	ARG0	i	0	0.0	
# ::edge	hope-01	ARG1	he	0	0.1	
# ::edge	promise-01	ARG1	burn-01	0.0.0.1	0.0.0	
(h2 / hope-01 
      :ARG0 (i / i 
            :ARG1-of (b / burn-01 
                  :ARG0 (l / light) 
                  :ARG1-of (p / promise-01 
                        :op-of (a / and 
                              :op1 (o / outside))))) 
      :ARG1 (h / he))

# ::snt he took the court lawyers number and promised to speak to her early in the morning
# ::tok he took the court lawyers number and promised to speak to her early in the morning
# ::alignments 15-16|0.0.1.2 12-13|0.0.1.1 9-10|0.0.1 7-8|0.0 6-7|0 5-6|0.0.0 4-5|0.0.0.0 3-4|0.0.0.0.0 0-1|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:09.859
# ::node	0	and	6-7
# ::node	0.0	promise-01	7-8
# ::node	0.0.0	number	5-6
# ::node	0.0.0.0	lawyer	4-5
# ::node	0.0.0.0.0	court	3-4
# ::node	0.0.1	speak-01	9-10
# ::node	0.0.1.0	he	0-1
# ::node	0.0.1.1	early	12-13
# ::node	0.0.1.2	morning	15-16
# ::root	0	and
# ::edge	and	op1	promise-01	0	0.0	
# ::edge	court	mod	lawyer	0.0.0.0.0	0.0.0.0	
# ::edge	number	mod	lawyer	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	number	0.0	0.0.0	
# ::edge	promise-01	ARG2	speak-01	0.0	0.0.1	
# ::edge	speak-01	ARG0	he	0.0.1	0.0.1.0	
# ::edge	speak-01	ARG1	early	0.0.1	0.0.1.1	
# ::edge	speak-01	time	morning	0.0.1	0.0.1.2	
(a / and 
      :op1 (p / promise-01 
            :ARG1 (n / number 
                  :mod (l / lawyer 
                        :mod-of (c / court))) 
            :ARG2 (s / speak-01 
                  :ARG0 (h / he) 
                  :ARG1 (e / early) 
                  :time (m / morning))))

# ::snt he was talking about the white paper expected next autumn a document which promises to be more powerful and farreaching than the environment protection bill published last wednesday
# ::tok he was talking about the white paper expected next autumn a document which promises to be more powerful and farreaching than the environment protection bill published last wednesday
# ::alignments 26-27|0.2.0 25-26|0.2.1.0.1.0 24-25|0.2.1.0.1.0.0 23-24|0.2.1.0.1.0.1.0 22-23|0.2.1.0.1.0.1 18-19|0.2.1.0.1 17-18|0.1 13-14|0 11-12|0.0 8-9|0.2.2 7-8|0.2 6-7|0.2.1 5-6|0.2.1.1 2-3|0.2.1.0 0-1|0.2.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:10.261
# ::node	0	promise-01	13-14
# ::node	0.0	document	11-12
# ::node	0.1	powerful	17-18
# ::node	0.2	expect-01	7-8
# ::node	0.2.0	last	26-27
# ::node	0.2.1	paper	6-7
# ::node	0.2.1.0	talk-01	2-3
# ::node	0.2.1.0.0	he	0-1
# ::node	0.2.1.0.1	and	18-19
# ::node	0.2.1.0.1.0	publish-01	25-26
# ::node	0.2.1.0.1.0.0	bill	24-25
# ::node	0.2.1.0.1.0.1	environment	22-23
# ::node	0.2.1.0.1.0.1.0	protect-01	23-24
# ::node	0.2.1.1	white	5-6
# ::node	0.2.2	next	8-9
# ::root	0	promise-01
# ::edge	and	manner	publish-01	0.2.1.0.1	0.2.1.0.1.0	
# ::edge	expect-01	ARG0	last	0.2	0.2.0	
# ::edge	expect-01	ARG1	paper	0.2	0.2.1	
# ::edge	expect-01	ARG2	next	0.2	0.2.2	
# ::edge	expect-01	condition	promise-01	0.2	0	
# ::edge	paper	mod	white	0.2.1	0.2.1.1	
# ::edge	promise-01	ARG0	document	0	0.0	
# ::edge	promise-01	ARG1	powerful	0	0.1	
# ::edge	protect-01	ARG1	environment	0.2.1.0.1.0.1.0	0.2.1.0.1.0.1	
# ::edge	publish-01	ARG0	bill	0.2.1.0.1.0	0.2.1.0.1.0.0	
# ::edge	publish-01	ARG1	environment	0.2.1.0.1.0	0.2.1.0.1.0.1	
# ::edge	talk-01	ARG0	he	0.2.1.0	0.2.1.0.0	
# ::edge	talk-01	ARG1	and	0.2.1.0	0.2.1.0.1	
# ::edge	talk-01	medium	paper	0.2.1.0	0.2.1	
(p4 / promise-01 
      :ARG0 (d / document) 
      :ARG1 (p3 / powerful) 
      :condition-of (e2 / expect-01 
            :ARG0 (l / last) 
            :ARG1 (p5 / paper 
                  :medium-of (t / talk-01 
                        :ARG0 (h / he) 
                        :ARG1 (a / and 
                              :manner (p / publish-01 
                                    :ARG0 (b / bill) 
                                    :ARG1 (e / environment 
                                          :ARG1-of (p2 / protect-01))))) 
                  :mod (w / white)) 
            :ARG2 (n / next)))

# ::snt bartholomew school has been promised a share of the profit to pay for improvements
# ::tok bartholomew school has been promised a share of the profit to pay for improvements
# ::alignments 13-14|0.1.0.0.0 11-12|0.1.0.0 9-10|0.1.0 6-7|0.1 4-5|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:10.302
# ::node	0	promise-01	4-5
# ::node	0.0	school	1-2
# ::node	0.1	share-01	6-7
# ::node	0.1.0	profit-01	9-10
# ::node	0.1.0.0	pay-01	11-12
# ::node	0.1.0.0.0	improve-01	13-14
# ::root	0	promise-01
# ::edge	pay-01	ARG1	improve-01	0.1.0.0	0.1.0.0.0	
# ::edge	profit-01	ARG1	pay-01	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG1	school	0	0.0	
# ::edge	promise-01	ARG2	share-01	0	0.1	
# ::edge	share-01	ARG1	profit-01	0.1	0.1.0	
(p3 / promise-01 
      :ARG1 (s2 / school) 
      :ARG2 (s / share-01 
            :ARG1 (p2 / profit-01 
                  :ARG1 (p / pay-01 
                        :ARG1 (i / improve-01)))))

# ::snt   daniel promised he would take me to cramond when our run finished she told him at once
# ::tok daniel promised he would take me to cramond when our run finished she told him at once
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:10.303
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt these could include promising to join the european monetary system and mopping up liquidity by for example special banking deposit rates
# ::tok these could include promising to join the european monetary system and mopping up liquidity by for example special banking deposit rates
# ::alignments 20-21|0.0.0.1.0 19-20|0.0.0.1.0.0 18-19|0.0.0.1.0.1.0 17-18|0.0.0.1.0.1 16-17|0.0.0.1.0.0.1 10-11|0.0.0.1 9-10|0.0.0.0.0 8-9|0.0.0.0.0.0 7-8|0.0.0.1.0.0.0.0.0+0.0.0.1.0.0.0.0+0.0.0.1.0.0.0 5-6|0.0.0.0 3-4|0.0.0 2-3|0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:10.394
# ::node	0	possible	1-2
# ::node	0.0	include-01	2-3
# ::node	0.0.0	promise-01	3-4
# ::node	0.0.0.0	join-01	5-6
# ::node	0.0.0.0.0	system	9-10
# ::node	0.0.0.0.0.0	money	8-9
# ::node	0.0.0.1	and	10-11
# ::node	0.0.0.1.0	rate	20-21
# ::node	0.0.0.1.0.0	deposit-01	19-20
# ::node	0.0.0.1.0.0.0	continent	7-8
# ::node	0.0.0.1.0.0.0.0	name	7-8
# ::node	0.0.0.1.0.0.0.0.0	"Europe"	7-8
# ::node	0.0.0.1.0.0.1	example	16-17
# ::node	0.0.0.1.0.1	special	17-18
# ::node	0.0.0.1.0.1.0	banking	18-19
# ::root	0	possible
# ::edge	and	op1	promise-01	0.0.0.1	0.0.0	
# ::edge	and	op2	rate	0.0.0.1	0.0.0.1.0	
# ::edge	banking	mod	special	0.0.0.1.0.1.0	0.0.0.1.0.1	
# ::edge	continent	name	name	0.0.0.1.0.0.0	0.0.0.1.0.0.0.0	
# ::edge	deposit-01	ARG0	continent	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	deposit-01	ARG1	example	0.0.0.1.0.0	0.0.0.1.0.0.1	
# ::edge	deposit-01	ARG3	rate	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	include-01	ARG1	promise-01	0.0	0.0.0	
# ::edge	join-01	ARG1	system	0.0.0.0	0.0.0.0.0	
# ::edge	name	op1	"Europe"	0.0.0.1.0.0.0.0	0.0.0.1.0.0.0.0.0	
# ::edge	possible	domain	include-01	0	0.0	
# ::edge	promise-01	ARG2	join-01	0.0.0	0.0.0.0	
# ::edge	rate	mod	special	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	system	topic	money	0.0.0.0.0	0.0.0.0.0.0	
(p2 / possible 
      :domain (i / include-01 
            :ARG1 (p / promise-01 
                  :ARG2 (j / join-01 
                        :ARG1 (s2 / system 
                              :topic (m / money))) 
                  :op-of (a / and 
                        :op1 (r / rate 
                              :ARG3-of (d / deposit-01 
                                    :ARG0 (c / continent 
                                          :name (n / name 
                                                :op1 "Europe")) 
                                    :ARG1 (e / example)) 
                              :mod (s / special 
                                    :mod-of (b / banking)))))))

# ::snt for instance he promises to use publicity to shame polluters and for that to work he must assure the public that the nra is worth taking notice of
# ::tok for instance he promises to use publicity to shame polluters and for that to work he must assure the public that the nra is worth taking notice of
# ::alignments 26-27|0.0.3 24-25|0.0.2.0.1 19-20|0.0.2.0.0.0 17-18|0.0.2.0.0 15-16|0.0.2.0 10-11|0.0.4 8-9|0 6-7|0.0.1 5-6|0.0 3-4|0.0.2 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:10.570
# ::node	0	shame	8-9
# ::node	0.0	use-01	5-6
# ::node	0.0.0	he	2-3
# ::node	0.0.1	publicity	6-7
# ::node	0.0.2	promise-01	3-4
# ::node	0.0.2.0	he	15-16
# ::node	0.0.2.0.0	assure-01	17-18
# ::node	0.0.2.0.0.0	public	19-20
# ::node	0.0.2.0.1	worth	24-25
# ::node	0.0.3	notice	26-27
# ::node	0.0.4	and	10-11
# ::root	0	shame
(s / shame 
      :ARG2-of (u / use-01 
            :ARG0 (h2 / he) 
            :ARG1 (p2 / publicity) 
            :ARG1-of (p3 / promise-01 
                  :ARG0 (h / he 
                        :ARG0-of (a / assure-01 
                              :ARG1 (p / public)) 
                        :domain-of (w / worth))) 
            :op-of (n / notice) 
            :op-of (a2 / and)))

# ::snt they made council housing a priority and they halved the housing inaudible seconds1 they promised a better deal for local government and ended up with the elderly freezing in their homes rubbish piled in the streets and the dead unburied
# ::tok they made council housing a priority and they halved the housing inaudible seconds1 they promised a better deal for local government and ended up with the elderly freezing in their homes rubbish piled in the streets and the dead unburied
# ::alignments 36-37|0.1.0.1.0 35-36|0.1.0.1 31-32|0.1.0.2 30-31|0.1.0.2.0 27-28|0.1.0 26-27|0.0.1.0 22-23|0.1 21-22|0 19-20|0.1.0.0 17-18|0.0.1 14-15|0.0 13-14|0.0.0 10-11|0.0.2 7-8|0.0.2.0 6-7|0.1.0.3 5-6|0.1.0.3.1 3-4|0.1.0.3.0 2-3|0.1.0.3.0.1 0-1|0.1.0.3.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:11.529
# ::node	0	and	21-22
# ::node	0.0	promise-01	14-15
# ::node	0.0.0	they	13-14
# ::node	0.0.1	deal-01	17-18
# ::node	0.0.1.0	elderly	26-27
# ::node	0.0.2	house-01	10-11
# ::node	0.0.2.0	they	7-8
# ::node	0.1	end-01	22-23
# ::node	0.1.0	freeze-02	27-28
# ::node	0.1.0.0	local	19-20
# ::node	0.1.0.1	street	35-36
# ::node	0.1.0.1.0	and	36-37
# ::node	0.1.0.2	rubbish	31-32
# ::node	0.1.0.2.0	home	30-31
# ::node	0.1.0.3	and	6-7
# ::node	0.1.0.3.0	house-01	3-4
# ::node	0.1.0.3.0.0	they	0-1
# ::node	0.1.0.3.0.1	council	2-3
# ::node	0.1.0.3.1	priority	5-6
# ::root	0	and
# ::edge	and	op1	house-01	0.1.0.3	0.1.0.3.0	
# ::edge	and	op1	promise-01	0	0.0	
# ::edge	and	op1	street	0.1.0.1.0	0.1.0.1	
# ::edge	and	op2	end-01	0	0.1	
# ::edge	and	op2	priority	0.1.0.3	0.1.0.3.1	
# ::edge	and	op3	freeze-02	0.1.0.3	0.1.0	
# ::edge	deal-01	ARG1	elderly	0.0.1	0.0.1.0	
# ::edge	end-01	ARG1	freeze-02	0.1	0.1.0	
# ::edge	freeze-02	ARG0	local	0.1.0	0.1.0.0	
# ::edge	freeze-02	ARG1	street	0.1.0	0.1.0.1	
# ::edge	freeze-02	location	rubbish	0.1.0	0.1.0.2	
# ::edge	house-01	ARG0	they	0.0.2	0.0.2.0	
# ::edge	house-01	ARG0	they	0.1.0.3.0	0.1.0.3.0.0	
# ::edge	house-01	ARG1	council	0.1.0.3.0	0.1.0.3.0.1	
# ::edge	house-01	ARG1	promise-01	0.0.2	0.0	
# ::edge	promise-01	ARG0	they	0.0	0.0.0	
# ::edge	promise-01	ARG1	deal-01	0.0	0.0.1	
# ::edge	rubbish	mod	home	0.1.0.2	0.1.0.2.0	
(a2 / and 
      :op1 (p / promise-01 
            :ARG0 (t / they) 
            :ARG1 (d / deal-01 
                  :ARG1 (e / elderly)) 
            :ARG1-of (h2 / house-01 
                  :ARG0 (t2 / they))) 
      :op2 (e2 / end-01 
            :ARG1 (f / freeze-02 
                  :ARG0 (l / local) 
                  :ARG1 (s / street 
                        :op-of (a / and)) 
                  :location (r / rubbish 
                        :mod (h / home)) 
                  :op-of (a3 / and 
                        :op1 (h3 / house-01 
                              :ARG0 (t3 / they) 
                              :ARG1 (c / council)) 
                        :op2 (p2 / priority)))))

# ::snt the employers promised priority consideration for jobs to pupils who reached targets of attendance punctuality and attainment in basic subjects during their last two years at school
# ::tok the employers promised priority consideration for jobs to pupils who reached targets of attendance punctuality and attainment in basic subjects during their last two years at school
# ::alignments 26-27|0.0.2 24-25|0.0.0.0.1.0.1+0.0.0.0.1.0 23-24|0.0.0.0.1.0.0 22-23|0.0.3 19-20|0.0.1.0 18-19|0.0.1.0.0 15-16|0 11-12|0.0.1 10-11|0.0 8-9|0.0.0 6-7|0.0.0.0.0 4-5|0.0.0.0 3-4|0.0.0.0.1.1 2-3|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:11.807
# ::node	0	and	15-16
# ::node	0.0	reach-01	10-11
# ::node	0.0.0	pupil	8-9
# ::node	0.0.0.0	consider-02	4-5
# ::node	0.0.0.0.0	job	6-7
# ::node	0.0.0.0.1	promise-01	2-3
# ::node	0.0.0.0.1.0	temporal-quantity	24-25
# ::node	0.0.0.0.1.0.0	2	23-24
# ::node	0.0.0.0.1.0.1	year	24-25
# ::node	0.0.0.0.1.1	priority	3-4
# ::node	0.0.1	target	11-12
# ::node	0.0.1.0	subject	19-20
# ::node	0.0.1.0.0	basic	18-19
# ::node	0.0.2	school	26-27
# ::node	0.0.3	last	22-23
# ::root	0	and
# ::edge	and	op1	reach-01	0	0.0	
# ::edge	consider-02	ARG1	job	0.0.0.0	0.0.0.0.0	
# ::edge	consider-02	ARG2	pupil	0.0.0.0	0.0.0	
# ::edge	promise-01	ARG0	temporal-quantity	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	promise-01	ARG1	priority	0.0.0.0.1	0.0.0.0.1.1	
# ::edge	promise-01	ARG2	consider-02	0.0.0.0.1	0.0.0.0	
# ::edge	reach-01	ARG0	pupil	0.0	0.0.0	
# ::edge	reach-01	ARG1	target	0.0	0.0.1	
# ::edge	reach-01	ARG2	school	0.0	0.0.2	
# ::edge	reach-01	time	last	0.0	0.0.3	
# ::edge	subject	mod	basic	0.0.1.0	0.0.1.0.0	
# ::edge	target	location	subject	0.0.1	0.0.1.0	
# ::edge	temporal-quantity	quant	2	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	temporal-quantity	unit	year	0.0.0.0.1.0	0.0.0.0.1.0.1	
(a / and 
      :op1 (r / reach-01 
            :ARG0 (p / pupil 
                  :ARG2-of (c / consider-02 
                        :ARG1 (j / job) 
                        :ARG2-of (p3 / promise-01 
                              :ARG0 (t / temporal-quantity 
                                    :quant 2 
                                    :unit (y / year)) 
                              :ARG1 (p2 / priority)))) 
            :ARG1 (t2 / target 
                  :location (s2 / subject 
                        :mod (b / basic))) 
            :ARG2 (s / school) 
            :time (l / last)))

# ::snt   esso have promised close liaison on the development and the protection of the floodplain and the environment generally and for that we are very grateful he said
# ::tok esso have promised close liaison on the development and the protection of the floodplain and the environment generally and for that we are very grateful he said
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:11.808
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt his remarks during his first appearance as foreign secretary before the commons foreign affairs select committee promised continuing conflict within the ec on economic policy and foreshadowed latent tension between margaret thatcher and some senior ministers on the timing of erm membership
# ::tok his remarks during his first appearance as foreign secretary before the commons foreign affairs select committee promised continuing conflict within the ec on economic policy and foreshadowed latent tension between margaret thatcher and some senior ministers on the timing of erm membership
# ::alignments 41-42|0.0.2.0.0.0.1 38-39|0.0.2.0.0.0 35-36|0.0.2.0.0.1+0.0.2.0.0 34-35|0.0.2.0.0.1.0 33-34|0.0.0.0.0 32-33|0 29-30|0.0.2.0 28-29|0.0.2 25-26|0.0 24-25|0.0.1 23-24|0.0.1.0 19-20|0.0.1.1 18-19|0.0.0 17-18|0.0.0.0 16-17|0.0.0.0.1 15-16|0.0.0.0.1.0 14-15|0.0.0.0.1.0.0 13-14|0.0.0.0.1.0.0.0.1 12-13|0.0.2.0.0.0.0 11-12|0.0.0.0.1.0.0.0.1.0.0.0+0.0.0.0.1.0.0.0.1.0.0+0.0.0.0.1.0.0.0.1.0 9-10|0.0.0.0.1.0.0.0.1.1 8-9|0.0.0.0.1.0.0.0 7-8|0.0.0.0.1.0.0.0.2 5-6|0.0.0.0.1.0.0.0.0 1-2|0.0.0.0.1.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:12.350
# ::node	0	and	32-33
# ::node	0.0	and	25-26
# ::node	0.0.0	conflict-01	18-19
# ::node	0.0.0.0	continue-01	17-18
# ::node	0.0.0.0.0	some	33-34
# ::node	0.0.0.0.1	promise-01	16-17
# ::node	0.0.0.0.1.0	committee	15-16
# ::node	0.0.0.0.1.0.0	select-01	14-15
# ::node	0.0.0.0.1.0.0.0	secretary	8-9
# ::node	0.0.0.0.1.0.0.0.0	appear-01	5-6
# ::node	0.0.0.0.1.0.0.0.0.0	remark-01	1-2
# ::node	0.0.0.0.1.0.0.0.1	affair	13-14
# ::node	0.0.0.0.1.0.0.0.1.0	government-organization	11-12
# ::node	0.0.0.0.1.0.0.0.1.0.0	name	11-12
# ::node	0.0.0.0.1.0.0.0.1.0.0.0	"Commons"	11-12
# ::node	0.0.0.0.1.0.0.0.1.1	before	9-10
# ::node	0.0.0.0.1.0.0.0.2	foreign	7-8
# ::node	0.0.1	policy	24-25
# ::node	0.0.1.0	economy	23-24
# ::node	0.0.1.1	within	19-20
# ::node	0.0.2	tension	28-29
# ::node	0.0.2.0	between	29-30
# ::node	0.0.2.0.0	have-org-role-91	35-36
# ::node	0.0.2.0.0.0	time-02	38-39
# ::node	0.0.2.0.0.0.0	foreign	12-13
# ::node	0.0.2.0.0.0.1	membership	41-42
# ::node	0.0.2.0.0.1	minister	35-36
# ::node	0.0.2.0.0.1.0	senior	34-35
# ::root	0	and
# ::edge	affair	mod	government-organization	0.0.0.0.1.0.0.0.1	0.0.0.0.1.0.0.0.1.0	
# ::edge	and	op1	and	0	0.0	
# ::edge	and	op1	policy	0.0	0.0.1	
# ::edge	and	op2	tension	0.0	0.0.2	
# ::edge	appear-01	ARG1	secretary	0.0.0.0.1.0.0.0.0	0.0.0.0.1.0.0.0	
# ::edge	before	op1	affair	0.0.0.0.1.0.0.0.1.1	0.0.0.0.1.0.0.0.1	
# ::edge	between	op1	have-org-role-91	0.0.2.0	0.0.2.0.0	
# ::edge	conflict-01	concession	and	0.0.0	0.0	
# ::edge	continue-01	ARG0	some	0.0.0.0	0.0.0.0.0	
# ::edge	continue-01	ARG1	conflict-01	0.0.0.0	0.0.0	
# ::edge	government-organization	name	name	0.0.0.0.1.0.0.0.1.0	0.0.0.0.1.0.0.0.1.0.0	
# ::edge	have-org-role-91	ARG1	time-02	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	have-org-role-91	ARG2	minister	0.0.2.0.0	0.0.2.0.0.1	
# ::edge	minister	mod	senior	0.0.2.0.0.1	0.0.2.0.0.1.0	
# ::edge	name	op1	"Commons"	0.0.0.0.1.0.0.0.1.0.0	0.0.0.0.1.0.0.0.1.0.0.0	
# ::edge	policy	mod	economy	0.0.1	0.0.1.0	
# ::edge	promise-01	ARG1	committee	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	promise-01	ARG2	continue-01	0.0.0.0.1	0.0.0.0	
# ::edge	remark-01	ARG1	appear-01	0.0.0.0.1.0.0.0.0.0	0.0.0.0.1.0.0.0.0	
# ::edge	secretary	mod	affair	0.0.0.0.1.0.0.0	0.0.0.0.1.0.0.0.1	
# ::edge	secretary	mod	foreign	0.0.0.0.1.0.0.0	0.0.0.0.1.0.0.0.2	
# ::edge	select-01	ARG0	secretary	0.0.0.0.1.0.0	0.0.0.0.1.0.0.0	
# ::edge	select-01	ARG1	committee	0.0.0.0.1.0.0	0.0.0.0.1.0	
# ::edge	tension	mod	between	0.0.2	0.0.2.0	
# ::edge	time-02	ARG0	foreign	0.0.2.0.0.0	0.0.2.0.0.0.0	
# ::edge	time-02	ARG1	membership	0.0.2.0.0.0	0.0.2.0.0.0.1	
# ::edge	within	op1	policy	0.0.1.1	0.0.1	
(a / and 
      :op1 (a2 / and 
            :concession-of (c / conflict-01 
                  :ARG1-of (c2 / continue-01 
                        :ARG0 (s2 / some) 
                        :ARG2-of (p2 / promise-01 
                              :ARG1 (c3 / committee 
                                    :ARG1-of (s3 / select-01 
                                          :ARG0 (s4 / secretary 
                                                :ARG1-of (a4 / appear-01 
                                                      :ARG1-of (r / remark-01)) 
                                                :mod (a3 / affair 
                                                      :mod (g / government-organization 
                                                            :name (n / name 
                                                                  :op1 "Commons")) 
                                                      :op-of (b2 / before)) 
                                                :mod (f2 / foreign))))))) 
            :op1 (p / policy 
                  :mod (e / economy) 
                  :op-of (w / within)) 
            :op2 (t2 / tension 
                  :mod (b / between 
                        :op1 (h / have-org-role-91 
                              :ARG1 (t / time-02 
                                    :ARG0 (f / foreign) 
                                    :ARG1 (m / membership)) 
                              :ARG2 (m2 / minister 
                                    :mod (s / senior)))))))

# ::snt rings speech four days later at the harvest thanksgiving festival promising an improvement in the availability of foodstuffs
# ::tok rings speech four days later at the harvest thanksgiving festival promising an improvement in the availability of foodstuffs
# ::alignments 15-16|0.0.1.0 12-13|0.0.1 10-11|0.0 9-10|0.0.0 7-8|0.0.0.0 4-5|0.0.0.0.0 3-4|0.0.0.0.0.0.1+0.0.0.0.0.0 2-3|0.0.0.0.0.0.0 1-2|0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:12.488
# ::node	0	speech	1-2
# ::node	0.0	promise-01	10-11
# ::node	0.0.0	festival	9-10
# ::node	0.0.0.0	harvest-01	7-8
# ::node	0.0.0.0.0	late	4-5
# ::node	0.0.0.0.0.0	temporal-quantity	3-4
# ::node	0.0.0.0.0.0.0	4	2-3
# ::node	0.0.0.0.0.0.1	day	3-4
# ::node	0.0.1	improve-01	12-13
# ::node	0.0.1.0	available	15-16
# ::node	0.1	ring	0-1
# ::root	0	speech
# ::edge	festival	purpose	harvest-01	0.0.0	0.0.0.0	
# ::edge	improve-01	ARG1	available	0.0.1	0.0.1.0	
# ::edge	late	op1	temporal-quantity	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	late	op2	harvest-01	0.0.0.0.0	0.0.0.0	
# ::edge	promise-01	ARG0	speech	0.0	0	
# ::edge	promise-01	ARG1	festival	0.0	0.0.0	
# ::edge	promise-01	ARG2	improve-01	0.0	0.0.1	
# ::edge	speech	mod	ring	0	0.1	
# ::edge	temporal-quantity	quant	4	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	temporal-quantity	unit	day	0.0.0.0.0.0	0.0.0.0.0.0.1	
(s / speech 
      :ARG0-of (p / promise-01 
            :ARG1 (f / festival 
                  :purpose (h / harvest-01 
                        :op-of (l / late 
                              :op1 (t / temporal-quantity 
                                    :quant 4 
                                    :unit (d / day))))) 
            :ARG2 (i / improve-01 
                  :ARG1 (a / available))) 
      :mod (r / ring))

# ::snt whatever george bush promises at the paris summit the us budget deficit is here to stay along with the high interest rates required to attract the money to fund it
# ::tok whatever george bush promises at the paris summit the us budget deficit is here to stay along with the high interest rates required to attract the money to fund it
# ::alignments 29-30|0.1.0.0.0.0 28-29|0.1.0.0.0 26-27|0.1.0.0 24-25|0.1.0 22-23|0.1.0.1 21-22|0.1 20-21|0 19-20|0.0 16-17|0.1.1.2 15-16|0.1.1 13-14|0.1.1.3 11-12|0.1.1.0 10-11|0.1.1.0.0 7-8|0.1.1.1.2 3-4|0.1.1.1 2-3|0.1.1.1.0 0-1|0.1.1.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:12.871
# ::node	0	interest-01	20-21
# ::node	0.0	high	19-20
# ::node	0.1	rate	21-22
# ::node	0.1.0	attract-01	24-25
# ::node	0.1.0.0	money	26-27
# ::node	0.1.0.0.0	fund-01	28-29
# ::node	0.1.0.0.0.0	it	29-30
# ::node	0.1.0.1	require-01	22-23
# ::node	0.1.1	stay-01	15-16
# ::node	0.1.1.0	deficit	11-12
# ::node	0.1.1.0.0	budget	10-11
# ::node	0.1.1.1	promise-01	3-4
# ::node	0.1.1.1.0	bush-league	2-3
# ::node	0.1.1.1.1	whatever	0-1
# ::node	0.1.1.1.2	summit	7-8
# ::node	0.1.1.2	along	16-17
# ::node	0.1.1.3	here	13-14
# ::root	0	interest-01
# ::edge	attract-01	ARG0	rate	0.1.0	0.1	
# ::edge	attract-01	ARG1	money	0.1.0	0.1.0.0	
# ::edge	deficit	mod	budget	0.1.1.0	0.1.1.0.0	
# ::edge	fund-01	ARG1	it	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	interest-01	mod	high	0	0.0	
# ::edge	money	purpose	fund-01	0.1.0.0	0.1.0.0.0	
# ::edge	promise-01	ARG0	bush-league	0.1.1.1	0.1.1.1.0	
# ::edge	promise-01	ARG1	whatever	0.1.1.1	0.1.1.1.1	
# ::edge	promise-01	time	summit	0.1.1.1	0.1.1.1.2	
# ::edge	rate	mod	interest-01	0.1	0	
# ::edge	require-01	ARG1	attract-01	0.1.0.1	0.1.0	
# ::edge	stay-01	ARG0	deficit	0.1.1	0.1.1.0	
# ::edge	stay-01	ARG1	promise-01	0.1.1	0.1.1.1	
# ::edge	stay-01	ARG2	rate	0.1.1	0.1	
# ::edge	stay-01	ARG3	along	0.1.1	0.1.1.2	
# ::edge	stay-01	frequency	here	0.1.1	0.1.1.3	
(i2 / interest-01 
      :mod (h / high) 
      :mod-of (r2 / rate 
            :ARG0-of (a / attract-01 
                  :ARG1 (m / money 
                        :purpose (f / fund-01 
                              :ARG1 (i / it))) 
                  :ARG1-of (r / require-01)) 
            :ARG2-of (s / stay-01 
                  :ARG0 (d / deficit 
                        :mod (b / budget)) 
                  :ARG1 (p / promise-01 
                        :ARG0 (b2 / bush-league) 
                        :ARG1 (w / whatever) 
                        :time (s2 / summit)) 
                  :ARG3 (a2 / along) 
                  :frequency (h2 / here))))

# ::snt dr elsarraj arrived in london after a trip to scandinavia where the norwegian peoples aid have promised him the dollars 400000 he estimates he needs to launch his project
# ::tok dr elsarraj arrived in london after a trip to scandinavia where the norwegian peoples aid have promised him the dollars 400000 he estimates he needs to launch his project
# ::alignments 28-29|0.1 26-27|0 24-25|0.2 23-24|0.0 22-23|0.2.0.0 21-22|0.2.0 20-21|0.2.0.0.0.3+0.2.0.0.0.2+0.2.0.0.0.1+0.2.0.0.0 19-20|0.2.0.0.0.0.1.0+0.2.0.0.0.0.1 16-17|0.2.0.0.0.0 14-15|0.2.0.0.0.0.0 13-14|0.2.0.0.0.0.0.0 7-8|0.2.0.0.0.0.2.1.0 5-6|0.2.0.0.0.0.2.1 4-5|0.2.0.0.0.0.2.0.0.0+0.2.0.0.0.0.2.0.0+0.2.0.0.0.0.2.0 2-3|0.2.0.0.0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:13.609
# ::node	0	launch-01	26-27
# ::node	0.0	he	23-24
# ::node	0.1	project	28-29
# ::node	0.2	need-01	24-25
# ::node	0.2.0	he	21-22
# ::node	0.2.0.0	estimate-01	22-23
# ::node	0.2.0.0.0	date-entity	20-21
# ::node	0.2.0.0.0.0	promise-01	16-17
# ::node	0.2.0.0.0.0.0	aid-01	14-15
# ::node	0.2.0.0.0.0.0.0	people	13-14
# ::node	0.2.0.0.0.0.1	monetary-quantity	19-20
# ::node	0.2.0.0.0.0.1.0	dollar	19-20
# ::node	0.2.0.0.0.0.2	arrive-01	2-3
# ::node	0.2.0.0.0.0.2.0	city	4-5
# ::node	0.2.0.0.0.0.2.0.0	name	4-5
# ::node	0.2.0.0.0.0.2.0.0.0	"London"	4-5
# ::node	0.2.0.0.0.0.2.1	after	5-6
# ::node	0.2.0.0.0.0.2.1.0	trip-01	7-8
# ::node	0.2.0.0.0.1	0	20-21
# ::node	0.2.0.0.0.2	0	20-21
# ::node	0.2.0.0.0.3	40	20-21
# ::root	0	launch-01
# ::edge	after	op1	trip-01	0.2.0.0.0.0.2.1	0.2.0.0.0.0.2.1.0	
# ::edge	aid-01	ARG1	people	0.2.0.0.0.0.0	0.2.0.0.0.0.0.0	
# ::edge	arrive-01	ARG1	promise-01	0.2.0.0.0.0.2	0.2.0.0.0.0	
# ::edge	arrive-01	ARG4	city	0.2.0.0.0.0.2	0.2.0.0.0.0.2.0	
# ::edge	arrive-01	time	after	0.2.0.0.0.0.2	0.2.0.0.0.0.2.1	
# ::edge	city	name	name	0.2.0.0.0.0.2.0	0.2.0.0.0.0.2.0.0	
# ::edge	date-entity	day	0	0.2.0.0.0	0.2.0.0.0.1	
# ::edge	date-entity	month	0	0.2.0.0.0	0.2.0.0.0.2	
# ::edge	date-entity	year	40	0.2.0.0.0	0.2.0.0.0.3	
# ::edge	estimate-01	ARG0	he	0.2.0.0	0.2.0	
# ::edge	estimate-01	ARG1	date-entity	0.2.0.0	0.2.0.0.0	
# ::edge	launch-01	ARG0	he	0	0.0	
# ::edge	launch-01	ARG1	project	0	0.1	
# ::edge	monetary-quantity	unit	dollar	0.2.0.0.0.0.1	0.2.0.0.0.0.1.0	
# ::edge	name	op1	"London"	0.2.0.0.0.0.2.0.0	0.2.0.0.0.0.2.0.0.0	
# ::edge	need-01	ARG0	he	0.2	0.2.0	
# ::edge	need-01	ARG1	launch-01	0.2	0	
# ::edge	promise-01	ARG0	aid-01	0.2.0.0.0.0	0.2.0.0.0.0.0	
# ::edge	promise-01	ARG1	monetary-quantity	0.2.0.0.0.0	0.2.0.0.0.0.1	
# ::edge	promise-01	ARG2	date-entity	0.2.0.0.0.0	0.2.0.0.0	
(l / launch-01 
      :ARG0 (h / he) 
      :ARG1 (p / project) 
      :ARG1-of (n / need-01 
            :ARG0 (h2 / he 
                  :ARG0-of (e / estimate-01 
                        :ARG1 (d / date-entity 
                              :ARG2-of (p2 / promise-01 
                                    :ARG0 (a / aid-01 
                                          :ARG1 (p3 / people)) 
                                    :ARG1 (m / monetary-quantity 
                                          :unit (d2 / dollar)) 
                                    :ARG1-of (a3 / arrive-01 
                                          :ARG4 (c / city 
                                                :name (n2 / name 
                                                      :op1 "London")) 
                                          :time (a2 / after 
                                                :op1 (t / trip-01)))) 
                              :day 0 
                              :month 0 
                              :year 40)))))

# ::snt tirol was another inexpensive yearling purchase at 52000 guineas and hannon promised there would be further repayments on his price
# ::tok tirol was another inexpensive yearling purchase at 52000 guineas and hannon promised there would be further repayments on his price
# ::alignments 19-20|0.1+0 15-16|0.0.0.0.0 11-12|0.0 9-10|0.0.0 5-6|0.0.0.0 2-3|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:13.644
# ::node	0	thing	19-20
# ::node	0.0	promise-01	11-12
# ::node	0.0.0	and	9-10
# ::node	0.0.0.0	purchase-01	5-6
# ::node	0.0.0.0.0	further	15-16
# ::node	0.0.0.0.1	another	2-3
# ::node	0.1	price-01	19-20
# ::root	0	thing
(t / thing 
      :ARG1-of (p2 / promise-01 
            :ARG0 (a / and 
                  :ARG0-of (p3 / purchase-01 
                        :ARG1 (f / further) 
                        :mod (a2 / another)))) 
      :ARG2-of (p / price-01))

# ::snt he promised that britain would not hesitate to contact luxembourg if the broadcasting standards council felt there was any problem with it
# ::tok he promised that britain would not hesitate to contact luxembourg if the broadcasting standards council felt there was any problem with it
# ::alignments 21-22|0.2.0.1 19-20|0.1 18-19|0.1.0 15-16|0 14-15|0.0 13-14|0.0.1 12-13|0.0.0 8-9|0.2.0 6-7|0.2 3-4|0.2.0.0.0.0+0.2.0.0.0+0.2.0.0 1-2|0.2.1 0-1|0.2.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:13.756
# ::node	0	feel-01	15-16
# ::node	0.0	council	14-15
# ::node	0.0.0	broadcast-01	12-13
# ::node	0.0.1	standard	13-14
# ::node	0.1	problem	19-20
# ::node	0.1.0	any	18-19
# ::node	0.2	hesitate-01	6-7
# ::node	0.2.0	contact-01	8-9
# ::node	0.2.0.0	country	3-4
# ::node	0.2.0.0.0	name	3-4
# ::node	0.2.0.0.0.0	"Britain"	3-4
# ::node	0.2.0.1	it	21-22
# ::node	0.2.1	promise-01	1-2
# ::node	0.2.1.0	he	0-1
# ::root	0	feel-01
# ::edge	broadcast-01	ARG1	council	0.0.0	0.0	
# ::edge	contact-01	ARG0	country	0.2.0	0.2.0.0	
# ::edge	contact-01	ARG1	it	0.2.0	0.2.0.1	
# ::edge	council	mod	standard	0.0	0.0.1	
# ::edge	country	name	name	0.2.0.0	0.2.0.0.0	
# ::edge	feel-01	ARG0	council	0	0.0	
# ::edge	feel-01	ARG1	problem	0	0.1	
# ::edge	hesitate-01	ARG1	contact-01	0.2	0.2.0	
# ::edge	hesitate-01	condition	feel-01	0.2	0	
# ::edge	name	op1	"Britain"	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	problem	mod	any	0.1	0.1.0	
# ::edge	promise-01	ARG0	he	0.2.1	0.2.1.0	
# ::edge	promise-01	ARG1	hesitate-01	0.2.1	0.2	
(f / feel-01 
      :ARG0 (c / council 
            :ARG1-of (b / broadcast-01) 
            :mod (s / standard)) 
      :ARG1 (p / problem 
            :mod (a / any)) 
      :condition-of (h / hesitate-01 
            :ARG1 (c2 / contact-01 
                  :ARG0 (c3 / country 
                        :name (n / name 
                              :op1 "Britain")) 
                  :ARG1 (i / it)) 
            :ARG1-of (p2 / promise-01 
                  :ARG0 (h2 / he))))

# ::snt the benefit claimants have been promised extra dash
# ::tok the benefit claimants have been promised extra dash
# ::alignments 6-7|0.0 5-6|0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:13.763
# ::node	0	promise-01	5-6
# ::node	0.0	extra	6-7
# ::node	0.0.0	benefit-01	1-2
# ::root	0	promise-01
# ::edge	benefit-01	ARG1	extra	0.0.0	0.0	
# ::edge	promise-01	ARG1	extra	0	0.0	
(p / promise-01 
      :ARG1 (e / extra 
            :ARG1-of (b / benefit-01)))

# ::snt the organisers promise a strong handson element dash
# ::tok the organisers promise a strong handson element dash
# ::alignments 6-7|0.0 4-5|0.0.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:13.775
# ::node	0	promise-01	2-3
# ::node	0.0	element	6-7
# ::node	0.0.0	strong	4-5
# ::root	0	promise-01
# ::edge	element	mod	strong	0.0	0.0.0	
# ::edge	promise-01	ARG1	element	0	0.0	
(p / promise-01 
      :ARG1 (e / element 
            :mod (s / strong)))

# ::snt dentists active in the campaign to reduce the amount of sugar consumed have criticised the title the alleged selectivity of the contents and the failure of the new publication to provide recently published material as promised
# ::tok dentists active in the campaign to reduce the amount of sugar consumed have criticised the title the alleged selectivity of the contents and the failure of the new publication to provide recently published material as promised
# ::alignments 35-36|0.0.0.1 33-34|0.0 32-33|0 31-32|0.0.0.2 30-31|0.0.0 28-29|0.0.0.0 27-28|0.0.0.0.1 24-25|0.0.0.0.0 22-23|0.0.0.0.0.0 21-22|0.0.0.0.0.0.3.0+0.0.0.0.0.0.3 17-18|0.0.0.0.0.0.2 15-16|0.0.0.0.0.0.0.0 13-14|0.0.0.0.0.0.0 11-12|0.0.0.0.0.0.1.0.0 10-11|0.0.0.0.0.0.1.0.0.0 8-9|0.0.0.0.0.0.1.0 6-7|0.0.0.0.0.0.1 4-5|0.0.0.0.0.0.1.1 1-2|0.0.0.0.0.0.1.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:14.396
# ::node	0	publish-01	32-33
# ::node	0.0	material	33-34
# ::node	0.0.0	provide-01	30-31
# ::node	0.0.0.0	publication	28-29
# ::node	0.0.0.0.0	fail-01	24-25
# ::node	0.0.0.0.0.0	and	22-23
# ::node	0.0.0.0.0.0.0	criticize-01	13-14
# ::node	0.0.0.0.0.0.0.0	title	15-16
# ::node	0.0.0.0.0.0.1	reduce-01	6-7
# ::node	0.0.0.0.0.0.1.0	amount	8-9
# ::node	0.0.0.0.0.0.1.0.0	consume-01	11-12
# ::node	0.0.0.0.0.0.1.0.0.0	sugar-cane	10-11
# ::node	0.0.0.0.0.0.1.1	campaign-01	4-5
# ::node	0.0.0.0.0.0.1.2	active	1-2
# ::node	0.0.0.0.0.0.2	allege-01	17-18
# ::node	0.0.0.0.0.0.3	thing	21-22
# ::node	0.0.0.0.0.0.3.0	contain-01	21-22
# ::node	0.0.0.0.1	new	27-28
# ::node	0.0.0.1	promise-01	35-36
# ::node	0.0.0.2	recent	31-32
# ::root	0	publish-01
# ::edge	and	op1	allege-01	0.0.0.0.0.0	0.0.0.0.0.0.2	
# ::edge	and	op2	thing	0.0.0.0.0.0	0.0.0.0.0.0.3	
# ::edge	and	op3	fail-01	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	campaign-01	ARG1	reduce-01	0.0.0.0.0.0.1.1	0.0.0.0.0.0.1	
# ::edge	consume-01	ARG0	amount	0.0.0.0.0.0.1.0.0	0.0.0.0.0.0.1.0	
# ::edge	consume-01	ARG1	sugar-cane	0.0.0.0.0.0.1.0.0	0.0.0.0.0.0.1.0.0.0	
# ::edge	contain-01	ARG1	thing	0.0.0.0.0.0.3.0	0.0.0.0.0.0.3	
# ::edge	criticize-01	ARG0	and	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	criticize-01	ARG1	title	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	fail-01	ARG1	publication	0.0.0.0.0	0.0.0.0	
# ::edge	provide-01	ARG0	publication	0.0.0	0.0.0.0	
# ::edge	provide-01	ARG1	material	0.0.0	0.0	
# ::edge	provide-01	ARG3	promise-01	0.0.0	0.0.0.1	
# ::edge	provide-01	time	recent	0.0.0	0.0.0.2	
# ::edge	publication	mod	new	0.0.0.0	0.0.0.0.1	
# ::edge	publish-01	ARG1	material	0	0.0	
# ::edge	reduce-01	ARG0	and	0.0.0.0.0.0.1	0.0.0.0.0.0	
# ::edge	reduce-01	ARG1	amount	0.0.0.0.0.0.1	0.0.0.0.0.0.1.0	
# ::edge	reduce-01	ARG2	active	0.0.0.0.0.0.1	0.0.0.0.0.0.1.2	
(p2 / publish-01 
      :ARG1 (m / material 
            :ARG1-of (p3 / provide-01 
                  :ARG0 (p4 / publication 
                        :ARG1-of (f / fail-01 
                              :op-of (a / and 
                                    :ARG0-of (c2 / criticize-01 
                                          :ARG1 (t2 / title)) 
                                    :ARG0-of (r2 / reduce-01 
                                          :ARG1 (a3 / amount 
                                                :ARG0-of (c3 / consume-01 
                                                      :ARG1 (s / sugar-cane))) 
                                          :ARG1-of (c4 / campaign-01) 
                                          :ARG2 (a4 / active)) 
                                    :op1 (a2 / allege-01) 
                                    :op2 (t / thing 
                                          :ARG1-of (c / contain-01)))) 
                        :mod (n / new)) 
                  :ARG3 (p / promise-01) 
                  :time (r / recent))))

# ::snt marie ill stop him  i promise you ill rip him out of your lives
# ::tok marie ill stop him i promise you ill rip him out of your lives
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:14.396
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt malcolm rifkind secretary of state for scotland has promised 20m over the next 20 years for the creation of 140 square miles of woodland in the belt between edinburgh and glasgow
# ::tok malcolm rifkind secretary of state for scotland has promised 20m over the next 20 years for the creation of 140 square miles of woodland in the belt between edinburgh and glasgow
# ::alignments 29-30|0.0.0.0.2.1 27-28|0.0.0.0.2 26-27|0.0.0.0.2.0 21-22|0.0.0.0.0.0.2+0.0.0.0.0.0 20-21|0.0.0.0.0.0.0 19-20|0.0.0.0.0.0.1 17-18|0.0.0.0.0 14-15|0.0.0.0.0.1.1+0.0.0.0.0.1 13-14|0.0.0.0.0.1.0 12-13|0.0.0.0.0.1.1.0 8-9|0 6-7|0.0.0.0.1.0+0.0.0.0.1+0.0.0.0 4-5|0.0.0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:14.514
# ::node	0	promise-01	8-9
# ::node	0.0	secretary	2-3
# ::node	0.0.0	state	4-5
# ::node	0.0.0.0	country	6-7
# ::node	0.0.0.0.0	create-01	17-18
# ::node	0.0.0.0.0.0	distance-quantity	21-22
# ::node	0.0.0.0.0.0.0	square	20-21
# ::node	0.0.0.0.0.0.1	140	19-20
# ::node	0.0.0.0.0.0.2	mile	21-22
# ::node	0.0.0.0.0.1	temporal-quantity	14-15
# ::node	0.0.0.0.0.1.0	20	13-14
# ::node	0.0.0.0.0.1.1	year	14-15
# ::node	0.0.0.0.0.1.1.0	next	12-13
# ::node	0.0.0.0.1	name	6-7
# ::node	0.0.0.0.1.0	"Scotland"	6-7
# ::node	0.0.0.0.2	between	27-28
# ::node	0.0.0.0.2.0	belt	26-27
# ::node	0.0.0.0.2.1	and	29-30
# ::root	0	promise-01
# ::edge	belt	mod	between	0.0.0.0.2.0	0.0.0.0.2	
# ::edge	between	op1	country	0.0.0.0.2	0.0.0.0	
# ::edge	between	op2	and	0.0.0.0.2	0.0.0.0.2.1	
# ::edge	country	name	name	0.0.0.0	0.0.0.0.1	
# ::edge	create-01	ARG0	country	0.0.0.0.0	0.0.0.0	
# ::edge	create-01	ARG1	distance-quantity	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	distance-quantity	mod	square	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	distance-quantity	quant	140	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	distance-quantity	unit	mile	0.0.0.0.0.0	0.0.0.0.0.0.2	
# ::edge	name	op1	"Scotland"	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	promise-01	ARG1	secretary	0	0.0	
# ::edge	secretary	mod	state	0.0	0.0.0	
# ::edge	state	location	country	0.0.0	0.0.0.0	
# ::edge	temporal-quantity	quant	20	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	temporal-quantity	topic	create-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	temporal-quantity	unit	year	0.0.0.0.0.1	0.0.0.0.0.1.1	
# ::edge	year	mod	next	0.0.0.0.0.1.1	0.0.0.0.0.1.1.0	
(p / promise-01 
      :ARG1 (s3 / secretary 
            :mod (s2 / state 
                  :location (c2 / country 
                        :ARG0-of (c / create-01 
                              :ARG1 (d / distance-quantity 
                                    :mod (s / square) 
                                    :quant 140 
                                    :unit (m / mile)) 
                              :topic-of (t / temporal-quantity 
                                    :quant 20 
                                    :unit (y / year 
                                          :mod (n / next)))) 
                        :name (n2 / name 
                              :op1 "Scotland") 
                        :op-of (b / between 
                              :mod-of (b2 / belt) 
                              :op1 (a / and))))))

# ::snt mr kunter placated him by promising the extra cash but mr usta never received it
# ::tok mr kunter placated him by promising the extra cash but mr usta never received it
# ::alignments 14-15|0.1.0 13-14|0.1 9-10|0 8-9|0.0 7-8|0.0.1 5-6|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:14.545
# ::node	0	contrast-01	9-10
# ::node	0.0	cash	8-9
# ::node	0.0.0	promise-01	5-6
# ::node	0.0.1	extra	7-8
# ::node	0.1	receive-01	13-14
# ::node	0.1.0	it	14-15
# ::root	0	contrast-01
# ::edge	cash	mod	extra	0.0	0.0.1	
# ::edge	contrast-01	ARG1	cash	0	0.0	
# ::edge	contrast-01	ARG2	receive-01	0	0.1	
# ::edge	promise-01	ARG1	cash	0.0.0	0.0	
# ::edge	receive-01	ARG1	it	0.1	0.1.0	
(c / contrast-01 
      :ARG1 (c2 / cash 
            :ARG1-of (p / promise-01) 
            :mod (e / extra)) 
      :ARG2 (r / receive-01 
            :ARG1 (i / it)))

# ::snt until late last week it promised to be a heated occasion
# ::tok until late last week it promised to be a heated occasion
# ::alignments 10-11|0.1 9-10|0.1.0 5-6|0 4-5|0.0 3-4|0.3 2-3|0.3.0 1-2|0.3.1 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:14.599
# ::node	0	promise-01	5-6
# ::node	0.0	it	4-5
# ::node	0.1	occasion	10-11
# ::node	0.1.0	heat-01	9-10
# ::node	0.2	until	0-1
# ::node	0.3	week	3-4
# ::node	0.3.0	last	2-3
# ::node	0.3.1	late	1-2
# ::root	0	promise-01
# ::edge	heat-01	ARG1	occasion	0.1.0	0.1	
# ::edge	promise-01	ARG0	it	0	0.0	
# ::edge	promise-01	ARG1	occasion	0	0.1	
# ::edge	promise-01	time	week	0	0.3	
# ::edge	until	op1	promise-01	0.2	0	
# ::edge	week	mod	last	0.3	0.3.0	
# ::edge	week	time	late	0.3	0.3.1	
(p / promise-01 
      :ARG0 (i / it) 
      :ARG1 (o / occasion 
            :ARG1-of (h / heat-01)) 
      :op-of (u / until) 
      :time (w / week 
            :mod (l / last) 
            :time (l2 / late)))

# ::snt i promise
# ::tok i promise
# ::alignments 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:14.602
# ::node	0	promise-01	1-2
# ::node	0.0	i	0-1
# ::root	0	promise-01
# ::edge	promise-01	ARG0	i	0	0.0	
(p / promise-01 
      :ARG0 (i / i))

# ::snt things you may have promised yourself for  years comforts you will certainly have earned by the time you  retire
# ::tok things you may have promised yourself for years comforts you will certainly have earned by the time you retire
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:14.603
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt   councillors promised the bta help in finding alternative premises
# ::tok councillors promised the bta help in finding alternative premises
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:14.604
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt   the speech was liberal in character promising that the new government would allow market forces and a strong political opposition
# ::tok the speech was liberal in character promising that the new government would allow market forces and a strong political opposition
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:14.604
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt   i promise you there is nothing to worry about now martha spoke with all the authority she could command
# ::tok i promise you there is nothing to worry about now martha spoke with all the authority she could command
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:14.605
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt quite carried away i went on to answer supplementary questions about traggets explaining as best i could what prep was and promising to come back soon and see them all in my school blazer
# ::tok quite carried away i went on to answer supplementary questions about traggets explaining as best i could what prep was and promising to come back soon and see them all in my school blazer
# ::alignments 32-33|0.0.2.1.0.0.1.1 29-30|0.0.2.0.0 27-28|0.0.2.1.0.0.1 26-27|0.0.2.1.0.0 25-26|0.0.2.1.0.0.0.1 24-25|0.0.2.1.0.0.0.1.0 21-22|0.0.2.1.0.0.0 20-21|0.0.2.1.0 16-17|0 15-16|0.0.0 12-13|0.0 9-10|0.0.2 8-9|0.0.2.0 7-8|0.0.2.1 3-4|0.0.2.1.0.0.1.0 2-3|0.0.1 0-1|0.0.2.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:14.865
# ::node	0	possible	16-17
# ::node	0.0	explain-01	12-13
# ::node	0.0.0	i	15-16
# ::node	0.0.1	away	2-3
# ::node	0.0.2	question-01	9-10
# ::node	0.0.2.0	supplement-01	8-9
# ::node	0.0.2.0.0	all	29-30
# ::node	0.0.2.1	answer-01	7-8
# ::node	0.0.2.1.0	and	20-21
# ::node	0.0.2.1.0.0	and	26-27
# ::node	0.0.2.1.0.0.0	promise-01	21-22
# ::node	0.0.2.1.0.0.0.0	quite	0-1
# ::node	0.0.2.1.0.0.0.1	soon	25-26
# ::node	0.0.2.1.0.0.0.1.0	back	24-25
# ::node	0.0.2.1.0.0.1	see-01	27-28
# ::node	0.0.2.1.0.0.1.0	i	3-4
# ::node	0.0.2.1.0.0.1.1	school	32-33
# ::root	0	possible
# ::edge	and	op1	answer-01	0.0.2.1.0	0.0.2.1	
# ::edge	and	op1	see-01	0.0.2.1.0.0	0.0.2.1.0.0.1	
# ::edge	and	purpose	and	0.0.2.1.0	0.0.2.1.0.0	
# ::edge	answer-01	ARG1	question-01	0.0.2.1	0.0.2	
# ::edge	back	op1	soon	0.0.2.1.0.0.0.1.0	0.0.2.1.0.0.0.1	
# ::edge	explain-01	ARG0	i	0.0	0.0.0	
# ::edge	explain-01	ARG1	away	0.0	0.0.1	
# ::edge	possible	domain	explain-01	0	0.0	
# ::edge	promise-01	ARG0	quite	0.0.2.1.0.0.0	0.0.2.1.0.0.0.0	
# ::edge	promise-01	ARG1	soon	0.0.2.1.0.0.0	0.0.2.1.0.0.0.1	
# ::edge	promise-01	ARG2	and	0.0.2.1.0.0.0	0.0.2.1.0.0	
# ::edge	question-01	ARG1	explain-01	0.0.2	0.0	
# ::edge	see-01	ARG0	i	0.0.2.1.0.0.1	0.0.2.1.0.0.1.0	
# ::edge	see-01	ARG1	school	0.0.2.1.0.0.1	0.0.2.1.0.0.1.1	
# ::edge	supplement-01	ARG0	question-01	0.0.2.0	0.0.2	
# ::edge	supplement-01	ARG1	all	0.0.2.0	0.0.2.0.0	
(p2 / possible 
      :domain (e / explain-01 
            :ARG0 (i / i) 
            :ARG1 (a5 / away) 
            :ARG1-of (q / question-01 
                  :ARG0-of (s4 / supplement-01 
                        :ARG1 (a / all)) 
                  :ARG1-of (a4 / answer-01 
                        :op-of (a3 / and 
                              :purpose (a2 / and 
                                    :ARG2-of (p / promise-01 
                                          :ARG0 (q2 / quite) 
                                          :ARG1 (s3 / soon 
                                                :op-of (b / back))) 
                                    :op1 (s2 / see-01 
                                          :ARG0 (i2 / i) 
                                          :ARG1 (s / school))))))))

# ::snt but i promised yves ellip
# ::tok but i promised yves ellip
# ::alignments 2-3|0.0 1-2|0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:14.872
# ::node	0	contrast-01	0-1
# ::node	0.0	promise-01	2-3
# ::node	0.0.0	i	1-2
# ::root	0	contrast-01
# ::edge	contrast-01	ARG2	promise-01	0	0.0	
# ::edge	promise-01	ARG0	i	0.0	0.0.0	
(c / contrast-01 
      :ARG2 (p / promise-01 
            :ARG0 (i / i)))

# ::snt the minister for the arts reported to parliament that the increased subsidy would enable the company to operate on a satisfactory basis in the future and promised that provision will also be made for subsequent years
# ::tok the minister for the arts reported to parliament that the increased subsidy would enable the company to operate on a satisfactory basis in the future and promised that provision will also be made for subsequent years
# ::alignments 35-36|0.1.1.0.2.0.0+0.1.1.0.2.0 34-35|0.1.1.0.1.0 30-31|0.1.1.0.1.1 26-27|0.1.1 25-26|0.1 24-25|0.1.0 17-18|0.1.1.0.2 15-16|0.1.1.0.0.0 13-14|0.1.1.0.0 11-12|0.1.1.0 10-11|0.1.1.0.1 7-8|0.2.1.0+0.2.1+0.2 5-6|0 4-5|0.0 1-2|0.2.0.0+0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:15.280
# ::node	0	report-01	5-6
# ::node	0.0	art	4-5
# ::node	0.1	and	25-26
# ::node	0.1.0	future	24-25
# ::node	0.1.1	promise-01	26-27
# ::node	0.1.1.0	subsidy	11-12
# ::node	0.1.1.0.0	enable-01	13-14
# ::node	0.1.1.0.0.0	company	15-16
# ::node	0.1.1.0.1	increase-01	10-11
# ::node	0.1.1.0.1.0	subsequent	34-35
# ::node	0.1.1.0.1.1	also	30-31
# ::node	0.1.1.0.2	operate-01	17-18
# ::node	0.1.1.0.2.0	temporal-quantity	35-36
# ::node	0.1.1.0.2.0.0	year	35-36
# ::node	0.2	government-organization	7-8
# ::node	0.2.0	have-org-role-91	1-2
# ::node	0.2.0.0	minister	1-2
# ::node	0.2.1	name	7-8
# ::node	0.2.1.0	"Parliament"	7-8
# ::root	0	report-01
# ::edge	and	op1	future	0.1	0.1.0	
# ::edge	and	op2	promise-01	0.1	0.1.1	
# ::edge	enable-01	ARG0	subsidy	0.1.1.0.0	0.1.1.0	
# ::edge	enable-01	ARG1	company	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	government-organization	name	name	0.2	0.2.1	
# ::edge	have-org-role-91	ARG1	government-organization	0.2.0	0.2	
# ::edge	have-org-role-91	ARG2	minister	0.2.0	0.2.0.0	
# ::edge	increase-01	ARG0	subsequent	0.1.1.0.1	0.1.1.0.1.0	
# ::edge	increase-01	ARG1	subsidy	0.1.1.0.1	0.1.1.0	
# ::edge	increase-01	mod	also	0.1.1.0.1	0.1.1.0.1.1	
# ::edge	name	op1	"Parliament"	0.2.1	0.2.1.0	
# ::edge	operate-01	ARG0	temporal-quantity	0.1.1.0.2	0.1.1.0.2.0	
# ::edge	operate-01	ARG1	subsidy	0.1.1.0.2	0.1.1.0	
# ::edge	promise-01	ARG0	subsidy	0.1.1	0.1.1.0	
# ::edge	report-01	ARG0	art	0	0.0	
# ::edge	report-01	ARG1	and	0	0.1	
# ::edge	report-01	ARG2	government-organization	0	0.2	
# ::edge	temporal-quantity	unit	year	0.1.1.0.2.0	0.1.1.0.2.0.0	
(r / report-01 
      :ARG0 (a3 / art) 
      :ARG1 (a2 / and 
            :op1 (f / future) 
            :op2 (p / promise-01 
                  :ARG0 (s2 / subsidy 
                        :ARG0-of (e / enable-01 
                              :ARG1 (c / company)) 
                        :ARG1-of (i / increase-01 
                              :ARG0 (s / subsequent) 
                              :mod (a / also)) 
                        :ARG1-of (o / operate-01 
                              :ARG0 (t / temporal-quantity 
                                    :unit (y / year)))))) 
      :ARG2 (g / government-organization 
            :ARG1-of (h / have-org-role-91 
                  :ARG2 (m / minister)) 
            :name (n / name 
                  :op1 "Parliament")))

# ::snt in announcing next aprils increases in pensions and other benefits mr newton promised proposals he hoped later this year for a more farreaching reform of disability benefits following the fouryear study the government commissioned from the office of population censuses on surveys
# ::tok in announcing next aprils increases in pensions and other benefits mr newton promised proposals he hoped later this year for a more farreaching reform of disability benefits following the fouryear study the government commissioned from the office of population censuses on surveys
# ::alignments 41-42|0.1.1.1.1 38-39|0.1.1.1.1.0 36-37|0.1.1.1.0 33-34|0.1.1.1 30-31|0.0.0.0.1.0 26-27|0.1.1 25-26|0.1.1.0 23-24|0.1 18-19|0.2.1 17-18|0.2.0 16-17|0.2 15-16|0 14-15|0.0 13-14|0.0.0.0.0+0.0.0.0 12-13|0.0.0 9-10|0.0.0.0.1 8-9|0.0.0.0.1.0.0 7-8|0.0.0.1.0.0 6-7|0.0.0.1.0.0.0 4-5|0.0.0.1.0 2-3|0.1.0 1-2|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:15.961
# ::node	0	hope-01	15-16
# ::node	0.0	he	14-15
# ::node	0.0.0	promise-01	12-13
# ::node	0.0.0.0	thing	13-14
# ::node	0.0.0.0.0	propose-01	13-14
# ::node	0.0.0.0.1	benefit-01	9-10
# ::node	0.0.0.0.1.0	study-01	30-31
# ::node	0.0.0.0.1.0.0	other	8-9
# ::node	0.0.0.1	announce-01	1-2
# ::node	0.0.0.1.0	increase-01	4-5
# ::node	0.0.0.1.0.0	and	7-8
# ::node	0.0.0.1.0.0.0	pension	6-7
# ::node	0.1	reform-01	23-24
# ::node	0.1.0	next	2-3
# ::node	0.1.1	benefit-01	26-27
# ::node	0.1.1.0	disability	25-26
# ::node	0.1.1.1	commission-01	33-34
# ::node	0.1.1.1.0	office	36-37
# ::node	0.1.1.1.1	survey-01	41-42
# ::node	0.1.1.1.1.0	population	38-39
# ::node	0.2	late	16-17
# ::node	0.2.0	this	17-18
# ::node	0.2.1	year	18-19
# ::root	0	hope-01
# ::edge	and	op1	pension	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	announce-01	ARG1	increase-01	0.0.0.1	0.0.0.1.0	
# ::edge	benefit-01	ARG1	disability	0.1.1	0.1.1.0	
# ::edge	benefit-01	ARG1	study-01	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	benefit-01	ARG2	commission-01	0.1.1	0.1.1.1	
# ::edge	benefit-01	ARG2	thing	0.0.0.0.1	0.0.0.0	
# ::edge	commission-01	ARG0	office	0.1.1.1	0.1.1.1.0	
# ::edge	commission-01	ARG1	survey-01	0.1.1.1	0.1.1.1.1	
# ::edge	hope-01	ARG0	he	0	0.0	
# ::edge	hope-01	ARG1	reform-01	0	0.1	
# ::edge	hope-01	time	late	0	0.2	
# ::edge	increase-01	ARG1	and	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	late	op1	year	0.2	0.2.1	
# ::edge	promise-01	ARG0	he	0.0.0	0.0	
# ::edge	promise-01	ARG1	thing	0.0.0	0.0.0.0	
# ::edge	promise-01	manner	announce-01	0.0.0	0.0.0.1	
# ::edge	propose-01	ARG1	thing	0.0.0.0.0	0.0.0.0	
# ::edge	reform-01	ARG0	next	0.1	0.1.0	
# ::edge	reform-01	ARG1	benefit-01	0.1	0.1.1	
# ::edge	study-01	mod	other	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	survey-01	ARG1	population	0.1.1.1.1	0.1.1.1.1.0	
# ::edge	this	mod	late	0.2.0	0.2	
(h / hope-01 
      :ARG0 (h2 / he 
            :ARG0-of (p3 / promise-01 
                  :ARG1 (t2 / thing 
                        :ARG1-of (p2 / propose-01) 
                        :ARG2-of (b2 / benefit-01 
                              :ARG1 (s2 / study-01 
                                    :mod (o2 / other)))) 
                  :manner (a2 / announce-01 
                        :ARG1 (i / increase-01 
                              :ARG1 (a / and 
                                    :op1 (p4 / pension)))))) 
      :ARG1 (r / reform-01 
            :ARG0 (n / next) 
            :ARG1 (b / benefit-01 
                  :ARG1 (d / disability) 
                  :ARG2 (c / commission-01 
                        :ARG0 (o / office) 
                        :ARG1 (s / survey-01 
                              :ARG1 (p / population))))) 
      :time (l / late 
            :mod-of (t / this) 
            :op1 (y / year)))

# ::snt he was not going to promise what could not be delivered
# ::tok he was not going to promise what could not be delivered
# ::alignments 10-11|0.0 7-8|0 5-6|0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:15.971
# ::node	0	possible	7-8
# ::node	0.0	deliver-01	10-11
# ::node	0.0.0	promise-01	5-6
# ::node	0.0.0.0	he	0-1
# ::root	0	possible
# ::edge	possible	domain	deliver-01	0	0.0	
# ::edge	promise-01	ARG0	he	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	deliver-01	0.0.0	0.0	
(p / possible 
      :domain (d / deliver-01 
            :ARG1-of (p2 / promise-01 
                  :ARG0 (h / he))))

# ::snt i promise
# ::tok i promise
# ::alignments 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:15.973
# ::node	0	promise-01	1-2
# ::node	0.0	i	0-1
# ::root	0	promise-01
# ::edge	promise-01	ARG0	i	0	0.0	
(p / promise-01 
      :ARG0 (i / i))

# ::snt  the itf is to coordinate information on international shipping and has promised to pass this on to the continental unions in an attempt to pinpoint ships and cargoes which may be targets
# ::tok the itf is to coordinate information on international shipping and has promised to pass this on to the continental unions in an attempt to pinpoint ships and cargoes which may be targets
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:15.974
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the russians had been promised a second front on 1 may 1944
# ::tok the russians had been promised a second front on 1 may 1944
# ::alignments 9-12|0.0.0.2+0.0.0.1+0.0.0.0+0.0.0 7-8|0 4-5|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:15.998
# ::node	0	front	7-8
# ::node	0.0	promise-01	4-5
# ::node	0.0.0	date-entity	9-12
# ::node	0.0.0.0	1	9-12
# ::node	0.0.0.1	5	9-12
# ::node	0.0.0.2	1944	9-12
# ::root	0	front
(f / front 
      :ARG1-of (p / promise-01 
            :time-of (d / date-entity 
                  :day 1 
                  :month 5 
                  :year 1944)))

# ::snt it was to meet cases of this kind that equity invented the great remedies of specific performance and injunction specific performance to compel a man actually to do what he has promised dash, to give you the land in return for the money to pay you the purchase money in return for the land injunction to forbid him to do what he has promised not to do or what he has no right to do dash
# ::tok it was to meet cases of this kind that equity invented the great remedies of specific performance and injunction specific performance to compel a man actually to do what he has promised dash , to give you the land in return for the money to pay you the purchase money in return for the land injunction to forbid him to do what he has promised not to do or what he has no right to do dash
# ::alignments 72-73|0.1.1.2.3.0.0 70-71|0.1.1.2.2.1.0.1 68-69|0.1.1.2.2.1 64-65|0.1.1.2.2.1.0 62-63|0.1.1.2.2.1.0.0 57-58|0.1.1.2.2 54-55|0.1.1.2.2.0 49-50|0.1.1.2.1 48-49|0.1.1.2.3.0 46-47|0.1.1.2.0 45-46|0.1.1.2 43-44|0.1.1.2.3 38-39|0.1.1.0.0.0 36-37|0.1.1.0.0.0.0.1 35-36|0.1.1.0.0.0.0 31-32|0.1.1.0.0.1 29-30|0.1.1.0.0.1.0 25-26|0.1.1.3 24-25|0.1.1.1 22-23|0.1.1 20-21|0.1 19-20|0.1.2 17-18|0 16-17|0.0 15-16|0.0.0 12-13|0.1.1.0.0.0.0.0 10-11|0.1.1.0.0 9-10|0.1.1.0 7-8|0.1.0 6-7|0.1.0.0 4-5|0.1.0.1 0-1|0.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:18.198
# ::node	0	and	17-18
# ::node	0.0	perform-01	16-17
# ::node	0.0.0	specific	15-16
# ::node	0.1	perform-01	20-21
# ::node	0.1.0	kind	7-8
# ::node	0.1.0.0	this	6-7
# ::node	0.1.0.1	case	4-5
# ::node	0.1.0.1.0	it	0-1
# ::node	0.1.1	compel-01	22-23
# ::node	0.1.1.0	equity	9-10
# ::node	0.1.1.0.0	invent-01	10-11
# ::node	0.1.1.0.0.0	land	38-39
# ::node	0.1.1.0.0.0.0	give-01	35-36
# ::node	0.1.1.0.0.0.0.0	great	12-13
# ::node	0.1.1.0.0.0.0.1	you	36-37
# ::node	0.1.1.0.0.1	promise-01	31-32
# ::node	0.1.1.0.0.1.0	he	29-30
# ::node	0.1.1.1	man	24-25
# ::node	0.1.1.2	pay-01	45-46
# ::node	0.1.1.2.0	you	46-47
# ::node	0.1.1.2.1	money	49-50
# ::node	0.1.1.2.2	forbid-01	57-58
# ::node	0.1.1.2.2.0	land	54-55
# ::node	0.1.1.2.2.1	or	68-69
# ::node	0.1.1.2.2.1.0	promise-01	64-65
# ::node	0.1.1.2.2.1.0.0	he	62-63
# ::node	0.1.1.2.2.1.0.1	he	70-71
# ::node	0.1.1.2.3	money	43-44
# ::node	0.1.1.2.3.0	purchase-01	48-49
# ::node	0.1.1.2.3.0.0	-	72-73
# ::node	0.1.1.3	actual	25-26
# ::node	0.1.2	specific	19-20
# ::root	0	and
# ::edge	and	op1	perform-01	0	0.0	
# ::edge	and	op2	perform-01	0	0.1	
# ::edge	case	op1	it	0.1.0.1	0.1.0.1.0	
# ::edge	case	topic	kind	0.1.0.1	0.1.0	
# ::edge	compel-01	ARG0	equity	0.1.1	0.1.1.0	
# ::edge	compel-01	ARG1	man	0.1.1	0.1.1.1	
# ::edge	compel-01	ARG2	pay-01	0.1.1	0.1.1.2	
# ::edge	compel-01	mod	actual	0.1.1	0.1.1.3	
# ::edge	forbid-01	ARG0	land	0.1.1.2.2	0.1.1.2.2.0	
# ::edge	forbid-01	ARG1	or	0.1.1.2.2	0.1.1.2.2.1	
# ::edge	give-01	ARG0	great	0.1.1.0.0.0.0	0.1.1.0.0.0.0.0	
# ::edge	give-01	ARG1	land	0.1.1.0.0.0.0	0.1.1.0.0.0	
# ::edge	give-01	ARG2	you	0.1.1.0.0.0.0	0.1.1.0.0.0.0.1	
# ::edge	invent-01	ARG0	equity	0.1.1.0.0	0.1.1.0	
# ::edge	invent-01	ARG1	land	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	kind	mod	this	0.1.0	0.1.0.0	
# ::edge	money	purpose	pay-01	0.1.1.2.3	0.1.1.2	
# ::edge	or	op1	promise-01	0.1.1.2.2.1	0.1.1.2.2.1.0	
# ::edge	pay-01	ARG0	you	0.1.1.2	0.1.1.2.0	
# ::edge	pay-01	ARG1	money	0.1.1.2	0.1.1.2.1	
# ::edge	pay-01	ARG3	forbid-01	0.1.1.2	0.1.1.2.2	
# ::edge	perform-01	ARG0	kind	0.1	0.1.0	
# ::edge	perform-01	ARG1	compel-01	0.1	0.1.1	
# ::edge	perform-01	mod	specific	0.0	0.0.0	
# ::edge	perform-01	mod	specific	0.1	0.1.2	
# ::edge	promise-01	ARG0	he	0.1.1.0.0.1	0.1.1.0.0.1.0	
# ::edge	promise-01	ARG0	he	0.1.1.2.2.1.0	0.1.1.2.2.1.0.0	
# ::edge	promise-01	ARG1	he	0.1.1.2.2.1.0	0.1.1.2.2.1.0.1	
# ::edge	promise-01	ARG1	invent-01	0.1.1.0.0.1	0.1.1.0.0	
# ::edge	purchase-01	ARG0	money	0.1.1.2.3.0	0.1.1.2.3	
# ::edge	purchase-01	ARG1	-	0.1.1.2.3.0	0.1.1.2.3.0.0	
(a2 / and 
      :op1 (p6 / perform-01 
            :mod (s2 / specific)) 
      :op2 (p5 / perform-01 
            :ARG0 (k / kind 
                  :mod (t / this) 
                  :topic-of (c2 / case 
                        :op1 (i2 / it))) 
            :ARG1 (c / compel-01 
                  :ARG0 (e / equity 
                        :ARG0-of (i / invent-01 
                              :ARG1 (l2 / land 
                                    :ARG1-of (g / give-01 
                                          :ARG0 (g2 / great) 
                                          :ARG2 (y2 / you))) 
                              :ARG1-of (p4 / promise-01 
                                    :ARG0 (h3 / he)))) 
                  :ARG1 (m3 / man) 
                  :ARG2 (p3 / pay-01 
                        :ARG0 (y / you) 
                        :ARG1 (m / money) 
                        :ARG3 (f / forbid-01 
                              :ARG0 (l / land) 
                              :ARG1 (o / or 
                                    :op1 (p / promise-01 
                                          :ARG0 (h2 / he) 
                                          :ARG1 (h / he)))) 
                        :purpose-of (m2 / money 
                              :ARG0-of (p2 / purchase-01 
                                    :ARG1 (- / -)))) 
                  :mod (a / actual)) 
            :mod (s / specific)))

# ::snt news corporation has promised its bankers that the companys debts will not exceed 110 per cent of its total value
# ::tok news corporation has promised its bankers that the companys debts will not exceed 110 per cent of its total value
# ::alignments 19-20|0 15-16|0.1.1+0.1 13-14|0.0 12-13|0.1.0 9-10|0.1.0.0 5-6|0.1.0.1 3-4|0.1.0.1.0 1-2|0.1.0.1.0.0 0-1|0.1.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:18.422
# ::node	0	value-01	19-20
# ::node	0.0	110	13-14
# ::node	0.1	monetary-quantity	15-16
# ::node	0.1.0	exceed-01	12-13
# ::node	0.1.0.0	debt	9-10
# ::node	0.1.0.1	banker	5-6
# ::node	0.1.0.1.0	promise-01	3-4
# ::node	0.1.0.1.0.0	corporation	1-2
# ::node	0.1.0.1.0.0.0	news	0-1
# ::node	0.1.1	cent	15-16
# ::root	0	value-01
# ::edge	corporation	mod	news	0.1.0.1.0.0	0.1.0.1.0.0.0	
# ::edge	exceed-01	ARG0	debt	0.1.0	0.1.0.0	
# ::edge	exceed-01	ARG1	banker	0.1.0	0.1.0.1	
# ::edge	exceed-01	location	monetary-quantity	0.1.0	0.1	
# ::edge	monetary-quantity	unit	cent	0.1	0.1.1	
# ::edge	promise-01	ARG0	corporation	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	promise-01	ARG1	banker	0.1.0.1.0	0.1.0.1	
# ::edge	value-01	ARG1	110	0	0.0	
# ::edge	value-01	ARG2	monetary-quantity	0	0.1	
(v / value-01 
      :ARG1 110 
      :ARG2 (m / monetary-quantity 
            :location-of (e / exceed-01 
                  :ARG0 (d / debt) 
                  :ARG1 (b / banker 
                        :ARG1-of (p / promise-01 
                              :ARG0 (c2 / corporation 
                                    :mod (n / news))))) 
            :unit (c / cent)))

# ::snt sir john said that in a bruising meeting mr macgregor had warned him that the prime minister was fizzing with fury and was promising retribution against the banks
# ::tok sir john said that in a bruising meeting mr macgregor had warned him that the prime minister was fizzing with fury and was promising retribution against the banks
# ::alignments 27-28|0.0.1.0 23-24|0.0.3 21-22|0.0 20-21|0.0.2 16-17|0.0.1.1+0.0.1 15-16|0.0.1.1.0 11-12|0.0.0 7-8|0.0.0.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:18.525
# ::node	0	say-01	2-3
# ::node	0.0	and	21-22
# ::node	0.0.0	warn-01	11-12
# ::node	0.0.0.0	meet-03	7-8
# ::node	0.0.1	have-org-role-91	16-17
# ::node	0.0.1.0	bank	27-28
# ::node	0.0.1.1	minister	16-17
# ::node	0.0.1.1.0	prime	15-16
# ::node	0.0.2	fury	20-21
# ::node	0.0.3	promise-01	23-24
# ::root	0	say-01
# ::edge	and	op1	warn-01	0.0	0.0.0	
# ::edge	and	op2	have-org-role-91	0.0	0.0.1	
# ::edge	and	op3	fury	0.0	0.0.2	
# ::edge	and	op4	promise-01	0.0	0.0.3	
# ::edge	have-org-role-91	ARG1	bank	0.0.1	0.0.1.0	
# ::edge	have-org-role-91	ARG2	minister	0.0.1	0.0.1.1	
# ::edge	minister	mod	prime	0.0.1.1	0.0.1.1.0	
# ::edge	say-01	ARG1	and	0	0.0	
# ::edge	warn-01	ARG1	meet-03	0.0.0	0.0.0.0	
(s / say-01 
      :ARG1 (a / and 
            :op1 (w / warn-01 
                  :ARG1 (m2 / meet-03)) 
            :op2 (h / have-org-role-91 
                  :ARG1 (b / bank) 
                  :ARG2 (m / minister 
                        :mod (p2 / prime))) 
            :op3 (f / fury) 
            :op4 (p / promise-01)))

# ::snt i can only make the children promise to go to bed early on christmas eve
# ::tok i can only make the children promise to go to bed early on christmas eve
# ::alignments 14-15|0.0.0.2.0 11-12|0.0.0.2.1 10-11|0.0.0.2 6-7|0.0.0 5-6|0.0.0.1 2-3|0.0 1-2|0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:18.600
# ::node	0	possible	1-2
# ::node	0.0	only	2-3
# ::node	0.0.0	promise-01	6-7
# ::node	0.0.0.0	i	0-1
# ::node	0.0.0.1	child	5-6
# ::node	0.0.0.2	bed	10-11
# ::node	0.0.0.2.0	eve	14-15
# ::node	0.0.0.2.1	early	11-12
# ::root	0	possible
# ::edge	bed	accompanier	eve	0.0.0.2	0.0.0.2.0	
# ::edge	bed	time	early	0.0.0.2	0.0.0.2.1	
# ::edge	possible	time	only	0	0.0	
# ::edge	promise-01	ARG0	i	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	child	0.0.0	0.0.0.1	
# ::edge	promise-01	ARG2	bed	0.0.0	0.0.0.2	
# ::edge	promise-01	time	only	0.0.0	0.0	
(p2 / possible 
      :time (o / only 
            :time-of (p / promise-01 
                  :ARG0 (i / i) 
                  :ARG1 (c / child) 
                  :ARG2 (b / bed 
                        :accompanier (e / eve) 
                        :time (e2 / early)))))

# ::snt when malcolm fraser was hoisted to power by sir john kerr and the cia he promised australians that politics would disappear from the front pages of australian newspapers and be found after the sports section where it belongs
# ::tok when malcolm fraser was hoisted to power by sir john kerr and the cia he promised australians that politics would disappear from the front pages of australian newspapers and be found after the sports section where it belongs
# ::alignments 37-38|0.3.1.1.0.0 36-37|0.3.1.1.0.0.0 34-35|0.3.1.1.0.1 33-34|0.3.1.1.0 31-32|0.3.1.1 30-31|0.3.1 28-29|0.3 27-28|0.3.0 24-25|0.0 23-24|0.0.0 20-21|0 18-19|0.3.1.0 15-16|0.2 14-15|0.2.0 13-14|0.1.0.0+0.1.0+0.1 11-12|0.1.1 6-7|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:18.997
# ::node	0	disappear-01	20-21
# ::node	0.0	page	24-25
# ::node	0.0.0	front	23-24
# ::node	0.1	government-organization	13-14
# ::node	0.1.0	name	13-14
# ::node	0.1.0.0	"CIA"	13-14
# ::node	0.1.1	and	11-12
# ::node	0.1.1.0	power	6-7
# ::node	0.2	promise-01	15-16
# ::node	0.2.0	he	14-15
# ::node	0.3	and	28-29
# ::node	0.3.0	newspaper	27-28
# ::node	0.3.1	find-01	30-31
# ::node	0.3.1.0	politics	18-19
# ::node	0.3.1.1	after	31-32
# ::node	0.3.1.1.0	sport	33-34
# ::node	0.3.1.1.0.0	belong-01	37-38
# ::node	0.3.1.1.0.0.0	it	36-37
# ::node	0.3.1.1.0.1	section	34-35
# ::root	0	disappear-01
# ::edge	after	op1	sport	0.3.1.1	0.3.1.1.0	
# ::edge	and	op1	disappear-01	0.3	0	
# ::edge	and	op1	power	0.1.1	0.1.1.0	
# ::edge	and	op2	government-organization	0.1.1	0.1	
# ::edge	and	op2	newspaper	0.3	0.3.0	
# ::edge	and	op3	find-01	0.3	0.3.1	
# ::edge	belong-01	ARG0	it	0.3.1.1.0.0	0.3.1.1.0.0.0	
# ::edge	belong-01	ARG1	sport	0.3.1.1.0.0	0.3.1.1.0	
# ::edge	disappear-01	ARG0	page	0	0.0	
# ::edge	disappear-01	ARG1	government-organization	0	0.1	
# ::edge	find-01	ARG0	politics	0.3.1	0.3.1.0	
# ::edge	find-01	time	after	0.3.1	0.3.1.1	
# ::edge	government-organization	name	name	0.1	0.1.0	
# ::edge	name	op1	"CIA"	0.1.0	0.1.0.0	
# ::edge	page	mod	front	0.0	0.0.0	
# ::edge	promise-01	ARG0	he	0.2	0.2.0	
# ::edge	promise-01	ARG1	disappear-01	0.2	0	
# ::edge	section	op1	sport	0.3.1.1.0.1	0.3.1.1.0	
(d / disappear-01 
      :ARG0 (p / page 
            :mod (f2 / front)) 
      :ARG1 (g / government-organization 
            :name (n2 / name 
                  :op1 "CIA") 
            :op-of (a3 / and 
                  :op1 (p4 / power))) 
      :ARG1-of (p3 / promise-01 
            :ARG0 (h / he)) 
      :op-of (a2 / and 
            :op1 (n / newspaper) 
            :op2 (f / find-01 
                  :ARG0 (p2 / politics) 
                  :time (a / after 
                        :op1 (s2 / sport 
                              :ARG1-of (b / belong-01 
                                    :ARG0 (i / it)) 
                              :op-of (s / section))))))

# ::snt you wont forget  i promise
# ::tok you wont forget i promise
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:18.998
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt he was offered parttime employment as a teacher of english in the berlitz school in bordeaux his father touchingly promised him a small allowance to supplement his salary and in midseptember he stood at the rail of a steamer filling his lungs with the rich air of france
# ::tok he was offered parttime employment as a teacher of english in the berlitz school in bordeaux his father touchingly promised him a small allowance to supplement his salary and in midseptember he stood at the rail of a steamer filling his lungs with the rich air of france
# ::alignments 47-48|0.0.0.1.0.0.0+0.0.0.1.0.0+0.0.0.1.0 45-46|0.0.0.1 44-45|0.0.0.1.1 35-36|0.0.0.0.0 32-33|0.0.0.0 31-32|0.0.0 28-29|0 27-28|0.0.2.0.0 25-26|0.0.2.0 23-24|0.0.2 22-23|0.0.2.1 19-20|0.0 17-18|0.0.1.2+0.0.1 13-14|0.0.1.0.0 9-10|0.0.1.0.1.0+0.0.1.0.1+0.0.1.0 7-8|0.0.1.1.0+0.0.1.1 4-5|0.0.1.1.1.1 2-3|0.0.1.1.1 0-1|0.0.1.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:19.792
# ::node	0	and	28-29
# ::node	0.0	promise-01	19-20
# ::node	0.0.0	he	31-32
# ::node	0.0.0.0	stand-01	32-33
# ::node	0.0.0.0.0	rail	35-36
# ::node	0.0.0.1	air	45-46
# ::node	0.0.0.1.0	country	47-48
# ::node	0.0.0.1.0.0	name	47-48
# ::node	0.0.0.1.0.0.0	"France"	47-48
# ::node	0.0.0.1.1	rich	44-45
# ::node	0.0.1	have-rel-role-91	17-18
# ::node	0.0.1.0	language	9-10
# ::node	0.0.1.0.0	school	13-14
# ::node	0.0.1.0.1	name	9-10
# ::node	0.0.1.0.1.0	"English"	9-10
# ::node	0.0.1.1	person	7-8
# ::node	0.0.1.1.0	teach-01	7-8
# ::node	0.0.1.1.1	offer-01	2-3
# ::node	0.0.1.1.1.0	he	0-1
# ::node	0.0.1.1.1.1	employment	4-5
# ::node	0.0.1.2	father	17-18
# ::node	0.0.2	allowance	23-24
# ::node	0.0.2.0	supplement-01	25-26
# ::node	0.0.2.0.0	salary	27-28
# ::node	0.0.2.1	small	22-23
# ::root	0	and
# ::edge	air	location	country	0.0.0.1	0.0.0.1.0	
# ::edge	air	mod	rich	0.0.0.1	0.0.0.1.1	
# ::edge	air	poss	he	0.0.0.1	0.0.0	
# ::edge	allowance	mod	small	0.0.2	0.0.2.1	
# ::edge	and	op1	promise-01	0	0.0	
# ::edge	country	name	name	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	have-rel-role-91	ARG0	language	0.0.1	0.0.1.0	
# ::edge	have-rel-role-91	ARG1	person	0.0.1	0.0.1.1	
# ::edge	have-rel-role-91	ARG2	father	0.0.1	0.0.1.2	
# ::edge	language	location	school	0.0.1.0	0.0.1.0.0	
# ::edge	language	name	name	0.0.1.0	0.0.1.0.1	
# ::edge	name	op1	"English"	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	name	op1	"France"	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	offer-01	ARG0	he	0.0.1.1.1	0.0.1.1.1.0	
# ::edge	offer-01	ARG1	employment	0.0.1.1.1	0.0.1.1.1.1	
# ::edge	offer-01	ARG3	person	0.0.1.1.1	0.0.1.1	
# ::edge	promise-01	ARG0	he	0.0	0.0.0	
# ::edge	promise-01	ARG1	have-rel-role-91	0.0	0.0.1	
# ::edge	promise-01	ARG2	allowance	0.0	0.0.2	
# ::edge	stand-01	ARG1	he	0.0.0.0	0.0.0	
# ::edge	stand-01	ARG2	rail	0.0.0.0	0.0.0.0.0	
# ::edge	supplement-01	ARG0	allowance	0.0.2.0	0.0.2	
# ::edge	supplement-01	ARG1	salary	0.0.2.0	0.0.2.0.0	
# ::edge	teach-01	ARG0	person	0.0.1.1.0	0.0.1.1	
(a2 / and 
      :op1 (p / promise-01 
            :ARG0 (h / he 
                  :ARG1-of (s / stand-01 
                        :ARG2 (r2 / rail)) 
                  :poss-of (a / air 
                        :location (c / country 
                              :name (n / name 
                                    :op1 "France")) 
                        :mod (r / rich))) 
            :ARG1 (h2 / have-rel-role-91 
                  :ARG0 (l / language 
                        :location (s5 / school) 
                        :name (n2 / name 
                              :op1 "English")) 
                  :ARG1 (p2 / person 
                        :ARG0-of (t / teach-01) 
                        :ARG3-of (o / offer-01 
                              :ARG0 (h3 / he) 
                              :ARG1 (e / employment))) 
                  :ARG2 (f / father)) 
            :ARG2 (a3 / allowance 
                  :ARG0-of (s3 / supplement-01 
                        :ARG1 (s2 / salary)) 
                  :mod (s4 / small))))

# ::snt they pay me 160 a month much less than i was promised
# ::tok they pay me 160 a month much less than i was promised
# ::alignments 11-12|0.0.0 9-10|0.0.0.0 7-8|0.0.0.0.0 6-7|0.0.0.0.0.0 5-6|0.0.0.0.0.1.0+0.0.0.0.0.1 3-4|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:19.994
# ::node	0	pay-01	1-2
# ::node	0.0	they	0-1
# ::node	0.0.0	promise-01	11-12
# ::node	0.0.0.0	i	9-10
# ::node	0.0.0.0.0	less	7-8
# ::node	0.0.0.0.0.0	much	6-7
# ::node	0.0.0.0.0.1	temporal-quantity	5-6
# ::node	0.0.0.0.0.1.0	month	5-6
# ::node	0.1	160	3-4
# ::root	0	pay-01
# ::edge	less	degree	much	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	less	manner	i	0.0.0.0.0	0.0.0.0	
# ::edge	less	poss	temporal-quantity	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	pay-01	ARG0	they	0	0.0	
# ::edge	pay-01	ARG1	160	0	0.1	
# ::edge	promise-01	ARG0	they	0.0.0	0.0	
# ::edge	promise-01	ARG1	i	0.0.0	0.0.0.0	
# ::edge	temporal-quantity	unit	month	0.0.0.0.0.1	0.0.0.0.0.1.0	
(p2 / pay-01 
      :ARG0 (t2 / they 
            :ARG0-of (p / promise-01 
                  :ARG1 (i / i 
                        :manner-of (l / less 
                              :degree (m / much) 
                              :poss (t / temporal-quantity 
                                    :unit (m2 / month)))))) 
      :ARG1 160)

# ::snt for us to promise the removal of nuclear power generation within 15 years would be to delude ourselves and mislead others
# ::tok for us to promise the removal of nuclear power generation within 15 years would be to delude ourselves and mislead others
# ::alignments 20-21|0.1.0.0 19-20|0.1.0 18-19|0.1 16-17|0 12-13|0.0.2+0.0 11-12|0.0.1 10-11|0.0.0 9-10|0.0.0.0.0.0 8-9|0.0.0.0.0.0.0 7-8|0.0.0.0.0.0.0.0 5-6|0.0.0.0.0 3-4|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:20.071
# ::node	0	delude-01	16-17
# ::node	0.0	temporal-quantity	12-13
# ::node	0.0.0	within	10-11
# ::node	0.0.0.0	promise-01	3-4
# ::node	0.0.0.0.0	remove-01	5-6
# ::node	0.0.0.0.0.0	generation	9-10
# ::node	0.0.0.0.0.0.0	power	8-9
# ::node	0.0.0.0.0.0.0.0	nucleus	7-8
# ::node	0.0.1	15	11-12
# ::node	0.0.2	year	12-13
# ::node	0.1	and	18-19
# ::node	0.1.0	mislead-01	19-20
# ::node	0.1.0.0	other	20-21
# ::root	0	delude-01
# ::edge	and	op1	mislead-01	0.1	0.1.0	
# ::edge	delude-01	ARG0	temporal-quantity	0	0.0	
# ::edge	delude-01	ARG1	and	0	0.1	
# ::edge	generation	mod	power	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	mislead-01	ARG1	other	0.1.0	0.1.0.0	
# ::edge	power	mod	nucleus	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	promise-01	ARG1	remove-01	0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	time	within	0.0.0.0	0.0.0	
# ::edge	remove-01	ARG1	generation	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	temporal-quantity	quant	15	0.0	0.0.1	
# ::edge	temporal-quantity	unit	year	0.0	0.0.2	
# ::edge	within	op1	temporal-quantity	0.0.0	0.0	
(d / delude-01 
      :ARG0 (t / temporal-quantity 
            :op-of (w / within 
                  :time-of (p2 / promise-01 
                        :ARG1 (r / remove-01 
                              :ARG1 (g / generation 
                                    :mod (p / power 
                                          :mod (n / nucleus)))))) 
            :quant 15 
            :unit (y / year)) 
      :ARG1 (a / and 
            :op1 (m / mislead-01 
                  :ARG1 (o / other))))

# ::snt at the kronk gym in detroit where andries was christened the rock by his sparmates steward remodelled andriess crude style led him to a second world title in february 1989 against tony willis saw him lose it to harding and then promised him one last chance
# ::tok at the kronk gym in detroit where andries was christened the rock by his sparmates steward remodelled andriess crude style led him to a second world title in february 1989 against tony willis saw him lose it to harding and then promised him one last chance
# ::alignments 45-46|0.1.1.0 44-45|0.1.1.0.0 41-42|0.1.1 40-41|0.1.1.2 39-40|0.1 36-37|0.1.0.1 35-36|0.1.0 33-34|0 28-30|0.1.0.2.1+0.1.0.2.0+0.1.0.2 26-27|0.1.1.1.2 25-26|0.1.1.1.2.0 20-21|0.1.1.1 19-20|0.1.1.1.0 18-19|0.1.0.0 11-12|0.0 3-4|0.1.1.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:20.695
# ::node	0	see-01	33-34
# ::node	0.0	rock	11-12
# ::node	0.1	and	39-40
# ::node	0.1.0	lose-02	35-36
# ::node	0.1.0.0	crude	18-19
# ::node	0.1.0.1	it	36-37
# ::node	0.1.0.2	date-entity	28-30
# ::node	0.1.0.2.0	2	28-30
# ::node	0.1.0.2.1	1989	28-30
# ::node	0.1.1	promise-01	41-42
# ::node	0.1.1.0	chance	45-46
# ::node	0.1.1.0.0	last	44-45
# ::node	0.1.1.1	lead-02	20-21
# ::node	0.1.1.1.0	style	19-20
# ::node	0.1.1.1.1	gym	3-4
# ::node	0.1.1.1.2	title	26-27
# ::node	0.1.1.1.2.0	world	25-26
# ::node	0.1.1.2	then	40-41
# ::root	0	see-01
# ::edge	and	op1	lose-02	0.1	0.1.0	
# ::edge	and	op2	promise-01	0.1	0.1.1	
# ::edge	chance	mod	last	0.1.1.0	0.1.1.0.0	
# ::edge	date-entity	month	2	0.1.0.2	0.1.0.2.0	
# ::edge	date-entity	year	1989	0.1.0.2	0.1.0.2.1	
# ::edge	lead-02	ARG0	style	0.1.1.1	0.1.1.1.0	
# ::edge	lead-02	ARG1	gym	0.1.1.1	0.1.1.1.1	
# ::edge	lead-02	destination	title	0.1.1.1	0.1.1.1.2	
# ::edge	lose-02	ARG0	crude	0.1.0	0.1.0.0	
# ::edge	lose-02	ARG1	it	0.1.0	0.1.0.1	
# ::edge	lose-02	time	date-entity	0.1.0	0.1.0.2	
# ::edge	promise-01	ARG0	chance	0.1.1	0.1.1.0	
# ::edge	promise-01	ARG1	lead-02	0.1.1	0.1.1.1	
# ::edge	promise-01	time	then	0.1.1	0.1.1.2	
# ::edge	see-01	ARG0	rock	0	0.0	
# ::edge	see-01	ARG1	and	0	0.1	
# ::edge	title	mod	world	0.1.1.1.2	0.1.1.1.2.0	
(s / see-01 
      :ARG0 (r / rock) 
      :ARG1 (a / and 
            :op1 (l2 / lose-02 
                  :ARG0 (c2 / crude) 
                  :ARG1 (i / it) 
                  :time (d / date-entity 
                        :month 2 
                        :year 1989)) 
            :op2 (p / promise-01 
                  :ARG0 (c / chance 
                        :mod (l / last)) 
                  :ARG1 (l3 / lead-02 
                        :ARG0 (s2 / style) 
                        :ARG1 (g / gym) 
                        :destination (t2 / title 
                              :mod (w / world))) 
                  :time (t / then))))

# ::snt lets face it its never as good as promised and industry consistently overpromises about how easy it is to use and what it can do he said
# ::tok lets face it its never as good as promised and industry consistently overpromises about how easy it is to use and what it can do he said
# ::alignments 26-27|0 25-26|0.0 23-24|0.2.2 22-23|0.1 20-21|0.2 19-20|0.2.0 16-17|0.2.0.0 15-16|0.2.0.1 11-12|0.0.0.1.0 10-11|0.0.0.0 9-10|0.0.0.1 8-9|0.0.0 6-7|0.2.1.0 2-3|0.2.1.1.0 1-2|0.2.1.1 0-1|0.2.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:20.961
# ::node	0	say-01	26-27
# ::node	0.0	he	25-26
# ::node	0.0.0	promise-01	8-9
# ::node	0.0.0.0	industry	10-11
# ::node	0.0.0.1	and	9-10
# ::node	0.0.0.1.0	consistent	11-12
# ::node	0.1	it	22-23
# ::node	0.2	and	20-21
# ::node	0.2.0	use-01	19-20
# ::node	0.2.0.0	it	16-17
# ::node	0.2.0.1	easy	15-16
# ::node	0.2.1	let-01	0-1
# ::node	0.2.1.0	good	6-7
# ::node	0.2.1.1	face-01	1-2
# ::node	0.2.1.1.0	it	2-3
# ::node	0.2.2	possible	23-24
# ::root	0	say-01
# ::edge	and	op1	let-01	0.2	0.2.1	
# ::edge	and	op1	promise-01	0.0.0.1	0.0.0	
# ::edge	and	op2	consistent	0.0.0.1	0.0.0.1.0	
# ::edge	and	op2	possible	0.2	0.2.2	
# ::edge	and	op3	say-01	0.2	0	
# ::edge	easy	op1	use-01	0.2.0.1	0.2.0	
# ::edge	face-01	ARG1	it	0.2.1.1	0.2.1.1.0	
# ::edge	let-01	ARG0	good	0.2.1	0.2.1.0	
# ::edge	let-01	ARG1	face-01	0.2.1	0.2.1.1	
# ::edge	promise-01	ARG0	he	0.0.0	0.0	
# ::edge	promise-01	ARG1	industry	0.0.0	0.0.0.0	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	it	0	0.1	
# ::edge	use-01	ARG0	it	0.2.0	0.2.0.0	
# ::edge	use-01	ARG1	and	0.2.0	0.2	
(s / say-01 
      :ARG0 (h / he 
            :ARG0-of (p2 / promise-01 
                  :ARG1 (i3 / industry) 
                  :op-of (a2 / and 
                        :op1 (c / consistent)))) 
      :ARG1 (i / it) 
      :op-of (a / and 
            :ARG1-of (u / use-01 
                  :ARG0 (i2 / it) 
                  :op-of (e / easy)) 
            :op1 (l / let-01 
                  :ARG0 (g / good) 
                  :ARG1 (f / face-01 
                        :ARG1 (i4 / it))) 
            :op2 (p / possible)))

# ::snt a bare majority upheld the medical reform statute against several separate challenges of its principal provisionsfo id40 by returning as promised to the deferential standard of rationality
# ::tok a bare majority upheld the medical reform statute against several separate challenges of its principal provisionsfo id40 by returning as promised to the deferential standard of rationality
# ::alignments 26-27|0 24-25|0.0 20-21|0.0.0 18-19|0.0.0.0 11-12|0.0.0.0.0.0.0.0+0.0.0.0.0.0.0 10-11|0.0.0.0.0.0.0.1 9-10|0.0.0.0.0.0.0.2 6-7|0.0.0.0.1 5-6|0.0.0.0.1.0 3-4|0.0.0.0.0.0 2-3|0.0.0.0.0 1-2|0.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:21.151
# ::node	0	rationality	26-27
# ::node	0.0	standard	24-25
# ::node	0.0.0	promise-01	20-21
# ::node	0.0.0.0	return-01	18-19
# ::node	0.0.0.0.0	majority	2-3
# ::node	0.0.0.0.0.0	uphold-01	3-4
# ::node	0.0.0.0.0.0.0	thing	11-12
# ::node	0.0.0.0.0.0.0.0	challenge-01	11-12
# ::node	0.0.0.0.0.0.0.1	separate	10-11
# ::node	0.0.0.0.0.0.0.2	several	9-10
# ::node	0.0.0.0.0.1	bare-01	1-2
# ::node	0.0.0.0.1	reform-01	6-7
# ::node	0.0.0.0.1.0	medicine	5-6
# ::root	0	rationality
(r / rationality 
      :topic-of (s / standard 
            :ARG1-of (p / promise-01 
                  :ARG1-of (r2 / return-01 
                        :ARG0 (m2 / majority 
                              :ARG0-of (u / uphold-01 
                                    :ARG1 (t / thing 
                                          :ARG2-of (c / challenge-01) 
                                          :mod (s2 / separate) 
                                          :quant (s3 / several))) 
                              :ARG1-of (b / bare-01)) 
                        :ARG1-of (r3 / reform-01 
                              :mod (m / medicine))))))

# ::snt had promised her a dress that she had become too fat to wear
# ::tok had promised her a dress that she had become too fat to wear
# ::alignments 12-13|0.1.0 10-11|0.1.1.0 9-10|0.1.1.0.0 8-9|0.1.1 6-7|0.1 4-5|0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:21.170
# ::node	0	promise-01	1-2
# ::node	0.0	dress	4-5
# ::node	0.1	she	6-7
# ::node	0.1.0	wear-01	12-13
# ::node	0.1.1	become-01	8-9
# ::node	0.1.1.0	fat	10-11
# ::node	0.1.1.0.0	too	9-10
# ::root	0	promise-01
# ::edge	become-01	ARG1	she	0.1.1	0.1	
# ::edge	become-01	ARG2	fat	0.1.1	0.1.1.0	
# ::edge	fat	degree	too	0.1.1.0	0.1.1.0.0	
# ::edge	promise-01	ARG1	dress	0	0.0	
# ::edge	promise-01	concession	she	0	0.1	
# ::edge	wear-01	ARG0	she	0.1.0	0.1	
(p / promise-01 
      :ARG1 (d / dress) 
      :concession (s / she 
            :ARG0-of (w / wear-01) 
            :ARG1-of (b / become-01 
                  :ARG2 (f / fat 
                        :degree (t / too)))))

# ::snt it is not known how trelfords letter promising to pursue the story which might discredit the saudi royal family was brought to the saudis attention
# ::tok it is not known how trelfords letter promising to pursue the story which might discredit the saudi royal family was brought to the saudis attention
# ::alignments 24-25|0.0.0.0.0.1.0 18-19|0.0 17-18|0 14-15|0.0.0 11-12|0.0.0.0 9-10|0.0.0.0.0 7-8|0.0.0.0.0.1 6-7|0.0.0.0.0.0 3-4|0.0.0.0.0.1.1 0-1|0.0.0.0.0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:21.257
# ::node	0	royal	17-18
# ::node	0.0	family	18-19
# ::node	0.0.0	discredit-01	14-15
# ::node	0.0.0.0	story	11-12
# ::node	0.0.0.0.0	pursue-01	9-10
# ::node	0.0.0.0.0.0	letter	6-7
# ::node	0.0.0.0.0.1	promise-01	7-8
# ::node	0.0.0.0.0.1.0	attention	24-25
# ::node	0.0.0.0.0.1.1	know-01	3-4
# ::node	0.0.0.0.0.1.1.0	it	0-1
# ::root	0	royal
(r / royal 
      :mod-of (f / family 
            :ARG1-of (d / discredit-01 
                  :ARG0 (s / story 
                        :ARG1-of (p / pursue-01 
                              :ARG0 (l / letter) 
                              :ARG2-of (p2 / promise-01 
                                    :ARG0 (a / attention) 
                                    :ARG1 (k / know-01 
                                          :ARG1 (i / it))))))))

# ::snt after his election by the volkskammer on monday evening he promised stepbystep economic reforms worked out by competent people
# ::tok after his election by the volkskammer on monday evening he promised stepbystep economic reforms worked out by competent people
# ::alignments 17-18|0.0.0.1.0 14-15|0.0.0.1 13-14|0.0.0 12-13|0.0.0.0 10-11|0 9-10|0.0 8-9|0.1 2-3|0.2.0 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:21.297
# ::node	0	promise-01	10-11
# ::node	0.0	he	9-10
# ::node	0.0.0	reform-01	13-14
# ::node	0.0.0.0	economy	12-13
# ::node	0.0.0.1	work-01	14-15
# ::node	0.0.0.1.0	competent-41	17-18
# ::node	0.1	evening	8-9
# ::node	0.2	after	0-1
# ::node	0.2.0	elect-01	2-3
# ::root	0	promise-01
# ::edge	after	op1	elect-01	0.2	0.2.0	
# ::edge	competent-41	ARG1	work-01	0.0.0.1.0	0.0.0.1	
# ::edge	promise-01	ARG0	he	0	0.0	
# ::edge	promise-01	ARG1	evening	0	0.1	
# ::edge	promise-01	time	after	0	0.2	
# ::edge	reform-01	ARG0	he	0.0.0	0.0	
# ::edge	reform-01	ARG1	economy	0.0.0	0.0.0.0	
# ::edge	work-01	ARG1	reform-01	0.0.0.1	0.0.0	
(p / promise-01 
      :ARG0 (h / he 
            :ARG0-of (r / reform-01 
                  :ARG1 (e / economy) 
                  :ARG1-of (w / work-01 
                        :ARG1-of (c / competent-41)))) 
      :ARG1 (e2 / evening) 
      :time (a / after 
            :op1 (e3 / elect-01)))

# ::snt lindsay john wojna  war an installation dance from the west indianborn visual artistdancer and the bowl an improvised comictragic duet which he promises will be minimal gentle humorous elegant and profoundly touching
# ::tok lindsay john wojna war an installation dance from the west indianborn visual artistdancer and the bowl an improvised comictragic duet which he promises will be minimal gentle humorous elegant and profoundly touching
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:21.298
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt although the secretary had promised to build a new house he had died beforehand leaving the problem unsolved
# ::tok although the secretary had promised to build a new house he had died beforehand leaving the problem unsolved
# ::alignments 17-18|0 16-17|0.0 14-15|0.1 13-14|0.1.1 12-13|0.1.0 10-11|0.1.0.0 9-10|0.1.0.1 8-9|0.1.0.1.1 6-7|0.1.0.1.0 4-5|0.1.0.1.0.1 2-3|0.1.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:21.524
# ::node	0	solve-01	17-18
# ::node	0.0	problem	16-17
# ::node	0.1	leave-01	14-15
# ::node	0.1.0	die-01	12-13
# ::node	0.1.0.0	he	10-11
# ::node	0.1.0.1	house	9-10
# ::node	0.1.0.1.0	build-01	6-7
# ::node	0.1.0.1.0.0	secretary	2-3
# ::node	0.1.0.1.0.1	promise-01	4-5
# ::node	0.1.0.1.1	new	8-9
# ::node	0.1.1	beforehand	13-14
# ::root	0	solve-01
# ::edge	build-01	ARG0	secretary	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	build-01	ARG1	house	0.1.0.1.0	0.1.0.1	
# ::edge	die-01	ARG0	he	0.1.0	0.1.0.0	
# ::edge	die-01	ARG1	house	0.1.0	0.1.0.1	
# ::edge	die-01	ARG2	leave-01	0.1.0	0.1	
# ::edge	house	mod	new	0.1.0.1	0.1.0.1.1	
# ::edge	leave-01	ARG1	solve-01	0.1	0	
# ::edge	leave-01	degree	beforehand	0.1	0.1.1	
# ::edge	promise-01	ARG2	build-01	0.1.0.1.0.1	0.1.0.1.0	
# ::edge	solve-01	ARG1	problem	0	0.0	
(s / solve-01 
      :ARG1 (p / problem) 
      :ARG1-of (l / leave-01 
            :ARG2-of (d / die-01 
                  :ARG0 (h / he) 
                  :ARG1 (h2 / house 
                        :ARG1-of (b2 / build-01 
                              :ARG0 (s2 / secretary) 
                              :ARG2-of (p2 / promise-01)) 
                        :mod (n / new))) 
            :degree (b / beforehand)))

# ::snt the countrys new prime minister hans modrow has appealed to his countrymen to stop squandering national wealth while the finance minister uta nickel has promised to step up customs controls at border crossing points to curb speculation with money and goods
# ::tok the countrys new prime minister hans modrow has appealed to his countrymen to stop squandering national wealth while the finance minister uta nickel has promised to step up customs controls at border crossing points to curb speculation with money and goods
# ::alignments 40-41|0.0.2 39-40|0.0 38-39|0.0.1 36-37|0 35-36|0.1 33-34|0.1.0.1 32-33|0.1.0 31-32|0.1.0.0 29-30|0.1.0.0.0 28-29|0.1.0.0.0.0 24-25|0.0.0 20-21|0.0.0.0+0.0.0.0.0 19-20|0.0.0.0.0.0 16-17|0.0.0.1.5 15-16|0.0.0.1.5.0 13-14|0.0.0.1.0 11-12|0.0.0.1.2.0 8-9|0.0.0.1.2 5-7|0.0.0.1.4.0+0.0.0.1.4.1+0.0.0.1.4+0.0.0.1 4-5|0.0.0.1.1.0+0.0.0.1.1 3-4|0.0.0.1.1.0.0 2-3|0.0.0.1.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:22.931
# ::node	0	speculate-01	36-37
# ::node	0.0	and	39-40
# ::node	0.0.0	promise-01	24-25
# ::node	0.0.0.0	minister	20-21
# ::node	0.0.0.0.0	have-org-role-91	20-21
# ::node	0.0.0.0.0.0	finance-01	19-20
# ::node	0.0.0.1	person	5-7
# ::node	0.0.0.1.0	stop-01	13-14
# ::node	0.0.0.1.1	have-org-role-91	4-5
# ::node	0.0.0.1.1.0	minister	4-5
# ::node	0.0.0.1.1.0.0	prime	3-4
# ::node	0.0.0.1.2	appeal-02	8-9
# ::node	0.0.0.1.2.0	country	11-12
# ::node	0.0.0.1.3	new	2-3
# ::node	0.0.0.1.4	name	5-7
# ::node	0.0.0.1.4.0	"modrow"	5-7
# ::node	0.0.0.1.4.1	"hans"	5-7
# ::node	0.0.0.1.5	wealth	16-17
# ::node	0.0.0.1.5.0	nation	15-16
# ::node	0.0.1	money	38-39
# ::node	0.0.2	good	40-41
# ::node	0.1	curb-01	35-36
# ::node	0.1.0	cross-02	32-33
# ::node	0.1.0.0	border-01	31-32
# ::node	0.1.0.0.0	control-01	29-30
# ::node	0.1.0.0.0.0	customs	28-29
# ::node	0.1.0.1	point	33-34
# ::root	0	speculate-01
# ::edge	and	op1	promise-01	0.0	0.0.0	
# ::edge	and	op2	money	0.0	0.0.1	
# ::edge	and	op3	good	0.0	0.0.2	
# ::edge	appeal-02	ARG0	person	0.0.0.1.2	0.0.0.1	
# ::edge	appeal-02	ARG1	country	0.0.0.1.2	0.0.0.1.2.0	
# ::edge	control-01	ARG0	customs	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	control-01	ARG1	border-01	0.1.0.0.0	0.1.0.0	
# ::edge	cross-02	ARG0	border-01	0.1.0	0.1.0.0	
# ::edge	cross-02	ARG1	point	0.1.0	0.1.0.1	
# ::edge	cross-02	ARG2	curb-01	0.1.0	0.1	
# ::edge	curb-01	ARG1	speculate-01	0.1	0	
# ::edge	have-org-role-91	ARG0	person	0.0.0.1.1	0.0.0.1	
# ::edge	have-org-role-91	ARG1	finance-01	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	have-org-role-91	ARG2	minister	0.0.0.0.0	0.0.0.0	
# ::edge	have-org-role-91	ARG2	minister	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	minister	mod	prime	0.0.0.1.1.0	0.0.0.1.1.0.0	
# ::edge	name	op1	"modrow"	0.0.0.1.4	0.0.0.1.4.0	
# ::edge	name	op2	"hans"	0.0.0.1.4	0.0.0.1.4.1	
# ::edge	person	mod	new	0.0.0.1	0.0.0.1.3	
# ::edge	person	name	name	0.0.0.1	0.0.0.1.4	
# ::edge	promise-01	ARG0	minister	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	person	0.0.0	0.0.0.1	
# ::edge	speculate-01	ARG1	and	0	0.0	
# ::edge	stop-01	ARG0	person	0.0.0.1.0	0.0.0.1	
# ::edge	wealth	mod	nation	0.0.0.1.5	0.0.0.1.5.0	
# ::edge	wealth	poss	person	0.0.0.1.5	0.0.0.1	
(s / speculate-01 
      :ARG1 (a / and 
            :op1 (p2 / promise-01 
                  :ARG0 (m2 / minister 
                        :ARG2-of (h / have-org-role-91 
                              :ARG1 (f / finance-01))) 
                  :ARG1 (p3 / person 
                        :ARG0-of (s2 / stop-01) 
                        :ARG0-of (h2 / have-org-role-91 
                              :ARG2 (m3 / minister 
                                    :mod (p4 / prime))) 
                        :ARG0-of (a2 / appeal-02 
                              :ARG1 (c5 / country)) 
                        :mod (n3 / new) 
                        :name (n2 / name 
                              :op1 "modrow" 
                              :op2 "hans") 
                        :poss-of (w / wealth 
                              :mod (n / nation)))) 
            :op2 (m / money) 
            :op3 (g / good)) 
      :ARG1-of (c / curb-01 
            :ARG2-of (c2 / cross-02 
                  :ARG0 (b / border-01 
                        :ARG1-of (c3 / control-01 
                              :ARG0 (c4 / customs))) 
                  :ARG1 (p / point))))

# ::snt philby who had promised to keep an eye on him
# ::tok philby who had promised to keep an eye on him
# ::alignments 7-8|0.0 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:22.937
# ::node	0	promise-01	3-4
# ::node	0.0	eye	7-8
# ::root	0	promise-01
# ::edge	promise-01	ARG1	eye	0	0.0	
(p / promise-01 
      :ARG1 (e / eye))

# ::snt another advertisement promised executives travelling intercity that they could eat drink and think in time that is completely your own and that your batteries will be fully recharged
# ::tok another advertisement promised executives travelling intercity that they could eat drink and think in time that is completely your own and that your batteries will be fully recharged
# ::alignments 26-27|0.0.1.0.0.1.0.1.0 23-24|0 20-21|0.0.1.0.0.2 17-18|0.0.1.0.0.1.0.0.0 14-15|0.0.1.0.0.3 12-13|0.0.1.0.0 11-12|0.0.1.0.0.1 10-11|0.0 9-10|0.0.1 8-9|0.0.1.0.0.0 7-8|0.0.1.0 4-5|0.0.1.0.0.1.0 3-4|0.0.1.0.0.1.0.0.1+0.0.1.0.0.1.0.0 2-3|0.0.1.0.0.1.0.1 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:23.139
# ::node	0	battery	23-24
# ::node	0.0	drink-01	10-11
# ::node	0.0.0	another	0-1
# ::node	0.0.1	eat-01	9-10
# ::node	0.0.1.0	they	7-8
# ::node	0.0.1.0.0	think-01	12-13
# ::node	0.0.1.0.0.0	possible	8-9
# ::node	0.0.1.0.0.1	and	11-12
# ::node	0.0.1.0.0.1.0	travel-01	4-5
# ::node	0.0.1.0.0.1.0.0	have-org-role-91	3-4
# ::node	0.0.1.0.0.1.0.0.0	complete	17-18
# ::node	0.0.1.0.0.1.0.0.1	executive	3-4
# ::node	0.0.1.0.0.1.0.1	promise-01	2-3
# ::node	0.0.1.0.0.1.0.1.0	full	26-27
# ::node	0.0.1.0.0.2	and	20-21
# ::node	0.0.1.0.0.3	time	14-15
# ::root	0	battery
(b / battery 
      :ARG0-of (d / drink-01 
            :ARG1 (a3 / another) 
            :ARG1-of (e / eat-01 
                  :ARG0 (t3 / they 
                        :ARG0-of (t2 / think-01 
                              :ARG1 (p / possible) 
                              :op-of (a2 / and 
                                    :ARG1-of (t4 / travel-01 
                                          :ARG0 (h / have-org-role-91 
                                                :ARG1 (c / complete) 
                                                :ARG2 (e2 / executive)) 
                                          :ARG1-of (p2 / promise-01 
                                                :ARG0 (f / full)))) 
                              :op-of (a / and) 
                              :time (t / time))))))

# ::snt next years elections promise a new phase in the struggle for nicaragua
# ::tok next years elections promise a new phase in the struggle for nicaragua
# ::alignments 9-10|0.1.1 6-7|0.1 5-6|0.1.0 3-4|0 2-3|0.0 1-2|0.0.0.0+0.0.0 0-1|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:23.204
# ::node	0	promise-01	3-4
# ::node	0.0	elect-01	2-3
# ::node	0.0.0	temporal-quantity	1-2
# ::node	0.0.0.0	year	1-2
# ::node	0.0.0.0.0	next	0-1
# ::node	0.1	phase	6-7
# ::node	0.1.0	new	5-6
# ::node	0.1.1	struggle-01	9-10
# ::root	0	promise-01
# ::edge	elect-01	mod	temporal-quantity	0.0	0.0.0	
# ::edge	phase	mod	new	0.1	0.1.0	
# ::edge	promise-01	ARG1	elect-01	0	0.0	
# ::edge	promise-01	ARG2	phase	0	0.1	
# ::edge	struggle-01	part	phase	0.1.1	0.1	
# ::edge	temporal-quantity	unit	year	0.0.0	0.0.0.0	
# ::edge	year	mod	next	0.0.0.0	0.0.0.0.0	
(p2 / promise-01 
      :ARG1 (e / elect-01 
            :mod (t / temporal-quantity 
                  :unit (y / year 
                        :mod (n2 / next)))) 
      :ARG2 (p / phase 
            :mod (n / new) 
            :part-of (s / struggle-01)))

# ::snt aneurin bevan was only able to defeat the opposition of doctors to the national health service in 1944 by buckling together a compromise with lord moran president of the royal college of physicians stuffing their mouths with silver and promising to respect their independent practice
# ::tok aneurin bevan was only able to defeat the opposition of doctors to the national health service in 1944 by buckling together a compromise with lord moran president of the royal college of physicians stuffing their mouths with silver and promising to respect their independent practice
# ::alignments 44-45|0.0.0.3.1.0 43-44|0.0.0.3.1.0.0.0+0.0.0.3.1.0.0 41-42|0.0.0.3.1 39-40|0.0.0.3 38-39|0.0.0 37-38|0.0.0.2 35-36|0.0 32-33|0 30-31|0.0.0.1.1 29-30|0.0.0.1.1.0 26-27|0.0.0.3.0.1+0.0.0.3.0 24-25|0.0.0.3.0.1.0 22-23|0.0.0.1 20-21|0.0.0.1.0 17-18|0.0.0.3.1.0.0.1.0+0.0.0.3.1.0.0.1 14-15|0.0.0.3.0.0.0 13-14|0.0.0.3.0.0 10-11|0.0.0.0.0.0 8-9|0.0.0.0.0 6-7|0.0.0.0 4-5|0.0.0.0.1 3-4|0.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:24.021
# ::node	0	physician	32-33
# ::node	0.0	mouth	35-36
# ::node	0.0.0	and	38-39
# ::node	0.0.0.0	defeat-01	6-7
# ::node	0.0.0.0.0	oppose-01	8-9
# ::node	0.0.0.0.0.0	doctor	10-11
# ::node	0.0.0.0.1	possible	4-5
# ::node	0.0.0.0.1.0	only	3-4
# ::node	0.0.0.1	compromise-01	22-23
# ::node	0.0.0.1.0	together	20-21
# ::node	0.0.0.1.1	college	30-31
# ::node	0.0.0.1.1.0	royal	29-30
# ::node	0.0.0.2	silver	37-38
# ::node	0.0.0.3	promise-01	39-40
# ::node	0.0.0.3.0	have-org-role-91	26-27
# ::node	0.0.0.3.0.0	nation	13-14
# ::node	0.0.0.3.0.0.0	health	14-15
# ::node	0.0.0.3.0.1	president	26-27
# ::node	0.0.0.3.0.1.0	lord	24-25
# ::node	0.0.0.3.1	respect-01	41-42
# ::node	0.0.0.3.1.0	practice-01	44-45
# ::node	0.0.0.3.1.0.0	depend-01	43-44
# ::node	0.0.0.3.1.0.0.0	-	43-44
# ::node	0.0.0.3.1.0.0.1	date-entity	17-18
# ::node	0.0.0.3.1.0.0.1.0	1944	17-18
# ::root	0	physician
(p3 / physician 
      :poss-of (m / mouth 
            :location (a / and 
                  :manner-of (d4 / defeat-01 
                        :ARG1 (o / oppose-01 
                              :ARG1 (d3 / doctor)) 
                        :domain-of (p5 / possible 
                              :mod (o2 / only))) 
                  :op1 (c2 / compromise-01 
                        :ARG1 (t / together) 
                        :location (c / college 
                              :mod (r2 / royal))) 
                  :op2 (s / silver) 
                  :op3 (p2 / promise-01 
                        :ARG0 (h / have-org-role-91 
                              :ARG1 (n / nation 
                                    :mod-of (h2 / health)) 
                              :ARG2 (p4 / president 
                                    :mod (l / lord))) 
                        :ARG1 (r / respect-01 
                              :ARG1 (p / practice-01 
                                    :ARG0-of (d / depend-01 
                                          :polarity - 
                                          :time (d2 / date-entity 
                                                :year 1944))))))))

# ::snt please ellip  i promise ill be good
# ::tok please ellip i promise ill be good
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:24.021
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt both candidates have promised to make life better for brazils poor but with the government virtually bankrupt it will be impossible to keep election pledges according to economists
# ::tok both candidates have promised to make life better for brazils poor but with the government virtually bankrupt it will be impossible to keep election pledges according to economists
# ::alignments 27-28|0.1.1.0.0.0 24-25|0.1 23-24|0.1.1 17-18|0.1.1.0 16-17|0.1.1.0.0 15-16|0.1.1.0.0.1 11-12|0 10-11|0.0 6-7|0.1.2.1 3-4|0.1.2 1-2|0.1.2.0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:24.210
# ::node	0	contrast-01	11-12
# ::node	0.0	poor	10-11
# ::node	0.1	pledge-01	24-25
# ::node	0.1.0	both	0-1
# ::node	0.1.1	elect-01	23-24
# ::node	0.1.1.0	it	17-18
# ::node	0.1.1.0.0	bankrupt-01	16-17
# ::node	0.1.1.0.0.0	economy	27-28
# ::node	0.1.1.0.0.1	virtual	15-16
# ::node	0.1.2	promise-01	3-4
# ::node	0.1.2.0	candidate	1-2
# ::node	0.1.2.1	life	6-7
# ::root	0	contrast-01
# ::edge	bankrupt-01	ARG0	economy	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	bankrupt-01	ARG1	it	0.1.1.0.0	0.1.1.0	
# ::edge	bankrupt-01	degree	virtual	0.1.1.0.0	0.1.1.0.0.1	
# ::edge	contrast-01	ARG1	poor	0	0.0	
# ::edge	contrast-01	ARG2	pledge-01	0	0.1	
# ::edge	elect-01	ARG0	it	0.1.1	0.1.1.0	
# ::edge	pledge-01	ARG0	both	0.1	0.1.0	
# ::edge	pledge-01	ARG1	elect-01	0.1	0.1.1	
# ::edge	pledge-01	ARG2	promise-01	0.1	0.1.2	
# ::edge	promise-01	ARG0	candidate	0.1.2	0.1.2.0	
# ::edge	promise-01	ARG1	life	0.1.2	0.1.2.1	
(c / contrast-01 
      :ARG1 (p2 / poor) 
      :ARG2 (p / pledge-01 
            :ARG0 (b2 / both) 
            :ARG1 (e2 / elect-01 
                  :ARG0 (i / it 
                        :ARG1-of (b / bankrupt-01 
                              :ARG0 (e / economy) 
                              :degree (v / virtual)))) 
            :ARG2 (p3 / promise-01 
                  :ARG0 (c2 / candidate) 
                  :ARG1 (l / life))))

# ::snt the government has been trying to put a brave face on it and mr collor claims he never promised zero inflation
# ::tok the government has been trying to put a brave face on it and mr collor claims he never promised zero inflation
# ::alignments 20-21|0.1 19-20|0.1.0 18-19|0 16-17|0.0 15-16|0.2 12-13|0.2.0 11-12|0.2.0.0.0.1 9-10|0.2.0.0.0 8-9|0.2.0.0.0.0 4-5|0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:24.313
# ::node	0	promise-01	18-19
# ::node	0.0	he	16-17
# ::node	0.1	inflation	20-21
# ::node	0.1.0	zero	19-20
# ::node	0.2	claim-01	15-16
# ::node	0.2.0	and	12-13
# ::node	0.2.0.0	try-01	4-5
# ::node	0.2.0.0.0	face-01	9-10
# ::node	0.2.0.0.0.0	brave	8-9
# ::node	0.2.0.0.0.1	it	11-12
# ::root	0	promise-01
# ::edge	and	op1	try-01	0.2.0	0.2.0.0	
# ::edge	and	op2	claim-01	0.2.0	0.2	
# ::edge	claim-01	ARG1	promise-01	0.2	0	
# ::edge	face-01	mod	brave	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	face-01	prep-in	it	0.2.0.0.0	0.2.0.0.0.1	
# ::edge	inflation	quant	zero	0.1	0.1.0	
# ::edge	promise-01	ARG0	he	0	0.0	
# ::edge	promise-01	ARG1	inflation	0	0.1	
# ::edge	try-01	ARG1	face-01	0.2.0.0	0.2.0.0.0	
(p / promise-01 
      :ARG0 (h / he) 
      :ARG1 (i / inflation 
            :quant (z / zero)) 
      :ARG1-of (c / claim-01 
            :op-of (a / and 
                  :op1 (t / try-01 
                        :ARG1 (f / face-01 
                              :mod (b / brave) 
                              :prep-in (i2 / it))))))

# ::snt his hope was to push that moment off as long as possible to maintain a suffering silence which the face promised was deep and awful
# ::tok his hope was to push that moment off as long as possible to maintain a suffering silence which the face promised was deep and awful
# ::alignments 24-25|0.0.0.1.1.2 23-24|0.0.0.1.1 22-23|0.0.0.1.1.1 20-21|0.0.0.1 19-20|0.0.0.1.0 16-17|0.0.0 15-16|0.0.0.0 13-14|0.0 11-12|0 7-8|0.0.0.1.1.0.0.1 6-7|0.0.0.1.1.0.0.0 4-5|0.0.0.1.1.0.0 1-2|0.0.0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:24.439
# ::node	0	possible	11-12
# ::node	0.0	maintain-01	13-14
# ::node	0.0.0	silence-01	16-17
# ::node	0.0.0.0	suffer-01	15-16
# ::node	0.0.0.1	promise-01	20-21
# ::node	0.0.0.1.0	face-01	19-20
# ::node	0.0.0.1.1	and	23-24
# ::node	0.0.0.1.1.0	hope-01	1-2
# ::node	0.0.0.1.1.0.0	push-02	4-5
# ::node	0.0.0.1.1.0.0.0	moment	6-7
# ::node	0.0.0.1.1.0.0.1	off	7-8
# ::node	0.0.0.1.1.1	deep	22-23
# ::node	0.0.0.1.1.2	awful	24-25
# ::root	0	possible
# ::edge	and	op1	promise-01	0.0.0.1.1	0.0.0.1	
# ::edge	and	op2	deep	0.0.0.1.1	0.0.0.1.1.1	
# ::edge	and	op3	awful	0.0.0.1.1	0.0.0.1.1.2	
# ::edge	hope-01	ARG1	and	0.0.0.1.1.0	0.0.0.1.1	
# ::edge	maintain-01	ARG1	silence-01	0.0	0.0.0	
# ::edge	possible	domain	maintain-01	0	0.0	
# ::edge	promise-01	ARG0	face-01	0.0.0.1	0.0.0.1.0	
# ::edge	promise-01	ARG1	silence-01	0.0.0.1	0.0.0	
# ::edge	push-02	ARG0	hope-01	0.0.0.1.1.0.0	0.0.0.1.1.0	
# ::edge	push-02	ARG1	moment	0.0.0.1.1.0.0	0.0.0.1.1.0.0.0	
# ::edge	push-02	ARG3	off	0.0.0.1.1.0.0	0.0.0.1.1.0.0.1	
# ::edge	suffer-01	ARG0	silence-01	0.0.0.0	0.0.0	
(p2 / possible 
      :domain (m / maintain-01 
            :ARG1 (s / silence-01 
                  :ARG0-of (s2 / suffer-01) 
                  :ARG1-of (p / promise-01 
                        :ARG0 (f / face-01) 
                        :op-of (a2 / and 
                              :ARG1-of (h / hope-01 
                                    :ARG0-of (p3 / push-02 
                                          :ARG1 (m2 / moment) 
                                          :ARG3 (o / off))) 
                              :op1 (d / deep) 
                              :op2 (a / awful))))))

# ::snt oh well and a little jog of the memories to people who are out there collecting their donations in or people who have promised money dash
# ::tok oh well and a little jog of the memories to people who are out there collecting their donations in or people who have promised money dash
# ::alignments 24-25|0.0.1 23-24|0.0 19-20|0.0.0 17-18|0.0.0.0 15-16|0.0.0.0.1 8-9|0.0.0.1 4-5|0.0.0.0.1.0 2-3|0 1-2|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:24.510
# ::node	0	and	2-3
# ::node	0.0	promise-01	23-24
# ::node	0.0.0	or	19-20
# ::node	0.0.0.0	donate-01	17-18
# ::node	0.0.0.0.0	well	1-2
# ::node	0.0.0.0.1	collect-01	15-16
# ::node	0.0.0.0.1.0	little	4-5
# ::node	0.0.0.1	memory	8-9
# ::node	0.0.1	money	24-25
# ::root	0	and
(a / and 
      :ARG2-of (p / promise-01 
            :ARG0 (o / or 
                  :ARG1-of (d / donate-01 
                        :ARG0 (w / well) 
                        :ARG1-of (c / collect-01 
                              :ARG0 (l / little))) 
                  :purpose (m2 / memory)) 
            :ARG1 (m / money)))

# ::snt each of the volunteers all aged between 20 and 50 were promised a bonus of 5 if they were among the first 30 out
# ::tok each of the volunteers all aged between 20 and 50 were promised a bonus of 5 if they were among the first 30 out
# ::alignments 22-23|0.4 19-20|0.1.1.0.0 17-18|0.1.1.0 15-16|0.0 13-14|0.1.1.1 11-12|0.1.1 9-10|0.2.2 8-9|0.2.1 7-8|0.2.0 6-7|0.2 5-6|0 4-5|0.3 3-4|0.1.0+0.1 0-1|0.1.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:24.756
# ::node	0	age-01	5-6
# ::node	0.0	5	15-16
# ::node	0.1	person	3-4
# ::node	0.1.0	volunteer-01	3-4
# ::node	0.1.1	promise-01	11-12
# ::node	0.1.1.0	they	17-18
# ::node	0.1.1.0.0	among	19-20
# ::node	0.1.1.1	bonus	13-14
# ::node	0.1.2	each	0-1
# ::node	0.2	between	6-7
# ::node	0.2.0	20	7-8
# ::node	0.2.1	and	8-9
# ::node	0.2.2	50	9-10
# ::node	0.3	all	4-5
# ::node	0.4	30	22-23
# ::root	0	age-01
# ::edge	30	op1	age-01	0.4	0	
# ::edge	age-01	ARG0	5	0	0.0	
# ::edge	age-01	ARG1	person	0	0.1	
# ::edge	age-01	ARG2	between	0	0.2	
# ::edge	age-01	mod	all	0	0.3	
# ::edge	among	domain	they	0.1.1.0.0	0.1.1.0	
# ::edge	between	op1	20	0.2	0.2.0	
# ::edge	between	op2	and	0.2	0.2.1	
# ::edge	between	op3	50	0.2	0.2.2	
# ::edge	person	mod	each	0.1	0.1.2	
# ::edge	promise-01	ARG0	they	0.1.1	0.1.1.0	
# ::edge	promise-01	ARG1	person	0.1.1	0.1	
# ::edge	promise-01	ARG2	bonus	0.1.1	0.1.1.1	
# ::edge	volunteer-01	ARG0	person	0.1.0	0.1	
(a3 / age-01 
      :ARG0 5 
      :ARG1 (p2 / person 
            :ARG0-of (v / volunteer-01) 
            :ARG1-of (p / promise-01 
                  :ARG0 (t / they 
                        :domain-of (a / among)) 
                  :ARG2 (b / bonus)) 
            :mod (e / each)) 
      :ARG2 (b2 / between 
            :op1 20 
            :op2 (a2 / and) 
            :op3 50) 
      :mod (a4 / all) 
      :op-of 30)

# ::snt as promised and agreed she had had her tubes tied years before after sams arrival
# ::tok as promised and agreed she had had her tubes tied years before after sams arrival
# ::alignments 14-15|0.1.0.0.0.0.1.0 12-13|0.1.0.0.0.0.1 11-12|0.1.0.0.0.0 10-11|0.1.0.0.0.0.0.0+0.1.0.0.0.0.0 9-10|0.1.0.0.0 8-9|0.1.0.0 4-5|0.1.0 3-4|0.1 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:24.800
# ::node	0	and	2-3
# ::node	0.0	promise-01	1-2
# ::node	0.1	agree-01	3-4
# ::node	0.1.0	she	4-5
# ::node	0.1.0.0	tube	8-9
# ::node	0.1.0.0.0	tie-01	9-10
# ::node	0.1.0.0.0.0	before	11-12
# ::node	0.1.0.0.0.0.0	temporal-quantity	10-11
# ::node	0.1.0.0.0.0.0.0	year	10-11
# ::node	0.1.0.0.0.0.1	after	12-13
# ::node	0.1.0.0.0.0.1.0	arrive-01	14-15
# ::root	0	and
# ::edge	after	op1	arrive-01	0.1.0.0.0.0.1	0.1.0.0.0.0.1.0	
# ::edge	agree-01	ARG0	she	0.1	0.1.0	
# ::edge	and	op1	promise-01	0	0.0	
# ::edge	and	op2	agree-01	0	0.1	
# ::edge	before	op1	temporal-quantity	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	before	op2	after	0.1.0.0.0.0	0.1.0.0.0.0.1	
# ::edge	temporal-quantity	unit	year	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	tie-01	ARG1	tube	0.1.0.0.0	0.1.0.0	
# ::edge	tie-01	time	before	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	tube	poss	she	0.1.0.0	0.1.0	
(a4 / and 
      :op1 (p / promise-01) 
      :op2 (a3 / agree-01 
            :ARG0 (s / she 
                  :poss-of (t3 / tube 
                        :ARG1-of (t2 / tie-01 
                              :time (b / before 
                                    :op1 (t / temporal-quantity 
                                          :unit (y / year)) 
                                    :op2 (a2 / after 
                                          :op1 (a / arrive-01))))))))

# ::snt i promised marie i wouldnt go out with fullblast again
# ::tok i promised marie i wouldnt go out with fullblast again
# ::alignments 9-10|0.1.0 3-4|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:24.821
# ::node	0	promise-01	1-2
# ::node	0.0	i	0-1
# ::node	0.1	i	3-4
# ::node	0.1.0	again	9-10
# ::root	0	promise-01
# ::edge	i	mod	again	0.1	0.1.0	
# ::edge	promise-01	ARG0	i	0	0.0	
# ::edge	promise-01	ARG1	i	0	0.1	
(p / promise-01 
      :ARG0 (i2 / i) 
      :ARG1 (i / i 
            :mod (a / again)))

# ::snt nonetheless i did go to the station for his arrival because i was promised a ride in the police car that would be leading santas open car down the high street
# ::tok nonetheless i did go to the station for his arrival because i was promised a ride in the police car that would be leading santas open car down the high street
# ::alignments 30-31|0.3.0 29-30|0.0.0.0.0.0 27-28|0.3 26-27|0.1 23-24|0 19-20|0.0 18-19|0.0.1 15-16|0.0.0 13-14|0.0.0.0 11-12|0.0.0.0.1 10-11|0.0.0.0.0 9-10|0.0.0.0.1.0 6-7|0.0.0.0.1.0.1 1-2|0.2 0-1|0.0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:25.443
# ::node	0	lead-01	23-24
# ::node	0.0	car	19-20
# ::node	0.0.0	ride-01	15-16
# ::node	0.0.0.0	promise-01	13-14
# ::node	0.0.0.0.0	cause-01	10-11
# ::node	0.0.0.0.0.0	high	29-30
# ::node	0.0.0.0.1	i	11-12
# ::node	0.0.0.0.1.0	arrive-01	9-10
# ::node	0.0.0.0.1.0.0	nonetheless	0-1
# ::node	0.0.0.0.1.0.1	station	6-7
# ::node	0.0.1	police	18-19
# ::node	0.1	car	26-27
# ::node	0.2	i	1-2
# ::node	0.3	down	27-28
# ::node	0.3.0	street	30-31
# ::root	0	lead-01
# ::edge	arrive-01	ARG0	i	0.0.0.0.1.0	0.0.0.0.1	
# ::edge	arrive-01	ARG1	nonetheless	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	car	mod	police	0.0	0.0.1	
# ::edge	cause-01	ARG0	promise-01	0.0.0.0.0	0.0.0.0	
# ::edge	cause-01	ARG1	high	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	down	op1	street	0.3	0.3.0	
# ::edge	i	op1	lead-01	0.2	0	
# ::edge	lead-01	ARG0	car	0	0.0	
# ::edge	lead-01	ARG1	car	0	0.1	
# ::edge	lead-01	time	down	0	0.3	
# ::edge	promise-01	ARG1	i	0.0.0.0	0.0.0.0.1	
# ::edge	promise-01	ARG2	ride-01	0.0.0.0	0.0.0	
# ::edge	ride-01	ARG1	car	0.0.0	0.0	
# ::edge	station	location	arrive-01	0.0.0.0.1.0.1	0.0.0.0.1.0	
(l / lead-01 
      :ARG0 (c2 / car 
            :ARG1-of (r / ride-01 
                  :ARG2-of (p2 / promise-01 
                        :ARG0-of (c3 / cause-01 
                              :ARG1 (h / high)) 
                        :ARG1 (i / i 
                              :ARG0-of (a / arrive-01 
                                    :ARG1 (n / nonetheless) 
                                    :location-of (s2 / station))))) 
            :mod (p / police)) 
      :ARG1 (c / car) 
      :op-of (i2 / i) 
      :time (d / down 
            :op1 (s / street)))

# ::snt the japanese were quick to promise similar sums
# ::tok the japanese were quick to promise similar sums
# ::alignments 7-8|0.0 5-6|0 3-4|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:25.450
# ::node	0	promise-01	5-6
# ::node	0.0	sum	7-8
# ::node	0.1	quick	3-4
# ::root	0	promise-01
# ::edge	promise-01	ARG1	sum	0	0.0	
# ::edge	quick	domain	promise-01	0.1	0	
(p / promise-01 
      :ARG1 (s / sum) 
      :domain-of (q / quick))

# ::snt ive promised to perform for rommel she told the general and that will have to suffice
# ::tok ive promised to perform for rommel she told the general and that will have to suffice
# ::alignments 15-16|0 10-11|0.0.0.1 9-10|0.0.0.0 7-8|0.0.0 6-7|0.0 3-4|0.0.0.1.0 1-2|0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:25.475
# ::node	0	suffice-01	15-16
# ::node	0.0	she	6-7
# ::node	0.0.0	tell-01	7-8
# ::node	0.0.0.0	general	9-10
# ::node	0.0.0.1	and	10-11
# ::node	0.0.0.1.0	perform-01	3-4
# ::node	0.0.0.1.0.0	promise-01	1-2
# ::root	0	suffice-01
# ::edge	and	op1	tell-01	0.0.0.1	0.0.0	
# ::edge	perform-01	ARG1	and	0.0.0.1.0	0.0.0.1	
# ::edge	promise-01	ARG1	perform-01	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	suffice-01	ARG0	she	0	0.0	
# ::edge	tell-01	ARG0	she	0.0.0	0.0	
# ::edge	tell-01	ARG2	general	0.0.0	0.0.0.0	
(s / suffice-01 
      :ARG0 (s2 / she 
            :ARG0-of (t / tell-01 
                  :ARG2 (g / general) 
                  :op-of (a / and 
                        :ARG1-of (p / perform-01 
                              :ARG1-of (p2 / promise-01))))))

# ::snt coincidentally wednesday is the day of mrs thatchers summer cabinet on the economy at which the chancellor mr nigel lawson and the chief secretary to the treasury mr john major will present economic assessments before the annual public spending round which mr major has promised will be a tough one
# ::tok coincidentally wednesday is the day of mrs thatchers summer cabinet on the economy at which the chancellor mr nigel lawson and the chief secretary to the treasury mr john major will present economic assessments before the annual public spending round which mr major has promised will be a tough one
# ::alignments 48-49|0.1.0.0 44-45|0.0 42-43|0.0.1 39-40|0.0.0 38-39|0.0.0.0 37-38|0.0.0.0.1 34-35|0.0.0.1 32-33|0.0.0.2 31-32|0.2 29-30|0.1.1 26-27|0.0.0.0.0 23-24|0.1 22-23|0.1.0.2+0.1.0 20-21|0 12-13|0.1.0.1.1 9-10|0.1.0.1 8-9|0.1.0.1.2 4-5|0.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:25.987
# ::node	0	and	20-21
# ::node	0.0	promise-01	44-45
# ::node	0.0.0	round	39-40
# ::node	0.0.0.0	spend-01	38-39
# ::node	0.0.0.0.0	treasury	26-27
# ::node	0.0.0.0.1	public	37-38
# ::node	0.0.0.1	before	34-35
# ::node	0.0.0.2	economy	32-33
# ::node	0.0.1	major	42-43
# ::node	0.1	secretary	23-24
# ::node	0.1.0	have-org-role-91	22-23
# ::node	0.1.0.0	tough	48-49
# ::node	0.1.0.1	cabinet	9-10
# ::node	0.1.0.1.0	day	4-5
# ::node	0.1.0.1.1	economy	12-13
# ::node	0.1.0.1.2	summer	8-9
# ::node	0.1.0.2	chief	22-23
# ::node	0.1.1	major	29-30
# ::node	0.2	present	31-32
# ::root	0	and
# ::edge	and	op1	secretary	0	0.1	
# ::edge	and	op2	present	0	0.2	
# ::edge	before	domain	round	0.0.0.1	0.0.0	
# ::edge	cabinet	domain	day	0.1.0.1	0.1.0.1.0	
# ::edge	cabinet	location	economy	0.1.0.1	0.1.0.1.1	
# ::edge	cabinet	mod	summer	0.1.0.1	0.1.0.1.2	
# ::edge	have-org-role-91	ARG0	tough	0.1.0	0.1.0.0	
# ::edge	have-org-role-91	ARG1	cabinet	0.1.0	0.1.0.1	
# ::edge	have-org-role-91	ARG2	chief	0.1.0	0.1.0.2	
# ::edge	have-org-role-91	ARG3	secretary	0.1.0	0.1	
# ::edge	promise-01	ARG0	round	0.0	0.0.0	
# ::edge	promise-01	ARG1	major	0.0	0.0.1	
# ::edge	promise-01	ARG2	and	0.0	0	
# ::edge	round	mod	economy	0.0.0	0.0.0.2	
# ::edge	secretary	mod	major	0.1	0.1.1	
# ::edge	spend-01	ARG0	round	0.0.0.0	0.0.0	
# ::edge	spend-01	ARG1	treasury	0.0.0.0	0.0.0.0.0	
# ::edge	spend-01	mod	public	0.0.0.0	0.0.0.0.1	
(a / and 
      :ARG2-of (p / promise-01 
            :ARG0 (r / round 
                  :ARG0-of (s / spend-01 
                        :ARG1 (t2 / treasury) 
                        :mod (p2 / public)) 
                  :domain-of (b / before) 
                  :mod (e / economy)) 
            :ARG1 (m / major)) 
      :op1 (s2 / secretary 
            :ARG3-of (h / have-org-role-91 
                  :ARG0 (t / tough) 
                  :ARG1 (c2 / cabinet 
                        :domain (d / day) 
                        :location (e2 / economy) 
                        :mod (s3 / summer)) 
                  :ARG2 (c / chief)) 
            :mod (m2 / major)) 
      :op2 (p3 / present))

# ::snt yet consenting and promising while overlapping are not the same
# ::tok yet consenting and promising while overlapping are not the same
# ::alignments 9-10|0.2 3-4|0.1 2-3|0 1-2|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:26.015
# ::node	0	and	2-3
# ::node	0.0	consent-01	1-2
# ::node	0.0.0	yet	0-1
# ::node	0.1	promise-01	3-4
# ::node	0.2	same-41	9-10
# ::root	0	and
# ::edge	and	op1	consent-01	0	0.0	
# ::edge	and	op2	promise-01	0	0.1	
# ::edge	and	op3	same-41	0	0.2	
# ::edge	consent-01	time	yet	0.0	0.0.0	
(a / and 
      :op1 (c / consent-01 
            :time (y / yet)) 
      :op2 (p / promise-01) 
      :op3 (s / same-41))

# ::snt although the move was hailed as sensational at first sight the vagueness of the language used to promise travel opportunities and media that are close to life failed to convince observers that the leadership had significantly softened its attitude
# ::tok although the move was hailed as sensational at first sight the vagueness of the language used to promise travel opportunities and media that are close to life failed to convince observers that the leadership had significantly softened its attitude
# ::alignments 38-39|0.2.1 35-36|0.1.1.0 30-31|0.1.0+0.1 29-30|0 27-28|0.2 26-27|0.0 21-22|0.2.0.1 20-21|0.2.0 19-20|0.2.0.0.1.0 18-19|0.1.1 17-18|0.2.0.0.1 15-16|0.2.0.0 14-15|0.2.0.0.0 9-10|0.1.2 4-5|0.1.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:26.369
# ::node	0	convince-01	29-30
# ::node	0.0	life	26-27
# ::node	0.1	person	30-31
# ::node	0.1.0	observe-01	30-31
# ::node	0.1.1	travel-01	18-19
# ::node	0.1.1.0	significant	35-36
# ::node	0.1.2	sight-01	9-10
# ::node	0.1.2.0	hail-02	4-5
# ::node	0.2	fail-01	27-28
# ::node	0.2.0	and	20-21
# ::node	0.2.0.0	use-01	15-16
# ::node	0.2.0.0.0	language	14-15
# ::node	0.2.0.0.1	promise-01	17-18
# ::node	0.2.0.0.1.0	opportunity	19-20
# ::node	0.2.0.1	media	21-22
# ::node	0.2.1	attitude	38-39
# ::root	0	convince-01
# ::edge	and	op1	use-01	0.2.0	0.2.0.0	
# ::edge	and	op2	media	0.2.0	0.2.0.1	
# ::edge	convince-01	ARG0	life	0	0.0	
# ::edge	convince-01	ARG1	person	0	0.1	
# ::edge	fail-01	ARG0	and	0.2	0.2.0	
# ::edge	fail-01	ARG1	attitude	0.2	0.2.1	
# ::edge	fail-01	ARG2	convince-01	0.2	0	
# ::edge	hail-02	ARG1	sight-01	0.1.2.0	0.1.2	
# ::edge	observe-01	ARG0	person	0.1.0	0.1	
# ::edge	promise-01	ARG1	opportunity	0.2.0.0.1	0.2.0.0.1.0	
# ::edge	sight-01	ARG1	person	0.1.2	0.1	
# ::edge	travel-01	ARG0	person	0.1.1	0.1	
# ::edge	travel-01	ARG1	significant	0.1.1	0.1.1.0	
# ::edge	use-01	ARG1	language	0.2.0.0	0.2.0.0.0	
# ::edge	use-01	ARG2	promise-01	0.2.0.0	0.2.0.0.1	
(c / convince-01 
      :ARG0 (l / life) 
      :ARG1 (p / person 
            :ARG0-of (o / observe-01) 
            :ARG0-of (t / travel-01 
                  :ARG1 (s / significant)) 
            :ARG1-of (s2 / sight-01 
                  :ARG1-of (h / hail-02))) 
      :ARG2-of (f / fail-01 
            :ARG0 (a2 / and 
                  :op1 (u / use-01 
                        :ARG1 (l2 / language) 
                        :ARG2 (p2 / promise-01 
                              :ARG1 (o2 / opportunity))) 
                  :op2 (m / media)) 
            :ARG1 (a / attitude)))

# ::snt not a bad note to go out on is it  he has promised his wife that in retirement he will devote more time to his family his two sons his daughter and the five grandchildren
# ::tok not a bad note to go out on is it he has promised his wife that in retirement he will devote more time to his family his two sons his daughter and the five grandchildren
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:26.370
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt might they be more affordable  he promised he would work diligently
# ::tok might they be more affordable he promised he would work diligently
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:26.370
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt as she enters her second decade in power this promises to be an effective line of attack
# ::tok as she enters her second decade in power this promises to be an effective line of attack
# ::alignments 16-17|0 14-15|0.0.0.0.1.0.0 13-14|0.0.0.0.1.0.0.1 9-10|0.0.0.0.1.0 8-9|0.0.0.0.1.0.0.0 7-8|0.0.0.0.1 5-6|0.0.0+0.0 2-3|0.0.0.0 1-2|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:26.650
# ::node	0	attack-01	16-17
# ::node	0.0	temporal-quantity	5-6
# ::node	0.0.0	decade	5-6
# ::node	0.0.0.0	enter-01	2-3
# ::node	0.0.0.0.0	she	1-2
# ::node	0.0.0.0.1	power	7-8
# ::node	0.0.0.0.1.0	promise-01	9-10
# ::node	0.0.0.0.1.0.0	line	14-15
# ::node	0.0.0.0.1.0.0.0	this	8-9
# ::node	0.0.0.0.1.0.0.1	effective	13-14
# ::root	0	attack-01
# ::edge	attack-01	ARG0	temporal-quantity	0	0.0	
# ::edge	enter-01	ARG0	she	0.0.0.0	0.0.0.0.0	
# ::edge	enter-01	ARG1	decade	0.0.0.0	0.0.0	
# ::edge	enter-01	manner	power	0.0.0.0	0.0.0.0.1	
# ::edge	line	domain	this	0.0.0.0.1.0.0	0.0.0.0.1.0.0.0	
# ::edge	line	mod	effective	0.0.0.0.1.0.0	0.0.0.0.1.0.0.1	
# ::edge	promise-01	ARG0	power	0.0.0.0.1.0	0.0.0.0.1	
# ::edge	promise-01	ARG1	line	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	temporal-quantity	unit	decade	0.0	0.0.0	
(a / attack-01 
      :ARG0 (t2 / temporal-quantity 
            :unit (d / decade 
                  :ARG1-of (e2 / enter-01 
                        :ARG0 (s / she) 
                        :manner (p2 / power 
                              :ARG0-of (p / promise-01 
                                    :ARG1 (l / line 
                                          :domain (t / this) 
                                          :mod (e / effective))))))))

# ::snt gorbachev gave bush a detailed map of classified information about us installations around the soviet union and bush promised to check the map with cia experts since it was prepared by the kgb
# ::tok gorbachev gave bush a detailed map of classified information about us installations around the soviet union and bush promised to check the map with cia experts since it was prepared by the kgb
# ::alignments 29-30|0 27-28|0.1 26-27|0.3 25-26|0.2.0.1.0+0.2.0.1.0.0 24-25|0.2.0.1.0.1.0.0+0.2.0.1.0.1.0+0.2.0.1.0.1 22-23|0.0 18-19|0.2 17-18|0.2.0.1 16-17|0.2.0 15-16|0.2.0.0.1 12-13|0.2.0.0 11-12|0.2.0.0.0 8-9|0.2.0.1.0.0.0.0.0 7-8|0.2.0.1.0.0.0.0.0.0 5-6|0.2.0.1.0.0.0.0 4-5|0.2.0.1.0.0.0 2-3|0.2.0.1.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:27.109
# ::node	0	prepare-02	29-30
# ::node	0.0	map	22-23
# ::node	0.1	it	27-28
# ::node	0.2	promise-01	18-19
# ::node	0.2.0	and	16-17
# ::node	0.2.0.0	around	12-13
# ::node	0.2.0.0.0	installation	11-12
# ::node	0.2.0.0.1	union	15-16
# ::node	0.2.0.1	bush-league	17-18
# ::node	0.2.0.1.0	expert-41	25-26
# ::node	0.2.0.1.0.0	person	25-26
# ::node	0.2.0.1.0.0.0	detail-01	4-5
# ::node	0.2.0.1.0.0.0.0	map	5-6
# ::node	0.2.0.1.0.0.0.0.0	information	8-9
# ::node	0.2.0.1.0.0.0.0.0.0	classify-01	7-8
# ::node	0.2.0.1.0.0.0.0.1	bush-league	2-3
# ::node	0.2.0.1.0.1	government-organization	24-25
# ::node	0.2.0.1.0.1.0	name	24-25
# ::node	0.2.0.1.0.1.0.0	"CIA"	24-25
# ::node	0.3	since	26-27
# ::root	0	prepare-02
# ::edge	and	op1	bush-league	0.2.0	0.2.0.1	
# ::edge	around	op1	union	0.2.0.0	0.2.0.0.1	
# ::edge	around	op2	and	0.2.0.0	0.2.0	
# ::edge	classify-01	ARG1	information	0.2.0.1.0.0.0.0.0.0	0.2.0.1.0.0.0.0.0	
# ::edge	detail-01	ARG0	person	0.2.0.1.0.0.0	0.2.0.1.0.0	
# ::edge	detail-01	ARG1	map	0.2.0.1.0.0.0	0.2.0.1.0.0.0.0	
# ::edge	expert-41	ARG0	bush-league	0.2.0.1.0	0.2.0.1	
# ::edge	expert-41	ARG1	person	0.2.0.1.0	0.2.0.1.0.0	
# ::edge	expert-41	ARG2	government-organization	0.2.0.1.0	0.2.0.1.0.1	
# ::edge	government-organization	name	name	0.2.0.1.0.1	0.2.0.1.0.1.0	
# ::edge	installation	location	around	0.2.0.0.0	0.2.0.0	
# ::edge	map	mod	bush-league	0.2.0.1.0.0.0.0	0.2.0.1.0.0.0.0.1	
# ::edge	map	mod	information	0.2.0.1.0.0.0.0	0.2.0.1.0.0.0.0.0	
# ::edge	name	op1	"CIA"	0.2.0.1.0.1.0	0.2.0.1.0.1.0.0	
# ::edge	prepare-02	ARG0	map	0	0.0	
# ::edge	prepare-02	ARG1	it	0	0.1	
# ::edge	promise-01	ARG1	and	0.2	0.2.0	
# ::edge	promise-01	condition	prepare-02	0.2	0	
# ::edge	since	op1	prepare-02	0.3	0	
(p / prepare-02 
      :ARG0 (m / map) 
      :ARG1 (i / it) 
      :condition-of (p3 / promise-01 
            :ARG1 (a / and 
                  :op-of (a2 / around 
                        :location-of (i2 / installation) 
                        :op1 (u / union)) 
                  :op1 (b / bush-league 
                        :ARG0-of (e / expert-41 
                              :ARG1 (p2 / person 
                                    :ARG0-of (d / detail-01 
                                          :ARG1 (m2 / map 
                                                :mod (i3 / information 
                                                      :ARG1-of (c / classify-01)) 
                                                :mod (b2 / bush-league)))) 
                              :ARG2 (g / government-organization 
                                    :name (n / name 
                                          :op1 "CIA")))))) 
      :op-of (s / since))

# ::snt coming two years after the fiasco when tory backbenchers successfully blocked the sale of rover to ford young was able to promise that bae would invest 1 billion in the ailing car group in return for writing off debts and getting the government and the taxpayer off the hook for future investment in the state firm
# ::tok coming two years after the fiasco when tory backbenchers successfully blocked the sale of rover to ford young was able to promise that bae would invest 1 billion in the ailing car group in return for writing off debts and getting the government and the taxpayer off the hook for future investment in the state firm
# ::alignments 55-56|0.0.2.0.1.0.0.0 54-55|0.0.2.0.1.0.0.0.0 51-52|0.0.2.0.1.0.0 50-51|0.0.2.0.1.0.0.1 48-49|0.0.2.0.1.0 46-47|0.0.2.0.1 43-44|0.0.2 39-40|0.0.2.0.3 38-39|0.0.2.0.0 37-38|0.0.2.0.2 36-37|0.0.2.0 32-33|0.0.1.0.0 31-32|0.0.1.0 26-27|0.0.1.0.0.0.0.1.0.0.1 25-26|0.0.1 21-22|0.0 19-20|0 17-18|0.0.1.0.0.0.0.0 10-11|0.0.1.0.0.0.0 9-10|0.0.1.0.0.0 7-8|0.0.0.0.0+0.0.0.0+0.0.0 5-6|0.0.1.0.0.0.0.1 3-4|0.0.1.0.0.0.0.1.0 2-3|0.0.1.0.0.0.0.1.0.0.2+0.0.1.0.0.0.0.1.0.0 1-2|0.0.1.0.0.0.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:28.323
# ::node	0	possible	19-20
# ::node	0.0	promise-01	21-22
# ::node	0.0.0	political-party	7-8
# ::node	0.0.0.0	name	7-8
# ::node	0.0.0.0.0	"Tory"	7-8
# ::node	0.0.1	invest-01	25-26
# ::node	0.0.1.0	car	31-32
# ::node	0.0.1.0.0	group	32-33
# ::node	0.0.1.0.0.0	succeed-01	9-10
# ::node	0.0.1.0.0.0.0	block-01	10-11
# ::node	0.0.1.0.0.0.0.0	young	17-18
# ::node	0.0.1.0.0.0.0.1	fiasco	5-6
# ::node	0.0.1.0.0.0.0.1.0	after	3-4
# ::node	0.0.1.0.0.0.0.1.0.0	temporal-quantity	2-3
# ::node	0.0.1.0.0.0.0.1.0.0.0	2	1-2
# ::node	0.0.1.0.0.0.0.1.0.0.1	1	26-27
# ::node	0.0.1.0.0.0.0.1.0.0.2	year	2-3
# ::node	0.0.2	and	43-44
# ::node	0.0.2.0	write-01	36-37
# ::node	0.0.2.0.0	debt	38-39
# ::node	0.0.2.0.1	off	46-47
# ::node	0.0.2.0.1.0	hook-02	48-49
# ::node	0.0.2.0.1.0.0	invest-01	51-52
# ::node	0.0.2.0.1.0.0.0	firm	55-56
# ::node	0.0.2.0.1.0.0.0.0	state	54-55
# ::node	0.0.2.0.1.0.0.1	future	50-51
# ::node	0.0.2.0.2	off	37-38
# ::node	0.0.2.0.3	and	39-40
# ::root	0	possible
# ::edge	after	op1	fiasco	0.0.1.0.0.0.0.1.0	0.0.1.0.0.0.0.1	
# ::edge	after	quant	temporal-quantity	0.0.1.0.0.0.0.1.0	0.0.1.0.0.0.0.1.0.0	
# ::edge	and	op1	write-01	0.0.2	0.0.2.0	
# ::edge	and	op1	write-01	0.0.2.0.3	0.0.2.0	
# ::edge	block-01	ARG0	young	0.0.1.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	block-01	ARG1	fiasco	0.0.1.0.0.0.0	0.0.1.0.0.0.0.1	
# ::edge	firm	mod	state	0.0.2.0.1.0.0.0	0.0.2.0.1.0.0.0.0	
# ::edge	group	mod	car	0.0.1.0.0	0.0.1.0	
# ::edge	hook-02	ARG1	invest-01	0.0.2.0.1.0	0.0.2.0.1.0.0	
# ::edge	invest-01	ARG0	firm	0.0.2.0.1.0.0	0.0.2.0.1.0.0.0	
# ::edge	invest-01	ARG1	car	0.0.1	0.0.1.0	
# ::edge	invest-01	time	future	0.0.2.0.1.0.0	0.0.2.0.1.0.0.1	
# ::edge	name	op1	"Tory"	0.0.0.0	0.0.0.0.0	
# ::edge	off	op1	hook-02	0.0.2.0.1	0.0.2.0.1.0	
# ::edge	political-party	name	name	0.0.0	0.0.0.0	
# ::edge	possible	domain	promise-01	0	0.0	
# ::edge	promise-01	ARG0	political-party	0.0	0.0.0	
# ::edge	promise-01	ARG1	invest-01	0.0	0.0.1	
# ::edge	promise-01	ARG2	and	0.0	0.0.2	
# ::edge	succeed-01	ARG0	group	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	succeed-01	ARG1	block-01	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	temporal-quantity	quant	1	0.0.1.0.0.0.0.1.0.0	0.0.1.0.0.0.0.1.0.0.1	
# ::edge	temporal-quantity	quant	2	0.0.1.0.0.0.0.1.0.0	0.0.1.0.0.0.0.1.0.0.0	
# ::edge	temporal-quantity	unit	year	0.0.1.0.0.0.0.1.0.0	0.0.1.0.0.0.0.1.0.0.2	
# ::edge	write-01	ARG1	debt	0.0.2.0	0.0.2.0.0	
# ::edge	write-01	concession	off	0.0.2.0	0.0.2.0.1	
# ::edge	write-01	direction	off	0.0.2.0	0.0.2.0.2	
(p2 / possible 
      :domain (p / promise-01 
            :ARG0 (p3 / political-party 
                  :name (n / name 
                        :op1 "Tory")) 
            :ARG1 (i2 / invest-01 
                  :ARG1 (c / car 
                        :mod-of (g / group 
                              :ARG0-of (s2 / succeed-01 
                                    :ARG1 (b / block-01 
                                          :ARG0 (y / young) 
                                          :ARG1 (f3 / fiasco 
                                                :op-of (a3 / after 
                                                      :quant (t / temporal-quantity 
                                                            :quant 2 
                                                            :quant 1 
                                                            :unit (y2 / year))))))))) 
            :ARG2 (a / and 
                  :op1 (w / write-01 
                        :ARG1 (d / debt) 
                        :concession (o / off 
                              :op1 (h / hook-02 
                                    :ARG1 (i / invest-01 
                                          :ARG0 (f / firm 
                                                :mod (s / state)) 
                                          :time (f2 / future)))) 
                        :direction (o2 / off) 
                        :op-of (a2 / and)))))

# ::snt in late 1988 fourteen reporters from colombia ecuador and peru at a quito workshop issued a challenge to their colleagues throughout the continent we therefore resolve to call on the latin american press to join in educational campaigns in their communities on environmental topics to guide governments on this and promise ever greater space to ecological subjects
# ::tok in late 1988 fourteen reporters from colombia ecuador and peru at a quito workshop issued a challenge to their colleagues throughout the continent we therefore resolve to call on the latin american press to join in educational campaigns in their communities on environmental topics to guide governments on this and promise ever greater space to ecological subjects
# ::alignments 56-57|0.1.0.0.0.0.1.0.0 55-56|0.1.0.0.0.0.1.0 53-54|0.1.0.0.0.0.1.1.0 52-53|0.1.0.0.0.0.1.1 51-52|0.1.0.0.0.0.1.3 50-51|0.1.0.0.0.0.1 49-50|0.1.0.0.0.0.1.2 48-49|0.1.0.0.0.0.0.0.1.0 46-47|0.1.0.0.0.0.0.1.1.0+0.1.0.0.0.0.0.1.1 45-46|0.1.0.0.0.0.0.1 43-44|0.1.0.0.0.0.0.1.0 42-43|0.1.0.0.0.0.0.1.0.0 40-41|0.1.0.0.0.0.0.0.0 37-38|0.1.0.0.0.0.0.0 36-37|0.1.0.0.0.0.0.0.1 34-35|0.1.0.0.0.0.0 32-33|0.1.0.0.0.0.0.2 30-32|0.1.0.0.0.0.0.2.0.0.0+0.1.0.0.0.0.0.2.0.0.1+0.1.0.0.0.0.0.2.0.0+0.1.0.0.0.0.0.2.0 25-26|0.1.0.0.0 23-24|0.1.0.0.0.0 22-23|0.1.0.0 20-21|0.1.0 16-17|0.1 14-15|0.1.2 13-14|0.1.2.0 8-9|0 4-5|0.0.0+0.0 2-3|0.1.1.1+0.1.1 1-2|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:29.464
# ::node	0	and	8-9
# ::node	0.0	person	4-5
# ::node	0.0.0	report-01	4-5
# ::node	0.1	challenge-01	16-17
# ::node	0.1.0	throughout	20-21
# ::node	0.1.0.0	continent	22-23
# ::node	0.1.0.0.0	resolve-01	25-26
# ::node	0.1.0.0.0.0	we	23-24
# ::node	0.1.0.0.0.0.0	join-01	34-35
# ::node	0.1.0.0.0.0.0.0	campaign-01	37-38
# ::node	0.1.0.0.0.0.0.0.0	community	40-41
# ::node	0.1.0.0.0.0.0.0.1	educate-01	36-37
# ::node	0.1.0.0.0.0.0.0.1.0	this	48-49
# ::node	0.1.0.0.0.0.0.1	guide-01	45-46
# ::node	0.1.0.0.0.0.0.1.0	topic	43-44
# ::node	0.1.0.0.0.0.0.1.0.0	environment	42-43
# ::node	0.1.0.0.0.0.0.1.1	government-organization	46-47
# ::node	0.1.0.0.0.0.0.1.1.0	govern-01	46-47
# ::node	0.1.0.0.0.0.0.2	press	32-33
# ::node	0.1.0.0.0.0.0.2.0	thing	30-32
# ::node	0.1.0.0.0.0.0.2.0.0	name	30-32
# ::node	0.1.0.0.0.0.0.2.0.0.0	"american"	30-32
# ::node	0.1.0.0.0.0.0.2.0.0.1	"latin"	30-32
# ::node	0.1.0.0.0.0.1	promise-01	50-51
# ::node	0.1.0.0.0.0.1.0	ecology	55-56
# ::node	0.1.0.0.0.0.1.0.0	subject	56-57
# ::node	0.1.0.0.0.0.1.1	great	52-53
# ::node	0.1.0.0.0.0.1.1.0	space	53-54
# ::node	0.1.0.0.0.0.1.2	and	49-50
# ::node	0.1.0.0.0.0.1.3	ever	51-52
# ::node	0.1.1	date-entity	2-3
# ::node	0.1.1.0	late	1-2
# ::node	0.1.1.1	1988	2-3
# ::node	0.1.2	issue-01	14-15
# ::node	0.1.2.0	workshop	13-14
# ::root	0	and
# ::edge	and	op1	person	0	0.0	
# ::edge	and	op1	promise-01	0.1.0.0.0.0.1.2	0.1.0.0.0.0.1	
# ::edge	and	op2	challenge-01	0	0.1	
# ::edge	campaign-01	ARG1	community	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0.0.0	
# ::edge	campaign-01	mod	educate-01	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0.0.1	
# ::edge	challenge-01	ARG0	throughout	0.1	0.1.0	
# ::edge	challenge-01	ARG1	date-entity	0.1	0.1.1	
# ::edge	date-entity	year	1988	0.1.1	0.1.1.1	
# ::edge	educate-01	ARG1	this	0.1.0.0.0.0.0.0.1	0.1.0.0.0.0.0.0.1.0	
# ::edge	govern-01	ARG0	government-organization	0.1.0.0.0.0.0.1.1.0	0.1.0.0.0.0.0.1.1	
# ::edge	guide-01	ARG0	topic	0.1.0.0.0.0.0.1	0.1.0.0.0.0.0.1.0	
# ::edge	guide-01	ARG1	government-organization	0.1.0.0.0.0.0.1	0.1.0.0.0.0.0.1.1	
# ::edge	issue-01	ARG0	workshop	0.1.2	0.1.2.0	
# ::edge	issue-01	ARG1	challenge-01	0.1.2	0.1	
# ::edge	join-01	ARG0	we	0.1.0.0.0.0.0	0.1.0.0.0.0	
# ::edge	join-01	ARG1	campaign-01	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	join-01	purpose	guide-01	0.1.0.0.0.0.0	0.1.0.0.0.0.0.1	
# ::edge	late	op1	date-entity	0.1.1.0	0.1.1	
# ::edge	name	op1	"american"	0.1.0.0.0.0.0.2.0.0	0.1.0.0.0.0.0.2.0.0.0	
# ::edge	name	op2	"latin"	0.1.0.0.0.0.0.2.0.0	0.1.0.0.0.0.0.2.0.0.1	
# ::edge	press	mod	thing	0.1.0.0.0.0.0.2	0.1.0.0.0.0.0.2.0	
# ::edge	press	purpose	join-01	0.1.0.0.0.0.0.2	0.1.0.0.0.0.0	
# ::edge	promise-01	ARG0	we	0.1.0.0.0.0.1	0.1.0.0.0.0	
# ::edge	promise-01	ARG1	ecology	0.1.0.0.0.0.1	0.1.0.0.0.0.1.0	
# ::edge	promise-01	manner	great	0.1.0.0.0.0.1	0.1.0.0.0.0.1.1	
# ::edge	promise-01	time	ever	0.1.0.0.0.0.1	0.1.0.0.0.0.1.3	
# ::edge	report-01	ARG0	person	0.0.0	0.0	
# ::edge	resolve-01	ARG0	we	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	resolve-01	ARG1	continent	0.1.0.0.0	0.1.0.0	
# ::edge	space	mod	great	0.1.0.0.0.0.1.1.0	0.1.0.0.0.0.1.1	
# ::edge	subject	mod	ecology	0.1.0.0.0.0.1.0.0	0.1.0.0.0.0.1.0	
# ::edge	thing	name	name	0.1.0.0.0.0.0.2.0	0.1.0.0.0.0.0.2.0.0	
# ::edge	throughout	op1	continent	0.1.0	0.1.0.0	
# ::edge	topic	mod	environment	0.1.0.0.0.0.0.1.0	0.1.0.0.0.0.0.1.0.0	
(a2 / and 
      :op1 (p3 / person 
            :ARG0-of (r2 / report-01)) 
      :op2 (c4 / challenge-01 
            :ARG0 (t4 / throughout 
                  :op1 (c3 / continent 
                        :ARG1-of (r / resolve-01 
                              :ARG0 (w / we 
                                    :ARG0-of (j / join-01 
                                          :ARG1 (c2 / campaign-01 
                                                :ARG1 (c / community) 
                                                :mod (e4 / educate-01 
                                                      :ARG1 (t / this))) 
                                          :purpose (g4 / guide-01 
                                                :ARG0 (t2 / topic 
                                                      :mod (e3 / environment)) 
                                                :ARG1 (g2 / government-organization 
                                                      :ARG0-of (g3 / govern-01))) 
                                          :purpose-of (p2 / press 
                                                :mod (t3 / thing 
                                                      :name (n / name 
                                                            :op1 "american" 
                                                            :op2 "latin")))) 
                                    :ARG0-of (p / promise-01 
                                          :ARG1 (e / ecology 
                                                :mod-of (s / subject)) 
                                          :manner (g / great 
                                                :mod-of (s2 / space)) 
                                          :op-of (a / and) 
                                          :time (e2 / ever)))))) 
            :ARG1 (d / date-entity 
                  :op-of (l / late) 
                  :year 1988) 
            :ARG1-of (i / issue-01 
                  :ARG0 (w2 / workshop))))

# ::snt he was promised better weather for 6 june and at 4 a
# ::tok he was promised better weather for 6 june and at 4 a
# ::alignments 10-11|0.3 8-9|0.2 7-8|0.2.0.0+0.2.0 6-7|0.2.0.1 4-5|0.1 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:29.553
# ::node	0	promise-01	2-3
# ::node	0.0	he	0-1
# ::node	0.1	weather	4-5
# ::node	0.2	and	8-9
# ::node	0.2.0	date-entity	7-8
# ::node	0.2.0.0	6	7-8
# ::node	0.2.0.1	6	6-7
# ::node	0.3	4	10-11
# ::root	0	promise-01
# ::edge	and	op1	date-entity	0.2	0.2.0	
# ::edge	date-entity	month	6	0.2.0	0.2.0.0	
# ::edge	date-entity	quant	6	0.2.0	0.2.0.1	
# ::edge	promise-01	ARG0	he	0	0.0	
# ::edge	promise-01	ARG1	weather	0	0.1	
# ::edge	promise-01	ARG2	and	0	0.2	
# ::edge	promise-01	manner	4	0	0.3	
(p / promise-01 
      :ARG0 (h / he) 
      :ARG1 (w / weather) 
      :ARG2 (a / and 
            :op1 (d / date-entity 
                  :month 6 
                  :quant 6)) 
      :manner 4)

# ::snt but the way to make good this promise is i believe to take seriously the practical  theoretical distinction and to explore it further
# ::tok but the way to make good this promise is i believe to take seriously the practical theoretical distinction and to explore it further
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:29.554
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the forecast from livorno has spoken of increasing winds and i laid out all the chain before we rowed ashore feeling curiously british and eccentric using oars among so many outboards for the pasta and wine we had been promising ourselves since midmorning
# ::tok the forecast from livorno has spoken of increasing winds and i laid out all the chain before we rowed ashore feeling curiously british and eccentric using oars among so many outboards for the pasta and wine we had been promising ourselves since midmorning
# ::alignments 41-42|0.0.1 39-40|0.0 36-37|0.0.0 35-36|0.2 34-35|0 29-30|0.1.3.0 28-29|0.1.3.0.0 27-28|0.1.3 25-26|0.1.1.0.0.0 23-24|0.1.1.0.0.0.0 20-21|0.1 19-20|0.1.2 17-18|0.1.0 16-17|0.1.1.0.1 15-16|0.1.1 13-14|0.1.1.1 11-12|0.1.1.0 10-11|0.1.1.0.0 9-10|0.1.1.0.0.1 8-9|0.1.1.0.0.1.0.1 7-8|0.1.1.0.0.1.0.1.0 5-6|0.1.1.0.0.1.0 1-2|0.1.1.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:30.903
# ::node	0	and	34-35
# ::node	0.0	promise-01	39-40
# ::node	0.0.0	we	36-37
# ::node	0.0.1	since	41-42
# ::node	0.1	feel-01	20-21
# ::node	0.1.0	we	17-18
# ::node	0.1.1	chain	15-16
# ::node	0.1.1.0	lay-02	11-12
# ::node	0.1.1.0.0	i	10-11
# ::node	0.1.1.0.0.0	use-01	25-26
# ::node	0.1.1.0.0.0.0	and	23-24
# ::node	0.1.1.0.0.1	and	9-10
# ::node	0.1.1.0.0.1.0	speak-01	5-6
# ::node	0.1.1.0.0.1.0.0	forecast-01	1-2
# ::node	0.1.1.0.0.1.0.1	wind	8-9
# ::node	0.1.1.0.0.1.0.1.0	increase-01	7-8
# ::node	0.1.1.0.1	before	16-17
# ::node	0.1.1.1	all	13-14
# ::node	0.1.2	ashore	19-20
# ::node	0.1.3	among	27-28
# ::node	0.1.3.0	many	29-30
# ::node	0.1.3.0.0	so	28-29
# ::node	0.2	wine	35-36
# ::root	0	and
# ::edge	among	op1	many	0.1.3	0.1.3.0	
# ::edge	and	op1	feel-01	0	0.1	
# ::edge	and	op1	i	0.1.1.0.0.1	0.1.1.0.0	
# ::edge	and	op2	wine	0	0.2	
# ::edge	chain	quant	all	0.1.1	0.1.1.1	
# ::edge	feel-01	ARG0	we	0.1	0.1.0	
# ::edge	feel-01	ARG1	chain	0.1	0.1.1	
# ::edge	feel-01	mod	ashore	0.1	0.1.2	
# ::edge	feel-01	time	among	0.1	0.1.3	
# ::edge	increase-01	ARG1	wind	0.1.1.0.0.1.0.1.0	0.1.1.0.0.1.0.1	
# ::edge	lay-02	ARG0	i	0.1.1.0	0.1.1.0.0	
# ::edge	lay-02	ARG1	chain	0.1.1.0	0.1.1	
# ::edge	lay-02	time	before	0.1.1.0	0.1.1.0.1	
# ::edge	many	degree	so	0.1.3.0	0.1.3.0.0	
# ::edge	promise-01	ARG0	we	0.0	0.0.0	
# ::edge	promise-01	ARG1	and	0.0	0	
# ::edge	promise-01	time	since	0.0	0.0.1	
# ::edge	speak-01	ARG0	forecast-01	0.1.1.0.0.1.0	0.1.1.0.0.1.0.0	
# ::edge	speak-01	ARG1	and	0.1.1.0.0.1.0	0.1.1.0.0.1	
# ::edge	speak-01	instrument	wind	0.1.1.0.0.1.0	0.1.1.0.0.1.0.1	
# ::edge	use-01	ARG0	i	0.1.1.0.0.0	0.1.1.0.0	
# ::edge	use-01	ARG1	and	0.1.1.0.0.0	0.1.1.0.0.0.0	
(a / and 
      :ARG1-of (p / promise-01 
            :ARG0 (w / we) 
            :time (s / since)) 
      :op1 (f / feel-01 
            :ARG0 (w3 / we) 
            :ARG1 (c / chain 
                  :ARG1-of (l / lay-02 
                        :ARG0 (i / i 
                              :ARG0-of (u / use-01 
                                    :ARG1 (a3 / and)) 
                              :op-of (a6 / and 
                                    :ARG1-of (s3 / speak-01 
                                          :ARG0 (f2 / forecast-01) 
                                          :instrument (w4 / wind 
                                                :ARG1-of (i2 / increase-01))))) 
                        :time (b / before)) 
                  :quant (a5 / all)) 
            :mod (a4 / ashore) 
            :time (a2 / among 
                  :op1 (m / many 
                        :degree (s2 / so)))) 
      :op2 (w2 / wine))

# ::snt for what they promise is also dont worry german reunification is not just round the corner
# ::tok for what they promise is also dont worry german reunification is not just round the corner
# ::alignments 15-16|0.1.0 13-14|0.1.0.0 12-13|0.1.0.0.0 7-8|0.1 5-6|0.1.0.1 3-4|0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:30.947
# ::node	0	promise-01	3-4
# ::node	0.0	they	2-3
# ::node	0.1	worry-02	7-8
# ::node	0.1.0	corner	15-16
# ::node	0.1.0.0	round	13-14
# ::node	0.1.0.0.0	just	12-13
# ::node	0.1.0.1	also	5-6
# ::root	0	promise-01
# ::edge	corner	poss	also	0.1.0	0.1.0.1	
# ::edge	promise-01	ARG0	they	0	0.0	
# ::edge	promise-01	ARG1	worry-02	0	0.1	
# ::edge	round	mod	corner	0.1.0.0	0.1.0	
# ::edge	round	mod	just	0.1.0.0	0.1.0.0.0	
# ::edge	worry-02	ARG1	corner	0.1	0.1.0	
(p / promise-01 
      :ARG0 (t / they) 
      :ARG1 (w / worry-02 
            :ARG1 (c / corner 
                  :mod-of (r / round 
                        :mod (j / just)) 
                  :poss (a / also))))

# ::snt mr miller is thought to have promised bumper returns on investments a fact that might explain his plunge into share dealing
# ::tok mr miller is thought to have promised bumper returns on investments a fact that might explain his plunge into share dealing
# ::alignments 20-21|0.0.0.0.0.0 19-20|0.0.0.0.0.0.0 17-18|0.0.0.0.0 15-16|0.0.0.0.0.1 12-13|0.0.0.0 10-11|0.0.0.1 8-9|0.0.0 7-8|0.0.0.2 6-7|0.0 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:31.047
# ::node	0	think-01	3-4
# ::node	0.0	promise-01	6-7
# ::node	0.0.0	return-02	8-9
# ::node	0.0.0.0	fact	12-13
# ::node	0.0.0.0.0	plunge-01	17-18
# ::node	0.0.0.0.0.0	deal-01	20-21
# ::node	0.0.0.0.0.0.0	share-01	19-20
# ::node	0.0.0.0.0.1	explain-01	15-16
# ::node	0.0.0.1	invest-01	10-11
# ::node	0.0.0.2	bumper	7-8
# ::root	0	think-01
# ::edge	deal-01	ARG1	share-01	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	explain-01	ARG1	plunge-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	plunge-01	ARG0	fact	0.0.0.0.0	0.0.0.0	
# ::edge	plunge-01	ARG1	deal-01	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	promise-01	ARG1	return-02	0.0	0.0.0	
# ::edge	return-02	ARG0	fact	0.0.0	0.0.0.0	
# ::edge	return-02	ARG1	invest-01	0.0.0	0.0.0.1	
# ::edge	return-02	mod	bumper	0.0.0	0.0.0.2	
# ::edge	think-01	ARG1	promise-01	0	0.0	
(t / think-01 
      :ARG1 (p2 / promise-01 
            :ARG1 (r / return-02 
                  :ARG0 (f / fact 
                        :ARG0-of (p / plunge-01 
                              :ARG1 (d / deal-01 
                                    :ARG1 (s / share-01)) 
                              :ARG1-of (e / explain-01))) 
                  :ARG1 (i / invest-01) 
                  :mod (b / bumper))))

# ::snt popular discontent with mr kerekou who seized power in a bloody military coup 17 years ago promising to deliver the longsuffering people of benin with a radical brand of marxismleninism has reached a feverish pitch
# ::tok popular discontent with mr kerekou who seized power in a bloody military coup 17 years ago promising to deliver the longsuffering people of benin with a radical brand of marxismleninism has reached a feverish pitch
# ::alignments 34-35|0.0.0 31-32|0.0 27-28|0.0.1.0 26-27|0.0.1.0.0 18-19|0.0.1 16-17|0.0.1.1 14-15|0.0.1.1.2.1.1+0.0.1.1.2.1 13-14|0.0.1.1.2.1.0 12-13|0.0.1.1.0 11-12|0.0.1.1.0.0 10-11|0 7-8|0.0.1.1.2.0 6-7|0.0.1.1.2 0-1|0.0.1.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:31.321
# ::node	0	bloody	10-11
# ::node	0.0	reach-01	31-32
# ::node	0.0.0	pitch-03	34-35
# ::node	0.0.1	deliver-01	18-19
# ::node	0.0.1.0	brand	27-28
# ::node	0.0.1.0.0	radical	26-27
# ::node	0.0.1.1	promise-01	16-17
# ::node	0.0.1.1.0	coup	12-13
# ::node	0.0.1.1.0.0	military	11-12
# ::node	0.0.1.1.1	popular-41	0-1
# ::node	0.0.1.1.2	seize-01	6-7
# ::node	0.0.1.1.2.0	power	7-8
# ::node	0.0.1.1.2.1	temporal-quantity	14-15
# ::node	0.0.1.1.2.1.0	17	13-14
# ::node	0.0.1.1.2.1.1	year	14-15
# ::root	0	bloody
(b2 / bloody 
      :ARG0-of (r / reach-01 
            :ARG1 (p / pitch-03) 
            :ARG2-of (d / deliver-01 
                  :ARG1 (b / brand 
                        :mod (r2 / radical)) 
                  :ARG2-of (p2 / promise-01 
                        :ARG1 (c / coup 
                              :mod (m / military)) 
                        :ARG1-of (p4 / popular-41) 
                        :purpose-of (s / seize-01 
                              :ARG1 (p3 / power) 
                              :time (t / temporal-quantity 
                                    :quant 17 
                                    :unit (y / year)))))))

# ::snt men who had promised to win the war found it hard to resist a general who insisted that he could win it
# ::tok men who had promised to win the war found it hard to resist a general who insisted that he could win it
# ::alignments 21-22|0.0.1 20-21|0.0 19-20|0 18-19|0.0.0 16-17|0.0.2 14-15|0.0.2.0 12-13|0.0.2.0.0 10-11|0.0.2.0.0.0 9-10|0.0.2.0.0.0.1 8-9|0.0.2.0.0.0.0 7-8|0.0.2.0.0.0.0.0.1.0 5-6|0.0.2.0.0.0.0.0.1 3-4|0.0.2.0.0.0.0.0 0-1|0.0.2.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:31.610
# ::node	0	possible	19-20
# ::node	0.0	win-01	20-21
# ::node	0.0.0	he	18-19
# ::node	0.0.1	it	21-22
# ::node	0.0.2	insist-01	16-17
# ::node	0.0.2.0	general	14-15
# ::node	0.0.2.0.0	resist-01	12-13
# ::node	0.0.2.0.0.0	hard	10-11
# ::node	0.0.2.0.0.0.0	find-01	8-9
# ::node	0.0.2.0.0.0.0.0	promise-01	3-4
# ::node	0.0.2.0.0.0.0.0.0	man	0-1
# ::node	0.0.2.0.0.0.0.0.1	win-01	5-6
# ::node	0.0.2.0.0.0.0.0.1.0	war	7-8
# ::node	0.0.2.0.0.0.1	it	9-10
# ::root	0	possible
# ::edge	find-01	ARG1	hard	0.0.2.0.0.0.0	0.0.2.0.0.0	
# ::edge	hard	domain	it	0.0.2.0.0.0	0.0.2.0.0.0.1	
# ::edge	hard	domain	resist-01	0.0.2.0.0.0	0.0.2.0.0	
# ::edge	insist-01	ARG0	general	0.0.2	0.0.2.0	
# ::edge	insist-01	ARG1	win-01	0.0.2	0.0	
# ::edge	possible	domain	win-01	0	0.0	
# ::edge	promise-01	ARG0	man	0.0.2.0.0.0.0.0	0.0.2.0.0.0.0.0.0	
# ::edge	promise-01	ARG1	find-01	0.0.2.0.0.0.0.0	0.0.2.0.0.0.0	
# ::edge	promise-01	ARG2	win-01	0.0.2.0.0.0.0.0	0.0.2.0.0.0.0.0.1	
# ::edge	resist-01	ARG1	general	0.0.2.0.0	0.0.2.0	
# ::edge	win-01	ARG0	he	0.0	0.0.0	
# ::edge	win-01	ARG1	it	0.0	0.0.1	
# ::edge	win-01	ARG1	war	0.0.2.0.0.0.0.0.1	0.0.2.0.0.0.0.0.1.0	
(p / possible 
      :domain (w / win-01 
            :ARG0 (h / he) 
            :ARG1 (i / it) 
            :ARG1-of (i2 / insist-01 
                  :ARG0 (g / general 
                        :ARG1-of (r / resist-01 
                              :domain-of (h2 / hard 
                                    :ARG1-of (f / find-01 
                                          :ARG1-of (p2 / promise-01 
                                                :ARG0 (m / man) 
                                                :ARG2 (w3 / win-01 
                                                      :ARG1 (w2 / war)))) 
                                    :domain (i3 / it)))))))

# ::snt the minister for information and inspiration sniffing cynicism shuffled at the podium and promised aerial jam tomorrow
# ::tok the minister for information and inspiration sniffing cynicism shuffled at the podium and promised aerial jam tomorrow
# ::alignments 16-17|0.0.0.0.2 15-16|0.0.0.0.0 14-15|0.0.0.0.0.0 13-14|0.0.0.0 12-13|0.0.0.0.1 7-8|0.2 6-7|0.1.0 5-6|0.1 4-5|0 3-4|0.0 1-2|0.0.0.1+0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:31.756
# ::node	0	and	4-5
# ::node	0.0	information	3-4
# ::node	0.0.0	have-org-role-91	1-2
# ::node	0.0.0.0	promise-01	13-14
# ::node	0.0.0.0.0	jam-01	15-16
# ::node	0.0.0.0.0.0	aerial	14-15
# ::node	0.0.0.0.1	and	12-13
# ::node	0.0.0.0.2	tomorrow	16-17
# ::node	0.0.0.1	minister	1-2
# ::node	0.1	inspire-01	5-6
# ::node	0.1.0	sniff-02	6-7
# ::node	0.2	cynicism	7-8
# ::root	0	and
# ::edge	and	op1	information	0	0.0	
# ::edge	and	op1	promise-01	0.0.0.0.1	0.0.0.0	
# ::edge	and	op2	inspire-01	0	0.1	
# ::edge	and	op3	cynicism	0	0.2	
# ::edge	have-org-role-91	ARG1	information	0.0.0	0.0	
# ::edge	have-org-role-91	ARG2	minister	0.0.0	0.0.0.1	
# ::edge	jam-01	mod	aerial	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	promise-01	ARG0	have-org-role-91	0.0.0.0	0.0.0	
# ::edge	promise-01	ARG1	jam-01	0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	time	tomorrow	0.0.0.0	0.0.0.0.2	
# ::edge	sniff-02	ARG1	inspire-01	0.1.0	0.1	
(a3 / and 
      :op1 (i2 / information 
            :ARG1-of (h / have-org-role-91 
                  :ARG0-of (p / promise-01 
                        :ARG1 (j / jam-01 
                              :mod (a / aerial)) 
                        :op-of (a2 / and) 
                        :time (t / tomorrow)) 
                  :ARG2 (m / minister))) 
      :op2 (i / inspire-01 
            :ARG1-of (s / sniff-02)) 
      :op3 (c / cynicism))

# ::snt are there any others of that sort here  because if there are i promise ill dash
# ::tok are there any others of that sort here because if there are i promise ill dash
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:31.756
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the us has promised the largest amount 195000 tonnes
# ::tok the us has promised the largest amount 195000 tonnes
# ::alignments 8-9|0.2.1+0.2 7-8|0.2.0.2+0.2.0.1+0.2.0.0+0.2.0 6-7|0.1 5-6|0.0.0+0.0 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:31.867
# ::node	0	promise-01	3-4
# ::node	0.0	large	5-6
# ::node	0.0.0	most	5-6
# ::node	0.1	amount	6-7
# ::node	0.2	volume-quantity	8-9
# ::node	0.2.0	date-entity	7-8
# ::node	0.2.0.0	0	7-8
# ::node	0.2.0.1	50	7-8
# ::node	0.2.0.2	19	7-8
# ::node	0.2.1	tonne	8-9
# ::root	0	promise-01
# ::edge	date-entity	day	0	0.2.0	0.2.0.0	
# ::edge	date-entity	month	50	0.2.0	0.2.0.1	
# ::edge	date-entity	year	19	0.2.0	0.2.0.2	
# ::edge	large	degree	most	0.0	0.0.0	
# ::edge	promise-01	ARG0	large	0	0.0	
# ::edge	promise-01	ARG1	amount	0	0.1	
# ::edge	promise-01	ARG2	volume-quantity	0	0.2	
# ::edge	volume-quantity	time	date-entity	0.2	0.2.0	
# ::edge	volume-quantity	unit	tonne	0.2	0.2.1	
(p / promise-01 
      :ARG0 (l / large 
            :degree (m / most)) 
      :ARG1 (a / amount) 
      :ARG2 (v / volume-quantity 
            :time (d / date-entity 
                  :day 0 
                  :month 50 
                  :year 19) 
            :unit (t / tonne)))

# ::snt wouldnt that be worth a hug  well mrs davis i cant promise you a rise and i certainly wouldnt be bold enough to ask you for a hug but what i can offer you is the chance to choose between a substantial payrise ellip
# ::tok wouldnt that be worth a hug well mrs davis i cant promise you a rise and i certainly wouldnt be bold enough to ask you for a hug but what i can offer you is the chance to choose between a substantial payrise ellip
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:31.869
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt he reminded gerry armstrong the british umpire that he had promised before the match that cyclops decisions would be final
# ::tok he reminded gerry armstrong the british umpire that he had promised before the match that cyclops decisions would be final
# ::alignments 19-20|0.1 16-17|0.1.0 13-14|0.1.0.0 11-12|0.1.0.0.0 10-11|0.1.0.0.0.0 8-9|0.1.0.0.0.0.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:31.914
# ::node	0	remind-01	1-2
# ::node	0.0	he	0-1
# ::node	0.1	final	19-20
# ::node	0.1.0	decide-01	16-17
# ::node	0.1.0.0	match-01	13-14
# ::node	0.1.0.0.0	before	11-12
# ::node	0.1.0.0.0.0	promise-01	10-11
# ::node	0.1.0.0.0.0.0	he	8-9
# ::root	0	remind-01
# ::edge	before	op1	match-01	0.1.0.0.0	0.1.0.0	
# ::edge	final	domain	decide-01	0.1	0.1.0	
# ::edge	match-01	ARG1	decide-01	0.1.0.0	0.1.0	
# ::edge	promise-01	ARG0	he	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	promise-01	time	before	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	remind-01	ARG0	he	0	0.0	
# ::edge	remind-01	ARG1	final	0	0.1	
(r / remind-01 
      :ARG0 (h2 / he) 
      :ARG1 (f / final 
            :domain (d / decide-01 
                  :ARG1-of (m / match-01 
                        :op-of (b / before 
                              :time-of (p / promise-01 
                                    :ARG0 (h / he)))))))

# ::snt though in june whitehall promised to devise urgently a programme to allow some the right to live in britain it has been fidgeting over figures and numbers according to allen lee a senior legislative councillor
# ::tok though in june whitehall promised to devise urgently a programme to allow some the right to live in britain it has been fidgeting over figures and numbers according to allen lee a senior legislative councillor
# ::alignments 34-35|0.0.1.2.0.1.0.1+0.0.1.2.0.1.0 33-34|0.0.1.2.0.1.0.0 32-33|0.0.1.2.0.1.0.1.0 26-27|0.2 25-26|0 24-25|0.1 19-20|0.0.1.2.0.0 18-19|0.0.1.2.0.1.1.0+0.0.1.2.0.1.1+0.0.1.2.0.1 16-17|0.0.1.2.0 12-13|0.0.1.2.1 11-12|0.0.1.2 9-10|0.0.1.0 7-8|0.0.1.1 6-7|0.0.1 4-5|0.0 2-3|0.0.0.0+0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:32.385
# ::node	0	and	25-26
# ::node	0.0	promise-01	4-5
# ::node	0.0.0	date-entity	2-3
# ::node	0.0.0.0	6	2-3
# ::node	0.0.1	devise-01	6-7
# ::node	0.0.1.0	program	9-10
# ::node	0.0.1.1	urgent	7-8
# ::node	0.0.1.2	allow-01	11-12
# ::node	0.0.1.2.0	live-01	16-17
# ::node	0.0.1.2.0.0	it	19-20
# ::node	0.0.1.2.0.1	country	18-19
# ::node	0.0.1.2.0.1.0	have-org-role-91	34-35
# ::node	0.0.1.2.0.1.0.0	legislate-01	33-34
# ::node	0.0.1.2.0.1.0.1	councillor	34-35
# ::node	0.0.1.2.0.1.0.1.0	senior	32-33
# ::node	0.0.1.2.0.1.1	name	18-19
# ::node	0.0.1.2.0.1.1.0	"Britain"	18-19
# ::node	0.0.1.2.1	some	12-13
# ::node	0.1	figure	24-25
# ::node	0.2	number	26-27
# ::root	0	and
# ::edge	allow-01	ARG1	live-01	0.0.1.2	0.0.1.2.0	
# ::edge	allow-01	ARG2	some	0.0.1.2	0.0.1.2.1	
# ::edge	and	op1	figure	0	0.1	
# ::edge	and	op2	number	0	0.2	
# ::edge	councillor	mod	senior	0.0.1.2.0.1.0.1	0.0.1.2.0.1.0.1.0	
# ::edge	country	name	name	0.0.1.2.0.1	0.0.1.2.0.1.1	
# ::edge	date-entity	month	6	0.0.0	0.0.0.0	
# ::edge	devise-01	ARG1	program	0.0.1	0.0.1.0	
# ::edge	devise-01	manner	urgent	0.0.1	0.0.1.1	
# ::edge	devise-01	purpose	allow-01	0.0.1	0.0.1.2	
# ::edge	have-org-role-91	ARG1	country	0.0.1.2.0.1.0	0.0.1.2.0.1	
# ::edge	have-org-role-91	ARG2	councillor	0.0.1.2.0.1.0	0.0.1.2.0.1.0.1	
# ::edge	legislate-01	ARG0	have-org-role-91	0.0.1.2.0.1.0.0	0.0.1.2.0.1.0	
# ::edge	live-01	ARG0	it	0.0.1.2.0	0.0.1.2.0.0	
# ::edge	live-01	location	country	0.0.1.2.0	0.0.1.2.0.1	
# ::edge	name	op1	"Britain"	0.0.1.2.0.1.1	0.0.1.2.0.1.1.0	
# ::edge	promise-01	ARG0	and	0.0	0	
# ::edge	promise-01	ARG1	date-entity	0.0	0.0.0	
# ::edge	promise-01	ARG2	devise-01	0.0	0.0.1	
(a / and 
      :ARG0-of (p2 / promise-01 
            :ARG1 (d2 / date-entity 
                  :month 6) 
            :ARG2 (d / devise-01 
                  :ARG1 (p / program) 
                  :manner (u / urgent) 
                  :purpose (a2 / allow-01 
                        :ARG1 (l2 / live-01 
                              :ARG0 (i / it) 
                              :location (c2 / country 
                                    :ARG1-of (h / have-org-role-91 
                                          :ARG0-of (l / legislate-01) 
                                          :ARG2 (c / councillor 
                                                :mod (s / senior))) 
                                    :name (n2 / name 
                                          :op1 "Britain"))) 
                        :ARG2 (s2 / some)))) 
      :op1 (f / figure) 
      :op2 (n / number))

# ::snt mr coleman promised he would not push for legislation which would severely restrict abortion in virginia
# ::tok mr coleman promised he would not push for legislation which would severely restrict abortion in virginia
# ::alignments 13-14|0.0.1.0.0 12-13|0.0.1.0 11-12|0.0.1.0.1 8-9|0.0.1 6-7|0.0 3-4|0.0.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:32.436
# ::node	0	promise-01	2-3
# ::node	0.0	push-02	6-7
# ::node	0.0.0	he	3-4
# ::node	0.0.1	legislation	8-9
# ::node	0.0.1.0	restrict-01	12-13
# ::node	0.0.1.0.0	abort-01	13-14
# ::node	0.0.1.0.1	severe	11-12
# ::root	0	promise-01
# ::edge	promise-01	ARG1	push-02	0	0.0	
# ::edge	push-02	ARG0	he	0.0	0.0.0	
# ::edge	push-02	ARG2	legislation	0.0	0.0.1	
# ::edge	restrict-01	ARG0	legislation	0.0.1.0	0.0.1	
# ::edge	restrict-01	ARG1	abort-01	0.0.1.0	0.0.1.0.0	
# ::edge	restrict-01	manner	severe	0.0.1.0	0.0.1.0.1	
(p2 / promise-01 
      :ARG1 (p / push-02 
            :ARG0 (h / he) 
            :ARG2 (l / legislation 
                  :ARG0-of (r / restrict-01 
                        :ARG1 (a / abort-01) 
                        :manner (s / severe)))))

# ::snt miss mcginley can train you if you like as the pair of you seem to get on together ill train her well natasha promised right then
# ::tok miss mcginley can train you if you like as the pair of you seem to get on together ill train her well natasha promised right then
# ::alignments 25-26|0.1.1.1 23-24|0.1.1 21-22|0.1.1.0 19-20|0.1 18-19|0.1.0 17-18|0.1.0.0 13-14|0 12-13|0.0 6-7|0.2 4-5|0.2.0.0 3-4|0.2.0 2-3|0.2.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:32.569
# ::node	0	seem-01	13-14
# ::node	0.0	you	12-13
# ::node	0.1	train	19-20
# ::node	0.1.0	ill-41	18-19
# ::node	0.1.0.0	together	17-18
# ::node	0.1.1	promise-01	23-24
# ::node	0.1.1.0	well	21-22
# ::node	0.1.1.1	then	25-26
# ::node	0.2	you	6-7
# ::node	0.2.0	train	3-4
# ::node	0.2.0.0	you	4-5
# ::node	0.2.0.1	possible	2-3
# ::root	0	seem-01
# ::edge	ill-41	ARG0	train	0.1.0	0.1	
# ::edge	ill-41	mod	together	0.1.0	0.1.0.0	
# ::edge	possible	domain	train	0.2.0.1	0.2.0	
# ::edge	promise-01	ARG0	well	0.1.1	0.1.1.0	
# ::edge	promise-01	ARG1	train	0.1.1	0.1	
# ::edge	promise-01	time	then	0.1.1	0.1.1.1	
# ::edge	seem-01	ARG0	you	0	0.0	
# ::edge	seem-01	ARG1	train	0	0.1	
# ::edge	seem-01	ARG2	you	0	0.2	
# ::edge	train	degree	you	0.2.0	0.2.0.0	
# ::edge	train	domain	you	0.2.0	0.2	
(s / seem-01 
      :ARG0 (y / you) 
      :ARG1 (t2 / train 
            :ARG0-of (i / ill-41 
                  :mod (t3 / together)) 
            :ARG1-of (p / promise-01 
                  :ARG0 (w / well) 
                  :time (t / then))) 
      :ARG2 (y2 / you 
            :domain-of (t4 / train 
                  :degree (y3 / you) 
                  :domain-of (p2 / possible))))

# ::snt   if it is not majority rule if it is not the onemanonevote system that mr de klerk envisages in the new south africa he is always promising what is it
# ::tok if it is not majority rule if it is not the onemanonevote system that mr de klerk envisages in the new south africa he is always promising what is it
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:32.569
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt last year the show welcomed its 100000th visitor and bill who has produced every one since 1967 promises that those who flock to see his cast of 300 in action next week can look forward to an entertainment that is every bit as good if not better
# ::tok last year the show welcomed its 100000th visitor and bill who has produced every one since 1967 promises that those who flock to see his cast of 300 in action next week can look forward to an entertainment that is every bit as good if not better
# ::alignments 43-44|0.0.0.0.1.1.2.0.0.0 41-42|0.0.0.0.1.1.2.0.0.1 40-41|0.0.0.0.1.1.2.0.0.1.0 37-38|0.0.0.0.1.1.2.0.0 34-35|0.0.0.0.1.1.0 32-33|0.0.0.0.1.0.0 31-32|0.3 30-31|0.3.0 29-30|0.1.0 27-28|0.2 25-26|0.1 23-24|0 17-18|0.0.0.0.1.0 16-17|0.0.0.0.1.1.2.0.1+0.0.0.0.1.1.2.0 15-16|0.0.0.0.1.1.2 13-14|0.0.0.0.0.0.0 12-13|0.0.0.0.1.1 9-10|0.0.0.0.1.1.1 8-9|0.0.0.0.1 7-8|0.0.0.0.0+0.0.0.0 4-5|0.0.0 3-4|0.0.0.0.0.0 1-2|0.0 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:33.383
# ::node	0	see-01	23-24
# ::node	0.0	year	1-2
# ::node	0.0.0	welcome-01	4-5
# ::node	0.0.0.0	person	7-8
# ::node	0.0.0.0.0	visit-01	7-8
# ::node	0.0.0.0.0.0	show-01	3-4
# ::node	0.0.0.0.0.0.0	every	13-14
# ::node	0.0.0.0.1	and	8-9
# ::node	0.0.0.0.1.0	promise-01	17-18
# ::node	0.0.0.0.1.0.0	possible	32-33
# ::node	0.0.0.0.1.1	produce-01	12-13
# ::node	0.0.0.0.1.1.0	forward	34-35
# ::node	0.0.0.0.1.1.1	bill	9-10
# ::node	0.0.0.0.1.1.2	since	15-16
# ::node	0.0.0.0.1.1.2.0	date-entity	16-17
# ::node	0.0.0.0.1.1.2.0.0	entertain-01	37-38
# ::node	0.0.0.0.1.1.2.0.0.0	good	43-44
# ::node	0.0.0.0.1.1.2.0.0.1	bit	41-42
# ::node	0.0.0.0.1.1.2.0.0.1.0	every	40-41
# ::node	0.0.0.0.1.1.2.0.1	1967	16-17
# ::node	0.0.1	last	0-1
# ::node	0.1	cast-01	25-26
# ::node	0.1.0	action	29-30
# ::node	0.2	300	27-28
# ::node	0.3	week	31-32
# ::node	0.3.0	next	30-31
# ::root	0	see-01
# ::edge	and	op1	person	0.0.0.0.1	0.0.0.0	
# ::edge	bit	degree	every	0.0.0.0.1.1.2.0.0.1	0.0.0.0.1.1.2.0.0.1.0	
# ::edge	cast-01	ARG1	action	0.1	0.1.0	
# ::edge	date-entity	op1	entertain-01	0.0.0.0.1.1.2.0	0.0.0.0.1.1.2.0.0	
# ::edge	date-entity	year	1967	0.0.0.0.1.1.2.0	0.0.0.0.1.1.2.0.1	
# ::edge	entertain-01	ARG0	good	0.0.0.0.1.1.2.0.0	0.0.0.0.1.1.2.0.0.0	
# ::edge	entertain-01	ARG1	bit	0.0.0.0.1.1.2.0.0	0.0.0.0.1.1.2.0.0.1	
# ::edge	produce-01	ARG0	forward	0.0.0.0.1.1	0.0.0.0.1.1.0	
# ::edge	produce-01	ARG1	and	0.0.0.0.1.1	0.0.0.0.1	
# ::edge	produce-01	mod	bill	0.0.0.0.1.1	0.0.0.0.1.1.1	
# ::edge	produce-01	time	since	0.0.0.0.1.1	0.0.0.0.1.1.2	
# ::edge	promise-01	ARG0	and	0.0.0.0.1.0	0.0.0.0.1	
# ::edge	promise-01	ARG1	possible	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	see-01	ARG0	year	0	0.0	
# ::edge	see-01	ARG1	cast-01	0	0.1	
# ::edge	see-01	medium	300	0	0.2	
# ::edge	see-01	time	week	0	0.3	
# ::edge	show-01	ARG1	every	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	since	op1	date-entity	0.0.0.0.1.1.2	0.0.0.0.1.1.2.0	
# ::edge	visit-01	ARG0	person	0.0.0.0.0	0.0.0.0	
# ::edge	visit-01	ARG1	show-01	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	week	mod	next	0.3	0.3.0	
# ::edge	welcome-01	ARG0	year	0.0.0	0.0	
# ::edge	welcome-01	ARG1	person	0.0.0	0.0.0.0	
# ::edge	year	mod	last	0.0	0.0.1	
(s / see-01 
      :ARG0 (y / year 
            :ARG0-of (w2 / welcome-01 
                  :ARG1 (p4 / person 
                        :ARG0-of (v / visit-01 
                              :ARG1 (s3 / show-01 
                                    :ARG1 (e3 / every))) 
                        :op-of (a2 / and 
                              :ARG0-of (p2 / promise-01 
                                    :ARG1 (p / possible)) 
                              :ARG1-of (p3 / produce-01 
                                    :ARG0 (f / forward) 
                                    :mod (b2 / bill) 
                                    :time (s2 / since 
                                          :op1 (d / date-entity 
                                                :op1 (e2 / entertain-01 
                                                      :ARG0 (g / good) 
                                                      :ARG1 (b / bit 
                                                            :degree (e / every))) 
                                                :year 1967)))))) 
            :mod (l / last)) 
      :ARG1 (c / cast-01 
            :ARG1 (a / action)) 
      :medium 300 
      :time (w / week 
            :mod (n / next)))

# ::snt gerrard had promised that a great deal of money was on its way but gerrard had also said that linda was happy to think he was dead
# ::tok gerrard had promised that a great deal of money was on its way but gerrard had also said that linda was happy to think he was dead
# ::alignments 24-25|0.1.0 23-24|0.1.1.0 21-22|0.1.1 17-18|0.1 16-17|0.1.2 13-14|0 12-13|0.1.1.0.0 8-9|0.1.1.0.0.0 6-7|0.1.1.0.0.0.0 5-6|0.1.1.0.0.0.0.0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:33.547
# ::node	0	contrast-01	13-14
# ::node	0.0	promise-01	2-3
# ::node	0.1	say-01	17-18
# ::node	0.1.0	he	24-25
# ::node	0.1.1	happy	21-22
# ::node	0.1.1.0	think-01	23-24
# ::node	0.1.1.0.0	way	12-13
# ::node	0.1.1.0.0.0	money	8-9
# ::node	0.1.1.0.0.0.0	deal-01	6-7
# ::node	0.1.1.0.0.0.0.0	great	5-6
# ::node	0.1.2	also	16-17
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	promise-01	0	0.0	
# ::edge	contrast-01	ARG2	say-01	0	0.1	
# ::edge	deal-01	ARG1	money	0.1.1.0.0.0.0	0.1.1.0.0.0	
# ::edge	deal-01	mod	great	0.1.1.0.0.0.0	0.1.1.0.0.0.0.0	
# ::edge	happy	domain	think-01	0.1.1	0.1.1.0	
# ::edge	say-01	ARG0	he	0.1	0.1.0	
# ::edge	say-01	ARG1	happy	0.1	0.1.1	
# ::edge	say-01	mod	also	0.1	0.1.2	
# ::edge	think-01	ARG1	way	0.1.1.0	0.1.1.0.0	
# ::edge	way	poss	money	0.1.1.0.0	0.1.1.0.0.0	
(c / contrast-01 
      :ARG1 (p / promise-01) 
      :ARG2 (s / say-01 
            :ARG0 (h / he) 
            :ARG1 (h2 / happy 
                  :domain (t / think-01 
                        :ARG1 (w / way 
                              :poss (m / money 
                                    :ARG1-of (d / deal-01 
                                          :mod (g / great)))))) 
            :mod (a / also)))

# ::snt mr rocard said the national fronts gains were obviously related to immigration problems and promised that the government would crack down hard on illegal immigration
# ::tok mr rocard said the national fronts gains were obviously related to immigration problems and promised that the government would crack down hard on illegal immigration
# ::alignments 24-25|0.0.1.0.1 23-24|0.0.1.0.1.0.0+0.0.1.0.1.0 21-22|0.0.1.0.2 20-21|0.0.1.0.2.0 19-20|0.0.1.0 14-15|0.0.1 13-14|0.0 12-13|0.0.0.1 11-12|0.0.0.1.0 9-10|0.0.0 8-9|0.0.0.0 4-5|0.0.1.0.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:33.619
# ::node	0	say-01	2-3
# ::node	0.0	and	13-14
# ::node	0.0.0	relate-01	9-10
# ::node	0.0.0.0	obvious-41	8-9
# ::node	0.0.0.1	problem	12-13
# ::node	0.0.0.1.0	immigrate-01	11-12
# ::node	0.0.1	promise-01	14-15
# ::node	0.0.1.0	crack-02	19-20
# ::node	0.0.1.0.0	nation	4-5
# ::node	0.0.1.0.1	immigrate-01	24-25
# ::node	0.0.1.0.1.0	law	23-24
# ::node	0.0.1.0.1.0.0	-	23-24
# ::node	0.0.1.0.2	hard	21-22
# ::node	0.0.1.0.2.0	down	20-21
# ::root	0	say-01
# ::edge	and	op1	relate-01	0.0	0.0.0	
# ::edge	and	op2	promise-01	0.0	0.0.1	
# ::edge	crack-02	ARG1	nation	0.0.1.0	0.0.1.0.0	
# ::edge	crack-02	manner	immigrate-01	0.0.1.0	0.0.1.0.1	
# ::edge	crack-02	mod	hard	0.0.1.0	0.0.1.0.2	
# ::edge	hard	mod	down	0.0.1.0.2	0.0.1.0.2.0	
# ::edge	immigrate-01	mod	law	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	law	polarity	-	0.0.1.0.1.0	0.0.1.0.1.0.0	
# ::edge	obvious-41	ARG1	relate-01	0.0.0.0	0.0.0	
# ::edge	problem	mod	immigrate-01	0.0.0.1	0.0.0.1.0	
# ::edge	promise-01	ARG1	crack-02	0.0.1	0.0.1.0	
# ::edge	relate-01	ARG2	problem	0.0.0	0.0.0.1	
# ::edge	say-01	ARG1	and	0	0.0	
(s / say-01 
      :ARG1 (a / and 
            :op1 (r / relate-01 
                  :ARG1-of (o / obvious-41) 
                  :ARG2 (p2 / problem 
                        :mod (i2 / immigrate-01))) 
            :op2 (p / promise-01 
                  :ARG1 (c / crack-02 
                        :ARG1 (n / nation) 
                        :manner (i / immigrate-01 
                              :mod (l / law 
                                    :polarity -)) 
                        :mod (h / hard 
                              :mod (d / down))))))

# ::snt you wouldnt see a thing if you went there not a blade of grass is out of place i promise a scotland yard source said earlier this month
# ::tok you wouldnt see a thing if you went there not a blade of grass is out of place i promise a scotland yard source said earlier this month
# ::alignments 27-28|0.2.0+0.2.0.1 26-27|0.2.0.0 25-26|0.2 24-25|0 23-24|0.0 22-23|0.0.1 21-22|0.0.2.0.0+0.0.2.0+0.0.2 19-20|0.0.0 18-19|0.0.0.0 17-18|0.1.2 13-14|0.0.0.0.0.0 11-12|0.0.0.0.0 6-7|0.1.3 4-5|0.1.1 2-3|0.1 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:35.275
# ::node	0	say-01	24-25
# ::node	0.0	source	23-24
# ::node	0.0.0	promise-01	19-20
# ::node	0.0.0.0	i	18-19
# ::node	0.0.0.0.0	blade	11-12
# ::node	0.0.0.0.0.0	grass-roots	13-14
# ::node	0.0.1	yard	22-23
# ::node	0.0.2	country	21-22
# ::node	0.0.2.0	name	21-22
# ::node	0.0.2.0.0	"Scotland"	21-22
# ::node	0.1	see-01	2-3
# ::node	0.1.0	you	0-1
# ::node	0.1.1	thing	4-5
# ::node	0.1.2	place	17-18
# ::node	0.1.3	you	6-7
# ::node	0.2	early	25-26
# ::node	0.2.0	month	27-28
# ::node	0.2.0.0	this	26-27
# ::node	0.2.0.1	temporal-quantity	27-28
# ::root	0	say-01
# ::edge	blade	mod	grass-roots	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	country	name	name	0.0.2	0.0.2.0	
# ::edge	i	domain	blade	0.0.0.0	0.0.0.0.0	
# ::edge	month	mod	this	0.2.0	0.2.0.0	
# ::edge	month	time	early	0.2.0	0.2	
# ::edge	name	op1	"Scotland"	0.0.2.0	0.0.2.0.0	
# ::edge	promise-01	ARG0	i	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	source	0.0.0	0.0	
# ::edge	say-01	ARG0	source	0	0.0	
# ::edge	say-01	ARG1	see-01	0	0.1	
# ::edge	say-01	time	early	0	0.2	
# ::edge	see-01	ARG0	you	0.1	0.1.0	
# ::edge	see-01	ARG1	thing	0.1	0.1.1	
# ::edge	see-01	location	place	0.1	0.1.2	
# ::edge	see-01	source	you	0.1	0.1.3	
# ::edge	source	mod	country	0.0	0.0.2	
# ::edge	source	mod	yard	0.0	0.0.1	
# ::edge	temporal-quantity	unit	month	0.2.0.1	0.2.0	
(s / say-01 
      :ARG0 (s2 / source 
            :ARG1-of (p / promise-01 
                  :ARG0 (i / i 
                        :domain (b / blade 
                              :mod (g / grass-roots)))) 
            :mod (y / yard) 
            :mod (c / country 
                  :name (n / name 
                        :op1 "Scotland"))) 
      :ARG1 (s3 / see-01 
            :ARG0 (y3 / you) 
            :ARG1 (t3 / thing) 
            :location (p2 / place) 
            :source (y2 / you)) 
      :time (e / early 
            :time-of (m / month 
                  :mod (t2 / this) 
                  :unit-of (t / temporal-quantity))))

# ::snt mine is the only working class candidacy and the only one promising to take wealth from the rich to redistribute among the poor he said
# ::tok mine is the only working class candidacy and the only one promising to take wealth from the rich to redistribute among the poor he said
# ::alignments 24-25|0 23-24|0.0 22-23|0.2 20-21|0.2.0 17-18|0.1.1.1 14-15|0.1.0.0 11-12|0.1.0 9-10|0.3 7-8|0.1 6-7|0.1.1.0 5-6|0.1.1.0.0 4-5|0.1.1 3-4|0.1.1.3 0-1|0.1.1.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:35.419
# ::node	0	say-01	24-25
# ::node	0.0	he	23-24
# ::node	0.1	and	7-8
# ::node	0.1.0	promise-01	11-12
# ::node	0.1.0.0	wealth	14-15
# ::node	0.1.1	work-01	4-5
# ::node	0.1.1.0	candidacy	6-7
# ::node	0.1.1.0.0	class	5-6
# ::node	0.1.1.1	rich	17-18
# ::node	0.1.1.2	mine	0-1
# ::node	0.1.1.3	only	3-4
# ::node	0.2	poor	22-23
# ::node	0.2.0	among	20-21
# ::node	0.3	only	9-10
# ::root	0	say-01
# ::edge	among	op1	poor	0.2.0	0.2	
# ::edge	and	op1	work-01	0.1	0.1.1	
# ::edge	candidacy	mod	class	0.1.1.0	0.1.1.0.0	
# ::edge	poor	domain	say-01	0.2	0	
# ::edge	promise-01	ARG1	wealth	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG2	and	0.1.0	0.1	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	and	0	0.1	
# ::edge	say-01	manner	only	0	0.3	
# ::edge	work-01	ARG0	candidacy	0.1.1	0.1.1.0	
# ::edge	work-01	ARG1	rich	0.1.1	0.1.1.1	
# ::edge	work-01	ARG2	mine	0.1.1	0.1.1.2	
# ::edge	work-01	mod	only	0.1.1	0.1.1.3	
(s / say-01 
      :ARG0 (h / he) 
      :ARG1 (a2 / and 
            :ARG2-of (p2 / promise-01 
                  :ARG1 (w / wealth)) 
            :op1 (w2 / work-01 
                  :ARG0 (c / candidacy 
                        :mod (c2 / class)) 
                  :ARG1 (r / rich) 
                  :ARG2 (m / mine) 
                  :mod (o2 / only))) 
      :domain-of (p / poor 
            :op-of (a / among)) 
      :manner (o / only))

# ::snt nicholas georgiadiss designs are a closely guarded secret but are certain to be completely over the top and breathtaking special effects are promised
# ::tok nicholas georgiadiss designs are a closely guarded secret but are certain to be completely over the top and breathtaking special effects are promised
# ::alignments 22-23|0.2.1.0 20-21|0.2.1.2 19-20|0.2.1.2.1 17-18|0.2.1 16-17|0.2.1.1 13-14|0.2.1.2.0 10-11|0.0 8-9|0 7-8|0.2.0 6-7|0.1 5-6|0.1.0 2-3|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:35.552
# ::node	0	contrast-01	8-9
# ::node	0.0	certain	10-11
# ::node	0.1	guard-01	6-7
# ::node	0.1.0	close	5-6
# ::node	0.2	design-01	2-3
# ::node	0.2.0	secret	7-8
# ::node	0.2.1	and	17-18
# ::node	0.2.1.0	promise-01	22-23
# ::node	0.2.1.1	top	16-17
# ::node	0.2.1.2	effect-01	20-21
# ::node	0.2.1.2.0	complete	13-14
# ::node	0.2.1.2.1	special	19-20
# ::root	0	contrast-01
# ::edge	and	op1	design-01	0.2.1	0.2	
# ::edge	and	op2	top	0.2.1	0.2.1.1	
# ::edge	and	op3	effect-01	0.2.1	0.2.1.2	
# ::edge	contrast-01	ARG1	certain	0	0.0	
# ::edge	contrast-01	ARG2	design-01	0	0.2	
# ::edge	effect-01	ARG1	complete	0.2.1.2	0.2.1.2.0	
# ::edge	effect-01	mod	special	0.2.1.2	0.2.1.2.1	
# ::edge	guard-01	ARG1	contrast-01	0.1	0	
# ::edge	guard-01	manner	close	0.1	0.1.0	
# ::edge	promise-01	ARG1	and	0.2.1.0	0.2.1	
# ::edge	secret	domain	design-01	0.2.0	0.2	
(c3 / contrast-01 
      :ARG1 (c2 / certain) 
      :ARG1-of (g / guard-01 
            :manner (c4 / close)) 
      :ARG2 (d / design-01 
            :domain-of (s2 / secret) 
            :op-of (a / and 
                  :ARG1-of (p / promise-01) 
                  :op1 (t / top) 
                  :op2 (e / effect-01 
                        :ARG1 (c / complete) 
                        :mod (s / special)))))

# ::snt such journeys were called pussy cat tours and cryptic advertisements in the papers promised unusual glimpses of hamburg and amsterdam
# ::tok such journeys were called pussy cat tours and cryptic advertisements in the papers promised unusual glimpses of hamburg and amsterdam
# ::alignments 18-19|0 14-15|0.0.1.2.0+0.0.1.2 13-14|0.0 12-13|0.0.0 9-10|0.0.0.0.0 7-8|0.0.0.0 6-7|0.0.1 5-6|0.0.1.1 0-1|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:35.601
# ::node	0	and	18-19
# ::node	0.0	promise-01	13-14
# ::node	0.0.0	paper	12-13
# ::node	0.0.0.0	and	7-8
# ::node	0.0.0.0.0	advertisement	9-10
# ::node	0.0.1	tour-01	6-7
# ::node	0.0.1.0	such	0-1
# ::node	0.0.1.1	cat	5-6
# ::node	0.0.1.2	usual	14-15
# ::node	0.0.1.2.0	-	14-15
# ::root	0	and
# ::edge	and	op1	advertisement	0.0.0.0	0.0.0.0.0	
# ::edge	and	op1	promise-01	0	0.0	
# ::edge	and	op2	paper	0.0.0.0	0.0.0	
# ::edge	promise-01	ARG1	paper	0.0	0.0.0	
# ::edge	tour-01	ARG0	such	0.0.1	0.0.1.0	
# ::edge	tour-01	ARG1	promise-01	0.0.1	0.0	
# ::edge	tour-01	mod	cat	0.0.1	0.0.1.1	
# ::edge	tour-01	mod	usual	0.0.1	0.0.1.2	
# ::edge	usual	polarity	-	0.0.1.2	0.0.1.2.0	
(a / and 
      :op1 (p / promise-01 
            :ARG1 (p2 / paper 
                  :op-of (a3 / and 
                        :op1 (a2 / advertisement))) 
            :ARG1-of (t / tour-01 
                  :ARG0 (s / such) 
                  :mod (c / cat) 
                  :mod (u / usual 
                        :polarity -))))

# ::snt the proponents of the meech lake accord have given us a fresh unfact that pierre trudeau during the quebec referendum campaign of 1980 promised a renewed federalism and then did not deliver
# ::tok the proponents of the meech lake accord have given us a fresh unfact that pierre trudeau during the quebec referendum campaign of 1980 promised a renewed federalism and then did not deliver
# ::alignments 31-32|0.3 28-29|0.1.1 27-28|0 25-26|0.2 23-24|0.1 22-23|0.0.1.0+0.0.1 20-21|0.1.0 19-20|0.1.0.0 11-12|0.2.0 8-9|0.0 6-7|0.0.0 5-6|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:35.685
# ::node	0	and	27-28
# ::node	0.0	give-01	8-9
# ::node	0.0.0	accord	6-7
# ::node	0.0.0.0	lake	5-6
# ::node	0.0.1	date-entity	22-23
# ::node	0.0.1.0	1980	22-23
# ::node	0.1	promise-01	23-24
# ::node	0.1.0	campaign-01	20-21
# ::node	0.1.0.0	referendum	19-20
# ::node	0.1.1	then	28-29
# ::node	0.2	renew-01	25-26
# ::node	0.2.0	fresh	11-12
# ::node	0.3	deliver-01	31-32
# ::root	0	and
# ::edge	accord	location	lake	0.0.0	0.0.0.0	
# ::edge	and	op1	give-01	0	0.0	
# ::edge	and	op2	promise-01	0	0.1	
# ::edge	and	op3	renew-01	0	0.2	
# ::edge	and	op4	deliver-01	0	0.3	
# ::edge	campaign-01	ARG1	referendum	0.1.0	0.1.0.0	
# ::edge	date-entity	year	1980	0.0.1	0.0.1.0	
# ::edge	give-01	ARG1	accord	0.0	0.0.0	
# ::edge	give-01	time	date-entity	0.0	0.0.1	
# ::edge	promise-01	ARG0	campaign-01	0.1	0.1.0	
# ::edge	promise-01	time	then	0.1	0.1.1	
# ::edge	renew-01	ARG1	fresh	0.2	0.2.0	
(a / and 
      :op1 (g / give-01 
            :ARG1 (a2 / accord 
                  :location (l / lake)) 
            :time (d2 / date-entity 
                  :year 1980)) 
      :op2 (p / promise-01 
            :ARG0 (c / campaign-01 
                  :ARG1 (r2 / referendum)) 
            :time (t / then)) 
      :op3 (r / renew-01 
            :ARG1 (f / fresh)) 
      :op4 (d / deliver-01))

# ::snt what might such a vision look like  in a field known for its unfulfilled promises one should avoid unrealistic expectations
# ::tok what might such a vision look like in a field known for its unfulfilled promises one should avoid unrealistic expectations
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:35.686
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt more probably the mass desertion is another sign of how the people have lost faith in perestroika and its unfulfilled promises
# ::tok more probably the mass desertion is another sign of how the people have lost faith in perestroika and its unfulfilled promises
# ::alignments 20-21|0.1 17-18|0 14-15|0.0.1 13-14|0.0 6-7|0.1.0 3-4|0.1.1 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:35.767
# ::node	0	and	17-18
# ::node	0.0	lose-02	13-14
# ::node	0.0.0	probable	1-2
# ::node	0.0.1	faith	14-15
# ::node	0.1	promise-01	20-21
# ::node	0.1.0	another	6-7
# ::node	0.1.1	mass	3-4
# ::root	0	and
# ::edge	and	op1	lose-02	0	0.0	
# ::edge	and	op2	promise-01	0	0.1	
# ::edge	lose-02	ARG0	probable	0.0	0.0.0	
# ::edge	lose-02	ARG1	faith	0.0	0.0.1	
# ::edge	mass	op1	promise-01	0.1.1	0.1	
# ::edge	promise-01	ARG1	another	0.1	0.1.0	
(a / and 
      :op1 (l / lose-02 
            :ARG0 (p2 / probable) 
            :ARG1 (f / faith)) 
      :op2 (p / promise-01 
            :ARG1 (a2 / another) 
            :op-of (m / mass)))

# ::snt mr wonderfuls still promised them some enchanted evenings with a stranger in paradise who might well turn out to be oh
# ::tok mr wonderfuls still promised them some enchanted evenings with a stranger in paradise who might well turn out to be oh
# ::alignments 15-16|0.0 12-13|0.1.0 10-11|0.1 5-6|0.2 3-4|0 2-3|0.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:33:35.820
# ::node	0	promise-01	3-4
# ::node	0.0	well	15-16
# ::node	0.1	stranger	10-11
# ::node	0.1.0	paradise	12-13
# ::node	0.2	some	5-6
# ::node	0.3	still	2-3
# ::root	0	promise-01
# ::edge	paradise	quant	stranger	0.1.0	0.1	
# ::edge	promise-01	ARG0	well	0	0.0	
# ::edge	promise-01	ARG1	stranger	0	0.1	
# ::edge	promise-01	time	still	0	0.3	
# ::edge	some	domain	promise-01	0.2	0	
(p2 / promise-01 
      :ARG0 (w / well) 
      :ARG1 (s / stranger 
            :quant-of (p / paradise)) 
      :domain-of (s2 / some) 
      :time (s3 / still))

