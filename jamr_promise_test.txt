# ::snt since there are literally millions of fans of coronation street a book that promises the inside story of the thriceweekly soap opera will doubtless sell well
# ::tok since there are literally millions of fans of coronation street a book that promises the inside story of the thriceweekly soap opera will doubtless sell well
# ::alignments 25-26|0.1.2 24-25|0.1 23-24|0 21-22|0.1.0.2 20-21|0.1.0.2.0 16-17|0.1.0 15-16|0.1.0.1 13-14|0.1.0.0 11-12|0.1.0.0.0 9-10|0.1.0.0.0.0.0 6-7|0.1.0.0.0.0 3-4|0.1.1 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:25.680
# ::node	0	doubt-01	23-24
# ::node	0.0	since	0-1
# ::node	0.1	sell-01	24-25
# ::node	0.1.0	story	16-17
# ::node	0.1.0.0	promise-01	13-14
# ::node	0.1.0.0.0	book	11-12
# ::node	0.1.0.0.0.0	fan	6-7
# ::node	0.1.0.0.0.0.0	street	9-10
# ::node	0.1.0.1	inside	15-16
# ::node	0.1.0.2	opera	21-22
# ::node	0.1.0.2.0	soap	20-21
# ::node	0.1.1	literal	3-4
# ::node	0.1.2	well	25-26
# ::root	0	doubt-01
# ::edge	book	mod	fan	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	doubt-01	ARG0	since	0	0.0	
# ::edge	doubt-01	ARG1	sell-01	0	0.1	
# ::edge	fan	location	street	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	opera	mod	soap	0.1.0.2	0.1.0.2.0	
# ::edge	promise-01	ARG0	book	0.1.0.0	0.1.0.0.0	
# ::edge	promise-01	ARG1	story	0.1.0.0	0.1.0	
# ::edge	sell-01	ARG0	story	0.1	0.1.0	
# ::edge	sell-01	ARG1	literal	0.1	0.1.1	
# ::edge	sell-01	manner	well	0.1	0.1.2	
# ::edge	story	mod	inside	0.1.0	0.1.0.1	
# ::edge	story	topic	opera	0.1.0	0.1.0.2	
(d / doubt-01 
      :ARG0 (s5 / since) 
      :ARG1 (s / sell-01 
            :ARG0 (s3 / story 
                  :ARG1-of (p / promise-01 
                        :ARG0 (b / book 
                              :mod (f / fan 
                                    :location (s4 / street)))) 
                  :mod (i / inside) 
                  :topic (o / opera 
                        :mod (s2 / soap))) 
            :ARG1 (l / literal) 
            :manner (w / well)))

# ::snt the hard men at the finance ministry have promised to review the austerity measures at the end of this month
# ::tok the hard men at the finance ministry have promised to review the austerity measures at the end of this month
# ::alignments 19-20|0.0.1.0+0.0.1.0.0 18-19|0.0.1 13-14|0.2.0 10-11|0.2 8-9|0 6-7|0.0 5-6|0.0.0 2-3|0.1 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:25.856
# ::node	0	promise-01	8-9
# ::node	0.0	ministry	6-7
# ::node	0.0.0	finance-01	5-6
# ::node	0.0.1	this	18-19
# ::node	0.0.1.0	month	19-20
# ::node	0.0.1.0.0	temporal-quantity	19-20
# ::node	0.1	man	2-3
# ::node	0.1.0	hard	1-2
# ::node	0.2	review-01	10-11
# ::node	0.2.0	measure	13-14
# ::root	0	promise-01
# ::edge	finance-01	ARG1	ministry	0.0.0	0.0	
# ::edge	man	mod	hard	0.1	0.1.0	
# ::edge	ministry	mod	this	0.0	0.0.1	
# ::edge	month	mod	this	0.0.1.0	0.0.1	
# ::edge	promise-01	ARG0	ministry	0	0.0	
# ::edge	promise-01	ARG1	man	0	0.1	
# ::edge	promise-01	ARG2	review-01	0	0.2	
# ::edge	review-01	ARG1	measure	0.2	0.2.0	
# ::edge	temporal-quantity	unit	month	0.0.1.0.0	0.0.1.0	
(p / promise-01 
      :ARG0 (m3 / ministry 
            :ARG1-of (f / finance-01) 
            :mod (t2 / this 
                  :mod-of (m / month 
                        :unit-of (t / temporal-quantity)))) 
      :ARG1 (m4 / man 
            :mod (h / hard)) 
      :ARG2 (r / review-01 
            :ARG1 (m2 / measure)))

# ::snt with this years addition of the iaaf world marathon cup the 1991 race promises to be the best ever
# ::tok with this years addition of the iaaf world marathon cup the 1991 race promises to be the best ever
# ::alignments 18-19|0.1 13-14|0 12-13|0.0 11-12|0.0.0.0+0.0.0 9-10|0.3.0 8-9|0.3 7-8|0.3.1 2-3|0.2.0+0.2 1-2|0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:26.538
# ::node	0	promise-01	13-14
# ::node	0.0	race	12-13
# ::node	0.0.0	date-entity	11-12
# ::node	0.0.0.0	1991	11-12
# ::node	0.1	ever	18-19
# ::node	0.2	temporal-quantity	2-3
# ::node	0.2.0	year	2-3
# ::node	0.2.0.0	this	1-2
# ::node	0.3	marathon	8-9
# ::node	0.3.0	cup	9-10
# ::node	0.3.1	world	7-8
# ::root	0	promise-01
# ::edge	date-entity	year	1991	0.0.0	0.0.0.0	
# ::edge	marathon	consist	cup	0.3	0.3.0	
# ::edge	marathon	mod	world	0.3	0.3.1	
# ::edge	marathon	op1	promise-01	0.3	0	
# ::edge	promise-01	ARG0	race	0	0.0	
# ::edge	promise-01	ARG1	ever	0	0.1	
# ::edge	promise-01	ARG2	temporal-quantity	0	0.2	
# ::edge	race	time	date-entity	0.0	0.0.0	
# ::edge	temporal-quantity	unit	year	0.2	0.2.0	
# ::edge	year	mod	this	0.2.0	0.2.0.0	
(p / promise-01 
      :ARG0 (r / race 
            :time (d / date-entity 
                  :year 1991)) 
      :ARG1 (e / ever) 
      :ARG2 (t / temporal-quantity 
            :unit (y / year 
                  :mod (t2 / this))) 
      :op-of (m / marathon 
            :consist (c / cup) 
            :mod (w / world)))

# ::snt as jonathan is away in india at the moment interviewing researchers i have promised him that i would approach you to see if you would be able to cooperate with us in the planned work
# ::tok as jonathan is away in india at the moment interviewing researchers i have promised him that i would approach you to see if you would be able to cooperate with us in the planned work
# ::alignments 33-34|0.1.1.0 28-29|0.1 26-27|0 23-24|0.1.0 21-22|0.0 19-20|0.0.1.1 18-19|0.0.1 16-17|0.0.1.0 13-14|0.0.0.0 11-12|0.0.0 10-11|0.0.0.0.0.0+0.0.0.0.0 8-9|0.0.0.0.0.0.0 5-6|0.1.1.1.0+0.1.1.1+0.1.1 3-4|0.1.1.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:28.023
# ::node	0	possible	26-27
# ::node	0.0	see-01	21-22
# ::node	0.0.0	i	11-12
# ::node	0.0.0.0	promise-01	13-14
# ::node	0.0.0.0.0	person	10-11
# ::node	0.0.0.0.0.0	research-01	10-11
# ::node	0.0.0.0.0.0.0	moment	8-9
# ::node	0.0.1	approach-02	18-19
# ::node	0.0.1.0	i	16-17
# ::node	0.0.1.1	you	19-20
# ::node	0.1	cooperate-01	28-29
# ::node	0.1.0	you	23-24
# ::node	0.1.1	country	5-6
# ::node	0.1.1.0	plan-01	33-34
# ::node	0.1.1.1	name	5-6
# ::node	0.1.1.1.0	"India"	5-6
# ::node	0.1.1.2	away	3-4
# ::root	0	possible
# ::edge	approach-02	ARG0	i	0.0.1	0.0.1.0	
# ::edge	approach-02	ARG1	you	0.0.1	0.0.1.1	
# ::edge	approach-02	purpose	see-01	0.0.1	0.0	
# ::edge	away	op1	country	0.1.1.2	0.1.1	
# ::edge	cooperate-01	ARG0	you	0.1	0.1.0	
# ::edge	cooperate-01	ARG1	country	0.1	0.1.1	
# ::edge	country	name	name	0.1.1	0.1.1.1	
# ::edge	name	op1	"India"	0.1.1.1	0.1.1.1.0	
# ::edge	plan-01	ARG0	country	0.1.1.0	0.1.1	
# ::edge	possible	domain	cooperate-01	0	0.1	
# ::edge	promise-01	ARG0	i	0.0.0.0	0.0.0	
# ::edge	promise-01	ARG1	person	0.0.0.0	0.0.0.0.0	
# ::edge	research-01	ARG0	person	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	research-01	ARG1	moment	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	see-01	ARG0	i	0.0	0.0.0	
# ::edge	see-01	ARG1	possible	0.0	0	
(p2 / possible 
      :ARG1-of (s / see-01 
            :ARG0 (i2 / i 
                  :ARG0-of (p3 / promise-01 
                        :ARG1 (p4 / person 
                              :ARG0-of (r / research-01 
                                    :ARG1 (m / moment))))) 
            :purpose-of (a / approach-02 
                  :ARG0 (i / i) 
                  :ARG1 (y2 / you))) 
      :domain (c / cooperate-01 
            :ARG0 (y / you) 
            :ARG1 (c2 / country 
                  :ARG0-of (p / plan-01) 
                  :name (n / name 
                        :op1 "India") 
                  :op-of (a2 / away))))

# ::snt now though still experimental the methods of genetransfer promise to bring about even more productive variations crossing the specieslines that has stopped nature cold
# ::tok now though still experimental the methods of genetransfer promise to bring about even more productive variations crossing the specieslines that has stopped nature cold
# ::alignments 23-24|0.0.0.0.0.0 22-23|0.0.0.0.0.0.0 21-22|0.0.0.0.0 16-17|0.0.0.0.1.1 14-15|0 10-11|0.0.0.0.1 8-9|0.0.0.0 5-6|0.0.0 3-4|0.0 2-3|0.0.0.0.2 0-1|0.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:28.242
# ::node	0	productive	14-15
# ::node	0.0	experiment-01	3-4
# ::node	0.0.0	method	5-6
# ::node	0.0.0.0	promise-01	8-9
# ::node	0.0.0.0.0	stop-01	21-22
# ::node	0.0.0.0.0.0	cold	23-24
# ::node	0.0.0.0.0.0.0	nature	22-23
# ::node	0.0.0.0.1	bring-01	10-11
# ::node	0.0.0.0.1.0	now	0-1
# ::node	0.0.0.0.1.1	cross-02	16-17
# ::node	0.0.0.0.2	still	2-3
# ::root	0	productive
(p / productive 
      :ARG0-of (e / experiment-01 
            :ARG1 (m / method 
                  :ARG0-of (p2 / promise-01 
                        :ARG1 (s / stop-01 
                              :ARG1 (c / cold 
                                    :mod (n / nature))) 
                        :ARG2 (b / bring-01 
                              :ARG1 (n2 / now) 
                              :time (c2 / cross-02)) 
                        :time (s2 / still)))))

# ::snt addressing an international conference of experts organised by the allparty war crimes group mr patten said mr hurd had promised to let the lords and commons decide in a free vote in the next few weeks and had undertaken not to commit himself in advance of the debate
# ::tok addressing an international conference of experts organised by the allparty war crimes group mr patten said mr hurd had promised to let the lords and commons decide in a free vote in the next few weeks and had undertaken not to commit himself in advance of the debate
# ::alignments 47-48|0.0.1.0.0.0.0 44-45|0.0.1.0.0.0 41-42|0.0.1.0.0 38-39|0.0.1.0 36-37|0.0.1 35-36|0.0.0.2.0.0.0.1+0.0.0.2.0.0.0 34-35|0.0.0.2.0.0.0.0 33-34|0.0.0.2.0.0.0.1.0 30-31|0.0.0.2.0.0 29-30|0.0.0.2.0.0.1 26-27|0.0.0.2.0 25-26|0.0.0.2.1.0.0+0.0.0.2.1.0+0.0.0.2.1 24-25|0.0.0.2 23-24|0.0.0.1 21-22|0.0.0 19-20|0.0 15-16|0 12-13|0.0.0.0 11-12|0.0.0.0.1 10-11|0.0.0.0.1.0 6-7|0.0.0.0.0.0.0 5-6|0.0.0.0.0.0.0.0.0+0.0.0.0.0.0.0.0 3-4|0.0.0.0.0.0 2-3|0.0.0.0.0.0.1 0-1|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:30.040
# ::node	0	say-01	15-16
# ::node	0.0	promise-01	19-20
# ::node	0.0.0	let-01	21-22
# ::node	0.0.0.0	group	12-13
# ::node	0.0.0.0.0	address-02	0-1
# ::node	0.0.0.0.0.0	conference	3-4
# ::node	0.0.0.0.0.0.0	organize-01	6-7
# ::node	0.0.0.0.0.0.0.0	person	5-6
# ::node	0.0.0.0.0.0.0.0.0	expert-41	5-6
# ::node	0.0.0.0.0.0.1	international	2-3
# ::node	0.0.0.0.1	crime	11-12
# ::node	0.0.0.0.1.0	war	10-11
# ::node	0.0.0.1	lord	23-24
# ::node	0.0.0.2	and	24-25
# ::node	0.0.0.2.0	decide-01	26-27
# ::node	0.0.0.2.0.0	vote-01	30-31
# ::node	0.0.0.2.0.0.0	temporal-quantity	35-36
# ::node	0.0.0.2.0.0.0.0	few	34-35
# ::node	0.0.0.2.0.0.0.1	week	35-36
# ::node	0.0.0.2.0.0.0.1.0	next	33-34
# ::node	0.0.0.2.0.0.1	free-41	29-30
# ::node	0.0.0.2.1	government-organization	25-26
# ::node	0.0.0.2.1.0	name	25-26
# ::node	0.0.0.2.1.0.0	"Commons"	25-26
# ::node	0.0.1	and	36-37
# ::node	0.0.1.0	undertake-01	38-39
# ::node	0.0.1.0.0	commit-02	41-42
# ::node	0.0.1.0.0.0	advance-01	44-45
# ::node	0.0.1.0.0.0.0	debate-01	47-48
# ::root	0	say-01
# ::edge	address-02	ARG0	group	0.0.0.0.0	0.0.0.0	
# ::edge	address-02	ARG1	conference	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	advance-01	ARG1	debate-01	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	and	op1	let-01	0.0.0.2	0.0.0	
# ::edge	and	op1	promise-01	0.0.1	0.0	
# ::edge	and	op2	government-organization	0.0.0.2	0.0.0.2.1	
# ::edge	and	op2	undertake-01	0.0.1	0.0.1.0	
# ::edge	commit-02	time	advance-01	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	conference	mod	international	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	crime	mod	war	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	decide-01	ARG0	and	0.0.0.2.0	0.0.0.2	
# ::edge	decide-01	ARG1	vote-01	0.0.0.2.0	0.0.0.2.0.0	
# ::edge	expert-41	ARG1	person	0.0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	few	op1	temporal-quantity	0.0.0.2.0.0.0.0	0.0.0.2.0.0.0	
# ::edge	free-41	ARG1	vote-01	0.0.0.2.0.0.1	0.0.0.2.0.0	
# ::edge	government-organization	name	name	0.0.0.2.1	0.0.0.2.1.0	
# ::edge	group	mod	crime	0.0.0.0	0.0.0.0.1	
# ::edge	let-01	ARG0	group	0.0.0	0.0.0.0	
# ::edge	let-01	ARG1	lord	0.0.0	0.0.0.1	
# ::edge	name	op1	"Commons"	0.0.0.2.1.0	0.0.0.2.1.0.0	
# ::edge	organize-01	ARG0	conference	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	organize-01	ARG1	person	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	promise-01	ARG1	let-01	0.0	0.0.0	
# ::edge	say-01	ARG1	promise-01	0	0.0	
# ::edge	temporal-quantity	unit	week	0.0.0.2.0.0.0	0.0.0.2.0.0.0.1	
# ::edge	undertake-01	ARG1	commit-02	0.0.1.0	0.0.1.0.0	
# ::edge	vote-01	ARG1	temporal-quantity	0.0.0.2.0.0	0.0.0.2.0.0.0	
# ::edge	week	mod	next	0.0.0.2.0.0.0.1	0.0.0.2.0.0.0.1.0	
(s / say-01 
      :ARG1 (p / promise-01 
            :ARG1 (l2 / let-01 
                  :ARG0 (g2 / group 
                        :ARG0-of (a4 / address-02 
                              :ARG1 (c3 / conference 
                                    :ARG0-of (o / organize-01 
                                          :ARG1 (p2 / person 
                                                :ARG1-of (e / expert-41))) 
                                    :mod (i / international))) 
                        :mod (c2 / crime 
                              :mod (w2 / war))) 
                  :ARG1 (l / lord) 
                  :op-of (a3 / and 
                        :ARG0-of (d2 / decide-01 
                              :ARG1 (v / vote-01 
                                    :ARG1 (t / temporal-quantity 
                                          :op-of (f / few) 
                                          :unit (w / week 
                                                :mod (n / next))) 
                                    :ARG1-of (f2 / free-41))) 
                        :op1 (g / government-organization 
                              :name (n2 / name 
                                    :op1 "Commons")))) 
            :op-of (a2 / and 
                  :op1 (u / undertake-01 
                        :ARG1 (c / commit-02 
                              :time (a / advance-01 
                                    :ARG1 (d / debate-01)))))))

# ::snt scorpio oct 24nov 22 a saturday shopping spree give you a chance to pick up one or two prized purchases youve been promising to buy hence saving you time and energy around the house or introducing a swish air of sophistication to your home
# ::tok scorpio oct 24nov 22 a saturday shopping spree give you a chance to pick up one or two prized purchases youve been promising to buy hence saving you time and energy around the house or introducing a swish air of sophistication to your home
# ::alignments 43-44|0.1 40-41|0.2.0.1.0 38-39|0.0 35-36|0 34-35|0.2 33-34|0.2.1.2.0 31-32|0.2.1.2 30-31|0.2.2 29-30|0.3 28-29|0.2.1.1.1 27-28|0.2.1.1 26-27|0.2.1 24-25|0.2.0 22-23|0.2.0.0 19-20|0.2.0.1 18-19|0.2.0.1.1.0 17-18|0.2.0.1.2 16-17|0.2.0.1.1 13-14|0.2.1.1.0.1.0.0.0 11-12|0.2.1.1.0.1.0.0 9-10|0.2.1.1.0.1.0.1 8-9|0.2.1.1.0.1.0 7-8|0.2.1.1.0.1 6-7|0.2.1.1.0 5-6|0.2.1.1.0.0 3-4|0.2.1.0 1-2|0.2.0.1.1.0.0.0+0.2.0.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:31.870
# ::node	0	introduce-02	35-36
# ::node	0.0	air	38-39
# ::node	0.1	home	43-44
# ::node	0.2	or	34-35
# ::node	0.2.0	buy-01	24-25
# ::node	0.2.0.0	promise-01	22-23
# ::node	0.2.0.1	purchase-01	19-20
# ::node	0.2.0.1.0	sophistication	40-41
# ::node	0.2.0.1.1	or	16-17
# ::node	0.2.0.1.1.0	prize-01	18-19
# ::node	0.2.0.1.1.0.0	date-entity	1-2
# ::node	0.2.0.1.1.0.0.0	10	1-2
# ::node	0.2.0.1.2	2	17-18
# ::node	0.2.1	save-02	26-27
# ::node	0.2.1.0	22	3-4
# ::node	0.2.1.1	you	27-28
# ::node	0.2.1.1.0	shop-01	6-7
# ::node	0.2.1.1.0.0	saturday	5-6
# ::node	0.2.1.1.0.1	spree	7-8
# ::node	0.2.1.1.0.1.0	give-01	8-9
# ::node	0.2.1.1.0.1.0.0	chance	11-12
# ::node	0.2.1.1.0.1.0.0.0	pick-01	13-14
# ::node	0.2.1.1.0.1.0.1	you	9-10
# ::node	0.2.1.1.1	time	28-29
# ::node	0.2.1.2	around	31-32
# ::node	0.2.1.2.0	house	33-34
# ::node	0.2.2	energy	30-31
# ::node	0.3	and	29-30
# ::root	0	introduce-02
# ::edge	and	op1	introduce-02	0.3	0	
# ::edge	around	op1	house	0.2.1.2	0.2.1.2.0	
# ::edge	buy-01	ARG1	or	0.2.0	0.2	
# ::edge	chance	topic	pick-01	0.2.1.1.0.1.0.0	0.2.1.1.0.1.0.0.0	
# ::edge	date-entity	month	10	0.2.0.1.1.0.0	0.2.0.1.1.0.0.0	
# ::edge	give-01	ARG0	spree	0.2.1.1.0.1.0	0.2.1.1.0.1	
# ::edge	give-01	ARG1	chance	0.2.1.1.0.1.0	0.2.1.1.0.1.0.0	
# ::edge	give-01	ARG2	you	0.2.1.1.0.1.0	0.2.1.1.0.1.0.1	
# ::edge	introduce-02	ARG1	air	0	0.0	
# ::edge	introduce-02	ARG2	home	0	0.1	
# ::edge	or	op1	prize-01	0.2.0.1.1	0.2.0.1.1.0	
# ::edge	or	op1	save-02	0.2	0.2.1	
# ::edge	or	op2	energy	0.2	0.2.2	
# ::edge	or	op2	purchase-01	0.2.0.1.1	0.2.0.1	
# ::edge	or	op3	introduce-02	0.2	0	
# ::edge	prize-01	ARG0	date-entity	0.2.0.1.1.0	0.2.0.1.1.0.0	
# ::edge	promise-01	ARG1	buy-01	0.2.0.0	0.2.0	
# ::edge	purchase-01	ARG1	sophistication	0.2.0.1	0.2.0.1.0	
# ::edge	purchase-01	ARG2	buy-01	0.2.0.1	0.2.0	
# ::edge	purchase-01	quant	2	0.2.0.1	0.2.0.1.2	
# ::edge	save-02	ARG0	22	0.2.1	0.2.1.0	
# ::edge	save-02	ARG2	you	0.2.1	0.2.1.1	
# ::edge	save-02	location	around	0.2.1	0.2.1.2	
# ::edge	shop-01	ARG0	you	0.2.1.1.0	0.2.1.1	
# ::edge	shop-01	ARG1	saturday	0.2.1.1.0	0.2.1.1.0.0	
# ::edge	spree	mod	shop-01	0.2.1.1.0.1	0.2.1.1.0	
# ::edge	time	mod	you	0.2.1.1.1	0.2.1.1	
(i / introduce-02 
      :ARG1 (a / air) 
      :ARG2 (h / home) 
      :op-of (o / or 
            :ARG1-of (b / buy-01 
                  :ARG1-of (p / promise-01) 
                  :ARG2-of (p2 / purchase-01 
                        :ARG1 (s / sophistication) 
                        :op-of (o2 / or 
                              :op1 (p3 / prize-01 
                                    :ARG0 (d / date-entity 
                                          :month 10))) 
                        :quant 2)) 
            :op1 (s2 / save-02 
                  :ARG0 22 
                  :ARG2 (y / you 
                        :ARG0-of (s4 / shop-01 
                              :ARG1 (s5 / saturday) 
                              :mod-of (s3 / spree 
                                    :ARG0-of (g / give-01 
                                          :ARG1 (c / chance 
                                                :topic (p4 / pick-01)) 
                                          :ARG2 (y2 / you)))) 
                        :mod-of (t / time)) 
                  :location (a2 / around 
                        :op1 (h2 / house))) 
            :op2 (e / energy)) 
      :op-of (a3 / and))

# ::snt mr krenz promised that there would be a full examination of the past mistakes made by the party for next months special congress
# ::tok mr krenz promised that there would be a full examination of the past mistakes made by the party for next months special congress
# ::alignments 22-23|0.0.1.0+0.0.1+0.0 21-22|0.0.0 20-21|0.1.0.0+0.1.0 19-20|0.1.0.0.0 17-18|0.1.3 13-14|0.1.1 12-13|0.1.1.0 9-10|0.1 8-9|0.1.2 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:31.997
# ::node	0	promise-01	2-3
# ::node	0.0	government-organization	22-23
# ::node	0.0.0	special	21-22
# ::node	0.0.1	name	22-23
# ::node	0.0.1.0	"Congress"	22-23
# ::node	0.1	examine-01	9-10
# ::node	0.1.0	temporal-quantity	20-21
# ::node	0.1.0.0	month	20-21
# ::node	0.1.0.0.0	next	19-20
# ::node	0.1.1	mistake-01	13-14
# ::node	0.1.1.0	past	12-13
# ::node	0.1.2	full	8-9
# ::node	0.1.3	party	17-18
# ::root	0	promise-01
# ::edge	examine-01	ARG0	temporal-quantity	0.1	0.1.0	
# ::edge	examine-01	ARG1	mistake-01	0.1	0.1.1	
# ::edge	examine-01	mod	full	0.1	0.1.2	
# ::edge	government-organization	mod	special	0.0	0.0.0	
# ::edge	government-organization	name	name	0.0	0.0.1	
# ::edge	mistake-01	time	past	0.1.1	0.1.1.0	
# ::edge	month	mod	next	0.1.0.0	0.1.0.0.0	
# ::edge	name	op1	"Congress"	0.0.1	0.0.1.0	
# ::edge	party	name	examine-01	0.1.3	0.1	
# ::edge	promise-01	ARG0	government-organization	0	0.0	
# ::edge	promise-01	ARG1	examine-01	0	0.1	
# ::edge	temporal-quantity	unit	month	0.1.0	0.1.0.0	
(p3 / promise-01 
      :ARG0 (g / government-organization 
            :mod (s / special) 
            :name (n / name 
                  :op1 "Congress")) 
      :ARG1 (e / examine-01 
            :ARG0 (t / temporal-quantity 
                  :unit (m / month 
                        :mod (n2 / next))) 
            :ARG1 (m2 / mistake-01 
                  :time (p2 / past)) 
            :mod (f / full) 
            :name-of (p / party)))

# ::snt in the course of this i shall return to the remaining examples of apparently altruistic behaviour that i gave in chapter 1 and which i promised to explain
# ::tok in the course of this i shall return to the remaining examples of apparently altruistic behaviour that i gave in chapter 1 and which i promised to explain
# ::alignments 27-28|0.0.2 25-26|0.0 24-25|0.0.0 22-23|0 21-22|0.0.1.0.0.0.0 20-21|0.0.0.0 17-18|0.0.1 15-16|0.0.1.0 13-14|0.0.2.2 11-12|0.0.1.0.0 10-11|0.0.1.0.0.0 5-6|0.0.2.0 4-5|0.0.2.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:32.546
# ::node	0	and	22-23
# ::node	0.0	promise-01	25-26
# ::node	0.0.0	i	24-25
# ::node	0.0.0.0	chapter	20-21
# ::node	0.0.1	i	17-18
# ::node	0.0.1.0	behave-01	15-16
# ::node	0.0.1.0.0	example	11-12
# ::node	0.0.1.0.0.0	remain-01	10-11
# ::node	0.0.1.0.0.0.0	1	21-22
# ::node	0.0.2	explain-01	27-28
# ::node	0.0.2.0	i	5-6
# ::node	0.0.2.1	this	4-5
# ::node	0.0.2.2	apparent	13-14
# ::root	0	and
# ::edge	and	op1	promise-01	0	0.0	
# ::edge	apparent	op1	explain-01	0.0.2.2	0.0.2	
# ::edge	behave-01	ARG0	i	0.0.1.0	0.0.1	
# ::edge	behave-01	ARG1	example	0.0.1.0	0.0.1.0.0	
# ::edge	chapter	poss	i	0.0.0.0	0.0.0	
# ::edge	explain-01	ARG0	i	0.0.2	0.0.2.0	
# ::edge	explain-01	ARG1	this	0.0.2	0.0.2.1	
# ::edge	promise-01	ARG0	i	0.0	0.0.0	
# ::edge	promise-01	ARG1	i	0.0	0.0.1	
# ::edge	promise-01	ARG2	explain-01	0.0	0.0.2	
# ::edge	remain-01	ARG0	1	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	remain-01	ARG1	example	0.0.1.0.0.0	0.0.1.0.0	
(a / and 
      :op1 (p / promise-01 
            :ARG0 (i / i 
                  :poss-of (c / chapter)) 
            :ARG1 (i2 / i 
                  :ARG0-of (b / behave-01 
                        :ARG1 (e2 / example 
                              :ARG1-of (r / remain-01 
                                    :ARG0 1)))) 
            :ARG2 (e / explain-01 
                  :ARG0 (i3 / i) 
                  :ARG1 (t / this) 
                  :op-of (a2 / apparent))))

# ::snt it was accepted that by promising to pay the extra 10300 the defendants secured benefits
# ::tok it was accepted that by promising to pay the extra 10300 the defendants secured benefits
# ::alignments 14-15|0.0.0 13-14|0.0.0.1 12-13|0.0.2 9-10|0 7-8|0.0 5-6|0.0.1 2-3|0.0.0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:32.680
# ::node	0	extra	9-10
# ::node	0.0	pay-01	7-8
# ::node	0.0.0	benefit-01	14-15
# ::node	0.0.0.0	it	0-1
# ::node	0.0.0.0.0	accept-01	2-3
# ::node	0.0.0.1	secure-01	13-14
# ::node	0.0.1	promise-01	5-6
# ::node	0.0.2	defendant	12-13
# ::root	0	extra
(e / extra 
      :ARG0-of (p / pay-01 
            :ARG1-of (b / benefit-01 
                  :ARG0 (i / it 
                        :ARG1-of (a / accept-01)) 
                  :ARG1-of (s / secure-01)) 
            :ARG1-of (p2 / promise-01) 
            :ARG3 (d / defendant)))

# ::snt which promises to be as big a success as zabat dash
# ::tok which promises to be as big a success as zabat dash
# ::alignments 7-8|0 5-6|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:32.693
# ::node	0	succeed-01	7-8
# ::node	0.0	big	5-6
# ::node	0.0.0	promise-01	1-2
# ::root	0	succeed-01
(s / succeed-01 
      :time-of (b / big 
            :ARG1-of (p / promise-01)))

# ::snt   robson declined an opportunity however to promise gascoigne promotion to the senior side for englands next friendly opposition still to be arranged after the abandonment of plans to visit dublin in march
# ::tok robson declined an opportunity however to promise gascoigne promotion to the senior side for englands next friendly opposition still to be arranged after the abandonment of plans to visit dublin in march
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:32.694
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt new poems by dannie abse are promised as is the collected john berryman
# ::tok new poems by dannie abse are promised as is the collected john berryman
# ::alignments 10-11|0.0 6-7|0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:32.714
# ::node	0	promise-01	6-7
# ::node	0.0	collect-01	10-11
# ::node	0.0.0	new	0-1
# ::root	0	promise-01
(p / promise-01 
      :ARG1-of (c / collect-01 
            :ARG0 (n / new)))

# ::snt mr robinson promised to amend it
# ::tok mr robinson promised to amend it
# ::alignments 5-6|0.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:32.721
# ::node	0	promise-01	2-3
# ::node	0.0	it	5-6
# ::root	0	promise-01
(p / promise-01 
      :op-of (i / it))

# ::snt where a party to a contract promises to make a payment to the other party in addition to the contract price in order to ensure that the other party completes his existing contractual obligations on time the paying partys benefit in obtaining thereby a practical advantage such as avoiding a penalty can amount to consideration for the additional payment provided that the additional payment was not given under economic duress or fraud
# ::tok where a party to a contract promises to make a payment to the other party in addition to the contract price in order to ensure that the other party completes his existing contractual obligations on time the paying partys benefit in obtaining thereby a practical advantage such as avoiding a penalty can amount to consideration for the additional payment provided that the additional payment was not given under economic duress or fraud
# ::alignments 70-71|0.0.0.1.2.0 68-69|0.0.0.1.1.0.1.0.0 66-67|0.0.0.1.2.0.0 62-63|0.0.0.1.0 59-60|0.0.0.1.2 57-58|0.0.0.1.3.0 54-55|0.0.0.1.1.0.1.2 52-53|0.0.0.1.1.0.1 51-52|0.0.0.1.1.0.1.1 50-51|0.0.0.1.1.0.1.0 48-49|0.0.0.1.1.0 46-47|0.0.0.1.1.0.0 45-46|0.0.0.1.1 44-45|0.0.0.1.1.1 41-42|0.0.0.1 39-40|0.0.0 37-38|0.0.0.1.3 35-36|0.0 33-34|0 32-33|0.2 31-32|0.3 28-29|0.1 27-28|0.1.0 24-25|0.4 20-21|0.4.1+0.4.1.0 19-20|0.4.1.0.0 14-15|0.0.0.0 13-14|0.0.0.0.0 6-7|0.4.0.0 5-6|0.4.0.0.0 2-3|0.4.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:34.610
# ::node	0	obligate-01	33-34
# ::node	0.0	time	35-36
# ::node	0.0.0	benefit-01	39-40
# ::node	0.0.0.0	party	14-15
# ::node	0.0.0.0.0	other	13-14
# ::node	0.0.0.1	obtain-01	41-42
# ::node	0.0.0.1.0	additional	62-63
# ::node	0.0.0.1.1	advantage	45-46
# ::node	0.0.0.1.1.0	avoid-01	48-49
# ::node	0.0.0.1.1.0.0	such	46-47
# ::node	0.0.0.1.1.0.1	amount	52-53
# ::node	0.0.0.1.1.0.1.0	penalize-01	50-51
# ::node	0.0.0.1.1.0.1.0.0	economy	68-69
# ::node	0.0.0.1.1.0.1.1	possible	51-52
# ::node	0.0.0.1.1.0.1.2	consider-02	54-55
# ::node	0.0.0.1.1.1	practical	44-45
# ::node	0.0.0.1.2	provide-01	59-60
# ::node	0.0.0.1.2.0	or	70-71
# ::node	0.0.0.1.2.0.0	give-01	66-67
# ::node	0.0.0.1.3	pay-01	37-38
# ::node	0.0.0.1.3.0	additional	57-58
# ::node	0.1	party	28-29
# ::node	0.1.0	other	27-28
# ::node	0.2	contract-02	32-33
# ::node	0.3	exist-01	31-32
# ::node	0.4	ensure-01	24-25
# ::node	0.4.0	party	2-3
# ::node	0.4.0.0	promise-01	6-7
# ::node	0.4.0.0.0	contract-02	5-6
# ::node	0.4.1	price-01	20-21
# ::node	0.4.1.0	thing	20-21
# ::node	0.4.1.0.0	contract-02	19-20
# ::root	0	obligate-01
# ::edge	advantage	example	avoid-01	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	advantage	mod	practical	0.0.0.1.1	0.0.0.1.1.1	
# ::edge	amount	beneficiary	penalize-01	0.0.0.1.1.0.1	0.0.0.1.1.0.1.0	
# ::edge	amount	op1	consider-02	0.0.0.1.1.0.1	0.0.0.1.1.0.1.2	
# ::edge	avoid-01	ARG0	such	0.0.0.1.1.0	0.0.0.1.1.0.0	
# ::edge	avoid-01	ARG1	amount	0.0.0.1.1.0	0.0.0.1.1.0.1	
# ::edge	benefit-01	ARG0	time	0.0.0	0.0	
# ::edge	benefit-01	ARG1	party	0.0.0	0.0.0.0	
# ::edge	benefit-01	ARG2	obtain-01	0.0.0	0.0.0.1	
# ::edge	contract-02	ARG1	obligate-01	0.2	0	
# ::edge	contract-02	ARG1	thing	0.4.1.0.0	0.4.1.0	
# ::edge	ensure-01	ARG0	party	0.4	0.4.0	
# ::edge	ensure-01	ARG1	obligate-01	0.4	0	
# ::edge	exist-01	ARG1	obligate-01	0.3	0	
# ::edge	give-01	ARG0	or	0.0.0.1.2.0.0	0.0.0.1.2.0	
# ::edge	obligate-01	ARG0	time	0	0.0	
# ::edge	obligate-01	ARG1	party	0	0.1	
# ::edge	obtain-01	ARG0	additional	0.0.0.1	0.0.0.1.0	
# ::edge	obtain-01	ARG1	advantage	0.0.0.1	0.0.0.1.1	
# ::edge	obtain-01	ARG2	provide-01	0.0.0.1	0.0.0.1.2	
# ::edge	party	mod	other	0.0.0.0	0.0.0.0.0	
# ::edge	party	mod	other	0.1	0.1.0	
# ::edge	pay-01	ARG1	additional	0.0.0.1.3	0.0.0.1.3.0	
# ::edge	pay-01	manner	obtain-01	0.0.0.1.3	0.0.0.1	
# ::edge	penalize-01	ARG1	economy	0.0.0.1.1.0.1.0	0.0.0.1.1.0.1.0.0	
# ::edge	possible	domain	amount	0.0.0.1.1.0.1.1	0.0.0.1.1.0.1	
# ::edge	price-01	ARG1	ensure-01	0.4.1	0.4	
# ::edge	price-01	ARG2	thing	0.4.1	0.4.1.0	
# ::edge	promise-01	ARG0	party	0.4.0.0	0.4.0	
# ::edge	promise-01	ARG1	contract-02	0.4.0.0	0.4.0.0.0	
# ::edge	provide-01	ARG1	or	0.0.0.1.2	0.0.0.1.2.0	
(o3 / obligate-01 
      :ARG0 (t / time 
            :ARG0-of (b / benefit-01 
                  :ARG1 (p8 / party 
                        :mod (o5 / other)) 
                  :ARG2 (o2 / obtain-01 
                        :ARG0 (a / additional) 
                        :ARG1 (a5 / advantage 
                              :example (a4 / avoid-01 
                                    :ARG0 (s / such) 
                                    :ARG1 (a3 / amount 
                                          :beneficiary (p3 / penalize-01 
                                                :ARG1 (e / economy)) 
                                          :domain-of (p2 / possible) 
                                          :op1 (c / consider-02))) 
                              :mod (p4 / practical)) 
                        :ARG2 (p / provide-01 
                              :ARG1 (o / or 
                                    :ARG0-of (g / give-01))) 
                        :manner-of (p5 / pay-01 
                              :ARG1 (a2 / additional))))) 
      :ARG1 (p6 / party 
            :mod (o4 / other)) 
      :ARG1-of (c2 / contract-02) 
      :ARG1-of (e2 / exist-01) 
      :ARG1-of (e3 / ensure-01 
            :ARG0 (p10 / party 
                  :ARG0-of (p9 / promise-01 
                        :ARG1 (c4 / contract-02))) 
            :ARG1-of (p7 / price-01 
                  :ARG2 (t2 / thing 
                        :ARG1-of (c3 / contract-02)))))

# ::snt mr houphouetboigny seeks to keep his critics at bay by legalising four opposition political parties and promising to stand down as president before elections at the end of the year
# ::tok mr houphouetboigny seeks to keep his critics at bay by legalising four opposition political parties and promising to stand down as president before elections at the end of the year
# ::alignments 29-30|0.0.0.0.0.1.1 23-24|0.0.0.0.1.0 22-23|0.0.0.0.1 21-22|0.0.0.0.1.1.1+0.0.0.0.1.1 19-20|0.0.0.0.1.1.0 16-17|0.0.0.0 15-16|0.0.0.0.0 14-15|0.0.0 13-14|0.0 12-13|0 11-12|0.1 10-11|0.0.0.0.0.1 6-7|0.0.0.0.0.1.0 2-3|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:34.738
# ::node	0	oppose-01	12-13
# ::node	0.0	politics	13-14
# ::node	0.0.0	party	14-15
# ::node	0.0.0.0	promise-01	16-17
# ::node	0.0.0.0.0	and	15-16
# ::node	0.0.0.0.0.0	seek-01	2-3
# ::node	0.0.0.0.0.1	legalize-01	10-11
# ::node	0.0.0.0.0.1.0	critic	6-7
# ::node	0.0.0.0.0.1.1	year	29-30
# ::node	0.0.0.0.1	before	22-23
# ::node	0.0.0.0.1.0	elect-01	23-24
# ::node	0.0.0.0.1.1	have-org-role-91	21-22
# ::node	0.0.0.0.1.1.0	down	19-20
# ::node	0.0.0.0.1.1.1	president	21-22
# ::node	0.1	4	11-12
# ::root	0	oppose-01
# ::edge	and	op1	seek-01	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	and	op2	legalize-01	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	and	op3	promise-01	0.0.0.0.0	0.0.0.0	
# ::edge	before	op1	elect-01	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	have-org-role-91	ARG1	down	0.0.0.0.1.1	0.0.0.0.1.1.0	
# ::edge	have-org-role-91	ARG2	president	0.0.0.0.1.1	0.0.0.0.1.1.1	
# ::edge	have-org-role-91	time	before	0.0.0.0.1.1	0.0.0.0.1	
# ::edge	legalize-01	ARG0	critic	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	legalize-01	ARG1	year	0.0.0.0.0.1	0.0.0.0.0.1.1	
# ::edge	oppose-01	ARG1	politics	0	0.0	
# ::edge	oppose-01	quant	4	0	0.1	
# ::edge	party	mod	politics	0.0.0	0.0	
# ::edge	promise-01	ARG1	party	0.0.0.0	0.0.0	
# ::edge	promise-01	time	before	0.0.0.0	0.0.0.0.1	
(o / oppose-01 
      :ARG1 (p4 / politics 
            :mod-of (p3 / party 
                  :ARG1-of (p2 / promise-01 
                        :op-of (a / and 
                              :op1 (s / seek-01) 
                              :op2 (l / legalize-01 
                                    :ARG0 (c / critic) 
                                    :ARG1 (y / year))) 
                        :time (b / before 
                              :op1 (e / elect-01) 
                              :time-of (h / have-org-role-91 
                                    :ARG1 (d / down) 
                                    :ARG2 (p / president)))))) 
      :quant 4)

# ::snt ill see to everything i promise
# ::tok ill see to everything i promise
# ::alignments 5-6|0.0 4-5|0.0.0 3-4|0.1 1-2|0 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:34.763
# ::node	0	see-01	1-2
# ::node	0.0	promise-01	5-6
# ::node	0.0.0	i	4-5
# ::node	0.1	everything	3-4
# ::node	0.2	ill-41	0-1
# ::root	0	see-01
# ::edge	ill-41	ARG1	see-01	0.2	0	
# ::edge	promise-01	ARG0	i	0.0	0.0.0	
# ::edge	see-01	ARG0	promise-01	0	0.0	
# ::edge	see-01	ARG1	everything	0	0.1	
(s / see-01 
      :ARG0 (p / promise-01 
            :ARG0 (i / i)) 
      :ARG1 (e / everything) 
      :ARG1-of (i2 / ill-41))

# ::snt british rail promised to consider a station at kidlington provided other authorities helped with the cost
# ::tok british rail promised to consider a station at kidlington provided other authorities helped with the cost
# ::alignments 15-16|0 12-13|0.0.1 11-12|0.0.1.0 10-11|0.0.1.0.0 9-10|0.0 6-7|0.0.0.0 4-5|0.0.0 2-3|0.0.0.1 0-2|0.0.0.1.0.0.0+0.0.0.1.0.0.1+0.0.0.1.0.0+0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:34.908
# ::node	0	cost-01	15-16
# ::node	0.0	provide-01	9-10
# ::node	0.0.0	consider-02	4-5
# ::node	0.0.0.0	station	6-7
# ::node	0.0.0.1	promise-01	2-3
# ::node	0.0.0.1.0	organization	0-2
# ::node	0.0.0.1.0.0	name	0-2
# ::node	0.0.0.1.0.0.0	"rail"	0-2
# ::node	0.0.0.1.0.0.1	"british"	0-2
# ::node	0.0.1	help-01	12-13
# ::node	0.0.1.0	authority	11-12
# ::node	0.0.1.0.0	other	10-11
# ::root	0	cost-01
(c / cost-01 
      :ARG0-of (p / provide-01 
            :ARG1 (c2 / consider-02 
                  :ARG1 (s / station) 
                  :ARG1-of (p2 / promise-01 
                        :ARG0 (o2 / organization 
                              :name (n / name 
                                    :op1 "rail" 
                                    :op2 "british")))) 
            :ARG2 (h / help-01 
                  :ARG0 (a / authority 
                        :mod (o / other)))))

# ::snt boogie down productions headed by the selfstyled krsi promised to be cleverer and brighter than the rest but the new album is a disappointment
# ::tok boogie down productions headed by the selfstyled krsi promised to be cleverer and brighter than the rest but the new album is a disappointment
# ::alignments 23-24|0.2 20-21|0.1 19-20|0.1.0 17-18|0 16-17|0.0 12-13|0.2.1 8-9|0.2.1.0 1-2|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:35.102
# ::node	0	contrast-01	17-18
# ::node	0.0	rest	16-17
# ::node	0.1	album	20-21
# ::node	0.1.0	new	19-20
# ::node	0.2	disappoint-01	23-24
# ::node	0.2.0	down	1-2
# ::node	0.2.1	and	12-13
# ::node	0.2.1.0	promise-01	8-9
# ::root	0	contrast-01
# ::edge	album	mod	new	0.1	0.1.0	
# ::edge	contrast-01	ARG1	rest	0	0.0	
# ::edge	contrast-01	ARG2	album	0	0.1	
# ::edge	contrast-01	condition	disappoint-01	0	0.2	
# ::edge	disappoint-01	ARG0	down	0.2	0.2.0	
# ::edge	disappoint-01	ARG1	and	0.2	0.2.1	
# ::edge	promise-01	ARG1	and	0.2.1.0	0.2.1	
(c / contrast-01 
      :ARG1 (r / rest) 
      :ARG2 (a / album 
            :mod (n / new)) 
      :condition (d / disappoint-01 
            :ARG0 (d2 / down) 
            :ARG1 (a2 / and 
                  :ARG1-of (p / promise-01))))

# ::snt barry told me that the council have been promising to mend the fences doors and windows for years but the inside looked magical
# ::tok barry told me that the council have been promising to mend the fences doors and windows for years but the inside looked magical
# ::alignments 21-22|0.1 20-21|0.1.1 18-19|0 17-18|0.1.0.0+0.1.0 15-16|0.0.0.0.0.0 14-15|0.0.0.0.0 13-14|0.0.0.0.1 12-13|0.0.0.0.1.0 10-11|0.0.0.0 8-9|0.0 5-6|0.0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:35.747
# ::node	0	contrast-01	18-19
# ::node	0.0	promise-01	8-9
# ::node	0.0.0	council	5-6
# ::node	0.0.0.0	mend-01	10-11
# ::node	0.0.0.0.0	and	14-15
# ::node	0.0.0.0.0.0	window	15-16
# ::node	0.0.0.0.1	door	13-14
# ::node	0.0.0.0.1.0	fence	12-13
# ::node	0.0.1	tell-01	1-2
# ::node	0.1	look-01	21-22
# ::node	0.1.0	temporal-quantity	17-18
# ::node	0.1.0.0	year	17-18
# ::node	0.1.1	inside	20-21
# ::root	0	contrast-01
# ::edge	and	op1	window	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	contrast-01	ARG1	promise-01	0	0.0	
# ::edge	contrast-01	ARG2	look-01	0	0.1	
# ::edge	door	mod	fence	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	look-01	ARG0	temporal-quantity	0.1	0.1.0	
# ::edge	look-01	ARG1	inside	0.1	0.1.1	
# ::edge	mend-01	ARG0	council	0.0.0.0	0.0.0	
# ::edge	mend-01	ARG1	and	0.0.0.0	0.0.0.0.0	
# ::edge	mend-01	ARG2	door	0.0.0.0	0.0.0.0.1	
# ::edge	promise-01	ARG0	council	0.0	0.0.0	
# ::edge	tell-01	ARG1	promise-01	0.0.1	0.0	
# ::edge	temporal-quantity	unit	year	0.1.0	0.1.0.0	
(c / contrast-01 
      :ARG1 (p / promise-01 
            :ARG0 (c2 / council 
                  :ARG0-of (m / mend-01 
                        :ARG1 (a / and 
                              :op1 (w / window)) 
                        :ARG2 (d / door 
                              :mod (f / fence)))) 
            :ARG1-of (t2 / tell-01)) 
      :ARG2 (l / look-01 
            :ARG0 (t / temporal-quantity 
                  :unit (y / year)) 
            :ARG1 (i / inside)))

# ::snt who at the outset of the campaign promised not to pander to pressure groups now says that as mayor he would have mr arafat arrested as an accomplice to terrorism
# ::tok who at the outset of the campaign promised not to pander to pressure groups now says that as mayor he would have mr arafat arrested as an accomplice to terrorism
# ::alignments 29-30|0.0.0.0.1 27-28|0.0.2.0 24-25|0.0.2 19-20|0.0 18-19|0.0.1.0+0.0.1 15-16|0 14-15|0.2 13-14|0.1 12-13|0.1.0 7-8|0.0.0 6-7|0.0.0.0 3-4|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:35.881
# ::node	0	say-01	15-16
# ::node	0.0	he	19-20
# ::node	0.0.0	promise-01	7-8
# ::node	0.0.0.0	campaign-01	6-7
# ::node	0.0.0.0.0	outset	3-4
# ::node	0.0.0.0.1	terrorism	29-30
# ::node	0.0.1	have-org-role-91	18-19
# ::node	0.0.1.0	mayor	18-19
# ::node	0.0.2	arrest-01	24-25
# ::node	0.0.2.0	accomplice	27-28
# ::node	0.1	group	13-14
# ::node	0.1.0	pressure-01	12-13
# ::node	0.2	now	14-15
# ::root	0	say-01
# ::edge	arrest-01	ARG1	he	0.0.2	0.0	
# ::edge	arrest-01	time	accomplice	0.0.2	0.0.2.0	
# ::edge	campaign-01	ARG0	outset	0.0.0.0	0.0.0.0.0	
# ::edge	campaign-01	ARG1	terrorism	0.0.0.0	0.0.0.0.1	
# ::edge	have-org-role-91	ARG0	he	0.0.1	0.0	
# ::edge	have-org-role-91	ARG2	mayor	0.0.1	0.0.1.0	
# ::edge	pressure-01	ARG0	group	0.1.0	0.1	
# ::edge	promise-01	ARG0	he	0.0.0	0.0	
# ::edge	promise-01	ARG1	campaign-01	0.0.0	0.0.0.0	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	group	0	0.1	
# ::edge	say-01	time	now	0	0.2	
(s / say-01 
      :ARG0 (h / he 
            :ARG0-of (p2 / promise-01 
                  :ARG1 (c / campaign-01 
                        :ARG0 (o / outset) 
                        :ARG1 (t / terrorism))) 
            :ARG0-of (h2 / have-org-role-91 
                  :ARG2 (m / mayor)) 
            :ARG1-of (a2 / arrest-01 
                  :time (a / accomplice))) 
      :ARG1 (g / group 
            :ARG0-of (p / pressure-01)) 
      :time (n / now))

# ::snt they promised to elect a president by 7 november thus ending the preposterous existence of two rival cabinets which have governed against each other for more than a year
# ::tok they promised to elect a president by 7 november thus ending the preposterous existence of two rival cabinets which have governed against each other for more than a year
# ::alignments 28-29|0.2.1.0.0 23-24|0.0.0 22-23|0.0 20-21|0.1.0.1 16-17|0.2.2 15-16|0.3 13-14|0.1.0 12-13|0.1.0.2 10-11|0.1 8-9|0.4.0+0.4 7-8|0.1.0.0 5-6|0.2.1+0.2.1.0 3-4|0.2 1-2|0 0-1|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:36.456
# ::node	0	promise-01	1-2
# ::node	0.0	each	22-23
# ::node	0.0.0	other	23-24
# ::node	0.1	end-01	10-11
# ::node	0.1.0	exist-01	13-14
# ::node	0.1.0.0	7	7-8
# ::node	0.1.0.1	govern-01	20-21
# ::node	0.1.0.2	preposterous	12-13
# ::node	0.2	elect-01	3-4
# ::node	0.2.0	they	0-1
# ::node	0.2.1	president	5-6
# ::node	0.2.1.0	have-org-role-91	5-6
# ::node	0.2.1.0.0	year	28-29
# ::node	0.2.2	rival-01	16-17
# ::node	0.3	2	15-16
# ::node	0.4	date-entity	8-9
# ::node	0.4.0	11	8-9
# ::root	0	promise-01
# ::edge	2	op1	promise-01	0.3	0	
# ::edge	date-entity	month	11	0.4	0.4.0	
# ::edge	elect-01	ARG0	they	0.2	0.2.0	
# ::edge	elect-01	ARG1	president	0.2	0.2.1	
# ::edge	end-01	ARG1	exist-01	0.1	0.1.0	
# ::edge	exist-01	ARG1	7	0.1.0	0.1.0.0	
# ::edge	govern-01	ARG1	exist-01	0.1.0.1	0.1.0	
# ::edge	have-org-role-91	ARG0	year	0.2.1.0	0.2.1.0.0	
# ::edge	have-org-role-91	ARG2	president	0.2.1.0	0.2.1	
# ::edge	other	mod	each	0.0.0	0.0	
# ::edge	preposterous	domain	exist-01	0.1.0.2	0.1.0	
# ::edge	promise-01	ARG0	each	0	0.0	
# ::edge	promise-01	ARG1	end-01	0	0.1	
# ::edge	promise-01	ARG2	elect-01	0	0.2	
# ::edge	promise-01	time	date-entity	0	0.4	
# ::edge	rival-01	ARG1	elect-01	0.2.2	0.2	
(p3 / promise-01 
      :ARG0 (e / each 
            :mod-of (o / other)) 
      :ARG1 (e3 / end-01 
            :ARG1 (e2 / exist-01 
                  :ARG1 7 
                  :ARG1-of (g / govern-01) 
                  :domain-of (p / preposterous))) 
      :ARG2 (e4 / elect-01 
            :ARG0 (t / they) 
            :ARG1 (p2 / president 
                  :ARG2-of (h / have-org-role-91 
                        :ARG0 (y / year))) 
            :ARG1-of (r / rival-01)) 
      :op-of 2 
      :time (d / date-entity 
            :month 11))

# ::snt 95 this new edition revised updated and extended for the 21st century promises to teach you how to calculate draw and eventually interpret a horoscope and is plainly making a bid to be included in the national curriculum
# ::tok 95 this new edition revised updated and extended for the 21st century promises to teach you how to calculate draw and eventually interpret a horoscope and is plainly making a bid to be included in the national curriculum
# ::alignments 37-38|0.1.1 36-37|0.1.1.0 33-34|0.1 30-31|0.1.0 27-28|0.2.2.0 25-26|0.1.0.0 22-23|0.1.0.0.0.0.0.1 21-22|0.1.0.0.0.0.0.1.1 20-21|0.1.0.0.0.0.0 19-20|0.1.0.0.0.0.0.0.0 18-19|0.1.0.0.0.0.0.0 15-16|0.1.0.0.0.0.1 14-15|0.1.0.0.0.0 12-13|0.1.0.0.0 7-8|0.0 6-7|0 5-6|0.2 4-5|0.2.2 3-4|0.2.0 2-3|0.2.3 1-2|0.1.0.0.0.0.0.1.0 0-1|0.2.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:37.556
# ::node	0	and	6-7
# ::node	0.0	extend-01	7-8
# ::node	0.1	include-01	33-34
# ::node	0.1.0	bid-01	30-31
# ::node	0.1.0.0	and	25-26
# ::node	0.1.0.0.0	promise-01	12-13
# ::node	0.1.0.0.0.0	teach-01	14-15
# ::node	0.1.0.0.0.0.0	and	20-21
# ::node	0.1.0.0.0.0.0.0	calculate-01	18-19
# ::node	0.1.0.0.0.0.0.0.0	draw-02	19-20
# ::node	0.1.0.0.0.0.0.1	interpret-01	22-23
# ::node	0.1.0.0.0.0.0.1.0	this	1-2
# ::node	0.1.0.0.0.0.0.1.1	eventual	21-22
# ::node	0.1.0.0.0.0.1	you	15-16
# ::node	0.1.1	curriculum	37-38
# ::node	0.1.1.0	nation	36-37
# ::node	0.2	update-01	5-6
# ::node	0.2.0	edition	3-4
# ::node	0.2.1	95	0-1
# ::node	0.2.2	revise-01	4-5
# ::node	0.2.2.0	plain	27-28
# ::node	0.2.3	new	2-3
# ::root	0	and
# ::edge	and	op1	calculate-01	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	and	op1	promise-01	0.1.0.0	0.1.0.0.0	
# ::edge	and	op1	update-01	0	0.2	
# ::edge	and	op2	bid-01	0.1.0.0	0.1.0	
# ::edge	and	op2	interpret-01	0.1.0.0.0.0.0	0.1.0.0.0.0.0.1	
# ::edge	bid-01	ARG1	include-01	0.1.0	0.1	
# ::edge	calculate-01	ARG1	draw-02	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0.0.0	
# ::edge	curriculum	mod	nation	0.1.1	0.1.1.0	
# ::edge	extend-01	ARG1	and	0.0	0	
# ::edge	include-01	ARG1	and	0.1	0	
# ::edge	include-01	ARG2	curriculum	0.1	0.1.1	
# ::edge	interpret-01	ARG1	this	0.1.0.0.0.0.0.1	0.1.0.0.0.0.0.1.0	
# ::edge	interpret-01	time	eventual	0.1.0.0.0.0.0.1	0.1.0.0.0.0.0.1.1	
# ::edge	promise-01	ARG2	teach-01	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	revise-01	ARG0	plain	0.2.2	0.2.2.0	
# ::edge	revise-01	ARG1	update-01	0.2.2	0.2	
# ::edge	teach-01	ARG0	and	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	teach-01	ARG1	you	0.1.0.0.0.0	0.1.0.0.0.0.1	
# ::edge	update-01	ARG0	edition	0.2	0.2.0	
# ::edge	update-01	ARG1	95	0.2	0.2.1	
# ::edge	update-01	mod	new	0.2	0.2.3	
(a3 / and 
      :ARG1-of (e2 / extend-01) 
      :ARG1-of (i / include-01 
            :ARG1-of (b / bid-01 
                  :op-of (a / and 
                        :op1 (p2 / promise-01 
                              :ARG2 (t / teach-01 
                                    :ARG0 (a2 / and 
                                          :op1 (c2 / calculate-01 
                                                :ARG1 (d / draw-02)) 
                                          :op2 (i2 / interpret-01 
                                                :ARG1 (t2 / this) 
                                                :time (e / eventual))) 
                                    :ARG1 (y / you))))) 
            :ARG2 (c / curriculum 
                  :mod (n / nation))) 
      :op1 (u / update-01 
            :ARG0 (e3 / edition) 
            :ARG1 95 
            :ARG1-of (r / revise-01 
                  :ARG0 (p / plain)) 
            :mod (n2 / new)))

# ::snt here minnowfilled ditches run cold and clear over beds of emerald starwort delicate as seaweed in a rock pool and  promising with their mossy winter growth the washed green brilliance of the coming irish spring
# ::tok here minnowfilled ditches run cold and clear over beds of emerald starwort delicate as seaweed in a rock pool and promising with their mossy winter growth the washed green brilliance of the coming irish spring
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:37.558
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the ballot for the executive and officers of the 1922 committee of tory mps promises to be as bitter as the main bout on 5 december
# ::tok the ballot for the executive and officers of the 1922 committee of tory mps promises to be as bitter as the main bout on 5 december
# ::alignments 25-26|0.1.1.0+0.1.1 24-25|0.1.1.1 21-22|0.1.0.2 18-19|0.1 14-15|0 12-13|0.1.0.0.0.0+0.1.0.0.0+0.1.0.0 10-11|0.2 9-10|0.2.0.0+0.2.0 6-7|0.1.0.1+0.1.0 5-6|0.0.0 4-5|0.0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:37.890
# ::node	0	promise-01	14-15
# ::node	0.0	ballot	1-2
# ::node	0.0.0	and	5-6
# ::node	0.0.0.0	executive	4-5
# ::node	0.1	bitter	18-19
# ::node	0.1.0	have-org-role-91	6-7
# ::node	0.1.0.0	political-party	12-13
# ::node	0.1.0.0.0	name	12-13
# ::node	0.1.0.0.0.0	"Tory"	12-13
# ::node	0.1.0.1	officer	6-7
# ::node	0.1.0.2	main	21-22
# ::node	0.1.1	date-entity	25-26
# ::node	0.1.1.0	12	25-26
# ::node	0.1.1.1	5	24-25
# ::node	0.2	committee	10-11
# ::node	0.2.0	date-entity	9-10
# ::node	0.2.0.0	1922	9-10
# ::root	0	promise-01
# ::edge	and	op1	ballot	0.0.0	0.0	
# ::edge	and	op2	executive	0.0.0	0.0.0.0	
# ::edge	bitter	time	date-entity	0.1	0.1.1	
# ::edge	committee	time	date-entity	0.2	0.2.0	
# ::edge	date-entity	month	12	0.1.1	0.1.1.0	
# ::edge	date-entity	quant	5	0.1.1	0.1.1.1	
# ::edge	date-entity	year	1922	0.2.0	0.2.0.0	
# ::edge	have-org-role-91	ARG0	bitter	0.1.0	0.1	
# ::edge	have-org-role-91	ARG1	political-party	0.1.0	0.1.0.0	
# ::edge	have-org-role-91	ARG2	officer	0.1.0	0.1.0.1	
# ::edge	have-org-role-91	time	main	0.1.0	0.1.0.2	
# ::edge	name	op1	"Tory"	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	political-party	name	name	0.1.0.0	0.1.0.0.0	
# ::edge	promise-01	ARG0	ballot	0	0.0	
# ::edge	promise-01	ARG1	bitter	0	0.1	
# ::edge	promise-01	ARG2	committee	0	0.2	
(p / promise-01 
      :ARG0 (b2 / ballot 
            :op-of (a / and 
                  :op1 (e / executive))) 
      :ARG1 (b / bitter 
            :ARG0-of (h / have-org-role-91 
                  :ARG1 (p2 / political-party 
                        :name (n / name 
                              :op1 "Tory")) 
                  :ARG2 (o / officer) 
                  :time (m / main)) 
            :time (d / date-entity 
                  :month 12 
                  :quant 5)) 
      :ARG2 (c / committee 
            :time (d2 / date-entity 
                  :year 1922)))

# ::snt your mother is a remarkable woman and i have promised to come again
# ::tok your mother is a remarkable woman and i have promised to come again
# ::alignments 12-13|0.1.0.0 9-10|0.0 7-8|0.1 6-7|0 5-6|0.0.0 4-5|0.0.0.0 1-2|0.1.0.1+0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:38.069
# ::node	0	and	6-7
# ::node	0.0	promise-01	9-10
# ::node	0.0.0	woman	5-6
# ::node	0.0.0.0	remarkable	4-5
# ::node	0.1	i	7-8
# ::node	0.1.0	have-rel-role-91	1-2
# ::node	0.1.0.0	again	12-13
# ::node	0.1.0.1	mother	1-2
# ::root	0	and
# ::edge	and	op1	i	0	0.1	
# ::edge	have-rel-role-91	ARG0	again	0.1.0	0.1.0.0	
# ::edge	have-rel-role-91	ARG1	i	0.1.0	0.1	
# ::edge	have-rel-role-91	ARG2	mother	0.1.0	0.1.0.1	
# ::edge	promise-01	ARG0	and	0.0	0	
# ::edge	promise-01	ARG1	woman	0.0	0.0.0	
# ::edge	woman	mod	remarkable	0.0.0	0.0.0.0	
(a2 / and 
      :ARG0-of (p / promise-01 
            :ARG1 (w / woman 
                  :mod (r / remarkable))) 
      :op1 (i / i 
            :ARG1-of (h / have-rel-role-91 
                  :ARG0 (a / again) 
                  :ARG2 (m / mother))))

# ::snt general aoun shrewdly grasped this point and immediately demanded that the christian mps return home to explain themselves and to promise that they would not ratify the agreement
# ::tok general aoun shrewdly grasped this point and immediately demanded that the christian mps return home to explain themselves and to promise that they would not ratify the agreement
# ::alignments 27-28|0 25-26|0.1 22-23|0.1.0 20-21|0.1.1 18-19|0.1.1.1 16-17|0.1.1.1.1 14-15|0.1.1.0 11-12|0.1.1.0.0.0.0+0.1.1.0.0.0+0.1.1.0.0 8-9|0.1.1.1.0 7-8|0.1.1.1.0.1 6-7|0.1.1.1.0.0 5-6|0.1.1.1.0.0.0 4-5|0.1.1.1.0.0.0.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:38.282
# ::node	0	agree-01	27-28
# ::node	0.0	general	0-1
# ::node	0.1	ratify-01	25-26
# ::node	0.1.0	they	22-23
# ::node	0.1.1	promise-01	20-21
# ::node	0.1.1.0	home	14-15
# ::node	0.1.1.0.0	religious-group	11-12
# ::node	0.1.1.0.0.0	name	11-12
# ::node	0.1.1.0.0.0.0	"Christian"	11-12
# ::node	0.1.1.1	and	18-19
# ::node	0.1.1.1.0	demand-01	8-9
# ::node	0.1.1.1.0.0	and	6-7
# ::node	0.1.1.1.0.0.0	point	5-6
# ::node	0.1.1.1.0.0.0.0	this	4-5
# ::node	0.1.1.1.0.1	immediate	7-8
# ::node	0.1.1.1.1	explain-01	16-17
# ::root	0	agree-01
# ::edge	agree-01	ARG1	general	0	0.0	
# ::edge	and	op1	demand-01	0.1.1.1.0.0	0.1.1.1.0	
# ::edge	and	op1	promise-01	0.1.1.1	0.1.1	
# ::edge	demand-01	ARG1	and	0.1.1.1.0	0.1.1.1	
# ::edge	demand-01	time	immediate	0.1.1.1.0	0.1.1.1.0.1	
# ::edge	explain-01	ARG1	and	0.1.1.1.1	0.1.1.1	
# ::edge	home	mod	religious-group	0.1.1.0	0.1.1.0.0	
# ::edge	name	op1	"Christian"	0.1.1.0.0.0	0.1.1.0.0.0.0	
# ::edge	point	mod	this	0.1.1.1.0.0.0	0.1.1.1.0.0.0.0	
# ::edge	point	poss	and	0.1.1.1.0.0.0	0.1.1.1.0.0	
# ::edge	promise-01	ARG0	home	0.1.1	0.1.1.0	
# ::edge	promise-01	ARG1	ratify-01	0.1.1	0.1	
# ::edge	ratify-01	ARG0	they	0.1	0.1.0	
# ::edge	ratify-01	ARG1	agree-01	0.1	0	
# ::edge	religious-group	name	name	0.1.1.0.0	0.1.1.0.0.0	
(a / agree-01 
      :ARG1 (g / general) 
      :ARG1-of (r / ratify-01 
            :ARG0 (t / they) 
            :ARG1-of (p / promise-01 
                  :ARG0 (h / home 
                        :mod (r2 / religious-group 
                              :name (n / name 
                                    :op1 "Christian"))) 
                  :op-of (a2 / and 
                        :ARG1-of (d / demand-01 
                              :op-of (a3 / and 
                                    :poss-of (p2 / point 
                                          :mod (t2 / this))) 
                              :time (i / immediate)) 
                        :ARG1-of (e / explain-01)))))

# ::snt 90 as things developed the burden on the taxpayer promised to increase
# ::tok 90 as things developed the burden on the taxpayer promised to increase
# ::alignments 11-12|0.1.0 9-10|0.1.0.0 5-6|0.1 3-4|0 2-3|0.0 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:38.336
# ::node	0	develop-02	3-4
# ::node	0.0	thing	2-3
# ::node	0.1	burden-01	5-6
# ::node	0.1.0	increase-01	11-12
# ::node	0.1.0.0	promise-01	9-10
# ::node	0.2	90	0-1
# ::root	0	develop-02
# ::edge	burden-01	purpose	increase-01	0.1	0.1.0	
# ::edge	develop-02	ARG0	thing	0	0.0	
# ::edge	develop-02	ARG1	burden-01	0	0.1	
# ::edge	develop-02	ARG2	90	0	0.2	
# ::edge	promise-01	ARG2	increase-01	0.1.0.0	0.1.0	
(d / develop-02 
      :ARG0 (t / thing) 
      :ARG1 (b / burden-01 
            :purpose (i / increase-01 
                  :ARG2-of (p / promise-01))) 
      :ARG2 90)

# ::snt bronzed beeffed to be sighted on dynasty in luxury condos and in harrods with expensive cameras and too much money they are now the target of an introduction agency which promises to bring together peachycomplexioned jane seymours with hunky tom cruises
# ::tok bronzed beeffed to be sighted on dynasty in luxury condos and in harrods with expensive cameras and too much money they are now the target of an introduction agency which promises to bring together peachycomplexioned jane seymours with hunky tom cruises
# ::alignments 33-34|0.2.0.0.0.3 32-33|0.2.0.0.0 30-31|0.2.0.0 28-29|0.2 27-28|0 24-25|0.2.0 22-23|0.2.0.2 20-21|0.2.0.1 19-20|0.1.1 18-19|0.1.1.0 17-18|0.2.0.0.0.0 16-17|0.1 15-16|0.1.0 14-15|0.1.0.0 10-11|0.2.0.0.0.2 8-9|0.2.0.0.0.1 6-7|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:38.828
# ::node	0	introduce-02	27-28
# ::node	0.0	dynasty	6-7
# ::node	0.1	and	16-17
# ::node	0.1.0	camera	15-16
# ::node	0.1.0.0	expensive	14-15
# ::node	0.1.1	money	19-20
# ::node	0.1.1.0	much	18-19
# ::node	0.2	agency	28-29
# ::node	0.2.0	target-01	24-25
# ::node	0.2.0.0	promise-01	30-31
# ::node	0.2.0.0.0	bring-01	32-33
# ::node	0.2.0.0.0.0	too	17-18
# ::node	0.2.0.0.0.1	luxury	8-9
# ::node	0.2.0.0.0.2	and	10-11
# ::node	0.2.0.0.0.3	together	33-34
# ::node	0.2.0.1	they	20-21
# ::node	0.2.0.2	now	22-23
# ::root	0	introduce-02
# ::edge	agency	mod	introduce-02	0.2	0	
# ::edge	and	op1	camera	0.1	0.1.0	
# ::edge	and	op2	money	0.1	0.1.1	
# ::edge	bring-01	ARG0	too	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	bring-01	ARG1	luxury	0.2.0.0.0	0.2.0.0.0.1	
# ::edge	bring-01	ARG2	and	0.2.0.0.0	0.2.0.0.0.2	
# ::edge	bring-01	ARG3	together	0.2.0.0.0	0.2.0.0.0.3	
# ::edge	camera	mod	expensive	0.1.0	0.1.0.0	
# ::edge	introduce-02	ARG0	dynasty	0	0.0	
# ::edge	introduce-02	ARG1	and	0	0.1	
# ::edge	money	quant	much	0.1.1	0.1.1.0	
# ::edge	promise-01	ARG0	target-01	0.2.0.0	0.2.0	
# ::edge	promise-01	ARG1	bring-01	0.2.0.0	0.2.0.0.0	
# ::edge	target-01	ARG0	agency	0.2.0	0.2	
# ::edge	target-01	ARG1	they	0.2.0	0.2.0.1	
# ::edge	target-01	time	now	0.2.0	0.2.0.2	
(i / introduce-02 
      :ARG0 (d / dynasty) 
      :ARG1 (a2 / and 
            :op1 (c / camera 
                  :mod (e / expensive)) 
            :op2 (m / money 
                  :quant (m2 / much))) 
      :mod-of (a / agency 
            :ARG0-of (t2 / target-01 
                  :ARG0-of (p / promise-01 
                        :ARG1 (b / bring-01 
                              :ARG0 (t4 / too) 
                              :ARG1 (l / luxury) 
                              :ARG2 (a3 / and) 
                              :ARG3 (t / together))) 
                  :ARG1 (t3 / they) 
                  :time (n / now))))

# ::snt but as some financial institutions were promising support for the besieged tobacco to retailing and insurance giant others were adding their names to the bidding group
# ::tok but as some financial institutions were promising support for the besieged tobacco to retailing and insurance giant others were adding their names to the bidding group
# ::alignments 25-26|0.1.0.0.1 24-25|0.1.0.0.1.0 21-22|0.1.0.0.0 19-20|0.1.0.0 17-18|0.1.0.0.2.0.0 16-17|0.1.0.0.2.0.0.0 15-16|0.1.0.0.2.0 14-15|0.1.0.0.2 11-12|0.0 10-11|0.0.0 7-8|0.1.1 6-7|0.1 4-5|0.1.0 3-4|0.1.0.1 2-3|0.1.0.0.1.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:39.382
# ::node	0	contrast-01	0-1
# ::node	0.0	tobacco	11-12
# ::node	0.0.0	besiege-01	10-11
# ::node	0.1	promise-01	6-7
# ::node	0.1.0	institution	4-5
# ::node	0.1.0.0	add-02	19-20
# ::node	0.1.0.0.0	name	21-22
# ::node	0.1.0.0.1	group	25-26
# ::node	0.1.0.0.1.0	bid-01	24-25
# ::node	0.1.0.0.1.0.0	some	2-3
# ::node	0.1.0.0.2	and	14-15
# ::node	0.1.0.0.2.0	insure-02	15-16
# ::node	0.1.0.0.2.0.0	other	17-18
# ::node	0.1.0.0.2.0.0.0	giant	16-17
# ::node	0.1.0.1	finance	3-4
# ::node	0.1.1	support-01	7-8
# ::root	0	contrast-01
# ::edge	add-02	ARG0	institution	0.1.0.0	0.1.0	
# ::edge	add-02	ARG1	name	0.1.0.0	0.1.0.0.0	
# ::edge	add-02	ARG2	group	0.1.0.0	0.1.0.0.1	
# ::edge	and	op1	insure-02	0.1.0.0.2	0.1.0.0.2.0	
# ::edge	and	op2	add-02	0.1.0.0.2	0.1.0.0	
# ::edge	besiege-01	ARG1	tobacco	0.0.0	0.0	
# ::edge	bid-01	ARG0	group	0.1.0.0.1.0	0.1.0.0.1	
# ::edge	bid-01	ARG1	some	0.1.0.0.1.0	0.1.0.0.1.0.0	
# ::edge	contrast-01	ARG0	tobacco	0	0.0	
# ::edge	contrast-01	ARG1	promise-01	0	0.1	
# ::edge	institution	mod	finance	0.1.0	0.1.0.1	
# ::edge	insure-02	ARG1	other	0.1.0.0.2.0	0.1.0.0.2.0.0	
# ::edge	other	mod	giant	0.1.0.0.2.0.0	0.1.0.0.2.0.0.0	
# ::edge	promise-01	ARG0	institution	0.1	0.1.0	
# ::edge	promise-01	ARG1	support-01	0.1	0.1.1	
(c / contrast-01 
      :ARG0 (t / tobacco 
            :ARG1-of (b2 / besiege-01)) 
      :ARG1 (p / promise-01 
            :ARG0 (i2 / institution 
                  :ARG0-of (a / add-02 
                        :ARG1 (n / name) 
                        :ARG2 (g / group 
                              :ARG0-of (b / bid-01 
                                    :ARG1 (s2 / some))) 
                        :op-of (a2 / and 
                              :op1 (i / insure-02 
                                    :ARG1 (o / other 
                                          :mod (g2 / giant))))) 
                  :mod (f / finance)) 
            :ARG1 (s / support-01)))

# ::snt though he promised to back the proposals of the convention if there were substantial agreement  he privately assured carson that nothing would be done without ulsters consent and ulster strong in this assurance rejected any solution in advance
# ::tok though he promised to back the proposals of the convention if there were substantial agreement he privately assured carson that nothing would be done without ulsters consent and ulster strong in this assurance rejected any solution in advance
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:39.383
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the finns subsequently followed a policy of enlightened selfrestraint accepting the limitations that moscow was determined to impose on their foreign policy promising by treaty to fight to repel a german invasion of the soviet union through their territory and rejecting western economic aid
# ::tok the finns subsequently followed a policy of enlightened selfrestraint accepting the limitations that moscow was determined to impose on their foreign policy promising by treaty to fight to repel a german invasion of the soviet union through their territory and rejecting western economic aid
# ::alignments 43-44|0.0.0.0.1.0 42-43|0.0.0.0.1.0.0 41-42|0.0.0.0.1.0.1.0.0+0.0.0.0.1.0.1.0+0.0.0.0.1.0.1 39-40|0.0.0.0.1 38-39|0.1.0.2 35-36|0.1.0.0 31-32|0.1.0 26-27|0.1 24-25|0.1.1 22-23|0 21-22|0.0 20-21|0.0.1 17-18|0.0.0 15-16|0.0.0.0 11-12|0.0.0.0.0 9-10|0.0.0.0.0.0 7-8|0.1.0.1 5-6|0.0.0.0.0.0.0.0 3-4|0.0.0.0.0.0.0 2-3|0.0.0.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:39.768
# ::node	0	promise-01	22-23
# ::node	0.0	policy	21-22
# ::node	0.0.0	impose-01	17-18
# ::node	0.0.0.0	determine-01	15-16
# ::node	0.0.0.0.0	limit-01	11-12
# ::node	0.0.0.0.0.0	accept-01	9-10
# ::node	0.0.0.0.0.0.0	follow-01	3-4
# ::node	0.0.0.0.0.0.0.0	policy	5-6
# ::node	0.0.0.0.0.0.0.1	subsequent	2-3
# ::node	0.0.0.0.1	and	39-40
# ::node	0.0.0.0.1.0	aid-01	43-44
# ::node	0.0.0.0.1.0.0	economy	42-43
# ::node	0.0.0.0.1.0.1	world-region	41-42
# ::node	0.0.0.0.1.0.1.0	name	41-42
# ::node	0.0.0.0.1.0.1.0.0	"West"	41-42
# ::node	0.0.1	foreign	20-21
# ::node	0.1	fight-01	26-27
# ::node	0.1.0	invade-01	31-32
# ::node	0.1.0.0	union	35-36
# ::node	0.1.0.1	enlighten-01	7-8
# ::node	0.1.0.2	territory	38-39
# ::node	0.1.1	treaty	24-25
# ::root	0	promise-01
# ::edge	accept-01	ARG1	limit-01	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	aid-01	mod	economy	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	aid-01	mod	world-region	0.0.0.0.1.0	0.0.0.0.1.0.1	
# ::edge	and	op1	determine-01	0.0.0.0.1	0.0.0.0	
# ::edge	and	op2	aid-01	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	determine-01	ARG1	impose-01	0.0.0.0	0.0.0	
# ::edge	enlighten-01	ARG1	invade-01	0.1.0.1	0.1.0	
# ::edge	fight-01	ARG1	invade-01	0.1	0.1.0	
# ::edge	fight-01	instrument	treaty	0.1	0.1.1	
# ::edge	follow-01	ARG1	accept-01	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	follow-01	ARG2	policy	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	follow-01	mod	subsequent	0.0.0.0.0.0.0	0.0.0.0.0.0.0.1	
# ::edge	impose-01	ARG1	policy	0.0.0	0.0	
# ::edge	invade-01	ARG1	union	0.1.0	0.1.0.0	
# ::edge	invade-01	location	territory	0.1.0	0.1.0.2	
# ::edge	limit-01	ARG1	determine-01	0.0.0.0.0	0.0.0.0	
# ::edge	name	op1	"West"	0.0.0.0.1.0.1.0	0.0.0.0.1.0.1.0.0	
# ::edge	policy	mod	foreign	0.0	0.0.1	
# ::edge	promise-01	ARG1	policy	0	0.0	
# ::edge	promise-01	ARG2	fight-01	0	0.1	
# ::edge	world-region	name	name	0.0.0.0.1.0.1	0.0.0.0.1.0.1.0	
(p / promise-01 
      :ARG1 (p2 / policy 
            :ARG1-of (i2 / impose-01 
                  :ARG1-of (d / determine-01 
                        :ARG1-of (l / limit-01 
                              :ARG1-of (a3 / accept-01 
                                    :ARG1-of (f3 / follow-01 
                                          :ARG2 (p3 / policy) 
                                          :mod (s / subsequent)))) 
                        :op-of (a2 / and 
                              :op1 (a / aid-01 
                                    :mod (e / economy) 
                                    :mod (w / world-region 
                                          :name (n / name 
                                                :op1 "West")))))) 
            :mod (f2 / foreign)) 
      :ARG2 (f / fight-01 
            :ARG1 (i / invade-01 
                  :ARG1 (u / union) 
                  :ARG1-of (e2 / enlighten-01) 
                  :location (t / territory)) 
            :instrument (t2 / treaty)))

# ::snt john lister the welsh treasurer of the aaabaab promises that the payments will continue annually
# ::tok john lister the welsh treasurer of the aaabaab promises that the payments will continue annually
# ::alignments 13-14|0.0 11-12|0.0.0 8-9|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:39.784
# ::node	0	promise-01	8-9
# ::node	0.0	continue-01	13-14
# ::node	0.0.0	payment	11-12
# ::root	0	promise-01
# ::edge	continue-01	ARG0	payment	0.0	0.0.0	
# ::edge	promise-01	ARG1	continue-01	0	0.0	
(p2 / promise-01 
      :ARG1 (c / continue-01 
            :ARG0 (p / payment)))

# ::snt it follows that peoples interest in being able to bind themselves is the basis of a power to promise which they possess and of an obligation to keep promises they make
# ::tok it follows that peoples interest in being able to bind themselves is the basis of a power to promise which they possess and of an obligation to keep promises they make
# ::alignments 29-30|0.1.0 28-29|0.1 25-26|0 22-23|0.0.0.2 21-22|0.0.0 20-21|0.0 18-19|0.0.0.1 16-17|0.0.0.1.0 7-8|0.1.1.0 4-5|0.1.1 3-4|0.1.1.1 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:39.979
# ::node	0	obligate-01	25-26
# ::node	0.0	they	20-21
# ::node	0.0.0	possess-01	21-22
# ::node	0.0.0.0	it	0-1
# ::node	0.0.0.1	promise-01	18-19
# ::node	0.0.0.1.0	power	16-17
# ::node	0.0.0.2	and	22-23
# ::node	0.1	promise-01	28-29
# ::node	0.1.0	they	29-30
# ::node	0.1.1	interest-01	4-5
# ::node	0.1.1.0	possible	7-8
# ::node	0.1.1.1	people	3-4
# ::root	0	obligate-01
# ::edge	and	op1	possess-01	0.0.0.2	0.0.0	
# ::edge	interest-01	ARG0	possible	0.1.1	0.1.1.0	
# ::edge	interest-01	ARG1	people	0.1.1	0.1.1.1	
# ::edge	obligate-01	ARG1	they	0	0.0	
# ::edge	possess-01	ARG0	they	0.0.0	0.0	
# ::edge	possess-01	ARG1	it	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG0	power	0.0.0.1	0.0.0.1.0	
# ::edge	promise-01	ARG0	they	0.1	0.1.0	
# ::edge	promise-01	ARG1	obligate-01	0.1	0	
# ::edge	promise-01	ARG1	possess-01	0.0.0.1	0.0.0	
# ::edge	promise-01	ARG2	interest-01	0.1	0.1.1	
(o / obligate-01 
      :ARG1 (t2 / they 
            :ARG0-of (p2 / possess-01 
                  :ARG1 (i2 / it) 
                  :ARG1-of (p3 / promise-01 
                        :ARG0 (p4 / power)) 
                  :op-of (a / and))) 
      :ARG1-of (p / promise-01 
            :ARG0 (t / they) 
            :ARG2 (i / interest-01 
                  :ARG0 (p5 / possible) 
                  :ARG1 (p6 / people))))

# ::snt within a month she promised the prime minister both men would be forced to resign
# ::tok within a month she promised the prime minister both men would be forced to resign
# ::alignments 14-15|0.1.0 12-13|0.1.0.0 9-10|0.1.0.0.0 8-9|0.1.0.0.0.0 7-8|0.1.1+0.1 6-7|0.1.1.0 4-5|0 3-4|0.0 2-3|0.2.0.0+0.2.0 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:40.031
# ::node	0	promise-01	4-5
# ::node	0.0	she	3-4
# ::node	0.1	have-org-role-91	7-8
# ::node	0.1.0	resign-01	14-15
# ::node	0.1.0.0	force-01	12-13
# ::node	0.1.0.0.0	man	9-10
# ::node	0.1.0.0.0.0	both	8-9
# ::node	0.1.1	minister	7-8
# ::node	0.1.1.0	prime	6-7
# ::node	0.2	within	0-1
# ::node	0.2.0	temporal-quantity	2-3
# ::node	0.2.0.0	month	2-3
# ::root	0	promise-01
# ::edge	force-01	ARG1	man	0.1.0.0	0.1.0.0.0	
# ::edge	force-01	ARG2	resign-01	0.1.0.0	0.1.0	
# ::edge	have-org-role-91	ARG2	minister	0.1	0.1.1	
# ::edge	man	mod	both	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	minister	mod	prime	0.1.1	0.1.1.0	
# ::edge	promise-01	ARG0	she	0	0.0	
# ::edge	promise-01	ARG2	have-org-role-91	0	0.1	
# ::edge	promise-01	time	within	0	0.2	
# ::edge	resign-01	ARG1	have-org-role-91	0.1.0	0.1	
# ::edge	temporal-quantity	unit	month	0.2.0	0.2.0.0	
# ::edge	within	op1	temporal-quantity	0.2	0.2.0	
(p2 / promise-01 
      :ARG0 (s / she) 
      :ARG2 (h / have-org-role-91 
            :ARG1-of (r / resign-01 
                  :ARG2-of (f / force-01 
                        :ARG1 (m / man 
                              :mod (b / both)))) 
            :ARG2 (m2 / minister 
                  :mod (p / prime))) 
      :time (w / within 
            :op1 (t / temporal-quantity 
                  :unit (m3 / month))))

# ::snt EMPTY_SENTENCE
# ::tok EMPTY_SENTENCE
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:40.033
# ::node	0	amr-empty	0-1
# ::root	0	amr-empty
(a / amr-empty)

# ::snt the doctors seem likely to be promised more nhs cash and perhaps trial runs for some of mr clarkes wilder schemes
# ::tok the doctors seem likely to be promised more nhs cash and perhaps trial runs for some of mr clarkes wilder schemes
# ::alignments 20-21|0.1.0.1 15-16|0.1.0.1.0 12-13|0.1.0.0 11-12|0.1.0.2.1 10-11|0.1.0.2 9-10|0.1.0.2.0 6-7|0.1.0 3-4|0.1 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:40.116
# ::node	0	seem-01	2-3
# ::node	0.0	doctor	1-2
# ::node	0.1	likely	3-4
# ::node	0.1.0	promise-01	6-7
# ::node	0.1.0.0	trial	12-13
# ::node	0.1.0.1	scheme-01	20-21
# ::node	0.1.0.1.0	some	15-16
# ::node	0.1.0.2	and	10-11
# ::node	0.1.0.2.0	cash	9-10
# ::node	0.1.0.2.1	perhaps	11-12
# ::root	0	seem-01
# ::edge	and	op1	promise-01	0.1.0.2	0.1.0	
# ::edge	and	op2	cash	0.1.0.2	0.1.0.2.0	
# ::edge	and	op3	perhaps	0.1.0.2	0.1.0.2.1	
# ::edge	likely	domain	promise-01	0.1	0.1.0	
# ::edge	likely	domain	seem-01	0.1	0	
# ::edge	promise-01	ARG1	trial	0.1.0	0.1.0.0	
# ::edge	scheme-01	ARG1	promise-01	0.1.0.1	0.1.0	
# ::edge	scheme-01	quant	some	0.1.0.1	0.1.0.1.0	
# ::edge	seem-01	ARG1	doctor	0	0.0	
(s3 / seem-01 
      :ARG1 (d / doctor) 
      :domain-of (l / likely 
            :domain (p2 / promise-01 
                  :ARG1 (t / trial) 
                  :ARG1-of (s / scheme-01 
                        :quant (s2 / some)) 
                  :op-of (a / and 
                        :op1 (c / cash) 
                        :op2 (p / perhaps)))))

# ::snt last night as union leaders awaited support promised by european dockers the industrial action at many british ports weakened significantly
# ::tok last night as union leaders awaited support promised by european dockers the industrial action at many british ports weakened significantly
# ::alignments 19-20|0 18-19|0.0 17-18|0.0.1 15-16|0.0.1.0 13-14|0.0.0 12-13|0.0.0.1 9-10|0.0.0.0.1.0.0.0+0.0.0.0.1.0.0+0.0.0.0.1.0 7-8|0.0.0.0 6-7|0.0.0.0.1 4-5|0.0.0.0.1.1.0+0.0.0.0.1.1 3-4|0.0.0.0.1.1.0.0 1-2|0.0.0.0.0 0-1|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:40.381
# ::node	0	significant	19-20
# ::node	0.0	weaken-01	18-19
# ::node	0.0.0	action	13-14
# ::node	0.0.0.0	promise-01	7-8
# ::node	0.0.0.0.0	night	1-2
# ::node	0.0.0.0.0.0	last	0-1
# ::node	0.0.0.0.1	support-01	6-7
# ::node	0.0.0.0.1.0	continent	9-10
# ::node	0.0.0.0.1.0.0	name	9-10
# ::node	0.0.0.0.1.0.0.0	"Europe"	9-10
# ::node	0.0.0.0.1.1	person	4-5
# ::node	0.0.0.0.1.1.0	lead-02	4-5
# ::node	0.0.0.0.1.1.0.0	union	3-4
# ::node	0.0.0.1	industry	12-13
# ::node	0.0.1	port	17-18
# ::node	0.0.1.0	many	15-16
# ::root	0	significant
(s / significant 
      :degree-of (w / weaken-01 
            :ARG0 (a / action 
                  :ARG2-of (p2 / promise-01 
                        :ARG0 (n2 / night 
                              :mod (l2 / last)) 
                        :ARG1 (s2 / support-01 
                              :ARG0 (c / continent 
                                    :name (n / name 
                                          :op1 "Europe")) 
                              :ARG1 (p3 / person 
                                    :ARG0-of (l / lead-02 
                                          :ARG1 (u / union))))) 
                  :mod (i / industry)) 
            :ARG1 (p / port 
                  :quant (m / many))))

# ::snt fortunately schur promises to keep his promise
# ::tok fortunately schur promises to keep his promise
# ::alignments 6-7|0.0 2-3|0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:40.407
# ::node	0	promise-01	2-3
# ::node	0.0	promise-01	6-7
# ::node	0.0.0	fortunate-41	0-1
# ::root	0	promise-01
# ::edge	promise-01	ARG1	fortunate-41	0.0	0.0.0	
# ::edge	promise-01	ARG1	promise-01	0	0.0	
(p2 / promise-01 
      :ARG1 (p / promise-01 
            :ARG1 (f / fortunate-41)))

# ::snt mr collor promised to reduce inflation to just 3 per cent a month within a year by using shock tactics similar to those of president menem of argentina
# ::tok mr collor promised to reduce inflation to just 3 per cent a month within a year by using shock tactics similar to those of president menem of argentina
# ::alignments 27-28|0.1.2.1.0+0.1.2.1+0.1.2 24-25|0.1.2.0.0+0.1.2.0 19-20|0.2.1 18-19|0.2.1.0 17-18|0.2 15-16|0.2.0 13-14|0.2.1.0.1.0 12-13|0.2.1.0.1.1+0.2.1.0.1 10-11|0.1.0.0+0.1.0 8-9|0.2.1.0.0 7-8|0.0 5-6|0.1.1 4-5|0.1 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:40.742
# ::node	0	promise-01	2-3
# ::node	0.0	just	7-8
# ::node	0.1	reduce-01	4-5
# ::node	0.1.0	monetary-quantity	10-11
# ::node	0.1.0.0	cent	10-11
# ::node	0.1.1	inflation	5-6
# ::node	0.1.2	country	27-28
# ::node	0.1.2.0	have-org-role-91	24-25
# ::node	0.1.2.0.0	president	24-25
# ::node	0.1.2.1	name	27-28
# ::node	0.1.2.1.0	"Argentina"	27-28
# ::node	0.2	use-01	17-18
# ::node	0.2.0	year	15-16
# ::node	0.2.1	tactic	19-20
# ::node	0.2.1.0	shock-01	18-19
# ::node	0.2.1.0.0	3	8-9
# ::node	0.2.1.0.1	temporal-quantity	12-13
# ::node	0.2.1.0.1.0	within	13-14
# ::node	0.2.1.0.1.1	month	12-13
# ::root	0	promise-01
# ::edge	country	name	name	0.1.2	0.1.2.1	
# ::edge	have-org-role-91	ARG1	country	0.1.2.0	0.1.2	
# ::edge	have-org-role-91	ARG2	president	0.1.2.0	0.1.2.0.0	
# ::edge	monetary-quantity	unit	cent	0.1.0	0.1.0.0	
# ::edge	name	op1	"Argentina"	0.1.2.1	0.1.2.1.0	
# ::edge	promise-01	ARG0	just	0	0.0	
# ::edge	promise-01	ARG1	reduce-01	0	0.1	
# ::edge	promise-01	manner	use-01	0	0.2	
# ::edge	reduce-01	ARG0	monetary-quantity	0.1	0.1.0	
# ::edge	reduce-01	ARG1	inflation	0.1	0.1.1	
# ::edge	reduce-01	location	country	0.1	0.1.2	
# ::edge	shock-01	ARG0	tactic	0.2.1.0	0.2.1	
# ::edge	shock-01	ARG1	3	0.2.1.0	0.2.1.0.0	
# ::edge	temporal-quantity	location	within	0.2.1.0.1	0.2.1.0.1.0	
# ::edge	temporal-quantity	time	shock-01	0.2.1.0.1	0.2.1.0	
# ::edge	temporal-quantity	unit	month	0.2.1.0.1	0.2.1.0.1.1	
# ::edge	use-01	ARG0	year	0.2	0.2.0	
# ::edge	use-01	ARG1	tactic	0.2	0.2.1	
(p2 / promise-01 
      :ARG0 (j / just) 
      :ARG1 (r / reduce-01 
            :ARG0 (m2 / monetary-quantity 
                  :unit (c2 / cent)) 
            :ARG1 (i / inflation) 
            :location (c / country 
                  :ARG1-of (h / have-org-role-91 
                        :ARG2 (p / president)) 
                  :name (n / name 
                        :op1 "Argentina"))) 
      :manner (u / use-01 
            :ARG0 (y / year) 
            :ARG1 (t / tactic 
                  :ARG0-of (s / shock-01 
                        :ARG1 3 
                        :time-of (t2 / temporal-quantity 
                              :location (w / within) 
                              :unit (m / month))))))

# ::snt mr iliescu and his team will serve until free elections promised for next spring are held
# ::tok mr iliescu and his team will serve until free elections promised for next spring are held
# ::alignments 13-14|0.1.0.0 12-13|0.1.0.0.0 10-11|0.1.0 9-10|0.1.0.1 8-9|0.1.0.1.0 7-8|0.1 6-7|0 4-5|0.0.0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:40.812
# ::node	0	serve-01	6-7
# ::node	0.0	and	2-3
# ::node	0.0.0	team	4-5
# ::node	0.1	until	7-8
# ::node	0.1.0	promise-01	10-11
# ::node	0.1.0.0	spring	13-14
# ::node	0.1.0.0.0	next	12-13
# ::node	0.1.0.1	elect-01	9-10
# ::node	0.1.0.1.0	free-41	8-9
# ::root	0	serve-01
# ::edge	and	op1	team	0.0	0.0.0	
# ::edge	free-41	ARG1	elect-01	0.1.0.1.0	0.1.0.1	
# ::edge	promise-01	ARG0	spring	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG1	elect-01	0.1.0	0.1.0.1	
# ::edge	serve-01	ARG0	and	0	0.0	
# ::edge	serve-01	time	until	0	0.1	
# ::edge	spring	mod	next	0.1.0.0	0.1.0.0.0	
# ::edge	until	op1	promise-01	0.1	0.1.0	
(s2 / serve-01 
      :ARG0 (a / and 
            :op1 (t / team)) 
      :time (u / until 
            :op1 (p / promise-01 
                  :ARG0 (s / spring 
                        :mod (n / next)) 
                  :ARG1 (e / elect-01 
                        :ARG1-of (f / free-41)))))

# ::snt and peking is also very keen for the deal to go ahead because the rocket launchers promise to be a source of hard currency
# ::tok and peking is also very keen for the deal to go ahead because the rocket launchers promise to be a source of hard currency
# ::alignments 23-24|0.0.0.0.0 22-23|0.0.0.0.0.0 20-21|0.0.1 16-17|0.0 15-16|0.0.0 14-15|0.0.0.0 12-13|0 11-12|0.2 8-9|0.1.1 5-6|0.1 4-5|0.1.2 3-4|0.1.3 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:40.959
# ::node	0	cause-01	12-13
# ::node	0.0	promise-01	16-17
# ::node	0.0.0	launch-01	15-16
# ::node	0.0.0.0	rocket	14-15
# ::node	0.0.0.0.0	currency	23-24
# ::node	0.0.0.0.0.0	hard	22-23
# ::node	0.0.1	source	20-21
# ::node	0.1	keen-41	5-6
# ::node	0.1.0	and	0-1
# ::node	0.1.1	deal-01	8-9
# ::node	0.1.2	very	4-5
# ::node	0.1.3	also	3-4
# ::node	0.2	ahead	11-12
# ::root	0	cause-01
# ::edge	cause-01	ARG0	promise-01	0	0.0	
# ::edge	cause-01	ARG1	keen-41	0	0.1	
# ::edge	cause-01	mod	ahead	0	0.2	
# ::edge	currency	mod	hard	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	currency	poss	rocket	0.0.0.0.0	0.0.0.0	
# ::edge	keen-41	ARG0	and	0.1	0.1.0	
# ::edge	keen-41	ARG1	deal-01	0.1	0.1.1	
# ::edge	keen-41	degree	very	0.1	0.1.2	
# ::edge	keen-41	mod	also	0.1	0.1.3	
# ::edge	launch-01	ARG1	rocket	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG0	launch-01	0.0	0.0.0	
# ::edge	promise-01	ARG1	source	0.0	0.0.1	
(c2 / cause-01 
      :ARG0 (p / promise-01 
            :ARG0 (l / launch-01 
                  :ARG1 (r / rocket 
                        :poss-of (c / currency 
                              :mod (h / hard)))) 
            :ARG1 (s / source)) 
      :ARG1 (k / keen-41 
            :ARG0 (a3 / and) 
            :ARG1 (d / deal-01) 
            :degree (v / very) 
            :mod (a2 / also)) 
      :mod (a / ahead))

# ::snt   clearly this conversation promised more than it was permitted to deliver
# ::tok clearly this conversation promised more than it was permitted to deliver
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:40.960
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt he advised me to stick to the facts as i knew them and not to promise more than i could deliver
# ::tok he advised me to stick to the facts as i knew them and not to promise more than i could deliver
# ::alignments 20-21|0.0 19-20|0 18-19|0.0.0 15-16|0.0.0.0.0.0 12-13|0.0.0.0.2 10-11|0.0.0.0.2.0 9-10|0.0.0.0.2.0.0 7-8|0.0.0.0.1 4-5|0.0.0.0 1-2|0.0.0.0.0.1 0-1|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:41.041
# ::node	0	possible	19-20
# ::node	0.0	deliver-01	20-21
# ::node	0.0.0	i	18-19
# ::node	0.0.0.0	stick-01	4-5
# ::node	0.0.0.0.0	he	0-1
# ::node	0.0.0.0.0.0	promise-01	15-16
# ::node	0.0.0.0.0.1	advise-01	1-2
# ::node	0.0.0.0.1	fact	7-8
# ::node	0.0.0.0.2	and	12-13
# ::node	0.0.0.0.2.0	know-01	10-11
# ::node	0.0.0.0.2.0.0	i	9-10
# ::root	0	possible
(p / possible 
      :mod-of (d / deliver-01 
            :ARG1 (i / i 
                  :ARG1-of (s / stick-01 
                        :ARG0 (h / he 
                              :ARG0-of (p2 / promise-01) 
                              :ARG0-of (a2 / advise-01)) 
                        :ARG2 (f / fact) 
                        :op-of (a / and 
                              :ARG1-of (k / know-01 
                                    :ARG0 (i2 / i)))))))

# ::snt apparently the great heartthrob was in moscow and had promised to join her and yevtushenkos party which now included the great director of crime and punishment only recently returned to russia after being in exile
# ::tok apparently the great heartthrob was in moscow and had promised to join her and yevtushenkos party which now included the great director of crime and punishment only recently returned to russia after being in exile
# ::alignments 34-35|0.0.0.0.0.1.1 31-32|0.0.0.0.0.1.2 28-29|0.0.0.0.0.1 27-28|0.0.0.0.0.1.3 26-27|0.0.0.0.0.1.3.0 25-26|0.0.0.0.0.1.0 24-25|0.0.0.0.0 23-24|0.0.0.0.0.0 21-22|0.0.0.0.0.0.0.1+0.0.0.0.0.0.0 20-21|0.0.0.0.0.0.0.1.0 18-19|0.0.0.0 17-18|0.0.0.0.1 15-16|0.0.0 13-14|0 11-12|0.0 9-10|0.0.1 7-8|0.0.1.0 2-3|0.0.0.0.0.1.0.0 0-1|0.0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:41.403
# ::node	0	and	13-14
# ::node	0.0	join-01	11-12
# ::node	0.0.0	party	15-16
# ::node	0.0.0.0	include-01	18-19
# ::node	0.0.0.0.0	and	24-25
# ::node	0.0.0.0.0.0	crime	23-24
# ::node	0.0.0.0.0.0.0	have-org-role-91	21-22
# ::node	0.0.0.0.0.0.0.0	apparent	0-1
# ::node	0.0.0.0.0.0.0.1	director	21-22
# ::node	0.0.0.0.0.0.0.1.0	great	20-21
# ::node	0.0.0.0.0.1	return-01	28-29
# ::node	0.0.0.0.0.1.0	punish-01	25-26
# ::node	0.0.0.0.0.1.0.0	great	2-3
# ::node	0.0.0.0.0.1.1	exile-01	34-35
# ::node	0.0.0.0.0.1.2	after	31-32
# ::node	0.0.0.0.0.1.3	recent	27-28
# ::node	0.0.0.0.0.1.3.0	only	26-27
# ::node	0.0.0.0.1	now	17-18
# ::node	0.0.1	promise-01	9-10
# ::node	0.0.1.0	and	7-8
# ::root	0	and
(a3 / and 
      :ARG0-of (j / join-01 
            :ARG1 (p2 / party 
                  :ARG0-of (i / include-01 
                        :ARG1 (a2 / and 
                              :op1 (c / crime 
                                    :ARG1-of (h / have-org-role-91 
                                          :ARG0 (a5 / apparent) 
                                          :ARG2 (d / director 
                                                :mod (g / great)))) 
                              :op2 (r / return-01 
                                    :ARG1 (p / punish-01 
                                          :ARG1 (g2 / great)) 
                                    :accompanier (e / exile-01) 
                                    :time (a / after) 
                                    :time (r2 / recent 
                                          :mod (o / only)))) 
                        :time (n / now))) 
            :ARG2-of (p3 / promise-01 
                  :op-of (a4 / and))))

# ::snt strike action to remove the maximum wage in 1960 was promised
# ::tok strike action to remove the maximum wage in 1960 was promised
# ::alignments 10-11|0.0.0 8-9|0.0.1.0+0.0.1 6-7|0.0 5-6|0 3-4|0.0.0.0 1-2|0.0.0.0.0 0-1|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:41.429
# ::node	0	maximum	5-6
# ::node	0.0	wage-01	6-7
# ::node	0.0.0	promise-01	10-11
# ::node	0.0.0.0	remove-01	3-4
# ::node	0.0.0.0.0	action	1-2
# ::node	0.0.0.0.1	strike-01	0-1
# ::node	0.0.1	date-entity	8-9
# ::node	0.0.1.0	1960	8-9
# ::root	0	maximum
(m / maximum 
      :degree-of (w / wage-01 
            :ARG1-of (p / promise-01 
                  :ARG1-of (r / remove-01 
                        :ARG0 (a / action) 
                        :ARG1-of (s / strike-01))) 
            :time (d / date-entity 
                  :year 1960)))

# ::snt its creator promises that unlike the real war that has virtually destroyed his country it involves no blood and no politics
# ::tok its creator promises that unlike the real war that has virtually destroyed his country it involves no blood and no politics
# ::alignments 20-21|0.0.1.1 19-20|0.0.1.1.0 18-19|0.0.1 17-18|0.0.1.0 16-17|0.0.3 15-16|0.0 14-15|0.0.0 13-14|0.0.2 11-12|0.0.2.0 10-11|0.0.2.0.1 7-8|0.0.2.0.0 6-7|0.0.2.0.0.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:41.751
# ::node	0	promise-01	2-3
# ::node	0.0	involve-01	15-16
# ::node	0.0.0	it	14-15
# ::node	0.0.1	and	18-19
# ::node	0.0.1.0	blood	17-18
# ::node	0.0.1.1	politics	20-21
# ::node	0.0.1.1.0	-	19-20
# ::node	0.0.2	country	13-14
# ::node	0.0.2.0	destroy-01	11-12
# ::node	0.0.2.0.0	war	7-8
# ::node	0.0.2.0.0.0	real	6-7
# ::node	0.0.2.0.1	virtual	10-11
# ::node	0.0.3	-	16-17
# ::root	0	promise-01
# ::edge	and	op1	blood	0.0.1	0.0.1.0	
# ::edge	and	op2	politics	0.0.1	0.0.1.1	
# ::edge	destroy-01	ARG0	war	0.0.2.0	0.0.2.0.0	
# ::edge	destroy-01	ARG1	country	0.0.2.0	0.0.2	
# ::edge	destroy-01	manner	virtual	0.0.2.0	0.0.2.0.1	
# ::edge	involve-01	ARG0	it	0.0	0.0.0	
# ::edge	involve-01	ARG1	and	0.0	0.0.1	
# ::edge	involve-01	ARG3	country	0.0	0.0.2	
# ::edge	involve-01	polarity	-	0.0	0.0.3	
# ::edge	politics	polarity	-	0.0.1.1	0.0.1.1.0	
# ::edge	promise-01	ARG1	involve-01	0	0.0	
# ::edge	war	mod	real	0.0.2.0.0	0.0.2.0.0.0	
(p2 / promise-01 
      :ARG1 (i / involve-01 
            :ARG0 (i2 / it) 
            :ARG1 (a / and 
                  :op1 (b / blood) 
                  :op2 (p / politics 
                        :polarity (- / -))) 
            :ARG3 (c / country 
                  :ARG1-of (d / destroy-01 
                        :ARG0 (w / war 
                              :mod (r / real)) 
                        :manner (v / virtual))) 
            :polarity (-2 / -)))

# ::snt the board of admiralty hastily promised a revision and the more extreme cuts were in fact reduced
# ::tok the board of admiralty hastily promised a revision and the more extreme cuts were in fact reduced
# ::alignments 16-17|0.1.0 15-16|0.1.0.0 12-13|0.1 11-12|0.1.1 8-9|0 7-8|0.0.0 5-6|0.0 4-5|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:41.825
# ::node	0	and	8-9
# ::node	0.0	promise-01	5-6
# ::node	0.0.0	revise-01	7-8
# ::node	0.0.1	hasty	4-5
# ::node	0.1	cut-02	12-13
# ::node	0.1.0	reduce-01	16-17
# ::node	0.1.0.0	fact	15-16
# ::node	0.1.1	extreme	11-12
# ::root	0	and
# ::edge	and	op1	promise-01	0	0.0	
# ::edge	and	op2	cut-02	0	0.1	
# ::edge	cut-02	degree	extreme	0.1	0.1.1	
# ::edge	promise-01	ARG1	revise-01	0.0	0.0.0	
# ::edge	promise-01	manner	hasty	0.0	0.0.1	
# ::edge	reduce-01	ARG0	fact	0.1.0	0.1.0.0	
# ::edge	reduce-01	ARG1	cut-02	0.1.0	0.1	
(a / and 
      :op1 (p / promise-01 
            :ARG1 (r2 / revise-01) 
            :manner (h / hasty)) 
      :op2 (c / cut-02 
            :ARG1-of (r / reduce-01 
                  :ARG0 (f / fact)) 
            :degree (e / extreme)))

# ::snt i promise you they will know him all right after italys match at wembley in a fortnights time
# ::tok i promise you they will know him all right after italys match at wembley in a fortnights time
# ::alignments 17-18|0.1.0.0 11-12|0.1.0.1 9-10|0.1.0.1.0 7-8|0.3 5-6|0.1.0 3-4|0.1 2-3|0.2 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:42.097
# ::node	0	promise-01	1-2
# ::node	0.0	i	0-1
# ::node	0.1	they	3-4
# ::node	0.1.0	know-01	5-6
# ::node	0.1.0.0	time	17-18
# ::node	0.1.0.1	match-01	11-12
# ::node	0.1.0.1.0	after	9-10
# ::node	0.2	you	2-3
# ::node	0.3	all	7-8
# ::root	0	promise-01
# ::edge	after	op1	match-01	0.1.0.1.0	0.1.0.1	
# ::edge	know-01	ARG0	they	0.1.0	0.1	
# ::edge	know-01	ARG1	time	0.1.0	0.1.0.0	
# ::edge	match-01	ARG1	know-01	0.1.0.1	0.1.0	
# ::edge	promise-01	ARG0	i	0	0.0	
# ::edge	promise-01	ARG1	they	0	0.1	
# ::edge	promise-01	ARG2	you	0	0.2	
# ::edge	promise-01	manner	all	0	0.3	
(p / promise-01 
      :ARG0 (i / i) 
      :ARG1 (t2 / they 
            :ARG0-of (k / know-01 
                  :ARG1 (t / time) 
                  :ARG1-of (m / match-01 
                        :op-of (a / after)))) 
      :ARG2 (y / you) 
      :manner (a2 / all))

# ::snt   azumah nelson who defends his wbc superfeatherweight title against jim mcdonnell of london at the albert hall on 5 november came face to face with the challenger in london yesterday and promised to walk straight through him in the ring
# ::tok azumah nelson who defends his wbc superfeatherweight title against jim mcdonnell of london at the albert hall on 5 november came face to face with the challenger in london yesterday and promised to walk straight through him in the ring
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:42.098
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt in one village beidian north of peking farmers say they can sell only a third of their crop at the price promised by the planners
# ::tok in one village beidian north of peking farmers say they can sell only a third of their crop at the price promised by the planners
# ::alignments 24-25|0.1.0.2.0.0.0.0+0.1.0.2.0.0.0 21-22|0.1.0.2.0.0 20-21|0.1.0.2+0.1.0.2.0 17-18|0.1.0.2.0.0.1 12-13|0.1.0.3 11-12|0.1.0 10-11|0.1 9-10|0.1.0.0 8-9|0 7-8|0.0.0+0.0 4-5|0.1.0.1 2-3|0.1.0.2.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:42.699
# ::node	0	say-01	8-9
# ::node	0.0	person	7-8
# ::node	0.0.0	farm-01	7-8
# ::node	0.1	possible	10-11
# ::node	0.1.0	sell-01	11-12
# ::node	0.1.0.0	they	9-10
# ::node	0.1.0.1	north	4-5
# ::node	0.1.0.2	price-01	20-21
# ::node	0.1.0.2.0	thing	20-21
# ::node	0.1.0.2.0.0	promise-01	21-22
# ::node	0.1.0.2.0.0.0	person	24-25
# ::node	0.1.0.2.0.0.0.0	plan-01	24-25
# ::node	0.1.0.2.0.0.0.0.0	village	2-3
# ::node	0.1.0.2.0.0.1	crop	17-18
# ::node	0.1.0.3	only	12-13
# ::root	0	say-01
# ::edge	farm-01	ARG0	person	0.0.0	0.0	
# ::edge	plan-01	ARG0	person	0.1.0.2.0.0.0.0	0.1.0.2.0.0.0	
# ::edge	plan-01	ARG1	village	0.1.0.2.0.0.0.0	0.1.0.2.0.0.0.0.0	
# ::edge	possible	domain	sell-01	0.1	0.1.0	
# ::edge	price-01	ARG1	sell-01	0.1.0.2	0.1.0	
# ::edge	price-01	ARG2	thing	0.1.0.2	0.1.0.2.0	
# ::edge	promise-01	ARG0	person	0.1.0.2.0.0	0.1.0.2.0.0.0	
# ::edge	promise-01	ARG1	thing	0.1.0.2.0.0	0.1.0.2.0	
# ::edge	promise-01	manner	crop	0.1.0.2.0.0	0.1.0.2.0.0.1	
# ::edge	say-01	ARG0	person	0	0.0	
# ::edge	say-01	ARG1	possible	0	0.1	
# ::edge	sell-01	ARG0	they	0.1.0	0.1.0.0	
# ::edge	sell-01	ARG1	north	0.1.0	0.1.0.1	
# ::edge	sell-01	ARG3	only	0.1.0	0.1.0.3	
(s2 / say-01 
      :ARG0 (p6 / person 
            :ARG0-of (f / farm-01)) 
      :ARG1 (p5 / possible 
            :domain (s / sell-01 
                  :ARG0 (t2 / they) 
                  :ARG1 (n / north) 
                  :ARG1-of (p4 / price-01 
                        :ARG2 (t / thing 
                              :ARG1-of (p3 / promise-01 
                                    :ARG0 (p / person 
                                          :ARG0-of (p2 / plan-01 
                                                :ARG1 (v / village))) 
                                    :manner (c / crop)))) 
                  :ARG3 (o / only))))

# ::snt it is doubly disquieting that other scholars and of course students will not unnaturally assume that he was correct and look no farther and that accordingly this theory will in due course become one of the fairytales of the canadian constitution to which i once rashly and publicly promised to devote a book in my declining years
# ::tok it is doubly disquieting that other scholars and of course students will not unnaturally assume that he was correct and look no farther and that accordingly this theory will in due course become one of the fairytales of the canadian constitution to which i once rashly and publicly promised to devote a book in my declining years
# ::alignments 56-57|0.0.0.0+0.0.0 52-53|0.0 50-51|0 48-49|0.1 47-48|0.1.1 46-47|0.1.2 44-45|0.1.2.1.0 43-44|0.1.2.1 40-41|0.1.2.0.0 32-33|0.1.2.0 27-28|0.1.0 26-27|0.1.0.0 25-26|0.1.2.0.3 23-24|0.1.2.0.4.0.2 22-23|0.1.3 21-22|0.1.2.0.1.0 19-20|0.1.2.0.4 18-19|0.1.2.0.4.0.1 16-17|0.1.2.0.4.0.1.0 14-15|0.1.2.0.4.0 10-11|0.1.2.0.2.0+0.1.2.0.2 7-8|0.1.2.0.4.0.0 6-7|0.1.2.0.4.0.0.1 5-6|0.1.2.0.4.0.0.0 0-1|0.1.2.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:43.572
# ::node	0	devote-01	50-51
# ::node	0.0	book	52-53
# ::node	0.0.0	temporal-quantity	56-57
# ::node	0.0.0.0	year	56-57
# ::node	0.1	promise-01	48-49
# ::node	0.1.0	theory	27-28
# ::node	0.1.0.0	this	26-27
# ::node	0.1.1	public	47-48
# ::node	0.1.2	and	46-47
# ::node	0.1.2.0	become-01	32-33
# ::node	0.1.2.0.0	constitution	40-41
# ::node	0.1.2.0.1	it	0-1
# ::node	0.1.2.0.1.0	-	21-22
# ::node	0.1.2.0.2	person	10-11
# ::node	0.1.2.0.2.0	study-01	10-11
# ::node	0.1.2.0.3	accordingly	25-26
# ::node	0.1.2.0.4	and	19-20
# ::node	0.1.2.0.4.0	assume-02	14-15
# ::node	0.1.2.0.4.0.0	and	7-8
# ::node	0.1.2.0.4.0.0.0	other	5-6
# ::node	0.1.2.0.4.0.0.1	scholar	6-7
# ::node	0.1.2.0.4.0.1	correct	18-19
# ::node	0.1.2.0.4.0.1.0	he	16-17
# ::node	0.1.2.0.4.0.2	and	23-24
# ::node	0.1.2.1	i	43-44
# ::node	0.1.2.1.0	once	44-45
# ::node	0.1.3	far	22-23
# ::root	0	devote-01
# ::edge	-	poss	it	0.1.2.0.1.0	0.1.2.0.1	
# ::edge	and	mod	other	0.1.2.0.4.0.0	0.1.2.0.4.0.0.0	
# ::edge	and	op1	assume-02	0.1.2.0.4	0.1.2.0.4.0	
# ::edge	and	op1	assume-02	0.1.2.0.4.0.2	0.1.2.0.4.0	
# ::edge	and	op1	become-01	0.1.2	0.1.2.0	
# ::edge	and	op1	scholar	0.1.2.0.4.0.0	0.1.2.0.4.0.0.1	
# ::edge	and	op2	become-01	0.1.2.0.4	0.1.2.0	
# ::edge	and	op2	i	0.1.2	0.1.2.1	
# ::edge	and	op3	promise-01	0.1.2	0.1	
# ::edge	assume-02	ARG0	and	0.1.2.0.4.0	0.1.2.0.4.0.0	
# ::edge	assume-02	ARG1	correct	0.1.2.0.4.0	0.1.2.0.4.0.1	
# ::edge	become-01	ARG0	constitution	0.1.2.0	0.1.2.0.0	
# ::edge	become-01	ARG1	it	0.1.2.0	0.1.2.0.1	
# ::edge	become-01	ARG2	person	0.1.2.0	0.1.2.0.2	
# ::edge	become-01	ARG3	accordingly	0.1.2.0	0.1.2.0.3	
# ::edge	book	topic	temporal-quantity	0.0	0.0.0	
# ::edge	correct	domain	he	0.1.2.0.4.0.1	0.1.2.0.4.0.1.0	
# ::edge	devote-01	ARG1	book	0	0.0	
# ::edge	far	op1	promise-01	0.1.3	0.1	
# ::edge	i	time	once	0.1.2.1	0.1.2.1.0	
# ::edge	promise-01	ARG1	theory	0.1	0.1.0	
# ::edge	promise-01	ARG2	devote-01	0.1	0	
# ::edge	promise-01	manner	public	0.1	0.1.1	
# ::edge	study-01	ARG0	person	0.1.2.0.2.0	0.1.2.0.2	
# ::edge	temporal-quantity	unit	year	0.0.0	0.0.0.0	
# ::edge	theory	mod	this	0.1.0	0.1.0.0	
(d / devote-01 
      :ARG1 (b / book 
            :topic (t / temporal-quantity 
                  :unit (y / year))) 
      :ARG2-of (p / promise-01 
            :ARG1 (t2 / theory 
                  :mod (t3 / this)) 
            :manner (p2 / public) 
            :op-of (a / and 
                  :op1 (b2 / become-01 
                        :ARG0 (c / constitution) 
                        :ARG1 (i2 / it 
                              :poss-of (- / -)) 
                        :ARG2 (p3 / person 
                              :ARG0-of (s / study-01)) 
                        :ARG3 (a2 / accordingly) 
                        :op-of (a4 / and 
                              :op1 (a5 / assume-02 
                                    :ARG0 (a6 / and 
                                          :mod (o2 / other) 
                                          :op1 (s2 / scholar)) 
                                    :ARG1 (c2 / correct 
                                          :domain (h / he)) 
                                    :op-of (a3 / and)))) 
                  :op2 (i / i 
                        :time (o / once))) 
            :op-of (f / far)))

# ::snt the kadets at this time a middleclass reform party promised cultural selfdetermination and equality for the peoples of the empire but in a unitary state
# ::tok the kadets at this time a middleclass reform party promised cultural selfdetermination and equality for the peoples of the empire but in a unitary state
# ::alignments 24-25|0.1.0.1.0 20-21|0 19-20|0.0 16-17|0.1.1 13-14|0.1 12-13|0.1.0.0.0 10-11|0.1.2 9-10|0.1.0.0 8-9|0.1.0 7-8|0.1.0.1 4-5|0.1.0.0.1 3-4|0.1.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:43.895
# ::node	0	contrast-01	20-21
# ::node	0.0	empire	19-20
# ::node	0.1	equal-01	13-14
# ::node	0.1.0	party	8-9
# ::node	0.1.0.0	promise-01	9-10
# ::node	0.1.0.0.0	and	12-13
# ::node	0.1.0.0.1	time	4-5
# ::node	0.1.0.0.1.0	this	3-4
# ::node	0.1.0.1	reform-01	7-8
# ::node	0.1.0.1.0	state	24-25
# ::node	0.1.1	people	16-17
# ::node	0.1.2	culture	10-11
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	empire	0	0.0	
# ::edge	equal-01	ARG0	party	0.1	0.1.0	
# ::edge	equal-01	ARG1	contrast-01	0.1	0	
# ::edge	equal-01	manner	people	0.1	0.1.1	
# ::edge	equal-01	mod	culture	0.1	0.1.2	
# ::edge	party	mod	reform-01	0.1.0	0.1.0.1	
# ::edge	promise-01	ARG0	party	0.1.0.0	0.1.0	
# ::edge	promise-01	ARG1	and	0.1.0.0	0.1.0.0.0	
# ::edge	promise-01	time	time	0.1.0.0	0.1.0.0.1	
# ::edge	reform-01	ARG1	state	0.1.0.1	0.1.0.1.0	
# ::edge	time	mod	this	0.1.0.0.1	0.1.0.0.1.0	
(c / contrast-01 
      :ARG1 (e / empire) 
      :ARG1-of (e2 / equal-01 
            :ARG0 (p3 / party 
                  :ARG0-of (p2 / promise-01 
                        :ARG1 (a / and) 
                        :time (t / time 
                              :mod (t2 / this))) 
                  :mod (r / reform-01 
                        :ARG1 (s / state))) 
            :manner (p / people) 
            :mod (c2 / culture)))

# ::snt he has promised that 1990 will be the year of the student with improvements in student support which include extra money for libraries and more lodgings
# ::tok he has promised that 1990 will be the year of the student with improvements in student support which include extra money for libraries and more lodgings
# ::alignments 23-24|0 22-23|0.1 20-21|0.0.1 19-20|0.0.1.0 18-19|0.0 16-17|0.0.0 15-16|0.0.0.1.0+0.0.0.1 13-14|0.0.0.2 11-12|0.0.0.3+0.0.0.3.0 8-9|0.0.0.3.1 4-5|0.0.0.0.0+0.0.0.0 2-3|0.0.0.3.1.0 0-1|0.0.0.3.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:44.246
# ::node	0	and	23-24
# ::node	0.0	include-01	18-19
# ::node	0.0.0	support-01	16-17
# ::node	0.0.0.0	date-entity	4-5
# ::node	0.0.0.0.0	1990	4-5
# ::node	0.0.0.1	person	15-16
# ::node	0.0.0.1.0	study-01	15-16
# ::node	0.0.0.2	improve-01	13-14
# ::node	0.0.0.3	study-01	11-12
# ::node	0.0.0.3.0	person	11-12
# ::node	0.0.0.3.1	year	8-9
# ::node	0.0.0.3.1.0	promise-01	2-3
# ::node	0.0.0.3.1.0.0	he	0-1
# ::node	0.0.1	money	20-21
# ::node	0.0.1.0	extra	19-20
# ::node	0.1	library	22-23
# ::root	0	and
# ::edge	and	op1	include-01	0	0.0	
# ::edge	and	op2	library	0	0.1	
# ::edge	date-entity	year	1990	0.0.0.0	0.0.0.0.0	
# ::edge	improve-01	ARG1	support-01	0.0.0.2	0.0.0	
# ::edge	include-01	ARG0	support-01	0.0	0.0.0	
# ::edge	include-01	ARG1	money	0.0	0.0.1	
# ::edge	money	mod	extra	0.0.1	0.0.1.0	
# ::edge	promise-01	ARG0	he	0.0.0.3.1.0	0.0.0.3.1.0.0	
# ::edge	promise-01	ARG1	year	0.0.0.3.1.0	0.0.0.3.1	
# ::edge	study-01	ARG0	person	0.0.0.1.0	0.0.0.1	
# ::edge	study-01	ARG0	person	0.0.0.3	0.0.0.3.0	
# ::edge	study-01	ARG2	support-01	0.0.0.3	0.0.0	
# ::edge	study-01	time	year	0.0.0.3	0.0.0.3.1	
# ::edge	support-01	ARG0	date-entity	0.0.0	0.0.0.0	
# ::edge	support-01	ARG1	person	0.0.0	0.0.0.1	
(a / and 
      :op1 (i / include-01 
            :ARG0 (s / support-01 
                  :ARG0 (d / date-entity 
                        :year 1990) 
                  :ARG1 (p / person 
                        :ARG0-of (s2 / study-01)) 
                  :ARG1-of (i2 / improve-01) 
                  :ARG2-of (s3 / study-01 
                        :ARG0 (p2 / person) 
                        :time (y / year 
                              :ARG1-of (p3 / promise-01 
                                    :ARG0 (h / he))))) 
            :ARG1 (m / money 
                  :mod (e / extra))) 
      :op2 (l / library))

# ::snt they cared about equal pay  which lloyd george had promised for piece work only and which the men opposed
# ::tok they cared about equal pay which lloyd george had promised for piece work only and which the men opposed
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:44.246
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt astra has already promised to provide four fullblown hdtv channels from its fourth satellite
# ::tok astra has already promised to provide four fullblown hdtv channels from its fourth satellite
# ::alignments 13-14|0.0.0 12-13|0.0.0.0 9-10|0.0.1 6-7|0.0.1.0 5-6|0.0 3-4|0 2-3|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:44.305
# ::node	0	promise-01	3-4
# ::node	0.0	provide-01	5-6
# ::node	0.0.0	satellite	13-14
# ::node	0.0.0.0	fourth	12-13
# ::node	0.0.1	channel	9-10
# ::node	0.0.1.0	4	6-7
# ::node	0.1	already	2-3
# ::root	0	promise-01
# ::edge	channel	quant	4	0.0.1	0.0.1.0	
# ::edge	promise-01	ARG2	provide-01	0	0.0	
# ::edge	promise-01	time	already	0	0.1	
# ::edge	provide-01	ARG0	satellite	0.0	0.0.0	
# ::edge	provide-01	ARG1	channel	0.0	0.0.1	
# ::edge	satellite	mod	fourth	0.0.0	0.0.0.0	
(p2 / promise-01 
      :ARG2 (p / provide-01 
            :ARG0 (s / satellite 
                  :mod (f / fourth)) 
            :ARG1 (c / channel 
                  :quant 4)) 
      :time (a / already))

# ::snt sarney promised to get them out but the military said they didnt have the money
# ::tok sarney promised to get them out but the military said they didnt have the money
# ::alignments 14-15|0.3.0 10-11|0.1 9-10|0 8-9|0.0 6-7|0.3 1-2|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:44.349
# ::node	0	say-01	9-10
# ::node	0.0	military	8-9
# ::node	0.1	they	10-11
# ::node	0.2	promise-01	1-2
# ::node	0.3	contrast-01	6-7
# ::node	0.3.0	money	14-15
# ::root	0	say-01
# ::edge	contrast-01	ARG1	money	0.3	0.3.0	
# ::edge	contrast-01	ARG2	say-01	0.3	0	
# ::edge	promise-01	ARG1	say-01	0.2	0	
# ::edge	say-01	ARG0	military	0	0.0	
# ::edge	say-01	ARG1	they	0	0.1	
(s / say-01 
      :ARG0 (m2 / military) 
      :ARG1 (t / they) 
      :ARG1-of (p / promise-01) 
      :ARG2-of (c / contrast-01 
            :ARG1 (m / money)))

# ::snt  he promised that if the specimen went to stuttgart it would be available for study to british scientists
# ::tok he promised that if the specimen went to stuttgart it would be available for study to british scientists
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:44.350
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt also many of these have shown rapid economic growth in the present decade and promise to continue doing so in the 1990s
# ::tok also many of these have shown rapid economic growth in the present decade and promise to continue doing so in the 1990s
# ::alignments 21-22|0.0.0.2 18-19|0.0.0.0.0 17-18|0.0.0.0 16-17|0.0.0 14-15|0.0.0.1 13-14|0.0 12-13|0.0.0.1.0.0+0.0.0.1.0.0.0 11-12|0.0.0.1.0 8-9|0.1 7-8|0.1.1 6-7|0.1.2 5-6|0 1-2|0.1.0 0-1|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:45.064
# ::node	0	show-01	5-6
# ::node	0.0	and	13-14
# ::node	0.0.0	continue-01	16-17
# ::node	0.0.0.0	do-02	17-18
# ::node	0.0.0.0.0	so	18-19
# ::node	0.0.0.1	promise-01	14-15
# ::node	0.0.0.1.0	present	11-12
# ::node	0.0.0.1.0.0	decade	12-13
# ::node	0.0.0.1.0.0.0	temporal-quantity	12-13
# ::node	0.0.0.2	1990	21-22
# ::node	0.1	grow-01	8-9
# ::node	0.1.0	many	1-2
# ::node	0.1.0.0	also	0-1
# ::node	0.1.1	economy	7-8
# ::node	0.1.2	rapid	6-7
# ::root	0	show-01
# ::edge	continue-01	ARG0	and	0.0.0	0.0	
# ::edge	continue-01	ARG1	do-02	0.0.0	0.0.0.0	
# ::edge	continue-01	prep-for	1990	0.0.0	0.0.0.2	
# ::edge	decade	mod	present	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	do-02	ARG1	so	0.0.0.0	0.0.0.0.0	
# ::edge	grow-01	ARG0	many	0.1	0.1.0	
# ::edge	grow-01	ARG1	economy	0.1	0.1.1	
# ::edge	grow-01	manner	rapid	0.1	0.1.2	
# ::edge	many	mod	also	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG1	continue-01	0.0.0.1	0.0.0	
# ::edge	promise-01	mod	present	0.0.0.1	0.0.0.1.0	
# ::edge	show-01	ARG0	and	0	0.0	
# ::edge	show-01	ARG1	grow-01	0	0.1	
# ::edge	temporal-quantity	unit	decade	0.0.0.1.0.0.0	0.0.0.1.0.0	
(s2 / show-01 
      :ARG0 (a / and 
            :ARG0-of (c / continue-01 
                  :ARG1 (d / do-02 
                        :ARG1 (s / so)) 
                  :ARG1-of (p / promise-01 
                        :mod (p2 / present 
                              :mod-of (d2 / decade 
                                    :unit-of (t / temporal-quantity)))) 
                  :prep-for 1990)) 
      :ARG1 (g / grow-01 
            :ARG0 (m / many 
                  :mod (a2 / also)) 
            :ARG1 (e / economy) 
            :manner (r / rapid)))

# ::snt sam nujoma swapos leader promised to work with all political parties to draft a new constitution and raised the prospect of forming a coalition government after independence next year
# ::tok sam nujoma swapos leader promised to work with all political parties to draft a new constitution and raised the prospect of forming a coalition government after independence next year
# ::alignments 28-29|0.0.0.2 27-28|0.0.0.2.0 26-27|0.2.0.0+0.2.0 25-26|0.2 23-24|0.1 21-22|0 19-20|0.0 17-18|0.0.0 16-17|0.0.0.1 15-16|0.0.0.0.2.0 14-15|0.0.0.0.2.0.0 12-13|0.0.0.0.2 10-11|0.0.0.0.2.1 9-10|0.0.0.0.2.1.0 8-9|0.0.0.0.2.1.1 4-5|0.0.0.0.0 3-4|0.0.0.0.1+0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:45.701
# ::node	0	form-01	21-22
# ::node	0.0	prospect	19-20
# ::node	0.0.0	raise-01	17-18
# ::node	0.0.0.0	person	3-4
# ::node	0.0.0.0.0	promise-01	4-5
# ::node	0.0.0.0.1	lead-02	3-4
# ::node	0.0.0.0.2	draft-01	12-13
# ::node	0.0.0.0.2.0	constitution	15-16
# ::node	0.0.0.0.2.0.0	new	14-15
# ::node	0.0.0.0.2.1	party	10-11
# ::node	0.0.0.0.2.1.0	politics	9-10
# ::node	0.0.0.0.2.1.1	all	8-9
# ::node	0.0.0.1	and	16-17
# ::node	0.0.0.2	year	28-29
# ::node	0.0.0.2.0	next	27-28
# ::node	0.1	coalition	23-24
# ::node	0.2	after	25-26
# ::node	0.2.0	depend-01	26-27
# ::node	0.2.0.0	-	26-27
# ::root	0	form-01
# ::edge	after	op1	depend-01	0.2	0.2.0	
# ::edge	and	op1	raise-01	0.0.0.1	0.0.0	
# ::edge	constitution	mod	new	0.0.0.0.2.0	0.0.0.0.2.0.0	
# ::edge	depend-01	polarity	-	0.2.0	0.2.0.0	
# ::edge	draft-01	ARG0	person	0.0.0.0.2	0.0.0.0	
# ::edge	draft-01	ARG1	constitution	0.0.0.0.2	0.0.0.0.2.0	
# ::edge	draft-01	instrument	party	0.0.0.0.2	0.0.0.0.2.1	
# ::edge	form-01	ARG0	prospect	0	0.0	
# ::edge	form-01	ARG1	coalition	0	0.1	
# ::edge	form-01	time	after	0	0.2	
# ::edge	lead-02	ARG0	person	0.0.0.0.1	0.0.0.0	
# ::edge	party	mod	politics	0.0.0.0.2.1	0.0.0.0.2.1.0	
# ::edge	party	quant	all	0.0.0.0.2.1	0.0.0.0.2.1.1	
# ::edge	promise-01	ARG0	person	0.0.0.0.0	0.0.0.0	
# ::edge	raise-01	ARG0	person	0.0.0	0.0.0.0	
# ::edge	raise-01	ARG1	prospect	0.0.0	0.0	
# ::edge	raise-01	time	year	0.0.0	0.0.0.2	
# ::edge	year	mod	next	0.0.0.2	0.0.0.2.0	
(f / form-01 
      :ARG0 (p / prospect 
            :ARG1-of (r / raise-01 
                  :ARG0 (p5 / person 
                        :ARG0-of (p4 / promise-01) 
                        :ARG0-of (l / lead-02) 
                        :ARG0-of (d2 / draft-01 
                              :ARG1 (c2 / constitution 
                                    :mod (n2 / new)) 
                              :instrument (p2 / party 
                                    :mod (p3 / politics) 
                                    :quant (a3 / all)))) 
                  :op-of (a2 / and) 
                  :time (y / year 
                        :mod (n / next)))) 
      :ARG1 (c / coalition) 
      :time (a / after 
            :op1 (d / depend-01 
                  :polarity -)))

# ::snt he also promised to lift the twomonthold blockade
# ::tok he also promised to lift the twomonthold blockade
# ::alignments 7-8|0.1.0 4-5|0.1 2-3|0 1-2|0.2 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:45.713
# ::node	0	promise-01	2-3
# ::node	0.0	he	0-1
# ::node	0.1	lift-01	4-5
# ::node	0.1.0	blockade-01	7-8
# ::node	0.2	also	1-2
# ::root	0	promise-01
# ::edge	lift-01	ARG1	blockade-01	0.1	0.1.0	
# ::edge	promise-01	ARG0	he	0	0.0	
# ::edge	promise-01	ARG1	lift-01	0	0.1	
# ::edge	promise-01	mod	also	0	0.2	
(p / promise-01 
      :ARG0 (h / he) 
      :ARG1 (l / lift-01 
            :ARG1 (b / blockade-01)) 
      :mod (a / also))

# ::snt all we are left with are a few opening chapters published as coots in the north edited by hugh brogan and notes towards an encounter between two sets of pirates the death and glories and the amazons which promised to have been a battle royal
# ::tok all we are left with are a few opening chapters published as coots in the north edited by hugh brogan and notes towards an encounter between two sets of pirates the death and glories and the amazons which promised to have been a battle royal
# ::alignments 44-45|0.1.0.0.1.0.0 43-44|0.1.0.0.1.0.0.0 38-39|0.1.0.0.1.0 34-35|0.1.0.0.1 32-33|0.1.0.0 31-32|0.1.0.0.0 29-30|0.1.0.0.1.1 27-28|0.1.0 26-27|0.1.0.1 25-26|0.1 24-25|0 21-22|0.2.0.1 20-21|0.2.0 16-17|0.2 15-16|0.2.1 10-11|0.2.0.0.0.0 9-10|0.2.0.0.0 8-9|0.2.0.0 7-8|0.0 1-2|0.2.0.0.0.0.0 0-1|0.2.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:45.984
# ::node	0	encounter-01	24-25
# ::node	0.0	few	7-8
# ::node	0.1	between	25-26
# ::node	0.1.0	set	27-28
# ::node	0.1.0.0	and	32-33
# ::node	0.1.0.0.0	die-01	31-32
# ::node	0.1.0.0.1	and	34-35
# ::node	0.1.0.0.1.0	promise-01	38-39
# ::node	0.1.0.0.1.0.0	royal	44-45
# ::node	0.1.0.0.1.0.0.0	battle-01	43-44
# ::node	0.1.0.0.1.1	pirate	29-30
# ::node	0.1.0.1	2	26-27
# ::node	0.2	edit-01	16-17
# ::node	0.2.0	and	20-21
# ::node	0.2.0.0	open-01	8-9
# ::node	0.2.0.0.0	chapter	9-10
# ::node	0.2.0.0.0.0	publish-01	10-11
# ::node	0.2.0.0.0.0.0	we	1-2
# ::node	0.2.0.0.0.0.0.0	all	0-1
# ::node	0.2.0.1	note	21-22
# ::node	0.2.1	north	15-16
# ::root	0	encounter-01
# ::edge	and	op1	open-01	0.2.0	0.2.0.0	
# ::edge	and	op1	pirate	0.1.0.0.1	0.1.0.0.1.1	
# ::edge	and	op1	set	0.1.0.0	0.1.0	
# ::edge	and	op2	die-01	0.1.0.0	0.1.0.0.0	
# ::edge	and	op2	note	0.2.0	0.2.0.1	
# ::edge	and	op3	and	0.1.0.0	0.1.0.0.1	
# ::edge	battle-01	ARG0	royal	0.1.0.0.1.0.0.0	0.1.0.0.1.0.0	
# ::edge	between	op1	set	0.1	0.1.0	
# ::edge	edit-01	ARG0	and	0.2	0.2.0	
# ::edge	edit-01	ARG1	north	0.2	0.2.1	
# ::edge	edit-01	time	encounter-01	0.2	0	
# ::edge	encounter-01	ARG0	few	0	0.0	
# ::edge	encounter-01	ARG1	between	0	0.1	
# ::edge	open-01	ARG0	chapter	0.2.0.0	0.2.0.0.0	
# ::edge	promise-01	ARG1	royal	0.1.0.0.1.0	0.1.0.0.1.0.0	
# ::edge	promise-01	ARG2	and	0.1.0.0.1.0	0.1.0.0.1	
# ::edge	publish-01	ARG0	we	0.2.0.0.0.0	0.2.0.0.0.0.0	
# ::edge	publish-01	ARG1	chapter	0.2.0.0.0.0	0.2.0.0.0	
# ::edge	set	quant	2	0.1.0	0.1.0.1	
# ::edge	we	mod	all	0.2.0.0.0.0.0	0.2.0.0.0.0.0.0	
(e / encounter-01 
      :ARG0 (f / few) 
      :ARG1 (b2 / between 
            :op1 (s / set 
                  :op-of (a2 / and 
                        :op1 (d / die-01) 
                        :op2 (a / and 
                              :ARG2-of (p / promise-01 
                                    :ARG1 (r / royal 
                                          :ARG0-of (b / battle-01))) 
                              :op1 (p2 / pirate))) 
                  :quant 2)) 
      :time-of (e2 / edit-01 
            :ARG0 (a3 / and 
                  :op1 (o / open-01 
                        :ARG0 (c / chapter 
                              :ARG1-of (p3 / publish-01 
                                    :ARG0 (w / we 
                                          :mod (a4 / all))))) 
                  :op2 (n / note)) 
            :ARG1 (n2 / north)))

# ::snt   she said she was not in a predatory mood but had promised information to david gerrard
# ::tok she said she was not in a predatory mood but had promised information to david gerrard
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:45.985
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt during wednesdays meeting the threeperson delegation pointed out that more than 80 political activists are on death row and mrs thatcher promised to make representations to pretoria on a casebycase basis
# ::tok during wednesdays meeting the threeperson delegation pointed out that more than 80 political activists are on death row and mrs thatcher promised to make representations to pretoria on a casebycase basis
# ::alignments 24-25|0.1.0.1 21-22|0.1.0 18-19|0.1 17-18|0.1.1 16-17|0.1.1.0 13-14|0.1.0.0 12-13|0.1.0.0.0 11-12|0.1.0.1.0 6-7|0 5-6|0.0 2-3|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:46.083
# ::node	0	point-02	6-7
# ::node	0.0	delegation	5-6
# ::node	0.1	and	18-19
# ::node	0.1.0	promise-01	21-22
# ::node	0.1.0.0	activist	13-14
# ::node	0.1.0.0.0	politics	12-13
# ::node	0.1.0.1	represent-01	24-25
# ::node	0.1.0.1.0	80	11-12
# ::node	0.1.1	row	17-18
# ::node	0.1.1.0	die-01	16-17
# ::node	0.2	meet-03	2-3
# ::root	0	point-02
# ::edge	activist	mod	politics	0.1.0.0	0.1.0.0.0	
# ::edge	and	op1	row	0.1	0.1.1	
# ::edge	point-02	ARG0	delegation	0	0.0	
# ::edge	point-02	ARG1	and	0	0.1	
# ::edge	point-02	time	meet-03	0	0.2	
# ::edge	promise-01	ARG0	activist	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG1	represent-01	0.1.0	0.1.0.1	
# ::edge	promise-01	ARG2	and	0.1.0	0.1	
# ::edge	represent-01	ARG1	80	0.1.0.1	0.1.0.1.0	
# ::edge	row	mod	die-01	0.1.1	0.1.1.0	
(p3 / point-02 
      :ARG0 (d2 / delegation) 
      :ARG1 (a / and 
            :ARG2-of (p / promise-01 
                  :ARG0 (a2 / activist 
                        :mod (p2 / politics)) 
                  :ARG1 (r / represent-01 
                        :ARG1 80)) 
            :op1 (r2 / row 
                  :mod (d / die-01))) 
      :time (m / meet-03))

# ::snt ive promised him that come and sit down instructed laura and led her to a fireside chair
# ::tok ive promised him that come and sit down instructed laura and led her to a fireside chair
# ::alignments 16-17|0.0.0.1.0.0 11-12|0.0.0.1.0 10-11|0.0.0.1 8-9|0 7-8|0.0 6-7|0.0.0 5-6|0.0.0.0 1-2|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:46.113
# ::node	0	instruct-01	8-9
# ::node	0.0	down	7-8
# ::node	0.0.0	sit-01	6-7
# ::node	0.0.0.0	and	5-6
# ::node	0.0.0.0.0	promise-01	1-2
# ::node	0.0.0.1	and	10-11
# ::node	0.0.0.1.0	lead-02	11-12
# ::node	0.0.0.1.0.0	chair	16-17
# ::root	0	instruct-01
(i / instruct-01 
      :op-of (d / down 
            :duration-of (s / sit-01 
                  :op-of (a2 / and 
                        :ARG1-of (p / promise-01)) 
                  :op-of (a / and 
                        :op1 (l / lead-02 
                              :destination (c / chair))))))

# ::snt that programme is cautious promising to clean up human rights abuses investigate past crimes raise minimum wages improve health and education and not much more
# ::tok that programme is cautious promising to clean up human rights abuses investigate past crimes raise minimum wages improve health and education and not much more
# ::alignments 23-24|0.1.0 21-22|0.0.1.0.1.0.0.0.2 20-21|0.1 19-20|0 18-19|0.0.1 17-18|0.0 16-17|0.0.0 15-16|0.0.0.0 14-15|0.0.1.0 13-14|0.0.1.0.0 12-13|0.0.1.0.0.0 11-12|0.0.1.0.1 10-11|0.0.1.0.1.0 9-10|0.0.1.0.1.0.0 8-9|0.0.1.0.1.0.0.1 6-7|0.0.1.0.1.0.0.0.0 4-5|0.0.1.0.1.0.0.0 3-4|0.0.1.0.1.0.0.0.1 1-2|0.0.1.0.1.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:46.919
# ::node	0	and	19-20
# ::node	0.0	improve-01	17-18
# ::node	0.0.0	wage	16-17
# ::node	0.0.0.0	minimum	15-16
# ::node	0.0.1	health	18-19
# ::node	0.0.1.0	raise-01	14-15
# ::node	0.0.1.0.0	crime	13-14
# ::node	0.0.1.0.0.0	past	12-13
# ::node	0.0.1.0.1	investigate-01	11-12
# ::node	0.0.1.0.1.0	abuse-01	10-11
# ::node	0.0.1.0.1.0.0	right	9-10
# ::node	0.0.1.0.1.0.0.0	promise-01	4-5
# ::node	0.0.1.0.1.0.0.0.0	clean	6-7
# ::node	0.0.1.0.1.0.0.0.1	cautious	3-4
# ::node	0.0.1.0.1.0.0.0.1.0	program	1-2
# ::node	0.0.1.0.1.0.0.0.2	and	21-22
# ::node	0.0.1.0.1.0.0.1	human	8-9
# ::node	0.1	educate-01	20-21
# ::node	0.1.0	much	23-24
# ::root	0	and
# ::edge	abuse-01	ARG1	right	0.0.1.0.1.0	0.0.1.0.1.0.0	
# ::edge	and	op1	improve-01	0	0.0	
# ::edge	and	op1	promise-01	0.0.1.0.1.0.0.0.2	0.0.1.0.1.0.0.0	
# ::edge	and	op2	educate-01	0	0.1	
# ::edge	cautious	domain	program	0.0.1.0.1.0.0.0.1	0.0.1.0.1.0.0.0.1.0	
# ::edge	crime	time	past	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	educate-01	ARG1	much	0.1	0.1.0	
# ::edge	improve-01	ARG0	wage	0.0	0.0.0	
# ::edge	improve-01	ARG2	health	0.0	0.0.1	
# ::edge	investigate-01	ARG0	abuse-01	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	investigate-01	ARG1	raise-01	0.0.1.0.1	0.0.1.0	
# ::edge	promise-01	ARG1	right	0.0.1.0.1.0.0.0	0.0.1.0.1.0.0	
# ::edge	promise-01	ARG2	clean	0.0.1.0.1.0.0.0	0.0.1.0.1.0.0.0.0	
# ::edge	promise-01	manner	cautious	0.0.1.0.1.0.0.0	0.0.1.0.1.0.0.0.1	
# ::edge	raise-01	ARG0	crime	0.0.1.0	0.0.1.0.0	
# ::edge	raise-01	ARG1	health	0.0.1.0	0.0.1	
# ::edge	right	mod	human	0.0.1.0.1.0.0	0.0.1.0.1.0.0.1	
# ::edge	wage	mod	minimum	0.0.0	0.0.0.0	
(a2 / and 
      :op1 (i / improve-01 
            :ARG0 (w / wage 
                  :mod (m2 / minimum)) 
            :ARG2 (h / health 
                  :ARG1-of (r / raise-01 
                        :ARG0 (c / crime 
                              :time (p / past)) 
                        :ARG1-of (i2 / investigate-01 
                              :ARG0 (a3 / abuse-01 
                                    :ARG1 (r2 / right 
                                          :ARG1-of (p2 / promise-01 
                                                :ARG2 (c2 / clean) 
                                                :manner (c3 / cautious 
                                                      :domain (p3 / program)) 
                                                :op-of (a / and)) 
                                          :mod (h2 / human))))))) 
      :op2 (e / educate-01 
            :ARG1 (m / much)))

# ::snt in an effort to secure british support for a compromise solution on a common ec mergers regulation the european commission yesterday promised to come forward with new measures to remove unfair obstacles to company takeovers
# ::tok in an effort to secure british support for a compromise solution on a common ec mergers regulation the european commission yesterday promised to come forward with new measures to remove unfair obstacles to company takeovers
# ::alignments 33-34|0.0.1 31-32|0 30-31|0.1.1+0.1 29-30|0.0 27-28|0.0.0 26-27|0.0.0.1 24-25|0.0.0.0.1 21-22|0.0.0.0 20-21|0.0.0.0.0 19-20|0.0.0.0.2.0 18-19|0.0.0.0.2.0.0.0.0+0.0.0.0.2.0.0.0+0.0.0.0.2.0.0 16-17|0.0.0.0.2 15-16|0.0.0.0.2.1 13-14|0.0.0.0.2.2 10-11|0.1.0.0 9-10|0.1.0 6-7|0.0.0.0.0.0.0 4-5|0.0.0.0.0.0 2-3|0.0.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:47.309
# ::node	0	obstacle	31-32
# ::node	0.0	remove-01	29-30
# ::node	0.0.0	measure	27-28
# ::node	0.0.0.0	promise-01	21-22
# ::node	0.0.0.0.0	yesterday	20-21
# ::node	0.0.0.0.0.0	secure-02	4-5
# ::node	0.0.0.0.0.0.0	support-01	6-7
# ::node	0.0.0.0.0.0.1	effort	2-3
# ::node	0.0.0.0.1	forward	24-25
# ::node	0.0.0.0.2	regulate-01	16-17
# ::node	0.0.0.0.2.0	commission	19-20
# ::node	0.0.0.0.2.0.0	continent	18-19
# ::node	0.0.0.0.2.0.0.0	name	18-19
# ::node	0.0.0.0.2.0.0.0.0	"Europe"	18-19
# ::node	0.0.0.0.2.1	merge-01	15-16
# ::node	0.0.0.0.2.2	common	13-14
# ::node	0.0.0.1	new	26-27
# ::node	0.0.1	company	33-34
# ::node	0.1	fair	30-31
# ::node	0.1.0	compromise-01	9-10
# ::node	0.1.0.0	solution	10-11
# ::node	0.1.1	-	30-31
# ::root	0	obstacle
# ::edge	commission	mod	continent	0.0.0.0.2.0	0.0.0.0.2.0.0	
# ::edge	compromise-01	ARG1	fair	0.1.0	0.1	
# ::edge	continent	name	name	0.0.0.0.2.0.0	0.0.0.0.2.0.0.0	
# ::edge	effort	purpose	secure-02	0.0.0.0.0.0.1	0.0.0.0.0.0	
# ::edge	fair	polarity	-	0.1	0.1.1	
# ::edge	measure	mod	new	0.0.0	0.0.0.1	
# ::edge	merge-01	ARG1	regulate-01	0.0.0.0.2.1	0.0.0.0.2	
# ::edge	name	op1	"Europe"	0.0.0.0.2.0.0.0	0.0.0.0.2.0.0.0.0	
# ::edge	obstacle	mod	fair	0	0.1	
# ::edge	promise-01	ARG0	yesterday	0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	ARG1	forward	0.0.0.0	0.0.0.0.1	
# ::edge	promise-01	ARG2	measure	0.0.0.0	0.0.0	
# ::edge	promise-01	ARG3	regulate-01	0.0.0.0	0.0.0.0.2	
# ::edge	regulate-01	ARG1	commission	0.0.0.0.2	0.0.0.0.2.0	
# ::edge	regulate-01	mod	common	0.0.0.0.2	0.0.0.0.2.2	
# ::edge	remove-01	ARG0	measure	0.0	0.0.0	
# ::edge	remove-01	ARG1	obstacle	0.0	0	
# ::edge	remove-01	ARG2	company	0.0	0.0.1	
# ::edge	secure-02	ARG0	yesterday	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	secure-02	ARG1	support-01	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	solution	mod	compromise-01	0.1.0.0	0.1.0	
(o / obstacle 
      :ARG1-of (r / remove-01 
            :ARG0 (m / measure 
                  :ARG2-of (p / promise-01 
                        :ARG0 (y / yesterday 
                              :ARG0-of (s3 / secure-02 
                                    :ARG1 (s2 / support-01) 
                                    :purpose-of (e / effort))) 
                        :ARG1 (f2 / forward) 
                        :ARG3 (r2 / regulate-01 
                              :ARG1 (c2 / commission 
                                    :mod (c3 / continent 
                                          :name (n2 / name 
                                                :op1 "Europe"))) 
                              :ARG1-of (m2 / merge-01) 
                              :mod (c4 / common))) 
                  :mod (n / new)) 
            :ARG2 (c / company)) 
      :mod (f / fair 
            :ARG1-of (c5 / compromise-01 
                  :mod-of (s / solution)) 
            :polarity -))

# ::snt while general michel aoun promises to fight to the death against syria a french warship is dispatched to lebanese waters
# ::tok while general michel aoun promises to fight to the death against syria a french warship is dispatched to lebanese waters
# ::alignments 19-20|0.0.0.0 16-17|0.0.0 13-14|0.0.0.1.0.0.0+0.0.0.1.0.0+0.0.0.1.0 11-12|0.0.0.1.1.0+0.0.0.1.1+0.0.0.1 9-10|0.0.1 6-7|0.0 4-5|0 1-2|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:47.355
# ::node	0	promise-01	4-5
# ::node	0.0	fight-01	6-7
# ::node	0.0.0	dispatch-01	16-17
# ::node	0.0.0.0	water	19-20
# ::node	0.0.0.1	country	11-12
# ::node	0.0.0.1.0	country	13-14
# ::node	0.0.0.1.0.0	name	13-14
# ::node	0.0.0.1.0.0.0	"France"	13-14
# ::node	0.0.0.1.1	name	11-12
# ::node	0.0.0.1.1.0	"Syria"	11-12
# ::node	0.0.1	die-01	9-10
# ::node	0.0.1.0	general	1-2
# ::root	0	promise-01
# ::edge	country	example	country	0.0.0.1.0	0.0.0.1	
# ::edge	country	name	name	0.0.0.1	0.0.0.1.1	
# ::edge	country	name	name	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	die-01	ARG1	general	0.0.1	0.0.1.0	
# ::edge	dispatch-01	ARG1	water	0.0.0	0.0.0.0	
# ::edge	dispatch-01	location	country	0.0.0	0.0.0.1	
# ::edge	fight-01	ARG1	dispatch-01	0.0	0.0.0	
# ::edge	fight-01	ARG2	die-01	0.0	0.0.1	
# ::edge	name	op1	"France"	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	name	op1	"Syria"	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	promise-01	ARG2	fight-01	0	0.0	
(p / promise-01 
      :ARG2 (f / fight-01 
            :ARG1 (d / dispatch-01 
                  :ARG1 (w / water) 
                  :location (c2 / country 
                        :example-of (c / country 
                              :name (n / name 
                                    :op1 "France")) 
                        :name (n2 / name 
                              :op1 "Syria"))) 
            :ARG2 (d2 / die-01 
                  :ARG1 (g / general))))

# ::snt measurement of intelligence relative to that of a pupils contemporaries promised the fairest and the simplest and apparently the most appropriate means for effecting selection of this kind
# ::tok measurement of intelligence relative to that of a pupils contemporaries promised the fairest and the simplest and apparently the most appropriate means for effecting selection of this kind
# ::alignments 27-28|0.2.0.0.1 26-27|0.2.0.0.1.0 24-25|0.2.0.0 21-22|0.2.0 20-21|0.2.0.1 19-20|0.2.0.1.0 17-18|0.2.0.2 16-17|0.1 13-14|0.2 10-11|0 8-9|0.2.0.0.0 3-4|0.3 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:47.501
# ::node	0	promise-01	10-11
# ::node	0.0	intelligence	2-3
# ::node	0.1	and	16-17
# ::node	0.2	and	13-14
# ::node	0.2.0	mean-01	21-22
# ::node	0.2.0.0	select-01	24-25
# ::node	0.2.0.0.0	pupil	8-9
# ::node	0.2.0.0.1	kind	27-28
# ::node	0.2.0.0.1.0	this	26-27
# ::node	0.2.0.1	appropriate	20-21
# ::node	0.2.0.1.0	most	19-20
# ::node	0.2.0.2	apparent	17-18
# ::node	0.3	relative	3-4
# ::root	0	promise-01
# ::edge	and	op1	mean-01	0.2	0.2.0	
# ::edge	appropriate	degree	most	0.2.0.1	0.2.0.1.0	
# ::edge	kind	mod	this	0.2.0.0.1	0.2.0.0.1.0	
# ::edge	mean-01	ARG1	select-01	0.2.0	0.2.0.0	
# ::edge	mean-01	mod	apparent	0.2.0	0.2.0.2	
# ::edge	mean-01	mod	appropriate	0.2.0	0.2.0.1	
# ::edge	promise-01	ARG0	intelligence	0	0.0	
# ::edge	promise-01	ARG1	and	0	0.1	
# ::edge	promise-01	ARG2	and	0	0.2	
# ::edge	promise-01	location	relative	0	0.3	
# ::edge	select-01	ARG0	pupil	0.2.0.0	0.2.0.0.0	
# ::edge	select-01	ARG1	kind	0.2.0.0	0.2.0.0.1	
(p / promise-01 
      :ARG0 (i / intelligence) 
      :ARG1 (a3 / and) 
      :ARG2 (a4 / and 
            :op1 (m / mean-01 
                  :ARG1 (s / select-01 
                        :ARG0 (p2 / pupil) 
                        :ARG1 (k / kind 
                              :mod (t / this))) 
                  :mod (a / appropriate 
                        :degree (m2 / most)) 
                  :mod (a2 / apparent))) 
      :location (r / relative))

# ::snt crowds of albanians who dodged bullets to storm into foreign embassies in tirana were sitting tight today after the leaders of europes last stalinist outpost promised to grant them passage abroad
# ::tok crowds of albanians who dodged bullets to storm into foreign embassies in tirana were sitting tight today after the leaders of europes last stalinist outpost promised to grant them passage abroad
# ::alignments 30-31|0.0.0.0.2 29-30|0.0 27-28|0.0.0.0.1 25-26|0.0.0.0 22-23|0.0.1 19-20|0.0.0.1+0.0.0 17-18|0.0.0.0.3 16-17|0.0.0.0.3.0.2 15-16|0.0.0.0.3.0.1 14-15|0.0.0.0.3.0 10-11|0.0.0.0.0.0 9-10|0.0.0.0.0 7-8|0 5-6|0.0.0.0.1.0 0-1|0.0.0.0.3.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:47.800
# ::node	0	storm	7-8
# ::node	0.0	pass-01	29-30
# ::node	0.0.0	person	19-20
# ::node	0.0.0.0	promise-01	25-26
# ::node	0.0.0.0.0	foreign	9-10
# ::node	0.0.0.0.0.0	embassy	10-11
# ::node	0.0.0.0.1	grant-01	27-28
# ::node	0.0.0.0.1.0	bullet	5-6
# ::node	0.0.0.0.2	abroad	30-31
# ::node	0.0.0.0.3	after	17-18
# ::node	0.0.0.0.3.0	sit-01	14-15
# ::node	0.0.0.0.3.0.0	crowd	0-1
# ::node	0.0.0.0.3.0.1	tight	15-16
# ::node	0.0.0.0.3.0.2	today	16-17
# ::node	0.0.0.1	lead-02	19-20
# ::node	0.0.1	last	22-23
# ::root	0	storm
(s2 / storm 
      :ARG1-of (p / pass-01 
            :ARG0 (p3 / person 
                  :ARG0-of (p2 / promise-01 
                        :ARG1 (f / foreign 
                              :mod-of (e / embassy)) 
                        :ARG2 (g / grant-01 
                              :ARG0 (b / bullet)) 
                        :location (a / abroad) 
                        :op-of (a2 / after 
                              :time-of (s / sit-01 
                                    :ARG1 (c / crowd) 
                                    :ARG2 (t2 / tight) 
                                    :time (t / today)))) 
                  :ARG0-of (l2 / lead-02)) 
            :time (l / last)))

# ::snt sarah eventually called when she got her phone two weeks later than promised and she still hadnt come home to see them
# ::tok sarah eventually called when she got her phone two weeks later than promised and she still hadnt come home to see them
# ::alignments 20-21|0 18-19|0.3 15-16|0.3.0.0.0 14-15|0.0 13-14|0.3.0.0.1 12-13|0.3.0.0 10-11|0.1 9-10|0.1.0.1+0.1.0 8-9|0.1.0.0 7-8|0.3.0.1 4-5|0.3.0 1-2|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:47.962
# ::node	0	see-01	20-21
# ::node	0.0	she	14-15
# ::node	0.1	late	10-11
# ::node	0.1.0	temporal-quantity	9-10
# ::node	0.1.0.0	2	8-9
# ::node	0.1.0.1	week	9-10
# ::node	0.2	eventual	1-2
# ::node	0.3	home	18-19
# ::node	0.3.0	she	4-5
# ::node	0.3.0.0	promise-01	12-13
# ::node	0.3.0.0.0	still	15-16
# ::node	0.3.0.0.1	and	13-14
# ::node	0.3.0.1	phone	7-8
# ::root	0	see-01
# ::edge	and	op1	promise-01	0.3.0.0.1	0.3.0.0	
# ::edge	eventual	op1	see-01	0.2	0	
# ::edge	home	poss	she	0.3	0.3.0	
# ::edge	home	purpose	see-01	0.3	0	
# ::edge	late	op1	temporal-quantity	0.1	0.1.0	
# ::edge	phone	poss	she	0.3.0.1	0.3.0	
# ::edge	promise-01	ARG0	she	0.3.0.0	0.3.0	
# ::edge	promise-01	ARG1	still	0.3.0.0	0.3.0.0.0	
# ::edge	see-01	ARG0	she	0	0.0	
# ::edge	see-01	ARG1	late	0	0.1	
# ::edge	temporal-quantity	quant	2	0.1.0	0.1.0.0	
# ::edge	temporal-quantity	unit	week	0.1.0	0.1.0.1	
(s / see-01 
      :ARG0 (s3 / she) 
      :ARG1 (l / late 
            :op1 (t / temporal-quantity 
                  :quant 2 
                  :unit (w / week))) 
      :op-of (e / eventual) 
      :purpose-of (h / home 
            :poss (s4 / she 
                  :ARG0-of (p / promise-01 
                        :ARG1 (s2 / still) 
                        :op-of (a / and)) 
                  :poss-of (p2 / phone))))

# ::snt or promised according to taste dash
# ::tok or promised according to taste dash
# ::alignments 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:47.968
# ::node	0	promise-01	1-2
# ::node	0.0	or	0-1
# ::root	0	promise-01
(p / promise-01 
      :op-of (o / or))

# ::snt is it with any sadness that culham and harwell have seen these people go  yes its always sad to say farewell to collegues that have been with you for a number of years but all things have to come to an end we say farewell with sadness and vocal soundum fond memories to those whove been with us for so long but we welcome all those who are joining us and we can promise them a thriving future
# ::tok is it with any sadness that culham and harwell have seen these people go yes its always sad to say farewell to collegues that have been with you for a number of years but all things have to come to an end we say farewell with sadness and vocal soundum fond memories to those whove been with us for so long but we welcome all those who are joining us and we can promise them a thriving future
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:47.970
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the young raciallymixed crowd of 50000 selfstyled comrades chanted the catchy campaign hymn that promised my first vote will make our star shine
# ::tok the young raciallymixed crowd of 50000 selfstyled comrades chanted the catchy campaign hymn that promised my first vote will make our star shine
# ::alignments 22-23|0.1.0.0.0 21-22|0.1.0.0.0.0 17-18|0.1.0.0 14-15|0.1.0 11-12|0.1.0.0.2 8-9|0 7-8|0.0.0+0.0 5-6|0.1.0.0.1 3-4|0.1 1-2|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:48.094
# ::node	0	chant-01	8-9
# ::node	0.0	have-rel-role-91	7-8
# ::node	0.0.0	comrade	7-8
# ::node	0.1	crowd	3-4
# ::node	0.1.0	promise-01	14-15
# ::node	0.1.0.0	vote-01	17-18
# ::node	0.1.0.0.0	shine-01	22-23
# ::node	0.1.0.0.0.0	star	21-22
# ::node	0.1.0.0.1	50000	5-6
# ::node	0.1.0.0.2	campaign-01	11-12
# ::node	0.1.1	young	1-2
# ::root	0	chant-01
# ::edge	campaign-01	ARG1	vote-01	0.1.0.0.2	0.1.0.0	
# ::edge	chant-01	ARG0	have-rel-role-91	0	0.0	
# ::edge	chant-01	ARG1	crowd	0	0.1	
# ::edge	crowd	mod	young	0.1	0.1.1	
# ::edge	have-rel-role-91	ARG2	comrade	0.0	0.0.0	
# ::edge	promise-01	ARG0	crowd	0.1.0	0.1	
# ::edge	promise-01	ARG1	vote-01	0.1.0	0.1.0.0	
# ::edge	shine-01	ARG0	vote-01	0.1.0.0.0	0.1.0.0	
# ::edge	shine-01	ARG1	star	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	vote-01	ARG1	50000	0.1.0.0	0.1.0.0.1	
(c2 / chant-01 
      :ARG0 (h / have-rel-role-91 
            :ARG2 (c3 / comrade)) 
      :ARG1 (c4 / crowd 
            :ARG0-of (p / promise-01 
                  :ARG1 (v / vote-01 
                        :ARG0-of (s / shine-01 
                              :ARG1 (s2 / star)) 
                        :ARG1 50000 
                        :ARG1-of (c / campaign-01))) 
            :mod (y / young)))

# ::snt to promise action to halt the slide
# ::tok to promise action to halt the slide
# ::alignments 6-7|0.0.1 4-5|0.0 2-3|0.0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:48.103
# ::node	0	promise-01	1-2
# ::node	0.0	halt-01	4-5
# ::node	0.0.0	action	2-3
# ::node	0.0.1	slide-01	6-7
# ::root	0	promise-01
# ::edge	halt-01	ARG0	action	0.0	0.0.0	
# ::edge	halt-01	ARG1	slide-01	0.0	0.0.1	
# ::edge	promise-01	ARG2	halt-01	0	0.0	
(p / promise-01 
      :ARG2 (h / halt-01 
            :ARG0 (a / action) 
            :ARG1 (s / slide-01)))

# ::snt he promised a shock of credibility to beat inflation
# ::tok he promised a shock of credibility to beat inflation
# ::alignments 8-9|0.0.0.0.0 7-8|0.0.0.0 5-6|0.1 3-4|0.0.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:48.119
# ::node	0	promise-01	1-2
# ::node	0.0	he	0-1
# ::node	0.0.0	shock-01	3-4
# ::node	0.0.0.0	beat-01	7-8
# ::node	0.0.0.0.0	inflation	8-9
# ::node	0.1	credibility	5-6
# ::root	0	promise-01
# ::edge	beat-01	ARG1	inflation	0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	ARG0	he	0	0.0	
# ::edge	promise-01	ARG1	credibility	0	0.1	
# ::edge	shock-01	ARG0	he	0.0.0	0.0	
# ::edge	shock-01	ARG1	beat-01	0.0.0	0.0.0.0	
(p / promise-01 
      :ARG0 (h / he 
            :ARG0-of (s / shock-01 
                  :ARG1 (b / beat-01 
                        :ARG1 (i / inflation)))) 
      :ARG1 (c / credibility))

# ::snt the term anzac would hardly have satisfied the trade descriptions act in view of the appearance of only three allblacks instead of the seven originally promised by the new zealand rfu
# ::tok the term anzac would hardly have satisfied the trade descriptions act in view of the appearance of only three allblacks instead of the seven originally promised by the new zealand rfu
# ::alignments 28-29|0.1.2.0.0.0 25-26|0 24-25|0.2 23-24|0.3 20-21|0.1.0 18-19|0.1.2.0.0.1 17-18|0.1.1 15-16|0.1 10-11|0.1.2 8-9|0.1.2.0.0 6-7|0.1.2.0 4-5|0.1.2.0.1 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:48.283
# ::node	0	promise-01	25-26
# ::node	0.0	term	1-2
# ::node	0.1	appear-01	15-16
# ::node	0.1.0	instead	20-21
# ::node	0.1.1	only	17-18
# ::node	0.1.2	act-02	10-11
# ::node	0.1.2.0	satisfy-01	6-7
# ::node	0.1.2.0.0	trade-01	8-9
# ::node	0.1.2.0.0.0	new	28-29
# ::node	0.1.2.0.0.1	3	18-19
# ::node	0.1.2.0.1	hardly	4-5
# ::node	0.2	original	24-25
# ::node	0.3	7	23-24
# ::root	0	promise-01
# ::edge	act-02	ARG1	appear-01	0.1.2	0.1	
# ::edge	appear-01	ARG0	instead	0.1	0.1.0	
# ::edge	appear-01	ARG1	only	0.1	0.1.1	
# ::edge	promise-01	ARG0	term	0	0.0	
# ::edge	promise-01	ARG1	appear-01	0	0.1	
# ::edge	promise-01	time	7	0	0.3	
# ::edge	promise-01	time	original	0	0.2	
# ::edge	satisfy-01	ARG1	act-02	0.1.2.0	0.1.2	
# ::edge	satisfy-01	mod	hardly	0.1.2.0	0.1.2.0.1	
# ::edge	trade-01	ARG0	new	0.1.2.0.0	0.1.2.0.0.0	
# ::edge	trade-01	ARG1	3	0.1.2.0.0	0.1.2.0.0.1	
# ::edge	trade-01	ARG2	satisfy-01	0.1.2.0.0	0.1.2.0	
(p / promise-01 
      :ARG0 (t2 / term) 
      :ARG1 (a / appear-01 
            :ARG0 (i / instead) 
            :ARG1 (o2 / only) 
            :ARG1-of (a2 / act-02 
                  :ARG1-of (s / satisfy-01 
                        :ARG2-of (t / trade-01 
                              :ARG0 (n / new) 
                              :ARG1 3) 
                        :mod (h / hardly)))) 
      :time (o / original) 
      :time 7)

# ::snt the university of zimbabwe closed for the first time in its 32year history on 4 october after riots erupted reopens temporarily today for exams but students must sign a statement promising not to engage in political activity
# ::tok the university of zimbabwe closed for the first time in its 32year history on 4 october after riots erupted reopens temporarily today for exams but students must sign a statement promising not to engage in political activity
# ::alignments 36-37|0.2.1.1.0 35-36|0.2.1.1.0.0 33-34|0.2.1.1 30-31|0.2.1 29-30|0.2 25-26|0.2.0.0+0.2.0 24-25|0 21-22|0.1 20-21|0.0 18-19|0.2.1.0.0 17-18|0.2.1.0 16-17|0.2.1.0.0.0 15-16|0.2.1.0.0.0.0.0+0.2.1.0.0.0.0 14-15|0.2.1.0.0.0.0.1 12-13|0.2.1.0.0.0.1.1.0 8-9|0.2.1.0.0.0.1.1 4-5|0.2.1.0.0.0.1 1-2|0.2.1.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:48.596
# ::node	0	contrast-01	24-25
# ::node	0.0	temporary	20-21
# ::node	0.1	today	21-22
# ::node	0.2	state-01	29-30
# ::node	0.2.0	person	25-26
# ::node	0.2.0.0	study-01	25-26
# ::node	0.2.1	promise-01	30-31
# ::node	0.2.1.0	riot-01	17-18
# ::node	0.2.1.0.0	erupt-01	18-19
# ::node	0.2.1.0.0.0	after	16-17
# ::node	0.2.1.0.0.0.0	date-entity	15-16
# ::node	0.2.1.0.0.0.0.0	10	15-16
# ::node	0.2.1.0.0.0.0.1	4	14-15
# ::node	0.2.1.0.0.0.1	close-01	4-5
# ::node	0.2.1.0.0.0.1.0	university	1-2
# ::node	0.2.1.0.0.0.1.1	time	8-9
# ::node	0.2.1.0.0.0.1.1.0	history	12-13
# ::node	0.2.1.1	engage-01	33-34
# ::node	0.2.1.1.0	activity	36-37
# ::node	0.2.1.1.0.0	politics	35-36
# ::root	0	contrast-01
# ::edge	activity	mod	politics	0.2.1.1.0	0.2.1.1.0.0	
# ::edge	after	op1	date-entity	0.2.1.0.0.0	0.2.1.0.0.0.0	
# ::edge	after	op2	erupt-01	0.2.1.0.0.0	0.2.1.0.0	
# ::edge	close-01	ARG0	university	0.2.1.0.0.0.1	0.2.1.0.0.0.1.0	
# ::edge	close-01	ARG1	time	0.2.1.0.0.0.1	0.2.1.0.0.0.1.1	
# ::edge	close-01	time	after	0.2.1.0.0.0.1	0.2.1.0.0.0	
# ::edge	contrast-01	ARG0	temporary	0	0.0	
# ::edge	contrast-01	ARG1	today	0	0.1	
# ::edge	date-entity	month	10	0.2.1.0.0.0.0	0.2.1.0.0.0.0.0	
# ::edge	date-entity	quant	4	0.2.1.0.0.0.0	0.2.1.0.0.0.0.1	
# ::edge	engage-01	ARG2	activity	0.2.1.1	0.2.1.1.0	
# ::edge	erupt-01	ARG1	riot-01	0.2.1.0.0	0.2.1.0	
# ::edge	promise-01	ARG0	state-01	0.2.1	0.2	
# ::edge	promise-01	ARG1	riot-01	0.2.1	0.2.1.0	
# ::edge	promise-01	ARG2	engage-01	0.2.1	0.2.1.1	
# ::edge	state-01	ARG0	person	0.2	0.2.0	
# ::edge	state-01	ARG1	contrast-01	0.2	0	
# ::edge	study-01	ARG0	person	0.2.0.0	0.2.0	
# ::edge	time	poss	history	0.2.1.0.0.0.1.1	0.2.1.0.0.0.1.1.0	
(c / contrast-01 
      :ARG0 (t2 / temporary) 
      :ARG1 (t / today) 
      :ARG1-of (s / state-01 
            :ARG0 (p3 / person 
                  :ARG0-of (s2 / study-01)) 
            :ARG0-of (p2 / promise-01 
                  :ARG1 (r / riot-01 
                        :ARG1-of (e2 / erupt-01 
                              :op-of (a2 / after 
                                    :op1 (d / date-entity 
                                          :month 10 
                                          :quant 4) 
                                    :time-of (c2 / close-01 
                                          :ARG0 (u / university) 
                                          :ARG1 (t3 / time 
                                                :poss (h / history)))))) 
                  :ARG2 (e / engage-01 
                        :ARG2 (a / activity 
                              :mod (p / politics))))))

# ::snt shed promised the girl a lift as far as malaga
# ::tok shed promised the girl a lift as far as malaga
# ::alignments 7-8|0.0.1 5-6|0.0.0.0 3-4|0.0.0 1-2|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:48.632
# ::node	0	shed-01	0-1
# ::node	0.0	promise-01	1-2
# ::node	0.0.0	girl	3-4
# ::node	0.0.0.0	lift-01	5-6
# ::node	0.0.1	far	7-8
# ::root	0	shed-01
# ::edge	lift-01	ARG1	girl	0.0.0.0	0.0.0	
# ::edge	promise-01	ARG1	girl	0.0	0.0.0	
# ::edge	promise-01	manner	far	0.0	0.0.1	
# ::edge	shed-01	ARG1	promise-01	0	0.0	
(s / shed-01 
      :ARG1 (p / promise-01 
            :ARG1 (g / girl 
                  :ARG1-of (l / lift-01)) 
            :manner (f / far)))

# ::snt the nearest house alida had promised herself in her short desperate journey through the storm the nearest house and she had spoken the words to isabel sweating and terrified by the harshness of her own breathing by the lightning and rain while skirting the edge of the open field she dared not cross
# ::tok the nearest house alida had promised herself in her short desperate journey through the storm the nearest house and she had spoken the words to isabel sweating and terrified by the harshness of her own breathing by the lightning and rain while skirting the edge of the open field she dared not cross
# ::alignments 52-53|0.3 50-51|0 49-50|0.0 48-49|0.1 40-41|0.2.0.0.2.1.1 39-40|0.2.0.0.2.1 35-36|0.2.0.0.2.1.0 28-29|0.2 27-28|0.2.0 23-24|0.2.0.0.0 21-22|0.2.0.0 19-20|0.2.0.0.2.0 18-19|0.2.0.0.2 17-18|0.2.0.0.1 16-17|0.2.0.0.1.0.0+0.2.0.0.1.0 14-15|0.2.0.1.2.0 11-12|0.2.0.1.2 10-11|0.2.0.1.2.1 9-10|0.2.0.1.2.2 5-6|0.2.0.1 2-3|0.2.0.1.1 1-2|0.2.0.1.0.0+0.2.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:49.735
# ::node	0	dare-01	50-51
# ::node	0.0	she	49-50
# ::node	0.1	field	48-49
# ::node	0.2	terrify-01	28-29
# ::node	0.2.0	and	27-28
# ::node	0.2.0.0	speak-01	21-22
# ::node	0.2.0.0.0	word	23-24
# ::node	0.2.0.0.1	house	17-18
# ::node	0.2.0.0.1.0	near	16-17
# ::node	0.2.0.0.1.0.0	most	16-17
# ::node	0.2.0.0.2	and	18-19
# ::node	0.2.0.0.2.0	she	19-20
# ::node	0.2.0.0.2.1	and	39-40
# ::node	0.2.0.0.2.1.0	breathe-01	35-36
# ::node	0.2.0.0.2.1.1	rain-01	40-41
# ::node	0.2.0.1	promise-01	5-6
# ::node	0.2.0.1.0	near	1-2
# ::node	0.2.0.1.0.0	most	1-2
# ::node	0.2.0.1.1	house	2-3
# ::node	0.2.0.1.2	journey-01	11-12
# ::node	0.2.0.1.2.0	storm	14-15
# ::node	0.2.0.1.2.1	desperate	10-11
# ::node	0.2.0.1.2.2	short	9-10
# ::node	0.3	cross-02	52-53
# ::root	0	dare-01
# ::edge	and	op1	breathe-01	0.2.0.0.2.1	0.2.0.0.2.1.0	
# ::edge	and	op1	she	0.2.0.0.2	0.2.0.0.2.0	
# ::edge	and	op1	terrify-01	0.2.0	0.2	
# ::edge	and	op2	rain-01	0.2.0.0.2.1	0.2.0.0.2.1.1	
# ::edge	and	op2	speak-01	0.2.0.0.2	0.2.0.0	
# ::edge	and	op3	and	0.2.0.0.2	0.2.0.0.2.1	
# ::edge	dare-01	ARG0	she	0	0.0	
# ::edge	dare-01	ARG1	field	0	0.1	
# ::edge	dare-01	ARG2	cross-02	0	0.3	
# ::edge	house	mod	near	0.2.0.0.1	0.2.0.0.1.0	
# ::edge	journey-01	ARG1	storm	0.2.0.1.2	0.2.0.1.2.0	
# ::edge	journey-01	manner	desperate	0.2.0.1.2	0.2.0.1.2.1	
# ::edge	journey-01	mod	short	0.2.0.1.2	0.2.0.1.2.2	
# ::edge	near	degree	most	0.2.0.0.1.0	0.2.0.0.1.0.0	
# ::edge	near	degree	most	0.2.0.1.0	0.2.0.1.0.0	
# ::edge	promise-01	ARG0	near	0.2.0.1	0.2.0.1.0	
# ::edge	promise-01	ARG1	house	0.2.0.1	0.2.0.1.1	
# ::edge	promise-01	ARG2	and	0.2.0.1	0.2.0	
# ::edge	promise-01	prep-by	journey-01	0.2.0.1	0.2.0.1.2	
# ::edge	speak-01	ARG0	and	0.2.0.0	0.2.0	
# ::edge	speak-01	ARG1	word	0.2.0.0	0.2.0.0.0	
# ::edge	speak-01	ARG2	house	0.2.0.0	0.2.0.0.1	
# ::edge	terrify-01	ARG1	dare-01	0.2	0	
(d / dare-01 
      :ARG0 (s / she) 
      :ARG1 (f / field) 
      :ARG1-of (t / terrify-01 
            :op-of (a2 / and 
                  :ARG0-of (s2 / speak-01 
                        :ARG1 (w / word) 
                        :ARG2 (h / house 
                              :mod (n / near 
                                    :degree (m / most))) 
                        :op-of (a3 / and 
                              :op1 (s3 / she) 
                              :op2 (a / and 
                                    :op1 (b / breathe-01) 
                                    :op2 (r / rain-01)))) 
                  :ARG2-of (p / promise-01 
                        :ARG0 (n2 / near 
                              :degree (m2 / most)) 
                        :ARG1 (h2 / house) 
                        :prep-by (j / journey-01 
                              :ARG1 (s4 / storm) 
                              :manner (d2 / desperate) 
                              :mod (s5 / short))))) 
      :ARG2 (c / cross-02))

# ::snt   bryan gould labours environment spokesman promised a constructive response but said a genuine green bill would have at its heart a programme to reduce carbon dioxide and other greenhouse gas emissions
# ::tok bryan gould labours environment spokesman promised a constructive response but said a genuine green bill would have at its heart a programme to reduce carbon dioxide and other greenhouse gas emissions
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:49.736
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt he had not received the fair play which george v had promised
# ::tok he had not received the fair play which george v had promised
# ::alignments 11-12|0.0.0 6-7|0.1 5-6|0.1.0 3-4|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:49.752
# ::node	0	receive-01	3-4
# ::node	0.0	he	0-1
# ::node	0.0.0	promise-01	11-12
# ::node	0.1	play-01	6-7
# ::node	0.1.0	fair	5-6
# ::root	0	receive-01
# ::edge	play-01	degree	fair	0.1	0.1.0	
# ::edge	promise-01	ARG0	he	0.0.0	0.0	
# ::edge	receive-01	ARG0	he	0	0.0	
# ::edge	receive-01	ARG1	play-01	0	0.1	
(r / receive-01 
      :ARG0 (h / he 
            :ARG0-of (p / promise-01)) 
      :ARG1 (p2 / play-01 
            :degree (f / fair)))

# ::snt us analysts were impressed that mr gorbachev this week promised that the newlyelected supreme soviet would debate the issues behind the strike
# ::tok us analysts were impressed that mr gorbachev this week promised that the newlyelected supreme soviet would debate the issues behind the strike
# ::alignments 21-22|0.1.1.0.0.0.0 19-20|0.1.1.0.0.0 18-19|0.1.1.0.0 16-17|0.1.1.0 13-14|0.0 9-10|0.1.1 8-9|0.1.1.1 7-8|0.1.1.1.0 3-4|0 1-2|0.1.0+0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:49.960
# ::node	0	impress-01	3-4
# ::node	0.0	supreme	13-14
# ::node	0.1	person	1-2
# ::node	0.1.0	analyze-01	1-2
# ::node	0.1.1	promise-01	9-10
# ::node	0.1.1.0	debate-01	16-17
# ::node	0.1.1.0.0	issue	18-19
# ::node	0.1.1.0.0.0	behind	19-20
# ::node	0.1.1.0.0.0.0	strike-01	21-22
# ::node	0.1.1.1	week	8-9
# ::node	0.1.1.1.0	this	7-8
# ::root	0	impress-01
# ::edge	analyze-01	ARG0	person	0.1.0	0.1	
# ::edge	behind	op1	strike-01	0.1.1.0.0.0	0.1.1.0.0.0.0	
# ::edge	debate-01	ARG1	issue	0.1.1.0	0.1.1.0.0	
# ::edge	impress-01	ARG0	supreme	0	0.0	
# ::edge	impress-01	ARG1	person	0	0.1	
# ::edge	issue	location	behind	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	promise-01	ARG0	person	0.1.1	0.1	
# ::edge	promise-01	ARG1	debate-01	0.1.1	0.1.1.0	
# ::edge	promise-01	time	week	0.1.1	0.1.1.1	
# ::edge	week	mod	this	0.1.1.1	0.1.1.1.0	
(i2 / impress-01 
      :ARG0 (s2 / supreme) 
      :ARG1 (p2 / person 
            :ARG0-of (a / analyze-01) 
            :ARG0-of (p / promise-01 
                  :ARG1 (d / debate-01 
                        :ARG1 (i / issue 
                              :location (b / behind 
                                    :op1 (s / strike-01)))) 
                  :time (w / week 
                        :mod (t / this)))))

# ::snt  and andy was so impressed with their efforts that he photographed the alien models and has promised to include these shots in slide shows presented during every workshop
# ::tok and andy was so impressed with their efforts that he photographed the alien models and has promised to include these shots in slide shows presented during every workshop
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:49.961
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt besides she had turned down all other invitations for the weekend and what was left of it promised to be a dull affair
# ::tok besides she had turned down all other invitations for the weekend and what was left of it promised to be a dull affair
# ::alignments 22-23|0.1 21-22|0.1.0 17-18|0 16-17|0.2 11-12|0.1.0.1 10-11|0.1.0.1.0 6-7|0.0 5-6|0.0.0.0 4-5|0.0.0 1-2|0.1.0.0.0 0-1|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:50.326
# ::node	0	promise-01	17-18
# ::node	0.0	other	6-7
# ::node	0.0.0	down	4-5
# ::node	0.0.0.0	all	5-6
# ::node	0.1	affair	22-23
# ::node	0.1.0	dull-01	21-22
# ::node	0.1.0.0	besides	0-1
# ::node	0.1.0.0.0	she	1-2
# ::node	0.1.0.1	and	11-12
# ::node	0.1.0.1.0	weekend	10-11
# ::node	0.2	it	16-17
# ::root	0	promise-01
# ::edge	all	mod	down	0.0.0.0	0.0.0	
# ::edge	and	op1	weekend	0.1.0.1	0.1.0.1.0	
# ::edge	and	op2	dull-01	0.1.0.1	0.1.0	
# ::edge	besides	op1	she	0.1.0.0	0.1.0.0.0	
# ::edge	dull-01	ARG0	besides	0.1.0	0.1.0.0	
# ::edge	dull-01	ARG1	affair	0.1.0	0.1	
# ::edge	other	mod	down	0.0	0.0.0	
# ::edge	promise-01	ARG0	other	0	0.0	
# ::edge	promise-01	ARG1	affair	0	0.1	
# ::edge	promise-01	ARG2	it	0	0.2	
(p / promise-01 
      :ARG0 (o / other 
            :mod (d2 / down 
                  :mod-of (a3 / all))) 
      :ARG1 (a / affair 
            :ARG1-of (d / dull-01 
                  :ARG0 (b / besides 
                        :op1 (s / she)) 
                  :op-of (a2 / and 
                        :op1 (w / weekend)))) 
      :ARG2 (i / it))

# ::snt she took the details into the office on sunday afternoon to show rain who had promised to call in at the office although it was hollys sunday for editing the column
# ::tok she took the details into the office on sunday afternoon to show rain who had promised to call in at the office although it was hollys sunday for editing the column
# ::alignments 30-31|0 26-27|0.0.1.0 23-24|0.0.0.0.1.0 21-22|0.0.0.0.1 15-16|0.0.1 12-13|0.0 11-12|0.0.0 9-10|0.0.0.0.0.0.0.0 8-9|0.0.0.0.0.0.0 6-7|0.0.0.0.0.0 3-4|0.0.0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:50.474
# ::node	0	column	30-31
# ::node	0.0	rain-01	12-13
# ::node	0.0.0	show-01	11-12
# ::node	0.0.0.0	she	0-1
# ::node	0.0.0.0.0	detail-01	3-4
# ::node	0.0.0.0.0.0	office	6-7
# ::node	0.0.0.0.0.0.0	sunday	8-9
# ::node	0.0.0.0.0.0.0.0	afternoon	9-10
# ::node	0.0.0.0.1	office	21-22
# ::node	0.0.0.0.1.0	it	23-24
# ::node	0.0.1	promise-01	15-16
# ::node	0.0.1.0	sunday	26-27
# ::root	0	column
(c / column 
      :ARG1-of (r / rain-01 
            :ARG1-of (s2 / show-01 
                  :ARG0 (s4 / she 
                        :ARG0-of (d / detail-01 
                              :ARG1 (o2 / office 
                                    :mod (s3 / sunday 
                                          :mod-of (a / afternoon)))) 
                        :poss-of (o / office 
                              :poss (i / it)))) 
            :ARG1-of (p / promise-01 
                  :ARG0 (s / sunday))))

# ::snt then sir alfred pulled in in his bentley and promised me a free hand to design a car that worked
# ::tok then sir alfred pulled in in his bentley and promised me a free hand to design a car that worked
# ::alignments 19-20|0.0.2.0.0 17-18|0.0.2.0 15-16|0.0.2 13-14|0.0.1 12-13|0.0.1.0 9-10|0.0 8-9|0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:50.524
# ::node	0	and	8-9
# ::node	0.0	promise-01	9-10
# ::node	0.0.0	then	0-1
# ::node	0.0.1	hand	13-14
# ::node	0.0.1.0	free-41	12-13
# ::node	0.0.2	design-01	15-16
# ::node	0.0.2.0	car	17-18
# ::node	0.0.2.0.0	work-01	19-20
# ::root	0	and
# ::edge	and	op1	promise-01	0	0.0	
# ::edge	design-01	ARG1	car	0.0.2	0.0.2.0	
# ::edge	free-41	ARG1	hand	0.0.1.0	0.0.1	
# ::edge	promise-01	ARG0	then	0.0	0.0.0	
# ::edge	promise-01	ARG1	hand	0.0	0.0.1	
# ::edge	promise-01	ARG2	design-01	0.0	0.0.2	
# ::edge	work-01	ARG1	car	0.0.2.0.0	0.0.2.0	
(a / and 
      :op1 (p / promise-01 
            :ARG0 (t / then) 
            :ARG1 (h / hand 
                  :ARG1-of (f / free-41)) 
            :ARG2 (d / design-01 
                  :ARG1 (c / car 
                        :ARG1-of (w / work-01)))))

# ::snt   i will she promised and promptly forgot when oliver got home a few minutes later
# ::tok i will she promised and promptly forgot when oliver got home a few minutes later
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:50.525
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt he promised the union would exhaust all pay bargaining tactics before a strike ballot was held
# ::tok he promised the union would exhaust all pay bargaining tactics before a strike ballot was held
# ::alignments 13-14|0 12-13|0.0 10-11|0.0.0.0.0.2 9-10|0.0.0.0 8-9|0.0.0 7-8|0.0.0.0.0 6-7|0.0.0.0.0.1 3-4|0.0.0.0.0.0 1-2|0.0.0.0.0.0.0 0-1|0.0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:50.619
# ::node	0	ballot	13-14
# ::node	0.0	strike-01	12-13
# ::node	0.0.0	bargain-01	8-9
# ::node	0.0.0.0	tactic	9-10
# ::node	0.0.0.0.0	pay-01	7-8
# ::node	0.0.0.0.0.0	union	3-4
# ::node	0.0.0.0.0.0.0	promise-01	1-2
# ::node	0.0.0.0.0.0.0.0	he	0-1
# ::node	0.0.0.0.0.1	all	6-7
# ::node	0.0.0.0.0.2	before	10-11
# ::root	0	ballot
(b / ballot 
      :ARG1-of (s / strike-01 
            :ARG1-of (b3 / bargain-01 
                  :purpose-of (t / tactic 
                        :ARG1-of (p / pay-01 
                              :ARG0 (u / union 
                                    :ARG1-of (p2 / promise-01 
                                          :ARG0 (h / he))) 
                              :mod (a / all) 
                              :time (b2 / before))))))

# ::snt but the first night in boston passed off without incident he left for england promising lady gregory to return if the situation deteriorated
# ::tok but the first night in boston passed off without incident he left for england promising lady gregory to return if the situation deteriorated
# ::alignments 22-23|0.1.0 21-22|0.1 15-16|0.1.0.1.0 14-15|0.1.0.1 13-14|0.1.0.1.0.0.0.0+0.1.0.1.0.0.0+0.1.0.1.0.0 10-11|0.1.0.0 9-10|0.0 7-8|0.0.0 3-4|0.2 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:50.772
# ::node	0	contrast-01	0-1
# ::node	0.0	incident	9-10
# ::node	0.0.0	off	7-8
# ::node	0.1	situation	21-22
# ::node	0.1.0	deteriorate-01	22-23
# ::node	0.1.0.0	he	10-11
# ::node	0.1.0.1	promise-01	14-15
# ::node	0.1.0.1.0	lady	15-16
# ::node	0.1.0.1.0.0	country	13-14
# ::node	0.1.0.1.0.0.0	name	13-14
# ::node	0.1.0.1.0.0.0.0	"England"	13-14
# ::node	0.2	night	3-4
# ::root	0	contrast-01
# ::edge	contrast-01	ARG0	incident	0	0.0	
# ::edge	contrast-01	ARG1	situation	0	0.1	
# ::edge	contrast-01	ARG2	night	0	0.2	
# ::edge	country	name	name	0.1.0.1.0.0	0.1.0.1.0.0.0	
# ::edge	deteriorate-01	ARG0	he	0.1.0	0.1.0.0	
# ::edge	deteriorate-01	ARG1	situation	0.1.0	0.1	
# ::edge	deteriorate-01	purpose	promise-01	0.1.0	0.1.0.1	
# ::edge	lady	mod	country	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	name	op1	"England"	0.1.0.1.0.0.0	0.1.0.1.0.0.0.0	
# ::edge	off	op1	incident	0.0.0	0.0	
# ::edge	promise-01	ARG1	lady	0.1.0.1	0.1.0.1.0	
(c2 / contrast-01 
      :ARG0 (i / incident 
            :op-of (o / off)) 
      :ARG1 (s / situation 
            :ARG1-of (d / deteriorate-01 
                  :ARG0 (h / he) 
                  :purpose (p / promise-01 
                        :ARG1 (l / lady 
                              :mod (c / country 
                                    :name (n / name 
                                          :op1 "England")))))) 
      :ARG2 (n2 / night))

# ::snt the result of further investigation would i promise you be an article brimming with surprised enthusiasm and would go a long way towards radicalising the dating game in which no female participant ever regards herself as a failure
# ::tok the result of further investigation would i promise you be an article brimming with surprised enthusiasm and would go a long way towards radicalising the dating game in which no female participant ever regards herself as a failure
# ::alignments 37-38|0.1.0.0 32-33|0.1.0.1.0.0.0.0 30-31|0.1.0.1.1.0.0.1 29-30|0.1.0.1.1.0.0.0 26-27|0.0 25-26|0 21-22|0.1 16-17|0.1.0 15-16|0.1.0.1.0.0 14-15|0.1.0.1.0.0.0 12-13|0.1.0.1.0 11-12|0.1.0.1 8-9|0.1.0.1.2 7-8|0.1.0.1.1 6-7|0.1.0.1.1.1 4-5|0.1.0.1.1.0.0 3-4|0.1.0.1.1.0.0.2 1-2|0.1.0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:51.296
# ::node	0	date-02	25-26
# ::node	0.0	game	26-27
# ::node	0.1	way	21-22
# ::node	0.1.0	and	16-17
# ::node	0.1.0.0	fail-01	37-38
# ::node	0.1.0.1	article	11-12
# ::node	0.1.0.1.0	brim-01	12-13
# ::node	0.1.0.1.0.0	enthusiasm	15-16
# ::node	0.1.0.1.0.0.0	surprise-01	14-15
# ::node	0.1.0.1.0.0.0.0	ever	32-33
# ::node	0.1.0.1.1	promise-01	7-8
# ::node	0.1.0.1.1.0	result-01	1-2
# ::node	0.1.0.1.1.0.0	investigate-01	4-5
# ::node	0.1.0.1.1.0.0.0	-	29-30
# ::node	0.1.0.1.1.0.0.1	female	30-31
# ::node	0.1.0.1.1.0.0.2	further	3-4
# ::node	0.1.0.1.1.1	i	6-7
# ::node	0.1.0.1.2	you	8-9
# ::root	0	date-02
# ::edge	and	op1	article	0.1.0	0.1.0.1	
# ::edge	article	domain	you	0.1.0.1	0.1.0.1.2	
# ::edge	brim-01	ARG0	article	0.1.0.1.0	0.1.0.1	
# ::edge	brim-01	ARG1	enthusiasm	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	date-02	ARG1	game	0	0.0	
# ::edge	date-02	ARG2	way	0	0.1	
# ::edge	fail-01	ARG1	and	0.1.0.0	0.1.0	
# ::edge	investigate-01	ARG0	-	0.1.0.1.1.0.0	0.1.0.1.1.0.0.0	
# ::edge	investigate-01	ARG1	female	0.1.0.1.1.0.0	0.1.0.1.1.0.0.1	
# ::edge	investigate-01	degree	further	0.1.0.1.1.0.0	0.1.0.1.1.0.0.2	
# ::edge	promise-01	ARG0	result-01	0.1.0.1.1	0.1.0.1.1.0	
# ::edge	promise-01	ARG1	article	0.1.0.1.1	0.1.0.1	
# ::edge	promise-01	manner	i	0.1.0.1.1	0.1.0.1.1.1	
# ::edge	result-01	ARG1	investigate-01	0.1.0.1.1.0	0.1.0.1.1.0.0	
# ::edge	surprise-01	ARG0	ever	0.1.0.1.0.0.0	0.1.0.1.0.0.0.0	
# ::edge	surprise-01	ARG1	enthusiasm	0.1.0.1.0.0.0	0.1.0.1.0.0	
# ::edge	way	domain	and	0.1	0.1.0	
(d / date-02 
      :ARG1 (g / game) 
      :ARG2 (w / way 
            :domain (a / and 
                  :ARG1-of (f / fail-01) 
                  :op1 (a2 / article 
                        :ARG0-of (b / brim-01 
                              :ARG1 (e2 / enthusiasm 
                                    :ARG1-of (s / surprise-01 
                                          :ARG0 (e / ever)))) 
                        :ARG1-of (p / promise-01 
                              :ARG0 (r / result-01 
                                    :ARG1 (i2 / investigate-01 
                                          :ARG0 (- / -) 
                                          :ARG1 (f2 / female) 
                                          :degree (f3 / further))) 
                              :manner (i / i)) 
                        :domain (y / you)))))

# ::snt now he too was waiting for a phone call promised for the afternoon
# ::tok now he too was waiting for a phone call promised for the afternoon
# ::alignments 12-13|0.3.0 9-10|0.3 7-8|0.1 4-5|0 2-3|0.2 1-2|0.0 0-1|0.4 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:51.328
# ::node	0	wait-01	4-5
# ::node	0.0	he	1-2
# ::node	0.1	phone	7-8
# ::node	0.2	too	2-3
# ::node	0.3	promise-01	9-10
# ::node	0.3.0	afternoon	12-13
# ::node	0.4	now	0-1
# ::root	0	wait-01
# ::edge	promise-01	ARG1	afternoon	0.3	0.3.0	
# ::edge	wait-01	ARG0	he	0	0.0	
# ::edge	wait-01	ARG1	phone	0	0.1	
# ::edge	wait-01	mod	too	0	0.2	
# ::edge	wait-01	time	now	0	0.4	
# ::edge	wait-01	time	promise-01	0	0.3	
(w / wait-01 
      :ARG0 (h / he) 
      :ARG1 (p2 / phone) 
      :mod (t / too) 
      :time (p / promise-01 
            :ARG1 (a / afternoon)) 
      :time (n / now))

# ::snt the home office has also promised a shakeup of the training and selection of senior police officers but rejected mps calls for a central pool for appointments to the highest ranks
# ::tok the home office has also promised a shakeup of the training and selection of senior police officers but rejected mps calls for a central pool for appointments to the highest ranks
# ::alignments 30-31|0.1.0 29-30|0.1.0.0.0+0.1.0.0 24-25|0.1.1 23-24|0.1.1.0 18-19|0.1 17-18|0 16-17|0.0.1.0.0.0.1+0.0.1.0.0.0 15-16|0.0.1.0.0.0.0 14-15|0.0.1.0.0.0.1.0 12-13|0.0.1.0.0 11-12|0.0.1.0 10-11|0.0.1 5-6|0.0 4-5|0.0.2 2-3|0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:51.635
# ::node	0	contrast-01	17-18
# ::node	0.0	promise-01	5-6
# ::node	0.0.0	office	2-3
# ::node	0.0.0.0	home	1-2
# ::node	0.0.1	train-01	10-11
# ::node	0.0.1.0	and	11-12
# ::node	0.0.1.0.0	select-01	12-13
# ::node	0.0.1.0.0.0	have-org-role-91	16-17
# ::node	0.0.1.0.0.0.0	police	15-16
# ::node	0.0.1.0.0.0.1	officer	16-17
# ::node	0.0.1.0.0.0.1.0	senior	14-15
# ::node	0.0.2	also	4-5
# ::node	0.1	reject-01	18-19
# ::node	0.1.0	rank	30-31
# ::node	0.1.0.0	high	29-30
# ::node	0.1.0.0.0	most	29-30
# ::node	0.1.1	pool	24-25
# ::node	0.1.1.0	central	23-24
# ::root	0	contrast-01
# ::edge	and	op1	train-01	0.0.1.0	0.0.1	
# ::edge	and	op2	select-01	0.0.1.0	0.0.1.0.0	
# ::edge	contrast-01	ARG1	promise-01	0	0.0	
# ::edge	contrast-01	ARG2	reject-01	0	0.1	
# ::edge	have-org-role-91	ARG1	police	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	have-org-role-91	ARG2	officer	0.0.1.0.0.0	0.0.1.0.0.0.1	
# ::edge	high	degree	most	0.1.0.0	0.1.0.0.0	
# ::edge	office	mod	home	0.0.0	0.0.0.0	
# ::edge	officer	mod	senior	0.0.1.0.0.0.1	0.0.1.0.0.0.1.0	
# ::edge	pool	mod	central	0.1.1	0.1.1.0	
# ::edge	promise-01	ARG0	office	0.0	0.0.0	
# ::edge	promise-01	ARG1	train-01	0.0	0.0.1	
# ::edge	promise-01	mod	also	0.0	0.0.2	
# ::edge	rank	mod	high	0.1.0	0.1.0.0	
# ::edge	reject-01	ARG1	rank	0.1	0.1.0	
# ::edge	reject-01	manner	pool	0.1	0.1.1	
# ::edge	select-01	ARG1	have-org-role-91	0.0.1.0.0	0.0.1.0.0.0	
(c2 / contrast-01 
      :ARG1 (p3 / promise-01 
            :ARG0 (o2 / office 
                  :mod (h3 / home)) 
            :ARG1 (t / train-01 
                  :op-of (a / and 
                        :op1 (s2 / select-01 
                              :ARG1 (h2 / have-org-role-91 
                                    :ARG1 (p2 / police) 
                                    :ARG2 (o / officer 
                                          :mod (s / senior)))))) 
            :mod (a2 / also)) 
      :ARG2 (r2 / reject-01 
            :ARG1 (r / rank 
                  :mod (h / high 
                        :degree (m / most))) 
            :manner (p / pool 
                  :mod (c / central))))

# ::snt a pilot scheme involving 2000 people had been successful and 500000 for a further survey of 20000 people had been promised by the health education authority and the economic and social research council esrc
# ::tok a pilot scheme involving 2000 people had been successful and 500000 for a further survey of 20000 people had been promised by the health education authority and the economic and social research council esrc
# ::alignments 32-33|0.2.2.3 31-32|0.2.2 30-31|0.2.2.0 29-30|0.2.1.1.0.1 28-29|0.2.2.2 26-27|0.2.1.1.0 25-26|0.2.1.1.0.0 24-25|0.2.1.1.0.0.0 23-24|0.2.1.1.0.0.0.0 20-21|0.2.1.1 16-17|0.2.2.1 14-15|0 13-14|0.1 10-11|0.2.0.0 9-10|0.2 8-9|0.2.0 4-5|0.0.0+0.0 3-4|0.2.1 2-3|0.2.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:51.925
# ::node	0	survey-01	14-15
# ::node	0.0	date-entity	4-5
# ::node	0.0.0	2000	4-5
# ::node	0.1	further	13-14
# ::node	0.2	and	9-10
# ::node	0.2.0	succeed-01	8-9
# ::node	0.2.0.0	500000	10-11
# ::node	0.2.1	involve-01	3-4
# ::node	0.2.1.0	scheme	2-3
# ::node	0.2.1.1	promise-01	20-21
# ::node	0.2.1.1.0	and	26-27
# ::node	0.2.1.1.0.0	authority	25-26
# ::node	0.2.1.1.0.0.0	educate-01	24-25
# ::node	0.2.1.1.0.0.0.0	health	23-24
# ::node	0.2.1.1.0.1	and	29-30
# ::node	0.2.2	research-01	31-32
# ::node	0.2.2.0	society	30-31
# ::node	0.2.2.1	20000	16-17
# ::node	0.2.2.2	economy	28-29
# ::node	0.2.2.3	council	32-33
# ::root	0	survey-01
# ::edge	and	op1	promise-01	0.2.1.1.0	0.2.1.1	
# ::edge	and	op1	survey-01	0.2	0	
# ::edge	and	op2	authority	0.2.1.1.0	0.2.1.1.0.0	
# ::edge	and	op2	research-01	0.2	0.2.2	
# ::edge	and	op3	and	0.2.1.1.0	0.2.1.1.0.1	
# ::edge	council	mod	research-01	0.2.2.3	0.2.2	
# ::edge	date-entity	year	2000	0.0	0.0.0	
# ::edge	educate-01	ARG0	authority	0.2.1.1.0.0.0	0.2.1.1.0.0	
# ::edge	educate-01	ARG1	health	0.2.1.1.0.0.0	0.2.1.1.0.0.0.0	
# ::edge	involve-01	ARG0	scheme	0.2.1	0.2.1.0	
# ::edge	involve-01	ARG1	and	0.2.1	0.2	
# ::edge	promise-01	ARG1	involve-01	0.2.1.1	0.2.1	
# ::edge	research-01	ARG0	society	0.2.2	0.2.2.0	
# ::edge	research-01	ARG1	20000	0.2.2	0.2.2.1	
# ::edge	research-01	ARG2	economy	0.2.2	0.2.2.2	
# ::edge	succeed-01	ARG0	and	0.2.0	0.2	
# ::edge	succeed-01	ARG1	500000	0.2.0	0.2.0.0	
# ::edge	survey-01	ARG0	date-entity	0	0.0	
# ::edge	survey-01	degree	further	0	0.1	
(s2 / survey-01 
      :ARG0 (d / date-entity 
            :year 2000) 
      :degree (f / further) 
      :op-of (a4 / and 
            :ARG0-of (s3 / succeed-01 
                  :ARG1 500000) 
            :ARG1-of (i / involve-01 
                  :ARG0 (s4 / scheme) 
                  :ARG1-of (p / promise-01 
                        :op-of (a2 / and 
                              :op1 (a3 / authority 
                                    :ARG0-of (e2 / educate-01 
                                          :ARG1 (h / health))) 
                              :op2 (a / and)))) 
            :op1 (r / research-01 
                  :ARG0 (s / society) 
                  :ARG1 20000 
                  :ARG2 (e / economy) 
                  :mod-of (c / council))))

# ::snt the programme promises an interesting mixture of music from the renaissance to the preseent day and from betthoven to byrd
# ::tok the programme promises an interesting mixture of music from the renaissance to the preseent day and from betthoven to byrd
# ::alignments 15-16|0 14-15|0.1 10-11|0.1.0 7-8|0.0.1 4-5|0.2 2-3|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:51.969
# ::node	0	and	15-16
# ::node	0.0	promise-01	2-3
# ::node	0.0.0	program	1-2
# ::node	0.0.1	music	7-8
# ::node	0.1	day	14-15
# ::node	0.1.0	renaissance	10-11
# ::node	0.2	interesting	4-5
# ::root	0	and
# ::edge	and	op1	day	0	0.1	
# ::edge	interesting	poss	and	0.2	0	
# ::edge	promise-01	ARG0	program	0.0	0.0.0	
# ::edge	promise-01	ARG1	music	0.0	0.0.1	
# ::edge	promise-01	ARG2	and	0.0	0	
# ::edge	renaissance	prep-to	day	0.1.0	0.1	
(a / and 
      :ARG2-of (p / promise-01 
            :ARG0 (p2 / program) 
            :ARG1 (m / music)) 
      :op1 (d / day 
            :prep-to-of (r / renaissance)) 
      :poss-of (i / interesting))

# ::snt from the balcony of the socialist party newspaper now almost living up to its title the playwright vaclav havel had announced that the prime minister ladislav adamec had promised there would be no more beatings
# ::tok from the balcony of the socialist party newspaper now almost living up to its title the playwright vaclav havel had announced that the prime minister ladislav adamec had promised there would be no more beatings
# ::alignments 34-35|0.0.1 32-33|0.0.1.0 28-29|0.0 25-27|0.0.0.1.0+0.0.0.1.1+0.0.0.1+0.0.0 24-25|0.0.0.0.0+0.0.0.0 23-24|0.0.0.0.0.0 20-21|0 14-15|0.1 10-11|0.1.0 9-10|0.1.0.1 8-9|0.1.0.2 7-8|0.1.0.0 6-7|0.1.0.0.0 5-6|0.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:52.259
# ::node	0	announce-01	20-21
# ::node	0.0	promise-01	28-29
# ::node	0.0.0	person	25-27
# ::node	0.0.0.0	have-org-role-91	24-25
# ::node	0.0.0.0.0	minister	24-25
# ::node	0.0.0.0.0.0	prime	23-24
# ::node	0.0.0.1	name	25-27
# ::node	0.0.0.1.0	"adamec"	25-27
# ::node	0.0.0.1.1	"ladislav"	25-27
# ::node	0.0.1	beat-01	34-35
# ::node	0.0.1.0	-	32-33
# ::node	0.1	title	14-15
# ::node	0.1.0	live-01	10-11
# ::node	0.1.0.0	newspaper	7-8
# ::node	0.1.0.0.0	party	6-7
# ::node	0.1.0.0.0.0	socialist	5-6
# ::node	0.1.0.1	almost	9-10
# ::node	0.1.0.2	now	8-9
# ::root	0	announce-01
# ::edge	announce-01	ARG1	promise-01	0	0.0	
# ::edge	announce-01	time	title	0	0.1	
# ::edge	beat-01	polarity	-	0.0.1	0.0.1.0	
# ::edge	have-org-role-91	ARG0	person	0.0.0.0	0.0.0	
# ::edge	have-org-role-91	ARG2	minister	0.0.0.0	0.0.0.0.0	
# ::edge	live-01	ARG0	newspaper	0.1.0	0.1.0.0	
# ::edge	live-01	ARG1	title	0.1.0	0.1	
# ::edge	live-01	mod	almost	0.1.0	0.1.0.1	
# ::edge	live-01	time	now	0.1.0	0.1.0.2	
# ::edge	minister	mod	prime	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	name	op1	"adamec"	0.0.0.1	0.0.0.1.0	
# ::edge	name	op2	"ladislav"	0.0.0.1	0.0.0.1.1	
# ::edge	newspaper	mod	party	0.1.0.0	0.1.0.0.0	
# ::edge	party	mod	socialist	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	person	name	name	0.0.0	0.0.0.1	
# ::edge	promise-01	ARG0	person	0.0	0.0.0	
# ::edge	promise-01	ARG1	beat-01	0.0	0.0.1	
(a / announce-01 
      :ARG1 (p / promise-01 
            :ARG0 (p2 / person 
                  :ARG0-of (h / have-org-role-91 
                        :ARG2 (m / minister 
                              :mod (p3 / prime))) 
                  :name (n / name 
                        :op1 "adamec" 
                        :op2 "ladislav")) 
            :ARG1 (b / beat-01 
                  :polarity (- / -))) 
      :time (t / title 
            :ARG1-of (l / live-01 
                  :ARG0 (n3 / newspaper 
                        :mod (p4 / party 
                              :mod (s / socialist))) 
                  :mod (a2 / almost) 
                  :time (n2 / now))))

# ::snt the law society which feared the judges might exercise their right of final approval to fetter the solicitors ability to appear in the higher courts has been largely reassured by a passage in the white paper promising statutory backing for a speedy introduction of the new rights
# ::tok the law society which feared the judges might exercise their right of final approval to fetter the solicitors ability to appear in the higher courts has been largely reassured by a passage in the white paper promising statutory backing for a speedy introduction of the new rights
# ::alignments 46-47|0.1.0.0.1.0.0.0.0.0 45-46|0.1.0.0.1.0.0.0.0.0.0 42-43|0.1.0.0.1.0.0.0.0 38-39|0.1.0.0.1.0.0.0 36-37|0.1.0.0.1.0.0 35-36|0.1.0.0.1.0.0.1.0.0 34-35|0.1.0.0.1.0.0.1.0.0.0 31-32|0.1.0.0.1.0.0.1.0 28-29|0.1.0.0.1.0.0.1 27-28|0.1.0.0.1.0.0.1.1 24-25|0.0 23-24|0.0.0 20-21|0 18-19|0.1 13-14|0.1.0 12-13|0.1.0.1 8-9|0.1.0.0 6-7|0.1.0.0.0 4-5|0.1.0.0.1 2-3|0.1.0.0.1.0 1-2|0.1.0.0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:52.826
# ::node	0	appear-02	20-21
# ::node	0.0	court	24-25
# ::node	0.0.0	high	23-24
# ::node	0.1	ability	18-19
# ::node	0.1.0	approve-01	13-14
# ::node	0.1.0.0	exercise-02	8-9
# ::node	0.1.0.0.0	judge-01	6-7
# ::node	0.1.0.0.1	fear-01	4-5
# ::node	0.1.0.0.1.0	society	2-3
# ::node	0.1.0.0.1.0.0	promise-01	36-37
# ::node	0.1.0.0.1.0.0.0	back-01	38-39
# ::node	0.1.0.0.1.0.0.0.0	introduce-02	42-43
# ::node	0.1.0.0.1.0.0.0.0.0	right	46-47
# ::node	0.1.0.0.1.0.0.0.0.0.0	new	45-46
# ::node	0.1.0.0.1.0.0.1	reassure-01	28-29
# ::node	0.1.0.0.1.0.0.1.0	pass-01	31-32
# ::node	0.1.0.0.1.0.0.1.0.0	paper	35-36
# ::node	0.1.0.0.1.0.0.1.0.0.0	white	34-35
# ::node	0.1.0.0.1.0.0.1.1	large	27-28
# ::node	0.1.0.0.1.0.1	law	1-2
# ::node	0.1.0.1	final	12-13
# ::root	0	appear-02
# ::edge	ability	purpose	appear-02	0.1	0	
# ::edge	appear-02	ARG1	court	0	0.0	
# ::edge	approve-01	ARG0	ability	0.1.0	0.1	
# ::edge	approve-01	mod	final	0.1.0	0.1.0.1	
# ::edge	back-01	ARG1	introduce-02	0.1.0.0.1.0.0.0	0.1.0.0.1.0.0.0.0	
# ::edge	court	mod	high	0.0	0.0.0	
# ::edge	exercise-02	ARG1	judge-01	0.1.0.0	0.1.0.0.0	
# ::edge	exercise-02	ARG2	approve-01	0.1.0.0	0.1.0	
# ::edge	fear-01	ARG0	society	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	fear-01	ARG1	exercise-02	0.1.0.0.1	0.1.0.0	
# ::edge	introduce-02	ARG1	right	0.1.0.0.1.0.0.0.0	0.1.0.0.1.0.0.0.0.0	
# ::edge	paper	mod	white	0.1.0.0.1.0.0.1.0.0	0.1.0.0.1.0.0.1.0.0.0	
# ::edge	pass-01	ARG1	paper	0.1.0.0.1.0.0.1.0	0.1.0.0.1.0.0.1.0.0	
# ::edge	promise-01	ARG0	society	0.1.0.0.1.0.0	0.1.0.0.1.0	
# ::edge	promise-01	ARG1	back-01	0.1.0.0.1.0.0	0.1.0.0.1.0.0.0	
# ::edge	reassure-01	ARG1	pass-01	0.1.0.0.1.0.0.1	0.1.0.0.1.0.0.1.0	
# ::edge	reassure-01	degree	large	0.1.0.0.1.0.0.1	0.1.0.0.1.0.0.1.1	
# ::edge	reassure-01	purpose	promise-01	0.1.0.0.1.0.0.1	0.1.0.0.1.0.0	
# ::edge	right	mod	new	0.1.0.0.1.0.0.0.0.0	0.1.0.0.1.0.0.0.0.0.0	
# ::edge	society	mod	law	0.1.0.0.1.0	0.1.0.0.1.0.1	
(a / appear-02 
      :ARG1 (c / court 
            :mod (h / high)) 
      :purpose-of (a2 / ability 
            :ARG0-of (a3 / approve-01 
                  :ARG2-of (e / exercise-02 
                        :ARG1 (j / judge-01) 
                        :ARG1-of (f2 / fear-01 
                              :ARG0 (s / society 
                                    :ARG0-of (p / promise-01 
                                          :ARG1 (b / back-01 
                                                :ARG1 (i / introduce-02 
                                                      :ARG1 (r / right 
                                                            :mod (n / new)))) 
                                          :purpose-of (r2 / reassure-01 
                                                :ARG1 (p3 / pass-01 
                                                      :ARG1 (p2 / paper 
                                                            :mod (w / white))) 
                                                :degree (l / large))) 
                                    :mod (l2 / law)))) 
                  :mod (f / final))))

# ::snt they derived no benefit in law since the plaintiff was promising to do no more than he was already bound to do
# ::tok they derived no benefit in law since the plaintiff was promising to do no more than he was already bound to do
# ::alignments 18-19|0.3.0.0.0 16-17|0.3.0.0 13-14|0.1.0 10-11|0.3.0 6-7|0.3 5-6|0.2 3-4|0.1 2-3|0.1.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:52.937
# ::node	0	derive-01	1-2
# ::node	0.0	they	0-1
# ::node	0.1	benefit-01	3-4
# ::node	0.1.0	-	13-14
# ::node	0.1.1	-	2-3
# ::node	0.2	law	5-6
# ::node	0.3	since	6-7
# ::node	0.3.0	promise-01	10-11
# ::node	0.3.0.0	he	16-17
# ::node	0.3.0.0.0	already	18-19
# ::root	0	derive-01
# ::edge	benefit-01	ARG1	-	0.1	0.1.0	
# ::edge	benefit-01	polarity	-	0.1	0.1.1	
# ::edge	derive-01	ARG0	they	0	0.0	
# ::edge	derive-01	ARG1	benefit-01	0	0.1	
# ::edge	derive-01	ARG2	law	0	0.2	
# ::edge	derive-01	time	since	0	0.3	
# ::edge	he	quant	already	0.3.0.0	0.3.0.0.0	
# ::edge	promise-01	ARG0	he	0.3.0	0.3.0.0	
# ::edge	since	op1	promise-01	0.3	0.3.0	
(d / derive-01 
      :ARG0 (t / they) 
      :ARG1 (b / benefit-01 
            :ARG1 (- / -) 
            :polarity (-2 / -)) 
      :ARG2 (l / law) 
      :time (s / since 
            :op1 (p / promise-01 
                  :ARG0 (h / he 
                        :quant (a / already)))))

# ::snt after the forced return to hanoi last week of 51 vietnamese douglas hurd foreign secretary promised there would be no more repatriations until mps had debated the matter
# ::tok after the forced return to hanoi last week of 51 vietnamese douglas hurd foreign secretary promised there would be no more repatriations until mps had debated the matter
# ::alignments 27-28|0 25-26|0.0 22-23|0.0.3 19-20|0.0.0 15-16|0.0.3.0 14-15|0.0.3.0.0 13-14|0.0.3.0.0.0 9-10|0.0.2 7-8|0.0.1.0 6-7|0.0.1.0.0 2-3|0.0.1 0-1|0.0.3.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:53.109
# ::node	0	matter	27-28
# ::node	0.0	debate-01	25-26
# ::node	0.0.0	-	19-20
# ::node	0.0.1	force-01	2-3
# ::node	0.0.1.0	week	7-8
# ::node	0.0.1.0.0	last	6-7
# ::node	0.0.2	51	9-10
# ::node	0.0.3	until	22-23
# ::node	0.0.3.0	promise-01	15-16
# ::node	0.0.3.0.0	secretary	14-15
# ::node	0.0.3.0.0.0	foreign	13-14
# ::node	0.0.3.1	after	0-1
# ::root	0	matter
(m / matter 
      :ARG1-of (d / debate-01 
            :ARG0 (- / -) 
            :ARG2 (f2 / force-01 
                  :ARG0 (w / week 
                        :mod (l / last))) 
            :op-of 51 
            :op-of (u / until 
                  :ARG1-of (p / promise-01 
                        :ARG0 (s / secretary 
                              :mod (f / foreign))) 
                  :op1 (a / after))))

# ::snt EMPTY_SENTENCE
# ::tok EMPTY_SENTENCE
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:53.111
# ::node	0	amr-empty	0-1
# ::root	0	amr-empty
(a / amr-empty)

# ::snt king hussein of jordan has promised a parliament with real powers after elections on 8 november the first for 22 years
# ::tok king hussein of jordan has promised a parliament with real powers after elections on 8 november the first for 22 years
# ::alignments 20-21|0.1.1+0.1 19-20|0.1.0 15-16|0.2.4.0+0.2.4 14-15|0.2.3 12-13|0.2 11-12|0.2.1 10-11|0.2.2 9-10|0.2.2.0 7-8|0.0.0.0+0.0.0+0.0 5-6|0 0-1|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:53.342
# ::node	0	promise-01	5-6
# ::node	0.0	government-organization	7-8
# ::node	0.0.0	name	7-8
# ::node	0.0.0.0	"Parliament"	7-8
# ::node	0.1	temporal-quantity	20-21
# ::node	0.1.0	22	19-20
# ::node	0.1.1	year	20-21
# ::node	0.2	elect-01	12-13
# ::node	0.2.0	king	0-1
# ::node	0.2.1	after	11-12
# ::node	0.2.2	power	10-11
# ::node	0.2.2.0	real	9-10
# ::node	0.2.3	8	14-15
# ::node	0.2.4	date-entity	15-16
# ::node	0.2.4.0	11	15-16
# ::root	0	promise-01
# ::edge	after	op1	elect-01	0.2.1	0.2	
# ::edge	date-entity	month	11	0.2.4	0.2.4.0	
# ::edge	elect-01	ARG0	king	0.2	0.2.0	
# ::edge	elect-01	ARG1	promise-01	0.2	0	
# ::edge	elect-01	time	8	0.2	0.2.3	
# ::edge	elect-01	time	date-entity	0.2	0.2.4	
# ::edge	government-organization	name	name	0.0	0.0.0	
# ::edge	name	op1	"Parliament"	0.0.0	0.0.0.0	
# ::edge	power	mod	real	0.2.2	0.2.2.0	
# ::edge	power	prep-in	elect-01	0.2.2	0.2	
# ::edge	promise-01	ARG0	government-organization	0	0.0	
# ::edge	promise-01	ARG1	temporal-quantity	0	0.1	
# ::edge	temporal-quantity	quant	22	0.1	0.1.0	
# ::edge	temporal-quantity	unit	year	0.1	0.1.1	
(p2 / promise-01 
      :ARG0 (g / government-organization 
            :name (n / name 
                  :op1 "Parliament")) 
      :ARG1 (t / temporal-quantity 
            :quant 22 
            :unit (y / year)) 
      :ARG1-of (e / elect-01 
            :ARG0 (k / king) 
            :op-of (a / after) 
            :prep-in-of (p / power 
                  :mod (r / real)) 
            :time 8 
            :time (d / date-entity 
                  :month 11)))

# ::snt i will visit mrs thorne again as i promised
# ::tok i will visit mrs thorne again as i promised
# ::alignments 8-9|0.2 7-8|0.2.0 5-6|0.1 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:53.369
# ::node	0	visit-01	2-3
# ::node	0.0	i	0-1
# ::node	0.1	again	5-6
# ::node	0.2	promise-01	8-9
# ::node	0.2.0	i	7-8
# ::root	0	visit-01
# ::edge	promise-01	ARG0	i	0.2	0.2.0	
# ::edge	visit-01	ARG0	i	0	0.0	
# ::edge	visit-01	mod	again	0	0.1	
# ::edge	visit-01	time	promise-01	0	0.2	
(v / visit-01 
      :ARG0 (i2 / i) 
      :mod (a / again) 
      :time (p / promise-01 
            :ARG0 (i / i)))

# ::snt mr lewis promised that no caravan would be allowed onto the site if it was not clean and tidy and their would be strict rules for travellers who wanted to stop their
# ::tok mr lewis promised that no caravan would be allowed onto the site if it was not clean and tidy and their would be strict rules for travellers who wanted to stop their
# ::alignments 30-31|0.1.0 28-29|0.1.0.0 26-27|0.1 24-25|0 23-24|0.0 19-20|0.1.1.1 17-18|0.1.1 16-17|0.1.1.1.0.0.0 13-14|0.1.1.1.0.0 11-12|0.1.1.1.0.2.0 9-10|0.1.1.1.0.2 8-9|0.1.1.1.0 4-5|0.1.1.1.0.1 2-3|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:53.493
# ::node	0	rule	24-25
# ::node	0.0	strict	23-24
# ::node	0.1	travel-01	26-27
# ::node	0.1.0	stop-01	30-31
# ::node	0.1.0.0	want-01	28-29
# ::node	0.1.1	and	17-18
# ::node	0.1.1.0	promise-01	2-3
# ::node	0.1.1.1	and	19-20
# ::node	0.1.1.1.0	allow-01	8-9
# ::node	0.1.1.1.0.0	it	13-14
# ::node	0.1.1.1.0.0.0	clean	16-17
# ::node	0.1.1.1.0.1	-	4-5
# ::node	0.1.1.1.0.2	onto	9-10
# ::node	0.1.1.1.0.2.0	site	11-12
# ::root	0	rule
# ::edge	allow-01	ARG1	it	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	allow-01	polarity	-	0.1.1.1.0	0.1.1.1.0.1	
# ::edge	allow-01	time	onto	0.1.1.1.0	0.1.1.1.0.2	
# ::edge	and	op1	allow-01	0.1.1.1	0.1.1.1.0	
# ::edge	and	op1	and	0.1.1	0.1.1.1	
# ::edge	and	op2	travel-01	0.1.1	0.1	
# ::edge	clean	domain	it	0.1.1.1.0.0.0	0.1.1.1.0.0	
# ::edge	onto	op1	site	0.1.1.1.0.2	0.1.1.1.0.2.0	
# ::edge	promise-01	ARG1	and	0.1.1.0	0.1.1	
# ::edge	rule	mod	strict	0	0.0	
# ::edge	rule	topic	travel-01	0	0.1	
# ::edge	stop-01	ARG0	travel-01	0.1.0	0.1	
# ::edge	want-01	ARG1	stop-01	0.1.0.0	0.1.0	
(r / rule 
      :mod (s2 / strict) 
      :topic (t / travel-01 
            :ARG0-of (s / stop-01 
                  :ARG1-of (w / want-01)) 
            :op-of (a2 / and 
                  :ARG1-of (p / promise-01) 
                  :op1 (a / and 
                        :op1 (a3 / allow-01 
                              :ARG1 (i / it 
                                    :domain-of (c / clean)) 
                              :polarity (- / -) 
                              :time (o / onto 
                                    :op1 (s3 / site)))))))

# ::snt it promises peaceful competition and an enduring commitment to human rights
# ::tok it promises peaceful competition and an enduring commitment to human rights
# ::alignments 10-11|0.1.0.0 9-10|0.1.0.0.0 7-8|0.1.0 6-7|0.1.0.1 4-5|0.1 3-4|0.0.0 2-3|0.0.0.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:53.581
# ::node	0	promise-01	1-2
# ::node	0.0	it	0-1
# ::node	0.0.0	compete-01	3-4
# ::node	0.0.0.0	peaceful	2-3
# ::node	0.1	and	4-5
# ::node	0.1.0	commit-01	7-8
# ::node	0.1.0.0	right	10-11
# ::node	0.1.0.0.0	human	9-10
# ::node	0.1.0.1	endure-01	6-7
# ::root	0	promise-01
# ::edge	and	op1	commit-01	0.1	0.1.0	
# ::edge	commit-01	ARG1	right	0.1.0	0.1.0.0	
# ::edge	compete-01	ARG0	it	0.0.0	0.0	
# ::edge	compete-01	manner	peaceful	0.0.0	0.0.0.0	
# ::edge	endure-01	ARG1	commit-01	0.1.0.1	0.1.0	
# ::edge	promise-01	ARG0	it	0	0.0	
# ::edge	promise-01	ARG1	and	0	0.1	
# ::edge	right	mod	human	0.1.0.0	0.1.0.0.0	
(p2 / promise-01 
      :ARG0 (i / it 
            :ARG0-of (c2 / compete-01 
                  :manner (p / peaceful))) 
      :ARG1 (a / and 
            :op1 (c / commit-01 
                  :ARG1 (r / right 
                        :mod (h / human)) 
                  :ARG1-of (e / endure-01))))

# ::snt we had a row with lucas there because they had fitted fuel injection to jimmy clarks lotus despite promising us exclusive use for the season if we persevered with it
# ::tok we had a row with lucas there because they had fitted fuel injection to jimmy clarks lotus despite promising us exclusive use for the season if we persevered with it
# ::alignments 29-30|0.0.0.1.1.0.0 26-27|0.0.0.1.0 24-25|0.0.0.1.1.0 21-22|0.0.0.1.1 20-21|0.0.0.1.1.1 18-19|0.0.0.1 12-13|0.0.0 11-12|0.0.0.2 8-9|0.0 7-8|0 3-4|0.1 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:53.709
# ::node	0	cause-01	7-8
# ::node	0.0	they	8-9
# ::node	0.0.0	inject-01	12-13
# ::node	0.0.0.0	we	0-1
# ::node	0.0.0.1	promise-01	18-19
# ::node	0.0.0.1.0	we	26-27
# ::node	0.0.0.1.1	use-01	21-22
# ::node	0.0.0.1.1.0	season	24-25
# ::node	0.0.0.1.1.0.0	it	29-30
# ::node	0.0.0.1.1.1	exclusive	20-21
# ::node	0.0.0.2	fuel	11-12
# ::node	0.1	row	3-4
# ::root	0	cause-01
# ::edge	cause-01	ARG0	they	0	0.0	
# ::edge	cause-01	ARG1	row	0	0.1	
# ::edge	inject-01	ARG0	we	0.0.0	0.0.0.0	
# ::edge	inject-01	ARG1	they	0.0.0	0.0	
# ::edge	inject-01	condition	promise-01	0.0.0	0.0.0.1	
# ::edge	inject-01	mod	fuel	0.0.0	0.0.0.2	
# ::edge	promise-01	ARG0	we	0.0.0.1	0.0.0.1.0	
# ::edge	promise-01	ARG1	use-01	0.0.0.1	0.0.0.1.1	
# ::edge	season	beneficiary	it	0.0.0.1.1.0	0.0.0.1.1.0.0	
# ::edge	use-01	ARG1	season	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	use-01	manner	exclusive	0.0.0.1.1	0.0.0.1.1.1	
(c / cause-01 
      :ARG0 (t / they 
            :ARG1-of (i2 / inject-01 
                  :ARG0 (w2 / we) 
                  :condition (p / promise-01 
                        :ARG0 (w / we) 
                        :ARG1 (u / use-01 
                              :ARG1 (s / season 
                                    :beneficiary (i / it)) 
                              :manner (e / exclusive))) 
                  :mod (f / fuel))) 
      :ARG1 (r / row))

# ::snt just about three minutes to go until the first pictures come through ellip   he promised as if the den of democracy were the sea of tranquillity
# ::tok just about three minutes to go until the first pictures come through ellip he promised as if the den of democracy were the sea of tranquillity
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:53.710
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the ministry also promised that people who had been wrongfully punished after political trials would be rehabilitated
# ::tok the ministry also promised that people who had been wrongfully punished after political trials would be rehabilitated
# ::alignments 13-14|0.1.0.0 12-13|0.1.0.0.0 11-12|0.1.0 10-11|0.1 3-4|0 2-3|0.2 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:53.738
# ::node	0	promise-01	3-4
# ::node	0.0	ministry	1-2
# ::node	0.1	punish-01	10-11
# ::node	0.1.0	after	11-12
# ::node	0.1.0.0	trial	13-14
# ::node	0.1.0.0.0	politics	12-13
# ::node	0.2	also	2-3
# ::root	0	promise-01
# ::edge	after	op1	trial	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG0	ministry	0	0.0	
# ::edge	promise-01	mod	also	0	0.2	
# ::edge	punish-01	ARG1	promise-01	0.1	0	
# ::edge	punish-01	time	after	0.1	0.1.0	
# ::edge	trial	mod	politics	0.1.0.0	0.1.0.0.0	
(p3 / promise-01 
      :ARG0 (m / ministry) 
      :ARG1-of (p2 / punish-01 
            :time (a / after 
                  :op1 (t / trial 
                        :mod (p / politics)))) 
      :mod (a2 / also))

# ::snt   everything about next weeks championship promises to be on a grander scale than before
# ::tok everything about next weeks championship promises to be on a grander scale than before
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:53.738
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt mr hurd who promised there would be no more repatriations before mps debate the issue on 19 december accepted there was case for looking again at economic relations with vietnam including a role for the world bank
# ::tok mr hurd who promised there would be no more repatriations before mps debate the issue on 19 december accepted there was case for looking again at economic relations with vietnam including a role for the world bank
# ::alignments 36-37|0.2.0 35-36|0.2 32-33|0.2.0.0 27-28|0.1.0.1.0 26-27|0.1.0.1 24-25|0.1.0.0 21-22|0.3.0.1 18-19|0.3.0 17-18|0.3.0.0.0+0.3.0.0 16-17|0.3.0.0.1 14-15|0.3 12-13|0 10-11|0.1 7-8|0.0 3-4|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:54.082
# ::node	0	debate-01	12-13
# ::node	0.0	-	7-8
# ::node	0.1	before	10-11
# ::node	0.1.0	promise-01	3-4
# ::node	0.1.0.0	again	24-25
# ::node	0.1.0.1	economy	26-27
# ::node	0.1.0.1.0	relation	27-28
# ::node	0.2	world	35-36
# ::node	0.2.0	bank	36-37
# ::node	0.2.0.0	role	32-33
# ::node	0.3	issue	14-15
# ::node	0.3.0	accept-01	18-19
# ::node	0.3.0.0	date-entity	17-18
# ::node	0.3.0.0.0	12	17-18
# ::node	0.3.0.0.1	19	16-17
# ::node	0.3.0.1	case	21-22
# ::root	0	debate-01
# ::edge	accept-01	ARG0	date-entity	0.3.0	0.3.0.0	
# ::edge	accept-01	ARG1	issue	0.3.0	0.3	
# ::edge	accept-01	ARG2	case	0.3.0	0.3.0.1	
# ::edge	bank	mod	world	0.2.0	0.2	
# ::edge	before	op1	debate-01	0.1	0	
# ::edge	date-entity	month	12	0.3.0.0	0.3.0.0.0	
# ::edge	date-entity	quant	19	0.3.0.0	0.3.0.0.1	
# ::edge	debate-01	ARG1	-	0	0.0	
# ::edge	debate-01	time	issue	0	0.3	
# ::edge	economy	op1	promise-01	0.1.0.1	0.1.0	
# ::edge	promise-01	ARG1	again	0.1.0	0.1.0.0	
# ::edge	promise-01	time	before	0.1.0	0.1	
# ::edge	relation	mod	economy	0.1.0.1.0	0.1.0.1	
# ::edge	role	poss	bank	0.2.0.0	0.2.0	
# ::edge	world	op1	debate-01	0.2	0	
(d2 / debate-01 
      :ARG1 (- / -) 
      :op-of (b2 / before 
            :time-of (p / promise-01 
                  :ARG1 (a / again) 
                  :op-of (e / economy 
                        :mod-of (r2 / relation)))) 
      :op-of (w / world 
            :mod-of (b / bank 
                  :poss-of (r / role))) 
      :time (i / issue 
            :ARG1-of (a2 / accept-01 
                  :ARG0 (d / date-entity 
                        :month 12 
                        :quant 19) 
                  :ARG2 (c / case))))

# ::snt the debate on concentration of ownership promises to be one of the hottest of next year
# ::tok the debate on concentration of ownership promises to be one of the hottest of next year
# ::alignments 15-16|0.1.0 14-15|0.1 6-7|0 5-6|0.0.0.0 3-4|0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:54.109
# ::node	0	promise-01	6-7
# ::node	0.0	debate-01	1-2
# ::node	0.0.0	concentrate-02	3-4
# ::node	0.0.0.0	ownership	5-6
# ::node	0.1	next	14-15
# ::node	0.1.0	year	15-16
# ::root	0	promise-01
# ::edge	concentrate-02	ARG1	ownership	0.0.0	0.0.0.0	
# ::edge	debate-01	ARG1	concentrate-02	0.0	0.0.0	
# ::edge	promise-01	ARG0	debate-01	0	0.0	
# ::edge	promise-01	ARG1	next	0	0.1	
# ::edge	year	mod	next	0.1.0	0.1	
(p / promise-01 
      :ARG0 (d / debate-01 
            :ARG1 (c / concentrate-02 
                  :ARG1 (o / ownership))) 
      :ARG1 (n / next 
            :mod-of (y / year)))

# ::snt they also promise a return to learn entitlement of up to a years full time education for people aged more than 50 and who left school at 15 or earlier
# ::tok they also promise a return to learn entitlement of up to a years full time education for people aged more than 50 and who left school at 15 or earlier
# ::alignments 29-30|0.1.2.1.1.0 28-29|0.1.2.1.1 27-28|0.1.2.0.0.0 25-26|0.1.2.1.0 22-23|0.1.2.1 21-22|0.0 18-19|0 15-16|0.1 14-15|0.1.0 13-14|0.1.0.0 12-13|0.1.1.0+0.1.1 6-7|0.1.2 2-3|0.1.2.0.0 1-2|0.1.2.0.0.1 0-1|0.1.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:54.350
# ::node	0	age-01	18-19
# ::node	0.0	50	21-22
# ::node	0.1	educate-01	15-16
# ::node	0.1.0	time	14-15
# ::node	0.1.0.0	full	13-14
# ::node	0.1.1	temporal-quantity	12-13
# ::node	0.1.1.0	year	12-13
# ::node	0.1.2	learn-01	6-7
# ::node	0.1.2.0	they	0-1
# ::node	0.1.2.0.0	promise-01	2-3
# ::node	0.1.2.0.0.0	15	27-28
# ::node	0.1.2.0.0.1	also	1-2
# ::node	0.1.2.1	and	22-23
# ::node	0.1.2.1.0	school	25-26
# ::node	0.1.2.1.1	or	28-29
# ::node	0.1.2.1.1.0	early	29-30
# ::root	0	age-01
# ::edge	age-01	ARG1	50	0	0.0	
# ::edge	age-01	ARG2	educate-01	0	0.1	
# ::edge	and	op1	learn-01	0.1.2.1	0.1.2	
# ::edge	and	op2	school	0.1.2.1	0.1.2.1.0	
# ::edge	and	op3	or	0.1.2.1	0.1.2.1.1	
# ::edge	educate-01	ARG0	time	0.1	0.1.0	
# ::edge	educate-01	ARG1	temporal-quantity	0.1	0.1.1	
# ::edge	learn-01	ARG0	they	0.1.2	0.1.2.0	
# ::edge	learn-01	ARG1	educate-01	0.1.2	0.1	
# ::edge	or	op1	early	0.1.2.1.1	0.1.2.1.1.0	
# ::edge	promise-01	ARG0	they	0.1.2.0.0	0.1.2.0	
# ::edge	promise-01	ARG1	15	0.1.2.0.0	0.1.2.0.0.0	
# ::edge	promise-01	mod	also	0.1.2.0.0	0.1.2.0.0.1	
# ::edge	temporal-quantity	unit	year	0.1.1	0.1.1.0	
# ::edge	time	mod	full	0.1.0	0.1.0.0	
(a2 / age-01 
      :ARG1 50 
      :ARG2 (e2 / educate-01 
            :ARG0 (t / time 
                  :mod (f / full)) 
            :ARG1 (t2 / temporal-quantity 
                  :unit (y / year)) 
            :ARG1-of (l / learn-01 
                  :ARG0 (t3 / they 
                        :ARG0-of (p / promise-01 
                              :ARG1 15 
                              :mod (a3 / also))) 
                  :op-of (a / and 
                        :op1 (s / school) 
                        :op2 (o / or 
                              :op1 (e / early))))))

# ::snt sir robert agreed that brs industrial relations had to be improved and promised to do so as soon as the strike was over
# ::tok sir robert agreed that brs industrial relations had to be improved and promised to do so as soon as the strike was over
# ::alignments 20-21|0 17-18|0.0 15-16|0.1.0.0.1.0 12-13|0.1.0.0.1 11-12|0.1.0.0 10-11|0.1.0 6-7|0.1 5-6|0.2 2-3|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:54.448
# ::node	0	strike-01	20-21
# ::node	0.0	soon	17-18
# ::node	0.1	relation	6-7
# ::node	0.1.0	improve-01	10-11
# ::node	0.1.0.0	and	11-12
# ::node	0.1.0.0.0	agree-01	2-3
# ::node	0.1.0.0.1	promise-01	12-13
# ::node	0.1.0.0.1.0	so	15-16
# ::node	0.2	industry	5-6
# ::root	0	strike-01
# ::edge	agree-01	ARG1	and	0.1.0.0.0	0.1.0.0	
# ::edge	and	op1	improve-01	0.1.0.0	0.1.0	
# ::edge	and	op2	promise-01	0.1.0.0	0.1.0.0.1	
# ::edge	improve-01	ARG1	relation	0.1.0	0.1	
# ::edge	industry	op1	strike-01	0.2	0	
# ::edge	promise-01	ARG1	so	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	strike-01	ARG0	soon	0	0.0	
# ::edge	strike-01	ARG1	relation	0	0.1	
(s / strike-01 
      :ARG0 (s2 / soon) 
      :ARG1 (r / relation 
            :ARG1-of (i / improve-01 
                  :op-of (a / and 
                        :ARG1-of (a2 / agree-01) 
                        :op1 (p / promise-01 
                              :ARG1 (s3 / so))))) 
      :op-of (i2 / industry))

# ::snt at the invitation of the soviet government and accompanied by no fewer than 25 swedish journalists members of raul wallenbergs family and the society which bears his name will meet during their weeklong visit to moscow representatives of the kgb and the foreign ministry who have promised to submit to them all available material
# ::tok at the invitation of the soviet government and accompanied by no fewer than 25 swedish journalists members of raul wallenbergs family and the society which bears his name will meet during their weeklong visit to moscow representatives of the kgb and the foreign ministry who have promised to submit to them all available material
# ::alignments 53-54|0.0.1.0.0.0.1.1.0.0 52-53|0.0.1.0.0.0.2.0 51-52|0.0.1.0.0.0.1.1.0 48-49|0.0.1.0.0.0.1.1 46-47|0.0.1.0.0.0.1 43-44|0.0.1.0.0.0.1.0 42-43|0.0.1.0.0.0.1.1.1 40-41|0.0.1.0.0.0.0.0 36-37|0.0.1.0.0.0.0+0.0.1.0.0.0 33-34|0.0.1.0.0.0.2 25-26|0.0.1.1.0+0.0.1.1.0.0 23-24|0.0.1.1 21-22|0.0.1 20-21|0.0.1.0 16-17|0.0.1.0.0.1+0.0.1.0.0 15-16|0.0 13-14|0.0.2 11-12|0.0.0 10-11|0.0.0.0 8-9|0 7-8|0.1 2-3|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:55.293
# ::node	0	accompany-01	8-9
# ::node	0.0	journalist	15-16
# ::node	0.0.0	few	11-12
# ::node	0.0.0.0	-	10-11
# ::node	0.0.1	and	21-22
# ::node	0.0.1.0	family	20-21
# ::node	0.0.1.0.0	have-org-role-91	16-17
# ::node	0.0.1.0.0.0	person	36-37
# ::node	0.0.1.0.0.0.0	represent-01	36-37
# ::node	0.0.1.0.0.0.0.0	and	40-41
# ::node	0.0.1.0.0.0.1	promise-01	46-47
# ::node	0.0.1.0.0.0.1.0	ministry	43-44
# ::node	0.0.1.0.0.0.1.1	submit-01	48-49
# ::node	0.0.1.0.0.0.1.1.0	all	51-52
# ::node	0.0.1.0.0.0.1.1.0.0	material	53-54
# ::node	0.0.1.0.0.0.1.1.1	foreign	42-43
# ::node	0.0.1.0.0.0.2	visit-01	33-34
# ::node	0.0.1.0.0.0.2.0	available	52-53
# ::node	0.0.1.0.0.1	member	16-17
# ::node	0.0.1.1	society	23-24
# ::node	0.0.1.1.0	bear-01	25-26
# ::node	0.0.1.1.0.0	thing	25-26
# ::node	0.0.2	25	13-14
# ::node	0.1	and	7-8
# ::node	0.1.0	invite-01	2-3
# ::root	0	accompany-01
# ::edge	accompany-01	ARG0	journalist	0	0.0	
# ::edge	and	op1	accompany-01	0.1	0	
# ::edge	and	op1	journalist	0.0.1	0.0	
# ::edge	and	op2	family	0.0.1	0.0.1.0	
# ::edge	and	op3	society	0.0.1	0.0.1.1	
# ::edge	bear-01	ARG1	society	0.0.1.1.0	0.0.1.1	
# ::edge	bear-01	manner	thing	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	few	mod	-	0.0.0	0.0.0.0	
# ::edge	have-org-role-91	ARG0	person	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	have-org-role-91	ARG1	family	0.0.1.0.0	0.0.1.0	
# ::edge	have-org-role-91	ARG2	member	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	invite-01	ARG1	and	0.1.0	0.1	
# ::edge	journalist	mod	few	0.0	0.0.0	
# ::edge	journalist	quant	25	0.0	0.0.2	
# ::edge	material	quant	all	0.0.1.0.0.0.1.1.0.0	0.0.1.0.0.0.1.1.0	
# ::edge	promise-01	ARG0	person	0.0.1.0.0.0.1	0.0.1.0.0.0	
# ::edge	promise-01	ARG1	ministry	0.0.1.0.0.0.1	0.0.1.0.0.0.1.0	
# ::edge	promise-01	ARG2	submit-01	0.0.1.0.0.0.1	0.0.1.0.0.0.1.1	
# ::edge	represent-01	ARG0	person	0.0.1.0.0.0.0	0.0.1.0.0.0	
# ::edge	represent-01	ARG1	and	0.0.1.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	submit-01	ARG1	all	0.0.1.0.0.0.1.1	0.0.1.0.0.0.1.1.0	
# ::edge	submit-01	mod	foreign	0.0.1.0.0.0.1.1	0.0.1.0.0.0.1.1.1	
# ::edge	visit-01	ARG0	available	0.0.1.0.0.0.2	0.0.1.0.0.0.2.0	
# ::edge	visit-01	ARG1	person	0.0.1.0.0.0.2	0.0.1.0.0.0	
(a5 / accompany-01 
      :ARG0 (j / journalist 
            :mod (f3 / few 
                  :mod (- / -)) 
            :op-of (a4 / and 
                  :op1 (f2 / family 
                        :ARG1-of (h / have-org-role-91 
                              :ARG0 (p2 / person 
                                    :ARG0-of (r / represent-01 
                                          :ARG1 (a3 / and)) 
                                    :ARG0-of (p / promise-01 
                                          :ARG1 (m2 / ministry) 
                                          :ARG2 (s / submit-01 
                                                :ARG1 (a2 / all 
                                                      :quant-of (m / material)) 
                                                :mod (f / foreign))) 
                                    :ARG1-of (v / visit-01 
                                          :ARG0 (a / available))) 
                              :ARG2 (m3 / member))) 
                  :op2 (s2 / society 
                        :ARG1-of (b / bear-01 
                              :manner (t / thing)))) 
            :quant 25) 
      :op-of (a6 / and 
            :ARG1-of (i / invite-01)))

# ::snt theyll be as interested in them as you are since you have obviously been satisfactory and promise to be even more valuable once youve acquired other skills
# ::tok theyll be as interested in them as you are since you have obviously been satisfactory and promise to be even more valuable once youve acquired other skills
# ::alignments 26-27|0.0.2.0.0.0.0 25-26|0.0.2.0.0.0.0.0 24-25|0.0.2.0.0.0 22-23|0.0.2.0.0 21-22|0.0.2.0 16-17|0.0.2 15-16|0.0 12-13|0 10-11|0.0.0.0 9-10|0.0.0 7-8|0.0.1.0 3-4|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:55.398
# ::node	0	obvious-41	12-13
# ::node	0.0	and	15-16
# ::node	0.0.0	since	9-10
# ::node	0.0.0.0	you	10-11
# ::node	0.0.1	interest-01	3-4
# ::node	0.0.1.0	you	7-8
# ::node	0.0.2	promise-01	16-17
# ::node	0.0.2.0	value-01	21-22
# ::node	0.0.2.0.0	once	22-23
# ::node	0.0.2.0.0.0	acquire-01	24-25
# ::node	0.0.2.0.0.0.0	skill	26-27
# ::node	0.0.2.0.0.0.0.0	other	25-26
# ::root	0	obvious-41
(o3 / obvious-41 
      :time-of (a2 / and 
            :op-of (s2 / since 
                  :op1 (y / you)) 
            :op1 (i / interest-01 
                  :ARG1 (y2 / you)) 
            :op2 (p / promise-01 
                  :ARG1 (v / value-01 
                        :ARG1 (o2 / once 
                              :op1 (a / acquire-01 
                                    :ARG1 (s / skill 
                                          :mod (o / other))))))))

# ::snt for its part the european commission promised proposals next month for an action programme of social legislation demanded by the charter
# ::tok for its part the european commission promised proposals next month for an action programme of social legislation demanded by the charter
# ::alignments 20-21|0.1.0.0.0 17-18|0.1.0.0.0.0 16-17|0.1.0.0.0.0.0 15-16|0.1.0.0.0.0.0.0 13-14|0.2 12-13|0.2.0 9-10|0.1.0.0.1+0.1.0.0 8-9|0.1.0.0.1.0 7-8|0.1.0+0.1 6-7|0 5-6|0.0 4-5|0.0.0.0.0+0.0.0.0+0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:55.530
# ::node	0	promise-01	6-7
# ::node	0.0	commission	5-6
# ::node	0.0.0	continent	4-5
# ::node	0.0.0.0	name	4-5
# ::node	0.0.0.0.0	"Europe"	4-5
# ::node	0.1	thing	7-8
# ::node	0.1.0	propose-01	7-8
# ::node	0.1.0.0	temporal-quantity	9-10
# ::node	0.1.0.0.0	charter-01	20-21
# ::node	0.1.0.0.0.0	demand-01	17-18
# ::node	0.1.0.0.0.0.0	legislation	16-17
# ::node	0.1.0.0.0.0.0.0	society	15-16
# ::node	0.1.0.0.1	month	9-10
# ::node	0.1.0.0.1.0	next	8-9
# ::node	0.2	program	13-14
# ::node	0.2.0	action	12-13
# ::root	0	promise-01
# ::edge	charter-01	ARG1	temporal-quantity	0.1.0.0.0	0.1.0.0	
# ::edge	commission	mod	continent	0.0	0.0.0	
# ::edge	continent	name	name	0.0.0	0.0.0.0	
# ::edge	demand-01	ARG0	charter-01	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	demand-01	ARG1	legislation	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	legislation	mod	society	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	month	mod	next	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	name	op1	"Europe"	0.0.0.0	0.0.0.0.0	
# ::edge	program	mod	action	0.2	0.2.0	
# ::edge	promise-01	ARG0	commission	0	0.0	
# ::edge	promise-01	ARG1	thing	0	0.1	
# ::edge	promise-01	ARG2	program	0	0.2	
# ::edge	propose-01	ARG1	thing	0.1.0	0.1	
# ::edge	propose-01	time	temporal-quantity	0.1.0	0.1.0.0	
# ::edge	temporal-quantity	unit	month	0.1.0.0	0.1.0.0.1	
(p3 / promise-01 
      :ARG0 (c2 / commission 
            :mod (c3 / continent 
                  :name (n2 / name 
                        :op1 "Europe"))) 
      :ARG1 (t2 / thing 
            :ARG1-of (p2 / propose-01 
                  :time (t / temporal-quantity 
                        :ARG1-of (c / charter-01 
                              :ARG0-of (d / demand-01 
                                    :ARG1 (l / legislation 
                                          :mod (s / society)))) 
                        :unit (m / month 
                              :mod (n / next))))) 
      :ARG2 (p / program 
            :mod (a / action)))

# ::snt unauthorised by the city fathers but whose immunity had been promised beforehand in person by the kgb chairman vladimir kryuchkov to andrei sakharov the countrys most famous campaigner for human rights
# ::tok unauthorised by the city fathers but whose immunity had been promised beforehand in person by the kgb chairman vladimir kryuchkov to andrei sakharov the countrys most famous campaigner for human rights
# ::alignments 30-31|0.0.1.0.0 29-30|0.0.1.0 26-27|0.0.1.1 25-26|0.0.1.1.0 17-18|0.0.0.0.1+0.0.0.0 13-14|0.0.0 11-12|0.0.2 10-11|0.0 7-8|0 5-6|0.0.1 4-5|0.0.0.0.0.0 3-4|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:55.750
# ::node	0	immunity	7-8
# ::node	0.0	promise-01	10-11
# ::node	0.0.0	person	13-14
# ::node	0.0.0.0	have-org-role-91	17-18
# ::node	0.0.0.0.0	city	3-4
# ::node	0.0.0.0.0.0	father	4-5
# ::node	0.0.0.0.1	chairman	17-18
# ::node	0.0.1	contrast-01	5-6
# ::node	0.0.1.0	human	29-30
# ::node	0.0.1.0.0	right	30-31
# ::node	0.0.1.1	famous	26-27
# ::node	0.0.1.1.0	most	25-26
# ::node	0.0.2	beforehand	11-12
# ::root	0	immunity
(i / immunity 
      :ARG1-of (p2 / promise-01 
            :ARG0 (p / person 
                  :ARG0-of (h2 / have-org-role-91 
                        :ARG1 (c3 / city 
                              :mod-of (f2 / father)) 
                        :ARG2 (c / chairman))) 
            :ARG1-of (c2 / contrast-01 
                  :op-of (h / human 
                        :mod-of (r / right)) 
                  :op-of (f / famous 
                        :degree (m / most))) 
            :manner (b / beforehand)))

# ::snt ministers will also be seeking to lift sagging tory morale by offering assurances on a range of issues which promise to make this one of the most difficult annual conferences the party leadership has faced since margaret thatcher came to office
# ::tok ministers will also be seeking to lift sagging tory morale by offering assurances on a range of issues which promise to make this one of the most difficult annual conferences the party leadership has faced since margaret thatcher came to office
# ::alignments 40-41|0.1.0.0.1.1.0.0 35-36|0.1.0.1 34-35|0.1.0 31-32|0.1.0.0.0 29-30|0.1 27-28|0 26-27|0.0 22-23|0.1.0.0.1.0 19-20|0.1.0.0.1.1.0 17-18|0.1.0.0.1.1 15-16|0.1.0.0.1.1.1 12-13|0.1.0.0.1 11-12|0.1.0.0 8-9|0.1.0.0.1.2.0.0.0.0+0.1.0.0.1.2.0.0.0+0.1.0.0.1.2.0.0 6-7|0.1.0.0.1.2 4-5|0.1.0.0.1.2.1 2-3|0.1.0.0.1.2.1.0 0-1|0.1.0.0.1.2.0.1+0.1.0.0.1.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:56.166
# ::node	0	difficult	27-28
# ::node	0.0	most	26-27
# ::node	0.1	conference	29-30
# ::node	0.1.0	face-01	34-35
# ::node	0.1.0.0	offer-01	11-12
# ::node	0.1.0.0.0	party	31-32
# ::node	0.1.0.0.1	assure-01	12-13
# ::node	0.1.0.0.1.0	this	22-23
# ::node	0.1.0.0.1.1	issue	17-18
# ::node	0.1.0.0.1.1.0	promise-01	19-20
# ::node	0.1.0.0.1.1.0.0	office	40-41
# ::node	0.1.0.0.1.1.1	range-01	15-16
# ::node	0.1.0.0.1.2	lift-01	6-7
# ::node	0.1.0.0.1.2.0	have-org-role-91	0-1
# ::node	0.1.0.0.1.2.0.0	political-party	8-9
# ::node	0.1.0.0.1.2.0.0.0	name	8-9
# ::node	0.1.0.0.1.2.0.0.0.0	"Tory"	8-9
# ::node	0.1.0.0.1.2.0.1	minister	0-1
# ::node	0.1.0.0.1.2.1	seek-01	4-5
# ::node	0.1.0.0.1.2.1.0	also	2-3
# ::node	0.1.0.1	since	35-36
# ::root	0	difficult
# ::edge	assure-01	ARG0	this	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	assure-01	ARG1	issue	0.1.0.0.1	0.1.0.0.1.1	
# ::edge	assure-01	ARG2	offer-01	0.1.0.0.1	0.1.0.0	
# ::edge	conference	mod	difficult	0.1	0	
# ::edge	difficult	degree	most	0	0.0	
# ::edge	face-01	ARG1	conference	0.1.0	0.1	
# ::edge	face-01	time	since	0.1.0	0.1.0.1	
# ::edge	have-org-role-91	ARG1	political-party	0.1.0.0.1.2.0	0.1.0.0.1.2.0.0	
# ::edge	have-org-role-91	ARG2	minister	0.1.0.0.1.2.0	0.1.0.0.1.2.0.1	
# ::edge	lift-01	ARG0	have-org-role-91	0.1.0.0.1.2	0.1.0.0.1.2.0	
# ::edge	lift-01	ARG3	assure-01	0.1.0.0.1.2	0.1.0.0.1	
# ::edge	name	op1	"Tory"	0.1.0.0.1.2.0.0.0	0.1.0.0.1.2.0.0.0.0	
# ::edge	offer-01	ARG0	party	0.1.0.0	0.1.0.0.0	
# ::edge	offer-01	ARG1	face-01	0.1.0.0	0.1.0	
# ::edge	political-party	name	name	0.1.0.0.1.2.0.0	0.1.0.0.1.2.0.0.0	
# ::edge	promise-01	ARG0	issue	0.1.0.0.1.1.0	0.1.0.0.1.1	
# ::edge	promise-01	ARG1	office	0.1.0.0.1.1.0	0.1.0.0.1.1.0.0	
# ::edge	range-01	ARG1	issue	0.1.0.0.1.1.1	0.1.0.0.1.1	
# ::edge	seek-01	ARG1	lift-01	0.1.0.0.1.2.1	0.1.0.0.1.2	
# ::edge	seek-01	mod	also	0.1.0.0.1.2.1	0.1.0.0.1.2.1.0	
(d / difficult 
      :degree (m / most) 
      :mod-of (c / conference 
            :ARG1-of (f / face-01 
                  :ARG1-of (o2 / offer-01 
                        :ARG0 (p / party) 
                        :ARG2-of (a / assure-01 
                              :ARG0 (t / this) 
                              :ARG1 (i / issue 
                                    :ARG0-of (p2 / promise-01 
                                          :ARG1 (o / office)) 
                                    :ARG1-of (r / range-01)) 
                              :ARG3-of (l / lift-01 
                                    :ARG0 (h / have-org-role-91 
                                          :ARG1 (p3 / political-party 
                                                :name (n / name 
                                                      :op1 "Tory")) 
                                          :ARG2 (m2 / minister)) 
                                    :ARG1-of (s2 / seek-01 
                                          :mod (a2 / also))))) 
                  :time (s / since))))

# ::snt in 1917 india had been promised responsible government ellip
# ::tok in 1917 india had been promised responsible government ellip
# ::alignments 6-7|0.0.0 5-6|0 2-3|0.0.1.0+0.0.1+0.0 1-2|0.0.0.0.0+0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:56.225
# ::node	0	promise-01	5-6
# ::node	0.0	country	2-3
# ::node	0.0.0	responsible-41	6-7
# ::node	0.0.0.0	date-entity	1-2
# ::node	0.0.0.0.0	1917	1-2
# ::node	0.0.1	name	2-3
# ::node	0.0.1.0	"India"	2-3
# ::root	0	promise-01
# ::edge	country	name	name	0.0	0.0.1	
# ::edge	date-entity	year	1917	0.0.0.0	0.0.0.0.0	
# ::edge	name	op1	"India"	0.0.1	0.0.1.0	
# ::edge	promise-01	ARG1	country	0	0.0	
# ::edge	responsible-41	ARG1	country	0.0.0	0.0	
# ::edge	responsible-41	ARG2	date-entity	0.0.0	0.0.0.0	
(p / promise-01 
      :ARG1 (c / country 
            :ARG1-of (r / responsible-41 
                  :ARG2 (d / date-entity 
                        :year 1917)) 
            :name (n / name 
                  :op1 "India")))

# ::snt   after two lengthy meetings with mr field mr kinnock promised a thorough investigation into mr fields allegations about militant infiltration in wirral including birkenhead
# ::tok after two lengthy meetings with mr field mr kinnock promised a thorough investigation into mr fields allegations about militant infiltration in wirral including birkenhead
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:56.226
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt he is confident that the fleet will still have about 50 modern destroyers and frigates at the turn of the century as the government has promised
# ::tok he is confident that the fleet will still have about 50 modern destroyers and frigates at the turn of the century as the government has promised
# ::alignments 25-26|0.1 13-14|0 12-13|0.0 11-12|0.0.0 10-11|0.0.2 7-8|0.1.0.0.0 5-6|0.0.1 2-3|0.1.0.0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:56.345
# ::node	0	and	13-14
# ::node	0.0	destroyer	12-13
# ::node	0.0.0	modern	11-12
# ::node	0.0.1	fleet	5-6
# ::node	0.0.2	50	10-11
# ::node	0.1	promise-01	25-26
# ::node	0.1.0	he	0-1
# ::node	0.1.0.0	confident-41	2-3
# ::node	0.1.0.0.0	still	7-8
# ::root	0	and
# ::edge	and	op1	destroyer	0	0.0	
# ::edge	and	op2	promise-01	0	0.1	
# ::edge	confident-41	ARG0	still	0.1.0.0	0.1.0.0.0	
# ::edge	confident-41	ARG1	he	0.1.0.0	0.1.0	
# ::edge	destroyer	mod	modern	0.0	0.0.0	
# ::edge	destroyer	poss	fleet	0.0	0.0.1	
# ::edge	destroyer	quant	50	0.0	0.0.2	
# ::edge	promise-01	ARG0	he	0.1	0.1.0	
(a / and 
      :op1 (d / destroyer 
            :mod (m / modern) 
            :poss (f / fleet) 
            :quant 50) 
      :op2 (p / promise-01 
            :ARG0 (h / he 
                  :ARG1-of (c / confident-41 
                        :ARG0 (s / still)))))

# ::snt is that they must now accept far greater liability for the quality and safety of what they sell and deliver what they promise
# ::tok is that they must now accept far greater liability for the quality and safety of what they sell and deliver what they promise
# ::alignments 22-23|0.1.1 21-22|0.1.1.0 19-20|0.1 18-19|0.1.0.0.1 17-18|0.1.0.0.1.0 16-17|0.1.0.0.1.0.0 13-14|0.0 12-13|0 11-12|0.1.0.0.2 8-9|0.1.0.0.0 7-8|0.1.0.0.0.0 6-7|0.1.0.0.0.0.0 5-6|0.1.0.0 4-5|0.1.0.0.3 2-3|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:56.423
# ::node	0	and	12-13
# ::node	0.0	safe-41	13-14
# ::node	0.1	deliver-01	19-20
# ::node	0.1.0	they	2-3
# ::node	0.1.0.0	accept-01	5-6
# ::node	0.1.0.0.0	liability	8-9
# ::node	0.1.0.0.0.0	great	7-8
# ::node	0.1.0.0.0.0.0	far	6-7
# ::node	0.1.0.0.1	and	18-19
# ::node	0.1.0.0.1.0	sell-01	17-18
# ::node	0.1.0.0.1.0.0	they	16-17
# ::node	0.1.0.0.2	quality	11-12
# ::node	0.1.0.0.3	now	4-5
# ::node	0.1.1	promise-01	22-23
# ::node	0.1.1.0	they	21-22
# ::root	0	and
# ::edge	accept-01	ARG0	they	0.1.0.0	0.1.0	
# ::edge	accept-01	ARG1	liability	0.1.0.0	0.1.0.0.0	
# ::edge	accept-01	prep-under	quality	0.1.0.0	0.1.0.0.2	
# ::edge	accept-01	time	now	0.1.0.0	0.1.0.0.3	
# ::edge	and	op1	accept-01	0.1.0.0.1	0.1.0.0	
# ::edge	and	op1	safe-41	0	0.0	
# ::edge	and	op2	deliver-01	0	0.1	
# ::edge	and	op2	sell-01	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	deliver-01	ARG0	they	0.1	0.1.0	
# ::edge	deliver-01	ARG1	promise-01	0.1	0.1.1	
# ::edge	great	mod	far	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	liability	mod	great	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	promise-01	ARG0	they	0.1.1	0.1.1.0	
# ::edge	sell-01	ARG0	they	0.1.0.0.1.0	0.1.0.0.1.0.0	
(a2 / and 
      :op1 (s2 / safe-41) 
      :op2 (d / deliver-01 
            :ARG0 (t3 / they 
                  :ARG0-of (a3 / accept-01 
                        :ARG1 (l / liability 
                              :mod (g / great 
                                    :mod (f / far))) 
                        :op-of (a / and 
                              :op1 (s / sell-01 
                                    :ARG0 (t2 / they))) 
                        :prep-under (q / quality) 
                        :time (n / now))) 
            :ARG1 (p / promise-01 
                  :ARG0 (t / they))))

# ::snt it was a measure of the crisis facing the soviet economy that mr gorbachev felt obliged to appear on television yesterday promising that the supreme soviet and the government would urgently consider their demands
# ::tok it was a measure of the crisis facing the soviet economy that mr gorbachev felt obliged to appear on television yesterday promising that the supreme soviet and the government would urgently consider their demands
# ::alignments 33-34|0.1.0.1.1.1 31-32|0.1.0.1.1 30-31|0.1.0.1.1.2 26-27|0.1.0.1.1.0 24-25|0.1.0.1.1.3 21-22|0.1.0.1 20-21|0.1.0.1.0 19-20|0.0 17-18|0 15-16|0.1 14-15|0.1.0 10-11|0.1.0.0 7-8|0.1.0.0.0 6-7|0.1.0.0.0.0 3-4|0.1.0.0.0.0.0 0-1|0.1.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:56.848
# ::node	0	appear-02	17-18
# ::node	0.0	television	19-20
# ::node	0.1	oblige-02	15-16
# ::node	0.1.0	feel-01	14-15
# ::node	0.1.0.0	economy	10-11
# ::node	0.1.0.0.0	face-01	7-8
# ::node	0.1.0.0.0.0	crisis	6-7
# ::node	0.1.0.0.0.0.0	measure	3-4
# ::node	0.1.0.0.0.0.0.0	it	0-1
# ::node	0.1.0.1	promise-01	21-22
# ::node	0.1.0.1.0	yesterday	20-21
# ::node	0.1.0.1.1	consider-02	31-32
# ::node	0.1.0.1.1.0	and	26-27
# ::node	0.1.0.1.1.1	demand-01	33-34
# ::node	0.1.0.1.1.2	urgent	30-31
# ::node	0.1.0.1.1.3	supreme	24-25
# ::root	0	appear-02
# ::edge	appear-02	ARG1	television	0	0.0	
# ::edge	consider-02	ARG0	and	0.1.0.1.1	0.1.0.1.1.0	
# ::edge	consider-02	ARG1	demand-01	0.1.0.1.1	0.1.0.1.1.1	
# ::edge	consider-02	manner	urgent	0.1.0.1.1	0.1.0.1.1.2	
# ::edge	consider-02	mod	supreme	0.1.0.1.1	0.1.0.1.1.3	
# ::edge	face-01	ARG0	economy	0.1.0.0.0	0.1.0.0	
# ::edge	face-01	ARG1	crisis	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	feel-01	ARG0	economy	0.1.0	0.1.0.0	
# ::edge	feel-01	ARG1	oblige-02	0.1.0	0.1	
# ::edge	feel-01	purpose	promise-01	0.1.0	0.1.0.1	
# ::edge	measure	domain	it	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	measure	op1	crisis	0.1.0.0.0.0.0	0.1.0.0.0.0	
# ::edge	oblige-02	ARG2	appear-02	0.1	0	
# ::edge	promise-01	ARG0	yesterday	0.1.0.1	0.1.0.1.0	
# ::edge	promise-01	ARG1	consider-02	0.1.0.1	0.1.0.1.1	
(a2 / appear-02 
      :ARG1 (t / television) 
      :ARG2-of (o / oblige-02 
            :ARG1-of (f / feel-01 
                  :ARG0 (e / economy 
                        :ARG0-of (f2 / face-01 
                              :ARG1 (c2 / crisis 
                                    :op-of (m / measure 
                                          :domain (i / it))))) 
                  :purpose (p / promise-01 
                        :ARG0 (y / yesterday) 
                        :ARG1 (c / consider-02 
                              :ARG0 (a / and) 
                              :ARG1 (d / demand-01) 
                              :manner (u / urgent) 
                              :mod (s / supreme))))))

# ::snt rain had promised supper in lymington in exchange for the bed and breakfast
# ::tok rain had promised supper in lymington in exchange for the bed and breakfast
# ::alignments 11-12|0.0.0.1 10-11|0.0.0.0 7-8|0.0.0 3-4|0.1 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:56.867
# ::node	0	promise-01	2-3
# ::node	0.0	rain-01	0-1
# ::node	0.0.0	exchange-01	7-8
# ::node	0.0.0.0	bed	10-11
# ::node	0.0.0.1	and	11-12
# ::node	0.1	supper	3-4
# ::root	0	promise-01
# ::edge	and	op1	exchange-01	0.0.0.1	0.0.0	
# ::edge	exchange-01	ARG0	rain-01	0.0.0	0.0	
# ::edge	exchange-01	ARG1	bed	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG0	rain-01	0	0.0	
# ::edge	promise-01	ARG1	supper	0	0.1	
(p / promise-01 
      :ARG0 (r / rain-01 
            :ARG0-of (e / exchange-01 
                  :ARG1 (b / bed) 
                  :op-of (a / and))) 
      :ARG1 (s / supper))

# ::snt it may have been wrong to promise to give my son fireworks for they are too dangerous
# ::tok it may have been wrong to promise to give my son fireworks for they are too dangerous
# ::alignments 16-17|0.0.0 15-16|0.0.0.0 13-14|0.0.0.1 11-12|0.1.0.0 10-11|0.1.0.0.0.0+0.1.0.0.0 8-9|0.1.0 6-7|0.1 4-5|0 1-2|0.2.0+0.2 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:56.916
# ::node	0	wrong-41	4-5
# ::node	0.0	it	0-1
# ::node	0.0.0	dangerous	16-17
# ::node	0.0.0.0	too	15-16
# ::node	0.0.0.1	they	13-14
# ::node	0.1	promise-01	6-7
# ::node	0.1.0	give-01	8-9
# ::node	0.1.0.0	firework	11-12
# ::node	0.1.0.0.0	have-rel-role-91	10-11
# ::node	0.1.0.0.0.0	son	10-11
# ::node	0.2	date-entity	1-2
# ::node	0.2.0	5	1-2
# ::root	0	wrong-41
# ::edge	dangerous	degree	too	0.0.0	0.0.0.0	
# ::edge	dangerous	domain	it	0.0.0	0.0	
# ::edge	dangerous	domain	they	0.0.0	0.0.0.1	
# ::edge	date-entity	domain	wrong-41	0.2	0	
# ::edge	date-entity	month	5	0.2	0.2.0	
# ::edge	give-01	ARG1	firework	0.1.0	0.1.0.0	
# ::edge	have-rel-role-91	ARG0	firework	0.1.0.0.0	0.1.0.0	
# ::edge	have-rel-role-91	ARG2	son	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	promise-01	ARG2	give-01	0.1	0.1.0	
# ::edge	wrong-41	ARG1	it	0	0.0	
# ::edge	wrong-41	ARG2	promise-01	0	0.1	
(w / wrong-41 
      :ARG1 (i / it 
            :domain-of (d / dangerous 
                  :degree (t / too) 
                  :domain (t2 / they))) 
      :ARG2 (p / promise-01 
            :ARG2 (g / give-01 
                  :ARG1 (f / firework 
                        :ARG0-of (h / have-rel-role-91 
                              :ARG2 (s / son))))) 
      :domain-of (d2 / date-entity 
            :month 5))

# ::snt he promised there is no hiding place for them in the housing schemes of glasgow
# ::tok he promised there is no hiding place for them in the housing schemes of glasgow
# ::alignments 12-13|0.1.0.0 11-12|0.1.0.0.0 6-7|0.1 5-6|0.1.0 4-5|0.1.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:56.938
# ::node	0	promise-01	1-2
# ::node	0.0	he	0-1
# ::node	0.1	place	6-7
# ::node	0.1.0	hide-01	5-6
# ::node	0.1.0.0	scheme-01	12-13
# ::node	0.1.0.0.0	house-01	11-12
# ::node	0.1.1	-	4-5
# ::root	0	promise-01
# ::edge	hide-01	ARG0	place	0.1.0	0.1	
# ::edge	hide-01	ARG1	scheme-01	0.1.0	0.1.0.0	
# ::edge	house-01	ARG0	scheme-01	0.1.0.0.0	0.1.0.0	
# ::edge	place	polarity	-	0.1	0.1.1	
# ::edge	promise-01	ARG0	he	0	0.0	
# ::edge	promise-01	ARG1	place	0	0.1	
(p2 / promise-01 
      :ARG0 (h3 / he) 
      :ARG1 (p / place 
            :ARG0-of (h2 / hide-01 
                  :ARG1 (s / scheme-01 
                        :ARG0-of (h / house-01))) 
            :polarity (- / -)))

# ::snt and to cap it all off when she was tiedup she couldnt run backwards so she lay down instead  inanna was the most beautiful friendly and uncooperative horse that one could ever have the misfortune to own because from her looks she promised so much but from her heart she gave so little
# ::tok and to cap it all off when she was tiedup she couldnt run backwards so she lay down instead inanna was the most beautiful friendly and uncooperative horse that one could ever have the misfortune to own because from her looks she promised so much but from her heart she gave so little
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:56.940
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt 5 million promised to the church urban fund by the three counties of the diocese of oxford is almost matched by fabric appeals totalling 1
# ::tok 5 million promised to the church urban fund by the three counties of the diocese of oxford is almost matched by fabric appeals totalling 1
# ::alignments 24-25|0.0.0.0.0.1.1 22-23|0.0.0.0.0 21-22|0.0.0.0.0.0 19-20|0.0.0.0.0.1 18-19|0.0.0.0.0.1.2 14-17|0.0.0.0.0.1.0.0.0.0+0.0.0.0.0.1.0.0.0.1+0.0.0.0.0.1.0.0.0.2+0.0.0.0.0.1.0.0.0+0.0.0.0.0.1.0.0 11-12|0.0.0.0.0.1.0 10-11|0.0.0.0.0.1.0.1 7-8|0.0 6-7|0.0.1 5-6|0 2-3|0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:57.150
# ::node	0	church	5-6
# ::node	0.0	fund-01	7-8
# ::node	0.0.0	promise-01	2-3
# ::node	0.0.0.0	5	0-1
# ::node	0.0.0.0.0	appeal-01	22-23
# ::node	0.0.0.0.0.0	fabric	21-22
# ::node	0.0.0.0.0.1	match-01	19-20
# ::node	0.0.0.0.0.1.0	county	11-12
# ::node	0.0.0.0.0.1.0.0	organization	14-17
# ::node	0.0.0.0.0.1.0.0.0	name	14-17
# ::node	0.0.0.0.0.1.0.0.0.0	"oxford"	14-17
# ::node	0.0.0.0.0.1.0.0.0.1	"of"	14-17
# ::node	0.0.0.0.0.1.0.0.0.2	"diocese"	14-17
# ::node	0.0.0.0.0.1.0.1	3	10-11
# ::node	0.0.0.0.0.1.1	1	24-25
# ::node	0.0.0.0.0.1.2	almost	18-19
# ::node	0.0.1	urban	6-7
# ::root	0	church
(c2 / church 
      :ARG1-of (f2 / fund-01 
            :ARG2-of (p / promise-01 
                  :ARG1 (5 / 5 
                        :ARG0-of (a / appeal-01 
                              :ARG1 (f / fabric) 
                              :ARG2-of (m / match-01 
                                    :ARG0 (c / county 
                                          :poss (o / organization 
                                                :name (n / name 
                                                      :op1 "oxford" 
                                                      :op2 "of" 
                                                      :op3 "diocese")) 
                                          :quant 3) 
                                    :ARG1 1 
                                    :mod (a2 / almost))))) 
            :mod (u / urban)))

# ::snt the prosecution is resisting a plea bargain unless the mayor promises not to stand for office again and accepts that he will have to plead guilty to at least one felony
# ::tok the prosecution is resisting a plea bargain unless the mayor promises not to stand for office again and accepts that he will have to plead guilty to at least one felony
# ::alignments 25-26|0.1 24-25|0 20-21|0.0 18-19|0.0.0 17-18|0.0.0.1 16-17|0.0.0.1.0.1 15-16|0.0.0.0 10-11|0.0.0.1.0 9-10|0.0.0.1.0.0+0.0.0.1.0.0.0 6-7|0.0.0.1.0.2.1 5-6|0.0.0.1.0.2.1.0 3-4|0.0.0.1.0.2 1-2|0.0.0.1.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:57.299
# ::node	0	plead-02	24-25
# ::node	0.0	he	20-21
# ::node	0.0.0	accept-01	18-19
# ::node	0.0.0.0	office	15-16
# ::node	0.0.0.1	and	17-18
# ::node	0.0.0.1.0	promise-01	10-11
# ::node	0.0.0.1.0.0	mayor	9-10
# ::node	0.0.0.1.0.0.0	have-org-role-91	9-10
# ::node	0.0.0.1.0.1	again	16-17
# ::node	0.0.0.1.0.2	resist-01	3-4
# ::node	0.0.0.1.0.2.0	prosecute-01	1-2
# ::node	0.0.0.1.0.2.1	bargain-01	6-7
# ::node	0.0.0.1.0.2.1.0	plead-02	5-6
# ::node	0.1	guilty-41	25-26
# ::root	0	plead-02
# ::edge	accept-01	ARG0	he	0.0.0	0.0	
# ::edge	accept-01	ARG1	office	0.0.0	0.0.0.0	
# ::edge	and	condition	promise-01	0.0.0.1	0.0.0.1.0	
# ::edge	and	op1	accept-01	0.0.0.1	0.0.0	
# ::edge	bargain-01	ARG1	plead-02	0.0.0.1.0.2.1	0.0.0.1.0.2.1.0	
# ::edge	have-org-role-91	ARG2	mayor	0.0.0.1.0.0.0	0.0.0.1.0.0	
# ::edge	plead-02	ARG0	he	0	0.0	
# ::edge	plead-02	ARG1	guilty-41	0	0.1	
# ::edge	promise-01	ARG0	mayor	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	promise-01	ARG1	again	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	resist-01	ARG0	prosecute-01	0.0.0.1.0.2	0.0.0.1.0.2.0	
# ::edge	resist-01	ARG1	bargain-01	0.0.0.1.0.2	0.0.0.1.0.2.1	
# ::edge	resist-01	condition	promise-01	0.0.0.1.0.2	0.0.0.1.0	
(p / plead-02 
      :ARG0 (h / he 
            :ARG0-of (a / accept-01 
                  :ARG1 (o / office) 
                  :op-of (a2 / and 
                        :condition (p2 / promise-01 
                              :ARG0 (m / mayor 
                                    :ARG2-of (h2 / have-org-role-91)) 
                              :ARG1 (a3 / again) 
                              :condition-of (r / resist-01 
                                    :ARG0 (p4 / prosecute-01) 
                                    :ARG1 (b / bargain-01 
                                          :ARG1 (p3 / plead-02))))))) 
      :ARG1 (g / guilty-41))

# ::snt in addition it promises to ringfence community care funds and repeats commitments in the policy statement to reintroduce free eye and dental checks and end compulsory competitive tendering
# ::tok in addition it promises to ringfence community care funds and repeats commitments in the policy statement to reintroduce free eye and dental checks and end compulsory competitive tendering
# ::alignments 26-27|0.0.3 25-26|0 23-24|0.0 22-23|0.0.2 20-21|0.0.0 19-20|0.0.1.1 18-19|0.0.1.1.0 17-18|0.0.1 15-16|0.0.1.2 14-15|0.0.1.2.1 11-12|0.0.1.2.0 10-11|0.0.1.2.0.0 9-10|0.0.1.0.0.0 8-9|0.0.1.0.0.0.0 7-8|0.0.1.0.0.0.0.0 6-7|0.0.1.0.0.0.0.0.0 3-4|0.0.1.0.0 2-3|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:58.120
# ::node	0	compel-01	25-26
# ::node	0.0	and	23-24
# ::node	0.0.0	and	20-21
# ::node	0.0.1	reintroduce-02	17-18
# ::node	0.0.1.0	it	2-3
# ::node	0.0.1.0.0	promise-01	3-4
# ::node	0.0.1.0.0.0	and	9-10
# ::node	0.0.1.0.0.0.0	fund	8-9
# ::node	0.0.1.0.0.0.0.0	care-01	7-8
# ::node	0.0.1.0.0.0.0.0.0	community	6-7
# ::node	0.0.1.1	eye	19-20
# ::node	0.0.1.1.0	free-41	18-19
# ::node	0.0.1.2	state-01	15-16
# ::node	0.0.1.2.0	commit-01	11-12
# ::node	0.0.1.2.0.0	repeat-01	10-11
# ::node	0.0.1.2.1	policy	14-15
# ::node	0.0.2	check-01	22-23
# ::node	0.0.3	compete-01	26-27
# ::root	0	compel-01
# ::edge	and	op1	and	0.0.0	0.0	
# ::edge	and	op1	fund	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	and	op1	reintroduce-02	0.0	0.0.1	
# ::edge	and	op2	check-01	0.0	0.0.2	
# ::edge	and	op3	compete-01	0.0	0.0.3	
# ::edge	care-01	ARG0	fund	0.0.1.0.0.0.0.0	0.0.1.0.0.0.0	
# ::edge	care-01	ARG1	community	0.0.1.0.0.0.0.0	0.0.1.0.0.0.0.0.0	
# ::edge	commit-01	ARG1	state-01	0.0.1.2.0	0.0.1.2	
# ::edge	commit-01	manner	repeat-01	0.0.1.2.0	0.0.1.2.0.0	
# ::edge	compel-01	ARG1	and	0	0.0	
# ::edge	free-41	ARG1	eye	0.0.1.1.0	0.0.1.1	
# ::edge	promise-01	ARG0	it	0.0.1.0.0	0.0.1.0	
# ::edge	promise-01	ARG2	and	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	reintroduce-02	ARG0	it	0.0.1	0.0.1.0	
# ::edge	reintroduce-02	ARG1	eye	0.0.1	0.0.1.1	
# ::edge	state-01	ARG1	reintroduce-02	0.0.1.2	0.0.1	
# ::edge	state-01	mod	policy	0.0.1.2	0.0.1.2.1	
(c2 / compel-01 
      :ARG1 (a / and 
            :op-of (a2 / and) 
            :op1 (r / reintroduce-02 
                  :ARG0 (i / it 
                        :ARG0-of (p2 / promise-01 
                              :ARG2 (a3 / and 
                                    :op1 (f2 / fund 
                                          :ARG0-of (c5 / care-01 
                                                :ARG1 (c6 / community)))))) 
                  :ARG1 (e / eye 
                        :ARG1-of (f / free-41)) 
                  :ARG1-of (s / state-01 
                        :ARG1-of (c4 / commit-01 
                              :manner (r2 / repeat-01)) 
                        :mod (p / policy))) 
            :op2 (c3 / check-01) 
            :op3 (c / compete-01)))

# ::snt id promised my mother id buy her some new centralheating and the only time it could be fitted was the next week so i needed to be home for monday when the workmen came round
# ::tok id promised my mother id buy her some new centralheating and the only time it could be fitted was the next week so i needed to be home for monday when the workmen came round
# ::alignments 34-35|0.0.0.0.0.1 27-28|0.0.0.0.1.0.0.0 24-25|0.0.0.0.1.0.0 23-24|0.0.0.0.1.0 22-23|0.0.0.0.1.0.0.1 21-22|0.0.0.0.1.0.0.1.0 20-21|0.0.0.0.1.0.0.1.0.1 15-16|0 14-15|0.0.0.0.1.0.0.1.0.0 13-14|0.0.0.0.0.0 12-13|0.0.0.0.0.0.2 10-11|0.0.0.0.0 8-9|0.0.0.0.0.0.0 7-8|0.0.0.0.0.0.1 5-6|0.0 4-5|0.0.0 3-4|0.0.0.0.1.1+0.0.0.0.1 1-2|0.0.0.0 0-1|0.0.0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:58.461
# ::node	0	possible	15-16
# ::node	0.0	buy-01	5-6
# ::node	0.0.0	id	4-5
# ::node	0.0.0.0	promise-01	1-2
# ::node	0.0.0.0.0	and	10-11
# ::node	0.0.0.0.0.0	time	13-14
# ::node	0.0.0.0.0.0.0	new	8-9
# ::node	0.0.0.0.0.0.1	some	7-8
# ::node	0.0.0.0.0.0.2	only	12-13
# ::node	0.0.0.0.0.1	round	34-35
# ::node	0.0.0.0.1	have-rel-role-91	3-4
# ::node	0.0.0.0.1.0	i	23-24
# ::node	0.0.0.0.1.0.0	need-01	24-25
# ::node	0.0.0.0.1.0.0.0	home	27-28
# ::node	0.0.0.0.1.0.0.1	so	22-23
# ::node	0.0.0.0.1.0.0.1.0	week	21-22
# ::node	0.0.0.0.1.0.0.1.0.0	it	14-15
# ::node	0.0.0.0.1.0.0.1.0.1	next	20-21
# ::node	0.0.0.0.1.1	mother	3-4
# ::node	0.0.0.0.2	id	0-1
# ::root	0	possible
(p / possible 
      :ARG1-of (b / buy-01 
            :ARG0 (i3 / id 
                  :ARG2-of (p2 / promise-01 
                        :ARG0 (a / and 
                              :op1 (t / time 
                                    :mod (n3 / new) 
                                    :mod (s2 / some) 
                                    :mod (o / only)) 
                              :op2 (r / round)) 
                        :ARG1 (h2 / have-rel-role-91 
                              :ARG1 (i / i 
                                    :ARG0-of (n / need-01 
                                          :ARG1 (h / home) 
                                          :op-of (s / so 
                                                :quant (w / week 
                                                      :domain (i2 / it) 
                                                      :mod (n2 / next))))) 
                              :ARG2 (m / mother)) 
                        :time (i4 / id)))))

# ::snt for example many who agree that people have a right to promise will disagree with my view expressed above of the interest on which it is based and will justify it only by reference to some other interests of the rightholders
# ::tok for example many who agree that people have a right to promise will disagree with my view expressed above of the interest on which it is based and will justify it only by reference to some other interests of the rightholders
# ::alignments 37-38|0.1 36-37|0.1.0 35-36|0.0 33-34|0 31-32|0.2 30-31|0.3 29-30|0.3.0 27-28|0.3.0.0 26-27|0.3.0.0.1 24-25|0.3.0.0.1.0 21-22|0.3.0.0.1.0.0 18-19|0.3.0.0.1.0.0.0.0 17-18|0.3.0.0.1.0.0.0 13-14|0.3.0.0.0.0.0 11-12|0.3.0.0.0.0.0.0 4-5|0.3.0.0.0 2-3|0.3.0.0.0.0.1 1-2|0.3.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:58.814
# ::node	0	reference-01	33-34
# ::node	0.0	some	35-36
# ::node	0.1	interest	37-38
# ::node	0.1.0	other	36-37
# ::node	0.2	only	31-32
# ::node	0.3	it	30-31
# ::node	0.3.0	justify-01	29-30
# ::node	0.3.0.0	and	27-28
# ::node	0.3.0.0.0	agree-01	4-5
# ::node	0.3.0.0.0.0	example	1-2
# ::node	0.3.0.0.0.0.0	disagree-01	13-14
# ::node	0.3.0.0.0.0.0.0	promise-01	11-12
# ::node	0.3.0.0.0.0.1	many	2-3
# ::node	0.3.0.0.1	base-01	26-27
# ::node	0.3.0.0.1.0	it	24-25
# ::node	0.3.0.0.1.0.0	interest-01	21-22
# ::node	0.3.0.0.1.0.0.0	express-01	17-18
# ::node	0.3.0.0.1.0.0.0.0	above	18-19
# ::root	0	reference-01
# ::edge	agree-01	ARG0	and	0.3.0.0.0	0.3.0.0	
# ::edge	agree-01	ARG1	example	0.3.0.0.0	0.3.0.0.0.0	
# ::edge	and	op1	base-01	0.3.0.0	0.3.0.0.1	
# ::edge	base-01	ARG1	it	0.3.0.0.1	0.3.0.0.1.0	
# ::edge	disagree-01	ARG0	example	0.3.0.0.0.0.0	0.3.0.0.0.0	
# ::edge	example	quant	many	0.3.0.0.0.0	0.3.0.0.0.0.1	
# ::edge	express-01	ARG1	above	0.3.0.0.1.0.0.0	0.3.0.0.1.0.0.0.0	
# ::edge	express-01	manner	interest-01	0.3.0.0.1.0.0.0	0.3.0.0.1.0.0	
# ::edge	interest	mod	other	0.1	0.1.0	
# ::edge	interest-01	ARG1	it	0.3.0.0.1.0.0	0.3.0.0.1.0	
# ::edge	it	topic	reference-01	0.3	0	
# ::edge	justify-01	ARG0	and	0.3.0	0.3.0.0	
# ::edge	justify-01	ARG1	it	0.3.0	0.3	
# ::edge	promise-01	ARG1	disagree-01	0.3.0.0.0.0.0.0	0.3.0.0.0.0.0	
# ::edge	reference-01	ARG1	some	0	0.0	
# ::edge	reference-01	ARG2	interest	0	0.1	
# ::edge	reference-01	mod	only	0	0.2	
(r / reference-01 
      :ARG1 (s / some) 
      :ARG2 (i / interest 
            :mod (o / other)) 
      :mod (o2 / only) 
      :topic-of (i2 / it 
            :ARG1-of (j / justify-01 
                  :ARG0 (a / and 
                        :ARG0-of (a3 / agree-01 
                              :ARG1 (e2 / example 
                                    :ARG0-of (d / disagree-01 
                                          :ARG1-of (p / promise-01)) 
                                    :quant (m / many))) 
                        :op1 (b / base-01 
                              :ARG1 (i3 / it 
                                    :ARG1-of (i4 / interest-01 
                                          :manner-of (e / express-01 
                                                :ARG1 (a2 / above)))))))))

# ::snt if only his physical self didnt promise so much
# ::tok if only his physical self didnt promise so much
# ::alignments 8-9|0.1 7-8|0.1.0 6-7|0 4-5|0.0 3-4|0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:58.831
# ::node	0	promise-01	6-7
# ::node	0.0	self	4-5
# ::node	0.0.0	physical	3-4
# ::node	0.0.0.0	only	1-2
# ::node	0.1	much	8-9
# ::node	0.1.0	so	7-8
# ::root	0	promise-01
# ::edge	much	degree	so	0.1	0.1.0	
# ::edge	physical	mod	only	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	self	0	0.0	
# ::edge	promise-01	mod	much	0	0.1	
# ::edge	self	mod	physical	0.0	0.0.0	
(p / promise-01 
      :ARG1 (s2 / self 
            :mod (p2 / physical 
                  :mod (o / only))) 
      :mod (m / much 
            :degree (s / so)))

# ::snt an improved model is promised by the summer
# ::tok an improved model is promised by the summer
# ::alignments 7-8|0.0 4-5|0 2-3|0.1 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:58.841
# ::node	0	promise-01	4-5
# ::node	0.0	summer	7-8
# ::node	0.1	model	2-3
# ::node	0.1.0	improve-01	1-2
# ::root	0	promise-01
# ::edge	improve-01	ARG1	model	0.1.0	0.1	
# ::edge	promise-01	ARG0	summer	0	0.0	
# ::edge	promise-01	ARG1	model	0	0.1	
(p / promise-01 
      :ARG0 (s / summer) 
      :ARG1 (m / model 
            :ARG1-of (i / improve-01)))

# ::snt i promise myself a cup of tea as soon as i get in
# ::tok i promise myself a cup of tea as soon as i get in
# ::alignments 10-11|0.3.0 8-9|0.3 6-7|0.2 4-5|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:58.905
# ::node	0	promise-01	1-2
# ::node	0.0	i	0-1
# ::node	0.1	cup	4-5
# ::node	0.2	tea	6-7
# ::node	0.3	soon	8-9
# ::node	0.3.0	i	10-11
# ::root	0	promise-01
# ::edge	promise-01	ARG0	i	0	0.0	
# ::edge	promise-01	ARG1	cup	0	0.1	
# ::edge	promise-01	ARG2	tea	0	0.2	
# ::edge	promise-01	manner	soon	0	0.3	
# ::edge	soon	mod	i	0.3	0.3.0	
(p / promise-01 
      :ARG0 (i2 / i) 
      :ARG1 (c / cup) 
      :ARG2 (t / tea) 
      :manner (s / soon 
            :mod (i / i)))

# ::snt the uninterested male voice promised to do so
# ::tok the uninterested male voice promised to do so
# ::alignments 7-8|0.1 4-5|0 3-4|0.0 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:58.916
# ::node	0	promise-01	4-5
# ::node	0.0	voice	3-4
# ::node	0.0.0	male	2-3
# ::node	0.1	so	7-8
# ::root	0	promise-01
# ::edge	promise-01	ARG0	voice	0	0.0	
# ::edge	promise-01	ARG1	so	0	0.1	
# ::edge	voice	mod	male	0.0	0.0.0	
(p / promise-01 
      :ARG0 (v / voice 
            :mod (m / male)) 
      :ARG1 (s / so))

# ::snt at the office i left him promising to call for him at his house about 600 that evening
# ::tok at the office i left him promising to call for him at his house about 600 that evening
# ::alignments 17-18|0.1.0 15-16|0.2 13-14|0.0.0 6-7|0 3-4|0.0 2-3|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:58.953
# ::node	0	promise-01	6-7
# ::node	0.0	i	3-4
# ::node	0.0.0	house	13-14
# ::node	0.1	office	2-3
# ::node	0.1.0	evening	17-18
# ::node	0.2	600	15-16
# ::root	0	promise-01
# ::edge	600	op1	promise-01	0.2	0	
# ::edge	house	poss	i	0.0.0	0.0	
# ::edge	office	poss	evening	0.1	0.1.0	
# ::edge	promise-01	ARG1	i	0	0.0	
# ::edge	promise-01	ARG2	office	0	0.1	
(p / promise-01 
      :ARG1 (i / i 
            :poss-of (h / house)) 
      :ARG2 (o / office 
            :poss (e / evening)) 
      :op-of 600)

# ::snt the aggressive french bank promised not to bid for 12 months as long as no one else did
# ::tok the aggressive french bank promised not to bid for 12 months as long as no one else did
# ::alignments 16-17|0.2.0 14-15|0.1 10-11|0.2.1.1+0.2.1 9-10|0.2.1.0 7-8|0.2 4-5|0 3-4|0.0 2-3|0.0.0.0.0+0.0.0.0+0.0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:59.014
# ::node	0	promise-01	4-5
# ::node	0.0	bank	3-4
# ::node	0.0.0	country	2-3
# ::node	0.0.0.0	name	2-3
# ::node	0.0.0.0.0	"France"	2-3
# ::node	0.0.1	aggressive	1-2
# ::node	0.1	-	14-15
# ::node	0.2	bid-01	7-8
# ::node	0.2.0	else	16-17
# ::node	0.2.1	temporal-quantity	10-11
# ::node	0.2.1.0	12	9-10
# ::node	0.2.1.1	month	10-11
# ::root	0	promise-01
# ::edge	bank	mod	aggressive	0.0	0.0.1	
# ::edge	bank	mod	country	0.0	0.0.0	
# ::edge	bid-01	ARG0	else	0.2	0.2.0	
# ::edge	bid-01	duration	temporal-quantity	0.2	0.2.1	
# ::edge	country	name	name	0.0.0	0.0.0.0	
# ::edge	name	op1	"France"	0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	ARG0	bank	0	0.0	
# ::edge	promise-01	ARG1	-	0	0.1	
# ::edge	promise-01	ARG2	bid-01	0	0.2	
# ::edge	temporal-quantity	quant	12	0.2.1	0.2.1.0	
# ::edge	temporal-quantity	unit	month	0.2.1	0.2.1.1	
(p / promise-01 
      :ARG0 (b2 / bank 
            :mod (c / country 
                  :name (n / name 
                        :op1 "France")) 
            :mod (a / aggressive)) 
      :ARG1 (- / -) 
      :ARG2 (b / bid-01 
            :ARG0 (e / else) 
            :duration (t / temporal-quantity 
                  :quant 12 
                  :unit (m / month))))

# ::snt then he kissed her and reproved her for being a daft little hen of a woman and they waltzed around the kitchen promising things that they would do when they were married like putting a skylight in the kitchen and getting a new range so that she did not have to dirty her fingers with the ashes and clinkers
# ::tok then he kissed her and reproved her for being a daft little hen of a woman and they waltzed around the kitchen promising things that they would do when they were married like putting a skylight in the kitchen and getting a new range so that she did not have to dirty her fingers with the ashes and clinkers
# ::alignments 57-58|0.2.0.2.0.0.0 53-54|0.2.0.2.0.0 51-52|0.2.0.2.0 46-47|0.2.0.2 44-45|0.2.0.1 43-44|0 42-43|0.1 39-40|0.2 33-34|0.2.0 31-32|0.2.0.0.0 29-30|0.2.0.0 25-26|0.2.0.0.0.0 23-24|0.0.1 22-23|0.0 19-20|0.0.2 17-18|0.0.2.1 16-17|0.0.2.0 15-16|0.0.2.0.1 11-12|0.2.0.3 4-5|0.0.2.0.0 1-2|0.0.0 0-1|0.0.2.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:59.563
# ::node	0	range-01	43-44
# ::node	0.0	promise-01	22-23
# ::node	0.0.0	he	1-2
# ::node	0.0.1	thing	23-24
# ::node	0.0.2	around	19-20
# ::node	0.0.2.0	and	16-17
# ::node	0.0.2.0.0	and	4-5
# ::node	0.0.2.0.1	woman	15-16
# ::node	0.0.2.0.2	then	0-1
# ::node	0.0.2.1	they	17-18
# ::node	0.1	new	42-43
# ::node	0.2	and	39-40
# ::node	0.2.0	put-01	33-34
# ::node	0.2.0.0	they	29-30
# ::node	0.2.0.0.0	marry-01	31-32
# ::node	0.2.0.0.0.0	they	25-26
# ::node	0.2.0.1	so	44-45
# ::node	0.2.0.2	she	46-47
# ::node	0.2.0.2.0	dirty	51-52
# ::node	0.2.0.2.0.0	finger	53-54
# ::node	0.2.0.2.0.0.0	and	57-58
# ::node	0.2.0.3	little	11-12
# ::root	0	range-01
# ::edge	and	op1	and	0.0.2.0	0.0.2.0.0	
# ::edge	and	op1	finger	0.2.0.2.0.0.0	0.2.0.2.0.0	
# ::edge	and	op1	put-01	0.2	0.2.0	
# ::edge	and	op2	range-01	0.2	0	
# ::edge	and	op2	woman	0.0.2.0	0.0.2.0.1	
# ::edge	and	op3	around	0.0.2.0	0.0.2	
# ::edge	and	time	then	0.0.2.0	0.0.2.0.2	
# ::edge	around	op1	they	0.0.2	0.0.2.1	
# ::edge	around	op2	promise-01	0.0.2	0.0	
# ::edge	dirty	ARG0	she	0.2.0.2.0	0.2.0.2	
# ::edge	dirty	part	finger	0.2.0.2.0	0.2.0.2.0.0	
# ::edge	little	op1	put-01	0.2.0.3	0.2.0	
# ::edge	marry-01	ARG0	they	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	marry-01	ARG1	they	0.2.0.0.0	0.2.0.0	
# ::edge	promise-01	ARG0	he	0.0	0.0.0	
# ::edge	promise-01	ARG1	thing	0.0	0.0.1	
# ::edge	put-01	ARG0	they	0.2.0	0.2.0.0	
# ::edge	put-01	ARG1	so	0.2.0	0.2.0.1	
# ::edge	put-01	ARG2	she	0.2.0	0.2.0.2	
# ::edge	range-01	ARG1	promise-01	0	0.0	
# ::edge	range-01	mod	new	0	0.1	
(r / range-01 
      :ARG1 (p2 / promise-01 
            :ARG0 (h / he) 
            :ARG1 (t3 / thing) 
            :op-of (a3 / around 
                  :op-of (a4 / and 
                        :op1 (a5 / and) 
                        :op2 (w / woman) 
                        :time (t5 / then)) 
                  :op1 (t4 / they))) 
      :mod (n / new) 
      :op-of (a2 / and 
            :op1 (p / put-01 
                  :ARG0 (t / they 
                        :ARG1-of (m / marry-01 
                              :ARG0 (t2 / they))) 
                  :ARG1 (s2 / so) 
                  :ARG2 (s / she 
                        :ARG0-of (d / dirty 
                              :part (f / finger 
                                    :op-of (a / and)))) 
                  :op-of (l / little))))

# ::snt boys promise about the weather holds true
# ::tok boys promise about the weather holds true
# ::alignments 6-7|0.1 5-6|0 4-5|0.0.1 1-2|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:59.585
# ::node	0	hold-01	5-6
# ::node	0.0	promise-01	1-2
# ::node	0.0.0	boy	0-1
# ::node	0.0.1	weather	4-5
# ::node	0.1	true	6-7
# ::root	0	hold-01
# ::edge	hold-01	ARG0	promise-01	0	0.0	
# ::edge	hold-01	ARG1	true	0	0.1	
# ::edge	promise-01	ARG0	boy	0.0	0.0.0	
# ::edge	promise-01	ARG1	weather	0.0	0.0.1	
(h / hold-01 
      :ARG0 (p / promise-01 
            :ARG0 (b / boy) 
            :ARG1 (w / weather)) 
      :ARG1 (t / true))

# ::snt he had promised us something new and had a coloured chart and a working model
# ::tok he had promised us something new and had a coloured chart and a working model
# ::alignments 14-15|0.0.0.0.0.0 13-14|0.0.0.0.0.0.0 11-12|0.0.0.0.0 10-11|0.0.0.0 6-7|0 5-6|0.0.1.0 4-5|0.0.1 2-3|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:58:59.617
# ::node	0	and	6-7
# ::node	0.0	promise-01	2-3
# ::node	0.0.0	he	0-1
# ::node	0.0.0.0	chart-01	10-11
# ::node	0.0.0.0.0	and	11-12
# ::node	0.0.0.0.0.0	model	14-15
# ::node	0.0.0.0.0.0.0	work-01	13-14
# ::node	0.0.1	something	4-5
# ::node	0.0.1.0	new	5-6
# ::root	0	and
# ::edge	and	op1	chart-01	0.0.0.0.0	0.0.0.0	
# ::edge	and	op1	promise-01	0	0.0	
# ::edge	and	op2	model	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	chart-01	ARG1	he	0.0.0.0	0.0.0	
# ::edge	promise-01	ARG0	he	0.0	0.0.0	
# ::edge	promise-01	ARG1	something	0.0	0.0.1	
# ::edge	something	mod	new	0.0.1	0.0.1.0	
# ::edge	work-01	ARG0	model	0.0.0.0.0.0.0	0.0.0.0.0.0	
(a2 / and 
      :op1 (p / promise-01 
            :ARG0 (h / he 
                  :ARG1-of (c / chart-01 
                        :op-of (a / and 
                              :op1 (m / model 
                                    :ARG0-of (w / work-01))))) 
            :ARG1 (s / something 
                  :mod (n / new))))

# ::snt for poles the programme of her party promised the equality of all national groups that live in russia assurance of their cultural development national schools and freedom in the use of native languages provincial selfgovernment that is to say autonomy
# ::tok for poles the programme of her party promised the equality of all national groups that live in russia assurance of their cultural development national schools and freedom in the use of native languages provincial selfgovernment that is to say autonomy
# ::alignments 39-40|0.0 38-39|0 33-34|0.1.2.0.1.0.0.0.0 32-33|0.1.0 31-32|0.1.2.0.1.0.0.0 29-30|0.1 26-27|0.1.1 25-26|0.1.2 24-25|0.1.2.0.0 23-24|0.1.2.0.0.1 22-23|0.1.2.0.0.0 21-22|0.1.2.0.0.0.0 18-19|0.1.2.0 15-16|0.1.2.0.1 13-14|0.1.2.0.1.0 12-13|0.1.2.0.1.0.1 11-12|0.1.2.0.1.0.2 9-10|0.1.2.0.1.0.0 7-8|0.1.2.0.1.0.0.1 6-7|0.1.2.0.1.0.0.1.0.0 3-4|0.1.2.0.1.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:00.312
# ::node	0	say-01	38-39
# ::node	0.0	autonomy	39-40
# ::node	0.1	use-01	29-30
# ::node	0.1.0	language	32-33
# ::node	0.1.1	free-41	26-27
# ::node	0.1.2	and	25-26
# ::node	0.1.2.0	assure-01	18-19
# ::node	0.1.2.0.0	school	24-25
# ::node	0.1.2.0.0.0	develop-02	22-23
# ::node	0.1.2.0.0.0.0	culture	21-22
# ::node	0.1.2.0.0.1	nation	23-24
# ::node	0.1.2.0.1	live-01	15-16
# ::node	0.1.2.0.1.0	group	13-14
# ::node	0.1.2.0.1.0.0	equal-01	9-10
# ::node	0.1.2.0.1.0.0.0	native	31-32
# ::node	0.1.2.0.1.0.0.0.0	province	33-34
# ::node	0.1.2.0.1.0.0.1	promise-01	7-8
# ::node	0.1.2.0.1.0.0.1.0	program	3-4
# ::node	0.1.2.0.1.0.0.1.0.0	party	6-7
# ::node	0.1.2.0.1.0.1	nation	12-13
# ::node	0.1.2.0.1.0.2	all	11-12
# ::root	0	say-01
# ::edge	and	op1	use-01	0.1.2	0.1	
# ::edge	assure-01	ARG1	school	0.1.2.0	0.1.2.0.0	
# ::edge	assure-01	ARG2	and	0.1.2.0	0.1.2	
# ::edge	develop-02	ARG0	culture	0.1.2.0.0.0	0.1.2.0.0.0.0	
# ::edge	develop-02	ARG1	school	0.1.2.0.0.0	0.1.2.0.0	
# ::edge	equal-01	ARG0	native	0.1.2.0.1.0.0	0.1.2.0.1.0.0.0	
# ::edge	equal-01	ARG1	group	0.1.2.0.1.0.0	0.1.2.0.1.0	
# ::edge	free-41	ARG1	use-01	0.1.1	0.1	
# ::edge	group	mod	nation	0.1.2.0.1.0	0.1.2.0.1.0.1	
# ::edge	group	quant	all	0.1.2.0.1.0	0.1.2.0.1.0.2	
# ::edge	live-01	ARG0	group	0.1.2.0.1	0.1.2.0.1.0	
# ::edge	live-01	manner	assure-01	0.1.2.0.1	0.1.2.0	
# ::edge	program	source	party	0.1.2.0.1.0.0.1.0	0.1.2.0.1.0.0.1.0.0	
# ::edge	promise-01	ARG1	program	0.1.2.0.1.0.0.1	0.1.2.0.1.0.0.1.0	
# ::edge	promise-01	ARG2	equal-01	0.1.2.0.1.0.0.1	0.1.2.0.1.0.0	
# ::edge	province	mod	native	0.1.2.0.1.0.0.0.0	0.1.2.0.1.0.0.0	
# ::edge	say-01	ARG1	autonomy	0	0.0	
# ::edge	say-01	ARG2	use-01	0	0.1	
# ::edge	school	mod	nation	0.1.2.0.0	0.1.2.0.0.1	
# ::edge	use-01	ARG1	language	0.1	0.1.0	
(s / say-01 
      :ARG1 (a / autonomy) 
      :ARG2 (u / use-01 
            :ARG1 (l / language) 
            :ARG1-of (f / free-41) 
            :op-of (a2 / and 
                  :ARG2-of (a3 / assure-01 
                        :ARG1 (s2 / school 
                              :ARG1-of (d / develop-02 
                                    :ARG0 (c / culture)) 
                              :mod (n2 / nation)) 
                        :manner-of (l2 / live-01 
                              :ARG0 (g / group 
                                    :ARG1-of (e / equal-01 
                                          :ARG0 (n / native 
                                                :mod-of (p / province)) 
                                          :ARG2-of (p2 / promise-01 
                                                :ARG1 (p4 / program 
                                                      :source (p3 / party)))) 
                                    :mod (n3 / nation) 
                                    :quant (a4 / all)))))))

# ::snt he drove away promising to telephone more frequently and to shut the gate to the lane
# ::tok he drove away promising to telephone more frequently and to shut the gate to the lane
# ::alignments 10-11|0.0.0.0.1.0 8-9|0.0.0.0.1 7-8|0.0.0.0.0 5-6|0.0.0.0 3-4|0.0.0 2-3|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:00.341
# ::node	0	drive-02	1-2
# ::node	0.0	he	0-1
# ::node	0.0.0	promise-01	3-4
# ::node	0.0.0.0	telephone-01	5-6
# ::node	0.0.0.0.0	frequent	7-8
# ::node	0.0.0.0.1	and	8-9
# ::node	0.0.0.0.1.0	shut-05	10-11
# ::node	0.1	away	2-3
# ::root	0	drive-02
# ::edge	and	op1	telephone-01	0.0.0.0.1	0.0.0.0	
# ::edge	and	op2	shut-05	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	drive-02	ARG0	he	0	0.0	
# ::edge	drive-02	ARG2	away	0	0.1	
# ::edge	promise-01	ARG0	he	0.0.0	0.0	
# ::edge	promise-01	ARG1	telephone-01	0.0.0	0.0.0.0	
# ::edge	telephone-01	location	frequent	0.0.0.0	0.0.0.0.0	
(d / drive-02 
      :ARG0 (h / he 
            :ARG0-of (p / promise-01 
                  :ARG1 (t / telephone-01 
                        :location (f / frequent) 
                        :op-of (a / and 
                              :op1 (s / shut-05))))) 
      :ARG2 (a2 / away))

# ::snt the lions face a moment of truth in their tour of australia in what promises to be a momentous third test at sydney football stadium tomorrow
# ::tok the lions face a moment of truth in their tour of australia in what promises to be a momentous third test at sydney football stadium tomorrow
# ::alignments 25-26|0.0.1 23-24|0.0.0.0 20-21|0.0 18-19|0 14-15|0.0.0 11-12|0.0.0.1.1.0.0.0+0.0.0.1.1.0.0+0.0.0.1.1.0 9-10|0.0.0.1.1 6-7|0.0.0.1.1.1 4-5|0.0.0.1.0 2-3|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:00.449
# ::node	0	momentous	18-19
# ::node	0.0	test-01	20-21
# ::node	0.0.0	promise-01	14-15
# ::node	0.0.0.0	football	23-24
# ::node	0.0.0.1	face-01	2-3
# ::node	0.0.0.1.0	moment	4-5
# ::node	0.0.0.1.1	tour-01	9-10
# ::node	0.0.0.1.1.0	country	11-12
# ::node	0.0.0.1.1.0.0	name	11-12
# ::node	0.0.0.1.1.0.0.0	"Australia"	11-12
# ::node	0.0.0.1.1.1	truth	6-7
# ::node	0.0.1	tomorrow	25-26
# ::root	0	momentous
(m / momentous 
      :mod-of (t2 / test-01 
            :ARG1-of (p / promise-01 
                  :ARG0 (f / football) 
                  :manner-of (f2 / face-01 
                        :ARG1 (m2 / moment) 
                        :ARG2 (t3 / tour-01 
                              :ARG1 (c / country 
                                    :name (n / name 
                                          :op1 "Australia")) 
                              :part (t4 / truth)))) 
            :time (t / tomorrow)))

# ::snt this was a curious outburst of imperial obstinacy the british incurred a vast debt and many casualties for the sake of a country which they had promised to leave when the war was over
# ::tok this was a curious outburst of imperial obstinacy the british incurred a vast debt and many casualties for the sake of a country which they had promised to leave when the war was over
# ::alignments 31-32|0.1.2.0.0 28-29|0.1 26-27|0 24-25|0.1.0 22-23|0.1.1 19-20|0.1.1.0 16-17|0.1.2.0.1.0 15-16|0.1.2.0.1.0.0 14-15|0.1.2 13-14|0.1.2.0.2 12-13|0.1.2.0.2.0 10-11|0.1.2.0 3-4|0.1.2.0.1 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:00.837
# ::node	0	promise-01	26-27
# ::node	0.0	this	0-1
# ::node	0.1	leave-01	28-29
# ::node	0.1.0	they	24-25
# ::node	0.1.1	country	22-23
# ::node	0.1.1.0	sake	19-20
# ::node	0.1.2	and	14-15
# ::node	0.1.2.0	incur-01	10-11
# ::node	0.1.2.0.0	war	31-32
# ::node	0.1.2.0.1	curious-41	3-4
# ::node	0.1.2.0.1.0	casualty	16-17
# ::node	0.1.2.0.1.0.0	many	15-16
# ::node	0.1.2.0.2	debt	13-14
# ::node	0.1.2.0.2.0	vast	12-13
# ::root	0	promise-01
# ::edge	and	op1	leave-01	0.1.2	0.1	
# ::edge	casualty	quant	many	0.1.2.0.1.0	0.1.2.0.1.0.0	
# ::edge	curious-41	ARG0	casualty	0.1.2.0.1	0.1.2.0.1.0	
# ::edge	curious-41	ARG1	incur-01	0.1.2.0.1	0.1.2.0	
# ::edge	debt	mod	vast	0.1.2.0.2	0.1.2.0.2.0	
# ::edge	incur-01	ARG0	war	0.1.2.0	0.1.2.0.0	
# ::edge	incur-01	ARG1	and	0.1.2.0	0.1.2	
# ::edge	incur-01	ARG2	debt	0.1.2.0	0.1.2.0.2	
# ::edge	leave-01	ARG0	they	0.1	0.1.0	
# ::edge	leave-01	ARG1	country	0.1	0.1.1	
# ::edge	promise-01	ARG0	this	0	0.0	
# ::edge	promise-01	ARG2	leave-01	0	0.1	
# ::edge	sake	poss	country	0.1.1.0	0.1.1	
(p / promise-01 
      :ARG0 (t2 / this) 
      :ARG2 (l / leave-01 
            :ARG0 (t / they) 
            :ARG1 (c / country 
                  :poss-of (s / sake)) 
            :op-of (a / and 
                  :ARG1-of (i / incur-01 
                        :ARG0 (w / war) 
                        :ARG1-of (c3 / curious-41 
                              :ARG0 (c2 / casualty 
                                    :quant (m / many))) 
                        :ARG2 (d / debt 
                              :mod (v / vast))))))

# ::snt while in china mr maude promised british support for an early end to the economic sanctions imposed after last years tiananmen square massacre
# ::tok while in china mr maude promised british support for an early end to the economic sanctions imposed after last years tiananmen square massacre
# ::alignments 22-23|0.0 21-22|0.0.1 19-20|0.1.0.0.0+0.1.0.0 18-19|0.1.0.0.0.0 17-18|0.1.0.1.0 16-17|0.1.0.1 15-16|0.1.0 14-15|0.1.0.2 10-11|0.2 7-8|0.1 5-6|0 2-3|0.0.0.0.0+0.0.0.0+0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:01.007
# ::node	0	promise-01	5-6
# ::node	0.0	massacre-01	22-23
# ::node	0.0.0	country	2-3
# ::node	0.0.0.0	name	2-3
# ::node	0.0.0.0.0	"China"	2-3
# ::node	0.0.1	square	21-22
# ::node	0.1	support-01	7-8
# ::node	0.1.0	sanction-02	15-16
# ::node	0.1.0.0	temporal-quantity	19-20
# ::node	0.1.0.0.0	year	19-20
# ::node	0.1.0.0.0.0	last	18-19
# ::node	0.1.0.1	impose-01	16-17
# ::node	0.1.0.1.0	after	17-18
# ::node	0.1.0.2	economy	14-15
# ::node	0.2	early	10-11
# ::root	0	promise-01
# ::edge	country	name	name	0.0.0	0.0.0.0	
# ::edge	impose-01	ARG1	sanction-02	0.1.0.1	0.1.0	
# ::edge	impose-01	time	after	0.1.0.1	0.1.0.1.0	
# ::edge	massacre-01	ARG0	country	0.0	0.0.0	
# ::edge	massacre-01	mod	square	0.0	0.0.1	
# ::edge	name	op1	"China"	0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	ARG0	massacre-01	0	0.0	
# ::edge	promise-01	ARG1	support-01	0	0.1	
# ::edge	promise-01	time	early	0	0.2	
# ::edge	sanction-02	ARG1	temporal-quantity	0.1.0	0.1.0.0	
# ::edge	sanction-02	mod	economy	0.1.0	0.1.0.2	
# ::edge	support-01	ARG1	sanction-02	0.1	0.1.0	
# ::edge	temporal-quantity	unit	year	0.1.0.0	0.1.0.0.0	
# ::edge	year	mod	last	0.1.0.0.0	0.1.0.0.0.0	
(p / promise-01 
      :ARG0 (m / massacre-01 
            :ARG0 (c / country 
                  :name (n / name 
                        :op1 "China")) 
            :mod (s / square)) 
      :ARG1 (s3 / support-01 
            :ARG1 (s2 / sanction-02 
                  :ARG1 (t / temporal-quantity 
                        :unit (y / year 
                              :mod (l / last))) 
                  :ARG1-of (i / impose-01 
                        :time (a / after)) 
                  :mod (e / economy))) 
      :time (e2 / early))

# ::snt unlike religion science promised the final authority the shape of things to come
# ::tok unlike religion science promised the final authority the shape of things to come
# ::alignments 10-11|0.0 8-9|0 6-7|0.1.1 5-6|0.1.1.0 3-4|0.1 2-3|0.1.0 1-2|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:01.071
# ::node	0	shape-01	8-9
# ::node	0.0	thing	10-11
# ::node	0.1	promise-01	3-4
# ::node	0.1.0	science	2-3
# ::node	0.1.0.0	religion	1-2
# ::node	0.1.1	authority	6-7
# ::node	0.1.1.0	final	5-6
# ::root	0	shape-01
# ::edge	authority	mod	final	0.1.1	0.1.1.0	
# ::edge	promise-01	ARG0	science	0.1	0.1.0	
# ::edge	promise-01	ARG1	authority	0.1	0.1.1	
# ::edge	promise-01	ARG2	shape-01	0.1	0	
# ::edge	science	mod	religion	0.1.0	0.1.0.0	
# ::edge	shape-01	ARG1	thing	0	0.0	
(s / shape-01 
      :ARG1 (t / thing) 
      :ARG2-of (p / promise-01 
            :ARG0 (s2 / science 
                  :mod (r / religion)) 
            :ARG1 (a / authority 
                  :mod (f / final))))

# ::snt it promises to be a great night with supporting open races to make it one of the nights to remember at the vastly popular cowley base
# ::tok it promises to be a great night with supporting open races to make it one of the nights to remember at the vastly popular cowley base
# ::alignments 25-26|0.0.0.1 23-24|0.0.0.1.0 22-23|0.0.0.1.0.0 19-20|0.0.0 17-18|0.0.0.0 13-14|0.1.0.0 10-11|0.1.0.1 8-9|0.1.0 6-7|0.1 5-6|0.1.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:01.177
# ::node	0	promise-01	1-2
# ::node	0.0	it	0-1
# ::node	0.0.0	remember-01	19-20
# ::node	0.0.0.0	night	17-18
# ::node	0.0.0.1	base	25-26
# ::node	0.0.0.1.0	popular-41	23-24
# ::node	0.0.0.1.0.0	vast	22-23
# ::node	0.1	night	6-7
# ::node	0.1.0	support-01	8-9
# ::node	0.1.0.0	it	13-14
# ::node	0.1.0.1	race	10-11
# ::node	0.1.1	great	5-6
# ::root	0	promise-01
# ::edge	night	mod	great	0.1	0.1.1	
# ::edge	night	mod	support-01	0.1	0.1.0	
# ::edge	popular-41	ARG1	base	0.0.0.1.0	0.0.0.1	
# ::edge	popular-41	mod	vast	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	promise-01	ARG0	it	0	0.0	
# ::edge	promise-01	ARG1	night	0	0.1	
# ::edge	remember-01	ARG0	it	0.0.0	0.0	
# ::edge	remember-01	ARG1	night	0.0.0	0.0.0.0	
# ::edge	remember-01	time	base	0.0.0	0.0.0.1	
# ::edge	support-01	ARG0	it	0.1.0	0.1.0.0	
# ::edge	support-01	ARG1	race	0.1.0	0.1.0.1	
(p2 / promise-01 
      :ARG0 (i2 / it 
            :ARG0-of (r / remember-01 
                  :ARG1 (n / night) 
                  :time (b / base 
                        :ARG1-of (p / popular-41 
                              :mod (v / vast))))) 
      :ARG1 (n2 / night 
            :mod (s / support-01 
                  :ARG0 (i / it) 
                  :ARG1 (r2 / race)) 
            :mod (g / great)))

# ::snt in the early days of his involvement the new labour government had promised to squeeze the rich until the pips squeak
# ::tok in the early days of his involvement the new labour government had promised to squeeze the rich until the pips squeak
# ::alignments 17-18|0.1.0 16-17|0.1.0.0 14-15|0.1 12-13|0 9-10|0.0 8-9|0.2.0.0.0 6-7|0.2.0.0 3-4|0.2.0.1+0.2.0 2-3|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:01.221
# ::node	0	promise-01	12-13
# ::node	0.0	labour	9-10
# ::node	0.1	squeeze-01	14-15
# ::node	0.1.0	until	17-18
# ::node	0.1.0.0	rich	16-17
# ::node	0.2	early	2-3
# ::node	0.2.0	temporal-quantity	3-4
# ::node	0.2.0.0	involve-01	6-7
# ::node	0.2.0.0.0	new	8-9
# ::node	0.2.0.1	day	3-4
# ::root	0	promise-01
# ::edge	early	op1	temporal-quantity	0.2	0.2.0	
# ::edge	involve-01	ARG0	new	0.2.0.0	0.2.0.0.0	
# ::edge	involve-01	ARG1	temporal-quantity	0.2.0.0	0.2.0	
# ::edge	promise-01	ARG1	labour	0	0.0	
# ::edge	promise-01	ARG2	squeeze-01	0	0.1	
# ::edge	promise-01	time	early	0	0.2	
# ::edge	rich	time	until	0.1.0.0	0.1.0	
# ::edge	squeeze-01	ARG1	until	0.1	0.1.0	
# ::edge	temporal-quantity	unit	day	0.2.0	0.2.0.1	
(p / promise-01 
      :ARG1 (l / labour) 
      :ARG2 (s / squeeze-01 
            :ARG1 (u / until 
                  :time-of (r / rich))) 
      :time (e / early 
            :op1 (t / temporal-quantity 
                  :ARG1-of (i / involve-01 
                        :ARG0 (n / new)) 
                  :unit (d / day))))

# ::snt the organizer gerald barry promised fun fantasy and colour as a tonic to the nation
# ::tok the organizer gerald barry promised fun fantasy and colour as a tonic to the nation
# ::alignments 14-15|0.0.2 8-9|0.2 7-8|0 6-7|0.1 5-6|0.0.1 4-5|0.0 2-4|0.0.0.0.0+0.0.0.0.1+0.0.0.0+0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:01.414
# ::node	0	and	7-8
# ::node	0.0	promise-01	4-5
# ::node	0.0.0	person	2-4
# ::node	0.0.0.0	name	2-4
# ::node	0.0.0.0.0	"barry"	2-4
# ::node	0.0.0.0.1	"gerald"	2-4
# ::node	0.0.1	fun	5-6
# ::node	0.0.2	nation	14-15
# ::node	0.1	fantasy	6-7
# ::node	0.2	colour	8-9
# ::root	0	and
# ::edge	and	op1	fantasy	0	0.1	
# ::edge	and	op2	colour	0	0.2	
# ::edge	name	op1	"barry"	0.0.0.0	0.0.0.0.0	
# ::edge	name	op2	"gerald"	0.0.0.0	0.0.0.0.1	
# ::edge	person	name	name	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG0	person	0.0	0.0.0	
# ::edge	promise-01	ARG1	fun	0.0	0.0.1	
# ::edge	promise-01	ARG2	and	0.0	0	
# ::edge	promise-01	beneficiary	nation	0.0	0.0.2	
(a / and 
      :ARG2-of (p / promise-01 
            :ARG0 (p2 / person 
                  :name (n2 / name 
                        :op1 "barry" 
                        :op2 "gerald")) 
            :ARG1 (f2 / fun) 
            :beneficiary (n / nation)) 
      :op1 (f / fantasy) 
      :op2 (c / colour))

# ::snt cagliari bars are to be closed to the throngs of enthusiasts it is promised on match days
# ::tok cagliari bars are to be closed to the throngs of enthusiasts it is promised on match days
# ::alignments 16-17|0.1.0.0.0.0+0.1.0.0.0 15-16|0.1.0.0 13-14|0 11-12|0.0 5-6|0.1.0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:01.443
# ::node	0	promise-01	13-14
# ::node	0.0	it	11-12
# ::node	0.1	bar-01	1-2
# ::node	0.1.0	close-01	5-6
# ::node	0.1.0.0	match-01	15-16
# ::node	0.1.0.0.0	temporal-quantity	16-17
# ::node	0.1.0.0.0.0	day	16-17
# ::root	0	promise-01
# ::edge	bar-01	ARG1	promise-01	0.1	0	
# ::edge	close-01	ARG1	bar-01	0.1.0	0.1	
# ::edge	match-01	ARG0	temporal-quantity	0.1.0.0	0.1.0.0.0	
# ::edge	match-01	ARG1	close-01	0.1.0.0	0.1.0	
# ::edge	promise-01	ARG1	it	0	0.0	
# ::edge	temporal-quantity	unit	day	0.1.0.0.0	0.1.0.0.0.0	
(p / promise-01 
      :ARG1 (i / it) 
      :ARG1-of (b / bar-01 
            :ARG1-of (c / close-01 
                  :ARG1-of (m / match-01 
                        :ARG0 (t / temporal-quantity 
                              :unit (d / day))))))

# ::snt this way the funds will be at the governments disposal for investment while clients mr bekesi promised will benefit from fair rates
# ::tok this way the funds will be at the governments disposal for investment while clients mr bekesi promised will benefit from fair rates
# ::alignments 21-22|0.0.0.1.0 20-21|0.0.0.1.0.0 18-19|0.0.0.1 16-17|0.0.0 13-14|0 11-12|0.0 8-9|0.0.0.1.1+0.0.0.1.1.0 3-4|0.0.0.0 1-2|0.0.0.0.0 0-1|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:01.602
# ::node	0	client	13-14
# ::node	0.0	invest-01	11-12
# ::node	0.0.0	promise-01	16-17
# ::node	0.0.0.0	fund	3-4
# ::node	0.0.0.0.0	way	1-2
# ::node	0.0.0.0.0.0	this	0-1
# ::node	0.0.0.1	benefit-01	18-19
# ::node	0.0.0.1.0	rate	21-22
# ::node	0.0.0.1.0.0	fair	20-21
# ::node	0.0.0.1.1	govern-01	8-9
# ::node	0.0.0.1.1.0	government-organization	8-9
# ::root	0	client
(c / client 
      :ARG1-of (i / invest-01 
            :ARG2-of (p / promise-01 
                  :ARG0 (f2 / fund 
                        :name-of (w / way 
                              :mod (t / this))) 
                  :ARG1 (b / benefit-01 
                        :ARG0 (r / rate 
                              :mod (f / fair)) 
                        :ARG1-of (g2 / govern-01 
                              :ARG0 (g / government-organization))))))

# ::snt there are also rumours that she may take a role in a film directed by david lynchs daughter jennifer which promises to make blue velvet look positively staid
# ::tok there are also rumours that she may take a role in a film directed by david lynchs daughter jennifer which promises to make blue velvet look positively staid
# ::alignments 26-27|0.0.0.0.1.0 23-24|0 20-21|0.0.0.0.1 17-18|0.0.1+0.0 13-14|0.0.0.0 12-13|0.0.0 9-10|0.0.0.1 6-7|0.0.2.1+0.0.2 5-6|0.0.2.0 2-3|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:01.764
# ::node	0	blue	23-24
# ::node	0.0	have-rel-role-91	17-18
# ::node	0.0.0	film	12-13
# ::node	0.0.0.0	direct-01	13-14
# ::node	0.0.0.0.0	also	2-3
# ::node	0.0.0.0.1	promise-01	20-21
# ::node	0.0.0.0.1.0	positive	26-27
# ::node	0.0.0.1	role	9-10
# ::node	0.0.1	daughter	17-18
# ::node	0.0.2	date-entity	6-7
# ::node	0.0.2.0	she	5-6
# ::node	0.0.2.1	5	6-7
# ::root	0	blue
(b / blue 
      :ARG1-of (h / have-rel-role-91 
            :ARG0 (f / film 
                  :ARG1-of (d2 / direct-01 
                        :ARG0 (a / also) 
                        :ARG0-of (p2 / promise-01 
                              :op-of (p / positive))) 
                  :location-of (r / role)) 
            :ARG2 (d / daughter) 
            :op-of (d3 / date-entity 
                  :ARG2 (s / she) 
                  :month 5)))

# ::snt mr wilson said my client had promised himself a compact disc player and the temptation became too great
# ::tok mr wilson said my client had promised himself a compact disc player and the temptation became too great
# ::alignments 17-18|0.0.1 16-17|0.0.1.1 15-16|0.0.1.0 12-13|0.0 9-10|0.1 6-7|0.0.0 4-5|0.0.0.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:01.794
# ::node	0	say-01	2-3
# ::node	0.0	and	12-13
# ::node	0.0.0	promise-01	6-7
# ::node	0.0.0.0	client	4-5
# ::node	0.0.1	great	17-18
# ::node	0.0.1.0	become-01	15-16
# ::node	0.0.1.1	too	16-17
# ::node	0.1	compact-01	9-10
# ::root	0	say-01
# ::edge	and	op1	promise-01	0.0	0.0.0	
# ::edge	and	op2	great	0.0	0.0.1	
# ::edge	become-01	ARG2	great	0.0.1.0	0.0.1	
# ::edge	compact-01	ARG1	say-01	0.1	0	
# ::edge	great	degree	too	0.0.1	0.0.1.1	
# ::edge	promise-01	ARG0	client	0.0.0	0.0.0.0	
# ::edge	say-01	ARG1	and	0	0.0	
(s / say-01 
      :ARG1 (a / and 
            :op1 (p / promise-01 
                  :ARG0 (c2 / client)) 
            :op2 (g / great 
                  :ARG2-of (b / become-01) 
                  :degree (t / too))) 
      :ARG1-of (c / compact-01))

# ::snt on our first cautious visit i had drawn a stick which according to the book of numbers promised me a great journey and much success
# ::tok on our first cautious visit i had drawn a stick which according to the book of numbers promised me a great journey and much success
# ::alignments 24-25|0 23-24|0.2 22-23|0.1 21-22|0.1.0.1 20-21|0.1.0.1.1 17-18|0.1.0 16-17|0.1.0.0 14-15|0.1.0.1.0 9-10|0.0 5-6|0.0.1 4-5|0.0.0 3-4|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:01.964
# ::node	0	succeed-01	24-25
# ::node	0.0	stick-01	9-10
# ::node	0.0.0	visit-01	4-5
# ::node	0.0.0.0	cautious	3-4
# ::node	0.0.1	i	5-6
# ::node	0.1	and	22-23
# ::node	0.1.0	promise-01	17-18
# ::node	0.1.0.0	number	16-17
# ::node	0.1.0.1	journey-01	21-22
# ::node	0.1.0.1.0	book	14-15
# ::node	0.1.0.1.1	great	20-21
# ::node	0.2	much	23-24
# ::root	0	succeed-01
# ::edge	and	op1	succeed-01	0.1	0	
# ::edge	journey-01	ARG1	book	0.1.0.1	0.1.0.1.0	
# ::edge	journey-01	mod	great	0.1.0.1	0.1.0.1.1	
# ::edge	promise-01	ARG0	number	0.1.0	0.1.0.0	
# ::edge	promise-01	ARG1	and	0.1.0	0.1	
# ::edge	promise-01	ARG2	journey-01	0.1.0	0.1.0.1	
# ::edge	stick-01	ARG1	i	0.0	0.0.1	
# ::edge	succeed-01	ARG1	stick-01	0	0.0	
# ::edge	succeed-01	quant	much	0	0.2	
# ::edge	visit-01	ARG0	stick-01	0.0.0	0.0	
# ::edge	visit-01	manner	cautious	0.0.0	0.0.0.0	
(s / succeed-01 
      :ARG1 (s2 / stick-01 
            :ARG0-of (v / visit-01 
                  :manner (c / cautious)) 
            :ARG1 (i / i)) 
      :op-of (a / and 
            :ARG1-of (p / promise-01 
                  :ARG0 (n / number) 
                  :ARG2 (j / journey-01 
                        :ARG1 (b / book) 
                        :mod (g / great)))) 
      :quant (m / much))

# ::snt president guillermo endara who was sworn in on thursday promised a government of reconciliation and reconstruction
# ::tok president guillermo endara who was sworn in on thursday promised a government of reconciliation and reconstruction
# ::alignments 15-16|0.1.1 14-15|0.1 13-14|0.1.0 9-10|0 5-6|0.0.1 1-3|0.0.2.0+0.0.2.1+0.0.2+0.0 0-1|0.0.0.0+0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:02.010
# ::node	0	promise-01	9-10
# ::node	0.0	person	1-3
# ::node	0.0.0	have-org-role-91	0-1
# ::node	0.0.0.0	president	0-1
# ::node	0.0.1	swear-01	5-6
# ::node	0.0.2	name	1-3
# ::node	0.0.2.0	"endara"	1-3
# ::node	0.0.2.1	"guillermo"	1-3
# ::node	0.1	and	14-15
# ::node	0.1.0	reconcile-01	13-14
# ::node	0.1.1	reconstruct-01	15-16
# ::root	0	promise-01
# ::edge	and	op1	reconcile-01	0.1	0.1.0	
# ::edge	and	op2	reconstruct-01	0.1	0.1.1	
# ::edge	have-org-role-91	ARG0	person	0.0.0	0.0	
# ::edge	have-org-role-91	ARG2	president	0.0.0	0.0.0.0	
# ::edge	name	op1	"endara"	0.0.2	0.0.2.0	
# ::edge	name	op2	"guillermo"	0.0.2	0.0.2.1	
# ::edge	person	name	name	0.0	0.0.2	
# ::edge	promise-01	ARG0	person	0	0.0	
# ::edge	promise-01	ARG1	and	0	0.1	
# ::edge	swear-01	ARG1	person	0.0.1	0.0	
(p / promise-01 
      :ARG0 (p2 / person 
            :ARG0-of (h / have-org-role-91 
                  :ARG2 (p3 / president)) 
            :ARG1-of (s / swear-01) 
            :name (n / name 
                  :op1 "endara" 
                  :op2 "guillermo")) 
      :ARG1 (a / and 
            :op1 (r2 / reconcile-01) 
            :op2 (r / reconstruct-01)))

# ::snt it will only take a few moments i promise you
# ::tok it will only take a few moments i promise you
# ::alignments 9-10|0.2.0.0 8-9|0.2.0 7-8|0.2 6-7|0 5-6|0.3 2-3|0.0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:02.052
# ::node	0	moment	6-7
# ::node	0.0	only	2-3
# ::node	0.1	it	0-1
# ::node	0.2	i	7-8
# ::node	0.2.0	promise-01	8-9
# ::node	0.2.0.0	you	9-10
# ::node	0.3	few	5-6
# ::root	0	moment
# ::edge	it	part	moment	0.1	0	
# ::edge	moment	mod	only	0	0.0	
# ::edge	moment	poss	i	0	0.2	
# ::edge	moment	quant	few	0	0.3	
# ::edge	promise-01	ARG0	i	0.2.0	0.2	
# ::edge	promise-01	ARG1	you	0.2.0	0.2.0.0	
(m / moment 
      :mod (o / only) 
      :part-of (i2 / it) 
      :poss (i / i 
            :ARG0-of (p / promise-01 
                  :ARG1 (y / you))) 
      :quant (f / few))

# ::snt he promises to make her the editor but only if she performs six tasks for him each involving a different form of sexual humiliation
# ::tok he promises to make her the editor but only if she performs six tasks for him each involving a different form of sexual humiliation
# ::alignments 23-24|0.1.1.1.1 22-23|0.1.1.1.1.1 20-21|0.1.1.1 19-20|0.1.1.1.0 17-18|0.1.1 16-17|0.1.0 13-14|0.1 12-13|0.1.2 10-11|0.1.1.0 8-9|0.1.1.1.1.0 7-8|0 6-7|0.0.1 1-2|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:02.294
# ::node	0	contrast-01	7-8
# ::node	0.0	promise-01	1-2
# ::node	0.0.0	he	0-1
# ::node	0.0.1	editor	6-7
# ::node	0.1	task-01	13-14
# ::node	0.1.0	each	16-17
# ::node	0.1.1	involve-01	17-18
# ::node	0.1.1.0	she	10-11
# ::node	0.1.1.1	form	20-21
# ::node	0.1.1.1.0	differ-02	19-20
# ::node	0.1.1.1.1	humiliate-01	23-24
# ::node	0.1.1.1.1.0	only	8-9
# ::node	0.1.1.1.1.1	sexual	22-23
# ::node	0.1.2	6	12-13
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	promise-01	0	0.0	
# ::edge	contrast-01	ARG2	task-01	0	0.1	
# ::edge	differ-02	ARG1	form	0.1.1.1.0	0.1.1.1	
# ::edge	form	mod	humiliate-01	0.1.1.1	0.1.1.1.1	
# ::edge	humiliate-01	ARG1	only	0.1.1.1.1	0.1.1.1.1.0	
# ::edge	humiliate-01	mod	sexual	0.1.1.1.1	0.1.1.1.1.1	
# ::edge	involve-01	ARG0	she	0.1.1	0.1.1.0	
# ::edge	involve-01	ARG1	form	0.1.1	0.1.1.1	
# ::edge	promise-01	ARG0	he	0.0	0.0.0	
# ::edge	promise-01	ARG1	editor	0.0	0.0.1	
# ::edge	task-01	ARG1	each	0.1	0.1.0	
# ::edge	task-01	ARG2	involve-01	0.1	0.1.1	
# ::edge	task-01	quant	6	0.1	0.1.2	
(c / contrast-01 
      :ARG1 (p / promise-01 
            :ARG0 (h2 / he) 
            :ARG1 (e2 / editor)) 
      :ARG2 (t / task-01 
            :ARG1 (e / each) 
            :ARG2 (i / involve-01 
                  :ARG0 (s2 / she) 
                  :ARG1 (f / form 
                        :ARG1-of (d / differ-02) 
                        :mod (h / humiliate-01 
                              :ARG1 (o / only) 
                              :mod (s / sexual)))) 
            :quant 6))

# ::snt   i promise
# ::tok i promise
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:02.294
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt what is happening in the us combined with parallel developments in japan promises to give the securities business worldwide an almighty shakeup by letting commercial banks operate freely in major markets from which they are currently banned
# ::tok what is happening in the us combined with parallel developments in japan promises to give the securities business worldwide an almighty shakeup by letting commercial banks operate freely in major markets from which they are currently banned
# ::alignments 36-37|0.0.0.1.0 35-36|0.0.0.1.0.0 33-34|0.0.0.1 30-31|0.0.0.1.1 29-30|0.0.0.1.1.0 27-28|0.1.0.0.1 26-27|0.1.0.0 25-26|0.1.0.0.0 24-25|0.1.0.0.0.0 23-24|0.1.0 18-19|0.0.0.0.0 17-18|0.0.0.0 14-15|0.0.0 12-13|0.0 9-10|0 6-7|0.1 2-3|0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:02.485
# ::node	0	develop-01	9-10
# ::node	0.0	promise-01	12-13
# ::node	0.0.0	give-01	14-15
# ::node	0.0.0.0	business	17-18
# ::node	0.0.0.0.0	worldwide	18-19
# ::node	0.0.0.1	they	33-34
# ::node	0.0.0.1.0	ban-01	36-37
# ::node	0.0.0.1.0.0	current	35-36
# ::node	0.0.0.1.1	market	30-31
# ::node	0.0.0.1.1.0	major	29-30
# ::node	0.1	combine-01	6-7
# ::node	0.1.0	let-01	23-24
# ::node	0.1.0.0	operate-01	26-27
# ::node	0.1.0.0.0	bank	25-26
# ::node	0.1.0.0.0.0	commerce	24-25
# ::node	0.1.0.0.1	free	27-28
# ::node	0.1.0.1	happen-01	2-3
# ::root	0	develop-01
# ::edge	ban-01	ARG1	they	0.0.0.1.0	0.0.0.1	
# ::edge	ban-01	time	current	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	bank	mod	commerce	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	business	location	worldwide	0.0.0.0	0.0.0.0.0	
# ::edge	combine-01	ARG1	let-01	0.1	0.1.0	
# ::edge	combine-01	ARG2	develop-01	0.1	0	
# ::edge	develop-01	ARG1	promise-01	0	0.0	
# ::edge	give-01	ARG1	business	0.0.0	0.0.0.0	
# ::edge	give-01	ARG2	they	0.0.0	0.0.0.1	
# ::edge	happen-01	ARG1	let-01	0.1.0.1	0.1.0	
# ::edge	let-01	ARG1	operate-01	0.1.0	0.1.0.0	
# ::edge	market	example	they	0.0.0.1.1	0.0.0.1	
# ::edge	market	mod	major	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	operate-01	ARG0	bank	0.1.0.0	0.1.0.0.0	
# ::edge	operate-01	manner	free	0.1.0.0	0.1.0.0.1	
# ::edge	promise-01	ARG1	give-01	0.0	0.0.0	
(d / develop-01 
      :ARG1 (p / promise-01 
            :ARG1 (g / give-01 
                  :ARG1 (b3 / business 
                        :location (w / worldwide)) 
                  :ARG2 (t / they 
                        :ARG1-of (b / ban-01 
                              :time (c / current)) 
                        :example-of (m / market 
                              :mod (m2 / major))))) 
      :ARG2-of (c3 / combine-01 
            :ARG1 (l / let-01 
                  :ARG1 (o / operate-01 
                        :ARG0 (b2 / bank 
                              :mod (c2 / commerce)) 
                        :manner (f / free)) 
                  :ARG1-of (h / happen-01))))

# ::snt there was a time just after britain and china signed in 1984 their joint declaration on the question of hong kong when the colony looked forward with high hopes to the 50 or more years of capitalist autonomy which both parentgovernments had promised would follow its reversion to chinese sovereignty in 1997
# ::tok there was a time just after britain and china signed in 1984 their joint declaration on the question of hong kong when the colony looked forward with high hopes to the 50 or more years of capitalist autonomy which both parentgovernments had promised would follow its reversion to chinese sovereignty in 1997
# ::alignments 51-52|0.0.0.0.2.0+0.0.0.0.2 49-50|0.0.0.0.1 48-49|0.0.0.0.0.0.0+0.0.0.0.0.0+0.0.0.0.0+0.0.0.0 44-45|0.0.0 42-43|0.0.0.1 39-40|0.0.1.1.0.0.0.0 37-38|0.0.1.1.0.1.0 36-37|0.0.1.1.0.1 34-35|0.0.3.0.1+0.0.3.0 32-33|0.0.3 31-32|0.0.3.0.0 28-29|0 27-28|0.2 25-26|0.1.1 24-25|0.1 23-24|0.1.0 19-21|0.0.1.1.0.0.1.0+0.0.1.1.0.0.1.1+0.0.1.1.0.0.1+0.0.1.1.0.0 17-18|0.0.1.1.0.0.0 14-15|0.0.1.1.0 13-14|0.0.1.1.0.2 11-12|0.0.1.1.2.0+0.0.1.1.2 9-10|0.0.1.1 8-9|0.0.1.1.1.0.0+0.0.1.1.1.0+0.0.1.1.1 7-8|0.0 6-7|0.0.2.0.0+0.0.2.0+0.0.2 5-6|0.0.1 4-5|0.0.1.0 3-4|0.0.1.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:03.650
# ::node	0	hope-01	28-29
# ::node	0.0	and	7-8
# ::node	0.0.0	follow-02	44-45
# ::node	0.0.0.0	person	48-49
# ::node	0.0.0.0.0	country	48-49
# ::node	0.0.0.0.0.0	name	48-49
# ::node	0.0.0.0.0.0.0	"China"	48-49
# ::node	0.0.0.0.1	sovereignty	49-50
# ::node	0.0.0.0.2	date-entity	51-52
# ::node	0.0.0.0.2.0	1997	51-52
# ::node	0.0.0.1	promise-01	42-43
# ::node	0.0.1	after	5-6
# ::node	0.0.1.0	just	4-5
# ::node	0.0.1.1	sign-02	9-10
# ::node	0.0.1.1.0	declare-02	14-15
# ::node	0.0.1.1.0.0	country	19-21
# ::node	0.0.1.1.0.0.0	question-01	17-18
# ::node	0.0.1.1.0.0.0.0	both	39-40
# ::node	0.0.1.1.0.0.1	name	19-21
# ::node	0.0.1.1.0.0.1.0	"kong"	19-21
# ::node	0.0.1.1.0.0.1.1	"hong"	19-21
# ::node	0.0.1.1.0.1	capitalist	36-37
# ::node	0.0.1.1.0.1.0	autonomy	37-38
# ::node	0.0.1.1.0.2	joint	13-14
# ::node	0.0.1.1.1	country	8-9
# ::node	0.0.1.1.1.0	name	8-9
# ::node	0.0.1.1.1.0.0	"China"	8-9
# ::node	0.0.1.1.2	date-entity	11-12
# ::node	0.0.1.1.2.0	1984	11-12
# ::node	0.0.1.2	time	3-4
# ::node	0.0.2	country	6-7
# ::node	0.0.2.0	name	6-7
# ::node	0.0.2.0.0	"Britain"	6-7
# ::node	0.0.3	or	32-33
# ::node	0.0.3.0	temporal-quantity	34-35
# ::node	0.0.3.0.0	50	31-32
# ::node	0.0.3.0.1	year	34-35
# ::node	0.1	look-01	24-25
# ::node	0.1.0	colony	23-24
# ::node	0.1.1	forward	25-26
# ::node	0.2	high	27-28
# ::root	0	hope-01
# ::edge	after	mod	just	0.0.1	0.0.1.0	
# ::edge	after	op1	and	0.0.1	0.0	
# ::edge	after	op2	sign-02	0.0.1	0.0.1.1	
# ::edge	and	op1	country	0.0	0.0.2	
# ::edge	and	op2	or	0.0	0.0.3	
# ::edge	autonomy	mod	capitalist	0.0.1.1.0.1.0	0.0.1.1.0.1	
# ::edge	country	name	name	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	country	name	name	0.0.1.1.0.0	0.0.1.1.0.0.1	
# ::edge	country	name	name	0.0.1.1.1	0.0.1.1.1.0	
# ::edge	country	name	name	0.0.2	0.0.2.0	
# ::edge	date-entity	year	1984	0.0.1.1.2	0.0.1.1.2.0	
# ::edge	date-entity	year	1997	0.0.0.0.2	0.0.0.0.2.0	
# ::edge	declare-02	ARG0	country	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	declare-02	ARG1	capitalist	0.0.1.1.0	0.0.1.1.0.1	
# ::edge	declare-02	mod	joint	0.0.1.1.0	0.0.1.1.0.2	
# ::edge	follow-02	ARG0	and	0.0.0	0.0	
# ::edge	follow-02	ARG1	person	0.0.0	0.0.0.0	
# ::edge	hope-01	ARG1	and	0	0.0	
# ::edge	hope-01	mod	high	0	0.2	
# ::edge	look-01	ARG0	colony	0.1	0.1.0	
# ::edge	look-01	ARG1	hope-01	0.1	0	
# ::edge	look-01	direction	forward	0.1	0.1.1	
# ::edge	name	op1	"Britain"	0.0.2.0	0.0.2.0.0	
# ::edge	name	op1	"China"	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	name	op1	"China"	0.0.1.1.1.0	0.0.1.1.1.0.0	
# ::edge	name	op1	"kong"	0.0.1.1.0.0.1	0.0.1.1.0.0.1.0	
# ::edge	name	op2	"hong"	0.0.1.1.0.0.1	0.0.1.1.0.0.1.1	
# ::edge	or	op1	temporal-quantity	0.0.3	0.0.3.0	
# ::edge	person	mod	country	0.0.0.0	0.0.0.0.0	
# ::edge	person	time	date-entity	0.0.0.0	0.0.0.0.2	
# ::edge	promise-01	ARG1	follow-02	0.0.0.1	0.0.0	
# ::edge	question-01	ARG0	both	0.0.1.1.0.0.0	0.0.1.1.0.0.0.0	
# ::edge	question-01	ARG1	country	0.0.1.1.0.0.0	0.0.1.1.0.0	
# ::edge	sign-02	ARG1	declare-02	0.0.1.1	0.0.1.1.0	
# ::edge	sign-02	ARG2	country	0.0.1.1	0.0.1.1.1	
# ::edge	sign-02	time	date-entity	0.0.1.1	0.0.1.1.2	
# ::edge	sovereignty	poss	person	0.0.0.0.1	0.0.0.0	
# ::edge	temporal-quantity	quant	50	0.0.3.0	0.0.3.0.0	
# ::edge	temporal-quantity	unit	year	0.0.3.0	0.0.3.0.1	
# ::edge	time	time	after	0.0.1.2	0.0.1	
(h / hope-01 
      :ARG1 (a2 / and 
            :ARG0-of (f / follow-02 
                  :ARG1 (p / person 
                        :mod (c / country 
                              :name (n / name 
                                    :op1 "China")) 
                        :poss-of (s / sovereignty) 
                        :time (d / date-entity 
                              :year 1997)) 
                  :ARG1-of (p2 / promise-01)) 
            :op-of (a3 / after 
                  :mod (j2 / just) 
                  :op1 (s2 / sign-02 
                        :ARG1 (d2 / declare-02 
                              :ARG0 (c4 / country 
                                    :ARG1-of (q / question-01 
                                          :ARG0 (b / both)) 
                                    :name (n2 / name 
                                          :op1 "kong" 
                                          :op2 "hong")) 
                              :ARG1 (c2 / capitalist 
                                    :mod-of (a / autonomy)) 
                              :mod (j / joint)) 
                        :ARG2 (c5 / country 
                              :name (n3 / name 
                                    :op1 "China")) 
                        :time (d3 / date-entity 
                              :year 1984)) 
                  :time-of (t2 / time)) 
            :op1 (c6 / country 
                  :name (n4 / name 
                        :op1 "Britain")) 
            :op2 (o / or 
                  :op1 (t / temporal-quantity 
                        :quant 50 
                        :unit (y / year)))) 
      :ARG1-of (l / look-01 
            :ARG0 (c3 / colony) 
            :direction (f2 / forward)) 
      :mod (h2 / high))

# ::snt mr mayor yesterday issued a long statement replying to staff criticism of his measures and promised that in future all senior posts would be advertised internally before appointments were made
# ::tok mr mayor yesterday issued a long statement replying to staff criticism of his measures and promised that in future all senior posts would be advertised internally before appointments were made
# ::alignments 26-27|0.0.1.1.0.1 21-22|0.0.1.1.0.0.0.0 20-21|0.0.1.1.0.0.0.0.0 19-20|0.0.1.1.0.0.0.0.1 18-19|0.0.1.0 15-16|0.0.1.1.0 14-15|0.0.1.1 13-14|0.0.0.1 10-11|0.0.0 9-10|0.0.0.0.0+0.0.0.0 7-8|0.0 6-7|0 3-4|0.0.1 2-3|0.0.1.2 1-2|0.0.1.1.0.0+0.0.1.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:03.895
# ::node	0	state-01	6-7
# ::node	0.0	reply-01	7-8
# ::node	0.0.0	criticize-01	10-11
# ::node	0.0.0.0	person	9-10
# ::node	0.0.0.0.0	staff-01	9-10
# ::node	0.0.0.1	measure	13-14
# ::node	0.0.1	issue-01	3-4
# ::node	0.0.1.0	future	18-19
# ::node	0.0.1.1	and	14-15
# ::node	0.0.1.1.0	promise-01	15-16
# ::node	0.0.1.1.0.0	mayor	1-2
# ::node	0.0.1.1.0.0.0	have-org-role-91	1-2
# ::node	0.0.1.1.0.0.0.0	post	21-22
# ::node	0.0.1.1.0.0.0.0.0	senior	20-21
# ::node	0.0.1.1.0.0.0.0.1	all	19-20
# ::node	0.0.1.1.0.1	before	26-27
# ::node	0.0.1.2	yesterday	2-3
# ::root	0	state-01
# ::edge	and	op1	issue-01	0.0.1.1	0.0.1	
# ::edge	and	op2	promise-01	0.0.1.1	0.0.1.1.0	
# ::edge	criticize-01	ARG0	person	0.0.0	0.0.0.0	
# ::edge	criticize-01	ARG1	measure	0.0.0	0.0.0.1	
# ::edge	have-org-role-91	ARG1	post	0.0.1.1.0.0.0	0.0.1.1.0.0.0.0	
# ::edge	have-org-role-91	ARG2	mayor	0.0.1.1.0.0.0	0.0.1.1.0.0	
# ::edge	issue-01	ARG0	future	0.0.1	0.0.1.0	
# ::edge	issue-01	ARG1	reply-01	0.0.1	0.0	
# ::edge	issue-01	time	yesterday	0.0.1	0.0.1.2	
# ::edge	post	mod	senior	0.0.1.1.0.0.0.0	0.0.1.1.0.0.0.0.0	
# ::edge	post	quant	all	0.0.1.1.0.0.0.0	0.0.1.1.0.0.0.0.1	
# ::edge	promise-01	ARG0	mayor	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	promise-01	ARG1	before	0.0.1.1.0	0.0.1.1.0.1	
# ::edge	reply-01	ARG1	criticize-01	0.0	0.0.0	
# ::edge	staff-01	ARG2	person	0.0.0.0.0	0.0.0.0	
# ::edge	state-01	ARG0	reply-01	0	0.0	
(s3 / state-01 
      :ARG0 (r / reply-01 
            :ARG1 (c / criticize-01 
                  :ARG0 (p3 / person 
                        :ARG2-of (s2 / staff-01)) 
                  :ARG1 (m / measure)) 
            :ARG1-of (i / issue-01 
                  :ARG0 (f / future) 
                  :op-of (a2 / and 
                        :op1 (p2 / promise-01 
                              :ARG0 (m2 / mayor 
                                    :ARG2-of (h / have-org-role-91 
                                          :ARG1 (p / post 
                                                :mod (s / senior) 
                                                :quant (a / all)))) 
                              :ARG1 (b / before))) 
                  :time (y / yesterday))))

# ::snt in addition to the valid yes i promise they added the words by legal imperative
# ::tok in addition to the valid yes i promise they added the words by legal imperative
# ::alignments 14-15|0.2 13-14|0.2.0 11-12|0.1 9-10|0 8-9|0.0 7-8|0.0.0 6-7|0.0.0.0 5-6|0.0.0.2 4-5|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:04.011
# ::node	0	add-01	9-10
# ::node	0.0	they	8-9
# ::node	0.0.0	promise-01	7-8
# ::node	0.0.0.0	i	6-7
# ::node	0.0.0.1	valid-41	4-5
# ::node	0.0.0.2	yes	5-6
# ::node	0.1	word	11-12
# ::node	0.2	imperative	14-15
# ::node	0.2.0	legal	13-14
# ::root	0	add-01
# ::edge	add-01	ARG0	they	0	0.0	
# ::edge	add-01	ARG1	word	0	0.1	
# ::edge	add-01	ARG2	imperative	0	0.2	
# ::edge	imperative	mod	legal	0.2	0.2.0	
# ::edge	promise-01	ARG0	i	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	they	0.0.0	0.0	
# ::edge	promise-01	time	yes	0.0.0	0.0.0.2	
# ::edge	valid-41	ARG1	promise-01	0.0.0.1	0.0.0	
(a / add-01 
      :ARG0 (t / they 
            :ARG1-of (p / promise-01 
                  :ARG0 (i2 / i) 
                  :ARG1-of (v / valid-41) 
                  :time (y / yes))) 
      :ARG1 (w / word) 
      :ARG2 (i / imperative 
            :mod (l / legal)))

# ::snt as if to anticipate the likely pressure from the debtor countries and to underscore their newfound financial strength and leadership the japanese yesterday promised to unveil a new package of financial support which could give a substantial boost to plans for debt relief and reduction
# ::tok as if to anticipate the likely pressure from the debtor countries and to underscore their newfound financial strength and leadership the japanese yesterday promised to unveil a new package of financial support which could give a substantial boost to plans for debt relief and reduction
# ::alignments 44-45|0.0.1.0.0 43-44|0.0.1.0 42-43|0.0.3 41-42|0.0.1.0.0.0 39-40|0.0.1 37-38|0 36-37|0.1 34-35|0.0 33-34|0.0.2 31-32|0.0.0 30-31|0.0.0.0 28-29|0.0.4 27-28|0.0.4.1 23-24|0.0.4.0 22-23|0.0.4.0.0 18-19|0.0.4.0.1.2 17-18|0.0.4.0.1 16-17|0.0.4.0.1.1 15-16|0.0.4.0.1.0 11-12|0.0.4.0.1.3.0.1 10-11|0.0.4.0.1.3 6-7|0.0.4.0.1.3.0 5-6|0.0.4.0.1.3.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:04.645
# ::node	0	boost-01	37-38
# ::node	0.0	give-01	34-35
# ::node	0.0.0	support-01	31-32
# ::node	0.0.0.0	finance	30-31
# ::node	0.0.1	plan-01	39-40
# ::node	0.0.1.0	and	43-44
# ::node	0.0.1.0.0	reduce-01	44-45
# ::node	0.0.1.0.0.0	debt	41-42
# ::node	0.0.2	possible	33-34
# ::node	0.0.3	relieve-01	42-43
# ::node	0.0.4	package	28-29
# ::node	0.0.4.0	promise-01	23-24
# ::node	0.0.4.0.0	yesterday	22-23
# ::node	0.0.4.0.1	strength	17-18
# ::node	0.0.4.0.1.0	newfound	15-16
# ::node	0.0.4.0.1.1	finance	16-17
# ::node	0.0.4.0.1.2	and	18-19
# ::node	0.0.4.0.1.3	country	10-11
# ::node	0.0.4.0.1.3.0	pressure-01	6-7
# ::node	0.0.4.0.1.3.0.0	likely	5-6
# ::node	0.0.4.0.1.3.0.1	and	11-12
# ::node	0.0.4.1	new	27-28
# ::node	0.1	substantial	36-37
# ::root	0	boost-01
# ::edge	and	op1	pressure-01	0.0.4.0.1.3.0.1	0.0.4.0.1.3.0	
# ::edge	and	op1	reduce-01	0.0.1.0	0.0.1.0.0	
# ::edge	and	op1	strength	0.0.4.0.1.2	0.0.4.0.1	
# ::edge	boost-01	mod	substantial	0	0.1	
# ::edge	give-01	ARG0	support-01	0.0	0.0.0	
# ::edge	give-01	ARG1	boost-01	0.0	0	
# ::edge	give-01	ARG2	plan-01	0.0	0.0.1	
# ::edge	give-01	manner	relieve-01	0.0	0.0.3	
# ::edge	likely	domain	pressure-01	0.0.4.0.1.3.0.0	0.0.4.0.1.3.0	
# ::edge	package	mod	give-01	0.0.4	0.0	
# ::edge	package	mod	new	0.0.4	0.0.4.1	
# ::edge	plan-01	ARG1	and	0.0.1	0.0.1.0	
# ::edge	possible	domain	give-01	0.0.2	0.0	
# ::edge	pressure-01	ARG1	country	0.0.4.0.1.3.0	0.0.4.0.1.3	
# ::edge	promise-01	ARG0	yesterday	0.0.4.0	0.0.4.0.0	
# ::edge	promise-01	ARG1	package	0.0.4.0	0.0.4	
# ::edge	reduce-01	ARG1	debt	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	strength	mod	finance	0.0.4.0.1	0.0.4.0.1.1	
# ::edge	strength	mod	newfound	0.0.4.0.1	0.0.4.0.1.0	
# ::edge	strength	poss	country	0.0.4.0.1	0.0.4.0.1.3	
# ::edge	strength	purpose	promise-01	0.0.4.0.1	0.0.4.0	
# ::edge	support-01	mod	finance	0.0.0	0.0.0.0	
(b / boost-01 
      :ARG1-of (g / give-01 
            :ARG0 (s2 / support-01 
                  :mod (f / finance)) 
            :ARG2 (p / plan-01 
                  :ARG1 (a / and 
                        :op1 (r / reduce-01 
                              :ARG1 (d / debt)))) 
            :domain-of (p2 / possible) 
            :manner (r2 / relieve-01) 
            :mod-of (p3 / package 
                  :ARG1-of (p4 / promise-01 
                        :ARG0 (y / yesterday) 
                        :purpose-of (s3 / strength 
                              :mod (n2 / newfound) 
                              :mod (f2 / finance) 
                              :op-of (a2 / and) 
                              :poss (c / country 
                                    :ARG1-of (p5 / pressure-01 
                                          :domain-of (l / likely) 
                                          :op-of (a3 / and))))) 
                  :mod (n / new))) 
      :mod (s / substantial))

# ::snt this will ease the pain my love she promised
# ::tok this will ease the pain my love she promised
# ::alignments 8-9|0 7-8|0.0 6-7|0.1 4-5|0.1.0 2-3|0.1.0.0 0-1|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:04.660
# ::node	0	promise-01	8-9
# ::node	0.0	she	7-8
# ::node	0.1	love-01	6-7
# ::node	0.1.0	pain-01	4-5
# ::node	0.1.0.0	ease-02	2-3
# ::node	0.1.0.0.0	this	0-1
# ::root	0	promise-01
# ::edge	ease-02	ARG0	this	0.1.0.0	0.1.0.0.0	
# ::edge	ease-02	ARG1	pain-01	0.1.0.0	0.1.0	
# ::edge	love-01	ARG1	pain-01	0.1	0.1.0	
# ::edge	promise-01	ARG0	she	0	0.0	
# ::edge	promise-01	ARG1	love-01	0	0.1	
(p / promise-01 
      :ARG0 (s / she) 
      :ARG1 (l / love-01 
            :ARG1 (p2 / pain-01 
                  :ARG1-of (e / ease-02 
                        :ARG0 (t / this)))))

# ::snt she is assured of as warm a welcome from the british government she will be seeing margaret thatcher and the foreign secretary douglas hurd as she received last week in washington from president bush who promised to restore aid to nicaragua if she won
# ::tok she is assured of as warm a welcome from the british government she will be seeing margaret thatcher and the foreign secretary douglas hurd as she received last week in washington from president bush who promised to restore aid to nicaragua if she won
# ::alignments 43-44|0.2.0.0.0 42-43|0.2.0.0.0.0 38-39|0.2.0.1.1.1.0 37-38|0.2.0.1.1.1 35-36|0.2.0.1.1 33-34|0.2.0.1.1.0 32-33|0.2.0.1.1.0.0.0+0.2.0.1.1.0.0 28-29|0.2.0.3 27-28|0.2.0.3.0 26-27|0.2.0 25-26|0.2.0.0 22-24|0.2.0.1.2.0+0.2.0.1.2.1+0.2.0.1.2+0.2.0.1 21-22|0.2 20-21|0.2.1 18-19|0 16-18|0.1.1.0+0.1.1.1+0.1.1+0.1 15-16|0.0 12-13|0.0.0 7-8|0.1.0 5-6|0.2.0.2 2-3|0.2.0.1.0 0-1|0.2.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:06.104
# ::node	0	and	18-19
# ::node	0.0	see-01	15-16
# ::node	0.0.0	she	12-13
# ::node	0.1	person	16-18
# ::node	0.1.0	welcome-01	7-8
# ::node	0.1.1	name	16-18
# ::node	0.1.1.0	"thatcher"	16-18
# ::node	0.1.1.1	"margaret"	16-18
# ::node	0.2	secretary	21-22
# ::node	0.2.0	receive-01	26-27
# ::node	0.2.0.0	she	25-26
# ::node	0.2.0.0.0	win-01	43-44
# ::node	0.2.0.0.0.0	she	42-43
# ::node	0.2.0.1	person	22-24
# ::node	0.2.0.1.0	assure-01	2-3
# ::node	0.2.0.1.0.0	she	0-1
# ::node	0.2.0.1.1	promise-01	35-36
# ::node	0.2.0.1.1.0	bush-league	33-34
# ::node	0.2.0.1.1.0.0	have-org-role-91	32-33
# ::node	0.2.0.1.1.0.0.0	president	32-33
# ::node	0.2.0.1.1.1	restore-01	37-38
# ::node	0.2.0.1.1.1.0	aid-01	38-39
# ::node	0.2.0.1.2	name	22-24
# ::node	0.2.0.1.2.0	"hurd"	22-24
# ::node	0.2.0.1.2.1	"douglas"	22-24
# ::node	0.2.0.2	warm	5-6
# ::node	0.2.0.3	week	28-29
# ::node	0.2.0.3.0	last	27-28
# ::node	0.2.1	foreign	20-21
# ::root	0	and
# ::edge	and	op1	person	0	0.1	
# ::edge	and	op2	secretary	0	0.2	
# ::edge	assure-01	ARG0	person	0.2.0.1.0	0.2.0.1	
# ::edge	assure-01	ARG1	she	0.2.0.1.0	0.2.0.1.0.0	
# ::edge	have-org-role-91	ARG0	bush-league	0.2.0.1.1.0.0	0.2.0.1.1.0	
# ::edge	have-org-role-91	ARG2	president	0.2.0.1.1.0.0	0.2.0.1.1.0.0.0	
# ::edge	name	op1	"hurd"	0.2.0.1.2	0.2.0.1.2.0	
# ::edge	name	op1	"thatcher"	0.1.1	0.1.1.0	
# ::edge	name	op2	"douglas"	0.2.0.1.2	0.2.0.1.2.1	
# ::edge	name	op2	"margaret"	0.1.1	0.1.1.1	
# ::edge	person	name	name	0.1	0.1.1	
# ::edge	person	name	name	0.2.0.1	0.2.0.1.2	
# ::edge	promise-01	ARG0	bush-league	0.2.0.1.1	0.2.0.1.1.0	
# ::edge	promise-01	ARG1	person	0.2.0.1.1	0.2.0.1	
# ::edge	promise-01	ARG2	restore-01	0.2.0.1.1	0.2.0.1.1.1	
# ::edge	receive-01	ARG0	she	0.2.0	0.2.0.0	
# ::edge	receive-01	ARG1	person	0.2.0	0.2.0.1	
# ::edge	receive-01	ARG2	secretary	0.2.0	0.2	
# ::edge	receive-01	mod	warm	0.2.0	0.2.0.2	
# ::edge	receive-01	time	week	0.2.0	0.2.0.3	
# ::edge	restore-01	ARG1	aid-01	0.2.0.1.1.1	0.2.0.1.1.1.0	
# ::edge	secretary	mod	foreign	0.2	0.2.1	
# ::edge	see-01	ARG0	she	0.0	0.0.0	
# ::edge	see-01	ARG1	and	0.0	0	
# ::edge	week	mod	last	0.2.0.3	0.2.0.3.0	
# ::edge	welcome-01	ARG1	person	0.1.0	0.1	
# ::edge	win-01	ARG0	she	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	win-01	ARG1	she	0.2.0.0.0	0.2.0.0	
(a2 / and 
      :ARG1-of (s4 / see-01 
            :ARG0 (s5 / she)) 
      :op1 (p4 / person 
            :ARG1-of (w3 / welcome-01) 
            :name (n2 / name 
                  :op1 "thatcher" 
                  :op2 "margaret")) 
      :op2 (s3 / secretary 
            :ARG2-of (r2 / receive-01 
                  :ARG0 (s2 / she 
                        :ARG1-of (w / win-01 
                              :ARG0 (s / she))) 
                  :ARG1 (p3 / person 
                        :ARG0-of (a3 / assure-01 
                              :ARG1 (s6 / she)) 
                        :ARG1-of (p / promise-01 
                              :ARG0 (b / bush-league 
                                    :ARG0-of (h / have-org-role-91 
                                          :ARG2 (p2 / president))) 
                              :ARG2 (r / restore-01 
                                    :ARG1 (a / aid-01))) 
                        :name (n / name 
                              :op1 "hurd" 
                              :op2 "douglas")) 
                  :mod (w4 / warm) 
                  :time (w2 / week 
                        :mod (l / last))) 
            :mod (f / foreign)))

# ::snt this is on account of what you might call the counterlife theory of holidays which holds that what you get out of the experience will be the opposite of what you were promised or expected or desired
# ::tok this is on account of what you might call the counterlife theory of holidays which holds that what you get out of the experience will be the opposite of what you were promised or expected or desired
# ::alignments 36-37|0.0.0.1.0.1 35-36|0.0.0.1.0 34-35|0 33-34|0.0.0.1 32-33|0.0.0 30-31|0.0 27-28|0.0.0.0 23-24|0.0.0.1.0.1.0 18-19|0.0.0.1.0.1.0.0 15-16|0.0.0.1.0.0 13-14|0.0.0.1.0.0.1 11-12|0.0.0.1.0.0.0 6-7|0.0.0.1.0.0.0.0 3-4|0.0.0.0.0 0-1|0.0.0.1.0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:06.597
# ::node	0	expect-01	34-35
# ::node	0.0	you	30-31
# ::node	0.0.0	promise-01	32-33
# ::node	0.0.0.0	opposite-41	27-28
# ::node	0.0.0.0.0	account	3-4
# ::node	0.0.0.1	or	33-34
# ::node	0.0.0.1.0	or	35-36
# ::node	0.0.0.1.0.0	hold-01	15-16
# ::node	0.0.0.1.0.0.0	theory	11-12
# ::node	0.0.0.1.0.0.0.0	you	6-7
# ::node	0.0.0.1.0.0.1	holiday	13-14
# ::node	0.0.0.1.0.1	desire-01	36-37
# ::node	0.0.0.1.0.1.0	experience-01	23-24
# ::node	0.0.0.1.0.1.0.0	you	18-19
# ::node	0.0.0.1.0.1.0.1	this	0-1
# ::root	0	expect-01
# ::edge	desire-01	ARG1	experience-01	0.0.0.1.0.1	0.0.0.1.0.1.0	
# ::edge	expect-01	ARG0	you	0	0.0	
# ::edge	experience-01	ARG0	you	0.0.0.1.0.1.0	0.0.0.1.0.1.0.0	
# ::edge	experience-01	ARG1	this	0.0.0.1.0.1.0	0.0.0.1.0.1.0.1	
# ::edge	hold-01	ARG0	theory	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	hold-01	ARG1	holiday	0.0.0.1.0.0	0.0.0.1.0.0.1	
# ::edge	opposite-41	ARG1	account	0.0.0.0	0.0.0.0.0	
# ::edge	or	op1	hold-01	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	or	op1	promise-01	0.0.0.1	0.0.0	
# ::edge	or	op2	desire-01	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	or	op2	or	0.0.0.1	0.0.0.1.0	
# ::edge	promise-01	ARG0	you	0.0.0	0.0	
# ::edge	promise-01	ARG1	opposite-41	0.0.0	0.0.0.0	
# ::edge	theory	poss	you	0.0.0.1.0.0.0	0.0.0.1.0.0.0.0	
(e / expect-01 
      :ARG0 (y / you 
            :ARG0-of (p / promise-01 
                  :ARG1 (o3 / opposite-41 
                        :ARG1 (a / account)) 
                  :op-of (o2 / or 
                        :op1 (o / or 
                              :op1 (h / hold-01 
                                    :ARG0 (t / theory 
                                          :poss (y3 / you)) 
                                    :ARG1 (h2 / holiday)) 
                              :op2 (d / desire-01 
                                    :ARG1 (e2 / experience-01 
                                          :ARG0 (y2 / you) 
                                          :ARG1 (t2 / this))))))))

# ::snt it was reported at the meeting of cassington parish council that arc had promised to give materials for the surfacing of the green and mr rowe had agreed to organise the spreading of the hardcore and top soil in the late spring or early summer
# ::tok it was reported at the meeting of cassington parish council that arc had promised to give materials for the surfacing of the green and mr rowe had agreed to organise the spreading of the hardcore and top soil in the late spring or early summer
# ::alignments 44-45|0.0.2.2 43-44|0.0.2.1 42-43|0.0.2 41-42|0.0.2.0 40-41|0.0.2.0.0 37-38|0.0.0.1.0 36-37|0.0.0.1.0.0 35-36|0.0.0.1 34-35|0.0.0.0 31-32|0.0.0 29-30|0.0 27-28|0.0.1 23-24|0 22-23|0.1 16-17|0.0.1.0.0 15-16|0.0.1.0 13-14|0.0.1.0.1 9-10|0.0.1.0.1.0.1.0 5-6|0.0.1.0.1.0.1 2-3|0.0.1.0.1.0 0-1|0.0.1.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:07.314
# ::node	0	and	23-24
# ::node	0.0	organize-01	29-30
# ::node	0.0.0	spread-03	31-32
# ::node	0.0.0.0	hardcore	34-35
# ::node	0.0.0.1	and	35-36
# ::node	0.0.0.1.0	soil	37-38
# ::node	0.0.0.1.0.0	top	36-37
# ::node	0.0.1	agree-01	27-28
# ::node	0.0.1.0	give-01	15-16
# ::node	0.0.1.0.0	material	16-17
# ::node	0.0.1.0.1	promise-01	13-14
# ::node	0.0.1.0.1.0	report-01	2-3
# ::node	0.0.1.0.1.0.0	it	0-1
# ::node	0.0.1.0.1.0.1	meet-03	5-6
# ::node	0.0.1.0.1.0.1.0	council	9-10
# ::node	0.0.2	or	42-43
# ::node	0.0.2.0	spring	41-42
# ::node	0.0.2.0.0	late	40-41
# ::node	0.0.2.1	early	43-44
# ::node	0.0.2.2	summer	44-45
# ::node	0.1	green	22-23
# ::root	0	and
# ::edge	agree-01	ARG1	organize-01	0.0.1	0.0	
# ::edge	and	op1	green	0	0.1	
# ::edge	and	op1	spread-03	0.0.0.1	0.0.0	
# ::edge	and	op2	soil	0.0.0.1	0.0.0.1.0	
# ::edge	give-01	ARG1	material	0.0.1.0	0.0.1.0.0	
# ::edge	give-01	purpose	agree-01	0.0.1.0	0.0.1	
# ::edge	meet-03	ARG1	council	0.0.1.0.1.0.1	0.0.1.0.1.0.1.0	
# ::edge	or	op1	organize-01	0.0.2	0.0	
# ::edge	or	op2	spring	0.0.2	0.0.2.0	
# ::edge	or	op3	early	0.0.2	0.0.2.1	
# ::edge	or	op4	summer	0.0.2	0.0.2.2	
# ::edge	organize-01	ARG0	and	0.0	0	
# ::edge	organize-01	ARG1	spread-03	0.0	0.0.0	
# ::edge	promise-01	ARG2	give-01	0.0.1.0.1	0.0.1.0	
# ::edge	report-01	ARG0	it	0.0.1.0.1.0	0.0.1.0.1.0.0	
# ::edge	report-01	ARG1	promise-01	0.0.1.0.1.0	0.0.1.0.1	
# ::edge	report-01	time	meet-03	0.0.1.0.1.0	0.0.1.0.1.0.1	
# ::edge	soil	mod	top	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	spread-03	ARG1	hardcore	0.0.0	0.0.0.0	
# ::edge	spring	mod	late	0.0.2.0	0.0.2.0.0	
(a3 / and 
      :ARG0-of (o2 / organize-01 
            :ARG1 (s4 / spread-03 
                  :ARG1 (h / hardcore) 
                  :op-of (a / and 
                        :op1 (s3 / soil 
                              :mod (t / top)))) 
            :ARG1-of (a2 / agree-01 
                  :purpose-of (g2 / give-01 
                        :ARG1 (m / material) 
                        :ARG2-of (p / promise-01 
                              :ARG1-of (r / report-01 
                                    :ARG0 (i / it) 
                                    :time (m2 / meet-03 
                                          :ARG1 (c / council)))))) 
            :op-of (o / or 
                  :op1 (s2 / spring 
                        :mod (l / late)) 
                  :op2 (e / early) 
                  :op3 (s / summer))) 
      :op1 (g / green))

# ::snt these were followed or interspersed by a windswept starmersmith standing on the touchline microphone in hand sporting a selection from his extensive wardrobe of scarves and neckties and promising delights which were sure to come next week but which had unaccountably failed to materialise this week
# ::tok these were followed or interspersed by a windswept starmersmith standing on the touchline microphone in hand sporting a selection from his extensive wardrobe of scarves and neckties and promising delights which were sure to come next week but which had unaccountably failed to materialise this week
# ::alignments 45-46|0.1.2 44-45|0.1.2.0 41-42|0.1 37-38|0 36-37|0.0 35-36|0.0.0 28-29|0.1.1.1 27-28|0.1.1 25-26|0.1.1.1.1 21-22|0.1.0 18-19|0.1.1.1.0 16-17|0.1.1.0 15-16|0.1.1.1.0.0 3-4|0.1.1.0.0.0 2-3|0.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:07.541
# ::node	0	contrast-01	37-38
# ::node	0.0	week	36-37
# ::node	0.0.0	next	35-36
# ::node	0.1	fail-01	41-42
# ::node	0.1.0	extensive	21-22
# ::node	0.1.1	and	27-28
# ::node	0.1.1.0	sport	16-17
# ::node	0.1.1.0.0	follow-01	2-3
# ::node	0.1.1.0.0.0	or	3-4
# ::node	0.1.1.1	promise-01	28-29
# ::node	0.1.1.1.0	select-01	18-19
# ::node	0.1.1.1.0.0	hand	15-16
# ::node	0.1.1.1.1	and	25-26
# ::node	0.1.2	week	45-46
# ::node	0.1.2.0	this	44-45
# ::root	0	contrast-01
# ::edge	and	op1	promise-01	0.1.1.1.1	0.1.1.1	
# ::edge	and	op1	sport	0.1.1	0.1.1.0	
# ::edge	and	op2	promise-01	0.1.1	0.1.1.1	
# ::edge	contrast-01	ARG1	week	0	0.0	
# ::edge	contrast-01	ARG2	fail-01	0	0.1	
# ::edge	fail-01	ARG0	extensive	0.1	0.1.0	
# ::edge	fail-01	ARG1	and	0.1	0.1.1	
# ::edge	fail-01	time	week	0.1	0.1.2	
# ::edge	follow-01	ARG1	sport	0.1.1.0.0	0.1.1.0	
# ::edge	or	op1	follow-01	0.1.1.0.0.0	0.1.1.0.0	
# ::edge	promise-01	ARG1	select-01	0.1.1.1	0.1.1.1.0	
# ::edge	select-01	ARG0	hand	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	week	mod	next	0.0	0.0.0	
# ::edge	week	mod	this	0.1.2	0.1.2.0	
(c / contrast-01 
      :ARG1 (w2 / week 
            :mod (n / next)) 
      :ARG2 (f / fail-01 
            :ARG0 (e / extensive) 
            :ARG1 (a / and 
                  :op1 (s2 / sport 
                        :ARG1-of (f2 / follow-01 
                              :op-of (o / or))) 
                  :op2 (p / promise-01 
                        :ARG1 (s / select-01 
                              :ARG0 (h / hand)) 
                        :op-of (a2 / and))) 
            :time (w / week 
                  :mod (t / this))))

# ::snt even if beijing can be persuaded to make important gestures such as promising not to station peoples liberation army troops in the territory it will be hard to make any impact on the hundreds of thousands who have decided to quit hong kong for good
# ::tok even if beijing can be persuaded to make important gestures such as promising not to station peoples liberation army troops in the territory it will be hard to make any impact on the hundreds of thousands who have decided to quit hong kong for good
# ::alignments 44-45|0.0 41-43|0.1.0.0+0.1.0.1+0.1.0+0.1 40-41|0 38-39|0.2 30-31|0.2.2 29-30|0.2.0 26-27|0.2.2.0.0 23-24|0.2.2.0 22-23|0.2.1.0.0.1 19-20|0.2.1.0.0 18-19|0.2.1.0 17-18|0.2.1 16-17|0.2.1.1 15-16|0.2.1.1.0 12-13|0.2.1.0.0.0 10-11|0.2.1.0.0.0.0 8-9|0.2.2.1 5-6|0.2.1.0.0.0.1 3-4|0.2.1.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:08.219
# ::node	0	quit-01	40-41
# ::node	0.0	good	44-45
# ::node	0.1	country	41-43
# ::node	0.1.0	name	41-43
# ::node	0.1.0.0	"kong"	41-43
# ::node	0.1.0.1	"hong"	41-43
# ::node	0.2	decide-01	38-39
# ::node	0.2.0	any	29-30
# ::node	0.2.1	liberate-01	17-18
# ::node	0.2.1.0	army	18-19
# ::node	0.2.1.0.0	troop	19-20
# ::node	0.2.1.0.0.0	promise-01	12-13
# ::node	0.2.1.0.0.0.0	such	10-11
# ::node	0.2.1.0.0.0.1	persuade-01	5-6
# ::node	0.2.1.0.0.0.1.0	possible	3-4
# ::node	0.2.1.0.0.1	territory	22-23
# ::node	0.2.1.1	people	16-17
# ::node	0.2.1.1.0	station	15-16
# ::node	0.2.2	impact-01	30-31
# ::node	0.2.2.0	it	23-24
# ::node	0.2.2.0.0	hard	26-27
# ::node	0.2.2.1	important	8-9
# ::root	0	quit-01
# ::edge	country	name	name	0.1	0.1.0	
# ::edge	decide-01	ARG0	any	0.2	0.2.0	
# ::edge	decide-01	ARG1	quit-01	0.2	0	
# ::edge	decide-01	ARG2	liberate-01	0.2	0.2.1	
# ::edge	decide-01	purpose	impact-01	0.2	0.2.2	
# ::edge	hard	domain	it	0.2.2.0.0	0.2.2.0	
# ::edge	impact-01	ARG0	it	0.2.2	0.2.2.0	
# ::edge	important	op1	impact-01	0.2.2.1	0.2.2	
# ::edge	liberate-01	ARG1	army	0.2.1	0.2.1.0	
# ::edge	liberate-01	ARG2	people	0.2.1	0.2.1.1	
# ::edge	name	op1	"kong"	0.1.0	0.1.0.0	
# ::edge	name	op2	"hong"	0.1.0	0.1.0.1	
# ::edge	persuade-01	ARG1	promise-01	0.2.1.0.0.0.1	0.2.1.0.0.0	
# ::edge	possible	domain	persuade-01	0.2.1.0.0.0.1.0	0.2.1.0.0.0.1	
# ::edge	promise-01	ARG0	troop	0.2.1.0.0.0	0.2.1.0.0	
# ::edge	promise-01	ARG1	such	0.2.1.0.0.0	0.2.1.0.0.0.0	
# ::edge	quit-01	ARG0	good	0	0.0	
# ::edge	quit-01	ARG1	country	0	0.1	
# ::edge	station	part	people	0.2.1.1.0	0.2.1.1	
# ::edge	territory	part	troop	0.2.1.0.0.1	0.2.1.0.0	
# ::edge	troop	location	army	0.2.1.0.0	0.2.1.0	
(q / quit-01 
      :ARG0 (g / good) 
      :ARG1 (c / country 
            :name (n / name 
                  :op1 "kong" 
                  :op2 "hong")) 
      :ARG1-of (d / decide-01 
            :ARG0 (a / any) 
            :ARG2 (l / liberate-01 
                  :ARG1 (a2 / army 
                        :location-of (t2 / troop 
                              :ARG0-of (p2 / promise-01 
                                    :ARG1 (s2 / such) 
                                    :ARG1-of (p3 / persuade-01 
                                          :domain-of (p4 / possible))) 
                              :part-of (t / territory))) 
                  :ARG2 (p / people 
                        :part-of (s / station))) 
            :purpose (i / impact-01 
                  :ARG0 (i2 / it 
                        :domain-of (h / hard)) 
                  :op-of (i3 / important))))

# ::snt at present the smaller scheme promises increases of up to 5 per cent whereas the main scheme guarantees indexlinked payments
# ::tok at present the smaller scheme promises increases of up to 5 per cent whereas the main scheme guarantees indexlinked payments
# ::alignments 19-20|0.0.1.1 17-18|0.0.1 16-17|0.0.1.0 15-16|0.0.1.2 13-14|0.0 12-13|0.0.0.0+0.0.0 10-11|0.0.1.4 6-7|0.0.1.3 5-6|0.0.1.3.0 4-5|0.0.1.3.0.0 3-4|0.0.1.3.0.1 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:08.341
# ::node	0	present	1-2
# ::node	0.0	whereas	13-14
# ::node	0.0.0	monetary-quantity	12-13
# ::node	0.0.0.0	cent	12-13
# ::node	0.0.1	guarantee-01	17-18
# ::node	0.0.1.0	scheme	16-17
# ::node	0.0.1.1	payment	19-20
# ::node	0.0.1.2	main	15-16
# ::node	0.0.1.3	increase-01	6-7
# ::node	0.0.1.3.0	promise-01	5-6
# ::node	0.0.1.3.0.0	scheme	4-5
# ::node	0.0.1.3.0.1	small	3-4
# ::node	0.0.1.4	5	10-11
# ::root	0	present
# ::edge	guarantee-01	ARG0	scheme	0.0.1	0.0.1.0	
# ::edge	guarantee-01	ARG1	payment	0.0.1	0.0.1.1	
# ::edge	guarantee-01	mod	main	0.0.1	0.0.1.2	
# ::edge	guarantee-01	time	5	0.0.1	0.0.1.4	
# ::edge	increase-01	ARG1	promise-01	0.0.1.3	0.0.1.3.0	
# ::edge	increase-01	purpose	guarantee-01	0.0.1.3	0.0.1	
# ::edge	monetary-quantity	location	whereas	0.0.0	0.0	
# ::edge	monetary-quantity	unit	cent	0.0.0	0.0.0.0	
# ::edge	present	time	whereas	0	0.0	
# ::edge	promise-01	ARG1	scheme	0.0.1.3.0	0.0.1.3.0.0	
# ::edge	promise-01	ARG2	small	0.0.1.3.0	0.0.1.3.0.1	
# ::edge	whereas	op1	guarantee-01	0.0	0.0.1	
(p3 / present 
      :time (w / whereas 
            :location-of (m2 / monetary-quantity 
                  :unit (c / cent)) 
            :op1 (g / guarantee-01 
                  :ARG0 (s / scheme) 
                  :ARG1 (p / payment) 
                  :mod (m / main) 
                  :purpose-of (i / increase-01 
                        :ARG1 (p2 / promise-01 
                              :ARG1 (s2 / scheme) 
                              :ARG2 (s3 / small))) 
                  :time 5)))

# ::snt he and beatty were compared to a cad and a weasel romping through a story with little of the hilarity that it had promised
# ::tok he and beatty were compared to a cad and a weasel romping through a story with little of the hilarity that it had promised
# ::alignments 23-24|0.1 21-22|0.1.1 19-20|0 16-17|0.0.0 14-15|0.0 8-9|0.1.0.0.0.0 4-5|0.1.0.0.0 1-2|0.1.0.0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:08.446
# ::node	0	hilarity	19-20
# ::node	0.0	story	14-15
# ::node	0.0.0	little	16-17
# ::node	0.1	promise-01	23-24
# ::node	0.1.0	he	0-1
# ::node	0.1.0.0	and	1-2
# ::node	0.1.0.0.0	compare-01	4-5
# ::node	0.1.0.0.0.0	and	8-9
# ::node	0.1.1	it	21-22
# ::root	0	hilarity
(h / hilarity 
      :location-of (s / story 
            :location (l / little)) 
      :prep-on-of (p / promise-01 
            :ARG0 (h2 / he 
                  :op-of (a2 / and 
                        :ARG1-of (c / compare-01 
                              :ARG2 (a / and)))) 
            :ARG1 (i / it)))

# ::snt nevertheless two weeks before polling day he swept aside talk of municipal financial problems inaugurated a statefinanced electrification project in a workingclass district and promised running water and sewers for a poor district with a tendency to vote prd
# ::tok nevertheless two weeks before polling day he swept aside talk of municipal financial problems inaugurated a statefinanced electrification project in a workingclass district and promised running water and sewers for a poor district with a tendency to vote prd
# ::alignments 37-38|0.2.1 32-33|0.1.1 31-32|0.1.1.0 28-29|0.2.0.1.0.0 27-28|0.2.0.1.0 26-27|0.2.0.1 24-25|0.2.0 23-24|0.2 22-23|0.2.0.0 18-19|0.1 17-18|0.1.0 14-15|0 13-14|0.0 12-13|0.0.2 11-12|0.0.1 9-10|0.0.0 8-9|0.0.0.0.1 7-8|0.0.0.0 6-7|0.0.0.0.0 5-6|0.0.0.0.2 3-4|0.0.0.0.3 2-3|0.0.0.0.2.0.1+0.0.0.0.2.0 1-2|0.0.0.0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:08.922
# ::node	0	inaugurate-02	14-15
# ::node	0.0	problem	13-14
# ::node	0.0.0	talk-01	9-10
# ::node	0.0.0.0	sweep-02	7-8
# ::node	0.0.0.0.0	he	6-7
# ::node	0.0.0.0.1	aside	8-9
# ::node	0.0.0.0.2	day	5-6
# ::node	0.0.0.0.2.0	temporal-quantity	2-3
# ::node	0.0.0.0.2.0.0	2	1-2
# ::node	0.0.0.0.2.0.1	week	2-3
# ::node	0.0.0.0.3	before	3-4
# ::node	0.0.1	municipal	11-12
# ::node	0.0.2	finance	12-13
# ::node	0.1	project	18-19
# ::node	0.1.0	electrify-01	17-18
# ::node	0.1.1	district	32-33
# ::node	0.1.1.0	poor	31-32
# ::node	0.2	and	23-24
# ::node	0.2.0	promise-01	24-25
# ::node	0.2.0.0	district	22-23
# ::node	0.2.0.1	water	26-27
# ::node	0.2.0.1.0	and	27-28
# ::node	0.2.0.1.0.0	sewer	28-29
# ::node	0.2.1	vote-01	37-38
# ::root	0	inaugurate-02
# ::edge	and	op1	inaugurate-02	0.2	0	
# ::edge	and	op1	water	0.2.0.1.0	0.2.0.1	
# ::edge	and	op2	promise-01	0.2	0.2.0	
# ::edge	and	op2	sewer	0.2.0.1.0	0.2.0.1.0.0	
# ::edge	and	op3	vote-01	0.2	0.2.1	
# ::edge	district	mod	poor	0.1.1	0.1.1.0	
# ::edge	district	mod	project	0.1.1	0.1	
# ::edge	inaugurate-02	ARG0	problem	0	0.0	
# ::edge	inaugurate-02	ARG1	project	0	0.1	
# ::edge	problem	mod	finance	0.0	0.0.2	
# ::edge	problem	mod	municipal	0.0	0.0.1	
# ::edge	project	mod	electrify-01	0.1	0.1.0	
# ::edge	promise-01	ARG0	district	0.2.0	0.2.0.0	
# ::edge	promise-01	ARG1	water	0.2.0	0.2.0.1	
# ::edge	sweep-02	ARG0	he	0.0.0.0	0.0.0.0.0	
# ::edge	sweep-02	ARG1	talk-01	0.0.0.0	0.0.0	
# ::edge	sweep-02	direction	aside	0.0.0.0	0.0.0.0.1	
# ::edge	sweep-02	time	before	0.0.0.0	0.0.0.0.3	
# ::edge	sweep-02	time	day	0.0.0.0	0.0.0.0.2	
# ::edge	talk-01	ARG1	problem	0.0.0	0.0	
# ::edge	temporal-quantity	location	day	0.0.0.0.2.0	0.0.0.0.2	
# ::edge	temporal-quantity	quant	2	0.0.0.0.2.0	0.0.0.0.2.0.0	
# ::edge	temporal-quantity	unit	week	0.0.0.0.2.0	0.0.0.0.2.0.1	
(i / inaugurate-02 
      :ARG0 (p4 / problem 
            :ARG1-of (t / talk-01 
                  :ARG1-of (s2 / sweep-02 
                        :ARG0 (h / he) 
                        :direction (a3 / aside) 
                        :time (d3 / day 
                              :location-of (t2 / temporal-quantity 
                                    :quant 2 
                                    :unit (w2 / week))) 
                        :time (b / before))) 
            :mod (m / municipal) 
            :mod (f / finance)) 
      :ARG1 (p3 / project 
            :mod (e / electrify-01) 
            :mod-of (d / district 
                  :mod (p / poor))) 
      :op-of (a2 / and 
            :op1 (p2 / promise-01 
                  :ARG0 (d2 / district) 
                  :ARG1 (w / water 
                        :op-of (a / and 
                              :op1 (s / sewer)))) 
            :op2 (v / vote-01)))

# ::snt the governments reform programme intended to make the armed forces fit for a democratic hungary also imposes a troop reduction of 30 to 35 per cent over two years and promises to cut national service from 18 to 12 months by 1991
# ::tok the governments reform programme intended to make the armed forces fit for a democratic hungary also imposes a troop reduction of 30 to 35 per cent over two years and promises to cut national service from 18 to 12 months by 1991
# ::alignments 41-42|0.1.4.0+0.1.4 39-40|0.1.3.1+0.1.3 38-39|0.1.3.0 36-37|0.0.2.1 33-34|0.0.0 30-31|0.1 29-30|0 28-29|0.1.2.1+0.1.2 27-28|0.1.2.0 25-26|0.1.1.0+0.1.1 23-24|0.1.0.1.1 21-22|0.1.0.0.0.0.0 19-20|0.0 18-19|0.0.1 16-17|0.0.2 15-16|0.0.2.0 13-14|0.1.0.1.0 10-11|0.1.0.0.0.1 9-10|0.1.0.0.0 8-9|0.1.0.0.0.0 4-5|0.1.0.0 3-4|0.1.0 2-3|0.1.0.1 1-2|0.1.0.2.0+0.1.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:10.654
# ::node	0	and	29-30
# ::node	0.0	reduce-01	19-20
# ::node	0.0.0	nation	33-34
# ::node	0.0.1	troop	18-19
# ::node	0.0.2	impose-01	16-17
# ::node	0.0.2.0	also	15-16
# ::node	0.0.2.1	18	36-37
# ::node	0.1	promise-01	30-31
# ::node	0.1.0	program	3-4
# ::node	0.1.0.0	intend-01	4-5
# ::node	0.1.0.0.0	force	9-10
# ::node	0.1.0.0.0.0	arm-01	8-9
# ::node	0.1.0.0.0.0.0	30	21-22
# ::node	0.1.0.0.0.1	fit-01	10-11
# ::node	0.1.0.1	reform-01	2-3
# ::node	0.1.0.1.0	democracy	13-14
# ::node	0.1.0.1.1	35	23-24
# ::node	0.1.0.2	government-organization	1-2
# ::node	0.1.0.2.0	govern-01	1-2
# ::node	0.1.1	monetary-quantity	25-26
# ::node	0.1.1.0	cent	25-26
# ::node	0.1.2	temporal-quantity	28-29
# ::node	0.1.2.0	2	27-28
# ::node	0.1.2.1	year	28-29
# ::node	0.1.3	temporal-quantity	39-40
# ::node	0.1.3.0	12	38-39
# ::node	0.1.3.1	month	39-40
# ::node	0.1.4	date-entity	41-42
# ::node	0.1.4.0	1991	41-42
# ::root	0	and
# ::edge	18	op1	impose-01	0.0.2.1	0.0.2	
# ::edge	and	op1	reduce-01	0	0.0	
# ::edge	and	op2	promise-01	0	0.1	
# ::edge	arm-01	ARG0	30	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	arm-01	ARG1	force	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	date-entity	year	1991	0.1.4	0.1.4.0	
# ::edge	fit-01	ARG1	force	0.1.0.0.0.1	0.1.0.0.0	
# ::edge	govern-01	ARG0	government-organization	0.1.0.2.0	0.1.0.2	
# ::edge	impose-01	ARG1	reduce-01	0.0.2	0.0	
# ::edge	impose-01	mod	also	0.0.2	0.0.2.0	
# ::edge	intend-01	ARG0	force	0.1.0.0	0.1.0.0.0	
# ::edge	intend-01	ARG1	program	0.1.0.0	0.1.0	
# ::edge	monetary-quantity	unit	cent	0.1.1	0.1.1.0	
# ::edge	program	mod	government-organization	0.1.0	0.1.0.2	
# ::edge	program	mod	reform-01	0.1.0	0.1.0.1	
# ::edge	promise-01	ARG0	program	0.1	0.1.0	
# ::edge	promise-01	ARG1	monetary-quantity	0.1	0.1.1	
# ::edge	promise-01	ARG3	temporal-quantity	0.1	0.1.2	
# ::edge	promise-01	duration	temporal-quantity	0.1	0.1.3	
# ::edge	promise-01	time	date-entity	0.1	0.1.4	
# ::edge	reduce-01	ARG0	nation	0.0	0.0.0	
# ::edge	reduce-01	ARG1	troop	0.0	0.0.1	
# ::edge	reform-01	ARG0	democracy	0.1.0.1	0.1.0.1.0	
# ::edge	reform-01	ARG1	35	0.1.0.1	0.1.0.1.1	
# ::edge	temporal-quantity	quant	12	0.1.3	0.1.3.0	
# ::edge	temporal-quantity	quant	2	0.1.2	0.1.2.0	
# ::edge	temporal-quantity	unit	month	0.1.3	0.1.3.1	
# ::edge	temporal-quantity	unit	year	0.1.2	0.1.2.1	
(a / and 
      :op1 (r / reduce-01 
            :ARG0 (n / nation) 
            :ARG1 (t3 / troop) 
            :ARG1-of (i / impose-01 
                  :mod (a2 / also) 
                  :op-of 18)) 
      :op2 (p / promise-01 
            :ARG0 (p2 / program 
                  :ARG1-of (i2 / intend-01 
                        :ARG0 (f2 / force 
                              :ARG1-of (a3 / arm-01 
                                    :ARG0 30) 
                              :ARG1-of (f / fit-01))) 
                  :mod (r2 / reform-01 
                        :ARG0 (d2 / democracy) 
                        :ARG1 35) 
                  :mod (g / government-organization 
                        :ARG0-of (g2 / govern-01))) 
            :ARG1 (m2 / monetary-quantity 
                  :unit (c / cent)) 
            :ARG3 (t2 / temporal-quantity 
                  :quant 2 
                  :unit (y / year)) 
            :duration (t / temporal-quantity 
                  :quant 12 
                  :unit (m / month)) 
            :time (d / date-entity 
                  :year 1991)))

# ::snt although there is little evidence of any physical threat to the strategic waterway the confrontation with general noriega promised to hinder the handover
# ::tok although there is little evidence of any physical threat to the strategic waterway the confrontation with general noriega promised to hinder the handover
# ::alignments 20-21|0 18-19|0.1 16-17|0.1.1.0.0 14-15|0.1.0 11-12|0.0 8-9|0.1.1.0 7-8|0.1.1.0.1 6-7|0.1.1.0.2 4-5|0.1.1 3-4|0.1.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:10.715
# ::node	0	hinder-01	20-21
# ::node	0.0	strategy	11-12
# ::node	0.1	promise-01	18-19
# ::node	0.1.0	confront-01	14-15
# ::node	0.1.1	evidence-01	4-5
# ::node	0.1.1.0	threaten-01	8-9
# ::node	0.1.1.0.0	general	16-17
# ::node	0.1.1.0.1	physical	7-8
# ::node	0.1.1.0.2	any	6-7
# ::node	0.1.1.1	little	3-4
# ::root	0	hinder-01
# ::edge	evidence-01	ARG0	threaten-01	0.1.1	0.1.1.0	
# ::edge	evidence-01	purpose	promise-01	0.1.1	0.1	
# ::edge	evidence-01	quant	little	0.1.1	0.1.1.1	
# ::edge	hinder-01	ARG1	strategy	0	0.0	
# ::edge	promise-01	ARG0	confront-01	0.1	0.1.0	
# ::edge	promise-01	ARG2	hinder-01	0.1	0	
# ::edge	threaten-01	ARG1	general	0.1.1.0	0.1.1.0.0	
# ::edge	threaten-01	mod	any	0.1.1.0	0.1.1.0.2	
# ::edge	threaten-01	mod	physical	0.1.1.0	0.1.1.0.1	
(h / hinder-01 
      :ARG1 (s / strategy) 
      :ARG2-of (p / promise-01 
            :ARG0 (c / confront-01) 
            :purpose-of (e / evidence-01 
                  :ARG0 (t / threaten-01 
                        :ARG1 (g / general) 
                        :mod (p2 / physical) 
                        :mod (a / any)) 
                  :quant (l / little))))

# ::snt no more tapping promise
# ::tok no more tapping promise
# ::alignments 3-4|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:10.719
# ::node	0	promise-01	3-4
# ::node	0.0	-	0-1
# ::root	0	promise-01
# ::edge	promise-01	ARG1	-	0	0.0	
(p / promise-01 
      :ARG1 (- / -))

# ::snt the seventh conference of the 102nation convention on international trade in endangered species which opens in lausanne today promises some lively debates particularly on orchids and ivory
# ::tok the seventh conference of the 102nation convention on international trade in endangered species which opens in lausanne today promises some lively debates particularly on orchids and ivory
# ::alignments 25-26|0.0.0.2.0.0.1 22-23|0.0.0.2.0.0.0.1 21-22|0.0.0.2.0.0.0 20-21|0.0.0.2.0.0.0.0 19-20|0.0.0.2.0.0.0.2 18-19|0.0.0.2.0.0 17-18|0.0.0.0.0 14-15|0.0.0.0 12-13|0.0 11-12|0 9-10|0.0.0 8-9|0.0.0.1 6-7|0.0.0.2 2-3|0.0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:11.018
# ::node	0	endanger-01	11-12
# ::node	0.0	species	12-13
# ::node	0.0.0	trade-01	9-10
# ::node	0.0.0.0	open-01	14-15
# ::node	0.0.0.0.0	today	17-18
# ::node	0.0.0.1	international	8-9
# ::node	0.0.0.2	convention	6-7
# ::node	0.0.0.2.0	conference	2-3
# ::node	0.0.0.2.0.0	promise-01	18-19
# ::node	0.0.0.2.0.0.0	debate-01	21-22
# ::node	0.0.0.2.0.0.0.0	lively	20-21
# ::node	0.0.0.2.0.0.0.1	particular	22-23
# ::node	0.0.0.2.0.0.0.2	some	19-20
# ::node	0.0.0.2.0.0.1	and	25-26
# ::root	0	endanger-01
# ::edge	conference	mod	convention	0.0.0.2.0	0.0.0.2	
# ::edge	convention	mod	trade-01	0.0.0.2	0.0.0	
# ::edge	debate-01	ARG0	lively	0.0.0.2.0.0.0	0.0.0.2.0.0.0.0	
# ::edge	debate-01	direction	particular	0.0.0.2.0.0.0	0.0.0.2.0.0.0.1	
# ::edge	debate-01	mod	some	0.0.0.2.0.0.0	0.0.0.2.0.0.0.2	
# ::edge	endanger-01	ARG1	species	0	0.0	
# ::edge	open-01	ARG0	trade-01	0.0.0.0	0.0.0	
# ::edge	open-01	ARG1	today	0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	ARG0	conference	0.0.0.2.0.0	0.0.0.2.0	
# ::edge	promise-01	ARG1	debate-01	0.0.0.2.0.0	0.0.0.2.0.0.0	
# ::edge	promise-01	ARG2	and	0.0.0.2.0.0	0.0.0.2.0.0.1	
# ::edge	trade-01	ARG1	species	0.0.0	0.0	
# ::edge	trade-01	mod	international	0.0.0	0.0.0.1	
(e / endanger-01 
      :ARG1 (s2 / species 
            :ARG1-of (t2 / trade-01 
                  :ARG0-of (o / open-01 
                        :ARG1 (t / today)) 
                  :mod (i / international) 
                  :mod-of (c / convention 
                        :mod-of (c2 / conference 
                              :ARG0-of (p2 / promise-01 
                                    :ARG1 (d / debate-01 
                                          :ARG0 (l / lively) 
                                          :direction (p / particular) 
                                          :mod (s / some)) 
                                    :ARG2 (a / and)))))))

# ::snt but any action will have to wait at least until the environment white paper which mr patten has promised for next autumn
# ::tok but any action will have to wait at least until the environment white paper which mr patten has promised for next autumn
# ::alignments 20-21|0.1.0 18-19|0.1.2.0 13-14|0.1.2 12-13|0.1.2.1 11-12|0.0 9-10|0.1.3 6-7|0.1 2-3|0.1.1 1-2|0.1.1.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:11.077
# ::node	0	contrast-01	0-1
# ::node	0.0	environment	11-12
# ::node	0.1	wait-01	6-7
# ::node	0.1.0	next	20-21
# ::node	0.1.1	action	2-3
# ::node	0.1.1.0	any	1-2
# ::node	0.1.2	paper	13-14
# ::node	0.1.2.0	promise-01	18-19
# ::node	0.1.2.1	white	12-13
# ::node	0.1.3	until	9-10
# ::root	0	contrast-01
# ::edge	action	mod	any	0.1.1	0.1.1.0	
# ::edge	contrast-01	ARG0	environment	0	0.0	
# ::edge	contrast-01	ARG2	wait-01	0	0.1	
# ::edge	paper	mod	white	0.1.2	0.1.2.1	
# ::edge	promise-01	ARG1	paper	0.1.2.0	0.1.2	
# ::edge	wait-01	ARG0	next	0.1	0.1.0	
# ::edge	wait-01	ARG1	action	0.1	0.1.1	
# ::edge	wait-01	medium	paper	0.1	0.1.2	
# ::edge	wait-01	time	until	0.1	0.1.3	
(c / contrast-01 
      :ARG0 (e / environment) 
      :ARG2 (w2 / wait-01 
            :ARG0 (n / next) 
            :ARG1 (a / action 
                  :mod (a2 / any)) 
            :medium (p2 / paper 
                  :ARG1-of (p / promise-01) 
                  :mod (w / white)) 
            :time (u / until)))

# ::snt he also promised a stormy meeting that when he came to sell his majority shareholding he would first negotiate with his fellow directors including amer midani before going to outsiders
# ::tok he also promised a stormy meeting that when he came to sell his majority shareholding he would first negotiate with his fellow directors including amer midani before going to outsiders
# ::alignments 29-30|0 26-27|0.0.0.0.1 22-23|0.0.0.1.0.0 21-22|0.0.0.1.0.0.0 18-19|0.0.0.1 15-16|0.0.0.1.0 13-14|0.0.0.2 11-12|0.0 8-9|0.0.0 5-6|0.0.0.0 2-3|0.0.0.0.0 1-2|0.0.0.0.0.1 0-1|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:11.434
# ::node	0	outsider	29-30
# ::node	0.0	sell-01	11-12
# ::node	0.0.0	he	8-9
# ::node	0.0.0.0	meet-03	5-6
# ::node	0.0.0.0.0	promise-01	2-3
# ::node	0.0.0.0.0.0	he	0-1
# ::node	0.0.0.0.0.1	also	1-2
# ::node	0.0.0.0.1	before	26-27
# ::node	0.0.0.1	negotiate-01	18-19
# ::node	0.0.0.1.0	he	15-16
# ::node	0.0.0.1.0.0	director	22-23
# ::node	0.0.0.1.0.0.0	fellow	21-22
# ::node	0.0.0.2	majority	13-14
# ::root	0	outsider
(o / outsider 
      :ARG1-of (s / sell-01 
            :ARG0 (h2 / he 
                  :ARG0-of (m2 / meet-03 
                        :ARG1-of (p / promise-01 
                              :ARG0 (h3 / he) 
                              :mod (a / also)) 
                        :time (b / before)) 
                  :ARG1-of (n / negotiate-01 
                        :ARG0 (h / he 
                              :poss-of (d / director 
                                    :mod (f / fellow)))) 
                  :part (m / majority))))

# ::snt the soviet yacht fazisi will be able to complete the next two legs of the whitbread roundtheworld race after a new zealand radio station promised to underwrite the yachts costs
# ::tok the soviet yacht fazisi will be able to complete the next two legs of the whitbread roundtheworld race after a new zealand radio station promised to underwrite the yachts costs
# ::alignments 29-30|0.1 28-29|0.1.0 24-25|0 23-24|0.3.0 22-23|0.3.0.0 20-21|0.3.0.1 18-19|0.3 17-18|0.0 12-13|0.3.2 11-12|0.2 10-11|0.3.2.0 8-9|0.3.1 6-7|0.3.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:11.798
# ::node	0	promise-01	24-25
# ::node	0.0	race	17-18
# ::node	0.1	cost-01	29-30
# ::node	0.1.0	yacht	28-29
# ::node	0.2	2	11-12
# ::node	0.3	after	18-19
# ::node	0.3.0	station	23-24
# ::node	0.3.0.0	radio	22-23
# ::node	0.3.0.1	new	20-21
# ::node	0.3.1	complete	8-9
# ::node	0.3.1.0	possible	6-7
# ::node	0.3.2	leg	12-13
# ::node	0.3.2.0	next	10-11
# ::root	0	promise-01
# ::edge	2	op1	promise-01	0.2	0	
# ::edge	after	op1	station	0.3	0.3.0	
# ::edge	after	op2	promise-01	0.3	0	
# ::edge	complete	time	after	0.3.1	0.3	
# ::edge	cost-01	mod	yacht	0.1	0.1.0	
# ::edge	leg	mod	next	0.3.2	0.3.2.0	
# ::edge	leg	time	after	0.3.2	0.3	
# ::edge	possible	domain	complete	0.3.1.0	0.3.1	
# ::edge	promise-01	ARG0	race	0	0.0	
# ::edge	promise-01	ARG1	cost-01	0	0.1	
# ::edge	station	mod	new	0.3.0	0.3.0.1	
# ::edge	station	mod	radio	0.3.0	0.3.0.0	
(p / promise-01 
      :ARG0 (r2 / race) 
      :ARG1 (c / cost-01 
            :mod (y / yacht)) 
      :op-of 2 
      :op-of (a / after 
            :op1 (s / station 
                  :mod (r / radio) 
                  :mod (n / new)) 
            :time-of (c2 / complete 
                  :domain-of (p2 / possible)) 
            :time-of (l / leg 
                  :mod (n2 / next))))

# ::snt   after all ive done all ive promised you
# ::tok after all ive done all ive promised you
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:11.799
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt as soon as we can gather up your things darling her mother promised
# ::tok as soon as we can gather up your things darling her mother promised
# ::alignments 12-13|0 11-12|0.0.0+0.0 9-10|0.1.1 8-9|0.1.1.0 5-6|0.1 4-5|0.1.2 3-4|0.1.0 1-2|0.1.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:11.912
# ::node	0	promise-01	12-13
# ::node	0.0	have-rel-role-91	11-12
# ::node	0.0.0	mother	11-12
# ::node	0.1	gather-01	5-6
# ::node	0.1.0	we	3-4
# ::node	0.1.1	darling	9-10
# ::node	0.1.1.0	thing	8-9
# ::node	0.1.2	possible	4-5
# ::node	0.1.2.0	soon	1-2
# ::root	0	promise-01
# ::edge	darling	poss	thing	0.1.1	0.1.1.0	
# ::edge	gather-01	ARG0	we	0.1	0.1.0	
# ::edge	gather-01	ARG1	darling	0.1	0.1.1	
# ::edge	have-rel-role-91	ARG2	mother	0.0	0.0.0	
# ::edge	possible	domain	gather-01	0.1.2	0.1	
# ::edge	possible	mod	soon	0.1.2	0.1.2.0	
# ::edge	promise-01	ARG1	have-rel-role-91	0	0.0	
# ::edge	promise-01	condition	gather-01	0	0.1	
(p / promise-01 
      :ARG1 (h / have-rel-role-91 
            :ARG2 (m / mother)) 
      :condition (g / gather-01 
            :ARG0 (w / we) 
            :ARG1 (d / darling 
                  :poss (t / thing)) 
            :domain-of (p2 / possible 
                  :mod (s / soon))))

# ::snt mr carlos menem who optimistically promised he would lead argentina out of its economic wilderness will get the chance to prove his worth when he is sworn in as president tomorrow
# ::tok mr carlos menem who optimistically promised he would lead argentina out of its economic wilderness will get the chance to prove his worth when he is sworn in as president tomorrow
# ::alignments 30-31|0.1.0.0.0.0 29-30|0.1.0.1+0.1.0 26-27|0.1.0.0.0 24-25|0.1.0.0 22-23|0.1.0.0.0.1.0 20-21|0.1.0.0.0.1 18-19|0.1.0.0.0.1.2 13-14|0.1.0.0.0.1.1 9-10|0.1.1.0+0.1.1+0.1 6-7|0.0 5-6|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:12.046
# ::node	0	promise-01	5-6
# ::node	0.0	he	6-7
# ::node	0.1	country	9-10
# ::node	0.1.0	have-org-role-91	29-30
# ::node	0.1.0.0	he	24-25
# ::node	0.1.0.0.0	swear-01	26-27
# ::node	0.1.0.0.0.0	tomorrow	30-31
# ::node	0.1.0.0.0.1	prove-01	20-21
# ::node	0.1.0.0.0.1.0	worth	22-23
# ::node	0.1.0.0.0.1.1	economy	13-14
# ::node	0.1.0.0.0.1.2	chance	18-19
# ::node	0.1.0.1	president	29-30
# ::node	0.1.1	name	9-10
# ::node	0.1.1.0	"Argentina"	9-10
# ::root	0	promise-01
# ::edge	chance	topic	prove-01	0.1.0.0.0.1.2	0.1.0.0.0.1	
# ::edge	country	name	name	0.1	0.1.1	
# ::edge	have-org-role-91	ARG0	he	0.1.0	0.1.0.0	
# ::edge	have-org-role-91	ARG1	country	0.1.0	0.1	
# ::edge	have-org-role-91	ARG2	president	0.1.0	0.1.0.1	
# ::edge	name	op1	"Argentina"	0.1.1	0.1.1.0	
# ::edge	promise-01	ARG0	he	0	0.0	
# ::edge	promise-01	ARG1	country	0	0.1	
# ::edge	prove-01	ARG1	worth	0.1.0.0.0.1	0.1.0.0.0.1.0	
# ::edge	prove-01	location	economy	0.1.0.0.0.1	0.1.0.0.0.1.1	
# ::edge	prove-01	time	swear-01	0.1.0.0.0.1	0.1.0.0.0	
# ::edge	swear-01	ARG1	he	0.1.0.0.0	0.1.0.0	
# ::edge	swear-01	time	tomorrow	0.1.0.0.0	0.1.0.0.0.0	
(p3 / promise-01 
      :ARG0 (h3 / he) 
      :ARG1 (c2 / country 
            :ARG1-of (h / have-org-role-91 
                  :ARG0 (h2 / he 
                        :ARG1-of (s / swear-01 
                              :time (t / tomorrow) 
                              :time-of (p2 / prove-01 
                                    :ARG1 (w / worth) 
                                    :location (e / economy) 
                                    :topic-of (c / chance)))) 
                  :ARG2 (p / president)) 
            :name (n / name 
                  :op1 "Argentina")))

# ::snt the winner of columbias presidential election has promised to continue the war against the countrys drugs cartels
# ::tok the winner of columbias presidential election has promised to continue the war against the countrys drugs cartels
# ::alignments 16-17|0.1.0.0 15-16|0.1.0.0.1 11-12|0.1.0 9-10|0.1 7-8|0 5-6|0.0 4-5|0.1.0.0.0.0+0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:12.077
# ::node	0	promise-01	7-8
# ::node	0.0	elect-01	5-6
# ::node	0.1	continue-01	9-10
# ::node	0.1.0	war	11-12
# ::node	0.1.0.0	cartel	16-17
# ::node	0.1.0.0.0	have-org-role-91	4-5
# ::node	0.1.0.0.0.0	president	4-5
# ::node	0.1.0.0.1	drug	15-16
# ::root	0	promise-01
# ::edge	cartel	mod	drug	0.1.0.0	0.1.0.0.1	
# ::edge	continue-01	ARG1	war	0.1	0.1.0	
# ::edge	have-org-role-91	ARG1	cartel	0.1.0.0.0	0.1.0.0	
# ::edge	have-org-role-91	ARG2	president	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	promise-01	ARG0	elect-01	0	0.0	
# ::edge	promise-01	ARG1	continue-01	0	0.1	
# ::edge	war	location	cartel	0.1.0	0.1.0.0	
(p / promise-01 
      :ARG0 (e / elect-01) 
      :ARG1 (c2 / continue-01 
            :ARG1 (w / war 
                  :location (c / cartel 
                        :ARG1-of (h / have-org-role-91 
                              :ARG2 (p2 / president)) 
                        :mod (d / drug)))))

# ::snt was rush barricading himself in  henry imagined the noise growing in volume the creaks thumps and rattles coalescing fusing until in the dawn rush would as he had promised start to grind
# ::tok was rush barricading himself in henry imagined the noise growing in volume the creaks thumps and rattles coalescing fusing until in the dawn rush would as he had promised start to grind
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:12.078
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the taylor inquiry report on crowd safety for example promises a new direction for the game though there is little mention of the corroding nationalism which infects english support
# ::tok the taylor inquiry report on crowd safety for example promises a new direction for the game though there is little mention of the corroding nationalism which infects english support
# ::alignments 28-29|0.0.0.2 27-28|0.0.0.2.1.0.0+0.0.0.2.1.0+0.0.0.2.1 24-25|0.0.0.2.0 20-21|0.0.0.2.0.0 19-20|0.0.0.2.0.0.0 15-16|0.2 12-13|0.1 11-12|0.1.0 9-10|0 8-9|0.0.0.0 6-7|0.0.0 5-6|0.0.0.1 3-4|0.0 2-3|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:12.432
# ::node	0	promise-01	9-10
# ::node	0.0	report	3-4
# ::node	0.0.0	safe-41	6-7
# ::node	0.0.0.0	example	8-9
# ::node	0.0.0.1	crowd	5-6
# ::node	0.0.0.2	support-01	28-29
# ::node	0.0.0.2.0	nationalism	24-25
# ::node	0.0.0.2.0.0	mention-01	20-21
# ::node	0.0.0.2.0.0.0	little	19-20
# ::node	0.0.0.2.1	language	27-28
# ::node	0.0.0.2.1.0	name	27-28
# ::node	0.0.0.2.1.0.0	"English"	27-28
# ::node	0.0.1	inquire-01	2-3
# ::node	0.1	direction	12-13
# ::node	0.1.0	new	11-12
# ::node	0.2	game	15-16
# ::root	0	promise-01
# ::edge	direction	mod	new	0.1	0.1.0	
# ::edge	language	name	name	0.0.0.2.1	0.0.0.2.1.0	
# ::edge	mention-01	ARG1	nationalism	0.0.0.2.0.0	0.0.0.2.0	
# ::edge	mention-01	mod	little	0.0.0.2.0.0	0.0.0.2.0.0.0	
# ::edge	name	op1	"English"	0.0.0.2.1.0	0.0.0.2.1.0.0	
# ::edge	promise-01	ARG0	report	0	0.0	
# ::edge	promise-01	ARG1	direction	0	0.1	
# ::edge	promise-01	time	game	0	0.2	
# ::edge	report	topic	inquire-01	0.0	0.0.1	
# ::edge	report	topic	safe-41	0.0	0.0.0	
# ::edge	safe-41	ARG0	example	0.0.0	0.0.0.0	
# ::edge	safe-41	ARG1	crowd	0.0.0	0.0.0.1	
# ::edge	support-01	ARG0	nationalism	0.0.0.2	0.0.0.2.0	
# ::edge	support-01	ARG1	safe-41	0.0.0.2	0.0.0	
# ::edge	support-01	manner	language	0.0.0.2	0.0.0.2.1	
(p / promise-01 
      :ARG0 (r / report 
            :topic (s2 / safe-41 
                  :ARG0 (e / example) 
                  :ARG1 (c / crowd) 
                  :ARG1-of (s / support-01 
                        :ARG0 (n2 / nationalism 
                              :ARG1-of (m / mention-01 
                                    :mod (l2 / little))) 
                        :manner (l / language 
                              :name (n / name 
                                    :op1 "English")))) 
            :topic (i / inquire-01)) 
      :ARG1 (d / direction 
            :mod (n3 / new)) 
      :time (g / game))

# ::snt looking at this from another perspective one sees mikhail gorbachev himself begging believers to help him in the lagging perestroika process promising them in return a new law guaranteeing religious liberty
# ::tok looking at this from another perspective one sees mikhail gorbachev himself begging believers to help him in the lagging perestroika process promising them in return a new law guaranteeing religious liberty
# ::alignments 30-31|0.2.1.0.0.0.0 28-29|0.2.1.0.0.0 27-28|0.2.1.0.0 26-27|0.2.1.0.0.1 21-22|0 20-21|0.1 18-19|0.1.0 14-15|0.2 12-13|0.2.2 11-12|0.2.1 7-8|0.2.1.0 5-6|0.0 4-5|0.0.0 2-3|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:12.732
# ::node	0	promise-01	21-22
# ::node	0.0	perspective	5-6
# ::node	0.0.0	another	4-5
# ::node	0.1	process	20-21
# ::node	0.1.0	lag-01	18-19
# ::node	0.2	help-01	14-15
# ::node	0.2.0	this	2-3
# ::node	0.2.1	beg-01	11-12
# ::node	0.2.1.0	see-01	7-8
# ::node	0.2.1.0.0	law	27-28
# ::node	0.2.1.0.0.0	guarantee-01	28-29
# ::node	0.2.1.0.0.0.0	liberty	30-31
# ::node	0.2.1.0.0.1	new	26-27
# ::node	0.2.2	believe-01	12-13
# ::root	0	promise-01
# ::edge	beg-01	ARG1	help-01	0.2.1	0.2	
# ::edge	believe-01	ARG1	help-01	0.2.2	0.2	
# ::edge	guarantee-01	ARG0	law	0.2.1.0.0.0	0.2.1.0.0	
# ::edge	guarantee-01	ARG1	liberty	0.2.1.0.0.0	0.2.1.0.0.0.0	
# ::edge	help-01	ARG0	this	0.2	0.2.0	
# ::edge	help-01	ARG1	promise-01	0.2	0	
# ::edge	lag-01	ARG1	process	0.1.0	0.1	
# ::edge	law	mod	new	0.2.1.0.0	0.2.1.0.0.1	
# ::edge	perspective	mod	another	0.0	0.0.0	
# ::edge	promise-01	ARG0	perspective	0	0.0	
# ::edge	promise-01	ARG1	process	0	0.1	
# ::edge	see-01	ARG0	law	0.2.1.0	0.2.1.0.0	
# ::edge	see-01	ARG1	beg-01	0.2.1.0	0.2.1	
(p / promise-01 
      :ARG0 (p3 / perspective 
            :mod (a / another)) 
      :ARG1 (p2 / process 
            :ARG1-of (l3 / lag-01)) 
      :ARG1-of (h / help-01 
            :ARG0 (t / this) 
            :ARG1-of (b2 / beg-01 
                  :ARG1-of (s / see-01 
                        :ARG0 (l2 / law 
                              :ARG0-of (g / guarantee-01 
                                    :ARG1 (l / liberty)) 
                              :mod (n / new)))) 
            :ARG1-of (b / believe-01)))

# ::snt most of the remainder goes on the salaries of civil servants and recurrent expenditure leaving very little for the ambitious development schemes she has promised the electorate
# ::tok most of the remainder goes on the salaries of civil servants and recurrent expenditure leaving very little for the ambitious development schemes she has promised the electorate
# ::alignments 26-27|0.2 24-25|0 22-23|0.0 21-22|0.1 20-21|0.1.1 19-20|0.1.1.0 16-17|0.1.1.1 15-16|0.1.1.1.0 14-15|0.1.2 13-14|0.1.2.0.2 11-12|0.1.2.0 10-11|0.1.2.0.1.0+0.1.2.0.1 9-10|0.1.2.0.1.1 7-8|0.1.2.0.0 3-4|0.1.0.0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:13.448
# ::node	0	promise-01	24-25
# ::node	0.0	she	22-23
# ::node	0.1	scheme-01	21-22
# ::node	0.1.0	most	0-1
# ::node	0.1.0.0	remainder	3-4
# ::node	0.1.1	develop-02	20-21
# ::node	0.1.1.0	ambitious	19-20
# ::node	0.1.1.1	little	16-17
# ::node	0.1.1.1.0	very	15-16
# ::node	0.1.2	leave-01	14-15
# ::node	0.1.2.0	and	11-12
# ::node	0.1.2.0.0	salary	7-8
# ::node	0.1.2.0.1	person	10-11
# ::node	0.1.2.0.1.0	serve-02	10-11
# ::node	0.1.2.0.1.1	civil	9-10
# ::node	0.1.2.0.2	expend-01	13-14
# ::node	0.2	electorate	26-27
# ::root	0	promise-01
# ::edge	and	op1	salary	0.1.2.0	0.1.2.0.0	
# ::edge	and	op2	person	0.1.2.0	0.1.2.0.1	
# ::edge	and	op3	expend-01	0.1.2.0	0.1.2.0.2	
# ::edge	develop-02	ARG1	ambitious	0.1.1	0.1.1.0	
# ::edge	leave-01	ARG0	and	0.1.2	0.1.2.0	
# ::edge	leave-01	ARG1	scheme-01	0.1.2	0.1	
# ::edge	little	degree	very	0.1.1.1	0.1.1.1.0	
# ::edge	little	time	develop-02	0.1.1.1	0.1.1	
# ::edge	person	mod	civil	0.1.2.0.1	0.1.2.0.1.1	
# ::edge	promise-01	ARG0	she	0	0.0	
# ::edge	promise-01	ARG1	scheme-01	0	0.1	
# ::edge	promise-01	ARG2	electorate	0	0.2	
# ::edge	remainder	quant	most	0.1.0.0	0.1.0	
# ::edge	scheme-01	ARG0	most	0.1	0.1.0	
# ::edge	scheme-01	ARG1	develop-02	0.1	0.1.1	
# ::edge	serve-02	ARG0	person	0.1.2.0.1.0	0.1.2.0.1	
(p / promise-01 
      :ARG0 (s / she) 
      :ARG1 (s2 / scheme-01 
            :ARG0 (m / most 
                  :quant-of (r / remainder)) 
            :ARG1 (d / develop-02 
                  :ARG1 (a / ambitious) 
                  :time-of (l / little 
                        :degree (v / very))) 
            :ARG1-of (l2 / leave-01 
                  :ARG0 (a2 / and 
                        :op1 (s4 / salary) 
                        :op2 (p2 / person 
                              :ARG0-of (s3 / serve-02) 
                              :mod (c / civil)) 
                        :op3 (e2 / expend-01)))) 
      :ARG2 (e / electorate))

# ::snt but a vorkuta strike committee spokesman said yesterday that extra food promised by the government was not reaching the miners
# ::tok but a vorkuta strike committee spokesman said yesterday that extra food promised by the government was not reaching the miners
# ::alignments 19-20|0.1.1.0+0.1.1 17-18|0.1 11-12|0.1.0.0 10-11|0.1.0 9-10|0.1.0.1 7-8|0.3 6-7|0 5-6|0.0.0.0+0.0.0 4-5|0.0 3-4|0.0.1 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:13.514
# ::node	0	say-01	6-7
# ::node	0.0	committee	4-5
# ::node	0.0.0	have-org-role-91	5-6
# ::node	0.0.0.0	spokesman	5-6
# ::node	0.0.1	strike-01	3-4
# ::node	0.1	reach-01	17-18
# ::node	0.1.0	food	10-11
# ::node	0.1.0.0	promise-01	11-12
# ::node	0.1.0.1	extra	9-10
# ::node	0.1.1	person	19-20
# ::node	0.1.1.0	mine-01	19-20
# ::node	0.2	contrast-01	0-1
# ::node	0.3	yesterday	7-8
# ::root	0	say-01
# ::edge	committee	mod	strike-01	0.0	0.0.1	
# ::edge	contrast-01	ARG1	say-01	0.2	0	
# ::edge	food	mod	extra	0.1.0	0.1.0.1	
# ::edge	have-org-role-91	ARG1	committee	0.0.0	0.0	
# ::edge	have-org-role-91	ARG2	spokesman	0.0.0	0.0.0.0	
# ::edge	mine-01	ARG0	person	0.1.1.0	0.1.1	
# ::edge	promise-01	ARG1	food	0.1.0.0	0.1.0	
# ::edge	reach-01	ARG0	food	0.1	0.1.0	
# ::edge	reach-01	ARG1	person	0.1	0.1.1	
# ::edge	say-01	ARG0	committee	0	0.0	
# ::edge	say-01	ARG1	reach-01	0	0.1	
# ::edge	say-01	time	yesterday	0	0.3	
(s / say-01 
      :ARG0 (c / committee 
            :ARG1-of (h / have-org-role-91 
                  :ARG2 (s2 / spokesman)) 
            :mod (s3 / strike-01)) 
      :ARG1 (r / reach-01 
            :ARG0 (f / food 
                  :ARG1-of (p2 / promise-01) 
                  :mod (e / extra)) 
            :ARG1 (p / person 
                  :ARG0-of (m / mine-01))) 
      :ARG1-of (c2 / contrast-01) 
      :time (y / yesterday))

# ::snt the government has promised to convene a national congress involving interest groups of all political persuasions early next year to draft a new constitution
# ::tok the government has promised to convene a national congress involving interest groups of all political persuasions early next year to draft a new constitution
# ::alignments 23-24|0.0.0.1.0 22-23|0.0.0.1.0.0 20-21|0.0.0.1 18-19|0.0.0.2 17-18|0.0.0.2.0 16-17|0.0.0.2.1 14-15|0.0.0.0.0.0 13-14|0.0.0.0.0.1.0 11-12|0.0 10-11|0 9-10|0.0.0 8-9|0.0.0.0.2.0+0.0.0.0.2+0.0.0.0 7-8|0.0.0.0.1 5-6|0.0.0.0.0 3-4|0.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:14.025
# ::node	0	interest-01	10-11
# ::node	0.0	group	11-12
# ::node	0.0.0	involve-01	9-10
# ::node	0.0.0.0	government-organization	8-9
# ::node	0.0.0.0.0	convene-01	5-6
# ::node	0.0.0.0.0.0	politics	14-15
# ::node	0.0.0.0.0.1	promise-01	3-4
# ::node	0.0.0.0.0.1.0	all	13-14
# ::node	0.0.0.0.1	nation	7-8
# ::node	0.0.0.0.2	name	8-9
# ::node	0.0.0.0.2.0	"Congress"	8-9
# ::node	0.0.0.1	draft-01	20-21
# ::node	0.0.0.1.0	constitution	23-24
# ::node	0.0.0.1.0.0	new	22-23
# ::node	0.0.0.2	year	18-19
# ::node	0.0.0.2.0	next	17-18
# ::node	0.0.0.2.1	early	16-17
# ::root	0	interest-01
(i / interest-01 
      :mod-of (g / group 
            :ARG1-of (i2 / involve-01 
                  :ARG0 (g2 / government-organization 
                        :ARG1-of (c2 / convene-01 
                              :ARG0 (p / politics) 
                              :ARG1-of (p2 / promise-01 
                                    :ARG0 (a / all))) 
                        :mod (n4 / nation) 
                        :name (n3 / name 
                              :op1 "Congress")) 
                  :ARG2 (d / draft-01 
                        :ARG1 (c / constitution 
                              :mod (n / new))) 
                  :time (y / year 
                        :mod (n2 / next) 
                        :op-of (e / early)))))

# ::snt the sites owners hanson plc promised to preserve the site to spare it from the two perennial dangers of the era dash
# ::tok the sites owners hanson plc promised to preserve the site to spare it from the two perennial dangers of the era dash
# ::alignments 20-21|0.1 17-18|0.2.1.1 15-16|0.2.1.1.0 12-13|0.2.1.0 11-12|0.2.1 9-10|0.2.0 7-8|0.2 5-6|0 2-3|0.0.0+0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:14.180
# ::node	0	promise-01	5-6
# ::node	0.0	person	2-3
# ::node	0.0.0	own-01	2-3
# ::node	0.0.1	site	1-2
# ::node	0.1	era	20-21
# ::node	0.2	preserve-01	7-8
# ::node	0.2.0	site	9-10
# ::node	0.2.1	spare-02	11-12
# ::node	0.2.1.0	it	12-13
# ::node	0.2.1.1	danger	17-18
# ::node	0.2.1.1.0	2	15-16
# ::root	0	promise-01
# ::edge	danger	quant	2	0.2.1.1	0.2.1.1.0	
# ::edge	own-01	ARG0	person	0.0.0	0.0	
# ::edge	person	mod	site	0.0	0.0.1	
# ::edge	preserve-01	ARG1	site	0.2	0.2.0	
# ::edge	preserve-01	purpose	spare-02	0.2	0.2.1	
# ::edge	promise-01	ARG0	person	0	0.0	
# ::edge	promise-01	ARG1	era	0	0.1	
# ::edge	promise-01	ARG2	preserve-01	0	0.2	
# ::edge	spare-02	ARG1	it	0.2.1	0.2.1.0	
# ::edge	spare-02	ARG2	danger	0.2.1	0.2.1.1	
(p2 / promise-01 
      :ARG0 (p3 / person 
            :ARG0-of (o / own-01) 
            :mod (s3 / site)) 
      :ARG1 (e / era) 
      :ARG2 (p / preserve-01 
            :ARG1 (s2 / site) 
            :purpose (s / spare-02 
                  :ARG1 (i / it) 
                  :ARG2 (d / danger 
                        :quant 2))))

# ::snt  mr gorbachev promised that 10billion roubles 10000million would be found to import consumer goods despite the scarcity of foreign exchange
# ::tok mr gorbachev promised that 10billion roubles 10000million would be found to import consumer goods despite the scarcity of foreign exchange
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:14.181
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt this thursday you must promise yourself to start keeping notes on important issues and to keep your finger on the pulse of your income and expenditure
# ::tok this thursday you must promise yourself to start keeping notes on important issues and to keep your finger on the pulse of your income and expenditure
# ::alignments 25-26|0.2 24-25|0 23-24|0.1.1 20-21|0.1 17-18|0.1.0 13-14|0.0.2 12-13|0.0.0.0 11-12|0.0.0.0.0 9-10|0.0.0 7-8|0.0 4-5|0.0.1 2-3|0.0.1.0 0-1|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:14.360
# ::node	0	and	24-25
# ::node	0.0	start-01	7-8
# ::node	0.0.0	note	9-10
# ::node	0.0.0.0	issue	12-13
# ::node	0.0.0.0.0	important	11-12
# ::node	0.0.1	promise-01	4-5
# ::node	0.0.1.0	you	2-3
# ::node	0.0.2	and	13-14
# ::node	0.1	pulse	20-21
# ::node	0.1.0	finger	17-18
# ::node	0.1.1	income	23-24
# ::node	0.2	expend-01	25-26
# ::node	0.2.0	this	0-1
# ::root	0	and
# ::edge	and	op1	start-01	0	0.0	
# ::edge	and	op1	start-01	0.0.2	0.0	
# ::edge	and	op2	pulse	0	0.1	
# ::edge	and	op3	expend-01	0	0.2	
# ::edge	expend-01	ARG1	this	0.2	0.2.0	
# ::edge	finger	location	pulse	0.1.0	0.1	
# ::edge	income	part	pulse	0.1.1	0.1	
# ::edge	issue	mod	important	0.0.0.0	0.0.0.0.0	
# ::edge	note	source	issue	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG0	you	0.0.1	0.0.1.0	
# ::edge	promise-01	ARG1	start-01	0.0.1	0.0	
# ::edge	start-01	ARG1	note	0.0	0.0.0	
(a / and 
      :op1 (s / start-01 
            :ARG1 (n / note 
                  :source (i2 / issue 
                        :mod (i3 / important))) 
            :ARG1-of (p2 / promise-01 
                  :ARG0 (y / you)) 
            :op-of (a2 / and)) 
      :op2 (p / pulse 
            :location-of (f / finger) 
            :part-of (i / income)) 
      :op3 (e / expend-01 
            :ARG1 (t / this)))

# ::snt he appointed a transitional administration and promised elections in august
# ::tok he appointed a transitional administration and promised elections in august
# ::alignments 9-10|0.1.2.0+0.1.2 7-8|0.1.1 6-7|0.1 5-6|0 4-5|0.1.0 1-2|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:14.384
# ::node	0	and	5-6
# ::node	0.0	appoint-01	1-2
# ::node	0.0.0	he	0-1
# ::node	0.1	promise-01	6-7
# ::node	0.1.0	administrate-01	4-5
# ::node	0.1.1	elect-01	7-8
# ::node	0.1.2	date-entity	9-10
# ::node	0.1.2.0	8	9-10
# ::root	0	and
# ::edge	and	op1	appoint-01	0	0.0	
# ::edge	and	op2	promise-01	0	0.1	
# ::edge	appoint-01	ARG0	he	0.0	0.0.0	
# ::edge	date-entity	month	8	0.1.2	0.1.2.0	
# ::edge	promise-01	ARG1	administrate-01	0.1	0.1.0	
# ::edge	promise-01	ARG2	elect-01	0.1	0.1.1	
# ::edge	promise-01	time	date-entity	0.1	0.1.2	
(a / and 
      :op1 (a3 / appoint-01 
            :ARG0 (h / he)) 
      :op2 (p / promise-01 
            :ARG1 (a2 / administrate-01) 
            :ARG2 (e / elect-01) 
            :time (d / date-entity 
                  :month 8)))

# ::snt an unemployed father of four claims he is owed more than 450 by southern electric which he says has been promising the money since february but still not paid out
# ::tok an unemployed father of four claims he is owed more than 450 by southern electric which he says has been promising the money since february but still not paid out
# ::alignments 28-29|0.0.0.1.0 26-27|0.0.0.1.0.1 25-26|0.0.0.1 24-25|0.0.0.2.0.0+0.0.0.2.0 23-24|0.0.0.2 22-23|0.0.0.0 20-21|0.0.0 17-18|0 16-17|0.0 14-15|0.1 13-14|0.1.1 11-12|0.0.0.1.0.0 8-9|0.1.0 6-7|0.1.0.0 5-6|0.1.0.1 4-5|0.1.0.1.1 2-3|0.1.0.1.0.1+0.1.0.1.0 1-2|0.1.0.1.0.0.0+0.1.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:15.178
# ::node	0	say-01	17-18
# ::node	0.0	he	16-17
# ::node	0.0.0	promise-01	20-21
# ::node	0.0.0.0	money	22-23
# ::node	0.0.0.1	contrast-01	25-26
# ::node	0.0.0.1.0	pay-01	28-29
# ::node	0.0.0.1.0.0	450	11-12
# ::node	0.0.0.1.0.1	still	26-27
# ::node	0.0.0.2	since	23-24
# ::node	0.0.0.2.0	date-entity	24-25
# ::node	0.0.0.2.0.0	2	24-25
# ::node	0.1	electric	14-15
# ::node	0.1.0	owe-01	8-9
# ::node	0.1.0.0	he	6-7
# ::node	0.1.0.1	claim-01	5-6
# ::node	0.1.0.1.0	have-rel-role-91	2-3
# ::node	0.1.0.1.0.0	person	1-2
# ::node	0.1.0.1.0.0.0	employ-01	1-2
# ::node	0.1.0.1.0.1	father	2-3
# ::node	0.1.0.1.1	4	4-5
# ::node	0.1.1	south	13-14
# ::root	0	say-01
# ::edge	claim-01	quant	4	0.1.0.1	0.1.0.1.1	
# ::edge	contrast-01	ARG1	promise-01	0.0.0.1	0.0.0	
# ::edge	contrast-01	ARG2	pay-01	0.0.0.1	0.0.0.1.0	
# ::edge	date-entity	month	2	0.0.0.2.0	0.0.0.2.0.0	
# ::edge	electric	mod	south	0.1	0.1.1	
# ::edge	employ-01	ARG1	person	0.1.0.1.0.0.0	0.1.0.1.0.0	
# ::edge	have-rel-role-91	ARG0	person	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	have-rel-role-91	ARG1	claim-01	0.1.0.1.0	0.1.0.1	
# ::edge	have-rel-role-91	ARG2	father	0.1.0.1.0	0.1.0.1.0.1	
# ::edge	owe-01	ARG0	he	0.1.0	0.1.0.0	
# ::edge	owe-01	ARG1	claim-01	0.1.0	0.1.0.1	
# ::edge	owe-01	ARG2	electric	0.1.0	0.1	
# ::edge	pay-01	ARG1	450	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	pay-01	time	still	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	promise-01	ARG0	he	0.0.0	0.0	
# ::edge	promise-01	ARG1	money	0.0.0	0.0.0.0	
# ::edge	promise-01	time	since	0.0.0	0.0.0.2	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	electric	0	0.1	
# ::edge	since	op1	date-entity	0.0.0.2	0.0.0.2.0	
(s3 / say-01 
      :ARG0 (h / he 
            :ARG0-of (p2 / promise-01 
                  :ARG1 (m / money) 
                  :ARG1-of (c / contrast-01 
                        :ARG2 (p / pay-01 
                              :ARG1 450 
                              :time (s / still))) 
                  :time (s2 / since 
                        :op1 (d / date-entity 
                              :month 2)))) 
      :ARG1 (e / electric 
            :ARG2-of (o / owe-01 
                  :ARG0 (h2 / he) 
                  :ARG1 (c2 / claim-01 
                        :ARG1-of (h3 / have-rel-role-91 
                              :ARG0 (p3 / person 
                                    :ARG1-of (e2 / employ-01)) 
                              :ARG2 (f / father)) 
                        :quant 4)) 
            :mod (s4 / south)))

# ::snt although guarantees against losses in share transactions are prohibited under japanese law daiwa officials said no laws were broken because brokers did not promise to underwrite losses as a means of obtaining business
# ::tok although guarantees against losses in share transactions are prohibited under japanese law daiwa officials said no laws were broken because brokers did not promise to underwrite losses as a means of obtaining business
# ::alignments 32-33|0.0.1.0.0 31-32|0.0.1.0 29-30|0.0.1 23-24|0.0 20-21|0.0.0 19-20|0 18-19|0.1 16-17|0.1.1 15-16|0.1.3 14-15|0.1.2 13-14|0.1.0.0.0.0+0.1.0.0.0 11-12|0.1.0 8-9|0.1.0.0 6-7|0.1.0.0.1.0 5-6|0.1.0.0.1.0.0 1-2|0.1.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:15.590
# ::node	0	cause-01	19-20
# ::node	0.0	promise-01	23-24
# ::node	0.0.0	broker	20-21
# ::node	0.0.1	mean-01	29-30
# ::node	0.0.1.0	obtain-01	31-32
# ::node	0.0.1.0.0	business	32-33
# ::node	0.1	break-01	18-19
# ::node	0.1.0	law	11-12
# ::node	0.1.0.0	prohibit-01	8-9
# ::node	0.1.0.0.0	have-org-role-91	13-14
# ::node	0.1.0.0.0.0	official	13-14
# ::node	0.1.0.0.1	guarantee-01	1-2
# ::node	0.1.0.0.1.0	transact-01	6-7
# ::node	0.1.0.0.1.0.0	share-01	5-6
# ::node	0.1.1	law	16-17
# ::node	0.1.2	say-01	14-15
# ::node	0.1.3	-	15-16
# ::root	0	cause-01
# ::edge	break-01	ARG0	law	0.1	0.1.0	
# ::edge	break-01	ARG1	law	0.1	0.1.1	
# ::edge	break-01	polarity	-	0.1	0.1.3	
# ::edge	cause-01	ARG0	promise-01	0	0.0	
# ::edge	cause-01	ARG1	break-01	0	0.1	
# ::edge	guarantee-01	ARG2	transact-01	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	have-org-role-91	ARG2	official	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	obtain-01	ARG0	mean-01	0.0.1.0	0.0.1	
# ::edge	obtain-01	ARG1	business	0.0.1.0	0.0.1.0.0	
# ::edge	prohibit-01	ARG0	have-org-role-91	0.1.0.0	0.1.0.0.0	
# ::edge	prohibit-01	ARG1	guarantee-01	0.1.0.0	0.1.0.0.1	
# ::edge	prohibit-01	ARG2	law	0.1.0.0	0.1.0	
# ::edge	promise-01	ARG0	broker	0.0	0.0.0	
# ::edge	promise-01	ARG1	mean-01	0.0	0.0.1	
# ::edge	say-01	ARG1	break-01	0.1.2	0.1	
# ::edge	transact-01	ARG1	share-01	0.1.0.0.1.0	0.1.0.0.1.0.0	
(c / cause-01 
      :ARG0 (p / promise-01 
            :ARG0 (b2 / broker) 
            :ARG1 (m / mean-01 
                  :ARG0-of (o / obtain-01 
                        :ARG1 (b / business)))) 
      :ARG1 (b3 / break-01 
            :ARG0 (l2 / law 
                  :ARG2-of (p2 / prohibit-01 
                        :ARG0 (h / have-org-role-91 
                              :ARG2 (o2 / official)) 
                        :ARG1 (g / guarantee-01 
                              :ARG2 (t / transact-01 
                                    :ARG1 (s2 / share-01))))) 
            :ARG1 (l / law) 
            :ARG1-of (s / say-01) 
            :polarity (- / -)))

# ::snt   like the other good things promised in paris this weekend it may sound better in the telling
# ::tok like the other good things promised in paris this weekend it may sound better in the telling
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:15.591
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the government has promised an extra 30m next year to implement the provisions particularly to fund the training of environmental health and trading standards officers
# ::tok the government has promised an extra 30m next year to implement the provisions particularly to fund the training of environmental health and trading standards officers
# ::alignments 24-25|0.1.1.0.0.1.0.0+0.1.1.0.0.1.0 23-24|0.1.1.0.0.1 22-23|0.1.1.0.0.1.1 21-22|0.1.1.0.0 20-21|0.1.1.0.0.0 19-20|0.1.1.0.0.0.0 17-18|0.1.1.0 15-16|0.1.1 13-14|0.0 12-13|0.1.0 10-11|0.1 8-9|0.2 7-8|0.2.0 5-6|0.2.1 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:16.102
# ::node	0	promise-01	3-4
# ::node	0.0	particular	13-14
# ::node	0.1	implement-01	10-11
# ::node	0.1.0	provision	12-13
# ::node	0.1.1	fund-01	15-16
# ::node	0.1.1.0	train-01	17-18
# ::node	0.1.1.0.0	and	21-22
# ::node	0.1.1.0.0.0	health	20-21
# ::node	0.1.1.0.0.0.0	environment	19-20
# ::node	0.1.1.0.0.1	standard	23-24
# ::node	0.1.1.0.0.1.0	have-org-role-91	24-25
# ::node	0.1.1.0.0.1.0.0	officer	24-25
# ::node	0.1.1.0.0.1.1	trade-01	22-23
# ::node	0.2	year	8-9
# ::node	0.2.0	next	7-8
# ::node	0.2.1	extra	5-6
# ::root	0	promise-01
# ::edge	and	op1	health	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	fund-01	ARG1	train-01	0.1.1	0.1.1.0	
# ::edge	have-org-role-91	ARG1	standard	0.1.1.0.0.1.0	0.1.1.0.0.1	
# ::edge	have-org-role-91	ARG2	officer	0.1.1.0.0.1.0	0.1.1.0.0.1.0.0	
# ::edge	health	mod	environment	0.1.1.0.0.0	0.1.1.0.0.0.0	
# ::edge	implement-01	ARG1	provision	0.1	0.1.0	
# ::edge	implement-01	purpose	fund-01	0.1	0.1.1	
# ::edge	promise-01	ARG1	particular	0	0.0	
# ::edge	promise-01	ARG2	implement-01	0	0.1	
# ::edge	promise-01	time	year	0	0.2	
# ::edge	standard	mod	trade-01	0.1.1.0.0.1	0.1.1.0.0.1.1	
# ::edge	standard	topic	and	0.1.1.0.0.1	0.1.1.0.0	
# ::edge	train-01	ARG1	and	0.1.1.0	0.1.1.0.0	
# ::edge	year	mod	extra	0.2	0.2.1	
# ::edge	year	mod	next	0.2	0.2.0	
(p3 / promise-01 
      :ARG1 (p / particular) 
      :ARG2 (i / implement-01 
            :ARG1 (p2 / provision) 
            :purpose (f / fund-01 
                  :ARG1 (t2 / train-01 
                        :ARG1 (a / and 
                              :op1 (h2 / health 
                                    :mod (e / environment)) 
                              :topic-of (s / standard 
                                    :ARG1-of (h / have-org-role-91 
                                          :ARG2 (o / officer)) 
                                    :mod (t / trade-01)))))) 
      :time (y / year 
            :mod (n / next) 
            :mod (e2 / extra)))

# ::snt when she left she promised to come home every weekend
# ::tok when she left she promised to come home every weekend
# ::alignments 9-10|0 8-9|0.0 7-8|0.1.1 4-5|0.1 3-4|0.1.2 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:16.231
# ::node	0	weekend	9-10
# ::node	0.0	every	8-9
# ::node	0.1	promise-01	4-5
# ::node	0.1.0	she	1-2
# ::node	0.1.1	home	7-8
# ::node	0.1.2	she	3-4
# ::root	0	weekend
# ::edge	promise-01	ARG0	she	0.1	0.1.0	
# ::edge	promise-01	ARG1	home	0.1	0.1.1	
# ::edge	promise-01	ARG2	she	0.1	0.1.2	
# ::edge	promise-01	time	weekend	0.1	0	
# ::edge	weekend	frequency	every	0	0.0	
(w / weekend 
      :frequency (e / every) 
      :time-of (p / promise-01 
            :ARG0 (s2 / she) 
            :ARG1 (h / home) 
            :ARG2 (s / she)))

# ::snt in no way was this the prime minister everyone loves to hate said one soothed peer although she promised to fight the social charter tooth and nail, apparently mrs thatcher promised less legislation in the coming session including bills on food safety the environment embryology and the nhs shakeup but threatened no further privatisation
# ::tok in no way was this the prime minister everyone loves to hate said one soothed peer although she promised to fight the social charter tooth and nail , apparently mrs thatcher promised less legislation in the coming session including bills on food safety the environment embryology and the nhs shakeup but threatened no further privatisation
# ::alignments 53-54|0.1.2.0.0 52-53|0.1.3 51-52|0.1 50-51|0 46-47|0.1.2 44-45|0.1.1 42-43|0.1.2.0 41-42|0.1.2.0.1 39-40|0.1.2.0.2 37-38|0.1.0 33-34|0.0.0 32-33|0.0.0.0 31-32|0.0 28-29|0.0.1.0.0.1.2 26-27|0.0.1.1 25-26|0.0.1 24-25|0.0.1.0 23-24|0.0.1.0.0 22-23|0.0.1.0.0.0 20-21|0.0.1.0.0.1 18-19|0.0.1.0.0.1.1 17-18|0.0.1.0.0.1.0 15-16|0.0.1.0.0.1.1.0 12-13|0.0.1.0.0.1.1.0.0 11-12|0.0.1.0.0.1.1.0.0.0 9-10|0.0.1.0.0.1.1.0.0.0.1 8-9|0.0.1.0.0.1.1.0.0.0.0 7-8|0.0.1.0.0.1.1.0.0.0.0.0.0+0.0.1.0.0.1.1.0.0.0.0.0 6-7|0.0.1.0.0.1.1.0.0.0.0.0.0.0 4-5|0.0.1.0.0.1.1.0.0.0.0.0.1 2-3|0.0.1.0.0.1.1.0.0.1 1-2|0.0.1.0.0.1.1.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:17.491
# ::node	0	contrast-01	50-51
# ::node	0.0	promise-01	31-32
# ::node	0.0.0	legislation	33-34
# ::node	0.0.0.0	less	32-33
# ::node	0.0.1	and	25-26
# ::node	0.0.1.0	tooth	24-25
# ::node	0.0.1.0.0	charter-01	23-24
# ::node	0.0.1.0.0.0	society	22-23
# ::node	0.0.1.0.0.1	fight-01	20-21
# ::node	0.0.1.0.0.1.0	she	17-18
# ::node	0.0.1.0.0.1.1	promise-01	18-19
# ::node	0.0.1.0.0.1.1.0	peer	15-16
# ::node	0.0.1.0.0.1.1.0.0	say-01	12-13
# ::node	0.0.1.0.0.1.1.0.0.0	hate-01	11-12
# ::node	0.0.1.0.0.1.1.0.0.0.0	everyone	8-9
# ::node	0.0.1.0.0.1.1.0.0.0.0.0	have-org-role-91	7-8
# ::node	0.0.1.0.0.1.1.0.0.0.0.0.0	minister	7-8
# ::node	0.0.1.0.0.1.1.0.0.0.0.0.0.0	prime	6-7
# ::node	0.0.1.0.0.1.1.0.0.0.0.0.1	this	4-5
# ::node	0.0.1.0.0.1.1.0.0.0.1	love-01	9-10
# ::node	0.0.1.0.0.1.1.0.0.1	way	2-3
# ::node	0.0.1.0.0.1.1.0.0.1.0	-	1-2
# ::node	0.0.1.0.0.1.2	apparent	28-29
# ::node	0.0.1.1	nail	26-27
# ::node	0.1	threaten-01	51-52
# ::node	0.1.0	session	37-38
# ::node	0.1.1	environment	44-45
# ::node	0.1.2	and	46-47
# ::node	0.1.2.0	safe-41	42-43
# ::node	0.1.2.0.0	further	53-54
# ::node	0.1.2.0.1	food	41-42
# ::node	0.1.2.0.2	bill-01	39-40
# ::node	0.1.3	-	52-53
# ::root	0	contrast-01
# ::edge	and	op1	safe-41	0.1.2	0.1.2.0	
# ::edge	and	op1	tooth	0.0.1	0.0.1.0	
# ::edge	and	op2	nail	0.0.1	0.0.1.1	
# ::edge	and	op2	threaten-01	0.1.2	0.1	
# ::edge	and	op3	promise-01	0.0.1	0.0	
# ::edge	bill-01	ARG1	safe-41	0.1.2.0.2	0.1.2.0	
# ::edge	charter-01	ARG0	tooth	0.0.1.0.0	0.0.1.0	
# ::edge	charter-01	ARG1	society	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	contrast-01	ARG1	promise-01	0	0.0	
# ::edge	contrast-01	ARG2	threaten-01	0	0.1	
# ::edge	fight-01	ARG0	she	0.0.1.0.0.1	0.0.1.0.0.1.0	
# ::edge	fight-01	ARG1	charter-01	0.0.1.0.0.1	0.0.1.0.0	
# ::edge	fight-01	manner	apparent	0.0.1.0.0.1	0.0.1.0.0.1.2	
# ::edge	hate-01	ARG0	everyone	0.0.1.0.0.1.1.0.0.0	0.0.1.0.0.1.1.0.0.0.0	
# ::edge	hate-01	ARG1	say-01	0.0.1.0.0.1.1.0.0.0	0.0.1.0.0.1.1.0.0	
# ::edge	have-org-role-91	ARG0	everyone	0.0.1.0.0.1.1.0.0.0.0.0	0.0.1.0.0.1.1.0.0.0.0	
# ::edge	have-org-role-91	ARG2	minister	0.0.1.0.0.1.1.0.0.0.0.0	0.0.1.0.0.1.1.0.0.0.0.0.0	
# ::edge	have-org-role-91	mod	this	0.0.1.0.0.1.1.0.0.0.0.0	0.0.1.0.0.1.1.0.0.0.0.0.1	
# ::edge	legislation	degree	less	0.0.0	0.0.0.0	
# ::edge	love-01	ARG1	hate-01	0.0.1.0.0.1.1.0.0.0.1	0.0.1.0.0.1.1.0.0.0	
# ::edge	minister	mod	prime	0.0.1.0.0.1.1.0.0.0.0.0.0	0.0.1.0.0.1.1.0.0.0.0.0.0.0	
# ::edge	peer	time	promise-01	0.0.1.0.0.1.1.0	0.0.1.0.0.1.1	
# ::edge	promise-01	ARG1	legislation	0.0	0.0.0	
# ::edge	promise-01	ARG2	fight-01	0.0.1.0.0.1.1	0.0.1.0.0.1	
# ::edge	safe-41	ARG0	further	0.1.2.0	0.1.2.0.0	
# ::edge	safe-41	ARG1	food	0.1.2.0	0.1.2.0.1	
# ::edge	say-01	ARG1	peer	0.0.1.0.0.1.1.0.0	0.0.1.0.0.1.1.0	
# ::edge	say-01	manner	way	0.0.1.0.0.1.1.0.0	0.0.1.0.0.1.1.0.0.1	
# ::edge	threaten-01	ARG0	session	0.1	0.1.0	
# ::edge	threaten-01	ARG1	environment	0.1	0.1.1	
# ::edge	threaten-01	polarity	-	0.1	0.1.3	
# ::edge	way	polarity	-	0.0.1.0.0.1.1.0.0.1	0.0.1.0.0.1.1.0.0.1.0	
(c / contrast-01 
      :ARG1 (p / promise-01 
            :ARG1 (l / legislation 
                  :degree (l2 / less)) 
            :op-of (a3 / and 
                  :op1 (t2 / tooth 
                        :ARG0-of (c2 / charter-01 
                              :ARG1 (s3 / society) 
                              :ARG1-of (f3 / fight-01 
                                    :ARG0 (s4 / she) 
                                    :ARG2-of (p2 / promise-01 
                                          :time-of (p3 / peer 
                                                :ARG1-of (s5 / say-01 
                                                      :ARG1-of (h / hate-01 
                                                            :ARG0 (e2 / everyone 
                                                                  :ARG0-of (h2 / have-org-role-91 
                                                                        :ARG2 (m / minister 
                                                                              :mod (p4 / prime)) 
                                                                        :mod (t3 / this))) 
                                                            :ARG1-of (l3 / love-01)) 
                                                      :manner (w / way 
                                                            :polarity (-2 / -))))) 
                                    :manner (a2 / apparent)))) 
                  :op2 (n / nail))) 
      :ARG2 (t / threaten-01 
            :ARG0 (s2 / session) 
            :ARG1 (e / environment) 
            :op-of (a / and 
                  :op1 (s / safe-41 
                        :ARG0 (f / further) 
                        :ARG1 (f2 / food) 
                        :ARG1-of (b / bill-01))) 
            :polarity (- / -)))

# ::snt   the new code of conduct also requires operators to deliver what they promise
# ::tok the new code of conduct also requires operators to deliver what they promise
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:17.492
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt neil kinnock last night promised that 14 out of every 15 working people would pay no more income tax under labour and that families earning 20000plus would suffer only marginal net increases if any
# ::tok neil kinnock last night promised that 14 out of every 15 working people would pay no more income tax under labour and that families earning 20000plus would suffer only marginal net increases if any
# ::alignments 33-34|0.0.1.0 31-32|0.0.1.1 30-31|0.0.1.1.1 28-29|0.0.1.1.3 27-28|0.0.1 24-25|0.0.0.0.0.0 23-24|0.0.0.0.0.0.0 21-22|0.0 20-21|0.0.0.0.1 18-19|0.0.0.0 17-18|0.0.0.0.0 15-16|0.0.0.0.2 14-15|0.0.0 11-12|0.0.0.0.0.0.0.0 10-11|0.0.1.1.2 9-10|0.0.0.0.0.0.0.0.0 6-7|0.0.1.1.0 4-5|0 3-4|0.1 2-3|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:17.861
# ::node	0	promise-01	4-5
# ::node	0.0	and	21-22
# ::node	0.0.0	pay-01	14-15
# ::node	0.0.0.0	tax-01	18-19
# ::node	0.0.0.0.0	income	17-18
# ::node	0.0.0.0.0.0	earn-01	24-25
# ::node	0.0.0.0.0.0.0	family	23-24
# ::node	0.0.0.0.0.0.0.0	work-01	11-12
# ::node	0.0.0.0.0.0.0.0.0	every	9-10
# ::node	0.0.0.0.1	labour	20-21
# ::node	0.0.0.0.2	-	15-16
# ::node	0.0.1	suffer-01	27-28
# ::node	0.0.1.0	any	33-34
# ::node	0.0.1.1	increase-01	31-32
# ::node	0.0.1.1.0	14	6-7
# ::node	0.0.1.1.1	net	30-31
# ::node	0.0.1.1.2	15	10-11
# ::node	0.0.1.1.3	only	28-29
# ::node	0.1	night	3-4
# ::node	0.1.0	last	2-3
# ::root	0	promise-01
# ::edge	15	op1	increase-01	0.0.1.1.2	0.0.1.1	
# ::edge	and	op1	pay-01	0.0	0.0.0	
# ::edge	and	op2	suffer-01	0.0	0.0.1	
# ::edge	earn-01	ARG1	family	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	earn-01	mod	income	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	increase-01	ARG0	14	0.0.1.1	0.0.1.1.0	
# ::edge	increase-01	ARG1	net	0.0.1.1	0.0.1.1.1	
# ::edge	increase-01	time	only	0.0.1.1	0.0.1.1.3	
# ::edge	night	mod	last	0.1	0.1.0	
# ::edge	pay-01	ARG1	tax-01	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	and	0	0.0	
# ::edge	promise-01	time	night	0	0.1	
# ::edge	suffer-01	ARG0	any	0.0.1	0.0.1.0	
# ::edge	suffer-01	ARG1	increase-01	0.0.1	0.0.1.1	
# ::edge	tax-01	ARG1	income	0.0.0.0	0.0.0.0.0	
# ::edge	tax-01	ARG3	labour	0.0.0.0	0.0.0.0.1	
# ::edge	tax-01	polarity	-	0.0.0.0	0.0.0.0.2	
# ::edge	work-01	ARG0	family	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	work-01	ARG1	every	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0	
(p2 / promise-01 
      :ARG1 (a2 / and 
            :op1 (p / pay-01 
                  :ARG1 (t / tax-01 
                        :ARG1 (i2 / income 
                              :mod-of (e / earn-01 
                                    :ARG1 (f / family 
                                          :ARG0-of (w / work-01 
                                                :ARG1 (e2 / every))))) 
                        :ARG3 (l / labour) 
                        :polarity (- / -))) 
            :op2 (s / suffer-01 
                  :ARG0 (a / any) 
                  :ARG1 (i / increase-01 
                        :ARG0 14 
                        :ARG1 (n / net) 
                        :op-of 15 
                        :time (o / only)))) 
      :time (n2 / night 
            :mod (l2 / last)))

# ::snt don penny organiser of an embryonic abbey national investors protest group said yesterday that abbey promised him on thursday his shares would definitely arrive on friday
# ::tok don penny organiser of an embryonic abbey national investors protest group said yesterday that abbey promised him on thursday his shares would definitely arrive on friday
# ::alignments 25-26|0.1.0.1 23-24|0.1.0 22-23|0.1.0.2 20-21|0.1.0.0 15-16|0.1 12-13|0.2 11-12|0 10-11|0.0 9-10|0.0.0 8-9|0.0.1+0.0.1.0 7-8|0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:17.978
# ::node	0	say-01	11-12
# ::node	0.0	group	10-11
# ::node	0.0.0	protest-01	9-10
# ::node	0.0.1	invest-01	8-9
# ::node	0.0.1.0	person	8-9
# ::node	0.0.1.0.0	nation	7-8
# ::node	0.1	promise-01	15-16
# ::node	0.1.0	arrive-01	23-24
# ::node	0.1.0.0	share	20-21
# ::node	0.1.0.1	friday	25-26
# ::node	0.1.0.2	definite	22-23
# ::node	0.2	yesterday	12-13
# ::root	0	say-01
# ::edge	arrive-01	ARG1	share	0.1.0	0.1.0.0	
# ::edge	arrive-01	ARG4	friday	0.1.0	0.1.0.1	
# ::edge	arrive-01	mod	definite	0.1.0	0.1.0.2	
# ::edge	invest-01	ARG0	person	0.0.1	0.0.1.0	
# ::edge	invest-01	ARG1	group	0.0.1	0.0	
# ::edge	person	mod	nation	0.0.1.0	0.0.1.0.0	
# ::edge	promise-01	ARG1	arrive-01	0.1	0.1.0	
# ::edge	protest-01	ARG0	group	0.0.0	0.0	
# ::edge	say-01	ARG0	group	0	0.0	
# ::edge	say-01	ARG1	promise-01	0	0.1	
# ::edge	say-01	time	yesterday	0	0.2	
(s2 / say-01 
      :ARG0 (g / group 
            :ARG0-of (p2 / protest-01) 
            :ARG1-of (i / invest-01 
                  :ARG0 (p3 / person 
                        :mod (n / nation)))) 
      :ARG1 (p / promise-01 
            :ARG1 (a / arrive-01 
                  :ARG1 (s / share) 
                  :ARG4 (f / friday) 
                  :mod (d / definite))) 
      :time (y / yesterday))

# ::snt gower attacked promising to storm into gerrards office within the hour if there was no good excuse for his failure to appear with the 10
# ::tok gower attacked promising to storm into gerrards office within the hour if there was no good excuse for his failure to appear with the 10
# ::alignments 24-25|0.0.0 21-22|0 19-20|0.0 16-17|0.0.1 15-16|0.0.1.0 14-15|0.0.1.1 10-11|0.0.1.2.0.0.0+0.0.1.2.0.0 8-9|0.0.1.2.0 7-8|0.0.1.2.1 4-5|0.0.1.2.3 2-3|0.0.1.2 1-2|0.0.1.2.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:18.094
# ::node	0	appear-02	21-22
# ::node	0.0	fail-01	19-20
# ::node	0.0.0	10	24-25
# ::node	0.0.1	excuse-01	16-17
# ::node	0.0.1.0	good	15-16
# ::node	0.0.1.1	-	14-15
# ::node	0.0.1.2	promise-01	2-3
# ::node	0.0.1.2.0	within	8-9
# ::node	0.0.1.2.0.0	temporal-quantity	10-11
# ::node	0.0.1.2.0.0.0	hour	10-11
# ::node	0.0.1.2.1	office	7-8
# ::node	0.0.1.2.2	attack-01	1-2
# ::node	0.0.1.2.3	storm	4-5
# ::root	0	appear-02
(a / appear-02 
      :ARG2-of (f / fail-01 
            :ARG1 10 
            :ARG1-of (e / excuse-01 
                  :mod (g / good) 
                  :polarity (- / -) 
                  :purpose-of (p / promise-01 
                        :ARG0 (w / within 
                              :op1 (t / temporal-quantity 
                                    :unit (h / hour))) 
                        :ARG1 (o / office) 
                        :ARG1-of (a2 / attack-01) 
                        :ARG2 (s / storm)))))

# ::snt he promised attacks by his cartel would cease if the government agreed to negotiate
# ::tok he promised attacks by his cartel would cease if the government agreed to negotiate
# ::alignments 13-14|0.1.0.0 11-12|0.1.0 7-8|0.1 5-6|0.0.0.0 2-3|0.0.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:18.151
# ::node	0	promise-01	1-2
# ::node	0.0	he	0-1
# ::node	0.0.0	attack-01	2-3
# ::node	0.0.0.0	cartel	5-6
# ::node	0.1	cease-01	7-8
# ::node	0.1.0	agree-01	11-12
# ::node	0.1.0.0	negotiate-01	13-14
# ::root	0	promise-01
# ::edge	agree-01	ARG1	negotiate-01	0.1.0	0.1.0.0	
# ::edge	attack-01	ARG0	he	0.0.0	0.0	
# ::edge	attack-01	ARG1	cartel	0.0.0	0.0.0.0	
# ::edge	cease-01	condition	agree-01	0.1	0.1.0	
# ::edge	promise-01	ARG0	he	0	0.0	
# ::edge	promise-01	ARG1	cease-01	0	0.1	
(p / promise-01 
      :ARG0 (h / he 
            :ARG0-of (a2 / attack-01 
                  :ARG1 (c2 / cartel))) 
      :ARG1 (c / cease-01 
            :condition (a / agree-01 
                  :ARG1 (n / negotiate-01))))

# ::snt in 1963 when he was already leader of the labour party harold wilson promised that under a labour government there would be grammar school education for all and few in the labour party wanted to be seen as the enemy of the grammar schools
# ::tok in 1963 when he was already leader of the labour party harold wilson promised that under a labour government there would be grammar school education for all and few in the labour party wanted to be seen as the enemy of the grammar schools
# ::alignments 43-44|0.1.0.3.0 42-43|0.1.0.3.0.1 39-40|0.1.0.3.0.0.1+0.1.0.3.0.0 36-37|0 33-34|0.1 32-33|0.0 31-32|0.0.0 28-29|0.1.0.3.0.0.2 27-28|0.1.0.3 26-27|0.1.0.0.0.0 24-25|0.1.0.0.0 23-24|0.1.0.0.0.1 22-23|0.1.0.0.0.1.0 17-18|0.1.0.3.0.0.0 13-14|0.1.0.0 11-13|0.1.0.1.0+0.1.0.1.1+0.1.0.1+0.1.0 10-11|0.1.0.2 9-10|0.1.0.2.1 6-7|0.1.0.2.0+0.1.0.2.0.0 5-6|0.1.0.2.0.0.1 3-4|0.1.0.2.0.0.0 1-2|0.1.0.4.0+0.1.0.4 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:19.236
# ::node	0	see-01	36-37
# ::node	0.0	party	32-33
# ::node	0.0.0	labour	31-32
# ::node	0.1	want-01	33-34
# ::node	0.1.0	person	11-13
# ::node	0.1.0.0	promise-01	13-14
# ::node	0.1.0.0.0	educate-01	24-25
# ::node	0.1.0.0.0.0	all	26-27
# ::node	0.1.0.0.0.1	school	23-24
# ::node	0.1.0.0.0.1.0	grammar	22-23
# ::node	0.1.0.1	name	11-13
# ::node	0.1.0.1.0	"wilson"	11-13
# ::node	0.1.0.1.1	"harold"	11-13
# ::node	0.1.0.2	party	10-11
# ::node	0.1.0.2.0	lead-02	6-7
# ::node	0.1.0.2.0.0	person	6-7
# ::node	0.1.0.2.0.0.0	he	3-4
# ::node	0.1.0.2.0.0.1	already	5-6
# ::node	0.1.0.2.1	labour	9-10
# ::node	0.1.0.3	and	27-28
# ::node	0.1.0.3.0	school	43-44
# ::node	0.1.0.3.0.0	have-rel-role-91	39-40
# ::node	0.1.0.3.0.0.0	labour	17-18
# ::node	0.1.0.3.0.0.1	enemy	39-40
# ::node	0.1.0.3.0.0.2	few	28-29
# ::node	0.1.0.3.0.1	grammar	42-43
# ::node	0.1.0.4	date-entity	1-2
# ::node	0.1.0.4.0	1963	1-2
# ::root	0	see-01
# ::edge	and	op1	person	0.1.0.3	0.1.0	
# ::edge	and	op2	school	0.1.0.3	0.1.0.3.0	
# ::edge	date-entity	year	1963	0.1.0.4	0.1.0.4.0	
# ::edge	educate-01	ARG1	all	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	educate-01	mod	school	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	few	op1	have-rel-role-91	0.1.0.3.0.0.2	0.1.0.3.0.0	
# ::edge	have-rel-role-91	ARG1	labour	0.1.0.3.0.0	0.1.0.3.0.0.0	
# ::edge	have-rel-role-91	ARG2	enemy	0.1.0.3.0.0	0.1.0.3.0.0.1	
# ::edge	have-rel-role-91	location	school	0.1.0.3.0.0	0.1.0.3.0	
# ::edge	lead-02	ARG0	person	0.1.0.2.0	0.1.0.2.0.0	
# ::edge	lead-02	ARG1	party	0.1.0.2.0	0.1.0.2	
# ::edge	name	op1	"wilson"	0.1.0.1	0.1.0.1.0	
# ::edge	name	op2	"harold"	0.1.0.1	0.1.0.1.1	
# ::edge	party	mod	labour	0.0	0.0.0	
# ::edge	party	mod	labour	0.1.0.2	0.1.0.2.1	
# ::edge	party	name	person	0.1.0.2	0.1.0	
# ::edge	person	domain	he	0.1.0.2.0.0	0.1.0.2.0.0.0	
# ::edge	person	name	name	0.1.0	0.1.0.1	
# ::edge	person	prep-without	date-entity	0.1.0	0.1.0.4	
# ::edge	person	time	already	0.1.0.2.0.0	0.1.0.2.0.0.1	
# ::edge	promise-01	ARG0	person	0.1.0.0	0.1.0	
# ::edge	promise-01	ARG1	educate-01	0.1.0.0	0.1.0.0.0	
# ::edge	school	mod	grammar	0.1.0.0.0.1	0.1.0.0.0.1.0	
# ::edge	school	mod	grammar	0.1.0.3.0	0.1.0.3.0.1	
# ::edge	see-01	ARG1	party	0	0.0	
# ::edge	want-01	ARG0	person	0.1	0.1.0	
# ::edge	want-01	ARG1	see-01	0.1	0	
(s2 / see-01 
      :ARG1 (p / party 
            :mod (l / labour)) 
      :ARG1-of (w / want-01 
            :ARG0 (p3 / person 
                  :ARG0-of (p2 / promise-01 
                        :ARG1 (e2 / educate-01 
                              :ARG1 (a2 / all) 
                              :mod (s3 / school 
                                    :mod (g2 / grammar)))) 
                  :name (n / name 
                        :op1 "wilson" 
                        :op2 "harold") 
                  :name-of (p4 / party 
                        :ARG1-of (l4 / lead-02 
                              :ARG0 (p5 / person 
                                    :domain (h2 / he) 
                                    :time (a3 / already))) 
                        :mod (l3 / labour)) 
                  :op-of (a / and 
                        :op1 (s / school 
                              :location-of (h / have-rel-role-91 
                                    :ARG1 (l2 / labour) 
                                    :ARG2 (e / enemy) 
                                    :op-of (f / few)) 
                              :mod (g / grammar))) 
                  :prep-without (d / date-entity 
                        :year 1963))))

# ::snt speaking as a cabinet minister rather than a father the mufti did however promise a solution to the turmoil in kashmir
# ::tok speaking as a cabinet minister rather than a father the mufti did however promise a solution to the turmoil in kashmir
# ::alignments 18-19|0 15-16|0.0 13-14|0.0.0.0 8-9|0.0.0.0.0.0+0.0.0.0.0 4-5|0.0.1.1+0.0.1 3-4|0.0.1.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:19.304
# ::node	0	turmoil	18-19
# ::node	0.0	solution	15-16
# ::node	0.0.0	speak-01	0-1
# ::node	0.0.0.0	promise-01	13-14
# ::node	0.0.0.0.0	have-rel-role-91	8-9
# ::node	0.0.0.0.0.0	father	8-9
# ::node	0.0.1	have-org-role-91	4-5
# ::node	0.0.1.0	cabinet	3-4
# ::node	0.0.1.1	minister	4-5
# ::root	0	turmoil
(t / turmoil 
      :beneficiary-of (s / solution 
            :ARG0-of (s2 / speak-01 
                  :ARG1 (p / promise-01 
                        :ARG1 (h / have-rel-role-91 
                              :ARG2 (f / father)))) 
            :ARG0-of (h2 / have-org-role-91 
                  :ARG1 (c / cabinet) 
                  :ARG2 (m / minister))))

# ::snt and if ever it isnt ill make it all right i promise
# ::tok and if ever it isnt ill make it all right i promise
# ::alignments 11-12|0 10-11|0.0 8-9|0.1 7-8|0.1.0 5-6|0.2.0.0 3-4|0.2.0 2-3|0.2.0.0.0 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:19.346
# ::node	0	promise-01	11-12
# ::node	0.0	i	10-11
# ::node	0.1	all	8-9
# ::node	0.1.0	it	7-8
# ::node	0.2	and	0-1
# ::node	0.2.0	it	3-4
# ::node	0.2.0.0	ill-41	5-6
# ::node	0.2.0.0.0	ever	2-3
# ::root	0	promise-01
# ::edge	and	domain	it	0.2	0.2.0	
# ::edge	ill-41	ARG0	ever	0.2.0.0	0.2.0.0.0	
# ::edge	ill-41	ARG1	it	0.2.0.0	0.2.0	
# ::edge	it	quant	all	0.1.0	0.1	
# ::edge	promise-01	ARG0	i	0	0.0	
# ::edge	promise-01	ARG1	all	0	0.1	
# ::edge	promise-01	ARG2	and	0	0.2	
(p / promise-01 
      :ARG0 (i / i) 
      :ARG1 (a / all 
            :quant-of (i2 / it)) 
      :ARG2 (a2 / and 
            :domain (i4 / it 
                  :ARG1-of (i3 / ill-41 
                        :ARG0 (e / ever)))))

# ::snt the arrests came hours after the government promised that the killers of six jesuit priests and two civilians on thursday would not escape justice even if as alleged they prove to be members of the army
# ::tok the arrests came hours after the government promised that the killers of six jesuit priests and two civilians on thursday would not escape justice even if as alleged they prove to be members of the army
# ::alignments 35-36|0.0.0.0.2.0.0.0.0 32-33|0.0.0.0.2.0.0.0.1+0.0.0.0.2.0.0.0 29-30|0.0.0.0.2.0 28-29|0.0.0.0.2.0.0 27-28|0.0.0.0.2 23-24|0.0.0.0.0 22-23|0.0.0.0 17-18|0.0.0.0.2.0.1.0 16-17|0.0.0.0.2.0.1 15-16|0 14-15|0.1 12-13|0.1.0 10-11|0.0+0.0.0 7-8|0.0.0.0.1 4-5|0.0.0.0.1.0 3-4|0.0.0.0.1.0.1.0+0.0.0.0.1.0.1 1-2|0.0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:19.698
# ::node	0	and	15-16
# ::node	0.0	kill-01	10-11
# ::node	0.0.0	person	10-11
# ::node	0.0.0.0	escape-01	22-23
# ::node	0.0.0.0.0	justice	23-24
# ::node	0.0.0.0.1	promise-01	7-8
# ::node	0.0.0.0.1.0	after	4-5
# ::node	0.0.0.0.1.0.0	arrest-01	1-2
# ::node	0.0.0.0.1.0.1	temporal-quantity	3-4
# ::node	0.0.0.0.1.0.1.0	hour	3-4
# ::node	0.0.0.0.2	allege-01	27-28
# ::node	0.0.0.0.2.0	prove-01	29-30
# ::node	0.0.0.0.2.0.0	they	28-29
# ::node	0.0.0.0.2.0.0.0	have-org-role-91	32-33
# ::node	0.0.0.0.2.0.0.0.0	army	35-36
# ::node	0.0.0.0.2.0.0.0.1	member	32-33
# ::node	0.0.0.0.2.0.1	2	16-17
# ::node	0.0.0.0.2.0.1.0	civilian	17-18
# ::node	0.1	priest	14-15
# ::node	0.1.0	6	12-13
# ::root	0	and
# ::edge	after	op1	promise-01	0.0.0.0.1.0	0.0.0.0.1	
# ::edge	allege-01	ARG1	prove-01	0.0.0.0.2	0.0.0.0.2.0	
# ::edge	and	op1	priest	0	0.1	
# ::edge	arrest-01	time	after	0.0.0.0.1.0.0	0.0.0.0.1.0	
# ::edge	civilian	quant	2	0.0.0.0.2.0.1.0	0.0.0.0.2.0.1	
# ::edge	escape-01	ARG0	person	0.0.0.0	0.0.0	
# ::edge	escape-01	ARG1	justice	0.0.0.0	0.0.0.0.0	
# ::edge	escape-01	time	allege-01	0.0.0.0	0.0.0.0.2	
# ::edge	have-org-role-91	ARG0	they	0.0.0.0.2.0.0.0	0.0.0.0.2.0.0	
# ::edge	have-org-role-91	ARG1	army	0.0.0.0.2.0.0.0	0.0.0.0.2.0.0.0.0	
# ::edge	have-org-role-91	ARG2	member	0.0.0.0.2.0.0.0	0.0.0.0.2.0.0.0.1	
# ::edge	kill-01	ARG0	person	0.0	0.0.0	
# ::edge	kill-01	ARG1	and	0.0	0	
# ::edge	priest	quant	6	0.1	0.1.0	
# ::edge	promise-01	ARG1	escape-01	0.0.0.0.1	0.0.0.0	
# ::edge	prove-01	ARG0	they	0.0.0.0.2.0	0.0.0.0.2.0.0	
# ::edge	prove-01	ARG1	2	0.0.0.0.2.0	0.0.0.0.2.0.1	
# ::edge	temporal-quantity	time	after	0.0.0.0.1.0.1	0.0.0.0.1.0	
# ::edge	temporal-quantity	unit	hour	0.0.0.0.1.0.1	0.0.0.0.1.0.1.0	
(a3 / and 
      :ARG1-of (k / kill-01 
            :ARG0 (p3 / person 
                  :ARG0-of (e / escape-01 
                        :ARG1 (j / justice) 
                        :ARG1-of (p4 / promise-01 
                              :op-of (a4 / after 
                                    :time-of (a5 / arrest-01) 
                                    :time-of (t2 / temporal-quantity 
                                          :unit (h2 / hour)))) 
                        :time (a2 / allege-01 
                              :ARG1 (p / prove-01 
                                    :ARG0 (t / they 
                                          :ARG0-of (h / have-org-role-91 
                                                :ARG1 (a / army) 
                                                :ARG2 (m / member))) 
                                    :ARG1 (2 / 2 
                                          :quant-of (c / civilian))))))) 
      :op1 (p2 / priest 
            :quant 6))

# ::snt he questioned the adequacy of the 30m promised to implement the bill in view of the need to train environmental health and trading standards officers
# ::tok he questioned the adequacy of the 30m promised to implement the bill in view of the need to train environmental health and trading standards officers
# ::alignments 24-25|0.0.0.0.1.0.0.0+0.0.0.0.1.0.0 23-24|0.0.0.0.1.0 22-23|0.0.0.0.1.1 21-22|0 20-21|0.2 19-20|0.2.0 18-19|0.1 16-17|0.1.0 11-12|0.0.0.0.0 9-10|0.0.0.0 7-8|0.0.0.0.1 1-2|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:19.975
# ::node	0	and	21-22
# ::node	0.0	question-01	1-2
# ::node	0.0.0	he	0-1
# ::node	0.0.0.0	implement-01	9-10
# ::node	0.0.0.0.0	bill	11-12
# ::node	0.0.0.0.1	promise-01	7-8
# ::node	0.0.0.0.1.0	standard	23-24
# ::node	0.0.0.0.1.0.0	have-org-role-91	24-25
# ::node	0.0.0.0.1.0.0.0	officer	24-25
# ::node	0.0.0.0.1.1	trade-01	22-23
# ::node	0.1	train	18-19
# ::node	0.1.0	need-01	16-17
# ::node	0.2	health	20-21
# ::node	0.2.0	environment	19-20
# ::root	0	and
# ::edge	and	op1	question-01	0	0.0	
# ::edge	and	op2	train	0	0.1	
# ::edge	and	op3	health	0	0.2	
# ::edge	have-org-role-91	ARG1	standard	0.0.0.0.1.0.0	0.0.0.0.1.0	
# ::edge	have-org-role-91	ARG2	officer	0.0.0.0.1.0.0	0.0.0.0.1.0.0.0	
# ::edge	health	mod	environment	0.2	0.2.0	
# ::edge	implement-01	ARG0	he	0.0.0.0	0.0.0	
# ::edge	implement-01	ARG1	bill	0.0.0.0	0.0.0.0.0	
# ::edge	need-01	ARG1	train	0.1.0	0.1	
# ::edge	promise-01	ARG0	standard	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	promise-01	ARG1	trade-01	0.0.0.0.1	0.0.0.0.1.1	
# ::edge	promise-01	ARG2	implement-01	0.0.0.0.1	0.0.0.0	
# ::edge	question-01	ARG0	he	0.0	0.0.0	
(a / and 
      :op1 (q / question-01 
            :ARG0 (h3 / he 
                  :ARG0-of (i / implement-01 
                        :ARG1 (b / bill) 
                        :ARG2-of (p / promise-01 
                              :ARG0 (s / standard 
                                    :ARG1-of (h / have-org-role-91 
                                          :ARG2 (o / officer))) 
                              :ARG1 (t / trade-01))))) 
      :op2 (t2 / train 
            :ARG1-of (n / need-01)) 
      :op3 (h2 / health 
            :mod (e / environment)))

# ::snt in exchange for dollars 1000 each partner was promised a threenight stay at the hotel every year for the rest of their lives
# ::tok in exchange for dollars 1000 each partner was promised a threenight stay at the hotel every year for the rest of their lives
# ::alignments 22-23|0.2.1.0 19-20|0.2.1 16-17|0.3.0 15-16|0.0 14-15|0.2.0 11-12|0.2 8-9|0 6-7|0.1 5-6|0.1.0 4-5|0.3.1.0+0.3.1 3-4|0.3.1.0.0.0+0.3.1.0.0 1-2|0.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:20.568
# ::node	0	promise-01	8-9
# ::node	0.0	every	15-16
# ::node	0.1	partner-01	6-7
# ::node	0.1.0	each	5-6
# ::node	0.2	stay-01	11-12
# ::node	0.2.0	hotel	14-15
# ::node	0.2.1	rest	19-20
# ::node	0.2.1.0	life	22-23
# ::node	0.3	exchange-01	1-2
# ::node	0.3.0	year	16-17
# ::node	0.3.1	date-entity	4-5
# ::node	0.3.1.0	1000	4-5
# ::node	0.3.1.0.0	monetary-quantity	3-4
# ::node	0.3.1.0.0.0	dollar	3-4
# ::root	0	promise-01
# ::edge	1000	mod	monetary-quantity	0.3.1.0	0.3.1.0.0	
# ::edge	date-entity	year	1000	0.3.1	0.3.1.0	
# ::edge	exchange-01	ARG0	year	0.3	0.3.0	
# ::edge	exchange-01	ARG1	date-entity	0.3	0.3.1	
# ::edge	life	part	rest	0.2.1.0	0.2.1	
# ::edge	monetary-quantity	unit	dollar	0.3.1.0.0	0.3.1.0.0.0	
# ::edge	partner-01	mod	each	0.1	0.1.0	
# ::edge	promise-01	ARG0	every	0	0.0	
# ::edge	promise-01	ARG1	partner-01	0	0.1	
# ::edge	promise-01	ARG2	stay-01	0	0.2	
# ::edge	promise-01	time	exchange-01	0	0.3	
# ::edge	stay-01	location	hotel	0.2	0.2.0	
# ::edge	stay-01	prep-with	rest	0.2	0.2.1	
(p / promise-01 
      :ARG0 (e / every) 
      :ARG1 (p2 / partner-01 
            :mod (e2 / each)) 
      :ARG2 (s / stay-01 
            :location (h / hotel) 
            :prep-with (r / rest 
                  :part-of (l / life))) 
      :time (e3 / exchange-01 
            :ARG0 (y / year) 
            :ARG1 (d / date-entity 
                  :year (1 / 1000 
                        :mod (m / monetary-quantity 
                              :unit (d2 / dollar))))))

# ::snt with the countrys military chiefs but he promised to make an announcement soon
# ::tok with the countrys military chiefs but he promised to make an announcement soon
# ::alignments 12-13|0.0.0 11-12|0.0 7-8|0.1 6-7|0.1.0 5-6|0 4-5|0.1.1.1+0.1.1 3-4|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:20.655
# ::node	0	contrast-01	5-6
# ::node	0.0	announce-01	11-12
# ::node	0.0.0	soon	12-13
# ::node	0.1	promise-01	7-8
# ::node	0.1.0	he	6-7
# ::node	0.1.1	have-org-role-91	4-5
# ::node	0.1.1.0	military	3-4
# ::node	0.1.1.1	chief	4-5
# ::root	0	contrast-01
# ::edge	announce-01	direction	soon	0.0	0.0.0	
# ::edge	contrast-01	ARG1	announce-01	0	0.0	
# ::edge	contrast-01	ARG2	promise-01	0	0.1	
# ::edge	have-org-role-91	ARG1	military	0.1.1	0.1.1.0	
# ::edge	have-org-role-91	ARG2	chief	0.1.1	0.1.1.1	
# ::edge	promise-01	ARG0	he	0.1	0.1.0	
# ::edge	promise-01	ARG1	have-org-role-91	0.1	0.1.1	
(c / contrast-01 
      :ARG1 (a / announce-01 
            :direction (s / soon)) 
      :ARG2 (p / promise-01 
            :ARG0 (h / he) 
            :ARG1 (h2 / have-org-role-91 
                  :ARG1 (m / military) 
                  :ARG2 (c2 / chief))))

# ::snt french industry has no illusions that it will be easy to realise the ambitious projects promised in the paris agreements
# ::tok french industry has no illusions that it will be easy to realise the ambitious projects promised in the paris agreements
# ::alignments 19-20|0.1.0.0 15-16|0.1.0 14-15|0.1 13-14|0.1.1 11-12|0 9-10|0.2 6-7|0.0 4-5|0.2.0.0 3-4|0.2.0 1-2|0.1.0.0.0.0 0-1|0.1.0.0.0.1.0+0.1.0.0.0.1+0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:20.953
# ::node	0	realize-01	11-12
# ::node	0.0	it	6-7
# ::node	0.1	project	14-15
# ::node	0.1.0	promise-01	15-16
# ::node	0.1.0.0	agree-01	19-20
# ::node	0.1.0.0.0	country	0-1
# ::node	0.1.0.0.0.0	industry	1-2
# ::node	0.1.0.0.0.1	name	0-1
# ::node	0.1.0.0.0.1.0	"France"	0-1
# ::node	0.1.1	ambitious	13-14
# ::node	0.2	easy	9-10
# ::node	0.2.0	-	3-4
# ::node	0.2.0.0	illusion	4-5
# ::root	0	realize-01
# ::edge	agree-01	ARG0	country	0.1.0.0	0.1.0.0.0	
# ::edge	country	name	name	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	easy	domain	realize-01	0.2	0	
# ::edge	easy	polarity	-	0.2	0.2.0	
# ::edge	illusion	polarity	-	0.2.0.0	0.2.0	
# ::edge	industry	mod	country	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	name	op1	"France"	0.1.0.0.0.1	0.1.0.0.0.1.0	
# ::edge	project	mod	ambitious	0.1	0.1.1	
# ::edge	promise-01	ARG0	project	0.1.0	0.1	
# ::edge	promise-01	ARG1	agree-01	0.1.0	0.1.0.0	
# ::edge	realize-01	ARG0	it	0	0.0	
# ::edge	realize-01	ARG1	project	0	0.1	
(r / realize-01 
      :ARG0 (i / it) 
      :ARG1 (p2 / project 
            :ARG0-of (p / promise-01 
                  :ARG1 (a / agree-01 
                        :ARG0 (c / country 
                              :mod-of (i3 / industry) 
                              :name (n / name 
                                    :op1 "France")))) 
            :mod (a2 / ambitious)) 
      :domain-of (e / easy 
            :polarity (- / - 
                  :polarity-of (i2 / illusion))))

# ::snt henry leland claimed henry ford had promised to reimburse all lincolns original creditors and shareholders
# ::tok henry leland claimed henry ford had promised to reimburse all lincolns original creditors and shareholders
# ::alignments 13-14|0.0 11-12|0.1.0 9-10|0.1.1 6-7|0 2-3|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:20.976
# ::node	0	promise-01	6-7
# ::node	0.0	and	13-14
# ::node	0.1	claim-01	2-3
# ::node	0.1.0	original	11-12
# ::node	0.1.1	all	9-10
# ::root	0	promise-01
# ::edge	claim-01	ARG0	original	0.1	0.1.0	
# ::edge	claim-01	ARG1	all	0.1	0.1.1	
# ::edge	promise-01	ARG0	and	0	0.0	
# ::edge	promise-01	ARG1	claim-01	0	0.1	
(p / promise-01 
      :ARG0 (a / and) 
      :ARG1 (c / claim-01 
            :ARG0 (o / original) 
            :ARG1 (a2 / all)))

# ::snt on 9 april 1986 when the plaintiff had already completed the roof sustantially completed nine flats and received interim payments of 16000 the defendants promised to pay the plaintiff a further sum of 10300 at the rate of 575 for each flat on which the carpentry work was completed
# ::tok on 9 april 1986 when the plaintiff had already completed the roof sustantially completed nine flats and received interim payments of 16000 the defendants promised to pay the plaintiff a further sum of 10300 at the rate of 575 for each flat on which the carpentry work was completed
# ::alignments 48-49|0.0 41-42|0.0.0.0 40-41|0.0.0 36-37|0.1.0 31-32|0.2.0 30-31|0.2.0.0 26-27|0.3.0 24-25|0.3.0.1 23-24|0.3 21-22|0.3.0.0 19-20|0.2.1 18-19|0.2.1.0 17-18|0.2 16-17|0 14-15|0.3.0.1.0 13-14|0.1 11-12|0.1.1 9-10|0.1.1.0 8-9|0.1.1.0.0 1-4|0.4.2+0.4.1+0.4.0+0.4 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:21.542
# ::node	0	and	16-17
# ::node	0.0	complete-01	48-49
# ::node	0.0.0	each	40-41
# ::node	0.0.0.0	flat	41-42
# ::node	0.1	complete-01	13-14
# ::node	0.1.0	rate	36-37
# ::node	0.1.1	roof	11-12
# ::node	0.1.1.0	complete-01	9-10
# ::node	0.1.1.0.0	already	8-9
# ::node	0.2	receive-01	17-18
# ::node	0.2.0	sum	31-32
# ::node	0.2.0.0	further	30-31
# ::node	0.2.1	payment	19-20
# ::node	0.2.1.0	interim	18-19
# ::node	0.3	defendant	23-24
# ::node	0.3.0	pay-01	26-27
# ::node	0.3.0.0	16000	21-22
# ::node	0.3.0.1	promise-01	24-25
# ::node	0.3.0.1.0	9	14-15
# ::node	0.4	date-entity	1-4
# ::node	0.4.0	9	1-4
# ::node	0.4.1	4	1-4
# ::node	0.4.2	1986	1-4
# ::root	0	and
# ::edge	and	op1	complete-01	0	0.1	
# ::edge	and	op2	receive-01	0	0.2	
# ::edge	and	op3	defendant	0	0.3	
# ::edge	and	time	date-entity	0	0.4	
# ::edge	complete-01	ARG0	each	0.0	0.0.0	
# ::edge	complete-01	ARG0	rate	0.1	0.1.0	
# ::edge	complete-01	ARG1	and	0.0	0	
# ::edge	complete-01	ARG1	roof	0.1	0.1.1	
# ::edge	complete-01	ARG1	roof	0.1.1.0	0.1.1	
# ::edge	complete-01	time	already	0.1.1.0	0.1.1.0.0	
# ::edge	date-entity	day	9	0.4	0.4.0	
# ::edge	date-entity	month	4	0.4	0.4.1	
# ::edge	date-entity	year	1986	0.4	0.4.2	
# ::edge	flat	domain	each	0.0.0.0	0.0.0	
# ::edge	pay-01	ARG0	defendant	0.3.0	0.3	
# ::edge	pay-01	ARG1	16000	0.3.0	0.3.0.0	
# ::edge	payment	mod	interim	0.2.1	0.2.1.0	
# ::edge	promise-01	ARG0	9	0.3.0.1	0.3.0.1.0	
# ::edge	promise-01	ARG2	pay-01	0.3.0.1	0.3.0	
# ::edge	receive-01	ARG0	sum	0.2	0.2.0	
# ::edge	receive-01	ARG1	payment	0.2	0.2.1	
# ::edge	sum	mod	further	0.2.0	0.2.0.0	
(a / and 
      :ARG1-of (c / complete-01 
            :ARG0 (e / each 
                  :domain-of (f / flat))) 
      :op1 (c2 / complete-01 
            :ARG0 (r / rate) 
            :ARG1 (r3 / roof 
                  :ARG1-of (c3 / complete-01 
                        :time (a2 / already)))) 
      :op2 (r2 / receive-01 
            :ARG0 (s / sum 
                  :mod (f2 / further)) 
            :ARG1 (p3 / payment 
                  :mod (i / interim))) 
      :op3 (d / defendant 
            :ARG0-of (p / pay-01 
                  :ARG1 16000 
                  :ARG2-of (p2 / promise-01 
                        :ARG0 9))) 
      :time (d2 / date-entity 
            :day 9 
            :month 4 
            :year 1986))

# ::snt he also promised that all political prisoners where possible will be freed from jail by christmas
# ::tok he also promised that all political prisoners where possible will be freed from jail by christmas
# ::alignments 13-14|0.0.1 11-12|0.0 8-9|0 5-6|0.0.0.0.0 4-5|0.0.0.0.1 2-3|0.0.0.0 1-2|0.0.0.0.2 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:21.597
# ::node	0	possible	8-9
# ::node	0.0	free-01	11-12
# ::node	0.0.0	he	0-1
# ::node	0.0.0.0	promise-01	2-3
# ::node	0.0.0.0.0	politics	5-6
# ::node	0.0.0.0.1	all	4-5
# ::node	0.0.0.0.2	also	1-2
# ::node	0.0.1	jail	13-14
# ::root	0	possible
(p / possible 
      :ARG1-of (f / free-01 
            :ARG0 (h / he 
                  :ARG0-of (p3 / promise-01 
                        :ARG1 (p2 / politics) 
                        :domain-of (a / all) 
                        :mod (a2 / also))) 
            :ARG2 (j / jail)))

# ::snt mr bush this week publicly promised government and opposition groups in poland and hungary that he would plead their cause at the paris summit
# ::tok mr bush this week publicly promised government and opposition groups in poland and hungary that he would plead their cause at the paris summit
# ::alignments 23-24|0.1.0 19-20|0.1 17-18|0 15-16|0.0 12-13|0.0.0.1.0.0 9-10|0.0.0.1 8-9|0.0.0.1.0 7-8|0.0.0.3 5-6|0.0.0 4-5|0.0.0.2 3-4|0.0.0.4 2-3|0.0.0.4.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:21.824
# ::node	0	plead-02	17-18
# ::node	0.0	he	15-16
# ::node	0.0.0	promise-01	5-6
# ::node	0.0.0.0	bush-league	1-2
# ::node	0.0.0.1	group	9-10
# ::node	0.0.0.1.0	oppose-01	8-9
# ::node	0.0.0.1.0.0	and	12-13
# ::node	0.0.0.2	public	4-5
# ::node	0.0.0.3	and	7-8
# ::node	0.0.0.4	week	3-4
# ::node	0.0.0.4.0	this	2-3
# ::node	0.1	cause-01	19-20
# ::node	0.1.0	summit	23-24
# ::root	0	plead-02
# ::edge	and	op1	promise-01	0.0.0.3	0.0.0	
# ::edge	cause-01	ARG1	summit	0.1	0.1.0	
# ::edge	oppose-01	ARG0	group	0.0.0.1.0	0.0.0.1	
# ::edge	oppose-01	ARG1	and	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	plead-02	ARG0	he	0	0.0	
# ::edge	plead-02	ARG1	cause-01	0	0.1	
# ::edge	promise-01	ARG0	he	0.0.0	0.0	
# ::edge	promise-01	ARG1	bush-league	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG2	group	0.0.0	0.0.0.1	
# ::edge	promise-01	manner	public	0.0.0	0.0.0.2	
# ::edge	promise-01	time	week	0.0.0	0.0.0.4	
# ::edge	week	mod	this	0.0.0.4	0.0.0.4.0	
(p / plead-02 
      :ARG0 (h / he 
            :ARG0-of (p2 / promise-01 
                  :ARG1 (b / bush-league) 
                  :ARG2 (g / group 
                        :ARG0-of (o / oppose-01 
                              :ARG1 (a / and))) 
                  :manner (p3 / public) 
                  :op-of (a2 / and) 
                  :time (w / week 
                        :mod (t / this)))) 
      :ARG1 (c / cause-01 
            :ARG1 (s / summit)))

# ::snt all the companies need do is buy address lists or scour the electoral rolls send off one letter promising tempting prizes and our natural optimism dash
# ::tok all the companies need do is buy address lists or scour the electoral rolls send off one letter promising tempting prizes and our natural optimism dash
# ::alignments 24-25|0.0.1 23-24|0.0.0.0.0.1.0.1 21-22|0.0 19-20|0 18-19|0.0.0 17-18|0.0.0.0 15-16|0.0.0.0.0.2 14-15|0.0.0.0.0 13-14|0.0.0.0.0.0 12-13|0.0.0.0.0.1.1.0.0.0.0 10-11|0.0.0.0.0.1 9-10|0.0.0.0.0.1.1 8-9|0.0.0.0.0.1.1.0.0 7-8|0.0.0.0.0.1.1.0.0.0 6-7|0.0.0.0.0.1.1.0 3-4|0.0.0.0.0.1.0 2-3|0.0.0.0.0.1.0.0 0-1|0.0.0.0.0.1.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:22.375
# ::node	0	tempt-01	19-20
# ::node	0.0	and	21-22
# ::node	0.0.0	promise-01	18-19
# ::node	0.0.0.0	letter	17-18
# ::node	0.0.0.0.0	send-01	14-15
# ::node	0.0.0.0.0.0	roll	13-14
# ::node	0.0.0.0.0.1	scour-02	10-11
# ::node	0.0.0.0.0.1.0	need-01	3-4
# ::node	0.0.0.0.0.1.0.0	company	2-3
# ::node	0.0.0.0.0.1.0.1	natural	23-24
# ::node	0.0.0.0.0.1.0.2	all	0-1
# ::node	0.0.0.0.0.1.1	or	9-10
# ::node	0.0.0.0.0.1.1.0	buy-01	6-7
# ::node	0.0.0.0.0.1.1.0.0	list-01	8-9
# ::node	0.0.0.0.0.1.1.0.0.0	address-02	7-8
# ::node	0.0.0.0.0.1.1.0.0.0.0	elect-01	12-13
# ::node	0.0.0.0.0.2	off	15-16
# ::node	0.0.1	optimism	24-25
# ::root	0	tempt-01
# ::edge	address-02	ARG1	list-01	0.0.0.0.0.1.1.0.0.0	0.0.0.0.0.1.1.0.0	
# ::edge	and	op1	optimism	0.0	0.0.1	
# ::edge	buy-01	ARG1	list-01	0.0.0.0.0.1.1.0	0.0.0.0.0.1.1.0.0	
# ::edge	elect-01	ARG1	address-02	0.0.0.0.0.1.1.0.0.0.0	0.0.0.0.0.1.1.0.0.0	
# ::edge	need-01	ARG0	company	0.0.0.0.0.1.0	0.0.0.0.0.1.0.0	
# ::edge	need-01	ARG1	natural	0.0.0.0.0.1.0	0.0.0.0.0.1.0.1	
# ::edge	need-01	mod	all	0.0.0.0.0.1.0	0.0.0.0.0.1.0.2	
# ::edge	or	op1	buy-01	0.0.0.0.0.1.1	0.0.0.0.0.1.1.0	
# ::edge	or	op2	scour-02	0.0.0.0.0.1.1	0.0.0.0.0.1	
# ::edge	promise-01	ARG0	letter	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	and	0.0.0	0.0	
# ::edge	scour-02	ARG0	need-01	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	scour-02	ARG1	send-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	send-01	ARG0	roll	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	send-01	ARG1	letter	0.0.0.0.0	0.0.0.0	
# ::edge	send-01	direction	off	0.0.0.0.0	0.0.0.0.0.2	
# ::edge	tempt-01	ARG1	and	0	0.0	
(t / tempt-01 
      :ARG1 (a / and 
            :ARG1-of (p / promise-01 
                  :ARG0 (l / letter 
                        :ARG1-of (s / send-01 
                              :ARG0 (r / roll) 
                              :ARG1-of (s2 / scour-02 
                                    :ARG0 (n2 / need-01 
                                          :ARG0 (c / company) 
                                          :ARG1 (n / natural) 
                                          :mod (a3 / all)) 
                                    :op-of (o3 / or 
                                          :op1 (b / buy-01 
                                                :ARG1 (l2 / list-01 
                                                      :ARG1-of (a2 / address-02 
                                                            :ARG1-of (e / elect-01)))))) 
                              :direction (o2 / off)))) 
            :op1 (o / optimism)))

# ::snt if vasily vasilievs moscow company is so far the toast of lift at the brixton academy valeria vasilievskis adaptation of the song of lawino at the ica promises to be the honey
# ::tok if vasily vasilievs moscow company is so far the toast of lift at the brixton academy valeria vasilievskis adaptation of the song of lawino at the ica promises to be the honey
# ::alignments 27-28|0.0.0.0 21-22|0.2 18-19|0+0.0 15-16|0.1 11-12|0.0.0 7-8|0.0.0.0.1.0 6-7|0.0.0.0.1 4-5|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:22.642
# ::node	0	adapt-01	18-19
# ::node	0.0	thing	18-19
# ::node	0.0.0	lift-01	11-12
# ::node	0.0.0.0	promise-01	27-28
# ::node	0.0.0.0.0	company	4-5
# ::node	0.0.0.0.1	so	6-7
# ::node	0.0.0.0.1.0	far	7-8
# ::node	0.1	academy	15-16
# ::node	0.2	song	21-22
# ::root	0	adapt-01
# ::edge	adapt-01	ARG1	thing	0	0.0	
# ::edge	adapt-01	location	academy	0	0.1	
# ::edge	adapt-01	time	song	0	0.2	
# ::edge	far	degree	so	0.0.0.0.1.0	0.0.0.0.1	
# ::edge	lift-01	ARG0	thing	0.0.0	0.0	
# ::edge	lift-01	ARG1	promise-01	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG0	company	0.0.0.0	0.0.0.0.0	
# ::edge	promise-01	ARG1	so	0.0.0.0	0.0.0.0.1	
(a / adapt-01 
      :ARG1 (t / thing 
            :ARG0-of (l / lift-01 
                  :ARG1 (p / promise-01 
                        :ARG0 (c / company) 
                        :ARG1 (s2 / so 
                              :degree-of (f / far))))) 
      :location (a2 / academy) 
      :time (s / song))

# ::snt a mobile psychologist will now be available at a vets surgery in oxfordshire promising peace of mind for both rover and his owner
# ::tok a mobile psychologist will now be available at a vets surgery in oxfordshire promising peace of mind for both rover and his owner
# ::alignments 22-23|0.1.0+0.1 20-21|0 18-19|0.0 16-17|0.1.1 14-15|0.1.1.0 13-14|0.1.1.0.0 10-11|0.1.1.0.1 6-7|0.1.1.0.0.0.1 4-5|0.1.1.0.0.0.1.0 2-3|0.1.1.0.0.0 1-2|0.1.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:22.718
# ::node	0	and	20-21
# ::node	0.0	both	18-19
# ::node	0.1	person	22-23
# ::node	0.1.0	own-01	22-23
# ::node	0.1.1	mind	16-17
# ::node	0.1.1.0	peace	14-15
# ::node	0.1.1.0.0	promise-01	13-14
# ::node	0.1.1.0.0.0	psychologist	2-3
# ::node	0.1.1.0.0.0.0	mobile	1-2
# ::node	0.1.1.0.0.0.1	available	6-7
# ::node	0.1.1.0.0.0.1.0	now	4-5
# ::node	0.1.1.0.1	surgery	10-11
# ::root	0	and
# ::edge	and	mod	both	0	0.0	
# ::edge	and	op1	person	0	0.1	
# ::edge	available	mod	psychologist	0.1.1.0.0.0.1	0.1.1.0.0.0	
# ::edge	available	time	now	0.1.1.0.0.0.1	0.1.1.0.0.0.1.0	
# ::edge	own-01	ARG0	person	0.1.0	0.1	
# ::edge	peace	mod	mind	0.1.1.0	0.1.1	
# ::edge	peace	mod	promise-01	0.1.1.0	0.1.1.0.0	
# ::edge	person	poss	mind	0.1	0.1.1	
# ::edge	promise-01	ARG0	psychologist	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	psychologist	mod	mobile	0.1.1.0.0.0	0.1.1.0.0.0.0	
# ::edge	surgery	poss	peace	0.1.1.0.1	0.1.1.0	
(a / and 
      :mod (b / both) 
      :op1 (p / person 
            :ARG0-of (o / own-01) 
            :poss (m / mind 
                  :mod-of (p2 / peace 
                        :mod (p3 / promise-01 
                              :ARG0 (p4 / psychologist 
                                    :mod (m2 / mobile) 
                                    :mod-of (a2 / available 
                                          :time (n / now)))) 
                        :poss-of (s / surgery)))))

# ::snt mr howe said trafford council had promised not to use the extra data from its polltax forms even in paper files
# ::tok mr howe said trafford council had promised not to use the extra data from its polltax forms even in paper files
# ::alignments 20-21|0.0.1.1 19-20|0.0.1.1.0 16-17|0.0.1.0.0 12-13|0.0.1.0 11-12|0.0.1.0.1 9-10|0.0.1 6-7|0.0 4-5|0.0.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:22.789
# ::node	0	say-01	2-3
# ::node	0.0	promise-01	6-7
# ::node	0.0.0	council	4-5
# ::node	0.0.1	use-01	9-10
# ::node	0.0.1.0	data	12-13
# ::node	0.0.1.0.0	form	16-17
# ::node	0.0.1.0.1	extra	11-12
# ::node	0.0.1.1	file	20-21
# ::node	0.0.1.1.0	paper	19-20
# ::root	0	say-01
# ::edge	data	location	form	0.0.1.0	0.0.1.0.0	
# ::edge	data	mod	extra	0.0.1.0	0.0.1.0.1	
# ::edge	file	mod	paper	0.0.1.1	0.0.1.1.0	
# ::edge	promise-01	ARG0	council	0.0	0.0.0	
# ::edge	promise-01	ARG1	use-01	0.0	0.0.1	
# ::edge	say-01	ARG1	promise-01	0	0.0	
# ::edge	use-01	ARG1	data	0.0.1	0.0.1.0	
# ::edge	use-01	ARG2	file	0.0.1	0.0.1.1	
(s / say-01 
      :ARG1 (p2 / promise-01 
            :ARG0 (c / council) 
            :ARG1 (u / use-01 
                  :ARG1 (d / data 
                        :location (f2 / form) 
                        :mod (e / extra)) 
                  :ARG2 (f / file 
                        :mod (p / paper)))))

# ::snt 3 flyer is promised for later in the season
# ::tok 3 flyer is promised for later in the season
# ::alignments 8-9|0.1 5-6|0.2 3-4|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:22.799
# ::node	0	promise-01	3-4
# ::node	0.0	3	0-1
# ::node	0.1	season	8-9
# ::node	0.2	late	5-6
# ::root	0	promise-01
# ::edge	promise-01	ARG1	3	0	0.0	
# ::edge	promise-01	location	season	0	0.1	
# ::edge	promise-01	manner	late	0	0.2	
(p / promise-01 
      :ARG1 3 
      :location (s / season) 
      :manner (l / late))

# ::snt the car we always promised ourselves
# ::tok the car we always promised ourselves
# ::alignments 4-5|0 3-4|0.2 2-3|0.0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:22.806
# ::node	0	promise-01	4-5
# ::node	0.0	we	2-3
# ::node	0.1	car	1-2
# ::node	0.2	always	3-4
# ::root	0	promise-01
# ::edge	promise-01	ARG0	we	0	0.0	
# ::edge	promise-01	ARG1	car	0	0.1	
# ::edge	promise-01	time	always	0	0.2	
(p / promise-01 
      :ARG0 (w / we) 
      :ARG1 (c / car) 
      :time (a / always))

# ::snt they promise a quick and clean victory to a chief executive whose aides are strong at crisis management and poll analysis but who have no conception at all beyond those imperatives
# ::tok they promise a quick and clean victory to a chief executive whose aides are strong at crisis management and poll analysis but who have no conception at all beyond those imperatives
# ::alignments 28-29|0.0.1 27-28|0.1.2.1.0.0.0 24-25|0.1.1 21-22|0 20-21|0.1.2.1.0 19-20|0.1.2.1.0.0 18-19|0.1.2.1 17-18|0.1.2 16-17|0.1.2.0 14-15|0.1 12-13|0.1.0.1+0.1.0 10-11|0.1.0.0 9-10|0.1.0.0.0.0+0.1.0.0.0 5-6|0.0.3 4-5|0.0 3-4|0.0.2 1-2|0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:22.982
# ::node	0	contrast-01	21-22
# ::node	0.0	and	4-5
# ::node	0.0.0	promise-01	1-2
# ::node	0.0.0.0	they	0-1
# ::node	0.0.1	beyond	28-29
# ::node	0.0.2	quick	3-4
# ::node	0.0.3	clean	5-6
# ::node	0.1	strong	14-15
# ::node	0.1.0	have-org-role-91	12-13
# ::node	0.1.0.0	executive	10-11
# ::node	0.1.0.0.0	have-org-role-91	9-10
# ::node	0.1.0.0.0.0	chief	9-10
# ::node	0.1.0.1	aide	12-13
# ::node	0.1.1	-	24-25
# ::node	0.1.2	manage-01	17-18
# ::node	0.1.2.0	crisis	16-17
# ::node	0.1.2.1	and	18-19
# ::node	0.1.2.1.0	analyze-01	20-21
# ::node	0.1.2.1.0.0	poll-01	19-20
# ::node	0.1.2.1.0.0.0	all	27-28
# ::root	0	contrast-01
# ::edge	analyze-01	ARG1	poll-01	0.1.2.1.0	0.1.2.1.0.0	
# ::edge	and	op1	manage-01	0.1.2.1	0.1.2	
# ::edge	and	op1	quick	0.0	0.0.2	
# ::edge	and	op2	analyze-01	0.1.2.1	0.1.2.1.0	
# ::edge	and	op2	clean	0.0	0.0.3	
# ::edge	beyond	op1	and	0.0.1	0.0	
# ::edge	contrast-01	ARG1	and	0	0.0	
# ::edge	contrast-01	ARG2	strong	0	0.1	
# ::edge	have-org-role-91	ARG0	executive	0.1.0.0.0	0.1.0.0	
# ::edge	have-org-role-91	ARG1	executive	0.1.0	0.1.0.0	
# ::edge	have-org-role-91	ARG2	aide	0.1.0	0.1.0.1	
# ::edge	have-org-role-91	ARG2	chief	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	manage-01	ARG1	crisis	0.1.2	0.1.2.0	
# ::edge	poll-01	ARG1	all	0.1.2.1.0.0	0.1.2.1.0.0.0	
# ::edge	promise-01	ARG0	they	0.0.0	0.0.0.0	
# ::edge	promise-01	ARG1	and	0.0.0	0.0	
# ::edge	strong	domain	have-org-role-91	0.1	0.1.0	
# ::edge	strong	polarity	-	0.1	0.1.1	
# ::edge	strong	topic	manage-01	0.1	0.1.2	
(c / contrast-01 
      :ARG1 (a5 / and 
            :ARG1-of (p2 / promise-01 
                  :ARG0 (t / they)) 
            :op-of (b / beyond) 
            :op1 (q / quick) 
            :op2 (c4 / clean)) 
      :ARG2 (s / strong 
            :domain (h / have-org-role-91 
                  :ARG1 (e / executive 
                        :ARG0-of (h2 / have-org-role-91 
                              :ARG2 (c3 / chief))) 
                  :ARG2 (a4 / aide)) 
            :polarity (- / -) 
            :topic (m / manage-01 
                  :ARG1 (c2 / crisis) 
                  :op-of (a3 / and 
                        :op1 (a2 / analyze-01 
                              :ARG1 (p / poll-01 
                                    :ARG1 (a / all)))))))

# ::snt we were very keen to get the new uniforms and liveries they promised
# ::tok we were very keen to get the new uniforms and liveries they promised
# ::alignments 12-13|0 11-12|0.0 9-10|0.1 8-9|0.1.2 7-8|0.1.1 3-4|0.1.0 2-3|0.1.0.1 0-1|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T11:59:23.084
# ::node	0	promise-01	12-13
# ::node	0.0	they	11-12
# ::node	0.1	and	9-10
# ::node	0.1.0	keen-41	3-4
# ::node	0.1.0.0	we	0-1
# ::node	0.1.0.1	very	2-3
# ::node	0.1.1	new	7-8
# ::node	0.1.2	uniform-01	8-9
# ::root	0	promise-01
# ::edge	and	mod	new	0.1	0.1.1	
# ::edge	and	op1	uniform-01	0.1	0.1.2	
# ::edge	and	op2	promise-01	0.1	0	
# ::edge	keen-41	ARG1	we	0.1.0	0.1.0.0	
# ::edge	keen-41	degree	very	0.1.0	0.1.0.1	
# ::edge	keen-41	domain	and	0.1.0	0.1	
# ::edge	promise-01	ARG0	they	0	0.0	
(p / promise-01 
      :ARG0 (t / they) 
      :op-of (a / and 
            :domain-of (k / keen-41 
                  :ARG1 (w / we) 
                  :degree (v / very)) 
            :mod (n / new) 
            :op1 (u / uniform-01)))

