# ::snt the book reads like a kind of inventory of narrative elements derived from the prostitutes realist plot strung together in rapidfire order with little concern for psychological motivation or character development
# ::tok the book reads like a kind of inventory of narrative elements derived from the prostitutes realist plot strung together in rapidfire order with little concern for psychological motivation or character development
# ::alignments 30-31|0.1.1 29-30|0.1.1.0 28-29|0.1 27-28|0 26-27|0.0 24-25|0.1.0 23-24|0.1.0.1 18-19|0.1.1.1.2.0 16-17|0.1.1.1 15-16|0.1.1.1.0 14-15|0.1.1.1.1 11-12|0.1.1.1.2 10-11|0.1.1.1.2.1 9-10|0.1.1.1.2.1.0 7-8|0.1.1.1.2.1.1 5-6|0.1.1.1.2.1.1.0 2-3|0.1.0.0 1-2|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:17.671
# ::node	0	motivate-01	27-28
# ::node	0.0	psychological	26-27
# ::node	0.1	or	28-29
# ::node	0.1.0	concern-01	24-25
# ::node	0.1.0.0	read-01	2-3
# ::node	0.1.0.0.0	book	1-2
# ::node	0.1.0.1	little	23-24
# ::node	0.1.1	develop-02	30-31
# ::node	0.1.1.0	character	29-30
# ::node	0.1.1.1	plot-01	16-17
# ::node	0.1.1.1.0	realist	15-16
# ::node	0.1.1.1.1	prostitute-01	14-15
# ::node	0.1.1.1.2	derive-01	11-12
# ::node	0.1.1.1.2.0	together	18-19
# ::node	0.1.1.1.2.1	element	10-11
# ::node	0.1.1.1.2.1.0	narrative	9-10
# ::node	0.1.1.1.2.1.1	inventory	7-8
# ::node	0.1.1.1.2.1.1.0	kind	5-6
# ::root	0	motivate-01
# ::edge	concern-01	ARG1	or	0.1.0	0.1	
# ::edge	concern-01	mod	little	0.1.0	0.1.0.1	
# ::edge	derive-01	ARG0	together	0.1.1.1.2	0.1.1.1.2.0	
# ::edge	derive-01	ARG1	element	0.1.1.1.2	0.1.1.1.2.1	
# ::edge	derive-01	ARG2	plot-01	0.1.1.1.2	0.1.1.1	
# ::edge	develop-02	ARG1	character	0.1.1	0.1.1.0	
# ::edge	develop-02	ARG2	plot-01	0.1.1	0.1.1.1	
# ::edge	element	mod	narrative	0.1.1.1.2.1	0.1.1.1.2.1.0	
# ::edge	inventory	mod	kind	0.1.1.1.2.1.1	0.1.1.1.2.1.1.0	
# ::edge	inventory	poss	element	0.1.1.1.2.1.1	0.1.1.1.2.1	
# ::edge	motivate-01	mod	psychological	0	0.0	
# ::edge	or	op1	motivate-01	0.1	0	
# ::edge	or	op2	develop-02	0.1	0.1.1	
# ::edge	plot-01	ARG1	realist	0.1.1.1	0.1.1.1.0	
# ::edge	prostitute-01	ARG1	plot-01	0.1.1.1.1	0.1.1.1	
# ::edge	read-01	ARG0	book	0.1.0.0	0.1.0.0.0	
# ::edge	read-01	ARG1	concern-01	0.1.0.0	0.1.0	
(m / motivate-01 
      :mod (p / psychological) 
      :op-of (o / or 
            :ARG1-of (c2 / concern-01 
                  :ARG1-of (r2 / read-01 
                        :ARG0 (b / book)) 
                  :mod (l / little)) 
            :op1 (d / develop-02 
                  :ARG1 (c / character) 
                  :ARG2 (p2 / plot-01 
                        :ARG1 (r / realist) 
                        :ARG1-of (p3 / prostitute-01) 
                        :ARG2-of (d2 / derive-01 
                              :ARG0 (t / together) 
                              :ARG1 (e / element 
                                    :mod (n / narrative) 
                                    :poss-of (i / inventory 
                                          :mod (k / kind))))))))

# ::snt the confrontational view of morality which pitches a persons own interests and goals as not only occasionally in conflict with his obligations to others but as deriving from independent and fundamentally different sources is essentially an individualistic conception
# ::tok the confrontational view of morality which pitches a persons own interests and goals as not only occasionally in conflict with his obligations to others but as deriving from independent and fundamentally different sources is essentially an individualistic conception
# ::alignments 36-37|0.2.1.0.1 34-35|0.1.0 32-33|0.2.1.2 31-32|0.2.1.1 30-31|0.2.1.1.1 29-30|0.2.1 28-29|0.2.1.0.2+0.2.1.0 24-25|0.2 23-24|0.0 21-22|0 18-19|0.1 16-17|0.0.0 15-16|0.0.0.0 12-13|0.2.1.1.0.2 11-12|0.2.1.1.0 10-11|0.2.1.1.0.1 8-9|0.2.1.1.0.0 4-5|0.2.1.0.0 1-2|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:18.658
# ::node	0	obligate-01	21-22
# ::node	0.0	other	23-24
# ::node	0.0.0	occasional	16-17
# ::node	0.0.0.0	only	15-16
# ::node	0.1	conflict-01	18-19
# ::node	0.1.0	essential	34-35
# ::node	0.2	contrast-01	24-25
# ::node	0.2.0	confrontation	1-2
# ::node	0.2.1	and	29-30
# ::node	0.2.1.0	depend-01	28-29
# ::node	0.2.1.0.0	morality	4-5
# ::node	0.2.1.0.1	individualistic	36-37
# ::node	0.2.1.0.2	-	28-29
# ::node	0.2.1.1	differ-02	31-32
# ::node	0.2.1.1.0	and	11-12
# ::node	0.2.1.1.0.0	person	8-9
# ::node	0.2.1.1.0.1	interest	10-11
# ::node	0.2.1.1.0.2	goal	12-13
# ::node	0.2.1.1.1	fundamental	30-31
# ::node	0.2.1.2	source	32-33
# ::root	0	obligate-01
# ::edge	and	op1	depend-01	0.2.1	0.2.1.0	
# ::edge	and	op1	person	0.2.1.1.0	0.2.1.1.0.0	
# ::edge	and	op2	differ-02	0.2.1	0.2.1.1	
# ::edge	and	op2	interest	0.2.1.1.0	0.2.1.1.0.1	
# ::edge	and	op3	goal	0.2.1.1.0	0.2.1.1.0.2	
# ::edge	and	op3	source	0.2.1	0.2.1.2	
# ::edge	conflict-01	ARG0	essential	0.1	0.1.0	
# ::edge	conflict-01	ARG1	obligate-01	0.1	0	
# ::edge	contrast-01	ARG0	confrontation	0.2	0.2.0	
# ::edge	contrast-01	ARG2	and	0.2	0.2.1	
# ::edge	depend-01	ARG0	morality	0.2.1.0	0.2.1.0.0	
# ::edge	depend-01	ARG1	individualistic	0.2.1.0	0.2.1.0.1	
# ::edge	depend-01	polarity	-	0.2.1.0	0.2.1.0.2	
# ::edge	differ-02	ARG1	and	0.2.1.1	0.2.1.1.0	
# ::edge	differ-02	mod	fundamental	0.2.1.1	0.2.1.1.1	
# ::edge	obligate-01	ARG1	other	0	0.0	
# ::edge	obligate-01	ARG2	contrast-01	0	0.2	
# ::edge	occasional	mod	only	0.0.0	0.0.0.0	
# ::edge	occasional	op1	other	0.0.0	0.0	
(o2 / obligate-01 
      :ARG1 (o / other 
            :op-of (o3 / occasional 
                  :mod (o4 / only))) 
      :ARG1-of (c2 / conflict-01 
            :ARG0 (e / essential)) 
      :ARG2 (c / contrast-01 
            :ARG0 (c3 / confrontation) 
            :ARG2 (a / and 
                  :op1 (d2 / depend-01 
                        :ARG0 (m / morality) 
                        :ARG1 (i / individualistic) 
                        :polarity -) 
                  :op2 (d / differ-02 
                        :ARG1 (a2 / and 
                              :op1 (p / person) 
                              :op2 (i2 / interest) 
                              :op3 (g / goal)) 
                        :mod (f / fundamental)) 
                  :op3 (s / source))))

# ::snt donna can warn him but is aware that though his pain will be five time as great as the satisfaction each of them will derive from the attack given that there are ten bashers and one victim their total satisfaction is greater than his pain
# ::tok donna can warn him but is aware that though his pain will be five time as great as the satisfaction each of them will derive from the attack given that there are ten bashers and one victim their total satisfaction is greater than his pain
# ::alignments 44-45|0.0.0.0.0.0.0.0 41-42|0.0.0.0.0.0.0 39-40|0.0.0.0.0.0 36-37|0.0.0.0.0.0.1 34-35|0.0.0.0.1.0 28-29|0.0.0.0.1 27-28|0.0.0.0 24-25|0.0.0.0.2 20-21|0.0.0.0.2.1.0 19-20|0.0.0.0.2.1 16-17|0.0.0.0.0.1 14-15|0.0.0.0.0.1.0 13-14|0.0.0.0.2.0 10-11|0.0.0.0.0 4-5|0 2-3|0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:19.122
# ::node	0	contrast-01	4-5
# ::node	0.0	possible	1-2
# ::node	0.0.0	warn-01	2-3
# ::node	0.0.0.0	attack-01	27-28
# ::node	0.0.0.0.0	pain-01	10-11
# ::node	0.0.0.0.0.0	satisfy-01	39-40
# ::node	0.0.0.0.0.0.0	great	41-42
# ::node	0.0.0.0.0.0.0.0	pain-01	44-45
# ::node	0.0.0.0.0.0.1	victim	36-37
# ::node	0.0.0.0.0.1	great	16-17
# ::node	0.0.0.0.0.1.0	time	14-15
# ::node	0.0.0.0.1	give-01	28-29
# ::node	0.0.0.0.1.0	and	34-35
# ::node	0.0.0.0.2	derive-01	24-25
# ::node	0.0.0.0.2.0	5	13-14
# ::node	0.0.0.0.2.1	satisfy-01	19-20
# ::node	0.0.0.0.2.1.0	each	20-21
# ::root	0	contrast-01
# ::edge	and	op1	give-01	0.0.0.0.1.0	0.0.0.0.1	
# ::edge	attack-01	ARG1	pain-01	0.0.0.0	0.0.0.0.0	
# ::edge	contrast-01	ARG1	possible	0	0.0	
# ::edge	derive-01	ARG0	5	0.0.0.0.2	0.0.0.0.2.0	
# ::edge	derive-01	ARG1	satisfy-01	0.0.0.0.2	0.0.0.0.2.1	
# ::edge	derive-01	ARG2	attack-01	0.0.0.0.2	0.0.0.0	
# ::edge	give-01	ARG1	attack-01	0.0.0.0.1	0.0.0.0	
# ::edge	great	compared-to	pain-01	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	great	domain	pain-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	pain-01	ARG1	satisfy-01	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	possible	domain	warn-01	0.0	0.0.0	
# ::edge	satisfy-01	ARG0	great	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	satisfy-01	ARG1	each	0.0.0.0.2.1	0.0.0.0.2.1.0	
# ::edge	satisfy-01	ARG1	victim	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	time	mod	great	0.0.0.0.0.1.0	0.0.0.0.0.1	
# ::edge	warn-01	ARG1	attack-01	0.0.0	0.0.0.0	
(c / contrast-01 
      :ARG1 (p3 / possible 
            :domain (w / warn-01 
                  :ARG1 (a2 / attack-01 
                        :ARG1 (p2 / pain-01 
                              :ARG1 (s / satisfy-01 
                                    :ARG0 (g / great 
                                          :compared-to (p / pain-01)) 
                                    :ARG1 (v / victim)) 
                              :domain-of (g3 / great 
                                    :mod-of (t / time))) 
                        :ARG1-of (g2 / give-01 
                              :op-of (a / and)) 
                        :ARG2-of (d / derive-01 
                              :ARG0 5 
                              :ARG1 (s2 / satisfy-01 
                                    :ARG1 (e / each)))))))

# ::snt what is the mechanism of this from where is the extra liveliness derived
# ::tok what is the mechanism of this from where is the extra liveliness derived
# ::alignments 12-13|0.0 10-11|0 5-6|0.0.1 3-4|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:19.169
# ::node	0	extra	10-11
# ::node	0.0	derive-01	12-13
# ::node	0.0.0	mechanism	3-4
# ::node	0.0.1	this	5-6
# ::root	0	extra
(e / extra 
      :ARG2-of (d / derive-01 
            :ARG0 (m / mechanism) 
            :ARG1 (t / this)))

# ::snt the markedly sceptical attitude and arguments which run through his writings are derived from sextus and from others such as michel montaigne and pierre charron who were themselves influenced by sextus
# ::tok the markedly sceptical attitude and arguments which run through his writings are derived from sextus and from others such as michel montaigne and pierre charron who were themselves influenced by sextus
# ::alignments 28-29|0.0 22-23|0 18-19|0.0.0.0 17-18|0.0.0 15-16|0.1.1 12-13|0.1 10-11|0.1.1.0.0+0.1.1.0 5-6|0.1.2.0 4-5|0.1.2 3-4|0.1.0 2-3|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:19.946
# ::node	0	and	22-23
# ::node	0.0	influence-01	28-29
# ::node	0.0.0	other	17-18
# ::node	0.0.0.0	such	18-19
# ::node	0.1	derive-01	12-13
# ::node	0.1.0	attitude	3-4
# ::node	0.1.0.0	sceptical	2-3
# ::node	0.1.1	and	15-16
# ::node	0.1.1.0	thing	10-11
# ::node	0.1.1.0.0	write-01	10-11
# ::node	0.1.2	and	4-5
# ::node	0.1.2.0	argue-01	5-6
# ::root	0	and
(a / and 
      :ARG0-of (i / influence-01 
            :ARG1 (o / other 
                  :mod-of (s / such))) 
      :ARG2-of (d / derive-01 
            :ARG1 (a5 / attitude 
                  :mod (s2 / sceptical)) 
            :manner (a2 / and 
                  :op1 (t / thing 
                        :ARG1-of (w / write-01))) 
            :purpose (a4 / and 
                  :op1 (a3 / argue-01))))

# ::snt cubism was used as a vehicle for the laws of simultaneous contrast of colour derived from chevreul via gauguin van gogh the symbolists and the fauves by robert and sonia delaunay
# ::tok cubism was used as a vehicle for the laws of simultaneous contrast of colour derived from chevreul via gauguin van gogh the symbolists and the fauves by robert and sonia delaunay
# ::alignments 28-29|0.0.1 23-24|0 19-20|0.1 14-15|0.0.1.0.0 13-14|0.0.1.0.0.0 11-12|0.0.1.0 10-11|0.0.1.0.1 8-9|0.0.1.0.2 5-6|0.0.0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:20.256
# ::node	0	and	23-24
# ::node	0.0	use-01	2-3
# ::node	0.0.0	vehicle	5-6
# ::node	0.0.1	and	28-29
# ::node	0.0.1.0	contrast-01	11-12
# ::node	0.0.1.0.0	derive-01	14-15
# ::node	0.0.1.0.0.0	colour	13-14
# ::node	0.0.1.0.1	simultaneous	10-11
# ::node	0.0.1.0.2	law	8-9
# ::node	0.1	van	19-20
# ::root	0	and
(a2 / and 
      :ARG1-of (u / use-01 
            :ARG2 (v2 / vehicle) 
            :op-of (a / and 
                  :ARG2-of (c2 / contrast-01 
                        :ARG1 (d / derive-01 
                              :ARG1 (c / colour)) 
                        :mod (s / simultaneous) 
                        :topic-of (l / law)))) 
      :topic-of (v / van))

# ::snt one in every four purchases from your local chemist contains compounds derived from rainforest species
# ::tok one in every four purchases from your local chemist contains compounds derived from rainforest species
# ::alignments 14-15|0.1.0 11-12|0.1 9-10|0 8-9|0.0 7-8|0.0.1 4-5|0.0.0 3-4|0.0.0.1 2-3|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:20.340
# ::node	0	contain-01	9-10
# ::node	0.0	chemist	8-9
# ::node	0.0.0	purchase-01	4-5
# ::node	0.0.0.0	every	2-3
# ::node	0.0.0.1	4	3-4
# ::node	0.0.1	local	7-8
# ::node	0.1	derive-01	11-12
# ::node	0.1.0	species	14-15
# ::root	0	contain-01
# ::edge	chemist	mod	local	0.0	0.0.1	
# ::edge	contain-01	ARG0	chemist	0	0.0	
# ::edge	contain-01	ARG1	derive-01	0	0.1	
# ::edge	derive-01	ARG2	species	0.1	0.1.0	
# ::edge	purchase-01	ARG1	chemist	0.0.0	0.0	
# ::edge	purchase-01	mod	every	0.0.0	0.0.0.0	
# ::edge	purchase-01	quant	4	0.0.0	0.0.0.1	
(c / contain-01 
      :ARG0 (c2 / chemist 
            :ARG1-of (p / purchase-01 
                  :mod (e / every) 
                  :quant 4) 
            :mod (l / local)) 
      :ARG1 (d / derive-01 
            :ARG2 (s / species)))

# ::snt does not our analysis reinforce the view that freedom is not an independent separate ideal that freedom consists in the pursuit of valuable forms of life and that its value derives from the value of that pursuit
# ::tok does not our analysis reinforce the view that freedom is not an independent separate ideal that freedom consists in the pursuit of valuable forms of life and that its value derives from the value of that pursuit
# ::alignments 36-37|0.0.2.0.0.0 33-34|0.0.2.0.0.0.0 29-30|0.0.2.0.0.0.1 26-27|0 25-26|0.0.0.2.0 23-24|0.0.2.0 22-23|0.0.2.0.0 20-21|0.0.2 17-18|0.0 16-17|0.0.1 14-15|0.0.0 13-14|0.0.0.3 12-13|0.0.0.1.0+0.0.0.1 8-9|0.0.0.2 4-5|0.0.0.0 3-4|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:20.973
# ::node	0	and	26-27
# ::node	0.0	consist-01	17-18
# ::node	0.0.0	ideal	14-15
# ::node	0.0.0.0	reinforce-01	4-5
# ::node	0.0.0.0.0	analyze-01	3-4
# ::node	0.0.0.1	depend-01	12-13
# ::node	0.0.0.1.0	-	12-13
# ::node	0.0.0.2	free-41	8-9
# ::node	0.0.0.2.0	life	25-26
# ::node	0.0.0.3	separate	13-14
# ::node	0.0.1	free-41	16-17
# ::node	0.0.2	pursue-01	20-21
# ::node	0.0.2.0	form	23-24
# ::node	0.0.2.0.0	value-01	22-23
# ::node	0.0.2.0.0.0	pursue-01	36-37
# ::node	0.0.2.0.0.0.0	value-01	33-34
# ::node	0.0.2.0.0.0.1	value-01	29-30
# ::root	0	and
# ::edge	and	op1	consist-01	0	0.0	
# ::edge	consist-01	ARG0	ideal	0.0	0.0.0	
# ::edge	consist-01	ARG1	free-41	0.0	0.0.1	
# ::edge	consist-01	ARG2	pursue-01	0.0	0.0.2	
# ::edge	depend-01	ARG0	ideal	0.0.0.1	0.0.0	
# ::edge	depend-01	polarity	-	0.0.0.1	0.0.0.1.0	
# ::edge	free-41	ARG1	life	0.0.0.2	0.0.0.2.0	
# ::edge	ideal	domain	free-41	0.0.0	0.0.0.2	
# ::edge	ideal	mod	separate	0.0.0	0.0.0.3	
# ::edge	pursue-01	ARG1	form	0.0.2	0.0.2.0	
# ::edge	pursue-01	ARG1	value-01	0.0.2.0.0.0	0.0.2.0.0	
# ::edge	reinforce-01	ARG0	ideal	0.0.0.0	0.0.0	
# ::edge	reinforce-01	ARG1	analyze-01	0.0.0.0	0.0.0.0.0	
# ::edge	value-01	ARG1	form	0.0.2.0.0	0.0.2.0	
# ::edge	value-01	ARG1	pursue-01	0.0.2.0.0.0.0	0.0.2.0.0.0	
# ::edge	value-01	topic	pursue-01	0.0.2.0.0.0.1	0.0.2.0.0.0	
(a / and 
      :op1 (c / consist-01 
            :ARG0 (i / ideal 
                  :ARG0-of (r / reinforce-01 
                        :ARG1 (a2 / analyze-01)) 
                  :ARG0-of (d / depend-01 
                        :polarity -) 
                  :domain (f3 / free-41 
                        :ARG1 (l / life)) 
                  :mod (s / separate)) 
            :ARG1 (f2 / free-41) 
            :ARG2 (p2 / pursue-01 
                  :ARG1 (f / form 
                        :ARG1-of (v3 / value-01 
                              :ARG1-of (p / pursue-01 
                                    :ARG1-of (v / value-01) 
                                    :topic-of (v2 / value-01)))))))

# ::snt the powerfulness of the stories derives in part from the immediacy of lewiss roughhewn style but more surely from the fact that this image touches something so very deep in so many people
# ::tok the powerfulness of the stories derives in part from the immediacy of lewiss roughhewn style but more surely from the fact that this image touches something so very deep in so many people
# ::alignments 31-32|0.0.0 30-31|0.0 28-29|0.2.0.0.1 27-28|0.2.0.0.1.0 26-27|0.2.0.0.1.0.0 25-26|0.2.0.0 24-25|0.2.0.0.0 23-24|0.2.0.0.0.0 22-23|0.2.0.0.2 20-21|0.2.0 17-18|0.2 15-16|0 14-15|0.1 4-5|0.2.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:21.292
# ::node	0	contrast-01	15-16
# ::node	0.0	so	30-31
# ::node	0.0.0	many	31-32
# ::node	0.1	style	14-15
# ::node	0.2	sure	17-18
# ::node	0.2.0	fact	20-21
# ::node	0.2.0.0	something	25-26
# ::node	0.2.0.0.0	touch-01	24-25
# ::node	0.2.0.0.0.0	image	23-24
# ::node	0.2.0.0.0.1	story	4-5
# ::node	0.2.0.0.1	deep	28-29
# ::node	0.2.0.0.1.0	very	27-28
# ::node	0.2.0.0.1.0.0	so	26-27
# ::node	0.2.0.0.2	this	22-23
# ::root	0	contrast-01
# ::edge	contrast-01	ARG0	so	0	0.0	
# ::edge	contrast-01	consist	style	0	0.1	
# ::edge	deep	degree	very	0.2.0.0.1	0.2.0.0.1.0	
# ::edge	deep	example	something	0.2.0.0.1	0.2.0.0	
# ::edge	fact	poss	something	0.2.0	0.2.0.0	
# ::edge	fact	quant	sure	0.2.0	0.2	
# ::edge	many	degree	so	0.0.0	0.0	
# ::edge	something	mod	this	0.2.0.0	0.2.0.0.2	
# ::edge	story	op1	touch-01	0.2.0.0.0.1	0.2.0.0.0	
# ::edge	sure	degree	contrast-01	0.2	0	
# ::edge	touch-01	ARG0	something	0.2.0.0.0	0.2.0.0	
# ::edge	touch-01	ARG1	image	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	very	degree	so	0.2.0.0.1.0	0.2.0.0.1.0.0	
(c / contrast-01 
      :ARG0 (s / so 
            :degree-of (m / many)) 
      :consist (s5 / style) 
      :degree-of (s4 / sure 
            :quant-of (f / fact 
                  :poss (s3 / something 
                        :ARG0-of (t / touch-01 
                              :ARG1 (i / image) 
                              :op-of (s6 / story)) 
                        :example-of (d / deep 
                              :degree (v / very 
                                    :degree (s2 / so))) 
                        :mod (t2 / this)))))

# ::snt this discourse of authority was shot through with religious reference and for practical purposes it made islamic any number of locally derived forms of acts and relations
# ::tok this discourse of authority was shot through with religious reference and for practical purposes it made islamic any number of locally derived forms of acts and relations
# ::alignments 26-27|0.2 25-26|0 22-23|0.1 21-22|0.1.0 20-21|0.1.0.1 18-19|0.1.1 17-18|0.1.1.0 14-15|0.0.0.2 13-14|0.0.0.0.0 12-13|0.0.0.0 10-11|0.0 9-10|0.0.0 5-6|0.0.0.1 3-4|0.0.0.1.0 0-1|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:21.555
# ::node	0	and	25-26
# ::node	0.0	and	10-11
# ::node	0.0.0	reference-01	9-10
# ::node	0.0.0.0	practical	12-13
# ::node	0.0.0.0.0	purpose	13-14
# ::node	0.0.0.1	shoot-02	5-6
# ::node	0.0.0.1.0	authority	3-4
# ::node	0.0.0.2	it	14-15
# ::node	0.1	form	22-23
# ::node	0.1.0	derive-01	21-22
# ::node	0.1.0.0	this	0-1
# ::node	0.1.0.1	local	20-21
# ::node	0.1.1	number	18-19
# ::node	0.1.1.0	any	17-18
# ::node	0.2	relation	26-27
# ::root	0	and
# ::edge	and	op1	and	0	0.0	
# ::edge	and	op1	reference-01	0.0	0.0.0	
# ::edge	and	op2	form	0	0.1	
# ::edge	and	op3	relation	0	0.2	
# ::edge	derive-01	ARG0	this	0.1.0	0.1.0.0	
# ::edge	derive-01	ARG1	form	0.1.0	0.1	
# ::edge	derive-01	manner	local	0.1.0	0.1.0.1	
# ::edge	form	quant	number	0.1	0.1.1	
# ::edge	number	mod	any	0.1.1	0.1.1.0	
# ::edge	purpose	mod	practical	0.0.0.0.0	0.0.0.0	
# ::edge	reference-01	ARG0	practical	0.0.0	0.0.0.0	
# ::edge	reference-01	ARG1	it	0.0.0	0.0.0.2	
# ::edge	shoot-02	ARG0	reference-01	0.0.0.1	0.0.0	
# ::edge	shoot-02	ARG1	authority	0.0.0.1	0.0.0.1.0	
(a / and 
      :op1 (a3 / and 
            :op1 (r2 / reference-01 
                  :ARG0 (p2 / practical 
                        :mod-of (p / purpose)) 
                  :ARG0-of (s / shoot-02 
                        :ARG1 (a4 / authority)) 
                  :ARG1 (i / it))) 
      :op2 (f / form 
            :ARG1-of (d / derive-01 
                  :ARG0 (t / this) 
                  :manner (l / local)) 
            :quant (n / number 
                  :mod (a2 / any))) 
      :op3 (r / relation))

# ::snt he had recently used these devices of degas in the ballet paintings and mirliton panels and once again he complemented them with a caricatural quality derived from popular illustration
# ::tok he had recently used these devices of degas in the ballet paintings and mirliton panels and once again he complemented them with a caricatural quality derived from popular illustration
# ::alignments 28-29|0 27-28|0.0 25-26|0.1 24-25|0.1.0 19-20|0.1.0.0 18-19|0.1.0.0.0 17-18|0.1.0.0.1 16-17|0.1.0.0.2 15-16|0.1.0.0.3 12-13|0.1.0.0.3.0 11-12|0.1.0.0.3.2 10-11|0.1.0.0.3.0.0 5-6|0.1.0.0.3.1.0.0 3-4|0.1.0.0.3.1.0 2-3|0.1.0.0.3.1.0.1 0-1|0.1.0.0.3.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:21.832
# ::node	0	illustrate-01	28-29
# ::node	0.0	popular-41	27-28
# ::node	0.1	derive-01	25-26
# ::node	0.1.0	quality	24-25
# ::node	0.1.0.0	complement-01	19-20
# ::node	0.1.0.0.0	he	18-19
# ::node	0.1.0.0.1	again	17-18
# ::node	0.1.0.0.2	once	16-17
# ::node	0.1.0.0.3	and	15-16
# ::node	0.1.0.0.3.0	and	12-13
# ::node	0.1.0.0.3.0.0	ballet	10-11
# ::node	0.1.0.0.3.1	he	0-1
# ::node	0.1.0.0.3.1.0	use-01	3-4
# ::node	0.1.0.0.3.1.0.0	device	5-6
# ::node	0.1.0.0.3.1.0.1	recent	2-3
# ::node	0.1.0.0.3.2	paint-02	11-12
# ::root	0	illustrate-01
(i / illustrate-01 
      :ARG1-of (p / popular-41) 
      :ARG2-of (d / derive-01 
            :ARG1 (q / quality 
                  :ARG1-of (c / complement-01 
                        :ARG0 (h / he) 
                        :mod (a / again) 
                        :op-of (o / once) 
                        :op-of (a2 / and 
                              :op-of (a3 / and 
                                    :op1 (b / ballet)) 
                              :op1 (h2 / he 
                                    :ARG0-of (u / use-01 
                                          :ARG1 (d2 / device) 
                                          :time (r / recent))) 
                              :op2 (p2 / paint-02))))))

# ::snt both liturgically conservative they would have been unlikely to have derived much pleasure from the knowledge of how radical liturgical change in their church was destined to be
# ::tok both liturgically conservative they would have been unlikely to have derived much pleasure from the knowledge of how radical liturgical change in their church was destined to be
# ::alignments 25-26|0.0.1 23-24|0 20-21|0.0 18-19|0.0.2 15-16|0.0.1.0 12-13|0.0.1.0.0 11-12|0.0.1.0.0.1 10-11|0.0.1.0.0.0 7-8|0.0.1.0.0.0.1.0+0.0.1.0.0.0.1 3-4|0.0.1.0.0.0.0 2-3|0.0.1.0.0.0.0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:21.988
# ::node	0	church	23-24
# ::node	0.0	change-01	20-21
# ::node	0.0.0	both	0-1
# ::node	0.0.1	destine-01	25-26
# ::node	0.0.1.0	knowledge	15-16
# ::node	0.0.1.0.0	pleasure	12-13
# ::node	0.0.1.0.0.0	derive-01	10-11
# ::node	0.0.1.0.0.0.0	they	3-4
# ::node	0.0.1.0.0.0.0.0	conservative	2-3
# ::node	0.0.1.0.0.0.1	likely	7-8
# ::node	0.0.1.0.0.0.1.0	-	7-8
# ::node	0.0.1.0.0.1	much	11-12
# ::node	0.0.2	radical	18-19
# ::root	0	church
(c / church 
      :ARG1-of (c2 / change-01 
            :ARG0 (b / both) 
            :ARG0-of (d / destine-01 
                  :ARG1 (k / knowledge 
                        :mod-of (p / pleasure 
                              :ARG1-of (d2 / derive-01 
                                    :ARG0 (t / they 
                                          :prep-in-of (c3 / conservative)) 
                                    :domain-of (l / likely 
                                          :polarity -)) 
                              :quant (m / much)))) 
            :mod (r / radical)))

# ::snt an agent must not without his principals knowledge and consent receive any reward or commission from those with whom he deals on his principals behalf or derive any profit from transactions entered into on the principals behalf beyond the remuneration agreed upon
# ::tok an agent must not without his principals knowledge and consent receive any reward or commission from those with whom he deals on his principals behalf or derive any profit from transactions entered into on the principals behalf beyond the remuneration agreed upon
# ::alignments 40-41|0.2.0.0.1.0.1.1.0.0.1.0.0 39-40|0.2.0.0.1.0.1.1.0.0.1.0 37-38|0.2.0.0.1.0.1.1.0.0.1 35-36|0.2.0.0.1.0.1.1.0.0.0 31-32|0.2.0.0.1.0.1.1.0.0 30-31|0.2.0.0.1.0.1.1.0 28-29|0.2.0.0.1.0.1.1 27-28|0.2.0.0.1.0.1.1.1 26-27|0.2.0.0.1.0.1 25-26|0.2.0.0.1.0 23-24|0.2.0.0.1.0.0.0.0 20-21|0.2.0.0.1.0.0 19-20|0.2.0.0.1.0.0.0 14-15|0.2.0.0.1 13-14|0.2.0.0 12-13|0.2.0 11-12|0.2.0.0.0 10-11|0.2 9-10|0.1 8-9|0 7-8|0.0 6-7|0.0.0 1-2|0.2.0.0.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:23.190
# ::node	0	and	8-9
# ::node	0.0	knowledge	7-8
# ::node	0.0.0	principal	6-7
# ::node	0.1	consent-01	9-10
# ::node	0.2	receive-01	10-11
# ::node	0.2.0	reward-01	12-13
# ::node	0.2.0.0	or	13-14
# ::node	0.2.0.0.0	any	11-12
# ::node	0.2.0.0.1	commission	14-15
# ::node	0.2.0.0.1.0	or	25-26
# ::node	0.2.0.0.1.0.0	deal-01	20-21
# ::node	0.2.0.0.1.0.0.0	he	19-20
# ::node	0.2.0.0.1.0.0.0.0	principal	23-24
# ::node	0.2.0.0.1.0.1	derive-01	26-27
# ::node	0.2.0.0.1.0.1.0	agent	1-2
# ::node	0.2.0.0.1.0.1.1	profit-01	28-29
# ::node	0.2.0.0.1.0.1.1.0	transact-01	30-31
# ::node	0.2.0.0.1.0.1.1.0.0	enter-01	31-32
# ::node	0.2.0.0.1.0.1.1.0.0.0	principal	35-36
# ::node	0.2.0.0.1.0.1.1.0.0.1	beyond	37-38
# ::node	0.2.0.0.1.0.1.1.0.0.1.0	remunerate-01	39-40
# ::node	0.2.0.0.1.0.1.1.0.0.1.0.0	agree-01	40-41
# ::node	0.2.0.0.1.0.1.1.1	any	27-28
# ::root	0	and
# ::edge	agree-01	ARG1	remunerate-01	0.2.0.0.1.0.1.1.0.0.1.0.0	0.2.0.0.1.0.1.1.0.0.1.0	
# ::edge	and	op1	knowledge	0	0.0	
# ::edge	and	op2	consent-01	0	0.1	
# ::edge	and	op3	receive-01	0	0.2	
# ::edge	beyond	op1	remunerate-01	0.2.0.0.1.0.1.1.0.0.1	0.2.0.0.1.0.1.1.0.0.1.0	
# ::edge	deal-01	ARG0	he	0.2.0.0.1.0.0	0.2.0.0.1.0.0.0	
# ::edge	deal-01	ARG1	or	0.2.0.0.1.0.0	0.2.0.0.1.0	
# ::edge	derive-01	ARG0	agent	0.2.0.0.1.0.1	0.2.0.0.1.0.1.0	
# ::edge	derive-01	ARG1	profit-01	0.2.0.0.1.0.1	0.2.0.0.1.0.1.1	
# ::edge	enter-01	ARG0	principal	0.2.0.0.1.0.1.1.0.0	0.2.0.0.1.0.1.1.0.0.0	
# ::edge	enter-01	ARG1	transact-01	0.2.0.0.1.0.1.1.0.0	0.2.0.0.1.0.1.1.0	
# ::edge	enter-01	mod	beyond	0.2.0.0.1.0.1.1.0.0	0.2.0.0.1.0.1.1.0.0.1	
# ::edge	knowledge	mod	principal	0.0	0.0.0	
# ::edge	or	mod	any	0.2.0.0	0.2.0.0.0	
# ::edge	or	op1	commission	0.2.0.0.1.0	0.2.0.0.1	
# ::edge	or	op1	reward-01	0.2.0.0	0.2.0	
# ::edge	or	op2	commission	0.2.0.0	0.2.0.0.1	
# ::edge	or	op2	derive-01	0.2.0.0.1.0	0.2.0.0.1.0.1	
# ::edge	principal	poss	he	0.2.0.0.1.0.0.0.0	0.2.0.0.1.0.0.0	
# ::edge	profit-01	ARG1	transact-01	0.2.0.0.1.0.1.1	0.2.0.0.1.0.1.1.0	
# ::edge	profit-01	mod	any	0.2.0.0.1.0.1.1	0.2.0.0.1.0.1.1.1	
# ::edge	receive-01	ARG1	reward-01	0.2	0.2.0	
(a4 / and 
      :op1 (k / knowledge 
            :mod (p4 / principal)) 
      :op2 (c2 / consent-01) 
      :op3 (r3 / receive-01 
            :ARG1 (r2 / reward-01 
                  :op-of (o2 / or 
                        :mod (a3 / any) 
                        :op1 (c / commission 
                              :op-of (o / or 
                                    :ARG1-of (d2 / deal-01 
                                          :ARG0 (h / he 
                                                :poss-of (p3 / principal))) 
                                    :op1 (d / derive-01 
                                          :ARG0 (a5 / agent) 
                                          :ARG1 (p2 / profit-01 
                                                :ARG1 (t / transact-01 
                                                      :ARG1-of (e / enter-01 
                                                            :ARG0 (p / principal) 
                                                            :mod (b / beyond 
                                                                  :op1 (r / remunerate-01 
                                                                        :ARG1-of (a / agree-01))))) 
                                                :mod (a2 / any)))))))))

# ::snt its graphic form may be better interpreted by the 12 sided regular duodecagon derived from a rotating equilateral triangle
# ::tok its graphic form may be better interpreted by the 12 sided regular duodecagon derived from a rotating equilateral triangle
# ::alignments 16-17|0 13-14|0.2 11-12|0.1 9-10|0.0 3-4|0.3.0+0.3 2-3|0.2.0 1-2|0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:23.316
# ::node	0	rotate-02	16-17
# ::node	0.0	12	9-10
# ::node	0.1	regular	11-12
# ::node	0.2	derive-01	13-14
# ::node	0.2.0	form	2-3
# ::node	0.2.0.0	graphic	1-2
# ::node	0.3	date-entity	3-4
# ::node	0.3.0	5	3-4
# ::root	0	rotate-02
# ::edge	date-entity	month	5	0.3	0.3.0	
# ::edge	date-entity	op1	rotate-02	0.3	0	
# ::edge	derive-01	ARG0	form	0.2	0.2.0	
# ::edge	derive-01	manner	rotate-02	0.2	0	
# ::edge	form	mod	graphic	0.2.0	0.2.0.0	
# ::edge	rotate-02	ARG0	12	0	0.0	
# ::edge	rotate-02	ARG1	regular	0	0.1	
(r / rotate-02 
      :ARG0 12 
      :ARG1 (r2 / regular) 
      :manner-of (d / derive-01 
            :ARG0 (f / form 
                  :mod (g / graphic))) 
      :op-of (d2 / date-entity 
            :month 5))

# ::snt it does however have a missionary vision of what it means to be truly human derived partly from rational reflection on human capacities and desires but supremely from its conviction that we glimpse true humanity in the life death and teaching of jesus
# ::tok it does however have a missionary vision of what it means to be truly human derived partly from rational reflection on human capacities and desires but supremely from its conviction that we glimpse true humanity in the life death and teaching of jesus
# ::alignments 40-41|0.0.0.1.0.1.0 39-40|0.0.0.1.0.1 38-39|0.0.0.1 37-38|0.0.0.1.0.1.0.0 34-35|0.0.0.1.0 33-34|0.0.0.1.0.0 31-32|0.0.0 29-30|0.0.0.0 25-26|0 23-24|0.2 21-22|0.1 19-20|0.2.0 18-19|0.2.0.1 16-17|0.0.1 15-16|0.0 14-15|0.0.2 13-14|0.0.3 10-11|0.0.2.0 9-10|0.0.2.0.0 0-1|0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:24.181
# ::node	0	contrast-01	25-26
# ::node	0.0	derive-01	15-16
# ::node	0.0.0	we	31-32
# ::node	0.0.0.0	convict-01	29-30
# ::node	0.0.0.1	die-01	38-39
# ::node	0.0.0.1.0	humanity	34-35
# ::node	0.0.0.1.0.0	true	33-34
# ::node	0.0.0.1.0.1	and	39-40
# ::node	0.0.0.1.0.1.0	teach-01	40-41
# ::node	0.0.0.1.0.1.0.0	life	37-38
# ::node	0.0.1	partly	16-17
# ::node	0.0.2	human	14-15
# ::node	0.0.2.0	mean-01	10-11
# ::node	0.0.2.0.0	it	9-10
# ::node	0.0.3	truly	13-14
# ::node	0.1	human	21-22
# ::node	0.2	and	23-24
# ::node	0.2.0	reflect-01	19-20
# ::node	0.2.0.0	it	0-1
# ::node	0.2.0.1	rational	18-19
# ::root	0	contrast-01
# ::edge	and	op1	contrast-01	0.2	0	
# ::edge	and	op1	humanity	0.0.0.1.0.1	0.0.0.1.0	
# ::edge	and	op2	teach-01	0.0.0.1.0.1	0.0.0.1.0.1.0	
# ::edge	contrast-01	ARG1	derive-01	0	0.0	
# ::edge	contrast-01	mod	human	0	0.1	
# ::edge	convict-01	ARG1	we	0.0.0.0	0.0.0	
# ::edge	derive-01	ARG0	we	0.0	0.0.0	
# ::edge	derive-01	ARG1	partly	0.0	0.0.1	
# ::edge	derive-01	manner	human	0.0	0.0.2	
# ::edge	derive-01	time	truly	0.0	0.0.3	
# ::edge	die-01	ARG1	we	0.0.0.1	0.0.0	
# ::edge	humanity	mod	true	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	humanity	topic	die-01	0.0.0.1.0	0.0.0.1	
# ::edge	mean-01	ARG0	it	0.0.2.0	0.0.2.0.0	
# ::edge	mean-01	ARG1	human	0.0.2.0	0.0.2	
# ::edge	reflect-01	ARG1	it	0.2.0	0.2.0.0	
# ::edge	reflect-01	ARG2	and	0.2.0	0.2	
# ::edge	reflect-01	mod	rational	0.2.0	0.2.0.1	
# ::edge	teach-01	ARG1	life	0.0.0.1.0.1.0	0.0.0.1.0.1.0.0	
(c2 / contrast-01 
      :ARG1 (d2 / derive-01 
            :ARG0 (w / we 
                  :ARG1-of (c / convict-01) 
                  :ARG1-of (d / die-01 
                        :topic-of (h / humanity 
                              :mod (t2 / true) 
                              :op-of (a / and 
                                    :op1 (t / teach-01 
                                          :ARG1 (l / life)))))) 
            :ARG1 (p / partly) 
            :manner (h3 / human 
                  :ARG1-of (m / mean-01 
                        :ARG0 (i / it))) 
            :time (t3 / truly)) 
      :mod (h2 / human) 
      :op-of (a2 / and 
            :ARG2-of (r / reflect-01 
                  :ARG1 (i2 / it) 
                  :mod (r2 / rational))))

# ::snt   evidently she derived some emotional satisfaction from having the sheer illogicality of her letters exploded by the great man himself
# ::tok evidently she derived some emotional satisfaction from having the sheer illogicality of her letters exploded by the great man himself
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:24.182
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt mr kentridge submitted that all disciplinary powers derived from the judges so that any complaint about the incorrect or improper exercise of the powers must go to the judges and not to the divisional court
# ::tok mr kentridge submitted that all disciplinary powers derived from the judges so that any complaint about the incorrect or improper exercise of the powers must go to the judges and not to the divisional court
# ::alignments 34-35|0.1 29-30|0 28-29|0.0 23-24|0.0.0.0 20-21|0.0.0 18-19|0.0.0.3 17-18|0.0.0.2.0+0.0.0.2 14-15|0.0.0.1 13-14|0.0.0.1.0 11-12|0.0.1.1.0 10-11|0.0.1.2 7-8|0.0.1 6-7|0.0.1.0 5-6|0.0.1.0.0 4-5|0.0.1.0.1 2-3|0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:24.752
# ::node	0	and	29-30
# ::node	0.0	judge-01	28-29
# ::node	0.0.0	exercise-02	20-21
# ::node	0.0.0.0	power	23-24
# ::node	0.0.0.1	complain-01	14-15
# ::node	0.0.0.1.0	any	13-14
# ::node	0.0.0.2	correct	17-18
# ::node	0.0.0.2.0	-	17-18
# ::node	0.0.0.3	or	18-19
# ::node	0.0.1	derive-01	7-8
# ::node	0.0.1.0	power	6-7
# ::node	0.0.1.0.0	discipline	5-6
# ::node	0.0.1.0.1	all	4-5
# ::node	0.0.1.1	submit-01	2-3
# ::node	0.0.1.1.0	so	11-12
# ::node	0.0.1.2	judge-01	10-11
# ::node	0.1	court	34-35
# ::root	0	and
# ::edge	and	op1	court	0	0.1	
# ::edge	complain-01	ARG2	exercise-02	0.0.0.1	0.0.0	
# ::edge	complain-01	mod	any	0.0.0.1	0.0.0.1.0	
# ::edge	correct	polarity	-	0.0.0.2	0.0.0.2.0	
# ::edge	derive-01	ARG0	power	0.0.1	0.0.1.0	
# ::edge	derive-01	ARG1	judge-01	0.0.1	0.0	
# ::edge	derive-01	ARG2	judge-01	0.0.1	0.0.1.2	
# ::edge	exercise-02	ARG1	power	0.0.0	0.0.0.0	
# ::edge	exercise-02	mod	correct	0.0.0	0.0.0.2	
# ::edge	judge-01	ARG0	and	0.0	0	
# ::edge	judge-01	ARG1	exercise-02	0.0	0.0.0	
# ::edge	or	op1	exercise-02	0.0.0.3	0.0.0	
# ::edge	power	mod	discipline	0.0.1.0	0.0.1.0.0	
# ::edge	power	quant	all	0.0.1.0	0.0.1.0.1	
# ::edge	submit-01	ARG0	so	0.0.1.1	0.0.1.1.0	
# ::edge	submit-01	ARG1	derive-01	0.0.1.1	0.0.1	
(a / and 
      :ARG0-of (j / judge-01 
            :ARG1 (e / exercise-02 
                  :ARG1 (p / power) 
                  :ARG2-of (c3 / complain-01 
                        :mod (a2 / any)) 
                  :mod (c2 / correct 
                        :polarity -) 
                  :op-of (o / or)) 
            :ARG1-of (d / derive-01 
                  :ARG0 (p2 / power 
                        :mod (d2 / discipline) 
                        :quant (a3 / all)) 
                  :ARG1-of (s2 / submit-01 
                        :ARG0 (s / so)) 
                  :ARG2 (j2 / judge-01))) 
      :op1 (c / court))

# ::snt nor did they make any serious efforts to derive income from a huge fixed asset which was used for only a few hours a week
# ::tok nor did they make any serious efforts to derive income from a huge fixed asset which was used for only a few hours a week
# ::alignments 24-25|0.0.0.0.1 22-23|0+0.0 21-22|0.0.0 19-20|0.0.0.0.0.0.0 17-18|0.0.0.0 14-15|0.0.0.0.0 13-14|0.0.0.0.0.0 12-13|0.0.0.0.0.1 9-10|0.0.0.0.0.2.0.0 8-9|0.0.0.0.0.2.0 6-7|0.0.0.0.0.2.0.1 5-6|0.0.0.0.0.2.0.1.1 4-5|0.0.0.0.0.2.0.1.0 2-3|0.0.0.0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:25.225
# ::node	0	hour	22-23
# ::node	0.0	temporal-quantity	22-23
# ::node	0.0.0	few	21-22
# ::node	0.0.0.0	use-01	17-18
# ::node	0.0.0.0.0	asset	14-15
# ::node	0.0.0.0.0.0	fix-03	13-14
# ::node	0.0.0.0.0.0.0	only	19-20
# ::node	0.0.0.0.0.1	huge	12-13
# ::node	0.0.0.0.0.2	they	2-3
# ::node	0.0.0.0.0.2.0	derive-01	8-9
# ::node	0.0.0.0.0.2.0.0	income	9-10
# ::node	0.0.0.0.0.2.0.1	effort	6-7
# ::node	0.0.0.0.0.2.0.1.0	any	4-5
# ::node	0.0.0.0.0.2.0.1.1	serious	5-6
# ::node	0.0.0.0.1	week	24-25
# ::root	0	hour
(h / hour 
      :unit-of (t / temporal-quantity 
            :op-of (f / few 
                  :ARG2-of (u / use-01 
                        :ARG1 (a / asset 
                              :ARG1-of (f2 / fix-03 
                                    :ARG0 (o / only)) 
                              :mod (h2 / huge) 
                              :poss (t2 / they 
                                    :ARG0-of (d / derive-01 
                                          :ARG1 (i / income) 
                                          :ARG2 (e / effort 
                                                :mod (a2 / any) 
                                                :mod (s / serious))))) 
                        :time (w / week)))))

# ::snt a second plausible explanation more recent derives from the siting of the gallows which serviced the garrison at charles fort
# ::tok a second plausible explanation more recent derives from the siting of the gallows which serviced the garrison at charles fort
# ::alignments 5-6|0.1 3-4|0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:25.266
# ::node	0	explain-01	3-4
# ::node	0.0	plausible	2-3
# ::node	0.1	recent	5-6
# ::root	0	explain-01
# ::edge	explain-01	mod	plausible	0	0.0	
# ::edge	explain-01	time	recent	0	0.1	
(e / explain-01 
      :mod (p / plausible) 
      :time (r / recent))

# ::snt only halifax had an historic title and it derived from a nineteenthcentury whig
# ::tok only halifax had an historic title and it derived from a nineteenthcentury whig
# ::alignments 8-9|0 7-8|0.1 6-7|0.2 5-6|0.2.1 4-5|0.2.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:25.321
# ::node	0	derive-01	8-9
# ::node	0.0	only	0-1
# ::node	0.1	it	7-8
# ::node	0.2	and	6-7
# ::node	0.2.0	history	4-5
# ::node	0.2.1	title	5-6
# ::root	0	derive-01
# ::edge	and	mod	history	0.2	0.2.0	
# ::edge	and	op1	title	0.2	0.2.1	
# ::edge	and	op2	derive-01	0.2	0	
# ::edge	derive-01	ARG0	only	0	0.0	
# ::edge	derive-01	ARG1	it	0	0.1	
(d / derive-01 
      :ARG0 (o / only) 
      :ARG1 (i / it) 
      :op-of (a / and 
            :mod (h / history) 
            :op1 (t / title)))

# ::snt for locke however they are whatsoever is the object of the understanding when a man thinks and his conception of them as essentially minddependent things is derived from descartes
# ::tok for locke however they are whatsoever is the object of the understanding when a man thinks and his conception of them as essentially minddependent things is derived from descartes
# ::alignments 26-27|0.0 24-25|0 22-23|0.0.0.0.1.0 16-17|0.0.0 15-16|0.0.0.0 14-15|0.0.0.0.0 11-12|0.0.0.0.1 8-9|0.0.0.0.1.1 5-6|0.0.2 3-4|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:25.602
# ::node	0	thing	24-25
# ::node	0.0	derive-01	26-27
# ::node	0.0.0	and	16-17
# ::node	0.0.0.0	think-01	15-16
# ::node	0.0.0.0.0	man	14-15
# ::node	0.0.0.0.1	understand-01	11-12
# ::node	0.0.0.0.1.0	essential	22-23
# ::node	0.0.0.0.1.1	object	8-9
# ::node	0.0.1	they	3-4
# ::node	0.0.2	whatsoever	5-6
# ::root	0	thing
(t / thing 
      :ARG1-of (d / derive-01 
            :op-of (a / and 
                  :op1 (t2 / think-01 
                        :ARG0 (m / man) 
                        :ARG1 (u / understand-01 
                              :ARG1 (e / essential) 
                              :mod-of (o / object)))) 
            :op-of (t3 / they) 
            :op-of (w / whatsoever)))

# ::snt similarly folk memories of 1929 derived from flickering pathe news clips inspire styles of panic on todays trading floors
# ::tok similarly folk memories of 1929 derived from flickering pathe news clips inspire styles of panic on todays trading floors
# ::alignments 17-18|0.0.0 14-15|0.1 11-12|0 10-11|0.0 9-10|0.0.2 5-6|0.0.1 4-5|0.1.0.0+0.1.0 2-3|0.0.1.0 1-2|0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:25.811
# ::node	0	inspire-01	11-12
# ::node	0.0	clip	10-11
# ::node	0.0.0	trade-01	17-18
# ::node	0.0.1	derive-01	5-6
# ::node	0.0.1.0	memory	2-3
# ::node	0.0.1.0.0	folk	1-2
# ::node	0.0.2	news	9-10
# ::node	0.1	panic-01	14-15
# ::node	0.1.0	date-entity	4-5
# ::node	0.1.0.0	1929	4-5
# ::root	0	inspire-01
# ::edge	clip	mod	news	0.0	0.0.2	
# ::edge	date-entity	year	1929	0.1.0	0.1.0.0	
# ::edge	derive-01	ARG0	clip	0.0.1	0.0	
# ::edge	derive-01	ARG1	memory	0.0.1	0.0.1.0	
# ::edge	inspire-01	ARG0	clip	0	0.0	
# ::edge	inspire-01	ARG1	panic-01	0	0.1	
# ::edge	memory	mod	folk	0.0.1.0	0.0.1.0.0	
# ::edge	panic-01	ARG1	date-entity	0.1	0.1.0	
# ::edge	trade-01	ARG0	clip	0.0.0	0.0	
(i / inspire-01 
      :ARG0 (c / clip 
            :ARG0-of (t / trade-01) 
            :ARG0-of (d / derive-01 
                  :ARG1 (m / memory 
                        :mod (f / folk))) 
            :mod (n / news)) 
      :ARG1 (p / panic-01 
            :ARG1 (d2 / date-entity 
                  :year 1929)))

# ::snt the new system for arranging eurobond issues is derived from the way new issues have been done in the us for many years
# ::tok the new system for arranging eurobond issues is derived from the way new issues have been done in the us for many years
# ::alignments 22-23|0.0.2.0.0+0.0.2.0 21-22|0.0.2 13-14|0.0.0.1 12-13|0.0.0.1.0 11-12|0.0.1 8-9|0.0 6-7|0 2-3|0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:25.996
# ::node	0	issue	6-7
# ::node	0.0	derive-01	8-9
# ::node	0.0.0	system	2-3
# ::node	0.0.0.0	new	1-2
# ::node	0.0.0.1	issue	13-14
# ::node	0.0.0.1.0	new	12-13
# ::node	0.0.1	way	11-12
# ::node	0.0.2	many	21-22
# ::node	0.0.2.0	temporal-quantity	22-23
# ::node	0.0.2.0.0	year	22-23
# ::root	0	issue
(i2 / issue 
      :ARG0-of (d / derive-01 
            :ARG1 (s / system 
                  :mod (n2 / new) 
                  :part (i / issue 
                        :mod (n / new))) 
            :ARG2 (w / way) 
            :op-of (m / many 
                  :op1 (t / temporal-quantity 
                        :unit (y / year)))))

# ::snt it requires that a right be justified by the service it does to the interest of the rightholder but it allows that the value placed on that interest may derive from its usefulness to others
# ::tok it requires that a right be justified by the service it does to the interest of the rightholder but it allows that the value placed on that interest may derive from its usefulness to others
# ::alignments 34-35|0.1.1.2 29-30|0.1.1 28-29|0.1.1.3.0+0.1.1.3 27-28|0.1.1.1.0.0 24-25|0.1.1.1.0 23-24|0.1.1.1 20-21|0.1 19-20|0.1.0 18-19|0 14-15|0.0 10-11|0.1.1.0 6-7|0.1.1.1.0.0.0 1-2|0.1.1.1.0.0.0.0.0 0-1|0.1.1.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:26.710
# ::node	0	contrast-01	18-19
# ::node	0.0	interest-01	14-15
# ::node	0.1	allow-01	20-21
# ::node	0.1.0	it	19-20
# ::node	0.1.1	derive-01	29-30
# ::node	0.1.1.0	it	10-11
# ::node	0.1.1.1	value-01	23-24
# ::node	0.1.1.1.0	place-01	24-25
# ::node	0.1.1.1.0.0	interest-01	27-28
# ::node	0.1.1.1.0.0.0	justify-01	6-7
# ::node	0.1.1.1.0.0.0.0	it	0-1
# ::node	0.1.1.1.0.0.0.0.0	require-01	1-2
# ::node	0.1.1.2	other	34-35
# ::node	0.1.1.3	date-entity	28-29
# ::node	0.1.1.3.0	5	28-29
# ::root	0	contrast-01
# ::edge	allow-01	ARG0	it	0.1	0.1.0	
# ::edge	allow-01	ARG1	derive-01	0.1	0.1.1	
# ::edge	contrast-01	ARG1	interest-01	0	0.0	
# ::edge	contrast-01	ARG2	allow-01	0	0.1	
# ::edge	date-entity	month	5	0.1.1.3	0.1.1.3.0	
# ::edge	derive-01	ARG0	it	0.1.1	0.1.1.0	
# ::edge	derive-01	ARG1	value-01	0.1.1	0.1.1.1	
# ::edge	derive-01	ARG2	other	0.1.1	0.1.1.2	
# ::edge	derive-01	mod	date-entity	0.1.1	0.1.1.3	
# ::edge	interest-01	ARG1	justify-01	0.1.1.1.0.0	0.1.1.1.0.0.0	
# ::edge	justify-01	ARG1	it	0.1.1.1.0.0.0	0.1.1.1.0.0.0.0	
# ::edge	place-01	ARG1	value-01	0.1.1.1.0	0.1.1.1	
# ::edge	place-01	ARG2	interest-01	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	require-01	ARG1	it	0.1.1.1.0.0.0.0.0	0.1.1.1.0.0.0.0	
(c / contrast-01 
      :ARG1 (i3 / interest-01) 
      :ARG2 (a / allow-01 
            :ARG0 (i2 / it) 
            :ARG1 (d / derive-01 
                  :ARG0 (i4 / it) 
                  :ARG1 (v / value-01 
                        :ARG1-of (p / place-01 
                              :ARG2 (i / interest-01 
                                    :ARG1 (j / justify-01 
                                          :ARG1 (i5 / it 
                                                :ARG1-of (r / require-01)))))) 
                  :ARG2 (o / other) 
                  :mod (d2 / date-entity 
                        :month 5))))

# ::snt therefore my right in the street derives from my rights in the houses and not the other way round
# ::tok therefore my right in the street derives from my rights in the houses and not the other way round
# ::alignments 18-19|0.0 17-18|0 16-17|0.0.0 13-14|0.0.1 12-13|0.0.1.1 9-10|0.0.1.0 5-6|0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:26.759
# ::node	0	way	17-18
# ::node	0.0	round	18-19
# ::node	0.0.0	other	16-17
# ::node	0.0.1	and	13-14
# ::node	0.0.1.0	right	9-10
# ::node	0.0.1.0.0	street	5-6
# ::node	0.0.1.1	house	12-13
# ::root	0	way
# ::edge	and	op1	right	0.0.1	0.0.1.0	
# ::edge	and	op2	house	0.0.1	0.0.1.1	
# ::edge	and	op3	round	0.0.1	0.0	
# ::edge	right	poss	street	0.0.1.0	0.0.1.0.0	
# ::edge	round	mod	other	0.0	0.0.0	
# ::edge	way	consist	round	0	0.0	
(w / way 
      :consist (r / round 
            :mod (o / other) 
            :op-of (a / and 
                  :op1 (r2 / right 
                        :poss (s / street)) 
                  :op2 (h / house))))

# ::snt these goals generally conflict and it is rarely possible to establish a formal tradeoff among the goals between profit and safety say to derive a single composite objective function
# ::tok these goals generally conflict and it is rarely possible to establish a formal tradeoff among the goals between profit and safety say to derive a single composite objective function
# ::alignments 28-29|0.1.1 27-28|0.1.1.0 25-26|0.1.1.1 23-24|0.1 21-22|0 20-21|0.0.1.0.0.0.0.0.1.0 19-20|0.0.1.0.0.0.0.0.0 18-19|0.0.1.0.0.0.0.0 17-18|0.0.1.0.0.0.0.0.1 16-17|0.0.1.0.0.0.0 14-15|0.0.1.0.0.0 12-13|0.1.0 10-11|0.0.1.0.0 8-9|0.0.1 7-8|0.0.1.1 5-6|0.0.1.0 4-5|0.0 3-4|0.0.0 2-3|0.0.0.1 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:27.342
# ::node	0	say-01	21-22
# ::node	0.0	and	4-5
# ::node	0.0.0	conflict-01	3-4
# ::node	0.0.0.0	goal	1-2
# ::node	0.0.0.1	general	2-3
# ::node	0.0.1	possible	8-9
# ::node	0.0.1.0	it	5-6
# ::node	0.0.1.0.0	establish-01	10-11
# ::node	0.0.1.0.0.0	among	14-15
# ::node	0.0.1.0.0.0.0	goal	16-17
# ::node	0.0.1.0.0.0.0.0	profit-01	18-19
# ::node	0.0.1.0.0.0.0.0.0	and	19-20
# ::node	0.0.1.0.0.0.0.0.1	between	17-18
# ::node	0.0.1.0.0.0.0.0.1.0	safe-41	20-21
# ::node	0.0.1.1	rare	7-8
# ::node	0.1	derive-01	23-24
# ::node	0.1.0	formal	12-13
# ::node	0.1.1	function-01	28-29
# ::node	0.1.1.0	objective	27-28
# ::node	0.1.1.1	single	25-26
# ::root	0	say-01
# ::edge	among	op1	goal	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	and	op1	conflict-01	0.0	0.0.0	
# ::edge	and	op1	profit-01	0.0.1.0.0.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	and	op2	possible	0.0	0.0.1	
# ::edge	between	op1	profit-01	0.0.1.0.0.0.0.0.1	0.0.1.0.0.0.0.0	
# ::edge	between	op2	safe-41	0.0.1.0.0.0.0.0.1	0.0.1.0.0.0.0.0.1.0	
# ::edge	conflict-01	ARG0	goal	0.0.0	0.0.0.0	
# ::edge	conflict-01	manner	general	0.0.0	0.0.0.1	
# ::edge	derive-01	ARG0	formal	0.1	0.1.0	
# ::edge	derive-01	ARG1	function-01	0.1	0.1.1	
# ::edge	establish-01	ARG0	it	0.0.1.0.0	0.0.1.0	
# ::edge	establish-01	location	among	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	function-01	ARG1	objective	0.1.1	0.1.1.0	
# ::edge	function-01	mod	single	0.1.1	0.1.1.1	
# ::edge	goal	mod	profit-01	0.0.1.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	possible	domain	it	0.0.1	0.0.1.0	
# ::edge	possible	mod	rare	0.0.1	0.0.1.1	
# ::edge	say-01	ARG1	and	0	0.0	
# ::edge	say-01	ARG2	derive-01	0	0.1	
(s2 / say-01 
      :ARG1 (a3 / and 
            :op1 (c / conflict-01 
                  :ARG0 (g3 / goal) 
                  :manner (g2 / general)) 
            :op2 (p2 / possible 
                  :domain (i / it 
                        :ARG0-of (e / establish-01 
                              :location (a2 / among 
                                    :op1 (g / goal 
                                          :mod (p / profit-01 
                                                :op-of (a / and) 
                                                :op-of (b / between 
                                                      :op1 (s3 / safe-41))))))) 
                  :mod (r / rare))) 
      :ARG2 (d / derive-01 
            :ARG0 (f2 / formal) 
            :ARG1 (f / function-01 
                  :ARG1 (o / objective) 
                  :mod (s / single))))

# ::snt concerning the general foundation of morals whether they be derived from reason or from sentiment, according to some the divisions we make between good and bad virtue and vice derive from a chain of argument
# ::tok concerning the general foundation of morals whether they be derived from reason or from sentiment , according to some the divisions we make between good and bad virtue and vice derive from a chain of argument
# ::alignments 35-36|0.0.0.0.0 33-34|0.0.0.0.0.1.2 30-31|0.0.0.0.0.1.1 29-30|0.0.0.0.0.1.1.1 28-29|0.0.0.0.0.1 27-28|0.0.0.0.0.1.1.2.1 26-27|0.0.0.0.0.1.0.1 25-26|0.0.0.0.0.1.0 24-25|0.0.0.0.0.1.0.0 23-24|0.0.0.0.0.1.1.2 21-22|0.0.0.0.0.1.1.2.0 20-21|0.0.0.0.0.1.1.0 18-19|0.0.0.0.0.0 14-15|0.0.0.0.2 12-13|0.0.0.0 11-12|0.0.0.0.1 9-10|0.0.0 7-8|0.0 5-6|0.1.1 3-4|0.1 2-3|0.1.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:28.207
# ::node	0	concern-02	0-1
# ::node	0.0	they	7-8
# ::node	0.0.0	derive-01	9-10
# ::node	0.0.0.0	or	12-13
# ::node	0.0.0.0.0	argue-01	35-36
# ::node	0.0.0.0.0.0	some	18-19
# ::node	0.0.0.0.0.1	and	28-29
# ::node	0.0.0.0.0.1.0	and	25-26
# ::node	0.0.0.0.0.1.0.0	good	24-25
# ::node	0.0.0.0.0.1.0.1	bad	26-27
# ::node	0.0.0.0.0.1.1	derive-01	30-31
# ::node	0.0.0.0.0.1.1.0	division	20-21
# ::node	0.0.0.0.0.1.1.1	vice	29-30
# ::node	0.0.0.0.0.1.1.2	between	23-24
# ::node	0.0.0.0.0.1.1.2.0	we	21-22
# ::node	0.0.0.0.0.1.1.2.1	virtue	27-28
# ::node	0.0.0.0.0.1.2	chain	33-34
# ::node	0.0.0.0.1	reason	11-12
# ::node	0.0.0.0.2	sentiment	14-15
# ::node	0.1	foundation	3-4
# ::node	0.1.0	general	2-3
# ::node	0.1.1	moral	5-6
# ::root	0	concern-02
# ::edge	and	op1	derive-01	0.0.0.0.0.1	0.0.0.0.0.1.1	
# ::edge	and	op1	good	0.0.0.0.0.1.0	0.0.0.0.0.1.0.0	
# ::edge	and	op2	argue-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	and	op2	bad	0.0.0.0.0.1.0	0.0.0.0.0.1.0.1	
# ::edge	and	op3	and	0.0.0.0.0.1.0	0.0.0.0.0.1	
# ::edge	and	source	chain	0.0.0.0.0.1	0.0.0.0.0.1.2	
# ::edge	argue-01	ARG0	some	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	argue-01	ARG1	or	0.0.0.0.0	0.0.0.0	
# ::edge	between	op1	we	0.0.0.0.0.1.1.2	0.0.0.0.0.1.1.2.0	
# ::edge	between	op2	virtue	0.0.0.0.0.1.1.2	0.0.0.0.0.1.1.2.1	
# ::edge	between	op3	derive-01	0.0.0.0.0.1.1.2	0.0.0.0.0.1.1	
# ::edge	concern-02	ARG0	they	0	0.0	
# ::edge	concern-02	ARG1	foundation	0	0.1	
# ::edge	derive-01	ARG0	division	0.0.0.0.0.1.1	0.0.0.0.0.1.1.0	
# ::edge	derive-01	ARG0	or	0.0.0	0.0.0.0	
# ::edge	derive-01	ARG1	they	0.0.0	0.0	
# ::edge	derive-01	mod	vice	0.0.0.0.0.1.1	0.0.0.0.0.1.1.1	
# ::edge	foundation	mod	general	0.1	0.1.0	
# ::edge	foundation	mod	moral	0.1	0.1.1	
# ::edge	or	op1	reason	0.0.0.0	0.0.0.0.1	
# ::edge	or	op2	sentiment	0.0.0.0	0.0.0.0.2	
(c2 / concern-02 
      :ARG0 (t / they 
            :ARG1-of (d3 / derive-01 
                  :ARG0 (o / or 
                        :ARG1-of (a / argue-01 
                              :ARG0 (s / some) 
                              :op-of (a2 / and 
                                    :op-of (a3 / and 
                                          :op1 (g / good) 
                                          :op2 (b / bad)) 
                                    :op1 (d / derive-01 
                                          :ARG0 (d2 / division) 
                                          :mod (v / vice) 
                                          :op-of (b2 / between 
                                                :op1 (w / we) 
                                                :op2 (v2 / virtue))) 
                                    :source (c / chain))) 
                        :op1 (r / reason) 
                        :op2 (s2 / sentiment)))) 
      :ARG1 (f / foundation 
            :mod (g2 / general) 
            :mod (m / moral)))

# ::snt for it was thought that the generalist could whenever he wanted to add a specialist dimension to his knowledge but general concepts were less easy to derive from the specialist
# ::tok for it was thought that the generalist could whenever he wanted to add a specialist dimension to his knowledge but general concepts were less easy to derive from the specialist
# ::alignments 29-30|0.1.1.0.0+0.1.1.0 26-27|0.1.1 24-25|0.1 23-24|0.1.0 21-22|0.1.2 20-21|0.1.2.0 19-20|0 18-19|0.0.1.1 15-16|0.0.1.0 14-15|0.0.1.1.0+0.0.1.1.0.0 12-13|0.0.1 10-11|0.0 9-10|0.0.0 8-9|0.0.2 7-8|0.0.1.1.0.0.0.1 3-4|0.0.1.1.0.0.0 1-2|0.0.1.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:28.970
# ::node	0	contrast-01	19-20
# ::node	0.0	want-01	10-11
# ::node	0.0.0	he	9-10
# ::node	0.0.1	add-02	12-13
# ::node	0.0.1.0	dimension	15-16
# ::node	0.0.1.1	knowledge	18-19
# ::node	0.0.1.1.0	specialize-01	14-15
# ::node	0.0.1.1.0.0	person	14-15
# ::node	0.0.1.1.0.0.0	think-01	3-4
# ::node	0.0.1.1.0.0.0.0	it	1-2
# ::node	0.0.1.1.0.0.0.1	possible	7-8
# ::node	0.0.2	whenever	8-9
# ::node	0.1	easy	24-25
# ::node	0.1.0	less	23-24
# ::node	0.1.1	derive-01	26-27
# ::node	0.1.1.0	person	29-30
# ::node	0.1.1.0.0	specialize-01	29-30
# ::node	0.1.2	concept	21-22
# ::node	0.1.2.0	general	20-21
# ::root	0	contrast-01
# ::edge	add-02	ARG1	dimension	0.0.1	0.0.1.0	
# ::edge	add-02	ARG2	knowledge	0.0.1	0.0.1.1	
# ::edge	concept	mod	general	0.1.2	0.1.2.0	
# ::edge	contrast-01	ARG1	want-01	0	0.0	
# ::edge	contrast-01	ARG2	easy	0	0.1	
# ::edge	derive-01	ARG2	person	0.1.1	0.1.1.0	
# ::edge	easy	degree	less	0.1	0.1.0	
# ::edge	easy	domain	concept	0.1	0.1.2	
# ::edge	easy	domain	derive-01	0.1	0.1.1	
# ::edge	possible	condition	think-01	0.0.1.1.0.0.0.1	0.0.1.1.0.0.0	
# ::edge	specialize-01	ARG0	person	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	specialize-01	ARG0	person	0.1.1.0.0	0.1.1.0	
# ::edge	specialize-01	ARG2	knowledge	0.0.1.1.0	0.0.1.1	
# ::edge	think-01	ARG0	person	0.0.1.1.0.0.0	0.0.1.1.0.0	
# ::edge	think-01	ARG1	it	0.0.1.1.0.0.0	0.0.1.1.0.0.0.0	
# ::edge	want-01	ARG0	he	0.0	0.0.0	
# ::edge	want-01	ARG1	add-02	0.0	0.0.1	
# ::edge	want-01	location	whenever	0.0	0.0.2	
(c2 / contrast-01 
      :ARG1 (w / want-01 
            :ARG0 (h / he) 
            :ARG1 (a / add-02 
                  :ARG1 (d2 / dimension) 
                  :ARG2 (k / knowledge 
                        :ARG2-of (s2 / specialize-01 
                              :ARG0 (p2 / person 
                                    :ARG0-of (t / think-01 
                                          :ARG1 (i / it) 
                                          :condition-of (p3 / possible)))))) 
            :location (w2 / whenever)) 
      :ARG2 (e / easy 
            :degree (l / less) 
            :domain (d / derive-01 
                  :ARG2 (p / person 
                        :ARG0-of (s / specialize-01))) 
            :domain (c / concept 
                  :mod (g / general))))

# ::snt magdalen has suffered from a reputation for fragmentation and anonymity deriving largely from it geographical size and its relatively large numbers 550 students 44 per cent postgraduate
# ::tok magdalen has suffered from a reputation for fragmentation and anonymity deriving largely from it geographical size and its relatively large numbers 550 students 44 per cent postgraduate
# ::alignments 25-26|0.0.0.1.0+0.0.0.1 23-24|0.0.0.0 22-23|0.1.1.0+0.1.1 20-21|0.1.1.0.0 19-20|0.1.1.0.0.0 18-19|0.1.1.0.0.0.0 16-17|0.1 15-16|0.1.0 14-15|0.1.0.0 13-14|0.1.0.1 11-12|0.0.0.2.1 9-10|0.0.0.2.0 8-9|0.0.0.2 7-8|0.0.0 5-6|0.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:29.167
# ::node	0	suffer-01	2-3
# ::node	0.0	reputation	5-6
# ::node	0.0.0	fragment-01	7-8
# ::node	0.0.0.0	44	23-24
# ::node	0.0.0.1	monetary-quantity	25-26
# ::node	0.0.0.1.0	cent	25-26
# ::node	0.0.0.2	and	8-9
# ::node	0.0.0.2.0	anonymity	9-10
# ::node	0.0.0.2.1	large	11-12
# ::node	0.1	and	16-17
# ::node	0.1.0	size	15-16
# ::node	0.1.0.0	geography	14-15
# ::node	0.1.0.1	it	13-14
# ::node	0.1.1	person	22-23
# ::node	0.1.1.0	study-01	22-23
# ::node	0.1.1.0.0	number	20-21
# ::node	0.1.1.0.0.0	large	19-20
# ::node	0.1.1.0.0.0.0	relative	18-19
# ::root	0	suffer-01
# ::edge	and	op1	fragment-01	0.0.0.2	0.0.0	
# ::edge	and	op1	size	0.1	0.1.0	
# ::edge	and	op2	anonymity	0.0.0.2	0.0.0.2.0	
# ::edge	and	op2	person	0.1	0.1.1	
# ::edge	and	op3	large	0.0.0.2	0.0.0.2.1	
# ::edge	fragment-01	ARG0	44	0.0.0	0.0.0.0	
# ::edge	fragment-01	ARG1	monetary-quantity	0.0.0	0.0.0.1	
# ::edge	it	mod	size	0.1.0.1	0.1.0	
# ::edge	large	degree	relative	0.1.1.0.0.0	0.1.1.0.0.0.0	
# ::edge	monetary-quantity	unit	cent	0.0.0.1	0.0.0.1.0	
# ::edge	number	mod	large	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	reputation	location	fragment-01	0.0	0.0.0	
# ::edge	size	mod	geography	0.1.0	0.1.0.0	
# ::edge	study-01	ARG0	person	0.1.1.0	0.1.1	
# ::edge	study-01	ARG1	number	0.1.1.0	0.1.1.0.0	
# ::edge	suffer-01	ARG0	reputation	0	0.0	
# ::edge	suffer-01	ARG1	and	0	0.1	
(s3 / suffer-01 
      :ARG0 (r2 / reputation 
            :location (f / fragment-01 
                  :ARG0 44 
                  :ARG1 (m / monetary-quantity 
                        :unit (c / cent)) 
                  :op-of (a3 / and 
                        :op1 (a2 / anonymity) 
                        :op2 (l2 / large)))) 
      :ARG1 (a / and 
            :op1 (s2 / size 
                  :mod (g / geography) 
                  :mod-of (i / it)) 
            :op2 (p / person 
                  :ARG0-of (s / study-01 
                        :ARG1 (n / number 
                              :mod (l / large 
                                    :degree (r / relative)))))))

# ::snt indeed to revert to the watchmans speech it is in fact from the verb kratei 10 that the audience derives its first impression of the queen
# ::tok indeed to revert to the watchmans speech it is in fact from the verb kratei 10 that the audience derives its first impression of the queen
# ::alignments 22-23|0 18-19|0.1 15-16|0.0.3 10-11|0.0.0 7-8|0.0.1.0 6-7|0.0.1 2-3|0.0 0-1|0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:29.222
# ::node	0	impression	22-23
# ::node	0.0	revert-01	2-3
# ::node	0.0.0	fact	10-11
# ::node	0.0.1	speech	6-7
# ::node	0.0.1.0	it	7-8
# ::node	0.0.2	indeed	0-1
# ::node	0.0.3	10	15-16
# ::node	0.1	audience	18-19
# ::root	0	impression
# ::edge	10	op1	revert-01	0.0.3	0.0	
# ::edge	impression	op1	revert-01	0	0.0	
# ::edge	impression	poss	audience	0	0.1	
# ::edge	revert-01	ARG0	fact	0.0	0.0.0	
# ::edge	revert-01	ARG2	speech	0.0	0.0.1	
# ::edge	revert-01	instrument	indeed	0.0	0.0.2	
# ::edge	speech	domain	it	0.0.1	0.0.1.0	
(i / impression 
      :op1 (r / revert-01 
            :ARG0 (f / fact) 
            :ARG2 (s / speech 
                  :domain (i2 / it)) 
            :instrument (i3 / indeed) 
            :op-of 10) 
      :poss (a / audience))

# ::snt other visitors derived a contrary impression
# ::tok other visitors derived a contrary impression
# ::alignments 5-6|0.1 4-5|0.1.0 2-3|0 1-2|0.0.0+0.0 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:29.251
# ::node	0	derive-01	2-3
# ::node	0.0	person	1-2
# ::node	0.0.0	visit-01	1-2
# ::node	0.0.1	other	0-1
# ::node	0.1	impression	5-6
# ::node	0.1.0	contrary-41	4-5
# ::root	0	derive-01
# ::edge	contrary-41	ARG0	impression	0.1.0	0.1	
# ::edge	derive-01	ARG0	person	0	0.0	
# ::edge	derive-01	ARG1	impression	0	0.1	
# ::edge	person	mod	other	0.0	0.0.1	
# ::edge	visit-01	ARG0	person	0.0.0	0.0	
(d / derive-01 
      :ARG0 (p / person 
            :ARG0-of (v / visit-01) 
            :mod (o / other)) 
      :ARG1 (i / impression 
            :ARG0-of (c / contrary-41)))

# ::snt though all our knowledge is in the senses or derived from them it is not always simply a matter of sensory information
# ::tok though all our knowledge is in the senses or derived from them it is not always simply a matter of sensory information
# ::alignments 21-22|0.4 18-19|0 16-17|0.3 15-16|0.2 12-13|0.1 9-10|0.0 8-9|0.0.1 7-8|0.0.1.0 3-4|0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:29.310
# ::node	0	matter	18-19
# ::node	0.0	derive-01	9-10
# ::node	0.0.0	knowledge	3-4
# ::node	0.0.0.0	all	1-2
# ::node	0.0.1	or	8-9
# ::node	0.0.1.0	sense	7-8
# ::node	0.1	it	12-13
# ::node	0.2	always	15-16
# ::node	0.3	simple	16-17
# ::node	0.4	information	21-22
# ::root	0	matter
# ::edge	derive-01	ARG0	knowledge	0.0	0.0.0	
# ::edge	derive-01	ARG1	matter	0.0	0	
# ::edge	information	quant	matter	0.4	0	
# ::edge	knowledge	quant	all	0.0.0	0.0.0.0	
# ::edge	matter	domain	it	0	0.1	
# ::edge	matter	mod	always	0	0.2	
# ::edge	matter	mod	simple	0	0.3	
# ::edge	or	op1	sense	0.0.1	0.0.1.0	
# ::edge	or	op2	derive-01	0.0.1	0.0	
(m / matter 
      :ARG1-of (d / derive-01 
            :ARG0 (k / knowledge 
                  :quant (a2 / all)) 
            :op-of (o / or 
                  :op1 (s2 / sense))) 
      :domain (i2 / it) 
      :mod (a / always) 
      :mod (s / simple) 
      :quant-of (i / information))

# ::snt some art historians believe the design derives from the mouth of the whale in the story of jonah
# ::tok some art historians believe the design derives from the mouth of the whale in the story of jonah
# ::alignments 15-16|0.0.0.0.0 12-13|0.0.0.0 9-10|0.1 5-6|0.0.0 3-4|0 2-3|0.0 1-2|0.0.2 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:29.359
# ::node	0	believe-01	3-4
# ::node	0.0	historian	2-3
# ::node	0.0.0	design-01	5-6
# ::node	0.0.0.0	whale	12-13
# ::node	0.0.0.0.0	story	15-16
# ::node	0.0.1	some	0-1
# ::node	0.0.2	art	1-2
# ::node	0.1	mouth	9-10
# ::root	0	believe-01
# ::edge	believe-01	ARG0	historian	0	0.0	
# ::edge	believe-01	ARG1	mouth	0	0.1	
# ::edge	design-01	ARG0	historian	0.0.0	0.0	
# ::edge	design-01	topic	whale	0.0.0	0.0.0.0	
# ::edge	historian	quant	some	0.0	0.0.1	
# ::edge	historian	topic	art	0.0	0.0.2	
# ::edge	whale	poss	story	0.0.0.0	0.0.0.0.0	
(b / believe-01 
      :ARG0 (h / historian 
            :ARG0-of (d / design-01 
                  :topic (w / whale 
                        :poss (s / story))) 
            :quant (s2 / some) 
            :topic (a / art)) 
      :ARG1 (m / mouth))

# ::snt but the stations do demonstrate that architectural influences flowed north and south through the americas bending styles derived from europe to new ends
# ::tok but the stations do demonstrate that architectural influences flowed north and south through the americas bending styles derived from europe to new ends
# ::alignments 22-23|0.0.1.1.0 21-22|0.0.1.1.0.1 19-20|0.0.1.1.0.0.0.0.0+0.0.1.1.0.0.0.0+0.0.1.1.0.0.0 17-18|0.0.1.1.0.0 11-12|0.0.1.1.2 10-11|0.0.1.1 9-10|0.0.1.1.1 8-9|0.0.1 7-8|0.0.1.0 4-5|0.0 2-3|0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:29.434
# ::node	0	contrast-01	0-1
# ::node	0.0	demonstrate-01	4-5
# ::node	0.0.0	station	2-3
# ::node	0.0.1	flow-01	8-9
# ::node	0.0.1.0	influence-01	7-8
# ::node	0.0.1.1	and	10-11
# ::node	0.0.1.1.0	end-01	22-23
# ::node	0.0.1.1.0.0	derive-01	17-18
# ::node	0.0.1.1.0.0.0	continent	19-20
# ::node	0.0.1.1.0.0.0.0	name	19-20
# ::node	0.0.1.1.0.0.0.0.0	"Europe"	19-20
# ::node	0.0.1.1.0.1	new	21-22
# ::node	0.0.1.1.1	north	9-10
# ::node	0.0.1.1.2	south	11-12
# ::root	0	contrast-01
# ::edge	and	op1	flow-01	0.0.1.1	0.0.1	
# ::edge	and	op2	north	0.0.1.1	0.0.1.1.1	
# ::edge	and	op3	south	0.0.1.1	0.0.1.1.2	
# ::edge	continent	name	name	0.0.1.1.0.0.0	0.0.1.1.0.0.0.0	
# ::edge	contrast-01	ARG1	demonstrate-01	0	0.0	
# ::edge	demonstrate-01	ARG0	station	0.0	0.0.0	
# ::edge	demonstrate-01	ARG1	flow-01	0.0	0.0.1	
# ::edge	derive-01	ARG1	end-01	0.0.1.1.0.0	0.0.1.1.0	
# ::edge	derive-01	ARG2	continent	0.0.1.1.0.0	0.0.1.1.0.0.0	
# ::edge	end-01	ARG1	and	0.0.1.1.0	0.0.1.1	
# ::edge	end-01	mod	new	0.0.1.1.0	0.0.1.1.0.1	
# ::edge	flow-01	ARG1	influence-01	0.0.1	0.0.1.0	
# ::edge	name	op1	"Europe"	0.0.1.1.0.0.0.0	0.0.1.1.0.0.0.0.0	
(c2 / contrast-01 
      :ARG1 (d2 / demonstrate-01 
            :ARG0 (s2 / station) 
            :ARG1 (f / flow-01 
                  :ARG1 (i / influence-01) 
                  :op-of (a / and 
                        :ARG1-of (e / end-01 
                              :ARG1-of (d / derive-01 
                                    :ARG2 (c / continent 
                                          :name (n2 / name 
                                                :op1 "Europe"))) 
                              :mod (n / new)) 
                        :op1 (n3 / north) 
                        :op2 (s / south)))))

# ::snt becomes phallic through the power she derives from her violent mutilation
# ::tok becomes phallic through the power she derives from her violent mutilation
# ::alignments 9-10|0.0.0 5-6|0.0 4-5|0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:29.448
# ::node	0	become-01	0-1
# ::node	0.0	she	5-6
# ::node	0.0.0	violent	9-10
# ::node	0.1	power	4-5
# ::root	0	become-01
# ::edge	become-01	ARG1	she	0	0.0	
# ::edge	become-01	time	power	0	0.1	
# ::edge	violent	domain	she	0.0.0	0.0	
(b / become-01 
      :ARG1 (s / she 
            :domain-of (v / violent)) 
      :time (p / power))

# ::snt and a patients group from new york called project inform released preliminary data suggesting that compound q a substance derived from a chinese cucumber could be effective in helping patients already taking azt
# ::tok and a patients group from new york called project inform released preliminary data suggesting that compound q a substance derived from a chinese cucumber could be effective in helping patients already taking azt
# ::alignments 30-31|0.0.0.0.0 29-30|0.0.1.0.0.0.0+0.0.1.0.0.0.0.0 28-29|0.0.1.0.0.0 26-27|0.0.1.0.0 24-25|0.0.1.0 22-23|0.0.1.0.0.0.0.0.0.0.0.0+0.0.1.0.0.0.0.0.0.0.0+0.0.1.0.0.0.0.0.0.0+0.0.1.0.0.0.0.0.0 19-20|0.2.0 18-19|0.2 15-16|0.0.0.1 13-14|0 12-13|0.0 11-12|0.0.1 10-11|0.0.0 9-10|0.0.0.0 8-9|0.0.0.0.1 5-6|0.0.0.1.0 3-4|0.0.0.0.2 2-3|0.0.0.0.2.0.0+0.0.0.0.2.0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:31.103
# ::node	0	suggest-01	13-14
# ::node	0.0	data	12-13
# ::node	0.0.0	release-01	10-11
# ::node	0.0.0.0	inform-01	9-10
# ::node	0.0.0.0.0	already	30-31
# ::node	0.0.0.0.1	project	8-9
# ::node	0.0.0.0.2	group	3-4
# ::node	0.0.0.0.2.0	have-rel-role-91	2-3
# ::node	0.0.0.0.2.0.0	patient	2-3
# ::node	0.0.0.1	compound-01	15-16
# ::node	0.0.0.1.0	new	5-6
# ::node	0.0.1	preliminary	11-12
# ::node	0.0.1.0	possible	24-25
# ::node	0.0.1.0.0	effective	26-27
# ::node	0.0.1.0.0.0	help-01	28-29
# ::node	0.0.1.0.0.0.0	patient	29-30
# ::node	0.0.1.0.0.0.0.0	have-rel-role-91	29-30
# ::node	0.0.1.0.0.0.0.0.0	person	22-23
# ::node	0.0.1.0.0.0.0.0.0.0	country	22-23
# ::node	0.0.1.0.0.0.0.0.0.0.0	name	22-23
# ::node	0.0.1.0.0.0.0.0.0.0.0.0	"China"	22-23
# ::node	0.1	and	0-1
# ::node	0.2	substance	18-19
# ::node	0.2.0	derive-01	19-20
# ::root	0	suggest-01
# ::edge	compound-01	ARG1	new	0.0.0.1	0.0.0.1.0	
# ::edge	country	name	name	0.0.1.0.0.0.0.0.0.0	0.0.1.0.0.0.0.0.0.0.0	
# ::edge	data	mod	preliminary	0.0	0.0.1	
# ::edge	derive-01	ARG1	substance	0.2.0	0.2	
# ::edge	effective	purpose	help-01	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	group	name	inform-01	0.0.0.0.2	0.0.0.0	
# ::edge	have-rel-role-91	ARG1	group	0.0.0.0.2.0	0.0.0.0.2	
# ::edge	have-rel-role-91	ARG1	person	0.0.1.0.0.0.0.0	0.0.1.0.0.0.0.0.0	
# ::edge	have-rel-role-91	ARG2	patient	0.0.0.0.2.0	0.0.0.0.2.0.0	
# ::edge	have-rel-role-91	ARG2	patient	0.0.1.0.0.0.0.0	0.0.1.0.0.0.0	
# ::edge	help-01	ARG1	patient	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	inform-01	ARG1	already	0.0.0.0	0.0.0.0.0	
# ::edge	inform-01	mod	project	0.0.0.0	0.0.0.0.1	
# ::edge	name	op1	"China"	0.0.1.0.0.0.0.0.0.0.0	0.0.1.0.0.0.0.0.0.0.0.0	
# ::edge	person	mod	country	0.0.1.0.0.0.0.0.0	0.0.1.0.0.0.0.0.0.0	
# ::edge	possible	domain	effective	0.0.1.0	0.0.1.0.0	
# ::edge	preliminary	mod	possible	0.0.1	0.0.1.0	
# ::edge	release-01	ARG0	inform-01	0.0.0	0.0.0.0	
# ::edge	release-01	ARG1	data	0.0.0	0.0	
# ::edge	release-01	ARG2	compound-01	0.0.0	0.0.0.1	
# ::edge	suggest-01	ARG0	data	0	0.0	
# ::edge	suggest-01	ARG1	and	0	0.1	
# ::edge	suggest-01	ARG2	substance	0	0.2	
(s2 / suggest-01 
      :ARG0 (d2 / data 
            :ARG1-of (r / release-01 
                  :ARG0 (i / inform-01 
                        :ARG1 (a / already) 
                        :mod (p5 / project) 
                        :name-of (g / group 
                              :ARG1-of (h3 / have-rel-role-91 
                                    :ARG2 (p6 / patient)))) 
                  :ARG2 (c2 / compound-01 
                        :ARG1 (n2 / new))) 
            :mod (p4 / preliminary 
                  :mod (p2 / possible 
                        :domain (e / effective 
                              :purpose (h2 / help-01 
                                    :ARG1 (p / patient 
                                          :ARG2-of (h / have-rel-role-91 
                                                :ARG1 (p3 / person 
                                                      :mod (c / country 
                                                            :name (n / name 
                                                                  :op1 "China")))))))))) 
      :ARG1 (a2 / and) 
      :ARG2 (s / substance 
            :ARG1-of (d / derive-01)))

# ::snt and by the married womens property act 1964 any money derived by a wife from an allowance made by her husband for housekeeping purposes or any property acquired out of it is deemed in the absence of any agreement between them to the contrary to belong in equal shares to the husband and wife
# ::tok and by the married womens property act 1964 any money derived by a wife from an allowance made by her husband for housekeeping purposes or any property acquired out of it is deemed in the absence of any agreement between them to the contrary to belong in equal shares to the husband and wife
# ::alignments 53-54|0.0.0.1.0.0.1.0.0+0.0.0.1.0.0.1.0 52-53|0.0.0.0 51-52|0.0.0.0.0.0+0.0.0.0.0 48-49|0.0 47-48|0 45-46|0.0.0 43-44|0.0.0.1 39-40|0.0.0.1.0.0.0.0 38-39|0.0.0.1.0.0.0 37-38|0.0.0.1.0.0.0.1 35-36|0.0.0.1.0.0 32-33|0.0.0.1.0.0.1 30-31|0.0.0.1.0 27-28|0.0.0.1.0.0.1.1 26-27|0.0.0.1.0.0.1.1.1 25-26|0.0.0.1.0.0.1.1.1.0 24-25|0.0.0.1.0.0.1.1.1.1 23-24|0.0.0.1.0.0.1.1.0 20-21|0.0.0.1.0.0.1.1.0.0.0+0.0.0.1.0.0.1.1.0.0 16-17|0.0.0.1.0.0.1.1.0.0.0.0 13-14|0.0.0.1.0.0.1.1.0.0.0.0.0.0+0.0.0.1.0.0.1.1.0.0.0.0.0 10-11|0.0.0.1.0.0.1.1.1.1.0.0 9-10|0.0.0.1.0.0.1.1.1.1.0 8-9|0.0.0.1.0.0.1.1.1.1.0.1 7-8|0.0.0.1.0.0.1.1.1.1.0.2.1+0.0.0.1.0.0.1.1.1.1.0.2 6-7|0.0.0.1.0.0.1.1.1.1.0.2.0 5-6|0.0.0.1.0.0.1.1.1.1.0.2.0.0 3-4|0.0.0.1.0.0.1.1.1.1.0.2.0.1 0-1|0.0.0.1.0.0.1.1.1.1.0.2.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:32.718
# ::node	0	equal-01	47-48
# ::node	0.0	share	48-49
# ::node	0.0.0	belong-01	45-46
# ::node	0.0.0.0	and	52-53
# ::node	0.0.0.0.0	have-rel-role-91	51-52
# ::node	0.0.0.0.0.0	husband	51-52
# ::node	0.0.0.1	contrary-41	43-44
# ::node	0.0.0.1.0	it	30-31
# ::node	0.0.0.1.0.0	absent-01	35-36
# ::node	0.0.0.1.0.0.0	agree-01	38-39
# ::node	0.0.0.1.0.0.0.0	between	39-40
# ::node	0.0.0.1.0.0.0.1	any	37-38
# ::node	0.0.0.1.0.0.1	deem-01	32-33
# ::node	0.0.0.1.0.0.1.0	have-rel-role-91	53-54
# ::node	0.0.0.1.0.0.1.0.0	wife	53-54
# ::node	0.0.0.1.0.0.1.1	acquire-01	27-28
# ::node	0.0.0.1.0.0.1.1.0	purpose	23-24
# ::node	0.0.0.1.0.0.1.1.0.0	have-rel-role-91	20-21
# ::node	0.0.0.1.0.0.1.1.0.0.0	husband	20-21
# ::node	0.0.0.1.0.0.1.1.0.0.0.0	allowance	16-17
# ::node	0.0.0.1.0.0.1.1.0.0.0.0.0	have-rel-role-91	13-14
# ::node	0.0.0.1.0.0.1.1.0.0.0.0.0.0	wife	13-14
# ::node	0.0.0.1.0.0.1.1.1	property	26-27
# ::node	0.0.0.1.0.0.1.1.1.0	any	25-26
# ::node	0.0.0.1.0.0.1.1.1.1	or	24-25
# ::node	0.0.0.1.0.0.1.1.1.1.0	money	9-10
# ::node	0.0.0.1.0.0.1.1.1.1.0.0	derive-01	10-11
# ::node	0.0.0.1.0.0.1.1.1.1.0.1	any	8-9
# ::node	0.0.0.1.0.0.1.1.1.1.0.2	date-entity	7-8
# ::node	0.0.0.1.0.0.1.1.1.1.0.2.0	act-02	6-7
# ::node	0.0.0.1.0.0.1.1.1.1.0.2.0.0	property	5-6
# ::node	0.0.0.1.0.0.1.1.1.1.0.2.0.1	marry-01	3-4
# ::node	0.0.0.1.0.0.1.1.1.1.0.2.0.2	and	0-1
# ::node	0.0.0.1.0.0.1.1.1.1.0.2.1	1964	7-8
# ::root	0	equal-01
# ::edge	absent-01	ARG0	it	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	absent-01	ARG1	agree-01	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	acquire-01	ARG0	purpose	0.0.0.1.0.0.1.1	0.0.0.1.0.0.1.1.0	
# ::edge	acquire-01	ARG1	property	0.0.0.1.0.0.1.1	0.0.0.1.0.0.1.1.1	
# ::edge	acquire-01	manner	deem-01	0.0.0.1.0.0.1.1	0.0.0.1.0.0.1	
# ::edge	act-02	ARG0	date-entity	0.0.0.1.0.0.1.1.1.1.0.2.0	0.0.0.1.0.0.1.1.1.1.0.2	
# ::edge	act-02	ARG1	property	0.0.0.1.0.0.1.1.1.1.0.2.0	0.0.0.1.0.0.1.1.1.1.0.2.0.0	
# ::edge	agree-01	ARG1	between	0.0.0.1.0.0.0	0.0.0.1.0.0.0.0	
# ::edge	agree-01	mod	any	0.0.0.1.0.0.0	0.0.0.1.0.0.0.1	
# ::edge	and	op1	act-02	0.0.0.1.0.0.1.1.1.1.0.2.0.2	0.0.0.1.0.0.1.1.1.1.0.2.0	
# ::edge	and	op1	have-rel-role-91	0.0.0.0	0.0.0.0.0	
# ::edge	belong-01	ARG0	share	0.0.0	0.0	
# ::edge	belong-01	ARG1	and	0.0.0	0.0.0.0	
# ::edge	contrary-41	ARG0	it	0.0.0.1	0.0.0.1.0	
# ::edge	contrary-41	ARG1	belong-01	0.0.0.1	0.0.0	
# ::edge	date-entity	year	1964	0.0.0.1.0.0.1.1.1.1.0.2	0.0.0.1.0.0.1.1.1.1.0.2.1	
# ::edge	deem-01	ARG1	absent-01	0.0.0.1.0.0.1	0.0.0.1.0.0	
# ::edge	derive-01	ARG1	money	0.0.0.1.0.0.1.1.1.1.0.0	0.0.0.1.0.0.1.1.1.1.0	
# ::edge	equal-01	ARG1	share	0	0.0	
# ::edge	have-rel-role-91	ARG1	allowance	0.0.0.1.0.0.1.1.0.0.0.0.0	0.0.0.1.0.0.1.1.0.0.0.0	
# ::edge	have-rel-role-91	ARG1	deem-01	0.0.0.1.0.0.1.0	0.0.0.1.0.0.1	
# ::edge	have-rel-role-91	ARG1	purpose	0.0.0.1.0.0.1.1.0.0	0.0.0.1.0.0.1.1.0	
# ::edge	have-rel-role-91	ARG2	husband	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	have-rel-role-91	ARG2	husband	0.0.0.1.0.0.1.1.0.0	0.0.0.1.0.0.1.1.0.0.0	
# ::edge	have-rel-role-91	ARG2	wife	0.0.0.1.0.0.1.0	0.0.0.1.0.0.1.0.0	
# ::edge	have-rel-role-91	ARG2	wife	0.0.0.1.0.0.1.1.0.0.0.0.0	0.0.0.1.0.0.1.1.0.0.0.0.0.0	
# ::edge	husband	poss	allowance	0.0.0.1.0.0.1.1.0.0.0	0.0.0.1.0.0.1.1.0.0.0.0	
# ::edge	marry-01	ARG1	act-02	0.0.0.1.0.0.1.1.1.1.0.2.0.1	0.0.0.1.0.0.1.1.1.1.0.2.0	
# ::edge	money	mod	any	0.0.0.1.0.0.1.1.1.1.0	0.0.0.1.0.0.1.1.1.1.0.1	
# ::edge	money	poss	date-entity	0.0.0.1.0.0.1.1.1.1.0	0.0.0.1.0.0.1.1.1.1.0.2	
# ::edge	or	op1	money	0.0.0.1.0.0.1.1.1.1	0.0.0.1.0.0.1.1.1.1.0	
# ::edge	or	op2	property	0.0.0.1.0.0.1.1.1.1	0.0.0.1.0.0.1.1.1	
# ::edge	property	mod	any	0.0.0.1.0.0.1.1.1	0.0.0.1.0.0.1.1.1.0	
(e / equal-01 
      :ARG1 (s / share 
            :ARG0-of (b / belong-01 
                  :ARG1 (a / and 
                        :op1 (h2 / have-rel-role-91 
                              :ARG2 (h3 / husband))) 
                  :ARG1-of (c / contrary-41 
                        :ARG0 (i / it 
                              :ARG0-of (a4 / absent-01 
                                    :ARG1 (a2 / agree-01 
                                          :ARG1 (b2 / between) 
                                          :mod (a3 / any)) 
                                    :ARG1-of (d / deem-01 
                                          :ARG1-of (h / have-rel-role-91 
                                                :ARG2 (w / wife)) 
                                          :manner-of (a5 / acquire-01 
                                                :ARG0 (p2 / purpose 
                                                      :ARG1-of (h4 / have-rel-role-91 
                                                            :ARG2 (h5 / husband 
                                                                  :poss (a7 / allowance 
                                                                        :ARG1-of (h6 / have-rel-role-91 
                                                                              :ARG2 (w2 / wife)))))) 
                                                :ARG1 (p / property 
                                                      :mod (a6 / any) 
                                                      :op-of (o / or 
                                                            :op1 (m / money 
                                                                  :ARG1-of (d2 / derive-01) 
                                                                  :mod (a8 / any) 
                                                                  :poss (d3 / date-entity 
                                                                        :ARG0-of (a9 / act-02 
                                                                              :ARG1 (p3 / property) 
                                                                              :ARG1-of (m2 / marry-01) 
                                                                              :op-of (a10 / and)) 
                                                                        :year 1964))))))))))))

# ::snt in most jurisdictions however instructions are nowadays derived mainly from patterns drafted by semiofficial sources such as californias baji book of approved jury instructions
# ::tok in most jurisdictions however instructions are nowadays derived mainly from patterns drafted by semiofficial sources such as californias baji book of approved jury instructions
# ::alignments 23-24|0.0 22-23|0.0.1 21-22|0 19-20|0.0.2 15-16|0.0.0.2.0.0.0 14-15|0.0.0.2.0.0 11-12|0.0.0.2.0 10-11|0.0.0.2 8-9|0.0.0.4 7-8|0.0.0 6-7|0.0.0.3 4-5|0.0.0.0 2-3|0.0.0.1 1-2|0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:32.962
# ::node	0	approve-01	21-22
# ::node	0.0	instruction	23-24
# ::node	0.0.0	derive-01	7-8
# ::node	0.0.0.0	instruction	4-5
# ::node	0.0.0.1	jurisdiction	2-3
# ::node	0.0.0.1.0	most	1-2
# ::node	0.0.0.2	pattern-01	10-11
# ::node	0.0.0.2.0	draft-01	11-12
# ::node	0.0.0.2.0.0	source	14-15
# ::node	0.0.0.2.0.0.0	such	15-16
# ::node	0.0.0.3	nowadays	6-7
# ::node	0.0.0.4	main	8-9
# ::node	0.0.1	jury	22-23
# ::node	0.0.2	book	19-20
# ::root	0	approve-01
# ::edge	approve-01	ARG1	instruction	0	0.0	
# ::edge	book	topic	instruction	0.0.2	0.0	
# ::edge	derive-01	ARG0	instruction	0.0.0	0.0	
# ::edge	derive-01	ARG1	instruction	0.0.0	0.0.0.0	
# ::edge	derive-01	ARG2	jurisdiction	0.0.0	0.0.0.1	
# ::edge	derive-01	manner	nowadays	0.0.0	0.0.0.3	
# ::edge	derive-01	manner	pattern-01	0.0.0	0.0.0.2	
# ::edge	derive-01	mod	main	0.0.0	0.0.0.4	
# ::edge	draft-01	ARG0	source	0.0.0.2.0	0.0.0.2.0.0	
# ::edge	draft-01	ARG1	pattern-01	0.0.0.2.0	0.0.0.2	
# ::edge	instruction	mod	jury	0.0	0.0.1	
# ::edge	jurisdiction	quant	most	0.0.0.1	0.0.0.1.0	
# ::edge	such	mod	source	0.0.0.2.0.0.0	0.0.0.2.0.0	
(a / approve-01 
      :ARG1 (i / instruction 
            :ARG0-of (d2 / derive-01 
                  :ARG1 (i2 / instruction) 
                  :ARG2 (j2 / jurisdiction 
                        :quant (m2 / most)) 
                  :manner (p / pattern-01 
                        :ARG1-of (d / draft-01 
                              :ARG0 (s2 / source 
                                    :mod-of (s / such)))) 
                  :manner (n / nowadays) 
                  :mod (m / main)) 
            :mod (j / jury) 
            :topic-of (b / book)))

# ::snt though at the very beginning of his political career hitler had emphasized the need for antisemitism derived from reason not pure emotion there were dash
# ::tok though at the very beginning of his political career hitler had emphasized the need for antisemitism derived from reason not pure emotion there were dash
# ::alignments 21-22|0.0.0 20-21|0.0.0.0 18-19|0.0.2 16-17|0.0.1 13-14|0.0 11-12|0 8-9|0.1.0 7-8|0.1.0.0 4-5|0.1 3-4|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:33.038
# ::node	0	emphasize-01	11-12
# ::node	0.0	need-01	13-14
# ::node	0.0.0	emotion	21-22
# ::node	0.0.0.0	pure	20-21
# ::node	0.0.1	derive-01	16-17
# ::node	0.0.2	reason	18-19
# ::node	0.1	begin-01	4-5
# ::node	0.1.0	career	8-9
# ::node	0.1.0.0	politics	7-8
# ::node	0.1.1	very	3-4
# ::root	0	emphasize-01
# ::edge	begin-01	ARG1	career	0.1	0.1.0	
# ::edge	begin-01	degree	very	0.1	0.1.1	
# ::edge	career	mod	politics	0.1.0	0.1.0.0	
# ::edge	emotion	quant	pure	0.0.0	0.0.0.0	
# ::edge	emphasize-01	ARG1	need-01	0	0.0	
# ::edge	emphasize-01	time	begin-01	0	0.1	
# ::edge	need-01	ARG0	emotion	0.0	0.0.0	
# ::edge	need-01	ARG1	derive-01	0.0	0.0.1	
# ::edge	need-01	location	reason	0.0	0.0.2	
(e2 / emphasize-01 
      :ARG1 (n / need-01 
            :ARG0 (e / emotion 
                  :quant (p / pure)) 
            :ARG1 (d / derive-01) 
            :location (r / reason)) 
      :time (b / begin-01 
            :ARG1 (c / career 
                  :mod (p2 / politics)) 
            :degree (v / very)))

# ::snt the feeling against acid house parties derives from a mixture of officiousness and puritanism
# ::tok the feeling against acid house parties derives from a mixture of officiousness and puritanism
# ::alignments 12-13|0.1 5-6|0.0 4-5|0.0.0 3-4|0.0.1 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:33.057
# ::node	0	feel-01	1-2
# ::node	0.0	party	5-6
# ::node	0.0.0	house	4-5
# ::node	0.0.1	acid	3-4
# ::node	0.1	and	12-13
# ::root	0	feel-01
# ::edge	and	op1	feel-01	0.1	0	
# ::edge	feel-01	ARG1	party	0	0.0	
# ::edge	party	mod	acid	0.0	0.0.1	
# ::edge	party	mod	house	0.0	0.0.0	
(f / feel-01 
      :ARG1 (p / party 
            :mod (h / house) 
            :mod (a2 / acid)) 
      :op-of (a / and))

# ::snt derived from a fivespeed used by peugeot and citroen it comes close to perfection in terms of lightness and precision
# ::tok derived from a fivespeed used by peugeot and citroen it comes close to perfection in terms of lightness and precision
# ::alignments 19-20|0.0 18-19|0 15-16|0.1 9-10|0.1.0.0.0 7-8|0.1.0 4-5|0.1.0.0 0-1|0.1.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:33.117
# ::node	0	and	18-19
# ::node	0.0	precision	19-20
# ::node	0.1	term	15-16
# ::node	0.1.0	and	7-8
# ::node	0.1.0.0	use-01	4-5
# ::node	0.1.0.0.0	it	9-10
# ::node	0.1.0.0.1	derive-01	0-1
# ::root	0	and
# ::edge	and	op1	precision	0	0.0	
# ::edge	derive-01	manner	use-01	0.1.0.0.1	0.1.0.0	
# ::edge	term	poss	and	0.1	0	
# ::edge	term	poss	and	0.1	0.1.0	
# ::edge	use-01	ARG0	it	0.1.0.0	0.1.0.0.0	
# ::edge	use-01	ARG1	and	0.1.0.0	0.1.0	
(a / and 
      :op1 (p / precision) 
      :poss-of (t / term 
            :poss (a2 / and 
                  :ARG1-of (u / use-01 
                        :ARG0 (i / it) 
                        :manner-of (d / derive-01)))))

# ::snt 99 these pinched vignettes of life on the margins derive their strength from the vivid earthy idioms of kelmans glasgow it is language that raises his characters above their dismal circumstances
# ::tok 99 these pinched vignettes of life on the margins derive their strength from the vivid earthy idioms of kelmans glasgow it is language that raises his characters above their dismal circumstances
# ::alignments 30-31|0 29-30|0.0 27-28|0.1 26-27|0.1.0.1 24-25|0.1.0 22-23|0.1.0.0 20-21|0.1.0.0.0 11-12|0.1.0.2.0.0 9-10|0.1.0.2.0 8-9|0.1.0.2.0.0.0 5-6|0.1.0.2.1 3-4|0.1.0.2 0-1|0.1.0.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:33.407
# ::node	0	circumstance	30-31
# ::node	0.0	dismal	29-30
# ::node	0.1	above	27-28
# ::node	0.1.0	raise-01	24-25
# ::node	0.1.0.0	language	22-23
# ::node	0.1.0.0.0	it	20-21
# ::node	0.1.0.1	character	26-27
# ::node	0.1.0.2	vignette	3-4
# ::node	0.1.0.2.0	derive-01	9-10
# ::node	0.1.0.2.0.0	strength	11-12
# ::node	0.1.0.2.0.0.0	margin	8-9
# ::node	0.1.0.2.1	life	5-6
# ::node	0.1.0.3	99	0-1
# ::root	0	circumstance
# ::edge	99	op1	raise-01	0.1.0.3	0.1.0	
# ::edge	above	op1	circumstance	0.1	0	
# ::edge	circumstance	mod	dismal	0	0.0	
# ::edge	derive-01	ARG0	vignette	0.1.0.2.0	0.1.0.2	
# ::edge	derive-01	ARG1	strength	0.1.0.2.0	0.1.0.2.0.0	
# ::edge	language	domain	it	0.1.0.0	0.1.0.0.0	
# ::edge	raise-01	ARG0	language	0.1.0	0.1.0.0	
# ::edge	raise-01	ARG1	character	0.1.0	0.1.0.1	
# ::edge	raise-01	ARG4	above	0.1.0	0.1	
# ::edge	strength	poss	margin	0.1.0.2.0.0	0.1.0.2.0.0.0	
# ::edge	vignette	mod	life	0.1.0.2	0.1.0.2.1	
# ::edge	vignette	op1	raise-01	0.1.0.2	0.1.0	
(c / circumstance 
      :mod (d / dismal) 
      :op-of (a / above 
            :ARG4-of (r / raise-01 
                  :ARG0 (l / language 
                        :domain (i / it)) 
                  :ARG1 (c2 / character) 
                  :op-of (v / vignette 
                        :ARG0-of (d2 / derive-01 
                              :ARG1 (s / strength 
                                    :poss (m / margin))) 
                        :mod (l2 / life)) 
                  :op-of 99)))

# ::snt analytically the is one of deriving more specific principles from more general ones
# ::tok analytically the is one of deriving more specific principles from more general ones
# ::alignments 12-13|0.0.0 11-12|0.0.0.0 8-9|0.0 7-8|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:33.440
# ::node	0	specific	7-8
# ::node	0.0	principle	8-9
# ::node	0.0.0	one	12-13
# ::node	0.0.0.0	general	11-12
# ::root	0	specific
(s / specific 
      :mod-of (p / principle 
            :location (o / one 
                  :mod (g / general))))

# ::snt hrer again and to derive new strength from his words
# ::tok hrer again and to derive new strength from his words
# ::alignments 9-10|0.1.1 6-7|0.1.0 5-6|0.1.0.0 4-5|0.1 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:33.464
# ::node	0	and	2-3
# ::node	0.0	again	1-2
# ::node	0.1	derive-01	4-5
# ::node	0.1.0	strength	6-7
# ::node	0.1.0.0	new	5-6
# ::node	0.1.1	word	9-10
# ::root	0	and
# ::edge	and	mod	again	0	0.0	
# ::edge	and	op1	derive-01	0	0.1	
# ::edge	derive-01	ARG1	strength	0.1	0.1.0	
# ::edge	derive-01	ARG2	word	0.1	0.1.1	
# ::edge	strength	mod	new	0.1.0	0.1.0.0	
(a / and 
      :mod (a2 / again) 
      :op1 (d / derive-01 
            :ARG1 (s / strength 
                  :mod (n / new)) 
            :ARG2 (w / word)))

# ::snt the system of case law is peculiar to england and the countries which have derived their law from england
# ::tok the system of case law is peculiar to england and the countries which have derived their law from england
# ::alignments 18-19|0.1.0.0+0.1.0+0.1 16-17|0.0 14-15|0 11-12|0.0.0 9-10|0.0.0.0 8-9|0.0.0.0.0.1.0.0+0.0.0.0.0.1.0+0.0.0.0.0.1 6-7|0.0.0.0.0 4-5|0.0.0.0.0.0.0 3-4|0.0.0.0.0.0.0.0 1-2|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:33.703
# ::node	0	derive-01	14-15
# ::node	0.0	law	16-17
# ::node	0.0.0	country	11-12
# ::node	0.0.0.0	and	9-10
# ::node	0.0.0.0.0	peculiar-41	6-7
# ::node	0.0.0.0.0.0	system	1-2
# ::node	0.0.0.0.0.0.0	law	4-5
# ::node	0.0.0.0.0.0.0.0	case	3-4
# ::node	0.0.0.0.0.1	country	8-9
# ::node	0.0.0.0.0.1.0	name	8-9
# ::node	0.0.0.0.0.1.0.0	"England"	8-9
# ::node	0.1	country	18-19
# ::node	0.1.0	name	18-19
# ::node	0.1.0.0	"England"	18-19
# ::root	0	derive-01
# ::edge	and	op1	country	0.0.0.0	0.0.0	
# ::edge	country	name	name	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	country	name	name	0.1	0.1.0	
# ::edge	derive-01	ARG1	law	0	0.0	
# ::edge	derive-01	ARG2	country	0	0.1	
# ::edge	law	poss	country	0.0	0.0.0	
# ::edge	law	topic	case	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	name	op1	"England"	0.0.0.0.0.1.0	0.0.0.0.0.1.0.0	
# ::edge	name	op1	"England"	0.1.0	0.1.0.0	
# ::edge	peculiar-41	ARG0	system	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	peculiar-41	ARG1	country	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	peculiar-41	prep-to	and	0.0.0.0.0	0.0.0.0	
# ::edge	system	mod	law	0.0.0.0.0.0	0.0.0.0.0.0.0	
(d / derive-01 
      :ARG1 (l / law 
            :poss (c2 / country 
                  :op-of (a / and 
                        :prep-to-of (p / peculiar-41 
                              :ARG0 (s / system 
                                    :mod (l2 / law 
                                          :topic (c4 / case))) 
                              :ARG1 (c3 / country 
                                    :name (n2 / name 
                                          :op1 "England")))))) 
      :ARG2 (c / country 
            :name (n / name 
                  :op1 "England")))

# ::snt both lada selects feature the same mechanical and equipment specification as the models from which they are derived with the exception of a one year  50000 mile rather than two year  50000 mile manufacturers warranty
# ::tok both lada selects feature the same mechanical and equipment specification as the models from which they are derived with the exception of a one year 50000 mile rather than two year 50000 mile manufacturers warranty
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:33.705
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt a simplistic view of einsteins work can be derived by consideration of the problem in one dimension only
# ::tok a simplistic view of einsteins work can be derived by consideration of the problem in one dimension only
# ::alignments 17-18|0.0.0.1.0 16-17|0.0.0.1.1 13-14|0.0.0.1 10-11|0.0.0 8-9|0.0 6-7|0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:33.738
# ::node	0	possible	6-7
# ::node	0.0	derive-01	8-9
# ::node	0.0.0	consider-02	10-11
# ::node	0.0.0.0	simplistic	1-2
# ::node	0.0.0.1	problem	13-14
# ::node	0.0.0.1.0	only	17-18
# ::node	0.0.0.1.1	dimension	16-17
# ::root	0	possible
# ::edge	consider-02	ARG0	simplistic	0.0.0	0.0.0.0	
# ::edge	consider-02	ARG1	problem	0.0.0	0.0.0.1	
# ::edge	derive-01	ARG2	consider-02	0.0	0.0.0	
# ::edge	possible	domain	derive-01	0	0.0	
# ::edge	problem	mod	only	0.0.0.1	0.0.0.1.0	
# ::edge	problem	prep-with	dimension	0.0.0.1	0.0.0.1.1	
(p2 / possible 
      :domain (d2 / derive-01 
            :ARG2 (c / consider-02 
                  :ARG0 (s / simplistic) 
                  :ARG1 (p / problem 
                        :mod (o / only) 
                        :prep-with (d / dimension)))))

# ::snt its willingness to take from one person and give to another depending on who will derive the greater net benefit from the allocation
# ::tok its willingness to take from one person and give to another depending on who will derive the greater net benefit from the allocation
# ::alignments 22-23|0.0 19-20|0 18-19|0.2 17-18|0.3 15-16|0.1 11-12|0.1.0 10-11|0.1.0.0.0 8-9|0.1.0.0 7-8|0.1.0.0.2 6-7|0.1.0.0.2.0 1-2|0.1.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:33.922
# ::node	0	benefit-01	19-20
# ::node	0.0	allocate-01	22-23
# ::node	0.1	derive-01	15-16
# ::node	0.1.0	depend-01	11-12
# ::node	0.1.0.0	give-01	8-9
# ::node	0.1.0.0.0	another	10-11
# ::node	0.1.0.0.1	will-02	1-2
# ::node	0.1.0.0.2	and	7-8
# ::node	0.1.0.0.2.0	person	6-7
# ::node	0.2	net	18-19
# ::node	0.3	great	17-18
# ::root	0	benefit-01
# ::edge	and	op1	person	0.1.0.0.2	0.1.0.0.2.0	
# ::edge	and	op2	give-01	0.1.0.0.2	0.1.0.0	
# ::edge	benefit-01	ARG1	allocate-01	0	0.0	
# ::edge	benefit-01	mod	great	0	0.3	
# ::edge	benefit-01	mod	net	0	0.2	
# ::edge	depend-01	ARG0	give-01	0.1.0	0.1.0.0	
# ::edge	depend-01	ARG1	derive-01	0.1.0	0.1	
# ::edge	derive-01	ARG1	benefit-01	0.1	0	
# ::edge	give-01	ARG0	another	0.1.0.0	0.1.0.0.0	
# ::edge	give-01	ARG1	will-02	0.1.0.0	0.1.0.0.1	
(b / benefit-01 
      :ARG1 (a / allocate-01) 
      :ARG1-of (d / derive-01 
            :ARG1-of (d2 / depend-01 
                  :ARG0 (g2 / give-01 
                        :ARG0 (a2 / another) 
                        :ARG1 (w / will-02) 
                        :op-of (a3 / and 
                              :op1 (p / person))))) 
      :mod (n / net) 
      :mod (g / great))

# ::snt sausagemaking is recorded in histories of the roman empire and the words sausage salami and saucissons are all derived from the latin salsus meaning salted
# ::tok sausagemaking is recorded in histories of the roman empire and the words sausage salami and saucissons are all derived from the latin salsus meaning salted
# ::alignments 24-25|0.0 23-24|0 18-19|0.0.1 17-18|0.0.0.0.0.0 14-15|0.0.1.0 11-12|0.0.0.0.1 9-10|0.0.0.0 7-9|0.0.0.1.0.0+0.0.0.1.0.1+0.0.0.1.0+0.0.0.1 4-5|0.0.0 2-3|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:34.103
# ::node	0	mean-01	23-24
# ::node	0.0	salt-01	24-25
# ::node	0.0.0	history	4-5
# ::node	0.0.0.0	and	9-10
# ::node	0.0.0.0.0	record-01	2-3
# ::node	0.0.0.0.0.0	all	17-18
# ::node	0.0.0.0.1	word	11-12
# ::node	0.0.0.1	country	7-9
# ::node	0.0.0.1.0	name	7-9
# ::node	0.0.0.1.0.0	"empire"	7-9
# ::node	0.0.0.1.0.1	"roman"	7-9
# ::node	0.0.1	derive-01	18-19
# ::node	0.0.1.0	and	14-15
# ::root	0	mean-01
# ::edge	and	op1	history	0.0.0.0	0.0.0	
# ::edge	and	op2	word	0.0.0.0	0.0.0.0.1	
# ::edge	country	name	name	0.0.0.1	0.0.0.1.0	
# ::edge	derive-01	ARG1	and	0.0.1	0.0.1.0	
# ::edge	derive-01	ARG2	salt-01	0.0.1	0.0	
# ::edge	history	poss	country	0.0.0	0.0.0.1	
# ::edge	mean-01	ARG1	salt-01	0	0.0	
# ::edge	name	op1	"empire"	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	name	op2	"roman"	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	record-01	ARG0	all	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	record-01	ARG1	and	0.0.0.0.0	0.0.0.0	
# ::edge	salt-01	ARG1	history	0.0	0.0.0	
(m / mean-01 
      :ARG1 (s / salt-01 
            :ARG1 (h / history 
                  :op-of (a3 / and 
                        :ARG1-of (r / record-01 
                              :ARG0 (a / all)) 
                        :op1 (w / word)) 
                  :poss (c / country 
                        :name (n / name 
                              :op1 "empire" 
                              :op2 "roman"))) 
            :ARG2-of (d / derive-01 
                  :ARG1 (a2 / and))))

# ::snt to say this is not to endorse the thesis that all duties derive from rights or that morality is rightbased
# ::tok to say this is not to endorse the thesis that all duties derive from rights or that morality is rightbased
# ::alignments 17-18|0.1.1 15-16|0.1.2 14-15|0.1.2.1 12-13|0.1 11-12|0.1.0 10-11|0.1.0.0 6-7|0.1.2.0 2-3|0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:34.301
# ::node	0	say-01	1-2
# ::node	0.0	this	2-3
# ::node	0.1	derive-01	12-13
# ::node	0.1.0	duty	11-12
# ::node	0.1.0.0	all	10-11
# ::node	0.1.1	morality	17-18
# ::node	0.1.2	or	15-16
# ::node	0.1.2.0	endorse-01	6-7
# ::node	0.1.2.1	right	14-15
# ::root	0	say-01
# ::edge	derive-01	ARG0	duty	0.1	0.1.0	
# ::edge	derive-01	ARG1	morality	0.1	0.1.1	
# ::edge	derive-01	time	say-01	0.1	0	
# ::edge	duty	quant	all	0.1.0	0.1.0.0	
# ::edge	endorse-01	manner	or	0.1.2.0	0.1.2	
# ::edge	or	op1	derive-01	0.1.2	0.1	
# ::edge	or	op2	right	0.1.2	0.1.2.1	
# ::edge	say-01	ARG1	this	0	0.0	
(s / say-01 
      :ARG1 (t / this) 
      :time-of (d / derive-01 
            :ARG0 (d2 / duty 
                  :quant (a / all)) 
            :ARG1 (m / morality) 
            :op-of (o / or 
                  :manner-of (e / endorse-01) 
                  :op1 (r / right))))

# ::snt i answer in one word from experience in that all our knowledge is founded and from that it ultimately derives itself
# ::tok i answer in one word from experience in that all our knowledge is founded and from that it ultimately derives itself
# ::alignments 18-19|0.2.0.0.0.0 17-18|0.1 14-15|0.2.0.0 13-14|0.2.0.0.0 11-12|0.2.0.0.0.1 9-10|0.2.0.0.0.1.0 6-7|0.2.0 4-5|0.2 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:34.403
# ::node	0	answer-01	1-2
# ::node	0.0	i	0-1
# ::node	0.1	it	17-18
# ::node	0.2	word	4-5
# ::node	0.2.0	experience-01	6-7
# ::node	0.2.0.0	and	14-15
# ::node	0.2.0.0.0	found-01	13-14
# ::node	0.2.0.0.0.0	ultimate	18-19
# ::node	0.2.0.0.0.1	knowledge	11-12
# ::node	0.2.0.0.0.1.0	all	9-10
# ::root	0	answer-01
# ::edge	and	op1	found-01	0.2.0.0	0.2.0.0.0	
# ::edge	answer-01	ARG0	i	0	0.0	
# ::edge	answer-01	ARG1	it	0	0.1	
# ::edge	answer-01	ARG2	word	0	0.2	
# ::edge	experience-01	ARG1	and	0.2.0	0.2.0.0	
# ::edge	found-01	ARG0	ultimate	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	found-01	ARG1	knowledge	0.2.0.0.0	0.2.0.0.0.1	
# ::edge	knowledge	quant	all	0.2.0.0.0.1	0.2.0.0.0.1.0	
# ::edge	word	prep-against	experience-01	0.2	0.2.0	
(a3 / answer-01 
      :ARG0 (i2 / i) 
      :ARG1 (i / it) 
      :ARG2 (w / word 
            :prep-against (e / experience-01 
                  :ARG1 (a / and 
                        :op1 (f / found-01 
                              :ARG0 (u / ultimate) 
                              :ARG1 (k / knowledge 
                                    :quant (a2 / all)))))))

# ::snt this public backlash against the shoddy callous and spivvy aspects of mrs thatchers administration does not derive from the sense of chronic economic crisis which infected the politics of the 1970s but rather is born of prosperity
# ::tok this public backlash against the shoddy callous and spivvy aspects of mrs thatchers administration does not derive from the sense of chronic economic crisis which infected the politics of the 1970s but rather is born of prosperity
# ::alignments 36-37|0.1.0 34-35|0.1 31-32|0 30-31|0.0.1.0 27-28|0.0.1 25-26|0.0 23-24|0.0.0 22-23|0.0.0.1 21-22|0.0.0.0 19-20|0.0.0.2 16-17|0.0.0.2.0 13-14|0.0.0.2.0.0 9-10|0.0.0.2.0.0.0 7-8|0.0.0.2.0.0.0.0 6-7|0.0.0.2.0.0.0.0.0 2-3|0.0.0.2.0.0.0.0.1 1-2|0.0.0.2.0.0.0.0.1.0 0-1|0.0.0.2.0.0.0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:34.834
# ::node	0	contrast-01	31-32
# ::node	0.0	infect-01	25-26
# ::node	0.0.0	crisis	23-24
# ::node	0.0.0.0	chronic	21-22
# ::node	0.0.0.1	economy	22-23
# ::node	0.0.0.2	sense	19-20
# ::node	0.0.0.2.0	derive-01	16-17
# ::node	0.0.0.2.0.0	administrate-01	13-14
# ::node	0.0.0.2.0.0.0	aspect	9-10
# ::node	0.0.0.2.0.0.0.0	and	7-8
# ::node	0.0.0.2.0.0.0.0.0	callous	6-7
# ::node	0.0.0.2.0.0.0.0.1	backlash	2-3
# ::node	0.0.0.2.0.0.0.0.1.0	public	1-2
# ::node	0.0.0.2.0.0.0.0.1.1	this	0-1
# ::node	0.0.1	politics	27-28
# ::node	0.0.1.0	1970	30-31
# ::node	0.1	bear-02	34-35
# ::node	0.1.0	prosper-01	36-37
# ::root	0	contrast-01
# ::edge	administrate-01	ARG1	aspect	0.0.0.2.0.0	0.0.0.2.0.0.0	
# ::edge	and	op1	callous	0.0.0.2.0.0.0.0	0.0.0.2.0.0.0.0.0	
# ::edge	and	op2	aspect	0.0.0.2.0.0.0.0	0.0.0.2.0.0.0	
# ::edge	backlash	mod	public	0.0.0.2.0.0.0.0.1	0.0.0.2.0.0.0.0.1.0	
# ::edge	backlash	mod	this	0.0.0.2.0.0.0.0.1	0.0.0.2.0.0.0.0.1.1	
# ::edge	backlash	source	and	0.0.0.2.0.0.0.0.1	0.0.0.2.0.0.0.0	
# ::edge	bear-02	ARG1	prosper-01	0.1	0.1.0	
# ::edge	contrast-01	ARG1	infect-01	0	0.0	
# ::edge	contrast-01	ARG2	bear-02	0	0.1	
# ::edge	crisis	mod	chronic	0.0.0	0.0.0.0	
# ::edge	crisis	mod	economy	0.0.0	0.0.0.1	
# ::edge	derive-01	ARG0	sense	0.0.0.2.0	0.0.0.2	
# ::edge	derive-01	ARG1	administrate-01	0.0.0.2.0	0.0.0.2.0.0	
# ::edge	infect-01	ARG0	crisis	0.0	0.0.0	
# ::edge	infect-01	ARG1	politics	0.0	0.0.1	
# ::edge	politics	location	1970	0.0.1	0.0.1.0	
# ::edge	sense	mod	crisis	0.0.0.2	0.0.0	
(c / contrast-01 
      :ARG1 (i / infect-01 
            :ARG0 (c2 / crisis 
                  :mod (c3 / chronic) 
                  :mod (e / economy) 
                  :mod-of (s / sense 
                        :ARG0-of (d / derive-01 
                              :ARG1 (a / administrate-01 
                                    :ARG1 (a2 / aspect 
                                          :op-of (a3 / and 
                                                :op1 (c4 / callous) 
                                                :source-of (b2 / backlash 
                                                      :mod (p3 / public) 
                                                      :mod (t / this)))))))) 
            :ARG1 (p2 / politics 
                  :location 1970)) 
      :ARG2 (b / bear-02 
            :ARG1 (p / prosper-01)))

# ::snt and all are derived from one paninfarina concept car dash
# ::tok and all are derived from one paninfarina concept car dash
# ::alignments 8-9|0.1 7-8|0.1.0 3-4|0.0 1-2|0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:34.855
# ::node	0	and	0-1
# ::node	0.0	derive-01	3-4
# ::node	0.0.0	all	1-2
# ::node	0.1	car	8-9
# ::node	0.1.0	concept	7-8
# ::root	0	and
# ::edge	and	op1	derive-01	0	0.0	
# ::edge	and	op2	car	0	0.1	
# ::edge	car	mod	concept	0.1	0.1.0	
# ::edge	derive-01	ARG1	all	0.0	0.0.0	
(a2 / and 
      :op1 (d / derive-01 
            :ARG1 (a / all)) 
      :op2 (c / car 
            :mod (c2 / concept)))

# ::snt but the specific features and structural characteristics of the german sociopolitical culture in the shortlived and illfated nationstate which conditioned the manufacture and appeal of the extraordinary hitler myth were largely swept away in the whirlpool of change arising from total defeat and were completely banished in the process of longterm change deriving from postwar reconstruction
# ::tok but the specific features and structural characteristics of the german sociopolitical culture in the shortlived and illfated nationstate which conditioned the manufacture and appeal of the extraordinary hitler myth were largely swept away in the whirlpool of change arising from total defeat and were completely banished in the process of longterm change deriving from postwar reconstruction
# ::alignments 55-56|0.1.1.0.0.0.0 51-52|0.1.1.0.0.0.0.0 48-49|0.1.1.0.0.0.0.0.1 44-45|0.1.1.0.0.0.0.0.0 42-43|0.0.1.0.0.2 41-42|0.1.1.0.0.0 37-38|0.1.1.0.0 32-33|0.0.1.0.0.1 31-32|0.0.1.0.0 30-31|0.0.1.0.0.0 28-29|0.0.1.0 26-27|0.0.1.0.1 23-24|0.0.1 22-23|0.0 21-22|0.0.0 15-16|0.1.1.0 11-12|0.1.1.1.0.0 6-7|0.1.1.1.0+0.1.1.1 5-6|0.1.1.1.1 4-5|0.1.1 3-4|0.1 2-3|0.1.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:35.440
# ::node	0	contrast-01	0-1
# ::node	0.0	and	22-23
# ::node	0.0.0	manufacture-01	21-22
# ::node	0.0.1	appeal-02	23-24
# ::node	0.0.1.0	myth	28-29
# ::node	0.0.1.0.0	sweep-02	31-32
# ::node	0.0.1.0.0.0	large	30-31
# ::node	0.0.1.0.0.1	away	32-33
# ::node	0.0.1.0.0.2	and	42-43
# ::node	0.0.1.0.1	extraordinary	26-27
# ::node	0.1	feature-01	3-4
# ::node	0.1.0	specific	2-3
# ::node	0.1.1	and	4-5
# ::node	0.1.1.0	and	15-16
# ::node	0.1.1.0.0	change-01	37-38
# ::node	0.1.1.0.0.0	defeat-01	41-42
# ::node	0.1.1.0.0.0.0	reconstruct-01	55-56
# ::node	0.1.1.0.0.0.0.0	change-01	51-52
# ::node	0.1.1.0.0.0.0.0.0	complete	44-45
# ::node	0.1.1.0.0.0.0.0.1	process	48-49
# ::node	0.1.1.1	thing	6-7
# ::node	0.1.1.1.0	characteristic-41	6-7
# ::node	0.1.1.1.0.0	culture	11-12
# ::node	0.1.1.1.1	structure	5-6
# ::root	0	contrast-01
# ::edge	and	example	and	0.1.1	0.1.1.0	
# ::edge	and	op1	change-01	0.1.1.0	0.1.1.0.0	
# ::edge	and	op1	feature-01	0.1.1	0.1	
# ::edge	and	op1	manufacture-01	0.0	0.0.0	
# ::edge	and	op1	sweep-02	0.0.1.0.0.2	0.0.1.0.0	
# ::edge	and	op2	appeal-02	0.0	0.0.1	
# ::edge	and	op2	thing	0.1.1	0.1.1.1	
# ::edge	appeal-02	ARG1	myth	0.0.1	0.0.1.0	
# ::edge	change-01	ARG1	defeat-01	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	change-01	ARG1	reconstruct-01	0.1.1.0.0.0.0.0	0.1.1.0.0.0.0	
# ::edge	characteristic-41	ARG1	culture	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	characteristic-41	ARG2	thing	0.1.1.1.0	0.1.1.1	
# ::edge	complete	op1	change-01	0.1.1.0.0.0.0.0.0	0.1.1.0.0.0.0.0	
# ::edge	contrast-01	ARG1	and	0	0.0	
# ::edge	feature-01	ARG1	contrast-01	0.1	0	
# ::edge	feature-01	mod	specific	0.1	0.1.0	
# ::edge	myth	mod	extraordinary	0.0.1.0	0.0.1.0.1	
# ::edge	process	purpose	change-01	0.1.1.0.0.0.0.0.1	0.1.1.0.0.0.0.0	
# ::edge	reconstruct-01	ARG1	defeat-01	0.1.1.0.0.0.0	0.1.1.0.0.0	
# ::edge	sweep-02	ARG1	myth	0.0.1.0.0	0.0.1.0	
# ::edge	sweep-02	degree	large	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	sweep-02	direction	away	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	thing	mod	structure	0.1.1.1	0.1.1.1.1	
(c6 / contrast-01 
      :ARG1 (a4 / and 
            :op1 (m2 / manufacture-01) 
            :op2 (a3 / appeal-02 
                  :ARG1 (m / myth 
                        :ARG1-of (s / sweep-02 
                              :degree (l / large) 
                              :direction (a2 / away) 
                              :op-of (a / and)) 
                        :mod (e / extraordinary)))) 
      :ARG1-of (f / feature-01 
            :mod (s3 / specific) 
            :op-of (a6 / and 
                  :example (a5 / and 
                        :op1 (c3 / change-01 
                              :ARG1 (d / defeat-01 
                                    :ARG1-of (r / reconstruct-01 
                                          :ARG1-of (c / change-01 
                                                :op-of (c2 / complete) 
                                                :purpose-of (p / process)))))) 
                  :op1 (t / thing 
                        :ARG2-of (c5 / characteristic-41 
                              :ARG1 (c4 / culture)) 
                        :mod (s2 / structure)))))

# ::snt it derives from their contribution to the wellbeing of persons
# ::tok it derives from their contribution to the wellbeing of persons
# ::alignments 9-10|0.0 4-5|0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:35.449
# ::node	0	contribute-01	4-5
# ::node	0.0	person	9-10
# ::node	0.1	it	0-1
# ::root	0	contribute-01
# ::edge	contribute-01	ARG0	person	0	0.0	
# ::edge	contribute-01	poss	it	0	0.1	
(c / contribute-01 
      :ARG0 (p / person) 
      :poss (i / it))

# ::snt many of the infections derive from the animal and bird world and humans usually shrug them off
# ::tok many of the infections derive from the animal and bird world and humans usually shrug them off
# ::alignments 16-17|0.0.1 13-14|0.0.0 12-13|0.1.0.1.1 11-12|0.1.0.1 10-11|0.1 9-10|0.1.0.1.0 8-9|0.1.0 7-8|0.1.0.0 4-5|0 3-4|0.0 0-1|0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:35.543
# ::node	0	derive-01	4-5
# ::node	0.0	infect-01	3-4
# ::node	0.0.0	usual	13-14
# ::node	0.0.1	off	16-17
# ::node	0.0.2	many	0-1
# ::node	0.1	world	10-11
# ::node	0.1.0	and	8-9
# ::node	0.1.0.0	animal	7-8
# ::node	0.1.0.1	and	11-12
# ::node	0.1.0.1.0	bird	9-10
# ::node	0.1.0.1.1	human	12-13
# ::root	0	derive-01
# ::edge	and	consist	world	0.1.0	0.1	
# ::edge	and	mod	bird	0.1.0.1	0.1.0.1.0	
# ::edge	and	op1	animal	0.1.0	0.1.0.0	
# ::edge	and	op1	human	0.1.0.1	0.1.0.1.1	
# ::edge	and	poss	and	0.1.0	0.1.0.1	
# ::edge	derive-01	ARG1	infect-01	0	0.0	
# ::edge	derive-01	ARG2	world	0	0.1	
# ::edge	infect-01	ARG0	usual	0.0	0.0.0	
# ::edge	infect-01	quant	many	0.0	0.0.2	
# ::edge	off	op1	infect-01	0.0.1	0.0	
(d / derive-01 
      :ARG1 (i / infect-01 
            :ARG0 (u / usual) 
            :op-of (o / off) 
            :quant (m / many)) 
      :ARG2 (w / world 
            :consist-of (a2 / and 
                  :op1 (a3 / animal) 
                  :poss (a / and 
                        :mod (b / bird) 
                        :op1 (h / human)))))

# ::snt derived from say parents of highquality beef stock dash
# ::tok derived from say parents of highquality beef stock dash
# ::alignments 7-8|0.0.0 6-7|0.0 3-4|0.0.0.0.1+0.0.0.0 2-3|0.0.0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:35.559
# ::node	0	derive-01	0-1
# ::node	0.0	beef	6-7
# ::node	0.0.0	stock	7-8
# ::node	0.0.0.0	have-rel-role-91	3-4
# ::node	0.0.0.0.0	say-01	2-3
# ::node	0.0.0.0.1	parent	3-4
# ::root	0	derive-01
# ::edge	derive-01	ARG1	beef	0	0.0	
# ::edge	have-rel-role-91	ARG1	stock	0.0.0.0	0.0.0	
# ::edge	have-rel-role-91	ARG2	parent	0.0.0.0	0.0.0.0.1	
# ::edge	say-01	ARG1	have-rel-role-91	0.0.0.0.0	0.0.0.0	
# ::edge	stock	mod	beef	0.0.0	0.0	
(d / derive-01 
      :ARG1 (b / beef 
            :mod-of (s / stock 
                  :ARG1-of (h / have-rel-role-91 
                        :ARG1-of (s2 / say-01) 
                        :ARG2 (p / parent)))))

# ::snt but his was one of the many families in the streets that ran off the main road at the bottom of the hill and from whom this shop and the tobacconists derived most of their regular custom
# ::tok but his was one of the many families in the streets that ran off the main road at the bottom of the hill and from whom this shop and the tobacconists derived most of their regular custom
# ::alignments 35-36|0.1.0.1 32-33|0.1.0.2 31-32|0.1.0 28-29|0.1.0.0 27-28|0.1.0.0.0 26-27|0.1.0.0.0.0 23-24|0.1 19-20|0.1.1.0 16-17|0.1.1 15-16|0.0 13-14|0.1.1.1 10-11|0.1.0.3 7-8|0.1.0.3.0 6-7|0.1.0.3.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:35.867
# ::node	0	contrast-01	0-1
# ::node	0.0	main	15-16
# ::node	0.1	and	23-24
# ::node	0.1.0	derive-01	31-32
# ::node	0.1.0.0	and	28-29
# ::node	0.1.0.0.0	shop	27-28
# ::node	0.1.0.0.0.0	this	26-27
# ::node	0.1.0.1	regular	35-36
# ::node	0.1.0.2	most	32-33
# ::node	0.1.0.3	street	10-11
# ::node	0.1.0.3.0	family	7-8
# ::node	0.1.0.3.0.0	many	6-7
# ::node	0.1.1	road	16-17
# ::node	0.1.1.0	bottom	19-20
# ::node	0.1.1.1	off	13-14
# ::root	0	contrast-01
# ::edge	and	op1	shop	0.1.0.0	0.1.0.0.0	
# ::edge	contrast-01	ARG0	main	0	0.0	
# ::edge	contrast-01	ARG2	and	0	0.1	
# ::edge	derive-01	ARG0	and	0.1.0	0.1	
# ::edge	derive-01	ARG1	and	0.1.0	0.1.0.0	
# ::edge	derive-01	ARG2	regular	0.1.0	0.1.0.1	
# ::edge	derive-01	manner	most	0.1.0	0.1.0.2	
# ::edge	family	location	street	0.1.0.3.0	0.1.0.3	
# ::edge	family	quant	many	0.1.0.3.0	0.1.0.3.0.0	
# ::edge	off	op1	road	0.1.1.1	0.1.1	
# ::edge	road	location	and	0.1.1	0.1	
# ::edge	road	location	bottom	0.1.1	0.1.1.0	
# ::edge	shop	mod	this	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	street	op1	derive-01	0.1.0.3	0.1.0	
(c / contrast-01 
      :ARG0 (m2 / main) 
      :ARG2 (a2 / and 
            :ARG0-of (d / derive-01 
                  :ARG1 (a / and 
                        :op1 (s / shop 
                              :mod (t / this))) 
                  :ARG2 (r / regular) 
                  :manner (m / most) 
                  :op-of (s2 / street 
                        :location-of (f / family 
                              :quant (m3 / many)))) 
            :location-of (r2 / road 
                  :location (b / bottom) 
                  :op-of (o / off))))

# ::snt it is now thought to derive from the german word for the common market europaische ekonomische kommunitat
# ::tok it is now thought to derive from the german word for the common market europaische ekonomische kommunitat
# ::alignments 13-14|0.0.1 12-13|0.0.1.0 9-10|0.0.2 5-6|0.0 3-4|0 2-3|0.1 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:35.903
# ::node	0	think-01	3-4
# ::node	0.0	derive-01	5-6
# ::node	0.0.0	it	0-1
# ::node	0.0.1	market	13-14
# ::node	0.0.1.0	common	12-13
# ::node	0.0.2	word	9-10
# ::node	0.1	now	2-3
# ::root	0	think-01
# ::edge	derive-01	ARG0	it	0.0	0.0.0	
# ::edge	derive-01	ARG1	market	0.0	0.0.1	
# ::edge	derive-01	ARG2	word	0.0	0.0.2	
# ::edge	market	mod	common	0.0.1	0.0.1.0	
# ::edge	think-01	ARG1	derive-01	0	0.0	
# ::edge	think-01	time	now	0	0.1	
(t / think-01 
      :ARG1 (d / derive-01 
            :ARG0 (i / it) 
            :ARG1 (m / market 
                  :mod (c / common)) 
            :ARG2 (w / word)) 
      :time (n / now))

# ::snt can that exclusion be derived from the principle of autonomy
# ::tok can that exclusion be derived from the principle of autonomy
# ::alignments 9-10|0.0.0.0 7-8|0.0.0 4-5|0.0 2-3|0.0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:35.944
# ::node	0	possible	0-1
# ::node	0.0	derive-01	4-5
# ::node	0.0.0	principle	7-8
# ::node	0.0.0.0	autonomy	9-10
# ::node	0.0.1	exclude-01	2-3
# ::root	0	possible
# ::edge	derive-01	ARG0	principle	0.0	0.0.0	
# ::edge	derive-01	ARG1	exclude-01	0.0	0.0.1	
# ::edge	possible	domain	derive-01	0	0.0	
# ::edge	principle	poss	autonomy	0.0.0	0.0.0.0	
(p2 / possible 
      :domain (d / derive-01 
            :ARG0 (p / principle 
                  :poss (a / autonomy)) 
            :ARG1 (e / exclude-01)))

# ::snt this ratio was derived by dividing the dose sufficient to destroy all parasites by the maximum dose which will not kill the patient
# ::tok this ratio was derived by dividing the dose sufficient to destroy all parasites by the maximum dose which will not kill the patient
# ::alignments 22-23|0.0.0.0+0.0.0.0.0 20-21|0.0.0 16-17|0.0 15-16|0.0.1 12-13|0 11-12|0.2 10-11|0.1 8-9|0.1.0 7-8|0.1.0.0 5-6|0.1.0.0.0 3-4|0.1.0.0.0.0 1-2|0.1.0.0.0.0.0 0-1|0.1.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:36.150
# ::node	0	parasite	12-13
# ::node	0.0	dose-01	16-17
# ::node	0.0.0	kill-01	20-21
# ::node	0.0.0.0	patient	22-23
# ::node	0.0.0.0.0	have-rel-role-91	22-23
# ::node	0.0.1	maximum	15-16
# ::node	0.1	destroy-01	10-11
# ::node	0.1.0	suffice-01	8-9
# ::node	0.1.0.0	dose-01	7-8
# ::node	0.1.0.0.0	divide-02	5-6
# ::node	0.1.0.0.0.0	derive-01	3-4
# ::node	0.1.0.0.0.0.0	ratio	1-2
# ::node	0.1.0.0.0.0.0.0	this	0-1
# ::node	0.2	all	11-12
# ::root	0	parasite
# ::edge	derive-01	ARG1	ratio	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	derive-01	ARG2	divide-02	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	destroy-01	ARG1	parasite	0.1	0	
# ::edge	divide-02	ARG1	dose-01	0.1.0.0.0	0.1.0.0	
# ::edge	dose-01	ARG1	parasite	0.0	0	
# ::edge	dose-01	degree	maximum	0.0	0.0.1	
# ::edge	have-rel-role-91	ARG2	patient	0.0.0.0.0	0.0.0.0	
# ::edge	kill-01	ARG0	dose-01	0.0.0	0.0	
# ::edge	kill-01	ARG1	patient	0.0.0	0.0.0.0	
# ::edge	parasite	quant	all	0	0.2	
# ::edge	ratio	mod	this	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	suffice-01	ARG0	dose-01	0.1.0	0.1.0.0	
# ::edge	suffice-01	ARG1	destroy-01	0.1.0	0.1	
(p2 / parasite 
      :ARG1-of (d / dose-01 
            :ARG0-of (k / kill-01 
                  :ARG1 (p / patient 
                        :ARG2-of (h / have-rel-role-91))) 
            :degree (m / maximum)) 
      :ARG1-of (d2 / destroy-01 
            :ARG1-of (s / suffice-01 
                  :ARG0 (d3 / dose-01 
                        :ARG1-of (d4 / divide-02 
                              :ARG2-of (d5 / derive-01 
                                    :ARG1 (r / ratio 
                                          :mod (t / this))))))) 
      :quant (a / all))

# ::snt 1m derived from turnover of 23m and bicc has guaranteed that current year profits will be not less than 1
# ::tok 1m derived from turnover of 23m and bicc has guaranteed that current year profits will be not less than 1
# ::alignments 19-20|0.0.0.0.1 17-18|0.0.0.0.0.0.0.0 13-14|0.0.0.0 12-13|0.0.0.0.0 11-12|0.0.0.0.0.0 9-10|0.0.0.0.0.0.0 6-7|0 3-4|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:36.202
# ::node	0	and	6-7
# ::node	0.0	turnover	3-4
# ::node	0.0.0	derive-01	1-2
# ::node	0.0.0.0	profit-01	13-14
# ::node	0.0.0.0.0	year	12-13
# ::node	0.0.0.0.0.0	current	11-12
# ::node	0.0.0.0.0.0.0	guarantee-01	9-10
# ::node	0.0.0.0.0.0.0.0	less	17-18
# ::node	0.0.0.0.1	1	19-20
# ::root	0	and
# ::edge	and	op1	turnover	0	0.0	
# ::edge	derive-01	ARG1	profit-01	0.0.0	0.0.0.0	
# ::edge	derive-01	ARG2	turnover	0.0.0	0.0	
# ::edge	guarantee-01	ARG0	less	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	guarantee-01	ARG1	current	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	profit-01	ARG0	year	0.0.0.0	0.0.0.0.0	
# ::edge	profit-01	ARG1	1	0.0.0.0	0.0.0.0.1	
# ::edge	year	mod	current	0.0.0.0.0	0.0.0.0.0.0	
(a / and 
      :op1 (t / turnover 
            :ARG2-of (d / derive-01 
                  :ARG1 (p / profit-01 
                        :ARG0 (y / year 
                              :mod (c / current 
                                    :ARG1-of (g / guarantee-01 
                                          :ARG0 (l / less)))) 
                        :ARG1 1))))

# ::snt rhetorically it was the time of the great horticultural images of education derived perhaps first from rousseau and reinforced by froebel for whom the child was the tender plant growing in the garden the kindergarten
# ::tok rhetorically it was the time of the great horticultural images of education derived perhaps first from rousseau and reinforced by froebel for whom the child was the tender plant growing in the garden the kindergarten
# ::alignments 32-33|0.0.0 29-30|0.0 28-29|0 27-28|0.2 24-25|0.1 18-19|0.0.0.0.0.0.1.0 17-18|0.0.0.0.0.0.1 13-14|0.0.0.0.0.0.0 12-13|0.0.0.0.0.0 11-12|0.0.0.0 9-10|0.0.0.0.0 7-8|0.0.0.0.0.1 4-5|0.0.0.0.0.2 1-2|0.0.0.0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:36.437
# ::node	0	plant	28-29
# ::node	0.0	grow-01	29-30
# ::node	0.0.0	garden	32-33
# ::node	0.0.0.0	educate-01	11-12
# ::node	0.0.0.0.0	image	9-10
# ::node	0.0.0.0.0.0	derive-01	12-13
# ::node	0.0.0.0.0.0.0	perhaps	13-14
# ::node	0.0.0.0.0.0.1	and	17-18
# ::node	0.0.0.0.0.0.1.0	reinforce-01	18-19
# ::node	0.0.0.0.0.1	great	7-8
# ::node	0.0.0.0.0.2	time	4-5
# ::node	0.0.0.0.0.2.0	it	1-2
# ::node	0.1	child	24-25
# ::node	0.2	tender	27-28
# ::root	0	plant
# ::edge	and	op1	derive-01	0.0.0.0.0.0.1	0.0.0.0.0.0	
# ::edge	and	op2	reinforce-01	0.0.0.0.0.0.1	0.0.0.0.0.0.1.0	
# ::edge	child	domain	plant	0.1	0	
# ::edge	derive-01	ARG0	image	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	derive-01	ARG1	perhaps	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	educate-01	ARG1	garden	0.0.0.0	0.0.0	
# ::edge	grow-01	ARG1	plant	0.0	0	
# ::edge	grow-01	ARG2	garden	0.0	0.0.0	
# ::edge	image	mod	great	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	image	topic	educate-01	0.0.0.0.0	0.0.0.0	
# ::edge	plant	mod	tender	0	0.2	
# ::edge	time	domain	it	0.0.0.0.0.2	0.0.0.0.0.2.0	
# ::edge	time	poss	image	0.0.0.0.0.2	0.0.0.0.0	
(p / plant 
      :ARG1-of (g2 / grow-01 
            :ARG2 (g / garden 
                  :ARG1-of (e / educate-01 
                        :topic-of (i / image 
                              :ARG0-of (d / derive-01 
                                    :ARG1 (p2 / perhaps) 
                                    :op-of (a / and 
                                          :op1 (r / reinforce-01))) 
                              :mod (g3 / great) 
                              :poss-of (t2 / time 
                                    :domain (i2 / it)))))) 
      :domain-of (c / child) 
      :mod (t / tender))

# ::snt but he derived pleasure from two activities
# ::tok but he derived pleasure from two activities
# ::alignments 6-7|0.0.1.0 5-6|0.0.1.0.0 3-4|0.0.1 2-3|0.0 1-2|0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:36.452
# ::node	0	contrast-01	0-1
# ::node	0.0	derive-01	2-3
# ::node	0.0.0	he	1-2
# ::node	0.0.1	pleasure	3-4
# ::node	0.0.1.0	activity	6-7
# ::node	0.0.1.0.0	2	5-6
# ::root	0	contrast-01
# ::edge	activity	quant	2	0.0.1.0	0.0.1.0.0	
# ::edge	contrast-01	ARG2	derive-01	0	0.0	
# ::edge	derive-01	ARG0	he	0.0	0.0.0	
# ::edge	derive-01	ARG1	pleasure	0.0	0.0.1	
# ::edge	pleasure	source	activity	0.0.1	0.0.1.0	
(c / contrast-01 
      :ARG2 (d / derive-01 
            :ARG0 (h / he) 
            :ARG1 (p / pleasure 
                  :source (a / activity 
                        :quant 2))))

# ::snt the story of acis and galatea derives from ovid
# ::tok the story of acis and galatea derives from ovid
# ::alignments 4-5|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:36.459
# ::node	0	and	4-5
# ::node	0.0	story	1-2
# ::root	0	and
(a / and 
      :poss-of (s / story))

# ::snt the second consideration derives from the fact that in accepting certain concessions mr krenz has exposed the weaknesses of the east german government
# ::tok the second consideration derives from the fact that in accepting certain concessions mr krenz has exposed the weaknesses of the east german government
# ::alignments 20-21|0.0.1.0 17-18|0.0.0 15-16|0.0 11-12|0.0.1.1 10-11|0.0.1.1.1 9-10|0.0.1 6-7|0.0.1.1.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:36.543
# ::node	0	consider-02	2-3
# ::node	0.0	expose-01	15-16
# ::node	0.0.0	weakness	17-18
# ::node	0.0.1	accept-01	9-10
# ::node	0.0.1.0	east	20-21
# ::node	0.0.1.1	concede-01	11-12
# ::node	0.0.1.1.0	fact	6-7
# ::node	0.0.1.1.1	certain	10-11
# ::root	0	consider-02
(c3 / consider-02 
      :ARG0-of (e2 / expose-01 
            :ARG1 (w / weakness) 
            :manner (a / accept-01 
                  :ARG0 (e / east) 
                  :ARG1 (c / concede-01 
                        :ARG1 (f / fact) 
                        :ARG2 (c2 / certain)))))

# ::snt they lacked the width arsenal derived from nigel winterburns support of brian marwood until the winger was supplanted by paul merson towards the end
# ::tok they lacked the width arsenal derived from nigel winterburns support of brian marwood until the winger was supplanted by paul merson towards the end
# ::alignments 13-14|0.2 9-10|0.1.0.0 5-6|0.1.0 4-5|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:36.593
# ::node	0	lack-01	1-2
# ::node	0.0	they	0-1
# ::node	0.1	arsenal	4-5
# ::node	0.1.0	derive-01	5-6
# ::node	0.1.0.0	support-01	9-10
# ::node	0.2	until	13-14
# ::root	0	lack-01
# ::edge	derive-01	ARG1	arsenal	0.1.0	0.1	
# ::edge	derive-01	ARG2	support-01	0.1.0	0.1.0.0	
# ::edge	lack-01	ARG0	they	0	0.0	
# ::edge	lack-01	ARG1	arsenal	0	0.1	
# ::edge	lack-01	time	until	0	0.2	
(l / lack-01 
      :ARG0 (t / they) 
      :ARG1 (a / arsenal 
            :ARG1-of (d / derive-01 
                  :ARG2 (s / support-01))) 
      :time (u / until))

# ::snt the treatise however derives it in terms of the notion of sympathy from other previously discovered principles such as those of association
# ::tok the treatise however derives it in terms of the notion of sympathy from other previously discovered principles such as those of association
# ::alignments 21-22|0.1 17-18|0.2 16-17|0.0 15-16|0 14-15|0.3 13-14|0.0.0 11-12|0.1.0.0.0.0 9-10|0.1.0.0.0 6-7|0.1.0.0 4-5|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:36.710
# ::node	0	discover-01	15-16
# ::node	0.0	principle	16-17
# ::node	0.0.0	other	13-14
# ::node	0.1	associate-01	21-22
# ::node	0.1.0	it	4-5
# ::node	0.1.0.0	term	6-7
# ::node	0.1.0.0.0	notion	9-10
# ::node	0.1.0.0.0.0	sympathy	11-12
# ::node	0.2	such	17-18
# ::node	0.3	previous	14-15
# ::root	0	discover-01
# ::edge	associate-01	ARG1	it	0.1	0.1.0	
# ::edge	discover-01	ARG1	principle	0	0.0	
# ::edge	discover-01	ARG2	associate-01	0	0.1	
# ::edge	discover-01	time	previous	0	0.3	
# ::edge	it	topic	term	0.1.0	0.1.0.0	
# ::edge	notion	topic	sympathy	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	principle	mod	other	0.0	0.0.0	
# ::edge	such	condition	discover-01	0.2	0	
# ::edge	term	mod	notion	0.1.0.0	0.1.0.0.0	
(d / discover-01 
      :ARG1 (p / principle 
            :mod (o / other)) 
      :ARG2 (a / associate-01 
            :ARG1 (i / it 
                  :topic (t / term 
                        :mod (n / notion 
                              :topic (s2 / sympathy))))) 
      :condition-of (s / such) 
      :time (p2 / previous))

# ::snt nevertheless the sources from which we derive our knowledge of the common law are in writing or print
# ::tok nevertheless the sources from which we derive our knowledge of the common law are in writing or print
# ::alignments 17-18|0 16-17|0.0 15-16|0.0.1 12-13|0.0.0.0.0.0 11-12|0.0.0.0.0.0.0 8-9|0.0.0.0.0 6-7|0.0.0 5-6|0.0.0.0 2-3|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:36.760
# ::node	0	print-01	17-18
# ::node	0.0	or	16-17
# ::node	0.0.0	derive-01	6-7
# ::node	0.0.0.0	we	5-6
# ::node	0.0.0.0.0	knowledge	8-9
# ::node	0.0.0.0.0.0	law	12-13
# ::node	0.0.0.0.0.0.0	common	11-12
# ::node	0.0.0.1	source	2-3
# ::node	0.0.1	write-01	15-16
# ::root	0	print-01
(p / print-01 
      :op-of (o / or 
            :condition-of (d / derive-01 
                  :ARG0 (w2 / we 
                        :poss-of (k / knowledge 
                              :location (l / law 
                                    :mod (c / common)))) 
                  :ARG1 (s / source)) 
            :op1 (w / write-01)))

# ::snt it is necessary for you to take this  kind of positive approach think in terms of maximizing the  number of nutrients that you derive from food by eating the  right kind of balance of different foods during meals
# ::tok it is necessary for you to take this kind of positive approach think in terms of maximizing the number of nutrients that you derive from food by eating the right kind of balance of different foods during meals
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:36.761
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt independant that from that equal creation they derive rights inherent and
# ::tok independant that from that equal creation they derive rights inherent and
# ::alignments 10-11|0.0.0.1 9-10|0.0.1.0 8-9|0.0.1 7-8|0.0 6-7|0.0.0 5-6|0.0.0.0 4-5|0.0.0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:36.833
# ::node	0	independent	0-1
# ::node	0.0	derive-01	7-8
# ::node	0.0.0	they	6-7
# ::node	0.0.0.0	create-01	5-6
# ::node	0.0.0.0.0	equal-01	4-5
# ::node	0.0.0.1	and	10-11
# ::node	0.0.1	right	8-9
# ::node	0.0.1.0	inherent	9-10
# ::root	0	independent
(i2 / independent 
      :condition-of (d / derive-01 
            :ARG0 (t / they 
                  :ARG0-of (c / create-01 
                        :ARG1-of (e / equal-01)) 
                  :poss-of (a / and)) 
            :ARG1 (r / right 
                  :domain-of (i / inherent))))

# ::snt the partners moved they held purely for business reasons and derived no personal benefit from the move which in each case proved financially disadvantageous
# ::tok the partners moved they held purely for business reasons and derived no personal benefit from the move which in each case proved financially disadvantageous
# ::alignments 22-23|0.1 21-22|0 20-21|0.2 19-20|0.2.0 13-14|0.0 12-13|0.0.2 11-12|0.0.1.2 10-11|0.0.1 9-10|0.0.1.1 8-9|0.0.0.0 7-8|0.0.0 5-6|0.0.1.1.0.0 3-4|0.0.1.0 2-3|0.0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:37.050
# ::node	0	prove-01	21-22
# ::node	0.0	benefit-01	13-14
# ::node	0.0.0	business	7-8
# ::node	0.0.0.0	reason	8-9
# ::node	0.0.1	derive-01	10-11
# ::node	0.0.1.0	they	3-4
# ::node	0.0.1.1	and	9-10
# ::node	0.0.1.1.0	move-01	2-3
# ::node	0.0.1.1.0.0	pure	5-6
# ::node	0.0.1.2	-	11-12
# ::node	0.0.2	personal	12-13
# ::node	0.1	finance	22-23
# ::node	0.2	case	20-21
# ::node	0.2.0	each	19-20
# ::root	0	prove-01
# ::edge	and	op1	derive-01	0.0.1.1	0.0.1	
# ::edge	benefit-01	ARG1	business	0.0	0.0.0	
# ::edge	benefit-01	mod	personal	0.0	0.0.2	
# ::edge	case	mod	each	0.2	0.2.0	
# ::edge	derive-01	ARG0	they	0.0.1	0.0.1.0	
# ::edge	derive-01	ARG1	benefit-01	0.0.1	0.0	
# ::edge	derive-01	polarity	-	0.0.1	0.0.1.2	
# ::edge	move-01	ARG0	pure	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	move-01	ARG1	and	0.0.1.1.0	0.0.1.1	
# ::edge	prove-01	ARG0	benefit-01	0	0.0	
# ::edge	prove-01	ARG1	finance	0	0.1	
# ::edge	prove-01	prep-in	case	0	0.2	
# ::edge	reason	mod	business	0.0.0.0	0.0.0	
(p / prove-01 
      :ARG0 (b / benefit-01 
            :ARG1 (b2 / business 
                  :mod-of (r / reason)) 
            :ARG1-of (d / derive-01 
                  :ARG0 (t / they) 
                  :op-of (a / and 
                        :ARG1-of (m / move-01 
                              :ARG0 (p3 / pure))) 
                  :polarity (- / -)) 
            :mod (p2 / personal)) 
      :ARG1 (f / finance) 
      :prep-in (c / case 
            :mod (e / each)))

# ::snt the universe viewed in those prechloroform days was dark and painful and horrible and wherever else the human race derived its image of a loving moral creator it was not from a simple contemplation of nature
# ::tok the universe viewed in those prechloroform days was dark and painful and horrible and wherever else the human race derived its image of a loving moral creator it was not from a simple contemplation of nature
# ::alignments 35-36|0.0.3.2 32-33|0.0.2.1 27-28|0.0.3.2.0 25-26|0.0.3.0.0 24-25|0.0.3.0 21-22|0.0.3.1.1 19-20|0.0.3.1 18-19|0.0.3.1.0 17-18|0.0.3.1.0.0 15-16|0.0.3.1.0.1 14-15|0.0.3.1.2 13-14|0.0.3 12-13|0 11-12|0.0 10-11|0.0.2 9-10|0.0.0 8-9|0.0.1 6-7|0.0.2.0.0+0.0.2.0 2-3|0.0.0.0 1-2|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:37.509
# ::node	0	horrible	12-13
# ::node	0.0	and	11-12
# ::node	0.0.0	and	9-10
# ::node	0.0.0.0	view-02	2-3
# ::node	0.0.0.0.0	universe	1-2
# ::node	0.0.1	dark	8-9
# ::node	0.0.2	pain-01	10-11
# ::node	0.0.2.0	temporal-quantity	6-7
# ::node	0.0.2.0.0	day	6-7
# ::node	0.0.2.1	simple	32-33
# ::node	0.0.3	and	13-14
# ::node	0.0.3.0	love-01	24-25
# ::node	0.0.3.0.0	moral	25-26
# ::node	0.0.3.1	derive-01	19-20
# ::node	0.0.3.1.0	race	18-19
# ::node	0.0.3.1.0.0	human	17-18
# ::node	0.0.3.1.0.1	else	15-16
# ::node	0.0.3.1.1	image	21-22
# ::node	0.0.3.1.2	wherever	14-15
# ::node	0.0.3.2	nature	35-36
# ::node	0.0.3.2.0	it	27-28
# ::root	0	horrible
(h2 / horrible 
      :op-of (a2 / and 
            :op-of (a3 / and 
                  :ARG1-of (v / view-02 
                        :ARG0 (u / universe))) 
            :op1 (d2 / dark) 
            :op2 (p / pain-01 
                  :ARG0 (t / temporal-quantity 
                        :unit (d3 / day)) 
                  :ARG1 (s / simple)) 
            :op3 (a / and 
                  :ARG0-of (l / love-01 
                        :ARG1 (m / moral)) 
                  :op1 (d / derive-01 
                        :ARG0 (r / race 
                              :mod (h / human) 
                              :mod (e / else)) 
                        :ARG1 (i2 / image) 
                        :location (w / wherever)) 
                  :op2 (n / nature 
                        :poss (i / it)))))

# ::snt when a grazing farmer takes his stock off the land to be housed indoors for the winter as is normal he derives  no benefit from the expensive pumping which keeps his neighbours ploughland dry through the winter months
# ::tok when a grazing farmer takes his stock off the land to be housed indoors for the winter as is normal he derives no benefit from the expensive pumping which keeps his neighbours ploughland dry through the winter months
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:37.513
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt short of a transformation of the context from which the competitive necessities derived the process of national centralization had to continue
# ::tok short of a transformation of the context from which the competitive necessities derived the process of national centralization had to continue
# ::alignments 20-21|0.0.0 16-17|0.0.0.0.0.0.0 14-15|0.0 12-13|0 10-11|0.0.0.0.0.0 6-7|0.0.0.0 3-4|0.0.0.0.0 0-1|0.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:37.583
# ::node	0	derive-01	12-13
# ::node	0.0	process	14-15
# ::node	0.0.0	continue-01	20-21
# ::node	0.0.0.0	context	6-7
# ::node	0.0.0.0.0	transform-01	3-4
# ::node	0.0.0.0.0.0	compete-01	10-11
# ::node	0.0.0.0.0.0.0	nation	16-17
# ::node	0.0.0.0.0.1	short	0-1
# ::root	0	derive-01
# ::edge	compete-01	ARG0	nation	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	compete-01	ARG1	transform-01	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	continue-01	ARG0	process	0.0.0	0.0	
# ::edge	continue-01	ARG1	context	0.0.0	0.0.0.0	
# ::edge	derive-01	ARG1	process	0	0.0	
# ::edge	short	compared-to	transform-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	transform-01	ARG1	context	0.0.0.0.0	0.0.0.0	
(d / derive-01 
      :ARG1 (p / process 
            :ARG0-of (c / continue-01 
                  :ARG1 (c3 / context 
                        :ARG1-of (t / transform-01 
                              :ARG1-of (c2 / compete-01 
                                    :ARG0 (n / nation)) 
                              :compared-to-of (s / short))))))

# ::snt   mcgaughey the university graduate from a welltodo kentucky background seems more standoffish even haughty and is clearly sensitive about his nickname shug which was derived from his mother calling him sugar
# ::tok mcgaughey the university graduate from a welltodo kentucky background seems more standoffish even haughty and is clearly sensitive about his nickname shug which was derived from his mother calling him sugar
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:37.584
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt he reiterates that all knowledge is ultimately derived from the senses but explains that this does not mean that it directly comes from it
# ::tok he reiterates that all knowledge is ultimately derived from the senses but explains that this does not mean that it directly comes from it
# ::alignments 23-24|0.2.0 20-21|0.0 19-20|0.2.1.1 17-18|0.2.1 14-15|0.2.1.0 12-13|0.2 11-12|0 10-11|0.1.2 7-8|0.1 6-7|0.1.3 4-5|0.1.1 3-4|0.1.1.0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:37.802
# ::node	0	contrast-01	11-12
# ::node	0.0	direct	20-21
# ::node	0.1	derive-01	7-8
# ::node	0.1.0	he	0-1
# ::node	0.1.1	knowledge	4-5
# ::node	0.1.1.0	all	3-4
# ::node	0.1.2	sense	10-11
# ::node	0.1.3	ultimate	6-7
# ::node	0.2	explain-01	12-13
# ::node	0.2.0	it	23-24
# ::node	0.2.1	mean-01	17-18
# ::node	0.2.1.0	this	14-15
# ::node	0.2.1.1	it	19-20
# ::root	0	contrast-01
# ::edge	contrast-01	ARG0	direct	0	0.0	
# ::edge	contrast-01	ARG1	derive-01	0	0.1	
# ::edge	contrast-01	ARG2	explain-01	0	0.2	
# ::edge	derive-01	ARG0	he	0.1	0.1.0	
# ::edge	derive-01	ARG1	knowledge	0.1	0.1.1	
# ::edge	derive-01	ARG2	sense	0.1	0.1.2	
# ::edge	derive-01	time	ultimate	0.1	0.1.3	
# ::edge	explain-01	ARG0	it	0.2	0.2.0	
# ::edge	explain-01	ARG1	mean-01	0.2	0.2.1	
# ::edge	knowledge	quant	all	0.1.1	0.1.1.0	
# ::edge	mean-01	ARG0	this	0.2.1	0.2.1.0	
# ::edge	mean-01	ARG1	it	0.2.1	0.2.1.1	
(c / contrast-01 
      :ARG0 (d / direct) 
      :ARG1 (d2 / derive-01 
            :ARG0 (h / he) 
            :ARG1 (k / knowledge 
                  :quant (a / all)) 
            :ARG2 (s / sense) 
            :time (u / ultimate)) 
      :ARG2 (e / explain-01 
            :ARG0 (i / it) 
            :ARG1 (m / mean-01 
                  :ARG0 (t / this) 
                  :ARG1 (i2 / it))))

# ::snt once awakened as in religious conversion or falling in love the nationalist finds a new family from which he or she derives pride dignity the opportunity for unimagined courage contact with a supposed eternity and humanity as opposed to the mechanical arrangements of an alien bureaucracy and the market
# ::tok once awakened as in religious conversion or falling in love the nationalist finds a new family from which he or she derives pride dignity the opportunity for unimagined courage contact with a supposed eternity and humanity as opposed to the mechanical arrangements of an alien bureaucracy and the market
# ::alignments 48-49|0.1.1.0.0.1.0 46-47|0.1.1.0.0.1 45-46|0.1.1.0.0.0 41-42|0.1.1.0.0 40-41|0.1.0.0.2.0.0.0.0 37-38|0.1.1.0 35-36|0.1.1 34-35|0.1 33-34|0.0 32-33|0 29-30|0.0.0 28-29|0.0.0.0 27-28|0.0.0.1 25-26|0.1.0.0.0 23-24|0.1.0.0.2.1 22-23|0.1.0.0.2.0.0.0 20-21|0.1.0.0.2.0.0 19-20|0.1.0.0.2.0 18-19|0.1.0.0.2 15-16|0.1.0.0.1 14-15|0.1.0.0.1.0 12-13|0.1.0.0 11-12|0.1.0.1.0.0.0 9-10|0.1.0.1.0 7-8|0.1.0.1.0.0 6-7|0.1.0.1.0.0.1 5-6|0.1.0.1 1-2|0.1.0 0-1|0.1.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:38.676
# ::node	0	suppose-02	32-33
# ::node	0.0	eternity	33-34
# ::node	0.0.0	contact-01	29-30
# ::node	0.0.0.0	courage	28-29
# ::node	0.0.0.1	imagine-01	27-28
# ::node	0.1	and	34-35
# ::node	0.1.0	awaken-01	1-2
# ::node	0.1.0.0	find-01	12-13
# ::node	0.1.0.0.0	opportunity	25-26
# ::node	0.1.0.0.1	family	15-16
# ::node	0.1.0.0.1.0	new	14-15
# ::node	0.1.0.0.2	he	18-19
# ::node	0.1.0.0.2.0	or	19-20
# ::node	0.1.0.0.2.0.0	she	20-21
# ::node	0.1.0.0.2.0.0.0	pride-01	22-23
# ::node	0.1.0.0.2.0.0.0.0	mechanics	40-41
# ::node	0.1.0.0.2.1	dignity	23-24
# ::node	0.1.0.1	convert-01	5-6
# ::node	0.1.0.1.0	love-01	9-10
# ::node	0.1.0.1.0.0	fall-01	7-8
# ::node	0.1.0.1.0.0.0	nationalist	11-12
# ::node	0.1.0.1.0.0.1	or	6-7
# ::node	0.1.0.2	once	0-1
# ::node	0.1.1	humanity	35-36
# ::node	0.1.1.0	oppose-01	37-38
# ::node	0.1.1.0.0	arrange-01	41-42
# ::node	0.1.1.0.0.0	bureaucracy	45-46
# ::node	0.1.1.0.0.1	and	46-47
# ::node	0.1.1.0.0.1.0	market	48-49
# ::root	0	suppose-02
# ::edge	and	op1	market	0.1.1.0.0.1	0.1.1.0.0.1.0	
# ::edge	and	op1	suppose-02	0.1	0	
# ::edge	and	op2	humanity	0.1	0.1.1	
# ::edge	arrange-01	ARG0	bureaucracy	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	arrange-01	ARG1	and	0.1.1.0.0	0.1.1.0.0.1	
# ::edge	awaken-01	ARG0	and	0.1.0	0.1	
# ::edge	awaken-01	ARG1	find-01	0.1.0	0.1.0.0	
# ::edge	awaken-01	purpose	convert-01	0.1.0	0.1.0.1	
# ::edge	awaken-01	time	once	0.1.0	0.1.0.2	
# ::edge	contact-01	ARG0	courage	0.0.0	0.0.0.0	
# ::edge	contact-01	ARG1	eternity	0.0.0	0.0	
# ::edge	convert-01	ARG1	love-01	0.1.0.1	0.1.0.1.0	
# ::edge	dignity	poss	he	0.1.0.0.2.1	0.1.0.0.2	
# ::edge	fall-01	ARG1	nationalist	0.1.0.1.0.0	0.1.0.1.0.0.0	
# ::edge	fall-01	ARG4	love-01	0.1.0.1.0.0	0.1.0.1.0	
# ::edge	family	mod	new	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	find-01	ARG0	opportunity	0.1.0.0	0.1.0.0.0	
# ::edge	find-01	ARG1	family	0.1.0.0	0.1.0.0.1	
# ::edge	find-01	ARG2	he	0.1.0.0	0.1.0.0.2	
# ::edge	imagine-01	ARG1	contact-01	0.0.0.1	0.0.0	
# ::edge	oppose-01	ARG0	humanity	0.1.1.0	0.1.1	
# ::edge	oppose-01	ARG1	arrange-01	0.1.1.0	0.1.1.0.0	
# ::edge	or	op1	fall-01	0.1.0.1.0.0.1	0.1.0.1.0.0	
# ::edge	or	op1	he	0.1.0.0.2.0	0.1.0.0.2	
# ::edge	or	op2	she	0.1.0.0.2.0	0.1.0.0.2.0.0	
# ::edge	pride-01	ARG0	she	0.1.0.0.2.0.0.0	0.1.0.0.2.0.0	
# ::edge	pride-01	ARG1	mechanics	0.1.0.0.2.0.0.0	0.1.0.0.2.0.0.0.0	
# ::edge	suppose-02	ARG1	eternity	0	0.0	
(s / suppose-02 
      :ARG1 (e / eternity 
            :ARG1-of (c / contact-01 
                  :ARG0 (c2 / courage) 
                  :ARG1-of (i / imagine-01))) 
      :op-of (a3 / and 
            :ARG0-of (a4 / awaken-01 
                  :ARG1 (f2 / find-01 
                        :ARG0 (o2 / opportunity) 
                        :ARG1 (f / family 
                              :mod (n / new)) 
                        :ARG2 (h2 / he 
                              :op-of (o3 / or 
                                    :op1 (s2 / she 
                                          :ARG0-of (p / pride-01 
                                                :ARG1 (m2 / mechanics)))) 
                              :poss-of (d / dignity))) 
                  :purpose (c3 / convert-01 
                        :ARG1 (l / love-01 
                              :ARG4-of (f3 / fall-01 
                                    :ARG1 (n2 / nationalist) 
                                    :op-of (o4 / or)))) 
                  :time (o5 / once)) 
            :op1 (h / humanity 
                  :ARG0-of (o / oppose-01 
                        :ARG1 (a2 / arrange-01 
                              :ARG0 (b / bureaucracy) 
                              :ARG1 (a / and 
                                    :op1 (m / market)))))))

# ::snt a few months later on 30 january 1937 he referred briefly to the beneficial effects for german culture which had been derived from the removal of jewish influence and at the opening of the house of german art in munich the following july he again scorned the jewish contribution to the arts
# ::tok a few months later on 30 january 1937 he referred briefly to the beneficial effects for german culture which had been derived from the removal of jewish influence and at the opening of the house of german art in munich the following july he again scorned the jewish contribution to the arts
# ::alignments 51-52|0.1.1 48-49|0.1 47-48|0.1.2.0.0+0.1.2.0+0.1.2 44-45|0.1.3 43-44|0.1.0 42-43|0.0.1.0.0.0.0+0.0.1.0.0.0 37-38|0.0.1.0.0 34-35|0.0.1 31-32|0.0.1.0 28-29|0 27-28|0.0 26-27|0.0.2.0.0+0.0.2.0+0.0.2 24-25|0.0.0 21-22|0.0.0.0 17-18|0.0.0.0.0 14-15|0.0.0.0.0.0 13-14|0.0.0.0.0.0.1 9-10|0.0.0.0.0.0.0 8-9|0.0.0.0.0.0.0.0 5-8|0.0.0.0.0.0.0.2.2+0.0.0.0.0.0.0.2.1+0.0.0.0.0.0.0.2.0+0.0.0.0.0.0.0.2 3-4|0.0.0.0.0.0.0.1 2-3|0.0.0.0.0.0.0.1.1.0+0.0.0.0.0.0.0.1.1 1-2|0.0.0.0.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:39.390
# ::node	0	and	28-29
# ::node	0.0	influence-01	27-28
# ::node	0.0.0	remove-01	24-25
# ::node	0.0.0.0	derive-01	21-22
# ::node	0.0.0.0.0	culture	17-18
# ::node	0.0.0.0.0.0	effect-01	14-15
# ::node	0.0.0.0.0.0.0	refer-01	9-10
# ::node	0.0.0.0.0.0.0.0	he	8-9
# ::node	0.0.0.0.0.0.0.1	late	3-4
# ::node	0.0.0.0.0.0.0.1.0	few	1-2
# ::node	0.0.0.0.0.0.0.1.1	temporal-quantity	2-3
# ::node	0.0.0.0.0.0.0.1.1.0	month	2-3
# ::node	0.0.0.0.0.0.0.2	date-entity	5-8
# ::node	0.0.0.0.0.0.0.2.0	30	5-8
# ::node	0.0.0.0.0.0.0.2.1	1	5-8
# ::node	0.0.0.0.0.0.0.2.2	1937	5-8
# ::node	0.0.0.0.0.0.1	benefit-01	13-14
# ::node	0.0.1	house	34-35
# ::node	0.0.1.0	open-01	31-32
# ::node	0.0.1.0.0	art	37-38
# ::node	0.0.1.0.0.0	date-entity	42-43
# ::node	0.0.1.0.0.0.0	7	42-43
# ::node	0.0.2	ethnic-group	26-27
# ::node	0.0.2.0	name	26-27
# ::node	0.0.2.0.0	"Jew"	26-27
# ::node	0.1	contribute-01	48-49
# ::node	0.1.0	he	43-44
# ::node	0.1.1	art	51-52
# ::node	0.1.2	ethnic-group	47-48
# ::node	0.1.2.0	name	47-48
# ::node	0.1.2.0.0	"Jew"	47-48
# ::node	0.1.3	again	44-45
# ::root	0	and
# ::edge	and	op1	influence-01	0	0.0	
# ::edge	and	op2	contribute-01	0	0.1	
# ::edge	art	time	date-entity	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	benefit-01	ARG1	effect-01	0.0.0.0.0.0.1	0.0.0.0.0.0	
# ::edge	contribute-01	ARG0	he	0.1	0.1.0	
# ::edge	contribute-01	ARG1	art	0.1	0.1.1	
# ::edge	contribute-01	mod	again	0.1	0.1.3	
# ::edge	contribute-01	mod	ethnic-group	0.1	0.1.2	
# ::edge	date-entity	day	30	0.0.0.0.0.0.0.2	0.0.0.0.0.0.0.2.0	
# ::edge	date-entity	month	1	0.0.0.0.0.0.0.2	0.0.0.0.0.0.0.2.1	
# ::edge	date-entity	month	7	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	date-entity	year	1937	0.0.0.0.0.0.0.2	0.0.0.0.0.0.0.2.2	
# ::edge	derive-01	ARG1	culture	0.0.0.0	0.0.0.0.0	
# ::edge	derive-01	ARG2	remove-01	0.0.0.0	0.0.0	
# ::edge	effect-01	ARG0	culture	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	ethnic-group	name	name	0.0.2	0.0.2.0	
# ::edge	ethnic-group	name	name	0.1.2	0.1.2.0	
# ::edge	influence-01	location	house	0.0	0.0.1	
# ::edge	influence-01	mod	ethnic-group	0.0	0.0.2	
# ::edge	late	op1	few	0.0.0.0.0.0.0.1	0.0.0.0.0.0.0.1.0	
# ::edge	late	op2	temporal-quantity	0.0.0.0.0.0.0.1	0.0.0.0.0.0.0.1.1	
# ::edge	name	op1	"Jew"	0.0.2.0	0.0.2.0.0	
# ::edge	name	op1	"Jew"	0.1.2.0	0.1.2.0.0	
# ::edge	open-01	ARG1	house	0.0.1.0	0.0.1	
# ::edge	open-01	ARG2	art	0.0.1.0	0.0.1.0.0	
# ::edge	refer-01	ARG0	he	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	refer-01	ARG1	effect-01	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	refer-01	time	date-entity	0.0.0.0.0.0.0	0.0.0.0.0.0.0.2	
# ::edge	refer-01	time	late	0.0.0.0.0.0.0	0.0.0.0.0.0.0.1	
# ::edge	remove-01	ARG1	influence-01	0.0.0	0.0	
# ::edge	temporal-quantity	unit	month	0.0.0.0.0.0.0.1.1	0.0.0.0.0.0.0.1.1.0	
(a4 / and 
      :op1 (i / influence-01 
            :ARG1-of (r / remove-01 
                  :ARG2-of (d2 / derive-01 
                        :ARG1 (c2 / culture 
                              :ARG0-of (e3 / effect-01 
                                    :ARG1-of (r2 / refer-01 
                                          :ARG0 (h3 / he) 
                                          :time (l / late 
                                                :op1 (f / few) 
                                                :op2 (t / temporal-quantity 
                                                      :unit (m / month))) 
                                          :time (d3 / date-entity 
                                                :day 30 
                                                :month 1 
                                                :year 1937)) 
                                    :ARG1-of (b / benefit-01))))) 
            :location (h2 / house 
                  :ARG1-of (o / open-01 
                        :ARG2 (a3 / art 
                              :time (d / date-entity 
                                    :month 7)))) 
            :mod (e2 / ethnic-group 
                  :name (n2 / name 
                        :op1 "Jew"))) 
      :op2 (c / contribute-01 
            :ARG0 (h / he) 
            :ARG1 (a / art) 
            :mod (e / ethnic-group 
                  :name (n / name 
                        :op1 "Jew")) 
            :mod (a2 / again)))

# ::snt mr lawson can also derive comfort from the industrial production figures which showed manufacturing still growing strongly
# ::tok mr lawson can also derive comfort from the industrial production figures which showed manufacturing still growing strongly
# ::alignments 16-17|0.0.1.0.1.0 15-16|0.0.1.0.1 14-15|0.0.1.0.1.1 13-14|0.0.1.0.0 12-13|0.0.1.0 10-11|0.0.1 9-10|0.0.1.1 8-9|0.0.1.1.0 5-6|0.0.0 4-5|0.0 3-4|0.0.2 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:39.541
# ::node	0	possible	2-3
# ::node	0.0	derive-01	4-5
# ::node	0.0.0	comfort-01	5-6
# ::node	0.0.1	figure	10-11
# ::node	0.0.1.0	show-01	12-13
# ::node	0.0.1.0.0	manufacture-01	13-14
# ::node	0.0.1.0.1	grow-01	15-16
# ::node	0.0.1.0.1.0	strong	16-17
# ::node	0.0.1.0.1.1	still	14-15
# ::node	0.0.1.1	produce-01	9-10
# ::node	0.0.1.1.0	industry	8-9
# ::node	0.0.2	also	3-4
# ::root	0	possible
# ::edge	derive-01	ARG1	comfort-01	0.0	0.0.0	
# ::edge	derive-01	ARG2	figure	0.0	0.0.1	
# ::edge	derive-01	mod	also	0.0	0.0.2	
# ::edge	figure	mod	produce-01	0.0.1	0.0.1.1	
# ::edge	grow-01	ARG1	strong	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	grow-01	mod	still	0.0.1.0.1	0.0.1.0.1.1	
# ::edge	possible	domain	derive-01	0	0.0	
# ::edge	produce-01	ARG0	industry	0.0.1.1	0.0.1.1.0	
# ::edge	show-01	ARG0	figure	0.0.1.0	0.0.1	
# ::edge	show-01	ARG1	manufacture-01	0.0.1.0	0.0.1.0.0	
# ::edge	show-01	ARG2	grow-01	0.0.1.0	0.0.1.0.1	
(p2 / possible 
      :domain (d / derive-01 
            :ARG1 (c / comfort-01) 
            :ARG2 (f / figure 
                  :ARG0-of (s3 / show-01 
                        :ARG1 (m / manufacture-01) 
                        :ARG2 (g / grow-01 
                              :ARG1 (s / strong) 
                              :mod (s2 / still))) 
                  :mod (p / produce-01 
                        :ARG0 (i / industry))) 
            :mod (a / also)))

# ::snt in the present case his lordship was not persuaded that the source of the jockey clubs powers could properly be regarded as derived from the prerogative even though it had been set up under a royal charter
# ::tok in the present case his lordship was not persuaded that the source of the jockey clubs powers could properly be regarded as derived from the prerogative even though it had been set up under a royal charter
# ::alignments 36-37|0.0 35-36|0 28-29|0.0.0 25-26|0.0.0.0.1 22-23|0.0.0.0 20-21|0.0.0.0.2.1 18-19|0.0.0.0.2.1.1 17-18|0.0.0.0.2 16-17|0.0.0.0.0 15-16|0.0.0.0.0.0 11-12|0.0.0.0.2.1.0 8-9|0.0.0.0.2.0 3-4|0.0.0.0.2.0.0 2-3|0.0.0.0.2.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:39.653
# ::node	0	royal	35-36
# ::node	0.0	charter-01	36-37
# ::node	0.0.0	it	28-29
# ::node	0.0.0.0	derive-01	22-23
# ::node	0.0.0.0.0	power	16-17
# ::node	0.0.0.0.0.0	club	15-16
# ::node	0.0.0.0.1	prerogative	25-26
# ::node	0.0.0.0.2	possible	17-18
# ::node	0.0.0.0.2.0	persuade-01	8-9
# ::node	0.0.0.0.2.0.0	case	3-4
# ::node	0.0.0.0.2.0.0.0	present	2-3
# ::node	0.0.0.0.2.1	regard-01	20-21
# ::node	0.0.0.0.2.1.0	source	11-12
# ::node	0.0.0.0.2.1.1	proper	18-19
# ::root	0	royal
(r / royal 
      :mod-of (c / charter-01 
            :ARG0 (i / it 
                  :ARG1-of (d / derive-01 
                        :ARG0 (p4 / power 
                              :mod (c2 / club)) 
                        :ARG2 (p / prerogative) 
                        :condition-of (p3 / possible 
                              :ARG1-of (p5 / persuade-01 
                                    :time (c3 / case 
                                          :time (p6 / present))) 
                              :domain (r2 / regard-01 
                                    :ARG1 (s / source) 
                                    :manner (p2 / proper)))))))

# ::snt a good third of the stock of any hardware retail shop in nairobi is now derived from this source
# ::tok a good third of the stock of any hardware retail shop in nairobi is now derived from this source
# ::alignments 18-19|0.2 17-18|0.2.0 15-16|0 14-15|0.3 10-11|0.0 9-10|0.0.1 8-9|0.0.1.0 7-8|0.0.0 5-6|0.1 1-2|0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:39.708
# ::node	0	derive-01	15-16
# ::node	0.0	shop	10-11
# ::node	0.0.0	any	7-8
# ::node	0.0.1	retail-01	9-10
# ::node	0.0.1.0	hardware	8-9
# ::node	0.0.1.1	good	1-2
# ::node	0.1	stock	5-6
# ::node	0.2	source	18-19
# ::node	0.2.0	this	17-18
# ::node	0.3	now	14-15
# ::root	0	derive-01
# ::edge	derive-01	ARG0	shop	0	0.0	
# ::edge	derive-01	ARG1	stock	0	0.1	
# ::edge	derive-01	ARG2	source	0	0.2	
# ::edge	derive-01	time	now	0	0.3	
# ::edge	retail-01	ARG0	hardware	0.0.1	0.0.1.0	
# ::edge	retail-01	ARG1	good	0.0.1	0.0.1.1	
# ::edge	shop	mod	any	0.0	0.0.0	
# ::edge	shop	mod	retail-01	0.0	0.0.1	
# ::edge	source	mod	this	0.2	0.2.0	
(d / derive-01 
      :ARG0 (s2 / shop 
            :mod (a / any) 
            :mod (r / retail-01 
                  :ARG0 (h / hardware) 
                  :ARG1 (g / good))) 
      :ARG1 (s3 / stock) 
      :ARG2 (s / source 
            :mod (t / this)) 
      :time (n / now))

# ::snt failures in the application of functionalism have derived from an incorrect definition of live in
# ::tok failures in the application of functionalism have derived from an incorrect definition of live in
# ::alignments 13-14|0.1.0 11-12|0.1 10-11|0.1.1.0+0.1.1 7-8|0 3-4|0.0.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:39.732
# ::node	0	derive-01	7-8
# ::node	0.0	fail-01	0-1
# ::node	0.0.0	apply-01	3-4
# ::node	0.1	define-01	11-12
# ::node	0.1.0	live-01	13-14
# ::node	0.1.1	correct	10-11
# ::node	0.1.1.0	-	10-11
# ::root	0	derive-01
# ::edge	correct	polarity	-	0.1.1	0.1.1.0	
# ::edge	define-01	mod	correct	0.1	0.1.1	
# ::edge	derive-01	ARG1	fail-01	0	0.0	
# ::edge	derive-01	ARG2	define-01	0	0.1	
# ::edge	fail-01	ARG1	apply-01	0.0	0.0.0	
# ::edge	live-01	ARG1	define-01	0.1.0	0.1	
(d2 / derive-01 
      :ARG1 (f / fail-01 
            :ARG1 (a / apply-01)) 
      :ARG2 (d / define-01 
            :ARG1-of (l / live-01) 
            :mod (c / correct 
                  :polarity -)))

# ::snt among the many constraints on africas attempts at industrialization the factors deriving from africas precolonial social structure must be deemed among the most important
# ::tok among the many constraints on africas attempts at industrialization the factors deriving from africas precolonial social structure must be deemed among the most important
# ::alignments 23-24|0.0.0.2 22-23|0.0.0.2.0 20-21|0.0.0.1 19-20|0.0.0 16-17|0.0.0.0 15-16|0.0.0.0.0 10-11|0.0 6-7|0 3-4|0.1 2-3|0.1.0.0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:39.860
# ::node	0	attempt-01	6-7
# ::node	0.0	factor	10-11
# ::node	0.0.0	deem-01	19-20
# ::node	0.0.0.0	structure	16-17
# ::node	0.0.0.0.0	society	15-16
# ::node	0.0.0.1	among	20-21
# ::node	0.0.0.2	important	23-24
# ::node	0.0.0.2.0	most	22-23
# ::node	0.1	constrain-01	3-4
# ::node	0.1.0	among	0-1
# ::node	0.1.0.0	many	2-3
# ::root	0	attempt-01
# ::edge	among	op1	many	0.1.0	0.1.0.0	
# ::edge	among	op2	constrain-01	0.1.0	0.1	
# ::edge	attempt-01	ARG0	factor	0	0.0	
# ::edge	attempt-01	medium	constrain-01	0	0.1	
# ::edge	deem-01	ARG0	factor	0.0.0	0.0	
# ::edge	deem-01	ARG1	structure	0.0.0	0.0.0.0	
# ::edge	deem-01	location	among	0.0.0	0.0.0.1	
# ::edge	deem-01	manner	important	0.0.0	0.0.0.2	
# ::edge	important	degree	most	0.0.0.2	0.0.0.2.0	
# ::edge	structure	mod	society	0.0.0.0	0.0.0.0.0	
(a2 / attempt-01 
      :ARG0 (f / factor 
            :ARG0-of (d / deem-01 
                  :ARG1 (s / structure 
                        :mod (s2 / society)) 
                  :location (a / among) 
                  :manner (i / important 
                        :degree (m / most)))) 
      :medium (c / constrain-01 
            :op-of (a3 / among 
                  :op1 (m2 / many))))

# ::snt when it is discovered that the poison is derived from the yew tree police attention is turned to the family home a sombre house called yew tree lodge deep in the home counties golf and commuter belt
# ::tok when it is discovered that the poison is derived from the yew tree police attention is turned to the family home a sombre house called yew tree lodge deep in the home counties golf and commuter belt
# ::alignments 36-37|0.2 34-35|0 33-34|0.1 32-33|0.1.0 31-32|0.1.1 28-29|0.0.1 27-28|0.0 26-27|0.0.2 23-24|0.1.1.0.0.0.0 20-21|0.0.0 19-20|0.0.0.0 14-15|0.1.1.0.2.0 13-14|0.1.1.0.2 12-13|0.1.1.0.1 8-9|0.1.1.0 3-4|0.1.1.0.0.0 1-2|0.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:40.157
# ::node	0	and	34-35
# ::node	0.0	lodge	27-28
# ::node	0.0.0	home	20-21
# ::node	0.0.0.0	family	19-20
# ::node	0.0.1	deep	28-29
# ::node	0.0.2	tree	26-27
# ::node	0.1	golf	33-34
# ::node	0.1.0	county	32-33
# ::node	0.1.1	home	31-32
# ::node	0.1.1.0	derive-01	8-9
# ::node	0.1.1.0.0	it	1-2
# ::node	0.1.1.0.0.0	discover-01	3-4
# ::node	0.1.1.0.0.0.0	house	23-24
# ::node	0.1.1.0.1	tree	12-13
# ::node	0.1.1.0.2	police	13-14
# ::node	0.1.1.0.2.0	attention	14-15
# ::node	0.2	belt	36-37
# ::root	0	and
# ::edge	and	op1	golf	0	0.1	
# ::edge	and	op2	belt	0	0.2	
# ::edge	attention	mod	police	0.1.1.0.2.0	0.1.1.0.2	
# ::edge	derive-01	ARG0	home	0.1.1.0	0.1.1	
# ::edge	derive-01	ARG1	it	0.1.1.0	0.1.1.0.0	
# ::edge	derive-01	ARG2	tree	0.1.1.0	0.1.1.0.1	
# ::edge	derive-01	location	police	0.1.1.0	0.1.1.0.2	
# ::edge	discover-01	ARG0	house	0.1.1.0.0.0	0.1.1.0.0.0.0	
# ::edge	discover-01	ARG1	it	0.1.1.0.0.0	0.1.1.0.0	
# ::edge	golf	mod	county	0.1	0.1.0	
# ::edge	golf	mod	home	0.1	0.1.1	
# ::edge	home	mod	family	0.0.0	0.0.0.0	
# ::edge	lodge	location	and	0.0	0	
# ::edge	lodge	location	home	0.0	0.0.0	
# ::edge	lodge	manner	deep	0.0	0.0.1	
# ::edge	lodge	mod	tree	0.0	0.0.2	
(a / and 
      :location-of (l / lodge 
            :location (h3 / home 
                  :mod (f / family)) 
            :manner (d / deep) 
            :mod (t / tree)) 
      :op1 (g / golf 
            :mod (c / county) 
            :mod (h / home 
                  :ARG0-of (d2 / derive-01 
                        :ARG1 (i / it 
                              :ARG1-of (d3 / discover-01 
                                    :ARG0 (h2 / house))) 
                        :ARG2 (t2 / tree) 
                        :location (p / police 
                              :mod-of (a2 / attention))))) 
      :op2 (b / belt))

# ::snt lyonaise has interests in waste management health care energy and leisure although it still derives 50 per cent of its profits at ffr726 million 73 million in 1989 from its water activities
# ::tok lyonaise has interests in waste management health care energy and leisure although it still derives 50 per cent of its profits at ffr726 million 73 million in 1989 from its water activities
# ::alignments 31-32|0.1 30-31|0.1.0 27-28|0.2.2.0.0+0.2.2.0 24-25|0.2.2.1.1 20-21|0 17-18|0.3+0.3.0 15-16|0.2.2.1.0 13-14|0.1.0.0 12-13|0.0 9-10|0.2.0.0.0 8-9|0.2.0 7-8|0.2 6-7|0.2.1 5-6|0.2.2 4-5|0.2.2.1 2-3|0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:40.432
# ::node	0	profit-01	20-21
# ::node	0.0	it	12-13
# ::node	0.1	activity	31-32
# ::node	0.1.0	water	30-31
# ::node	0.1.0.0	still	13-14
# ::node	0.2	care-01	7-8
# ::node	0.2.0	energy	8-9
# ::node	0.2.0.0	interest	2-3
# ::node	0.2.0.0.0	and	9-10
# ::node	0.2.1	health	6-7
# ::node	0.2.2	manage-01	5-6
# ::node	0.2.2.0	date-entity	27-28
# ::node	0.2.2.0.0	1989	27-28
# ::node	0.2.2.1	waste-01	4-5
# ::node	0.2.2.1.0	50	15-16
# ::node	0.2.2.1.1	73	24-25
# ::node	0.3	cent	17-18
# ::node	0.3.0	monetary-quantity	17-18
# ::root	0	profit-01
# ::edge	73	op1	waste-01	0.2.2.1.1	0.2.2.1	
# ::edge	activity	mod	water	0.1	0.1.0	
# ::edge	and	op1	interest	0.2.0.0.0	0.2.0.0	
# ::edge	care-01	ARG0	energy	0.2	0.2.0	
# ::edge	care-01	ARG1	health	0.2	0.2.1	
# ::edge	care-01	ARG2	profit-01	0.2	0	
# ::edge	care-01	ARG3	manage-01	0.2	0.2.2	
# ::edge	cent	op1	profit-01	0.3	0	
# ::edge	date-entity	year	1989	0.2.2.0	0.2.2.0.0	
# ::edge	interest	poss	energy	0.2.0.0	0.2.0	
# ::edge	manage-01	ARG0	date-entity	0.2.2	0.2.2.0	
# ::edge	manage-01	mod	waste-01	0.2.2	0.2.2.1	
# ::edge	monetary-quantity	unit	cent	0.3.0	0.3	
# ::edge	profit-01	ARG0	it	0	0.0	
# ::edge	profit-01	ARG1	activity	0	0.1	
# ::edge	waste-01	ARG0	50	0.2.2.1	0.2.2.1.0	
# ::edge	water	mod	still	0.1.0	0.1.0.0	
(p / profit-01 
      :ARG0 (i / it) 
      :ARG1 (a / activity 
            :mod (w / water 
                  :mod (s / still))) 
      :ARG2-of (c2 / care-01 
            :ARG0 (e / energy 
                  :poss-of (i2 / interest 
                        :op-of (a2 / and))) 
            :ARG1 (h / health) 
            :ARG3 (m2 / manage-01 
                  :ARG0 (d / date-entity 
                        :year 1989) 
                  :mod (w2 / waste-01 
                        :ARG0 50 
                        :op-of 73))) 
      :op-of (c / cent 
            :unit-of (m / monetary-quantity)))

# ::snt dramatic genius has taken a forward step here is the suggestion of a new technique the telling of one mans story for the dramatic values to be derived from the man himself as well as those arising from the story and from the reactions of the chorus
# ::tok dramatic genius has taken a forward step here is the suggestion of a new technique the telling of one mans story for the dramatic values to be derived from the man himself as well as those arising from the story and from the reactions of the chorus
# ::alignments 43-44|0.2.1 40-41|0.2 39-40|0.2.0 33-34|0.2.1.0 30-31|0.1.0.0 27-28|0.1.0 24-25|0.1.0.1 23-24|0.1.0.1.0 20-21|0.1 16-17|0 14-15|0.0 13-14|0.0.1 10-11|0.0.0+0.0.0.0 7-8|0.0.0.1 5-6|0.1.0.2 1-2|0.3.0 0-1|0.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:41.057
# ::node	0	tell-01	16-17
# ::node	0.0	technique	14-15
# ::node	0.0.0	suggest-01	10-11
# ::node	0.0.0.0	thing	10-11
# ::node	0.0.0.1	here	7-8
# ::node	0.0.1	new	13-14
# ::node	0.1	story	20-21
# ::node	0.1.0	derive-01	27-28
# ::node	0.1.0.0	man	30-31
# ::node	0.1.0.1	value	24-25
# ::node	0.1.0.1.0	dramatic	23-24
# ::node	0.1.0.2	forward	5-6
# ::node	0.2	and	40-41
# ::node	0.2.0	story	39-40
# ::node	0.2.1	react-01	43-44
# ::node	0.2.1.0	well	33-34
# ::node	0.3	dramatic	0-1
# ::node	0.3.0	genius	1-2
# ::root	0	tell-01
# ::edge	and	op1	story	0.2	0.2.0	
# ::edge	and	op2	react-01	0.2	0.2.1	
# ::edge	derive-01	ARG0	man	0.1.0	0.1.0.0	
# ::edge	derive-01	ARG1	story	0.1.0	0.1	
# ::edge	derive-01	ARG2	value	0.1.0	0.1.0.1	
# ::edge	dramatic	op1	tell-01	0.3	0	
# ::edge	forward	op1	derive-01	0.1.0.2	0.1.0	
# ::edge	genius	mod	dramatic	0.3.0	0.3	
# ::edge	react-01	ARG1	well	0.2.1	0.2.1.0	
# ::edge	suggest-01	ARG0	technique	0.0.0	0.0	
# ::edge	suggest-01	ARG1	thing	0.0.0	0.0.0.0	
# ::edge	suggest-01	location	here	0.0.0	0.0.0.1	
# ::edge	technique	mod	new	0.0	0.0.1	
# ::edge	tell-01	ARG0	technique	0	0.0	
# ::edge	tell-01	ARG1	story	0	0.1	
# ::edge	tell-01	ARG2	and	0	0.2	
# ::edge	value	mod	dramatic	0.1.0.1	0.1.0.1.0	
(t / tell-01 
      :ARG0 (t2 / technique 
            :ARG0-of (s3 / suggest-01 
                  :ARG1 (t3 / thing) 
                  :location (h / here)) 
            :mod (n / new)) 
      :ARG1 (s2 / story 
            :ARG1-of (d / derive-01 
                  :ARG0 (m / man) 
                  :ARG2 (v / value 
                        :mod (d2 / dramatic)) 
                  :op-of (f / forward))) 
      :ARG2 (a / and 
            :op1 (s / story) 
            :op2 (r / react-01 
                  :ARG1 (w / well))) 
      :op-of (d3 / dramatic 
            :mod-of (g / genius)))

# ::snt his interest in the celtic nations derives from his father who was educated at glasgow university and his uncle who was a gp in edinburgh
# ::tok his interest in the celtic nations derives from his father who was educated at glasgow university and his uncle who was a gp in edinburgh
# ::alignments 18-19|0.0.0.0.0.0.0.0.0+0.0.0.0.0.0.0.0 16-17|0.0.0.0.0.0 15-16|0.0.0.0.0.0.0 12-13|0.0.0.0.0 9-10|0.0.0+0.0.0.0 5-6|0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:41.113
# ::node	0	interest-01	1-2
# ::node	0.0	nation	5-6
# ::node	0.0.0	father	9-10
# ::node	0.0.0.0	have-rel-role-91	9-10
# ::node	0.0.0.0.0	educate-01	12-13
# ::node	0.0.0.0.0.0	and	16-17
# ::node	0.0.0.0.0.0.0	university	15-16
# ::node	0.0.0.0.0.0.0.0	have-rel-role-91	18-19
# ::node	0.0.0.0.0.0.0.0.0	uncle	18-19
# ::root	0	interest-01
# ::edge	and	op1	educate-01	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	and	op2	university	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	educate-01	ARG1	have-rel-role-91	0.0.0.0.0	0.0.0.0	
# ::edge	father	poss	nation	0.0.0	0.0	
# ::edge	have-rel-role-91	ARG1	university	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	have-rel-role-91	ARG2	father	0.0.0.0	0.0.0	
# ::edge	have-rel-role-91	ARG2	uncle	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0	
# ::edge	interest-01	ARG1	nation	0	0.0	
(i / interest-01 
      :ARG1 (n / nation 
            :poss-of (f / father 
                  :ARG2-of (h2 / have-rel-role-91 
                        :ARG1-of (e / educate-01 
                              :op-of (a / and 
                                    :op1 (u2 / university 
                                          :ARG1-of (h / have-rel-role-91 
                                                :ARG2 (u / uncle)))))))))

# ::snt the french speak a language derived from that small group of speakers of latin who conquered gaul at the beginning of the first millennium ad although they suppose they are descended more from the gauls than the romans
# ::tok the french speak a language derived from that small group of speakers of latin who conquered gaul at the beginning of the first millennium ad although they suppose they are descended more from the gauls than the romans
# ::alignments 28-29|0.0.0.1.0 27-28|0 26-27|0.0 19-20|0.0.0.1 15-16|0.0.0 9-10|0.0.0.0.0.0.0.0 8-9|0.0.0.0.0.0.0.0.0 5-6|0.0.0.0.0.0.0 4-5|0.0.0.0.0.0 2-3|0.0.0.0.0 1-2|0.0.0.0.1.0+0.0.0.0.1+0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:41.248
# ::node	0	suppose-01	27-28
# ::node	0.0	they	26-27
# ::node	0.0.0	conquer-01	15-16
# ::node	0.0.0.0	country	1-2
# ::node	0.0.0.0.0	speak-01	2-3
# ::node	0.0.0.0.0.0	language	4-5
# ::node	0.0.0.0.0.0.0	derive-01	5-6
# ::node	0.0.0.0.0.0.0.0	group	9-10
# ::node	0.0.0.0.0.0.0.0.0	small	8-9
# ::node	0.0.0.0.1	name	1-2
# ::node	0.0.0.0.1.0	"France"	1-2
# ::node	0.0.0.1	begin-01	19-20
# ::node	0.0.0.1.0	they	28-29
# ::root	0	suppose-01
# ::edge	begin-01	ARG0	they	0.0.0.1	0.0.0.1.0	
# ::edge	conquer-01	ARG0	they	0.0.0	0.0	
# ::edge	conquer-01	ARG1	country	0.0.0	0.0.0.0	
# ::edge	conquer-01	time	begin-01	0.0.0	0.0.0.1	
# ::edge	country	name	name	0.0.0.0	0.0.0.0.1	
# ::edge	derive-01	ARG0	group	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	derive-01	ARG1	language	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	group	mod	small	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0	
# ::edge	name	op1	"France"	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	speak-01	ARG0	country	0.0.0.0.0	0.0.0.0	
# ::edge	speak-01	ARG1	language	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	suppose-01	ARG0	they	0	0.0	
(s / suppose-01 
      :ARG0 (t2 / they 
            :ARG0-of (c / conquer-01 
                  :ARG1 (c2 / country 
                        :ARG0-of (s3 / speak-01 
                              :ARG1 (l / language 
                                    :ARG1-of (d / derive-01 
                                          :ARG0 (g / group 
                                                :mod (s2 / small))))) 
                        :name (n / name 
                              :op1 "France")) 
                  :time (b / begin-01 
                        :ARG0 (t / they)))))

# ::snt only 1012 per cent of marmitebovrils approximately 35m in annual sales is derived from uk markets according to cpc
# ::tok only 1012 per cent of marmitebovrils approximately 35m in annual sales is derived from uk markets according to cpc
# ::alignments 15-16|0.2 12-13|0 6-7|0.1.0 3-4|0.1.1+0.1 1-2|0.1.0.0.0+0.1.0.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:41.290
# ::node	0	derive-01	12-13
# ::node	0.0	only	0-1
# ::node	0.1	monetary-quantity	3-4
# ::node	0.1.0	approximately	6-7
# ::node	0.1.0.0	date-entity	1-2
# ::node	0.1.0.0.0	1012	1-2
# ::node	0.1.1	cent	3-4
# ::node	0.2	market	15-16
# ::root	0	derive-01
# ::edge	approximately	op1	date-entity	0.1.0	0.1.0.0	
# ::edge	approximately	op2	monetary-quantity	0.1.0	0.1	
# ::edge	date-entity	year	1012	0.1.0.0	0.1.0.0.0	
# ::edge	derive-01	ARG0	only	0	0.0	
# ::edge	derive-01	ARG1	monetary-quantity	0	0.1	
# ::edge	derive-01	ARG2	market	0	0.2	
# ::edge	monetary-quantity	unit	cent	0.1	0.1.1	
(d / derive-01 
      :ARG0 (o / only) 
      :ARG1 (m2 / monetary-quantity 
            :op-of (a / approximately 
                  :op1 (d2 / date-entity 
                        :year 1012)) 
            :unit (c / cent)) 
      :ARG2 (m / market))

# ::snt green gardeners are concerned with preventing damage to the environment so they use less powerful deterrents many derived from plants
# ::tok green gardeners are concerned with preventing damage to the environment so they use less powerful deterrents many derived from plants
# ::alignments 19-20|0.0.0.1 17-18|0.0.0 16-17|0.0.0.0 14-15|0.0.1.0.0 13-14|0.0.1.0 12-13|0.0.1 11-12|0.0 10-11|0.0.1.1 9-10|0.1.0.0 6-7|0.1.0 5-6|0.1 3-4|0 0-1|0.0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:41.442
# ::node	0	concern-01	3-4
# ::node	0.0	they	11-12
# ::node	0.0.0	derive-01	17-18
# ::node	0.0.0.0	many	16-17
# ::node	0.0.0.1	plant	19-20
# ::node	0.0.0.2	green	0-1
# ::node	0.0.1	use-01	12-13
# ::node	0.0.1.0	less	13-14
# ::node	0.0.1.0.0	powerful	14-15
# ::node	0.0.1.1	so	10-11
# ::node	0.1	prevent-01	5-6
# ::node	0.1.0	damage-01	6-7
# ::node	0.1.0.0	environment	9-10
# ::root	0	concern-01
# ::edge	concern-01	ARG1	they	0	0.0	
# ::edge	concern-01	ARG2	prevent-01	0	0.1	
# ::edge	damage-01	ARG1	environment	0.1.0	0.1.0.0	
# ::edge	derive-01	ARG0	they	0.0.0	0.0	
# ::edge	derive-01	ARG1	many	0.0.0	0.0.0.0	
# ::edge	derive-01	ARG2	plant	0.0.0	0.0.0.1	
# ::edge	green	op1	derive-01	0.0.0.2	0.0.0	
# ::edge	powerful	degree	less	0.0.1.0.0	0.0.1.0	
# ::edge	prevent-01	ARG1	damage-01	0.1	0.1.0	
# ::edge	so	op1	use-01	0.0.1.1	0.0.1	
# ::edge	use-01	ARG0	they	0.0.1	0.0	
# ::edge	use-01	ARG1	less	0.0.1	0.0.1.0	
(c / concern-01 
      :ARG1 (t / they 
            :ARG0-of (d / derive-01 
                  :ARG1 (m / many) 
                  :ARG2 (p / plant) 
                  :op-of (g / green)) 
            :ARG0-of (u / use-01 
                  :ARG1 (l / less 
                        :degree-of (p2 / powerful)) 
                  :op-of (s / so))) 
      :ARG2 (p3 / prevent-01 
            :ARG1 (d2 / damage-01 
                  :ARG1 (e / environment))))

# ::snt since it was generally associated with the corpuscular theory of matter it was a common idea in lockes time though its details and the arguments from which it was derived were not always the same
# ::tok since it was generally associated with the corpuscular theory of matter it was a common idea in lockes time though its details and the arguments from which it was derived were not always the same
# ::alignments 34-35|0.1.0 32-33|0.1.0.1 29-30|0.0.0 27-28|0.0 24-25|0 22-23|0.1 21-22|0.1.1 18-19|0.1.0.0.1.1 15-16|0.1.0.0.1 14-15|0.1.0.0.1.0 11-12|0.1.0.0 10-11|0.1.0.0.0 8-9|0.1.0.0.0.0 4-5|0.1.0.0.0.0.0 3-4|0.1.0.0.0.0.0.1 1-2|0.1.0.0.0.0.0.0 0-1|0.1.0.0.0.0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:41.592
# ::node	0	argue-01	24-25
# ::node	0.0	it	27-28
# ::node	0.0.0	derive-01	29-30
# ::node	0.1	and	22-23
# ::node	0.1.0	same-41	34-35
# ::node	0.1.0.0	it	11-12
# ::node	0.1.0.0.0	matter	10-11
# ::node	0.1.0.0.0.0	theory	8-9
# ::node	0.1.0.0.0.0.0	associate-01	4-5
# ::node	0.1.0.0.0.0.0.0	it	1-2
# ::node	0.1.0.0.0.0.0.1	general	3-4
# ::node	0.1.0.0.0.0.0.2	since	0-1
# ::node	0.1.0.0.1	idea	15-16
# ::node	0.1.0.0.1.0	common	14-15
# ::node	0.1.0.0.1.1	time	18-19
# ::node	0.1.0.1	always	32-33
# ::node	0.1.1	detail-01	21-22
# ::root	0	argue-01
# ::edge	and	op1	detail-01	0.1	0.1.1	
# ::edge	and	op2	argue-01	0.1	0	
# ::edge	argue-01	ARG1	it	0	0.0	
# ::edge	associate-01	ARG1	it	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	associate-01	ARG2	theory	0.1.0.0.0.0.0	0.1.0.0.0.0	
# ::edge	associate-01	mod	general	0.1.0.0.0.0.0	0.1.0.0.0.0.0.1	
# ::edge	derive-01	ARG1	it	0.0.0	0.0	
# ::edge	idea	domain	it	0.1.0.0.1	0.1.0.0	
# ::edge	idea	mod	common	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	idea	mod	time	0.1.0.0.1	0.1.0.0.1.1	
# ::edge	matter	domain	it	0.1.0.0.0	0.1.0.0	
# ::edge	same-41	ARG0	it	0.1.0	0.1.0.0	
# ::edge	same-41	ARG1	and	0.1.0	0.1	
# ::edge	same-41	time	always	0.1.0	0.1.0.1	
# ::edge	since	op1	associate-01	0.1.0.0.0.0.0.2	0.1.0.0.0.0.0	
# ::edge	theory	topic	matter	0.1.0.0.0.0	0.1.0.0.0	
(a2 / argue-01 
      :ARG1 (i / it 
            :ARG1-of (d / derive-01)) 
      :op-of (a3 / and 
            :ARG1-of (s / same-41 
                  :ARG0 (i3 / it 
                        :domain-of (m / matter 
                              :topic-of (t2 / theory 
                                    :ARG2-of (a4 / associate-01 
                                          :ARG1 (i4 / it) 
                                          :mod (g / general) 
                                          :op-of (s2 / since)))) 
                        :domain-of (i2 / idea 
                              :mod (c / common) 
                              :mod (t / time))) 
                  :time (a / always)) 
            :op1 (d2 / detail-01)))

# ::snt   all our ideas are derived from experience and he argues against descartes that there are no innate ideas which are with us at birth
# ::tok all our ideas are derived from experience and he argues against descartes that there are no innate ideas which are with us at birth
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:41.592
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt perhaps then the idea is derived from the consciousness we have of our power over our own bodies
# ::tok perhaps then the idea is derived from the consciousness we have of our power over our own bodies
# ::alignments 17-18|0.2.0.0.0 13-14|0.2.0 9-10|0.2.0.0 8-9|0.2 5-6|0 3-4|0.1 1-2|0.0.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:41.661
# ::node	0	derive-01	5-6
# ::node	0.0	perhaps	0-1
# ::node	0.0.0	then	1-2
# ::node	0.1	idea	3-4
# ::node	0.2	consciousness	8-9
# ::node	0.2.0	power	13-14
# ::node	0.2.0.0	we	9-10
# ::node	0.2.0.0.0	body	17-18
# ::root	0	derive-01
# ::edge	body	poss	we	0.2.0.0.0	0.2.0.0	
# ::edge	derive-01	ARG0	perhaps	0	0.0	
# ::edge	derive-01	ARG1	idea	0	0.1	
# ::edge	derive-01	ARG2	consciousness	0	0.2	
# ::edge	power	poss	consciousness	0.2.0	0.2	
# ::edge	power	poss	we	0.2.0	0.2.0.0	
# ::edge	then	mod	perhaps	0.0.0	0.0	
(d / derive-01 
      :ARG0 (p2 / perhaps 
            :mod-of (t / then)) 
      :ARG1 (i / idea) 
      :ARG2 (c / consciousness 
            :poss-of (p / power 
                  :poss (w / we 
                        :poss-of (b / body)))))

# ::snt i feel that i am doing a job as well as i can and i also feel that i am capable of deriving pleasure from it
# ::tok i feel that i am doing a job as well as i can and i also feel that i am capable of deriving pleasure from it
# ::alignments 25-26|0.1.0 23-24|0.1 20-21|0 18-19|0.2 16-17|0.0.0 15-16|0.0.0.0 14-15|0.0 13-14|0.0.0.1 12-13|0.0.0.1.1 11-12|0.0.0.1.1.0 9-10|0.0.0.1.1.1 7-8|0.0.0.1.0.1 5-6|0.0.0.1.0 3-4|0.0.0.1.0.0 1-2|0.0.0.1.0.2 0-1|0.0.0.1.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:42.079
# ::node	0	capable-41	20-21
# ::node	0.0	i	14-15
# ::node	0.0.0	feel-01	16-17
# ::node	0.0.0.0	also	15-16
# ::node	0.0.0.1	and	13-14
# ::node	0.0.0.1.0	do-02	5-6
# ::node	0.0.0.1.0.0	i	3-4
# ::node	0.0.0.1.0.1	job	7-8
# ::node	0.0.0.1.0.2	feel-01	1-2
# ::node	0.0.0.1.0.2.0	i	0-1
# ::node	0.0.0.1.1	possible	12-13
# ::node	0.0.0.1.1.0	i	11-12
# ::node	0.0.0.1.1.1	well	9-10
# ::node	0.1	pleasure	23-24
# ::node	0.1.0	it	25-26
# ::node	0.2	i	18-19
# ::root	0	capable-41
# ::edge	and	op1	do-02	0.0.0.1	0.0.0.1.0	
# ::edge	and	op2	possible	0.0.0.1	0.0.0.1.1	
# ::edge	and	op3	feel-01	0.0.0.1	0.0.0	
# ::edge	capable-41	ARG1	i	0	0.0	
# ::edge	capable-41	ARG2	pleasure	0	0.1	
# ::edge	capable-41	domain	i	0	0.2	
# ::edge	do-02	ARG0	i	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	do-02	ARG1	job	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	feel-01	ARG0	i	0.0.0	0.0	
# ::edge	feel-01	ARG0	i	0.0.0.1.0.2	0.0.0.1.0.2.0	
# ::edge	feel-01	ARG1	do-02	0.0.0.1.0.2	0.0.0.1.0	
# ::edge	feel-01	mod	also	0.0.0	0.0.0.0	
# ::edge	pleasure	poss	it	0.1	0.1.0	
# ::edge	possible	mod	i	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	well	op1	possible	0.0.0.1.1.1	0.0.0.1.1	
(c / capable-41 
      :ARG1 (i3 / i 
            :ARG0-of (f / feel-01 
                  :mod (a / also) 
                  :op-of (a2 / and 
                        :op1 (d / do-02 
                              :ARG0 (i5 / i) 
                              :ARG1 (j / job) 
                              :ARG1-of (f2 / feel-01 
                                    :ARG0 (i6 / i))) 
                        :op2 (p2 / possible 
                              :mod (i4 / i) 
                              :op-of (w / well))))) 
      :ARG2 (p / pleasure 
            :poss (i / it)) 
      :domain (i2 / i))

# ::snt it will not be disputed that about half the money to be spent by the county council is in future to be derived directly from central government and about a quarter from the proceeds of the uniform business rate
# ::tok it will not be disputed that about half the money to be spent by the county council is in future to be derived directly from central government and about a quarter from the proceeds of the uniform business rate
# ::alignments 38-39|0.0.0.1.0.1 37-38|0.0.0.1.0.1.0 36-37|0.0.0.1.0.1.1 27-28|0.0.0.1.0.2 25-26|0.0.0.1.0.2.0.0 23-24|0.0.0.1.0.3 22-23|0.0.0.1.0 19-20|0.0.0.1.0.0 16-17|0.0 15-16|0 12-13|0.0.0 9-10|0.0.0.1 7-8|0.0.0.0 4-5|0.0.0.1.0.2.0 0-1|0.0.0.1.0.2.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:42.344
# ::node	0	county	15-16
# ::node	0.0	council	16-17
# ::node	0.0.0	spend-01	12-13
# ::node	0.0.0.0	half	7-8
# ::node	0.0.0.1	money	9-10
# ::node	0.0.0.1.0	derive-01	22-23
# ::node	0.0.0.1.0.0	future	19-20
# ::node	0.0.0.1.0.1	rate	38-39
# ::node	0.0.0.1.0.1.0	business	37-38
# ::node	0.0.0.1.0.1.1	uniform	36-37
# ::node	0.0.0.1.0.2	and	27-28
# ::node	0.0.0.1.0.2.0	dispute-01	4-5
# ::node	0.0.0.1.0.2.0.0	central	25-26
# ::node	0.0.0.1.0.2.0.1	it	0-1
# ::node	0.0.0.1.0.3	direct	23-24
# ::root	0	county
(c3 / county 
      :mod-of (c2 / council 
            :ARG1-of (s / spend-01 
                  :ARG0 (h / half) 
                  :ARG3 (m / money 
                        :ARG0-of (d2 / derive-01 
                              :ARG1 (f / future) 
                              :ARG2 (r / rate 
                                    :mod (b / business) 
                                    :mod (u / uniform)) 
                              :location (a / and 
                                    :op1 (d3 / dispute-01 
                                          :ARG0 (c / central) 
                                          :ARG1 (i / it))) 
                              :manner (d / direct))))))

# ::snt in judging the value of negative freedom one should never forget that it derives from its contribution to autonomy
# ::tok in judging the value of negative freedom one should never forget that it derives from its contribution to autonomy
# ::alignments 18-19|0 16-17|0.0 12-13|0.0.0 10-11|0.0.0.0 8-9|0.0.0.0.1 6-7|0.0.0.0.0 5-6|0.0.0.0.0.0 3-4|0.0.0.0.1.0 1-2|0.0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:42.429
# ::node	0	autonomy	18-19
# ::node	0.0	contribute-01	16-17
# ::node	0.0.0	it	12-13
# ::node	0.0.0.0	forget-01	10-11
# ::node	0.0.0.0.0	free-41	6-7
# ::node	0.0.0.0.0.0	negative	5-6
# ::node	0.0.0.0.1	recommend-01	8-9
# ::node	0.0.0.0.1.0	value-01	3-4
# ::node	0.0.0.0.1.0.0	judge-01	1-2
# ::root	0	autonomy
(a / autonomy 
      :ARG1-of (c / contribute-01 
            :poss (i / it 
                  :ARG0-of (f / forget-01 
                        :ARG1 (f2 / free-41 
                              :mod (n / negative)) 
                        :ARG1-of (r / recommend-01 
                              :ARG1-of (v / value-01 
                                    :ARG1-of (j / judge-01)))))))

# ::snt far from being an emblem of wholeness this woman is fragmented lacking and she derives from her lack the nervous energy of desire
# ::tok far from being an emblem of wholeness this woman is fragmented lacking and she derives from her lack the nervous energy of desire
# ::alignments 22-23|0.0.0.0.0.1 20-21|0.0.0 19-20|0.0.0.0 17-18|0.0.0.0.0 13-14|0.0.0.0.0.2 12-13|0.0 11-12|0 8-9|0.1 7-8|0.1.0 0-1|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:42.508
# ::node	0	lack-01	11-12
# ::node	0.0	and	12-13
# ::node	0.0.0	energy	20-21
# ::node	0.0.0.0	nervous-41	19-20
# ::node	0.0.0.0.0	lack-01	17-18
# ::node	0.0.0.0.0.0	far	0-1
# ::node	0.0.0.0.0.1	desire-01	22-23
# ::node	0.0.0.0.0.2	she	13-14
# ::node	0.1	woman	8-9
# ::node	0.1.0	this	7-8
# ::root	0	lack-01
# ::edge	and	op1	energy	0.0	0.0.0	
# ::edge	desire-01	ARG1	lack-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	lack-01	ARG0	and	0	0.0	
# ::edge	lack-01	ARG1	far	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	lack-01	ARG1	woman	0	0.1	
# ::edge	lack-01	poss	she	0.0.0.0.0	0.0.0.0.0.2	
# ::edge	nervous-41	ARG0	lack-01	0.0.0.0	0.0.0.0.0	
# ::edge	nervous-41	ARG1	energy	0.0.0.0	0.0.0	
# ::edge	woman	mod	this	0.1	0.1.0	
(l2 / lack-01 
      :ARG0 (a / and 
            :op1 (e / energy 
                  :ARG1-of (n / nervous-41 
                        :ARG0 (l / lack-01 
                              :ARG1 (f / far) 
                              :ARG1-of (d / desire-01) 
                              :poss (s / she))))) 
      :ARG1 (w / woman 
            :mod (t / this)))

# ::snt liberating while attempting to control all the resentment and sense of oppression of the lower strata was notoriously liable to backfire on those confident enough to undertake the task even if such resentment was couched in cultural terms from which such leaders also derived their legitimacy
# ::tok liberating while attempting to control all the resentment and sense of oppression of the lower strata was notoriously liable to backfire on those confident enough to undertake the task even if such resentment was couched in cultural terms from which such leaders also derived their legitimacy
# ::alignments 45-46|0.2.1.1 43-44|0.2.1 42-43|0.2.1.2 41-42|0.2.1.0.0+0.2.1.0 40-41|0.2.1.0.1 37-38|0.0 36-37|0.0.0 32-33|0.2 31-32|0.2.2 28-29|0.1.0 26-27|0.1 24-25|0.3 23-24|0 18-19|0.2.0.0.0.0.1 17-18|0.2.0.0.0.0.1.0 14-15|0.2.0.0.0.0.0.0 11-12|0.2.0 9-10|0.2.0.0 8-9|0.2.0.0.0 7-8|0.2.0.0.0.0.0 5-6|0.2.0.0.0.0.0.1 4-5|0.2.0.0.0.0 2-3|0.2.0.0.0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:43.663
# ::node	0	confident-41	23-24
# ::node	0.0	term	37-38
# ::node	0.0.0	culture	36-37
# ::node	0.1	undertake-01	26-27
# ::node	0.1.0	task	28-29
# ::node	0.2	resent-01	32-33
# ::node	0.2.0	oppress-01	11-12
# ::node	0.2.0.0	sense	9-10
# ::node	0.2.0.0.0	and	8-9
# ::node	0.2.0.0.0.0	control-01	4-5
# ::node	0.2.0.0.0.0.0	resent-01	7-8
# ::node	0.2.0.0.0.0.0.0	low	14-15
# ::node	0.2.0.0.0.0.0.1	all	5-6
# ::node	0.2.0.0.0.0.1	liable-41	18-19
# ::node	0.2.0.0.0.0.1.0	notorious	17-18
# ::node	0.2.0.0.0.0.2	attempt-01	2-3
# ::node	0.2.1	derive-01	43-44
# ::node	0.2.1.0	person	41-42
# ::node	0.2.1.0.0	lead-02	41-42
# ::node	0.2.1.0.1	such	40-41
# ::node	0.2.1.1	legitimacy	45-46
# ::node	0.2.1.2	also	42-43
# ::node	0.2.2	such	31-32
# ::node	0.3	enough	24-25
# ::root	0	confident-41
# ::edge	and	op1	sense	0.2.0.0.0	0.2.0.0	
# ::edge	attempt-01	ARG1	control-01	0.2.0.0.0.0.2	0.2.0.0.0.0	
# ::edge	confident-41	ARG0	term	0	0.0	
# ::edge	confident-41	ARG1	undertake-01	0	0.1	
# ::edge	confident-41	condition	resent-01	0	0.2	
# ::edge	confident-41	degree	enough	0	0.3	
# ::edge	control-01	ARG0	and	0.2.0.0.0.0	0.2.0.0.0	
# ::edge	control-01	ARG1	resent-01	0.2.0.0.0.0	0.2.0.0.0.0.0	
# ::edge	derive-01	ARG0	person	0.2.1	0.2.1.0	
# ::edge	derive-01	ARG1	legitimacy	0.2.1	0.2.1.1	
# ::edge	derive-01	condition	resent-01	0.2.1	0.2	
# ::edge	derive-01	mod	also	0.2.1	0.2.1.2	
# ::edge	lead-02	ARG0	person	0.2.1.0.0	0.2.1.0	
# ::edge	liable-41	ARG1	control-01	0.2.0.0.0.0.1	0.2.0.0.0.0	
# ::edge	liable-41	mod	notorious	0.2.0.0.0.0.1	0.2.0.0.0.0.1.0	
# ::edge	oppress-01	ARG1	resent-01	0.2.0	0.2	
# ::edge	person	mod	such	0.2.1.0	0.2.1.0.1	
# ::edge	resent-01	ARG1	low	0.2.0.0.0.0.0	0.2.0.0.0.0.0.0	
# ::edge	resent-01	mod	such	0.2	0.2.2	
# ::edge	resent-01	quant	all	0.2.0.0.0.0.0	0.2.0.0.0.0.0.1	
# ::edge	sense	mod	oppress-01	0.2.0.0	0.2.0	
# ::edge	term	mod	culture	0.0	0.0.0	
# ::edge	undertake-01	ARG1	task	0.1	0.1.0	
(c2 / confident-41 
      :ARG0 (t / term 
            :mod (c / culture)) 
      :ARG1 (u / undertake-01 
            :ARG1 (t2 / task)) 
      :condition (r / resent-01 
            :ARG1-of (o / oppress-01 
                  :mod-of (s3 / sense 
                        :op-of (a2 / and 
                              :ARG0-of (c3 / control-01 
                                    :ARG1 (r2 / resent-01 
                                          :ARG1 (l4 / low) 
                                          :quant (a3 / all)) 
                                    :ARG1-of (l3 / liable-41 
                                          :mod (n / notorious)) 
                                    :ARG1-of (a4 / attempt-01))))) 
            :condition-of (d / derive-01 
                  :ARG0 (p / person 
                        :ARG0-of (l2 / lead-02) 
                        :mod (s / such)) 
                  :ARG1 (l / legitimacy) 
                  :mod (a / also)) 
            :mod (s2 / such)) 
      :degree (e / enough))

# ::snt before that he had been for ten years prime minister of the council of ministers in london not so much a shadow cabinet as a cabinet of political ghosts whose dogged persistence over nearly half a century and apparent constitutional legitimacy once more haunts the warsaw government deriving its legitimacy chiefly from the realpolitik of yalta
# ::tok before that he had been for ten years prime minister of the council of ministers in london not so much a shadow cabinet as a cabinet of political ghosts whose dogged persistence over nearly half a century and apparent constitutional legitimacy once more haunts the warsaw government deriving its legitimacy chiefly from the realpolitik of yalta
# ::alignments 50-51|0.0.0.0.0.1.1.0.0 49-50|0.0.0.0.0.1.1.0 41-42|0.0.0.0.0.1.0 40-41|0.0.0.0.0 39-40|0.0.0.0.0.0 38-39|0.0.0.0 37-38|0.0.0.0.0.1 34-35|0.2.3.0.0 33-34|0.2.3.0 27-28|0.0.0.0.0.1.1 25-26|0.2.0.0 22-23|0.0 21-22|0 19-20|0.0.1.0 18-19|0.0.1 16-17|0.0.0.2.0.0+0.0.0.2.0+0.0.0.2 14-15|0.0.0.1+0.0.0 12-13|0.2.1 9-10|0.2.2+0.2 8-9|0.2.2.0 7-8|0.2.3.1+0.2.3 2-3|0.2.0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:44.841
# ::node	0	shadow-01	21-22
# ::node	0.0	cabinet	22-23
# ::node	0.0.0	have-org-role-91	14-15
# ::node	0.0.0.0	apparent	38-39
# ::node	0.0.0.0.0	legitimacy	40-41
# ::node	0.0.0.0.0.0	constitution	39-40
# ::node	0.0.0.0.0.1	and	37-38
# ::node	0.0.0.0.0.1.0	once	41-42
# ::node	0.0.0.0.0.1.1	politics	27-28
# ::node	0.0.0.0.0.1.1.0	legitimacy	49-50
# ::node	0.0.0.0.0.1.1.0.0	chiefly	50-51
# ::node	0.0.0.1	minister	14-15
# ::node	0.0.0.2	city	16-17
# ::node	0.0.0.2.0	name	16-17
# ::node	0.0.0.2.0.0	"London"	16-17
# ::node	0.0.1	so	18-19
# ::node	0.0.1.0	much	19-20
# ::node	0.1	before	0-1
# ::node	0.2	have-org-role-91	9-10
# ::node	0.2.0	he	2-3
# ::node	0.2.0.0	cabinet	25-26
# ::node	0.2.1	council	12-13
# ::node	0.2.2	minister	9-10
# ::node	0.2.2.0	prime	8-9
# ::node	0.2.3	temporal-quantity	7-8
# ::node	0.2.3.0	nearly	33-34
# ::node	0.2.3.0.0	half	34-35
# ::node	0.2.3.1	year	7-8
# ::root	0	shadow-01
# ::edge	and	location	once	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	and	op1	legitimacy	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	cabinet	polarity	so	0.0	0.0.1	
# ::edge	cabinet	poss	he	0.2.0.0	0.2.0	
# ::edge	city	name	name	0.0.0.2	0.0.0.2.0	
# ::edge	half	mod	nearly	0.2.3.0.0	0.2.3.0	
# ::edge	have-org-role-91	ARG0	apparent	0.0.0	0.0.0.0	
# ::edge	have-org-role-91	ARG0	he	0.2	0.2.0	
# ::edge	have-org-role-91	ARG1	cabinet	0.0.0	0.0	
# ::edge	have-org-role-91	ARG1	council	0.2	0.2.1	
# ::edge	have-org-role-91	ARG2	minister	0.0.0	0.0.0.1	
# ::edge	have-org-role-91	ARG2	minister	0.2	0.2.2	
# ::edge	have-org-role-91	duration	temporal-quantity	0.2	0.2.3	
# ::edge	have-org-role-91	location	city	0.0.0	0.0.0.2	
# ::edge	have-org-role-91	purpose	shadow-01	0.2	0	
# ::edge	legitimacy	location	chiefly	0.0.0.0.0.1.1.0	0.0.0.0.0.1.1.0.0	
# ::edge	legitimacy	mod	apparent	0.0.0.0.0	0.0.0.0	
# ::edge	legitimacy	mod	constitution	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	legitimacy	poss	politics	0.0.0.0.0.1.1.0	0.0.0.0.0.1.1	
# ::edge	minister	mod	prime	0.2.2	0.2.2.0	
# ::edge	much	degree	so	0.0.1.0	0.0.1	
# ::edge	name	op1	"London"	0.0.0.2.0	0.0.0.2.0.0	
# ::edge	nearly	op1	temporal-quantity	0.2.3.0	0.2.3	
# ::edge	politics	poss	and	0.0.0.0.0.1.1	0.0.0.0.0.1	
# ::edge	shadow-01	ARG0	cabinet	0	0.0	
# ::edge	shadow-01	ARG1	before	0	0.1	
# ::edge	temporal-quantity	unit	year	0.2.3	0.2.3.1	
(s / shadow-01 
      :ARG0 (c4 / cabinet 
            :ARG1-of (h2 / have-org-role-91 
                  :ARG0 (a / apparent 
                        :mod-of (l2 / legitimacy 
                              :mod (c2 / constitution) 
                              :op-of (a2 / and 
                                    :location (o / once) 
                                    :poss-of (p / politics 
                                          :poss-of (l / legitimacy 
                                                :location (c / chiefly)))))) 
                  :ARG2 (m2 / minister) 
                  :location (c5 / city 
                        :name (n2 / name 
                              :op1 "London"))) 
            :polarity (s2 / so 
                  :degree-of (m / much))) 
      :ARG1 (b / before) 
      :purpose-of (h3 / have-org-role-91 
            :ARG0 (h4 / he 
                  :poss-of (c3 / cabinet)) 
            :ARG1 (c6 / council) 
            :ARG2 (m3 / minister 
                  :mod (p2 / prime)) 
            :duration (t / temporal-quantity 
                  :op-of (n / nearly 
                        :mod-of (h / half)) 
                  :unit (y / year))))

# ::snt i have as a result of the new storyboard got a detailed list of proposals and suggestions from the new programmer which i am faxing to you eight pages to follow and which will form the basis of formal discussions between the programmer and myself and possibly david and from which we have to derive a proper technical specification
# ::tok i have as a result of the new storyboard got a detailed list of proposals and suggestions from the new programmer which i am faxing to you eight pages to follow and which will form the basis of formal discussions between the programmer and myself and possibly david and from which we have to derive a proper technical specification
# ::alignments 57-58|0.3.2.0.3 56-57|0.3.2.0.4 54-55|0.3.3 51-52|0.3.3.0 48-49|0.3.2.2 46-47|0.3.2.1 45-46|0.3.2 43-44|0.3.2.0.0 40-41|0.3.2.0.1 39-40|0.3.2.0 38-39|0.3.2.0.2 34-35|0.3.2.2.0 31-32|0.3 30-31|0.3.1 28-29|0.3.0 27-28|0.3.0.0.0 26-27|0.3.0.0 22-23|0.3.1.0 19-20|0.2.0 16-17|0.1.1 15-16|0.1 14-15|0.1.0.0+0.1.0 12-13|0 11-12|0.2 7-8|0.3.1.1 4-5|0.0 0-1|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:45.509
# ::node	0	list-01	12-13
# ::node	0.0	result-01	4-5
# ::node	0.1	and	15-16
# ::node	0.1.0	thing	14-15
# ::node	0.1.0.0	propose-01	14-15
# ::node	0.1.1	suggest-01	16-17
# ::node	0.1.1.0	i	0-1
# ::node	0.2	detail-01	11-12
# ::node	0.2.0	new	19-20
# ::node	0.3	and	31-32
# ::node	0.3.0	page	28-29
# ::node	0.3.0.0	you	26-27
# ::node	0.3.0.0.0	8	27-28
# ::node	0.3.1	follow-02	30-31
# ::node	0.3.1.0	i	22-23
# ::node	0.3.1.1	new	7-8
# ::node	0.3.2	and	45-46
# ::node	0.3.2.0	discuss-01	39-40
# ::node	0.3.2.0.0	and	43-44
# ::node	0.3.2.0.1	between	40-41
# ::node	0.3.2.0.2	formal	38-39
# ::node	0.3.2.0.3	technical	57-58
# ::node	0.3.2.0.4	proper	56-57
# ::node	0.3.2.1	possible	46-47
# ::node	0.3.2.2	and	48-49
# ::node	0.3.2.2.0	form	34-35
# ::node	0.3.3	derive-01	54-55
# ::node	0.3.3.0	we	51-52
# ::root	0	list-01
# ::edge	8	mod	you	0.3.0.0.0	0.3.0.0	
# ::edge	and	op1	form	0.3.2.2	0.3.2.2.0	
# ::edge	and	op1	list-01	0.3	0	
# ::edge	and	op1	possible	0.3.2	0.3.2.1	
# ::edge	and	op1	thing	0.1	0.1.0	
# ::edge	and	op2	and	0.3.2	0.3.2.2	
# ::edge	and	op2	page	0.3	0.3.0	
# ::edge	and	op2	suggest-01	0.1	0.1.1	
# ::edge	and	op3	follow-02	0.3	0.3.1	
# ::edge	and	op4	and	0.3	0.3.2	
# ::edge	and	op5	derive-01	0.3	0.3.3	
# ::edge	derive-01	ARG0	we	0.3.3	0.3.3.0	
# ::edge	detail-01	ARG0	new	0.2	0.2.0	
# ::edge	detail-01	ARG1	list-01	0.2	0	
# ::edge	discuss-01	ARG0	and	0.3.2.0	0.3.2	
# ::edge	discuss-01	ARG1	and	0.3.2.0	0.3.2.0.0	
# ::edge	discuss-01	location	between	0.3.2.0	0.3.2.0.1	
# ::edge	discuss-01	mod	formal	0.3.2.0	0.3.2.0.2	
# ::edge	follow-02	ARG0	i	0.3.1	0.3.1.0	
# ::edge	follow-02	ARG1	new	0.3.1	0.3.1.1	
# ::edge	list-01	ARG0	result-01	0	0.0	
# ::edge	list-01	ARG1	and	0	0.1	
# ::edge	page	domain	you	0.3.0	0.3.0.0	
# ::edge	proper	op1	discuss-01	0.3.2.0.4	0.3.2.0	
# ::edge	propose-01	ARG1	thing	0.1.0.0	0.1.0	
# ::edge	suggest-01	ARG0	i	0.1.1	0.1.1.0	
# ::edge	technical	op1	discuss-01	0.3.2.0.3	0.3.2.0	
(l / list-01 
      :ARG0 (r / result-01) 
      :ARG1 (a5 / and 
            :op1 (t2 / thing 
                  :ARG1-of (p4 / propose-01)) 
            :op2 (s / suggest-01 
                  :ARG0 (i2 / i))) 
      :ARG1-of (d3 / detail-01 
            :ARG0 (n / new)) 
      :op-of (a4 / and 
            :op1 (p3 / page 
                  :domain (y / you 
                        :mod-of 8)) 
            :op2 (f3 / follow-02 
                  :ARG0 (i / i) 
                  :ARG1 (n2 / new)) 
            :op3 (a2 / and 
                  :ARG0-of (d2 / discuss-01 
                        :ARG1 (a3 / and) 
                        :location (b / between) 
                        :mod (f / formal) 
                        :op-of (t / technical) 
                        :op-of (p / proper)) 
                  :op1 (p2 / possible) 
                  :op2 (a / and 
                        :op1 (f2 / form))) 
            :op4 (d / derive-01 
                  :ARG0 (w / we))))

# ::snt derived essentially from the earlier atomist democritus dash
# ::tok derived essentially from the earlier atomist democritus dash
# ::alignments 4-5|0.0 1-2|0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:45.524
# ::node	0	derive-01	0-1
# ::node	0.0	early	4-5
# ::node	0.1	essential	1-2
# ::root	0	derive-01
# ::edge	derive-01	ARG1	early	0	0.0	
# ::edge	derive-01	manner	essential	0	0.1	
(d / derive-01 
      :ARG1 (e / early) 
      :manner (e2 / essential))

# ::snt by definition rights are not fundamental but derive from interests
# ::tok by definition rights are not fundamental but derive from interests
# ::alignments 9-10|0.1.0 7-8|0.1 6-7|0 5-6|0.0 2-3|0.1.1 1-2|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:45.542
# ::node	0	contrast-01	6-7
# ::node	0.0	fundamental	5-6
# ::node	0.1	derive-01	7-8
# ::node	0.1.0	interest	9-10
# ::node	0.1.1	right	2-3
# ::node	0.1.1.0	define-01	1-2
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	fundamental	0	0.0	
# ::edge	contrast-01	ARG2	derive-01	0	0.1	
# ::edge	define-01	ARG0	right	0.1.1.0	0.1.1	
# ::edge	derive-01	ARG0	interest	0.1	0.1.0	
# ::edge	derive-01	ARG1	right	0.1	0.1.1	
(c / contrast-01 
      :ARG1 (f / fundamental) 
      :ARG2 (d / derive-01 
            :ARG0 (i / interest) 
            :ARG1 (r / right 
                  :ARG0-of (d2 / define-01))))

# ::snt a nickname said to derive from his swarthy complexion and curly black hair dash
# ::tok a nickname said to derive from his swarthy complexion and curly black hair dash
# ::alignments 12-13|0.0.0.1 11-12|0.0.0.0 9-10|0.0.0 4-5|0.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:45.563
# ::node	0	say-01	2-3
# ::node	0.0	derive-01	4-5
# ::node	0.0.0	and	9-10
# ::node	0.0.0.0	black	11-12
# ::node	0.0.0.1	hair	12-13
# ::root	0	say-01
# ::edge	and	op1	black	0.0.0	0.0.0.0	
# ::edge	and	op2	hair	0.0.0	0.0.0.1	
# ::edge	derive-01	ARG1	and	0.0	0.0.0	
# ::edge	say-01	ARG1	derive-01	0	0.0	
(s / say-01 
      :ARG1 (d / derive-01 
            :ARG1 (a / and 
                  :op1 (b / black) 
                  :op2 (h / hair))))

# ::snt fascination with the city undoubtedly also derives in part from its condition as a carnival on the edge of frenzy professor ronald dworkin quoted in calcutta of the western world 7 november
# ::tok fascination with the city undoubtedly also derives in part from its condition as a carnival on the edge of frenzy professor ronald dworkin quoted in calcutta of the western world 7 november
# ::alignments 31-32|0.0.0.0.1.0+0.0.0.0.1 30-31|0.0.0.0.1.1 29-30|0.0.0.0.0.0.0.0 28-29|0.0.0.0.0.0.0.1.0+0.0.0.0.0.0.0.1+0.0.0.0.0.0.0 23-24|0.0.0.0 21-23|0.0.0.2.0+0.0.0.2.1+0.0.0.2+0.0.0 20-21|0.0.1+0.0 19-20|0 11-12|0.0.2 5-6|0.0.0.0.0 4-5|0.0.0.0.0.0.1+0.0.0.0.0.0 3-4|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:45.856
# ::node	0	frenzy	19-20
# ::node	0.0	have-org-role-91	20-21
# ::node	0.0.0	person	21-23
# ::node	0.0.0.0	quote-01	23-24
# ::node	0.0.0.0.0	also	5-6
# ::node	0.0.0.0.0.0	doubt-01	4-5
# ::node	0.0.0.0.0.0.0	world-region	28-29
# ::node	0.0.0.0.0.0.0.0	world	29-30
# ::node	0.0.0.0.0.0.0.1	name	28-29
# ::node	0.0.0.0.0.0.0.1.0	"West"	28-29
# ::node	0.0.0.0.0.0.1	-	4-5
# ::node	0.0.0.0.1	date-entity	31-32
# ::node	0.0.0.0.1.0	11	31-32
# ::node	0.0.0.0.1.1	7	30-31
# ::node	0.0.0.1	city	3-4
# ::node	0.0.0.2	name	21-23
# ::node	0.0.0.2.0	"dworkin"	21-23
# ::node	0.0.0.2.1	"ronald"	21-23
# ::node	0.0.1	professor	20-21
# ::node	0.0.2	condition	11-12
# ::root	0	frenzy
(f / frenzy 
      :ARG1-of (h / have-org-role-91 
            :ARG0 (p / person 
                  :ARG1-of (q / quote-01 
                        :ARG0 (a / also 
                              :ARG1-of (d2 / doubt-01 
                                    :ARG0 (w2 / world-region 
                                          :location-of (w / world) 
                                          :name (n / name 
                                                :op1 "West")) 
                                    :polarity -)) 
                        :duration (d / date-entity 
                              :month 11 
                              :quant 7)) 
                  :location-of (c2 / city) 
                  :name (n2 / name 
                        :op1 "dworkin" 
                        :op2 "ronald")) 
            :ARG2 (p2 / professor) 
            :topic-of (c / condition)))

# ::snt until now factor nine has been derived from pooled blood transfusions a system which permitted the transmission of the hiv virus before the introduction of screening and heat inactivation
# ::tok until now factor nine has been derived from pooled blood transfusions a system which permitted the transmission of the hiv virus before the introduction of screening and heat inactivation
# ::alignments 27-28|0.1 26-27|0 23-24|0.0 21-22|0.0.2 20-21|0.0.2.0 14-15|0.0.2.1 12-13|0.0.2.1.0 9-10|0.0.2.1.1 8-9|0.0.1 6-7|0.0.2.1.0.0 3-4|0.0.0 2-3|0.0.2.1.0.0.0 1-2|0.0.2.1.0.0.0.0 0-1|0.0.2.1.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:46.284
# ::node	0	and	26-27
# ::node	0.0	introduce-02	23-24
# ::node	0.0.0	9	3-4
# ::node	0.0.1	pool-01	8-9
# ::node	0.0.2	before	21-22
# ::node	0.0.2.0	virus	20-21
# ::node	0.0.2.1	permit-01	14-15
# ::node	0.0.2.1.0	system	12-13
# ::node	0.0.2.1.0.0	derive-01	6-7
# ::node	0.0.2.1.0.0.0	factor	2-3
# ::node	0.0.2.1.0.0.0.0	now	1-2
# ::node	0.0.2.1.0.0.1	until	0-1
# ::node	0.0.2.1.1	blood	9-10
# ::node	0.1	heat	27-28
# ::root	0	and
# ::edge	and	op1	heat	0	0.1	
# ::edge	before	op1	introduce-02	0.0.2	0.0	
# ::edge	derive-01	ARG1	factor	0.0.2.1.0.0	0.0.2.1.0.0.0	
# ::edge	derive-01	ARG2	system	0.0.2.1.0.0	0.0.2.1.0	
# ::edge	factor	time	now	0.0.2.1.0.0.0	0.0.2.1.0.0.0.0	
# ::edge	introduce-02	ARG0	9	0.0	0.0.0	
# ::edge	introduce-02	ARG1	and	0.0	0	
# ::edge	permit-01	ARG0	system	0.0.2.1	0.0.2.1.0	
# ::edge	permit-01	ARG1	blood	0.0.2.1	0.0.2.1.1	
# ::edge	permit-01	time	before	0.0.2.1	0.0.2	
# ::edge	pool-01	ARG1	introduce-02	0.0.1	0.0	
# ::edge	until	op1	derive-01	0.0.2.1.0.0.1	0.0.2.1.0.0	
# ::edge	virus	time	before	0.0.2.0	0.0.2	
(a / and 
      :ARG1-of (i / introduce-02 
            :ARG0 9 
            :ARG1-of (p2 / pool-01) 
            :op-of (b / before 
                  :time-of (v / virus) 
                  :time-of (p / permit-01 
                        :ARG0 (s / system 
                              :ARG2-of (d / derive-01 
                                    :ARG1 (f / factor 
                                          :time (n / now)) 
                                    :op-of (u / until))) 
                        :ARG1 (b2 / blood)))) 
      :op1 (h / heat))

# ::snt they do not derive from a common source or from common ultimate principles
# ::tok they do not derive from a common source or from common ultimate principles
# ::alignments 12-13|0.0.1 11-12|0.0.1.0 10-11|0.0.1.1 8-9|0.0 7-8|0.2 6-7|0.0.0 3-4|0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:46.394
# ::node	0	derive-01	3-4
# ::node	0.0	or	8-9
# ::node	0.0.0	common	6-7
# ::node	0.0.1	principle	12-13
# ::node	0.0.1.0	ultimate	11-12
# ::node	0.0.1.1	common	10-11
# ::node	0.1	they	0-1
# ::node	0.2	source	7-8
# ::root	0	derive-01
# ::edge	derive-01	ARG0	or	0	0.0	
# ::edge	derive-01	ARG1	they	0	0.1	
# ::edge	derive-01	ARG2	source	0	0.2	
# ::edge	or	op1	common	0.0	0.0.0	
# ::edge	or	op2	principle	0.0	0.0.1	
# ::edge	principle	mod	common	0.0.1	0.0.1.1	
# ::edge	principle	mod	ultimate	0.0.1	0.0.1.0	
(d / derive-01 
      :ARG0 (o / or 
            :op1 (c2 / common) 
            :op2 (p / principle 
                  :mod (u / ultimate) 
                  :mod (c / common))) 
      :ARG1 (t / they) 
      :ARG2 (s / source))

# ::snt the criticisms that we make derive strength from an analysis of other jurisdictions with similar commonlaw backgrounds and the same liberal democratic traditions as the united kingdom
# ::tok the criticisms that we make derive strength from an analysis of other jurisdictions with similar commonlaw backgrounds and the same liberal democratic traditions as the united kingdom
# ::alignments 25-27|0.2.0.0.0+0.2.0.0.1+0.2.0.0+0.2.0 22-23|0.3 21-22|0.3.2 20-21|0.3.1 19-20|0.3.0 17-18|0 16-17|0.2.1.1 12-13|0.2.1 11-12|0.2.1.0 9-10|0.2 6-7|0.1 5-6|0.1.0 3-4|0.1.1 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:46.639
# ::node	0	and	17-18
# ::node	0.0	criticism	1-2
# ::node	0.1	strength	6-7
# ::node	0.1.0	derive-01	5-6
# ::node	0.1.1	we	3-4
# ::node	0.2	analyze-01	9-10
# ::node	0.2.0	country	25-27
# ::node	0.2.0.0	name	25-27
# ::node	0.2.0.0.0	"kingdom"	25-27
# ::node	0.2.0.0.1	"united"	25-27
# ::node	0.2.1	jurisdiction	12-13
# ::node	0.2.1.0	other	11-12
# ::node	0.2.1.1	background	16-17
# ::node	0.3	tradition	22-23
# ::node	0.3.0	same-41	19-20
# ::node	0.3.1	liberal	20-21
# ::node	0.3.2	democracy	21-22
# ::root	0	and
# ::edge	analyze-01	ARG0	country	0.2	0.2.0	
# ::edge	analyze-01	ARG1	jurisdiction	0.2	0.2.1	
# ::edge	and	mod	criticism	0	0.0	
# ::edge	and	op1	strength	0	0.1	
# ::edge	and	op2	analyze-01	0	0.2	
# ::edge	and	op3	tradition	0	0.3	
# ::edge	country	name	name	0.2.0	0.2.0.0	
# ::edge	jurisdiction	mod	other	0.2.1	0.2.1.0	
# ::edge	jurisdiction	poss	background	0.2.1	0.2.1.1	
# ::edge	name	op1	"kingdom"	0.2.0.0	0.2.0.0.0	
# ::edge	name	op2	"united"	0.2.0.0	0.2.0.0.1	
# ::edge	same-41	ARG1	tradition	0.3.0	0.3	
# ::edge	strength	mod	derive-01	0.1	0.1.0	
# ::edge	strength	poss	we	0.1	0.1.1	
# ::edge	tradition	mod	democracy	0.3	0.3.2	
# ::edge	tradition	mod	liberal	0.3	0.3.1	
(a / and 
      :mod (c2 / criticism) 
      :op1 (s2 / strength 
            :mod (d2 / derive-01) 
            :poss (w / we)) 
      :op2 (a2 / analyze-01 
            :ARG0 (c / country 
                  :name (n / name 
                        :op1 "kingdom" 
                        :op2 "united")) 
            :ARG1 (j / jurisdiction 
                  :mod (o / other) 
                  :poss (b / background))) 
      :op3 (t / tradition 
            :ARG1-of (s / same-41) 
            :mod (l / liberal) 
            :mod (d / democracy)))

# ::snt the rightholders interest itself conceived independently of its contribution to the public interest is deemed insufficient to justify holding others to be subject to the extensive duties and disabilities commonly derived from the right of free speech
# ::tok the rightholders interest itself conceived independently of its contribution to the public interest is deemed insufficient to justify holding others to be subject to the extensive duties and disabilities commonly derived from the right of free speech
# ::alignments 36-37|0.1.0.0.0.0.0.0.1.0.0 35-36|0.1.0.0.0.0.0.0.1.0.0.0 30-31|0.1.0.0.0.0.0.0.1.0 29-30|0.1.0.0.0.0.0.0.1.0.1 27-28|0.1.0.0.0.0.0.0.1 26-27|0.1.0.0.0.0.0.0 25-26|0.1.0.0.0.0.0.0.0 22-23|0.1.0.0.0.0.0 19-20|0.1.0.0.0.0 18-19|0.1.0.0.0 17-18|0.1.0.0 15-16|0.1.0.0.1.1+0.1.0.0.1 14-15|0.1.0 12-13|0 11-12|0.0 8-9|0.2 5-6|0.1.0.0.1.0 4-5|0.1.1 2-3|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:47.054
# ::node	0	interest-01	12-13
# ::node	0.0	public	11-12
# ::node	0.1	interest-01	2-3
# ::node	0.1.0	deem-01	14-15
# ::node	0.1.0.0	justify-01	17-18
# ::node	0.1.0.0.0	hold-01	18-19
# ::node	0.1.0.0.0.0	other	19-20
# ::node	0.1.0.0.0.0.0	subject	22-23
# ::node	0.1.0.0.0.0.0.0	duty	26-27
# ::node	0.1.0.0.0.0.0.0.0	extensive	25-26
# ::node	0.1.0.0.0.0.0.0.1	and	27-28
# ::node	0.1.0.0.0.0.0.0.1.0	derive-01	30-31
# ::node	0.1.0.0.0.0.0.0.1.0.0	speech	36-37
# ::node	0.1.0.0.0.0.0.0.1.0.0.0	free-41	35-36
# ::node	0.1.0.0.0.0.0.0.1.0.1	common	29-30
# ::node	0.1.0.0.1	suffice-01	15-16
# ::node	0.1.0.0.1.0	independent	5-6
# ::node	0.1.0.0.1.1	-	15-16
# ::node	0.1.1	conceive-01	4-5
# ::node	0.2	contribute-01	8-9
# ::root	0	interest-01
# ::edge	and	op1	duty	0.1.0.0.0.0.0.0.1	0.1.0.0.0.0.0.0	
# ::edge	and	op2	derive-01	0.1.0.0.0.0.0.0.1	0.1.0.0.0.0.0.0.1.0	
# ::edge	conceive-01	ARG1	interest-01	0.1.1	0.1	
# ::edge	contribute-01	ARG1	interest-01	0.2	0	
# ::edge	deem-01	ARG1	interest-01	0.1.0	0.1	
# ::edge	deem-01	ARG2	justify-01	0.1.0	0.1.0.0	
# ::edge	derive-01	ARG2	speech	0.1.0.0.0.0.0.0.1.0	0.1.0.0.0.0.0.0.1.0.0	
# ::edge	derive-01	mod	common	0.1.0.0.0.0.0.0.1.0	0.1.0.0.0.0.0.0.1.0.1	
# ::edge	duty	mod	extensive	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0.0.0	
# ::edge	free-41	ARG1	speech	0.1.0.0.0.0.0.0.1.0.0.0	0.1.0.0.0.0.0.0.1.0.0	
# ::edge	hold-01	ARG1	other	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	interest-01	ARG1	interest-01	0.1	0	
# ::edge	interest-01	ARG1	public	0	0.0	
# ::edge	justify-01	ARG1	hold-01	0.1.0.0	0.1.0.0.0	
# ::edge	subject	domain	other	0.1.0.0.0.0.0	0.1.0.0.0.0	
# ::edge	subject	prep-to	duty	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	suffice-01	ARG0	independent	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	suffice-01	ARG1	justify-01	0.1.0.0.1	0.1.0.0	
# ::edge	suffice-01	polarity	-	0.1.0.0.1	0.1.0.0.1.1	
(i / interest-01 
      :ARG1 (p / public) 
      :ARG1-of (i3 / interest-01 
            :ARG1-of (d3 / deem-01 
                  :ARG2 (j / justify-01 
                        :ARG1 (h / hold-01 
                              :ARG1 (o / other 
                                    :domain-of (s2 / subject 
                                          :prep-to (d2 / duty 
                                                :mod (e / extensive) 
                                                :op-of (a / and 
                                                      :op1 (d / derive-01 
                                                            :ARG2 (s / speech 
                                                                  :ARG1-of (f / free-41)) 
                                                            :mod (c / common))))))) 
                        :ARG1-of (s3 / suffice-01 
                              :ARG0 (i2 / independent) 
                              :polarity -))) 
            :ARG1-of (c3 / conceive-01)) 
      :ARG1-of (c2 / contribute-01))

# ::snt one of the amendments would tax a foreign investor on gains derived from the sale of shares in a us company in which the investor owned 10 per cent or more of the outstanding shares
# ::tok one of the amendments would tax a foreign investor on gains derived from the sale of shares in a us company in which the investor owned 10 per cent or more of the outstanding shares
# ::alignments 34-35|0.0.0.2.0.0.0.0.0.0 33-34|0.0.0.2.0.0.0.0.0 29-30|0 28-29|0.0.1+0.0 26-27|0.0.0.1 25-26|0.0.0 24-25|0.0.0.0.0+0.0.0.0 20-21|0.0.0.3 16-17|0.0.0.2.0.0.0.0.1 11-12|0.0.0.2.0.0.0.0 8-9|0.0.0.2.0.0.0+0.0.0.2.0.0 7-8|0.0.0.2.0.0.1 5-6|0.0.0.2.0 3-4|0.0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:47.293
# ::node	0	or	29-30
# ::node	0.0	monetary-quantity	28-29
# ::node	0.0.0	own-01	25-26
# ::node	0.0.0.0	person	24-25
# ::node	0.0.0.0.0	invest-01	24-25
# ::node	0.0.0.1	10	26-27
# ::node	0.0.0.2	amend-01	3-4
# ::node	0.0.0.2.0	tax-01	5-6
# ::node	0.0.0.2.0.0	person	8-9
# ::node	0.0.0.2.0.0.0	invest-01	8-9
# ::node	0.0.0.2.0.0.0.0	derive-01	11-12
# ::node	0.0.0.2.0.0.0.0.0	outstanding	33-34
# ::node	0.0.0.2.0.0.0.0.0.0	share	34-35
# ::node	0.0.0.2.0.0.0.0.1	share	16-17
# ::node	0.0.0.2.0.0.1	foreign	7-8
# ::node	0.0.0.3	company	20-21
# ::node	0.0.1	cent	28-29
# ::root	0	or
# ::edge	amend-01	ARG1	own-01	0.0.0.2	0.0.0	
# ::edge	company	op1	own-01	0.0.0.3	0.0.0	
# ::edge	derive-01	ARG1	outstanding	0.0.0.2.0.0.0.0	0.0.0.2.0.0.0.0.0	
# ::edge	derive-01	ARG2	share	0.0.0.2.0.0.0.0	0.0.0.2.0.0.0.0.1	
# ::edge	invest-01	ARG0	person	0.0.0.0.0	0.0.0.0	
# ::edge	invest-01	ARG0	person	0.0.0.2.0.0.0	0.0.0.2.0.0	
# ::edge	invest-01	ARG1	derive-01	0.0.0.2.0.0.0	0.0.0.2.0.0.0.0	
# ::edge	monetary-quantity	unit	cent	0.0	0.0.1	
# ::edge	or	op1	monetary-quantity	0	0.0	
# ::edge	own-01	ARG0	person	0.0.0	0.0.0.0	
# ::edge	own-01	ARG1	10	0.0.0	0.0.0.1	
# ::edge	own-01	location	monetary-quantity	0.0.0	0.0	
# ::edge	person	mod	foreign	0.0.0.2.0.0	0.0.0.2.0.0.1	
# ::edge	share	mod	outstanding	0.0.0.2.0.0.0.0.0.0	0.0.0.2.0.0.0.0.0	
# ::edge	tax-01	ARG0	amend-01	0.0.0.2.0	0.0.0.2	
# ::edge	tax-01	ARG1	person	0.0.0.2.0	0.0.0.2.0.0	
(o2 / or 
      :op1 (m / monetary-quantity 
            :location-of (o3 / own-01 
                  :ARG0 (p / person 
                        :ARG0-of (i / invest-01)) 
                  :ARG1 10 
                  :ARG1-of (a / amend-01 
                        :ARG0-of (t / tax-01 
                              :ARG1 (p2 / person 
                                    :ARG0-of (i2 / invest-01 
                                          :ARG1 (d / derive-01 
                                                :ARG1 (o / outstanding 
                                                      :mod-of (s / share)) 
                                                :ARG2 (s2 / share))) 
                                    :mod (f / foreign)))) 
                  :op-of (c2 / company)) 
            :unit (c / cent)))

# ::snt the woman standing on the far right of the picture derives from a series of images lautrec painted of prostitutes waiting for their periodic medical exam
# ::tok the woman standing on the far right of the picture derives from a series of images lautrec painted of prostitutes waiting for their periodic medical exam
# ::alignments 25-26|0.0.0.0.0.2.1 24-25|0.0.0.0.0.2.1.0 23-24|0 20-21|0.0.0.0.0.2 19-20|0.0.0.0.0 17-18|0.0 15-16|0.0.0 13-14|0.0.0.0 9-10|0.0.0.0.0.1 5-6|0.0.0.0.0.2.0 1-2|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:47.439
# ::node	0	periodic	23-24
# ::node	0.0	paint-03	17-18
# ::node	0.0.0	image	15-16
# ::node	0.0.0.0	series	13-14
# ::node	0.0.0.0.0	prostitute-01	19-20
# ::node	0.0.0.0.0.0	woman	1-2
# ::node	0.0.0.0.0.1	picture	9-10
# ::node	0.0.0.0.0.2	wait-01	20-21
# ::node	0.0.0.0.0.2.0	far	5-6
# ::node	0.0.0.0.0.2.1	exam	25-26
# ::node	0.0.0.0.0.2.1.0	medicine	24-25
# ::root	0	periodic
(p / periodic 
      :ARG0-of (p3 / paint-03 
            :ARG1 (i / image 
                  :quant (s / series 
                        :quant-of (p2 / prostitute-01 
                              :ARG0 (w2 / woman) 
                              :ARG1 (p4 / picture) 
                              :ARG1-of (w / wait-01 
                                    :ARG0 (f / far) 
                                    :ARG2 (e / exam 
                                          :mod (m / medicine))))))))

# ::snt thus according to bacon  that wisdom which we have derived principally from the greeks is but like the boyhood of knowledge and has the characteristic property of boys it can talk but it cannot generate for it is fruitful of controversies but barren of works
# ::tok thus according to bacon that wisdom which we have derived principally from the greeks is but like the boyhood of knowledge and has the characteristic property of boys it can talk but it cannot generate for it is fruitful of controversies but barren of works
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:47.440
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the tops of the keewenaw lavas are all reddened and oxidized a fairly  common condition for basalts and it has been suggested that oxygen  derived from iron oxides in the basalt combined with the sulphur from earlier copper sulphide minerals effectively reducing them to native  copper
# ::tok the tops of the keewenaw lavas are all reddened and oxidized a fairly common condition for basalts and it has been suggested that oxygen derived from iron oxides in the basalt combined with the sulphur from earlier copper sulphide minerals effectively reducing them to native copper
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:47.442
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt it is the depiction of men and women as creatures of their context their sensations ultimately derived from the involuntary conditions of circumstance their transcendence denied
# ::tok it is the depiction of men and women as creatures of their context their sensations ultimately derived from the involuntary conditions of circumstance their transcendence denied
# ::alignments 25-26|0.0 22-23|0 20-21|0.0.0.0.0 19-20|0.0.0.0.0.0.1+0.0.0.0.0.0 16-17|0.0.0.0 15-16|0.0.0.0.1 14-15|0.0.0 12-13|0.0.0.0.0.0.0.1.0 7-8|0.0.0.0.0.0.0.1 6-7|0.0.0.0.0.0.0 5-6|0.0.0.0.0.0.0.0 0-1|0.0.0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:47.620
# ::node	0	circumstance	22-23
# ::node	0.0	deny-01	25-26
# ::node	0.0.0	sensation	14-15
# ::node	0.0.0.0	derive-01	16-17
# ::node	0.0.0.0.0	condition	20-21
# ::node	0.0.0.0.0.0	volunteer-01	19-20
# ::node	0.0.0.0.0.0.0	and	6-7
# ::node	0.0.0.0.0.0.0.0	man	5-6
# ::node	0.0.0.0.0.0.0.0.0	it	0-1
# ::node	0.0.0.0.0.0.0.1	woman	7-8
# ::node	0.0.0.0.0.0.0.1.0	context	12-13
# ::node	0.0.0.0.0.0.1	-	19-20
# ::node	0.0.0.0.1	ultimate	15-16
# ::root	0	circumstance
(c / circumstance 
      :ARG1-of (d / deny-01 
            :ARG0 (s / sensation 
                  :ARG1-of (d2 / derive-01 
                        :ARG2 (c2 / condition 
                              :mod (v / volunteer-01 
                                    :ARG0 (a / and 
                                          :op1 (m / man 
                                                :domain (i / it)) 
                                          :op2 (w / woman 
                                                :part (c3 / context))) 
                                    :polarity -)) 
                        :time (u / ultimate)))))

# ::snt though different in detail these ideas are similar in that they both derive from the clocks observable characteristics and behaviour
# ::tok though different in detail these ideas are similar in that they both derive from the clocks observable characteristics and behaviour
# ::alignments 19-20|0.1 18-19|0 17-18|0.0.1.0+0.0.1 12-13|0.0 11-12|0.0.0.0 10-11|0.0.0 5-6|0.1.0.0 3-4|0.1.0.1 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:47.702
# ::node	0	and	18-19
# ::node	0.0	derive-01	12-13
# ::node	0.0.0	they	10-11
# ::node	0.0.0.0	both	11-12
# ::node	0.0.1	thing	17-18
# ::node	0.0.1.0	characteristic-41	17-18
# ::node	0.1	behave-01	19-20
# ::node	0.1.0	differ-02	1-2
# ::node	0.1.0.0	idea	5-6
# ::node	0.1.0.1	detail-01	3-4
# ::root	0	and
# ::edge	and	op1	derive-01	0	0.0	
# ::edge	and	op2	behave-01	0	0.1	
# ::edge	behave-01	ARG1	differ-02	0.1	0.1.0	
# ::edge	characteristic-41	ARG2	thing	0.0.1.0	0.0.1	
# ::edge	derive-01	ARG0	they	0.0	0.0.0	
# ::edge	derive-01	ARG2	thing	0.0	0.0.1	
# ::edge	differ-02	ARG1	idea	0.1.0	0.1.0.0	
# ::edge	differ-02	ARG2	detail-01	0.1.0	0.1.0.1	
# ::edge	they	mod	both	0.0.0	0.0.0.0	
(a / and 
      :op1 (d / derive-01 
            :ARG0 (t2 / they 
                  :mod (b2 / both)) 
            :ARG2 (t / thing 
                  :ARG2-of (c / characteristic-41))) 
      :op2 (b / behave-01 
            :ARG1 (d3 / differ-02 
                  :ARG1 (i / idea) 
                  :ARG2 (d2 / detail-01))))

# ::snt set on the last day of the war and the first day of the peace the story derives much of its power from the tension between intense polishness and impassioned scepticism about the national tradition of romantic heroism
# ::tok set on the last day of the war and the first day of the peace the story derives much of its power from the tension between intense polishness and impassioned scepticism about the national tradition of romantic heroism
# ::alignments 36-37|0.2.1 34-35|0.4 33-34|0.4.0 28-29|0 26-27|0.3 25-26|0.1 24-25|0.1.0 21-22|0.0 18-19|0.0.0 16-17|0.0.1 14-15|0.2 11-12|0.2.0 8-9|0.2.0.0 7-8|0.2.0.0.1.0 4-5|0.2.0.0.1 3-4|0.2.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:47.822
# ::node	0	and	28-29
# ::node	0.0	power	21-22
# ::node	0.0.0	much	18-19
# ::node	0.0.1	story	16-17
# ::node	0.1	between	25-26
# ::node	0.1.0	tension	24-25
# ::node	0.2	peace	14-15
# ::node	0.2.0	day	11-12
# ::node	0.2.0.0	and	8-9
# ::node	0.2.0.0.0	last	3-4
# ::node	0.2.0.0.1	day	4-5
# ::node	0.2.0.0.1.0	war	7-8
# ::node	0.2.1	romantic	36-37
# ::node	0.3	intense	26-27
# ::node	0.4	tradition	34-35
# ::node	0.4.0	nation	33-34
# ::root	0	and
# ::edge	and	op1	last	0.2.0.0	0.2.0.0.0	
# ::edge	and	op1	peace	0	0.2	
# ::edge	and	op2	day	0.2.0.0	0.2.0.0.1	
# ::edge	and	op2	intense	0	0.3	
# ::edge	and	op3	day	0.2.0.0	0.2.0	
# ::edge	and	poss	tradition	0	0.4	
# ::edge	between	op1	and	0.1	0	
# ::edge	peace	part	day	0.2	0.2.0	
# ::edge	power	example	and	0.0	0	
# ::edge	power	part	much	0.0	0.0.0	
# ::edge	power	poss	story	0.0	0.0.1	
# ::edge	romantic	poss	peace	0.2.1	0.2	
# ::edge	tension	mod	between	0.1.0	0.1	
# ::edge	tradition	mod	nation	0.4	0.4.0	
# ::edge	war	time	day	0.2.0.0.1.0	0.2.0.0.1	
(a / and 
      :example-of (p / power 
            :part (m / much) 
            :poss (s / story)) 
      :op-of (b / between 
            :mod-of (t2 / tension)) 
      :op1 (p2 / peace 
            :part (d / day 
                  :op-of (a2 / and 
                        :op1 (l / last) 
                        :op2 (d2 / day 
                              :time-of (w / war)))) 
            :poss-of (r / romantic)) 
      :op2 (i / intense) 
      :poss (t / tradition 
            :mod (n / nation)))

# ::snt few arsenal players will derive much pleasure from pondering their performances but if anyone is waking up at night screaming it will be niall quinn
# ::tok few arsenal players will derive much pleasure from pondering their performances but if anyone is waking up at night screaming it will be niall quinn
# ::alignments 20-21|0.0.0.0 19-20|0 18-19|0.0.0.2 15-16|0.0.0 13-14|0.0 11-12|0.0.0.1 10-11|0.0.0.1.0.0.0 6-7|0.0.0.1.0.1 5-6|0.0.0.1.0.1.0 4-5|0.0.0.1.0 2-3|0.0.0.1.0.0.1+0.0.0.1.0.0 1-2|0.0.0.1.0.0.1.0 0-1|0.0.0.1.0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:48.040
# ::node	0	scream-01	19-20
# ::node	0.0	anyone	13-14
# ::node	0.0.0	wake-02	15-16
# ::node	0.0.0.0	it	20-21
# ::node	0.0.0.1	contrast-01	11-12
# ::node	0.0.0.1.0	derive-01	4-5
# ::node	0.0.0.1.0.0	person	2-3
# ::node	0.0.0.1.0.0.0	perform-01	10-11
# ::node	0.0.0.1.0.0.1	play-01	2-3
# ::node	0.0.0.1.0.0.1.0	arsenal	1-2
# ::node	0.0.0.1.0.0.2	few	0-1
# ::node	0.0.0.1.0.1	pleasure	6-7
# ::node	0.0.0.1.0.1.0	much	5-6
# ::node	0.0.0.2	night	18-19
# ::root	0	scream-01
# ::edge	contrast-01	ARG1	derive-01	0.0.0.1	0.0.0.1.0	
# ::edge	contrast-01	ARG2	wake-02	0.0.0.1	0.0.0	
# ::edge	derive-01	ARG0	person	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	derive-01	ARG1	pleasure	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	perform-01	ARG0	person	0.0.0.1.0.0.0	0.0.0.1.0.0	
# ::edge	person	quant	few	0.0.0.1.0.0	0.0.0.1.0.0.2	
# ::edge	play-01	ARG0	person	0.0.0.1.0.0.1	0.0.0.1.0.0	
# ::edge	play-01	ARG1	arsenal	0.0.0.1.0.0.1	0.0.0.1.0.0.1.0	
# ::edge	pleasure	quant	much	0.0.0.1.0.1	0.0.0.1.0.1.0	
# ::edge	scream-01	ARG0	anyone	0	0.0	
# ::edge	wake-02	ARG0	anyone	0.0.0	0.0	
# ::edge	wake-02	ARG1	it	0.0.0	0.0.0.0	
# ::edge	wake-02	time	night	0.0.0	0.0.0.2	
(s / scream-01 
      :ARG0 (a / anyone 
            :ARG0-of (w / wake-02 
                  :ARG1 (i / it) 
                  :ARG2-of (c / contrast-01 
                        :ARG1 (d / derive-01 
                              :ARG0 (p3 / person 
                                    :ARG0-of (p / perform-01) 
                                    :ARG0-of (p4 / play-01 
                                          :ARG1 (a2 / arsenal)) 
                                    :quant (f / few)) 
                              :ARG1 (p2 / pleasure 
                                    :quant (m / much)))) 
                  :time (n / night))))

# ::snt the standard for dryers for example is 243 thousand which is derived by aggregating the standard inventory level for each of the individual dryer skus
# ::tok the standard for dryers for example is 243 thousand which is derived by aggregating the standard inventory level for each of the individual dryer skus
# ::alignments 22-23|0.0.1.0 19-20|0.0.0.0 17-18|0.0.0.1.0 16-17|0.0.0.1 15-16|0.0.0.1.0.0 11-12|0.0.0 5-6|0 3-4|0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:48.102
# ::node	0	example	5-6
# ::node	0.0	dryer	3-4
# ::node	0.0.0	derive-01	11-12
# ::node	0.0.0.0	each	19-20
# ::node	0.0.0.1	inventory	16-17
# ::node	0.0.0.1.0	level	17-18
# ::node	0.0.0.1.0.0	standard	15-16
# ::node	0.0.1	standard	1-2
# ::node	0.0.1.0	individual	22-23
# ::root	0	example
(e2 / example 
      :mod-of (d2 / dryer 
            :ARG0-of (d / derive-01 
                  :ARG1 (e / each) 
                  :ARG2 (i2 / inventory 
                        :mod-of (l / level 
                              :mod (s / standard)))) 
            :topic-of (s2 / standard 
                  :poss (i / individual))))

# ::snt from dutch historian gustav renier i derived the formulation that history is a social necessity in face of government philistinism and the fantasies of cultural theory this i believe is the bedrock upon which claims for a proper respect for historical study should be founded
# ::tok from dutch historian gustav renier i derived the formulation that history is a social necessity in face of government philistinism and the fantasies of cultural theory this i believe is the bedrock upon which claims for a proper respect for historical study should be founded
# ::alignments 44-45|0.2 42-43|0.2.0 41-42|0.1.1 40-41|0.1.1.0 38-39|0.1 37-38|0.1.2 34-35|0 28-29|0.1.0.1 27-28|0.1.0 26-27|0.1.0.1.0 25-26|0.2.0.0.1.0 24-25|0.2.0.0.1.0.0 22-23|0.2.0.0.1 20-21|0.2.0.0 16-17|0.2.0.0.0 13-14|0.0 10-11|0.2.0.0.0.0 6-7|0.1.0.0 5-6|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:48.799
# ::node	0	claim-01	34-35
# ::node	0.0	society	13-14
# ::node	0.1	respect-01	38-39
# ::node	0.1.0	i	27-28
# ::node	0.1.0.0	derive-01	6-7
# ::node	0.1.0.0.0	i	5-6
# ::node	0.1.0.1	believe-01	28-29
# ::node	0.1.0.1.0	this	26-27
# ::node	0.1.1	study-01	41-42
# ::node	0.1.1.0	history	40-41
# ::node	0.1.2	proper	37-38
# ::node	0.2	found-01	44-45
# ::node	0.2.0	recommend-01	42-43
# ::node	0.2.0.0	and	20-21
# ::node	0.2.0.0.0	face-01	16-17
# ::node	0.2.0.0.0.0	history	10-11
# ::node	0.2.0.0.1	fantasy	22-23
# ::node	0.2.0.0.1.0	theory	25-26
# ::node	0.2.0.0.1.0.0	culture	24-25
# ::root	0	claim-01
# ::edge	and	op1	fantasy	0.2.0.0	0.2.0.0.1	
# ::edge	and	op2	recommend-01	0.2.0.0	0.2.0	
# ::edge	believe-01	ARG0	i	0.1.0.1	0.1.0	
# ::edge	believe-01	ARG1	this	0.1.0.1	0.1.0.1.0	
# ::edge	claim-01	ARG0	society	0	0.0	
# ::edge	claim-01	ARG1	respect-01	0	0.1	
# ::edge	derive-01	ARG0	i	0.1.0.0	0.1.0	
# ::edge	derive-01	ARG1	i	0.1.0.0	0.1.0.0.0	
# ::edge	face-01	ARG0	history	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	face-01	ARG1	and	0.2.0.0.0	0.2.0.0	
# ::edge	found-01	ARG1	claim-01	0.2	0	
# ::edge	recommend-01	ARG1	found-01	0.2.0	0.2	
# ::edge	respect-01	ARG0	i	0.1	0.1.0	
# ::edge	respect-01	ARG1	study-01	0.1	0.1.1	
# ::edge	respect-01	mod	proper	0.1	0.1.2	
# ::edge	study-01	mod	history	0.1.1	0.1.1.0	
# ::edge	theory	mod	fantasy	0.2.0.0.1.0	0.2.0.0.1	
# ::edge	theory	topic	culture	0.2.0.0.1.0	0.2.0.0.1.0.0	
(c / claim-01 
      :ARG0 (s2 / society) 
      :ARG1 (r2 / respect-01 
            :ARG0 (i / i 
                  :ARG0-of (d / derive-01 
                        :ARG1 (i2 / i)) 
                  :ARG0-of (b / believe-01 
                        :ARG1 (t / this))) 
            :ARG1 (s / study-01 
                  :mod (h / history)) 
            :mod (p / proper)) 
      :ARG1-of (f / found-01 
            :ARG1-of (r / recommend-01 
                  :op-of (a / and 
                        :ARG1-of (f3 / face-01 
                              :ARG0 (h2 / history)) 
                        :op1 (f2 / fantasy 
                              :mod-of (t2 / theory 
                                    :topic (c2 / culture)))))))

# ::snt some rights derive from others
# ::tok some rights derive from others
# ::alignments 4-5|0.1 2-3|0 1-2|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:48.807
# ::node	0	derive-01	2-3
# ::node	0.0	right	1-2
# ::node	0.0.0	some	0-1
# ::node	0.1	other	4-5
# ::root	0	derive-01
# ::edge	derive-01	ARG1	right	0	0.0	
# ::edge	derive-01	ARG2	other	0	0.1	
# ::edge	right	quant	some	0.0	0.0.0	
(d / derive-01 
      :ARG1 (r / right 
            :quant (s / some)) 
      :ARG2 (o / other))

# ::snt since it was in the interests of justice that the owner of a stolen confidential file should have a civil remedy against the person who had stolen the file a journalist was required to disclose his source of information which had been derived from the stolen file in order that the owner could bring civil proceedings to recover the file
# ::tok since it was in the interests of justice that the owner of a stolen confidential file should have a civil remedy against the person who had stolen the file a journalist was required to disclose his source of information which had been derived from the stolen file in order that the owner could bring civil proceedings to recover the file
# ::alignments 59-60|0.2.0.0.0 57-58|0.2.0.0 55-56|0.2.0.0.1.1 54-55|0.2.0.0.1.1.0 53-54|0.2.0.0.1 52-53|0.2.0.0.1.2 51-52|0.2.0.0.1.0.0+0.2.0.0.1.0 46-47|0.3.0.0 45-46|0.3.0.0.0 42-43|0.3.0 38-39|0.3 36-37|0.1 34-35|0 32-33|0.2 30-31|0.0 28-29|0.2.0 26-27|0.2.0.1 23-24|0.2.0.1.0 20-21|0.2.0.1.0.0 19-20|0.2.0.1.0.0.2 16-17|0.2.0.1.0.0.1 15-16|0.2.0.1.0.0.0.0.0 14-15|0.2.0.1.0.0.0.0.0.1 13-14|0.2.0.1.0.0.0.0.0.0 10-11|0.2.0.1.0.0.0.0+0.2.0.1.0.0.0 7-8|0.2.0.1.0.0.1.1 5-6|0.2.0.1.0.0.1.1.0 1-2|0.2.0.1.0.0.1.0 0-1|0.2.0.1.0.0.1.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:50.264
# ::node	0	disclose-01	34-35
# ::node	0.0	journalist	30-31
# ::node	0.1	source	36-37
# ::node	0.2	require-01	32-33
# ::node	0.2.0	file	28-29
# ::node	0.2.0.0	recover-02	57-58
# ::node	0.2.0.0.0	file	59-60
# ::node	0.2.0.0.1	bring-01	53-54
# ::node	0.2.0.0.1.0	person	51-52
# ::node	0.2.0.0.1.0.0	own-01	51-52
# ::node	0.2.0.0.1.1	proceeding	55-56
# ::node	0.2.0.0.1.1.0	civil	54-55
# ::node	0.2.0.0.1.2	possible	52-53
# ::node	0.2.0.1	steal-01	26-27
# ::node	0.2.0.1.0	person	23-24
# ::node	0.2.0.1.0.0	remedy-01	20-21
# ::node	0.2.0.1.0.0.0	person	10-11
# ::node	0.2.0.1.0.0.0.0	own-01	10-11
# ::node	0.2.0.1.0.0.0.0.0	file	15-16
# ::node	0.2.0.1.0.0.0.0.0.0	steal-01	13-14
# ::node	0.2.0.1.0.0.0.0.0.1	confidential	14-15
# ::node	0.2.0.1.0.0.1	recommend-01	16-17
# ::node	0.2.0.1.0.0.1.0	it	1-2
# ::node	0.2.0.1.0.0.1.1	justice	7-8
# ::node	0.2.0.1.0.0.1.1.0	interest	5-6
# ::node	0.2.0.1.0.0.1.2	since	0-1
# ::node	0.2.0.1.0.0.2	civil	19-20
# ::node	0.3	information	38-39
# ::node	0.3.0	derive-01	42-43
# ::node	0.3.0.0	file	46-47
# ::node	0.3.0.0.0	steal-01	45-46
# ::root	0	disclose-01
# ::edge	bring-01	ARG0	person	0.2.0.0.1	0.2.0.0.1.0	
# ::edge	bring-01	ARG1	proceeding	0.2.0.0.1	0.2.0.0.1.1	
# ::edge	bring-01	mod	possible	0.2.0.0.1	0.2.0.0.1.2	
# ::edge	bring-01	purpose	recover-02	0.2.0.0.1	0.2.0.0	
# ::edge	derive-01	ARG1	information	0.3.0	0.3	
# ::edge	derive-01	ARG2	file	0.3.0	0.3.0.0	
# ::edge	disclose-01	ARG0	journalist	0	0.0	
# ::edge	disclose-01	ARG1	source	0	0.1	
# ::edge	disclose-01	ARG3	information	0	0.3	
# ::edge	file	mod	confidential	0.2.0.1.0.0.0.0.0	0.2.0.1.0.0.0.0.0.1	
# ::edge	interest	location	justice	0.2.0.1.0.0.1.1.0	0.2.0.1.0.0.1.1	
# ::edge	justice	op1	recommend-01	0.2.0.1.0.0.1.1	0.2.0.1.0.0.1	
# ::edge	own-01	ARG0	person	0.2.0.0.1.0.0	0.2.0.0.1.0	
# ::edge	own-01	ARG0	person	0.2.0.1.0.0.0.0	0.2.0.1.0.0.0	
# ::edge	own-01	ARG1	file	0.2.0.1.0.0.0.0	0.2.0.1.0.0.0.0.0	
# ::edge	proceeding	mod	civil	0.2.0.0.1.1	0.2.0.0.1.1.0	
# ::edge	recommend-01	ARG0	it	0.2.0.1.0.0.1	0.2.0.1.0.0.1.0	
# ::edge	recommend-01	ARG1	remedy-01	0.2.0.1.0.0.1	0.2.0.1.0.0	
# ::edge	recommend-01	time	since	0.2.0.1.0.0.1	0.2.0.1.0.0.1.2	
# ::edge	recover-02	ARG0	file	0.2.0.0	0.2.0	
# ::edge	recover-02	ARG1	file	0.2.0.0	0.2.0.0.0	
# ::edge	remedy-01	ARG0	person	0.2.0.1.0.0	0.2.0.1.0.0.0	
# ::edge	remedy-01	ARG1	person	0.2.0.1.0.0	0.2.0.1.0	
# ::edge	remedy-01	mod	civil	0.2.0.1.0.0	0.2.0.1.0.0.2	
# ::edge	require-01	ARG0	file	0.2	0.2.0	
# ::edge	require-01	ARG1	disclose-01	0.2	0	
# ::edge	steal-01	ARG0	person	0.2.0.1	0.2.0.1.0	
# ::edge	steal-01	ARG1	file	0.2.0.1	0.2.0	
# ::edge	steal-01	ARG1	file	0.2.0.1.0.0.0.0.0.0	0.2.0.1.0.0.0.0.0	
# ::edge	steal-01	ARG1	file	0.3.0.0.0	0.3.0.0	
(d2 / disclose-01 
      :ARG0 (j / journalist) 
      :ARG1 (s2 / source) 
      :ARG1-of (r2 / require-01 
            :ARG0 (f3 / file 
                  :ARG0-of (r / recover-02 
                        :ARG1 (f / file) 
                        :purpose-of (b / bring-01 
                              :ARG0 (p3 / person 
                                    :ARG0-of (o / own-01)) 
                              :ARG1 (p / proceeding 
                                    :mod (c / civil)) 
                              :mod (p2 / possible))) 
                  :ARG1-of (s3 / steal-01 
                        :ARG0 (p4 / person 
                              :ARG1-of (r3 / remedy-01 
                                    :ARG0 (p5 / person 
                                          :ARG0-of (o2 / own-01 
                                                :ARG1 (f4 / file 
                                                      :ARG1-of (s4 / steal-01) 
                                                      :mod (c3 / confidential)))) 
                                    :ARG1-of (r4 / recommend-01 
                                          :ARG0 (i3 / it) 
                                          :op-of (j2 / justice 
                                                :location-of (i2 / interest)) 
                                          :time (s5 / since)) 
                                    :mod (c2 / civil)))))) 
      :ARG3 (i / information 
            :ARG1-of (d / derive-01 
                  :ARG2 (f2 / file 
                        :ARG1-of (s / steal-01)))))

# ::snt reagan felt the need for catchphrases usually showbiz derived lets make it one more for the gipper is a line he said in a biopic of the baseball player george gipp you aint seen nothin yet is the merest amendment of al jolsons standard intro
# ::tok reagan felt the need for catchphrases usually showbiz derived lets make it one more for the gipper is a line he said in a biopic of the baseball player george gipp you aint seen nothin yet is the merest amendment of al jolsons standard intro
# ::alignments 43-44|0.0.0.0 39-40|0.0.0.1.0 35-36|0.0.0.1 33-34|0.0.0 31-32|0.0.0.1.0.0 27-28|0.0.0.1.0.0.0.0 21-22|0 20-21|0.0 19-20|0.1 11-12|0.0.0.1.0.0.0.1.1.0 9-10|0.0.0.1.0.0.0.1.1 8-9|0.0.0.1.0.0.0.1.1.1 6-7|0.0.0.1.0.0.0.1.0 3-4|0.0.0.1.0.0.0 1-2|0.0.0.1.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:50.933
# ::node	0	say-01	21-22
# ::node	0.0	he	20-21
# ::node	0.0.0	see-01	33-34
# ::node	0.0.0.0	standard	43-44
# ::node	0.0.0.1	yet	35-36
# ::node	0.0.0.1.0	amend-01	39-40
# ::node	0.0.0.1.0.0	you	31-32
# ::node	0.0.0.1.0.0.0	need-01	3-4
# ::node	0.0.0.1.0.0.0.0	baseball	27-28
# ::node	0.0.0.1.0.0.0.1	feel-01	1-2
# ::node	0.0.0.1.0.0.0.1.0	usual	6-7
# ::node	0.0.0.1.0.0.0.1.1	let-01	9-10
# ::node	0.0.0.1.0.0.0.1.1.0	it	11-12
# ::node	0.0.0.1.0.0.0.1.1.1	derive-01	8-9
# ::node	0.1	line	19-20
# ::root	0	say-01
# ::edge	amend-01	ARG0	you	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	derive-01	ARG1	let-01	0.0.0.1.0.0.0.1.1.1	0.0.0.1.0.0.0.1.1	
# ::edge	feel-01	ARG0	usual	0.0.0.1.0.0.0.1	0.0.0.1.0.0.0.1.0	
# ::edge	feel-01	ARG1	let-01	0.0.0.1.0.0.0.1	0.0.0.1.0.0.0.1.1	
# ::edge	feel-01	ARG2	need-01	0.0.0.1.0.0.0.1	0.0.0.1.0.0.0	
# ::edge	let-01	ARG1	it	0.0.0.1.0.0.0.1.1	0.0.0.1.0.0.0.1.1.0	
# ::edge	need-01	ARG0	you	0.0.0.1.0.0.0	0.0.0.1.0.0	
# ::edge	need-01	ARG1	baseball	0.0.0.1.0.0.0	0.0.0.1.0.0.0.0	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	line	0	0.1	
# ::edge	see-01	ARG0	he	0.0.0	0.0	
# ::edge	standard	op1	see-01	0.0.0.0	0.0.0	
# ::edge	yet	op1	see-01	0.0.0.1	0.0.0	
# ::edge	yet	op2	amend-01	0.0.0.1	0.0.0.1.0	
(s3 / say-01 
      :ARG0 (h / he 
            :ARG0-of (s2 / see-01 
                  :op-of (s / standard) 
                  :op-of (y / yet 
                        :op1 (a / amend-01 
                              :ARG0 (y2 / you 
                                    :ARG0-of (n / need-01 
                                          :ARG1 (b / baseball) 
                                          :ARG2-of (f / feel-01 
                                                :ARG0 (u / usual) 
                                                :ARG1 (l2 / let-01 
                                                      :ARG1 (i / it) 
                                                      :ARG1-of (d / derive-01))))))))) 
      :ARG1 (l / line))

# ::snt the right which the promise confers on the promisee does not derive from the right to promise which is a right of the promisor
# ::tok the right which the promise confers on the promisee does not derive from the right to promise which is a right of the promisor
# ::alignments 16-17|0.0 11-12|0 4-5|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:50.956
# ::node	0	derive-01	11-12
# ::node	0.0	promise-01	16-17
# ::node	0.0.0	promise-01	4-5
# ::root	0	derive-01
(d / derive-01 
      :ARG1-of (p / promise-01 
            :ARG1-of (p2 / promise-01)))

# ::snt in response to these difficulties a different form of work organisation deriving from the singleplace tradition was developed
# ::tok in response to these difficulties a different form of work organisation deriving from the singleplace tradition was developed
# ::alignments 17-18|0.1 15-16|0.0 10-11|0 7-8|0.2 6-7|0.2.0 4-5|0.2.0.0 1-2|0.2.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:51.000
# ::node	0	organize-01	10-11
# ::node	0.0	tradition	15-16
# ::node	0.1	develop-02	17-18
# ::node	0.2	form	7-8
# ::node	0.2.0	differ-02	6-7
# ::node	0.2.0.0	difficulty	4-5
# ::node	0.2.0.0.0	respond-01	1-2
# ::root	0	organize-01
# ::edge	develop-02	ARG1	organize-01	0.1	0	
# ::edge	differ-02	ARG0	difficulty	0.2.0	0.2.0.0	
# ::edge	differ-02	ARG1	form	0.2.0	0.2	
# ::edge	form	mod	organize-01	0.2	0	
# ::edge	organize-01	ARG0	tradition	0	0.0	
# ::edge	respond-01	ARG1	difficulty	0.2.0.0.0	0.2.0.0	
(o / organize-01 
      :ARG0 (t / tradition) 
      :ARG1-of (d / develop-02) 
      :mod-of (f / form 
            :ARG1-of (d2 / differ-02 
                  :ARG0 (d3 / difficulty 
                        :ARG1-of (r / respond-01)))))

# ::snt the majesty of the law does not derive from pomp but from fear
# ::tok the majesty of the law does not derive from pomp but from fear
# ::alignments 12-13|0.0.1 10-11|0 7-8|0.0 4-5|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:51.013
# ::node	0	contrast-01	10-11
# ::node	0.0	derive-01	7-8
# ::node	0.0.0	law	4-5
# ::node	0.0.1	fear-01	12-13
# ::root	0	contrast-01
(c / contrast-01 
      :ARG2-of (d / derive-01 
            :ARG1 (l / law) 
            :ARG1-of (f / fear-01)))

# ::snt i have argued that the originality and force of nana derives from the way it simultaneously generates two conflicting interpretive networks for male fantasmatic apprehension of female sexuality
# ::tok i have argued that the originality and force of nana derives from the way it simultaneously generates two conflicting interpretive networks for male fantasmatic apprehension of female sexuality
# ::alignments 27-28|0.1.1.1.0 26-27|0.1.1.1.0.0 24-25|0.1.1.1 22-23|0.2 20-21|0.1.1 18-19|0.1.1.0 17-18|0.1.1.0.0 16-17|0.1 15-16|0.1.3 14-15|0.1.0 13-14|0.1.2 7-8|0.3.0 6-7|0.3 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:51.152
# ::node	0	argue-01	2-3
# ::node	0.0	i	0-1
# ::node	0.1	generate-01	16-17
# ::node	0.1.0	it	14-15
# ::node	0.1.1	network	20-21
# ::node	0.1.1.0	conflict-01	18-19
# ::node	0.1.1.0.0	2	17-18
# ::node	0.1.1.1	apprehension	24-25
# ::node	0.1.1.1.0	sexuality	27-28
# ::node	0.1.1.1.0.0	female	26-27
# ::node	0.1.2	way	13-14
# ::node	0.1.3	simultaneous	15-16
# ::node	0.2	male	22-23
# ::node	0.3	and	6-7
# ::node	0.3.0	force	7-8
# ::root	0	argue-01
# ::edge	and	op1	argue-01	0.3	0	
# ::edge	and	op2	force	0.3	0.3.0	
# ::edge	apprehension	mod	sexuality	0.1.1.1	0.1.1.1.0	
# ::edge	argue-01	ARG0	i	0	0.0	
# ::edge	argue-01	ARG1	generate-01	0	0.1	
# ::edge	conflict-01	ARG1	network	0.1.1.0	0.1.1	
# ::edge	conflict-01	quant	2	0.1.1.0	0.1.1.0.0	
# ::edge	generate-01	ARG0	it	0.1	0.1.0	
# ::edge	generate-01	ARG1	network	0.1	0.1.1	
# ::edge	generate-01	manner	way	0.1	0.1.2	
# ::edge	generate-01	time	simultaneous	0.1	0.1.3	
# ::edge	male	op1	argue-01	0.2	0	
# ::edge	network	poss	apprehension	0.1.1	0.1.1.1	
# ::edge	sexuality	mod	female	0.1.1.1.0	0.1.1.1.0.0	
(a3 / argue-01 
      :ARG0 (i2 / i) 
      :ARG1 (g / generate-01 
            :ARG0 (i / it) 
            :ARG1 (n / network 
                  :ARG1-of (c / conflict-01 
                        :quant 2) 
                  :poss (a / apprehension 
                        :mod (s / sexuality 
                              :mod (f / female)))) 
            :manner (w / way) 
            :time (s2 / simultaneous)) 
      :op-of (m / male) 
      :op-of (a2 / and 
            :op1 (f2 / force)))

# ::snt in so holding the commissioners clearly regarded the firm as an entity quite separate from the partners whose expenses were being repaid and looked not at all at the immediate purpose of those expenses namely the establishment of personal residences for themselves and their families but solely at the advantages the firm would derive from having those partners residing in their new locations
# ::tok in so holding the commissioners clearly regarded the firm as an entity quite separate from the partners whose expenses were being repaid and looked not at all at the immediate purpose of those expenses namely the establishment of personal residences for themselves and their families but solely at the advantages the firm would derive from having those partners residing in their new locations
# ::alignments 62-63|0.0.2.2.0.0 61-62|0.0.2.2.0.0.0 58-59|0.0.2.2.0 53-54|0.1 51-52|0.1.0 49-50|0.1.1 46-47|0.0.0 45-46|0 44-45|0.0.2.1.3.0 42-43|0.0.2.1.3 38-39|0.0.2.1.1 36-37|0.0.2.2 34-35|0.0.2.1.0.0+0.0.2.1.0 33-34|0.0.2.1 30-31|0.0.2.1.2 29-30|0.0.2.1.2.1 26-27|0.0.2.1.2.0 23-24|0.0 22-23|0.0.2 21-22|0.0.2.0 18-19|0.0.1 13-14|0.0.2.0.0 12-13|0.0.2.0.0.1 11-12|0.0.2.0.0.0.0.1 8-9|0.0.2.0.0.0.0.0 6-7|0.0.2.0.0.0.0 5-6|0.0.2.0.0.0.0.2 4-5|0.0.2.0.0.0.1 2-3|0.0.2.0.0.0 1-2|0.0.2.0.0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:52.936
# ::node	0	contrast-01	45-46
# ::node	0.0	look-01	23-24
# ::node	0.0.0	sole	46-47
# ::node	0.0.1	expend-01	18-19
# ::node	0.0.2	and	22-23
# ::node	0.0.2.0	repay-01	21-22
# ::node	0.0.2.0.0	separate	13-14
# ::node	0.0.2.0.0.0	hold-01	2-3
# ::node	0.0.2.0.0.0.0	regard-01	6-7
# ::node	0.0.2.0.0.0.0.0	firm	8-9
# ::node	0.0.2.0.0.0.0.1	entity	11-12
# ::node	0.0.2.0.0.0.0.2	clear	5-6
# ::node	0.0.2.0.0.0.1	commissioner	4-5
# ::node	0.0.2.0.0.0.2	so	1-2
# ::node	0.0.2.0.0.1	quite	12-13
# ::node	0.0.2.1	expend-01	33-34
# ::node	0.0.2.1.0	country	34-35
# ::node	0.0.2.1.0.0	name	34-35
# ::node	0.0.2.1.1	personal	38-39
# ::node	0.0.2.1.2	purpose	30-31
# ::node	0.0.2.1.2.0	all	26-27
# ::node	0.0.2.1.2.1	immediate	29-30
# ::node	0.0.2.1.3	and	42-43
# ::node	0.0.2.1.3.0	family	44-45
# ::node	0.0.2.2	establish-01	36-37
# ::node	0.0.2.2.0	reside-01	58-59
# ::node	0.0.2.2.0.0	location	62-63
# ::node	0.0.2.2.0.0.0	new	61-62
# ::node	0.1	derive-01	53-54
# ::node	0.1.0	firm	51-52
# ::node	0.1.1	advantage	49-50
# ::root	0	contrast-01
# ::edge	and	op1	expend-01	0.0.2.1.3	0.0.2.1	
# ::edge	and	op1	repay-01	0.0.2	0.0.2.0	
# ::edge	and	op2	family	0.0.2.1.3	0.0.2.1.3.0	
# ::edge	and	op2	look-01	0.0.2	0.0	
# ::edge	and	op3	expend-01	0.0.2	0.0.2.1	
# ::edge	and	op4	establish-01	0.0.2	0.0.2.2	
# ::edge	contrast-01	ARG1	look-01	0	0.0	
# ::edge	country	name	name	0.0.2.1.0	0.0.2.1.0.0	
# ::edge	derive-01	ARG0	firm	0.1	0.1.0	
# ::edge	derive-01	ARG1	advantage	0.1	0.1.1	
# ::edge	derive-01	condition	contrast-01	0.1	0	
# ::edge	expend-01	ARG0	country	0.0.2.1	0.0.2.1.0	
# ::edge	expend-01	ARG1	personal	0.0.2.1	0.0.2.1.1	
# ::edge	hold-01	ARG0	separate	0.0.2.0.0.0	0.0.2.0.0	
# ::edge	hold-01	ARG1	commissioner	0.0.2.0.0.0	0.0.2.0.0.0.1	
# ::edge	hold-01	degree	so	0.0.2.0.0.0	0.0.2.0.0.0.2	
# ::edge	location	mod	new	0.0.2.2.0.0	0.0.2.2.0.0.0	
# ::edge	look-01	ARG0	sole	0.0	0.0.0	
# ::edge	look-01	ARG1	expend-01	0.0	0.0.1	
# ::edge	purpose	mod	expend-01	0.0.2.1.2	0.0.2.1	
# ::edge	purpose	quant	all	0.0.2.1.2	0.0.2.1.2.0	
# ::edge	purpose	time	immediate	0.0.2.1.2	0.0.2.1.2.1	
# ::edge	regard-01	ARG0	hold-01	0.0.2.0.0.0.0	0.0.2.0.0.0	
# ::edge	regard-01	ARG1	firm	0.0.2.0.0.0.0	0.0.2.0.0.0.0.0	
# ::edge	regard-01	ARG2	entity	0.0.2.0.0.0.0	0.0.2.0.0.0.0.1	
# ::edge	regard-01	mod	clear	0.0.2.0.0.0.0	0.0.2.0.0.0.0.2	
# ::edge	repay-01	ARG0	separate	0.0.2.0	0.0.2.0.0	
# ::edge	reside-01	ARG1	location	0.0.2.2.0	0.0.2.2.0.0	
# ::edge	reside-01	ARG2	establish-01	0.0.2.2.0	0.0.2.2	
# ::edge	separate	degree	quite	0.0.2.0.0	0.0.2.0.0.1	
(c / contrast-01 
      :ARG1 (l2 / look-01 
            :ARG0 (s / sole) 
            :ARG1 (e3 / expend-01) 
            :op-of (a4 / and 
                  :op1 (r2 / repay-01 
                        :ARG0 (s2 / separate 
                              :ARG0-of (h / hold-01 
                                    :ARG0-of (r3 / regard-01 
                                          :ARG1 (f3 / firm) 
                                          :ARG2 (e4 / entity) 
                                          :mod (c3 / clear)) 
                                    :ARG1 (c4 / commissioner) 
                                    :degree (s3 / so)) 
                              :degree (q / quite))) 
                  :op2 (e2 / expend-01 
                        :ARG0 (c2 / country 
                              :name (n2 / name)) 
                        :ARG1 (p / personal) 
                        :mod-of (p2 / purpose 
                              :quant (a3 / all) 
                              :time (i / immediate)) 
                        :op-of (a2 / and 
                              :op1 (f2 / family))) 
                  :op3 (e / establish-01 
                        :ARG2-of (r / reside-01 
                              :ARG1 (l / location 
                                    :mod (n / new)))))) 
      :condition-of (d / derive-01 
            :ARG0 (f / firm) 
            :ARG1 (a / advantage)))

# ::snt this indicates that the basalts were derived from more  than one primary source rather than from a single common pool of magma  as some earlier speculations had suggested
# ::tok this indicates that the basalts were derived from more than one primary source rather than from a single common pool of magma as some earlier speculations had suggested
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:52.937
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt ought interviewers to be retaliating by demanding new forms of training for themselves  or is there a case for devising new forms of more explicitly adversarial programmes perhaps derived from the model of the courtroom where the normal constraints against tough lines of questioning are relaxed
# ::tok ought interviewers to be retaliating by demanding new forms of training for themselves or is there a case for devising new forms of more explicitly adversarial programmes perhaps derived from the model of the courtroom where the normal constraints against tough lines of questioning are relaxed
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:52.939
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt but they begin at the beginning with three works derived from the greeks the first is euripidess dramatised cantata of desolation the trojan women
# ::tok but they begin at the beginning with three works derived from the greeks the first is euripidess dramatised cantata of desolation the trojan women
# ::alignments 23-24|0.0 9-10|0.1.2.0 7-8|0.1.1 5-6|0.1.2 2-3|0.1 1-2|0.1.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:52.985
# ::node	0	contrast-01	0-1
# ::node	0.0	woman	23-24
# ::node	0.1	begin-01	2-3
# ::node	0.1.0	they	1-2
# ::node	0.1.1	3	7-8
# ::node	0.1.2	begin-01	5-6
# ::node	0.1.2.0	derive-01	9-10
# ::root	0	contrast-01
# ::edge	begin-01	ARG0	they	0.1	0.1.0	
# ::edge	begin-01	ARG1	3	0.1	0.1.1	
# ::edge	begin-01	time	begin-01	0.1	0.1.2	
# ::edge	contrast-01	ARG1	woman	0	0.0	
# ::edge	contrast-01	ARG2	begin-01	0	0.1	
# ::edge	derive-01	ARG1	begin-01	0.1.2.0	0.1.2	
(c / contrast-01 
      :ARG1 (w / woman) 
      :ARG2 (b2 / begin-01 
            :ARG0 (t / they) 
            :ARG1 3 
            :time (b / begin-01 
                  :ARG1-of (d / derive-01))))

# ::snt a feature of the timisoara demonstration and of the last major protest against the regime in romanias second largest city of brasov in november 1987 was its spontaneity one derived from the sheer despair of its inhabitants
# ::tok a feature of the timisoara demonstration and of the last major protest against the regime in romanias second largest city of brasov in november 1987 was its spontaneity one derived from the sheer despair of its inhabitants
# ::alignments 36-37|0.1.1.0.1.0.0 33-34|0.1.1.0.1.0 32-33|0.0 29-30|0.1.1.0.1 27-28|0.1.1.0.0 23-25|0.1.1.0.2.0.1+0.1.1.0.2.0.0+0.1.1.0.2.0 19-20|0.1.0 18-19|0.1.0.0.0+0.1.0.0 14-15|0.1 11-12|0 10-11|0.2 9-10|0.3 6-7|0.1.1 5-6|0.1.1.0 1-2|0.1.1.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:53.195
# ::node	0	protest-01	11-12
# ::node	0.0	sheer	32-33
# ::node	0.1	regime	14-15
# ::node	0.1.0	city	19-20
# ::node	0.1.0.0	large	18-19
# ::node	0.1.0.0.0	most	18-19
# ::node	0.1.1	and	6-7
# ::node	0.1.1.0	demonstrate-01	5-6
# ::node	0.1.1.0.0	spontaneity	27-28
# ::node	0.1.1.0.1	derive-01	29-30
# ::node	0.1.1.0.1.0	despair-01	33-34
# ::node	0.1.1.0.1.0.0	inhabit-01	36-37
# ::node	0.1.1.0.2	feature-01	1-2
# ::node	0.1.1.0.2.0	date-entity	23-25
# ::node	0.1.1.0.2.0.0	11	23-25
# ::node	0.1.1.0.2.0.1	1987	23-25
# ::node	0.2	major	10-11
# ::node	0.3	last	9-10
# ::root	0	protest-01
# ::edge	and	op1	demonstrate-01	0.1.1	0.1.1.0	
# ::edge	and	op2	regime	0.1.1	0.1	
# ::edge	city	mod	large	0.1.0	0.1.0.0	
# ::edge	date-entity	month	11	0.1.1.0.2.0	0.1.1.0.2.0.0	
# ::edge	date-entity	year	1987	0.1.1.0.2.0	0.1.1.0.2.0.1	
# ::edge	demonstrate-01	ARG1	spontaneity	0.1.1.0	0.1.1.0.0	
# ::edge	derive-01	ARG1	demonstrate-01	0.1.1.0.1	0.1.1.0	
# ::edge	derive-01	ARG2	despair-01	0.1.1.0.1	0.1.1.0.1.0	
# ::edge	despair-01	ARG1	inhabit-01	0.1.1.0.1.0	0.1.1.0.1.0.0	
# ::edge	feature-01	ARG0	date-entity	0.1.1.0.2	0.1.1.0.2.0	
# ::edge	feature-01	ARG1	demonstrate-01	0.1.1.0.2	0.1.1.0	
# ::edge	large	degree	most	0.1.0.0	0.1.0.0.0	
# ::edge	protest-01	ARG0	sheer	0	0.0	
# ::edge	protest-01	ARG1	regime	0	0.1	
# ::edge	protest-01	mod	last	0	0.3	
# ::edge	protest-01	mod	major	0	0.2	
# ::edge	regime	location	city	0.1	0.1.0	
(p / protest-01 
      :ARG0 (s / sheer) 
      :ARG1 (r / regime 
            :location (c / city 
                  :mod (l / large 
                        :degree (m / most))) 
            :op-of (a / and 
                  :op1 (d4 / demonstrate-01 
                        :ARG1 (s2 / spontaneity) 
                        :ARG1-of (d2 / derive-01 
                              :ARG2 (d / despair-01 
                                    :ARG1 (i / inhabit-01))) 
                        :ARG1-of (f / feature-01 
                              :ARG0 (d3 / date-entity 
                                    :month 11 
                                    :year 1987))))) 
      :mod (m2 / major) 
      :mod (l2 / last))

# ::snt in the case of the railway companies it was a belief derived from a number of sources
# ::tok in the case of the railway companies it was a belief derived from a number of sources
# ::alignments 16-17|0.0.1 14-15|0.0.1.0 11-12|0.0 10-11|0 7-8|0.1 6-7|0.0.0 5-6|0.0.0.0 2-3|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:53.337
# ::node	0	believe-01	10-11
# ::node	0.0	derive-01	11-12
# ::node	0.0.0	company	6-7
# ::node	0.0.0.0	railway	5-6
# ::node	0.0.0.1	case	2-3
# ::node	0.0.1	source	16-17
# ::node	0.0.1.0	number	14-15
# ::node	0.1	it	7-8
# ::root	0	believe-01
# ::edge	believe-01	domain	it	0	0.1	
# ::edge	case	prep-for	company	0.0.0.1	0.0.0	
# ::edge	company	mod	railway	0.0.0	0.0.0.0	
# ::edge	derive-01	ARG0	company	0.0	0.0.0	
# ::edge	derive-01	ARG1	believe-01	0.0	0	
# ::edge	derive-01	ARG2	source	0.0	0.0.1	
# ::edge	source	quant	number	0.0.1	0.0.1.0	
(b / believe-01 
      :ARG1-of (d / derive-01 
            :ARG0 (c / company 
                  :mod (r / railway) 
                  :prep-for-of (c2 / case)) 
            :ARG2 (s / source 
                  :quant (n / number))) 
      :domain (i / it))

# ::snt those who engage in what is inaptly referred to as the sport may well argue that they derive some enjoyment from hunting
# ::tok those who engage in what is inaptly referred to as the sport may well argue that they derive some enjoyment from hunting
# ::alignments 21-22|0.1.0.0.0.0 19-20|0.1.0.0.0.1 18-19|0.1.0.0.0.1.0 17-18|0.1.0.0 16-17|0.1.0.0.0 14-15|0.1.0 13-14|0.1.0.2 12-13|0.1.0.1.0+0.1.0.1 11-12|0.0 7-8|0 2-3|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:53.396
# ::node	0	refer-01	7-8
# ::node	0.0	sport	11-12
# ::node	0.1	engage-01	2-3
# ::node	0.1.0	argue-01	14-15
# ::node	0.1.0.0	derive-01	17-18
# ::node	0.1.0.0.0	they	16-17
# ::node	0.1.0.0.0.0	hunt-01	21-22
# ::node	0.1.0.0.0.1	enjoy-01	19-20
# ::node	0.1.0.0.0.1.0	some	18-19
# ::node	0.1.0.1	date-entity	12-13
# ::node	0.1.0.1.0	5	12-13
# ::node	0.1.0.2	well	13-14
# ::root	0	refer-01
# ::edge	argue-01	ARG0	engage-01	0.1.0	0.1	
# ::edge	argue-01	ARG1	derive-01	0.1.0	0.1.0.0	
# ::edge	argue-01	mod	well	0.1.0	0.1.0.2	
# ::edge	date-entity	domain	argue-01	0.1.0.1	0.1.0	
# ::edge	date-entity	month	5	0.1.0.1	0.1.0.1.0	
# ::edge	derive-01	ARG0	they	0.1.0.0	0.1.0.0.0	
# ::edge	engage-01	manner	refer-01	0.1	0	
# ::edge	enjoy-01	ARG0	they	0.1.0.0.0.1	0.1.0.0.0	
# ::edge	enjoy-01	quant	some	0.1.0.0.0.1	0.1.0.0.0.1.0	
# ::edge	hunt-01	ARG0	they	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	refer-01	ARG1	sport	0	0.0	
(r / refer-01 
      :ARG1 (s2 / sport) 
      :manner-of (e2 / engage-01 
            :ARG0-of (a / argue-01 
                  :ARG1 (d / derive-01 
                        :ARG0 (t / they 
                              :ARG0-of (h / hunt-01) 
                              :ARG0-of (e / enjoy-01 
                                    :quant (s / some)))) 
                  :domain-of (d2 / date-entity 
                        :month 5) 
                  :mod (w / well))))

# ::snt the same cannot be said of tour de france 1990 c4 which spoils a lot of nice views of french countryside by intruding an unaesthetic snake of bicyclists into the picture at all times but the coverage included an interesting item about the caravan publicitaire a procession of cars and vans and novelty vehicles which covers the route ahead of the racers and distributes plastic carrier bags and similar tat to the overexcited populace and derives much publicity and goodwill for the commercial sponsors
# ::tok the same cannot be said of tour de france 1990 c4 which spoils a lot of nice views of french countryside by intruding an unaesthetic snake of bicyclists into the picture at all times but the coverage included an interesting item about the caravan publicitaire a procession of cars and vans and novelty vehicles which covers the route ahead of the racers and distributes plastic carrier bags and similar tat to the overexcited populace and derives much publicity and goodwill for the commercial sponsors
# ::alignments 83-84|0.0.1.0 82-83|0.0.1.0.0 79-80|0.0.1.1 78-79|0.0.1 77-78|0.0.0 76-77|0.0.0.0 74-75|0.0 73-74|0.0.1.1.0 67-68|0.0.1.1.0.0 66-67|0.0.1.1.0.0.1 65-66|0.0.1.1.0.0.1.0 64-65|0.0.1.1.0.0.1.1 62-63|0.0.1.1.0.0.0 58-59|0.0.1.1.0.0.0.0.4 57-58|0.0.1.1.0.0.0.0.1 55-56|0.0.1.1.0.0.0.0 53-54|0.0.1.1.0.0.0.0.0 52-53|0.0.1.1.0.0.0.0.0.0 51-52|0.0.1.1.0.0.0.0.2 49-50|0.0.1.1.0.0.0.0.2.0.2.1 48-49|0.0.1.1.0.0.0.0.2.2 46-47|0.0.1.1.0.0.0.0.2.1 40-41|0.0.1.1.0.0.0.0.2.0.2.0 39-40|0.0.1.1.0.0.0.0.2.0.2.0.0 37-38|0.0.1.1.0.0.0.0.2.0.2 36-37|0.0.1.1.0.0.0.0.2.0.2.2 34-35|0.0.1.1.0.0.0.0.2.0 32-33|0.0.1.1.0.0.0.0.3 30-31|0.0.1.1.0.0.0.0.2.0.1 25-26|0.0.1.1.0.0.0.0.2.0.0 20-21|0.0.1.1.0.0.0.0.2.0.2.2.0.0 19-20|0.0.1.1.0.0.0.0.2.0.2.2.0.1.0+0.0.1.1.0.0.0.0.2.0.2.2.0.1+0.0.1.1.0.0.0.0.2.0.2.2.0 16-17|0.0.1.1.0.0.0.0.2.0.2.3 14-15|0.0.1.1.0.0.0.0.2.0.2.2.1 12-13|0.0.1.1.0.0.0.0.2.0.3 9-10|0.2.0.0+0.2.0 8-9|0.0.1.1.0.0.0.0.2.0.2.3.0.0.0+0.0.1.1.0.0.0.0.2.0.2.3.0.0+0.0.1.1.0.0.0.0.2.0.2.3.0 6-7|0.2 4-5|0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:55.483
# ::node	0	say-01	4-5
# ::node	0.0	and	74-75
# ::node	0.0.0	publicity	77-78
# ::node	0.0.0.0	much	76-77
# ::node	0.0.1	and	78-79
# ::node	0.0.1.0	sponsor-01	83-84
# ::node	0.0.1.0.0	commerce	82-83
# ::node	0.0.1.1	goodwill	79-80
# ::node	0.0.1.1.0	populace	73-74
# ::node	0.0.1.1.0.0	and	67-68
# ::node	0.0.1.1.0.0.0	and	62-63
# ::node	0.0.1.1.0.0.0.0	cover-01	55-56
# ::node	0.0.1.1.0.0.0.0.0	vehicle	53-54
# ::node	0.0.1.1.0.0.0.0.0.0	novelty	52-53
# ::node	0.0.1.1.0.0.0.0.1	route	57-58
# ::node	0.0.1.1.0.0.0.0.2	and	51-52
# ::node	0.0.1.1.0.0.0.0.2.0	contrast-01	34-35
# ::node	0.0.1.1.0.0.0.0.2.0.0	snake	25-26
# ::node	0.0.1.1.0.0.0.0.2.0.1	picture	30-31
# ::node	0.0.1.1.0.0.0.0.2.0.2	include-01	37-38
# ::node	0.0.1.1.0.0.0.0.2.0.2.0	item	40-41
# ::node	0.0.1.1.0.0.0.0.2.0.2.0.0	interesting	39-40
# ::node	0.0.1.1.0.0.0.0.2.0.2.1	and	49-50
# ::node	0.0.1.1.0.0.0.0.2.0.2.2	cover-03	36-37
# ::node	0.0.1.1.0.0.0.0.2.0.2.2.0	country	19-20
# ::node	0.0.1.1.0.0.0.0.2.0.2.2.0.0	countryside	20-21
# ::node	0.0.1.1.0.0.0.0.2.0.2.2.0.1	name	19-20
# ::node	0.0.1.1.0.0.0.0.2.0.2.2.0.1.0	"France"	19-20
# ::node	0.0.1.1.0.0.0.0.2.0.2.2.1	lot	14-15
# ::node	0.0.1.1.0.0.0.0.2.0.2.3	nice-42	16-17
# ::node	0.0.1.1.0.0.0.0.2.0.2.3.0	country	8-9
# ::node	0.0.1.1.0.0.0.0.2.0.2.3.0.0	name	8-9
# ::node	0.0.1.1.0.0.0.0.2.0.2.3.0.0.0	"France"	8-9
# ::node	0.0.1.1.0.0.0.0.2.0.3	spoil	12-13
# ::node	0.0.1.1.0.0.0.0.2.1	procession	46-47
# ::node	0.0.1.1.0.0.0.0.2.2	car	48-49
# ::node	0.0.1.1.0.0.0.0.3	all	32-33
# ::node	0.0.1.1.0.0.0.0.4	ahead	58-59
# ::node	0.0.1.1.0.0.1	bag	66-67
# ::node	0.0.1.1.0.0.1.0	carrier	65-66
# ::node	0.0.1.1.0.0.1.1	plastic	64-65
# ::node	0.1	same-41	1-2
# ::node	0.2	tour-01	6-7
# ::node	0.2.0	date-entity	9-10
# ::node	0.2.0.0	1990	9-10
# ::root	0	say-01
# ::edge	all	op1	cover-01	0.0.1.1.0.0.0.0.3	0.0.1.1.0.0.0.0	
# ::edge	and	op1	bag	0.0.1.1.0.0	0.0.1.1.0.0.1	
# ::edge	and	op1	contrast-01	0.0.1.1.0.0.0.0.2	0.0.1.1.0.0.0.0.2.0	
# ::edge	and	op1	cover-01	0.0.1.1.0.0.0	0.0.1.1.0.0.0.0	
# ::edge	and	op1	goodwill	0.0.1	0.0.1.1	
# ::edge	and	op1	publicity	0.0	0.0.0	
# ::edge	and	op2	and	0.0	0.0.1	
# ::edge	and	op2	and	0.0.1.1.0.0.0	0.0.1.1.0.0	
# ::edge	and	op2	populace	0.0.1.1.0.0	0.0.1.1.0	
# ::edge	and	op2	procession	0.0.1.1.0.0.0.0.2	0.0.1.1.0.0.0.0.2.1	
# ::edge	and	op3	car	0.0.1.1.0.0.0.0.2	0.0.1.1.0.0.0.0.2.2	
# ::edge	and	op4	cover-01	0.0.1.1.0.0.0.0.2	0.0.1.1.0.0.0.0	
# ::edge	bag	mod	plastic	0.0.1.1.0.0.1	0.0.1.1.0.0.1.1	
# ::edge	carrier	consist	bag	0.0.1.1.0.0.1.0	0.0.1.1.0.0.1	
# ::edge	contrast-01	ARG0	snake	0.0.1.1.0.0.0.0.2.0	0.0.1.1.0.0.0.0.2.0.0	
# ::edge	contrast-01	ARG1	picture	0.0.1.1.0.0.0.0.2.0	0.0.1.1.0.0.0.0.2.0.1	
# ::edge	contrast-01	ARG2	include-01	0.0.1.1.0.0.0.0.2.0	0.0.1.1.0.0.0.0.2.0.2	
# ::edge	country	name	name	0.0.1.1.0.0.0.0.2.0.2.2.0	0.0.1.1.0.0.0.0.2.0.2.2.0.1	
# ::edge	country	name	name	0.0.1.1.0.0.0.0.2.0.2.3.0	0.0.1.1.0.0.0.0.2.0.2.3.0.0	
# ::edge	countryside	mod	country	0.0.1.1.0.0.0.0.2.0.2.2.0.0	0.0.1.1.0.0.0.0.2.0.2.2.0	
# ::edge	cover-01	ARG0	vehicle	0.0.1.1.0.0.0.0	0.0.1.1.0.0.0.0.0	
# ::edge	cover-01	ARG1	route	0.0.1.1.0.0.0.0	0.0.1.1.0.0.0.0.1	
# ::edge	cover-01	time	ahead	0.0.1.1.0.0.0.0	0.0.1.1.0.0.0.0.4	
# ::edge	cover-03	ARG0	country	0.0.1.1.0.0.0.0.2.0.2.2	0.0.1.1.0.0.0.0.2.0.2.2.0	
# ::edge	cover-03	ARG1	lot	0.0.1.1.0.0.0.0.2.0.2.2	0.0.1.1.0.0.0.0.2.0.2.2.1	
# ::edge	date-entity	year	1990	0.2.0	0.2.0.0	
# ::edge	goodwill	prep-against	populace	0.0.1.1	0.0.1.1.0	
# ::edge	include-01	ARG0	item	0.0.1.1.0.0.0.0.2.0.2	0.0.1.1.0.0.0.0.2.0.2.0	
# ::edge	include-01	ARG1	and	0.0.1.1.0.0.0.0.2.0.2	0.0.1.1.0.0.0.0.2.0.2.1	
# ::edge	include-01	ARG2	cover-03	0.0.1.1.0.0.0.0.2.0.2	0.0.1.1.0.0.0.0.2.0.2.2	
# ::edge	item	mod	interesting	0.0.1.1.0.0.0.0.2.0.2.0	0.0.1.1.0.0.0.0.2.0.2.0.0	
# ::edge	name	op1	"France"	0.0.1.1.0.0.0.0.2.0.2.2.0.1	0.0.1.1.0.0.0.0.2.0.2.2.0.1.0	
# ::edge	name	op1	"France"	0.0.1.1.0.0.0.0.2.0.2.3.0.0	0.0.1.1.0.0.0.0.2.0.2.3.0.0.0	
# ::edge	nice-42	ARG0	country	0.0.1.1.0.0.0.0.2.0.2.3	0.0.1.1.0.0.0.0.2.0.2.3.0	
# ::edge	nice-42	ARG2	include-01	0.0.1.1.0.0.0.0.2.0.2.3	0.0.1.1.0.0.0.0.2.0.2	
# ::edge	publicity	quant	much	0.0.0	0.0.0.0	
# ::edge	same-41	ARG1	say-01	0.1	0	
# ::edge	say-01	ARG1	and	0	0.0	
# ::edge	say-01	time	tour-01	0	0.2	
# ::edge	spoil	op1	contrast-01	0.0.1.1.0.0.0.0.2.0.3	0.0.1.1.0.0.0.0.2.0	
# ::edge	sponsor-01	ARG0	and	0.0.1.0	0.0.1	
# ::edge	sponsor-01	mod	commerce	0.0.1.0	0.0.1.0.0	
# ::edge	tour-01	time	date-entity	0.2	0.2.0	
# ::edge	vehicle	mod	novelty	0.0.1.1.0.0.0.0.0	0.0.1.1.0.0.0.0.0.0	
(s4 / say-01 
      :ARG1 (a2 / and 
            :op1 (p / publicity 
                  :quant (m / much)) 
            :op2 (a / and 
                  :ARG0-of (s / sponsor-01 
                        :mod (c / commerce)) 
                  :op1 (g / goodwill 
                        :prep-against (p2 / populace 
                              :op-of (a3 / and 
                                    :op-of (a4 / and 
                                          :op1 (c3 / cover-01 
                                                :ARG0 (v / vehicle 
                                                      :mod (n / novelty)) 
                                                :ARG1 (r / route) 
                                                :op-of (a6 / and 
                                                      :op1 (c6 / contrast-01 
                                                            :ARG0 (s2 / snake) 
                                                            :ARG1 (p5 / picture) 
                                                            :ARG2 (i3 / include-01 
                                                                  :ARG0 (i / item 
                                                                        :mod (i2 / interesting)) 
                                                                  :ARG1 (a7 / and) 
                                                                  :ARG2 (c5 / cover-03 
                                                                        :ARG0 (c8 / country 
                                                                              :mod-of (c7 / countryside) 
                                                                              :name (n2 / name 
                                                                                    :op1 "France")) 
                                                                        :ARG1 (l / lot)) 
                                                                  :ARG2-of (n3 / nice-42 
                                                                        :ARG0 (c9 / country 
                                                                              :name (n4 / name 
                                                                                    :op1 "France")))) 
                                                            :op-of (s3 / spoil)) 
                                                      :op2 (p4 / procession) 
                                                      :op3 (c4 / car)) 
                                                :op-of (a8 / all) 
                                                :time (a5 / ahead))) 
                                    :op1 (b / bag 
                                          :consist-of (c2 / carrier) 
                                          :mod (p3 / plastic))))))) 
      :ARG1-of (s5 / same-41) 
      :time (t / tour-01 
            :time (d / date-entity 
                  :year 1990)))

# ::snt even though deontological and teleological considerations are distinct they derive from a common moral core
# ::tok even though deontological and teleological considerations are distinct they derive from a common moral core
# ::alignments 14-15|0.0.1.1 13-14|0.0.1.1.1 12-13|0.0.1.1.0 9-10|0.0.1 8-9|0.0.1.0 7-8|0 5-6|0.0 3-4|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:55.538
# ::node	0	distinct	7-8
# ::node	0.0	consider-01	5-6
# ::node	0.0.0	and	3-4
# ::node	0.0.1	derive-01	9-10
# ::node	0.0.1.0	they	8-9
# ::node	0.0.1.1	core	14-15
# ::node	0.0.1.1.0	common	12-13
# ::node	0.0.1.1.1	moral	13-14
# ::root	0	distinct
# ::edge	consider-01	ARG1	and	0.0	0.0.0	
# ::edge	core	mod	common	0.0.1.1	0.0.1.1.0	
# ::edge	core	mod	moral	0.0.1.1	0.0.1.1.1	
# ::edge	derive-01	ARG0	they	0.0.1	0.0.1.0	
# ::edge	derive-01	ARG1	consider-01	0.0.1	0.0	
# ::edge	derive-01	ARG2	core	0.0.1	0.0.1.1	
# ::edge	distinct	domain	consider-01	0	0.0	
(d2 / distinct 
      :domain (c3 / consider-01 
            :ARG1 (a / and) 
            :ARG1-of (d / derive-01 
                  :ARG0 (t / they) 
                  :ARG2 (c / core 
                        :mod (c2 / common) 
                        :mod (m / moral)))))

# ::snt the declining historical significance of nationalism is today concealed not only by the visible spread of ethnic  linguistic agitations but also by the semantic illusion which derives from the fact that all states are today officially nations though many of them patently have nothing in common with what the term nationstate is commonly held to mean that therefore all movements seeking to win independence think of themselves as establishing nations even when they are patently not doing so and that centralisation and state bureaucracy will if they possibly can put on the fashionable national costume
# ::tok the declining historical significance of nationalism is today concealed not only by the visible spread of ethnic linguistic agitations but also by the semantic illusion which derives from the fact that all states are today officially nations though many of them patently have nothing in common with what the term nationstate is commonly held to mean that therefore all movements seeking to win independence think of themselves as establishing nations even when they are patently not doing so and that centralisation and state bureaucracy will if they possibly can put on the fashionable national costume
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:55.540
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt from this concept which he proposed 40 years ago much of the current interest in fish oils and vegetable oils has been derived
# ::tok from this concept which he proposed 40 years ago much of the current interest in fish oils and vegetable oils has been derived
# ::alignments 22-23|0.1.0 17-18|0.0 15-16|0.1.0.0.0.1 13-14|0 12-13|0.3 9-10|0.2 7-8|0.1.2+0.1 6-7|0.1.1 5-6|0.1.0.0.0 4-5|0.1.0.0 2-3|0.1.0.0.0.0 1-2|0.1.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:55.882
# ::node	0	interest-01	13-14
# ::node	0.0	and	17-18
# ::node	0.1	temporal-quantity	7-8
# ::node	0.1.0	derive-01	22-23
# ::node	0.1.0.0	he	4-5
# ::node	0.1.0.0.0	propose-01	5-6
# ::node	0.1.0.0.0.0	concept	2-3
# ::node	0.1.0.0.0.0.0	this	1-2
# ::node	0.1.0.0.0.1	fish	15-16
# ::node	0.1.1	40	6-7
# ::node	0.1.2	year	7-8
# ::node	0.2	much	9-10
# ::node	0.3	current	12-13
# ::root	0	interest-01
# ::edge	concept	mod	this	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	derive-01	ARG0	he	0.1.0	0.1.0.0	
# ::edge	derive-01	ARG1	temporal-quantity	0.1.0	0.1	
# ::edge	fish	op1	propose-01	0.1.0.0.0.1	0.1.0.0.0	
# ::edge	interest-01	ARG1	and	0	0.0	
# ::edge	interest-01	ARG2	temporal-quantity	0	0.1	
# ::edge	interest-01	time	current	0	0.3	
# ::edge	much	op1	interest-01	0.2	0	
# ::edge	propose-01	ARG0	he	0.1.0.0.0	0.1.0.0	
# ::edge	propose-01	ARG1	concept	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	temporal-quantity	quant	40	0.1	0.1.1	
# ::edge	temporal-quantity	unit	year	0.1	0.1.2	
(i / interest-01 
      :ARG1 (a / and) 
      :ARG2 (t / temporal-quantity 
            :ARG1-of (d / derive-01 
                  :ARG0 (h / he 
                        :ARG0-of (p / propose-01 
                              :ARG1 (c2 / concept 
                                    :mod (t2 / this)) 
                              :op-of (f / fish)))) 
            :quant 40 
            :unit (y / year)) 
      :op-of (m / much) 
      :time (c / current))

# ::snt there is the mysterious indian d with customs that may derive from fire worship
# ::tok there is the mysterious indian d with customs that may derive from fire worship
# ::alignments 13-14|0 10-11|0.0 9-10|0.0.2.0+0.0.2 7-8|0.0.1 5-6|0.0.0 3-4|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:55.906
# ::node	0	worship-01	13-14
# ::node	0.0	derive-01	10-11
# ::node	0.0.0	d	5-6
# ::node	0.0.0.0	mystery	3-4
# ::node	0.0.1	customs	7-8
# ::node	0.0.2	date-entity	9-10
# ::node	0.0.2.0	5	9-10
# ::root	0	worship-01
(w / worship-01 
      :ARG2-of (d / derive-01 
            :ARG0 (d3 / d 
                  :mod (m / mystery)) 
            :ARG1 (c / customs) 
            :mod (d2 / date-entity 
                  :month 5)))

# ::snt he was a big man in every sense of that word paternalistic without being condescending and derived as much pleasure if not more from having a game of tabletennis or chatting with the lads as having a convivial social evening outside
# ::tok he was a big man in every sense of that word paternalistic without being condescending and derived as much pleasure if not more from having a game of tabletennis or chatting with the lads as having a convivial social evening outside
# ::alignments 40-41|0.0.3.0.0 39-40|0.0.3.0 38-39|0.0.3 29-30|0.1 26-27|0.1.0 19-20|0.0.2 18-19|0.0.2.0 16-17|0.0 15-16|0 10-11|0.0.1 7-8|0.0.0.0.1 6-7|0.0.0.0.1.0 4-5|0.0.0.0 3-4|0.0.0.0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:56.123
# ::node	0	and	15-16
# ::node	0.0	derive-01	16-17
# ::node	0.0.0	he	0-1
# ::node	0.0.0.0	man	4-5
# ::node	0.0.0.0.0	big	3-4
# ::node	0.0.0.0.1	sense	7-8
# ::node	0.0.0.0.1.0	every	6-7
# ::node	0.0.1	word	10-11
# ::node	0.0.2	pleasure	19-20
# ::node	0.0.2.0	much	18-19
# ::node	0.0.3	society	38-39
# ::node	0.0.3.0	evening	39-40
# ::node	0.0.3.0.0	outside	40-41
# ::node	0.1	or	29-30
# ::node	0.1.0	game	26-27
# ::root	0	and
# ::edge	and	op1	derive-01	0	0.0	
# ::edge	and	op2	or	0	0.1	
# ::edge	derive-01	ARG0	he	0.0	0.0.0	
# ::edge	derive-01	ARG1	word	0.0	0.0.1	
# ::edge	derive-01	location	pleasure	0.0	0.0.2	
# ::edge	evening	location	outside	0.0.3.0	0.0.3.0.0	
# ::edge	evening	mod	society	0.0.3.0	0.0.3	
# ::edge	man	domain	he	0.0.0.0	0.0.0	
# ::edge	man	mod	big	0.0.0.0	0.0.0.0.0	
# ::edge	man	poss	sense	0.0.0.0	0.0.0.0.1	
# ::edge	or	op1	game	0.1	0.1.0	
# ::edge	pleasure	quant	much	0.0.2	0.0.2.0	
# ::edge	sense	domain	every	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	society	op1	derive-01	0.0.3	0.0	
(a / and 
      :op1 (d / derive-01 
            :ARG0 (h / he 
                  :domain-of (m2 / man 
                        :mod (b / big) 
                        :poss (s2 / sense 
                              :domain (e2 / every)))) 
            :ARG1 (w / word) 
            :location (p / pleasure 
                  :quant (m / much)) 
            :op-of (s / society 
                  :mod-of (e / evening 
                        :location (o / outside)))) 
      :op2 (o2 / or 
            :op1 (g / game)))

# ::snt his success derives partly from his shrewd understanding that fantasy needs to be built on a solid base of prosaic reality
# ::tok his success derives partly from his shrewd understanding that fantasy needs to be built on a solid base of prosaic reality
# ::alignments 20-21|0.0.0 19-20|0.0.0.1 17-18|0 16-17|0.1 13-14|0.0 10-11|0.0.1 9-10|0.0.1.0 7-8|0.0.0.0 3-4|0.0.0.0.0 1-2|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:56.382
# ::node	0	base	17-18
# ::node	0.0	build-01	13-14
# ::node	0.0.0	reality	20-21
# ::node	0.0.0.0	understand-01	7-8
# ::node	0.0.0.0.0	partly	3-4
# ::node	0.0.0.0.1	succeed-01	1-2
# ::node	0.0.0.1	prosaic	19-20
# ::node	0.0.1	need-01	10-11
# ::node	0.0.1.0	fantasy	9-10
# ::node	0.1	solid	16-17
# ::root	0	base
# ::edge	base	mod	solid	0	0.1	
# ::edge	build-01	ARG0	base	0.0	0	
# ::edge	build-01	ARG1	reality	0.0	0.0.0	
# ::edge	need-01	ARG0	fantasy	0.0.1	0.0.1.0	
# ::edge	need-01	ARG1	build-01	0.0.1	0.0	
# ::edge	reality	mod	prosaic	0.0.0	0.0.0.1	
# ::edge	succeed-01	time	understand-01	0.0.0.0.1	0.0.0.0	
# ::edge	understand-01	ARG0	partly	0.0.0.0	0.0.0.0.0	
# ::edge	understand-01	ARG1	reality	0.0.0.0	0.0.0	
(b / base 
      :ARG0-of (b2 / build-01 
            :ARG1 (r / reality 
                  :ARG1-of (u / understand-01 
                        :ARG0 (p2 / partly) 
                        :time-of (s2 / succeed-01)) 
                  :mod (p / prosaic)) 
            :ARG1-of (n / need-01 
                  :ARG0 (f / fantasy))) 
      :mod (s / solid))

# ::snt is this your concept of the dignity of the profession  cannot you entertain the notion that people and not only academics take pride in what they do derive satisfaction from doing it well
# ::tok is this your concept of the dignity of the profession cannot you entertain the notion that people and not only academics take pride in what they do derive satisfaction from doing it well
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:56.384
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt concerning the general foundation of morals whether they be derived from reason or from sentiment
# ::tok concerning the general foundation of morals whether they be derived from reason or from sentiment
# ::alignments 14-15|0.1.2 12-13|0.1 11-12|0.1.1 9-10|0.1.0 7-8|0.1.0.0 5-6|0.0.1 3-4|0.0 2-3|0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:56.538
# ::node	0	concern-02	0-1
# ::node	0.0	foundation	3-4
# ::node	0.0.0	general	2-3
# ::node	0.0.1	moral	5-6
# ::node	0.1	or	12-13
# ::node	0.1.0	derive-01	9-10
# ::node	0.1.0.0	they	7-8
# ::node	0.1.1	reason	11-12
# ::node	0.1.2	sentiment	14-15
# ::root	0	concern-02
# ::edge	concern-02	ARG1	foundation	0	0.0	
# ::edge	derive-01	ARG1	they	0.1.0	0.1.0.0	
# ::edge	foundation	mod	general	0.0	0.0.0	
# ::edge	foundation	mod	moral	0.0	0.0.1	
# ::edge	or	op1	concern-02	0.1	0	
# ::edge	or	op2	derive-01	0.1	0.1.0	
# ::edge	or	op3	reason	0.1	0.1.1	
# ::edge	or	op4	sentiment	0.1	0.1.2	
(c / concern-02 
      :ARG1 (f / foundation 
            :mod (g / general) 
            :mod (m / moral)) 
      :op-of (o / or 
            :op1 (d / derive-01 
                  :ARG1 (t / they)) 
            :op2 (r / reason) 
            :op3 (s / sentiment)))

# ::snt a good part of the difficulty is derived directly from the structure of social and cultural values discussed earlier in this book
# ::tok a good part of the difficulty is derived directly from the structure of social and cultural values discussed earlier in this book
# ::alignments 21-22|0.1.0.2.0 20-21|0.1.0.2.0.0 18-19|0.1.0.2 17-18|0.1.0 16-17|0.1 15-16|0.1.1 14-15|0.1.0.1 13-14|0.1.0.1.1 11-12|0.1.0.1.0 8-9|0.2 7-8|0 5-6|0.0 1-2|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:56.799
# ::node	0	derive-01	7-8
# ::node	0.0	difficult	5-6
# ::node	0.1	value	16-17
# ::node	0.1.0	discuss-01	17-18
# ::node	0.1.0.0	good	1-2
# ::node	0.1.0.1	and	14-15
# ::node	0.1.0.1.0	structure	11-12
# ::node	0.1.0.1.1	society	13-14
# ::node	0.1.0.2	early	18-19
# ::node	0.1.0.2.0	book	21-22
# ::node	0.1.0.2.0.0	this	20-21
# ::node	0.1.1	culture	15-16
# ::node	0.2	direct	8-9
# ::root	0	derive-01
# ::edge	and	consist	structure	0.1.0.1	0.1.0.1.0	
# ::edge	and	op1	society	0.1.0.1	0.1.0.1.1	
# ::edge	and	op2	discuss-01	0.1.0.1	0.1.0	
# ::edge	book	mod	early	0.1.0.2.0	0.1.0.2	
# ::edge	book	mod	this	0.1.0.2.0	0.1.0.2.0.0	
# ::edge	derive-01	ARG1	difficult	0	0.0	
# ::edge	derive-01	ARG2	value	0	0.1	
# ::edge	derive-01	manner	direct	0	0.2	
# ::edge	discuss-01	ARG0	good	0.1.0	0.1.0.0	
# ::edge	discuss-01	ARG1	value	0.1.0	0.1	
# ::edge	discuss-01	time	early	0.1.0	0.1.0.2	
# ::edge	value	mod	culture	0.1	0.1.1	
(d3 / derive-01 
      :ARG1 (d4 / difficult) 
      :ARG2 (v / value 
            :ARG1-of (d / discuss-01 
                  :ARG0 (g / good) 
                  :op-of (a / and 
                        :consist (s2 / structure) 
                        :op1 (s / society)) 
                  :time (e / early 
                        :mod-of (b / book 
                              :mod (t / this)))) 
            :mod (c / culture)) 
      :manner (d2 / direct))

# ::snt from this initiative derived a number of labour colleges in the coalfields industrial cities and especially in south wales and scotland
# ::tok from this initiative derived a number of labour colleges in the coalfields industrial cities and especially in south wales and scotland
# ::alignments 20-21|0.1.2.0.0+0.1.2.0+0.1.2 19-20|0.1 17-18|0.1.1 15-16|0.1.0 14-15|0 13-14|0.0.1.0 12-13|0.0.1.0.0 8-9|0.0.1.1 7-8|0.0.1.1.0 5-6|0.0.1 3-4|0.0 2-3|0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:57.232
# ::node	0	and	14-15
# ::node	0.0	derive-01	3-4
# ::node	0.0.0	initiative	2-3
# ::node	0.0.0.0	this	1-2
# ::node	0.0.1	number	5-6
# ::node	0.0.1.0	city	13-14
# ::node	0.0.1.0.0	industry	12-13
# ::node	0.0.1.1	college	8-9
# ::node	0.0.1.1.0	labour	7-8
# ::node	0.1	and	19-20
# ::node	0.1.0	especially	15-16
# ::node	0.1.1	south	17-18
# ::node	0.1.2	country	20-21
# ::node	0.1.2.0	name	20-21
# ::node	0.1.2.0.0	"Scotland"	20-21
# ::root	0	and
(a2 / and 
      :ARG2-of (d / derive-01 
            :ARG0 (i2 / initiative 
                  :mod (t / this)) 
            :ARG1 (n2 / number 
                  :location (c2 / city 
                        :mod (i / industry)) 
                  :quant-of (c3 / college 
                        :mod (l / labour)))) 
      :op-of (a / and 
            :op-of (e / especially) 
            :op1 (s / south) 
            :op2 (c / country 
                  :name (n / name 
                        :op1 "Scotland"))))

# ::snt most of the andean stations have an abandoned air and see few trains although those in the capital cities derive a certain faded grandeur from the fact that their buildings often incorporate the headquarters of the railway companies
# ::tok most of the andean stations have an abandoned air and see few trains although those in the capital cities derive a certain faded grandeur from the fact that their buildings often incorporate the headquarters of the railway companies
# ::alignments 37-38|0.1.1.1.0 36-37|0.1.1.1.0.0 33-34|0.1.1.1 30-31|0.1.1.2.0.0.0.0 29-30|0.1.1.1.1 26-27|0.1.1.2 22-23|0.1.1.2.0.0.0 21-22|0.1.0.0.0 19-20|0.1.1 18-19|0.1.1.0 17-18|0.1.1.0.0 12-13|0.1.0 11-12|0.1.0.1 10-11|0.1 9-10|0 8-9|0.0 7-8|0.1.0.0 4-5|0.1.1.2.0 0-1|0.1.1.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:57.477
# ::node	0	and	9-10
# ::node	0.0	air	8-9
# ::node	0.1	see-01	10-11
# ::node	0.1.0	train	12-13
# ::node	0.1.0.0	abandon-01	7-8
# ::node	0.1.0.0.0	certain	21-22
# ::node	0.1.0.1	few	11-12
# ::node	0.1.1	derive-01	19-20
# ::node	0.1.1.0	city	18-19
# ::node	0.1.1.0.0	capital	17-18
# ::node	0.1.1.1	headquarters	33-34
# ::node	0.1.1.1.0	company	37-38
# ::node	0.1.1.1.0.0	railway	36-37
# ::node	0.1.1.1.1	building	29-30
# ::node	0.1.1.2	fact	26-27
# ::node	0.1.1.2.0	station	4-5
# ::node	0.1.1.2.0.0	most	0-1
# ::node	0.1.1.2.0.0.0	fade-01	22-23
# ::node	0.1.1.2.0.0.0.0	often	30-31
# ::root	0	and
# ::edge	abandon-01	ARG0	certain	0.1.0.0	0.1.0.0.0	
# ::edge	abandon-01	ARG1	train	0.1.0.0	0.1.0	
# ::edge	and	op1	air	0	0.0	
# ::edge	and	op2	see-01	0	0.1	
# ::edge	capital	mod	city	0.1.1.0.0	0.1.1.0	
# ::edge	company	mod	railway	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	derive-01	ARG0	city	0.1.1	0.1.1.0	
# ::edge	derive-01	ARG1	headquarters	0.1.1	0.1.1.1	
# ::edge	derive-01	ARG2	fact	0.1.1	0.1.1.2	
# ::edge	fade-01	ARG0	often	0.1.1.2.0.0.0	0.1.1.2.0.0.0.0	
# ::edge	fade-01	ARG1	most	0.1.1.2.0.0.0	0.1.1.2.0.0	
# ::edge	headquarters	poss	building	0.1.1.1	0.1.1.1.1	
# ::edge	headquarters	poss	company	0.1.1.1	0.1.1.1.0	
# ::edge	see-01	ARG1	train	0.1	0.1.0	
# ::edge	see-01	condition	derive-01	0.1	0.1.1	
# ::edge	station	mod	fact	0.1.1.2.0	0.1.1.2	
# ::edge	station	quant	most	0.1.1.2.0	0.1.1.2.0.0	
# ::edge	train	quant	few	0.1.0	0.1.0.1	
(a / and 
      :op1 (a2 / air) 
      :op2 (s / see-01 
            :ARG1 (t / train 
                  :ARG1-of (a3 / abandon-01 
                        :ARG0 (c2 / certain)) 
                  :quant (f3 / few)) 
            :condition (d / derive-01 
                  :ARG0 (c3 / city 
                        :mod-of (c4 / capital)) 
                  :ARG1 (h / headquarters 
                        :poss (c / company 
                              :mod (r / railway)) 
                        :poss (b / building)) 
                  :ARG2 (f / fact 
                        :mod-of (s2 / station 
                              :quant (m / most 
                                    :ARG1-of (f2 / fade-01 
                                          :ARG0 (o / often))))))))

# ::snt from these his lordship derived the following guidelines
# ::tok from these his lordship derived the following guidelines
# ::alignments 7-8|0.0 4-5|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:57.483
# ::node	0	derive-01	4-5
# ::node	0.0	guideline	7-8
# ::root	0	derive-01
# ::edge	derive-01	ARG1	guideline	0	0.0	
(d / derive-01 
      :ARG1 (g / guideline))

# ::snt bank of montreal has set itself a target of deriving half its profits from us operations up from about 26 per cent last year
# ::tok bank of montreal has set itself a target of deriving half its profits from us operations up from about 26 per cent last year
# ::alignments 23-24|0.0.1.0 22-23|0.0.1.0.0 21-22|0.0.1.0.1.0+0.0.1.0.1 19-20|0.0.1 15-16|0.1 12-13|0 10-11|0.2 7-8|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:57.561
# ::node	0	profit-01	12-13
# ::node	0.0	target-01	7-8
# ::node	0.0.0	bank	0-1
# ::node	0.0.1	26	19-20
# ::node	0.0.1.0	year	23-24
# ::node	0.0.1.0.0	last	22-23
# ::node	0.0.1.0.1	monetary-quantity	21-22
# ::node	0.0.1.0.1.0	cent	21-22
# ::node	0.1	operation	15-16
# ::node	0.2	half	10-11
# ::root	0	profit-01
# ::edge	monetary-quantity	unit	cent	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	profit-01	ARG0	target-01	0	0.0	
# ::edge	profit-01	ARG1	operation	0	0.1	
# ::edge	profit-01	quant	half	0	0.2	
# ::edge	target-01	ARG0	bank	0.0	0.0.0	
# ::edge	target-01	ARG1	26	0.0	0.0.1	
# ::edge	year	mod	last	0.0.1.0	0.0.1.0.0	
# ::edge	year	part	monetary-quantity	0.0.1.0	0.0.1.0.1	
# ::edge	year	quant	26	0.0.1.0	0.0.1	
(p / profit-01 
      :ARG0 (t / target-01 
            :ARG0 (b / bank) 
            :ARG1 (2 / 26 
                  :quant-of (y / year 
                        :mod (l / last) 
                        :part (m / monetary-quantity 
                              :unit (c / cent))))) 
      :ARG1 (o / operation) 
      :quant (h / half))

# ::snt this is because the central disciplines over a new state derive from the world system of competitive and unequal states and the continuing struggle to preserve national independence
# ::tok this is because the central disciplines over a new state derive from the world system of competitive and unequal states and the continuing struggle to preserve national independence
# ::alignments 27-28|0.0.0.1.0.1.2.1+0.0.0.1.0.1.2 26-27|0.0.0.1.0.1.2.0 25-26|0.0.0.1.0.1 23-24|0.0.0.1.0 22-23|0.0.0.1.0.2 20-21|0.0.0.1 19-20|0.0 18-19|0.1+0 17-18|0.0.0.0 16-17|0.0.0 14-15|0.0.0.0.0 13-14|0.0.0.1.0.0 10-11|0.0.0.0.0.0 9-10|0.0.0.0.0.0.0 8-9|0.0.0.0.0.0.1 5-6|0.0.0.1.0.1.0 4-5|0.0.0.1.0.1.0.0 2-3|0.0.0.1.0.1.1 0-1|0.0.0.1.0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:57.733
# ::node	0	equal-01	18-19
# ::node	0.0	state	19-20
# ::node	0.0.0	compete-01	16-17
# ::node	0.0.0.0	and	17-18
# ::node	0.0.0.0.0	system	14-15
# ::node	0.0.0.0.0.0	derive-01	10-11
# ::node	0.0.0.0.0.0.0	state	9-10
# ::node	0.0.0.0.0.0.1	new	8-9
# ::node	0.0.0.1	and	20-21
# ::node	0.0.0.1.0	struggle-01	23-24
# ::node	0.0.0.1.0.0	world	13-14
# ::node	0.0.0.1.0.1	preserve-01	25-26
# ::node	0.0.0.1.0.1.0	discipline	5-6
# ::node	0.0.0.1.0.1.0.0	central	4-5
# ::node	0.0.0.1.0.1.1	cause-01	2-3
# ::node	0.0.0.1.0.1.1.0	this	0-1
# ::node	0.0.0.1.0.1.2	depend-01	27-28
# ::node	0.0.0.1.0.1.2.0	nation	26-27
# ::node	0.0.0.1.0.1.2.1	-	27-28
# ::node	0.0.0.1.0.2	continue-01	22-23
# ::node	0.1	-	18-19
# ::root	0	equal-01
# ::edge	and	op1	compete-01	0.0.0.1	0.0.0	
# ::edge	and	op1	system	0.0.0.0	0.0.0.0.0	
# ::edge	and	op2	compete-01	0.0.0.0	0.0.0	
# ::edge	and	op2	struggle-01	0.0.0.1	0.0.0.1.0	
# ::edge	cause-01	ARG0	preserve-01	0.0.0.1.0.1.1	0.0.0.1.0.1	
# ::edge	cause-01	ARG1	this	0.0.0.1.0.1.1	0.0.0.1.0.1.1.0	
# ::edge	compete-01	ARG1	state	0.0.0	0.0	
# ::edge	continue-01	ARG1	struggle-01	0.0.0.1.0.2	0.0.0.1.0	
# ::edge	depend-01	mod	nation	0.0.0.1.0.1.2	0.0.0.1.0.1.2.0	
# ::edge	depend-01	polarity	-	0.0.0.1.0.1.2	0.0.0.1.0.1.2.1	
# ::edge	derive-01	ARG0	state	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	derive-01	ARG1	system	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	derive-01	mod	new	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	discipline	mod	central	0.0.0.1.0.1.0	0.0.0.1.0.1.0.0	
# ::edge	equal-01	ARG1	state	0	0.0	
# ::edge	equal-01	polarity	-	0	0.1	
# ::edge	preserve-01	ARG0	discipline	0.0.0.1.0.1	0.0.0.1.0.1.0	
# ::edge	preserve-01	ARG1	depend-01	0.0.0.1.0.1	0.0.0.1.0.1.2	
# ::edge	struggle-01	ARG0	world	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	struggle-01	ARG1	preserve-01	0.0.0.1.0	0.0.0.1.0.1	
(e / equal-01 
      :ARG1 (s2 / state 
            :ARG1-of (c2 / compete-01 
                  :op-of (a2 / and 
                        :op1 (s3 / system 
                              :ARG1-of (d2 / derive-01 
                                    :ARG0 (s4 / state) 
                                    :mod (n2 / new)))) 
                  :op-of (a / and 
                        :op1 (s / struggle-01 
                              :ARG0 (w / world) 
                              :ARG1 (p / preserve-01 
                                    :ARG0 (d3 / discipline 
                                          :mod (c3 / central)) 
                                    :ARG0-of (c4 / cause-01 
                                          :ARG1 (t / this)) 
                                    :ARG1 (d / depend-01 
                                          :mod (n / nation) 
                                          :polarity -)) 
                              :ARG1-of (c / continue-01))))) 
      :polarity -)

# ::snt even when they hardly know each other and where women do not hide the pleasure they derive from such oldfashioned niceties
# ::tok even when they hardly know each other and where women do not hide the pleasure they derive from such oldfashioned niceties
# ::alignments 18-19|0.1.0.1.0.3 16-17|0 15-16|0.0 14-15|0.1 12-13|0.1.0 9-10|0.1.0.0 7-8|0.1.0.1 6-7|0.1.0.1.0.1 5-6|0.1.0.1.0.1.0 4-5|0.1.0.1.0 3-4|0.1.0.1.0.2 2-3|0.1.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:58.031
# ::node	0	derive-01	16-17
# ::node	0.0	they	15-16
# ::node	0.1	pleasure	14-15
# ::node	0.1.0	hide-01	12-13
# ::node	0.1.0.0	woman	9-10
# ::node	0.1.0.1	and	7-8
# ::node	0.1.0.1.0	know-01	4-5
# ::node	0.1.0.1.0.0	they	2-3
# ::node	0.1.0.1.0.1	other	6-7
# ::node	0.1.0.1.0.1.0	each	5-6
# ::node	0.1.0.1.0.2	hardly	3-4
# ::node	0.1.0.1.0.3	such	18-19
# ::root	0	derive-01
# ::edge	and	op1	hide-01	0.1.0.1	0.1.0	
# ::edge	derive-01	ARG0	they	0	0.0	
# ::edge	derive-01	ARG1	pleasure	0	0.1	
# ::edge	hide-01	ARG0	woman	0.1.0	0.1.0.0	
# ::edge	hide-01	ARG1	pleasure	0.1.0	0.1	
# ::edge	know-01	ARG0	they	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	know-01	ARG1	and	0.1.0.1.0	0.1.0.1	
# ::edge	know-01	ARG2	other	0.1.0.1.0	0.1.0.1.0.1	
# ::edge	know-01	mod	hardly	0.1.0.1.0	0.1.0.1.0.2	
# ::edge	other	mod	each	0.1.0.1.0.1	0.1.0.1.0.1.0	
# ::edge	such	op1	know-01	0.1.0.1.0.3	0.1.0.1.0	
(d / derive-01 
      :ARG0 (t / they) 
      :ARG1 (p / pleasure 
            :ARG1-of (h / hide-01 
                  :ARG0 (w / woman) 
                  :op-of (a / and 
                        :ARG1-of (k / know-01 
                              :ARG0 (t2 / they) 
                              :ARG2 (o / other 
                                    :mod (e / each)) 
                              :mod (h2 / hardly) 
                              :op-of (s / such))))))

# ::snt the contemporary defamation of their name manifestly derives from jewish and thereby christian hostility and prejudice
# ::tok the contemporary defamation of their name manifestly derives from jewish and thereby christian hostility and prejudice
# ::alignments 15-16|0.2.1.1 14-15|0.2.1 13-14|0.2.1.0 12-13|0.2.0.0+0.2.0+0.2 10-11|0 9-10|0.1.0.0+0.1.0+0.1 2-3|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:58.072
# ::node	0	and	10-11
# ::node	0.0	defame-01	2-3
# ::node	0.0.0	contemporary	1-2
# ::node	0.1	ethnic-group	9-10
# ::node	0.1.0	name	9-10
# ::node	0.1.0.0	"Jew"	9-10
# ::node	0.2	religious-group	12-13
# ::node	0.2.0	name	12-13
# ::node	0.2.0.0	"Christian"	12-13
# ::node	0.2.1	and	14-15
# ::node	0.2.1.0	hostility	13-14
# ::node	0.2.1.1	prejudice-01	15-16
# ::root	0	and
# ::edge	and	op1	defame-01	0	0.0	
# ::edge	and	op1	religious-group	0.2.1	0.2	
# ::edge	and	op2	ethnic-group	0	0.1	
# ::edge	and	op2	hostility	0.2.1	0.2.1.0	
# ::edge	and	op3	prejudice-01	0.2.1	0.2.1.1	
# ::edge	and	op3	religious-group	0	0.2	
# ::edge	defame-01	time	contemporary	0.0	0.0.0	
# ::edge	ethnic-group	name	name	0.1	0.1.0	
# ::edge	name	op1	"Christian"	0.2.0	0.2.0.0	
# ::edge	name	op1	"Jew"	0.1.0	0.1.0.0	
# ::edge	religious-group	name	name	0.2	0.2.0	
(a2 / and 
      :op1 (d / defame-01 
            :time (c / contemporary)) 
      :op2 (e / ethnic-group 
            :name (n2 / name 
                  :op1 "Jew")) 
      :op3 (r / religious-group 
            :name (n / name 
                  :op1 "Christian") 
            :op-of (a / and 
                  :op1 (h / hostility) 
                  :op2 (p / prejudice-01))))

# ::snt some will say that that requirement of respect is derived from the requirement to respect other persons some of whom have an interest in art
# ::tok some will say that that requirement of respect is derived from the requirement to respect other persons some of whom have an interest in art
# ::alignments 24-25|0.0.1.0.1.0.1 22-23|0.0.1.0.1.0 17-18|0.0.1.0.1.0.0 16-17|0.0.1.0.1 15-16|0.0.1.0.1.1 14-15|0.0.1.0 12-13|0.0.1 9-10|0.0 7-8|0.0.0.0 5-6|0.0.0 2-3|0 0-1|0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:58.426
# ::node	0	say-01	2-3
# ::node	0.0	derive-01	9-10
# ::node	0.0.0	require-01	5-6
# ::node	0.0.0.0	respect-01	7-8
# ::node	0.0.1	require-01	12-13
# ::node	0.0.1.0	respect-01	14-15
# ::node	0.0.1.0.0	some	0-1
# ::node	0.0.1.0.1	person	16-17
# ::node	0.0.1.0.1.0	interest-01	22-23
# ::node	0.0.1.0.1.0.0	some	17-18
# ::node	0.0.1.0.1.0.1	art	24-25
# ::node	0.0.1.0.1.1	other	15-16
# ::root	0	say-01
# ::edge	derive-01	ARG1	require-01	0.0	0.0.0	
# ::edge	derive-01	ARG2	require-01	0.0	0.0.1	
# ::edge	interest-01	ARG0	some	0.0.1.0.1.0	0.0.1.0.1.0.0	
# ::edge	interest-01	ARG1	person	0.0.1.0.1.0	0.0.1.0.1	
# ::edge	interest-01	ARG2	art	0.0.1.0.1.0	0.0.1.0.1.0.1	
# ::edge	person	mod	other	0.0.1.0.1	0.0.1.0.1.1	
# ::edge	require-01	ARG1	respect-01	0.0.1	0.0.1.0	
# ::edge	respect-01	ARG0	some	0.0.1.0	0.0.1.0.0	
# ::edge	respect-01	ARG1	person	0.0.1.0	0.0.1.0.1	
# ::edge	respect-01	ARG1	require-01	0.0.0.0	0.0.0	
# ::edge	say-01	ARG1	derive-01	0	0.0	
(s2 / say-01 
      :ARG1 (d / derive-01 
            :ARG1 (r4 / require-01 
                  :ARG1-of (r3 / respect-01)) 
            :ARG2 (r2 / require-01 
                  :ARG1 (r / respect-01 
                        :ARG0 (s3 / some) 
                        :ARG1 (p / person 
                              :ARG1-of (i / interest-01 
                                    :ARG0 (s / some) 
                                    :ARG2 (a / art)) 
                              :mod (o / other))))))

# ::snt have only one and that an easy method of refuting it by producing that idea which in their opinion is not derived from this source
# ::tok have only one and that an easy method of refuting it by producing that idea which in their opinion is not derived from this source
# ::alignments 24-25|0.1.0 23-24|0.1.0.0 21-22|0.1 18-19|0 14-15|0.1.1 12-13|0.1.1.0 10-11|0.1.1.0.0 7-8|0.0 6-7|0.0.0 3-4|0.1.1.0.1 1-2|0.1.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:58.581
# ::node	0	opine-01	18-19
# ::node	0.0	method	7-8
# ::node	0.0.0	easy	6-7
# ::node	0.1	derive-01	21-22
# ::node	0.1.0	source	24-25
# ::node	0.1.0.0	this	23-24
# ::node	0.1.1	idea	14-15
# ::node	0.1.1.0	produce-01	12-13
# ::node	0.1.1.0.0	it	10-11
# ::node	0.1.1.0.1	and	3-4
# ::node	0.1.1.0.1.0	only	1-2
# ::root	0	opine-01
# ::edge	and	mod	only	0.1.1.0.1	0.1.1.0.1.0	
# ::edge	and	op1	produce-01	0.1.1.0.1	0.1.1.0	
# ::edge	derive-01	ARG0	source	0.1	0.1.0	
# ::edge	derive-01	ARG1	idea	0.1	0.1.1	
# ::edge	derive-01	time	opine-01	0.1	0	
# ::edge	method	mod	easy	0.0	0.0.0	
# ::edge	opine-01	ARG0	method	0	0.0	
# ::edge	produce-01	ARG0	it	0.1.1.0	0.1.1.0.0	
# ::edge	produce-01	ARG1	idea	0.1.1.0	0.1.1	
# ::edge	source	mod	this	0.1.0	0.1.0.0	
(o / opine-01 
      :ARG0 (m / method 
            :mod (e / easy)) 
      :time-of (d / derive-01 
            :ARG0 (s / source 
                  :mod (t / this)) 
            :ARG1 (i / idea 
                  :ARG1-of (p / produce-01 
                        :ARG0 (i2 / it) 
                        :op-of (a / and 
                              :mod (o2 / only))))))

# ::snt a person who made a promise has an agentrelative reason to keep it even though it may derive from an agentneutral reason to keep ones promises
# ::tok a person who made a promise has an agentrelative reason to keep it even though it may derive from an agentneutral reason to keep ones promises
# ::alignments 25-26|0.0.0.0.0 24-25|0.0.0.0 21-22|0.0.2 17-18|0.0 16-17|0.0.4.0+0.0.4 15-16|0.0.0 12-13|0.0.1 9-10|0.0.3 5-6|0 1-2|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:58.892
# ::node	0	promise-01	5-6
# ::node	0.0	derive-01	17-18
# ::node	0.0.0	it	15-16
# ::node	0.0.0.0	one	24-25
# ::node	0.0.0.0.0	promise-01	25-26
# ::node	0.0.0.0.0.0	person	1-2
# ::node	0.0.1	it	12-13
# ::node	0.0.2	reason	21-22
# ::node	0.0.3	reason	9-10
# ::node	0.0.4	date-entity	16-17
# ::node	0.0.4.0	5	16-17
# ::root	0	promise-01
# ::edge	date-entity	month	5	0.0.4	0.0.4.0	
# ::edge	derive-01	ARG0	it	0.0	0.0.0	
# ::edge	derive-01	ARG1	it	0.0	0.0.1	
# ::edge	derive-01	ARG2	reason	0.0	0.0.2	
# ::edge	derive-01	ARG3	reason	0.0	0.0.3	
# ::edge	derive-01	mod	date-entity	0.0	0.0.4	
# ::edge	one	poss	it	0.0.0.0	0.0.0	
# ::edge	promise-01	ARG0	person	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	promise-01	ARG1	derive-01	0	0.0	
# ::edge	promise-01	ARG1	one	0.0.0.0.0	0.0.0.0	
(p2 / promise-01 
      :ARG1 (d / derive-01 
            :ARG0 (i / it 
                  :poss-of (o / one 
                        :ARG1-of (p / promise-01 
                              :ARG0 (p3 / person)))) 
            :ARG1 (i2 / it) 
            :ARG2 (r / reason) 
            :ARG3 (r2 / reason) 
            :mod (d2 / date-entity 
                  :month 5)))

# ::snt my ownership of a house in the street does not derive from my ownership of the street as a whole even though the statement that i own a house in the street is entailed by the statement that i own the street
# ::tok my ownership of a house in the street does not derive from my ownership of the street as a whole even though the statement that i own a house in the street is entailed by the statement that i own the street
# ::alignments 41-42|0.0.0 38-39|0.0 36-37|0 31-32|0.1.1.0 28-29|0.1.1 25-26|0.1.0 23-24|0.1 19-20|0.1.0.0.0.0.1.0.0 16-17|0.1.0.0.0.0.1.0 13-14|0.1.0.0.0.0.1 10-11|0.1.0.0.0.0 7-8|0.1.0.0.0.0.0 4-5|0.1.0.0 1-2|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:59.082
# ::node	0	state-01	36-37
# ::node	0.0	i	38-39
# ::node	0.0.0	street	41-42
# ::node	0.1	state-01	23-24
# ::node	0.1.0	i	25-26
# ::node	0.1.0.0	house	4-5
# ::node	0.1.0.0.0	ownership	1-2
# ::node	0.1.0.0.0.0	derive-01	10-11
# ::node	0.1.0.0.0.0.0	street	7-8
# ::node	0.1.0.0.0.0.1	ownership	13-14
# ::node	0.1.0.0.0.0.1.0	street	16-17
# ::node	0.1.0.0.0.0.1.0.0	whole	19-20
# ::node	0.1.1	house	28-29
# ::node	0.1.1.0	street	31-32
# ::root	0	state-01
# ::edge	derive-01	ARG0	ownership	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	derive-01	ARG1	street	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	derive-01	ARG2	ownership	0.1.0.0.0.0	0.1.0.0.0.0.1	
# ::edge	house	location	street	0.1.1	0.1.1.0	
# ::edge	house	poss	i	0.1.0.0	0.1.0	
# ::edge	ownership	location	house	0.1.0.0.0	0.1.0.0	
# ::edge	ownership	location	street	0.1.0.0.0.0.1	0.1.0.0.0.0.1.0	
# ::edge	state-01	ARG0	i	0	0.0	
# ::edge	state-01	ARG0	i	0.1	0.1.0	
# ::edge	state-01	ARG1	house	0.1	0.1.1	
# ::edge	state-01	ARG1	state-01	0	0.1	
# ::edge	street	domain	whole	0.1.0.0.0.0.1.0	0.1.0.0.0.0.1.0.0	
# ::edge	street	example	i	0.0.0	0.0	
(s2 / state-01 
      :ARG0 (i / i 
            :example-of (s / street)) 
      :ARG1 (s4 / state-01 
            :ARG0 (i2 / i 
                  :poss-of (h2 / house 
                        :location-of (o2 / ownership 
                              :ARG0-of (d / derive-01 
                                    :ARG1 (s6 / street) 
                                    :ARG2 (o / ownership 
                                          :location (s5 / street 
                                                :domain (w / whole))))))) 
            :ARG1 (h / house 
                  :location (s3 / street))))

# ::snt stalins argument was part of a broader one that he derived from lenin the right of national selfdetermination was valid only where countries were passing from feudalism to capitalism
# ::tok stalins argument was part of a broader one that he derived from lenin the right of national selfdetermination was valid only where countries were passing from feudalism to capitalism
# ::alignments 28-29|0.0 22-23|0.1 20-21|0.3 19-20|0 16-17|0.1.0.1 10-11|0.2 9-10|0.2.0 6-7|0.1.0.0 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:59.216
# ::node	0	valid-41	19-20
# ::node	0.0	capitalism	28-29
# ::node	0.1	country	22-23
# ::node	0.1.0	argue-01	1-2
# ::node	0.1.0.0	broad	6-7
# ::node	0.1.0.1	nation	16-17
# ::node	0.2	derive-01	10-11
# ::node	0.2.0	he	9-10
# ::node	0.3	only	20-21
# ::root	0	valid-41
# ::edge	argue-01	ARG0	country	0.1.0	0.1	
# ::edge	argue-01	ARG1	broad	0.1.0	0.1.0.0	
# ::edge	derive-01	ARG0	he	0.2	0.2.0	
# ::edge	derive-01	ARG1	valid-41	0.2	0	
# ::edge	nation	op1	argue-01	0.1.0.1	0.1.0	
# ::edge	valid-41	ARG0	capitalism	0	0.0	
# ::edge	valid-41	ARG1	country	0	0.1	
# ::edge	valid-41	time	only	0	0.3	
(v / valid-41 
      :ARG0 (c / capitalism) 
      :ARG1 (c2 / country 
            :ARG0-of (a / argue-01 
                  :ARG1 (b / broad) 
                  :op-of (n / nation))) 
      :ARG1-of (d / derive-01 
            :ARG0 (h / he)) 
      :time (o / only))

# ::snt followers of football on north humberside deprived of success by their ailing professional club can derive much satisfaction from the form of the citys schoolboy team
# ::tok followers of football on north humberside deprived of success by their ailing professional club can derive much satisfaction from the form of the citys schoolboy team
# ::alignments 25-26|0.0.0.0.0.0.0.0 20-21|0.0.0.0.0.0.0 17-18|0.0.0.0.0.0 16-17|0.0.0.0.0.0.1 15-16|0.0.0.0.0 14-15|0.0.0.0.0.1 13-14|0 12-13|0.1 8-9|0.0 4-5|0.0.0 2-3|0.0.0.0.1.0 0-1|0.0.0.0.1+0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:59.457
# ::node	0	club	13-14
# ::node	0.0	succeed-01	8-9
# ::node	0.0.0	north	4-5
# ::node	0.0.0.0	person	0-1
# ::node	0.0.0.0.0	derive-01	15-16
# ::node	0.0.0.0.0.0	satisfy-01	17-18
# ::node	0.0.0.0.0.0.0	form	20-21
# ::node	0.0.0.0.0.0.0.0	team	25-26
# ::node	0.0.0.0.0.0.1	much	16-17
# ::node	0.0.0.0.0.1	possible	14-15
# ::node	0.0.0.0.1	follow-02	0-1
# ::node	0.0.0.0.1.0	football	2-3
# ::node	0.1	professional	12-13
# ::root	0	club
# ::edge	club	mod	professional	0	0.1	
# ::edge	derive-01	ARG0	person	0.0.0.0.0	0.0.0.0	
# ::edge	derive-01	ARG1	satisfy-01	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	follow-02	ARG0	person	0.0.0.0.1	0.0.0.0	
# ::edge	follow-02	ARG1	football	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	form	poss	team	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	person	location	north	0.0.0.0	0.0.0	
# ::edge	possible	domain	derive-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	satisfy-01	manner	form	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	satisfy-01	quant	much	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	succeed-01	ARG0	north	0.0	0.0.0	
# ::edge	succeed-01	ARG1	club	0.0	0	
(c / club 
      :ARG1-of (s2 / succeed-01 
            :ARG0 (n / north 
                  :location-of (p3 / person 
                        :ARG0-of (d / derive-01 
                              :ARG1 (s / satisfy-01 
                                    :manner (f / form 
                                          :poss (t / team)) 
                                    :quant (m / much)) 
                              :domain-of (p / possible)) 
                        :ARG0-of (f3 / follow-02 
                              :ARG1 (f2 / football))))) 
      :mod (p2 / professional))

# ::snt other interesting youthpreserving ingredients which work together to promote cell rejuvenation and boost capillary circulations functions that grow sluggish with time are apricot essence b15 and a form of vitamin e called tocopherol nicotinate derived from polished rice
# ::tok other interesting youthpreserving ingredients which work together to promote cell rejuvenation and boost capillary circulations functions that grow sluggish with time are apricot essence b15 and a form of vitamin e called tocopherol nicotinate derived from polished rice
# ::alignments 37-38|0.2.2.1.0 36-37|0.2.2.1 34-35|0.2.2.1.0.0 29-30|0.2.2.1.0.0.0.0.0 27-28|0.2.2.1.0.0.0.0 25-26|0.2.2.1.0.0.0 23-24|0.0 20-21|0.2.2.0.1 18-19|0.2.2.0.0 17-18|0.2.2.0 15-16|0.2.2 12-13|0 11-12|0.2 9-10|0.1 8-9|0.2.1 6-7|0.2.0 3-4|0.2.1.0 1-2|0.2.1.0.1 0-1|0.2.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:16:59.803
# ::node	0	boost-01	12-13
# ::node	0.0	essence	23-24
# ::node	0.1	cell	9-10
# ::node	0.2	and	11-12
# ::node	0.2.0	together	6-7
# ::node	0.2.1	promote-02	8-9
# ::node	0.2.1.0	ingredient	3-4
# ::node	0.2.1.0.0	other	0-1
# ::node	0.2.1.0.1	interesting	1-2
# ::node	0.2.2	function-01	15-16
# ::node	0.2.2.0	grow-01	17-18
# ::node	0.2.2.0.0	sluggish	18-19
# ::node	0.2.2.0.1	time	20-21
# ::node	0.2.2.1	polish-02	36-37
# ::node	0.2.2.1.0	rice	37-38
# ::node	0.2.2.1.0.0	derive-01	34-35
# ::node	0.2.2.1.0.0.0	and	25-26
# ::node	0.2.2.1.0.0.0.0	form	27-28
# ::node	0.2.2.1.0.0.0.0.0	vitamin	29-30
# ::root	0	boost-01
# ::edge	and	mod	together	0.2	0.2.0	
# ::edge	and	op1	form	0.2.2.1.0.0.0	0.2.2.1.0.0.0.0	
# ::edge	and	op1	promote-02	0.2	0.2.1	
# ::edge	and	op2	boost-01	0.2	0	
# ::edge	and	op3	function-01	0.2	0.2.2	
# ::edge	boost-01	ARG0	essence	0	0.0	
# ::edge	boost-01	ARG1	cell	0	0.1	
# ::edge	derive-01	ARG1	and	0.2.2.1.0.0	0.2.2.1.0.0.0	
# ::edge	derive-01	ARG2	rice	0.2.2.1.0.0	0.2.2.1.0	
# ::edge	form	mod	vitamin	0.2.2.1.0.0.0.0	0.2.2.1.0.0.0.0.0	
# ::edge	function-01	ARG1	polish-02	0.2.2	0.2.2.1	
# ::edge	grow-01	ARG0	function-01	0.2.2.0	0.2.2	
# ::edge	grow-01	ARG1	sluggish	0.2.2.0	0.2.2.0.0	
# ::edge	grow-01	time	time	0.2.2.0	0.2.2.0.1	
# ::edge	ingredient	mod	interesting	0.2.1.0	0.2.1.0.1	
# ::edge	ingredient	mod	other	0.2.1.0	0.2.1.0.0	
# ::edge	polish-02	ARG1	rice	0.2.2.1	0.2.2.1.0	
# ::edge	promote-02	ARG1	ingredient	0.2.1	0.2.1.0	
(b / boost-01 
      :ARG0 (e / essence) 
      :ARG1 (c / cell) 
      :op-of (a2 / and 
            :mod (t2 / together) 
            :op1 (p2 / promote-02 
                  :ARG1 (i / ingredient 
                        :mod (o / other) 
                        :mod (i2 / interesting))) 
            :op2 (f2 / function-01 
                  :ARG0-of (g / grow-01 
                        :ARG1 (s / sluggish) 
                        :time (t / time)) 
                  :ARG1 (p / polish-02 
                        :ARG1 (r / rice 
                              :ARG2-of (d / derive-01 
                                    :ARG1 (a / and 
                                          :op1 (f / form 
                                                :mod (v / vitamin)))))))))

# ::snt some people are willing to go further and to hold that the value of the relationship between the man and the dog derives equally from its contribution to the wellbeing of the dog and that the dogs wellbeing is not merely derivatively important because of its contribution to the mans wellbeing
# ::tok some people are willing to go further and to hold that the value of the relationship between the man and the dog derives equally from its contribution to the wellbeing of the dog and that the dogs wellbeing is not merely derivatively important because of its contribution to the mans wellbeing
# ::alignments 46-47|0.0 43-44|0 42-43|0.1.3 40-41|0.2 36-37|0.1.1.0 33-34|0.1 32-33|0.1.2 26-27|0.1.1.1.0.0.1.0 23-24|0.1.1.1.0.0.1.0.0 21-22|0.1.1.1.0.0.1 19-20|0.1.1.1 18-19|0.1.1.1.0.0.0 16-17|0.1.1.1.0.0 15-16|0.1.1.1.0 12-13|0.1.1 7-8|0.1.0 6-7|0.1.0.0.0 3-4|0.1.0.0 0-1|0.1.1.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:00.264
# ::node	0	cause-01	43-44
# ::node	0.0	contribute-01	46-47
# ::node	0.1	and	33-34
# ::node	0.1.0	and	7-8
# ::node	0.1.0.0	will-02	3-4
# ::node	0.1.0.0.0	further	6-7
# ::node	0.1.1	value-01	12-13
# ::node	0.1.1.0	dog	36-37
# ::node	0.1.1.1	and	19-20
# ::node	0.1.1.1.0	relationship	15-16
# ::node	0.1.1.1.0.0	between	16-17
# ::node	0.1.1.1.0.0.0	man	18-19
# ::node	0.1.1.1.0.0.1	dog	21-22
# ::node	0.1.1.1.0.0.1.0	contribute-01	26-27
# ::node	0.1.1.1.0.0.1.0.0	equal	23-24
# ::node	0.1.1.2	some	0-1
# ::node	0.1.2	dog	32-33
# ::node	0.1.3	important	42-43
# ::node	0.2	mere	40-41
# ::root	0	cause-01
# ::edge	and	op1	and	0.1.0	0.1	
# ::edge	and	op1	relationship	0.1.1.1	0.1.1.1.0	
# ::edge	and	op1	value-01	0.1	0.1.1	
# ::edge	and	op2	dog	0.1	0.1.2	
# ::edge	and	op3	important	0.1	0.1.3	
# ::edge	between	op1	man	0.1.1.1.0.0	0.1.1.1.0.0.0	
# ::edge	between	op2	dog	0.1.1.1.0.0	0.1.1.1.0.0.1	
# ::edge	cause-01	ARG0	contribute-01	0	0.0	
# ::edge	cause-01	ARG1	and	0	0.1	
# ::edge	cause-01	mod	mere	0	0.2	
# ::edge	contribute-01	ARG0	equal	0.1.1.1.0.0.1.0	0.1.1.1.0.0.1.0.0	
# ::edge	contribute-01	ARG1	dog	0.1.1.1.0.0.1.0	0.1.1.1.0.0.1	
# ::edge	relationship	mod	between	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	value-01	ARG0	dog	0.1.1	0.1.1.0	
# ::edge	value-01	ARG1	and	0.1.1	0.1.1.1	
# ::edge	value-01	ARG2	some	0.1.1	0.1.1.2	
# ::edge	will-02	ARG1	further	0.1.0.0	0.1.0.0.0	
# ::edge	will-02	ARG2	and	0.1.0.0	0.1.0	
(c2 / cause-01 
      :ARG0 (c / contribute-01) 
      :ARG1 (a / and 
            :op-of (a3 / and 
                  :ARG2-of (w / will-02 
                        :ARG1 (f / further))) 
            :op1 (v / value-01 
                  :ARG0 (d / dog) 
                  :ARG1 (a2 / and 
                        :op1 (r / relationship 
                              :mod (b / between 
                                    :op1 (m2 / man) 
                                    :op2 (d3 / dog 
                                          :ARG1-of (c3 / contribute-01 
                                                :ARG0 (e / equal)))))) 
                  :ARG2 (s / some)) 
            :op2 (d2 / dog) 
            :op3 (i / important)) 
      :mod (m / mere))

# ::snt these accounts are on the one hand carefully controlled literary structures whose themes and images derive from and elaborate material already presented in the text and whose artistic purpose is to give the reader the illusion of actual oneiric experience
# ::tok these accounts are on the one hand carefully controlled literary structures whose themes and images derive from and elaborate material already presented in the text and whose artistic purpose is to give the reader the illusion of actual oneiric experience
# ::alignments 39-40|0.0.0.1.0 37-38|0.0.0.1.0.1 35-36|0.0.0.1 33-34|0+0.0 31-32|0.0.0 28-29|0.0.0.0 27-28|0.0.0.1.0.0 25-26|0.0.0.2.1.3.0.0 24-25|0.0.0.2.1.2.0 21-22|0.0.0.2.1.2 20-21|0.0.0.2.1.2.1 19-20|0.0.0.2.1.1 18-19|0.0.0.2.1 17-18|0.0.0.2 15-16|0.0.0.2.1.3.0 14-15|0.0.0.2.1.3.0.0.0 13-14|0.0.0.2.1.3 12-13|0.0.0.2.1.0 10-11|0.0.0.2.0.1 9-10|0.0.0.2.0.1.0 8-9|0.0.0.2.0 7-8|0.0.0.2.0.3 6-7|0.0.0.2.0.0 1-2|0.0.0.2.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:02.586
# ::node	0	read-01	33-34
# ::node	0.0	person	33-34
# ::node	0.0.0	give-01	31-32
# ::node	0.0.0.0	purpose	28-29
# ::node	0.0.0.1	illusion	35-36
# ::node	0.0.0.1.0	experience-01	39-40
# ::node	0.0.0.1.0.0	artistic	27-28
# ::node	0.0.0.1.0.1	actual	37-38
# ::node	0.0.0.2	and	17-18
# ::node	0.0.0.2.0	control-01	8-9
# ::node	0.0.0.2.0.0	hand	6-7
# ::node	0.0.0.2.0.1	structure	10-11
# ::node	0.0.0.2.0.1.0	literary	9-10
# ::node	0.0.0.2.0.2	account	1-2
# ::node	0.0.0.2.0.3	careful	7-8
# ::node	0.0.0.2.1	elaborate-01	18-19
# ::node	0.0.0.2.1.0	theme	12-13
# ::node	0.0.0.2.1.1	material	19-20
# ::node	0.0.0.2.1.2	present-01	21-22
# ::node	0.0.0.2.1.2.0	text	24-25
# ::node	0.0.0.2.1.2.1	already	20-21
# ::node	0.0.0.2.1.3	and	13-14
# ::node	0.0.0.2.1.3.0	derive-01	15-16
# ::node	0.0.0.2.1.3.0.0	and	25-26
# ::node	0.0.0.2.1.3.0.0.0	image	14-15
# ::root	0	read-01
# ::edge	and	op1	control-01	0.0.0.2	0.0.0.2.0	
# ::edge	and	op1	elaborate-01	0.0.0.2.1.3	0.0.0.2.1	
# ::edge	and	op1	image	0.0.0.2.1.3.0.0	0.0.0.2.1.3.0.0.0	
# ::edge	and	op2	derive-01	0.0.0.2.1.3.0.0	0.0.0.2.1.3.0	
# ::edge	and	op2	elaborate-01	0.0.0.2	0.0.0.2.1	
# ::edge	and	op3	give-01	0.0.0.2	0.0.0	
# ::edge	control-01	ARG0	hand	0.0.0.2.0	0.0.0.2.0.0	
# ::edge	control-01	ARG1	structure	0.0.0.2.0	0.0.0.2.0.1	
# ::edge	control-01	ARG2	account	0.0.0.2.0	0.0.0.2.0.2	
# ::edge	control-01	manner	careful	0.0.0.2.0	0.0.0.2.0.3	
# ::edge	derive-01	ARG1	and	0.0.0.2.1.3.0	0.0.0.2.1.3	
# ::edge	elaborate-01	ARG0	theme	0.0.0.2.1	0.0.0.2.1.0	
# ::edge	elaborate-01	ARG1	material	0.0.0.2.1	0.0.0.2.1.1	
# ::edge	elaborate-01	manner	present-01	0.0.0.2.1	0.0.0.2.1.2	
# ::edge	experience-01	ARG1	artistic	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	experience-01	mod	actual	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	give-01	ARG0	purpose	0.0.0	0.0.0.0	
# ::edge	give-01	ARG1	illusion	0.0.0	0.0.0.1	
# ::edge	give-01	ARG2	person	0.0.0	0.0	
# ::edge	illusion	domain	experience-01	0.0.0.1	0.0.0.1.0	
# ::edge	present-01	ARG1	text	0.0.0.2.1.2	0.0.0.2.1.2.0	
# ::edge	present-01	mod	already	0.0.0.2.1.2	0.0.0.2.1.2.1	
# ::edge	read-01	ARG0	person	0	0.0	
# ::edge	structure	mod	literary	0.0.0.2.0.1	0.0.0.2.0.1.0	
(r / read-01 
      :ARG0 (p / person 
            :ARG2-of (g / give-01 
                  :ARG0 (p2 / purpose) 
                  :ARG1 (i / illusion 
                        :domain (e / experience-01 
                              :ARG1 (a2 / artistic) 
                              :mod (a / actual))) 
                  :op-of (a5 / and 
                        :op1 (c / control-01 
                              :ARG0 (h / hand) 
                              :ARG1 (s / structure 
                                    :mod (l / literary)) 
                              :ARG2 (a7 / account) 
                              :manner (c2 / careful)) 
                        :op2 (e2 / elaborate-01 
                              :ARG0 (t2 / theme) 
                              :ARG1 (m / material) 
                              :manner (p3 / present-01 
                                    :ARG1 (t / text) 
                                    :mod (a4 / already)) 
                              :op-of (a6 / and 
                                    :ARG1-of (d / derive-01 
                                          :op-of (a3 / and 
                                                :op1 (i2 / image)))))))))

# ::snt ive been following it for years and have never derived any practical advantage from any of your books
# ::tok ive been following it for years and have never derived any practical advantage from any of your books
# ::alignments 17-18|0.0.1.2 14-15|0.0.1.2.0 12-13|0.0.1 11-12|0.0.1.0 10-11|0.0.1.1 9-10|0.0 6-7|0 5-6|0.0.0.0.0+0.0.0.0 3-4|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:02.657
# ::node	0	and	6-7
# ::node	0.0	derive-01	9-10
# ::node	0.0.0	it	3-4
# ::node	0.0.0.0	temporal-quantity	5-6
# ::node	0.0.0.0.0	year	5-6
# ::node	0.0.1	advantage	12-13
# ::node	0.0.1.0	practical	11-12
# ::node	0.0.1.1	any	10-11
# ::node	0.0.1.2	book	17-18
# ::node	0.0.1.2.0	any	14-15
# ::root	0	and
# ::edge	advantage	mod	any	0.0.1	0.0.1.1	
# ::edge	advantage	mod	practical	0.0.1	0.0.1.0	
# ::edge	advantage	op1	book	0.0.1	0.0.1.2	
# ::edge	and	op1	derive-01	0	0.0	
# ::edge	book	mod	any	0.0.1.2	0.0.1.2.0	
# ::edge	derive-01	ARG0	it	0.0	0.0.0	
# ::edge	derive-01	ARG1	advantage	0.0	0.0.1	
# ::edge	it	topic	temporal-quantity	0.0.0	0.0.0.0	
# ::edge	temporal-quantity	unit	year	0.0.0.0	0.0.0.0.0	
(a4 / and 
      :op1 (d / derive-01 
            :ARG0 (i / it 
                  :topic (t / temporal-quantity 
                        :unit (y / year))) 
            :ARG1 (a2 / advantage 
                  :mod (p / practical) 
                  :mod (a3 / any) 
                  :op1 (b / book 
                        :mod (a / any)))))

# ::snt such displeasure does not derive from the increase in pensions for war widows although it may perhaps apply to the long delay in this being granted but rather to the abandonment by increasing numbers among all the main parties of parliaments prime constitutional role of keeping a check upon the executive
# ::tok such displeasure does not derive from the increase in pensions for war widows although it may perhaps apply to the long delay in this being granted but rather to the abandonment by increasing numbers among all the main parties of parliaments prime constitutional role of keeping a check upon the executive
# ::alignments 50-51|0.0.0 43-44|0.0.1.1.1.2.1 42-43|0.0.1.1.1.2.1.1 41-42|0.0.1.1.1.2.1.0 38-39|0.0.1.1.1 37-38|0.0.1.1.1.0 35-36|0.0.1.1.1.3 34-35|0.0.1.1.1.1 33-34|0.0.1.1.1.2 32-33|0.0.1.1.1.2.0 30-31|0.0.1.1.1.2.0.0 26-27|0 25-26|0.0 23-24|0.0.1.0 21-22|0.0.1 17-18|0.0.1.1 16-17|0.0.1.1.3 15-16|0.0.1.1.2.0+0.0.1.1.2 14-15|0.0.1.1.0 11-12|0.0.1.1.4.1.1 9-10|0.0.1.1.4.1.0 7-8|0.0.1.1.4.1 4-5|0.0.1.1.4 1-2|0.0.1.1.4.0 0-1|0.0.1.1.4.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:03.845
# ::node	0	contrast-01	26-27
# ::node	0.0	grant-01	25-26
# ::node	0.0.0	executive	50-51
# ::node	0.0.1	delay-01	21-22
# ::node	0.0.1.0	this	23-24
# ::node	0.0.1.1	apply-01	17-18
# ::node	0.0.1.1.0	it	14-15
# ::node	0.0.1.1.1	party	38-39
# ::node	0.0.1.1.1.0	main	37-38
# ::node	0.0.1.1.1.1	among	34-35
# ::node	0.0.1.1.1.2	number	33-34
# ::node	0.0.1.1.1.2.0	increase-01	32-33
# ::node	0.0.1.1.1.2.0.0	abandon-03	30-31
# ::node	0.0.1.1.1.2.1	role	43-44
# ::node	0.0.1.1.1.2.1.0	prime	41-42
# ::node	0.0.1.1.1.2.1.1	constitution	42-43
# ::node	0.0.1.1.1.3	all	35-36
# ::node	0.0.1.1.2	date-entity	15-16
# ::node	0.0.1.1.2.0	5	15-16
# ::node	0.0.1.1.3	perhaps	16-17
# ::node	0.0.1.1.4	derive-01	4-5
# ::node	0.0.1.1.4.0	displease-01	1-2
# ::node	0.0.1.1.4.0.0	such	0-1
# ::node	0.0.1.1.4.1	increase-01	7-8
# ::node	0.0.1.1.4.1.0	pension	9-10
# ::node	0.0.1.1.4.1.1	war	11-12
# ::root	0	contrast-01
# ::edge	abandon-03	ARG1	increase-01	0.0.1.1.1.2.0.0	0.0.1.1.1.2.0	
# ::edge	among	op1	party	0.0.1.1.1.1	0.0.1.1.1	
# ::edge	apply-01	ARG0	it	0.0.1.1	0.0.1.1.0	
# ::edge	apply-01	ARG1	party	0.0.1.1	0.0.1.1.1	
# ::edge	apply-01	ARG2	delay-01	0.0.1.1	0.0.1	
# ::edge	apply-01	manner	perhaps	0.0.1.1	0.0.1.1.3	
# ::edge	contrast-01	ARG1	grant-01	0	0.0	
# ::edge	date-entity	domain	apply-01	0.0.1.1.2	0.0.1.1	
# ::edge	date-entity	month	5	0.0.1.1.2	0.0.1.1.2.0	
# ::edge	delay-01	ARG1	this	0.0.1	0.0.1.0	
# ::edge	derive-01	ARG1	displease-01	0.0.1.1.4	0.0.1.1.4.0	
# ::edge	derive-01	ARG2	increase-01	0.0.1.1.4	0.0.1.1.4.1	
# ::edge	derive-01	purpose	apply-01	0.0.1.1.4	0.0.1.1	
# ::edge	displease-01	mod	such	0.0.1.1.4.0	0.0.1.1.4.0.0	
# ::edge	grant-01	ARG1	executive	0.0	0.0.0	
# ::edge	grant-01	ARG2	delay-01	0.0	0.0.1	
# ::edge	increase-01	ARG1	number	0.0.1.1.1.2.0	0.0.1.1.1.2	
# ::edge	increase-01	ARG1	pension	0.0.1.1.4.1	0.0.1.1.4.1.0	
# ::edge	increase-01	location	war	0.0.1.1.4.1	0.0.1.1.4.1.1	
# ::edge	number	poss	party	0.0.1.1.1.2	0.0.1.1.1	
# ::edge	party	mod	main	0.0.1.1.1	0.0.1.1.1.0	
# ::edge	party	quant	all	0.0.1.1.1	0.0.1.1.1.3	
# ::edge	role	mod	constitution	0.0.1.1.1.2.1	0.0.1.1.1.2.1.1	
# ::edge	role	mod	prime	0.0.1.1.1.2.1	0.0.1.1.1.2.1.0	
# ::edge	role	poss	number	0.0.1.1.1.2.1	0.0.1.1.1.2	
(c2 / contrast-01 
      :ARG1 (g / grant-01 
            :ARG1 (e / executive) 
            :ARG2 (d / delay-01 
                  :ARG1 (t / this) 
                  :ARG2-of (a4 / apply-01 
                        :ARG0 (i2 / it) 
                        :ARG1 (p2 / party 
                              :mod (m / main) 
                              :op-of (a2 / among) 
                              :poss-of (n / number 
                                    :ARG1-of (i / increase-01 
                                          :ARG1-of (a3 / abandon-03)) 
                                    :poss-of (r / role 
                                          :mod (p / prime) 
                                          :mod (c / constitution))) 
                              :quant (a / all)) 
                        :domain-of (d2 / date-entity 
                              :month 5) 
                        :manner (p3 / perhaps) 
                        :purpose-of (d3 / derive-01 
                              :ARG1 (d4 / displease-01 
                                    :mod (s / such)) 
                              :ARG2 (i3 / increase-01 
                                    :ARG1 (p4 / pension) 
                                    :location (w / war)))))))

# ::snt rank explains it in terms of the male female dichotomy since modern psychology is not only masculine but derived from our neurotic type of man a great deal of its terminology originated from a misinterpretation of woman in terms of mans sexual ideology
# ::tok rank explains it in terms of the male female dichotomy since modern psychology is not only masculine but derived from our neurotic type of man a great deal of its terminology originated from a misinterpretation of woman in terms of mans sexual ideology
# ::alignments 42-43|0.1.0.1.1.0 41-42|0.1.0.1.1.0.0 38-39|0.1.0.1.1 36-37|0.1.0.0 31-32|0.1.0.1 27-28|0.1.0 26-27|0.1.0.2 24-25|0.1.2.0 22-23|0.1.2 18-19|0.1 17-18|0 15-16|0.1.0.1.0 12-13|0.1.1.0.0.0 11-12|0.1.1.0.0 10-11|0.1.1.0.2 8-9|0.0.0 7-8|0.0 4-5|0.1.1 2-3|0.1.1.0.1 1-2|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:04.153
# ::node	0	contrast-01	17-18
# ::node	0.0	male	7-8
# ::node	0.0.0	female	8-9
# ::node	0.1	derive-01	18-19
# ::node	0.1.0	deal-01	27-28
# ::node	0.1.0.0	woman	36-37
# ::node	0.1.0.1	originate-01	31-32
# ::node	0.1.0.1.0	only	15-16
# ::node	0.1.0.1.1	term	38-39
# ::node	0.1.0.1.1.0	ideology	42-43
# ::node	0.1.0.1.1.0.0	sexual	41-42
# ::node	0.1.0.2	great	26-27
# ::node	0.1.1	term	4-5
# ::node	0.1.1.0	explain-01	1-2
# ::node	0.1.1.0.0	modern	11-12
# ::node	0.1.1.0.0.0	psychology	12-13
# ::node	0.1.1.0.1	it	2-3
# ::node	0.1.1.0.2	since	10-11
# ::node	0.1.2	type	22-23
# ::node	0.1.2.0	man	24-25
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	male	0	0.0	
# ::edge	contrast-01	ARG2	derive-01	0	0.1	
# ::edge	deal-01	ARG1	woman	0.1.0	0.1.0.0	
# ::edge	deal-01	mod	great	0.1.0	0.1.0.2	
# ::edge	derive-01	ARG1	deal-01	0.1	0.1.0	
# ::edge	derive-01	ARG2	term	0.1	0.1.1	
# ::edge	derive-01	manner	type	0.1	0.1.2	
# ::edge	explain-01	ARG0	modern	0.1.1.0	0.1.1.0.0	
# ::edge	explain-01	ARG1	it	0.1.1.0	0.1.1.0.1	
# ::edge	explain-01	manner	term	0.1.1.0	0.1.1	
# ::edge	explain-01	time	since	0.1.1.0	0.1.1.0.2	
# ::edge	female	mod	male	0.0.0	0.0	
# ::edge	ideology	mod	sexual	0.1.0.1.1.0	0.1.0.1.1.0.0	
# ::edge	man	mod	type	0.1.2.0	0.1.2	
# ::edge	originate-01	ARG0	only	0.1.0.1	0.1.0.1.0	
# ::edge	originate-01	ARG1	deal-01	0.1.0.1	0.1.0	
# ::edge	originate-01	manner	term	0.1.0.1	0.1.0.1.1	
# ::edge	psychology	mod	modern	0.1.1.0.0.0	0.1.1.0.0	
# ::edge	term	topic	ideology	0.1.0.1.1	0.1.0.1.1.0	
(c / contrast-01 
      :ARG1 (m3 / male 
            :mod-of (f / female)) 
      :ARG2 (d2 / derive-01 
            :ARG1 (d / deal-01 
                  :ARG1 (w / woman) 
                  :ARG1-of (o / originate-01 
                        :ARG0 (o2 / only) 
                        :manner (t / term 
                              :topic (i / ideology 
                                    :mod (s / sexual)))) 
                  :mod (g / great)) 
            :ARG2 (t3 / term 
                  :manner-of (e / explain-01 
                        :ARG0 (m2 / modern 
                              :mod-of (p / psychology)) 
                        :ARG1 (i2 / it) 
                        :time (s2 / since))) 
            :manner (t2 / type 
                  :mod-of (m / man))))

# ::snt some laws are presented to us as having from the beginning a separate and independent existence they are not derived by any process of analysis or development from the law as a whole
# ::tok some laws are presented to us as having from the beginning a separate and independent existence they are not derived by any process of analysis or development from the law as a whole
# ::alignments 32-33|0.1.0.0.0.0.1.1.0.0.0 29-30|0.1.0.0.0.0.1.1.0.0 26-27|0.1.0.0.0.0.1.1.0 25-26|0.1.0.0.0.0.1.1 24-25|0.1.0.0.0.0.1 22-23|0.1.0.0.0.0 21-22|0.1.0.0.0.0.0 19-20|0.1.0.0.0 16-17|0.1.0.0 15-16|0.1.0 14-15|0.1.1+0.1 13-14|0 12-13|0.0 10-11|0.1.0.1 3-4|0.1.0.0.0.0.1.0.0 1-2|0.1.0.0.0.0.1.0 0-1|0.1.0.0.0.0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:04.841
# ::node	0	and	13-14
# ::node	0.0	separate	12-13
# ::node	0.1	depend-01	14-15
# ::node	0.1.0	exist-01	15-16
# ::node	0.1.0.0	they	16-17
# ::node	0.1.0.0.0	derive-01	19-20
# ::node	0.1.0.0.0.0	process	22-23
# ::node	0.1.0.0.0.0.0	any	21-22
# ::node	0.1.0.0.0.0.1	analyze-01	24-25
# ::node	0.1.0.0.0.0.1.0	law	1-2
# ::node	0.1.0.0.0.0.1.0.0	present-01	3-4
# ::node	0.1.0.0.0.0.1.0.1	some	0-1
# ::node	0.1.0.0.0.0.1.1	or	25-26
# ::node	0.1.0.0.0.0.1.1.0	develop-02	26-27
# ::node	0.1.0.0.0.0.1.1.0.0	law	29-30
# ::node	0.1.0.0.0.0.1.1.0.0.0	whole	32-33
# ::node	0.1.0.1	begin-01	10-11
# ::node	0.1.1	-	14-15
# ::root	0	and
# ::edge	analyze-01	ARG1	law	0.1.0.0.0.0.1	0.1.0.0.0.0.1.0	
# ::edge	and	op1	separate	0	0.0	
# ::edge	and	op2	depend-01	0	0.1	
# ::edge	depend-01	ARG1	exist-01	0.1	0.1.0	
# ::edge	depend-01	polarity	-	0.1	0.1.1	
# ::edge	derive-01	ARG1	they	0.1.0.0.0	0.1.0.0	
# ::edge	derive-01	ARG2	process	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	develop-02	ARG1	law	0.1.0.0.0.0.1.1.0	0.1.0.0.0.0.1.1.0.0	
# ::edge	exist-01	ARG0	they	0.1.0	0.1.0.0	
# ::edge	exist-01	ARG1	begin-01	0.1.0	0.1.0.1	
# ::edge	law	domain	whole	0.1.0.0.0.0.1.1.0.0	0.1.0.0.0.0.1.1.0.0.0	
# ::edge	law	quant	some	0.1.0.0.0.0.1.0	0.1.0.0.0.0.1.0.1	
# ::edge	or	op1	analyze-01	0.1.0.0.0.0.1.1	0.1.0.0.0.0.1	
# ::edge	or	op2	develop-02	0.1.0.0.0.0.1.1	0.1.0.0.0.0.1.1.0	
# ::edge	present-01	ARG1	law	0.1.0.0.0.0.1.0.0	0.1.0.0.0.0.1.0	
# ::edge	process	mod	any	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	process	topic	analyze-01	0.1.0.0.0.0	0.1.0.0.0.0.1	
(a3 / and 
      :op1 (s / separate) 
      :op2 (d3 / depend-01 
            :ARG1 (e / exist-01 
                  :ARG0 (t / they 
                        :ARG1-of (d2 / derive-01 
                              :ARG2 (p / process 
                                    :mod (a2 / any) 
                                    :topic (a / analyze-01 
                                          :ARG1 (l2 / law 
                                                :ARG1-of (p2 / present-01) 
                                                :quant (s2 / some)) 
                                          :op-of (o / or 
                                                :op1 (d / develop-02 
                                                      :ARG1 (l / law 
                                                            :domain (w / whole)))))))) 
                  :ARG1 (b / begin-01)) 
            :polarity -))

# ::snt the buildings derived their interest from these towers and from the complex interrelationship of the elements
# ::tok the buildings derived their interest from these towers and from the complex interrelationship of the elements
# ::alignments 15-16|0.0.0.0.0 11-12|0 8-9|0.0 7-8|0.0.0.0.2 4-5|0.0.0.0 2-3|0.0.0 1-2|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:04.912
# ::node	0	complex	11-12
# ::node	0.0	and	8-9
# ::node	0.0.0	derive-01	2-3
# ::node	0.0.0.0	interest-01	4-5
# ::node	0.0.0.0.0	element	15-16
# ::node	0.0.0.0.1	building	1-2
# ::node	0.0.0.0.2	tower	7-8
# ::root	0	complex
(c / complex 
      :op-of (a / and 
            :ARG0-of (d / derive-01 
                  :ARG1 (i / interest-01 
                        :ARG0 (e / element) 
                        :ARG1 (b / building) 
                        :ARG2 (t / tower)))))

# ::snt the permancy of bricks and mortar from which the nationwide anglia building society derived its strength is denied to its wallingford office right now
# ::tok the permancy of bricks and mortar from which the nationwide anglia building society derived its strength is denied to its wallingford office right now
# ::alignments 23-24|0.3 21-22|0.2 17-18|0 15-16|0.0 13-14|0.1 12-13|0.1.0 11-12|0.1.0.0 9-10|0.1.0.1 5-6|0.1.0.0.0.1 4-5|0.1.0.0.0 3-4|0.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:04.972
# ::node	0	deny-01	17-18
# ::node	0.0	strength	15-16
# ::node	0.1	derive-01	13-14
# ::node	0.1.0	society	12-13
# ::node	0.1.0.0	build-01	11-12
# ::node	0.1.0.0.0	and	4-5
# ::node	0.1.0.0.0.0	brick	3-4
# ::node	0.1.0.0.0.1	mortar	5-6
# ::node	0.1.0.1	nationwide	9-10
# ::node	0.2	office	21-22
# ::node	0.3	now	23-24
# ::root	0	deny-01
# ::edge	and	op1	brick	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	and	op2	mortar	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	build-01	ARG0	society	0.1.0.0	0.1.0	
# ::edge	build-01	ARG1	and	0.1.0.0	0.1.0.0.0	
# ::edge	deny-01	ARG1	strength	0	0.0	
# ::edge	deny-01	ARG4	office	0	0.2	
# ::edge	deny-01	time	now	0	0.3	
# ::edge	derive-01	ARG0	society	0.1	0.1.0	
# ::edge	derive-01	ARG1	deny-01	0.1	0	
# ::edge	society	mod	nationwide	0.1.0	0.1.0.1	
(d / deny-01 
      :ARG1 (s / strength) 
      :ARG1-of (d2 / derive-01 
            :ARG0 (s2 / society 
                  :ARG0-of (b / build-01 
                        :ARG1 (a / and 
                              :op1 (b2 / brick) 
                              :op2 (m / mortar))) 
                  :mod (n2 / nationwide))) 
      :ARG4 (o / office) 
      :time (n / now))

# ::snt overlook the oddball cynos badge on the back cynos is derived from cynosure or centre of attention and the cute reardrive toyota coupe has plenty going for it
# ::tok overlook the oddball cynos badge on the back cynos is derived from cynosure or centre of attention and the cute reardrive toyota coupe has plenty going for it
# ::alignments 27-28|0.0.0 24-25|0.1.0 17-18|0.0.1 16-17|0.0.1.0 13-14|0 10-11|0.0 7-8|0.0.1.1 2-3|0.1.1 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:05.047
# ::node	0	or	13-14
# ::node	0.0	derive-01	10-11
# ::node	0.0.0	it	27-28
# ::node	0.0.1	and	17-18
# ::node	0.0.1.0	attention	16-17
# ::node	0.0.1.1	back	7-8
# ::node	0.1	overlook-01	0-1
# ::node	0.1.0	plenty	24-25
# ::node	0.1.1	oddball	2-3
# ::root	0	or
# ::edge	and	op1	derive-01	0.0.1	0.0	
# ::edge	and	op2	attention	0.0.1	0.0.1.0	
# ::edge	back	poss	and	0.0.1.1	0.0.1	
# ::edge	derive-01	ARG1	it	0.0	0.0.0	
# ::edge	derive-01	ARG2	or	0.0	0	
# ::edge	or	op1	overlook-01	0	0.1	
# ::edge	overlook-01	ARG0	plenty	0.1	0.1.0	
# ::edge	overlook-01	ARG1	oddball	0.1	0.1.1	
(o / or 
      :ARG2-of (d / derive-01 
            :ARG1 (i / it) 
            :op-of (a / and 
                  :op1 (a2 / attention) 
                  :poss-of (b / back))) 
      :op1 (o3 / overlook-01 
            :ARG0 (p / plenty) 
            :ARG1 (o2 / oddball)))

# ::snt i am sorry to say that williams himself fails to derive the lesson to be recommended below from his own insight
# ::tok i am sorry to say that williams himself fails to derive the lesson to be recommended below from his own insight
# ::alignments 16-17|0.0.0.0.0.0 15-16|0.0.0.0.0 12-13|0.0.0.0 10-11|0.0.0 8-9|0.0 4-5|0 2-3|0.1 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:05.120
# ::node	0	say-01	4-5
# ::node	0.0	fail-01	8-9
# ::node	0.0.0	derive-01	10-11
# ::node	0.0.0.0	lesson	12-13
# ::node	0.0.0.0.0	recommend-01	15-16
# ::node	0.0.0.0.0.0	below	16-17
# ::node	0.1	sorry-41	2-3
# ::node	0.1.0	i	0-1
# ::root	0	say-01
(s / say-01 
      :ARG1-of (f / fail-01 
            :ARG2 (d / derive-01 
                  :ARG1 (l / lesson 
                        :ARG1-of (r / recommend-01 
                              :manner (b / below))))) 
      :ARG2-of (s2 / sorry-41 
            :ARG1 (i / i)))

# ::snt much of its ancient prosperity derived from its magnificent shipyards has gone
# ::tok much of its ancient prosperity derived from its magnificent shipyards has gone
# ::alignments 8-9|0.0.0 5-6|0 4-5|0.0 3-4|0.0.1 0-1|0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:05.136
# ::node	0	derive-01	5-6
# ::node	0.0	prosper-01	4-5
# ::node	0.0.0	magnificent	8-9
# ::node	0.0.1	ancient	3-4
# ::node	0.0.2	much	0-1
# ::root	0	derive-01
# ::edge	derive-01	ARG1	prosper-01	0	0.0	
# ::edge	prosper-01	ARG0	magnificent	0.0	0.0.0	
# ::edge	prosper-01	manner	ancient	0.0	0.0.1	
# ::edge	prosper-01	part	much	0.0	0.0.2	
(d / derive-01 
      :ARG1 (p / prosper-01 
            :ARG0 (m / magnificent) 
            :manner (a / ancient) 
            :part (m2 / much)))

# ::snt   another reason analysts are sceptical about hammerson derives from the extent to which john parry is seen not as a substitute for mr mason dash
# ::tok another reason analysts are sceptical about hammerson derives from the extent to which john parry is seen not as a substitute for mr mason dash
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:05.137
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the ceausescu version of transylvanian history relied heavily on an extreme school of romanian nationalist writing fashionable during the interwar period and which derived from prejudice rather than rational investigation
# ::tok the ceausescu version of transylvanian history relied heavily on an extreme school of romanian nationalist writing fashionable during the interwar period and which derived from prejudice rather than rational investigation
# ::alignments 29-30|0.1.1.0 28-29|0.1.1.0.0 25-26|0.1.1 23-24|0.1 21-22|0 20-21|0.1.0 15-16|0.0.0.0.0 14-15|0.0.0.0.0.0 11-12|0.0.0.0.0.0.0 10-11|0.0.0.0.0.0.0.0 7-8|0.0.1 6-7|0.0 5-6|0.0.0.0 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:05.284
# ::node	0	and	21-22
# ::node	0.0	rely-01	6-7
# ::node	0.0.0	version	2-3
# ::node	0.0.0.0	history	5-6
# ::node	0.0.0.0.0	write-01	15-16
# ::node	0.0.0.0.0.0	nationalist	14-15
# ::node	0.0.0.0.0.0.0	school	11-12
# ::node	0.0.0.0.0.0.0.0	extreme	10-11
# ::node	0.0.1	heavy	7-8
# ::node	0.1	derive-01	23-24
# ::node	0.1.0	period	20-21
# ::node	0.1.1	prejudice-01	25-26
# ::node	0.1.1.0	investigate-01	29-30
# ::node	0.1.1.0.0	rational	28-29
# ::root	0	and
# ::edge	and	op1	derive-01	0	0.1	
# ::edge	derive-01	ARG1	period	0.1	0.1.0	
# ::edge	derive-01	ARG2	prejudice-01	0.1	0.1.1	
# ::edge	history	mod	version	0.0.0.0	0.0.0	
# ::edge	investigate-01	ARG1	prejudice-01	0.1.1.0	0.1.1	
# ::edge	investigate-01	manner	rational	0.1.1.0	0.1.1.0.0	
# ::edge	rely-01	ARG0	version	0.0	0.0.0	
# ::edge	rely-01	ARG1	and	0.0	0	
# ::edge	rely-01	manner	heavy	0.0	0.0.1	
# ::edge	school	mod	extreme	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	school	poss	nationalist	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	write-01	ARG0	history	0.0.0.0.0	0.0.0.0	
# ::edge	write-01	ARG1	nationalist	0.0.0.0.0	0.0.0.0.0.0	
(a / and 
      :ARG1-of (r2 / rely-01 
            :ARG0 (v / version 
                  :mod-of (h2 / history 
                        :ARG0-of (w / write-01 
                              :ARG1 (n / nationalist 
                                    :poss-of (s / school 
                                          :mod (e / extreme)))))) 
            :manner (h / heavy)) 
      :op1 (d / derive-01 
            :ARG1 (p2 / period) 
            :ARG2 (p / prejudice-01 
                  :ARG1-of (i / investigate-01 
                        :manner (r / rational)))))

# ::snt furthermore many would derive great pleasure and enrichment if they could look at it
# ::tok furthermore many would derive great pleasure and enrichment if they could look at it
# ::alignments 13-14|0.0.1.1.0 10-11|0 9-10|0.0.2 7-8|0.0.1.1 6-7|0.0.1 5-6|0.0.1.0 4-5|0.0.1.0.0 3-4|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:05.434
# ::node	0	possible	10-11
# ::node	0.0	derive-01	3-4
# ::node	0.0.0	many	1-2
# ::node	0.0.1	and	6-7
# ::node	0.0.1.0	pleasure	5-6
# ::node	0.0.1.0.0	great	4-5
# ::node	0.0.1.1	enrich-01	7-8
# ::node	0.0.1.1.0	it	13-14
# ::node	0.0.2	they	9-10
# ::root	0	possible
(p / possible 
      :condition-of (d / derive-01 
            :ARG0 (m / many) 
            :ARG1 (a / and 
                  :op1 (p2 / pleasure 
                        :mod (g / great)) 
                  :op2 (e / enrich-01 
                        :ARG0 (i / it))) 
            :ARG2 (t / they)))

# ::snt perhaps one should allow that a certain knowledge derived from our experience of the appearances of things should be termed genuine knowledge
# ::tok perhaps one should allow that a certain knowledge derived from our experience of the appearances of things should be termed genuine knowledge
# ::alignments 21-22|0.2.0 20-21|0.2.0.0 19-20|0.2 17-18|0.2.1 16-17|0.1.0 11-12|0.1 8-9|0 7-8|0.0 6-7|0.0.0 3-4|0.2.1.0 2-3|0.2.1.0.1 0-1|0.2.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:05.582
# ::node	0	derive-01	8-9
# ::node	0.0	knowledge	7-8
# ::node	0.0.0	certain	6-7
# ::node	0.1	experience-01	11-12
# ::node	0.1.0	thing	16-17
# ::node	0.2	term-01	19-20
# ::node	0.2.0	knowledge	21-22
# ::node	0.2.0.0	genuine	20-21
# ::node	0.2.1	recommend-01	17-18
# ::node	0.2.1.0	allow-01	3-4
# ::node	0.2.1.0.0	perhaps	0-1
# ::node	0.2.1.0.1	recommend-01	2-3
# ::root	0	derive-01
# ::edge	allow-01	ARG0	perhaps	0.2.1.0	0.2.1.0.0	
# ::edge	allow-01	ARG1	recommend-01	0.2.1.0	0.2.1	
# ::edge	derive-01	ARG1	knowledge	0	0.0	
# ::edge	derive-01	ARG2	experience-01	0	0.1	
# ::edge	experience-01	ARG1	thing	0.1	0.1.0	
# ::edge	knowledge	mod	certain	0.0	0.0.0	
# ::edge	knowledge	mod	genuine	0.2.0	0.2.0.0	
# ::edge	recommend-01	ARG1	allow-01	0.2.1.0.1	0.2.1.0	
# ::edge	recommend-01	ARG1	term-01	0.2.1	0.2	
# ::edge	term-01	ARG1	knowledge	0.2	0.2.0	
# ::edge	term-01	time	derive-01	0.2	0	
(d / derive-01 
      :ARG1 (k2 / knowledge 
            :mod (c / certain)) 
      :ARG2 (e / experience-01 
            :ARG1 (t2 / thing)) 
      :time-of (t / term-01 
            :ARG1 (k / knowledge 
                  :mod (g / genuine)) 
            :ARG1-of (r / recommend-01 
                  :ARG1-of (a / allow-01 
                        :ARG0 (p / perhaps) 
                        :ARG1-of (r2 / recommend-01)))))

# ::snt but if rights are given greater weight than is warranted by the interest they protect considered in itself this is presumably due to considerations which do not derive from concern for the wellbeing of the rightholder
# ::tok but if rights are given greater weight than is warranted by the interest they protect considered in itself this is presumably due to considerations which do not derive from concern for the wellbeing of the rightholder
# ::alignments 29-30|0.0.2.1.2.0.0 27-28|0.0.2.1.2.0 23-24|0.0.2.1.2 20-21|0.0.2.1.0 18-19|0.0.2.0 15-16|0.0.2.1.1.0.0 14-15|0.0.2.1.1 13-14|0.0.2.1.1.0 12-13|0.0.2.1 9-10|0.0.2 6-7|0.0.0 5-6|0.0.0.0 4-5|0.0 2-3|0.0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:05.761
# ::node	0	contrast-01	0-1
# ::node	0.0	give-01	4-5
# ::node	0.0.0	weight	6-7
# ::node	0.0.0.0	great	5-6
# ::node	0.0.1	right	2-3
# ::node	0.0.2	warrant-01	9-10
# ::node	0.0.2.0	this	18-19
# ::node	0.0.2.1	interest-01	12-13
# ::node	0.0.2.1.0	presume-01	20-21
# ::node	0.0.2.1.1	protect-01	14-15
# ::node	0.0.2.1.1.0	they	13-14
# ::node	0.0.2.1.1.0.0	consider-01	15-16
# ::node	0.0.2.1.2	consider-01	23-24
# ::node	0.0.2.1.2.0	derive-01	27-28
# ::node	0.0.2.1.2.0.0	concern-01	29-30
# ::root	0	contrast-01
# ::edge	consider-01	ARG0	they	0.0.2.1.1.0.0	0.0.2.1.1.0	
# ::edge	consider-01	ARG1	interest-01	0.0.2.1.2	0.0.2.1	
# ::edge	contrast-01	ARG1	give-01	0	0.0	
# ::edge	derive-01	ARG1	consider-01	0.0.2.1.2.0	0.0.2.1.2	
# ::edge	derive-01	ARG2	concern-01	0.0.2.1.2.0	0.0.2.1.2.0.0	
# ::edge	give-01	ARG1	weight	0.0	0.0.0	
# ::edge	give-01	ARG2	right	0.0	0.0.1	
# ::edge	give-01	purpose	warrant-01	0.0	0.0.2	
# ::edge	presume-01	ARG1	interest-01	0.0.2.1.0	0.0.2.1	
# ::edge	protect-01	ARG0	they	0.0.2.1.1	0.0.2.1.1.0	
# ::edge	protect-01	ARG1	interest-01	0.0.2.1.1	0.0.2.1	
# ::edge	warrant-01	ARG0	this	0.0.2	0.0.2.0	
# ::edge	warrant-01	ARG1	interest-01	0.0.2	0.0.2.1	
# ::edge	weight	mod	great	0.0.0	0.0.0.0	
(c4 / contrast-01 
      :ARG1 (g2 / give-01 
            :ARG1 (w2 / weight 
                  :mod (g / great)) 
            :ARG2 (r / right) 
            :purpose (w / warrant-01 
                  :ARG0 (t / this) 
                  :ARG1 (i / interest-01 
                        :ARG1-of (p / presume-01) 
                        :ARG1-of (p2 / protect-01 
                              :ARG0 (t2 / they 
                                    :ARG0-of (c3 / consider-01))) 
                        :ARG1-of (c2 / consider-01 
                              :ARG1-of (d / derive-01 
                                    :ARG2 (c / concern-01)))))))

# ::snt but earle can derive comfort from the fact that it is impossible to sink as low as crosby stills and
# ::tok but earle can derive comfort from the fact that it is impossible to sink as low as crosby stills and
# ::alignments 19-20|0.0.0.1 15-16|0.1.0.0 13-14|0.0.0 9-10|0.0.0.0 7-8|0.1.1 4-5|0.1.0 3-4|0.1 2-3|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:05.801
# ::node	0	contrast-01	0-1
# ::node	0.0	possible	2-3
# ::node	0.0.0	sink-01	13-14
# ::node	0.0.0.0	it	9-10
# ::node	0.0.0.1	and	19-20
# ::node	0.1	derive-01	3-4
# ::node	0.1.0	comfort-01	4-5
# ::node	0.1.0.0	low	15-16
# ::node	0.1.1	fact	7-8
# ::root	0	contrast-01
# ::edge	comfort-01	ARG1	low	0.1.0	0.1.0.0	
# ::edge	contrast-01	ARG1	possible	0	0.0	
# ::edge	contrast-01	ARG2	derive-01	0	0.1	
# ::edge	derive-01	ARG1	comfort-01	0.1	0.1.0	
# ::edge	derive-01	ARG2	fact	0.1	0.1.1	
# ::edge	possible	domain	sink-01	0.0	0.0.0	
# ::edge	sink-01	ARG0	it	0.0.0	0.0.0.0	
# ::edge	sink-01	ARG4	and	0.0.0	0.0.0.1	
(c2 / contrast-01 
      :ARG1 (p / possible 
            :domain (s / sink-01 
                  :ARG0 (i / it) 
                  :ARG4 (a / and))) 
      :ARG2 (d / derive-01 
            :ARG1 (c / comfort-01 
                  :ARG1 (l / low)) 
            :ARG2 (f / fact)))

# ::snt later in the same decade when british filmmakers had lost their interest in international affairs the same actor george cole plays the inadequate gangleader in too many crooks 1959 a film whose insights into the cold realities of contemporary marriage derives from the story of a kidnapped wife who plots revenge when her husband shows himself less than interested in paying over her ransom
# ::tok later in the same decade when british filmmakers had lost their interest in international affairs the same actor george cole plays the inadequate gangleader in too many crooks 1959 a film whose insights into the cold realities of contemporary marriage derives from the story of a kidnapped wife who plots revenge when her husband shows himself less than interested in paying over her ransom
# ::alignments 63-64|0.1.1.0 60-61|0.1.1 58-59|0.1 56-57|0.1.2 54-55|0 53-54|0.1.0.1+0.1.0 50-51|0.2 49-50|0.2.0 47-48|0.2.0.0.0+0.2.0.0 46-47|0.2.0.1 43-44|0.0 39-40|0.1.1.1 38-39|0.1.1.1.1 36-37|0.1.1.1.2 35-36|0.1.1.1.2.0 30-31|0.1.0.0 28-29|0.2.0.1.0.1.2.0+0.2.0.1.0.1.2 27-28|0.2.0.1.0.0.0 26-27|0.2.0.1.0.0 25-26|0.2.0.1.0 22-23|0.2.0.1.0.1.0.0+0.2.0.1.0.1.0 20-21|0.2.0.1.0.1 16-17|0.1.1.1.0 14-15|0.2.0.1.0.1.1.2 13-14|0.2.0.1.0.1.1.2.0 11-12|0.2.0.1.0.1.1 9-10|0.2.0.1.0.1.1.1 4-5|0.2.0.1.0.1.1.1.0.1+0.2.0.1.0.1.1.1.0 3-4|0.2.0.1.0.1.1.1.0.0 0-1|0.2.0.1.0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:07.541
# ::node	0	show-01	54-55
# ::node	0.0	story	43-44
# ::node	0.1	interest-01	58-59
# ::node	0.1.0	have-rel-role-91	53-54
# ::node	0.1.0.0	film	30-31
# ::node	0.1.0.1	husband	53-54
# ::node	0.1.1	pay-01	60-61
# ::node	0.1.1.0	ransom	63-64
# ::node	0.1.1.1	marry-01	39-40
# ::node	0.1.1.1.0	same-41	16-17
# ::node	0.1.1.1.1	contemporary	38-39
# ::node	0.1.1.1.2	reality	36-37
# ::node	0.1.1.1.2.0	cold	35-36
# ::node	0.1.2	less	56-57
# ::node	0.2	revenge-00	50-51
# ::node	0.2.0	plot-01	49-50
# ::node	0.2.0.0	have-rel-role-91	47-48
# ::node	0.2.0.0.0	wife	47-48
# ::node	0.2.0.1	kidnap-01	46-47
# ::node	0.2.0.1.0	too	25-26
# ::node	0.2.0.1.0.0	many	26-27
# ::node	0.2.0.1.0.0.0	crook	27-28
# ::node	0.2.0.1.0.1	play-02	20-21
# ::node	0.2.0.1.0.1.0	adequate	22-23
# ::node	0.2.0.1.0.1.0.0	-	22-23
# ::node	0.2.0.1.0.1.1	interest-01	11-12
# ::node	0.2.0.1.0.1.1.0	late	0-1
# ::node	0.2.0.1.0.1.1.1	lose-02	9-10
# ::node	0.2.0.1.0.1.1.1.0	temporal-quantity	4-5
# ::node	0.2.0.1.0.1.1.1.0.0	same-41	3-4
# ::node	0.2.0.1.0.1.1.1.0.1	decade	4-5
# ::node	0.2.0.1.0.1.1.2	affair	14-15
# ::node	0.2.0.1.0.1.1.2.0	international	13-14
# ::node	0.2.0.1.0.1.2	date-entity	28-29
# ::node	0.2.0.1.0.1.2.0	1959	28-29
# ::root	0	show-01
# ::edge	adequate	polarity	-	0.2.0.1.0.1.0	0.2.0.1.0.1.0.0	
# ::edge	affair	mod	international	0.2.0.1.0.1.1.2	0.2.0.1.0.1.1.2.0	
# ::edge	crook	quant	many	0.2.0.1.0.0.0	0.2.0.1.0.0	
# ::edge	date-entity	year	1959	0.2.0.1.0.1.2	0.2.0.1.0.1.2.0	
# ::edge	have-rel-role-91	ARG1	film	0.1.0	0.1.0.0	
# ::edge	have-rel-role-91	ARG1	plot-01	0.2.0.0	0.2.0	
# ::edge	have-rel-role-91	ARG2	husband	0.1.0	0.1.0.1	
# ::edge	have-rel-role-91	ARG2	wife	0.2.0.0	0.2.0.0.0	
# ::edge	interest-01	ARG0	have-rel-role-91	0.1	0.1.0	
# ::edge	interest-01	ARG1	late	0.2.0.1.0.1.1	0.2.0.1.0.1.1.0	
# ::edge	interest-01	ARG1	pay-01	0.1	0.1.1	
# ::edge	interest-01	ARG2	affair	0.2.0.1.0.1.1	0.2.0.1.0.1.1.2	
# ::edge	interest-01	degree	less	0.1	0.1.2	
# ::edge	kidnap-01	ARG1	too	0.2.0.1	0.2.0.1.0	
# ::edge	lose-02	ARG1	interest-01	0.2.0.1.0.1.1.1	0.2.0.1.0.1.1	
# ::edge	lose-02	location	temporal-quantity	0.2.0.1.0.1.1.1	0.2.0.1.0.1.1.1.0	
# ::edge	many	degree	too	0.2.0.1.0.0	0.2.0.1.0	
# ::edge	marry-01	ARG1	pay-01	0.1.1.1	0.1.1	
# ::edge	marry-01	time	contemporary	0.1.1.1	0.1.1.1.1	
# ::edge	pay-01	ARG1	ransom	0.1.1	0.1.1.0	
# ::edge	play-02	ARG1	adequate	0.2.0.1.0.1	0.2.0.1.0.1.0	
# ::edge	play-02	ARG2	interest-01	0.2.0.1.0.1	0.2.0.1.0.1.1	
# ::edge	play-02	duration	too	0.2.0.1.0.1	0.2.0.1.0	
# ::edge	play-02	time	date-entity	0.2.0.1.0.1	0.2.0.1.0.1.2	
# ::edge	plot-01	mod	kidnap-01	0.2.0	0.2.0.1	
# ::edge	reality	mod	cold	0.1.1.1.2	0.1.1.1.2.0	
# ::edge	reality	topic	marry-01	0.1.1.1.2	0.1.1.1	
# ::edge	revenge-00	ARG1	plot-01	0.2	0.2.0	
# ::edge	revenge-00	time	show-01	0.2	0	
# ::edge	same-41	ARG1	marry-01	0.1.1.1.0	0.1.1.1	
# ::edge	same-41	ARG1	temporal-quantity	0.2.0.1.0.1.1.1.0.0	0.2.0.1.0.1.1.1.0	
# ::edge	show-01	ARG0	story	0	0.0	
# ::edge	show-01	ARG1	interest-01	0	0.1	
# ::edge	temporal-quantity	unit	decade	0.2.0.1.0.1.1.1.0	0.2.0.1.0.1.1.1.0.1	
(s / show-01 
      :ARG0 (s2 / story) 
      :ARG1 (i / interest-01 
            :ARG0 (h / have-rel-role-91 
                  :ARG1 (f / film) 
                  :ARG2 (h2 / husband)) 
            :ARG1 (p / pay-01 
                  :ARG1 (r / ransom) 
                  :ARG1-of (m / marry-01 
                        :ARG1-of (s3 / same-41) 
                        :time (c / contemporary) 
                        :topic-of (r3 / reality 
                              :mod (c2 / cold)))) 
            :degree (l / less)) 
      :time-of (r2 / revenge-00 
            :ARG1 (p2 / plot-01 
                  :ARG1-of (h3 / have-rel-role-91 
                        :ARG2 (w / wife)) 
                  :mod (k / kidnap-01 
                        :ARG1 (t / too 
                              :degree-of (m2 / many 
                                    :quant-of (c3 / crook)) 
                              :duration-of (p3 / play-02 
                                    :ARG1 (a / adequate 
                                          :polarity -) 
                                    :ARG2 (i3 / interest-01 
                                          :ARG1 (l3 / late) 
                                          :ARG1-of (l2 / lose-02 
                                                :location (t2 / temporal-quantity 
                                                      :ARG1-of (s4 / same-41) 
                                                      :unit (d2 / decade))) 
                                          :ARG2 (a2 / affair 
                                                :mod (i2 / international))) 
                                    :time (d / date-entity 
                                          :year 1959)))))))

# ::snt tradition  that which we have always done and believed and from which we have derived our social forms
# ::tok tradition that which we have always done and believed and from which we have derived our social forms
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:07.542
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt this last idea is certainly not the least important for hume and putting the others aside he tries to locate the impression from which it is derived
# ::tok this last idea is certainly not the least important for hume and putting the others aside he tries to locate the impression from which it is derived
# ::alignments 26-27|0.1.2.1 24-25|0.1.2.1.0 21-22|0.1.2.0.0 19-20|0.1.2.0 17-18|0.1.2.2 16-17|0.1.2 15-16|0.1.2.2.0 14-15|0.1.1 12-13|0.1 11-12|0 8-9|0.0 4-5|0.1.2.1.1 2-3|0.1.0.0 1-2|0.1.0 0-1|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:07.772
# ::node	0	and	11-12
# ::node	0.0	important	8-9
# ::node	0.1	put-01	12-13
# ::node	0.1.0	last	1-2
# ::node	0.1.0.0	idea	2-3
# ::node	0.1.0.0.0	this	0-1
# ::node	0.1.1	other	14-15
# ::node	0.1.2	he	16-17
# ::node	0.1.2.0	locate-02	19-20
# ::node	0.1.2.0.0	impression	21-22
# ::node	0.1.2.1	derive-01	26-27
# ::node	0.1.2.1.0	it	24-25
# ::node	0.1.2.1.1	certain	4-5
# ::node	0.1.2.2	try-01	17-18
# ::node	0.1.2.2.0	aside	15-16
# ::root	0	and
# ::edge	and	op1	important	0	0.0	
# ::edge	and	op2	put-01	0	0.1	
# ::edge	certain	op1	derive-01	0.1.2.1.1	0.1.2.1	
# ::edge	derive-01	ARG0	he	0.1.2.1	0.1.2	
# ::edge	derive-01	ARG1	it	0.1.2.1	0.1.2.1.0	
# ::edge	idea	mod	last	0.1.0.0	0.1.0	
# ::edge	idea	mod	this	0.1.0.0	0.1.0.0.0	
# ::edge	locate-02	ARG0	he	0.1.2.0	0.1.2	
# ::edge	locate-02	ARG1	impression	0.1.2.0	0.1.2.0.0	
# ::edge	put-01	ARG0	last	0.1	0.1.0	
# ::edge	put-01	ARG1	other	0.1	0.1.1	
# ::edge	put-01	ARG2	he	0.1	0.1.2	
# ::edge	try-01	ARG0	he	0.1.2.2	0.1.2	
# ::edge	try-01	ARG1	aside	0.1.2.2	0.1.2.2.0	
(a2 / and 
      :op1 (i3 / important) 
      :op2 (p / put-01 
            :ARG0 (l2 / last 
                  :mod-of (i4 / idea 
                        :mod (t2 / this))) 
            :ARG1 (o / other) 
            :ARG2 (h / he 
                  :ARG0-of (l / locate-02 
                        :ARG1 (i2 / impression)) 
                  :ARG0-of (d / derive-01 
                        :ARG1 (i / it) 
                        :op-of (c / certain)) 
                  :ARG0-of (t / try-01 
                        :ARG1 (a / aside)))))

# ::snt the report suggests that rational credit use occurs when the utility derived from the immediate consumption outweighs the disutility of consumption foregone in the future
# ::tok the report suggests that rational credit use occurs when the utility derived from the immediate consumption outweighs the disutility of consumption foregone in the future
# ::alignments 24-25|0.1.0.0.1 20-21|0.1.0.0.0.0.0.0 16-17|0.1.0.0 15-16|0.1.0.0.0.0.0 14-15|0.1.0.0.0.0.0.1 11-12|0.1.0.0.0.0 10-11|0.1.0.0.0 7-8|0.1 6-7|0.1.0 5-6|0.1.0.1 4-5|0.1.0.2 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:07.964
# ::node	0	suggest-01	2-3
# ::node	0.0	report	1-2
# ::node	0.1	occur-01	7-8
# ::node	0.1.0	use-01	6-7
# ::node	0.1.0.0	outweigh-01	16-17
# ::node	0.1.0.0.0	utility	10-11
# ::node	0.1.0.0.0.0	derive-01	11-12
# ::node	0.1.0.0.0.0.0	consume-01	15-16
# ::node	0.1.0.0.0.0.0.0	consume-01	20-21
# ::node	0.1.0.0.0.0.0.1	immediate	14-15
# ::node	0.1.0.0.1	future	24-25
# ::node	0.1.0.1	credit-02	5-6
# ::node	0.1.0.2	rational	4-5
# ::root	0	suggest-01
# ::edge	consume-01	ARG1	consume-01	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	consume-01	time	immediate	0.1.0.0.0.0.0	0.1.0.0.0.0.0.1	
# ::edge	derive-01	ARG1	utility	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	derive-01	ARG2	consume-01	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	occur-01	ARG1	use-01	0.1	0.1.0	
# ::edge	outweigh-01	ARG0	use-01	0.1.0.0	0.1.0	
# ::edge	outweigh-01	ARG1	utility	0.1.0.0	0.1.0.0.0	
# ::edge	outweigh-01	dayperiod	future	0.1.0.0	0.1.0.0.1	
# ::edge	suggest-01	ARG0	report	0	0.0	
# ::edge	suggest-01	ARG1	occur-01	0	0.1	
# ::edge	use-01	ARG1	credit-02	0.1.0	0.1.0.1	
# ::edge	use-01	mod	rational	0.1.0	0.1.0.2	
(s / suggest-01 
      :ARG0 (r2 / report) 
      :ARG1 (o2 / occur-01 
            :ARG1 (u2 / use-01 
                  :ARG0-of (o / outweigh-01 
                        :ARG1 (u / utility 
                              :ARG1-of (d / derive-01 
                                    :ARG2 (c2 / consume-01 
                                          :ARG1-of (c / consume-01) 
                                          :time (i / immediate)))) 
                        :dayperiod (f / future)) 
                  :ARG1 (c3 / credit-02) 
                  :mod (r / rational))))

# ::snt it produces the same feeling of shock that one derives from attending walter hoopers meetings of the c
# ::tok it produces the same feeling of shock that one derives from attending walter hoopers meetings of the c
# ::alignments 17-18|0.1.0.0.0.0 14-15|0.1.0.0.0 11-12|0.1.0.0 6-7|0.1.0 4-5|0.1 3-4|0.1.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:08.052
# ::node	0	produce-01	1-2
# ::node	0.0	it	0-1
# ::node	0.1	feel-01	4-5
# ::node	0.1.0	shock-01	6-7
# ::node	0.1.0.0	attend-01	11-12
# ::node	0.1.0.0.0	meet-03	14-15
# ::node	0.1.0.0.0.0	c	17-18
# ::node	0.1.1	same-41	3-4
# ::root	0	produce-01
# ::edge	attend-01	ARG0	shock-01	0.1.0.0	0.1.0	
# ::edge	attend-01	ARG1	meet-03	0.1.0.0	0.1.0.0.0	
# ::edge	feel-01	ARG1	shock-01	0.1	0.1.0	
# ::edge	meet-03	ARG1	c	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	produce-01	ARG0	it	0	0.0	
# ::edge	produce-01	ARG1	feel-01	0	0.1	
# ::edge	same-41	ARG1	feel-01	0.1.1	0.1	
(p / produce-01 
      :ARG0 (i / it) 
      :ARG1 (f / feel-01 
            :ARG1 (s / shock-01 
                  :ARG0-of (a / attend-01 
                        :ARG1 (m / meet-03 
                              :ARG1 (c / c)))) 
            :ARG1-of (s2 / same-41)))

# ::snt   the irradiation process uses either electron beam machines or gamma radiation which is derived from cobalt 60 a radio isotope also used in medical therapy
# ::tok the irradiation process uses either electron beam machines or gamma radiation which is derived from cobalt 60 a radio isotope also used in medical therapy
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:08.052
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the concept of an integrated school combining courses for solo and choral singers and for solo pianists and accompanists is characteristic of hereford and derives largely from suzanne judelsons conviction that musicians of all standards and disciplines should have the opportunity to meet and learn from each other
# ::tok the concept of an integrated school combining courses for solo and choral singers and for solo pianists and accompanists is characteristic of hereford and derives largely from suzanne judelsons conviction that musicians of all standards and disciplines should have the opportunity to meet and learn from each other
# ::alignments 47-48|0.1.0.0.1.0.0 46-47|0.1.0.0.1.0 44-45|0.1.0.0.1.1.0.0 43-44|0.1.0.0.1.1.0 40-41|0.1.0.0.1.1 37-38|0.1.0.0.1 36-37|0.1.0.0.1.3.4 35-36|0.1.0.0.1.3 34-35|0.1.0.0.1.3.3 33-34|0.1.0.0.1.3.0 31-32|0.1.0.0.1.3.2 29-30|0.1.0.0.1.3.1 25-26|0.1.0.0.1.3.1.0 23-24|0.1.0.0.1.1.0.0.0 20-21|0.1.0.0.1.2 17-18|0.1.0.1 13-14|0.1.0.0 12-13|0.1.0 10-11|0.1 7-8|0.1.0.0.0.0 6-7|0.1.0.0.0 5-6|0.0 4-5|0 1-2|0.1.0.0.1.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:08.936
# ::node	0	integrate-01	4-5
# ::node	0.0	school	5-6
# ::node	0.1	and	10-11
# ::node	0.1.0	sing-01	12-13
# ::node	0.1.0.0	and	13-14
# ::node	0.1.0.0.0	combine-01	6-7
# ::node	0.1.0.0.0.0	course	7-8
# ::node	0.1.0.0.1	recommend-01	37-38
# ::node	0.1.0.0.1.0	each	46-47
# ::node	0.1.0.0.1.0.0	other	47-48
# ::node	0.1.0.0.1.1	opportunity	40-41
# ::node	0.1.0.0.1.1.0	and	43-44
# ::node	0.1.0.0.1.1.0.0	learn-01	44-45
# ::node	0.1.0.0.1.1.0.0.0	and	23-24
# ::node	0.1.0.0.1.2	characteristic-41	20-21
# ::node	0.1.0.0.1.2.0	concept	1-2
# ::node	0.1.0.0.1.3	and	35-36
# ::node	0.1.0.0.1.3.0	all	33-34
# ::node	0.1.0.0.1.3.1	convict-01	29-30
# ::node	0.1.0.0.1.3.1.0	large	25-26
# ::node	0.1.0.0.1.3.2	musician	31-32
# ::node	0.1.0.0.1.3.3	standard	34-35
# ::node	0.1.0.0.1.3.4	discipline	36-37
# ::node	0.1.0.1	and	17-18
# ::root	0	integrate-01
# ::edge	and	mod	all	0.1.0.0.1.3	0.1.0.0.1.3.0	
# ::edge	and	op1	convict-01	0.1.0.0.1.3	0.1.0.0.1.3.1	
# ::edge	and	op1	integrate-01	0.1	0	
# ::edge	and	op1	learn-01	0.1.0.0.1.1.0	0.1.0.0.1.1.0.0	
# ::edge	and	op1	sing-01	0.1.0.0	0.1.0	
# ::edge	and	op1	sing-01	0.1.0.1	0.1.0	
# ::edge	and	op2	musician	0.1.0.0.1.3	0.1.0.0.1.3.2	
# ::edge	and	op2	recommend-01	0.1.0.0	0.1.0.0.1	
# ::edge	and	op2	sing-01	0.1	0.1.0	
# ::edge	and	op3	standard	0.1.0.0.1.3	0.1.0.0.1.3.3	
# ::edge	and	op4	discipline	0.1.0.0.1.3	0.1.0.0.1.3.4	
# ::edge	and	op5	recommend-01	0.1.0.0.1.3	0.1.0.0.1	
# ::edge	characteristic-41	ARG0	concept	0.1.0.0.1.2	0.1.0.0.1.2.0	
# ::edge	characteristic-41	ARG2	recommend-01	0.1.0.0.1.2	0.1.0.0.1	
# ::edge	combine-01	ARG1	course	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	combine-01	ARG2	and	0.1.0.0.0	0.1.0.0	
# ::edge	convict-01	ARG0	large	0.1.0.0.1.3.1	0.1.0.0.1.3.1.0	
# ::edge	integrate-01	ARG1	school	0	0.0	
# ::edge	learn-01	ARG1	and	0.1.0.0.1.1.0.0	0.1.0.0.1.1.0.0.0	
# ::edge	opportunity	purpose	and	0.1.0.0.1.1	0.1.0.0.1.1.0	
# ::edge	other	mod	each	0.1.0.0.1.0.0	0.1.0.0.1.0	
# ::edge	recommend-01	ARG0	each	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	recommend-01	ARG1	opportunity	0.1.0.0.1	0.1.0.0.1.1	
(i / integrate-01 
      :ARG1 (s3 / school) 
      :op-of (a7 / and 
            :op1 (s2 / sing-01 
                  :op-of (a6 / and 
                        :ARG2-of (c4 / combine-01 
                              :ARG1 (c3 / course)) 
                        :op1 (r / recommend-01 
                              :ARG0 (e / each 
                                    :mod-of (o / other)) 
                              :ARG1 (o2 / opportunity 
                                    :purpose (a / and 
                                          :op1 (l / learn-01 
                                                :ARG1 (a4 / and)))) 
                              :ARG2-of (c2 / characteristic-41 
                                    :ARG0 (c5 / concept)) 
                              :op-of (a2 / and 
                                    :mod (a3 / all) 
                                    :op1 (c / convict-01 
                                          :ARG0 (l2 / large)) 
                                    :op2 (m / musician) 
                                    :op3 (s / standard) 
                                    :op4 (d / discipline)))) 
                  :op-of (a5 / and))))

# ::snt insurance companies have been accused of systematically exploiting the vulnerability of the more seriously injured claimants by artificial delays from which the companies derive the added advantage of earning income on their invested funds in the meantime and of seeing claimants become increasingly less able to sustain a successful trial with the flux of time
# ::tok insurance companies have been accused of systematically exploiting the vulnerability of the more seriously injured claimants by artificial delays from which the companies derive the added advantage of earning income on their invested funds in the meantime and of seeing claimants become increasingly less able to sustain a successful trial with the flux of time
# ::alignments 54-55|0.0 52-53|0 49-50|0.1.0 48-49|0.1.0.0 46-47|0.1 44-45|0.1.1 43-44|0.1.1.2 42-43|0.1.1.0 41-42|0.1.1.1 39-40|0.1.1.1.1 37-38|0.1.1.1.1.0 36-37|0.1.1.1.0.0.0.0 33-34|0.1.1.1.0.0.0 32-33|0.1.1.1.0.0 29-30|0.1.1.1.0.1.0.0.0.0 28-29|0.1.1.1.0.1.0.0.0 26-27|0.1.1.1.0.1.0 25-26|0.1.1.1.0.1.0.0 23-24|0.1.1.1.0.1 22-23|0.1.1.1.0 18-19|0.1.1.1.0.1.1 17-18|0.1.1.1.0.1.1.1 14-15|0.1.1.1.0.1.1.0 13-14|0.1.1.1.0.1.1.0.0 9-10|0.1.1.1.0.1.1.2.0 7-8|0.1.1.1.0.1.1.2 6-7|0.1.1.1.0.1.1.2.2 4-5|0.1.1.1.0.1.1.2.1 1-2|0.1.1.1.0.1.1.2.1.0 0-1|0.1.1.1.0.1.1.2.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:10.542
# ::node	0	flux-01	52-53
# ::node	0.0	time	54-55
# ::node	0.1	sustain-01	46-47
# ::node	0.1.0	trial	49-50
# ::node	0.1.0.0	succeed-01	48-49
# ::node	0.1.1	possible	44-45
# ::node	0.1.1.0	increase-01	42-43
# ::node	0.1.1.1	become-01	41-42
# ::node	0.1.1.1.0	company	22-23
# ::node	0.1.1.1.0.0	invest-01	32-33
# ::node	0.1.1.1.0.0.0	fund	33-34
# ::node	0.1.1.1.0.0.0.0	meantime	36-37
# ::node	0.1.1.1.0.1	derive-01	23-24
# ::node	0.1.1.1.0.1.0	advantage	26-27
# ::node	0.1.1.1.0.1.0.0	add-01	25-26
# ::node	0.1.1.1.0.1.0.0.0	earn-01	28-29
# ::node	0.1.1.1.0.1.0.0.0.0	income	29-30
# ::node	0.1.1.1.0.1.1	delay-01	18-19
# ::node	0.1.1.1.0.1.1.0	injure-01	14-15
# ::node	0.1.1.1.0.1.1.0.0	serious	13-14
# ::node	0.1.1.1.0.1.1.1	artificial	17-18
# ::node	0.1.1.1.0.1.1.2	exploit-01	7-8
# ::node	0.1.1.1.0.1.1.2.0	vulnerability	9-10
# ::node	0.1.1.1.0.1.1.2.1	accuse-01	4-5
# ::node	0.1.1.1.0.1.1.2.1.0	company	1-2
# ::node	0.1.1.1.0.1.1.2.1.0.0	insure-02	0-1
# ::node	0.1.1.1.0.1.1.2.2	systematical	6-7
# ::node	0.1.1.1.1	see-01	39-40
# ::node	0.1.1.1.1.0	and	37-38
# ::node	0.1.1.2	less	43-44
# ::root	0	flux-01
# ::edge	accuse-01	ARG1	company	0.1.1.1.0.1.1.2.1	0.1.1.1.0.1.1.2.1.0	
# ::edge	accuse-01	ARG2	exploit-01	0.1.1.1.0.1.1.2.1	0.1.1.1.0.1.1.2	
# ::edge	add-01	ARG1	advantage	0.1.1.1.0.1.0.0	0.1.1.1.0.1.0	
# ::edge	add-01	time	earn-01	0.1.1.1.0.1.0.0	0.1.1.1.0.1.0.0.0	
# ::edge	and	op1	see-01	0.1.1.1.1.0	0.1.1.1.1	
# ::edge	become-01	ARG1	company	0.1.1.1	0.1.1.1.0	
# ::edge	become-01	ARG2	possible	0.1.1.1	0.1.1	
# ::edge	delay-01	ARG1	derive-01	0.1.1.1.0.1.1	0.1.1.1.0.1	
# ::edge	delay-01	mod	artificial	0.1.1.1.0.1.1	0.1.1.1.0.1.1.1	
# ::edge	derive-01	ARG0	company	0.1.1.1.0.1	0.1.1.1.0	
# ::edge	derive-01	ARG1	advantage	0.1.1.1.0.1	0.1.1.1.0.1.0	
# ::edge	earn-01	ARG1	income	0.1.1.1.0.1.0.0.0	0.1.1.1.0.1.0.0.0.0	
# ::edge	exploit-01	ARG1	vulnerability	0.1.1.1.0.1.1.2	0.1.1.1.0.1.1.2.0	
# ::edge	exploit-01	manner	systematical	0.1.1.1.0.1.1.2	0.1.1.1.0.1.1.2.2	
# ::edge	exploit-01	time	delay-01	0.1.1.1.0.1.1.2	0.1.1.1.0.1.1	
# ::edge	flux-01	ARG1	time	0	0.0	
# ::edge	fund	poss	meantime	0.1.1.1.0.0.0	0.1.1.1.0.0.0.0	
# ::edge	increase-01	ARG1	possible	0.1.1.0	0.1.1	
# ::edge	injure-01	ARG1	delay-01	0.1.1.1.0.1.1.0	0.1.1.1.0.1.1	
# ::edge	injure-01	degree	serious	0.1.1.1.0.1.1.0	0.1.1.1.0.1.1.0.0	
# ::edge	insure-02	ARG0	company	0.1.1.1.0.1.1.2.1.0.0	0.1.1.1.0.1.1.2.1.0	
# ::edge	invest-01	ARG0	company	0.1.1.1.0.0	0.1.1.1.0	
# ::edge	invest-01	ARG2	fund	0.1.1.1.0.0	0.1.1.1.0.0.0	
# ::edge	possible	degree	less	0.1.1	0.1.1.2	
# ::edge	possible	domain	sustain-01	0.1.1	0.1	
# ::edge	see-01	ARG1	become-01	0.1.1.1.1	0.1.1.1	
# ::edge	succeed-01	ARG1	trial	0.1.0.0	0.1.0	
# ::edge	sustain-01	ARG1	trial	0.1	0.1.0	
# ::edge	sustain-01	prep-in	flux-01	0.1	0	
(f / flux-01 
      :ARG1 (t / time) 
      :prep-in-of (s2 / sustain-01 
            :ARG1 (t2 / trial 
                  :ARG1-of (s / succeed-01)) 
            :domain-of (p / possible 
                  :ARG1-of (i / increase-01) 
                  :ARG2-of (b / become-01 
                        :ARG1 (c / company 
                              :ARG0-of (i2 / invest-01 
                                    :ARG2 (f2 / fund 
                                          :poss (m / meantime))) 
                              :ARG0-of (d / derive-01 
                                    :ARG1 (a2 / advantage 
                                          :ARG1-of (a3 / add-01 
                                                :time (e / earn-01 
                                                      :ARG1 (i3 / income)))) 
                                    :ARG1-of (d2 / delay-01 
                                          :ARG1-of (i4 / injure-01 
                                                :degree (s4 / serious)) 
                                          :mod (a4 / artificial) 
                                          :time-of (e2 / exploit-01 
                                                :ARG1 (v / vulnerability) 
                                                :ARG2-of (a5 / accuse-01 
                                                      :ARG1 (c2 / company 
                                                            :ARG0-of (i5 / insure-02))) 
                                                :manner (s5 / systematical))))) 
                        :ARG1-of (s3 / see-01 
                              :op-of (a / and))) 
                  :degree (l / less))))

# ::snt sadly for barrow it is comprised of defeats although they could derive a scrap of satisfaction from yesterdays 626 reverse at wigan
# ::tok sadly for barrow it is comprised of defeats although they could derive a scrap of satisfaction from yesterdays 626 reverse at wigan
# ::alignments 19-20|0.0.2 15-16|0.0.1.0 13-14|0.0.1 11-12|0.0 10-11|0 9-10|0.0.0 5-6|0.0.0.0 3-4|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:10.586
# ::node	0	possible	10-11
# ::node	0.0	derive-01	11-12
# ::node	0.0.0	they	9-10
# ::node	0.0.0.0	comprise-01	5-6
# ::node	0.0.0.0.0	it	3-4
# ::node	0.0.1	scrap-01	13-14
# ::node	0.0.1.0	satisfy-01	15-16
# ::node	0.0.2	reverse-01	19-20
# ::root	0	possible
# ::edge	comprise-01	ARG0	they	0.0.0.0	0.0.0	
# ::edge	comprise-01	ARG1	it	0.0.0.0	0.0.0.0.0	
# ::edge	derive-01	ARG0	they	0.0	0.0.0	
# ::edge	derive-01	ARG1	scrap-01	0.0	0.0.1	
# ::edge	possible	domain	derive-01	0	0.0	
# ::edge	reverse-01	subevent	derive-01	0.0.2	0.0	
# ::edge	scrap-01	ARG1	satisfy-01	0.0.1	0.0.1.0	
(p / possible 
      :domain (d / derive-01 
            :ARG0 (t / they 
                  :ARG0-of (c / comprise-01 
                        :ARG1 (i / it))) 
            :ARG1 (s2 / scrap-01 
                  :ARG1 (s / satisfy-01)) 
            :subevent-of (r / reverse-01)))

# ::snt the sulphates of course would  have been derived from the copious volumes of sulphur dioxide carried up  into the atmosphere during the eruption
# ::tok the sulphates of course would have been derived from the copious volumes of sulphur dioxide carried up into the atmosphere during the eruption
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:10.587
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt to the extent that every person has reason to act in the interest of others his reasons derive from their goals
# ::tok to the extent that every person has reason to act in the interest of others his reasons derive from their goals
# ::alignments 20-21|0.2.1.1 17-18|0.2.1 16-17|0.2.1.0 14-15|0.1 12-13|0 9-10|0.2 7-8|0.0 5-6|0.2.0 4-5|0.2.0.0 2-3|0.2.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:10.704
# ::node	0	interest-01	12-13
# ::node	0.0	reason	7-8
# ::node	0.1	other	14-15
# ::node	0.2	act-02	9-10
# ::node	0.2.0	person	5-6
# ::node	0.2.0.0	every	4-5
# ::node	0.2.1	derive-01	17-18
# ::node	0.2.1.0	reason	16-17
# ::node	0.2.1.1	goal	20-21
# ::node	0.2.2	extent	2-3
# ::root	0	interest-01
# ::edge	act-02	ARG0	person	0.2	0.2.0	
# ::edge	act-02	ARG1	derive-01	0.2	0.2.1	
# ::edge	act-02	location	extent	0.2	0.2.2	
# ::edge	act-02	manner	interest-01	0.2	0	
# ::edge	derive-01	ARG0	reason	0.2.1	0.2.1.0	
# ::edge	derive-01	ARG1	goal	0.2.1	0.2.1.1	
# ::edge	interest-01	ARG1	reason	0	0.0	
# ::edge	interest-01	ARG2	other	0	0.1	
# ::edge	person	mod	every	0.2.0	0.2.0.0	
(i / interest-01 
      :ARG1 (r2 / reason) 
      :ARG2 (o / other) 
      :manner-of (a / act-02 
            :ARG0 (p / person 
                  :mod (e / every)) 
            :ARG1 (d / derive-01 
                  :ARG0 (r / reason) 
                  :ARG1 (g / goal)) 
            :location (e2 / extent)))

# ::snt finding out that a husband is not only dressing up as a woman but deriving sexual pleasure from it perhaps masturbating whilst dressed in front of a mirror can threaten her own sexuality
# ::tok finding out that a husband is not only dressing up as a woman but deriving sexual pleasure from it perhaps masturbating whilst dressed in front of a mirror can threaten her own sexuality
# ::alignments 32-33|0.2.1.0.0.0.0 29-30|0.2.1.0.0.0 28-29|0.2.1.0.0 27-28|0.2.1.0.0.0.0.0 24-25|0.2.1.0.1 22-23|0.2.1.0 19-20|0.1.0.0.0 18-19|0.2.1 16-17|0.2 15-16|0.2.0 13-14|0 12-13|0.1.1 8-9|0.1 7-8|0.1.2 4-5|0.1.0+0.1.0.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:11.062
# ::node	0	contrast-01	13-14
# ::node	0.0	find-01	0-1
# ::node	0.1	dress-01	8-9
# ::node	0.1.0	husband	4-5
# ::node	0.1.0.0	have-rel-role-91	4-5
# ::node	0.1.0.0.0	perhaps	19-20
# ::node	0.1.1	woman	12-13
# ::node	0.1.2	only	7-8
# ::node	0.2	pleasure	16-17
# ::node	0.2.0	sexual	15-16
# ::node	0.2.1	it	18-19
# ::node	0.2.1.0	dress-01	22-23
# ::node	0.2.1.0.0	possible	28-29
# ::node	0.2.1.0.0.0	threaten-01	29-30
# ::node	0.2.1.0.0.0.0	sexuality	32-33
# ::node	0.2.1.0.0.0.0.0	mirror	27-28
# ::node	0.2.1.0.1	front	24-25
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	find-01	0	0.0	
# ::edge	contrast-01	ARG2	pleasure	0	0.2	
# ::edge	dress-01	ARG0	husband	0.1	0.1.0	
# ::edge	dress-01	ARG0	it	0.2.1.0	0.2.1	
# ::edge	dress-01	ARG1	contrast-01	0.1	0	
# ::edge	dress-01	ARG1	possible	0.2.1.0	0.2.1.0.0	
# ::edge	dress-01	ARG2	front	0.2.1.0	0.2.1.0.1	
# ::edge	dress-01	ARG2	woman	0.1	0.1.1	
# ::edge	dress-01	mod	only	0.1	0.1.2	
# ::edge	have-rel-role-91	ARG1	perhaps	0.1.0.0	0.1.0.0.0	
# ::edge	have-rel-role-91	ARG2	husband	0.1.0.0	0.1.0	
# ::edge	pleasure	mod	sexual	0.2	0.2.0	
# ::edge	pleasure	poss	it	0.2	0.2.1	
# ::edge	possible	domain	threaten-01	0.2.1.0.0	0.2.1.0.0.0	
# ::edge	sexuality	poss	mirror	0.2.1.0.0.0.0	0.2.1.0.0.0.0.0	
# ::edge	threaten-01	ARG1	sexuality	0.2.1.0.0.0	0.2.1.0.0.0.0	
(c / contrast-01 
      :ARG1 (f2 / find-01) 
      :ARG1-of (d2 / dress-01 
            :ARG0 (h2 / husband 
                  :ARG2-of (h / have-rel-role-91 
                        :ARG1 (p2 / perhaps))) 
            :ARG2 (w / woman) 
            :mod (o / only)) 
      :ARG2 (p3 / pleasure 
            :mod (s2 / sexual) 
            :poss (i / it 
                  :ARG0-of (d / dress-01 
                        :ARG1 (p / possible 
                              :domain (t / threaten-01 
                                    :ARG1 (s / sexuality 
                                          :poss (m / mirror)))) 
                        :ARG2 (f / front)))))

# ::snt much of the power and prestige it went on to gain derived from the fact that unlike other such organizations which have come and gone it managed to keep its numbers extremely low thus giving this claim some credibility
# ::tok much of the power and prestige it went on to gain derived from the fact that unlike other such organizations which have come and gone it managed to keep its numbers extremely low thus giving this claim some credibility
# ::alignments 38-39|0.1.0.0.1.1.0 37-38|0.1.0.0.1.1.0.0 36-37|0.1.0.0.1.1 35-36|0.1.1 32-33|0.1.0.0.0 31-32|0.1.0.0.0.0 30-31|0.1.0.1 26-27|0.1.0.0 25-26|0.1.0 23-24|0.1.0.0.1 19-20|0.1.0.0.1.0 18-19|0.1.0.0.1.0.0 17-18|0.1.0.0.1.0.1 14-15|0.1.2 11-12|0.1 10-11|0 6-7|0.0 5-6|0.2.0.1 4-5|0.2.0 3-4|0.2 0-1|0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:11.608
# ::node	0	gain-02	10-11
# ::node	0.0	it	6-7
# ::node	0.1	derive-01	11-12
# ::node	0.1.0	it	25-26
# ::node	0.1.0.0	manage-02	26-27
# ::node	0.1.0.0.0	low	32-33
# ::node	0.1.0.0.0.0	extreme	31-32
# ::node	0.1.0.0.1	and	23-24
# ::node	0.1.0.0.1.0	organization	19-20
# ::node	0.1.0.0.1.0.0	such	18-19
# ::node	0.1.0.0.1.0.1	other	17-18
# ::node	0.1.0.0.1.1	claim-01	36-37
# ::node	0.1.0.0.1.1.0	credibility	38-39
# ::node	0.1.0.0.1.1.0.0	some	37-38
# ::node	0.1.0.1	number	30-31
# ::node	0.1.1	this	35-36
# ::node	0.1.2	fact	14-15
# ::node	0.2	power	3-4
# ::node	0.2.0	and	4-5
# ::node	0.2.0.0	much	0-1
# ::node	0.2.0.1	prestige	5-6
# ::root	0	gain-02
# ::edge	and	degree	much	0.2.0	0.2.0.0	
# ::edge	and	op1	organization	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	and	op1	power	0.2.0	0.2	
# ::edge	and	op2	manage-02	0.1.0.0.1	0.1.0.0	
# ::edge	and	op2	prestige	0.2.0	0.2.0.1	
# ::edge	and	op3	claim-01	0.1.0.0.1	0.1.0.0.1.1	
# ::edge	credibility	quant	some	0.1.0.0.1.1.0	0.1.0.0.1.1.0.0	
# ::edge	credibility	time	claim-01	0.1.0.0.1.1.0	0.1.0.0.1.1	
# ::edge	derive-01	ARG0	it	0.1	0.1.0	
# ::edge	derive-01	ARG1	this	0.1	0.1.1	
# ::edge	derive-01	ARG2	fact	0.1	0.1.2	
# ::edge	gain-02	ARG0	it	0	0.0	
# ::edge	gain-02	ARG1	derive-01	0	0.1	
# ::edge	gain-02	ARG2	power	0	0.2	
# ::edge	low	degree	extreme	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	manage-02	ARG0	it	0.1.0.0	0.1.0	
# ::edge	manage-02	ARG1	low	0.1.0.0	0.1.0.0.0	
# ::edge	number	poss	it	0.1.0.1	0.1.0	
# ::edge	organization	mod	other	0.1.0.0.1.0	0.1.0.0.1.0.1	
# ::edge	organization	mod	such	0.1.0.0.1.0	0.1.0.0.1.0.0	
(g / gain-02 
      :ARG0 (i2 / it) 
      :ARG1 (d / derive-01 
            :ARG0 (i / it 
                  :ARG0-of (m / manage-02 
                        :ARG1 (l / low 
                              :degree (e / extreme)) 
                        :op-of (a / and 
                              :op1 (o / organization 
                                    :mod (s2 / such) 
                                    :mod (o2 / other)) 
                              :op2 (c2 / claim-01 
                                    :time-of (c / credibility 
                                          :quant (s / some))))) 
                  :poss-of (n / number)) 
            :ARG1 (t / this) 
            :ARG2 (f / fact)) 
      :ARG2 (p2 / power 
            :op-of (a2 / and 
                  :degree (m2 / much) 
                  :op1 (p / prestige))))

# ::snt steve reichs different trains took us into the realms of documentary its basic melodic ideas derived from speech samples taken from recordings of the composers governess three holocaust survivors and a retired pullman porter all recollecting wartime train journeys
# ::tok steve reichs different trains took us into the realms of documentary its basic melodic ideas derived from speech samples taken from recordings of the composers governess three holocaust survivors and a retired pullman porter all recollecting wartime train journeys
# ::alignments 37-38|0.1.2.1 36-37|0.1.2 34-35|0.1.2.0 31-32|0.1.1.0 29-30|0.1.1.0.0.2 28-29|0.1.1.0.0.0+0.1.1.0.0 27-28|0.1.1.0.0.1 26-27|0.1.1.0.0.3 18-19|0 17-18|0.0 15-16|0.1 14-15|0.1.1 12-13|0.1.1.1 10-11|0.1.0 8-9|0.1.0.0 3-4|0.1.0.0.0.0 2-3|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:12.073
# ::node	0	sample-01	18-19
# ::node	0.0	speech	17-18
# ::node	0.1	derive-01	15-16
# ::node	0.1.0	documentary	10-11
# ::node	0.1.0.0	realm	8-9
# ::node	0.1.0.0.0	differ-02	2-3
# ::node	0.1.0.0.0.0	train	3-4
# ::node	0.1.1	idea	14-15
# ::node	0.1.1.0	retire-01	31-32
# ::node	0.1.1.0.0	person	28-29
# ::node	0.1.1.0.0.0	survive-01	28-29
# ::node	0.1.1.0.0.1	holocaust	27-28
# ::node	0.1.1.0.0.2	and	29-30
# ::node	0.1.1.0.0.3	3	26-27
# ::node	0.1.1.1	basic	12-13
# ::node	0.1.2	wartime	36-37
# ::node	0.1.2.0	all	34-35
# ::node	0.1.2.1	train	37-38
# ::root	0	sample-01
# ::edge	and	op1	person	0.1.1.0.0.2	0.1.1.0.0	
# ::edge	derive-01	ARG0	documentary	0.1	0.1.0	
# ::edge	derive-01	ARG1	idea	0.1	0.1.1	
# ::edge	derive-01	ARG2	sample-01	0.1	0	
# ::edge	differ-02	ARG0	train	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	differ-02	ARG1	realm	0.1.0.0.0	0.1.0.0	
# ::edge	documentary	quant	realm	0.1.0	0.1.0.0	
# ::edge	idea	mod	basic	0.1.1	0.1.1.1	
# ::edge	person	mod	holocaust	0.1.1.0.0	0.1.1.0.0.1	
# ::edge	person	quant	3	0.1.1.0.0	0.1.1.0.0.3	
# ::edge	retire-01	ARG0	person	0.1.1.0	0.1.1.0.0	
# ::edge	retire-01	ARG1	idea	0.1.1.0	0.1.1	
# ::edge	sample-01	ARG1	speech	0	0.0	
# ::edge	survive-01	ARG0	person	0.1.1.0.0.0	0.1.1.0.0	
# ::edge	train	mod	wartime	0.1.2.1	0.1.2	
# ::edge	wartime	mod	all	0.1.2	0.1.2.0	
# ::edge	wartime	op1	derive-01	0.1.2	0.1	
(s2 / sample-01 
      :ARG1 (s3 / speech) 
      :ARG2-of (d / derive-01 
            :ARG0 (d2 / documentary 
                  :quant (r2 / realm 
                        :ARG1-of (d3 / differ-02 
                              :ARG0 (t2 / train)))) 
            :ARG1 (i / idea 
                  :ARG1-of (r / retire-01 
                        :ARG0 (p / person 
                              :ARG0-of (s / survive-01) 
                              :mod (h / holocaust) 
                              :op-of (a2 / and) 
                              :quant 3)) 
                  :mod (b / basic)) 
            :op-of (w / wartime 
                  :mod (a / all) 
                  :mod-of (t / train))))

# ::snt but the main problem derives from joffeacute
# ::tok but the main problem derives from joffeacute
# ::alignments 3-4|0.0 2-3|0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:12.079
# ::node	0	contrast-01	0-1
# ::node	0.0	problem	3-4
# ::node	0.0.0	main	2-3
# ::root	0	contrast-01
# ::edge	contrast-01	ARG2	problem	0	0.0	
# ::edge	problem	mod	main	0.0	0.0.0	
(c / contrast-01 
      :ARG2 (p / problem 
            :mod (m / main)))

# ::snt their magic over the spanish masses derives from their remoteness
# ::tok their magic over the spanish masses derives from their remoteness
# ::alignments 9-10|0.0 5-6|0.0.0 4-5|0.0.0.0.0.0+0.0.0.0.0+0.0.0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:12.093
# ::node	0	magic	1-2
# ::node	0.0	remoteness	9-10
# ::node	0.0.0	mass	5-6
# ::node	0.0.0.0	language	4-5
# ::node	0.0.0.0.0	name	4-5
# ::node	0.0.0.0.0.0	"Spanish"	4-5
# ::root	0	magic
(m2 / magic 
      :poss-of (r / remoteness 
            :poss (m / mass 
                  :medium (l / language 
                        :name (n / name 
                              :op1 "Spanish")))))

# ::snt perhaps levis impatience with obscurity his desire to communicate at all costs derived from the absolute lack of communication at auschwitz where there was only as he said a debased vocabulary full of savage imperatives insults blasphemies and imprecations
# ::tok perhaps levis impatience with obscurity his desire to communicate at all costs derived from the absolute lack of communication at auschwitz where there was only as he said a debased vocabulary full of savage imperatives insults blasphemies and imprecations
# ::alignments 37-38|0 35-36|0.0 33-34|0.1.1.0.0 31-32|0.0.0.0.0 27-28|0.0.0.0 26-27|0.0.0 24-25|0.0.0.0.1 18-19|0.1.0 16-17|0.1 15-16|0.1.2 12-13|0.1.1 11-12|0.1.1.0 10-11|0.1.1.0.1.1.0 8-9|0.1.1.0.1 6-7|0.1.1.0.1.1 0-1|0.1.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:12.396
# ::node	0	and	37-38
# ::node	0.0	insult-01	35-36
# ::node	0.0.0	he	26-27
# ::node	0.0.0.0	say-01	27-28
# ::node	0.0.0.0.0	full	31-32
# ::node	0.0.0.0.1	only	24-25
# ::node	0.1	lack-01	16-17
# ::node	0.1.0	communicate-01	18-19
# ::node	0.1.1	derive-01	12-13
# ::node	0.1.1.0	cost-01	11-12
# ::node	0.1.1.0.0	savage	33-34
# ::node	0.1.1.0.1	communicate-01	8-9
# ::node	0.1.1.0.1.0	perhaps	0-1
# ::node	0.1.1.0.1.1	desire-01	6-7
# ::node	0.1.1.0.1.1.0	all	10-11
# ::node	0.1.2	absolute	15-16
# ::root	0	and
# ::edge	and	op1	lack-01	0	0.1	
# ::edge	communicate-01	ARG1	perhaps	0.1.1.0.1	0.1.1.0.1.0	
# ::edge	communicate-01	ARG2	cost-01	0.1.1.0.1	0.1.1.0	
# ::edge	cost-01	ARG1	savage	0.1.1.0	0.1.1.0.0	
# ::edge	derive-01	ARG1	cost-01	0.1.1	0.1.1.0	
# ::edge	derive-01	ARG2	lack-01	0.1.1	0.1	
# ::edge	desire-01	ARG0	all	0.1.1.0.1.1	0.1.1.0.1.1.0	
# ::edge	desire-01	ARG1	communicate-01	0.1.1.0.1.1	0.1.1.0.1	
# ::edge	insult-01	ARG0	he	0.0	0.0.0	
# ::edge	insult-01	ARG1	and	0.0	0	
# ::edge	lack-01	ARG1	communicate-01	0.1	0.1.0	
# ::edge	lack-01	mod	absolute	0.1	0.1.2	
# ::edge	say-01	ARG0	he	0.0.0.0	0.0.0	
# ::edge	say-01	ARG1	full	0.0.0.0	0.0.0.0.0	
# ::edge	say-01	mod	only	0.0.0.0	0.0.0.0.1	
(a / and 
      :ARG1-of (i / insult-01 
            :ARG0 (h / he 
                  :ARG0-of (s2 / say-01 
                        :ARG1 (f / full) 
                        :mod (o / only)))) 
      :op1 (l / lack-01 
            :ARG1 (c / communicate-01) 
            :ARG2-of (d / derive-01 
                  :ARG1 (c2 / cost-01 
                        :ARG1 (s / savage) 
                        :ARG2-of (c3 / communicate-01 
                              :ARG1 (p / perhaps) 
                              :ARG1-of (d2 / desire-01 
                                    :ARG0 (a3 / all))))) 
            :mod (a2 / absolute)))

# ::snt i believe staff anxieties about me watching the procedure derived from an assumption that if i watched the horror film of my own mutilation i would suffer
# ::tok i believe staff anxieties about me watching the procedure derived from an assumption that if i watched the horror film of my own mutilation i would suffer
# ::alignments 26-27|0.2 24-25|0.2.0 19-20|0.1 18-19|0.1.0 16-17|0 15-16|0.0 9-10|0.2.0.0.0 8-9|0.2.0.0.0.0 6-7|0.2.0.0 2-3|0.2.0.0.1.0.0+0.2.0.0.1.0.0.0 1-2|0.2.0.0.1 0-1|0.2.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:12.624
# ::node	0	watch-01	16-17
# ::node	0.0	i	15-16
# ::node	0.1	film	19-20
# ::node	0.1.0	horror	18-19
# ::node	0.2	suffer-01	26-27
# ::node	0.2.0	i	24-25
# ::node	0.2.0.0	watch-01	6-7
# ::node	0.2.0.0.0	derive-01	9-10
# ::node	0.2.0.0.0.0	procedure	8-9
# ::node	0.2.0.0.1	believe-01	1-2
# ::node	0.2.0.0.1.0	i	0-1
# ::node	0.2.0.0.1.0.0	staff-01	2-3
# ::node	0.2.0.0.1.0.0.0	person	2-3
# ::root	0	watch-01
# ::edge	believe-01	ARG0	i	0.2.0.0.1	0.2.0.0.1.0	
# ::edge	believe-01	manner	watch-01	0.2.0.0.1	0.2.0.0	
# ::edge	derive-01	ARG1	procedure	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	film	mod	horror	0.1	0.1.0	
# ::edge	staff-01	ARG0	i	0.2.0.0.1.0.0	0.2.0.0.1.0	
# ::edge	staff-01	ARG2	person	0.2.0.0.1.0.0	0.2.0.0.1.0.0.0	
# ::edge	suffer-01	ARG0	i	0.2	0.2.0	
# ::edge	suffer-01	condition	watch-01	0.2	0	
# ::edge	watch-01	ARG0	i	0	0.0	
# ::edge	watch-01	ARG0	i	0.2.0.0	0.2.0	
# ::edge	watch-01	ARG1	derive-01	0.2.0.0	0.2.0.0.0	
# ::edge	watch-01	ARG1	film	0	0.1	
(w / watch-01 
      :ARG0 (i2 / i) 
      :ARG1 (f / film 
            :mod (h / horror)) 
      :condition-of (s / suffer-01 
            :ARG0 (i / i 
                  :ARG0-of (w2 / watch-01 
                        :ARG1 (d / derive-01 
                              :ARG1 (p / procedure)) 
                        :manner-of (b / believe-01 
                              :ARG0 (i3 / i 
                                    :ARG0-of (s2 / staff-01 
                                          :ARG2 (p2 / person))))))))

# ::snt evidently he thinks of the distinction as being no more than a useful device for developing and explaining his claim that all ideas derive from experience
# ::tok evidently he thinks of the distinction as being no more than a useful device for developing and explaining his claim that all ideas derive from experience
# ::alignments 25-26|0.0.0.0.1 23-24|0.0.0.0 22-23|0.0.0.0.0 21-22|0.0.0.0.0.1 19-20|0.0.0.0.0.0 17-18|0.0.0.0.0.0.0 16-17|0.0.0.0.0.0.0.2 15-16|0.0.0.0.0.0.0.2.0 13-14|0.0.0.0.0.0.0.1 12-13|0.0.0.0.0.0.0.1.0 8-9|0.0.0.0.0.0.0.0 5-6|0.0.1 2-3|0.0 1-2|0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:12.913
# ::node	0	evident	0-1
# ::node	0.0	think-01	2-3
# ::node	0.0.0	he	1-2
# ::node	0.0.0.0	derive-01	23-24
# ::node	0.0.0.0.0	idea	22-23
# ::node	0.0.0.0.0.0	claim-01	19-20
# ::node	0.0.0.0.0.0.0	explain-01	17-18
# ::node	0.0.0.0.0.0.0.0	-	8-9
# ::node	0.0.0.0.0.0.0.1	device	13-14
# ::node	0.0.0.0.0.0.0.1.0	useful	12-13
# ::node	0.0.0.0.0.0.0.2	and	16-17
# ::node	0.0.0.0.0.0.0.2.0	develop-02	15-16
# ::node	0.0.0.0.0.1	all	21-22
# ::node	0.0.0.0.1	experience-01	25-26
# ::node	0.0.1	distinguish-01	5-6
# ::root	0	evident
(e3 / evident 
      :ARG1-of (t / think-01 
            :ARG0 (h / he 
                  :ARG0-of (d / derive-01 
                        :ARG1 (i / idea 
                              :ARG1-of (c / claim-01 
                                    :ARG1-of (e2 / explain-01 
                                          :ARG0 (- / -) 
                                          :mod-of (d3 / device 
                                                :mod (u / useful)) 
                                          :op-of (a2 / and 
                                                :op1 (d2 / develop-02)))) 
                              :quant (a / all)) 
                        :ARG2 (e / experience-01))) 
            :ARG2 (d4 / distinguish-01)))

# ::snt if ackerley derived any satisfaction from this rough rackety frustrated life it was in his work at the listener where his enlightened editorial policies make him sound like a reviewers dream he telephoned contributors at midnight to query the removal of a comma
# ::tok if ackerley derived any satisfaction from this rough rackety frustrated life it was in his work at the listener where his enlightened editorial policies make him sound like a reviewers dream he telephoned contributors at midnight to query the removal of a comma
# ::alignments 39-40|0.0.1 35-36|0.0.0.0 33-34|0.0.0 31-32|0.0 30-31|0 26-27|0.2 23-24|0.2.0 22-23|0.2.0.1 21-22|0.2.0.0 11-12|0.1.0.1.0 10-11|0.1.0 9-10|0.1 7-8|0.1.0.0 6-7|0.2.0.0.0 4-5|0.1.0.1 3-4|0.1.0.1.2 2-3|0.1.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:13.262
# ::node	0	dream-01	30-31
# ::node	0.0	he	31-32
# ::node	0.0.0	contribute-01	33-34
# ::node	0.0.0.0	midnight	35-36
# ::node	0.0.1	remove-01	39-40
# ::node	0.1	frustrate-01	9-10
# ::node	0.1.0	life	10-11
# ::node	0.1.0.0	rough	7-8
# ::node	0.1.0.1	satisfy-01	4-5
# ::node	0.1.0.1.0	it	11-12
# ::node	0.1.0.1.1	derive-01	2-3
# ::node	0.1.0.1.2	any	3-4
# ::node	0.2	sound	26-27
# ::node	0.2.0	policy	23-24
# ::node	0.2.0.0	enlighten-01	21-22
# ::node	0.2.0.0.0	this	6-7
# ::node	0.2.0.1	editorial	22-23
# ::root	0	dream-01
# ::edge	contribute-01	ARG0	he	0.0.0	0.0	
# ::edge	contribute-01	ARG1	midnight	0.0.0	0.0.0.0	
# ::edge	derive-01	ARG1	satisfy-01	0.1.0.1.1	0.1.0.1	
# ::edge	dream-01	ARG0	he	0	0.0	
# ::edge	enlighten-01	ARG0	this	0.2.0.0	0.2.0.0.0	
# ::edge	enlighten-01	ARG1	policy	0.2.0.0	0.2.0	
# ::edge	frustrate-01	ARG1	life	0.1	0.1.0	
# ::edge	frustrate-01	ARG2	dream-01	0.1	0	
# ::edge	life	mod	rough	0.1.0	0.1.0.0	
# ::edge	policy	topic	editorial	0.2.0	0.2.0.1	
# ::edge	remove-01	ARG1	he	0.0.1	0.0	
# ::edge	satisfy-01	ARG1	it	0.1.0.1	0.1.0.1.0	
# ::edge	satisfy-01	mod	any	0.1.0.1	0.1.0.1.2	
# ::edge	satisfy-01	purpose	life	0.1.0.1	0.1.0	
# ::edge	sound	domain	policy	0.2	0.2.0	
# ::edge	sound	time	dream-01	0.2	0	
(d / dream-01 
      :ARG0 (h / he 
            :ARG0-of (c / contribute-01 
                  :ARG1 (m / midnight)) 
            :ARG1-of (r / remove-01)) 
      :ARG2-of (f / frustrate-01 
            :ARG1 (l / life 
                  :mod (r2 / rough) 
                  :purpose-of (s2 / satisfy-01 
                        :ARG1 (i / it) 
                        :ARG1-of (d2 / derive-01) 
                        :mod (a / any)))) 
      :time-of (s / sound 
            :domain (p / policy 
                  :ARG1-of (e2 / enlighten-01 
                        :ARG0 (t / this)) 
                  :topic (e / editorial))))

# ::snt it actually derives from a greek word meaning a pathless path
# ::tok it actually derives from a greek word meaning a pathless path
# ::alignments 10-11|0.1 7-8|0 6-7|0.0 1-2|0.1.0 0-1|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:13.281
# ::node	0	mean-01	7-8
# ::node	0.0	word	6-7
# ::node	0.1	path	10-11
# ::node	0.1.0	actual	1-2
# ::node	0.1.1	it	0-1
# ::root	0	mean-01
# ::edge	actual	op1	path	0.1.0	0.1	
# ::edge	mean-01	ARG0	word	0	0.0	
# ::edge	mean-01	ARG1	path	0	0.1	
# ::edge	path	poss	it	0.1	0.1.1	
(m / mean-01 
      :ARG0 (w / word) 
      :ARG1 (p / path 
            :op-of (a / actual) 
            :poss (i / it)))

# ::snt cooke can also derive satisfaction from the welcome return to form of nigel redman at lock from the possible emergence of dean ryan and tim rodber in the back row from the enterprising nigel heslop on the wing and despite his hesitation last saturday against buenos aires from the promise of gavin thompson
# ::tok cooke can also derive satisfaction from the welcome return to form of nigel redman at lock from the possible emergence of dean ryan and tim rodber in the back row from the enterprising nigel heslop on the wing and despite his hesitation last saturday against buenos aires from the promise of gavin thompson
# ::alignments 49-50|0.0 45-47|0.0.0.0.0+0.0.0.0.1+0.0.0.0+0.0.0 43-44|0.0.1.0 42-43|0.1.0 41-42|0.0.1 38-39|0 37-38|0.1.2.0 29-30|0.2 28-29|0.2.0 23-24|0.1.1 21-22|0.1.3.0 19-20|0.1 18-19|0.1.2 15-16|0.1.3 10-11|0.1.1.0.0.2 7-8|0.1.1.0.1 4-5|0.1.1.0 3-4|0.1.1.0.0 2-3|0.1.1.0.0.1 1-2|0.1.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:13.867
# ::node	0	and	38-39
# ::node	0.0	promise-01	49-50
# ::node	0.0.0	country	45-47
# ::node	0.0.0.0	name	45-47
# ::node	0.0.0.0.0	"aires"	45-47
# ::node	0.0.0.0.1	"buenos"	45-47
# ::node	0.0.1	hesitate-01	41-42
# ::node	0.0.1.0	saturday	43-44
# ::node	0.1	emerge-02	19-20
# ::node	0.1.0	last	42-43
# ::node	0.1.1	and	23-24
# ::node	0.1.1.0	satisfy-01	4-5
# ::node	0.1.1.0.0	derive-01	3-4
# ::node	0.1.1.0.0.0	possible	1-2
# ::node	0.1.1.0.0.1	also	2-3
# ::node	0.1.1.0.0.2	form	10-11
# ::node	0.1.1.0.1	welcome-01	7-8
# ::node	0.1.2	possible	18-19
# ::node	0.1.2.0	wing	37-38
# ::node	0.1.3	lock-01	15-16
# ::node	0.1.3.0	dean	21-22
# ::node	0.2	row	29-30
# ::node	0.2.0	back	28-29
# ::root	0	and
# ::edge	and	op1	row	0	0.2	
# ::edge	country	name	name	0.0.0	0.0.0.0	
# ::edge	derive-01	ARG1	satisfy-01	0.1.1.0.0	0.1.1.0	
# ::edge	derive-01	mod	also	0.1.1.0.0	0.1.1.0.0.1	
# ::edge	derive-01	purpose	form	0.1.1.0.0	0.1.1.0.0.2	
# ::edge	emerge-02	ARG0	last	0.1	0.1.0	
# ::edge	emerge-02	ARG1	and	0.1	0.1.1	
# ::edge	emerge-02	ARG2	and	0.1	0	
# ::edge	emerge-02	mod	possible	0.1	0.1.2	
# ::edge	hesitate-01	ARG1	saturday	0.0.1	0.0.1.0	
# ::edge	lock-01	ARG1	dean	0.1.3	0.1.3.0	
# ::edge	lock-01	time	emerge-02	0.1.3	0.1	
# ::edge	name	op1	"aires"	0.0.0.0	0.0.0.0.0	
# ::edge	name	op2	"buenos"	0.0.0.0	0.0.0.0.1	
# ::edge	possible	domain	derive-01	0.1.1.0.0.0	0.1.1.0.0	
# ::edge	promise-01	ARG0	country	0.0	0.0.0	
# ::edge	promise-01	ARG1	hesitate-01	0.0	0.0.1	
# ::edge	promise-01	ARG2	and	0.0	0	
# ::edge	row	mod	back	0.2	0.2.0	
# ::edge	satisfy-01	ARG1	and	0.1.1.0	0.1.1	
# ::edge	welcome-01	ARG1	satisfy-01	0.1.1.0.1	0.1.1.0	
# ::edge	wing	mod	possible	0.1.2.0	0.1.2	
(a / and 
      :ARG2-of (p / promise-01 
            :ARG0 (c / country 
                  :name (n / name 
                        :op1 "aires" 
                        :op2 "buenos")) 
            :ARG1 (h / hesitate-01 
                  :ARG1 (s / saturday))) 
      :ARG2-of (e / emerge-02 
            :ARG0 (l / last) 
            :ARG1 (a2 / and 
                  :ARG1-of (s2 / satisfy-01 
                        :ARG1-of (d2 / derive-01 
                              :domain-of (p3 / possible) 
                              :mod (a3 / also) 
                              :purpose (f / form)) 
                        :ARG1-of (w2 / welcome-01))) 
            :mod (p2 / possible 
                  :mod-of (w / wing)) 
            :time-of (l2 / lock-01 
                  :ARG1 (d / dean))) 
      :op1 (r / row 
            :mod (b / back)))

# ::snt they are its fundamental principles for first their justification does not presuppose any other moral principles and secondly all valid moral views derive from them with the addition of premisses which do not by themselves yield any moral conclusions
# ::tok they are its fundamental principles for first their justification does not presuppose any other moral principles and secondly all valid moral views derive from them with the addition of premisses which do not by themselves yield any moral conclusions
# ::alignments 38-39|0+0.0 37-38|0.0.1 36-37|0.0.2 35-36|0.0.0 22-23|0.0.0.0.0.2.0 20-21|0.0.0.0.0.2.0.3 19-20|0.0.0.0.0.2.0.1 18-19|0.0.0.0.0.2.0.2 16-17|0.0.0.0.0.0.1 15-16|0.0.0.0.0 14-15|0.0.0.0 13-14|0.0.0.0.0.1 12-13|0.0.0.0.0.2 11-12|0.0.0.0.0.0 8-9|0.0.0.0.0.0.0 4-5|0.0.0.0.0.2.0.0.0 3-4|0.0.0.0.0.2.0.0.0.0 0-1|0.0.0.0.0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:14.167
# ::node	0	conclude-01	38-39
# ::node	0.0	thing	38-39
# ::node	0.0.0	yield-02	35-36
# ::node	0.0.0.0	moral	14-15
# ::node	0.0.0.0.0	principle	15-16
# ::node	0.0.0.0.0.0	presuppose-00	11-12
# ::node	0.0.0.0.0.0.0	justify-01	8-9
# ::node	0.0.0.0.0.0.1	and	16-17
# ::node	0.0.0.0.0.1	other	13-14
# ::node	0.0.0.0.0.2	any	12-13
# ::node	0.0.0.0.0.2.0	derive-01	22-23
# ::node	0.0.0.0.0.2.0.0	they	0-1
# ::node	0.0.0.0.0.2.0.0.0	principle	4-5
# ::node	0.0.0.0.0.2.0.0.0.0	fundamental	3-4
# ::node	0.0.0.0.0.2.0.1	valid-41	19-20
# ::node	0.0.0.0.0.2.0.2	all	18-19
# ::node	0.0.0.0.0.2.0.3	moral	20-21
# ::node	0.0.1	moral	37-38
# ::node	0.0.2	any	36-37
# ::root	0	conclude-01
# ::edge	and	op1	presuppose-00	0.0.0.0.0.0.1	0.0.0.0.0.0	
# ::edge	conclude-01	ARG1	thing	0	0.0	
# ::edge	derive-01	ARG0	they	0.0.0.0.0.2.0	0.0.0.0.0.2.0.0	
# ::edge	derive-01	mod	all	0.0.0.0.0.2.0	0.0.0.0.0.2.0.2	
# ::edge	derive-01	mod	any	0.0.0.0.0.2.0	0.0.0.0.0.2	
# ::edge	derive-01	mod	moral	0.0.0.0.0.2.0	0.0.0.0.0.2.0.3	
# ::edge	presuppose-00	ARG0	justify-01	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	presuppose-00	ARG1	principle	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	principle	mod	any	0.0.0.0.0	0.0.0.0.0.2	
# ::edge	principle	mod	fundamental	0.0.0.0.0.2.0.0.0	0.0.0.0.0.2.0.0.0.0	
# ::edge	principle	mod	moral	0.0.0.0.0	0.0.0.0	
# ::edge	principle	mod	other	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	principle	poss	they	0.0.0.0.0.2.0.0.0	0.0.0.0.0.2.0.0	
# ::edge	thing	mod	any	0.0	0.0.2	
# ::edge	thing	mod	moral	0.0	0.0.1	
# ::edge	valid-41	ARG1	derive-01	0.0.0.0.0.2.0.1	0.0.0.0.0.2.0	
# ::edge	yield-02	ARG0	moral	0.0.0	0.0.0.0	
# ::edge	yield-02	ARG1	thing	0.0.0	0.0	
(c / conclude-01 
      :ARG1 (t / thing 
            :ARG1-of (y / yield-02 
                  :ARG0 (m3 / moral 
                        :mod-of (p / principle 
                              :ARG1-of (p2 / presuppose-00 
                                    :ARG0 (j / justify-01) 
                                    :op-of (a3 / and)) 
                              :mod (o / other) 
                              :mod (a4 / any 
                                    :mod-of (d / derive-01 
                                          :ARG0 (t2 / they 
                                                :poss-of (p3 / principle 
                                                      :mod (f / fundamental))) 
                                          :ARG1-of (v / valid-41) 
                                          :mod (a2 / all) 
                                          :mod (m2 / moral)))))) 
            :mod (m / moral) 
            :mod (a / any)))

# ::snt it derives its sustenance from the ground through its roots and clings to its host only for support
# ::tok it derives its sustenance from the ground through its roots and clings to its host only for support
# ::alignments 17-18|0.0.1 15-16|0.0.2 14-15|0.0 10-11|0 9-10|0.1.0 6-7|0.1 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:14.206
# ::node	0	and	10-11
# ::node	0.0	host-01	14-15
# ::node	0.0.0	it	0-1
# ::node	0.0.1	support-01	17-18
# ::node	0.0.2	only	15-16
# ::node	0.1	ground	6-7
# ::node	0.1.0	root	9-10
# ::root	0	and
# ::edge	and	op1	ground	0	0.1	
# ::edge	ground	location	root	0.1	0.1.0	
# ::edge	host-01	ARG0	it	0.0	0.0.0	
# ::edge	host-01	ARG1	and	0.0	0	
# ::edge	host-01	ARG3	support-01	0.0	0.0.1	
# ::edge	host-01	mod	only	0.0	0.0.2	
(a / and 
      :ARG1-of (h / host-01 
            :ARG0 (i / it) 
            :ARG3 (s / support-01) 
            :mod (o / only)) 
      :op1 (g / ground 
            :location (r / root)))

# ::snt ultimately inspiration for her doctorate derived from personal circumstances
# ::tok ultimately inspiration for her doctorate derived from personal circumstances
# ::alignments 8-9|0.0.0 7-8|0.0.0.0 5-6|0.0 1-2|0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:14.219
# ::node	0	inspire-01	1-2
# ::node	0.0	derive-01	5-6
# ::node	0.0.0	circumstance	8-9
# ::node	0.0.0.0	personal	7-8
# ::node	0.1	ultimate	0-1
# ::root	0	inspire-01
# ::edge	circumstance	mod	personal	0.0.0	0.0.0.0	
# ::edge	derive-01	ARG1	inspire-01	0.0	0	
# ::edge	derive-01	ARG2	circumstance	0.0	0.0.0	
# ::edge	inspire-01	degree	ultimate	0	0.1	
(i / inspire-01 
      :ARG1-of (d / derive-01 
            :ARG2 (c / circumstance 
                  :mod (p / personal))) 
      :degree (u / ultimate))

# ::snt properties of this sort were supposed to flow derive or emanate from the form, as aquinas says a things characteristic operations derive from its substantial form
# ::tok properties of this sort were supposed to flow derive or emanate from the form , as aquinas says a things characteristic operations derive from its substantial form
# ::alignments 26-27|0.0.0.0.0.1 25-26|0.0.0.0.0.1.0 22-23|0.0.0.0.0 21-22|0.0.0.0.0.0 20-21|0.0.0.0.0.0.0 19-20|0.0.0.0 17-18|0.0.0 13-14|0.1.1.0 9-10|0.1.1 8-9|0.1 7-8|0.1.0 5-6|0 3-4|0.0.1 2-3|0.0.1.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:14.473
# ::node	0	suppose-02	5-6
# ::node	0.0	property	0-1
# ::node	0.0.0	say-01	17-18
# ::node	0.0.0.0	thing	19-20
# ::node	0.0.0.0.0	derive-01	22-23
# ::node	0.0.0.0.0.0	operation	21-22
# ::node	0.0.0.0.0.0.0	characteristic-41	20-21
# ::node	0.0.0.0.0.1	form	26-27
# ::node	0.0.0.0.0.1.0	substantial	25-26
# ::node	0.0.1	sort	3-4
# ::node	0.0.1.0	this	2-3
# ::node	0.1	derive-01	8-9
# ::node	0.1.0	flow-01	7-8
# ::node	0.1.1	or	9-10
# ::node	0.1.1.0	form	13-14
# ::root	0	suppose-02
# ::edge	characteristic-41	ARG0	operation	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	derive-01	ARG0	operation	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	derive-01	ARG1	flow-01	0.1	0.1.0	
# ::edge	derive-01	ARG1	thing	0.0.0.0.0	0.0.0.0	
# ::edge	derive-01	manner	form	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	form	mod	substantial	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	or	op1	derive-01	0.1.1	0.1	
# ::edge	or	time	form	0.1.1	0.1.1.0	
# ::edge	property	mod	sort	0.0	0.0.1	
# ::edge	say-01	ARG0	property	0.0.0	0.0	
# ::edge	say-01	ARG1	thing	0.0.0	0.0.0.0	
# ::edge	sort	mod	this	0.0.1	0.0.1.0	
# ::edge	suppose-02	ARG1	property	0	0.0	
# ::edge	suppose-02	ARG2	derive-01	0	0.1	
(s3 / suppose-02 
      :ARG1 (p / property 
            :ARG0-of (s2 / say-01 
                  :ARG1 (t / thing 
                        :ARG1-of (d / derive-01 
                              :ARG0 (o / operation 
                                    :ARG0-of (c / characteristic-41)) 
                              :manner (f / form 
                                    :mod (s / substantial))))) 
            :mod (s4 / sort 
                  :mod (t2 / this))) 
      :ARG2 (d2 / derive-01 
            :ARG1 (f3 / flow-01) 
            :op-of (o2 / or 
                  :time (f2 / form))))

# ::snt sir  a painting by rembrandt or anybody else derives a significant proportion of its potency from its relationship with other works by that artist and consequently a deattribution robs it of all the richness of association experts cast doubt on 20 rembrandts  8 december
# ::tok sir a painting by rembrandt or anybody else derives a significant proportion of its potency from its relationship with other works by that artist and consequently a deattribution robs it of all the richness of association experts cast doubt on 20 rembrandts 8 december
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:14.473
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt lemys recherches sur la variole from which zola derived his clinical picture
# ::tok lemys recherches sur la variole from which zola derived his clinical picture
# ::alignments 11-12|0.0 10-11|0 8-9|0.0.0 3-4|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:14.489
# ::node	0	clinical	10-11
# ::node	0.0	picture	11-12
# ::node	0.0.0	derive-01	8-9
# ::node	0.0.0.0	"la"	3-4
# ::root	0	clinical
(c / clinical 
      :mod-of (p / picture 
            :ARG1-of (d / derive-01 
                  :ARG0 "la")))

# ::snt it will not be disputed that about half the money to be spent by the county council is in future to be derived directly from central government and about a quarter from the proceeds of the uniform business rate, for each authority this is to be a fixed sum and expenditure above that level is to be derived from the community charge
# ::tok it will not be disputed that about half the money to be spent by the county council is in future to be derived directly from central government and about a quarter from the proceeds of the uniform business rate , for each authority this is to be a fixed sum and expenditure above that level is to be derived from the community charge
# ::alignments 61-62|0.2.3 58-59|0.2.1.0 54-55|0.2.1 52-53|0.2.1.1 51-52|0.2 50-51|0 49-50|0.1 48-49|0.2.2 43-44|0.1.0 42-43|0.2.0.0 41-42|0.2.0 38-39|0.2.1.0.0.0 37-38|0.2.1.0.0 36-37|0.2.1.0.0.0.0 27-28|0.0 25-26|0.2.2.0 23-24|0.0.1.2 22-23|0.0.1 19-20|0.0.1.1 16-17|0.0.1.0.0.0 15-16|0.0.1.0.0.0.0 12-13|0.0.1.0.0 9-10|0.0.1.0 7-8|0.0.0.0 4-5|0.0.0 0-1|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:15.372
# ::node	0	and	50-51
# ::node	0.0	and	27-28
# ::node	0.0.0	dispute-01	4-5
# ::node	0.0.0.0	half	7-8
# ::node	0.0.0.1	it	0-1
# ::node	0.0.1	derive-01	22-23
# ::node	0.0.1.0	money	9-10
# ::node	0.0.1.0.0	spend-01	12-13
# ::node	0.0.1.0.0.0	council	16-17
# ::node	0.0.1.0.0.0.0	county	15-16
# ::node	0.0.1.1	future	19-20
# ::node	0.0.1.2	direct	23-24
# ::node	0.1	sum	49-50
# ::node	0.1.0	this	43-44
# ::node	0.2	expend-01	51-52
# ::node	0.2.0	each	41-42
# ::node	0.2.0.0	authority	42-43
# ::node	0.2.1	level	54-55
# ::node	0.2.1.0	derive-01	58-59
# ::node	0.2.1.0.0	business	37-38
# ::node	0.2.1.0.0.0	rate	38-39
# ::node	0.2.1.0.0.0.0	uniform	36-37
# ::node	0.2.1.1	above	52-53
# ::node	0.2.2	fix-03	48-49
# ::node	0.2.2.0	central	25-26
# ::node	0.2.3	community	61-62
# ::root	0	and
# ::edge	above	op1	level	0.2.1.1	0.2.1	
# ::edge	and	op1	and	0	0.0	
# ::edge	and	op1	dispute-01	0.0	0.0.0	
# ::edge	and	op2	derive-01	0.0	0.0.1	
# ::edge	and	op2	sum	0	0.1	
# ::edge	and	op3	expend-01	0	0.2	
# ::edge	authority	mod	each	0.2.0.0	0.2.0	
# ::edge	council	mod	county	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	derive-01	ARG0	business	0.2.1.0	0.2.1.0.0	
# ::edge	derive-01	ARG0	money	0.0.1	0.0.1.0	
# ::edge	derive-01	ARG1	future	0.0.1	0.0.1.1	
# ::edge	derive-01	ARG1	level	0.2.1.0	0.2.1	
# ::edge	derive-01	manner	direct	0.0.1	0.0.1.2	
# ::edge	dispute-01	ARG0	half	0.0.0	0.0.0.0	
# ::edge	dispute-01	ARG1	it	0.0.0	0.0.0.1	
# ::edge	expend-01	ARG0	each	0.2	0.2.0	
# ::edge	expend-01	ARG1	level	0.2	0.2.1	
# ::edge	expend-01	location	community	0.2	0.2.3	
# ::edge	fix-03	ARG0	central	0.2.2	0.2.2.0	
# ::edge	fix-03	ARG1	expend-01	0.2.2	0.2	
# ::edge	rate	mod	business	0.2.1.0.0.0	0.2.1.0.0	
# ::edge	rate	mod	uniform	0.2.1.0.0.0	0.2.1.0.0.0.0	
# ::edge	spend-01	ARG1	council	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	spend-01	ARG3	money	0.0.1.0.0	0.0.1.0	
# ::edge	sum	domain	this	0.1	0.1.0	
(a2 / and 
      :op1 (a4 / and 
            :op1 (d4 / dispute-01 
                  :ARG0 (h / half) 
                  :ARG1 (i / it)) 
            :op2 (d3 / derive-01 
                  :ARG0 (m / money 
                        :ARG3-of (s2 / spend-01 
                              :ARG1 (c3 / council 
                                    :mod (c4 / county)))) 
                  :ARG1 (f2 / future) 
                  :manner (d2 / direct))) 
      :op2 (s / sum 
            :domain (t / this)) 
      :op3 (e / expend-01 
            :ARG0 (e2 / each 
                  :mod-of (a3 / authority)) 
            :ARG1 (l / level 
                  :ARG1-of (d / derive-01 
                        :ARG0 (b / business 
                              :mod-of (r / rate 
                                    :mod (u / uniform)))) 
                  :op-of (a / above)) 
            :ARG1-of (f / fix-03 
                  :ARG0 (c2 / central)) 
            :location (c / community)))

# ::snt but does its value derive from the fact that many people desire to be autonomous
# ::tok but does its value derive from the fact that many people desire to be autonomous
# ::alignments 14-15|0.2.0 11-12|0.2 9-10|0.0 7-8|0.1.0 4-5|0.1 3-4|0.1.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:15.418
# ::node	0	contrast-01	0-1
# ::node	0.0	many	9-10
# ::node	0.1	derive-01	4-5
# ::node	0.1.0	fact	7-8
# ::node	0.1.1	value-01	3-4
# ::node	0.2	desire-01	11-12
# ::node	0.2.0	autonomy	14-15
# ::root	0	contrast-01
# ::edge	contrast-01	ARG0	many	0	0.0	
# ::edge	contrast-01	ARG1	derive-01	0	0.1	
# ::edge	contrast-01	ARG2	desire-01	0	0.2	
# ::edge	derive-01	ARG1	fact	0.1	0.1.0	
# ::edge	derive-01	ARG2	value-01	0.1	0.1.1	
# ::edge	desire-01	ARG1	autonomy	0.2	0.2.0	
(c / contrast-01 
      :ARG0 (m / many) 
      :ARG1 (d2 / derive-01 
            :ARG1 (f / fact) 
            :ARG2 (v / value-01)) 
      :ARG2 (d / desire-01 
            :ARG1 (a / autonomy)))

# ::snt some comfort has also been derived from the price of the december contract which fell from 753 a tonne a week ago to 741 a tonne on friday
# ::tok some comfort has also been derived from the price of the december contract which fell from 753 a tonne a week ago to 741 a tonne on friday
# ::alignments 27-28|0.1.0.0.0.0 20-21|0.0.0 14-15|0.1.0.0.0 12-13|0.1.0.0 11-12|0.1.0.0.1.0+0.1.0.0.1 8-9|0.1.0+0.1 5-6|0 3-4|0.2 1-2|0.0 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:15.582
# ::node	0	derive-01	5-6
# ::node	0.0	comfort-01	1-2
# ::node	0.0.0	week	20-21
# ::node	0.0.1	some	0-1
# ::node	0.1	thing	8-9
# ::node	0.1.0	price-01	8-9
# ::node	0.1.0.0	contract-02	12-13
# ::node	0.1.0.0.0	fall-01	14-15
# ::node	0.1.0.0.0.0	friday	27-28
# ::node	0.1.0.0.1	date-entity	11-12
# ::node	0.1.0.0.1.0	12	11-12
# ::node	0.2	also	3-4
# ::root	0	derive-01
# ::edge	comfort-01	ARG1	week	0.0	0.0.0	
# ::edge	comfort-01	quant	some	0.0	0.0.1	
# ::edge	contract-02	ARG1	date-entity	0.1.0.0	0.1.0.0.1	
# ::edge	date-entity	month	12	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	derive-01	ARG1	comfort-01	0	0.0	
# ::edge	derive-01	ARG2	thing	0	0.1	
# ::edge	derive-01	mod	also	0	0.2	
# ::edge	fall-01	ARG0	contract-02	0.1.0.0.0	0.1.0.0	
# ::edge	fall-01	ARG1	friday	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	price-01	ARG1	contract-02	0.1.0	0.1.0.0	
# ::edge	price-01	ARG2	thing	0.1.0	0.1	
(d2 / derive-01 
      :ARG1 (c2 / comfort-01 
            :ARG1 (w / week) 
            :quant (s / some)) 
      :ARG2 (t / thing 
            :ARG2-of (p / price-01 
                  :ARG1 (c / contract-02 
                        :ARG0-of (f2 / fall-01 
                              :ARG1 (f / friday)) 
                        :ARG1 (d / date-entity 
                              :month 12)))) 
      :mod (a / also))

# ::snt this ratio can also be derived algebraically by dividing a line length b  1 at a point where the ratio of the parts is equal to the ratio of the larger part to the sum
# ::tok this ratio can also be derived algebraically by dividing a line length b 1 at a point where the ratio of the parts is equal to the ratio of the larger part to the sum
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:15.583
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt if authority existed it derived from section 1111 of the local government act 1972 which provided that local authorities should have power to do anything which was calculated to facilitate or is conducive or incidental to the discharge of any of their functions
# ::tok if authority existed it derived from section 1111 of the local government act 1972 which provided that local authorities should have power to do anything which was calculated to facilitate or is conducive or incidental to the discharge of any of their functions
# ::alignments 42-43|0.1.0.0.0 39-40|0.1.0.0.0.0 37-38|0.1.0.0 34-35|0.1.0.1 33-34|0.1.0 30-31|0.1.1 29-30|0.1 27-28|0 24-25|0.0 21-22|0.1.1.1.1.0 19-20|0.1.1.1.1 18-19|0.1.1.1.1.1 17-18|0.1.1.1.1.1.0 15-16|0.1.1.1 13-14|0.1.1.0.0+0.1.1.0 12-13|0.1.1.1.0 10-11|0.1.1.1.0.0 7-8|0.1.1.1.0.1.4.0+0.1.1.1.0.1.4 6-7|0.1.1.1.0.1.3 4-5|0.1.1.1.0.1 3-4|0.1.1.1.0.1.1 2-3|0.1.1.1.0.1.2 1-2|0.1.1.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:16.587
# ::node	0	calculate-01	27-28
# ::node	0.0	anything	24-25
# ::node	0.1	facilitate-01	29-30
# ::node	0.1.0	or	33-34
# ::node	0.1.0.0	discharge-01	37-38
# ::node	0.1.0.0.0	function-01	42-43
# ::node	0.1.0.0.0.0	any	39-40
# ::node	0.1.0.1	incidental	34-35
# ::node	0.1.1	or	30-31
# ::node	0.1.1.0	date-entity	13-14
# ::node	0.1.1.0.0	1972	13-14
# ::node	0.1.1.1	provide-01	15-16
# ::node	0.1.1.1.0	act-02	12-13
# ::node	0.1.1.1.0.0	local	10-11
# ::node	0.1.1.1.0.1	derive-01	4-5
# ::node	0.1.1.1.0.1.0	authority	1-2
# ::node	0.1.1.1.0.1.1	it	3-4
# ::node	0.1.1.1.0.1.2	exist-01	2-3
# ::node	0.1.1.1.0.1.3	section	6-7
# ::node	0.1.1.1.0.1.4	date-entity	7-8
# ::node	0.1.1.1.0.1.4.0	1111	7-8
# ::node	0.1.1.1.1	recommend-01	19-20
# ::node	0.1.1.1.1.0	power	21-22
# ::node	0.1.1.1.1.1	authority	18-19
# ::node	0.1.1.1.1.1.0	local	17-18
# ::root	0	calculate-01
# ::edge	act-02	mod	local	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	authority	mod	local	0.1.1.1.1.1	0.1.1.1.1.1.0	
# ::edge	calculate-01	ARG0	anything	0	0.0	
# ::edge	calculate-01	ARG1	facilitate-01	0	0.1	
# ::edge	date-entity	year	1111	0.1.1.1.0.1.4	0.1.1.1.0.1.4.0	
# ::edge	date-entity	year	1972	0.1.1.0	0.1.1.0.0	
# ::edge	derive-01	ARG0	authority	0.1.1.1.0.1	0.1.1.1.0.1.0	
# ::edge	derive-01	ARG1	it	0.1.1.1.0.1	0.1.1.1.0.1.1	
# ::edge	derive-01	ARG2	section	0.1.1.1.0.1	0.1.1.1.0.1.3	
# ::edge	derive-01	purpose	act-02	0.1.1.1.0.1	0.1.1.1.0	
# ::edge	derive-01	time	date-entity	0.1.1.1.0.1	0.1.1.1.0.1.4	
# ::edge	discharge-01	ARG1	function-01	0.1.0.0	0.1.0.0.0	
# ::edge	exist-01	ARG1	derive-01	0.1.1.1.0.1.2	0.1.1.1.0.1	
# ::edge	facilitate-01	ARG1	or	0.1	0.1.0	
# ::edge	function-01	mod	any	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	or	beneficiary	discharge-01	0.1.0	0.1.0.0	
# ::edge	or	op1	date-entity	0.1.1	0.1.1.0	
# ::edge	or	op1	incidental	0.1.0	0.1.0.1	
# ::edge	or	op2	provide-01	0.1.1	0.1.1.1	
# ::edge	or	op3	facilitate-01	0.1.1	0.1	
# ::edge	provide-01	ARG0	act-02	0.1.1.1	0.1.1.1.0	
# ::edge	provide-01	ARG1	recommend-01	0.1.1.1	0.1.1.1.1	
# ::edge	recommend-01	ARG1	power	0.1.1.1.1	0.1.1.1.1.0	
# ::edge	recommend-01	ARG2	authority	0.1.1.1.1	0.1.1.1.1.1	
(c / calculate-01 
      :ARG0 (a2 / anything) 
      :ARG1 (f2 / facilitate-01 
            :ARG1 (o / or 
                  :beneficiary (d / discharge-01 
                        :ARG1 (f / function-01 
                              :mod (a / any))) 
                  :op1 (i / incidental)) 
            :op-of (o2 / or 
                  :op1 (d2 / date-entity 
                        :year 1972) 
                  :op2 (p2 / provide-01 
                        :ARG0 (a4 / act-02 
                              :mod (l2 / local) 
                              :purpose-of (d4 / derive-01 
                                    :ARG0 (a5 / authority) 
                                    :ARG1 (i2 / it) 
                                    :ARG1-of (e / exist-01) 
                                    :ARG2 (s / section) 
                                    :time (d3 / date-entity 
                                          :year 1111))) 
                        :ARG1 (r / recommend-01 
                              :ARG1 (p / power) 
                              :ARG2 (a3 / authority 
                                    :mod (l / local)))))))

# ::snt nations are he says the basis of the state and national struggles derive not from social classes but from historical entities called nations
# ::tok nations are he says the basis of the state and national struggles derive not from social classes but from historical entities called nations
# ::alignments 22-23|0.1.1.2.0.0 20-21|0.1.1.2.0 19-20|0.1.1.2 17-18|0 16-17|0.1.1.0 15-16|0.0 12-13|0.1.1 10-11|0.1.1.1 9-10|0.1 8-9|0.1.0 3-4|0.1.1.0.0.0 2-3|0.1.1.0.0 0-1|0.1.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:16.844
# ::node	0	contrast-01	17-18
# ::node	0.0	society	15-16
# ::node	0.1	and	9-10
# ::node	0.1.0	state	8-9
# ::node	0.1.1	derive-01	12-13
# ::node	0.1.1.0	class	16-17
# ::node	0.1.1.0.0	he	2-3
# ::node	0.1.1.0.0.0	say-01	3-4
# ::node	0.1.1.0.0.0.0	nation	0-1
# ::node	0.1.1.1	nation	10-11
# ::node	0.1.1.2	history	19-20
# ::node	0.1.1.2.0	entity	20-21
# ::node	0.1.1.2.0.0	nation	22-23
# ::root	0	contrast-01
# ::edge	and	op1	state	0.1	0.1.0	
# ::edge	and	op2	derive-01	0.1	0.1.1	
# ::edge	class	poss	he	0.1.1.0	0.1.1.0.0	
# ::edge	contrast-01	ARG1	society	0	0.0	
# ::edge	contrast-01	ARG2	and	0	0.1	
# ::edge	derive-01	ARG0	class	0.1.1	0.1.1.0	
# ::edge	derive-01	mod	history	0.1.1	0.1.1.2	
# ::edge	derive-01	mod	nation	0.1.1	0.1.1.1	
# ::edge	entity	mod	history	0.1.1.2.0	0.1.1.2	
# ::edge	nation	mod	entity	0.1.1.2.0.0	0.1.1.2.0	
# ::edge	say-01	ARG0	he	0.1.1.0.0.0	0.1.1.0.0	
# ::edge	say-01	ARG1	nation	0.1.1.0.0.0	0.1.1.0.0.0.0	
(c / contrast-01 
      :ARG1 (s / society) 
      :ARG2 (a / and 
            :op1 (s2 / state) 
            :op2 (d / derive-01 
                  :ARG0 (c2 / class 
                        :poss (h2 / he 
                              :ARG0-of (s3 / say-01 
                                    :ARG1 (n3 / nation)))) 
                  :mod (n2 / nation) 
                  :mod (h / history 
                        :mod-of (e / entity 
                              :mod-of (n / nation))))))

# ::snt the australian production of poll was given during a long season by the borovansky company in melbourne and proved a popular addition to a repertory that derived heavily in its creations as well is its revivals from edouard borovanskys origins in the ballets russes
# ::tok the australian production of poll was given during a long season by the borovansky company in melbourne and proved a popular addition to a repertory that derived heavily in its creations as well is its revivals from edouard borovanskys origins in the ballets russes
# ::alignments 32-33|0.1.0.0.0.0 27-28|0.1.0.0.1.0 26-27|0.1.0.0.1 20-21|0.1.0.0.0 18-19|0.1 17-18|0 14-15|0.0.0 10-11|0.0.1 6-7|0.0 4-5|0.1.0.0 2-3|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:16.993
# ::node	0	and	17-18
# ::node	0.0	give-01	6-7
# ::node	0.0.0	company	14-15
# ::node	0.0.1	season	10-11
# ::node	0.1	prove-01	18-19
# ::node	0.1.0	produce-01	2-3
# ::node	0.1.0.0	poll-01	4-5
# ::node	0.1.0.0.0	popular-41	20-21
# ::node	0.1.0.0.0.0	well	32-33
# ::node	0.1.0.0.1	derive-01	26-27
# ::node	0.1.0.0.1.0	heavy	27-28
# ::root	0	and
# ::edge	and	op1	give-01	0	0.0	
# ::edge	and	op2	prove-01	0	0.1	
# ::edge	derive-01	ARG1	poll-01	0.1.0.0.1	0.1.0.0	
# ::edge	derive-01	manner	heavy	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	give-01	ARG0	company	0.0	0.0.0	
# ::edge	give-01	ARG1	season	0.0	0.0.1	
# ::edge	poll-01	ARG1	popular-41	0.1.0.0	0.1.0.0.0	
# ::edge	popular-41	ARG1	well	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	produce-01	ARG1	poll-01	0.1.0	0.1.0.0	
# ::edge	prove-01	ARG1	produce-01	0.1	0.1.0	
(a / and 
      :op1 (g / give-01 
            :ARG0 (c / company) 
            :ARG1 (s / season)) 
      :op2 (p2 / prove-01 
            :ARG1 (p4 / produce-01 
                  :ARG1 (p3 / poll-01 
                        :ARG1 (p / popular-41 
                              :ARG1 (w / well)) 
                        :ARG1-of (d / derive-01 
                              :manner (h / heavy))))))

# ::snt robyns mental image of a modern factory had derived mainly from tv commercials and documentaries deftly edited footage of brightly coloured machines and smoothly moving assembly lines manned by brisk operators in clean overalls turning out motor cars or transistor radios to the accompaniment of mozart on the sound track
# ::tok robyns mental image of a modern factory had derived mainly from tv commercials and documentaries deftly edited footage of brightly coloured machines and smoothly moving assembly lines manned by brisk operators in clean overalls turning out motor cars or transistor radios to the accompaniment of mozart on the sound track
# ::alignments 49-50|0.0.1.0.0 48-49|0.0.1.0 38-39|0.0.1.1.0.1 37-38|0.0.1.1.0 36-37|0.0.1.1.0.0 34-35|0.0.1.1 32-33|0.0.2.1.1.0.0 30-31|0.0.0 27-28|0.0.1 26-27|0.0 25-26|0 24-25|0.0.2 23-24|0.0.2.0 22-23|0.0.2.1 21-22|0.0.0.0 17-18|0.0.2.1.1 16-17|0.0.2.1.1.0 13-14|0.0.2.1.0.1 12-13|0.0.2.1.0.1.0 9-10|0.0.2.1.0.2 8-9|0.0.2.1.0 6-7|0.0.2.1.0.0.1 5-6|0.0.2.1.0.0.1.0 2-3|0.0.2.1.0.0 1-2|0.0.2.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:17.960
# ::node	0	assembly	25-26
# ::node	0.0	line	26-27
# ::node	0.0.0	operate-01	30-31
# ::node	0.0.0.0	machine	21-22
# ::node	0.0.1	man-01	27-28
# ::node	0.0.1.0	sound	48-49
# ::node	0.0.1.0.0	track	49-50
# ::node	0.0.1.1	turn-02	34-35
# ::node	0.0.1.1.0	car	37-38
# ::node	0.0.1.1.0.0	motorcycle	36-37
# ::node	0.0.1.1.0.1	or	38-39
# ::node	0.0.2	move-01	24-25
# ::node	0.0.2.0	smooth	23-24
# ::node	0.0.2.1	and	22-23
# ::node	0.0.2.1.0	derive-01	8-9
# ::node	0.0.2.1.0.0	image	2-3
# ::node	0.0.2.1.0.0.0	mental	1-2
# ::node	0.0.2.1.0.0.1	factory	6-7
# ::node	0.0.2.1.0.0.1.0	modern	5-6
# ::node	0.0.2.1.0.1	and	13-14
# ::node	0.0.2.1.0.1.0	commercial	12-13
# ::node	0.0.2.1.0.2	main	9-10
# ::node	0.0.2.1.1	footage	17-18
# ::node	0.0.2.1.1.0	edit-01	16-17
# ::node	0.0.2.1.1.0.0	clean	32-33
# ::root	0	assembly
(a / assembly 
      :mod-of (l / line 
            :ARG0-of (o2 / operate-01 
                  :ARG1 (m4 / machine)) 
            :ARG0-of (m2 / man-01 
                  :ARG1 (s / sound 
                        :mod-of (t / track)) 
                  :purpose (t2 / turn-02 
                        :ARG1 (c / car 
                              :mod (m / motorcycle) 
                              :op-of (o / or)))) 
            :ARG1-of (m3 / move-01 
                  :mod (s2 / smooth) 
                  :op-of (a2 / and 
                        :ARG1-of (d / derive-01 
                              :ARG0 (i / image 
                                    :mod (m7 / mental) 
                                    :mod (f2 / factory 
                                          :mod (m6 / modern))) 
                              :ARG3 (a3 / and 
                                    :op1 (c3 / commercial)) 
                              :mod (m5 / main)) 
                        :op1 (f / footage 
                              :ARG1-of (e / edit-01 
                                    :ARG0 (c2 / clean)))))))

# ::snt inasmuch as the value of that interest does not derive from some other interest of the rightholder or of other persons
# ::tok inasmuch as the value of that interest does not derive from some other interest of the rightholder or of other persons
# ::alignments 20-21|0.0.0.0.1 19-20|0.0.0.0.1.0 17-18|0.0.0.0 13-14|0.0.0.1 12-13|0.0.0.0.0 11-12|0.0.0.1.0 9-10|0.0.0 6-7|0 3-4|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:17.999
# ::node	0	interest-01	6-7
# ::node	0.0	value-01	3-4
# ::node	0.0.0	derive-01	9-10
# ::node	0.0.0.0	or	17-18
# ::node	0.0.0.0.0	other	12-13
# ::node	0.0.0.0.1	person	20-21
# ::node	0.0.0.0.1.0	other	19-20
# ::node	0.0.0.1	interest-01	13-14
# ::node	0.0.0.1.0	some	11-12
# ::root	0	interest-01
# ::edge	derive-01	ARG0	or	0.0.0	0.0.0.0	
# ::edge	derive-01	ARG1	value-01	0.0.0	0.0	
# ::edge	derive-01	ARG2	interest-01	0.0.0	0.0.0.1	
# ::edge	interest-01	ARG2	value-01	0	0.0	
# ::edge	interest-01	mod	some	0.0.0.1	0.0.0.1.0	
# ::edge	or	mod	other	0.0.0.0	0.0.0.0.0	
# ::edge	or	op1	person	0.0.0.0	0.0.0.0.1	
# ::edge	person	mod	other	0.0.0.0.1	0.0.0.0.1.0	
(i2 / interest-01 
      :ARG2 (v / value-01 
            :ARG1-of (d / derive-01 
                  :ARG0 (o2 / or 
                        :mod (o3 / other) 
                        :op1 (p / person 
                              :mod (o / other))) 
                  :ARG2 (i / interest-01 
                        :mod (s / some)))))

# ::snt salaries and problems deriving from the nature of the work task and of work organisation dash
# ::tok salaries and problems deriving from the nature of the work task and of work organisation dash
# ::alignments 14-15|0.0 11-12|0.1.0 10-11|0.1.0.0.0 6-7|0.1.0.0 2-3|0.2 1-2|0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:18.029
# ::node	0	and	1-2
# ::node	0.0	organize-01	14-15
# ::node	0.1	salary	0-1
# ::node	0.1.0	and	11-12
# ::node	0.1.0.0	nature	6-7
# ::node	0.1.0.0.0	task	10-11
# ::node	0.2	problem	2-3
# ::root	0	and
# ::edge	and	domain	salary	0.1.0	0.1	
# ::edge	and	op1	nature	0.1.0	0.1.0.0	
# ::edge	and	op1	salary	0	0.1	
# ::edge	and	op2	problem	0	0.2	
# ::edge	nature	poss	task	0.1.0.0	0.1.0.0.0	
# ::edge	organize-01	ARG0	and	0.0	0	
(a2 / and 
      :ARG0-of (o / organize-01) 
      :op1 (s / salary 
            :domain-of (a / and 
                  :op1 (n / nature 
                        :poss (t / task)))) 
      :op2 (p / problem))

# ::snt but if the intrusive rock was derived from a particularly metalrich bit  of oceanic crust then not only will it have a high content of ore  metals itself but the hydrothermal solutions derived from it will tend  to concentrate the ore metals so that the ore bodies that are finally  deposited in the volcanic rocks may have such a high proportion of  useful metals that they are economically workable
# ::tok but if the intrusive rock was derived from a particularly metalrich bit of oceanic crust then not only will it have a high content of ore metals itself but the hydrothermal solutions derived from it will tend to concentrate the ore metals so that the ore bodies that are finally deposited in the volcanic rocks may have such a high proportion of useful metals that they are economically workable
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:18.031
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the party should not derive its authority from a paragraph of text it must prove it every day
# ::tok the party should not derive its authority from a paragraph of text it must prove it every day
# ::alignments 17-18|0.0.3.0.2 16-17|0.0.3.0.2.0 15-16|0.0.3.0.1 14-15|0.0.3.0 12-13|0.0.3.0.0 11-12|0.0.3 9-10|0.0.2 6-7|0.0.1 4-5|0.0 2-3|0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:18.261
# ::node	0	recommend-01	2-3
# ::node	0.0	derive-01	4-5
# ::node	0.0.0	party	1-2
# ::node	0.0.1	authority	6-7
# ::node	0.0.2	paragraph	9-10
# ::node	0.0.3	text	11-12
# ::node	0.0.3.0	prove-01	14-15
# ::node	0.0.3.0.0	it	12-13
# ::node	0.0.3.0.1	it	15-16
# ::node	0.0.3.0.2	day	17-18
# ::node	0.0.3.0.2.0	every	16-17
# ::root	0	recommend-01
# ::edge	day	mod	every	0.0.3.0.2	0.0.3.0.2.0	
# ::edge	derive-01	ARG0	party	0.0	0.0.0	
# ::edge	derive-01	ARG1	authority	0.0	0.0.1	
# ::edge	derive-01	ARG2	paragraph	0.0	0.0.2	
# ::edge	derive-01	extent	text	0.0	0.0.3	
# ::edge	prove-01	ARG0	it	0.0.3.0	0.0.3.0.0	
# ::edge	prove-01	ARG1	it	0.0.3.0	0.0.3.0.1	
# ::edge	prove-01	manner	text	0.0.3.0	0.0.3	
# ::edge	prove-01	time	day	0.0.3.0	0.0.3.0.2	
# ::edge	recommend-01	ARG1	derive-01	0	0.0	
(r / recommend-01 
      :ARG1 (d2 / derive-01 
            :ARG0 (p3 / party) 
            :ARG1 (a / authority) 
            :ARG2 (p2 / paragraph) 
            :extent (t / text 
                  :manner-of (p / prove-01 
                        :ARG0 (i2 / it) 
                        :ARG1 (i / it) 
                        :time (d / day 
                              :mod (e / every))))))

# ::snt cassell letter 1 december suggests that mrs thatchers saying i am what i am may derive from godlike pretensions
# ::tok cassell letter 1 december suggests that mrs thatchers saying i am what i am may derive from godlike pretensions
# ::alignments 15-16|0.1 14-15|0.1.1.1+0.1.1 12-13|0.2 9-10|0.0 8-9|0 4-5|0.1.1.0 3-4|0.1.1.0.1.0+0.1.1.0.1 2-3|0.1.0 1-2|0.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:18.478
# ::node	0	say-01	8-9
# ::node	0.0	i	9-10
# ::node	0.1	derive-01	15-16
# ::node	0.1.0	1	2-3
# ::node	0.1.1	date-entity	14-15
# ::node	0.1.1.0	suggest-01	4-5
# ::node	0.1.1.0.0	letter	1-2
# ::node	0.1.1.0.1	date-entity	3-4
# ::node	0.1.1.0.1.0	12	3-4
# ::node	0.1.1.1	5	14-15
# ::node	0.2	i	12-13
# ::root	0	say-01
# ::edge	date-entity	month	12	0.1.1.0.1	0.1.1.0.1.0	
# ::edge	date-entity	month	5	0.1.1	0.1.1.1	
# ::edge	derive-01	ARG0	1	0.1	0.1.0	
# ::edge	derive-01	ARG1	say-01	0.1	0	
# ::edge	derive-01	mod	date-entity	0.1	0.1.1	
# ::edge	say-01	ARG0	i	0	0.0	
# ::edge	say-01	ARG2	i	0	0.2	
# ::edge	suggest-01	ARG0	letter	0.1.1.0	0.1.1.0.0	
# ::edge	suggest-01	ARG1	date-entity	0.1.1.0	0.1.1	
# ::edge	suggest-01	time	date-entity	0.1.1.0	0.1.1.0.1	
(s / say-01 
      :ARG0 (i2 / i) 
      :ARG1-of (d / derive-01 
            :ARG0 1 
            :mod (d2 / date-entity 
                  :ARG1-of (s2 / suggest-01 
                        :ARG0 (l / letter) 
                        :time (d3 / date-entity 
                              :month 12)) 
                  :month 5)) 
      :ARG2 (i / i))

# ::snt so the mechanism of travel is like that of a nuee ardente except that  in some nuees the gas that cushions the flow may be air entrapped by the  onrushing mass of debris while in an ignimbrite the gas is derived from  within the flow itself
# ::tok so the mechanism of travel is like that of a nuee ardente except that in some nuees the gas that cushions the flow may be air entrapped by the onrushing mass of debris while in an ignimbrite the gas is derived from within the flow itself
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:18.479
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the first sealdah station of 1862 derived its prime grandeur from its engineering works a sixmile embankment had to be built to bring the railway into the centre of calcutta
# ::tok the first sealdah station of 1862 derived its prime grandeur from its engineering works a sixmile embankment had to be built to bring the railway into the centre of calcutta
# ::alignments 24-25|0 22-23|0.0 20-21|0.0.1 12-13|0.0.1.0 8-9|0.0.0 6-7|0.0.1.1 5-6|0.0.1.1.1.0+0.0.1.1.1 3-4|0.0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T23:17:18.698
# ::node	0	railway	24-25
# ::node	0.0	bring-01	22-23
# ::node	0.0.0	prime	8-9
# ::node	0.0.1	build-01	20-21
# ::node	0.0.1.0	engineer-01	12-13
# ::node	0.0.1.1	derive-01	6-7
# ::node	0.0.1.1.0	station	3-4
# ::node	0.0.1.1.1	date-entity	5-6
# ::node	0.0.1.1.1.0	1862	5-6
# ::root	0	railway
(r / railway 
      :ARG1-of (b / bring-01 
            :ARG0 (p / prime) 
            :ARG1-of (b2 / build-01 
                  :ARG0 (e / engineer-01) 
                  :ARG1-of (d / derive-01 
                        :ARG0 (s / station) 
                        :time (d2 / date-entity 
                              :year 1862)))))

