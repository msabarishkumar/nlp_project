# ::snt we drink and eat in the daytime but not at night and so there is an excess of fluid and salts in the body in the daytime and a deficit during the night
# ::tok we drink and eat in the daytime but not at night and so there is an excess of fluid and salts in the body in the daytime and a deficit during the night
# ::alignments 32-33|0.1.0.2.1.0 29-30|0.1.0.2.1 27-28|0.1.0.2 23-24|0.1.0.2.0 19-20|0.1.0.1 18-19|0.0 16-17|0.1.0 12-13|0.1.0.0 11-12|0.1 10-11|0.1.0.1.0.1 7-8|0 3-4|0.1.0.1.0 2-3|0.1.0.1.0.2 1-2|0.1.0.1.0.0.0 0-1|0.1.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:03.377
# ::node	0	contrast-01	7-8
# ::node	0.0	fluid	18-19
# ::node	0.1	and	11-12
# ::node	0.1.0	exceed-01	16-17
# ::node	0.1.0.0	so	12-13
# ::node	0.1.0.1	and	19-20
# ::node	0.1.0.1.0	eat-01	3-4
# ::node	0.1.0.1.0.0	we	0-1
# ::node	0.1.0.1.0.0.0	drink-01	1-2
# ::node	0.1.0.1.0.1	night	10-11
# ::node	0.1.0.1.0.2	and	2-3
# ::node	0.1.0.2	and	27-28
# ::node	0.1.0.2.0	body	23-24
# ::node	0.1.0.2.1	deficit	29-30
# ::node	0.1.0.2.1.0	night	32-33
# ::root	0	contrast-01
# ::edge	and	op1	body	0.1.0.2	0.1.0.2.0	
# ::edge	and	op1	eat-01	0.1.0.1	0.1.0.1.0	
# ::edge	and	op1	eat-01	0.1.0.1.0.2	0.1.0.1.0	
# ::edge	and	op1	exceed-01	0.1	0.1.0	
# ::edge	and	op2	deficit	0.1.0.2	0.1.0.2.1	
# ::edge	contrast-01	ARG1	fluid	0	0.0	
# ::edge	contrast-01	ARG2	and	0	0.1	
# ::edge	deficit	time	night	0.1.0.2.1	0.1.0.2.1.0	
# ::edge	drink-01	ARG0	we	0.1.0.1.0.0.0	0.1.0.1.0.0	
# ::edge	eat-01	ARG0	we	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	eat-01	ARG1	night	0.1.0.1.0	0.1.0.1.0.1	
# ::edge	exceed-01	ARG0	so	0.1.0	0.1.0.0	
# ::edge	exceed-01	ARG1	and	0.1.0	0.1.0.1	
# ::edge	exceed-01	ARG2	and	0.1.0	0.1.0.2	
(c / contrast-01 
      :ARG1 (f / fluid) 
      :ARG2 (a3 / and 
            :op1 (e / exceed-01 
                  :ARG0 (s / so) 
                  :ARG1 (a2 / and 
                        :op1 (e2 / eat-01 
                              :ARG0 (w / we 
                                    :ARG0-of (d2 / drink-01)) 
                              :ARG1 (n2 / night) 
                              :op-of (a4 / and))) 
                  :ARG2 (a / and 
                        :op1 (b / body) 
                        :op2 (d / deficit 
                              :time (n / night))))))

# ::snt whereas middle and upper classes have negotiated and established salary levels far in excess of need over a period of decades
# ::tok whereas middle and upper classes have negotiated and established salary levels far in excess of need over a period of decades
# ::alignments 20-21|0.2.0+0.2 18-19|0.3 15-16|0.1.2 13-14|0.1.2.0 11-12|0.1.2.0.0 10-11|0.1.1 9-10|0.1.1.0 8-9|0.1 7-8|0 4-5|0.1.0 3-4|0.1.0.0.1 2-3|0.1.0.0 1-2|0.1.0.0.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:04.447
# ::node	0	and	7-8
# ::node	0.0	whereas	0-1
# ::node	0.1	establish-01	8-9
# ::node	0.1.0	class	4-5
# ::node	0.1.0.0	and	2-3
# ::node	0.1.0.0.0	middle	1-2
# ::node	0.1.0.0.1	upper	3-4
# ::node	0.1.1	level	10-11
# ::node	0.1.1.0	salary	9-10
# ::node	0.1.2	need-01	15-16
# ::node	0.1.2.0	exceed-01	13-14
# ::node	0.1.2.0.0	far	11-12
# ::node	0.2	temporal-quantity	20-21
# ::node	0.2.0	decade	20-21
# ::node	0.3	period	18-19
# ::root	0	and
# ::edge	and	op1	establish-01	0	0.1	
# ::edge	and	op1	middle	0.1.0.0	0.1.0.0.0	
# ::edge	and	op2	upper	0.1.0.0	0.1.0.0.1	
# ::edge	and	op3	class	0.1.0.0	0.1.0	
# ::edge	and	purpose	temporal-quantity	0	0.2	
# ::edge	and	time	period	0	0.3	
# ::edge	establish-01	ARG0	class	0.1	0.1.0	
# ::edge	establish-01	ARG1	level	0.1	0.1.1	
# ::edge	establish-01	ARG2	need-01	0.1	0.1.2	
# ::edge	exceed-01	ARG1	need-01	0.1.2.0	0.1.2	
# ::edge	exceed-01	manner	far	0.1.2.0	0.1.2.0.0	
# ::edge	level	mod	salary	0.1.1	0.1.1.0	
# ::edge	temporal-quantity	unit	decade	0.2	0.2.0	
# ::edge	whereas	op1	and	0.0	0	
(a / and 
      :op-of (w / whereas) 
      :op1 (e2 / establish-01 
            :ARG0 (c / class 
                  :op-of (a2 / and 
                        :op1 (m / middle) 
                        :op2 (u / upper))) 
            :ARG1 (l / level 
                  :mod (s / salary)) 
            :ARG2 (n / need-01 
                  :ARG1-of (e / exceed-01 
                        :manner (f / far)))) 
      :purpose (t / temporal-quantity 
            :unit (d / decade)) 
      :time (p / period))

# ::snt in excess of the record 205000 at royal lytham in 1988 and a massive increase on the 193000 who swarmed over the old course in 1984
# ::tok in excess of the record 205000 at royal lytham in 1988 and a massive increase on the 193000 who swarmed over the old course in 1984
# ::alignments 25-26|0.3.0+0.3 22-23|0.2.0 19-20|0 17-18|0.1.3.2+0.1.3.1+0.1.3.0+0.1.3 14-15|0.1 13-14|0.1.2 11-12|0.1.1 10-11|0.1.4.0+0.1.4 7-8|0.0 5-6|0.1.0.0.2+0.1.0.0.1+0.1.0.0.0+0.1.0.0 4-5|0.1.0 1-2|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:05.427
# ::node	0	swarm-01	19-20
# ::node	0.0	royal	7-8
# ::node	0.1	increase-01	14-15
# ::node	0.1.0	record	4-5
# ::node	0.1.0.0	date-entity	5-6
# ::node	0.1.0.0.0	0	5-6
# ::node	0.1.0.0.1	50	5-6
# ::node	0.1.0.0.2	20	5-6
# ::node	0.1.1	and	11-12
# ::node	0.1.2	massive	13-14
# ::node	0.1.3	date-entity	17-18
# ::node	0.1.3.0	0	17-18
# ::node	0.1.3.1	30	17-18
# ::node	0.1.3.2	19	17-18
# ::node	0.1.4	date-entity	10-11
# ::node	0.1.4.0	1988	10-11
# ::node	0.2	exceed-01	1-2
# ::node	0.2.0	old	22-23
# ::node	0.3	date-entity	25-26
# ::node	0.3.0	1984	25-26
# ::root	0	swarm-01
# ::edge	date-entity	day	0	0.1.0.0	0.1.0.0.0	
# ::edge	date-entity	day	0	0.1.3	0.1.3.0	
# ::edge	date-entity	month	30	0.1.3	0.1.3.1	
# ::edge	date-entity	month	50	0.1.0.0	0.1.0.0.1	
# ::edge	date-entity	year	19	0.1.3	0.1.3.2	
# ::edge	date-entity	year	1984	0.3	0.3.0	
# ::edge	date-entity	year	1988	0.1.4	0.1.4.0	
# ::edge	date-entity	year	20	0.1.0.0	0.1.0.0.2	
# ::edge	increase-01	ARG0	record	0.1	0.1.0	
# ::edge	increase-01	ARG1	and	0.1	0.1.1	
# ::edge	increase-01	mod	massive	0.1	0.1.2	
# ::edge	increase-01	time	date-entity	0.1	0.1.3	
# ::edge	increase-01	time	date-entity	0.1	0.1.4	
# ::edge	old	op1	exceed-01	0.2.0	0.2	
# ::edge	record	op1	date-entity	0.1.0	0.1.0.0	
# ::edge	swarm-01	ARG0	royal	0	0.0	
# ::edge	swarm-01	ARG1	increase-01	0	0.1	
# ::edge	swarm-01	ARG2	exceed-01	0	0.2	
# ::edge	swarm-01	time	date-entity	0	0.3	
(s / swarm-01 
      :ARG0 (r / royal) 
      :ARG1 (i / increase-01 
            :ARG0 (r2 / record 
                  :op1 (d4 / date-entity 
                        :day 0 
                        :month 50 
                        :year 20)) 
            :ARG1 (a / and) 
            :mod (m / massive) 
            :time (d2 / date-entity 
                  :day 0 
                  :month 30 
                  :year 19) 
            :time (d3 / date-entity 
                  :year 1988)) 
      :ARG2 (e / exceed-01 
            :op-of (o / old)) 
      :time (d / date-entity 
            :year 1984))

# ::snt the comittee was asked to make recommendations because of concern over excesses of some of britains national tabloid newspapers
# ::tok the comittee was asked to make recommendations because of concern over excesses of some of britains national tabloid newspapers
# ::alignments 18-19|0.0 17-18|0 16-17|0.0.1 13-14|0.0.0.0.0.0.0 9-10|0.0.0 7-8|0.0.0.0 6-7|0.0.0.0.0.0 3-4|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:05.492
# ::node	0	tabloid	17-18
# ::node	0.0	newspaper	18-19
# ::node	0.0.0	concern-01	9-10
# ::node	0.0.0.0	cause-01	7-8
# ::node	0.0.0.0.0	ask-02	3-4
# ::node	0.0.0.0.0.0	recommend-01	6-7
# ::node	0.0.0.0.0.0.0	some	13-14
# ::node	0.0.1	nation	16-17
# ::root	0	tabloid
(t / tabloid 
      :mod-of (n / newspaper 
            :ARG1-of (c / concern-01 
                  :ARG0-of (c2 / cause-01 
                        :ARG1 (a / ask-02 
                              :ARG1 (r / recommend-01 
                                    :ARG1 (s / some))))) 
            :mod (n2 / nation)))

# ::snt sometimes there is an excess clause whereby you have to meet the first 25 or 50 of any damage for which you are claiming
# ::tok sometimes there is an excess clause whereby you have to meet the first 25 or 50 of any damage for which you are claiming
# ::alignments 23-24|0.0.1.0 21-22|0.0.1 18-19|0.0.1.1 17-18|0.0.1.1.1 15-16|0.0.0 14-15|0.0.1.1.3 13-14|0.0.1.1.3.0 7-8|0.0.1.1.0 5-6|0 4-5|0.0 0-1|0.0.1.1.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:05.688
# ::node	0	clause	5-6
# ::node	0.0	exceed-01	4-5
# ::node	0.0.0	50	15-16
# ::node	0.0.1	you	21-22
# ::node	0.0.1.0	claim-01	23-24
# ::node	0.0.1.1	damage-01	18-19
# ::node	0.0.1.1.0	you	7-8
# ::node	0.0.1.1.1	any	17-18
# ::node	0.0.1.1.2	sometimes	0-1
# ::node	0.0.1.1.3	or	14-15
# ::node	0.0.1.1.3.0	25	13-14
# ::root	0	clause
# ::edge	claim-01	ARG0	you	0.0.1.0	0.0.1	
# ::edge	clause	mod	exceed-01	0	0.0	
# ::edge	damage-01	ARG0	you	0.0.1.1	0.0.1.1.0	
# ::edge	damage-01	ARG1	you	0.0.1.1	0.0.1	
# ::edge	damage-01	mod	any	0.0.1.1	0.0.1.1.1	
# ::edge	exceed-01	ARG0	50	0.0	0.0.0	
# ::edge	exceed-01	ARG1	you	0.0	0.0.1	
# ::edge	or	op1	25	0.0.1.1.3	0.0.1.1.3.0	
# ::edge	or	op2	damage-01	0.0.1.1.3	0.0.1.1	
# ::edge	sometimes	op1	damage-01	0.0.1.1.2	0.0.1.1	
(c2 / clause 
      :mod (e / exceed-01 
            :ARG0 50 
            :ARG1 (y / you 
                  :ARG0-of (c / claim-01) 
                  :ARG1-of (d / damage-01 
                        :ARG0 (y2 / you) 
                        :mod (a / any) 
                        :op-of (s / sometimes) 
                        :op-of (o / or 
                              :op1 25)))))

# ::snt mr ceausescu often seemed to have more in common with caligula caracalla commodus nero heliogabalus domitian and maximinus all of whom tried to ensure that their excesses fell principally upon those around them
# ::tok mr ceausescu often seemed to have more in common with caligula caracalla commodus nero heliogabalus domitian and maximinus all of whom tried to ensure that their excesses fell principally upon those around them
# ::alignments 31-32|0.1.0 28-29|0.1.1 27-28|0.1 23-24|0 21-22|0.2 18-19|0.2.0 16-17|0.0.0.1 8-9|0.0.0.0 3-4|0.0.0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:06.192
# ::node	0	ensure-01	23-24
# ::node	0.0	often	2-3
# ::node	0.0.0	seem-01	3-4
# ::node	0.0.0.0	common	8-9
# ::node	0.0.0.1	and	16-17
# ::node	0.1	fall-01	27-28
# ::node	0.1.0	around	31-32
# ::node	0.1.1	principal	28-29
# ::node	0.2	try-01	21-22
# ::node	0.2.0	all	18-19
# ::root	0	ensure-01
# ::edge	and	op1	seem-01	0.0.0.1	0.0.0	
# ::edge	ensure-01	ARG0	often	0	0.0	
# ::edge	ensure-01	ARG1	fall-01	0	0.1	
# ::edge	fall-01	ARG1	around	0.1	0.1.0	
# ::edge	fall-01	manner	principal	0.1	0.1.1	
# ::edge	seem-01	ARG1	common	0.0.0	0.0.0.0	
# ::edge	seem-01	frequency	often	0.0.0	0.0	
# ::edge	try-01	ARG0	all	0.2	0.2.0	
# ::edge	try-01	ARG1	ensure-01	0.2	0	
(e / ensure-01 
      :ARG0 (o / often 
            :frequency-of (s / seem-01 
                  :ARG1 (c / common) 
                  :op-of (a3 / and))) 
      :ARG1 (f / fall-01 
            :ARG1 (a / around) 
            :manner (p / principal)) 
      :ARG1-of (t / try-01 
            :ARG0 (a2 / all)))

# ::snt but now the anticipated figure is in excess of 600m
# ::tok but now the anticipated figure is in excess of 600m
# ::alignments 7-8|0.0.0 4-5|0.0 3-4|0.0.1 1-2|0.0.2 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:06.217
# ::node	0	contrast-01	0-1
# ::node	0.0	figure	4-5
# ::node	0.0.0	exceed-01	7-8
# ::node	0.0.1	anticipate-01	3-4
# ::node	0.0.2	now	1-2
# ::root	0	contrast-01
# ::edge	anticipate-01	ARG1	figure	0.0.1	0.0	
# ::edge	contrast-01	ARG1	figure	0	0.0	
# ::edge	exceed-01	ARG1	figure	0.0.0	0.0	
# ::edge	figure	time	now	0.0	0.0.2	
(c / contrast-01 
      :ARG1 (f / figure 
            :ARG1-of (e / exceed-01) 
            :ARG1-of (a / anticipate-01) 
            :time (n / now)))

# ::snt it still cannot arise where the claimant has capital in excess of 6000 dash
# ::tok it still cannot arise where the claimant has capital in excess of 6000 dash
# ::alignments 12-13|0.1 10-11|0.2.0 8-9|0.2 3-4|0 1-2|0.3 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:06.280
# ::node	0	arise-01	3-4
# ::node	0.0	it	0-1
# ::node	0.1	6000	12-13
# ::node	0.2	capital	8-9
# ::node	0.2.0	exceed-01	10-11
# ::node	0.3	still	1-2
# ::root	0	arise-01
# ::edge	arise-01	ARG0	it	0	0.0	
# ::edge	arise-01	ARG1	6000	0	0.1	
# ::edge	arise-01	purpose	capital	0	0.2	
# ::edge	arise-01	time	still	0	0.3	
# ::edge	capital	mod	exceed-01	0.2	0.2.0	
(a / arise-01 
      :ARG0 (i / it) 
      :ARG1 6000 
      :purpose (c / capital 
            :mod (e / exceed-01)) 
      :time (s / still))

# ::snt but does this justify those who see themselves as more moral or fuller of sympathy for their fellow humans than the rest of us telling us these grotesque lies about money in order to win us to their cause  the department of transports invention about the cost of fatal road accidents becomes transmuted through several magnification processes into the antialcohol lobbys bald statement that at 1987 costs the deaths and injuries from alcoholrelated road accidents represent a cost in excess of 800 million
# ::tok but does this justify those who see themselves as more moral or fuller of sympathy for their fellow humans than the rest of us telling us these grotesque lies about money in order to win us to their cause the department of transports invention about the cost of fatal road accidents becomes transmuted through several magnification processes into the antialcohol lobbys bald statement that at 1987 costs the deaths and injuries from alcoholrelated road accidents represent a cost in excess of 800 million
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:06.285
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt a necessarily economical wellordered life permitted few excesses
# ::tok a necessarily economical wellordered life permitted few excesses
# ::alignments 6-7|0.0.0.0.0 5-6|0 4-5|0.0 2-3|0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:06.330
# ::node	0	permit-01	5-6
# ::node	0.0	life	4-5
# ::node	0.0.0	economical	2-3
# ::node	0.0.0.0	necessarily	1-2
# ::node	0.0.0.0.0	few	6-7
# ::root	0	permit-01
# ::edge	economical	degree	necessarily	0.0.0	0.0.0.0	
# ::edge	few	op1	necessarily	0.0.0.0.0	0.0.0.0	
# ::edge	life	mod	economical	0.0	0.0.0	
# ::edge	permit-01	ARG1	life	0	0.0	
(p / permit-01 
      :ARG1 (l / life 
            :mod (e / economical 
                  :degree (n / necessarily 
                        :op-of (f / few)))))

# ::snt the company says all the motorist has to pay for is the initial test and the retest and a small excess
# ::tok the company says all the motorist has to pay for is the initial test and the retest and a small excess
# ::alignments 20-21|0.1.1 19-20|0.1.1.0 17-18|0.1.1.1 14-15|0.1 13-14|0.1.0 12-13|0.1.0.1 8-9|0.1.0.0 3-4|0.2 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:06.415
# ::node	0	say-01	2-3
# ::node	0.0	company	1-2
# ::node	0.1	and	14-15
# ::node	0.1.0	test-01	13-14
# ::node	0.1.0.0	pay-01	8-9
# ::node	0.1.0.1	initial	12-13
# ::node	0.1.1	exceed-01	20-21
# ::node	0.1.1.0	small	19-20
# ::node	0.1.1.1	and	17-18
# ::node	0.2	all	3-4
# ::root	0	say-01
# ::edge	and	op1	exceed-01	0.1.1.1	0.1.1	
# ::edge	and	op1	test-01	0.1	0.1.0	
# ::edge	and	op2	exceed-01	0.1	0.1.1	
# ::edge	exceed-01	mod	small	0.1.1	0.1.1.0	
# ::edge	pay-01	ARG1	test-01	0.1.0.0	0.1.0	
# ::edge	say-01	ARG0	company	0	0.0	
# ::edge	say-01	ARG1	and	0	0.1	
# ::edge	say-01	quant	all	0	0.2	
# ::edge	test-01	mod	initial	0.1.0	0.1.0.1	
(s2 / say-01 
      :ARG0 (c / company) 
      :ARG1 (a2 / and 
            :op1 (t / test-01 
                  :ARG1-of (p / pay-01) 
                  :mod (i / initial)) 
            :op2 (e / exceed-01 
                  :mod (s / small) 
                  :op-of (a / and))) 
      :quant (a3 / all))

# ::snt the cost of a successful concierge system in a typical london borough is in excess of 200 million
# ::tok the cost of a successful concierge system in a typical london borough is in excess of 200 million
# ::alignments 16-17|0.1.0.0.0 14-15|0.1.1 10-11|0.0.0.0+0.0.0+0.0 9-10|0 6-7|0.1.0 4-5|0.1.0.0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:06.539
# ::node	0	typify-01	9-10
# ::node	0.0	city	10-11
# ::node	0.0.0	name	10-11
# ::node	0.0.0.0	"London"	10-11
# ::node	0.1	cost-01	1-2
# ::node	0.1.0	system	6-7
# ::node	0.1.0.0	succeed-01	4-5
# ::node	0.1.0.0.0	200	16-17
# ::node	0.1.1	exceed-01	14-15
# ::root	0	typify-01
# ::edge	city	name	name	0.0	0.0.0	
# ::edge	cost-01	ARG1	system	0.1	0.1.0	
# ::edge	exceed-01	ARG1	cost-01	0.1.1	0.1	
# ::edge	name	op1	"London"	0.0.0	0.0.0.0	
# ::edge	succeed-01	ARG0	200	0.1.0.0	0.1.0.0.0	
# ::edge	succeed-01	ARG1	system	0.1.0.0	0.1.0	
# ::edge	typify-01	ARG0	city	0	0.0	
# ::edge	typify-01	ARG1	cost-01	0	0.1	
(t / typify-01 
      :ARG0 (c / city 
            :name (n / name 
                  :op1 "London")) 
      :ARG1 (c2 / cost-01 
            :ARG1 (s / system 
                  :ARG1-of (s2 / succeed-01 
                        :ARG0 200)) 
            :ARG1-of (e / exceed-01)))

# ::snt   the working party said existing law was much more capable than is commonly supposed of dealing with what are regarded as the excesses of the presentday press
# ::tok the working party said existing law was much more capable than is commonly supposed of dealing with what are regarded as the excesses of the presentday press
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:06.540
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt its a very extreme film a story about fame and excess about people who acquire a very specific audience people who really watch them and reflect them
# ::tok its a very extreme film a story about fame and excess about people who acquire a very specific audience people who really watch them and reflect them
# ::alignments 25-26|0.2 24-25|0 22-23|0.0 21-22|0.0.0 18-19|0.1.1.1 17-18|0.1.1 16-17|0.1.1.0 14-15|0.1 10-11|0.1.0 9-10|0.1.0.0 8-9|0.1.0.0.0 6-7|0.1.0.0.0.0 4-5|0.2.0 3-4|0.2.0.0 2-3|0.2.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:06.782
# ::node	0	and	24-25
# ::node	0.0	watch-01	22-23
# ::node	0.0.0	really	21-22
# ::node	0.1	acquire-01	14-15
# ::node	0.1.0	exceed-01	10-11
# ::node	0.1.0.0	and	9-10
# ::node	0.1.0.0.0	fame	8-9
# ::node	0.1.0.0.0.0	story	6-7
# ::node	0.1.1	specific	17-18
# ::node	0.1.1.0	very	16-17
# ::node	0.1.1.1	audience	18-19
# ::node	0.2	reflect-01	25-26
# ::node	0.2.0	film	4-5
# ::node	0.2.0.0	extreme	3-4
# ::node	0.2.0.0.0	very	2-3
# ::root	0	and
# ::edge	acquire-01	ARG1	specific	0.1	0.1.1	
# ::edge	and	op1	acquire-01	0	0.1	
# ::edge	and	op1	fame	0.1.0.0	0.1.0.0.0	
# ::edge	and	op2	exceed-01	0.1.0.0	0.1.0	
# ::edge	and	op2	reflect-01	0	0.2	
# ::edge	audience	mod	specific	0.1.1.1	0.1.1	
# ::edge	exceed-01	ARG0	acquire-01	0.1.0	0.1	
# ::edge	extreme	degree	very	0.2.0.0	0.2.0.0.0	
# ::edge	film	mod	extreme	0.2.0	0.2.0.0	
# ::edge	reflect-01	ARG1	film	0.2	0.2.0	
# ::edge	specific	degree	very	0.1.1	0.1.1.0	
# ::edge	story	topic	fame	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	watch-01	ARG1	and	0.0	0	
# ::edge	watch-01	mod	really	0.0	0.0.0	
(a / and 
      :ARG1-of (w / watch-01 
            :mod (r2 / really)) 
      :op1 (a3 / acquire-01 
            :ARG0-of (e / exceed-01 
                  :op-of (a4 / and 
                        :op1 (f / fame 
                              :topic-of (s2 / story)))) 
            :ARG1 (s / specific 
                  :degree (v / very) 
                  :mod-of (a2 / audience))) 
      :op2 (r / reflect-01 
            :ARG1 (f2 / film 
                  :mod (e2 / extreme 
                        :degree (v2 / very)))))

# ::snt union leaders however were already invoking probable mortgage rises as a reason for an increase in excess of 10 per cent
# ::tok union leaders however were already invoking probable mortgage rises as a reason for an increase in excess of 10 per cent
# ::alignments 20-21|0.1+0 18-19|0.0.0.1.2.0 16-17|0.0.0 14-15|0.0 11-12|0.0.0.1.1 8-9|0.0.0.1 7-8|0.0.0.1.2 4-5|0.0.0.0 1-2|0.0.0.1.0.0+0.0.0.1.0 0-1|0.0.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:06.977
# ::node	0	monetary-quantity	20-21
# ::node	0.0	increase-01	14-15
# ::node	0.0.0	exceed-01	16-17
# ::node	0.0.0.0	already	4-5
# ::node	0.0.0.1	rise-01	8-9
# ::node	0.0.0.1.0	person	1-2
# ::node	0.0.0.1.0.0	lead-02	1-2
# ::node	0.0.0.1.0.0.0	union	0-1
# ::node	0.0.0.1.1	reason	11-12
# ::node	0.0.0.1.2	mortgage-01	7-8
# ::node	0.0.0.1.2.0	10	18-19
# ::node	0.1	cent	20-21
# ::root	0	monetary-quantity
# ::edge	exceed-01	ARG1	already	0.0.0	0.0.0.0	
# ::edge	increase-01	ARG1	exceed-01	0.0	0.0.0	
# ::edge	increase-01	ARG4	monetary-quantity	0.0	0	
# ::edge	lead-02	ARG0	person	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	lead-02	ARG1	union	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	monetary-quantity	unit	cent	0	0.1	
# ::edge	mortgage-01	ARG1	10	0.0.0.1.2	0.0.0.1.2.0	
# ::edge	rise-01	ARG0	person	0.0.0.1	0.0.0.1.0	
# ::edge	rise-01	ARG1	reason	0.0.0.1	0.0.0.1.1	
# ::edge	rise-01	ARG2	mortgage-01	0.0.0.1	0.0.0.1.2	
# ::edge	rise-01	time	exceed-01	0.0.0.1	0.0.0	
(m / monetary-quantity 
      :ARG4-of (i / increase-01 
            :ARG1 (e / exceed-01 
                  :ARG1 (a / already) 
                  :time-of (r2 / rise-01 
                        :ARG0 (p / person 
                              :ARG0-of (l / lead-02 
                                    :ARG1 (u / union))) 
                        :ARG1 (r / reason) 
                        :ARG2 (m2 / mortgage-01 
                              :ARG1 10)))) 
      :unit (c / cent))

# ::snt at the top end of the market a prime week for perhaps five rods on a prime river could fetch something in excess of pounds 500000
# ::tok at the top end of the market a prime week for perhaps five rods on a prime river could fetch something in excess of pounds 500000
# ::alignments 25-26|0.0.0.1.0.0.0.0 22-23|0.0.0 20-21|0.0 18-19|0 17-18|0.0.0.1.0 16-17|0.0.0.1 13-14|0.0.0.1.0.0 12-13|0.0.0.0 11-12|0.0.0.1.0.0.0 9-10|0.0.0.2.0 8-9|0.0.0.2.0.0 6-7|0.0.0.2 2-3|0.0.0.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:07.104
# ::node	0	possible	18-19
# ::node	0.0	something	20-21
# ::node	0.0.0	exceed-01	22-23
# ::node	0.0.0.0	5	12-13
# ::node	0.0.0.1	prime	16-17
# ::node	0.0.0.1.0	river	17-18
# ::node	0.0.0.1.0.0	rod	13-14
# ::node	0.0.0.1.0.0.0	perhaps	11-12
# ::node	0.0.0.1.0.0.0.0	500000	25-26
# ::node	0.0.0.2	market	6-7
# ::node	0.0.0.2.0	week	9-10
# ::node	0.0.0.2.0.0	prime	8-9
# ::node	0.0.0.3	top	2-3
# ::root	0	possible
# ::edge	exceed-01	ARG0	5	0.0.0	0.0.0.0	
# ::edge	exceed-01	ARG1	something	0.0.0	0.0	
# ::edge	exceed-01	ARG2	prime	0.0.0	0.0.0.1	
# ::edge	market	op1	exceed-01	0.0.0.2	0.0.0	
# ::edge	market	time	week	0.0.0.2	0.0.0.2.0	
# ::edge	perhaps	poss	500000	0.0.0.1.0.0.0	0.0.0.1.0.0.0.0	
# ::edge	possible	domain	something	0	0.0	
# ::edge	river	mod	prime	0.0.0.1.0	0.0.0.1	
# ::edge	rod	location	river	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	rod	mod	perhaps	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	top	op1	exceed-01	0.0.0.3	0.0.0	
# ::edge	week	mod	prime	0.0.0.2.0	0.0.0.2.0.0	
(p / possible 
      :domain (s / something 
            :ARG1-of (e / exceed-01 
                  :ARG0 5 
                  :ARG2 (p2 / prime 
                        :mod-of (r / river 
                              :location-of (r2 / rod 
                                    :mod (p3 / perhaps 
                                          :poss 500000)))) 
                  :op-of (m / market 
                        :time (w / week 
                              :mod (p4 / prime))) 
                  :op-of (t / top))))

# ::snt starting with the longest straight line trim most of the excess off leaving some two inches for the final trim
# ::tok starting with the longest straight line trim most of the excess off leaving some two inches for the final trim
# ::alignments 18-19|0.2.1.0 15-16|0.2.0.1+0.2.0 14-15|0.2.0.0 13-14|0.2.1.1 12-13|0.2 11-12|0.2.2 10-11|0.2.1 7-8|0.0 5-6|0.1 4-5|0.1.1 3-4|0.1.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:07.294
# ::node	0	start-01	0-1
# ::node	0.0	most	7-8
# ::node	0.1	line	5-6
# ::node	0.1.0	long	3-4
# ::node	0.1.1	straight	4-5
# ::node	0.2	leave-01	12-13
# ::node	0.2.0	distance-quantity	15-16
# ::node	0.2.0.0	2	14-15
# ::node	0.2.0.1	inch	15-16
# ::node	0.2.1	exceed-01	10-11
# ::node	0.2.1.0	final	18-19
# ::node	0.2.1.1	some	13-14
# ::node	0.2.2	off	11-12
# ::root	0	start-01
# ::edge	distance-quantity	quant	2	0.2.0	0.2.0.0	
# ::edge	distance-quantity	unit	inch	0.2.0	0.2.0.1	
# ::edge	exceed-01	ARG0	final	0.2.1	0.2.1.0	
# ::edge	exceed-01	ARG1	leave-01	0.2.1	0.2	
# ::edge	exceed-01	mod	some	0.2.1	0.2.1.1	
# ::edge	leave-01	ARG1	distance-quantity	0.2	0.2.0	
# ::edge	line	mod	long	0.1	0.1.0	
# ::edge	line	mod	straight	0.1	0.1.1	
# ::edge	off	op1	leave-01	0.2.2	0.2	
# ::edge	start-01	ARG1	most	0	0.0	
# ::edge	start-01	ARG2	line	0	0.1	
# ::edge	start-01	manner	leave-01	0	0.2	
(s3 / start-01 
      :ARG1 (m / most) 
      :ARG2 (l2 / line 
            :mod (l3 / long) 
            :mod (s2 / straight)) 
      :manner (l / leave-01 
            :ARG1 (d / distance-quantity 
                  :quant 2 
                  :unit (i / inch)) 
            :ARG1-of (e / exceed-01 
                  :ARG0 (f / final) 
                  :mod (s / some)) 
            :op-of (o / off)))

# ::snt reregulation is the buzzword on the lips of the us airline industry as the worst excesses of the oligopoly bred by its predecessor deregulation once again became evident
# ::tok reregulation is the buzzword on the lips of the us airline industry as the worst excesses of the oligopoly bred by its predecessor deregulation once again became evident
# ::alignments 27-28|0.0.1 26-27|0.0 25-26|0.0.2 24-25|0.0.2.0 23-24|0 19-20|0.1 14-15|0.1.0 11-12|0.0.0.0 10-11|0.0.0.0.0 6-7|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:07.381
# ::node	0	deregulate-01	23-24
# ::node	0.0	become-01	26-27
# ::node	0.0.0	lip	6-7
# ::node	0.0.0.0	industry	11-12
# ::node	0.0.0.0.0	airline	10-11
# ::node	0.0.1	evident	27-28
# ::node	0.0.2	again	25-26
# ::node	0.0.2.0	once	24-25
# ::node	0.1	breed-01	19-20
# ::node	0.1.0	bad	14-15
# ::root	0	deregulate-01
(d / deregulate-01 
      :ARG1-of (b / become-01 
            :ARG0 (l / lip 
                  :mod (i / industry 
                        :mod (a2 / airline))) 
            :ARG2 (e / evident) 
            :mod (a / again 
                  :mod (o / once))) 
      :ARG2-of (b2 / breed-01 
            :ARG1 (b3 / bad)))

# ::snt once the confusions and excesses of the common agricultural policy  have been remedied it is possible that a call for more food production will begin  all over again
# ::tok once the confusions and excesses of the common agricultural policy have been remedied it is possible that a call for more food production will begin all over again
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:07.383
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt instead any excess of purchase consideration over the value of the assets bought will have to be included on the balance sheet and written off against annual profits over a period of 20 years
# ::tok instead any excess of purchase consideration over the value of the assets bought will have to be included on the balance sheet and written off against annual profits over a period of 20 years
# ::alignments 33-34|0.0.0.0.0.0.0.1+0.0.0.0.0.0.0 32-33|0.0.0.0.0.0.0.0 30-31|0.2.2 27-28|0.2.0 24-25|0.2.1 23-24|0.2 22-23|0 21-22|0.1.0 20-21|0.1.0.0 17-18|0.1 12-13|0.0.0.0.0.0 11-12|0.0.0.0.0 8-9|0.0.0.0 5-6|0.0.0 4-5|0.0.0.1 2-3|0.0 1-2|0.0.1 0-1|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:07.733
# ::node	0	and	22-23
# ::node	0.0	exceed-01	2-3
# ::node	0.0.0	consider-02	5-6
# ::node	0.0.0.0	value-01	8-9
# ::node	0.0.0.0.0	asset	11-12
# ::node	0.0.0.0.0.0	buy-01	12-13
# ::node	0.0.0.0.0.0.0	temporal-quantity	33-34
# ::node	0.0.0.0.0.0.0.0	20	32-33
# ::node	0.0.0.0.0.0.0.1	year	33-34
# ::node	0.0.0.1	purchase-01	4-5
# ::node	0.0.1	any	1-2
# ::node	0.0.1.0	instead	0-1
# ::node	0.1	include-01	17-18
# ::node	0.1.0	sheet	21-22
# ::node	0.1.0.0	balance-01	20-21
# ::node	0.2	write-01	23-24
# ::node	0.2.0	profit-01	27-28
# ::node	0.2.1	off	24-25
# ::node	0.2.2	period	30-31
# ::root	0	and
# ::edge	and	op1	exceed-01	0	0.0	
# ::edge	and	op2	include-01	0	0.1	
# ::edge	and	op3	write-01	0	0.2	
# ::edge	any	degree	instead	0.0.1	0.0.1.0	
# ::edge	balance-01	ARG0	sheet	0.1.0.0	0.1.0	
# ::edge	buy-01	ARG0	temporal-quantity	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	buy-01	ARG1	asset	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	consider-02	ARG1	value-01	0.0.0	0.0.0.0	
# ::edge	exceed-01	ARG1	consider-02	0.0	0.0.0	
# ::edge	exceed-01	mod	any	0.0	0.0.1	
# ::edge	include-01	ARG2	sheet	0.1	0.1.0	
# ::edge	purchase-01	ARG1	consider-02	0.0.0.1	0.0.0	
# ::edge	temporal-quantity	quant	20	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	temporal-quantity	unit	year	0.0.0.0.0.0.0	0.0.0.0.0.0.0.1	
# ::edge	value-01	ARG1	asset	0.0.0.0	0.0.0.0.0	
# ::edge	write-01	ARG1	profit-01	0.2	0.2.0	
# ::edge	write-01	direction	off	0.2	0.2.1	
# ::edge	write-01	medium	period	0.2	0.2.2	
(a / and 
      :op1 (e / exceed-01 
            :ARG1 (c / consider-02 
                  :ARG1 (v / value-01 
                        :ARG1 (a2 / asset 
                              :ARG1-of (b2 / buy-01 
                                    :ARG0 (t / temporal-quantity 
                                          :quant 20 
                                          :unit (y / year))))) 
                  :ARG1-of (p3 / purchase-01)) 
            :mod (a3 / any 
                  :degree (i2 / instead))) 
      :op2 (i / include-01 
            :ARG2 (s / sheet 
                  :ARG0-of (b / balance-01))) 
      :op3 (w / write-01 
            :ARG1 (p2 / profit-01) 
            :direction (o / off) 
            :medium (p / period)))

# ::snt and you can bet your last penny that taxes for all of us rich and the less well off will be far in excess of what we pay today
# ::tok and you can bet your last penny that taxes for all of us rich and the less well off will be far in excess of what we pay today
# ::alignments 28-29|0.0.3 27-28|0.0 26-27|0.0.0 23-24|0.0.2 21-22|0.0.2.1 18-19|0.0.2.1.0.0 17-18|0.0.2.1.0 16-17|0.0.2.0 14-15|0 13-14|0.1 10-11|0.1.0.0.0.0 8-9|0.1.0.0.0 5-6|0.0.1 3-4|0.1.0 2-3|0.1.0.1 1-2|0.1.0.0 0-1|0.1.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:08.069
# ::node	0	and	14-15
# ::node	0.0	pay-01	27-28
# ::node	0.0.0	we	26-27
# ::node	0.0.1	last	5-6
# ::node	0.0.2	exceed-01	23-24
# ::node	0.0.2.0	less	16-17
# ::node	0.0.2.1	far	21-22
# ::node	0.0.2.1.0	well	17-18
# ::node	0.0.2.1.0.0	off	18-19
# ::node	0.0.3	today	28-29
# ::node	0.1	rich	13-14
# ::node	0.1.0	bet-01	3-4
# ::node	0.1.0.0	you	1-2
# ::node	0.1.0.0.0	tax-01	8-9
# ::node	0.1.0.0.0.0	all	10-11
# ::node	0.1.0.0.1	and	0-1
# ::node	0.1.0.1	possible	2-3
# ::root	0	and
# ::edge	and	op1	rich	0	0.1	
# ::edge	and	op1	you	0.1.0.0.1	0.1.0.0	
# ::edge	bet-01	ARG0	you	0.1.0	0.1.0.0	
# ::edge	bet-01	ARG1	rich	0.1.0	0.1	
# ::edge	bet-01	mod	possible	0.1.0	0.1.0.1	
# ::edge	exceed-01	ARG0	less	0.0.2	0.0.2.0	
# ::edge	exceed-01	ARG1	pay-01	0.0.2	0.0	
# ::edge	exceed-01	manner	far	0.0.2	0.0.2.1	
# ::edge	pay-01	ARG0	we	0.0	0.0.0	
# ::edge	pay-01	ARG1	last	0.0	0.0.1	
# ::edge	pay-01	ARG3	and	0.0	0	
# ::edge	pay-01	time	today	0.0	0.0.3	
# ::edge	tax-01	ARG0	you	0.1.0.0.0	0.1.0.0	
# ::edge	tax-01	ARG1	all	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	well	mod	far	0.0.2.1.0	0.0.2.1	
# ::edge	well	mod	off	0.0.2.1.0	0.0.2.1.0.0	
(a / and 
      :ARG3-of (p / pay-01 
            :ARG0 (w / we) 
            :ARG1 (l2 / last) 
            :ARG1-of (e / exceed-01 
                  :ARG0 (l / less) 
                  :manner (f / far 
                        :mod-of (w2 / well 
                              :mod (o / off)))) 
            :time (t / today)) 
      :op1 (r / rich 
            :ARG1-of (b / bet-01 
                  :ARG0 (y / you 
                        :ARG0-of (t2 / tax-01 
                              :ARG1 (a2 / all)) 
                        :op-of (a3 / and)) 
                  :mod (p2 / possible))))

# ::snt all over europe there lingers the sweet smell of excess
# ::tok all over europe there lingers the sweet smell of excess
# ::alignments 9-10|0.1 7-8|0 6-7|0.2 2-3|0.0.0.0+0.0.0+0.0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:08.109
# ::node	0	smell-01	7-8
# ::node	0.0	continent	2-3
# ::node	0.0.0	name	2-3
# ::node	0.0.0.0	"Europe"	2-3
# ::node	0.1	exceed-01	9-10
# ::node	0.1.0	all	0-1
# ::node	0.2	sweet	6-7
# ::root	0	smell-01
# ::edge	continent	name	name	0.0	0.0.0	
# ::edge	exceed-01	ARG1	all	0.1	0.1.0	
# ::edge	name	op1	"Europe"	0.0.0	0.0.0.0	
# ::edge	smell-01	ARG0	continent	0	0.0	
# ::edge	smell-01	ARG1	exceed-01	0	0.1	
# ::edge	smell-01	mod	sweet	0	0.2	
(s / smell-01 
      :ARG0 (c / continent 
            :name (n / name 
                  :op1 "Europe")) 
      :ARG1 (e / exceed-01 
            :ARG1 (a / all)) 
      :mod (s2 / sweet))

# ::snt in one sense private medical insurance offers the most flexible coverage of all as you can reduce your costs in a variety of ways by agreeing in advance to pay the first xhundred pounds of any treatment yourself known as an excess by taking advantage of noclaims discounts or by agreeing to stay in a low band hospital where accommodation is of a lower standard
# ::tok in one sense private medical insurance offers the most flexible coverage of all as you can reduce your costs in a variety of ways by agreeing in advance to pay the first xhundred pounds of any treatment yourself known as an excess by taking advantage of noclaims discounts or by agreeing to stay in a low band hospital where accommodation is of a lower standard
# ::alignments 64-65|0.0.0.0 63-64|0.0.0.0.0 59-60|0.0.0.1.0 57-58|0.0.0.1.1 56-57|0.0.0.1.1.0 55-56|0.1.0 52-53|0.0.0.1 50-51|0.0.0 48-49|0.0 44-45|0.2.0 41-42|0.2 38-39|0 36-37|0.1 35-36|0.1.2 29-30|0.1.1 27-28|0.1.1.1 25-26|0.1.1.0 23-24|0.1.1.2 21-22|0.1.1.0.0.0.0 18-19|0.1.1.0.0.0 16-17|0.1.1.0.0.1 15-16|0.1.1.0.0.1.0 14-15|0.1.1.0.0 12-13|0.1.1.0.0.1.0.0.1.0 10-11|0.1.1.0.0.1.0.0.1 9-10|0.1.1.0.0.1.0.0.1.1 8-9|0.1.1.0.0.1.0.0.1.1.0 6-7|0.1.1.0.0.1.0.0 5-6|0.1.1.0.0.1.0.0.0 4-5|0.1.1.0.0.1.0.0.0.1 3-4|0.1.1.0.0.1.0.0.0.0 2-3|0.1.1.0.0.1.0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:11.418
# ::node	0	know-01	38-39
# ::node	0.0	or	48-49
# ::node	0.0.0	agree-01	50-51
# ::node	0.0.0.0	standard	64-65
# ::node	0.0.0.0.0	low	63-64
# ::node	0.0.0.1	stay-01	52-53
# ::node	0.0.0.1.0	accommodation	59-60
# ::node	0.0.0.1.1	hospital	57-58
# ::node	0.0.0.1.1.0	band	56-57
# ::node	0.1	treat-03	36-37
# ::node	0.1.0	low	55-56
# ::node	0.1.1	pay-01	29-30
# ::node	0.1.1.0	agree-01	25-26
# ::node	0.1.1.0.0	you	14-15
# ::node	0.1.1.0.0.0	cost-01	18-19
# ::node	0.1.1.0.0.0.0	variety	21-22
# ::node	0.1.1.0.0.1	reduce-01	16-17
# ::node	0.1.1.0.0.1.0	possible	15-16
# ::node	0.1.1.0.0.1.0.0	offer-01	6-7
# ::node	0.1.1.0.0.1.0.0.0	insure-02	5-6
# ::node	0.1.1.0.0.1.0.0.0.0	private	3-4
# ::node	0.1.1.0.0.1.0.0.0.1	medicine	4-5
# ::node	0.1.1.0.0.1.0.0.1	cover-03	10-11
# ::node	0.1.1.0.0.1.0.0.1.0	all	12-13
# ::node	0.1.1.0.0.1.0.0.1.1	flexible	9-10
# ::node	0.1.1.0.0.1.0.0.1.1.0	most	8-9
# ::node	0.1.1.0.0.1.0.0.2	sense	2-3
# ::node	0.1.1.1	advance-01	27-28
# ::node	0.1.1.2	way	23-24
# ::node	0.1.2	any	35-36
# ::node	0.2	exceed-01	41-42
# ::node	0.2.0	advantage	44-45
# ::root	0	know-01
# ::edge	advance-01	ARG1	pay-01	0.1.1.1	0.1.1	
# ::edge	agree-01	ARG0	standard	0.0.0	0.0.0.0	
# ::edge	agree-01	ARG0	you	0.1.1.0	0.1.1.0.0	
# ::edge	agree-01	ARG1	pay-01	0.1.1.0	0.1.1	
# ::edge	agree-01	ARG1	stay-01	0.0.0	0.0.0.1	
# ::edge	cost-01	ARG0	you	0.1.1.0.0.0	0.1.1.0.0	
# ::edge	cost-01	ARG1	variety	0.1.1.0.0.0	0.1.1.0.0.0.0	
# ::edge	cover-03	ARG1	all	0.1.1.0.0.1.0.0.1	0.1.1.0.0.1.0.0.1.0	
# ::edge	cover-03	mod	flexible	0.1.1.0.0.1.0.0.1	0.1.1.0.0.1.0.0.1.1	
# ::edge	exceed-01	ARG2	advantage	0.2	0.2.0	
# ::edge	flexible	degree	most	0.1.1.0.0.1.0.0.1.1	0.1.1.0.0.1.0.0.1.1.0	
# ::edge	hospital	mod	band	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	insure-02	mod	medicine	0.1.1.0.0.1.0.0.0	0.1.1.0.0.1.0.0.0.1	
# ::edge	insure-02	mod	private	0.1.1.0.0.1.0.0.0	0.1.1.0.0.1.0.0.0.0	
# ::edge	know-01	ARG0	or	0	0.0	
# ::edge	know-01	ARG1	treat-03	0	0.1	
# ::edge	know-01	ARG2	exceed-01	0	0.2	
# ::edge	offer-01	ARG0	insure-02	0.1.1.0.0.1.0.0	0.1.1.0.0.1.0.0.0	
# ::edge	offer-01	ARG1	cover-03	0.1.1.0.0.1.0.0	0.1.1.0.0.1.0.0.1	
# ::edge	offer-01	purpose	possible	0.1.1.0.0.1.0.0	0.1.1.0.0.1.0	
# ::edge	offer-01	time	sense	0.1.1.0.0.1.0.0	0.1.1.0.0.1.0.0.2	
# ::edge	or	op1	agree-01	0.0	0.0.0	
# ::edge	pay-01	ARG1	treat-03	0.1.1	0.1	
# ::edge	possible	domain	reduce-01	0.1.1.0.0.1.0	0.1.1.0.0.1	
# ::edge	reduce-01	ARG0	you	0.1.1.0.0.1	0.1.1.0.0	
# ::edge	standard	mod	low	0.0.0.0	0.0.0.0.0	
# ::edge	stay-01	ARG0	accommodation	0.0.0.1	0.0.0.1.0	
# ::edge	stay-01	location	hospital	0.0.0.1	0.0.0.1.1	
# ::edge	treat-03	ARG1	low	0.1	0.1.0	
# ::edge	treat-03	mod	any	0.1	0.1.2	
# ::edge	way	purpose	pay-01	0.1.1.2	0.1.1	
(k / know-01 
      :ARG0 (o / or 
            :op1 (a2 / agree-01 
                  :ARG0 (s / standard 
                        :mod (l / low)) 
                  :ARG1 (s2 / stay-01 
                        :ARG0 (a / accommodation) 
                        :location (h / hospital 
                              :mod (b / band))))) 
      :ARG1 (t / treat-03 
            :ARG1 (l2 / low) 
            :ARG1-of (p / pay-01 
                  :ARG1-of (a6 / agree-01 
                        :ARG0 (y / you 
                              :ARG0-of (c / cost-01 
                                    :ARG1 (v / variety)) 
                              :ARG0-of (r / reduce-01 
                                    :domain-of (p2 / possible 
                                          :purpose-of (o2 / offer-01 
                                                :ARG0 (i / insure-02 
                                                      :mod (p3 / private) 
                                                      :mod (m2 / medicine)) 
                                                :ARG1 (c2 / cover-03 
                                                      :ARG1 (a7 / all) 
                                                      :mod (f / flexible 
                                                            :degree (m / most))) 
                                                :time (s3 / sense)))))) 
                  :ARG1-of (a5 / advance-01) 
                  :purpose-of (w / way)) 
            :mod (a4 / any)) 
      :ARG2 (e / exceed-01 
            :ARG2 (a3 / advantage)))

# ::snt from our experience the french seem to be far more willing to allow their children this unique experience than the british with the result that currently we have an excess of french families
# ::tok from our experience the french seem to be far more willing to allow their children this unique experience than the british with the result that currently we have an excess of french families
# ::alignments 32-33|0.0.2.0.0 31-32|0.0.2.0.1.0+0.0.2.0.1+0.0.2.0 29-30|0.0.2.0.0.0 26-27|0.0.2.0.0.0.0 25-26|0.0.2.0.0.0.1 23-24|0 17-18|0.0.0 16-17|0.0.0.1 15-16|0.0.1 14-15|0.0.0.0 12-13|0.0 10-11|0.0.2 8-9|0.0.2.2 5-6|0.0.2.1 4-5|0.0.2.1.0.1.0+0.0.2.1.0.1+0.0.2.1.0 2-3|0.0.2.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:11.646
# ::node	0	result-01	23-24
# ::node	0.0	allow-01	12-13
# ::node	0.0.0	experience-01	17-18
# ::node	0.0.0.0	child	14-15
# ::node	0.0.0.1	unique	16-17
# ::node	0.0.1	this	15-16
# ::node	0.0.2	will-02	10-11
# ::node	0.0.2.0	country	31-32
# ::node	0.0.2.0.0	family	32-33
# ::node	0.0.2.0.0.0	exceed-01	29-30
# ::node	0.0.2.0.0.0.0	we	26-27
# ::node	0.0.2.0.0.0.1	current	25-26
# ::node	0.0.2.0.1	name	31-32
# ::node	0.0.2.0.1.0	"France"	31-32
# ::node	0.0.2.1	seem-01	5-6
# ::node	0.0.2.1.0	country	4-5
# ::node	0.0.2.1.0.0	experience-01	2-3
# ::node	0.0.2.1.0.1	name	4-5
# ::node	0.0.2.1.0.1.0	"France"	4-5
# ::node	0.0.2.2	far	8-9
# ::root	0	result-01
(r / result-01 
      :ARG2-of (a / allow-01 
            :ARG0 (e2 / experience-01 
                  :ARG1 (c3 / child) 
                  :mod (u / unique)) 
            :ARG1 (t / this) 
            :ARG1-of (w2 / will-02 
                  :ARG0 (c / country 
                        :mod-of (f / family 
                              :ARG1-of (e / exceed-01 
                                    :ARG0 (w / we) 
                                    :time (c2 / current))) 
                        :name (n / name 
                              :op1 "France")) 
                  :ARG1-of (s / seem-01 
                        :ARG0 (c4 / country 
                              :ARG0-of (e3 / experience-01) 
                              :name (n2 / name 
                                    :op1 "France"))) 
                  :mod (f2 / far))))

# ::snt her muted responses did not disappoint him she made him feel clean again after louises corrupting excesses
# ::tok her muted responses did not disappoint him she made him feel clean again after louises corrupting excesses
# ::alignments 13-14|0.0.0.0.1 12-13|0.0.0.0.0 11-12|0.0.0.0 10-11|0.0.0 7-8|0.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:11.807
# ::node	0	respond-01	2-3
# ::node	0.0	she	7-8
# ::node	0.0.0	feel-01	10-11
# ::node	0.0.0.0	clean	11-12
# ::node	0.0.0.0.0	again	12-13
# ::node	0.0.0.0.1	after	13-14
# ::root	0	respond-01
# ::edge	clean	mod	again	0.0.0.0	0.0.0.0.0	
# ::edge	clean	time	after	0.0.0.0	0.0.0.0.1	
# ::edge	feel-01	ARG0	she	0.0.0	0.0	
# ::edge	feel-01	ARG1	clean	0.0.0	0.0.0.0	
# ::edge	respond-01	ARG1	she	0	0.0	
(r / respond-01 
      :ARG1 (s / she 
            :ARG0-of (f / feel-01 
                  :ARG1 (c / clean 
                        :mod (a2 / again) 
                        :time (a / after)))))

# ::snt at the end of a decade of designer excess that has produced overfancy clothes at the middle and lower end of the market as well as at the top we have emerged at a point where simplicity looks like a major virtue
# ::tok at the end of a decade of designer excess that has produced overfancy clothes at the middle and lower end of the market as well as at the top we have emerged at a point where simplicity looks like a major virtue
# ::alignments 41-42|0.0.0.1.0.0.1.0.0 40-41|0.0.0.1.0.0.1.0.0.0 37-38|0.0.0.1.0.0.1.0 34-35|0.0.0.1.0.0.1 31-32|0.0.0.1.0.0 29-30|0.0.0.1.0.0.0 28-29|0.0.0.1.0 24-25|0.0.0.0 22-23|0.0.2 18-19|0.2 17-18|0 16-17|0.1 13-14|0.0.1 11-12|0.0 8-9|0.0.0 7-8|0.0.0.1 5-6|0.0.0.2.0+0.0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:12.300
# ::node	0	and	17-18
# ::node	0.0	produce-01	11-12
# ::node	0.0.0	exceed-01	8-9
# ::node	0.0.0.0	well	24-25
# ::node	0.0.0.1	design-01	7-8
# ::node	0.0.0.1.0	top	28-29
# ::node	0.0.0.1.0.0	emerge-02	31-32
# ::node	0.0.0.1.0.0.0	we	29-30
# ::node	0.0.0.1.0.0.1	point	34-35
# ::node	0.0.0.1.0.0.1.0	look-02	37-38
# ::node	0.0.0.1.0.0.1.0.0	virtue	41-42
# ::node	0.0.0.1.0.0.1.0.0.0	major	40-41
# ::node	0.0.0.2	temporal-quantity	5-6
# ::node	0.0.0.2.0	decade	5-6
# ::node	0.0.1	clothes	13-14
# ::node	0.0.2	market	22-23
# ::node	0.1	middle	16-17
# ::node	0.2	low	18-19
# ::root	0	and
# ::edge	and	op1	produce-01	0	0.0	
# ::edge	and	op2	middle	0	0.1	
# ::edge	and	op3	low	0	0.2	
# ::edge	design-01	ARG1	top	0.0.0.1	0.0.0.1.0	
# ::edge	emerge-02	ARG0	we	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	emerge-02	ARG1	top	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	emerge-02	time	point	0.0.0.1.0.0	0.0.0.1.0.0.1	
# ::edge	exceed-01	ARG0	well	0.0.0	0.0.0.0	
# ::edge	exceed-01	ARG1	design-01	0.0.0	0.0.0.1	
# ::edge	exceed-01	duration	temporal-quantity	0.0.0	0.0.0.2	
# ::edge	look-02	ARG0	virtue	0.0.0.1.0.0.1.0	0.0.0.1.0.0.1.0.0	
# ::edge	look-02	ARG1	point	0.0.0.1.0.0.1.0	0.0.0.1.0.0.1	
# ::edge	produce-01	ARG0	exceed-01	0.0	0.0.0	
# ::edge	produce-01	ARG1	clothes	0.0	0.0.1	
# ::edge	produce-01	location	market	0.0	0.0.2	
# ::edge	temporal-quantity	unit	decade	0.0.0.2	0.0.0.2.0	
# ::edge	virtue	mod	major	0.0.0.1.0.0.1.0.0	0.0.0.1.0.0.1.0.0.0	
(a / and 
      :op1 (p2 / produce-01 
            :ARG0 (e2 / exceed-01 
                  :ARG0 (w2 / well) 
                  :ARG1 (d / design-01 
                        :ARG1 (t / top 
                              :ARG1-of (e / emerge-02 
                                    :ARG0 (w / we) 
                                    :time (p / point 
                                          :ARG1-of (l / look-02 
                                                :ARG0 (v / virtue 
                                                      :mod (m / major))))))) 
                  :duration (t2 / temporal-quantity 
                        :unit (d2 / decade))) 
            :ARG1 (c / clothes) 
            :location (m2 / market)) 
      :op2 (m3 / middle) 
      :op3 (l2 / low))

# ::snt these include pursuing a claim for policy excess car hire charges and loss of the use of ones vehicle
# ::tok these include pursuing a claim for policy excess car hire charges and loss of the use of ones vehicle
# ::alignments 18-19|0.0.0.0.1.0 17-18|0.0.0.0.1.0.0 15-16|0.0.0.0.1 11-12|0.0.0.0 9-10|0.0.1 8-9|0.0.0.0.0.0 7-8|0.0.0.0.0 6-7|0.1 4-5|0.0.0 2-3|0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:12.634
# ::node	0	include-01	1-2
# ::node	0.0	pursue-01	2-3
# ::node	0.0.0	claim-01	4-5
# ::node	0.0.0.0	and	11-12
# ::node	0.0.0.0.0	exceed-01	7-8
# ::node	0.0.0.0.0.0	car	8-9
# ::node	0.0.0.0.1	use-01	15-16
# ::node	0.0.0.0.1.0	vehicle	18-19
# ::node	0.0.0.0.1.0.0	one	17-18
# ::node	0.0.1	hire-01	9-10
# ::node	0.1	policy	6-7
# ::root	0	include-01
# ::edge	and	op1	use-01	0.0.0.0	0.0.0.0.1	
# ::edge	car	mod	exceed-01	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	claim-01	ARG1	and	0.0.0	0.0.0.0	
# ::edge	exceed-01	ARG1	and	0.0.0.0.0	0.0.0.0	
# ::edge	hire-01	ARG1	pursue-01	0.0.1	0.0	
# ::edge	include-01	ARG1	pursue-01	0	0.0	
# ::edge	include-01	ARG2	policy	0	0.1	
# ::edge	pursue-01	ARG1	claim-01	0.0	0.0.0	
# ::edge	use-01	ARG1	vehicle	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	vehicle	mod	one	0.0.0.0.1.0	0.0.0.0.1.0.0	
(i / include-01 
      :ARG1 (p2 / pursue-01 
            :ARG1 (c2 / claim-01 
                  :ARG1 (a / and 
                        :ARG1-of (e / exceed-01 
                              :mod-of (c / car)) 
                        :op1 (u / use-01 
                              :ARG1 (v / vehicle 
                                    :mod (o / one))))) 
            :ARG1-of (h / hire-01)) 
      :ARG2 (p / policy))

# ::snt there were a number of sorry stories of investors who were caught out by the sudden slump in share prices and ran up debts in one case in excess of 1m
# ::tok there were a number of sorry stories of investors who were caught out by the sudden slump in share prices and ran up debts in one case in excess of 1m
# ::alignments 28-29|0.3 26-27|0.3.0 23-24|0.2 20-21|0 19-20|0.1 18-19|0.1.0 15-16|0.2.0 8-9|0.0.0+0.0 6-7|0.0.1 5-6|0.0.1.0 3-4|0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:12.741
# ::node	0	and	20-21
# ::node	0.0	person	8-9
# ::node	0.0.0	invest-01	8-9
# ::node	0.0.1	story	6-7
# ::node	0.0.1.0	sorry-41	5-6
# ::node	0.0.1.1	number	3-4
# ::node	0.1	price-01	19-20
# ::node	0.1.0	share-01	18-19
# ::node	0.2	debt	23-24
# ::node	0.2.0	sudden	15-16
# ::node	0.3	exceed-01	28-29
# ::node	0.3.0	case	26-27
# ::root	0	and
# ::edge	and	op1	person	0	0.0	
# ::edge	and	op2	price-01	0	0.1	
# ::edge	and	op3	debt	0	0.2	
# ::edge	and	op4	exceed-01	0	0.3	
# ::edge	debt	mod	sudden	0.2	0.2.0	
# ::edge	exceed-01	ARG1	case	0.3	0.3.0	
# ::edge	invest-01	ARG0	person	0.0.0	0.0	
# ::edge	price-01	ARG1	share-01	0.1	0.1.0	
# ::edge	sorry-41	ARG1	story	0.0.1.0	0.0.1	
# ::edge	story	quant	number	0.0.1	0.0.1.1	
# ::edge	story	topic	person	0.0.1	0.0	
(a / and 
      :op1 (p2 / person 
            :ARG0-of (i / invest-01) 
            :topic-of (s3 / story 
                  :ARG1-of (s4 / sorry-41) 
                  :quant (n / number))) 
      :op2 (p / price-01 
            :ARG1 (s / share-01)) 
      :op3 (d / debt 
            :mod (s2 / sudden)) 
      :op4 (e / exceed-01 
            :ARG1 (c / case)))

# ::snt stimulated by this vertiginous excess that fuses animal and vegetable dash
# ::tok stimulated by this vertiginous excess that fuses animal and vegetable dash
# ::alignments 8-9|0 7-8|0.0 4-5|0.0.0 2-3|0.0.0.1 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:12.761
# ::node	0	and	8-9
# ::node	0.0	animal	7-8
# ::node	0.0.0	exceed-01	4-5
# ::node	0.0.0.0	stimulate-01	0-1
# ::node	0.0.0.1	this	2-3
# ::root	0	and
# ::edge	and	op1	animal	0	0.0	
# ::edge	exceed-01	ARG0	animal	0.0.0	0.0	
# ::edge	exceed-01	mod	this	0.0.0	0.0.0.1	
# ::edge	stimulate-01	ARG1	exceed-01	0.0.0.0	0.0.0	
(a / and 
      :op1 (a2 / animal 
            :ARG0-of (e / exceed-01 
                  :ARG1-of (s / stimulate-01) 
                  :mod (t / this))))

# ::snt for myself and my wife this represents an increase visavis the old rating system in excess if 245
# ::tok for myself and my wife this represents an increase visavis the old rating system in excess if 245
# ::alignments 17-18|0.2.0.0 15-16|0.1.2 13-14|0.1 12-13|0.1.0 11-12|0.1.3 8-9|0.1.1 6-7|0 5-6|0.0 4-5|0.2.0.1+0.2.0 2-3|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:13.079
# ::node	0	represent-01	6-7
# ::node	0.0	this	5-6
# ::node	0.1	system	13-14
# ::node	0.1.0	rate-01	12-13
# ::node	0.1.1	increase-01	8-9
# ::node	0.1.2	exceed-01	15-16
# ::node	0.1.3	old	11-12
# ::node	0.2	and	2-3
# ::node	0.2.0	have-rel-role-91	4-5
# ::node	0.2.0.0	245	17-18
# ::node	0.2.0.1	wife	4-5
# ::root	0	represent-01
# ::edge	and	op1	have-rel-role-91	0.2	0.2.0	
# ::edge	have-rel-role-91	ARG1	245	0.2.0	0.2.0.0	
# ::edge	have-rel-role-91	ARG2	wife	0.2.0	0.2.0.1	
# ::edge	increase-01	ARG1	system	0.1.1	0.1	
# ::edge	rate-01	ARG0	system	0.1.0	0.1	
# ::edge	represent-01	ARG0	this	0	0.0	
# ::edge	represent-01	ARG1	system	0	0.1	
# ::edge	represent-01	ARG2	and	0	0.2	
# ::edge	system	mod	exceed-01	0.1	0.1.2	
# ::edge	system	mod	old	0.1	0.1.3	
(r2 / represent-01 
      :ARG0 (t / this) 
      :ARG1 (s / system 
            :ARG0-of (r / rate-01) 
            :ARG1-of (i / increase-01) 
            :mod (e / exceed-01) 
            :mod (o / old)) 
      :ARG2 (a / and 
            :op1 (h / have-rel-role-91 
                  :ARG1 245 
                  :ARG2 (w / wife))))

# ::snt   he added that sea containers assets sales programme was continuing and might achieve proceeds in excess of forecast
# ::tok he added that sea containers assets sales programme was continuing and might achieve proceeds in excess of forecast
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:13.080
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt we are resolving the situation without excesses ellip
# ::tok we are resolving the situation without excesses ellip
# ::alignments 4-5|0.1 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:13.091
# ::node	0	resolve-01	2-3
# ::node	0.0	we	0-1
# ::node	0.1	situation	4-5
# ::root	0	resolve-01
# ::edge	resolve-01	ARG0	we	0	0.0	
# ::edge	resolve-01	ARG1	situation	0	0.1	
(r / resolve-01 
      :ARG0 (w / we) 
      :ARG1 (s / situation))

# ::snt erotic playback can suffer from either an excess or a deficit dash, if actual incest takes place clearly a disastrous excess has occurred
# ::tok erotic playback can suffer from either an excess or a deficit dash , if actual incest takes place clearly a disastrous excess has occurred
# ::alignments 21-22|0.0 20-21|0 18-19|0.0.2 17-18|0.0.1 15-16|0.1.0.0.0.1 14-15|0.1.0.0.0.1.0 10-11|0.1.0.1 8-9|0.1.0 7-8|0.1 5-6|0.1.0.0 3-4|0.1.0.0.0 2-3|0.1.0.0.0.2 1-2|0.1.0.0.0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:13.347
# ::node	0	disastrous	20-21
# ::node	0.0	exceed-01	21-22
# ::node	0.0.0	erotic	0-1
# ::node	0.0.1	place	17-18
# ::node	0.0.2	clear	18-19
# ::node	0.1	exceed-01	7-8
# ::node	0.1.0	or	8-9
# ::node	0.1.0.0	either	5-6
# ::node	0.1.0.0.0	suffer-01	3-4
# ::node	0.1.0.0.0.0	playback	1-2
# ::node	0.1.0.0.0.1	incest	15-16
# ::node	0.1.0.0.0.1.0	actual	14-15
# ::node	0.1.0.0.0.2	possible	2-3
# ::node	0.1.0.1	deficit	10-11
# ::root	0	disastrous
# ::edge	disastrous	op1	exceed-01	0	0.1	
# ::edge	either	op1	suffer-01	0.1.0.0	0.1.0.0.0	
# ::edge	exceed-01	ARG1	erotic	0.0	0.0.0	
# ::edge	exceed-01	ARG2	place	0.0	0.0.1	
# ::edge	exceed-01	mod	clear	0.0	0.0.2	
# ::edge	exceed-01	mod	disastrous	0.0	0	
# ::edge	incest	mod	actual	0.1.0.0.0.1	0.1.0.0.0.1.0	
# ::edge	or	mod	either	0.1.0	0.1.0.0	
# ::edge	or	op1	exceed-01	0.1.0	0.1	
# ::edge	or	op2	deficit	0.1.0	0.1.0.1	
# ::edge	possible	domain	suffer-01	0.1.0.0.0.2	0.1.0.0.0	
# ::edge	suffer-01	ARG0	playback	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	suffer-01	ARG1	incest	0.1.0.0.0	0.1.0.0.0.1	
(d / disastrous 
      :mod-of (e / exceed-01 
            :ARG1 (e4 / erotic) 
            :ARG2 (p / place) 
            :mod (c / clear)) 
      :op1 (e2 / exceed-01 
            :op-of (o / or 
                  :mod (e3 / either 
                        :op1 (s / suffer-01 
                              :ARG0 (p3 / playback) 
                              :ARG1 (i / incest 
                                    :mod (a / actual)) 
                              :domain-of (p2 / possible))) 
                  :op1 (d2 / deficit))))

# ::snt   effectively it means that all new house buyers at springfield place will receive a subsidy each month from the developers which is the equivalent of pegging the mortgage interest rate at ten per cent for a whole year and on a typical mortgage of 60000 that could mean savings in excess of 200 on the family budget
# ::tok effectively it means that all new house buyers at springfield place will receive a subsidy each month from the developers which is the equivalent of pegging the mortgage interest rate at ten per cent for a whole year and on a typical mortgage of 60000 that could mean savings in excess of 200 on the family budget
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:13.348
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt although police remove the illegallyparked cars almost as fast as they are abandoned the local body responsible for administering parking is insisting that someone pay the hefty excess charges incurred by the prolonged presence of other cars in legal spaces
# ::tok although police remove the illegallyparked cars almost as fast as they are abandoned the local body responsible for administering parking is insisting that someone pay the hefty excess charges incurred by the prolonged presence of other cars in legal spaces
# ::alignments 38-39|0.0.0.1.0.0 36-37|0.1.1.1.0.0 35-36|0.1.1.1.0.0.1 33-34|0.1.1.1 32-33|0.1.1.1.0 29-30|0.1.1 27-28|0.1.1.1.0.0.0 24-25|0.1 23-24|0.1.0 21-22|0 16-17|0.0.0.1.0 15-16|0.0.0.1 14-15|0.0.0.1.1 12-13|0.0.0 10-11|0.0 8-9|0.1.1.0 6-7|0.1.1.1.0.0.0.0 5-6|0.0.0.0 2-3|0.0.0.0.0 1-2|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:14.190
# ::node	0	insist-01	21-22
# ::node	0.0	they	10-11
# ::node	0.0.0	abandon-01	12-13
# ::node	0.0.0.0	car	5-6
# ::node	0.0.0.0.0	remove-01	2-3
# ::node	0.0.0.0.0.0	police	1-2
# ::node	0.0.0.1	body	15-16
# ::node	0.0.0.1.0	responsible-41	16-17
# ::node	0.0.0.1.0.0	legal	38-39
# ::node	0.0.0.1.1	local	14-15
# ::node	0.1	pay-01	24-25
# ::node	0.1.0	someone	23-24
# ::node	0.1.1	incur-01	29-30
# ::node	0.1.1.0	fast	8-9
# ::node	0.1.1.1	presence	33-34
# ::node	0.1.1.1.0	prolong-01	32-33
# ::node	0.1.1.1.0.0	car	36-37
# ::node	0.1.1.1.0.0.0	exceed-01	27-28
# ::node	0.1.1.1.0.0.0.0	almost	6-7
# ::node	0.1.1.1.0.0.1	other	35-36
# ::root	0	insist-01
# ::edge	abandon-01	ARG0	car	0.0.0	0.0.0.0	
# ::edge	abandon-01	ARG1	body	0.0.0	0.0.0.1	
# ::edge	abandon-01	ARG2	they	0.0.0	0.0	
# ::edge	body	mod	local	0.0.0.1	0.0.0.1.1	
# ::edge	car	mod	other	0.1.1.1.0.0	0.1.1.1.0.0.1	
# ::edge	exceed-01	ARG0	car	0.1.1.1.0.0.0	0.1.1.1.0.0	
# ::edge	exceed-01	ARG1	almost	0.1.1.1.0.0.0	0.1.1.1.0.0.0.0	
# ::edge	incur-01	ARG0	fast	0.1.1	0.1.1.0	
# ::edge	incur-01	ARG1	presence	0.1.1	0.1.1.1	
# ::edge	insist-01	ARG0	they	0	0.0	
# ::edge	insist-01	ARG1	pay-01	0	0.1	
# ::edge	pay-01	ARG0	someone	0.1	0.1.0	
# ::edge	pay-01	ARG1	incur-01	0.1	0.1.1	
# ::edge	prolong-01	ARG0	presence	0.1.1.1.0	0.1.1.1	
# ::edge	prolong-01	ARG3	car	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	remove-01	ARG0	police	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	remove-01	ARG1	car	0.0.0.0.0	0.0.0.0	
# ::edge	responsible-41	ARG0	legal	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	responsible-41	ARG1	body	0.0.0.1.0	0.0.0.1	
(i2 / insist-01 
      :ARG0 (t / they 
            :ARG2-of (a / abandon-01 
                  :ARG0 (c2 / car 
                        :ARG1-of (r2 / remove-01 
                              :ARG0 (p4 / police))) 
                  :ARG1 (b / body 
                        :ARG1-of (r / responsible-41 
                              :ARG0 (l / legal)) 
                        :mod (l2 / local)))) 
      :ARG1 (p3 / pay-01 
            :ARG0 (s / someone) 
            :ARG1 (i / incur-01 
                  :ARG0 (f / fast) 
                  :ARG1 (p / presence 
                        :ARG0-of (p2 / prolong-01 
                              :ARG3 (c / car 
                                    :ARG0-of (e / exceed-01 
                                          :ARG1 (a2 / almost)) 
                                    :mod (o / other)))))))

# ::snt the court of appeals reasoning as it ruled out a legal challenge to the terrorist broadcasting ban ranks as the lowwater mark in the modern development of the courts protection of the citizen from the excesses of the state and officials
# ::tok the court of appeals reasoning as it ruled out a legal challenge to the terrorist broadcasting ban ranks as the lowwater mark in the modern development of the courts protection of the citizen from the excesses of the state and officials
# ::alignments 40-41|0.1.0.0.0.0+0.1.0.0.0 39-40|0.1.2 38-39|0.1.2.0 32-33|0.1.0.1 29-30|0.1.0 28-29|0.1.0.0 25-26|0.1 24-25|0.1.1 21-22|0 17-18|0.0.0.0 16-17|0.0.0 15-16|0.0 14-15|0.0.1 11-12|0.0.0.0.0 10-11|0.0.0.0.0.1 7-8|0.0.0.0.0.0 6-7|0.0.0.0.0.0.0 4-5|0.0.0.0.0.0.0.0 3-4|0.0.0.0.0.0.0.0.0 1-2|0.0.0.0.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:14.957
# ::node	0	mark-01	21-22
# ::node	0.0	broadcast-01	15-16
# ::node	0.0.0	ban-01	16-17
# ::node	0.0.0.0	rank	17-18
# ::node	0.0.0.0.0	challenge-01	11-12
# ::node	0.0.0.0.0.0	rule-03	7-8
# ::node	0.0.0.0.0.0.0	it	6-7
# ::node	0.0.0.0.0.0.0.0	reason-01	4-5
# ::node	0.0.0.0.0.0.0.0.0	appeal-01	3-4
# ::node	0.0.0.0.0.0.0.0.1	court	1-2
# ::node	0.0.0.0.0.1	legal	10-11
# ::node	0.0.1	terrorist	14-15
# ::node	0.1	develop-02	25-26
# ::node	0.1.0	protect-01	29-30
# ::node	0.1.0.0	court	28-29
# ::node	0.1.0.0.0	have-org-role-91	40-41
# ::node	0.1.0.0.0.0	official	40-41
# ::node	0.1.0.1	citizen	32-33
# ::node	0.1.1	modern	24-25
# ::node	0.1.2	and	39-40
# ::node	0.1.2.0	state	38-39
# ::root	0	mark-01
# ::edge	and	op1	develop-02	0.1.2	0.1	
# ::edge	and	op2	state	0.1.2	0.1.2.0	
# ::edge	ban-01	ARG1	broadcast-01	0.0.0	0.0	
# ::edge	broadcast-01	ARG0	mark-01	0.0	0	
# ::edge	broadcast-01	mod	terrorist	0.0	0.0.1	
# ::edge	challenge-01	ARG1	rank	0.0.0.0.0	0.0.0.0	
# ::edge	challenge-01	mod	legal	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	court	domain	reason-01	0.0.0.0.0.0.0.0.1	0.0.0.0.0.0.0.0	
# ::edge	develop-02	ARG1	protect-01	0.1	0.1.0	
# ::edge	develop-02	mod	modern	0.1	0.1.1	
# ::edge	have-org-role-91	ARG1	court	0.1.0.0.0	0.1.0.0	
# ::edge	have-org-role-91	ARG2	official	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	mark-01	ARG1	develop-02	0	0.1	
# ::edge	protect-01	ARG1	court	0.1.0	0.1.0.0	
# ::edge	protect-01	ARG2	citizen	0.1.0	0.1.0.1	
# ::edge	rank	mod	ban-01	0.0.0.0	0.0.0	
# ::edge	reason-01	ARG0	it	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	reason-01	ARG1	appeal-01	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0	
# ::edge	rule-03	ARG0	it	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	rule-03	ARG1	challenge-01	0.0.0.0.0.0	0.0.0.0.0	
(m2 / mark-01 
      :ARG0-of (b2 / broadcast-01 
            :ARG1-of (b / ban-01 
                  :mod-of (r / rank 
                        :ARG1-of (c3 / challenge-01 
                              :ARG1-of (r2 / rule-03 
                                    :ARG0 (i / it 
                                          :ARG0-of (r3 / reason-01 
                                                :ARG1 (a2 / appeal-01) 
                                                :domain-of (c4 / court)))) 
                              :mod (l / legal)))) 
            :mod (t / terrorist)) 
      :ARG1 (d / develop-02 
            :ARG1 (p / protect-01 
                  :ARG1 (c2 / court 
                        :ARG1-of (h / have-org-role-91 
                              :ARG2 (o / official))) 
                  :ARG2 (c / citizen)) 
            :mod (m / modern) 
            :op-of (a / and 
                  :op1 (s / state))))

# ::snt although neither james nor mark knew the details of michaels history their imagination had been set in motion and he had been unable to conceal from them his violent excesses of grief during the days following nicks death
# ::tok although neither james nor mark knew the details of michaels history their imagination had been set in motion and he had been unable to conceal from them his violent excesses of grief during the days following nicks death
# ::alignments 37-38|0.0.0.0 34-35|0.0.1.0+0.0.1 28-29|0.2.0.0 24-25|0.0 19-20|0.0.0 18-19|0 17-18|0.3 10-11|0.2.0.1 7-8|0.2.0 5-6|0.2 4-5|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:15.340
# ::node	0	and	18-19
# ::node	0.0	conceal-01	24-25
# ::node	0.0.0	he	19-20
# ::node	0.0.0.0	die-01	37-38
# ::node	0.0.1	temporal-quantity	34-35
# ::node	0.0.1.0	day	34-35
# ::node	0.1	mark-01	4-5
# ::node	0.2	know-01	5-6
# ::node	0.2.0	detail-01	7-8
# ::node	0.2.0.0	violent	28-29
# ::node	0.2.0.1	history	10-11
# ::node	0.3	motion	17-18
# ::root	0	and
# ::edge	and	op1	mark-01	0	0.1	
# ::edge	and	op2	know-01	0	0.2	
# ::edge	and	op3	motion	0	0.3	
# ::edge	conceal-01	ARG0	he	0.0	0.0.0	
# ::edge	conceal-01	ARG1	temporal-quantity	0.0	0.0.1	
# ::edge	conceal-01	instrument	and	0.0	0	
# ::edge	detail-01	ARG0	violent	0.2.0	0.2.0.0	
# ::edge	detail-01	ARG1	history	0.2.0	0.2.0.1	
# ::edge	die-01	ARG1	he	0.0.0.0	0.0.0	
# ::edge	know-01	ARG1	detail-01	0.2	0.2.0	
# ::edge	temporal-quantity	unit	day	0.0.1	0.0.1.0	
(a / and 
      :instrument-of (c / conceal-01 
            :ARG0 (h / he 
                  :ARG1-of (d / die-01)) 
            :ARG1 (t / temporal-quantity 
                  :unit (d2 / day))) 
      :op1 (m2 / mark-01) 
      :op2 (k / know-01 
            :ARG1 (d3 / detail-01 
                  :ARG0 (v / violent) 
                  :ARG1 (h2 / history))) 
      :op3 (m / motion))

# ::snt although people receiving income support can get help with the interest on a loan taken out for essential repairs and certain improvements at present where they have capital in excess of 500 the excess must be offset against the amount of the loan and interests is allowed only on the balance
# ::tok although people receiving income support can get help with the interest on a loan taken out for essential repairs and certain improvements at present where they have capital in excess of 500 the excess must be offset against the amount of the loan and interests is allowed only on the balance
# ::alignments 50-51|0.1.2.2 47-48|0.1.2.2.1 46-47|0.1.2 44-45|0.1.2.1 43-44|0.1 42-43|0.1.1 39-40|0.1.2.2.0 36-37|0.1.2.0.0 33-34|0.1.2.0.0.0 31-32|0.0.0.0 29-30|0.1.2.0.1 27-28|0.1.2.0.2 25-26|0.1.2.0 23-24|0.1.0.1.1.0 21-22|0.1.0 20-21|0.1.0.0 19-20|0.1.0.1 18-19|0.1.0.1.1 17-18|0.1.0.1.1.1 13-14|0.0.0.1 10-11|0.0.0 7-8|0.0 5-6|0 4-5|0.1.0.1.0.0 3-4|0.1.0.1.0.0.0 2-3|0.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:16.620
# ::node	0	possible	5-6
# ::node	0.0	help-01	7-8
# ::node	0.0.0	interest-01	10-11
# ::node	0.0.0.0	500	31-32
# ::node	0.0.0.1	loan-01	13-14
# ::node	0.1	and	43-44
# ::node	0.1.0	improve-01	21-22
# ::node	0.1.0.0	certain	20-21
# ::node	0.1.0.1	and	19-20
# ::node	0.1.0.1.0	receive-01	2-3
# ::node	0.1.0.1.0.0	support-01	4-5
# ::node	0.1.0.1.0.0.0	income	3-4
# ::node	0.1.0.1.1	repair-01	18-19
# ::node	0.1.0.1.1.0	present	23-24
# ::node	0.1.0.1.1.1	essential	17-18
# ::node	0.1.1	loan-01	42-43
# ::node	0.1.2	allow-01	46-47
# ::node	0.1.2.0	they	25-26
# ::node	0.1.2.0.0	offset-01	36-37
# ::node	0.1.2.0.0.0	exceed-01	33-34
# ::node	0.1.2.0.1	exceed-01	29-30
# ::node	0.1.2.0.2	capital	27-28
# ::node	0.1.2.1	interest	44-45
# ::node	0.1.2.2	balance-01	50-51
# ::node	0.1.2.2.0	amount	39-40
# ::node	0.1.2.2.1	only	47-48
# ::root	0	possible
# ::edge	allow-01	ARG0	they	0.1.2	0.1.2.0	
# ::edge	allow-01	ARG1	interest	0.1.2	0.1.2.1	
# ::edge	allow-01	manner	balance-01	0.1.2	0.1.2.2	
# ::edge	and	op1	possible	0.1	0	
# ::edge	and	op1	receive-01	0.1.0.1	0.1.0.1.0	
# ::edge	and	op2	improve-01	0.1	0.1.0	
# ::edge	and	op2	repair-01	0.1.0.1	0.1.0.1.1	
# ::edge	and	op3	improve-01	0.1.0.1	0.1.0	
# ::edge	and	op3	loan-01	0.1	0.1.1	
# ::edge	and	op4	allow-01	0.1	0.1.2	
# ::edge	balance-01	ARG1	amount	0.1.2.2	0.1.2.2.0	
# ::edge	balance-01	mod	only	0.1.2.2	0.1.2.2.1	
# ::edge	capital	poss	they	0.1.2.0.2	0.1.2.0	
# ::edge	exceed-01	ARG1	they	0.1.2.0.1	0.1.2.0	
# ::edge	help-01	ARG1	interest-01	0.0	0.0.0	
# ::edge	improve-01	ARG2	certain	0.1.0	0.1.0.0	
# ::edge	interest-01	ARG1	500	0.0.0	0.0.0.0	
# ::edge	interest-01	ARG2	loan-01	0.0.0	0.0.0.1	
# ::edge	offset-01	ARG0	they	0.1.2.0.0	0.1.2.0	
# ::edge	offset-01	ARG1	exceed-01	0.1.2.0.0	0.1.2.0.0.0	
# ::edge	possible	domain	help-01	0	0.0	
# ::edge	receive-01	ARG1	support-01	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	repair-01	ARG1	present	0.1.0.1.1	0.1.0.1.1.0	
# ::edge	repair-01	mod	essential	0.1.0.1.1	0.1.0.1.1.1	
# ::edge	support-01	ARG1	income	0.1.0.1.0.0	0.1.0.1.0.0.0	
(p2 / possible 
      :domain (h / help-01 
            :ARG1 (i3 / interest-01 
                  :ARG1 500 
                  :ARG2 (l2 / loan-01))) 
      :op-of (a2 / and 
            :op1 (i2 / improve-01 
                  :ARG2 (c2 / certain) 
                  :op-of (a4 / and 
                        :op1 (r2 / receive-01 
                              :ARG1 (s / support-01 
                                    :ARG1 (i4 / income))) 
                        :op2 (r / repair-01 
                              :ARG1 (p / present) 
                              :mod (e3 / essential)))) 
            :op2 (l / loan-01) 
            :op3 (a / allow-01 
                  :ARG0 (t / they 
                        :ARG0-of (o2 / offset-01 
                              :ARG1 (e / exceed-01)) 
                        :ARG1-of (e2 / exceed-01) 
                        :poss-of (c / capital)) 
                  :ARG1 (i / interest) 
                  :manner (b / balance-01 
                        :ARG1 (a3 / amount) 
                        :mod (o / only)))))

# ::snt their bodies seem unable to sense a high intake and continue to manufacture cholesterol in excess of requirements
# ::tok their bodies seem unable to sense a high intake and continue to manufacture cholesterol in excess of requirements
# ::alignments 17-18|0.0.0.1.1.0.0.0+0.0.0.1.1.0.0 15-16|0.0.0.1.1.0.0.1 12-13|0.0.0.1.1.0 10-11|0.0.0.1.1 9-10|0.0.0.1 8-9|0.0.0 7-8|0.0.0.0 5-6|0.0.0.1.0 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:16.887
# ::node	0	seem-01	2-3
# ::node	0.0	body	1-2
# ::node	0.0.0	take-01	8-9
# ::node	0.0.0.0	high	7-8
# ::node	0.0.0.1	and	9-10
# ::node	0.0.0.1.0	sense	5-6
# ::node	0.0.0.1.1	continue-01	10-11
# ::node	0.0.0.1.1.0	manufacture-01	12-13
# ::node	0.0.0.1.1.0.0	thing	17-18
# ::node	0.0.0.1.1.0.0.0	require-01	17-18
# ::node	0.0.0.1.1.0.0.1	exceed-01	15-16
# ::root	0	seem-01
# ::edge	and	op1	sense	0.0.0.1	0.0.0.1.0	
# ::edge	and	op2	take-01	0.0.0.1	0.0.0	
# ::edge	and	op3	continue-01	0.0.0.1	0.0.0.1.1	
# ::edge	continue-01	ARG1	manufacture-01	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	exceed-01	ARG1	thing	0.0.0.1.1.0.0.1	0.0.0.1.1.0.0	
# ::edge	manufacture-01	ARG1	thing	0.0.0.1.1.0	0.0.0.1.1.0.0	
# ::edge	require-01	ARG1	thing	0.0.0.1.1.0.0.0	0.0.0.1.1.0.0	
# ::edge	seem-01	ARG1	body	0	0.0	
# ::edge	take-01	ARG1	body	0.0.0	0.0	
# ::edge	take-01	mod	high	0.0.0	0.0.0.0	
(s2 / seem-01 
      :ARG1 (b / body 
            :ARG1-of (t2 / take-01 
                  :mod (h / high) 
                  :op-of (a / and 
                        :op1 (s / sense) 
                        :op2 (c / continue-01 
                              :ARG1 (m / manufacture-01 
                                    :ARG1 (t / thing 
                                          :ARG1-of (r / require-01) 
                                          :ARG1-of (e / exceed-01))))))))

# ::snt such a policebased agency could take over mi5s doublingup role without indulging in mi5s political excesses
# ::tok such a policebased agency could take over mi5s doublingup role without indulging in mi5s political excesses
# ::alignments 14-15|0.0.0.0 9-10|0.0.1 4-5|0 3-4|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:16.912
# ::node	0	possible	4-5
# ::node	0.0	agency	3-4
# ::node	0.0.0	such	0-1
# ::node	0.0.0.0	politics	14-15
# ::node	0.0.1	role	9-10
# ::root	0	possible
# ::edge	agency	mod	such	0.0	0.0.0	
# ::edge	possible	domain	agency	0	0.0	
# ::edge	role	poss	agency	0.0.1	0.0	
# ::edge	such	poss	politics	0.0.0	0.0.0.0	
(p2 / possible 
      :domain (a / agency 
            :mod (s / such 
                  :poss (p / politics)) 
            :poss-of (r / role)))

# ::snt it supported the worst excesses of the cultural revolution and tamely switched position when signals came from beijing indicating that these policies were coming to an end
# ::tok it supported the worst excesses of the cultural revolution and tamely switched position when signals came from beijing indicating that these policies were coming to an end
# ::alignments 21-22|0.0 18-19|0 14-15|0.1 12-13|0.1.0.0 11-12|0.1.0 9-10|0.1.0.1 8-9|0.1.0.1.0.1 7-8|0.1.0.1.0.1.0 3-4|0.2 1-2|0.1.0.1.0 0-1|0.1.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:17.114
# ::node	0	indicate-01	18-19
# ::node	0.0	policy	21-22
# ::node	0.1	signal	14-15
# ::node	0.1.0	switch-01	11-12
# ::node	0.1.0.0	position	12-13
# ::node	0.1.0.1	and	9-10
# ::node	0.1.0.1.0	support-01	1-2
# ::node	0.1.0.1.0.0	it	0-1
# ::node	0.1.0.1.0.1	revolution	8-9
# ::node	0.1.0.1.0.1.0	culture	7-8
# ::node	0.2	bad	3-4
# ::root	0	indicate-01
# ::edge	and	op1	support-01	0.1.0.1	0.1.0.1.0	
# ::edge	and	op2	switch-01	0.1.0.1	0.1.0	
# ::edge	bad	op1	indicate-01	0.2	0	
# ::edge	indicate-01	ARG0	policy	0	0.0	
# ::edge	indicate-01	ARG1	signal	0	0.1	
# ::edge	revolution	mod	culture	0.1.0.1.0.1	0.1.0.1.0.1.0	
# ::edge	support-01	ARG0	it	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	support-01	ARG1	revolution	0.1.0.1.0	0.1.0.1.0.1	
# ::edge	switch-01	ARG0	signal	0.1.0	0.1	
# ::edge	switch-01	ARG1	position	0.1.0	0.1.0.0	
(i / indicate-01 
      :ARG0 (p / policy) 
      :ARG1 (s / signal 
            :ARG0-of (s2 / switch-01 
                  :ARG1 (p2 / position) 
                  :op-of (a / and 
                        :op1 (s3 / support-01 
                              :ARG0 (i2 / it) 
                              :ARG1 (r / revolution 
                                    :mod (c / culture)))))) 
      :op-of (b / bad))

# ::snt his sporting friends excesses had reached epic proportions
# ::tok his sporting friends excesses had reached epic proportions
# ::alignments 7-8|0.1 5-6|0 2-3|0.0.0.0+0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:17.129
# ::node	0	reach-01	5-6
# ::node	0.0	sport	1-2
# ::node	0.0.0	have-rel-role-91	2-3
# ::node	0.0.0.0	friend	2-3
# ::node	0.1	proportion	7-8
# ::root	0	reach-01
# ::edge	have-rel-role-91	ARG1	sport	0.0.0	0.0	
# ::edge	have-rel-role-91	ARG2	friend	0.0.0	0.0.0.0	
# ::edge	reach-01	ARG0	sport	0	0.0	
# ::edge	reach-01	ARG1	proportion	0	0.1	
(r / reach-01 
      :ARG0 (s / sport 
            :ARG1-of (h / have-rel-role-91 
                  :ARG2 (f / friend))) 
      :ARG1 (p / proportion))

# ::snt if anything however the excesses of sycophancy have highlighed mr jiangs weakness rather than his strength
# ::tok if anything however the excesses of sycophancy have highlighed mr jiangs weakness rather than his strength
# ::alignments 15-16|0.0.0 11-12|0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:17.150
# ::node	0	anything	1-2
# ::node	0.0	weak-41	11-12
# ::node	0.0.0	strength	15-16
# ::root	0	anything
(a / anything 
      :ARG0-of (w / weak-41 
            :ARG1 (s / strength)))

# ::snt mr arafat performed well enough in geneva outlining israels excesses in its vain attempts to suppress the palestinian uprising or intifada against military occupation
# ::tok mr arafat performed well enough in geneva outlining israels excesses in its vain attempts to suppress the palestinian uprising or intifada against military occupation
# ::alignments 23-24|0 22-23|0.0 20-21|0.1 19-20|0.1.0 18-19|0.1.0.0.0 17-18|0.1.0.0.0.0.0.0+0.1.0.0.0.0.0+0.1.0.0.0.0 15-16|0.1.0.0 13-14|0.1.0.0.1 12-13|0.1.0.0.1.0 7-8|0.1.0.0.2 4-5|0.1.0.0.2.0.0.0 3-4|0.1.0.0.2.0.0 2-3|0.1.0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:17.328
# ::node	0	occupy-01	23-24
# ::node	0.0	military	22-23
# ::node	0.1	intifada	20-21
# ::node	0.1.0	or	19-20
# ::node	0.1.0.0	suppress-01	15-16
# ::node	0.1.0.0.0	uprise-00	18-19
# ::node	0.1.0.0.0.0	country	17-18
# ::node	0.1.0.0.0.0.0	name	17-18
# ::node	0.1.0.0.0.0.0.0	"Palestine"	17-18
# ::node	0.1.0.0.1	attempt-01	13-14
# ::node	0.1.0.0.1.0	vain	12-13
# ::node	0.1.0.0.2	outline-01	7-8
# ::node	0.1.0.0.2.0	perform-01	2-3
# ::node	0.1.0.0.2.0.0	well	3-4
# ::node	0.1.0.0.2.0.0.0	enough	4-5
# ::root	0	occupy-01
# ::edge	attempt-01	ARG1	suppress-01	0.1.0.0.1	0.1.0.0	
# ::edge	attempt-01	time	vain	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	country	name	name	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	name	op1	"Palestine"	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	occupy-01	ARG0	military	0	0.0	
# ::edge	occupy-01	ARG1	intifada	0	0.1	
# ::edge	or	op1	suppress-01	0.1.0	0.1.0.0	
# ::edge	or	op2	intifada	0.1.0	0.1	
# ::edge	outline-01	purpose	suppress-01	0.1.0.0.2	0.1.0.0	
# ::edge	perform-01	ARG1	outline-01	0.1.0.0.2.0	0.1.0.0.2	
# ::edge	perform-01	manner	well	0.1.0.0.2.0	0.1.0.0.2.0.0	
# ::edge	suppress-01	ARG1	uprise-00	0.1.0.0	0.1.0.0.0	
# ::edge	uprise-00	ARG1	country	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	well	mod	enough	0.1.0.0.2.0.0	0.1.0.0.2.0.0.0	
(o / occupy-01 
      :ARG0 (m / military) 
      :ARG1 (i / intifada 
            :op-of (o2 / or 
                  :op1 (s / suppress-01 
                        :ARG1 (u / uprise-00 
                              :ARG1 (c / country 
                                    :name (n / name 
                                          :op1 "Palestine"))) 
                        :ARG1-of (a / attempt-01 
                              :time (v / vain)) 
                        :purpose-of (o3 / outline-01 
                              :ARG1-of (p / perform-01 
                                    :manner (w / well 
                                          :mod (e / enough))))))))

# ::snt the only  green thing about many of our english rivers nowadays is profuse algal growth  in the water which results from an excess of fertilizer leaching off arable fields  straight into the stream
# ::tok the only green thing about many of our english rivers nowadays is profuse algal growth in the water which results from an excess of fertilizer leaching off arable fields straight into the stream
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:17.329
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt ever since the just criticism meted out to his early excesses then the gigantic success of the leningrad symphony in the 1940s he has symbolized the artist caught in the net of public events
# ::tok ever since the just criticism meted out to his early excesses then the gigantic success of the leningrad symphony in the 1940s he has symbolized the artist caught in the net of public events
# ::alignments 33-34|0.0 32-33|0.0.1 30-31|0 22-23|0.0.0.0 21-22|0.0.0.1.3 14-15|0.0.0 13-14|0.0.0.2 11-12|0.0.0.3 9-10|0.0.0.1.1 4-5|0.0.0.1 3-4|0.0.0.1.0 1-2|0.0.0.1.2 0-1|0.0.0.1.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:17.521
# ::node	0	net	30-31
# ::node	0.0	event	33-34
# ::node	0.0.0	succeed-01	14-15
# ::node	0.0.0.0	he	22-23
# ::node	0.0.0.1	criticize-01	4-5
# ::node	0.0.0.1.0	just	3-4
# ::node	0.0.0.1.1	early	9-10
# ::node	0.0.0.1.2	since	1-2
# ::node	0.0.0.1.2.0	ever	0-1
# ::node	0.0.0.1.3	1940	21-22
# ::node	0.0.0.2	gigantic	13-14
# ::node	0.0.0.3	then	11-12
# ::node	0.0.1	public	32-33
# ::root	0	net
# ::edge	1940	op1	criticize-01	0.0.0.1.3	0.0.0.1	
# ::edge	criticize-01	ARG0	just	0.0.0.1	0.0.0.1.0	
# ::edge	criticize-01	ARG1	succeed-01	0.0.0.1	0.0.0	
# ::edge	criticize-01	ARG2	early	0.0.0.1	0.0.0.1.1	
# ::edge	event	mod	public	0.0	0.0.1	
# ::edge	net	location	event	0	0.0	
# ::edge	since	mod	ever	0.0.0.1.2	0.0.0.1.2.0	
# ::edge	since	op1	criticize-01	0.0.0.1.2	0.0.0.1	
# ::edge	succeed-01	ARG0	he	0.0.0	0.0.0.0	
# ::edge	succeed-01	ARG1	event	0.0.0	0.0	
# ::edge	succeed-01	mod	gigantic	0.0.0	0.0.0.2	
# ::edge	succeed-01	time	then	0.0.0	0.0.0.3	
(n / net 
      :location (e / event 
            :ARG1-of (s / succeed-01 
                  :ARG0 (h / he) 
                  :ARG1-of (c / criticize-01 
                        :ARG0 (j / just) 
                        :ARG2 (e2 / early) 
                        :op-of (s2 / since 
                              :mod (e3 / ever)) 
                        :op-of 1940) 
                  :mod (g / gigantic) 
                  :time (t / then)) 
            :mod (p / public)))

# ::snt marshal of the raf craig said 10 days ago that the soviets still maintain an enormous chemical warfare capability far in excess of that which they have claimed
# ::tok marshal of the raf craig said 10 days ago that the soviets still maintain an enormous chemical warfare capability far in excess of that which they have claimed
# ::alignments 27-28|0.0.1.1.0 25-26|0.0.1.1.0.0 21-22|0.0.1.1 19-20|0.0.1.1.1 18-19|0.0.1 17-18|0.0.1.0 16-17|0.0.1.0.0 15-16|0.0.1.2 13-14|0.0 12-13|0.0.2 7-8|0.0.0.1+0.0.0 6-7|0.0.0.0 5-6|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:17.655
# ::node	0	say-01	5-6
# ::node	0.0	maintain-01	13-14
# ::node	0.0.0	temporal-quantity	7-8
# ::node	0.0.0.0	10	6-7
# ::node	0.0.0.1	day	7-8
# ::node	0.0.1	capable-41	18-19
# ::node	0.0.1.0	warfare	17-18
# ::node	0.0.1.0.0	chemical	16-17
# ::node	0.0.1.1	exceed-01	21-22
# ::node	0.0.1.1.0	claim-01	27-28
# ::node	0.0.1.1.0.0	they	25-26
# ::node	0.0.1.1.1	far	19-20
# ::node	0.0.1.2	enormous	15-16
# ::node	0.0.2	still	12-13
# ::root	0	say-01
# ::edge	capable-41	ARG0	warfare	0.0.1	0.0.1.0	
# ::edge	capable-41	ARG3	exceed-01	0.0.1	0.0.1.1	
# ::edge	capable-41	mod	enormous	0.0.1	0.0.1.2	
# ::edge	claim-01	ARG0	they	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	claim-01	ARG1	exceed-01	0.0.1.1.0	0.0.1.1	
# ::edge	exceed-01	manner	far	0.0.1.1	0.0.1.1.1	
# ::edge	maintain-01	ARG0	temporal-quantity	0.0	0.0.0	
# ::edge	maintain-01	ARG1	capable-41	0.0	0.0.1	
# ::edge	maintain-01	mod	still	0.0	0.0.2	
# ::edge	say-01	ARG1	maintain-01	0	0.0	
# ::edge	temporal-quantity	quant	10	0.0.0	0.0.0.0	
# ::edge	temporal-quantity	unit	day	0.0.0	0.0.0.1	
# ::edge	warfare	mod	chemical	0.0.1.0	0.0.1.0.0	
(s2 / say-01 
      :ARG1 (m / maintain-01 
            :ARG0 (t2 / temporal-quantity 
                  :quant 10 
                  :unit (d / day)) 
            :ARG1 (c2 / capable-41 
                  :ARG0 (w / warfare 
                        :mod (c3 / chemical)) 
                  :ARG3 (e / exceed-01 
                        :ARG1-of (c / claim-01 
                              :ARG0 (t / they)) 
                        :manner (f / far)) 
                  :mod (e2 / enormous)) 
            :mod (s / still)))

# ::snt this one had its rough edges but a strong centre jonathan baker brought to it the necessary conviction to carry off its excesses and sang with beauty as well as fluency
# ::tok this one had its rough edges but a strong centre jonathan baker brought to it the necessary conviction to carry off its excesses and sang with beauty as well as fluency
# ::alignments 28-29|0.2 26-27|0.0.1.0.1 24-25|0.0.1.0 23-24|0.0.1 20-21|0.0.1.0.0.1 17-18|0.0.1.0.0 14-15|0.0.1.0.0.0 8-9|0.1 6-7|0 5-6|0.0 4-5|0.0.0 0-1|0.0.1.0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:17.831
# ::node	0	contrast-01	6-7
# ::node	0.0	edge	5-6
# ::node	0.0.0	rough	4-5
# ::node	0.0.1	and	23-24
# ::node	0.0.1.0	sing-01	24-25
# ::node	0.0.1.0.0	convict-01	17-18
# ::node	0.0.1.0.0.0	it	14-15
# ::node	0.0.1.0.0.1	off	20-21
# ::node	0.0.1.0.0.2	this	0-1
# ::node	0.0.1.0.1	beauty	26-27
# ::node	0.1	strong	8-9
# ::node	0.2	well	28-29
# ::root	0	contrast-01
# ::edge	and	op1	edge	0.0.1	0.0	
# ::edge	and	op2	sing-01	0.0.1	0.0.1.0	
# ::edge	contrast-01	ARG1	edge	0	0.0	
# ::edge	contrast-01	ARG2	strong	0	0.1	
# ::edge	contrast-01	mod	well	0	0.2	
# ::edge	convict-01	ARG0	it	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	convict-01	ARG1	off	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	edge	mod	rough	0.0	0.0.0	
# ::edge	sing-01	ARG0	convict-01	0.0.1.0	0.0.1.0.0	
# ::edge	sing-01	ARG1	beauty	0.0.1.0	0.0.1.0.1	
# ::edge	this	op1	convict-01	0.0.1.0.0.2	0.0.1.0.0	
(c2 / contrast-01 
      :ARG1 (e / edge 
            :mod (r / rough) 
            :op-of (a / and 
                  :op1 (s / sing-01 
                        :ARG0 (c / convict-01 
                              :ARG0 (i / it) 
                              :ARG1 (o / off) 
                              :op-of (t / this)) 
                        :ARG1 (b / beauty)))) 
      :ARG2 (s2 / strong) 
      :mod (w / well))

# ::snt there will be six tournaments in the mens game alone in beckers native land next year that will carry a purse in excess of dollars 1m
# ::tok there will be six tournaments in the mens game alone in beckers native land next year that will carry a purse in excess of dollars 1m
# ::alignments 24-25|0.0.0.1.0.1+0.0.0.1.0 22-23|0.0.0.1 15-16|0.0.1 14-15|0.0.1.0 13-14|0.0 12-13|0 9-10|0.0.0 8-9|0.0.0.0 3-4|0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:17.940
# ::node	0	native	12-13
# ::node	0.0	land	13-14
# ::node	0.0.0	alone	9-10
# ::node	0.0.0.0	game	8-9
# ::node	0.0.0.1	exceed-01	22-23
# ::node	0.0.0.1.0	monetary-quantity	24-25
# ::node	0.0.0.1.0.0	6	3-4
# ::node	0.0.0.1.0.1	dollar	24-25
# ::node	0.0.1	year	15-16
# ::node	0.0.1.0	next	14-15
# ::root	0	native
(n2 / native 
      :mod-of (l / land 
            :compared-to-of (a / alone 
                  :location (g / game) 
                  :op1 (e / exceed-01 
                        :ARG1 (m / monetary-quantity 
                              :poss 6 
                              :unit (d / dollar)))) 
            :mod-of (y / year 
                  :mod (n / next))))

# ::snt when we are talking about directors of businesses vocal soundum particularly the larger companies good people are hard to find and some of them are superstars and vocal soundum i know weve heard a lot about vocal soundum exceedingly high levels of pay and very high pay increases vocal soundum but when you talk about the superstars and megastars what about the entertainment business what about sport what about you know golfing celebrities earning in excess of a million or racing drivers
# ::tok when we are talking about directors of businesses vocal soundum particularly the larger companies good people are hard to find and some of them are superstars and vocal soundum i know weve heard a lot about vocal soundum exceedingly high levels of pay and very high pay increases vocal soundum but when you talk about the superstars and megastars what about the entertainment business what about sport what about you know golfing celebrities earning in excess of a million or racing drivers
# ::alignments 81-82|0.2.2.0.0.0+0.2.2.0.0 80-81|0.2.2.0.0.2 79-80|0.2.2.0 75-76|0.1.0.0.0.0.0 73-74|0.1.0.0.0.0 72-73|0.1.0.0.0 71-72|0.1.0.1 70-71|0.1.0.0 69-70|0.1.0 66-67|0.1.0.2 63-64|0.2.2.0.0.1.0 62-63|0.2.2.0.0.1 57-58|0.2.2 56-57|0.2.1 53-54|0.2 52-53|0.2.0 50-51|0 48-49|0.1.0.1.0 47-48|0.1.2.1 46-47|0.1 45-46|0.1.1 44-45|0.1.1.0 43-44|0.1.2 42-43|0.1.2.0 40-41|0.1.2.0.2 39-40|0.1.2.0.2.0 38-39|0.1.2.0.2.0.0 36-37|0.1.2.0.2.0.0.0 34-35|0.0.0.0.0 32-33|0.0.0.0 30-31|0.0 29-30|0.0.0 27-28|0.1.2.1.0.2 26-27|0.1.2.1.0 25-26|0.1.2.1.0.1 21-22|0.1.2.0.0 20-21|0.1.2.0.1 17-18|0.1.2.0.1.0 14-15|0.0.1 13-14|0.1.2.0.1.0.0 12-13|0.1.2.0.1.0.0.1 10-11|0.1.2.0.1.0.0.0 8-9|0.0.2 7-8|0.0.0.1 5-6|0.1.2.1.0.0.1 3-4|0.1.2.1.0.0 1-2|0.1.2.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:22.809
# ::node	0	contrast-01	50-51
# ::node	0.0	know-01	30-31
# ::node	0.0.0	i	29-30
# ::node	0.0.0.0	hear-01	32-33
# ::node	0.0.0.0.0	lot	34-35
# ::node	0.0.0.1	business	7-8
# ::node	0.0.1	good	14-15
# ::node	0.0.2	vocal	8-9
# ::node	0.1	pay-01	46-47
# ::node	0.1.0	you	69-70
# ::node	0.1.0.0	know-01	70-71
# ::node	0.1.0.0.0	celebrity	72-73
# ::node	0.1.0.0.0.0	earn-01	73-74
# ::node	0.1.0.0.0.0.0	exceed-01	75-76
# ::node	0.1.0.1	golf-01	71-72
# ::node	0.1.0.1.0	vocal	48-49
# ::node	0.1.0.2	sport	66-67
# ::node	0.1.1	high	45-46
# ::node	0.1.1.0	very	44-45
# ::node	0.1.2	and	43-44
# ::node	0.1.2.0	pay-01	42-43
# ::node	0.1.2.0.0	some	21-22
# ::node	0.1.2.0.1	and	20-21
# ::node	0.1.2.0.1.0	hard	17-18
# ::node	0.1.2.0.1.0.0	company	13-14
# ::node	0.1.2.0.1.0.0.0	particular	10-11
# ::node	0.1.2.0.1.0.0.1	large	12-13
# ::node	0.1.2.0.2	level	40-41
# ::node	0.1.2.0.2.0	high	39-40
# ::node	0.1.2.0.2.0.0	exceeding	38-39
# ::node	0.1.2.0.2.0.0.0	vocal	36-37
# ::node	0.1.2.1	increase-01	47-48
# ::node	0.1.2.1.0	and	26-27
# ::node	0.1.2.1.0.0	talk-01	3-4
# ::node	0.1.2.1.0.0.0	we	1-2
# ::node	0.1.2.1.0.0.1	director	5-6
# ::node	0.1.2.1.0.1	superstar	25-26
# ::node	0.1.2.1.0.2	vocal	27-28
# ::node	0.2	talk-01	53-54
# ::node	0.2.0	you	52-53
# ::node	0.2.1	superstar	56-57
# ::node	0.2.2	and	57-58
# ::node	0.2.2.0	or	79-80
# ::node	0.2.2.0.0	person	81-82
# ::node	0.2.2.0.0.0	drive-01	81-82
# ::node	0.2.2.0.0.1	entertain-01	62-63
# ::node	0.2.2.0.0.1.0	business	63-64
# ::node	0.2.2.0.0.2	race-01	80-81
# ::root	0	contrast-01
# ::edge	and	op1	hard	0.1.2.0.1	0.1.2.0.1.0	
# ::edge	and	op1	pay-01	0.1.2	0.1.2.0	
# ::edge	and	op1	superstar	0.1.2.1.0	0.1.2.1.0.1	
# ::edge	and	op1	talk-01	0.2.2	0.2	
# ::edge	and	op2	or	0.2.2	0.2.2.0	
# ::edge	and	op2	pay-01	0.1.2	0.1	
# ::edge	and	op2	vocal	0.1.2.1.0	0.1.2.1.0.2	
# ::edge	and	op3	increase-01	0.1.2	0.1.2.1	
# ::edge	and	op3	increase-01	0.1.2.1.0	0.1.2.1	
# ::edge	business	poss	i	0.0.0.1	0.0.0	
# ::edge	business	topic	entertain-01	0.2.2.0.0.1.0	0.2.2.0.0.1	
# ::edge	company	mod	hard	0.1.2.0.1.0.0	0.1.2.0.1.0	
# ::edge	company	mod	large	0.1.2.0.1.0.0	0.1.2.0.1.0.0.1	
# ::edge	company	mod	particular	0.1.2.0.1.0.0	0.1.2.0.1.0.0.0	
# ::edge	contrast-01	ARG1	know-01	0	0.0	
# ::edge	contrast-01	ARG2	talk-01	0	0.2	
# ::edge	drive-01	ARG0	person	0.2.2.0.0.0	0.2.2.0.0	
# ::edge	earn-01	ARG1	celebrity	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	earn-01	ARG3	exceed-01	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	entertain-01	ARG1	person	0.2.2.0.0.1	0.2.2.0.0	
# ::edge	exceeding	mod	vocal	0.1.2.0.2.0.0	0.1.2.0.2.0.0.0	
# ::edge	golf-01	ARG0	vocal	0.1.0.1	0.1.0.1.0	
# ::edge	golf-01	ARG1	you	0.1.0.1	0.1.0	
# ::edge	hear-01	ARG0	i	0.0.0.0	0.0.0	
# ::edge	hear-01	ARG1	lot	0.0.0.0	0.0.0.0.0	
# ::edge	high	degree	exceeding	0.1.2.0.2.0	0.1.2.0.2.0.0	
# ::edge	high	degree	very	0.1.1	0.1.1.0	
# ::edge	know-01	ARG0	i	0.0	0.0.0	
# ::edge	know-01	ARG0	you	0.1.0.0	0.1.0	
# ::edge	know-01	ARG1	celebrity	0.1.0.0	0.1.0.0.0	
# ::edge	know-01	manner	good	0.0	0.0.1	
# ::edge	level	mod	high	0.1.2.0.2	0.1.2.0.2.0	
# ::edge	or	op1	person	0.2.2.0	0.2.2.0.0	
# ::edge	pay-01	ARG0	you	0.1	0.1.0	
# ::edge	pay-01	ARG1	contrast-01	0.1	0	
# ::edge	pay-01	ARG1	some	0.1.2.0	0.1.2.0.0	
# ::edge	pay-01	ARG3	and	0.1.2.0	0.1.2.0.1	
# ::edge	pay-01	mod	high	0.1	0.1.1	
# ::edge	pay-01	mod	level	0.1.2.0	0.1.2.0.2	
# ::edge	race-01	ARG1	person	0.2.2.0.0.2	0.2.2.0.0	
# ::edge	sport	poss	you	0.1.0.2	0.1.0	
# ::edge	talk-01	ARG0	we	0.1.2.1.0.0	0.1.2.1.0.0.0	
# ::edge	talk-01	ARG0	you	0.2	0.2.0	
# ::edge	talk-01	ARG1	director	0.1.2.1.0.0	0.1.2.1.0.0.1	
# ::edge	talk-01	ARG1	superstar	0.2	0.2.1	
# ::edge	talk-01	ARG2	and	0.1.2.1.0.0	0.1.2.1.0	
# ::edge	vocal	op1	know-01	0.0.2	0.0	
(c2 / contrast-01 
      :ARG1 (k2 / know-01 
            :ARG0 (i2 / i 
                  :ARG0-of (h3 / hear-01 
                        :ARG1 (l2 / lot)) 
                  :poss-of (b2 / business)) 
            :manner (g2 / good) 
            :op-of (v5 / vocal)) 
      :ARG1-of (p2 / pay-01 
            :ARG0 (y / you 
                  :ARG0-of (k / know-01 
                        :ARG1 (c / celebrity 
                              :ARG1-of (e2 / earn-01 
                                    :ARG3 (e / exceed-01)))) 
                  :ARG1-of (g / golf-01 
                        :ARG0 (v / vocal)) 
                  :poss-of (s / sport)) 
            :mod (h / high 
                  :degree (v2 / very)) 
            :op-of (a2 / and 
                  :op1 (p3 / pay-01 
                        :ARG1 (s4 / some) 
                        :ARG3 (a4 / and 
                              :op1 (h4 / hard 
                                    :mod-of (c3 / company 
                                          :mod (p4 / particular) 
                                          :mod (l3 / large)))) 
                        :mod (l / level 
                              :mod (h2 / high 
                                    :degree (e4 / exceeding 
                                          :mod (v3 / vocal))))) 
                  :op2 (i / increase-01 
                        :op-of (a3 / and 
                              :ARG2-of (t2 / talk-01 
                                    :ARG0 (w / we) 
                                    :ARG1 (d2 / director)) 
                              :op1 (s3 / superstar) 
                              :op2 (v4 / vocal))))) 
      :ARG2 (t / talk-01 
            :ARG0 (y2 / you) 
            :ARG1 (s2 / superstar) 
            :op-of (a / and 
                  :op1 (o / or 
                        :op1 (p / person 
                              :ARG0-of (d / drive-01) 
                              :ARG1-of (e3 / entertain-01 
                                    :topic-of (b / business)) 
                              :ARG1-of (r / race-01))))))

# ::snt   earnings in excess of 60000 are disregarded and this limit applies to the 198990 tax year
# ::tok earnings in excess of 60000 are disregarded and this limit applies to the 198990 tax year
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:22.811
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt for the more commercially minded sfv offers a wide range of properties for investment including manor houses chateaux or luxury holiday homes which are likely to appreciate in value and which generate incomes in excess of 10 per cent per annum
# ::tok for the more commercially minded sfv offers a wide range of properties for investment including manor houses chateaux or luxury holiday homes which are likely to appreciate in value and which generate incomes in excess of 10 per cent per annum
# ::alignments 38-39|0.1.0.0.1.2.0+0.1.0.0.1.2 36-37|0.1.0.0.1.1 34-35|0.2 32-33|0.0 31-32|0 29-30|0.1 28-29|0.1.0.0.1 26-27|0.1.0.0 24-25|0.1.0 21-22|0.1.0.0.0 20-21|0.1.0.0.0.1.1 19-20|0.1.0.0.0.1.0 18-19|0.1.0.0.0.1 16-17|0.1.0.0.0.0.0.0.0 13-14|0.1.0.0.0.0.0.0 11-12|0.1.0.0.0.0.2 9-10|0.1.0.0.0.0 8-9|0.1.0.0.0.0.1 6-7|0.1.0.0.0.0.0 4-5|0.1.0.0.1.0 3-4|0.1.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:23.459
# ::node	0	generate-01	31-32
# ::node	0.0	income	32-33
# ::node	0.1	and	29-30
# ::node	0.1.0	likely	24-25
# ::node	0.1.0.0	appreciate-02	26-27
# ::node	0.1.0.0.0	home	21-22
# ::node	0.1.0.0.0.0	range-01	9-10
# ::node	0.1.0.0.0.0.0	offer-01	6-7
# ::node	0.1.0.0.0.0.0.0	invest-01	13-14
# ::node	0.1.0.0.0.0.0.0.0	house	16-17
# ::node	0.1.0.0.0.0.1	wide	8-9
# ::node	0.1.0.0.0.0.2	property	11-12
# ::node	0.1.0.0.0.1	or	18-19
# ::node	0.1.0.0.0.1.0	luxury	19-20
# ::node	0.1.0.0.0.1.1	holiday	20-21
# ::node	0.1.0.0.1	value-01	28-29
# ::node	0.1.0.0.1.0	mind	4-5
# ::node	0.1.0.0.1.0.0	commercial	3-4
# ::node	0.1.0.0.1.1	10	36-37
# ::node	0.1.0.0.1.2	monetary-quantity	38-39
# ::node	0.1.0.0.1.2.0	cent	38-39
# ::node	0.2	exceed-01	34-35
# ::root	0	generate-01
# ::edge	and	op1	likely	0.1	0.1.0	
# ::edge	and	op2	generate-01	0.1	0	
# ::edge	appreciate-02	ARG0	home	0.1.0.0	0.1.0.0.0	
# ::edge	appreciate-02	ARG1	value-01	0.1.0.0	0.1.0.0.1	
# ::edge	generate-01	ARG1	income	0	0.0	
# ::edge	generate-01	purpose	exceed-01	0	0.2	
# ::edge	invest-01	ARG1	house	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0.0.0	
# ::edge	invest-01	ARG2	offer-01	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	likely	domain	appreciate-02	0.1.0	0.1.0.0	
# ::edge	mind	manner	commercial	0.1.0.0.1.0	0.1.0.0.1.0.0	
# ::edge	monetary-quantity	unit	cent	0.1.0.0.1.2	0.1.0.0.1.2.0	
# ::edge	offer-01	ARG1	range-01	0.1.0.0.0.0.0	0.1.0.0.0.0	
# ::edge	or	op1	luxury	0.1.0.0.0.1	0.1.0.0.0.1.0	
# ::edge	or	op2	holiday	0.1.0.0.0.1	0.1.0.0.0.1.1	
# ::edge	or	op3	home	0.1.0.0.0.1	0.1.0.0.0	
# ::edge	range-01	ARG1	home	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	range-01	ARG2	wide	0.1.0.0.0.0	0.1.0.0.0.0.1	
# ::edge	range-01	mod	property	0.1.0.0.0.0	0.1.0.0.0.0.2	
# ::edge	value-01	ARG0	mind	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	value-01	ARG1	10	0.1.0.0.1	0.1.0.0.1.1	
# ::edge	value-01	ARG2	monetary-quantity	0.1.0.0.1	0.1.0.0.1.2	
(g / generate-01 
      :ARG1 (i / income) 
      :op-of (a / and 
            :op1 (l / likely 
                  :domain (a2 / appreciate-02 
                        :ARG0 (h / home 
                              :ARG1-of (r / range-01 
                                    :ARG1-of (o2 / offer-01 
                                          :ARG2-of (i2 / invest-01 
                                                :ARG1 (h3 / house))) 
                                    :ARG2 (w / wide) 
                                    :mod (p / property)) 
                              :op-of (o / or 
                                    :op1 (l2 / luxury) 
                                    :op2 (h2 / holiday))) 
                        :ARG1 (v / value-01 
                              :ARG0 (m2 / mind 
                                    :manner (c2 / commercial)) 
                              :ARG1 10 
                              :ARG2 (m / monetary-quantity 
                                    :unit (c / cent)))))) 
      :purpose (e / exceed-01))

# ::snt you have benefited from drugs trafficking in a sum in excess of 2 million
# ::tok you have benefited from drugs trafficking in a sum in excess of 2 million
# ::alignments 12-13|0.2 10-11|0.1.1.0 8-9|0.1.1 5-6|0.1 4-5|0.1.0 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:23.510
# ::node	0	benefit-01	2-3
# ::node	0.0	you	0-1
# ::node	0.1	traffic-00	5-6
# ::node	0.1.0	drug	4-5
# ::node	0.1.1	sum	8-9
# ::node	0.1.1.0	exceed-01	10-11
# ::node	0.2	2	12-13
# ::root	0	benefit-01
# ::edge	2	op1	benefit-01	0.2	0	
# ::edge	benefit-01	ARG0	you	0	0.0	
# ::edge	benefit-01	ARG2	traffic-00	0	0.1	
# ::edge	exceed-01	ARG0	sum	0.1.1.0	0.1.1	
# ::edge	sum	part	traffic-00	0.1.1	0.1	
# ::edge	traffic-00	ARG1	drug	0.1	0.1.0	
(b / benefit-01 
      :ARG0 (y / you) 
      :ARG2 (t / traffic-00 
            :ARG1 (d / drug) 
            :part-of (s / sum 
                  :ARG0-of (e / exceed-01))) 
      :op-of 2)

# ::snt and an excess of peace and prosperity is what causes a society to fail
# ::tok and an excess of peace and prosperity is what causes a society to fail
# ::alignments 13-14|0.1 11-12|0.1.0 9-10|0 6-7|0.0.0 5-6|0.0.0.0 4-5|0.0.0.0.0.0 2-3|0.0.0.0.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:23.607
# ::node	0	cause-01	9-10
# ::node	0.0	and	0-1
# ::node	0.0.0	prosper-01	6-7
# ::node	0.0.0.0	and	5-6
# ::node	0.0.0.0.0	exceed-01	2-3
# ::node	0.0.0.0.0.0	peace	4-5
# ::node	0.1	fail-01	13-14
# ::node	0.1.0	society	11-12
# ::root	0	cause-01
# ::edge	and	op1	prosper-01	0.0	0.0.0	
# ::edge	and	op1	prosper-01	0.0.0.0	0.0.0	
# ::edge	cause-01	ARG0	and	0	0.0	
# ::edge	cause-01	ARG1	fail-01	0	0.1	
# ::edge	exceed-01	ARG0	and	0.0.0.0.0	0.0.0.0	
# ::edge	exceed-01	ARG1	peace	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	fail-01	ARG1	society	0.1	0.1.0	
(c / cause-01 
      :ARG0 (a2 / and 
            :op1 (p / prosper-01 
                  :op-of (a / and 
                        :ARG0-of (e / exceed-01 
                              :ARG1 (p2 / peace))))) 
      :ARG1 (f / fail-01 
            :ARG1 (s / society)))

# ::snt monumental scale describes a set of dimensions that are more than human in excess of 11 but not beyond human grasp
# ::tok monumental scale describes a set of dimensions that are more than human in excess of 11 but not beyond human grasp
# ::alignments 20-21|0.0.1 19-20|0.0.1.0 18-19|0.0 16-17|0 15-16|0.0.0.2 13-14|0.0.0 11-12|0.0.0.1 2-3|0.0.0.0 1-2|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:23.655
# ::node	0	contrast-01	16-17
# ::node	0.0	beyond	18-19
# ::node	0.0.0	exceed-01	13-14
# ::node	0.0.0.0	describe-01	2-3
# ::node	0.0.0.0.0	scale	1-2
# ::node	0.0.0.1	human	11-12
# ::node	0.0.0.2	11	15-16
# ::node	0.0.1	grasp-01	20-21
# ::node	0.0.1.0	human	19-20
# ::root	0	contrast-01
# ::edge	beyond	op1	grasp-01	0.0	0.0.1	
# ::edge	contrast-01	ARG2	beyond	0	0.0	
# ::edge	describe-01	ARG0	scale	0.0.0.0	0.0.0.0.0	
# ::edge	describe-01	ARG1	exceed-01	0.0.0.0	0.0.0	
# ::edge	exceed-01	ARG1	beyond	0.0.0	0.0	
# ::edge	exceed-01	time	11	0.0.0	0.0.0.2	
# ::edge	grasp-01	ARG1	human	0.0.1	0.0.1.0	
# ::edge	human	prep-in	exceed-01	0.0.0.1	0.0.0	
(c / contrast-01 
      :ARG2 (b / beyond 
            :ARG1-of (e / exceed-01 
                  :ARG1-of (d / describe-01 
                        :ARG0 (s / scale)) 
                  :prep-in-of (h2 / human) 
                  :time 11) 
            :op1 (g / grasp-01 
                  :ARG1 (h / human))))

# ::snt in that way the rich polluters would be obliged to pay for their excesses through a transfer of technology and wealth to the poor who in time would come under pressure themselves not to allow their emissions to reach levels which would force them to buy permits
# ::tok in that way the rich polluters would be obliged to pay for their excesses through a transfer of technology and wealth to the poor who in time would come under pressure themselves not to allow their emissions to reach levels which would force them to buy permits
# ::alignments 46-47|0.0.1.0.0 45-46|0.0.1.0 42-43|0.0.1 39-40|0.0.0 38-39|0.0 34-35|0 30-31|0.1 26-27|0.1.0 23-24|0.0.1.0.0.0.0.1.1 20-21|0.0.1.0.0.0.1 19-20|0.0.1.0.0.0 18-19|0.0.1.0.0.0.0.0 16-17|0.0.1.0.0.0.0 10-11|0.0.1.0.0.0.0.1 8-9|0.0.1.0.0.0.0.1.0 4-5|0.1.1 2-3|0.0.1.0.0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:24.437
# ::node	0	allow-01	34-35
# ::node	0.0	reach-01	38-39
# ::node	0.0.0	level	39-40
# ::node	0.0.1	force	42-43
# ::node	0.0.1.0	buy-01	45-46
# ::node	0.0.1.0.0	permit-01	46-47
# ::node	0.0.1.0.0.0	and	19-20
# ::node	0.0.1.0.0.0.0	transfer-01	16-17
# ::node	0.0.1.0.0.0.0.0	technology	18-19
# ::node	0.0.1.0.0.0.0.1	pay-01	10-11
# ::node	0.0.1.0.0.0.0.1.0	oblige-02	8-9
# ::node	0.0.1.0.0.0.0.1.0.0	way	2-3
# ::node	0.0.1.0.0.0.0.1.1	poor	23-24
# ::node	0.0.1.0.0.0.1	wealth	20-21
# ::node	0.1	pressure-01	30-31
# ::node	0.1.0	time	26-27
# ::node	0.1.1	rich	4-5
# ::root	0	allow-01
# ::edge	allow-01	ARG1	reach-01	0	0.0	
# ::edge	and	op1	transfer-01	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	and	op2	wealth	0.0.1.0.0.0	0.0.1.0.0.0.1	
# ::edge	buy-01	ARG1	permit-01	0.0.1.0	0.0.1.0.0	
# ::edge	force	purpose	buy-01	0.0.1	0.0.1.0	
# ::edge	oblige-02	ARG1	pay-01	0.0.1.0.0.0.0.1.0	0.0.1.0.0.0.0.1	
# ::edge	oblige-02	manner	way	0.0.1.0.0.0.0.1.0	0.0.1.0.0.0.0.1.0.0	
# ::edge	pay-01	ARG2	poor	0.0.1.0.0.0.0.1	0.0.1.0.0.0.0.1.1	
# ::edge	pay-01	ARG3	transfer-01	0.0.1.0.0.0.0.1	0.0.1.0.0.0.0	
# ::edge	permit-01	ARG1	and	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	pressure-01	ARG0	time	0.1	0.1.0	
# ::edge	pressure-01	ARG1	rich	0.1	0.1.1	
# ::edge	pressure-01	ARG2	allow-01	0.1	0	
# ::edge	reach-01	ARG1	level	0.0	0.0.0	
# ::edge	reach-01	ARG2	force	0.0	0.0.1	
# ::edge	transfer-01	ARG1	technology	0.0.1.0.0.0.0	0.0.1.0.0.0.0.0	
(a / allow-01 
      :ARG1 (r / reach-01 
            :ARG1 (l / level) 
            :ARG2 (f / force 
                  :purpose (b / buy-01 
                        :ARG1 (p / permit-01 
                              :ARG1 (a2 / and 
                                    :op1 (t3 / transfer-01 
                                          :ARG1 (t2 / technology) 
                                          :ARG3-of (p4 / pay-01 
                                                :ARG1-of (o / oblige-02 
                                                      :manner (w2 / way)) 
                                                :ARG2 (p3 / poor))) 
                                    :op2 (w / wealth)))))) 
      :ARG2-of (p2 / pressure-01 
            :ARG0 (t / time) 
            :ARG1 (r2 / rich)))

# ::snt 14 fourteen per cent of the publishers net receipts on all copies sold in excess of 10000 copies   students activity books classroom version dash, 16 sixteen per cent of the publishers net receipts on all copies sold in excess of 50000 copies   teachers video guide dash
# ::tok 14 fourteen per cent of the publishers net receipts on all copies sold in excess of 10000 copies students activity books classroom version dash , 16 sixteen per cent of the publishers net receipts on all copies sold in excess of 50000 copies teachers video guide dash
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:24.439
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt for this book articulates the other side and it does so with a devastating logic presented with a controlled anger and exasperation at the excesses of the greens
# ::tok for this book articulates the other side and it does so with a devastating logic presented with a controlled anger and exasperation at the excesses of the greens
# ::alignments 20-21|0 19-20|0.1.0 18-19|0.1.0.0 15-16|0.1 14-15|0.1.1 13-14|0.1.1.0 10-11|0.1.2 8-9|0.1.0.0.0 7-8|0.0 6-7|0.0.1 5-6|0.0.1.0 2-3|0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:24.651
# ::node	0	and	20-21
# ::node	0.0	and	7-8
# ::node	0.0.0	book	2-3
# ::node	0.0.0.0	this	1-2
# ::node	0.0.1	side	6-7
# ::node	0.0.1.0	other	5-6
# ::node	0.1	present-01	15-16
# ::node	0.1.0	anger-01	19-20
# ::node	0.1.0.0	control-01	18-19
# ::node	0.1.0.0.0	it	8-9
# ::node	0.1.1	logic	14-15
# ::node	0.1.1.0	devastate-01	13-14
# ::node	0.1.2	so	10-11
# ::root	0	and
# ::edge	and	op1	book	0.0	0.0.0	
# ::edge	and	op1	present-01	0	0.1	
# ::edge	and	op2	side	0.0	0.0.1	
# ::edge	and	op3	and	0.0	0	
# ::edge	book	mod	this	0.0.0	0.0.0.0	
# ::edge	control-01	ARG0	it	0.1.0.0	0.1.0.0.0	
# ::edge	control-01	ARG1	anger-01	0.1.0.0	0.1.0	
# ::edge	devastate-01	ARG1	logic	0.1.1.0	0.1.1	
# ::edge	present-01	ARG0	anger-01	0.1	0.1.0	
# ::edge	present-01	ARG1	logic	0.1	0.1.1	
# ::edge	side	mod	other	0.0.1	0.0.1.0	
# ::edge	so	op1	present-01	0.1.2	0.1	
(a / and 
      :op-of (a3 / and 
            :op1 (b / book 
                  :mod (t / this)) 
            :op2 (s2 / side 
                  :mod (o / other))) 
      :op1 (p / present-01 
            :ARG0 (a2 / anger-01 
                  :ARG1-of (c / control-01 
                        :ARG0 (i / it))) 
            :ARG1 (l / logic 
                  :ARG1-of (d / devastate-01)) 
            :op-of (s / so)))

# ::snt as a parting gift this brutal expose of the personal and corporate excesses of his former employers must rank as one of the truly great acts of ingratitude in wall streets history
# ::tok as a parting gift this brutal expose of the personal and corporate excesses of his former employers must rank as one of the truly great acts of ingratitude in wall streets history
# ::alignments 31-32|0.0.2.0.0 30-31|0.0.2.0 29-30|0.0.2 24-25|0.0.0 23-24|0.0.0.0 15-16|0.0.1 11-12|0.2 10-11|0 9-10|0.1 5-6|0.0.2.1 4-5|0.0.2.2 3-4|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:24.766
# ::node	0	and	10-11
# ::node	0.0	gift-01	3-4
# ::node	0.0.0	great	24-25
# ::node	0.0.0.0	truly	23-24
# ::node	0.0.1	former	15-16
# ::node	0.0.2	wall	29-30
# ::node	0.0.2.0	street	30-31
# ::node	0.0.2.0.0	history	31-32
# ::node	0.0.2.1	brutal	5-6
# ::node	0.0.2.2	this	4-5
# ::node	0.1	personal	9-10
# ::node	0.2	corporation	11-12
# ::root	0	and
# ::edge	and	op1	gift-01	0	0.0	
# ::edge	and	op2	personal	0	0.1	
# ::edge	and	op3	corporation	0	0.2	
# ::edge	former	op1	gift-01	0.0.1	0.0	
# ::edge	great	degree	truly	0.0.0	0.0.0.0	
# ::edge	great	op1	gift-01	0.0.0	0.0	
# ::edge	history	mod	street	0.0.2.0.0	0.0.2.0	
# ::edge	street	mod	wall	0.0.2.0	0.0.2	
# ::edge	wall	op1	gift-01	0.0.2	0.0	
# ::edge	wall	poss	brutal	0.0.2	0.0.2.1	
# ::edge	wall	poss	this	0.0.2	0.0.2.2	
(a / and 
      :op1 (g2 / gift-01 
            :op-of (g / great 
                  :degree (t / truly)) 
            :op-of (f / former) 
            :op-of (w / wall 
                  :mod-of (s / street 
                        :mod-of (h / history)) 
                  :poss (b / brutal) 
                  :poss (t2 / this))) 
      :op2 (p / personal) 
      :op3 (c / corporation))

# ::snt   jeremy wilson is justifiably stern about the excesses of much of this commentary and the introduction to his authorised biography notes ominously that worthless and untenable theories ellip
# ::tok jeremy wilson is justifiably stern about the excesses of much of this commentary and the introduction to his authorised biography notes ominously that worthless and untenable theories ellip
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:24.767
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the report also stated that there was an excess of leukaemia deaths
# ::tok the report also stated that there was an excess of leukaemia deaths
# ::alignments 8-9|0.1 3-4|0 2-3|0.2 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:24.781
# ::node	0	state-01	3-4
# ::node	0.0	report	1-2
# ::node	0.1	exceed-01	8-9
# ::node	0.2	also	2-3
# ::root	0	state-01
# ::edge	state-01	ARG0	report	0	0.0	
# ::edge	state-01	ARG1	exceed-01	0	0.1	
# ::edge	state-01	mod	also	0	0.2	
(s / state-01 
      :ARG0 (r / report) 
      :ARG1 (e / exceed-01) 
      :mod (a / also))

# ::snt cardinal jaime sin the archbishop of manila told president aquino yesterday to hunt down army rebels and curb excesses by her relatives and government or face the horrors of a new coup
# ::tok cardinal jaime sin the archbishop of manila told president aquino yesterday to hunt down army rebels and curb excesses by her relatives and government or face the horrors of a new coup
# ::alignments 31-32|0.2.0.0 30-31|0.2.0.0.0 27-28|0.2.0 25-26|0.2 24-25|0.2.1 22-23|0.2.2 21-22|0.0.0.0.0.1.0+0.0.0.0.0.1 17-18|0.1 16-17|0 15-16|0.0.0.0.0.0+0.0.0.0.0 14-15|0.0.0.0.0.0.0 13-14|0.0.0.0.1 12-13|0.0.0.0 10-11|0.0.0.2 8-9|0.0.0.1+0.0.0.1.0 7-8|0.0.0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:25.428
# ::node	0	and	16-17
# ::node	0.0	sin-01	2-3
# ::node	0.0.0	tell-01	7-8
# ::node	0.0.0.0	hunt-01	12-13
# ::node	0.0.0.0.0	person	15-16
# ::node	0.0.0.0.0.0	rebel-01	15-16
# ::node	0.0.0.0.0.0.0	army	14-15
# ::node	0.0.0.0.0.1	have-rel-role-91	21-22
# ::node	0.0.0.0.0.1.0	relative	21-22
# ::node	0.0.0.0.1	down	13-14
# ::node	0.0.0.1	president	8-9
# ::node	0.0.0.1.0	have-org-role-91	8-9
# ::node	0.0.0.2	yesterday	10-11
# ::node	0.1	curb-01	17-18
# ::node	0.2	face-01	25-26
# ::node	0.2.0	horror	27-28
# ::node	0.2.0.0	coup	31-32
# ::node	0.2.0.0.0	new	30-31
# ::node	0.2.1	or	24-25
# ::node	0.2.2	and	22-23
# ::root	0	and
# ::edge	and	op1	face-01	0.2.2	0.2	
# ::edge	and	op1	sin-01	0	0.0	
# ::edge	and	op2	curb-01	0	0.1	
# ::edge	and	op3	face-01	0	0.2	
# ::edge	coup	mod	new	0.2.0.0	0.2.0.0.0	
# ::edge	face-01	ARG1	horror	0.2	0.2.0	
# ::edge	have-org-role-91	ARG2	president	0.0.0.1.0	0.0.0.1	
# ::edge	have-rel-role-91	ARG1	person	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	have-rel-role-91	ARG2	relative	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	horror	poss	coup	0.2.0	0.2.0.0	
# ::edge	hunt-01	ARG1	person	0.0.0.0	0.0.0.0.0	
# ::edge	hunt-01	direction	down	0.0.0.0	0.0.0.0.1	
# ::edge	or	op1	face-01	0.2.1	0.2	
# ::edge	rebel-01	ARG0	person	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	rebel-01	ARG1	army	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	tell-01	ARG0	sin-01	0.0.0	0.0	
# ::edge	tell-01	ARG1	hunt-01	0.0.0	0.0.0.0	
# ::edge	tell-01	ARG2	president	0.0.0	0.0.0.1	
# ::edge	tell-01	time	yesterday	0.0.0	0.0.0.2	
(a2 / and 
      :op1 (s / sin-01 
            :ARG0-of (t / tell-01 
                  :ARG1 (h3 / hunt-01 
                        :ARG1 (p / person 
                              :ARG0-of (r2 / rebel-01 
                                    :ARG1 (a3 / army)) 
                              :ARG1-of (h2 / have-rel-role-91 
                                    :ARG2 (r / relative))) 
                        :direction (d / down)) 
                  :ARG2 (p2 / president 
                        :ARG2-of (h4 / have-org-role-91)) 
                  :time (y / yesterday))) 
      :op2 (c2 / curb-01) 
      :op3 (f / face-01 
            :ARG1 (h / horror 
                  :poss (c / coup 
                        :mod (n / new))) 
            :op-of (o / or) 
            :op-of (a / and)))

# ::snt which were far in excess of her capabilities
# ::tok which were far in excess of her capabilities
# ::alignments 7-8|0 4-5|0.0 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:25.437
# ::node	0	capable-41	7-8
# ::node	0.0	exceed-01	4-5
# ::node	0.0.0	far	2-3
# ::root	0	capable-41
(c / capable-41 
      :ARG1-of (e / exceed-01 
            :manner (f / far)))

# ::snt for when the lack of savings is bemoaned what is actually complained of is the excess of spending, and what lies behind the excess of spending is not a collapse in the character of the british but a transformation in the structure of the financial system the harness linking horse and cart
# ::tok for when the lack of savings is bemoaned what is actually complained of is the excess of spending , and what lies behind the excess of spending is not a collapse in the character of the british but a transformation in the structure of the financial system the harness linking horse and cart
# ::alignments 51-52|0.1.0.0.0.0.0.0.0.0.0.1.0.0 50-51|0.1.0.0.0.0.0.0.0.0.0.1.0.0.0 49-50|0.1.0.0.0.0.0.0.0.0.0.1.0 46-47|0.1.0.0.0.0.0.0.0.0.0.0 45-46|0.1.0.0.0.0.0.0.0.0.0.0.0 42-43|0.1.0.0.0.0.0.0.0.0.0.1 39-40|0.1.0.0.0.0.0.0.0.0.0 37-38|0 33-34|0.0 30-31|0.1 26-27|0.1.0 24-25|0.1.0.0 22-23|0.1.0.0.0 21-22|0.1.0.0.0.0 19-20|0.1.0.0.0.0.0 17-18|0.1.0.0.0.0.0.0.0.0 15-16|0.1.0.0.0.0.0.0.0 11-12|0.1.0.0.0.0.0.0 10-11|0.1.0.0.0.0.0.0.1 3-4|0.1.0.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:25.913
# ::node	0	contrast-01	37-38
# ::node	0.0	character	33-34
# ::node	0.1	collapse-01	30-31
# ::node	0.1.0	spend-01	26-27
# ::node	0.1.0.0	exceed-01	24-25
# ::node	0.1.0.0.0	behind	22-23
# ::node	0.1.0.0.0.0	lie-01	21-22
# ::node	0.1.0.0.0.0.0	and	19-20
# ::node	0.1.0.0.0.0.0.0	complain-01	11-12
# ::node	0.1.0.0.0.0.0.0.0	exceed-01	15-16
# ::node	0.1.0.0.0.0.0.0.0.0	spend-01	17-18
# ::node	0.1.0.0.0.0.0.0.0.0.0	transform-01	39-40
# ::node	0.1.0.0.0.0.0.0.0.0.0.0	system	46-47
# ::node	0.1.0.0.0.0.0.0.0.0.0.0.0	finance	45-46
# ::node	0.1.0.0.0.0.0.0.0.0.0.1	structure	42-43
# ::node	0.1.0.0.0.0.0.0.0.0.0.1.0	link-01	49-50
# ::node	0.1.0.0.0.0.0.0.0.0.0.1.0.0	and	51-52
# ::node	0.1.0.0.0.0.0.0.0.0.0.1.0.0.0	horse	50-51
# ::node	0.1.0.0.0.0.0.0.1	actual	10-11
# ::node	0.1.0.0.0.0.0.1	lack-01	3-4
# ::root	0	contrast-01
# ::edge	and	op1	horse	0.1.0.0.0.0.0.0.0.0.0.1.0.0	0.1.0.0.0.0.0.0.0.0.0.1.0.0.0	
# ::edge	and	op1	lack-01	0.1.0.0.0.0.0	0.1.0.0.0.0.0.1	
# ::edge	behind	op1	exceed-01	0.1.0.0.0	0.1.0.0	
# ::edge	collapse-01	ARG0	spend-01	0.1	0.1.0	
# ::edge	complain-01	ARG1	and	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	complain-01	ARG2	exceed-01	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0.0.0	
# ::edge	complain-01	mod	actual	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0.0.1	
# ::edge	contrast-01	ARG1	character	0	0.0	
# ::edge	contrast-01	ARG2	collapse-01	0	0.1	
# ::edge	exceed-01	ARG1	spend-01	0.1.0.0	0.1.0	
# ::edge	exceed-01	ARG1	spend-01	0.1.0.0.0.0.0.0.0	0.1.0.0.0.0.0.0.0.0	
# ::edge	lie-01	ARG1	and	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	lie-01	ARG2	behind	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	link-01	ARG0	structure	0.1.0.0.0.0.0.0.0.0.0.1.0	0.1.0.0.0.0.0.0.0.0.0.1	
# ::edge	link-01	ARG1	and	0.1.0.0.0.0.0.0.0.0.0.1.0	0.1.0.0.0.0.0.0.0.0.0.1.0.0	
# ::edge	spend-01	ARG1	transform-01	0.1.0.0.0.0.0.0.0.0	0.1.0.0.0.0.0.0.0.0.0	
# ::edge	system	mod	finance	0.1.0.0.0.0.0.0.0.0.0.0	0.1.0.0.0.0.0.0.0.0.0.0.0	
# ::edge	transform-01	ARG0	system	0.1.0.0.0.0.0.0.0.0.0	0.1.0.0.0.0.0.0.0.0.0.0	
# ::edge	transform-01	ARG1	structure	0.1.0.0.0.0.0.0.0.0.0	0.1.0.0.0.0.0.0.0.0.0.1	
(c / contrast-01 
      :ARG1 (c2 / character) 
      :ARG2 (c3 / collapse-01 
            :ARG0 (s3 / spend-01 
                  :ARG1-of (e / exceed-01 
                        :op-of (b / behind 
                              :ARG2-of (l2 / lie-01 
                                    :ARG1 (a2 / and 
                                          :ARG1-of (c4 / complain-01 
                                                :ARG2 (e2 / exceed-01 
                                                      :ARG1 (s4 / spend-01 
                                                            :ARG1 (t / transform-01 
                                                                  :ARG0 (s / system 
                                                                        :mod (f / finance)) 
                                                                  :ARG1 (s2 / structure 
                                                                        :ARG0-of (l / link-01 
                                                                              :ARG1 (a / and 
                                                                                    :op1 (h / horse))))))) 
                                                :mod (a3 / actual)) 
                                          :op1 (l3 / lack-01))))))))

# ::snt roughly cut away the excess and press the vinyl into angles trimming carefully
# ::tok roughly cut away the excess and press the vinyl into angles trimming carefully
# ::alignments 12-13|0.0.0 10-11|0.2 6-7|0.1 5-6|0 4-5|0.0 2-3|0.0.1 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:25.945
# ::node	0	and	5-6
# ::node	0.0	exceed-01	4-5
# ::node	0.0.0	careful	12-13
# ::node	0.0.1	away	2-3
# ::node	0.1	press	6-7
# ::node	0.1.0	roughly	0-1
# ::node	0.2	angle	10-11
# ::root	0	and
# ::edge	and	op1	exceed-01	0	0.0	
# ::edge	and	op2	press	0	0.1	
# ::edge	and	op3	angle	0	0.2	
# ::edge	exceed-01	ARG0	careful	0.0	0.0.0	
# ::edge	exceed-01	ARG1	away	0.0	0.0.1	
# ::edge	press	mod	roughly	0.1	0.1.0	
(a2 / and 
      :op1 (e / exceed-01 
            :ARG0 (c / careful) 
            :ARG1 (a3 / away)) 
      :op2 (p / press 
            :mod (r / roughly)) 
      :op3 (a / angle))

# ::snt the excess of cash that seemed to be available for the makers of the three big goldcrest films fed lazy creativity
# ::tok the excess of cash that seemed to be available for the makers of the three big goldcrest films fed lazy creativity
# ::alignments 19-20|0.0.0.0 18-19|0 17-18|0.0 15-16|0.0.1 14-15|0.0.2 11-12|0.0.0 8-9|0.0.0.1 5-6|0.0.0.1.0 3-4|0.0.0.1.0.0 1-2|0.0.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:26.112
# ::node	0	feed-03	18-19
# ::node	0.0	film	17-18
# ::node	0.0.0	make-01	11-12
# ::node	0.0.0.0	lazy	19-20
# ::node	0.0.0.1	available	8-9
# ::node	0.0.0.1.0	seem-01	5-6
# ::node	0.0.0.1.0.0	cash	3-4
# ::node	0.0.0.1.0.0.0	exceed-01	1-2
# ::node	0.0.1	big	15-16
# ::node	0.0.2	3	14-15
# ::root	0	feed-03
# ::edge	available	purpose	make-01	0.0.0.1	0.0.0	
# ::edge	exceed-01	ARG1	cash	0.0.0.1.0.0.0	0.0.0.1.0.0	
# ::edge	feed-03	ARG1	film	0	0.0	
# ::edge	film	mod	big	0.0	0.0.1	
# ::edge	film	quant	3	0.0	0.0.2	
# ::edge	make-01	ARG0	lazy	0.0.0	0.0.0.0	
# ::edge	make-01	ARG1	film	0.0.0	0.0	
# ::edge	seem-01	ARG0	cash	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	seem-01	ARG1	available	0.0.0.1.0	0.0.0.1	
(f / feed-03 
      :ARG1 (f2 / film 
            :ARG1-of (m / make-01 
                  :ARG0 (l / lazy) 
                  :purpose-of (a / available 
                        :ARG1-of (s / seem-01 
                              :ARG0 (c / cash 
                                    :ARG1-of (e / exceed-01))))) 
            :mod (b / big) 
            :quant 3))

# ::snt known as the ccitt international telegraph and telephone consultative committee exploit their power to set international charges well in excess of costs
# ::tok known as the ccitt international telegraph and telephone consultative committee exploit their power to set international charges well in excess of costs
# ::alignments 21-22|0.0.1.0 19-20|0.0.1.1 17-18|0.0.1.1.0 15-16|0.0.0.0.0 12-13|0.0.1 10-11|0.0 9-10|0.0.0.1 7-8|0.0.0.1.0 6-7|0.0.0 5-6|0.0.0.0 4-5|0.0.0.0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:26.176
# ::node	0	know-01	0-1
# ::node	0.0	exploit-01	10-11
# ::node	0.0.0	and	6-7
# ::node	0.0.0.0	telegraph-01	5-6
# ::node	0.0.0.0.0	international	15-16
# ::node	0.0.0.0.1	international	4-5
# ::node	0.0.0.1	committee	9-10
# ::node	0.0.0.1.0	telephone-01	7-8
# ::node	0.0.1	power	12-13
# ::node	0.0.1.0	cost-01	21-22
# ::node	0.0.1.1	exceed-01	19-20
# ::node	0.0.1.1.0	well	17-18
# ::root	0	know-01
# ::edge	and	op1	telegraph-01	0.0.0	0.0.0.0	
# ::edge	and	op2	committee	0.0.0	0.0.0.1	
# ::edge	committee	mod	telephone-01	0.0.0.1	0.0.0.1.0	
# ::edge	cost-01	ARG1	power	0.0.1.0	0.0.1	
# ::edge	exceed-01	ARG1	power	0.0.1.1	0.0.1	
# ::edge	exceed-01	time	well	0.0.1.1	0.0.1.1.0	
# ::edge	exploit-01	ARG0	and	0.0	0.0.0	
# ::edge	exploit-01	ARG1	power	0.0	0.0.1	
# ::edge	know-01	condition	exploit-01	0	0.0	
# ::edge	telegraph-01	ARG1	international	0.0.0.0	0.0.0.0.0	
# ::edge	telegraph-01	mod	international	0.0.0.0	0.0.0.0.1	
(k / know-01 
      :condition (e2 / exploit-01 
            :ARG0 (a / and 
                  :op1 (t2 / telegraph-01 
                        :ARG1 (i / international) 
                        :mod (i2 / international)) 
                  :op2 (c2 / committee 
                        :mod (t / telephone-01))) 
            :ARG1 (p / power 
                  :ARG1-of (c / cost-01) 
                  :ARG1-of (e / exceed-01 
                        :time (w / well)))))

# ::snt with luck it could prevent journalists themselves from feeling quite so embarrassed about the grosser excesses practised in the name of a free press
# ::tok with luck it could prevent journalists themselves from feeling quite so embarrassed about the grosser excesses practised in the name of a free press
# ::alignments 23-24|0.0.3.0.0 22-23|0.0.3.0 11-12|0.0.2.0 10-11|0.0.2.0.0 9-10|0.0.2.0.1 8-9|0.0.2 5-6|0.0.1 4-5|0.0 3-4|0 2-3|0.0.0 1-2|0.0.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:26.296
# ::node	0	possible	3-4
# ::node	0.0	prevent-01	4-5
# ::node	0.0.0	it	2-3
# ::node	0.0.1	journalist	5-6
# ::node	0.0.2	feel-01	8-9
# ::node	0.0.2.0	embarrass-01	11-12
# ::node	0.0.2.0.0	so	10-11
# ::node	0.0.2.0.1	quite	9-10
# ::node	0.0.3	luck	1-2
# ::node	0.0.3.0	free-41	22-23
# ::node	0.0.3.0.0	press	23-24
# ::root	0	possible
(p3 / possible 
      :mod-of (p2 / prevent-01 
            :ARG0 (i / it) 
            :ARG1 (j / journalist) 
            :ARG2 (f2 / feel-01 
                  :ARG1 (e / embarrass-01 
                        :degree (s / so) 
                        :extent (q / quite))) 
            :condition (l / luck 
                  :ARG0-of (f / free-41 
                        :ARG1 (p / press)))))

# ::snt if you are at home make sure you still pick freezing or preserving the excess
# ::tok if you are at home make sure you still pick freezing or preserving the excess
# ::alignments 14-15|0.0.0.0 11-12|0.1 10-11|0.0.0 9-10|0 8-9|0.2 7-8|0.0 4-5|0.0.0.0.0 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:26.454
# ::node	0	pick-01	9-10
# ::node	0.0	you	7-8
# ::node	0.0.0	freeze-02	10-11
# ::node	0.0.0.0	exceed-01	14-15
# ::node	0.0.0.0.0	home	4-5
# ::node	0.1	or	11-12
# ::node	0.1.0	you	1-2
# ::node	0.2	still	8-9
# ::root	0	pick-01
# ::edge	exceed-01	ARG0	home	0.0.0.0	0.0.0.0.0	
# ::edge	freeze-02	ARG0	you	0.0.0	0.0	
# ::edge	freeze-02	ARG1	exceed-01	0.0.0	0.0.0.0	
# ::edge	or	op1	you	0.1	0.1.0	
# ::edge	pick-01	ARG0	you	0	0.0	
# ::edge	pick-01	ARG1	or	0	0.1	
# ::edge	pick-01	mod	still	0	0.2	
(p / pick-01 
      :ARG0 (y / you 
            :ARG0-of (f / freeze-02 
                  :ARG1 (e / exceed-01 
                        :ARG0 (h / home)))) 
      :ARG1 (o / or 
            :op1 (y2 / you)) 
      :mod (s / still))

# ::snt like many a rebel and humanist he found the excesses of religion difficult to come to terms with but he always felt that there was a unique strength in the crofting community which guaranteed its survival
# ::tok like many a rebel and humanist he found the excesses of religion difficult to come to terms with but he always felt that there was a unique strength in the crofting community which guaranteed its survival
# ::alignments 35-36|0.0 33-34|0.0.0 31-32|0.0.0.0 27-28|0.1.1 26-27|0.1.1.0 21-22|0.1 20-21|0.1.3 19-20|0.1.0 18-19|0 16-17|0.2 12-13|0.1.2.1.1 11-12|0.1.2.1.2 7-8|0.1.2.1 6-7|0.1.2.1.0 4-5|0.1.2 3-4|0.1.2.0 1-2|0.1.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:27.088
# ::node	0	contrast-01	18-19
# ::node	0.0	survive-01	35-36
# ::node	0.0.0	guarantee-01	33-34
# ::node	0.0.0.0	community	31-32
# ::node	0.1	feel-01	21-22
# ::node	0.1.0	he	19-20
# ::node	0.1.1	strength	27-28
# ::node	0.1.1.0	unique	26-27
# ::node	0.1.2	and	4-5
# ::node	0.1.2.0	rebel-01	3-4
# ::node	0.1.2.0.0	many	1-2
# ::node	0.1.2.1	find-01	7-8
# ::node	0.1.2.1.0	he	6-7
# ::node	0.1.2.1.1	difficult	12-13
# ::node	0.1.2.1.2	religion	11-12
# ::node	0.1.3	always	20-21
# ::node	0.2	term	16-17
# ::root	0	contrast-01
# ::edge	and	op1	rebel-01	0.1.2	0.1.2.0	
# ::edge	and	op2	find-01	0.1.2	0.1.2.1	
# ::edge	and	op3	feel-01	0.1.2	0.1	
# ::edge	contrast-01	ARG2	feel-01	0	0.1	
# ::edge	feel-01	ARG0	he	0.1	0.1.0	
# ::edge	feel-01	ARG1	strength	0.1	0.1.1	
# ::edge	feel-01	time	always	0.1	0.1.3	
# ::edge	find-01	ARG0	he	0.1.2.1	0.1.2.1.0	
# ::edge	find-01	ARG1	difficult	0.1.2.1	0.1.2.1.1	
# ::edge	find-01	ARG4	religion	0.1.2.1	0.1.2.1.2	
# ::edge	guarantee-01	ARG0	community	0.0.0	0.0.0.0	
# ::edge	guarantee-01	ARG1	survive-01	0.0.0	0.0	
# ::edge	rebel-01	ARG1	many	0.1.2.0	0.1.2.0.0	
# ::edge	strength	mod	unique	0.1.1	0.1.1.0	
# ::edge	survive-01	ARG1	contrast-01	0.0	0	
# ::edge	term	time	contrast-01	0.2	0	
(c2 / contrast-01 
      :ARG1-of (s / survive-01 
            :ARG1-of (g / guarantee-01 
                  :ARG0 (c / community))) 
      :ARG2 (f / feel-01 
            :ARG0 (h / he) 
            :ARG1 (s2 / strength 
                  :mod (u / unique)) 
            :op-of (a2 / and 
                  :op1 (r2 / rebel-01 
                        :ARG1 (m / many)) 
                  :op2 (f2 / find-01 
                        :ARG0 (h2 / he) 
                        :ARG1 (d / difficult) 
                        :ARG4 (r / religion))) 
            :time (a / always)) 
      :time-of (t / term))

# ::snt but because the demand for central control has arisen out of a general dissatisfaction with education and this dissatisfaction is often directed towards an excess of creativity in the classroom a lack of a disciplined workforce it is generally assumed that the central common curriculum to be nationally accepted would be downtoearth factual able to be assessed and marked by a tick or a cross
# ::tok but because the demand for central control has arisen out of a general dissatisfaction with education and this dissatisfaction is often directed towards an excess of creativity in the classroom a lack of a disciplined workforce it is generally assumed that the central common curriculum to be nationally accepted would be downtoearth factual able to be assessed and marked by a tick or a cross
# ::alignments 64-65|0.0.0.1.1.0.0.0.1.1.0.0 62-63|0.0.0.1.1.0.0.0.1.1.0 61-62|0.0.0.1.1.0.0.0.1.1 58-59|0.0.0.1.1.0.0.0.1.1.0.0.0.1 57-58|0.0.0.1.1.0.0.0.1.1.0.0.0 53-54|0.0.0.1.1.0.0.0.1.1.0.0.0.0 52-53|0.0.0.1.1.0.0.0.1.1.0.0.0.0.0 48-49|0.0.0.1.1.0.0.0.1.2 44-45|0.0.0.1.1.0.0.0.1.2.0 43-44|0.0.0.1.1.0.0.0.1.2.0.0 42-43|0.0.0.1.1.0.0.0.1.2.0.1 39-40|0.0.0.1.1.0.0.0.1 38-39|0.0.0.1.1.0.0.0.1.3 36-37|0.0.0.1.1.0.0.0.1.0 35-36|0.0.0.1.1.0.0.0 31-32|0.0.0.1.1.0.0 29-30|0.0.0.1.1.0 24-25|0.0.0.1.1 21-22|0.0.0.1 20-21|0.0.0.1.2 17-18|0.0.1 16-17|0.0.0 15-16|0.0.0.0 12-13|0.0.0.1.1.0.0.0.0 6-7|0.0.0.1.0.0 5-6|0.0.0.0.0 3-4|0.0.0.1.0 1-2|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:29.047
# ::node	0	contrast-01	0-1
# ::node	0.0	cause-01	1-2
# ::node	0.0.0	and	16-17
# ::node	0.0.0.0	educate-01	15-16
# ::node	0.0.0.0.0	central	5-6
# ::node	0.0.0.1	direct-01	21-22
# ::node	0.0.0.1.0	demand-01	3-4
# ::node	0.0.0.1.0.0	control-01	6-7
# ::node	0.0.0.1.1	exceed-01	24-25
# ::node	0.0.0.1.1.0	classroom	29-30
# ::node	0.0.0.1.1.0.0	lack-01	31-32
# ::node	0.0.0.1.1.0.0.0	work-01	35-36
# ::node	0.0.0.1.1.0.0.0.0	general	12-13
# ::node	0.0.0.1.1.0.0.0.1	assume-02	39-40
# ::node	0.0.0.1.1.0.0.0.1.0	it	36-37
# ::node	0.0.0.1.1.0.0.0.1.1	tick-03	61-62
# ::node	0.0.0.1.1.0.0.0.1.1.0	or	62-63
# ::node	0.0.0.1.1.0.0.0.1.1.0.0	cross-02	64-65
# ::node	0.0.0.1.1.0.0.0.1.1.0.0.0	and	57-58
# ::node	0.0.0.1.1.0.0.0.1.1.0.0.0.0	possible	53-54
# ::node	0.0.0.1.1.0.0.0.1.1.0.0.0.0.0	fact	52-53
# ::node	0.0.0.1.1.0.0.0.1.1.0.0.0.1	mark-01	58-59
# ::node	0.0.0.1.1.0.0.0.1.2	accept-01	48-49
# ::node	0.0.0.1.1.0.0.0.1.2.0	curriculum	44-45
# ::node	0.0.0.1.1.0.0.0.1.2.0.0	common	43-44
# ::node	0.0.0.1.1.0.0.0.1.2.0.1	central	42-43
# ::node	0.0.0.1.1.0.0.0.1.3	general	38-39
# ::node	0.0.0.1.2	often	20-21
# ::node	0.0.1	this	17-18
# ::root	0	contrast-01
# ::edge	accept-01	ARG1	curriculum	0.0.0.1.1.0.0.0.1.2	0.0.0.1.1.0.0.0.1.2.0	
# ::edge	and	op1	educate-01	0.0.0	0.0.0.0	
# ::edge	and	op1	mark-01	0.0.0.1.1.0.0.0.1.1.0.0.0	0.0.0.1.1.0.0.0.1.1.0.0.0.1	
# ::edge	and	op2	cross-02	0.0.0.1.1.0.0.0.1.1.0.0.0	0.0.0.1.1.0.0.0.1.1.0.0	
# ::edge	and	op2	direct-01	0.0.0	0.0.0.1	
# ::edge	assume-02	ARG0	it	0.0.0.1.1.0.0.0.1	0.0.0.1.1.0.0.0.1.0	
# ::edge	assume-02	ARG1	work-01	0.0.0.1.1.0.0.0.1	0.0.0.1.1.0.0.0	
# ::edge	assume-02	ARG3	accept-01	0.0.0.1.1.0.0.0.1	0.0.0.1.1.0.0.0.1.2	
# ::edge	assume-02	manner	general	0.0.0.1.1.0.0.0.1	0.0.0.1.1.0.0.0.1.3	
# ::edge	cause-01	ARG0	and	0.0	0.0.0	
# ::edge	cause-01	ARG1	this	0.0	0.0.1	
# ::edge	contrast-01	ARG2	cause-01	0	0.0	
# ::edge	curriculum	mod	central	0.0.0.1.1.0.0.0.1.2.0	0.0.0.1.1.0.0.0.1.2.0.1	
# ::edge	curriculum	mod	common	0.0.0.1.1.0.0.0.1.2.0	0.0.0.1.1.0.0.0.1.2.0.0	
# ::edge	demand-01	ARG1	control-01	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	direct-01	ARG0	demand-01	0.0.0.1	0.0.0.1.0	
# ::edge	direct-01	ARG1	exceed-01	0.0.0.1	0.0.0.1.1	
# ::edge	direct-01	frequency	often	0.0.0.1	0.0.0.1.2	
# ::edge	educate-01	ARG1	central	0.0.0.0	0.0.0.0.0	
# ::edge	exceed-01	ARG1	classroom	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	fact	mod	possible	0.0.0.1.1.0.0.0.1.1.0.0.0.0.0	0.0.0.1.1.0.0.0.1.1.0.0.0.0	
# ::edge	lack-01	ARG0	classroom	0.0.0.1.1.0.0	0.0.0.1.1.0	
# ::edge	lack-01	ARG1	work-01	0.0.0.1.1.0.0	0.0.0.1.1.0.0.0	
# ::edge	or	op1	tick-03	0.0.0.1.1.0.0.0.1.1.0	0.0.0.1.1.0.0.0.1.1	
# ::edge	or	op2	cross-02	0.0.0.1.1.0.0.0.1.1.0	0.0.0.1.1.0.0.0.1.1.0.0	
# ::edge	possible	domain	and	0.0.0.1.1.0.0.0.1.1.0.0.0.0	0.0.0.1.1.0.0.0.1.1.0.0.0	
# ::edge	tick-03	ARG1	assume-02	0.0.0.1.1.0.0.0.1.1	0.0.0.1.1.0.0.0.1	
# ::edge	work-01	ARG1	general	0.0.0.1.1.0.0.0	0.0.0.1.1.0.0.0.0	
(c9 / contrast-01 
      :ARG2 (c8 / cause-01 
            :ARG0 (a4 / and 
                  :op1 (e2 / educate-01 
                        :ARG1 (c7 / central)) 
                  :op2 (d / direct-01 
                        :ARG0 (d2 / demand-01 
                              :ARG1 (c6 / control-01)) 
                        :ARG1 (e / exceed-01 
                              :ARG1 (c5 / classroom 
                                    :ARG0-of (l / lack-01 
                                          :ARG1 (w / work-01 
                                                :ARG1 (g2 / general) 
                                                :ARG1-of (a3 / assume-02 
                                                      :ARG0 (i / it) 
                                                      :ARG1-of (t / tick-03 
                                                            :op-of (o / or 
                                                                  :op1 (c / cross-02 
                                                                        :op-of (a / and 
                                                                              :domain-of (p / possible 
                                                                                    :mod-of (f / fact)) 
                                                                              :op1 (m / mark-01))))) 
                                                      :ARG3 (a2 / accept-01 
                                                            :ARG1 (c2 / curriculum 
                                                                  :mod (c3 / common) 
                                                                  :mod (c4 / central))) 
                                                      :manner (g / general)))))) 
                        :frequency (o2 / often))) 
            :ARG1 (t2 / this)))

# ::snt the best of them can earn in excess of dollars 100000 a season
# ::tok the best of them can earn in excess of dollars 100000 a season
# ::alignments 12-13|0.0.1 10-11|0.0.0.2+0.0.0.1+0.0.0.0+0.0.0 9-10|0.0.2.0.0+0.0.2.0 7-8|0.0.2 5-6|0.0 4-5|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:29.112
# ::node	0	possible	4-5
# ::node	0.0	earn-01	5-6
# ::node	0.0.0	date-entity	10-11
# ::node	0.0.0.0	0	10-11
# ::node	0.0.0.1	0	10-11
# ::node	0.0.0.2	10	10-11
# ::node	0.0.1	season	12-13
# ::node	0.0.2	exceed-01	7-8
# ::node	0.0.2.0	monetary-quantity	9-10
# ::node	0.0.2.0.0	dollar	9-10
# ::root	0	possible
# ::edge	date-entity	day	0	0.0.0	0.0.0.0	
# ::edge	date-entity	month	0	0.0.0	0.0.0.1	
# ::edge	date-entity	year	10	0.0.0	0.0.0.2	
# ::edge	earn-01	ARG0	date-entity	0.0	0.0.0	
# ::edge	earn-01	ARG1	season	0.0	0.0.1	
# ::edge	earn-01	ARG3	exceed-01	0.0	0.0.2	
# ::edge	exceed-01	ARG1	monetary-quantity	0.0.2	0.0.2.0	
# ::edge	monetary-quantity	unit	dollar	0.0.2.0	0.0.2.0.0	
# ::edge	possible	domain	earn-01	0	0.0	
(p / possible 
      :domain (e2 / earn-01 
            :ARG0 (d / date-entity 
                  :day 0 
                  :month 0 
                  :year 10) 
            :ARG1 (s / season) 
            :ARG3 (e / exceed-01 
                  :ARG1 (m / monetary-quantity 
                        :unit (d2 / dollar)))))

# ::snt too many questions coupled with an excess of logic could chase away any hopes
# ::tok too many questions coupled with an excess of logic could chase away any hopes
# ::alignments 13-14|0.0.0 12-13|0.0.0.2 11-12|0.0.2 10-11|0.0 9-10|0 8-9|0.0.1.0 6-7|0.0.1 3-4|0.0.0.0.0 2-3|0.0.0.0 1-2|0.0.0.0.0.0 0-1|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:29.188
# ::node	0	possible	9-10
# ::node	0.0	chase-01	10-11
# ::node	0.0.0	hope-01	13-14
# ::node	0.0.0.0	question-01	2-3
# ::node	0.0.0.0.0	couple-01	3-4
# ::node	0.0.0.0.0.0	many	1-2
# ::node	0.0.0.1	too	0-1
# ::node	0.0.0.2	any	12-13
# ::node	0.0.1	exceed-01	6-7
# ::node	0.0.1.0	logic	8-9
# ::node	0.0.2	away	11-12
# ::root	0	possible
# ::edge	chase-01	ARG1	hope-01	0.0	0.0.0	
# ::edge	chase-01	ARG2	exceed-01	0.0	0.0.1	
# ::edge	chase-01	direction	away	0.0	0.0.2	
# ::edge	couple-01	ARG0	many	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	couple-01	ARG1	question-01	0.0.0.0.0	0.0.0.0	
# ::edge	exceed-01	ARG1	logic	0.0.1	0.0.1.0	
# ::edge	hope-01	ARG0	question-01	0.0.0	0.0.0.0	
# ::edge	hope-01	ARG1	too	0.0.0	0.0.0.1	
# ::edge	hope-01	mod	any	0.0.0	0.0.0.2	
# ::edge	possible	domain	chase-01	0	0.0	
(p / possible 
      :domain (c / chase-01 
            :ARG1 (h / hope-01 
                  :ARG0 (q / question-01 
                        :ARG1-of (c2 / couple-01 
                              :ARG0 (m / many))) 
                  :ARG1 (t / too) 
                  :mod (a / any)) 
            :ARG2 (e / exceed-01 
                  :ARG1 (l / logic)) 
            :direction (a2 / away)))

# ::snt markets can take time to wake up to excesses and in the meantime overborrowing by one memberstate could cause a lot of pain for others
# ::tok markets can take time to wake up to excesses and in the meantime overborrowing by one memberstate could cause a lot of pain for others
# ::alignments 24-25|0.1.0.0.0 22-23|0.1.0.0 20-21|0.1.0 18-19|0 17-18|0.1 12-13|0.0 9-10|0.1.0.0.1 5-6|0.1.0.0.1.0 3-4|0.1.0.0.1.0.1 1-2|0.1.0.0.1.0.1.0 0-1|0.1.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:29.343
# ::node	0	cause-01	18-19
# ::node	0.0	meantime	12-13
# ::node	0.1	possible	17-18
# ::node	0.1.0	lot	20-21
# ::node	0.1.0.0	pain-01	22-23
# ::node	0.1.0.0.0	other	24-25
# ::node	0.1.0.0.1	and	9-10
# ::node	0.1.0.0.1.0	wake-02	5-6
# ::node	0.1.0.0.1.0.0	market	0-1
# ::node	0.1.0.0.1.0.1	time	3-4
# ::node	0.1.0.0.1.0.1.0	possible	1-2
# ::root	0	cause-01
# ::edge	and	op1	wake-02	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	and	op2	pain-01	0.1.0.0.1	0.1.0.0	
# ::edge	cause-01	ARG1	meantime	0	0.0	
# ::edge	cause-01	mod	possible	0	0.1	
# ::edge	pain-01	ARG1	other	0.1.0.0	0.1.0.0.0	
# ::edge	pain-01	quant	lot	0.1.0.0	0.1.0	
# ::edge	possible	domain	lot	0.1	0.1.0	
# ::edge	possible	domain	time	0.1.0.0.1.0.1.0	0.1.0.0.1.0.1	
# ::edge	time	prep-to	wake-02	0.1.0.0.1.0.1	0.1.0.0.1.0	
# ::edge	wake-02	ARG0	market	0.1.0.0.1.0	0.1.0.0.1.0.0	
(c / cause-01 
      :ARG1 (m / meantime) 
      :mod (p2 / possible 
            :domain (l / lot 
                  :quant-of (p / pain-01 
                        :ARG1 (o / other) 
                        :op-of (a / and 
                              :op1 (w / wake-02 
                                    :ARG0 (m2 / market) 
                                    :prep-to-of (t / time 
                                          :domain-of (p3 / possible))))))))

# ::snt for a tenant to claim the benefits of the act he must show that his tenancy is of a house that it was originally granted for more than twentyone years that the rent payable is less than twothirds of its rateable value and that the rateable value is itself not in excess of certain modest limits
# ::tok for a tenant to claim the benefits of the act he must show that his tenancy is of a house that it was originally granted for more than twentyone years that the rent payable is less than twothirds of its rateable value and that the rateable value is itself not in excess of certain modest limits
# ::alignments 55-56|0.1.0.0.2 54-55|0.1.0.0.2.1 53-54|0.1.0.0.2.2 51-52|0.1.0.0.2.0 46-47|0.1.0.0.1.0.0.1 42-43|0.1.0.0.1.0 41-42|0.1.0.0.1.0.0 35-36|0.1.0.0.3 32-33|0.1.0.0 29-30|0.1.0.0.0.0+0.1.0.0.0 24-25|0.1.0.0.1 23-24|0.1.0.0.1.2 21-22|0.1.0.0.1.1 19-20|0.1.0.0.1.0.0.0 12-13|0 10-11|0.0 9-10|0.1.0 6-7|0.1 4-5|0.1.1 2-3|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:30.332
# ::node	0	show-01	12-13
# ::node	0.0	he	10-11
# ::node	0.1	benefit-01	6-7
# ::node	0.1.0	act-02	9-10
# ::node	0.1.0.0	rent-01	32-33
# ::node	0.1.0.0.0	temporal-quantity	29-30
# ::node	0.1.0.0.0.0	year	29-30
# ::node	0.1.0.0.1	grant-01	24-25
# ::node	0.1.0.0.1.0	and	42-43
# ::node	0.1.0.0.1.0.0	value-01	41-42
# ::node	0.1.0.0.1.0.0.0	house	19-20
# ::node	0.1.0.0.1.0.0.1	value-01	46-47
# ::node	0.1.0.0.1.1	it	21-22
# ::node	0.1.0.0.1.2	original	23-24
# ::node	0.1.0.0.2	limit-01	55-56
# ::node	0.1.0.0.2.0	exceed-01	51-52
# ::node	0.1.0.0.2.1	modest	54-55
# ::node	0.1.0.0.2.2	certain	53-54
# ::node	0.1.0.0.3	less	35-36
# ::node	0.1.1	claim-01	4-5
# ::node	0.1.1.0	tenant	2-3
# ::root	0	show-01
# ::edge	act-02	ARG1	rent-01	0.1.0	0.1.0.0	
# ::edge	and	op1	value-01	0.1.0.0.1.0	0.1.0.0.1.0.0	
# ::edge	benefit-01	ARG1	act-02	0.1	0.1.0	
# ::edge	claim-01	ARG1	benefit-01	0.1.1	0.1	
# ::edge	exceed-01	ARG1	limit-01	0.1.0.0.2.0	0.1.0.0.2	
# ::edge	grant-01	ARG0	and	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	grant-01	ARG1	it	0.1.0.0.1	0.1.0.0.1.1	
# ::edge	grant-01	degree	original	0.1.0.0.1	0.1.0.0.1.2	
# ::edge	limit-01	ARG1	rent-01	0.1.0.0.2	0.1.0.0	
# ::edge	limit-01	mod	certain	0.1.0.0.2	0.1.0.0.2.2	
# ::edge	limit-01	mod	modest	0.1.0.0.2	0.1.0.0.2.1	
# ::edge	rent-01	ARG0	temporal-quantity	0.1.0.0	0.1.0.0.0	
# ::edge	rent-01	ARG1	grant-01	0.1.0.0	0.1.0.0.1	
# ::edge	rent-01	ARG2	less	0.1.0.0	0.1.0.0.3	
# ::edge	show-01	ARG0	he	0	0.0	
# ::edge	show-01	ARG1	benefit-01	0	0.1	
# ::edge	temporal-quantity	unit	year	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	tenant	purpose	claim-01	0.1.1.0	0.1.1	
# ::edge	value-01	ARG1	house	0.1.0.0.1.0.0	0.1.0.0.1.0.0.0	
# ::edge	value-01	ARG1	value-01	0.1.0.0.1.0.0.1	0.1.0.0.1.0.0	
(s / show-01 
      :ARG0 (h2 / he) 
      :ARG1 (b / benefit-01 
            :ARG1 (a2 / act-02 
                  :ARG1 (r / rent-01 
                        :ARG0 (t / temporal-quantity 
                              :unit (y / year)) 
                        :ARG1 (g / grant-01 
                              :ARG0 (a / and 
                                    :op1 (v2 / value-01 
                                          :ARG1 (h / house) 
                                          :ARG1-of (v / value-01))) 
                              :ARG1 (i / it) 
                              :degree (o / original)) 
                        :ARG1-of (l / limit-01 
                              :ARG1-of (e / exceed-01) 
                              :mod (m / modest) 
                              :mod (c / certain)) 
                        :ARG2 (l2 / less))) 
            :ARG1-of (c2 / claim-01 
                  :purpose-of (t2 / tenant))))

# ::snt it was possible therefore so far as hitler was specifically linked to the boycott at all to see him only in connection with presumed justifiable action and detached from the unfortunate excesses of party activists
# ::tok it was possible therefore so far as hitler was specifically linked to the boycott at all to see him only in connection with presumed justifiable action and detached from the unfortunate excesses of party activists
# ::alignments 34-35|0.0 33-34|0.0.1 30-31|0 26-27|0.0.0.0.2.2 25-26|0.0.0.0.2.2.0.0 24-25|0.0.0.0.2.2.0.0.0 23-24|0.0.0.0.2.2.0 21-22|0.0.0.0.2.2.0.1 19-20|0.0.0.0.2.1 17-18|0.0.0.0.2 15-16|0.0.0.0.2.0 13-14|0.0.0 10-11|0.0.0.0 9-10|0.0.0.0.1 5-6|0.0.0.0.1.0.0 4-5|0.0.0.0.1.0 2-3|0.0.0.0.0.0 0-1|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:30.634
# ::node	0	fortunate-41	30-31
# ::node	0.0	activist	34-35
# ::node	0.0.0	boycott-01	13-14
# ::node	0.0.0.0	link-01	10-11
# ::node	0.0.0.0.0	it	0-1
# ::node	0.0.0.0.0.0	possible	2-3
# ::node	0.0.0.0.1	specific	9-10
# ::node	0.0.0.0.1.0	so	4-5
# ::node	0.0.0.0.1.0.0	far	5-6
# ::node	0.0.0.0.2	see-01	17-18
# ::node	0.0.0.0.2.0	all	15-16
# ::node	0.0.0.0.2.1	only	19-20
# ::node	0.0.0.0.2.2	and	26-27
# ::node	0.0.0.0.2.2.0	presume-01	23-24
# ::node	0.0.0.0.2.2.0.0	action	25-26
# ::node	0.0.0.0.2.2.0.0.0	justify-01	24-25
# ::node	0.0.0.0.2.2.0.1	connect-01	21-22
# ::node	0.0.1	party	33-34
# ::root	0	fortunate-41
# ::edge	action	mod	justify-01	0.0.0.0.2.2.0.0	0.0.0.0.2.2.0.0.0	
# ::edge	activist	mod	party	0.0	0.0.1	
# ::edge	and	op1	see-01	0.0.0.0.2.2	0.0.0.0.2	
# ::edge	and	op2	presume-01	0.0.0.0.2.2	0.0.0.0.2.2.0	
# ::edge	boycott-01	ARG1	activist	0.0.0	0.0	
# ::edge	connect-01	ARG1	presume-01	0.0.0.0.2.2.0.1	0.0.0.0.2.2.0	
# ::edge	far	degree	so	0.0.0.0.1.0.0	0.0.0.0.1.0	
# ::edge	fortunate-41	ARG1	activist	0	0.0	
# ::edge	link-01	ARG0	it	0.0.0.0	0.0.0.0.0	
# ::edge	link-01	ARG1	boycott-01	0.0.0.0	0.0.0	
# ::edge	link-01	manner	specific	0.0.0.0	0.0.0.0.1	
# ::edge	link-01	purpose	see-01	0.0.0.0	0.0.0.0.2	
# ::edge	possible	domain	it	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	presume-01	ARG1	action	0.0.0.0.2.2.0	0.0.0.0.2.2.0.0	
# ::edge	see-01	ARG0	all	0.0.0.0.2	0.0.0.0.2.0	
# ::edge	see-01	mod	only	0.0.0.0.2	0.0.0.0.2.1	
# ::edge	so	mod	specific	0.0.0.0.1.0	0.0.0.0.1	
(f / fortunate-41 
      :ARG1 (a / activist 
            :ARG1-of (b / boycott-01 
                  :ARG1-of (l / link-01 
                        :ARG0 (i / it 
                              :domain-of (p3 / possible)) 
                        :manner (s2 / specific 
                              :mod-of (s3 / so 
                                    :degree-of (f2 / far))) 
                        :purpose (s / see-01 
                              :ARG0 (a4 / all) 
                              :mod (o / only) 
                              :op-of (a2 / and 
                                    :op1 (p2 / presume-01 
                                          :ARG1 (a3 / action 
                                                :mod (j / justify-01)) 
                                          :ARG1-of (c / connect-01)))))) 
            :mod (p / party)))

# ::snt though the excess had been exaggerated by the death of three quarters of a million men in the war the cause was mainly natural more male babies were born but still more died in infancy
# ::tok though the excess had been exaggerated by the death of three quarters of a million men in the war the cause was mainly natural more male babies were born but still more died in infancy
# ::alignments 34-35|0.1.2 32-33|0.1 30-31|0.1.1 29-30|0 28-29|0.2 26-27|0.2.0 25-26|0.0.0.1 23-24|0.0 22-23|0.1.0.0.0.0.0 20-21|0.0.0 18-19|0.1.0 15-16|0.0.0.0 11-12|0.1.0.0.0.0.1 10-11|0.1.0.0.0.0.1.0 8-9|0.1.0.0 5-6|0.1.0.0.0 2-3|0.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:31.135
# ::node	0	contrast-01	29-30
# ::node	0.0	natural	23-24
# ::node	0.0.0	cause-01	20-21
# ::node	0.0.0.0	man	15-16
# ::node	0.0.0.1	male	25-26
# ::node	0.1	die-01	32-33
# ::node	0.1.0	war	18-19
# ::node	0.1.0.0	die-01	8-9
# ::node	0.1.0.0.0	exaggerate-01	5-6
# ::node	0.1.0.0.0.0	exceed-01	2-3
# ::node	0.1.0.0.0.0.0	main	22-23
# ::node	0.1.0.0.0.0.1	quarter	11-12
# ::node	0.1.0.0.0.0.1.0	3	10-11
# ::node	0.1.1	still	30-31
# ::node	0.1.2	infancy	34-35
# ::node	0.2	bear-02	28-29
# ::node	0.2.0	baby	26-27
# ::root	0	contrast-01
# ::edge	bear-02	ARG1	baby	0.2	0.2.0	
# ::edge	cause-01	ARG0	man	0.0.0	0.0.0.0	
# ::edge	cause-01	ARG1	male	0.0.0	0.0.0.1	
# ::edge	contrast-01	ARG1	natural	0	0.0	
# ::edge	contrast-01	ARG2	die-01	0	0.1	
# ::edge	contrast-01	ARG4	bear-02	0	0.2	
# ::edge	die-01	ARG0	war	0.1	0.1.0	
# ::edge	die-01	ARG1	still	0.1	0.1.1	
# ::edge	die-01	ARG1	war	0.1.0.0	0.1.0	
# ::edge	die-01	location	infancy	0.1	0.1.2	
# ::edge	exaggerate-01	ARG1	die-01	0.1.0.0.0	0.1.0.0	
# ::edge	exaggerate-01	ARG2	exceed-01	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	exceed-01	ARG0	main	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	exceed-01	ARG1	quarter	0.1.0.0.0.0	0.1.0.0.0.0.1	
# ::edge	natural	domain	cause-01	0.0	0.0.0	
# ::edge	quarter	quant	3	0.1.0.0.0.0.1	0.1.0.0.0.0.1.0	
(c / contrast-01 
      :ARG1 (n / natural 
            :domain (c2 / cause-01 
                  :ARG0 (m3 / man) 
                  :ARG1 (m / male))) 
      :ARG2 (d / die-01 
            :ARG0 (w / war 
                  :ARG1-of (d2 / die-01 
                        :ARG1-of (e / exaggerate-01 
                              :ARG2 (e2 / exceed-01 
                                    :ARG0 (m2 / main) 
                                    :ARG1 (q / quarter 
                                          :quant 3))))) 
            :ARG1 (s / still) 
            :location (i / infancy)) 
      :ARG4 (b / bear-02 
            :ARG1 (b2 / baby)))

# ::snt major works by anselm kiefer previously thought to be in saatchis possession were it was said changing hands for prices in excess of dollars 1m saatchi was rumoured to be selling equally major pictures from his unrivalled holdings of works by georg baselitz francesco clemente julian schnabel and others
# ::tok major works by anselm kiefer previously thought to be in saatchis possession were it was said changing hands for prices in excess of dollars 1m saatchi was rumoured to be selling equally major pictures from his unrivalled holdings of works by georg baselitz francesco clemente julian schnabel and others
# ::alignments 48-49|0.1.0.0.0.1.0.0 47-48|0.1.0.0.0.1.0 37-38|0.1.0.0.0.1 33-34|0.1.0.0.0 32-33|0.1.0.0.0.0 31-32|0.0.0 30-31|0.1.0.0 23-24|0.1.1.0.0.1.0+0.1.1.0.0.1 21-22|0.1.1.0.0 19-20|0.1.1.0 17-18|0.1.1 16-17|0.1 15-16|0 13-14|0.1.0 11-12|0.0 6-7|0.0.1 5-6|0.0.1.0 0-1|0.1.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:32.081
# ::node	0	say-01	15-16
# ::node	0.0	possess-01	11-12
# ::node	0.0.0	equal	31-32
# ::node	0.0.1	think-01	6-7
# ::node	0.0.1.0	previous	5-6
# ::node	0.1	change-01	16-17
# ::node	0.1.0	it	13-14
# ::node	0.1.0.0	sell-01	30-31
# ::node	0.1.0.0.0	picture	33-34
# ::node	0.1.0.0.0.0	major	32-33
# ::node	0.1.0.0.0.1	hold-01	37-38
# ::node	0.1.0.0.0.1.0	and	47-48
# ::node	0.1.0.0.0.1.0.0	other	48-49
# ::node	0.1.1	hand	17-18
# ::node	0.1.1.0	price-01	19-20
# ::node	0.1.1.0.0	exceed-01	21-22
# ::node	0.1.1.0.0.0	major	0-1
# ::node	0.1.1.0.0.1	monetary-quantity	23-24
# ::node	0.1.1.0.0.1.0	dollar	23-24
# ::root	0	say-01
# ::edge	and	op1	other	0.1.0.0.0.1.0	0.1.0.0.0.1.0.0	
# ::edge	change-01	ARG0	it	0.1	0.1.0	
# ::edge	change-01	ARG1	hand	0.1	0.1.1	
# ::edge	exceed-01	ARG0	major	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	exceed-01	ARG1	monetary-quantity	0.1.1.0.0	0.1.1.0.0.1	
# ::edge	hold-01	ARG1	and	0.1.0.0.0.1	0.1.0.0.0.1.0	
# ::edge	monetary-quantity	unit	dollar	0.1.1.0.0.1	0.1.1.0.0.1.0	
# ::edge	picture	mod	major	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	picture	poss	hold-01	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	possess-01	ARG1	equal	0.0	0.0.0	
# ::edge	price-01	ARG1	exceed-01	0.1.1.0	0.1.1.0.0	
# ::edge	price-01	part	hand	0.1.1.0	0.1.1	
# ::edge	say-01	ARG0	possess-01	0	0.0	
# ::edge	say-01	ARG1	change-01	0	0.1	
# ::edge	sell-01	ARG0	it	0.1.0.0	0.1.0	
# ::edge	sell-01	ARG1	picture	0.1.0.0	0.1.0.0.0	
# ::edge	think-01	ARG1	possess-01	0.0.1	0.0	
# ::edge	think-01	time	previous	0.0.1	0.0.1.0	
(s2 / say-01 
      :ARG0 (p3 / possess-01 
            :ARG1 (e / equal) 
            :ARG1-of (t / think-01 
                  :time (p4 / previous))) 
      :ARG1 (c / change-01 
            :ARG0 (i / it 
                  :ARG0-of (s / sell-01 
                        :ARG1 (p / picture 
                              :mod (m / major) 
                              :poss (h / hold-01 
                                    :ARG1 (a / and 
                                          :op1 (o / other)))))) 
            :ARG1 (h2 / hand 
                  :part-of (p2 / price-01 
                        :ARG1 (e2 / exceed-01 
                              :ARG0 (m3 / major) 
                              :ARG1 (m2 / monetary-quantity 
                                    :unit (d / dollar)))))))

# ::snt ratio scales are the most advanced available to us and very often are in excess of needs
# ::tok ratio scales are the most advanced available to us and very often are in excess of needs
# ::alignments 16-17|0.0 14-15|0.0.0 11-12|0.1.0.1.0 10-11|0.1.0.1.0.0 9-10|0 6-7|0.1 5-6|0.1.0 4-5|0.1.0.1 1-2|0.1.0.0 0-1|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:32.178
# ::node	0	and	9-10
# ::node	0.0	need-01	16-17
# ::node	0.0.0	exceed-01	14-15
# ::node	0.1	available	6-7
# ::node	0.1.0	advance-01	5-6
# ::node	0.1.0.0	scale	1-2
# ::node	0.1.0.0.0	ratio	0-1
# ::node	0.1.0.1	most	4-5
# ::node	0.1.0.1.0	often	11-12
# ::node	0.1.0.1.0.0	very	10-11
# ::root	0	and
# ::edge	advance-01	ARG0	scale	0.1.0	0.1.0.0	
# ::edge	advance-01	ARG1	available	0.1.0	0.1	
# ::edge	advance-01	ARG2	most	0.1.0	0.1.0.1	
# ::edge	and	op1	available	0	0.1	
# ::edge	exceed-01	ARG1	need-01	0.0.0	0.0	
# ::edge	need-01	ARG1	and	0.0	0	
# ::edge	often	degree	most	0.1.0.1.0	0.1.0.1	
# ::edge	often	mod	very	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	scale	mod	ratio	0.1.0.0	0.1.0.0.0	
(a / and 
      :ARG1-of (n / need-01 
            :ARG1-of (e / exceed-01)) 
      :op1 (a2 / available 
            :ARG1-of (a3 / advance-01 
                  :ARG0 (s / scale 
                        :mod (r / ratio)) 
                  :ARG2 (m / most 
                        :degree-of (o / often 
                              :mod (v / very))))))

# ::snt citibank the lead banker arranging finance for the group issued a statement claiming substantial expressions of interest from potential lenders significantly in excess of what is required for the new dollars 6
# ::tok citibank the lead banker arranging finance for the group issued a statement claiming substantial expressions of interest from potential lenders significantly in excess of what is required for the new dollars 6
# ::alignments 31-32|0.0 30-31|0.1.1.0.0.0.0.0.0+0.1.1.0.0.0.0.0 29-30|0.1.1.0.0.0.0.0.0.0 26-27|0.1.1.0.0.0.0 22-23|0.1.1.0.0.0 20-21|0.1.1.1 19-20|0.1.1.0.0 18-19|0.1.1.0.0.1 16-17|0.1.1.0 13-14|0.1.1.0.0.2 12-13|0.1.1 11-12|0 9-10|0.1 8-9|0.1.0 5-6|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:32.509
# ::node	0	state-01	11-12
# ::node	0.0	6	31-32
# ::node	0.1	issue-01	9-10
# ::node	0.1.0	group	8-9
# ::node	0.1.0.0	finance-01	5-6
# ::node	0.1.1	claim-01	12-13
# ::node	0.1.1.0	interest-01	16-17
# ::node	0.1.1.0.0	lend-01	19-20
# ::node	0.1.1.0.0.0	exceed-01	22-23
# ::node	0.1.1.0.0.0.0	require-01	26-27
# ::node	0.1.1.0.0.0.0.0	monetary-quantity	30-31
# ::node	0.1.1.0.0.0.0.0.0	dollar	30-31
# ::node	0.1.1.0.0.0.0.0.0.0	new	29-30
# ::node	0.1.1.0.0.1	potential	18-19
# ::node	0.1.1.0.0.2	substantial	13-14
# ::node	0.1.1.1	significant	20-21
# ::root	0	state-01
# ::edge	claim-01	ARG1	interest-01	0.1.1	0.1.1.0	
# ::edge	claim-01	degree	significant	0.1.1	0.1.1.1	
# ::edge	dollar	mod	new	0.1.1.0.0.0.0.0.0	0.1.1.0.0.0.0.0.0.0	
# ::edge	exceed-01	ARG1	require-01	0.1.1.0.0.0	0.1.1.0.0.0.0	
# ::edge	finance-01	ARG1	group	0.1.0.0	0.1.0	
# ::edge	interest-01	ARG1	lend-01	0.1.1.0	0.1.1.0.0	
# ::edge	issue-01	ARG0	group	0.1	0.1.0	
# ::edge	issue-01	ARG1	state-01	0.1	0	
# ::edge	issue-01	ARG2	claim-01	0.1	0.1.1	
# ::edge	lend-01	ARG1	exceed-01	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	lend-01	mod	potential	0.1.1.0.0	0.1.1.0.0.1	
# ::edge	lend-01	mod	substantial	0.1.1.0.0	0.1.1.0.0.2	
# ::edge	monetary-quantity	unit	dollar	0.1.1.0.0.0.0.0	0.1.1.0.0.0.0.0.0	
# ::edge	require-01	ARG0	monetary-quantity	0.1.1.0.0.0.0	0.1.1.0.0.0.0.0	
# ::edge	state-01	ARG1	6	0	0.0	
(s3 / state-01 
      :ARG1 6 
      :ARG1-of (i2 / issue-01 
            :ARG0 (g / group 
                  :ARG1-of (f / finance-01)) 
            :ARG2 (c / claim-01 
                  :ARG1 (i / interest-01 
                        :ARG1 (l / lend-01 
                              :ARG1 (e / exceed-01 
                                    :ARG1 (r / require-01 
                                          :ARG0 (m / monetary-quantity 
                                                :unit (d / dollar 
                                                      :mod (n / new))))) 
                              :mod (p / potential) 
                              :mod (s2 / substantial))) 
                  :degree (s / significant))))

# ::snt acts done in excess of such powers are legally void and will if necessary be restrained by the courts
# ::tok acts done in excess of such powers are legally void and will if necessary be restrained by the courts
# ::alignments 18-19|0.2.0 15-16|0.2 10-11|0 9-10|0.1 8-9|0.1.0 6-7|0.0.0 5-6|0.0.0.0 3-4|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:32.571
# ::node	0	and	10-11
# ::node	0.0	exceed-01	3-4
# ::node	0.0.0	power	6-7
# ::node	0.0.0.0	such	5-6
# ::node	0.1	void	9-10
# ::node	0.1.0	legal	8-9
# ::node	0.2	restrain-01	15-16
# ::node	0.2.0	court	18-19
# ::root	0	and
# ::edge	and	op1	exceed-01	0	0.0	
# ::edge	and	op2	void	0	0.1	
# ::edge	and	op3	restrain-01	0	0.2	
# ::edge	exceed-01	ARG1	power	0.0	0.0.0	
# ::edge	power	mod	such	0.0.0	0.0.0.0	
# ::edge	restrain-01	ARG1	court	0.2	0.2.0	
# ::edge	void	manner	legal	0.1	0.1.0	
(a / and 
      :op1 (e / exceed-01 
            :ARG1 (p / power 
                  :mod (s / such))) 
      :op2 (v / void 
            :manner (l / legal)) 
      :op3 (r / restrain-01 
            :ARG1 (c / court)))

# ::snt you should also pick a policy which allows you to pay only the excess on your insurance at the resort with the balance of your medical bills settled by the insurer
# ::tok you should also pick a policy which allows you to pay only the excess on your insurance at the resort with the balance of your medical bills settled by the insurer
# ::alignments 27-28|0.0.1.0.0.0.0.0.0.0 26-27|0.0.1.0.0.0.0.0.0 25-26|0.0.1.0.0.0.0.0.0.1 22-23|0.0.1.0.0.0.0.0 19-20|0.0.1.0.0.0.0 16-17|0.0.1.0.0.1.0 13-14|0.0.1.0.0.1 11-12|0.0.1.0.0.1.1 10-11|0.0.1.0.0 8-9|0.0.1.0.0.0 7-8|0.0.1.0 5-6|0.0.1 3-4|0.0 2-3|0.0.2 1-2|0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:32.692
# ::node	0	recommend-01	1-2
# ::node	0.0	pick-01	3-4
# ::node	0.0.0	you	0-1
# ::node	0.0.1	policy	5-6
# ::node	0.0.1.0	allow-01	7-8
# ::node	0.0.1.0.0	pay-01	10-11
# ::node	0.0.1.0.0.0	you	8-9
# ::node	0.0.1.0.0.0.0	resort-01	19-20
# ::node	0.0.1.0.0.0.0.0	balance-01	22-23
# ::node	0.0.1.0.0.0.0.0.0	bill-01	26-27
# ::node	0.0.1.0.0.0.0.0.0.0	settle-03	27-28
# ::node	0.0.1.0.0.0.0.0.0.1	medicine	25-26
# ::node	0.0.1.0.0.1	exceed-01	13-14
# ::node	0.0.1.0.0.1.0	insure-02	16-17
# ::node	0.0.1.0.0.1.1	only	11-12
# ::node	0.0.2	also	2-3
# ::root	0	recommend-01
# ::edge	allow-01	ARG0	policy	0.0.1.0	0.0.1	
# ::edge	allow-01	ARG1	pay-01	0.0.1.0	0.0.1.0.0	
# ::edge	balance-01	ARG1	bill-01	0.0.1.0.0.0.0.0	0.0.1.0.0.0.0.0.0	
# ::edge	bill-01	ARG3	medicine	0.0.1.0.0.0.0.0.0	0.0.1.0.0.0.0.0.0.1	
# ::edge	exceed-01	ARG1	insure-02	0.0.1.0.0.1	0.0.1.0.0.1.0	
# ::edge	exceed-01	mod	only	0.0.1.0.0.1	0.0.1.0.0.1.1	
# ::edge	pay-01	ARG0	you	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	pay-01	ARG1	exceed-01	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	pick-01	ARG0	you	0.0	0.0.0	
# ::edge	pick-01	ARG1	policy	0.0	0.0.1	
# ::edge	pick-01	mod	also	0.0	0.0.2	
# ::edge	recommend-01	ARG1	pick-01	0	0.0	
# ::edge	resort-01	ARG0	you	0.0.1.0.0.0.0	0.0.1.0.0.0	
# ::edge	resort-01	ARG1	balance-01	0.0.1.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	settle-03	ARG1	bill-01	0.0.1.0.0.0.0.0.0.0	0.0.1.0.0.0.0.0.0	
(r2 / recommend-01 
      :ARG1 (p3 / pick-01 
            :ARG0 (y2 / you) 
            :ARG1 (p2 / policy 
                  :ARG0-of (a / allow-01 
                        :ARG1 (p / pay-01 
                              :ARG0 (y / you 
                                    :ARG0-of (r / resort-01 
                                          :ARG1 (b2 / balance-01 
                                                :ARG1 (b / bill-01 
                                                      :ARG1-of (s / settle-03) 
                                                      :ARG3 (m / medicine))))) 
                              :ARG1 (e / exceed-01 
                                    :ARG1 (i / insure-02) 
                                    :mod (o / only))))) 
            :mod (a2 / also)))

# ::snt you will contribute a sum to the community charge to cover the first 20 per cent of that charge and then will pay 15 per cent of the excess of income over needs to the balance dash
# ::tok you will contribute a sum to the community charge to cover the first 20 per cent of that charge and then will pay 15 per cent of the excess of income over needs to the balance dash
# ::alignments 35-36|0.0.0.0.0 32-33|0.0.0.0 30-31|0.0.0.0.0.1 28-29|0.0.0.0.0.1.0 25-26|0.0.0.1.1.0+0.0.0.1.1 23-24|0.0.0.1.0 22-23|0.0.0.1 20-21|0.0.0.1.2 19-20|0 15-16|0.1.0+0.1 13-14|0.0.0.0.0.0 7-8|0.0.0.0.0.1.0.0 4-5|0.0.1 2-3|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:33.091
# ::node	0	and	19-20
# ::node	0.0	contribute-01	2-3
# ::node	0.0.0	you	0-1
# ::node	0.0.0.0	need-01	32-33
# ::node	0.0.0.0.0	balance-01	35-36
# ::node	0.0.0.0.0.0	20	13-14
# ::node	0.0.0.0.0.1	income	30-31
# ::node	0.0.0.0.0.1.0	exceed-01	28-29
# ::node	0.0.0.0.0.1.0.0	community	7-8
# ::node	0.0.0.1	pay-01	22-23
# ::node	0.0.0.1.0	15	23-24
# ::node	0.0.0.1.1	monetary-quantity	25-26
# ::node	0.0.0.1.1.0	cent	25-26
# ::node	0.0.0.1.2	then	20-21
# ::node	0.0.1	sum	4-5
# ::node	0.1	monetary-quantity	15-16
# ::node	0.1.0	cent	15-16
# ::root	0	and
# ::edge	and	op1	contribute-01	0	0.0	
# ::edge	and	op2	monetary-quantity	0	0.1	
# ::edge	balance-01	ARG0	20	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	balance-01	ARG1	income	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	contribute-01	ARG0	you	0.0	0.0.0	
# ::edge	contribute-01	ARG1	sum	0.0	0.0.1	
# ::edge	exceed-01	ARG0	community	0.0.0.0.0.1.0	0.0.0.0.0.1.0.0	
# ::edge	exceed-01	ARG1	income	0.0.0.0.0.1.0	0.0.0.0.0.1	
# ::edge	monetary-quantity	unit	cent	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	monetary-quantity	unit	cent	0.1	0.1.0	
# ::edge	need-01	ARG0	you	0.0.0.0	0.0.0	
# ::edge	need-01	ARG1	balance-01	0.0.0.0	0.0.0.0.0	
# ::edge	pay-01	ARG0	you	0.0.0.1	0.0.0	
# ::edge	pay-01	ARG1	15	0.0.0.1	0.0.0.1.0	
# ::edge	pay-01	location	monetary-quantity	0.0.0.1	0.0.0.1.1	
# ::edge	pay-01	time	then	0.0.0.1	0.0.0.1.2	
(a / and 
      :op1 (c4 / contribute-01 
            :ARG0 (y / you 
                  :ARG0-of (n / need-01 
                        :ARG1 (b / balance-01 
                              :ARG0 20 
                              :ARG1 (i / income 
                                    :ARG1-of (e / exceed-01 
                                          :ARG0 (c3 / community))))) 
                  :ARG0-of (p / pay-01 
                        :ARG1 15 
                        :location (m / monetary-quantity 
                              :unit (c / cent)) 
                        :time (t / then))) 
            :ARG1 (s / sum)) 
      :op2 (m2 / monetary-quantity 
            :unit (c2 / cent)))

# ::snt and though once she hit her formidable histrionic stride it was possible to feel that a little of bette davis went a long way her excesses were surely preferable to the homogenised blandness of those massproduced hollywood sirens of whom a lot went a very little way indeed
# ::tok and though once she hit her formidable histrionic stride it was possible to feel that a little of bette davis went a long way her excesses were surely preferable to the homogenised blandness of those massproduced hollywood sirens of whom a lot went a very little way indeed
# ::alignments 47-48|0.0.0.1.0.0.0.0.0.0.0 46-47|0.0.0.1.0.0.0.0.0.0 45-46|0.0.0.1.0.0.0.0.0 44-45|0.0.0.1.0.0.0.0 41-42|0.0.0.1.0.0.0.0.0.0.1 36-37|0.0.0.1.0.2.0.0+0.0.0.1.0.2.0+0.0.0.1.0.2 28-29|0.0.0.1.0.0.0 27-28|0.0.0.1.0.0.0.1 23-24|0.0.0.1.0.0 16-17|0.0.0.1.0.0.1 13-14|0.0.0.1.0 11-12|0.0.0.1.0.1 9-10|0.0.0.1 4-5|0.0.0 3-4|0.0.0.0 2-3|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:33.460
# ::node	0	and	0-1
# ::node	0.0	once	2-3
# ::node	0.0.0	hit-01	4-5
# ::node	0.0.0.0	she	3-4
# ::node	0.0.0.1	it	9-10
# ::node	0.0.0.1.0	feel-01	13-14
# ::node	0.0.0.1.0.0	way	23-24
# ::node	0.0.0.1.0.0.0	prefer-01	28-29
# ::node	0.0.0.1.0.0.0.0	very	44-45
# ::node	0.0.0.1.0.0.0.0.0	little	45-46
# ::node	0.0.0.1.0.0.0.0.0.0	way	46-47
# ::node	0.0.0.1.0.0.0.0.0.0.0	indeed	47-48
# ::node	0.0.0.1.0.0.0.0.0.0.1	lot	41-42
# ::node	0.0.0.1.0.0.0.1	sure	27-28
# ::node	0.0.0.1.0.0.1	little	16-17
# ::node	0.0.0.1.0.1	possible	11-12
# ::node	0.0.0.1.0.2	organization	36-37
# ::node	0.0.0.1.0.2.0	name	36-37
# ::node	0.0.0.1.0.2.0.0	"Hollywood"	36-37
# ::root	0	and
# ::edge	and	op1	once	0	0.0	
# ::edge	feel-01	ARG0	it	0.0.0.1.0	0.0.0.1	
# ::edge	feel-01	ARG1	way	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	hit-01	ARG0	she	0.0.0	0.0.0.0	
# ::edge	hit-01	concession	it	0.0.0	0.0.0.1	
# ::edge	little	degree	very	0.0.0.1.0.0.0.0.0	0.0.0.1.0.0.0.0	
# ::edge	lot	mod	way	0.0.0.1.0.0.0.0.0.0.1	0.0.0.1.0.0.0.0.0.0	
# ::edge	name	op1	"Hollywood"	0.0.0.1.0.2.0	0.0.0.1.0.2.0.0	
# ::edge	once	op1	hit-01	0.0	0.0.0	
# ::edge	organization	name	name	0.0.0.1.0.2	0.0.0.1.0.2.0	
# ::edge	organization	op1	feel-01	0.0.0.1.0.2	0.0.0.1.0	
# ::edge	possible	domain	feel-01	0.0.0.1.0.1	0.0.0.1.0	
# ::edge	prefer-01	ARG0	very	0.0.0.1.0.0.0	0.0.0.1.0.0.0.0	
# ::edge	prefer-01	ARG1	way	0.0.0.1.0.0.0	0.0.0.1.0.0	
# ::edge	prefer-01	mod	sure	0.0.0.1.0.0.0	0.0.0.1.0.0.0.1	
# ::edge	way	direction	indeed	0.0.0.1.0.0.0.0.0.0	0.0.0.1.0.0.0.0.0.0.0	
# ::edge	way	mod	little	0.0.0.1.0.0.0.0.0.0	0.0.0.1.0.0.0.0.0	
# ::edge	way	poss	little	0.0.0.1.0.0	0.0.0.1.0.0.1	
(a / and 
      :op1 (o2 / once 
            :op1 (h / hit-01 
                  :ARG0 (s2 / she) 
                  :concession (i2 / it 
                        :ARG0-of (f / feel-01 
                              :ARG1 (w2 / way 
                                    :ARG1-of (p / prefer-01 
                                          :ARG0 (v / very 
                                                :degree-of (l / little 
                                                      :mod-of (w / way 
                                                            :direction (i / indeed) 
                                                            :mod-of (l2 / lot)))) 
                                          :mod (s / sure)) 
                                    :poss (l3 / little)) 
                              :domain-of (p2 / possible) 
                              :op-of (o / organization 
                                    :name (n / name 
                                          :op1 "Hollywood")))))))

# ::snt this excess of fear has been displayed by weanling thoroughbreds being prepared for public auction
# ::tok this excess of fear has been displayed by weanling thoroughbreds being prepared for public auction
# ::alignments 14-15|0.0.0 13-14|0.0.0.0 11-12|0.0 6-7|0.1.0 3-4|0 1-2|0.1 0-1|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:33.528
# ::node	0	fear-01	3-4
# ::node	0.0	prepare-02	11-12
# ::node	0.0.0	auction-01	14-15
# ::node	0.0.0.0	public	13-14
# ::node	0.1	exceed-01	1-2
# ::node	0.1.0	display-01	6-7
# ::node	0.1.1	this	0-1
# ::root	0	fear-01
(f / fear-01 
      :ARG1-of (p2 / prepare-02 
            :ARG2 (a / auction-01 
                  :mod (p / public))) 
      :ARG2-of (e / exceed-01 
            :ARG1-of (d / display-01) 
            :mod (t / this)))

# ::snt 9m extraordinary first half profit and the sale of felton should bring a 25m excess in the second half
# ::tok 9m extraordinary first half profit and the sale of felton should bring a 25m excess in the second half
# ::alignments 18-19|0.0.1.0 14-15|0.0.1 11-12|0.0 10-11|0 5-6|0.0.0 4-5|0.0.0.0 3-4|0.0.0.0.0 1-2|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:33.586
# ::node	0	recommend-01	10-11
# ::node	0.0	bring-01	11-12
# ::node	0.0.0	and	5-6
# ::node	0.0.0.0	profit-01	4-5
# ::node	0.0.0.0.0	half	3-4
# ::node	0.0.0.0.1	extraordinary	1-2
# ::node	0.0.1	exceed-01	14-15
# ::node	0.0.1.0	half	18-19
# ::root	0	recommend-01
# ::edge	and	op1	profit-01	0.0.0	0.0.0.0	
# ::edge	bring-01	ARG0	and	0.0	0.0.0	
# ::edge	bring-01	ARG1	exceed-01	0.0	0.0.1	
# ::edge	exceed-01	ARG1	half	0.0.1	0.0.1.0	
# ::edge	profit-01	ARG0	half	0.0.0.0	0.0.0.0.0	
# ::edge	profit-01	mod	extraordinary	0.0.0.0	0.0.0.0.1	
# ::edge	recommend-01	ARG1	bring-01	0	0.0	
(r / recommend-01 
      :ARG1 (b / bring-01 
            :ARG0 (a / and 
                  :op1 (p / profit-01 
                        :ARG0 (h2 / half) 
                        :mod (e2 / extraordinary))) 
            :ARG1 (e / exceed-01 
                  :ARG1 (h / half))))

# ::snt courage picked up the tab in excess of 70000 and everything else fell into place in creating the right atmosphere for the challenge match
# ::tok courage picked up the tab in excess of 70000 and everything else fell into place in creating the right atmosphere for the challenge match
# ::alignments 23-24|0.1.0 22-23|0.1.0.0 19-20|0.1 16-17|0 14-15|0.0.0.0 12-13|0.0.0 11-12|0.0.1 10-11|0.0 9-10|0.0.2 8-9|0.0.2.0.0.1.0 6-7|0.0.2.0.0.1 4-5|0.0.2.0.0.0 1-2|0.0.2.0.0 0-1|0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:33.696
# ::node	0	create-01	16-17
# ::node	0.0	everything	10-11
# ::node	0.0.0	fall-01	12-13
# ::node	0.0.0.0	place	14-15
# ::node	0.0.1	else	11-12
# ::node	0.0.2	and	9-10
# ::node	0.0.2.0	courage	0-1
# ::node	0.0.2.0.0	pick-04	1-2
# ::node	0.0.2.0.0.0	tab	4-5
# ::node	0.0.2.0.0.1	exceed-01	6-7
# ::node	0.0.2.0.0.1.0	70000	8-9
# ::node	0.1	atmosphere	19-20
# ::node	0.1.0	match-01	23-24
# ::node	0.1.0.0	challenge-01	22-23
# ::root	0	create-01
# ::edge	and	op1	courage	0.0.2	0.0.2.0	
# ::edge	and	op2	everything	0.0.2	0.0	
# ::edge	challenge-01	ARG1	match-01	0.1.0.0	0.1.0	
# ::edge	create-01	ARG0	everything	0	0.0	
# ::edge	create-01	ARG1	atmosphere	0	0.1	
# ::edge	everything	mod	else	0.0	0.0.1	
# ::edge	exceed-01	time	70000	0.0.2.0.0.1	0.0.2.0.0.1.0	
# ::edge	fall-01	ARG1	everything	0.0.0	0.0	
# ::edge	fall-01	location	place	0.0.0	0.0.0.0	
# ::edge	match-01	ARG1	atmosphere	0.1.0	0.1	
# ::edge	pick-04	ARG1	courage	0.0.2.0.0	0.0.2.0	
# ::edge	pick-04	ARG2	tab	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	pick-04	location	exceed-01	0.0.2.0.0	0.0.2.0.0.1	
(c2 / create-01 
      :ARG0 (e2 / everything 
            :ARG1-of (f / fall-01 
                  :location (p / place)) 
            :mod (e / else) 
            :op-of (a2 / and 
                  :op1 (c3 / courage 
                        :ARG1-of (p2 / pick-04 
                              :ARG2 (t / tab) 
                              :location (e3 / exceed-01 
                                    :time 70000))))) 
      :ARG1 (a / atmosphere 
            :ARG1-of (m / match-01 
                  :ARG1-of (c / challenge-01))))

# ::snt it was europe which drove her to excesses which helped to lose her the elections to the european parliament last june
# ::tok it was europe which drove her to excesses which helped to lose her the elections to the european parliament last june
# ::alignments 20-21|0.0.1+0.0 19-20|0.0.0 18-19|0.2.1.0+0.2.1+0.2 17-18|0.2.0.0.0+0.2.0.0+0.2.0 14-15|0 11-12|0.1 9-10|0.1.0 4-5|0.1.0.0 2-3|0.1.0.0.0.1.0+0.1.0.0.0.1+0.1.0.0.0 0-1|0.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:33.769
# ::node	0	elect-01	14-15
# ::node	0.0	date-entity	20-21
# ::node	0.0.0	last	19-20
# ::node	0.0.1	6	20-21
# ::node	0.1	lose-02	11-12
# ::node	0.1.0	help-01	9-10
# ::node	0.1.0.0	drive-02	4-5
# ::node	0.1.0.0.0	continent	2-3
# ::node	0.1.0.0.0.0	it	0-1
# ::node	0.1.0.0.0.1	name	2-3
# ::node	0.1.0.0.0.1.0	"Europe"	2-3
# ::node	0.2	government-organization	18-19
# ::node	0.2.0	continent	17-18
# ::node	0.2.0.0	name	17-18
# ::node	0.2.0.0.0	"Europe"	17-18
# ::node	0.2.1	name	18-19
# ::node	0.2.1.0	"Parliament"	18-19
# ::root	0	elect-01
# ::edge	continent	domain	it	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	continent	name	name	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	continent	name	name	0.2.0	0.2.0.0	
# ::edge	date-entity	mod	last	0.0	0.0.0	
# ::edge	date-entity	month	6	0.0	0.0.1	
# ::edge	drive-02	ARG0	continent	0.1.0.0	0.1.0.0.0	
# ::edge	drive-02	ARG1	help-01	0.1.0.0	0.1.0	
# ::edge	elect-01	ARG1	date-entity	0	0.0	
# ::edge	elect-01	ARG2	government-organization	0	0.2	
# ::edge	government-organization	mod	continent	0.2	0.2.0	
# ::edge	government-organization	name	name	0.2	0.2.1	
# ::edge	help-01	ARG1	lose-02	0.1.0	0.1	
# ::edge	lose-02	ARG1	elect-01	0.1	0	
# ::edge	name	op1	"Europe"	0.1.0.0.0.1	0.1.0.0.0.1.0	
# ::edge	name	op1	"Europe"	0.2.0.0	0.2.0.0.0	
# ::edge	name	op1	"Parliament"	0.2.1	0.2.1.0	
(e / elect-01 
      :ARG1 (d / date-entity 
            :mod (l / last) 
            :month 6) 
      :ARG1-of (l2 / lose-02 
            :ARG1-of (h / help-01 
                  :ARG1-of (d2 / drive-02 
                        :ARG0 (c2 / continent 
                              :domain (i / it) 
                              :name (n3 / name 
                                    :op1 "Europe"))))) 
      :ARG2 (g / government-organization 
            :mod (c / continent 
                  :name (n2 / name 
                        :op1 "Europe")) 
            :name (n / name 
                  :op1 "Parliament")))

# ::snt excess money supply is like a tap attached to a hosepipe which is about two years in length, reesmogg proved the point by showing that during 196573 the growth of m3 in excess of output growth averaged 9
# ::tok excess money supply is like a tap attached to a hosepipe which is about two years in length , reesmogg proved the point by showing that during 196573 the growth of m3 in excess of output growth averaged 9
# ::alignments 38-39|0.1 36-37|0.0.0.0.0.0 35-36|0.0.0.0.0 33-34|0.0.0.0.0.0.1 29-30|0.0.0.0 27-28|0.0.1.2+0.0.1.1+0.0.1.0+0.0.1 24-25|0.0.0 22-23|0.0.0.1.1 20-21|0.0.0.1 17-18|0 15-16|0.0.0.0.0.0.0.0.0+0.0.0.0.0.0.0.0 14-15|0.0.0.0.0.0.0 7-8|0.0.2 6-7|0.0 2-3|0.0.0.1.0 1-2|0.0.0.1.0.0 0-1|0.0.0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:34.286
# ::node	0	length	17-18
# ::node	0.0	tap-03	6-7
# ::node	0.0.0	show-01	24-25
# ::node	0.0.0.0	grow-01	29-30
# ::node	0.0.0.0.0	output	35-36
# ::node	0.0.0.0.0.0	grow-01	36-37
# ::node	0.0.0.0.0.0.0	2	14-15
# ::node	0.0.0.0.0.0.0.0	temporal-quantity	15-16
# ::node	0.0.0.0.0.0.0.0.0	year	15-16
# ::node	0.0.0.0.0.0.1	exceed-01	33-34
# ::node	0.0.0.1	prove-01	20-21
# ::node	0.0.0.1.0	supply-01	2-3
# ::node	0.0.0.1.0.0	money	1-2
# ::node	0.0.0.1.0.1	exceed-01	0-1
# ::node	0.0.0.1.1	point	22-23
# ::node	0.0.1	date-entity	27-28
# ::node	0.0.1.0	73	27-28
# ::node	0.0.1.1	65	27-28
# ::node	0.0.1.2	19	27-28
# ::node	0.0.2	attach-01	7-8
# ::node	0.1	9	38-39
# ::root	0	length
(l / length 
      :ARG0-of (t2 / tap-03 
            :ARG0-of (s / show-01 
                  :ARG1 (g2 / grow-01 
                        :ARG1 (o / output 
                              :ARG1-of (g / grow-01 
                                    :ARG0 (2 / 2 
                                          :quant-of (t / temporal-quantity 
                                                :unit (y / year))) 
                                    :ARG1-of (e / exceed-01)))) 
                  :ARG2-of (p2 / prove-01 
                        :ARG0 (s2 / supply-01 
                              :ARG1 (m / money) 
                              :ARG1-of (e2 / exceed-01)) 
                        :ARG1 (p / point))) 
            :ARG1 (d / date-entity 
                  :day 73 
                  :month 65 
                  :year 19) 
            :ARG1-of (a / attach-01)) 
      :poss-of 9)

# ::snt lord belhaven is modestly priced in excess of 300000
# ::tok lord belhaven is modestly priced in excess of 300000
# ::alignments 8-9|0.0.1 6-7|0.0 4-5|0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:34.296
# ::node	0	price-01	4-5
# ::node	0.0	exceed-01	6-7
# ::node	0.0.0	lord	0-1
# ::node	0.0.1	300000	8-9
# ::root	0	price-01
# ::edge	exceed-01	ARG0	lord	0.0	0.0.0	
# ::edge	exceed-01	time	300000	0.0	0.0.1	
# ::edge	price-01	ARG1	exceed-01	0	0.0	
(p / price-01 
      :ARG1 (e / exceed-01 
            :ARG0 (l / lord) 
            :time 300000))

# ::snt mr cook added that canada and other countries were rapidly moving toward merger agreements and that drt would boast a fee income in excess of dollars 3
# ::tok mr cook added that canada and other countries were rapidly moving toward merger agreements and that drt would boast a fee income in excess of dollars 3
# ::alignments 26-27|0.0 25-26|0.1.1.0.0.0+0.1.1.0.0 23-24|0.1.1.0 21-22|0.1.1.2 20-21|0.1.1.2.0 14-15|0.1.4 13-14|0.1.2 12-13|0.1.2.0 10-11|0.1 9-10|0.1.3 7-8|0.1.1 6-7|0.1.1.1 5-6|0.1.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:34.458
# ::node	0	add-01	2-3
# ::node	0.0	3	26-27
# ::node	0.1	move-01	10-11
# ::node	0.1.0	and	5-6
# ::node	0.1.1	country	7-8
# ::node	0.1.1.0	exceed-01	23-24
# ::node	0.1.1.0.0	monetary-quantity	25-26
# ::node	0.1.1.0.0.0	dollar	25-26
# ::node	0.1.1.1	other	6-7
# ::node	0.1.1.2	income	21-22
# ::node	0.1.1.2.0	fee	20-21
# ::node	0.1.2	agree-01	13-14
# ::node	0.1.2.0	merge-01	12-13
# ::node	0.1.3	rapid	9-10
# ::node	0.1.4	and	14-15
# ::root	0	add-01
# ::edge	add-01	ARG0	3	0	0.0	
# ::edge	add-01	ARG1	move-01	0	0.1	
# ::edge	agree-01	ARG1	merge-01	0.1.2	0.1.2.0	
# ::edge	and	op1	move-01	0.1.4	0.1	
# ::edge	country	mod	other	0.1.1	0.1.1.1	
# ::edge	exceed-01	ARG0	country	0.1.1.0	0.1.1	
# ::edge	exceed-01	ARG1	monetary-quantity	0.1.1.0	0.1.1.0.0	
# ::edge	income	mod	fee	0.1.1.2	0.1.1.2.0	
# ::edge	income	poss	country	0.1.1.2	0.1.1	
# ::edge	monetary-quantity	unit	dollar	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	move-01	ARG0	and	0.1	0.1.0	
# ::edge	move-01	ARG1	country	0.1	0.1.1	
# ::edge	move-01	ARG2	agree-01	0.1	0.1.2	
# ::edge	move-01	manner	rapid	0.1	0.1.3	
(a4 / add-01 
      :ARG0 3 
      :ARG1 (m3 / move-01 
            :ARG0 (a3 / and) 
            :ARG1 (c / country 
                  :ARG0-of (e / exceed-01 
                        :ARG1 (m / monetary-quantity 
                              :unit (d / dollar))) 
                  :mod (o / other) 
                  :poss-of (i / income 
                        :mod (f / fee))) 
            :ARG2 (a2 / agree-01 
                  :ARG1 (m2 / merge-01)) 
            :manner (r / rapid) 
            :op-of (a / and)))

# ::snt well above the 92000 british rail pays its current boss but below figures in excess of 200000 thought necessary to attract suitable replacements
# ::tok well above the 92000 british rail pays its current boss but below figures in excess of 200000 thought necessary to attract suitable replacements
# ::alignments 21-22|0.0.0.1.2.0.0 20-21|0.0.0.0.1 17-18|0.0.0.0 16-17|0.0.0.1.0 14-15|0.0.0.0.0 12-13|0.0.0 11-12|0.0 10-11|0 9-10|0.0.0.1.1 8-9|0.0.0.1.1.0 6-7|0.0.0.1 4-6|0.0.0.1.2.1.0.0+0.0.0.1.2.1.0.1+0.0.0.1.2.1.0+0.0.0.1.2.1 1-2|0.0.0.1.2 0-1|0.0.0.1.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:34.579
# ::node	0	contrast-01	10-11
# ::node	0.0	below	11-12
# ::node	0.0.0	figure	12-13
# ::node	0.0.0.0	think-01	17-18
# ::node	0.0.0.0.0	exceed-01	14-15
# ::node	0.0.0.0.1	attract-01	20-21
# ::node	0.0.0.1	pay-01	6-7
# ::node	0.0.0.1.0	200000	16-17
# ::node	0.0.0.1.1	boss	9-10
# ::node	0.0.0.1.1.0	current	8-9
# ::node	0.0.0.1.2	above	1-2
# ::node	0.0.0.1.2.0	well	0-1
# ::node	0.0.0.1.2.0.0	suit-01	21-22
# ::node	0.0.0.1.2.1	organization	4-6
# ::node	0.0.0.1.2.1.0	name	4-6
# ::node	0.0.0.1.2.1.0.0	"rail"	4-6
# ::node	0.0.0.1.2.1.0.1	"british"	4-6
# ::root	0	contrast-01
# ::edge	above	mod	well	0.0.0.1.2	0.0.0.1.2.0	
# ::edge	above	op1	organization	0.0.0.1.2	0.0.0.1.2.1	
# ::edge	above	op2	pay-01	0.0.0.1.2	0.0.0.1	
# ::edge	below	op1	figure	0.0	0.0.0	
# ::edge	boss	time	current	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	contrast-01	ARG1	below	0	0.0	
# ::edge	name	op1	"rail"	0.0.0.1.2.1.0	0.0.0.1.2.1.0.0	
# ::edge	name	op2	"british"	0.0.0.1.2.1.0	0.0.0.1.2.1.0.1	
# ::edge	organization	name	name	0.0.0.1.2.1	0.0.0.1.2.1.0	
# ::edge	pay-01	ARG0	200000	0.0.0.1	0.0.0.1.0	
# ::edge	pay-01	ARG1	boss	0.0.0.1	0.0.0.1.1	
# ::edge	pay-01	ARG3	figure	0.0.0.1	0.0.0	
# ::edge	suit-01	ARG1	well	0.0.0.1.2.0.0	0.0.0.1.2.0	
# ::edge	think-01	ARG0	exceed-01	0.0.0.0	0.0.0.0.0	
# ::edge	think-01	ARG1	figure	0.0.0.0	0.0.0	
# ::edge	think-01	ARG2	attract-01	0.0.0.0	0.0.0.0.1	
(c / contrast-01 
      :ARG1 (b / below 
            :op1 (f / figure 
                  :ARG1-of (t / think-01 
                        :ARG0 (e / exceed-01) 
                        :ARG2 (a / attract-01)) 
                  :ARG3-of (p / pay-01 
                        :ARG0 200000 
                        :ARG1 (b2 / boss 
                              :time (c2 / current)) 
                        :op-of (a2 / above 
                              :mod (w / well 
                                    :ARG1-of (s / suit-01)) 
                              :op1 (o / organization 
                                    :name (n / name 
                                          :op1 "rail" 
                                          :op2 "british")))))))

# ::snt each of its two mountains whistler and blackcomb offers a vertical drop in excess of 1500m which is exceptional by north american standards the lift installations are much more extensive than the canadian norm and whistler village now has a lively trafficfree heart
# ::tok each of its two mountains whistler and blackcomb offers a vertical drop in excess of 1500m which is exceptional by north american standards the lift installations are much more extensive than the canadian norm and whistler village now has a lively trafficfree heart
# ::alignments 42-43|0.0.0.0.4 40-41|0.1 37-38|0.0.0.0.0 36-37|0.0.0.0.3 34-35|0.0.0.0 33-34|0.0.0.0.2 29-30|0.0.0 27-28|0.0.0.0.1.0.0 25-26|0.0 24-25|0 22-23|0.0.0.0.1.0.1.0.0 21-22|0.0.0.0.1.0.1.0.1.0+0.0.0.0.1.0.1.0.1+0.0.0.0.1.0.1.0 20-21|0.0.0.0.1.0.1.0.0.0 18-19|0.0.0.0.1.0.1.0.0.1 13-14|0.0.0.0.1 11-12|0.0.0.0.1.0 8-9|0.0.0.0.1.0.1 6-7|0.0.0.0.1.0.1.2 4-5|0.0.0.0.1.0.1.1 3-4|0.0.0.0.1.0.1.1.1 0-1|0.0.0.0.1.0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:35.080
# ::node	0	lift-01	24-25
# ::node	0.0	installation	25-26
# ::node	0.0.0	extensive	29-30
# ::node	0.0.0.0	and	34-35
# ::node	0.0.0.0.0	now	37-38
# ::node	0.0.0.0.1	exceed-01	13-14
# ::node	0.0.0.0.1.0	drop-01	11-12
# ::node	0.0.0.0.1.0.0	much	27-28
# ::node	0.0.0.0.1.0.1	offer-01	8-9
# ::node	0.0.0.0.1.0.1.0	country	21-22
# ::node	0.0.0.0.1.0.1.0.0	standard	22-23
# ::node	0.0.0.0.1.0.1.0.0.0	north	20-21
# ::node	0.0.0.0.1.0.1.0.0.1	exceptional	18-19
# ::node	0.0.0.0.1.0.1.0.1	name	21-22
# ::node	0.0.0.0.1.0.1.0.1.0	"America"	21-22
# ::node	0.0.0.0.1.0.1.1	mountain	4-5
# ::node	0.0.0.0.1.0.1.1.0	each	0-1
# ::node	0.0.0.0.1.0.1.1.1	2	3-4
# ::node	0.0.0.0.1.0.1.2	and	6-7
# ::node	0.0.0.0.2	norm	33-34
# ::node	0.0.0.0.3	village	36-37
# ::node	0.0.0.0.4	heart	42-43
# ::node	0.1	lively	40-41
# ::root	0	lift-01
# ::edge	and	op1	exceed-01	0.0.0.0	0.0.0.0.1	
# ::edge	and	op1	offer-01	0.0.0.0.1.0.1.2	0.0.0.0.1.0.1	
# ::edge	and	op2	extensive	0.0.0.0	0.0.0	
# ::edge	and	op3	norm	0.0.0.0	0.0.0.0.2	
# ::edge	and	op4	village	0.0.0.0	0.0.0.0.3	
# ::edge	country	name	name	0.0.0.0.1.0.1.0	0.0.0.0.1.0.1.0.1	
# ::edge	drop-01	ARG0	much	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	drop-01	ARG1	exceed-01	0.0.0.0.1.0	0.0.0.0.1	
# ::edge	exceptional	topic	standard	0.0.0.0.1.0.1.0.0.1	0.0.0.0.1.0.1.0.0	
# ::edge	extensive	domain	installation	0.0.0	0.0	
# ::edge	heart	poss	and	0.0.0.0.4	0.0.0.0	
# ::edge	lift-01	ARG0	installation	0	0.0	
# ::edge	lift-01	ARG1	lively	0	0.1	
# ::edge	mountain	mod	each	0.0.0.0.1.0.1.1	0.0.0.0.1.0.1.1.0	
# ::edge	mountain	quant	2	0.0.0.0.1.0.1.1	0.0.0.0.1.0.1.1.1	
# ::edge	name	op1	"America"	0.0.0.0.1.0.1.0.1	0.0.0.0.1.0.1.0.1.0	
# ::edge	now	ARG0	and	0.0.0.0.0	0.0.0.0	
# ::edge	offer-01	ARG0	country	0.0.0.0.1.0.1	0.0.0.0.1.0.1.0	
# ::edge	offer-01	ARG1	drop-01	0.0.0.0.1.0.1	0.0.0.0.1.0	
# ::edge	offer-01	manner	mountain	0.0.0.0.1.0.1	0.0.0.0.1.0.1.1	
# ::edge	standard	mod	country	0.0.0.0.1.0.1.0.0	0.0.0.0.1.0.1.0	
# ::edge	standard	mod	north	0.0.0.0.1.0.1.0.0	0.0.0.0.1.0.1.0.0.0	
(l2 / lift-01 
      :ARG0 (i / installation 
            :domain-of (e / extensive 
                  :op-of (a / and 
                        :ARG0-of (n / now) 
                        :op1 (e3 / exceed-01 
                              :ARG1-of (d / drop-01 
                                    :ARG0 (m / much) 
                                    :ARG1-of (o / offer-01 
                                          :ARG0 (c / country 
                                                :mod-of (s / standard 
                                                      :mod (n4 / north) 
                                                      :topic-of (e2 / exceptional)) 
                                                :name (n3 / name 
                                                      :op1 "America")) 
                                          :manner (m2 / mountain 
                                                :mod (e4 / each) 
                                                :quant 2) 
                                          :op-of (a2 / and)))) 
                        :op2 (n2 / norm) 
                        :op3 (v / village) 
                        :poss-of (h / heart)))) 
      :ARG1 (l / lively))

# ::snt but smaller members understandably resent the brutal gulf tactic of exceeding quotas until the excess becomes an accepted fact
# ::tok but smaller members understandably resent the brutal gulf tactic of exceeding quotas until the excess becomes an accepted fact
# ::alignments 18-19|0.0.1.0.0.1 17-18|0.0.1.0.0.1.0 15-16|0.0.1.0.0.0 14-15|0.0.1.0.0 12-13|0.0.1.0 11-12|0.0.1.1 10-11|0.0.1 7-8|0.0.0.0.0+0.0.0.0+0.0.0 6-7|0.0.1.0.0.1.0.0 4-5|0.0 3-4|0.0.2 2-3|0.0.2.0.0+0.0.2.0 1-2|0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:35.395
# ::node	0	contrast-01	0-1
# ::node	0.0	resent-01	4-5
# ::node	0.0.0	world-region	7-8
# ::node	0.0.0.0	name	7-8
# ::node	0.0.0.0.0	"Gulf"	7-8
# ::node	0.0.1	exceed-01	10-11
# ::node	0.0.1.0	until	12-13
# ::node	0.0.1.0.0	exceed-01	14-15
# ::node	0.0.1.0.0.0	become-01	15-16
# ::node	0.0.1.0.0.1	fact	18-19
# ::node	0.0.1.0.0.1.0	accept-01	17-18
# ::node	0.0.1.0.0.1.0.0	brutal	6-7
# ::node	0.0.1.1	quota	11-12
# ::node	0.0.2	understand-01	3-4
# ::node	0.0.2.0	have-org-role-91	2-3
# ::node	0.0.2.0.0	member	2-3
# ::node	0.1	small	1-2
# ::root	0	contrast-01
# ::edge	accept-01	ARG0	brutal	0.0.1.0.0.1.0	0.0.1.0.0.1.0.0	
# ::edge	accept-01	ARG1	fact	0.0.1.0.0.1.0	0.0.1.0.0.1	
# ::edge	become-01	ARG1	exceed-01	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	contrast-01	ARG1	resent-01	0	0.0	
# ::edge	contrast-01	ARG2	small	0	0.1	
# ::edge	exceed-01	ARG0	until	0.0.1	0.0.1.0	
# ::edge	exceed-01	ARG1	quota	0.0.1	0.0.1.1	
# ::edge	fact	domain	exceed-01	0.0.1.0.0.1	0.0.1.0.0	
# ::edge	have-org-role-91	ARG2	member	0.0.2.0	0.0.2.0.0	
# ::edge	name	op1	"Gulf"	0.0.0.0	0.0.0.0.0	
# ::edge	resent-01	ARG1	world-region	0.0	0.0.0	
# ::edge	resent-01	ARG2	exceed-01	0.0	0.0.1	
# ::edge	resent-01	manner	understand-01	0.0	0.0.2	
# ::edge	understand-01	ARG1	have-org-role-91	0.0.2	0.0.2.0	
# ::edge	until	op1	exceed-01	0.0.1.0	0.0.1.0.0	
# ::edge	world-region	name	name	0.0.0	0.0.0.0	
(c / contrast-01 
      :ARG1 (r / resent-01 
            :ARG1 (w / world-region 
                  :name (n / name 
                        :op1 "Gulf")) 
            :ARG2 (e2 / exceed-01 
                  :ARG0 (u / until 
                        :op1 (e / exceed-01 
                              :ARG1-of (b / become-01) 
                              :domain-of (f / fact 
                                    :ARG1-of (a / accept-01 
                                          :ARG0 (b2 / brutal))))) 
                  :ARG1 (q / quota)) 
            :manner (u2 / understand-01 
                  :ARG1 (h / have-org-role-91 
                        :ARG2 (m / member)))) 
      :ARG2 (s / small))

# ::snt a historical task force is looking into his excesses and his adopted son conveniently says he wants the body buried
# ::tok a historical task force is looking into his excesses and his adopted son conveniently says he wants the body buried
# ::alignments 19-20|0.1.0 18-19|0.1 16-17|0 15-16|0.0 14-15|0.2 13-14|0.2.1 12-13|0.0.0.1+0.0.0 11-12|0.0.0.0 9-10|0.0.0.2 3-4|0.2.0 2-3|0.2.0.0 1-2|0.2.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:35.593
# ::node	0	want-01	16-17
# ::node	0.0	he	15-16
# ::node	0.0.0	have-rel-role-91	12-13
# ::node	0.0.0.0	adopt-01	11-12
# ::node	0.0.0.1	son	12-13
# ::node	0.0.0.2	and	9-10
# ::node	0.1	body	18-19
# ::node	0.1.0	bury-01	19-20
# ::node	0.2	say-01	14-15
# ::node	0.2.0	force	3-4
# ::node	0.2.0.0	task	2-3
# ::node	0.2.0.1	history	1-2
# ::node	0.2.1	convenient	13-14
# ::root	0	want-01
# ::edge	adopt-01	ARG1	have-rel-role-91	0.0.0.0	0.0.0	
# ::edge	and	op1	have-rel-role-91	0.0.0.2	0.0.0	
# ::edge	bury-01	ARG1	body	0.1.0	0.1	
# ::edge	force	mod	history	0.2.0	0.2.0.1	
# ::edge	force	mod	task	0.2.0	0.2.0.0	
# ::edge	have-rel-role-91	ARG1	he	0.0.0	0.0	
# ::edge	have-rel-role-91	ARG2	son	0.0.0	0.0.0.1	
# ::edge	say-01	ARG0	force	0.2	0.2.0	
# ::edge	say-01	ARG1	want-01	0.2	0	
# ::edge	say-01	polarity	convenient	0.2	0.2.1	
# ::edge	want-01	ARG0	he	0	0.0	
# ::edge	want-01	ARG1	body	0	0.1	
(w / want-01 
      :ARG0 (h / he 
            :ARG1-of (h2 / have-rel-role-91 
                  :ARG1-of (a / adopt-01) 
                  :ARG2 (s2 / son) 
                  :op-of (a2 / and))) 
      :ARG1 (b2 / body 
            :ARG1-of (b / bury-01)) 
      :ARG1-of (s / say-01 
            :ARG0 (f / force 
                  :mod (t / task) 
                  :mod (h3 / history)) 
            :polarity (c / convenient)))

# ::snt 0 seconds and take it on to a top speed in excess of 150mph
# ::tok 0 seconds and take it on to a top speed in excess of 150mph
# ::alignments 11-12|0.1 9-10|0.1.1 8-9|0.1.1.0 4-5|0.0.0 2-3|0 1-2|0.0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:35.617
# ::node	0	and	2-3
# ::node	0.0	second	1-2
# ::node	0.0.0	it	4-5
# ::node	0.1	exceed-01	11-12
# ::node	0.1.0	0	0-1
# ::node	0.1.1	speed	9-10
# ::node	0.1.1.0	top	8-9
# ::root	0	and
# ::edge	and	op1	second	0	0.0	
# ::edge	and	op2	exceed-01	0	0.1	
# ::edge	exceed-01	ARG1	0	0.1	0.1.0	
# ::edge	it	part	second	0.0.0	0.0	
# ::edge	speed	mod	top	0.1.1	0.1.1.0	
# ::edge	speed	topic	exceed-01	0.1.1	0.1	
(a / and 
      :op1 (s2 / second 
            :part-of (i / it)) 
      :op2 (e / exceed-01 
            :ARG1 0 
            :topic-of (s / speed 
                  :mod (t / top))))

# ::snt mrs thatcher said yesterday there could be no fair competition while italian french and west german subsidies to their manufacturing industry were well in excess of britains 1
# ::tok mrs thatcher said yesterday there could be no fair competition while italian french and west german subsidies to their manufacturing industry were well in excess of britains 1
# ::alignments 27-28|0.1.1.0.1.1.0 24-25|0.1.1.0.1.1 22-23|0.0 20-21|0.1.1.0.1.0 19-20|0.1.1.0.1 16-17|0.1.1.0 14-15|0.1.1.0.2 13-14|0.1.1 12-13|0.1.0.0.0+0.1.0.0+0.1.0 11-12|0.1.1.0.0.0.0+0.1.1.0.0.0+0.1.1.0.0 9-10|0.1 8-9|0.1.3 7-8|0.1.2.0 5-6|0.1.2 3-4|0.2 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:36.099
# ::node	0	say-01	2-3
# ::node	0.0	well	22-23
# ::node	0.1	compete-01	9-10
# ::node	0.1.0	country	12-13
# ::node	0.1.0.0	name	12-13
# ::node	0.1.0.0.0	"France"	12-13
# ::node	0.1.1	and	13-14
# ::node	0.1.1.0	subsidize-01	16-17
# ::node	0.1.1.0.0	language	11-12
# ::node	0.1.1.0.0.0	name	11-12
# ::node	0.1.1.0.0.0.0	"Italian"	11-12
# ::node	0.1.1.0.1	manufacture-01	19-20
# ::node	0.1.1.0.1.0	industry	20-21
# ::node	0.1.1.0.1.1	exceed-01	24-25
# ::node	0.1.1.0.1.1.0	1	27-28
# ::node	0.1.1.0.2	west	14-15
# ::node	0.1.2	possible	5-6
# ::node	0.1.2.0	-	7-8
# ::node	0.1.3	fair	8-9
# ::node	0.2	yesterday	3-4
# ::root	0	say-01
# ::edge	compete-01	ARG0	country	0.1	0.1.0	
# ::edge	compete-01	ARG1	and	0.1	0.1.1	
# ::edge	compete-01	mod	fair	0.1	0.1.3	
# ::edge	country	name	name	0.1.0	0.1.0.0	
# ::edge	exceed-01	ARG0	1	0.1.1.0.1.1	0.1.1.0.1.1.0	
# ::edge	language	name	name	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	manufacture-01	ARG0	industry	0.1.1.0.1	0.1.1.0.1.0	
# ::edge	manufacture-01	ARG1	exceed-01	0.1.1.0.1	0.1.1.0.1.1	
# ::edge	name	op1	"France"	0.1.0.0	0.1.0.0.0	
# ::edge	name	op1	"Italian"	0.1.1.0.0.0	0.1.1.0.0.0.0	
# ::edge	possible	domain	compete-01	0.1.2	0.1	
# ::edge	possible	polarity	-	0.1.2	0.1.2.0	
# ::edge	say-01	ARG0	well	0	0.0	
# ::edge	say-01	ARG1	compete-01	0	0.1	
# ::edge	say-01	time	yesterday	0	0.2	
# ::edge	subsidize-01	ARG0	language	0.1.1.0	0.1.1.0.0	
# ::edge	subsidize-01	ARG1	manufacture-01	0.1.1.0	0.1.1.0.1	
# ::edge	subsidize-01	mod	west	0.1.1.0	0.1.1.0.2	
# ::edge	subsidize-01	time	and	0.1.1.0	0.1.1	
(s2 / say-01 
      :ARG0 (w / well) 
      :ARG1 (c2 / compete-01 
            :ARG0 (c / country 
                  :name (n / name 
                        :op1 "France")) 
            :ARG1 (a / and 
                  :time-of (s / subsidize-01 
                        :ARG0 (l / language 
                              :name (n2 / name 
                                    :op1 "Italian")) 
                        :ARG1 (m / manufacture-01 
                              :ARG0 (i / industry) 
                              :ARG1 (e / exceed-01 
                                    :ARG0 1)) 
                        :mod (w2 / west))) 
            :domain-of (p / possible 
                  :polarity (- / -)) 
            :mod (f / fair)) 
      :time (y / yesterday))

# ::snt the crown puts that figure in excess of 3m
# ::tok the crown puts that figure in excess of 3m
# ::alignments 6-7|0.0.1 4-5|0.0.0 2-3|0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:36.136
# ::node	0	crown-01	1-2
# ::node	0.0	put-01	2-3
# ::node	0.0.0	figure	4-5
# ::node	0.0.1	exceed-01	6-7
# ::root	0	crown-01
(c / crown-01 
      :ARG0-of (p / put-01 
            :ARG1 (f / figure) 
            :ARG2 (e / exceed-01)))

# ::snt this is before taking into account expenses which are likely to be well in excess of 100m
# ::tok this is before taking into account expenses which are likely to be well in excess of 100m
# ::alignments 14-15|0.0.0.0 12-13|0.0.0 9-10|0 6-7|0.0 5-6|0.0.1 2-3|0.0.0.0.0 0-1|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:36.194
# ::node	0	likely	9-10
# ::node	0.0	expend-01	6-7
# ::node	0.0.0	well	12-13
# ::node	0.0.0.0	exceed-01	14-15
# ::node	0.0.0.0.0	before	2-3
# ::node	0.0.0.0.1	this	0-1
# ::node	0.0.1	account	5-6
# ::root	0	likely
(l / likely 
      :ARG1-of (e2 / expend-01 
            :ARG0 (w / well 
                  :time-of (e / exceed-01 
                        :ARG1 (b / before) 
                        :op-of (t / this))) 
            :ARG2 (a / account)))

# ::snt no indication has been given of the size of the pay rises but they could be in excess of 100 per cent
# ::tok no indication has been given of the size of the pay rises but they could be in excess of 100 per cent
# ::alignments 21-22|0.0.0.1.0.0.0+0.0.0.1.0.0 19-20|0.0.0.1.0.1 17-18|0.0.0.1.0 14-15|0.2 13-14|0.0.0.1 12-13|0 11-12|0.0.0 10-11|0.0.0.0 7-8|0.0 4-5|0.1 1-2|0.1.0 0-1|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:36.444
# ::node	0	contrast-01	12-13
# ::node	0.0	size	7-8
# ::node	0.0.0	rise-01	11-12
# ::node	0.0.0.0	pay-01	10-11
# ::node	0.0.0.1	they	13-14
# ::node	0.0.0.1.0	exceed-01	17-18
# ::node	0.0.0.1.0.0	monetary-quantity	21-22
# ::node	0.0.0.1.0.0.0	cent	21-22
# ::node	0.0.0.1.0.1	100	19-20
# ::node	0.1	give-01	4-5
# ::node	0.1.0	indicate-01	1-2
# ::node	0.1.0.0	-	0-1
# ::node	0.2	possible	14-15
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	size	0	0.0	
# ::edge	contrast-01	ARG2	possible	0	0.2	
# ::edge	exceed-01	ARG0	they	0.0.0.1.0	0.0.0.1	
# ::edge	exceed-01	ARG1	monetary-quantity	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	exceed-01	time	100	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	give-01	ARG1	contrast-01	0.1	0	
# ::edge	give-01	ARG2	indicate-01	0.1	0.1.0	
# ::edge	indicate-01	polarity	-	0.1.0	0.1.0.0	
# ::edge	monetary-quantity	unit	cent	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	rise-01	ARG1	pay-01	0.0.0	0.0.0.0	
# ::edge	rise-01	ARG2	they	0.0.0	0.0.0.1	
# ::edge	size	poss	rise-01	0.0	0.0.0	
(c2 / contrast-01 
      :ARG1 (s / size 
            :poss (r / rise-01 
                  :ARG1 (p2 / pay-01) 
                  :ARG2 (t / they 
                        :ARG0-of (e / exceed-01 
                              :ARG1 (m / monetary-quantity 
                                    :unit (c / cent)) 
                              :time 100)))) 
      :ARG1-of (g / give-01 
            :ARG2 (i / indicate-01 
                  :polarity (- / -))) 
      :ARG2 (p / possible))

# ::snt to cover costs for the first 320 you may either pay us a nonrefundable damage  loss excess waiver of 32 per yacht 7 each for a share a yacht or pot luck or lodge direct with us not through a travel agent a security deposit of 320 per yacht 70 each if sharing at the time of making your final payment, unless you tell us otherwise well invoice you for the damage  loss excess waiver
# ::tok to cover costs for the first 320 you may either pay us a nonrefundable damage loss excess waiver of 32 per yacht 7 each for a share a yacht or pot luck or lodge direct with us not through a travel agent a security deposit of 320 per yacht 70 each if sharing at the time of making your final payment , unless you tell us otherwise well invoice you for the damage loss excess waiver
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:36.445
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt ian jones in particular cleaned up in the lineout and more generally the blacks won an excess of possession but they played as if ill at ease with each other and intimidated by the atmosphere and setting of the arms park
# ::tok ian jones in particular cleaned up in the lineout and more generally the blacks won an excess of possession but they played as if ill at ease with each other and intimidated by the atmosphere and setting of the arms park
# ::alignments 40-41|0.1.2.2.1 39-40|0.1.2.2.0 36-37|0.1.2.2 35-36|0.1.2.2.2 34-35|0.1.2.2.2.0 30-31|0.1.2 29-30|0.1.2.1 28-29|0.1.2.1.0 26-27|0.1.1 24-25|0.1 20-21|0.1.0 19-20|0 18-19|0.0.1.0 16-17|0.0.1 14-15|0.0 13-14|0.0.0.0+0.0.0 11-12|0.1.1.0 9-10|0.1.2.0 4-5|0.1.2.0.0 3-4|0.1.2.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:36.813
# ::node	0	contrast-01	19-20
# ::node	0.0	win-01	14-15
# ::node	0.0.0	person	13-14
# ::node	0.0.0.0	black	13-14
# ::node	0.0.1	exceed-01	16-17
# ::node	0.0.1.0	possess-01	18-19
# ::node	0.1	ill-41	24-25
# ::node	0.1.0	they	20-21
# ::node	0.1.1	ease-02	26-27
# ::node	0.1.1.0	general	11-12
# ::node	0.1.2	and	30-31
# ::node	0.1.2.0	and	9-10
# ::node	0.1.2.0.0	clean-02	4-5
# ::node	0.1.2.0.0.0	particular	3-4
# ::node	0.1.2.1	other	29-30
# ::node	0.1.2.1.0	each	28-29
# ::node	0.1.2.2	set-02	36-37
# ::node	0.1.2.2.0	arm	39-40
# ::node	0.1.2.2.1	park	40-41
# ::node	0.1.2.2.2	and	35-36
# ::node	0.1.2.2.2.0	atmosphere	34-35
# ::root	0	contrast-01
# ::edge	and	op1	and	0.1.2	0.1.2.0	
# ::edge	and	op1	atmosphere	0.1.2.2.2	0.1.2.2.2.0	
# ::edge	and	op2	ill-41	0.1.2	0.1	
# ::edge	and	op2	set-02	0.1.2.2.2	0.1.2.2	
# ::edge	and	op3	other	0.1.2	0.1.2.1	
# ::edge	and	op4	set-02	0.1.2	0.1.2.2	
# ::edge	clean-02	ARG0	particular	0.1.2.0.0	0.1.2.0.0.0	
# ::edge	clean-02	ARG1	and	0.1.2.0.0	0.1.2.0	
# ::edge	contrast-01	ARG1	win-01	0	0.0	
# ::edge	contrast-01	ARG2	ill-41	0	0.1	
# ::edge	ease-02	ARG1	general	0.1.1	0.1.1.0	
# ::edge	exceed-01	ARG1	possess-01	0.0.1	0.0.1.0	
# ::edge	ill-41	ARG0	they	0.1	0.1.0	
# ::edge	ill-41	ARG1	ease-02	0.1	0.1.1	
# ::edge	other	mod	each	0.1.2.1	0.1.2.1.0	
# ::edge	person	mod	black	0.0.0	0.0.0.0	
# ::edge	set-02	ARG1	arm	0.1.2.2	0.1.2.2.0	
# ::edge	set-02	location	park	0.1.2.2	0.1.2.2.1	
# ::edge	win-01	ARG0	person	0.0	0.0.0	
# ::edge	win-01	ARG1	exceed-01	0.0	0.0.1	
(c / contrast-01 
      :ARG1 (w / win-01 
            :ARG0 (p3 / person 
                  :mod (b / black)) 
            :ARG1 (e3 / exceed-01 
                  :ARG1 (p2 / possess-01))) 
      :ARG2 (i / ill-41 
            :ARG0 (t / they) 
            :ARG1 (e2 / ease-02 
                  :ARG1 (g / general)) 
            :op-of (a4 / and 
                  :op1 (a5 / and 
                        :ARG1-of (c2 / clean-02 
                              :ARG0 (p4 / particular))) 
                  :op2 (o / other 
                        :mod (e / each)) 
                  :op3 (s / set-02 
                        :ARG1 (a / arm) 
                        :location (p / park) 
                        :op-of (a2 / and 
                              :op1 (a3 / atmosphere))))))

# ::snt however the volume of shares traded was in excess of one billion the chancellors announcement being the panacea the city was looking for
# ::tok however the volume of shares traded was in excess of one billion the chancellors announcement being the panacea the city was looking for
# ::alignments 19-20|0.0.1 14-15|0 8-9|0.0 5-6|0.0.0.0 4-5|0.0.0 2-3|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:36.846
# ::node	0	announce-01	14-15
# ::node	0.0	exceed-01	8-9
# ::node	0.0.0	share	4-5
# ::node	0.0.0.0	trade-01	5-6
# ::node	0.0.0.1	volume	2-3
# ::node	0.0.1	city	19-20
# ::root	0	announce-01
# ::edge	announce-01	ARG1	exceed-01	0	0.0	
# ::edge	exceed-01	ARG0	share	0.0	0.0.0	
# ::edge	exceed-01	ARG1	city	0.0	0.0.1	
# ::edge	share	mod	volume	0.0.0	0.0.0.1	
# ::edge	trade-01	ARG1	share	0.0.0.0	0.0.0	
(a / announce-01 
      :ARG1 (e / exceed-01 
            :ARG0 (s / share 
                  :ARG1-of (t / trade-01) 
                  :mod (v / volume)) 
            :ARG1 (c / city)))

# ::snt the managing director estimated that it had cost the company in excess of 40000 during this period
# ::tok the managing director estimated that it had cost the company in excess of 40000 during this period
# ::alignments 16-17|0.1.2 15-16|0.1.2.0 13-14|0.1.1.1 11-12|0.1.1 9-10|0.1.1.0 7-8|0.1 5-6|0.0 3-4|0 2-3|0.1.0+0.1.0.0 1-2|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:36.917
# ::node	0	estimate-01	3-4
# ::node	0.0	it	5-6
# ::node	0.1	cost-01	7-8
# ::node	0.1.0	director	2-3
# ::node	0.1.0.0	have-org-role-91	2-3
# ::node	0.1.0.0.0	manage-01	1-2
# ::node	0.1.1	exceed-01	11-12
# ::node	0.1.1.0	company	9-10
# ::node	0.1.1.1	40000	13-14
# ::node	0.1.2	period	16-17
# ::node	0.1.2.0	this	15-16
# ::root	0	estimate-01
# ::edge	cost-01	ARG0	director	0.1	0.1.0	
# ::edge	cost-01	ARG1	exceed-01	0.1	0.1.1	
# ::edge	cost-01	time	period	0.1	0.1.2	
# ::edge	estimate-01	ARG0	it	0	0.0	
# ::edge	estimate-01	ARG1	cost-01	0	0.1	
# ::edge	exceed-01	ARG0	company	0.1.1	0.1.1.0	
# ::edge	exceed-01	time	40000	0.1.1	0.1.1.1	
# ::edge	have-org-role-91	ARG1	manage-01	0.1.0.0	0.1.0.0.0	
# ::edge	have-org-role-91	ARG2	director	0.1.0.0	0.1.0	
# ::edge	period	mod	this	0.1.2	0.1.2.0	
(e2 / estimate-01 
      :ARG0 (i / it) 
      :ARG1 (c2 / cost-01 
            :ARG0 (d / director 
                  :ARG2-of (h / have-org-role-91 
                        :ARG1 (m / manage-01))) 
            :ARG1 (e / exceed-01 
                  :ARG0 (c / company) 
                  :time 40000) 
            :time (p / period 
                  :mod (t / this))))

# ::snt domestic slavery can be concealed easily and when excesses do come to light they only too frequently have involved torture sometimes with fatal consequences
# ::tok domestic slavery can be concealed easily and when excesses do come to light they only too frequently have involved torture sometimes with fatal consequences
# ::alignments 23-24|0.0.1.1.1 22-23|0.0.1.1.1.0 20-21|0.0.1.1.2 19-20|0.0.1.1 18-19|0.0.1 16-17|0.0.1.2 15-16|0.0.1.0.1 14-15|0.0.1.0.1.0 13-14|0.0.1.0 12-13|0.0.1.0.0 6-7|0.0 4-5|0.0.0 2-3|0 0-1|0.0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:37.074
# ::node	0	possible	2-3
# ::node	0.0	and	6-7
# ::node	0.0.0	conceal-01	4-5
# ::node	0.0.1	involve-01	18-19
# ::node	0.0.1.0	they	13-14
# ::node	0.0.1.0.0	light	12-13
# ::node	0.0.1.0.1	too	15-16
# ::node	0.0.1.0.1.0	only	14-15
# ::node	0.0.1.1	torture-01	19-20
# ::node	0.0.1.1.0	domestic	0-1
# ::node	0.0.1.1.1	consequence	23-24
# ::node	0.0.1.1.1.0	fatal	22-23
# ::node	0.0.1.1.2	sometimes	20-21
# ::node	0.0.1.2	frequent	16-17
# ::root	0	possible
# ::edge	and	op1	conceal-01	0.0	0.0.0	
# ::edge	and	op2	involve-01	0.0	0.0.1	
# ::edge	consequence	mod	fatal	0.0.1.1.1	0.0.1.1.1.0	
# ::edge	involve-01	ARG0	they	0.0.1	0.0.1.0	
# ::edge	involve-01	frequency	frequent	0.0.1	0.0.1.2	
# ::edge	light	degree	they	0.0.1.0.0	0.0.1.0	
# ::edge	possible	domain	and	0	0.0	
# ::edge	they	mod	too	0.0.1.0	0.0.1.0.1	
# ::edge	too	mod	only	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	torture-01	ARG0	domestic	0.0.1.1	0.0.1.1.0	
# ::edge	torture-01	ARG1	involve-01	0.0.1.1	0.0.1	
# ::edge	torture-01	ARG2	consequence	0.0.1.1	0.0.1.1.1	
# ::edge	torture-01	frequency	sometimes	0.0.1.1	0.0.1.1.2	
(p / possible 
      :domain (a / and 
            :op1 (c2 / conceal-01) 
            :op2 (i / involve-01 
                  :ARG0 (t3 / they 
                        :degree-of (l / light) 
                        :mod (t2 / too 
                              :mod (o / only))) 
                  :ARG1-of (t / torture-01 
                        :ARG0 (d / domestic) 
                        :ARG2 (c / consequence 
                              :mod (f / fatal)) 
                        :frequency (s / sometimes)) 
                  :frequency (f2 / frequent))))

# ::snt the parks commission has forbidden the release of 20000 balloons because of the potential damage to the environment but that is the only excess not tolerated
# ::tok the parks commission has forbidden the release of 20000 balloons because of the potential damage to the environment but that is the only excess not tolerated
# ::alignments 25-26|0.1.0.1.0.0 23-24|0.1.0.1.0 22-23|0.1.0.1.0.2 18-19|0.1.0.1 17-18|0.0.0 14-15|0.0 13-14|0.0.1 10-11|0 8-9|0.1.0.1.0.1 6-7|0.1 4-5|0.1.0 2-3|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:37.340
# ::node	0	cause-01	10-11
# ::node	0.0	damage-01	14-15
# ::node	0.0.0	environment	17-18
# ::node	0.0.1	potential	13-14
# ::node	0.1	release-01	6-7
# ::node	0.1.0	forbid-01	4-5
# ::node	0.1.0.0	commission	2-3
# ::node	0.1.0.1	contrast-01	18-19
# ::node	0.1.0.1.0	exceed-01	23-24
# ::node	0.1.0.1.0.0	tolerate-01	25-26
# ::node	0.1.0.1.0.1	20000	8-9
# ::node	0.1.0.1.0.2	only	22-23
# ::root	0	cause-01
# ::edge	cause-01	ARG0	damage-01	0	0.0	
# ::edge	cause-01	ARG1	release-01	0	0.1	
# ::edge	contrast-01	ARG1	forbid-01	0.1.0.1	0.1.0	
# ::edge	contrast-01	ARG2	exceed-01	0.1.0.1	0.1.0.1.0	
# ::edge	damage-01	ARG1	environment	0.0	0.0.0	
# ::edge	damage-01	mod	potential	0.0	0.0.1	
# ::edge	exceed-01	ARG1	20000	0.1.0.1.0	0.1.0.1.0.1	
# ::edge	exceed-01	mod	only	0.1.0.1.0	0.1.0.1.0.2	
# ::edge	forbid-01	ARG0	commission	0.1.0	0.1.0.0	
# ::edge	forbid-01	ARG1	release-01	0.1.0	0.1	
# ::edge	tolerate-01	ARG0	exceed-01	0.1.0.1.0.0	0.1.0.1.0	
(c2 / cause-01 
      :ARG0 (d / damage-01 
            :ARG1 (e2 / environment) 
            :mod (p / potential)) 
      :ARG1 (r / release-01 
            :ARG1-of (f / forbid-01 
                  :ARG0 (c3 / commission) 
                  :ARG1-of (c / contrast-01 
                        :ARG2 (e / exceed-01 
                              :ARG0-of (t / tolerate-01) 
                              :ARG1 20000 
                              :mod (o / only))))))

# ::snt professors at the central committees marxistleninist institute said they wanted an investigation that would delve beyond the recent past to examine stalinist excesses against german exiles in the soviet union and stalinist crimes in east germany
# ::tok professors at the central committees marxistleninist institute said they wanted an investigation that would delve beyond the recent past to examine stalinist excesses against german exiles in the soviet union and stalinist crimes in east germany
# ::alignments 34-36|0.0.1.0.0.1.1.0.0.0+0.0.1.0.0.1.1.0.0.1+0.0.1.0.0.1.1.0.0+0.0.1.0.0.1.1.0 32-33|0.0.1.0.0.1.1 30-31|0.0.1.0.0.1 29-30|0.0.1.0.0.0.0 25-26|0.0.1.0.0.0+0.0.1.0.0 20-21|0.0.1.0.0.1.0 18-19|0.0.1.0.0.1.0.0 17-18|0.0.1.0.0.1.0.0.0 15-16|0.0.1.0.0.1.0.0.1 11-12|0.0.0.0 9-10|0.0 8-9|0.0.0 7-8|0 6-7|0.0.1 3-4|0.0.1.1 0-1|0.0.1.0.1+0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:38.363
# ::node	0	say-01	7-8
# ::node	0.0	want-01	9-10
# ::node	0.0.0	they	8-9
# ::node	0.0.0.0	investigate-01	11-12
# ::node	0.0.1	institute	6-7
# ::node	0.0.1.0	have-org-role-91	0-1
# ::node	0.0.1.0.0	person	25-26
# ::node	0.0.1.0.0.0	exile-01	25-26
# ::node	0.0.1.0.0.0.0	union	29-30
# ::node	0.0.1.0.0.1	and	30-31
# ::node	0.0.1.0.0.1.0	examine-01	20-21
# ::node	0.0.1.0.0.1.0.0	past	18-19
# ::node	0.0.1.0.0.1.0.0.0	recent	17-18
# ::node	0.0.1.0.0.1.0.0.1	beyond	15-16
# ::node	0.0.1.0.0.1.1	crime	32-33
# ::node	0.0.1.0.0.1.1.0	country	34-36
# ::node	0.0.1.0.0.1.1.0.0	name	34-36
# ::node	0.0.1.0.0.1.1.0.0.0	"germany"	34-36
# ::node	0.0.1.0.0.1.1.0.0.1	"east"	34-36
# ::node	0.0.1.0.1	professor	0-1
# ::node	0.0.1.1	central	3-4
# ::root	0	say-01
# ::edge	and	op1	person	0.0.1.0.0.1	0.0.1.0.0	
# ::edge	and	op2	crime	0.0.1.0.0.1	0.0.1.0.0.1.1	
# ::edge	beyond	op1	past	0.0.1.0.0.1.0.0.1	0.0.1.0.0.1.0.0	
# ::edge	country	name	name	0.0.1.0.0.1.1.0	0.0.1.0.0.1.1.0.0	
# ::edge	crime	location	country	0.0.1.0.0.1.1	0.0.1.0.0.1.1.0	
# ::edge	examine-01	ARG0	past	0.0.1.0.0.1.0	0.0.1.0.0.1.0.0	
# ::edge	examine-01	ARG1	and	0.0.1.0.0.1.0	0.0.1.0.0.1	
# ::edge	exile-01	ARG0	union	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	exile-01	ARG1	person	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	have-org-role-91	ARG0	person	0.0.1.0	0.0.1.0.0	
# ::edge	have-org-role-91	ARG1	institute	0.0.1.0	0.0.1	
# ::edge	have-org-role-91	ARG2	professor	0.0.1.0	0.0.1.0.1	
# ::edge	institute	mod	central	0.0.1	0.0.1.1	
# ::edge	investigate-01	ARG1	they	0.0.0.0	0.0.0	
# ::edge	name	op1	"germany"	0.0.1.0.0.1.1.0.0	0.0.1.0.0.1.1.0.0.0	
# ::edge	name	op2	"east"	0.0.1.0.0.1.1.0.0	0.0.1.0.0.1.1.0.0.1	
# ::edge	past	mod	recent	0.0.1.0.0.1.0.0	0.0.1.0.0.1.0.0.0	
# ::edge	say-01	ARG1	want-01	0	0.0	
# ::edge	want-01	ARG0	they	0.0	0.0.0	
# ::edge	want-01	ARG1	institute	0.0	0.0.1	
(s / say-01 
      :ARG1 (w / want-01 
            :ARG0 (t / they 
                  :ARG1-of (i / investigate-01)) 
            :ARG1 (i2 / institute 
                  :ARG1-of (h / have-org-role-91 
                        :ARG0 (p / person 
                              :ARG1-of (e / exile-01 
                                    :ARG0 (u / union)) 
                              :op-of (a / and 
                                    :ARG1-of (e2 / examine-01 
                                          :ARG0 (p2 / past 
                                                :mod (r / recent) 
                                                :op-of (b / beyond))) 
                                    :op1 (c2 / crime 
                                          :location (c / country 
                                                :name (n / name 
                                                      :op1 "germany" 
                                                      :op2 "east"))))) 
                        :ARG2 (p3 / professor)) 
                  :mod (c3 / central))))

# ::snt commenting on the sale pargesa said ansbacher is today a strongly capitalised profitable well managed organisation with capital and cash resources well in excess of its current and reasonably anticipated requirements
# ::tok commenting on the sale pargesa said ansbacher is today a strongly capitalised profitable well managed organisation with capital and cash resources well in excess of its current and reasonably anticipated requirements
# ::alignments 30-31|0.0.3.0+0.0.3 29-30|0.0.3.0.0 28-29|0.0.3.0.0.0 27-28|0.0 26-27|0.0.2 23-24|0.0.1.0.0 21-22|0.0.0.0 20-21|0.0.1.1 19-20|0.0.1.0.2 18-19|0.0.1.0 17-18|0.0.1.0.1 15-16|0.0.1 14-15|0.0.1.2 13-14|0.0.1.2.0 12-13|0.0.1.3 10-11|0.0.1.3.0 8-9|0.1 5-6|0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:38.645
# ::node	0	say-01	5-6
# ::node	0.0	and	27-28
# ::node	0.0.0	comment-01	0-1
# ::node	0.0.0.0	well	21-22
# ::node	0.0.1	organize-01	15-16
# ::node	0.0.1.0	and	18-19
# ::node	0.0.1.0.0	exceed-01	23-24
# ::node	0.0.1.0.1	capital	17-18
# ::node	0.0.1.0.2	cash	19-20
# ::node	0.0.1.1	resource	20-21
# ::node	0.0.1.2	manage-02	14-15
# ::node	0.0.1.2.0	well	13-14
# ::node	0.0.1.3	profit-01	12-13
# ::node	0.0.1.3.0	strong	10-11
# ::node	0.0.2	current	26-27
# ::node	0.0.3	thing	30-31
# ::node	0.0.3.0	require-01	30-31
# ::node	0.0.3.0.0	anticipate-01	29-30
# ::node	0.0.3.0.0.0	reasonable	28-29
# ::node	0.1	today	8-9
# ::root	0	say-01
# ::edge	and	op1	capital	0.0.1.0	0.0.1.0.1	
# ::edge	and	op1	organize-01	0.0	0.0.1	
# ::edge	and	op2	cash	0.0.1.0	0.0.1.0.2	
# ::edge	and	op2	current	0.0	0.0.2	
# ::edge	and	op3	thing	0.0	0.0.3	
# ::edge	anticipate-01	mod	reasonable	0.0.3.0.0	0.0.3.0.0.0	
# ::edge	comment-01	ARG0	and	0.0.0	0.0	
# ::edge	comment-01	ARG1	well	0.0.0	0.0.0.0	
# ::edge	exceed-01	ARG0	and	0.0.1.0.0	0.0.1.0	
# ::edge	manage-02	ARG1	organize-01	0.0.1.2	0.0.1	
# ::edge	manage-02	manner	well	0.0.1.2	0.0.1.2.0	
# ::edge	organize-01	ARG0	and	0.0.1	0.0.1.0	
# ::edge	organize-01	ARG1	resource	0.0.1	0.0.1.1	
# ::edge	profit-01	ARG1	strong	0.0.1.3	0.0.1.3.0	
# ::edge	profit-01	ARG2	organize-01	0.0.1.3	0.0.1	
# ::edge	require-01	ARG0	anticipate-01	0.0.3.0	0.0.3.0.0	
# ::edge	require-01	ARG1	thing	0.0.3.0	0.0.3	
# ::edge	say-01	ARG0	and	0	0.0	
# ::edge	say-01	ARG1	today	0	0.1	
(s2 / say-01 
      :ARG0 (a2 / and 
            :ARG0-of (c4 / comment-01 
                  :ARG1 (w / well)) 
            :op1 (o / organize-01 
                  :ARG0 (a3 / and 
                        :ARG0-of (e / exceed-01) 
                        :op1 (c3 / capital) 
                        :op2 (c2 / cash)) 
                  :ARG1 (r3 / resource) 
                  :ARG1-of (m / manage-02 
                        :manner (w2 / well)) 
                  :ARG2-of (p / profit-01 
                        :ARG1 (s / strong))) 
            :op2 (c / current) 
            :op3 (t / thing 
                  :ARG1-of (r / require-01 
                        :ARG0 (a / anticipate-01 
                              :mod (r2 / reasonable))))) 
      :ARG1 (t2 / today))

# ::snt the citys likely poll tax of 496 will be far in excess of the governments 278 target
# ::tok the citys likely poll tax of 496 will be far in excess of the governments 278 target
# ::alignments 16-17|0 14-15|0.0.0+0.0 11-12|0.1 9-10|0.1.0 4-5|0.2.1 3-4|0.2 2-3|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:38.679
# ::node	0	target-01	16-17
# ::node	0.0	government-organization	14-15
# ::node	0.0.0	govern-01	14-15
# ::node	0.1	exceed-01	11-12
# ::node	0.1.0	far	9-10
# ::node	0.2	poll-01	3-4
# ::node	0.2.0	likely	2-3
# ::node	0.2.1	tax-01	4-5
# ::root	0	target-01
# ::edge	exceed-01	ARG1	target-01	0.1	0	
# ::edge	exceed-01	manner	far	0.1	0.1.0	
# ::edge	govern-01	ARG0	government-organization	0.0.0	0.0	
# ::edge	poll-01	ARG0	likely	0.2	0.2.0	
# ::edge	poll-01	ARG1	target-01	0.2	0	
# ::edge	target-01	ARG0	government-organization	0	0.0	
# ::edge	tax-01	ARG1	poll-01	0.2.1	0.2	
(t / target-01 
      :ARG0 (g / government-organization 
            :ARG0-of (g2 / govern-01)) 
      :ARG1-of (e / exceed-01 
            :manner (f / far)) 
      :ARG1-of (p / poll-01 
            :ARG0 (l / likely) 
            :ARG1-of (t2 / tax-01)))

# ::snt submit to oup a statement in such forms as oup shall require in respect of the preceding accounting period giving details of all licensed products leased or sold by proficiency during the preceding accounting period including details of the net selling price of the licensed products and the amount or amounts due to oup and  make payment of the royalties in excess of the advance which are prescribed in clause 5
# ::tok submit to oup a statement in such forms as oup shall require in respect of the preceding accounting period giving details of all licensed products leased or sold by proficiency during the preceding accounting period including details of the net selling price of the licensed products and the amount or amounts due to oup and make payment of the royalties in excess of the advance which are prescribed in clause 5
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:38.686
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt br which is forecast to report record profits in excess of 300 million today is likely to argue at the tribunal that investment would be restricted if it pumped surplus funds into increasing its pay offer to rail staff
# ::tok br which is forecast to report record profits in excess of 300 million today is likely to argue at the tribunal that investment would be restricted if it pumped surplus funds into increasing its pay offer to rail staff
# ::alignments 38-39|0.0.0.0+0.0.0 37-38|0.0.0.1 35-36|0.0 34-35|0.0.1 32-33|0 30-31|0.1.1 29-30|0.1.1.0 28-29|0.1 27-28|0.1.0 25-26|0.1.2 22-23|0.1.2.0 20-21|0.1.2.1.0 17-18|0.1.2.1 15-16|0.1.2.1.1 13-14|0.0.1.0.0.1 11-12|0.0.1.0.3 9-10|0.0.1.0.1 7-8|0.0.1.0 6-7|0.0.1.0.2 5-6|0.0.1.0.0 3-4|0.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:39.356
# ::node	0	increase-01	32-33
# ::node	0.0	offer-01	35-36
# ::node	0.0.0	person	38-39
# ::node	0.0.0.0	staff-01	38-39
# ::node	0.0.0.1	rail	37-38
# ::node	0.0.1	pay-01	34-35
# ::node	0.0.1.0	profit-01	7-8
# ::node	0.0.1.0.0	report	5-6
# ::node	0.0.1.0.0.0	forecast-01	3-4
# ::node	0.0.1.0.0.1	today	13-14
# ::node	0.0.1.0.1	exceed-01	9-10
# ::node	0.0.1.0.2	record	6-7
# ::node	0.0.1.0.3	300	11-12
# ::node	0.1	pump-01	28-29
# ::node	0.1.0	it	27-28
# ::node	0.1.1	fund	30-31
# ::node	0.1.1.0	surplus	29-30
# ::node	0.1.2	restrict-01	25-26
# ::node	0.1.2.0	invest-01	22-23
# ::node	0.1.2.1	argue-01	17-18
# ::node	0.1.2.1.0	tribunal	20-21
# ::node	0.1.2.1.1	likely	15-16
# ::root	0	increase-01
# ::edge	argue-01	ARG0	tribunal	0.1.2.1	0.1.2.1.0	
# ::edge	argue-01	ARG1	restrict-01	0.1.2.1	0.1.2	
# ::edge	forecast-01	ARG1	report	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	fund	poss	surplus	0.1.1	0.1.1.0	
# ::edge	increase-01	ARG1	offer-01	0	0.0	
# ::edge	likely	domain	argue-01	0.1.2.1.1	0.1.2.1	
# ::edge	offer-01	ARG1	person	0.0	0.0.0	
# ::edge	pay-01	ARG1	profit-01	0.0.1	0.0.1.0	
# ::edge	pay-01	ARG3	offer-01	0.0.1	0.0	
# ::edge	person	mod	rail	0.0.0	0.0.0.1	
# ::edge	profit-01	ARG0	report	0.0.1.0	0.0.1.0.0	
# ::edge	profit-01	ARG1	exceed-01	0.0.1.0	0.0.1.0.1	
# ::edge	profit-01	mod	record	0.0.1.0	0.0.1.0.2	
# ::edge	profit-01	time	300	0.0.1.0	0.0.1.0.3	
# ::edge	pump-01	ARG0	it	0.1	0.1.0	
# ::edge	pump-01	ARG1	fund	0.1	0.1.1	
# ::edge	pump-01	ARG2	increase-01	0.1	0	
# ::edge	report	time	today	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	restrict-01	ARG1	invest-01	0.1.2	0.1.2.0	
# ::edge	restrict-01	time	pump-01	0.1.2	0.1	
# ::edge	staff-01	ARG2	person	0.0.0.0	0.0.0	
(i / increase-01 
      :ARG1 (o / offer-01 
            :ARG1 (p / person 
                  :ARG2-of (s / staff-01) 
                  :mod (r / rail)) 
            :ARG3-of (p2 / pay-01 
                  :ARG1 (p4 / profit-01 
                        :ARG0 (r4 / report 
                              :ARG1-of (f2 / forecast-01) 
                              :time (t2 / today)) 
                        :ARG1 (e / exceed-01) 
                        :mod (r3 / record) 
                        :time 300))) 
      :ARG2-of (p3 / pump-01 
            :ARG0 (i2 / it) 
            :ARG1 (f / fund 
                  :poss (s2 / surplus)) 
            :time-of (r2 / restrict-01 
                  :ARG1 (i3 / invest-01) 
                  :ARG1-of (a / argue-01 
                        :ARG0 (t / tribunal) 
                        :domain-of (l / likely)))))

# ::snt uruguay claim that bengoechea who was unable initially to give a urine sample drank several cups of coffee and an excess of caffeine was revealed
# ::tok uruguay claim that bengoechea who was unable initially to give a urine sample drank several cups of coffee and an excess of caffeine was revealed
# ::alignments 24-25|0.2.0 20-21|0.2 18-19|0 17-18|0.0.0.1 15-16|0.0.0 14-15|0.0.0.0 11-12|0.0.1 9-10|0.0 7-8|0.2.0.0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:39.520
# ::node	0	and	18-19
# ::node	0.0	give-01	9-10
# ::node	0.0.0	cup	15-16
# ::node	0.0.0.0	several	14-15
# ::node	0.0.0.1	coffee	17-18
# ::node	0.0.1	urine	11-12
# ::node	0.1	claim-01	1-2
# ::node	0.2	exceed-01	20-21
# ::node	0.2.0	reveal-01	24-25
# ::node	0.2.0.0	initial	7-8
# ::root	0	and
# ::edge	and	op1	claim-01	0	0.1	
# ::edge	and	op2	exceed-01	0	0.2	
# ::edge	coffee	quant	cup	0.0.0.1	0.0.0	
# ::edge	cup	quant	several	0.0.0	0.0.0.0	
# ::edge	exceed-01	ARG1	reveal-01	0.2	0.2.0	
# ::edge	give-01	ARG0	and	0.0	0	
# ::edge	give-01	ARG1	cup	0.0	0.0.0	
# ::edge	give-01	purpose	urine	0.0	0.0.1	
# ::edge	reveal-01	ARG0	initial	0.2.0	0.2.0.0	
(a / and 
      :ARG0-of (g / give-01 
            :ARG1 (c2 / cup 
                  :quant (s / several) 
                  :quant-of (c / coffee)) 
            :purpose (u / urine)) 
      :op1 (c3 / claim-01) 
      :op2 (e / exceed-01 
            :ARG1 (r / reveal-01 
                  :ARG0 (i / initial))))

# ::snt smelly back room perfect for the sweatier excesses of the form
# ::tok smelly back room perfect for the sweatier excesses of the form
# ::alignments 10-11|0 3-4|0.0.0.0 2-3|0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:39.532
# ::node	0	form	10-11
# ::node	0.0	back	1-2
# ::node	0.0.0	room	2-3
# ::node	0.0.0.0	perfect	3-4
# ::root	0	form
(f / form 
      :poss-of (b / back 
            :mod-of (r / room 
                  :domain-of (p / perfect))))

# ::snt a rate in excess of five an over dash
# ::tok a rate in excess of five an over dash
# ::alignments 5-6|0.0.0 3-4|0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:39.540
# ::node	0	rate	1-2
# ::node	0.0	exceed-01	3-4
# ::node	0.0.0	5	5-6
# ::root	0	rate
(r / rate 
      :ARG1-of (e / exceed-01 
            :time 5))

# ::snt some 1980s excesses notably the thrift debacle were not always fairly blamed on lax regulation
# ::tok some 1980s excesses notably the thrift debacle were not always fairly blamed on lax regulation
# ::alignments 14-15|0.0 13-14|0.0.0 11-12|0 10-11|0.2 9-10|0.2.0 3-4|0.1 1-2|0.0.0.0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:39.581
# ::node	0	blame-01	11-12
# ::node	0.0	regulate-01	14-15
# ::node	0.0.0	lax-00	13-14
# ::node	0.0.0.0	1980	1-2
# ::node	0.1	notable	3-4
# ::node	0.1.0	some	0-1
# ::node	0.2	fair	10-11
# ::node	0.2.0	always	9-10
# ::root	0	blame-01
# ::edge	blame-01	ARG1	regulate-01	0	0.0	
# ::edge	blame-01	time	fair	0	0.2	
# ::edge	fair	mod	always	0.2	0.2.0	
# ::edge	lax-00	ARG0	1980	0.0.0	0.0.0.0	
# ::edge	lax-00	ARG1	regulate-01	0.0.0	0.0	
# ::edge	notable	op1	blame-01	0.1	0	
# ::edge	some	direction	notable	0.1.0	0.1	
(b / blame-01 
      :ARG1 (r / regulate-01 
            :ARG1-of (l / lax-00 
                  :ARG0 1980)) 
      :op-of (n / notable 
            :direction-of (s / some)) 
      :time (f / fair 
            :mod (a / always)))

# ::snt is on the market with a reputed price tag in excess probably well in excess of 350 million
# ::tok is on the market with a reputed price tag in excess probably well in excess of 350 million
# ::alignments 16-17|0.1.0.0.0.0 14-15|0.1.0.0.0.1 12-13|0.0 11-12|0 10-11|0.1.0.0.0 7-8|0.1.0.0+0.1.0 6-7|0.1 3-4|0.1.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:39.631
# ::node	0	probable	11-12
# ::node	0.0	well	12-13
# ::node	0.1	repute-01	6-7
# ::node	0.1.0	thing	7-8
# ::node	0.1.0.0	price-01	7-8
# ::node	0.1.0.0.0	exceed-01	10-11
# ::node	0.1.0.0.0.0	350	16-17
# ::node	0.1.0.0.0.1	exceed-01	14-15
# ::node	0.1.0.0.0.1.0	market	3-4
# ::root	0	probable
(p / probable 
      :degree-of (w / well) 
      :time-of (r / repute-01 
            :ARG1 (t / thing 
                  :ARG2-of (p2 / price-01 
                        :ARG1 (e2 / exceed-01 
                              :ARG1 350 
                              :ARG2 (e / exceed-01 
                                    :op-of (m / market)))))))

# ::snt the fact that you were not eating bread gave you reason to suppose that you could eat everything else to excess
# ::tok the fact that you were not eating bread gave you reason to suppose that you could eat everything else to excess
# ::alignments 20-21|0.1.2 18-19|0.1.3 17-18|0.1.1 16-17|0.1 15-16|0 14-15|0.1.0 12-13|0.0 10-11|0.0.1 9-10|0.0.1.0 7-8|0.1.2.0.1 6-7|0.1.2.0 3-4|0.1.2.0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:39.909
# ::node	0	possible	15-16
# ::node	0.0	suppose-01	12-13
# ::node	0.0.0	fact	1-2
# ::node	0.0.1	reason	10-11
# ::node	0.0.1.0	you	9-10
# ::node	0.1	eat-01	16-17
# ::node	0.1.0	you	14-15
# ::node	0.1.1	everything	17-18
# ::node	0.1.2	exceed-01	20-21
# ::node	0.1.2.0	eat-01	6-7
# ::node	0.1.2.0.0	you	3-4
# ::node	0.1.2.0.1	bread	7-8
# ::node	0.1.3	else	18-19
# ::root	0	possible
(p / possible 
      :ARG1-of (s / suppose-01 
            :ARG0 (f / fact) 
            :purpose-of (r / reason 
                  :mod (y2 / you))) 
      :mod-of (e4 / eat-01 
            :ARG0 (y / you) 
            :ARG1 (e3 / everything) 
            :ARG2 (e / exceed-01 
                  :ARG1 (e5 / eat-01 
                        :ARG0 (y3 / you) 
                        :ARG1 (b / bread))) 
            :time (e2 / else)))

# ::snt summer has never been a sufficient compensation for his excesses
# ::tok summer has never been a sufficient compensation for his excesses
# ::alignments 6-7|0 5-6|0.1 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:39.919
# ::node	0	compensate-01	6-7
# ::node	0.0	summer	0-1
# ::node	0.1	suffice-01	5-6
# ::root	0	compensate-01
# ::edge	compensate-01	ARG0	summer	0	0.0	
# ::edge	suffice-01	ARG0	compensate-01	0.1	0	
(c / compensate-01 
      :ARG0 (s2 / summer) 
      :ARG0-of (s / suffice-01))

# ::snt the scots oozed an excess of satisfaction afterwards at another job well done to go with their comfortable defeat of fiji six weeks earlier
# ::tok the scots oozed an excess of satisfaction afterwards at another job well done to go with their comfortable defeat of fiji six weeks earlier
# ::alignments 23-24|0.0.0.1 22-23|0.0.0.2+0.0.0 21-22|0.0.0.0 18-19|0.0 17-18|0 11-12|0.0.1.0.0.0 10-11|0.0.1.0.1 9-10|0.0.1.0.1.0 7-8|0.0.1.0.2 6-7|0.0.1.0.0 4-5|0.0.1.0 1-2|0.0.1.1.0.0+0.0.1.1.0+0.0.1.1+0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:40.417
# ::node	0	comfortable	17-18
# ::node	0.0	defeat-01	18-19
# ::node	0.0.0	temporal-quantity	22-23
# ::node	0.0.0.0	6	21-22
# ::node	0.0.0.1	early	23-24
# ::node	0.0.0.2	week	22-23
# ::node	0.0.1	person	1-2
# ::node	0.0.1.0	exceed-01	4-5
# ::node	0.0.1.0.0	satisfy-01	6-7
# ::node	0.0.1.0.0.0	well	11-12
# ::node	0.0.1.0.1	job	10-11
# ::node	0.0.1.0.1.0	another	9-10
# ::node	0.0.1.0.2	afterwards	7-8
# ::node	0.0.1.1	country	1-2
# ::node	0.0.1.1.0	name	1-2
# ::node	0.0.1.1.0.0	"Scotland"	1-2
# ::root	0	comfortable
(c / comfortable 
      :mod-of (d / defeat-01 
            :ARG0 (t / temporal-quantity 
                  :quant 6 
                  :quant-of (e / early) 
                  :unit (w / week)) 
            :ARG1 (p / person 
                  :ARG0-of (e2 / exceed-01 
                        :ARG2 (s / satisfy-01 
                              :ARG0 (w2 / well)) 
                        :time (j / job 
                              :mod (a / another)) 
                        :time (a2 / afterwards)) 
                  :mod (c2 / country 
                        :name (n / name 
                              :op1 "Scotland")))))

# ::snt if your actual intake is in excess of your estimate that would account for the plateau effect that you are experiencing
# ::tok if your actual intake is in excess of your estimate that would account for the plateau effect that you are experiencing
# ::alignments 20-21|0.0.0.0 18-19|0.0.0 16-17|0.0 15-16|0 12-13|0.0.1 9-10|0.0.0.0.0.0 6-7|0.0.0.0.0 3-4|0.0.0.0.0.0.0 2-3|0.0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:40.492
# ::node	0	plateau	15-16
# ::node	0.0	effect-01	16-17
# ::node	0.0.0	you	18-19
# ::node	0.0.0.0	experience-01	20-21
# ::node	0.0.0.0.0	exceed-01	6-7
# ::node	0.0.0.0.0.0	estimate-01	9-10
# ::node	0.0.0.0.0.0.0	take-01	3-4
# ::node	0.0.0.0.0.0.0.0	actual	2-3
# ::node	0.0.1	account	12-13
# ::root	0	plateau
(p / plateau 
      :ARG1-of (e2 / effect-01 
            :ARG0 (y / you 
                  :ARG0-of (e / experience-01 
                        :ARG1 (e4 / exceed-01 
                              :ARG1 (e3 / estimate-01 
                                    :ARG1 (t / take-01 
                                          :mod (a2 / actual)))))) 
            :prep-in-of (a / account)))

# ::snt the fear is that the unions assets in excess of 70 million would be at threat from sequestration if it were to condone such action
# ::tok the fear is that the unions assets in excess of 70 million would be at threat from sequestration if it were to condone such action
# ::alignments 24-25|0.0.1 23-24|0.0.1.1 22-23|0.0 19-20|0.0.0 15-16|0.0.1.0 10-11|0.0.1.0.0 8-9|0.0.1.0.1.1 6-7|0.0.1.0.1 5-6|0.0.1.0.1.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:40.601
# ::node	0	fear-01	1-2
# ::node	0.0	condone-01	22-23
# ::node	0.0.0	it	19-20
# ::node	0.0.1	action	24-25
# ::node	0.0.1.0	threaten-01	15-16
# ::node	0.0.1.0.0	70	10-11
# ::node	0.0.1.0.1	asset	6-7
# ::node	0.0.1.0.1.0	union	5-6
# ::node	0.0.1.0.1.1	exceed-01	8-9
# ::node	0.0.1.1	such	23-24
# ::root	0	fear-01
(f / fear-01 
      :ARG2-of (c / condone-01 
            :ARG0 (i / it) 
            :ARG1 (a / action 
                  :ARG0-of (t / threaten-01 
                        :ARG1 70 
                        :ARG2 (a2 / asset 
                              :mod (u / union) 
                              :topic (e / exceed-01))) 
                  :mod (s / such))))

# ::snt mr patten who has been made the lead minister in charge of the government policy on homelessness will announce an additional sum in excess of 100m for hostels and housing associations to tackle homelessness by reducing the numbers in bed and breakfast accommodation
# ::tok mr patten who has been made the lead minister in charge of the government policy on homelessness will announce an additional sum in excess of 100m for hostels and housing associations to tackle homelessness by reducing the numbers in bed and breakfast accommodation
# ::alignments 42-43|0.2 40-41|0 39-40|0.1 37-38|0.0.2.1 35-36|0.0.2 32-33|0.0 30-31|0.0.2.0.0.0 29-30|0.0.2.0.0.0.0 28-29|0.0.2.0.0 23-24|0.0.2.0 21-22|0.0.0 20-21|0.0.0.1 18-19|0.0.0.0 14-15|0.0.0.0.0 8-9|0.0.1.0+0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:41.198
# ::node	0	and	40-41
# ::node	0.0	tackle-01	32-33
# ::node	0.0.0	sum	21-22
# ::node	0.0.0.0	announce-01	18-19
# ::node	0.0.0.0.0	policy	14-15
# ::node	0.0.0.1	additional	20-21
# ::node	0.0.1	have-org-role-91	8-9
# ::node	0.0.1.0	minister	8-9
# ::node	0.0.2	reduce-01	35-36
# ::node	0.0.2.0	exceed-01	23-24
# ::node	0.0.2.0.0	and	28-29
# ::node	0.0.2.0.0.0	association	30-31
# ::node	0.0.2.0.0.0.0	house-01	29-30
# ::node	0.0.2.1	number	37-38
# ::node	0.1	bed	39-40
# ::node	0.2	accommodation	42-43
# ::root	0	and
# ::edge	and	op1	association	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	and	op1	tackle-01	0	0.0	
# ::edge	and	op2	bed	0	0.1	
# ::edge	and	op3	accommodation	0	0.2	
# ::edge	announce-01	ARG1	sum	0.0.0.0	0.0.0	
# ::edge	announce-01	ARG2	policy	0.0.0.0	0.0.0.0.0	
# ::edge	exceed-01	ARG1	and	0.0.2.0	0.0.2.0.0	
# ::edge	have-org-role-91	ARG2	minister	0.0.1	0.0.1.0	
# ::edge	house-01	ARG0	association	0.0.2.0.0.0.0	0.0.2.0.0.0	
# ::edge	reduce-01	ARG0	exceed-01	0.0.2	0.0.2.0	
# ::edge	reduce-01	ARG1	number	0.0.2	0.0.2.1	
# ::edge	sum	mod	additional	0.0.0	0.0.0.1	
# ::edge	tackle-01	ARG0	sum	0.0	0.0.0	
# ::edge	tackle-01	ARG1	have-org-role-91	0.0	0.0.1	
# ::edge	tackle-01	ARG2	reduce-01	0.0	0.0.2	
(a2 / and 
      :op1 (t / tackle-01 
            :ARG0 (s / sum 
                  :ARG1-of (a6 / announce-01 
                        :ARG2 (p / policy)) 
                  :mod (a5 / additional)) 
            :ARG1 (h2 / have-org-role-91 
                  :ARG2 (m / minister)) 
            :ARG2 (r / reduce-01 
                  :ARG0 (e / exceed-01 
                        :ARG1 (a4 / and 
                              :op1 (a3 / association 
                                    :ARG0-of (h / house-01)))) 
                  :ARG1 (n / number))) 
      :op2 (b / bed) 
      :op3 (a / accommodation))

# ::snt civil jury trials throughout the nation number in excess of 30000 annually most of them presumably in tort cases
# ::tok civil jury trials throughout the nation number in excess of 30000 annually most of them presumably in tort cases
# ::alignments 18-19|0.3.0.0 15-16|0.3.0 12-13|0.3.0.1 10-11|0.3.1 8-9|0.3 6-7|0.2 5-6|0.2.0 3-4|0.0 2-3|0 1-2|0.1 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:41.261
# ::node	0	trial	2-3
# ::node	0.0	throughout	3-4
# ::node	0.1	jury	1-2
# ::node	0.1.0	civil	0-1
# ::node	0.2	number	6-7
# ::node	0.2.0	nation	5-6
# ::node	0.3	exceed-01	8-9
# ::node	0.3.0	presume-01	15-16
# ::node	0.3.0.0	case	18-19
# ::node	0.3.0.1	most	12-13
# ::node	0.3.1	30000	10-11
# ::root	0	trial
# ::edge	exceed-01	ARG1	presume-01	0.3	0.3.0	
# ::edge	exceed-01	time	30000	0.3	0.3.1	
# ::edge	jury	mod	civil	0.1	0.1.0	
# ::edge	number	mod	nation	0.2	0.2.0	
# ::edge	presume-01	ARG0	case	0.3.0	0.3.0.0	
# ::edge	presume-01	ARG1	most	0.3.0	0.3.0.1	
# ::edge	trial	location	throughout	0	0.0	
# ::edge	trial	mod	jury	0	0.1	
# ::edge	trial	poss	exceed-01	0	0.3	
# ::edge	trial	poss	number	0	0.2	
(t2 / trial 
      :location (t / throughout) 
      :mod (j / jury 
            :mod (c2 / civil)) 
      :poss (n / number 
            :mod (n2 / nation)) 
      :poss (e / exceed-01 
            :ARG1 (p / presume-01 
                  :ARG0 (c / case) 
                  :ARG1 (m / most)) 
            :time 30000))

# ::snt others believe that excesses of jury generosity would subside if only the press would put its house in order
# ::tok others believe that excesses of jury generosity would subside if only the press would put its house in order
# ::alignments 16-17|0.1 12-13|0.1.0 10-11|0.1.0.0 5-6|0.2 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:41.307
# ::node	0	believe-01	1-2
# ::node	0.0	other	0-1
# ::node	0.1	house	16-17
# ::node	0.1.0	press	12-13
# ::node	0.1.0.0	only	10-11
# ::node	0.2	jury	5-6
# ::root	0	believe-01
# ::edge	believe-01	ARG0	other	0	0.0	
# ::edge	believe-01	ARG1	house	0	0.1	
# ::edge	believe-01	time	jury	0	0.2	
# ::edge	house	poss	press	0.1	0.1.0	
# ::edge	press	mod	only	0.1.0	0.1.0.0	
(b / believe-01 
      :ARG0 (o2 / other) 
      :ARG1 (h / house 
            :poss (p / press 
                  :mod (o / only))) 
      :time (j / jury))

# ::snt total realisations from these disposals should be in excess of 70m with the largest amount likely to be the waste operation
# ::tok total realisations from these disposals should be in excess of 70m with the largest amount likely to be the waste operation
# ::alignments 20-21|0.1 19-20|0 15-16|0.1.0 14-15|0.1.0.0 13-14|0.0.0.0.0+0.0.0.0 8-9|0.0 5-6|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:41.349
# ::node	0	waste-01	19-20
# ::node	0.0	exceed-01	8-9
# ::node	0.0.0	recommend-01	5-6
# ::node	0.0.0.0	large	13-14
# ::node	0.0.0.0.0	most	13-14
# ::node	0.1	operation	20-21
# ::node	0.1.0	likely	15-16
# ::node	0.1.0.0	amount	14-15
# ::root	0	waste-01
# ::edge	exceed-01	ARG1	recommend-01	0.0	0.0.0	
# ::edge	large	degree	most	0.0.0.0	0.0.0.0.0	
# ::edge	likely	domain	amount	0.1.0	0.1.0.0	
# ::edge	likely	topic	operation	0.1.0	0.1	
# ::edge	operation	mod	waste-01	0.1	0	
# ::edge	recommend-01	ARG1	large	0.0.0	0.0.0.0	
# ::edge	waste-01	ARG1	exceed-01	0	0.0	
(w / waste-01 
      :ARG1 (e / exceed-01 
            :ARG1 (r / recommend-01 
                  :ARG1 (l2 / large 
                        :degree (m / most)))) 
      :mod-of (o / operation 
            :topic-of (l / likely 
                  :domain (a / amount))))

# ::snt in excess of 320bhp and 400lb ft of treetoppling torque
# ::tok in excess of 320bhp and 400lb ft of treetoppling torque
# ::alignments 4-5|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:41.357
# ::node	0	and	4-5
# ::node	0.0	exceed-01	1-2
# ::root	0	and
# ::edge	and	op1	exceed-01	0	0.0	
(a / and 
      :op1 (e / exceed-01))

# ::snt this is after a 20 per cent discount and there is a 50 excess
# ::tok this is after a 20 per cent discount and there is a 50 excess
# ::alignments 13-14|0.0 12-13|0.0.1 8-9|0 7-8|0.1 6-7|0.1.1.0+0.1.1 4-5|0.0.0 2-3|0.1.0 0-1|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:41.396
# ::node	0	and	8-9
# ::node	0.0	exceed-01	13-14
# ::node	0.0.0	20	4-5
# ::node	0.0.1	50	12-13
# ::node	0.1	discount-02	7-8
# ::node	0.1.0	after	2-3
# ::node	0.1.0.0	this	0-1
# ::node	0.1.1	monetary-quantity	6-7
# ::node	0.1.1.0	cent	6-7
# ::root	0	and
# ::edge	after	poss	this	0.1.0	0.1.0.0	
# ::edge	and	op1	discount-02	0	0.1	
# ::edge	discount-02	ARG0	after	0.1	0.1.0	
# ::edge	discount-02	ARG1	monetary-quantity	0.1	0.1.1	
# ::edge	exceed-01	ARG0	20	0.0	0.0.0	
# ::edge	exceed-01	ARG1	and	0.0	0	
# ::edge	exceed-01	quant	50	0.0	0.0.1	
# ::edge	monetary-quantity	unit	cent	0.1.1	0.1.1.0	
(a / and 
      :ARG1-of (e / exceed-01 
            :ARG0 20 
            :quant 50) 
      :op1 (d / discount-02 
            :ARG0 (a2 / after 
                  :poss (t / this)) 
            :ARG1 (m / monetary-quantity 
                  :unit (c / cent))))

# ::snt the people he worked for could hardly ignore the presence of this live wire with an excess of lip
# ::tok the people he worked for could hardly ignore the presence of this live wire with an excess of lip
# ::alignments 16-17|0.0.2 13-14|0.0.2.0 12-13|0.0.2.0.0 11-12|0.0.2.0.1 9-10|0.0.1 7-8|0.0 6-7|0.0.3 5-6|0 3-4|0.0.0.0 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:41.442
# ::node	0	possible	5-6
# ::node	0.0	ignore-01	7-8
# ::node	0.0.0	he	2-3
# ::node	0.0.0.0	work-01	3-4
# ::node	0.0.1	presence	9-10
# ::node	0.0.2	exceed-01	16-17
# ::node	0.0.2.0	wire-01	13-14
# ::node	0.0.2.0.0	live-01	12-13
# ::node	0.0.2.0.1	this	11-12
# ::node	0.0.3	hardly	6-7
# ::root	0	possible
# ::edge	exceed-01	ARG1	ignore-01	0.0.2	0.0	
# ::edge	ignore-01	ARG0	he	0.0	0.0.0	
# ::edge	ignore-01	ARG1	presence	0.0	0.0.1	
# ::edge	ignore-01	mod	hardly	0.0	0.0.3	
# ::edge	possible	domain	ignore-01	0	0.0	
# ::edge	wire-01	ARG1	exceed-01	0.0.2.0	0.0.2	
# ::edge	wire-01	manner	live-01	0.0.2.0	0.0.2.0.0	
# ::edge	wire-01	mod	this	0.0.2.0	0.0.2.0.1	
# ::edge	work-01	ARG0	he	0.0.0.0	0.0.0	
(p2 / possible 
      :domain (i / ignore-01 
            :ARG0 (h2 / he 
                  :ARG0-of (w2 / work-01)) 
            :ARG1 (p / presence) 
            :ARG1-of (e / exceed-01 
                  :ARG1-of (w / wire-01 
                        :manner (l / live-01) 
                        :mod (t / this))) 
            :mod (h / hardly)))

# ::snt the sale is in excess of the most recent valuation of the properties carried out by the surveyors healey and baker
# ::tok the sale is in excess of the most recent valuation of the properties carried out by the surveyors healey and baker
# ::alignments 19-20|0 12-13|0.0.0.0 9-10|0.0.0 8-9|0.0.0.1 7-8|0.0.0.1.0 4-5|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:41.483
# ::node	0	and	19-20
# ::node	0.0	exceed-01	4-5
# ::node	0.0.0	value-01	9-10
# ::node	0.0.0.0	property	12-13
# ::node	0.0.0.1	recent	8-9
# ::node	0.0.0.1.0	most	7-8
# ::root	0	and
# ::edge	and	op1	exceed-01	0	0.0	
# ::edge	exceed-01	ARG1	value-01	0.0	0.0.0	
# ::edge	recent	degree	most	0.0.0.1	0.0.0.1.0	
# ::edge	value-01	ARG1	property	0.0.0	0.0.0.0	
# ::edge	value-01	time	recent	0.0.0	0.0.0.1	
(a / and 
      :op1 (e / exceed-01 
            :ARG1 (v / value-01 
                  :ARG1 (p / property) 
                  :time (r / recent 
                        :degree (m / most)))))

# ::snt   mr tom lester described the application as vastly in excess of what is necessary while mrs jan morgan said she would support a smaller area
# ::tok mr tom lester described the application as vastly in excess of what is necessary while mrs jan morgan said she would support a smaller area
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:41.484
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt but one can also see that he was a decent honourable man who efficiently carried out his governments policy and who may even have tried to moderate its excesses
# ::tok but one can also see that he was a decent honourable man who efficiently carried out his governments policy and who may even have tried to moderate its excesses
# ::alignments 26-27|0.0.0.0.0.0 24-25|0.0.0.0.0 21-22|0.0.0.0.0.1.0+0.0.0.0.0.1 19-20|0.0.0.0.0.2 18-19|0.0.0.0.0.2.0 17-18|0.0.0.0.0.2.0.0.0+0.0.0.0.0.2.0.0 13-14|0.0.0.0.1 11-12|0.0.0.0 10-11|0.0.0.0.4 9-10|0.0.0.0.3 6-7|0.0.0.0.2 4-5|0.0.0 3-4|0.0.0.1 2-3|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:41.898
# ::node	0	contrast-01	0-1
# ::node	0.0	possible	2-3
# ::node	0.0.0	see-01	4-5
# ::node	0.0.0.0	man	11-12
# ::node	0.0.0.0.0	try-01	24-25
# ::node	0.0.0.0.0.0	moderate	26-27
# ::node	0.0.0.0.0.1	date-entity	21-22
# ::node	0.0.0.0.0.1.0	5	21-22
# ::node	0.0.0.0.0.2	and	19-20
# ::node	0.0.0.0.0.2.0	policy	18-19
# ::node	0.0.0.0.0.2.0.0	government-organization	17-18
# ::node	0.0.0.0.0.2.0.0.0	govern-01	17-18
# ::node	0.0.0.0.1	efficient-41	13-14
# ::node	0.0.0.0.2	he	6-7
# ::node	0.0.0.0.3	decent	9-10
# ::node	0.0.0.0.4	honourable	10-11
# ::node	0.0.0.1	also	3-4
# ::root	0	contrast-01
# ::edge	and	op1	policy	0.0.0.0.0.2	0.0.0.0.0.2.0	
# ::edge	and	op2	try-01	0.0.0.0.0.2	0.0.0.0.0	
# ::edge	contrast-01	ARG2	possible	0	0.0	
# ::edge	date-entity	domain	try-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	date-entity	month	5	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	efficient-41	ARG0	man	0.0.0.0.1	0.0.0.0	
# ::edge	govern-01	ARG0	government-organization	0.0.0.0.0.2.0.0.0	0.0.0.0.0.2.0.0	
# ::edge	man	domain	he	0.0.0.0	0.0.0.0.2	
# ::edge	man	mod	decent	0.0.0.0	0.0.0.0.3	
# ::edge	man	mod	honourable	0.0.0.0	0.0.0.0.4	
# ::edge	policy	mod	government-organization	0.0.0.0.0.2.0	0.0.0.0.0.2.0.0	
# ::edge	possible	domain	see-01	0.0	0.0.0	
# ::edge	see-01	ARG1	man	0.0.0	0.0.0.0	
# ::edge	see-01	mod	also	0.0.0	0.0.0.1	
# ::edge	try-01	ARG0	man	0.0.0.0.0	0.0.0.0	
# ::edge	try-01	ARG1	moderate	0.0.0.0.0	0.0.0.0.0.0	
(c / contrast-01 
      :ARG2 (p2 / possible 
            :domain (s / see-01 
                  :ARG1 (m2 / man 
                        :ARG0-of (t / try-01 
                              :ARG1 (m / moderate) 
                              :domain-of (d / date-entity 
                                    :month 5) 
                              :op-of (a / and 
                                    :op1 (p / policy 
                                          :mod (g / government-organization 
                                                :ARG0-of (g2 / govern-01))))) 
                        :ARG0-of (e / efficient-41) 
                        :domain (h2 / he) 
                        :mod (d2 / decent) 
                        :mod (h / honourable)) 
                  :mod (a2 / also))))

# ::snt march  responding to a new threat to legislate against tabloid excesses the press council appoints a troubleshooting task force above to deal summarily with complaints
# ::tok march responding to a new threat to legislate against tabloid excesses the press council appoints a troubleshooting task force above to deal summarily with complaints
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:41.899
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt she seemed to michael at this time a rather strange young person unbalanced perhaps and given to excesses though as in the case of her brother he soon forgot that he had ever thought this about her
# ::tok she seemed to michael at this time a rather strange young person unbalanced perhaps and given to excesses though as in the case of her brother he soon forgot that he had ever thought this about her
# ::alignments 34-35|0.1 33-34|0 32-33|0.3 30-31|0.0 28-29|0.2 27-28|0.2.1 26-27|0.2.0 25-26|0.2.0.0.1+0.2.0.0 22-23|0.2.2 15-16|0.2.0.0.0.0 14-15|0.2.0.0.0.0.1 13-14|0.2.0.0.0.0.1.0 11-12|0.2.0.0.0 10-11|0.2.0.0.0.2 9-10|0.2.0.0.0.1 6-7|0.2.0.0.0.0.0.1 5-6|0.2.0.0.0.0.0.1.0 1-2|0.2.0.0.0.0.0 0-1|0.2.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:42.537
# ::node	0	think-01	33-34
# ::node	0.0	he	30-31
# ::node	0.1	this	34-35
# ::node	0.2	forget-01	28-29
# ::node	0.2.0	he	26-27
# ::node	0.2.0.0	have-rel-role-91	25-26
# ::node	0.2.0.0.0	person	11-12
# ::node	0.2.0.0.0.0	give-01	15-16
# ::node	0.2.0.0.0.0.0	seem-01	1-2
# ::node	0.2.0.0.0.0.0.0	she	0-1
# ::node	0.2.0.0.0.0.0.1	time	6-7
# ::node	0.2.0.0.0.0.0.1.0	this	5-6
# ::node	0.2.0.0.0.0.1	and	14-15
# ::node	0.2.0.0.0.0.1.0	perhaps	13-14
# ::node	0.2.0.0.0.1	strange	9-10
# ::node	0.2.0.0.0.2	young	10-11
# ::node	0.2.0.0.1	brother	25-26
# ::node	0.2.1	soon	27-28
# ::node	0.2.2	case	22-23
# ::node	0.3	ever	32-33
# ::root	0	think-01
# ::edge	and	op1	perhaps	0.2.0.0.0.0.1	0.2.0.0.0.0.1.0	
# ::edge	and	op2	give-01	0.2.0.0.0.0.1	0.2.0.0.0.0	
# ::edge	forget-01	ARG0	he	0.2	0.2.0	
# ::edge	forget-01	ARG1	think-01	0.2	0	
# ::edge	forget-01	time	case	0.2	0.2.2	
# ::edge	forget-01	time	soon	0.2	0.2.1	
# ::edge	give-01	ARG0	person	0.2.0.0.0.0	0.2.0.0.0	
# ::edge	give-01	ARG1	seem-01	0.2.0.0.0.0	0.2.0.0.0.0.0	
# ::edge	have-rel-role-91	ARG0	person	0.2.0.0	0.2.0.0.0	
# ::edge	have-rel-role-91	ARG1	he	0.2.0.0	0.2.0	
# ::edge	have-rel-role-91	ARG2	brother	0.2.0.0	0.2.0.0.1	
# ::edge	person	mod	strange	0.2.0.0.0	0.2.0.0.0.1	
# ::edge	person	mod	young	0.2.0.0.0	0.2.0.0.0.2	
# ::edge	seem-01	ARG0	she	0.2.0.0.0.0.0	0.2.0.0.0.0.0.0	
# ::edge	seem-01	ARG1	time	0.2.0.0.0.0.0	0.2.0.0.0.0.0.1	
# ::edge	think-01	ARG0	he	0	0.0	
# ::edge	think-01	ARG1	this	0	0.1	
# ::edge	think-01	mod	ever	0	0.3	
# ::edge	time	mod	this	0.2.0.0.0.0.0.1	0.2.0.0.0.0.0.1.0	
(t2 / think-01 
      :ARG0 (h / he) 
      :ARG1 (t / this) 
      :ARG1-of (f / forget-01 
            :ARG0 (h2 / he 
                  :ARG1-of (h3 / have-rel-role-91 
                        :ARG0 (p2 / person 
                              :ARG0-of (g / give-01 
                                    :ARG1 (s3 / seem-01 
                                          :ARG0 (s4 / she) 
                                          :ARG1 (t3 / time 
                                                :mod (t4 / this))) 
                                    :op-of (a / and 
                                          :op1 (p / perhaps))) 
                              :mod (s2 / strange) 
                              :mod (y / young)) 
                        :ARG2 (b / brother))) 
            :time (s / soon) 
            :time (c / case)) 
      :mod (e / ever))

# ::snt he had drunk and eaten to excess he wanted sleep urgently
# ::tok he had drunk and eaten to excess he wanted sleep urgently
# ::alignments 10-11|0.1.1.0.1 9-10|0.1.1.0.0.0 8-9|0.1.1.0 7-8|0.1.1.0.0 6-7|0.1.1 4-5|0.1 3-4|0 2-3|0.0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:42.590
# ::node	0	and	3-4
# ::node	0.0	drunk	2-3
# ::node	0.1	eat-01	4-5
# ::node	0.1.0	he	0-1
# ::node	0.1.1	exceed-01	6-7
# ::node	0.1.1.0	want-01	8-9
# ::node	0.1.1.0.0	he	7-8
# ::node	0.1.1.0.0.0	sleep-01	9-10
# ::node	0.1.1.0.1	urgent	10-11
# ::root	0	and
# ::edge	and	op1	drunk	0	0.0	
# ::edge	and	op2	eat-01	0	0.1	
# ::edge	eat-01	ARG0	he	0.1	0.1.0	
# ::edge	eat-01	ARG1	exceed-01	0.1	0.1.1	
# ::edge	sleep-01	ARG0	he	0.1.1.0.0.0	0.1.1.0.0	
# ::edge	want-01	ARG0	he	0.1.1.0	0.1.1.0.0	
# ::edge	want-01	ARG1	exceed-01	0.1.1.0	0.1.1	
# ::edge	want-01	manner	urgent	0.1.1.0	0.1.1.0.1	
(a / and 
      :op1 (d / drunk) 
      :op2 (e2 / eat-01 
            :ARG0 (h2 / he) 
            :ARG1 (e / exceed-01 
                  :ARG1-of (w / want-01 
                        :ARG0 (h / he 
                              :ARG0-of (s / sleep-01)) 
                        :manner (u / urgent)))))

# ::snt our anxieties about erotic excess for example the cleveland affair have made it very hard to concentrate on erotic deficit
# ::tok our anxieties about erotic excess for example the cleveland affair have made it very hard to concentrate on erotic deficit
# ::alignments 19-20|0.1.1 18-19|0.1.1.0 16-17|0.1 14-15|0 13-14|0.0 12-13|0.1.0 9-10|0.1.2 6-7|0.1.2.0 4-5|0.1.2.0.0 3-4|0.1.2.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:42.667
# ::node	0	hard	14-15
# ::node	0.0	very	13-14
# ::node	0.1	concentrate-01	16-17
# ::node	0.1.0	it	12-13
# ::node	0.1.1	deficit	19-20
# ::node	0.1.1.0	erotic	18-19
# ::node	0.1.2	affair	9-10
# ::node	0.1.2.0	example	6-7
# ::node	0.1.2.0.0	exceed-01	4-5
# ::node	0.1.2.0.0.0	erotic	3-4
# ::root	0	hard
# ::edge	affair	mod	example	0.1.2	0.1.2.0	
# ::edge	affair	op1	concentrate-01	0.1.2	0.1	
# ::edge	concentrate-01	ARG0	it	0.1	0.1.0	
# ::edge	concentrate-01	ARG1	deficit	0.1	0.1.1	
# ::edge	deficit	mod	erotic	0.1.1	0.1.1.0	
# ::edge	exceed-01	ARG1	example	0.1.2.0.0	0.1.2.0	
# ::edge	exceed-01	mod	erotic	0.1.2.0.0	0.1.2.0.0.0	
# ::edge	hard	degree	very	0	0.0	
# ::edge	hard	domain	concentrate-01	0	0.1	
(h / hard 
      :degree (v / very) 
      :domain (c / concentrate-01 
            :ARG0 (i / it) 
            :ARG1 (d / deficit 
                  :mod (e / erotic)) 
            :op-of (a / affair 
                  :mod (e2 / example 
                        :ARG1-of (e3 / exceed-01 
                              :mod (e4 / erotic))))))

# ::snt my solicitor says that as the car park was officially closed all i was doing was trespassing on council property same as the gipsies who were there and therefore there could be no excess charge owed he said yesterday
# ::tok my solicitor says that as the car park was officially closed all i was doing was trespassing on council property same as the gipsies who were there and therefore there could be no excess charge owed he said yesterday
# ::alignments 38-39|0.3 37-38|0 36-37|0.0 35-36|0.2 33-34|0.1.1.0 32-33|0.1.1.1 30-31|0.1.1 27-28|0.1 20-21|0.1.1.0.0 19-20|0.1.1.0.0.0.0 18-19|0.1.1.0.0.0 14-15|0.1.0.0.0 12-13|0.1.0.0 11-12|0.1.0.0.0.0 10-11|0.1.0.0.0.1 9-10|0.1.0.0.0.1.1 7-8|0.1.0.0.0.1.0 6-7|0.1.0.0.0.1.0.0 2-3|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:43.740
# ::node	0	say-01	37-38
# ::node	0.0	he	36-37
# ::node	0.1	and	27-28
# ::node	0.1.0	say-01	2-3
# ::node	0.1.0.0	i	12-13
# ::node	0.1.0.0.0	do-02	14-15
# ::node	0.1.0.0.0.0	all	11-12
# ::node	0.1.0.0.0.1	close-01	10-11
# ::node	0.1.0.0.0.1.0	park	7-8
# ::node	0.1.0.0.0.1.0.0	car	6-7
# ::node	0.1.0.0.0.1.1	official	9-10
# ::node	0.1.1	possible	30-31
# ::node	0.1.1.0	exceed-01	33-34
# ::node	0.1.1.0.0	same-41	20-21
# ::node	0.1.1.0.0.0	council	18-19
# ::node	0.1.1.0.0.0.0	property	19-20
# ::node	0.1.1.1	-	32-33
# ::node	0.2	owe-01	35-36
# ::node	0.3	yesterday	38-39
# ::root	0	say-01
# ::edge	and	op1	possible	0.1	0.1.1	
# ::edge	close-01	ARG0	park	0.1.0.0.0.1	0.1.0.0.0.1.0	
# ::edge	close-01	ARG1	do-02	0.1.0.0.0.1	0.1.0.0.0	
# ::edge	close-01	manner	official	0.1.0.0.0.1	0.1.0.0.0.1.1	
# ::edge	do-02	ARG0	i	0.1.0.0.0	0.1.0.0	
# ::edge	do-02	ARG1	all	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	exceed-01	ARG0	possible	0.1.1.0	0.1.1	
# ::edge	exceed-01	ARG1	same-41	0.1.1.0	0.1.1.0.0	
# ::edge	owe-01	ARG1	say-01	0.2	0	
# ::edge	park	mod	car	0.1.0.0.0.1.0	0.1.0.0.0.1.0.0	
# ::edge	possible	polarity	-	0.1.1	0.1.1.1	
# ::edge	property	mod	council	0.1.1.0.0.0.0	0.1.1.0.0.0	
# ::edge	same-41	ARG1	council	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG0	i	0.1.0	0.1.0.0	
# ::edge	say-01	ARG1	and	0	0.1	
# ::edge	say-01	ARG1	and	0.1.0	0.1	
# ::edge	say-01	time	yesterday	0	0.3	
(s / say-01 
      :ARG0 (h / he) 
      :ARG1 (a / and 
            :ARG1-of (s3 / say-01 
                  :ARG0 (i / i 
                        :ARG0-of (d / do-02 
                              :ARG1 (a2 / all) 
                              :ARG1-of (c2 / close-01 
                                    :ARG0 (p3 / park 
                                          :mod (c3 / car)) 
                                    :manner (o2 / official))))) 
            :op1 (p / possible 
                  :ARG0-of (e / exceed-01 
                        :ARG1 (s2 / same-41 
                              :ARG1 (c / council 
                                    :mod-of (p2 / property)))) 
                  :polarity (- / -))) 
      :ARG1-of (o / owe-01) 
      :time (y / yesterday))

# ::snt circus circus the las vegasbased gambling empire which embodies the worst excesses of the desert city is at it again
# ::tok circus circus the las vegasbased gambling empire which embodies the worst excesses of the desert city is at it again
# ::alignments 19-20|0.2 18-19|0.3 15-16|0.1.0.0 14-15|0.1.0.0.0 10-11|0.0 8-9|0.1.0 6-7|0.1 5-6|0 1-2|0.1.1 0-1|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:43.836
# ::node	0	gamble-01	5-6
# ::node	0.0	bad	10-11
# ::node	0.1	empire	6-7
# ::node	0.1.0	embody-01	8-9
# ::node	0.1.0.0	city	15-16
# ::node	0.1.0.0.0	desert	14-15
# ::node	0.1.1	circus	1-2
# ::node	0.1.1.0	circus	0-1
# ::node	0.2	again	19-20
# ::node	0.3	it	18-19
# ::root	0	gamble-01
# ::edge	again	op1	gamble-01	0.2	0	
# ::edge	circus	mod	circus	0.1.1	0.1.1.0	
# ::edge	city	location	desert	0.1.0.0	0.1.0.0.0	
# ::edge	embody-01	ARG0	empire	0.1.0	0.1	
# ::edge	embody-01	ARG1	city	0.1.0	0.1.0.0	
# ::edge	empire	poss	circus	0.1	0.1.1	
# ::edge	gamble-01	ARG0	bad	0	0.0	
# ::edge	gamble-01	ARG1	empire	0	0.1	
# ::edge	it	op1	gamble-01	0.3	0	
(g / gamble-01 
      :ARG0 (b / bad) 
      :ARG1 (e2 / empire 
            :ARG0-of (e / embody-01 
                  :ARG1 (c / city 
                        :location (d / desert))) 
            :poss (c2 / circus 
                  :mod (c3 / circus))) 
      :op-of (a / again) 
      :op-of (i / it))

# ::snt alongside the cartoon an editorial headlined the beginning of the end said the iron lady was increasingly isolated by her excess of authoritarianism
# ::tok alongside the cartoon an editorial headlined the beginning of the end said the iron lady was increasingly isolated by her excess of authoritarianism
# ::alignments 20-21|0.0.2 17-18|0.0 16-17|0.0.1 14-15|0.0.0 13-14|0.0.0.0.2 11-12|0 7-8|0.0.0.0 5-6|0.0.0.0.1 4-5|0.0.0.0.1.0 2-3|0.0.0.0.0 0-1|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:43.932
# ::node	0	say-01	11-12
# ::node	0.0	isolate-01	17-18
# ::node	0.0.0	lady	14-15
# ::node	0.0.0.0	begin-01	7-8
# ::node	0.0.0.0.0	cartoon	2-3
# ::node	0.0.0.0.0.0	alongside	0-1
# ::node	0.0.0.0.1	headline-01	5-6
# ::node	0.0.0.0.1.0	editorial	4-5
# ::node	0.0.0.0.2	iron	13-14
# ::node	0.0.1	increase-01	16-17
# ::node	0.0.2	exceed-01	20-21
# ::root	0	say-01
# ::edge	alongside	op1	cartoon	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	begin-01	ARG1	cartoon	0.0.0.0	0.0.0.0.0	
# ::edge	begin-01	location	iron	0.0.0.0	0.0.0.0.2	
# ::edge	begin-01	topic	lady	0.0.0.0	0.0.0	
# ::edge	headline-01	ARG0	editorial	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	headline-01	ARG1	begin-01	0.0.0.0.1	0.0.0.0	
# ::edge	increase-01	ARG1	isolate-01	0.0.1	0.0	
# ::edge	isolate-01	ARG1	lady	0.0	0.0.0	
# ::edge	isolate-01	ARG2	exceed-01	0.0	0.0.2	
# ::edge	say-01	ARG1	isolate-01	0	0.0	
(s / say-01 
      :ARG1 (i / isolate-01 
            :ARG1 (l / lady 
                  :topic-of (b / begin-01 
                        :ARG1 (c / cartoon 
                              :op-of (a / alongside)) 
                        :ARG1-of (h / headline-01 
                              :ARG0 (e2 / editorial)) 
                        :location (i3 / iron))) 
            :ARG1-of (i2 / increase-01) 
            :ARG2 (e / exceed-01)))

# ::snt his bubbling forwardness could collapse in an excess of emotionality
# ::tok his bubbling forwardness could collapse in an excess of emotionality
# ::alignments 7-8|0.0.0 4-5|0.0 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:43.942
# ::node	0	possible	3-4
# ::node	0.0	collapse-01	4-5
# ::node	0.0.0	exceed-01	7-8
# ::root	0	possible
# ::edge	collapse-01	ARG1	exceed-01	0.0	0.0.0	
# ::edge	possible	domain	collapse-01	0	0.0	
(p / possible 
      :domain (c / collapse-01 
            :ARG1 (e / exceed-01)))

# ::snt the plots dramatic excesses which can be comically absurd take on a brief reality as she dances
# ::tok the plots dramatic excesses which can be comically absurd take on a brief reality as she dances
# ::alignments 15-16|0.0.0 13-14|0.0.0.0 12-13|0.0.0.0.0 8-9|0.1 5-6|0 2-3|0.2 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:43.973
# ::node	0	possible	5-6
# ::node	0.0	plot-01	1-2
# ::node	0.0.0	she	15-16
# ::node	0.0.0.0	reality	13-14
# ::node	0.0.0.0.0	brief	12-13
# ::node	0.1	absurd	8-9
# ::node	0.2	dramatic	2-3
# ::root	0	possible
# ::edge	dramatic	mod	possible	0.2	0	
# ::edge	plot-01	ARG0	she	0.0	0.0.0	
# ::edge	plot-01	ARG1	possible	0.0	0	
# ::edge	possible	domain	absurd	0	0.1	
# ::edge	reality	mod	brief	0.0.0.0	0.0.0.0.0	
# ::edge	reality	poss	she	0.0.0.0	0.0.0	
(p / possible 
      :ARG1-of (p2 / plot-01 
            :ARG0 (s / she 
                  :poss-of (r / reality 
                        :mod (b / brief)))) 
      :domain (a / absurd) 
      :mod-of (d / dramatic))

# ::snt a covered platform to keep off the worst excesses of the monsoon rain a ticket office and a large bare waitingroom or shed with a standpipe outside were all that were provided
# ::tok a covered platform to keep off the worst excesses of the monsoon rain a ticket office and a large bare waitingroom or shed with a standpipe outside were all that were provided
# ::alignments 31-32|0.3.0 28-29|0.3.0.0 26-27|0.1 22-23|0 21-22|0.2 19-20|0.0.1 18-19|0.0.1.1 16-17|0.3 15-16|0.3.1 14-15|0.3.1.0 12-13|0.0 7-8|0.0.1.0 5-6|0.0.0 2-3|0.2.0 1-2|0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:44.209
# ::node	0	shed-01	22-23
# ::node	0.0	rain-01	12-13
# ::node	0.0.0	off	5-6
# ::node	0.0.1	bare-01	19-20
# ::node	0.0.1.0	bad	7-8
# ::node	0.0.1.1	large	18-19
# ::node	0.1	outside	26-27
# ::node	0.2	or	21-22
# ::node	0.2.0	platform	2-3
# ::node	0.2.0.0	cover-01	1-2
# ::node	0.3	and	16-17
# ::node	0.3.0	provide-01	31-32
# ::node	0.3.0.0	all	28-29
# ::node	0.3.1	office	15-16
# ::node	0.3.1.0	ticket	14-15
# ::root	0	shed-01
# ::edge	and	op1	office	0.3	0.3.1	
# ::edge	and	op2	shed-01	0.3	0	
# ::edge	bare-01	ARG0	bad	0.0.1	0.0.1.0	
# ::edge	bare-01	ARG1	large	0.0.1	0.0.1.1	
# ::edge	cover-01	ARG1	platform	0.2.0.0	0.2.0	
# ::edge	office	mod	ticket	0.3.1	0.3.1.0	
# ::edge	or	op1	shed-01	0.2	0	
# ::edge	platform	purpose	or	0.2.0	0.2	
# ::edge	provide-01	ARG0	and	0.3.0	0.3	
# ::edge	provide-01	ARG1	all	0.3.0	0.3.0.0	
# ::edge	rain-01	ARG0	off	0.0	0.0.0	
# ::edge	rain-01	ARG1	bare-01	0.0	0.0.1	
# ::edge	shed-01	ARG1	rain-01	0	0.0	
# ::edge	shed-01	ARG2	outside	0	0.1	
(s / shed-01 
      :ARG1 (r / rain-01 
            :ARG0 (o4 / off) 
            :ARG1 (b / bare-01 
                  :ARG0 (b2 / bad) 
                  :ARG1 (l / large))) 
      :ARG2 (o / outside) 
      :op-of (o2 / or 
            :purpose-of (p2 / platform 
                  :ARG1-of (c / cover-01))) 
      :op-of (a2 / and 
            :ARG0-of (p / provide-01 
                  :ARG1 (a / all)) 
            :op1 (o3 / office 
                  :mod (t / ticket))))

# ::snt a successful offer in excess of 80000 will secure an island of 28 acres set in fishrich seas
# ::tok a successful offer in excess of 80000 will secure an island of 28 acres set in fishrich seas
# ::alignments 17-18|0.0.0.0.0 13-14|0.0.0.0.1+0.0.0.0 12-13|0.1.0 10-11|0.0.0 8-9|0.0 4-5|0.1 2-3|0 1-2|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:44.316
# ::node	0	offer-01	2-3
# ::node	0.0	secure-02	8-9
# ::node	0.0.0	island	10-11
# ::node	0.0.0.0	area-quantity	13-14
# ::node	0.0.0.0.0	sea	17-18
# ::node	0.0.0.0.1	acre	13-14
# ::node	0.1	exceed-01	4-5
# ::node	0.1.0	28	12-13
# ::node	0.2	succeed-01	1-2
# ::root	0	offer-01
# ::edge	area-quantity	location	sea	0.0.0.0	0.0.0.0.0	
# ::edge	area-quantity	unit	acre	0.0.0.0	0.0.0.0.1	
# ::edge	exceed-01	ARG1	28	0.1	0.1.0	
# ::edge	island	poss	area-quantity	0.0.0	0.0.0.0	
# ::edge	offer-01	ARG1	exceed-01	0	0.1	
# ::edge	secure-02	ARG0	offer-01	0.0	0	
# ::edge	secure-02	ARG1	island	0.0	0.0.0	
# ::edge	succeed-01	ARG1	offer-01	0.2	0	
(o / offer-01 
      :ARG0-of (s2 / secure-02 
            :ARG1 (i / island 
                  :poss (a / area-quantity 
                        :location (s / sea) 
                        :unit (a2 / acre)))) 
      :ARG1 (e / exceed-01 
            :ARG1 28) 
      :ARG1-of (s3 / succeed-01))

# ::snt was it needless death  were they bewildered by excess of love dash
# ::tok was it needless death were they bewildered by excess of love dash
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:44.317
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the next day however a confidential memorandum sent to mps and obtained by the guardian revealed additional secret deals which had been worth 38 million to rover and confidential profit forecasts known at the time of sale far in excess of public figures and rising to 142 million a year by 1992
# ::tok the next day however a confidential memorandum sent to mps and obtained by the guardian revealed additional secret deals which had been worth 38 million to rover and confidential profit forecasts known at the time of sale far in excess of public figures and rising to 142 million a year by 1992
# ::alignments 51-52|0.3.0.0.0.0+0.3.0.0.0 49-50|0.3.2.0.1 44-45|0.3.2.0 43-44|0.3.2 42-43|0.3.1.0 41-42|0.3.1.0.0 39-40|0.3.1 37-38|0.3.1.1 34-35|0.3.3 31-32|0.3 30-31|0.3.0.0 29-30|0.3.0.0.1 28-29|0.3.0.0.1.0 27-28|0.3.0 23-24|0.3.2.0.0 22-23|0.0.0.0 18-19|0.0.0 17-18|0.0.0.1 16-17|0.0.0.2 15-16|0.0 11-12|0.2 10-11|0 7-8|0.1 6-7|0.1.0 5-6|0.1.0.0 2-3|0.4 1-2|0.4.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:45.790
# ::node	0	and	10-11
# ::node	0.0	reveal-01	15-16
# ::node	0.0.0	deal-01	18-19
# ::node	0.0.0.0	worth	22-23
# ::node	0.0.0.1	secret	17-18
# ::node	0.0.0.2	additional	16-17
# ::node	0.1	send-01	7-8
# ::node	0.1.0	memorandum	6-7
# ::node	0.1.0.0	confidential	5-6
# ::node	0.2	obtain-01	11-12
# ::node	0.3	know-01	31-32
# ::node	0.3.0	and	27-28
# ::node	0.3.0.0	forecast-01	30-31
# ::node	0.3.0.0.0	date-entity	51-52
# ::node	0.3.0.0.0.0	1992	51-52
# ::node	0.3.0.0.1	profit-01	29-30
# ::node	0.3.0.0.1.0	confidential	28-29
# ::node	0.3.1	exceed-01	39-40
# ::node	0.3.1.0	figure	42-43
# ::node	0.3.1.0.0	public	41-42
# ::node	0.3.1.1	far	37-38
# ::node	0.3.2	and	43-44
# ::node	0.3.2.0	rise-01	44-45
# ::node	0.3.2.0.0	38	23-24
# ::node	0.3.2.0.1	year	49-50
# ::node	0.3.3	time	34-35
# ::node	0.4	day	2-3
# ::node	0.4.0	next	1-2
# ::root	0	and
# ::edge	and	manner	reveal-01	0	0.0	
# ::edge	and	op1	forecast-01	0.3.0	0.3.0.0	
# ::edge	and	op1	know-01	0.3.2	0.3	
# ::edge	and	op1	send-01	0	0.1	
# ::edge	and	op2	obtain-01	0	0.2	
# ::edge	and	op2	rise-01	0.3.2	0.3.2.0	
# ::edge	and	op3	know-01	0	0.3	
# ::edge	and	time	day	0	0.4	
# ::edge	date-entity	year	1992	0.3.0.0.0	0.3.0.0.0.0	
# ::edge	day	mod	next	0.4	0.4.0	
# ::edge	deal-01	ARG1	worth	0.0.0	0.0.0.0	
# ::edge	deal-01	mod	additional	0.0.0	0.0.0.2	
# ::edge	deal-01	mod	secret	0.0.0	0.0.0.1	
# ::edge	exceed-01	ARG1	figure	0.3.1	0.3.1.0	
# ::edge	exceed-01	manner	far	0.3.1	0.3.1.1	
# ::edge	figure	mod	public	0.3.1.0	0.3.1.0.0	
# ::edge	forecast-01	ARG0	date-entity	0.3.0.0	0.3.0.0.0	
# ::edge	forecast-01	ARG1	profit-01	0.3.0.0	0.3.0.0.1	
# ::edge	know-01	ARG1	and	0.3	0.3.0	
# ::edge	know-01	ARG2	exceed-01	0.3	0.3.1	
# ::edge	know-01	time	time	0.3	0.3.3	
# ::edge	memorandum	mod	confidential	0.1.0	0.1.0.0	
# ::edge	profit-01	ARG0	confidential	0.3.0.0.1	0.3.0.0.1.0	
# ::edge	reveal-01	ARG1	deal-01	0.0	0.0.0	
# ::edge	rise-01	ARG1	38	0.3.2.0	0.3.2.0.0	
# ::edge	rise-01	time	year	0.3.2.0	0.3.2.0.1	
# ::edge	send-01	ARG1	memorandum	0.1	0.1.0	
(a4 / and 
      :manner (r2 / reveal-01 
            :ARG1 (d2 / deal-01 
                  :ARG1 (w / worth) 
                  :mod (s / secret) 
                  :mod (a3 / additional))) 
      :op1 (s2 / send-01 
            :ARG1 (m / memorandum 
                  :mod (c2 / confidential))) 
      :op2 (o / obtain-01) 
      :op3 (k / know-01 
            :ARG1 (a2 / and 
                  :op1 (f3 / forecast-01 
                        :ARG0 (d / date-entity 
                              :year 1992) 
                        :ARG1 (p2 / profit-01 
                              :ARG0 (c / confidential)))) 
            :ARG2 (e / exceed-01 
                  :ARG1 (f / figure 
                        :mod (p / public)) 
                  :manner (f2 / far)) 
            :op-of (a / and 
                  :op1 (r / rise-01 
                        :ARG1 38 
                        :time (y / year))) 
            :time (t / time)) 
      :time (d3 / day 
            :mod (n / next)))

# ::snt an unhealthy repletion or excess
# ::tok an unhealthy repletion or excess
# ::alignments 4-5|0.0 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:45.796
# ::node	0	or	3-4
# ::node	0.0	exceed-01	4-5
# ::root	0	or
# ::edge	or	op1	exceed-01	0	0.0	
(o / or 
      :op1 (e / exceed-01))

# ::snt he assailed a group of editors for their alleged excesses read our papers and you have the impression that the country is a lake of petrol waiting for a match
# ::tok he assailed a group of editors for their alleged excesses read our papers and you have the impression that the country is a lake of petrol waiting for a match
# ::alignments 29-30|0.0 26-27|0.0.1 25-26|0.0.1.0 23-24|0 20-21|0.1 17-18|0.0.1.1 14-15|0.0.0.0.0.1.0 13-14|0.0.0.0.0 12-13|0.0.0.0.0.1.1 10-11|0.0.0.0.0.1 8-9|0.0.0 3-4|0.0.0.0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:46.166
# ::node	0	lake	23-24
# ::node	0.0	match-01	29-30
# ::node	0.0.0	allege-01	8-9
# ::node	0.0.0.0	he	0-1
# ::node	0.0.0.0.0	and	13-14
# ::node	0.0.0.0.0.0	group	3-4
# ::node	0.0.0.0.0.1	read-01	10-11
# ::node	0.0.0.0.0.1.0	you	14-15
# ::node	0.0.0.0.0.1.1	paper	12-13
# ::node	0.0.1	wait-01	26-27
# ::node	0.0.1.0	petrol	25-26
# ::node	0.0.1.1	impression	17-18
# ::node	0.1	country	20-21
# ::root	0	lake
# ::edge	allege-01	ARG1	he	0.0.0	0.0.0.0	
# ::edge	and	op1	he	0.0.0.0.0	0.0.0.0	
# ::edge	and	op2	group	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	and	op3	read-01	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	lake	domain	country	0	0.1	
# ::edge	match-01	ARG0	lake	0.0	0	
# ::edge	match-01	ARG1	allege-01	0.0	0.0.0	
# ::edge	read-01	ARG0	you	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	read-01	ARG1	paper	0.0.0.0.0.1	0.0.0.0.0.1.1	
# ::edge	wait-01	ARG1	petrol	0.0.1	0.0.1.0	
# ::edge	wait-01	ARG2	match-01	0.0.1	0.0	
# ::edge	wait-01	manner	impression	0.0.1	0.0.1.1	
(l / lake 
      :ARG0-of (m / match-01 
            :ARG1 (a2 / allege-01 
                  :ARG1 (h / he 
                        :op-of (a / and 
                              :op1 (g / group) 
                              :op2 (r / read-01 
                                    :ARG0 (y / you) 
                                    :ARG1 (p2 / paper))))) 
            :ARG2-of (w / wait-01 
                  :ARG1 (p / petrol) 
                  :manner (i / impression))) 
      :domain (c / country))

# ::snt looking more like a bewildered old english sheepdog than a thwarted childmolester he throws himself around the place lying on his back and waggling his feet in the air as if by an excess of physical effort he could make up for the thinness of the script
# ::tok looking more like a bewildered old english sheepdog than a thwarted childmolester he throws himself around the place lying on his back and waggling his feet in the air as if by an excess of physical effort he could make up for the thinness of the script
# ::alignments 46-47|0.0.0.1 38-39|0 37-38|0.1.1 36-37|0.0 35-36|0.0.1 33-34|0.0.0 28-29|0.0.0.2.0 25-26|0.0.0.2 22-23|0.1 21-22|0.1.0.2 18-19|0.1.0 17-18|0.1.0.1 15-16|0.1.0.1.0 12-13|0.0.0.0 6-7|0.1.0.0.1.0+0.1.0.0.1+0.1.0.0 5-6|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:46.464
# ::node	0	possible	38-39
# ::node	0.0	effort	36-37
# ::node	0.0.0	exceed-01	33-34
# ::node	0.0.0.0	he	12-13
# ::node	0.0.0.1	script	46-47
# ::node	0.0.0.2	foot	25-26
# ::node	0.0.0.2.0	air	28-29
# ::node	0.0.1	physical	35-36
# ::node	0.1	and	22-23
# ::node	0.1.0	lie-01	18-19
# ::node	0.1.0.0	language	6-7
# ::node	0.1.0.0.0	old	5-6
# ::node	0.1.0.0.1	name	6-7
# ::node	0.1.0.0.1.0	"English"	6-7
# ::node	0.1.0.1	place	17-18
# ::node	0.1.0.1.0	around	15-16
# ::node	0.1.0.2	back	21-22
# ::node	0.1.1	he	37-38
# ::root	0	possible
(p / possible 
      :mod-of (e / effort 
            :ARG1-of (e2 / exceed-01 
                  :ARG0 (h2 / he) 
                  :op-of (s / script) 
                  :op-of (f / foot 
                        :location (a / air))) 
            :mod (p2 / physical)) 
      :op-of (a2 / and 
            :op1 (l / lie-01 
                  :ARG0 (l2 / language 
                        :mod (o / old) 
                        :name (n / name 
                              :op1 "English")) 
                  :ARG1 (p3 / place 
                        :op-of (a3 / around)) 
                  :ARG2 (b / back)) 
            :op2 (h / he)))

# ::snt the reappearance of the sun dispersed the low cloud which had clung to the cliffs of the mont agel course and consigned the morning starters on the last day to rounds in excess of five hours
# ::tok the reappearance of the sun dispersed the low cloud which had clung to the cliffs of the mont agel course and consigned the morning starters on the last day to rounds in excess of five hours
# ::alignments 35-36|0.0.0.1+0.0.0 34-35|0.0.0.0 32-33|0.0 30-31|0 28-29|0.0.1 27-28|0.0.1.1 24-25|0.0.1.0 23-24|0.0.1.0.2 20-21|0.0.1.0.1 7-8|0.0.1.0.0 5-6|0.0.1.0.1.0 4-5|0.0.1.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:46.661
# ::node	0	round	30-31
# ::node	0.0	exceed-01	32-33
# ::node	0.0.0	temporal-quantity	35-36
# ::node	0.0.0.0	5	34-35
# ::node	0.0.0.1	hour	35-36
# ::node	0.0.1	day	28-29
# ::node	0.0.1.0	start-01	24-25
# ::node	0.0.1.0.0	low	7-8
# ::node	0.0.1.0.1	and	20-21
# ::node	0.0.1.0.1.0	disperse-01	5-6
# ::node	0.0.1.0.1.0.0	sun	4-5
# ::node	0.0.1.0.2	morning	23-24
# ::node	0.0.1.1	last	27-28
# ::root	0	round
(r / round 
      :consist-of (e / exceed-01 
            :ARG0 (t / temporal-quantity 
                  :quant 5 
                  :unit (h / hour)) 
            :ARG2 (d / day 
                  :ARG1-of (s / start-01 
                        :ARG0 (l2 / low) 
                        :op-of (a / and 
                              :op1 (d2 / disperse-01 
                                    :ARG1 (s2 / sun))) 
                        :time (m / morning)) 
                  :mod (l / last))))

# ::snt beneath an excess of plumcoloured satin two wellmatured dormant bodies stir grumpily to the digital blips and bleeps of a hightech quartz alarm
# ::tok beneath an excess of plumcoloured satin two wellmatured dormant bodies stir grumpily to the digital blips and bleeps of a hightech quartz alarm
# ::alignments 22-23|0.0 21-22|0.0.0 16-17|0 14-15|0.1.0.0.0 10-11|0.1 9-10|0.1.0 8-9|0.1.0.1 6-7|0.1.0.2 2-3|0.1.0.0 0-1|0.1.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:46.727
# ::node	0	and	16-17
# ::node	0.0	alarm-01	22-23
# ::node	0.0.0	quartz	21-22
# ::node	0.1	stir-01	10-11
# ::node	0.1.0	body	9-10
# ::node	0.1.0.0	exceed-01	2-3
# ::node	0.1.0.0.0	digital	14-15
# ::node	0.1.0.0.1	beneath	0-1
# ::node	0.1.0.1	dormant	8-9
# ::node	0.1.0.2	2	6-7
# ::root	0	and
(a2 / and 
      :ARG0-of (a / alarm-01 
            :ARG1 (q / quartz)) 
      :ARG1-of (s / stir-01 
            :ARG0 (b / body 
                  :ARG1-of (e / exceed-01 
                        :ARG0 (d / digital) 
                        :op-of (b2 / beneath)) 
                  :mod (d2 / dormant) 
                  :quant 2)))

# ::snt to cover costs for the first 320 you may either pay us a nonrefundable damage  loss excess waiver of 32 per yacht 7 each for a share a yacht or pot luck or lodge direct with us not through a travel agent a security deposit of 320 per yacht 70 each if sharing at the time of making your final payment
# ::tok to cover costs for the first 320 you may either pay us a nonrefundable damage loss excess waiver of 32 per yacht 7 each for a share a yacht or pot luck or lodge direct with us not through a travel agent a security deposit of 320 per yacht 70 each if sharing at the time of making your final payment
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:46.729
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt coal produced in excess of the government quota according to one proposal would be used to set up barter deals for consumer goods to raise living standards in the area
# ::tok coal produced in excess of the government quota according to one proposal would be used to set up barter deals for consumer goods to raise living standards in the area
# ::alignments 29-30|0.0.0.1.0 26-27|0.0.0.1 25-26|0.0.0.1.1 24-25|0.0.0 22-23|0.0.0.1.1.0 21-22|0.0.0.1.1.0.0 19-20|0.0.0.2 18-19|0.0.0.2.0 14-15|0.0 11-12|0 3-4|0.0.0.0.0.0 1-2|0.0.0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:46.950
# ::node	0	propose-01	11-12
# ::node	0.0	use-01	14-15
# ::node	0.0.0	raise-01	24-25
# ::node	0.0.0.0	coal	0-1
# ::node	0.0.0.0.0	produce-01	1-2
# ::node	0.0.0.0.0.0	exceed-01	3-4
# ::node	0.0.0.1	standard	26-27
# ::node	0.0.0.1.0	area	29-30
# ::node	0.0.0.1.1	live-01	25-26
# ::node	0.0.0.1.1.0	good	22-23
# ::node	0.0.0.1.1.0.0	consume-01	21-22
# ::node	0.0.0.2	deal-01	19-20
# ::node	0.0.0.2.0	barter-01	18-19
# ::root	0	propose-01
(p / propose-01 
      :ARG1-of (u / use-01 
            :purpose (r / raise-01 
                  :ARG0 (c2 / coal 
                        :ARG1-of (p2 / produce-01 
                              :manner (e / exceed-01))) 
                  :ARG1 (s / standard 
                        :location (a / area) 
                        :mod (l / live-01 
                              :ARG1 (g / good 
                                    :ARG0-of (c / consume-01)))) 
                  :purpose-of (d / deal-01 
                        :ARG1 (b / barter-01)))))

# ::snt metal might be infamous for its excesses but theres no need to glorify them
# ::tok metal might be infamous for its excesses but theres no need to glorify them
# ::alignments 10-11|0.0 9-10|0.0.0 7-8|0 3-4|0.1 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:46.966
# ::node	0	contrast-01	7-8
# ::node	0.0	need-01	10-11
# ::node	0.0.0	-	9-10
# ::node	0.1	infamous	3-4
# ::node	0.1.0	metal	0-1
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	infamous	0	0.1	
# ::edge	infamous	domain	metal	0.1	0.1.0	
# ::edge	need-01	ARG0	contrast-01	0.0	0	
# ::edge	need-01	polarity	-	0.0	0.0.0	
(c / contrast-01 
      :ARG0-of (n / need-01 
            :polarity (- / -)) 
      :ARG1 (i / infamous 
            :domain (m / metal)))

# ::snt an overhaul costing well in excess of 2bn in a single year
# ::tok an overhaul costing well in excess of 2bn in a single year
# ::alignments 11-12|0.0 10-11|0.0.0 5-6|0.1.1 3-4|0.1.0 2-3|0.1 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:47.002
# ::node	0	overhaul-01	1-2
# ::node	0.0	year	11-12
# ::node	0.0.0	single	10-11
# ::node	0.1	cost-01	2-3
# ::node	0.1.0	well	3-4
# ::node	0.1.1	exceed-01	5-6
# ::root	0	overhaul-01
# ::edge	cost-01	ARG1	overhaul-01	0.1	0	
# ::edge	cost-01	manner	exceed-01	0.1	0.1.1	
# ::edge	cost-01	manner	well	0.1	0.1.0	
# ::edge	overhaul-01	ARG1	year	0	0.0	
# ::edge	year	mod	single	0.0	0.0.0	
(o / overhaul-01 
      :ARG1 (y / year 
            :mod (s / single)) 
      :ARG1-of (c / cost-01 
            :manner (w / well) 
            :manner (e / exceed-01)))

# ::snt excess is normal normality is bullshit and the only people you can really trust are brother and sister barflies though even they will shiv you in a dark alley the price of a southern comfort and 7up
# ::tok excess is normal normality is bullshit and the only people you can really trust are brother and sister barflies though even they will shiv you in a dark alley the price of a southern comfort and 7up
# ::alignments 35-36|0.0.2.1 34-35|0.0.2 33-34|0.0.2.0 30-31|0.0.2.1.0+0.0.2.1.0.1 28-29|0.0.2.1.0.0 27-28|0.0.2.1.0.0.0 24-25|0.0.1.0 21-22|0.0.2.1.1.0.1 17-18|0.0.1.1+0.0.1 16-17|0.0.2.1.1 15-16|0.0.0.0.0+0.0.0.0 13-14|0.0 12-13|0.0.3 11-12|0 10-11|0.0.0 8-9|0.0.2.1.1.0.0 6-7|0.0.2.1.1.0.2.0.0 5-6|0.0.2.1.1.0.2.0 2-3|0.0.2.1.1.0.2 0-1|0.0.2.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:47.615
# ::node	0	possible	11-12
# ::node	0.0	trust-01	13-14
# ::node	0.0.0	you	10-11
# ::node	0.0.0.0	have-rel-role-91	15-16
# ::node	0.0.0.0.0	brother	15-16
# ::node	0.0.1	have-rel-role-91	17-18
# ::node	0.0.1.0	you	24-25
# ::node	0.0.1.1	sister	17-18
# ::node	0.0.2	comfort-01	34-35
# ::node	0.0.2.0	south	33-34
# ::node	0.0.2.1	and	35-36
# ::node	0.0.2.1.0	price-01	30-31
# ::node	0.0.2.1.0.0	alley	28-29
# ::node	0.0.2.1.0.0.0	dark	27-28
# ::node	0.0.2.1.0.1	thing	30-31
# ::node	0.0.2.1.1	and	16-17
# ::node	0.0.2.1.1.0	exceed-01	0-1
# ::node	0.0.2.1.1.0.0	only	8-9
# ::node	0.0.2.1.1.0.1	they	21-22
# ::node	0.0.2.1.1.0.2	normal	2-3
# ::node	0.0.2.1.1.0.2.0	bullshit-01	5-6
# ::node	0.0.2.1.1.0.2.0.0	and	6-7
# ::node	0.0.3	really	12-13
# ::root	0	possible
# ::edge	alley	mod	dark	0.0.2.1.0.0	0.0.2.1.0.0.0	
# ::edge	and	op1	bullshit-01	0.0.2.1.1.0.2.0.0	0.0.2.1.1.0.2.0	
# ::edge	and	op1	comfort-01	0.0.2.1	0.0.2	
# ::edge	and	op1	exceed-01	0.0.2.1.1	0.0.2.1.1.0	
# ::edge	and	op2	and	0.0.2.1.1	0.0.2.1	
# ::edge	bullshit-01	ARG0	normal	0.0.2.1.1.0.2.0	0.0.2.1.1.0.2	
# ::edge	comfort-01	ARG1	trust-01	0.0.2	0.0	
# ::edge	comfort-01	mod	south	0.0.2	0.0.2.0	
# ::edge	exceed-01	ARG0	only	0.0.2.1.1.0	0.0.2.1.1.0.0	
# ::edge	exceed-01	ARG1	they	0.0.2.1.1.0	0.0.2.1.1.0.1	
# ::edge	have-rel-role-91	ARG1	you	0.0.0.0	0.0.0	
# ::edge	have-rel-role-91	ARG1	you	0.0.1	0.0.1.0	
# ::edge	have-rel-role-91	ARG2	brother	0.0.0.0	0.0.0.0.0	
# ::edge	have-rel-role-91	ARG2	sister	0.0.1	0.0.1.1	
# ::edge	normal	domain	exceed-01	0.0.2.1.1.0.2	0.0.2.1.1.0	
# ::edge	possible	domain	trust-01	0	0.0	
# ::edge	price-01	ARG0	alley	0.0.2.1.0	0.0.2.1.0.0	
# ::edge	price-01	ARG1	and	0.0.2.1.0	0.0.2.1	
# ::edge	price-01	ARG2	thing	0.0.2.1.0	0.0.2.1.0.1	
# ::edge	trust-01	ARG0	you	0.0	0.0.0	
# ::edge	trust-01	ARG1	have-rel-role-91	0.0	0.0.1	
# ::edge	trust-01	mod	really	0.0	0.0.3	
(p2 / possible 
      :domain (t3 / trust-01 
            :ARG0 (y2 / you 
                  :ARG1-of (h2 / have-rel-role-91 
                        :ARG2 (b / brother))) 
            :ARG1 (h / have-rel-role-91 
                  :ARG1 (y / you) 
                  :ARG2 (s2 / sister)) 
            :ARG1-of (c / comfort-01 
                  :mod (s / south) 
                  :op-of (a / and 
                        :ARG1-of (p / price-01 
                              :ARG0 (a2 / alley 
                                    :mod (d / dark)) 
                              :ARG2 (t / thing)) 
                        :op-of (a3 / and 
                              :op1 (e / exceed-01 
                                    :ARG0 (o / only) 
                                    :ARG1 (t2 / they) 
                                    :domain-of (n / normal 
                                          :ARG0-of (b2 / bullshit-01 
                                                :op-of (a4 / and))))))) 
            :mod (r / really)))

# ::snt   the lucullan excesses which hefner promised were all in the mind at any rate as long as the fifties lasted
# ::tok the lucullan excesses which hefner promised were all in the mind at any rate as long as the fifties lasted
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:47.616
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the style of the killings has stirred memories of the worst excesses of the 1970s when part of the tyronemidulster area became known as the murder triangle because of regular attacks on catholic individuals and pubs
# ::tok the style of the killings has stirred memories of the worst excesses of the 1970s when part of the tyronemidulster area became known as the murder triangle because of regular attacks on catholic individuals and pubs
# ::alignments 34-35|0.1.1 33-34|0.1.2 32-33|0.1.2.0.0.0+0.1.2.0.0+0.1.2.0 30-31|0.0 29-30|0.0.1 27-28|0 25-26|0.1.0.1.1 22-23|0.1 21-22|0.1.3 20-21|0.1.3.0 14-15|0.1.0.1.0 10-11|0.0.0 7-8|0.1.0.0.0 6-7|0.1.0.0 4-5|0.1.0.1 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:47.897
# ::node	0	cause-01	27-28
# ::node	0.0	attack-01	30-31
# ::node	0.0.0	bad	10-11
# ::node	0.0.1	regular	29-30
# ::node	0.1	know-01	22-23
# ::node	0.1.0	style	1-2
# ::node	0.1.0.0	stir-04	6-7
# ::node	0.1.0.0.0	memory	7-8
# ::node	0.1.0.1	kill-01	4-5
# ::node	0.1.0.1.0	1970	14-15
# ::node	0.1.0.1.1	murder-01	25-26
# ::node	0.1.1	and	34-35
# ::node	0.1.2	individual	33-34
# ::node	0.1.2.0	religious-group	32-33
# ::node	0.1.2.0.0	name	32-33
# ::node	0.1.2.0.0.0	"Catholic"	32-33
# ::node	0.1.3	become-01	21-22
# ::node	0.1.3.0	area	20-21
# ::root	0	cause-01
# ::edge	attack-01	ARG1	bad	0.0	0.0.0	
# ::edge	attack-01	frequency	regular	0.0	0.0.1	
# ::edge	become-01	ARG0	area	0.1.3	0.1.3.0	
# ::edge	become-01	ARG2	know-01	0.1.3	0.1	
# ::edge	cause-01	ARG0	attack-01	0	0.0	
# ::edge	cause-01	ARG1	know-01	0	0.1	
# ::edge	individual	mod	religious-group	0.1.2	0.1.2.0	
# ::edge	kill-01	ARG1	1970	0.1.0.1	0.1.0.1.0	
# ::edge	know-01	ARG0	style	0.1	0.1.0	
# ::edge	know-01	ARG1	and	0.1	0.1.1	
# ::edge	know-01	ARG2	individual	0.1	0.1.2	
# ::edge	murder-01	ARG1	kill-01	0.1.0.1.1	0.1.0.1	
# ::edge	name	op1	"Catholic"	0.1.2.0.0	0.1.2.0.0.0	
# ::edge	religious-group	name	name	0.1.2.0	0.1.2.0.0	
# ::edge	stir-04	ARG0	style	0.1.0.0	0.1.0	
# ::edge	stir-04	ARG1	memory	0.1.0.0	0.1.0.0.0	
# ::edge	style	topic	kill-01	0.1.0	0.1.0.1	
(c / cause-01 
      :ARG0 (a2 / attack-01 
            :ARG1 (b2 / bad) 
            :frequency (r2 / regular)) 
      :ARG1 (k / know-01 
            :ARG0 (s2 / style 
                  :ARG0-of (s / stir-04 
                        :ARG1 (m2 / memory)) 
                  :topic (k2 / kill-01 
                        :ARG1 1970 
                        :ARG1-of (m / murder-01))) 
            :ARG1 (a / and) 
            :ARG2 (i / individual 
                  :mod (r / religious-group 
                        :name (n / name 
                              :op1 "Catholic"))) 
            :ARG2-of (b / become-01 
                  :ARG0 (a3 / area))))

# ::snt dip a quarterofaninch of the rooting end into hormone rooting powder and tap off the excess
# ::tok dip a quarterofaninch of the rooting end into hormone rooting powder and tap off the excess
# ::alignments 15-16|0.2.0 13-14|0.2.1 12-13|0.2 11-12|0 10-11|0.1.0 9-10|0.1 8-9|0.1.0.0 5-6|0.2.0.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:48.012
# ::node	0	and	11-12
# ::node	0.0	dip	0-1
# ::node	0.1	root-03	9-10
# ::node	0.1.0	powder-01	10-11
# ::node	0.1.0.0	hormone	8-9
# ::node	0.2	tap-03	12-13
# ::node	0.2.0	exceed-01	15-16
# ::node	0.2.0.0	root-03	5-6
# ::node	0.2.1	off	13-14
# ::root	0	and
# ::edge	and	op1	dip	0	0.0	
# ::edge	and	op2	root-03	0	0.1	
# ::edge	and	op3	tap-03	0	0.2	
# ::edge	powder-01	ARG0	hormone	0.1.0	0.1.0.0	
# ::edge	root-03	ARG1	exceed-01	0.2.0.0	0.2.0	
# ::edge	root-03	ARG1	powder-01	0.1	0.1.0	
# ::edge	tap-03	ARG1	exceed-01	0.2	0.2.0	
# ::edge	tap-03	direction	off	0.2	0.2.1	
(a / and 
      :op1 (d / dip) 
      :op2 (r / root-03 
            :ARG1 (p / powder-01 
                  :ARG0 (h / hormone))) 
      :op3 (t / tap-03 
            :ARG1 (e / exceed-01 
                  :ARG1-of (r2 / root-03)) 
            :direction (o / off)))

# ::snt without a regional programme of new settlements there will continue to be sprawl around old market towns and villages a continuous freeforall among the house builders and an excess of appeals for the secretary of state to consider
# ::tok without a regional programme of new settlements there will continue to be sprawl around old market towns and villages a continuous freeforall among the house builders and an excess of appeals for the secretary of state to consider
# ::alignments 37-38|0.1.0.0 35-36|0.0.0 33-34|0.0 30-31|0 28-29|0.1 26-27|0.1.0 24-25|0.1.0.1.0.0 22-23|0.1.0.0.0.0 20-21|0.1.0.1 18-19|0.1.0.0.0 17-18|0.1.0.0.0.1 16-17|0.1.0.1.0.1 15-16|0.1.0.1.0 14-15|0.1.0.1.0.1.0 13-14|0.1.0.1.0.1.1 9-10|0.1.0.0.0.1.0 6-7|0.1.0.0.0.1.1.0 5-6|0.1.0.0.0.1.1.0.0 3-4|0.1.0.0.0.1.1 2-3|0.1.0.0.0.1.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:48.390
# ::node	0	appeal-01	30-31
# ::node	0.0	secretary	33-34
# ::node	0.0.0	state	35-36
# ::node	0.1	exceed-01	28-29
# ::node	0.1.0	and	26-27
# ::node	0.1.0.0	consider-02	37-38
# ::node	0.1.0.0.0	village	18-19
# ::node	0.1.0.0.0.0	among	22-23
# ::node	0.1.0.0.0.1	and	17-18
# ::node	0.1.0.0.0.1.0	continue-01	9-10
# ::node	0.1.0.0.0.1.1	program	3-4
# ::node	0.1.0.0.0.1.1.0	settlement	6-7
# ::node	0.1.0.0.0.1.1.0.0	new	5-6
# ::node	0.1.0.0.0.1.1.1	region	2-3
# ::node	0.1.0.1	continue-01	20-21
# ::node	0.1.0.1.0	market	15-16
# ::node	0.1.0.1.0.0	house	24-25
# ::node	0.1.0.1.0.1	town	16-17
# ::node	0.1.0.1.0.1.0	old	14-15
# ::node	0.1.0.1.0.1.1	around	13-14
# ::root	0	appeal-01
# ::edge	and	op1	continue-01	0.1.0	0.1.0.1	
# ::edge	and	op1	program	0.1.0.0.0.1	0.1.0.0.0.1.1	
# ::edge	and	op2	exceed-01	0.1.0	0.1	
# ::edge	and	op2	village	0.1.0.0.0.1	0.1.0.0.0	
# ::edge	appeal-01	ARG1	secretary	0	0.0	
# ::edge	around	op1	town	0.1.0.1.0.1.1	0.1.0.1.0.1	
# ::edge	consider-02	ARG0	and	0.1.0.0	0.1.0	
# ::edge	continue-01	ARG1	and	0.1.0.0.0.1.0	0.1.0.0.0.1	
# ::edge	continue-01	ARG1	market	0.1.0.1	0.1.0.1.0	
# ::edge	exceed-01	ARG1	appeal-01	0.1	0	
# ::edge	house	mod	market	0.1.0.1.0.0	0.1.0.1.0	
# ::edge	program	mod	region	0.1.0.0.0.1.1	0.1.0.0.0.1.1.1	
# ::edge	secretary	mod	state	0.0	0.0.0	
# ::edge	settlement	consist	program	0.1.0.0.0.1.1.0	0.1.0.0.0.1.1	
# ::edge	settlement	mod	new	0.1.0.0.0.1.1.0	0.1.0.0.0.1.1.0.0	
# ::edge	town	mod	market	0.1.0.1.0.1	0.1.0.1.0	
# ::edge	town	mod	old	0.1.0.1.0.1	0.1.0.1.0.1.0	
# ::edge	village	location	among	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	village	purpose	consider-02	0.1.0.0.0	0.1.0.0	
(a / appeal-01 
      :ARG1 (s2 / secretary 
            :mod (s / state)) 
      :ARG1-of (e / exceed-01 
            :op-of (a2 / and 
                  :ARG0-of (c / consider-02 
                        :purpose-of (v / village 
                              :location (a3 / among) 
                              :op-of (a4 / and 
                                    :ARG1-of (c3 / continue-01) 
                                    :op1 (p / program 
                                          :consist-of (s3 / settlement 
                                                :mod (n / new)) 
                                          :mod (r / region))))) 
                  :op1 (c2 / continue-01 
                        :ARG1 (m / market 
                              :mod-of (h / house) 
                              :mod-of (t / town 
                                    :mod (o / old) 
                                    :op-of (a5 / around)))))))

# ::snt these led bataille to call with characteristic excess for an irrevocable ritual gesture dash
# ::tok these led bataille to call with characteristic excess for an irrevocable ritual gesture dash
# ::alignments 12-13|0 11-12|0.0 7-8|0.1 6-7|0.1.0 1-2|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:48.410
# ::node	0	gesture-01	12-13
# ::node	0.0	ritual	11-12
# ::node	0.1	exceed-01	7-8
# ::node	0.1.0	characteristic-41	6-7
# ::node	0.1.0.0	lead-02	1-2
# ::root	0	gesture-01
# ::edge	characteristic-41	ARG1	exceed-01	0.1.0	0.1	
# ::edge	exceed-01	ARG1	gesture-01	0.1	0	
# ::edge	gesture-01	ARG1	ritual	0	0.0	
# ::edge	lead-02	ARG1	characteristic-41	0.1.0.0	0.1.0	
(g / gesture-01 
      :ARG1 (r / ritual) 
      :ARG1-of (e / exceed-01 
            :ARG1-of (c / characteristic-41 
                  :ARG1-of (l / lead-02))))

# ::snt there was no opportunity for the audience to become involved in the characters or thrill to the resonant images there was considerable room for visual excess that would divert attention from the narrative
# ::tok there was no opportunity for the audience to become involved in the characters or thrill to the resonant images there was considerable room for visual excess that would divert attention from the narrative
# ::alignments 32-33|0.2 29-30|0.1 28-29|0 25-26|0.0 24-25|0.0.1 22-23|0.0.2 21-22|0.0.2.0 18-19|0.0.0 13-14|0.1.0.0.1 12-13|0.1.0.0.1.0 9-10|0.1.0.0 8-9|0.1.0 6-7|0.1.0.0.0 3-4|0.1.0.0.0.0 2-3|0.1.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:48.553
# ::node	0	divert-01	28-29
# ::node	0.0	exceed-01	25-26
# ::node	0.0.0	image	18-19
# ::node	0.0.1	visual	24-25
# ::node	0.0.2	room	22-23
# ::node	0.0.2.0	considerable	21-22
# ::node	0.1	attention	29-30
# ::node	0.1.0	become-01	8-9
# ::node	0.1.0.0	involve-01	9-10
# ::node	0.1.0.0.0	audience	6-7
# ::node	0.1.0.0.0.0	opportunity	3-4
# ::node	0.1.0.0.0.0.0	-	2-3
# ::node	0.1.0.0.1	or	13-14
# ::node	0.1.0.0.1.0	character	12-13
# ::node	0.2	narrative	32-33
# ::root	0	divert-01
# ::edge	become-01	ARG1	attention	0.1.0	0.1	
# ::edge	become-01	ARG2	involve-01	0.1.0	0.1.0.0	
# ::edge	divert-01	ARG0	exceed-01	0	0.0	
# ::edge	divert-01	ARG1	attention	0	0.1	
# ::edge	divert-01	ARG2	narrative	0	0.2	
# ::edge	exceed-01	ARG1	image	0.0	0.0.0	
# ::edge	exceed-01	mod	visual	0.0	0.0.1	
# ::edge	involve-01	ARG1	audience	0.1.0.0	0.1.0.0.0	
# ::edge	involve-01	ARG2	or	0.1.0.0	0.1.0.0.1	
# ::edge	opportunity	beneficiary	audience	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	opportunity	polarity	-	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	or	op1	character	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	room	mod	considerable	0.0.2	0.0.2.0	
# ::edge	room	purpose	exceed-01	0.0.2	0.0	
(d / divert-01 
      :ARG0 (e / exceed-01 
            :ARG1 (i / image) 
            :mod (v / visual) 
            :purpose-of (r / room 
                  :mod (c / considerable))) 
      :ARG1 (a / attention 
            :ARG1-of (b / become-01 
                  :ARG2 (i2 / involve-01 
                        :ARG1 (a2 / audience 
                              :beneficiary-of (o2 / opportunity 
                                    :polarity (- / -))) 
                        :ARG2 (o / or 
                              :op1 (c2 / character))))) 
      :ARG2 (n / narrative))

# ::snt in all this world of excess however there is nothing to compare with junk mail of which there are 62 billion pieces delivered annually 250 for every man woman and child
# ::tok in all this world of excess however there is nothing to compare with junk mail of which there are 62 billion pieces delivered annually 250 for every man woman and child
# ::alignments 30-31|0.2 29-30|0 28-29|0.1 27-28|0.1.0 26-27|0.1.1 24-25|0.0.0 22-23|0.0 21-22|0.0.1 19-20|0.0.2.0 14-15|0.0.2 13-14|0.0.2.1 11-12|0.0.2.2 9-10|0.0.2.2.1 5-6|0.1.1.0 3-4|0.1.1.0.0 2-3|0.0.2.2.0 1-2|0.1.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:49.048
# ::node	0	and	29-30
# ::node	0.0	deliver-01	22-23
# ::node	0.0.0	250	24-25
# ::node	0.0.1	piece	21-22
# ::node	0.0.2	mail-01	14-15
# ::node	0.0.2.0	62	19-20
# ::node	0.0.2.1	junk	13-14
# ::node	0.0.2.2	compare-01	11-12
# ::node	0.0.2.2.0	this	2-3
# ::node	0.0.2.2.1	nothing	9-10
# ::node	0.1	woman	28-29
# ::node	0.1.0	man	27-28
# ::node	0.1.1	every	26-27
# ::node	0.1.1.0	exceed-01	5-6
# ::node	0.1.1.0.0	world	3-4
# ::node	0.1.1.0.0.0	all	1-2
# ::node	0.2	child	30-31
# ::root	0	and
# ::edge	and	op1	woman	0	0.1	
# ::edge	and	op2	child	0	0.2	
# ::edge	compare-01	ARG1	this	0.0.2.2	0.0.2.2.0	
# ::edge	compare-01	ARG2	mail-01	0.0.2.2	0.0.2	
# ::edge	compare-01	instrument	nothing	0.0.2.2	0.0.2.2.1	
# ::edge	deliver-01	ARG0	250	0.0	0.0.0	
# ::edge	deliver-01	ARG1	piece	0.0	0.0.1	
# ::edge	deliver-01	ARG3	and	0.0	0	
# ::edge	deliver-01	condition	mail-01	0.0	0.0.2	
# ::edge	exceed-01	ARG1	every	0.1.1.0	0.1.1	
# ::edge	mail-01	ARG0	62	0.0.2	0.0.2.0	
# ::edge	mail-01	ARG1	junk	0.0.2	0.0.2.1	
# ::edge	woman	mod	every	0.1	0.1.1	
# ::edge	woman	mod	man	0.1	0.1.0	
# ::edge	world	mod	exceed-01	0.1.1.0.0	0.1.1.0	
# ::edge	world	quant	all	0.1.1.0.0	0.1.1.0.0.0	
(a / and 
      :ARG3-of (d / deliver-01 
            :ARG0 250 
            :ARG1 (p / piece) 
            :condition (m2 / mail-01 
                  :ARG0 62 
                  :ARG1 (j / junk) 
                  :ARG2-of (c2 / compare-01 
                        :ARG1 (t / this) 
                        :instrument (n / nothing)))) 
      :op1 (w / woman 
            :mod (m / man) 
            :mod (e / every 
                  :ARG1-of (e2 / exceed-01 
                        :mod-of (w2 / world 
                              :quant (a2 / all))))) 
      :op2 (c / child))

# ::snt annually and 50 per cent of the companys common stock with excess of up to 80 per cent
# ::tok annually and 50 per cent of the companys common stock with excess of up to 80 per cent
# ::alignments 17-18|0.1.0.1+0.1.0 15-16|0.1.0.0 11-12|0.1 9-10|0.1.1 8-9|0.1.1.0 4-5|0.1.1.1+0.1.1.1.0 2-3|0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:49.090
# ::node	0	and	1-2
# ::node	0.0	50	2-3
# ::node	0.1	exceed-01	11-12
# ::node	0.1.0	monetary-quantity	17-18
# ::node	0.1.0.0	80	15-16
# ::node	0.1.0.1	cent	17-18
# ::node	0.1.1	stock	9-10
# ::node	0.1.1.0	common	8-9
# ::node	0.1.1.1	cent	4-5
# ::node	0.1.1.1.0	monetary-quantity	4-5
# ::root	0	and
# ::edge	80	name	monetary-quantity	0.1.0.0	0.1.0	
# ::edge	and	op1	50	0	0.0	
# ::edge	and	op2	exceed-01	0	0.1	
# ::edge	cent	poss	stock	0.1.1.1	0.1.1	
# ::edge	exceed-01	ARG0	monetary-quantity	0.1	0.1.0	
# ::edge	monetary-quantity	unit	cent	0.1.0	0.1.0.1	
# ::edge	monetary-quantity	unit	cent	0.1.1.1.0	0.1.1.1	
# ::edge	stock	mod	common	0.1.1	0.1.1.0	
# ::edge	stock	topic	exceed-01	0.1.1	0.1	
(a / and 
      :op1 50 
      :op2 (e / exceed-01 
            :ARG0 (m / monetary-quantity 
                  :name-of 80 
                  :unit (c / cent)) 
            :topic-of (s / stock 
                  :mod (c2 / common) 
                  :poss-of (c3 / cent 
                        :unit-of (m2 / monetary-quantity)))))

# ::snt thomas sprat refers to the late extravagant excesses of enthusiasm
# ::tok thomas sprat refers to the late extravagant excesses of enthusiasm
# ::alignments 9-10|0.1 6-7|0.0 5-6|0.2 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:49.105
# ::node	0	refer-01	2-3
# ::node	0.0	extravagant	6-7
# ::node	0.1	enthusiasm	9-10
# ::node	0.2	late	5-6
# ::root	0	refer-01
# ::edge	late	op1	refer-01	0.2	0	
# ::edge	refer-01	ARG1	extravagant	0	0.0	
# ::edge	refer-01	manner	enthusiasm	0	0.1	
(r / refer-01 
      :ARG1 (e2 / extravagant) 
      :manner (e / enthusiasm) 
      :op-of (l / late))

# ::snt if herpetic infection is confined to the cervix the only symptom is likely to be an excess of mucopurulent vaginal discharge
# ::tok if herpetic infection is confined to the cervix the only symptom is likely to be an excess of mucopurulent vaginal discharge
# ::alignments 20-21|0.0.0 16-17|0.0 12-13|0.1 10-11|0 9-10|0.2 4-5|0.2.0 2-3|0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:49.157
# ::node	0	symptom	10-11
# ::node	0.0	exceed-01	16-17
# ::node	0.0.0	discharge-01	20-21
# ::node	0.1	likely	12-13
# ::node	0.2	only	9-10
# ::node	0.2.0	confine-01	4-5
# ::node	0.2.0.0	infection	2-3
# ::root	0	symptom
# ::edge	confine-01	ARG0	only	0.2.0	0.2	
# ::edge	confine-01	ARG1	infection	0.2.0	0.2.0.0	
# ::edge	exceed-01	ARG0	symptom	0.0	0	
# ::edge	exceed-01	ARG1	discharge-01	0.0	0.0.0	
# ::edge	likely	domain	symptom	0.1	0	
# ::edge	symptom	mod	only	0	0.2	
(s / symptom 
      :ARG0-of (e / exceed-01 
            :ARG1 (d / discharge-01)) 
      :domain-of (l / likely) 
      :mod (o / only 
            :ARG0-of (c / confine-01 
                  :ARG1 (i / infection))))

# ::snt why should a good deficit not get even better  the first reason the chancellor gives is that there is some bad froth on the good deficit that is to say evidence of excessive domestic demand, this argument starts from a different point on the balance of payments circle with the excess of imports over exports
# ::tok why should a good deficit not get even better the first reason the chancellor gives is that there is some bad froth on the good deficit that is to say evidence of excessive domestic demand , this argument starts from a different point on the balance of payments circle with the excess of imports over exports
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:49.158
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt by failing to notify the company announcements office of the quotations dept of the int stock exch ise by way of a class 2 announcement following the purchase of shares in manpower inc for a consideration in excess of 5 of the consol net assets of blue arrow 1
# ::tok by failing to notify the company announcements office of the quotations dept of the int stock exch ise by way of a class 2 announcement following the purchase of shares in manpower inc for a consideration in excess of 5 of the consol net assets of blue arrow 1
# ::alignments 48-49|0.0.0 46-47|0.0.2.0 44-45|0.0.3 43-44|0.0.3.1 39-40|0.0.3.2 37-38|0.0.3.0 35-36|0.0.3.0.0 31-32|0 29-30|0.0.1 27-28|0.0 24-25|0.0.2 23-24|0.0.2.3 22-23|0.0.2.1.0.1 19-20|0.0.2.2 15-16|0.0.2.1.0.0 7-8|0.0.2.1.0 5-6|0.0.2.1.0.2 1-2|0.0.2.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:49.385
# ::node	0	manpower	31-32
# ::node	0.0	purchase-01	27-28
# ::node	0.0.0	1	48-49
# ::node	0.0.1	share	29-30
# ::node	0.0.2	announce-01	24-25
# ::node	0.0.2.0	blue	46-47
# ::node	0.0.2.1	fail-01	1-2
# ::node	0.0.2.1.0	office	7-8
# ::node	0.0.2.1.0.0	stock	15-16
# ::node	0.0.2.1.0.1	class	22-23
# ::node	0.0.2.1.0.2	company	5-6
# ::node	0.0.2.2	way	19-20
# ::node	0.0.2.3	2	23-24
# ::node	0.0.3	asset	44-45
# ::node	0.0.3.0	exceed-01	37-38
# ::node	0.0.3.0.0	consider-02	35-36
# ::node	0.0.3.1	net	43-44
# ::node	0.0.3.2	5	39-40
# ::root	0	manpower
(m / manpower 
      :location-of (p / purchase-01 
            :ARG0 1 
            :ARG1 (s / share) 
            :ARG1-of (a2 / announce-01 
                  :ARG0 (b / blue) 
                  :ARG0-of (f / fail-01 
                        :ARG1 (o / office 
                              :mod (s2 / stock) 
                              :mod-of (c2 / class) 
                              :poss (c3 / company))) 
                  :domain-of (w / way) 
                  :quant 2) 
            :ARG2 (a / asset 
                  :ARG1-of (e / exceed-01 
                        :ARG1-of (c / consider-02)) 
                  :mod (n / net) 
                  :quant 5)))

# ::snt so american railway companies turned on the stations which had impaired their financial health and destroyed many of them in an excess of architectural vandalism
# ::tok so american railway companies turned on the stations which had impaired their financial health and destroyed many of them in an excess of architectural vandalism
# ::alignments 24-25|0.1.2.1 21-22|0.1.2 16-17|0.1.1 15-16|0.1 14-15|0 13-14|0.0 12-13|0.0.0 7-8|0.1.0.1 3-4|0.1.0 2-3|0.1.0.0 1-2|0.1.0.0.0.0.0+0.1.0.0.0.0+0.1.0.0.0 0-1|0.1.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:49.520
# ::node	0	and	14-15
# ::node	0.0	health	13-14
# ::node	0.0.0	finance	12-13
# ::node	0.1	destroy-01	15-16
# ::node	0.1.0	company	3-4
# ::node	0.1.0.0	railway	2-3
# ::node	0.1.0.0.0	country	1-2
# ::node	0.1.0.0.0.0	name	1-2
# ::node	0.1.0.0.0.0.0	"America"	1-2
# ::node	0.1.0.1	station	7-8
# ::node	0.1.1	many	16-17
# ::node	0.1.2	exceed-01	21-22
# ::node	0.1.2.0	so	0-1
# ::node	0.1.2.1	vandalism	24-25
# ::root	0	and
# ::edge	and	op1	health	0	0.0	
# ::edge	and	op2	destroy-01	0	0.1	
# ::edge	company	mod	railway	0.1.0	0.1.0.0	
# ::edge	country	name	name	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	destroy-01	ARG0	company	0.1	0.1.0	
# ::edge	destroy-01	ARG2	many	0.1	0.1.1	
# ::edge	destroy-01	purpose	exceed-01	0.1	0.1.2	
# ::edge	exceed-01	ARG0	so	0.1.2	0.1.2.0	
# ::edge	exceed-01	ARG1	vandalism	0.1.2	0.1.2.1	
# ::edge	health	mod	finance	0.0	0.0.0	
# ::edge	name	op1	"America"	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	railway	mod	country	0.1.0.0	0.1.0.0.0	
# ::edge	station	poss	company	0.1.0.1	0.1.0	
(a / and 
      :op1 (h / health 
            :mod (f / finance)) 
      :op2 (d / destroy-01 
            :ARG0 (c / company 
                  :mod (r / railway 
                        :mod (c2 / country 
                              :name (n / name 
                                    :op1 "America"))) 
                  :poss-of (s / station)) 
            :ARG2 (m / many) 
            :purpose (e / exceed-01 
                  :ARG0 (s2 / so) 
                  :ARG1 (v / vandalism))))

# ::snt for at least 18 months the chancellor whose heavy physique has been the butt of many jokes about the excesses of the rich under thatcherism had been making it clear he was not relying on good fortune to keep him in office
# ::tok for at least 18 months the chancellor whose heavy physique has been the butt of many jokes about the excesses of the rich under thatcherism had been making it clear he was not relying on good fortune to keep him in office
# ::alignments 41-42|0.2 36-37|0.1 35-36|0.1.0 33-34|0 30-31|0.0 29-30|0.3 28-29|0.3.0 22-23|0.5 16-17|0.0.0 15-16|0.0.0.1 8-9|0.4 4-5|0.0.0.0.0.0+0.0.0.0.0 3-4|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:49.970
# ::node	0	rely-01	33-34
# ::node	0.0	he	30-31
# ::node	0.0.0	joke-01	16-17
# ::node	0.0.0.0	18	3-4
# ::node	0.0.0.0.0	temporal-quantity	4-5
# ::node	0.0.0.0.0.0	month	4-5
# ::node	0.0.0.1	many	15-16
# ::node	0.1	fortune	36-37
# ::node	0.1.0	good	35-36
# ::node	0.2	office	41-42
# ::node	0.3	clear	29-30
# ::node	0.3.0	it	28-29
# ::node	0.4	heavy	8-9
# ::node	0.5	rich	22-23
# ::root	0	rely-01
# ::edge	clear	op1	it	0.3	0.3.0	
# ::edge	fortune	mod	good	0.1	0.1.0	
# ::edge	heavy	op1	rely-01	0.4	0	
# ::edge	joke-01	ARG0	he	0.0.0	0.0	
# ::edge	joke-01	ARG1	18	0.0.0	0.0.0.0	
# ::edge	joke-01	quant	many	0.0.0	0.0.0.1	
# ::edge	rely-01	ARG0	he	0	0.0	
# ::edge	rely-01	ARG1	fortune	0	0.1	
# ::edge	rely-01	ARG2	office	0	0.2	
# ::edge	rely-01	condition	clear	0	0.3	
# ::edge	rich	op1	rely-01	0.5	0	
# ::edge	temporal-quantity	quant	18	0.0.0.0.0	0.0.0.0	
# ::edge	temporal-quantity	unit	month	0.0.0.0.0	0.0.0.0.0.0	
(r / rely-01 
      :ARG0 (h / he 
            :ARG0-of (j / joke-01 
                  :ARG1 (1 / 18 
                        :quant-of (t / temporal-quantity 
                              :unit (m2 / month))) 
                  :quant (m / many))) 
      :ARG1 (f / fortune 
            :mod (g / good)) 
      :ARG2 (o / office) 
      :condition (c / clear 
            :op1 (i / it)) 
      :op-of (h2 / heavy) 
      :op-of (r2 / rich))

# ::snt the alleged excesses have not apparently been confined to the kurdistan region in the north or to the period immediately after the ending of the war
# ::tok the alleged excesses have not apparently been confined to the kurdistan region in the north or to the period immediately after the ending of the war
# ::alignments 25-26|0.5.1.0 22-23|0.5.1 20-21|0.5 19-20|0.5.0 18-19|0.0.0 15-16|0.0 14-15|0.4 11-12|0.2 7-8|0 5-6|0.3 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:50.032
# ::node	0	confine-01	7-8
# ::node	0.0	or	15-16
# ::node	0.0.0	period	18-19
# ::node	0.1	allege-01	1-2
# ::node	0.2	region	11-12
# ::node	0.3	apparent	5-6
# ::node	0.4	north	14-15
# ::node	0.5	after	20-21
# ::node	0.5.0	immediate	19-20
# ::node	0.5.1	end-01	22-23
# ::node	0.5.1.0	war	25-26
# ::root	0	confine-01
# ::edge	after	mod	immediate	0.5	0.5.0	
# ::edge	after	op1	end-01	0.5	0.5.1	
# ::edge	allege-01	ARG1	confine-01	0.1	0	
# ::edge	confine-01	ARG1	or	0	0.0	
# ::edge	confine-01	ARG2	region	0	0.2	
# ::edge	confine-01	manner	apparent	0	0.3	
# ::edge	confine-01	manner	north	0	0.4	
# ::edge	confine-01	time	after	0	0.5	
# ::edge	end-01	ARG1	war	0.5.1	0.5.1.0	
# ::edge	or	op1	period	0.0	0.0.0	
(c / confine-01 
      :ARG1 (o / or 
            :op1 (p / period)) 
      :ARG1-of (a3 / allege-01) 
      :ARG2 (r / region) 
      :manner (a2 / apparent) 
      :manner (n / north) 
      :time (a / after 
            :mod (i / immediate) 
            :op1 (e / end-01 
                  :ARG1 (w / war))))

# ::snt in juba southern sudan the agricultural rehabilitation project jointly financed by the british government and the world bank in 1978 had an annual budget in excess of that of the ministry of agriculture of the regional government
# ::tok in juba southern sudan the agricultural rehabilitation project jointly financed by the british government and the world bank in 1978 had an annual budget in excess of that of the ministry of agriculture of the regional government
# ::alignments 35-36|0.3 32-33|0.2.0 30-31|0.2.0.0 25-26|0.2 23-24|0.2.1 19-20|0.0.2.0+0.0.2 17-18|0.1 16-17|0.1.0 14-15|0 9-10|0.0 8-9|0.0.1 7-8|0.0.0 6-7|0.0.1.0 5-6|0.0.0.0 2-3|0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:50.269
# ::node	0	and	14-15
# ::node	0.0	finance-01	9-10
# ::node	0.0.0	project	7-8
# ::node	0.0.0.0	agriculture	5-6
# ::node	0.0.1	joint	8-9
# ::node	0.0.1.0	rehabilitate-01	6-7
# ::node	0.0.1.0.0	south	2-3
# ::node	0.0.2	date-entity	19-20
# ::node	0.0.2.0	1978	19-20
# ::node	0.1	bank	17-18
# ::node	0.1.0	world	16-17
# ::node	0.2	exceed-01	25-26
# ::node	0.2.0	agriculture	32-33
# ::node	0.2.0.0	ministry	30-31
# ::node	0.2.1	budget	23-24
# ::node	0.3	region	35-36
# ::root	0	and
# ::edge	and	op1	bank	0	0.1	
# ::edge	and	op2	exceed-01	0	0.2	
# ::edge	and	poss	region	0	0.3	
# ::edge	bank	mod	world	0.1	0.1.0	
# ::edge	budget	topic	exceed-01	0.2.1	0.2	
# ::edge	date-entity	year	1978	0.0.2	0.0.2.0	
# ::edge	exceed-01	ARG1	agriculture	0.2	0.2.0	
# ::edge	finance-01	ARG0	and	0.0	0	
# ::edge	finance-01	ARG1	project	0.0	0.0.0	
# ::edge	finance-01	manner	joint	0.0	0.0.1	
# ::edge	finance-01	time	date-entity	0.0	0.0.2	
# ::edge	ministry	mod	agriculture	0.2.0.0	0.2.0	
# ::edge	project	mod	agriculture	0.0.0	0.0.0.0	
# ::edge	rehabilitate-01	ARG0	south	0.0.1.0	0.0.1.0.0	
# ::edge	rehabilitate-01	mod	joint	0.0.1.0	0.0.1	
(a2 / and 
      :ARG0-of (f / finance-01 
            :ARG1 (p / project 
                  :mod (a3 / agriculture)) 
            :manner (j / joint 
                  :mod-of (r2 / rehabilitate-01 
                        :ARG0 (s / south))) 
            :time (d / date-entity 
                  :year 1978)) 
      :op1 (b2 / bank 
            :mod (w / world)) 
      :op2 (e / exceed-01 
            :ARG1 (a / agriculture 
                  :mod-of (m / ministry)) 
            :topic-of (b / budget)) 
      :poss (r / region))

# ::snt since anthropogenic sources account for roughly a quarter to a third of nitrous oxide emissions and possibly all of the excess causing the atmospheric buildup ample opportunities should exist for reducing them despite the handicaps of inadequate information and incomplete understanding of the processes involved
# ::tok since anthropogenic sources account for roughly a quarter to a third of nitrous oxide emissions and possibly all of the excess causing the atmospheric buildup ample opportunities should exist for reducing them despite the handicaps of inadequate information and incomplete understanding of the processes involved
# ::alignments 44-45|0.0.1.0.0.0.0.0.0 43-44|0.0.1.0.0.0.0.0 40-41|0.0.1.0.0.0.0 39-40|0.0.1.0.0.0.1+0.0.1.0.0.0 38-39|0.0.1.0.0.0.0.1 37-38|0.1.1.1.1.0 36-37|0.1.1.1.1.1+0.1.1.1.1 30-31|0.1.1.1 28-29|0.1.1 27-28|0.1.1.0 26-27|0.1.1.1.0 24-25|0.1 23-24|0.1.2 21-22|0 20-21|0.0 17-18|0.0.1 16-17|0.0.1.0 15-16|0.0.1.0.0 13-14|0.0.0 5-6|0.1.1.0.0 3-4|0.1.0 2-3|0.1.0.0 0-1|0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:51.439
# ::node	0	cause-01	21-22
# ::node	0.0	exceed-01	20-21
# ::node	0.0.0	oxide	13-14
# ::node	0.0.1	all	17-18
# ::node	0.0.1.0	possible	16-17
# ::node	0.0.1.0.0	and	15-16
# ::node	0.0.1.0.0.0	complete-01	39-40
# ::node	0.0.1.0.0.0.0	understand-01	40-41
# ::node	0.0.1.0.0.0.0.0	process	43-44
# ::node	0.0.1.0.0.0.0.0.0	involve-01	44-45
# ::node	0.0.1.0.0.0.0.1	and	38-39
# ::node	0.0.1.0.0.0.1	-	39-40
# ::node	0.1	build-05	24-25
# ::node	0.1.0	account	3-4
# ::node	0.1.0.0	source	2-3
# ::node	0.1.0.1	since	0-1
# ::node	0.1.1	exist-01	28-29
# ::node	0.1.1.0	recommend-01	27-28
# ::node	0.1.1.0.0	roughly	5-6
# ::node	0.1.1.1	reduce-01	30-31
# ::node	0.1.1.1.0	opportunity	26-27
# ::node	0.1.1.1.1	adequate	36-37
# ::node	0.1.1.1.1.0	information	37-38
# ::node	0.1.1.1.1.1	-	36-37
# ::node	0.1.2	atmosphere	23-24
# ::root	0	cause-01
# ::edge	account	mod	source	0.1.0	0.1.0.0	
# ::edge	adequate	polarity	-	0.1.1.1.1	0.1.1.1.1.1	
# ::edge	all	mod	possible	0.0.1	0.0.1.0	
# ::edge	and	op1	possible	0.0.1.0.0	0.0.1.0	
# ::edge	and	op1	understand-01	0.0.1.0.0.0.0.1	0.0.1.0.0.0.0	
# ::edge	build-05	ARG0	account	0.1	0.1.0	
# ::edge	build-05	mod	atmosphere	0.1	0.1.2	
# ::edge	cause-01	ARG0	exceed-01	0	0.0	
# ::edge	cause-01	ARG1	build-05	0	0.1	
# ::edge	complete-01	ARG1	and	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	complete-01	polarity	-	0.0.1.0.0.0	0.0.1.0.0.0.1	
# ::edge	exceed-01	ARG1	oxide	0.0	0.0.0	
# ::edge	exceed-01	quant	all	0.0	0.0.1	
# ::edge	exist-01	ARG1	build-05	0.1.1	0.1	
# ::edge	exist-01	ARG2	reduce-01	0.1.1	0.1.1.1	
# ::edge	information	mod	adequate	0.1.1.1.1.0	0.1.1.1.1	
# ::edge	involve-01	ARG1	process	0.0.1.0.0.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	recommend-01	ARG0	roughly	0.1.1.0	0.1.1.0.0	
# ::edge	recommend-01	ARG1	exist-01	0.1.1.0	0.1.1	
# ::edge	reduce-01	ARG0	opportunity	0.1.1.1	0.1.1.1.0	
# ::edge	reduce-01	ARG1	adequate	0.1.1.1	0.1.1.1.1	
# ::edge	since	op1	account	0.1.0.1	0.1.0	
# ::edge	understand-01	ARG1	process	0.0.1.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	understand-01	mod	complete-01	0.0.1.0.0.0.0	0.0.1.0.0.0	
(c2 / cause-01 
      :ARG0 (e2 / exceed-01 
            :ARG1 (o2 / oxide) 
            :quant (a4 / all 
                  :mod (p2 / possible 
                        :op-of (a5 / and 
                              :ARG1-of (c / complete-01 
                                    :mod-of (u / understand-01 
                                          :ARG1 (p / process 
                                                :ARG1-of (i / involve-01)) 
                                          :op-of (a / and)) 
                                    :polarity -))))) 
      :ARG1 (b / build-05 
            :ARG0 (a6 / account 
                  :mod (s / source) 
                  :op-of (s2 / since)) 
            :ARG1-of (e / exist-01 
                  :ARG1-of (r2 / recommend-01 
                        :ARG0 (r3 / roughly)) 
                  :ARG2 (r / reduce-01 
                        :ARG0 (o / opportunity) 
                        :ARG1 (a2 / adequate 
                              :mod-of (i2 / information) 
                              :polarity -))) 
            :mod (a3 / atmosphere)))

# ::snt for paul who will doubtless be intrigued to listen when i return to an account of the excesses of the sybaritic southern fleshpots dash
# ::tok for paul who will doubtless be intrigued to listen when i return to an account of the excesses of the sybaritic southern fleshpots dash
# ::alignments 21-22|0.0 14-15|0.1.0 10-11|0.2.0 8-9|0.1 6-7|0 4-5|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:51.490
# ::node	0	intrigue-01	6-7
# ::node	0.0	south	21-22
# ::node	0.1	listen-01	8-9
# ::node	0.1.0	account	14-15
# ::node	0.2	doubt-01	4-5
# ::node	0.2.0	i	10-11
# ::root	0	intrigue-01
# ::edge	doubt-01	ARG0	i	0.2	0.2.0	
# ::edge	doubt-01	ARG1	intrigue-01	0.2	0	
# ::edge	intrigue-01	ARG0	south	0	0.0	
# ::edge	intrigue-01	ARG1	listen-01	0	0.1	
# ::edge	listen-01	ARG1	account	0.1	0.1.0	
(i2 / intrigue-01 
      :ARG0 (s / south) 
      :ARG1 (l / listen-01 
            :ARG1 (a / account)) 
      :ARG1-of (d / doubt-01 
            :ARG0 (i / i)))

# ::snt such excesses however were rare
# ::tok such excesses however were rare
# ::alignments 4-5|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:51.494
# ::node	0	rare	4-5
# ::node	0.0	such	0-1
# ::root	0	rare
# ::edge	rare	domain	such	0	0.0	
(r / rare 
      :domain (s / such))

# ::snt they suggested that lloyds should accept responsibility for all liabilities in excess of dollars 766m
# ::tok they suggested that lloyds should accept responsibility for all liabilities in excess of dollars 766m
# ::alignments 13-14|0.1.0.1.0.0+0.1.0.1.0 11-12|0.1.0.2 8-9|0.0.0 6-7|0.1.0.1 5-6|0.1.0 4-5|0.1 3-4|0.1.0.0.0.0+0.1.0.0.0+0.1.0.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:51.596
# ::node	0	suggest-01	1-2
# ::node	0.0	they	0-1
# ::node	0.0.0	all	8-9
# ::node	0.1	recommend-01	4-5
# ::node	0.1.0	accept-01	5-6
# ::node	0.1.0.0	company	3-4
# ::node	0.1.0.0.0	name	3-4
# ::node	0.1.0.0.0.0	"Lloyds"	3-4
# ::node	0.1.0.1	responsible-41	6-7
# ::node	0.1.0.1.0	monetary-quantity	13-14
# ::node	0.1.0.1.0.0	dollar	13-14
# ::node	0.1.0.2	exceed-01	11-12
# ::root	0	suggest-01
# ::edge	accept-01	ARG0	company	0.1.0	0.1.0.0	
# ::edge	accept-01	ARG1	responsible-41	0.1.0	0.1.0.1	
# ::edge	accept-01	manner	exceed-01	0.1.0	0.1.0.2	
# ::edge	company	name	name	0.1.0.0	0.1.0.0.0	
# ::edge	monetary-quantity	unit	dollar	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	name	op1	"Lloyds"	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	recommend-01	ARG1	accept-01	0.1	0.1.0	
# ::edge	responsible-41	ARG1	monetary-quantity	0.1.0.1	0.1.0.1.0	
# ::edge	suggest-01	ARG0	they	0	0.0	
# ::edge	suggest-01	ARG1	recommend-01	0	0.1	
# ::edge	they	quant	all	0.0	0.0.0	
(s / suggest-01 
      :ARG0 (t / they 
            :quant (a / all)) 
      :ARG1 (r2 / recommend-01 
            :ARG1 (a2 / accept-01 
                  :ARG0 (c / company 
                        :name (n / name 
                              :op1 "Lloyds")) 
                  :ARG1 (r / responsible-41 
                        :ARG1 (m / monetary-quantity 
                              :unit (d / dollar))) 
                  :manner (e / exceed-01))))

# ::snt 4 per cent excess money supply gave britain a 9, this article made the very emphatic claim that any growth of m3 in excess of the growth of output would inevitably result in an equivalent inflation rate with a time lag of about two years
# ::tok 4 per cent excess money supply gave britain a 9 , this article made the very emphatic claim that any growth of m3 in excess of the growth of output would inevitably result in an equivalent inflation rate with a time lag of about two years
# ::alignments 45-46|0.0.1.0.1.2.1.1+0.0.1.0.1.2.1 44-45|0.0.1.0.1.2.1.0 41-42|0.0.1.0 40-41|0.0.1.0.0 37-38|0.0.3 36-37|0.0.3.0 35-36|0.0.1.0.1.0 32-33|0.0 31-32|0 29-30|0.0.1.0.1.1 27-28|0.0.1.0.1 24-25|0.0.1.0.1.2 20-21|0.0.1 19-20|0.0.1.1 17-18|0.0.2 15-16|0.0.1.0.1.2.0.1.0 12-13|0.0.1.0.1.2.0.0.0 11-12|0.0.1.0.1.2.0.0 9-10|0.0.0 7-8|0.0.2.0.0.0+0.0.2.0.0+0.0.2.0 5-6|0.0.1.0.1.2.0.1 4-5|0.0.1.0.1.2.0.1.1 3-4|0.0.1.0.1.2.0 2-3|0.0.1.0.1.2.0.1.2.0+0.0.1.0.1.2.0.1.2 0-1|0.0.1.0.1.2.0.1.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:52.317
# ::node	0	inevitable	31-32
# ::node	0.0	result-01	32-33
# ::node	0.0.0	9	9-10
# ::node	0.0.1	grow-01	20-21
# ::node	0.0.1.0	lag-01	41-42
# ::node	0.0.1.0.0	time	40-41
# ::node	0.0.1.0.1	grow-01	27-28
# ::node	0.0.1.0.1.0	equivalent	35-36
# ::node	0.0.1.0.1.1	output	29-30
# ::node	0.0.1.0.1.2	exceed-01	24-25
# ::node	0.0.1.0.1.2.0	exceed-01	3-4
# ::node	0.0.1.0.1.2.0.0	this	11-12
# ::node	0.0.1.0.1.2.0.0.0	article	12-13
# ::node	0.0.1.0.1.2.0.1	supply-01	5-6
# ::node	0.0.1.0.1.2.0.1.0	very	15-16
# ::node	0.0.1.0.1.2.0.1.1	money	4-5
# ::node	0.0.1.0.1.2.0.1.2	monetary-quantity	2-3
# ::node	0.0.1.0.1.2.0.1.2.0	cent	2-3
# ::node	0.0.1.0.1.2.0.1.3	4	0-1
# ::node	0.0.1.0.1.2.1	temporal-quantity	45-46
# ::node	0.0.1.0.1.2.1.0	2	44-45
# ::node	0.0.1.0.1.2.1.1	year	45-46
# ::node	0.0.1.1	any	19-20
# ::node	0.0.2	claim-01	17-18
# ::node	0.0.2.0	country	7-8
# ::node	0.0.2.0.0	name	7-8
# ::node	0.0.2.0.0.0	"Britain"	7-8
# ::node	0.0.3	rate	37-38
# ::node	0.0.3.0	inflation	36-37
# ::root	0	inevitable
(i2 / inevitable 
      :mod-of (r2 / result-01 
            :ARG0 9 
            :ARG1 (g2 / grow-01 
                  :ARG1-of (l / lag-01 
                        :ARG0 (t2 / time) 
                        :ARG2-of (g / grow-01 
                              :ARG0 (e / equivalent) 
                              :ARG1 (o / output) 
                              :ARG1-of (e2 / exceed-01 
                                    :ARG2-of (e3 / exceed-01 
                                          :ARG0 (t3 / this 
                                                :mod-of (a2 / article)) 
                                          :ARG1 (s / supply-01 
                                                :ARG0 (v / very) 
                                                :ARG1 (m / money) 
                                                :location (m2 / monetary-quantity 
                                                      :unit (c3 / cent)) 
                                                :quant 4)) 
                                    :domain-of (t / temporal-quantity 
                                          :quant 2 
                                          :unit (y / year))))) 
                  :mod (a / any)) 
            :ARG1-of (c / claim-01 
                  :ARG0 (c2 / country 
                        :name (n / name 
                              :op1 "Britain"))) 
            :ARG2 (r / rate 
                  :mod (i / inflation))))

# ::snt sells yesterday confirmed that they are to merge their uk practices to create the largest accountancy firm in the country with a fee income in excess of 413m
# ::tok sells yesterday confirmed that they are to merge their uk practices to create the largest accountancy firm in the country with a fee income in excess of 413m
# ::alignments 25-26|0.2.0 23-24|0.2.0.0 22-23|0.2.0.0.0 19-20|0.2 16-17|0 14-15|0.1.0+0.1 12-13|0.0 10-11|0.0.0 7-8|0.0.0.0 4-5|0.0.0.0.0 2-3|0.0.0.0.0.0 1-2|0.0.0.0.0.0.0 0-1|0.0.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:52.543
# ::node	0	firm	16-17
# ::node	0.0	create-01	12-13
# ::node	0.0.0	practice-01	10-11
# ::node	0.0.0.0	merge-01	7-8
# ::node	0.0.0.0.0	they	4-5
# ::node	0.0.0.0.0.0	confirm-01	2-3
# ::node	0.0.0.0.0.0.0	yesterday	1-2
# ::node	0.0.0.0.0.0.1	sell-01	0-1
# ::node	0.1	large	14-15
# ::node	0.1.0	most	14-15
# ::node	0.2	country	19-20
# ::node	0.2.0	exceed-01	25-26
# ::node	0.2.0.0	income	23-24
# ::node	0.2.0.0.0	fee	22-23
# ::root	0	firm
# ::edge	confirm-01	ARG0	they	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	confirm-01	ARG1	yesterday	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	create-01	ARG1	firm	0.0	0	
# ::edge	exceed-01	ARG0	country	0.2.0	0.2	
# ::edge	exceed-01	ARG1	income	0.2.0	0.2.0.0	
# ::edge	firm	mod	large	0	0.1	
# ::edge	firm	poss	country	0	0.2	
# ::edge	income	mod	fee	0.2.0.0	0.2.0.0.0	
# ::edge	large	degree	most	0.1	0.1.0	
# ::edge	merge-01	ARG0	they	0.0.0.0	0.0.0.0.0	
# ::edge	merge-01	ARG1	practice-01	0.0.0.0	0.0.0	
# ::edge	practice-01	ARG1	create-01	0.0.0	0.0	
# ::edge	sell-01	ARG1	confirm-01	0.0.0.0.0.0.1	0.0.0.0.0.0	
(f2 / firm 
      :ARG1-of (c2 / create-01 
            :ARG1-of (p / practice-01 
                  :ARG1-of (m2 / merge-01 
                        :ARG0 (t / they 
                              :ARG0-of (c3 / confirm-01 
                                    :ARG1 (y / yesterday) 
                                    :ARG1-of (s / sell-01)))))) 
      :mod (l / large 
            :degree (m / most)) 
      :poss (c / country 
            :ARG0-of (e / exceed-01 
                  :ARG1 (i / income 
                        :mod (f / fee)))))

# ::snt by contrast sally weaver of wallasey merseyside suggests a stuffing for quail that is sophisticated to the point of excess but wins a bottle of metusalem oloroso sherry for suggesting an apt use of dried mint a form of the herb i usually detest
# ::tok by contrast sally weaver of wallasey merseyside suggests a stuffing for quail that is sophisticated to the point of excess but wins a bottle of metusalem oloroso sherry for suggesting an apt use of dried mint a form of the herb i usually detest
# ::alignments 43-44|0.3.0.0 42-43|0.3.0.0.0 41-42|0.3.0 37-38|0.3.3.0 34-35|0.1 32-33|0.3 29-30|0.3.3 23-24|0.2.0 21-22|0.2 20-21|0 19-20|0.3.1.0 17-18|0.3.1 14-15|0.0 7-8|0.3.2 1-2|0.3.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:52.735
# ::node	0	contrast-01	20-21
# ::node	0.0	sophisticated	14-15
# ::node	0.1	dry-02	34-35
# ::node	0.2	win-01	21-22
# ::node	0.2.0	bottle	23-24
# ::node	0.3	use-01	32-33
# ::node	0.3.0	i	41-42
# ::node	0.3.0.0	detest-01	43-44
# ::node	0.3.0.0.0	usual	42-43
# ::node	0.3.1	point	17-18
# ::node	0.3.1.0	exceed-01	19-20
# ::node	0.3.1.1	contrast-01	1-2
# ::node	0.3.2	suggest-01	7-8
# ::node	0.3.3	suggest-01	29-30
# ::node	0.3.3.0	form	37-38
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	point	0.3.1.1	0.3.1	
# ::edge	contrast-01	ARG1	sophisticated	0	0.0	
# ::edge	contrast-01	ARG2	win-01	0	0.2	
# ::edge	detest-01	ARG1	i	0.3.0.0	0.3.0	
# ::edge	detest-01	mod	usual	0.3.0.0	0.3.0.0.0	
# ::edge	dry-02	ARG1	contrast-01	0.1	0	
# ::edge	exceed-01	ARG1	point	0.3.1.0	0.3.1	
# ::edge	suggest-01	ARG0	form	0.3.3	0.3.3.0	
# ::edge	suggest-01	ARG1	use-01	0.3.2	0.3	
# ::edge	suggest-01	ARG1	use-01	0.3.3	0.3	
# ::edge	use-01	ARG0	i	0.3	0.3.0	
# ::edge	use-01	ARG1	point	0.3	0.3.1	
# ::edge	use-01	topic	contrast-01	0.3	0	
# ::edge	win-01	ARG1	bottle	0.2	0.2.0	
(c / contrast-01 
      :ARG1 (s2 / sophisticated) 
      :ARG1-of (d2 / dry-02) 
      :ARG2 (w / win-01 
            :ARG1 (b / bottle)) 
      :topic-of (u2 / use-01 
            :ARG0 (i / i 
                  :ARG1-of (d / detest-01 
                        :mod (u / usual))) 
            :ARG1 (p / point 
                  :ARG1-of (e / exceed-01) 
                  :ARG1-of (c2 / contrast-01)) 
            :ARG1-of (s3 / suggest-01) 
            :ARG1-of (s / suggest-01 
                  :ARG0 (f / form))))

# ::snt   switching topics and levels of humour at full throttle those taken by surprise by eltons opening address those in his words who had come expecting to see an episode of blackadder were rewarded with the baldrickstyle bawdy hyperbole from the trenches of the current series its like extracting a zeppelin from a cats arsehole as well as the young ones student humour of mayall edmonson and co the epiglottis became gods sick trigger in one tale of lagerandvindaloo excess
# ::tok switching topics and levels of humour at full throttle those taken by surprise by eltons opening address those in his words who had come expecting to see an episode of blackadder were rewarded with the baldrickstyle bawdy hyperbole from the trenches of the current series its like extracting a zeppelin from a cats arsehole as well as the young ones student humour of mayall edmonson and co the epiglottis became gods sick trigger in one tale of lagerandvindaloo excess
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:52.736
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt   by the time roxburgh took charge past excesses had been set aside expectations becoming more realistic first under the late jock stein then ferguson who steered the team to mexico in 1986
# ::tok by the time roxburgh took charge past excesses had been set aside expectations becoming more realistic first under the late jock stein then ferguson who steered the team to mexico in 1986
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:52.737
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt after an electrolysis current had been passed for about three months to charge the palladium with hydrogen a small excess of heat was observed of the order of one watt or less
# ::tok after an electrolysis current had been passed for about three months to charge the palladium with hydrogen a small excess of heat was observed of the order of one watt or less
# ::alignments 31-32|0.1 30-31|0 23-24|0.0 21-22|0.0.1.1 19-20|0.0.1 18-19|0.0.1.2 10-11|0.0.1.0.0.0+0.0.1.0.0 9-10|0.0.1.0 3-4|0.0.2 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:52.881
# ::node	0	or	30-31
# ::node	0.0	observe-01	23-24
# ::node	0.0.0	after	0-1
# ::node	0.0.1	exceed-01	19-20
# ::node	0.0.1.0	3	9-10
# ::node	0.0.1.0.0	temporal-quantity	10-11
# ::node	0.0.1.0.0.0	month	10-11
# ::node	0.0.1.1	heat	21-22
# ::node	0.0.1.2	small	18-19
# ::node	0.0.2	current	3-4
# ::node	0.1	less	31-32
# ::root	0	or
# ::edge	current	op1	observe-01	0.0.2	0.0	
# ::edge	exceed-01	ARG0	3	0.0.1	0.0.1.0	
# ::edge	exceed-01	ARG1	heat	0.0.1	0.0.1.1	
# ::edge	exceed-01	mod	small	0.0.1	0.0.1.2	
# ::edge	observe-01	ARG0	after	0.0	0.0.0	
# ::edge	observe-01	ARG1	exceed-01	0.0	0.0.1	
# ::edge	observe-01	duration	or	0.0	0	
# ::edge	or	op1	less	0	0.1	
# ::edge	temporal-quantity	quant	3	0.0.1.0.0	0.0.1.0	
# ::edge	temporal-quantity	unit	month	0.0.1.0.0	0.0.1.0.0.0	
(o / or 
      :duration-of (o2 / observe-01 
            :ARG0 (a / after) 
            :ARG1 (e / exceed-01 
                  :ARG0 (3 / 3 
                        :quant-of (t / temporal-quantity 
                              :unit (m / month))) 
                  :ARG1 (h / heat) 
                  :mod (s / small)) 
            :op-of (c / current)) 
      :op1 (l / less))

# ::snt moon died in 1978 after an overdose of the prescribed drug he was taking to ease himself out of alcoholism townshend had his own dark periods of excess even entwistle the quiet static one felt inclined to release a solo album entitled smash your head against the wall
# ::tok moon died in 1978 after an overdose of the prescribed drug he was taking to ease himself out of alcoholism townshend had his own dark periods of excess even entwistle the quiet static one felt inclined to release a solo album entitled smash your head against the wall
# ::alignments 47-48|0.0.0.0 44-45|0.0.0 41-42|0 40-41|0.0 37-38|0.0.1 35-36|0.0.1.0 34-35|0.0.1.0.0 31-32|0.0.1.0.0.0.0.0.0.0 27-28|0.0.1.0.0.1 25-26|0.0.1.0.0.0.1.0.0 24-25|0.0.1.0.0.0.1.0.0.0 19-20|0.0.1.0.0.0.0.1 15-16|0.0.1.0.0.0.0 11-12|0.0.1.0.0.0 10-11|0.0.1.0.0.0.0.0 9-10|0.0.1.0.0.0.0.0.0 4-5|0.0.1.0.0.0.1.1 3-4|0.0.1.0.0.0.1.2.0+0.0.1.0.0.0.1.2 1-2|0.0.1.0.0.0.1 0-1|0.0.1.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:53.259
# ::node	0	entitle-02	41-42
# ::node	0.0	album	40-41
# ::node	0.0.0	head-01	44-45
# ::node	0.0.0.0	wall	47-48
# ::node	0.0.1	release-01	37-38
# ::node	0.0.1.0	incline-01	35-36
# ::node	0.0.1.0.0	feel-01	34-35
# ::node	0.0.1.0.0.0	he	11-12
# ::node	0.0.1.0.0.0.0	ease-02	15-16
# ::node	0.0.1.0.0.0.0.0	drug	10-11
# ::node	0.0.1.0.0.0.0.0.0	prescribe-02	9-10
# ::node	0.0.1.0.0.0.0.0.0.0	quiet-41	31-32
# ::node	0.0.1.0.0.0.0.1	alcoholism	19-20
# ::node	0.0.1.0.0.0.1	die-01	1-2
# ::node	0.0.1.0.0.0.1.0	moon	0-1
# ::node	0.0.1.0.0.0.1.0.0	period	25-26
# ::node	0.0.1.0.0.0.1.0.0.0	dark	24-25
# ::node	0.0.1.0.0.0.1.1	after	4-5
# ::node	0.0.1.0.0.0.1.2	date-entity	3-4
# ::node	0.0.1.0.0.0.1.2.0	1978	3-4
# ::node	0.0.1.0.0.1	exceed-01	27-28
# ::root	0	entitle-02
# ::edge	date-entity	year	1978	0.0.1.0.0.0.1.2	0.0.1.0.0.0.1.2.0	
# ::edge	die-01	ARG0	moon	0.0.1.0.0.0.1	0.0.1.0.0.0.1.0	
# ::edge	die-01	ARG1	he	0.0.1.0.0.0.1	0.0.1.0.0.0	
# ::edge	die-01	time	after	0.0.1.0.0.0.1	0.0.1.0.0.0.1.1	
# ::edge	die-01	time	date-entity	0.0.1.0.0.0.1	0.0.1.0.0.0.1.2	
# ::edge	ease-02	ARG0	he	0.0.1.0.0.0.0	0.0.1.0.0.0	
# ::edge	ease-02	ARG1	drug	0.0.1.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	ease-02	time	alcoholism	0.0.1.0.0.0.0	0.0.1.0.0.0.0.1	
# ::edge	entitle-02	ARG1	album	0	0.0	
# ::edge	exceed-01	ARG1	feel-01	0.0.1.0.0.1	0.0.1.0.0	
# ::edge	feel-01	ARG0	he	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	feel-01	ARG1	incline-01	0.0.1.0.0	0.0.1.0	
# ::edge	head-01	ARG0	album	0.0.0	0.0	
# ::edge	head-01	ARG1	wall	0.0.0	0.0.0.0	
# ::edge	incline-01	ARG1	release-01	0.0.1.0	0.0.1	
# ::edge	period	mod	dark	0.0.1.0.0.0.1.0.0	0.0.1.0.0.0.1.0.0.0	
# ::edge	period	poss	moon	0.0.1.0.0.0.1.0.0	0.0.1.0.0.0.1.0	
# ::edge	prescribe-02	ARG1	drug	0.0.1.0.0.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	quiet-41	ARG1	prescribe-02	0.0.1.0.0.0.0.0.0.0	0.0.1.0.0.0.0.0.0	
# ::edge	release-01	ARG1	album	0.0.1	0.0	
(e / entitle-02 
      :ARG1 (a / album 
            :ARG0-of (h / head-01 
                  :ARG1 (w / wall)) 
            :ARG1-of (r / release-01 
                  :ARG1-of (i / incline-01 
                        :ARG1-of (f / feel-01 
                              :ARG0 (h2 / he 
                                    :ARG0-of (e3 / ease-02 
                                          :ARG1 (d2 / drug 
                                                :ARG1-of (p2 / prescribe-02 
                                                      :ARG1-of (q / quiet-41))) 
                                          :time (a2 / alcoholism)) 
                                    :ARG1-of (d4 / die-01 
                                          :ARG0 (m / moon 
                                                :poss-of (p / period 
                                                      :mod (d / dark))) 
                                          :time (a3 / after) 
                                          :time (d3 / date-entity 
                                                :year 1978))) 
                              :ARG1-of (e2 / exceed-01))))))

# ::snt could save us from the worst selfish excesses of the blind replicators
# ::tok could save us from the worst selfish excesses of the blind replicators
# ::alignments 10-11|0.0.0 6-7|0.0.1.0 5-6|0.0.1 1-2|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:53.275
# ::node	0	possible	0-1
# ::node	0.0	save-02	1-2
# ::node	0.0.0	blind-01	10-11
# ::node	0.0.1	bad	5-6
# ::node	0.0.1.0	selfish	6-7
# ::root	0	possible
# ::edge	blind-01	ARG1	save-02	0.0.0	0.0	
# ::edge	possible	domain	save-02	0	0.0	
# ::edge	save-02	time	bad	0.0	0.0.1	
# ::edge	selfish	degree	bad	0.0.1.0	0.0.1	
(p / possible 
      :domain (s2 / save-02 
            :ARG1-of (b / blind-01) 
            :time (b2 / bad 
                  :degree-of (s / selfish))))

# ::snt the group included a former vicepresident milovan djilas who served nine years in jail for denouncing alleged party excesses koca popovic another former vicepresident and foreign minister gojko nikolis and kosta cavoski of the academy of arts and sciences and srdja popovic a wellknown civil rights lawyer
# ::tok the group included a former vicepresident milovan djilas who served nine years in jail for denouncing alleged party excesses koca popovic another former vicepresident and foreign minister gojko nikolis and kosta cavoski of the academy of arts and sciences and srdja popovic a wellknown civil rights lawyer
# ::alignments 46-47|0.1.2.0.0.2.1 45-46|0.1.2.0.0.2 44-45|0.1.2.0.0.2.0 39-40|0.1.2.0.0 38-39|0.1.2.1 37-38|0.1.2.0.1 36-37|0.1.2.0 34-35|0.1.2.0.0.1 29-30|0.1.2 26-27|0.1.2.0.0.0.0+0.1.2.0.0.0.0.0 25-26|0.1.2.0.0.0 24-25|0.1 23-24|0.1.1 22-23|0.2 21-22|0.1.1.0 17-18|0.1.2.0.0.0.0.0.0.0 16-17|0.1.2.0.0.0.0.0.0 15-16|0 13-14|0.0.0 11-12|0.0.2+0.0 10-11|0.0.1 9-10|0.0.0.0 5-6|0.1.2.0.0.0.0.0.1 4-5|0.1.2.0.0.0.0.0.2 2-3|0.1.0 1-2|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:53.982
# ::node	0	denounce-01	15-16
# ::node	0.0	temporal-quantity	11-12
# ::node	0.0.0	jail	13-14
# ::node	0.0.0.0	serve-01	9-10
# ::node	0.0.1	9	10-11
# ::node	0.0.2	year	11-12
# ::node	0.1	and	24-25
# ::node	0.1.0	include-01	2-3
# ::node	0.1.0.0	group	1-2
# ::node	0.1.1	vice	23-24
# ::node	0.1.1.0	another	21-22
# ::node	0.1.2	and	29-30
# ::node	0.1.2.0	art	36-37
# ::node	0.1.2.0.0	and	39-40
# ::node	0.1.2.0.0.0	foreign	25-26
# ::node	0.1.2.0.0.0.0	minister	26-27
# ::node	0.1.2.0.0.0.0.0	have-org-role-91	26-27
# ::node	0.1.2.0.0.0.0.0.0	allege-01	16-17
# ::node	0.1.2.0.0.0.0.0.0.0	party	17-18
# ::node	0.1.2.0.0.0.0.0.1	vice	5-6
# ::node	0.1.2.0.0.0.0.0.2	former	4-5
# ::node	0.1.2.0.0.1	academy	34-35
# ::node	0.1.2.0.0.2	right	45-46
# ::node	0.1.2.0.0.2.0	civil	44-45
# ::node	0.1.2.0.0.2.1	lawyer	46-47
# ::node	0.1.2.0.1	and	37-38
# ::node	0.1.2.1	science	38-39
# ::node	0.2	former	22-23
# ::root	0	denounce-01
# ::edge	allege-01	ARG1	party	0.1.2.0.0.0.0.0.0	0.1.2.0.0.0.0.0.0.0	
# ::edge	and	mod	foreign	0.1.2.0.0	0.1.2.0.0.0	
# ::edge	and	op1	academy	0.1.2.0.0	0.1.2.0.0.1	
# ::edge	and	op1	art	0.1.2	0.1.2.0	
# ::edge	and	op1	art	0.1.2.0.1	0.1.2.0	
# ::edge	and	op1	vice	0.1	0.1.1	
# ::edge	and	op2	and	0.1	0.1.2	
# ::edge	and	op2	art	0.1.2.0.0	0.1.2.0	
# ::edge	and	op2	science	0.1.2	0.1.2.1	
# ::edge	and	op3	right	0.1.2.0.0	0.1.2.0.0.2	
# ::edge	denounce-01	ARG0	temporal-quantity	0	0.0	
# ::edge	denounce-01	ARG1	and	0	0.1	
# ::edge	denounce-01	ARG2	former	0	0.2	
# ::edge	have-org-role-91	ARG1	allege-01	0.1.2.0.0.0.0.0	0.1.2.0.0.0.0.0.0	
# ::edge	have-org-role-91	ARG2	minister	0.1.2.0.0.0.0.0	0.1.2.0.0.0.0	
# ::edge	have-org-role-91	time	former	0.1.2.0.0.0.0.0	0.1.2.0.0.0.0.0.2	
# ::edge	include-01	ARG1	and	0.1.0	0.1	
# ::edge	include-01	ARG2	group	0.1.0	0.1.0.0	
# ::edge	lawyer	mod	right	0.1.2.0.0.2.1	0.1.2.0.0.2	
# ::edge	minister	mod	foreign	0.1.2.0.0.0.0	0.1.2.0.0.0	
# ::edge	right	mod	civil	0.1.2.0.0.2	0.1.2.0.0.2.0	
# ::edge	serve-01	ARG1	jail	0.0.0.0	0.0.0	
# ::edge	temporal-quantity	location	jail	0.0	0.0.0	
# ::edge	temporal-quantity	quant	9	0.0	0.0.1	
# ::edge	temporal-quantity	unit	year	0.0	0.0.2	
# ::edge	vice	mod	another	0.1.1	0.1.1.0	
# ::edge	vice	op1	have-org-role-91	0.1.2.0.0.0.0.0.1	0.1.2.0.0.0.0.0	
(d / denounce-01 
      :ARG0 (t / temporal-quantity 
            :location (j / jail 
                  :ARG1-of (s2 / serve-01)) 
            :quant 9 
            :unit (y / year)) 
      :ARG1 (a6 / and 
            :ARG1-of (i / include-01 
                  :ARG2 (g / group)) 
            :op1 (v / vice 
                  :mod (a7 / another)) 
            :op2 (a5 / and 
                  :op1 (a3 / art 
                        :op-of (a / and 
                              :mod (f / foreign 
                                    :mod-of (m / minister 
                                          :ARG2-of (h / have-org-role-91 
                                                :ARG1 (a8 / allege-01 
                                                      :ARG1 (p / party)) 
                                                :op-of (v2 / vice) 
                                                :time (f3 / former)))) 
                              :op1 (a4 / academy) 
                              :op2 (r / right 
                                    :mod (c / civil) 
                                    :mod-of (l / lawyer))) 
                        :op-of (a2 / and)) 
                  :op2 (s / science))) 
      :ARG2 (f2 / former))

# ::snt on march 16th he froze savings in excess of 50000 new cruzados 1000 at the official rate and fourfifths of funds or 25000 new cruzados whichever is highest in overnight accounts for 18 months
# ::tok on march 16th he froze savings in excess of 50000 new cruzados 1000 at the official rate and fourfifths of funds or 25000 new cruzados whichever is highest in overnight accounts for 18 months
# ::alignments 33-34|0.0.2.2.0.0+0.0.2.2.0 32-33|0.0.2.2 30-31|0.0.2.1.0 29-30|0.0.2.1 27-28|0.0.2.1.0.0.0+0.0.2.1.0.0 23-24|0.0.3 22-23|0.1.0.0 21-22|0.2.0 20-21|0.2 17-18|0 16-17|0.1 15-16|0.1.0.1+0.1.0 12-13|0.0.2.0.0+0.0.2.0 10-11|0.1.0.2 9-10|0.0.4 7-8|0.0.2 4-5|0.0 3-4|0.0.0 1-2|0.0.1.0+0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:54.438
# ::node	0	and	17-18
# ::node	0.0	freeze-02	4-5
# ::node	0.0.0	he	3-4
# ::node	0.0.1	date-entity	1-2
# ::node	0.0.1.0	3	1-2
# ::node	0.0.2	exceed-01	7-8
# ::node	0.0.2.0	date-entity	12-13
# ::node	0.0.2.0.0	1000	12-13
# ::node	0.0.2.1	overnight	29-30
# ::node	0.0.2.1.0	account	30-31
# ::node	0.0.2.1.0.0	high	27-28
# ::node	0.0.2.1.0.0.0	most	27-28
# ::node	0.0.2.2	18	32-33
# ::node	0.0.2.2.0	temporal-quantity	33-34
# ::node	0.0.2.2.0.0	month	33-34
# ::node	0.0.3	new	23-24
# ::node	0.0.4	50000	9-10
# ::node	0.1	rate	16-17
# ::node	0.1.0	have-org-role-91	15-16
# ::node	0.1.0.0	25000	22-23
# ::node	0.1.0.1	official	15-16
# ::node	0.1.0.2	new	10-11
# ::node	0.2	fund	20-21
# ::node	0.2.0	or	21-22
# ::root	0	and
# ::edge	18	op1	exceed-01	0.0.2.2	0.0.2	
# ::edge	account	mod	overnight	0.0.2.1.0	0.0.2.1	
# ::edge	and	op1	freeze-02	0	0.0	
# ::edge	and	op2	rate	0	0.1	
# ::edge	and	source	fund	0	0.2	
# ::edge	date-entity	month	3	0.0.1	0.0.1.0	
# ::edge	date-entity	year	1000	0.0.2.0	0.0.2.0.0	
# ::edge	exceed-01	ARG0	date-entity	0.0.2	0.0.2.0	
# ::edge	freeze-02	ARG0	he	0.0	0.0.0	
# ::edge	freeze-02	ARG1	date-entity	0.0	0.0.1	
# ::edge	freeze-02	ARG2	exceed-01	0.0	0.0.2	
# ::edge	freeze-02	time	50000	0.0	0.0.4	
# ::edge	have-org-role-91	ARG0	rate	0.1.0	0.1	
# ::edge	have-org-role-91	ARG1	25000	0.1.0	0.1.0.0	
# ::edge	have-org-role-91	ARG2	official	0.1.0	0.1.0.1	
# ::edge	have-org-role-91	location	new	0.1.0	0.1.0.2	
# ::edge	high	degree	most	0.0.2.1.0.0	0.0.2.1.0.0.0	
# ::edge	high	prep-in	account	0.0.2.1.0.0	0.0.2.1.0	
# ::edge	new	op1	freeze-02	0.0.3	0.0	
# ::edge	or	op1	fund	0.2.0	0.2	
# ::edge	overnight	op1	exceed-01	0.0.2.1	0.0.2	
# ::edge	temporal-quantity	quant	18	0.0.2.2.0	0.0.2.2	
# ::edge	temporal-quantity	unit	month	0.0.2.2.0	0.0.2.2.0.0	
(a2 / and 
      :op1 (f2 / freeze-02 
            :ARG0 (h3 / he) 
            :ARG1 (d2 / date-entity 
                  :month 3) 
            :ARG2 (e / exceed-01 
                  :ARG0 (d / date-entity 
                        :year 1000) 
                  :op-of (o / overnight 
                        :mod-of (a / account 
                              :prep-in-of (h / high 
                                    :degree (m2 / most)))) 
                  :op-of (1 / 18 
                        :quant-of (t / temporal-quantity 
                              :unit (m / month)))) 
            :op-of (n / new) 
            :time 50000) 
      :op2 (r / rate 
            :ARG0-of (h2 / have-org-role-91 
                  :ARG1 25000 
                  :ARG2 (o3 / official) 
                  :location (n2 / new))) 
      :source (f / fund 
            :op-of (o2 / or)))

# ::snt some of the councils who have set the poll tax budgets in relation to the governments community charge is far in excess of their estimation and you know its absolutely ridiculous
# ::tok some of the councils who have set the poll tax budgets in relation to the governments community charge is far in excess of their estimation and you know its absolutely ridiculous
# ::alignments 30-31|0.1.0.0.0 29-30|0.1.0.0.0.0.0.0.0 27-28|0.1.0 26-27|0.1.0.0 25-26|0.1 24-25|0 21-22|0.0 19-20|0.0.1 16-17|0.1.0.0.0.0.0.1.0 15-16|0.1.0.0.0.0.0.1.0.0+0.1.0.0.0.0.0.1.0.0.0 12-13|0.1.0.0.0.0.0.1 10-11|0.1.0.0.0.0.0 9-10|0.1.0.0.0.0 8-9|0.1.0.0.0.0.0.0 3-4|0.0.0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:54.682
# ::node	0	estimate-01	24-25
# ::node	0.0	exceed-01	21-22
# ::node	0.0.0	some	0-1
# ::node	0.0.0.0	council	3-4
# ::node	0.0.1	far	19-20
# ::node	0.1	and	25-26
# ::node	0.1.0	know-01	27-28
# ::node	0.1.0.0	you	26-27
# ::node	0.1.0.0.0	ridiculous	30-31
# ::node	0.1.0.0.0.0	tax-01	9-10
# ::node	0.1.0.0.0.0.0	budget	10-11
# ::node	0.1.0.0.0.0.0.0	poll-01	8-9
# ::node	0.1.0.0.0.0.0.0.0	absolute	29-30
# ::node	0.1.0.0.0.0.0.1	relate-01	12-13
# ::node	0.1.0.0.0.0.0.1.0	community	16-17
# ::node	0.1.0.0.0.0.0.1.0.0	govern-01	15-16
# ::node	0.1.0.0.0.0.0.1.0.0.0	government-organization	15-16
# ::root	0	estimate-01
(e / estimate-01 
      :ARG1-of (e2 / exceed-01 
            :ARG0 (s / some 
                  :quant-of (c2 / council)) 
            :manner (f / far)) 
      :op-of (a2 / and 
            :op1 (k / know-01 
                  :ARG0 (y / you 
                        :domain-of (r / ridiculous 
                              :ARG1-of (t / tax-01 
                                    :mod-of (b / budget 
                                          :ARG1-of (p / poll-01 
                                                :ARG0 (a / absolute)) 
                                          :topic (r2 / relate-01 
                                                :ARG2 (c / community 
                                                      :ARG1-of (g2 / govern-01 
                                                            :ARG0 (g / government-organization)))))))))))

# ::snt scientists have detected an excess of ozone in the lower atmosphere dash
# ::tok scientists have detected an excess of ozone in the lower atmosphere dash
# ::alignments 10-11|0.0.1.0 9-10|0.0.1 6-7|0.0.0 4-5|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T01:05:54.729
# ::node	0	scientist	0-1
# ::node	0.0	exceed-01	4-5
# ::node	0.0.0	ozone	6-7
# ::node	0.0.1	low	9-10
# ::node	0.0.1.0	atmosphere	10-11
# ::root	0	scientist
(s / scientist 
      :ARG0-of (e / exceed-01 
            :ARG1 (o / ozone) 
            :ARG2 (l / low 
                  :mod-of (a / atmosphere))))

