# ::snt the accident appeared to have little effect on the christmas party except to lengthen it considerably
# ::tok the accident appeared to have little effect on the christmas party except to lengthen it considerably
# ::alignments 15-16|0.0.3 14-15|0.0.2.0.0 11-12|0.0.2.0 10-11|0.0.2 6-7|0.0 5-6|0.0.1 2-3|0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:17.600
# ::node	0	appear-01	2-3
# ::node	0.0	effect-01	6-7
# ::node	0.0.0	accident	1-2
# ::node	0.0.1	little	5-6
# ::node	0.0.2	party	10-11
# ::node	0.0.2.0	except-00	11-12
# ::node	0.0.2.0.0	it	14-15
# ::node	0.0.3	considerable	15-16
# ::root	0	appear-01
# ::edge	appear-01	ARG1	effect-01	0	0.0	
# ::edge	considerable	domain	effect-01	0.0.3	0.0	
# ::edge	effect-01	ARG0	accident	0.0	0.0.0	
# ::edge	effect-01	ARG1	little	0.0	0.0.1	
# ::edge	effect-01	ARG2	party	0.0	0.0.2	
# ::edge	except-00	ARG0	party	0.0.2.0	0.0.2	
# ::edge	except-00	ARG1	it	0.0.2.0	0.0.2.0.0	
(a / appear-01 
      :ARG1 (e2 / effect-01 
            :ARG0 (a2 / accident) 
            :ARG1 (l / little) 
            :ARG2 (p / party 
                  :ARG0-of (e / except-00 
                        :ARG1 (i / it))) 
            :domain-of (c / considerable)))

# ::snt eighteen years ago she lost one of her six children in an accident on stratford road a tragedy which has become a pawn in the pitiless pointscoring of smalltown vindictiveness
# ::tok eighteen years ago she lost one of her six children in an accident on stratford road a tragedy which has become a pawn in the pitiless pointscoring of smalltown vindictiveness
# ::alignments 22-23|0 20-21|0.0 17-18|0.0.0 15-16|0.0.2.2.0 12-13|0.0.2.2 9-10|0.0.2.1 8-9|0.0.1 4-5|0.0.2 3-4|0.0.2.0 1-2|0.0.2.0.0.0+0.0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:18.584
# ::node	0	pawn	22-23
# ::node	0.0	become-01	20-21
# ::node	0.0.0	tragedy	17-18
# ::node	0.0.1	6	8-9
# ::node	0.0.2	lose-02	4-5
# ::node	0.0.2.0	she	3-4
# ::node	0.0.2.0.0	temporal-quantity	1-2
# ::node	0.0.2.0.0.0	year	1-2
# ::node	0.0.2.1	child	9-10
# ::node	0.0.2.2	accident	12-13
# ::node	0.0.2.2.0	road	15-16
# ::root	0	pawn
(p / pawn 
      :ARG2-of (b / become-01 
            :ARG0 (t / tragedy) 
            :ARG1 6 
            :ARG2-of (l / lose-02 
                  :ARG0 (s / she 
                        :poss-of (t2 / temporal-quantity 
                              :unit (y / year))) 
                  :ARG1 (c / child) 
                  :manner (a / accident 
                        :part-of (r / road)))))

# ::snt the accident occurred on the saturday of the annual popular flying association pfa rally at cranfield
# ::tok the accident occurred on the saturday of the annual popular flying association pfa rally at cranfield
# ::alignments 13-14|0 11-12|0.1.0.1 10-11|0.1.0 9-10|0.1 5-6|0.1.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:18.685
# ::node	0	rally-01	13-14
# ::node	0.0	accident	1-2
# ::node	0.1	popular-41	9-10
# ::node	0.1.0	fly-01	10-11
# ::node	0.1.0.0	saturday	5-6
# ::node	0.1.0.1	associate-01	11-12
# ::root	0	rally-01
# ::edge	associate-01	ARG1	fly-01	0.1.0.1	0.1.0	
# ::edge	fly-01	ARG1	saturday	0.1.0	0.1.0.0	
# ::edge	popular-41	ARG1	rally-01	0.1	0	
# ::edge	popular-41	ARG2	fly-01	0.1	0.1.0	
# ::edge	rally-01	ARG1	accident	0	0.0	
(r / rally-01 
      :ARG1 (a2 / accident) 
      :ARG1-of (p / popular-41 
            :ARG2 (f / fly-01 
                  :ARG1 (s / saturday) 
                  :ARG1-of (a / associate-01))))

# ::snt after meeting accident investigators he said the inquirys findings would be made public
# ::tok after meeting accident investigators he said the inquirys findings would be made public
# ::alignments 12-13|0.1.2.0.0 8-9|0.1.2+0.1.2.0 5-6|0 4-5|0.0 3-4|0.1.0+0.1 2-3|0.1.0.0 1-2|0.1.1 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:19.119
# ::node	0	say-01	5-6
# ::node	0.0	he	4-5
# ::node	0.1	person	3-4
# ::node	0.1.0	investigate-01	3-4
# ::node	0.1.0.0	accident	2-3
# ::node	0.1.1	meet-03	1-2
# ::node	0.1.2	find-01	8-9
# ::node	0.1.2.0	thing	8-9
# ::node	0.1.2.0.0	public	12-13
# ::node	0.2	after	0-1
# ::root	0	say-01
# ::edge	find-01	ARG1	thing	0.1.2	0.1.2.0	
# ::edge	find-01	ARG2	person	0.1.2	0.1	
# ::edge	investigate-01	ARG0	person	0.1.0	0.1	
# ::edge	investigate-01	ARG1	accident	0.1.0	0.1.0.0	
# ::edge	meet-03	ARG0	person	0.1.1	0.1	
# ::edge	public	domain	thing	0.1.2.0.0	0.1.2.0	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG2	person	0	0.1	
# ::edge	say-01	time	after	0	0.2	
(s / say-01 
      :ARG0 (h / he) 
      :ARG2 (p2 / person 
            :ARG0-of (i / investigate-01 
                  :ARG1 (a / accident)) 
            :ARG0-of (m / meet-03) 
            :ARG2-of (f / find-01 
                  :ARG1 (t / thing 
                        :domain-of (p / public)))) 
      :time (a2 / after))

# ::snt balestre had no hesitation in blaming senna for the accident adding that he had broken the rules by rejoining in the way he did
# ::tok balestre had no hesitation in blaming senna for the accident adding that he had broken the rules by rejoining in the way he did
# ::alignments 22-23|0.0.1.0.0.1.0 21-22|0.0.1.0.0.0 16-17|0 14-15|0.0 12-13|0.0.0 10-11|0.0.1 9-10|0.0.1.0 5-6|0.0.1.0.0 3-4|0.0.1.0.0.1 2-3|0.0.1.0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:19.697
# ::node	0	rule	16-17
# ::node	0.0	break-01	14-15
# ::node	0.0.0	he	12-13
# ::node	0.0.1	add-02	10-11
# ::node	0.0.1.0	accident	9-10
# ::node	0.0.1.0.0	blame-01	5-6
# ::node	0.0.1.0.0.0	way	21-22
# ::node	0.0.1.0.0.1	hesitate-01	3-4
# ::node	0.0.1.0.0.1.0	he	22-23
# ::node	0.0.1.0.0.1.1	-	2-3
# ::root	0	rule
(r / rule 
      :ARG1-of (b / break-01 
            :ARG0 (h2 / he) 
            :ARG1-of (a / add-02 
                  :ARG0 (a2 / accident 
                        :ARG2-of (b2 / blame-01 
                              :ARG0 (w / way) 
                              :ARG1-of (h3 / hesitate-01 
                                    :ARG0 (h / he) 
                                    :polarity (- / -)))))))

# ::snt the accident caused no injuries and no radioactivity was released
# ::tok the accident caused no injuries and no radioactivity was released
# ::alignments 9-10|0.1.0.0 7-8|0.1.1 6-7|0.1.1.0 5-6|0.1 4-5|0.1.0 3-4|0.1.0.1 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:19.883
# ::node	0	cause-01	2-3
# ::node	0.0	accident	1-2
# ::node	0.1	and	5-6
# ::node	0.1.0	injure-01	4-5
# ::node	0.1.0.0	release-01	9-10
# ::node	0.1.0.1	-	3-4
# ::node	0.1.1	radioactivity	7-8
# ::node	0.1.1.0	-	6-7
# ::root	0	cause-01
# ::edge	and	op1	injure-01	0.1	0.1.0	
# ::edge	and	op2	radioactivity	0.1	0.1.1	
# ::edge	cause-01	ARG0	accident	0	0.0	
# ::edge	cause-01	ARG1	and	0	0.1	
# ::edge	injure-01	polarity	-	0.1.0	0.1.0.1	
# ::edge	radioactivity	polarity	-	0.1.1	0.1.1.0	
# ::edge	release-01	ARG1	injure-01	0.1.0.0	0.1.0	
(c / cause-01 
      :ARG0 (a2 / accident) 
      :ARG1 (a / and 
            :op1 (i / injure-01 
                  :ARG1-of (r / release-01) 
                  :polarity (-2 / -)) 
            :op2 (r2 / radioactivity 
                  :polarity (- / -))))

# ::snt more than 250000 people have to go to hospital each year because of accidents in the kitchen
# ::tok more than 250000 people have to go to hospital each year because of accidents in the kitchen
# ::alignments 13-14|0.0 11-12|0 10-11|0.1 9-10|0.1.0 8-9|0.1.0.0 2-3|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:20.014
# ::node	0	cause-01	11-12
# ::node	0.0	accident	13-14
# ::node	0.1	year	10-11
# ::node	0.1.0	each	9-10
# ::node	0.1.0.0	hospital	8-9
# ::node	0.2	250000	2-3
# ::root	0	cause-01
# ::edge	250000	op1	cause-01	0.2	0	
# ::edge	cause-01	ARG0	accident	0	0.0	
# ::edge	cause-01	ARG1	year	0	0.1	
# ::edge	hospital	op1	each	0.1.0.0	0.1.0	
# ::edge	year	mod	each	0.1	0.1.0	
(c / cause-01 
      :ARG0 (a / accident) 
      :ARG1 (y / year 
            :mod (e / each 
                  :op-of (h / hospital))) 
      :op-of 250000)

# ::snt also on the a thirty four at great rollright near chipping norton theres been a serious accident there and there are tailbacks beginning to grow in both directions
# ::tok also on the a thirty four at great rollright near chipping norton theres been a serious accident there and there are tailbacks beginning to grow in both directions
# ::alignments 27-28|0.1.1.0 26-27|0.1.1.0.0 24-25|0.1.1 22-23|0.1 18-19|0 16-17|0.0 15-16|0.0.0 9-10|0.1.2 7-8|0.1.1.2 5-6|0.1.1.1 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:20.369
# ::node	0	and	18-19
# ::node	0.0	accident	16-17
# ::node	0.0.0	serious	15-16
# ::node	0.1	begin-01	22-23
# ::node	0.1.0	also	0-1
# ::node	0.1.1	grow-01	24-25
# ::node	0.1.1.0	direction	27-28
# ::node	0.1.1.0.0	both	26-27
# ::node	0.1.1.1	4	5-6
# ::node	0.1.1.2	great	7-8
# ::node	0.1.2	near	9-10
# ::root	0	and
# ::edge	4	op1	grow-01	0.1.1.1	0.1.1	
# ::edge	accident	mod	serious	0.0	0.0.0	
# ::edge	and	op1	accident	0	0.0	
# ::edge	and	op2	begin-01	0	0.1	
# ::edge	begin-01	ARG0	also	0.1	0.1.0	
# ::edge	begin-01	ARG1	grow-01	0.1	0.1.1	
# ::edge	direction	mod	both	0.1.1.0	0.1.1.0.0	
# ::edge	great	op1	grow-01	0.1.1.2	0.1.1	
# ::edge	grow-01	ARG1	direction	0.1.1	0.1.1.0	
# ::edge	near	op1	begin-01	0.1.2	0.1	
(a / and 
      :op1 (a2 / accident 
            :mod (s / serious)) 
      :op2 (b2 / begin-01 
            :ARG0 (a3 / also) 
            :ARG1 (g / grow-01 
                  :ARG1 (d / direction 
                        :mod (b / both)) 
                  :op-of 4 
                  :op-of (g2 / great)) 
            :op-of (n / near)))

# ::snt in construing the contract the expression perils or danger and accidents of the sea described a proximate cause of loss which could arise with or without negligence
# ::tok in construing the contract the expression perils or danger and accidents of the sea described a proximate cause of loss which could arise with or without negligence
# ::alignments 26-27|0.1.0.0 24-25|0.1.0 22-23|0.1 21-22|0.1.1 17-18|0 14-15|0.0 13-14|0.0.0 10-11|0.0.1.2.1 9-10|0.0.1.2 8-9|0.0.1.1 7-8|0.0.1 5-6|0.0.1.2.0 3-4|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:20.547
# ::node	0	cause-01	17-18
# ::node	0.0	describe-01	14-15
# ::node	0.0.0	sea	13-14
# ::node	0.0.1	or	7-8
# ::node	0.0.1.0	contract-02	3-4
# ::node	0.0.1.1	danger	8-9
# ::node	0.0.1.2	and	9-10
# ::node	0.0.1.2.0	express-01	5-6
# ::node	0.0.1.2.1	accident	10-11
# ::node	0.1	arise-01	22-23
# ::node	0.1.0	or	24-25
# ::node	0.1.0.0	neglect-01	26-27
# ::node	0.1.1	possible	21-22
# ::root	0	cause-01
(c / cause-01 
      :ARG1-of (d / describe-01 
            :ARG0 (s / sea) 
            :manner (o2 / or 
                  :op1 (c2 / contract-02) 
                  :op2 (d2 / danger) 
                  :op3 (a3 / and 
                        :ARG1-of (e / express-01) 
                        :op1 (a2 / accident)))) 
      :ARG1-of (a / arise-01 
            :ARG0 (o / or 
                  :op1 (n / neglect-01)) 
            :domain-of (p / possible)))

# ::snt the cessna 310 used by flyer magazine was written off in an accident on landing in december, we all read accident reports
# ::tok the cessna 310 used by flyer magazine was written off in an accident on landing in december , we all read accident reports
# ::alignments 22-23|0 21-22|0.0 20-21|0.1 19-20|0.1.0.0 18-19|0.1.0 16-17|0.1.1.1.0+0.1.1.1 14-15|0.1.1 12-13|0.1.1.0.1 9-10|0.1.1.0.0 8-9|0.1.1.0 6-7|0.1.1.0.1.0.0 3-4|0.1.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:20.648
# ::node	0	report-01	22-23
# ::node	0.0	accident	21-22
# ::node	0.1	read-01	20-21
# ::node	0.1.0	we	18-19
# ::node	0.1.0.0	all	19-20
# ::node	0.1.1	land-01	14-15
# ::node	0.1.1.0	write-01	8-9
# ::node	0.1.1.0.0	off	9-10
# ::node	0.1.1.0.1	accident	12-13
# ::node	0.1.1.0.1.0	use-01	3-4
# ::node	0.1.1.0.1.0.0	magazine	6-7
# ::node	0.1.1.1	date-entity	16-17
# ::node	0.1.1.1.0	12	16-17
# ::root	0	report-01
# ::edge	date-entity	month	12	0.1.1.1	0.1.1.1.0	
# ::edge	land-01	ARG1	read-01	0.1.1	0.1	
# ::edge	land-01	time	date-entity	0.1.1	0.1.1.1	
# ::edge	read-01	ARG0	we	0.1	0.1.0	
# ::edge	read-01	ARG1	report-01	0.1	0	
# ::edge	report-01	ARG0	accident	0	0.0	
# ::edge	use-01	ARG2	magazine	0.1.1.0.1.0	0.1.1.0.1.0.0	
# ::edge	use-01	location	accident	0.1.1.0.1.0	0.1.1.0.1	
# ::edge	we	quant	all	0.1.0	0.1.0.0	
# ::edge	write-01	direction	off	0.1.1.0	0.1.1.0.0	
# ::edge	write-01	manner	land-01	0.1.1.0	0.1.1	
# ::edge	write-01	medium	accident	0.1.1.0	0.1.1.0.1	
(r / report-01 
      :ARG0 (a / accident) 
      :ARG1-of (r2 / read-01 
            :ARG0 (w / we 
                  :quant (a2 / all)) 
            :ARG1-of (l / land-01 
                  :manner-of (w2 / write-01 
                        :direction (o / off) 
                        :medium (a3 / accident 
                              :location-of (u / use-01 
                                    :ARG2 (m / magazine)))) 
                  :time (d / date-entity 
                        :month 12))))

# ::snt it had been in an accident and it was worthless
# ::tok it had been in an accident and it was worthless
# ::alignments 9-10|0.1 7-8|0.1.0 6-7|0 5-6|0.0 0-1|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:20.670
# ::node	0	and	6-7
# ::node	0.0	accident	5-6
# ::node	0.1	worth	9-10
# ::node	0.1.0	it	7-8
# ::node	0.1.1	it	0-1
# ::root	0	and
# ::edge	and	op1	accident	0	0.0	
# ::edge	and	op2	worth	0	0.1	
# ::edge	worth	domain	it	0.1	0.1.0	
# ::edge	worth	domain	it	0.1	0.1.1	
(a / and 
      :op1 (a2 / accident) 
      :op2 (w / worth 
            :domain (i / it) 
            :domain (i2 / it)))

# ::snt my daughter is responsible at night for more than 100 patients including organ transplants accident and open access from renal patients
# ::tok my daughter is responsible at night for more than 100 patients including organ transplants accident and open access from renal patients
# ::alignments 20-21|0.1.0.0+0.1.0 17-18|0.2 15-16|0 14-15|0.1 12-13|0.0.0.0 10-11|0.1.1.0+0.1.1 9-10|0.2.0 5-6|0.0.1 3-4|0.0 1-2|0.0.0.1+0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:20.798
# ::node	0	and	15-16
# ::node	0.0	responsible-41	3-4
# ::node	0.0.0	have-rel-role-91	1-2
# ::node	0.0.0.0	organ	12-13
# ::node	0.0.0.1	daughter	1-2
# ::node	0.0.1	night	5-6
# ::node	0.1	accident	14-15
# ::node	0.1.0	have-rel-role-91	20-21
# ::node	0.1.0.0	patient	20-21
# ::node	0.1.1	have-rel-role-91	10-11
# ::node	0.1.1.0	patient	10-11
# ::node	0.2	access-01	17-18
# ::node	0.2.0	100	9-10
# ::root	0	and
# ::edge	access-01	ARG1	100	0.2	0.2.0	
# ::edge	and	op1	responsible-41	0	0.0	
# ::edge	and	op2	accident	0	0.1	
# ::edge	and	op3	access-01	0	0.2	
# ::edge	have-rel-role-91	ARG1	accident	0.1.0	0.1	
# ::edge	have-rel-role-91	ARG1	accident	0.1.1	0.1	
# ::edge	have-rel-role-91	ARG1	organ	0.0.0	0.0.0.0	
# ::edge	have-rel-role-91	ARG2	daughter	0.0.0	0.0.0.1	
# ::edge	have-rel-role-91	ARG2	patient	0.1.0	0.1.0.0	
# ::edge	have-rel-role-91	ARG2	patient	0.1.1	0.1.1.0	
# ::edge	responsible-41	ARG1	have-rel-role-91	0.0	0.0.0	
# ::edge	responsible-41	ARG2	night	0.0	0.0.1	
(a2 / and 
      :op1 (r / responsible-41 
            :ARG1 (h3 / have-rel-role-91 
                  :ARG1 (o / organ) 
                  :ARG2 (d / daughter)) 
            :ARG2 (n / night)) 
      :op2 (a3 / accident 
            :ARG1-of (h / have-rel-role-91 
                  :ARG2 (p / patient)) 
            :ARG1-of (h2 / have-rel-role-91 
                  :ARG2 (p2 / patient))) 
      :op3 (a / access-01 
            :ARG1 100))

# ::snt at the same time local talks to restart some sort of accident and emergency service appear to be getting nowhere
# ::tok at the same time local talks to restart some sort of accident and emergency service appear to be getting nowhere
# ::alignments 19-20|0.2.1 15-16|0.2 13-14|0.1 12-13|0 11-12|0.0 9-10|0.2.0 8-9|0.2.0.1 7-8|0.2.0.0 5-6|0.2.0.0.1 4-5|0.2.0.0.1.0 3-4|0.2.0.0.0 2-3|0.2.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:21.329
# ::node	0	and	12-13
# ::node	0.0	accident	11-12
# ::node	0.1	emergency	13-14
# ::node	0.2	appear-02	15-16
# ::node	0.2.0	sort	9-10
# ::node	0.2.0.0	restart-01	7-8
# ::node	0.2.0.0.0	time	3-4
# ::node	0.2.0.0.0.0	same-41	2-3
# ::node	0.2.0.0.1	talk-01	5-6
# ::node	0.2.0.0.1.0	local	4-5
# ::node	0.2.0.1	some	8-9
# ::node	0.2.1	nowhere	19-20
# ::root	0	and
# ::edge	and	op1	accident	0	0.0	
# ::edge	and	op2	emergency	0	0.1	
# ::edge	and	op3	appear-02	0	0.2	
# ::edge	appear-02	ARG0	sort	0.2	0.2.0	
# ::edge	appear-02	ARG1	nowhere	0.2	0.2.1	
# ::edge	restart-01	ARG0	time	0.2.0.0	0.2.0.0.0	
# ::edge	restart-01	ARG1	sort	0.2.0.0	0.2.0	
# ::edge	same-41	ARG1	time	0.2.0.0.0.0	0.2.0.0.0	
# ::edge	sort	mod	some	0.2.0	0.2.0.1	
# ::edge	talk-01	ARG1	restart-01	0.2.0.0.1	0.2.0.0	
# ::edge	talk-01	mod	local	0.2.0.0.1	0.2.0.0.1.0	
(a2 / and 
      :op1 (a3 / accident) 
      :op2 (e / emergency) 
      :op3 (a / appear-02 
            :ARG0 (s / sort 
                  :ARG1-of (r / restart-01 
                        :ARG0 (t2 / time 
                              :ARG1-of (s3 / same-41)) 
                        :ARG1-of (t / talk-01 
                              :mod (l / local))) 
                  :mod (s2 / some)) 
            :ARG1 (n / nowhere)))

# ::snt the appeal courts decision will surprise all except those familiar with the laws which govern compensation for air accidents and disasters
# ::tok the appeal courts decision will surprise all except those familiar with the laws which govern compensation for air accidents and disasters
# ::alignments 20-21|0.1 19-20|0 18-19|0.0.0 17-18|0.0.0.0 15-16|0.0 12-13|0.0.2.0 9-10|0.0.2 7-8|0.0.1 6-7|0.0.1.1 5-6|0.0.1.0 3-4|0.0.1.0.0 2-3|0.0.1.0.0.0 1-2|0.0.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:21.788
# ::node	0	and	19-20
# ::node	0.0	compensate-01	15-16
# ::node	0.0.0	accident	18-19
# ::node	0.0.0.0	air	17-18
# ::node	0.0.1	except-00	7-8
# ::node	0.0.1.0	surprise-01	5-6
# ::node	0.0.1.0.0	decide-01	3-4
# ::node	0.0.1.0.0.0	court	2-3
# ::node	0.0.1.0.0.0.0	appeal-02	1-2
# ::node	0.0.1.1	all	6-7
# ::node	0.0.2	familiarize-01	9-10
# ::node	0.0.2.0	law	12-13
# ::node	0.1	disaster	20-21
# ::root	0	and
# ::edge	accident	mod	air	0.0.0	0.0.0.0	
# ::edge	and	op1	compensate-01	0	0.0	
# ::edge	and	op2	disaster	0	0.1	
# ::edge	compensate-01	ARG1	accident	0.0	0.0.0	
# ::edge	court	mod	appeal-02	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	decide-01	ARG0	court	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	except-00	ARG1	compensate-01	0.0.1	0.0	
# ::edge	except-00	ARG2	all	0.0.1	0.0.1.1	
# ::edge	familiarize-01	ARG1	law	0.0.2	0.0.2.0	
# ::edge	familiarize-01	ARG2	compensate-01	0.0.2	0.0	
# ::edge	surprise-01	ARG0	decide-01	0.0.1.0	0.0.1.0.0	
# ::edge	surprise-01	ARG1	except-00	0.0.1.0	0.0.1	
(a / and 
      :op1 (c / compensate-01 
            :ARG1 (a2 / accident 
                  :mod (a3 / air)) 
            :ARG1-of (e / except-00 
                  :ARG1-of (s / surprise-01 
                        :ARG0 (d2 / decide-01 
                              :ARG0 (c2 / court 
                                    :mod (a5 / appeal-02)))) 
                  :ARG2 (a4 / all)) 
            :ARG2-of (f / familiarize-01 
                  :ARG1 (l / law))) 
      :op2 (d / disaster))

# ::snt the doctors suggest a strategy to combine the promotion of helmets with moves to reduce alcoholism and therefore drinkrelated accidents
# ::tok the doctors suggest a strategy to combine the promotion of helmets with moves to reduce alcoholism and therefore drinkrelated accidents
# ::alignments 19-20|0.1.1 16-17|0.1 15-16|0.1.0.0 14-15|0.1.0 12-13|0.1.2 8-9|0.2.1 6-7|0.2 4-5|0.2.0 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:21.980
# ::node	0	suggest-01	2-3
# ::node	0.0	doctor	1-2
# ::node	0.1	and	16-17
# ::node	0.1.0	reduce-01	14-15
# ::node	0.1.0.0	alcoholism	15-16
# ::node	0.1.1	accident	19-20
# ::node	0.1.2	move-02	12-13
# ::node	0.2	combine-01	6-7
# ::node	0.2.0	strategy	4-5
# ::node	0.2.1	promote-02	8-9
# ::root	0	suggest-01
# ::edge	and	op1	reduce-01	0.1	0.1.0	
# ::edge	and	op2	accident	0.1	0.1.1	
# ::edge	combine-01	ARG0	strategy	0.2	0.2.0	
# ::edge	combine-01	ARG1	promote-02	0.2	0.2.1	
# ::edge	move-02	purpose	and	0.1.2	0.1	
# ::edge	reduce-01	ARG1	alcoholism	0.1.0	0.1.0.0	
# ::edge	suggest-01	ARG0	doctor	0	0.0	
# ::edge	suggest-01	ARG1	and	0	0.1	
# ::edge	suggest-01	ARG2	combine-01	0	0.2	
(s2 / suggest-01 
      :ARG0 (d / doctor) 
      :ARG1 (a2 / and 
            :op1 (r / reduce-01 
                  :ARG1 (a3 / alcoholism)) 
            :op2 (a / accident) 
            :purpose-of (m / move-02)) 
      :ARG2 (c / combine-01 
            :ARG0 (s / strategy) 
            :ARG1 (p / promote-02)))

# ::snt so far there have been no serious incidents as a result of lights that have been out of action but there is a typo badpossiblitygoodpossibility of accidents occurring
# ::tok so far there have been no serious incidents as a result of lights that have been out of action but there is a typo badpossiblitygoodpossibility of accidents occurring
# ::alignments 26-27|0.2.0 19-20|0 18-19|0.1 12-13|0.2.1 10-11|0.2 7-8|0.2.2 6-7|0.2.2.0 5-6|0.2.2.1 1-2|0.0.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:22.072
# ::node	0	contrast-01	19-20
# ::node	0.0	so	0-1
# ::node	0.0.0	far	1-2
# ::node	0.1	action	18-19
# ::node	0.2	result-01	10-11
# ::node	0.2.0	accident	26-27
# ::node	0.2.1	light	12-13
# ::node	0.2.2	incident	7-8
# ::node	0.2.2.0	serious	6-7
# ::node	0.2.2.1	-	5-6
# ::root	0	contrast-01
# ::edge	contrast-01	ARG0	so	0	0.0	
# ::edge	contrast-01	ARG1	action	0	0.1	
# ::edge	far	degree	so	0.0.0	0.0	
# ::edge	incident	mod	result-01	0.2.2	0.2	
# ::edge	incident	mod	serious	0.2.2	0.2.2.0	
# ::edge	incident	polarity	-	0.2.2	0.2.2.1	
# ::edge	result-01	ARG0	accident	0.2	0.2.0	
# ::edge	result-01	ARG1	light	0.2	0.2.1	
# ::edge	result-01	topic	contrast-01	0.2	0	
(c / contrast-01 
      :ARG0 (s2 / so 
            :degree-of (f / far)) 
      :ARG1 (a2 / action) 
      :topic-of (r / result-01 
            :ARG0 (a / accident) 
            :ARG1 (l / light) 
            :mod-of (i / incident 
                  :mod (s / serious) 
                  :polarity (- / -))))

# ::snt however it will be met with anger by eurotunnels critics who argue that the risk to the public will be increased in the event of accidents or fires inside the tunnel
# ::tok however it will be met with anger by eurotunnels critics who argue that the risk to the public will be increased in the event of accidents or fires inside the tunnel
# ::alignments 30-31|0.0.1.0.1 28-29|0.0.1.0.1.0 27-28|0 26-27|0.0 25-26|0.0.1 23-24|0.0.1.0.0.0.1 20-21|0.0.1.0.0.0 17-18|0.0.1.0 14-15|0.0.1.0.0 11-12|0.0.1.0.0.0.0 9-10|0.0.1.0.0.0.0.0 6-7|0.0.0.0.0 4-5|0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:22.476
# ::node	0	fire	27-28
# ::node	0.0	or	26-27
# ::node	0.0.0	meet-03	4-5
# ::node	0.0.0.0	it	1-2
# ::node	0.0.0.0.0	anger-01	6-7
# ::node	0.0.1	accident	25-26
# ::node	0.0.1.0	public	17-18
# ::node	0.0.1.0.0	risk-01	14-15
# ::node	0.0.1.0.0.0	increase-01	20-21
# ::node	0.0.1.0.0.0.0	argue-01	11-12
# ::node	0.0.1.0.0.0.0.0	critic	9-10
# ::node	0.0.1.0.0.0.1	event	23-24
# ::node	0.0.1.0.1	tunnel	30-31
# ::node	0.0.1.0.1.0	inside	28-29
# ::root	0	fire
(f / fire 
      :op-of (o / or 
            :ARG0-of (m / meet-03 
                  :ARG1 (i3 / it 
                        :ARG0-of (a3 / anger-01))) 
            :op1 (a / accident 
                  :poss (p / public 
                        :ARG0-of (r / risk-01 
                              :ARG1-of (i2 / increase-01 
                                    :ARG1-of (a2 / argue-01 
                                          :ARG0 (c / critic)) 
                                    :time (e / event))) 
                        :poss-of (t / tunnel 
                              :op-of (i / inside))))))

# ::snt and if theres one thing hes not its cheap    unhurt from a heavy accident while testing tyres at estoril last week
# ::tok and if theres one thing hes not its cheap unhurt from a heavy accident while testing tyres at estoril last week
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:22.477
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt we know that all of us will eventually die from disease natural disaster accidents or whatever
# ::tok we know that all of us will eventually die from disease natural disaster accidents or whatever
# ::alignments 15-16|0.1.1 14-15|0.1 13-14|0.1.0.0 12-13|0.1.0.0.0 11-12|0.1.0.0.2 10-11|0.1.0.0.1 8-9|0.1.0 7-8|0.1.0.2 3-4|0.1.0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:22.549
# ::node	0	know-01	1-2
# ::node	0.0	we	0-1
# ::node	0.1	or	14-15
# ::node	0.1.0	die-01	8-9
# ::node	0.1.0.0	accident	13-14
# ::node	0.1.0.0.0	disaster	12-13
# ::node	0.1.0.0.1	disease	10-11
# ::node	0.1.0.0.2	natural	11-12
# ::node	0.1.0.1	all	3-4
# ::node	0.1.0.2	eventual	7-8
# ::node	0.1.1	whatever	15-16
# ::root	0	know-01
# ::edge	accident	mod	disaster	0.1.0.0	0.1.0.0.0	
# ::edge	accident	mod	disease	0.1.0.0	0.1.0.0.1	
# ::edge	accident	mod	natural	0.1.0.0	0.1.0.0.2	
# ::edge	die-01	ARG1	accident	0.1.0	0.1.0.0	
# ::edge	die-01	mod	all	0.1.0	0.1.0.1	
# ::edge	die-01	time	eventual	0.1.0	0.1.0.2	
# ::edge	know-01	ARG0	we	0	0.0	
# ::edge	know-01	ARG1	or	0	0.1	
# ::edge	or	op1	die-01	0.1	0.1.0	
# ::edge	or	op2	whatever	0.1	0.1.1	
(k / know-01 
      :ARG0 (w2 / we) 
      :ARG1 (o / or 
            :op1 (d3 / die-01 
                  :ARG1 (a / accident 
                        :mod (d / disaster) 
                        :mod (d2 / disease) 
                        :mod (n / natural)) 
                  :mod (a2 / all) 
                  :time (e / eventual)) 
            :op2 (w / whatever)))

# ::snt all the legislation in the world couldnt have coped with an accident of such violence
# ::tok all the legislation in the world couldnt have coped with an accident of such violence
# ::alignments 14-15|0.0.0.0 13-14|0.0.0.0.0 11-12|0.0.0.0.1 5-6|0.0.0 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:22.576
# ::node	0	legislation	2-3
# ::node	0.0	all	0-1
# ::node	0.0.0	world	5-6
# ::node	0.0.0.0	violence	14-15
# ::node	0.0.0.0.0	such	13-14
# ::node	0.0.0.0.1	accident	11-12
# ::root	0	legislation
# ::edge	accident	mod	violence	0.0.0.0.1	0.0.0.0	
# ::edge	all	prep-in	world	0.0	0.0.0	
# ::edge	legislation	quant	all	0	0.0	
# ::edge	violence	mod	such	0.0.0.0	0.0.0.0.0	
# ::edge	violence	mod	world	0.0.0.0	0.0.0	
(l / legislation 
      :quant (a2 / all 
            :prep-in (w / world 
                  :mod-of (v / violence 
                        :mod (s / such) 
                        :mod-of (a / accident)))))

# ::snt sometimes of course he did not make it and the accident in portugal aside mansells mistake when he reversed in the pits was an uncharacteristic blow in an otherwise excellent year
# ::tok sometimes of course he did not make it and the accident in portugal aside mansells mistake when he reversed in the pits was an uncharacteristic blow in an otherwise excellent year
# ::alignments 30-31|0.1 29-30|0 28-29|0.0 25-26|0.1.0 18-19|0.1.0.1 17-18|0.1.0.1.0 15-16|0.1.0.1.1 13-14|0.1.0.1.1.2 10-11|0.1.0.1.1.0 8-9|0.1.0.1.1.3 7-8|0.1.0.1.1.3.0 3-4|0.1.0.1.1.1 0-1|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:22.841
# ::node	0	excellent	29-30
# ::node	0.0	otherwise	28-29
# ::node	0.1	year	30-31
# ::node	0.1.0	blow-06	25-26
# ::node	0.1.0.0	sometimes	0-1
# ::node	0.1.0.1	reverse-01	18-19
# ::node	0.1.0.1.0	he	17-18
# ::node	0.1.0.1.1	mistake-01	15-16
# ::node	0.1.0.1.1.0	accident	10-11
# ::node	0.1.0.1.1.1	he	3-4
# ::node	0.1.0.1.1.2	aside	13-14
# ::node	0.1.0.1.1.3	and	8-9
# ::node	0.1.0.1.1.3.0	it	7-8
# ::root	0	excellent
# ::edge	and	op1	mistake-01	0.1.0.1.1.3	0.1.0.1.1	
# ::edge	blow-06	ARG1	sometimes	0.1.0	0.1.0.0	
# ::edge	blow-06	time	year	0.1.0	0.1	
# ::edge	excellent	mod	otherwise	0	0.0	
# ::edge	it	topic	and	0.1.0.1.1.3.0	0.1.0.1.1.3	
# ::edge	mistake-01	ARG0	accident	0.1.0.1.1	0.1.0.1.1.0	
# ::edge	mistake-01	ARG1	he	0.1.0.1.1	0.1.0.1.1.1	
# ::edge	mistake-01	manner	aside	0.1.0.1.1	0.1.0.1.1.2	
# ::edge	reverse-01	ARG0	he	0.1.0.1	0.1.0.1.0	
# ::edge	reverse-01	ARG1	blow-06	0.1.0.1	0.1.0	
# ::edge	reverse-01	time	mistake-01	0.1.0.1	0.1.0.1.1	
# ::edge	year	mod	excellent	0.1	0	
(e / excellent 
      :mod (o / otherwise) 
      :mod-of (y / year 
            :time-of (b / blow-06 
                  :ARG1 (s / sometimes) 
                  :ARG1-of (r / reverse-01 
                        :ARG0 (h / he) 
                        :time (m / mistake-01 
                              :ARG0 (a2 / accident) 
                              :ARG1 (h2 / he) 
                              :manner (a / aside) 
                              :op-of (a3 / and 
                                    :topic-of (i / it)))))))

# ::snt however you could avoid these situations happening to you should you have an accident ellip, if you join the midland personal accident plan now, why do i need the midland personal accident plan because none of us know when a permanently disabling accident may strike it makes good sense to protect against the possible effects
# ::tok however you could avoid these situations happening to you should you have an accident ellip , if you join the midland personal accident plan now , why do i need the midland personal accident plan because none of us know when a permanently disabling accident may strike it makes good sense to protect against the possible effects
# ::alignments 56-57|0.0 55-56|0 52-53|0.0.0 50-51|0.0.0.0 49-50|0.0.0.0.1 47-48|0.0.0.0.0.3 46-47|0.0.0.0.0 45-46|0.0.0.0.0.2.0+0.0.0.0.0.2 44-45|0.0.0.0.0.0 43-44|0.0.0.0.0.0.0 42-43|0.0.0.0.0.0.0.0 39-40|0.0.0.0.0.1 36-37|0.0.0.0.0.1.2 35-36|0.0.0.0.0.1.1 34-35|0.0.0.0.0.1.1.0.1 33-34|0.0.0.0.0.1.1.0.1.0 32-33|0.0.0.0.0.1.1.0.1.0.0 29-30|0.0.0.0.0.1.1.0 28-29|0.0.0.0.0.1.1.0.0 24-25|0.0.0.0.0.1.0.0.0.2 23-24|0.0.0.0.0.1.0.0.0 22-23|0.0.0.0.0.1.0.0.0.1 21-22|0.0.0.0.0.1.0.0.0.1.0 18-19|0.0.0.0.0.1.0.0 17-18|0.0.0.0.0.1.0 13-14|0.0.0.0.0.1.0.0.0.0.0.0.0.0 10-11|0.0.0.0.0.1.0.0.0.0 9-10|0.0.0.0.0.1.0.0.0.0.0.0.0 8-9|0.0.0.0.0.1.0.0.0.0.0.0 6-7|0.0.0.0.0.1.0.0.0.0.0 5-6|0.0.0.0.0.1.0.0.0.0.0.1.1 3-4|0.0.0.0.0.1.0.0.0.0.0.1 2-3|0.0.0.0.0.1.0.0.0.0.0.1.2 1-2|0.0.0.0.0.1.0.0.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:26.720
# ::node	0	possible	55-56
# ::node	0.0	effect-01	56-57
# ::node	0.0.0	protect-01	52-53
# ::node	0.0.0.0	sense	50-51
# ::node	0.0.0.0.0	strike-01	46-47
# ::node	0.0.0.0.0.0	accident	44-45
# ::node	0.0.0.0.0.0.0	disable-01	43-44
# ::node	0.0.0.0.0.0.0.0	permanent	42-43
# ::node	0.0.0.0.0.1	know-01	39-40
# ::node	0.0.0.0.0.1.0	you	17-18
# ::node	0.0.0.0.0.1.0.0	join-01	18-19
# ::node	0.0.0.0.0.1.0.0.0	plan-01	23-24
# ::node	0.0.0.0.0.1.0.0.0.0	you	10-11
# ::node	0.0.0.0.0.1.0.0.0.0.0	happen-01	6-7
# ::node	0.0.0.0.0.1.0.0.0.0.0.0	you	8-9
# ::node	0.0.0.0.0.1.0.0.0.0.0.0.0	recommend-01	9-10
# ::node	0.0.0.0.0.1.0.0.0.0.0.0.0.0	accident	13-14
# ::node	0.0.0.0.0.1.0.0.0.0.0.1	avoid-01	3-4
# ::node	0.0.0.0.0.1.0.0.0.0.0.1.0	you	1-2
# ::node	0.0.0.0.0.1.0.0.0.0.0.1.1	situation	5-6
# ::node	0.0.0.0.0.1.0.0.0.0.0.1.2	possible	2-3
# ::node	0.0.0.0.0.1.0.0.0.1	accident	22-23
# ::node	0.0.0.0.0.1.0.0.0.1.0	personal	21-22
# ::node	0.0.0.0.0.1.0.0.0.2	now	24-25
# ::node	0.0.0.0.0.1.1	cause-01	35-36
# ::node	0.0.0.0.0.1.1.0	need-01	29-30
# ::node	0.0.0.0.0.1.1.0.0	i	28-29
# ::node	0.0.0.0.0.1.1.0.1	plan-01	34-35
# ::node	0.0.0.0.0.1.1.0.1.0	accident	33-34
# ::node	0.0.0.0.0.1.1.0.1.0.0	personal	32-33
# ::node	0.0.0.0.0.1.2	none	36-37
# ::node	0.0.0.0.0.2	date-entity	45-46
# ::node	0.0.0.0.0.2.0	5	45-46
# ::node	0.0.0.0.0.3	it	47-48
# ::node	0.0.0.0.1	good	49-50
# ::root	0	possible
(p / possible 
      :mod-of (e / effect-01 
            :ARG1-of (p2 / protect-01 
                  :ARG0 (s / sense 
                        :ARG1-of (s2 / strike-01 
                              :ARG0 (a / accident 
                                    :ARG1-of (d2 / disable-01 
                                          :ARG0 (p3 / permanent))) 
                              :condition-of (k / know-01 
                                    :ARG0 (y / you 
                                          :ARG0-of (j / join-01 
                                                :ARG1 (p6 / plan-01 
                                                      :ARG0 (y2 / you 
                                                            :ARG2-of (h / happen-01 
                                                                  :ARG1 (y3 / you 
                                                                        :ARG2-of (r / recommend-01 
                                                                              :ARG1 (a4 / accident))) 
                                                                  :ARG2-of (a5 / avoid-01 
                                                                        :ARG0 (y4 / you) 
                                                                        :ARG1 (s3 / situation) 
                                                                        :domain-of (p8 / possible)))) 
                                                      :ARG1 (a3 / accident 
                                                            :mod (p7 / personal)) 
                                                      :direction (n3 / now)))) 
                                    :ARG0-of (c / cause-01 
                                          :ARG1 (n2 / need-01 
                                                :ARG0 (i2 / i) 
                                                :ARG1 (p4 / plan-01 
                                                      :ARG1 (a2 / accident 
                                                            :mod (p5 / personal))))) 
                                    :ARG1 (n / none)) 
                              :domain-of (d / date-entity 
                                    :month 5) 
                              :manner (i / it)) 
                        :mod (g / good)))))

# ::snt for every person who exercises their freedom to drive a car there is a cost to many more in terms of delays on public transport because cars aggravate traffic congestion in terms of safety because busy roads lead to accidents in terms of dirty infrequent services because money is diverted away from better public transport and in terms of quality of life because cars cause pollution
# ::tok for every person who exercises their freedom to drive a car there is a cost to many more in terms of delays on public transport because cars aggravate traffic congestion in terms of safety because busy roads lead to accidents in terms of dirty infrequent services because money is diverted away from better public transport and in terms of quality of life because cars cause pollution
# ::alignments 65-66|0.0.1.2.0 64-65|0.0.1 63-64|0.0.1.0 62-63|0.0.1.2 61-62|0.0.1.2.0.0.1 59-60|0.0.1.2.0.0 57-58|0.0.1.2.0.0.0 55-56|0.0 54-55|0.0.0 53-54|0.0.0.0 50-51|0.1.2.0 47-48|0.0.1.1 46-47|0 45-46|0.1.1.1.1.1 43-44|0.1.1.1.1.1.1 41-42|0.1.1.1.1.1.0 39-40|0.1.1.1.1.1.0.0 36-37|0.1.3.0 35-36|0.1.5.0 34-35|0.1.3 33-34|0.1.4.0 31-32|0.1.4 29-30|0.1.2 28-29|0.1.2.1 27-28|0.1 26-27|0.1.0 25-26|0.1.1 24-25|0.1.1.1 23-24|0.1.1.1.2 21-22|0.1.1.1.1 19-20|0.1.1.1.1.0 16-17|0.1.1.1.0 14-15|0.1.5 10-11|0.1.1.0.0 8-9|0.1.1.0 6-7|0.1.1.0.1 4-5|0.1.1.0.2 2-3|0.1.1.0.1.0 1-2|0.1.1.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:29.247
# ::node	0	cause-01	46-47
# ::node	0.0	and	55-56
# ::node	0.0.0	transport-01	54-55
# ::node	0.0.0.0	public	53-54
# ::node	0.0.1	cause-01	64-65
# ::node	0.0.1.0	car	63-64
# ::node	0.0.1.1	money	47-48
# ::node	0.0.1.2	cause-01	62-63
# ::node	0.0.1.2.0	pollute-01	65-66
# ::node	0.0.1.2.0.0	quality	59-60
# ::node	0.0.1.2.0.0.0	term	57-58
# ::node	0.0.1.2.0.0.1	life	61-62
# ::node	0.1	aggravate-01	27-28
# ::node	0.1.0	car	26-27
# ::node	0.1.1	cause-01	25-26
# ::node	0.1.1.0	drive-01	8-9
# ::node	0.1.1.0.0	car	10-11
# ::node	0.1.1.0.1	free-41	6-7
# ::node	0.1.1.0.1.0	person	2-3
# ::node	0.1.1.0.1.0.0	every	1-2
# ::node	0.1.1.0.2	exercise	4-5
# ::node	0.1.1.1	transport-01	24-25
# ::node	0.1.1.1.0	many	16-17
# ::node	0.1.1.1.1	delay-01	21-22
# ::node	0.1.1.1.1.0	term	19-20
# ::node	0.1.1.1.1.1	service	45-46
# ::node	0.1.1.1.1.1.0	term	41-42
# ::node	0.1.1.1.1.1.0.0	accident	39-40
# ::node	0.1.1.1.1.1.1	dirty	43-44
# ::node	0.1.1.1.2	public	23-24
# ::node	0.1.2	congest-01	29-30
# ::node	0.1.2.0	away	50-51
# ::node	0.1.2.1	traffic	28-29
# ::node	0.1.3	cause-01	34-35
# ::node	0.1.3.0	road	36-37
# ::node	0.1.4	term	31-32
# ::node	0.1.4.0	safe-41	33-34
# ::node	0.1.5	cost-01	14-15
# ::node	0.1.5.0	busy	35-36
# ::root	0	cause-01
# ::edge	aggravate-01	ARG0	car	0.1	0.1.0	
# ::edge	aggravate-01	ARG1	congest-01	0.1	0.1.2	
# ::edge	aggravate-01	manner	term	0.1	0.1.4	
# ::edge	and	op1	transport-01	0.0	0.0.0	
# ::edge	and	op2	cause-01	0.0	0.0.1	
# ::edge	cause-01	ARG0	aggravate-01	0.1.1	0.1	
# ::edge	cause-01	ARG0	and	0	0.0	
# ::edge	cause-01	ARG0	car	0.0.1	0.0.1.0	
# ::edge	cause-01	ARG0	pollute-01	0.0.1.2	0.0.1.2.0	
# ::edge	cause-01	ARG0	road	0.1.3	0.1.3.0	
# ::edge	cause-01	ARG1	aggravate-01	0	0.1	
# ::edge	cause-01	ARG1	aggravate-01	0.1.3	0.1	
# ::edge	cause-01	ARG1	cause-01	0.0.1.2	0.0.1	
# ::edge	cause-01	ARG1	drive-01	0.1.1	0.1.1.0	
# ::edge	cause-01	ARG1	money	0.0.1	0.0.1.1	
# ::edge	congest-01	ARG0	away	0.1.2	0.1.2.0	
# ::edge	congest-01	ARG1	traffic	0.1.2	0.1.2.1	
# ::edge	cost-01	ARG1	busy	0.1.5	0.1.5.0	
# ::edge	cost-01	time	aggravate-01	0.1.5	0.1	
# ::edge	delay-01	ARG1	transport-01	0.1.1.1.1	0.1.1.1	
# ::edge	drive-01	ARG1	car	0.1.1.0	0.1.1.0.0	
# ::edge	exercise	purpose	drive-01	0.1.1.0.2	0.1.1.0	
# ::edge	free-41	ARG0	person	0.1.1.0.1	0.1.1.0.1.0	
# ::edge	free-41	ARG1	drive-01	0.1.1.0.1	0.1.1.0	
# ::edge	person	mod	every	0.1.1.0.1.0	0.1.1.0.1.0.0	
# ::edge	pollute-01	part	quality	0.0.1.2.0	0.0.1.2.0.0	
# ::edge	quality	poss	life	0.0.1.2.0.0	0.0.1.2.0.0.1	
# ::edge	service	mod	dirty	0.1.1.1.1.1	0.1.1.1.1.1.1	
# ::edge	service	op1	delay-01	0.1.1.1.1.1	0.1.1.1.1	
# ::edge	term	consist	accident	0.1.1.1.1.1.0	0.1.1.1.1.1.0.0	
# ::edge	term	domain	service	0.1.1.1.1.1.0	0.1.1.1.1.1	
# ::edge	term	mod	delay-01	0.1.1.1.1.0	0.1.1.1.1	
# ::edge	term	mod	quality	0.0.1.2.0.0.0	0.0.1.2.0.0	
# ::edge	term	mod	safe-41	0.1.4	0.1.4.0	
# ::edge	transport-01	ARG1	many	0.1.1.1	0.1.1.1.0	
# ::edge	transport-01	mod	public	0.0.0	0.0.0.0	
# ::edge	transport-01	mod	public	0.1.1.1	0.1.1.1.2	
# ::edge	transport-01	time	cause-01	0.1.1.1	0.1.1	
(c4 / cause-01 
      :ARG0 (a / and 
            :op1 (t2 / transport-01 
                  :mod (p2 / public)) 
            :op2 (c / cause-01 
                  :ARG0 (c2 / car) 
                  :ARG1 (m / money) 
                  :ARG1-of (c3 / cause-01 
                        :ARG0 (p / pollute-01 
                              :part (q / quality 
                                    :mod-of (t / term) 
                                    :poss (l / life)))))) 
      :ARG1 (a4 / aggravate-01 
            :ARG0 (c7 / car) 
            :ARG0-of (c8 / cause-01 
                  :ARG1 (d3 / drive-01 
                        :ARG1 (c10 / car) 
                        :ARG1-of (f / free-41 
                              :ARG0 (p4 / person 
                                    :mod (e2 / every))) 
                        :purpose-of (e / exercise)) 
                  :time-of (t6 / transport-01 
                        :ARG1 (m2 / many) 
                        :ARG1-of (d2 / delay-01 
                              :mod-of (t7 / term) 
                              :op-of (s / service 
                                    :domain-of (t3 / term 
                                          :consist (a3 / accident)) 
                                    :mod (d / dirty))) 
                        :mod (p3 / public))) 
            :ARG1 (c6 / congest-01 
                  :ARG0 (a2 / away) 
                  :ARG1 (t5 / traffic)) 
            :ARG1-of (c5 / cause-01 
                  :ARG0 (r / road)) 
            :manner (t4 / term 
                  :mod (s2 / safe-41)) 
            :time-of (c9 / cost-01 
                  :ARG1 (b / busy))))

# ::snt if you are permanently disabled as the result of an accident  youll be eligible to receive a tax free lump sum of up to  80000
# ::tok if you are permanently disabled as the result of an accident youll be eligible to receive a tax free lump sum of up to 80000
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:29.250
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt wf had an accident
# ::tok wf had an accident
# ::alignments 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:29.258
# ::node	0	accident	3-4
# ::root	0	accident
(a / accident)

# ::snt he was just 22 when he was given tranquillisers following a series of eye operations after surviving a road accident in which his best friend was killed
# ::tok he was just 22 when he was given tranquillisers following a series of eye operations after surviving a road accident in which his best friend was killed
# ::alignments 26-27|0.2.0.1.0 24-25|0.1.0.0+0.1.0 19-20|0.1 18-19|0.1.1 16-17|0 15-16|0.2 14-15|0.0 13-14|0.0.0 11-12|0.0.1 7-8|0.2.0 5-6|0.2.0.1 3-4|0.2.0.2 2-3|0.2.0.0.0 0-1|0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:29.531
# ::node	0	survive-01	16-17
# ::node	0.0	operation	14-15
# ::node	0.0.0	eye	13-14
# ::node	0.0.1	series	11-12
# ::node	0.1	accident	19-20
# ::node	0.1.0	have-rel-role-91	24-25
# ::node	0.1.0.0	friend	24-25
# ::node	0.1.1	road	18-19
# ::node	0.2	after	15-16
# ::node	0.2.0	give-01	7-8
# ::node	0.2.0.0	he	0-1
# ::node	0.2.0.0.0	just	2-3
# ::node	0.2.0.1	he	5-6
# ::node	0.2.0.1.0	kill-01	26-27
# ::node	0.2.0.2	22	3-4
# ::root	0	survive-01
# ::edge	accident	location	road	0.1	0.1.1	
# ::edge	after	op1	survive-01	0.2	0	
# ::edge	give-01	ARG1	he	0.2.0	0.2.0.0	
# ::edge	give-01	ARG2	he	0.2.0	0.2.0.1	
# ::edge	give-01	time	22	0.2.0	0.2.0.2	
# ::edge	give-01	time	after	0.2.0	0.2	
# ::edge	have-rel-role-91	ARG1	accident	0.1.0	0.1	
# ::edge	have-rel-role-91	ARG2	friend	0.1.0	0.1.0.0	
# ::edge	just	domain	he	0.2.0.0.0	0.2.0.0	
# ::edge	kill-01	ARG1	he	0.2.0.1.0	0.2.0.1	
# ::edge	operation	mod	eye	0.0	0.0.0	
# ::edge	operation	quant	series	0.0	0.0.1	
# ::edge	survive-01	ARG0	operation	0	0.0	
# ::edge	survive-01	ARG1	accident	0	0.1	
(s / survive-01 
      :ARG0 (o / operation 
            :mod (e / eye) 
            :quant (s2 / series)) 
      :ARG1 (a / accident 
            :ARG1-of (h / have-rel-role-91 
                  :ARG2 (f / friend)) 
            :location (r / road)) 
      :op-of (a2 / after 
            :time-of (g / give-01 
                  :ARG1 (h3 / he 
                        :domain-of (j / just)) 
                  :ARG2 (h2 / he 
                        :ARG1-of (k / kill-01)) 
                  :time 22)))

# ::snt   if there were a major accident at wylfa there were only two bridges across the menai straits to evacuate a population of 80000 he said
# ::tok if there were a major accident at wylfa there were only two bridges across the menai straits to evacuate a population of 80000 he said
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:29.532
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the london ambulance service last night offered to revert to an opencall radio system in an attempt to restore a civilian accident and emergency service
# ::tok the london ambulance service last night offered to revert to an opencall radio system in an attempt to restore a civilian accident and emergency service
# ::alignments 23-24|0.0.0.0.2.0 22-23|0.0.0.0.1 21-22|0.0.0.0.3 20-21|0.0.0.0.3.0 18-19|0.0.0.0 16-17|0.0.0.0.2 13-14|0.0 12-13|0 8-9|0.0.0 6-7|0.0.0.1 5-6|0.0.0.1.0 4-5|0.0.0.1.0.0 2-3|0.0.0.0.0 1-2|0.0.0.0.0.0.0.0+0.0.0.0.0.0.0+0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:30.225
# ::node	0	radio	12-13
# ::node	0.0	system	13-14
# ::node	0.0.0	revert-01	8-9
# ::node	0.0.0.0	restore-01	18-19
# ::node	0.0.0.0.0	ambulance	2-3
# ::node	0.0.0.0.0.0	city	1-2
# ::node	0.0.0.0.0.0.0	name	1-2
# ::node	0.0.0.0.0.0.0.0	"London"	1-2
# ::node	0.0.0.0.1	and	22-23
# ::node	0.0.0.0.2	attempt-01	16-17
# ::node	0.0.0.0.2.0	emergency	23-24
# ::node	0.0.0.0.3	accident	21-22
# ::node	0.0.0.0.3.0	civilian	20-21
# ::node	0.0.0.1	offer-01	6-7
# ::node	0.0.0.1.0	night	5-6
# ::node	0.0.0.1.0.0	last	4-5
# ::root	0	radio
(r2 / radio 
      :mod-of (s / system 
            :ARG2-of (r3 / revert-01 
                  :ARG1 (r / restore-01 
                        :ARG0 (a4 / ambulance 
                              :topic (c2 / city 
                                    :name (n2 / name 
                                          :op1 "London"))) 
                        :ARG1 (a / and) 
                        :ARG1-of (a3 / attempt-01 
                              :op-of (e / emergency)) 
                        :ARG2 (a2 / accident 
                              :mod (c / civilian))) 
                  :ARG1-of (o / offer-01 
                        :time (n / night 
                              :mod (l / last))))))

# ::snt our care and supervision does not absolve you from responsibility for rigging and inspecting the equipment you use and controlling your risk of accident or injury while using it
# ::tok our care and supervision does not absolve you from responsibility for rigging and inspecting the equipment you use and controlling your risk of accident or injury while using it
# ::alignments 28-29|0.1.0.0.1.1.0.0.0 27-28|0.1.0.0.1.1.0.0 25-26|0.1.0.0.1.1.0 24-25|0.1.0.0.1.1 23-24|0.1.0.0.1.0 21-22|0.1.0.0.1 19-20|0.1.0.0 18-19|0.1.0 17-18|0 16-17|0.0 15-16|0.1 12-13|0.1.0.0.2 9-10|0.1.0.0.2.0 7-8|0.1.0.0.2.0.0 3-4|0.1.0.0.0.0.0 2-3|0.1.0.0.0.0 1-2|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:30.648
# ::node	0	use-01	17-18
# ::node	0.0	you	16-17
# ::node	0.1	equipment	15-16
# ::node	0.1.0	and	18-19
# ::node	0.1.0.0	control-01	19-20
# ::node	0.1.0.0.0	care-01	1-2
# ::node	0.1.0.0.0.0	and	2-3
# ::node	0.1.0.0.0.0.0	supervise-01	3-4
# ::node	0.1.0.0.1	risk-01	21-22
# ::node	0.1.0.0.1.0	accident	23-24
# ::node	0.1.0.0.1.1	or	24-25
# ::node	0.1.0.0.1.1.0	injure-01	25-26
# ::node	0.1.0.0.1.1.0.0	use-01	27-28
# ::node	0.1.0.0.1.1.0.0.0	it	28-29
# ::node	0.1.0.0.2	and	12-13
# ::node	0.1.0.0.2.0	responsible-41	9-10
# ::node	0.1.0.0.2.0.0	you	7-8
# ::root	0	use-01
# ::edge	and	op1	care-01	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	and	op1	control-01	0.1.0.0.2	0.1.0.0	
# ::edge	and	op1	equipment	0.1.0	0.1	
# ::edge	and	op2	control-01	0.1.0	0.1.0.0	
# ::edge	and	op2	supervise-01	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	control-01	ARG0	care-01	0.1.0.0	0.1.0.0.0	
# ::edge	control-01	ARG1	risk-01	0.1.0.0	0.1.0.0.1	
# ::edge	injure-01	ARG1	use-01	0.1.0.0.1.1.0	0.1.0.0.1.1.0.0	
# ::edge	or	op1	injure-01	0.1.0.0.1.1	0.1.0.0.1.1.0	
# ::edge	responsible-41	ARG0	you	0.1.0.0.2.0	0.1.0.0.2.0.0	
# ::edge	responsible-41	ARG1	and	0.1.0.0.2.0	0.1.0.0.2	
# ::edge	risk-01	ARG0	accident	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	risk-01	ARG1	or	0.1.0.0.1	0.1.0.0.1.1	
# ::edge	use-01	ARG0	you	0	0.0	
# ::edge	use-01	ARG1	equipment	0	0.1	
# ::edge	use-01	ARG1	it	0.1.0.0.1.1.0.0	0.1.0.0.1.1.0.0.0	
(u2 / use-01 
      :ARG0 (y / you) 
      :ARG1 (e / equipment 
            :op-of (a2 / and 
                  :op1 (c / control-01 
                        :ARG0 (c2 / care-01 
                              :op-of (a4 / and 
                                    :op1 (s / supervise-01))) 
                        :ARG1 (r / risk-01 
                              :ARG0 (a / accident) 
                              :ARG1 (o / or 
                                    :op1 (i2 / injure-01 
                                          :ARG1 (u / use-01 
                                                :ARG1 (i / it))))) 
                        :op-of (a3 / and 
                              :ARG1-of (r2 / responsible-41 
                                    :ARG0 (y2 / you)))))))

# ::snt   but he stressed he couldnt go so far as to say they played no part in the accident
# ::tok but he stressed he couldnt go so far as to say they played no part in the accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:30.649
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the stockbroker from across the street  i am told he is dead in a car accident
# ::tok the stockbroker from across the street i am told he is dead in a car accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:30.650
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt is as its name suggests both common and hoglike in its habits although in some areas its numbers have been drastically reduced by road accidents and agricultural practices
# ::tok is as its name suggests both common and hoglike in its habits although in some areas its numbers have been drastically reduced by road accidents and agricultural practices
# ::alignments 27-28|0.2 26-27|0.2.0 25-26|0 24-25|0.1 23-24|0.1.0 21-22|0.0 20-21|0.0.2 17-18|0.0.0 15-16|0.0.1 14-15|0.0.1.0 11-12|0.0.3.1 7-8|0.0.3.0 6-7|0.0.3.0.1 5-6|0.0.3.0.0 4-5|0.0.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:30.920
# ::node	0	and	25-26
# ::node	0.0	reduce-01	21-22
# ::node	0.0.0	number	17-18
# ::node	0.0.1	area	15-16
# ::node	0.0.1.0	some	14-15
# ::node	0.0.2	drastic	20-21
# ::node	0.0.3	suggest-01	4-5
# ::node	0.0.3.0	and	7-8
# ::node	0.0.3.0.0	both	5-6
# ::node	0.0.3.0.1	common	6-7
# ::node	0.0.3.1	habit	11-12
# ::node	0.1	accident	24-25
# ::node	0.1.0	road	23-24
# ::node	0.2	practice-01	27-28
# ::node	0.2.0	agriculture	26-27
# ::root	0	and
# ::edge	accident	location	road	0.1	0.1.0	
# ::edge	and	mod	both	0.0.3.0	0.0.3.0.0	
# ::edge	and	op1	accident	0	0.1	
# ::edge	and	op1	common	0.0.3.0	0.0.3.0.1	
# ::edge	and	op2	practice-01	0	0.2	
# ::edge	area	quant	some	0.0.1	0.0.1.0	
# ::edge	practice-01	ARG1	agriculture	0.2	0.2.0	
# ::edge	reduce-01	ARG0	and	0.0	0	
# ::edge	reduce-01	ARG1	number	0.0	0.0.0	
# ::edge	reduce-01	ARG2	area	0.0	0.0.1	
# ::edge	reduce-01	manner	drastic	0.0	0.0.2	
# ::edge	suggest-01	ARG1	and	0.0.3	0.0.3.0	
# ::edge	suggest-01	ARG2	habit	0.0.3	0.0.3.1	
# ::edge	suggest-01	time	reduce-01	0.0.3	0.0	
(a2 / and 
      :ARG0-of (r2 / reduce-01 
            :ARG1 (n / number) 
            :ARG2 (a4 / area 
                  :quant (s / some)) 
            :manner (d / drastic) 
            :time-of (s2 / suggest-01 
                  :ARG1 (a5 / and 
                        :mod (b / both) 
                        :op1 (c / common)) 
                  :ARG2 (h / habit))) 
      :op1 (a3 / accident 
            :location (r / road)) 
      :op2 (p / practice-01 
            :ARG1 (a / agriculture)))

# ::snt we cannot say whether this blood was the result of a shooting incident or because of an accident a spokesman for the prosecutor said last night
# ::tok we cannot say whether this blood was the result of a shooting incident or because of an accident a spokesman for the prosecutor said last night
# ::alignments 25-26|0.0.3 24-25|0.0.3.0 23-24|0.0 22-23|0.0.0.0.0 19-20|0.0.0.0.1+0.0.0.0 17-18|0.0.1 14-15|0 13-14|0.0.2 12-13|0.0.0.1.0 11-12|0.0.0.1.0.0 8-9|0.0.0.1 5-6|0.0.0 4-5|0.0.0.2 2-3|0.0.2.0 0-1|0.0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:31.289
# ::node	0	cause-01	14-15
# ::node	0.0	say-01	23-24
# ::node	0.0.0	blood	5-6
# ::node	0.0.0.0	have-org-role-91	19-20
# ::node	0.0.0.0.0	prosecute-01	22-23
# ::node	0.0.0.0.1	spokesman	19-20
# ::node	0.0.0.1	result-01	8-9
# ::node	0.0.0.1.0	incident	12-13
# ::node	0.0.0.1.0.0	shoot-05	11-12
# ::node	0.0.0.2	this	4-5
# ::node	0.0.1	accident	17-18
# ::node	0.0.2	or	13-14
# ::node	0.0.2.0	say-01	2-3
# ::node	0.0.2.0.0	we	0-1
# ::node	0.0.3	night	25-26
# ::node	0.0.3.0	last	24-25
# ::root	0	cause-01
# ::edge	blood	mod	this	0.0.0	0.0.0.2	
# ::edge	cause-01	ARG0	say-01	0	0.0	
# ::edge	have-org-role-91	ARG0	blood	0.0.0.0	0.0.0	
# ::edge	have-org-role-91	ARG1	prosecute-01	0.0.0.0	0.0.0.0.0	
# ::edge	have-org-role-91	ARG2	spokesman	0.0.0.0	0.0.0.0.1	
# ::edge	night	mod	last	0.0.3	0.0.3.0	
# ::edge	or	op1	say-01	0.0.2	0.0	
# ::edge	result-01	ARG1	incident	0.0.0.1	0.0.0.1.0	
# ::edge	result-01	ARG2	blood	0.0.0.1	0.0.0	
# ::edge	say-01	ARG0	blood	0.0	0.0.0	
# ::edge	say-01	ARG0	we	0.0.2.0	0.0.2.0.0	
# ::edge	say-01	ARG1	accident	0.0	0.0.1	
# ::edge	say-01	ARG1	or	0.0.2.0	0.0.2	
# ::edge	say-01	time	night	0.0	0.0.3	
# ::edge	shoot-05	ARG1	incident	0.0.0.1.0.0	0.0.0.1.0	
(c / cause-01 
      :ARG0 (s / say-01 
            :ARG0 (b / blood 
                  :ARG0-of (h / have-org-role-91 
                        :ARG1 (p / prosecute-01) 
                        :ARG2 (s2 / spokesman)) 
                  :ARG2-of (r / result-01 
                        :ARG1 (i / incident 
                              :ARG1-of (s3 / shoot-05))) 
                  :mod (t / this)) 
            :ARG1 (a / accident) 
            :op-of (o / or 
                  :ARG1-of (s4 / say-01 
                        :ARG0 (w / we))) 
            :time (n / night 
                  :mod (l / last))))

# ::snt dont forget that accidents can happen to you too
# ::tok dont forget that accidents can happen to you too
# ::alignments 8-9|0.1.2 7-8|0.1.1 5-6|0.1 4-5|0 3-4|0.1.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:31.347
# ::node	0	possible	4-5
# ::node	0.0	forget-01	1-2
# ::node	0.1	happen-01	5-6
# ::node	0.1.0	accident	3-4
# ::node	0.1.1	you	7-8
# ::node	0.1.2	too	8-9
# ::root	0	possible
# ::edge	forget-01	ARG1	possible	0.0	0	
# ::edge	happen-01	ARG1	accident	0.1	0.1.0	
# ::edge	happen-01	ARG2	you	0.1	0.1.1	
# ::edge	happen-01	mod	too	0.1	0.1.2	
# ::edge	possible	domain	happen-01	0	0.1	
(p / possible 
      :ARG1-of (f / forget-01) 
      :domain (h / happen-01 
            :ARG1 (a / accident) 
            :ARG2 (y / you) 
            :mod (t / too)))

# ::snt   the accident caused damage amounting to at least 500 to the front of mr olejniks renault 25 company car including the fender and the radiator, mr olejnik said he was lucky that the road conditions were fairly dry at the time because otherwise he could have skidded and had a more serious accident
# ::tok the accident caused damage amounting to at least 500 to the front of mr olejniks renault 25 company car including the fender and the radiator , mr olejnik said he was lucky that the road conditions were fairly dry at the time because otherwise he could have skidded and had a more serious accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:31.348
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt dr hans friedrich meyer the second in command of the agencys division of public information explained that the document being sourced as the agencys internal assessment of the accident was nothing other than a daily resume of international press clippings which was in turn citing spanish newspaper accounts of the accident
# ::tok dr hans friedrich meyer the second in command of the agencys division of public information explained that the document being sourced as the agencys internal assessment of the accident was nothing other than a daily resume of international press clippings which was in turn citing spanish newspaper accounts of the accident
# ::alignments 50-51|0.0 47-48|0.1 46-47|0.1.0 45-46|0.1.0.0.0.0+0.1.0.0.0+0.1.0.0 44-45|0 38-39|0.1.0.1.1.0.0.0.1.0 37-38|0.1.0.1.1.0.0.0.1 35-36|0.1.0.1.0.1 31-32|0.1.0.1.0.0 30-31|0.1.0.1.0 28-29|0.1.0.1.1 25-26|0.1.0.1 24-25|0.1.0.1.2 18-19|0.1.0.1.0.1.0 15-16|0.1.0.1.1.0.0.0 14-15|0.1.0.1.1.0.0.0.0 13-14|0.1.0.1.1.0.0.0.0.0 11-12|0.1.0.1.1.0.0 7-8|0.1.0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:32.377
# ::node	0	cite-01	44-45
# ::node	0.0	accident	50-51
# ::node	0.1	account	47-48
# ::node	0.1.0	newspaper	46-47
# ::node	0.1.0.0	language	45-46
# ::node	0.1.0.0.0	name	45-46
# ::node	0.1.0.0.0.0	"Spanish"	45-46
# ::node	0.1.0.1	assess-01	25-26
# ::node	0.1.0.1.0	nothing	30-31
# ::node	0.1.0.1.0.0	other	31-32
# ::node	0.1.0.1.0.1	resume-01	35-36
# ::node	0.1.0.1.0.1.0	document	18-19
# ::node	0.1.0.1.1	accident	28-29
# ::node	0.1.0.1.1.0	command-02	7-8
# ::node	0.1.0.1.1.0.0	division	11-12
# ::node	0.1.0.1.1.0.0.0	explain-01	15-16
# ::node	0.1.0.1.1.0.0.0.0	information	14-15
# ::node	0.1.0.1.1.0.0.0.0.0	public	13-14
# ::node	0.1.0.1.1.0.0.0.1	international	37-38
# ::node	0.1.0.1.1.0.0.0.1.0	press	38-39
# ::node	0.1.0.1.2	internal	24-25
# ::root	0	cite-01
# ::edge	accident	op1	command-02	0.1.0.1.1	0.1.0.1.1.0	
# ::edge	account	mod	newspaper	0.1	0.1.0	
# ::edge	assess-01	ARG0	nothing	0.1.0.1	0.1.0.1.0	
# ::edge	assess-01	ARG1	accident	0.1.0.1	0.1.0.1.1	
# ::edge	assess-01	mod	internal	0.1.0.1	0.1.0.1.2	
# ::edge	cite-01	ARG0	accident	0	0.0	
# ::edge	cite-01	ARG1	account	0	0.1	
# ::edge	command-02	ARG1	division	0.1.0.1.1.0	0.1.0.1.1.0.0	
# ::edge	explain-01	ARG0	division	0.1.0.1.1.0.0.0	0.1.0.1.1.0.0	
# ::edge	explain-01	ARG1	information	0.1.0.1.1.0.0.0	0.1.0.1.1.0.0.0.0	
# ::edge	information	mod	public	0.1.0.1.1.0.0.0.0	0.1.0.1.1.0.0.0.0.0	
# ::edge	international	domain	explain-01	0.1.0.1.1.0.0.0.1	0.1.0.1.1.0.0.0	
# ::edge	language	name	name	0.1.0.0	0.1.0.0.0	
# ::edge	name	op1	"Spanish"	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	newspaper	mod	language	0.1.0	0.1.0.0	
# ::edge	newspaper	op1	assess-01	0.1.0	0.1.0.1	
# ::edge	nothing	mod	other	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	nothing	topic	resume-01	0.1.0.1.0	0.1.0.1.0.1	
# ::edge	press	mod	international	0.1.0.1.1.0.0.0.1.0	0.1.0.1.1.0.0.0.1	
# ::edge	resume-01	ARG0	document	0.1.0.1.0.1	0.1.0.1.0.1.0	
(c / cite-01 
      :ARG0 (a / accident) 
      :ARG1 (a2 / account 
            :mod (n / newspaper 
                  :mod (l / language 
                        :name (n2 / name 
                              :op1 "Spanish")) 
                  :op1 (a4 / assess-01 
                        :ARG0 (n3 / nothing 
                              :mod (o / other) 
                              :topic (r / resume-01 
                                    :ARG0 (d / document))) 
                        :ARG1 (a3 / accident 
                              :op1 (c2 / command-02 
                                    :ARG1 (d2 / division 
                                          :ARG0-of (e / explain-01 
                                                :ARG1 (i3 / information 
                                                      :mod (p2 / public)) 
                                                :domain-of (i / international 
                                                      :mod-of (p / press)))))) 
                        :mod (i2 / internal)))))

# ::snt the electoral register could show four people living in a household and the community charge form only three they may be trying to deceive or their son could have been killed in a motorcycle accident
# ::tok the electoral register could show four people living in a household and the community charge form only three they may be trying to deceive or their son could have been killed in a motorcycle accident
# ::alignments 34-35|0.0.3.0.0.0 30-31|0.0.3.0.0 27-28|0 26-27|0.0.3.1.1+0.0.3.1 24-25|0.0 21-22|0.0.3 19-20|0.0.2.0+0.0.2 18-19|0.0.3.0 17-18|0.0.1 16-17|0.0.0.0.1 15-16|0.0.0.0.0.0.0.0 13-14|0.0.0.0.0.0.0.0.0 11-12|0.0.0.0.0.0.0 10-11|0.0.0.0.0.0.1 7-8|0.0.0.0.0.0 5-6|0.0.3.1.0 4-5|0.0.0.0.0 3-4|0.0.0.0.0.1 2-3|0.0.0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:32.931
# ::node	0	possible	27-28
# ::node	0.0	or	24-25
# ::node	0.0.0	elect-01	1-2
# ::node	0.0.0.0	register-02	2-3
# ::node	0.0.0.0.0	show-01	4-5
# ::node	0.0.0.0.0.0	live-01	7-8
# ::node	0.0.0.0.0.0.0	and	11-12
# ::node	0.0.0.0.0.0.0.0	form	15-16
# ::node	0.0.0.0.0.0.0.0.0	community	13-14
# ::node	0.0.0.0.0.0.1	household	10-11
# ::node	0.0.0.0.0.1	possible	3-4
# ::node	0.0.0.0.1	only	16-17
# ::node	0.0.1	3	17-18
# ::node	0.0.2	date-entity	19-20
# ::node	0.0.2.0	5	19-20
# ::node	0.0.3	try-01	21-22
# ::node	0.0.3.0	they	18-19
# ::node	0.0.3.0.0	kill-01	30-31
# ::node	0.0.3.0.0.0	accident	34-35
# ::node	0.0.3.1	have-rel-role-91	26-27
# ::node	0.0.3.1.0	4	5-6
# ::node	0.0.3.1.1	son	26-27
# ::root	0	possible
(p / possible 
      :op-of (o / or 
            :ARG1-of (e / elect-01 
                  :mod-of (r / register-02 
                        :ARG0-of (s2 / show-01 
                              :ARG1 (l / live-01 
                                    :ARG0 (a2 / and 
                                          :op1 (f / form 
                                                :mod (c / community))) 
                                    :location (h2 / household)) 
                              :domain-of (p2 / possible)) 
                        :ARG1 (o2 / only))) 
            :op1 3 
            :op2 (d / date-entity 
                  :month 5) 
            :op3 (t / try-01 
                  :ARG0 (t2 / they 
                        :ARG0-of (k / kill-01 
                              :location (a / accident))) 
                  :ARG1 (h / have-rel-role-91 
                        :ARG1 4 
                        :ARG2 (s / son)))))

# ::snt motorcyclist raymond barton of mirfield road witney received minor injuries after an accident with a car in burford road witney yesterday
# ::tok motorcyclist raymond barton of mirfield road witney received minor injuries after an accident with a car in burford road witney yesterday
# ::alignments 20-21|0.1.0.0 18-19|0.1.0 15-16|0.2 12-13|0.3.0 10-11|0.3 9-10|0.1 8-9|0.1.1 7-8|0 5-6|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:33.000
# ::node	0	receive-01	7-8
# ::node	0.0	road	5-6
# ::node	0.1	injure-01	9-10
# ::node	0.1.0	road	18-19
# ::node	0.1.0.0	yesterday	20-21
# ::node	0.1.1	minor	8-9
# ::node	0.2	car	15-16
# ::node	0.3	after	10-11
# ::node	0.3.0	accident	12-13
# ::root	0	receive-01
# ::edge	after	op1	accident	0.3	0.3.0	
# ::edge	injure-01	location	road	0.1	0.1.0	
# ::edge	injure-01	mod	minor	0.1	0.1.1	
# ::edge	receive-01	ARG0	road	0	0.0	
# ::edge	receive-01	ARG1	injure-01	0	0.1	
# ::edge	receive-01	manner	car	0	0.2	
# ::edge	receive-01	time	after	0	0.3	
# ::edge	yesterday	part	road	0.1.0.0	0.1.0	
(r2 / receive-01 
      :ARG0 (r3 / road) 
      :ARG1 (i / injure-01 
            :location (r / road 
                  :part-of (y / yesterday)) 
            :mod (m / minor)) 
      :manner (c / car) 
      :time (a2 / after 
            :op1 (a / accident)))

# ::snt the underclass of unethical and disreputable attorneys far from still being the model or average is being disowned and occasionally embarrassing ambulancechasing in mass accidents is publicly censured
# ::tok the underclass of unethical and disreputable attorneys far from still being the model or average is being disowned and occasionally embarrassing ambulancechasing in mass accidents is publicly censured
# ::alignments 27-28|0 26-27|0.3 24-25|0.2 23-24|0.2.0 19-20|0.0 18-19|0.1 13-14|0.1.2 12-13|0.1.2.1 9-10|0.1.2.0 7-8|0.1.1 6-7|0.1.0.0 4-5|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:33.118
# ::node	0	censure-01	27-28
# ::node	0.0	occasional	19-20
# ::node	0.1	and	18-19
# ::node	0.1.0	and	4-5
# ::node	0.1.0.0	attorney	6-7
# ::node	0.1.1	far	7-8
# ::node	0.1.2	or	13-14
# ::node	0.1.2.0	still	9-10
# ::node	0.1.2.1	model	12-13
# ::node	0.2	accident	24-25
# ::node	0.2.0	mass	23-24
# ::node	0.3	public	26-27
# ::root	0	censure-01
# ::edge	accident	degree	mass	0.2	0.2.0	
# ::edge	and	op1	attorney	0.1.0	0.1.0.0	
# ::edge	and	op1	far	0.1	0.1.1	
# ::edge	and	op2	and	0.1.0	0.1	
# ::edge	and	op2	or	0.1	0.1.2	
# ::edge	censure-01	ARG0	occasional	0	0.0	
# ::edge	censure-01	ARG1	and	0	0.1	
# ::edge	censure-01	ARG2	accident	0	0.2	
# ::edge	censure-01	degree	public	0	0.3	
# ::edge	or	mod	still	0.1.2	0.1.2.0	
# ::edge	or	op1	model	0.1.2	0.1.2.1	
(c / censure-01 
      :ARG0 (o / occasional) 
      :ARG1 (a2 / and 
            :op-of (a4 / and 
                  :op1 (a3 / attorney)) 
            :op1 (f / far) 
            :op2 (o2 / or 
                  :mod (s / still) 
                  :op1 (m2 / model))) 
      :ARG2 (a / accident 
            :degree (m / mass)) 
      :degree (p / public))

# ::snt american nofault automobile plans developed organically out of the progressive transformation of accident insurance first and thirdparty from private to a public function
# ::tok american nofault automobile plans developed organically out of the progressive transformation of accident insurance first and thirdparty from private to a public function
# ::alignments 22-23|0.0.0 21-22|0.0.0.0 18-19|0.0 15-16|0 13-14|0.2 12-13|0.2.0 10-11|0.2.1 9-10|0.2.1.0 4-5|0.1 3-4|0.1.0 2-3|0.1.0.1 0-1|0.1.0.0.0.0+0.1.0.0.0+0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:33.203
# ::node	0	and	15-16
# ::node	0.0	private	18-19
# ::node	0.0.0	function-01	22-23
# ::node	0.0.0.0	public	21-22
# ::node	0.1	develop-02	4-5
# ::node	0.1.0	plan-01	3-4
# ::node	0.1.0.0	country	0-1
# ::node	0.1.0.0.0	name	0-1
# ::node	0.1.0.0.0.0	"America"	0-1
# ::node	0.1.0.1	automobile	2-3
# ::node	0.2	insure-02	13-14
# ::node	0.2.0	accident	12-13
# ::node	0.2.1	transform-01	10-11
# ::node	0.2.1.0	progressive	9-10
# ::root	0	and
# ::edge	and	degree	private	0	0.0	
# ::edge	and	op1	develop-02	0	0.1	
# ::edge	and	op2	insure-02	0	0.2	
# ::edge	country	name	name	0.1.0.0	0.1.0.0.0	
# ::edge	develop-02	ARG1	plan-01	0.1	0.1.0	
# ::edge	function-01	ARG1	public	0.0.0	0.0.0.0	
# ::edge	insure-02	ARG1	accident	0.2	0.2.0	
# ::edge	name	op1	"America"	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	plan-01	ARG0	country	0.1.0	0.1.0.0	
# ::edge	plan-01	ARG1	automobile	0.1.0	0.1.0.1	
# ::edge	private	op1	function-01	0.0	0.0.0	
# ::edge	transform-01	ARG1	insure-02	0.2.1	0.2	
# ::edge	transform-01	mod	progressive	0.2.1	0.2.1.0	
(a / and 
      :degree (p2 / private 
            :op1 (f / function-01 
                  :ARG1 (p / public))) 
      :op1 (d / develop-02 
            :ARG1 (p4 / plan-01 
                  :ARG0 (c / country 
                        :name (n / name 
                              :op1 "America")) 
                  :ARG1 (a3 / automobile))) 
      :op2 (i / insure-02 
            :ARG1 (a2 / accident) 
            :ARG1-of (t / transform-01 
                  :mod (p3 / progressive))))

# ::snt a mans been taken to oxfords john radcliffe hospital following an industrial accident at bicester in which his arm was badly injured in machinery
# ::tok a mans been taken to oxfords john radcliffe hospital following an industrial accident at bicester in which his arm was badly injured in machinery
# ::alignments 23-24|0 21-22|0.0 18-19|0.0.1 12-13|0.0.0 11-12|0.0.0.0 8-9|0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:33.269
# ::node	0	machinery	23-24
# ::node	0.0	injure-01	21-22
# ::node	0.0.0	accident	12-13
# ::node	0.0.0.0	industry	11-12
# ::node	0.0.1	arm	18-19
# ::node	0.0.2	hospital	8-9
# ::root	0	machinery
(m / machinery 
      :ARG2-of (i / injure-01 
            :ARG0 (a2 / accident 
                  :mod (i2 / industry)) 
            :ARG1 (a / arm) 
            :manner (h / hospital)))

# ::snt to be honest i always thought that i would either win this race or there would be an accident
# ::tok to be honest i always thought that i would either win this race or there would be an accident
# ::alignments 18-19|0.4.0 13-14|0.4 12-13|0.1 11-12|0.1.0 10-11|0 9-10|0.3 7-8|0.0 5-6|0.2 4-5|0.2.1 3-4|0.2.0 2-3|0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:33.430
# ::node	0	win-01	10-11
# ::node	0.0	i	7-8
# ::node	0.1	race	12-13
# ::node	0.1.0	this	11-12
# ::node	0.2	think-01	5-6
# ::node	0.2.0	i	3-4
# ::node	0.2.0.0	honest	2-3
# ::node	0.2.1	always	4-5
# ::node	0.3	either	9-10
# ::node	0.4	or	13-14
# ::node	0.4.0	accident	18-19
# ::root	0	win-01
# ::edge	i	mod	honest	0.2.0	0.2.0.0	
# ::edge	or	op1	win-01	0.4	0	
# ::edge	or	op2	accident	0.4	0.4.0	
# ::edge	race	mod	this	0.1	0.1.0	
# ::edge	think-01	ARG0	i	0.2	0.2.0	
# ::edge	think-01	ARG1	win-01	0.2	0	
# ::edge	think-01	time	always	0.2	0.2.1	
# ::edge	win-01	ARG0	i	0	0.0	
# ::edge	win-01	ARG1	race	0	0.1	
# ::edge	win-01	mod	either	0	0.3	
(w / win-01 
      :ARG0 (i / i) 
      :ARG1 (r / race 
            :mod (t / this)) 
      :ARG1-of (t2 / think-01 
            :ARG0 (i2 / i 
                  :mod (h / honest)) 
            :time (a2 / always)) 
      :mod (e / either) 
      :op-of (o / or 
            :op1 (a / accident)))

# ::snt he assumed the man fell without injury while directing the truck and did not realise there had been a fatal accident until he read the next days paper, coroner mr nicholas gardiner said someone usually supervised tipping trucks but not on the day of the accident
# ::tok he assumed the man fell without injury while directing the truck and did not realise there had been a fatal accident until he read the next days paper , coroner mr nicholas gardiner said someone usually supervised tipping trucks but not on the day of the accident
# ::alignments 46-47|0.2.0.0 43-44|0.2.0 39-40|0.2 38-39|0.1.1 36-37|0.1 35-36|0.1.2 34-35|0.1.0 33-34|0 29-30|0.0.1.0.0.1.0 27-28|0.0.0.0 26-27|0.0.1.0.0.0.0.0.0+0.0.1.0.0.0.0.0.0.0 25-26|0.0.1.0.0.0.0.0 23-24|0.0.0 22-23|0.0 21-22|0.0.0.1 20-21|0.0.1 19-20|0.0.1.1 14-15|0.0.1.0 11-12|0.0.1.0.0 10-11|0.0.1.0.0.1.1 8-9|0.0.1.0.0.1 6-7|0.0.1.0.0.0 4-5|0.0.1.0.0.0.0 3-4|0.0.1.0.0.0.0.1 1-2|0.0.1.0.0.0.0.2 0-1|0.0.1.0.0.0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:34.825
# ::node	0	say-01	33-34
# ::node	0.0	he	22-23
# ::node	0.0.0	read-01	23-24
# ::node	0.0.0.0	paper	27-28
# ::node	0.0.0.1	until	21-22
# ::node	0.0.1	accident	20-21
# ::node	0.0.1.0	realize-01	14-15
# ::node	0.0.1.0.0	and	11-12
# ::node	0.0.1.0.0.0	injure-01	6-7
# ::node	0.0.1.0.0.0.0	fall-01	4-5
# ::node	0.0.1.0.0.0.0.0	next	25-26
# ::node	0.0.1.0.0.0.0.0.0	day	26-27
# ::node	0.0.1.0.0.0.0.0.0.0	temporal-quantity	26-27
# ::node	0.0.1.0.0.0.0.1	man	3-4
# ::node	0.0.1.0.0.0.0.2	assume-02	1-2
# ::node	0.0.1.0.0.0.0.2.0	he	0-1
# ::node	0.0.1.0.0.1	direct-01	8-9
# ::node	0.0.1.0.0.1.0	coroner	29-30
# ::node	0.0.1.0.0.1.1	truck	10-11
# ::node	0.0.1.1	fatal	19-20
# ::node	0.1	supervise-01	36-37
# ::node	0.1.0	someone	34-35
# ::node	0.1.1	truck	38-39
# ::node	0.1.2	usual	35-36
# ::node	0.2	contrast-01	39-40
# ::node	0.2.0	day	43-44
# ::node	0.2.0.0	accident	46-47
# ::root	0	say-01
# ::edge	accident	mod	fatal	0.0.1	0.0.1.1	
# ::edge	accident	part	day	0.2.0.0	0.2.0	
# ::edge	accident	prep-for	he	0.0.1	0.0	
# ::edge	and	instrument	injure-01	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	and	op1	direct-01	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	and	op2	realize-01	0.0.1.0.0	0.0.1.0	
# ::edge	assume-02	ARG0	he	0.0.1.0.0.0.0.2	0.0.1.0.0.0.0.2.0	
# ::edge	assume-02	ARG1	fall-01	0.0.1.0.0.0.0.2	0.0.1.0.0.0.0	
# ::edge	contrast-01	ARG1	day	0.2	0.2.0	
# ::edge	contrast-01	ARG2	say-01	0.2	0	
# ::edge	day	mod	next	0.0.1.0.0.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	direct-01	ARG0	coroner	0.0.1.0.0.1	0.0.1.0.0.1.0	
# ::edge	direct-01	ARG1	truck	0.0.1.0.0.1	0.0.1.0.0.1.1	
# ::edge	fall-01	ARG0	next	0.0.1.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	fall-01	ARG1	man	0.0.1.0.0.0.0	0.0.1.0.0.0.0.1	
# ::edge	fall-01	ARG3	injure-01	0.0.1.0.0.0.0	0.0.1.0.0.0	
# ::edge	read-01	ARG0	he	0.0.0	0.0	
# ::edge	read-01	ARG1	paper	0.0.0	0.0.0.0	
# ::edge	realize-01	ARG1	accident	0.0.1.0	0.0.1	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	supervise-01	0	0.1	
# ::edge	supervise-01	ARG0	someone	0.1	0.1.0	
# ::edge	supervise-01	ARG1	truck	0.1	0.1.1	
# ::edge	supervise-01	mod	usual	0.1	0.1.2	
# ::edge	temporal-quantity	unit	day	0.0.1.0.0.0.0.0.0.0	0.0.1.0.0.0.0.0.0	
# ::edge	until	op1	read-01	0.0.0.1	0.0.0	
(s3 / say-01 
      :ARG0 (h / he 
            :ARG0-of (r / read-01 
                  :ARG1 (p / paper) 
                  :op-of (u2 / until)) 
            :prep-for-of (a2 / accident 
                  :ARG1-of (r2 / realize-01 
                        :op-of (a3 / and 
                              :instrument (i / injure-01 
                                    :ARG3-of (f2 / fall-01 
                                          :ARG0 (n / next 
                                                :mod-of (d2 / day 
                                                      :unit-of (t2 / temporal-quantity))) 
                                          :ARG1 (m / man) 
                                          :ARG1-of (a4 / assume-02 
                                                :ARG0 (h2 / he)))) 
                              :op1 (d3 / direct-01 
                                    :ARG0 (c2 / coroner) 
                                    :ARG1 (t3 / truck)))) 
                  :mod (f / fatal))) 
      :ARG1 (s / supervise-01 
            :ARG0 (s2 / someone) 
            :ARG1 (t / truck) 
            :mod (u / usual)) 
      :ARG2-of (c / contrast-01 
            :ARG1 (d / day 
                  :part-of (a / accident))))

# ::snt the judge said the accident had transformed mrs kelly from a lively young woman into a bedridden invalid
# ::tok the judge said the accident had transformed mrs kelly from a lively young woman into a bedridden invalid
# ::alignments 13-14|0.0.1 12-13|0.0.1.0 11-12|0.0.2.0 6-7|0.0 4-5|0.0.0 2-3|0 1-2|0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:34.875
# ::node	0	say-01	2-3
# ::node	0.0	transform-01	6-7
# ::node	0.0.0	accident	4-5
# ::node	0.0.1	woman	13-14
# ::node	0.0.1.0	young	12-13
# ::node	0.0.2	judge-01	1-2
# ::node	0.0.2.0	lively	11-12
# ::root	0	say-01
# ::edge	judge-01	ARG0	lively	0.0.2	0.0.2.0	
# ::edge	judge-01	ARG2	transform-01	0.0.2	0.0	
# ::edge	say-01	ARG1	transform-01	0	0.0	
# ::edge	transform-01	ARG1	accident	0.0	0.0.0	
# ::edge	transform-01	ARG2	woman	0.0	0.0.1	
# ::edge	woman	mod	young	0.0.1	0.0.1.0	
(s / say-01 
      :ARG1 (t / transform-01 
            :ARG1 (a / accident) 
            :ARG2 (w / woman 
                  :mod (y / young)) 
            :ARG2-of (j / judge-01 
                  :ARG0 (l / lively))))

# ::snt if i say yes of course johns alive hes had an accident and lost his memory but hes sure to be back then a voice within me argues dont be ridiculous how can that be true someone would have seen him by now he must be dead
# ::tok if i say yes of course johns alive hes had an accident and lost his memory but hes sure to be back then a voice within me argues dont be ridiculous how can that be true someone would have seen him by now he must be dead
# ::alignments 43-44|0.1.2.0 42-43|0.1.3.0.0.1 39-40|0.1.3.0.0 36-37|0.1.3.0.0.0 35-36|0.1.3.0 32-33|0.1.3 30-31|0.1.0.0 27-28|0.1.0.1 25-26|0.1.0.1.1 24-25|0.1.0.1.0 22-23|0.1.0.1.2 21-22|0.1.0.1.2.0 16-17|0.1.0 15-16|0.1.2.1 13-14|0.1.2 12-13|0.1 11-12|0.1.1 3-4|0.2 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:35.331
# ::node	0	say-01	2-3
# ::node	0.0	i	1-2
# ::node	0.1	and	12-13
# ::node	0.1.0	contrast-01	16-17
# ::node	0.1.0.0	ridiculous	30-31
# ::node	0.1.0.1	argue-01	27-28
# ::node	0.1.0.1.0	voice	24-25
# ::node	0.1.0.1.1	within	25-26
# ::node	0.1.0.1.2	then	22-23
# ::node	0.1.0.1.2.0	back	21-22
# ::node	0.1.1	accident	11-12
# ::node	0.1.2	lose-02	13-14
# ::node	0.1.2.0	he	43-44
# ::node	0.1.2.1	memory	15-16
# ::node	0.1.3	possible	32-33
# ::node	0.1.3.0	true	35-36
# ::node	0.1.3.0.0	see-01	39-40
# ::node	0.1.3.0.0.0	someone	36-37
# ::node	0.1.3.0.0.1	now	42-43
# ::node	0.2	yes	3-4
# ::root	0	say-01
# ::edge	and	op1	accident	0.1	0.1.1	
# ::edge	and	op2	lose-02	0.1	0.1.2	
# ::edge	and	op3	possible	0.1	0.1.3	
# ::edge	argue-01	ARG0	voice	0.1.0.1	0.1.0.1.0	
# ::edge	argue-01	ARG1	within	0.1.0.1	0.1.0.1.1	
# ::edge	argue-01	mod	then	0.1.0.1	0.1.0.1.2	
# ::edge	back	op1	then	0.1.0.1.2.0	0.1.0.1.2	
# ::edge	contrast-01	ARG0	ridiculous	0.1.0	0.1.0.0	
# ::edge	contrast-01	ARG1	argue-01	0.1.0	0.1.0.1	
# ::edge	contrast-01	ARG2	and	0.1.0	0.1	
# ::edge	lose-02	ARG0	he	0.1.2	0.1.2.0	
# ::edge	lose-02	ARG1	memory	0.1.2	0.1.2.1	
# ::edge	possible	domain	true	0.1.3	0.1.3.0	
# ::edge	say-01	ARG0	i	0	0.0	
# ::edge	say-01	ARG1	and	0	0.1	
# ::edge	say-01	location	yes	0	0.2	
# ::edge	see-01	ARG0	someone	0.1.3.0.0	0.1.3.0.0.0	
# ::edge	see-01	time	now	0.1.3.0.0	0.1.3.0.0.1	
# ::edge	true	domain	see-01	0.1.3.0	0.1.3.0.0	
(s3 / say-01 
      :ARG0 (i / i) 
      :ARG1 (a2 / and 
            :ARG2-of (c / contrast-01 
                  :ARG0 (r / ridiculous) 
                  :ARG1 (a / argue-01 
                        :ARG0 (v / voice) 
                        :ARG1 (w / within) 
                        :mod (t2 / then 
                              :op-of (b / back)))) 
            :op1 (a3 / accident) 
            :op2 (l / lose-02 
                  :ARG0 (h / he) 
                  :ARG1 (m / memory)) 
            :op3 (p / possible 
                  :domain (t / true 
                        :domain (s / see-01 
                              :ARG0 (s2 / someone) 
                              :time (n / now))))) 
      :location (y / yes))

# ::snt and if it is what room is there left for morality any morality  is not williams argument one which leads to the rejection not of utilitarianism alone but of any morality not based on the accident of the agents own projects
# ::tok and if it is what room is there left for morality any morality is not williams argument one which leads to the rejection not of utilitarianism alone but of any morality not based on the accident of the agents own projects
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:35.332
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt mystery surrounding the accident inquiry has deepened because the company had no documentary evidence about how the ship was constructed according to a leaked memorandum dated july 1 1985
# ::tok mystery surrounding the accident inquiry has deepened because the company had no documentary evidence about how the ship was constructed according to a leaked memorandum dated july 1 1985
# ::alignments 26-29|0.0.1.1.2.2+0.0.1.1.2.1+0.0.1.1.2.0+0.0.1.1.2 25-26|0.0.1.1 24-25|0.0.1.1.1 23-24|0.0.1.1.1.0 19-20|0.0.1.1.0.0 17-18|0.0.1.1.0 13-14|0.0.1.1.0.0.0 12-13|0.0.1.1.0.0.0.0 11-12|0.0.1.1.0.0.0.1 9-10|0.1 7-8|0 4-5|0.0.1 3-4|0.0.1.0 1-2|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:35.732
# ::node	0	cause-01	7-8
# ::node	0.0	surround-01	1-2
# ::node	0.0.0	mystery	0-1
# ::node	0.0.1	inquire-01	4-5
# ::node	0.0.1.0	accident	3-4
# ::node	0.0.1.1	date-01	25-26
# ::node	0.0.1.1.0	ship	17-18
# ::node	0.0.1.1.0.0	construct-01	19-20
# ::node	0.0.1.1.0.0.0	evidence-01	13-14
# ::node	0.0.1.1.0.0.0.0	documentary	12-13
# ::node	0.0.1.1.0.0.0.1	-	11-12
# ::node	0.0.1.1.1	memorandum	24-25
# ::node	0.0.1.1.1.0	leak-01	23-24
# ::node	0.0.1.1.2	date-entity	26-29
# ::node	0.0.1.1.2.0	1	26-29
# ::node	0.0.1.1.2.1	7	26-29
# ::node	0.0.1.1.2.2	1985	26-29
# ::node	0.1	company	9-10
# ::root	0	cause-01
# ::edge	cause-01	ARG1	surround-01	0	0.0	
# ::edge	cause-01	ARG2	company	0	0.1	
# ::edge	construct-01	ARG1	ship	0.0.1.1.0.0	0.0.1.1.0	
# ::edge	date-01	ARG0	ship	0.0.1.1	0.0.1.1.0	
# ::edge	date-01	ARG1	memorandum	0.0.1.1	0.0.1.1.1	
# ::edge	date-01	instrument	date-entity	0.0.1.1	0.0.1.1.2	
# ::edge	date-entity	day	1	0.0.1.1.2	0.0.1.1.2.0	
# ::edge	date-entity	month	7	0.0.1.1.2	0.0.1.1.2.1	
# ::edge	date-entity	year	1985	0.0.1.1.2	0.0.1.1.2.2	
# ::edge	evidence-01	ARG2	construct-01	0.0.1.1.0.0.0	0.0.1.1.0.0	
# ::edge	evidence-01	mod	documentary	0.0.1.1.0.0.0	0.0.1.1.0.0.0.0	
# ::edge	evidence-01	polarity	-	0.0.1.1.0.0.0	0.0.1.1.0.0.0.1	
# ::edge	inquire-01	ARG0	accident	0.0.1	0.0.1.0	
# ::edge	inquire-01	ARG1	date-01	0.0.1	0.0.1.1	
# ::edge	leak-01	ARG1	memorandum	0.0.1.1.1.0	0.0.1.1.1	
# ::edge	surround-01	ARG1	mystery	0.0	0.0.0	
# ::edge	surround-01	ARG2	inquire-01	0.0	0.0.1	
(c3 / cause-01 
      :ARG1 (s2 / surround-01 
            :ARG1 (m2 / mystery) 
            :ARG2 (i / inquire-01 
                  :ARG0 (a / accident) 
                  :ARG1 (d2 / date-01 
                        :ARG0 (s / ship 
                              :ARG1-of (c / construct-01 
                                    :ARG2-of (e / evidence-01 
                                          :mod (d3 / documentary) 
                                          :polarity (- / -)))) 
                        :ARG1 (m / memorandum 
                              :ARG1-of (l / leak-01)) 
                        :instrument (d / date-entity 
                              :day 1 
                              :month 7 
                              :year 1985)))) 
      :ARG2 (c2 / company))

# ::snt although the plaintiff without any fault of her own was suddenly thrown on the ground she could not recover damages from the council because she had not shown that the council was negligent in the way that it looked after the girl and that the accident was the result of that negligence
# ::tok although the plaintiff without any fault of her own was suddenly thrown on the ground she could not recover damages from the council because she had not shown that the council was negligent in the way that it looked after the girl and that the accident was the result of that negligence
# ::alignments 51-52|0.0.3.1.0 48-49|0.0.3.1 45-46|0.0.3.1.1 42-43|0.0.3 41-42|0.0.3.0.1 39-40|0.0.3.0.2 38-39|0.0.3.0 37-38|0.0.3.0.0 35-36|0.0.1.0 32-33|0.0.1 30-31|0.0.1.1 27-28|0.0 24-25|0.0.0 23-24|0 22-23|0.1.1.1 19-20|0.1.1 18-19|0.1 16-17|0.1.2 15-16|0.1.0 14-15|0.1.1.0 11-12|0.1.1.0.0 10-11|0.1.1.0.0.0 5-6|0.0.2 4-5|0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:37.027
# ::node	0	cause-01	23-24
# ::node	0.0	show-01	27-28
# ::node	0.0.0	she	24-25
# ::node	0.0.1	negligent	32-33
# ::node	0.0.1.0	way	35-36
# ::node	0.0.1.1	council	30-31
# ::node	0.0.2	fault-01	5-6
# ::node	0.0.2.0	any	4-5
# ::node	0.0.3	and	42-43
# ::node	0.0.3.0	look-01	38-39
# ::node	0.0.3.0.0	it	37-38
# ::node	0.0.3.0.1	girl	41-42
# ::node	0.0.3.0.2	after	39-40
# ::node	0.0.3.1	result-01	48-49
# ::node	0.0.3.1.0	neglect-01	51-52
# ::node	0.0.3.1.1	accident	45-46
# ::node	0.1	recover-02	18-19
# ::node	0.1.0	she	15-16
# ::node	0.1.1	damage-01	19-20
# ::node	0.1.1.0	ground	14-15
# ::node	0.1.1.0.0	throw-01	11-12
# ::node	0.1.1.0.0.0	sudden	10-11
# ::node	0.1.1.1	council	22-23
# ::node	0.1.2	possible	16-17
# ::root	0	cause-01
# ::edge	and	op1	show-01	0.0.3	0.0	
# ::edge	and	op2	look-01	0.0.3	0.0.3.0	
# ::edge	and	op3	result-01	0.0.3	0.0.3.1	
# ::edge	cause-01	ARG0	show-01	0	0.0	
# ::edge	cause-01	ARG1	recover-02	0	0.1	
# ::edge	damage-01	ARG0	ground	0.1.1	0.1.1.0	
# ::edge	damage-01	ARG1	council	0.1.1	0.1.1.1	
# ::edge	fault-01	ARG1	show-01	0.0.2	0.0	
# ::edge	fault-01	mod	any	0.0.2	0.0.2.0	
# ::edge	look-01	ARG0	it	0.0.3.0	0.0.3.0.0	
# ::edge	look-01	ARG1	girl	0.0.3.0	0.0.3.0.1	
# ::edge	look-01	time	after	0.0.3.0	0.0.3.0.2	
# ::edge	negligent	compared-to	way	0.0.1	0.0.1.0	
# ::edge	negligent	domain	council	0.0.1	0.0.1.1	
# ::edge	possible	domain	recover-02	0.1.2	0.1	
# ::edge	recover-02	ARG0	she	0.1	0.1.0	
# ::edge	recover-02	ARG1	damage-01	0.1	0.1.1	
# ::edge	result-01	ARG1	neglect-01	0.0.3.1	0.0.3.1.0	
# ::edge	result-01	ARG2	accident	0.0.3.1	0.0.3.1.1	
# ::edge	show-01	ARG0	she	0.0	0.0.0	
# ::edge	show-01	ARG1	negligent	0.0	0.0.1	
# ::edge	throw-01	ARG2	ground	0.1.1.0.0	0.1.1.0	
# ::edge	throw-01	manner	sudden	0.1.1.0.0	0.1.1.0.0.0	
(c2 / cause-01 
      :ARG0 (s / show-01 
            :ARG0 (s2 / she) 
            :ARG1 (n2 / negligent 
                  :compared-to (w / way) 
                  :domain (c / council)) 
            :ARG1-of (f / fault-01 
                  :mod (a4 / any)) 
            :op-of (a2 / and 
                  :op1 (l / look-01 
                        :ARG0 (i / it) 
                        :ARG1 (g / girl) 
                        :time (a3 / after)) 
                  :op2 (r / result-01 
                        :ARG1 (n / neglect-01) 
                        :ARG2 (a / accident)))) 
      :ARG1 (r2 / recover-02 
            :ARG0 (s3 / she) 
            :ARG1 (d / damage-01 
                  :ARG0 (g2 / ground 
                        :ARG2-of (t / throw-01 
                              :manner (s4 / sudden))) 
                  :ARG1 (c3 / council)) 
            :domain-of (p / possible)))

# ::snt i heard about this awful accident on the radio and im worried sick ellip
# ::tok i heard about this awful accident on the radio and im worried sick ellip
# ::alignments 12-13|0.1.1 11-12|0 9-10|0.1 8-9|0.0 5-6|0.1.0 4-5|0.1.0.1 3-4|0.1.0.2 1-2|0.1.0.0 0-1|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:37.059
# ::node	0	worry-02	11-12
# ::node	0.0	radio	8-9
# ::node	0.1	and	9-10
# ::node	0.1.0	accident	5-6
# ::node	0.1.0.0	hear-01	1-2
# ::node	0.1.0.0.0	i	0-1
# ::node	0.1.0.1	awful	4-5
# ::node	0.1.0.2	this	3-4
# ::node	0.1.1	sick	12-13
# ::root	0	worry-02
# ::edge	accident	degree	awful	0.1.0	0.1.0.1	
# ::edge	accident	mod	this	0.1.0	0.1.0.2	
# ::edge	and	op1	accident	0.1	0.1.0	
# ::edge	and	op2	worry-02	0.1	0	
# ::edge	and	op3	sick	0.1	0.1.1	
# ::edge	hear-01	ARG0	i	0.1.0.0	0.1.0.0.0	
# ::edge	hear-01	ARG1	accident	0.1.0.0	0.1.0	
# ::edge	worry-02	ARG1	radio	0	0.0	
(w / worry-02 
      :ARG1 (r / radio) 
      :op-of (a / and 
            :op1 (a2 / accident 
                  :ARG1-of (h / hear-01 
                        :ARG0 (i / i)) 
                  :degree (a3 / awful) 
                  :mod (t / this)) 
            :op2 (s / sick)))

# ::snt in the accident and emergency department anthony cross the consultant in charge was ventilating the lungs of a man in his 60s who had taken an overdose
# ::tok in the accident and emergency department anthony cross the consultant in charge was ventilating the lungs of a man in his 60s who had taken an overdose
# ::alignments 21-22|0.1.1 18-19|0.1.1.0 9-10|0.1.0+0.1 7-8|0 5-6|0.0.1 4-5|0.0.1.0 3-4|0.0 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:37.129
# ::node	0	cross-02	7-8
# ::node	0.0	and	3-4
# ::node	0.0.0	accident	2-3
# ::node	0.0.1	department	5-6
# ::node	0.0.1.0	emergency	4-5
# ::node	0.1	person	9-10
# ::node	0.1.0	consult-01	9-10
# ::node	0.1.1	60	21-22
# ::node	0.1.1.0	man	18-19
# ::root	0	cross-02
# ::edge	60	poss	person	0.1.1	0.1	
# ::edge	and	op1	accident	0.0	0.0.0	
# ::edge	and	op2	department	0.0	0.0.1	
# ::edge	consult-01	ARG0	person	0.1.0	0.1	
# ::edge	cross-02	ARG0	and	0	0.0	
# ::edge	cross-02	ARG1	person	0	0.1	
# ::edge	department	mod	emergency	0.0.1	0.0.1.0	
# ::edge	man	source	60	0.1.1.0	0.1.1	
(c2 / cross-02 
      :ARG0 (a / and 
            :op1 (a2 / accident) 
            :op2 (d / department 
                  :mod (e / emergency))) 
      :ARG1 (p / person 
            :ARG0-of (c / consult-01) 
            :poss-of (6 / 60 
                  :source-of (m / man))))

# ::snt based on a successful german scheme it would provide blood group allergies and other vital medical information to aid doctors in the event of an accident
# ::tok based on a successful german scheme it would provide blood group allergies and other vital medical information to aid doctors in the event of an accident
# ::alignments 25-26|0.0.2.2.0 22-23|0.0.2.2 19-20|0.0.2.1 18-19|0.0.2 16-17|0.0.2.3 15-16|0.0.2.3.2 14-15|0.0.2.3.0 13-14|0.0.2.3.1 12-13|0 10-11|0.0.2.0 9-10|0.0.2.0.0 8-9|0.0 6-7|0.0.0 5-6|0.0.1 3-4|0.0.1.0 0-1|0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:37.549
# ::node	0	and	12-13
# ::node	0.0	provide-01	8-9
# ::node	0.0.0	it	6-7
# ::node	0.0.1	scheme	5-6
# ::node	0.0.1.0	succeed-01	3-4
# ::node	0.0.1.1	base-01	0-1
# ::node	0.0.2	aid-01	18-19
# ::node	0.0.2.0	group	10-11
# ::node	0.0.2.0.0	blood	9-10
# ::node	0.0.2.1	doctor	19-20
# ::node	0.0.2.2	event	22-23
# ::node	0.0.2.2.0	accident	25-26
# ::node	0.0.2.3	information	16-17
# ::node	0.0.2.3.0	vital	14-15
# ::node	0.0.2.3.1	other	13-14
# ::node	0.0.2.3.2	medicine	15-16
# ::root	0	and
(a3 / and 
      :ARG1-of (p / provide-01 
            :ARG0 (i2 / it) 
            :manner (s / scheme 
                  :ARG1-of (s2 / succeed-01) 
                  :location-of (b2 / base-01)) 
            :purpose (a2 / aid-01 
                  :ARG0 (g / group 
                        :mod (b / blood)) 
                  :ARG1 (d / doctor) 
                  :ARG2 (e / event 
                        :location (a / accident)) 
                  :mod-of (i / information 
                        :mod (v / vital) 
                        :mod (o / other) 
                        :mod (m / medicine)))))

# ::snt a bit sluggish on the motorways the m40 the m4 especially at the thames valley interchange with the m25 there are some delays there its making heavy traffic eastbound on the m4 also weve just heard an accident on the clockwise carriageway of the m25 at the m4 interchange and there are delays both ways clockwise and anticlockwise
# ::tok a bit sluggish on the motorways the m40 the m4 especially at the thames valley interchange with the m25 there are some delays there its making heavy traffic eastbound on the m4 also weve just heard an accident on the clockwise carriageway of the m25 at the m4 interchange and there are delays both ways clockwise and anticlockwise
# ::alignments 56-57|0.1.3.0.1 54-55|0.1.3.0.1.0 53-54|0.1.3.0.0 52-53|0.1.3.0 49-50|0.1.3 37-38|0.1.1 35-36|0.1 34-35|0.1.2 32-33|0.1.3.0.2 27-28|0.1.0 26-27|0.1.0.0 22-23|0 21-22|0.4 13-15|0.0.0.0+0.0.0.1+0.0.0+0.0 10-11|0.3 2-3|0.2.0 1-2|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:38.024
# ::node	0	delay-01	22-23
# ::node	0.0	country	13-15
# ::node	0.0.0	name	13-15
# ::node	0.0.0.0	"valley"	13-15
# ::node	0.0.0.1	"thames"	13-15
# ::node	0.1	hear-01	35-36
# ::node	0.1.0	traffic	27-28
# ::node	0.1.0.0	heavy	26-27
# ::node	0.1.1	accident	37-38
# ::node	0.1.2	just	34-35
# ::node	0.1.3	and	49-50
# ::node	0.1.3.0	delay-01	52-53
# ::node	0.1.3.0.0	both	53-54
# ::node	0.1.3.0.1	and	56-57
# ::node	0.1.3.0.1.0	way	54-55
# ::node	0.1.3.0.2	also	32-33
# ::node	0.2	bit	1-2
# ::node	0.2.0	sluggish	2-3
# ::node	0.3	especially	10-11
# ::node	0.4	some	21-22
# ::root	0	delay-01
# ::edge	also	op1	delay-01	0.1.3.0.2	0.1.3.0	
# ::edge	and	op1	hear-01	0.1.3	0.1	
# ::edge	and	op1	way	0.1.3.0.1	0.1.3.0.1.0	
# ::edge	and	op2	delay-01	0.1.3	0.1.3.0	
# ::edge	bit	op1	delay-01	0.2	0	
# ::edge	country	name	name	0.0	0.0.0	
# ::edge	delay-01	ARG0	both	0.1.3.0	0.1.3.0.0	
# ::edge	delay-01	ARG0	country	0	0.0	
# ::edge	delay-01	ARG1	and	0.1.3.0	0.1.3.0.1	
# ::edge	delay-01	ARG2	hear-01	0	0.1	
# ::edge	delay-01	quant	some	0	0.4	
# ::edge	especially	op1	delay-01	0.3	0	
# ::edge	hear-01	ARG0	traffic	0.1	0.1.0	
# ::edge	hear-01	ARG1	accident	0.1	0.1.1	
# ::edge	hear-01	mod	just	0.1	0.1.2	
# ::edge	name	op1	"valley"	0.0.0	0.0.0.0	
# ::edge	name	op2	"thames"	0.0.0	0.0.0.1	
# ::edge	sluggish	degree	bit	0.2.0	0.2	
# ::edge	traffic	mod	heavy	0.1.0	0.1.0.0	
(d2 / delay-01 
      :ARG0 (c / country 
            :name (n / name 
                  :op1 "valley" 
                  :op2 "thames")) 
      :ARG2 (h / hear-01 
            :ARG0 (t / traffic 
                  :mod (h2 / heavy)) 
            :ARG1 (a3 / accident) 
            :mod (j / just) 
            :op-of (a2 / and 
                  :op1 (d / delay-01 
                        :ARG0 (b / both) 
                        :ARG1 (a / and 
                              :op1 (w / way)) 
                        :op-of (a4 / also)))) 
      :op-of (b2 / bit 
            :degree-of (s2 / sluggish)) 
      :op-of (e / especially) 
      :quant (s / some))

# ::snt keeping a knife as sharp as possible also reduces the risk of accidents in the kitchen and makes the cooks job much easier
# ::tok keeping a knife as sharp as possible also reduces the risk of accidents in the kitchen and makes the cooks job much easier
# ::alignments 22-23|0.1.0.0 21-22|0.2.0 20-21|0.1.0 16-17|0 12-13|0.2.1 10-11|0.2 8-9|0.1 7-8|0.1.2 6-7|0.0 4-5|0.1.1.0 2-3|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:38.102
# ::node	0	and	16-17
# ::node	0.0	possible	6-7
# ::node	0.1	reduce-01	8-9
# ::node	0.1.0	job	20-21
# ::node	0.1.0.0	easy	22-23
# ::node	0.1.1	knife	2-3
# ::node	0.1.1.0	sharp	4-5
# ::node	0.1.2	also	7-8
# ::node	0.2	risk-01	10-11
# ::node	0.2.0	much	21-22
# ::node	0.2.1	accident	12-13
# ::root	0	and
# ::edge	and	op1	possible	0	0.0	
# ::edge	and	op2	reduce-01	0	0.1	
# ::edge	and	op3	risk-01	0	0.2	
# ::edge	job	mod	easy	0.1.0	0.1.0.0	
# ::edge	knife	mod	sharp	0.1.1	0.1.1.0	
# ::edge	reduce-01	ARG0	job	0.1	0.1.0	
# ::edge	reduce-01	ARG1	knife	0.1	0.1.1	
# ::edge	reduce-01	mod	also	0.1	0.1.2	
# ::edge	risk-01	ARG0	much	0.2	0.2.0	
# ::edge	risk-01	ARG1	accident	0.2	0.2.1	
(a / and 
      :op1 (p / possible) 
      :op2 (r2 / reduce-01 
            :ARG0 (j / job 
                  :mod (e / easy)) 
            :ARG1 (k / knife 
                  :mod (s / sharp)) 
            :mod (a3 / also)) 
      :op3 (r / risk-01 
            :ARG0 (m / much) 
            :ARG1 (a2 / accident)))

# ::snt the congestion caused at the junction of howard street and the cowley road will eventually result in an accident and i am surprised that the emergency services did not object to the introduction of this scheme
# ::tok the congestion caused at the junction of howard street and the cowley road will eventually result in an accident and i am surprised that the emergency services did not object to the introduction of this scheme
# ::alignments 35-36|0.1.2.1.0 34-35|0.1.2.1.0.0 32-33|0.1.2.1 29-30|0.1.2 26-27|0.1.2.0 25-26|0.1.2.0.0 22-23|0.1.1 20-21|0.1.1.0 19-20|0.1 18-19|0.1.0.0 15-16|0.1.0 14-15|0.1.0.1 12-13|0.0.0.1 9-10|0.0.0 8-9|0.0.0.0 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:38.308
# ::node	0	cause-01	2-3
# ::node	0.0	congest-01	1-2
# ::node	0.0.0	and	9-10
# ::node	0.0.0.0	street	8-9
# ::node	0.0.0.1	road	12-13
# ::node	0.1	and	19-20
# ::node	0.1.0	result-01	15-16
# ::node	0.1.0.0	accident	18-19
# ::node	0.1.0.1	eventual	14-15
# ::node	0.1.1	surprise-01	22-23
# ::node	0.1.1.0	i	20-21
# ::node	0.1.2	object	29-30
# ::node	0.1.2.0	service	26-27
# ::node	0.1.2.0.0	emergency	25-26
# ::node	0.1.2.1	introduce-02	32-33
# ::node	0.1.2.1.0	scheme	35-36
# ::node	0.1.2.1.0.0	this	34-35
# ::root	0	cause-01
# ::edge	and	op1	result-01	0.1	0.1.0	
# ::edge	and	op1	street	0.0.0	0.0.0.0	
# ::edge	and	op2	road	0.0.0	0.0.0.1	
# ::edge	and	op2	surprise-01	0.1	0.1.1	
# ::edge	and	op3	object	0.1	0.1.2	
# ::edge	cause-01	ARG0	congest-01	0	0.0	
# ::edge	cause-01	ARG1	and	0	0.1	
# ::edge	congest-01	ARG1	and	0.0	0.0.0	
# ::edge	introduce-02	ARG1	scheme	0.1.2.1	0.1.2.1.0	
# ::edge	object	mod	service	0.1.2	0.1.2.0	
# ::edge	object	prep-to	introduce-02	0.1.2	0.1.2.1	
# ::edge	result-01	ARG1	accident	0.1.0	0.1.0.0	
# ::edge	result-01	time	eventual	0.1.0	0.1.0.1	
# ::edge	scheme	mod	this	0.1.2.1.0	0.1.2.1.0.0	
# ::edge	service	mod	emergency	0.1.2.0	0.1.2.0.0	
# ::edge	surprise-01	ARG1	i	0.1.1	0.1.1.0	
(c / cause-01 
      :ARG0 (c2 / congest-01 
            :ARG1 (a3 / and 
                  :op1 (s4 / street) 
                  :op2 (r2 / road))) 
      :ARG1 (a / and 
            :op1 (r / result-01 
                  :ARG1 (a2 / accident) 
                  :time (e2 / eventual)) 
            :op2 (s3 / surprise-01 
                  :ARG1 (i2 / i)) 
            :op3 (o / object 
                  :mod (s2 / service 
                        :mod (e / emergency)) 
                  :prep-to (i / introduce-02 
                        :ARG1 (s / scheme 
                              :mod (t / this))))))

# ::snt a few days before the mike accident a soviet submarine captain based at northern fleets headquarters in murmansk wrote in a trade union paper that many crew were so poorly trained that they know and can cope with only 30 to 50 per cent of what they should be capable of handling
# ::tok a few days before the mike accident a soviet submarine captain based at northern fleets headquarters in murmansk wrote in a trade union paper that many crew were so poorly trained that they know and can cope with only 30 to 50 per cent of what they should be capable of handling
# ::alignments 51-52|0.0.3.0.1 49-50|0.0.3.0 47-48|0.0.3 46-47|0.0.3.0.1.0 43-44|0.0.3.0.0.0+0.0.3.0.0 41-42|0.0.1.0 39-40|0.0.0.1 38-39|0.0.2.1 36-37|0.0.2.0.0 35-36|0 34-35|0.0 33-34|0.0.2 32-33|0.0.2.0 30-31|0.0.1 29-30|0.0.1.2 28-29|0.0.1.3 26-27|0.0.1.1 25-26|0.0.1.1.0 23-24|0.0.0.2 22-23|0.0.0.2.0 21-22|0.0.0.2.0.0 18-19|0.0.0 15-16|0.0.0.2.0.0.0 14-15|0.0.0.2.0.0.0.1 13-14|0.0.0.2.0.0.0.2 11-12|0.0.0.2.0.0.0.0 10-11|0.0.0.2.0.0.0.0.0.1+0.0.0.2.0.0.0.0.0 9-10|0.0.0.2.0.0.0.0.0.0 6-7|0.0.0.0 3-4|0.0.0.0.0 2-3|0.0.0.2.1.1+0.0.0.2.1 1-2|0.0.0.2.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:39.731
# ::node	0	possible	35-36
# ::node	0.0	and	34-35
# ::node	0.0.0	write-01	18-19
# ::node	0.0.0.0	accident	6-7
# ::node	0.0.0.0.0	before	3-4
# ::node	0.0.0.1	30	39-40
# ::node	0.0.0.2	paper	23-24
# ::node	0.0.0.2.0	union	22-23
# ::node	0.0.0.2.0.0	trade-01	21-22
# ::node	0.0.0.2.0.0.0	headquarters	15-16
# ::node	0.0.0.2.0.0.0.0	base-01	11-12
# ::node	0.0.0.2.0.0.0.0.0	have-org-role-91	10-11
# ::node	0.0.0.2.0.0.0.0.0.0	submarine	9-10
# ::node	0.0.0.2.0.0.0.0.0.1	captain	10-11
# ::node	0.0.0.2.0.0.0.1	fleet	14-15
# ::node	0.0.0.2.0.0.0.2	north	13-14
# ::node	0.0.0.2.1	temporal-quantity	2-3
# ::node	0.0.0.2.1.0	few	1-2
# ::node	0.0.0.2.1.1	day	2-3
# ::node	0.0.1	train-01	30-31
# ::node	0.0.1.0	50	41-42
# ::node	0.0.1.1	crew	26-27
# ::node	0.0.1.1.0	many	25-26
# ::node	0.0.1.2	poor	29-30
# ::node	0.0.1.3	so	28-29
# ::node	0.0.2	know-01	33-34
# ::node	0.0.2.0	they	32-33
# ::node	0.0.2.0.0	cope-01	36-37
# ::node	0.0.2.1	only	38-39
# ::node	0.0.3	recommend-01	47-48
# ::node	0.0.3.0	capable-41	49-50
# ::node	0.0.3.0.0	monetary-quantity	43-44
# ::node	0.0.3.0.0.0	cent	43-44
# ::node	0.0.3.0.1	handle-01	51-52
# ::node	0.0.3.0.1.0	they	46-47
# ::root	0	possible
(p / possible 
      :op-of (a / and 
            :op1 (w / write-01 
                  :ARG0 (a2 / accident 
                        :op-of (b2 / before)) 
                  :ARG1 30 
                  :medium (p3 / paper 
                        :mod (u / union 
                              :mod (t4 / trade-01 
                                    :ARG0 (h2 / headquarters 
                                          :ARG2-of (b / base-01 
                                                :ARG0 (h3 / have-org-role-91 
                                                      :ARG1 (s2 / submarine) 
                                                      :ARG2 (c5 / captain))) 
                                          :mod (f / fleet) 
                                          :mod (n / north)))) 
                        :poss-of (t5 / temporal-quantity 
                              :op-of (f2 / few) 
                              :unit (d / day)))) 
            :op2 (t3 / train-01 
                  :ARG0 50 
                  :ARG1 (c4 / crew 
                        :quant (m2 / many)) 
                  :manner (p2 / poor) 
                  :mod (s / so)) 
            :op3 (k / know-01 
                  :ARG0 (t2 / they 
                        :ARG0-of (c3 / cope-01)) 
                  :ARG1 (o / only)) 
            :op4 (r / recommend-01 
                  :ARG1 (c / capable-41 
                        :ARG1 (m / monetary-quantity 
                              :unit (c2 / cent)) 
                        :ARG2 (h / handle-01 
                              :ARG0 (t / they))))))

# ::snt the campaign is a further road accident preventative measure time to cover the busy spring and summer season she said
# ::tok the campaign is a further road accident preventative measure time to cover the busy spring and summer season she said
# ::alignments 19-20|0 18-19|0.0 17-18|0.1.2 16-17|0.1.2.0 15-16|0.1 14-15|0.1.1 13-14|0.1.1.0 9-10|0.1.2.0.0 8-9|0.1.2.0.0.1 7-8|0.1.2.0.0.0 6-7|0.1.0.0 5-6|0.1.0.0.0 4-5|0.1.0.0.1 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:40.012
# ::node	0	say-01	19-20
# ::node	0.0	she	18-19
# ::node	0.1	and	15-16
# ::node	0.1.0	campaign-01	1-2
# ::node	0.1.0.0	accident	6-7
# ::node	0.1.0.0.0	road	5-6
# ::node	0.1.0.0.1	further	4-5
# ::node	0.1.1	spring	14-15
# ::node	0.1.1.0	busy	13-14
# ::node	0.1.2	season	17-18
# ::node	0.1.2.0	summer	16-17
# ::node	0.1.2.0.0	time	9-10
# ::node	0.1.2.0.0.0	prevent-01	7-8
# ::node	0.1.2.0.0.1	measure	8-9
# ::root	0	say-01
# ::edge	accident	location	road	0.1.0.0	0.1.0.0.0	
# ::edge	accident	mod	further	0.1.0.0	0.1.0.0.1	
# ::edge	accident	name	campaign-01	0.1.0.0	0.1.0	
# ::edge	and	domain	campaign-01	0.1	0.1.0	
# ::edge	and	op1	spring	0.1	0.1.1	
# ::edge	and	op2	season	0.1	0.1.2	
# ::edge	prevent-01	ARG1	time	0.1.2.0.0.0	0.1.2.0.0	
# ::edge	say-01	ARG0	she	0	0.0	
# ::edge	say-01	ARG1	and	0	0.1	
# ::edge	season	mod	summer	0.1.2	0.1.2.0	
# ::edge	spring	mod	busy	0.1.1	0.1.1.0	
# ::edge	summer	op1	time	0.1.2.0	0.1.2.0.0	
# ::edge	time	location	measure	0.1.2.0.0	0.1.2.0.0.1	
(s / say-01 
      :ARG0 (s2 / she) 
      :ARG1 (a / and 
            :domain (c / campaign-01 
                  :name-of (a2 / accident 
                        :location (r / road) 
                        :mod (f / further))) 
            :op1 (s5 / spring 
                  :mod (b / busy)) 
            :op2 (s3 / season 
                  :mod (s4 / summer 
                        :op1 (t / time 
                              :ARG1-of (p / prevent-01) 
                              :location (m / measure))))))

# ::snt the accident happened at about 835am
# ::tok the accident happened at about 835am
# ::alignments 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:40.018
# ::node	0	happen-01	2-3
# ::node	0.0	accident	1-2
# ::root	0	happen-01
# ::edge	happen-01	ARG1	accident	0	0.0	
(h / happen-01 
      :ARG1 (a / accident))

# ::snt on merseyside crews voted on monday to refuse to take nonemergency accident patients home after treatment and to limit other services from tomorrow
# ::tok on merseyside crews voted on monday to refuse to take nonemergency accident patients home after treatment and to limit other services from tomorrow
# ::alignments 22-23|0.0.0.0.0.0.0 20-21|0.0.0.0.0.0 19-20|0.0.0.0.0.0.1 18-19|0.0.0.0.0 16-17|0.0.0.0 15-16|0.0.0.1 14-15|0.0.0 13-14|0.0 12-13|0.0.0.2.0+0.0.0.2 11-12|0.0.0.2.0.0 7-8|0 3-4|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:40.190
# ::node	0	refuse-01	7-8
# ::node	0.0	home	13-14
# ::node	0.0.0	after	14-15
# ::node	0.0.0.0	and	16-17
# ::node	0.0.0.0.0	limit-01	18-19
# ::node	0.0.0.0.0.0	service	20-21
# ::node	0.0.0.0.0.0.0	tomorrow	22-23
# ::node	0.0.0.0.0.0.1	other	19-20
# ::node	0.0.0.1	treat-03	15-16
# ::node	0.0.0.2	have-rel-role-91	12-13
# ::node	0.0.0.2.0	patient	12-13
# ::node	0.0.0.2.0.0	accident	11-12
# ::node	0.1	vote-01	3-4
# ::root	0	refuse-01
# ::edge	after	op1	treat-03	0.0.0	0.0.0.1	
# ::edge	and	op1	after	0.0.0.0	0.0.0	
# ::edge	and	op2	limit-01	0.0.0.0	0.0.0.0.0	
# ::edge	have-rel-role-91	ARG2	patient	0.0.0.2	0.0.0.2.0	
# ::edge	have-rel-role-91	time	after	0.0.0.2	0.0.0	
# ::edge	home	op1	after	0.0	0.0.0	
# ::edge	limit-01	ARG1	service	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	patient	mod	accident	0.0.0.2.0	0.0.0.2.0.0	
# ::edge	refuse-01	ARG1	home	0	0.0	
# ::edge	service	location	tomorrow	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	service	mod	other	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	vote-01	ARG1	refuse-01	0.1	0	
(r / refuse-01 
      :ARG1 (h / home 
            :op1 (a2 / after 
                  :op-of (a / and 
                        :op1 (l / limit-01 
                              :ARG1 (s / service 
                                    :location (t / tomorrow) 
                                    :mod (o / other)))) 
                  :op1 (t2 / treat-03) 
                  :time-of (h2 / have-rel-role-91 
                        :ARG2 (p / patient 
                              :mod (a3 / accident))))) 
      :ARG1-of (v / vote-01))

# ::snt however both the photograph caption and the subsequent text leave open the issue of whether sellafield was or was not the cause of the elevated radiocaesium levels measured in cumbrian sheep after the chernobyl accident
# ::tok however both the photograph caption and the subsequent text leave open the issue of whether sellafield was or was not the cause of the elevated radiocaesium levels measured in cumbrian sheep after the chernobyl accident
# ::alignments 34-35|0.1.0 31-32|0.1 30-31|0.1.1.0 27-28|0.1.1 26-27|0.0 24-25|0.0.0 21-22|0 17-18|0.1.1.1 12-13|0.1.1.1.0.1 9-10|0.1.1.1.0 8-9|0.1.1.1.0.0.1 7-8|0.1.1.1.0.0.1.0 5-6|0.1.1.1.0.0 3-4|0.0.0.0 1-2|0.1.1.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:40.363
# ::node	0	cause-01	21-22
# ::node	0.0	level	26-27
# ::node	0.0.0	elevate-01	24-25
# ::node	0.0.0.0	photograph	3-4
# ::node	0.1	after	31-32
# ::node	0.1.0	accident	34-35
# ::node	0.1.1	measure-01	27-28
# ::node	0.1.1.0	sheep	30-31
# ::node	0.1.1.1	or	17-18
# ::node	0.1.1.1.0	leave-01	9-10
# ::node	0.1.1.1.0.0	and	5-6
# ::node	0.1.1.1.0.0.0	both	1-2
# ::node	0.1.1.1.0.0.1	text	8-9
# ::node	0.1.1.1.0.0.1.0	subsequent	7-8
# ::node	0.1.1.1.0.1	issue	12-13
# ::root	0	cause-01
# ::edge	after	op1	accident	0.1	0.1.0	
# ::edge	and	mod	both	0.1.1.1.0.0	0.1.1.1.0.0.0	
# ::edge	and	op1	text	0.1.1.1.0.0	0.1.1.1.0.0.1	
# ::edge	cause-01	ARG0	level	0	0.0	
# ::edge	cause-01	ARG1	after	0	0.1	
# ::edge	elevate-01	ARG0	photograph	0.0.0	0.0.0.0	
# ::edge	elevate-01	ARG1	level	0.0.0	0.0	
# ::edge	leave-01	ARG0	and	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	leave-01	ARG1	issue	0.1.1.1.0	0.1.1.1.0.1	
# ::edge	measure-01	ARG1	sheep	0.1.1	0.1.1.0	
# ::edge	measure-01	time	after	0.1.1	0.1	
# ::edge	or	op1	leave-01	0.1.1.1	0.1.1.1.0	
# ::edge	or	op2	measure-01	0.1.1.1	0.1.1	
# ::edge	text	mod	subsequent	0.1.1.1.0.0.1	0.1.1.1.0.0.1.0	
(c / cause-01 
      :ARG0 (l / level 
            :ARG1-of (e / elevate-01 
                  :ARG0 (p / photograph))) 
      :ARG1 (a2 / after 
            :op1 (a / accident) 
            :time-of (m / measure-01 
                  :ARG1 (s / sheep) 
                  :op-of (o / or 
                        :op1 (l2 / leave-01 
                              :ARG0 (a3 / and 
                                    :mod (b / both) 
                                    :op1 (t / text 
                                          :mod (s2 / subsequent))) 
                              :ARG1 (i / issue))))))

# ::snt the combination in use would not have helped roadholding but would not have caused the accident in isolation
# ::tok the combination in use would not have helped roadholding but would not have caused the accident in isolation
# ::alignments 17-18|0.1.0.0 15-16|0.1.0 13-14|0.1 9-10|0 7-8|0.0 3-4|0.0.0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:40.430
# ::node	0	contrast-01	9-10
# ::node	0.0	help-01	7-8
# ::node	0.0.0	combine-01	1-2
# ::node	0.0.0.0	use-01	3-4
# ::node	0.1	cause-01	13-14
# ::node	0.1.0	accident	15-16
# ::node	0.1.0.0	isolate-01	17-18
# ::root	0	contrast-01
# ::edge	accident	topic	isolate-01	0.1.0	0.1.0.0	
# ::edge	cause-01	ARG1	accident	0.1	0.1.0	
# ::edge	combine-01	ARG1	use-01	0.0.0	0.0.0.0	
# ::edge	contrast-01	ARG1	help-01	0	0.0	
# ::edge	contrast-01	ARG2	cause-01	0	0.1	
# ::edge	help-01	ARG0	combine-01	0.0	0.0.0	
(c2 / contrast-01 
      :ARG1 (h / help-01 
            :ARG0 (c3 / combine-01 
                  :ARG1 (u / use-01))) 
      :ARG2 (c / cause-01 
            :ARG1 (a / accident 
                  :topic (i / isolate-01))))

# ::snt last years budget of 153000 for measures to make accident blackspots safer was also increased by 95000
# ::tok last years budget of 153000 for measures to make accident blackspots safer was also increased by 95000
# ::alignments 14-15|0 13-14|0.2 11-12|0.1 9-10|0.1.2 6-7|0.1.0 4-5|0.1.1.2+0.1.1.1+0.1.1.0+0.1.1 2-3|0.0 1-2|0.0.0.0+0.0.0 0-1|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:40.556
# ::node	0	increase-01	14-15
# ::node	0.0	budget	2-3
# ::node	0.0.0	temporal-quantity	1-2
# ::node	0.0.0.0	year	1-2
# ::node	0.0.0.0.0	last	0-1
# ::node	0.1	safe-41	11-12
# ::node	0.1.0	measure	6-7
# ::node	0.1.1	date-entity	4-5
# ::node	0.1.1.0	0	4-5
# ::node	0.1.1.1	30	4-5
# ::node	0.1.1.2	15	4-5
# ::node	0.1.2	accident	9-10
# ::node	0.2	also	13-14
# ::root	0	increase-01
# ::edge	budget	duration	temporal-quantity	0.0	0.0.0	
# ::edge	date-entity	day	0	0.1.1	0.1.1.0	
# ::edge	date-entity	month	30	0.1.1	0.1.1.1	
# ::edge	date-entity	year	15	0.1.1	0.1.1.2	
# ::edge	increase-01	ARG1	budget	0	0.0	
# ::edge	increase-01	mod	also	0	0.2	
# ::edge	safe-41	ARG0	measure	0.1	0.1.0	
# ::edge	safe-41	ARG1	date-entity	0.1	0.1.1	
# ::edge	safe-41	ARG2	increase-01	0.1	0	
# ::edge	safe-41	compared-to	accident	0.1	0.1.2	
# ::edge	temporal-quantity	unit	year	0.0.0	0.0.0.0	
# ::edge	year	mod	last	0.0.0.0	0.0.0.0.0	
(i / increase-01 
      :ARG1 (b / budget 
            :duration (t / temporal-quantity 
                  :unit (y / year 
                        :mod (l / last)))) 
      :ARG2-of (s / safe-41 
            :ARG0 (m / measure) 
            :ARG1 (d / date-entity 
                  :day 0 
                  :month 30 
                  :year 15) 
            :compared-to (a2 / accident)) 
      :mod (a / also))

# ::snt the county surveyor john peverelcooper this week spotlighted the accident toll on oxfordshire roads, he took the unprecedented step of writing to all county councillors to express his disappointment over the latest road accident figures
# ::tok the county surveyor john peverelcooper this week spotlighted the accident toll on oxfordshire roads , he took the unprecedented step of writing to all county councillors to express his disappointment over the latest road accident figures
# ::alignments 35-36|0.0.0.1.0.1.0 34-35|0.0.0.1.0.0 33-34|0.0.0.1.0.2 32-33|0.0.0.1.0.2.0.0+0.0.0.1.0.2.0 29-30|0.0.0.1.0 27-28|0.0.0.1.0.1 24-25|0.0.0.1 23-24|0.0.0.1.1 21-22|0.0.0 18-19|0.0.0.1.0.3.0+0.0.0.1.0.3 15-16|0.0.0.0 13-14|0.1 10-11|0 9-10|0.0 6-7|0.0.0.1.0.1.1 5-6|0.0.0.1.0.1.1.0 2-3|0.0.0.1.1.0.0+0.0.0.1.1.0 1-2|0.0.0.1.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:41.707
# ::node	0	toll	10-11
# ::node	0.0	accident	9-10
# ::node	0.0.0	write-01	21-22
# ::node	0.0.0.0	he	15-16
# ::node	0.0.0.1	county	24-25
# ::node	0.0.0.1.0	disappoint-01	29-30
# ::node	0.0.0.1.0.0	accident	34-35
# ::node	0.0.0.1.0.1	express-01	27-28
# ::node	0.0.0.1.0.1.0	figure	35-36
# ::node	0.0.0.1.0.1.1	week	6-7
# ::node	0.0.0.1.0.1.1.0	this	5-6
# ::node	0.0.0.1.0.2	road	33-34
# ::node	0.0.0.1.0.2.0	late	32-33
# ::node	0.0.0.1.0.2.0.0	most	32-33
# ::node	0.0.0.1.0.3	precedent	18-19
# ::node	0.0.0.1.0.3.0	-	18-19
# ::node	0.0.0.1.1	all	23-24
# ::node	0.0.0.1.1.0	person	2-3
# ::node	0.0.0.1.1.0.0	survey-01	2-3
# ::node	0.0.0.1.1.0.0.0	county	1-2
# ::node	0.1	road	13-14
# ::root	0	toll
# ::edge	county	mod	all	0.0.0.1	0.0.0.1.1	
# ::edge	disappoint-01	ARG0	county	0.0.0.1.0	0.0.0.1	
# ::edge	disappoint-01	ARG1	accident	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	disappoint-01	location	road	0.0.0.1.0	0.0.0.1.0.2	
# ::edge	express-01	ARG0	figure	0.0.0.1.0.1	0.0.0.1.0.1.0	
# ::edge	express-01	ARG1	disappoint-01	0.0.0.1.0.1	0.0.0.1.0	
# ::edge	late	degree	most	0.0.0.1.0.2.0	0.0.0.1.0.2.0.0	
# ::edge	person	quant	all	0.0.0.1.1.0	0.0.0.1.1	
# ::edge	precedent	op1	disappoint-01	0.0.0.1.0.3	0.0.0.1.0	
# ::edge	precedent	polarity	-	0.0.0.1.0.3	0.0.0.1.0.3.0	
# ::edge	road	mod	late	0.0.0.1.0.2	0.0.0.1.0.2.0	
# ::edge	survey-01	ARG0	person	0.0.0.1.1.0.0	0.0.0.1.1.0	
# ::edge	survey-01	ARG1	county	0.0.0.1.1.0.0	0.0.0.1.1.0.0.0	
# ::edge	toll	mod	accident	0	0.0	
# ::edge	toll	topic	road	0	0.1	
# ::edge	week	mod	this	0.0.0.1.0.1.1	0.0.0.1.0.1.1.0	
# ::edge	week	op1	express-01	0.0.0.1.0.1.1	0.0.0.1.0.1	
# ::edge	write-01	ARG0	he	0.0.0	0.0.0.0	
# ::edge	write-01	ARG1	accident	0.0.0	0.0	
# ::edge	write-01	ARG2	county	0.0.0	0.0.0.1	
(t / toll 
      :mod (a3 / accident 
            :ARG1-of (w / write-01 
                  :ARG0 (h / he) 
                  :ARG2 (c / county 
                        :ARG0-of (d / disappoint-01 
                              :ARG1 (a / accident) 
                              :ARG1-of (e / express-01 
                                    :ARG0 (f / figure) 
                                    :op-of (w2 / week 
                                          :mod (t2 / this))) 
                              :location (r / road 
                                    :mod (l / late 
                                          :degree (m / most))) 
                              :op-of (p / precedent 
                                    :polarity -)) 
                        :mod (a2 / all 
                              :quant-of (p2 / person 
                                    :ARG0-of (s / survey-01 
                                          :ARG1 (c2 / county))))))) 
      :topic (r2 / road))

# ::snt visibility was less than 30 yards on this stretch when the accident happened
# ::tok visibility was less than 30 yards on this stretch when the accident happened
# ::alignments 12-13|0.1.0 11-12|0.1.0.0 8-9|0.1.0.1+0.1.0.1.0 7-8|0.1.0.1.0.0 5-6|0 4-5|0.1 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:41.738
# ::node	0	yard	5-6
# ::node	0.0	less	2-3
# ::node	0.1	30	4-5
# ::node	0.1.0	happen-01	12-13
# ::node	0.1.0.0	accident	11-12
# ::node	0.1.0.1	stretch-01	8-9
# ::node	0.1.0.1.0	thing	8-9
# ::node	0.1.0.1.0.0	this	7-8
# ::root	0	yard
# ::edge	happen-01	ARG0	30	0.1.0	0.1	
# ::edge	happen-01	ARG1	accident	0.1.0	0.1.0.0	
# ::edge	less	op1	yard	0.0	0	
# ::edge	stretch-01	ARG1	thing	0.1.0.1	0.1.0.1.0	
# ::edge	stretch-01	time	happen-01	0.1.0.1	0.1.0	
# ::edge	thing	mod	this	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	yard	quant	30	0	0.1	
(y / yard 
      :op-of (l / less) 
      :quant (3 / 30 
            :ARG0-of (h / happen-01 
                  :ARG1 (a / accident) 
                  :time-of (s / stretch-01 
                        :ARG1 (t / thing 
                              :mod (t2 / this))))))

# ::snt but it could not have happened to anyone else she was almost forgetting that this had not been exactly a freak accident in the way that everyone thought
# ::tok but it could not have happened to anyone else she was almost forgetting that this had not been exactly a freak accident in the way that everyone thought
# ::alignments 27-28|0.0 26-27|0.0.0 24-25|0.0.1.1.1 21-22|0.0.1.1 20-21|0.0.1 18-19|0.0.2 14-15|0.0.1.1.0 11-12|0.0.1.0 9-10|0.1.0.0 8-9|0.1.0.2 7-8|0.1.0.2.0 5-6|0.1.0 2-3|0.1 1-2|0.1.0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:42.051
# ::node	0	contrast-01	0-1
# ::node	0.0	think-01	27-28
# ::node	0.0.0	everyone	26-27
# ::node	0.0.1	freak-01	20-21
# ::node	0.0.1.0	almost	11-12
# ::node	0.0.1.1	accident	21-22
# ::node	0.0.1.1.0	this	14-15
# ::node	0.0.1.1.1	way	24-25
# ::node	0.0.2	exact	18-19
# ::node	0.1	possible	2-3
# ::node	0.1.0	happen-01	5-6
# ::node	0.1.0.0	she	9-10
# ::node	0.1.0.1	it	1-2
# ::node	0.1.0.2	else	8-9
# ::node	0.1.0.2.0	anyone	7-8
# ::root	0	contrast-01
# ::edge	accident	domain	this	0.0.1.1	0.0.1.1.0	
# ::edge	accident	location	freak-01	0.0.1.1	0.0.1	
# ::edge	accident	location	way	0.0.1.1	0.0.1.1.1	
# ::edge	anyone	mod	else	0.1.0.2.0	0.1.0.2	
# ::edge	contrast-01	ARG1	think-01	0	0.0	
# ::edge	contrast-01	ARG2	possible	0	0.1	
# ::edge	freak-01	ARG1	almost	0.0.1	0.0.1.0	
# ::edge	happen-01	ARG0	she	0.1.0	0.1.0.0	
# ::edge	happen-01	ARG1	it	0.1.0	0.1.0.1	
# ::edge	happen-01	time	else	0.1.0	0.1.0.2	
# ::edge	possible	domain	happen-01	0.1	0.1.0	
# ::edge	think-01	ARG0	everyone	0.0	0.0.0	
# ::edge	think-01	ARG1	freak-01	0.0	0.0.1	
# ::edge	think-01	time	exact	0.0	0.0.2	
(c / contrast-01 
      :ARG1 (t / think-01 
            :ARG0 (e / everyone) 
            :ARG1 (f / freak-01 
                  :ARG1 (a2 / almost) 
                  :location-of (a / accident 
                        :domain (t2 / this) 
                        :location (w / way))) 
            :time (e2 / exact)) 
      :ARG2 (p / possible 
            :domain (h / happen-01 
                  :ARG0 (s / she) 
                  :ARG1 (i / it) 
                  :time (e3 / else 
                        :mod-of (a3 / anyone)))))

# ::snt we also gave other reasons at the time vocal soundum principally the road because the access fronting onto the a forty four there by the proposed site thered been a number of accidents and during the consultation period there were actually two people killed bang opposite the proposed entrance to that site at swingswang, well lets forget about that lets forget about the two thousand odd people whove said no lets forget about the fact that there were these accidents in that road because no weve got the m forty the a forty four dash
# ::tok we also gave other reasons at the time vocal soundum principally the road because the access fronting onto the a forty four there by the proposed site thered been a number of accidents and during the consultation period there were actually two people killed bang opposite the proposed entrance to that site at swingswang , well lets forget about that lets forget about the two thousand odd people whove said no lets forget about the fact that there were these accidents in that road because no weve got the m forty the a forty four dash
# ::alignments 94-95|0.0.1.1.1.0 85-86|0.0.1.1.0.0 84-85|0.0.1.1.1.1.1 83-84|0.0.1.1.1.1.1.0 80-81|0.0.1.1.1.1.1.0.0 75-76|0.0.1.1.1.1.2 72-73|0.0.1.1.1.1 71-72|0.0.1.1.1 70-71|0.0.1.1.1.3 69-70|0.0.1.1.1.1.0 66-67|0.0.1.1.1.2.1.0.0 64-65|0.0.1.1.1.2.1.0.2.1.0 61-62|0.0.1.1.0 60-61|0.0.1.1 57-58|0.0.1 56-57|0.0 55-56|0.0.2 51-52|0.0.1.1.1.2.1.0.2.1.1 48-49|0.0.1.1.1.2.1 47-48|0.0.1.1.1.2 45-46|0.0.1.1.1.2.1.0 44-45|0.0.1.1.1.2.1.0.2 43-44|0.0.1.1.1.2.1.0.2.1 41-42|0.0.1.1.1.2.1.0.1 40-41|0.0.1.1.0.1 37-38|0.0.1.0.0 36-37|0.0.1.0 33-34|0.0.3 32-33|0.0.3.1.0 30-31|0.0.3.1 26-27|0.0.1.1.1.2.0 25-26|0.0.1.1.1.2.0.0 21-22|0.0.1.1.1.2.1.0.2.0 17-18|0.0.3.0.2 15-16|0.0.3.0 13-14|0 12-13|0.1 10-11|0.0.1.1.1.2.0.0.1 8-9|0.0.3.0.0 7-8|0.0.3.0.1 4-5|0.1.0 3-4|0.1.0.0 1-2|0.0.1.1.1.2.0.0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:46.196
# ::node	0	cause-01	13-14
# ::node	0.0	let-01	56-57
# ::node	0.0.0	we	0-1
# ::node	0.0.1	forget-01	57-58
# ::node	0.0.1.0	consult-01	36-37
# ::node	0.0.1.0.0	period	37-38
# ::node	0.0.1.1	let-01	60-61
# ::node	0.0.1.1.0	forget-01	61-62
# ::node	0.0.1.1.0.0	-	85-86
# ::node	0.0.1.1.0.1	actual	40-41
# ::node	0.0.1.1.1	let-01	71-72
# ::node	0.0.1.1.1.0	4	94-95
# ::node	0.0.1.1.1.1	forget-01	72-73
# ::node	0.0.1.1.1.1.0	say-01	69-70
# ::node	0.0.1.1.1.1.1	cause-01	84-85
# ::node	0.0.1.1.1.1.1.0	road	83-84
# ::node	0.0.1.1.1.1.1.0.0	accident	80-81
# ::node	0.0.1.1.1.1.2	fact	75-76
# ::node	0.0.1.1.1.2	propose-01	47-48
# ::node	0.0.1.1.1.2.0	site	26-27
# ::node	0.0.1.1.1.2.0.0	propose-01	25-26
# ::node	0.0.1.1.1.2.0.0.0	also	1-2
# ::node	0.0.1.1.1.2.0.0.1	principal	10-11
# ::node	0.0.1.1.1.2.1	entrance	48-49
# ::node	0.0.1.1.1.2.1.0	opposite-41	45-46
# ::node	0.0.1.1.1.2.1.0.0	odd	66-67
# ::node	0.0.1.1.1.2.1.0.1	2	41-42
# ::node	0.0.1.1.1.2.1.0.2	bang-01	44-45
# ::node	0.0.1.1.1.2.1.0.2.0	4	21-22
# ::node	0.0.1.1.1.2.1.0.2.1	kill-01	43-44
# ::node	0.0.1.1.1.2.1.0.2.1.0	2	64-65
# ::node	0.0.1.1.1.2.1.0.2.1.1	site	51-52
# ::node	0.0.1.1.1.3	-	70-71
# ::node	0.0.2	well	55-56
# ::node	0.0.3	and	33-34
# ::node	0.0.3.0	access-01	15-16
# ::node	0.0.3.0.0	vocal	8-9
# ::node	0.0.3.0.1	time	7-8
# ::node	0.0.3.0.2	onto	17-18
# ::node	0.0.3.1	number	30-31
# ::node	0.0.3.1.0	accident	32-33
# ::node	0.1	road	12-13
# ::node	0.1.0	reason	4-5
# ::node	0.1.0.0	other	3-4
# ::root	0	cause-01
# ::edge	access-01	ARG0	vocal	0.0.3.0	0.0.3.0.0	
# ::edge	access-01	ARG1	time	0.0.3.0	0.0.3.0.1	
# ::edge	access-01	time	onto	0.0.3.0	0.0.3.0.2	
# ::edge	accident	location	road	0.0.1.1.1.1.1.0.0	0.0.1.1.1.1.1.0	
# ::edge	accident	quant	number	0.0.3.1.0	0.0.3.1	
# ::edge	and	domain	access-01	0.0.3	0.0.3.0	
# ::edge	and	op1	let-01	0.0.3	0.0	
# ::edge	and	quant	number	0.0.3	0.0.3.1	
# ::edge	bang-01	ARG1	4	0.0.1.1.1.2.1.0.2	0.0.1.1.1.2.1.0.2.0	
# ::edge	bang-01	time	opposite-41	0.0.1.1.1.2.1.0.2	0.0.1.1.1.2.1.0	
# ::edge	cause-01	ARG0	let-01	0	0.0	
# ::edge	cause-01	ARG0	road	0.0.1.1.1.1.1	0.0.1.1.1.1.1.0	
# ::edge	cause-01	ARG1	forget-01	0.0.1.1.1.1.1	0.0.1.1.1.1	
# ::edge	cause-01	ARG1	road	0	0.1	
# ::edge	consult-01	ARG1	period	0.0.1.0	0.0.1.0.0	
# ::edge	forget-01	ARG0	-	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	forget-01	ARG0	let-01	0.0.1.1.1.1	0.0.1.1.1	
# ::edge	forget-01	ARG1	actual	0.0.1.1.0	0.0.1.1.0.1	
# ::edge	forget-01	ARG1	consult-01	0.0.1	0.0.1.0	
# ::edge	forget-01	ARG2	let-01	0.0.1	0.0.1.1	
# ::edge	forget-01	prep-in	fact	0.0.1.1.1.1	0.0.1.1.1.1.2	
# ::edge	kill-01	ARG0	2	0.0.1.1.1.2.1.0.2.1	0.0.1.1.1.2.1.0.2.1.0	
# ::edge	kill-01	ARG1	bang-01	0.0.1.1.1.2.1.0.2.1	0.0.1.1.1.2.1.0.2	
# ::edge	kill-01	purpose	site	0.0.1.1.1.2.1.0.2.1	0.0.1.1.1.2.1.0.2.1.1	
# ::edge	let-01	ARG0	4	0.0.1.1.1	0.0.1.1.1.0	
# ::edge	let-01	ARG0	we	0.0	0.0.0	
# ::edge	let-01	ARG1	forget-01	0.0	0.0.1	
# ::edge	let-01	ARG1	forget-01	0.0.1.1	0.0.1.1.0	
# ::edge	let-01	ARG1	propose-01	0.0.1.1.1	0.0.1.1.1.2	
# ::edge	let-01	ARG2	let-01	0.0.1.1	0.0.1.1.1	
# ::edge	let-01	manner	well	0.0	0.0.2	
# ::edge	let-01	polarity	-	0.0.1.1.1	0.0.1.1.1.3	
# ::edge	opposite-41	ARG0	odd	0.0.1.1.1.2.1.0	0.0.1.1.1.2.1.0.0	
# ::edge	opposite-41	ARG1	2	0.0.1.1.1.2.1.0	0.0.1.1.1.2.1.0.1	
# ::edge	opposite-41	ARG2	entrance	0.0.1.1.1.2.1.0	0.0.1.1.1.2.1	
# ::edge	principal	op1	propose-01	0.0.1.1.1.2.0.0.1	0.0.1.1.1.2.0.0	
# ::edge	propose-01	ARG0	also	0.0.1.1.1.2.0.0	0.0.1.1.1.2.0.0.0	
# ::edge	propose-01	ARG0	site	0.0.1.1.1.2	0.0.1.1.1.2.0	
# ::edge	propose-01	ARG1	entrance	0.0.1.1.1.2	0.0.1.1.1.2.1	
# ::edge	propose-01	ARG1	site	0.0.1.1.1.2.0.0	0.0.1.1.1.2.0	
# ::edge	reason	mod	other	0.1.0	0.1.0.0	
# ::edge	road	consist	reason	0.1	0.1.0	
# ::edge	say-01	ARG1	forget-01	0.0.1.1.1.1.0	0.0.1.1.1.1	
(c3 / cause-01 
      :ARG0 (l3 / let-01 
            :ARG0 (w2 / we) 
            :ARG1 (f4 / forget-01 
                  :ARG1 (c2 / consult-01 
                        :ARG1 (p2 / period)) 
                  :ARG2 (l2 / let-01 
                        :ARG1 (f3 / forget-01 
                              :ARG0 (- / -) 
                              :ARG1 (a2 / actual)) 
                        :ARG2 (l / let-01 
                              :ARG0 4 
                              :ARG0-of (f2 / forget-01 
                                    :ARG1-of (s / say-01) 
                                    :ARG1-of (c / cause-01 
                                          :ARG0 (r / road 
                                                :location-of (a / accident))) 
                                    :prep-in (f / fact)) 
                              :ARG1 (p / propose-01 
                                    :ARG0 (s3 / site 
                                          :ARG1-of (p3 / propose-01 
                                                :ARG0 (a6 / also) 
                                                :op-of (p4 / principal))) 
                                    :ARG1 (e / entrance 
                                          :ARG2-of (o2 / opposite-41 
                                                :ARG0 (o / odd) 
                                                :ARG1 2 
                                                :time-of (b / bang-01 
                                                      :ARG1 4 
                                                      :ARG1-of (k / kill-01 
                                                            :ARG0 2 
                                                            :purpose (s2 / site)))))) 
                              :polarity (-2 / -)))) 
            :manner (w / well) 
            :op-of (a3 / and 
                  :domain (a5 / access-01 
                        :ARG0 (v / vocal) 
                        :ARG1 (t / time) 
                        :time (o3 / onto)) 
                  :quant (n / number 
                        :quant-of (a4 / accident)))) 
      :ARG1 (r2 / road 
            :consist (r3 / reason 
                  :mod (o4 / other))))

# ::snt we pray for all those killed each day in wars disasters and accidents throughout the world for prisoners of conscience and all who suffer torture starvation or maltreatment and for mary wyse and alfred osborne and all whose anniversaries fall at this time of the year
# ::tok we pray for all those killed each day in wars disasters and accidents throughout the world for prisoners of conscience and all who suffer torture starvation or maltreatment and for mary wyse and alfred osborne and all whose anniversaries fall at this time of the year
# ::alignments 45-46|0.0.0.0.0 42-43|0.0.0.0.0.0 41-42|0.0.0.0.0.0.0 36-37|0.0.0.1.0.0.0.1 35-36|0.0.0.1.0.0.0 32-33|0.0.0.1.0.0 28-29|0 26-27|0.0.0 25-26|0.0 24-25|0.0.0.0 23-24|0.0.0.0.1 21-22|0.0.0.0.1.0 20-21|0.0.0.1.0.0.0.0 19-20|0.0.0.1.0.0.0.0.0 15-16|0.0.0.1.2.0.0 13-14|0.0.0.1.2.0.0.0 12-13|0.0.0.1.0.1 11-12|0.0.0.1.0 10-11|0.0.0.1.2 9-10|0.0.0.1.2.0 7-8|0.0.0.1.3 6-7|0.0.0.1.3.0 5-6|0.0.0.1 3-4|0.0.0.1.1 1-2|0.0.0.0.1.1 0-1|0.0.0.0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:47.315
# ::node	0	and	28-29
# ::node	0.0	starve-01	25-26
# ::node	0.0.0	or	26-27
# ::node	0.0.0.0	torture-01	24-25
# ::node	0.0.0.0.0	year	45-46
# ::node	0.0.0.0.0.0	time	42-43
# ::node	0.0.0.0.0.0.0	this	41-42
# ::node	0.0.0.0.1	suffer-01	23-24
# ::node	0.0.0.0.1.0	all	21-22
# ::node	0.0.0.0.1.1	pray-01	1-2
# ::node	0.0.0.0.1.1.0	we	0-1
# ::node	0.0.0.1	kill-01	5-6
# ::node	0.0.0.1.0	and	11-12
# ::node	0.0.0.1.0.0	and	32-33
# ::node	0.0.0.1.0.0.0	and	35-36
# ::node	0.0.0.1.0.0.0.0	and	20-21
# ::node	0.0.0.1.0.0.0.0.0	conscience	19-20
# ::node	0.0.0.1.0.0.0.1	all	36-37
# ::node	0.0.0.1.0.1	accident	12-13
# ::node	0.0.0.1.1	all	3-4
# ::node	0.0.0.1.2	disaster	10-11
# ::node	0.0.0.1.2.0	war-01	9-10
# ::node	0.0.0.1.2.0.0	world	15-16
# ::node	0.0.0.1.2.0.0.0	throughout	13-14
# ::node	0.0.0.1.3	day	7-8
# ::node	0.0.0.1.3.0	each	6-7
# ::root	0	and
# ::edge	and	op1	accident	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	and	op1	and	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	and	op1	and	0.0.0.1.0.0.0	0.0.0.1.0.0.0.0	
# ::edge	and	op1	conscience	0.0.0.1.0.0.0.0	0.0.0.1.0.0.0.0.0	
# ::edge	and	op1	starve-01	0	0.0	
# ::edge	and	op2	all	0.0.0.1.0.0.0	0.0.0.1.0.0.0.1	
# ::edge	and	op2	and	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	day	mod	each	0.0.0.1.3	0.0.0.1.3.0	
# ::edge	kill-01	ARG0	and	0.0.0.1	0.0.0.1.0	
# ::edge	kill-01	ARG1	all	0.0.0.1	0.0.0.1.1	
# ::edge	kill-01	location	disaster	0.0.0.1	0.0.0.1.2	
# ::edge	kill-01	time	day	0.0.0.1	0.0.0.1.3	
# ::edge	or	op1	kill-01	0.0.0	0.0.0.1	
# ::edge	or	op2	starve-01	0.0.0	0.0	
# ::edge	pray-01	ARG0	we	0.0.0.0.1.1	0.0.0.0.1.1.0	
# ::edge	pray-01	ARG1	suffer-01	0.0.0.0.1.1	0.0.0.0.1	
# ::edge	suffer-01	ARG0	all	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	suffer-01	ARG1	torture-01	0.0.0.0.1	0.0.0.0	
# ::edge	throughout	op1	world	0.0.0.1.2.0.0.0	0.0.0.1.2.0.0	
# ::edge	time	mod	this	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	torture-01	ARG0	year	0.0.0.0	0.0.0.0.0	
# ::edge	torture-01	ARG1	or	0.0.0.0	0.0.0	
# ::edge	war-01	ARG0	disaster	0.0.0.1.2.0	0.0.0.1.2	
# ::edge	war-01	ARG1	world	0.0.0.1.2.0	0.0.0.1.2.0.0	
# ::edge	year	part	time	0.0.0.0.0	0.0.0.0.0.0	
(a4 / and 
      :op1 (s / starve-01 
            :op-of (o / or 
                  :ARG1-of (t3 / torture-01 
                        :ARG0 (y / year 
                              :part (t / time 
                                    :mod (t2 / this))) 
                        :ARG1-of (s2 / suffer-01 
                              :ARG0 (a5 / all) 
                              :ARG1-of (p / pray-01 
                                    :ARG0 (w3 / we)))) 
                  :op1 (k / kill-01 
                        :ARG0 (a8 / and 
                              :op-of (a3 / and 
                                    :op1 (a2 / and 
                                          :op1 (a6 / and 
                                                :op1 (c / conscience)) 
                                          :op2 (a / all))) 
                              :op1 (a7 / accident)) 
                        :ARG1 (a9 / all) 
                        :location (d / disaster 
                              :ARG0-of (w2 / war-01 
                                    :ARG1 (w / world 
                                          :op-of (t4 / throughout)))) 
                        :time (d2 / day 
                              :mod (e / each))))))

# ::snt obviously the cost is higher than for ordinary sheet glass but for any area where accidents are possible the expense is well worthwhile
# ::tok obviously the cost is higher than for ordinary sheet glass but for any area where accidents are possible the expense is well worthwhile
# ::alignments 22-23|0.1.0.0 21-22|0.1.0 19-20|0.1.0.0.0 17-18|0.2 15-16|0.2.0 13-14|0.2.0.0 12-13|0.2.0.0.0 10-11|0 9-10|0.1.1 8-9|0.1.1.0 7-8|0.1.0.0.0.0 4-5|0.0 2-3|0.1.2 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:47.441
# ::node	0	contrast-01	10-11
# ::node	0.0	high	4-5
# ::node	0.1	obvious-41	0-1
# ::node	0.1.0	well	21-22
# ::node	0.1.0.0	worthwhile	22-23
# ::node	0.1.0.0.0	expend-01	19-20
# ::node	0.1.0.0.0.0	ordinary	7-8
# ::node	0.1.1	glass	9-10
# ::node	0.1.1.0	sheet	8-9
# ::node	0.1.2	cost-01	2-3
# ::node	0.2	possible	17-18
# ::node	0.2.0	accident	15-16
# ::node	0.2.0.0	area	13-14
# ::node	0.2.0.0.0	any	12-13
# ::root	0	contrast-01
# ::edge	accident	location	area	0.2.0	0.2.0.0	
# ::edge	area	mod	any	0.2.0.0	0.2.0.0.0	
# ::edge	contrast-01	ARG0	high	0	0.0	
# ::edge	contrast-01	ARG1	obvious-41	0	0.1	
# ::edge	contrast-01	ARG2	possible	0	0.2	
# ::edge	expend-01	ARG1	ordinary	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	glass	mod	sheet	0.1.1	0.1.1.0	
# ::edge	obvious-41	ARG0	well	0.1	0.1.0	
# ::edge	obvious-41	ARG1	glass	0.1	0.1.1	
# ::edge	obvious-41	ARG2	cost-01	0.1	0.1.2	
# ::edge	possible	domain	accident	0.2	0.2.0	
# ::edge	worthwhile	domain	expend-01	0.1.0.0	0.1.0.0.0	
# ::edge	worthwhile	mod	well	0.1.0.0	0.1.0	
(c / contrast-01 
      :ARG0 (h / high) 
      :ARG1 (o2 / obvious-41 
            :ARG0 (w2 / well 
                  :mod-of (w / worthwhile 
                        :domain (e / expend-01 
                              :ARG1 (o / ordinary)))) 
            :ARG1 (g / glass 
                  :mod (s / sheet)) 
            :ARG2 (c2 / cost-01)) 
      :ARG2 (p / possible 
            :domain (a / accident 
                  :location (a2 / area 
                        :mod (a3 / any)))))

# ::snt one got rather badly bent though and had to be towed quietly away to a convenient spot on the road before the accident could be reported
# ::tok one got rather badly bent though and had to be towed quietly away to a convenient spot on the road before the accident could be reported
# ::alignments 25-26|0.0 23-24|0 22-23|0.0.1 20-21|0.0.2 19-20|0.0.0.1 16-17|0.0.0 15-16|0.0.0.0 12-13|0.0.3.0 11-12|0.0.3 6-7|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:47.567
# ::node	0	possible	23-24
# ::node	0.0	report-01	25-26
# ::node	0.0.0	spot	16-17
# ::node	0.0.0.0	convenient	15-16
# ::node	0.0.0.1	road	19-20
# ::node	0.0.1	accident	22-23
# ::node	0.0.2	before	20-21
# ::node	0.0.3	quiet	11-12
# ::node	0.0.3.0	away	12-13
# ::node	0.1	and	6-7
# ::root	0	possible
# ::edge	and	op1	possible	0.1	0	
# ::edge	away	degree	quiet	0.0.3.0	0.0.3	
# ::edge	before	op1	report-01	0.0.2	0.0	
# ::edge	convenient	domain	spot	0.0.0.0	0.0.0	
# ::edge	possible	domain	report-01	0	0.0	
# ::edge	quiet	op1	report-01	0.0.3	0.0	
# ::edge	report-01	ARG0	spot	0.0	0.0.0	
# ::edge	report-01	ARG1	accident	0.0	0.0.1	
# ::edge	spot	location	road	0.0.0	0.0.0.1	
(p / possible 
      :domain (r / report-01 
            :ARG0 (s / spot 
                  :domain-of (c / convenient) 
                  :location (r2 / road)) 
            :ARG1 (a / accident) 
            :op-of (b / before) 
            :op-of (q / quiet 
                  :degree-of (a2 / away))) 
      :op-of (a3 / and))

# ::snt departure point too late to commence the booked holiday as a result of the failure of public transport services or due to an accident or mechanical failure involving the motor vehicle in which the insured person is travelling
# ::tok departure point too late to commence the booked holiday as a result of the failure of public transport services or due to an accident or mechanical failure involving the motor vehicle in which the insured person is travelling
# ::alignments 37-38|0 35-36|0.0 34-35|0.1.1.0.0+0.1.1.0 30-31|0.1.1.1.0 29-30|0.1.1.1.0.0 27-28|0.1.1.1 26-27|0.1.1 25-26|0.1.1.2 24-25|0.1 23-24|0.1.0 19-20|0.1.0.0 18-19|0.1.0.0.0.0.0 17-18|0.1.0.0.0.0.0.0.0 16-17|0.1.0.0.0.0.0.0 14-15|0.1.0.0.0.0 11-12|0.1.0.0.0 8-9|0.1.0.0.1.1.0 7-8|0.1.0.0.1.1.0.0 5-6|0.1.0.0.1.1 3-4|0.1.0.0.1 2-3|0.1.0.0.1.0 1-2|0.1.0.0.1.2 0-1|0.1.0.0.1.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:49.245
# ::node	0	travel-01	37-38
# ::node	0.0	person	35-36
# ::node	0.1	or	24-25
# ::node	0.1.0	accident	23-24
# ::node	0.1.0.0	or	19-20
# ::node	0.1.0.0.0	result-01	11-12
# ::node	0.1.0.0.0.0	fail-01	14-15
# ::node	0.1.0.0.0.0.0	service	18-19
# ::node	0.1.0.0.0.0.0.0	public	16-17
# ::node	0.1.0.0.0.0.0.0.0	transport-01	17-18
# ::node	0.1.0.0.1	late	3-4
# ::node	0.1.0.0.1.0	too	2-3
# ::node	0.1.0.0.1.1	commence-01	5-6
# ::node	0.1.0.0.1.1.0	holiday	8-9
# ::node	0.1.0.0.1.1.0.0	book-02	7-8
# ::node	0.1.0.0.1.2	point	1-2
# ::node	0.1.0.0.1.2.0	depart-01	0-1
# ::node	0.1.1	fail-01	26-27
# ::node	0.1.1.0	person	34-35
# ::node	0.1.1.0.0	insure-02	34-35
# ::node	0.1.1.1	involve-01	27-28
# ::node	0.1.1.1.0	vehicle	30-31
# ::node	0.1.1.1.0.0	motorcycle	29-30
# ::node	0.1.1.2	mechanics	25-26
# ::root	0	travel-01
# ::edge	book-02	ARG1	holiday	0.1.0.0.1.1.0.0	0.1.0.0.1.1.0	
# ::edge	commence-01	ARG1	holiday	0.1.0.0.1.1	0.1.0.0.1.1.0	
# ::edge	fail-01	ARG1	person	0.1.1	0.1.1.0	
# ::edge	fail-01	ARG1	service	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	fail-01	mod	mechanics	0.1.1	0.1.1.2	
# ::edge	insure-02	ARG1	person	0.1.1.0.0	0.1.1.0	
# ::edge	involve-01	ARG1	fail-01	0.1.1.1	0.1.1	
# ::edge	involve-01	ARG2	vehicle	0.1.1.1	0.1.1.1.0	
# ::edge	late	degree	too	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	late	domain	commence-01	0.1.0.0.1	0.1.0.0.1.1	
# ::edge	or	beneficiary	accident	0.1.0.0	0.1.0	
# ::edge	or	op1	accident	0.1	0.1.0	
# ::edge	or	op1	late	0.1.0.0	0.1.0.0.1	
# ::edge	or	op2	fail-01	0.1	0.1.1	
# ::edge	point	mod	depart-01	0.1.0.0.1.2	0.1.0.0.1.2.0	
# ::edge	point	mod	late	0.1.0.0.1.2	0.1.0.0.1	
# ::edge	result-01	ARG0	or	0.1.0.0.0	0.1.0.0	
# ::edge	result-01	ARG1	fail-01	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	service	mod	public	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	transport-01	mod	public	0.1.0.0.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	travel-01	ARG0	person	0	0.0	
# ::edge	travel-01	ARG1	or	0	0.1	
# ::edge	vehicle	mod	motorcycle	0.1.1.1.0	0.1.1.1.0.0	
(t / travel-01 
      :ARG0 (p / person) 
      :ARG1 (o / or 
            :op1 (a / accident 
                  :beneficiary-of (o2 / or 
                        :ARG0-of (r / result-01 
                              :ARG1 (f2 / fail-01 
                                    :ARG1 (s / service 
                                          :mod (p3 / public 
                                                :mod-of (t2 / transport-01))))) 
                        :op1 (l / late 
                              :degree (t3 / too) 
                              :domain (c / commence-01 
                                    :ARG1 (h / holiday 
                                          :ARG1-of (b / book-02))) 
                              :mod-of (p4 / point 
                                    :mod (d / depart-01))))) 
            :op2 (f / fail-01 
                  :ARG1 (p2 / person 
                        :ARG1-of (i / insure-02)) 
                  :ARG1-of (i2 / involve-01 
                        :ARG2 (v / vehicle 
                              :mod (m / motorcycle))) 
                  :mod (m2 / mechanics))))

# ::snt many accidents in the kitchen can be avoided if we are careful and think safety first says brenda cook the citys home safety officer
# ::tok many accidents in the kitchen can be avoided if we are careful and think safety first says brenda cook the citys home safety officer
# ::alignments 23-24|0.0 22-23|0.0.0 21-22|0.0.0.0 16-17|0 14-15|0.1.2.0 13-14|0.1.2 12-13|0.1 11-12|0.1.2.0.0.0 9-10|0.1.2.0.0 7-8|0.1.1 5-6|0.1.0 1-2|0.1.1.0 0-1|0.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:49.344
# ::node	0	say-01	16-17
# ::node	0.0	officer	23-24
# ::node	0.0.0	safe-41	22-23
# ::node	0.0.0.0	home	21-22
# ::node	0.1	and	12-13
# ::node	0.1.0	possible	5-6
# ::node	0.1.1	avoid-01	7-8
# ::node	0.1.1.0	accident	1-2
# ::node	0.1.1.0.0	many	0-1
# ::node	0.1.2	think-01	13-14
# ::node	0.1.2.0	safe-41	14-15
# ::node	0.1.2.0.0	we	9-10
# ::node	0.1.2.0.0.0	careful	11-12
# ::root	0	say-01
# ::edge	accident	quant	many	0.1.1.0	0.1.1.0.0	
# ::edge	and	op1	avoid-01	0.1	0.1.1	
# ::edge	and	op2	think-01	0.1	0.1.2	
# ::edge	avoid-01	ARG1	accident	0.1.1	0.1.1.0	
# ::edge	careful	domain	we	0.1.2.0.0.0	0.1.2.0.0	
# ::edge	officer	mod	safe-41	0.0	0.0.0	
# ::edge	possible	domain	and	0.1.0	0.1	
# ::edge	safe-41	ARG0	we	0.1.2.0	0.1.2.0.0	
# ::edge	safe-41	ARG1	home	0.0.0	0.0.0.0	
# ::edge	say-01	ARG0	officer	0	0.0	
# ::edge	say-01	ARG1	and	0	0.1	
# ::edge	think-01	ARG1	safe-41	0.1.2	0.1.2.0	
(s2 / say-01 
      :ARG0 (o / officer 
            :mod (s / safe-41 
                  :ARG1 (h / home))) 
      :ARG1 (a / and 
            :domain-of (p / possible) 
            :op1 (a2 / avoid-01 
                  :ARG1 (a3 / accident 
                        :quant (m / many))) 
            :op2 (t / think-01 
                  :ARG1 (s3 / safe-41 
                        :ARG0 (w / we 
                              :domain-of (c / careful))))))

# ::snt though they came ten days after hitlers incorporation of austria into germany this was a pure accident
# ::tok though they came ten days after hitlers incorporation of austria into germany this was a pure accident
# ::alignments 16-17|0 15-16|0.1 12-13|0.0 5-6|0.1.1.0 4-5|0.1.1.1+0.1.1 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:49.371
# ::node	0	accident	16-17
# ::node	0.0	this	12-13
# ::node	0.1	pure	15-16
# ::node	0.1.0	they	1-2
# ::node	0.1.1	temporal-quantity	4-5
# ::node	0.1.1.0	after	5-6
# ::node	0.1.1.1	day	4-5
# ::root	0	accident
# ::edge	accident	domain	this	0	0.0	
# ::edge	accident	mod	pure	0	0.1	
# ::edge	after	quant	temporal-quantity	0.1.1.0	0.1.1	
# ::edge	temporal-quantity	poss	pure	0.1.1	0.1	
# ::edge	temporal-quantity	unit	day	0.1.1	0.1.1.1	
# ::edge	they	poss	pure	0.1.0	0.1	
(a / accident 
      :domain (t / this) 
      :mod (p / pure 
            :poss-of (t3 / they) 
            :poss-of (t2 / temporal-quantity 
                  :quant-of (a2 / after) 
                  :unit (d / day))))

# ::snt the curse of chappaquiddick hangs heavy in the air this week 20 years after an accident that led to the death of senator edward kennedys female companion and ruined his chances of ever becoming president
# ::tok the curse of chappaquiddick hangs heavy in the air this week 20 years after an accident that led to the death of senator edward kennedys female companion and ruined his chances of ever becoming president
# ::alignments 34-35|0.1.0.1.1.0+0.1.0.1.1 33-34|0.1.0.1 32-33|0.1.0.1.1.1 30-31|0.1.0 28-29|0.1 27-28|0 25-26|0.1.0.2 20-21|0.0.1 17-18|0.0 15-16|0.0.0 13-14|0.0.0.0 12-13|0.1.0.1.0.0.0+0.1.0.1.0.0 11-12|0.1.0.1.0 10-11|0.1.0.0.0 9-10|0.1.0.0 8-9|0.0.0.0.0.2 5-6|0.0.0.0.0.1 4-5|0.0.0.0.0 1-2|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:49.668
# ::node	0	and	27-28
# ::node	0.0	lead-02	17-18
# ::node	0.0.0	accident	15-16
# ::node	0.0.0.0	after	13-14
# ::node	0.0.0.0.0	hang-01	4-5
# ::node	0.0.0.0.0.0	curse-01	1-2
# ::node	0.0.0.0.0.1	heavy	5-6
# ::node	0.0.0.0.0.2	air	8-9
# ::node	0.0.1	die-01	20-21
# ::node	0.1	ruin-01	28-29
# ::node	0.1.0	chance-01	30-31
# ::node	0.1.0.0	this	9-10
# ::node	0.1.0.0.0	week	10-11
# ::node	0.1.0.1	become-01	33-34
# ::node	0.1.0.1.0	20	11-12
# ::node	0.1.0.1.0.0	temporal-quantity	12-13
# ::node	0.1.0.1.0.0.0	year	12-13
# ::node	0.1.0.1.1	have-org-role-91	34-35
# ::node	0.1.0.1.1.0	president	34-35
# ::node	0.1.0.1.1.1	ever	32-33
# ::node	0.1.0.2	female	25-26
# ::root	0	and
# ::edge	after	op1	accident	0.0.0.0	0.0.0	
# ::edge	and	op1	ruin-01	0	0.1	
# ::edge	become-01	ARG0	20	0.1.0.1	0.1.0.1.0	
# ::edge	become-01	ARG1	have-org-role-91	0.1.0.1	0.1.0.1.1	
# ::edge	chance-01	ARG1	this	0.1.0	0.1.0.0	
# ::edge	chance-01	ARG2	become-01	0.1.0	0.1.0.1	
# ::edge	ever	domain	have-org-role-91	0.1.0.1.1.1	0.1.0.1.1	
# ::edge	female	name	chance-01	0.1.0.2	0.1.0	
# ::edge	hang-01	ARG0	curse-01	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	hang-01	ARG1	heavy	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	hang-01	time	after	0.0.0.0.0	0.0.0.0	
# ::edge	hang-01	time	air	0.0.0.0.0	0.0.0.0.0.2	
# ::edge	have-org-role-91	ARG2	president	0.1.0.1.1	0.1.0.1.1.0	
# ::edge	lead-02	ARG0	and	0.0	0	
# ::edge	lead-02	ARG1	accident	0.0	0.0.0	
# ::edge	lead-02	ARG2	die-01	0.0	0.0.1	
# ::edge	ruin-01	ARG1	chance-01	0.1	0.1.0	
# ::edge	temporal-quantity	quant	20	0.1.0.1.0.0	0.1.0.1.0	
# ::edge	temporal-quantity	unit	year	0.1.0.1.0.0	0.1.0.1.0.0.0	
# ::edge	week	mod	this	0.1.0.0.0	0.1.0.0	
(a / and 
      :ARG0-of (l / lead-02 
            :ARG1 (a2 / accident 
                  :op-of (a3 / after 
                        :time-of (h3 / hang-01 
                              :ARG0 (c2 / curse-01) 
                              :ARG1 (h2 / heavy) 
                              :time (a4 / air)))) 
            :ARG2 (d / die-01)) 
      :op1 (r / ruin-01 
            :ARG1 (c / chance-01 
                  :ARG1 (t2 / this 
                        :mod-of (w / week)) 
                  :ARG2 (b / become-01 
                        :ARG0 (2 / 20 
                              :quant-of (t / temporal-quantity 
                                    :unit (y / year))) 
                        :ARG1 (h / have-org-role-91 
                              :ARG2 (p / president) 
                              :domain-of (e / ever))) 
                  :name-of (f / female))))

# ::snt these are very odd accidents and very few people in this country have knowledge of these bites prof warrell said
# ::tok these are very odd accidents and very few people in this country have knowledge of these bites prof warrell said
# ::alignments 19-20|0 16-17|0.1.2 13-14|0.1.3 11-12|0.0 10-11|0.0.0 7-8|0.1.1.0 6-7|0.1.1 5-6|0.1 4-5|0.1.0 3-4|0.1.0.0 2-3|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:49.739
# ::node	0	say-01	19-20
# ::node	0.0	country	11-12
# ::node	0.0.0	this	10-11
# ::node	0.1	and	5-6
# ::node	0.1.0	accident	4-5
# ::node	0.1.0.0	odd	3-4
# ::node	0.1.0.0.0	very	2-3
# ::node	0.1.1	very	6-7
# ::node	0.1.1.0	few	7-8
# ::node	0.1.2	bite	16-17
# ::node	0.1.3	knowledge	13-14
# ::root	0	say-01
# ::edge	accident	mod	odd	0.1.0	0.1.0.0	
# ::edge	and	op1	accident	0.1	0.1.0	
# ::edge	and	op2	very	0.1	0.1.1	
# ::edge	and	op3	bite	0.1	0.1.2	
# ::edge	country	mod	this	0.0	0.0.0	
# ::edge	few	degree	very	0.1.1.0	0.1.1	
# ::edge	knowledge	poss	and	0.1.3	0.1	
# ::edge	odd	degree	very	0.1.0.0	0.1.0.0.0	
# ::edge	say-01	ARG0	country	0	0.0	
# ::edge	say-01	ARG1	and	0	0.1	
(s / say-01 
      :ARG0 (c / country 
            :mod (t / this)) 
      :ARG1 (a / and 
            :op1 (a2 / accident 
                  :mod (o / odd 
                        :degree (v2 / very))) 
            :op2 (v / very 
                  :degree-of (f / few)) 
            :op3 (b / bite) 
            :poss-of (k / knowledge)))

# ::snt injured in an industrial accident three months ago dash
# ::tok injured in an industrial accident three months ago dash
# ::alignments 6-7|0.0.0.0.0.0+0.0.0.0.0 5-6|0.0.0.0 4-5|0.0 3-4|0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:49.755
# ::node	0	injure-01	0-1
# ::node	0.0	accident	4-5
# ::node	0.0.0	industry	3-4
# ::node	0.0.0.0	3	5-6
# ::node	0.0.0.0.0	temporal-quantity	6-7
# ::node	0.0.0.0.0.0	month	6-7
# ::root	0	injure-01
# ::edge	3	mod	industry	0.0.0.0	0.0.0	
# ::edge	accident	mod	industry	0.0	0.0.0	
# ::edge	injure-01	ARG1	accident	0	0.0	
# ::edge	temporal-quantity	quant	3	0.0.0.0.0	0.0.0.0	
# ::edge	temporal-quantity	unit	month	0.0.0.0.0	0.0.0.0.0.0	
(i2 / injure-01 
      :ARG1 (a / accident 
            :mod (i / industry 
                  :mod-of (3 / 3 
                        :quant-of (t / temporal-quantity 
                              :unit (m / month))))))

# ::snt only the toughness is missing the impression that engaging effects arise almost by accident from structural processes
# ::tok only the toughness is missing the impression that engaging effects arise almost by accident from structural processes
# ::alignments 16-17|0.1.2 15-16|0.1.2.0 13-14|0.1.3.0 11-12|0.1.3 10-11|0.1 9-10|0.1.1 8-9|0.1.1.0 6-7|0.0 4-5|0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:49.956
# ::node	0	miss-01	4-5
# ::node	0.0	impression	6-7
# ::node	0.1	arise-01	10-11
# ::node	0.1.0	only	0-1
# ::node	0.1.1	effect-01	9-10
# ::node	0.1.1.0	engage-01	8-9
# ::node	0.1.2	process	16-17
# ::node	0.1.2.0	structure	15-16
# ::node	0.1.3	almost	11-12
# ::node	0.1.3.0	accident	13-14
# ::root	0	miss-01
# ::edge	accident	mod	almost	0.1.3.0	0.1.3	
# ::edge	arise-01	ARG0	only	0.1	0.1.0	
# ::edge	arise-01	ARG1	effect-01	0.1	0.1.1	
# ::edge	arise-01	ARG2	process	0.1	0.1.2	
# ::edge	arise-01	mod	almost	0.1	0.1.3	
# ::edge	engage-01	ARG1	effect-01	0.1.1.0	0.1.1	
# ::edge	miss-01	ARG1	impression	0	0.0	
# ::edge	miss-01	ARG2	arise-01	0	0.1	
# ::edge	process	mod	structure	0.1.2	0.1.2.0	
(m / miss-01 
      :ARG1 (i / impression) 
      :ARG2 (a3 / arise-01 
            :ARG0 (o / only) 
            :ARG1 (e / effect-01 
                  :ARG1-of (e2 / engage-01)) 
            :ARG2 (p / process 
                  :mod (s / structure)) 
            :mod (a2 / almost 
                  :mod-of (a / accident))))

# ::snt of norman of jeanpaul and of little beatrice who feels this as deeply as anyone including the sussex branch of the family who because of the railway accident you all know about cannot be with us here today
# ::tok of norman of jeanpaul and of little beatrice who feels this as deeply as anyone including the sussex branch of the family who because of the railway accident you all know about cannot be with us here today
# ::alignments 37-38|0.2 36-37|0.3 30-31|0.0.1 29-30|0.0.1.0.0 28-29|0.0.1.0 27-28|0.0 26-27|0.0.0 23-24|0 21-22|0.1 18-19|0.1.0 14-15|0.0.1.3 12-13|0.0.1.3.0 10-11|0.0.1.0.0.0 6-7|0.0.1.2 4-5|0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:50.222
# ::node	0	cause-01	23-24
# ::node	0.0	accident	27-28
# ::node	0.0.0	railway	26-27
# ::node	0.0.1	know-01	30-31
# ::node	0.0.1.0	you	28-29
# ::node	0.0.1.0.0	all	29-30
# ::node	0.0.1.0.0.0	this	10-11
# ::node	0.0.1.1	and	4-5
# ::node	0.0.1.2	little	6-7
# ::node	0.0.1.3	anyone	14-15
# ::node	0.0.1.3.0	deep	12-13
# ::node	0.1	family	21-22
# ::node	0.1.0	branch	18-19
# ::node	0.2	today	37-38
# ::node	0.3	here	36-37
# ::root	0	cause-01
# ::edge	accident	location	railway	0.0	0.0.0	
# ::edge	anyone	op1	know-01	0.0.1.3	0.0.1	
# ::edge	anyone	time	deep	0.0.1.3	0.0.1.3.0	
# ::edge	cause-01	ARG0	accident	0	0.0	
# ::edge	cause-01	ARG1	family	0	0.1	
# ::edge	family	part	branch	0.1	0.1.0	
# ::edge	here	op1	cause-01	0.3	0	
# ::edge	know-01	ARG0	you	0.0.1	0.0.1.0	
# ::edge	know-01	ARG1	and	0.0.1	0.0.1.1	
# ::edge	know-01	degree	little	0.0.1	0.0.1.2	
# ::edge	know-01	location	accident	0.0.1	0.0	
# ::edge	this	mod	all	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	today	op1	cause-01	0.2	0	
# ::edge	you	quant	all	0.0.1.0	0.0.1.0.0	
(c / cause-01 
      :ARG0 (a2 / accident 
            :location (r / railway) 
            :location-of (k / know-01 
                  :ARG0 (y / you 
                        :quant (a / all 
                              :mod-of (t2 / this))) 
                  :ARG1 (a4 / and) 
                  :degree (l / little) 
                  :op-of (a3 / anyone 
                        :time (d / deep)))) 
      :ARG1 (f / family 
            :part (b / branch)) 
      :op-of (t / today) 
      :op-of (h / here))

# ::snt but with everincreasing demand pressures on staff and shortages of staff there is always the possibility of an accident
# ::tok but with everincreasing demand pressures on staff and shortages of staff there is always the possibility of an accident
# ::alignments 18-19|0.1.0 15-16|0.1 13-14|0.0.0.1.0 10-11|0.0.0.0.0.0.0+0.0.0.0.0.0 8-9|0.0.0.1 7-8|0.0.0 6-7|0.0.0.0.0+0.0.0.0 4-5|0.0 3-4|0.0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:50.284
# ::node	0	contrast-01	0-1
# ::node	0.0	pressure-01	4-5
# ::node	0.0.0	and	7-8
# ::node	0.0.0.0	person	6-7
# ::node	0.0.0.0.0	staff-01	6-7
# ::node	0.0.0.0.0.0	person	10-11
# ::node	0.0.0.0.0.0.0	staff-01	10-11
# ::node	0.0.0.1	short-41	8-9
# ::node	0.0.0.1.0	always	13-14
# ::node	0.0.1	demand-01	3-4
# ::node	0.1	possible	15-16
# ::node	0.1.0	accident	18-19
# ::root	0	contrast-01
# ::edge	and	op1	person	0.0.0	0.0.0.0	
# ::edge	and	op2	short-41	0.0.0	0.0.0.1	
# ::edge	contrast-01	ARG1	pressure-01	0	0.0	
# ::edge	contrast-01	ARG2	possible	0	0.1	
# ::edge	possible	domain	accident	0.1	0.1.0	
# ::edge	pressure-01	ARG0	and	0.0	0.0.0	
# ::edge	pressure-01	ARG1	demand-01	0.0	0.0.1	
# ::edge	short-41	ARG1	always	0.0.0.1	0.0.0.1.0	
# ::edge	staff-01	ARG1	person	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	staff-01	ARG2	person	0.0.0.0.0	0.0.0.0	
# ::edge	staff-01	ARG2	person	0.0.0.0.0.0.0	0.0.0.0.0.0	
(c / contrast-01 
      :ARG1 (p4 / pressure-01 
            :ARG0 (a3 / and 
                  :op1 (p3 / person 
                        :ARG2-of (s3 / staff-01 
                              :ARG1 (p2 / person 
                                    :ARG2-of (s / staff-01)))) 
                  :op2 (s2 / short-41 
                        :ARG1 (a2 / always))) 
            :ARG1 (d / demand-01)) 
      :ARG2 (p / possible 
            :domain (a / accident)))

# ::snt mr gardiner said it could not be proved that the sierra hit the kerb before the accident but it seemed likely that when the car swerved he overcorrected, the fact that mr cole had not slept the night before contributed to the accident
# ::tok mr gardiner said it could not be proved that the sierra hit the kerb before the accident but it seemed likely that when the car swerved he overcorrected , the fact that mr cole had not slept the night before contributed to the accident
# ::alignments 43-44|0.1.0.1.1.0.0.1 40-41|0.1.0.1.1.0.0 39-40|0.1.0.1.1.0.0.2 38-39|0.1.0.1.1.0.0.2.0 30-31|0.1.0.1.1.0.0.0 26-27|0.0 24-25|0.1.0.1.0.0 20-21|0.1.0.1.1.1 19-20|0.1.0.1.1 18-19|0.1.0.1.1.0 17-18|0.1.0.1 16-17|0.1.0.1.0.1.0 14-15|0.1.0.1.0.1 11-12|0.1.0.1.0 7-8|0.1.0 4-5|0.1 3-4|0.1.0.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:50.709
# ::node	0	say-01	2-3
# ::node	0.0	he	26-27
# ::node	0.1	possible	4-5
# ::node	0.1.0	prove-01	7-8
# ::node	0.1.0.0	it	3-4
# ::node	0.1.0.1	contrast-01	17-18
# ::node	0.1.0.1.0	hit-01	11-12
# ::node	0.1.0.1.0.0	car	24-25
# ::node	0.1.0.1.0.1	before	14-15
# ::node	0.1.0.1.0.1.0	accident	16-17
# ::node	0.1.0.1.1	seem-01	19-20
# ::node	0.1.0.1.1.0	it	18-19
# ::node	0.1.0.1.1.0.0	contribute-01	40-41
# ::node	0.1.0.1.1.0.0.0	fact	30-31
# ::node	0.1.0.1.1.0.0.1	accident	43-44
# ::node	0.1.0.1.1.0.0.2	before	39-40
# ::node	0.1.0.1.1.0.0.2.0	night	38-39
# ::node	0.1.0.1.1.1	likely	20-21
# ::root	0	say-01
# ::edge	before	op1	accident	0.1.0.1.0.1	0.1.0.1.0.1.0	
# ::edge	before	op1	contribute-01	0.1.0.1.1.0.0.2	0.1.0.1.1.0.0	
# ::edge	contrast-01	ARG1	hit-01	0.1.0.1	0.1.0.1.0	
# ::edge	contrast-01	ARG2	seem-01	0.1.0.1	0.1.0.1.1	
# ::edge	contribute-01	ARG0	fact	0.1.0.1.1.0.0	0.1.0.1.1.0.0.0	
# ::edge	contribute-01	ARG1	it	0.1.0.1.1.0.0	0.1.0.1.1.0	
# ::edge	contribute-01	ARG2	accident	0.1.0.1.1.0.0	0.1.0.1.1.0.0.1	
# ::edge	hit-01	ARG1	car	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	hit-01	time	before	0.1.0.1.0	0.1.0.1.0.1	
# ::edge	likely	domain	seem-01	0.1.0.1.1.1	0.1.0.1.1	
# ::edge	night	time	before	0.1.0.1.1.0.0.2.0	0.1.0.1.1.0.0.2	
# ::edge	possible	domain	prove-01	0.1	0.1.0	
# ::edge	prove-01	ARG0	it	0.1.0	0.1.0.0	
# ::edge	prove-01	ARG1	contrast-01	0.1.0	0.1.0.1	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	possible	0	0.1	
# ::edge	seem-01	ARG1	it	0.1.0.1.1	0.1.0.1.1.0	
(s2 / say-01 
      :ARG0 (h / he) 
      :ARG1 (p2 / possible 
            :domain (p / prove-01 
                  :ARG0 (i2 / it) 
                  :ARG1 (c3 / contrast-01 
                        :ARG1 (h2 / hit-01 
                              :ARG1 (c2 / car) 
                              :time (b2 / before 
                                    :op1 (a2 / accident))) 
                        :ARG2 (s / seem-01 
                              :ARG1 (i / it 
                                    :ARG1-of (c / contribute-01 
                                          :ARG0 (f / fact) 
                                          :ARG2 (a / accident) 
                                          :op-of (b / before 
                                                :time-of (n / night)))) 
                              :domain-of (l / likely))))))

# ::snt an exception was allowed when the defendant had the last clear chance to avoid the accident in which event the allornothing rule dictated that the plaintiff could recover the whole amount of his loss
# ::tok an exception was allowed when the defendant had the last clear chance to avoid the accident in which event the allornothing rule dictated that the plaintiff could recover the whole amount of his loss
# ::alignments 30-31|0.1.0 29-30|0.1.0.0 27-28|0.1 26-27|0 22-23|0.0.0 21-22|0.0 18-19|0.0.0.1 15-16|0.0.0.0.2.1 13-14|0.0.0.0.2 11-12|0.0.0.0 10-11|0.0.0.0.0 9-10|0.0.0.0.2.2 6-7|0.0.0.0.2.0 3-4|0.0.0.0.1 1-2|0.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:50.878
# ::node	0	possible	26-27
# ::node	0.0	rule-03	21-22
# ::node	0.0.0	dictate-01	22-23
# ::node	0.0.0.0	chance	11-12
# ::node	0.0.0.0.0	clear	10-11
# ::node	0.0.0.0.1	allow-01	3-4
# ::node	0.0.0.0.1.0	except-00	1-2
# ::node	0.0.0.0.2	avoid-01	13-14
# ::node	0.0.0.0.2.0	defendant	6-7
# ::node	0.0.0.0.2.1	accident	15-16
# ::node	0.0.0.0.2.2	last	9-10
# ::node	0.0.0.1	event	18-19
# ::node	0.1	recover-02	27-28
# ::node	0.1.0	amount	30-31
# ::node	0.1.0.0	whole	29-30
# ::root	0	possible
# ::edge	allow-01	ARG1	except-00	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	allow-01	time	chance	0.0.0.0.1	0.0.0.0	
# ::edge	amount	quant	whole	0.1.0	0.1.0.0	
# ::edge	avoid-01	ARG0	defendant	0.0.0.0.2	0.0.0.0.2.0	
# ::edge	avoid-01	ARG1	accident	0.0.0.0.2	0.0.0.0.2.1	
# ::edge	avoid-01	quant	last	0.0.0.0.2	0.0.0.0.2.2	
# ::edge	chance	mod	clear	0.0.0.0	0.0.0.0.0	
# ::edge	chance	topic	avoid-01	0.0.0.0	0.0.0.0.2	
# ::edge	dictate-01	ARG0	rule-03	0.0.0	0.0	
# ::edge	dictate-01	ARG1	chance	0.0.0	0.0.0.0	
# ::edge	dictate-01	ARG2	event	0.0.0	0.0.0.1	
# ::edge	possible	domain	recover-02	0	0.1	
# ::edge	recover-02	ARG1	amount	0.1	0.1.0	
# ::edge	rule-03	ARG1	possible	0.0	0	
(p / possible 
      :ARG1-of (r2 / rule-03 
            :ARG0-of (d / dictate-01 
                  :ARG1 (c / chance 
                        :mod (c2 / clear) 
                        :time-of (a4 / allow-01 
                              :ARG1 (e2 / except-00)) 
                        :topic (a3 / avoid-01 
                              :ARG0 (d2 / defendant) 
                              :ARG1 (a2 / accident) 
                              :quant (l / last))) 
                  :ARG2 (e / event))) 
      :domain (r / recover-02 
            :ARG1 (a / amount 
                  :quant (w / whole))))

# ::snt the accident happened last night at about 10
# ::tok the accident happened last night at about 10
# ::alignments 7-8|0.2 4-5|0.1 3-4|0.1.0 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:50.891
# ::node	0	happen-01	2-3
# ::node	0.0	accident	1-2
# ::node	0.1	night	4-5
# ::node	0.1.0	last	3-4
# ::node	0.2	10	7-8
# ::root	0	happen-01
# ::edge	happen-01	ARG1	accident	0	0.0	
# ::edge	happen-01	time	10	0	0.2	
# ::edge	happen-01	time	night	0	0.1	
# ::edge	night	mod	last	0.1	0.1.0	
(h / happen-01 
      :ARG1 (a / accident) 
      :time (n / night 
            :mod (l / last)) 
      :time 10)

# ::snt the card costs 50 annually and has the usual gold card benefits including 250000 free travel and accident insurance unsecured overdraft facilities and some extras such as discounts on hotels car hire and private medical insurance
# ::tok the card costs 50 annually and has the usual gold card benefits including 250000 free travel and accident insurance unsecured overdraft facilities and some extras such as discounts on hotels car hire and private medical insurance
# ::alignments 35-36|0.1.1 34-35|0.1.1.1 33-34|0.1.1.0 32-33|0.1 31-32|0 30-31|0.0 29-30|0.0.0 25-26|0.0.0.0.0.0.1.0.1 23-24|0.0.0.0.0.0.1.0.2.0.0.0.0 22-23|0.1.0 21-22|0.0.0.0.0 19-20|0.0.0.0 18-19|0.0.0.0.0.0 17-18|0.0.0.0.0.0.0 16-17|0.0.0.0.0.0.1 15-16|0.0.0.0.0.0.1.0 14-15|0.0.0.0.0.0.1.0.2 13-14|0.0.0.0.0.0.1.0.0 11-12|0.0.0.0.0.0.1.0.2.0 10-11|0.0.0.0.0.0.1.0.2.0.1 9-10|0.0.0.0.0.0.1.0.2.0.3 8-9|0.0.0.0.0.0.1.0.2.0.2 5-6|0.0.0.0.0.0.1.0.2.0.0.0.1 3-4|0.0.0.0.0.0.1.0.2.0.0.0.2 2-3|0.0.0.0.0.0.1.0.2.0.0.0 1-2|0.0.0.0.0.0.1.0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:51.588
# ::node	0	hire-01	31-32
# ::node	0.0	car	30-31
# ::node	0.0.0	hotel	29-30
# ::node	0.0.0.0	secure-02	19-20
# ::node	0.0.0.0.0	facility	21-22
# ::node	0.0.0.0.0.0	insure-02	18-19
# ::node	0.0.0.0.0.0.0	accident	17-18
# ::node	0.0.0.0.0.0.1	and	16-17
# ::node	0.0.0.0.0.0.1.0	travel-01	15-16
# ::node	0.0.0.0.0.0.1.0.0	250000	13-14
# ::node	0.0.0.0.0.0.1.0.1	such	25-26
# ::node	0.0.0.0.0.0.1.0.2	free-41	14-15
# ::node	0.0.0.0.0.0.1.0.2.0	benefit-01	11-12
# ::node	0.0.0.0.0.0.1.0.2.0.0	card	1-2
# ::node	0.0.0.0.0.0.1.0.2.0.0.0	cost-01	2-3
# ::node	0.0.0.0.0.0.1.0.2.0.0.0.0	some	23-24
# ::node	0.0.0.0.0.0.1.0.2.0.0.0.1	and	5-6
# ::node	0.0.0.0.0.0.1.0.2.0.0.0.2	50	3-4
# ::node	0.0.0.0.0.0.1.0.2.0.1	card	10-11
# ::node	0.0.0.0.0.0.1.0.2.0.2	usual	8-9
# ::node	0.0.0.0.0.0.1.0.2.0.3	gold	9-10
# ::node	0.1	and	32-33
# ::node	0.1.0	and	22-23
# ::node	0.1.1	insure-02	35-36
# ::node	0.1.1.0	private	33-34
# ::node	0.1.1.1	medicine	34-35
# ::root	0	hire-01
# ::edge	and	op1	and	0.1	0.1.0	
# ::edge	and	op1	cost-01	0.0.0.0.0.0.1.0.2.0.0.0.1	0.0.0.0.0.0.1.0.2.0.0.0	
# ::edge	and	op1	travel-01	0.0.0.0.0.0.1	0.0.0.0.0.0.1.0	
# ::edge	and	op2	hire-01	0.1	0	
# ::edge	and	op2	insure-02	0.0.0.0.0.0.1	0.0.0.0.0.0	
# ::edge	and	op3	insure-02	0.1	0.1.1	
# ::edge	benefit-01	ARG0	card	0.0.0.0.0.0.1.0.2.0	0.0.0.0.0.0.1.0.2.0.0	
# ::edge	benefit-01	ARG1	card	0.0.0.0.0.0.1.0.2.0	0.0.0.0.0.0.1.0.2.0.1	
# ::edge	benefit-01	mod	gold	0.0.0.0.0.0.1.0.2.0	0.0.0.0.0.0.1.0.2.0.3	
# ::edge	benefit-01	mod	usual	0.0.0.0.0.0.1.0.2.0	0.0.0.0.0.0.1.0.2.0.2	
# ::edge	car	mod	hotel	0.0	0.0.0	
# ::edge	cost-01	ARG0	some	0.0.0.0.0.0.1.0.2.0.0.0	0.0.0.0.0.0.1.0.2.0.0.0.0	
# ::edge	cost-01	ARG1	card	0.0.0.0.0.0.1.0.2.0.0.0	0.0.0.0.0.0.1.0.2.0.0	
# ::edge	cost-01	time	50	0.0.0.0.0.0.1.0.2.0.0.0	0.0.0.0.0.0.1.0.2.0.0.0.2	
# ::edge	free-41	ARG1	benefit-01	0.0.0.0.0.0.1.0.2	0.0.0.0.0.0.1.0.2.0	
# ::edge	free-41	ARG2	travel-01	0.0.0.0.0.0.1.0.2	0.0.0.0.0.0.1.0	
# ::edge	hire-01	ARG1	car	0	0.0	
# ::edge	insure-02	ARG1	facility	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	insure-02	ARG4	accident	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	insure-02	mod	medicine	0.1.1	0.1.1.1	
# ::edge	insure-02	mod	private	0.1.1	0.1.1.0	
# ::edge	secure-02	ARG1	facility	0.0.0.0	0.0.0.0.0	
# ::edge	secure-02	ARG2	hotel	0.0.0.0	0.0.0	
# ::edge	travel-01	ARG0	250000	0.0.0.0.0.0.1.0	0.0.0.0.0.0.1.0.0	
# ::edge	travel-01	ARG1	such	0.0.0.0.0.0.1.0	0.0.0.0.0.0.1.0.1	
(h / hire-01 
      :ARG1 (c / car 
            :mod (h2 / hotel 
                  :ARG2-of (s3 / secure-02 
                        :ARG1 (f / facility 
                              :ARG1-of (i2 / insure-02 
                                    :ARG4 (a3 / accident) 
                                    :op-of (a4 / and 
                                          :op1 (t / travel-01 
                                                :ARG0 250000 
                                                :ARG1 (s / such) 
                                                :ARG2-of (f2 / free-41 
                                                      :ARG1 (b / benefit-01 
                                                            :ARG0 (c4 / card 
                                                                  :ARG1-of (c3 / cost-01 
                                                                        :ARG0 (s2 / some) 
                                                                        :op-of (a5 / and) 
                                                                        :time 50)) 
                                                            :ARG1 (c2 / card) 
                                                            :mod (u / usual) 
                                                            :mod (g / gold)))))))))) 
      :op-of (a / and 
            :op1 (a2 / and) 
            :op2 (i / insure-02 
                  :mod (p / private) 
                  :mod (m / medicine))))

# ::snt unraced as a twoyearold because of an accident in which he damaged his knees roman prose landed one of last seasons most spectacular gambles on his racecourse debut when he was backed from 331 to tens at folkestone before going on to land the portland handicap at doncaster under the big weight for a threeyearold of 9st 3lb
# ::tok unraced as a twoyearold because of an accident in which he damaged his knees roman prose landed one of last seasons most spectacular gambles on his racecourse debut when he was backed from 331 to tens at folkestone before going on to land the portland handicap at doncaster under the big weight for a threeyearold of 9st 3lb
# ::alignments 51-52|0 50-51|0.0 42-43|0.1.0 38-39|0.1.3 33-34|0.1.2.1.1 31-32|0.1 29-30|0.1.1 22-23|0.1.2.0.0.0 21-22|0.1.2.0.0 19-20|0.1.2.1.0.0.0 13-14|0.1.2.0 11-12|0.1.2.1 10-11|0.1.2 7-8|0.1.2.1.0 4-5|0.1.2.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:51.904
# ::node	0	weight	51-52
# ::node	0.0	big	50-51
# ::node	0.1	back-01	31-32
# ::node	0.1.0	land	42-43
# ::node	0.1.1	he	29-30
# ::node	0.1.2	he	10-11
# ::node	0.1.2.0	kneel-01	13-14
# ::node	0.1.2.0.0	most	21-22
# ::node	0.1.2.0.0.0	spectacular	22-23
# ::node	0.1.2.1	damage-01	11-12
# ::node	0.1.2.1.0	accident	7-8
# ::node	0.1.2.1.0.0	cause-01	4-5
# ::node	0.1.2.1.0.0.0	last	19-20
# ::node	0.1.2.1.1	331	33-34
# ::node	0.1.3	before	38-39
# ::root	0	weight
# ::edge	331	op1	damage-01	0.1.2.1.1	0.1.2.1	
# ::edge	back-01	ARG0	land	0.1	0.1.0	
# ::edge	back-01	ARG1	he	0.1	0.1.1	
# ::edge	back-01	time	before	0.1	0.1.3	
# ::edge	cause-01	ARG0	accident	0.1.2.1.0.0	0.1.2.1.0	
# ::edge	cause-01	ARG1	last	0.1.2.1.0.0	0.1.2.1.0.0.0	
# ::edge	damage-01	ARG0	he	0.1.2.1	0.1.2	
# ::edge	damage-01	ARG1	accident	0.1.2.1	0.1.2.1.0	
# ::edge	he	op1	back-01	0.1.2	0.1	
# ::edge	kneel-01	ARG0	he	0.1.2.0	0.1.2	
# ::edge	kneel-01	ARG1	most	0.1.2.0	0.1.2.0.0	
# ::edge	spectacular	degree	most	0.1.2.0.0.0	0.1.2.0.0	
# ::edge	weight	mod	big	0	0.0	
# ::edge	weight	op1	back-01	0	0.1	
(w / weight 
      :mod (b / big) 
      :op1 (b3 / back-01 
            :ARG0 (l / land) 
            :ARG1 (h / he) 
            :op-of (h2 / he 
                  :ARG0-of (k / kneel-01 
                        :ARG1 (m / most 
                              :degree-of (s / spectacular))) 
                  :ARG0-of (d / damage-01 
                        :ARG1 (a / accident 
                              :ARG0-of (c / cause-01 
                                    :ARG1 (l2 / last))) 
                        :op-of 331)) 
            :time (b2 / before)))

# ::snt it disappeared due to an accident of history
# ::tok it disappeared due to an accident of history
# ::alignments 7-8|0.1.0 5-6|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:51.913
# ::node	0	disappear-01	1-2
# ::node	0.0	it	0-1
# ::node	0.1	accident	5-6
# ::node	0.1.0	history	7-8
# ::root	0	disappear-01
# ::edge	accident	time	history	0.1	0.1.0	
# ::edge	disappear-01	ARG1	it	0	0.0	
# ::edge	disappear-01	ARG2	accident	0	0.1	
(d / disappear-01 
      :ARG1 (i / it) 
      :ARG2 (a / accident 
            :time (h / history)))

# ::snt he simply could not believe the luck that an accident of field manoeuvres might have put him in command of the defence of europe
# ::tok he simply could not believe the luck that an accident of field manoeuvres might have put him in command of the defence of europe
# ::alignments 23-24|0.0.3.1.0.0.0+0.0.3.1.0.0+0.0.3.1.0 21-22|0.0.3.1 18-19|0.0.3 11-12|0.0.2 9-10|0.0.3.0 6-7|0.0.1 4-5|0.0 2-3|0 1-2|0.0.4 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:52.071
# ::node	0	possible	2-3
# ::node	0.0	believe-01	4-5
# ::node	0.0.0	he	0-1
# ::node	0.0.1	luck	6-7
# ::node	0.0.2	field	11-12
# ::node	0.0.3	command-02	18-19
# ::node	0.0.3.0	accident	9-10
# ::node	0.0.3.1	defend-01	21-22
# ::node	0.0.3.1.0	continent	23-24
# ::node	0.0.3.1.0.0	name	23-24
# ::node	0.0.3.1.0.0.0	"Europe"	23-24
# ::node	0.0.4	simple	1-2
# ::root	0	possible
# ::edge	believe-01	ARG0	he	0.0	0.0.0	
# ::edge	believe-01	ARG1	luck	0.0	0.0.1	
# ::edge	believe-01	ARG2	field	0.0	0.0.2	
# ::edge	believe-01	condition	command-02	0.0	0.0.3	
# ::edge	believe-01	mod	simple	0.0	0.0.4	
# ::edge	command-02	ARG0	accident	0.0.3	0.0.3.0	
# ::edge	command-02	ARG1	defend-01	0.0.3	0.0.3.1	
# ::edge	continent	name	name	0.0.3.1.0	0.0.3.1.0.0	
# ::edge	defend-01	ARG1	continent	0.0.3.1	0.0.3.1.0	
# ::edge	name	op1	"Europe"	0.0.3.1.0.0	0.0.3.1.0.0.0	
# ::edge	possible	domain	believe-01	0	0.0	
(p / possible 
      :domain (b / believe-01 
            :ARG0 (h / he) 
            :ARG1 (l / luck) 
            :ARG2 (f / field) 
            :condition (c2 / command-02 
                  :ARG0 (a / accident) 
                  :ARG1 (d / defend-01 
                        :ARG1 (c / continent 
                              :name (n / name 
                                    :op1 "Europe")))) 
            :mod (s / simple)))

# ::snt insurance can give you cover against accidents happening to callers and against the state of your property causing injury or loss to any individual
# ::tok insurance can give you cover against accidents happening to callers and against the state of your property causing injury or loss to any individual
# ::alignments 23-24|0.2.1.0.0.0.0 22-23|0.2.1.0.0.0 19-20|0.1 18-19|0.1.0 17-18|0 16-17|0.0 13-14|0.1.0.0 10-11|0.2.2 7-8|0.2 6-7|0.2.0 3-4|0.2.1 2-3|0.2.1.0 1-2|0.2.1.0.1 0-1|0.2.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:52.338
# ::node	0	cause-01	17-18
# ::node	0.0	property	16-17
# ::node	0.1	or	19-20
# ::node	0.1.0	injure-01	18-19
# ::node	0.1.0.0	state	13-14
# ::node	0.2	happen-01	7-8
# ::node	0.2.0	accident	6-7
# ::node	0.2.1	you	3-4
# ::node	0.2.1.0	give-01	2-3
# ::node	0.2.1.0.0	insure-02	0-1
# ::node	0.2.1.0.0.0	any	22-23
# ::node	0.2.1.0.0.0.0	individual	23-24
# ::node	0.2.1.0.1	possible	1-2
# ::node	0.2.2	and	10-11
# ::root	0	cause-01
# ::edge	and	op1	happen-01	0.2.2	0.2	
# ::edge	cause-01	ARG0	property	0	0.0	
# ::edge	cause-01	ARG1	or	0	0.1	
# ::edge	cause-01	condition	happen-01	0	0.2	
# ::edge	give-01	ARG1	insure-02	0.2.1.0	0.2.1.0.0	
# ::edge	give-01	ARG2	you	0.2.1.0	0.2.1	
# ::edge	happen-01	ARG0	accident	0.2	0.2.0	
# ::edge	happen-01	ARG1	you	0.2	0.2.1	
# ::edge	individual	mod	any	0.2.1.0.0.0.0	0.2.1.0.0.0	
# ::edge	injure-01	ARG1	state	0.1.0	0.1.0.0	
# ::edge	insure-02	ARG1	any	0.2.1.0.0	0.2.1.0.0.0	
# ::edge	or	op1	injure-01	0.1	0.1.0	
# ::edge	possible	domain	give-01	0.2.1.0.1	0.2.1.0	
(c / cause-01 
      :ARG0 (p / property) 
      :ARG1 (o / or 
            :op1 (i2 / injure-01 
                  :ARG1 (s / state))) 
      :condition (h / happen-01 
            :ARG0 (a3 / accident) 
            :ARG1 (y / you 
                  :ARG2-of (g / give-01 
                        :ARG1 (i3 / insure-02 
                              :ARG1 (a / any 
                                    :mod-of (i / individual))) 
                        :domain-of (p2 / possible))) 
            :op-of (a2 / and)))

# ::snt to cut pedestrian accidents mr peverelcooper said the county was providing road safety teaching programmes to teachers and for motorcyclists who were involved in fewer accidents last year the county is setting up a training association and promoting training, for motorists he said the county was encouraging advanced driving courses promoting alcoholfree driving running hire schemes for car baby seats and developing road accident prevention schemes
# ::tok to cut pedestrian accidents mr peverelcooper said the county was providing road safety teaching programmes to teachers and for motorcyclists who were involved in fewer accidents last year the county is setting up a training association and promoting training , for motorists he said the county was encouraging advanced driving courses promoting alcoholfree driving running hire schemes for car baby seats and developing road accident prevention schemes
# ::alignments 66-67|0.1.1.0.0.2.0 65-66|0.1.1.0.0.2.0.0 64-65|0.1.1.0.0.2.0.0.0 63-64|0.1.1.0.0.2.0.0.0.0 62-63|0.1.1.0.0.2 61-62|0.1.1.0.0 60-61|0.1.1.0.0.0.0.0 59-60|0.1.1.0.0.1.0 58-59|0.1.1.0.0.0.0.1 56-57|0.1.1.0.0.0.0 55-56|0.1.1.0.0.0 53-54|0.1.1.0.0.1 51-52|0.1.1.0 50-51|0.1.1 49-50|0.1.1.0.1 48-49|0.1.1.1 47-48|0.1 45-46|0.1.0 43-44|0 42-43|0.0 38-39|0.2.0.2 37-38|0.2.0.2.0 36-37|0.2.0.2.0.1 35-36|0.2.0.2.0.0.0.0 34-35|0.2.0.2.0.0.0.0.0 31-32|0.2.0.2.0.0.0 29-30|0.2.0.2.0.0 27-28|0.2.2 26-27|0.2.2.0 25-26|0.2.1 24-25|0.2.1.0 22-23|0.2 17-18|0.2.0 16-17|0.2.0.1.0+0.2.0.1 14-15|0.2.0.1.1.1 13-14|0.2.0.1.1.1.0 12-13|0.2.0.1.1.0.0 11-12|0.2.0.1.1.0.0.0 10-11|0.2.0.1.1 8-9|0.2.0.1.1.0 6-7|0.2.0.1.1.2 3-4|0.2.0.0 2-3|0.2.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:55.999
# ::node	0	say-01	43-44
# ::node	0.0	he	42-43
# ::node	0.1	encourage-01	47-48
# ::node	0.1.0	county	45-46
# ::node	0.1.1	course	50-51
# ::node	0.1.1.0	promote-02	51-52
# ::node	0.1.1.0.0	and	61-62
# ::node	0.1.1.0.0.0	hire-01	55-56
# ::node	0.1.1.0.0.0.0	scheme-01	56-57
# ::node	0.1.1.0.0.0.0.0	seat	60-61
# ::node	0.1.1.0.0.0.0.1	car	58-59
# ::node	0.1.1.0.0.1	drive-01	53-54
# ::node	0.1.1.0.0.1.0	baby	59-60
# ::node	0.1.1.0.0.2	develop-02	62-63
# ::node	0.1.1.0.0.2.0	scheme-01	66-67
# ::node	0.1.1.0.0.2.0.0	prevent-01	65-66
# ::node	0.1.1.0.0.2.0.0.0	accident	64-65
# ::node	0.1.1.0.0.2.0.0.0.0	road	63-64
# ::node	0.1.1.0.1	drive-01	49-50
# ::node	0.1.1.1	advance-01	48-49
# ::node	0.2	involve-01	22-23
# ::node	0.2.0	and	17-18
# ::node	0.2.0.0	accident	3-4
# ::node	0.2.0.0.0	pedestrian	2-3
# ::node	0.2.0.1	person	16-17
# ::node	0.2.0.1.0	teach-01	16-17
# ::node	0.2.0.1.1	provide-01	10-11
# ::node	0.2.0.1.1.0	county	8-9
# ::node	0.2.0.1.1.0.0	safe-41	12-13
# ::node	0.2.0.1.1.0.0.0	road	11-12
# ::node	0.2.0.1.1.1	program	14-15
# ::node	0.2.0.1.1.1.0	teach-01	13-14
# ::node	0.2.0.1.1.2	say-01	6-7
# ::node	0.2.0.2	train-01	38-39
# ::node	0.2.0.2.0	promote-02	37-38
# ::node	0.2.0.2.0.0	county	29-30
# ::node	0.2.0.2.0.0.0	set-02	31-32
# ::node	0.2.0.2.0.0.0.0	associate-01	35-36
# ::node	0.2.0.2.0.0.0.0.0	train-01	34-35
# ::node	0.2.0.2.0.1	and	36-37
# ::node	0.2.1	accident	25-26
# ::node	0.2.1.0	few	24-25
# ::node	0.2.2	year	27-28
# ::node	0.2.2.0	last	26-27
# ::root	0	say-01
# ::edge	accident	mod	pedestrian	0.2.0.0	0.2.0.0.0	
# ::edge	accident	mod	road	0.1.1.0.0.2.0.0.0	0.1.1.0.0.2.0.0.0.0	
# ::edge	accident	quant	few	0.2.1	0.2.1.0	
# ::edge	advance-01	ARG1	course	0.1.1.1	0.1.1	
# ::edge	and	op1	accident	0.2.0	0.2.0.0	
# ::edge	and	op1	drive-01	0.1.1.0.0	0.1.1.0.0.1	
# ::edge	and	op1	promote-02	0.2.0.2.0.1	0.2.0.2.0	
# ::edge	and	op2	develop-02	0.1.1.0.0	0.1.1.0.0.2	
# ::edge	and	op2	person	0.2.0	0.2.0.1	
# ::edge	and	op3	train-01	0.2.0	0.2.0.2	
# ::edge	develop-02	ARG1	scheme-01	0.1.1.0.0.2	0.1.1.0.0.2.0	
# ::edge	drive-01	ARG0	baby	0.1.1.0.0.1	0.1.1.0.0.1.0	
# ::edge	drive-01	ARG1	promote-02	0.1.1.0.1	0.1.1.0	
# ::edge	encourage-01	ARG0	county	0.1	0.1.0	
# ::edge	encourage-01	ARG1	course	0.1	0.1.1	
# ::edge	hire-01	ARG2	and	0.1.1.0.0.0	0.1.1.0.0	
# ::edge	involve-01	ARG1	and	0.2	0.2.0	
# ::edge	involve-01	ARG2	accident	0.2	0.2.1	
# ::edge	involve-01	time	year	0.2	0.2.2	
# ::edge	prevent-01	ARG1	accident	0.1.1.0.0.2.0.0	0.1.1.0.0.2.0.0.0	
# ::edge	program	mod	teach-01	0.2.0.1.1.1	0.2.0.1.1.1.0	
# ::edge	promote-02	ARG0	county	0.2.0.2.0	0.2.0.2.0.0	
# ::edge	promote-02	ARG0	course	0.1.1.0	0.1.1	
# ::edge	promote-02	ARG1	and	0.1.1.0	0.1.1.0.0	
# ::edge	promote-02	ARG1	train-01	0.2.0.2.0	0.2.0.2	
# ::edge	provide-01	ARG0	county	0.2.0.1.1	0.2.0.1.1.0	
# ::edge	provide-01	ARG1	program	0.2.0.1.1	0.2.0.1.1.1	
# ::edge	provide-01	ARG2	person	0.2.0.1.1	0.2.0.1	
# ::edge	safe-41	ARG1	county	0.2.0.1.1.0.0	0.2.0.1.1.0	
# ::edge	safe-41	mod	road	0.2.0.1.1.0.0	0.2.0.1.1.0.0.0	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	encourage-01	0	0.1	
# ::edge	say-01	ARG1	provide-01	0.2.0.1.1.2	0.2.0.1.1	
# ::edge	say-01	ARG2	involve-01	0	0.2	
# ::edge	scheme-01	ARG1	prevent-01	0.1.1.0.0.2.0	0.1.1.0.0.2.0.0	
# ::edge	scheme-01	ARG1	seat	0.1.1.0.0.0.0	0.1.1.0.0.0.0.0	
# ::edge	scheme-01	mod	hire-01	0.1.1.0.0.0.0	0.1.1.0.0.0	
# ::edge	scheme-01	prep-in	car	0.1.1.0.0.0.0	0.1.1.0.0.0.0.1	
# ::edge	set-02	ARG0	county	0.2.0.2.0.0.0	0.2.0.2.0.0	
# ::edge	set-02	ARG1	associate-01	0.2.0.2.0.0.0	0.2.0.2.0.0.0.0	
# ::edge	teach-01	ARG0	person	0.2.0.1.0	0.2.0.1	
# ::edge	train-01	ARG0	associate-01	0.2.0.2.0.0.0.0.0	0.2.0.2.0.0.0.0	
# ::edge	year	mod	last	0.2.2	0.2.2.0	
(s4 / say-01 
      :ARG0 (h2 / he) 
      :ARG1 (e / encourage-01 
            :ARG0 (c3 / county) 
            :ARG1 (c2 / course 
                  :ARG0-of (p2 / promote-02 
                        :ARG1 (a2 / and 
                              :ARG2-of (h / hire-01 
                                    :mod-of (s3 / scheme-01 
                                          :ARG1 (s2 / seat) 
                                          :prep-in (c / car))) 
                              :op1 (d2 / drive-01 
                                    :ARG0 (b / baby)) 
                              :op2 (d / develop-02 
                                    :ARG1 (s / scheme-01 
                                          :ARG1 (p / prevent-01 
                                                :ARG1 (a / accident 
                                                      :mod (r / road)))))) 
                        :ARG1-of (d3 / drive-01)) 
                  :ARG1-of (a3 / advance-01))) 
      :ARG2 (i / involve-01 
            :ARG1 (a7 / and 
                  :op1 (a8 / accident 
                        :mod (p7 / pedestrian)) 
                  :op2 (p4 / person 
                        :ARG0-of (t3 / teach-01) 
                        :ARG2-of (p6 / provide-01 
                              :ARG0 (c5 / county 
                                    :ARG1-of (s6 / safe-41 
                                          :mod (r2 / road))) 
                              :ARG1 (p5 / program 
                                    :mod (t4 / teach-01)) 
                              :ARG1-of (s7 / say-01))) 
                  :op3 (t / train-01 
                        :ARG1-of (p3 / promote-02 
                              :ARG0 (c4 / county 
                                    :ARG0-of (s5 / set-02 
                                          :ARG1 (a5 / associate-01 
                                                :ARG0-of (t2 / train-01)))) 
                              :op-of (a4 / and)))) 
            :ARG2 (a6 / accident 
                  :quant (f / few)) 
            :time (y / year 
                  :mod (l / last))))

# ::snt in his three previous tours he had never finished lower than third but few believed after his shooting accident of 1987 and later injuries he would get back to the top so quickly or so dramatically
# ::tok in his three previous tours he had never finished lower than third but few believed after his shooting accident of 1987 and later injuries he would get back to the top so quickly or so dramatically
# ::alignments 35-36|0.0.0 34-35|0.0.0.0 33-34|0.0.0.1 32-33|0.0.0.1.0.0 31-32|0.0.0.1.0 30-31|0.0.2.0.1.0.0.0 27-28|0.0.2.0.1.0.1 24-25|0.0.2.0.1.0.0 23-24|0.0.2.0.1.0 22-23|0.0.2.0.1.0.2 21-22|0.0.2.0.1.0.2.0 20-21|0.0.2.0.1.1+0.0.2.0.1 18-19|0.0.2.0 17-18|0.0.2.0.0 15-16|0.0.2 14-15|0.0 13-14|0.1 12-13|0 9-10|0.0.1 8-9|0.0.1.0 5-6|0.0.1.0.0 4-5|0.0.1.0.0.0 3-4|0.0.1.0.0.0.1 2-3|0.0.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:56.504
# ::node	0	contrast-01	12-13
# ::node	0.0	believe-01	14-15
# ::node	0.0.0	dramatic	35-36
# ::node	0.0.0.0	so	34-35
# ::node	0.0.0.1	or	33-34
# ::node	0.0.0.1.0	so	31-32
# ::node	0.0.0.1.0.0	quick	32-33
# ::node	0.0.1	low	9-10
# ::node	0.0.1.0	finish-01	8-9
# ::node	0.0.1.0.0	he	5-6
# ::node	0.0.1.0.0.0	tour-01	4-5
# ::node	0.0.1.0.0.0.0	3	2-3
# ::node	0.0.1.0.0.0.1	previous	3-4
# ::node	0.0.2	after	15-16
# ::node	0.0.2.0	accident	18-19
# ::node	0.0.2.0.0	shoot-05	17-18
# ::node	0.0.2.0.1	date-entity	20-21
# ::node	0.0.2.0.1.0	injure-01	23-24
# ::node	0.0.2.0.1.0.0	he	24-25
# ::node	0.0.2.0.1.0.0.0	top	30-31
# ::node	0.0.2.0.1.0.1	back	27-28
# ::node	0.0.2.0.1.0.2	late	22-23
# ::node	0.0.2.0.1.0.2.0	and	21-22
# ::node	0.0.2.0.1.1	1987	20-21
# ::node	0.1	few	13-14
# ::root	0	contrast-01
# ::edge	accident	time	date-entity	0.0.2.0	0.0.2.0.1	
# ::edge	after	op1	accident	0.0.2	0.0.2.0	
# ::edge	and	op1	late	0.0.2.0.1.0.2.0	0.0.2.0.1.0.2	
# ::edge	believe-01	ARG0	dramatic	0.0	0.0.0	
# ::edge	believe-01	ARG1	low	0.0	0.0.1	
# ::edge	believe-01	time	after	0.0	0.0.2	
# ::edge	contrast-01	ARG1	believe-01	0	0.0	
# ::edge	contrast-01	instrument	few	0	0.1	
# ::edge	date-entity	year	1987	0.0.2.0.1	0.0.2.0.1.1	
# ::edge	dramatic	degree	so	0.0.0	0.0.0.0	
# ::edge	finish-01	ARG0	he	0.0.1.0	0.0.1.0.0	
# ::edge	finish-01	ARG2	low	0.0.1.0	0.0.1	
# ::edge	injure-01	ARG0	he	0.0.2.0.1.0	0.0.2.0.1.0.0	
# ::edge	injure-01	ARG1	back	0.0.2.0.1.0	0.0.2.0.1.0.1	
# ::edge	injure-01	quant	date-entity	0.0.2.0.1.0	0.0.2.0.1	
# ::edge	injure-01	time	late	0.0.2.0.1.0	0.0.2.0.1.0.2	
# ::edge	or	mod	so	0.0.0.1	0.0.0.1.0	
# ::edge	or	op1	dramatic	0.0.0.1	0.0.0	
# ::edge	quick	degree	so	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	shoot-05	ARG1	accident	0.0.2.0.0	0.0.2.0	
# ::edge	top	poss	he	0.0.2.0.1.0.0.0	0.0.2.0.1.0.0	
# ::edge	tour-01	ARG0	he	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	tour-01	quant	3	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	tour-01	time	previous	0.0.1.0.0.0	0.0.1.0.0.0.1	
(c / contrast-01 
      :ARG1 (b2 / believe-01 
            :ARG0 (d / dramatic 
                  :degree (s / so) 
                  :op-of (o / or 
                        :mod (s2 / so 
                              :degree-of (q / quick)))) 
            :ARG1 (l2 / low 
                  :ARG2-of (f2 / finish-01 
                        :ARG0 (h2 / he 
                              :ARG0-of (t2 / tour-01 
                                    :quant 3 
                                    :time (p / previous))))) 
            :time (a3 / after 
                  :op1 (a2 / accident 
                        :ARG1-of (s3 / shoot-05) 
                        :time (d2 / date-entity 
                              :quant-of (i / injure-01 
                                    :ARG0 (h / he 
                                          :poss-of (t / top)) 
                                    :ARG1 (b / back) 
                                    :time (l / late 
                                          :op-of (a / and))) 
                              :year 1987)))) 
      :instrument (f / few))

# ::snt quite who decided to speed up the process the hospital or mick himself is not clear but six weeks after the accident a proper leg was fitted
# ::tok quite who decided to speed up the process the hospital or mick himself is not clear but six weeks after the accident a proper leg was fitted
# ::alignments 24-25|0.2.0 23-24|0.2.0.0 21-22|0.2 19-20|0.3 18-19|0.3.0.1+0.3.0 17-18|0.3.0.0 16-17|0 15-16|0.1 10-11|0.4 9-10|0.4.0 7-8|0.0.1 4-5|0.0 2-3|0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:56.998
# ::node	0	contrast-01	16-17
# ::node	0.0	speed	4-5
# ::node	0.0.0	decide-01	2-3
# ::node	0.0.0.0	quite	0-1
# ::node	0.0.1	process	7-8
# ::node	0.1	clear	15-16
# ::node	0.2	accident	21-22
# ::node	0.2.0	leg	24-25
# ::node	0.2.0.0	proper	23-24
# ::node	0.3	after	19-20
# ::node	0.3.0	temporal-quantity	18-19
# ::node	0.3.0.0	6	17-18
# ::node	0.3.0.1	week	18-19
# ::node	0.4	or	10-11
# ::node	0.4.0	hospital	9-10
# ::root	0	contrast-01
# ::edge	after	quant	temporal-quantity	0.3	0.3.0	
# ::edge	contrast-01	ARG0	speed	0	0.0	
# ::edge	contrast-01	ARG1	clear	0	0.1	
# ::edge	contrast-01	ARG2	accident	0	0.2	
# ::edge	contrast-01	ARG3	after	0	0.3	
# ::edge	decide-01	ARG0	quite	0.0.0	0.0.0.0	
# ::edge	decide-01	ARG1	speed	0.0.0	0.0	
# ::edge	leg	mod	accident	0.2.0	0.2	
# ::edge	leg	mod	proper	0.2.0	0.2.0.0	
# ::edge	or	op1	hospital	0.4	0.4.0	
# ::edge	or	op2	contrast-01	0.4	0	
# ::edge	speed	source	process	0.0	0.0.1	
# ::edge	temporal-quantity	quant	6	0.3.0	0.3.0.0	
# ::edge	temporal-quantity	unit	week	0.3.0	0.3.0.1	
(c / contrast-01 
      :ARG0 (s / speed 
            :ARG1-of (d / decide-01 
                  :ARG0 (q / quite)) 
            :source (p2 / process)) 
      :ARG1 (c2 / clear) 
      :ARG2 (a / accident 
            :mod-of (l / leg 
                  :mod (p / proper))) 
      :ARG3 (a2 / after 
            :quant (t / temporal-quantity 
                  :quant 6 
                  :unit (w / week))) 
      :op-of (o / or 
            :op1 (h / hospital)))

# ::snt well obviously its vocal soundum really hardgoing when its youre own people from your own station vocal soundum very vocal soundum close station and obviously we know a lot of people vocal soundum who have been involved in the accident but the moral of the men is excellent
# ::tok well obviously its vocal soundum really hardgoing when its youre own people from your own station vocal soundum very vocal soundum close station and obviously we know a lot of people vocal soundum who have been involved in the accident but the moral of the men is excellent
# ::alignments 47-48|0.2 45-46|0.1.4.2 42-43|0.1.4.2.0 40-41|0 39-40|0.1.1.0.0 36-37|0.1.1.0 31-32|0.0 28-29|0.1.1 26-27|0.1 25-26|0.1.0 24-25|0.1.2 23-24|0.1.4 22-23|0.1.4.1 19-20|0.1.4.1.0 18-19|0.1.4.1.0.0 16-17|0.1.4.0.0 15-16|0.1.4.0 5-6|0.1.2.0 3-4|0.1.3.0.0 1-2|0.1.3.0 0-1|0.1.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:57.500
# ::node	0	contrast-01	40-41
# ::node	0.0	vocal	31-32
# ::node	0.1	know-01	26-27
# ::node	0.1.0	we	25-26
# ::node	0.1.1	lot	28-29
# ::node	0.1.1.0	involve-01	36-37
# ::node	0.1.1.0.0	accident	39-40
# ::node	0.1.2	obvious-41	24-25
# ::node	0.1.2.0	really	5-6
# ::node	0.1.3	well	0-1
# ::node	0.1.3.0	obvious-41	1-2
# ::node	0.1.3.0.0	vocal	3-4
# ::node	0.1.4	and	23-24
# ::node	0.1.4.0	station	15-16
# ::node	0.1.4.0.0	vocal	16-17
# ::node	0.1.4.1	station	22-23
# ::node	0.1.4.1.0	vocal	19-20
# ::node	0.1.4.1.0.0	very	18-19
# ::node	0.1.4.2	man	45-46
# ::node	0.1.4.2.0	moral	42-43
# ::node	0.2	excellent	47-48
# ::root	0	contrast-01
# ::edge	and	op1	station	0.1.4	0.1.4.0	
# ::edge	and	op2	station	0.1.4	0.1.4.1	
# ::edge	and	op3	know-01	0.1.4	0.1	
# ::edge	and	op4	man	0.1.4	0.1.4.2	
# ::edge	contrast-01	ARG0	vocal	0	0.0	
# ::edge	contrast-01	ARG1	know-01	0	0.1	
# ::edge	contrast-01	ARG2	excellent	0	0.2	
# ::edge	involve-01	ARG1	lot	0.1.1.0	0.1.1	
# ::edge	involve-01	ARG2	accident	0.1.1.0	0.1.1.0.0	
# ::edge	know-01	ARG0	we	0.1	0.1.0	
# ::edge	know-01	ARG1	lot	0.1	0.1.1	
# ::edge	know-01	degree	well	0.1	0.1.3	
# ::edge	man	mod	moral	0.1.4.2	0.1.4.2.0	
# ::edge	obvious-41	ARG0	really	0.1.2	0.1.2.0	
# ::edge	obvious-41	ARG0	vocal	0.1.3.0	0.1.3.0.0	
# ::edge	obvious-41	ARG1	know-01	0.1.2	0.1	
# ::edge	obvious-41	ARG1	well	0.1.3.0	0.1.3	
# ::edge	station	mod	vocal	0.1.4.1	0.1.4.1.0	
# ::edge	vocal	degree	very	0.1.4.1.0	0.1.4.1.0.0	
# ::edge	vocal	mod	station	0.1.4.0.0	0.1.4.0	
(c / contrast-01 
      :ARG0 (v / vocal) 
      :ARG1 (k / know-01 
            :ARG0 (w / we) 
            :ARG1 (l / lot 
                  :ARG1-of (i / involve-01 
                        :ARG2 (a / accident))) 
            :ARG1-of (o / obvious-41 
                  :ARG0 (r / really)) 
            :degree (w2 / well 
                  :ARG1-of (o2 / obvious-41 
                        :ARG0 (v5 / vocal))) 
            :op-of (a2 / and 
                  :op1 (s2 / station 
                        :mod-of (v4 / vocal)) 
                  :op2 (s / station 
                        :mod (v2 / vocal 
                              :degree (v3 / very))) 
                  :op3 (m / man 
                        :mod (m2 / moral)))) 
      :ARG2 (e / excellent))

# ::snt staff should know the procedures for reporting accidents and have a working knowledge of first aid
# ::tok staff should know the procedures for reporting accidents and have a working knowledge of first aid
# ::alignments 15-16|0.3.1 12-13|0.3 11-12|0.3.0 8-9|0 7-8|0.2.0 6-7|0.2 4-5|0.1.1 2-3|0.1 1-2|0.0 0-1|0.1.0.0+0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:57.640
# ::node	0	and	8-9
# ::node	0.0	recommend-01	1-2
# ::node	0.1	know-01	2-3
# ::node	0.1.0	person	0-1
# ::node	0.1.0.0	staff-01	0-1
# ::node	0.1.1	procedure	4-5
# ::node	0.2	report-01	6-7
# ::node	0.2.0	accident	7-8
# ::node	0.3	knowledge	12-13
# ::node	0.3.0	work-01	11-12
# ::node	0.3.1	aid-01	15-16
# ::root	0	and
# ::edge	aid-01	ARG1	knowledge	0.3.1	0.3	
# ::edge	and	op1	know-01	0	0.1	
# ::edge	and	op2	report-01	0	0.2	
# ::edge	and	op3	knowledge	0	0.3	
# ::edge	know-01	ARG0	person	0.1	0.1.0	
# ::edge	know-01	ARG1	procedure	0.1	0.1.1	
# ::edge	recommend-01	ARG1	and	0.0	0	
# ::edge	report-01	ARG1	accident	0.2	0.2.0	
# ::edge	staff-01	ARG2	person	0.1.0.0	0.1.0	
# ::edge	work-01	ARG0	knowledge	0.3.0	0.3	
(a2 / and 
      :ARG1-of (r2 / recommend-01) 
      :op1 (k2 / know-01 
            :ARG0 (p2 / person 
                  :ARG2-of (s / staff-01)) 
            :ARG1 (p / procedure)) 
      :op2 (r / report-01 
            :ARG1 (a3 / accident)) 
      :op3 (k / knowledge 
            :ARG0-of (w / work-01) 
            :ARG1-of (a / aid-01)))

# ::snt since the midseventies when policies first appeared legal expenses insurance has concentrated on a narrow band of claims arising from car accidents and house ownership many policies are cheap addons to house insurance
# ::tok since the midseventies when policies first appeared legal expenses insurance has concentrated on a narrow band of claims arising from car accidents and house ownership many policies are cheap addons to house insurance
# ::alignments 32-33|0.2 31-32|0.2.0 28-29|0.1.2.0 26-27|0.3.1 25-26|0.3.1.1 24-25|0.3.1.0 23-24|0.0 22-23|0.3 21-22|0.3.0 20-21|0.3.0.0 17-18|0 15-16|0.1.1.2 14-15|0.1.1.2.0 11-12|0.1.1 9-10|0.1 8-9|0.1.0 7-8|0.1.2 6-7|0.1.1.1 4-5|0.1.1.1.0 0-1|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:58.142
# ::node	0	claim-01	17-18
# ::node	0.0	house	23-24
# ::node	0.1	insure-02	9-10
# ::node	0.1.0	expend-01	8-9
# ::node	0.1.1	concentrate-02	11-12
# ::node	0.1.1.0	since	0-1
# ::node	0.1.1.1	appear-01	6-7
# ::node	0.1.1.1.0	policy	4-5
# ::node	0.1.1.2	band	15-16
# ::node	0.1.1.2.0	narrow-01	14-15
# ::node	0.1.2	legal	7-8
# ::node	0.1.2.0	cheap	28-29
# ::node	0.2	insure-02	32-33
# ::node	0.2.0	house	31-32
# ::node	0.3	and	22-23
# ::node	0.3.0	accident	21-22
# ::node	0.3.0.0	car	20-21
# ::node	0.3.1	policy	26-27
# ::node	0.3.1.0	ownership	24-25
# ::node	0.3.1.1	many	25-26
# ::root	0	claim-01
# ::edge	accident	mod	car	0.3.0	0.3.0.0	
# ::edge	and	op1	claim-01	0.3	0	
# ::edge	and	op2	accident	0.3	0.3.0	
# ::edge	and	op3	policy	0.3	0.3.1	
# ::edge	appear-01	ARG0	policy	0.1.1.1	0.1.1.1.0	
# ::edge	appear-01	ARG1	concentrate-02	0.1.1.1	0.1.1	
# ::edge	claim-01	ARG1	house	0	0.0	
# ::edge	claim-01	ARG2	insure-02	0	0.1	
# ::edge	concentrate-02	ARG0	since	0.1.1	0.1.1.0	
# ::edge	concentrate-02	ARG1	insure-02	0.1.1	0.1	
# ::edge	concentrate-02	ARG2	band	0.1.1	0.1.1.2	
# ::edge	insure-02	ARG1	expend-01	0.1	0.1.0	
# ::edge	insure-02	ARG2	claim-01	0.2	0	
# ::edge	insure-02	mod	house	0.2	0.2.0	
# ::edge	insure-02	mod	legal	0.1	0.1.2	
# ::edge	legal	mod	cheap	0.1.2	0.1.2.0	
# ::edge	narrow-01	ARG1	band	0.1.1.2.0	0.1.1.2	
# ::edge	policy	mod	ownership	0.3.1	0.3.1.0	
# ::edge	policy	quant	many	0.3.1	0.3.1.1	
(c3 / claim-01 
      :ARG1 (h2 / house) 
      :ARG2 (i2 / insure-02 
            :ARG1 (e / expend-01) 
            :ARG1-of (c4 / concentrate-02 
                  :ARG0 (s / since) 
                  :ARG1-of (a3 / appear-01 
                        :ARG0 (p2 / policy)) 
                  :ARG2 (b / band 
                        :ARG1-of (n / narrow-01))) 
            :mod (l / legal 
                  :mod (c / cheap))) 
      :ARG2-of (i / insure-02 
            :mod (h / house)) 
      :op-of (a / and 
            :op1 (a2 / accident 
                  :mod (c2 / car)) 
            :op2 (p / policy 
                  :mod (o / ownership) 
                  :quant (m / many))))

# ::snt the energy sector has been affected by a 29 per cent drop in north sea oil extraction over the past year to its lowest level for a decade which has largely been due to a series of accidents beginning with the piper alpha disaster in july 1988
# ::tok the energy sector has been affected by a 29 per cent drop in north sea oil extraction over the past year to its lowest level for a decade which has largely been due to a series of accidents beginning with the piper alpha disaster in july 1988
# ::alignments 45-47|0.0.0.2.1+0.0.0.2.0+0.0.0.2 43-44|0.0 41-42|0 38-39|0.0.0 37-38|0.0.0.0 35-36|0.0.0.0.0 30-31|0.0.0.1.2.0.0 27-28|0.0.0.1.2.0.2.1.0+0.0.0.1.2.0.2.1 24-25|0.0.0.1.2.0.2 23-24|0.0.0.1.2.0.2.0.0+0.0.0.1.2.0.2.0 20-21|0.0.0.1.3 19-20|0.0.0.1.3.0 16-17|0.0.0.1 15-16|0.0.0.1.1 14-15|0.0.0.1.1.0 13-14|0.0.0.1.0 11-12|0.0.0.1.2 10-11|0.0.0.1.2.1.0+0.0.0.1.2.1 8-9|0.0.0.1.2.0.0.0 5-6|0.0.0.1.2.0 2-3|0.0.0.1.2.0.1 1-2|0.0.0.1.2.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:58.710
# ::node	0	piper	41-42
# ::node	0.0	disaster	43-44
# ::node	0.0.0	begin-01	38-39
# ::node	0.0.0.0	accident	37-38
# ::node	0.0.0.0.0	series	35-36
# ::node	0.0.0.1	extract-01	16-17
# ::node	0.0.0.1.0	north	13-14
# ::node	0.0.0.1.1	oil	15-16
# ::node	0.0.0.1.1.0	sea	14-15
# ::node	0.0.0.1.2	drop-01	11-12
# ::node	0.0.0.1.2.0	affect-01	5-6
# ::node	0.0.0.1.2.0.0	large	30-31
# ::node	0.0.0.1.2.0.0.0	29	8-9
# ::node	0.0.0.1.2.0.1	sector	2-3
# ::node	0.0.0.1.2.0.1.0	energy	1-2
# ::node	0.0.0.1.2.0.2	level	24-25
# ::node	0.0.0.1.2.0.2.0	low	23-24
# ::node	0.0.0.1.2.0.2.0.0	most	23-24
# ::node	0.0.0.1.2.0.2.1	temporal-quantity	27-28
# ::node	0.0.0.1.2.0.2.1.0	decade	27-28
# ::node	0.0.0.1.2.1	monetary-quantity	10-11
# ::node	0.0.0.1.2.1.0	cent	10-11
# ::node	0.0.0.1.3	year	20-21
# ::node	0.0.0.1.3.0	past	19-20
# ::node	0.0.0.2	date-entity	45-47
# ::node	0.0.0.2.0	7	45-47
# ::node	0.0.0.2.1	1988	45-47
# ::root	0	piper
(p / piper 
      :mod-of (d2 / disaster 
            :manner-of (b / begin-01 
                  :ARG1 (a / accident 
                        :quant (s / series)) 
                  :ARG2 (e / extract-01 
                        :ARG0 (n / north) 
                        :ARG1 (o / oil 
                              :mod (s2 / sea)) 
                        :ARG1-of (d4 / drop-01 
                              :ARG2-of (a2 / affect-01 
                                    :ARG0 (l / large 
                                          :poss-of 29) 
                                    :ARG1 (s3 / sector 
                                          :mod (e2 / energy)) 
                                    :degree (l2 / level 
                                          :mod (l3 / low 
                                                :degree (m / most)) 
                                          :mod (t / temporal-quantity 
                                                :unit (d3 / decade)))) 
                              :ARG3 (m2 / monetary-quantity 
                                    :unit (c / cent))) 
                        :time (y / year 
                              :mod (p2 / past))) 
                  :time (d / date-entity 
                        :month 7 
                        :year 1988))))

# ::snt every ship aircraft and base in the us navy was observing the first ever servicewide stand down yesterday ordered after an extraordinary run of naval accidents raised doubts concerning safety and training procedures marc champion reports
# ::tok every ship aircraft and base in the us navy was observing the first ever servicewide stand down yesterday ordered after an extraordinary run of naval accidents raised doubts concerning safety and training procedures marc champion reports
# ::alignments 35-36|0.0.0.0 34-35|0.0.0.0.0 32-33|0.1 31-32|0.1.0 30-31|0.1.0.2 29-30|0.1.0.2.0 28-29|0 27-28|0.0 26-27|0.0.0 25-26|0.0.0.1.0.1 21-22|0.1.0.1 19-20|0.0.0.1 18-19|0.0.0.1.0 17-18|0.0.0.1.0.0 16-17|0.1.0.0 13-14|0.1.0.0.0 10-11|0.0.0.1.0.0.0 8-9|0.1.0.2.0.0 4-5|0.0.0.1.0.0.0.0.1 3-4|0.0.0.1.0.0.0.0 2-3|0.0.0.1.0.0.0.0.0 1-2|0.0.0.1.0.0.0.0.0.0 0-1|0.0.0.1.0.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:59.012
# ::node	0	concern-02	28-29
# ::node	0.0	doubt-01	27-28
# ::node	0.0.0	raise-01	26-27
# ::node	0.0.0.0	report-01	35-36
# ::node	0.0.0.0.0	champion	34-35
# ::node	0.0.0.1	after	19-20
# ::node	0.0.0.1.0	order-01	18-19
# ::node	0.0.0.1.0.0	yesterday	17-18
# ::node	0.0.0.1.0.0.0	observe-01	10-11
# ::node	0.0.0.1.0.0.0.0	and	3-4
# ::node	0.0.0.1.0.0.0.0.0	aircraft	2-3
# ::node	0.0.0.1.0.0.0.0.0.0	ship	1-2
# ::node	0.0.0.1.0.0.0.0.0.1	every	0-1
# ::node	0.0.0.1.0.0.0.0.1	base	4-5
# ::node	0.0.0.1.0.1	accident	25-26
# ::node	0.1	procedure	32-33
# ::node	0.1.0	train-01	31-32
# ::node	0.1.0.0	down	16-17
# ::node	0.1.0.0.0	ever	13-14
# ::node	0.1.0.1	extraordinary	21-22
# ::node	0.1.0.2	and	30-31
# ::node	0.1.0.2.0	safe-41	29-30
# ::node	0.1.0.2.0.0	navy	8-9
# ::root	0	concern-02
# ::edge	after	op1	raise-01	0.0.0.1	0.0.0	
# ::edge	aircraft	mod	every	0.0.0.1.0.0.0.0.0	0.0.0.1.0.0.0.0.0.1	
# ::edge	aircraft	mod	ship	0.0.0.1.0.0.0.0.0	0.0.0.1.0.0.0.0.0.0	
# ::edge	and	op1	aircraft	0.0.0.1.0.0.0.0	0.0.0.1.0.0.0.0.0	
# ::edge	and	op1	safe-41	0.1.0.2	0.1.0.2.0	
# ::edge	and	op2	base	0.0.0.1.0.0.0.0	0.0.0.1.0.0.0.0.1	
# ::edge	and	op2	train-01	0.1.0.2	0.1.0	
# ::edge	concern-02	ARG0	doubt-01	0	0.0	
# ::edge	concern-02	ARG1	procedure	0	0.1	
# ::edge	down	mod	ever	0.1.0.0	0.1.0.0.0	
# ::edge	observe-01	ARG0	and	0.0.0.1.0.0.0	0.0.0.1.0.0.0.0	
# ::edge	observe-01	ARG1	yesterday	0.0.0.1.0.0.0	0.0.0.1.0.0	
# ::edge	order-01	ARG0	yesterday	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	order-01	ARG1	accident	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	order-01	time	after	0.0.0.1.0	0.0.0.1	
# ::edge	raise-01	ARG0	report-01	0.0.0	0.0.0.0	
# ::edge	raise-01	ARG1	doubt-01	0.0.0	0.0	
# ::edge	report-01	ARG0	champion	0.0.0.0	0.0.0.0.0	
# ::edge	safe-41	ARG1	navy	0.1.0.2.0	0.1.0.2.0.0	
# ::edge	train-01	ARG0	down	0.1.0	0.1.0.0	
# ::edge	train-01	ARG1	extraordinary	0.1.0	0.1.0.1	
# ::edge	train-01	ARG2	procedure	0.1.0	0.1	
(c2 / concern-02 
      :ARG0 (d / doubt-01 
            :ARG1-of (r2 / raise-01 
                  :ARG0 (r / report-01 
                        :ARG0 (c / champion)) 
                  :op-of (a3 / after 
                        :time-of (o / order-01 
                              :ARG0 (y / yesterday 
                                    :ARG1-of (o2 / observe-01 
                                          :ARG0 (a4 / and 
                                                :op1 (a5 / aircraft 
                                                      :mod (s2 / ship) 
                                                      :mod (e3 / every)) 
                                                :op2 (b / base)))) 
                              :ARG1 (a2 / accident))))) 
      :ARG1 (p / procedure 
            :ARG2-of (t / train-01 
                  :ARG0 (d2 / down 
                        :mod (e2 / ever)) 
                  :ARG1 (e / extraordinary) 
                  :op-of (a / and 
                        :op1 (s / safe-41 
                              :ARG1 (n / navy))))))

# ::snt   does that agree with your recollection richard richard muttered an affirmation his gaze firmly fixed on the spotless grey carpet and then feeling obliged to speak up in murrays cause added im sure its all a dreadful chapter of accidents sir
# ::tok does that agree with your recollection richard richard muttered an affirmation his gaze firmly fixed on the spotless grey carpet and then feeling obliged to speak up in murrays cause added im sure its all a dreadful chapter of accidents sir
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:59.013
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt i think that was a factor with the surrey accident
# ::tok i think that was a factor with the surrey accident
# ::alignments 9-10|0.1.0 5-6|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:59.024
# ::node	0	think-01	1-2
# ::node	0.0	i	0-1
# ::node	0.1	factor	5-6
# ::node	0.1.0	accident	9-10
# ::root	0	think-01
# ::edge	factor	poss	accident	0.1	0.1.0	
# ::edge	think-01	ARG0	i	0	0.0	
# ::edge	think-01	ARG1	factor	0	0.1	
(t / think-01 
      :ARG0 (i / i) 
      :ARG1 (f / factor 
            :poss (a / accident)))

# ::snt about half an hour after the first accident six more vehicles including three lorries were involved in a crash on the southbound carriageway of the m1 near junction 19 at rugby
# ::tok about half an hour after the first accident six more vehicles including three lorries were involved in a crash on the southbound carriageway of the m1 near junction 19 at rugby
# ::alignments 28-29|0.3 26-27|0.2.0 18-19|0.2 15-16|0 12-13|0.1.1 10-11|0.0 8-9|0.0.0 7-8|0.1.2.0 4-5|0.1.2 3-4|0.1.3+0.1 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:59.168
# ::node	0	involve-01	15-16
# ::node	0.0	vehicle	10-11
# ::node	0.0.0	6	8-9
# ::node	0.1	temporal-quantity	3-4
# ::node	0.1.0	half	1-2
# ::node	0.1.1	3	12-13
# ::node	0.1.2	after	4-5
# ::node	0.1.2.0	accident	7-8
# ::node	0.1.3	hour	3-4
# ::node	0.2	crash-01	18-19
# ::node	0.2.0	near	26-27
# ::node	0.3	19	28-29
# ::root	0	involve-01
# ::edge	19	op1	involve-01	0.3	0	
# ::edge	after	op1	accident	0.1.2	0.1.2.0	
# ::edge	after	quant	temporal-quantity	0.1.2	0.1	
# ::edge	crash-01	ARG1	near	0.2	0.2.0	
# ::edge	involve-01	ARG0	vehicle	0	0.0	
# ::edge	involve-01	ARG1	temporal-quantity	0	0.1	
# ::edge	involve-01	ARG2	crash-01	0	0.2	
# ::edge	temporal-quantity	mod	half	0.1	0.1.0	
# ::edge	temporal-quantity	quant	3	0.1	0.1.1	
# ::edge	temporal-quantity	unit	hour	0.1	0.1.3	
# ::edge	vehicle	quant	6	0.0	0.0.0	
(i / involve-01 
      :ARG0 (v / vehicle 
            :quant 6) 
      :ARG1 (t / temporal-quantity 
            :mod (h2 / half) 
            :quant 3 
            :quant-of (a2 / after 
                  :op1 (a / accident)) 
            :unit (h / hour)) 
      :ARG2 (c / crash-01 
            :ARG1 (n / near)) 
      :op-of 19)

# ::snt in 1980 i got chatting to stan francourt the caddie who was with me when i had the accident in 1973
# ::tok in 1980 i got chatting to stan francourt the caddie who was with me when i had the accident in 1973
# ::alignments 20-21|0.1.0+0.1 18-19|0 15-16|0.0 2-3|0.0.0.0 1-2|0.0.0.1+0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T06:59:59.197
# ::node	0	accident	18-19
# ::node	0.0	i	15-16
# ::node	0.0.0	date-entity	1-2
# ::node	0.0.0.0	i	2-3
# ::node	0.0.0.1	1980	1-2
# ::node	0.1	date-entity	20-21
# ::node	0.1.0	1973	20-21
# ::root	0	accident
# ::edge	accident	example	i	0	0.0	
# ::edge	accident	time	date-entity	0	0.1	
# ::edge	date-entity	poss	i	0.0.0	0.0	
# ::edge	date-entity	year	1973	0.1	0.1.0	
# ::edge	date-entity	year	1980	0.0.0	0.0.0.1	
# ::edge	i	time	date-entity	0.0.0.0	0.0.0	
(a / accident 
      :example (i / i 
            :poss-of (d2 / date-entity 
                  :time-of (i2 / i) 
                  :year 1980)) 
      :time (d / date-entity 
            :year 1973))

# ::snt by virtue of section 4 of the fatal accidents act 1976 a widow was entitled to claim as part of the damages for her husbands death a dependency amounting to twothirds of her husbands pension even though she was still receiving half the amount of that pension from her husbands employers by way of a widows allowance
# ::tok by virtue of section 4 of the fatal accidents act 1976 a widow was entitled to claim as part of the damages for her husbands death a dependency amounting to twothirds of her husbands pension even though she was still receiving half the amount of that pension from her husbands employers by way of a widows allowance
# ::alignments 56-57|0.0.0.1.0 52-53|0.0.0.1 49-50|0.0.0.2.0.0+0.0.0.2.0 46-47|0.0.0.2.1.0.1 43-44|0.0.0.2.1.1 41-42|0.0.0.0 40-41|0.0.0.2.1 39-40|0.0.0.2.1.2 37-38|0.0.0.2.1.0 34-35|0.0.0.3.0.0 33-34|0.0.0.3+0.0.0.3.0 28-29|0.0.0.2 27-28|0.0.0 25-26|0.0.0.2.1.0.0.0 24-25|0.0.0.2.1.0.0.1+0.0.0.2.1.0.0 21-22|0.0.0.2.1.0.0.0.1 16-17|0 14-15|0.1 10-11|0.0.3.0+0.0.3 9-10|0.0 8-9|0.0.1 7-8|0.0.1.0 4-5|0.0.0.2.1.0.0.0.0 3-4|0.0.2.0 1-2|0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:00.158
# ::node	0	claim-01	16-17
# ::node	0.0	act-02	9-10
# ::node	0.0.0	depend-01	27-28
# ::node	0.0.0.0	half	41-42
# ::node	0.0.0.1	way	52-53
# ::node	0.0.0.1.0	allowance	56-57
# ::node	0.0.0.2	amount-01	28-29
# ::node	0.0.0.2.0	have-rel-role-91	49-50
# ::node	0.0.0.2.0.0	husband	49-50
# ::node	0.0.0.2.1	receive-01	40-41
# ::node	0.0.0.2.1.0	she	37-38
# ::node	0.0.0.2.1.0.0	have-rel-role-91	24-25
# ::node	0.0.0.2.1.0.0.0	die-01	25-26
# ::node	0.0.0.2.1.0.0.0.0	4	4-5
# ::node	0.0.0.2.1.0.0.0.1	damage-01	21-22
# ::node	0.0.0.2.1.0.0.1	husband	24-25
# ::node	0.0.0.2.1.0.1	pension	46-47
# ::node	0.0.0.2.1.1	amount	43-44
# ::node	0.0.0.2.1.2	still	39-40
# ::node	0.0.0.3	husband	33-34
# ::node	0.0.0.3.0	have-rel-role-91	33-34
# ::node	0.0.0.3.0.0	pension	34-35
# ::node	0.0.1	accident	8-9
# ::node	0.0.1.0	fatal	7-8
# ::node	0.0.2	virtue	1-2
# ::node	0.0.2.0	section	3-4
# ::node	0.0.3	date-entity	10-11
# ::node	0.0.3.0	1976	10-11
# ::node	0.1	entitle-02	14-15
# ::root	0	claim-01
# ::edge	accident	mod	fatal	0.0.1	0.0.1.0	
# ::edge	act-02	ARG0	depend-01	0.0	0.0.0	
# ::edge	act-02	ARG1	accident	0.0	0.0.1	
# ::edge	act-02	manner	virtue	0.0	0.0.2	
# ::edge	act-02	time	date-entity	0.0	0.0.3	
# ::edge	amount-01	ARG1	depend-01	0.0.0.2	0.0.0	
# ::edge	amount-01	purpose	receive-01	0.0.0.2	0.0.0.2.1	
# ::edge	claim-01	ARG1	act-02	0	0.0	
# ::edge	damage-01	ARG1	die-01	0.0.0.2.1.0.0.0.1	0.0.0.2.1.0.0.0	
# ::edge	date-entity	year	1976	0.0.3	0.0.3.0	
# ::edge	depend-01	ARG0	half	0.0.0	0.0.0.0	
# ::edge	depend-01	ARG1	way	0.0.0	0.0.0.1	
# ::edge	die-01	ARG1	4	0.0.0.2.1.0.0.0	0.0.0.2.1.0.0.0.0	
# ::edge	entitle-02	ARG1	claim-01	0.1	0	
# ::edge	have-rel-role-91	ARG0	die-01	0.0.0.2.1.0.0	0.0.0.2.1.0.0.0	
# ::edge	have-rel-role-91	ARG0	pension	0.0.0.3.0	0.0.0.3.0.0	
# ::edge	have-rel-role-91	ARG1	amount-01	0.0.0.2.0	0.0.0.2	
# ::edge	have-rel-role-91	ARG1	she	0.0.0.2.1.0.0	0.0.0.2.1.0	
# ::edge	have-rel-role-91	ARG2	husband	0.0.0.2.0	0.0.0.2.0.0	
# ::edge	have-rel-role-91	ARG2	husband	0.0.0.2.1.0.0	0.0.0.2.1.0.0.1	
# ::edge	have-rel-role-91	ARG2	husband	0.0.0.3.0	0.0.0.3	
# ::edge	husband	poss	depend-01	0.0.0.3	0.0.0	
# ::edge	pension	poss	she	0.0.0.2.1.0.1	0.0.0.2.1.0	
# ::edge	receive-01	ARG0	she	0.0.0.2.1	0.0.0.2.1.0	
# ::edge	receive-01	ARG1	amount	0.0.0.2.1	0.0.0.2.1.1	
# ::edge	receive-01	time	still	0.0.0.2.1	0.0.0.2.1.2	
# ::edge	virtue	location	section	0.0.2	0.0.2.0	
# ::edge	way	mod	allowance	0.0.0.1	0.0.0.1.0	
(c / claim-01 
      :ARG1 (a4 / act-02 
            :ARG0 (d / depend-01 
                  :ARG0 (h3 / half) 
                  :ARG1 (w / way 
                        :mod (a / allowance)) 
                  :ARG1-of (a3 / amount-01 
                        :ARG1-of (h / have-rel-role-91 
                              :ARG2 (h2 / husband)) 
                        :purpose (r / receive-01 
                              :ARG0 (s2 / she 
                                    :ARG1-of (h6 / have-rel-role-91 
                                          :ARG0 (d2 / die-01 
                                                :ARG1 4 
                                                :ARG1-of (d3 / damage-01)) 
                                          :ARG2 (h7 / husband)) 
                                    :poss-of (p / pension)) 
                              :ARG1 (a2 / amount) 
                              :time (s / still))) 
                  :poss-of (h5 / husband 
                        :ARG2-of (h4 / have-rel-role-91 
                              :ARG0 (p2 / pension)))) 
            :ARG1 (a5 / accident 
                  :mod (f / fatal)) 
            :manner (v / virtue 
                  :location (s3 / section)) 
            :time (d4 / date-entity 
                  :year 1976)) 
      :ARG1-of (e / entitle-02))

# ::snt 95 at the beginning of this year i came upon a passage in the chapter on health and personal social services which may go some way to explaining what must have puzzled many people about the way we are governed the background to decisionmaking and its sustaining rhetoric the department of transport estimated that the average cost of a fatal road accident in great britain in 1987 was just over 555000 compared with just over 522000 in 1986
# ::tok 95 at the beginning of this year i came upon a passage in the chapter on health and personal social services which may go some way to explaining what must have puzzled many people about the way we are governed the background to decisionmaking and its sustaining rhetoric the department of transport estimated that the average cost of a fatal road accident in great britain in 1987 was just over 555000 compared with just over 522000 in 1986
# ::alignments 77-78|0.2.1.0.0.0+0.2.1.0.0 75-76|0.2.0.1.2+0.2.0.1.1+0.2.0.1.0+0.2.0.1 73-74|0.0.0.0 71-72|0.2.0 70-71|0.2.0.0.2+0.2.0.0.1+0.2.0.0.0+0.2.0.0 68-69|0.1.0.0 66-67|0.1.0.1.0+0.1.0.1 63-65|0.2.2.0+0.2.2.1+0.2.2+0.2 61-62|0.2.1 60-61|0.2.1.1 59-60|0.2.1.2 56-57|0.2.1.0 52-53|0 51-52|0.0.0 49-50|0.0 47-48|0.1 46-47|0.1.0 44-45|0.1.1 41-42|0.1.1.1 39-40|0.1.1.1.0 37-38|0.1.1.1.0.0 36-37|0.1.1.1.0.1 32-33|0.1.1.2 27-28|0.1.1.0 25-26|0.1.1.0.0 24-25|0.1.1.0.0.1 22-23|0.1.1.0.0.0.0+0.1.1.0.0.0 20-21|0.1.1.0.0.2 19-20|0.1.1.0.0.2.1 18-19|0.1.1.0.0.2.0 17-18|0.1.1.0.0.2.2 16-17|0.1.1.0.0.2.2.0.0.0 14-15|0.1.1.0.0.2.2.0.0 11-12|0.1.1.0.0.2.2.0 7-8|0.1.1.0.0.2.2.1.0 6-7|0.1.1.0.0.2.2.1.2 5-6|0.1.1.0.0.2.2.1.2.0 3-4|0.1.1.0.0.2.2.1 0-1|0.1.1.0.0.2.2.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:03.857
# ::node	0	estimate-01	52-53
# ::node	0.0	department	49-50
# ::node	0.0.0	transport-01	51-52
# ::node	0.0.0.0	just	73-74
# ::node	0.1	rhetoric	47-48
# ::node	0.1.0	sustain-01	46-47
# ::node	0.1.0.0	just	68-69
# ::node	0.1.0.1	date-entity	66-67
# ::node	0.1.0.1.0	1987	66-67
# ::node	0.1.1	and	44-45
# ::node	0.1.1.0	explain-01	27-28
# ::node	0.1.1.0.0	way	25-26
# ::node	0.1.1.0.0.0	date-entity	22-23
# ::node	0.1.1.0.0.0.0	5	22-23
# ::node	0.1.1.0.0.1	some	24-25
# ::node	0.1.1.0.0.2	service	20-21
# ::node	0.1.1.0.0.2.0	personal	18-19
# ::node	0.1.1.0.0.2.1	society	19-20
# ::node	0.1.1.0.0.2.2	and	17-18
# ::node	0.1.1.0.0.2.2.0	pass-01	11-12
# ::node	0.1.1.0.0.2.2.0.0	chapter	14-15
# ::node	0.1.1.0.0.2.2.0.0.0	health	16-17
# ::node	0.1.1.0.0.2.2.1	begin-01	3-4
# ::node	0.1.1.0.0.2.2.1.0	i	7-8
# ::node	0.1.1.0.0.2.2.1.1	95	0-1
# ::node	0.1.1.0.0.2.2.1.2	year	6-7
# ::node	0.1.1.0.0.2.2.1.2.0	this	5-6
# ::node	0.1.1.1	background	41-42
# ::node	0.1.1.1.0	govern-01	39-40
# ::node	0.1.1.1.0.0	we	37-38
# ::node	0.1.1.1.0.1	way	36-37
# ::node	0.1.1.2	many	32-33
# ::node	0.2	country	63-65
# ::node	0.2.0	compare-01	71-72
# ::node	0.2.0.0	date-entity	70-71
# ::node	0.2.0.0.0	0	70-71
# ::node	0.2.0.0.1	50	70-71
# ::node	0.2.0.0.2	55	70-71
# ::node	0.2.0.1	date-entity	75-76
# ::node	0.2.0.1.0	0	75-76
# ::node	0.2.0.1.1	20	75-76
# ::node	0.2.0.1.2	52	75-76
# ::node	0.2.1	accident	61-62
# ::node	0.2.1.0	cost-01	56-57
# ::node	0.2.1.0.0	date-entity	77-78
# ::node	0.2.1.0.0.0	1986	77-78
# ::node	0.2.1.1	road	60-61
# ::node	0.2.1.2	fatal	59-60
# ::node	0.2.2	name	63-65
# ::node	0.2.2.0	"britain"	63-65
# ::node	0.2.2.1	"great"	63-65
# ::root	0	estimate-01
# ::edge	accident	location	country	0.2.1	0.2	
# ::edge	accident	location	road	0.2.1	0.2.1.1	
# ::edge	accident	mod	fatal	0.2.1	0.2.1.2	
# ::edge	and	op1	pass-01	0.1.1.0.0.2.2	0.1.1.0.0.2.2.0	
# ::edge	and	op1	rhetoric	0.1.1	0.1	
# ::edge	and	op2	service	0.1.1.0.0.2.2	0.1.1.0.0.2	
# ::edge	and	quant	many	0.1.1	0.1.1.2	
# ::edge	background	beneficiary	and	0.1.1.1	0.1.1	
# ::edge	begin-01	ARG1	i	0.1.1.0.0.2.2.1	0.1.1.0.0.2.2.1.0	
# ::edge	begin-01	purpose	and	0.1.1.0.0.2.2.1	0.1.1.0.0.2.2	
# ::edge	begin-01	quant	95	0.1.1.0.0.2.2.1	0.1.1.0.0.2.2.1.1	
# ::edge	begin-01	time	year	0.1.1.0.0.2.2.1	0.1.1.0.0.2.2.1.2	
# ::edge	chapter	mod	health	0.1.1.0.0.2.2.0.0	0.1.1.0.0.2.2.0.0.0	
# ::edge	compare-01	ARG0	date-entity	0.2.0	0.2.0.0	
# ::edge	compare-01	ARG1	date-entity	0.2.0	0.2.0.1	
# ::edge	compare-01	ARG2	country	0.2.0	0.2	
# ::edge	cost-01	ARG1	accident	0.2.1.0	0.2.1	
# ::edge	country	name	name	0.2	0.2.2	
# ::edge	date-entity	day	0	0.2.0.0	0.2.0.0.0	
# ::edge	date-entity	day	0	0.2.0.1	0.2.0.1.0	
# ::edge	date-entity	domain	way	0.1.1.0.0.0	0.1.1.0.0	
# ::edge	date-entity	month	20	0.2.0.1	0.2.0.1.1	
# ::edge	date-entity	month	5	0.1.1.0.0.0	0.1.1.0.0.0.0	
# ::edge	date-entity	month	50	0.2.0.0	0.2.0.0.1	
# ::edge	date-entity	op1	cost-01	0.2.1.0.0	0.2.1.0	
# ::edge	date-entity	op1	sustain-01	0.1.0.1	0.1.0	
# ::edge	date-entity	year	1986	0.2.1.0.0	0.2.1.0.0.0	
# ::edge	date-entity	year	1987	0.1.0.1	0.1.0.1.0	
# ::edge	date-entity	year	52	0.2.0.1	0.2.0.1.2	
# ::edge	date-entity	year	55	0.2.0.0	0.2.0.0.2	
# ::edge	estimate-01	ARG0	department	0	0.0	
# ::edge	estimate-01	ARG1	rhetoric	0	0.1	
# ::edge	estimate-01	ARG2	country	0	0.2	
# ::edge	explain-01	ARG0	way	0.1.1.0	0.1.1.0.0	
# ::edge	explain-01	ARG1	and	0.1.1.0	0.1.1	
# ::edge	govern-01	ARG0	we	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	govern-01	ARG1	background	0.1.1.1.0	0.1.1.1	
# ::edge	govern-01	manner	way	0.1.1.1.0	0.1.1.1.0.1	
# ::edge	name	op1	"britain"	0.2.2	0.2.2.0	
# ::edge	name	op2	"great"	0.2.2	0.2.2.1	
# ::edge	pass-01	ARG1	chapter	0.1.1.0.0.2.2.0	0.1.1.0.0.2.2.0.0	
# ::edge	service	mod	personal	0.1.1.0.0.2	0.1.1.0.0.2.0	
# ::edge	service	mod	society	0.1.1.0.0.2	0.1.1.0.0.2.1	
# ::edge	sustain-01	ARG0	just	0.1.0	0.1.0.0	
# ::edge	sustain-01	ARG1	rhetoric	0.1.0	0.1	
# ::edge	transport-01	ARG1	just	0.0.0	0.0.0.0	
# ::edge	transport-01	instrument	department	0.0.0	0.0	
# ::edge	way	mod	some	0.1.1.0.0	0.1.1.0.0.1	
# ::edge	way	poss	service	0.1.1.0.0	0.1.1.0.0.2	
# ::edge	year	mod	this	0.1.1.0.0.2.2.1.2	0.1.1.0.0.2.2.1.2.0	
(e / estimate-01 
      :ARG0 (d5 / department 
            :instrument-of (t / transport-01 
                  :ARG1 (j / just))) 
      :ARG1 (r2 / rhetoric 
            :ARG1-of (s / sustain-01 
                  :ARG0 (j2 / just) 
                  :op-of (d4 / date-entity 
                        :year 1987)) 
            :op-of (a2 / and 
                  :ARG1-of (e2 / explain-01 
                        :ARG0 (w3 / way 
                              :domain-of (d6 / date-entity 
                                    :month 5) 
                              :mod (s2 / some) 
                              :poss (s3 / service 
                                    :mod (p / personal) 
                                    :mod (s4 / society) 
                                    :op-of (a3 / and 
                                          :op1 (p2 / pass-01 
                                                :ARG1 (c4 / chapter 
                                                      :mod (h / health))) 
                                          :purpose-of (b2 / begin-01 
                                                :ARG1 (i / i) 
                                                :quant 95 
                                                :time (y / year 
                                                      :mod (t2 / this))))))) 
                  :beneficiary-of (b / background 
                        :ARG1-of (g / govern-01 
                              :ARG0 (w / we) 
                              :manner (w2 / way))) 
                  :quant (m / many))) 
      :ARG2 (c2 / country 
            :ARG2-of (c / compare-01 
                  :ARG0 (d3 / date-entity 
                        :day 0 
                        :month 50 
                        :year 55) 
                  :ARG1 (d2 / date-entity 
                        :day 0 
                        :month 20 
                        :year 52)) 
            :location-of (a / accident 
                  :ARG1-of (c3 / cost-01 
                        :op-of (d / date-entity 
                              :year 1986)) 
                  :location (r / road) 
                  :mod (f / fatal)) 
            :name (n / name 
                  :op1 "britain" 
                  :op2 "great")))

# ::snt all he could think to say eventually was you used the wrong tense as far as ted hughes is concerned because unless there has been a tragic accident or a sudden illness i believe mr hughes to be most vigorously alive
# ::tok all he could think to say eventually was you used the wrong tense as far as ted hughes is concerned because unless there has been a tragic accident or a sudden illness i believe mr hughes to be most vigorously alive
# ::alignments 39-40|0.1.1 38-39|0.1.1.0 33-34|0.0 32-33|0.0.0 31-32|0.0.1.1 30-31|0.0.1.1.0 28-29|0.0.1 27-28|0.0.1.0 26-27|0.0.1.0.0 20-21|0 19-20|0.1 14-15|0.1.0 12-13|0.2.0.0.0.0.0 11-12|0.2.0.0.0.0.0.0 9-10|0.2.0.0.0.0 8-9|0.2.0.0.0 6-7|0.2.0.0.1 5-6|0.2.0.0 3-4|0.2 2-3|0.2.1 1-2|0.2.0 0-1|0.2.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:04.938
# ::node	0	cause-01	20-21
# ::node	0.0	believe-01	33-34
# ::node	0.0.0	i	32-33
# ::node	0.0.1	or	28-29
# ::node	0.0.1.0	accident	27-28
# ::node	0.0.1.0.0	tragic	26-27
# ::node	0.0.1.1	illness	31-32
# ::node	0.0.1.1.0	sudden	30-31
# ::node	0.1	concern-01	19-20
# ::node	0.1.0	far	14-15
# ::node	0.1.1	vigorous	39-40
# ::node	0.1.1.0	most	38-39
# ::node	0.2	think-01	3-4
# ::node	0.2.0	he	1-2
# ::node	0.2.0.0	say-01	5-6
# ::node	0.2.0.0.0	you	8-9
# ::node	0.2.0.0.0.0	use-01	9-10
# ::node	0.2.0.0.0.0.0	tense	12-13
# ::node	0.2.0.0.0.0.0.0	wrong-41	11-12
# ::node	0.2.0.0.1	eventual	6-7
# ::node	0.2.1	possible	2-3
# ::node	0.2.2	all	0-1
# ::root	0	cause-01
# ::edge	accident	mod	tragic	0.0.1.0	0.0.1.0.0	
# ::edge	believe-01	ARG0	i	0.0	0.0.0	
# ::edge	believe-01	ARG1	or	0.0	0.0.1	
# ::edge	cause-01	ARG0	believe-01	0	0.0	
# ::edge	cause-01	ARG1	concern-01	0	0.1	
# ::edge	concern-01	ARG0	far	0.1	0.1.0	
# ::edge	concern-01	ARG1	vigorous	0.1	0.1.1	
# ::edge	illness	mod	sudden	0.0.1.1	0.0.1.1.0	
# ::edge	or	op1	accident	0.0.1	0.0.1.0	
# ::edge	or	op2	illness	0.0.1	0.0.1.1	
# ::edge	possible	domain	think-01	0.2.1	0.2	
# ::edge	say-01	ARG0	he	0.2.0.0	0.2.0	
# ::edge	say-01	ARG1	you	0.2.0.0	0.2.0.0.0	
# ::edge	say-01	manner	eventual	0.2.0.0	0.2.0.0.1	
# ::edge	think-01	ARG0	he	0.2	0.2.0	
# ::edge	think-01	ARG1	cause-01	0.2	0	
# ::edge	think-01	mod	all	0.2	0.2.2	
# ::edge	use-01	ARG0	you	0.2.0.0.0.0	0.2.0.0.0	
# ::edge	use-01	ARG1	tense	0.2.0.0.0.0	0.2.0.0.0.0.0	
# ::edge	vigorous	degree	most	0.1.1	0.1.1.0	
# ::edge	wrong-41	ARG1	tense	0.2.0.0.0.0.0.0	0.2.0.0.0.0.0	
(c / cause-01 
      :ARG0 (b / believe-01 
            :ARG0 (i / i) 
            :ARG1 (o / or 
                  :op1 (a / accident 
                        :mod (t / tragic)) 
                  :op2 (i2 / illness 
                        :mod (s / sudden)))) 
      :ARG1 (c2 / concern-01 
            :ARG0 (f / far) 
            :ARG1 (v / vigorous 
                  :degree (m / most))) 
      :ARG1-of (t3 / think-01 
            :ARG0 (h / he 
                  :ARG0-of (s2 / say-01 
                        :ARG1 (y / you 
                              :ARG0-of (u / use-01 
                                    :ARG1 (t2 / tense 
                                          :ARG1-of (w / wrong-41)))) 
                        :manner (e / eventual))) 
            :domain-of (p / possible) 
            :mod (a2 / all)))

# ::snt called a fatal accident inquiry it will be presided over by a sheriff
# ::tok called a fatal accident inquiry it will be presided over by a sheriff
# ::alignments 8-9|0 5-6|0.0 4-5|0.0.0 3-4|0.0.0.0 2-3|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:04.983
# ::node	0	preside-01	8-9
# ::node	0.0	it	5-6
# ::node	0.0.0	inquire-01	4-5
# ::node	0.0.0.0	accident	3-4
# ::node	0.0.0.1	fatal	2-3
# ::root	0	preside-01
# ::edge	inquire-01	ARG0	accident	0.0.0	0.0.0.0	
# ::edge	inquire-01	ARG1	it	0.0.0	0.0	
# ::edge	inquire-01	mod	fatal	0.0.0	0.0.0.1	
# ::edge	preside-01	ARG1	it	0	0.0	
(p / preside-01 
      :ARG1 (i / it 
            :ARG1-of (i2 / inquire-01 
                  :ARG0 (a / accident) 
                  :mod (f / fatal))))

# ::snt thats why lloyds bank insurance services have negotiated with  the sun alliance insurance group to bring you a valued  customer of lloyds bank accident cashguard dash, a plan that  helps protect you and your family from financial hardship should  a serious accident strike, the plan will pay substantial cash benefits directly to you free  of income tax under current inland revenue regulations if you  are permanently disabled as a result of an accident
# ::tok thats why lloyds bank insurance services have negotiated with the sun alliance insurance group to bring you a valued customer of lloyds bank accident cashguard dash , a plan that helps protect you and your family from financial hardship should a serious accident strike , the plan will pay substantial cash benefits directly to you free of income tax under current inland revenue regulations if you are permanently disabled as a result of an accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:04.985
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt was it an accident was i pushed or was i just plain stupid most accidents occur as a result of a complicated tangle of bad planning misjudgement bad decision making under stress and a lack of information and mine was no different
# ::tok was it an accident was i pushed or was i just plain stupid most accidents occur as a result of a complicated tangle of bad planning misjudgement bad decision making under stress and a lack of information and mine was no different
# ::alignments 41-42|0.2.2 40-41|0.2.2.1 38-39|0.2.2.0.0.2 37-38|0.2.2.0.0 36-37|0.2.2.0.1 34-35|0.2.2.0 32-33|0.2 31-32|0.2.2.0.0.1 28-29|0.2.1 27-28|0.2.1.1 25-26|0.2.2.0.0.0 24-25|0.2.2.0.0.0.0 21-22|0.2.2.0.0.1.0 18-19|0.2.0 15-16|0 14-15|0.0 13-14|0.2.0.0 12-13|0.1.0.0 11-12|0.1.0 10-11|0.1 9-10|0.2.1.0.0.2 7-8|0.2.1.0 6-7|0.2.1.0.0 5-6|0.2.1.0.0.3 3-4|0.2.1.0.0.1 1-2|0.2.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:05.994
# ::node	0	occur-01	15-16
# ::node	0.0	accident	14-15
# ::node	0.1	just	10-11
# ::node	0.1.0	plain	11-12
# ::node	0.1.0.0	stupid	12-13
# ::node	0.2	and	32-33
# ::node	0.2.0	result-01	18-19
# ::node	0.2.0.0	most	13-14
# ::node	0.2.1	decide-01	28-29
# ::node	0.2.1.0	or	7-8
# ::node	0.2.1.0.0	push-01	6-7
# ::node	0.2.1.0.0.0	it	1-2
# ::node	0.2.1.0.0.1	accident	3-4
# ::node	0.2.1.0.0.2	i	9-10
# ::node	0.2.1.0.0.3	i	5-6
# ::node	0.2.1.1	bad	27-28
# ::node	0.2.2	differ-02	41-42
# ::node	0.2.2.0	lack-01	34-35
# ::node	0.2.2.0.0	and	37-38
# ::node	0.2.2.0.0.0	plan-01	25-26
# ::node	0.2.2.0.0.0.0	bad	24-25
# ::node	0.2.2.0.0.1	stress-01	31-32
# ::node	0.2.2.0.0.1.0	complicate-01	21-22
# ::node	0.2.2.0.0.2	mine	38-39
# ::node	0.2.2.0.1	information	36-37
# ::node	0.2.2.1	-	40-41
# ::root	0	occur-01
# ::edge	and	op1	result-01	0.2	0.2.0	
# ::edge	and	op1	stress-01	0.2.2.0.0	0.2.2.0.0.1	
# ::edge	and	op2	decide-01	0.2	0.2.1	
# ::edge	and	op2	mine	0.2.2.0.0	0.2.2.0.0.2	
# ::edge	and	op3	differ-02	0.2	0.2.2	
# ::edge	complicate-01	ARG1	stress-01	0.2.2.0.0.1.0	0.2.2.0.0.1	
# ::edge	decide-01	ARG1	or	0.2.1	0.2.1.0	
# ::edge	decide-01	mod	bad	0.2.1	0.2.1.1	
# ::edge	differ-02	ARG1	lack-01	0.2.2	0.2.2.0	
# ::edge	differ-02	polarity	-	0.2.2	0.2.2.1	
# ::edge	lack-01	ARG0	and	0.2.2.0	0.2.2.0.0	
# ::edge	lack-01	ARG1	information	0.2.2.0	0.2.2.0.1	
# ::edge	most	compared-to	result-01	0.2.0.0	0.2.0	
# ::edge	occur-01	ARG0	accident	0	0.0	
# ::edge	occur-01	ARG1	just	0	0.1	
# ::edge	occur-01	condition	and	0	0.2	
# ::edge	or	op1	push-01	0.2.1.0	0.2.1.0.0	
# ::edge	plain	degree	just	0.1.0	0.1	
# ::edge	plan-01	ARG1	and	0.2.2.0.0.0	0.2.2.0.0	
# ::edge	plan-01	mod	bad	0.2.2.0.0.0	0.2.2.0.0.0.0	
# ::edge	push-01	ARG0	it	0.2.1.0.0	0.2.1.0.0.0	
# ::edge	push-01	ARG1	accident	0.2.1.0.0	0.2.1.0.0.1	
# ::edge	push-01	ARG2	i	0.2.1.0.0	0.2.1.0.0.2	
# ::edge	push-01	mod	i	0.2.1.0.0	0.2.1.0.0.3	
# ::edge	stupid	mod	plain	0.1.0.0	0.1.0	
(o / occur-01 
      :ARG0 (a3 / accident) 
      :ARG1 (j / just 
            :degree-of (p2 / plain 
                  :mod-of (s2 / stupid))) 
      :condition (a2 / and 
            :op1 (r / result-01 
                  :compared-to-of (m2 / most)) 
            :op2 (d2 / decide-01 
                  :ARG1 (o2 / or 
                        :op1 (p3 / push-01 
                              :ARG0 (i4 / it) 
                              :ARG1 (a4 / accident) 
                              :ARG2 (i2 / i) 
                              :mod (i3 / i))) 
                  :mod (b / bad)) 
            :op3 (d / differ-02 
                  :ARG1 (l / lack-01 
                        :ARG0 (a / and 
                              :ARG1-of (p / plan-01 
                                    :mod (b2 / bad)) 
                              :op1 (s / stress-01 
                                    :ARG1-of (c / complicate-01)) 
                              :op2 (m / mine)) 
                        :ARG1 (i / information)) 
                  :polarity (- / -))))

# ::snt it is another of lifes 765 secrets that you never do the best things deliberately you pick your pleasures up along the way by accident
# ::tok it is another of lifes 765 secrets that you never do the best things deliberately you pick your pleasures up along the way by accident
# ::alignments 24-25|0.3.0 22-23|0.3 20-21|0.3.1 16-17|0 15-16|0.0 14-15|0.4 13-14|0.2 8-9|0.1 6-7|0.1.0 2-3|0.1.0.0 0-1|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:06.207
# ::node	0	pick-01	16-17
# ::node	0.0	you	15-16
# ::node	0.1	you	8-9
# ::node	0.1.0	secret	6-7
# ::node	0.1.0.0	another	2-3
# ::node	0.1.0.0.0	it	0-1
# ::node	0.2	thing	13-14
# ::node	0.3	way	22-23
# ::node	0.3.0	accident	24-25
# ::node	0.3.1	along	20-21
# ::node	0.4	deliberate	14-15
# ::root	0	pick-01
# ::edge	along	op1	way	0.3.1	0.3	
# ::edge	it	mod	another	0.1.0.0.0	0.1.0.0	
# ::edge	pick-01	ARG0	you	0	0.0	
# ::edge	pick-01	ARG1	you	0	0.1	
# ::edge	pick-01	ARG2	thing	0	0.2	
# ::edge	pick-01	manner	way	0	0.3	
# ::edge	pick-01	mod	deliberate	0	0.4	
# ::edge	secret	mod	another	0.1.0	0.1.0.0	
# ::edge	secret	poss	you	0.1.0	0.1	
# ::edge	way	mod	accident	0.3	0.3.0	
(p / pick-01 
      :ARG0 (y / you) 
      :ARG1 (y2 / you 
            :poss-of (s / secret 
                  :mod (a3 / another 
                        :mod-of (i / it)))) 
      :ARG2 (t / thing) 
      :manner (w / way 
            :mod (a / accident) 
            :op-of (a2 / along)) 
      :mod (d / deliberate))

# ::snt   largescale plans for evacuating thousands of people in the event of an accident at nuclear power stations are to be developed by local authorities the advisory committee on safety of nuclear installations disclosed yesterday writes paul brown, until now emergency plans have only been for small accidents with the possibility of anything on the scale of three mile island or chernobyl officially discounted
# ::tok largescale plans for evacuating thousands of people in the event of an accident at nuclear power stations are to be developed by local authorities the advisory committee on safety of nuclear installations disclosed yesterday writes paul brown , until now emergency plans have only been for small accidents with the possibility of anything on the scale of three mile island or chernobyl officially discounted
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:06.208
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt   mrs shelley cranshaw prosecuting said that the offence came to light when howell had an accident on the marcham road
# ::tok mrs shelley cranshaw prosecuting said that the offence came to light when howell had an accident on the marcham road
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:06.209
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt he denied hiding or running away from the accident at wootton near abingdon and said he had broken his glasses and was only some 20 yards away from the scene of the accident in a garden
# ::tok he denied hiding or running away from the accident at wootton near abingdon and said he had broken his glasses and was only some 20 yards away from the scene of the accident in a garden
# ::alignments 35-36|0.3.0.0.1.0.0 32-33|0.3.0.0.1.0 29-30|0.3.0.0.1 26-27|0.0.1.0 25-26|0.0.1.2 24-25|0.0.1.1 23-24|0.0.1 22-23|0.0.1.2.0 20-21|0.3.0 19-20|0.3.0.0.0.0 17-18|0.3.0.0 15-16|0.3.0.0.0 14-15|0.3 13-14|0 11-12|0.2 8-9|0.1 5-6|0.0.0.0.0 3-4|0.0.0.0.1 2-3|0.0.0.0 1-2|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:06.858
# ::node	0	and	13-14
# ::node	0.0	deny-01	1-2
# ::node	0.0.0	he	0-1
# ::node	0.0.0.0	hide-01	2-3
# ::node	0.0.0.0.0	away	5-6
# ::node	0.0.0.0.1	or	3-4
# ::node	0.0.1	some	23-24
# ::node	0.0.1.0	away	26-27
# ::node	0.0.1.1	20	24-25
# ::node	0.0.1.2	yard	25-26
# ::node	0.0.1.2.0	only	22-23
# ::node	0.1	accident	8-9
# ::node	0.2	near	11-12
# ::node	0.3	say-01	14-15
# ::node	0.3.0	and	20-21
# ::node	0.3.0.0	break-01	17-18
# ::node	0.3.0.0.0	he	15-16
# ::node	0.3.0.0.0.0	glass	19-20
# ::node	0.3.0.0.1	scene	29-30
# ::node	0.3.0.0.1.0	accident	32-33
# ::node	0.3.0.0.1.0.0	garden	35-36
# ::root	0	and
# ::edge	accident	location	garden	0.3.0.0.1.0	0.3.0.0.1.0.0	
# ::edge	and	op1	break-01	0.3.0	0.3.0.0	
# ::edge	and	op1	deny-01	0	0.0	
# ::edge	and	op2	accident	0	0.1	
# ::edge	and	op3	near	0	0.2	
# ::edge	and	op4	say-01	0	0.3	
# ::edge	break-01	ARG0	he	0.3.0.0	0.3.0.0.0	
# ::edge	break-01	ARG1	scene	0.3.0.0	0.3.0.0.1	
# ::edge	deny-01	ARG0	he	0.0	0.0.0	
# ::edge	deny-01	ARG1	some	0.0	0.0.1	
# ::edge	glass	poss	he	0.3.0.0.0.0	0.3.0.0.0	
# ::edge	hide-01	ARG0	he	0.0.0.0	0.0.0	
# ::edge	hide-01	ARG1	away	0.0.0.0	0.0.0.0.0	
# ::edge	or	op1	hide-01	0.0.0.0.1	0.0.0.0	
# ::edge	say-01	ARG1	and	0.3	0.3.0	
# ::edge	scene	mod	accident	0.3.0.0.1	0.3.0.0.1.0	
# ::edge	some	direction	away	0.0.1	0.0.1.0	
# ::edge	some	op1	20	0.0.1	0.0.1.1	
# ::edge	yard	mod	only	0.0.1.2	0.0.1.2.0	
# ::edge	yard	quant	some	0.0.1.2	0.0.1	
(a4 / and 
      :op1 (d / deny-01 
            :ARG0 (h3 / he 
                  :ARG0-of (h2 / hide-01 
                        :ARG1 (a6 / away) 
                        :op-of (o2 / or))) 
            :ARG1 (s2 / some 
                  :direction (a2 / away) 
                  :op1 20 
                  :quant-of (y / yard 
                        :mod (o / only)))) 
      :op2 (a5 / accident) 
      :op3 (n / near) 
      :op4 (s3 / say-01 
            :ARG1 (a3 / and 
                  :op1 (b / break-01 
                        :ARG0 (h / he 
                              :poss-of (g2 / glass)) 
                        :ARG1 (s / scene 
                              :mod (a / accident 
                                    :location (g / garden)))))))

# ::snt the visit organised with the cooperation of the soviet authorities will allow the inquiry to learn how the soviet union organised the emergency evacuation of thousands of people three years ago and what contamination and health problems remain 40 months after the worlds worst civil nuclear power station accident
# ::tok the visit organised with the cooperation of the soviet authorities will allow the inquiry to learn how the soviet union organised the emergency evacuation of thousands of people three years ago and what contamination and health problems remain 40 months after the worlds worst civil nuclear power station accident
# ::alignments 48-49|0.3.2.0 47-48|0.3.2.0.0 46-47|0.3.2.0.1 45-46|0.3.2.0.1.0 44-45|0.3.2.0.0.0 43-44|0.1.0 42-43|0.1.0.0 40-41|0.3.2 39-40|0.0+0.0.0 38-39|0.0.0.0 37-38|0.3 36-37|0.3.0 35-36|0.2 34-35|0 33-34|0.1 31-32|0.3.1 29-30|0.3.1.0.0.0.0.0.0+0.3.1.0.0.0.0.0 28-29|0.3.1.0.0.0.0 22-23|0.3.1.1.1 20-21|0.3.1.1 19-20|0.3.1.1.0 15-16|0.3.1.0 13-14|0.3.1.0.2 11-12|0.3.1.0.1 9-10|0.3.1.0.0 5-6|0.3.1.0.0.0 2-3|0.3.1.0.2.0.0 1-2|0.3.1.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:07.969
# ::node	0	and	34-35
# ::node	0.0	month	39-40
# ::node	0.0.0	temporal-quantity	39-40
# ::node	0.0.0.0	40	38-39
# ::node	0.1	contaminate-01	33-34
# ::node	0.1.0	bad	43-44
# ::node	0.1.0.0	world	42-43
# ::node	0.2	health	35-36
# ::node	0.3	remain-01	37-38
# ::node	0.3.0	problem	36-37
# ::node	0.3.1	and	31-32
# ::node	0.3.1.0	learn-01	15-16
# ::node	0.3.1.0.0	authority	9-10
# ::node	0.3.1.0.0.0	cooperate-01	5-6
# ::node	0.3.1.0.0.0.0	3	28-29
# ::node	0.3.1.0.0.0.0.0	temporal-quantity	29-30
# ::node	0.3.1.0.0.0.0.0.0	year	29-30
# ::node	0.3.1.0.1	allow-01	11-12
# ::node	0.3.1.0.2	inquire-01	13-14
# ::node	0.3.1.0.2.0	visit-01	1-2
# ::node	0.3.1.0.2.0.0	organize-01	2-3
# ::node	0.3.1.1	organize-01	20-21
# ::node	0.3.1.1.0	union	19-20
# ::node	0.3.1.1.1	emergency	22-23
# ::node	0.3.2	after	40-41
# ::node	0.3.2.0	accident	48-49
# ::node	0.3.2.0.0	station	47-48
# ::node	0.3.2.0.0.0	civil	44-45
# ::node	0.3.2.0.1	power	46-47
# ::node	0.3.2.0.1.0	nucleus	45-46
# ::root	0	and
# ::edge	accident	location	power	0.3.2.0	0.3.2.0.1	
# ::edge	accident	location	station	0.3.2.0	0.3.2.0.0	
# ::edge	after	op1	accident	0.3.2	0.3.2.0	
# ::edge	allow-01	ARG1	learn-01	0.3.1.0.1	0.3.1.0	
# ::edge	and	op1	contaminate-01	0	0.1	
# ::edge	and	op1	organize-01	0.3.1	0.3.1.1	
# ::edge	and	op2	health	0	0.2	
# ::edge	and	op2	remain-01	0.3.1	0.3	
# ::edge	and	op3	remain-01	0	0.3	
# ::edge	bad	mod	world	0.1.0	0.1.0.0	
# ::edge	contaminate-01	ARG1	bad	0.1	0.1.0	
# ::edge	cooperate-01	ARG0	authority	0.3.1.0.0.0	0.3.1.0.0	
# ::edge	cooperate-01	ARG1	3	0.3.1.0.0.0	0.3.1.0.0.0.0	
# ::edge	inquire-01	ARG0	visit-01	0.3.1.0.2	0.3.1.0.2.0	
# ::edge	inquire-01	ARG1	learn-01	0.3.1.0.2	0.3.1.0	
# ::edge	learn-01	ARG0	authority	0.3.1.0	0.3.1.0.0	
# ::edge	learn-01	ARG1	and	0.3.1.0	0.3.1	
# ::edge	month	domain	and	0.0	0	
# ::edge	organize-01	ARG0	union	0.3.1.1	0.3.1.1.0	
# ::edge	organize-01	ARG1	emergency	0.3.1.1	0.3.1.1.1	
# ::edge	organize-01	ARG1	visit-01	0.3.1.0.2.0.0	0.3.1.0.2.0	
# ::edge	power	mod	nucleus	0.3.2.0.1	0.3.2.0.1.0	
# ::edge	remain-01	ARG1	problem	0.3	0.3.0	
# ::edge	remain-01	time	after	0.3	0.3.2	
# ::edge	station	mod	civil	0.3.2.0.0	0.3.2.0.0.0	
# ::edge	temporal-quantity	quant	3	0.3.1.0.0.0.0.0	0.3.1.0.0.0.0	
# ::edge	temporal-quantity	quant	40	0.0.0	0.0.0.0	
# ::edge	temporal-quantity	unit	month	0.0.0	0.0	
# ::edge	temporal-quantity	unit	year	0.3.1.0.0.0.0.0	0.3.1.0.0.0.0.0.0	
(a3 / and 
      :domain-of (m / month 
            :unit-of (t / temporal-quantity 
                  :quant 40)) 
      :op1 (c2 / contaminate-01 
            :ARG1 (b / bad 
                  :mod (w / world))) 
      :op2 (h / health) 
      :op3 (r / remain-01 
            :ARG1 (p2 / problem) 
            :op-of (a4 / and 
                  :ARG1-of (l / learn-01 
                        :ARG0 (a6 / authority 
                              :ARG0-of (c3 / cooperate-01 
                                    :ARG1 (3 / 3 
                                          :quant-of (t2 / temporal-quantity 
                                                :unit (y / year))))) 
                        :ARG1-of (a5 / allow-01) 
                        :ARG1-of (i / inquire-01 
                              :ARG0 (v / visit-01 
                                    :ARG1-of (o2 / organize-01)))) 
                  :op1 (o / organize-01 
                        :ARG0 (u / union) 
                        :ARG1 (e / emergency))) 
            :time (a2 / after 
                  :op1 (a / accident 
                        :location (s / station 
                              :mod (c / civil)) 
                        :location (p / power 
                              :mod (n / nucleus))))))

# ::snt it only takes a few moments to apply for accident cashguards  important cover, but it could mean the difference between financial security and  financial disaster for you and your family should a serious  accident strike
# ::tok it only takes a few moments to apply for accident cashguards important cover , but it could mean the difference between financial security and financial disaster for you and your family should a serious accident strike
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:07.970
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the federal social security system it is true makes only a modest contribution to accident compensation free hospital care being provided only for the elderly medicare and the poor medicaid and disability benefits only for persons under 65 who suffer total and lasting disablement
# ::tok the federal social security system it is true makes only a modest contribution to accident compensation free hospital care being provided only for the elderly medicare and the poor medicaid and disability benefits only for persons under 65 who suffer total and lasting disablement
# ::alignments 42-43|0.0.2.0.0.1.0.1.0 41-42|0.0.2.0.0.1.0.1 39-40|0.0.2.0.0.1.0 37-38|0.0.2.0.0.1.0.0 35-36|0.0.2.0.0.1 33-34|0.0.2.0 32-33|0.0.2.0.0 31-32|0.0.0 30-31|0.0.2 28-29|0.0.2.0.0.1.0.1.0.0 26-27|0 24-25|0.0.2.1 21-22|0.0.1 20-21|0.0 18-19|0.0.2.0.0.1.1.0 17-18|0.0.2.0.0.1.1.0.0 16-17|0.0.2.0.0.1.1.0.2 15-16|0.0.2.0.0.1.1 14-15|0.0.2.0.0.1.1.1 12-13|0.0.2.0.0.1.1.0.1 11-12|0.0.2.0.0.1.1.0.1.1 9-10|0.0.2.0.0.1.1.0.1.0 7-8|0.0.2.0.0.0.0 5-6|0.0.2.0.0.0 4-5|0.1 3-4|0.1.0 2-3|0.1.0.1 1-2|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:08.773
# ::node	0	and	26-27
# ::node	0.0	provide-01	20-21
# ::node	0.0.0	disability	31-32
# ::node	0.0.1	only	21-22
# ::node	0.0.2	and	30-31
# ::node	0.0.2.0	only	33-34
# ::node	0.0.2.0.0	benefit-01	32-33
# ::node	0.0.2.0.0.0	it	5-6
# ::node	0.0.2.0.0.0.0	true	7-8
# ::node	0.0.2.0.0.1	person	35-36
# ::node	0.0.2.0.0.1.0	suffer-01	39-40
# ::node	0.0.2.0.0.1.0.0	65	37-38
# ::node	0.0.2.0.0.1.0.1	and	41-42
# ::node	0.0.2.0.0.1.0.1.0	last-01	42-43
# ::node	0.0.2.0.0.1.0.1.0.0	poor	28-29
# ::node	0.0.2.0.0.1.1	compensate-01	15-16
# ::node	0.0.2.0.0.1.1.0	care-01	18-19
# ::node	0.0.2.0.0.1.1.0.0	hospital	17-18
# ::node	0.0.2.0.0.1.1.0.1	contribute-01	12-13
# ::node	0.0.2.0.0.1.1.0.1.0	only	9-10
# ::node	0.0.2.0.0.1.1.0.1.1	modest	11-12
# ::node	0.0.2.0.0.1.1.0.2	free-41	16-17
# ::node	0.0.2.0.0.1.1.1	accident	14-15
# ::node	0.0.2.1	elderly	24-25
# ::node	0.1	system	4-5
# ::node	0.1.0	security	3-4
# ::node	0.1.0.0	federal	1-2
# ::node	0.1.0.1	society	2-3
# ::root	0	and
# ::edge	and	mod	elderly	0.0.2	0.0.2.1	
# ::edge	and	mod	only	0.0.2	0.0.2.0	
# ::edge	and	mod	system	0	0.1	
# ::edge	and	op1	provide-01	0.0.2	0.0	
# ::edge	and	op1	suffer-01	0.0.2.0.0.1.0.1	0.0.2.0.0.1.0	
# ::edge	and	op2	last-01	0.0.2.0.0.1.0.1	0.0.2.0.0.1.0.1.0	
# ::edge	benefit-01	ARG0	it	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	benefit-01	ARG1	person	0.0.2.0.0	0.0.2.0.0.1	
# ::edge	benefit-01	mod	only	0.0.2.0.0	0.0.2.0	
# ::edge	care-01	ARG1	hospital	0.0.2.0.0.1.1.0	0.0.2.0.0.1.1.0.0	
# ::edge	compensate-01	ARG1	care-01	0.0.2.0.0.1.1	0.0.2.0.0.1.1.0	
# ::edge	compensate-01	ARG2	person	0.0.2.0.0.1.1	0.0.2.0.0.1	
# ::edge	compensate-01	ARG3	accident	0.0.2.0.0.1.1	0.0.2.0.0.1.1.1	
# ::edge	contribute-01	ARG1	care-01	0.0.2.0.0.1.1.0.1	0.0.2.0.0.1.1.0	
# ::edge	contribute-01	mod	modest	0.0.2.0.0.1.1.0.1	0.0.2.0.0.1.1.0.1.1	
# ::edge	contribute-01	mod	only	0.0.2.0.0.1.1.0.1	0.0.2.0.0.1.1.0.1.0	
# ::edge	free-41	ARG1	care-01	0.0.2.0.0.1.1.0.2	0.0.2.0.0.1.1.0	
# ::edge	last-01	ARG1	poor	0.0.2.0.0.1.0.1.0	0.0.2.0.0.1.0.1.0.0	
# ::edge	provide-01	ARG0	disability	0.0	0.0.0	
# ::edge	provide-01	ARG1	and	0.0	0	
# ::edge	provide-01	mod	only	0.0	0.0.1	
# ::edge	security	mod	federal	0.1.0	0.1.0.0	
# ::edge	security	mod	society	0.1.0	0.1.0.1	
# ::edge	suffer-01	ARG0	65	0.0.2.0.0.1.0	0.0.2.0.0.1.0.0	
# ::edge	suffer-01	ARG1	person	0.0.2.0.0.1.0	0.0.2.0.0.1	
# ::edge	system	mod	security	0.1	0.1.0	
# ::edge	true	domain	it	0.0.2.0.0.0.0	0.0.2.0.0.0	
(a3 / and 
      :ARG1-of (p3 / provide-01 
            :ARG0 (d / disability) 
            :mod (o2 / only) 
            :op-of (a2 / and 
                  :mod (o / only 
                        :mod-of (b / benefit-01 
                              :ARG0 (i / it 
                                    :domain-of (t / true)) 
                              :ARG1 (p / person 
                                    :ARG1-of (s / suffer-01 
                                          :ARG0 65 
                                          :op-of (a / and 
                                                :op1 (l / last-01 
                                                      :ARG1 (p2 / poor)))) 
                                    :ARG2-of (c2 / compensate-01 
                                          :ARG1 (c / care-01 
                                                :ARG1 (h / hospital) 
                                                :ARG1-of (c3 / contribute-01 
                                                      :mod (o3 / only) 
                                                      :mod (m / modest)) 
                                                :ARG1-of (f / free-41)) 
                                          :ARG3 (a4 / accident))))) 
                  :mod (e / elderly))) 
      :mod (s2 / system 
            :mod (s3 / security 
                  :mod (f2 / federal) 
                  :mod (s4 / society))))

# ::snt the account comes with a 100 cheque guarantee card standing orders direct debits and free personal accident insurance worth up to twice the outstanding balance on the account
# ::tok the account comes with a 100 cheque guarantee card standing orders direct debits and free personal accident insurance worth up to twice the outstanding balance on the account
# ::alignments 27-28|0.0.0.0.1.1 24-25|0.0.0.0.1 23-24|0.0.1.0.0 18-19|0 17-18|0.0.0.0 16-17|0.0.0.0.3 15-16|0.0.0.0.3.0 14-15|0.0.0.0.2 13-14|0.0.0 11-12|0.0.0.0.0 10-11|0.0 8-9|0.0.1 7-8|0.0.1.0 5-6|0.0.0.0.1.2 1-2|0.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:09.016
# ::node	0	worth	18-19
# ::node	0.0	order-01	10-11
# ::node	0.0.0	and	13-14
# ::node	0.0.0.0	insure-02	17-18
# ::node	0.0.0.0.0	direct	11-12
# ::node	0.0.0.0.1	balance-01	24-25
# ::node	0.0.0.0.1.0	account	1-2
# ::node	0.0.0.0.1.1	account	27-28
# ::node	0.0.0.0.1.2	100	5-6
# ::node	0.0.0.0.2	free-41	14-15
# ::node	0.0.0.0.3	accident	16-17
# ::node	0.0.0.0.3.0	personal	15-16
# ::node	0.0.1	card	8-9
# ::node	0.0.1.0	guarantee-01	7-8
# ::node	0.0.1.0.0	outstanding	23-24
# ::root	0	worth
(w / worth 
      :ARG0-of (o2 / order-01 
            :ARG1 (a3 / and 
                  :op1 (i / insure-02 
                        :ARG0 (d / direct) 
                        :ARG1 (b / balance-01 
                              :ARG0 (a4 / account) 
                              :ARG1 (a / account) 
                              :op-of 100) 
                        :ARG1-of (f / free-41) 
                        :ARG4 (a2 / accident 
                              :mod (p / personal)))) 
            :mod (c / card 
                  :mod (g / guarantee-01 
                        :ARG1 (o / outstanding)))))

# ::snt though the vast majority of accidents do occur in the home most of us rightly feel safe at home
# ::tok though the vast majority of accidents do occur in the home most of us rightly feel safe at home
# ::alignments 18-19|0.1.0.2 16-17|0.1.0 15-16|0.1.0.1 14-15|0.1.0.1.0 11-12|0.1.0.0 10-11|0.1 7-8|0 5-6|0.0.1 3-4|0.0 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:09.076
# ::node	0	occur-01	7-8
# ::node	0.0	majority	3-4
# ::node	0.0.0	vast	2-3
# ::node	0.0.1	accident	5-6
# ::node	0.1	home	10-11
# ::node	0.1.0	safe-41	16-17
# ::node	0.1.0.0	most	11-12
# ::node	0.1.0.1	feel-01	15-16
# ::node	0.1.0.1.0	right	14-15
# ::node	0.1.0.2	home	18-19
# ::root	0	occur-01
# ::edge	accident	quant	majority	0.0.1	0.0	
# ::edge	feel-01	ARG1	safe-41	0.1.0.1	0.1.0	
# ::edge	feel-01	manner	right	0.1.0.1	0.1.0.1.0	
# ::edge	majority	degree	vast	0.0	0.0.0	
# ::edge	occur-01	ARG0	majority	0	0.0	
# ::edge	occur-01	location	home	0	0.1	
# ::edge	safe-41	ARG0	home	0.1.0	0.1	
# ::edge	safe-41	ARG1	most	0.1.0	0.1.0.0	
# ::edge	safe-41	ARG2	home	0.1.0	0.1.0.2	
(o / occur-01 
      :ARG0 (m2 / majority 
            :degree (v / vast) 
            :quant-of (a / accident)) 
      :location (h2 / home 
            :ARG0-of (s / safe-41 
                  :ARG1 (m / most) 
                  :ARG1-of (f / feel-01 
                        :manner (r / right)) 
                  :ARG2 (h / home))))

# ::snt there cannot be a greater difference than that between someone who supposes that the human race and with it all art philosophy science and virtue is a mere atomic accident in a blandly meaningless universe and those who believe that there is a plan and behind it all a design
# ::tok there cannot be a greater difference than that between someone who supposes that the human race and with it all art philosophy science and virtue is a mere atomic accident in a blandly meaningless universe and those who believe that there is a plan and behind it all a design
# ::alignments 49-50|0.0.0.1 47-48|0.0.0.1.1 46-47|0.0.0.1.0 45-46|0.0.0.1.0.0 44-45|0.0.0.0.1 43-44|0.0.0.0 38-39|0.0.0.0.0 35-36|0.0.0 34-35|0.0 33-34|0 29-30|0.0.0.0.1.0.0.0.1.0 28-29|0.0.0.0.1.0.0.0.1.0.1 27-28|0.0.0.0.1.0.0.0.1.0.0 24-25|0.0.0.0.1.0.0.0.1.2 23-24|0.0.0.0.1.0.0.0.1 22-23|0.0.0.0.1.0.0.0.1.1 21-22|0.0.0.0.1.0.0.0.1.1.0 20-21|0.0.0.0.1.0.0.0.1.1.1 19-20|0.0.0.0.1.0.0.0.1.3 18-19|0.0.0.0.1.0.0.0.1.3.0 16-17|0.0.0.0.1.0.0 15-16|0.0.0.0.1.0.0.0 14-15|0.0.0.0.1.0.0.0.0 9-10|0.0.0.0.1.0.2.0 8-9|0.0.0.0.1.0.2 5-6|0.0.0.0.1.0 4-5|0.0.0.0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:09.639
# ::node	0	mean-01	33-34
# ::node	0.0	universe	34-35
# ::node	0.0.0	and	35-36
# ::node	0.0.0.0	plan-01	43-44
# ::node	0.0.0.0.0	believe-01	38-39
# ::node	0.0.0.0.1	and	44-45
# ::node	0.0.0.0.1.0	differ-02	5-6
# ::node	0.0.0.0.1.0.0	and	16-17
# ::node	0.0.0.0.1.0.0.0	race	15-16
# ::node	0.0.0.0.1.0.0.0.0	human	14-15
# ::node	0.0.0.0.1.0.0.0.1	and	23-24
# ::node	0.0.0.0.1.0.0.0.1.0	accident	29-30
# ::node	0.0.0.0.1.0.0.0.1.0.0	mere	27-28
# ::node	0.0.0.0.1.0.0.0.1.0.1	atom	28-29
# ::node	0.0.0.0.1.0.0.0.1.1	science	22-23
# ::node	0.0.0.0.1.0.0.0.1.1.0	philosophy	21-22
# ::node	0.0.0.0.1.0.0.0.1.1.1	art	20-21
# ::node	0.0.0.0.1.0.0.0.1.2	virtue	24-25
# ::node	0.0.0.0.1.0.0.0.1.3	all	19-20
# ::node	0.0.0.0.1.0.0.0.1.3.0	it	18-19
# ::node	0.0.0.0.1.0.1	great	4-5
# ::node	0.0.0.0.1.0.2	between	8-9
# ::node	0.0.0.0.1.0.2.0	someone	9-10
# ::node	0.0.0.1	design-01	49-50
# ::node	0.0.0.1.0	it	46-47
# ::node	0.0.0.1.0.0	behind	45-46
# ::node	0.0.0.1.1	all	47-48
# ::root	0	mean-01
# ::edge	accident	domain	and	0.0.0.0.1.0.0.0.1.0	0.0.0.0.1.0.0.0.1	
# ::edge	accident	mod	atom	0.0.0.0.1.0.0.0.1.0	0.0.0.0.1.0.0.0.1.0.1	
# ::edge	accident	mod	mere	0.0.0.0.1.0.0.0.1.0	0.0.0.0.1.0.0.0.1.0.0	
# ::edge	and	op1	differ-02	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	and	op1	race	0.0.0.0.1.0.0	0.0.0.0.1.0.0.0	
# ::edge	and	op1	race	0.0.0.0.1.0.0.0.1	0.0.0.0.1.0.0.0	
# ::edge	and	op1	universe	0.0.0	0.0	
# ::edge	and	op2	design-01	0.0.0	0.0.0.1	
# ::edge	and	op2	plan-01	0.0.0.0.1	0.0.0.0	
# ::edge	and	op2	science	0.0.0.0.1.0.0.0.1	0.0.0.0.1.0.0.0.1.1	
# ::edge	and	op3	virtue	0.0.0.0.1.0.0.0.1	0.0.0.0.1.0.0.0.1.2	
# ::edge	and	quant	all	0.0.0.0.1.0.0.0.1	0.0.0.0.1.0.0.0.1.3	
# ::edge	behind	op1	it	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	believe-01	ARG1	plan-01	0.0.0.0.0	0.0.0.0	
# ::edge	between	op1	someone	0.0.0.0.1.0.2	0.0.0.0.1.0.2.0	
# ::edge	design-01	ARG1	it	0.0.0.1	0.0.0.1.0	
# ::edge	design-01	ARG2	all	0.0.0.1	0.0.0.1.1	
# ::edge	differ-02	ARG1	and	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	differ-02	mod	great	0.0.0.0.1.0	0.0.0.0.1.0.1	
# ::edge	differ-02	prep-with	between	0.0.0.0.1.0	0.0.0.0.1.0.2	
# ::edge	it	quant	all	0.0.0.0.1.0.0.0.1.3.0	0.0.0.0.1.0.0.0.1.3	
# ::edge	mean-01	ARG1	universe	0	0.0	
# ::edge	plan-01	ARG1	and	0.0.0.0	0.0.0	
# ::edge	race	mod	human	0.0.0.0.1.0.0.0	0.0.0.0.1.0.0.0.0	
# ::edge	science	mod	art	0.0.0.0.1.0.0.0.1.1	0.0.0.0.1.0.0.0.1.1.1	
# ::edge	science	mod	philosophy	0.0.0.0.1.0.0.0.1.1	0.0.0.0.1.0.0.0.1.1.0	
(m / mean-01 
      :ARG1 (u / universe 
            :op-of (a3 / and 
                  :ARG1-of (p / plan-01 
                        :ARG1-of (b2 / believe-01) 
                        :op-of (a2 / and 
                              :op1 (d2 / differ-02 
                                    :ARG1 (a9 / and 
                                          :op1 (r / race 
                                                :mod (h / human) 
                                                :op-of (a6 / and 
                                                      :domain-of (a4 / accident 
                                                            :mod (m2 / mere) 
                                                            :mod (a5 / atom)) 
                                                      :op1 (s / science 
                                                            :mod (p2 / philosophy) 
                                                            :mod (a7 / art)) 
                                                      :op2 (v / virtue) 
                                                      :quant (a8 / all 
                                                            :quant-of (i2 / it))))) 
                                    :mod (g / great) 
                                    :prep-with (b3 / between 
                                          :op1 (s2 / someone))))) 
                  :op1 (d / design-01 
                        :ARG1 (i / it 
                              :op-of (b / behind)) 
                        :ARG2 (a / all)))))

# ::snt mr roger rose defending said it was a matter of great sadness to stratford and his family that he had been involved in the accident
# ::tok mr roger rose defending said it was a matter of great sadness to stratford and his family that he had been involved in the accident
# ::alignments 24-25|0.1.0.0.1 21-22|0.1.0.0 18-19|0.1.0.0.0 16-17|0.1.0 14-15|0.1 10-11|0.2.0.0 8-9|0.0.0 5-6|0.0 4-5|0 3-4|0.2 2-3|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:09.795
# ::node	0	say-01	4-5
# ::node	0.0	it	5-6
# ::node	0.0.0	matter	8-9
# ::node	0.1	and	14-15
# ::node	0.1.0	family	16-17
# ::node	0.1.0.0	involve-01	21-22
# ::node	0.1.0.0.0	he	18-19
# ::node	0.1.0.0.1	accident	24-25
# ::node	0.2	defend-01	3-4
# ::node	0.2.0	rise-01	2-3
# ::node	0.2.0.0	great	10-11
# ::root	0	say-01
# ::edge	and	op1	family	0.1	0.1.0	
# ::edge	defend-01	ARG1	say-01	0.2	0	
# ::edge	involve-01	ARG0	family	0.1.0.0	0.1.0	
# ::edge	involve-01	ARG1	he	0.1.0.0	0.1.0.0.0	
# ::edge	involve-01	ARG2	accident	0.1.0.0	0.1.0.0.1	
# ::edge	matter	domain	it	0.0.0	0.0	
# ::edge	rise-01	ARG0	great	0.2.0	0.2.0.0	
# ::edge	rise-01	ARG1	defend-01	0.2.0	0.2	
# ::edge	say-01	ARG0	it	0	0.0	
# ::edge	say-01	ARG1	and	0	0.1	
(s / say-01 
      :ARG0 (i2 / it 
            :domain-of (m / matter)) 
      :ARG1 (a2 / and 
            :op1 (f / family 
                  :ARG0-of (i / involve-01 
                        :ARG1 (h / he) 
                        :ARG2 (a / accident)))) 
      :ARG1-of (d / defend-01 
            :ARG1-of (r / rise-01 
                  :ARG0 (g / great))))

# ::snt are sponsoring for a second year an environmental research award founded in memory of debbie bruce a uea graduate who died in a flying accident in 1988
# ::tok are sponsoring for a second year an environmental research award founded in memory of debbie bruce a uea graduate who died in a flying accident in 1988
# ::alignments 26-27|0.0.1.0+0.0.1 24-25|0.0 23-24|0 20-21|0.0.0 18-19|0.0.0.0 12-13|0.0.0.0.0.1.1 10-11|0.0.0.0.0.1 9-10|0.0.0.0.0 8-9|0.0.0.0.0.0 7-8|0.0.0.0.0.0.0 5-6|0.0.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:09.991
# ::node	0	fly-01	23-24
# ::node	0.0	accident	24-25
# ::node	0.0.0	die-01	20-21
# ::node	0.0.0.0	graduate-01	18-19
# ::node	0.0.0.0.0	award-01	9-10
# ::node	0.0.0.0.0.0	research-01	8-9
# ::node	0.0.0.0.0.0.0	environment	7-8
# ::node	0.0.0.0.0.1	found-01	10-11
# ::node	0.0.0.0.0.1.0	year	5-6
# ::node	0.0.0.0.0.1.1	memory	12-13
# ::node	0.0.1	date-entity	26-27
# ::node	0.0.1.0	1988	26-27
# ::root	0	fly-01
# ::edge	accident	time	date-entity	0.0	0.0.1	
# ::edge	award-01	ARG0	graduate-01	0.0.0.0.0	0.0.0.0	
# ::edge	award-01	ARG1	research-01	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	date-entity	year	1988	0.0.1	0.0.1.0	
# ::edge	die-01	ARG1	graduate-01	0.0.0	0.0.0.0	
# ::edge	die-01	location	accident	0.0.0	0.0	
# ::edge	fly-01	ARG1	accident	0	0.0	
# ::edge	found-01	ARG1	award-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	found-01	ARG2	year	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	found-01	source	memory	0.0.0.0.0.1	0.0.0.0.0.1.1	
# ::edge	research-01	ARG1	environment	0.0.0.0.0.0	0.0.0.0.0.0.0	
(f / fly-01 
      :ARG1 (a / accident 
            :location-of (d2 / die-01 
                  :ARG1 (g / graduate-01 
                        :ARG0-of (a2 / award-01 
                              :ARG1 (r / research-01 
                                    :ARG1 (e / environment)) 
                              :ARG1-of (f2 / found-01 
                                    :ARG2 (y / year) 
                                    :source (m / memory))))) 
            :time (d / date-entity 
                  :year 1988)))

# ::snt victorias mother was just distraught and she tried to kill herself so to get her out of the way they had her committed to an insane asylum where she had a little accident dash
# ::tok victorias mother was just distraught and she tried to kill herself so to get her out of the way they had her committed to an insane asylum where she had a little accident dash
# ::alignments 32-33|0.2.1.1.0 31-32|0.2.1.1 28-29|0.2.2 26-27|0.2.1.0.0.0.1.1 25-26|0.2.1.0.0.0.2 22-23|0.2.1.0.0.0.1 19-20|0.2.0 18-19|0.2.1.0.0.0.0 11-12|0.2.1.0.0.0.1.0 9-10|0.2.1 7-8|0.2 6-7|0.2.1.0 5-6|0 4-5|0.1 3-4|0.0 1-2|0.2.1.0.0+0.2.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:10.353
# ::node	0	and	5-6
# ::node	0.0	just	3-4
# ::node	0.1	distraught	4-5
# ::node	0.2	try-01	7-8
# ::node	0.2.0	they	19-20
# ::node	0.2.1	kill-01	9-10
# ::node	0.2.1.0	she	6-7
# ::node	0.2.1.0.0	mother	1-2
# ::node	0.2.1.0.0.0	have-rel-role-91	1-2
# ::node	0.2.1.0.0.0.0	way	18-19
# ::node	0.2.1.0.0.0.1	commit-01	22-23
# ::node	0.2.1.0.0.0.1.0	so	11-12
# ::node	0.2.1.0.0.0.1.1	asylum	26-27
# ::node	0.2.1.0.0.0.2	insane	25-26
# ::node	0.2.1.1	little	31-32
# ::node	0.2.1.1.0	accident	32-33
# ::node	0.2.2	she	28-29
# ::root	0	and
# ::edge	accident	mod	little	0.2.1.1.0	0.2.1.1	
# ::edge	and	mod	just	0	0.0	
# ::edge	and	op1	distraught	0	0.1	
# ::edge	and	op2	try-01	0	0.2	
# ::edge	commit-01	ARG0	so	0.2.1.0.0.0.1	0.2.1.0.0.0.1.0	
# ::edge	commit-01	ARG1	have-rel-role-91	0.2.1.0.0.0.1	0.2.1.0.0.0	
# ::edge	commit-01	ARG2	asylum	0.2.1.0.0.0.1	0.2.1.0.0.0.1.1	
# ::edge	have-rel-role-91	ARG0	way	0.2.1.0.0.0	0.2.1.0.0.0.0	
# ::edge	have-rel-role-91	ARG2	mother	0.2.1.0.0.0	0.2.1.0.0	
# ::edge	insane	op1	have-rel-role-91	0.2.1.0.0.0.2	0.2.1.0.0.0	
# ::edge	kill-01	ARG0	she	0.2.1	0.2.1.0	
# ::edge	kill-01	ARG1	little	0.2.1	0.2.1.1	
# ::edge	mother	poss	she	0.2.1.0.0	0.2.1.0	
# ::edge	she	op1	try-01	0.2.2	0.2	
# ::edge	try-01	ARG0	they	0.2	0.2.0	
# ::edge	try-01	ARG1	kill-01	0.2	0.2.1	
(a3 / and 
      :mod (j / just) 
      :op1 (d / distraught) 
      :op2 (t2 / try-01 
            :ARG0 (t / they) 
            :ARG1 (k / kill-01 
                  :ARG0 (s3 / she 
                        :poss-of (m / mother 
                              :ARG2-of (h / have-rel-role-91 
                                    :ARG0 (w / way) 
                                    :ARG1-of (c / commit-01 
                                          :ARG0 (s2 / so) 
                                          :ARG2 (a2 / asylum)) 
                                    :op-of (i / insane)))) 
                  :ARG1 (l / little 
                        :mod-of (a / accident))) 
            :op-of (s / she)))

# ::snt he commissioned the most famous translation of the bible was a patron of shakespeare in his later years wrote a treatise on the harmful effects of smoking and completely by accident caused the revival of one of our most noble garden trees
# ::tok he commissioned the most famous translation of the bible was a patron of shakespeare in his later years wrote a treatise on the harmful effects of smoking and completely by accident caused the revival of one of our most noble garden trees
# ::alignments 41-42|0.0.3.0 40-41|0.0.3.0.1 39-40|0.0.3.0.0 38-39|0.0.3.0.0.0 33-34|0.0.3 31-32|0 30-31|0.1 28-29|0.2 27-28|0.0 26-27|0.0.0.0 24-25|0.0.0 23-24|0.0.0.1 18-19|0.0.2 17-18|0.0.2.0.0+0.0.2.0 16-17|0.0.0.2 5-6|0.0.2.1.0+0.0.2.1 4-5|0.0.2.1.1 3-4|0.0.2.1.1.0 1-2|0.0.1 0-1|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:10.801
# ::node	0	cause-01	31-32
# ::node	0.0	and	27-28
# ::node	0.0.0	effect-01	24-25
# ::node	0.0.0.0	smoke-02	26-27
# ::node	0.0.0.1	harm-01	23-24
# ::node	0.0.0.2	late	16-17
# ::node	0.0.1	commission-01	1-2
# ::node	0.0.1.0	he	0-1
# ::node	0.0.2	write-01	18-19
# ::node	0.0.2.0	temporal-quantity	17-18
# ::node	0.0.2.0.0	year	17-18
# ::node	0.0.2.1	thing	5-6
# ::node	0.0.2.1.0	translate-01	5-6
# ::node	0.0.2.1.1	famous	4-5
# ::node	0.0.2.1.1.0	most	3-4
# ::node	0.0.3	revive-01	33-34
# ::node	0.0.3.0	tree	41-42
# ::node	0.0.3.0.0	noble	39-40
# ::node	0.0.3.0.0.0	most	38-39
# ::node	0.0.3.0.1	garden	40-41
# ::node	0.1	accident	30-31
# ::node	0.2	complete	28-29
# ::root	0	cause-01
# ::edge	and	op1	write-01	0.0	0.0.2	
# ::edge	and	op2	revive-01	0.0	0.0.3	
# ::edge	cause-01	ARG0	and	0	0.0	
# ::edge	cause-01	ARG1	accident	0	0.1	
# ::edge	commission-01	ARG0	he	0.0.1	0.0.1.0	
# ::edge	commission-01	ARG1	and	0.0.1	0.0	
# ::edge	complete	op1	cause-01	0.2	0	
# ::edge	effect-01	ARG0	and	0.0.0	0.0	
# ::edge	effect-01	ARG1	smoke-02	0.0.0	0.0.0.0	
# ::edge	effect-01	mod	late	0.0.0	0.0.0.2	
# ::edge	famous	degree	most	0.0.2.1.1	0.0.2.1.1.0	
# ::edge	garden	source	tree	0.0.3.0.1	0.0.3.0	
# ::edge	harm-01	ARG1	effect-01	0.0.0.1	0.0.0	
# ::edge	noble	degree	most	0.0.3.0.0	0.0.3.0.0.0	
# ::edge	revive-01	ARG1	tree	0.0.3	0.0.3.0	
# ::edge	temporal-quantity	unit	year	0.0.2.0	0.0.2.0.0	
# ::edge	thing	mod	famous	0.0.2.1	0.0.2.1.1	
# ::edge	translate-01	ARG2	thing	0.0.2.1.0	0.0.2.1	
# ::edge	tree	mod	noble	0.0.3.0	0.0.3.0.0	
# ::edge	write-01	ARG0	temporal-quantity	0.0.2	0.0.2.0	
# ::edge	write-01	ARG1	thing	0.0.2	0.0.2.1	
(c / cause-01 
      :ARG0 (a2 / and 
            :ARG0-of (e / effect-01 
                  :ARG1 (s / smoke-02) 
                  :ARG1-of (h / harm-01) 
                  :mod (l / late)) 
            :ARG1-of (c3 / commission-01 
                  :ARG0 (h2 / he)) 
            :op1 (w / write-01 
                  :ARG0 (t2 / temporal-quantity 
                        :unit (y / year)) 
                  :ARG1 (t3 / thing 
                        :ARG2-of (t4 / translate-01) 
                        :mod (f / famous 
                              :degree (m2 / most)))) 
            :op2 (r / revive-01 
                  :ARG1 (t / tree 
                        :mod (n / noble 
                              :degree (m / most)) 
                        :source-of (g / garden)))) 
      :ARG1 (a / accident) 
      :op-of (c2 / complete))

# ::snt to begin with theres the small matter of rodneys arrest followed by an unfortunate accident to the coach which leaves the whole party marooned in margate ellip
# ::tok to begin with theres the small matter of rodneys arrest followed by an unfortunate accident to the coach which leaves the whole party marooned in margate ellip
# ::alignments 22-23|0.0.0.0.0.1.0 21-22|0.0.0.0.0.1.0.0 19-20|0.0.0.0.0.1 17-18|0.0.0.0.0.0+0.0.0.0.0 14-15|0.0 13-14|0 10-11|0.0.0 9-10|0.0.0.0 6-7|0.0.0.0.1 5-6|0.0.0.0.1.0 1-2|0.0.0.0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:11.026
# ::node	0	fortunate-41	13-14
# ::node	0.0	accident	14-15
# ::node	0.0.0	follow-01	10-11
# ::node	0.0.0.0	arrest-01	9-10
# ::node	0.0.0.0.0	person	17-18
# ::node	0.0.0.0.0.0	coach-01	17-18
# ::node	0.0.0.0.0.1	leave-01	19-20
# ::node	0.0.0.0.0.1.0	party	22-23
# ::node	0.0.0.0.0.1.0.0	whole	21-22
# ::node	0.0.0.0.0.1.1	begin-01	1-2
# ::node	0.0.0.0.1	matter	6-7
# ::node	0.0.0.0.1.0	small	5-6
# ::root	0	fortunate-41
# ::edge	arrest-01	ARG1	person	0.0.0.0	0.0.0.0.0	
# ::edge	coach-01	ARG0	person	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	follow-01	ARG0	arrest-01	0.0.0	0.0.0.0	
# ::edge	follow-01	ARG1	accident	0.0.0	0.0	
# ::edge	fortunate-41	ARG1	accident	0	0.0	
# ::edge	leave-01	ARG0	person	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	leave-01	ARG1	party	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	leave-01	purpose	begin-01	0.0.0.0.0.1	0.0.0.0.0.1.1	
# ::edge	matter	mod	small	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	matter	topic	arrest-01	0.0.0.0.1	0.0.0.0	
# ::edge	party	mod	whole	0.0.0.0.0.1.0	0.0.0.0.0.1.0.0	
(f / fortunate-41 
      :ARG1 (a / accident 
            :ARG1-of (f2 / follow-01 
                  :ARG0 (a2 / arrest-01 
                        :ARG1 (p2 / person 
                              :ARG0-of (c / coach-01) 
                              :ARG0-of (l / leave-01 
                                    :ARG1 (p / party 
                                          :mod (w / whole)) 
                                    :purpose (b / begin-01))) 
                        :topic-of (m / matter 
                              :mod (s / small))))))

# ::snt but a serious accident can cause far more than purely physical  damage
# ::tok but a serious accident can cause far more than purely physical damage
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:11.027
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt an officer of the royal society for the prevention of accidents janice curve said we always advise people to take the lids and doors off freezers before getting rid of them
# ::tok an officer of the royal society for the prevention of accidents janice curve said we always advise people to take the lids and doors off freezers before getting rid of them
# ::alignments 28-29|0.1.3.0 26-27|0.1.3 24-25|0.1.1 23-24|0.1.2.0 22-23|0.1.2 16-17|0.1 15-16|0.1.4 14-15|0.1.0 13-14|0 10-11|0.2.0 8-9|0.2 5-6|0.0.0 4-5|0.0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:11.115
# ::node	0	say-01	13-14
# ::node	0.0	officer	1-2
# ::node	0.0.0	society	5-6
# ::node	0.0.0.0	royal	4-5
# ::node	0.1	advise-01	16-17
# ::node	0.1.0	we	14-15
# ::node	0.1.1	off	24-25
# ::node	0.1.2	and	22-23
# ::node	0.1.2.0	door	23-24
# ::node	0.1.3	before	26-27
# ::node	0.1.3.0	rid-01	28-29
# ::node	0.1.4	always	15-16
# ::node	0.2	prevent-01	8-9
# ::node	0.2.0	accident	10-11
# ::root	0	say-01
# ::edge	advise-01	ARG0	we	0.1	0.1.0	
# ::edge	advise-01	ARG1	off	0.1	0.1.1	
# ::edge	advise-01	ARG2	and	0.1	0.1.2	
# ::edge	advise-01	time	always	0.1	0.1.4	
# ::edge	advise-01	time	before	0.1	0.1.3	
# ::edge	and	op1	door	0.1.2	0.1.2.0	
# ::edge	before	op1	rid-01	0.1.3	0.1.3.0	
# ::edge	officer	location	society	0.0	0.0.0	
# ::edge	prevent-01	ARG1	accident	0.2	0.2.0	
# ::edge	say-01	ARG0	officer	0	0.0	
# ::edge	say-01	ARG1	advise-01	0	0.1	
# ::edge	say-01	ARG2	prevent-01	0	0.2	
# ::edge	society	mod	royal	0.0.0	0.0.0.0	
(s / say-01 
      :ARG0 (o2 / officer 
            :location (s2 / society 
                  :mod (r2 / royal))) 
      :ARG1 (a2 / advise-01 
            :ARG0 (w / we) 
            :ARG1 (o / off) 
            :ARG2 (a / and 
                  :op1 (d / door)) 
            :time (b / before 
                  :op1 (r / rid-01)) 
            :time (a3 / always)) 
      :ARG2 (p / prevent-01 
            :ARG1 (a4 / accident)))

# ::snt i understand that the surveyors and engineers department of oxfordshire county council are considering improvements as a result of this fatal accident but perhaps the most significant statement made during a helpful conversation with one of the departments representatives was that national standards for signals are governed by the overriding need to keep traffic flows moving during peak periods
# ::tok i understand that the surveyors and engineers department of oxfordshire county council are considering improvements as a result of this fatal accident but perhaps the most significant statement made during a helpful conversation with one of the departments representatives was that national standards for signals are governed by the overriding need to keep traffic flows moving during peak periods
# ::alignments 58-59|0.0.1.0.0.0.0.0.1.0.0.0.0 57-58|0.0.1.0.0.0.0.0.1.0.0.0.0.0 55-56|0.0.1.0.0.0.0.0.1.0.0.0 53-54|0.0.1.0.0.0.0.2.0.0 50-51|0.0.1.0.0.0.0.0.1 49-50|0.0.1.0.0.0.0.0.1.1 46-47|0.0.1.0.0.0.0.0.1.0 44-45|0.0.1.0.0.0.0.0.1.0.0.2 42-43|0.0.1.0.0.0.0.0.1.0.0 41-42|0.0.1.0.0.0.0.0.1.0.0.1 38-39|0.0.1.0.0.0.0.2.0.1.0+0.0.1.0.0.0.0.2.0.1.0.0 37-38|0.0.1.0.0.0.0.2.0.1 32-33|0.0.1.0.0.0.0.2.0 31-32|0.0.1.0.0.0.0.2 27-28|0.0.1.0.0.0.0.0 26-27|0.0.1.0.0.0.0.0.2 25-26|0.0.1.0.0.0.0.0.2.0 23-24|0.0.1.0.0.0.0.0.0 22-23|0 21-22|0.0.0 20-21|0.0.0.0 19-20|0.0.0.1 17-18|0.0 14-15|0.0.1 13-14|0.0.1.0 11-12|0.1 10-11|0.1.0 7-8|0.0.1.0.0.0 6-7|0.0.1.0.0.0.0.1+0.0.1.0.0.0.0 5-6|0.0.1.0.0 1-2|0.0.1.1 0-1|0.0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:12.647
# ::node	0	contrast-01	22-23
# ::node	0.0	result-01	17-18
# ::node	0.0.0	accident	21-22
# ::node	0.0.0.0	fatal	20-21
# ::node	0.0.0.1	this	19-20
# ::node	0.0.1	improve-01	14-15
# ::node	0.0.1.0	consider-02	13-14
# ::node	0.0.1.0.0	and	5-6
# ::node	0.0.1.0.0.0	department	7-8
# ::node	0.0.1.0.0.0.0	person	6-7
# ::node	0.0.1.0.0.0.0.0	state-01	27-28
# ::node	0.0.1.0.0.0.0.0.0	perhaps	23-24
# ::node	0.0.1.0.0.0.0.0.1	need-01	50-51
# ::node	0.0.1.0.0.0.0.0.1.0	govern-01	46-47
# ::node	0.0.1.0.0.0.0.0.1.0.0	standard	42-43
# ::node	0.0.1.0.0.0.0.0.1.0.0.0	move-01	55-56
# ::node	0.0.1.0.0.0.0.0.1.0.0.0.0	period	58-59
# ::node	0.0.1.0.0.0.0.0.1.0.0.0.0.0	peak-01	57-58
# ::node	0.0.1.0.0.0.0.0.1.0.0.1	nation	41-42
# ::node	0.0.1.0.0.0.0.0.1.0.0.2	signal	44-45
# ::node	0.0.1.0.0.0.0.0.1.1	override-01	49-50
# ::node	0.0.1.0.0.0.0.0.2	significant	26-27
# ::node	0.0.1.0.0.0.0.0.2.0	most	25-26
# ::node	0.0.1.0.0.0.0.1	engineer-01	6-7
# ::node	0.0.1.0.0.0.0.2	help-01	31-32
# ::node	0.0.1.0.0.0.0.2.0	converse-01	32-33
# ::node	0.0.1.0.0.0.0.2.0.0	traffic	53-54
# ::node	0.0.1.0.0.0.0.2.0.1	department	37-38
# ::node	0.0.1.0.0.0.0.2.0.1.0	represent-01	38-39
# ::node	0.0.1.0.0.0.0.2.0.1.0.0	person	38-39
# ::node	0.0.1.1	understand-01	1-2
# ::node	0.0.1.1.0	i	0-1
# ::node	0.1	council	11-12
# ::node	0.1.0	county	10-11
# ::root	0	contrast-01
# ::edge	accident	mod	fatal	0.0.0	0.0.0.0	
# ::edge	accident	mod	this	0.0.0	0.0.0.1	
# ::edge	and	op1	department	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	consider-02	ARG0	and	0.0.1.0	0.0.1.0.0	
# ::edge	consider-02	ARG1	improve-01	0.0.1.0	0.0.1	
# ::edge	contrast-01	ARG1	result-01	0	0.0	
# ::edge	converse-01	ARG0	traffic	0.0.1.0.0.0.0.2.0	0.0.1.0.0.0.0.2.0.0	
# ::edge	converse-01	ARG1	department	0.0.1.0.0.0.0.2.0	0.0.1.0.0.0.0.2.0.1	
# ::edge	council	mod	county	0.1	0.1.0	
# ::edge	council	op1	contrast-01	0.1	0	
# ::edge	department	mod	person	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	engineer-01	ARG0	person	0.0.1.0.0.0.0.1	0.0.1.0.0.0.0	
# ::edge	govern-01	ARG0	need-01	0.0.1.0.0.0.0.0.1.0	0.0.1.0.0.0.0.0.1	
# ::edge	govern-01	ARG1	standard	0.0.1.0.0.0.0.0.1.0	0.0.1.0.0.0.0.0.1.0.0	
# ::edge	help-01	ARG1	converse-01	0.0.1.0.0.0.0.2	0.0.1.0.0.0.0.2.0	
# ::edge	help-01	ARG2	person	0.0.1.0.0.0.0.2	0.0.1.0.0.0.0	
# ::edge	improve-01	ARG1	result-01	0.0.1	0.0	
# ::edge	move-01	ARG0	standard	0.0.1.0.0.0.0.0.1.0.0.0	0.0.1.0.0.0.0.0.1.0.0	
# ::edge	move-01	ARG2	period	0.0.1.0.0.0.0.0.1.0.0.0	0.0.1.0.0.0.0.0.1.0.0.0.0	
# ::edge	need-01	ARG1	state-01	0.0.1.0.0.0.0.0.1	0.0.1.0.0.0.0.0	
# ::edge	override-01	ARG0	need-01	0.0.1.0.0.0.0.0.1.1	0.0.1.0.0.0.0.0.1	
# ::edge	peak-01	ARG1	period	0.0.1.0.0.0.0.0.1.0.0.0.0.0	0.0.1.0.0.0.0.0.1.0.0.0.0	
# ::edge	represent-01	ARG0	person	0.0.1.0.0.0.0.2.0.1.0	0.0.1.0.0.0.0.2.0.1.0.0	
# ::edge	represent-01	ARG1	department	0.0.1.0.0.0.0.2.0.1.0	0.0.1.0.0.0.0.2.0.1	
# ::edge	result-01	ARG1	accident	0.0	0.0.0	
# ::edge	significant	degree	most	0.0.1.0.0.0.0.0.2	0.0.1.0.0.0.0.0.2.0	
# ::edge	standard	mod	nation	0.0.1.0.0.0.0.0.1.0.0	0.0.1.0.0.0.0.0.1.0.0.1	
# ::edge	standard	poss	signal	0.0.1.0.0.0.0.0.1.0.0	0.0.1.0.0.0.0.0.1.0.0.2	
# ::edge	state-01	ARG0	person	0.0.1.0.0.0.0.0	0.0.1.0.0.0.0	
# ::edge	state-01	ARG1	perhaps	0.0.1.0.0.0.0.0	0.0.1.0.0.0.0.0.0	
# ::edge	state-01	mod	significant	0.0.1.0.0.0.0.0	0.0.1.0.0.0.0.0.2	
# ::edge	understand-01	ARG0	i	0.0.1.1	0.0.1.1.0	
# ::edge	understand-01	ARG1	improve-01	0.0.1.1	0.0.1	
(c2 / contrast-01 
      :ARG1 (r2 / result-01 
            :ARG1 (a / accident 
                  :mod (f / fatal) 
                  :mod (t2 / this)) 
            :ARG1-of (i / improve-01 
                  :ARG1-of (c3 / consider-02 
                        :ARG0 (a2 / and 
                              :op1 (d2 / department 
                                    :mod (p5 / person 
                                          :ARG0-of (s3 / state-01 
                                                :ARG1 (p4 / perhaps) 
                                                :ARG1-of (n / need-01 
                                                      :ARG0-of (g / govern-01 
                                                            :ARG1 (s2 / standard 
                                                                  :ARG0-of (m / move-01 
                                                                        :ARG2 (p / period 
                                                                              :ARG1-of (p2 / peak-01))) 
                                                                  :mod (n2 / nation) 
                                                                  :poss (s / signal))) 
                                                      :ARG0-of (o / override-01)) 
                                                :mod (s4 / significant 
                                                      :degree (m2 / most))) 
                                          :ARG0-of (e / engineer-01) 
                                          :ARG2-of (h / help-01 
                                                :ARG1 (c / converse-01 
                                                      :ARG0 (t / traffic) 
                                                      :ARG1 (d / department 
                                                            :ARG1-of (r / represent-01 
                                                                  :ARG0 (p3 / person))))))))) 
                  :ARG1-of (u / understand-01 
                        :ARG0 (i2 / i)))) 
      :op-of (c4 / council 
            :mod (c5 / county)))

# ::snt vandalism and accidents on the railways are on a steep upward trend latest statistics from the department of transport indicate, while most measures of accidents on british rail declined in the 1970s and flattened out for most of the 1980s the figures are now showing a marked increase according to analysis of the official data by researchers at the national union of railwaymen
# ::tok vandalism and accidents on the railways are on a steep upward trend latest statistics from the department of transport indicate , while most measures of accidents on british rail declined in the 1970s and flattened out for most of the 1980s the figures are now showing a marked increase according to analysis of the official data by researchers at the national union of railwaymen
# ::alignments 61-62|0.0.1.2.0.0 60-61|0.0.1.2.0.0.0 57-58|0.0.1.2.0+0.0.1.2 55-56|0.0.1.0.1.0.1 54-55|0.0.1.0.1.0.0+0.0.1.0.1.0 51-52|0.0.1.0.1.0.1.0 48-49|0.0 47-48|0 45-46|0.0.0 44-45|0.0.0.2 42-43|0.0.0.0 40-41|0.0.0.1 37-38|0.0.1.1.1 34-35|0.0.1.1 33-34|0.0.1 32-33|0.0.1.0.2 29-30|0.0.1.0 27-29|0.0.1.0.1.1.0+0.0.1.0.1.1.1+0.0.1.0.1.1+0.0.1.0.1 25-26|0.0.1.0.1.2 23-24|0.0.1.0.0 22-23|0.0.1.0.0.0 19-20|0.0.1.1.0.0.0.0.0 18-19|0.0.1.1.0.0.0.0.0.0 16-17|0.0.1.1.0.0.0.0.2 13-14|0.0.1.1.0.0.0.0 12-13|0.0.1.1.0.0.0.0.1.0+0.0.1.1.0.0.0.0.1 11-12|0.0.1.1.0.0.0 10-11|0.0.1.1.0.0.0.2 9-10|0.0.1.1.0.0.0.1 5-6|0.0.1.1.0.0.1.0 2-3|0.0.1.1.0.0.1 1-2|0.0.1.1.0.0 0-1|0.0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:15.671
# ::node	0	mark-01	47-48
# ::node	0.0	increase-01	48-49
# ::node	0.0.0	show-01	45-46
# ::node	0.0.0.0	figure	42-43
# ::node	0.0.0.1	1980	40-41
# ::node	0.0.0.2	now	44-45
# ::node	0.0.1	and	33-34
# ::node	0.0.1.0	decline-02	29-30
# ::node	0.0.1.0.0	measure	23-24
# ::node	0.0.1.0.0.0	most	22-23
# ::node	0.0.1.0.1	organization	27-29
# ::node	0.0.1.0.1.0	have-org-role-91	54-55
# ::node	0.0.1.0.1.0.0	official	54-55
# ::node	0.0.1.0.1.0.1	data	55-56
# ::node	0.0.1.0.1.0.1.0	analyze-01	51-52
# ::node	0.0.1.0.1.1	name	27-29
# ::node	0.0.1.0.1.1.0	"rail"	27-29
# ::node	0.0.1.0.1.1.1	"british"	27-29
# ::node	0.0.1.0.1.2	accident	25-26
# ::node	0.0.1.0.2	1970	32-33
# ::node	0.0.1.1	flatten-01	34-35
# ::node	0.0.1.1.0	vandalism	0-1
# ::node	0.0.1.1.0.0	and	1-2
# ::node	0.0.1.1.0.0.0	trend-01	11-12
# ::node	0.0.1.1.0.0.0.0	statistic	13-14
# ::node	0.0.1.1.0.0.0.0.0	indicate-01	19-20
# ::node	0.0.1.1.0.0.0.0.0.0	transport-01	18-19
# ::node	0.0.1.1.0.0.0.0.1	late	12-13
# ::node	0.0.1.1.0.0.0.0.1.0	most	12-13
# ::node	0.0.1.1.0.0.0.0.2	department	16-17
# ::node	0.0.1.1.0.0.0.1	steep-01	9-10
# ::node	0.0.1.1.0.0.0.2	upward	10-11
# ::node	0.0.1.1.0.0.1	accident	2-3
# ::node	0.0.1.1.0.0.1.0	railway	5-6
# ::node	0.0.1.1.1	most	37-38
# ::node	0.0.1.2	person	57-58
# ::node	0.0.1.2.0	research-01	57-58
# ::node	0.0.1.2.0.0	union	61-62
# ::node	0.0.1.2.0.0.0	nation	60-61
# ::root	0	mark-01
# ::edge	accident	poss	organization	0.0.1.0.1.2	0.0.1.0.1	
# ::edge	accident	poss	railway	0.0.1.1.0.0.1	0.0.1.1.0.0.1.0	
# ::edge	analyze-01	ARG1	data	0.0.1.0.1.0.1.0	0.0.1.0.1.0.1	
# ::edge	and	op1	decline-02	0.0.1	0.0.1.0	
# ::edge	and	op1	vandalism	0.0.1.1.0.0	0.0.1.1.0	
# ::edge	and	op2	accident	0.0.1.1.0.0	0.0.1.1.0.0.1	
# ::edge	and	op2	flatten-01	0.0.1	0.0.1.1	
# ::edge	and	op3	increase-01	0.0.1	0.0	
# ::edge	and	op4	person	0.0.1	0.0.1.2	
# ::edge	data	mod	have-org-role-91	0.0.1.0.1.0.1	0.0.1.0.1.0	
# ::edge	decline-02	ARG0	measure	0.0.1.0	0.0.1.0.0	
# ::edge	decline-02	ARG1	organization	0.0.1.0	0.0.1.0.1	
# ::edge	decline-02	ARG2	1970	0.0.1.0	0.0.1.0.2	
# ::edge	flatten-01	ARG0	vandalism	0.0.1.1	0.0.1.1.0	
# ::edge	flatten-01	ARG1	most	0.0.1.1	0.0.1.1.1	
# ::edge	have-org-role-91	ARG1	organization	0.0.1.0.1.0	0.0.1.0.1	
# ::edge	have-org-role-91	ARG2	official	0.0.1.0.1.0	0.0.1.0.1.0.0	
# ::edge	indicate-01	ARG0	statistic	0.0.1.1.0.0.0.0.0	0.0.1.1.0.0.0.0	
# ::edge	indicate-01	ARG1	transport-01	0.0.1.1.0.0.0.0.0	0.0.1.1.0.0.0.0.0.0	
# ::edge	late	degree	most	0.0.1.1.0.0.0.0.1	0.0.1.1.0.0.0.0.1.0	
# ::edge	mark-01	ARG1	increase-01	0	0.0	
# ::edge	measure	quant	most	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	name	op1	"rail"	0.0.1.0.1.1	0.0.1.0.1.1.0	
# ::edge	name	op2	"british"	0.0.1.0.1.1	0.0.1.0.1.1.1	
# ::edge	organization	name	name	0.0.1.0.1	0.0.1.0.1.1	
# ::edge	research-01	ARG0	person	0.0.1.2.0	0.0.1.2	
# ::edge	research-01	ARG1	union	0.0.1.2.0	0.0.1.2.0.0	
# ::edge	show-01	ARG0	figure	0.0.0	0.0.0.0	
# ::edge	show-01	ARG1	1980	0.0.0	0.0.0.1	
# ::edge	show-01	ARG2	increase-01	0.0.0	0.0	
# ::edge	show-01	time	now	0.0.0	0.0.0.2	
# ::edge	statistic	mod	late	0.0.1.1.0.0.0.0	0.0.1.1.0.0.0.0.1	
# ::edge	statistic	source	department	0.0.1.1.0.0.0.0	0.0.1.1.0.0.0.0.2	
# ::edge	steep-01	ARG1	trend-01	0.0.1.1.0.0.0.1	0.0.1.1.0.0.0	
# ::edge	trend-01	ARG0	statistic	0.0.1.1.0.0.0	0.0.1.1.0.0.0.0	
# ::edge	trend-01	ARG1	and	0.0.1.1.0.0.0	0.0.1.1.0.0	
# ::edge	trend-01	mod	upward	0.0.1.1.0.0.0	0.0.1.1.0.0.0.2	
# ::edge	union	mod	nation	0.0.1.2.0.0	0.0.1.2.0.0.0	
(m / mark-01 
      :ARG1 (i / increase-01 
            :ARG2-of (s / show-01 
                  :ARG0 (f / figure) 
                  :ARG1 1980 
                  :time (n2 / now)) 
            :op-of (a2 / and 
                  :op1 (d2 / decline-02 
                        :ARG0 (m3 / measure 
                              :quant (m4 / most)) 
                        :ARG1 (o2 / organization 
                              :ARG1-of (h / have-org-role-91 
                                    :ARG2 (o / official) 
                                    :mod-of (d / data 
                                          :ARG1-of (a / analyze-01))) 
                              :name (n3 / name 
                                    :op1 "rail" 
                                    :op2 "british") 
                              :poss-of (a3 / accident)) 
                        :ARG2 1970) 
                  :op2 (f2 / flatten-01 
                        :ARG0 (v / vandalism 
                              :op-of (a5 / and 
                                    :ARG1-of (t2 / trend-01 
                                          :ARG0 (s2 / statistic 
                                                :ARG0-of (i2 / indicate-01 
                                                      :ARG1 (t / transport-01)) 
                                                :mod (l / late 
                                                      :degree (m5 / most)) 
                                                :source (d3 / department)) 
                                          :ARG1-of (s3 / steep-01) 
                                          :mod (u2 / upward)) 
                                    :op1 (a4 / accident 
                                          :poss (r2 / railway)))) 
                        :ARG1 (m2 / most)) 
                  :op3 (p / person 
                        :ARG0-of (r / research-01 
                              :ARG1 (u / union 
                                    :mod (n / nation)))))))

# ::snt charlie hatton had passed that way a quarter of an hour before the accident
# ::tok charlie hatton had passed that way a quarter of an hour before the accident
# ::alignments 13-14|0.0.1 11-12|0.0 10-11|0.0.0.0+0.0.0 5-6|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:15.689
# ::node	0	way	5-6
# ::node	0.0	before	11-12
# ::node	0.0.0	temporal-quantity	10-11
# ::node	0.0.0.0	hour	10-11
# ::node	0.0.1	accident	13-14
# ::root	0	way
(w / way 
      :op-of (b / before 
            :location-of (t / temporal-quantity 
                  :unit (h / hour)) 
            :op1 (a / accident)))

# ::snt for such terms as accident hazard and chance deny the notion of determination and of purposeful meaning
# ::tok for such terms as accident hazard and chance deny the notion of determination and of purposeful meaning
# ::alignments 16-17|0 13-14|0.0.0.3 12-13|0.0.0.0.0 10-11|0.0.0.0 8-9|0.0.0 7-8|0.0.0.2.0 6-7|0.0.0.2 4-5|0.0.0.1 2-3|0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:15.830
# ::node	0	mean-01	16-17
# ::node	0.0	term	2-3
# ::node	0.0.0	deny-01	8-9
# ::node	0.0.0.0	notion	10-11
# ::node	0.0.0.0.0	determine-01	12-13
# ::node	0.0.0.1	accident	4-5
# ::node	0.0.0.2	and	6-7
# ::node	0.0.0.2.0	chance	7-8
# ::node	0.0.0.3	and	13-14
# ::node	0.0.1	such	1-2
# ::root	0	mean-01
# ::edge	and	op1	chance	0.0.0.2	0.0.0.2.0	
# ::edge	and	op1	deny-01	0.0.0.3	0.0.0	
# ::edge	and	op2	deny-01	0.0.0.2	0.0.0	
# ::edge	deny-01	ARG0	term	0.0.0	0.0	
# ::edge	deny-01	ARG1	notion	0.0.0	0.0.0.0	
# ::edge	deny-01	location	accident	0.0.0	0.0.0.1	
# ::edge	mean-01	ARG1	term	0	0.0	
# ::edge	notion	topic	determine-01	0.0.0.0	0.0.0.0.0	
# ::edge	term	mod	such	0.0	0.0.1	
(m / mean-01 
      :ARG1 (t / term 
            :ARG0-of (d2 / deny-01 
                  :ARG1 (n / notion 
                        :topic (d / determine-01)) 
                  :location (a3 / accident) 
                  :op-of (a2 / and 
                        :op1 (c / chance)) 
                  :op-of (a / and)) 
            :mod (s / such)))

# ::snt it is presumably no accident that true sociality with worker sterility seems to have evolved no fewer than eleven times independently in the hymenoptera and only once in the whole of the rest of the animal kingdom namely in the termites
# ::tok it is presumably no accident that true sociality with worker sterility seems to have evolved no fewer than eleven times independently in the hymenoptera and only once in the whole of the rest of the animal kingdom namely in the termites
# ::alignments 37-38|0.1.1.1.0+0.1.1.1 36-37|0.1.2.1 35-36|0.1.2.1.0 32-33|0.1.2 29-30|0.1.2.0 26-27|0.2 25-26|0.2.0 24-25|0 20-21|0.0 16-17|0.1.1.0.0 15-16|0.1.1.0 14-15|0.1 11-12|0.1.1 9-10|0.1.0.1.0+0.1.0.1 6-7|0.1.0.0.0 4-5|0.1.0 3-4|0.1.0.2 2-3|0.1.0.0 0-1|0.1.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:16.569
# ::node	0	and	24-25
# ::node	0.0	independent	20-21
# ::node	0.1	evolve-01	14-15
# ::node	0.1.0	accident	4-5
# ::node	0.1.0.0	presume-01	2-3
# ::node	0.1.0.0.0	true	6-7
# ::node	0.1.0.0.1	it	0-1
# ::node	0.1.0.1	person	9-10
# ::node	0.1.0.1.0	work-01	9-10
# ::node	0.1.0.2	-	3-4
# ::node	0.1.1	seem-01	11-12
# ::node	0.1.1.0	-	15-16
# ::node	0.1.1.0.0	few	16-17
# ::node	0.1.1.1	country	37-38
# ::node	0.1.1.1.0	name	37-38
# ::node	0.1.2	rest	32-33
# ::node	0.1.2.0	whole	29-30
# ::node	0.1.2.1	kingdom	36-37
# ::node	0.1.2.1.0	animal	35-36
# ::node	0.2	once	26-27
# ::node	0.2.0	only	25-26
# ::root	0	and
# ::edge	accident	location	person	0.1.0	0.1.0.1	
# ::edge	accident	polarity	-	0.1.0	0.1.0.2	
# ::edge	and	mod	independent	0	0.0	
# ::edge	and	op1	evolve-01	0	0.1	
# ::edge	and	op2	once	0	0.2	
# ::edge	country	name	name	0.1.1.1	0.1.1.1.0	
# ::edge	evolve-01	ARG1	accident	0.1	0.1.0	
# ::edge	evolve-01	duration	rest	0.1	0.1.2	
# ::edge	few	mod	-	0.1.1.0.0	0.1.1.0	
# ::edge	kingdom	part	rest	0.1.2.1	0.1.2	
# ::edge	kingdom	poss	animal	0.1.2.1	0.1.2.1.0	
# ::edge	once	mod	only	0.2	0.2.0	
# ::edge	presume-01	ARG0	true	0.1.0.0	0.1.0.0.0	
# ::edge	presume-01	ARG1	it	0.1.0.0	0.1.0.0.1	
# ::edge	presume-01	ARG2	accident	0.1.0.0	0.1.0	
# ::edge	rest	mod	whole	0.1.2	0.1.2.0	
# ::edge	seem-01	ARG1	evolve-01	0.1.1	0.1	
# ::edge	seem-01	time	-	0.1.1	0.1.1.0	
# ::edge	seem-01	time	country	0.1.1	0.1.1.1	
# ::edge	work-01	ARG0	person	0.1.0.1.0	0.1.0.1	
(a2 / and 
      :mod (i / independent) 
      :op1 (e / evolve-01 
            :ARG1 (a3 / accident 
                  :ARG2-of (p2 / presume-01 
                        :ARG0 (t / true) 
                        :ARG1 (i2 / it)) 
                  :location (p / person 
                        :ARG0-of (w2 / work-01)) 
                  :polarity (-2 / -)) 
            :ARG1-of (s / seem-01 
                  :time (- / - 
                        :mod-of (f / few)) 
                  :time (c / country 
                        :name (n / name))) 
            :duration (r / rest 
                  :mod (w / whole) 
                  :part-of (k / kingdom 
                        :poss (a / animal)))) 
      :op2 (o / once 
            :mod (o2 / only)))

# ::snt the completed banbury inner relief road will help to solve local traffic problems and lower the risk of accidents helping the growth of banbury and so strengthening its role as a county town
# ::tok the completed banbury inner relief road will help to solve local traffic problems and lower the risk of accidents helping the growth of banbury and so strengthening its role as a county town
# ::alignments 32-33|0.1.0.0 31-32|0.1.0.0.0 28-29|0.1.0 26-27|0.1 25-26|0.1.1 24-25|0 21-22|0.0.1 19-20|0.0 18-19|0.0.0 16-17|0.0.0.0 14-15|0.0.0.0.0.1 13-14|0.0.0.0.0 12-13|0.0.0.0.0.0.0.1 11-12|0.0.0.0.0.0.0.1.0 10-11|0.0.0.0.0.0.0.1.0.0 9-10|0.0.0.0.0.0.0 7-8|0.0.0.0.0.0 5-6|0.0.0.0.0.0.0.0 4-5|0.0.0.0.0.0.0.0.1 3-4|0.0.0.0.0.0.0.0.1.0 1-2|0.0.0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:17.398
# ::node	0	and	24-25
# ::node	0.0	help-01	19-20
# ::node	0.0.0	accident	18-19
# ::node	0.0.0.0	risk-01	16-17
# ::node	0.0.0.0.0	and	13-14
# ::node	0.0.0.0.0.0	help-01	7-8
# ::node	0.0.0.0.0.0.0	solve-01	9-10
# ::node	0.0.0.0.0.0.0.0	road	5-6
# ::node	0.0.0.0.0.0.0.0.0	complete-01	1-2
# ::node	0.0.0.0.0.0.0.0.1	relieve-01	4-5
# ::node	0.0.0.0.0.0.0.0.1.0	inner	3-4
# ::node	0.0.0.0.0.0.0.1	problem	12-13
# ::node	0.0.0.0.0.0.0.1.0	traffic	11-12
# ::node	0.0.0.0.0.0.0.1.0.0	local	10-11
# ::node	0.0.0.0.0.1	low	14-15
# ::node	0.0.1	grow-01	21-22
# ::node	0.1	strengthen-01	26-27
# ::node	0.1.0	role	28-29
# ::node	0.1.0.0	town	32-33
# ::node	0.1.0.0.0	county	31-32
# ::node	0.1.1	so	25-26
# ::root	0	and
# ::edge	and	op1	help-01	0	0.0	
# ::edge	and	op1	low	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	and	op2	risk-01	0.0.0.0.0	0.0.0.0	
# ::edge	and	op2	strengthen-01	0	0.1	
# ::edge	complete-01	ARG1	road	0.0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	help-01	ARG0	accident	0.0	0.0.0	
# ::edge	help-01	ARG0	and	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	help-01	ARG1	grow-01	0.0	0.0.1	
# ::edge	help-01	ARG1	solve-01	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	problem	mod	traffic	0.0.0.0.0.0.0.1	0.0.0.0.0.0.0.1.0	
# ::edge	relieve-01	ARG1	road	0.0.0.0.0.0.0.0.1	0.0.0.0.0.0.0.0	
# ::edge	relieve-01	mod	inner	0.0.0.0.0.0.0.0.1	0.0.0.0.0.0.0.0.1.0	
# ::edge	risk-01	ARG1	accident	0.0.0.0	0.0.0	
# ::edge	role	location	town	0.1.0	0.1.0.0	
# ::edge	solve-01	ARG0	road	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	solve-01	ARG1	problem	0.0.0.0.0.0.0	0.0.0.0.0.0.0.1	
# ::edge	strengthen-01	ARG1	role	0.1	0.1.0	
# ::edge	strengthen-01	degree	so	0.1	0.1.1	
# ::edge	town	location	county	0.1.0.0	0.1.0.0.0	
# ::edge	traffic	mod	local	0.0.0.0.0.0.0.1.0	0.0.0.0.0.0.0.1.0.0	
(a / and 
      :op1 (h / help-01 
            :ARG0 (a2 / accident 
                  :ARG1-of (r2 / risk-01 
                        :op-of (a3 / and 
                              :ARG0-of (h2 / help-01 
                                    :ARG1 (s3 / solve-01 
                                          :ARG0 (r3 / road 
                                                :ARG1-of (c2 / complete-01) 
                                                :ARG1-of (r4 / relieve-01 
                                                      :mod (i / inner))) 
                                          :ARG1 (p / problem 
                                                :mod (t2 / traffic 
                                                      :mod (l2 / local))))) 
                              :op1 (l / low)))) 
            :ARG1 (g / grow-01)) 
      :op2 (s / strengthen-01 
            :ARG1 (r / role 
                  :location (t / town 
                        :location (c / county))) 
            :degree (s2 / so)))

# ::snt motorists who are the innocent victims of accidents can now have more legal muscle to pursue uninsured losses with a lowcost legal fees scheme from das
# ::tok motorists who are the innocent victims of accidents can now have more legal muscle to pursue uninsured losses with a lowcost legal fees scheme from das
# ::alignments 23-24|0.0.0.0 22-23|0.0.0.0.0 21-22|0.0.0.0.0.0 15-16|0.0.0.1 13-14|0.0.0 12-13|0.0.0.2 9-10|0.0 8-9|0 7-8|0.0.0.1.0.0 5-6|0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:17.471
# ::node	0	possible	8-9
# ::node	0.0	now	9-10
# ::node	0.0.0	muscle-01	13-14
# ::node	0.0.0.0	scheme	23-24
# ::node	0.0.0.0.0	fee	22-23
# ::node	0.0.0.0.0.0	legal	21-22
# ::node	0.0.0.1	pursue-01	15-16
# ::node	0.0.0.1.0	victim	5-6
# ::node	0.0.0.1.0.0	accident	7-8
# ::node	0.0.0.2	legal	12-13
# ::root	0	possible
# ::edge	fee	mod	legal	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	muscle-01	ARG0	scheme	0.0.0	0.0.0.0	
# ::edge	muscle-01	ARG1	pursue-01	0.0.0	0.0.0.1	
# ::edge	muscle-01	mod	legal	0.0.0	0.0.0.2	
# ::edge	muscle-01	time	now	0.0.0	0.0	
# ::edge	possible	time	now	0	0.0	
# ::edge	pursue-01	ARG0	victim	0.0.0.1	0.0.0.1.0	
# ::edge	scheme	mod	fee	0.0.0.0	0.0.0.0.0	
# ::edge	victim	mod	accident	0.0.0.1.0	0.0.0.1.0.0	
(p2 / possible 
      :time (n / now 
            :time-of (m / muscle-01 
                  :ARG0 (s / scheme 
                        :mod (f / fee 
                              :mod (l / legal))) 
                  :ARG1 (p / pursue-01 
                        :ARG0 (v / victim 
                              :mod (a / accident))) 
                  :mod (l2 / legal))))

# ::snt  most of us believe that accidents always happen to someone else which i suppose is how we are able to go about our everyday lives
# ::tok most of us believe that accidents always happen to someone else which i suppose is how we are able to go about our everyday lives
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:17.472
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt more than 250 people working at the chernobyl plant when a nuclear explosion took place or involved in decontamination work died in the threeandahalf years since the accident moscow news reported
# ::tok more than 250 people working at the chernobyl plant when a nuclear explosion took place or involved in decontamination work died in the threeandahalf years since the accident moscow news reported
# ::alignments 30-31|0.1.2.0.0 29-30|0.1.2.0.0.1 27-28|0.1.2.0.0.0 25-26|0.1.2.0 24-25|0.1.2.0.1.0+0.1.2.0.1 20-21|0.1.2 16-17|0.1 15-16|0 14-15|0.1.0 12-13|0.1.1 11-12|0.1.1.1 8-9|0.0.0 4-5|0.0 2-3|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:17.643
# ::node	0	or	15-16
# ::node	0.0	work-01	4-5
# ::node	0.0.0	plant	8-9
# ::node	0.1	involve-01	16-17
# ::node	0.1.0	place	14-15
# ::node	0.1.1	explode-01	12-13
# ::node	0.1.1.0	250	2-3
# ::node	0.1.1.1	nucleus	11-12
# ::node	0.1.2	die-01	20-21
# ::node	0.1.2.0	since	25-26
# ::node	0.1.2.0.0	report-01	30-31
# ::node	0.1.2.0.0.0	accident	27-28
# ::node	0.1.2.0.0.1	news	29-30
# ::node	0.1.2.0.1	temporal-quantity	24-25
# ::node	0.1.2.0.1.0	year	24-25
# ::root	0	or
# ::edge	die-01	ARG1	involve-01	0.1.2	0.1	
# ::edge	die-01	time	since	0.1.2	0.1.2.0	
# ::edge	explode-01	ARG0	250	0.1.1	0.1.1.0	
# ::edge	explode-01	ARG1	nucleus	0.1.1	0.1.1.1	
# ::edge	involve-01	ARG0	place	0.1	0.1.0	
# ::edge	involve-01	ARG1	explode-01	0.1	0.1.1	
# ::edge	or	op1	involve-01	0	0.1	
# ::edge	report-01	ARG0	accident	0.1.2.0.0	0.1.2.0.0.0	
# ::edge	report-01	ARG1	news	0.1.2.0.0	0.1.2.0.0.1	
# ::edge	since	op1	report-01	0.1.2.0	0.1.2.0.0	
# ::edge	temporal-quantity	time	since	0.1.2.0.1	0.1.2.0	
# ::edge	temporal-quantity	unit	year	0.1.2.0.1	0.1.2.0.1.0	
# ::edge	work-01	ARG1	plant	0.0	0.0.0	
# ::edge	work-01	condition	or	0.0	0	
(o / or 
      :condition-of (w / work-01 
            :ARG1 (p2 / plant)) 
      :op1 (i / involve-01 
            :ARG0 (p / place) 
            :ARG1 (e / explode-01 
                  :ARG0 250 
                  :ARG1 (n2 / nucleus)) 
            :ARG1-of (d / die-01 
                  :time (s / since 
                        :op1 (r / report-01 
                              :ARG0 (a / accident) 
                              :ARG1 (n / news)) 
                        :time-of (t / temporal-quantity 
                              :unit (y / year))))))

# ::snt the m25 thats very busy now between junctions 16 and 15 thats the m40m4 sheer weight of traffic and an earlier accident causing a lot of conjestion around that area so allow extra time for your journey if youre heading that way
# ::tok the m25 thats very busy now between junctions 16 and 15 thats the m40m4 sheer weight of traffic and an earlier accident causing a lot of conjestion around that area so allow extra time for your journey if youre heading that way
# ::alignments 41-42|0.2.1.0.0.0.0 39-40|0.2.1.0.0.0 36-37|0.2.1.0.4 33-34|0.2.1.0.0 32-33|0.2.1.0.0.1 31-32|0.2.1.0 30-31|0.2.1.0.1 29-30|0.2.1 27-28|0.2 24-25|0.2.0 22-23|0 21-22|0.0 20-21|0.0.0 18-19|0.1 17-18|0.1.1 15-16|0.1.0 14-15|0.1.0.0 11-12|0.1.2 10-11|0.2.1.0.3 9-10|0.1.2.0 8-9|0.2.1.0.2 6-7|0.1.2.0.0 5-6|0.1.2.0.0.1 4-5|0.1.2.0.0.0.0 3-4|0.1.2.0.0.0.0.0 2-3|0.1.2.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:18.035
# ::node	0	cause-01	22-23
# ::node	0.0	accident	21-22
# ::node	0.0.0	early	20-21
# ::node	0.1	and	18-19
# ::node	0.1.0	weight	15-16
# ::node	0.1.0.0	sheer	14-15
# ::node	0.1.1	traffic	17-18
# ::node	0.1.2	that	11-12
# ::node	0.1.2.0	and	9-10
# ::node	0.1.2.0.0	between	6-7
# ::node	0.1.2.0.0.0	that	2-3
# ::node	0.1.2.0.0.0.0	busy	4-5
# ::node	0.1.2.0.0.0.0.0	very	3-4
# ::node	0.1.2.0.0.1	now	5-6
# ::node	0.2	around	27-28
# ::node	0.2.0	lot	24-25
# ::node	0.2.1	area	29-30
# ::node	0.2.1.0	allow-01	31-32
# ::node	0.2.1.0.0	time	33-34
# ::node	0.2.1.0.0.0	head-02	39-40
# ::node	0.2.1.0.0.0.0	way	41-42
# ::node	0.2.1.0.0.1	extra	32-33
# ::node	0.2.1.0.1	so	30-31
# ::node	0.2.1.0.2	16	8-9
# ::node	0.2.1.0.3	15	10-11
# ::node	0.2.1.0.4	journey-01	36-37
# ::root	0	cause-01
# ::edge	15	op1	allow-01	0.2.1.0.3	0.2.1.0	
# ::edge	16	op1	allow-01	0.2.1.0.2	0.2.1.0	
# ::edge	accident	mod	early	0.0	0.0.0	
# ::edge	allow-01	ARG0	area	0.2.1.0	0.2.1	
# ::edge	allow-01	ARG1	time	0.2.1.0	0.2.1.0.0	
# ::edge	allow-01	mod	so	0.2.1.0	0.2.1.0.1	
# ::edge	allow-01	part	journey-01	0.2.1.0	0.2.1.0.4	
# ::edge	and	op1	between	0.1.2.0	0.1.2.0.0	
# ::edge	and	op1	weight	0.1	0.1.0	
# ::edge	and	op2	that	0.1.2.0	0.1.2	
# ::edge	and	op2	traffic	0.1	0.1.1	
# ::edge	around	op1	area	0.2	0.2.1	
# ::edge	between	quant	now	0.1.2.0.0	0.1.2.0.0.1	
# ::edge	busy	degree	very	0.1.2.0.0.0.0	0.1.2.0.0.0.0.0	
# ::edge	cause-01	ARG0	accident	0	0.0	
# ::edge	cause-01	ARG1	and	0	0.1	
# ::edge	cause-01	location	around	0	0.2	
# ::edge	head-02	ARG0	time	0.2.1.0.0.0	0.2.1.0.0	
# ::edge	head-02	ARG1	way	0.2.1.0.0.0	0.2.1.0.0.0.0	
# ::edge	lot	location	around	0.2.0	0.2	
# ::edge	that	mod	between	0.1.2.0.0.0	0.1.2.0.0	
# ::edge	that	mod	busy	0.1.2.0.0.0	0.1.2.0.0.0.0	
# ::edge	that	prep-against	and	0.1.2	0.1	
# ::edge	time	mod	extra	0.2.1.0.0	0.2.1.0.0.1	
# ::edge	weight	quant	sheer	0.1.0	0.1.0.0	
(c / cause-01 
      :ARG0 (a4 / accident 
            :mod (e2 / early)) 
      :ARG1 (a5 / and 
            :op1 (w2 / weight 
                  :quant (s2 / sheer)) 
            :op2 (t2 / traffic) 
            :prep-against-of (t3 / that 
                  :op-of (a6 / and 
                        :op1 (b / between 
                              :mod-of (t4 / that 
                                    :mod (b2 / busy 
                                          :degree (v / very))) 
                              :quant (n / now))))) 
      :location (a3 / around 
            :location-of (l / lot) 
            :op1 (a2 / area 
                  :ARG0-of (a / allow-01 
                        :ARG1 (t / time 
                              :ARG0-of (h / head-02 
                                    :ARG1 (w / way)) 
                              :mod (e / extra)) 
                        :mod (s / so) 
                        :op-of 16 
                        :op-of 15 
                        :part (j / journey-01)))))

# ::snt capt hodgkins added the birdstrike hazard is so great that i can confidently predict that this development would result in an incident or accident sooner rather than later
# ::tok capt hodgkins added the birdstrike hazard is so great that i can confidently predict that this development would result in an incident or accident sooner rather than later
# ::alignments 27-28|0.2.0.0.0.0 24-25|0.0 23-24|0.2.0.0.1.1 22-23|0.2.0.0.1 21-22|0.2.0.0.1.0 18-19|0.2.0.0 16-17|0.2.0.0.0 15-16|0.2.0.0.0.1 13-14|0.2 11-12|0.2.1 10-11|0.2.0 8-9|0.1 7-8|0.1.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:18.220
# ::node	0	add-01	2-3
# ::node	0.0	soon	24-25
# ::node	0.1	great	8-9
# ::node	0.1.0	so	7-8
# ::node	0.2	predict-01	13-14
# ::node	0.2.0	i	10-11
# ::node	0.2.0.0	result-01	18-19
# ::node	0.2.0.0.0	develop-02	16-17
# ::node	0.2.0.0.0.0	late	27-28
# ::node	0.2.0.0.0.1	this	15-16
# ::node	0.2.0.0.1	or	22-23
# ::node	0.2.0.0.1.0	incident	21-22
# ::node	0.2.0.0.1.1	accident	23-24
# ::node	0.2.1	possible	11-12
# ::root	0	add-01
# ::edge	add-01	ARG0	soon	0	0.0	
# ::edge	add-01	ARG1	great	0	0.1	
# ::edge	develop-02	ARG1	late	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	develop-02	mod	this	0.2.0.0.0	0.2.0.0.0.1	
# ::edge	great	degree	so	0.1	0.1.0	
# ::edge	or	op1	incident	0.2.0.0.1	0.2.0.0.1.0	
# ::edge	or	op2	accident	0.2.0.0.1	0.2.0.0.1.1	
# ::edge	possible	domain	predict-01	0.2.1	0.2	
# ::edge	predict-01	ARG0	i	0.2	0.2.0	
# ::edge	predict-01	ARG1	add-01	0.2	0	
# ::edge	result-01	ARG0	i	0.2.0.0	0.2.0	
# ::edge	result-01	ARG1	develop-02	0.2.0.0	0.2.0.0.0	
# ::edge	result-01	ARG2	or	0.2.0.0	0.2.0.0.1	
(a2 / add-01 
      :ARG0 (s / soon) 
      :ARG1 (g / great 
            :degree (s2 / so)) 
      :ARG1-of (p / predict-01 
            :ARG0 (i2 / i 
                  :ARG0-of (r / result-01 
                        :ARG1 (d / develop-02 
                              :ARG1 (l / late) 
                              :mod (t / this)) 
                        :ARG2 (o / or 
                              :op1 (i / incident) 
                              :op2 (a / accident)))) 
            :domain-of (p2 / possible)))

# ::snt it is ironic that the one great accident of fame in his life came through the cinema
# ::tok it is ironic that the one great accident of fame in his life came through the cinema
# ::alignments 16-17|0.0.0.0 12-13|0.0.0.2 9-10|0.0.0 7-8|0.0.0.1 6-7|0.0.0.1.0 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:18.246
# ::node	0	ironic	2-3
# ::node	0.0	it	0-1
# ::node	0.0.0	fame	9-10
# ::node	0.0.0.0	cinema	16-17
# ::node	0.0.0.1	accident	7-8
# ::node	0.0.0.1.0	great	6-7
# ::node	0.0.0.2	life	12-13
# ::root	0	ironic
# ::edge	accident	mod	fame	0.0.0.1	0.0.0	
# ::edge	accident	mod	great	0.0.0.1	0.0.0.1.0	
# ::edge	fame	mod	cinema	0.0.0	0.0.0.0	
# ::edge	ironic	domain	it	0	0.0	
# ::edge	it	poss	fame	0.0	0.0.0	
# ::edge	life	part	fame	0.0.0.2	0.0.0	
(i / ironic 
      :domain (i2 / it 
            :poss (f / fame 
                  :mod (c / cinema) 
                  :mod-of (a / accident 
                        :mod (g / great)) 
                  :part-of (l / life))))

# ::snt town councillors are worried that confusing road priorities at the mill streetgrove street junction at the market square could cause an accident
# ::tok town councillors are worried that confusing road priorities at the mill streetgrove street junction at the market square could cause an accident
# ::alignments 21-22|0.1 19-20|0 18-19|0.3 17-18|0.2.1.0 16-17|0.2.1 12-13|0.2.0 7-8|0.0 6-7|0.0.1 5-6|0.0.0 3-4|0.2 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:18.443
# ::node	0	cause-01	19-20
# ::node	0.0	priority	7-8
# ::node	0.0.0	confuse-01	5-6
# ::node	0.0.0.0	town	0-1
# ::node	0.0.1	road	6-7
# ::node	0.1	accident	21-22
# ::node	0.2	worry-02	3-4
# ::node	0.2.0	street	12-13
# ::node	0.2.1	market	16-17
# ::node	0.2.1.0	square	17-18
# ::node	0.3	possible	18-19
# ::root	0	cause-01
# ::edge	cause-01	ARG0	priority	0	0.0	
# ::edge	cause-01	ARG1	accident	0	0.1	
# ::edge	cause-01	mod	possible	0	0.3	
# ::edge	confuse-01	ARG0	town	0.0.0	0.0.0.0	
# ::edge	confuse-01	ARG1	priority	0.0.0	0.0	
# ::edge	priority	mod	road	0.0	0.0.1	
# ::edge	square	mod	market	0.2.1.0	0.2.1	
# ::edge	worry-02	ARG0	street	0.2	0.2.0	
# ::edge	worry-02	ARG1	cause-01	0.2	0	
# ::edge	worry-02	ARG2	market	0.2	0.2.1	
(c / cause-01 
      :ARG0 (p2 / priority 
            :ARG1-of (c2 / confuse-01 
                  :ARG0 (t / town)) 
            :mod (r / road)) 
      :ARG1 (a / accident) 
      :ARG1-of (w / worry-02 
            :ARG0 (s2 / street) 
            :ARG2 (m / market 
                  :mod-of (s / square))) 
      :mod (p / possible))

# ::snt it is of course no accident that redundant theological speculation about the death of god should run parallel with an equally tedious literary preoccupation with the death of the novel
# ::tok it is of course no accident that redundant theological speculation about the death of god should run parallel with an equally tedious literary preoccupation with the death of the novel
# ::alignments 29-30|0 26-27|0.0 22-23|0.0.0.0.1.0 21-22|0.0.0.0.0.0.0.0 20-21|0.0.0.0.0.0.0 15-16|0.0.0.0.0.0 14-15|0.0.0.0.1.1 12-13|0.0.0.0.1 9-10|0.0.0.0 5-6|0.0.0 4-5|0.0.0.1 0-1|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:18.557
# ::node	0	novel	29-30
# ::node	0.0	die-01	26-27
# ::node	0.0.0	accident	5-6
# ::node	0.0.0.0	speculate-01	9-10
# ::node	0.0.0.0.0	it	0-1
# ::node	0.0.0.0.0.0	recommend-01	15-16
# ::node	0.0.0.0.0.0.0	equal	20-21
# ::node	0.0.0.0.0.0.0.0	tedious	21-22
# ::node	0.0.0.0.1	die-01	12-13
# ::node	0.0.0.0.1.0	literary	22-23
# ::node	0.0.0.0.1.1	god	14-15
# ::node	0.0.0.1	-	4-5
# ::root	0	novel
(n / novel 
      :ARG1-of (d / die-01 
            :ARG0 (a / accident 
                  :domain (s / speculate-01 
                        :ARG0 (i / it 
                              :ARG0-of (r / recommend-01 
                                    :ARG1 (e / equal 
                                          :degree-of (t / tedious)))) 
                        :ARG1 (d2 / die-01 
                              :ARG0 (l / literary) 
                              :ARG1 (g / god))) 
                  :polarity (- / -))))

# ::snt the accident happened outside the howard street home of 25yearold helen harvey who said this accident is what everyone around here has been predicting for weeks since these tubs were installed by the city council,  she said the tubs were extremely dangerous especially at night as the street was not very well lit and this might have contributed to this accident
# ::tok the accident happened outside the howard street home of 25yearold helen harvey who said this accident is what everyone around here has been predicting for weeks since these tubs were installed by the city council , she said the tubs were extremely dangerous especially at night as the street was not very well lit and this might have contributed to this accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:18.560
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt he said the shop had not reported the accident although it was required to do so within seven days under the health and safety at work act
# ::tok he said the shop had not reported the accident although it was required to do so within seven days under the health and safety at work act
# ::alignments 26-27|0.1.2.1.1.0 23-24|0.1.2.1.1 22-23|0.1.2.1 21-22|0.1.2.1.0 18-19|0.1.2.1.1.0.0.1.1+0.1.2.1.1.0.0.1 17-18|0.1.2.1.1.0.0.1.0 16-17|0.1.2.1.1.0.0 15-16|0.1.2.1.1.0.0.0 12-13|0.1.2 10-11|0.1.2.0 8-9|0.1.1 6-7|0.1 3-4|0.1.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:19.136
# ::node	0	say-01	1-2
# ::node	0.0	he	0-1
# ::node	0.1	report-01	6-7
# ::node	0.1.0	shop	3-4
# ::node	0.1.1	accident	8-9
# ::node	0.1.2	require-01	12-13
# ::node	0.1.2.0	it	10-11
# ::node	0.1.2.1	and	22-23
# ::node	0.1.2.1.0	health	21-22
# ::node	0.1.2.1.1	safe-41	23-24
# ::node	0.1.2.1.1.0	act-02	26-27
# ::node	0.1.2.1.1.0.0	within	16-17
# ::node	0.1.2.1.1.0.0.0	so	15-16
# ::node	0.1.2.1.1.0.0.1	temporal-quantity	18-19
# ::node	0.1.2.1.1.0.0.1.0	7	17-18
# ::node	0.1.2.1.1.0.0.1.1	day	18-19
# ::root	0	say-01
# ::edge	act-02	ARG1	within	0.1.2.1.1.0	0.1.2.1.1.0.0	
# ::edge	and	op1	require-01	0.1.2.1	0.1.2	
# ::edge	and	op2	health	0.1.2.1	0.1.2.1.0	
# ::edge	and	op3	safe-41	0.1.2.1	0.1.2.1.1	
# ::edge	report-01	ARG0	shop	0.1	0.1.0	
# ::edge	report-01	ARG1	accident	0.1	0.1.1	
# ::edge	report-01	condition	require-01	0.1	0.1.2	
# ::edge	require-01	ARG1	it	0.1.2	0.1.2.0	
# ::edge	safe-41	ARG1	act-02	0.1.2.1.1	0.1.2.1.1.0	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	report-01	0	0.1	
# ::edge	temporal-quantity	quant	7	0.1.2.1.1.0.0.1	0.1.2.1.1.0.0.1.0	
# ::edge	temporal-quantity	unit	day	0.1.2.1.1.0.0.1	0.1.2.1.1.0.0.1.1	
# ::edge	within	mod	so	0.1.2.1.1.0.0	0.1.2.1.1.0.0.0	
# ::edge	within	op1	temporal-quantity	0.1.2.1.1.0.0	0.1.2.1.1.0.0.1	
(s4 / say-01 
      :ARG0 (h2 / he) 
      :ARG1 (r2 / report-01 
            :ARG0 (s3 / shop) 
            :ARG1 (a3 / accident) 
            :condition (r / require-01 
                  :ARG1 (i / it) 
                  :op-of (a2 / and 
                        :op1 (h / health) 
                        :op2 (s / safe-41 
                              :ARG1 (a / act-02 
                                    :ARG1 (w / within 
                                          :mod (s2 / so) 
                                          :op1 (t / temporal-quantity 
                                                :quant 7 
                                                :unit (d / day)))))))))

# ::snt accidents will still happen
# ::tok accidents will still happen
# ::alignments 3-4|0 2-3|0.1 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:19.142
# ::node	0	happen-01	3-4
# ::node	0.0	accident	0-1
# ::node	0.1	still	2-3
# ::root	0	happen-01
# ::edge	happen-01	ARG1	accident	0	0.0	
# ::edge	happen-01	time	still	0	0.1	
(h / happen-01 
      :ARG1 (a / accident) 
      :time (s / still))

# ::snt cotton thus devised by accident the model for planned reduction in the nineteenthirties
# ::tok cotton thus devised by accident the model for planned reduction in the nineteenthirties
# ::alignments 9-10|0.1.0 8-9|0.1.0.0 6-7|0.1 4-5|0.2 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:19.179
# ::node	0	devise-01	2-3
# ::node	0.0	cotton	0-1
# ::node	0.1	model	6-7
# ::node	0.1.0	reduce-01	9-10
# ::node	0.1.0.0	plan-01	8-9
# ::node	0.2	accident	4-5
# ::root	0	devise-01
# ::edge	devise-01	ARG0	cotton	0	0.0	
# ::edge	devise-01	ARG1	model	0	0.1	
# ::edge	devise-01	ARG2	accident	0	0.2	
# ::edge	model	purpose	reduce-01	0.1	0.1.0	
# ::edge	plan-01	ARG1	reduce-01	0.1.0.0	0.1.0	
(d / devise-01 
      :ARG0 (c / cotton) 
      :ARG1 (m / model 
            :purpose (r / reduce-01 
                  :ARG1-of (p / plan-01))) 
      :ARG2 (a / accident))

# ::snt a man found by police hiding behind a tree close to the scene of a car accident he had just been involved in failed a roadside breath test
# ::tok a man found by police hiding behind a tree close to the scene of a car accident he had just been involved in failed a roadside breath test
# ::alignments 27-28|0.0.0.0.0.1.0.0.1 26-27|0.0.0.0.0.1.0.0.1.0 25-26|0.0.0.0.0.1.0.0.1.1 23-24|0.0.0.0.0.1.0.0 21-22|0.0.0.0.0.1.0.0.0.0 19-20|0.0.0.0.0.0 17-18|0.0.0.0.0.1.0.0.0 16-17|0.0.0 15-16|0.0 12-13|0.0.0.0 8-9|0 6-7|0.0.0.0.0.3 5-6|0.0.0.0.0 4-5|0.0.0.0.0.2 2-3|0.0.0.0.0.1 1-2|0.0.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:19.701
# ::node	0	tree	8-9
# ::node	0.0	car	15-16
# ::node	0.0.0	accident	16-17
# ::node	0.0.0.0	scene	12-13
# ::node	0.0.0.0.0	hide-01	5-6
# ::node	0.0.0.0.0.0	just	19-20
# ::node	0.0.0.0.0.1	find-01	2-3
# ::node	0.0.0.0.0.1.0	man	1-2
# ::node	0.0.0.0.0.1.0.0	fail-01	23-24
# ::node	0.0.0.0.0.1.0.0.0	he	17-18
# ::node	0.0.0.0.0.1.0.0.0.0	involve-01	21-22
# ::node	0.0.0.0.0.1.0.0.1	test-01	27-28
# ::node	0.0.0.0.0.1.0.0.1.0	breathe-01	26-27
# ::node	0.0.0.0.0.1.0.0.1.1	road	25-26
# ::node	0.0.0.0.0.2	police	4-5
# ::node	0.0.0.0.0.3	behind	6-7
# ::root	0	tree
# ::edge	accident	location	car	0.0.0	0.0	
# ::edge	fail-01	ARG0	he	0.0.0.0.0.1.0.0	0.0.0.0.0.1.0.0.0	
# ::edge	fail-01	ARG1	test-01	0.0.0.0.0.1.0.0	0.0.0.0.0.1.0.0.1	
# ::edge	fail-01	ARG2	man	0.0.0.0.0.1.0.0	0.0.0.0.0.1.0	
# ::edge	find-01	ARG0	hide-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	find-01	ARG1	man	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	hide-01	ARG0	just	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	hide-01	ARG1	police	0.0.0.0.0	0.0.0.0.0.2	
# ::edge	hide-01	ARG2	scene	0.0.0.0.0	0.0.0.0	
# ::edge	hide-01	location	behind	0.0.0.0.0	0.0.0.0.0.3	
# ::edge	involve-01	ARG1	he	0.0.0.0.0.1.0.0.0.0	0.0.0.0.0.1.0.0.0	
# ::edge	scene	mod	accident	0.0.0.0	0.0.0	
# ::edge	test-01	ARG1	breathe-01	0.0.0.0.0.1.0.0.1	0.0.0.0.0.1.0.0.1.0	
# ::edge	test-01	mod	road	0.0.0.0.0.1.0.0.1	0.0.0.0.0.1.0.0.1.1	
# ::edge	tree	location	car	0	0.0	
(t2 / tree 
      :location (c / car 
            :location-of (a / accident 
                  :mod-of (s / scene 
                        :ARG2-of (h2 / hide-01 
                              :ARG0 (j / just) 
                              :ARG0-of (f2 / find-01 
                                    :ARG1 (m / man 
                                          :ARG2-of (f / fail-01 
                                                :ARG0 (h / he 
                                                      :ARG1-of (i / involve-01)) 
                                                :ARG1 (t / test-01 
                                                      :ARG1 (b / breathe-01) 
                                                      :mod (r / road))))) 
                              :ARG1 (p / police) 
                              :location (b2 / behind))))))

# ::snt or a single accident like an aeroplane collision explosion or escape of poison gas may bring injury or death to thousands and dislocation to a whole region, the first is sometimes called a mass products case the second a mass accident
# ::tok or a single accident like an aeroplane collision explosion or escape of poison gas may bring injury or death to thousands and dislocation to a whole region , the first is sometimes called a mass products case the second a mass accident
# ::alignments 41-42|0.0.0.0 40-41|0.0.1.1.0 36-37|0.0.0 35-36|0.0.0.1 34-35|0.0.0.1.0 31-32|0.0.1.0.0.2.0.0 26-27|0.0.1.0.1 25-26|0.0.1.0.1.0 21-22|0 18-19|0.0.1.1 17-18|0.0.1 16-17|0.0.1.0 15-16|0.0 14-15|0.0.2.0+0.0.2 13-14|0.0.1.0.0.0 10-11|0.0.1.0.0.2.0 9-10|0.0.1.0.0.2 8-9|0.0.1.0.0 7-8|0.0.1.0.0.1 3-4|0.0.1.0.0.1.0 2-3|0.0.1.0.0.1.0.0 0-1|0.0.1.0.0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:20.365
# ::node	0	and	21-22
# ::node	0.0	bring-01	15-16
# ::node	0.0.0	case	36-37
# ::node	0.0.0.0	accident	41-42
# ::node	0.0.0.1	product	35-36
# ::node	0.0.0.1.0	mass	34-35
# ::node	0.0.1	or	17-18
# ::node	0.0.1.0	injure-01	16-17
# ::node	0.0.1.0.0	explode-01	8-9
# ::node	0.0.1.0.0.0	gas	13-14
# ::node	0.0.1.0.0.1	collide-01	7-8
# ::node	0.0.1.0.0.1.0	accident	3-4
# ::node	0.0.1.0.0.1.0.0	single	2-3
# ::node	0.0.1.0.0.1.0.1	or	0-1
# ::node	0.0.1.0.0.2	or	9-10
# ::node	0.0.1.0.0.2.0	escape-01	10-11
# ::node	0.0.1.0.0.2.0.0	sometimes	31-32
# ::node	0.0.1.0.1	region	26-27
# ::node	0.0.1.0.1.0	whole	25-26
# ::node	0.0.1.1	die-01	18-19
# ::node	0.0.1.1.0	mass	40-41
# ::node	0.0.2	date-entity	14-15
# ::node	0.0.2.0	5	14-15
# ::root	0	and
(a2 / and 
      :ARG2-of (b / bring-01 
            :ARG0 (c / case 
                  :domain-of (a / accident) 
                  :mod (p / product 
                        :degree (m2 / mass))) 
            :ARG1 (o / or 
                  :op1 (i / injure-01 
                        :ARG1 (e2 / explode-01 
                              :ARG1 (g / gas) 
                              :ARG2-of (c2 / collide-01 
                                    :ARG1 (a3 / accident 
                                          :mod (s2 / single) 
                                          :op-of (o3 / or))) 
                              :op-of (o2 / or 
                                    :op1 (e / escape-01 
                                          :ARG1 (s / sometimes)))) 
                        :ARG2 (r / region 
                              :mod (w / whole))) 
                  :op2 (d / die-01 
                        :ARG1 (m / mass))) 
            :mod (d2 / date-entity 
                  :month 5)))

# ::snt billy martin hired and fired as manager five times by the new york yankees owner george steinbrenner died on christmas day after a road accident
# ::tok billy martin hired and fired as manager five times by the new york yankees owner george steinbrenner died on christmas day after a road accident
# ::alignments 24-25|0.0.0.3.0 23-24|0.0.0.3.0.0 21-22|0.0.0.3 20-21|0.0.0.4 17-18|0.0.0 14-15|0.0.0.1.0+0.0.0.1 11-14|0.0.0.0.0.0+0.0.0.0.0.1+0.0.0.0.0.2+0.0.0.0.0+0.0.0.0 7-8|0.0.0.2 6-7|0.0.1 4-5|0.1 3-4|0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:20.494
# ::node	0	and	3-4
# ::node	0.0	hire-01	2-3
# ::node	0.0.0	die-01	17-18
# ::node	0.0.0.0	organization	11-14
# ::node	0.0.0.0.0	name	11-14
# ::node	0.0.0.0.0.0	"yankees"	11-14
# ::node	0.0.0.0.0.1	"york"	11-14
# ::node	0.0.0.0.0.2	"new"	11-14
# ::node	0.0.0.1	person	14-15
# ::node	0.0.0.1.0	own-01	14-15
# ::node	0.0.0.2	5	7-8
# ::node	0.0.0.3	after	21-22
# ::node	0.0.0.3.0	accident	24-25
# ::node	0.0.0.3.0.0	road	23-24
# ::node	0.0.0.4	day	20-21
# ::node	0.0.1	manage-01	6-7
# ::node	0.1	fire-01	4-5
# ::root	0	and
# ::edge	accident	location	road	0.0.0.3.0	0.0.0.3.0.0	
# ::edge	after	op1	accident	0.0.0.3	0.0.0.3.0	
# ::edge	and	op1	hire-01	0	0.0	
# ::edge	and	op2	fire-01	0	0.1	
# ::edge	die-01	ARG0	organization	0.0.0	0.0.0.0	
# ::edge	die-01	ARG1	person	0.0.0	0.0.0.1	
# ::edge	die-01	quant	5	0.0.0	0.0.0.2	
# ::edge	die-01	time	after	0.0.0	0.0.0.3	
# ::edge	die-01	time	day	0.0.0	0.0.0.4	
# ::edge	hire-01	ARG1	die-01	0.0	0.0.0	
# ::edge	hire-01	ARG2	manage-01	0.0	0.0.1	
# ::edge	name	op1	"yankees"	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	name	op2	"york"	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	name	op3	"new"	0.0.0.0.0	0.0.0.0.0.2	
# ::edge	organization	name	name	0.0.0.0	0.0.0.0.0	
# ::edge	own-01	ARG0	person	0.0.0.1.0	0.0.0.1	
(a3 / and 
      :op1 (h / hire-01 
            :ARG1 (d2 / die-01 
                  :ARG0 (o2 / organization 
                        :name (n / name 
                              :op1 "yankees" 
                              :op2 "york" 
                              :op3 "new")) 
                  :ARG1 (p / person 
                        :ARG0-of (o / own-01)) 
                  :quant 5 
                  :time (a2 / after 
                        :op1 (a / accident 
                              :location (r / road))) 
                  :time (d / day)) 
            :ARG2 (m / manage-01)) 
      :op2 (f / fire-01))

# ::snt mr paul harrison prosecuting said the accident had happened just before 10am as the metro travelled from cromwell road towards banbury and the samba travelled in the opposite direction, mr harrison stated that a considerable police investigation had taken place following the accident to try to discover why stratfords car had moved from his side of the road to the other side of the carriageway
# ::tok mr paul harrison prosecuting said the accident had happened just before 10am as the metro travelled from cromwell road towards banbury and the samba travelled in the opposite direction , mr harrison stated that a considerable police investigation had taken place following the accident to try to discover why stratfords car had moved from his side of the road to the other side of the carriageway
# ::alignments 62-63|0.0.1.0.0.1.1 61-62|0.0.1.0.0.1.1.0 58-59|0.0.1.0.0.1.2.0 55-56|0.0.1.0.0.1.2 52-53|0.0.1.0.0.1 50-51|0.0.1.0.0.1.0 47-48|0.0.1.0.0 45-46|0.0.1.0 43-44|0.0.1.0.1 40-41|0.0.1.0.0.0 37-38|0.0.1.3.0 36-37|0.0.1.3.0.0 35-36|0.0.1.3.0.1 32-33|0.0.1.3 28-29|0.0.1.3.1 27-28|0.0.1.3.1.0 24-25|0.0.1.2 21-22|0.0.1 18-19|0.0.1.1.1 15-16|0.0.1.1 14-15|0.0.1.1.0 10-11|0.0.2 9-10|0.0.3 8-9|0.0 6-7|0.0.0 4-5|0 3-4|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:21.208
# ::node	0	say-01	4-5
# ::node	0.0	happen-01	8-9
# ::node	0.0.0	accident	6-7
# ::node	0.0.1	and	21-22
# ::node	0.0.1.0	try-01	45-46
# ::node	0.0.1.0.0	discover-01	47-48
# ::node	0.0.1.0.0.0	place	40-41
# ::node	0.0.1.0.0.1	move-01	52-53
# ::node	0.0.1.0.0.1.0	car	50-51
# ::node	0.0.1.0.0.1.1	side	62-63
# ::node	0.0.1.0.0.1.1.0	other	61-62
# ::node	0.0.1.0.0.1.2	side	55-56
# ::node	0.0.1.0.0.1.2.0	road	58-59
# ::node	0.0.1.0.1	accident	43-44
# ::node	0.0.1.1	travel-01	15-16
# ::node	0.0.1.1.0	metro	14-15
# ::node	0.0.1.1.1	road	18-19
# ::node	0.0.1.2	travel-01	24-25
# ::node	0.0.1.3	state-01	32-33
# ::node	0.0.1.3.0	investigate-01	37-38
# ::node	0.0.1.3.0.0	police	36-37
# ::node	0.0.1.3.0.1	considerable	35-36
# ::node	0.0.1.3.1	direction	28-29
# ::node	0.0.1.3.1.0	opposite-41	27-28
# ::node	0.0.2	before	10-11
# ::node	0.0.3	just	9-10
# ::node	0.1	prosecute-01	3-4
# ::root	0	say-01
# ::edge	accident	domain	try-01	0.0.1.0.1	0.0.1.0	
# ::edge	and	op1	travel-01	0.0.1	0.0.1.1	
# ::edge	and	op2	travel-01	0.0.1	0.0.1.2	
# ::edge	and	op3	state-01	0.0.1	0.0.1.3	
# ::edge	discover-01	ARG1	place	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	discover-01	time	move-01	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	happen-01	ARG1	accident	0.0	0.0.0	
# ::edge	happen-01	condition	and	0.0	0.0.1	
# ::edge	happen-01	time	before	0.0	0.0.2	
# ::edge	happen-01	time	just	0.0	0.0.3	
# ::edge	investigate-01	ARG0	police	0.0.1.3.0	0.0.1.3.0.0	
# ::edge	investigate-01	mod	considerable	0.0.1.3.0	0.0.1.3.0.1	
# ::edge	move-01	ARG1	car	0.0.1.0.0.1	0.0.1.0.0.1.0	
# ::edge	move-01	ARG2	side	0.0.1.0.0.1	0.0.1.0.0.1.1	
# ::edge	move-01	ARG3	side	0.0.1.0.0.1	0.0.1.0.0.1.2	
# ::edge	opposite-41	ARG1	direction	0.0.1.3.1.0	0.0.1.3.1	
# ::edge	prosecute-01	ARG1	say-01	0.1	0	
# ::edge	road	part	side	0.0.1.0.0.1.2.0	0.0.1.0.0.1.2	
# ::edge	say-01	ARG1	happen-01	0	0.0	
# ::edge	side	mod	other	0.0.1.0.0.1.1	0.0.1.0.0.1.1.0	
# ::edge	state-01	ARG1	investigate-01	0.0.1.3	0.0.1.3.0	
# ::edge	state-01	medium	direction	0.0.1.3	0.0.1.3.1	
# ::edge	travel-01	ARG0	metro	0.0.1.1	0.0.1.1.0	
# ::edge	travel-01	ARG1	road	0.0.1.1	0.0.1.1.1	
# ::edge	try-01	ARG0	and	0.0.1.0	0.0.1	
# ::edge	try-01	ARG1	discover-01	0.0.1.0	0.0.1.0.0	
(s4 / say-01 
      :ARG1 (h / happen-01 
            :ARG1 (a3 / accident) 
            :condition (a2 / and 
                  :ARG0-of (t / try-01 
                        :ARG1 (d / discover-01 
                              :ARG1 (p / place) 
                              :time (m / move-01 
                                    :ARG1 (c / car) 
                                    :ARG2 (s / side 
                                          :mod (o / other)) 
                                    :ARG3 (s2 / side 
                                          :part-of (r / road)))) 
                        :domain-of (a / accident)) 
                  :op1 (t3 / travel-01 
                        :ARG0 (m2 / metro) 
                        :ARG1 (r2 / road)) 
                  :op2 (t2 / travel-01) 
                  :op3 (s3 / state-01 
                        :ARG1 (i / investigate-01 
                              :ARG0 (p2 / police) 
                              :mod (c2 / considerable)) 
                        :medium (d2 / direction 
                              :ARG1-of (o2 / opposite-41)))) 
            :time (b / before) 
            :time (j / just)) 
      :ARG1-of (p3 / prosecute-01))

# ::snt that is our judgment that he is not autonomous is unaffected even if the example is developed to show that his predicament is a result of a series of bizarre accidents and coincidences resulting from the breakdown and freak behaviour of several computers in some futuristic society
# ::tok that is our judgment that he is not autonomous is unaffected even if the example is developed to show that his predicament is a result of a series of bizarre accidents and coincidences resulting from the breakdown and freak behaviour of several computers in some futuristic society
# ::alignments 46-47|0.1.0.1.1.0.1.0.0 44-45|0.1.0.1.1.0.1.0.0.0 42-43|0.1.0.1.1.0.1.0 41-42|0.1.0.1.1.0.1.0.1 39-40|0.1.0.1.1.0.1 38-39|0.1.0.1.1.0.0 37-38|0.1.0.1.1.0 36-37|0.1.0.1.1 33-34|0.1.0.1.0 31-32|0.1.0.1 30-31|0.1.0.0 29-30|0.1.0.0.0 27-28|0.1.0 24-25|0.1 18-19|0 16-17|0.2 14-15|0.0 10-11|0.0.0.1+0.0.0 8-9|0.0.0.0.0 5-6|0.0.0.0.0.0 3-4|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:21.415
# ::node	0	show-01	18-19
# ::node	0.0	example	14-15
# ::node	0.0.0	affect-01	10-11
# ::node	0.0.0.0	judge-01	3-4
# ::node	0.0.0.0.0	autonomy	8-9
# ::node	0.0.0.0.0.0	he	5-6
# ::node	0.0.0.1	-	10-11
# ::node	0.1	result-01	24-25
# ::node	0.1.0	series	27-28
# ::node	0.1.0.0	accident	30-31
# ::node	0.1.0.0.0	bizarre	29-30
# ::node	0.1.0.1	and	31-32
# ::node	0.1.0.1.0	result-01	33-34
# ::node	0.1.0.1.1	break-12	36-37
# ::node	0.1.0.1.1.0	and	37-38
# ::node	0.1.0.1.1.0.0	freak-01	38-39
# ::node	0.1.0.1.1.0.1	behave-01	39-40
# ::node	0.1.0.1.1.0.1.0	computer	42-43
# ::node	0.1.0.1.1.0.1.0.0	society	46-47
# ::node	0.1.0.1.1.0.1.0.0.0	some	44-45
# ::node	0.1.0.1.1.0.1.0.1	several	41-42
# ::node	0.2	develop-02	16-17
# ::root	0	show-01
# ::edge	accident	mod	bizarre	0.1.0.0	0.1.0.0.0	
# ::edge	accident	quant	series	0.1.0.0	0.1.0	
# ::edge	affect-01	ARG0	example	0.0.0	0.0	
# ::edge	affect-01	ARG1	judge-01	0.0.0	0.0.0.0	
# ::edge	affect-01	polarity	-	0.0.0	0.0.0.1	
# ::edge	and	op1	break-12	0.1.0.1.1.0	0.1.0.1.1	
# ::edge	and	op2	freak-01	0.1.0.1.1.0	0.1.0.1.1.0.0	
# ::edge	and	op3	behave-01	0.1.0.1.1.0	0.1.0.1.1.0.1	
# ::edge	and	quant	series	0.1.0.1	0.1.0	
# ::edge	autonomy	domain	he	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	behave-01	ARG0	computer	0.1.0.1.1.0.1	0.1.0.1.1.0.1.0	
# ::edge	break-12	ARG2	and	0.1.0.1.1	0.1.0.1	
# ::edge	computer	location	society	0.1.0.1.1.0.1.0	0.1.0.1.1.0.1.0.0	
# ::edge	computer	quant	several	0.1.0.1.1.0.1.0	0.1.0.1.1.0.1.0.1	
# ::edge	develop-02	ARG1	show-01	0.2	0	
# ::edge	judge-01	ARG1	autonomy	0.0.0.0	0.0.0.0.0	
# ::edge	result-01	ARG1	and	0.1.0.1.0	0.1.0.1	
# ::edge	result-01	ARG1	series	0.1	0.1.0	
# ::edge	show-01	ARG0	example	0	0.0	
# ::edge	show-01	ARG1	result-01	0	0.1	
# ::edge	society	quant	some	0.1.0.1.1.0.1.0.0	0.1.0.1.1.0.1.0.0.0	
(s5 / show-01 
      :ARG0 (e / example 
            :ARG0-of (a4 / affect-01 
                  :ARG1 (j / judge-01 
                        :ARG1 (a5 / autonomy 
                              :domain (h / he))) 
                  :polarity -)) 
      :ARG1 (r2 / result-01 
            :ARG1 (s4 / series 
                  :quant-of (a3 / accident 
                        :mod (b3 / bizarre)) 
                  :quant-of (a2 / and 
                        :ARG1-of (r / result-01) 
                        :ARG2-of (b2 / break-12 
                              :op-of (a / and 
                                    :op1 (f / freak-01) 
                                    :op2 (b / behave-01 
                                          :ARG0 (c / computer 
                                                :location (s / society 
                                                      :quant (s2 / some)) 
                                                :quant (s3 / several)))))))) 
      :ARG1-of (d / develop-02))

# ::snt under the common law proof that the plaintiff had been guilty of contributory negligence and that he had the last opportunity of avoiding the accident entirely deprived him of his remedy
# ::tok under the common law proof that the plaintiff had been guilty of contributory negligence and that he had the last opportunity of avoiding the accident entirely deprived him of his remedy
# ::alignments 30-31|0.2.0 25-26|0.1.1.2 24-25|0.1.1.1 22-23|0.1.1 20-21|0.1 19-20|0.1.0 16-17|0.1.1.0 14-15|0.3 13-14|0 10-11|0.2 4-5|0.0 3-4|0.0.0.0 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:21.496
# ::node	0	neglect-01	13-14
# ::node	0.0	proof	4-5
# ::node	0.0.0	common	2-3
# ::node	0.0.0.0	law	3-4
# ::node	0.1	opportunity	20-21
# ::node	0.1.0	last	19-20
# ::node	0.1.1	avoid-01	22-23
# ::node	0.1.1.0	he	16-17
# ::node	0.1.1.1	accident	24-25
# ::node	0.1.1.2	entire	25-26
# ::node	0.2	guilty-41	10-11
# ::node	0.2.0	remedy-01	30-31
# ::node	0.3	and	14-15
# ::root	0	neglect-01
# ::edge	and	op1	neglect-01	0.3	0	
# ::edge	avoid-01	ARG0	he	0.1.1	0.1.1.0	
# ::edge	avoid-01	ARG1	accident	0.1.1	0.1.1.1	
# ::edge	avoid-01	time	entire	0.1.1	0.1.1.2	
# ::edge	guilty-41	ARG1	remedy-01	0.2	0.2.0	
# ::edge	guilty-41	ARG2	neglect-01	0.2	0	
# ::edge	law	mod	common	0.0.0.0	0.0.0	
# ::edge	neglect-01	ARG0	proof	0	0.0	
# ::edge	neglect-01	ARG1	opportunity	0	0.1	
# ::edge	opportunity	mod	last	0.1	0.1.0	
# ::edge	opportunity	purpose	avoid-01	0.1	0.1.1	
# ::edge	proof	mod	common	0.0	0.0.0	
(n / neglect-01 
      :ARG0 (p / proof 
            :mod (c / common 
                  :mod-of (l2 / law))) 
      :ARG1 (o / opportunity 
            :mod (l / last) 
            :purpose (a2 / avoid-01 
                  :ARG0 (h / he) 
                  :ARG1 (a / accident) 
                  :time (e / entire))) 
      :ARG2-of (g / guilty-41 
            :ARG1 (r / remedy-01)) 
      :op-of (a3 / and))

# ::snt with one in 50 accidents costing 360 million each year
# ::tok with one in 50 accidents costing 360 million each year
# ::alignments 9-10|0.1 8-9|0.1.0 6-7|0.0.0+0.0+0 5-6|0.1.0.0 4-5|0.1.0.0.0 3-4|0.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:21.540
# ::node	0	thing	6-7
# ::node	0.0	name	6-7
# ::node	0.0.0	"360"	6-7
# ::node	0.1	year	9-10
# ::node	0.1.0	each	8-9
# ::node	0.1.0.0	cost-01	5-6
# ::node	0.1.0.0.0	accident	4-5
# ::node	0.1.0.0.0.0	50	3-4
# ::root	0	thing
# ::edge	accident	quant	50	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	cost-01	ARG0	accident	0.1.0.0	0.1.0.0.0	
# ::edge	cost-01	ARG1	each	0.1.0.0	0.1.0	
# ::edge	name	op1	"360"	0.0	0.0.0	
# ::edge	thing	name	name	0	0.0	
# ::edge	thing	time	year	0	0.1	
# ::edge	year	mod	each	0.1	0.1.0	
(t / thing 
      :name (n / name 
            :op1 "360") 
      :time (y / year 
            :mod (e / each 
                  :ARG1-of (c / cost-01 
                        :ARG0 (a / accident 
                              :quant 50)))))

# ::snt the unusually high number of survivors from wednesdays accident was caused however by the dc10 breaking into three pieces which facilitated escape
# ::tok the unusually high number of survivors from wednesdays accident was caused however by the dc10 breaking into three pieces which facilitated escape
# ::alignments 21-22|0.0.0 18-19|0.0 17-18|0.0.1 15-16|0.1.0 10-11|0 8-9|0.1.2.0.0 5-6|0.1.2.0+0.1.2 3-4|0.1 2-3|0.1.1 1-2|0.0.0.0.0+0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:21.630
# ::node	0	cause-01	10-11
# ::node	0.0	piece	18-19
# ::node	0.0.0	escape-01	21-22
# ::node	0.0.0.0	usual	1-2
# ::node	0.0.0.0.0	-	1-2
# ::node	0.0.1	3	17-18
# ::node	0.1	number	3-4
# ::node	0.1.0	break-01	15-16
# ::node	0.1.1	high	2-3
# ::node	0.1.2	person	5-6
# ::node	0.1.2.0	survive-01	5-6
# ::node	0.1.2.0.0	accident	8-9
# ::root	0	cause-01
# ::edge	break-01	ARG1	number	0.1.0	0.1	
# ::edge	cause-01	ARG0	piece	0	0.0	
# ::edge	cause-01	ARG1	number	0	0.1	
# ::edge	escape-01	ARG0	piece	0.0.0	0.0	
# ::edge	escape-01	ARG1	usual	0.0.0	0.0.0.0	
# ::edge	number	mod	high	0.1	0.1.1	
# ::edge	person	quant	number	0.1.2	0.1	
# ::edge	piece	quant	3	0.0	0.0.1	
# ::edge	survive-01	ARG0	person	0.1.2.0	0.1.2	
# ::edge	survive-01	ARG1	accident	0.1.2.0	0.1.2.0.0	
# ::edge	usual	polarity	-	0.0.0.0	0.0.0.0.0	
(c / cause-01 
      :ARG0 (p / piece 
            :ARG0-of (e / escape-01 
                  :ARG1 (u / usual 
                        :polarity -)) 
            :quant 3) 
      :ARG1 (n / number 
            :ARG1-of (b / break-01) 
            :mod (h / high) 
            :quant-of (p2 / person 
                  :ARG0-of (s / survive-01 
                        :ARG1 (a / accident)))))

# ::snt this fact was readily admitted by the railways board only days after the accident and was borne out by the department of transport inquiry headed by anthony hidden qc
# ::tok this fact was readily admitted by the railways board only days after the accident and was borne out by the department of transport inquiry headed by anthony hidden qc
# ::alignments 27-28|0.0.1 23-24|0.1.0.0 22-23|0.1.0.0.0 20-21|0.1.0 16-17|0.1 14-15|0 13-14|0.0.4.0 11-12|0.0.4 10-11|0.0.4.1.0+0.0.4.1 9-10|0.0.3 7-8|0.1.0.0.0.0 4-5|0.0 3-4|0.0.2 1-2|0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:21.788
# ::node	0	and	14-15
# ::node	0.0	admit-01	4-5
# ::node	0.0.0	fact	1-2
# ::node	0.0.0.0	this	0-1
# ::node	0.0.1	hide-01	27-28
# ::node	0.0.2	ready	3-4
# ::node	0.0.3	only	9-10
# ::node	0.0.4	after	11-12
# ::node	0.0.4.0	accident	13-14
# ::node	0.0.4.1	temporal-quantity	10-11
# ::node	0.0.4.1.0	day	10-11
# ::node	0.1	bear-01	16-17
# ::node	0.1.0	department	20-21
# ::node	0.1.0.0	inquire-01	23-24
# ::node	0.1.0.0.0	transport-01	22-23
# ::node	0.1.0.0.0.0	railway	7-8
# ::root	0	and
# ::edge	admit-01	ARG1	fact	0.0	0.0.0	
# ::edge	admit-01	manner	ready	0.0	0.0.2	
# ::edge	admit-01	mod	only	0.0	0.0.3	
# ::edge	admit-01	time	after	0.0	0.0.4	
# ::edge	after	op1	accident	0.0.4	0.0.4.0	
# ::edge	after	quant	temporal-quantity	0.0.4	0.0.4.1	
# ::edge	and	op1	admit-01	0	0.0	
# ::edge	and	op2	bear-01	0	0.1	
# ::edge	bear-01	ARG0	department	0.1	0.1.0	
# ::edge	fact	mod	this	0.0.0	0.0.0.0	
# ::edge	hide-01	ARG1	admit-01	0.0.1	0.0	
# ::edge	inquire-01	ARG1	transport-01	0.1.0.0	0.1.0.0.0	
# ::edge	inquire-01	part	department	0.1.0.0	0.1.0	
# ::edge	temporal-quantity	unit	day	0.0.4.1	0.0.4.1.0	
# ::edge	transport-01	ARG1	railway	0.1.0.0.0	0.1.0.0.0.0	
(a / and 
      :op1 (a4 / admit-01 
            :ARG1 (f / fact 
                  :mod (t3 / this)) 
            :ARG1-of (h / hide-01) 
            :manner (r2 / ready) 
            :mod (o / only) 
            :time (a3 / after 
                  :op1 (a2 / accident) 
                  :quant (t2 / temporal-quantity 
                        :unit (d2 / day)))) 
      :op2 (b / bear-01 
            :ARG0 (d / department 
                  :part-of (i / inquire-01 
                        :ARG1 (t / transport-01 
                              :ARG1 (r / railway))))))

# ::snt that this opening onto society should occur precisely in the context of prostitution is no accident
# ::tok that this opening onto society should occur precisely in the context of prostitution is no accident
# ::alignments 15-16|0.2.0 14-15|0.2.0.1 12-13|0.2.0.0.0 10-11|0.2.0.0 7-8|0.3 6-7|0 5-6|0.2 4-5|0.1.0 3-4|0.1 2-3|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:21.848
# ::node	0	occur-01	6-7
# ::node	0.0	open-01	2-3
# ::node	0.0.0	this	1-2
# ::node	0.1	onto	3-4
# ::node	0.1.0	society	4-5
# ::node	0.2	recommend-01	5-6
# ::node	0.2.0	accident	15-16
# ::node	0.2.0.0	context	10-11
# ::node	0.2.0.0.0	prostitute-01	12-13
# ::node	0.2.0.1	-	14-15
# ::node	0.3	precise	7-8
# ::root	0	occur-01
# ::edge	accident	domain	context	0.2.0	0.2.0.0	
# ::edge	accident	polarity	-	0.2.0	0.2.0.1	
# ::edge	context	topic	prostitute-01	0.2.0.0	0.2.0.0.0	
# ::edge	occur-01	ARG0	open-01	0	0.0	
# ::edge	occur-01	ARG1	onto	0	0.1	
# ::edge	occur-01	manner	precise	0	0.3	
# ::edge	onto	op1	society	0.1	0.1.0	
# ::edge	open-01	mod	this	0.0	0.0.0	
# ::edge	recommend-01	ARG1	occur-01	0.2	0	
# ::edge	recommend-01	concession	accident	0.2	0.2.0	
(o / occur-01 
      :ARG0 (o3 / open-01 
            :mod (t / this)) 
      :ARG1 (o2 / onto 
            :op1 (s / society)) 
      :ARG1-of (r / recommend-01 
            :concession (a / accident 
                  :domain (c / context 
                        :topic (p / prostitute-01)) 
                  :polarity (- / -))) 
      :manner (p2 / precise))

# ::snt as industrial processes become more complex the energy applied to them greater substances and compounds more subtle and control processes more remote the potential for serious accidents increases
# ::tok as industrial processes become more complex the energy applied to them greater substances and compounds more subtle and control processes more remote the potential for serious accidents increases
# ::alignments 27-28|0.3.0 26-27|0.3.0.0 25-26|0.3.1.0.0.0 23-24|0.3.0.1 21-22|0.3.0.1.0 19-20|0.3 18-19|0.3.1 17-18|0.1 13-14|0 12-13|0.2 11-12|0.0 8-9|0.3.1.0.0.1.0 7-8|0.3.1.0.0.1.0.0 5-6|0.3.1.0.0.1 3-4|0.3.1.0.0 2-3|0.3.1.0 1-2|0.3.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:22.189
# ::node	0	and	13-14
# ::node	0.0	great	11-12
# ::node	0.1	and	17-18
# ::node	0.2	substance	12-13
# ::node	0.3	process	19-20
# ::node	0.3.0	increase-01	27-28
# ::node	0.3.0.0	accident	26-27
# ::node	0.3.0.1	potential	23-24
# ::node	0.3.0.1.0	remote	21-22
# ::node	0.3.1	control-01	18-19
# ::node	0.3.1.0	process	2-3
# ::node	0.3.1.0.0	become-01	3-4
# ::node	0.3.1.0.0.0	serious	25-26
# ::node	0.3.1.0.0.1	complex	5-6
# ::node	0.3.1.0.0.1.0	apply-01	8-9
# ::node	0.3.1.0.0.1.0.0	energy	7-8
# ::node	0.3.1.0.1	industry	1-2
# ::root	0	and
# ::edge	and	degree	great	0	0.0	
# ::edge	and	op1	and	0.1	0	
# ::edge	and	op1	substance	0	0.2	
# ::edge	and	op2	process	0	0.3	
# ::edge	apply-01	ARG1	energy	0.3.1.0.0.1.0	0.3.1.0.0.1.0.0	
# ::edge	become-01	ARG0	serious	0.3.1.0.0	0.3.1.0.0.0	
# ::edge	become-01	ARG1	process	0.3.1.0.0	0.3.1.0	
# ::edge	become-01	ARG2	complex	0.3.1.0.0	0.3.1.0.0.1	
# ::edge	complex	domain	apply-01	0.3.1.0.0.1	0.3.1.0.0.1.0	
# ::edge	control-01	ARG1	process	0.3.1	0.3.1.0	
# ::edge	increase-01	ARG0	process	0.3.0	0.3	
# ::edge	increase-01	ARG1	accident	0.3.0	0.3.0.0	
# ::edge	potential	purpose	increase-01	0.3.0.1	0.3.0	
# ::edge	process	mod	control-01	0.3	0.3.1	
# ::edge	process	quant	industry	0.3.1.0	0.3.1.0.1	
# ::edge	remote	domain	potential	0.3.0.1.0	0.3.0.1	
(a3 / and 
      :degree (g / great) 
      :op-of (a2 / and) 
      :op1 (s2 / substance) 
      :op2 (p2 / process 
            :ARG0-of (i / increase-01 
                  :ARG1 (a / accident) 
                  :purpose-of (p / potential 
                        :domain-of (r / remote))) 
            :mod (c / control-01 
                  :ARG1 (p3 / process 
                        :ARG1-of (b / become-01 
                              :ARG0 (s / serious) 
                              :ARG2 (c2 / complex 
                                    :domain (a4 / apply-01 
                                          :ARG1 (e / energy)))) 
                        :quant (i2 / industry)))))

# ::snt these defences particularly that of contributory negligence also disqualified a substantial proportion of other accident claims and heavily discounted settlement values
# ::tok these defences particularly that of contributory negligence also disqualified a substantial proportion of other accident claims and heavily discounted settlement values
# ::alignments 20-21|0.2.1 19-20|0.2.1.0 17-18|0.2.0.0.0 16-17|0.2 15-16|0 14-15|0.0 13-14|0.1 11-12|0.2.2 10-11|0.2.2.0 7-8|0.2.1.0.0 6-7|0.2.0.0 2-3|0.2.0.1 1-2|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:22.355
# ::node	0	claim-01	15-16
# ::node	0.0	accident	14-15
# ::node	0.1	other	13-14
# ::node	0.2	and	16-17
# ::node	0.2.0	defend-01	1-2
# ::node	0.2.0.0	neglect-01	6-7
# ::node	0.2.0.0.0	heavy	17-18
# ::node	0.2.0.1	particular	2-3
# ::node	0.2.1	value	20-21
# ::node	0.2.1.0	settle-02	19-20
# ::node	0.2.1.0.0	also	7-8
# ::node	0.2.2	proportion	11-12
# ::node	0.2.2.0	substantial	10-11
# ::root	0	claim-01
# ::edge	and	op1	defend-01	0.2	0.2.0	
# ::edge	and	op2	claim-01	0.2	0	
# ::edge	and	op3	value	0.2	0.2.1	
# ::edge	and	part	proportion	0.2	0.2.2	
# ::edge	claim-01	ARG0	accident	0	0.0	
# ::edge	claim-01	mod	other	0	0.1	
# ::edge	defend-01	ARG1	neglect-01	0.2.0	0.2.0.0	
# ::edge	defend-01	ARG3	particular	0.2.0	0.2.0.1	
# ::edge	neglect-01	ARG1	heavy	0.2.0.0	0.2.0.0.0	
# ::edge	proportion	mod	substantial	0.2.2	0.2.2.0	
# ::edge	settle-02	ARG0	also	0.2.1.0	0.2.1.0.0	
# ::edge	value	mod	settle-02	0.2.1	0.2.1.0	
(c / claim-01 
      :ARG0 (a2 / accident) 
      :mod (o / other) 
      :op-of (a / and 
            :op1 (d / defend-01 
                  :ARG1 (n / neglect-01 
                        :ARG1 (h / heavy)) 
                  :ARG3 (p2 / particular)) 
            :op2 (v / value 
                  :mod (s / settle-02 
                        :ARG0 (a3 / also))) 
            :part (p / proportion 
                  :mod (s2 / substantial))))

# ::snt other people killed in weekend road accidents include a 20yearold man whose soft top triumph spitfire overturned on the a338 near ringwood hampshire two men whose ford escort crashed into a stone wall at bodmin cornwall and a boy of 16 whose brotherinlaw crashed his vehicle into a tree felled by high winds near winchester hampshire
# ::tok other people killed in weekend road accidents include a 20yearold man whose soft top triumph spitfire overturned on the a338 near ringwood hampshire two men whose ford escort crashed into a stone wall at bodmin cornwall and a boy of 16 whose brotherinlaw crashed his vehicle into a tree felled by high winds near winchester hampshire
# ::alignments 53-54|0.0.2.0.0 52-53|0.0.2.0 51-52|0.0.2.0.1 48-49|0.0.2 45-46|0.0.0 43-44|0.0 40-41|0.1.2.1.1 38-39|0.2 36-37|0 32-33|0.1.1 31-32|0.1.1.0 28-29|0.1 24-25|0.1.2 23-24|0.1.2.2 20-21|0.0.1 16-17|0.1.2.1 13-14|0.1.2.0.0 12-13|0.1.0 10-11|0.1.2.1.0 7-8|0.1.2.1.0.0 6-7|0.1.2.1.0.0.0 5-6|0.1.2.1.0.0.0.0 4-5|0.1.2.1.0.0.0.0.0 2-3|0.1.2.0 0-1|0.1.2.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:23.369
# ::node	0	and	36-37
# ::node	0.0	crash-01	43-44
# ::node	0.0.0	vehicle	45-46
# ::node	0.0.1	near	20-21
# ::node	0.0.2	tree	48-49
# ::node	0.0.2.0	wind	52-53
# ::node	0.0.2.0.0	near	53-54
# ::node	0.0.2.0.1	high	51-52
# ::node	0.1	crash-01	28-29
# ::node	0.1.0	soft	12-13
# ::node	0.1.1	wall	32-33
# ::node	0.1.1.0	stone	31-32
# ::node	0.1.2	man	24-25
# ::node	0.1.2.0	kill-01	2-3
# ::node	0.1.2.0.0	top	13-14
# ::node	0.1.2.1	overturn-01	16-17
# ::node	0.1.2.1.0	man	10-11
# ::node	0.1.2.1.0.0	include-01	7-8
# ::node	0.1.2.1.0.0.0	accident	6-7
# ::node	0.1.2.1.0.0.0.0	road	5-6
# ::node	0.1.2.1.0.0.0.0.0	weekend	4-5
# ::node	0.1.2.1.0.1	other	0-1
# ::node	0.1.2.1.1	16	40-41
# ::node	0.1.2.2	2	23-24
# ::node	0.2	boy	38-39
# ::root	0	and
# ::edge	16	op1	overturn-01	0.1.2.1.1	0.1.2.1	
# ::edge	accident	location	road	0.1.2.1.0.0.0	0.1.2.1.0.0.0.0	
# ::edge	and	op1	crash-01	0	0.1	
# ::edge	and	op2	boy	0	0.2	
# ::edge	crash-01	ARG0	and	0.0	0	
# ::edge	crash-01	ARG0	soft	0.1	0.1.0	
# ::edge	crash-01	ARG1	vehicle	0.0	0.0.0	
# ::edge	crash-01	ARG1	wall	0.1	0.1.1	
# ::edge	crash-01	ARG2	man	0.1	0.1.2	
# ::edge	crash-01	purpose	tree	0.0	0.0.2	
# ::edge	include-01	ARG0	accident	0.1.2.1.0.0	0.1.2.1.0.0.0	
# ::edge	include-01	ARG1	man	0.1.2.1.0.0	0.1.2.1.0	
# ::edge	kill-01	ARG0	man	0.1.2.0	0.1.2	
# ::edge	kill-01	ARG1	top	0.1.2.0	0.1.2.0.0	
# ::edge	man	mod	other	0.1.2.1.0	0.1.2.1.0.1	
# ::edge	man	quant	2	0.1.2	0.1.2.2	
# ::edge	near	op1	crash-01	0.0.1	0.0	
# ::edge	overturn-01	ARG0	man	0.1.2.1	0.1.2.1.0	
# ::edge	overturn-01	ARG1	man	0.1.2.1	0.1.2	
# ::edge	road	mod	weekend	0.1.2.1.0.0.0.0	0.1.2.1.0.0.0.0.0	
# ::edge	stone	consist	wall	0.1.1.0	0.1.1	
# ::edge	tree	location	wind	0.0.2	0.0.2.0	
# ::edge	wind	location	near	0.0.2.0	0.0.2.0.0	
# ::edge	wind	mod	high	0.0.2.0	0.0.2.0.1	
(a / and 
      :ARG0-of (c / crash-01 
            :ARG1 (v / vehicle) 
            :op-of (n2 / near) 
            :purpose (t / tree 
                  :location (w / wind 
                        :location (n / near) 
                        :mod (h / high)))) 
      :op1 (c2 / crash-01 
            :ARG0 (s2 / soft) 
            :ARG1 (w2 / wall 
                  :consist-of (s / stone)) 
            :ARG2 (m / man 
                  :ARG0-of (k / kill-01 
                        :ARG1 (t2 / top)) 
                  :ARG1-of (o / overturn-01 
                        :ARG0 (m2 / man 
                              :ARG1-of (i / include-01 
                                    :ARG0 (a2 / accident 
                                          :location (r / road 
                                                :mod (w3 / weekend)))) 
                              :mod (o2 / other)) 
                        :op-of 16) 
                  :quant 2)) 
      :op2 (b / boy))

# ::snt having read the recent press reports about pets being poisoned she took the animal to the abivale veterinary surgery in wantage where vet alastair stuart dicovered the cause of death to have been a sharp blow to the head not caused by a road accident
# ::tok having read the recent press reports about pets being poisoned she took the animal to the abivale veterinary surgery in wantage where vet alastair stuart dicovered the cause of death to have been a sharp blow to the head not caused by a road accident
# ::alignments 44-45|0.0 43-44|0.0.0 40-41|0 38-39|0.1 35-36|0.1.1 34-35|0.1.1.0 29-30|0.1.2.1 27-28|0.1.2 18-19|0.1.0.0 17-18|0.1.0 13-14|0.1.2.0.0.2 10-11|0.1.2.0 9-10|0.1.2.0.0 7-8|0.1.2.0.0.0 5-6|0.1.2.0.0.1 4-5|0.1.2.0.0.1.0 3-4|0.1.2.0.0.1.2 1-2|0.1.2.0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:24.443
# ::node	0	cause-01	40-41
# ::node	0.0	accident	44-45
# ::node	0.0.0	road	43-44
# ::node	0.1	head-01	38-39
# ::node	0.1.0	veterinary	17-18
# ::node	0.1.0.0	surgery	18-19
# ::node	0.1.1	blow-06	35-36
# ::node	0.1.1.0	sharp	34-35
# ::node	0.1.2	cause-01	27-28
# ::node	0.1.2.0	she	10-11
# ::node	0.1.2.0.0	poison-02	9-10
# ::node	0.1.2.0.0.0	pet	7-8
# ::node	0.1.2.0.0.1	report-01	5-6
# ::node	0.1.2.0.0.1.0	press	4-5
# ::node	0.1.2.0.0.1.1	read-01	1-2
# ::node	0.1.2.0.0.1.2	recent	3-4
# ::node	0.1.2.0.0.2	animal	13-14
# ::node	0.1.2.1	die-01	29-30
# ::root	0	cause-01
# ::edge	accident	location	road	0.0	0.0.0	
# ::edge	blow-06	ARG1	head-01	0.1.1	0.1	
# ::edge	blow-06	mod	sharp	0.1.1	0.1.1.0	
# ::edge	cause-01	ARG0	accident	0	0.0	
# ::edge	cause-01	ARG0	she	0.1.2	0.1.2.0	
# ::edge	cause-01	ARG1	die-01	0.1.2	0.1.2.1	
# ::edge	cause-01	ARG1	head-01	0	0.1	
# ::edge	head-01	ARG1	veterinary	0.1	0.1.0	
# ::edge	head-01	ARG2	cause-01	0.1	0.1.2	
# ::edge	poison-02	ARG0	she	0.1.2.0.0	0.1.2.0	
# ::edge	poison-02	ARG1	pet	0.1.2.0.0	0.1.2.0.0.0	
# ::edge	poison-02	time	animal	0.1.2.0.0	0.1.2.0.0.2	
# ::edge	read-01	ARG1	report-01	0.1.2.0.0.1.1	0.1.2.0.0.1	
# ::edge	report-01	ARG0	press	0.1.2.0.0.1	0.1.2.0.0.1.0	
# ::edge	report-01	ARG1	poison-02	0.1.2.0.0.1	0.1.2.0.0	
# ::edge	report-01	time	recent	0.1.2.0.0.1	0.1.2.0.0.1.2	
# ::edge	surgery	mod	veterinary	0.1.0.0	0.1.0	
(c / cause-01 
      :ARG0 (a / accident 
            :location (r / road)) 
      :ARG1 (h / head-01 
            :ARG1 (v / veterinary 
                  :mod-of (s2 / surgery)) 
            :ARG1-of (b / blow-06 
                  :mod (s / sharp)) 
            :ARG2 (c2 / cause-01 
                  :ARG0 (s3 / she 
                        :ARG0-of (p / poison-02 
                              :ARG1 (p2 / pet) 
                              :ARG1-of (r2 / report-01 
                                    :ARG0 (p3 / press) 
                                    :ARG1-of (r4 / read-01) 
                                    :time (r3 / recent)) 
                              :time (a2 / animal))) 
                  :ARG1 (d / die-01))))

# ::snt but insofar as their lives were predominantly controlled by external forces that acted on them in often uncomprehended and mysterious ways leaving them with little illusion of the power of men to make their own life circumstances it was striking that the concept of chance or accident was almost entirely absent
# ::tok but insofar as their lives were predominantly controlled by external forces that acted on them in often uncomprehended and mysterious ways leaving them with little illusion of the power of men to make their own life circumstances it was striking that the concept of chance or accident was almost entirely absent
# ::alignments 50-51|0.0.0.0.0.1.0.1.1.0.0.0.0.1.0 49-50|0.0.0.0.0.1.0.1.1.0.0.0.0.1.0.1 48-49|0.0.0.0.0.1.0.1.1.0.0.0.0.1.3 46-47|0.0.0.0.0.1.0.1.1.0.0.0.0.1.2 45-46|0.0.0.0.0.1.0.1.1.0.0.0.0.1 44-45|0.0.0.0.0.1.0.1.1.0.0.0.0.1.1 42-43|0.0.0.0.0.1.0.1.1.0.0.0.0.1.0.0 39-40|0.0.0.0.0.1.0.1.1.0.0.0.0 37-38|0.0.0.0.0.1.0.1.1.0.0.0.0.0 36-37|0.0.0.0.0.1.0.1.1.0.0.0 35-36|0.0.0.0.0.1.0.1.1.0.0 30-31|0.0.0.0.0.1.0.1.1.0 28-29|0.0.0.0.0.1.0.1.1 25-26|0.0.0.0.0.1.0.1 24-25|0.0.0.0.0.1.0.1.0 21-22|0.0.0.0.0.1.0 20-21|0.0.0.0.0.1.0.0 19-20|0.0.0.0.0.1.0.0.0 18-19|0.0.0.0.0.1 16-17|0.0.0.0.0.0 12-13|0.0.0.0.0 10-11|0.0.0.0 9-10|0.0.0.0.1 7-8|0.0.0 6-7|0.1 4-5|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:25.079
# ::node	0	contrast-01	0-1
# ::node	0.0	life	4-5
# ::node	0.0.0	control-01	7-8
# ::node	0.0.0.0	force	10-11
# ::node	0.0.0.0.0	act-02	12-13
# ::node	0.0.0.0.0.0	often	16-17
# ::node	0.0.0.0.0.1	and	18-19
# ::node	0.0.0.0.0.1.0	leave-01	21-22
# ::node	0.0.0.0.0.1.0.0	way	20-21
# ::node	0.0.0.0.0.1.0.0.0	mystery	19-20
# ::node	0.0.0.0.0.1.0.1	illusion	25-26
# ::node	0.0.0.0.0.1.0.1.0	little	24-25
# ::node	0.0.0.0.0.1.0.1.1	power	28-29
# ::node	0.0.0.0.0.1.0.1.1.0	man	30-31
# ::node	0.0.0.0.0.1.0.1.1.0.0	life	35-36
# ::node	0.0.0.0.0.1.0.1.1.0.0.0	circumstance	36-37
# ::node	0.0.0.0.0.1.0.1.1.0.0.0.0	strike-01	39-40
# ::node	0.0.0.0.0.1.0.1.1.0.0.0.0.0	it	37-38
# ::node	0.0.0.0.0.1.0.1.1.0.0.0.0.1	or	45-46
# ::node	0.0.0.0.0.1.0.1.1.0.0.0.0.1.0	absent-01	50-51
# ::node	0.0.0.0.0.1.0.1.1.0.0.0.0.1.0.0	concept	42-43
# ::node	0.0.0.0.0.1.0.1.1.0.0.0.0.1.0.1	entire	49-50
# ::node	0.0.0.0.0.1.0.1.1.0.0.0.0.1.1	chance	44-45
# ::node	0.0.0.0.0.1.0.1.1.0.0.0.0.1.2	accident	46-47
# ::node	0.0.0.0.0.1.0.1.1.0.0.0.0.1.3	almost	48-49
# ::node	0.0.0.0.1	external	9-10
# ::node	0.1	predominant	6-7
# ::root	0	contrast-01
# ::edge	absent-01	ARG1	concept	0.0.0.0.0.1.0.1.1.0.0.0.0.1.0	0.0.0.0.0.1.0.1.1.0.0.0.0.1.0.0	
# ::edge	absent-01	degree	entire	0.0.0.0.0.1.0.1.1.0.0.0.0.1.0	0.0.0.0.0.1.0.1.1.0.0.0.0.1.0.1	
# ::edge	absent-01	manner	or	0.0.0.0.0.1.0.1.1.0.0.0.0.1.0	0.0.0.0.0.1.0.1.1.0.0.0.0.1	
# ::edge	act-02	ARG1	force	0.0.0.0.0	0.0.0.0	
# ::edge	act-02	duration	often	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	and	op1	act-02	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	circumstance	mod	life	0.0.0.0.0.1.0.1.1.0.0.0	0.0.0.0.0.1.0.1.1.0.0	
# ::edge	contrast-01	ARG0	life	0	0.0	
# ::edge	contrast-01	ARG1	predominant	0	0.1	
# ::edge	control-01	ARG0	force	0.0.0	0.0.0.0	
# ::edge	control-01	ARG1	life	0.0.0	0.0	
# ::edge	force	mod	external	0.0.0.0	0.0.0.0.1	
# ::edge	illusion	mod	little	0.0.0.0.0.1.0.1	0.0.0.0.0.1.0.1.0	
# ::edge	illusion	prep-on	power	0.0.0.0.0.1.0.1	0.0.0.0.0.1.0.1.1	
# ::edge	leave-01	ARG0	and	0.0.0.0.0.1.0	0.0.0.0.0.1	
# ::edge	leave-01	ARG1	way	0.0.0.0.0.1.0	0.0.0.0.0.1.0.0	
# ::edge	leave-01	ARG2	illusion	0.0.0.0.0.1.0	0.0.0.0.0.1.0.1	
# ::edge	life	poss	man	0.0.0.0.0.1.0.1.1.0.0	0.0.0.0.0.1.0.1.1.0	
# ::edge	or	op1	strike-01	0.0.0.0.0.1.0.1.1.0.0.0.0.1	0.0.0.0.0.1.0.1.1.0.0.0.0	
# ::edge	or	op2	chance	0.0.0.0.0.1.0.1.1.0.0.0.0.1	0.0.0.0.0.1.0.1.1.0.0.0.0.1.1	
# ::edge	or	op3	accident	0.0.0.0.0.1.0.1.1.0.0.0.0.1	0.0.0.0.0.1.0.1.1.0.0.0.0.1.2	
# ::edge	or	op4	almost	0.0.0.0.0.1.0.1.1.0.0.0.0.1	0.0.0.0.0.1.0.1.1.0.0.0.0.1.3	
# ::edge	power	location	man	0.0.0.0.0.1.0.1.1	0.0.0.0.0.1.0.1.1.0	
# ::edge	strike-01	ARG0	circumstance	0.0.0.0.0.1.0.1.1.0.0.0.0	0.0.0.0.0.1.0.1.1.0.0.0	
# ::edge	strike-01	ARG1	it	0.0.0.0.0.1.0.1.1.0.0.0.0	0.0.0.0.0.1.0.1.1.0.0.0.0.0	
# ::edge	way	mod	mystery	0.0.0.0.0.1.0.0	0.0.0.0.0.1.0.0.0	
(c5 / contrast-01 
      :ARG0 (l4 / life 
            :ARG1-of (c4 / control-01 
                  :ARG0 (f / force 
                        :ARG1-of (a5 / act-02 
                              :duration (o2 / often) 
                              :op-of (a4 / and 
                                    :ARG0-of (l3 / leave-01 
                                          :ARG1 (w / way 
                                                :mod (m2 / mystery)) 
                                          :ARG2 (i2 / illusion 
                                                :mod (l2 / little) 
                                                :prep-on (p / power 
                                                      :location (m / man 
                                                            :poss-of (l / life 
                                                                  :mod-of (c3 / circumstance 
                                                                        :ARG0-of (s / strike-01 
                                                                              :ARG1 (i / it) 
                                                                              :op-of (o / or 
                                                                                    :manner-of (a / absent-01 
                                                                                          :ARG1 (c2 / concept) 
                                                                                          :degree (e / entire)) 
                                                                                    :op1 (c / chance) 
                                                                                    :op2 (a3 / accident) 
                                                                                    :op3 (a2 / almost))))))))))) 
                        :mod (e2 / external)))) 
      :ARG1 (p2 / predominant))

# ::snt thus do the accidents of history have unexpected consequences even for the survival of badgers and butterfly orchids
# ::tok thus do the accidents of history have unexpected consequences even for the survival of badgers and butterfly orchids
# ::alignments 15-16|0 12-13|0.0 8-9|0.0.1.0.0 7-8|0.0.1.0.1+0.0.1.0 5-6|0.0.1 3-4|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:25.138
# ::node	0	and	15-16
# ::node	0.0	survive-01	12-13
# ::node	0.0.0	accident	3-4
# ::node	0.0.1	history	5-6
# ::node	0.0.1.0	expect-01	7-8
# ::node	0.0.1.0.0	consequence	8-9
# ::node	0.0.1.0.1	-	7-8
# ::root	0	and
# ::edge	and	op1	survive-01	0	0.0	
# ::edge	expect-01	ARG0	history	0.0.1.0	0.0.1	
# ::edge	expect-01	ARG1	consequence	0.0.1.0	0.0.1.0.0	
# ::edge	expect-01	polarity	-	0.0.1.0	0.0.1.0.1	
# ::edge	survive-01	ARG0	accident	0.0	0.0.0	
# ::edge	survive-01	ARG1	history	0.0	0.0.1	
(a / and 
      :op1 (s / survive-01 
            :ARG0 (a2 / accident) 
            :ARG1 (h / history 
                  :ARG0-of (e / expect-01 
                        :ARG1 (c / consequence) 
                        :polarity -))))

# ::snt as in previous years there were more accidents on the clockwise carriageway 296 than on the anticlockwise 248, the spokesman said the longest tailback was about 30 miles on the anticlockwise section between junctions 9 and 8 leatherhead and reigate and junction 17 rickmansworth in october after several accidents
# ::tok as in previous years there were more accidents on the clockwise carriageway 296 than on the anticlockwise 248 , the spokesman said the longest tailback was about 30 miles on the anticlockwise section between junctions 9 and 8 leatherhead and reigate and junction 17 rickmansworth in october after several accidents
# ::alignments 49-50|0.2.1.0 48-49|0.2.1.0.0 47-48|0.2.1 46-47|0.2.1.1.0+0.2.1.1 43-44|0.3 41-42|0.2 39-40|0.1 37-38|0.0 36-37|0.2.0.0 35-36|0.2.0.1.2.0.2 33-34|0.2.0 32-33|0.2.0.1.0 28-29|0.2.0.1.3+0.2.0.1 27-28|0.2.0.1.2 23-24|0.2.0.1.2.0.1.1 21-22|0 20-21|0.2.0.1.2.0.0+0.2.0.1.2.0 7-8|0.2.0.1.1 3-4|0.2.0.1.2.0.1.0+0.2.0.1.2.0.1.0.0 2-3|0.2.0.1.2.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:25.904
# ::node	0	say-01	21-22
# ::node	0.0	8	37-38
# ::node	0.1	and	39-40
# ::node	0.2	and	41-42
# ::node	0.2.0	between	33-34
# ::node	0.2.0.0	and	36-37
# ::node	0.2.0.1	distance-quantity	28-29
# ::node	0.2.0.1.0	section	32-33
# ::node	0.2.0.1.1	accident	7-8
# ::node	0.2.0.1.2	30	27-28
# ::node	0.2.0.1.2.0	have-org-role-91	20-21
# ::node	0.2.0.1.2.0.0	spokesman	20-21
# ::node	0.2.0.1.2.0.1	previous	2-3
# ::node	0.2.0.1.2.0.1.0	year	3-4
# ::node	0.2.0.1.2.0.1.0.0	temporal-quantity	3-4
# ::node	0.2.0.1.2.0.1.1	long	23-24
# ::node	0.2.0.1.2.0.2	9	35-36
# ::node	0.2.0.1.3	mile	28-29
# ::node	0.2.1	after	47-48
# ::node	0.2.1.0	accident	49-50
# ::node	0.2.1.0.0	several	48-49
# ::node	0.2.1.1	date-entity	46-47
# ::node	0.2.1.1.0	10	46-47
# ::node	0.3	17	43-44
# ::root	0	say-01
# ::edge	17	op1	say-01	0.3	0	
# ::edge	accident	quant	several	0.2.1.0	0.2.1.0.0	
# ::edge	after	op1	accident	0.2.1	0.2.1.0	
# ::edge	and	op1	between	0.2.0.0	0.2.0	
# ::edge	and	op1	say-01	0.2	0	
# ::edge	and	time	after	0.2	0.2.1	
# ::edge	between	op1	and	0.2.0	0.2	
# ::edge	date-entity	month	10	0.2.1.1	0.2.1.1.0	
# ::edge	date-entity	time	after	0.2.1.1	0.2.1	
# ::edge	distance-quantity	location	section	0.2.0.1	0.2.0.1.0	
# ::edge	distance-quantity	poss	accident	0.2.0.1	0.2.0.1.1	
# ::edge	distance-quantity	quant	30	0.2.0.1	0.2.0.1.2	
# ::edge	distance-quantity	time	between	0.2.0.1	0.2.0	
# ::edge	distance-quantity	unit	mile	0.2.0.1	0.2.0.1.3	
# ::edge	have-org-role-91	ARG1	30	0.2.0.1.2.0	0.2.0.1.2	
# ::edge	have-org-role-91	ARG2	spokesman	0.2.0.1.2.0	0.2.0.1.2.0.0	
# ::edge	have-org-role-91	time	9	0.2.0.1.2.0	0.2.0.1.2.0.2	
# ::edge	long	poss	previous	0.2.0.1.2.0.1.1	0.2.0.1.2.0.1	
# ::edge	previous	op1	have-org-role-91	0.2.0.1.2.0.1	0.2.0.1.2.0	
# ::edge	say-01	ARG0	8	0	0.0	
# ::edge	say-01	ARG1	and	0	0.1	
# ::edge	temporal-quantity	unit	year	0.2.0.1.2.0.1.0.0	0.2.0.1.2.0.1.0	
# ::edge	year	mod	previous	0.2.0.1.2.0.1.0	0.2.0.1.2.0.1	
(s3 / say-01 
      :ARG0 8 
      :ARG1 (a4 / and) 
      :op-of (a3 / and 
            :op-of (b / between 
                  :op-of (a5 / and) 
                  :time-of (d2 / distance-quantity 
                        :location (s2 / section) 
                        :poss (a6 / accident) 
                        :quant (3 / 30 
                              :ARG1-of (h / have-org-role-91 
                                    :ARG2 (s4 / spokesman) 
                                    :op-of (p / previous 
                                          :mod-of (y / year 
                                                :unit-of (t / temporal-quantity)) 
                                          :poss-of (l / long)) 
                                    :time 9)) 
                        :unit (m / mile))) 
            :time (a2 / after 
                  :op1 (a / accident 
                        :quant (s / several)) 
                  :time-of (d / date-entity 
                        :month 10))) 
      :op-of 17)

# ::snt at the oxford road junction there had been 11 injury accidents including four fatalities in the past ten years, all but one of the accidents involved a vehicle turning right out of oxford road, the proposed roundabout would reduce speed on the a423 reduce the number of accidents and make it easier for vehicles to emerge from oxford road
# ::tok at the oxford road junction there had been 11 injury accidents including four fatalities in the past ten years , all but one of the accidents involved a vehicle turning right out of oxford road , the proposed roundabout would reduce speed on the a423 reduce the number of accidents and make it easier for vehicles to emerge from oxford road
# ::alignments 60-61|0.1.0.1.0.2.1.1.0.0.0.0.1 57-58|0.1.0.1.0.2.1.1.0.0.0.0 55-56|0.1.0.1.0.2.1.1.0.0.0.0.0 53-54|0.1.0.1.0.2.1.1.0.0.0 52-53|0.1.0.1.0.2.1.1.0.0 50-51|0.1.0.1.0.2 49-50|0.1.0.1.0.2.1.1.0 47-48|0.1.0.1.0.2.1.1 45-46|0.1.0.1.0.2.1 41-42|0.1.0.1.0.2.1.0 40-41|0.1.0.1.0.2.0 37-38|0.3 34-35|0.1.0.1.0.1 29-30|0.1.0.1.0 28-29|0.1.0.1 26-27|0.1.0 25-26|0.1.0.0 21-22|0 20-21|0.1 18-19|0.3.0.0.0+0.3.0.0 16-17|0.3.0 13-14|0.0 12-13|0.0.0 10-11|0.2.1 9-10|0.2 8-9|0.1.0.1.0.0 3-4|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:26.772
# ::node	0	contrast-01	21-22
# ::node	0.0	fatality	13-14
# ::node	0.0.0	4	12-13
# ::node	0.1	all	20-21
# ::node	0.1.0	involve-01	26-27
# ::node	0.1.0.0	accident	25-26
# ::node	0.1.0.1	vehicle	28-29
# ::node	0.1.0.1.0	turn-02	29-30
# ::node	0.1.0.1.0.0	11	8-9
# ::node	0.1.0.1.0.1	road	34-35
# ::node	0.1.0.1.0.2	and	50-51
# ::node	0.1.0.1.0.2.0	reduce-01	40-41
# ::node	0.1.0.1.0.2.1	reduce-01	45-46
# ::node	0.1.0.1.0.2.1.0	speed	41-42
# ::node	0.1.0.1.0.2.1.1	number	47-48
# ::node	0.1.0.1.0.2.1.1.0	accident	49-50
# ::node	0.1.0.1.0.2.1.1.0.0	it	52-53
# ::node	0.1.0.1.0.2.1.1.0.0.0	easy	53-54
# ::node	0.1.0.1.0.2.1.1.0.0.0.0	emerge-01	57-58
# ::node	0.1.0.1.0.2.1.1.0.0.0.0.0	vehicle	55-56
# ::node	0.1.0.1.0.2.1.1.0.0.0.0.1	road	60-61
# ::node	0.2	injure-01	9-10
# ::node	0.2.0	road	3-4
# ::node	0.2.1	accident	10-11
# ::node	0.3	propose-01	37-38
# ::node	0.3.0	past	16-17
# ::node	0.3.0.0	temporal-quantity	18-19
# ::node	0.3.0.0.0	year	18-19
# ::root	0	contrast-01
# ::edge	accident	mod	injure-01	0.2.1	0.2	
# ::edge	accident	quant	number	0.1.0.1.0.2.1.1.0	0.1.0.1.0.2.1.1	
# ::edge	and	op1	turn-02	0.1.0.1.0.2	0.1.0.1.0	
# ::edge	and	op2	reduce-01	0.1.0.1.0.2	0.1.0.1.0.2.1	
# ::edge	contrast-01	ARG0	fatality	0	0.0	
# ::edge	contrast-01	ARG1	all	0	0.1	
# ::edge	contrast-01	ARG2	propose-01	0	0.3	
# ::edge	easy	domain	it	0.1.0.1.0.2.1.1.0.0.0	0.1.0.1.0.2.1.1.0.0	
# ::edge	emerge-01	ARG0	vehicle	0.1.0.1.0.2.1.1.0.0.0.0	0.1.0.1.0.2.1.1.0.0.0.0.0	
# ::edge	emerge-01	ARG1	road	0.1.0.1.0.2.1.1.0.0.0.0	0.1.0.1.0.2.1.1.0.0.0.0.1	
# ::edge	emerge-01	manner	easy	0.1.0.1.0.2.1.1.0.0.0.0	0.1.0.1.0.2.1.1.0.0.0	
# ::edge	fatality	quant	4	0.0	0.0.0	
# ::edge	injure-01	ARG0	road	0.2	0.2.0	
# ::edge	injure-01	ARG1	contrast-01	0.2	0	
# ::edge	involve-01	ARG0	accident	0.1.0	0.1.0.0	
# ::edge	involve-01	ARG1	vehicle	0.1.0	0.1.0.1	
# ::edge	involve-01	mod	all	0.1.0	0.1	
# ::edge	it	part	accident	0.1.0.1.0.2.1.1.0.0	0.1.0.1.0.2.1.1.0	
# ::edge	past	op1	temporal-quantity	0.3.0	0.3.0.0	
# ::edge	propose-01	ARG1	past	0.3	0.3.0	
# ::edge	reduce-01	ARG0	speed	0.1.0.1.0.2.1	0.1.0.1.0.2.1.0	
# ::edge	reduce-01	ARG1	and	0.1.0.1.0.2.0	0.1.0.1.0.2	
# ::edge	reduce-01	ARG1	number	0.1.0.1.0.2.1	0.1.0.1.0.2.1.1	
# ::edge	temporal-quantity	unit	year	0.3.0.0	0.3.0.0.0	
# ::edge	turn-02	ARG0	11	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	turn-02	ARG1	vehicle	0.1.0.1.0	0.1.0.1	
# ::edge	turn-02	ARG2	road	0.1.0.1.0	0.1.0.1.0.1	
(c / contrast-01 
      :ARG0 (f / fatality 
            :quant 4) 
      :ARG1 (a4 / all 
            :mod-of (i2 / involve-01 
                  :ARG0 (a3 / accident) 
                  :ARG1 (v2 / vehicle 
                        :ARG1-of (t / turn-02 
                              :ARG0 11 
                              :ARG2 (r4 / road) 
                              :op-of (a / and 
                                    :ARG1-of (r3 / reduce-01) 
                                    :op1 (r2 / reduce-01 
                                          :ARG0 (s / speed) 
                                          :ARG1 (n / number 
                                                :quant-of (a2 / accident 
                                                      :part-of (i / it 
                                                            :domain-of (e2 / easy 
                                                                  :manner-of (e / emerge-01 
                                                                        :ARG0 (v / vehicle) 
                                                                        :ARG1 (r / road)))))))))))) 
      :ARG1-of (i3 / injure-01 
            :ARG0 (r5 / road) 
            :mod-of (a5 / accident)) 
      :ARG2 (p / propose-01 
            :ARG1 (p2 / past 
                  :op1 (t2 / temporal-quantity 
                        :unit (y / year)))))

# ::snt mass accidents have become a familiar incident of the modern way of life a byproduct of advancing technology in the production distribution and use of toxic agents dangerous pharmaceuticals fast modern transport and other hazardous activities
# ::tok mass accidents have become a familiar incident of the modern way of life a byproduct of advancing technology in the production distribution and use of toxic agents dangerous pharmaceuticals fast modern transport and other hazardous activities
# ::alignments 35-36|0.1 33-34|0.1.0 32-33|0 31-32|0.0 30-31|0.0.0 29-30|0.0.0.0 28-29|0.0.2 27-28|0.0.2.0 26-27|0.0.2.1.3.0 25-26|0.0.2.1.3.0.0 23-24|0.0.2.1.3 22-23|0.0.2.1 21-22|0.0.2.1.2 20-21|0.0.2.1.2.0 17-18|0.0.2.1.1 16-17|0.0.2.1.1.0 14-15|0.0.2.1.1.1 12-13|0.0.2.1.0.1.1.1 10-11|0.0.2.1.0.1.1 9-10|0.0.2.1.0.1.1.0 6-7|0.0.2.1.0.1 5-6|0.0.2.1.0.1.0 3-4|0.0.2.1.0 1-2|0.0.2.1.0.0 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:27.162
# ::node	0	and	32-33
# ::node	0.0	transport-01	31-32
# ::node	0.0.0	modern	30-31
# ::node	0.0.0.0	fast	29-30
# ::node	0.0.1	mass	0-1
# ::node	0.0.2	pharmaceutical	28-29
# ::node	0.0.2.0	dangerous	27-28
# ::node	0.0.2.1	and	22-23
# ::node	0.0.2.1.0	become-01	3-4
# ::node	0.0.2.1.0.0	accident	1-2
# ::node	0.0.2.1.0.1	incident	6-7
# ::node	0.0.2.1.0.1.0	familiarize-01	5-6
# ::node	0.0.2.1.0.1.1	way	10-11
# ::node	0.0.2.1.0.1.1.0	modern	9-10
# ::node	0.0.2.1.0.1.1.1	life	12-13
# ::node	0.0.2.1.1	technology	17-18
# ::node	0.0.2.1.1.0	advance-01	16-17
# ::node	0.0.2.1.1.1	byproduct	14-15
# ::node	0.0.2.1.2	distribute-01	21-22
# ::node	0.0.2.1.2.0	produce-01	20-21
# ::node	0.0.2.1.3	use-01	23-24
# ::node	0.0.2.1.3.0	agent	26-27
# ::node	0.0.2.1.3.0.0	toxic	25-26
# ::node	0.1	activity	35-36
# ::node	0.1.0	other	33-34
# ::root	0	and
# ::edge	activity	mod	other	0.1	0.1.0	
# ::edge	advance-01	ARG1	technology	0.0.2.1.1.0	0.0.2.1.1	
# ::edge	agent	mod	toxic	0.0.2.1.3.0	0.0.2.1.3.0.0	
# ::edge	and	op1	become-01	0.0.2.1	0.0.2.1.0	
# ::edge	and	op1	transport-01	0	0.0	
# ::edge	and	op2	activity	0	0.1	
# ::edge	and	op2	technology	0.0.2.1	0.0.2.1.1	
# ::edge	and	op3	distribute-01	0.0.2.1	0.0.2.1.2	
# ::edge	and	op4	use-01	0.0.2.1	0.0.2.1.3	
# ::edge	and	op5	pharmaceutical	0.0.2.1	0.0.2	
# ::edge	become-01	ARG1	accident	0.0.2.1.0	0.0.2.1.0.0	
# ::edge	become-01	ARG2	incident	0.0.2.1.0	0.0.2.1.0.1	
# ::edge	byproduct	mod	technology	0.0.2.1.1.1	0.0.2.1.1	
# ::edge	distribute-01	ARG2	produce-01	0.0.2.1.2	0.0.2.1.2.0	
# ::edge	familiarize-01	ARG2	incident	0.0.2.1.0.1.0	0.0.2.1.0.1	
# ::edge	incident	poss	way	0.0.2.1.0.1	0.0.2.1.0.1.1	
# ::edge	modern	degree	fast	0.0.0	0.0.0.0	
# ::edge	pharmaceutical	mod	dangerous	0.0.2	0.0.2.0	
# ::edge	pharmaceutical	op1	transport-01	0.0.2	0.0	
# ::edge	transport-01	mod	mass	0.0	0.0.1	
# ::edge	transport-01	mod	modern	0.0	0.0.0	
# ::edge	use-01	ARG1	agent	0.0.2.1.3	0.0.2.1.3.0	
# ::edge	way	mod	life	0.0.2.1.0.1.1	0.0.2.1.0.1.1.1	
# ::edge	way	mod	modern	0.0.2.1.0.1.1	0.0.2.1.0.1.1.0	
(a2 / and 
      :op1 (t / transport-01 
            :mod (m / modern 
                  :degree (f / fast)) 
            :mod (m3 / mass) 
            :op-of (p / pharmaceutical 
                  :mod (d / dangerous) 
                  :op-of (a4 / and 
                        :op1 (b2 / become-01 
                              :ARG1 (a6 / accident) 
                              :ARG2 (i / incident 
                                    :ARG2-of (f2 / familiarize-01) 
                                    :poss (w / way 
                                          :mod (m2 / modern) 
                                          :mod (l / life)))) 
                        :op2 (t3 / technology 
                              :ARG1-of (a5 / advance-01) 
                              :mod-of (b / byproduct)) 
                        :op3 (d2 / distribute-01 
                              :ARG2 (p2 / produce-01)) 
                        :op4 (u / use-01 
                              :ARG1 (a3 / agent 
                                    :mod (t2 / toxic)))))) 
      :op2 (a / activity 
            :mod (o / other)))

# ::snt does this sufficiently identify the plaintiff as one injured rather than merely threatened by the defendant  the traditional requirement that the plaintiff prove causality against each defendant on a balance of probabilities reflects our notions of procedural fairness in the individualized confrontation typical of random accidents
# ::tok does this sufficiently identify the plaintiff as one injured rather than merely threatened by the defendant the traditional requirement that the plaintiff prove causality against each defendant on a balance of probabilities reflects our notions of procedural fairness in the individualized confrontation typical of random accidents
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:27.164
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the accident happened when a cockpit window blew out of the jet as it passed over didcot on its way from birmingham to malaga on june 10
# ::tok the accident happened when a cockpit window blew out of the jet as it passed over didcot on its way from birmingham to malaga on june 10
# ::alignments 26-27|0.0.2 25-26|0.0.3.0+0.0.3 21-22|0.1.0.0+0.1.0+0.1 19-20|0 13-14|0.0.4.0 11-12|0.0.4 6-7|0.0.0 2-3|0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:27.296
# ::node	0	way	19-20
# ::node	0.0	happen-01	2-3
# ::node	0.0.0	window	6-7
# ::node	0.0.1	accident	1-2
# ::node	0.0.2	10	26-27
# ::node	0.0.3	date-entity	25-26
# ::node	0.0.3.0	6	25-26
# ::node	0.0.4	jet	11-12
# ::node	0.0.4.0	it	13-14
# ::node	0.1	city	21-22
# ::node	0.1.0	name	21-22
# ::node	0.1.0.0	"Birmingham"	21-22
# ::root	0	way
# ::edge	10	op1	happen-01	0.0.2	0.0	
# ::edge	city	name	name	0.1	0.1.0	
# ::edge	date-entity	month	6	0.0.3	0.0.3.0	
# ::edge	happen-01	ARG0	window	0.0	0.0.0	
# ::edge	happen-01	ARG1	accident	0.0	0.0.1	
# ::edge	happen-01	time	date-entity	0.0	0.0.3	
# ::edge	happen-01	time	jet	0.0	0.0.4	
# ::edge	jet	poss	it	0.0.4	0.0.4.0	
# ::edge	name	op1	"Birmingham"	0.1.0	0.1.0.0	
# ::edge	way	op1	happen-01	0	0.0	
# ::edge	way	source	city	0	0.1	
(w / way 
      :op1 (h / happen-01 
            :ARG0 (w2 / window) 
            :ARG1 (a / accident) 
            :op-of 10 
            :time (d / date-entity 
                  :month 6) 
            :time (j / jet 
                  :poss (i / it))) 
      :source (c / city 
            :name (n / name 
                  :op1 "Birmingham")))

# ::snt the inquest heard that the driver ran off after the accident in which a motorcyclist and a pedestrian were also injured
# ::tok the inquest heard that the driver ran off after the accident in which a motorcyclist and a pedestrian were also injured
# ::alignments 20-21|0.0 19-20|0.0.2 17-18|0.1 15-16|0 10-11|0.0.0 8-9|0.0.0.0 7-8|0.0.0.0.0 5-6|0.0.1.1+0.0.1 2-3|0.0.1.0 1-2|0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:27.443
# ::node	0	and	15-16
# ::node	0.0	injure-01	20-21
# ::node	0.0.0	accident	10-11
# ::node	0.0.0.0	after	8-9
# ::node	0.0.0.0.0	off	7-8
# ::node	0.0.1	person	5-6
# ::node	0.0.1.0	hear-01	2-3
# ::node	0.0.1.0.0	inquest	1-2
# ::node	0.0.1.1	drive-01	5-6
# ::node	0.0.2	also	19-20
# ::node	0.1	pedestrian	17-18
# ::root	0	and
# ::edge	after	mod	off	0.0.0.0	0.0.0.0.0	
# ::edge	after	op1	accident	0.0.0.0	0.0.0	
# ::edge	and	op1	pedestrian	0	0.1	
# ::edge	drive-01	ARG0	person	0.0.1.1	0.0.1	
# ::edge	hear-01	ARG0	person	0.0.1.0	0.0.1	
# ::edge	hear-01	ARG1	inquest	0.0.1.0	0.0.1.0.0	
# ::edge	injure-01	ARG0	accident	0.0	0.0.0	
# ::edge	injure-01	ARG1	and	0.0	0	
# ::edge	injure-01	ARG2	person	0.0	0.0.1	
# ::edge	injure-01	mod	also	0.0	0.0.2	
(a2 / and 
      :ARG1-of (i / injure-01 
            :ARG0 (a3 / accident 
                  :op-of (a4 / after 
                        :mod (o / off))) 
            :ARG2 (p2 / person 
                  :ARG0-of (h / hear-01 
                        :ARG1 (i2 / inquest)) 
                  :ARG0-of (d / drive-01)) 
            :mod (a / also)) 
      :op1 (p / pedestrian))

# ::snt examples are statutes imposing liability in limited amounts on parents for wilful destruction of property by minor childrenfo id27 or an occasional reversal of a court decision that has touched a sensitive nerve in constituents like the decision imposing liability on a social host for supplying excessive alcohol to a guest who later causes a driving accident on the way home
# ::tok examples are statutes imposing liability in limited amounts on parents for wilful destruction of property by minor childrenfo id27 or an occasional reversal of a court decision that has touched a sensitive nerve in constituents like the decision imposing liability on a social host for supplying excessive alcohol to a guest who later causes a driving accident on the way home
# ::alignments 60-61|0.1.1 59-60|0.0.0.0.0.0 56-57|0.1 55-56|0.1.0 53-54|0 52-53|0.2 50-51|0.0 47-48|0.0.0.1 46-47|0.0.0.1.0 45-46|0.0.0 43-44|0.0.0.0.0.2 42-43|0.0.0.0.0.2.0 39-40|0.0.0.0 38-39|0.0.0.0.0 37-38|0.0.0.0.0.1 34-35|0.0.0.0.0.1.0 32-33|0.0.0.0.0.1.0.0.0 31-32|0.0.0.0.0.1.0.0.0.0 29-30|0.0.0.0.0.1.0.0 26-27|0.0.0.0.0.1.0.0.0.1.2.0 25-26|0.0.0.0.0.1.0.0.0.1.2.0.0 22-23|0.0.0.0.0.1.0.0.0.1.2 21-22|0.0.0.0.0.1.0.0.0.1.2.2 19-20|0.0.0.0.0.1.0.0.0.1 16-17|0.0.0.0.0.1.0.0.0.1.2.1 14-15|0.0.0.0.0.1.0.0.0.1.1.0 12-13|0.0.0.0.0.1.0.0.0.1.1 9-10|0.0.0.0.0.1.0.0.0.1.0.1.1+0.0.0.0.0.1.0.0.0.1.0.1.1.0 7-8|0.0.0.0.0.1.0.0.0.1.0.1 6-7|0.0.0.0.0.1.0.0.0.1.0.1.0 4-5|0.0.0.0.0.1.0.0.0.1.0.0 3-4|0.0.0.0.0.1.0.0.0.1.0 0-1|0.0.0.0.0.1.0.0.0.1.0.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:28.767
# ::node	0	cause-01	53-54
# ::node	0.0	guest	50-51
# ::node	0.0.0	supply-01	45-46
# ::node	0.0.0.0	liability	39-40
# ::node	0.0.0.0.0	impose-01	38-39
# ::node	0.0.0.0.0.0	way	59-60
# ::node	0.0.0.0.0.1	decide-01	37-38
# ::node	0.0.0.0.0.1.0	constituent	34-35
# ::node	0.0.0.0.0.1.0.0	touch-01	29-30
# ::node	0.0.0.0.0.1.0.0.0	nerve	32-33
# ::node	0.0.0.0.0.1.0.0.0.0	sensitive-41	31-32
# ::node	0.0.0.0.0.1.0.0.0.1	or	19-20
# ::node	0.0.0.0.0.1.0.0.0.1.0	impose-01	3-4
# ::node	0.0.0.0.0.1.0.0.0.1.0.0	liability	4-5
# ::node	0.0.0.0.0.1.0.0.0.1.0.1	amount	7-8
# ::node	0.0.0.0.0.1.0.0.0.1.0.1.0	limit-01	6-7
# ::node	0.0.0.0.0.1.0.0.0.1.0.1.1	parent	9-10
# ::node	0.0.0.0.0.1.0.0.0.1.0.1.1.0	have-rel-role-91	9-10
# ::node	0.0.0.0.0.1.0.0.0.1.0.1.1.0.0	example	0-1
# ::node	0.0.0.0.0.1.0.0.0.1.1	destroy-01	12-13
# ::node	0.0.0.0.0.1.0.0.0.1.1.0	property	14-15
# ::node	0.0.0.0.0.1.0.0.0.1.2	reverse-01	22-23
# ::node	0.0.0.0.0.1.0.0.0.1.2.0	decide-01	26-27
# ::node	0.0.0.0.0.1.0.0.0.1.2.0.0	court	25-26
# ::node	0.0.0.0.0.1.0.0.0.1.2.1	minor	16-17
# ::node	0.0.0.0.0.1.0.0.0.1.2.2	occasional	21-22
# ::node	0.0.0.0.0.2	host-01	43-44
# ::node	0.0.0.0.0.2.0	society	42-43
# ::node	0.0.0.1	alcohol	47-48
# ::node	0.0.0.1.0	excessive	46-47
# ::node	0.1	accident	56-57
# ::node	0.1.0	drive-01	55-56
# ::node	0.1.1	home	60-61
# ::node	0.2	late	52-53
# ::root	0	cause-01
# ::edge	accident	location	home	0.1	0.1.1	
# ::edge	alcohol	mod	excessive	0.0.0.1	0.0.0.1.0	
# ::edge	cause-01	ARG0	guest	0	0.0	
# ::edge	cause-01	ARG1	accident	0	0.1	
# ::edge	cause-01	time	late	0	0.2	
# ::edge	constituent	topic	decide-01	0.0.0.0.0.1.0	0.0.0.0.0.1	
# ::edge	decide-01	ARG0	court	0.0.0.0.0.1.0.0.0.1.2.0	0.0.0.0.0.1.0.0.0.1.2.0.0	
# ::edge	decide-01	ARG1	impose-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	destroy-01	ARG0	or	0.0.0.0.0.1.0.0.0.1.1	0.0.0.0.0.1.0.0.0.1	
# ::edge	destroy-01	ARG1	property	0.0.0.0.0.1.0.0.0.1.1	0.0.0.0.0.1.0.0.0.1.1.0	
# ::edge	drive-01	ARG1	accident	0.1.0	0.1	
# ::edge	have-rel-role-91	ARG0	example	0.0.0.0.0.1.0.0.0.1.0.1.1.0	0.0.0.0.0.1.0.0.0.1.0.1.1.0.0	
# ::edge	have-rel-role-91	ARG2	parent	0.0.0.0.0.1.0.0.0.1.0.1.1.0	0.0.0.0.0.1.0.0.0.1.0.1.1	
# ::edge	host-01	ARG1	society	0.0.0.0.0.2	0.0.0.0.0.2.0	
# ::edge	impose-01	ARG0	or	0.0.0.0.0.1.0.0.0.1.0	0.0.0.0.0.1.0.0.0.1	
# ::edge	impose-01	ARG0	way	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	impose-01	ARG1	liability	0.0.0.0.0	0.0.0.0	
# ::edge	impose-01	ARG1	liability	0.0.0.0.0.1.0.0.0.1.0	0.0.0.0.0.1.0.0.0.1.0.0	
# ::edge	impose-01	ARG2	amount	0.0.0.0.0.1.0.0.0.1.0	0.0.0.0.0.1.0.0.0.1.0.1	
# ::edge	impose-01	ARG2	host-01	0.0.0.0.0	0.0.0.0.0.2	
# ::edge	limit-01	ARG1	amount	0.0.0.0.0.1.0.0.0.1.0.1.0	0.0.0.0.0.1.0.0.0.1.0.1	
# ::edge	nerve	poss	or	0.0.0.0.0.1.0.0.0	0.0.0.0.0.1.0.0.0.1	
# ::edge	or	op1	reverse-01	0.0.0.0.0.1.0.0.0.1	0.0.0.0.0.1.0.0.0.1.2	
# ::edge	parent	quant	amount	0.0.0.0.0.1.0.0.0.1.0.1.1	0.0.0.0.0.1.0.0.0.1.0.1	
# ::edge	reverse-01	ARG0	decide-01	0.0.0.0.0.1.0.0.0.1.2	0.0.0.0.0.1.0.0.0.1.2.0	
# ::edge	reverse-01	ARG1	minor	0.0.0.0.0.1.0.0.0.1.2	0.0.0.0.0.1.0.0.0.1.2.1	
# ::edge	reverse-01	frequency	occasional	0.0.0.0.0.1.0.0.0.1.2	0.0.0.0.0.1.0.0.0.1.2.2	
# ::edge	sensitive-41	ARG1	nerve	0.0.0.0.0.1.0.0.0.0	0.0.0.0.0.1.0.0.0	
# ::edge	supply-01	ARG0	liability	0.0.0	0.0.0.0	
# ::edge	supply-01	ARG1	alcohol	0.0.0	0.0.0.1	
# ::edge	supply-01	ARG2	guest	0.0.0	0.0	
# ::edge	touch-01	ARG1	nerve	0.0.0.0.0.1.0.0	0.0.0.0.0.1.0.0.0	
# ::edge	touch-01	location	constituent	0.0.0.0.0.1.0.0	0.0.0.0.0.1.0	
(c / cause-01 
      :ARG0 (g / guest 
            :ARG2-of (s / supply-01 
                  :ARG0 (l2 / liability 
                        :ARG1-of (i / impose-01 
                              :ARG0 (w / way) 
                              :ARG1-of (d2 / decide-01 
                                    :topic-of (c2 / constituent 
                                          :location-of (t / touch-01 
                                                :ARG1 (n / nerve 
                                                      :ARG1-of (s3 / sensitive-41) 
                                                      :poss (o2 / or 
                                                            :ARG0-of (i2 / impose-01 
                                                                  :ARG1 (l4 / liability) 
                                                                  :ARG2 (a3 / amount 
                                                                        :ARG1-of (l3 / limit-01) 
                                                                        :quant-of (p2 / parent 
                                                                              :ARG2-of (h3 / have-rel-role-91 
                                                                                    :ARG0 (e2 / example))))) 
                                                            :ARG0-of (d4 / destroy-01 
                                                                  :ARG1 (p / property)) 
                                                            :op1 (r / reverse-01 
                                                                  :ARG0 (d3 / decide-01 
                                                                        :ARG0 (c3 / court)) 
                                                                  :ARG1 (m / minor) 
                                                                  :frequency (o / occasional))))))) 
                              :ARG2 (h2 / host-01 
                                    :ARG1 (s2 / society)))) 
                  :ARG1 (a2 / alcohol 
                        :mod (e / excessive)))) 
      :ARG1 (a / accident 
            :ARG1-of (d / drive-01) 
            :location (h / home)) 
      :time (l / late))

# ::snt the general record on accidents at work deteriorated between 1981 and 1986 the improvement since then is not enough
# ::tok the general record on accidents at work deteriorated between 1981 and 1986 the improvement since then is not enough
# ::alignments 18-19|0.0.0.2 15-16|0.0.0.1.0.0 14-15|0.0.0.1.0 13-14|0.0.0.1 11-12|0.0.2.0+0.0.2 10-11|0 9-10|0.0.1.0+0.0.1 8-9|0.0 7-8|0.0.0 4-5|0.0.0.0.1 2-3|0.0.0.0 1-2|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:28.898
# ::node	0	and	10-11
# ::node	0.0	between	8-9
# ::node	0.0.0	deteriorate-01	7-8
# ::node	0.0.0.0	record	2-3
# ::node	0.0.0.0.0	general	1-2
# ::node	0.0.0.0.1	accident	4-5
# ::node	0.0.0.1	improve-01	13-14
# ::node	0.0.0.1.0	since	14-15
# ::node	0.0.0.1.0.0	then	15-16
# ::node	0.0.0.2	enough	18-19
# ::node	0.0.1	date-entity	9-10
# ::node	0.0.1.0	1981	9-10
# ::node	0.0.2	date-entity	11-12
# ::node	0.0.2.0	1986	11-12
# ::root	0	and
(a / and 
      :op-of (b / between 
            :ARG2-of (d3 / deteriorate-01 
                  :ARG0 (r / record 
                        :mod (g / general) 
                        :topic (a2 / accident)) 
                  :ARG1 (i / improve-01 
                        :ARG1 (s / since 
                              :op1 (t / then))) 
                  :domain-of (e / enough)) 
            :op1 (d2 / date-entity 
                  :year 1981) 
            :op2 (d / date-entity 
                  :year 1986)))

# ::snt the numast submission also cites a series of several recent accidents and near misses around the coastline the british coastline all involving foreignflagged ships
# ::tok the numast submission also cites a series of several recent accidents and near misses around the coastline the british coastline all involving foreignflagged ships
# ::alignments 23-24|0.2.1.0.1 21-22|0.2.1.0 20-21|0.2.0.0 19-20|0.2.1.0.0 16-17|0.2.1 14-15|0.2.2 13-14|0.2 12-13|0.2.3 11-12|0 10-11|0.0.0 9-10|0.0.0.1 8-9|0.0.0.0 6-7|0.0 3-4|0.1 2-3|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:29.526
# ::node	0	and	11-12
# ::node	0.0	series	6-7
# ::node	0.0.0	accident	10-11
# ::node	0.0.0.0	several	8-9
# ::node	0.0.0.1	recent	9-10
# ::node	0.1	also	3-4
# ::node	0.2	miss-02	13-14
# ::node	0.2.0	submit-01	2-3
# ::node	0.2.0.0	all	20-21
# ::node	0.2.1	coastline	16-17
# ::node	0.2.1.0	involve-01	21-22
# ::node	0.2.1.0.0	coastline	19-20
# ::node	0.2.1.0.1	ship	23-24
# ::node	0.2.2	around	14-15
# ::node	0.2.3	near	12-13
# ::root	0	and
# ::edge	accident	quant	series	0.0.0	0.0	
# ::edge	accident	quant	several	0.0.0	0.0.0.0	
# ::edge	accident	time	recent	0.0.0	0.0.0.1	
# ::edge	and	consist	series	0	0.0	
# ::edge	and	mod	also	0	0.1	
# ::edge	and	op1	miss-02	0	0.2	
# ::edge	involve-01	ARG0	coastline	0.2.1.0	0.2.1.0.0	
# ::edge	involve-01	ARG1	ship	0.2.1.0	0.2.1.0.1	
# ::edge	involve-01	ARG2	coastline	0.2.1.0	0.2.1	
# ::edge	miss-02	ARG0	submit-01	0.2	0.2.0	
# ::edge	miss-02	ARG1	coastline	0.2	0.2.1	
# ::edge	miss-02	ARG2	around	0.2	0.2.2	
# ::edge	near	op1	miss-02	0.2.3	0.2	
# ::edge	submit-01	ARG1	all	0.2.0	0.2.0.0	
(a3 / and 
      :consist (s3 / series 
            :quant-of (a4 / accident 
                  :quant (s2 / several) 
                  :time (r / recent))) 
      :mod (a5 / also) 
      :op1 (m / miss-02 
            :ARG0 (s4 / submit-01 
                  :ARG1 (a / all)) 
            :ARG1 (c2 / coastline 
                  :ARG2-of (i / involve-01 
                        :ARG0 (c / coastline) 
                        :ARG1 (s / ship))) 
            :ARG2 (a2 / around) 
            :op-of (n / near)))

# ::snt the difficulty is aggravated where the particular feature did not cause the accident but only aggravated its consequences as when a motorcar should arguably have been crashproof
# ::tok the difficulty is aggravated where the particular feature did not cause the accident but only aggravated its consequences as when a motorcar should arguably have been crashproof
# ::alignments 23-24|0.1.0 22-23|0.1 17-18|0.2.0 15-16|0.2 14-15|0.2.1 13-14|0 12-13|0.0.1.1 10-11|0.0.1 7-8|0.0.1.0 6-7|0.0.1.0.0 3-4|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:29.690
# ::node	0	contrast-01	13-14
# ::node	0.0	aggravate-01	3-4
# ::node	0.0.0	difficult	1-2
# ::node	0.0.1	cause-01	10-11
# ::node	0.0.1.0	feature-01	7-8
# ::node	0.0.1.0.0	particular	6-7
# ::node	0.0.1.1	accident	12-13
# ::node	0.1	recommend-01	22-23
# ::node	0.1.0	argue-01	23-24
# ::node	0.2	aggravate-01	15-16
# ::node	0.2.0	consequence	17-18
# ::node	0.2.1	only	14-15
# ::root	0	contrast-01
# ::edge	aggravate-01	ARG1	consequence	0.2	0.2.0	
# ::edge	aggravate-01	ARG1	difficult	0.0	0.0.0	
# ::edge	aggravate-01	condition	cause-01	0.0	0.0.1	
# ::edge	aggravate-01	mod	only	0.2	0.2.1	
# ::edge	argue-01	ARG1	recommend-01	0.1.0	0.1	
# ::edge	cause-01	ARG0	feature-01	0.0.1	0.0.1.0	
# ::edge	cause-01	ARG1	accident	0.0.1	0.0.1.1	
# ::edge	contrast-01	ARG1	aggravate-01	0	0.0	
# ::edge	contrast-01	ARG2	aggravate-01	0	0.2	
# ::edge	feature-01	mod	particular	0.0.1.0	0.0.1.0.0	
# ::edge	recommend-01	ARG1	contrast-01	0.1	0	
(c2 / contrast-01 
      :ARG1 (a4 / aggravate-01 
            :ARG1 (d / difficult) 
            :condition (c3 / cause-01 
                  :ARG0 (f / feature-01 
                        :mod (p / particular)) 
                  :ARG1 (a3 / accident))) 
      :ARG1-of (r / recommend-01 
            :ARG1-of (a / argue-01)) 
      :ARG2 (a2 / aggravate-01 
            :ARG1 (c / consequence) 
            :mod (o / only)))

# ::snt in buckinghamshire on the a four one three at dunton turn between winslow and whitchurch the tailbacks there caused by an earlier accident involving a car on fire
# ::tok in buckinghamshire on the a four one three at dunton turn between winslow and whitchurch the tailbacks there caused by an earlier accident involving a car on fire
# ::alignments 25-26|0.1.0.1 23-24|0.1.0 22-23|0.1 21-22|0.1.1 18-19|0 13-14|0.0 11-12|0.0.0 7-8|0.1.0.0 5-6|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:29.783
# ::node	0	cause-01	18-19
# ::node	0.0	and	13-14
# ::node	0.0.0	between	11-12
# ::node	0.1	accident	22-23
# ::node	0.1.0	involve-01	23-24
# ::node	0.1.0.0	3	7-8
# ::node	0.1.0.1	car	25-26
# ::node	0.1.1	early	21-22
# ::node	0.2	4	5-6
# ::root	0	cause-01
# ::edge	4	op1	cause-01	0.2	0	
# ::edge	accident	mod	early	0.1	0.1.1	
# ::edge	between	op1	and	0.0.0	0.0	
# ::edge	cause-01	ARG0	and	0	0.0	
# ::edge	cause-01	ARG1	accident	0	0.1	
# ::edge	involve-01	ARG0	3	0.1.0	0.1.0.0	
# ::edge	involve-01	ARG1	car	0.1.0	0.1.0.1	
# ::edge	involve-01	ARG2	accident	0.1.0	0.1	
(c2 / cause-01 
      :ARG0 (a2 / and 
            :op-of (b / between)) 
      :ARG1 (a / accident 
            :ARG2-of (i / involve-01 
                  :ARG0 3 
                  :ARG1 (c / car)) 
            :mod (e / early)) 
      :op-of 4)

# ::snt page 3  laurie cunningham the former england footballer was killed in a car accident in spain
# ::tok page 3 laurie cunningham the former england footballer was killed in a car accident in spain
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:29.784
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the only person to see the accident was warehouseman mr garry rawlings who was working at the next door premises of tractor manufacturers cubota uk mr rawlings of cotmore close thame said he was working at the side of the warehouse when mr giles came and asked him for some pieces of wood dash
# ::tok the only person to see the accident was warehouseman mr garry rawlings who was working at the next door premises of tractor manufacturers cubota uk mr rawlings of cotmore close thame said he was working at the side of the warehouse when mr giles came and asked him for some pieces of wood dash
# ::alignments 52-53|0.0 50-51|0.1.2.0.0 49-50|0.1.2.0.0.0 46-47|0.1.2.0 45-46|0.1.2 37-38|0.1.1 34-35|0.1 32-33|0.1.0 31-32|0 22-23|0.2.1 21-22|0.2.1.0 19-20|0.2.2 18-19|0.2.2.0 17-18|0.2.2.1 14-15|0.2 6-7|0.2.0.0.0 4-5|0.2.0.0 2-3|0.2.0 1-2|0.2.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:30.284
# ::node	0	say-01	31-32
# ::node	0.0	wood	52-53
# ::node	0.1	work-01	34-35
# ::node	0.1.0	he	32-33
# ::node	0.1.1	side	37-38
# ::node	0.1.2	and	45-46
# ::node	0.1.2.0	ask-02	46-47
# ::node	0.1.2.0.0	piece	50-51
# ::node	0.1.2.0.0.0	some	49-50
# ::node	0.2	work-01	14-15
# ::node	0.2.0	person	2-3
# ::node	0.2.0.0	see-01	4-5
# ::node	0.2.0.0.0	accident	6-7
# ::node	0.2.0.1	only	1-2
# ::node	0.2.1	manufacture-01	22-23
# ::node	0.2.1.0	tractor	21-22
# ::node	0.2.2	premise	19-20
# ::node	0.2.2.0	door	18-19
# ::node	0.2.2.1	next	17-18
# ::root	0	say-01
# ::edge	and	op1	ask-02	0.1.2	0.1.2.0	
# ::edge	ask-02	ARG1	piece	0.1.2.0	0.1.2.0.0	
# ::edge	manufacture-01	ARG1	tractor	0.2.1	0.2.1.0	
# ::edge	person	mod	only	0.2.0	0.2.0.1	
# ::edge	piece	mod	some	0.1.2.0.0	0.1.2.0.0.0	
# ::edge	premise	mod	door	0.2.2	0.2.2.0	
# ::edge	premise	mod	next	0.2.2	0.2.2.1	
# ::edge	say-01	ARG0	wood	0	0.0	
# ::edge	say-01	ARG1	work-01	0	0.1	
# ::edge	see-01	ARG0	person	0.2.0.0	0.2.0	
# ::edge	see-01	ARG1	accident	0.2.0.0	0.2.0.0.0	
# ::edge	work-01	ARG0	he	0.1	0.1.0	
# ::edge	work-01	ARG0	person	0.2	0.2.0	
# ::edge	work-01	ARG1	manufacture-01	0.2	0.2.1	
# ::edge	work-01	ARG1	side	0.1	0.1.1	
# ::edge	work-01	ARG2	and	0.1	0.1.2	
# ::edge	work-01	location	premise	0.2	0.2.2	
# ::edge	work-01	manner	say-01	0.2	0	
(s3 / say-01 
      :ARG0 (w / wood) 
      :ARG1 (w2 / work-01 
            :ARG0 (h / he) 
            :ARG1 (s2 / side) 
            :ARG2 (a2 / and 
                  :op1 (a / ask-02 
                        :ARG1 (p / piece 
                              :mod (s / some))))) 
      :manner-of (w3 / work-01 
            :ARG0 (p3 / person 
                  :ARG0-of (s4 / see-01 
                        :ARG1 (a3 / accident)) 
                  :mod (o / only)) 
            :ARG1 (m / manufacture-01 
                  :ARG1 (t / tractor)) 
            :location (p2 / premise 
                  :mod (d / door) 
                  :mod (n / next))))

# ::snt the trouble arose over an issue seemingly selfexplanatory when is a product defective  to placate conservative critics the point has been frequently made that the new liability was not absolute like insurance the manufacturer was not liable for every accident resulting from use of his products only for accidents caused by a defect
# ::tok the trouble arose over an issue seemingly selfexplanatory when is a product defective to placate conservative critics the point has been frequently made that the new liability was not absolute like insurance the manufacturer was not liable for every accident resulting from use of his products only for accidents caused by a defect
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:30.285
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt there has been a 45 per cent increase in slight injury accidents especially among drivers and adult cyclists he said, this trend is against a backdrop of continued decline in accidents in the city during the last five years,  the county now plans to add nearly another 250000 to its roads budget and another 95000 to the 160000 spent last year to deal with the 60 recognised accident black spots in the county
# ::tok there has been a 45 per cent increase in slight injury accidents especially among drivers and adult cyclists he said , this trend is against a backdrop of continued decline in accidents in the city during the last five years , the county now plans to add nearly another 250000 to its roads budget and another 95000 to the 160000 spent last year to deal with the 60 recognised accident black spots in the county
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:30.290
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt thus it is no accident that in his preface huysmans declares that his formal project to deadguys
# ::tok thus it is no accident that in his preface huysmans declares that his formal project to deadguys
# ::alignments 14-15|0.0 13-14|0 4-5|0.0.0.0 3-4|0.0.0 1-2|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:30.309
# ::node	0	formal	13-14
# ::node	0.0	project	14-15
# ::node	0.0.0	-	3-4
# ::node	0.0.0.0	accident	4-5
# ::node	0.0.0.0.0	it	1-2
# ::root	0	formal
(f / formal 
      :mod-of (p / project 
            :mod (- / - 
                  :polarity-of (a / accident 
                        :domain (i / it)))))

# ::snt fifteen people were killed in 10 road accidents over the weekend, four people died after an accident on the m1 near milton keynes buckinghamshire and three were killed at stonehaven grampian in a collision involving a car and lorry
# ::tok fifteen people were killed in 10 road accidents over the weekend , four people died after an accident on the m1 near milton keynes buckinghamshire and three were killed at stonehaven grampian in a collision involving a car and lorry
# ::alignments 38-39|0 37-38|0.1 35-36|0.0 34-35|0.0.0 28-29|0.0.0.2 26-27|0.0.0.2.1 25-26|0.0.0.2.2 22-24|0.0.0.2.2.2.1.0+0.0.0.2.2.2.1.1+0.0.0.2.2.2.1+0.0.0.2.2.2 21-22|0.0.0.2.2.2.0 17-18|0.0.0.2.2.1.0.0 15-16|0.0.0.2.2.1.0 14-15|0.0.0.2.2.1 12-13|0.0.0.1 10-11|0.0.0.2.0.1 7-8|0.0.0.2.0 6-7|0.0.0.2.0.0 5-6|0.0.0.0 3-4|0.0.0.2.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:30.646
# ::node	0	and	38-39
# ::node	0.0	involve-01	35-36
# ::node	0.0.0	collide-01	34-35
# ::node	0.0.0.0	10	5-6
# ::node	0.0.0.1	4	12-13
# ::node	0.0.0.2	kill-01	28-29
# ::node	0.0.0.2.0	accident	7-8
# ::node	0.0.0.2.0.0	road	6-7
# ::node	0.0.0.2.0.1	weekend	10-11
# ::node	0.0.0.2.1	3	26-27
# ::node	0.0.0.2.2	and	25-26
# ::node	0.0.0.2.2.0	kill-01	3-4
# ::node	0.0.0.2.2.1	die-01	14-15
# ::node	0.0.0.2.2.1.0	after	15-16
# ::node	0.0.0.2.2.1.0.0	accident	17-18
# ::node	0.0.0.2.2.2	country	22-24
# ::node	0.0.0.2.2.2.0	near	21-22
# ::node	0.0.0.2.2.2.1	name	22-24
# ::node	0.0.0.2.2.2.1.0	"keynes"	22-24
# ::node	0.0.0.2.2.2.1.1	"milton"	22-24
# ::node	0.1	car	37-38
# ::root	0	and
# ::edge	3	mod	kill-01	0.0.0.2.1	0.0.0.2	
# ::edge	accident	location	road	0.0.0.2.0	0.0.0.2.0.0	
# ::edge	accident	location	weekend	0.0.0.2.0	0.0.0.2.0.1	
# ::edge	after	op1	accident	0.0.0.2.2.1.0	0.0.0.2.2.1.0.0	
# ::edge	and	op1	car	0	0.1	
# ::edge	and	op1	kill-01	0.0.0.2.2	0.0.0.2.2.0	
# ::edge	and	op2	die-01	0.0.0.2.2	0.0.0.2.2.1	
# ::edge	and	op3	country	0.0.0.2.2	0.0.0.2.2.2	
# ::edge	and	op4	kill-01	0.0.0.2.2	0.0.0.2	
# ::edge	collide-01	ARG0	10	0.0.0	0.0.0.0	
# ::edge	collide-01	ARG1	4	0.0.0	0.0.0.1	
# ::edge	country	mod	near	0.0.0.2.2.2	0.0.0.2.2.2.0	
# ::edge	country	name	name	0.0.0.2.2.2	0.0.0.2.2.2.1	
# ::edge	die-01	time	after	0.0.0.2.2.1	0.0.0.2.2.1.0	
# ::edge	involve-01	ARG1	and	0.0	0	
# ::edge	involve-01	ARG2	collide-01	0.0	0.0.0	
# ::edge	kill-01	ARG0	accident	0.0.0.2	0.0.0.2.0	
# ::edge	kill-01	time	collide-01	0.0.0.2	0.0.0	
# ::edge	name	op1	"keynes"	0.0.0.2.2.2.1	0.0.0.2.2.2.1.0	
# ::edge	name	op2	"milton"	0.0.0.2.2.2.1	0.0.0.2.2.2.1.1	
(a / and 
      :ARG1-of (i / involve-01 
            :ARG2 (c2 / collide-01 
                  :ARG0 10 
                  :ARG1 4 
                  :time-of (k / kill-01 
                        :ARG0 (a5 / accident 
                              :location (r / road) 
                              :location (w / weekend)) 
                        :mod-of 3 
                        :op-of (a2 / and 
                              :op1 (k2 / kill-01) 
                              :op2 (d / die-01 
                                    :time (a4 / after 
                                          :op1 (a3 / accident))) 
                              :op3 (c3 / country 
                                    :mod (n2 / near) 
                                    :name (n / name 
                                          :op1 "keynes" 
                                          :op2 "milton")))))) 
      :op1 (c / car))

# ::snt a number of accidents also occurred on the m25 in surrey between junctions 9 and 11 with thick fog affecting junction 10 according to the aa
# ::tok a number of accidents also occurred on the m25 in surrey between junctions 9 and 11 with thick fog affecting junction 10 according to the aa
# ::alignments 21-22|0.1.1 19-20|0.1 17-18|0.1.3 15-16|0.1.2 14-15|0 13-14|0.1.5 11-12|0.0 4-5|0.1.4 3-4|0.1.0.0 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:30.720
# ::node	0	and	14-15
# ::node	0.0	between	11-12
# ::node	0.1	affect-01	19-20
# ::node	0.1.0	number	1-2
# ::node	0.1.0.0	accident	3-4
# ::node	0.1.1	10	21-22
# ::node	0.1.2	11	15-16
# ::node	0.1.3	thick	17-18
# ::node	0.1.4	also	4-5
# ::node	0.1.5	9	13-14
# ::root	0	and
# ::edge	9	op1	affect-01	0.1.5	0.1	
# ::edge	accident	quant	number	0.1.0.0	0.1.0	
# ::edge	affect-01	ARG0	number	0.1	0.1.0	
# ::edge	affect-01	ARG1	10	0.1	0.1.1	
# ::edge	affect-01	ARG2	11	0.1	0.1.2	
# ::edge	affect-01	beneficiary	thick	0.1	0.1.3	
# ::edge	also	op1	affect-01	0.1.4	0.1	
# ::edge	and	op1	between	0	0.0	
# ::edge	and	op2	affect-01	0	0.1	
(a2 / and 
      :op1 (b / between) 
      :op2 (a / affect-01 
            :ARG0 (n / number 
                  :quant-of (a4 / accident)) 
            :ARG1 10 
            :ARG2 11 
            :beneficiary (t / thick) 
            :op-of (a3 / also) 
            :op-of 9))

# ::snt we know of only one vehicle that has caught fire on the busy french motorail equivalent system this sort of accident is not possible in our closed shuttle
# ::tok we know of only one vehicle that has caught fire on the busy french motorail equivalent system this sort of accident is not possible in our closed shuttle
# ::alignments 27-28|0.1 26-27|0.1.0 23-24|0 20-21|0.0.1 18-19|0.0 17-18|0.0.0 16-17|0.2 15-16|0.2.0 13-14|0.2.1.0.0+0.2.1.0+0.2.1 12-13|0.2.0.0 5-6|0.2.2.0.0 3-4|0.2.2.0.0.0 1-2|0.2.2.0 0-1|0.2.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:30.951
# ::node	0	possible	23-24
# ::node	0.0	sort	18-19
# ::node	0.0.0	this	17-18
# ::node	0.0.1	accident	20-21
# ::node	0.1	shuttle	27-28
# ::node	0.1.0	close-01	26-27
# ::node	0.2	system	16-17
# ::node	0.2.0	equivalent	15-16
# ::node	0.2.0.0	busy	12-13
# ::node	0.2.1	country	13-14
# ::node	0.2.1.0	name	13-14
# ::node	0.2.1.0.0	"France"	13-14
# ::node	0.2.2	we	0-1
# ::node	0.2.2.0	know-01	1-2
# ::node	0.2.2.0.0	vehicle	5-6
# ::node	0.2.2.0.0.0	only	3-4
# ::root	0	possible
# ::edge	accident	mod	sort	0.0.1	0.0	
# ::edge	close-01	ARG1	shuttle	0.1.0	0.1	
# ::edge	country	name	name	0.2.1	0.2.1.0	
# ::edge	equivalent	mod	busy	0.2.0	0.2.0.0	
# ::edge	know-01	ARG0	we	0.2.2.0	0.2.2	
# ::edge	know-01	ARG1	vehicle	0.2.2.0	0.2.2.0.0	
# ::edge	name	op1	"France"	0.2.1.0	0.2.1.0.0	
# ::edge	possible	domain	sort	0	0.0	
# ::edge	possible	mod	shuttle	0	0.1	
# ::edge	sort	mod	this	0.0	0.0.0	
# ::edge	system	mod	country	0.2	0.2.1	
# ::edge	system	mod	equivalent	0.2	0.2.0	
# ::edge	system	mod	possible	0.2	0	
# ::edge	system	poss	we	0.2	0.2.2	
# ::edge	vehicle	mod	only	0.2.2.0.0	0.2.2.0.0.0	
(p / possible 
      :domain (s2 / sort 
            :mod (t / this) 
            :mod-of (a / accident)) 
      :mod (s / shuttle 
            :ARG1-of (c / close-01)) 
      :mod-of (s3 / system 
            :mod (e / equivalent 
                  :mod (b / busy)) 
            :mod (c2 / country 
                  :name (n / name 
                        :op1 "France")) 
            :poss (w / we 
                  :ARG0-of (k / know-01 
                        :ARG1 (v / vehicle 
                              :mod (o / only))))))

# ::snt i have no wish to end up as an accident report in a country hospital log book
# ::tok i have no wish to end up as an accident report in a country hospital log book
# ::alignments 16-17|0.0 15-16|0 14-15|0.1 13-14|0.1.0 10-11|0.2 9-10|0.2.0 3-4|0.0.0.0 2-3|0.0.0.0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:31.056
# ::node	0	log-02	15-16
# ::node	0.0	book	16-17
# ::node	0.0.0	i	0-1
# ::node	0.0.0.0	wish-01	3-4
# ::node	0.0.0.0.0	-	2-3
# ::node	0.1	hospital	14-15
# ::node	0.1.0	country	13-14
# ::node	0.2	report	10-11
# ::node	0.2.0	accident	9-10
# ::root	0	log-02
# ::edge	book	poss	i	0.0	0.0.0	
# ::edge	hospital	mod	country	0.1	0.1.0	
# ::edge	log-02	ARG0	book	0	0.0	
# ::edge	log-02	ARG1	hospital	0	0.1	
# ::edge	report	mod	accident	0.2	0.2.0	
# ::edge	report	topic	log-02	0.2	0	
# ::edge	wish-01	ARG0	i	0.0.0.0	0.0.0	
# ::edge	wish-01	ARG1	-	0.0.0.0	0.0.0.0.0	
(l / log-02 
      :ARG0 (b / book 
            :poss (i / i 
                  :ARG0-of (w / wish-01 
                        :ARG1 (- / -)))) 
      :ARG1 (h / hospital 
            :mod (c / country)) 
      :topic-of (r / report 
            :mod (a / accident)))

# ::snt his preoccupied expression however made it clear that he hoped not to be at close quarters if senna ever had an accident
# ::tok his preoccupied expression however made it clear that he hoped not to be at close quarters if senna ever had an accident
# ::alignments 21-22|0.0.0.0 18-19|0.1.0.0.0.0 15-16|0.0.0 9-10|0 8-9|0.0 6-7|0.1.0 5-6|0.1 2-3|0.1.0.0 1-2|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:31.151
# ::node	0	hope-01	9-10
# ::node	0.0	he	8-9
# ::node	0.0.0	quarter	15-16
# ::node	0.0.0.0	accident	21-22
# ::node	0.1	it	5-6
# ::node	0.1.0	clear	6-7
# ::node	0.1.0.0	express-01	2-3
# ::node	0.1.0.0.0	preoccupy-01	1-2
# ::node	0.1.0.0.0.0	ever	18-19
# ::root	0	hope-01
# ::edge	clear	domain	it	0.1.0	0.1	
# ::edge	express-01	ARG0	clear	0.1.0.0	0.1.0	
# ::edge	hope-01	ARG0	he	0	0.0	
# ::edge	hope-01	ARG1	it	0	0.1	
# ::edge	preoccupy-01	ARG0	ever	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	preoccupy-01	ARG1	express-01	0.1.0.0.0	0.1.0.0	
# ::edge	quarter	poss	accident	0.0.0	0.0.0.0	
# ::edge	quarter	poss	he	0.0.0	0.0	
(h / hope-01 
      :ARG0 (h2 / he 
            :poss-of (q / quarter 
                  :poss (a / accident))) 
      :ARG1 (i / it 
            :domain-of (c / clear 
                  :ARG0-of (e2 / express-01 
                        :ARG1-of (p / preoccupy-01 
                              :ARG0 (e / ever))))))

# ::snt it is no accident that the most gripping section of his latest novel the innocent cape hbk 12
# ::tok it is no accident that the most gripping section of his latest novel the innocent cape hbk 12
# ::alignments 17-18|0.0.1.0.1 12-13|0 11-12|0.0.0+0.0 8-9|0.0.1 7-8|0.0.1.0 6-7|0.0.1.0.2 3-4|0.0.1.0.0.0 2-3|0.0.1.0.0 0-1|0.0.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:31.224
# ::node	0	novel	12-13
# ::node	0.0	late	11-12
# ::node	0.0.0	most	11-12
# ::node	0.0.1	section	8-9
# ::node	0.0.1.0	grip-01	7-8
# ::node	0.0.1.0.0	-	2-3
# ::node	0.0.1.0.0.0	accident	3-4
# ::node	0.0.1.0.0.0.0	it	0-1
# ::node	0.0.1.0.1	12	17-18
# ::node	0.0.1.0.2	most	6-7
# ::root	0	novel
# ::edge	accident	domain	it	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	accident	polarity	-	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	grip-01	ARG0	-	0.0.1.0	0.0.1.0.0	
# ::edge	grip-01	ARG1	12	0.0.1.0	0.0.1.0.1	
# ::edge	grip-01	degree	most	0.0.1.0	0.0.1.0.2	
# ::edge	late	degree	most	0.0	0.0.0	
# ::edge	novel	mod	late	0	0.0	
# ::edge	section	mod	grip-01	0.0.1	0.0.1.0	
# ::edge	section	prep-at	late	0.0.1	0.0	
(n / novel 
      :mod (l / late 
            :degree (m / most) 
            :prep-at-of (s / section 
                  :mod (g / grip-01 
                        :ARG0 (- / - 
                              :polarity-of (a / accident 
                                    :domain (i / it))) 
                        :ARG1 12 
                        :degree (m2 / most)))))

# ::snt police said that although the explosion was not thought to have been an accident no one was being sought
# ::tok police said that although the explosion was not thought to have been an accident no one was being sought
# ::alignments 18-19|0.1 14-15|0.1.1 13-14|0.1.0.1 8-9|0.1.0 5-6|0.1.0.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:31.270
# ::node	0	say-01	1-2
# ::node	0.0	police	0-1
# ::node	0.1	seek-01	18-19
# ::node	0.1.0	think-01	8-9
# ::node	0.1.0.0	explode-01	5-6
# ::node	0.1.0.1	accident	13-14
# ::node	0.1.1	-	14-15
# ::root	0	say-01
# ::edge	say-01	ARG0	police	0	0.0	
# ::edge	say-01	ARG1	seek-01	0	0.1	
# ::edge	seek-01	condition	think-01	0.1	0.1.0	
# ::edge	seek-01	polarity	-	0.1	0.1.1	
# ::edge	think-01	ARG1	explode-01	0.1.0	0.1.0.0	
# ::edge	think-01	ARG2	accident	0.1.0	0.1.0.1	
(s2 / say-01 
      :ARG0 (p / police) 
      :ARG1 (s / seek-01 
            :condition (t / think-01 
                  :ARG1 (e / explode-01) 
                  :ARG2 (a / accident)) 
            :polarity (- / -)))

# ::snt evelyn metherell of benfleet essex accepted 350000 agreed damages at the high court for a motorcycle accident in 1981 in which her husband was killed and she suffered brain damage
# ::tok evelyn metherell of benfleet essex accepted 350000 agreed damages at the high court for a motorcycle accident in 1981 in which her husband was killed and she suffered brain damage
# ::alignments 29-30|0.3.0.0 28-29|0.3.0.0.0 27-28|0.3 26-27|0.3.0 25-26|0 24-25|0.2 22-23|0.3.1.0+0.3.1 18-19|0.1.0+0.1 16-17|0.0.0.0.1 12-13|0.0.0.0.0 11-12|0.0.0.0.0.0 8-9|0.0.0 7-8|0.0 6-7|0.0.0.1.2+0.0.0.1.1+0.0.0.1.0+0.0.0.1 5-6|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:31.953
# ::node	0	and	25-26
# ::node	0.0	agree-01	7-8
# ::node	0.0.0	damage-01	8-9
# ::node	0.0.0.0	accept-01	5-6
# ::node	0.0.0.0.0	court	12-13
# ::node	0.0.0.0.0.0	high	11-12
# ::node	0.0.0.0.1	accident	16-17
# ::node	0.0.0.1	date-entity	6-7
# ::node	0.0.0.1.0	0	6-7
# ::node	0.0.0.1.1	0	6-7
# ::node	0.0.0.1.2	35	6-7
# ::node	0.1	date-entity	18-19
# ::node	0.1.0	1981	18-19
# ::node	0.2	kill-01	24-25
# ::node	0.3	suffer-01	27-28
# ::node	0.3.0	she	26-27
# ::node	0.3.0.0	damage-01	29-30
# ::node	0.3.0.0.0	brain	28-29
# ::node	0.3.1	have-rel-role-91	22-23
# ::node	0.3.1.0	husband	22-23
# ::root	0	and
# ::edge	accept-01	ARG1	damage-01	0.0.0.0	0.0.0	
# ::edge	accept-01	ARG2	court	0.0.0.0	0.0.0.0.0	
# ::edge	accept-01	manner	accident	0.0.0.0	0.0.0.0.1	
# ::edge	agree-01	ARG0	and	0.0	0	
# ::edge	and	op1	date-entity	0	0.1	
# ::edge	and	op2	kill-01	0	0.2	
# ::edge	and	op3	suffer-01	0	0.3	
# ::edge	court	mod	high	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	damage-01	ARG0	she	0.3.0.0	0.3.0	
# ::edge	damage-01	ARG1	brain	0.3.0.0	0.3.0.0.0	
# ::edge	damage-01	mod	agree-01	0.0.0	0.0	
# ::edge	damage-01	time	date-entity	0.0.0	0.0.0.1	
# ::edge	date-entity	day	0	0.0.0.1	0.0.0.1.0	
# ::edge	date-entity	month	0	0.0.0.1	0.0.0.1.1	
# ::edge	date-entity	year	1981	0.1	0.1.0	
# ::edge	date-entity	year	35	0.0.0.1	0.0.0.1.2	
# ::edge	have-rel-role-91	ARG2	husband	0.3.1	0.3.1.0	
# ::edge	suffer-01	ARG0	she	0.3	0.3.0	
# ::edge	suffer-01	ARG1	have-rel-role-91	0.3	0.3.1	
(a / and 
      :ARG0-of (a3 / agree-01 
            :mod-of (d3 / damage-01 
                  :ARG1-of (a4 / accept-01 
                        :ARG2 (c / court 
                              :mod (h3 / high)) 
                        :manner (a2 / accident)) 
                  :time (d4 / date-entity 
                        :day 0 
                        :month 0 
                        :year 35))) 
      :op1 (d2 / date-entity 
            :year 1981) 
      :op2 (k / kill-01) 
      :op3 (s / suffer-01 
            :ARG0 (s2 / she 
                  :ARG0-of (d / damage-01 
                        :ARG1 (b / brain))) 
            :ARG1 (h / have-rel-role-91 
                  :ARG2 (h2 / husband))))

# ::snt they had no backup crew temperatures were 40 below and he drove knowing an accident in the back of beyond meant they would die of exposure
# ::tok they had no backup crew temperatures were 40 below and he drove knowing an accident in the back of beyond meant they would die of exposure
# ::alignments 25-26|0.1.0.0 23-24|0.1 21-22|0.1.0 20-21|0 19-20|0.2 17-18|0.0.2 14-15|0.0.0 12-13|0.0 11-12|0.0.1 10-11|0.0.1.0 9-10|0.0.1.4 8-9|0.0.1.3 7-8|0.0.1.3.0 5-6|0.0.1.2 4-5|0.0.1.1 3-4|0.0.1.1.0 2-3|0.0.1.2.0 0-1|0.0.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:32.624
# ::node	0	mean-01	20-21
# ::node	0.0	know-01	12-13
# ::node	0.0.0	accident	14-15
# ::node	0.0.1	drive-02	11-12
# ::node	0.0.1.0	he	10-11
# ::node	0.0.1.1	crew	4-5
# ::node	0.0.1.1.0	back-09	3-4
# ::node	0.0.1.1.0.0	they	0-1
# ::node	0.0.1.2	temperature	5-6
# ::node	0.0.1.2.0	-	2-3
# ::node	0.0.1.3	below	8-9
# ::node	0.0.1.3.0	40	7-8
# ::node	0.0.1.4	and	9-10
# ::node	0.0.2	back	17-18
# ::node	0.1	die-01	23-24
# ::node	0.1.0	they	21-22
# ::node	0.1.0.0	expose-01	25-26
# ::node	0.2	beyond	19-20
# ::root	0	mean-01
# ::edge	40	time	below	0.0.1.3.0	0.0.1.3	
# ::edge	and	op1	drive-02	0.0.1.4	0.0.1	
# ::edge	back-09	ARG0	they	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	back-09	ARG1	crew	0.0.1.1.0	0.0.1.1	
# ::edge	beyond	op1	mean-01	0.2	0	
# ::edge	die-01	ARG1	they	0.1	0.1.0	
# ::edge	drive-02	ARG0	he	0.0.1	0.0.1.0	
# ::edge	drive-02	ARG1	know-01	0.0.1	0.0	
# ::edge	drive-02	ARG3	crew	0.0.1	0.0.1.1	
# ::edge	drive-02	instrument	temperature	0.0.1	0.0.1.2	
# ::edge	drive-02	mod	below	0.0.1	0.0.1.3	
# ::edge	expose-01	ARG0	they	0.1.0.0	0.1.0	
# ::edge	know-01	ARG1	accident	0.0	0.0.0	
# ::edge	know-01	ARG2	back	0.0	0.0.2	
# ::edge	mean-01	ARG0	know-01	0	0.0	
# ::edge	mean-01	ARG1	die-01	0	0.1	
# ::edge	temperature	mod	-	0.0.1.2	0.0.1.2.0	
(m / mean-01 
      :ARG0 (k / know-01 
            :ARG1 (a / accident) 
            :ARG1-of (d2 / drive-02 
                  :ARG0 (h / he) 
                  :ARG3 (c / crew 
                        :ARG1-of (b4 / back-09 
                              :ARG0 (t3 / they))) 
                  :instrument (t2 / temperature 
                        :mod (- / -)) 
                  :mod (b3 / below 
                        :time-of 40) 
                  :op-of (a2 / and)) 
            :ARG2 (b2 / back)) 
      :ARG1 (d / die-01 
            :ARG1 (t / they 
                  :ARG0-of (e / expose-01))) 
      :op-of (b / beyond))

# ::snt for most of them passion and longing flames briefly from amidst the modest wreckage and ordinary accidents of their lives
# ::tok for most of them passion and longing flames briefly from amidst the modest wreckage and ordinary accidents of their lives
# ::alignments 19-20|0.1.1 16-17|0.1 15-16|0.1.0 14-15|0 12-13|0.0 5-6|0.2 4-5|0.2.0 1-2|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:32.660
# ::node	0	and	14-15
# ::node	0.0	modest	12-13
# ::node	0.1	accident	16-17
# ::node	0.1.0	ordinary	15-16
# ::node	0.1.1	life	19-20
# ::node	0.1.1.0	most	1-2
# ::node	0.2	and	5-6
# ::node	0.2.0	passion	4-5
# ::root	0	and
# ::edge	accident	mod	ordinary	0.1	0.1.0	
# ::edge	and	op1	modest	0	0.0	
# ::edge	and	op1	passion	0.2	0.2.0	
# ::edge	and	op2	accident	0	0.1	
# ::edge	and	poss	and	0.2	0	
# ::edge	life	op1	most	0.1.1	0.1.1.0	
# ::edge	life	part	accident	0.1.1	0.1	
(a2 / and 
      :op1 (m / modest) 
      :op2 (a / accident 
            :mod (o / ordinary) 
            :part-of (l / life 
                  :op1 (m2 / most))) 
      :poss-of (a3 / and 
            :op1 (p / passion)))

# ::snt india after all was the site of the worst industrial accident todate the bhopal disaster which you would think would give a concerned filmmaker plenty to think about
# ::tok india after all was the site of the worst industrial accident todate the bhopal disaster which you would think would give a concerned filmmaker plenty to think about
# ::alignments 26-27|0.0.0.0 24-25|0.0.0.0.1.1 23-24|0.0.0.0.1.3 22-23|0.0.0.0.1.1.0 20-21|0.0.0.0.1 18-19|0.0.0.0.1.2 16-17|0.0.0.0.1.2.0 14-15|0.0.0.0.0 10-11|0.0 9-10|0.0.0.0.1.1.0.0 8-9|0 5-6|0.0.0 2-3|0.0.0.1 1-2|0.0.1 0-1|0.0.0.0.1.0.0.0+0.0.0.0.1.0.0+0.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:32.828
# ::node	0	bad	8-9
# ::node	0.0	accident	10-11
# ::node	0.0.0	site	5-6
# ::node	0.0.0.0	think-01	26-27
# ::node	0.0.0.0.0	disaster	14-15
# ::node	0.0.0.0.1	give-01	20-21
# ::node	0.0.0.0.1.0	country	0-1
# ::node	0.0.0.0.1.0.0	name	0-1
# ::node	0.0.0.0.1.0.0.0	"India"	0-1
# ::node	0.0.0.0.1.1	plenty	24-25
# ::node	0.0.0.0.1.1.0	concern-01	22-23
# ::node	0.0.0.0.1.1.0.0	industry	9-10
# ::node	0.0.0.0.1.2	think-01	18-19
# ::node	0.0.0.0.1.2.0	you	16-17
# ::node	0.0.0.0.1.3	film	23-24
# ::node	0.0.0.1	all	2-3
# ::node	0.0.1	after	1-2
# ::root	0	bad
(b / bad 
      :mod-of (a / accident 
            :location-of (s / site 
                  :ARG1-of (t / think-01 
                        :ARG0 (d / disaster) 
                        :purpose-of (g / give-01 
                              :ARG0 (c2 / country 
                                    :name (n / name 
                                          :op1 "India")) 
                              :ARG1 (p / plenty 
                                    :ARG0-of (c / concern-01 
                                          :ARG1 (i / industry))) 
                              :ARG1-of (t2 / think-01 
                                    :ARG0 (y / you)) 
                              :ARG2 (f / film))) 
                  :domain (a2 / all)) 
            :op-of (a3 / after)))

# ::snt in serious hazard regulation too the stakes are high and the socalled human factor in accident causation is an issue
# ::tok in serious hazard regulation too the stakes are high and the socalled human factor in accident causation is an issue
# ::alignments 19-20|0.2 15-16|0.0.0.0 13-14|0.2.0 12-13|0.2.0.0 9-10|0 8-9|0.1 4-5|0.0.0.1 3-4|0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:32.877
# ::node	0	and	9-10
# ::node	0.0	serious	1-2
# ::node	0.0.0	regulate-01	3-4
# ::node	0.0.0.0	accident	15-16
# ::node	0.0.0.1	too	4-5
# ::node	0.1	high	8-9
# ::node	0.2	issue	19-20
# ::node	0.2.0	factor	13-14
# ::node	0.2.0.0	human	12-13
# ::root	0	and
# ::edge	and	op1	serious	0	0.0	
# ::edge	and	op2	high	0	0.1	
# ::edge	and	op3	issue	0	0.2	
# ::edge	factor	mod	human	0.2.0	0.2.0.0	
# ::edge	issue	domain	factor	0.2	0.2.0	
# ::edge	regulate-01	ARG0	accident	0.0.0	0.0.0.0	
# ::edge	regulate-01	ARG1	too	0.0.0	0.0.0.1	
# ::edge	regulate-01	mod	serious	0.0.0	0.0	
(a2 / and 
      :op1 (s / serious 
            :mod-of (r / regulate-01 
                  :ARG0 (a / accident) 
                  :ARG1 (t / too))) 
      :op2 (h2 / high) 
      :op3 (i / issue 
            :domain (f / factor 
                  :mod (h / human))))

# ::snt other fillips include a mounting scale of discounts for customers who carry car house contents and personal accident insurance up to a maximum of 10 per cent off
# ::tok other fillips include a mounting scale of discounts for customers who carry car house contents and personal accident insurance up to a maximum of 10 per cent off
# ::alignments 27-28|0.0.0.0.3 26-27|0.0.0.1.0.0.0.0+0.0.0.1.0.0.0 24-25|0.0.1 22-23|0 18-19|0.0.0.1 17-18|0.0.0.1.1 16-17|0.0.0.1.1.0 15-16|0.0.0 14-15|0.0.0.0.0+0.0.0.0 13-14|0.0.0.0.2 12-13|0.0.0.0.2.0 9-10|0.0.0.1.0.0.1 5-6|0.0.0.1.0 4-5|0.0.0.1.0.0 2-3|0.0 0-1|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:33.315
# ::node	0	maximum	22-23
# ::node	0.0	include-01	2-3
# ::node	0.0.0	and	15-16
# ::node	0.0.0.0	thing	14-15
# ::node	0.0.0.0.0	contain-01	14-15
# ::node	0.0.0.0.1	other	0-1
# ::node	0.0.0.0.2	house	13-14
# ::node	0.0.0.0.2.0	car	12-13
# ::node	0.0.0.0.3	off	27-28
# ::node	0.0.0.1	insure-02	18-19
# ::node	0.0.0.1.0	scale	5-6
# ::node	0.0.0.1.0.0	mount-02	4-5
# ::node	0.0.0.1.0.0.0	monetary-quantity	26-27
# ::node	0.0.0.1.0.0.0.0	cent	26-27
# ::node	0.0.0.1.0.0.1	customer	9-10
# ::node	0.0.0.1.1	accident	17-18
# ::node	0.0.0.1.1.0	personal	16-17
# ::node	0.0.1	10	24-25
# ::root	0	maximum
(m2 / maximum 
      :ARG0-of (i2 / include-01 
            :ARG1 (a2 / and 
                  :op1 (t / thing 
                        :ARG1-of (c2 / contain-01) 
                        :domain-of (o2 / other) 
                        :mod (h / house 
                              :mod (c3 / car)) 
                        :op-of (o / off)) 
                  :op2 (i / insure-02 
                        :ARG1 (s / scale 
                              :ARG1-of (m3 / mount-02 
                                    :ARG0 (m / monetary-quantity 
                                          :unit (c / cent)) 
                                    :ARG2 (c4 / customer))) 
                        :ARG4 (a / accident 
                              :mod (p / personal)))) 
            :op-of 10))

# ::snt lord aldington has alleged he is the victim of a campaign of harassment by mr watts who was annoyed by the sun alliances failure to pay out on an accident policy after the death of his brotherinlaw
# ::tok lord aldington has alleged he is the victim of a campaign of harassment by mr watts who was annoyed by the sun alliances failure to pay out on an accident policy after the death of his brotherinlaw
# ::alignments 33-34|0.0.1.3.0 31-32|0.0.1.3 30-31|0.0.1.2 29-30|0.0.1.2.0 25-26|0.0.1 23-24|0.0 21-22|0 18-19|0.0.1.1 10-11|0.0.1.0.1 7-8|0.0.1.0 4-5|0.0.1.0.0.0 3-4|0.0.1.0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:33.550
# ::node	0	sun	21-22
# ::node	0.0	fail-01	23-24
# ::node	0.0.0	lord	0-1
# ::node	0.0.1	pay-01	25-26
# ::node	0.0.1.0	victim	7-8
# ::node	0.0.1.0.0	allege-01	3-4
# ::node	0.0.1.0.0.0	he	4-5
# ::node	0.0.1.0.1	campaign-01	10-11
# ::node	0.0.1.1	annoy-01	18-19
# ::node	0.0.1.2	policy	30-31
# ::node	0.0.1.2.0	accident	29-30
# ::node	0.0.1.3	after	31-32
# ::node	0.0.1.3.0	die-01	33-34
# ::root	0	sun
(s / sun 
      :ARG1-of (f / fail-01 
            :ARG0 (l / lord) 
            :ARG1-of (p2 / pay-01 
                  :ARG0 (v / victim 
                        :ARG1-of (a4 / allege-01 
                              :ARG0 (h / he)) 
                        :ARG1-of (c / campaign-01)) 
                  :ARG1-of (a3 / annoy-01) 
                  :accompanier (p / policy 
                        :mod (a2 / accident)) 
                  :time (a / after 
                        :op1 (d / die-01)))))

# ::snt pc andrew barefield and special constable robert merrill attempted to resuscitate 20yearold darren prescott at the scene of the accident outside a shop in st clements oxford on january 6
# ::tok pc andrew barefield and special constable robert merrill attempted to resuscitate 20yearold darren prescott at the scene of the accident outside a shop in st clements oxford on january 6
# ::alignments 29-30|0.2 28-29|0.0.1.0+0.0.1 22-23|0.0.3.0.0 20-21|0.0.3.0 19-20|0.0.3 16-17|0.0.3.1 8-9|0 6-8|0.0.2.0+0.0.2.1+0.0.2+0.0 4-5|0.0.0 3-4|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:33.743
# ::node	0	attempt-01	8-9
# ::node	0.0	person	6-8
# ::node	0.0.0	special	4-5
# ::node	0.0.1	date-entity	28-29
# ::node	0.0.1.0	1	28-29
# ::node	0.0.2	name	6-8
# ::node	0.0.2.0	"merrill"	6-8
# ::node	0.0.2.1	"robert"	6-8
# ::node	0.0.3	accident	19-20
# ::node	0.0.3.0	outside	20-21
# ::node	0.0.3.0.0	shop	22-23
# ::node	0.0.3.1	scene	16-17
# ::node	0.1	and	3-4
# ::node	0.2	6	29-30
# ::root	0	attempt-01
# ::edge	6	op1	attempt-01	0.2	0	
# ::edge	accident	location	outside	0.0.3	0.0.3.0	
# ::edge	accident	name	person	0.0.3	0.0	
# ::edge	attempt-01	ARG0	person	0	0.0	
# ::edge	attempt-01	ARG1	and	0	0.1	
# ::edge	date-entity	mod	person	0.0.1	0.0	
# ::edge	date-entity	month	1	0.0.1	0.0.1.0	
# ::edge	name	op1	"merrill"	0.0.2	0.0.2.0	
# ::edge	name	op2	"robert"	0.0.2	0.0.2.1	
# ::edge	outside	op1	shop	0.0.3.0	0.0.3.0.0	
# ::edge	person	mod	special	0.0	0.0.0	
# ::edge	person	name	name	0.0	0.0.2	
# ::edge	scene	mod	accident	0.0.3.1	0.0.3	
(a2 / attempt-01 
      :ARG0 (p / person 
            :mod (s3 / special) 
            :mod-of (d / date-entity 
                  :month 1) 
            :name (n / name 
                  :op1 "merrill" 
                  :op2 "robert") 
            :name-of (a / accident 
                  :location (o / outside 
                        :op1 (s / shop)) 
                  :mod-of (s2 / scene))) 
      :ARG1 (a3 / and) 
      :op-of 6)

# ::snt he said it was clear that the heart attack and not the accident had caused mr smiths death
# ::tok he said it was clear that the heart attack and not the accident had caused mr smiths death
# ::alignments 17-18|0.1.1.0.0 14-15|0.1.1 12-13|0.1.1.0.0.0 9-10|0.1.1.1 8-9|0.1.1.0 7-8|0.1.1.0.1 4-5|0.1 2-3|0.1.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:33.874
# ::node	0	say-01	1-2
# ::node	0.0	he	0-1
# ::node	0.1	clear	4-5
# ::node	0.1.0	it	2-3
# ::node	0.1.1	cause-01	14-15
# ::node	0.1.1.0	attack-01	8-9
# ::node	0.1.1.0.0	die-01	17-18
# ::node	0.1.1.0.0.0	accident	12-13
# ::node	0.1.1.0.1	heart	7-8
# ::node	0.1.1.1	and	9-10
# ::root	0	say-01
# ::edge	attack-01	ARG1	heart	0.1.1.0	0.1.1.0.1	
# ::edge	cause-01	ARG0	attack-01	0.1.1	0.1.1.0	
# ::edge	cause-01	ARG1	and	0.1.1	0.1.1.1	
# ::edge	clear	domain	cause-01	0.1	0.1.1	
# ::edge	clear	domain	it	0.1	0.1.0	
# ::edge	die-01	ARG0	attack-01	0.1.1.0.0	0.1.1.0	
# ::edge	die-01	ARG1	accident	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	clear	0	0.1	
(s / say-01 
      :ARG0 (h2 / he) 
      :ARG1 (c2 / clear 
            :domain (i / it) 
            :domain (c / cause-01 
                  :ARG0 (a3 / attack-01 
                        :ARG0-of (d / die-01 
                              :ARG1 (a / accident)) 
                        :ARG1 (h / heart)) 
                  :ARG1 (a2 / and))))

# ::snt sarah macdonald jeannie said when the plastic cups had faded to the wings was killed in a tragic accident six months ago
# ::tok sarah macdonald jeannie said when the plastic cups had faded to the wings was killed in a tragic accident six months ago
# ::alignments 20-21|0.0.1.1+0.0.1 19-20|0.0.1.0 18-19|0.0.2.0.0 17-18|0.0.2.0.0.0 14-15|0.0.2.0 12-13|0.0.2 9-10|0.0 7-8|0.0.0 6-7|0.0.0.0 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:33.948
# ::node	0	say-01	3-4
# ::node	0.0	fade-01	9-10
# ::node	0.0.0	cup	7-8
# ::node	0.0.0.0	plastic	6-7
# ::node	0.0.1	temporal-quantity	20-21
# ::node	0.0.1.0	6	19-20
# ::node	0.0.1.1	month	20-21
# ::node	0.0.2	wing	12-13
# ::node	0.0.2.0	kill-01	14-15
# ::node	0.0.2.0.0	accident	18-19
# ::node	0.0.2.0.0.0	tragic	17-18
# ::root	0	say-01
# ::edge	accident	mod	tragic	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	cup	mod	plastic	0.0.0	0.0.0.0	
# ::edge	fade-01	ARG0	cup	0.0	0.0.0	
# ::edge	fade-01	ARG1	temporal-quantity	0.0	0.0.1	
# ::edge	fade-01	ARG2	wing	0.0	0.0.2	
# ::edge	kill-01	ARG0	wing	0.0.2.0	0.0.2	
# ::edge	kill-01	location	accident	0.0.2.0	0.0.2.0.0	
# ::edge	say-01	time	fade-01	0	0.0	
# ::edge	temporal-quantity	quant	6	0.0.1	0.0.1.0	
# ::edge	temporal-quantity	unit	month	0.0.1	0.0.1.1	
(s / say-01 
      :time (f / fade-01 
            :ARG0 (c / cup 
                  :mod (p / plastic)) 
            :ARG1 (t / temporal-quantity 
                  :quant 6 
                  :unit (m / month)) 
            :ARG2 (w / wing 
                  :ARG0-of (k / kill-01 
                        :location (a / accident 
                              :mod (t2 / tragic))))))

# ::snt accident provided them with a political home
# ::tok accident provided them with a political home
# ::alignments 6-7|0.1 5-6|0.1.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:33.957
# ::node	0	provide-01	1-2
# ::node	0.0	accident	0-1
# ::node	0.1	home	6-7
# ::node	0.1.0	politics	5-6
# ::root	0	provide-01
# ::edge	home	mod	politics	0.1	0.1.0	
# ::edge	provide-01	ARG0	accident	0	0.0	
# ::edge	provide-01	ARG1	home	0	0.1	
(p2 / provide-01 
      :ARG0 (a / accident) 
      :ARG1 (h / home 
            :mod (p / politics)))

# ::snt when at last he dared to creep from his hidingplace and move on tiptoe up the dark stairs he had counted to 372 and managed to convince himself that any fate was preferable to having an accident down there amongst the coats
# ::tok when at last he dared to creep from his hidingplace and move on tiptoe up the dark stairs he had counted to 372 and managed to convince himself that any fate was preferable to having an accident down there amongst the coats
# ::alignments 39-40|0.3.1.1 37-38|0.0 36-37|0.4 32-33|0 30-31|0.1 29-30|0.1.0 26-27|0.3 24-25|0.3.1 23-24|0.3.1.0 20-21|0.2 18-19|0.2.0 16-17|0.3.0.0.0 10-11|0.3.0.0.1 6-7|0.3.0.0 4-5|0.3.0.1 3-4|0.3.0 2-3|0.3.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:34.324
# ::node	0	prefer-01	32-33
# ::node	0.0	down	37-38
# ::node	0.1	fate	30-31
# ::node	0.1.0	any	29-30
# ::node	0.2	count-02	20-21
# ::node	0.2.0	he	18-19
# ::node	0.3	convince-01	26-27
# ::node	0.3.0	he	3-4
# ::node	0.3.0.0	creep-01	6-7
# ::node	0.3.0.0.0	dark	16-17
# ::node	0.3.0.0.1	and	10-11
# ::node	0.3.0.1	dare-01	4-5
# ::node	0.3.0.1.0	last	2-3
# ::node	0.3.1	manage-02	24-25
# ::node	0.3.1.0	and	23-24
# ::node	0.3.1.1	amongst	39-40
# ::node	0.4	accident	36-37
# ::root	0	prefer-01
# ::edge	and	op1	creep-01	0.3.0.0.1	0.3.0.0	
# ::edge	and	op1	manage-02	0.3.1.0	0.3.1	
# ::edge	convince-01	ARG0	he	0.3	0.3.0	
# ::edge	convince-01	ARG1	prefer-01	0.3	0	
# ::edge	count-02	ARG0	he	0.2	0.2.0	
# ::edge	count-02	ARG1	prefer-01	0.2	0	
# ::edge	creep-01	ARG0	he	0.3.0.0	0.3.0	
# ::edge	creep-01	ARG1	dark	0.3.0.0	0.3.0.0.0	
# ::edge	dare-01	ARG0	last	0.3.0.1	0.3.0.1.0	
# ::edge	dare-01	ARG1	he	0.3.0.1	0.3.0	
# ::edge	fate	mod	any	0.1	0.1.0	
# ::edge	manage-02	ARG1	convince-01	0.3.1	0.3	
# ::edge	manage-02	time	amongst	0.3.1	0.3.1.1	
# ::edge	prefer-01	ARG0	down	0	0.0	
# ::edge	prefer-01	ARG1	fate	0	0.1	
# ::edge	prefer-01	ARG2	accident	0	0.4	
(p / prefer-01 
      :ARG0 (d / down) 
      :ARG1 (f / fate 
            :mod (a3 / any)) 
      :ARG1-of (c2 / count-02 
            :ARG0 (h / he)) 
      :ARG1-of (c / convince-01 
            :ARG0 (h2 / he 
                  :ARG0-of (c3 / creep-01 
                        :ARG1 (d2 / dark) 
                        :op-of (a5 / and)) 
                  :ARG1-of (d3 / dare-01 
                        :ARG0 (l / last))) 
            :ARG1-of (m / manage-02 
                  :op-of (a4 / and) 
                  :time (a / amongst))) 
      :ARG2 (a2 / accident))

# ::snt includes cancellation due to accident or illness to members of the party close relatives or business colleagues redundancy jury service cancelled leave orders for hm forces and pregnancy but not if delivery is due within 75 days of departure  section b 1, personal accident 15000 payable in respect of loss of life limbs eyes or permanent total disablement
# ::tok includes cancellation due to accident or illness to members of the party close relatives or business colleagues redundancy jury service cancelled leave orders for hm forces and pregnancy but not if delivery is due within 75 days of departure section b 1 , personal accident 15000 payable in respect of loss of life limbs eyes or permanent total disablement
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:34.328
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the high percentage of un or underinsured tortfeasors even in motorcar accidents ensures that the accident cost is in practice often met by defendants such as municipal authorities responsible for street maintenance whose share of fault may be negligible, in addition it has encouraged a vast extension of duties of affirmative action so as to impose responsibility on individuals and entities for mere omissions to prevent the risk of accidentprone behaviour by others hence the liability visited on owners of commercial and residential premises for robberies and rapes for failures by public officials insurance agents and the like to inspect the work performed by others for the ubiquitous failures to warn consumers against misuse of products and an unimaginable array of dangers, in short anyone even remotely related who could have interceded to prevent an accident is exposed to the risk of substantial liability
# ::tok the high percentage of un or underinsured tortfeasors even in motorcar accidents ensures that the accident cost is in practice often met by defendants such as municipal authorities responsible for street maintenance whose share of fault may be negligible , in addition it has encouraged a vast extension of duties of affirmative action so as to impose responsibility on individuals and entities for mere omissions to prevent the risk of accidentprone behaviour by others hence the liability visited on owners of commercial and residential premises for robberies and rapes for failures by public officials insurance agents and the like to inspect the work performed by others for the ubiquitous failures to warn consumers against misuse of products and an unimaginable array of dangers , in short anyone even remotely related who could have interceded to prevent an accident is exposed to the risk of substantial liability
# ::alignments 145-146|0.0.1.1.0.1.0 144-145|0.0.1.1.0.1.0.0 142-143|0.0.1.1.0.1 139-140|0.0.1.1.0 137-138|0.0.1.1.0.0 135-136|0.0.1.1 131-132|0.0.0.2 129-130|0.0.0.0 128-129|0.0.0.0.1 126-127|0.0.0.0.0 125-126|0.0.3.2 122-123|0 120-121|0.0.0.1 119-120|0.0.0.1.0 117-118|0.0.0 116-117|0.0.2.0 114-115|0.0.2.0.0 112-113|0.0.1.0+0.0.1 111-112|0.0 109-110|0.0.2 105-106|0.0.4 103-104|0.0.3 100-101|0.0.3.1 96-97|0.0.3.0.0.0.0.0 95-96|0.0.3.0.0.0.0.1.0.0 94-95|0.0.3.0.0.0.0.1.0 93-94|0.0.3.0.0.0.0.1.0.0.0.1+0.0.3.0.0.0.0.1.0.0.0 92-93|0.0.3.0.0.0.0.1.0.0.0.0 90-91|0.0.3.0.0.0.0.1 88-89|0.0.3.0.0.0.0 87-88|0.0.3.0.0.0.0.2 84-85|0.0.3.0.2 82-83|0.0.3.0 81-82|0.0.3.0.1 79-80|0.0.3.0.0.0+0.0.3.0.0 77-78|0.0.3.0.0.1.0.0.0.0 76-77|0.0.3.0.0.1.0.0.0.0.0 73-74|0.0.3.0.0.1.0.0.0 71-72|0.0.3.0.0.1.0.0 68-69|0.0.3.0.0.1.0 66-67|0.0.3.0.0.1 63-64|0.0.3.0.0.1.0.1 61-62|0.0.3.0.0.1.1.1.1.0 60-61|0.0.3.0.0.1.1.1.1 59-60|0.0.3.0.0.1.1.0 57-58|0.0.3.0.0.1.1.1 56-57|0.0.3.0.0.1.1 53-54|0.0.3.0.0.1.1.3 52-53|0.0.3.0.0.1.1.1.0 51-52|0.0.3.0.0.1.1.1.0.0 49-50|0.0.3.0.0.1.1.1.0.1 47-48|0.0.3.0.0.1.1.1.0.1.0 46-47|0.0.3.0.0.1.1.1.0.1.0.1 44-45|0.0.3.0.0.1.1.1.0.1.0.0 42-43|0.0.3.0.0.1.1.1.0.1.0.0.0 38-39|0.0.3.0.0.1.1.2.0.1 36-37|0.0.3.0.0.1.1.2.0.1.1.0+0.0.3.0.0.1.1.2.0.1.1 35-36|0.0.3.0.0.1.1.2 33-34|0.0.3.0.0.1.1.2.0 31-32|0.0.3.0.0.1.1.2.0.1.0 30-31|0.0.3.0.0.1.1.2.0.1.0.0 28-29|0.0.3.0.0.1.1.2.0.1.0.1 27-28|0.0.3.0.0.1.1.2.0.1.0.1.1.0 26-27|0.0.3.0.0.1.1.2.0.1.0.1.1 24-25|0.0.3.0.0.1.1.2.0.1.0.1.0.0.1.2.0 23-24|0.0.3.0.0.1.1.2.0.1.0.1.0.0.1.2 21-22|0.0.3.0.0.1.1.2.0.1.0.1.0.0.1 20-21|0.0.3.0.0.1.1.2.0.1.0.1.0.0.1.1 19-20|0.0.3.0.0.1.1.2.0.1.0.1.0 16-17|0.0.3.0.0.1.1.2.0.1.0.1.0.0 15-16|0.0.3.0.0.1.1.2.0.1.0.1.0.0.0 11-12|0.0.3.0.0.1.1.2.0.0 5-6|0.0.3.0.0.1.1.2.0.1.0.1.0.0.1.0 2-3|0.0.3.0.0.1.1.2.0.1.0.1.0.0.1.0.0 1-2|0.0.3.0.0.1.1.2.0.1.0.1.0.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:47.115
# ::node	0	danger	122-123
# ::node	0.0	warn-01	111-112
# ::node	0.0.0	and	117-118
# ::node	0.0.0.0	relate-01	129-130
# ::node	0.0.0.0.0	anyone	126-127
# ::node	0.0.0.0.1	remote	128-129
# ::node	0.0.0.1	array	120-121
# ::node	0.0.0.1.0	imagine-01	119-120
# ::node	0.0.0.2	possible	131-132
# ::node	0.0.1	person	112-113
# ::node	0.0.1.0	consume-01	112-113
# ::node	0.0.1.1	prevent-01	135-136
# ::node	0.0.1.1.0	expose-01	139-140
# ::node	0.0.1.1.0.0	accident	137-138
# ::node	0.0.1.1.0.1	risk-01	142-143
# ::node	0.0.1.1.0.1.0	liability	145-146
# ::node	0.0.1.1.0.1.0.0	substantial	144-145
# ::node	0.0.2	fail-01	109-110
# ::node	0.0.2.0	product	116-117
# ::node	0.0.2.0.0	misuse-01	114-115
# ::node	0.0.3	perform-01	103-104
# ::node	0.0.3.0	and	82-83
# ::node	0.0.3.0.0	person	79-80
# ::node	0.0.3.0.0.0	own-01	79-80
# ::node	0.0.3.0.0.0.0	rape-01	88-89
# ::node	0.0.3.0.0.0.0.0	and	96-97
# ::node	0.0.3.0.0.0.0.1	fail-01	90-91
# ::node	0.0.3.0.0.0.0.1.0	insure-02	94-95
# ::node	0.0.3.0.0.0.0.1.0.0	agent	95-96
# ::node	0.0.3.0.0.0.0.1.0.0.0	have-org-role-91	93-94
# ::node	0.0.3.0.0.0.0.1.0.0.0.0	public	92-93
# ::node	0.0.3.0.0.0.0.1.0.0.0.1	official	93-94
# ::node	0.0.3.0.0.0.0.2	and	87-88
# ::node	0.0.3.0.0.1	prevent-01	66-67
# ::node	0.0.3.0.0.1.0	risk-01	68-69
# ::node	0.0.3.0.0.1.0.0	behave-01	71-72
# ::node	0.0.3.0.0.1.0.0.0	other	73-74
# ::node	0.0.3.0.0.1.0.0.0.0	visit-01	77-78
# ::node	0.0.3.0.0.1.0.0.0.0.0	liability	76-77
# ::node	0.0.3.0.0.1.0.1	mere	63-64
# ::node	0.0.3.0.0.1.1	impose-01	56-57
# ::node	0.0.3.0.0.1.1.0	individual	59-60
# ::node	0.0.3.0.0.1.1.1	responsible-41	57-58
# ::node	0.0.3.0.0.1.1.1.0	action	52-53
# ::node	0.0.3.0.0.1.1.1.0.0	affirmative	51-52
# ::node	0.0.3.0.0.1.1.1.0.1	duty	49-50
# ::node	0.0.3.0.0.1.1.1.0.1.0	extend-01	47-48
# ::node	0.0.3.0.0.1.1.1.0.1.0.0	encourage-01	44-45
# ::node	0.0.3.0.0.1.1.1.0.1.0.0.0	it	42-43
# ::node	0.0.3.0.0.1.1.1.0.1.0.1	vast	46-47
# ::node	0.0.3.0.0.1.1.1.1	and	60-61
# ::node	0.0.3.0.0.1.1.1.1.0	entity	61-62
# ::node	0.0.3.0.0.1.1.2	fault-01	35-36
# ::node	0.0.3.0.0.1.1.2.0	share-01	33-34
# ::node	0.0.3.0.0.1.1.2.0.0	accident	11-12
# ::node	0.0.3.0.0.1.1.2.0.1	negligible	38-39
# ::node	0.0.3.0.0.1.1.2.0.1.0	maintain-01	31-32
# ::node	0.0.3.0.0.1.1.2.0.1.0.0	street	30-31
# ::node	0.0.3.0.0.1.1.2.0.1.0.1	responsible-41	28-29
# ::node	0.0.3.0.0.1.1.2.0.1.0.1.0	practice-01	19-20
# ::node	0.0.3.0.0.1.1.2.0.1.0.1.0.0	cost-01	16-17
# ::node	0.0.3.0.0.1.1.2.0.1.0.1.0.0.0	accident	15-16
# ::node	0.0.3.0.0.1.1.2.0.1.0.1.0.0.1	meet-03	21-22
# ::node	0.0.3.0.0.1.1.2.0.1.0.1.0.0.1.0	or	5-6
# ::node	0.0.3.0.0.1.1.2.0.1.0.1.0.0.1.0.0	percentage	2-3
# ::node	0.0.3.0.0.1.1.2.0.1.0.1.0.0.1.0.0.0	high	1-2
# ::node	0.0.3.0.0.1.1.2.0.1.0.1.0.0.1.1	often	20-21
# ::node	0.0.3.0.0.1.1.2.0.1.0.1.0.0.1.2	defendant	23-24
# ::node	0.0.3.0.0.1.1.2.0.1.0.1.0.0.1.2.0	such	24-25
# ::node	0.0.3.0.0.1.1.2.0.1.0.1.1	municipal	26-27
# ::node	0.0.3.0.0.1.1.2.0.1.0.1.1.0	authority	27-28
# ::node	0.0.3.0.0.1.1.2.0.1.1	date-entity	36-37
# ::node	0.0.3.0.0.1.1.2.0.1.1.0	5	36-37
# ::node	0.0.3.0.0.1.1.3	so	53-54
# ::node	0.0.3.0.1	commerce	81-82
# ::node	0.0.3.0.2	premise	84-85
# ::node	0.0.3.1	inspect-01	100-101
# ::node	0.0.3.2	short	125-126
# ::node	0.0.4	other	105-106
# ::root	0	danger
(d / danger 
      :ARG0-of (w / warn-01 
            :ARG1 (a4 / and 
                  :ARG2-of (r2 / relate-01 
                        :ARG1 (a2 / anyone) 
                        :manner (r3 / remote)) 
                  :op1 (a3 / array 
                        :ARG1-of (i / imagine-01)) 
                  :op2 (p2 / possible)) 
            :ARG2 (p4 / person 
                  :ARG0-of (c / consume-01) 
                  :ARG0-of (p / prevent-01 
                        :ARG1 (e / expose-01 
                              :ARG1 (a / accident) 
                              :ARG2 (r / risk-01 
                                    :ARG1 (l / liability 
                                          :mod (s / substantial)))))) 
            :ARG2-of (f / fail-01 
                  :ARG1 (p3 / product 
                        :ARG1-of (m / misuse-01))) 
            :purpose-of (p5 / perform-01 
                  :ARG1 (a8 / and 
                        :op1 (p8 / person 
                              :ARG0-of (o3 / own-01 
                                    :ARG2 (r4 / rape-01 
                                          :ARG0 (a5 / and) 
                                          :ARG1 (f2 / fail-01 
                                                :ARG1-of (i3 / insure-02 
                                                      :mod-of (a6 / agent 
                                                            :ARG0-of (h / have-org-role-91 
                                                                  :ARG1 (p6 / public) 
                                                                  :ARG2 (o2 / official))))) 
                                          :op-of (a7 / and))) 
                              :ARG0-of (p9 / prevent-01 
                                    :ARG1 (r5 / risk-01 
                                          :ARG0 (b / behave-01 
                                                :ARG1 (o4 / other 
                                                      :ARG1-of (v / visit-01 
                                                            :ARG0 (l2 / liability)))) 
                                          :ARG1 (m2 / mere)) 
                                    :purpose-of (i5 / impose-01 
                                          :ARG0 (i4 / individual) 
                                          :ARG1 (r6 / responsible-41 
                                                :ARG0 (a10 / action 
                                                      :mod (a11 / affirmative) 
                                                      :part (d2 / duty 
                                                            :ARG1-of (e3 / extend-01 
                                                                  :ARG1-of (e4 / encourage-01 
                                                                        :ARG0 (i6 / it)) 
                                                                  :mod (v2 / vast)))) 
                                                :ARG1 (a9 / and 
                                                      :op1 (e2 / entity))) 
                                          :ARG1-of (f3 / fault-01 
                                                :ARG1-of (s4 / share-01 
                                                      :ARG0 (a14 / accident) 
                                                      :domain-of (n / negligible 
                                                            :ARG0-of (m3 / maintain-01 
                                                                  :ARG1 (s5 / street) 
                                                                  :ARG2-of (r7 / responsible-41 
                                                                        :ARG1 (p10 / practice-01 
                                                                              :ARG1 (c3 / cost-01 
                                                                                    :ARG1 (a13 / accident) 
                                                                                    :ARG1-of (m5 / meet-03 
                                                                                          :ARG0 (o6 / or 
                                                                                                :op1 (p11 / percentage 
                                                                                                      :mod (h2 / high))) 
                                                                                          :frequency (o5 / often) 
                                                                                          :location (d4 / defendant 
                                                                                                :mod-of (s6 / such))))) 
                                                                        :mod (m4 / municipal 
                                                                              :mod-of (a12 / authority)))) 
                                                            :domain-of (d3 / date-entity 
                                                                  :month 5)))) 
                                          :purpose-of (s3 / so)))) 
                        :op2 (c2 / commerce) 
                        :op3 (p7 / premise)) 
                  :ARG1-of (i2 / inspect-01) 
                  :duration (s2 / short)) 
            :purpose-of (o / other)))

# ::snt perhaps it was no accident that dowding almost alone among commanders of the r
# ::tok perhaps it was no accident that dowding almost alone among commanders of the r
# ::alignments 10-11|0.0.0.0+0.0.0.0.0 9-10|0.0.0.0.0.0 8-9|0.0.0.0.0.0.0 7-8|0.0.0.0.0.0.0.0 4-5|0.0.0 3-4|0.0.0.1 1-2|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:47.146
# ::node	0	perhaps	0-1
# ::node	0.0	it	1-2
# ::node	0.0.0	accident	4-5
# ::node	0.0.0.0	command-02	10-11
# ::node	0.0.0.0.0	person	10-11
# ::node	0.0.0.0.0.0	among	9-10
# ::node	0.0.0.0.0.0.0	alone	8-9
# ::node	0.0.0.0.0.0.0.0	almost	7-8
# ::node	0.0.0.1	-	3-4
# ::root	0	perhaps
(p2 / perhaps 
      :mod-of (i / it 
            :domain-of (a4 / accident 
                  :ARG1-of (c / command-02 
                        :ARG0 (p / person 
                              :op-of (a / among 
                                    :mod (a2 / alone 
                                          :mod (a3 / almost))))) 
                  :polarity (- / -))))

# ::snt as a child he had seen a fatal car accident involving pueblos
# ::tok as a child he had seen a fatal car accident involving pueblos
# ::alignments 10-11|0.1.0 9-10|0.1 8-9|0.1.1 7-8|0.1.0.0 5-6|0 3-4|0.0 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:47.264
# ::node	0	see-01	5-6
# ::node	0.0	he	3-4
# ::node	0.0.0	child	2-3
# ::node	0.1	accident	9-10
# ::node	0.1.0	involve-01	10-11
# ::node	0.1.0.0	fatal	7-8
# ::node	0.1.1	car	8-9
# ::root	0	see-01
# ::edge	accident	location	car	0.1	0.1.1	
# ::edge	child	poss	he	0.0.0	0.0	
# ::edge	involve-01	ARG0	accident	0.1.0	0.1	
# ::edge	involve-01	ARG1	fatal	0.1.0	0.1.0.0	
# ::edge	see-01	ARG0	he	0	0.0	
# ::edge	see-01	ARG1	accident	0	0.1	
(s / see-01 
      :ARG0 (h / he 
            :poss-of (c2 / child)) 
      :ARG1 (a / accident 
            :ARG0-of (i / involve-01 
                  :ARG1 (f / fatal)) 
            :location (c / car)))

# ::snt it was after dark when the accident happened
# ::tok it was after dark when the accident happened
# ::alignments 7-8|0 6-7|0.0 3-4|0.1.1 2-3|0.1 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:47.292
# ::node	0	happen-01	7-8
# ::node	0.0	accident	6-7
# ::node	0.1	after	2-3
# ::node	0.1.0	it	0-1
# ::node	0.1.1	dark	3-4
# ::root	0	happen-01
# ::edge	after	domain	it	0.1	0.1.0	
# ::edge	after	op1	dark	0.1	0.1.1	
# ::edge	after	time	happen-01	0.1	0	
# ::edge	happen-01	ARG1	accident	0	0.0	
(h / happen-01 
      :ARG1 (a / accident) 
      :time-of (a2 / after 
            :domain (i / it) 
            :op1 (d / dark)))

# ::snt daniel told me he liked to stroll about on such evenings discovering these momentary beauties which accidents of light or shade or unsuspected angles of perspective brought back untarnished from former days
# ::tok daniel told me he liked to stroll about on such evenings discovering these momentary beauties which accidents of light or shade or unsuspected angles of perspective brought back untarnished from former days
# ::alignments 31-32|0.0.0.1.1.0.1.1.0.0.1+0.0.0.1.1.0.1.1.0.0 30-31|0.0.0.1.1.0.1.1.0.0.0 27-28|0.0.0.1.1.0.1.0 25-26|0.0.0.0 23-24|0.0.0.1.1 22-23|0.0.0.1.1.0.2+0.0.0.1.1.0 21-22|0.0.0.1 20-21|0 19-20|0.0 18-19|0.0.0 16-17|0.0.0.1.0 11-12|0.0.0.1.1.0.1.1.0 9-10|0.0.0.1.1.0.0 4-5|0.0.0.1.1.0.1.1.1 3-4|0.0.0.1.1.0.1.1 1-2|0.0.0.1.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:47.526
# ::node	0	shade	20-21
# ::node	0.0	or	19-20
# ::node	0.0.0	light	18-19
# ::node	0.0.0.0	perspective	25-26
# ::node	0.0.0.1	or	21-22
# ::node	0.0.0.1.0	accident	16-17
# ::node	0.0.0.1.1	angle	23-24
# ::node	0.0.0.1.1.0	suspect-01	22-23
# ::node	0.0.0.1.1.0.0	such	9-10
# ::node	0.0.0.1.1.0.1	tell-01	1-2
# ::node	0.0.0.1.1.0.1.0	back	27-28
# ::node	0.0.0.1.1.0.1.1	he	3-4
# ::node	0.0.0.1.1.0.1.1.0	discover-01	11-12
# ::node	0.0.0.1.1.0.1.1.0.0	temporal-quantity	31-32
# ::node	0.0.0.1.1.0.1.1.0.0.0	former	30-31
# ::node	0.0.0.1.1.0.1.1.0.0.1	day	31-32
# ::node	0.0.0.1.1.0.1.1.1	like-01	4-5
# ::node	0.0.0.1.1.0.2	-	22-23
# ::root	0	shade
(s2 / shade 
      :op-of (o2 / or 
            :op1 (l / light 
                  :mod (p / perspective) 
                  :op-of (o / or 
                        :op1 (a2 / accident) 
                        :op2 (a / angle 
                              :ARG1-of (s / suspect-01 
                                    :ARG0 (s3 / such) 
                                    :ARG1-of (t2 / tell-01 
                                          :ARG0 (b / back) 
                                          :ARG2 (h / he 
                                                :ARG0-of (d2 / discover-01 
                                                      :ARG1 (t / temporal-quantity 
                                                            :op-of (f / former) 
                                                            :unit (d / day))) 
                                                :ARG0-of (l2 / like-01))) 
                                    :polarity -))))))

# ::snt   mr christopher cutting a casualty surgeon from somerset said our departments are exposed particularly at weekends to increasing numbers of people who seem to think that accident and emergency departments are good places to have a fight
# ::tok mr christopher cutting a casualty surgeon from somerset said our departments are exposed particularly at weekends to increasing numbers of people who seem to think that accident and emergency departments are good places to have a fight
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:47.527
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt 9 deaths a 100000 people in road accidents
# ::tok 9 deaths a 100000 people in road accidents
# ::alignments 7-8|0.2.0.0 6-7|0.2.0 3-4|0.3+0.1+0.0+0 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:47.546
# ::node	0	date-entity	3-4
# ::node	0.0	0	3-4
# ::node	0.1	0	3-4
# ::node	0.2	9	0-1
# ::node	0.2.0	road	6-7
# ::node	0.2.0.0	accident	7-8
# ::node	0.3	10	3-4
# ::root	0	date-entity
# ::edge	9	op1	date-entity	0.2	0	
# ::edge	accident	location	road	0.2.0.0	0.2.0	
# ::edge	date-entity	day	0	0	0.0	
# ::edge	date-entity	month	0	0	0.1	
# ::edge	date-entity	year	10	0	0.3	
# ::edge	road	op1	9	0.2.0	0.2	
(d / date-entity 
      :day 0 
      :month 0 
      :op-of (9 / 9 
            :op-of (r / road 
                  :location-of (a / accident))) 
      :year 10)

# ::snt now they take in every sort of wild creature mostly from road accidents
# ::tok now they take in every sort of wild creature mostly from road accidents
# ::alignments 12-13|0.0.0.1 11-12|0.0.0.1.0 9-10|0.0.0.1.1 8-9|0.0 7-8|0 5-6|0.0.0 4-5|0.0.0.0 1-2|0.0.0.1.2 0-1|0.0.0.1.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:47.574
# ::node	0	wild	7-8
# ::node	0.0	creature	8-9
# ::node	0.0.0	sort	5-6
# ::node	0.0.0.0	every	4-5
# ::node	0.0.0.1	accident	12-13
# ::node	0.0.0.1.0	road	11-12
# ::node	0.0.0.1.1	most	9-10
# ::node	0.0.0.1.2	they	1-2
# ::node	0.0.0.1.2.0	now	0-1
# ::root	0	wild
(w / wild 
      :mod-of (c / creature 
            :mod (s / sort 
                  :mod (e / every) 
                  :topic (a / accident 
                        :location (r / road) 
                        :mod (m / most) 
                        :poss (t / they 
                              :time (n / now))))))

# ::snt   on easter monday last year my youngest son was killed in a car accident and after many months of heartsearching we decided to put up a stone in his memory
# ::tok on easter monday last year my youngest son was killed in a car accident and after many months of heartsearching we decided to put up a stone in his memory
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:47.574
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt bob wright who is a clinical nurse specialising in crisis care in the accident and emergency department at leeds general infirmary has done years of research and written books and articles for medical journals on coping with bereavement, in a time to die bob is filmed at work in the accident ward where he explains what happens to the relatives of injured people who are brought in
# ::tok bob wright who is a clinical nurse specialising in crisis care in the accident and emergency department at leeds general infirmary has done years of research and written books and articles for medical journals on coping with bereavement , in a time to die bob is filmed at work in the accident ward where he explains what happens to the relatives of injured people who are brought in
# ::alignments 62-63|0.4.2.0.0.0.1 60-61|0.4.2.0.0.0.0.0.0.0.1.0+0.4.2.0.0.0.0.0.0.0.1 57-58|0.4.2.0.0.0.0.0.0.0 55-56|0.4.2.0.0.0.0.0.0 54-55|0.4.2.0.0.0.0.0 52-53|0.4.2.0.0.0.0.0.0.1 51-52|0.4.2.0.0.0.0.0.0.1.0 43-44|0.4.2.0.0.0.0 41-42|0.4.2.0.0.0 35-36|0.4.2.0.0.0.0.0.0.0.0 33-34|0.4.2.0.0.0.0.0.0.0.0.0 32-33|0.4.2.0.0.0.0.0.0.0.0.0.0 30-31|0.4.0 29-30|0.4.2 28-29|0.4.2.2 27-28|0.4.2.0.0 26-27|0.4.2.0 25-26|0.4 23-24|0.4.2.1.0+0.4.2.1 19-20|0.4.2.0.0.0.0.0.0.0.0.1 16-17|0.3 15-16|0.2 14-15|0 13-14|0.1 10-11|0.0 9-10|0.0.0 6-7|0.4.1.0+0.4.1 5-6|0.4.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:48.820
# ::node	0	and	14-15
# ::node	0.0	care-01	10-11
# ::node	0.0.0	crisis	9-10
# ::node	0.1	accident	13-14
# ::node	0.2	emergency	15-16
# ::node	0.3	department	16-17
# ::node	0.4	research-01	25-26
# ::node	0.4.0	article	30-31
# ::node	0.4.1	have-org-role-91	6-7
# ::node	0.4.1.0	nurse	6-7
# ::node	0.4.1.0.0	clinical	5-6
# ::node	0.4.2	and	29-30
# ::node	0.4.2.0	and	26-27
# ::node	0.4.2.0.0	write-01	27-28
# ::node	0.4.2.0.0.0	time	41-42
# ::node	0.4.2.0.0.0.0	die-01	43-44
# ::node	0.4.2.0.0.0.0.0	he	54-55
# ::node	0.4.2.0.0.0.0.0.0	explain-01	55-56
# ::node	0.4.2.0.0.0.0.0.0.0	happen-01	57-58
# ::node	0.4.2.0.0.0.0.0.0.0.0	cope-01	35-36
# ::node	0.4.2.0.0.0.0.0.0.0.0.0	journal	33-34
# ::node	0.4.2.0.0.0.0.0.0.0.0.0.0	medicine	32-33
# ::node	0.4.2.0.0.0.0.0.0.0.0.1	general	19-20
# ::node	0.4.2.0.0.0.0.0.0.0.1	have-rel-role-91	60-61
# ::node	0.4.2.0.0.0.0.0.0.0.1.0	relative	60-61
# ::node	0.4.2.0.0.0.0.0.0.1	ward-01	52-53
# ::node	0.4.2.0.0.0.0.0.0.1.0	accident	51-52
# ::node	0.4.2.0.0.0.1	injure-01	62-63
# ::node	0.4.2.1	temporal-quantity	23-24
# ::node	0.4.2.1.0	year	23-24
# ::node	0.4.2.2	book	28-29
# ::root	0	and
# ::edge	and	op1	accident	0	0.1	
# ::edge	and	op1	temporal-quantity	0.4.2	0.4.2.1	
# ::edge	and	op1	write-01	0.4.2.0	0.4.2.0.0	
# ::edge	and	op2	and	0.4.2.0	0.4.2	
# ::edge	and	op2	emergency	0	0.2	
# ::edge	and	op2	research-01	0.4.2	0.4	
# ::edge	and	op3	book	0.4.2	0.4.2.2	
# ::edge	and	op3	department	0	0.3	
# ::edge	and	op4	research-01	0	0.4	
# ::edge	care-01	ARG0	and	0.0	0	
# ::edge	care-01	ARG1	crisis	0.0	0.0.0	
# ::edge	cope-01	ARG0	journal	0.4.2.0.0.0.0.0.0.0.0	0.4.2.0.0.0.0.0.0.0.0.0	
# ::edge	cope-01	ARG1	general	0.4.2.0.0.0.0.0.0.0.0	0.4.2.0.0.0.0.0.0.0.0.1	
# ::edge	die-01	ARG0	time	0.4.2.0.0.0.0	0.4.2.0.0.0	
# ::edge	die-01	ARG1	he	0.4.2.0.0.0.0	0.4.2.0.0.0.0.0	
# ::edge	explain-01	ARG0	he	0.4.2.0.0.0.0.0.0	0.4.2.0.0.0.0.0	
# ::edge	explain-01	ARG1	happen-01	0.4.2.0.0.0.0.0.0	0.4.2.0.0.0.0.0.0.0	
# ::edge	explain-01	time	ward-01	0.4.2.0.0.0.0.0.0	0.4.2.0.0.0.0.0.0.1	
# ::edge	happen-01	ARG1	cope-01	0.4.2.0.0.0.0.0.0.0	0.4.2.0.0.0.0.0.0.0.0	
# ::edge	happen-01	ARG2	have-rel-role-91	0.4.2.0.0.0.0.0.0.0	0.4.2.0.0.0.0.0.0.0.1	
# ::edge	have-org-role-91	ARG2	nurse	0.4.1	0.4.1.0	
# ::edge	have-rel-role-91	ARG2	relative	0.4.2.0.0.0.0.0.0.0.1	0.4.2.0.0.0.0.0.0.0.1.0	
# ::edge	injure-01	ARG1	time	0.4.2.0.0.0.1	0.4.2.0.0.0	
# ::edge	journal	mod	medicine	0.4.2.0.0.0.0.0.0.0.0.0	0.4.2.0.0.0.0.0.0.0.0.0.0	
# ::edge	nurse	mod	clinical	0.4.1.0	0.4.1.0.0	
# ::edge	research-01	ARG1	article	0.4	0.4.0	
# ::edge	research-01	ARG2	have-org-role-91	0.4	0.4.1	
# ::edge	temporal-quantity	unit	year	0.4.2.1	0.4.2.1.0	
# ::edge	ward-01	ARG1	accident	0.4.2.0.0.0.0.0.0.1	0.4.2.0.0.0.0.0.0.1.0	
# ::edge	write-01	ARG1	time	0.4.2.0.0	0.4.2.0.0.0	
(a5 / and 
      :ARG0-of (c2 / care-01 
            :ARG1 (c3 / crisis)) 
      :op1 (a6 / accident) 
      :op2 (e2 / emergency) 
      :op3 (d2 / department) 
      :op4 (r2 / research-01 
            :ARG1 (a2 / article) 
            :ARG2 (h4 / have-org-role-91 
                  :ARG2 (n / nurse 
                        :mod (c4 / clinical))) 
            :op-of (a3 / and 
                  :op-of (a4 / and 
                        :op1 (w2 / write-01 
                              :ARG1 (t / time 
                                    :ARG0-of (d / die-01 
                                          :ARG1 (h3 / he 
                                                :ARG0-of (e / explain-01 
                                                      :ARG1 (h2 / happen-01 
                                                            :ARG1 (c / cope-01 
                                                                  :ARG0 (j / journal 
                                                                        :mod (m / medicine)) 
                                                                  :ARG1 (g / general)) 
                                                            :ARG2 (h / have-rel-role-91 
                                                                  :ARG2 (r / relative))) 
                                                      :time (w / ward-01 
                                                            :ARG1 (a / accident))))) 
                                    :ARG1-of (i / injure-01)))) 
                  :op1 (t2 / temporal-quantity 
                        :unit (y / year)) 
                  :op2 (b / book))))

# ::snt despite on the spot first aid doctors were unable to save a teachers finger after an accident with a circular saw
# ::tok despite on the spot first aid doctors were unable to save a teachers finger after an accident with a circular saw
# ::alignments 20-21|0.0.0.0.1.1 16-17|0.0.0.0.1.0 14-15|0.0.0.0.1 13-14|0.0.0.0.0 12-13|0.0.0.0.0.0.0+0.0.0.0.0.0 10-11|0.0.0.0 6-7|0.0.0 5-6|0.0 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:48.869
# ::node	0	spot	3-4
# ::node	0.0	aid-01	5-6
# ::node	0.0.0	doctor	6-7
# ::node	0.0.0.0	save-02	10-11
# ::node	0.0.0.0.0	finger	13-14
# ::node	0.0.0.0.0.0	person	12-13
# ::node	0.0.0.0.0.0.0	teach-01	12-13
# ::node	0.0.0.0.1	after	14-15
# ::node	0.0.0.0.1.0	accident	16-17
# ::node	0.0.0.0.1.1	see-01	20-21
# ::root	0	spot
(s3 / spot 
      :location-of (a3 / aid-01 
            :ARG0 (d / doctor 
                  :ARG0-of (s2 / save-02 
                        :ARG1 (f / finger 
                              :mod (p / person 
                                    :ARG0-of (t / teach-01))) 
                        :time (a2 / after 
                              :op1 (a / accident) 
                              :op2 (s / see-01))))))

# ::snt indeed a noted lawyereconomist has given his benediction to the overall record during this era for reflecting a design to bring about an efficient costjustified level of accidents and safety rather than any systematic bias in favour of industrial growth
# ::tok indeed a noted lawyereconomist has given his benediction to the overall record during this era for reflecting a design to bring about an efficient costjustified level of accidents and safety rather than any systematic bias in favour of industrial growth
# ::alignments 39-40|0.2.0.0 38-39|0.2.0.0.0 36-37|0.2.0 34-35|0.2 33-34|0.2.1 32-33|0.2.2 29-30|0.1 28-29|0 27-28|0.0.2 25-26|0.0 23-24|0.0.1 20-21|0.0.0 18-19|0.0.0.0 16-17|0.0.0.0.0 14-15|0.0.0.0.0.1 13-14|0.0.0.0.0.1.1 11-12|0.0.0.0.0.1.0.0 10-11|0.0.0.0.0.1.0.0.0 5-6|0.0.0.0.0.1.0 2-3|0.0.1.0 0-1|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:49.090
# ::node	0	and	28-29
# ::node	0.0	level	25-26
# ::node	0.0.0	bring-01	20-21
# ::node	0.0.0.0	design-01	18-19
# ::node	0.0.0.0.0	reflect-01	16-17
# ::node	0.0.0.0.0.0	indeed	0-1
# ::node	0.0.0.0.0.1	era	14-15
# ::node	0.0.0.0.0.1.0	give-01	5-6
# ::node	0.0.0.0.0.1.0.0	record	11-12
# ::node	0.0.0.0.0.1.0.0.0	overall	10-11
# ::node	0.0.0.0.0.1.1	this	13-14
# ::node	0.0.1	efficiency	23-24
# ::node	0.0.1.0	note-01	2-3
# ::node	0.0.2	accident	27-28
# ::node	0.1	safe-41	29-30
# ::node	0.2	bias-01	34-35
# ::node	0.2.0	favor-01	36-37
# ::node	0.2.0.0	grow-01	39-40
# ::node	0.2.0.0.0	industry	38-39
# ::node	0.2.1	systematic	33-34
# ::node	0.2.2	any	32-33
# ::root	0	and
# ::edge	and	op1	level	0	0.0	
# ::edge	and	op2	safe-41	0	0.1	
# ::edge	and	op3	bias-01	0	0.2	
# ::edge	bias-01	ARG1	favor-01	0.2	0.2.0	
# ::edge	bias-01	mod	any	0.2	0.2.2	
# ::edge	bias-01	mod	systematic	0.2	0.2.1	
# ::edge	bring-01	ARG1	level	0.0.0	0.0	
# ::edge	design-01	ARG1	bring-01	0.0.0.0	0.0.0	
# ::edge	era	manner	reflect-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	era	mod	this	0.0.0.0.0.1	0.0.0.0.0.1.1	
# ::edge	favor-01	ARG1	grow-01	0.2.0	0.2.0.0	
# ::edge	give-01	ARG1	era	0.0.0.0.0.1.0	0.0.0.0.0.1	
# ::edge	give-01	ARG2	record	0.0.0.0.0.1.0	0.0.0.0.0.1.0.0	
# ::edge	grow-01	ARG1	industry	0.2.0.0	0.2.0.0.0	
# ::edge	level	mod	accident	0.0	0.0.2	
# ::edge	level	mod	efficiency	0.0	0.0.1	
# ::edge	note-01	ARG1	efficiency	0.0.1.0	0.0.1	
# ::edge	record	mod	overall	0.0.0.0.0.1.0.0	0.0.0.0.0.1.0.0.0	
# ::edge	reflect-01	ARG0	indeed	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	reflect-01	ARG1	design-01	0.0.0.0.0	0.0.0.0	
(a2 / and 
      :op1 (l / level 
            :ARG1-of (b2 / bring-01 
                  :ARG1-of (d / design-01 
                        :ARG1-of (r / reflect-01 
                              :ARG0 (i2 / indeed) 
                              :manner-of (e2 / era 
                                    :ARG1-of (g2 / give-01 
                                          :ARG2 (r2 / record 
                                                :mod (o / overall))) 
                                    :mod (t / this))))) 
            :mod (e / efficiency 
                  :ARG1-of (n / note-01)) 
            :mod (a3 / accident)) 
      :op2 (s2 / safe-41) 
      :op3 (b / bias-01 
            :ARG1 (f / favor-01 
                  :ARG1 (g / grow-01 
                        :ARG1 (i / industry))) 
            :mod (s / systematic) 
            :mod (a / any)))

# ::snt when theres a fatal accident on the roads we do nothing because people dont think there but for the grace of god go i,   they regard traffic accidents as things that happen to other people,  the word accident is a complete misnomer
# ::tok when theres a fatal accident on the roads we do nothing because people dont think there but for the grace of god go i , they regard traffic accidents as things that happen to other people , the word accident is a complete misnomer
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:49.092
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt we pray for all those killed each day in wars disasters and accidents throughout the world for prisoners of conscience and all who suffer torture starvation or maltreatment and for charles and catherine ellul bernard murphy thomas connolly kathleen donohue betty butler michael sweeny james flood helen anonuevo and all whose anniversaries fall at this time of the year
# ::tok we pray for all those killed each day in wars disasters and accidents throughout the world for prisoners of conscience and all who suffer torture starvation or maltreatment and for charles and catherine ellul bernard murphy thomas connolly kathleen donohue betty butler michael sweeny james flood helen anonuevo and all whose anniversaries fall at this time of the year
# ::alignments 58-59|0.0.0.1.0.0.1 55-56|0.0.0.1.0.0 54-55|0.0.0.1.0.0.0 49-50|0.0.0.1.1 48-49|0.0.0.1 45-46|0.0.0.1.0 31-32|0.0.0 28-29|0 26-27|0.0.1 25-26|0.0 24-25|0.0.1.0 23-24|0.0.1.0.0 21-22|0.0.1.0.0.0 20-21|0.0.0.0 19-20|0.0.0.0.0 15-16|0.0.1.1.2.0.0 13-14|0.0.1.1.2.0.0.0 12-13|0.0.1.1.0.0 11-12|0.0.1.1.0 10-11|0.0.1.1.2 9-10|0.0.1.1.2.0 7-8|0.0.1.1.3 6-7|0.0.1.1.3.0 5-6|0.0.1.1 3-4|0.0.1.1.1 1-2|0.0.1.0.0.1 0-1|0.0.1.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:50.327
# ::node	0	and	28-29
# ::node	0.0	starve-01	25-26
# ::node	0.0.0	and	31-32
# ::node	0.0.0.0	and	20-21
# ::node	0.0.0.0.0	conscience	19-20
# ::node	0.0.0.1	and	48-49
# ::node	0.0.0.1.0	flood-01	45-46
# ::node	0.0.0.1.0.0	time	55-56
# ::node	0.0.0.1.0.0.0	this	54-55
# ::node	0.0.0.1.0.0.1	year	58-59
# ::node	0.0.0.1.1	all	49-50
# ::node	0.0.1	or	26-27
# ::node	0.0.1.0	torture-01	24-25
# ::node	0.0.1.0.0	suffer-01	23-24
# ::node	0.0.1.0.0.0	all	21-22
# ::node	0.0.1.0.0.1	pray-01	1-2
# ::node	0.0.1.0.0.1.0	we	0-1
# ::node	0.0.1.1	kill-01	5-6
# ::node	0.0.1.1.0	and	11-12
# ::node	0.0.1.1.0.0	accident	12-13
# ::node	0.0.1.1.1	all	3-4
# ::node	0.0.1.1.2	disaster	10-11
# ::node	0.0.1.1.2.0	war-01	9-10
# ::node	0.0.1.1.2.0.0	world	15-16
# ::node	0.0.1.1.2.0.0.0	throughout	13-14
# ::node	0.0.1.1.3	day	7-8
# ::node	0.0.1.1.3.0	each	6-7
# ::root	0	and
# ::edge	and	op1	accident	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	and	op1	all	0.0.0.1	0.0.0.1.1	
# ::edge	and	op1	conscience	0.0.0.0	0.0.0.0.0	
# ::edge	and	op1	starve-01	0	0.0	
# ::edge	and	op1	starve-01	0.0.0	0.0	
# ::edge	and	op2	and	0.0.0	0.0.0.1	
# ::edge	and	op2	and	0.0.0.0	0.0.0	
# ::edge	day	mod	each	0.0.1.1.3	0.0.1.1.3.0	
# ::edge	flood-01	ARG0	and	0.0.0.1.0	0.0.0.1	
# ::edge	flood-01	ARG1	time	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	kill-01	ARG0	and	0.0.1.1	0.0.1.1.0	
# ::edge	kill-01	ARG1	all	0.0.1.1	0.0.1.1.1	
# ::edge	kill-01	location	disaster	0.0.1.1	0.0.1.1.2	
# ::edge	kill-01	time	day	0.0.1.1	0.0.1.1.3	
# ::edge	or	op1	kill-01	0.0.1	0.0.1.1	
# ::edge	or	op2	starve-01	0.0.1	0.0	
# ::edge	pray-01	ARG0	we	0.0.1.0.0.1	0.0.1.0.0.1.0	
# ::edge	pray-01	ARG1	suffer-01	0.0.1.0.0.1	0.0.1.0.0	
# ::edge	suffer-01	ARG0	all	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	suffer-01	ARG1	torture-01	0.0.1.0.0	0.0.1.0	
# ::edge	throughout	op1	world	0.0.1.1.2.0.0.0	0.0.1.1.2.0.0	
# ::edge	time	mod	this	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	torture-01	ARG1	or	0.0.1.0	0.0.1	
# ::edge	war-01	ARG0	disaster	0.0.1.1.2.0	0.0.1.1.2	
# ::edge	war-01	ARG1	world	0.0.1.1.2.0	0.0.1.1.2.0.0	
# ::edge	year	part	time	0.0.0.1.0.0.1	0.0.0.1.0.0	
(a4 / and 
      :op1 (s / starve-01 
            :op-of (a3 / and 
                  :op-of (a6 / and 
                        :op1 (c / conscience)) 
                  :op1 (a2 / and 
                        :ARG0-of (f / flood-01 
                              :ARG1 (t / time 
                                    :mod (t2 / this) 
                                    :part-of (y / year))) 
                        :op1 (a / all))) 
            :op-of (o / or 
                  :ARG1-of (t3 / torture-01 
                        :ARG1-of (s2 / suffer-01 
                              :ARG0 (a5 / all) 
                              :ARG1-of (p / pray-01 
                                    :ARG0 (w3 / we)))) 
                  :op1 (k / kill-01 
                        :ARG0 (a8 / and 
                              :op1 (a7 / accident)) 
                        :ARG1 (a9 / all) 
                        :location (d / disaster 
                              :ARG0-of (w2 / war-01 
                                    :ARG1 (w / world 
                                          :op-of (t4 / throughout)))) 
                        :time (d2 / day 
                              :mod (e / each))))))

# ::snt it was announced yesterday that a fatal accident inquiry presided over by a judge and sitting in public would be held next year into the disaster in which 270 people died when a pan am jet was brought down by a terrorist bomb
# ::tok it was announced yesterday that a fatal accident inquiry presided over by a judge and sitting in public would be held next year into the disaster in which 270 people died when a pan am jet was brought down by a terrorist bomb
# ::alignments 42-43|0.1.0.0 41-42|0.1.0.0.0 38-39|0.2.1.0 35-36|0.2.2 33-34|0.2.2.0 30-31|0.1.0 25-26|0.1.0.1 22-23|0.2.1.1 21-22|0.2.1.1.0 17-18|0.2.1.2 15-16|0.2.1 14-15|0.2 13-14|0.2.1.2.0 9-10|0 8-9|0.1 7-8|0.0 6-7|0.1.1 3-4|0.2.0.1 2-3|0.2.0 0-1|0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:50.957
# ::node	0	preside-01	9-10
# ::node	0.0	accident	7-8
# ::node	0.1	inquire-01	8-9
# ::node	0.1.0	die-01	30-31
# ::node	0.1.0.0	bomb	42-43
# ::node	0.1.0.0.0	terrorist	41-42
# ::node	0.1.0.1	disaster	25-26
# ::node	0.1.1	fatal	6-7
# ::node	0.2	and	14-15
# ::node	0.2.0	announce-01	2-3
# ::node	0.2.0.0	it	0-1
# ::node	0.2.0.1	yesterday	3-4
# ::node	0.2.1	sit-01	15-16
# ::node	0.2.1.0	down	38-39
# ::node	0.2.1.1	year	22-23
# ::node	0.2.1.1.0	next	21-22
# ::node	0.2.1.2	public	17-18
# ::node	0.2.1.2.0	judge-01	13-14
# ::node	0.2.2	jet	35-36
# ::node	0.2.2.0	pan	33-34
# ::root	0	preside-01
# ::edge	and	op1	preside-01	0.2	0	
# ::edge	and	op2	sit-01	0.2	0.2.1	
# ::edge	and	op3	jet	0.2	0.2.2	
# ::edge	announce-01	ARG0	it	0.2.0	0.2.0.0	
# ::edge	announce-01	ARG1	and	0.2.0	0.2	
# ::edge	announce-01	time	yesterday	0.2.0	0.2.0.1	
# ::edge	bomb	mod	terrorist	0.1.0.0	0.1.0.0.0	
# ::edge	die-01	ARG0	bomb	0.1.0	0.1.0.0	
# ::edge	die-01	ARG1	disaster	0.1.0	0.1.0.1	
# ::edge	inquire-01	ARG1	die-01	0.1	0.1.0	
# ::edge	inquire-01	mod	fatal	0.1	0.1.1	
# ::edge	jet	domain	pan	0.2.2	0.2.2.0	
# ::edge	judge-01	ARG1	public	0.2.1.2.0	0.2.1.2	
# ::edge	preside-01	ARG0	accident	0	0.0	
# ::edge	preside-01	ARG1	inquire-01	0	0.1	
# ::edge	sit-01	ARG0	down	0.2.1	0.2.1.0	
# ::edge	sit-01	ARG1	year	0.2.1	0.2.1.1	
# ::edge	sit-01	ARG2	public	0.2.1	0.2.1.2	
# ::edge	year	mod	next	0.2.1.1	0.2.1.1.0	
(p3 / preside-01 
      :ARG0 (a2 / accident) 
      :ARG1 (i / inquire-01 
            :ARG1 (d2 / die-01 
                  :ARG0 (b / bomb 
                        :mod (t / terrorist)) 
                  :ARG1 (d3 / disaster)) 
            :mod (f / fatal)) 
      :op-of (a / and 
            :ARG1-of (a3 / announce-01 
                  :ARG0 (i2 / it) 
                  :time (y2 / yesterday)) 
            :op1 (s / sit-01 
                  :ARG0 (d / down) 
                  :ARG1 (y / year 
                        :mod (n / next)) 
                  :ARG2 (p2 / public 
                        :ARG1-of (j2 / judge-01))) 
            :op2 (j / jet 
                  :domain (p / pan))))

# ::snt davis had been given little chance of surviving the accident in which he was struck by a car outside a suburban bar early on saturday morning
# ::tok davis had been given little chance of surviving the accident in which he was struck by a car outside a suburban bar early on saturday morning
# ::alignments 25-26|0.2.0.0.1 24-25|0.0 22-23|0.3 21-22|0 20-21|0.1 18-19|0.2 17-18|0.2.0 14-15|0.2.0.0 12-13|0.2.0.0.0 9-10|0.2.0.0.0.0 7-8|0.2.0.0.0.0.0 5-6|0.2.0.0.0.0.0.0 4-5|0.2.0.0.0.0.0.0.1 3-4|0.2.0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:51.121
# ::node	0	bar-01	21-22
# ::node	0.0	saturday	24-25
# ::node	0.1	suburb	20-21
# ::node	0.2	outside	18-19
# ::node	0.2.0	car	17-18
# ::node	0.2.0.0	strike-01	14-15
# ::node	0.2.0.0.0	he	12-13
# ::node	0.2.0.0.0.0	accident	9-10
# ::node	0.2.0.0.0.0.0	survive-01	7-8
# ::node	0.2.0.0.0.0.0.0	chance	5-6
# ::node	0.2.0.0.0.0.0.0.0	give-01	3-4
# ::node	0.2.0.0.0.0.0.0.1	little	4-5
# ::node	0.2.0.0.1	morning	25-26
# ::node	0.3	early	22-23
# ::root	0	bar-01
# ::edge	accident	example	he	0.2.0.0.0.0	0.2.0.0.0	
# ::edge	bar-01	ARG1	saturday	0	0.0	
# ::edge	bar-01	location	suburb	0	0.1	
# ::edge	bar-01	time	early	0	0.3	
# ::edge	car	location	outside	0.2.0	0.2	
# ::edge	chance	mod	little	0.2.0.0.0.0.0.0	0.2.0.0.0.0.0.0.1	
# ::edge	chance	mod	survive-01	0.2.0.0.0.0.0.0	0.2.0.0.0.0.0	
# ::edge	give-01	ARG1	chance	0.2.0.0.0.0.0.0.0	0.2.0.0.0.0.0.0	
# ::edge	outside	op1	bar-01	0.2	0	
# ::edge	strike-01	ARG0	he	0.2.0.0	0.2.0.0.0	
# ::edge	strike-01	ARG1	car	0.2.0.0	0.2.0	
# ::edge	strike-01	time	morning	0.2.0.0	0.2.0.0.1	
# ::edge	survive-01	ARG1	accident	0.2.0.0.0.0.0	0.2.0.0.0.0	
(b / bar-01 
      :ARG1 (s / saturday) 
      :location (s2 / suburb) 
      :op-of (o / outside 
            :location-of (c / car 
                  :ARG1-of (s3 / strike-01 
                        :ARG0 (h / he 
                              :example-of (a / accident 
                                    :ARG1-of (s4 / survive-01 
                                          :mod-of (c2 / chance 
                                                :ARG1-of (g / give-01) 
                                                :mod (l / little))))) 
                        :time (m / morning)))) 
      :time (e / early))

# ::snt recommendations  city council to consider urgent programme to install draughtproofing and central heating strategy to combat home accidents
# ::tok recommendations city council to consider urgent programme to install draughtproofing and central heating strategy to combat home accidents
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:51.122
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt   construction giant mowlem has been ordered to pay out nearly 5000 after a worker lost a hand in an accident at its m40 concrete batching plant near ardley
# ::tok construction giant mowlem has been ordered to pay out nearly 5000 after a worker lost a hand in an accident at its m40 concrete batching plant near ardley
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:51.123
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt male pedestrian killed in accident with car on a420 cumnor bypass at junction with eynsham road
# ::tok male pedestrian killed in accident with car on a420 cumnor bypass at junction with eynsham road
# ::alignments 15-16|0.0.0.0 10-11|0.0.0.0.0 6-7|0.0.0.1 4-5|0.0.0 2-3|0.0 1-2|0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:51.160
# ::node	0	pedestrian	1-2
# ::node	0.0	kill-01	2-3
# ::node	0.0.0	accident	4-5
# ::node	0.0.0.0	road	15-16
# ::node	0.0.0.0.0	bypass	10-11
# ::node	0.0.0.1	car	6-7
# ::node	0.1	male	0-1
# ::root	0	pedestrian
# ::edge	accident	location	road	0.0.0	0.0.0.0	
# ::edge	bypass	location	road	0.0.0.0.0	0.0.0.0	
# ::edge	car	part	accident	0.0.0.1	0.0.0	
# ::edge	kill-01	ARG1	pedestrian	0.0	0	
# ::edge	kill-01	location	accident	0.0	0.0.0	
# ::edge	pedestrian	quant	male	0	0.1	
(p / pedestrian 
      :ARG1-of (k / kill-01 
            :location (a / accident 
                  :location (r / road 
                        :location-of (b / bypass)) 
                  :part-of (c / car))) 
      :quant (m / male))

# ::snt john and his partner eileen moved into the hotel trade almost by accident
# ::tok john and his partner eileen moved into the hotel trade almost by accident
# ::alignments 12-13|0.3 10-11|0.1 9-10|0.2 8-9|0.2.0 5-6|0 3-4|0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:51.207
# ::node	0	move-01	5-6
# ::node	0.0	and	1-2
# ::node	0.0.0	partner-01	3-4
# ::node	0.1	almost	10-11
# ::node	0.2	trade-01	9-10
# ::node	0.2.0	hotel	8-9
# ::node	0.3	accident	12-13
# ::root	0	move-01
# ::edge	and	op1	partner-01	0.0	0.0.0	
# ::edge	move-01	ARG0	and	0	0.0	
# ::edge	move-01	ARG1	almost	0	0.1	
# ::edge	move-01	ARG2	trade-01	0	0.2	
# ::edge	move-01	source	accident	0	0.3	
# ::edge	trade-01	ARG1	hotel	0.2	0.2.0	
(m / move-01 
      :ARG0 (a3 / and 
            :op1 (p / partner-01)) 
      :ARG1 (a2 / almost) 
      :ARG2 (t / trade-01 
            :ARG1 (h / hotel)) 
      :source (a / accident))

# ::snt were just an accident they had along the way
# ::tok were just an accident they had along the way
# ::alignments 8-9|0.1 6-7|0 4-5|0.0 3-4|0.1.0 1-2|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:51.219
# ::node	0	along	6-7
# ::node	0.0	they	4-5
# ::node	0.1	way	8-9
# ::node	0.1.0	accident	3-4
# ::node	0.1.0.0	just	1-2
# ::root	0	along
# ::edge	accident	location	way	0.1.0	0.1	
# ::edge	accident	mod	just	0.1.0	0.1.0.0	
# ::edge	along	domain	they	0	0.0	
# ::edge	along	op1	way	0	0.1	
(a / along 
      :domain (t / they) 
      :op1 (w / way 
            :location-of (a2 / accident 
                  :mod (j / just))))

# ::snt that accidents turned her brain i reckon
# ::tok that accidents turned her brain i reckon
# ::alignments 6-7|0 5-6|0.1 4-5|0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:51.260
# ::node	0	reckon-01	6-7
# ::node	0.0	accident	1-2
# ::node	0.0.0	brain	4-5
# ::node	0.1	i	5-6
# ::root	0	reckon-01
# ::edge	brain	poss	accident	0.0.0	0.0	
# ::edge	reckon-01	ARG0	accident	0	0.0	
# ::edge	reckon-01	ARG1	i	0	0.1	
(r / reckon-01 
      :ARG0 (a / accident 
            :poss-of (b / brain)) 
      :ARG1 (i / i))

# ::snt it is no accident that mr lawsons credit stood highest in the summer of 1987
# ::tok it is no accident that mr lawsons credit stood highest in the summer of 1987
# ::alignments 14-15|0.2.1.0.0+0.2.1.0 12-13|0.2.1 9-10|0.2.0+0.2 8-9|0 7-8|0.0 3-4|0.1.0 2-3|0.1.0.0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:51.465
# ::node	0	stand-01	8-9
# ::node	0.0	credit-02	7-8
# ::node	0.1	it	0-1
# ::node	0.1.0	accident	3-4
# ::node	0.1.0.0	-	2-3
# ::node	0.2	high	9-10
# ::node	0.2.0	most	9-10
# ::node	0.2.1	summer	12-13
# ::node	0.2.1.0	date-entity	14-15
# ::node	0.2.1.0.0	1987	14-15
# ::root	0	stand-01
# ::edge	accident	domain	it	0.1.0	0.1	
# ::edge	accident	polarity	-	0.1.0	0.1.0.0	
# ::edge	date-entity	season	summer	0.2.1.0	0.2.1	
# ::edge	date-entity	year	1987	0.2.1.0	0.2.1.0.0	
# ::edge	high	degree	most	0.2	0.2.0	
# ::edge	high	prep-in	summer	0.2	0.2.1	
# ::edge	stand-01	ARG0	credit-02	0	0.0	
# ::edge	stand-01	ARG1	it	0	0.1	
# ::edge	stand-01	manner	high	0	0.2	
(s2 / stand-01 
      :ARG0 (c / credit-02) 
      :ARG1 (i / it 
            :domain-of (a / accident 
                  :polarity (- / -))) 
      :manner (h / high 
            :degree (m / most) 
            :prep-in (s / summer 
                  :season-of (d / date-entity 
                        :year 1987))))

# ::snt fortunately nobody was hurt and it will not show in any accident statistics
# ::tok fortunately nobody was hurt and it will not show in any accident statistics
# ::alignments 12-13|0.0.0 11-12|0.0.0.0 10-11|0.0.0.1 8-9|0.1 5-6|0.1.0 4-5|0 3-4|0.0 1-2|0.1.1 0-1|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:51.493
# ::node	0	and	4-5
# ::node	0.0	hurt-01	3-4
# ::node	0.0.0	statistic	12-13
# ::node	0.0.0.0	accident	11-12
# ::node	0.0.0.1	any	10-11
# ::node	0.1	show-01	8-9
# ::node	0.1.0	it	5-6
# ::node	0.1.1	nobody	1-2
# ::node	0.1.1.0	fortunate-41	0-1
# ::root	0	and
# ::edge	and	op1	hurt-01	0	0.0	
# ::edge	and	op2	show-01	0	0.1	
# ::edge	fortunate-41	ARG1	nobody	0.1.1.0	0.1.1	
# ::edge	hurt-01	ARG1	statistic	0.0	0.0.0	
# ::edge	show-01	ARG0	it	0.1	0.1.0	
# ::edge	show-01	ARG1	nobody	0.1	0.1.1	
# ::edge	statistic	mod	accident	0.0.0	0.0.0.0	
# ::edge	statistic	mod	any	0.0.0	0.0.0.1	
(a3 / and 
      :op1 (h / hurt-01 
            :ARG1 (s / statistic 
                  :mod (a / accident) 
                  :mod (a2 / any))) 
      :op2 (s2 / show-01 
            :ARG0 (i / it) 
            :ARG1 (n / nobody 
                  :ARG1-of (f / fortunate-41))))

# ::snt although the remarkable breakout of liability for negligent harm in the nineteenth century had established the framework for an effective accident law it was accompanied by control devices which ensured that the burden of liability would not exceed societys capacity to absorb it
# ::tok although the remarkable breakout of liability for negligent harm in the nineteenth century had established the framework for an effective accident law it was accompanied by control devices which ensured that the burden of liability would not exceed societys capacity to absorb it
# ::alignments 42-43|0.1 41-42|0 39-40|0.2 37-38|0.2.0 34-35|0.0.0 32-33|0.0 29-30|0.2.0.0 27-28|0.2.0.0.0 26-27|0.2.0.0.0.1 24-25|0.2.0.0.0.0 22-23|0.2.0.0.0.0.1 21-22|0.2.0.0.0.0.0 20-21|0.2.0.0.0.0.0.1 19-20|0.2.0.0.0.0.0.1.0 16-17|0.2.0.0.0.0.0.0.0 14-15|0.2.0.0.0.0.0.0 8-9|0.2.0.0.0.0.2 7-8|0.2.0.0.0.0.2.1 5-6|0.2.0.0.0.0.2.0 2-3|0.2.0.0.0.0.2.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:52.279
# ::node	0	absorb-01	41-42
# ::node	0.0	burden-01	32-33
# ::node	0.0.0	liability	34-35
# ::node	0.1	it	42-43
# ::node	0.2	capacity	39-40
# ::node	0.2.0	exceed-01	37-38
# ::node	0.2.0.0	ensure-01	29-30
# ::node	0.2.0.0.0	device	27-28
# ::node	0.2.0.0.0.0	accompany-01	24-25
# ::node	0.2.0.0.0.0.0	law	21-22
# ::node	0.2.0.0.0.0.0.0	establish-01	14-15
# ::node	0.2.0.0.0.0.0.0.0	framework	16-17
# ::node	0.2.0.0.0.0.0.1	accident	20-21
# ::node	0.2.0.0.0.0.0.1.0	effective	19-20
# ::node	0.2.0.0.0.0.1	it	22-23
# ::node	0.2.0.0.0.0.2	harm-01	8-9
# ::node	0.2.0.0.0.0.2.0	liability	5-6
# ::node	0.2.0.0.0.0.2.1	negligent	7-8
# ::node	0.2.0.0.0.0.2.2	remarkable	2-3
# ::node	0.2.0.0.0.1	control-01	26-27
# ::root	0	absorb-01
# ::edge	absorb-01	ARG0	burden-01	0	0.0	
# ::edge	absorb-01	ARG1	it	0	0.1	
# ::edge	accident	mod	effective	0.2.0.0.0.0.0.1	0.2.0.0.0.0.0.1.0	
# ::edge	accompany-01	ARG0	device	0.2.0.0.0.0	0.2.0.0.0	
# ::edge	accompany-01	ARG1	law	0.2.0.0.0.0	0.2.0.0.0.0.0	
# ::edge	accompany-01	ARG2	it	0.2.0.0.0.0	0.2.0.0.0.0.1	
# ::edge	accompany-01	manner	harm-01	0.2.0.0.0.0	0.2.0.0.0.0.2	
# ::edge	burden-01	ARG1	liability	0.0	0.0.0	
# ::edge	capacity	purpose	absorb-01	0.2	0	
# ::edge	control-01	ARG0	device	0.2.0.0.0.1	0.2.0.0.0	
# ::edge	ensure-01	ARG0	device	0.2.0.0	0.2.0.0.0	
# ::edge	ensure-01	ARG1	exceed-01	0.2.0.0	0.2.0	
# ::edge	establish-01	ARG1	framework	0.2.0.0.0.0.0.0	0.2.0.0.0.0.0.0.0	
# ::edge	establish-01	manner	law	0.2.0.0.0.0.0.0	0.2.0.0.0.0.0	
# ::edge	exceed-01	ARG1	capacity	0.2.0	0.2	
# ::edge	harm-01	ARG1	liability	0.2.0.0.0.0.2	0.2.0.0.0.0.2.0	
# ::edge	harm-01	mod	negligent	0.2.0.0.0.0.2	0.2.0.0.0.0.2.1	
# ::edge	harm-01	mod	remarkable	0.2.0.0.0.0.2	0.2.0.0.0.0.2.2	
# ::edge	law	topic	accident	0.2.0.0.0.0.0	0.2.0.0.0.0.0.1	
(a / absorb-01 
      :ARG0 (b / burden-01 
            :ARG1 (l / liability)) 
      :ARG1 (i / it) 
      :purpose-of (c / capacity 
            :ARG1-of (e / exceed-01 
                  :ARG1-of (e2 / ensure-01 
                        :ARG0 (d / device 
                              :ARG0-of (a2 / accompany-01 
                                    :ARG1 (l2 / law 
                                          :manner-of (e4 / establish-01 
                                                :ARG1 (f / framework)) 
                                          :topic (a3 / accident 
                                                :mod (e3 / effective))) 
                                    :ARG2 (i2 / it) 
                                    :manner (h / harm-01 
                                          :ARG1 (l3 / liability) 
                                          :mod (n / negligent) 
                                          :mod (r / remarkable))) 
                              :ARG0-of (c2 / control-01))))))

# ::snt but if the problems of experimentation that comes out of accident because you want to achieve an accident and you want to achieve the fall of things on the page  and the accident that occurs because as you say nobodys ever told you that youre not supposed to do that so the accident isnt a case of reacting against a rule to test it to see whether it would stand up to being broken the one thats just happened i think i ellip
# ::tok but if the problems of experimentation that comes out of accident because you want to achieve an accident and you want to achieve the fall of things on the page and the accident that occurs because as you say nobodys ever told you that youre not supposed to do that so the accident isnt a case of reacting against a rule to test it to see whether it would stand up to being broken the one thats just happened i think i ellip
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:52.282
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt i do know there was a fatal accident near warborough two saturdays ago
# ::tok i do know there was a fatal accident near warborough two saturdays ago
# ::alignments 10-11|0.0.0.1 8-9|0.0.1 7-8|0.0 6-7|0 2-3|0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:52.323
# ::node	0	fatal	6-7
# ::node	0.0	accident	7-8
# ::node	0.0.0	know-01	2-3
# ::node	0.0.0.0	i	0-1
# ::node	0.0.0.1	2	10-11
# ::node	0.0.1	near	8-9
# ::root	0	fatal
(f / fatal 
      :mod-of (a / accident 
            :ARG1-of (k / know-01 
                  :ARG0 (i / i) 
                  :op-of 2) 
            :location (n / near)))

# ::snt the accident happened at about 9
# ::tok the accident happened at about 9
# ::alignments 5-6|0.1 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:52.337
# ::node	0	happen-01	2-3
# ::node	0.0	accident	1-2
# ::node	0.1	9	5-6
# ::root	0	happen-01
# ::edge	happen-01	ARG1	accident	0	0.0	
# ::edge	happen-01	topic	9	0	0.1	
(h / happen-01 
      :ARG1 (a / accident) 
      :topic 9)

# ::snt the accident happened at the junction with the b4508 road to longcot when two cars collided and were hit by the third
# ::tok the accident happened at the junction with the b4508 road to longcot when two cars collided and were hit by the third
# ::alignments 18-19|0.1 16-17|0 14-15|0.1.0 13-14|0.1.0.0 9-10|0.1.1 2-3|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:52.407
# ::node	0	and	16-17
# ::node	0.0	happen-01	2-3
# ::node	0.0.0	accident	1-2
# ::node	0.1	hit-01	18-19
# ::node	0.1.0	car	14-15
# ::node	0.1.0.0	2	13-14
# ::node	0.1.1	road	9-10
# ::root	0	and
# ::edge	and	op1	happen-01	0	0.0	
# ::edge	and	op2	hit-01	0	0.1	
# ::edge	car	quant	2	0.1.0	0.1.0.0	
# ::edge	happen-01	ARG1	accident	0.0	0.0.0	
# ::edge	hit-01	ARG0	car	0.1	0.1.0	
# ::edge	hit-01	ARG1	road	0.1	0.1.1	
(a / and 
      :op1 (h2 / happen-01 
            :ARG1 (a2 / accident)) 
      :op2 (h / hit-01 
            :ARG0 (c / car 
                  :quant 2) 
            :ARG1 (r / road)))

# ::snt his report also said that 309 train accidents dash
# ::tok his report also said that 309 train accidents dash
# ::alignments 7-8|0.0.0 6-7|0.0.0.0 3-4|0 2-3|0.1 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:52.419
# ::node	0	say-01	3-4
# ::node	0.0	report	1-2
# ::node	0.0.0	accident	7-8
# ::node	0.0.0.0	train	6-7
# ::node	0.1	also	2-3
# ::root	0	say-01
# ::edge	accident	mod	train	0.0.0	0.0.0.0	
# ::edge	report	mod	accident	0.0	0.0.0	
# ::edge	say-01	ARG0	report	0	0.0	
# ::edge	say-01	mod	also	0	0.1	
(s / say-01 
      :ARG0 (r / report 
            :mod (a / accident 
                  :mod (t / train))) 
      :mod (a2 / also))

# ::snt ramona seven months pregnant had one night tried to flee their small home town myles and lost her right hand in an accident on the road out radiant with ice in the january cold, but their first fight after the accident presents ramona with a moment of epiphanic insight shed sensed in that instant when hed checked his swing the culminative proof that he thought of her now as a cripple he had no right to hit
# ::tok ramona seven months pregnant had one night tried to flee their small home town myles and lost her right hand in an accident on the road out radiant with ice in the january cold , but their first fight after the accident presents ramona with a moment of epiphanic insight shed sensed in that instant when hed checked his swing the culminative proof that he thought of her now as a cripple he had no right to hit
# ::alignments 77-78|0.0.0.0.0.1 74-75|0.0.0.0.0.0.1.0 72-73|0.0.0.0.0 71-72|0.0.0.0 68-69|0.0.1 65-66|0.0 64-65|0.0.0 62-63|0 54-55|0.0.0.0.0.0.0 51-52|0.0.0.0.0.0 50-51|0.0.0.0.0.0.1 46-47|0.0.0.0.0.0.2.0.0 42-43|0.0.0.0.0.0.1.1 41-42|0.0.0.0.0.0.1.1.0 39-40|0.0.0.0.0.0.1.1.1 38-39|0.0.0.0.0.0.2.0 35-36|0.0.0.0.0.0.2 33-34|0.0.0.0.0.0.3.1.3.1 32-33|0.0.0.0.0.0.3.1.3.0+0.0.0.0.0.0.3.1.3 29-30|0.0.0.0.0.0.3.1.3.1.0 25-26|0.0.0.0.0.0.3.1.2.0 22-23|0.0.0.0.0.0.3.1.2 19-20|0.0.0.0.0.0.3.1.1 16-17|0.0.0.0.0.0.3.1 15-16|0.0.0.0.0.0.3 13-14|0.0.0.0.0.0.3.1.0 12-13|0.0.0.0.0.0.3.0.0 11-12|0.0.0.0.0.0.3.1.0.0 9-10|0.0.0.0.0.0.3.0 7-8|0.0.0.0.0.0.3.0.1 6-7|0.0.0.0.0.0.3.0.0.0 3-4|0.0.0.0.0.0.3.0.1.0 2-3|0.0.0.0.0.0.3.0.1.0.0.1+0.0.0.0.0.0.3.0.1.0.0 1-2|0.0.0.0.0.0.3.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:54.310
# ::node	0	proof	62-63
# ::node	0.0	think-01	65-66
# ::node	0.0.0	he	64-65
# ::node	0.0.0.0	cripple-01	71-72
# ::node	0.0.0.0.0	he	72-73
# ::node	0.0.0.0.0.0	sense-01	51-52
# ::node	0.0.0.0.0.0.0	instant	54-55
# ::node	0.0.0.0.0.0.1	shed-01	50-51
# ::node	0.0.0.0.0.0.1.0	-	74-75
# ::node	0.0.0.0.0.0.1.1	present-01	42-43
# ::node	0.0.0.0.0.0.1.1.0	accident	41-42
# ::node	0.0.0.0.0.0.1.1.1	after	39-40
# ::node	0.0.0.0.0.0.2	contrast-01	35-36
# ::node	0.0.0.0.0.0.2.0	fight-01	38-39
# ::node	0.0.0.0.0.0.2.0.0	moment	46-47
# ::node	0.0.0.0.0.0.3	and	15-16
# ::node	0.0.0.0.0.0.3.0	flee-01	9-10
# ::node	0.0.0.0.0.0.3.0.0	home	12-13
# ::node	0.0.0.0.0.0.3.0.0.0	night	6-7
# ::node	0.0.0.0.0.0.3.0.1	try-01	7-8
# ::node	0.0.0.0.0.0.3.0.1.0	pregnant	3-4
# ::node	0.0.0.0.0.0.3.0.1.0.0	temporal-quantity	2-3
# ::node	0.0.0.0.0.0.3.0.1.0.0.0	7	1-2
# ::node	0.0.0.0.0.0.3.0.1.0.0.1	month	2-3
# ::node	0.0.0.0.0.0.3.1	lose-02	16-17
# ::node	0.0.0.0.0.0.3.1.0	town	13-14
# ::node	0.0.0.0.0.0.3.1.0.0	small	11-12
# ::node	0.0.0.0.0.0.3.1.1	hand	19-20
# ::node	0.0.0.0.0.0.3.1.2	accident	22-23
# ::node	0.0.0.0.0.0.3.1.2.0	road	25-26
# ::node	0.0.0.0.0.0.3.1.3	date-entity	32-33
# ::node	0.0.0.0.0.0.3.1.3.0	1	32-33
# ::node	0.0.0.0.0.0.3.1.3.1	cold	33-34
# ::node	0.0.0.0.0.0.3.1.3.1.0	ice	29-30
# ::node	0.0.0.0.0.1	hit-01	77-78
# ::node	0.0.1	now	68-69
# ::root	0	proof
(p / proof 
      :ARG1-of (t / think-01 
            :ARG0 (h3 / he 
                  :ARG0-of (c / cripple-01 
                        :ARG1 (h2 / he 
                              :ARG0-of (s / sense-01 
                                    :ARG1 (i / instant) 
                                    :ARG1-of (s2 / shed-01 
                                          :ARG0 (- / -) 
                                          :ARG1-of (p2 / present-01 
                                                :ARG0 (a / accident) 
                                                :op-of (a2 / after))) 
                                    :ARG2-of (c2 / contrast-01 
                                          :ARG1 (f / fight-01 
                                                :time (m / moment))) 
                                    :op-of (a4 / and 
                                          :op1 (f2 / flee-01 
                                                :ARG1 (h5 / home 
                                                      :poss (n2 / night)) 
                                                :ARG1-of (t3 / try-01 
                                                      :ARG0 (p3 / pregnant 
                                                            :duration (t4 / temporal-quantity 
                                                                  :quant 7 
                                                                  :unit (m2 / month))))) 
                                          :op2 (l / lose-02 
                                                :ARG0 (t2 / town 
                                                      :mod (s3 / small)) 
                                                :ARG1 (h4 / hand) 
                                                :ARG2 (a3 / accident 
                                                      :location (r / road)) 
                                                :op-of (d / date-entity 
                                                      :month 1 
                                                      :time-of (c3 / cold 
                                                            :mod-of (i2 / ice)))))) 
                              :ARG0-of (h / hit-01)))) 
            :mod (n / now)))

# ::snt a good deal of money and effort is therefore going into study of the human factor which should ultimately lead to further reduction of accidents and risk
# ::tok a good deal of money and effort is therefore going into study of the human factor which should ultimately lead to further reduction of accidents and risk
# ::alignments 26-27|0.2 25-26|0 24-25|0.0.0 22-23|0.0 21-22|0.0.1 18-19|0.1.1 17-18|0.1 15-16|0.1.0 14-15|0.1.0.1 11-12|0.1.0.0 6-7|0.1.0.0.0.0.1 5-6|0.1.0.0.0.0 4-5|0.1.0.0.0.0.0 2-3|0.1.0.0.0 1-2|0.1.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:54.455
# ::node	0	and	25-26
# ::node	0.0	reduce-01	22-23
# ::node	0.0.0	accident	24-25
# ::node	0.0.1	further	21-22
# ::node	0.1	recommend-01	17-18
# ::node	0.1.0	factor	15-16
# ::node	0.1.0.0	study-01	11-12
# ::node	0.1.0.0.0	deal-01	2-3
# ::node	0.1.0.0.0.0	and	5-6
# ::node	0.1.0.0.0.0.0	money	4-5
# ::node	0.1.0.0.0.0.1	effort	6-7
# ::node	0.1.0.0.0.1	good	1-2
# ::node	0.1.0.1	human	14-15
# ::node	0.1.1	ultimate	18-19
# ::node	0.2	risk-01	26-27
# ::root	0	and
# ::edge	and	op1	money	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	and	op1	recommend-01	0	0.1	
# ::edge	and	op2	effort	0.1.0.0.0.0	0.1.0.0.0.0.1	
# ::edge	and	op2	risk-01	0	0.2	
# ::edge	deal-01	ARG0	and	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	deal-01	mod	good	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	factor	mod	human	0.1.0	0.1.0.1	
# ::edge	recommend-01	ARG1	factor	0.1	0.1.0	
# ::edge	recommend-01	mod	ultimate	0.1	0.1.1	
# ::edge	reduce-01	ARG0	and	0.0	0	
# ::edge	reduce-01	ARG1	accident	0.0	0.0.0	
# ::edge	reduce-01	mod	further	0.0	0.0.1	
# ::edge	study-01	ARG0	factor	0.1.0.0	0.1.0	
# ::edge	study-01	ARG1	deal-01	0.1.0.0	0.1.0.0.0	
(a / and 
      :ARG0-of (r2 / reduce-01 
            :ARG1 (a2 / accident) 
            :mod (f / further)) 
      :op1 (r3 / recommend-01 
            :ARG1 (f2 / factor 
                  :ARG0-of (s / study-01 
                        :ARG1 (d / deal-01 
                              :ARG0 (a3 / and 
                                    :op1 (m / money) 
                                    :op2 (e / effort)) 
                              :mod (g / good))) 
                  :mod (h / human)) 
            :mod (u / ultimate)) 
      :op2 (r / risk-01))

# ::snt indian police arrested about 800 protestors who tried to enter the union carbide plant on the fifth anniversary of the worlds worst industrial accident
# ::tok indian police arrested about 800 protestors who tried to enter the union carbide plant on the fifth anniversary of the worlds worst industrial accident
# ::alignments 23-24|0.1.1.0.0.0.0 22-23|0.1.1.0.0.0.0.0 21-22|0.1.1.0.0.0.0.0.0 20-21|0.1.1.0.0.0.0.0.0.0 17-18|0.1.1.0.0.0 13-14|0.1.1.0.0 11-12|0.1.1.0.1 9-10|0.1.1.0 7-8|0.1.1 5-6|0.1.0+0.1 4-5|0.1.2 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:54.864
# ::node	0	arrest-01	2-3
# ::node	0.0	police	1-2
# ::node	0.1	person	5-6
# ::node	0.1.0	protest-01	5-6
# ::node	0.1.1	try-01	7-8
# ::node	0.1.1.0	enter-01	9-10
# ::node	0.1.1.0.0	plant	13-14
# ::node	0.1.1.0.0.0	anniversary	17-18
# ::node	0.1.1.0.0.0.0	accident	23-24
# ::node	0.1.1.0.0.0.0.0	industry	22-23
# ::node	0.1.1.0.0.0.0.0.0	bad	21-22
# ::node	0.1.1.0.0.0.0.0.0.0	world	20-21
# ::node	0.1.1.0.1	union	11-12
# ::node	0.1.2	800	4-5
# ::root	0	arrest-01
# ::edge	accident	mod	industry	0.1.1.0.0.0.0	0.1.1.0.0.0.0.0	
# ::edge	anniversary	poss	accident	0.1.1.0.0.0	0.1.1.0.0.0.0	
# ::edge	arrest-01	ARG0	police	0	0.0	
# ::edge	arrest-01	ARG1	person	0	0.1	
# ::edge	bad	mod	world	0.1.1.0.0.0.0.0.0	0.1.1.0.0.0.0.0.0.0	
# ::edge	enter-01	ARG1	plant	0.1.1.0	0.1.1.0.0	
# ::edge	enter-01	ARG2	union	0.1.1.0	0.1.1.0.1	
# ::edge	industry	degree	bad	0.1.1.0.0.0.0.0	0.1.1.0.0.0.0.0.0	
# ::edge	person	quant	800	0.1	0.1.2	
# ::edge	plant	location	anniversary	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	protest-01	ARG0	person	0.1.0	0.1	
# ::edge	try-01	ARG0	person	0.1.1	0.1	
# ::edge	try-01	ARG1	enter-01	0.1.1	0.1.1.0	
(a3 / arrest-01 
      :ARG0 (p4 / police) 
      :ARG1 (p2 / person 
            :ARG0-of (p3 / protest-01) 
            :ARG0-of (t / try-01 
                  :ARG1 (e / enter-01 
                        :ARG1 (p / plant 
                              :location (a2 / anniversary 
                                    :poss (a / accident 
                                          :mod (i / industry 
                                                :degree (b / bad 
                                                      :mod (w / world)))))) 
                        :ARG2 (u / union))) 
            :quant 800))

# ::snt a cook drank so much at work that she was three times over the limit when she had an accident in her car
# ::tok a cook drank so much at work that she was three times over the limit when she had an accident in her car
# ::alignments 22-23|0.2.0 19-20|0.2 16-17|0.2.0.0 14-15|0 10-11|0.2.1 8-9|0.1 4-5|0.0 3-4|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:54.931
# ::node	0	limit-01	14-15
# ::node	0.0	much	4-5
# ::node	0.0.0	so	3-4
# ::node	0.1	she	8-9
# ::node	0.2	accident	19-20
# ::node	0.2.0	car	22-23
# ::node	0.2.0.0	she	16-17
# ::node	0.2.1	3	10-11
# ::root	0	limit-01
# ::edge	3	poss	accident	0.2.1	0.2	
# ::edge	accident	op1	limit-01	0.2	0	
# ::edge	car	part	accident	0.2.0	0.2	
# ::edge	car	poss	she	0.2.0	0.2.0.0	
# ::edge	limit-01	ARG0	much	0	0.0	
# ::edge	limit-01	ARG1	she	0	0.1	
# ::edge	much	degree	so	0.0	0.0.0	
(l / limit-01 
      :ARG0 (m / much 
            :degree (s3 / so)) 
      :ARG1 (s2 / she) 
      :op-of (a / accident 
            :part-of (c / car 
                  :poss (s / she)) 
            :poss-of 3))

# ::snt the mother of a north oxfordshire girl who had to have her eye removed after an accident involving an airgun is calling for a change in the gun laws
# ::tok the mother of a north oxfordshire girl who had to have her eye removed after an accident involving an airgun is calling for a change in the gun laws
# ::alignments 28-29|0.2.0.0 27-28|0.2.0.0.0 24-25|0.2.0 17-18|0.1.0 16-17|0.1 14-15|0.2 13-14|0 12-13|0.0 6-7|0.1.0.0 4-5|0.1.0.0.0.1 1-2|0.1.0.0.0.0+0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:55.077
# ::node	0	remove-01	13-14
# ::node	0.0	eye	12-13
# ::node	0.1	accident	16-17
# ::node	0.1.0	involve-01	17-18
# ::node	0.1.0.0	girl	6-7
# ::node	0.1.0.0.0	have-rel-role-91	1-2
# ::node	0.1.0.0.0.0	mother	1-2
# ::node	0.1.0.0.0.1	north	4-5
# ::node	0.2	after	14-15
# ::node	0.2.0	change-01	24-25
# ::node	0.2.0.0	law	28-29
# ::node	0.2.0.0.0	gun	27-28
# ::root	0	remove-01
# ::edge	change-01	ARG0	after	0.2.0	0.2	
# ::edge	change-01	ARG1	law	0.2.0	0.2.0.0	
# ::edge	have-rel-role-91	ARG1	girl	0.1.0.0.0	0.1.0.0	
# ::edge	have-rel-role-91	ARG2	mother	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	have-rel-role-91	time	north	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	involve-01	ARG0	accident	0.1.0	0.1	
# ::edge	involve-01	ARG1	girl	0.1.0	0.1.0.0	
# ::edge	law	topic	gun	0.2.0.0	0.2.0.0.0	
# ::edge	remove-01	ARG1	eye	0	0.0	
# ::edge	remove-01	ARG2	accident	0	0.1	
# ::edge	remove-01	time	after	0	0.2	
(r / remove-01 
      :ARG1 (e / eye) 
      :ARG2 (a / accident 
            :ARG0-of (i / involve-01 
                  :ARG1 (g2 / girl 
                        :ARG1-of (h / have-rel-role-91 
                              :ARG2 (m / mother) 
                              :time (n / north))))) 
      :time (a2 / after 
            :ARG0-of (c / change-01 
                  :ARG1 (l / law 
                        :topic (g / gun)))))

# ::snt consciously rebelling against the elegant and beautiful he has consistently experimented with flash wideangle abstractions closeups accidents and deliberate blurs
# ::tok consciously rebelling against the elegant and beautiful he has consistently experimented with flash wideangle abstractions closeups accidents and deliberate blurs
# ::alignments 17-18|0.2 16-17|0.2.2 9-10|0.1 7-8|0.2.1 6-7|0.0 5-6|0 4-5|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:55.110
# ::node	0	and	5-6
# ::node	0.0	beautiful	6-7
# ::node	0.1	consistent	9-10
# ::node	0.2	and	17-18
# ::node	0.2.0	elegant	4-5
# ::node	0.2.1	he	7-8
# ::node	0.2.2	accident	16-17
# ::root	0	and
# ::edge	and	op1	beautiful	0	0.0	
# ::edge	and	op1	elegant	0.2	0.2.0	
# ::edge	and	op2	consistent	0	0.1	
# ::edge	and	op2	he	0.2	0.2.1	
# ::edge	and	op3	accident	0.2	0.2.2	
# ::edge	and	op3	and	0	0.2	
(a3 / and 
      :op1 (b / beautiful) 
      :op2 (c / consistent) 
      :op3 (a / and 
            :op1 (e / elegant) 
            :op2 (h / he) 
            :op3 (a2 / accident)))

# ::snt it never occurred to me that if i had an accident and survived my life insurance would pay me nothing,   please note that whilst the above are not actual statements made by a serious accident victim they have been selected because we believe they give a fair representation of the kind of problems which may occur after an accident, however you could avoid these situations happening to you should you have an accident ellip, if you join the midland personal accident plan now
# ::tok it never occurred to me that if i had an accident and survived my life insurance would pay me nothing , please note that whilst the above are not actual statements made by a serious accident victim they have been selected because we believe they give a fair representation of the kind of problems which may occur after an accident , however you could avoid these situations happening to you should you have an accident ellip , if you join the midland personal accident plan now
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:55.112
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt but unions and management continued to blame each other for lack of full accident and emergency cover in the capital
# ::tok but unions and management continued to blame each other for lack of full accident and emergency cover in the capital
# ::alignments 19-20|0.0.1.2 15-16|0.0.1.1 14-15|0.0.0.1.1 13-14|0.0.0.1.1.1 12-13|0.0.0.1.1.0 10-11|0.0.0.1 8-9|0.0.0.0 7-8|0.0.0.0.0 6-7|0.0.0 4-5|0.0 3-4|0.0.1.0 2-3|0.0.1 1-2|0.0.0.1.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:55.743
# ::node	0	contrast-01	0-1
# ::node	0.0	continue-01	4-5
# ::node	0.0.0	blame-01	6-7
# ::node	0.0.0.0	other	8-9
# ::node	0.0.0.0.0	each	7-8
# ::node	0.0.0.1	lack-01	10-11
# ::node	0.0.0.1.0	union	1-2
# ::node	0.0.0.1.1	and	14-15
# ::node	0.0.0.1.1.0	full	12-13
# ::node	0.0.0.1.1.1	accident	13-14
# ::node	0.0.1	and	2-3
# ::node	0.0.1.0	manage-01	3-4
# ::node	0.0.1.1	emergency	15-16
# ::node	0.0.1.2	capital	19-20
# ::root	0	contrast-01
# ::edge	and	mod	full	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	and	op1	accident	0.0.0.1.1	0.0.0.1.1.1	
# ::edge	and	op1	manage-01	0.0.1	0.0.1.0	
# ::edge	and	op2	continue-01	0.0.1	0.0	
# ::edge	and	op3	emergency	0.0.1	0.0.1.1	
# ::edge	and	op4	capital	0.0.1	0.0.1.2	
# ::edge	blame-01	ARG1	other	0.0.0	0.0.0.0	
# ::edge	blame-01	ARG2	lack-01	0.0.0	0.0.0.1	
# ::edge	continue-01	ARG1	blame-01	0.0	0.0.0	
# ::edge	contrast-01	ARG1	continue-01	0	0.0	
# ::edge	lack-01	ARG0	union	0.0.0.1	0.0.0.1.0	
# ::edge	lack-01	ARG1	and	0.0.0.1	0.0.0.1.1	
# ::edge	other	mod	each	0.0.0.0	0.0.0.0.0	
(c3 / contrast-01 
      :ARG1 (c2 / continue-01 
            :ARG1 (b / blame-01 
                  :ARG1 (o / other 
                        :mod (e2 / each)) 
                  :ARG2 (l / lack-01 
                        :ARG0 (u / union) 
                        :ARG1 (a / and 
                              :mod (f / full) 
                              :op1 (a2 / accident)))) 
            :op-of (a3 / and 
                  :op1 (m / manage-01) 
                  :op2 (e / emergency) 
                  :op3 (c / capital))))

# ::snt the accidents are believed to have cost the board more than 18m in lost electricity production and repairs to the damaged reactor which has been out of commission since the first incident on 4 february this year
# ::tok the accidents are believed to have cost the board more than 18m in lost electricity production and repairs to the damaged reactor which has been out of commission since the first incident on 4 february this year
# ::alignments 36-37|0.0.1.0 35-36|0.0.1.0.0 34-35|0.0.2.0+0.0.2 33-34|0.0.0 31-32|0.0.1.2.0.0.0 28-29|0.0.1.2.0.0 27-28|0.0.1.3.0 21-22|0.0.1.2 20-21|0.0.1.2.1 17-18|0.0.1.2.0 16-17|0 15-16|0.0.1 14-15|0.0.1.1 13-14|0.0 6-7|0.0.1.3 3-4|0.0.1.3.2 1-2|0.0.1.3.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:56.226
# ::node	0	and	16-17
# ::node	0.0	lose-02	13-14
# ::node	0.0.0	4	33-34
# ::node	0.0.1	produce-01	15-16
# ::node	0.0.1.0	year	36-37
# ::node	0.0.1.0.0	this	35-36
# ::node	0.0.1.1	electricity	14-15
# ::node	0.0.1.2	reactor	21-22
# ::node	0.0.1.2.0	repair-01	17-18
# ::node	0.0.1.2.0.0	since	28-29
# ::node	0.0.1.2.0.0.0	incident	31-32
# ::node	0.0.1.2.1	damage-01	20-21
# ::node	0.0.1.3	cost-01	6-7
# ::node	0.0.1.3.0	commission	27-28
# ::node	0.0.1.3.1	accident	1-2
# ::node	0.0.1.3.2	believe-01	3-4
# ::node	0.0.2	date-entity	34-35
# ::node	0.0.2.0	2	34-35
# ::root	0	and
# ::edge	and	op1	lose-02	0	0.0	
# ::edge	believe-01	ARG1	cost-01	0.0.1.3.2	0.0.1.3	
# ::edge	cost-01	ARG0	commission	0.0.1.3	0.0.1.3.0	
# ::edge	cost-01	ARG1	accident	0.0.1.3	0.0.1.3.1	
# ::edge	cost-01	condition	produce-01	0.0.1.3	0.0.1	
# ::edge	damage-01	ARG1	reactor	0.0.1.2.1	0.0.1.2	
# ::edge	date-entity	month	2	0.0.2	0.0.2.0	
# ::edge	lose-02	ARG0	4	0.0	0.0.0	
# ::edge	lose-02	ARG1	produce-01	0.0	0.0.1	
# ::edge	lose-02	time	date-entity	0.0	0.0.2	
# ::edge	produce-01	ARG0	year	0.0.1	0.0.1.0	
# ::edge	produce-01	ARG1	electricity	0.0.1	0.0.1.1	
# ::edge	produce-01	ARG2	reactor	0.0.1	0.0.1.2	
# ::edge	repair-01	ARG0	since	0.0.1.2.0	0.0.1.2.0.0	
# ::edge	repair-01	ARG1	reactor	0.0.1.2.0	0.0.1.2	
# ::edge	since	op1	incident	0.0.1.2.0.0	0.0.1.2.0.0.0	
# ::edge	year	mod	this	0.0.1.0	0.0.1.0.0	
(a / and 
      :op1 (l / lose-02 
            :ARG0 4 
            :ARG1 (p / produce-01 
                  :ARG0 (y / year 
                        :mod (t / this)) 
                  :ARG1 (e / electricity) 
                  :ARG2 (r / reactor 
                        :ARG1-of (r2 / repair-01 
                              :ARG0 (s / since 
                                    :op1 (i / incident))) 
                        :ARG1-of (d2 / damage-01)) 
                  :condition-of (c2 / cost-01 
                        :ARG0 (c / commission) 
                        :ARG1 (a2 / accident) 
                        :ARG1-of (b / believe-01))) 
            :time (d / date-entity 
                  :month 2)))

# ::snt mr denis wynn defending said painting regretted causing the accident
# ::tok mr denis wynn defending said painting regretted causing the accident
# ::alignments 9-10|0.0.1 7-8|0.0 5-6|0.0.0 4-5|0 3-4|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:56.273
# ::node	0	say-01	4-5
# ::node	0.0	cause-01	7-8
# ::node	0.0.0	paint-02	5-6
# ::node	0.0.1	accident	9-10
# ::node	0.1	defend-01	3-4
# ::root	0	say-01
# ::edge	cause-01	ARG0	paint-02	0.0	0.0.0	
# ::edge	cause-01	ARG1	accident	0.0	0.0.1	
# ::edge	defend-01	ARG1	say-01	0.1	0	
# ::edge	say-01	ARG1	cause-01	0	0.0	
(s / say-01 
      :ARG1 (c / cause-01 
            :ARG0 (p / paint-02) 
            :ARG1 (a / accident)) 
      :ARG1-of (d / defend-01))

# ::snt and it all happened by accident its not surprising that it makes her grouchy
# ::tok and it all happened by accident its not surprising that it makes her grouchy
# ::alignments 10-11|0.0.1.0.0 8-9|0.0.1.0 5-6|0.0.1 3-4|0.0 2-3|0.0.0.0 1-2|0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:56.337
# ::node	0	and	0-1
# ::node	0.0	happen-01	3-4
# ::node	0.0.0	it	1-2
# ::node	0.0.0.0	all	2-3
# ::node	0.0.1	accident	5-6
# ::node	0.0.1.0	surprise-01	8-9
# ::node	0.0.1.0.0	it	10-11
# ::root	0	and
(a3 / and 
      :ARG1-of (h / happen-01 
            :ARG0 (i2 / it 
                  :quant (a2 / all)) 
            :ARG2 (a / accident 
                  :ARG0-of (s / surprise-01 
                        :ARG2 (i / it)))))

# ::snt there are yellow fields now but they are fields of rape a darker denser yellow and there by design and not accident
# ::tok there are yellow fields now but they are fields of rape a darker denser yellow and there by design and not accident
# ::alignments 21-22|0.3.1 19-20|0.3 18-19|0.3.0 15-16|0.2 14-15|0.1.0.0.0 12-13|0.1.0.0 10-11|0.1.0 8-9|0.1 6-7|0.3.0.0 5-6|0 4-5|0.0.1 3-4|0.0 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:56.483
# ::node	0	contrast-01	5-6
# ::node	0.0	field	3-4
# ::node	0.0.0	yellow	2-3
# ::node	0.0.1	now	4-5
# ::node	0.1	field	8-9
# ::node	0.1.0	rape-01	10-11
# ::node	0.1.0.0	dark	12-13
# ::node	0.1.0.0.0	yellow	14-15
# ::node	0.2	and	15-16
# ::node	0.3	and	19-20
# ::node	0.3.0	design-01	18-19
# ::node	0.3.0.0	they	6-7
# ::node	0.3.1	accident	21-22
# ::root	0	contrast-01
# ::edge	and	op1	contrast-01	0.3	0	
# ::edge	and	op2	design-01	0.3	0.3.0	
# ::edge	and	op3	accident	0.3	0.3.1	
# ::edge	contrast-01	ARG0	field	0	0.0	
# ::edge	contrast-01	ARG1	field	0	0.1	
# ::edge	contrast-01	ARG2	and	0	0.2	
# ::edge	design-01	ARG1	they	0.3.0	0.3.0.0	
# ::edge	field	mod	yellow	0.0	0.0.0	
# ::edge	field	time	now	0.0	0.0.1	
# ::edge	rape-01	ARG0	field	0.1.0	0.1	
# ::edge	rape-01	ARG1	dark	0.1.0	0.1.0.0	
# ::edge	yellow	mod	dark	0.1.0.0.0	0.1.0.0	
(c / contrast-01 
      :ARG0 (f2 / field 
            :mod (y2 / yellow) 
            :time (n / now)) 
      :ARG1 (f / field 
            :ARG0-of (r / rape-01 
                  :ARG1 (d2 / dark 
                        :mod-of (y / yellow)))) 
      :ARG2 (a3 / and) 
      :op-of (a2 / and 
            :op1 (d / design-01 
                  :ARG1 (t / they)) 
            :op2 (a / accident)))

# ::snt accident prevention schemes are also planned and regional councils will be invited to suggest schemes costing up to 1m
# ::tok accident prevention schemes are also planned and regional councils will be invited to suggest schemes costing up to 1m
# ::alignments 15-16|0 14-15|0.0 13-14|0.0.0 11-12|0.0.0.0 8-9|0.0.0.0.0 7-8|0.0.0.0.0.0 6-7|0.0.0.1 5-6|0.0.0.1.1 4-5|0.0.0.0.0.1 2-3|0.0.0.1.0.1 1-2|0.0.0.1.0 0-1|0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:56.583
# ::node	0	cost-01	15-16
# ::node	0.0	scheme-01	14-15
# ::node	0.0.0	suggest-01	13-14
# ::node	0.0.0.0	invite-01	11-12
# ::node	0.0.0.0.0	council	8-9
# ::node	0.0.0.0.0.0	region	7-8
# ::node	0.0.0.0.0.1	also	4-5
# ::node	0.0.0.1	and	6-7
# ::node	0.0.0.1.0	prevent-01	1-2
# ::node	0.0.0.1.0.0	accident	0-1
# ::node	0.0.0.1.0.1	scheme-01	2-3
# ::node	0.0.0.1.1	plan-01	5-6
# ::root	0	cost-01
# ::edge	and	op1	prevent-01	0.0.0.1	0.0.0.1.0	
# ::edge	and	op2	plan-01	0.0.0.1	0.0.0.1.1	
# ::edge	and	op3	suggest-01	0.0.0.1	0.0.0	
# ::edge	cost-01	ARG1	scheme-01	0	0.0	
# ::edge	council	mod	also	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	council	mod	region	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	invite-01	ARG1	council	0.0.0.0	0.0.0.0.0	
# ::edge	invite-01	ARG2	suggest-01	0.0.0.0	0.0.0	
# ::edge	prevent-01	ARG1	accident	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	scheme-01	ARG1	prevent-01	0.0.0.1.0.1	0.0.0.1.0	
# ::edge	suggest-01	ARG1	scheme-01	0.0.0	0.0	
(c / cost-01 
      :ARG1 (s / scheme-01 
            :ARG1-of (s2 / suggest-01 
                  :ARG2-of (i / invite-01 
                        :ARG1 (c2 / council 
                              :mod (r / region) 
                              :mod (a2 / also))) 
                  :op-of (a / and 
                        :op1 (p2 / prevent-01 
                              :ARG1 (a3 / accident) 
                              :ARG1-of (s3 / scheme-01)) 
                        :op2 (p / plan-01)))))

# ::snt but from now on whenever i read an accident report i shall be slightly less blaseacute
# ::tok but from now on whenever i read an accident report i shall be slightly less blaseacute
# ::alignments 14-15|0.2.0 13-14|0.2 10-11|0.1.1.1 9-10|0.1.1 8-9|0.1.1.0 6-7|0.1 5-6|0.1.0 4-5|0.1.0.0 2-3|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:56.701
# ::node	0	contrast-01	0-1
# ::node	0.0	now	2-3
# ::node	0.1	read-01	6-7
# ::node	0.1.0	i	5-6
# ::node	0.1.0.0	whenever	4-5
# ::node	0.1.1	report	9-10
# ::node	0.1.1.0	accident	8-9
# ::node	0.1.1.1	i	10-11
# ::node	0.2	slight	13-14
# ::node	0.2.0	less	14-15
# ::root	0	contrast-01
# ::edge	contrast-01	ARG0	now	0	0.0	
# ::edge	less	degree	slight	0.2.0	0.2	
# ::edge	read-01	ARG0	i	0.1	0.1.0	
# ::edge	read-01	ARG1	report	0.1	0.1.1	
# ::edge	read-01	condition	contrast-01	0.1	0	
# ::edge	report	mod	accident	0.1.1	0.1.1.0	
# ::edge	report	mod	i	0.1.1	0.1.1.1	
# ::edge	slight	op1	contrast-01	0.2	0	
# ::edge	whenever	mod	i	0.1.0.0	0.1.0	
(c / contrast-01 
      :ARG0 (n / now) 
      :condition-of (r2 / read-01 
            :ARG0 (i2 / i 
                  :mod-of (w / whenever)) 
            :ARG1 (r / report 
                  :mod (a / accident) 
                  :mod (i / i))) 
      :op-of (s / slight 
            :degree-of (l / less)))

# ::snt either by accident or as punishment for his sins she had left him to the mercy of the bogeyman
# ::tok either by accident or as punishment for his sins she had left him to the mercy of the bogeyman
# ::alignments 9-10|0.0.1.0 8-9|0.0.1 5-6|0.0 3-4|0 2-3|0.0.0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:56.730
# ::node	0	or	3-4
# ::node	0.0	punish-01	5-6
# ::node	0.0.0	either	0-1
# ::node	0.0.0.0	accident	2-3
# ::node	0.0.1	sin-01	8-9
# ::node	0.0.1.0	she	9-10
# ::root	0	or
(o / or 
      :ARG0-of (p / punish-01 
            :ARG1 (e / either 
                  :op1 (a / accident)) 
            :ARG2 (s2 / sin-01 
                  :ARG0 (s / she))))

# ::snt commons by happy historical accident have survived as incredible wildlife havens the societys spokeswoman trina paskell said
# ::tok commons by happy historical accident have survived as incredible wildlife havens the societys spokeswoman trina paskell said
# ::alignments 16-17|0 13-14|0.0.0.0.0.0+0.0.0.0.0 10-11|0.0 9-10|0.0.2 8-9|0.0.1 6-7|0.0.0 4-5|0.0.0.0.1 3-4|0.0.0.0.1.1 2-3|0.0.0.0.1.0 0-1|0.0.0.0.2.0+0.0.0.0.2+0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:56.797
# ::node	0	say-01	16-17
# ::node	0.0	haven	10-11
# ::node	0.0.0	survive-01	6-7
# ::node	0.0.0.0	government-organization	0-1
# ::node	0.0.0.0.0	have-org-role-91	13-14
# ::node	0.0.0.0.0.0	spokeswoman	13-14
# ::node	0.0.0.0.1	accident	4-5
# ::node	0.0.0.0.1.0	happy	2-3
# ::node	0.0.0.0.1.1	history	3-4
# ::node	0.0.0.0.2	name	0-1
# ::node	0.0.0.0.2.0	"Commons"	0-1
# ::node	0.0.1	incredible	8-9
# ::node	0.0.2	wildlife	9-10
# ::root	0	say-01
# ::edge	accident	mod	happy	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	accident	mod	history	0.0.0.0.1	0.0.0.0.1.1	
# ::edge	government-organization	location	accident	0.0.0.0	0.0.0.0.1	
# ::edge	government-organization	name	name	0.0.0.0	0.0.0.0.2	
# ::edge	have-org-role-91	ARG1	government-organization	0.0.0.0.0	0.0.0.0	
# ::edge	have-org-role-91	ARG2	spokeswoman	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	haven	mod	incredible	0.0	0.0.1	
# ::edge	haven	mod	wildlife	0.0	0.0.2	
# ::edge	name	op1	"Commons"	0.0.0.0.2	0.0.0.0.2.0	
# ::edge	say-01	ARG1	haven	0	0.0	
# ::edge	survive-01	ARG0	government-organization	0.0.0	0.0.0.0	
# ::edge	survive-01	ARG1	haven	0.0.0	0.0	
(s / say-01 
      :ARG1 (h2 / haven 
            :ARG1-of (s3 / survive-01 
                  :ARG0 (g / government-organization 
                        :ARG1-of (h / have-org-role-91 
                              :ARG2 (s2 / spokeswoman)) 
                        :location (a / accident 
                              :mod (h4 / happy) 
                              :mod (h3 / history)) 
                        :name (n / name 
                              :op1 "Commons"))) 
            :mod (i / incredible) 
            :mod (w / wildlife)))

# ::snt we want manufacturers to design and offer them to motorcyclists who want better protection from accidents
# ::tok we want manufacturers to design and offer them to motorcyclists who want better protection from accidents
# ::alignments 15-16|0.1.0.0.0 13-14|0.1.0.0 11-12|0.1.0 6-7|0.1.2 5-6|0.1 4-5|0.1.1 2-3|0.1.2.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:56.949
# ::node	0	want-01	1-2
# ::node	0.0	we	0-1
# ::node	0.1	and	5-6
# ::node	0.1.0	want-01	11-12
# ::node	0.1.0.0	protect-01	13-14
# ::node	0.1.0.0.0	accident	15-16
# ::node	0.1.1	design-01	4-5
# ::node	0.1.2	offer-01	6-7
# ::node	0.1.2.0	manufacture-01	2-3
# ::root	0	want-01
# ::edge	and	op1	design-01	0.1	0.1.1	
# ::edge	and	op2	offer-01	0.1	0.1.2	
# ::edge	offer-01	ARG0	manufacture-01	0.1.2	0.1.2.0	
# ::edge	protect-01	ARG2	accident	0.1.0.0	0.1.0.0.0	
# ::edge	want-01	ARG0	and	0.1.0	0.1	
# ::edge	want-01	ARG0	we	0	0.0	
# ::edge	want-01	ARG1	and	0	0.1	
# ::edge	want-01	ARG1	protect-01	0.1.0	0.1.0.0	
(w2 / want-01 
      :ARG0 (w3 / we) 
      :ARG1 (a2 / and 
            :ARG0-of (w / want-01 
                  :ARG1 (p / protect-01 
                        :ARG2 (a / accident))) 
            :op1 (d / design-01) 
            :op2 (o / offer-01 
                  :ARG0 (m / manufacture-01))))

# ::snt however after the age of 65 the chance of an accident with serious consequences does become much greater and a recovery often takes longer to achieve
# ::tok however after the age of 65 the chance of an accident with serious consequences does become much greater and a recovery often takes longer to achieve
# ::alignments 25-26|0.1.0.1 23-24|0.1.0.1.0 21-22|0.1.0.2 20-21|0.1.0 18-19|0.1.1 17-18|0.1 16-17|0.1.1.0.1 15-16|0.1.1.0 13-14|0.0 12-13|0.0.0 10-11|0.2 7-8|0.1.0.0 5-6|0.1.1.0.0 3-4|0 1-2|0.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:57.081
# ::node	0	age-01	3-4
# ::node	0.0	consequence	13-14
# ::node	0.0.0	serious	12-13
# ::node	0.1	great	17-18
# ::node	0.1.0	recover-01	20-21
# ::node	0.1.0.0	chance	7-8
# ::node	0.1.0.1	achieve-01	25-26
# ::node	0.1.0.1.0	long	23-24
# ::node	0.1.0.2	often	21-22
# ::node	0.1.1	and	18-19
# ::node	0.1.1.0	become-01	15-16
# ::node	0.1.1.0.0	65	5-6
# ::node	0.1.1.0.1	much	16-17
# ::node	0.2	accident	10-11
# ::node	0.3	after	1-2
# ::root	0	age-01
# ::edge	achieve-01	ARG1	recover-01	0.1.0.1	0.1.0	
# ::edge	achieve-01	mod	long	0.1.0.1	0.1.0.1.0	
# ::edge	after	op1	age-01	0.3	0	
# ::edge	age-01	ARG0	consequence	0	0.0	
# ::edge	age-01	location	accident	0	0.2	
# ::edge	and	op1	great	0.1.1	0.1	
# ::edge	become-01	ARG0	65	0.1.1.0	0.1.1.0.0	
# ::edge	become-01	ARG1	much	0.1.1.0	0.1.1.0.1	
# ::edge	become-01	ARG2	and	0.1.1.0	0.1.1	
# ::edge	consequence	mod	serious	0.0	0.0.0	
# ::edge	great	domain	age-01	0.1	0	
# ::edge	recover-01	ARG0	chance	0.1.0	0.1.0.0	
# ::edge	recover-01	ARG1	great	0.1.0	0.1	
# ::edge	recover-01	time	often	0.1.0	0.1.0.2	
(a4 / age-01 
      :ARG0 (c / consequence 
            :mod (s / serious)) 
      :domain-of (g / great 
            :ARG1-of (r / recover-01 
                  :ARG0 (c2 / chance) 
                  :ARG1-of (a / achieve-01 
                        :mod (l / long)) 
                  :time (o / often)) 
            :op-of (a2 / and 
                  :ARG2-of (b / become-01 
                        :ARG0 65 
                        :ARG1 (m / much)))) 
      :location (a3 / accident) 
      :op-of (a5 / after))

# ::snt victoria sharp the defence lawyer injured in a road accident on friday was back in court with a neck bandage and her right arm in a sling
# ::tok victoria sharp the defence lawyer injured in a road accident on friday was back in court with a neck bandage and her right arm in a sling
# ::alignments 23-24|0.2 20-21|0 18-19|0.0.0.0.0 15-16|0.1 13-14|0.3 11-12|0.0.0.0.1 9-10|0.0.1 8-9|0.0.1.0 5-6|0.0 4-5|0.0.0 3-4|0.0.0.0 1-2|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:57.199
# ::node	0	and	20-21
# ::node	0.0	injure-01	5-6
# ::node	0.0.0	lawyer	4-5
# ::node	0.0.0.0	defend-01	3-4
# ::node	0.0.0.0.0	neck	18-19
# ::node	0.0.0.0.1	friday	11-12
# ::node	0.0.0.1	sharp	1-2
# ::node	0.0.1	accident	9-10
# ::node	0.0.1.0	road	8-9
# ::node	0.1	court	15-16
# ::node	0.2	arm	23-24
# ::node	0.3	back	13-14
# ::root	0	and
# ::edge	accident	location	road	0.0.1	0.0.1.0	
# ::edge	and	op1	court	0	0.1	
# ::edge	and	op2	arm	0	0.2	
# ::edge	back	poss	and	0.3	0	
# ::edge	defend-01	ARG0	lawyer	0.0.0.0	0.0.0	
# ::edge	defend-01	ARG1	neck	0.0.0.0	0.0.0.0.0	
# ::edge	defend-01	location	friday	0.0.0.0	0.0.0.0.1	
# ::edge	injure-01	ARG0	and	0.0	0	
# ::edge	injure-01	ARG1	lawyer	0.0	0.0.0	
# ::edge	injure-01	ARG2	accident	0.0	0.0.1	
# ::edge	sharp	mod	lawyer	0.0.0.1	0.0.0	
(a2 / and 
      :ARG0-of (i / injure-01 
            :ARG1 (l / lawyer 
                  :ARG0-of (d / defend-01 
                        :ARG1 (n / neck) 
                        :location (f / friday)) 
                  :mod-of (s / sharp)) 
            :ARG2 (a3 / accident 
                  :location (r / road))) 
      :op1 (c / court) 
      :op2 (a / arm) 
      :poss-of (b / back))

# ::snt the survivors of a nuclear attack never learn what went wrong whether there really was a war or whether it was all an accident
# ::tok the survivors of a nuclear attack never learn what went wrong whether there really was a war or whether it was all an accident
# ::alignments 23-24|0.1.1 21-22|0.1.1.1 19-20|0.1.1.0 17-18|0.1 16-17|0.1.0.0 13-14|0.0.0.0.0 10-11|0.1.0 7-8|0 5-6|0.0.0.0 4-5|0.0.0.0.1 1-2|0.0.0+0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:57.307
# ::node	0	learn-01	7-8
# ::node	0.0	person	1-2
# ::node	0.0.0	survive-01	1-2
# ::node	0.0.0.0	attack-01	5-6
# ::node	0.0.0.0.0	really	13-14
# ::node	0.0.0.0.1	nucleus	4-5
# ::node	0.1	or	17-18
# ::node	0.1.0	wrong-41	10-11
# ::node	0.1.0.0	war	16-17
# ::node	0.1.1	accident	23-24
# ::node	0.1.1.0	it	19-20
# ::node	0.1.1.1	all	21-22
# ::root	0	learn-01
# ::edge	accident	domain	it	0.1.1	0.1.1.0	
# ::edge	accident	quant	all	0.1.1	0.1.1.1	
# ::edge	attack-01	ARG1	really	0.0.0.0	0.0.0.0.0	
# ::edge	attack-01	mod	nucleus	0.0.0.0	0.0.0.0.1	
# ::edge	learn-01	ARG0	person	0	0.0	
# ::edge	learn-01	ARG1	or	0	0.1	
# ::edge	or	op1	accident	0.1	0.1.1	
# ::edge	survive-01	ARG0	person	0.0.0	0.0	
# ::edge	survive-01	ARG1	attack-01	0.0.0	0.0.0.0	
# ::edge	wrong-41	ARG0	war	0.1.0	0.1.0.0	
# ::edge	wrong-41	ARG1	or	0.1.0	0.1	
(l / learn-01 
      :ARG0 (p / person 
            :ARG0-of (s / survive-01 
                  :ARG1 (a3 / attack-01 
                        :ARG1 (r / really) 
                        :mod (n / nucleus)))) 
      :ARG1 (o / or 
            :ARG1-of (w2 / wrong-41 
                  :ARG0 (w / war)) 
            :op1 (a / accident 
                  :domain (i / it) 
                  :quant (a2 / all))))

# ::snt   this reluctance to share information is alleged to have led to several disasters where information was not passed to the right people in time and where one organisation arrested the informants of another by accident
# ::tok this reluctance to share information is alleged to have led to several disasters where information was not passed to the right people in time and where one organisation arrested the informants of another by accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:57.308
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt from 1951 to 1964 the scientist is less likely to be a corrupt figure and more typically brings about disaster by accident especially of a kind connected with atomic energy
# ::tok from 1951 to 1964 the scientist is less likely to be a corrupt figure and more typically brings about disaster by accident especially of a kind connected with atomic energy
# ::alignments 29-30|0.0.0.0.1 28-29|0.0.0.0.1.0 26-27|0.0.0.0 25-26|0.0.0.0.0 22-23|0.0.0.0.2 21-22|0.0.0 19-20|0.0.1 17-18|0.0 16-17|0.0.2 14-15|0 13-14|0.1.2 12-13|0.1.2.0 8-9|0.1 7-8|0.1.0 5-6|0.1.1 3-4|0.1.2.0.0.0+0.1.2.0.0 1-2|0.0.3.0+0.0.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:57.978
# ::node	0	and	14-15
# ::node	0.0	bring-01	17-18
# ::node	0.0.0	accident	21-22
# ::node	0.0.0.0	connect-01	26-27
# ::node	0.0.0.0.0	kind	25-26
# ::node	0.0.0.0.1	energy	29-30
# ::node	0.0.0.0.1.0	atom	28-29
# ::node	0.0.0.0.2	especially	22-23
# ::node	0.0.1	disaster	19-20
# ::node	0.0.2	typical	16-17
# ::node	0.0.3	date-entity	1-2
# ::node	0.0.3.0	1951	1-2
# ::node	0.1	likely	8-9
# ::node	0.1.0	less	7-8
# ::node	0.1.1	scientist	5-6
# ::node	0.1.2	figure	13-14
# ::node	0.1.2.0	corrupt-01	12-13
# ::node	0.1.2.0.0	date-entity	3-4
# ::node	0.1.2.0.0.0	1964	3-4
# ::root	0	and
# ::edge	and	op1	likely	0	0.1	
# ::edge	bring-01	ARG0	accident	0.0	0.0.0	
# ::edge	bring-01	ARG1	disaster	0.0	0.0.1	
# ::edge	bring-01	ARG2	and	0.0	0	
# ::edge	bring-01	mod	typical	0.0	0.0.2	
# ::edge	bring-01	time	date-entity	0.0	0.0.3	
# ::edge	connect-01	ARG0	accident	0.0.0.0	0.0.0	
# ::edge	connect-01	ARG1	kind	0.0.0.0	0.0.0.0.0	
# ::edge	connect-01	location	energy	0.0.0.0	0.0.0.0.1	
# ::edge	connect-01	mod	especially	0.0.0.0	0.0.0.0.2	
# ::edge	corrupt-01	ARG0	date-entity	0.1.2.0	0.1.2.0.0	
# ::edge	corrupt-01	ARG1	figure	0.1.2.0	0.1.2	
# ::edge	date-entity	year	1951	0.0.3	0.0.3.0	
# ::edge	date-entity	year	1964	0.1.2.0.0	0.1.2.0.0.0	
# ::edge	energy	mod	atom	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	likely	degree	less	0.1	0.1.0	
# ::edge	likely	domain	figure	0.1	0.1.2	
# ::edge	likely	domain	scientist	0.1	0.1.1	
(a3 / and 
      :ARG2-of (b / bring-01 
            :ARG0 (a2 / accident 
                  :ARG0-of (c / connect-01 
                        :ARG1 (k / kind) 
                        :location (e / energy 
                              :mod (a / atom)) 
                        :mod (e2 / especially))) 
            :ARG1 (d / disaster) 
            :mod (t / typical) 
            :time (d3 / date-entity 
                  :year 1951)) 
      :op1 (l / likely 
            :degree (l2 / less) 
            :domain (s / scientist) 
            :domain (f / figure 
                  :ARG1-of (c2 / corrupt-01 
                        :ARG0 (d2 / date-entity 
                              :year 1964)))))

# ::snt meanwhile town striker paul spittle has been selected to play for an invitation xi drawn from vauxhall league division 2 south sides in a benefit match in memory of molesey defender kevin rose who was killed in an accident at work
# ::tok meanwhile town striker paul spittle has been selected to play for an invitation xi drawn from vauxhall league division 2 south sides in a benefit match in memory of molesey defender kevin rose who was killed in an accident at work
# ::alignments 38-39|0.0.0.0.0.1 35-36|0.0.0.0.0 32-33|0.0.0.0 30-31|0.0.0.0.1.0 27-28|0.0.1 25-26|0.0 24-25|0 21-22|0.0.0 20-21|0.0.0.1 19-20|0.0.0.2 18-19|0.0.0.0.0.0.0.0 17-18|0.0.0.0.0.0.0 12-13|0.0.0.0.0.0 9-10|0.0.0.0.1 7-8|0.0.0.0.1.1 1-2|0.0.0.0.1.1.0.0 0-1|0.0.0.0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:58.459
# ::node	0	benefit-01	24-25
# ::node	0.0	match-01	25-26
# ::node	0.0.0	side	21-22
# ::node	0.0.0.0	rise-01	32-33
# ::node	0.0.0.0.0	kill-01	35-36
# ::node	0.0.0.0.0.0	invite-01	12-13
# ::node	0.0.0.0.0.0.0	league	17-18
# ::node	0.0.0.0.0.0.0.0	division	18-19
# ::node	0.0.0.0.0.1	accident	38-39
# ::node	0.0.0.0.1	play-01	9-10
# ::node	0.0.0.0.1.0	defend-01	30-31
# ::node	0.0.0.0.1.1	select-01	7-8
# ::node	0.0.0.0.1.1.0	meanwhile	0-1
# ::node	0.0.0.0.1.1.0.0	town	1-2
# ::node	0.0.0.1	south	20-21
# ::node	0.0.0.2	2	19-20
# ::node	0.0.1	memory	27-28
# ::root	0	benefit-01
(b / benefit-01 
      :ARG2-of (m2 / match-01 
            :ARG0 (s / side 
                  :ARG0-of (r / rise-01 
                        :ARG1 (k / kill-01 
                              :ARG1-of (i / invite-01 
                                    :ARG0 (l / league 
                                          :poss-of (d2 / division))) 
                              :location (a / accident)) 
                        :ARG1-of (p / play-01 
                              :ARG1-of (d / defend-01) 
                              :ARG1-of (s3 / select-01 
                                    :ARG0 (m3 / meanwhile 
                                          :degree-of (t / town))))) 
                  :mod (s2 / south) 
                  :quant 2) 
            :ARG1 (m / memory)))

# ::snt a 78yearold pedestrian died after a road accident in rose hill oxford
# ::tok a 78yearold pedestrian died after a road accident in rose hill oxford
# ::alignments 9-10|0.0.0.0 7-8|0.0.0.0.0 6-7|0.0.0.0.0.0 4-5|0.0.0 3-4|0.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:58.475
# ::node	0	pedestrian	2-3
# ::node	0.0	die-01	3-4
# ::node	0.0.0	after	4-5
# ::node	0.0.0.0	rise-01	9-10
# ::node	0.0.0.0.0	accident	7-8
# ::node	0.0.0.0.0.0	road	6-7
# ::root	0	pedestrian
(p / pedestrian 
      :ARG1-of (d / die-01 
            :time (a2 / after 
                  :op1 (r / rise-01 
                        :ARG1 (a / accident 
                              :location (r2 / road))))))

# ::snt accident report special 40 flyers camera ship cessna 310 was lost in a crash in november
# ::tok accident report special 40 flyers camera ship cessna 310 was lost in a crash in november
# ::alignments 15-16|0.0.0.0.0+0.0.0.0 13-14|0.0.0 10-11|0.0.0.1 6-7|0.1 5-6|0 3-4|0.2 2-3|0.0 1-2|0.0.0.1.0 0-1|0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:58.558
# ::node	0	camera	5-6
# ::node	0.0	special	2-3
# ::node	0.0.0	crash-01	13-14
# ::node	0.0.0.0	date-entity	15-16
# ::node	0.0.0.0.0	11	15-16
# ::node	0.0.0.1	lose-02	10-11
# ::node	0.0.0.1.0	report	1-2
# ::node	0.0.0.1.0.0	accident	0-1
# ::node	0.1	ship	6-7
# ::node	0.2	40	3-4
# ::root	0	camera
# ::edge	camera	mod	special	0	0.0	
# ::edge	camera	quant	40	0	0.2	
# ::edge	crash-01	ARG0	special	0.0.0	0.0	
# ::edge	crash-01	ARG1	date-entity	0.0.0	0.0.0.0	
# ::edge	date-entity	month	11	0.0.0.0	0.0.0.0.0	
# ::edge	lose-02	ARG0	report	0.0.0.1	0.0.0.1.0	
# ::edge	lose-02	ARG1	crash-01	0.0.0.1	0.0.0	
# ::edge	report	mod	accident	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	ship	mod	camera	0.1	0	
(c2 / camera 
      :mod (s2 / special 
            :ARG0-of (c / crash-01 
                  :ARG1 (d / date-entity 
                        :month 11) 
                  :ARG1-of (l / lose-02 
                        :ARG0 (r / report 
                              :mod (a / accident))))) 
      :mod-of (s / ship) 
      :quant 40)

# ::snt   factory inspector mr roger amery of the health and safety executive said a quarter of all fatal factory accidents were roof falls and mr doig should certainly have used boards
# ::tok factory inspector mr roger amery of the health and safety executive said a quarter of all fatal factory accidents were roof falls and mr doig should certainly have used boards
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:58.559
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the disputes ban on nonemergency calls had improved accident services
# ::tok the disputes ban on nonemergency calls had improved accident services
# ::alignments 9-10|0.0.0 8-9|0.0.0.0 7-8|0.0 2-3|0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:58.584
# ::node	0	ban-01	2-3
# ::node	0.0	improve-01	7-8
# ::node	0.0.0	service	9-10
# ::node	0.0.0.0	accident	8-9
# ::node	0.1	dispute-01	1-2
# ::root	0	ban-01
# ::edge	ban-01	ARG1	dispute-01	0	0.1	
# ::edge	improve-01	ARG0	ban-01	0.0	0	
# ::edge	improve-01	ARG1	service	0.0	0.0.0	
# ::edge	service	mod	accident	0.0.0	0.0.0.0	
(b / ban-01 
      :ARG0-of (i / improve-01 
            :ARG1 (s / service 
                  :mod (a / accident))) 
      :ARG1 (d / dispute-01))

# ::snt the hero is a noble scientist turned into a walking plant by a freak accident but he seems to have few genuinely vegetable traits
# ::tok the hero is a noble scientist turned into a walking plant by a freak accident but he seems to have few genuinely vegetable traits
# ::alignments 21-22|0.0.0.0 20-21|0.1.0.0 17-18|0.1 16-17|0.1.0 15-16|0 14-15|0.0.0.1.1 13-14|0.0.0.1 10-11|0.0 9-10|0.0.0 5-6|0.0.0.1.0.0 4-5|0.0.0.1.0.0.0 1-2|0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:58.815
# ::node	0	contrast-01	15-16
# ::node	0.0	plant	10-11
# ::node	0.0.0	walk-01	9-10
# ::node	0.0.0.0	genuine	21-22
# ::node	0.0.0.1	freak-01	13-14
# ::node	0.0.0.1.0	hero	1-2
# ::node	0.0.0.1.0.0	scientist	5-6
# ::node	0.0.0.1.0.0.0	noble	4-5
# ::node	0.0.0.1.1	accident	14-15
# ::node	0.1	seem-01	17-18
# ::node	0.1.0	he	16-17
# ::node	0.1.0.0	few	20-21
# ::root	0	contrast-01
# ::edge	accident	location	freak-01	0.0.0.1.1	0.0.0.1	
# ::edge	contrast-01	ARG1	plant	0	0.0	
# ::edge	contrast-01	ARG2	seem-01	0	0.1	
# ::edge	few	op1	he	0.1.0.0	0.1.0	
# ::edge	freak-01	ARG0	hero	0.0.0.1	0.0.0.1.0	
# ::edge	scientist	domain	hero	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	scientist	mod	noble	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	seem-01	ARG1	he	0.1	0.1.0	
# ::edge	walk-01	ARG0	plant	0.0.0	0.0	
# ::edge	walk-01	ARG1	genuine	0.0.0	0.0.0.0	
# ::edge	walk-01	manner	freak-01	0.0.0	0.0.0.1	
(c / contrast-01 
      :ARG1 (p / plant 
            :ARG0-of (w / walk-01 
                  :ARG1 (g / genuine) 
                  :manner (f2 / freak-01 
                        :ARG0 (h2 / hero 
                              :domain-of (s2 / scientist 
                                    :mod (n / noble))) 
                        :location-of (a / accident)))) 
      :ARG2 (s / seem-01 
            :ARG1 (h / he 
                  :op-of (f / few))))

# ::snt he remains unconvinced that the flasks could withstand a serious fire on a ship or as a result of a railway accident
# ::tok he remains unconvinced that the flasks could withstand a serious fire on a ship or as a result of a railway accident
# ::alignments 21-22|0.0 20-21|0.0.0 17-18|0 14-15|0.0.0.0.0.0 13-14|0.0.0.0 9-10|0.0.0.0.0.1.0 7-8|0.0.0.0.0 6-7|0.0.0.0.0.2 1-2|0.0.0.0.0.1 0-1|0.0.0.0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:58.954
# ::node	0	result-01	17-18
# ::node	0.0	accident	21-22
# ::node	0.0.0	railway	20-21
# ::node	0.0.0.0	ship	13-14
# ::node	0.0.0.0.0	withstand-01	7-8
# ::node	0.0.0.0.0.0	or	14-15
# ::node	0.0.0.0.0.1	remain-01	1-2
# ::node	0.0.0.0.0.1.0	serious	9-10
# ::node	0.0.0.0.0.1.1	he	0-1
# ::node	0.0.0.0.0.2	possible	6-7
# ::root	0	result-01
# ::edge	accident	location	railway	0.0	0.0.0	
# ::edge	possible	domain	withstand-01	0.0.0.0.0.2	0.0.0.0.0	
# ::edge	remain-01	ARG0	serious	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	remain-01	ARG1	he	0.0.0.0.0.1	0.0.0.0.0.1.1	
# ::edge	remain-01	ARG2	withstand-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	result-01	ARG1	accident	0	0.0	
# ::edge	ship	location	railway	0.0.0.0	0.0.0	
# ::edge	withstand-01	ARG0	or	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	withstand-01	ARG2	ship	0.0.0.0.0	0.0.0.0	
(r2 / result-01 
      :ARG1 (a / accident 
            :location (r / railway 
                  :location-of (s / ship 
                        :ARG2-of (w / withstand-01 
                              :ARG0 (o / or) 
                              :ARG2-of (r3 / remain-01 
                                    :ARG0 (s2 / serious) 
                                    :ARG1 (h / he)) 
                              :domain-of (p / possible))))))

# ::snt it upheld the mandatory property insurance provision which covers only damage caused by the insured to the property of third parties other than their cars as justified by anticipated improvements of the accident reparation system in general in deference to legislative judgment in matters of economic control
# ::tok it upheld the mandatory property insurance provision which covers only damage caused by the insured to the property of third parties other than their cars as justified by anticipated improvements of the accident reparation system in general in deference to legislative judgment in matters of economic control
# ::alignments 46-47|0.0.1.0.1.1 45-46|0.0.1.0.1.1.1 43-44|0.0.1.0.1.1.0.0.0 41-42|0.0.1.0.1.1.0.0 40-41|0.0.1.0.1.1.0 36-37|0.0.1.0.1.0.0 34-35|0.0.1.0.1.0 32-33|0.0.0 29-30|0.0.1.0.1 28-29|0.0.1.0.1.2 26-27|0.0.1.0.1.2.0 24-25|0.0.1.0.1.2.0.0 21-22|0.0.1.0.1.2.0.1 20-21|0.1.0.0.0 17-18|0.1.0.0 14-15|0.1.0+0.1 11-12|0 10-11|0.0 9-10|0.0.2 8-9|0.0.1 5-6|0.0.1.0.0.0 4-5|0.0.1.0.0.0.0 3-4|0.0.1.0.0.0.0.0 1-2|0.0.1.0.0 0-1|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:59.832
# ::node	0	cause-01	11-12
# ::node	0.0	damage-01	10-11
# ::node	0.0.0	accident	32-33
# ::node	0.0.1	cover-01	8-9
# ::node	0.0.1.0	it	0-1
# ::node	0.0.1.0.0	uphold-01	1-2
# ::node	0.0.1.0.0.0	insure-02	5-6
# ::node	0.0.1.0.0.0.0	property	4-5
# ::node	0.0.1.0.0.0.0.0	mandatory	3-4
# ::node	0.0.1.0.1	improve-01	29-30
# ::node	0.0.1.0.1.0	system	34-35
# ::node	0.0.1.0.1.0.0	general	36-37
# ::node	0.0.1.0.1.1	control-01	46-47
# ::node	0.0.1.0.1.1.0	legislate-01	40-41
# ::node	0.0.1.0.1.1.0.0	judge-01	41-42
# ::node	0.0.1.0.1.1.0.0.0	matter	43-44
# ::node	0.0.1.0.1.1.1	economy	45-46
# ::node	0.0.1.0.1.2	anticipate-01	28-29
# ::node	0.0.1.0.1.2.0	justify-01	26-27
# ::node	0.0.1.0.1.2.0.0	car	24-25
# ::node	0.0.1.0.1.2.0.1	other	21-22
# ::node	0.0.2	only	9-10
# ::node	0.1	person	14-15
# ::node	0.1.0	insure-02	14-15
# ::node	0.1.0.0	property	17-18
# ::node	0.1.0.0.0	party	20-21
# ::root	0	cause-01
# ::edge	anticipate-01	ARG1	improve-01	0.0.1.0.1.2	0.0.1.0.1	
# ::edge	cause-01	ARG1	damage-01	0	0.0	
# ::edge	cause-01	manner	person	0	0.1	
# ::edge	control-01	ARG1	improve-01	0.0.1.0.1.1	0.0.1.0.1	
# ::edge	control-01	manner	economy	0.0.1.0.1.1	0.0.1.0.1.1.1	
# ::edge	cover-01	ARG0	it	0.0.1	0.0.1.0	
# ::edge	cover-01	ARG1	damage-01	0.0.1	0.0	
# ::edge	damage-01	ARG1	accident	0.0	0.0.0	
# ::edge	damage-01	mod	only	0.0	0.0.2	
# ::edge	improve-01	ARG0	it	0.0.1.0.1	0.0.1.0	
# ::edge	improve-01	ARG1	system	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	insure-02	ARG1	person	0.1.0	0.1	
# ::edge	insure-02	ARG1	property	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	insure-02	ARG2	property	0.1.0	0.1.0.0	
# ::edge	judge-01	ARG1	matter	0.0.1.0.1.1.0.0	0.0.1.0.1.1.0.0.0	
# ::edge	justify-01	ARG0	car	0.0.1.0.1.2.0	0.0.1.0.1.2.0.0	
# ::edge	justify-01	ARG1	other	0.0.1.0.1.2.0	0.0.1.0.1.2.0.1	
# ::edge	justify-01	ARG2	anticipate-01	0.0.1.0.1.2.0	0.0.1.0.1.2	
# ::edge	legislate-01	ARG0	judge-01	0.0.1.0.1.1.0	0.0.1.0.1.1.0.0	
# ::edge	legislate-01	ARG1	control-01	0.0.1.0.1.1.0	0.0.1.0.1.1	
# ::edge	property	mod	mandatory	0.0.1.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	property	poss	party	0.1.0.0	0.1.0.0.0	
# ::edge	system	mod	general	0.0.1.0.1.0	0.0.1.0.1.0.0	
# ::edge	uphold-01	ARG0	it	0.0.1.0.0	0.0.1.0	
# ::edge	uphold-01	ARG1	insure-02	0.0.1.0.0	0.0.1.0.0.0	
(c3 / cause-01 
      :ARG1 (d / damage-01 
            :ARG1 (a / accident) 
            :ARG1-of (c4 / cover-01 
                  :ARG0 (i4 / it 
                        :ARG0-of (u / uphold-01 
                              :ARG1 (i3 / insure-02 
                                    :ARG1 (p4 / property 
                                          :mod (m2 / mandatory)))) 
                        :ARG0-of (i / improve-01 
                              :ARG1 (s / system 
                                    :mod (g / general)) 
                              :ARG1-of (c / control-01 
                                    :ARG1-of (l / legislate-01 
                                          :ARG0 (j / judge-01 
                                                :ARG1 (m / matter))) 
                                    :manner (e / economy)) 
                              :ARG1-of (a2 / anticipate-01 
                                    :ARG2-of (j2 / justify-01 
                                          :ARG0 (c2 / car) 
                                          :ARG1 (o / other)))))) 
            :mod (o2 / only)) 
      :manner (p3 / person 
            :ARG1-of (i2 / insure-02 
                  :ARG2 (p2 / property 
                        :poss (p / party)))))

# ::snt i have not been kind to my back i had accidents when i was a boy treeclimbing and biking and i have spent many years skiing
# ::tok i have not been kind to my back i had accidents when i was a boy treeclimbing and biking and i have spent many years skiing
# ::alignments 24-25|0.1.0+0.1 23-24|0.1.0.0 22-23|0 20-21|0.0 19-20|0.5 17-18|0.4 15-16|0.5.0 12-13|0.5.0.0 10-11|0.3.1 8-9|0.3 7-8|0.5.1 4-5|0.3.0 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:59.964
# ::node	0	spend-01	22-23
# ::node	0.0	i	20-21
# ::node	0.1	temporal-quantity	24-25
# ::node	0.1.0	year	24-25
# ::node	0.1.0.0	many	23-24
# ::node	0.2	i	0-1
# ::node	0.3	i	8-9
# ::node	0.3.0	kind	4-5
# ::node	0.3.1	accident	10-11
# ::node	0.4	and	17-18
# ::node	0.5	and	19-20
# ::node	0.5.0	boy	15-16
# ::node	0.5.0.0	i	12-13
# ::node	0.5.1	back	7-8
# ::root	0	spend-01
# ::edge	accident	poss	i	0.3.1	0.3	
# ::edge	and	op1	boy	0.5	0.5.0	
# ::edge	and	op1	spend-01	0.4	0	
# ::edge	and	op2	spend-01	0.5	0	
# ::edge	back	poss	and	0.5.1	0.5	
# ::edge	boy	example	i	0.5.0	0.5.0.0	
# ::edge	i	op1	spend-01	0.3	0	
# ::edge	kind	op1	i	0.3.0	0.3	
# ::edge	spend-01	ARG0	i	0	0.0	
# ::edge	spend-01	ARG1	temporal-quantity	0	0.1	
# ::edge	spend-01	ARG2	i	0	0.2	
# ::edge	temporal-quantity	unit	year	0.1	0.1.0	
# ::edge	year	mod	many	0.1.0	0.1.0.0	
(s / spend-01 
      :ARG0 (i / i) 
      :ARG1 (t / temporal-quantity 
            :unit (y / year 
                  :mod (m / many))) 
      :ARG2 (i4 / i) 
      :op-of (i3 / i 
            :op-of (k / kind) 
            :poss-of (a3 / accident)) 
      :op-of (a2 / and) 
      :op-of (a / and 
            :op1 (b / boy 
                  :example (i2 / i)) 
            :poss-of (b2 / back)))

# ::snt the accident happened at 11
# ::tok the accident happened at 11
# ::alignments 4-5|0.1 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:00:59.970
# ::node	0	happen-01	2-3
# ::node	0.0	accident	1-2
# ::node	0.1	11	4-5
# ::root	0	happen-01
# ::edge	happen-01	ARG1	accident	0	0.0	
# ::edge	happen-01	time	11	0	0.1	
(h / happen-01 
      :ARG1 (a / accident) 
      :time 11)

# ::snt while they may not realise it owners can be held liable if their dog attacks someone or causes an accident or damage and this policy covers them up to 1 million
# ::tok while they may not realise it owners can be held liable if their dog attacks someone or causes an accident or damage and this policy covers them up to 1 million
# ::alignments 29-30|0.3.1.1 25-26|0.3.1 24-25|0.3.1.0 23-24|0.3.1.2.0.0 22-23|0.3 21-22|0.3.1.2.1.1.0 20-21|0.3.1.2.1.1 19-20|0.3.0 17-18|0.3.1.2.1 16-17|0.3.1.2 15-16|0.3.1.2.0.1 14-15|0.3.1.2.0 13-14|0.3.1.2.1.0 10-11|0.3.1.2.1.0.0 7-8|0.2 6-7|0.3.1.2.1.0.0.0.0+0.3.1.2.1.0.0.0 5-6|0.1 4-5|0 2-3|0.4.0+0.4 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:00.733
# ::node	0	realize-01	4-5
# ::node	0.0	they	1-2
# ::node	0.1	it	5-6
# ::node	0.2	possible	7-8
# ::node	0.3	and	22-23
# ::node	0.3.0	accident	19-20
# ::node	0.3.1	cover-01	25-26
# ::node	0.3.1.0	policy	24-25
# ::node	0.3.1.1	1	29-30
# ::node	0.3.1.2	or	16-17
# ::node	0.3.1.2.0	attack-01	14-15
# ::node	0.3.1.2.0.0	this	23-24
# ::node	0.3.1.2.0.1	someone	15-16
# ::node	0.3.1.2.1	cause-01	17-18
# ::node	0.3.1.2.1.0	dog	13-14
# ::node	0.3.1.2.1.0.0	liable-41	10-11
# ::node	0.3.1.2.1.0.0.0	person	6-7
# ::node	0.3.1.2.1.0.0.0.0	own-01	6-7
# ::node	0.3.1.2.1.1	or	20-21
# ::node	0.3.1.2.1.1.0	damage-01	21-22
# ::node	0.4	date-entity	2-3
# ::node	0.4.0	5	2-3
# ::root	0	realize-01
# ::edge	and	op1	accident	0.3	0.3.0	
# ::edge	and	op2	cover-01	0.3	0.3.1	
# ::edge	attack-01	ARG0	this	0.3.1.2.0	0.3.1.2.0.0	
# ::edge	attack-01	ARG1	someone	0.3.1.2.0	0.3.1.2.0.1	
# ::edge	cause-01	ARG0	dog	0.3.1.2.1	0.3.1.2.1.0	
# ::edge	cause-01	ARG1	or	0.3.1.2.1	0.3.1.2.1.1	
# ::edge	cover-01	ARG0	policy	0.3.1	0.3.1.0	
# ::edge	cover-01	ARG1	1	0.3.1	0.3.1.1	
# ::edge	date-entity	domain	realize-01	0.4	0	
# ::edge	date-entity	month	5	0.4	0.4.0	
# ::edge	liable-41	ARG0	person	0.3.1.2.1.0.0	0.3.1.2.1.0.0.0	
# ::edge	liable-41	ARG1	dog	0.3.1.2.1.0.0	0.3.1.2.1.0	
# ::edge	or	op1	attack-01	0.3.1.2	0.3.1.2.0	
# ::edge	or	op1	damage-01	0.3.1.2.1.1	0.3.1.2.1.1.0	
# ::edge	or	op2	cause-01	0.3.1.2	0.3.1.2.1	
# ::edge	or	op3	cover-01	0.3.1.2	0.3.1	
# ::edge	own-01	ARG0	person	0.3.1.2.1.0.0.0.0	0.3.1.2.1.0.0.0	
# ::edge	realize-01	ARG0	they	0	0.0	
# ::edge	realize-01	ARG1	it	0	0.1	
# ::edge	realize-01	ARG2	possible	0	0.2	
# ::edge	realize-01	condition	and	0	0.3	
(r / realize-01 
      :ARG0 (t2 / they) 
      :ARG1 (i / it) 
      :ARG2 (p2 / possible) 
      :condition (a / and 
            :op1 (a2 / accident) 
            :op2 (c / cover-01 
                  :ARG0 (p / policy) 
                  :ARG1 1 
                  :op-of (o2 / or 
                        :op1 (a3 / attack-01 
                              :ARG0 (t / this) 
                              :ARG1 (s / someone)) 
                        :op2 (c2 / cause-01 
                              :ARG0 (d2 / dog 
                                    :ARG1-of (l / liable-41 
                                          :ARG0 (p3 / person 
                                                :ARG0-of (o3 / own-01)))) 
                              :ARG1 (o / or 
                                    :op1 (d / damage-01)))))) 
      :domain-of (d3 / date-entity 
            :month 5))

# ::snt as already mentioned the movement for reforming tort law in the 1960s could not and did not ignore the problem of traffic accidents which in the united states as elsewhere produces the single largest category of casualtiesfo id75 and more than half of all tort litigation
# ::tok as already mentioned the movement for reforming tort law in the 1960s could not and did not ignore the problem of traffic accidents which in the united states as elsewhere produces the single largest category of casualtiesfo id75 and more than half of all tort litigation
# ::alignments 43-44|0.0.0.0 41-42|0.0.0.1.0.3.0 38-39|0.0.0.1.0.3 34-35|0.0.0.1.0.0 33-34|0.0.0.1.0.0.0.0+0.0.0.1.0.0.0 32-33|0.0.0.1.0.0.0.1 30-31|0.0.0.1.0 29-30|0.0.0.1.0.2 26-28|0.0.0.1.0.1.1.0+0.0.0.1.0.1.1.1+0.0.0.1.0.1.1+0.0.0.1.0.1 22-23|0.0.0.1.1 21-22|0.0.0.1.1.0 19-20|0.0.0.1 17-18|0.0.0 14-15|0.0 12-13|0 11-12|0.0.0.1.0.1.0.1 8-9|0.0.0.1.0.1.0.0 6-7|0.0.0.1.0.1.0 4-5|0.0.0.1.0.1.0.2 2-3|0.0.0.1.0.1.0.2.0 1-2|0.0.0.1.0.1.0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:01.531
# ::node	0	possible	12-13
# ::node	0.0	and	14-15
# ::node	0.0.0	ignore-01	17-18
# ::node	0.0.0.0	all	43-44
# ::node	0.0.0.1	problem	19-20
# ::node	0.0.0.1.0	produce-01	30-31
# ::node	0.0.0.1.0.0	category	34-35
# ::node	0.0.0.1.0.0.0	large	33-34
# ::node	0.0.0.1.0.0.0.0	most	33-34
# ::node	0.0.0.1.0.0.0.1	single	32-33
# ::node	0.0.0.1.0.1	country	26-28
# ::node	0.0.0.1.0.1.0	reform-01	6-7
# ::node	0.0.0.1.0.1.0.0	law	8-9
# ::node	0.0.0.1.0.1.0.1	1960	11-12
# ::node	0.0.0.1.0.1.0.2	movement	4-5
# ::node	0.0.0.1.0.1.0.2.0	mention-01	2-3
# ::node	0.0.0.1.0.1.0.2.0.0	already	1-2
# ::node	0.0.0.1.0.1.1	name	26-28
# ::node	0.0.0.1.0.1.1.0	"states"	26-28
# ::node	0.0.0.1.0.1.1.1	"united"	26-28
# ::node	0.0.0.1.0.2	elsewhere	29-30
# ::node	0.0.0.1.0.3	and	38-39
# ::node	0.0.0.1.0.3.0	half	41-42
# ::node	0.0.0.1.1	accident	22-23
# ::node	0.0.0.1.1.0	traffic	21-22
# ::root	0	possible
(p3 / possible 
      :op-of (a4 / and 
            :op1 (i / ignore-01 
                  :ARG0 (a / all) 
                  :ARG1 (p2 / problem 
                        :ARG0-of (p / produce-01 
                              :ARG1 (c / category 
                                    :mod (l / large 
                                          :degree (m / most) 
                                          :mod (s / single))) 
                              :location (c2 / country 
                                    :ARG0-of (r / reform-01 
                                          :ARG1 (l2 / law) 
                                          :location 1960 
                                          :mod-of (m2 / movement 
                                                :ARG1-of (m3 / mention-01 
                                                      :time (a5 / already)))) 
                                    :name (n / name 
                                          :op1 "states" 
                                          :op2 "united")) 
                              :manner (e / elsewhere) 
                              :op-of (a2 / and 
                                    :op1 (h / half))) 
                        :prep-with (a3 / accident 
                              :mod (t / traffic))))))

# ::snt the judge mr justice michael davies who had missed the accident returned to remark caustically for people who dont know these courts they do represent certain death traps
# ::tok the judge mr justice michael davies who had missed the accident returned to remark caustically for people who dont know these courts they do represent certain death traps
# ::alignments 26-27|0.0.1.0.0 25-26|0.0.1.0.0.0 24-25|0.0.1 22-23|0.0.1.0 21-22|0.0 19-20|0 13-14|0.0.0 11-12|0.0.0.1 10-11|0.0.0.0 8-9|0.0.0.0.0 3-4|0.0.0.0.0.0 1-2|0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:01.662
# ::node	0	know-01	19-20
# ::node	0.0	court	21-22
# ::node	0.0.0	remark-01	13-14
# ::node	0.0.0.0	accident	10-11
# ::node	0.0.0.0.0	miss-02	8-9
# ::node	0.0.0.0.0.0	justice	3-4
# ::node	0.0.0.1	return-01	11-12
# ::node	0.0.1	represent-01	24-25
# ::node	0.0.1.0	they	22-23
# ::node	0.0.1.0.0	die-01	26-27
# ::node	0.0.1.0.0.0	certain	25-26
# ::node	0.0.1.1	judge-01	1-2
# ::root	0	know-01
# ::edge	die-01	ARG0	they	0.0.1.0.0	0.0.1.0	
# ::edge	die-01	ARG1	certain	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	judge-01	ARG1	represent-01	0.0.1.1	0.0.1	
# ::edge	know-01	ARG1	court	0	0.0	
# ::edge	miss-02	ARG0	justice	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	miss-02	ARG1	accident	0.0.0.0.0	0.0.0.0	
# ::edge	remark-01	ARG0	accident	0.0.0	0.0.0.0	
# ::edge	remark-01	ARG1	court	0.0.0	0.0	
# ::edge	represent-01	ARG0	they	0.0.1	0.0.1.0	
# ::edge	represent-01	ARG1	court	0.0.1	0.0	
# ::edge	return-01	ARG1	remark-01	0.0.0.1	0.0.0	
(k / know-01 
      :ARG1 (c2 / court 
            :ARG1-of (r2 / remark-01 
                  :ARG0 (a / accident 
                        :ARG1-of (m / miss-02 
                              :ARG0 (j / justice))) 
                  :ARG1-of (r3 / return-01)) 
            :ARG1-of (r / represent-01 
                  :ARG0 (t / they 
                        :ARG0-of (d / die-01 
                              :ARG1 (c / certain))) 
                  :ARG1-of (j2 / judge-01))))

# ::snt five years after their marriage another accident killed him outright leaving marieagnegrave
# ::tok five years after their marriage another accident killed him outright leaving marieagnegrave
# ::alignments 10-11|0.0 9-10|0.0.1 7-8|0 6-7|0.0.0 5-6|0.0.0.0 4-5|0.1.0 2-3|0.1 1-2|0.1.0.0.1+0.1.0.0 0-1|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:01.694
# ::node	0	kill-01	7-8
# ::node	0.0	leave-01	10-11
# ::node	0.0.0	accident	6-7
# ::node	0.0.0.0	another	5-6
# ::node	0.0.1	outright	9-10
# ::node	0.1	after	2-3
# ::node	0.1.0	marry-01	4-5
# ::node	0.1.0.0	temporal-quantity	1-2
# ::node	0.1.0.0.0	5	0-1
# ::node	0.1.0.0.1	year	1-2
# ::root	0	kill-01
# ::edge	accident	mod	another	0.0.0	0.0.0.0	
# ::edge	after	op1	marry-01	0.1	0.1.0	
# ::edge	kill-01	ARG1	leave-01	0	0.0	
# ::edge	kill-01	time	after	0	0.1	
# ::edge	leave-01	ARG0	accident	0.0	0.0.0	
# ::edge	leave-01	mod	outright	0.0	0.0.1	
# ::edge	marry-01	ARG1	temporal-quantity	0.1.0	0.1.0.0	
# ::edge	temporal-quantity	quant	5	0.1.0.0	0.1.0.0.0	
# ::edge	temporal-quantity	unit	year	0.1.0.0	0.1.0.0.1	
(k / kill-01 
      :ARG1 (l / leave-01 
            :ARG0 (a / accident 
                  :mod (a2 / another)) 
            :mod (o / outright)) 
      :time (a3 / after 
            :op1 (m / marry-01 
                  :ARG1 (t / temporal-quantity 
                        :quant 5 
                        :unit (y / year)))))

# ::snt he is struggling still to recuperate from serious leg injuries sustained in a formula 3000 accident at brands hatch last august and despite his obvious longterm potential the restricted movement in his ankles has made it difficult for him to manipulate the brake and throttle pedals with suitable agility particularly on some of the tighter circuits of recent races
# ::tok he is struggling still to recuperate from serious leg injuries sustained in a formula 3000 accident at brands hatch last august and despite his obvious longterm potential the restricted movement in his ankles has made it difficult for him to manipulate the brake and throttle pedals with suitable agility particularly on some of the tighter circuits of recent races
# ::alignments 58-59|0.2.0 57-58|0.2.0.0 54-55|0.1.0 51-52|0.1.1.0 49-50|0.1.1 47-48|0.2 43-44|0 42-43|0.1 40-41|0.0 36-37|0.0.3 35-36|0.0.2 29-30|0.0.0 28-29|0.0.0.0 26-27|0.0.1 24-25|0.0.1.0 21-22|0.0.1.1 20-21|0.0.1.1.1.1+0.0.1.1.1 19-20|0.0.1.1.1.0 17-18|0.0.1.1.0 15-16|0.0.1.0.0.0.0.1.0 14-15|0.0.1.0.0.0.0.1.0.1.0+0.0.1.0.0.0.0.1.0.1 13-14|0.0.1.0.0.0.0.1.0.0 10-11|0.0.1.0.0.0.0.1 9-10|0.0.1.0.0.0.0 8-9|0.0.1.0.0.0.0.0 7-8|0.0.1.0.0.0.0.2 3-4|0.0.1.0.0.1 2-3|0.0.1.0.0 0-1|0.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:02.883
# ::node	0	and	43-44
# ::node	0.0	manipulate-01	40-41
# ::node	0.0.0	movement	29-30
# ::node	0.0.0.0	restrict-01	28-29
# ::node	0.0.1	potential	26-27
# ::node	0.0.1.0	obvious-41	24-25
# ::node	0.0.1.0.0	struggle-02	2-3
# ::node	0.0.1.0.0.0	he	0-1
# ::node	0.0.1.0.0.0.0	injure-01	9-10
# ::node	0.0.1.0.0.0.0.0	leg	8-9
# ::node	0.0.1.0.0.0.0.1	sustain-01	10-11
# ::node	0.0.1.0.0.0.0.1.0	accident	15-16
# ::node	0.0.1.0.0.0.0.1.0.0	formula	13-14
# ::node	0.0.1.0.0.0.0.1.0.1	date-entity	14-15
# ::node	0.0.1.0.0.0.0.1.0.1.0	3000	14-15
# ::node	0.0.1.0.0.0.0.2	serious	7-8
# ::node	0.0.1.0.0.1	still	3-4
# ::node	0.0.1.1	and	21-22
# ::node	0.0.1.1.0	brand	17-18
# ::node	0.0.1.1.1	date-entity	20-21
# ::node	0.0.1.1.1.0	last	19-20
# ::node	0.0.1.1.1.1	8	20-21
# ::node	0.0.2	it	35-36
# ::node	0.0.3	difficult	36-37
# ::node	0.1	brake-01	42-43
# ::node	0.1.0	tight	54-55
# ::node	0.1.1	particular	49-50
# ::node	0.1.1.0	some	51-52
# ::node	0.2	suit-01	47-48
# ::node	0.2.0	race	58-59
# ::node	0.2.0.0	recent	57-58
# ::root	0	and
# ::edge	accident	location	formula	0.0.1.0.0.0.0.1.0	0.0.1.0.0.0.0.1.0.0	
# ::edge	accident	time	date-entity	0.0.1.0.0.0.0.1.0	0.0.1.0.0.0.0.1.0.1	
# ::edge	and	op1	date-entity	0.0.1.1	0.0.1.1.1	
# ::edge	and	op1	manipulate-01	0	0.0	
# ::edge	and	op2	brake-01	0	0.1	
# ::edge	and	op2	potential	0.0.1.1	0.0.1	
# ::edge	and	op3	suit-01	0	0.2	
# ::edge	brake-01	ARG1	tight	0.1	0.1.0	
# ::edge	brake-01	mod	particular	0.1	0.1.1	
# ::edge	brand	op1	and	0.0.1.1.0	0.0.1.1	
# ::edge	date-entity	mod	last	0.0.1.1.1	0.0.1.1.1.0	
# ::edge	date-entity	month	8	0.0.1.1.1	0.0.1.1.1.1	
# ::edge	date-entity	year	3000	0.0.1.0.0.0.0.1.0.1	0.0.1.0.0.0.0.1.0.1.0	
# ::edge	injure-01	ARG0	leg	0.0.1.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	injure-01	ARG1	he	0.0.1.0.0.0.0	0.0.1.0.0.0	
# ::edge	injure-01	mod	serious	0.0.1.0.0.0.0	0.0.1.0.0.0.0.2	
# ::edge	manipulate-01	ARG0	movement	0.0	0.0.0	
# ::edge	manipulate-01	ARG1	potential	0.0	0.0.1	
# ::edge	manipulate-01	ARG2	it	0.0	0.0.2	
# ::edge	manipulate-01	condition	difficult	0.0	0.0.3	
# ::edge	obvious-41	ARG1	potential	0.0.1.0	0.0.1	
# ::edge	particular	mod	some	0.1.1	0.1.1.0	
# ::edge	race	time	recent	0.2.0	0.2.0.0	
# ::edge	restrict-01	ARG1	movement	0.0.0.0	0.0.0	
# ::edge	struggle-02	ARG0	he	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	struggle-02	ARG1	obvious-41	0.0.1.0.0	0.0.1.0	
# ::edge	struggle-02	mod	still	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	suit-01	ARG0	race	0.2	0.2.0	
# ::edge	sustain-01	ARG1	injure-01	0.0.1.0.0.0.0.1	0.0.1.0.0.0.0	
# ::edge	sustain-01	location	accident	0.0.1.0.0.0.0.1	0.0.1.0.0.0.0.1.0	
(a / and 
      :op1 (m / manipulate-01 
            :ARG0 (m2 / movement 
                  :ARG1-of (r3 / restrict-01)) 
            :ARG1 (p2 / potential 
                  :ARG1-of (o / obvious-41 
                        :ARG1-of (s6 / struggle-02 
                              :ARG0 (h / he 
                                    :ARG1-of (i2 / injure-01 
                                          :ARG0 (l2 / leg) 
                                          :ARG1-of (s3 / sustain-01 
                                                :location (a3 / accident 
                                                      :location (f / formula) 
                                                      :time (d3 / date-entity 
                                                            :year 3000))) 
                                          :mod (s4 / serious))) 
                              :mod (s5 / still))) 
                  :op-of (a2 / and 
                        :op-of (b2 / brand) 
                        :op1 (d2 / date-entity 
                              :mod (l / last) 
                              :month 8))) 
            :ARG2 (i / it) 
            :condition (d / difficult)) 
      :op2 (b / brake-01 
            :ARG1 (t / tight) 
            :mod (p / particular 
                  :mod (s / some))) 
      :op3 (s2 / suit-01 
            :ARG0 (r / race 
                  :time (r2 / recent))))

# ::snt london is not the way it is through sheer inertia and accident
# ::tok london is not the way it is through sheer inertia and accident
# ::alignments 11-12|0.1 10-11|0 9-10|0.0 8-9|0.1.0 5-6|0.2.1 4-5|0.2 0-1|0.2.0.0.0+0.2.0.0+0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:02.906
# ::node	0	and	10-11
# ::node	0.0	inertia	9-10
# ::node	0.1	accident	11-12
# ::node	0.1.0	sheer	8-9
# ::node	0.2	way	4-5
# ::node	0.2.0	city	0-1
# ::node	0.2.0.0	name	0-1
# ::node	0.2.0.0.0	"London"	0-1
# ::node	0.2.1	it	5-6
# ::root	0	and
# ::edge	accident	mod	sheer	0.1	0.1.0	
# ::edge	and	op1	inertia	0	0.0	
# ::edge	and	op2	accident	0	0.1	
# ::edge	city	name	name	0.2.0	0.2.0.0	
# ::edge	name	op1	"London"	0.2.0.0	0.2.0.0.0	
# ::edge	way	domain	city	0.2	0.2.0	
# ::edge	way	domain	it	0.2	0.2.1	
# ::edge	way	topic	and	0.2	0	
(a2 / and 
      :op1 (i / inertia) 
      :op2 (a / accident 
            :mod (s / sheer)) 
      :topic-of (w / way 
            :domain (c / city 
                  :name (n / name 
                        :op1 "London")) 
            :domain (i2 / it)))

# ::snt then again catholics and jews are perceived as compassionate and generous unlike protestants especially lutherans men as more sympathetic to victims particularly younger women women are good for all defendants except an attractive woman persons in upperincome groups lack concern for accident victims while lowincome individuals are biased against corporate defendants
# ::tok then again catholics and jews are perceived as compassionate and generous unlike protestants especially lutherans men as more sympathetic to victims particularly younger women women are good for all defendants except an attractive woman persons in upperincome groups lack concern for accident victims while lowincome individuals are biased against corporate defendants
# ::alignments 50-51|0.1.0.2.0 49-50|0.1.0.2 47-48|0.1.0.2.0.0 45-46|0.1.0.2.0.0.0 42-43|0.1.0 41-42|0.1.0.1 39-40|0.1 38-39|0.1.0.0 37-38|0.1.0.0.0 34-35|0.1.0.0.0.0 33-34|0.0 32-33|0.0.0 30-31|0 29-30|0.1.1 28-29|0.1.1.0 26-27|0.1.0.2.0.0.1.2.1.0 24-25|0.1.0.2.0.0.1.2.1.0.0 23-24|0.1.0.2.0.0.1.2.1.0.0.0 22-23|0.1.0.2.0.0.1.2.0.0 21-22|0.1.0.2.0.0.1.2.0 20-21|0.1.0.2.0.0.1.2.1 18-19|0.1.0.2.0.0.1.2 15-16|0.1.0.2.0.0.1.1.0 13-14|0.1.0.2.0.0.1.1.1 10-11|0.1.0.2.0.0.1.1 9-10|0.1.0.2.0.0.1 6-7|0.1.0.2.0.0.1.0.1 4-5|0.1.0.2.0.0.1.0.0.0.0+0.1.0.2.0.0.1.0.0.0+0.1.0.2.0.0.1.0.0 3-4|0.1.0.2.0.0.1.0 1-2|0.1.0.2.0.0.1.0.1.1 0-1|0.1.0.2.0.0.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:03.727
# ::node	0	except-00	30-31
# ::node	0.0	woman	33-34
# ::node	0.0.0	attract-01	32-33
# ::node	0.1	concern-01	39-40
# ::node	0.1.0	victim	42-43
# ::node	0.1.0.0	lack-01	38-39
# ::node	0.1.0.0.0	group	37-38
# ::node	0.1.0.0.0.0	person	34-35
# ::node	0.1.0.1	accident	41-42
# ::node	0.1.0.2	corporation	49-50
# ::node	0.1.0.2.0	defendant	50-51
# ::node	0.1.0.2.0.0	bias-01	47-48
# ::node	0.1.0.2.0.0.0	individual	45-46
# ::node	0.1.0.2.0.0.1	and	9-10
# ::node	0.1.0.2.0.0.1.0	and	3-4
# ::node	0.1.0.2.0.0.1.0.0	ethnic-group	4-5
# ::node	0.1.0.2.0.0.1.0.0.0	name	4-5
# ::node	0.1.0.2.0.0.1.0.0.0.0	"Jew"	4-5
# ::node	0.1.0.2.0.0.1.0.1	perceive-01	6-7
# ::node	0.1.0.2.0.0.1.0.1.0	then	0-1
# ::node	0.1.0.2.0.0.1.0.1.1	again	1-2
# ::node	0.1.0.2.0.0.1.1	generous-41	10-11
# ::node	0.1.0.2.0.0.1.1.0	man	15-16
# ::node	0.1.0.2.0.0.1.1.1	especially	13-14
# ::node	0.1.0.2.0.0.1.2	sympathize-01	18-19
# ::node	0.1.0.2.0.0.1.2.0	particular	21-22
# ::node	0.1.0.2.0.0.1.2.0.0	young	22-23
# ::node	0.1.0.2.0.0.1.2.1	victim	20-21
# ::node	0.1.0.2.0.0.1.2.1.0	good	26-27
# ::node	0.1.0.2.0.0.1.2.1.0.0	woman	24-25
# ::node	0.1.0.2.0.0.1.2.1.0.0.0	woman	23-24
# ::node	0.1.1	defendant	29-30
# ::node	0.1.1.0	all	28-29
# ::root	0	except-00
# ::edge	and	op1	ethnic-group	0.1.0.2.0.0.1.0	0.1.0.2.0.0.1.0.0	
# ::edge	and	op1	generous-41	0.1.0.2.0.0.1	0.1.0.2.0.0.1.1	
# ::edge	and	op2	perceive-01	0.1.0.2.0.0.1.0	0.1.0.2.0.0.1.0.1	
# ::edge	and	op2	sympathize-01	0.1.0.2.0.0.1	0.1.0.2.0.0.1.2	
# ::edge	and	op3	and	0.1.0.2.0.0.1.0	0.1.0.2.0.0.1	
# ::edge	and	op3	bias-01	0.1.0.2.0.0.1	0.1.0.2.0.0	
# ::edge	attract-01	ARG1	woman	0.0.0	0.0	
# ::edge	bias-01	ARG0	defendant	0.1.0.2.0.0	0.1.0.2.0	
# ::edge	bias-01	ARG1	individual	0.1.0.2.0.0	0.1.0.2.0.0.0	
# ::edge	concern-01	ARG0	victim	0.1	0.1.0	
# ::edge	concern-01	ARG1	defendant	0.1	0.1.1	
# ::edge	defendant	poss	corporation	0.1.0.2.0	0.1.0.2	
# ::edge	defendant	quant	all	0.1.1	0.1.1.0	
# ::edge	ethnic-group	name	name	0.1.0.2.0.0.1.0.0	0.1.0.2.0.0.1.0.0.0	
# ::edge	except-00	ARG0	woman	0	0.0	
# ::edge	except-00	ARG1	concern-01	0	0.1	
# ::edge	generous-41	ARG0	man	0.1.0.2.0.0.1.1	0.1.0.2.0.0.1.1.0	
# ::edge	generous-41	ARG1	especially	0.1.0.2.0.0.1.1	0.1.0.2.0.0.1.1.1	
# ::edge	good	domain	woman	0.1.0.2.0.0.1.2.1.0	0.1.0.2.0.0.1.2.1.0.0	
# ::edge	lack-01	ARG0	group	0.1.0.0	0.1.0.0.0	
# ::edge	lack-01	ARG1	victim	0.1.0.0	0.1.0	
# ::edge	name	op1	"Jew"	0.1.0.2.0.0.1.0.0.0	0.1.0.2.0.0.1.0.0.0.0	
# ::edge	perceive-01	ARG0	then	0.1.0.2.0.0.1.0.1	0.1.0.2.0.0.1.0.1.0	
# ::edge	perceive-01	ARG1	again	0.1.0.2.0.0.1.0.1	0.1.0.2.0.0.1.0.1.1	
# ::edge	person	poss	group	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	sympathize-01	ARG1	particular	0.1.0.2.0.0.1.2	0.1.0.2.0.0.1.2.0	
# ::edge	sympathize-01	ARG2	victim	0.1.0.2.0.0.1.2	0.1.0.2.0.0.1.2.1	
# ::edge	victim	mod	accident	0.1.0	0.1.0.1	
# ::edge	victim	mod	corporation	0.1.0	0.1.0.2	
# ::edge	victim	mod	good	0.1.0.2.0.0.1.2.1	0.1.0.2.0.0.1.2.1.0	
# ::edge	woman	source	woman	0.1.0.2.0.0.1.2.1.0.0	0.1.0.2.0.0.1.2.1.0.0.0	
# ::edge	young	mod	particular	0.1.0.2.0.0.1.2.0.0	0.1.0.2.0.0.1.2.0	
(e / except-00 
      :ARG0 (w / woman 
            :ARG1-of (a2 / attract-01)) 
      :ARG1 (c2 / concern-01 
            :ARG0 (v / victim 
                  :ARG1-of (l / lack-01 
                        :ARG0 (g / group 
                              :poss-of (p / person))) 
                  :mod (a / accident) 
                  :mod (c / corporation 
                        :poss-of (d / defendant 
                              :ARG0-of (b / bias-01 
                                    :ARG1 (i / individual) 
                                    :op-of (a4 / and 
                                          :op-of (a5 / and 
                                                :op1 (e3 / ethnic-group 
                                                      :name (n / name 
                                                            :op1 "Jew")) 
                                                :op2 (p3 / perceive-01 
                                                      :ARG0 (t / then) 
                                                      :ARG1 (a6 / again))) 
                                          :op1 (g3 / generous-41 
                                                :ARG0 (m / man) 
                                                :ARG1 (e2 / especially)) 
                                          :op2 (s / sympathize-01 
                                                :ARG1 (p2 / particular 
                                                      :mod-of (y / young)) 
                                                :ARG2 (v2 / victim 
                                                      :mod (g2 / good 
                                                            :domain (w2 / woman 
                                                                  :source (w3 / woman)))))))))) 
            :ARG1 (d2 / defendant 
                  :quant (a3 / all))))

# ::snt yesterday john chittenden the skipper described the series of accidents which led to phillipss death and the recovery of a second crew member bart van der dwey as the yacht was hit by gear damage gales and big seas
# ::tok yesterday john chittenden the skipper described the series of accidents which led to phillipss death and the recovery of a second crew member bart van der dwey as the yacht was hit by gear damage gales and big seas
# ::alignments 38-39|0.2 37-38|0.2.0 36-37|0.1.1 34-35|0.1.1.0 33-34|0.1.1.0.0 31-32|0.1.1.1 24-25|0.1.0.0 22-23|0.1.0.2+0.1.0 21-22|0.1.0.1 17-18|0.1 15-16|0 14-15|0.0.1 11-12|0.0 9-10|0.0.0 7-8|0.0.0.0 5-6|0.0.0.0.0 0-1|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:04.046
# ::node	0	and	15-16
# ::node	0.0	lead-02	11-12
# ::node	0.0.0	accident	9-10
# ::node	0.0.0.0	series	7-8
# ::node	0.0.0.0.0	describe-01	5-6
# ::node	0.0.1	die-01	14-15
# ::node	0.0.1.0	yesterday	0-1
# ::node	0.1	recover-01	17-18
# ::node	0.1.0	have-org-role-91	22-23
# ::node	0.1.0.0	van	24-25
# ::node	0.1.0.1	crew	21-22
# ::node	0.1.0.2	member	22-23
# ::node	0.1.1	and	36-37
# ::node	0.1.1.0	damage-01	34-35
# ::node	0.1.1.0.0	gear	33-34
# ::node	0.1.1.1	hit-01	31-32
# ::node	0.2	sea	38-39
# ::node	0.2.0	big	37-38
# ::root	0	and
# ::edge	accident	quant	series	0.0.0	0.0.0.0	
# ::edge	and	op1	recover-01	0	0.1	
# ::edge	and	op1	recover-01	0.1.1	0.1	
# ::edge	and	op2	hit-01	0.1.1	0.1.1.1	
# ::edge	and	op2	sea	0	0.2	
# ::edge	damage-01	ARG0	gear	0.1.1.0	0.1.1.0.0	
# ::edge	damage-01	ARG1	and	0.1.1.0	0.1.1	
# ::edge	describe-01	ARG1	series	0.0.0.0.0	0.0.0.0	
# ::edge	die-01	ARG1	yesterday	0.0.1	0.0.1.0	
# ::edge	have-org-role-91	ARG0	van	0.1.0	0.1.0.0	
# ::edge	have-org-role-91	ARG1	crew	0.1.0	0.1.0.1	
# ::edge	have-org-role-91	ARG2	member	0.1.0	0.1.0.2	
# ::edge	lead-02	ARG0	and	0.0	0	
# ::edge	lead-02	ARG1	accident	0.0	0.0.0	
# ::edge	lead-02	ARG2	die-01	0.0	0.0.1	
# ::edge	recover-01	ARG1	have-org-role-91	0.1	0.1.0	
# ::edge	sea	mod	big	0.2	0.2.0	
(a2 / and 
      :ARG0-of (l / lead-02 
            :ARG1 (a3 / accident 
                  :quant (s2 / series 
                        :ARG1-of (d3 / describe-01))) 
            :ARG2 (d2 / die-01 
                  :ARG1 (y / yesterday))) 
      :op1 (r / recover-01 
            :ARG1 (h2 / have-org-role-91 
                  :ARG0 (v / van) 
                  :ARG1 (c / crew) 
                  :ARG2 (m / member)) 
            :op-of (a / and 
                  :ARG1-of (d / damage-01 
                        :ARG0 (g / gear)) 
                  :op1 (h / hit-01))) 
      :op2 (s / sea 
            :mod (b / big)))

# ::snt yet not only had industry long ceased to be regarded as in need of such a subsidy but there was now a broad consensus that compensation of accident victims was a desirable social goal that could be accomplished by lossspreading through the conduit of liability insurance and ultimately passing the cost to the consumer public
# ::tok yet not only had industry long ceased to be regarded as in need of such a subsidy but there was now a broad consensus that compensation of accident victims was a desirable social goal that could be accomplished by lossspreading through the conduit of liability insurance and ultimately passing the cost to the consumer public
# ::alignments 54-55|0.0.1.0.0.0.0 53-54|0.0.1.0.0.0.0.0 50-51|0.0.1.0.0.0 47-48|0.0.1.0.0.2 46-47|0.0.1.0.0 45-46|0.0.1.0.0.1 44-45|0.0.1.0.0.1.1 42-43|0.0.1.0.0.1.2 37-38|0.0.1.0 35-36|0.0.1.0.1 33-34|0.0.1 32-33|0.0.0 31-32|0.0 28-29|0.2.1 27-28|0.2.1.0 25-26|0.2 23-24|0.1.0 22-23|0.0.1.0.0.1.0 20-21|0.1.1.0 17-18|0 16-17|0.1.1.1 14-15|0.1.1.1.0 12-13|0.1.1 9-10|0.1 6-7|0.1.2 4-5|0.1.2.1 2-3|0.1.2.0 0-1|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:05.192
# ::node	0	contrast-01	17-18
# ::node	0.0	desire-01	31-32
# ::node	0.0.0	society	32-33
# ::node	0.0.1	goal	33-34
# ::node	0.0.1.0	accomplish-01	37-38
# ::node	0.0.1.0.0	and	46-47
# ::node	0.0.1.0.0.0	cost-01	50-51
# ::node	0.0.1.0.0.0.0	public	54-55
# ::node	0.0.1.0.0.0.0.0	consume-01	53-54
# ::node	0.0.1.0.0.1	insure-02	45-46
# ::node	0.0.1.0.0.1.0	broad	22-23
# ::node	0.0.1.0.0.1.1	liability	44-45
# ::node	0.0.1.0.0.1.2	conduit	42-43
# ::node	0.0.1.0.0.2	ultimate	47-48
# ::node	0.0.1.0.1	possible	35-36
# ::node	0.1	regard-01	9-10
# ::node	0.1.0	consensus	23-24
# ::node	0.1.1	need-01	12-13
# ::node	0.1.1.0	now	20-21
# ::node	0.1.1.1	subsidy	16-17
# ::node	0.1.1.1.0	such	14-15
# ::node	0.1.2	cease-01	6-7
# ::node	0.1.2.0	only	2-3
# ::node	0.1.2.1	industry	4-5
# ::node	0.2	compensate-01	25-26
# ::node	0.2.0	yet	0-1
# ::node	0.2.1	victim	28-29
# ::node	0.2.1.0	accident	27-28
# ::root	0	contrast-01
# ::edge	accomplish-01	ARG1	goal	0.0.1.0	0.0.1	
# ::edge	accomplish-01	ARG2	and	0.0.1.0	0.0.1.0.0	
# ::edge	and	op1	insure-02	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	and	op2	ultimate	0.0.1.0.0	0.0.1.0.0.2	
# ::edge	cease-01	ARG0	only	0.1.2	0.1.2.0	
# ::edge	cease-01	ARG1	industry	0.1.2	0.1.2.1	
# ::edge	cease-01	ARG2	regard-01	0.1.2	0.1	
# ::edge	compensate-01	ARG0	yet	0.2	0.2.0	
# ::edge	compensate-01	ARG1	victim	0.2	0.2.1	
# ::edge	conduit	mod	insure-02	0.0.1.0.0.1.2	0.0.1.0.0.1	
# ::edge	contrast-01	ARG1	desire-01	0	0.0	
# ::edge	contrast-01	ARG2	compensate-01	0	0.2	
# ::edge	cost-01	ARG1	and	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	cost-01	ARG2	public	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	desire-01	ARG0	society	0.0	0.0.0	
# ::edge	desire-01	ARG1	goal	0.0	0.0.1	
# ::edge	insure-02	ARG0	broad	0.0.1.0.0.1	0.0.1.0.0.1.0	
# ::edge	insure-02	ARG1	liability	0.0.1.0.0.1	0.0.1.0.0.1.1	
# ::edge	need-01	ARG0	now	0.1.1	0.1.1.0	
# ::edge	need-01	ARG1	subsidy	0.1.1	0.1.1.1	
# ::edge	possible	domain	accomplish-01	0.0.1.0.1	0.0.1.0	
# ::edge	public	mod	consume-01	0.0.1.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	regard-01	ARG0	consensus	0.1	0.1.0	
# ::edge	regard-01	ARG1	contrast-01	0.1	0	
# ::edge	regard-01	ARG2	need-01	0.1	0.1.1	
# ::edge	subsidy	mod	such	0.1.1.1	0.1.1.1.0	
# ::edge	victim	mod	accident	0.2.1	0.2.1.0	
(c6 / contrast-01 
      :ARG1 (d / desire-01 
            :ARG0 (s / society) 
            :ARG1 (g / goal 
                  :ARG1-of (a2 / accomplish-01 
                        :ARG2 (a / and 
                              :ARG1-of (c2 / cost-01 
                                    :ARG2 (p / public 
                                          :mod (c / consume-01))) 
                              :op1 (i / insure-02 
                                    :ARG0 (b / broad) 
                                    :ARG1 (l / liability) 
                                    :mod-of (c3 / conduit)) 
                              :op2 (u / ultimate)) 
                        :domain-of (p2 / possible)))) 
      :ARG1-of (r / regard-01 
            :ARG0 (c5 / consensus) 
            :ARG2 (n2 / need-01 
                  :ARG0 (n / now) 
                  :ARG1 (s2 / subsidy 
                        :mod (s3 / such))) 
            :ARG2-of (c7 / cease-01 
                  :ARG0 (o / only) 
                  :ARG1 (i2 / industry))) 
      :ARG2 (c4 / compensate-01 
            :ARG0 (y / yet) 
            :ARG1 (v / victim 
                  :mod (a3 / accident))))

# ::snt no one survived last mays accident near mombasa kenya involving the helicopter from the plymouthbased frigate hms brilliant
# ::tok no one survived last mays accident near mombasa kenya involving the helicopter from the plymouthbased frigate hms brilliant
# ::alignments 15-16|0 11-12|0.0.1 9-10|0.0 8-9|0.0.0.0.0+0.0.0.0+0.0.0 6-7|0.0.3.1 5-6|0.0.3.0 3-4|0.0.3.0.0 2-3|0.0.3 0-1|0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:05.292
# ::node	0	frigate	15-16
# ::node	0.0	involve-01	9-10
# ::node	0.0.0	country	8-9
# ::node	0.0.0.0	name	8-9
# ::node	0.0.0.0.0	"Kenya"	8-9
# ::node	0.0.1	helicopter	11-12
# ::node	0.0.2	-	0-1
# ::node	0.0.3	survive-01	2-3
# ::node	0.0.3.0	accident	5-6
# ::node	0.0.3.0.0	last	3-4
# ::node	0.0.3.1	near	6-7
# ::root	0	frigate
(f / frigate 
      :location-of (i / involve-01 
            :ARG0 (c / country 
                  :name (n / name 
                        :op1 "Kenya")) 
            :ARG1 (h / helicopter) 
            :polarity (- / -) 
            :purpose-of (s / survive-01 
                  :ARG1 (a / accident 
                        :mod (l / last)) 
                  :location (n2 / near))))

# ::snt fallout from last thursdays accident at a spanish nuclear power station swept across europe yesterday dash, spanish newspapers affirmed that the fire in the turbine hall a nonnuclear area of the power plant had triggered the worst nuclear accident since chernobyl and the reports cited an internal document circulating within the prestigious and impartial viennabased international atomic energy agency as authority
# ::tok fallout from last thursdays accident at a spanish nuclear power station swept across europe yesterday dash , spanish newspapers affirmed that the fire in the turbine hall a nonnuclear area of the power plant had triggered the worst nuclear accident since chernobyl and the reports cited an internal document circulating within the prestigious and impartial viennabased international atomic energy agency as authority
# ::alignments 61-62|0.0.0 59-60|0.0.1 58-59|0.0.1.0 57-58|0.0.1.1 56-57|0.0.1.2 53-54|0 50-51|0.0 48-49|0.0.1.3.3.1 47-48|0.0.1.3.3.1.0 45-46|0.0.1.3.3 44-45|0.0.1.3.3.0 42-43|0.0.1.3 40-41|0.0.1.3.2.1.0.0 39-40|0.0.1.3.2.1 38-39|0.0.1.3.2.1.1 37-38|0.0.1.3.2.1.0 35-36|0.0.1.3.2 33-34|0.0.1.3.2.0.0 32-33|0.0.1.3.2.0.0.0 29-30|0.0.1.3.2.0 26-27|0.0.1.3.2.2 25-26|0.0.1.3.2.2.0 18-19|0.0.1.3.1 17-18|0.0.1.3.1.0.0.0+0.0.1.3.1.0.0+0.0.1.3.1.0 14-15|0.0.1.3.0.2.0 13-14|0.0.1.3.0.2.0.0.0.0+0.0.1.3.0.2.0.0.0+0.0.1.3.0.2.0.0 12-13|0.0.1.3.0.2 11-12|0.0.1.3.0 10-11|0.0.1.3.0.0 9-10|0.0.1.3.0.0.2 8-9|0.0.1.3.0.0.2.0 7-8|0.0.1.3.0.0.0.0.0+0.0.1.3.0.0.0.0+0.0.1.3.0.0.0 4-5|0.0.1.3.0.0.1 2-3|0.0.1.3.0.0.1.0 0-1|0.0.1.3.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:06.627
# ::node	0	and	53-54
# ::node	0.0	within	50-51
# ::node	0.0.0	authority	61-62
# ::node	0.0.1	agency	59-60
# ::node	0.0.1.0	energy	58-59
# ::node	0.0.1.1	atom	57-58
# ::node	0.0.1.2	international	56-57
# ::node	0.0.1.3	and	42-43
# ::node	0.0.1.3.0	sweep-02	11-12
# ::node	0.0.1.3.0.0	station	10-11
# ::node	0.0.1.3.0.0.0	language	7-8
# ::node	0.0.1.3.0.0.0.0	name	7-8
# ::node	0.0.1.3.0.0.0.0.0	"Spanish"	7-8
# ::node	0.0.1.3.0.0.1	accident	4-5
# ::node	0.0.1.3.0.0.1.0	last	2-3
# ::node	0.0.1.3.0.0.2	power	9-10
# ::node	0.0.1.3.0.0.2.0	nucleus	8-9
# ::node	0.0.1.3.0.1	fallout	0-1
# ::node	0.0.1.3.0.2	across	12-13
# ::node	0.0.1.3.0.2.0	yesterday	14-15
# ::node	0.0.1.3.0.2.0.0	continent	13-14
# ::node	0.0.1.3.0.2.0.0.0	name	13-14
# ::node	0.0.1.3.0.2.0.0.0.0	"Europe"	13-14
# ::node	0.0.1.3.1	newspaper	18-19
# ::node	0.0.1.3.1.0	language	17-18
# ::node	0.0.1.3.1.0.0	name	17-18
# ::node	0.0.1.3.1.0.0.0	"Spanish"	17-18
# ::node	0.0.1.3.2	trigger-01	35-36
# ::node	0.0.1.3.2.0	area	29-30
# ::node	0.0.1.3.2.0.0	plant	33-34
# ::node	0.0.1.3.2.0.0.0	power	32-33
# ::node	0.0.1.3.2.1	accident	39-40
# ::node	0.0.1.3.2.1.0	bad	37-38
# ::node	0.0.1.3.2.1.0.0	since	40-41
# ::node	0.0.1.3.2.1.1	nucleus	38-39
# ::node	0.0.1.3.2.2	hall	26-27
# ::node	0.0.1.3.2.2.0	turbine	25-26
# ::node	0.0.1.3.3	cite-01	45-46
# ::node	0.0.1.3.3.0	report-01	44-45
# ::node	0.0.1.3.3.1	document	48-49
# ::node	0.0.1.3.3.1.0	internal	47-48
# ::root	0	and
# ::edge	accident	location	station	0.0.1.3.0.0.1	0.0.1.3.0.0	
# ::edge	accident	mod	bad	0.0.1.3.2.1	0.0.1.3.2.1.0	
# ::edge	accident	mod	last	0.0.1.3.0.0.1	0.0.1.3.0.0.1.0	
# ::edge	accident	mod	nucleus	0.0.1.3.2.1	0.0.1.3.2.1.1	
# ::edge	across	op1	yesterday	0.0.1.3.0.2	0.0.1.3.0.2.0	
# ::edge	agency	mod	atom	0.0.1	0.0.1.1	
# ::edge	agency	mod	energy	0.0.1	0.0.1.0	
# ::edge	agency	mod	international	0.0.1	0.0.1.2	
# ::edge	and	op1	sweep-02	0.0.1.3	0.0.1.3.0	
# ::edge	and	op1	within	0	0.0	
# ::edge	and	op2	newspaper	0.0.1.3	0.0.1.3.1	
# ::edge	and	op3	trigger-01	0.0.1.3	0.0.1.3.2	
# ::edge	and	op4	cite-01	0.0.1.3	0.0.1.3.3	
# ::edge	and	op5	agency	0.0.1.3	0.0.1	
# ::edge	area	mod	plant	0.0.1.3.2.0	0.0.1.3.2.0.0	
# ::edge	authority	location	within	0.0.0	0.0	
# ::edge	bad	time	since	0.0.1.3.2.1.0	0.0.1.3.2.1.0.0	
# ::edge	cite-01	ARG0	report-01	0.0.1.3.3	0.0.1.3.3.0	
# ::edge	cite-01	ARG1	document	0.0.1.3.3	0.0.1.3.3.1	
# ::edge	continent	name	name	0.0.1.3.0.2.0.0	0.0.1.3.0.2.0.0.0	
# ::edge	document	mod	internal	0.0.1.3.3.1	0.0.1.3.3.1.0	
# ::edge	hall	mod	turbine	0.0.1.3.2.2	0.0.1.3.2.2.0	
# ::edge	language	name	name	0.0.1.3.0.0.0	0.0.1.3.0.0.0.0	
# ::edge	language	name	name	0.0.1.3.1.0	0.0.1.3.1.0.0	
# ::edge	name	op1	"Europe"	0.0.1.3.0.2.0.0.0	0.0.1.3.0.2.0.0.0.0	
# ::edge	name	op1	"Spanish"	0.0.1.3.0.0.0.0	0.0.1.3.0.0.0.0.0	
# ::edge	name	op1	"Spanish"	0.0.1.3.1.0.0	0.0.1.3.1.0.0.0	
# ::edge	newspaper	mod	language	0.0.1.3.1	0.0.1.3.1.0	
# ::edge	plant	mod	power	0.0.1.3.2.0.0	0.0.1.3.2.0.0.0	
# ::edge	power	mod	nucleus	0.0.1.3.0.0.2	0.0.1.3.0.0.2.0	
# ::edge	station	location	language	0.0.1.3.0.0	0.0.1.3.0.0.0	
# ::edge	station	mod	power	0.0.1.3.0.0	0.0.1.3.0.0.2	
# ::edge	sweep-02	ARG0	station	0.0.1.3.0	0.0.1.3.0.0	
# ::edge	sweep-02	ARG1	fallout	0.0.1.3.0	0.0.1.3.0.1	
# ::edge	sweep-02	location	across	0.0.1.3.0	0.0.1.3.0.2	
# ::edge	trigger-01	ARG0	area	0.0.1.3.2	0.0.1.3.2.0	
# ::edge	trigger-01	ARG1	accident	0.0.1.3.2	0.0.1.3.2.1	
# ::edge	trigger-01	location	hall	0.0.1.3.2	0.0.1.3.2.2	
# ::edge	within	op1	agency	0.0	0.0.1	
# ::edge	yesterday	mod	continent	0.0.1.3.0.2.0	0.0.1.3.0.2.0.0	
(a4 / and 
      :op1 (w / within 
            :location-of (a / authority) 
            :op1 (a2 / agency 
                  :mod (e / energy) 
                  :mod (a3 / atom) 
                  :mod (i / international) 
                  :op-of (a5 / and 
                        :op1 (s2 / sweep-02 
                              :ARG0 (s3 / station 
                                    :location (l2 / language 
                                          :name (n6 / name 
                                                :op1 "Spanish")) 
                                    :location-of (a9 / accident 
                                          :mod (l3 / last)) 
                                    :mod (p3 / power 
                                          :mod (n5 / nucleus))) 
                              :ARG1 (f / fallout) 
                              :location (a8 / across 
                                    :op1 (y / yesterday 
                                          :mod (c2 / continent 
                                                :name (n4 / name 
                                                      :op1 "Europe"))))) 
                        :op2 (n2 / newspaper 
                              :mod (l / language 
                                    :name (n3 / name 
                                          :op1 "Spanish"))) 
                        :op3 (t / trigger-01 
                              :ARG0 (a7 / area 
                                    :mod (p / plant 
                                          :mod (p2 / power))) 
                              :ARG1 (a6 / accident 
                                    :mod (b / bad 
                                          :time (s / since)) 
                                    :mod (n / nucleus)) 
                              :location (h / hall 
                                    :mod (t2 / turbine))) 
                        :op4 (c / cite-01 
                              :ARG0 (r / report-01) 
                              :ARG1 (d / document 
                                    :mod (i2 / internal)))))))

# ::snt not until the appointment of the pearson commission in 1972 was the need felt to take a more critical look at the general panorama of accident compensation especially the relationship between tort law and social security which had burgeoned under the impetus of the beveridge report of 1943
# ::tok not until the appointment of the pearson commission in 1972 was the need felt to take a more critical look at the general panorama of accident compensation especially the relationship between tort law and social security which had burgeoned under the impetus of the beveridge report of 1943
# ::alignments 47-48|0.0.0.1+0.0.0 45-46|0.0.0.0 41-42|0.0.0.0.0 35-36|0.1.1 34-35|0.1.0.0.0.1 33-34|0 32-33|0.2 30-31|0.1 29-30|0.1.0 27-28|0.0.3.0 26-27|0.0 25-26|0.0.2 23-24|0.0.3 22-23|0.0.3.1 18-19|0.0.1 13-14|0.1.0.0 12-13|0.1.0.0.0 9-10|0.1.0.0.0.0.0.0.0.0+0.1.0.0.0.0.0.0.0 7-8|0.1.0.0.0.0.0.0 3-4|0.1.0.0.0.0.0 1-2|0.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:07.252
# ::node	0	and	33-34
# ::node	0.0	compensate-01	26-27
# ::node	0.0.0	date-entity	47-48
# ::node	0.0.0.0	report	45-46
# ::node	0.0.0.0.0	impetus	41-42
# ::node	0.0.0.1	1943	47-48
# ::node	0.0.1	critical	18-19
# ::node	0.0.2	accident	25-26
# ::node	0.0.3	panorama	23-24
# ::node	0.0.3.0	especially	27-28
# ::node	0.0.3.1	general	22-23
# ::node	0.1	between	30-31
# ::node	0.1.0	relationship	29-30
# ::node	0.1.0.0	feel-01	13-14
# ::node	0.1.0.0.0	need-01	12-13
# ::node	0.1.0.0.0.0	until	1-2
# ::node	0.1.0.0.0.0.0	appointment	3-4
# ::node	0.1.0.0.0.0.0.0	commission	7-8
# ::node	0.1.0.0.0.0.0.0.0	date-entity	9-10
# ::node	0.1.0.0.0.0.0.0.0.0	1972	9-10
# ::node	0.1.0.0.0.1	society	34-35
# ::node	0.1.1	security	35-36
# ::node	0.2	law	32-33
# ::root	0	and
# ::edge	and	op1	compensate-01	0	0.0	
# ::edge	and	op2	between	0	0.1	
# ::edge	and	op3	law	0	0.2	
# ::edge	appointment	mod	commission	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	between	op1	security	0.1	0.1.1	
# ::edge	commission	time	date-entity	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0.0.0	
# ::edge	compensate-01	ARG0	date-entity	0.0	0.0.0	
# ::edge	compensate-01	ARG1	critical	0.0	0.0.1	
# ::edge	compensate-01	ARG3	accident	0.0	0.0.2	
# ::edge	date-entity	year	1943	0.0.0	0.0.0.1	
# ::edge	date-entity	year	1972	0.1.0.0.0.0.0.0.0	0.1.0.0.0.0.0.0.0.0	
# ::edge	feel-01	ARG0	relationship	0.1.0.0	0.1.0	
# ::edge	feel-01	ARG1	need-01	0.1.0.0	0.1.0.0.0	
# ::edge	impetus	poss	report	0.0.0.0.0	0.0.0.0	
# ::edge	need-01	ARG0	until	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	need-01	ARG1	society	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	panorama	location	especially	0.0.3	0.0.3.0	
# ::edge	panorama	mod	compensate-01	0.0.3	0.0	
# ::edge	panorama	mod	general	0.0.3	0.0.3.1	
# ::edge	relationship	mod	between	0.1.0	0.1	
# ::edge	report	time	date-entity	0.0.0.0	0.0.0	
# ::edge	until	op1	appointment	0.1.0.0.0.0	0.1.0.0.0.0.0	
(a / and 
      :op1 (c / compensate-01 
            :ARG0 (d / date-entity 
                  :time-of (r / report 
                        :poss-of (i / impetus)) 
                  :year 1943) 
            :ARG1 (c2 / critical) 
            :ARG3 (a2 / accident) 
            :mod-of (p / panorama 
                  :location (e / especially) 
                  :mod (g / general))) 
      :op2 (b / between 
            :mod-of (r2 / relationship 
                  :ARG0-of (f / feel-01 
                        :ARG1 (n / need-01 
                              :ARG0 (u / until 
                                    :op1 (a3 / appointment 
                                          :mod (c3 / commission 
                                                :time (d2 / date-entity 
                                                      :year 1972)))) 
                              :ARG1 (s2 / society)))) 
            :op1 (s / security)) 
      :op3 (l / law))

# ::snt fred salmon might not consider his motorcycling accident five years ago as a lucky break but it led to a professional career in cycle racing and his rocky road to mountain bike success continued yesterday in wales writes robin nicholl
# ::tok fred salmon might not consider his motorcycling accident five years ago as a lucky break but it led to a professional career in cycle racing and his rocky road to mountain bike success continued yesterday in wales writes robin nicholl
# ::alignments 37-38|0.1.3.1 34-35|0.1.3.1.0 33-34|0.1.3.1.0.0 32-33|0.1.3.1.0.0.0 31-32|0.1.3.1.0.0.0.1 30-31|0.1.3.1.0.0.0.0 28-29|0.1.3.0 25-26|0.1.3 24-25|0.1.4 23-24|0.1.4.0 21-22|0.1.2 20-21|0.1.2.0 17-18|0.1 16-17|0.1.0 15-16|0 13-14|0.1.0.0 9-10|0.1.1.1+0.1.1 8-9|0.1.1.0 7-8|0.0.0 4-5|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:07.754
# ::node	0	contrast-01	15-16
# ::node	0.0	consider-02	4-5
# ::node	0.0.0	accident	7-8
# ::node	0.1	lead-02	17-18
# ::node	0.1.0	it	16-17
# ::node	0.1.0.0	lucky	13-14
# ::node	0.1.1	temporal-quantity	9-10
# ::node	0.1.1.0	5	8-9
# ::node	0.1.1.1	year	9-10
# ::node	0.1.2	career	21-22
# ::node	0.1.2.0	professional	20-21
# ::node	0.1.3	and	25-26
# ::node	0.1.3.0	road	28-29
# ::node	0.1.3.1	write-01	37-38
# ::node	0.1.3.1.0	yesterday	34-35
# ::node	0.1.3.1.0.0	continue-01	33-34
# ::node	0.1.3.1.0.0.0	succeed-01	32-33
# ::node	0.1.3.1.0.0.0.0	mountain	30-31
# ::node	0.1.3.1.0.0.0.1	bike	31-32
# ::node	0.1.4	race-01	24-25
# ::node	0.1.4.0	cycle	23-24
# ::root	0	contrast-01
# ::edge	and	op1	lead-02	0.1.3	0.1	
# ::edge	and	op2	road	0.1.3	0.1.3.0	
# ::edge	and	op3	write-01	0.1.3	0.1.3.1	
# ::edge	career	mod	professional	0.1.2	0.1.2.0	
# ::edge	consider-02	ARG1	accident	0.0	0.0.0	
# ::edge	continue-01	ARG0	yesterday	0.1.3.1.0.0	0.1.3.1.0	
# ::edge	continue-01	ARG1	succeed-01	0.1.3.1.0.0	0.1.3.1.0.0.0	
# ::edge	contrast-01	ARG1	consider-02	0	0.0	
# ::edge	contrast-01	ARG2	lead-02	0	0.1	
# ::edge	lead-02	ARG0	it	0.1	0.1.0	
# ::edge	lead-02	ARG1	temporal-quantity	0.1	0.1.1	
# ::edge	lead-02	ARG2	career	0.1	0.1.2	
# ::edge	lead-02	time	race-01	0.1	0.1.4	
# ::edge	lucky	poss	it	0.1.0.0	0.1.0	
# ::edge	race-01	ARG1	cycle	0.1.4	0.1.4.0	
# ::edge	succeed-01	ARG0	mountain	0.1.3.1.0.0.0	0.1.3.1.0.0.0.0	
# ::edge	succeed-01	ARG1	bike	0.1.3.1.0.0.0	0.1.3.1.0.0.0.1	
# ::edge	temporal-quantity	quant	5	0.1.1	0.1.1.0	
# ::edge	temporal-quantity	unit	year	0.1.1	0.1.1.1	
# ::edge	write-01	ARG0	yesterday	0.1.3.1	0.1.3.1.0	
(c4 / contrast-01 
      :ARG1 (c5 / consider-02 
            :ARG1 (a2 / accident)) 
      :ARG2 (l / lead-02 
            :ARG0 (i / it 
                  :poss-of (l2 / lucky)) 
            :ARG1 (t / temporal-quantity 
                  :quant 5 
                  :unit (y2 / year)) 
            :ARG2 (c3 / career 
                  :mod (p / professional)) 
            :op-of (a / and 
                  :op1 (r / road) 
                  :op2 (w / write-01 
                        :ARG0 (y / yesterday 
                              :ARG0-of (c / continue-01 
                                    :ARG1 (s / succeed-01 
                                          :ARG0 (m / mountain) 
                                          :ARG1 (b / bike)))))) 
            :time (r2 / race-01 
                  :ARG1 (c2 / cycle))))

# ::snt and if you and your spouse are covered under the plan and you  both die as a result of the same accident the plan will pay  double the normal individual death benefit making a total of up  to 160000 paid direct to your estate, in addition to any lump sum benefit you receive accident  cashguard will pay you up to 80 a day for each day you  spend in hospital as a result of an accident up to a maximum  of 100 days, to help you convalesce you will be paid an additional tax free  lump sum of up to 800 if an accident results in a stay in  hospital for ten days or more
# ::tok and if you and your spouse are covered under the plan and you both die as a result of the same accident the plan will pay double the normal individual death benefit making a total of up to 160000 paid direct to your estate , in addition to any lump sum benefit you receive accident cashguard will pay you up to 80 a day for each day you spend in hospital as a result of an accident up to a maximum of 100 days , to help you convalesce you will be paid an additional tax free lump sum of up to 800 if an accident results in a stay in hospital for ten days or more
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:07.755
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt   david gardner whose right arm was crushed and effectively severed in a motorcycle accident proved yesterday that it was good enough for 50 singlehanded pressups in one minute writes celia hall
# ::tok david gardner whose right arm was crushed and effectively severed in a motorcycle accident proved yesterday that it was good enough for 50 singlehanded pressups in one minute writes celia hall
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:07.756
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt at the oxford road junction there had been 11 injury accidents including four fatalities in the past ten years, all but one of the accidents involved a vehicle turning right out of oxford road
# ::tok at the oxford road junction there had been 11 injury accidents including four fatalities in the past ten years , all but one of the accidents involved a vehicle turning right out of oxford road
# ::alignments 34-35|0.3.1.0.1 29-30|0.3.1.0 28-29|0.3.1 26-27|0.3 25-26|0.3.0 21-22|0 20-21|0.1 18-19|0.3.1.0.0.1+0.3.1.0.0 16-17|0.3.1.0.0.0 13-14|0.0 12-13|0.0.0 10-11|0.2.0 9-10|0.2 8-9|0.3.1.0.2 3-4|0.3.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:08.010
# ::node	0	contrast-01	21-22
# ::node	0.0	fatality	13-14
# ::node	0.0.0	4	12-13
# ::node	0.1	all	20-21
# ::node	0.2	injure-01	9-10
# ::node	0.2.0	accident	10-11
# ::node	0.3	involve-01	26-27
# ::node	0.3.0	accident	25-26
# ::node	0.3.1	vehicle	28-29
# ::node	0.3.1.0	turn-02	29-30
# ::node	0.3.1.0.0	temporal-quantity	18-19
# ::node	0.3.1.0.0.0	past	16-17
# ::node	0.3.1.0.0.1	year	18-19
# ::node	0.3.1.0.1	road	34-35
# ::node	0.3.1.0.2	11	8-9
# ::node	0.3.2	road	3-4
# ::root	0	contrast-01
# ::edge	11	op1	turn-02	0.3.1.0.2	0.3.1.0	
# ::edge	accident	mod	injure-01	0.2.0	0.2	
# ::edge	contrast-01	ARG0	fatality	0	0.0	
# ::edge	contrast-01	ARG1	all	0	0.1	
# ::edge	contrast-01	ARG2	involve-01	0	0.3	
# ::edge	fatality	quant	4	0.0	0.0.0	
# ::edge	injure-01	ARG1	contrast-01	0.2	0	
# ::edge	involve-01	ARG0	accident	0.3	0.3.0	
# ::edge	involve-01	ARG1	vehicle	0.3	0.3.1	
# ::edge	past	op1	temporal-quantity	0.3.1.0.0.0	0.3.1.0.0	
# ::edge	road	op1	involve-01	0.3.2	0.3	
# ::edge	temporal-quantity	unit	year	0.3.1.0.0	0.3.1.0.0.1	
# ::edge	turn-02	ARG0	temporal-quantity	0.3.1.0	0.3.1.0.0	
# ::edge	turn-02	ARG1	vehicle	0.3.1.0	0.3.1	
# ::edge	turn-02	ARG2	road	0.3.1.0	0.3.1.0.1	
(c / contrast-01 
      :ARG0 (f / fatality 
            :quant 4) 
      :ARG1 (a2 / all) 
      :ARG1-of (i2 / injure-01 
            :mod-of (a3 / accident)) 
      :ARG2 (i / involve-01 
            :ARG0 (a / accident) 
            :ARG1 (v / vehicle 
                  :ARG1-of (t / turn-02 
                        :ARG0 (t2 / temporal-quantity 
                              :op-of (p / past) 
                              :unit (y / year)) 
                        :ARG2 (r / road) 
                        :op-of 11)) 
            :op-of (r2 / road)))

# ::snt he was worried there would be a bad accident where lower road bladon joined the a4095
# ::tok he was worried there would be a bad accident where lower road bladon joined the a4095
# ::alignments 13-14|0.1.0 11-12|0.1.0.0 10-11|0.1.0.0.0 8-9|0.1 7-8|0.1.1 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:08.051
# ::node	0	worry-02	2-3
# ::node	0.0	he	0-1
# ::node	0.1	accident	8-9
# ::node	0.1.0	join-01	13-14
# ::node	0.1.0.0	road	11-12
# ::node	0.1.0.0.0	low	10-11
# ::node	0.1.1	bad	7-8
# ::root	0	worry-02
# ::edge	accident	mod	bad	0.1	0.1.1	
# ::edge	join-01	ARG0	road	0.1.0	0.1.0.0	
# ::edge	join-01	ARG1	accident	0.1.0	0.1	
# ::edge	road	mod	low	0.1.0.0	0.1.0.0.0	
# ::edge	worry-02	ARG0	he	0	0.0	
# ::edge	worry-02	ARG1	accident	0	0.1	
(w / worry-02 
      :ARG0 (h / he) 
      :ARG1 (a / accident 
            :ARG1-of (j / join-01 
                  :ARG0 (r / road 
                        :mod (l / low))) 
            :mod (b / bad)))

# ::snt the 1990 world grand prix series  a pedestrian was hurt after being involved in an accident with a motorbike in high street oxford last night dash
# ::tok the 1990 world grand prix series a pedestrian was hurt after being involved in an accident with a motorbike in high street oxford last night dash
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:08.052
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt deadlocks have been resisted since they pose the problem of people being trapped in vehicles after accidents
# ::tok deadlocks have been resisted since they pose the problem of people being trapped in vehicles after accidents
# ::alignments 16-17|0.0.0.1.1.0 15-16|0.0.0.1.1 14-15|0.0.0.1.0 12-13|0.0.0.1 8-9|0.0.1 6-7|0.0.0 5-6|0.0.0.0 4-5|0.0 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:08.114
# ::node	0	resist-01	3-4
# ::node	0.0	since	4-5
# ::node	0.0.0	pose-02	6-7
# ::node	0.0.0.0	they	5-6
# ::node	0.0.0.1	trap-01	12-13
# ::node	0.0.0.1.0	vehicle	14-15
# ::node	0.0.0.1.1	after	15-16
# ::node	0.0.0.1.1.0	accident	16-17
# ::node	0.0.1	problem	8-9
# ::root	0	resist-01
# ::edge	after	op1	accident	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	pose-02	ARG0	they	0.0.0	0.0.0.0	
# ::edge	pose-02	ARG1	trap-01	0.0.0	0.0.0.1	
# ::edge	resist-01	time	since	0	0.0	
# ::edge	since	op1	pose-02	0.0	0.0.0	
# ::edge	since	op2	problem	0.0	0.0.1	
# ::edge	trap-01	ARG2	vehicle	0.0.0.1	0.0.0.1.0	
# ::edge	trap-01	time	after	0.0.0.1	0.0.0.1.1	
(r / resist-01 
      :time (s / since 
            :op1 (p2 / pose-02 
                  :ARG0 (t2 / they) 
                  :ARG1 (t / trap-01 
                        :ARG2 (v / vehicle) 
                        :time (a2 / after 
                              :op1 (a / accident)))) 
            :op2 (p / problem)))

# ::snt in terms of the concentration of energy it will occupy the smallest volume and i dont think its and accident that we use petrol
# ::tok in terms of the concentration of energy it will occupy the smallest volume and i dont think its and accident that we use petrol
# ::alignments 23-24|0.0.0.1 22-23|0.0.0 21-22|0.0.0.0 19-20|0.0 18-19|0 16-17|0.0.1 14-15|0.0.1.0 13-14|0.0.2 12-13|0.0.2.0.1 11-12|0.0.2.0.2.0.0.0+0.0.2.0.2.0.0 9-10|0.0.2.0 7-8|0.0.2.0.0 6-7|0.0.2.0.2.0.1 4-5|0.0.2.0.2.0 1-2|0.0.2.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:08.687
# ::node	0	and	18-19
# ::node	0.0	accident	19-20
# ::node	0.0.0	use-01	22-23
# ::node	0.0.0.0	we	21-22
# ::node	0.0.0.1	petrol	23-24
# ::node	0.0.1	think-01	16-17
# ::node	0.0.1.0	i	14-15
# ::node	0.0.2	and	13-14
# ::node	0.0.2.0	occupy-01	9-10
# ::node	0.0.2.0.0	it	7-8
# ::node	0.0.2.0.1	volume	12-13
# ::node	0.0.2.0.2	term	1-2
# ::node	0.0.2.0.2.0	concentrate-02	4-5
# ::node	0.0.2.0.2.0.0	small	11-12
# ::node	0.0.2.0.2.0.0.0	most	11-12
# ::node	0.0.2.0.2.0.1	energy	6-7
# ::root	0	and
(a2 / and 
      :location-of (a / accident 
            :ARG1-of (u / use-01 
                  :ARG0 (w / we) 
                  :ARG2 (p / petrol)) 
            :ARG1-of (t / think-01 
                  :ARG0 (i / i)) 
            :op-of (a3 / and 
                  :op1 (o / occupy-01 
                        :ARG0 (i2 / it) 
                        :ARG1 (v / volume) 
                        :manner (t2 / term 
                              :mod (c / concentrate-02 
                                    :ARG0 (s / small 
                                          :degree (m / most)) 
                                    :ARG1 (e / energy)))))))

# ::snt and if anyone should think that the uncomfortable seating is a design accident they should visit the third arena an underground theatre where there are no chairs at all only cold marble benches that could be used to stock prechilled shows
# ::tok and if anyone should think that the uncomfortable seating is a design accident they should visit the third arena an underground theatre where there are no chairs at all only cold marble benches that could be used to stock prechilled shows
# ::alignments 40-41|0 38-39|0.1.1 36-37|0.1 34-35|0.1.2 30-31|0.1.2.1 29-30|0.0 28-29|0.1.2.0.0.0.1.0.0.0 26-27|0.1.0 25-26|0.1.0.0 20-21|0.1.2.0.0.0.1.0.1.0 18-19|0.1.2.0.0.0.0 15-16|0.1.2.0.0.0 14-15|0.1.2.0 13-14|0.1.2.0.0 12-13|0.1.2.0.0.0.1.1 11-12|0.1.2.0.0.0.1 7-8|0.1.2.0.0.0.1.0.0.1+0.1.2.0.0.0.1.0.0 4-5|0.1.2.0.0.0.1.0.1 3-4|0.1.2.0.0.0.1.0.1.1 2-3|0.1.2.0.0.0.1.0 0-1|0.1.2.0.0.0.1.0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:09.444
# ::node	0	show-01	40-41
# ::node	0.0	only	29-30
# ::node	0.1	use-01	36-37
# ::node	0.1.0	chair	26-27
# ::node	0.1.0.0	-	25-26
# ::node	0.1.1	stock	38-39
# ::node	0.1.2	possible	34-35
# ::node	0.1.2.0	recommend-01	14-15
# ::node	0.1.2.0.0	they	13-14
# ::node	0.1.2.0.0.0	visit-01	15-16
# ::node	0.1.2.0.0.0.0	arena	18-19
# ::node	0.1.2.0.0.0.1	design-01	11-12
# ::node	0.1.2.0.0.0.1.0	anyone	2-3
# ::node	0.1.2.0.0.0.1.0.0	comfort-01	7-8
# ::node	0.1.2.0.0.0.1.0.0.0	all	28-29
# ::node	0.1.2.0.0.0.1.0.0.1	-	7-8
# ::node	0.1.2.0.0.0.1.0.1	think-01	4-5
# ::node	0.1.2.0.0.0.1.0.1.0	underground	20-21
# ::node	0.1.2.0.0.0.1.0.1.1	recommend-01	3-4
# ::node	0.1.2.0.0.0.1.0.1.1.0	and	0-1
# ::node	0.1.2.0.0.0.1.1	accident	12-13
# ::node	0.1.2.1	cold	30-31
# ::root	0	show-01
# ::edge	accident	location	design-01	0.1.2.0.0.0.1.1	0.1.2.0.0.0.1	
# ::edge	and	op1	recommend-01	0.1.2.0.0.0.1.0.1.1.0	0.1.2.0.0.0.1.0.1.1	
# ::edge	chair	polarity	-	0.1.0	0.1.0.0	
# ::edge	cold	mod	possible	0.1.2.1	0.1.2	
# ::edge	comfort-01	ARG0	anyone	0.1.2.0.0.0.1.0.0	0.1.2.0.0.0.1.0	
# ::edge	comfort-01	ARG1	all	0.1.2.0.0.0.1.0.0	0.1.2.0.0.0.1.0.0.0	
# ::edge	comfort-01	polarity	-	0.1.2.0.0.0.1.0.0	0.1.2.0.0.0.1.0.0.1	
# ::edge	design-01	ARG0	anyone	0.1.2.0.0.0.1	0.1.2.0.0.0.1.0	
# ::edge	design-01	ARG1	visit-01	0.1.2.0.0.0.1	0.1.2.0.0.0	
# ::edge	recommend-01	ARG1	possible	0.1.2.0	0.1.2	
# ::edge	recommend-01	ARG1	think-01	0.1.2.0.0.0.1.0.1.1	0.1.2.0.0.0.1.0.1	
# ::edge	recommend-01	ARG2	they	0.1.2.0	0.1.2.0.0	
# ::edge	show-01	ARG1	only	0	0.0	
# ::edge	think-01	ARG0	anyone	0.1.2.0.0.0.1.0.1	0.1.2.0.0.0.1.0	
# ::edge	think-01	ARG1	underground	0.1.2.0.0.0.1.0.1	0.1.2.0.0.0.1.0.1.0	
# ::edge	use-01	ARG0	chair	0.1	0.1.0	
# ::edge	use-01	ARG1	show-01	0.1	0	
# ::edge	use-01	ARG2	stock	0.1	0.1.1	
# ::edge	use-01	mod	possible	0.1	0.1.2	
# ::edge	visit-01	ARG0	they	0.1.2.0.0.0	0.1.2.0.0	
# ::edge	visit-01	ARG1	arena	0.1.2.0.0.0	0.1.2.0.0.0.0	
(s / show-01 
      :ARG1 (o / only) 
      :ARG1-of (u / use-01 
            :ARG0 (c2 / chair 
                  :polarity (- / -)) 
            :ARG2 (s2 / stock) 
            :mod (p / possible 
                  :ARG1-of (r / recommend-01 
                        :ARG2 (t / they 
                              :ARG0-of (v / visit-01 
                                    :ARG1 (a2 / arena) 
                                    :ARG1-of (d / design-01 
                                          :ARG0 (a4 / anyone 
                                                :ARG0-of (c3 / comfort-01 
                                                      :ARG1 (a / all) 
                                                      :polarity -) 
                                                :ARG0-of (t2 / think-01 
                                                      :ARG1 (u2 / underground) 
                                                      :ARG1-of (r2 / recommend-01 
                                                            :op-of (a5 / and)))) 
                                          :location-of (a3 / accident))))) 
                  :mod-of (c / cold))))

# ::snt it finds for example the male drivers up to 20 years old have seven times more accidents per million kilometres driven than men in their fifties, young women have fewer accidents than young men but after the age of 30 the position is reversed
# ::tok it finds for example the male drivers up to 20 years old have seven times more accidents per million kilometres driven than men in their fifties , young women have fewer accidents than young men but after the age of 30 the position is reversed
# ::alignments 44-45|0.2 42-43|0.2.1 40-41|0.2.2.0.1.0 38-39|0.2.3.0 36-37|0.2.3 35-36|0 34-35|0.2.3.0.0 33-34|0.2.3.0.0.1 31-32|0.1 30-31|0.1.1 28-29|0.1.0 27-28|0.2.3.0.0.0 22-23|0.2.2.0.0 20-21|0.2.2.0 19-20|0.2.2.0.1.1+0.2.2.0.1 16-17|0.2.2 13-14|0.0 11-12|0.2.0.0.0.0 10-11|0.2.0.0.0.2+0.2.0.0.0 9-10|0.2.0.0.0.1 6-7|0.2.0.0+0.2.0 5-6|0.2.2.0.2 3-4|0.2.0.1.1 1-2|0.2.0.1 0-1|0.2.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:10.390
# ::node	0	contrast-01	35-36
# ::node	0.0	7	13-14
# ::node	0.1	accident	31-32
# ::node	0.1.0	woman	28-29
# ::node	0.1.1	few	30-31
# ::node	0.2	reverse-01	44-45
# ::node	0.2.0	person	6-7
# ::node	0.2.0.0	drive-01	6-7
# ::node	0.2.0.0.0	temporal-quantity	10-11
# ::node	0.2.0.0.0.0	old	11-12
# ::node	0.2.0.0.0.1	20	9-10
# ::node	0.2.0.0.0.2	year	10-11
# ::node	0.2.0.1	find-01	1-2
# ::node	0.2.0.1.0	it	0-1
# ::node	0.2.0.1.1	example	3-4
# ::node	0.2.1	position	42-43
# ::node	0.2.2	accident	16-17
# ::node	0.2.2.0	drive-02	20-21
# ::node	0.2.2.0.0	man	22-23
# ::node	0.2.2.0.1	distance-quantity	19-20
# ::node	0.2.2.0.1.0	30	40-41
# ::node	0.2.2.0.1.1	kilometer	19-20
# ::node	0.2.2.0.2	male	5-6
# ::node	0.2.3	after	36-37
# ::node	0.2.3.0	age-01	38-39
# ::node	0.2.3.0.0	man	34-35
# ::node	0.2.3.0.0.0	young	27-28
# ::node	0.2.3.0.0.1	young	33-34
# ::root	0	contrast-01
# ::edge	accident	quant	few	0.1	0.1.1	
# ::edge	after	op1	age-01	0.2.3	0.2.3.0	
# ::edge	age-01	ARG1	man	0.2.3.0	0.2.3.0.0	
# ::edge	contrast-01	ARG0	7	0	0.0	
# ::edge	contrast-01	ARG1	accident	0	0.1	
# ::edge	contrast-01	ARG2	reverse-01	0	0.2	
# ::edge	distance-quantity	quant	30	0.2.2.0.1	0.2.2.0.1.0	
# ::edge	distance-quantity	unit	kilometer	0.2.2.0.1	0.2.2.0.1.1	
# ::edge	drive-01	ARG0	person	0.2.0.0	0.2.0	
# ::edge	drive-01	ARG1	temporal-quantity	0.2.0.0	0.2.0.0.0	
# ::edge	drive-02	ARG0	man	0.2.2.0	0.2.2.0.0	
# ::edge	drive-02	ARG1	distance-quantity	0.2.2.0	0.2.2.0.1	
# ::edge	drive-02	consist	accident	0.2.2.0	0.2.2	
# ::edge	find-01	ARG0	it	0.2.0.1	0.2.0.1.0	
# ::edge	find-01	ARG1	person	0.2.0.1	0.2.0	
# ::edge	find-01	location	example	0.2.0.1	0.2.0.1.1	
# ::edge	male	op1	drive-02	0.2.2.0.2	0.2.2.0	
# ::edge	man	mod	young	0.2.3.0.0	0.2.3.0.0.0	
# ::edge	man	mod	young	0.2.3.0.0	0.2.3.0.0.1	
# ::edge	old	domain	temporal-quantity	0.2.0.0.0.0	0.2.0.0.0	
# ::edge	reverse-01	ARG0	person	0.2	0.2.0	
# ::edge	reverse-01	ARG1	position	0.2	0.2.1	
# ::edge	reverse-01	domain	accident	0.2	0.2.2	
# ::edge	reverse-01	time	after	0.2	0.2.3	
# ::edge	temporal-quantity	quant	20	0.2.0.0.0	0.2.0.0.0.1	
# ::edge	temporal-quantity	unit	year	0.2.0.0.0	0.2.0.0.0.2	
# ::edge	woman	mod	accident	0.1.0	0.1	
(c / contrast-01 
      :ARG0 7 
      :ARG1 (a3 / accident 
            :mod-of (w / woman) 
            :quant (f / few)) 
      :ARG2 (r / reverse-01 
            :ARG0 (p2 / person 
                  :ARG0-of (d3 / drive-01 
                        :ARG1 (t / temporal-quantity 
                              :domain-of (o / old) 
                              :quant 20 
                              :unit (y3 / year))) 
                  :ARG1-of (f2 / find-01 
                        :ARG0 (i / it) 
                        :location (e / example))) 
            :ARG1 (p / position) 
            :domain (a4 / accident 
                  :consist-of (d / drive-02 
                        :ARG0 (m2 / man) 
                        :ARG1 (d2 / distance-quantity 
                              :quant 30 
                              :unit (k / kilometer)) 
                        :op-of (m3 / male))) 
            :time (a2 / after 
                  :op1 (a / age-01 
                        :ARG1 (m / man 
                              :mod (y2 / young) 
                              :mod (y / young))))))

# ::snt or a single accident like an aeroplane collision explosion or escape of poison gas may bring injury or death to thousands and dislocation to a whole region
# ::tok or a single accident like an aeroplane collision explosion or escape of poison gas may bring injury or death to thousands and dislocation to a whole region
# ::alignments 26-27|0.0.1.0.0 25-26|0.0.1.0.0.0 21-22|0 18-19|0.0.1.1 17-18|0.0.1 16-17|0.0.1.0 15-16|0.0 14-15|0.0.2.1+0.0.2 13-14|0.0.0.0.1 10-11|0.0.0.1 9-10|0.0.0 8-9|0.0.0.0 7-8|0.0.0.0.0 3-4|0.0.2.0.0 2-3|0.0.2.0.0.0 0-1|0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:10.730
# ::node	0	and	21-22
# ::node	0.0	bring-01	15-16
# ::node	0.0.0	or	9-10
# ::node	0.0.0.0	explode-01	8-9
# ::node	0.0.0.0.0	collide-01	7-8
# ::node	0.0.0.0.1	gas	13-14
# ::node	0.0.0.1	escape-01	10-11
# ::node	0.0.1	or	17-18
# ::node	0.0.1.0	injure-01	16-17
# ::node	0.0.1.0.0	region	26-27
# ::node	0.0.1.0.0.0	whole	25-26
# ::node	0.0.1.1	die-01	18-19
# ::node	0.0.2	date-entity	14-15
# ::node	0.0.2.0	or	0-1
# ::node	0.0.2.0.0	accident	3-4
# ::node	0.0.2.0.0.0	single	2-3
# ::node	0.0.2.1	5	14-15
# ::root	0	and
(a / and 
      :ARG2-of (b / bring-01 
            :ARG0 (o2 / or 
                  :op1 (e2 / explode-01 
                        :ARG0-of (c / collide-01) 
                        :ARG1 (g / gas)) 
                  :op2 (e / escape-01)) 
            :ARG1 (o / or 
                  :op1 (i / injure-01 
                        :ARG2 (r / region 
                              :mod (w / whole))) 
                  :op2 (d / die-01)) 
            :mod (d2 / date-entity 
                  :domain-of (o3 / or 
                        :op1 (a2 / accident 
                              :mod (s / single))) 
                  :month 5)))

# ::snt mrs nellie jones 83 was being driven from yarnton village hall to her home in canal yard thrupp when the accident happened at the junction with langford lane on december 9
# ::tok mrs nellie jones 83 was being driven from yarnton village hall to her home in canal yard thrupp when the accident happened at the junction with langford lane on december 9
# ::alignments 30-31|0.1.1.0 29-30|0.1.2.0+0.1.2 21-22|0.1 20-21|0.1.1 16-17|0.0.0.0.0 15-16|0.0.0.0.0.0 13-14|0.0.0.0 10-11|0.0 9-10|0.0.0 6-7|0 3-4|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:10.809
# ::node	0	drive-02	6-7
# ::node	0.0	hall	10-11
# ::node	0.0.0	village	9-10
# ::node	0.0.0.0	home	13-14
# ::node	0.0.0.0.0	yard	16-17
# ::node	0.0.0.0.0.0	canal	15-16
# ::node	0.1	happen-01	21-22
# ::node	0.1.0	83	3-4
# ::node	0.1.1	accident	20-21
# ::node	0.1.1.0	9	30-31
# ::node	0.1.2	date-entity	29-30
# ::node	0.1.2.0	12	29-30
# ::root	0	drive-02
# ::edge	accident	quant	9	0.1.1	0.1.1.0	
# ::edge	date-entity	month	12	0.1.2	0.1.2.0	
# ::edge	drive-02	ARG0	hall	0	0.0	
# ::edge	drive-02	ARG1	happen-01	0	0.1	
# ::edge	hall	mod	village	0.0	0.0.0	
# ::edge	happen-01	ARG0	83	0.1	0.1.0	
# ::edge	happen-01	ARG1	accident	0.1	0.1.1	
# ::edge	happen-01	time	date-entity	0.1	0.1.2	
# ::edge	home	location	yard	0.0.0.0	0.0.0.0.0	
# ::edge	village	op1	home	0.0.0	0.0.0.0	
# ::edge	yard	mod	canal	0.0.0.0.0	0.0.0.0.0.0	
(d2 / drive-02 
      :ARG0 (h3 / hall 
            :mod (v / village 
                  :op1 (h2 / home 
                        :location (y / yard 
                              :mod (c / canal))))) 
      :ARG1 (h / happen-01 
            :ARG0 83 
            :ARG1 (a / accident 
                  :quant 9) 
            :time (d / date-entity 
                  :month 12)))

# ::snt ambulance service management in london had no option but to hand over accident and emergency cover to the police when staff refused to operate a reliable service kenneth clarke secretary of state for health said yesterday writes judy jones
# ::tok ambulance service management in london had no option but to hand over accident and emergency cover to the police when staff refused to operate a reliable service kenneth clarke secretary of state for health said yesterday writes judy jones
# ::alignments 36-37|0.0.0 35-36|0.0.0.0 34-35|0 33-34|0.0.0.1 31-32|0.0.1.0.0.0 29-30|0.0.1.0.0 23-24|0.0.1.0 21-22|0.0.1 20-21|0.0.2+0.0 18-19|0.0.1.0.1 14-15|0.1.2 13-14|0.1 12-13|0.1.1 10-11|0.1.0 8-9|0.1.0.1.1 7-8|0.1.0.1 6-7|0.1.0.1.2 4-5|0.1.0.0.0.0+0.1.0.0.0+0.1.0.0 2-3|0.1.0.1.0 0-1|0.1.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:11.288
# ::node	0	say-01	34-35
# ::node	0.0	person	20-21
# ::node	0.0.0	write-01	36-37
# ::node	0.0.0.0	yesterday	35-36
# ::node	0.0.0.1	health	33-34
# ::node	0.0.1	refuse-01	21-22
# ::node	0.0.1.0	operate-01	23-24
# ::node	0.0.1.0.0	secretary	29-30
# ::node	0.0.1.0.0.0	state	31-32
# ::node	0.0.1.0.1	police	18-19
# ::node	0.0.2	staff-01	20-21
# ::node	0.1	and	13-14
# ::node	0.1.0	hand	10-11
# ::node	0.1.0.0	city	4-5
# ::node	0.1.0.0.0	name	4-5
# ::node	0.1.0.0.0.0	"London"	4-5
# ::node	0.1.0.1	option	7-8
# ::node	0.1.0.1.0	manage-01	2-3
# ::node	0.1.0.1.0.0	ambulance	0-1
# ::node	0.1.0.1.1	contrast-01	8-9
# ::node	0.1.0.1.2	-	6-7
# ::node	0.1.1	accident	12-13
# ::node	0.1.2	emergency	14-15
# ::root	0	say-01
# ::edge	and	op1	hand	0.1	0.1.0	
# ::edge	and	op2	accident	0.1	0.1.1	
# ::edge	and	op3	emergency	0.1	0.1.2	
# ::edge	city	name	name	0.1.0.0	0.1.0.0.0	
# ::edge	contrast-01	ARG1	option	0.1.0.1.1	0.1.0.1	
# ::edge	hand	op1	city	0.1.0	0.1.0.0	
# ::edge	manage-01	ARG0	option	0.1.0.1.0	0.1.0.1	
# ::edge	manage-01	ARG1	ambulance	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	name	op1	"London"	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	operate-01	ARG1	secretary	0.0.1.0	0.0.1.0.0	
# ::edge	operate-01	location	police	0.0.1.0	0.0.1.0.1	
# ::edge	option	polarity	-	0.1.0.1	0.1.0.1.2	
# ::edge	option	prep-except	hand	0.1.0.1	0.1.0	
# ::edge	refuse-01	ARG0	person	0.0.1	0.0	
# ::edge	refuse-01	ARG1	operate-01	0.0.1	0.0.1.0	
# ::edge	say-01	ARG0	person	0	0.0	
# ::edge	say-01	ARG1	and	0	0.1	
# ::edge	secretary	mod	state	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	staff-01	ARG2	person	0.0.2	0.0	
# ::edge	write-01	ARG0	person	0.0.0	0.0	
# ::edge	write-01	ARG1	yesterday	0.0.0	0.0.0.0	
# ::edge	write-01	ARG2	health	0.0.0	0.0.0.1	
(s / say-01 
      :ARG0 (p / person 
            :ARG0-of (w / write-01 
                  :ARG1 (y / yesterday) 
                  :ARG2 (h / health)) 
            :ARG0-of (r / refuse-01 
                  :ARG1 (o / operate-01 
                        :ARG1 (s3 / secretary 
                              :mod (s2 / state)) 
                        :location (p2 / police))) 
            :ARG2-of (s4 / staff-01)) 
      :ARG1 (a / and 
            :op1 (h2 / hand 
                  :op1 (c2 / city 
                        :name (n / name 
                              :op1 "London")) 
                  :prep-except-of (o2 / option 
                        :ARG0-of (m / manage-01 
                              :ARG1 (a3 / ambulance)) 
                        :ARG1-of (c / contrast-01) 
                        :polarity (- / -))) 
            :op2 (a2 / accident) 
            :op3 (e / emergency)))

# ::snt the bus drivers are very concerned about the hazards of the situation and there have already been accidents he said
# ::tok the bus drivers are very concerned about the hazards of the situation and there have already been accidents he said
# ::alignments 19-20|0 18-19|0.0 17-18|0.1 15-16|0.1.0 12-13|0.1.1 11-12|0.1.1.1 5-6|0.1.1.0 4-5|0.1.1.0.1 2-3|0.1.1.0.0.0+0.1.1.0.0 1-2|0.1.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:11.335
# ::node	0	say-01	19-20
# ::node	0.0	he	18-19
# ::node	0.1	accident	17-18
# ::node	0.1.0	already	15-16
# ::node	0.1.1	and	12-13
# ::node	0.1.1.0	concern-01	5-6
# ::node	0.1.1.0.0	person	2-3
# ::node	0.1.1.0.0.0	drive-01	2-3
# ::node	0.1.1.0.0.0.0	bus	1-2
# ::node	0.1.1.0.1	very	4-5
# ::node	0.1.1.1	situation	11-12
# ::root	0	say-01
# ::edge	already	domain	accident	0.1.0	0.1	
# ::edge	and	op1	concern-01	0.1.1	0.1.1.0	
# ::edge	and	op2	situation	0.1.1	0.1.1.1	
# ::edge	and	op3	accident	0.1.1	0.1	
# ::edge	concern-01	ARG1	person	0.1.1.0	0.1.1.0.0	
# ::edge	concern-01	degree	very	0.1.1.0	0.1.1.0.1	
# ::edge	drive-01	ARG0	person	0.1.1.0.0.0	0.1.1.0.0	
# ::edge	drive-01	ARG1	bus	0.1.1.0.0.0	0.1.1.0.0.0.0	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	accident	0	0.1	
(s / say-01 
      :ARG0 (h / he) 
      :ARG1 (a / accident 
            :domain-of (a2 / already) 
            :op-of (a3 / and 
                  :op1 (c / concern-01 
                        :ARG1 (p / person 
                              :ARG0-of (d / drive-01 
                                    :ARG1 (b / bus))) 
                        :degree (v / very)) 
                  :op2 (s2 / situation))))

# ::snt he was a breaststroke swimmer when a motorcycle accident put him in a wheelchair
# ::tok he was a breaststroke swimmer when a motorcycle accident put him in a wheelchair
# ::alignments 8-9|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:11.346
# ::node	0	he	0-1
# ::node	0.0	accident	8-9
# ::root	0	he
# ::edge	he	poss	accident	0	0.0	
(h / he 
      :poss (a / accident))

# ::snt police are appealing for witnesses following a traffic accident in north oxfordshire this morning
# ::tok police are appealing for witnesses following a traffic accident in north oxfordshire this morning
# ::alignments 13-14|0.2.0.0 12-13|0.2.0.0.0 10-11|0.3 8-9|0.2.0 7-8|0.2 4-5|0.1.0+0.1 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:11.418
# ::node	0	appeal-03	2-3
# ::node	0.0	police	0-1
# ::node	0.1	person	4-5
# ::node	0.1.0	witness-01	4-5
# ::node	0.2	traffic	7-8
# ::node	0.2.0	accident	8-9
# ::node	0.2.0.0	morning	13-14
# ::node	0.2.0.0.0	this	12-13
# ::node	0.3	north	10-11
# ::root	0	appeal-03
# ::edge	accident	location	traffic	0.2.0	0.2	
# ::edge	accident	time	morning	0.2.0	0.2.0.0	
# ::edge	appeal-03	ARG0	police	0	0.0	
# ::edge	appeal-03	ARG1	person	0	0.1	
# ::edge	appeal-03	ARG2	traffic	0	0.2	
# ::edge	appeal-03	manner	north	0	0.3	
# ::edge	morning	mod	this	0.2.0.0	0.2.0.0.0	
# ::edge	witness-01	ARG0	person	0.1.0	0.1	
(a2 / appeal-03 
      :ARG0 (p2 / police) 
      :ARG1 (p / person 
            :ARG0-of (w / witness-01)) 
      :ARG2 (t2 / traffic 
            :location-of (a / accident 
                  :time (m / morning 
                        :mod (t / this)))) 
      :manner (n / north))

# ::snt er accident he said
# ::tok er accident he said
# ::alignments 3-4|0 2-3|0.0 1-2|0.1 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:11.429
# ::node	0	say-01	3-4
# ::node	0.0	he	2-3
# ::node	0.0.0	er	0-1
# ::node	0.1	accident	1-2
# ::root	0	say-01
# ::edge	er	mod	he	0.0.0	0.0	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	accident	0	0.1	
(s / say-01 
      :ARG0 (h / he 
            :mod-of (e / er)) 
      :ARG1 (a / accident))

# ::snt as in previous years there were more accidents on the clockwise carriageway 296 than on the anticlockwise 248
# ::tok as in previous years there were more accidents on the clockwise carriageway 296 than on the anticlockwise 248
# ::alignments 7-8|0 3-4|0.0.0+0.0.0.0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:11.449
# ::node	0	accident	7-8
# ::node	0.0	previous	2-3
# ::node	0.0.0	year	3-4
# ::node	0.0.0.0	temporal-quantity	3-4
# ::root	0	accident
(a / accident 
      :op-of (p / previous 
            :mod-of (y / year 
                  :unit-of (t / temporal-quantity))))

# ::snt it is likely that a lot of people saw the accident
# ::tok it is likely that a lot of people saw the accident
# ::alignments 10-11|0.0.1 8-9|0.0 5-6|0.0.0 2-3|0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:11.461
# ::node	0	likely	2-3
# ::node	0.0	see-01	8-9
# ::node	0.0.0	lot	5-6
# ::node	0.0.1	accident	10-11
# ::node	0.1	it	0-1
# ::root	0	likely
# ::edge	likely	domain	it	0	0.1	
# ::edge	likely	domain	see-01	0	0.0	
# ::edge	see-01	ARG0	lot	0.0	0.0.0	
# ::edge	see-01	ARG1	accident	0.0	0.0.1	
(l2 / likely 
      :domain (s / see-01 
            :ARG0 (l / lot) 
            :ARG1 (a / accident)) 
      :domain (i / it))

# ::snt whatever other differences exist in the nature of their work when the police fire and ambulance services work together at the scene of accidents there is no doubt they are a team with identical objectives attracting identical public expectations
# ::tok whatever other differences exist in the nature of their work when the police fire and ambulance services work together at the scene of accidents there is no doubt they are a team with identical objectives attracting identical public expectations
# ::alignments 38-39|0.0.0.0.0 37-38|0.0.0.0.0.2 36-37|0.0.0.0 35-36|0.0.0.0.0.1 34-35|0.0.0.0.0.1.0 33-34|0.0.0.0.0.1.0.0 31-32|0.0.0 28-29|0.0 27-28|0 26-27|0.2 23-24|0.0.0.0.0.1.0.0.0 21-22|0.0.0.0.0.1.0.0.0.0 18-19|0.0.0.0.0.0 16-17|0.0.0.0.0.1.1.2 15-16|0.0.0.0.0.1.1.2.0 14-15|0.0.0.0.0.1.1 12-13|0.0.0.0.0.1.1.1 6-7|0.0.0.0.0.1.1.0.0 3-4|0.0.0.0.0.1.1.0 1-2|0.1 0-1|0.0.0.0.0.1.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:12.387
# ::node	0	doubt-01	27-28
# ::node	0.0	they	28-29
# ::node	0.0.0	team	31-32
# ::node	0.0.0.0	identical-41	36-37
# ::node	0.0.0.0.0	expect-01	38-39
# ::node	0.0.0.0.0.0	together	18-19
# ::node	0.0.0.0.0.1	attract-01	35-36
# ::node	0.0.0.0.0.1.0	objective	34-35
# ::node	0.0.0.0.0.1.0.0	identical-41	33-34
# ::node	0.0.0.0.0.1.0.0.0	accident	23-24
# ::node	0.0.0.0.0.1.0.0.0.0	scene	21-22
# ::node	0.0.0.0.0.1.1	and	14-15
# ::node	0.0.0.0.0.1.1.0	exist-01	3-4
# ::node	0.0.0.0.0.1.1.0.0	nature	6-7
# ::node	0.0.0.0.0.1.1.0.1	whatever	0-1
# ::node	0.0.0.0.0.1.1.1	police	12-13
# ::node	0.0.0.0.0.1.1.2	service	16-17
# ::node	0.0.0.0.0.1.1.2.0	ambulance	15-16
# ::node	0.0.0.0.0.2	public	37-38
# ::node	0.1	other	1-2
# ::node	0.2	-	26-27
# ::root	0	doubt-01
# ::edge	and	op1	police	0.0.0.0.0.1.1	0.0.0.0.0.1.1.1	
# ::edge	and	op2	service	0.0.0.0.0.1.1	0.0.0.0.0.1.1.2	
# ::edge	and	op3	attract-01	0.0.0.0.0.1.1	0.0.0.0.0.1	
# ::edge	attract-01	ARG0	objective	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	attract-01	ARG1	expect-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	doubt-01	ARG0	they	0	0.0	
# ::edge	doubt-01	polarity	-	0	0.2	
# ::edge	exist-01	ARG0	nature	0.0.0.0.0.1.1.0	0.0.0.0.0.1.1.0.0	
# ::edge	exist-01	ARG1	and	0.0.0.0.0.1.1.0	0.0.0.0.0.1.1	
# ::edge	exist-01	ARG2	whatever	0.0.0.0.0.1.1.0	0.0.0.0.0.1.1.0.1	
# ::edge	expect-01	ARG1	together	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	expect-01	mod	public	0.0.0.0.0	0.0.0.0.0.2	
# ::edge	identical-41	ARG0	team	0.0.0.0	0.0.0	
# ::edge	identical-41	ARG1	accident	0.0.0.0.0.1.0.0	0.0.0.0.0.1.0.0.0	
# ::edge	identical-41	ARG2	expect-01	0.0.0.0	0.0.0.0.0	
# ::edge	identical-41	ARG2	objective	0.0.0.0.0.1.0.0	0.0.0.0.0.1.0	
# ::edge	other	op1	doubt-01	0.1	0	
# ::edge	scene	mod	accident	0.0.0.0.0.1.0.0.0.0	0.0.0.0.0.1.0.0.0	
# ::edge	service	mod	ambulance	0.0.0.0.0.1.1.2	0.0.0.0.0.1.1.2.0	
# ::edge	team	domain	they	0.0.0	0.0	
(d / doubt-01 
      :ARG0 (t2 / they 
            :domain-of (t / team 
                  :ARG0-of (i / identical-41 
                        :ARG2 (e / expect-01 
                              :ARG1 (t3 / together) 
                              :ARG1-of (a / attract-01 
                                    :ARG0 (o / objective 
                                          :ARG2-of (i2 / identical-41 
                                                :ARG1 (a2 / accident 
                                                      :mod-of (s / scene)))) 
                                    :op-of (a4 / and 
                                          :ARG1-of (e2 / exist-01 
                                                :ARG0 (n / nature) 
                                                :ARG2 (w / whatever)) 
                                          :op1 (p2 / police) 
                                          :op2 (s2 / service 
                                                :mod (a3 / ambulance)))) 
                              :mod (p / public))))) 
      :op-of (o2 / other) 
      :polarity (- / -))

# ::snt while nationally the number of 999 calls over the christmas period seemed to be down on last year and staff in nearly all areas provided cover services are gearing up for the new year celebrations when excess alcohol normally means a high number of road accidents and more public disorder
# ::tok while nationally the number of 999 calls over the christmas period seemed to be down on last year and staff in nearly all areas provided cover services are gearing up for the new year celebrations when excess alcohol normally means a high number of road accidents and more public disorder
# ::alignments 48-49|0.0.0.0 46-47|0.1.1.1 45-46|0.1.1 44-45|0.1.1.0 42-43|0.1 41-42|0.1.0 39-40|0 38-39|0.2 37-38|0.0 36-37|0.0.0 33-34|0.1.1.1.0.0.0 32-33|0.1.1.1.0.0 26-27|0.1.1.1.0.1 24-25|0.1.1.1.0 23-24|0.1.1.1.0.2 22-23|0.1.1.1.0.2.0 21-22|0.1.1.1.0.2.0.0 19-20|0.3.1.0+0.3.1 18-19|0.3 17-18|0.3.0 16-17|0.3.0.0 14-15|0.1.1.1.0.3.1 11-12|0.1.1.1.0.3 10-11|0.1.1.1.0.3.0 3-4|0.3.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:13.641
# ::node	0	mean-01	39-40
# ::node	0.0	alcohol	37-38
# ::node	0.0.0	exceed-01	36-37
# ::node	0.0.0.0	public	48-49
# ::node	0.1	number	42-43
# ::node	0.1.0	high	41-42
# ::node	0.1.1	accident	45-46
# ::node	0.1.1.0	road	44-45
# ::node	0.1.1.1	and	46-47
# ::node	0.1.1.1.0	provide-01	24-25
# ::node	0.1.1.1.0.0	new	32-33
# ::node	0.1.1.1.0.0.0	year	33-34
# ::node	0.1.1.1.0.1	service	26-27
# ::node	0.1.1.1.0.2	area	23-24
# ::node	0.1.1.1.0.2.0	all	22-23
# ::node	0.1.1.1.0.2.0.0	nearly	21-22
# ::node	0.1.1.1.0.3	seem-01	11-12
# ::node	0.1.1.1.0.3.0	period	10-11
# ::node	0.1.1.1.0.3.1	down	14-15
# ::node	0.2	normal	38-39
# ::node	0.3	and	18-19
# ::node	0.3.0	year	17-18
# ::node	0.3.0.0	last	16-17
# ::node	0.3.1	person	19-20
# ::node	0.3.1.0	staff-01	19-20
# ::node	0.3.1.1	number	3-4
# ::root	0	mean-01
# ::edge	accident	location	road	0.1.1	0.1.1.0	
# ::edge	accident	quant	number	0.1.1	0.1	
# ::edge	all	mod	nearly	0.1.1.1.0.2.0	0.1.1.1.0.2.0.0	
# ::edge	and	op1	provide-01	0.1.1.1	0.1.1.1.0	
# ::edge	and	op1	year	0.3	0.3.0	
# ::edge	and	op2	accident	0.1.1.1	0.1.1	
# ::edge	and	op2	person	0.3	0.3.1	
# ::edge	and	op3	mean-01	0.3	0	
# ::edge	area	quant	all	0.1.1.1.0.2	0.1.1.1.0.2.0	
# ::edge	exceed-01	ARG0	public	0.0.0	0.0.0.0	
# ::edge	exceed-01	ARG1	alcohol	0.0.0	0.0	
# ::edge	mean-01	ARG0	alcohol	0	0.0	
# ::edge	mean-01	ARG1	number	0	0.1	
# ::edge	mean-01	mod	normal	0	0.2	
# ::edge	number	mod	high	0.1	0.1.0	
# ::edge	person	quant	number	0.3.1	0.3.1.1	
# ::edge	provide-01	ARG0	new	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	provide-01	ARG1	service	0.1.1.1.0	0.1.1.1.0.1	
# ::edge	provide-01	ARG2	area	0.1.1.1.0	0.1.1.1.0.2	
# ::edge	seem-01	ARG0	period	0.1.1.1.0.3	0.1.1.1.0.3.0	
# ::edge	seem-01	ARG1	down	0.1.1.1.0.3	0.1.1.1.0.3.1	
# ::edge	seem-01	purpose	provide-01	0.1.1.1.0.3	0.1.1.1.0	
# ::edge	staff-01	ARG2	person	0.3.1.0	0.3.1	
# ::edge	year	mod	last	0.3.0	0.3.0.0	
# ::edge	year	mod	new	0.1.1.1.0.0.0	0.1.1.1.0.0	
(m / mean-01 
      :ARG0 (a3 / alcohol 
            :ARG1-of (e / exceed-01 
                  :ARG0 (p / public))) 
      :ARG1 (n / number 
            :mod (h / high) 
            :quant-of (a2 / accident 
                  :location (r / road) 
                  :op-of (a / and 
                        :op1 (p2 / provide-01 
                              :ARG0 (n3 / new 
                                    :mod-of (y / year)) 
                              :ARG1 (s / service) 
                              :ARG2 (a4 / area 
                                    :quant (a5 / all 
                                          :mod (n4 / nearly))) 
                              :purpose-of (s3 / seem-01 
                                    :ARG0 (p4 / period) 
                                    :ARG1 (d / down)))))) 
      :mod (n2 / normal) 
      :op-of (a6 / and 
            :op1 (y2 / year 
                  :mod (l / last)) 
            :op2 (p3 / person 
                  :ARG2-of (s2 / staff-01) 
                  :quant (n5 / number))))

# ::snt   the executive investigated the accident and provided a briefing for the inquest on mr kenyons death
# ::tok the executive investigated the accident and provided a briefing for the inquest on mr kenyons death
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:13.642
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt gross income is also an economically sounder standard since it makes the defendant responsible for the full cost of the accident thereby maximizing general deterrence
# ::tok gross income is also an economically sounder standard since it makes the defendant responsible for the full cost of the accident thereby maximizing general deterrence
# ::alignments 23-24|0.2.0 22-23|0.1.0 20-21|0.2.1 17-18|0.2 16-17|0.2.2 13-14|0 12-13|0.1 9-10|0.1.0.0 8-9|0.1.0.1.0.1 7-8|0.1.0.1.0 5-6|0.0 3-4|0.1.0.1.0.0 1-2|0.1.0.1 0-1|0.1.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:13.981
# ::node	0	responsible-41	13-14
# ::node	0.0	economy	5-6
# ::node	0.1	defendant	12-13
# ::node	0.1.0	maximize-01	22-23
# ::node	0.1.0.0	it	9-10
# ::node	0.1.0.1	income	1-2
# ::node	0.1.0.1.0	standard	7-8
# ::node	0.1.0.1.0.0	also	3-4
# ::node	0.1.0.1.0.1	since	8-9
# ::node	0.1.0.2	gross	0-1
# ::node	0.2	cost-01	17-18
# ::node	0.2.0	general	23-24
# ::node	0.2.1	accident	20-21
# ::node	0.2.2	full	16-17
# ::root	0	responsible-41
# ::edge	also	domain	standard	0.1.0.1.0.0	0.1.0.1.0	
# ::edge	cost-01	ARG0	general	0.2	0.2.0	
# ::edge	cost-01	ARG1	accident	0.2	0.2.1	
# ::edge	cost-01	mod	full	0.2	0.2.2	
# ::edge	maximize-01	ARG0	it	0.1.0	0.1.0.0	
# ::edge	maximize-01	ARG1	income	0.1.0	0.1.0.1	
# ::edge	maximize-01	ARG2	defendant	0.1.0	0.1	
# ::edge	maximize-01	ARG3	gross	0.1.0	0.1.0.2	
# ::edge	responsible-41	ARG0	economy	0	0.0	
# ::edge	responsible-41	ARG1	defendant	0	0.1	
# ::edge	responsible-41	ARG2	cost-01	0	0.2	
# ::edge	standard	domain	income	0.1.0.1.0	0.1.0.1	
# ::edge	standard	time	since	0.1.0.1.0	0.1.0.1.0.1	
(r / responsible-41 
      :ARG0 (e / economy) 
      :ARG1 (d / defendant 
            :ARG2-of (m / maximize-01 
                  :ARG0 (i / it) 
                  :ARG1 (i2 / income 
                        :domain-of (s2 / standard 
                              :domain-of (a2 / also) 
                              :time (s / since))) 
                  :ARG3 (g2 / gross))) 
      :ARG2 (c / cost-01 
            :ARG0 (g / general) 
            :ARG1 (a / accident) 
            :mod (f / full)))

# ::snt road accidents and diseases such as parkinsons and multiple sclerosis may lead to similar communication disabilities
# ::tok road accidents and diseases such as parkinsons and multiple sclerosis may lead to similar communication disabilities
# ::alignments 14-15|0.0.0 10-11|0.0.0.0.0+0.0.0.0 8-9|0.0.0.1 7-8|0.1.0 4-5|0.1.0.0 3-4|0.1 2-3|0 1-2|0.0 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:14.079
# ::node	0	and	2-3
# ::node	0.0	accident	1-2
# ::node	0.0.0	communicate-01	14-15
# ::node	0.0.0.0	date-entity	10-11
# ::node	0.0.0.0.0	5	10-11
# ::node	0.0.0.1	multiple	8-9
# ::node	0.0.1	road	0-1
# ::node	0.1	disease	3-4
# ::node	0.1.0	and	7-8
# ::node	0.1.0.0	such	4-5
# ::root	0	and
# ::edge	accident	location	road	0.0	0.0.1	
# ::edge	and	op1	accident	0	0.0	
# ::edge	and	op1	such	0.1.0	0.1.0.0	
# ::edge	and	op2	disease	0	0.1	
# ::edge	communicate-01	ARG0	accident	0.0.0	0.0	
# ::edge	communicate-01	ARG1	date-entity	0.0.0	0.0.0.0	
# ::edge	communicate-01	ARG2	multiple	0.0.0	0.0.0.1	
# ::edge	date-entity	month	5	0.0.0.0	0.0.0.0.0	
# ::edge	disease	example	and	0.1	0.1.0	
(a2 / and 
      :op1 (a3 / accident 
            :ARG0-of (c / communicate-01 
                  :ARG1 (d / date-entity 
                        :month 5) 
                  :ARG2 (m / multiple)) 
            :location (r / road)) 
      :op2 (d2 / disease 
            :example (a / and 
                  :op1 (s / such))))

# ::snt if the journey is from the cradle to the grave then we want maximum hours per accident
# ::tok if the journey is from the cradle to the grave then we want maximum hours per accident
# ::alignments 16-17|0.0.1.0 14-15|0.0.1.1+0.0.1 13-14|0.0.1.0.0 12-13|0.0 11-12|0.0.0 10-11|0.0.2 9-10|0.0.0.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:14.210
# ::node	0	journey-01	2-3
# ::node	0.0	want-01	12-13
# ::node	0.0.0	we	11-12
# ::node	0.0.0.0	grave	9-10
# ::node	0.0.1	temporal-quantity	14-15
# ::node	0.0.1.0	accident	16-17
# ::node	0.0.1.0.0	maximum	13-14
# ::node	0.0.1.1	hour	14-15
# ::node	0.0.2	then	10-11
# ::root	0	journey-01
(j / journey-01 
      :ARG2-of (w / want-01 
            :ARG0 (w2 / we 
                  :poss-of (g / grave)) 
            :ARG1 (t / temporal-quantity 
                  :duration-of (a / accident 
                        :mod (m / maximum)) 
                  :unit (h / hour)) 
            :time (t2 / then)))

# ::snt these policies pay out a regular percentage of your income if you are unable to work for a long period because of sickness or an accident
# ::tok these policies pay out a regular percentage of your income if you are unable to work for a long period because of sickness or an accident
# ::alignments 25-26|0.0.0.1 23-24|0.0.0 22-23|0.0 20-21|0 19-20|0.0.0.2 11-12|0.0.0.0.1 9-10|0.0.0.0.2.1 6-7|0.0.0.0.2 5-6|0.0.0.0.2.0 2-3|0.0.0.0 1-2|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:14.355
# ::node	0	cause-01	20-21
# ::node	0.0	sickness	22-23
# ::node	0.0.0	or	23-24
# ::node	0.0.0.0	pay-01	2-3
# ::node	0.0.0.0.0	policy	1-2
# ::node	0.0.0.0.1	you	11-12
# ::node	0.0.0.0.2	percentage	6-7
# ::node	0.0.0.0.2.0	regular	5-6
# ::node	0.0.0.0.2.1	income	9-10
# ::node	0.0.0.1	accident	25-26
# ::node	0.0.0.2	period	19-20
# ::root	0	cause-01
# ::edge	cause-01	ARG0	sickness	0	0.0	
# ::edge	income	part	percentage	0.0.0.0.2.1	0.0.0.0.2	
# ::edge	or	op1	pay-01	0.0.0	0.0.0.0	
# ::edge	or	op2	sickness	0.0.0	0.0	
# ::edge	or	op3	accident	0.0.0	0.0.0.1	
# ::edge	or	time	period	0.0.0	0.0.0.2	
# ::edge	pay-01	ARG0	policy	0.0.0.0	0.0.0.0.0	
# ::edge	pay-01	ARG1	you	0.0.0.0	0.0.0.0.1	
# ::edge	pay-01	ARG3	percentage	0.0.0.0	0.0.0.0.2	
# ::edge	percentage	mod	regular	0.0.0.0.2	0.0.0.0.2.0	
(c / cause-01 
      :ARG0 (s / sickness 
            :op-of (o / or 
                  :op1 (p3 / pay-01 
                        :ARG0 (p4 / policy) 
                        :ARG1 (y / you) 
                        :ARG3 (p2 / percentage 
                              :mod (r / regular) 
                              :part-of (i / income))) 
                  :op2 (a / accident) 
                  :time (p / period))))

# ::snt motor cyclist peter roberts from poole received slight head and shoulder injuries when he was involved in an accident with a car on saturday afternoon near bletchingdon on the a4095
# ::tok motor cyclist peter roberts from poole received slight head and shoulder injuries when he was involved in an accident with a car on saturday afternoon near bletchingdon on the a4095
# ::alignments 25-26|0.0.0.0.3 24-25|0.0.0.0.3.0 23-24|0.0.0.0.3.0.0 21-22|0.0.0.0.2.0 18-19|0.0.0.0.2 15-16|0.0.0.0 13-14|0.0.0.0.1 11-12|0.0.1 10-11|0.0.1.0 9-10|0.0 8-9|0.0.0 7-8|0.0.0.1 6-7|0 0-1|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:14.651
# ::node	0	receive-01	6-7
# ::node	0.0	and	9-10
# ::node	0.0.0	head-01	8-9
# ::node	0.0.0.0	involve-01	15-16
# ::node	0.0.0.0.0	motorcycle	0-1
# ::node	0.0.0.0.1	he	13-14
# ::node	0.0.0.0.2	accident	18-19
# ::node	0.0.0.0.2.0	car	21-22
# ::node	0.0.0.0.3	near	25-26
# ::node	0.0.0.0.3.0	afternoon	24-25
# ::node	0.0.0.0.3.0.0	saturday	23-24
# ::node	0.0.0.1	slight	7-8
# ::node	0.0.1	injure-01	11-12
# ::node	0.0.1.0	shoulder	10-11
# ::root	0	receive-01
# ::edge	afternoon	mod	saturday	0.0.0.0.3.0	0.0.0.0.3.0.0	
# ::edge	and	op1	head-01	0.0	0.0.0	
# ::edge	and	op2	injure-01	0.0	0.0.1	
# ::edge	car	part	accident	0.0.0.0.2.0	0.0.0.0.2	
# ::edge	head-01	condition	involve-01	0.0.0	0.0.0.0	
# ::edge	head-01	mod	slight	0.0.0	0.0.0.1	
# ::edge	injure-01	ARG1	shoulder	0.0.1	0.0.1.0	
# ::edge	involve-01	ARG0	motorcycle	0.0.0.0	0.0.0.0.0	
# ::edge	involve-01	ARG1	he	0.0.0.0	0.0.0.0.1	
# ::edge	involve-01	ARG2	accident	0.0.0.0	0.0.0.0.2	
# ::edge	involve-01	location	near	0.0.0.0	0.0.0.0.3	
# ::edge	near	quant	afternoon	0.0.0.0.3	0.0.0.0.3.0	
# ::edge	receive-01	ARG1	and	0	0.0	
(r / receive-01 
      :ARG1 (a3 / and 
            :op1 (h2 / head-01 
                  :condition (i / involve-01 
                        :ARG0 (m / motorcycle) 
                        :ARG1 (h / he) 
                        :ARG2 (a2 / accident 
                              :part-of (c / car)) 
                        :location (n / near 
                              :quant (a / afternoon 
                                    :mod (s / saturday)))) 
                  :mod (s3 / slight)) 
            :op2 (i2 / injure-01 
                  :ARG1 (s2 / shoulder))))

# ::snt an off duty police officer broke his collar bone in a road accident near banbury at the weekend
# ::tok an off duty police officer broke his collar bone in a road accident near banbury at the weekend
# ::alignments 17-18|0.2 13-14|0.0.1 12-13|0.0 11-12|0.0.0 8-9|0 4-5|0.1 3-4|0.1.0 2-3|0.1.0.0 1-2|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:14.684
# ::node	0	bone	8-9
# ::node	0.0	accident	12-13
# ::node	0.0.0	road	11-12
# ::node	0.0.1	near	13-14
# ::node	0.1	officer	4-5
# ::node	0.1.0	police	3-4
# ::node	0.1.0.0	duty	2-3
# ::node	0.1.1	off	1-2
# ::node	0.2	weekend	17-18
# ::root	0	bone
# ::edge	accident	location	near	0.0	0.0.1	
# ::edge	accident	location	road	0.0	0.0.0	
# ::edge	bone	location	accident	0	0.0	
# ::edge	bone	poss	officer	0	0.1	
# ::edge	bone	time	weekend	0	0.2	
# ::edge	officer	mod	off	0.1	0.1.1	
# ::edge	officer	mod	police	0.1	0.1.0	
# ::edge	police	mod	duty	0.1.0	0.1.0.0	
(b / bone 
      :location (a / accident 
            :location (r / road) 
            :location (n / near)) 
      :poss (o / officer 
            :mod (p / police 
                  :mod (d / duty)) 
            :mod (o2 / off)) 
      :time (w / weekend))

# ::snt up to 40000 payable to your estate if you should die  following an accident, plus up to 80 payable for every day you are in hospital  due to an accident for any length of time from one day up to  100 days
# ::tok up to 40000 payable to your estate if you should die following an accident , plus up to 80 payable for every day you are in hospital due to an accident for any length of time from one day up to 100 days
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:14.685
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt naturally we very much hope that you will never be seriously  injured in an accident but sadly every year serious accidents  do happen to over half a million people in britain
# ::tok naturally we very much hope that you will never be seriously injured in an accident but sadly every year serious accidents do happen to over half a million people in britain
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:14.686
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt several members gave their own hints on avoiding accidents in the home which provoked some hilarity as well as being useful
# ::tok several members gave their own hints on avoiding accidents in the home which provoked some hilarity as well as being useful
# ::alignments 20-21|0.0.2.0.0 17-18|0.0.1 15-16|0 14-15|0.1 13-14|0.0 11-12|0.0.0 8-9|0.0.2.0 7-8|0.0.2 5-6|0.0.2.1 1-2|0.0.2.1.0+0.0.2.1.0.0 0-1|0.0.2.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:14.789
# ::node	0	hilarity	15-16
# ::node	0.0	provoke-01	13-14
# ::node	0.0.0	home	11-12
# ::node	0.0.1	well	17-18
# ::node	0.0.2	avoid-01	7-8
# ::node	0.0.2.0	accident	8-9
# ::node	0.0.2.0.0	useful	20-21
# ::node	0.0.2.1	hint-01	5-6
# ::node	0.0.2.1.0	member	1-2
# ::node	0.0.2.1.0.0	have-org-role-91	1-2
# ::node	0.0.2.1.0.0.0	several	0-1
# ::node	0.1	some	14-15
# ::root	0	hilarity
# ::edge	avoid-01	ARG1	accident	0.0.2	0.0.2.0	
# ::edge	avoid-01	manner	provoke-01	0.0.2	0.0	
# ::edge	have-org-role-91	ARG2	member	0.0.2.1.0.0	0.0.2.1.0	
# ::edge	have-org-role-91	quant	several	0.0.2.1.0.0	0.0.2.1.0.0.0	
# ::edge	hilarity	quant	some	0	0.1	
# ::edge	hint-01	ARG0	member	0.0.2.1	0.0.2.1.0	
# ::edge	hint-01	ARG1	avoid-01	0.0.2.1	0.0.2	
# ::edge	provoke-01	ARG0	home	0.0	0.0.0	
# ::edge	provoke-01	ARG1	hilarity	0.0	0	
# ::edge	provoke-01	location	well	0.0	0.0.1	
# ::edge	useful	domain	accident	0.0.2.0.0	0.0.2.0	
(h / hilarity 
      :ARG1-of (p / provoke-01 
            :ARG0 (h2 / home) 
            :location (w / well) 
            :manner-of (a2 / avoid-01 
                  :ARG1 (a / accident 
                        :domain-of (u / useful)) 
                  :ARG1-of (h3 / hint-01 
                        :ARG0 (m / member 
                              :ARG2-of (h4 / have-org-role-91 
                                    :quant (s2 / several)))))) 
      :quant (s / some))

# ::snt jimmy knapp general secretary of the nur said that railway travel was still the safest more people are killed on the roads in a day than are killed in train accidents in a year but we are worried about the longterm trend
# ::tok jimmy knapp general secretary of the nur said that railway travel was still the safest more people are killed on the roads in a day than are killed in train accidents in a year but we are worried about the longterm trend
# ::alignments 41-42|0.1.1.1 37-38|0.1.1 35-36|0.1.1.0 34-35|0.1 33-34|0.1.1.1.0 30-31|0.1.2.0 29-30|0.1.2.0.0 27-28|0.1.2 24-25|0.1.2.1 21-22|0.1.0.1 18-19|0.1.0 12-13|0.1.0.0 10-11|0.2 9-10|0.3 7-8|0 3-4|0.0 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:15.225
# ::node	0	say-01	7-8
# ::node	0.0	secretary	3-4
# ::node	0.0.0	general	2-3
# ::node	0.1	contrast-01	34-35
# ::node	0.1.0	kill-01	18-19
# ::node	0.1.0.0	still	12-13
# ::node	0.1.0.1	road	21-22
# ::node	0.1.1	worry-02	37-38
# ::node	0.1.1.0	we	35-36
# ::node	0.1.1.1	trend-01	41-42
# ::node	0.1.1.1.0	year	33-34
# ::node	0.1.2	kill-01	27-28
# ::node	0.1.2.0	accident	30-31
# ::node	0.1.2.0.0	train	29-30
# ::node	0.1.2.1	day	24-25
# ::node	0.2	travel-01	10-11
# ::node	0.3	railway	9-10
# ::root	0	say-01
# ::edge	accident	mod	train	0.1.2.0	0.1.2.0.0	
# ::edge	contrast-01	ARG1	kill-01	0.1	0.1.0	
# ::edge	contrast-01	ARG2	worry-02	0.1	0.1.1	
# ::edge	contrast-01	condition	kill-01	0.1	0.1.2	
# ::edge	kill-01	ARG0	accident	0.1.2	0.1.2.0	
# ::edge	kill-01	ARG0	still	0.1.0	0.1.0.0	
# ::edge	kill-01	ARG1	day	0.1.2	0.1.2.1	
# ::edge	kill-01	ARG1	road	0.1.0	0.1.0.1	
# ::edge	say-01	ARG0	secretary	0	0.0	
# ::edge	say-01	ARG1	contrast-01	0	0.1	
# ::edge	say-01	ARG2	railway	0	0.3	
# ::edge	secretary	mod	general	0.0	0.0.0	
# ::edge	travel-01	ARG1	say-01	0.2	0	
# ::edge	trend-01	mod	year	0.1.1.1	0.1.1.1.0	
# ::edge	worry-02	ARG1	we	0.1.1	0.1.1.0	
# ::edge	worry-02	ARG2	trend-01	0.1.1	0.1.1.1	
(s2 / say-01 
      :ARG0 (s3 / secretary 
            :mod (g / general)) 
      :ARG1 (c / contrast-01 
            :ARG1 (k2 / kill-01 
                  :ARG0 (s / still) 
                  :ARG1 (r / road)) 
            :ARG2 (w / worry-02 
                  :ARG1 (w2 / we) 
                  :ARG2 (t / trend-01 
                        :mod (y / year))) 
            :condition (k / kill-01 
                  :ARG0 (a / accident 
                        :mod (t2 / train)) 
                  :ARG1 (d / day))) 
      :ARG1-of (t3 / travel-01) 
      :ARG2 (r2 / railway))

# ::snt the air accidents branch report published yesterday said a 6ft section of the rudder came away after the metal skin delaminated or peeled away allowing moisture to corrode the rudders honeycomb structure
# ::tok the air accidents branch report published yesterday said a 6ft section of the rudder came away after the metal skin delaminated or peeled away allowing moisture to corrode the rudders honeycomb structure
# ::alignments 31-32|0.1.0.0.0.0.0 25-26|0.1.0.0.0.0 24-25|0.1.0.0.0 23-24|0.1.0.0.0.1 21-22|0.1.0.0.0.2 19-20|0.1.0.0.0.2.0 18-19|0.1.0.0.0.2.0.0 16-17|0.1.0.0.0.2.0.1 15-16|0.1.0.0.0.2.0.1.0 10-11|0.0 7-8|0 6-7|0.1.2 5-6|0.1 4-5|0.1.0 3-4|0.1.0.0 2-3|0.1.1 1-2|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:15.817
# ::node	0	say-01	7-8
# ::node	0.0	section	10-11
# ::node	0.1	publish-01	5-6
# ::node	0.1.0	report	4-5
# ::node	0.1.0.0	branch	3-4
# ::node	0.1.0.0.0	allow-01	24-25
# ::node	0.1.0.0.0.0	moisture	25-26
# ::node	0.1.0.0.0.0.0	structure	31-32
# ::node	0.1.0.0.0.1	away	23-24
# ::node	0.1.0.0.0.2	or	21-22
# ::node	0.1.0.0.0.2.0	skin	19-20
# ::node	0.1.0.0.0.2.0.0	metal	18-19
# ::node	0.1.0.0.0.2.0.1	after	16-17
# ::node	0.1.0.0.0.2.0.1.0	away	15-16
# ::node	0.1.1	accident	2-3
# ::node	0.1.1.0	air	1-2
# ::node	0.1.2	yesterday	6-7
# ::root	0	say-01
# ::edge	accident	mod	air	0.1.1	0.1.1.0	
# ::edge	after	op1	skin	0.1.0.0.0.2.0.1	0.1.0.0.0.2.0	
# ::edge	allow-01	ARG0	branch	0.1.0.0.0	0.1.0.0	
# ::edge	allow-01	ARG1	moisture	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	allow-01	degree	away	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	away	mod	after	0.1.0.0.0.2.0.1.0	0.1.0.0.0.2.0.1	
# ::edge	metal	consist	skin	0.1.0.0.0.2.0.0	0.1.0.0.0.2.0	
# ::edge	or	op1	allow-01	0.1.0.0.0.2	0.1.0.0.0	
# ::edge	publish-01	ARG0	report	0.1	0.1.0	
# ::edge	publish-01	ARG1	accident	0.1	0.1.1	
# ::edge	publish-01	time	yesterday	0.1	0.1.2	
# ::edge	report	mod	branch	0.1.0	0.1.0.0	
# ::edge	say-01	ARG0	section	0	0.0	
# ::edge	say-01	ARG1	publish-01	0	0.1	
# ::edge	skin	purpose	or	0.1.0.0.0.2.0	0.1.0.0.0.2	
# ::edge	structure	poss	moisture	0.1.0.0.0.0.0	0.1.0.0.0.0	
(s4 / say-01 
      :ARG0 (s3 / section) 
      :ARG1 (p / publish-01 
            :ARG0 (r / report 
                  :mod (b / branch 
                        :ARG0-of (a / allow-01 
                              :ARG1 (m / moisture 
                                    :poss-of (s / structure)) 
                              :degree (a2 / away) 
                              :op-of (o / or 
                                    :purpose-of (s2 / skin 
                                          :consist-of (m2 / metal) 
                                          :op-of (a3 / after 
                                                :mod-of (a4 / away))))))) 
            :ARG1 (a5 / accident 
                  :mod (a6 / air)) 
            :time (y / yesterday)))

# ::snt cut in police pay which had been left out by accident in september 1931
# ::tok cut in police pay which had been left out by accident in september 1931
# ::alignments 12-14|0.1.1+0.1.0+0.1 10-11|0.2 3-4|0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:15.842
# ::node	0	pay-01	3-4
# ::node	0.0	police	2-3
# ::node	0.1	date-entity	12-14
# ::node	0.1.0	9	12-14
# ::node	0.1.1	1931	12-14
# ::node	0.2	accident	10-11
# ::root	0	pay-01
# ::edge	accident	topic	pay-01	0.2	0	
# ::edge	date-entity	month	9	0.1	0.1.0	
# ::edge	date-entity	year	1931	0.1	0.1.1	
# ::edge	pay-01	ARG1	police	0	0.0	
# ::edge	pay-01	time	date-entity	0	0.1	
(p / pay-01 
      :ARG1 (p2 / police) 
      :time (d / date-entity 
            :month 9 
            :year 1931) 
      :topic-of (a / accident))

# ::snt on saturday more than 15000 demonstrators ignored an official ban and rain to march through minsk demanding local authorities do more to clean up the chernobyl accident
# ::tok on saturday more than 15000 demonstrators ignored an official ban and rain to march through minsk demanding local authorities do more to clean up the chernobyl accident
# ::alignments 26-27|0.0.2 22-23|0.0.1 18-19|0.0.0.0.0.0 17-18|0.0.0.0.0.0.1 16-17|0.0.0.0.0.0.0 13-14|0.0.0.2.1+0.0.0.2 11-12|0.0.0.2.0 10-11|0.0.0.0.0 9-10|0.0.0.0 8-9|0.0.0.2.0.0.0+0.0.0.2.0.0 6-7|0.0.0 5-6|0+0.0 4-5|0.0.3 1-2|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:16.489
# ::node	0	demonstrate-01	5-6
# ::node	0.0	person	5-6
# ::node	0.0.0	ignore-01	6-7
# ::node	0.0.0.0	ban-01	9-10
# ::node	0.0.0.0.0	and	10-11
# ::node	0.0.0.0.0.0	authority	18-19
# ::node	0.0.0.0.0.0.0	demand-01	16-17
# ::node	0.0.0.0.0.0.1	local	17-18
# ::node	0.0.0.1	saturday	1-2
# ::node	0.0.0.2	date-entity	13-14
# ::node	0.0.0.2.0	rain-01	11-12
# ::node	0.0.0.2.0.0	have-org-role-91	8-9
# ::node	0.0.0.2.0.0.0	official	8-9
# ::node	0.0.0.2.1	3	13-14
# ::node	0.0.1	clean	22-23
# ::node	0.0.2	accident	26-27
# ::node	0.0.3	15000	4-5
# ::root	0	demonstrate-01
# ::edge	accident	poss	person	0.0.2	0.0	
# ::edge	and	op1	ban-01	0.0.0.0.0	0.0.0.0	
# ::edge	authority	mod	local	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	authority	poss	and	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	clean	name	person	0.0.1	0.0	
# ::edge	date-entity	month	3	0.0.0.2	0.0.0.2.1	
# ::edge	demand-01	ARG1	authority	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	demonstrate-01	ARG0	person	0	0.0	
# ::edge	have-org-role-91	ARG1	rain-01	0.0.0.2.0.0	0.0.0.2.0	
# ::edge	have-org-role-91	ARG2	official	0.0.0.2.0.0	0.0.0.2.0.0.0	
# ::edge	ignore-01	ARG0	person	0.0.0	0.0	
# ::edge	ignore-01	ARG1	ban-01	0.0.0	0.0.0.0	
# ::edge	ignore-01	location	saturday	0.0.0	0.0.0.1	
# ::edge	ignore-01	purpose	date-entity	0.0.0	0.0.0.2	
# ::edge	person	quant	15000	0.0	0.0.3	
# ::edge	rain-01	ARG1	date-entity	0.0.0.2.0	0.0.0.2	
(d3 / demonstrate-01 
      :ARG0 (p / person 
            :ARG0-of (i / ignore-01 
                  :ARG1 (b / ban-01 
                        :op-of (a3 / and 
                              :poss-of (a2 / authority 
                                    :ARG1-of (d / demand-01) 
                                    :mod (l / local)))) 
                  :location (s / saturday) 
                  :purpose (d2 / date-entity 
                        :ARG1-of (r / rain-01 
                              :ARG1-of (h / have-org-role-91 
                                    :ARG2 (o / official))) 
                        :month 3)) 
            :name-of (c / clean) 
            :poss-of (a / accident) 
            :quant 15000))

# ::snt or even to ban them completely and to test the blood alcohol level of anyone involved in an accident the royal college of surgeons said yesterday writes nicholas timmins, the moves are needed to cut the epidemic of deaths and injuries from preventable accidents the college said
# ::tok or even to ban them completely and to test the blood alcohol level of anyone involved in an accident the royal college of surgeons said yesterday writes nicholas timmins , the moves are needed to cut the epidemic of deaths and injuries from preventable accidents the college said
# ::alignments 47-48|0 46-47|0.0 44-45|0.1.2.0 41-42|0.1.1 40-41|0.1 37-38|0.1.2 33-34|0.1.0.1 31-32|0.1.0 26-27|0.1.0.0 25-26|0.1.0.0.2.1 24-25|0.1.0.0.2 23-24|0.1.0.0.0 21-22|0.1.0.0.2.0 20-21|0.1.1.0 18-19|0.1.0.0.1.0.1 15-16|0.1.0.0.1.0 14-15|0.1.0.0.1.0.0 12-13|0.1.0.0.1 11-12|0.1.0.0.1.1 10-11|0.1.0.0.3.1.0 8-9|0.1.0.0.3.1 6-7|0.1.0.0.3 5-6|0.1.0.0.3.0.1 3-4|0.1.0.0.3.0 0-1|0.1.0.0.3.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:17.455
# ::node	0	say-01	47-48
# ::node	0.0	college	46-47
# ::node	0.1	and	40-41
# ::node	0.1.0	move-02	31-32
# ::node	0.1.0.0	write-01	26-27
# ::node	0.1.0.0.0	surgeon	23-24
# ::node	0.1.0.0.1	level	12-13
# ::node	0.1.0.0.1.0	involve-01	15-16
# ::node	0.1.0.0.1.0.0	anyone	14-15
# ::node	0.1.0.0.1.0.1	accident	18-19
# ::node	0.1.0.0.1.1	alcohol	11-12
# ::node	0.1.0.0.2	say-01	24-25
# ::node	0.1.0.0.2.0	college	21-22
# ::node	0.1.0.0.2.1	yesterday	25-26
# ::node	0.1.0.0.3	and	6-7
# ::node	0.1.0.0.3.0	ban-01	3-4
# ::node	0.1.0.0.3.0.0	or	0-1
# ::node	0.1.0.0.3.0.1	complete	5-6
# ::node	0.1.0.0.3.1	test-01	8-9
# ::node	0.1.0.0.3.1.0	blood	10-11
# ::node	0.1.0.1	need-01	33-34
# ::node	0.1.1	injure-01	41-42
# ::node	0.1.1.0	royal	20-21
# ::node	0.1.2	epidemic	37-38
# ::node	0.1.2.0	accident	44-45
# ::root	0	say-01
# ::edge	and	op1	move-02	0.1	0.1.0	
# ::edge	and	op1	test-01	0.1.0.0.3	0.1.0.0.3.1	
# ::edge	and	op2	injure-01	0.1	0.1.1	
# ::edge	and	op2	write-01	0.1.0.0.3	0.1.0.0	
# ::edge	ban-01	ARG1	or	0.1.0.0.3.0	0.1.0.0.3.0.0	
# ::edge	ban-01	ARG2	and	0.1.0.0.3.0	0.1.0.0.3	
# ::edge	ban-01	manner	complete	0.1.0.0.3.0	0.1.0.0.3.0.1	
# ::edge	epidemic	location	accident	0.1.2	0.1.2.0	
# ::edge	epidemic	poss	and	0.1.2	0.1	
# ::edge	injure-01	ARG1	royal	0.1.1	0.1.1.0	
# ::edge	involve-01	ARG0	level	0.1.0.0.1.0	0.1.0.0.1	
# ::edge	involve-01	ARG1	anyone	0.1.0.0.1.0	0.1.0.0.1.0.0	
# ::edge	involve-01	ARG2	accident	0.1.0.0.1.0	0.1.0.0.1.0.1	
# ::edge	level	mod	alcohol	0.1.0.0.1	0.1.0.0.1.1	
# ::edge	move-02	ARG1	write-01	0.1.0	0.1.0.0	
# ::edge	need-01	ARG1	move-02	0.1.0.1	0.1.0	
# ::edge	say-01	ARG0	college	0	0.0	
# ::edge	say-01	ARG0	college	0.1.0.0.2	0.1.0.0.2.0	
# ::edge	say-01	ARG1	and	0	0.1	
# ::edge	say-01	ARG1	write-01	0.1.0.0.2	0.1.0.0	
# ::edge	say-01	time	yesterday	0.1.0.0.2	0.1.0.0.2.1	
# ::edge	test-01	ARG1	blood	0.1.0.0.3.1	0.1.0.0.3.1.0	
# ::edge	write-01	ARG0	surgeon	0.1.0.0	0.1.0.0.0	
# ::edge	write-01	ARG1	level	0.1.0.0	0.1.0.0.1	
(s / say-01 
      :ARG0 (c / college) 
      :ARG1 (a2 / and 
            :op1 (m / move-02 
                  :ARG1 (w / write-01 
                        :ARG0 (s3 / surgeon) 
                        :ARG1 (l / level 
                              :ARG0-of (i2 / involve-01 
                                    :ARG1 (a4 / anyone) 
                                    :ARG2 (a3 / accident)) 
                              :mod (a5 / alcohol)) 
                        :ARG1-of (s2 / say-01 
                              :ARG0 (c2 / college) 
                              :time (y / yesterday)) 
                        :op-of (a6 / and 
                              :ARG2-of (b2 / ban-01 
                                    :ARG1 (o / or) 
                                    :manner (c3 / complete)) 
                              :op1 (t / test-01 
                                    :ARG1 (b / blood)))) 
                  :ARG1-of (n / need-01)) 
            :op2 (i / injure-01 
                  :ARG1 (r / royal)) 
            :poss-of (e / epidemic 
                  :location (a / accident))))

# ::snt she returned to work three months after the accident
# ::tok she returned to work three months after the accident
# ::alignments 8-9|0.1.0 6-7|0.1 5-6|0.1.1.1+0.1.1 4-5|0.1.1.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:17.481
# ::node	0	return-01	1-2
# ::node	0.0	she	0-1
# ::node	0.1	after	6-7
# ::node	0.1.0	accident	8-9
# ::node	0.1.1	temporal-quantity	5-6
# ::node	0.1.1.0	3	4-5
# ::node	0.1.1.1	month	5-6
# ::root	0	return-01
# ::edge	after	op1	accident	0.1	0.1.0	
# ::edge	after	quant	temporal-quantity	0.1	0.1.1	
# ::edge	return-01	ARG0	she	0	0.0	
# ::edge	return-01	time	after	0	0.1	
# ::edge	temporal-quantity	quant	3	0.1.1	0.1.1.0	
# ::edge	temporal-quantity	unit	month	0.1.1	0.1.1.1	
(r / return-01 
      :ARG0 (s / she) 
      :time (a2 / after 
            :op1 (a / accident) 
            :quant (t / temporal-quantity 
                  :quant 3 
                  :unit (m / month))))

# ::snt she suffered another accident which kept her off work for eight weeks with torn ligaments in her back and damage to nerves at the base of her spine mr wilson said, thirteen days later the branch manager informed the council of the accident by phone, but a report of the accident in written form should have been sent to the council at least six days earlier
# ::tok she suffered another accident which kept her off work for eight weeks with torn ligaments in her back and damage to nerves at the base of her spine mr wilson said , thirteen days later the branch manager informed the council of the accident by phone , but a report of the accident in written form should have been sent to the council at least six days earlier
# ::alignments 67-68|0.2.1.2.0 66-67|0.2.1.4+0.2.1.4.0 65-66|0.2.1.4.0.0 62-63|0.2.1.3 59-60|0.2.1 56-57|0.2.1.2 55-56|0.2.1.1.0.0.0 54-55|0.2.1.1.0.0 52-53|0.2.1.1.0 49-50|0.2.1.1 47-48|0.2 45-46|0.2.0.3 43-44|0.2.0.2 40-41|0.2.0.1 38-39|0.2.0 37-38|0.2.0.0 36-37|0.2.0.0.0 34-35|0.2.0.4 33-34|0.2.0.4.1.0+0.2.0.4.1 30-31|0 27-28|0.2.1.0.0.0 24-25|0.1.1.1 19-20|0.1.1 18-19|0.1 17-18|0.1.0 13-14|0.2.0.4.0 11-12|0.0.0.0+0.0.0 10-11|0.0 7-8|0.1.1.0 5-6|0.2.1.0.0 3-4|0.2.1.0 2-3|0.2.1.0.2 1-2|0.2.1.0.1 0-1|0.2.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:19.741
# ::node	0	say-01	30-31
# ::node	0.0	8	10-11
# ::node	0.0.0	temporal-quantity	11-12
# ::node	0.0.0.0	week	11-12
# ::node	0.1	and	18-19
# ::node	0.1.0	back	17-18
# ::node	0.1.1	damage-01	19-20
# ::node	0.1.1.0	off	7-8
# ::node	0.1.1.1	base	24-25
# ::node	0.2	contrast-01	47-48
# ::node	0.2.0	inform-01	38-39
# ::node	0.2.0.0	manage-01	37-38
# ::node	0.2.0.0.0	branch	36-37
# ::node	0.2.0.1	council	40-41
# ::node	0.2.0.2	accident	43-44
# ::node	0.2.0.3	phone	45-46
# ::node	0.2.0.4	late	34-35
# ::node	0.2.0.4.0	tear-01	13-14
# ::node	0.2.0.4.1	temporal-quantity	33-34
# ::node	0.2.0.4.1.0	day	33-34
# ::node	0.2.1	send-01	59-60
# ::node	0.2.1.0	accident	3-4
# ::node	0.2.1.0.0	keep-01	5-6
# ::node	0.2.1.0.0.0	spine	27-28
# ::node	0.2.1.0.1	suffer-01	1-2
# ::node	0.2.1.0.1.0	she	0-1
# ::node	0.2.1.0.2	another	2-3
# ::node	0.2.1.1	report	49-50
# ::node	0.2.1.1.0	accident	52-53
# ::node	0.2.1.1.0.0	write-01	54-55
# ::node	0.2.1.1.0.0.0	form	55-56
# ::node	0.2.1.2	recommend-01	56-57
# ::node	0.2.1.2.0	early	67-68
# ::node	0.2.1.3	council	62-63
# ::node	0.2.1.4	day	66-67
# ::node	0.2.1.4.0	temporal-quantity	66-67
# ::node	0.2.1.4.0.0	6	65-66
# ::root	0	say-01
# ::edge	accident	mod	another	0.2.1.0	0.2.1.0.2	
# ::edge	and	op1	back	0.1	0.1.0	
# ::edge	and	op2	damage-01	0.1	0.1.1	
# ::edge	contrast-01	ARG0	inform-01	0.2	0.2.0	
# ::edge	contrast-01	ARG1	say-01	0.2	0	
# ::edge	contrast-01	ARG2	send-01	0.2	0.2.1	
# ::edge	damage-01	ARG1	off	0.1.1	0.1.1.0	
# ::edge	damage-01	location	base	0.1.1	0.1.1.1	
# ::edge	inform-01	ARG0	manage-01	0.2.0	0.2.0.0	
# ::edge	inform-01	ARG1	council	0.2.0	0.2.0.1	
# ::edge	inform-01	ARG2	accident	0.2.0	0.2.0.2	
# ::edge	inform-01	medium	phone	0.2.0	0.2.0.3	
# ::edge	inform-01	time	late	0.2.0	0.2.0.4	
# ::edge	keep-01	ARG0	accident	0.2.1.0.0	0.2.1.0	
# ::edge	keep-01	ARG1	spine	0.2.1.0.0	0.2.1.0.0.0	
# ::edge	late	op1	temporal-quantity	0.2.0.4	0.2.0.4.1	
# ::edge	manage-01	ARG1	branch	0.2.0.0	0.2.0.0.0	
# ::edge	recommend-01	ARG0	early	0.2.1.2	0.2.1.2.0	
# ::edge	recommend-01	ARG1	send-01	0.2.1.2	0.2.1	
# ::edge	report	topic	accident	0.2.1.1	0.2.1.1.0	
# ::edge	say-01	ARG0	8	0	0.0	
# ::edge	say-01	ARG1	and	0	0.1	
# ::edge	send-01	ARG0	accident	0.2.1	0.2.1.0	
# ::edge	send-01	ARG1	report	0.2.1	0.2.1.1	
# ::edge	send-01	ARG2	council	0.2.1	0.2.1.3	
# ::edge	send-01	time	day	0.2.1	0.2.1.4	
# ::edge	suffer-01	ARG0	she	0.2.1.0.1	0.2.1.0.1.0	
# ::edge	suffer-01	ARG1	accident	0.2.1.0.1	0.2.1.0	
# ::edge	tear-01	ARG1	late	0.2.0.4.0	0.2.0.4	
# ::edge	temporal-quantity	quant	6	0.2.1.4.0	0.2.1.4.0.0	
# ::edge	temporal-quantity	quant	8	0.0.0	0.0	
# ::edge	temporal-quantity	unit	day	0.2.0.4.1	0.2.0.4.1.0	
# ::edge	temporal-quantity	unit	day	0.2.1.4.0	0.2.1.4	
# ::edge	temporal-quantity	unit	week	0.0.0	0.0.0.0	
# ::edge	write-01	ARG0	accident	0.2.1.1.0.0	0.2.1.1.0	
# ::edge	write-01	ARG1	form	0.2.1.1.0.0	0.2.1.1.0.0.0	
(s2 / say-01 
      :ARG0 (8 / 8 
            :quant-of (t4 / temporal-quantity 
                  :unit (w2 / week))) 
      :ARG1 (a3 / and 
            :op1 (b3 / back) 
            :op2 (d3 / damage-01 
                  :ARG1 (o / off) 
                  :location (b2 / base))) 
      :ARG1-of (c2 / contrast-01 
            :ARG0 (i / inform-01 
                  :ARG0 (m / manage-01 
                        :ARG1 (b / branch)) 
                  :ARG1 (c3 / council) 
                  :ARG2 (a2 / accident) 
                  :medium (p / phone) 
                  :time (l / late 
                        :ARG1-of (t3 / tear-01) 
                        :op1 (t2 / temporal-quantity 
                              :unit (d2 / day)))) 
            :ARG2 (s / send-01 
                  :ARG0 (a4 / accident 
                        :ARG0-of (k / keep-01 
                              :ARG1 (s3 / spine)) 
                        :ARG1-of (s4 / suffer-01 
                              :ARG0 (s5 / she)) 
                        :mod (a5 / another)) 
                  :ARG1 (r2 / report 
                        :topic (a / accident 
                              :ARG0-of (w / write-01 
                                    :ARG1 (f / form)))) 
                  :ARG1-of (r / recommend-01 
                        :ARG0 (e / early)) 
                  :ARG2 (c / council) 
                  :time (d / day 
                        :unit-of (t / temporal-quantity 
                              :quant 6)))))

# ::snt derek warwick is recovering in hospital from injuries sustained in a karting accident and is unlikely to take part in the french grand prix on sunday
# ::tok derek warwick is recovering in hospital from injuries sustained in a karting accident and is unlikely to take part in the french grand prix on sunday
# ::alignments 25-26|0.0.2 22-23|0.0.0.0 21-22|0.0.0.1.0.0.0+0.0.0.1.0.0+0.0.0.1.0 15-16|0.1.0+0.1 13-14|0 12-13|0.0.0.2 8-9|0.0.0 7-8|0.0.0.1 5-6|0.0.1 3-4|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:19.978
# ::node	0	and	13-14
# ::node	0.0	recover-01	3-4
# ::node	0.0.0	sustain-01	8-9
# ::node	0.0.0.0	grand	22-23
# ::node	0.0.0.1	injure-01	7-8
# ::node	0.0.0.1.0	country	21-22
# ::node	0.0.0.1.0.0	name	21-22
# ::node	0.0.0.1.0.0.0	"France"	21-22
# ::node	0.0.0.2	accident	12-13
# ::node	0.0.1	hospital	5-6
# ::node	0.0.2	sunday	25-26
# ::node	0.1	likely	15-16
# ::node	0.1.0	-	15-16
# ::root	0	and
# ::edge	and	op1	likely	0	0.1	
# ::edge	country	name	name	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	injure-01	ARG0	country	0.0.0.1	0.0.0.1.0	
# ::edge	likely	polarity	-	0.1	0.1.0	
# ::edge	name	op1	"France"	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	recover-01	ARG0	and	0.0	0	
# ::edge	recover-01	ARG1	sustain-01	0.0	0.0.0	
# ::edge	recover-01	location	hospital	0.0	0.0.1	
# ::edge	sunday	op1	recover-01	0.0.2	0.0	
# ::edge	sustain-01	ARG0	grand	0.0.0	0.0.0.0	
# ::edge	sustain-01	ARG1	injure-01	0.0.0	0.0.0.1	
# ::edge	sustain-01	location	accident	0.0.0	0.0.0.2	
(a / and 
      :ARG0-of (r / recover-01 
            :ARG1 (s2 / sustain-01 
                  :ARG0 (g / grand) 
                  :ARG1 (i / injure-01 
                        :ARG0 (c / country 
                              :name (n / name 
                                    :op1 "France"))) 
                  :location (a2 / accident)) 
            :location (h / hospital) 
            :op-of (s / sunday)) 
      :op1 (l / likely 
            :polarity -))

# ::snt an ambulance from thame attended the accident which happened about half a mile north of the horspath driftway roundabout but mrs ray of wensym crescent bicester was certified dead at the scene
# ::tok an ambulance from thame attended the accident which happened about half a mile north of the horspath driftway roundabout but mrs ray of wensym crescent bicester was certified dead at the scene
# ::alignments 31-32|0.2 27-28|0.1 24-25|0.0 19-20|0 13-14|0.1.0 12-13|0.1.1.1.2.0+0.1.1.1.2 10-11|0.1.1.1.1 8-9|0.1.1.1 6-7|0.1.1.1.0 4-5|0.1.1 1-2|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:20.111
# ::node	0	contrast-01	19-20
# ::node	0.0	crescent	24-25
# ::node	0.1	certify-01	27-28
# ::node	0.1.0	north	13-14
# ::node	0.1.1	attend-01	4-5
# ::node	0.1.1.0	ambulance	1-2
# ::node	0.1.1.1	happen-01	8-9
# ::node	0.1.1.1.0	accident	6-7
# ::node	0.1.1.1.1	half	10-11
# ::node	0.1.1.1.2	distance-quantity	12-13
# ::node	0.1.1.1.2.0	mile	12-13
# ::node	0.2	scene	31-32
# ::root	0	contrast-01
# ::edge	attend-01	ARG0	ambulance	0.1.1	0.1.1.0	
# ::edge	attend-01	ARG1	certify-01	0.1.1	0.1	
# ::edge	certify-01	ARG0	north	0.1	0.1.0	
# ::edge	certify-01	ARG1	contrast-01	0.1	0	
# ::edge	contrast-01	ARG1	crescent	0	0.0	
# ::edge	distance-quantity	unit	mile	0.1.1.1.2	0.1.1.1.2.0	
# ::edge	happen-01	ARG0	accident	0.1.1.1	0.1.1.1.0	
# ::edge	happen-01	ARG1	half	0.1.1.1	0.1.1.1.1	
# ::edge	happen-01	ARG2	attend-01	0.1.1.1	0.1.1	
# ::edge	happen-01	time	distance-quantity	0.1.1.1	0.1.1.1.2	
# ::edge	scene	op1	contrast-01	0.2	0	
(c3 / contrast-01 
      :ARG1 (c2 / crescent) 
      :ARG1-of (c / certify-01 
            :ARG0 (n / north) 
            :ARG1-of (a2 / attend-01 
                  :ARG0 (a3 / ambulance) 
                  :ARG2-of (h2 / happen-01 
                        :ARG0 (a / accident) 
                        :ARG1 (h / half) 
                        :time (d / distance-quantity 
                              :unit (m / mile))))) 
      :op-of (s / scene))

# ::snt the conditions in the southern ocean were atrocious the action furious the accident heartstopping
# ::tok the conditions in the southern ocean were atrocious the action furious the accident heartstopping
# ::alignments 12-13|0.0.0.1 10-11|0 9-10|0.0 5-6|0.0.0.0 4-5|0.0.0.0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:20.130
# ::node	0	furious	10-11
# ::node	0.0	action	9-10
# ::node	0.0.0	condition	1-2
# ::node	0.0.0.0	ocean	5-6
# ::node	0.0.0.0.0	south	4-5
# ::node	0.0.0.1	accident	12-13
# ::root	0	furious
# ::edge	condition	poss	accident	0.0.0	0.0.0.1	
# ::edge	condition	poss	action	0.0.0	0.0	
# ::edge	condition	poss	ocean	0.0.0	0.0.0.0	
# ::edge	furious	mod	action	0	0.0	
# ::edge	ocean	mod	south	0.0.0.0	0.0.0.0.0	
(f / furious 
      :mod (a2 / action 
            :poss-of (c / condition 
                  :poss (o / ocean 
                        :mod (s / south)) 
                  :poss (a / accident))))

# ::snt its feared they may be at risk of suffering the effects of exposure to a toxic chemical involved in an accident between junctions fifteen and sixteen of the motorway earlier today
# ::tok its feared they may be at risk of suffering the effects of exposure to a toxic chemical involved in an accident between junctions fifteen and sixteen of the motorway earlier today
# ::alignments 30-31|0.0.0.0.1.1.0.0.2 29-30|0.0.0.0.0 28-29|0.0.0.0.0.0 24-25|0.0.0.0.1.1.0.0.1 21-22|0.0.0.0.1.1.0.0.1.0 20-21|0.0.0.0.1.1.0.0.0 17-18|0.0.0.0.1.1.0.0 16-17|0.0.0.0.1.1.0 15-16|0.0.0.0.1.0 12-13|0.0.0.0.1.1 10-11|0.0.0.0.1 8-9|0.0.0.0 6-7|0.0.0 3-4|0.1.0+0.1 2-3|0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:20.418
# ::node	0	fear-01	1-2
# ::node	0.0	they	2-3
# ::node	0.0.0	risk-01	6-7
# ::node	0.0.0.0	suffer-01	8-9
# ::node	0.0.0.0.0	early	29-30
# ::node	0.0.0.0.0.0	motorway	28-29
# ::node	0.0.0.0.1	effect-01	10-11
# ::node	0.0.0.0.1.0	toxic	15-16
# ::node	0.0.0.0.1.1	expose-01	12-13
# ::node	0.0.0.0.1.1.0	chemical	16-17
# ::node	0.0.0.0.1.1.0.0	involve-01	17-18
# ::node	0.0.0.0.1.1.0.0.0	accident	20-21
# ::node	0.0.0.0.1.1.0.0.1	and	24-25
# ::node	0.0.0.0.1.1.0.0.1.0	between	21-22
# ::node	0.0.0.0.1.1.0.0.2	today	30-31
# ::node	0.1	date-entity	3-4
# ::node	0.1.0	5	3-4
# ::root	0	fear-01
# ::edge	and	op1	involve-01	0.0.0.0.1.1.0.0.1	0.0.0.0.1.1.0.0	
# ::edge	and	op2	between	0.0.0.0.1.1.0.0.1	0.0.0.0.1.1.0.0.1.0	
# ::edge	date-entity	month	5	0.1	0.1.0	
# ::edge	early	quant	motorway	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	effect-01	ARG0	toxic	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	effect-01	ARG1	expose-01	0.0.0.0.1	0.0.0.0.1.1	
# ::edge	expose-01	ARG1	chemical	0.0.0.0.1.1	0.0.0.0.1.1.0	
# ::edge	fear-01	ARG0	they	0	0.0	
# ::edge	fear-01	ARG1	date-entity	0	0.1	
# ::edge	involve-01	ARG1	chemical	0.0.0.0.1.1.0.0	0.0.0.0.1.1.0	
# ::edge	involve-01	ARG2	accident	0.0.0.0.1.1.0.0	0.0.0.0.1.1.0.0.0	
# ::edge	involve-01	time	today	0.0.0.0.1.1.0.0	0.0.0.0.1.1.0.0.2	
# ::edge	risk-01	ARG0	they	0.0.0	0.0	
# ::edge	risk-01	ARG1	suffer-01	0.0.0	0.0.0.0	
# ::edge	suffer-01	ARG0	early	0.0.0.0	0.0.0.0.0	
# ::edge	suffer-01	ARG1	effect-01	0.0.0.0	0.0.0.0.1	
(f / fear-01 
      :ARG0 (t3 / they 
            :ARG0-of (r / risk-01 
                  :ARG1 (s / suffer-01 
                        :ARG0 (e / early 
                              :quant (m / motorway)) 
                        :ARG1 (e3 / effect-01 
                              :ARG0 (t2 / toxic) 
                              :ARG1 (e2 / expose-01 
                                    :ARG1 (c / chemical 
                                          :ARG1-of (i / involve-01 
                                                :ARG2 (a2 / accident) 
                                                :op-of (a / and 
                                                      :op1 (b / between)) 
                                                :time (t / today)))))))) 
      :ARG1 (d / date-entity 
            :month 5))

# ::snt the police officers leader told a press conference at tuc congress house yesterday the three emergency services are a team we attend accidents and incidents together and we operate as a team
# ::tok the police officers leader told a press conference at tuc congress house yesterday the three emergency services are a team we attend accidents and incidents together and we operate as a team
# ::alignments 31-32|0.0.1 28-29|0.0 27-28|0.0.0 26-27|0.0.2 25-26|0.0.2.2 24-25|0.0.2.1 23-24|0 22-23|0.0.2.0.1 21-22|0.0.2.0 20-21|0.0.2.0.0 19-20|0.0.2.0.3 16-17|0.0.2.0.3.0 15-16|0.0.2.0.3.0.0 14-15|0.0.2.0.3.0.0.0 12-13|0.0.2.0.2.2 11-12|0.0.2.0.2.1.0 10-11|0.0.2.0.2.1.0.0.0.0+0.0.2.0.2.1.0.0.0+0.0.2.0.2.1.0.0 7-8|0.0.2.0.2.1 6-7|0.0.2.0.2.1.1 4-5|0.0.2.0.2 3-4|0.0.2.0.2.0.0+0.0.2.0.2.0 2-3|0.0.2.0.2.0.1.1+0.0.2.0.2.0.1 1-2|0.0.2.0.2.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:21.485
# ::node	0	and	23-24
# ::node	0.0	operate-01	28-29
# ::node	0.0.0	we	27-28
# ::node	0.0.1	team	31-32
# ::node	0.0.2	and	26-27
# ::node	0.0.2.0	attend-01	21-22
# ::node	0.0.2.0.0	we	20-21
# ::node	0.0.2.0.1	accident	22-23
# ::node	0.0.2.0.2	tell-01	4-5
# ::node	0.0.2.0.2.0	person	3-4
# ::node	0.0.2.0.2.0.0	lead-02	3-4
# ::node	0.0.2.0.2.0.1	have-org-role-91	2-3
# ::node	0.0.2.0.2.0.1.0	police	1-2
# ::node	0.0.2.0.2.0.1.1	officer	2-3
# ::node	0.0.2.0.2.1	conference	7-8
# ::node	0.0.2.0.2.1.0	house	11-12
# ::node	0.0.2.0.2.1.0.0	government-organization	10-11
# ::node	0.0.2.0.2.1.0.0.0	name	10-11
# ::node	0.0.2.0.2.1.0.0.0.0	"Congress"	10-11
# ::node	0.0.2.0.2.1.1	press	6-7
# ::node	0.0.2.0.2.2	yesterday	12-13
# ::node	0.0.2.0.3	team	19-20
# ::node	0.0.2.0.3.0	service	16-17
# ::node	0.0.2.0.3.0.0	emergency	15-16
# ::node	0.0.2.0.3.0.0.0	3	14-15
# ::node	0.0.2.1	incident	24-25
# ::node	0.0.2.2	together	25-26
# ::root	0	and
(a2 / and 
      :ARG1-of (o / operate-01 
            :ARG0 (w / we) 
            :ARG2 (t / team) 
            :op-of (a / and 
                  :op1 (a4 / attend-01 
                        :ARG0 (w2 / we) 
                        :ARG1 (a3 / accident) 
                        :ARG1-of (t4 / tell-01 
                              :ARG0 (p2 / person 
                                    :ARG0-of (l / lead-02) 
                                    :ARG0-of (h2 / have-org-role-91 
                                          :ARG1 (p3 / police) 
                                          :ARG2 (o2 / officer))) 
                              :ARG2 (c / conference 
                                    :beneficiary (h / house 
                                          :location (g / government-organization 
                                                :name (n / name 
                                                      :op1 "Congress"))) 
                                    :mod (p / press)) 
                              :time (y / yesterday)) 
                        :ARG2 (t3 / team 
                              :domain (s / service 
                                    :mod (e / emergency 
                                          :quant 3)))) 
                  :op2 (i / incident) 
                  :op3 (t2 / together))))

# ::snt the a415 still very heavy in both directions between abingdon and dorchesteronthethames due to an earlier accident there
# ::tok the a415 still very heavy in both directions between abingdon and dorchesteronthethames due to an earlier accident there
# ::alignments 16-17|0.2.0 15-16|0.2 10-11|0 8-9|0.1 7-8|0.1.0 6-7|0.1.0.0 4-5|0.0 3-4|0.0.0 2-3|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:21.519
# ::node	0	and	10-11
# ::node	0.0	heavy	4-5
# ::node	0.0.0	very	3-4
# ::node	0.0.1	still	2-3
# ::node	0.1	between	8-9
# ::node	0.1.0	direction	7-8
# ::node	0.1.0.0	both	6-7
# ::node	0.2	early	15-16
# ::node	0.2.0	accident	16-17
# ::root	0	and
# ::edge	accident	mod	early	0.2.0	0.2	
# ::edge	and	op1	heavy	0	0.0	
# ::edge	and	op2	between	0	0.1	
# ::edge	and	op3	early	0	0.2	
# ::edge	direction	mod	between	0.1.0	0.1	
# ::edge	direction	mod	both	0.1.0	0.1.0.0	
# ::edge	heavy	degree	very	0.0	0.0.0	
# ::edge	heavy	mod	still	0.0	0.0.1	
(a2 / and 
      :op1 (h / heavy 
            :degree (v / very) 
            :mod (s / still)) 
      :op2 (b / between 
            :mod-of (d / direction 
                  :mod (b2 / both))) 
      :op3 (e / early 
            :mod-of (a / accident)))

# ::snt some people fight shy of taking out a personal loan because they are worried about meeting the monthly repayments if they are unable to work because of sickness accident or unemployment, that is why we offer a special protection plan which ensures that the repayments are made for up to 12 months in the case of unemployment and for up to the remaining period of the loan for accident and sickness
# ::tok some people fight shy of taking out a personal loan because they are worried about meeting the monthly repayments if they are unable to work because of sickness accident or unemployment , that is why we offer a special protection plan which ensures that the repayments are made for up to 12 months in the case of unemployment and for up to the remaining period of the loan for accident and sickness
# ::alignments 71-72|0.1.1.0.0.0.0.0.0.0.0.2 70-71|0.1.1.0.0.0.0.0.0.0.0 69-70|0.1.1.0.0.0.0.0.0.0.0.0.0 67-68|0.1.1.0.0.0.0.0.0.0.0.0 64-65|0.1.1.0.0.0.0.0.0.0.0.1.0 63-64|0.1.1.0.0.0.0.0.0.0.0.1 58-59|0.1.1.0.0.0.0.0.0 57-58|0.1.1.0.0.0.0.0.0.0.1+0.1.1.0.0.0.0.0.0.0 55-56|0.1.1.0.0.0.0.0.0.0.2 52-53|0.0.1.0.0.0.0+0.0.1.0.0.0 51-52|0.0.1.0.0 40-41|0.1.1.0.0.0.0.0 39-40|0.1.1.0.0.0.0.0.2 38-39|0.1.1.0.0.0.0.0.2.1 36-37|0.1.1.0.0.0.0.0.1 35-36|0.1.1.0.0.0.0.0.1.0 30-31|0.0.1.0.1+0.0.1.0 29-30|0.0.1 28-29|0.0 27-28|0.0.0 25-26|0 20-21|0.1.1.0.0.0.0 17-18|0.1.1.0.0.0.0.0.2.0.0+0.1.1.0.0.0.0.0.2.0 15-16|0.1.1.0.0.0 13-14|0.1.1.0 11-12|0.1.1.0.0 10-11|0.1.1 9-10|0.1.1.1 8-9|0.1.1.1.1 3-4|0.1.0 2-3|0.1 0-1|0.1.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:22.729
# ::node	0	cause-01	25-26
# ::node	0.0	accident	28-29
# ::node	0.0.0	sickness	27-28
# ::node	0.0.1	or	29-30
# ::node	0.0.1.0	employ-01	30-31
# ::node	0.0.1.0.0	12	51-52
# ::node	0.0.1.0.0.0	temporal-quantity	52-53
# ::node	0.0.1.0.0.0.0	month	52-53
# ::node	0.0.1.0.1	-	30-31
# ::node	0.1	fight-01	2-3
# ::node	0.1.0	shy-01	3-4
# ::node	0.1.1	cause-01	10-11
# ::node	0.1.1.0	worry-02	13-14
# ::node	0.1.1.0.0	they	11-12
# ::node	0.1.1.0.0.0	meet-03	15-16
# ::node	0.1.1.0.0.0.0	they	20-21
# ::node	0.1.1.0.0.0.0.0	plan-01	40-41
# ::node	0.1.1.0.0.0.0.0.0	and	58-59
# ::node	0.1.1.0.0.0.0.0.0.0	employ-01	57-58
# ::node	0.1.1.0.0.0.0.0.0.0.0	and	70-71
# ::node	0.1.1.0.0.0.0.0.0.0.0.0	loan-01	67-68
# ::node	0.1.1.0.0.0.0.0.0.0.0.0.0	accident	69-70
# ::node	0.1.1.0.0.0.0.0.0.0.0.1	remain-01	63-64
# ::node	0.1.1.0.0.0.0.0.0.0.0.1.0	period	64-65
# ::node	0.1.1.0.0.0.0.0.0.0.0.2	sickness	71-72
# ::node	0.1.1.0.0.0.0.0.0.0.1	-	57-58
# ::node	0.1.1.0.0.0.0.0.0.0.2	case	55-56
# ::node	0.1.1.0.0.0.0.0.1	offer-01	36-37
# ::node	0.1.1.0.0.0.0.0.1.0	we	35-36
# ::node	0.1.1.0.0.0.0.0.2	protect-01	39-40
# ::node	0.1.1.0.0.0.0.0.2.0	temporal-quantity	17-18
# ::node	0.1.1.0.0.0.0.0.2.0.0	month	17-18
# ::node	0.1.1.0.0.0.0.0.2.1	special	38-39
# ::node	0.1.1.1	loan-01	9-10
# ::node	0.1.1.1.0	some	0-1
# ::node	0.1.1.1.1	personal	8-9
# ::root	0	cause-01
# ::edge	accident	location	sickness	0.0	0.0.0	
# ::edge	and	op1	employ-01	0.1.1.0.0.0.0.0.0	0.1.1.0.0.0.0.0.0.0	
# ::edge	and	op1	employ-01	0.1.1.0.0.0.0.0.0.0.0	0.1.1.0.0.0.0.0.0.0	
# ::edge	and	op2	sickness	0.1.1.0.0.0.0.0.0.0.0	0.1.1.0.0.0.0.0.0.0.0.2	
# ::edge	case	topic	employ-01	0.1.1.0.0.0.0.0.0.0.2	0.1.1.0.0.0.0.0.0.0	
# ::edge	cause-01	ARG0	accident	0	0.0	
# ::edge	cause-01	ARG0	worry-02	0.1.1	0.1.1.0	
# ::edge	cause-01	ARG1	fight-01	0	0.1	
# ::edge	cause-01	ARG1	fight-01	0.1.1	0.1	
# ::edge	employ-01	ARG1	12	0.0.1.0	0.0.1.0.0	
# ::edge	employ-01	polarity	-	0.0.1.0	0.0.1.0.1	
# ::edge	employ-01	polarity	-	0.1.1.0.0.0.0.0.0.0	0.1.1.0.0.0.0.0.0.0.1	
# ::edge	fight-01	ARG1	shy-01	0.1	0.1.0	
# ::edge	loan-01	ARG0	and	0.1.1.0.0.0.0.0.0.0.0.0	0.1.1.0.0.0.0.0.0.0.0	
# ::edge	loan-01	ARG1	accident	0.1.1.0.0.0.0.0.0.0.0.0	0.1.1.0.0.0.0.0.0.0.0.0.0	
# ::edge	loan-01	ARG1	some	0.1.1.1	0.1.1.1.0	
# ::edge	loan-01	mod	personal	0.1.1.1	0.1.1.1.1	
# ::edge	loan-01	time	cause-01	0.1.1.1	0.1.1	
# ::edge	meet-03	ARG0	they	0.1.1.0.0.0	0.1.1.0.0	
# ::edge	meet-03	ARG1	they	0.1.1.0.0.0	0.1.1.0.0.0.0	
# ::edge	offer-01	ARG0	we	0.1.1.0.0.0.0.0.1	0.1.1.0.0.0.0.0.1.0	
# ::edge	offer-01	ARG1	plan-01	0.1.1.0.0.0.0.0.1	0.1.1.0.0.0.0.0	
# ::edge	or	op1	accident	0.0.1	0.0	
# ::edge	or	op2	employ-01	0.0.1	0.0.1.0	
# ::edge	plan-01	ARG0	they	0.1.1.0.0.0.0.0	0.1.1.0.0.0.0	
# ::edge	plan-01	ARG1	and	0.1.1.0.0.0.0.0	0.1.1.0.0.0.0.0.0	
# ::edge	protect-01	ARG0	temporal-quantity	0.1.1.0.0.0.0.0.2	0.1.1.0.0.0.0.0.2.0	
# ::edge	protect-01	ARG1	plan-01	0.1.1.0.0.0.0.0.2	0.1.1.0.0.0.0.0	
# ::edge	protect-01	mod	special	0.1.1.0.0.0.0.0.2	0.1.1.0.0.0.0.0.2.1	
# ::edge	remain-01	ARG1	and	0.1.1.0.0.0.0.0.0.0.0.1	0.1.1.0.0.0.0.0.0.0.0	
# ::edge	remain-01	time	period	0.1.1.0.0.0.0.0.0.0.0.1	0.1.1.0.0.0.0.0.0.0.0.1.0	
# ::edge	temporal-quantity	quant	12	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	temporal-quantity	unit	month	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	temporal-quantity	unit	month	0.1.1.0.0.0.0.0.2.0	0.1.1.0.0.0.0.0.2.0.0	
# ::edge	worry-02	ARG0	they	0.1.1.0	0.1.1.0.0	
(c2 / cause-01 
      :ARG0 (a4 / accident 
            :location (s3 / sickness) 
            :op-of (o2 / or 
                  :op1 (e2 / employ-01 
                        :ARG1 (1 / 12 
                              :quant-of (t / temporal-quantity 
                                    :unit (m / month))) 
                        :polarity -))) 
      :ARG1 (f / fight-01 
            :ARG1 (s4 / shy-01) 
            :ARG1-of (c3 / cause-01 
                  :ARG0 (w2 / worry-02 
                        :ARG0 (t4 / they 
                              :ARG0-of (m3 / meet-03 
                                    :ARG1 (t2 / they 
                                          :ARG0-of (p2 / plan-01 
                                                :ARG1 (a3 / and 
                                                      :op1 (e / employ-01 
                                                            :op-of (a / and 
                                                                  :ARG0-of (l / loan-01 
                                                                        :ARG1 (a2 / accident)) 
                                                                  :ARG1-of (r / remain-01 
                                                                        :time (p / period)) 
                                                                  :op1 (s / sickness)) 
                                                            :polarity - 
                                                            :topic-of (c / case))) 
                                                :ARG1-of (o / offer-01 
                                                      :ARG0 (w / we)) 
                                                :ARG1-of (p3 / protect-01 
                                                      :ARG0 (t3 / temporal-quantity 
                                                            :unit (m2 / month)) 
                                                      :mod (s2 / special))))))) 
                  :time-of (l2 / loan-01 
                        :ARG1 (s5 / some) 
                        :mod (p4 / personal)))))

# ::snt the other real cowboy in his administration the commerce secretary malcom baldridge died in a riding accident when his horse stumbled during a rodeo
# ::tok the other real cowboy in his administration the commerce secretary malcom baldridge died in a riding accident when his horse stumbled during a rodeo
# ::alignments 19-20|0.0.0 16-17|0.0.1 15-16|0.0.1.0 12-13|0.0 9-10|0.1 8-9|0 6-7|0.1.0 2-3|0.0.1.0.1 1-2|0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:22.783
# ::node	0	commerce	8-9
# ::node	0.0	die-01	12-13
# ::node	0.0.0	horse	19-20
# ::node	0.0.1	accident	16-17
# ::node	0.0.1.0	ride-01	15-16
# ::node	0.0.1.0.0	other	1-2
# ::node	0.0.1.0.1	real	2-3
# ::node	0.1	secretary	9-10
# ::node	0.1.0	administrate-01	6-7
# ::root	0	commerce
(c / commerce 
      :ARG1-of (d / die-01 
            :ARG0 (h / horse) 
            :ARG2 (a / accident 
                  :location (r / ride-01 
                        :ARG0 (o / other) 
                        :ARG1 (r2 / real)))) 
      :mod-of (s / secretary 
            :ARG1-of (a2 / administrate-01)))

# ::snt in 1988 nearly 30 per cent of all accidents dash
# ::tok in 1988 nearly 30 per cent of all accidents dash
# ::alignments 8-9|0.0 7-8|0.0.0 5-6|0.3+0 3-4|0.1 2-3|0.2 1-2|0.0.0.0.0+0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:22.804
# ::node	0	monetary-quantity	5-6
# ::node	0.0	accident	8-9
# ::node	0.0.0	all	7-8
# ::node	0.0.0.0	date-entity	1-2
# ::node	0.0.0.0.0	1988	1-2
# ::node	0.1	30	3-4
# ::node	0.2	nearly	2-3
# ::node	0.3	cent	5-6
# ::root	0	monetary-quantity
# ::edge	30	name	monetary-quantity	0.1	0	
# ::edge	accident	quant	all	0.0	0.0.0	
# ::edge	date-entity	op1	all	0.0.0.0	0.0.0	
# ::edge	date-entity	year	1988	0.0.0.0	0.0.0.0.0	
# ::edge	monetary-quantity	location	accident	0	0.0	
# ::edge	monetary-quantity	unit	cent	0	0.3	
# ::edge	nearly	op1	monetary-quantity	0.2	0	
(m / monetary-quantity 
      :location (a / accident 
            :quant (a2 / all 
                  :op-of (d / date-entity 
                        :year 1988))) 
      :name-of 30 
      :op-of (n / nearly) 
      :unit (c / cent))

# ::snt   the crashes started on the eastbound carriageway and were followed by a series of shunts on the opposite side partly caused by motorists looking across the road at the accidents which had happened earlier the ambulance service spokesman said
# ::tok the crashes started on the eastbound carriageway and were followed by a series of shunts on the opposite side partly caused by motorists looking across the road at the accidents which had happened earlier the ambulance service spokesman said
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:22.804
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt   north yorkshire police have appealed for witnesses to the accident to come forward
# ::tok north yorkshire police have appealed for witnesses to the accident to come forward
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:22.805
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt i was photographed with an arnold grimbold double amputation a mabel spiggs fractured skull and a hed noddy multiple fractures and by accident a nigel lawless obesity and inflation
# ::tok i was photographed with an arnold grimbold double amputation a mabel spiggs fractured skull and a hed noddy multiple fractures and by accident a nigel lawless obesity and inflation
# ::alignments 28-29|0.3.1 27-28|0.3 26-27|0.3.0 22-23|0.2 20-21|0 18-19|0.4 14-15|0.1 13-14|0.1.0 7-8|0.3.1.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:22.866
# ::node	0	and	20-21
# ::node	0.0	i	0-1
# ::node	0.1	and	14-15
# ::node	0.1.0	skull	13-14
# ::node	0.2	accident	22-23
# ::node	0.3	and	27-28
# ::node	0.3.0	obesity	26-27
# ::node	0.3.1	inflation	28-29
# ::node	0.3.1.0	double	7-8
# ::node	0.4	multiple	18-19
# ::root	0	and
# ::edge	and	op1	i	0	0.0	
# ::edge	and	op1	obesity	0.3	0.3.0	
# ::edge	and	op1	skull	0.1	0.1.0	
# ::edge	and	op2	and	0	0.1	
# ::edge	and	op2	inflation	0.3	0.3.1	
# ::edge	and	op3	accident	0	0.2	
# ::edge	and	op4	and	0	0.3	
# ::edge	and	quant	multiple	0	0.4	
# ::edge	double	poss	inflation	0.3.1.0	0.3.1	
(a3 / and 
      :op1 (i2 / i) 
      :op2 (a4 / and 
            :op1 (s / skull)) 
      :op3 (a2 / accident) 
      :op4 (a / and 
            :op1 (o / obesity) 
            :op2 (i / inflation 
                  :poss-of (d / double))) 
      :quant (m / multiple))

# ::snt concern about road safety in kennington was highlighted by recent road accidents in which two children were seriously injured crossing the busy main road through the village
# ::tok concern about road safety in kennington was highlighted by recent road accidents in which two children were seriously injured crossing the busy main road through the village
# ::alignments 26-27|0.0.0.0.1.0 23-24|0.0.0.0.1 22-23|0.1.2 21-22|0.1.1 19-20|0.0.0.0 18-19|0.0.0 17-18|0.0.0.1 15-16|0.0.0.0.0 14-15|0.1.0.0 11-12|0.0 10-11|0.0.1 9-10|0.0.2 7-8|0 3-4|0.1.0 2-3|0.1.0.1 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:23.250
# ::node	0	highlight-01	7-8
# ::node	0.0	accident	11-12
# ::node	0.0.0	injure-01	18-19
# ::node	0.0.0.0	cross-02	19-20
# ::node	0.0.0.0.0	child	15-16
# ::node	0.0.0.0.1	road	23-24
# ::node	0.0.0.0.1.0	village	26-27
# ::node	0.0.0.1	serious	17-18
# ::node	0.0.1	road	10-11
# ::node	0.0.2	recent	9-10
# ::node	0.1	concern-01	0-1
# ::node	0.1.0	safe-41	3-4
# ::node	0.1.0.0	2	14-15
# ::node	0.1.0.1	road	2-3
# ::node	0.1.1	busy	21-22
# ::node	0.1.2	main	22-23
# ::root	0	highlight-01
# ::edge	accident	location	road	0.0	0.0.1	
# ::edge	accident	time	recent	0.0	0.0.2	
# ::edge	concern-01	ARG0	safe-41	0.1	0.1.0	
# ::edge	concern-01	ARG1	busy	0.1	0.1.1	
# ::edge	cross-02	ARG0	child	0.0.0.0	0.0.0.0.0	
# ::edge	cross-02	ARG1	road	0.0.0.0	0.0.0.0.1	
# ::edge	highlight-01	ARG0	accident	0	0.0	
# ::edge	highlight-01	ARG1	concern-01	0	0.1	
# ::edge	injure-01	ARG0	accident	0.0.0	0.0	
# ::edge	injure-01	ARG1	cross-02	0.0.0	0.0.0.0	
# ::edge	injure-01	degree	serious	0.0.0	0.0.0.1	
# ::edge	main	op1	concern-01	0.1.2	0.1	
# ::edge	road	location	village	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	safe-41	ARG0	2	0.1.0	0.1.0.0	
# ::edge	safe-41	ARG1	road	0.1.0	0.1.0.1	
(h / highlight-01 
      :ARG0 (a / accident 
            :ARG0-of (i / injure-01 
                  :ARG1 (c / cross-02 
                        :ARG0 (c2 / child) 
                        :ARG1 (r / road 
                              :location (v / village))) 
                  :degree (s / serious)) 
            :location (r2 / road) 
            :time (r3 / recent)) 
      :ARG1 (c3 / concern-01 
            :ARG0 (s2 / safe-41 
                  :ARG0 2 
                  :ARG1 (r4 / road)) 
            :ARG1 (b / busy) 
            :op-of (m / main)))

# ::snt and with little or no income your spouse or children could be the ones to suffer most from your accident, how different the picture might be if you had the protection of the midland personal accident plan
# ::tok and with little or no income your spouse or children could be the ones to suffer most from your accident , how different the picture might be if you had the protection of the midland personal accident plan
# ::alignments 37-38|0.0.0.0.2.0.0.0.0 36-37|0.0.0.0.2.0.0.0.0.0 35-36|0.0.0.0.2.0.0.0.0.0.0 31-32|0.0.0.0.2.0.0.0 28-29|0.0.0.0.2.0.0 24-25|0.0.0.0.2.0.0.2 22-23|0.0.0.0.2.0.0.2.0 19-20|0.0.0.0.2.0.0.2.0.0 16-17|0.0.0.0.1 15-16|0.0.0.0 13-14|0.0.0.0.0 10-11|0 9-10|0.0.0 8-9|0.0.0.0.2 7-8|0.0.0.0.2.0.1+0.0.0.0.2.0 5-6|0.0.0.1 4-5|0.0.0.1.0 3-4|0.0.0.0.2.0.0.1 2-3|0.0.0.0.2.0.0.1.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:23.690
# ::node	0	possible	10-11
# ::node	0.0	and	0-1
# ::node	0.0.0	child	9-10
# ::node	0.0.0.0	suffer-01	15-16
# ::node	0.0.0.0.0	one	13-14
# ::node	0.0.0.0.1	most	16-17
# ::node	0.0.0.0.2	or	8-9
# ::node	0.0.0.0.2.0	have-rel-role-91	7-8
# ::node	0.0.0.0.2.0.0	you	28-29
# ::node	0.0.0.0.2.0.0.0	protect-01	31-32
# ::node	0.0.0.0.2.0.0.0.0	plan-01	37-38
# ::node	0.0.0.0.2.0.0.0.0.0	accident	36-37
# ::node	0.0.0.0.2.0.0.0.0.0.0	personal	35-36
# ::node	0.0.0.0.2.0.0.1	or	3-4
# ::node	0.0.0.0.2.0.0.1.0	little	2-3
# ::node	0.0.0.0.2.0.0.2	picture	24-25
# ::node	0.0.0.0.2.0.0.2.0	differ-02	22-23
# ::node	0.0.0.0.2.0.0.2.0.0	accident	19-20
# ::node	0.0.0.0.2.0.1	spouse	7-8
# ::node	0.0.0.1	income	5-6
# ::node	0.0.0.1.0	-	4-5
# ::root	0	possible
# ::edge	accident	mod	personal	0.0.0.0.2.0.0.0.0.0	0.0.0.0.2.0.0.0.0.0.0	
# ::edge	and	op1	child	0.0	0.0.0	
# ::edge	child	poss	income	0.0.0	0.0.0.1	
# ::edge	differ-02	ARG0	accident	0.0.0.0.2.0.0.2.0	0.0.0.0.2.0.0.2.0.0	
# ::edge	differ-02	ARG1	picture	0.0.0.0.2.0.0.2.0	0.0.0.0.2.0.0.2	
# ::edge	have-rel-role-91	ARG1	you	0.0.0.0.2.0	0.0.0.0.2.0.0	
# ::edge	have-rel-role-91	ARG2	spouse	0.0.0.0.2.0	0.0.0.0.2.0.1	
# ::edge	income	polarity	-	0.0.0.1	0.0.0.1.0	
# ::edge	or	direction	little	0.0.0.0.2.0.0.1	0.0.0.0.2.0.0.1.0	
# ::edge	or	op1	have-rel-role-91	0.0.0.0.2	0.0.0.0.2.0	
# ::edge	or	op1	you	0.0.0.0.2.0.0.1	0.0.0.0.2.0.0	
# ::edge	or	op2	suffer-01	0.0.0.0.2	0.0.0.0	
# ::edge	picture	poss	you	0.0.0.0.2.0.0.2	0.0.0.0.2.0.0	
# ::edge	plan-01	ARG1	accident	0.0.0.0.2.0.0.0.0	0.0.0.0.2.0.0.0.0.0	
# ::edge	possible	domain	and	0	0.0	
# ::edge	protect-01	ARG0	you	0.0.0.0.2.0.0.0	0.0.0.0.2.0.0	
# ::edge	protect-01	ARG1	plan-01	0.0.0.0.2.0.0.0	0.0.0.0.2.0.0.0.0	
# ::edge	suffer-01	ARG0	child	0.0.0.0	0.0.0	
# ::edge	suffer-01	ARG1	one	0.0.0.0	0.0.0.0.0	
# ::edge	suffer-01	degree	most	0.0.0.0	0.0.0.0.1	
(p5 / possible 
      :domain (a3 / and 
            :op1 (c / child 
                  :ARG0-of (s / suffer-01 
                        :ARG1 (o / one) 
                        :degree (m / most) 
                        :op-of (o2 / or 
                              :op1 (h / have-rel-role-91 
                                    :ARG1 (y / you 
                                          :ARG0-of (p3 / protect-01 
                                                :ARG1 (p / plan-01 
                                                      :ARG1 (a / accident 
                                                            :mod (p2 / personal)))) 
                                          :op-of (o3 / or 
                                                :direction (l / little)) 
                                          :poss-of (p4 / picture 
                                                :ARG1-of (d / differ-02 
                                                      :ARG0 (a2 / accident)))) 
                                    :ARG2 (s2 / spouse)))) 
                  :poss (i / income 
                        :polarity (- / -)))))

# ::snt at first you may still have accidents as you may not be able to get her to the potty in time but shell gradually learn to hold on longer
# ::tok at first you may still have accidents as you may not be able to get her to the potty in time but shell gradually learn to hold on longer
# ::alignments 28-29|0.2.3 24-25|0.2 23-24|0.2.2 22-23|0.2.0 21-22|0 20-21|0.3 12-13|0.1.0 9-10|0.1.2+0.1 8-9|0.2.1 6-7|0.1.1 4-5|0.0 3-4|0.0.0.0+0.0.0 2-3|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:24.325
# ::node	0	contrast-01	21-22
# ::node	0.0	still	4-5
# ::node	0.0.0	date-entity	3-4
# ::node	0.0.0.0	5	3-4
# ::node	0.1	date-entity	9-10
# ::node	0.1.0	possible	12-13
# ::node	0.1.1	accident	6-7
# ::node	0.1.1.0	you	2-3
# ::node	0.1.2	5	9-10
# ::node	0.2	learn-01	24-25
# ::node	0.2.0	shell	22-23
# ::node	0.2.1	you	8-9
# ::node	0.2.2	gradual	23-24
# ::node	0.2.3	long	28-29
# ::node	0.3	time	20-21
# ::root	0	contrast-01
# ::edge	accident	mod	date-entity	0.1.1	0.1	
# ::edge	accident	name	you	0.1.1	0.1.1.0	
# ::edge	contrast-01	ARG0	still	0	0.0	
# ::edge	contrast-01	ARG1	date-entity	0	0.1	
# ::edge	contrast-01	ARG2	learn-01	0	0.2	
# ::edge	contrast-01	consist	time	0	0.3	
# ::edge	date-entity	domain	possible	0.1	0.1.0	
# ::edge	date-entity	mod	still	0.0.0	0.0	
# ::edge	date-entity	month	5	0.0.0	0.0.0.0	
# ::edge	date-entity	month	5	0.1	0.1.2	
# ::edge	learn-01	ARG0	shell	0.2	0.2.0	
# ::edge	learn-01	ARG1	you	0.2	0.2.1	
# ::edge	learn-01	manner	gradual	0.2	0.2.2	
# ::edge	learn-01	time	long	0.2	0.2.3	
(c / contrast-01 
      :ARG0 (s2 / still 
            :mod-of (d2 / date-entity 
                  :month 5)) 
      :ARG1 (d / date-entity 
            :domain (p / possible) 
            :mod-of (a / accident 
                  :name (y2 / you)) 
            :month 5) 
      :ARG2 (l2 / learn-01 
            :ARG0 (s / shell) 
            :ARG1 (y / you) 
            :manner (g / gradual) 
            :time (l / long)) 
      :consist (t / time))

# ::snt in only a few where fatal road accidents are concerned would they come to more than a couple of hundred pounds each
# ::tok in only a few where fatal road accidents are concerned would they come to more than a couple of hundred pounds each
# ::alignments 21-22|0.0.0.3 17-18|0.0.0.1 11-12|0.0.0.0 9-10|0.0.0 7-8|0.0 6-7|0.0.1 5-6|0 3-4|0.0.0.4 1-2|0.0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:24.408
# ::node	0	fatal	5-6
# ::node	0.0	accident	7-8
# ::node	0.0.0	concern-01	9-10
# ::node	0.0.0.0	they	11-12
# ::node	0.0.0.1	couple	17-18
# ::node	0.0.0.2	only	1-2
# ::node	0.0.0.3	each	21-22
# ::node	0.0.0.4	few	3-4
# ::node	0.0.1	road	6-7
# ::root	0	fatal
(f / fatal 
      :mod-of (a / accident 
            :ARG0-of (c2 / concern-01 
                  :ARG1 (t / they) 
                  :ARG2 (c / couple) 
                  :manner (o / only) 
                  :op-of (e / each) 
                  :time (f2 / few)) 
            :location (r / road)))

# ::snt it could occur as late as twentyfour hours after an accident
# ::tok it could occur as late as twentyfour hours after an accident
# ::alignments 10-11|0.2.1 8-9|0.2 7-8|0.2.0.0+0.2.0 4-5|0.3 2-3|0 1-2|0.1 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:24.430
# ::node	0	occur-01	2-3
# ::node	0.0	it	0-1
# ::node	0.1	possible	1-2
# ::node	0.2	after	8-9
# ::node	0.2.0	temporal-quantity	7-8
# ::node	0.2.0.0	hour	7-8
# ::node	0.2.1	accident	10-11
# ::node	0.3	late	4-5
# ::root	0	occur-01
# ::edge	after	op1	accident	0.2	0.2.1	
# ::edge	occur-01	ARG1	it	0	0.0	
# ::edge	occur-01	time	after	0	0.2	
# ::edge	occur-01	time	late	0	0.3	
# ::edge	possible	domain	occur-01	0.1	0	
# ::edge	temporal-quantity	op1	after	0.2.0	0.2	
# ::edge	temporal-quantity	unit	hour	0.2.0	0.2.0.0	
(o / occur-01 
      :ARG1 (i / it) 
      :domain-of (p / possible) 
      :time (a2 / after 
            :op-of (t / temporal-quantity 
                  :unit (h / hour)) 
            :op1 (a / accident)) 
      :time (l / late))

# ::snt the accident rate for yts trainees has doubled since 1984 so be particularly aware of any problems and report them immediately
# ::tok the accident rate for yts trainees has doubled since 1984 so be particularly aware of any problems and report them immediately
# ::alignments 20-21|0.2.0 18-19|0.2 17-18|0 16-17|0.1 15-16|0.1.0 12-13|0.0.0.0.0 10-11|0.0.2.1 9-10|0.0.2.0.0+0.0.2.0 8-9|0.0.2 7-8|0.0 5-6|0.0.0.0+0.0.0 2-3|0.0.1 1-2|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:24.604
# ::node	0	and	17-18
# ::node	0.0	double-01	7-8
# ::node	0.0.0	person	5-6
# ::node	0.0.0.0	train-01	5-6
# ::node	0.0.0.0.0	particular	12-13
# ::node	0.0.1	rate	2-3
# ::node	0.0.1.0	accident	1-2
# ::node	0.0.2	since	8-9
# ::node	0.0.2.0	date-entity	9-10
# ::node	0.0.2.0.0	1984	9-10
# ::node	0.0.2.1	so	10-11
# ::node	0.1	problem	16-17
# ::node	0.1.0	any	15-16
# ::node	0.2	report	18-19
# ::node	0.2.0	immediate	20-21
# ::root	0	and
# ::edge	and	op1	problem	0	0.1	
# ::edge	and	op2	report	0	0.2	
# ::edge	date-entity	year	1984	0.0.2.0	0.0.2.0.0	
# ::edge	double-01	ARG0	person	0.0	0.0.0	
# ::edge	double-01	ARG1	rate	0.0	0.0.1	
# ::edge	double-01	manner	and	0.0	0	
# ::edge	double-01	time	since	0.0	0.0.2	
# ::edge	problem	quant	any	0.1	0.1.0	
# ::edge	rate	mod	accident	0.0.1	0.0.1.0	
# ::edge	report	time	immediate	0.2	0.2.0	
# ::edge	since	op1	date-entity	0.0.2	0.0.2.0	
# ::edge	since	op2	so	0.0.2	0.0.2.1	
# ::edge	train-01	ARG1	particular	0.0.0.0	0.0.0.0.0	
# ::edge	train-01	ARG2	person	0.0.0.0	0.0.0	
(a / and 
      :manner-of (d2 / double-01 
            :ARG0 (p3 / person 
                  :ARG2-of (t / train-01 
                        :ARG1 (p2 / particular))) 
            :ARG1 (r2 / rate 
                  :mod (a3 / accident)) 
            :time (s2 / since 
                  :op1 (d / date-entity 
                        :year 1984) 
                  :op2 (s / so))) 
      :op1 (p / problem 
            :quant (a2 / any)) 
      :op2 (r / report 
            :time (i / immediate)))

# ::snt it was sheer hypocrisy of the trade unions to say they were prepared to operate accident and emergency services which involved their men sitting around in the stations during the day but refusing to operate vehicles and emergency services seriously, was partly eclipsed by his announcement in the closing seconds of the exchanges that accident and emergency cover had been restored in the capital
# ::tok it was sheer hypocrisy of the trade unions to say they were prepared to operate accident and emergency services which involved their men sitting around in the stations during the day but refusing to operate vehicles and emergency services seriously , was partly eclipsed by his announcement in the closing seconds of the exchanges that accident and emergency cover had been restored in the capital
# ::alignments 64-65|0.1.0.2.0.1 61-62|0.1.0.0 57-58|0.1.0.5 56-57|0.1.0 55-56|0.1.0.4 53-54|0.1.0.3 50-51|0.1.0.1.0 49-50|0.1.0.1 46-47|0.1.0.2 43-44|0.1.0.2.0 42-43|0.1.0.2.0.2 39-40|0.1.0.2.0.0 38-39|0.1.1.1.0 37-38|0.1.1.1.0.0 36-37|0.1.1.1 35-36|0.1.1.0 34-35|0.1.1 32-33|0.1 31-32|0 30-31|0.0.4 27-28|0.0.2 24-25|0.0.3 23-24|0.0 22-23|0.0.0 20-21|0.0.0.0 18-19|0.0.0.0.0 17-18|0.0.0.0.0.1 16-17|0.0.0.0.0.0.1.1 15-16|0.0.0.0.0.0.1.1.0 14-15|0.0.0.0.0.0 12-13|0.0.0.0.0.0.1 10-11|0.0.0.0.0.0.0 9-10|0.0.0.0.0.0.1.2 7-8|0.0.0.0.0.0.1.2.0 6-7|0.0.0.0.0.0.1.2.0.0 3-4|0.0.0.0.0.0.1.0 2-3|0.0.0.0.0.0.1.2.1 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:27.605
# ::node	0	contrast-01	31-32
# ::node	0.0	sit-01	23-24
# ::node	0.0.0	man	22-23
# ::node	0.0.0.0	involve-01	20-21
# ::node	0.0.0.0.0	service	18-19
# ::node	0.0.0.0.0.0	operate-01	14-15
# ::node	0.0.0.0.0.0.0	they	10-11
# ::node	0.0.0.0.0.0.1	prepare-02	12-13
# ::node	0.0.0.0.0.0.1.0	hypocrisy	3-4
# ::node	0.0.0.0.0.0.1.1	and	16-17
# ::node	0.0.0.0.0.0.1.1.0	accident	15-16
# ::node	0.0.0.0.0.0.1.2	say-01	9-10
# ::node	0.0.0.0.0.0.1.2.0	union	7-8
# ::node	0.0.0.0.0.0.1.2.0.0	trade-01	6-7
# ::node	0.0.0.0.0.0.1.2.1	sheer	2-3
# ::node	0.0.0.0.0.1	emergency	17-18
# ::node	0.0.1	it	0-1
# ::node	0.0.2	station	27-28
# ::node	0.0.3	around	24-25
# ::node	0.0.4	day	30-31
# ::node	0.1	refuse-01	32-33
# ::node	0.1.0	and	56-57
# ::node	0.1.0.0	restore-01	61-62
# ::node	0.1.0.1	close-01	49-50
# ::node	0.1.0.1.0	second	50-51
# ::node	0.1.0.2	announce-01	46-47
# ::node	0.1.0.2.0	eclipse-01	43-44
# ::node	0.1.0.2.0.0	serious	39-40
# ::node	0.1.0.2.0.1	capital	64-65
# ::node	0.1.0.2.0.2	partly	42-43
# ::node	0.1.0.3	exchange-01	53-54
# ::node	0.1.0.4	accident	55-56
# ::node	0.1.0.5	emergency	57-58
# ::node	0.1.1	operate-01	34-35
# ::node	0.1.1.0	vehicle	35-36
# ::node	0.1.1.1	and	36-37
# ::node	0.1.1.1.0	service	38-39
# ::node	0.1.1.1.0.0	emergency	37-38
# ::root	0	contrast-01
# ::edge	and	op1	accident	0.0.0.0.0.0.1.1	0.0.0.0.0.0.1.1.0	
# ::edge	and	op1	accident	0.1.0	0.1.0.4	
# ::edge	and	op1	operate-01	0.1.1.1	0.1.1	
# ::edge	and	op2	emergency	0.1.0	0.1.0.5	
# ::edge	and	op2	service	0.1.1.1	0.1.1.1.0	
# ::edge	announce-01	ARG1	and	0.1.0.2	0.1.0	
# ::edge	close-01	ARG0	second	0.1.0.1	0.1.0.1.0	
# ::edge	close-01	ARG1	and	0.1.0.1	0.1.0	
# ::edge	contrast-01	ARG1	sit-01	0	0.0	
# ::edge	contrast-01	ARG2	refuse-01	0	0.1	
# ::edge	eclipse-01	ARG0	serious	0.1.0.2.0	0.1.0.2.0.0	
# ::edge	eclipse-01	ARG1	capital	0.1.0.2.0	0.1.0.2.0.1	
# ::edge	eclipse-01	ARG2	announce-01	0.1.0.2.0	0.1.0.2	
# ::edge	eclipse-01	degree	partly	0.1.0.2.0	0.1.0.2.0.2	
# ::edge	exchange-01	ARG1	and	0.1.0.3	0.1.0	
# ::edge	involve-01	ARG0	service	0.0.0.0	0.0.0.0.0	
# ::edge	involve-01	ARG1	man	0.0.0.0	0.0.0	
# ::edge	operate-01	ARG0	they	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	operate-01	ARG1	service	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	operate-01	ARG1	vehicle	0.1.1	0.1.1.0	
# ::edge	prepare-02	ARG0	hypocrisy	0.0.0.0.0.0.1	0.0.0.0.0.0.1.0	
# ::edge	prepare-02	ARG1	and	0.0.0.0.0.0.1	0.0.0.0.0.0.1.1	
# ::edge	prepare-02	ARG2	operate-01	0.0.0.0.0.0.1	0.0.0.0.0.0	
# ::edge	refuse-01	ARG0	and	0.1	0.1.0	
# ::edge	refuse-01	ARG1	operate-01	0.1	0.1.1	
# ::edge	restore-01	ARG1	and	0.1.0.0	0.1.0	
# ::edge	say-01	ARG0	union	0.0.0.0.0.0.1.2	0.0.0.0.0.0.1.2.0	
# ::edge	say-01	ARG1	prepare-02	0.0.0.0.0.0.1.2	0.0.0.0.0.0.1	
# ::edge	say-01	time	sheer	0.0.0.0.0.0.1.2	0.0.0.0.0.0.1.2.1	
# ::edge	service	mod	emergency	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	service	mod	emergency	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	sit-01	ARG0	man	0.0	0.0.0	
# ::edge	sit-01	ARG1	it	0.0	0.0.1	
# ::edge	sit-01	ARG2	station	0.0	0.0.2	
# ::edge	sit-01	location	around	0.0	0.0.3	
# ::edge	sit-01	time	day	0.0	0.0.4	
# ::edge	union	mod	trade-01	0.0.0.0.0.0.1.2.0	0.0.0.0.0.0.1.2.0.0	
(c3 / contrast-01 
      :ARG1 (s5 / sit-01 
            :ARG0 (m / man 
                  :ARG1-of (i / involve-01 
                        :ARG0 (s6 / service 
                              :ARG1-of (o2 / operate-01 
                                    :ARG0 (t / they) 
                                    :ARG2-of (p2 / prepare-02 
                                          :ARG0 (h / hypocrisy) 
                                          :ARG1 (a6 / and 
                                                :op1 (a7 / accident)) 
                                          :ARG1-of (s7 / say-01 
                                                :ARG0 (u / union 
                                                      :mod (t2 / trade-01)) 
                                                :time (s8 / sheer)))) 
                              :mod (e5 / emergency)))) 
            :ARG1 (i2 / it) 
            :ARG2 (s4 / station) 
            :location (a5 / around) 
            :time (d / day)) 
      :ARG2 (r2 / refuse-01 
            :ARG0 (a / and 
                  :ARG1-of (r / restore-01) 
                  :ARG1-of (c2 / close-01 
                        :ARG0 (s / second)) 
                  :ARG1-of (a3 / announce-01 
                        :ARG2-of (e3 / eclipse-01 
                              :ARG0 (s2 / serious) 
                              :ARG1 (c / capital) 
                              :degree (p / partly))) 
                  :ARG1-of (e2 / exchange-01) 
                  :op1 (a2 / accident) 
                  :op2 (e / emergency)) 
            :ARG1 (o / operate-01 
                  :ARG1 (v / vehicle) 
                  :op-of (a4 / and 
                        :op1 (s3 / service 
                              :mod (e4 / emergency))))))

# ::snt its so easy to be snobbish  but if the problems of experimentation that comes out of accident because you want to achieve an accident and you want to achieve the fall of things on the page and the accident that occurs because as you say nobodys ever told you that youre not supposed to do that
# ::tok its so easy to be snobbish but if the problems of experimentation that comes out of accident because you want to achieve an accident and you want to achieve the fall of things on the page and the accident that occurs because as you say nobodys ever told you that youre not supposed to do that
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:27.606
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt but she could have arrived here about the time of the accident ellip
# ::tok but she could have arrived here about the time of the accident ellip
# ::alignments 11-12|0.0 8-9|0.1.1 5-6|0.1.2 4-5|0.1 2-3|0.2 1-2|0.1.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:27.632
# ::node	0	contrast-01	0-1
# ::node	0.0	accident	11-12
# ::node	0.1	arrive-01	4-5
# ::node	0.1.0	she	1-2
# ::node	0.1.1	time	8-9
# ::node	0.1.2	here	5-6
# ::node	0.2	possible	2-3
# ::root	0	contrast-01
# ::edge	arrive-01	ARG1	she	0.1	0.1.0	
# ::edge	arrive-01	ARG4	time	0.1	0.1.1	
# ::edge	arrive-01	location	here	0.1	0.1.2	
# ::edge	contrast-01	ARG0	accident	0	0.0	
# ::edge	contrast-01	ARG1	arrive-01	0	0.1	
# ::edge	contrast-01	ARG2	possible	0	0.2	
(c / contrast-01 
      :ARG0 (a / accident) 
      :ARG1 (a2 / arrive-01 
            :ARG1 (s / she) 
            :ARG4 (t / time) 
            :location (h / here)) 
      :ARG2 (p / possible))

# ::snt the cegb still maintains that an accident as serious as chernobyl is impossible here
# ::tok the cegb still maintains that an accident as serious as chernobyl is impossible here
# ::alignments 13-14|0.0 8-9|0.1 6-7|0.1.0 3-4|0 2-3|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:27.648
# ::node	0	maintain-01	3-4
# ::node	0.0	here	13-14
# ::node	0.1	serious	8-9
# ::node	0.1.0	accident	6-7
# ::node	0.2	still	2-3
# ::root	0	maintain-01
# ::edge	accident	mod	serious	0.1.0	0.1	
# ::edge	maintain-01	ARG0	here	0	0.0	
# ::edge	maintain-01	ARG1	serious	0	0.1	
# ::edge	maintain-01	mod	still	0	0.2	
(m / maintain-01 
      :ARG0 (h / here) 
      :ARG1 (s / serious 
            :mod-of (a / accident)) 
      :mod (s2 / still))

# ::snt the latter could make machines more vulnerable in high winds and also potentially more damaging in an accident
# ::tok the latter could make machines more vulnerable in high winds and also potentially more damaging in an accident
# ::alignments 17-18|0.0.0.1 14-15|0.0.0 12-13|0.0.0.2 11-12|0.0.0.2.0 10-11|0.0 9-10|0.0.1 8-9|0.0.1.1 6-7|0.0.1.0 4-5|0.0.1.0.0 2-3|0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:27.752
# ::node	0	possible	2-3
# ::node	0.0	and	10-11
# ::node	0.0.0	damage-01	14-15
# ::node	0.0.0.0	latter	1-2
# ::node	0.0.0.1	accident	17-18
# ::node	0.0.0.2	potential	12-13
# ::node	0.0.0.2.0	also	11-12
# ::node	0.0.1	wind	9-10
# ::node	0.0.1.0	vulnerable	6-7
# ::node	0.0.1.0.0	machine	4-5
# ::node	0.0.1.1	high	8-9
# ::root	0	possible
(p2 / possible 
      :op-of (a3 / and 
            :op1 (d / damage-01 
                  :ARG1 (l / latter) 
                  :ARG2 (a / accident) 
                  :mod (p / potential 
                        :mod (a2 / also))) 
            :part-of (w / wind 
                  :compared-to-of (v / vulnerable 
                        :domain (m / machine)) 
                  :mod (h / high))))

# ::snt will i be paid more than one type of benefit  yes if you have to spend any time in hospital as the result of an accident which requires an overnight stay
# ::tok will i be paid more than one type of benefit yes if you have to spend any time in hospital as the result of an accident which requires an overnight stay
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:27.753
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt in an accident it was the driver not the person killed who was felt to have had bad luck  and the pedestrian was often condemned for his obstinacy in being on the road at all
# ::tok in an accident it was the driver not the person killed who was felt to have had bad luck and the pedestrian was often condemned for his obstinacy in being on the road at all
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:27.754
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt admitting the cogency of the widespread criticism of the tort system as too cumbersome costly and haphazard to accomplish its accident prevention and compensation objectivesfo id61 with respect to sporadic accidents like automobile collisions he contends that mass accidents are peculiarly amenable to tort treatment in class actions
# ::tok admitting the cogency of the widespread criticism of the tort system as too cumbersome costly and haphazard to accomplish its accident prevention and compensation objectivesfo id61 with respect to sporadic accidents like automobile collisions he contends that mass accidents are peculiarly amenable to tort treatment in class actions
# ::alignments 47-48|0.2.0.0.1.0 46-47|0.2.0.0.1.0.0 44-45|0.2.0.0.1 38-39|0.2.0.1.0.0 37-38|0.2.0.1.0 35-36|0.2.0.0.1.1.0 34-35|0.2.0.0.1.1 32-33|0.2.0.0.1.1.0.1 30-31|0.2.0.0.1.1.0.0 27-28|0.2.0.1 23-24|0.2.0.0 22-23|0.2.0 21-22|0.2.1 20-21|0.2.1.0 18-19|0.2 15-16|0 14-15|0.1 12-13|0.2.0.0.0 10-11|0.0.1 6-7|0.0 5-6|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:28.770
# ::node	0	and	15-16
# ::node	0.0	criticize-01	6-7
# ::node	0.0.0	wide	5-6
# ::node	0.0.1	system	10-11
# ::node	0.1	costly	14-15
# ::node	0.2	accomplish-01	18-19
# ::node	0.2.0	and	22-23
# ::node	0.2.0.0	compensate-01	23-24
# ::node	0.2.0.0.0	too	12-13
# ::node	0.2.0.0.1	treat-03	44-45
# ::node	0.2.0.0.1.0	action	47-48
# ::node	0.2.0.0.1.0.0	class	46-47
# ::node	0.2.0.0.1.1	he	34-35
# ::node	0.2.0.0.1.1.0	contend-01	35-36
# ::node	0.2.0.0.1.1.0.0	accident	30-31
# ::node	0.2.0.0.1.1.0.1	automobile	32-33
# ::node	0.2.0.1	respect-01	27-28
# ::node	0.2.0.1.0	mass	37-38
# ::node	0.2.0.1.0.0	accident	38-39
# ::node	0.2.1	prevent-01	21-22
# ::node	0.2.1.0	accident	20-21
# ::root	0	and
# ::edge	accident	degree	mass	0.2.0.1.0.0	0.2.0.1.0	
# ::edge	accomplish-01	ARG0	and	0.2	0.2.0	
# ::edge	accomplish-01	ARG1	prevent-01	0.2	0.2.1	
# ::edge	action	mod	class	0.2.0.0.1.0	0.2.0.0.1.0.0	
# ::edge	and	op1	compensate-01	0.2.0	0.2.0.0	
# ::edge	and	op1	criticize-01	0	0.0	
# ::edge	and	op2	costly	0	0.1	
# ::edge	and	op2	respect-01	0.2.0	0.2.0.1	
# ::edge	and	op3	accomplish-01	0	0.2	
# ::edge	compensate-01	ARG0	too	0.2.0.0	0.2.0.0.0	
# ::edge	compensate-01	ARG1	treat-03	0.2.0.0	0.2.0.0.1	
# ::edge	contend-01	ARG0	he	0.2.0.0.1.1.0	0.2.0.0.1.1	
# ::edge	contend-01	ARG1	accident	0.2.0.0.1.1.0	0.2.0.0.1.1.0.0	
# ::edge	contend-01	ARG3	automobile	0.2.0.0.1.1.0	0.2.0.0.1.1.0.1	
# ::edge	criticize-01	ARG0	wide	0.0	0.0.0	
# ::edge	criticize-01	ARG1	system	0.0	0.0.1	
# ::edge	prevent-01	ARG1	accident	0.2.1	0.2.1.0	
# ::edge	respect-01	ARG1	mass	0.2.0.1	0.2.0.1.0	
# ::edge	treat-03	ARG0	action	0.2.0.0.1	0.2.0.0.1.0	
# ::edge	treat-03	ARG1	he	0.2.0.0.1	0.2.0.0.1.1	
(a8 / and 
      :op1 (c5 / criticize-01 
            :ARG0 (w / wide) 
            :ARG1 (s / system)) 
      :op2 (c4 / costly) 
      :op3 (a7 / accomplish-01 
            :ARG0 (a5 / and 
                  :op1 (c3 / compensate-01 
                        :ARG0 (t2 / too) 
                        :ARG1 (t / treat-03 
                              :ARG0 (a / action 
                                    :mod (c / class)) 
                              :ARG1 (h / he 
                                    :ARG0-of (c2 / contend-01 
                                          :ARG1 (a4 / accident) 
                                          :ARG3 (a3 / automobile))))) 
                  :op2 (r / respect-01 
                        :ARG1 (m / mass 
                              :degree-of (a2 / accident)))) 
            :ARG1 (p / prevent-01 
                  :ARG1 (a6 / accident))))

# ::snt of chance  certainly natures use of chance by accident incident or mutation is therefore selective and subject to sensitive principles of a physical chemical organic and many of us suspect a spiritual balance a universal ecology
# ::tok of chance certainly natures use of chance by accident incident or mutation is therefore selective and subject to sensitive principles of a physical chemical organic and many of us suspect a spiritual balance a universal ecology
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:28.771
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt it is no accident that bogdanov has just gone to work in hamburg
# ::tok it is no accident that bogdanov has just gone to work in hamburg
# ::alignments 7-8|0.0.0.0 3-4|0.0 2-3|0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:28.783
# ::node	0	it	0-1
# ::node	0.0	accident	3-4
# ::node	0.0.0	-	2-3
# ::node	0.0.0.0	just	7-8
# ::root	0	it
(i / it 
      :domain-of (a / accident 
            :polarity (- / - 
                  :op1 (j / just))))

# ::snt in its early episodes its much concerned with the inability of a british jew to understand what it was and is to be a european jew who by flight or accident or moral ruthlessness survived the war that the british jews were helping to fight
# ::tok in its early episodes its much concerned with the inability of a british jew to understand what it was and is to be a european jew who by flight or accident or moral ruthlessness survived the war that the british jews were helping to fight
# ::alignments 44-45|0.2.1 42-43|0.2 40-41|0.2.1.0.1.0+0.2.1.0.1+0.2.1.0 36-37|0.2.0 34-35|0.2.0.0 32-33|0.2.1.0.0 31-32|0.2.0.0.0 30-31|0.2.0.0.0.0 29-30|0.2.0.0.0.0.0 24-25|0.2.1.1.0.0+0.2.1.1.0+0.2.1.1 19-20|0 17-18|0.0.0 15-16|0.0 9-10|0.1.0.0+0.1.0 6-7|0.1 5-6|0.1.2 2-3|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:29.787
# ::node	0	and	19-20
# ::node	0.0	understand-01	15-16
# ::node	0.0.0	it	17-18
# ::node	0.1	concern-01	6-7
# ::node	0.1.0	ability	9-10
# ::node	0.1.0.0	-	9-10
# ::node	0.1.1	early	2-3
# ::node	0.1.2	much	5-6
# ::node	0.2	help-01	42-43
# ::node	0.2.0	war	36-37
# ::node	0.2.0.0	survive-01	34-35
# ::node	0.2.0.0.0	or	31-32
# ::node	0.2.0.0.0.0	accident	30-31
# ::node	0.2.0.0.0.0.0	or	29-30
# ::node	0.2.1	fight-01	44-45
# ::node	0.2.1.0	ethnic-group	40-41
# ::node	0.2.1.0.0	moral	32-33
# ::node	0.2.1.0.1	name	40-41
# ::node	0.2.1.0.1.0	"Jew"	40-41
# ::node	0.2.1.1	continent	24-25
# ::node	0.2.1.1.0	name	24-25
# ::node	0.2.1.1.0.0	"Europe"	24-25
# ::root	0	and
# ::edge	ability	polarity	-	0.1.0	0.1.0.0	
# ::edge	and	op1	concern-01	0	0.1	
# ::edge	and	op2	help-01	0	0.2	
# ::edge	concern-01	ARG0	ability	0.1	0.1.0	
# ::edge	concern-01	ARG1	early	0.1	0.1.1	
# ::edge	concern-01	extent	much	0.1	0.1.2	
# ::edge	continent	name	name	0.2.1.1	0.2.1.1.0	
# ::edge	ethnic-group	mod	moral	0.2.1.0	0.2.1.0.0	
# ::edge	ethnic-group	name	name	0.2.1.0	0.2.1.0.1	
# ::edge	fight-01	ARG0	ethnic-group	0.2.1	0.2.1.0	
# ::edge	fight-01	ARG1	continent	0.2.1	0.2.1.1	
# ::edge	help-01	ARG0	war	0.2	0.2.0	
# ::edge	help-01	ARG1	fight-01	0.2	0.2.1	
# ::edge	name	op1	"Europe"	0.2.1.1.0	0.2.1.1.0.0	
# ::edge	name	op1	"Jew"	0.2.1.0.1	0.2.1.0.1.0	
# ::edge	or	op1	accident	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	or	op1	accident	0.2.0.0.0.0.0	0.2.0.0.0.0	
# ::edge	survive-01	ARG0	or	0.2.0.0	0.2.0.0.0	
# ::edge	survive-01	ARG1	war	0.2.0.0	0.2.0	
# ::edge	understand-01	ARG0	it	0.0	0.0.0	
# ::edge	understand-01	ARG1	and	0.0	0	
(a2 / and 
      :ARG1-of (u / understand-01 
            :ARG0 (i / it)) 
      :op1 (c2 / concern-01 
            :ARG0 (a3 / ability 
                  :polarity -) 
            :ARG1 (e2 / early) 
            :extent (m2 / much)) 
      :op2 (h / help-01 
            :ARG0 (w / war 
                  :ARG1-of (s / survive-01 
                        :ARG0 (o / or 
                              :op1 (a / accident 
                                    :op-of (o2 / or))))) 
            :ARG1 (f / fight-01 
                  :ARG0 (e / ethnic-group 
                        :mod (m / moral) 
                        :name (n / name 
                              :op1 "Jew")) 
                  :ARG1 (c / continent 
                        :name (n2 / name 
                              :op1 "Europe")))))

# ::snt the couple and their three children wayne seven kevin six and cheryl four were all upset by the accident and are keeping in constant touch with what is happening said mr cooper
# ::tok the couple and their three children wayne seven kevin six and cheryl four were all upset by the accident and are keeping in constant touch with what is happening said mr cooper
# ::alignments 29-30|0 28-29|0.1 24-25|0.0.0 23-24|0.0.0.1 19-20|0.0 18-19|0.0.3.1 15-16|0.0.3 14-15|0.0.0.0 12-13|0.0.2 10-11|0.2 9-10|0.0.3.0 7-8|0.1.1 5-6|0.0.1.0.0 4-5|0.1.0 2-3|0.0.1 1-2|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:30.087
# ::node	0	say-01	29-30
# ::node	0.0	and	19-20
# ::node	0.0.0	touch-01	24-25
# ::node	0.0.0.0	all	14-15
# ::node	0.0.0.1	constant	23-24
# ::node	0.0.1	and	2-3
# ::node	0.0.1.0	couple	1-2
# ::node	0.0.1.0.0	child	5-6
# ::node	0.0.2	4	12-13
# ::node	0.0.3	upset-01	15-16
# ::node	0.0.3.0	6	9-10
# ::node	0.0.3.1	accident	18-19
# ::node	0.1	happen-01	28-29
# ::node	0.1.0	3	4-5
# ::node	0.1.1	7	7-8
# ::node	0.2	and	10-11
# ::root	0	say-01
# ::edge	3	op1	happen-01	0.1.0	0.1	
# ::edge	7	op1	happen-01	0.1.1	0.1	
# ::edge	and	op1	4	0.0	0.0.2	
# ::edge	and	op1	couple	0.0.1	0.0.1.0	
# ::edge	and	op1	say-01	0.2	0	
# ::edge	and	op2	and	0.0.1	0.0	
# ::edge	and	op2	upset-01	0.0	0.0.3	
# ::edge	child	mod	couple	0.0.1.0.0	0.0.1.0	
# ::edge	happen-01	ARG1	say-01	0.1	0	
# ::edge	say-01	ARG1	and	0	0.0	
# ::edge	touch-01	ARG0	all	0.0.0	0.0.0.0	
# ::edge	touch-01	ARG1	and	0.0.0	0.0	
# ::edge	touch-01	manner	constant	0.0.0	0.0.0.1	
# ::edge	upset-01	ARG0	6	0.0.3	0.0.3.0	
# ::edge	upset-01	ARG1	accident	0.0.3	0.0.3.1	
(s / say-01 
      :ARG1 (a / and 
            :ARG1-of (t / touch-01 
                  :ARG0 (a3 / all) 
                  :manner (c / constant)) 
            :op-of (a5 / and 
                  :op1 (c3 / couple 
                        :mod-of (c2 / child))) 
            :op1 4 
            :op2 (u / upset-01 
                  :ARG0 6 
                  :ARG1 (a2 / accident))) 
      :ARG1-of (h / happen-01 
            :op-of 3 
            :op-of 7) 
      :op-of (a4 / and))

# ::snt earlier this week janne gustvasson of sweden died from his injuries after a motorcycle accident and a russian sailor was found dead hanging from tree shortly after completing the first leg
# ::tok earlier this week janne gustvasson of sweden died from his injuries after a motorcycle accident and a russian sailor was found dead hanging from tree shortly after completing the first leg
# ::alignments 30-31|0.1.0.1.1.0 27-28|0.1.0.1.1 26-27|0.1.0.1 25-26|0.1.0.1.0 24-25|0.1.0.0 22-23|0.1.0 20-21|0.1 15-16|0 14-15|0.0.0.0 11-12|0.0.0 10-11|0.0.1 7-8|0.0 2-3|0.0.2.0 1-2|0.0.2.0.0 0-1|0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:30.185
# ::node	0	and	15-16
# ::node	0.0	die-01	7-8
# ::node	0.0.0	after	11-12
# ::node	0.0.0.0	accident	14-15
# ::node	0.0.1	injure-01	10-11
# ::node	0.0.2	early	0-1
# ::node	0.0.2.0	week	2-3
# ::node	0.0.2.0.0	this	1-2
# ::node	0.1	find-01	20-21
# ::node	0.1.0	hang-01	22-23
# ::node	0.1.0.0	tree	24-25
# ::node	0.1.0.1	after	26-27
# ::node	0.1.0.1.0	short	25-26
# ::node	0.1.0.1.1	complete-01	27-28
# ::node	0.1.0.1.1.0	leg	30-31
# ::root	0	and
# ::edge	after	mod	short	0.1.0.1	0.1.0.1.0	
# ::edge	after	op1	accident	0.0.0	0.0.0.0	
# ::edge	after	op1	complete-01	0.1.0.1	0.1.0.1.1	
# ::edge	and	op1	find-01	0	0.1	
# ::edge	complete-01	ARG1	leg	0.1.0.1.1	0.1.0.1.1.0	
# ::edge	die-01	ARG1	and	0.0	0	
# ::edge	die-01	time	after	0.0	0.0.0	
# ::edge	die-01	time	early	0.0	0.0.2	
# ::edge	die-01	time	injure-01	0.0	0.0.1	
# ::edge	early	op1	week	0.0.2	0.0.2.0	
# ::edge	find-01	ARG1	hang-01	0.1	0.1.0	
# ::edge	hang-01	ARG1	tree	0.1.0	0.1.0.0	
# ::edge	hang-01	time	after	0.1.0	0.1.0.1	
# ::edge	week	mod	this	0.0.2.0	0.0.2.0.0	
(a2 / and 
      :ARG1-of (d / die-01 
            :time (a4 / after 
                  :op1 (a3 / accident)) 
            :time (i / injure-01) 
            :time (e / early 
                  :op1 (w / week 
                        :mod (t2 / this)))) 
      :op1 (f / find-01 
            :ARG1 (h / hang-01 
                  :ARG1 (t / tree) 
                  :time (a / after 
                        :mod (s / short) 
                        :op1 (c / complete-01 
                              :ARG1 (l / leg))))))

# ::snt fifteen people were injured and 28 vehicles seriously damaged in the accident at drayton on august 21
# ::tok fifteen people were injured and 28 vehicles seriously damaged in the accident at drayton on august 21
# ::alignments 16-17|0.0.0 15-16|0.1.2.0+0.1.2 11-12|0.1.0 8-9|0.1 7-8|0.1.3 6-7|0.1.1 5-6|0.1.1.0 4-5|0 3-4|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:30.244
# ::node	0	and	4-5
# ::node	0.0	injure-01	3-4
# ::node	0.0.0	21	16-17
# ::node	0.1	damage-01	8-9
# ::node	0.1.0	accident	11-12
# ::node	0.1.1	vehicle	6-7
# ::node	0.1.1.0	28	5-6
# ::node	0.1.2	date-entity	15-16
# ::node	0.1.2.0	8	15-16
# ::node	0.1.3	serious	7-8
# ::root	0	and
# ::edge	and	op1	injure-01	0	0.0	
# ::edge	and	op2	damage-01	0	0.1	
# ::edge	damage-01	ARG0	accident	0.1	0.1.0	
# ::edge	damage-01	ARG1	vehicle	0.1	0.1.1	
# ::edge	damage-01	ARG4	date-entity	0.1	0.1.2	
# ::edge	damage-01	extent	serious	0.1	0.1.3	
# ::edge	date-entity	month	8	0.1.2	0.1.2.0	
# ::edge	injure-01	ARG0	21	0.0	0.0.0	
# ::edge	vehicle	quant	28	0.1.1	0.1.1.0	
(a2 / and 
      :op1 (i / injure-01 
            :ARG0 21) 
      :op2 (d2 / damage-01 
            :ARG0 (a / accident) 
            :ARG1 (v / vehicle 
                  :quant 28) 
            :ARG4 (d / date-entity 
                  :month 8) 
            :extent (s / serious)))

# ::snt theres been a terrible accident
# ::tok theres been a terrible accident
# ::alignments 4-5|0 3-4|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:30.248
# ::node	0	accident	4-5
# ::node	0.0	terrible	3-4
# ::root	0	accident
# ::edge	accident	mod	terrible	0	0.0	
(a / accident 
      :mod (t / terrible))

# ::snt it was reinforced by the accident that lloyd george the only other man who could be cast as national saviour was temporarily knocked out by a severe operation
# ::tok it was reinforced by the accident that lloyd george the only other man who could be cast as national saviour was temporarily knocked out by a severe operation
# ::alignments 27-28|0.0.1.3 26-27|0.0.1.3.0 22-23|0.0.1 21-22|0.0.1.2 19-20|0.0.1.1 18-19|0.0.1.1.0 16-17|0.0 14-15|0 12-13|0.0.0 11-12|0.0.0.0 10-11|0.0.0.1 5-6|0.0.1.0.0.0 2-3|0.0.1.0.0 0-1|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:30.483
# ::node	0	possible	14-15
# ::node	0.0	cast-01	16-17
# ::node	0.0.0	man	12-13
# ::node	0.0.0.0	other	11-12
# ::node	0.0.0.1	only	10-11
# ::node	0.0.1	knock-01	22-23
# ::node	0.0.1.0	it	0-1
# ::node	0.0.1.0.0	reinforce-01	2-3
# ::node	0.0.1.0.0.0	accident	5-6
# ::node	0.0.1.1	saviour	19-20
# ::node	0.0.1.1.0	nation	18-19
# ::node	0.0.1.2	temporary	21-22
# ::node	0.0.1.3	operation	27-28
# ::node	0.0.1.3.0	severe	26-27
# ::root	0	possible
# ::edge	cast-01	ARG1	man	0.0	0.0.0	
# ::edge	cast-01	purpose	knock-01	0.0	0.0.1	
# ::edge	knock-01	ARG0	it	0.0.1	0.0.1.0	
# ::edge	knock-01	ARG1	saviour	0.0.1	0.0.1.1	
# ::edge	knock-01	duration	temporary	0.0.1	0.0.1.2	
# ::edge	knock-01	time	operation	0.0.1	0.0.1.3	
# ::edge	man	mod	only	0.0.0	0.0.0.1	
# ::edge	man	mod	other	0.0.0	0.0.0.0	
# ::edge	operation	mod	severe	0.0.1.3	0.0.1.3.0	
# ::edge	possible	domain	cast-01	0	0.0	
# ::edge	reinforce-01	ARG0	accident	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	reinforce-01	ARG1	it	0.0.1.0.0	0.0.1.0	
# ::edge	saviour	mod	nation	0.0.1.1	0.0.1.1.0	
(p / possible 
      :domain (c / cast-01 
            :ARG1 (m / man 
                  :mod (o2 / other) 
                  :mod (o3 / only)) 
            :purpose (k / knock-01 
                  :ARG0 (i / it 
                        :ARG1-of (r / reinforce-01 
                              :ARG0 (a / accident))) 
                  :ARG1 (s2 / saviour 
                        :mod (n / nation)) 
                  :duration (t / temporary) 
                  :time (o / operation 
                        :mod (s / severe)))))

# ::snt these have included family breakdown lifethreatening illness failure of nerve and serious accidents concerning ten of the small fulltime team or those closest to them
# ::tok these have included family breakdown lifethreatening illness failure of nerve and serious accidents concerning ten of the small fulltime team or those closest to them
# ::alignments 22-23|0.1.2.0 20-21|0.1.2 19-20|0.1.2.1 17-18|0.1.2.1.0 13-14|0 12-13|0.0 11-12|0.0.0 10-11|0.1 9-10|0.1.1 7-8|0.1.0 6-7|0.1.0.0 4-5|0.1.0.1.0 3-4|0.1.0.1.0.0 2-3|0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:30.770
# ::node	0	concern-02	13-14
# ::node	0.0	accident	12-13
# ::node	0.0.0	serious	11-12
# ::node	0.1	and	10-11
# ::node	0.1.0	fail-01	7-8
# ::node	0.1.0.0	illness	6-7
# ::node	0.1.0.1	include-01	2-3
# ::node	0.1.0.1.0	break-12	4-5
# ::node	0.1.0.1.0.0	family	3-4
# ::node	0.1.1	nerve	9-10
# ::node	0.1.2	or	20-21
# ::node	0.1.2.0	close-41	22-23
# ::node	0.1.2.1	team	19-20
# ::node	0.1.2.1.0	small	17-18
# ::root	0	concern-02
# ::edge	accident	mod	serious	0.0	0.0.0	
# ::edge	and	op1	nerve	0.1	0.1.1	
# ::edge	and	op2	or	0.1	0.1.2	
# ::edge	break-12	ARG1	family	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	close-41	ARG0	or	0.1.2.0	0.1.2	
# ::edge	concern-02	ARG0	accident	0	0.0	
# ::edge	concern-02	ARG1	and	0	0.1	
# ::edge	fail-01	ARG0	illness	0.1.0	0.1.0.0	
# ::edge	fail-01	ARG1	and	0.1.0	0.1	
# ::edge	include-01	ARG1	break-12	0.1.0.1	0.1.0.1.0	
# ::edge	include-01	purpose	fail-01	0.1.0.1	0.1.0	
# ::edge	or	op1	team	0.1.2	0.1.2.1	
# ::edge	team	mod	small	0.1.2.1	0.1.2.1.0	
(c2 / concern-02 
      :ARG0 (a / accident 
            :mod (s2 / serious)) 
      :ARG1 (a2 / and 
            :ARG1-of (f / fail-01 
                  :ARG0 (i / illness) 
                  :purpose-of (i2 / include-01 
                        :ARG1 (b / break-12 
                              :ARG1 (f2 / family)))) 
            :op1 (n / nerve) 
            :op2 (o / or 
                  :ARG0-of (c / close-41) 
                  :op1 (t / team 
                        :mod (s / small)))))

# ::snt the domestic accident which left warringtons paul bishop needing 20 stitches in a gashed arm only hours before the second silk cut challenge cup semifinal could have proved far more costly than the price of a new window pane
# ::tok the domestic accident which left warringtons paul bishop needing 20 stitches in a gashed arm only hours before the second silk cut challenge cup semifinal could have proved far more costly than the price of a new window pane
# ::alignments 37-38|0.0.1.0.0 36-37|0.2.0.2 33-34|0.0.1.0+0.0.1 30-31|0.1 28-29|0.0.2 27-28|0.0 25-26|0 23-24|0.2.0.0 22-23|0.2.0 17-18|0.2 16-17|0.2.1.1+0.2.1 15-16|0.2.1.0 14-15|0.0.3 9-10|0.0.0 2-3|0.2.0.1.0 1-2|0.2.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:31.105
# ::node	0	possible	25-26
# ::node	0.0	prove-01	27-28
# ::node	0.0.0	20	9-10
# ::node	0.0.1	thing	33-34
# ::node	0.0.1.0	price-01	33-34
# ::node	0.0.1.0.0	window	37-38
# ::node	0.0.2	far	28-29
# ::node	0.0.3	arm	14-15
# ::node	0.1	costly	30-31
# ::node	0.2	before	17-18
# ::node	0.2.0	challenge-01	22-23
# ::node	0.2.0.0	cup	23-24
# ::node	0.2.0.1	domestic	1-2
# ::node	0.2.0.1.0	accident	2-3
# ::node	0.2.0.2	new	36-37
# ::node	0.2.1	temporal-quantity	16-17
# ::node	0.2.1.0	only	15-16
# ::node	0.2.1.1	hour	16-17
# ::root	0	possible
# ::edge	accident	mod	domestic	0.2.0.1.0	0.2.0.1	
# ::edge	arm	op1	prove-01	0.0.3	0.0	
# ::edge	before	op1	challenge-01	0.2	0.2.0	
# ::edge	challenge-01	ARG0	cup	0.2.0	0.2.0.0	
# ::edge	challenge-01	ARG1	domestic	0.2.0	0.2.0.1	
# ::edge	costly	mod	possible	0.1	0	
# ::edge	new	op1	challenge-01	0.2.0.2	0.2.0	
# ::edge	possible	domain	prove-01	0	0.0	
# ::edge	possible	time	before	0	0.2	
# ::edge	price-01	ARG1	window	0.0.1.0	0.0.1.0.0	
# ::edge	price-01	ARG2	thing	0.0.1.0	0.0.1	
# ::edge	prove-01	ARG0	20	0.0	0.0.0	
# ::edge	prove-01	ARG1	thing	0.0	0.0.1	
# ::edge	prove-01	manner	far	0.0	0.0.2	
# ::edge	temporal-quantity	mod	only	0.2.1	0.2.1.0	
# ::edge	temporal-quantity	time	before	0.2.1	0.2	
# ::edge	temporal-quantity	unit	hour	0.2.1	0.2.1.1	
(p3 / possible 
      :domain (p2 / prove-01 
            :ARG0 20 
            :ARG1 (t / thing 
                  :ARG2-of (p / price-01 
                        :ARG1 (w / window))) 
            :manner (f / far) 
            :op-of (a / arm)) 
      :mod-of (c / costly) 
      :time (b / before 
            :op1 (c3 / challenge-01 
                  :ARG0 (c2 / cup) 
                  :ARG1 (d / domestic 
                        :mod-of (a2 / accident)) 
                  :op-of (n / new)) 
            :time-of (t2 / temporal-quantity 
                  :mod (o / only) 
                  :unit (h / hour))))

# ::snt an illness or an accident leading to a disability can affect ones wellbeing very profoundly
# ::tok an illness or an accident leading to a disability can affect ones wellbeing very profoundly
# ::alignments 14-15|0.0.0.1.0.0.0 13-14|0.0.0.1.0.0 11-12|0.0.1 10-11|0.0 9-10|0 8-9|0.0.0.1.0.1 5-6|0.0.0.1.0 4-5|0.0.0.1 2-3|0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:31.183
# ::node	0	possible	9-10
# ::node	0.0	affect-01	10-11
# ::node	0.0.0	or	2-3
# ::node	0.0.0.0	illness	1-2
# ::node	0.0.0.1	accident	4-5
# ::node	0.0.0.1.0	lead-01	5-6
# ::node	0.0.0.1.0.0	very	13-14
# ::node	0.0.0.1.0.0.0	profound	14-15
# ::node	0.0.0.1.0.1	disability	8-9
# ::node	0.0.1	one	11-12
# ::root	0	possible
# ::edge	affect-01	ARG0	or	0.0	0.0.0	
# ::edge	affect-01	ARG1	one	0.0	0.0.1	
# ::edge	lead-01	ARG0	very	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	lead-01	ARG1	accident	0.0.0.1.0	0.0.0.1	
# ::edge	lead-01	ARG4	disability	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	or	op1	illness	0.0.0	0.0.0.0	
# ::edge	or	op2	accident	0.0.0	0.0.0.1	
# ::edge	possible	domain	affect-01	0	0.0	
# ::edge	profound	degree	very	0.0.0.1.0.0.0	0.0.0.1.0.0	
(p2 / possible 
      :domain (a / affect-01 
            :ARG0 (o2 / or 
                  :op1 (i / illness) 
                  :op2 (a2 / accident 
                        :ARG1-of (l / lead-01 
                              :ARG0 (v / very 
                                    :degree-of (p / profound)) 
                              :ARG4 (d / disability)))) 
            :ARG1 (o / one)))

# ::snt her son william was involved in an accident with a lorry outside his home last year and she is worried that there will be more children hurt if the grass play area disappears
# ::tok her son william was involved in an accident with a lorry outside his home last year and she is worried that there will be more children hurt if the grass play area disappears
# ::alignments 32-33|0 31-32|0.0 30-31|0.0.0 29-30|0.0.0.0 26-27|0.1 25-26|0.1.0 19-20|0.1.0.0.0.2.0 17-18|0.1.0.0.0.2.0.0 16-17|0.1.0.0.0.2.0.1 15-16|0.1.0.0.0.2 14-15|0.1.0.0.0.2.1 13-14|0.1.0.0.0.0 11-12|0.1.0.0.0.0.0 7-8|0.1.0.0.0.1 4-5|0.1.0.0.0 1-2|0.1.0.0.1+0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:31.401
# ::node	0	disappear-01	32-33
# ::node	0.0	area	31-32
# ::node	0.0.0	play-01	30-31
# ::node	0.0.0.0	grass-roots	29-30
# ::node	0.1	hurt-01	26-27
# ::node	0.1.0	child	25-26
# ::node	0.1.0.0	have-rel-role-91	1-2
# ::node	0.1.0.0.0	involve-01	4-5
# ::node	0.1.0.0.0.0	home	13-14
# ::node	0.1.0.0.0.0.0	outside	11-12
# ::node	0.1.0.0.0.1	accident	7-8
# ::node	0.1.0.0.0.2	year	15-16
# ::node	0.1.0.0.0.2.0	worry-02	19-20
# ::node	0.1.0.0.0.2.0.0	she	17-18
# ::node	0.1.0.0.0.2.0.1	and	16-17
# ::node	0.1.0.0.0.2.1	last	14-15
# ::node	0.1.0.0.1	son	1-2
# ::root	0	disappear-01
# ::edge	and	op1	worry-02	0.1.0.0.0.2.0.1	0.1.0.0.0.2.0	
# ::edge	area	purpose	play-01	0.0	0.0.0	
# ::edge	disappear-01	ARG0	area	0	0.0	
# ::edge	have-rel-role-91	ARG1	child	0.1.0.0	0.1.0	
# ::edge	have-rel-role-91	ARG2	son	0.1.0.0	0.1.0.0.1	
# ::edge	hurt-01	ARG0	child	0.1	0.1.0	
# ::edge	hurt-01	ARG1	disappear-01	0.1	0	
# ::edge	involve-01	ARG0	home	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	involve-01	ARG1	have-rel-role-91	0.1.0.0.0	0.1.0.0	
# ::edge	involve-01	ARG2	accident	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	involve-01	time	year	0.1.0.0.0	0.1.0.0.0.2	
# ::edge	outside	op1	home	0.1.0.0.0.0.0	0.1.0.0.0.0	
# ::edge	play-01	ARG1	grass-roots	0.0.0	0.0.0.0	
# ::edge	worry-02	ARG0	year	0.1.0.0.0.2.0	0.1.0.0.0.2	
# ::edge	worry-02	ARG1	she	0.1.0.0.0.2.0	0.1.0.0.0.2.0.0	
# ::edge	year	mod	last	0.1.0.0.0.2	0.1.0.0.0.2.1	
(d / disappear-01 
      :ARG0 (a / area 
            :purpose (p / play-01 
                  :ARG1 (g / grass-roots))) 
      :ARG1-of (h / hurt-01 
            :ARG0 (c / child 
                  :ARG1-of (h3 / have-rel-role-91 
                        :ARG1-of (i / involve-01 
                              :ARG0 (h2 / home 
                                    :op-of (o / outside)) 
                              :ARG2 (a3 / accident) 
                              :time (y / year 
                                    :ARG0-of (w / worry-02 
                                          :ARG1 (s / she) 
                                          :op-of (a2 / and)) 
                                    :mod (l / last))) 
                        :ARG2 (s2 / son)))))

# ::snt rain asked hasnt he got another song he could sing instead  as if he had heard her cowboy cut short the first song and his twangy guitar brought them one about the siege of barnsbury in which all ended happily with the s a s swinging through the window and saving everybody except those who got killed by accident
# ::tok rain asked hasnt he got another song he could sing instead as if he had heard her cowboy cut short the first song and his twangy guitar brought them one about the siege of barnsbury in which all ended happily with the s a s swinging through the window and saving everybody except those who got killed by accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:31.402
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt even the world bank regularly despatches different missions to an individual country unaware of each others presence or who may meet by accident in a permanent secretarys outer office
# ::tok even the world bank regularly despatches different missions to an individual country unaware of each others presence or who may meet by accident in a permanent secretarys outer office
# ::alignments 28-29|0.1.0.1.0 27-28|0.1.0.1 25-26|0.1.0.1.0.1 22-23|0.1.0.1.0.0 19-20|0.3.0+0.3 17-18|0 16-17|0.2 15-16|0.2.0 14-15|0.2.1 11-12|0.2.1.0 10-11|0.2.1.0.0 7-8|0.1 6-7|0.1.0 4-5|0.0 3-4|0.1.0.0 2-3|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:31.636
# ::node	0	or	17-18
# ::node	0.0	regular	4-5
# ::node	0.1	mission	7-8
# ::node	0.1.0	differ-02	6-7
# ::node	0.1.0.0	bank	3-4
# ::node	0.1.0.0.0	world	2-3
# ::node	0.1.0.1	outer	27-28
# ::node	0.1.0.1.0	office	28-29
# ::node	0.1.0.1.0.0	accident	22-23
# ::node	0.1.0.1.0.1	permanent	25-26
# ::node	0.2	presence	16-17
# ::node	0.2.0	other	15-16
# ::node	0.2.1	each	14-15
# ::node	0.2.1.0	country	11-12
# ::node	0.2.1.0.0	individual	10-11
# ::node	0.3	date-entity	19-20
# ::node	0.3.0	5	19-20
# ::root	0	or
# ::edge	accident	location	office	0.1.0.1.0.0	0.1.0.1.0	
# ::edge	bank	mod	world	0.1.0.0	0.1.0.0.0	
# ::edge	country	mod	each	0.2.1.0	0.2.1	
# ::edge	country	mod	individual	0.2.1.0	0.2.1.0.0	
# ::edge	date-entity	month	5	0.3	0.3.0	
# ::edge	differ-02	ARG0	bank	0.1.0	0.1.0.0	
# ::edge	differ-02	ARG1	mission	0.1.0	0.1	
# ::edge	office	mod	outer	0.1.0.1.0	0.1.0.1	
# ::edge	office	mod	permanent	0.1.0.1.0	0.1.0.1.0.1	
# ::edge	or	mod	regular	0	0.0	
# ::edge	or	op1	mission	0	0.1	
# ::edge	or	op2	presence	0	0.2	
# ::edge	or	op3	date-entity	0	0.3	
# ::edge	outer	op1	differ-02	0.1.0.1	0.1.0	
# ::edge	presence	mod	each	0.2	0.2.1	
# ::edge	presence	mod	other	0.2	0.2.0	
(o3 / or 
      :mod (r / regular) 
      :op1 (m / mission 
            :ARG1-of (d2 / differ-02 
                  :ARG0 (b / bank 
                        :mod (w / world)) 
                  :op-of (o2 / outer 
                        :mod-of (o / office 
                              :location-of (a / accident) 
                              :mod (p / permanent))))) 
      :op2 (p2 / presence 
            :mod (o4 / other) 
            :mod (e / each 
                  :mod-of (c / country 
                        :mod (i / individual)))) 
      :op3 (d / date-entity 
            :month 5))

# ::snt one of the more intriguing puzzles is that american courts have not tried to emulate the widespread continental option of strict liability for motoring accidents
# ::tok one of the more intriguing puzzles is that american courts have not tried to emulate the widespread continental option of strict liability for motoring accidents
# ::alignments 24-25|0.1 23-24|0 21-22|0.0 20-21|0.0.0 18-19|0.0.1 17-18|0.0.1.1 16-17|0.0.1.2 14-15|0.0.1.0 12-13|0.0.1.0.1 9-10|0.0.1.0.0 8-9|0.0.1.0.0.0.0.0+0.0.1.0.0.0.0+0.0.1.0.0.0 5-6|0.0.1.0.1.0 4-5|0.0.1.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:31.803
# ::node	0	motor	23-24
# ::node	0.0	liability	21-22
# ::node	0.0.0	strict	20-21
# ::node	0.0.1	option	18-19
# ::node	0.0.1.0	emulate-01	14-15
# ::node	0.0.1.0.0	court	9-10
# ::node	0.0.1.0.0.0	country	8-9
# ::node	0.0.1.0.0.0.0	name	8-9
# ::node	0.0.1.0.0.0.0.0	"America"	8-9
# ::node	0.0.1.0.1	try-01	12-13
# ::node	0.0.1.0.1.0	puzzle-01	5-6
# ::node	0.0.1.0.1.0.0	intrigue-01	4-5
# ::node	0.0.1.1	continent	17-18
# ::node	0.0.1.2	wide	16-17
# ::node	0.1	accident	24-25
# ::root	0	motor
(m / motor 
      :location-of (l / liability 
            :mod (s / strict) 
            :mod-of (o / option 
                  :ARG1-of (e / emulate-01 
                        :ARG0 (c2 / court 
                              :mod (c3 / country 
                                    :name (n / name 
                                          :op1 "America"))) 
                        :ARG1-of (t / try-01 
                              :ARG0 (p / puzzle-01 
                                    :ARG1-of (i / intrigue-01)))) 
                  :mod (c / continent) 
                  :mod (w / wide))) 
      :mod-of (a / accident))

# ::snt   all of them when they saw the lines after the accident immediately knew what had happened
# ::tok all of them when they saw the lines after the accident immediately knew what had happened
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:31.804
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt  delaney helped steer the yard to wins in virtually every major jumping event including a champion hurdle with celtic shot the spring after winters accident
# ::tok delaney helped steer the yard to wins in virtually every major jumping event including a champion hurdle with celtic shot the spring after winters accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:31.805
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt as a reporter i was able to tell them that four or five years ago it was indeed common to pick up reports from the local police stations of motorcyclists involved in accidents
# ::tok as a reporter i was able to tell them that four or five years ago it was indeed common to pick up reports from the local police stations of motorcyclists involved in accidents
# ::alignments 32-33|0.2.0 30-31|0.2 27-28|0.0 26-27|0.0.0 25-26|0.0.1 22-23|0 20-21|0.1 18-19|0.1.1 17-18|0.1.1.1 15-16|0.1.0 13-14|0.1.1.0.0.0.0.1.1+0.1.1.0.0.0.0.1 12-13|0.1.1.0.0.0.0.1.0 11-12|0.1.1.0.0.0.0 10-11|0.1.1.0.0.0.0.0 7-8|0.1.1.0 5-6|0.1.1.0.1 3-4|0.1.1.0.0 2-3|0.1.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:31.971
# ::node	0	report-01	22-23
# ::node	0.0	station	27-28
# ::node	0.0.0	police	26-27
# ::node	0.0.1	local	25-26
# ::node	0.1	pick-01	20-21
# ::node	0.1.0	it	15-16
# ::node	0.1.1	common	18-19
# ::node	0.1.1.0	tell-01	7-8
# ::node	0.1.1.0.0	i	3-4
# ::node	0.1.1.0.0.0	report-01	2-3
# ::node	0.1.1.0.0.0.0	or	11-12
# ::node	0.1.1.0.0.0.0.0	4	10-11
# ::node	0.1.1.0.0.0.0.1	temporal-quantity	13-14
# ::node	0.1.1.0.0.0.0.1.0	5	12-13
# ::node	0.1.1.0.0.0.0.1.1	year	13-14
# ::node	0.1.1.0.1	possible	5-6
# ::node	0.1.1.1	indeed	17-18
# ::node	0.2	involve-01	30-31
# ::node	0.2.0	accident	32-33
# ::root	0	report-01
# ::edge	common	domain	pick-01	0.1.1	0.1	
# ::edge	common	mod	indeed	0.1.1	0.1.1.1	
# ::edge	involve-01	ARG1	report-01	0.2	0	
# ::edge	involve-01	ARG2	accident	0.2	0.2.0	
# ::edge	or	op1	4	0.1.1.0.0.0.0	0.1.1.0.0.0.0.0	
# ::edge	or	op2	temporal-quantity	0.1.1.0.0.0.0	0.1.1.0.0.0.0.1	
# ::edge	pick-01	ARG0	it	0.1	0.1.0	
# ::edge	pick-01	ARG1	report-01	0.1	0	
# ::edge	possible	domain	tell-01	0.1.1.0.1	0.1.1.0	
# ::edge	report-01	ARG0	i	0.1.1.0.0.0	0.1.1.0.0	
# ::edge	report-01	ARG1	or	0.1.1.0.0.0	0.1.1.0.0.0.0	
# ::edge	report-01	ARG1	station	0	0.0	
# ::edge	station	mod	local	0.0	0.0.1	
# ::edge	station	mod	police	0.0	0.0.0	
# ::edge	tell-01	ARG0	i	0.1.1.0	0.1.1.0.0	
# ::edge	tell-01	ARG1	common	0.1.1.0	0.1.1	
# ::edge	temporal-quantity	quant	5	0.1.1.0.0.0.0.1	0.1.1.0.0.0.0.1.0	
# ::edge	temporal-quantity	unit	year	0.1.1.0.0.0.0.1	0.1.1.0.0.0.0.1.1	
(r / report-01 
      :ARG1 (s / station 
            :mod (p / police) 
            :mod (l / local)) 
      :ARG1-of (p2 / pick-01 
            :ARG0 (i3 / it) 
            :domain-of (c / common 
                  :ARG1-of (t2 / tell-01 
                        :ARG0 (i4 / i 
                              :ARG0-of (r2 / report-01 
                                    :ARG1 (o / or 
                                          :op1 4 
                                          :op2 (t / temporal-quantity 
                                                :quant 5 
                                                :unit (y / year))))) 
                        :domain-of (p3 / possible)) 
                  :mod (i2 / indeed))) 
      :ARG1-of (i / involve-01 
            :ARG2 (a / accident)))

# ::snt accidents more commonly occur in dark stables than those that have a glimmer of light
# ::tok accidents more commonly occur in dark stables than those that have a glimmer of light
# ::alignments 14-15|0.1 5-6|0.1.0 3-4|0 2-3|0.2 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:31.988
# ::node	0	occur-01	3-4
# ::node	0.0	accident	0-1
# ::node	0.1	light	14-15
# ::node	0.1.0	dark	5-6
# ::node	0.2	common	2-3
# ::root	0	occur-01
# ::edge	dark	poss	light	0.1.0	0.1	
# ::edge	occur-01	ARG0	accident	0	0.0	
# ::edge	occur-01	ARG1	light	0	0.1	
# ::edge	occur-01	mod	common	0	0.2	
(o / occur-01 
      :ARG0 (a / accident) 
      :ARG1 (l / light 
            :poss-of (d / dark)) 
      :mod (c / common))

# ::snt   the trial of a man whose alleged careless driving on oxfords southern bypass last august led to a fatal traffic accident was adjourned after three hours of evidence at the request of his solicitor
# ::tok the trial of a man whose alleged careless driving on oxfords southern bypass last august led to a fatal traffic accident was adjourned after three hours of evidence at the request of his solicitor
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:31.989
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt plus up to 80 payable for every day you are in hospital  due to an accident for any length of time from one day up to  100 days, to provide an even higher level of protection for our customers we will double the amount payable on death after an accident if both husband and wife die as the result of the same accident, and you will also receive a special convalescence payment of up to 800 if you remain in hospital for 10 or more days after an accident
# ::tok plus up to 80 payable for every day you are in hospital due to an accident for any length of time from one day up to 100 days , to provide an even higher level of protection for our customers we will double the amount payable on death after an accident if both husband and wife die as the result of the same accident , and you will also receive a special convalescence payment of up to 800 if you remain in hospital for 10 or more days after an accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:31.990
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt english lawmakers in particular have long been uneasy about reconciling the compensatory purpose of damages with ignoring the substantial benefits to accident victims from public sources under expanding social security programmes
# ::tok english lawmakers in particular have long been uneasy about reconciling the compensatory purpose of damages with ignoring the substantial benefits to accident victims from public sources under expanding social security programmes
# ::alignments 30-31|0.3.1.1.0 29-30|0.3.1.1.0.0 28-29|0.3.1.1.0.0.0 27-28|0.3.1.1 25-26|0.3.1.1.0.1 24-25|0.3.1.1.0.1.0 22-23|0.1 21-22|0.1.0 19-20|0 18-19|0.4 16-17|0.3 14-15|0.3.1 12-13|0.3.0 7-8|0.2 3-4|0.3.1.0 0-1|0.0.0.0+0.0.0+0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:32.229
# ::node	0	benefit-01	19-20
# ::node	0.0	language	0-1
# ::node	0.0.0	name	0-1
# ::node	0.0.0.0	"English"	0-1
# ::node	0.1	victim	22-23
# ::node	0.1.0	accident	21-22
# ::node	0.2	uneasy-41	7-8
# ::node	0.3	ignore-01	16-17
# ::node	0.3.0	purpose	12-13
# ::node	0.3.1	damage-01	14-15
# ::node	0.3.1.0	particular	3-4
# ::node	0.3.1.1	expand-01	27-28
# ::node	0.3.1.1.0	program	30-31
# ::node	0.3.1.1.0.0	security	29-30
# ::node	0.3.1.1.0.0.0	society	28-29
# ::node	0.3.1.1.0.1	source	25-26
# ::node	0.3.1.1.0.1.0	public	24-25
# ::node	0.4	substantial	18-19
# ::root	0	benefit-01
# ::edge	benefit-01	ARG0	language	0	0.0	
# ::edge	benefit-01	ARG1	victim	0	0.1	
# ::edge	benefit-01	mod	substantial	0	0.4	
# ::edge	damage-01	ARG0	particular	0.3.1	0.3.1.0	
# ::edge	damage-01	ARG1	ignore-01	0.3.1	0.3	
# ::edge	expand-01	ARG0	damage-01	0.3.1.1	0.3.1	
# ::edge	expand-01	ARG1	program	0.3.1.1	0.3.1.1.0	
# ::edge	ignore-01	ARG0	purpose	0.3	0.3.0	
# ::edge	ignore-01	ARG1	benefit-01	0.3	0	
# ::edge	language	name	name	0.0	0.0.0	
# ::edge	name	op1	"English"	0.0.0	0.0.0.0	
# ::edge	program	mod	security	0.3.1.1.0	0.3.1.1.0.0	
# ::edge	program	mod	source	0.3.1.1.0	0.3.1.1.0.1	
# ::edge	security	mod	society	0.3.1.1.0.0	0.3.1.1.0.0.0	
# ::edge	source	mod	public	0.3.1.1.0.1	0.3.1.1.0.1.0	
# ::edge	uneasy-41	ARG1	benefit-01	0.2	0	
# ::edge	victim	mod	accident	0.1	0.1.0	
(b / benefit-01 
      :ARG0 (l / language 
            :name (n / name 
                  :op1 "English")) 
      :ARG1 (v / victim 
            :mod (a / accident)) 
      :ARG1-of (u / uneasy-41) 
      :ARG1-of (i / ignore-01 
            :ARG0 (p3 / purpose) 
            :ARG1-of (d / damage-01 
                  :ARG0 (p4 / particular) 
                  :ARG0-of (e / expand-01 
                        :ARG1 (p / program 
                              :mod (s / security 
                                    :mod (s2 / society)) 
                              :mod (s3 / source 
                                    :mod (p2 / public)))))) 
      :mod (s4 / substantial))

# ::snt 2 pamella bordes was in a car accident
# ::tok 2 pamella bordes was in a car accident
# ::alignments 7-8|0 6-7|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:32.236
# ::node	0	accident	7-8
# ::node	0.0	car	6-7
# ::node	0.0.0	2	0-1
# ::root	0	accident
# ::edge	2	op1	car	0.0.0	0.0	
# ::edge	accident	location	car	0	0.0	
(a / accident 
      :location (c / car 
            :op-of 2))

# ::snt in it mr crosby also warns ambulance personnel that they would be liable to civil prosecution for damages from both patients and other members of the public if there is an accident
# ::tok in it mr crosby also warns ambulance personnel that they would be liable to civil prosecution for damages from both patients and other members of the public if there is an accident
# ::alignments 31-32|0.1.0.0.0.0.1 26-27|0.1.0.0.0.0 23-24|0.1.0.0.0.0.0.0+0.1.0.0.0.0.0 22-23|0.1.1 21-22|0.1.0.0.2 20-21|0.1.0.0.0.1+0.1.0.0.0 19-20|0.1.0.1 17-18|0.1.0.0.2.0 15-16|0.1.0.0 14-15|0.1.0.0.1 12-13|0.1 9-10|0.1.0 7-8|0.0 6-7|0.0.0 5-6|0 4-5|0.3 1-2|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:32.665
# ::node	0	warn-01	5-6
# ::node	0.0	personnel	7-8
# ::node	0.0.0	ambulance	6-7
# ::node	0.1	liable-41	12-13
# ::node	0.1.0	they	9-10
# ::node	0.1.0.0	prosecute-01	15-16
# ::node	0.1.0.0.0	have-rel-role-91	20-21
# ::node	0.1.0.0.0.0	public	26-27
# ::node	0.1.0.0.0.0.0	have-org-role-91	23-24
# ::node	0.1.0.0.0.0.0.0	member	23-24
# ::node	0.1.0.0.0.0.1	accident	31-32
# ::node	0.1.0.0.0.1	patient	20-21
# ::node	0.1.0.0.1	civil	14-15
# ::node	0.1.0.0.2	and	21-22
# ::node	0.1.0.0.2.0	damage-01	17-18
# ::node	0.1.0.1	both	19-20
# ::node	0.1.1	other	22-23
# ::node	0.2	it	1-2
# ::node	0.3	also	4-5
# ::root	0	warn-01
# ::edge	and	op1	prosecute-01	0.1.0.0.2	0.1.0.0	
# ::edge	and	op2	damage-01	0.1.0.0.2	0.1.0.0.2.0	
# ::edge	have-org-role-91	ARG1	public	0.1.0.0.0.0.0	0.1.0.0.0.0	
# ::edge	have-org-role-91	ARG2	member	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	have-rel-role-91	ARG1	public	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	have-rel-role-91	ARG2	patient	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	liable-41	ARG0	they	0.1	0.1.0	
# ::edge	liable-41	ARG1	other	0.1	0.1.1	
# ::edge	personnel	mod	ambulance	0.0	0.0.0	
# ::edge	prosecute-01	ARG0	they	0.1.0.0	0.1.0	
# ::edge	prosecute-01	ARG1	have-rel-role-91	0.1.0.0	0.1.0.0.0	
# ::edge	prosecute-01	mod	civil	0.1.0.0	0.1.0.0.1	
# ::edge	public	op1	accident	0.1.0.0.0.0	0.1.0.0.0.0.1	
# ::edge	they	mod	both	0.1.0	0.1.0.1	
# ::edge	warn-01	ARG0	personnel	0	0.0	
# ::edge	warn-01	ARG1	liable-41	0	0.1	
# ::edge	warn-01	ARG2	it	0	0.2	
# ::edge	warn-01	mod	also	0	0.3	
(w / warn-01 
      :ARG0 (p4 / personnel 
            :mod (a3 / ambulance)) 
      :ARG1 (l / liable-41 
            :ARG0 (t / they 
                  :ARG0-of (p3 / prosecute-01 
                        :ARG1 (h2 / have-rel-role-91 
                              :ARG1 (p / public 
                                    :ARG1-of (h / have-org-role-91 
                                          :ARG2 (m / member)) 
                                    :op1 (a / accident)) 
                              :ARG2 (p2 / patient)) 
                        :mod (c / civil) 
                        :op-of (a2 / and 
                              :op1 (d / damage-01))) 
                  :mod (b / both)) 
            :ARG1 (o / other)) 
      :ARG2 (i / it) 
      :mod (a4 / also))

# ::snt all those who went through the ordeal had at some time survived an accident or illness when their lives had been despaired of
# ::tok all those who went through the ordeal had at some time survived an accident or illness when their lives had been despaired of
# ::alignments 21-22|0.0.1.0 18-19|0.0.1.0.0 15-16|0.0.1.2 14-15|0.0.1 13-14|0.0.1.1 11-12|0.0 10-11|0.0.0 9-10|0.0.0.0 6-7|0 0-1|0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:32.843
# ::node	0	ordeal	6-7
# ::node	0.0	survive-01	11-12
# ::node	0.0.0	time	10-11
# ::node	0.0.0.0	some	9-10
# ::node	0.0.1	or	14-15
# ::node	0.0.1.0	despair-01	21-22
# ::node	0.0.1.0.0	life	18-19
# ::node	0.0.1.1	accident	13-14
# ::node	0.0.1.2	illness	15-16
# ::node	0.0.2	all	0-1
# ::root	0	ordeal
(o2 / ordeal 
      :location-of (s / survive-01 
            :ARG0 (t / time 
                  :quant (s2 / some)) 
            :ARG1 (o / or 
                  :ARG0-of (d / despair-01 
                        :ARG1 (l / life)) 
                  :op1 (a / accident) 
                  :op2 (i / illness)) 
            :ARG2 (a2 / all)))

# ::snt a motorcyclist has been taken to hospital in north oxfordshire tonight following an accident on the a thirty four near enstone
# ::tok a motorcyclist has been taken to hospital in north oxfordshire tonight following an accident on the a thirty four near enstone
# ::alignments 19-20|0 18-19|0.0.1 13-14|0.0.0.0.0 10-11|0.0.0.0 8-9|0.0.0 6-7|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:32.871
# ::node	0	near	19-20
# ::node	0.0	hospital	6-7
# ::node	0.0.0	north	8-9
# ::node	0.0.0.0	tonight	10-11
# ::node	0.0.0.0.0	accident	13-14
# ::node	0.0.1	4	18-19
# ::root	0	near
(n / near 
      :mod-of (h / hospital 
            :location (n2 / north 
                  :part-of (t / tonight 
                        :name (a / accident))) 
            :mod 4))

# ::snt in 1998 there were 2537 accidents compared with last years tally of 2612 dash
# ::tok in 1998 there were 2537 accidents compared with last years tally of 2612 dash
# ::alignments 12-13|0.2.0+0.2 10-11|0 9-10|0.0.0+0.0 8-9|0.0.0.0 6-7|0.1 5-6|0.1.1 4-5|0.1.1.0.0+0.1.1.0 1-2|0.1.0.0+0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:33.023
# ::node	0	tally-01	10-11
# ::node	0.0	temporal-quantity	9-10
# ::node	0.0.0	year	9-10
# ::node	0.0.0.0	last	8-9
# ::node	0.1	compare-01	6-7
# ::node	0.1.0	date-entity	1-2
# ::node	0.1.0.0	1998	1-2
# ::node	0.1.1	accident	5-6
# ::node	0.1.1.0	date-entity	4-5
# ::node	0.1.1.0.0	2537	4-5
# ::node	0.2	date-entity	12-13
# ::node	0.2.0	2612	12-13
# ::root	0	tally-01
# ::edge	accident	time	date-entity	0.1.1	0.1.1.0	
# ::edge	compare-01	ARG0	date-entity	0.1	0.1.0	
# ::edge	compare-01	ARG1	accident	0.1	0.1.1	
# ::edge	compare-01	ARG2	tally-01	0.1	0	
# ::edge	date-entity	year	1998	0.1.0	0.1.0.0	
# ::edge	date-entity	year	2537	0.1.1.0	0.1.1.0.0	
# ::edge	date-entity	year	2612	0.2	0.2.0	
# ::edge	tally-01	ARG1	temporal-quantity	0	0.0	
# ::edge	tally-01	time	date-entity	0	0.2	
# ::edge	temporal-quantity	unit	year	0.0	0.0.0	
# ::edge	year	mod	last	0.0.0	0.0.0.0	
(t / tally-01 
      :ARG1 (t2 / temporal-quantity 
            :unit (y / year 
                  :mod (l / last))) 
      :ARG2-of (c / compare-01 
            :ARG0 (d3 / date-entity 
                  :year 1998) 
            :ARG1 (a / accident 
                  :time (d2 / date-entity 
                        :year 2537))) 
      :time (d / date-entity 
            :year 2612))

# ::snt this year in its plan of work for 198990 and beyond the governments health and safety commission identified management failure as the main cause of accidents at work
# ::tok this year in its plan of work for 198990 and beyond the governments health and safety commission identified management failure as the main cause of accidents at work
# ::alignments 25-26|0.0 23-24|0 22-23|0.1.0.0.0 19-20|0.1.1 18-19|0.1.1.0.0 17-18|0.1 16-17|0.1.0 15-16|0.1.0.0 14-15|0.1.1.0 13-14|0.1.1.0.2.1 12-13|0.1.1.0.2.1.0.0+0.1.1.0.2.1.0 10-11|0.1.1.0.2 9-10|0.1.1.0.2.0 8-9|0.1.1.0.1.1.2+0.1.1.0.1.1.1+0.1.1.0.1.1.0+0.1.1.0.1.1 4-5|0.1.1.0.1 1-2|0.1.1.0.1.0 0-1|0.1.1.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:33.259
# ::node	0	cause-01	23-24
# ::node	0.0	accident	25-26
# ::node	0.1	identify-01	17-18
# ::node	0.1.0	commission	16-17
# ::node	0.1.0.0	safe-41	15-16
# ::node	0.1.0.0.0	main	22-23
# ::node	0.1.1	fail-01	19-20
# ::node	0.1.1.0	and	14-15
# ::node	0.1.1.0.0	manage-01	18-19
# ::node	0.1.1.0.1	plan-01	4-5
# ::node	0.1.1.0.1.0	year	1-2
# ::node	0.1.1.0.1.0.0	this	0-1
# ::node	0.1.1.0.1.1	date-entity	8-9
# ::node	0.1.1.0.1.1.0	90	8-9
# ::node	0.1.1.0.1.1.1	89	8-9
# ::node	0.1.1.0.1.1.2	19	8-9
# ::node	0.1.1.0.2	beyond	10-11
# ::node	0.1.1.0.2.0	and	9-10
# ::node	0.1.1.0.2.1	health	13-14
# ::node	0.1.1.0.2.1.0	government-organization	12-13
# ::node	0.1.1.0.2.1.0.0	govern-01	12-13
# ::root	0	cause-01
# ::edge	and	op1	beyond	0.1.1.0.2.0	0.1.1.0.2	
# ::edge	beyond	op1	health	0.1.1.0.2	0.1.1.0.2.1	
# ::edge	beyond	op2	and	0.1.1.0.2	0.1.1.0	
# ::edge	cause-01	ARG1	accident	0	0.0	
# ::edge	commission	mod	safe-41	0.1.0	0.1.0.0	
# ::edge	date-entity	day	90	0.1.1.0.1.1	0.1.1.0.1.1.0	
# ::edge	date-entity	month	89	0.1.1.0.1.1	0.1.1.0.1.1.1	
# ::edge	date-entity	year	19	0.1.1.0.1.1	0.1.1.0.1.1.2	
# ::edge	fail-01	ARG0	and	0.1.1	0.1.1.0	
# ::edge	govern-01	ARG0	government-organization	0.1.1.0.2.1.0.0	0.1.1.0.2.1.0	
# ::edge	health	mod	government-organization	0.1.1.0.2.1	0.1.1.0.2.1.0	
# ::edge	identify-01	ARG0	commission	0.1	0.1.0	
# ::edge	identify-01	ARG1	fail-01	0.1	0.1.1	
# ::edge	identify-01	ARG2	cause-01	0.1	0	
# ::edge	manage-01	ARG1	and	0.1.1.0.0	0.1.1.0	
# ::edge	plan-01	ARG1	and	0.1.1.0.1	0.1.1.0	
# ::edge	plan-01	time	date-entity	0.1.1.0.1	0.1.1.0.1.1	
# ::edge	plan-01	time	year	0.1.1.0.1	0.1.1.0.1.0	
# ::edge	safe-41	ARG1	main	0.1.0.0	0.1.0.0.0	
# ::edge	year	mod	this	0.1.1.0.1.0	0.1.1.0.1.0.0	
(c / cause-01 
      :ARG1 (a / accident) 
      :ARG2-of (i / identify-01 
            :ARG0 (c2 / commission 
                  :mod (s / safe-41 
                        :ARG1 (m / main))) 
            :ARG1 (f / fail-01 
                  :ARG0 (a2 / and 
                        :ARG1-of (m2 / manage-01) 
                        :ARG1-of (p / plan-01 
                              :time (y / year 
                                    :mod (t / this)) 
                              :time (d / date-entity 
                                    :day 90 
                                    :month 89 
                                    :year 19)) 
                        :op-of (b / beyond 
                              :op-of (a3 / and) 
                              :op1 (h / health 
                                    :mod (g / government-organization 
                                          :ARG0-of (g2 / govern-01))))))))

# ::snt mr parkinson had fiddled the statistics to make the accident record seem worse under labour and better under the conservatives
# ::tok mr parkinson had fiddled the statistics to make the accident record seem worse under labour and better under the conservatives
# ::alignments 19-20|0.0.0.1 15-16|0.0.0.2 14-15|0.0.0.0 12-13|0.0.0 11-12|0 10-11|0.0 9-10|0.0.1 5-6|0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:33.295
# ::node	0	seem-01	11-12
# ::node	0.0	record	10-11
# ::node	0.0.0	bad	12-13
# ::node	0.0.0.0	labour	14-15
# ::node	0.0.0.1	conservative	19-20
# ::node	0.0.0.2	and	15-16
# ::node	0.0.1	accident	9-10
# ::node	0.0.2	statistic	5-6
# ::root	0	seem-01
# ::edge	and	op1	bad	0.0.0.2	0.0.0	
# ::edge	bad	beneficiary	labour	0.0.0	0.0.0.0	
# ::edge	bad	domain	conservative	0.0.0	0.0.0.1	
# ::edge	bad	domain	record	0.0.0	0.0	
# ::edge	record	mod	accident	0.0	0.0.1	
# ::edge	seem-01	ARG1	record	0	0.0	
# ::edge	statistic	op1	record	0.0.2	0.0	
(s / seem-01 
      :ARG1 (r / record 
            :domain-of (b / bad 
                  :beneficiary (l / labour) 
                  :domain (c / conservative) 
                  :op-of (a / and)) 
            :mod (a2 / accident) 
            :op-of (s2 / statistic)))

# ::snt it is by an accident that these three characters acquire individuality an accident that may be called the beginning of characterstudy in european drama
# ::tok it is by an accident that these three characters acquire individuality an accident that may be called the beginning of characterstudy in european drama
# ::alignments 23-24|0 22-23|0.1.0.0+0.1.0+0.1 18-19|0.0 14-15|0.0.3.0+0.0.3 12-13|0.0.0 10-11|0.0.0.0.1 9-10|0.0.0.0 8-9|0.0.0.0.0 7-8|0.0.0.0.0.0 4-5|0.0.2 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:33.513
# ::node	0	drama	23-24
# ::node	0.0	begin-01	18-19
# ::node	0.0.0	accident	12-13
# ::node	0.0.0.0	acquire-01	9-10
# ::node	0.0.0.0.0	character	8-9
# ::node	0.0.0.0.0.0	3	7-8
# ::node	0.0.0.0.1	individuality	10-11
# ::node	0.0.1	it	0-1
# ::node	0.0.2	accident	4-5
# ::node	0.0.3	date-entity	14-15
# ::node	0.0.3.0	5	14-15
# ::node	0.1	continent	22-23
# ::node	0.1.0	name	22-23
# ::node	0.1.0.0	"Europe"	22-23
# ::root	0	drama
# ::edge	accident	op1	begin-01	0.0.2	0.0	
# ::edge	acquire-01	ARG0	character	0.0.0.0	0.0.0.0.0	
# ::edge	acquire-01	ARG1	accident	0.0.0.0	0.0.0	
# ::edge	acquire-01	manner	individuality	0.0.0.0	0.0.0.0.1	
# ::edge	begin-01	ARG0	drama	0.0	0	
# ::edge	begin-01	ARG1	accident	0.0	0.0.0	
# ::edge	begin-01	time	date-entity	0.0	0.0.3	
# ::edge	character	quant	3	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	continent	name	name	0.1	0.1.0	
# ::edge	date-entity	month	5	0.0.3	0.0.3.0	
# ::edge	drama	mod	continent	0	0.1	
# ::edge	it	op1	begin-01	0.0.1	0.0	
# ::edge	name	op1	"Europe"	0.1.0	0.1.0.0	
(d / drama 
      :ARG0-of (b / begin-01 
            :ARG1 (a / accident 
                  :ARG1-of (a2 / acquire-01 
                        :ARG0 (c2 / character 
                              :quant 3) 
                        :manner (i / individuality))) 
            :op-of (i2 / it) 
            :op-of (a3 / accident) 
            :time (d2 / date-entity 
                  :month 5)) 
      :mod (c / continent 
            :name (n / name 
                  :op1 "Europe")))

# ::snt now she knew him she understood that he was a man who could have been great were he not confined in a small cage by the accident of his birth
# ::tok now she knew him she understood that he was a man who could have been great were he not confined in a small cage by the accident of his birth
# ::alignments 29-30|0.0.0.1 26-27|0.0.0.1.1 23-24|0.0.0.1.0 22-23|0.0.0.1.0.0 19-20|0.0.0 17-18|0.0.0.0 15-16|0.0 12-13|0 10-11|0.1 7-8|0.1.1 5-6|0.1.0 4-5|0.1.0.0 2-3|0.1.0.0.0 1-2|0.1.0.0.0.0 0-1|0.1.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:33.699
# ::node	0	possible	12-13
# ::node	0.0	great	15-16
# ::node	0.0.0	confine-01	19-20
# ::node	0.0.0.0	he	17-18
# ::node	0.0.0.1	birth-01	29-30
# ::node	0.0.0.1.0	cage	23-24
# ::node	0.0.0.1.0.0	small	22-23
# ::node	0.0.0.1.1	accident	26-27
# ::node	0.1	man	10-11
# ::node	0.1.0	understand-01	5-6
# ::node	0.1.0.0	she	4-5
# ::node	0.1.0.0.0	know-01	2-3
# ::node	0.1.0.0.0.0	she	1-2
# ::node	0.1.0.0.0.1	now	0-1
# ::node	0.1.1	he	7-8
# ::root	0	possible
# ::edge	birth-01	ARG0	cage	0.0.0.1	0.0.0.1.0	
# ::edge	birth-01	ARG1	accident	0.0.0.1	0.0.0.1.1	
# ::edge	cage	mod	small	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	confine-01	ARG0	he	0.0.0	0.0.0.0	
# ::edge	confine-01	ARG1	great	0.0.0	0.0	
# ::edge	confine-01	manner	birth-01	0.0.0	0.0.0.1	
# ::edge	know-01	ARG0	she	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	know-01	ARG1	she	0.1.0.0.0	0.1.0.0	
# ::edge	know-01	time	now	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	man	domain	he	0.1	0.1.1	
# ::edge	man	mod	possible	0.1	0	
# ::edge	possible	domain	great	0	0.0	
# ::edge	understand-01	ARG0	she	0.1.0	0.1.0.0	
# ::edge	understand-01	ARG1	man	0.1.0	0.1	
(p / possible 
      :domain (g / great 
            :ARG1-of (c2 / confine-01 
                  :ARG0 (h / he) 
                  :manner (b / birth-01 
                        :ARG0 (c / cage 
                              :mod (s / small)) 
                        :ARG1 (a / accident)))) 
      :mod-of (m / man 
            :ARG1-of (u / understand-01 
                  :ARG0 (s2 / she 
                        :ARG1-of (k / know-01 
                              :ARG0 (s3 / she) 
                              :time (n / now)))) 
            :domain (h2 / he)))

# ::snt elsewhere the a401 still very heavy in both directions between abingdon and dorchesteronthe thames due to an accident a little bit earlier on this evening
# ::tok elsewhere the a401 still very heavy in both directions between abingdon and dorchesteronthe thames due to an accident a little bit earlier on this evening
# ::alignments 24-25|0.3.1 23-24|0.3.1.0 21-22|0.3 20-21|0.3.0.1 19-20|0.3.0 17-18|0.3.0.0 11-12|0 9-10|0.0.0.0 8-9|0.0.0 7-8|0.0 5-6|0.2 4-5|0.2.0 3-4|0.2.1 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:33.777
# ::node	0	and	11-12
# ::node	0.0	both	7-8
# ::node	0.0.0	direction	8-9
# ::node	0.0.0.0	between	9-10
# ::node	0.1	elsewhere	0-1
# ::node	0.2	heavy	5-6
# ::node	0.2.0	very	4-5
# ::node	0.2.1	still	3-4
# ::node	0.3	early	21-22
# ::node	0.3.0	little	19-20
# ::node	0.3.0.0	accident	17-18
# ::node	0.3.0.1	bit	20-21
# ::node	0.3.1	evening	24-25
# ::node	0.3.1.0	this	23-24
# ::root	0	and
# ::edge	and	mod	both	0	0.0	
# ::edge	and	op1	elsewhere	0	0.1	
# ::edge	and	op2	heavy	0	0.2	
# ::edge	and	op3	early	0	0.3	
# ::edge	bit	mod	little	0.3.0.1	0.3.0	
# ::edge	direction	mod	between	0.0.0	0.0.0.0	
# ::edge	direction	mod	both	0.0.0	0.0	
# ::edge	early	op1	little	0.3	0.3.0	
# ::edge	early	op2	evening	0.3	0.3.1	
# ::edge	evening	mod	this	0.3.1	0.3.1.0	
# ::edge	heavy	degree	very	0.2	0.2.0	
# ::edge	heavy	mod	still	0.2	0.2.1	
# ::edge	little	mod	accident	0.3.0	0.3.0.0	
(a2 / and 
      :mod (b3 / both 
            :mod-of (d / direction 
                  :mod (b2 / between))) 
      :op1 (e3 / elsewhere) 
      :op2 (h / heavy 
            :degree (v / very) 
            :mod (s / still)) 
      :op3 (e2 / early 
            :op1 (l / little 
                  :mod (a / accident) 
                  :mod-of (b / bit)) 
            :op2 (e / evening 
                  :mod (t / this))))

# ::snt it is probably no accident that among the first organs that it attacks are the crabs testicles or ovaries it spares the organs that the crab needs to survive dash
# ::tok it is probably no accident that among the first organs that it attacks are the crabs testicles or ovaries it spares the organs that the crab needs to survive dash
# ::alignments 28-29|0.2.0.0.0 26-27|0.2.0.0.0.1 22-23|0.2.0.0.0.1.0 20-21|0.2.0 19-20|0.2.0.0 17-18|0.2 15-16|0.2.0.0.0.0 12-13|0 11-12|0.0 9-10|0.2.0.1.0 6-7|0.2.0.1 4-5|0.1.0 3-4|0.1.0.1 2-3|0.1.0.0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:33.983
# ::node	0	attack-01	12-13
# ::node	0.0	it	11-12
# ::node	0.1	it	0-1
# ::node	0.1.0	accident	4-5
# ::node	0.1.0.0	probable	2-3
# ::node	0.1.0.1	-	3-4
# ::node	0.2	or	17-18
# ::node	0.2.0	spare	20-21
# ::node	0.2.0.0	it	19-20
# ::node	0.2.0.0.0	survive-01	28-29
# ::node	0.2.0.0.0.0	crab	15-16
# ::node	0.2.0.0.0.1	need-01	26-27
# ::node	0.2.0.0.0.1.0	organ	22-23
# ::node	0.2.0.1	among	6-7
# ::node	0.2.0.1.0	organ	9-10
# ::root	0	attack-01
# ::edge	accident	domain	it	0.1.0	0.1	
# ::edge	accident	polarity	-	0.1.0	0.1.0.1	
# ::edge	among	op1	organ	0.2.0.1	0.2.0.1.0	
# ::edge	attack-01	ARG0	it	0	0.0	
# ::edge	attack-01	ARG1	it	0	0.1	
# ::edge	need-01	ARG0	organ	0.2.0.0.0.1	0.2.0.0.0.1.0	
# ::edge	need-01	ARG1	survive-01	0.2.0.0.0.1	0.2.0.0.0	
# ::edge	or	domain	attack-01	0.2	0	
# ::edge	or	op1	spare	0.2	0.2.0	
# ::edge	probable	domain	accident	0.1.0.0	0.1.0	
# ::edge	spare	domain	it	0.2.0	0.2.0.0	
# ::edge	spare	location	among	0.2.0	0.2.0.1	
# ::edge	survive-01	ARG0	it	0.2.0.0.0	0.2.0.0	
# ::edge	survive-01	ARG1	crab	0.2.0.0.0	0.2.0.0.0.0	
(a / attack-01 
      :ARG0 (i2 / it) 
      :ARG1 (i3 / it 
            :domain-of (a3 / accident 
                  :domain-of (p / probable) 
                  :polarity (- / -))) 
      :domain-of (o2 / or 
            :op1 (s2 / spare 
                  :domain (i / it 
                        :ARG0-of (s / survive-01 
                              :ARG1 (c / crab) 
                              :ARG1-of (n / need-01 
                                    :ARG0 (o / organ)))) 
                  :location (a2 / among 
                        :op1 (o3 / organ)))))

# ::snt fallout from last thursdays accident at a spanish nuclear power station swept across europe yesterday dash
# ::tok fallout from last thursdays accident at a spanish nuclear power station swept across europe yesterday dash
# ::alignments 14-15|0.0.1.0 13-14|0.0.1.0.0.0.0+0.0.1.0.0.0+0.0.1.0.0 12-13|0.0.1 11-12|0.0 10-11|0.0.0 9-10|0.0.0.2 8-9|0.0.0.2.0 7-8|0.0.0.0.0.0+0.0.0.0.0+0.0.0.0 4-5|0.0.0.1 2-3|0.0.0.1.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:34.155
# ::node	0	fallout	0-1
# ::node	0.0	sweep-02	11-12
# ::node	0.0.0	station	10-11
# ::node	0.0.0.0	language	7-8
# ::node	0.0.0.0.0	name	7-8
# ::node	0.0.0.0.0.0	"Spanish"	7-8
# ::node	0.0.0.1	accident	4-5
# ::node	0.0.0.1.0	last	2-3
# ::node	0.0.0.2	power	9-10
# ::node	0.0.0.2.0	nucleus	8-9
# ::node	0.0.1	across	12-13
# ::node	0.0.1.0	yesterday	14-15
# ::node	0.0.1.0.0	continent	13-14
# ::node	0.0.1.0.0.0	name	13-14
# ::node	0.0.1.0.0.0.0	"Europe"	13-14
# ::root	0	fallout
(f / fallout 
      :ARG0-of (s / sweep-02 
            :ARG1 (s2 / station 
                  :location (l / language 
                        :name (n3 / name 
                              :op1 "Spanish")) 
                  :location-of (a2 / accident 
                        :mod (l2 / last)) 
                  :mod (p / power 
                        :mod (n2 / nucleus))) 
            :location (a / across 
                  :op1 (y / yesterday 
                        :mod (c / continent 
                              :name (n / name 
                                    :op1 "Europe"))))))

# ::snt the high regard which so many postwar artists held for the acceptance of accident intuition and spontaneity was also fuelled by the deification of the subconscious
# ::tok the high regard which so many postwar artists held for the acceptance of accident intuition and spontaneity was also fuelled by the deification of the subconscious
# ::alignments 25-26|0.0.1 18-19|0.3 16-17|0.2 15-16|0 13-14|0.1.1 11-12|0.1 7-8|0.1.0 5-6|0.1.0.0 4-5|0.1.0.0.0 2-3|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:34.275
# ::node	0	and	15-16
# ::node	0.0	regard-01	2-3
# ::node	0.0.0	high	1-2
# ::node	0.0.1	subconscious	25-26
# ::node	0.1	accept-01	11-12
# ::node	0.1.0	artist	7-8
# ::node	0.1.0.0	many	5-6
# ::node	0.1.0.0.0	so	4-5
# ::node	0.1.1	accident	13-14
# ::node	0.2	spontaneity	16-17
# ::node	0.3	also	18-19
# ::root	0	and
# ::edge	accept-01	ARG0	artist	0.1	0.1.0	
# ::edge	accept-01	ARG1	accident	0.1	0.1.1	
# ::edge	and	op1	accept-01	0	0.1	
# ::edge	and	op2	spontaneity	0	0.2	
# ::edge	and	op3	also	0	0.3	
# ::edge	artist	quant	many	0.1.0	0.1.0.0	
# ::edge	many	degree	so	0.1.0.0	0.1.0.0.0	
# ::edge	regard-01	ARG0	and	0.0	0	
# ::edge	regard-01	mod	high	0.0	0.0.0	
# ::edge	subconscious	op1	regard-01	0.0.1	0.0	
(a2 / and 
      :ARG0-of (r / regard-01 
            :mod (h / high) 
            :op-of (s / subconscious)) 
      :op1 (a4 / accept-01 
            :ARG0 (a5 / artist 
                  :quant (m / many 
                        :degree (s3 / so))) 
            :ARG1 (a3 / accident)) 
      :op2 (s2 / spontaneity) 
      :op3 (a / also))

# ::snt one day there will be a serious industrial accident there are occasional near misses and worse but it usually takes a good measure of folly inattention and misfortune to overwhelm good plant and a safe system, relatively few members of the public have been killed in britain by industrial accidents in recent years
# ::tok one day there will be a serious industrial accident there are occasional near misses and worse but it usually takes a good measure of folly inattention and misfortune to overwhelm good plant and a safe system , relatively few members of the public have been killed in britain by industrial accidents in recent years
# ::alignments 53-54|0.2.0.0.3.0.0+0.2.0.0.3.0 52-53|0.2.0.0.3 50-51|0.2.1 49-50|0.2.1.0 47-48|0.2.0.1.0.0+0.2.0.1.0+0.2.0.1 45-46|0.2.0 42-43|0.2.0.0.1 39-40|0.2.0.0.2+0.2.0.0 38-39|0.0.0 37-38|0.0 35-36|0.1.0.0.0 34-35|0.1.0.0 32-33|0.2 31-32|0.3.1 30-31|0.3.1.0 29-30|0.3 27-28|0.3.2.1 26-27|0.3.2 25-26|0.3.2.0.0+0.3.2.0 22-23|0.3.2.2 21-22|0.3.2.2.0 18-19|0.2.0.0.0 17-18|0.3.0 16-17|0 15-16|0.1.0.3.0 14-15|0.1.0.3 13-14|0.1.0 12-13|0.1.0.1 11-12|0.1.0.2 8-9|0.1 7-8|0.1.1.0 6-7|0.1.1 1-2|0.4 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:36.474
# ::node	0	contrast-01	16-17
# ::node	0.0	relative	37-38
# ::node	0.0.0	few	38-39
# ::node	0.1	accident	8-9
# ::node	0.1.0	miss-02	13-14
# ::node	0.1.0.0	safe-41	34-35
# ::node	0.1.0.0.0	system	35-36
# ::node	0.1.0.1	near	12-13
# ::node	0.1.0.2	occasional	11-12
# ::node	0.1.0.3	and	14-15
# ::node	0.1.0.3.0	bad	15-16
# ::node	0.1.1	serious	6-7
# ::node	0.1.1.0	industry	7-8
# ::node	0.2	and	32-33
# ::node	0.2.0	kill-01	45-46
# ::node	0.2.0.0	have-org-role-91	39-40
# ::node	0.2.0.0.0	usual	18-19
# ::node	0.2.0.0.1	public	42-43
# ::node	0.2.0.0.2	member	39-40
# ::node	0.2.0.0.3	recent	52-53
# ::node	0.2.0.0.3.0	temporal-quantity	53-54
# ::node	0.2.0.0.3.0.0	year	53-54
# ::node	0.2.0.1	country	47-48
# ::node	0.2.0.1.0	name	47-48
# ::node	0.2.0.1.0.0	"Britain"	47-48
# ::node	0.2.1	accident	50-51
# ::node	0.2.1.0	industry	49-50
# ::node	0.3	overwhelm-01	29-30
# ::node	0.3.0	it	17-18
# ::node	0.3.1	plant	31-32
# ::node	0.3.1.0	good	30-31
# ::node	0.3.2	and	26-27
# ::node	0.3.2.0	attention	25-26
# ::node	0.3.2.0.0	-	25-26
# ::node	0.3.2.1	misfortune	27-28
# ::node	0.3.2.2	measure	22-23
# ::node	0.3.2.2.0	good	21-22
# ::node	0.4	day	1-2
# ::root	0	contrast-01
# ::edge	accident	mod	industry	0.2.1	0.2.1.0	
# ::edge	accident	mod	serious	0.1	0.1.1	
# ::edge	and	op1	attention	0.3.2	0.3.2.0	
# ::edge	and	op1	kill-01	0.2	0.2.0	
# ::edge	and	op1	miss-02	0.1.0.3	0.1.0	
# ::edge	and	op2	accident	0.2	0.2.1	
# ::edge	and	op2	bad	0.1.0.3	0.1.0.3.0	
# ::edge	and	op2	misfortune	0.3.2	0.3.2.1	
# ::edge	and	purpose	overwhelm-01	0.3.2	0.3	
# ::edge	attention	polarity	-	0.3.2.0	0.3.2.0.0	
# ::edge	contrast-01	ARG0	relative	0	0.0	
# ::edge	contrast-01	ARG1	accident	0	0.1	
# ::edge	contrast-01	ARG2	and	0	0.2	
# ::edge	contrast-01	condition	overwhelm-01	0	0.3	
# ::edge	contrast-01	time	day	0	0.4	
# ::edge	country	name	name	0.2.0.1	0.2.0.1.0	
# ::edge	few	mod	relative	0.0.0	0.0	
# ::edge	have-org-role-91	ARG0	usual	0.2.0.0	0.2.0.0.0	
# ::edge	have-org-role-91	ARG1	public	0.2.0.0	0.2.0.0.1	
# ::edge	have-org-role-91	ARG2	member	0.2.0.0	0.2.0.0.2	
# ::edge	have-org-role-91	manner	recent	0.2.0.0	0.2.0.0.3	
# ::edge	industry	mod	serious	0.1.1.0	0.1.1	
# ::edge	kill-01	ARG1	have-org-role-91	0.2.0	0.2.0.0	
# ::edge	kill-01	location	country	0.2.0	0.2.0.1	
# ::edge	measure	mod	good	0.3.2.2	0.3.2.2.0	
# ::edge	measure	purpose	and	0.3.2.2	0.3.2	
# ::edge	miss-02	ARG1	accident	0.1.0	0.1	
# ::edge	miss-02	ARG2	safe-41	0.1.0	0.1.0.0	
# ::edge	miss-02	degree	near	0.1.0	0.1.0.1	
# ::edge	miss-02	manner	occasional	0.1.0	0.1.0.2	
# ::edge	name	op1	"Britain"	0.2.0.1.0	0.2.0.1.0.0	
# ::edge	overwhelm-01	ARG0	it	0.3	0.3.0	
# ::edge	overwhelm-01	ARG1	plant	0.3	0.3.1	
# ::edge	plant	mod	good	0.3.1	0.3.1.0	
# ::edge	safe-41	ARG1	system	0.1.0.0	0.1.0.0.0	
# ::edge	temporal-quantity	time	recent	0.2.0.0.3.0	0.2.0.0.3	
# ::edge	temporal-quantity	unit	year	0.2.0.0.3.0	0.2.0.0.3.0.0	
(c2 / contrast-01 
      :ARG0 (r2 / relative 
            :mod-of (f / few)) 
      :ARG1 (a6 / accident 
            :ARG1-of (m4 / miss-02 
                  :ARG2 (s2 / safe-41 
                        :ARG1 (s / system)) 
                  :degree (n2 / near) 
                  :manner (o2 / occasional) 
                  :op-of (a5 / and 
                        :op1 (b / bad))) 
            :mod (s3 / serious 
                  :mod-of (i3 / industry))) 
      :ARG2 (a2 / and 
            :op1 (k / kill-01 
                  :ARG1 (h / have-org-role-91 
                        :ARG0 (u / usual) 
                        :ARG1 (p / public) 
                        :ARG2 (m / member) 
                        :manner (r / recent 
                              :time-of (t / temporal-quantity 
                                    :unit (y / year)))) 
                  :location (c / country 
                        :name (n / name 
                              :op1 "Britain"))) 
            :op2 (a / accident 
                  :mod (i / industry))) 
      :condition (o / overwhelm-01 
            :ARG0 (i2 / it) 
            :ARG1 (p2 / plant 
                  :mod (g / good)) 
            :purpose-of (a3 / and 
                  :op1 (a4 / attention 
                        :polarity -) 
                  :op2 (m2 / misfortune) 
                  :purpose-of (m3 / measure 
                        :mod (g2 / good)))) 
      :time (d / day))

# ::snt police said a rover containing seven people all related had stopped on the hard shoulder when the accident involving a van happened, the accident scene is pictured above
# ::tok police said a rover containing seven people all related had stopped on the hard shoulder when the accident involving a van happened , the accident scene is pictured above
# ::alignments 28-29|0.1.0.1.1 27-28|0.1.0 25-26|0.1.0.1 24-25|0.1.0.1.2 21-22|0.1.0.1.0 20-21|0.1.0.1.0.0.0.1 18-19|0.1.0.1.0.0.0 17-18|0.1.0.1.0.0 14-15|0.0.0.0 13-14|0.0.0.0.0 10-11|0.0.0 8-9|0.0.0.1 7-8|0.1.0.1.0.0.0.0 5-6|0.1.0.0 4-5|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:36.893
# ::node	0	say-01	1-2
# ::node	0.0	police	0-1
# ::node	0.0.0	stop-01	10-11
# ::node	0.0.0.0	shoulder	14-15
# ::node	0.0.0.0.0	hard	13-14
# ::node	0.0.0.1	relate-01	8-9
# ::node	0.1	contain-01	4-5
# ::node	0.1.0	picture-01	27-28
# ::node	0.1.0.0	7	5-6
# ::node	0.1.0.1	scene	25-26
# ::node	0.1.0.1.0	happen-01	21-22
# ::node	0.1.0.1.0.0	accident	17-18
# ::node	0.1.0.1.0.0.0	involve-01	18-19
# ::node	0.1.0.1.0.0.0.0	all	7-8
# ::node	0.1.0.1.0.0.0.1	van	20-21
# ::node	0.1.0.1.1	above	28-29
# ::node	0.1.0.1.2	accident	24-25
# ::root	0	say-01
# ::edge	above	domain	scene	0.1.0.1.1	0.1.0.1	
# ::edge	contain-01	ARG1	picture-01	0.1	0.1.0	
# ::edge	happen-01	ARG0	scene	0.1.0.1.0	0.1.0.1	
# ::edge	happen-01	ARG1	accident	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	involve-01	ARG0	all	0.1.0.1.0.0.0	0.1.0.1.0.0.0.0	
# ::edge	involve-01	ARG1	van	0.1.0.1.0.0.0	0.1.0.1.0.0.0.1	
# ::edge	involve-01	ARG2	accident	0.1.0.1.0.0.0	0.1.0.1.0.0	
# ::edge	picture-01	ARG0	7	0.1.0	0.1.0.0	
# ::edge	picture-01	ARG1	scene	0.1.0	0.1.0.1	
# ::edge	relate-01	ARG1	stop-01	0.0.0.1	0.0.0	
# ::edge	say-01	ARG0	police	0	0.0	
# ::edge	say-01	ARG1	contain-01	0	0.1	
# ::edge	scene	mod	accident	0.1.0.1	0.1.0.1.2	
# ::edge	shoulder	mod	hard	0.0.0.0	0.0.0.0.0	
# ::edge	stop-01	ARG0	police	0.0.0	0.0	
# ::edge	stop-01	ARG1	shoulder	0.0.0	0.0.0.0	
(s4 / say-01 
      :ARG0 (p2 / police 
            :ARG0-of (s3 / stop-01 
                  :ARG1 (s2 / shoulder 
                        :mod (h2 / hard)) 
                  :ARG1-of (r / relate-01))) 
      :ARG1 (c / contain-01 
            :ARG1 (p / picture-01 
                  :ARG0 7 
                  :ARG1 (s / scene 
                        :ARG0-of (h / happen-01 
                              :ARG1 (a3 / accident 
                                    :ARG2-of (i / involve-01 
                                          :ARG0 (a4 / all) 
                                          :ARG1 (v / van)))) 
                        :domain-of (a / above) 
                        :mod (a2 / accident)))))

# ::snt for the second time this season schoolboy andrew justice had to be drafted into the city first team at late notice this time because dave brown was involved in a minor car accident and he performed well
# ::tok for the second time this season schoolboy andrew justice had to be drafted into the city first team at late notice this time because dave brown was involved in a minor car accident and he performed well
# ::alignments 36-37|0.1.1 35-36|0.1 34-35|0.1.0 33-34|0 32-33|0.0.3 31-32|0.0.3.0 30-31|0.0.3.1 27-28|0.0 25-26|0.0.2 23-24|0.0.1 22-23|0.0.1.0.4 21-22|0.0.1.0.4.0 20-21|0.0.1.0.2.0.0 19-20|0.0.1.0.2.0 17-18|0.0.1.0.3 15-16|0.0.1.0.2 12-13|0.0.1.0 8-9|0.0.1.0.1 5-6|0.0.1.0.0 4-5|0.0.1.0.1.0 3-4|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:37.251
# ::node	0	and	33-34
# ::node	0.0	involve-01	27-28
# ::node	0.0.0	time	3-4
# ::node	0.0.1	cause-01	23-24
# ::node	0.0.1.0	draft-01	12-13
# ::node	0.0.1.0.0	season	5-6
# ::node	0.0.1.0.1	justice	8-9
# ::node	0.0.1.0.1.0	this	4-5
# ::node	0.0.1.0.2	city	15-16
# ::node	0.0.1.0.2.0	late	19-20
# ::node	0.0.1.0.2.0.0	notice	20-21
# ::node	0.0.1.0.3	team	17-18
# ::node	0.0.1.0.4	time	22-23
# ::node	0.0.1.0.4.0	this	21-22
# ::node	0.0.2	brown	25-26
# ::node	0.0.3	accident	32-33
# ::node	0.0.3.0	car	31-32
# ::node	0.0.3.1	minor	30-31
# ::node	0.1	perform-01	35-36
# ::node	0.1.0	he	34-35
# ::node	0.1.1	well	36-37
# ::root	0	and
# ::edge	accident	location	car	0.0.3	0.0.3.0	
# ::edge	accident	mod	minor	0.0.3	0.0.3.1	
# ::edge	and	op1	involve-01	0	0.0	
# ::edge	and	op2	perform-01	0	0.1	
# ::edge	cause-01	ARG0	involve-01	0.0.1	0.0	
# ::edge	cause-01	ARG1	draft-01	0.0.1	0.0.1.0	
# ::edge	city	part	late	0.0.1.0.2	0.0.1.0.2.0	
# ::edge	draft-01	ARG0	season	0.0.1.0	0.0.1.0.0	
# ::edge	draft-01	ARG1	justice	0.0.1.0	0.0.1.0.1	
# ::edge	draft-01	location	city	0.0.1.0	0.0.1.0.2	
# ::edge	draft-01	time	team	0.0.1.0	0.0.1.0.3	
# ::edge	draft-01	time	time	0.0.1.0	0.0.1.0.4	
# ::edge	involve-01	ARG0	time	0.0	0.0.0	
# ::edge	involve-01	ARG1	brown	0.0	0.0.2	
# ::edge	involve-01	ARG2	accident	0.0	0.0.3	
# ::edge	justice	mod	this	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	notice	mod	late	0.0.1.0.2.0.0	0.0.1.0.2.0	
# ::edge	perform-01	ARG0	he	0.1	0.1.0	
# ::edge	perform-01	manner	well	0.1	0.1.1	
# ::edge	time	mod	this	0.0.1.0.4	0.0.1.0.4.0	
(a / and 
      :op1 (i / involve-01 
            :ARG0 (t5 / time) 
            :ARG0-of (c2 / cause-01 
                  :ARG1 (d / draft-01 
                        :ARG0 (s / season) 
                        :ARG1 (j / justice 
                              :mod (t4 / this)) 
                        :location (c3 / city 
                              :part (l / late 
                                    :mod-of (n / notice))) 
                        :time (t3 / team) 
                        :time (t / time 
                              :mod (t2 / this)))) 
            :ARG1 (b / brown) 
            :ARG2 (a2 / accident 
                  :location (c / car) 
                  :mod (m / minor))) 
      :op2 (p / perform-01 
            :ARG0 (h / he) 
            :manner (w / well)))

# ::snt although motorcar accidents grew to mammoth proportions in the 1920s their contribution to the success of trial lawyers was nowhere near as spectacular
# ::tok although motorcar accidents grew to mammoth proportions in the 1920s their contribution to the success of trial lawyers was nowhere near as spectacular
# ::alignments 22-23|0.0 20-21|0.1 19-20|0 17-18|0.0.0.1.0 16-17|0.0.0.1.0.0 14-15|0.0.0.1 11-12|0.0.0 9-10|0.0.0.1.1 6-7|0.0.0.0 3-4|0.0.0.0.0 2-3|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:37.339
# ::node	0	nowhere	19-20
# ::node	0.0	spectacular	22-23
# ::node	0.0.0	contribute-01	11-12
# ::node	0.0.0.0	proportion	6-7
# ::node	0.0.0.0.0	grow-01	3-4
# ::node	0.0.0.0.0.0	accident	2-3
# ::node	0.0.0.1	succeed-01	14-15
# ::node	0.0.0.1.0	lawyer	17-18
# ::node	0.0.0.1.0.0	trial	16-17
# ::node	0.0.0.1.1	1920	9-10
# ::node	0.1	near	20-21
# ::root	0	nowhere
(n2 / nowhere 
      :mod-of (s / spectacular 
            :domain (c / contribute-01 
                  :ARG0 (p / proportion 
                        :ARG4-of (g / grow-01 
                              :ARG1 (a / accident))) 
                  :ARG1 (s2 / succeed-01 
                        :ARG0 (l / lawyer 
                              :mod (t / trial)) 
                        :ARG1 1920))) 
      :mod-of (n / near))

# ::snt she received the silver rosebowl presented in memory of mrs june martin an enthusiastic supporter of the school who died in an accident in kidlington in 1987
# ::tok she received the silver rosebowl presented in memory of mrs june martin an enthusiastic supporter of the school who died in an accident in kidlington in 1987
# ::alignments 26-27|0.0.0.0.0.2.0+0.0.0.0.0.2 22-23|0.0.0.0.0.1 19-20|0.0.0.0.0 17-18|0.0.0.0.0.0 14-15|0.0.0.0 10-11|0.0.0.2.0+0.0.0.2 7-8|0.0.0.1 5-6|0.0.0 3-4|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:37.616
# ::node	0	receive-01	1-2
# ::node	0.0	she	0-1
# ::node	0.0.0	present-01	5-6
# ::node	0.0.0.0	support-01	14-15
# ::node	0.0.0.0.0	die-01	19-20
# ::node	0.0.0.0.0.0	school	17-18
# ::node	0.0.0.0.0.1	accident	22-23
# ::node	0.0.0.0.0.2	date-entity	26-27
# ::node	0.0.0.0.0.2.0	1987	26-27
# ::node	0.0.0.1	memory	7-8
# ::node	0.0.0.2	date-entity	10-11
# ::node	0.0.0.2.0	6	10-11
# ::node	0.1	silver	3-4
# ::root	0	receive-01
# ::edge	date-entity	month	6	0.0.0.2	0.0.0.2.0	
# ::edge	date-entity	year	1987	0.0.0.0.0.2	0.0.0.0.0.2.0	
# ::edge	die-01	ARG0	support-01	0.0.0.0.0	0.0.0.0	
# ::edge	die-01	ARG1	school	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	die-01	location	accident	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	die-01	time	date-entity	0.0.0.0.0	0.0.0.0.0.2	
# ::edge	present-01	ARG0	she	0.0.0	0.0	
# ::edge	present-01	ARG1	support-01	0.0.0	0.0.0.0	
# ::edge	present-01	source	memory	0.0.0	0.0.0.1	
# ::edge	present-01	time	date-entity	0.0.0	0.0.0.2	
# ::edge	receive-01	ARG0	she	0	0.0	
# ::edge	receive-01	ARG1	silver	0	0.1	
(r / receive-01 
      :ARG0 (s4 / she 
            :ARG0-of (p / present-01 
                  :ARG1 (s2 / support-01 
                        :ARG0-of (d2 / die-01 
                              :ARG1 (s / school) 
                              :location (a / accident) 
                              :time (d / date-entity 
                                    :year 1987))) 
                  :source (m / memory) 
                  :time (d3 / date-entity 
                        :month 6))) 
      :ARG1 (s3 / silver))

# ::snt that her husband had not drowned by accident he had taken his own life
# ::tok that her husband had not drowned by accident he had taken his own life
# ::alignments 13-14|0.0.0.0.0 8-9|0.0.0.0 7-8|0.1 5-6|0 2-3|0.0+0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:37.674
# ::node	0	drown-01	5-6
# ::node	0.0	husband	2-3
# ::node	0.0.0	have-rel-role-91	2-3
# ::node	0.0.0.0	he	8-9
# ::node	0.0.0.0.0	life	13-14
# ::node	0.1	accident	7-8
# ::root	0	drown-01
# ::edge	drown-01	ARG1	husband	0	0.0	
# ::edge	drown-01	ARG2	accident	0	0.1	
# ::edge	have-rel-role-91	ARG1	he	0.0.0	0.0.0.0	
# ::edge	have-rel-role-91	ARG2	husband	0.0.0	0.0	
# ::edge	life	poss	he	0.0.0.0.0	0.0.0.0	
(d / drown-01 
      :ARG1 (h3 / husband 
            :ARG2-of (h2 / have-rel-role-91 
                  :ARG1 (h / he 
                        :poss-of (l / life)))) 
      :ARG2 (a / accident))

# ::snt no matter what the emergency accident or disease no matter how long or complicated the treatment ellip
# ::tok no matter what the emergency accident or disease no matter how long or complicated the treatment ellip
# ::alignments 15-16|0.0.0.1.0 13-14|0.0.0.1 12-13|0.0.0 9-10|0.0.0.0 8-9|0.0.0.0.0 7-8|0.1 6-7|0 5-6|0.0 4-5|0.0.1 1-2|0.0.0.1.0.0 0-1|0.0.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:37.721
# ::node	0	or	6-7
# ::node	0.0	accident	5-6
# ::node	0.0.0	or	12-13
# ::node	0.0.0.0	matter	9-10
# ::node	0.0.0.0.0	-	8-9
# ::node	0.0.0.1	complicate-01	13-14
# ::node	0.0.0.1.0	treat-03	15-16
# ::node	0.0.0.1.0.0	matter	1-2
# ::node	0.0.0.1.0.0.0	-	0-1
# ::node	0.0.1	emergency	4-5
# ::node	0.1	disease	7-8
# ::root	0	or
# ::edge	accident	location	emergency	0.0	0.0.1	
# ::edge	complicate-01	ARG1	treat-03	0.0.0.1	0.0.0.1.0	
# ::edge	matter	mod	-	0.0.0.0	0.0.0.0.0	
# ::edge	matter	polarity	-	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	or	domain	accident	0.0.0	0.0	
# ::edge	or	op1	accident	0	0.0	
# ::edge	or	op1	matter	0.0.0	0.0.0.0	
# ::edge	or	op2	complicate-01	0.0.0	0.0.0.1	
# ::edge	or	op2	disease	0	0.1	
# ::edge	treat-03	ARG1	matter	0.0.0.1.0	0.0.0.1.0.0	
(o2 / or 
      :op1 (a / accident 
            :domain-of (o / or 
                  :op1 (m / matter 
                        :mod (- / -)) 
                  :op2 (c / complicate-01 
                        :ARG1 (t / treat-03 
                              :ARG1 (m2 / matter 
                                    :polarity (-2 / -))))) 
            :location (e / emergency)) 
      :op2 (d / disease))

# ::snt the high risk occupations appear to be ambulance staff nurses caring for psychologically disturbed patients and those working in accident and emergency departments
# ::tok the high risk occupations appear to be ambulance staff nurses caring for psychologically disturbed patients and those working in accident and emergency departments
# ::alignments 22-23|0.0.1.1.0 21-22|0.0.1.1.1.1 20-21|0.0.1.1.1 19-20|0.0.1.1.1.0 17-18|0.0.1.1 15-16|0.0.1 14-15|0.0.2.0.0+0.0.2.0 13-14|0.0.1.0 12-13|0.0.1.0.0 10-11|0.0.0 9-10|0.0 8-9|0.0.2.1+0.0.2 7-8|0.0.2.1.0 4-5|0 2-3|0.1 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:37.968
# ::node	0	appear-02	4-5
# ::node	0.0	nurse	9-10
# ::node	0.0.0	care-01	10-11
# ::node	0.0.1	and	15-16
# ::node	0.0.1.0	disturb-01	13-14
# ::node	0.0.1.0.0	psychology	12-13
# ::node	0.0.1.1	work-01	17-18
# ::node	0.0.1.1.0	department	22-23
# ::node	0.0.1.1.1	and	20-21
# ::node	0.0.1.1.1.0	accident	19-20
# ::node	0.0.1.1.1.1	emergency	21-22
# ::node	0.0.2	person	8-9
# ::node	0.0.2.0	have-rel-role-91	14-15
# ::node	0.0.2.0.0	patient	14-15
# ::node	0.0.2.1	staff-01	8-9
# ::node	0.0.2.1.0	ambulance	7-8
# ::node	0.1	risk-01	2-3
# ::node	0.1.0	high	1-2
# ::root	0	appear-02
# ::edge	and	consist	nurse	0.0.1	0.0	
# ::edge	and	op1	accident	0.0.1.1.1	0.0.1.1.1.0	
# ::edge	and	op1	work-01	0.0.1	0.0.1.1	
# ::edge	and	op2	emergency	0.0.1.1.1	0.0.1.1.1.1	
# ::edge	appear-02	ARG1	nurse	0	0.0	
# ::edge	care-01	ARG1	nurse	0.0.0	0.0	
# ::edge	disturb-01	ARG1	and	0.0.1.0	0.0.1	
# ::edge	disturb-01	degree	psychology	0.0.1.0	0.0.1.0.0	
# ::edge	have-rel-role-91	ARG0	person	0.0.2.0	0.0.2	
# ::edge	have-rel-role-91	ARG2	patient	0.0.2.0	0.0.2.0.0	
# ::edge	nurse	mod	person	0.0	0.0.2	
# ::edge	risk-01	ARG1	appear-02	0.1	0	
# ::edge	risk-01	mod	high	0.1	0.1.0	
# ::edge	staff-01	ARG1	ambulance	0.0.2.1	0.0.2.1.0	
# ::edge	staff-01	ARG2	person	0.0.2.1	0.0.2	
# ::edge	work-01	ARG0	department	0.0.1.1	0.0.1.1.0	
# ::edge	work-01	ARG2	and	0.0.1.1	0.0.1.1.1	
(a5 / appear-02 
      :ARG1 (n / nurse 
            :ARG1-of (c / care-01) 
            :consist-of (a3 / and 
                  :ARG1-of (d2 / disturb-01 
                        :degree (p2 / psychology)) 
                  :op1 (w / work-01 
                        :ARG0 (d / department) 
                        :ARG2 (a / and 
                              :op1 (a2 / accident) 
                              :op2 (e / emergency)))) 
            :mod (p3 / person 
                  :ARG0-of (h / have-rel-role-91 
                        :ARG2 (p / patient)) 
                  :ARG2-of (s / staff-01 
                        :ARG1 (a4 / ambulance)))) 
      :ARG1-of (r / risk-01 
            :mod (h2 / high)))

# ::snt several studies have shown higher death rates among discharged patients with increased rates for accidents cancer and suicide dash
# ::tok several studies have shown higher death rates among discharged patients with increased rates for accidents cancer and suicide dash
# ::alignments 17-18|0.2.0.0.1 16-17|0.2.0.0 15-16|0.2.0.0.0 14-15|0.2.0.0.0.0 12-13|0.2 11-12|0.2.0 9-10|0.2.0.1.1+0.2.0.1 8-9|0.2.0.1.0 7-8|0.2.0.1.2 6-7|0.1 5-6|0.1.0 4-5|0.1.1 3-4|0 1-2|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:38.200
# ::node	0	show-01	3-4
# ::node	0.0	study-01	1-2
# ::node	0.0.0	several	0-1
# ::node	0.1	rate	6-7
# ::node	0.1.0	die-01	5-6
# ::node	0.1.1	high	4-5
# ::node	0.2	rate	12-13
# ::node	0.2.0	increase-01	11-12
# ::node	0.2.0.0	and	16-17
# ::node	0.2.0.0.0	cancer	15-16
# ::node	0.2.0.0.0.0	accident	14-15
# ::node	0.2.0.0.1	suicide	17-18
# ::node	0.2.0.1	have-rel-role-91	9-10
# ::node	0.2.0.1.0	discharge-01	8-9
# ::node	0.2.0.1.1	patient	9-10
# ::node	0.2.0.1.2	among	7-8
# ::root	0	show-01
# ::edge	among	op1	have-rel-role-91	0.2.0.1.2	0.2.0.1	
# ::edge	and	op1	cancer	0.2.0.0	0.2.0.0.0	
# ::edge	and	op2	suicide	0.2.0.0	0.2.0.0.1	
# ::edge	cancer	mod	accident	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	discharge-01	ARG1	have-rel-role-91	0.2.0.1.0	0.2.0.1	
# ::edge	have-rel-role-91	ARG1	increase-01	0.2.0.1	0.2.0	
# ::edge	have-rel-role-91	ARG2	patient	0.2.0.1	0.2.0.1.1	
# ::edge	increase-01	ARG0	and	0.2.0	0.2.0.0	
# ::edge	increase-01	ARG1	rate	0.2.0	0.2	
# ::edge	rate	mod	die-01	0.1	0.1.0	
# ::edge	rate	mod	high	0.1	0.1.1	
# ::edge	show-01	ARG0	study-01	0	0.0	
# ::edge	show-01	ARG1	rate	0	0.1	
# ::edge	show-01	ARG2	rate	0	0.2	
# ::edge	study-01	quant	several	0.0	0.0.0	
(s2 / show-01 
      :ARG0 (s3 / study-01 
            :quant (s4 / several)) 
      :ARG1 (r2 / rate 
            :mod (d2 / die-01) 
            :mod (h2 / high)) 
      :ARG2 (r / rate 
            :ARG1-of (i / increase-01 
                  :ARG0 (a / and 
                        :op1 (c / cancer 
                              :mod (a2 / accident)) 
                        :op2 (s / suicide)) 
                  :ARG1-of (h / have-rel-role-91 
                        :ARG1-of (d / discharge-01) 
                        :ARG2 (p / patient) 
                        :op-of (a3 / among)))))

# ::snt mindful of her husbands death in a road accident abroad  margaret particularly appreciates the additional nocost fatal  accident cover that the policy provides
# ::tok mindful of her husbands death in a road accident abroad margaret particularly appreciates the additional nocost fatal accident cover that the policy provides
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:38.201
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt when  whittlesey mere was drained in the 1850s a heap of dressed stone was found at  the bottom of the lake evidence of a medieval boating accident
# ::tok when whittlesey mere was drained in the 1850s a heap of dressed stone was found at the bottom of the lake evidence of a medieval boating accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:38.202
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt a teenager has walked out of hospital a day after plunging 200 feet from the severn bridge in an accident that killed two of his workmates
# ::tok a teenager has walked out of hospital a day after plunging 200 feet from the severn bridge in an accident that killed two of his workmates
# ::alignments 22-23|0.1.0.2.0.2 21-22|0 19-20|0.0 16-17|0.1 12-13|0.1.0.1 11-12|0.1.0.1.0 10-11|0.1.0 9-10|0.1.0.2 8-9|0.1.0.0 6-7|0.1.0.2.0.1 3-4|0.1.0.2.0 1-2|0.1.0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:38.358
# ::node	0	kill-01	21-22
# ::node	0.0	accident	19-20
# ::node	0.1	bridge	16-17
# ::node	0.1.0	plunge-01	10-11
# ::node	0.1.0.0	day	8-9
# ::node	0.1.0.1	foot	12-13
# ::node	0.1.0.1.0	200	11-12
# ::node	0.1.0.2	after	9-10
# ::node	0.1.0.2.0	walk-01	3-4
# ::node	0.1.0.2.0.0	teenager	1-2
# ::node	0.1.0.2.0.1	hospital	6-7
# ::node	0.1.0.2.0.2	2	22-23
# ::root	0	kill-01
# ::edge	2	op1	walk-01	0.1.0.2.0.2	0.1.0.2.0	
# ::edge	after	op1	plunge-01	0.1.0.2	0.1.0	
# ::edge	foot	quant	200	0.1.0.1	0.1.0.1.0	
# ::edge	kill-01	ARG0	accident	0	0.0	
# ::edge	kill-01	ARG1	bridge	0	0.1	
# ::edge	plunge-01	ARG0	day	0.1.0	0.1.0.0	
# ::edge	plunge-01	ARG1	foot	0.1.0	0.1.0.1	
# ::edge	plunge-01	ARG4	bridge	0.1.0	0.1	
# ::edge	walk-01	ARG0	teenager	0.1.0.2.0	0.1.0.2.0.0	
# ::edge	walk-01	destination	hospital	0.1.0.2.0	0.1.0.2.0.1	
# ::edge	walk-01	time	after	0.1.0.2.0	0.1.0.2	
(k / kill-01 
      :ARG0 (a / accident) 
      :ARG1 (b / bridge 
            :ARG4-of (p / plunge-01 
                  :ARG0 (d / day) 
                  :ARG1 (f / foot 
                        :quant 200) 
                  :op-of (a2 / after 
                        :time-of (w / walk-01 
                              :ARG0 (t / teenager) 
                              :destination (h / hospital) 
                              :op-of 2)))))

# ::snt the accident happened at 7, the second driver involved in the accident was unhurt, a woman was taken to the horton general hospital banbury with minor chest injuries after an accident on the a423 oxford to banbury road at deddington just after 7am today
# ::tok the accident happened at 7 , the second driver involved in the accident was unhurt , a woman was taken to the horton general hospital banbury with minor chest injuries after an accident on the a423 oxford to banbury road at deddington just after 7am today
# ::alignments 45-46|0.3 43-44|0.3.0 42-43|0.3.0.0 39-40|0.0.2.0.0 32-33|0.4.0 30-31|0.4 29-30|0 28-29|0.2 27-28|0.1 24-25|0.0.3.0 23-24|0.0.3.2 17-18|0.0.2.0 14-15|0.0.2.1+0.0.2 12-13|0.0.1.1 9-10|0.0.1 8-9|0.0.0+0.0 4-5|0.0.1.0 2-3|0.0.3 1-2|0.0.3.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:38.876
# ::node	0	injure-01	29-30
# ::node	0.0	person	8-9
# ::node	0.0.0	drive-01	8-9
# ::node	0.0.1	involve-01	9-10
# ::node	0.0.1.0	7	4-5
# ::node	0.0.1.1	accident	12-13
# ::node	0.0.2	hurt-01	14-15
# ::node	0.0.2.0	woman	17-18
# ::node	0.0.2.0.0	road	39-40
# ::node	0.0.2.1	-	14-15
# ::node	0.0.3	happen-01	2-3
# ::node	0.0.3.0	hospital	24-25
# ::node	0.0.3.1	accident	1-2
# ::node	0.0.3.2	general	23-24
# ::node	0.1	minor	27-28
# ::node	0.2	chest	28-29
# ::node	0.3	today	45-46
# ::node	0.3.0	after	43-44
# ::node	0.3.0.0	just	42-43
# ::node	0.4	after	30-31
# ::node	0.4.0	accident	32-33
# ::root	0	injure-01
# ::edge	after	op1	accident	0.4	0.4.0	
# ::edge	after	op1	today	0.3.0	0.3	
# ::edge	drive-01	ARG0	person	0.0.0	0.0	
# ::edge	general	op1	happen-01	0.0.3.2	0.0.3	
# ::edge	happen-01	ARG0	hospital	0.0.3	0.0.3.0	
# ::edge	happen-01	ARG1	accident	0.0.3	0.0.3.1	
# ::edge	happen-01	ARG2	person	0.0.3	0.0	
# ::edge	hurt-01	ARG0	woman	0.0.2	0.0.2.0	
# ::edge	hurt-01	ARG1	person	0.0.2	0.0	
# ::edge	hurt-01	polarity	-	0.0.2	0.0.2.1	
# ::edge	injure-01	ARG1	person	0	0.0	
# ::edge	injure-01	mod	chest	0	0.2	
# ::edge	injure-01	mod	minor	0	0.1	
# ::edge	injure-01	time	after	0	0.4	
# ::edge	involve-01	ARG0	7	0.0.1	0.0.1.0	
# ::edge	involve-01	ARG1	person	0.0.1	0.0	
# ::edge	involve-01	ARG2	accident	0.0.1	0.0.1.1	
# ::edge	just	op1	after	0.3.0.0	0.3.0	
# ::edge	today	op1	injure-01	0.3	0	
# ::edge	woman	mod	road	0.0.2.0	0.0.2.0.0	
(i / injure-01 
      :ARG1 (p / person 
            :ARG0-of (d / drive-01) 
            :ARG1-of (i2 / involve-01 
                  :ARG0 7 
                  :ARG2 (a4 / accident)) 
            :ARG1-of (h2 / hurt-01 
                  :ARG0 (w / woman 
                        :mod (r / road)) 
                  :polarity -) 
            :ARG2-of (h3 / happen-01 
                  :ARG0 (h / hospital) 
                  :ARG1 (a5 / accident) 
                  :op-of (g / general))) 
      :mod (m / minor) 
      :mod (c / chest) 
      :op-of (t / today 
            :op-of (a / after 
                  :op-of (j / just))) 
      :time (a3 / after 
            :op1 (a2 / accident)))

# ::snt it was clear from the outset that the accident was caused by a simple human error it said
# ::tok it was clear from the outset that the accident was caused by a simple human error it said
# ::alignments 17-18|0.3.0 16-17|0.3.0.0 15-16|0.3 14-15|0.3.2 13-14|0.3.1 10-11|0 8-9|0.1 5-6|0.0 2-3|0.2 0-1|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:38.989
# ::node	0	cause-01	10-11
# ::node	0.0	outset	5-6
# ::node	0.1	accident	8-9
# ::node	0.2	clear	2-3
# ::node	0.2.0	it	0-1
# ::node	0.3	error	15-16
# ::node	0.3.0	say-01	17-18
# ::node	0.3.0.0	it	16-17
# ::node	0.3.1	simple	13-14
# ::node	0.3.2	human	14-15
# ::root	0	cause-01
# ::edge	cause-01	ARG0	outset	0	0.0	
# ::edge	cause-01	ARG1	accident	0	0.1	
# ::edge	cause-01	prep-with	error	0	0.3	
# ::edge	clear	domain	cause-01	0.2	0	
# ::edge	clear	domain	it	0.2	0.2.0	
# ::edge	error	mod	human	0.3	0.3.2	
# ::edge	error	mod	simple	0.3	0.3.1	
# ::edge	say-01	ARG0	it	0.3.0	0.3.0.0	
# ::edge	say-01	ARG1	error	0.3.0	0.3	
(c / cause-01 
      :ARG0 (o / outset) 
      :ARG1 (a / accident) 
      :domain-of (c2 / clear 
            :domain (i2 / it)) 
      :prep-with (e / error 
            :ARG1-of (s / say-01 
                  :ARG0 (i / it)) 
            :mod (s2 / simple) 
            :mod (h / human)))

# ::snt 2mile final leg from manchester to liverpool and barring accidents he will surely take the major prize
# ::tok 2mile final leg from manchester to liverpool and barring accidents he will surely take the major prize
# ::alignments 16-17|0.0.0 15-16|0.0.0.1 12-13|0.0.0.2 10-11|0.0 9-10|0.1 8-9|0 7-8|0.2 4-5|0.2.0.0.0+0.2.0.0+0.2.0 2-3|0.0.0.0 1-2|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:39.063
# ::node	0	bar-01	8-9
# ::node	0.0	he	10-11
# ::node	0.0.0	prize-01	16-17
# ::node	0.0.0.0	leg	2-3
# ::node	0.0.0.0.0	final	1-2
# ::node	0.0.0.1	major	15-16
# ::node	0.0.0.2	sure	12-13
# ::node	0.1	accident	9-10
# ::node	0.2	and	7-8
# ::node	0.2.0	city	4-5
# ::node	0.2.0.0	name	4-5
# ::node	0.2.0.0.0	"Manchester"	4-5
# ::root	0	bar-01
# ::edge	and	op1	city	0.2	0.2.0	
# ::edge	and	op2	bar-01	0.2	0	
# ::edge	bar-01	ARG0	he	0	0.0	
# ::edge	bar-01	ARG1	accident	0	0.1	
# ::edge	city	name	name	0.2.0	0.2.0.0	
# ::edge	leg	mod	final	0.0.0.0	0.0.0.0.0	
# ::edge	name	op1	"Manchester"	0.2.0.0	0.2.0.0.0	
# ::edge	prize-01	ARG0	leg	0.0.0	0.0.0.0	
# ::edge	prize-01	ARG1	he	0.0.0	0.0	
# ::edge	prize-01	mod	major	0.0.0	0.0.0.1	
# ::edge	prize-01	mod	sure	0.0.0	0.0.0.2	
(b / bar-01 
      :ARG0 (h / he 
            :ARG1-of (p / prize-01 
                  :ARG0 (l / leg 
                        :mod (f / final)) 
                  :mod (m / major) 
                  :mod (s / sure))) 
      :ARG1 (a / accident) 
      :op-of (a2 / and 
            :op1 (c / city 
                  :name (n / name 
                        :op1 "Manchester"))))

# ::snt the navy which tried to cover up the accident spent dollars 300m 200m over five years in repairs
# ::tok the navy which tried to cover up the accident spent dollars 300m 200m over five years in repairs
# ::alignments 17-18|0.2.0 15-16|0.2.1.0.0.0+0.2.1.0.0 14-15|0.2.1.0 10-11|0.1.0+0.1 9-10|0 8-9|0.0 3-4|0.2.1 1-2|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:39.111
# ::node	0	spend-01	9-10
# ::node	0.0	accident	8-9
# ::node	0.1	monetary-quantity	10-11
# ::node	0.1.0	dollar	10-11
# ::node	0.2	navy	1-2
# ::node	0.2.0	repair-01	17-18
# ::node	0.2.1	try-01	3-4
# ::node	0.2.1.0	5	14-15
# ::node	0.2.1.0.0	temporal-quantity	15-16
# ::node	0.2.1.0.0.0	year	15-16
# ::root	0	spend-01
# ::edge	monetary-quantity	unit	dollar	0.1	0.1.0	
# ::edge	repair-01	ARG0	navy	0.2.0	0.2	
# ::edge	spend-01	ARG0	accident	0	0.0	
# ::edge	spend-01	ARG1	monetary-quantity	0	0.1	
# ::edge	spend-01	ARG3	navy	0	0.2	
# ::edge	temporal-quantity	quant	5	0.2.1.0.0	0.2.1.0	
# ::edge	temporal-quantity	unit	year	0.2.1.0.0	0.2.1.0.0.0	
# ::edge	try-01	ARG0	5	0.2.1	0.2.1.0	
# ::edge	try-01	ARG1	navy	0.2.1	0.2	
(s / spend-01 
      :ARG0 (a / accident) 
      :ARG1 (m / monetary-quantity 
            :unit (d / dollar)) 
      :ARG3 (n / navy 
            :ARG0-of (r / repair-01) 
            :ARG1-of (t2 / try-01 
                  :ARG0 (5 / 5 
                        :quant-of (t / temporal-quantity 
                              :unit (y / year))))))

# ::snt proposals for introducing a system of nofault liability for traffic accidents in america go back to the early decades of this century stimulated by the model of workers compensation and early legislation in europe
# ::tok proposals for introducing a system of nofault liability for traffic accidents in america go back to the early decades of this century stimulated by the model of workers compensation and early legislation in europe
# ::alignments 33-34|0.1.1.0.0+0.1.1.0+0.1.1 31-32|0.2 30-31|0.2.0 29-30|0 28-29|0.1 27-28|0.1.2.1+0.1.2 25-26|0.0.0 22-23|0.0 20-21|0.1.0 18-19|0.0.1.1+0.0.1 17-18|0.0.1.0 14-15|0.1.2.0.1.0 12-13|0.1.2.0.1.1.0.0.0.0+0.1.2.0.1.1.0.0.0+0.1.2.0.1.1.0.0 10-11|0.1.2.0.1.1.0 9-10|0.1.2.0.1.1.0.1 7-8|0.1.2.0.1.1.1 4-5|0.1.2.0.1.1 2-3|0.1.2.0.1 0-1|0.1.2.0+0.1.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:39.653
# ::node	0	and	29-30
# ::node	0.0	stimulate-01	22-23
# ::node	0.0.0	model	25-26
# ::node	0.0.1	temporal-quantity	18-19
# ::node	0.0.1.0	early	17-18
# ::node	0.0.1.1	decade	18-19
# ::node	0.1	compensate-01	28-29
# ::node	0.1.0	this	20-21
# ::node	0.1.1	continent	33-34
# ::node	0.1.1.0	name	33-34
# ::node	0.1.1.0.0	"Europe"	33-34
# ::node	0.1.2	person	27-28
# ::node	0.1.2.0	propose-01	0-1
# ::node	0.1.2.0.0	thing	0-1
# ::node	0.1.2.0.1	introduce-02	2-3
# ::node	0.1.2.0.1.0	back	14-15
# ::node	0.1.2.0.1.1	system	4-5
# ::node	0.1.2.0.1.1.0	accident	10-11
# ::node	0.1.2.0.1.1.0.0	country	12-13
# ::node	0.1.2.0.1.1.0.0.0	name	12-13
# ::node	0.1.2.0.1.1.0.0.0.0	"America"	12-13
# ::node	0.1.2.0.1.1.0.1	traffic	9-10
# ::node	0.1.2.0.1.1.1	liability	7-8
# ::node	0.1.2.1	work-01	27-28
# ::node	0.2	legislation	31-32
# ::node	0.2.0	early	30-31
# ::root	0	and
# ::edge	accident	location	country	0.1.2.0.1.1.0	0.1.2.0.1.1.0.0	
# ::edge	accident	mod	traffic	0.1.2.0.1.1.0	0.1.2.0.1.1.0.1	
# ::edge	and	op1	stimulate-01	0	0.0	
# ::edge	and	op2	compensate-01	0	0.1	
# ::edge	and	op3	legislation	0	0.2	
# ::edge	compensate-01	ARG0	this	0.1	0.1.0	
# ::edge	compensate-01	ARG1	continent	0.1	0.1.1	
# ::edge	compensate-01	ARG2	person	0.1	0.1.2	
# ::edge	continent	name	name	0.1.1	0.1.1.0	
# ::edge	country	name	name	0.1.2.0.1.1.0.0	0.1.2.0.1.1.0.0.0	
# ::edge	early	op1	temporal-quantity	0.0.1.0	0.0.1	
# ::edge	introduce-02	ARG0	back	0.1.2.0.1	0.1.2.0.1.0	
# ::edge	introduce-02	ARG1	system	0.1.2.0.1	0.1.2.0.1.1	
# ::edge	legislation	mod	early	0.2	0.2.0	
# ::edge	name	op1	"America"	0.1.2.0.1.1.0.0.0	0.1.2.0.1.1.0.0.0.0	
# ::edge	name	op1	"Europe"	0.1.1.0	0.1.1.0.0	
# ::edge	propose-01	ARG0	person	0.1.2.0	0.1.2	
# ::edge	propose-01	ARG1	thing	0.1.2.0	0.1.2.0.0	
# ::edge	propose-01	ARG2	introduce-02	0.1.2.0	0.1.2.0.1	
# ::edge	stimulate-01	ARG0	model	0.0	0.0.0	
# ::edge	stimulate-01	ARG1	temporal-quantity	0.0	0.0.1	
# ::edge	system	location	accident	0.1.2.0.1.1	0.1.2.0.1.1.0	
# ::edge	system	mod	liability	0.1.2.0.1.1	0.1.2.0.1.1.1	
# ::edge	temporal-quantity	unit	decade	0.0.1	0.0.1.1	
# ::edge	work-01	ARG0	person	0.1.2.1	0.1.2	
(a / and 
      :op1 (s / stimulate-01 
            :ARG0 (m / model) 
            :ARG1 (t2 / temporal-quantity 
                  :op-of (e2 / early) 
                  :unit (d / decade))) 
      :op2 (c2 / compensate-01 
            :ARG0 (t / this) 
            :ARG1 (c / continent 
                  :name (n / name 
                        :op1 "Europe")) 
            :ARG2 (p / person 
                  :ARG0-of (p2 / propose-01 
                        :ARG1 (t4 / thing) 
                        :ARG2 (i / introduce-02 
                              :ARG0 (b / back) 
                              :ARG1 (s2 / system 
                                    :location (a2 / accident 
                                          :location (c3 / country 
                                                :name (n2 / name 
                                                      :op1 "America")) 
                                          :mod (t3 / traffic)) 
                                    :mod (l2 / liability)))) 
                  :ARG0-of (w / work-01))) 
      :op3 (l / legislation 
            :mod (e / early)))

# ::snt largescale plans for evacuating thousands of people in the event of an accident at nuclear power stations are to be developed by local authorities the advisory committee on safety of nuclear installations disclosed yesterday writes paul brown, until now emergency plans have only been for small accidents with the possibility of anything on the scale of three mile island or chernobyl officially discounted, now the health and safety executive is preparing regulations to be put before parliament which will give local authorities a statutory duty to prepare evacuation plans for the population in the event of a nuclear accident
# ::tok largescale plans for evacuating thousands of people in the event of an accident at nuclear power stations are to be developed by local authorities the advisory committee on safety of nuclear installations disclosed yesterday writes paul brown , until now emergency plans have only been for small accidents with the possibility of anything on the scale of three mile island or chernobyl officially discounted , now the health and safety executive is preparing regulations to be put before parliament which will give local authorities a statutory duty to prepare evacuation plans for the population in the event of a nuclear accident
# ::alignments 100-101|0.0.2.1.2.0.0.2.1.0.0 99-100|0.0.2.1.2.0.0.2.1.0.0.0 96-97|0.0.2.1.2.0.0.2.1.0 93-94|0.0.2.1.2.0.0.2.1 90-91|0.0.2.1.2.0.0.2.0 88-89|0.0.2.1.2.0.0.2 86-87|0.0.2.1.2.0.0.0 83-84|0.0.2.1.2.0.0.1 82-83|0.0.2.1.2.0.0.1.0 81-82|0.0.2.1.2.0.0 78-79|0.0.2.1.2.0.1.0+0.0.2.1.2.0.1+0.0.2.1.2.0 77-78|0.0.2.1.2 73-74|0.0.2.1.1 72-73|0.0.2.1 70-71|0.0.2.1.1.0 69-70|0.0.2.1.1.1.2 68-69|0.0.2.1.1.1 67-68|0.0.2.1.1.1.1 65-66|0.0.2.1.3 62-63|0.0.2.1.0.0 60-61|0.0.2 59-60|0.0.2.0 58-59|0.0.2.0.0.1+0.0.2.0.0 57-58|0.0.2.0.0.0 55-56|0.0.2.0.1 52-53|0.0.2.1.1.1.0.0 50-51|0.0.2.1.1.1.0 47-48|0.1.0.1.0.0.0 46-47|0.1.0.1.0.0 43-44|0.0.0.0.2 41-42|0.0.2.1.0 40-41|0.0.2.1.0.1 39-40|0.0.4 38-39|0.0.3 36-37|0.0.1 34-35|0.0 33-34|0.2 32-33|0 31-32|0.1 30-31|0.1.1 28-29|0.1.0 26-27|0.1.0.1 25-26|0.1.0.1.0 23-24|0.0.0 22-23|0.0.0.1 20-21|0.0.0.0 16-17|0.0.0.0.0 15-16|0.0.0.0.0.0 14-15|0.0.0.0.0.0.0 12-13|0.1.0.0 9-10|0.1.0.0.0 1-2|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:46.995
# ::node	0	disclose-01	32-33
# ::node	0.0	write-01	34-35
# ::node	0.0.0	authority	23-24
# ::node	0.0.0.0	develop-02	20-21
# ::node	0.0.0.0.0	station	16-17
# ::node	0.0.0.0.0.0	power	15-16
# ::node	0.0.0.0.0.0.0	nucleus	14-15
# ::node	0.0.0.0.1	plan-01	1-2
# ::node	0.0.0.0.2	only	43-44
# ::node	0.0.0.1	local	22-23
# ::node	0.0.1	brown	36-37
# ::node	0.0.2	or	60-61
# ::node	0.0.2.0	island	59-60
# ::node	0.0.2.0.0	distance-quantity	58-59
# ::node	0.0.2.0.0.0	3	57-58
# ::node	0.0.2.0.0.1	mile	58-59
# ::node	0.0.2.0.1	scale	55-56
# ::node	0.0.2.1	prepare-02	72-73
# ::node	0.0.2.1.0	plan-01	41-42
# ::node	0.0.2.1.0.0	official	62-63
# ::node	0.0.2.1.0.1	emergency	40-41
# ::node	0.0.2.1.1	regulate-01	73-74
# ::node	0.0.2.1.1.0	executive	70-71
# ::node	0.0.2.1.1.1	and	68-69
# ::node	0.0.2.1.1.1.0	possible	50-51
# ::node	0.0.2.1.1.1.0.0	anything	52-53
# ::node	0.0.2.1.1.1.1	health	67-68
# ::node	0.0.2.1.1.1.2	safe-41	69-70
# ::node	0.0.2.1.2	before	77-78
# ::node	0.0.2.1.2.0	government-organization	78-79
# ::node	0.0.2.1.2.0.0	give-01	81-82
# ::node	0.0.2.1.2.0.0.0	duty	86-87
# ::node	0.0.2.1.2.0.0.1	authority	83-84
# ::node	0.0.2.1.2.0.0.1.0	local	82-83
# ::node	0.0.2.1.2.0.0.2	prepare-02	88-89
# ::node	0.0.2.1.2.0.0.2.0	plan-01	90-91
# ::node	0.0.2.1.2.0.0.2.1	population	93-94
# ::node	0.0.2.1.2.0.0.2.1.0	event	96-97
# ::node	0.0.2.1.2.0.0.2.1.0.0	accident	100-101
# ::node	0.0.2.1.2.0.0.2.1.0.0.0	nucleus	99-100
# ::node	0.0.2.1.2.0.1	name	78-79
# ::node	0.0.2.1.2.0.1.0	"Parliament"	78-79
# ::node	0.0.2.1.3	now	65-66
# ::node	0.0.3	until	38-39
# ::node	0.0.4	now	39-40
# ::node	0.1	installation	31-32
# ::node	0.1.0	safe-41	28-29
# ::node	0.1.0.0	accident	12-13
# ::node	0.1.0.0.0	event	9-10
# ::node	0.1.0.1	committee	26-27
# ::node	0.1.0.1.0	advise-01	25-26
# ::node	0.1.0.1.0.0	small	46-47
# ::node	0.1.0.1.0.0.0	accident	47-48
# ::node	0.1.1	nucleus	30-31
# ::node	0.2	yesterday	33-34
# ::root	0	disclose-01
# ::edge	accident	mod	nucleus	0.0.2.1.2.0.0.2.1.0.0	0.0.2.1.2.0.0.2.1.0.0.0	
# ::edge	accident	mod	small	0.1.0.1.0.0.0	0.1.0.1.0.0	
# ::edge	advise-01	ARG0	committee	0.1.0.1.0	0.1.0.1	
# ::edge	advise-01	ARG1	small	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	and	op1	possible	0.0.2.1.1.1	0.0.2.1.1.1.0	
# ::edge	and	op2	health	0.0.2.1.1.1	0.0.2.1.1.1.1	
# ::edge	and	op3	safe-41	0.0.2.1.1.1	0.0.2.1.1.1.2	
# ::edge	authority	mod	local	0.0.0	0.0.0.1	
# ::edge	authority	mod	local	0.0.2.1.2.0.0.1	0.0.2.1.2.0.0.1.0	
# ::edge	before	op1	government-organization	0.0.2.1.2	0.0.2.1.2.0	
# ::edge	committee	topic	safe-41	0.1.0.1	0.1.0	
# ::edge	develop-02	ARG0	authority	0.0.0.0	0.0.0	
# ::edge	develop-02	ARG1	station	0.0.0.0	0.0.0.0.0	
# ::edge	develop-02	mod	only	0.0.0.0	0.0.0.0.2	
# ::edge	disclose-01	ARG0	write-01	0	0.0	
# ::edge	disclose-01	ARG1	installation	0	0.1	
# ::edge	disclose-01	time	yesterday	0	0.2	
# ::edge	distance-quantity	quant	3	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	distance-quantity	unit	mile	0.0.2.0.0	0.0.2.0.0.1	
# ::edge	event	location	accident	0.0.2.1.2.0.0.2.1.0	0.0.2.1.2.0.0.2.1.0.0	
# ::edge	event	location	accident	0.1.0.0.0	0.1.0.0	
# ::edge	give-01	ARG0	government-organization	0.0.2.1.2.0.0	0.0.2.1.2.0	
# ::edge	give-01	ARG1	duty	0.0.2.1.2.0.0	0.0.2.1.2.0.0.0	
# ::edge	give-01	ARG2	authority	0.0.2.1.2.0.0	0.0.2.1.2.0.0.1	
# ::edge	give-01	purpose	prepare-02	0.0.2.1.2.0.0	0.0.2.1.2.0.0.2	
# ::edge	government-organization	name	name	0.0.2.1.2.0	0.0.2.1.2.0.1	
# ::edge	installation	mod	nucleus	0.1	0.1.1	
# ::edge	island	mod	distance-quantity	0.0.2.0	0.0.2.0.0	
# ::edge	name	op1	"Parliament"	0.0.2.1.2.0.1	0.0.2.1.2.0.1.0	
# ::edge	or	op1	island	0.0.2	0.0.2.0	
# ::edge	or	op2	prepare-02	0.0.2	0.0.2.1	
# ::edge	plan-01	ARG1	develop-02	0.0.0.0.1	0.0.0.0	
# ::edge	plan-01	ARG1	official	0.0.2.1.0	0.0.2.1.0.0	
# ::edge	plan-01	mod	emergency	0.0.2.1.0	0.0.2.1.0.1	
# ::edge	population	poss	event	0.0.2.1.2.0.0.2.1	0.0.2.1.2.0.0.2.1.0	
# ::edge	possible	domain	anything	0.0.2.1.1.1.0	0.0.2.1.1.1.0.0	
# ::edge	power	mod	nucleus	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	prepare-02	ARG0	plan-01	0.0.2.1	0.0.2.1.0	
# ::edge	prepare-02	ARG1	plan-01	0.0.2.1.2.0.0.2	0.0.2.1.2.0.0.2.0	
# ::edge	prepare-02	ARG1	regulate-01	0.0.2.1	0.0.2.1.1	
# ::edge	prepare-02	ARG2	population	0.0.2.1.2.0.0.2	0.0.2.1.2.0.0.2.1	
# ::edge	prepare-02	time	before	0.0.2.1	0.0.2.1.2	
# ::edge	prepare-02	time	now	0.0.2.1	0.0.2.1.3	
# ::edge	regulate-01	ARG0	executive	0.0.2.1.1	0.0.2.1.1.0	
# ::edge	regulate-01	ARG1	and	0.0.2.1.1	0.0.2.1.1.1	
# ::edge	safe-41	ARG1	installation	0.1.0	0.1	
# ::edge	safe-41	location	accident	0.1.0	0.1.0.0	
# ::edge	scale	poss	island	0.0.2.0.1	0.0.2.0	
# ::edge	station	mod	power	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	write-01	ARG0	authority	0.0	0.0.0	
# ::edge	write-01	ARG1	brown	0.0	0.0.1	
# ::edge	write-01	condition	or	0.0	0.0.2	
# ::edge	write-01	time	now	0.0	0.0.4	
# ::edge	write-01	time	until	0.0	0.0.3	
(d3 / disclose-01 
      :ARG0 (w / write-01 
            :ARG0 (a7 / authority 
                  :ARG0-of (d4 / develop-02 
                        :ARG1 (s5 / station 
                              :mod (p7 / power 
                                    :mod (n6 / nucleus))) 
                        :ARG1-of (p8 / plan-01) 
                        :mod (o3 / only)) 
                  :mod (l2 / local)) 
            :ARG1 (b2 / brown) 
            :condition (o2 / or 
                  :op1 (i / island 
                        :mod (d2 / distance-quantity 
                              :quant 3 
                              :unit (m / mile)) 
                        :poss-of (s2 / scale)) 
                  :op2 (p4 / prepare-02 
                        :ARG0 (p6 / plan-01 
                              :ARG1 (o / official) 
                              :mod (e3 / emergency)) 
                        :ARG1 (r / regulate-01 
                              :ARG0 (e2 / executive) 
                              :ARG1 (a3 / and 
                                    :op1 (p5 / possible 
                                          :domain (a4 / anything)) 
                                    :op2 (h / health) 
                                    :op3 (s / safe-41))) 
                        :time (b / before 
                              :op1 (g2 / government-organization 
                                    :ARG0-of (g / give-01 
                                          :ARG1 (d / duty) 
                                          :ARG2 (a2 / authority 
                                                :mod (l / local)) 
                                          :purpose (p3 / prepare-02 
                                                :ARG1 (p2 / plan-01) 
                                                :ARG2 (p / population 
                                                      :poss (e / event 
                                                            :location (a / accident 
                                                                  :mod (n / nucleus)))))) 
                                    :name (n2 / name 
                                          :op1 "Parliament"))) 
                        :time (n3 / now))) 
            :time (u / until) 
            :time (n4 / now)) 
      :ARG1 (i2 / installation 
            :ARG1-of (s4 / safe-41 
                  :location (a8 / accident 
                        :location-of (e4 / event)) 
                  :topic-of (c / committee 
                        :ARG0-of (a6 / advise-01 
                              :ARG1 (s3 / small 
                                    :mod-of (a5 / accident))))) 
            :mod (n5 / nucleus)) 
      :time (y / yesterday))

# ::snt mr kennedy says he has told everything he knows about the accident
# ::tok mr kennedy says he has told everything he knows about the accident
# ::alignments 11-12|0.0.0.0.2 8-9|0.0.0.0 7-8|0.0.0.0.0 6-7|0.0.0.0.1 5-6|0.0.0 3-4|0.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:47.025
# ::node	0	say-01	2-3
# ::node	0.0	he	3-4
# ::node	0.0.0	tell-01	5-6
# ::node	0.0.0.0	know-01	8-9
# ::node	0.0.0.0.0	he	7-8
# ::node	0.0.0.0.1	everything	6-7
# ::node	0.0.0.0.2	accident	11-12
# ::root	0	say-01
# ::edge	know-01	ARG0	he	0.0.0.0	0.0.0.0.0	
# ::edge	know-01	ARG1	everything	0.0.0.0	0.0.0.0.1	
# ::edge	know-01	ARG2	accident	0.0.0.0	0.0.0.0.2	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	tell-01	ARG0	he	0.0.0	0.0	
# ::edge	tell-01	ARG1	know-01	0.0.0	0.0.0.0	
(s / say-01 
      :ARG0 (h2 / he 
            :ARG0-of (t / tell-01 
                  :ARG1 (k / know-01 
                        :ARG0 (h / he) 
                        :ARG1 (e / everything) 
                        :ARG2 (a / accident)))))

# ::snt keeping pace with the maxis besides taking time out to be accident report ship when a crewman on with integrity went overboard and was recovered is the allwoman crew on maiden dash
# ::tok keeping pace with the maxis besides taking time out to be accident report ship when a crewman on with integrity went overboard and was recovered is the allwoman crew on maiden dash
# ::alignments 28-29|0.0.1 24-25|0.0 22-23|0 19-20|0.0.2 13-14|0.0.0 12-13|0.0.0.0 11-12|0.0.0.1 7-8|0.0.0.2 5-6|0.0.0.2.0 1-2|0.0.0.2.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:47.145
# ::node	0	and	22-23
# ::node	0.0	recover-02	24-25
# ::node	0.0.0	ship	13-14
# ::node	0.0.0.0	report	12-13
# ::node	0.0.0.1	accident	11-12
# ::node	0.0.0.2	time	7-8
# ::node	0.0.0.2.0	besides	5-6
# ::node	0.0.0.2.1	pace	1-2
# ::node	0.0.1	crew	28-29
# ::node	0.0.2	integrity	19-20
# ::root	0	and
# ::edge	and	op1	recover-02	0	0.0	
# ::edge	besides	op1	time	0.0.0.2.0	0.0.0.2	
# ::edge	integrity	op1	recover-02	0.0.2	0.0	
# ::edge	pace	time	time	0.0.0.2.1	0.0.0.2	
# ::edge	recover-02	ARG0	ship	0.0	0.0.0	
# ::edge	recover-02	ARG1	crew	0.0	0.0.1	
# ::edge	ship	mod	accident	0.0.0	0.0.0.1	
# ::edge	ship	mod	report	0.0.0	0.0.0.0	
# ::edge	time	topic	ship	0.0.0.2	0.0.0	
(a / and 
      :op1 (r / recover-02 
            :ARG0 (s / ship 
                  :mod (r2 / report) 
                  :mod (a2 / accident) 
                  :topic-of (t / time 
                        :op-of (b / besides) 
                        :time-of (p / pace))) 
            :ARG1 (c / crew) 
            :op-of (i / integrity)))

# ::snt pc julian wright said there were several sweeping bends approaching the scene of the accident
# ::tok pc julian wright said there were several sweeping bends approaching the scene of the accident
# ::alignments 14-15|0.1.0.0 11-12|0.1.0 9-10|0.1 7-8|0.1.1 6-7|0.1.1.0 3-4|0 1-3|0.0.0.0+0.0.0.1+0.0.0+0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:47.220
# ::node	0	say-01	3-4
# ::node	0.0	person	1-3
# ::node	0.0.0	name	1-3
# ::node	0.0.0.0	"wright"	1-3
# ::node	0.0.0.1	"julian"	1-3
# ::node	0.1	approach-01	9-10
# ::node	0.1.0	scene	11-12
# ::node	0.1.0.0	accident	14-15
# ::node	0.1.1	sweep-01	7-8
# ::node	0.1.1.0	several	6-7
# ::root	0	say-01
# ::edge	approach-01	ARG1	scene	0.1	0.1.0	
# ::edge	name	op1	"wright"	0.0.0	0.0.0.0	
# ::edge	name	op2	"julian"	0.0.0	0.0.0.1	
# ::edge	person	name	name	0.0	0.0.0	
# ::edge	say-01	ARG0	person	0	0.0	
# ::edge	say-01	ARG1	approach-01	0	0.1	
# ::edge	scene	mod	accident	0.1.0	0.1.0.0	
# ::edge	sweep-01	ARG1	approach-01	0.1.1	0.1	
# ::edge	sweep-01	degree	several	0.1.1	0.1.1.0	
(s4 / say-01 
      :ARG0 (p / person 
            :name (n / name 
                  :op1 "wright" 
                  :op2 "julian")) 
      :ARG1 (a2 / approach-01 
            :ARG1 (s / scene 
                  :mod (a / accident)) 
            :ARG1-of (s2 / sweep-01 
                  :degree (s3 / several))))

# ::snt i spent five years as an ambulanceman during which time i attended the clapham rail disaster and many road traffic accidents cardiac arrests and other emergencies
# ::tok i spent five years as an ambulanceman during which time i attended the clapham rail disaster and many road traffic accidents cardiac arrests and other emergencies
# ::alignments 24-25|0.0.1.2 23-24|0 22-23|0.0 20-21|0.0.0.0.1.0 19-20|0.0.0.0.1.0.0 18-19|0.0.0.0.1.0.0.0 17-18|0.0.0.0.1.0.1 16-17|0.0.0.0.1 15-16|0.0.0 14-15|0.0.0.1 11-12|0.0.0.0 10-11|0.0.0.0.0 9-10|0.0.0.0.2 3-4|0.0.1.1.1+0.0.1.1 2-3|0.0.1.1.0 1-2|0.0.1 0-1|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:47.786
# ::node	0	and	23-24
# ::node	0.0	arrest-01	22-23
# ::node	0.0.0	disaster	15-16
# ::node	0.0.0.0	attend-01	11-12
# ::node	0.0.0.0.0	i	10-11
# ::node	0.0.0.0.1	and	16-17
# ::node	0.0.0.0.1.0	accident	20-21
# ::node	0.0.0.0.1.0.0	traffic	19-20
# ::node	0.0.0.0.1.0.0.0	road	18-19
# ::node	0.0.0.0.1.0.1	many	17-18
# ::node	0.0.0.0.2	time	9-10
# ::node	0.0.0.1	rail	14-15
# ::node	0.0.1	spend-01	1-2
# ::node	0.0.1.0	i	0-1
# ::node	0.0.1.1	temporal-quantity	3-4
# ::node	0.0.1.1.0	5	2-3
# ::node	0.0.1.1.1	year	3-4
# ::node	0.0.1.2	other	24-25
# ::root	0	and
# ::edge	accident	mod	traffic	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	accident	quant	many	0.0.0.0.1.0	0.0.0.0.1.0.1	
# ::edge	and	op1	accident	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	and	op1	arrest-01	0	0.0	
# ::edge	arrest-01	ARG0	disaster	0.0	0.0.0	
# ::edge	arrest-01	ARG1	spend-01	0.0	0.0.1	
# ::edge	attend-01	ARG0	i	0.0.0.0	0.0.0.0.0	
# ::edge	attend-01	ARG1	and	0.0.0.0	0.0.0.0.1	
# ::edge	attend-01	ARG2	disaster	0.0.0.0	0.0.0	
# ::edge	attend-01	time	time	0.0.0.0	0.0.0.0.2	
# ::edge	disaster	mod	rail	0.0.0	0.0.0.1	
# ::edge	other	op1	spend-01	0.0.1.2	0.0.1	
# ::edge	spend-01	ARG0	i	0.0.1	0.0.1.0	
# ::edge	spend-01	ARG1	temporal-quantity	0.0.1	0.0.1.1	
# ::edge	temporal-quantity	quant	5	0.0.1.1	0.0.1.1.0	
# ::edge	temporal-quantity	unit	year	0.0.1.1	0.0.1.1.1	
# ::edge	traffic	mod	road	0.0.0.0.1.0.0	0.0.0.0.1.0.0.0	
(a / and 
      :op1 (a2 / arrest-01 
            :ARG0 (d / disaster 
                  :ARG2-of (a5 / attend-01 
                        :ARG0 (i / i) 
                        :ARG1 (a4 / and 
                              :op1 (a3 / accident 
                                    :mod (t / traffic 
                                          :mod (r / road)) 
                                    :quant (m / many))) 
                        :time (t2 / time)) 
                  :mod (r2 / rail)) 
            :ARG1 (s / spend-01 
                  :ARG0 (i2 / i) 
                  :ARG1 (t3 / temporal-quantity 
                        :quant 5 
                        :unit (y / year)) 
                  :op-of (o / other))))

# ::snt this year there have been 71 road accidents in dorset killing 81 people
# ::tok this year there have been 71 road accidents in dorset killing 81 people
# ::alignments 11-12|0.0.0.0.0.0 10-11|0.0.0 7-8|0.0 6-7|0 5-6|0.1 1-2|0.0.0.0 0-1|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:47.809
# ::node	0	road	6-7
# ::node	0.0	accident	7-8
# ::node	0.0.0	kill-01	10-11
# ::node	0.0.0.0	year	1-2
# ::node	0.0.0.0.0	this	0-1
# ::node	0.0.0.0.0.0	81	11-12
# ::node	0.1	71	5-6
# ::root	0	road
# ::edge	81	poss	this	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	accident	location	road	0.0	0	
# ::edge	kill-01	ARG0	year	0.0.0	0.0.0.0	
# ::edge	kill-01	ARG1	accident	0.0.0	0.0	
# ::edge	road	quant	71	0	0.1	
# ::edge	year	mod	this	0.0.0.0	0.0.0.0.0	
(r / road 
      :location-of (a / accident 
            :ARG1-of (k / kill-01 
                  :ARG0 (y / year 
                        :mod (t / this 
                              :poss-of 81)))) 
      :quant 71)

# ::snt whether by design or accident both houses closed the year with some fairly drastic pruning
# ::tok whether by design or accident both houses closed the year with some fairly drastic pruning
# ::alignments 13-14|0.1.0.0 12-13|0.1.0.0.0 11-12|0.1.0.1 9-10|0.2 7-8|0 6-7|0.0 5-6|0.0.0 4-5|0.1.1 3-4|0.1 2-3|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:47.875
# ::node	0	close-01	7-8
# ::node	0.0	house	6-7
# ::node	0.0.0	both	5-6
# ::node	0.1	or	3-4
# ::node	0.1.0	design-01	2-3
# ::node	0.1.0.0	drastic	13-14
# ::node	0.1.0.0.0	fair	12-13
# ::node	0.1.0.1	some	11-12
# ::node	0.1.1	accident	4-5
# ::node	0.2	year	9-10
# ::root	0	close-01
# ::edge	close-01	ARG1	house	0	0.0	
# ::edge	close-01	time	year	0	0.2	
# ::edge	design-01	ARG0	drastic	0.1.0	0.1.0.0	
# ::edge	design-01	ARG1	some	0.1.0	0.1.0.1	
# ::edge	drastic	degree	fair	0.1.0.0	0.1.0.0.0	
# ::edge	house	mod	both	0.0	0.0.0	
# ::edge	or	op1	design-01	0.1	0.1.0	
# ::edge	or	op2	accident	0.1	0.1.1	
# ::edge	or	op3	close-01	0.1	0	
(c / close-01 
      :ARG1 (h / house 
            :mod (b / both)) 
      :op-of (o / or 
            :op1 (d2 / design-01 
                  :ARG0 (d / drastic 
                        :degree (f / fair)) 
                  :ARG1 (s / some)) 
            :op2 (a / accident)) 
      :time (y / year))

# ::snt leland vowed to find some way of preventing such accidents
# ::tok leland vowed to find some way of preventing such accidents
# ::alignments 9-10|0.0.0 8-9|0.0.0.0 7-8|0.0 5-6|0.0.1 4-5|0.0.1.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:47.892
# ::node	0	vow-01	1-2
# ::node	0.0	prevent-01	7-8
# ::node	0.0.0	accident	9-10
# ::node	0.0.0.0	such	8-9
# ::node	0.0.1	way	5-6
# ::node	0.0.1.0	some	4-5
# ::root	0	vow-01
# ::edge	accident	mod	such	0.0.0	0.0.0.0	
# ::edge	prevent-01	ARG1	accident	0.0	0.0.0	
# ::edge	prevent-01	instrument	way	0.0	0.0.1	
# ::edge	vow-01	ARG1	prevent-01	0	0.0	
# ::edge	way	mod	some	0.0.1	0.0.1.0	
(v / vow-01 
      :ARG1 (p / prevent-01 
            :ARG1 (a / accident 
                  :mod (s / such)) 
            :instrument (w / way 
                  :mod (s2 / some))))

# ::snt fog covered southern britain yesterday contributing to a spate of accidents including a pileup in which a woman motorist died and 20 other people were injured
# ::tok fog covered southern britain yesterday contributing to a spate of accidents including a pileup in which a woman motorist died and 20 other people were injured
# ::alignments 25-26|0.3 22-23|0.1.1.0 21-22|0.1.1.2 20-21|0 19-20|0.0 17-18|0.2 10-11|0.1.2 5-6|0.1 4-5|0.1.0 3-4|0.3.0.0.0+0.3.0.0+0.3.0 2-3|0.1.1.1 1-2|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:48.055
# ::node	0	and	20-21
# ::node	0.0	die-01	19-20
# ::node	0.1	contribute-01	5-6
# ::node	0.1.0	yesterday	4-5
# ::node	0.1.1	cover-01	1-2
# ::node	0.1.1.0	other	22-23
# ::node	0.1.1.1	south	2-3
# ::node	0.1.1.2	20	21-22
# ::node	0.1.2	accident	10-11
# ::node	0.2	woman	17-18
# ::node	0.3	injure-01	25-26
# ::node	0.3.0	country	3-4
# ::node	0.3.0.0	name	3-4
# ::node	0.3.0.0.0	"Britain"	3-4
# ::root	0	and
# ::edge	20	op1	cover-01	0.1.1.2	0.1.1	
# ::edge	and	op1	contribute-01	0	0.1	
# ::edge	and	op2	woman	0	0.2	
# ::edge	and	op3	injure-01	0	0.3	
# ::edge	contribute-01	ARG1	yesterday	0.1	0.1.0	
# ::edge	contribute-01	ARG2	accident	0.1	0.1.2	
# ::edge	country	name	name	0.3.0	0.3.0.0	
# ::edge	cover-01	ARG0	other	0.1.1	0.1.1.0	
# ::edge	cover-01	ARG1	contribute-01	0.1.1	0.1	
# ::edge	cover-01	ARG2	south	0.1.1	0.1.1.1	
# ::edge	die-01	ARG1	and	0.0	0	
# ::edge	injure-01	ARG1	country	0.3	0.3.0	
# ::edge	name	op1	"Britain"	0.3.0.0	0.3.0.0.0	
(a / and 
      :ARG1-of (d / die-01) 
      :op1 (c / contribute-01 
            :ARG1 (y / yesterday) 
            :ARG1-of (c3 / cover-01 
                  :ARG0 (o / other) 
                  :ARG2 (s / south) 
                  :op-of 20) 
            :ARG2 (a2 / accident)) 
      :op2 (w / woman) 
      :op3 (i / injure-01 
            :ARG1 (c2 / country 
                  :name (n / name 
                        :op1 "Britain"))))

# ::snt the accident would have to happen here
# ::tok the accident would have to happen here
# ::alignments 6-7|0.1 5-6|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:48.061
# ::node	0	happen-01	5-6
# ::node	0.0	accident	1-2
# ::node	0.1	here	6-7
# ::root	0	happen-01
# ::edge	happen-01	ARG0	accident	0	0.0	
# ::edge	happen-01	location	here	0	0.1	
(h2 / happen-01 
      :ARG0 (a / accident) 
      :location (h / here))

# ::snt schoolboy mark parrott 16 a boarder at lord williamss school thame was taken to hospital with a broken leg after an accident in thame cattle market
# ::tok schoolboy mark parrott 16 a boarder at lord williamss school thame was taken to hospital with a broken leg after an accident in thame cattle market
# ::alignments 25-26|0.0 24-25|0 21-22|0.1.0 19-20|0.1 18-19|0.1.1 17-18|0.1.1.0 14-15|0.1.1.0.1 9-10|0.1.1.0.2.1 7-8|0.1.1.0.0 3-4|0.1.1.0.2.0 1-2|0.1.1.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:48.158
# ::node	0	cattle	24-25
# ::node	0.0	market	25-26
# ::node	0.1	after	19-20
# ::node	0.1.0	accident	21-22
# ::node	0.1.1	leg	18-19
# ::node	0.1.1.0	break-01	17-18
# ::node	0.1.1.0.0	lord	7-8
# ::node	0.1.1.0.1	hospital	14-15
# ::node	0.1.1.0.2	mark-01	1-2
# ::node	0.1.1.0.2.0	16	3-4
# ::node	0.1.1.0.2.1	school	9-10
# ::root	0	cattle
(c / cattle 
      :mod-of (m / market) 
      :op-of (a2 / after 
            :op1 (a / accident) 
            :time-of (l / leg 
                  :mod (b / break-01 
                        :ARG0 (l2 / lord) 
                        :ARG1 (h / hospital) 
                        :ARG2 (m2 / mark-01 
                              :ARG0 16 
                              :ARG1 (s / school))))))

# ::snt in the second year michael saw owing to the accidents of the timetable a good deal more of nick
# ::tok in the second year michael saw owing to the accidents of the timetable a good deal more of nick
# ::alignments 15-16|0.0 14-15|0.0.1 9-10|0.1 5-6|0 3-4|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:48.178
# ::node	0	see-01	5-6
# ::node	0.0	deal-01	15-16
# ::node	0.0.0	year	3-4
# ::node	0.0.1	good	14-15
# ::node	0.1	accident	9-10
# ::root	0	see-01
# ::edge	deal-01	ARG0	year	0.0	0.0.0	
# ::edge	deal-01	mod	good	0.0	0.0.1	
# ::edge	see-01	ARG1	deal-01	0	0.0	
# ::edge	see-01	location	accident	0	0.1	
(s / see-01 
      :ARG1 (d / deal-01 
            :ARG0 (y / year) 
            :mod (g / good)) 
      :location (a / accident))

# ::snt police said some motorists were driving too close and too fast shortly before the accidents although they were not certain that this had caused the initial collisions
# ::tok police said some motorists were driving too close and too fast shortly before the accidents although they were not certain that this had caused the initial collisions
# ::alignments 25-26|0.2.0.0.0 23-24|0 21-22|0.0 19-20|0.2 16-17|0.2.0 14-15|0.2.0.0.3.0 12-13|0.2.0.0.3 11-12|0.2.0.0.2.0.0.0 10-11|0.2.0.0.2.0.0 9-10|0.2.0.0.2.1 8-9|0.2.0.0.2 6-7|0.2.0.0.2.0 5-6|0.2.0.0 2-3|0.1 1-2|0.2.0.0.1 0-1|0.2.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:48.561
# ::node	0	cause-01	23-24
# ::node	0.0	this	21-22
# ::node	0.1	some	2-3
# ::node	0.2	certain	19-20
# ::node	0.2.0	they	16-17
# ::node	0.2.0.0	drive-01	5-6
# ::node	0.2.0.0.0	initial	25-26
# ::node	0.2.0.0.1	say-01	1-2
# ::node	0.2.0.0.1.0	police	0-1
# ::node	0.2.0.0.2	and	8-9
# ::node	0.2.0.0.2.0	too	6-7
# ::node	0.2.0.0.2.0.0	fast	10-11
# ::node	0.2.0.0.2.0.0.0	short	11-12
# ::node	0.2.0.0.2.1	too	9-10
# ::node	0.2.0.0.3	before	12-13
# ::node	0.2.0.0.3.0	accident	14-15
# ::root	0	cause-01
# ::edge	and	mod	too	0.2.0.0.2	0.2.0.0.2.0	
# ::edge	and	op1	too	0.2.0.0.2	0.2.0.0.2.1	
# ::edge	before	op1	accident	0.2.0.0.3	0.2.0.0.3.0	
# ::edge	cause-01	ARG0	this	0	0.0	
# ::edge	cause-01	ARG1	some	0	0.1	
# ::edge	certain	domain	cause-01	0.2	0	
# ::edge	certain	domain	they	0.2	0.2.0	
# ::edge	drive-01	ARG0	initial	0.2.0.0	0.2.0.0.0	
# ::edge	drive-01	ARG1	they	0.2.0.0	0.2.0	
# ::edge	drive-01	direction	and	0.2.0.0	0.2.0.0.2	
# ::edge	drive-01	time	before	0.2.0.0	0.2.0.0.3	
# ::edge	fast	mod	too	0.2.0.0.2.0.0	0.2.0.0.2.0	
# ::edge	fast	op1	short	0.2.0.0.2.0.0	0.2.0.0.2.0.0.0	
# ::edge	say-01	ARG0	police	0.2.0.0.1	0.2.0.0.1.0	
# ::edge	say-01	ARG1	drive-01	0.2.0.0.1	0.2.0.0	
(c / cause-01 
      :ARG0 (t / this) 
      :ARG1 (s2 / some) 
      :domain-of (c2 / certain 
            :domain (t2 / they 
                  :ARG1-of (d / drive-01 
                        :ARG0 (i / initial) 
                        :ARG1-of (s3 / say-01 
                              :ARG0 (p / police)) 
                        :direction (a2 / and 
                              :mod (t4 / too 
                                    :mod-of (f / fast 
                                          :op1 (s / short))) 
                              :op1 (t3 / too)) 
                        :time (b / before 
                              :op1 (a / accident))))))

# ::snt fourteen fire appliances were sent to the accident
# ::tok fourteen fire appliances were sent to the accident
# ::alignments 7-8|0.0 4-5|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:48.567
# ::node	0	send-01	4-5
# ::node	0.0	accident	7-8
# ::root	0	send-01
# ::edge	send-01	ARG2	accident	0	0.0	
(s / send-01 
      :ARG2 (a / accident))

# ::snt on the buses everything is running smoothly except for buses heading down the headington road out towards the green road roundabout because of the accident there
# ::tok on the buses everything is running smoothly except for buses heading down the headington road out towards the green road roundabout because of the accident there
# ::alignments 24-25|0.0 21-22|0 19-20|0.1.2.0 18-19|0.1.2.0.0 14-15|0.1.1 11-12|0.1.2 10-11|0.1 9-10|0.1.0 7-8|0.1.0.0 6-7|0.1.0.0.1 3-4|0.1.0.0.0 2-3|0.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:48.794
# ::node	0	cause-01	21-22
# ::node	0.0	accident	24-25
# ::node	0.1	head-02	10-11
# ::node	0.1.0	bus	9-10
# ::node	0.1.0.0	except-00	7-8
# ::node	0.1.0.0.0	everything	3-4
# ::node	0.1.0.0.0.0	bus	2-3
# ::node	0.1.0.0.1	smooth	6-7
# ::node	0.1.1	road	14-15
# ::node	0.1.2	down	11-12
# ::node	0.1.2.0	road	19-20
# ::node	0.1.2.0.0	green	18-19
# ::root	0	cause-01
# ::edge	cause-01	ARG0	accident	0	0.0	
# ::edge	cause-01	ARG1	head-02	0	0.1	
# ::edge	down	op1	road	0.1.2	0.1.2.0	
# ::edge	everything	mod	bus	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	except-00	ARG0	everything	0.1.0.0	0.1.0.0.0	
# ::edge	except-00	ARG1	bus	0.1.0.0	0.1.0	
# ::edge	except-00	mod	smooth	0.1.0.0	0.1.0.0.1	
# ::edge	head-02	ARG0	bus	0.1	0.1.0	
# ::edge	head-02	ARG1	road	0.1	0.1.1	
# ::edge	head-02	direction	down	0.1	0.1.2	
# ::edge	road	mod	green	0.1.2.0	0.1.2.0.0	
(c / cause-01 
      :ARG0 (a / accident) 
      :ARG1 (h / head-02 
            :ARG0 (b / bus 
                  :ARG1-of (e / except-00 
                        :ARG0 (e2 / everything 
                              :mod (b2 / bus)) 
                        :mod (s / smooth))) 
            :ARG1 (r2 / road) 
            :direction (d / down 
                  :op1 (r / road 
                        :mod (g / green)))))

# ::snt the woman lost six teeth in the accident but the golfer was never traced
# ::tok the woman lost six teeth in the accident but the golfer was never traced
# ::alignments 13-14|0.1 10-11|0.1.1.0+0.1.1 8-9|0 7-8|0.0 4-5|0.1.0.0.0 3-4|0.1.0.0.0.0 2-3|0.1.0.0 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:48.874
# ::node	0	contrast-01	8-9
# ::node	0.0	accident	7-8
# ::node	0.1	trace-02	13-14
# ::node	0.1.0	woman	1-2
# ::node	0.1.0.0	lose-02	2-3
# ::node	0.1.0.0.0	tooth	4-5
# ::node	0.1.0.0.0.0	6	3-4
# ::node	0.1.1	person	10-11
# ::node	0.1.1.0	golf-01	10-11
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	accident	0	0.0	
# ::edge	contrast-01	ARG2	trace-02	0	0.1	
# ::edge	golf-01	ARG0	person	0.1.1.0	0.1.1	
# ::edge	lose-02	ARG0	woman	0.1.0.0	0.1.0	
# ::edge	lose-02	ARG1	tooth	0.1.0.0	0.1.0.0.0	
# ::edge	tooth	quant	6	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	trace-02	ARG0	woman	0.1	0.1.0	
# ::edge	trace-02	ARG1	person	0.1	0.1.1	
(c / contrast-01 
      :ARG1 (a / accident) 
      :ARG2 (t / trace-02 
            :ARG0 (w / woman 
                  :ARG0-of (l / lose-02 
                        :ARG1 (t2 / tooth 
                              :quant 6))) 
            :ARG1 (p / person 
                  :ARG0-of (g / golf-01))))

# ::snt the boy was taken to hospital after the accident but did not need treatment, ford admitted driving while unsupervised driving without due care and attention failing to display l plates having no insurance failing to stop after an accident and failing to report the accident
# ::tok the boy was taken to hospital after the accident but did not need treatment , ford admitted driving while unsupervised driving without due care and attention failing to display l plates having no insurance failing to stop after an accident and failing to report the accident
# ::alignments 45-46|0.0.2.0.0.0.0.0.0.1.0.0 43-44|0.0.2.0.0.0.0.0.0.1.0.1 41-42|0.0.2.0.0.0.0.0.0.1.0 40-41|0.0.2.0.0.0.0.0.0.1 39-40|0.0.2.0.0.0.0.0.0.2.0 37-38|0.0.2.0.0.0.0.0.0.2 36-37|0.0.2.0.0.0.0.0.0 34-35|0.0.2.0.0.0.0.0 33-34|0.0.2.0.0.0.0.0.0.0 32-33|0.0.2.0.0.0.0.0.0.0.0 30-31|0.0.2.0 28-29|0.0.2.0.0 26-27|0.0.2.0.0.0 25-26|0.0.2.0.0.0.0 24-25|0.0.2 23-24|0.1.0.0.0 20-21|0.1.0.0 17-18|0.1.0 16-17|0.1 13-14|0.0.1 12-13|0.0 9-10|0 8-9|0.2.0 6-7|0.2 5-6|0.0.1.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:49.356
# ::node	0	contrast-01	9-10
# ::node	0.0	need-01	12-13
# ::node	0.0.0	boy	1-2
# ::node	0.0.1	treat-03	13-14
# ::node	0.0.1.0	hospital	5-6
# ::node	0.0.2	and	24-25
# ::node	0.0.2.0	plate	30-31
# ::node	0.0.2.0.0	display-01	28-29
# ::node	0.0.2.0.0.0	fail-01	26-27
# ::node	0.0.2.0.0.0.0	attention	25-26
# ::node	0.0.2.0.0.0.0.0	fail-01	34-35
# ::node	0.0.2.0.0.0.0.0.0	stop-01	36-37
# ::node	0.0.2.0.0.0.0.0.0.0	insure-02	33-34
# ::node	0.0.2.0.0.0.0.0.0.0.0	-	32-33
# ::node	0.0.2.0.0.0.0.0.0.1	and	40-41
# ::node	0.0.2.0.0.0.0.0.0.1.0	fail-01	41-42
# ::node	0.0.2.0.0.0.0.0.0.1.0.0	accident	45-46
# ::node	0.0.2.0.0.0.0.0.0.1.0.1	report	43-44
# ::node	0.0.2.0.0.0.0.0.0.2	after	37-38
# ::node	0.0.2.0.0.0.0.0.0.2.0	accident	39-40
# ::node	0.1	admit-01	16-17
# ::node	0.1.0	drive-01	17-18
# ::node	0.1.0.0	drive-01	20-21
# ::node	0.1.0.0.0	care-01	23-24
# ::node	0.2	after	6-7
# ::node	0.2.0	accident	8-9
# ::root	0	contrast-01
# ::edge	admit-01	ARG1	drive-01	0.1	0.1.0	
# ::edge	after	op1	accident	0.0.2.0.0.0.0.0.0.2	0.0.2.0.0.0.0.0.0.2.0	
# ::edge	after	op1	accident	0.2	0.2.0	
# ::edge	after	op2	contrast-01	0.2	0	
# ::edge	and	op1	need-01	0.0.2	0.0	
# ::edge	and	op1	stop-01	0.0.2.0.0.0.0.0.0.1	0.0.2.0.0.0.0.0.0	
# ::edge	and	op2	fail-01	0.0.2.0.0.0.0.0.0.1	0.0.2.0.0.0.0.0.0.1.0	
# ::edge	and	op2	plate	0.0.2	0.0.2.0	
# ::edge	contrast-01	ARG1	need-01	0	0.0	
# ::edge	contrast-01	ARG2	admit-01	0	0.1	
# ::edge	display-01	ARG1	plate	0.0.2.0.0	0.0.2.0	
# ::edge	drive-01	ARG1	care-01	0.1.0.0	0.1.0.0.0	
# ::edge	drive-01	ARG2	drive-01	0.1.0	0.1.0.0	
# ::edge	fail-01	ARG0	attention	0.0.2.0.0.0.0.0	0.0.2.0.0.0.0	
# ::edge	fail-01	ARG1	accident	0.0.2.0.0.0.0.0.0.1.0	0.0.2.0.0.0.0.0.0.1.0.0	
# ::edge	fail-01	ARG1	attention	0.0.2.0.0.0	0.0.2.0.0.0.0	
# ::edge	fail-01	ARG1	stop-01	0.0.2.0.0.0.0.0	0.0.2.0.0.0.0.0.0	
# ::edge	fail-01	ARG2	display-01	0.0.2.0.0.0	0.0.2.0.0	
# ::edge	fail-01	ARG2	report	0.0.2.0.0.0.0.0.0.1.0	0.0.2.0.0.0.0.0.0.1.0.1	
# ::edge	insure-02	polarity	-	0.0.2.0.0.0.0.0.0.0	0.0.2.0.0.0.0.0.0.0.0	
# ::edge	need-01	ARG0	boy	0.0	0.0.0	
# ::edge	need-01	ARG1	treat-03	0.0	0.0.1	
# ::edge	stop-01	ARG0	insure-02	0.0.2.0.0.0.0.0.0	0.0.2.0.0.0.0.0.0.0	
# ::edge	stop-01	time	after	0.0.2.0.0.0.0.0.0	0.0.2.0.0.0.0.0.0.2	
# ::edge	treat-03	ARG0	hospital	0.0.1	0.0.1.0	
(c2 / contrast-01 
      :ARG1 (n / need-01 
            :ARG0 (b / boy) 
            :ARG1 (t / treat-03 
                  :ARG0 (h / hospital)) 
            :op-of (a6 / and 
                  :op1 (p / plate 
                        :ARG1-of (d / display-01 
                              :ARG2-of (f3 / fail-01 
                                    :ARG1 (a5 / attention 
                                          :ARG0-of (f2 / fail-01 
                                                :ARG1 (s / stop-01 
                                                      :ARG0 (i / insure-02 
                                                            :polarity (- / -)) 
                                                      :op-of (a2 / and 
                                                            :op1 (f / fail-01 
                                                                  :ARG1 (a / accident) 
                                                                  :ARG2 (r / report))) 
                                                      :time (a4 / after 
                                                            :op1 (a3 / accident)))))))))) 
      :ARG2 (a7 / admit-01 
            :ARG1 (d3 / drive-01 
                  :ARG2 (d2 / drive-01 
                        :ARG1 (c / care-01)))) 
      :op-of (a9 / after 
            :op1 (a8 / accident)))

# ::snt directorgeneral of the british safety council since 1968 and author of several books on safety he is a leading authority on accident prevention
# ::tok directorgeneral of the british safety council since 1968 and author of several books on safety he is a leading authority on accident prevention
# ::alignments 22-23|0.0.0.1.0.0.0.0 21-22|0.0.0.1.0.0.0.0.0 19-20|0.0.0.1.0.0.0 18-19|0.0.0.1.0.0 15-16|0.0.0.1.0 14-15|0.0.0.1 12-13|0.0.0.0 11-12|0.0.0.0.0 9-10|0.0.0+0.0 8-9|0 7-8|0.0.0.1.0.1.0.0.0.0+0.0.0.1.0.1.0.0.0 6-7|0.0.0.1.0.1.0.0 5-6|0.0.0.1.0.1.0 4-5|0.0.0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:49.564
# ::node	0	and	8-9
# ::node	0.0	person	9-10
# ::node	0.0.0	author-01	9-10
# ::node	0.0.0.0	book	12-13
# ::node	0.0.0.0.0	several	11-12
# ::node	0.0.0.1	safe-41	14-15
# ::node	0.0.0.1.0	he	15-16
# ::node	0.0.0.1.0.0	lead-01	18-19
# ::node	0.0.0.1.0.0.0	authority	19-20
# ::node	0.0.0.1.0.0.0.0	prevent-01	22-23
# ::node	0.0.0.1.0.0.0.0.0	accident	21-22
# ::node	0.0.0.1.0.1	safe-41	4-5
# ::node	0.0.0.1.0.1.0	council	5-6
# ::node	0.0.0.1.0.1.0.0	since	6-7
# ::node	0.0.0.1.0.1.0.0.0	date-entity	7-8
# ::node	0.0.0.1.0.1.0.0.0.0	1968	7-8
# ::root	0	and
# ::edge	and	op1	person	0	0.0	
# ::edge	author-01	ARG0	person	0.0.0	0.0	
# ::edge	author-01	ARG1	book	0.0.0	0.0.0.0	
# ::edge	author-01	purpose	safe-41	0.0.0	0.0.0.1	
# ::edge	authority	poss	prevent-01	0.0.0.1.0.0.0	0.0.0.1.0.0.0.0	
# ::edge	book	quant	several	0.0.0.0	0.0.0.0.0	
# ::edge	council	mod	safe-41	0.0.0.1.0.1.0	0.0.0.1.0.1	
# ::edge	council	time	since	0.0.0.1.0.1.0	0.0.0.1.0.1.0.0	
# ::edge	date-entity	year	1968	0.0.0.1.0.1.0.0.0	0.0.0.1.0.1.0.0.0.0	
# ::edge	lead-01	ARG0	authority	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	lead-01	ARG1	he	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	prevent-01	ARG1	accident	0.0.0.1.0.0.0.0	0.0.0.1.0.0.0.0.0	
# ::edge	safe-41	ARG1	he	0.0.0.1	0.0.0.1.0	
# ::edge	safe-41	ARG1	he	0.0.0.1.0.1	0.0.0.1.0	
# ::edge	since	op1	date-entity	0.0.0.1.0.1.0.0	0.0.0.1.0.1.0.0.0	
(a4 / and 
      :op1 (p2 / person 
            :ARG0-of (a3 / author-01 
                  :ARG1 (b / book 
                        :quant (s2 / several)) 
                  :purpose (s / safe-41 
                        :ARG1 (h / he 
                              :ARG1-of (l / lead-01 
                                    :ARG0 (a2 / authority 
                                          :poss (p / prevent-01 
                                                :ARG1 (a / accident)))) 
                              :ARG1-of (s4 / safe-41 
                                    :mod-of (c / council 
                                          :time (s3 / since 
                                                :op1 (d / date-entity 
                                                      :year 1968)))))))))

# ::snt   this statement not only turns its back on any dichotomy between principle and policy in judicial decisionmakingfo id114 but invokes a goal of social psychology as justification for wealth redistribution far removed from any conventional objective of accident compensation policy let alone of tort law, mass litigation is not the only solution for mass accidents
# ::tok this statement not only turns its back on any dichotomy between principle and policy in judicial decisionmakingfo id114 but invokes a goal of social psychology as justification for wealth redistribution far removed from any conventional objective of accident compensation policy let alone of tort law , mass litigation is not the only solution for mass accidents
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:49.565
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt transport did you know that lorry drivers who pick up hitchhikers have 73 per cent fewer accidents than those who dont
# ::tok transport did you know that lorry drivers who pick up hitchhikers have 73 per cent fewer accidents than those who dont
# ::alignments 16-17|0.1.0 15-16|0.1.0.1 14-15|0.1.0.0.0+0.1.0.0 12-13|0.1.1 8-9|0.0.0 6-7|0.0.0.0.0+0.0.0.0 3-4|0 2-3|0.0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:49.757
# ::node	0	know-01	3-4
# ::node	0.0	you	2-3
# ::node	0.0.0	pick-01	8-9
# ::node	0.0.0.0	person	6-7
# ::node	0.0.0.0.0	drive-01	6-7
# ::node	0.1	transport-01	0-1
# ::node	0.1.0	accident	16-17
# ::node	0.1.0.0	monetary-quantity	14-15
# ::node	0.1.0.0.0	cent	14-15
# ::node	0.1.0.1	few	15-16
# ::node	0.1.1	73	12-13
# ::root	0	know-01
# ::edge	accident	mod	monetary-quantity	0.1.0	0.1.0.0	
# ::edge	accident	quant	few	0.1.0	0.1.0.1	
# ::edge	drive-01	ARG0	person	0.0.0.0.0	0.0.0.0	
# ::edge	know-01	ARG0	you	0	0.0	
# ::edge	know-01	ARG1	transport-01	0	0.1	
# ::edge	monetary-quantity	unit	cent	0.1.0.0	0.1.0.0.0	
# ::edge	pick-01	ARG0	person	0.0.0	0.0.0.0	
# ::edge	pick-01	ARG1	you	0.0.0	0.0	
# ::edge	transport-01	ARG0	accident	0.1	0.1.0	
# ::edge	transport-01	ARG1	73	0.1	0.1.1	
(k / know-01 
      :ARG0 (y / you 
            :ARG1-of (p / pick-01 
                  :ARG0 (p2 / person 
                        :ARG0-of (d / drive-01)))) 
      :ARG1 (t / transport-01 
            :ARG0 (a / accident 
                  :mod (m / monetary-quantity 
                        :unit (c / cent)) 
                  :quant (f / few)) 
            :ARG1 73))

# ::snt mass accidents and mass product disasters have repeatedly driven settlements into hundreds of millions of dollars even billions besides necessitating new procedures for administering such mass litigation
# ::tok mass accidents and mass product disasters have repeatedly driven settlements into hundreds of millions of dollars even billions besides necessitating new procedures for administering such mass litigation
# ::alignments 25-26|0.4 24-25|0.4.0 21-22|0.0.0 20-21|0.0.0.0 18-19|0.0 15-16|0.3.1.1.0+0.3.1.1 9-10|0.1 8-9|0 7-8|0.2 5-6|0.3.0 4-5|0.3.1 3-4|0.3.1.0 2-3|0.3 1-2|0.2.0 0-1|0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:49.950
# ::node	0	drive-02	8-9
# ::node	0.0	besides	18-19
# ::node	0.0.0	procedure	21-22
# ::node	0.0.0.0	new	20-21
# ::node	0.1	settlement	9-10
# ::node	0.2	repeat-01	7-8
# ::node	0.2.0	accident	1-2
# ::node	0.2.0.0	mass	0-1
# ::node	0.3	and	2-3
# ::node	0.3.0	disaster	5-6
# ::node	0.3.1	product	4-5
# ::node	0.3.1.0	mass	3-4
# ::node	0.3.1.1	monetary-quantity	15-16
# ::node	0.3.1.1.0	dollar	15-16
# ::node	0.4	mass	25-26
# ::node	0.4.0	such	24-25
# ::root	0	drive-02
# ::edge	accident	degree	mass	0.2.0	0.2.0.0	
# ::edge	and	op1	disaster	0.3	0.3.0	
# ::edge	and	op2	drive-02	0.3	0	
# ::edge	besides	op1	procedure	0.0	0.0.0	
# ::edge	drive-02	ARG0	besides	0	0.0	
# ::edge	drive-02	ARG1	settlement	0	0.1	
# ::edge	mass	degree	such	0.4	0.4.0	
# ::edge	mass	op1	drive-02	0.4	0	
# ::edge	monetary-quantity	unit	dollar	0.3.1.1	0.3.1.1.0	
# ::edge	procedure	mod	new	0.0.0	0.0.0.0	
# ::edge	product	mod	mass	0.3.1	0.3.1.0	
# ::edge	product	quant	monetary-quantity	0.3.1	0.3.1.1	
# ::edge	product	topic	and	0.3.1	0.3	
# ::edge	repeat-01	ARG0	accident	0.2	0.2.0	
# ::edge	repeat-01	ARG1	drive-02	0.2	0	
(d2 / drive-02 
      :ARG0 (b / besides 
            :op1 (p / procedure 
                  :mod (n / new))) 
      :ARG1 (s2 / settlement) 
      :ARG1-of (r / repeat-01 
            :ARG0 (a2 / accident 
                  :degree (m4 / mass))) 
      :op-of (a / and 
            :op1 (d3 / disaster) 
            :topic-of (p2 / product 
                  :mod (m3 / mass) 
                  :quant (m2 / monetary-quantity 
                        :unit (d / dollar)))) 
      :op-of (m / mass 
            :degree (s / such)))

# ::snt we are puppets on a very thin string italian downhiller danilo sbardellotto said after the accident
# ::tok we are puppets on a very thin string italian downhiller danilo sbardellotto said after the accident
# ::alignments 15-16|0.1.0 13-14|0.1 12-13|0 8-9|0.2.0.0.0.0.0+0.2.0.0.0.0+0.2.0.0.0 7-8|0.2 6-7|0.2.0 5-6|0.2.0.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:49.982
# ::node	0	say-01	12-13
# ::node	0.0	we	0-1
# ::node	0.1	after	13-14
# ::node	0.1.0	accident	15-16
# ::node	0.2	string	7-8
# ::node	0.2.0	thin	6-7
# ::node	0.2.0.0	very	5-6
# ::node	0.2.0.0.0	language	8-9
# ::node	0.2.0.0.0.0	name	8-9
# ::node	0.2.0.0.0.0.0	"Italian"	8-9
# ::root	0	say-01
# ::edge	after	op1	accident	0.1	0.1.0	
# ::edge	language	mod	very	0.2.0.0.0	0.2.0.0	
# ::edge	language	name	name	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	name	op1	"Italian"	0.2.0.0.0.0	0.2.0.0.0.0.0	
# ::edge	say-01	ARG0	we	0	0.0	
# ::edge	say-01	time	after	0	0.1	
# ::edge	say-01	time	string	0	0.2	
# ::edge	string	mod	thin	0.2	0.2.0	
# ::edge	thin	degree	very	0.2.0	0.2.0.0	
(s / say-01 
      :ARG0 (w / we) 
      :time (a2 / after 
            :op1 (a / accident)) 
      :time (s2 / string 
            :mod (t / thin 
                  :degree (v / very 
                        :mod-of (l / language 
                              :name (n / name 
                                    :op1 "Italian"))))))

# ::snt he suffered head injuries in the accident last night on the a423 at remenham hill henley
# ::tok he suffered head injuries in the accident last night on the a423 at remenham hill henley
# ::alignments 8-9|0.1 7-8|0.1.0 6-7|0.0.0.0 3-4|0.0.0 2-3|0.0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:50.016
# ::node	0	suffer-01	1-2
# ::node	0.0	he	0-1
# ::node	0.0.0	injure-01	3-4
# ::node	0.0.0.0	accident	6-7
# ::node	0.0.1	head-01	2-3
# ::node	0.1	night	8-9
# ::node	0.1.0	last	7-8
# ::root	0	suffer-01
# ::edge	head-01	ARG0	he	0.0.1	0.0	
# ::edge	injure-01	ARG0	he	0.0.0	0.0	
# ::edge	injure-01	ARG1	accident	0.0.0	0.0.0.0	
# ::edge	night	mod	last	0.1	0.1.0	
# ::edge	suffer-01	ARG0	he	0	0.0	
# ::edge	suffer-01	ARG1	night	0	0.1	
(s / suffer-01 
      :ARG0 (h2 / he 
            :ARG0-of (i / injure-01 
                  :ARG1 (a / accident)) 
            :ARG0-of (h / head-01)) 
      :ARG1 (n / night 
            :mod (l / last)))

# ::snt when theres a fatal accident on the roads we do nothing because people dont think there but for the grace of god go i,  they regard traffic accidents as things that happen to other people
# ::tok when theres a fatal accident on the roads we do nothing because people dont think there but for the grace of god go i , they regard traffic accidents as things that happen to other people
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:50.018
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt it is a career he fell into by accident after arriving in britain from wilmington delaware on an extended holiday in 1970
# ::tok it is a career he fell into by accident after arriving in britain from wilmington delaware on an extended holiday in 1970
# ::alignments 21-22|0.0.0.4.0+0.0.0.4 19-20|0.0 18-19|0 12-13|0.0.0.2.0.0+0.0.0.2.0+0.0.0.2 10-11|0.0.0 9-10|0.0.0.3 8-9|0.0.0.1 5-6|0.0.0.0.0 4-5|0.0.0.0 3-4|0.0.0.0.0.0 0-1|0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:50.163
# ::node	0	extend-01	18-19
# ::node	0.0	holiday	19-20
# ::node	0.0.0	arrive-01	10-11
# ::node	0.0.0.0	he	4-5
# ::node	0.0.0.0.0	fall-01	5-6
# ::node	0.0.0.0.0.0	career	3-4
# ::node	0.0.0.0.0.0.0	it	0-1
# ::node	0.0.0.1	accident	8-9
# ::node	0.0.0.2	country	12-13
# ::node	0.0.0.2.0	name	12-13
# ::node	0.0.0.2.0.0	"Britain"	12-13
# ::node	0.0.0.3	after	9-10
# ::node	0.0.0.4	date-entity	21-22
# ::node	0.0.0.4.0	1970	21-22
# ::root	0	extend-01
# ::edge	after	op1	arrive-01	0.0.0.3	0.0.0	
# ::edge	arrive-01	ARG0	he	0.0.0	0.0.0.0	
# ::edge	arrive-01	ARG1	accident	0.0.0	0.0.0.1	
# ::edge	arrive-01	ARG4	country	0.0.0	0.0.0.2	
# ::edge	arrive-01	purpose	holiday	0.0.0	0.0	
# ::edge	arrive-01	time	date-entity	0.0.0	0.0.0.4	
# ::edge	career	domain	it	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	country	name	name	0.0.0.2	0.0.0.2.0	
# ::edge	date-entity	year	1970	0.0.0.4	0.0.0.4.0	
# ::edge	extend-01	ARG1	holiday	0	0.0	
# ::edge	fall-01	ARG0	he	0.0.0.0.0	0.0.0.0	
# ::edge	fall-01	ARG1	career	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	name	op1	"Britain"	0.0.0.2.0	0.0.0.2.0.0	
(e / extend-01 
      :ARG1 (h / holiday 
            :purpose-of (a / arrive-01 
                  :ARG0 (h2 / he 
                        :ARG0-of (f / fall-01 
                              :ARG1 (c2 / career 
                                    :domain (i / it)))) 
                  :ARG1 (a3 / accident) 
                  :ARG4 (c / country 
                        :name (n / name 
                              :op1 "Britain")) 
                  :op-of (a2 / after) 
                  :time (d / date-entity 
                        :year 1970))))

# ::snt glasnost has exposed myriad incidents ranging from a string of submarine accidents to indiscipline and barracks brutality sometimes along ethnic lines
# ::tok glasnost has exposed myriad incidents ranging from a string of submarine accidents to indiscipline and barracks brutality sometimes along ethnic lines
# ::alignments 20-21|0.3.0 19-20|0.1.1.0.0 18-19|0.3 17-18|0.0 16-17|0.2 14-15|0 11-12|0.4 10-11|0.4.0 8-9|0.1.0 5-6|0.1.1.0 4-5|0.1.1 3-4|0.1.1.1 2-3|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:50.286
# ::node	0	and	14-15
# ::node	0.0	sometimes	17-18
# ::node	0.1	expose-01	2-3
# ::node	0.1.0	string	8-9
# ::node	0.1.1	incident	4-5
# ::node	0.1.1.0	range-01	5-6
# ::node	0.1.1.0.0	ethnic	19-20
# ::node	0.1.1.1	myriad	3-4
# ::node	0.2	brutality	16-17
# ::node	0.3	along	18-19
# ::node	0.3.0	line	20-21
# ::node	0.4	accident	11-12
# ::node	0.4.0	submarine	10-11
# ::root	0	and
# ::edge	accident	mod	submarine	0.4	0.4.0	
# ::edge	accident	purpose	and	0.4	0	
# ::edge	along	op1	line	0.3	0.3.0	
# ::edge	and	manner	sometimes	0	0.0	
# ::edge	and	op1	expose-01	0	0.1	
# ::edge	and	op2	brutality	0	0.2	
# ::edge	and	op3	along	0	0.3	
# ::edge	expose-01	ARG0	string	0.1	0.1.0	
# ::edge	expose-01	ARG1	incident	0.1	0.1.1	
# ::edge	incident	mod	myriad	0.1.1	0.1.1.1	
# ::edge	range-01	ARG0	ethnic	0.1.1.0	0.1.1.0.0	
# ::edge	range-01	ARG1	incident	0.1.1.0	0.1.1	
(a2 / and 
      :manner (s / sometimes) 
      :op1 (e2 / expose-01 
            :ARG0 (s3 / string) 
            :ARG1 (i / incident 
                  :ARG1-of (r / range-01 
                        :ARG0 (e / ethnic)) 
                  :mod (m / myriad))) 
      :op2 (b / brutality) 
      :op3 (a / along 
            :op1 (l / line)) 
      :purpose-of (a3 / accident 
            :mod (s2 / submarine)))

# ::snt in order to test the sincerity of the trial lawyers who are wont to defend punitive damages as a needed spur to accident prevention a most provocative reform would be to divert punitive damages from the plaintiff to humanitarian purposes such as organizations devoted to industrial safety and accident prevention the red cross and the like
# ::tok in order to test the sincerity of the trial lawyers who are wont to defend punitive damages as a needed spur to accident prevention a most provocative reform would be to divert punitive damages from the plaintiff to humanitarian purposes such as organizations devoted to industrial safety and accident prevention the red cross and the like
# ::alignments 53-54|0.3.2 52-53|0.3 51-52|0.3.1 49-50|0.0.0 48-49|0.0.0.0 47-48|0.2.1 46-47|0.2 45-46|0.2.0 43-44|0 42-43|0.0 40-41|0.3.0.0.1.0.0.0 39-40|0.1 38-39|0.1.0 33-34|0.3.0.1 31-32|0.3.0 27-28|0.3.0.0 26-27|0.3.0.0.0 25-26|0.3.0.0.0.0 23-24|0.3.0.0.1 22-23|0.3.0.0.1.0 19-20|0.3.0.0.1.0.0 16-17|0.3.0.0.1.0.0.1.0.0.0 14-15|0.3.0.0.1.0.0.1.0.0 9-10|0.3.0.0.1.0.0.1.0.0.0.0 8-9|0.3.0.0.1.0.0.1.0.0.0.0.0 5-6|0.3.0.0.1.0.0.1.0 3-4|0.3.0.0.1.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:51.623
# ::node	0	devote-01	43-44
# ::node	0.0	organization	42-43
# ::node	0.0.0	prevent-01	49-50
# ::node	0.0.0.0	accident	48-49
# ::node	0.1	purpose	39-40
# ::node	0.1.0	humanitarian	38-39
# ::node	0.2	safe-41	46-47
# ::node	0.2.0	industry	45-46
# ::node	0.2.1	and	47-48
# ::node	0.3	cross-02	52-53
# ::node	0.3.0	divert-01	31-32
# ::node	0.3.0.0	reform-01	27-28
# ::node	0.3.0.0.0	provoke-01	26-27
# ::node	0.3.0.0.0.0	most	25-26
# ::node	0.3.0.0.1	prevent-01	23-24
# ::node	0.3.0.0.1.0	accident	22-23
# ::node	0.3.0.0.1.0.0	need-01	19-20
# ::node	0.3.0.0.1.0.0.0	such	40-41
# ::node	0.3.0.0.1.0.0.1	test-01	3-4
# ::node	0.3.0.0.1.0.0.1.0	sincerity	5-6
# ::node	0.3.0.0.1.0.0.1.0.0	defend-01	14-15
# ::node	0.3.0.0.1.0.0.1.0.0.0	damage-01	16-17
# ::node	0.3.0.0.1.0.0.1.0.0.0.0	lawyer	9-10
# ::node	0.3.0.0.1.0.0.1.0.0.0.0.0	trial	8-9
# ::node	0.3.0.1	damage-01	33-34
# ::node	0.3.1	red	51-52
# ::node	0.3.2	and	53-54
# ::root	0	devote-01
# ::edge	and	op1	cross-02	0.3.2	0.3	
# ::edge	and	op1	safe-41	0.2.1	0.2	
# ::edge	cross-02	ARG1	divert-01	0.3	0.3.0	
# ::edge	cross-02	mod	red	0.3	0.3.1	
# ::edge	damage-01	ARG1	lawyer	0.3.0.0.1.0.0.1.0.0.0	0.3.0.0.1.0.0.1.0.0.0.0	
# ::edge	defend-01	ARG0	sincerity	0.3.0.0.1.0.0.1.0.0	0.3.0.0.1.0.0.1.0	
# ::edge	defend-01	ARG1	damage-01	0.3.0.0.1.0.0.1.0.0	0.3.0.0.1.0.0.1.0.0.0	
# ::edge	devote-01	ARG0	organization	0	0.0	
# ::edge	devote-01	ARG1	purpose	0	0.1	
# ::edge	devote-01	ARG2	safe-41	0	0.2	
# ::edge	devote-01	time	cross-02	0	0.3	
# ::edge	divert-01	ARG0	reform-01	0.3.0	0.3.0.0	
# ::edge	divert-01	ARG1	damage-01	0.3.0	0.3.0.1	
# ::edge	lawyer	mod	trial	0.3.0.0.1.0.0.1.0.0.0.0	0.3.0.0.1.0.0.1.0.0.0.0.0	
# ::edge	need-01	ARG0	such	0.3.0.0.1.0.0	0.3.0.0.1.0.0.0	
# ::edge	need-01	ARG1	test-01	0.3.0.0.1.0.0	0.3.0.0.1.0.0.1	
# ::edge	need-01	ARG2	accident	0.3.0.0.1.0.0	0.3.0.0.1.0	
# ::edge	prevent-01	ARG0	organization	0.0.0	0.0	
# ::edge	prevent-01	ARG1	accident	0.0.0	0.0.0.0	
# ::edge	prevent-01	ARG1	accident	0.3.0.0.1	0.3.0.0.1.0	
# ::edge	provoke-01	ARG1	reform-01	0.3.0.0.0	0.3.0.0	
# ::edge	provoke-01	degree	most	0.3.0.0.0	0.3.0.0.0.0	
# ::edge	purpose	mod	humanitarian	0.1	0.1.0	
# ::edge	reform-01	ARG2	prevent-01	0.3.0.0	0.3.0.0.1	
# ::edge	safe-41	mod	industry	0.2	0.2.0	
# ::edge	test-01	ARG1	sincerity	0.3.0.0.1.0.0.1	0.3.0.0.1.0.0.1.0	
(d / devote-01 
      :ARG0 (o / organization 
            :ARG0-of (p / prevent-01 
                  :ARG1 (a2 / accident))) 
      :ARG1 (p2 / purpose 
            :mod (h / humanitarian)) 
      :ARG2 (s / safe-41 
            :mod (i / industry) 
            :op-of (a3 / and)) 
      :time (c / cross-02 
            :ARG1 (d3 / divert-01 
                  :ARG0 (r2 / reform-01 
                        :ARG1-of (p3 / provoke-01 
                              :degree (m / most)) 
                        :ARG2 (p4 / prevent-01 
                              :ARG1 (a4 / accident 
                                    :ARG2-of (n / need-01 
                                          :ARG0 (s2 / such) 
                                          :ARG1 (t2 / test-01 
                                                :ARG1 (s3 / sincerity 
                                                      :ARG0-of (d5 / defend-01 
                                                            :ARG1 (d4 / damage-01 
                                                                  :ARG1 (l / lawyer 
                                                                        :mod (t / trial)))))))))) 
                  :ARG1 (d2 / damage-01)) 
            :mod (r / red) 
            :op-of (a / and)))

# ::snt this contrast is particularly noticeable in the different approaches to motortraffic accidents while the traditional european method has followed the original workers compensation model of thirdparty insurance or a central compensation fund the unique american solution has been simply to convert voluntary into compulsory firstparty insurance
# ::tok this contrast is particularly noticeable in the different approaches to motortraffic accidents while the traditional european method has followed the original workers compensation model of thirdparty insurance or a central compensation fund the unique american solution has been simply to convert voluntary into compulsory firstparty insurance
# ::alignments 45-46|0.1.1.0.1.1.0 43-44|0.1.1.0.1.1 41-42|0.1.1.0.1 40-41|0.1.1.0 38-39|0.1.1.0.1.0 35-36|0.1.1.0.0 34-35|0.1.1.0.0.1.0.0+0.1.1.0.0.1.0+0.1.1.0.0.1 33-34|0.1.1.0.0.0 31-32|0.1.1.3.1.0 30-31|0.1.1.3.1.0.0 29-30|0.1.1.3.1.0.1 27-28|0.1.1.3.1 26-27|0.1.1.3 23-24|0.1.1 22-23|0.1 21-22|0.1.0.0+0.1.0 20-21|0.1.1.2 18-19|0.1.1.1 16-17|0.1.1.1.0 15-16|0.1.1.1.0.1.0.0+0.1.1.1.0.1.0+0.1.1.1.0.1 14-15|0.1.1.1.0.0 11-12|0.1.0.1.0 8-9|0.1.0.1 7-8|0.1.0.1.1 3-4|0.1.1.3.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:52.548
# ::node	0	contrast-01	1-2
# ::node	0.0	this	0-1
# ::node	0.1	compensate-01	22-23
# ::node	0.1.0	person	21-22
# ::node	0.1.0.0	work-01	21-22
# ::node	0.1.0.1	approach-02	8-9
# ::node	0.1.0.1.0	accident	11-12
# ::node	0.1.0.1.1	differ-02	7-8
# ::node	0.1.1	model	23-24
# ::node	0.1.1.0	convert-01	40-41
# ::node	0.1.1.0.0	solution	35-36
# ::node	0.1.1.0.0.0	unique	33-34
# ::node	0.1.1.0.0.1	country	34-35
# ::node	0.1.1.0.0.1.0	name	34-35
# ::node	0.1.1.0.0.1.0.0	"America"	34-35
# ::node	0.1.1.0.1	volunteer-01	41-42
# ::node	0.1.1.0.1.0	simple	38-39
# ::node	0.1.1.0.1.1	compel-01	43-44
# ::node	0.1.1.0.1.1.0	insure-02	45-46
# ::node	0.1.1.1	follow-01	18-19
# ::node	0.1.1.1.0	method	16-17
# ::node	0.1.1.1.0.0	tradition	14-15
# ::node	0.1.1.1.0.1	continent	15-16
# ::node	0.1.1.1.0.1.0	name	15-16
# ::node	0.1.1.1.0.1.0.0	"Europe"	15-16
# ::node	0.1.1.2	original	20-21
# ::node	0.1.1.3	insure-02	26-27
# ::node	0.1.1.3.0	particular	3-4
# ::node	0.1.1.3.1	or	27-28
# ::node	0.1.1.3.1.0	fund-01	31-32
# ::node	0.1.1.3.1.0.0	compensate-01	30-31
# ::node	0.1.1.3.1.0.1	central	29-30
# ::root	0	contrast-01
# ::edge	approach-02	ARG0	person	0.1.0.1	0.1.0	
# ::edge	approach-02	ARG1	accident	0.1.0.1	0.1.0.1.0	
# ::edge	compel-01	ARG1	insure-02	0.1.1.0.1.1	0.1.1.0.1.1.0	
# ::edge	compensate-01	ARG0	person	0.1	0.1.0	
# ::edge	compensate-01	ARG1	fund-01	0.1.1.3.1.0.0	0.1.1.3.1.0	
# ::edge	compensate-01	ARG1	model	0.1	0.1.1	
# ::edge	compensate-01	time	contrast-01	0.1	0	
# ::edge	continent	name	name	0.1.1.1.0.1	0.1.1.1.0.1.0	
# ::edge	contrast-01	mod	this	0	0.0	
# ::edge	convert-01	ARG0	solution	0.1.1.0	0.1.1.0.0	
# ::edge	convert-01	ARG1	model	0.1.1.0	0.1.1	
# ::edge	convert-01	ARG2	volunteer-01	0.1.1.0	0.1.1.0.1	
# ::edge	country	name	name	0.1.1.0.0.1	0.1.1.0.0.1.0	
# ::edge	differ-02	ARG1	approach-02	0.1.0.1.1	0.1.0.1	
# ::edge	follow-01	ARG1	method	0.1.1.1	0.1.1.1.0	
# ::edge	follow-01	ARG2	model	0.1.1.1	0.1.1	
# ::edge	fund-01	ARG0	or	0.1.1.3.1.0	0.1.1.3.1	
# ::edge	fund-01	mod	central	0.1.1.3.1.0	0.1.1.3.1.0.1	
# ::edge	insure-02	ARG1	particular	0.1.1.3	0.1.1.3.0	
# ::edge	method	mod	continent	0.1.1.1.0	0.1.1.1.0.1	
# ::edge	method	mod	tradition	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	model	mod	original	0.1.1	0.1.1.2	
# ::edge	model	purpose	insure-02	0.1.1	0.1.1.3	
# ::edge	name	op1	"America"	0.1.1.0.0.1.0	0.1.1.0.0.1.0.0	
# ::edge	name	op1	"Europe"	0.1.1.1.0.1.0	0.1.1.1.0.1.0.0	
# ::edge	or	op1	insure-02	0.1.1.3.1	0.1.1.3	
# ::edge	solution	mod	country	0.1.1.0.0	0.1.1.0.0.1	
# ::edge	solution	mod	unique	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	volunteer-01	ARG1	simple	0.1.1.0.1	0.1.1.0.1.0	
# ::edge	volunteer-01	ARG2	compel-01	0.1.1.0.1	0.1.1.0.1.1	
# ::edge	work-01	ARG0	person	0.1.0.0	0.1.0	
(c8 / contrast-01 
      :mod (t2 / this) 
      :time-of (c6 / compensate-01 
            :ARG0 (p / person 
                  :ARG0-of (w / work-01) 
                  :ARG0-of (a2 / approach-02 
                        :ARG1 (a / accident) 
                        :ARG1-of (d / differ-02))) 
            :ARG1 (m / model 
                  :ARG1-of (c2 / convert-01 
                        :ARG0 (s2 / solution 
                              :mod (u / unique) 
                              :mod (c3 / country 
                                    :name (n / name 
                                          :op1 "America"))) 
                        :ARG2 (v / volunteer-01 
                              :ARG1 (s / simple) 
                              :ARG2 (c / compel-01 
                                    :ARG1 (i / insure-02)))) 
                  :ARG2-of (f2 / follow-01 
                        :ARG1 (m2 / method 
                              :mod (t / tradition) 
                              :mod (c7 / continent 
                                    :name (n2 / name 
                                          :op1 "Europe")))) 
                  :mod (o2 / original) 
                  :purpose (i2 / insure-02 
                        :ARG1 (p2 / particular) 
                        :op-of (o / or 
                              :ARG0-of (f / fund-01 
                                    :ARG1-of (c4 / compensate-01) 
                                    :mod (c5 / central)))))))

# ::snt suzanne otley who missed last season owing to a motor accident is making a welcome return to the north under21s as captain
# ::tok suzanne otley who missed last season owing to a motor accident is making a welcome return to the north under21s as captain
# ::alignments 21-22|0.1.1.0.0+0.1.1.0 18-19|0.1.2.0 14-15|0.1.0 10-11|0.0 9-10|0 5-6|0.1 4-5|0.1.1 3-4|0.1.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:52.587
# ::node	0	motorcycle	9-10
# ::node	0.0	accident	10-11
# ::node	0.1	season	5-6
# ::node	0.1.0	welcome-01	14-15
# ::node	0.1.1	last	4-5
# ::node	0.1.1.0	have-org-role-91	21-22
# ::node	0.1.1.0.0	captain	21-22
# ::node	0.1.2	miss-02	3-4
# ::node	0.1.2.0	north	18-19
# ::root	0	motorcycle
(m / motorcycle 
      :location-of (a / accident) 
      :poss-of (s / season 
            :ARG0-of (w / welcome-01) 
            :mod (l / last 
                  :ARG1-of (h / have-org-role-91 
                        :ARG2 (c / captain))) 
            :time-of (m2 / miss-02 
                  :ARG1 (n / north))))

# ::snt they are pledged to maintain accident and emergency cover dash
# ::tok they are pledged to maintain accident and emergency cover dash
# ::alignments 7-8|0.0.1.1 6-7|0.0.1 5-6|0.0.1.0 4-5|0.0 2-3|0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:52.602
# ::node	0	pledge-01	2-3
# ::node	0.0	maintain-01	4-5
# ::node	0.0.0	they	0-1
# ::node	0.0.1	and	6-7
# ::node	0.0.1.0	accident	5-6
# ::node	0.0.1.1	emergency	7-8
# ::root	0	pledge-01
# ::edge	and	op1	maintain-01	0.0.1	0.0	
# ::edge	and	op2	accident	0.0.1	0.0.1.0	
# ::edge	and	op3	emergency	0.0.1	0.0.1.1	
# ::edge	maintain-01	ARG0	they	0.0	0.0.0	
# ::edge	pledge-01	ARG1	maintain-01	0	0.0	
(p / pledge-01 
      :ARG1 (m / maintain-01 
            :ARG0 (t / they) 
            :op-of (a / and 
                  :op1 (a2 / accident) 
                  :op2 (e / emergency))))

# ::snt the a324 from the m40 to shillingford is a very dangerous road i do not keep records but accidents some fatal are frequent
# ::tok the a324 from the m40 to shillingford is a very dangerous road i do not keep records but accidents some fatal are frequent
# ::alignments 22-23|0.2 20-21|0.4.0 19-20|0.4 18-19|0.2.0 17-18|0 16-17|0.3 12-13|0.0 11-12|0.1 10-11|0.1.0 9-10|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:52.667
# ::node	0	contrast-01	17-18
# ::node	0.0	i	12-13
# ::node	0.1	road	11-12
# ::node	0.1.0	dangerous	10-11
# ::node	0.1.0.0	very	9-10
# ::node	0.2	frequent	22-23
# ::node	0.2.0	accident	18-19
# ::node	0.3	record	16-17
# ::node	0.4	some	19-20
# ::node	0.4.0	fatal	20-21
# ::root	0	contrast-01
# ::edge	contrast-01	ARG0	i	0	0.0	
# ::edge	contrast-01	ARG1	road	0	0.1	
# ::edge	contrast-01	ARG2	frequent	0	0.2	
# ::edge	contrast-01	ARG4	record	0	0.3	
# ::edge	contrast-01	mod	some	0	0.4	
# ::edge	dangerous	degree	very	0.1.0	0.1.0.0	
# ::edge	fatal	degree	some	0.4.0	0.4	
# ::edge	frequent	domain	accident	0.2	0.2.0	
# ::edge	road	mod	dangerous	0.1	0.1.0	
(c / contrast-01 
      :ARG0 (i / i) 
      :ARG1 (r2 / road 
            :mod (d / dangerous 
                  :degree (v / very))) 
      :ARG2 (f / frequent 
            :domain (a / accident)) 
      :ARG4 (r / record) 
      :mod (s / some 
            :degree-of (f2 / fatal)))

# ::snt had this suggestion been taken up and an accident occurred i doubt if the parents grief would have been assuaged by the return of their child woven into a suit length however fine the worsted
# ::tok had this suggestion been taken up and an accident occurred i doubt if the parents grief would have been assuaged by the return of their child woven into a suit length however fine the worsted
# ::alignments 32-33|0.1.0.0.1.2 30-31|0.1 29-30|0.1.0 26-27|0 25-26|0.0 14-15|0.1.0.0.1.0.0.0+0.1.0.0.1.0.0 11-12|0.1.0.0.1 10-11|0.1.0.0.1.0 8-9|0.1.0.0.0 6-7|0.1.0.0 2-3|0.1.0.0.1.1.0+0.1.0.0.1.1 1-2|0.1.0.0.1.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:52.890
# ::node	0	weave-01	26-27
# ::node	0.0	child	25-26
# ::node	0.1	length	30-31
# ::node	0.1.0	suit-01	29-30
# ::node	0.1.0.0	and	6-7
# ::node	0.1.0.0.0	accident	8-9
# ::node	0.1.0.0.1	doubt-01	11-12
# ::node	0.1.0.0.1.0	i	10-11
# ::node	0.1.0.0.1.0.0	have-rel-role-91	14-15
# ::node	0.1.0.0.1.0.0.0	parent	14-15
# ::node	0.1.0.0.1.1	thing	2-3
# ::node	0.1.0.0.1.1.0	suggest-01	2-3
# ::node	0.1.0.0.1.1.1	this	1-2
# ::node	0.1.0.0.1.2	fine	32-33
# ::root	0	weave-01
# ::edge	and	op1	accident	0.1.0.0	0.1.0.0.0	
# ::edge	and	op2	doubt-01	0.1.0.0	0.1.0.0.1	
# ::edge	doubt-01	ARG0	i	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	doubt-01	ARG1	thing	0.1.0.0.1	0.1.0.0.1.1	
# ::edge	fine	op1	doubt-01	0.1.0.0.1.2	0.1.0.0.1	
# ::edge	have-rel-role-91	ARG1	i	0.1.0.0.1.0.0	0.1.0.0.1.0	
# ::edge	have-rel-role-91	ARG2	parent	0.1.0.0.1.0.0	0.1.0.0.1.0.0.0	
# ::edge	suggest-01	ARG1	thing	0.1.0.0.1.1.0	0.1.0.0.1.1	
# ::edge	suit-01	ARG0	length	0.1.0	0.1	
# ::edge	suit-01	ARG1	and	0.1.0	0.1.0.0	
# ::edge	thing	mod	this	0.1.0.0.1.1	0.1.0.0.1.1.1	
# ::edge	weave-01	ARG0	child	0	0.0	
# ::edge	weave-01	ARG1	length	0	0.1	
(w / weave-01 
      :ARG0 (c / child) 
      :ARG1 (l / length 
            :ARG0-of (s / suit-01 
                  :ARG1 (a2 / and 
                        :op1 (a / accident) 
                        :op2 (d / doubt-01 
                              :ARG0 (i / i 
                                    :ARG1-of (h / have-rel-role-91 
                                          :ARG2 (p / parent))) 
                              :ARG1 (t / thing 
                                    :ARG1-of (s2 / suggest-01) 
                                    :mod (t2 / this)) 
                              :op-of (f / fine))))))

# ::snt going into tomorrows british grand prix at silverstone derek warwick is struggling to recover from back injuries sustained in a karting accident martin brundle seeks to revive the momentum of an initially promising season marred by his failure to prequalify in the last two races and johnny herbert is on the sidelines pondering on what might have been
# ::tok going into tomorrows british grand prix at silverstone derek warwick is struggling to recover from back injuries sustained in a karting accident martin brundle seeks to revive the momentum of an initially promising season marred by his failure to prequalify in the last two races and johnny herbert is on the sidelines pondering on what might have been
# ::alignments 51-52|0.1.0 45-46|0.0.1.0.1 44-45|0.0.1.0.1.0 43-44|0.0.1.0.1.0.1 42-43|0.0.1.0.1.0.0 37-38|0.1 34-35|0 33-34|0.0 32-33|0.0.0 31-32|0.0.0.0 28-29|0.0.1 24-25|0.0.1.0 22-24|0.0.1.0.0.1.0+0.0.1.0.0.1.1+0.0.1.0.0.1+0.0.1.0.0 21-22|0.0.1.0.0.0.0.0.1.0 17-18|0.0.1.0.0.0.0.0.1 16-17|0.0.1.0.0.0.0.0 15-16|0.0.1.0.0.0.0.0.2 13-14|0.0.1.0.0.0.0 11-12|0.0.1.0.0.0 4-5|0.0.1.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:53.587
# ::node	0	mar-01	34-35
# ::node	0.0	season	33-34
# ::node	0.0.0	promise-01	32-33
# ::node	0.0.0.0	initial	31-32
# ::node	0.0.1	momentum	28-29
# ::node	0.0.1.0	seek-01	24-25
# ::node	0.0.1.0.0	person	22-24
# ::node	0.0.1.0.0.0	struggle-02	11-12
# ::node	0.0.1.0.0.0.0	recover-02	13-14
# ::node	0.0.1.0.0.0.0.0	injure-01	16-17
# ::node	0.0.1.0.0.0.0.0.0	grand	4-5
# ::node	0.0.1.0.0.0.0.0.1	sustain-01	17-18
# ::node	0.0.1.0.0.0.0.0.1.0	accident	21-22
# ::node	0.0.1.0.0.0.0.0.2	back	15-16
# ::node	0.0.1.0.0.1	name	22-24
# ::node	0.0.1.0.0.1.0	"brundle"	22-24
# ::node	0.0.1.0.0.1.1	"martin"	22-24
# ::node	0.0.1.0.1	and	45-46
# ::node	0.0.1.0.1.0	race	44-45
# ::node	0.0.1.0.1.0.0	last	42-43
# ::node	0.0.1.0.1.0.1	2	43-44
# ::node	0.1	fail-01	37-38
# ::node	0.1.0	sideline	51-52
# ::root	0	mar-01
# ::edge	and	op1	seek-01	0.0.1.0.1	0.0.1.0	
# ::edge	and	op2	race	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	fail-01	ARG1	sideline	0.1	0.1.0	
# ::edge	injure-01	ARG1	grand	0.0.1.0.0.0.0.0	0.0.1.0.0.0.0.0.0	
# ::edge	injure-01	mod	back	0.0.1.0.0.0.0.0	0.0.1.0.0.0.0.0.2	
# ::edge	mar-01	ARG1	season	0	0.0	
# ::edge	mar-01	ARG2	fail-01	0	0.1	
# ::edge	momentum	poss	season	0.0.1	0.0	
# ::edge	name	op1	"brundle"	0.0.1.0.0.1	0.0.1.0.0.1.0	
# ::edge	name	op2	"martin"	0.0.1.0.0.1	0.0.1.0.0.1.1	
# ::edge	person	name	name	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	promise-01	ARG1	season	0.0.0	0.0	
# ::edge	promise-01	time	initial	0.0.0	0.0.0.0	
# ::edge	race	mod	last	0.0.1.0.1.0	0.0.1.0.1.0.0	
# ::edge	race	quant	2	0.0.1.0.1.0	0.0.1.0.1.0.1	
# ::edge	recover-02	ARG1	injure-01	0.0.1.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	seek-01	ARG0	person	0.0.1.0	0.0.1.0.0	
# ::edge	seek-01	ARG1	momentum	0.0.1.0	0.0.1	
# ::edge	struggle-02	ARG0	person	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	struggle-02	ARG1	recover-02	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	sustain-01	ARG0	accident	0.0.1.0.0.0.0.0.1	0.0.1.0.0.0.0.0.1.0	
# ::edge	sustain-01	ARG1	injure-01	0.0.1.0.0.0.0.0.1	0.0.1.0.0.0.0.0	
(m / mar-01 
      :ARG1 (s2 / season 
            :ARG1-of (p / promise-01 
                  :time (i / initial)) 
            :poss-of (m2 / momentum 
                  :ARG1-of (s3 / seek-01 
                        :ARG0 (p2 / person 
                              :ARG0-of (s5 / struggle-02 
                                    :ARG1 (r2 / recover-02 
                                          :ARG1 (i2 / injure-01 
                                                :ARG1 (g / grand) 
                                                :ARG1-of (s4 / sustain-01 
                                                      :ARG0 (a2 / accident)) 
                                                :mod (b / back)))) 
                              :name (n / name 
                                    :op1 "brundle" 
                                    :op2 "martin")) 
                        :op-of (a / and 
                              :op1 (r / race 
                                    :mod (l / last) 
                                    :quant 2))))) 
      :ARG2 (f / fail-01 
            :ARG1 (s / sideline)))

# ::snt in support it relied on the us supreme courts upholding the limit in a federal statute on liability in the event of a nuclear accident
# ::tok in support it relied on the us supreme courts upholding the limit in a federal statute on liability in the event of a nuclear accident
# ::alignments 24-25|0.1.0.1.0 23-24|0.1.0.1.0.0 20-21|0.1.0.1 17-18|0.1.0.0.0 14-15|0.0.0.0 11-12|0.1.0.0 9-10|0.1.0 8-9|0.1 7-8|0.1.1 3-4|0 2-3|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:53.762
# ::node	0	rely-01	3-4
# ::node	0.0	it	2-3
# ::node	0.0.0	support-01	1-2
# ::node	0.0.0.0	federal	14-15
# ::node	0.1	court	8-9
# ::node	0.1.0	uphold-01	9-10
# ::node	0.1.0.0	limit-01	11-12
# ::node	0.1.0.0.0	liability	17-18
# ::node	0.1.0.1	event	20-21
# ::node	0.1.0.1.0	accident	24-25
# ::node	0.1.0.1.0.0	nucleus	23-24
# ::node	0.1.1	supreme	7-8
# ::root	0	rely-01
# ::edge	accident	mod	nucleus	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	court	mod	supreme	0.1	0.1.1	
# ::edge	event	location	accident	0.1.0.1	0.1.0.1.0	
# ::edge	limit-01	ARG1	liability	0.1.0.0	0.1.0.0.0	
# ::edge	rely-01	ARG0	it	0	0.0	
# ::edge	rely-01	ARG1	court	0	0.1	
# ::edge	support-01	ARG0	federal	0.0.0	0.0.0.0	
# ::edge	support-01	ARG1	it	0.0.0	0.0	
# ::edge	uphold-01	ARG0	court	0.1.0	0.1	
# ::edge	uphold-01	ARG1	limit-01	0.1.0	0.1.0.0	
# ::edge	uphold-01	manner	event	0.1.0	0.1.0.1	
(r / rely-01 
      :ARG0 (i / it 
            :ARG1-of (s2 / support-01 
                  :ARG0 (f / federal))) 
      :ARG1 (c / court 
            :ARG0-of (u / uphold-01 
                  :ARG1 (l2 / limit-01 
                        :ARG1 (l / liability)) 
                  :manner (e / event 
                        :location (a / accident 
                              :mod (n / nucleus)))) 
            :mod (s / supreme)))

# ::snt he received a large cash payment from his personal accident policy
# ::tok he received a large cash payment from his personal accident policy
# ::alignments 10-11|0.2 9-10|0.2.0.0 8-9|0.2.0 4-5|0.1.0 3-4|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:53.783
# ::node	0	receive-01	1-2
# ::node	0.0	he	0-1
# ::node	0.1	large	3-4
# ::node	0.1.0	cash	4-5
# ::node	0.2	policy	10-11
# ::node	0.2.0	personal	8-9
# ::node	0.2.0.0	accident	9-10
# ::root	0	receive-01
# ::edge	accident	mod	personal	0.2.0.0	0.2.0	
# ::edge	cash	mod	large	0.1.0	0.1	
# ::edge	policy	mod	personal	0.2	0.2.0	
# ::edge	receive-01	ARG0	he	0	0.0	
# ::edge	receive-01	ARG1	large	0	0.1	
# ::edge	receive-01	ARG2	policy	0	0.2	
(r / receive-01 
      :ARG0 (h / he) 
      :ARG1 (l / large 
            :mod-of (c / cash)) 
      :ARG2 (p / policy 
            :mod (p2 / personal 
                  :mod-of (a / accident))))

# ::snt they get cheaper insurance rates because their accident records are better they have fewer problems with their cars because they dont thrash them and they probably expend far less nervous energy when they are driving because they treat it like any other domestic activity
# ::tok they get cheaper insurance rates because their accident records are better they have fewer problems with their cars because they dont thrash them and they probably expend far less nervous energy when they are driving because they treat it like any other domestic activity
# ::alignments 43-44|0.0.1.2.0.2 42-43|0.0.1.2.0.2.2 41-42|0.0.1.2.0.2.1 40-41|0.0.1.2.0.2.0 38-39|0.0.1.2.0.1 37-38|0.0.1.2.0 36-37|0.0.1.2.0.0 35-36|0.0.1.2 34-35|0.0.1 32-33|0.0.1.1 30-31|0.0.1.0.0 29-30|0.0.1.0.0.0 28-29|0.0.1.0.0.0.0 27-28|0.0.1.0.0.0.0.0 25-26|0.0.1.0.0.0.0.1 24-25|0.0.1.0 23-24|0.0 19-20|0.0.1.0.0.1 18-19|0 17-18|0.1.0 14-15|0.1 13-14|0.1.2 11-12|0.1.1 8-9|0.0.0.0 7-8|0.0.0.0.0 5-6|0.0.0 4-5|0.0.0.0.0.0.0.0 3-4|0.0.0.0.0.0 2-3|0.0.0.0.0.0.0.0.0 0-1|0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:55.322
# ::node	0	cause-01	18-19
# ::node	0.0	and	23-24
# ::node	0.0.0	cause-01	5-6
# ::node	0.0.0.0	record	8-9
# ::node	0.0.0.0.0	accident	7-8
# ::node	0.0.0.0.0.0	insure-02	3-4
# ::node	0.0.0.0.0.0.0	they	0-1
# ::node	0.0.0.0.0.0.0.0	rate	4-5
# ::node	0.0.0.0.0.0.0.0.0	cheap	2-3
# ::node	0.0.1	drive-01	34-35
# ::node	0.0.1.0	they	24-25
# ::node	0.0.1.0.0	energy	30-31
# ::node	0.0.1.0.0.0	nervous-41	29-30
# ::node	0.0.1.0.0.0.0	less	28-29
# ::node	0.0.1.0.0.0.0.0	far	27-28
# ::node	0.0.1.0.0.0.0.1	probable	25-26
# ::node	0.0.1.0.0.1	they	19-20
# ::node	0.0.1.1	they	32-33
# ::node	0.0.1.2	cause-01	35-36
# ::node	0.0.1.2.0	treat-01	37-38
# ::node	0.0.1.2.0.0	they	36-37
# ::node	0.0.1.2.0.1	it	38-39
# ::node	0.0.1.2.0.2	activity	43-44
# ::node	0.0.1.2.0.2.0	any	40-41
# ::node	0.0.1.2.0.2.1	other	41-42
# ::node	0.0.1.2.0.2.2	domestic	42-43
# ::node	0.1	problem	14-15
# ::node	0.1.0	car	17-18
# ::node	0.1.1	they	11-12
# ::node	0.1.2	few	13-14
# ::root	0	cause-01
# ::edge	activity	mod	any	0.0.1.2.0.2	0.0.1.2.0.2.0	
# ::edge	activity	mod	domestic	0.0.1.2.0.2	0.0.1.2.0.2.2	
# ::edge	activity	mod	other	0.0.1.2.0.2	0.0.1.2.0.2.1	
# ::edge	and	op1	drive-01	0.0	0.0.1	
# ::edge	cause-01	ARG0	and	0	0.0	
# ::edge	cause-01	ARG0	record	0.0.0	0.0.0.0	
# ::edge	cause-01	ARG0	treat-01	0.0.1.2	0.0.1.2.0	
# ::edge	cause-01	ARG1	and	0.0.0	0.0	
# ::edge	cause-01	ARG1	drive-01	0.0.1.2	0.0.1	
# ::edge	drive-01	ARG0	they	0.0.1	0.0.1.0	
# ::edge	drive-01	ARG1	they	0.0.1	0.0.1.1	
# ::edge	energy	poss	they	0.0.1.0.0	0.0.1.0	
# ::edge	energy	poss	they	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	insure-02	ARG0	they	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	insure-02	ARG2	accident	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	less	degree	far	0.0.1.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	less	domain	probable	0.0.1.0.0.0.0	0.0.1.0.0.0.0.1	
# ::edge	nervous-41	ARG1	energy	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	nervous-41	degree	less	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	problem	location	car	0.1	0.1.0	
# ::edge	problem	poss	they	0.1	0.1.1	
# ::edge	problem	quant	few	0.1	0.1.2	
# ::edge	problem	time	cause-01	0.1	0	
# ::edge	rate	mod	cheap	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0	
# ::edge	rate	poss	they	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	record	mod	accident	0.0.0.0	0.0.0.0.0	
# ::edge	treat-01	ARG0	they	0.0.1.2.0	0.0.1.2.0.0	
# ::edge	treat-01	ARG1	it	0.0.1.2.0	0.0.1.2.0.1	
# ::edge	treat-01	ARG2	activity	0.0.1.2.0	0.0.1.2.0.2	
(c2 / cause-01 
      :ARG0 (a3 / and 
            :ARG1-of (c4 / cause-01 
                  :ARG0 (r / record 
                        :mod (a4 / accident 
                              :ARG2-of (i2 / insure-02 
                                    :ARG0 (t7 / they 
                                          :poss-of (r2 / rate 
                                                :mod (c5 / cheap))))))) 
            :op1 (d2 / drive-01 
                  :ARG0 (t4 / they 
                        :poss-of (e / energy 
                              :ARG1-of (n / nervous-41 
                                    :degree (l / less 
                                          :degree (f / far) 
                                          :domain (p / probable))) 
                              :poss (t5 / they))) 
                  :ARG1 (t3 / they) 
                  :ARG1-of (c / cause-01 
                        :ARG0 (t / treat-01 
                              :ARG0 (t2 / they) 
                              :ARG1 (i / it) 
                              :ARG2 (a / activity 
                                    :mod (a2 / any) 
                                    :mod (o / other) 
                                    :mod (d / domestic)))))) 
      :time-of (p2 / problem 
            :location (c3 / car) 
            :poss (t6 / they) 
            :quant (f2 / few)))

# ::snt in nicky and gino 15 virgin 17 nov tom hulce amadeus plays an accident victim who is unaware that he is holding back the career of his caring brother ray liotta along comes jamie lee curtis to tell him
# ::tok in nicky and gino 15 virgin 17 nov tom hulce amadeus plays an accident victim who is unaware that he is holding back the career of his caring brother ray liotta along comes jamie lee curtis to tell him
# ::alignments 37-38|0.0.0.0.1 31-32|0.1 28-29|0.0.0.0.0+0.0.0.0 27-28|0.0.0.0.2 24-25|0.0.0 22-23|0.2 21-22|0 19-20|0.0 14-15|0.0.0.0.1.0 13-14|0.0.0.0.1.0.1 11-12|0.0.0.0.1.0.0 7-8|0.0.0.0.3.0+0.0.0.0.3 6-7|0.0.0.0.2.0 5-6|0.0.0.0.2.2 4-5|0.0.0.0.2.1 2-3|0.0.0.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:55.607
# ::node	0	hold-01	21-22
# ::node	0.0	he	19-20
# ::node	0.0.0	career	24-25
# ::node	0.0.0.0	have-rel-role-91	28-29
# ::node	0.0.0.0.0	brother	28-29
# ::node	0.0.0.0.1	tell-01	37-38
# ::node	0.0.0.0.1.0	victim	14-15
# ::node	0.0.0.0.1.0.0	play-02	11-12
# ::node	0.0.0.0.1.0.0.0	and	2-3
# ::node	0.0.0.0.1.0.1	accident	13-14
# ::node	0.0.0.0.2	care-01	27-28
# ::node	0.0.0.0.2.0	17	6-7
# ::node	0.0.0.0.2.1	15	4-5
# ::node	0.0.0.0.2.2	virgin	5-6
# ::node	0.0.0.0.3	date-entity	7-8
# ::node	0.0.0.0.3.0	11	7-8
# ::node	0.1	along	31-32
# ::node	0.2	back	22-23
# ::root	0	hold-01
# ::edge	15	op1	care-01	0.0.0.0.2.1	0.0.0.0.2	
# ::edge	care-01	ARG1	17	0.0.0.0.2	0.0.0.0.2.0	
# ::edge	care-01	ARG2	have-rel-role-91	0.0.0.0.2	0.0.0.0	
# ::edge	career	poss	he	0.0.0	0.0	
# ::edge	date-entity	month	11	0.0.0.0.3	0.0.0.0.3.0	
# ::edge	date-entity	op1	have-rel-role-91	0.0.0.0.3	0.0.0.0	
# ::edge	have-rel-role-91	ARG0	career	0.0.0.0	0.0.0	
# ::edge	have-rel-role-91	ARG2	brother	0.0.0.0	0.0.0.0.0	
# ::edge	hold-01	ARG0	he	0	0.0	
# ::edge	hold-01	ARG1	along	0	0.1	
# ::edge	hold-01	direction	back	0	0.2	
# ::edge	play-02	ARG0	and	0.0.0.0.1.0.0	0.0.0.0.1.0.0.0	
# ::edge	play-02	ARG1	victim	0.0.0.0.1.0.0	0.0.0.0.1.0	
# ::edge	tell-01	ARG1	victim	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	tell-01	ARG2	have-rel-role-91	0.0.0.0.1	0.0.0.0	
# ::edge	victim	mod	accident	0.0.0.0.1.0	0.0.0.0.1.0.1	
# ::edge	virgin	op1	care-01	0.0.0.0.2.2	0.0.0.0.2	
(h2 / hold-01 
      :ARG0 (h3 / he 
            :poss-of (c2 / career 
                  :ARG0-of (h / have-rel-role-91 
                        :ARG2 (b / brother) 
                        :ARG2-of (t / tell-01 
                              :ARG1 (v / victim 
                                    :ARG1-of (p / play-02 
                                          :ARG0 (a3 / and)) 
                                    :mod (a2 / accident))) 
                        :ARG2-of (c / care-01 
                              :ARG1 17 
                              :op-of 15 
                              :op-of (v2 / virgin)) 
                        :op-of (d / date-entity 
                              :month 11)))) 
      :ARG1 (a / along) 
      :direction (b2 / back))

# ::snt they did not even respond to a suggestion that their fleet should make a friendly call at singapore by accident
# ::tok they did not even respond to a suggestion that their fleet should make a friendly call at singapore by accident
# ::alignments 19-20|0.0.0.0.0.0 14-15|0.0.0.0.0 11-12|0.0.0 10-11|0.0.0.0 7-8|0.1.0+0.1 4-5|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:55.684
# ::node	0	respond-01	4-5
# ::node	0.0	they	0-1
# ::node	0.0.0	recommend-01	11-12
# ::node	0.0.0.0	fleet	10-11
# ::node	0.0.0.0.0	friendly-41	14-15
# ::node	0.0.0.0.0.0	accident	19-20
# ::node	0.1	thing	7-8
# ::node	0.1.0	suggest-01	7-8
# ::root	0	respond-01
# ::edge	friendly-41	ARG0	fleet	0.0.0.0.0	0.0.0.0	
# ::edge	friendly-41	ARG2	accident	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	recommend-01	ARG0	they	0.0.0	0.0	
# ::edge	recommend-01	ARG1	fleet	0.0.0	0.0.0.0	
# ::edge	respond-01	ARG0	they	0	0.0	
# ::edge	respond-01	ARG1	thing	0	0.1	
# ::edge	suggest-01	ARG1	thing	0.1.0	0.1	
(r2 / respond-01 
      :ARG0 (t2 / they 
            :ARG0-of (r / recommend-01 
                  :ARG1 (f2 / fleet 
                        :ARG0-of (f / friendly-41 
                              :ARG2 (a / accident))))) 
      :ARG1 (t / thing 
            :ARG1-of (s / suggest-01)))

# ::snt under the plan your repayments are covered for a maximum period of 12 months if you become unemployed and for the remaining term of the loan if you are unable to work because of sickness or an accident
# ::tok under the plan your repayments are covered for a maximum period of 12 months if you become unemployed and for the remaining term of the loan if you are unable to work because of sickness or an accident
# ::alignments 37-38|0.0.0.0 35-36|0.0.0 34-35|0.0 32-33|0 27-28|0.1.2.0.0.0 25-26|0.1.2.0.0.0.0 22-23|0.1.2.0.0.0.0.0 21-22|0.1.2.0.0.0.0.0.0 18-19|0.1.2 17-18|0.1.1.0+0.1.1 16-17|0.1 15-16|0.1.0 13-14|0.1.1.0.0.1+0.1.1.0.0 12-13|0.1.1.0.0.0 10-11|0.1.2.0.0.1 9-10|0.1.2.0.0.1.0 6-7|0.1.2.0.0 2-3|0.1.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:56.083
# ::node	0	cause-01	32-33
# ::node	0.0	sickness	34-35
# ::node	0.0.0	or	35-36
# ::node	0.0.0.0	accident	37-38
# ::node	0.1	become-01	16-17
# ::node	0.1.0	you	15-16
# ::node	0.1.1	person	17-18
# ::node	0.1.1.0	employ-01	17-18
# ::node	0.1.1.0.0	temporal-quantity	13-14
# ::node	0.1.1.0.0.0	12	12-13
# ::node	0.1.1.0.0.1	month	13-14
# ::node	0.1.2	and	18-19
# ::node	0.1.2.0	plan-01	2-3
# ::node	0.1.2.0.0	cover-01	6-7
# ::node	0.1.2.0.0.0	you	27-28
# ::node	0.1.2.0.0.0.0	loan-01	25-26
# ::node	0.1.2.0.0.0.0.0	term	22-23
# ::node	0.1.2.0.0.0.0.0.0	remain-01	21-22
# ::node	0.1.2.0.0.1	period	10-11
# ::node	0.1.2.0.0.1.0	maximum	9-10
# ::root	0	cause-01
# ::edge	and	op1	become-01	0.1.2	0.1	
# ::edge	become-01	ARG1	you	0.1	0.1.0	
# ::edge	become-01	ARG2	person	0.1	0.1.1	
# ::edge	cause-01	ARG0	sickness	0	0.0	
# ::edge	cause-01	ARG1	become-01	0	0.1	
# ::edge	cover-01	ARG1	you	0.1.2.0.0	0.1.2.0.0.0	
# ::edge	cover-01	ARG2	plan-01	0.1.2.0.0	0.1.2.0	
# ::edge	cover-01	duration	period	0.1.2.0.0	0.1.2.0.0.1	
# ::edge	employ-01	ARG0	temporal-quantity	0.1.1.0	0.1.1.0.0	
# ::edge	employ-01	ARG1	person	0.1.1.0	0.1.1	
# ::edge	loan-01	ARG1	you	0.1.2.0.0.0.0	0.1.2.0.0.0	
# ::edge	or	op1	sickness	0.0.0	0.0	
# ::edge	or	op2	accident	0.0.0	0.0.0.0	
# ::edge	period	mod	maximum	0.1.2.0.0.1	0.1.2.0.0.1.0	
# ::edge	plan-01	ARG1	and	0.1.2.0	0.1.2	
# ::edge	remain-01	ARG1	term	0.1.2.0.0.0.0.0.0	0.1.2.0.0.0.0.0	
# ::edge	temporal-quantity	quant	12	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	temporal-quantity	unit	month	0.1.1.0.0	0.1.1.0.0.1	
# ::edge	term	prep-in	loan-01	0.1.2.0.0.0.0.0	0.1.2.0.0.0.0	
(c / cause-01 
      :ARG0 (s / sickness 
            :op-of (o / or 
                  :op1 (a / accident))) 
      :ARG1 (b / become-01 
            :ARG1 (y2 / you) 
            :ARG2 (p / person 
                  :ARG1-of (e / employ-01 
                        :ARG0 (t2 / temporal-quantity 
                              :quant 12 
                              :unit (m / month)))) 
            :op-of (a2 / and 
                  :ARG1-of (p3 / plan-01 
                        :ARG2-of (c2 / cover-01 
                              :ARG1 (y / you 
                                    :ARG1-of (l / loan-01 
                                          :prep-in-of (t / term 
                                                :ARG1-of (r / remain-01)))) 
                              :duration (p2 / period 
                                    :mod (m2 / maximum)))))))

# ::snt mr parkinson had fiddled the statistics to make the accident record seem worse under labour and better under the conservatives, mr parkinson replied acidly that it would be a relief if the shadow minister stopped his constant appearances on television the moment after an accident blaming it on something he called cootz cuts mr parkinson mimicked mr prescotts northern accent
# ::tok mr parkinson had fiddled the statistics to make the accident record seem worse under labour and better under the conservatives , mr parkinson replied acidly that it would be a relief if the shadow minister stopped his constant appearances on television the moment after an accident blaming it on something he called cootz cuts mr parkinson mimicked mr prescotts northern accent
# ::alignments 60-61|0.1.0 59-60|0.1.0.0 53-54|0.1.2.0.1.0.2.0 50-51|0.1.2.0.1.0.2 49-50|0.1.2.0.1.0.3 47-48|0.1.2.0.1.0.1 46-47|0.1.2.0.1.0 45-46|0.1.2.0.1.0.0 43-44|0.1.2.0.1 42-43|0.1.1.0.1 40-41|0.1.2.0.0 37-38|0.1.1.0.0.0 35-36|0.1.2.0 34-35|0.1.2+0.1 33-34|0 30-31|0.1.1 26-27|0.1.1.0 23-24|0.1.1.0.0 19-20|0.0.0.0.1 15-16|0.0.0.0.2 14-15|0.0.0.0.0 12-13|0.0.0.0 11-12|0.0 10-11|0.0.0 9-10|0.0.0.1 5-6|0.0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:57.586
# ::node	0	shadow-01	33-34
# ::node	0.0	seem-01	11-12
# ::node	0.0.0	record	10-11
# ::node	0.0.0.0	bad	12-13
# ::node	0.0.0.0.0	labour	14-15
# ::node	0.0.0.0.1	conservative	19-20
# ::node	0.0.0.0.2	and	15-16
# ::node	0.0.0.1	accident	9-10
# ::node	0.0.0.2	statistic	5-6
# ::node	0.1	have-org-role-91	34-35
# ::node	0.1.0	accent	60-61
# ::node	0.1.0.0	north	59-60
# ::node	0.1.1	relieve-01	30-31
# ::node	0.1.1.0	it	26-27
# ::node	0.1.1.0.0	reply-01	23-24
# ::node	0.1.1.0.0.0	constant	37-38
# ::node	0.1.1.0.1	moment	42-43
# ::node	0.1.2	minister	34-35
# ::node	0.1.2.0	stop-01	35-36
# ::node	0.1.2.0.0	television	40-41
# ::node	0.1.2.0.1	after	43-44
# ::node	0.1.2.0.1.0	blame-01	46-47
# ::node	0.1.2.0.1.0.0	accident	45-46
# ::node	0.1.2.0.1.0.1	it	47-48
# ::node	0.1.2.0.1.0.2	he	50-51
# ::node	0.1.2.0.1.0.2.0	cut-02	53-54
# ::node	0.1.2.0.1.0.3	something	49-50
# ::root	0	shadow-01
# ::edge	accent	mod	north	0.1.0	0.1.0.0	
# ::edge	after	op1	blame-01	0.1.2.0.1	0.1.2.0.1.0	
# ::edge	and	op1	bad	0.0.0.0.2	0.0.0.0	
# ::edge	bad	beneficiary	labour	0.0.0.0	0.0.0.0.0	
# ::edge	bad	domain	conservative	0.0.0.0	0.0.0.0.1	
# ::edge	bad	domain	record	0.0.0.0	0.0.0	
# ::edge	blame-01	ARG0	accident	0.1.2.0.1.0	0.1.2.0.1.0.0	
# ::edge	blame-01	ARG1	it	0.1.2.0.1.0	0.1.2.0.1.0.1	
# ::edge	blame-01	ARG2	he	0.1.2.0.1.0	0.1.2.0.1.0.2	
# ::edge	blame-01	destination	something	0.1.2.0.1.0	0.1.2.0.1.0.3	
# ::edge	cut-02	ARG0	he	0.1.2.0.1.0.2.0	0.1.2.0.1.0.2	
# ::edge	have-org-role-91	ARG0	accent	0.1	0.1.0	
# ::edge	have-org-role-91	ARG1	shadow-01	0.1	0	
# ::edge	have-org-role-91	ARG2	minister	0.1	0.1.2	
# ::edge	moment	poss	it	0.1.1.0.1	0.1.1.0	
# ::edge	record	mod	accident	0.0.0	0.0.0.1	
# ::edge	relieve-01	ARG0	it	0.1.1	0.1.1.0	
# ::edge	relieve-01	ARG1	have-org-role-91	0.1.1	0.1	
# ::edge	reply-01	ARG0	it	0.1.1.0.0	0.1.1.0	
# ::edge	reply-01	ARG1	constant	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	seem-01	ARG1	record	0.0	0.0.0	
# ::edge	shadow-01	ARG1	seem-01	0	0.0	
# ::edge	statistic	op1	record	0.0.0.2	0.0.0	
# ::edge	stop-01	ARG0	television	0.1.2.0	0.1.2.0.0	
# ::edge	stop-01	ARG1	minister	0.1.2.0	0.1.2	
# ::edge	stop-01	time	after	0.1.2.0	0.1.2.0.1	
(s3 / shadow-01 
      :ARG1 (s4 / seem-01 
            :ARG1 (r3 / record 
                  :domain-of (b2 / bad 
                        :beneficiary (l / labour) 
                        :domain (c3 / conservative) 
                        :op-of (a4 / and)) 
                  :mod (a5 / accident) 
                  :op-of (s5 / statistic))) 
      :ARG1-of (h2 / have-org-role-91 
            :ARG0 (a / accent 
                  :mod (n / north)) 
            :ARG1-of (r / relieve-01 
                  :ARG0 (i2 / it 
                        :ARG0-of (r2 / reply-01 
                              :ARG1 (c2 / constant)) 
                        :poss-of (m / moment))) 
            :ARG2 (m2 / minister 
                  :ARG1-of (s2 / stop-01 
                        :ARG0 (t / television) 
                        :time (a3 / after 
                              :op1 (b / blame-01 
                                    :ARG0 (a2 / accident) 
                                    :ARG1 (i / it) 
                                    :ARG2 (h / he 
                                          :ARG0-of (c / cut-02)) 
                                    :destination (s / something)))))))

# ::snt extracts from an official report on last summers marchioness riverboat disaster were released by the member of parliament in whose constituency the accident happened
# ::tok extracts from an official report on last summers marchioness riverboat disaster were released by the member of parliament in whose constituency the accident happened
# ::alignments 23-24|0.0 22-23|0.0.1 20-21|0 17-18|0.0.1.0.0.2.0+0.0.1.0.0.2+0.0.1.0.0 15-16|0.0.1.0.1+0.0.1.0 12-13|0.0.1.0.0.1 10-11|0.0.1.0.0.1.0 6-7|0.0.0 4-5|0.0.1.0.0.0.1 3-4|0.0.1.0.0.0.0+0.0.1.0.0.0 0-1|0.0.1.0.0.0.1.0+0.0.1.0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:57.859
# ::node	0	constituency	20-21
# ::node	0.0	happen-01	23-24
# ::node	0.0.0	last	6-7
# ::node	0.0.1	accident	22-23
# ::node	0.0.1.0	have-org-role-91	15-16
# ::node	0.0.1.0.0	government-organization	17-18
# ::node	0.0.1.0.0.0	have-org-role-91	3-4
# ::node	0.0.1.0.0.0.0	official	3-4
# ::node	0.0.1.0.0.0.1	report	4-5
# ::node	0.0.1.0.0.0.1.0	extract-01	0-1
# ::node	0.0.1.0.0.0.1.0.0	thing	0-1
# ::node	0.0.1.0.0.1	release-01	12-13
# ::node	0.0.1.0.0.1.0	disaster	10-11
# ::node	0.0.1.0.0.2	name	17-18
# ::node	0.0.1.0.0.2.0	"Parliament"	17-18
# ::node	0.0.1.0.1	member	15-16
# ::root	0	constituency
(c / constituency 
      :time-of (h / happen-01 
            :ARG0 (l / last) 
            :ARG1 (a / accident 
                  :ARG0-of (h2 / have-org-role-91 
                        :ARG1 (g / government-organization 
                              :ARG1-of (h3 / have-org-role-91 
                                    :ARG2 (o / official) 
                                    :mod-of (r2 / report 
                                          :ARG0-of (e / extract-01 
                                                :ARG1 (t / thing)))) 
                              :ARG2-of (r / release-01 
                                    :ARG1 (d / disaster)) 
                              :name (n / name 
                                    :op1 "Parliament")) 
                        :ARG2 (m / member)))))

# ::snt whereas in traditional areas like traffic accidents awards and premiums remained stable
# ::tok whereas in traditional areas like traffic accidents awards and premiums remained stable
# ::alignments 11-12|0.1 10-11|0 9-10|0.1.0 8-9|0.1.1 7-8|0.1.1.0.0+0.1.1.0 6-7|0.0 5-6|0.0.0 3-4|0.2 2-3|0.2.0 0-1|0.2.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:57.907
# ::node	0	remain-01	10-11
# ::node	0.0	accident	6-7
# ::node	0.0.0	traffic	5-6
# ::node	0.1	stable	11-12
# ::node	0.1.0	premium	9-10
# ::node	0.1.1	and	8-9
# ::node	0.1.1.0	thing	7-8
# ::node	0.1.1.0.0	award-01	7-8
# ::node	0.2	area	3-4
# ::node	0.2.0	tradition	2-3
# ::node	0.2.1	whereas	0-1
# ::root	0	remain-01
# ::edge	accident	mod	traffic	0.0	0.0.0	
# ::edge	and	op1	thing	0.1.1	0.1.1.0	
# ::edge	and	op2	stable	0.1.1	0.1	
# ::edge	area	mod	tradition	0.2	0.2.0	
# ::edge	award-01	ARG1	thing	0.1.1.0.0	0.1.1.0	
# ::edge	remain-01	ARG1	accident	0	0.0	
# ::edge	remain-01	ARG3	stable	0	0.1	
# ::edge	remain-01	location	area	0	0.2	
# ::edge	stable	domain	premium	0.1	0.1.0	
# ::edge	whereas	op1	area	0.2.1	0.2	
(r / remain-01 
      :ARG1 (a3 / accident 
            :mod (t2 / traffic)) 
      :ARG3 (s / stable 
            :domain (p / premium) 
            :op-of (a / and 
                  :op1 (t / thing 
                        :ARG1-of (a2 / award-01)))) 
      :location (a4 / area 
            :mod (t3 / tradition) 
            :op-of (w / whereas)))

# ::snt i was very lucky not to be involved in a more serious accident and lucky not to be injured
# ::tok i was very lucky not to be involved in a more serious accident and lucky not to be injured
# ::alignments 18-19|0.0 14-15|0.3 13-14|0 12-13|0.2.0 11-12|0.2.0.0 7-8|0.2 3-4|0.1 2-3|0.1.0 0-1|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:57.941
# ::node	0	and	13-14
# ::node	0.0	injure-01	18-19
# ::node	0.1	lucky	3-4
# ::node	0.1.0	very	2-3
# ::node	0.1.1	i	0-1
# ::node	0.2	involve-01	7-8
# ::node	0.2.0	accident	12-13
# ::node	0.2.0.0	serious	11-12
# ::node	0.3	lucky	14-15
# ::root	0	and
# ::edge	accident	mod	serious	0.2.0	0.2.0.0	
# ::edge	and	op1	lucky	0	0.1	
# ::edge	and	op2	involve-01	0	0.2	
# ::edge	and	op3	lucky	0	0.3	
# ::edge	injure-01	ARG1	and	0.0	0	
# ::edge	involve-01	ARG2	accident	0.2	0.2.0	
# ::edge	lucky	degree	very	0.1	0.1.0	
# ::edge	lucky	domain	i	0.1	0.1.1	
(a / and 
      :ARG1-of (i / injure-01) 
      :op1 (l2 / lucky 
            :degree (v / very) 
            :domain (i3 / i)) 
      :op2 (i2 / involve-01 
            :ARG2 (a2 / accident 
                  :mod (s / serious))) 
      :op3 (l / lucky))

# ::snt and i dont think its any accident that this interest in physical theatre is all starting up again
# ::tok and i dont think its any accident that this interest in physical theatre is all starting up again
# ::alignments 17-18|0.0.1.1 15-16|0.0.1 14-15|0.0.1.0.0 11-12|0.0.3 9-10|0.0.1.0 8-9|0.0.1.0.1 6-7|0.0.2 5-6|0.0.2.0 3-4|0.0 1-2|0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:58.052
# ::node	0	and	0-1
# ::node	0.0	think-01	3-4
# ::node	0.0.0	i	1-2
# ::node	0.0.1	start-01	15-16
# ::node	0.0.1.0	interest-01	9-10
# ::node	0.0.1.0.0	all	14-15
# ::node	0.0.1.0.1	this	8-9
# ::node	0.0.1.1	again	17-18
# ::node	0.0.2	accident	6-7
# ::node	0.0.2.0	any	5-6
# ::node	0.0.3	physical	11-12
# ::root	0	and
# ::edge	accident	mod	any	0.0.2	0.0.2.0	
# ::edge	and	op1	think-01	0	0.0	
# ::edge	interest-01	ARG0	all	0.0.1.0	0.0.1.0.0	
# ::edge	interest-01	mod	this	0.0.1.0	0.0.1.0.1	
# ::edge	physical	op1	think-01	0.0.3	0.0	
# ::edge	start-01	ARG1	interest-01	0.0.1	0.0.1.0	
# ::edge	start-01	mod	again	0.0.1	0.0.1.1	
# ::edge	think-01	ARG0	i	0.0	0.0.0	
# ::edge	think-01	ARG1	start-01	0.0	0.0.1	
# ::edge	think-01	ARG2	accident	0.0	0.0.2	
(a5 / and 
      :op1 (t2 / think-01 
            :ARG0 (i2 / i) 
            :ARG1 (s / start-01 
                  :ARG1 (i / interest-01 
                        :ARG0 (a2 / all) 
                        :mod (t / this)) 
                  :mod (a / again)) 
            :ARG2 (a3 / accident 
                  :mod (a4 / any)) 
            :op-of (p / physical)))

# ::snt pc lukes 40 of spencers avenue yarnton was on his way to work at thames valley police headquarters kidlington when the accident happened on march 16
# ::tok pc lukes 40 of spencers avenue yarnton was on his way to work at thames valley police headquarters kidlington when the accident happened on march 16
# ::alignments 25-26|0.0.0 24-25|0.4.0+0.4 22-23|0 21-22|0.1 17-18|0.2.0.0 16-17|0.2.0 14-16|0.2.1.0+0.2.1.1+0.2.1+0.2 10-11|0.3 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:01:58.170
# ::node	0	happen-01	22-23
# ::node	0.0	40	2-3
# ::node	0.0.0	16	25-26
# ::node	0.1	accident	21-22
# ::node	0.2	country	14-16
# ::node	0.2.0	police	16-17
# ::node	0.2.0.0	headquarters	17-18
# ::node	0.2.1	name	14-16
# ::node	0.2.1.0	"valley"	14-16
# ::node	0.2.1.1	"thames"	14-16
# ::node	0.3	way	10-11
# ::node	0.4	date-entity	24-25
# ::node	0.4.0	3	24-25
# ::root	0	happen-01
# ::edge	16	poss	40	0.0.0	0.0	
# ::edge	country	name	name	0.2	0.2.1	
# ::edge	date-entity	month	3	0.4	0.4.0	
# ::edge	happen-01	ARG0	40	0	0.0	
# ::edge	happen-01	ARG1	accident	0	0.1	
# ::edge	happen-01	ARG2	country	0	0.2	
# ::edge	happen-01	time	date-entity	0	0.4	
# ::edge	headquarters	mod	police	0.2.0.0	0.2.0	
# ::edge	name	op1	"valley"	0.2.1	0.2.1.0	
# ::edge	name	op2	"thames"	0.2.1	0.2.1.1	
# ::edge	police	mod	country	0.2.0	0.2	
# ::edge	way	op1	happen-01	0.3	0	
(h / happen-01 
      :ARG0 (4 / 40 
            :poss-of 16) 
      :ARG1 (a / accident) 
      :ARG2 (c / country 
            :mod-of (p / police 
                  :mod-of (h2 / headquarters)) 
            :name (n / name 
                  :op1 "valley" 
                  :op2 "thames")) 
      :op-of (w / way) 
      :time (d / date-entity 
            :month 3))

# ::snt he said he welcomed the news that there had been a reduction in the number of fatal accidents to children, we urge all farmers to comply fully with the code of practice for preventing accidents to children in agriculture which the health and safety executive introduced last year he said
# ::tok he said he welcomed the news that there had been a reduction in the number of fatal accidents to children , we urge all farmers to comply fully with the code of practice for preventing accidents to children in agriculture which the health and safety executive introduced last year he said
# ::alignments 50-51|0 49-50|0.0 48-49|0.1 47-48|0.1.0 46-47|0.1.1 45-46|0.1.1.0 44-45|0.1.1.1.2 43-44|0.1.1.1 42-43|0.1.1.1.1 39-40|0.1.1.1.0.0.0.3 37-38|0.1.1.1.0.0.0.2 35-36|0.1.1.1.0.0.0.0 34-35|0.1.1.1.0.0.0 32-33|0.1.1.1.0.0.0.1 30-31|0.1.1.1.0.1.1 27-28|0.1.1.1.0.1.2 26-27|0.1.1.1.0.1 24-25|0.1.1.1.0.1.0.0+0.1.1.1.0.1.0 23-24|0.1.1.1.0.1.0.1 22-23|0.1.1.1.0 21-22|0.1.1.1.0.0 19-20|0.1.1.1.0.0.0.1.0.1.0.1 17-18|0.1.1.1.0.0.0.1.0.1.0 16-17|0.1.1.1.0.0.0.1.0.1.0.0 14-15|0.1.1.1.0.0.0.1.0.1 11-12|0.1.1.1.0.0.0.1.0 5-6|0.1.1.1.0.0.0.1.0.0.0.0 3-4|0.1.1.1.0.0.0.1.0.0.0 2-3|0.1.1.1.0.0.0.1.0.0 1-2|0.1.1.1.0.0.0.1.0.0.0.1 0-1|0.1.1.1.0.0.0.1.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:00.971
# ::node	0	say-01	50-51
# ::node	0.0	he	49-50
# ::node	0.1	year	48-49
# ::node	0.1.0	last	47-48
# ::node	0.1.1	introduce-02	46-47
# ::node	0.1.1.0	executive	45-46
# ::node	0.1.1.1	and	43-44
# ::node	0.1.1.1.0	urge-01	22-23
# ::node	0.1.1.1.0.0	we	21-22
# ::node	0.1.1.1.0.0.0	prevent-01	34-35
# ::node	0.1.1.1.0.0.0.0	accident	35-36
# ::node	0.1.1.1.0.0.0.1	practice-01	32-33
# ::node	0.1.1.1.0.0.0.1.0	reduce-01	11-12
# ::node	0.1.1.1.0.0.0.1.0.0	he	2-3
# ::node	0.1.1.1.0.0.0.1.0.0.0	welcome-01	3-4
# ::node	0.1.1.1.0.0.0.1.0.0.0.0	news	5-6
# ::node	0.1.1.1.0.0.0.1.0.0.0.1	say-01	1-2
# ::node	0.1.1.1.0.0.0.1.0.0.0.1.0	he	0-1
# ::node	0.1.1.1.0.0.0.1.0.1	number	14-15
# ::node	0.1.1.1.0.0.0.1.0.1.0	accident	17-18
# ::node	0.1.1.1.0.0.0.1.0.1.0.0	fatal	16-17
# ::node	0.1.1.1.0.0.0.1.0.1.0.1	child	19-20
# ::node	0.1.1.1.0.0.0.2	child	37-38
# ::node	0.1.1.1.0.0.0.3	agriculture	39-40
# ::node	0.1.1.1.0.1	comply-01	26-27
# ::node	0.1.1.1.0.1.0	person	24-25
# ::node	0.1.1.1.0.1.0.0	farm-01	24-25
# ::node	0.1.1.1.0.1.0.1	all	23-24
# ::node	0.1.1.1.0.1.1	code	30-31
# ::node	0.1.1.1.0.1.2	full	27-28
# ::node	0.1.1.1.1	health	42-43
# ::node	0.1.1.1.2	safe-41	44-45
# ::root	0	say-01
# ::edge	accident	mod	fatal	0.1.1.1.0.0.0.1.0.1.0	0.1.1.1.0.0.0.1.0.1.0.0	
# ::edge	accident	prep-to	child	0.1.1.1.0.0.0.1.0.1.0	0.1.1.1.0.0.0.1.0.1.0.1	
# ::edge	accident	quant	number	0.1.1.1.0.0.0.1.0.1.0	0.1.1.1.0.0.0.1.0.1	
# ::edge	and	op1	health	0.1.1.1	0.1.1.1.1	
# ::edge	and	op2	safe-41	0.1.1.1	0.1.1.1.2	
# ::edge	comply-01	ARG0	person	0.1.1.1.0.1	0.1.1.1.0.1.0	
# ::edge	comply-01	ARG1	code	0.1.1.1.0.1	0.1.1.1.0.1.1	
# ::edge	comply-01	degree	full	0.1.1.1.0.1	0.1.1.1.0.1.2	
# ::edge	farm-01	ARG0	person	0.1.1.1.0.1.0.0	0.1.1.1.0.1.0	
# ::edge	introduce-02	ARG0	executive	0.1.1	0.1.1.0	
# ::edge	introduce-02	ARG1	and	0.1.1	0.1.1.1	
# ::edge	introduce-02	time	year	0.1.1	0.1	
# ::edge	person	quant	all	0.1.1.1.0.1.0	0.1.1.1.0.1.0.1	
# ::edge	practice-01	ARG1	prevent-01	0.1.1.1.0.0.0.1	0.1.1.1.0.0.0	
# ::edge	prevent-01	ARG0	we	0.1.1.1.0.0.0	0.1.1.1.0.0	
# ::edge	prevent-01	ARG1	accident	0.1.1.1.0.0.0	0.1.1.1.0.0.0.0	
# ::edge	prevent-01	ARG2	child	0.1.1.1.0.0.0	0.1.1.1.0.0.0.2	
# ::edge	prevent-01	location	agriculture	0.1.1.1.0.0.0	0.1.1.1.0.0.0.3	
# ::edge	reduce-01	ARG0	he	0.1.1.1.0.0.0.1.0	0.1.1.1.0.0.0.1.0.0	
# ::edge	reduce-01	ARG1	number	0.1.1.1.0.0.0.1.0	0.1.1.1.0.0.0.1.0.1	
# ::edge	reduce-01	ARG2	practice-01	0.1.1.1.0.0.0.1.0	0.1.1.1.0.0.0.1	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG0	he	0.1.1.1.0.0.0.1.0.0.0.1	0.1.1.1.0.0.0.1.0.0.0.1.0	
# ::edge	say-01	ARG1	welcome-01	0.1.1.1.0.0.0.1.0.0.0.1	0.1.1.1.0.0.0.1.0.0.0	
# ::edge	say-01	ARG1	year	0	0.1	
# ::edge	urge-01	ARG0	we	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	urge-01	ARG1	and	0.1.1.1.0	0.1.1.1	
# ::edge	urge-01	ARG2	comply-01	0.1.1.1.0	0.1.1.1.0.1	
# ::edge	welcome-01	ARG0	he	0.1.1.1.0.0.0.1.0.0.0	0.1.1.1.0.0.0.1.0.0	
# ::edge	welcome-01	ARG1	news	0.1.1.1.0.0.0.1.0.0.0	0.1.1.1.0.0.0.1.0.0.0.0	
# ::edge	year	mod	last	0.1	0.1.0	
(s / say-01 
      :ARG0 (h / he) 
      :ARG1 (y / year 
            :mod (l / last) 
            :time-of (i / introduce-02 
                  :ARG0 (e / executive) 
                  :ARG1 (a / and 
                        :ARG1-of (u / urge-01 
                              :ARG0 (w / we 
                                    :ARG0-of (p / prevent-01 
                                          :ARG1 (a3 / accident) 
                                          :ARG1-of (p2 / practice-01 
                                                :ARG2-of (r / reduce-01 
                                                      :ARG0 (h3 / he 
                                                            :ARG0-of (w2 / welcome-01 
                                                                  :ARG1 (n2 / news) 
                                                                  :ARG1-of (s3 / say-01 
                                                                        :ARG0 (h4 / he)))) 
                                                      :ARG1 (n / number 
                                                            :quant-of (a5 / accident 
                                                                  :mod (f3 / fatal) 
                                                                  :prep-to (c4 / child))))) 
                                          :ARG2 (c / child) 
                                          :location (a2 / agriculture))) 
                              :ARG2 (c3 / comply-01 
                                    :ARG0 (p3 / person 
                                          :ARG0-of (f2 / farm-01) 
                                          :quant (a4 / all)) 
                                    :ARG1 (c2 / code) 
                                    :degree (f / full))) 
                        :op1 (h2 / health) 
                        :op2 (s2 / safe-41)))))

# ::snt what happens if i am ill have an accident or i am made redundant 
# ::tok what happens if i am ill have an accident or i am made redundant
# ::alignments 10-11|0.0.0.0 9-10|0.0 8-9|0.0.1 5-6|0.0.0 3-4|0.0.0.1 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:01.026
# ::node	0	happen-01	1-2
# ::node	0.0	or	9-10
# ::node	0.0.0	ill-41	5-6
# ::node	0.0.0.0	i	10-11
# ::node	0.0.0.1	i	3-4
# ::node	0.0.1	accident	8-9
# ::root	0	happen-01
# ::edge	happen-01	ARG1	or	0	0.0	
# ::edge	ill-41	ARG1	i	0.0.0	0.0.0.0	
# ::edge	ill-41	domain	i	0.0.0	0.0.0.1	
# ::edge	or	op1	ill-41	0.0	0.0.0	
# ::edge	or	op2	accident	0.0	0.0.1	
(h / happen-01 
      :ARG1 (o / or 
            :op1 (i2 / ill-41 
                  :ARG1 (i / i) 
                  :domain (i3 / i)) 
            :op2 (a / accident)))

# ::snt besides spreading the loss it would promote deterrence and economic efficiency by internalizing the accident cost to the enterprise that is in the best position to reduce accidents and pass on the cost to its beneficiaries by means of insurance and price calculation
# ::tok besides spreading the loss it would promote deterrence and economic efficiency by internalizing the accident cost to the enterprise that is in the best position to reduce accidents and pass on the cost to its beneficiaries by means of insurance and price calculation
# ::alignments 42-43|0.1 41-42|0.0.1.0+0.0.1 40-41|0.0 39-40|0.0.0 37-38|0 32-33|0.0.0.0.0.1.0 28-29|0.0.0.0.0.1 27-28|0.0.0.0.0.0 26-27|0.0.0.0.0 24-25|0.0.0.0.0.1.1 18-19|0.0.0.0 15-16|0.0.0.0.1 14-15|0.0.0.0.1.0.0 10-11|0.0.0.0.1.0.1.1 9-10|0.0.0.0.1.0.1.1.0 8-9|0.0.0.0.1.0 6-7|0.0.0.0.1.0.1 4-5|0.0.0.0.1.0.1.0 1-2|0.0.0.0.1.0.1.2 0-1|0.0.0.0.1.0.1.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:01.561
# ::node	0	mean-01	37-38
# ::node	0.0	and	40-41
# ::node	0.0.0	insure-02	39-40
# ::node	0.0.0.0	enterprise	18-19
# ::node	0.0.0.0.0	reduce-01	26-27
# ::node	0.0.0.0.0.0	accident	27-28
# ::node	0.0.0.0.0.1	and	28-29
# ::node	0.0.0.0.0.1.0	cost-01	32-33
# ::node	0.0.0.0.0.1.1	position	24-25
# ::node	0.0.0.0.1	cost-01	15-16
# ::node	0.0.0.0.1.0	and	8-9
# ::node	0.0.0.0.1.0.0	accident	14-15
# ::node	0.0.0.0.1.0.1	promote-02	6-7
# ::node	0.0.0.0.1.0.1.0	it	4-5
# ::node	0.0.0.0.1.0.1.1	efficiency	10-11
# ::node	0.0.0.0.1.0.1.1.0	economy	9-10
# ::node	0.0.0.0.1.0.1.2	spread-03	1-2
# ::node	0.0.0.0.1.0.1.2.0	besides	0-1
# ::node	0.0.1	thing	41-42
# ::node	0.0.1.0	price-01	41-42
# ::node	0.1	calculation	42-43
# ::root	0	mean-01
# ::edge	accident	op1	and	0.0.0.0.1.0.0	0.0.0.0.1.0	
# ::edge	and	manner	cost-01	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	and	op1	insure-02	0.0	0.0.0	
# ::edge	and	op1	promote-02	0.0.0.0.1.0	0.0.0.0.1.0.1	
# ::edge	and	op1	reduce-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	and	op2	thing	0.0	0.0.1	
# ::edge	besides	op1	spread-03	0.0.0.0.1.0.1.2.0	0.0.0.0.1.0.1.2	
# ::edge	cost-01	ARG0	and	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	cost-01	ARG1	enterprise	0.0.0.0.1	0.0.0.0	
# ::edge	efficiency	mod	economy	0.0.0.0.1.0.1.1	0.0.0.0.1.0.1.1.0	
# ::edge	insure-02	ARG1	enterprise	0.0.0	0.0.0.0	
# ::edge	mean-01	ARG0	and	0	0.0	
# ::edge	mean-01	ARG1	calculation	0	0.1	
# ::edge	position	purpose	and	0.0.0.0.0.1.1	0.0.0.0.0.1	
# ::edge	price-01	ARG2	thing	0.0.1.0	0.0.1	
# ::edge	promote-02	ARG0	it	0.0.0.0.1.0.1	0.0.0.0.1.0.1.0	
# ::edge	promote-02	ARG1	efficiency	0.0.0.0.1.0.1	0.0.0.0.1.0.1.1	
# ::edge	reduce-01	ARG0	enterprise	0.0.0.0.0	0.0.0.0	
# ::edge	reduce-01	ARG1	accident	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	spread-03	ARG1	promote-02	0.0.0.0.1.0.1.2	0.0.0.0.1.0.1	
(m / mean-01 
      :ARG0 (a / and 
            :op1 (i / insure-02 
                  :ARG1 (e / enterprise 
                        :ARG0-of (r / reduce-01 
                              :ARG1 (a3 / accident) 
                              :op-of (a2 / and 
                                    :manner (c2 / cost-01) 
                                    :purpose-of (p2 / position))) 
                        :ARG1-of (c3 / cost-01 
                              :ARG0 (a5 / and 
                                    :op-of (a4 / accident) 
                                    :op1 (p3 / promote-02 
                                          :ARG0 (i2 / it) 
                                          :ARG1 (e2 / efficiency 
                                                :mod (e3 / economy)) 
                                          :ARG1-of (s / spread-03 
                                                :op-of (b / besides))))))) 
            :op2 (t / thing 
                  :ARG2-of (p / price-01))) 
      :ARG1 (c / calculation))

# ::snt there have been three accidents this year on the shilton dip but there are ellip, its a long time since there has been an accident, and theres no accident record at all in the ellip
# ::tok there have been three accidents this year on the shilton dip but there are ellip , its a long time since there has been an accident , and theres no accident record at all in the ellip
# ::alignments 33-34|0.3 31-32|0.2.0.0 30-31|0.2.0.0.0 29-30|0.2.0.0.1 27-28|0.2 25-26|0.2.0 20-21|0.0.0 19-20|0.0 11-12|0 10-11|0.1 6-7|0.1.0 5-6|0.1.0.0 4-5|0.1.0.0.0 3-4|0.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:01.666
# ::node	0	contrast-01	11-12
# ::node	0.0	time	19-20
# ::node	0.0.0	since	20-21
# ::node	0.1	dip	10-11
# ::node	0.1.0	year	6-7
# ::node	0.1.0.0	this	5-6
# ::node	0.1.0.0.0	accident	4-5
# ::node	0.1.0.0.0.0	3	3-4
# ::node	0.2	and	27-28
# ::node	0.2.0	accident	25-26
# ::node	0.2.0.0	record	31-32
# ::node	0.2.0.0.0	accident	30-31
# ::node	0.2.0.0.1	-	29-30
# ::node	0.3	all	33-34
# ::root	0	contrast-01
# ::edge	accident	op1	this	0.1.0.0.0	0.1.0.0	
# ::edge	accident	quant	3	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	all	domain	contrast-01	0.3	0	
# ::edge	and	op1	accident	0.2	0.2.0	
# ::edge	contrast-01	ARG0	time	0	0.0	
# ::edge	contrast-01	ARG1	dip	0	0.1	
# ::edge	contrast-01	ARG2	and	0	0.2	
# ::edge	record	mod	accident	0.2.0.0	0.2.0.0.0	
# ::edge	record	polarity	-	0.2.0.0	0.2.0.0.1	
# ::edge	record	poss	accident	0.2.0.0	0.2.0	
# ::edge	time	location	since	0.0	0.0.0	
# ::edge	year	mod	this	0.1.0	0.1.0.0	
# ::edge	year	time	dip	0.1.0	0.1	
(c / contrast-01 
      :ARG0 (t / time 
            :location (s / since)) 
      :ARG1 (d / dip 
            :time-of (y / year 
                  :mod (t2 / this 
                        :op-of (a5 / accident 
                              :quant 3)))) 
      :ARG2 (a3 / and 
            :op1 (a4 / accident 
                  :poss-of (r / record 
                        :mod (a2 / accident) 
                        :polarity (- / -)))) 
      :domain-of (a / all))

# ::snt both apply to international accidents but the london convention also extends to inland waterway accidents such as the thames riverboat tragedy
# ::tok both apply to international accidents but the london convention also extends to inland waterway accidents such as the thames riverboat tragedy
# ::alignments 20-21|0.0 15-16|0.3.0 14-15|0.3 12-13|0.1.1 10-11|0.1 9-10|0.1.2 8-9|0.1.0 7-8|0.1.0.0.0.0+0.1.0.0.0+0.1.0.0 5-6|0 4-5|0.2.1 3-4|0.2.1.0 1-2|0.2 0-1|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:01.807
# ::node	0	contrast-01	5-6
# ::node	0.0	tragedy	20-21
# ::node	0.1	extend-01	10-11
# ::node	0.1.0	convention	8-9
# ::node	0.1.0.0	city	7-8
# ::node	0.1.0.0.0	name	7-8
# ::node	0.1.0.0.0.0	"London"	7-8
# ::node	0.1.1	inland	12-13
# ::node	0.1.2	also	9-10
# ::node	0.2	apply-01	1-2
# ::node	0.2.0	both	0-1
# ::node	0.2.1	accident	4-5
# ::node	0.2.1.0	international	3-4
# ::node	0.3	accident	14-15
# ::node	0.3.0	such	15-16
# ::root	0	contrast-01
# ::edge	accident	mod	international	0.2.1	0.2.1.0	
# ::edge	apply-01	ARG0	both	0.2	0.2.0	
# ::edge	apply-01	ARG1	contrast-01	0.2	0	
# ::edge	apply-01	ARG2	accident	0.2	0.2.1	
# ::edge	city	name	name	0.1.0.0	0.1.0.0.0	
# ::edge	contrast-01	ARG0	tragedy	0	0.0	
# ::edge	contrast-01	ARG1	extend-01	0	0.1	
# ::edge	contrast-01	ARG2	accident	0	0.3	
# ::edge	convention	mod	city	0.1.0	0.1.0.0	
# ::edge	extend-01	ARG0	convention	0.1	0.1.0	
# ::edge	extend-01	ARG1	inland	0.1	0.1.1	
# ::edge	extend-01	mod	also	0.1	0.1.2	
# ::edge	name	op1	"London"	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	such	mod	accident	0.3.0	0.3	
(c3 / contrast-01 
      :ARG0 (t / tragedy) 
      :ARG1 (e / extend-01 
            :ARG0 (c / convention 
                  :mod (c2 / city 
                        :name (n / name 
                              :op1 "London"))) 
            :ARG1 (i / inland) 
            :mod (a2 / also)) 
      :ARG1-of (a4 / apply-01 
            :ARG0 (b / both) 
            :ARG2 (a3 / accident 
                  :mod (i2 / international))) 
      :ARG2 (a / accident 
            :mod-of (s / such)))

# ::snt i here was a kid a fat little bugger in a sort of beret lolling on a stool at the bar now trying to kick his leg by accident
# ::tok i here was a kid a fat little bugger in a sort of beret lolling on a stool at the bar now trying to kick his leg by accident
# ::alignments 28-29|0.1.2 26-27|0.1.1 24-25|0.1 22-23|0 21-22|0.2 20-21|0.1.0 11-12|0.0 7-8|0.1.0.1 6-7|0.1.0.1.0 4-5|0.1.0.0 1-2|0.1.0.0.0.0 0-1|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:01.995
# ::node	0	try-01	22-23
# ::node	0.0	sort	11-12
# ::node	0.1	kick-01	24-25
# ::node	0.1.0	bar-01	20-21
# ::node	0.1.0.0	kid	4-5
# ::node	0.1.0.0.0	i	0-1
# ::node	0.1.0.0.0.0	here	1-2
# ::node	0.1.0.1	little	7-8
# ::node	0.1.0.1.0	fat	6-7
# ::node	0.1.1	leg	26-27
# ::node	0.1.2	accident	28-29
# ::node	0.2	now	21-22
# ::root	0	try-01
# ::edge	bar-01	ARG0	kid	0.1.0	0.1.0.0	
# ::edge	bar-01	ARG1	little	0.1.0	0.1.0.1	
# ::edge	here	mod	i	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	kick-01	ARG0	bar-01	0.1	0.1.0	
# ::edge	kick-01	ARG1	leg	0.1	0.1.1	
# ::edge	kick-01	ARG2	accident	0.1	0.1.2	
# ::edge	kid	domain	i	0.1.0.0	0.1.0.0.0	
# ::edge	little	degree	fat	0.1.0.1	0.1.0.1.0	
# ::edge	try-01	ARG0	sort	0	0.0	
# ::edge	try-01	ARG1	kick-01	0	0.1	
# ::edge	try-01	time	now	0	0.2	
(t / try-01 
      :ARG0 (s / sort) 
      :ARG1 (k / kick-01 
            :ARG0 (b / bar-01 
                  :ARG0 (k2 / kid 
                        :domain (i / i 
                              :mod-of (h / here))) 
                  :ARG1 (l2 / little 
                        :degree (f / fat))) 
            :ARG1 (l / leg) 
            :ARG2 (a / accident)) 
      :time (n / now))

# ::snt he had played the first round but before he had a chance even to hit a ball in the second he was out of the prequalifier suffering from injuries he had received in a car accident with his caddie
# ::tok he had played the first round but before he had a chance even to hit a ball in the second he was out of the prequalifier suffering from injuries he had received in a car accident with his caddie
# ::alignments 35-36|0.1.0.0.1.0.1 34-35|0.1.0.0.1.0.1.0 31-32|0.1.0.0.1.0 29-30|0.1.0.0.1.0.0 28-29|0.1.0.0.1 26-27|0.1.0.0 20-21|0.1.0.0.0 16-17|0.1.0.1.1 14-15|0.1.0.1 11-12|0.1.0 8-9|0.1.0.1.0 7-8|0.1 6-7|0 5-6|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:02.677
# ::node	0	contrast-01	6-7
# ::node	0.0	round	5-6
# ::node	0.0.0	he	0-1
# ::node	0.1	before	7-8
# ::node	0.1.0	chance	11-12
# ::node	0.1.0.0	suffer-01	26-27
# ::node	0.1.0.0.0	he	20-21
# ::node	0.1.0.0.1	injure-01	28-29
# ::node	0.1.0.0.1.0	receive-01	31-32
# ::node	0.1.0.0.1.0.0	he	29-30
# ::node	0.1.0.0.1.0.1	accident	35-36
# ::node	0.1.0.0.1.0.1.0	car	34-35
# ::node	0.1.0.1	hit-01	14-15
# ::node	0.1.0.1.0	he	8-9
# ::node	0.1.0.1.1	ball	16-17
# ::root	0	contrast-01
# ::edge	accident	location	car	0.1.0.0.1.0.1	0.1.0.0.1.0.1.0	
# ::edge	before	op1	chance	0.1	0.1.0	
# ::edge	contrast-01	ARG1	round	0	0.0	
# ::edge	contrast-01	ARG2	before	0	0.1	
# ::edge	hit-01	ARG0	he	0.1.0.1	0.1.0.1.0	
# ::edge	hit-01	ARG1	ball	0.1.0.1	0.1.0.1.1	
# ::edge	hit-01	ARG2	chance	0.1.0.1	0.1.0	
# ::edge	receive-01	ARG0	he	0.1.0.0.1.0	0.1.0.0.1.0.0	
# ::edge	receive-01	ARG1	injure-01	0.1.0.0.1.0	0.1.0.0.1	
# ::edge	receive-01	ARG2	accident	0.1.0.0.1.0	0.1.0.0.1.0.1	
# ::edge	round	poss	he	0.0	0.0.0	
# ::edge	suffer-01	ARG0	he	0.1.0.0	0.1.0.0.0	
# ::edge	suffer-01	ARG1	chance	0.1.0.0	0.1.0	
# ::edge	suffer-01	manner	injure-01	0.1.0.0	0.1.0.0.1	
(c3 / contrast-01 
      :ARG1 (r2 / round 
            :poss (h5 / he)) 
      :ARG2 (b2 / before 
            :op1 (c2 / chance 
                  :ARG1-of (s / suffer-01 
                        :ARG0 (h2 / he) 
                        :manner (i / injure-01 
                              :ARG1-of (r / receive-01 
                                    :ARG0 (h / he) 
                                    :ARG2 (a / accident 
                                          :location (c / car))))) 
                  :ARG2-of (h3 / hit-01 
                        :ARG0 (h4 / he) 
                        :ARG1 (b / ball)))))

# ::snt golf driver miss annette heywood of little rissington gloucestershire told the inquest in oxford she was travelling at 20mph when the accident happened
# ::tok golf driver miss annette heywood of little rissington gloucestershire told the inquest in oxford she was travelling at 20mph when the accident happened
# ::alignments 22-23|0 21-22|0.1 16-17|0.0.0 14-15|0.0 11-12|0.0.0.0.1 9-10|0.0.0.0 6-7|0.2 1-2|0.0.0.0.0.0+0.0.0.0.0 0-1|0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:02.857
# ::node	0	happen-01	22-23
# ::node	0.0	she	14-15
# ::node	0.0.0	travel-01	16-17
# ::node	0.0.0.0	tell-01	9-10
# ::node	0.0.0.0.0	person	1-2
# ::node	0.0.0.0.0.0	drive-01	1-2
# ::node	0.0.0.0.0.0.0	golf	0-1
# ::node	0.0.0.0.1	inquest	11-12
# ::node	0.1	accident	21-22
# ::node	0.2	little	6-7
# ::root	0	happen-01
# ::edge	drive-01	ARG0	person	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	drive-01	ARG1	golf	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	happen-01	ARG0	she	0	0.0	
# ::edge	happen-01	ARG1	accident	0	0.1	
# ::edge	little	op1	happen-01	0.2	0	
# ::edge	tell-01	ARG0	person	0.0.0.0	0.0.0.0.0	
# ::edge	tell-01	ARG1	inquest	0.0.0.0	0.0.0.0.1	
# ::edge	travel-01	ARG0	she	0.0.0	0.0	
# ::edge	travel-01	ARG1	tell-01	0.0.0	0.0.0.0	
(h / happen-01 
      :ARG0 (s / she 
            :ARG0-of (t / travel-01 
                  :ARG1 (t2 / tell-01 
                        :ARG0 (p / person 
                              :ARG0-of (d / drive-01 
                                    :ARG1 (g / golf))) 
                        :ARG1 (i / inquest)))) 
      :ARG1 (a / accident) 
      :op-of (l / little))

# ::snt hisham abdelrasoul the egypt midfield player will miss the world cup finals after breaking his leg in a car accident near cairo
# ::tok hisham abdelrasoul the egypt midfield player will miss the world cup finals after breaking his leg in a car accident near cairo
# ::alignments 20-21|0.2.1 19-20|0.2 18-19|0.2.0 15-16|0.1 13-14|0 12-13|0.3 11-12|0.0 10-11|0.0.0 9-10|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:02.902
# ::node	0	break-01	13-14
# ::node	0.0	final	11-12
# ::node	0.0.0	cup	10-11
# ::node	0.0.0.0	world	9-10
# ::node	0.1	leg	15-16
# ::node	0.2	accident	19-20
# ::node	0.2.0	car	18-19
# ::node	0.2.1	near	20-21
# ::node	0.3	after	12-13
# ::root	0	break-01
# ::edge	accident	location	car	0.2	0.2.0	
# ::edge	accident	location	near	0.2	0.2.1	
# ::edge	after	op1	break-01	0.3	0	
# ::edge	break-01	ARG0	final	0	0.0	
# ::edge	break-01	ARG1	leg	0	0.1	
# ::edge	break-01	ARG2	accident	0	0.2	
# ::edge	cup	mod	world	0.0.0	0.0.0.0	
# ::edge	final	mod	cup	0.0	0.0.0	
(b / break-01 
      :ARG0 (f / final 
            :mod (c2 / cup 
                  :mod (w / world))) 
      :ARG1 (l / leg) 
      :ARG2 (a / accident 
            :location (c / car) 
            :location (n / near)) 
      :op-of (a2 / after))

# ::snt last month a man who received head injuries in a road accident when he was 16 received 860000
# ::tok last month a man who received head injuries in a road accident when he was 16 received 860000
# ::alignments 17-18|0.2.0+0.2 16-17|0 15-16|0.0 13-14|0.1 11-12|0.1.0.0.0.1 10-11|0.1.0.0.0.1.0 7-8|0.1.0.0 6-7|0.1.0 5-6|0.1.0.0.0 3-4|0.1.0.0.0.0 1-2|0.1.0.0.0.2.0.0+0.1.0.0.0.2.0 0-1|0.1.0.0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:03.007
# ::node	0	receive-01	16-17
# ::node	0.0	16	15-16
# ::node	0.1	he	13-14
# ::node	0.1.0	head-01	6-7
# ::node	0.1.0.0	injure-01	7-8
# ::node	0.1.0.0.0	receive-01	5-6
# ::node	0.1.0.0.0.0	man	3-4
# ::node	0.1.0.0.0.1	accident	11-12
# ::node	0.1.0.0.0.1.0	road	10-11
# ::node	0.1.0.0.0.2	last	0-1
# ::node	0.1.0.0.0.2.0	temporal-quantity	1-2
# ::node	0.1.0.0.0.2.0.0	month	1-2
# ::node	0.2	date-entity	17-18
# ::node	0.2.0	1986	17-18
# ::root	0	receive-01
# ::edge	accident	location	road	0.1.0.0.0.1	0.1.0.0.0.1.0	
# ::edge	date-entity	year	1986	0.2	0.2.0	
# ::edge	head-01	ARG0	he	0.1.0	0.1	
# ::edge	injure-01	ARG1	head-01	0.1.0.0	0.1.0	
# ::edge	last	op1	receive-01	0.1.0.0.0.2	0.1.0.0.0	
# ::edge	receive-01	ARG0	16	0	0.0	
# ::edge	receive-01	ARG0	man	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	receive-01	ARG1	he	0	0.1	
# ::edge	receive-01	ARG1	injure-01	0.1.0.0.0	0.1.0.0	
# ::edge	receive-01	ARG2	accident	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	receive-01	time	date-entity	0	0.2	
# ::edge	temporal-quantity	mod	last	0.1.0.0.0.2.0	0.1.0.0.0.2	
# ::edge	temporal-quantity	unit	month	0.1.0.0.0.2.0	0.1.0.0.0.2.0.0	
(r / receive-01 
      :ARG0 16 
      :ARG1 (h / he 
            :ARG0-of (h2 / head-01 
                  :ARG1-of (i / injure-01 
                        :ARG1-of (r3 / receive-01 
                              :ARG0 (m / man) 
                              :ARG2 (a / accident 
                                    :location (r2 / road)) 
                              :op-of (l / last 
                                    :mod-of (t / temporal-quantity 
                                          :unit (m2 / month))))))) 
      :time (d / date-entity 
            :year 1986))

# ::snt it is no accident that 1971 was the year of the first us trade deficit the year that the us devalued the dollar and abandoned the bretton woods system of fixed exchange rates and also the year that nixon and kissinger went to moscow and initiated detente
# ::tok it is no accident that 1971 was the year of the first us trade deficit the year that the us devalued the dollar and abandoned the bretton woods system of fixed exchange rates and also the year that nixon and kissinger went to moscow and initiated detente
# ::alignments 45-46|0.1.1.0.2.3.0 44-45|0.1.1.0.2.3 39-40|0.1.1.0.2.3.0.0 36-37|0.1.1.1 34-35|0.1.1.1.0 33-34|0.1.1 32-33|0.1.0 31-32|0 30-31|0.1 28-29|0.1.1.0.1 24-25|0.1.1.0 23-24|0.1.1.0.2 22-23|0.1.1.0.2.2.1.0+0.1.1.0.2.2.1 20-21|0.1.1.0.2.2 16-17|0.1.1.0.2.2.0 14-15|0.1.1.0.2.1 13-14|0.1.1.0.2.1.0 8-9|0.1.1.0.2.0 5-6|0.0.0+0.0 3-4|0.1.1.0.0.0 2-3|0.1.1.0.0.0.0 0-1|0.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:03.803
# ::node	0	exchange-01	31-32
# ::node	0.0	date-entity	5-6
# ::node	0.0.0	1971	5-6
# ::node	0.1	fix-03	30-31
# ::node	0.1.0	rate	32-33
# ::node	0.1.1	and	33-34
# ::node	0.1.1.0	abandon-01	24-25
# ::node	0.1.1.0.0	it	0-1
# ::node	0.1.1.0.0.0	accident	3-4
# ::node	0.1.1.0.0.0.0	-	2-3
# ::node	0.1.1.0.1	system	28-29
# ::node	0.1.1.0.2	and	23-24
# ::node	0.1.1.0.2.0	year	8-9
# ::node	0.1.1.0.2.1	deficit	14-15
# ::node	0.1.1.0.2.1.0	trade-01	13-14
# ::node	0.1.1.0.2.2	devalue-01	20-21
# ::node	0.1.1.0.2.2.0	year	16-17
# ::node	0.1.1.0.2.2.1	monetary-quantity	22-23
# ::node	0.1.1.0.2.2.1.0	dollar	22-23
# ::node	0.1.1.0.2.3	and	44-45
# ::node	0.1.1.0.2.3.0	initiate-01	45-46
# ::node	0.1.1.0.2.3.0.0	and	39-40
# ::node	0.1.1.1	year	36-37
# ::node	0.1.1.1.0	also	34-35
# ::root	0	exchange-01
# ::edge	abandon-01	ARG0	it	0.1.1.0	0.1.1.0.0	
# ::edge	abandon-01	ARG1	system	0.1.1.0	0.1.1.0.1	
# ::edge	accident	domain	it	0.1.1.0.0.0	0.1.1.0.0	
# ::edge	accident	polarity	-	0.1.1.0.0.0	0.1.1.0.0.0.0	
# ::edge	and	op1	abandon-01	0.1.1	0.1.1.0	
# ::edge	and	op1	initiate-01	0.1.1.0.2.3.0.0	0.1.1.0.2.3.0	
# ::edge	and	op1	year	0.1.1.0.2	0.1.1.0.2.0	
# ::edge	and	op2	deficit	0.1.1.0.2	0.1.1.0.2.1	
# ::edge	and	op2	fix-03	0.1.1	0.1	
# ::edge	and	op3	devalue-01	0.1.1.0.2	0.1.1.0.2.2	
# ::edge	and	op4	abandon-01	0.1.1.0.2	0.1.1.0	
# ::edge	and	op5	and	0.1.1.0.2	0.1.1.0.2.3	
# ::edge	and	time	year	0.1.1	0.1.1.1	
# ::edge	date-entity	year	1971	0.0	0.0.0	
# ::edge	deficit	mod	trade-01	0.1.1.0.2.1	0.1.1.0.2.1.0	
# ::edge	devalue-01	ARG0	year	0.1.1.0.2.2	0.1.1.0.2.2.0	
# ::edge	devalue-01	ARG1	monetary-quantity	0.1.1.0.2.2	0.1.1.0.2.2.1	
# ::edge	exchange-01	ARG1	date-entity	0	0.0	
# ::edge	fix-03	ARG0	rate	0.1	0.1.0	
# ::edge	fix-03	ARG1	exchange-01	0.1	0	
# ::edge	initiate-01	ARG0	and	0.1.1.0.2.3.0	0.1.1.0.2.3	
# ::edge	monetary-quantity	unit	dollar	0.1.1.0.2.2.1	0.1.1.0.2.2.1.0	
# ::edge	year	mod	also	0.1.1.1	0.1.1.1.0	
(e / exchange-01 
      :ARG1 (d4 / date-entity 
            :year 1971) 
      :ARG1-of (f / fix-03 
            :ARG0 (r / rate) 
            :op-of (a4 / and 
                  :op1 (a5 / abandon-01 
                        :ARG0 (i2 / it 
                              :domain-of (a7 / accident 
                                    :polarity (- / -))) 
                        :ARG1 (s / system) 
                        :op-of (a6 / and 
                              :op1 (y3 / year) 
                              :op2 (d3 / deficit 
                                    :mod (t / trade-01)) 
                              :op3 (d2 / devalue-01 
                                    :ARG0 (y2 / year) 
                                    :ARG1 (m / monetary-quantity 
                                          :unit (d / dollar))) 
                              :op4 (a / and 
                                    :ARG0-of (i / initiate-01 
                                          :op-of (a2 / and))))) 
                  :time (y / year 
                        :mod (a3 / also)))))

# ::snt the accident happened in heavy rain on the a424 three miles north of burford just a hundred yards from the spot where a couple were killed in december after their car was in a collision with a coach
# ::tok the accident happened in heavy rain on the a424 three miles north of burford just a hundred yards from the spot where a couple were killed in december after their car was in a collision with a coach
# ::alignments 37-38|0+0.0 34-35|0.0.0 30-31|0.1.1.1.0 28-29|0.1.1.3 27-28|0.1.0+0.1 25-26|0.1.1 23-24|0.1.1.1 20-21|0.1.1.0 17-18|0.1.1.2 14-15|0.1.1.4.0 11-12|0.0.0.0 10-11|0.1.1.4.2.0.1+0.1.1.4.2.0 9-10|0.1.1.4.2.0.0 5-6|0.1.1.4.2 4-5|0.1.1.4.2.1 2-3|0.1.1.4 1-2|0.1.1.4.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:04.083
# ::node	0	coach-01	37-38
# ::node	0.0	person	37-38
# ::node	0.0.0	collide-01	34-35
# ::node	0.0.0.0	north	11-12
# ::node	0.1	date-entity	27-28
# ::node	0.1.0	12	27-28
# ::node	0.1.1	kill-01	25-26
# ::node	0.1.1.0	spot	20-21
# ::node	0.1.1.1	couple	23-24
# ::node	0.1.1.1.0	car	30-31
# ::node	0.1.1.2	yard	17-18
# ::node	0.1.1.3	after	28-29
# ::node	0.1.1.4	happen-01	2-3
# ::node	0.1.1.4.0	just	14-15
# ::node	0.1.1.4.1	accident	1-2
# ::node	0.1.1.4.2	rain-01	5-6
# ::node	0.1.1.4.2.0	distance-quantity	10-11
# ::node	0.1.1.4.2.0.0	3	9-10
# ::node	0.1.1.4.2.0.1	mile	10-11
# ::node	0.1.1.4.2.1	heavy	4-5
# ::root	0	coach-01
# ::edge	car	poss	couple	0.1.1.1.0	0.1.1.1	
# ::edge	coach-01	ARG0	person	0	0.0	
# ::edge	coach-01	ARG1	date-entity	0	0.1	
# ::edge	collide-01	ARG0	north	0.0.0	0.0.0.0	
# ::edge	collide-01	ARG1	person	0.0.0	0.0	
# ::edge	date-entity	month	12	0.1	0.1.0	
# ::edge	distance-quantity	quant	3	0.1.1.4.2.0	0.1.1.4.2.0.0	
# ::edge	distance-quantity	unit	mile	0.1.1.4.2.0	0.1.1.4.2.0.1	
# ::edge	happen-01	ARG0	just	0.1.1.4	0.1.1.4.0	
# ::edge	happen-01	ARG1	accident	0.1.1.4	0.1.1.4.1	
# ::edge	happen-01	ARG2	rain-01	0.1.1.4	0.1.1.4.2	
# ::edge	happen-01	time	kill-01	0.1.1.4	0.1.1	
# ::edge	kill-01	ARG0	spot	0.1.1	0.1.1.0	
# ::edge	kill-01	ARG1	couple	0.1.1	0.1.1.1	
# ::edge	kill-01	ARG2	yard	0.1.1	0.1.1.2	
# ::edge	kill-01	time	after	0.1.1	0.1.1.3	
# ::edge	kill-01	time	date-entity	0.1.1	0.1	
# ::edge	rain-01	ARG0	distance-quantity	0.1.1.4.2	0.1.1.4.2.0	
# ::edge	rain-01	mod	heavy	0.1.1.4.2	0.1.1.4.2.1	
(c / coach-01 
      :ARG0 (p / person 
            :ARG1-of (c2 / collide-01 
                  :ARG0 (n / north))) 
      :ARG1 (d / date-entity 
            :month 12 
            :time-of (k / kill-01 
                  :ARG0 (s / spot) 
                  :ARG1 (c4 / couple 
                        :poss-of (c3 / car)) 
                  :ARG2 (y / yard) 
                  :time (a / after) 
                  :time-of (h2 / happen-01 
                        :ARG0 (j / just) 
                        :ARG1 (a2 / accident) 
                        :ARG2 (r / rain-01 
                              :ARG0 (d2 / distance-quantity 
                                    :quant 3 
                                    :unit (m / mile)) 
                              :mod (h / heavy))))))

# ::snt the costperday of road accidents enters even more into the realms of fantasy when it includes estimates for loss of earnings and for pain grief and suffering
# ::tok the costperday of road accidents enters even more into the realms of fantasy when it includes estimates for loss of earnings and for pain grief and suffering
# ::alignments 26-27|0.0 25-26|0 23-24|0.0.0 21-22|0.0.1 20-21|0.0.1.1 16-17|0.0.1.0.0.0 15-16|0.0.1.0 14-15|0.0.1.0.0 12-13|0.0.1.0.1 10-11|0.0.1.0.2 5-6|0.0.1.0.0.1 4-5|0.0.1.0.0.1.0 3-4|0.0.1.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:04.309
# ::node	0	and	25-26
# ::node	0.0	suffer-01	26-27
# ::node	0.0.0	pain-01	23-24
# ::node	0.0.1	and	21-22
# ::node	0.0.1.0	include-01	15-16
# ::node	0.0.1.0.0	it	14-15
# ::node	0.0.1.0.0.0	estimate-01	16-17
# ::node	0.0.1.0.0.1	enter-01	5-6
# ::node	0.0.1.0.0.1.0	accident	4-5
# ::node	0.0.1.0.0.1.0.0	road	3-4
# ::node	0.0.1.0.1	fantasy	12-13
# ::node	0.0.1.0.2	realm	10-11
# ::node	0.0.1.1	earn-01	20-21
# ::root	0	and
# ::edge	accident	location	road	0.0.1.0.0.1.0	0.0.1.0.0.1.0.0	
# ::edge	and	op1	suffer-01	0	0.0	
# ::edge	and	op1	suffer-01	0.0.1	0.0	
# ::edge	earn-01	ARG1	and	0.0.1.1	0.0.1	
# ::edge	enter-01	ARG0	accident	0.0.1.0.0.1	0.0.1.0.0.1.0	
# ::edge	enter-01	ARG1	it	0.0.1.0.0.1	0.0.1.0.0	
# ::edge	estimate-01	ARG0	it	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	include-01	ARG0	it	0.0.1.0	0.0.1.0.0	
# ::edge	include-01	ARG1	and	0.0.1.0	0.0.1	
# ::edge	include-01	time	fantasy	0.0.1.0	0.0.1.0.1	
# ::edge	realm	time	include-01	0.0.1.0.2	0.0.1.0	
# ::edge	suffer-01	ARG1	pain-01	0.0	0.0.0	
(a / and 
      :op1 (s / suffer-01 
            :ARG1 (p / pain-01) 
            :op-of (a2 / and 
                  :ARG1-of (i / include-01 
                        :ARG0 (i2 / it 
                              :ARG0-of (e2 / estimate-01) 
                              :ARG1-of (e3 / enter-01 
                                    :ARG0 (a3 / accident 
                                          :location (r2 / road)))) 
                        :time (f / fantasy) 
                        :time-of (r / realm)) 
                  :ARG1-of (e / earn-01))))

# ::snt robert heslop 70 of tanfield lea stanley co durham died from head injuries after being in an accident with a police car on saturday night while crossing a road
# ::tok robert heslop 70 of tanfield lea stanley co durham died from head injuries after being in an accident with a police car on saturday night while crossing a road
# ::alignments 28-29|0.2.1 26-27|0.2 24-25|0.2.0 23-24|0.1.1.0.0 21-22|0.2.2 20-21|0.2.2.0 17-18|0.1.0 13-14|0.1.1 12-13|0.1 11-12|0 9-10|0.1.1.0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:04.532
# ::node	0	head-01	11-12
# ::node	0.0	70	2-3
# ::node	0.1	injure-01	12-13
# ::node	0.1.0	accident	17-18
# ::node	0.1.1	after	13-14
# ::node	0.1.1.0	die-01	9-10
# ::node	0.1.1.0.0	saturday	23-24
# ::node	0.2	cross-02	26-27
# ::node	0.2.0	night	24-25
# ::node	0.2.1	road	28-29
# ::node	0.2.2	car	21-22
# ::node	0.2.2.0	police	20-21
# ::root	0	head-01
# ::edge	car	mod	police	0.2.2	0.2.2.0	
# ::edge	cross-02	ARG0	night	0.2	0.2.0	
# ::edge	cross-02	ARG1	road	0.2	0.2.1	
# ::edge	cross-02	ARG2	car	0.2	0.2.2	
# ::edge	cross-02	time	head-01	0.2	0	
# ::edge	die-01	ARG2	saturday	0.1.1.0	0.1.1.0.0	
# ::edge	die-01	time	after	0.1.1.0	0.1.1	
# ::edge	head-01	ARG1	70	0	0.0	
# ::edge	injure-01	ARG1	head-01	0.1	0	
# ::edge	injure-01	ARG2	accident	0.1	0.1.0	
# ::edge	injure-01	time	after	0.1	0.1.1	
(h / head-01 
      :ARG1 70 
      :ARG1-of (i / injure-01 
            :ARG2 (a / accident) 
            :time (a2 / after 
                  :time-of (d / die-01 
                        :ARG2 (s / saturday)))) 
      :time-of (c / cross-02 
            :ARG0 (n / night) 
            :ARG1 (r / road) 
            :ARG2 (c2 / car 
                  :mod (p / police))))

# ::snt former headington headmaster mr ronald love has died in a road accident
# ::tok former headington headmaster mr ronald love has died in a road accident
# ::alignments 11-12|0.1 10-11|0.1.0 7-8|0 5-6|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:04.547
# ::node	0	die-01	7-8
# ::node	0.0	love-01	5-6
# ::node	0.0.0	former	0-1
# ::node	0.1	accident	11-12
# ::node	0.1.0	road	10-11
# ::root	0	die-01
# ::edge	accident	location	road	0.1	0.1.0	
# ::edge	die-01	ARG1	love-01	0	0.0	
# ::edge	die-01	ARG2	accident	0	0.1	
# ::edge	love-01	ARG1	former	0.0	0.0.0	
(d / die-01 
      :ARG1 (l / love-01 
            :ARG1 (f / former)) 
      :ARG2 (a / accident 
            :location (r / road)))

# ::snt the rise in this years accident rate does not mean that flying has become more dangerous aviation experts point out that a sixmonth sample is not sufficiently comprehensive
# ::tok the rise in this years accident rate does not mean that flying has become more dangerous aviation experts point out that a sixmonth sample is not sufficiently comprehensive
# ::alignments 27-28|0.1.1.1.0 26-27|0.1.1.1 18-19|0.1.1.0.0 17-18|0.1.1.0+0.1.1 16-17|0.1.1.0.1 15-16|0.1.0 13-14|0.1 11-12|0.0.0.0 9-10|0 6-7|0.0.0 5-6|0.0.0.2 4-5|0.0.0.1.0+0.0.0.1 3-4|0.0.0.3 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:04.750
# ::node	0	mean-01	9-10
# ::node	0.0	rise-01	1-2
# ::node	0.0.0	rate	6-7
# ::node	0.0.0.0	fly-01	11-12
# ::node	0.0.0.1	temporal-quantity	4-5
# ::node	0.0.0.1.0	year	4-5
# ::node	0.0.0.2	accident	5-6
# ::node	0.0.0.3	this	3-4
# ::node	0.1	become-01	13-14
# ::node	0.1.0	dangerous	15-16
# ::node	0.1.1	person	17-18
# ::node	0.1.1.0	expert-41	17-18
# ::node	0.1.1.0.0	point	18-19
# ::node	0.1.1.0.1	aviation	16-17
# ::node	0.1.1.1	suffice-01	26-27
# ::node	0.1.1.1.0	comprehensive	27-28
# ::root	0	mean-01
# ::edge	become-01	ARG1	dangerous	0.1	0.1.0	
# ::edge	become-01	ARG2	person	0.1	0.1.1	
# ::edge	expert-41	ARG0	point	0.1.1.0	0.1.1.0.0	
# ::edge	expert-41	ARG1	person	0.1.1.0	0.1.1	
# ::edge	expert-41	ARG2	aviation	0.1.1.0	0.1.1.0.1	
# ::edge	fly-01	ARG1	rate	0.0.0.0	0.0.0	
# ::edge	mean-01	ARG0	rise-01	0	0.0	
# ::edge	mean-01	ARG1	become-01	0	0.1	
# ::edge	rate	duration	temporal-quantity	0.0.0	0.0.0.1	
# ::edge	rate	mod	accident	0.0.0	0.0.0.2	
# ::edge	rate	mod	this	0.0.0	0.0.0.3	
# ::edge	rise-01	ARG1	rate	0.0	0.0.0	
# ::edge	suffice-01	ARG0	comprehensive	0.1.1.1	0.1.1.1.0	
# ::edge	suffice-01	ARG1	person	0.1.1.1	0.1.1	
# ::edge	temporal-quantity	unit	year	0.0.0.1	0.0.0.1.0	
(m / mean-01 
      :ARG0 (r2 / rise-01 
            :ARG1 (r / rate 
                  :ARG1-of (f / fly-01) 
                  :duration (t / temporal-quantity 
                        :unit (y / year)) 
                  :mod (a2 / accident) 
                  :mod (t2 / this))) 
      :ARG1 (b / become-01 
            :ARG1 (d / dangerous) 
            :ARG2 (p2 / person 
                  :ARG1-of (e / expert-41 
                        :ARG0 (p / point) 
                        :ARG2 (a / aviation)) 
                  :ARG1-of (s / suffice-01 
                        :ARG0 (c / comprehensive)))))

# ::snt kenneth clarke secretary of state for health confirmed in the house of commons that the police and military would be used if the threat to accident and emergency services is sustained for any length of time
# ::tok kenneth clarke secretary of state for health confirmed in the house of commons that the police and military would be used if the threat to accident and emergency services is sustained for any length of time
# ::alignments 35-36|0.1.0.0 33-34|0.1.0.1.0 32-33|0.1.0.1.0.0 30-31|0.1.0.1 28-29|0.1 27-28|0.1.1 26-27|0 25-26|0.0 23-24|0.1.0 20-21|0.1.0.1.1 17-18|0.1.0.1.1.0.2 16-17|0.1.0.1.1.0 15-16|0.1.0.1.1.0.1 12-13|0.1.0.1.1.0.0.0.0+0.1.0.1.1.0.0.0+0.1.0.1.1.0.0 10-11|0.1.0.1.1.1.1 7-8|0.1.0.1.1.1 6-7|0.1.0.1.1.1.0.0.0 4-5|0.1.0.1.1.1.0.0 2-3|0.1.0.1.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:05.358
# ::node	0	and	26-27
# ::node	0.0	accident	25-26
# ::node	0.1	service	28-29
# ::node	0.1.0	threaten-01	23-24
# ::node	0.1.0.0	time	35-36
# ::node	0.1.0.1	sustain-01	30-31
# ::node	0.1.0.1.0	length	33-34
# ::node	0.1.0.1.0.0	any	32-33
# ::node	0.1.0.1.1	use-01	20-21
# ::node	0.1.0.1.1.0	and	16-17
# ::node	0.1.0.1.1.0.0	government-organization	12-13
# ::node	0.1.0.1.1.0.0.0	name	12-13
# ::node	0.1.0.1.1.0.0.0.0	"Commons"	12-13
# ::node	0.1.0.1.1.0.1	police	15-16
# ::node	0.1.0.1.1.0.2	military	17-18
# ::node	0.1.0.1.1.1	confirm-01	7-8
# ::node	0.1.0.1.1.1.0	secretary	2-3
# ::node	0.1.0.1.1.1.0.0	state	4-5
# ::node	0.1.0.1.1.1.0.0.0	health	6-7
# ::node	0.1.0.1.1.1.1	house	10-11
# ::node	0.1.1	emergency	27-28
# ::root	0	and
# ::edge	and	op1	accident	0	0.0	
# ::edge	and	op1	government-organization	0.1.0.1.1.0	0.1.0.1.1.0.0	
# ::edge	and	op2	police	0.1.0.1.1.0	0.1.0.1.1.0.1	
# ::edge	and	op2	service	0	0.1	
# ::edge	and	op3	military	0.1.0.1.1.0	0.1.0.1.1.0.2	
# ::edge	confirm-01	ARG0	secretary	0.1.0.1.1.1	0.1.0.1.1.1.0	
# ::edge	confirm-01	ARG1	use-01	0.1.0.1.1.1	0.1.0.1.1	
# ::edge	confirm-01	ARG2	house	0.1.0.1.1.1	0.1.0.1.1.1.1	
# ::edge	government-organization	name	name	0.1.0.1.1.0.0	0.1.0.1.1.0.0.0	
# ::edge	length	mod	any	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	name	op1	"Commons"	0.1.0.1.1.0.0.0	0.1.0.1.1.0.0.0.0	
# ::edge	secretary	mod	state	0.1.0.1.1.1.0	0.1.0.1.1.1.0.0	
# ::edge	service	mod	emergency	0.1	0.1.1	
# ::edge	state	mod	health	0.1.0.1.1.1.0.0	0.1.0.1.1.1.0.0.0	
# ::edge	sustain-01	ARG0	length	0.1.0.1	0.1.0.1.0	
# ::edge	sustain-01	ARG1	threaten-01	0.1.0.1	0.1.0	
# ::edge	threaten-01	ARG0	time	0.1.0	0.1.0.0	
# ::edge	threaten-01	ARG1	service	0.1.0	0.1	
# ::edge	use-01	ARG0	sustain-01	0.1.0.1.1	0.1.0.1	
# ::edge	use-01	ARG1	and	0.1.0.1.1	0.1.0.1.1.0	
(a2 / and 
      :op1 (a3 / accident) 
      :op2 (s2 / service 
            :ARG1-of (t2 / threaten-01 
                  :ARG0 (t / time) 
                  :ARG1-of (s / sustain-01 
                        :ARG0 (l / length 
                              :mod (a / any)) 
                        :ARG0-of (u / use-01 
                              :ARG1 (a4 / and 
                                    :op1 (g / government-organization 
                                          :name (n / name 
                                                :op1 "Commons")) 
                                    :op2 (p / police) 
                                    :op3 (m / military)) 
                              :ARG1-of (c / confirm-01 
                                    :ARG0 (s4 / secretary 
                                          :mod (s3 / state 
                                                :mod (h2 / health))) 
                                    :ARG2 (h / house))))) 
            :mod (e / emergency)))

# ::snt it is no accident that the best view is from the workroom where she may spend as much as 12 hours a day
# ::tok it is no accident that the best view is from the workroom where she may spend as much as 12 hours a day
# ::alignments 22-23|0.4.0.0.0 20-21|0.2.1+0.2 19-20|0.2.0 17-18|0.1 15-16|0 14-15|0.3.0+0.3 13-14|0.0 3-4|0.4.0 2-3|0.4 0-1|0.4.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:05.504
# ::node	0	spend-01	15-16
# ::node	0.0	she	13-14
# ::node	0.1	much	17-18
# ::node	0.2	temporal-quantity	20-21
# ::node	0.2.0	12	19-20
# ::node	0.2.1	hour	20-21
# ::node	0.3	date-entity	14-15
# ::node	0.3.0	5	14-15
# ::node	0.4	-	2-3
# ::node	0.4.0	accident	3-4
# ::node	0.4.0.0	it	0-1
# ::node	0.4.0.0.0	day	22-23
# ::root	0	spend-01
# ::edge	-	op1	spend-01	0.4	0	
# ::edge	accident	domain	it	0.4.0	0.4.0.0	
# ::edge	accident	polarity	-	0.4.0	0.4	
# ::edge	date-entity	month	5	0.3	0.3.0	
# ::edge	it	poss	day	0.4.0.0	0.4.0.0.0	
# ::edge	spend-01	ARG0	she	0	0.0	
# ::edge	spend-01	ARG1	much	0	0.1	
# ::edge	spend-01	ARG3	temporal-quantity	0	0.2	
# ::edge	spend-01	mod	date-entity	0	0.3	
# ::edge	temporal-quantity	quant	12	0.2	0.2.0	
# ::edge	temporal-quantity	unit	hour	0.2	0.2.1	
(s / spend-01 
      :ARG0 (s2 / she) 
      :ARG1 (m / much) 
      :ARG3 (t / temporal-quantity 
            :quant 12 
            :unit (h / hour)) 
      :mod (d2 / date-entity 
            :month 5) 
      :op-of (- / - 
            :polarity-of (a / accident 
                  :domain (i / it 
                        :poss (d / day)))))

# ::snt he assumed the man fell without injury while directing the truck and did not realise there had been a fatal accident until he read the next days paper
# ::tok he assumed the man fell without injury while directing the truck and did not realise there had been a fatal accident until he read the next days paper
# ::alignments 27-28|0.0.1.0.0 26-27|0.0.1.0.0.0.0+0.0.1.0.0.0 25-26|0.0.1.0.0.1 23-24|0.0.1.0 22-23|0.0.1 21-22|0.0.1.0.1 20-21|0.0 19-20|0.0.0 14-15|0 11-12|0.1 10-11|0.1.1.0 8-9|0.1.1 6-7|0.1.0.2 4-5|0.1.0 3-4|0.1.0.0 1-2|0.1.0.1 0-1|0.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:05.938
# ::node	0	realize-01	14-15
# ::node	0.0	accident	20-21
# ::node	0.0.0	fatal	19-20
# ::node	0.0.1	he	22-23
# ::node	0.0.1.0	read-01	23-24
# ::node	0.0.1.0.0	paper	27-28
# ::node	0.0.1.0.0.0	temporal-quantity	26-27
# ::node	0.0.1.0.0.0.0	day	26-27
# ::node	0.0.1.0.0.1	next	25-26
# ::node	0.0.1.0.1	until	21-22
# ::node	0.1	and	11-12
# ::node	0.1.0	fall-01	4-5
# ::node	0.1.0.0	man	3-4
# ::node	0.1.0.1	assume-02	1-2
# ::node	0.1.0.1.0	he	0-1
# ::node	0.1.0.2	injure-01	6-7
# ::node	0.1.1	direct-01	8-9
# ::node	0.1.1.0	truck	10-11
# ::root	0	realize-01
# ::edge	accident	mod	fatal	0.0	0.0.0	
# ::edge	accident	prep-for	he	0.0	0.0.1	
# ::edge	and	op1	direct-01	0.1	0.1.1	
# ::edge	and	op2	realize-01	0.1	0	
# ::edge	assume-02	ARG0	he	0.1.0.1	0.1.0.1.0	
# ::edge	assume-02	ARG1	fall-01	0.1.0.1	0.1.0	
# ::edge	direct-01	ARG1	truck	0.1.1	0.1.1.0	
# ::edge	fall-01	ARG1	man	0.1.0	0.1.0.0	
# ::edge	fall-01	ARG3	injure-01	0.1.0	0.1.0.2	
# ::edge	fall-01	condition	and	0.1.0	0.1	
# ::edge	paper	duration	temporal-quantity	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	paper	mod	next	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	read-01	ARG0	he	0.0.1.0	0.0.1	
# ::edge	read-01	ARG1	paper	0.0.1.0	0.0.1.0.0	
# ::edge	realize-01	ARG1	accident	0	0.0	
# ::edge	temporal-quantity	unit	day	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	until	op1	read-01	0.0.1.0.1	0.0.1.0	
(r2 / realize-01 
      :ARG1 (a / accident 
            :mod (f / fatal) 
            :prep-for (h / he 
                  :ARG0-of (r / read-01 
                        :ARG1 (p / paper 
                              :duration (t / temporal-quantity 
                                    :unit (d / day)) 
                              :mod (n / next)) 
                        :op-of (u / until)))) 
      :op-of (a2 / and 
            :condition-of (f2 / fall-01 
                  :ARG1 (m / man) 
                  :ARG1-of (a3 / assume-02 
                        :ARG0 (h2 / he)) 
                  :ARG3 (i / injure-01)) 
            :op1 (d2 / direct-01 
                  :ARG1 (t2 / truck))))

# ::snt the authors said models of a nuclear accident at sizewell b in suffolk showed that up to 5000 square kilometres would be contaminated, an accident at sizewell spreading radioactivity across 2700 square kilometres would result in 1
# ::tok the authors said models of a nuclear accident at sizewell b in suffolk showed that up to 5000 square kilometres would be contaminated , an accident at sizewell spreading radioactivity across 2700 square kilometres would result in 1
# ::alignments 37-38|0.0.0.1.0.0.1.0.1 35-36|0.0.0.1.0.0 33-34|0.0.0.1.0.0.1.0.0.0.0.1+0.0.0.1.0.0.1.0.0.0.0 32-33|0.0.0.1.0.0.1.0.0.0.0.0 31-32|0.0.0.1.0.0.1.0.2.0+0.0.0.1.0.0.1.0.2 30-31|0.0.0.1.0.0.1.0.0.0 29-30|0.0.0.1.0.0.1.0.0 28-29|0.0.0.1.0.0.1.0 25-26|0.0.0.1.0.0.1 19-20|0.0.0.1.0.0.0.0.0+0.0.0.1.0.0.0.0 18-19|0.0.0.1.0.0.0 17-18|0.0.0.0 13-14|0.0.0.1.0 10-11|0.0.0.1 7-8|0.0.1 6-7|0.0.1.0 3-4|0.0 2-3|0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:06.448
# ::node	0	say-01	2-3
# ::node	0.0	model	3-4
# ::node	0.0.0	author-01	1-2
# ::node	0.0.0.0	5000	17-18
# ::node	0.0.0.1	b	10-11
# ::node	0.0.0.1.0	show-01	13-14
# ::node	0.0.0.1.0.0	result-01	35-36
# ::node	0.0.0.1.0.0.0	square	18-19
# ::node	0.0.0.1.0.0.0.0	distance-quantity	19-20
# ::node	0.0.0.1.0.0.0.0.0	kilometer	19-20
# ::node	0.0.0.1.0.0.1	accident	25-26
# ::node	0.0.0.1.0.0.1.0	spread-03	28-29
# ::node	0.0.0.1.0.0.1.0.0	radioactivity	29-30
# ::node	0.0.0.1.0.0.1.0.0.0	across	30-31
# ::node	0.0.0.1.0.0.1.0.0.0.0	distance-quantity	33-34
# ::node	0.0.0.1.0.0.1.0.0.0.0.0	square	32-33
# ::node	0.0.0.1.0.0.1.0.0.0.0.1	kilometer	33-34
# ::node	0.0.0.1.0.0.1.0.1	1	37-38
# ::node	0.0.0.1.0.0.1.0.2	date-entity	31-32
# ::node	0.0.0.1.0.0.1.0.2.0	2700	31-32
# ::node	0.0.1	accident	7-8
# ::node	0.0.1.0	nucleus	6-7
# ::root	0	say-01
# ::edge	1	op1	spread-03	0.0.0.1.0.0.1.0.1	0.0.0.1.0.0.1.0	
# ::edge	accident	mod	nucleus	0.0.1	0.0.1.0	
# ::edge	across	op1	distance-quantity	0.0.0.1.0.0.1.0.0.0	0.0.0.1.0.0.1.0.0.0.0	
# ::edge	author-01	ARG0	5000	0.0.0	0.0.0.0	
# ::edge	author-01	ARG1	b	0.0.0	0.0.0.1	
# ::edge	date-entity	year	2700	0.0.0.1.0.0.1.0.2	0.0.0.1.0.0.1.0.2.0	
# ::edge	distance-quantity	mod	square	0.0.0.1.0.0.0.0	0.0.0.1.0.0.0	
# ::edge	distance-quantity	mod	square	0.0.0.1.0.0.1.0.0.0.0	0.0.0.1.0.0.1.0.0.0.0.0	
# ::edge	distance-quantity	unit	kilometer	0.0.0.1.0.0.0.0	0.0.0.1.0.0.0.0.0	
# ::edge	distance-quantity	unit	kilometer	0.0.0.1.0.0.1.0.0.0.0	0.0.0.1.0.0.1.0.0.0.0.1	
# ::edge	model	mod	author-01	0.0	0.0.0	
# ::edge	model	topic	accident	0.0	0.0.1	
# ::edge	radioactivity	location	across	0.0.0.1.0.0.1.0.0	0.0.0.1.0.0.1.0.0.0	
# ::edge	result-01	ARG0	square	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	result-01	ARG1	accident	0.0.0.1.0.0	0.0.0.1.0.0.1	
# ::edge	say-01	ARG1	model	0	0.0	
# ::edge	show-01	ARG0	b	0.0.0.1.0	0.0.0.1	
# ::edge	show-01	ARG1	result-01	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	spread-03	ARG0	accident	0.0.0.1.0.0.1.0	0.0.0.1.0.0.1	
# ::edge	spread-03	ARG1	radioactivity	0.0.0.1.0.0.1.0	0.0.0.1.0.0.1.0.0	
# ::edge	spread-03	time	date-entity	0.0.0.1.0.0.1.0	0.0.0.1.0.0.1.0.2	
(s5 / say-01 
      :ARG1 (m / model 
            :mod (a4 / author-01 
                  :ARG0 5000 
                  :ARG1 (b / b 
                        :ARG0-of (s4 / show-01 
                              :ARG1 (r / result-01 
                                    :ARG0 (s3 / square 
                                          :mod-of (d3 / distance-quantity 
                                                :unit (k2 / kilometer))) 
                                    :ARG1 (a2 / accident 
                                          :ARG0-of (s2 / spread-03 
                                                :ARG1 (r2 / radioactivity 
                                                      :location (a / across 
                                                            :op1 (d / distance-quantity 
                                                                  :mod (s / square) 
                                                                  :unit (k / kilometer)))) 
                                                :op-of 1 
                                                :time (d2 / date-entity 
                                                      :year 2700))))))) 
            :topic (a3 / accident 
                  :mod (n / nucleus))))

# ::snt the argument is that sennas crime as he rushed past the scene of an accident was infinitely more dangerous than mansells failure to stop on the command of a black flag
# ::tok the argument is that sennas crime as he rushed past the scene of an accident was infinitely more dangerous than mansells failure to stop on the command of a black flag
# ::alignments 30-31|0 29-30|0.1 26-27|0.0 23-24|0.0.0.1 21-22|0.0.0.1.1 18-19|0.0.0.2 16-17|0.0.0.1.1.0 14-15|0.0.0.0.1.0.0 11-12|0.0.0.0.1.0 9-10|0.0.0.0.1 8-9|0.0.0.0 7-8|0.0.0.0.0 5-6|0.0.0 1-2|0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:06.683
# ::node	0	flag	30-31
# ::node	0.0	command-02	26-27
# ::node	0.0.0	crime	5-6
# ::node	0.0.0.0	rush-01	8-9
# ::node	0.0.0.0.0	he	7-8
# ::node	0.0.0.0.1	past	9-10
# ::node	0.0.0.0.1.0	scene	11-12
# ::node	0.0.0.0.1.0.0	accident	14-15
# ::node	0.0.0.1	stop-01	23-24
# ::node	0.0.0.1.0	argue-01	1-2
# ::node	0.0.0.1.1	fail-01	21-22
# ::node	0.0.0.1.1.0	infinitely	16-17
# ::node	0.0.0.2	dangerous	18-19
# ::node	0.1	black	29-30
# ::root	0	flag
# ::edge	argue-01	ARG1	stop-01	0.0.0.1.0	0.0.0.1	
# ::edge	command-02	ARG0	crime	0.0	0.0.0	
# ::edge	command-02	ARG1	flag	0.0	0	
# ::edge	dangerous	domain	crime	0.0.0.2	0.0.0	
# ::edge	fail-01	ARG1	stop-01	0.0.0.1.1	0.0.0.1	
# ::edge	flag	mod	black	0	0.1	
# ::edge	infinitely	compared-to	fail-01	0.0.0.1.1.0	0.0.0.1.1	
# ::edge	past	op1	scene	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	rush-01	ARG0	he	0.0.0.0	0.0.0.0.0	
# ::edge	rush-01	ARG1	crime	0.0.0.0	0.0.0	
# ::edge	rush-01	ARG2	past	0.0.0.0	0.0.0.0.1	
# ::edge	scene	mod	accident	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	stop-01	ARG1	crime	0.0.0.1	0.0.0	
(f / flag 
      :ARG1-of (c / command-02 
            :ARG0 (c2 / crime 
                  :ARG1-of (r / rush-01 
                        :ARG0 (h / he) 
                        :ARG2 (p / past 
                              :op1 (s2 / scene 
                                    :mod (a / accident)))) 
                  :ARG1-of (s / stop-01 
                        :ARG1-of (a2 / argue-01) 
                        :ARG1-of (f2 / fail-01 
                              :compared-to-of (i / infinitely))) 
                  :domain-of (d / dangerous))) 
      :mod (b / black))

# ::snt while most measures of accidents on british rail declined in the 1970s and flattened out for most of the 1980s the figures are now showing a marked increase according to analysis of the official data by researchers at the national union of railwaymen, the total number of accidents in 1983 was 1255 but last year it was up to 1374 dash, in 1982 there were even fewer accidents at 998 although the figures then did not include freight trains on nonpassenger lines
# ::tok while most measures of accidents on british rail declined in the 1970s and flattened out for most of the 1980s the figures are now showing a marked increase according to analysis of the official data by researchers at the national union of railwaymen , the total number of accidents in 1983 was 1255 but last year it was up to 1374 dash , in 1982 there were even fewer accidents at 998 although the figures then did not include freight trains on nonpassenger lines
# ::alignments 83-84|0.3.0.1 80-81|0.3.0.0 79-80|0.3.0.0.0 78-79|0.3.0 75-76|0.3.0.4 74-75|0.3 69-70|0.3.0.3 68-69|0.3.0.3.0 64-65|0.0.1.0+0.0.1 60-61|0.3.0.2.0+0.3.0.2 56-57|0.1.0 55-56|0.0 54-55|0.0.0 53-54|0 52-53|0.2.0+0.2 50-51|0.1.1.1.0+0.1.1.1 48-49|0.1.1.0 46-47|0.1.1 40-41|0.1.3.1.0.1.0.0.0.0 39-40|0.1.3.1.0.1.0.0.0.0.0 36-37|0.1.3.1.0.1.0.0.0+0.1.3.1.0.1.0.0 34-35|0.1.3.1.0.1.0.2 33-34|0.1.3.1.0.1.0.1+0.1.3.1.0.1.0 30-31|0.1.3.1.0.1.0.2.0 27-28|0.1 26-27|0.1.2 24-25|0.1.3 23-24|0.1.3.2 21-22|0.1.3.0 19-20|0.1.3.1.1.0.0 16-17|0.1.3.1.1.0 13-14|0.1.3.1.1 12-13|0.1.3.1 11-12|0.1.3.1.0.2 8-9|0.1.3.1.0 6-8|0.1.3.1.0.1.1.0+0.1.3.1.0.1.1.1+0.1.3.1.0.1.1+0.1.3.1.0.1 4-5|0.1.3.1.0.1.2 2-3|0.1.3.1.0.0 1-2|0.1.3.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:12.871
# ::node	0	contrast-01	53-54
# ::node	0.0	year	55-56
# ::node	0.0.0	last	54-55
# ::node	0.0.1	date-entity	64-65
# ::node	0.0.1.0	1982	64-65
# ::node	0.1	increase-01	27-28
# ::node	0.1.0	it	56-57
# ::node	0.1.1	number	46-47
# ::node	0.1.1.0	accident	48-49
# ::node	0.1.1.1	date-entity	50-51
# ::node	0.1.1.1.0	1983	50-51
# ::node	0.1.2	mark-01	26-27
# ::node	0.1.3	show-01	24-25
# ::node	0.1.3.0	figure	21-22
# ::node	0.1.3.1	and	12-13
# ::node	0.1.3.1.0	decline-02	8-9
# ::node	0.1.3.1.0.0	measure	2-3
# ::node	0.1.3.1.0.0.0	most	1-2
# ::node	0.1.3.1.0.1	organization	6-8
# ::node	0.1.3.1.0.1.0	have-org-role-91	33-34
# ::node	0.1.3.1.0.1.0.0	person	36-37
# ::node	0.1.3.1.0.1.0.0.0	research-01	36-37
# ::node	0.1.3.1.0.1.0.0.0.0	union	40-41
# ::node	0.1.3.1.0.1.0.0.0.0.0	nation	39-40
# ::node	0.1.3.1.0.1.0.1	official	33-34
# ::node	0.1.3.1.0.1.0.2	data	34-35
# ::node	0.1.3.1.0.1.0.2.0	analyze-01	30-31
# ::node	0.1.3.1.0.1.1	name	6-8
# ::node	0.1.3.1.0.1.1.0	"rail"	6-8
# ::node	0.1.3.1.0.1.1.1	"british"	6-8
# ::node	0.1.3.1.0.1.2	accident	4-5
# ::node	0.1.3.1.0.2	1970	11-12
# ::node	0.1.3.1.1	flatten-01	13-14
# ::node	0.1.3.1.1.0	most	16-17
# ::node	0.1.3.1.1.0.0	1980	19-20
# ::node	0.1.3.2	now	23-24
# ::node	0.2	date-entity	52-53
# ::node	0.2.0	1255	52-53
# ::node	0.3	figure	74-75
# ::node	0.3.0	include-01	78-79
# ::node	0.3.0.0	train	80-81
# ::node	0.3.0.0.0	freight	79-80
# ::node	0.3.0.1	line	83-84
# ::node	0.3.0.2	date-entity	60-61
# ::node	0.3.0.2.0	1374	60-61
# ::node	0.3.0.3	accident	69-70
# ::node	0.3.0.3.0	few	68-69
# ::node	0.3.0.4	then	75-76
# ::root	0	contrast-01
# ::edge	1980	quant	most	0.1.3.1.1.0.0	0.1.3.1.1.0	
# ::edge	accident	poss	organization	0.1.3.1.0.1.2	0.1.3.1.0.1	
# ::edge	accident	quant	few	0.3.0.3	0.3.0.3.0	
# ::edge	accident	quant	number	0.1.1.0	0.1.1	
# ::edge	analyze-01	ARG1	data	0.1.3.1.0.1.0.2.0	0.1.3.1.0.1.0.2	
# ::edge	and	op1	decline-02	0.1.3.1	0.1.3.1.0	
# ::edge	and	op2	flatten-01	0.1.3.1	0.1.3.1.1	
# ::edge	contrast-01	ARG1	year	0	0.0	
# ::edge	contrast-01	ARG2	increase-01	0	0.1	
# ::edge	contrast-01	instrument	date-entity	0	0.2	
# ::edge	data	mod	have-org-role-91	0.1.3.1.0.1.0.2	0.1.3.1.0.1.0	
# ::edge	date-entity	op1	include-01	0.3.0.2	0.3.0	
# ::edge	date-entity	year	1255	0.2	0.2.0	
# ::edge	date-entity	year	1374	0.3.0.2	0.3.0.2.0	
# ::edge	date-entity	year	1982	0.0.1	0.0.1.0	
# ::edge	date-entity	year	1983	0.1.1.1	0.1.1.1.0	
# ::edge	decline-02	ARG0	measure	0.1.3.1.0	0.1.3.1.0.0	
# ::edge	decline-02	ARG1	organization	0.1.3.1.0	0.1.3.1.0.1	
# ::edge	decline-02	ARG2	1970	0.1.3.1.0	0.1.3.1.0.2	
# ::edge	figure	op1	contrast-01	0.3	0	
# ::edge	flatten-01	ARG1	most	0.1.3.1.1	0.1.3.1.1.0	
# ::edge	have-org-role-91	ARG0	person	0.1.3.1.0.1.0	0.1.3.1.0.1.0.0	
# ::edge	have-org-role-91	ARG1	organization	0.1.3.1.0.1.0	0.1.3.1.0.1	
# ::edge	have-org-role-91	ARG2	official	0.1.3.1.0.1.0	0.1.3.1.0.1.0.1	
# ::edge	include-01	ARG0	figure	0.3.0	0.3	
# ::edge	include-01	ARG1	train	0.3.0	0.3.0.0	
# ::edge	include-01	ARG2	line	0.3.0	0.3.0.1	
# ::edge	include-01	prep-as	accident	0.3.0	0.3.0.3	
# ::edge	include-01	time	then	0.3.0	0.3.0.4	
# ::edge	increase-01	ARG0	it	0.1	0.1.0	
# ::edge	increase-01	ARG1	number	0.1	0.1.1	
# ::edge	mark-01	ARG1	increase-01	0.1.2	0.1	
# ::edge	measure	quant	most	0.1.3.1.0.0	0.1.3.1.0.0.0	
# ::edge	name	op1	"rail"	0.1.3.1.0.1.1	0.1.3.1.0.1.1.0	
# ::edge	name	op2	"british"	0.1.3.1.0.1.1	0.1.3.1.0.1.1.1	
# ::edge	number	time	date-entity	0.1.1	0.1.1.1	
# ::edge	organization	name	name	0.1.3.1.0.1	0.1.3.1.0.1.1	
# ::edge	research-01	ARG0	person	0.1.3.1.0.1.0.0.0	0.1.3.1.0.1.0.0	
# ::edge	research-01	ARG1	union	0.1.3.1.0.1.0.0.0	0.1.3.1.0.1.0.0.0.0	
# ::edge	show-01	ARG0	figure	0.1.3	0.1.3.0	
# ::edge	show-01	ARG1	increase-01	0.1.3	0.1	
# ::edge	show-01	condition	and	0.1.3	0.1.3.1	
# ::edge	show-01	time	now	0.1.3	0.1.3.2	
# ::edge	train	mod	freight	0.3.0.0	0.3.0.0.0	
# ::edge	union	mod	nation	0.1.3.1.0.1.0.0.0.0	0.1.3.1.0.1.0.0.0.0.0	
# ::edge	year	mod	last	0.0	0.0.0	
# ::edge	year	op1	date-entity	0.0	0.0.1	
(c / contrast-01 
      :ARG1 (y / year 
            :mod (l2 / last) 
            :op1 (d / date-entity 
                  :year 1982)) 
      :ARG2 (i3 / increase-01 
            :ARG0 (i2 / it) 
            :ARG1 (n / number 
                  :quant-of (a2 / accident) 
                  :time (d4 / date-entity 
                        :year 1983)) 
            :ARG1-of (m / mark-01) 
            :ARG1-of (s / show-01 
                  :ARG0 (f4 / figure) 
                  :condition (a4 / and 
                        :op1 (d6 / decline-02 
                              :ARG0 (m3 / measure 
                                    :quant (m4 / most)) 
                              :ARG1 (o2 / organization 
                                    :ARG1-of (h / have-org-role-91 
                                          :ARG0 (p / person 
                                                :ARG0-of (r / research-01 
                                                      :ARG1 (u / union 
                                                            :mod (n2 / nation)))) 
                                          :ARG2 (o / official) 
                                          :mod-of (d5 / data 
                                                :ARG1-of (a3 / analyze-01))) 
                                    :name (n4 / name 
                                          :op1 "rail" 
                                          :op2 "british") 
                                    :poss-of (a5 / accident)) 
                              :ARG2 1970) 
                        :op2 (f5 / flatten-01 
                              :ARG1 (m2 / most 
                                    :quant-of 1980))) 
                  :time (n3 / now))) 
      :instrument (d3 / date-entity 
            :year 1255) 
      :op-of (f2 / figure 
            :ARG0-of (i / include-01 
                  :ARG1 (t / train 
                        :mod (f / freight)) 
                  :ARG2 (l / line) 
                  :op-of (d2 / date-entity 
                        :year 1374) 
                  :prep-as (a / accident 
                        :quant (f3 / few)) 
                  :time (t2 / then))))

# ::snt police responding to a road accident found the rider of the one vehicle involved to have more than twice the drinkdrive limit
# ::tok police responding to a road accident found the rider of the one vehicle involved to have more than twice the drinkdrive limit
# ::alignments 21-22|0.0.1 13-14|0.1.0 12-13|0.1 6-7|0 5-6|0.0.0.0 4-5|0.0.0.0.0 1-2|0.0.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:12.945
# ::node	0	find-01	6-7
# ::node	0.0	police	0-1
# ::node	0.0.0	respond-01	1-2
# ::node	0.0.0.0	accident	5-6
# ::node	0.0.0.0.0	road	4-5
# ::node	0.0.1	limit-01	21-22
# ::node	0.1	vehicle	12-13
# ::node	0.1.0	involve-01	13-14
# ::root	0	find-01
# ::edge	accident	location	road	0.0.0.0	0.0.0.0.0	
# ::edge	find-01	ARG0	police	0	0.0	
# ::edge	find-01	ARG1	vehicle	0	0.1	
# ::edge	involve-01	ARG1	vehicle	0.1.0	0.1	
# ::edge	limit-01	ARG1	police	0.0.1	0.0	
# ::edge	respond-01	ARG0	police	0.0.0	0.0	
# ::edge	respond-01	ARG1	accident	0.0.0	0.0.0.0	
(f / find-01 
      :ARG0 (p / police 
            :ARG0-of (r2 / respond-01 
                  :ARG1 (a / accident 
                        :location (r / road))) 
            :ARG1-of (l / limit-01)) 
      :ARG1 (v / vehicle 
            :ARG1-of (i / involve-01)))

# ::snt is it safe to stop so close to that accident
# ::tok is it safe to stop so close to that accident
# ::alignments 9-10|0.2 5-6|0.0 4-5|0 2-3|0.1 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:12.960
# ::node	0	stop-01	4-5
# ::node	0.0	so	5-6
# ::node	0.1	safe-41	2-3
# ::node	0.1.0	it	1-2
# ::node	0.2	accident	9-10
# ::root	0	stop-01
# ::edge	safe-41	ARG0	it	0.1	0.1.0	
# ::edge	safe-41	ARG1	stop-01	0.1	0	
# ::edge	stop-01	ARG1	so	0	0.0	
# ::edge	stop-01	ARG2	accident	0	0.2	
(s2 / stop-01 
      :ARG1 (s / so) 
      :ARG1-of (s3 / safe-41 
            :ARG0 (i / it)) 
      :ARG2 (a / accident))

# ::snt instead of the family home with bolton granny flats should we not be designing twoperson multipurpose dwellings with optional child units  the accident prevention society rospa estimates there are around 6000 deaths and 2, 5 million nonfatal accidents in the homes every year dash
# ::tok instead of the family home with bolton granny flats should we not be designing twoperson multipurpose dwellings with optional child units the accident prevention society rospa estimates there are around 6000 deaths and 2 , 5 million nonfatal accidents in the homes every year dash
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:12.962
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt but there could be a small silly accident to someone close to you
# ::tok but there could be a small silly accident to someone close to you
# ::alignments 12-13|0.3 9-10|0.0 7-8|0.1 6-7|0.1.1 5-6|0.1.0 2-3|0.2 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:13.018
# ::node	0	contrast-01	0-1
# ::node	0.0	someone	9-10
# ::node	0.1	accident	7-8
# ::node	0.1.0	small	5-6
# ::node	0.1.1	silly	6-7
# ::node	0.2	possible	2-3
# ::node	0.3	you	12-13
# ::root	0	contrast-01
# ::edge	accident	mod	silly	0.1	0.1.1	
# ::edge	accident	mod	small	0.1	0.1.0	
# ::edge	contrast-01	ARG0	someone	0	0.0	
# ::edge	contrast-01	ARG1	accident	0	0.1	
# ::edge	contrast-01	ARG2	possible	0	0.2	
# ::edge	you	op1	contrast-01	0.3	0	
(c / contrast-01 
      :ARG0 (s / someone) 
      :ARG1 (a / accident 
            :mod (s3 / small) 
            :mod (s2 / silly)) 
      :ARG2 (p / possible) 
      :op-of (y / you))

# ::snt directorgeneral of the british safety council since 1968 and author of several books on safety he is a leading authority on accident prevention, during the last 23 years i have looked at thousands of socalled accidents in many countries, i cannot remember a single one where the risks which gave rise to the accident could not have been measured and prevented with effective safety training management commitment and dash
# ::tok directorgeneral of the british safety council since 1968 and author of several books on safety he is a leading authority on accident prevention , during the last 23 years i have looked at thousands of socalled accidents in many countries , i cannot remember a single one where the risks which gave rise to the accident could not have been measured and prevented with effective safety training management commitment and dash
# ::alignments 69-70|0.2.2.0 68-69|0.2.1.0.1 67-68|0.2.0.2 66-67|0.2.0 65-66|0.2.0.1 64-65|0.2.1.0.1.0 62-63|0.2.2 61-62|0.2 60-61|0.2.1.0 56-57|0.2.1 55-56|0.2.2.1.0.0 52-53|0.2.2.1.0 49-50|0.2.2.1 45-46|0.2.0.0 43-44|0 41-42|0.0 39-40|0.1.1.1 38-39|0.2.1.0.0 36-37|0.1.1.1.0 31-32|0.2.1.1 29-30|0.2.1.1.0 28-29|0.2.1.1.1.1+0.2.1.1.1 27-28|0.2.1.1.1.0 26-27|0.1.1.0.0.0.0.0.1.0.0 22-23|0.1 21-22|0.1.0 19-20|0.1.1 18-19|0.1.1.0 15-16|0.1.1.0.0 14-15|0.1.1.0.0.0 12-13|0.1.1.0.0.0.0.1 11-12|0.1.1.0.0.0.0.1.0 9-10|0.1.1.0.0.0.0+0.1.1.0.0.0.0.0 8-9|0.1.1.0.0.0.0.0.1 7-8|0.1.1.0.0.0.0.0.0.0.0+0.1.1.0.0.0.0.0.0.0 6-7|0.1.1.0.0.0.0.0.0 5-6|0.1.1.0.0.0.0.0.1.0.1 4-5|0.1.1.0.0.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:15.102
# ::node	0	remember-01	43-44
# ::node	0.0	i	41-42
# ::node	0.1	prevent-01	22-23
# ::node	0.1.0	accident	21-22
# ::node	0.1.1	authority	19-20
# ::node	0.1.1.0	lead-01	18-19
# ::node	0.1.1.0.0	he	15-16
# ::node	0.1.1.0.0.0	safe-41	14-15
# ::node	0.1.1.0.0.0.0	author-01	9-10
# ::node	0.1.1.0.0.0.0.0	person	9-10
# ::node	0.1.1.0.0.0.0.0.0	since	6-7
# ::node	0.1.1.0.0.0.0.0.0.0	date-entity	7-8
# ::node	0.1.1.0.0.0.0.0.0.0.0	1968	7-8
# ::node	0.1.1.0.0.0.0.0.1	and	8-9
# ::node	0.1.1.0.0.0.0.0.1.0	safe-41	4-5
# ::node	0.1.1.0.0.0.0.0.1.0.0	last	26-27
# ::node	0.1.1.0.0.0.0.0.1.0.1	council	5-6
# ::node	0.1.1.0.0.0.0.1	book	12-13
# ::node	0.1.1.0.0.0.0.1.0	several	11-12
# ::node	0.1.1.1	country	39-40
# ::node	0.1.1.1.0	accident	36-37
# ::node	0.2	and	61-62
# ::node	0.2.0	train-01	66-67
# ::node	0.2.0.0	single	45-46
# ::node	0.2.0.1	safe-41	65-66
# ::node	0.2.0.2	manage-01	67-68
# ::node	0.2.1	possible	56-57
# ::node	0.2.1.0	measure-01	60-61
# ::node	0.2.1.0.0	many	38-39
# ::node	0.2.1.0.1	commit-01	68-69
# ::node	0.2.1.0.1.0	effective	64-65
# ::node	0.2.1.1	look-01	31-32
# ::node	0.2.1.1.0	i	29-30
# ::node	0.2.1.1.1	temporal-quantity	28-29
# ::node	0.2.1.1.1.0	23	27-28
# ::node	0.2.1.1.1.1	year	28-29
# ::node	0.2.2	prevent-01	62-63
# ::node	0.2.2.0	and	69-70
# ::node	0.2.2.1	risk-01	49-50
# ::node	0.2.2.1.0	rise-01	52-53
# ::node	0.2.2.1.0.0	accident	55-56
# ::root	0	remember-01
# ::edge	accident	poss	country	0.1.1.1.0	0.1.1.1	
# ::edge	and	manner	train-01	0.2	0.2.0	
# ::edge	and	op1	possible	0.2	0.2.1	
# ::edge	and	op1	safe-41	0.1.1.0.0.0.0.0.1	0.1.1.0.0.0.0.0.1.0	
# ::edge	and	op2	person	0.1.1.0.0.0.0.0.1	0.1.1.0.0.0.0.0	
# ::edge	and	op2	prevent-01	0.2	0.2.2	
# ::edge	author-01	ARG0	person	0.1.1.0.0.0.0	0.1.1.0.0.0.0.0	
# ::edge	author-01	ARG1	book	0.1.1.0.0.0.0	0.1.1.0.0.0.0.1	
# ::edge	author-01	purpose	safe-41	0.1.1.0.0.0.0	0.1.1.0.0.0	
# ::edge	authority	mod	country	0.1.1	0.1.1.1	
# ::edge	authority	poss	prevent-01	0.1.1	0.1	
# ::edge	book	quant	several	0.1.1.0.0.0.0.1	0.1.1.0.0.0.0.1.0	
# ::edge	commit-01	mod	effective	0.2.1.0.1	0.2.1.0.1.0	
# ::edge	council	mod	safe-41	0.1.1.0.0.0.0.0.1.0.1	0.1.1.0.0.0.0.0.1.0	
# ::edge	date-entity	year	1968	0.1.1.0.0.0.0.0.0.0	0.1.1.0.0.0.0.0.0.0.0	
# ::edge	lead-01	ARG0	authority	0.1.1.0	0.1.1	
# ::edge	lead-01	ARG1	he	0.1.1.0	0.1.1.0.0	
# ::edge	look-01	ARG0	i	0.2.1.1	0.2.1.1.0	
# ::edge	look-01	ARG1	temporal-quantity	0.2.1.1	0.2.1.1.1	
# ::edge	manage-01	mod	train-01	0.2.0.2	0.2.0	
# ::edge	measure-01	ARG0	many	0.2.1.0	0.2.1.0.0	
# ::edge	measure-01	ARG1	commit-01	0.2.1.0	0.2.1.0.1	
# ::edge	possible	domain	look-01	0.2.1	0.2.1.1	
# ::edge	possible	domain	measure-01	0.2.1	0.2.1.0	
# ::edge	prevent-01	ARG0	and	0.2.2	0.2.2.0	
# ::edge	prevent-01	ARG1	accident	0.1	0.1.0	
# ::edge	prevent-01	ARG1	risk-01	0.2.2	0.2.2.1	
# ::edge	remember-01	ARG0	i	0	0.0	
# ::edge	remember-01	ARG1	prevent-01	0	0.1	
# ::edge	remember-01	condition	and	0	0.2	
# ::edge	rise-01	ARG0	risk-01	0.2.2.1.0	0.2.2.1	
# ::edge	rise-01	ARG1	accident	0.2.2.1.0	0.2.2.1.0.0	
# ::edge	safe-41	ARG1	he	0.1.1.0.0.0	0.1.1.0.0	
# ::edge	safe-41	ARG1	last	0.1.1.0.0.0.0.0.1.0	0.1.1.0.0.0.0.0.1.0.0	
# ::edge	safe-41	ARG1	train-01	0.2.0.1	0.2.0	
# ::edge	since	op1	date-entity	0.1.1.0.0.0.0.0.0	0.1.1.0.0.0.0.0.0.0	
# ::edge	since	op2	person	0.1.1.0.0.0.0.0.0	0.1.1.0.0.0.0.0	
# ::edge	temporal-quantity	quant	23	0.2.1.1.1	0.2.1.1.1.0	
# ::edge	temporal-quantity	unit	year	0.2.1.1.1	0.2.1.1.1.1	
# ::edge	train-01	ARG1	single	0.2.0	0.2.0.0	
(r3 / remember-01 
      :ARG0 (i / i) 
      :ARG1 (p3 / prevent-01 
            :ARG1 (a5 / accident) 
            :poss-of (a6 / authority 
                  :ARG0-of (l3 / lead-01 
                        :ARG1 (h / he 
                              :ARG1-of (s3 / safe-41 
                                    :purpose-of (a7 / author-01 
                                          :ARG0 (p4 / person 
                                                :op-of (s5 / since 
                                                      :op1 (d / date-entity 
                                                            :year 1968)) 
                                                :op-of (a8 / and 
                                                      :op1 (s6 / safe-41 
                                                            :ARG1 (l2 / last) 
                                                            :mod-of (c3 / council)))) 
                                          :ARG1 (b / book 
                                                :quant (s4 / several)))))) 
                  :mod (c2 / country 
                        :poss-of (a4 / accident)))) 
      :condition (a2 / and 
            :manner (t / train-01 
                  :ARG1 (s2 / single) 
                  :ARG1-of (s / safe-41) 
                  :mod-of (m / manage-01)) 
            :op1 (p2 / possible 
                  :domain (m2 / measure-01 
                        :ARG0 (m3 / many) 
                        :ARG1 (c / commit-01 
                              :mod (e / effective))) 
                  :domain (l / look-01 
                        :ARG0 (i2 / i) 
                        :ARG1 (t2 / temporal-quantity 
                              :quant 23 
                              :unit (y / year)))) 
            :op2 (p / prevent-01 
                  :ARG0 (a / and) 
                  :ARG1 (r2 / risk-01 
                        :ARG0-of (r / rise-01 
                              :ARG1 (a3 / accident))))))

# ::snt from somewhere out of sight there now sounded an incident or accident involving a stepladder a large dustbin and a pile of sacks of oatmeal
# ::tok from somewhere out of sight there now sounded an incident or accident involving a stepladder a large dustbin and a pile of sacks of oatmeal
# ::alignments 20-21|0.0.1 18-19|0.0 16-17|0.1.0.0 12-13|0.1.0 11-12|0.1.2 10-11|0.1 9-10|0.1.1 7-8|0 6-7|0.3 4-5|0.0.0 1-2|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:15.309
# ::node	0	sound-01	7-8
# ::node	0.0	and	18-19
# ::node	0.0.0	sight-01	4-5
# ::node	0.0.1	pile	20-21
# ::node	0.1	or	10-11
# ::node	0.1.0	involve-01	12-13
# ::node	0.1.0.0	large	16-17
# ::node	0.1.1	incident	9-10
# ::node	0.1.2	accident	11-12
# ::node	0.2	somewhere	1-2
# ::node	0.3	now	6-7
# ::root	0	sound-01
# ::edge	and	op1	pile	0.0	0.0.1	
# ::edge	involve-01	ARG0	or	0.1.0	0.1	
# ::edge	involve-01	ARG1	large	0.1.0	0.1.0.0	
# ::edge	or	op1	incident	0.1	0.1.1	
# ::edge	or	op2	accident	0.1	0.1.2	
# ::edge	sight-01	ARG0	and	0.0.0	0.0	
# ::edge	sound-01	ARG0	and	0	0.0	
# ::edge	sound-01	ARG1	or	0	0.1	
# ::edge	sound-01	location	somewhere	0	0.2	
# ::edge	sound-01	time	now	0	0.3	
(s / sound-01 
      :ARG0 (a / and 
            :ARG0-of (s2 / sight-01) 
            :op1 (p / pile)) 
      :ARG1 (o / or 
            :ARG0-of (i / involve-01 
                  :ARG1 (l / large)) 
            :op1 (i2 / incident) 
            :op2 (a2 / accident)) 
      :location (s3 / somewhere) 
      :time (n / now))

# ::snt in the unfortunate event that your accident should prove fatal  your estate will receive up to 40000 useful supplement  to any life assurances you may have
# ::tok in the unfortunate event that your accident should prove fatal your estate will receive up to 40000 useful supplement to any life assurances you may have
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:15.310
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt awards in motor accident litigation have remained relatively modest in comparison with the highflying medical malpractice or products liability awards probably because juries have been made well aware of the longterm effect of inflated verdicts on the level of their own insurance premiums
# ::tok awards in motor accident litigation have remained relatively modest in comparison with the highflying medical malpractice or products liability awards probably because juries have been made well aware of the longterm effect of inflated verdicts on the level of their own insurance premiums
# ::alignments 42-43|0.1.2.2.0.0 41-42|0.1.2.2 37-38|0.1.2.2.0 34-35|0.1.2.0.1.0 31-32|0.1.2.0.1 26-27|0.1.2.0.0 21-22|0 20-21|0.0.0.1 19-20|0.1.0+0.1 18-19|0.1.1 17-18|0.1.2.1 16-17|0.1.2 14-15|0.1.2.1.0 10-11|0.1.2.0 8-9|0.0.0.0 7-8|0.0.0.0.0 6-7|0.0.0 3-4|0.2.0 2-3|0.2 0-1|0.0.1+0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:16.057
# ::node	0	cause-01	21-22
# ::node	0.0	thing	0-1
# ::node	0.0.0	remain-01	6-7
# ::node	0.0.0.0	modest	8-9
# ::node	0.0.0.0.0	relative	7-8
# ::node	0.0.0.1	probable	20-21
# ::node	0.0.1	award-01	0-1
# ::node	0.1	thing	19-20
# ::node	0.1.0	award-01	19-20
# ::node	0.1.1	liability	18-19
# ::node	0.1.2	or	16-17
# ::node	0.1.2.0	compare-01	10-11
# ::node	0.1.2.0.0	well	26-27
# ::node	0.1.2.0.1	effect-01	31-32
# ::node	0.1.2.0.1.0	verdict	34-35
# ::node	0.1.2.1	product	17-18
# ::node	0.1.2.1.0	medicine	14-15
# ::node	0.1.2.2	insure-02	41-42
# ::node	0.1.2.2.0	level	37-38
# ::node	0.1.2.2.0.0	premium	42-43
# ::node	0.2	motorcycle	2-3
# ::node	0.2.0	accident	3-4
# ::root	0	cause-01
# ::edge	accident	mod	motorcycle	0.2.0	0.2	
# ::edge	award-01	ARG1	thing	0.0.1	0.0	
# ::edge	award-01	ARG1	thing	0.1.0	0.1	
# ::edge	cause-01	ARG0	thing	0	0.0	
# ::edge	cause-01	ARG1	thing	0	0.1	
# ::edge	compare-01	ARG0	well	0.1.2.0	0.1.2.0.0	
# ::edge	compare-01	ARG1	or	0.1.2.0	0.1.2	
# ::edge	effect-01	ARG0	verdict	0.1.2.0.1	0.1.2.0.1.0	
# ::edge	effect-01	ARG1	compare-01	0.1.2.0.1	0.1.2.0	
# ::edge	insure-02	ARG0	level	0.1.2.2	0.1.2.2.0	
# ::edge	level	poss	premium	0.1.2.2.0	0.1.2.2.0.0	
# ::edge	modest	degree	relative	0.0.0.0	0.0.0.0.0	
# ::edge	motorcycle	op1	cause-01	0.2	0	
# ::edge	or	op1	product	0.1.2	0.1.2.1	
# ::edge	or	op2	thing	0.1.2	0.1	
# ::edge	or	op3	insure-02	0.1.2	0.1.2.2	
# ::edge	product	mod	medicine	0.1.2.1	0.1.2.1.0	
# ::edge	remain-01	ARG1	thing	0.0.0	0.0	
# ::edge	remain-01	ARG2	modest	0.0.0	0.0.0.0	
# ::edge	remain-01	ARG3	probable	0.0.0	0.0.0.1	
# ::edge	thing	mod	liability	0.1	0.1.1	
(c / cause-01 
      :ARG0 (t2 / thing 
            :ARG1-of (r2 / remain-01 
                  :ARG2 (m2 / modest 
                        :degree (r / relative)) 
                  :ARG3 (p2 / probable)) 
            :ARG1-of (a3 / award-01)) 
      :ARG1 (t / thing 
            :ARG1-of (a / award-01) 
            :mod (l2 / liability) 
            :op-of (o / or 
                  :ARG1-of (c2 / compare-01 
                        :ARG0 (w / well) 
                        :ARG1-of (e / effect-01 
                              :ARG0 (v / verdict))) 
                  :op1 (p3 / product 
                        :mod (m / medicine)) 
                  :op2 (i / insure-02 
                        :ARG0 (l / level 
                              :poss (p / premium))))) 
      :op-of (m3 / motorcycle 
            :mod-of (a2 / accident)))

# ::snt it is possibly no accident that britains last two major victories have been the versatile widnes forwards only internationals
# ::tok it is possibly no accident that britains last two major victories have been the versatile widnes forwards only internationals
# ::alignments 17-18|0.2 16-17|0 9-10|0.4.1 8-9|0.0 7-8|0.1 4-5|0.4.0 3-4|0.4.0.0 2-3|0.3 0-1|0.4 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:16.120
# ::node	0	forward-01	16-17
# ::node	0.0	2	8-9
# ::node	0.1	last	7-8
# ::node	0.2	only	17-18
# ::node	0.3	possible	2-3
# ::node	0.4	it	0-1
# ::node	0.4.0	accident	4-5
# ::node	0.4.0.0	-	3-4
# ::node	0.4.1	major	9-10
# ::root	0	forward-01
# ::edge	accident	domain	it	0.4.0	0.4	
# ::edge	accident	polarity	-	0.4.0	0.4.0.0	
# ::edge	forward-01	ARG1	2	0	0.0	
# ::edge	forward-01	ARG2	last	0	0.1	
# ::edge	it	op1	forward-01	0.4	0	
# ::edge	it	poss	major	0.4	0.4.1	
# ::edge	only	op1	forward-01	0.2	0	
# ::edge	possible	op1	forward-01	0.3	0	
(f / forward-01 
      :ARG1 2 
      :ARG2 (l / last) 
      :op-of (o / only) 
      :op-of (p / possible) 
      :op-of (i / it 
            :domain-of (a / accident 
                  :polarity (- / -)) 
            :poss (m / major)))

# ::snt lengthening operation waiting lists closure of hospital wards and health scourges such as cancer have boosted a 1 billion market that originally sprang up almost by accident
# ::tok lengthening operation waiting lists closure of hospital wards and health scourges such as cancer have boosted a 1 billion market that originally sprang up almost by accident
# ::alignments 26-27|0.0.0.0.2 24-25|0.0.0 22-23|0.0.0.0 21-22|0.0.0.0.3 19-20|0.0.0.0.1 17-18|0.0.0.0.0 13-14|0.0.1.0 11-12|0.0.1.0.0 10-11|0.1 9-10|0.1.0 8-9|0 6-7|0.1.1 3-4|0.0 2-3|0.0.1 1-2|0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:16.317
# ::node	0	and	8-9
# ::node	0.0	list-01	3-4
# ::node	0.0.0	almost	24-25
# ::node	0.0.0.0	spring-01	22-23
# ::node	0.0.0.0.0	1	17-18
# ::node	0.0.0.0.1	market	19-20
# ::node	0.0.0.0.2	accident	26-27
# ::node	0.0.0.0.3	original	21-22
# ::node	0.0.1	wait-01	2-3
# ::node	0.0.1.0	cancer	13-14
# ::node	0.0.1.0.0	such	11-12
# ::node	0.0.1.1	operation	1-2
# ::node	0.1	scourge	10-11
# ::node	0.1.0	health	9-10
# ::node	0.1.1	hospital	6-7
# ::root	0	and
# ::edge	and	op1	scourge	0	0.1	
# ::edge	list-01	ARG0	almost	0.0	0.0.0	
# ::edge	list-01	ARG1	and	0.0	0	
# ::edge	list-01	ARG2	wait-01	0.0	0.0.1	
# ::edge	scourge	mod	health	0.1	0.1.0	
# ::edge	scourge	mod	hospital	0.1	0.1.1	
# ::edge	spring-01	ARG0	1	0.0.0.0	0.0.0.0.0	
# ::edge	spring-01	ARG1	market	0.0.0.0	0.0.0.0.1	
# ::edge	spring-01	ARG2	accident	0.0.0.0	0.0.0.0.2	
# ::edge	spring-01	mod	almost	0.0.0.0	0.0.0	
# ::edge	spring-01	mod	original	0.0.0.0	0.0.0.0.3	
# ::edge	such	mod	cancer	0.0.1.0.0	0.0.1.0	
# ::edge	wait-01	ARG0	cancer	0.0.1	0.0.1.0	
# ::edge	wait-01	ARG1	operation	0.0.1	0.0.1.1	
(a3 / and 
      :ARG1-of (l / list-01 
            :ARG0 (a2 / almost 
                  :mod-of (s / spring-01 
                        :ARG0 1 
                        :ARG1 (m / market) 
                        :ARG2 (a / accident) 
                        :mod (o / original))) 
            :ARG2 (w / wait-01 
                  :ARG0 (c / cancer 
                        :mod-of (s2 / such)) 
                  :ARG1 (o2 / operation))) 
      :op1 (s3 / scourge 
            :mod (h / health) 
            :mod (h2 / hospital)))

# ::snt properly interpreted and monitored the quarter mill map can prevent anything from a stray into controlled airspace to a fatal accident
# ::tok properly interpreted and monitored the quarter mill map can prevent anything from a stray into controlled airspace to a fatal accident
# ::alignments 20-21|0.0.0.0.1.0.1.0 19-20|0.0.0.0.1.0.1 16-17|0.0.0.0.1.0.0 15-16|0.0.0.0.1.0 13-14|0.0.0.0.1 10-11|0.0.0.0.0 9-10|0.0.0.0 8-9|0.0.0.0.2 7-8|0.0.0 3-4|0.0 2-3|0 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:16.374
# ::node	0	and	2-3
# ::node	0.0	monitor-01	3-4
# ::node	0.0.0	map	7-8
# ::node	0.0.0.0	prevent-01	9-10
# ::node	0.0.0.0.0	anything	10-11
# ::node	0.0.0.0.1	stray-01	13-14
# ::node	0.0.0.0.1.0	control-01	15-16
# ::node	0.0.0.0.1.0.0	airspace	16-17
# ::node	0.0.0.0.1.0.1	fatal	19-20
# ::node	0.0.0.0.1.0.1.0	accident	20-21
# ::node	0.0.0.0.2	possible	8-9
# ::node	0.0.1	proper	0-1
# ::root	0	and
# ::edge	accident	mod	fatal	0.0.0.0.1.0.1.0	0.0.0.0.1.0.1	
# ::edge	and	op1	monitor-01	0	0.0	
# ::edge	control-01	ARG1	airspace	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	control-01	ARG2	fatal	0.0.0.0.1.0	0.0.0.0.1.0.1	
# ::edge	monitor-01	ARG1	map	0.0	0.0.0	
# ::edge	monitor-01	degree	proper	0.0	0.0.1	
# ::edge	prevent-01	ARG0	map	0.0.0.0	0.0.0	
# ::edge	prevent-01	ARG1	anything	0.0.0.0	0.0.0.0.0	
# ::edge	prevent-01	ARG2	stray-01	0.0.0.0	0.0.0.0.1	
# ::edge	prevent-01	mod	possible	0.0.0.0	0.0.0.0.2	
# ::edge	stray-01	ARG2	control-01	0.0.0.0.1	0.0.0.0.1.0	
(a4 / and 
      :op1 (m2 / monitor-01 
            :ARG1 (m / map 
                  :ARG0-of (p / prevent-01 
                        :ARG1 (a3 / anything) 
                        :ARG2 (s / stray-01 
                              :ARG2 (c / control-01 
                                    :ARG1 (a2 / airspace) 
                                    :ARG2 (f / fatal 
                                          :mod-of (a / accident)))) 
                        :mod (p2 / possible))) 
            :degree (p3 / proper)))

# ::snt the visit organised with the cooperation of the soviet authorities will allow the inquiry to learn how the soviet union organised the emergency evacuation of thousands of people three years ago and what contamination and health problems remain 40 months after the worlds worst civil nuclear power station accident, the inspector is keen to see the aftermath of a serious nuclear accident and to judge claims made by the british authorities at the hearing that existing emergency plans can be extended to deal with a catastrophe on the scale of chernobyl
# ::tok the visit organised with the cooperation of the soviet authorities will allow the inquiry to learn how the soviet union organised the emergency evacuation of thousands of people three years ago and what contamination and health problems remain 40 months after the worlds worst civil nuclear power station accident , the inspector is keen to see the aftermath of a serious nuclear accident and to judge claims made by the british authorities at the hearing that existing emergency plans can be extended to deal with a catastrophe on the scale of chernobyl
# ::alignments 89-90|0.0.1.0 86-87|0.0.2.0 83-84|0.0.2 81-82|0.0 79-80|0 78-79|0.0.1 77-78|0.0.1.2 76-77|0.0.1.1 74-75|0.0.1.1.1 71-72|0.0.1.1.0.1.0.1.0.0 66-67|0.0.1.1.0.1.0.1.0 65-66|0.0.1.1.0.1.0.1 63-64|0.0.1.1.0.1.0 62-63|0.0.0.0 61-62|0.0.0.1 60-61|0.0.0 57-58|0.0.1.1.0.1.0.0.1 55-56|0.0.1.1.0.1.0.0 53-54|0.0.1.1.0.1 51-52|0.0.1.1.0 48-49|0.0.1.1.0.1.1.0 47-48|0.0.1.1.0.1.1.0.0 46-47|0.0.1.1.0.1.1.0.1 45-46|0.0.1.1.0.1.1.0.1.0 44-45|0.0.1.1.0.1.1.0.0.0 43-44|0.0.1.1.0.1.0.1.0.1 42-43|0.0.1.1.0.1.0.0.0 40-41|0.0.1.1.0.1.1 39-40|0.0.1.1.0.1.1.1.1+0.0.1.1.0.1.1.1 38-39|0.0.1.1.0.1.1.1.0 37-38|0.0.1.1.0.1.1.2 36-37|0.0.1.1.0.1.1.2.0.2 35-36|0.0.1.1.0.1.1.2.0.1 34-35|0.0.1.1.0.1.1.2.0 33-34|0.0.1.1.0.1.1.2.0.0 31-32|0.0.1.1.0.1.1.2.1 29-30|0.0.1.1.0.0.0.0+0.0.1.1.0.0.0 28-29|0.0.1.1.0.0 22-23|0.0.1.1.0.1.1.2.1.1.1 20-21|0.0.1.1.0.1.1.2.1.1 19-20|0.0.1.1.0.1.1.2.1.1.0 15-16|0.0.1.1.0.1.1.2.1.0 13-14|0.0.1.1.0.1.1.2.1.0.1 11-12|0.0.1.1.0.1.1.2.1.0.2 9-10|0.0.1.1.0.1.1.2.1.0.0 5-6|0.0.1.1.0.1.1.2.1.0.0.0 2-3|0.0.1.1.0.1.1.2.1.0.1.0.0 1-2|0.0.1.1.0.1.1.2.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:20.474
# ::node	0	possible	79-80
# ::node	0.0	extend-01	81-82
# ::node	0.0.0	serious	60-61
# ::node	0.0.0.0	accident	62-63
# ::node	0.0.0.1	nucleus	61-62
# ::node	0.0.1	plan-01	78-79
# ::node	0.0.1.0	scale	89-90
# ::node	0.0.1.1	exist-01	76-77
# ::node	0.0.1.1.0	inspect-01	51-52
# ::node	0.0.1.1.0.0	3	28-29
# ::node	0.0.1.1.0.0.0	temporal-quantity	29-30
# ::node	0.0.1.1.0.0.0.0	year	29-30
# ::node	0.0.1.1.0.1	keen-41	53-54
# ::node	0.0.1.1.0.1.0	and	63-64
# ::node	0.0.1.1.0.1.0.0	see-01	55-56
# ::node	0.0.1.1.0.1.0.0.0	world	42-43
# ::node	0.0.1.1.0.1.0.0.1	aftermath	57-58
# ::node	0.0.1.1.0.1.0.1	judge-01	65-66
# ::node	0.0.1.1.0.1.0.1.0	claim-01	66-67
# ::node	0.0.1.1.0.1.0.1.0.0	authority	71-72
# ::node	0.0.1.1.0.1.0.1.0.1	bad	43-44
# ::node	0.0.1.1.0.1.1	after	40-41
# ::node	0.0.1.1.0.1.1.0	accident	48-49
# ::node	0.0.1.1.0.1.1.0.0	station	47-48
# ::node	0.0.1.1.0.1.1.0.0.0	civil	44-45
# ::node	0.0.1.1.0.1.1.0.1	power	46-47
# ::node	0.0.1.1.0.1.1.0.1.0	nucleus	45-46
# ::node	0.0.1.1.0.1.1.1	temporal-quantity	39-40
# ::node	0.0.1.1.0.1.1.1.0	40	38-39
# ::node	0.0.1.1.0.1.1.1.1	month	39-40
# ::node	0.0.1.1.0.1.1.2	remain-01	37-38
# ::node	0.0.1.1.0.1.1.2.0	and	34-35
# ::node	0.0.1.1.0.1.1.2.0.0	contaminate-01	33-34
# ::node	0.0.1.1.0.1.1.2.0.1	health	35-36
# ::node	0.0.1.1.0.1.1.2.0.2	problem	36-37
# ::node	0.0.1.1.0.1.1.2.1	and	31-32
# ::node	0.0.1.1.0.1.1.2.1.0	learn-01	15-16
# ::node	0.0.1.1.0.1.1.2.1.0.0	authority	9-10
# ::node	0.0.1.1.0.1.1.2.1.0.0.0	cooperate-01	5-6
# ::node	0.0.1.1.0.1.1.2.1.0.1	inquire-01	13-14
# ::node	0.0.1.1.0.1.1.2.1.0.1.0	visit-01	1-2
# ::node	0.0.1.1.0.1.1.2.1.0.1.0.0	organize-01	2-3
# ::node	0.0.1.1.0.1.1.2.1.0.2	allow-01	11-12
# ::node	0.0.1.1.0.1.1.2.1.1	organize-01	20-21
# ::node	0.0.1.1.0.1.1.2.1.1.0	union	19-20
# ::node	0.0.1.1.0.1.1.2.1.1.1	emergency	22-23
# ::node	0.0.1.1.1	hear-01	74-75
# ::node	0.0.1.2	emergency	77-78
# ::node	0.0.2	deal-01	83-84
# ::node	0.0.2.0	catastrophe	86-87
# ::root	0	possible
# ::edge	accident	location	power	0.0.1.1.0.1.1.0	0.0.1.1.0.1.1.0.1	
# ::edge	accident	location	station	0.0.1.1.0.1.1.0	0.0.1.1.0.1.1.0.0	
# ::edge	accident	mod	serious	0.0.0.0	0.0.0	
# ::edge	after	op1	accident	0.0.1.1.0.1.1	0.0.1.1.0.1.1.0	
# ::edge	after	quant	temporal-quantity	0.0.1.1.0.1.1	0.0.1.1.0.1.1.1	
# ::edge	allow-01	ARG1	learn-01	0.0.1.1.0.1.1.2.1.0.2	0.0.1.1.0.1.1.2.1.0	
# ::edge	and	op1	contaminate-01	0.0.1.1.0.1.1.2.0	0.0.1.1.0.1.1.2.0.0	
# ::edge	and	op1	organize-01	0.0.1.1.0.1.1.2.1	0.0.1.1.0.1.1.2.1.1	
# ::edge	and	op1	see-01	0.0.1.1.0.1.0	0.0.1.1.0.1.0.0	
# ::edge	and	op2	health	0.0.1.1.0.1.1.2.0	0.0.1.1.0.1.1.2.0.1	
# ::edge	and	op2	judge-01	0.0.1.1.0.1.0	0.0.1.1.0.1.0.1	
# ::edge	and	op2	remain-01	0.0.1.1.0.1.1.2.1	0.0.1.1.0.1.1.2	
# ::edge	claim-01	ARG0	authority	0.0.1.1.0.1.0.1.0	0.0.1.1.0.1.0.1.0.0	
# ::edge	claim-01	ARG1	bad	0.0.1.1.0.1.0.1.0	0.0.1.1.0.1.0.1.0.1	
# ::edge	cooperate-01	ARG0	authority	0.0.1.1.0.1.1.2.1.0.0.0	0.0.1.1.0.1.1.2.1.0.0	
# ::edge	deal-01	ARG1	catastrophe	0.0.2	0.0.2.0	
# ::edge	exist-01	ARG0	inspect-01	0.0.1.1	0.0.1.1.0	
# ::edge	exist-01	ARG1	plan-01	0.0.1.1	0.0.1	
# ::edge	extend-01	ARG0	serious	0.0	0.0.0	
# ::edge	extend-01	ARG1	plan-01	0.0	0.0.1	
# ::edge	extend-01	ARG2	deal-01	0.0	0.0.2	
# ::edge	hear-01	ARG1	exist-01	0.0.1.1.1	0.0.1.1	
# ::edge	inquire-01	ARG0	visit-01	0.0.1.1.0.1.1.2.1.0.1	0.0.1.1.0.1.1.2.1.0.1.0	
# ::edge	inquire-01	ARG1	learn-01	0.0.1.1.0.1.1.2.1.0.1	0.0.1.1.0.1.1.2.1.0	
# ::edge	inspect-01	ARG1	3	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	judge-01	ARG1	claim-01	0.0.1.1.0.1.0.1	0.0.1.1.0.1.0.1.0	
# ::edge	keen-41	ARG1	inspect-01	0.0.1.1.0.1	0.0.1.1.0	
# ::edge	keen-41	ARG2	and	0.0.1.1.0.1	0.0.1.1.0.1.0	
# ::edge	keen-41	time	after	0.0.1.1.0.1	0.0.1.1.0.1.1	
# ::edge	learn-01	ARG0	authority	0.0.1.1.0.1.1.2.1.0	0.0.1.1.0.1.1.2.1.0.0	
# ::edge	learn-01	ARG1	and	0.0.1.1.0.1.1.2.1.0	0.0.1.1.0.1.1.2.1	
# ::edge	nucleus	mod	serious	0.0.0.1	0.0.0	
# ::edge	organize-01	ARG0	union	0.0.1.1.0.1.1.2.1.1	0.0.1.1.0.1.1.2.1.1.0	
# ::edge	organize-01	ARG1	emergency	0.0.1.1.0.1.1.2.1.1	0.0.1.1.0.1.1.2.1.1.1	
# ::edge	organize-01	ARG1	visit-01	0.0.1.1.0.1.1.2.1.0.1.0.0	0.0.1.1.0.1.1.2.1.0.1.0	
# ::edge	plan-01	ARG1	scale	0.0.1	0.0.1.0	
# ::edge	plan-01	mod	emergency	0.0.1	0.0.1.2	
# ::edge	possible	domain	extend-01	0	0.0	
# ::edge	power	mod	nucleus	0.0.1.1.0.1.1.0.1	0.0.1.1.0.1.1.0.1.0	
# ::edge	problem	topic	and	0.0.1.1.0.1.1.2.0.2	0.0.1.1.0.1.1.2.0	
# ::edge	remain-01	ARG1	and	0.0.1.1.0.1.1.2	0.0.1.1.0.1.1.2.0	
# ::edge	remain-01	time	after	0.0.1.1.0.1.1.2	0.0.1.1.0.1.1	
# ::edge	see-01	ARG0	world	0.0.1.1.0.1.0.0	0.0.1.1.0.1.0.0.0	
# ::edge	see-01	ARG1	aftermath	0.0.1.1.0.1.0.0	0.0.1.1.0.1.0.0.1	
# ::edge	station	mod	civil	0.0.1.1.0.1.1.0.0	0.0.1.1.0.1.1.0.0.0	
# ::edge	temporal-quantity	quant	3	0.0.1.1.0.0.0	0.0.1.1.0.0	
# ::edge	temporal-quantity	quant	40	0.0.1.1.0.1.1.1	0.0.1.1.0.1.1.1.0	
# ::edge	temporal-quantity	unit	month	0.0.1.1.0.1.1.1	0.0.1.1.0.1.1.1.1	
# ::edge	temporal-quantity	unit	year	0.0.1.1.0.0.0	0.0.1.1.0.0.0.0	
(p / possible 
      :domain (e / extend-01 
            :ARG0 (s2 / serious 
                  :mod-of (a3 / accident) 
                  :mod-of (n / nucleus)) 
            :ARG1 (p2 / plan-01 
                  :ARG1 (s / scale) 
                  :ARG1-of (e3 / exist-01 
                        :ARG0 (i / inspect-01 
                              :ARG1 (3 / 3 
                                    :quant-of (t2 / temporal-quantity 
                                          :unit (y / year))) 
                              :ARG1-of (k / keen-41 
                                    :ARG2 (a2 / and 
                                          :op1 (s3 / see-01 
                                                :ARG0 (w / world) 
                                                :ARG1 (a4 / aftermath)) 
                                          :op2 (j / judge-01 
                                                :ARG1 (c2 / claim-01 
                                                      :ARG0 (a / authority) 
                                                      :ARG1 (b / bad)))) 
                                    :time (a6 / after 
                                          :op1 (a5 / accident 
                                                :location (s4 / station 
                                                      :mod (c3 / civil)) 
                                                :location (p3 / power 
                                                      :mod (n2 / nucleus))) 
                                          :quant (t / temporal-quantity 
                                                :quant 40 
                                                :unit (m / month)) 
                                          :time-of (r / remain-01 
                                                :ARG1 (a7 / and 
                                                      :op1 (c4 / contaminate-01) 
                                                      :op2 (h2 / health) 
                                                      :topic-of (p4 / problem)) 
                                                :op-of (a8 / and 
                                                      :ARG1-of (l / learn-01 
                                                            :ARG0 (a10 / authority 
                                                                  :ARG0-of (c5 / cooperate-01)) 
                                                            :ARG1-of (i2 / inquire-01 
                                                                  :ARG0 (v / visit-01 
                                                                        :ARG1-of (o2 / organize-01))) 
                                                            :ARG1-of (a9 / allow-01)) 
                                                      :op1 (o / organize-01 
                                                            :ARG0 (u / union) 
                                                            :ARG1 (e4 / emergency))))))) 
                        :ARG1-of (h / hear-01)) 
                  :mod (e2 / emergency)) 
            :ARG2 (d / deal-01 
                  :ARG1 (c / catastrophe))))

# ::snt about half an hour after the first accident six more vehicles including three lorries were involved in a crash on the southbound carriageway of the m1 near junction 19 at rugby, no one was hurt in this accident
# ::tok about half an hour after the first accident six more vehicles including three lorries were involved in a crash on the southbound carriageway of the m1 near junction 19 at rugby , no one was hurt in this accident
# ::alignments 38-39|0.0 37-38|0.0.1 35-36|0 32-33|0.2 28-29|0.0.0.2 26-27|0.0.0.1.0 18-19|0.0.0.1 15-16|0.0.0 12-13|0.1 10-11|0.0.0.0 8-9|0.0.0.0.0 7-8|0.0.0.3.0 4-5|0.0.0.3 3-4|0.0.0.3.1.1+0.0.0.3.1 1-2|0.0.0.3.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:20.750
# ::node	0	hurt-01	35-36
# ::node	0.0	accident	38-39
# ::node	0.0.0	involve-01	15-16
# ::node	0.0.0.0	vehicle	10-11
# ::node	0.0.0.0.0	6	8-9
# ::node	0.0.0.1	crash-01	18-19
# ::node	0.0.0.1.0	near	26-27
# ::node	0.0.0.2	19	28-29
# ::node	0.0.0.3	after	4-5
# ::node	0.0.0.3.0	accident	7-8
# ::node	0.0.0.3.1	temporal-quantity	3-4
# ::node	0.0.0.3.1.0	half	1-2
# ::node	0.0.0.3.1.1	hour	3-4
# ::node	0.0.1	this	37-38
# ::node	0.1	3	12-13
# ::node	0.2	-	32-33
# ::root	0	hurt-01
# ::edge	19	op1	involve-01	0.0.0.2	0.0.0	
# ::edge	3	op1	hurt-01	0.1	0	
# ::edge	accident	mod	this	0.0	0.0.1	
# ::edge	after	op1	accident	0.0.0.3	0.0.0.3.0	
# ::edge	after	quant	temporal-quantity	0.0.0.3	0.0.0.3.1	
# ::edge	crash-01	ARG1	near	0.0.0.1	0.0.0.1.0	
# ::edge	hurt-01	ARG0	accident	0	0.0	
# ::edge	hurt-01	polarity	-	0	0.2	
# ::edge	involve-01	ARG0	accident	0.0.0	0.0	
# ::edge	involve-01	ARG1	vehicle	0.0.0	0.0.0.0	
# ::edge	involve-01	ARG2	crash-01	0.0.0	0.0.0.1	
# ::edge	involve-01	time	after	0.0.0	0.0.0.3	
# ::edge	temporal-quantity	mod	half	0.0.0.3.1	0.0.0.3.1.0	
# ::edge	temporal-quantity	unit	hour	0.0.0.3.1	0.0.0.3.1.1	
# ::edge	vehicle	quant	6	0.0.0.0	0.0.0.0.0	
(h / hurt-01 
      :ARG0 (a / accident 
            :ARG0-of (i / involve-01 
                  :ARG1 (v / vehicle 
                        :quant 6) 
                  :ARG2 (c / crash-01 
                        :ARG1 (n / near)) 
                  :op-of 19 
                  :time (a3 / after 
                        :op1 (a2 / accident) 
                        :quant (t2 / temporal-quantity 
                              :mod (h3 / half) 
                              :unit (h2 / hour)))) 
            :mod (t / this)) 
      :op-of 3 
      :polarity (- / -))

# ::snt you dont have the right when you are a great driver to have a stupid accident which destroys the sporting spectacle
# ::tok you dont have the right when you are a great driver to have a stupid accident which destroys the sporting spectacle
# ::alignments 20-21|0 19-20|0.1 17-18|0.0 15-16|0.0.0 14-15|0.0.0.0 10-11|0.0.1.0+0.0.1 9-10|0.0.1.2 6-7|0.0.1.1 0-1|0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:20.895
# ::node	0	spectacle	20-21
# ::node	0.0	destroy-01	17-18
# ::node	0.0.0	accident	15-16
# ::node	0.0.0.0	stupid	14-15
# ::node	0.0.1	person	10-11
# ::node	0.0.1.0	drive-01	10-11
# ::node	0.0.1.1	you	6-7
# ::node	0.0.1.2	great	9-10
# ::node	0.0.2	you	0-1
# ::node	0.1	sport	19-20
# ::root	0	spectacle
# ::edge	accident	mod	stupid	0.0.0	0.0.0.0	
# ::edge	destroy-01	ARG0	accident	0.0	0.0.0	
# ::edge	destroy-01	ARG1	spectacle	0.0	0	
# ::edge	destroy-01	ARG2	person	0.0	0.0.1	
# ::edge	drive-01	ARG0	person	0.0.1.0	0.0.1	
# ::edge	person	domain	you	0.0.1	0.0.1.1	
# ::edge	person	mod	great	0.0.1	0.0.1.2	
# ::edge	spectacle	mod	sport	0	0.1	
# ::edge	you	op1	destroy-01	0.0.2	0.0	
(s / spectacle 
      :ARG1-of (d / destroy-01 
            :ARG0 (a / accident 
                  :mod (s3 / stupid)) 
            :ARG2 (p / person 
                  :ARG0-of (d2 / drive-01) 
                  :domain (y / you) 
                  :mod (g / great)) 
            :op-of (y2 / you)) 
      :mod (s2 / sport))

# ::snt he recounted with a candidness that made her shudder the terrible accident and the celebrated funeral that he himself had arranged
# ::tok he recounted with a candidness that made her shudder the terrible accident and the celebrated funeral that he himself had arranged
# ::alignments 20-21|0.1 17-18|0.1.0 15-16|0 14-15|0.0 12-13|0.2 11-12|0.2.0 10-11|0.2.0.2 8-9|0.2.0.0 1-2|0.2.0.1 0-1|0.2.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:20.992
# ::node	0	funeral	15-16
# ::node	0.0	celebrate-01	14-15
# ::node	0.1	arrange-01	20-21
# ::node	0.1.0	he	17-18
# ::node	0.2	and	12-13
# ::node	0.2.0	accident	11-12
# ::node	0.2.0.0	shudder-01	8-9
# ::node	0.2.0.1	recount-01	1-2
# ::node	0.2.0.1.0	he	0-1
# ::node	0.2.0.2	terrible	10-11
# ::root	0	funeral
(f / funeral 
      :ARG1-of (c / celebrate-01) 
      :ARG1-of (a / arrange-01 
            :ARG0 (h / he)) 
      :op-of (a2 / and 
            :op1 (a3 / accident 
                  :ARG1-of (s / shudder-01) 
                  :ARG1-of (r / recount-01 
                        :ARG0 (h2 / he)) 
                  :mod (t / terrible))))

# ::snt the girl had had an  accident at school one day
# ::tok the girl had had an accident at school one day
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:20.993
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt ahead of you as you reached the top of the stairs across the mat where sooty used to sleep until uncle frank had his accident was the locked door to yasmins sanctum
# ::tok ahead of you as you reached the top of the stairs across the mat where sooty used to sleep until uncle frank had his accident was the locked door to yasmins sanctum
# ::alignments 28-29|0.1.1.0.2 27-28|0.1.1.0.2.0 24-25|0.0.1 21-22|0.0 20-21|0.0.0.1+0.0.0 19-20|0.1.2 18-19|0.1 16-17|0 13-14|0.1.1 11-12|0.1.1.1 7-8|0.1.1.0.1 5-6|0.1.1.0 4-5|0.1.1.0.0 2-3|0.0.0.0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:21.350
# ::node	0	use-01	16-17
# ::node	0.0	frank	21-22
# ::node	0.0.0	have-rel-role-91	20-21
# ::node	0.0.0.0	you	2-3
# ::node	0.0.0.1	uncle	20-21
# ::node	0.0.1	accident	24-25
# ::node	0.1	sleep-01	18-19
# ::node	0.1.0	ahead	0-1
# ::node	0.1.1	mat	13-14
# ::node	0.1.1.0	reach-01	5-6
# ::node	0.1.1.0.0	you	4-5
# ::node	0.1.1.0.1	top	7-8
# ::node	0.1.1.0.2	door	28-29
# ::node	0.1.1.0.2.0	lock-01	27-28
# ::node	0.1.1.1	across	11-12
# ::node	0.1.2	until	19-20
# ::root	0	use-01
# ::edge	accident	poss	frank	0.0.1	0.0	
# ::edge	across	op1	mat	0.1.1.1	0.1.1	
# ::edge	door	domain	reach-01	0.1.1.0.2	0.1.1.0	
# ::edge	have-rel-role-91	ARG0	frank	0.0.0	0.0	
# ::edge	have-rel-role-91	ARG1	you	0.0.0	0.0.0.0	
# ::edge	have-rel-role-91	ARG2	uncle	0.0.0	0.0.0.1	
# ::edge	lock-01	ARG1	door	0.1.1.0.2.0	0.1.1.0.2	
# ::edge	reach-01	ARG0	you	0.1.1.0	0.1.1.0.0	
# ::edge	reach-01	ARG1	top	0.1.1.0	0.1.1.0.1	
# ::edge	reach-01	location	mat	0.1.1.0	0.1.1	
# ::edge	sleep-01	ARG1	ahead	0.1	0.1.0	
# ::edge	sleep-01	location	mat	0.1	0.1.1	
# ::edge	sleep-01	time	until	0.1	0.1.2	
# ::edge	use-01	ARG1	frank	0	0.0	
# ::edge	use-01	ARG2	sleep-01	0	0.1	
(u3 / use-01 
      :ARG1 (f / frank 
            :ARG0-of (h / have-rel-role-91 
                  :ARG1 (y2 / you) 
                  :ARG2 (u / uncle)) 
            :poss-of (a / accident)) 
      :ARG2 (s / sleep-01 
            :ARG1 (a3 / ahead) 
            :location (m / mat 
                  :location-of (r / reach-01 
                        :ARG0 (y / you) 
                        :ARG1 (t / top) 
                        :domain-of (d / door 
                              :ARG1-of (l / lock-01))) 
                  :op-of (a2 / across)) 
            :time (u2 / until)))

# ::snt first pays some attention to stella and then ignores her so that she is driven into the arms of a middleaged actor named ohara standing in for captain hook after an accident with a spear
# ::tok first pays some attention to stella and then ignores her so that she is driven into the arms of a middleaged actor named ohara standing in for captain hook after an accident with a spear
# ::alignments 31-32|0.2.0 29-30|0.2 28-29|0 27-28|0.0.0+0.0 17-18|0.1.2.1 14-15|0.1.2 12-13|0.1.2.0 10-11|0.1.1.0 8-9|0.1.1 7-8|0.1.1.1 6-7|0.1 3-4|0.1.0.0 2-3|0.1.0.0.0 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:21.463
# ::node	0	hook-02	28-29
# ::node	0.0	have-org-role-91	27-28
# ::node	0.0.0	captain	27-28
# ::node	0.1	and	6-7
# ::node	0.1.0	pay-01	1-2
# ::node	0.1.0.0	attention	3-4
# ::node	0.1.0.0.0	some	2-3
# ::node	0.1.1	ignore-01	8-9
# ::node	0.1.1.0	so	10-11
# ::node	0.1.1.1	then	7-8
# ::node	0.1.2	drive-02	14-15
# ::node	0.1.2.0	she	12-13
# ::node	0.1.2.1	arm	17-18
# ::node	0.2	after	29-30
# ::node	0.2.0	accident	31-32
# ::root	0	hook-02
# ::edge	after	op1	accident	0.2	0.2.0	
# ::edge	and	op1	pay-01	0.1	0.1.0	
# ::edge	and	op2	ignore-01	0.1	0.1.1	
# ::edge	and	op3	drive-02	0.1	0.1.2	
# ::edge	attention	quant	some	0.1.0.0	0.1.0.0.0	
# ::edge	drive-02	ARG1	she	0.1.2	0.1.2.0	
# ::edge	drive-02	ARG2	arm	0.1.2	0.1.2.1	
# ::edge	have-org-role-91	ARG0	hook-02	0.0	0	
# ::edge	have-org-role-91	ARG2	captain	0.0	0.0.0	
# ::edge	hook-02	ARG1	and	0	0.1	
# ::edge	hook-02	time	after	0	0.2	
# ::edge	ignore-01	mod	so	0.1.1	0.1.1.0	
# ::edge	ignore-01	time	then	0.1.1	0.1.1.1	
# ::edge	pay-01	ARG1	attention	0.1.0	0.1.0.0	
(h / hook-02 
      :ARG0-of (h2 / have-org-role-91 
            :ARG2 (c / captain)) 
      :ARG1 (a4 / and 
            :op1 (p / pay-01 
                  :ARG1 (a5 / attention 
                        :quant (s3 / some))) 
            :op2 (i / ignore-01 
                  :mod (s2 / so) 
                  :time (t / then)) 
            :op3 (d / drive-02 
                  :ARG1 (s / she) 
                  :ARG2 (a3 / arm))) 
      :time (a2 / after 
            :op1 (a / accident)))

# ::snt accident investigator pc philip pirouet said mr stubbs had hit the kerb and crashed along the fence
# ::tok accident investigator pc philip pirouet said mr stubbs had hit the kerb and crashed along the fence
# ::alignments 16-17|0.0.1.0 14-15|0.0.1.1 13-14|0.0.1 12-13|0.0 9-10|0.0.0 5-6|0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:21.494
# ::node	0	say-01	5-6
# ::node	0.0	and	12-13
# ::node	0.0.0	hit-01	9-10
# ::node	0.0.0.0	accident	0-1
# ::node	0.0.1	crash-01	13-14
# ::node	0.0.1.0	fence	16-17
# ::node	0.0.1.1	along	14-15
# ::root	0	say-01
(s / say-01 
      :op-of (a2 / and 
            :op1 (h / hit-01 
                  :ARG0 (a3 / accident)) 
            :op2 (c / crash-01 
                  :ARG1 (f / fence) 
                  :ARG2 (a / along))))

# ::snt last year the county council introduced a 50 mph limit between woodstock and lidstone in a bid to cut the number of accidents
# ::tok last year the county council introduced a 50 mph limit between woodstock and lidstone in a bid to cut the number of accidents
# ::alignments 22-23|0.1.1.0 20-21|0.1.1 16-17|0.1 12-13|0 10-11|0.0.1 9-10|0.0 7-8|0.1.0 5-6|0.0.0 4-5|0.0.0.0 3-4|0.0.0.0.0 1-2|0.0.0.1 0-1|0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:21.671
# ::node	0	and	12-13
# ::node	0.0	limit-01	9-10
# ::node	0.0.0	introduce-02	5-6
# ::node	0.0.0.0	council	4-5
# ::node	0.0.0.0.0	county	3-4
# ::node	0.0.0.1	year	1-2
# ::node	0.0.0.1.0	last	0-1
# ::node	0.0.1	between	10-11
# ::node	0.1	bid-01	16-17
# ::node	0.1.0	50	7-8
# ::node	0.1.1	number	20-21
# ::node	0.1.1.0	accident	22-23
# ::root	0	and
(a2 / and 
      :ARG1-of (l / limit-01 
            :ARG1-of (i / introduce-02 
                  :ARG0 (c / council 
                        :mod (c2 / county)) 
                  :time (y / year 
                        :mod (l2 / last))) 
            :location (b2 / between)) 
      :ARG1-of (b / bid-01 
            :ARG0 50 
            :ARG2 (n / number 
                  :quant-of (a / accident))))

# ::snt after the tragic accident at le mans in 1955 the duke became increasingly worried about crowd safety at goodwood
# ::tok after the tragic accident at le mans in 1955 the duke became increasingly worried about crowd safety at goodwood
# ::alignments 16-17|0.1 15-16|0.1.0 13-14|0 12-13|0.0 11-12|0.2 8-9|0.3.0.1.0+0.3.0.1 5-7|0.2.0.0.0+0.2.0.0.1+0.2.0.0+0.2.0 3-4|0.3.0 2-3|0.3.0.0 0-1|0.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:21.722
# ::node	0	worry-02	13-14
# ::node	0.0	increase-01	12-13
# ::node	0.1	safe-41	16-17
# ::node	0.1.0	crowd	15-16
# ::node	0.2	become-01	11-12
# ::node	0.2.0	country	5-7
# ::node	0.2.0.0	name	5-7
# ::node	0.2.0.0.0	"mans"	5-7
# ::node	0.2.0.0.1	"le"	5-7
# ::node	0.3	after	0-1
# ::node	0.3.0	accident	3-4
# ::node	0.3.0.0	tragic	2-3
# ::node	0.3.0.1	date-entity	8-9
# ::node	0.3.0.1.0	1955	8-9
# ::root	0	worry-02
# ::edge	accident	mod	tragic	0.3.0	0.3.0.0	
# ::edge	accident	time	date-entity	0.3.0	0.3.0.1	
# ::edge	after	op1	accident	0.3	0.3.0	
# ::edge	become-01	ARG1	country	0.2	0.2.0	
# ::edge	become-01	ARG2	worry-02	0.2	0	
# ::edge	country	name	name	0.2.0	0.2.0.0	
# ::edge	date-entity	year	1955	0.3.0.1	0.3.0.1.0	
# ::edge	increase-01	ARG1	worry-02	0.0	0	
# ::edge	name	op1	"mans"	0.2.0.0	0.2.0.0.0	
# ::edge	name	op2	"le"	0.2.0.0	0.2.0.0.1	
# ::edge	safe-41	ARG1	crowd	0.1	0.1.0	
# ::edge	worry-02	ARG2	safe-41	0	0.1	
# ::edge	worry-02	time	after	0	0.3	
(w / worry-02 
      :ARG1-of (i / increase-01) 
      :ARG2 (s / safe-41 
            :ARG1 (c / crowd)) 
      :ARG2-of (b / become-01 
            :ARG1 (c2 / country 
                  :name (n / name 
                        :op1 "mans" 
                        :op2 "le"))) 
      :time (a2 / after 
            :op1 (a / accident 
                  :mod (t / tragic) 
                  :time (d / date-entity 
                        :year 1955))))

# ::snt both hitler and mussolini fixed on 1943 for the outbreak of the next great war and the second world war might well have started then if it had not been for a series of accidents and misunderstandings
# ::tok both hitler and mussolini fixed on 1943 for the outbreak of the next great war and the second world war might well have started then if it had not been for a series of accidents and misunderstandings
# ::alignments 36-37|0.2.3.0 35-36|0.2.3 34-35|0.2.3.1.0 32-33|0.2.3.1 26-27|0.2.2 24-25|0.2.4 23-24|0.2 21-22|0.2.1 19-20|0.1 18-19|0.1.0 15-16|0 14-15|0.0 13-14|0.0.0 12-13|0.0.1 6-7|0.2.0.0.0.0+0.2.0.0.0 4-5|0.2.0.0 2-3|0.2.0 0-1|0.2.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:21.978
# ::node	0	and	15-16
# ::node	0.0	war	14-15
# ::node	0.0.0	great	13-14
# ::node	0.0.1	next	12-13
# ::node	0.1	war	19-20
# ::node	0.1.0	world	18-19
# ::node	0.2	start-01	23-24
# ::node	0.2.0	and	2-3
# ::node	0.2.0.0	fix-03	4-5
# ::node	0.2.0.0.0	date-entity	6-7
# ::node	0.2.0.0.0.0	1943	6-7
# ::node	0.2.0.1	both	0-1
# ::node	0.2.1	well	21-22
# ::node	0.2.2	it	26-27
# ::node	0.2.3	and	35-36
# ::node	0.2.3.0	misunderstand-01	36-37
# ::node	0.2.3.1	series	32-33
# ::node	0.2.3.1.0	accident	34-35
# ::node	0.2.4	then	24-25
# ::root	0	and
# ::edge	accident	quant	series	0.2.3.1.0	0.2.3.1	
# ::edge	and	mod	both	0.2.0	0.2.0.1	
# ::edge	and	op1	start-01	0.2.3	0.2	
# ::edge	and	op1	war	0	0.0	
# ::edge	and	op2	misunderstand-01	0.2.3	0.2.3.0	
# ::edge	and	op2	war	0	0.1	
# ::edge	and	op3	start-01	0	0.2	
# ::edge	and	quant	series	0.2.3	0.2.3.1	
# ::edge	date-entity	year	1943	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	fix-03	ARG1	and	0.2.0.0	0.2.0	
# ::edge	fix-03	time	date-entity	0.2.0.0	0.2.0.0.0	
# ::edge	start-01	ARG0	and	0.2	0.2.0	
# ::edge	start-01	ARG1	well	0.2	0.2.1	
# ::edge	start-01	ARG2	it	0.2	0.2.2	
# ::edge	start-01	time	then	0.2	0.2.4	
# ::edge	war	mod	great	0.0	0.0.0	
# ::edge	war	mod	next	0.0	0.0.1	
# ::edge	war	poss	world	0.1	0.1.0	
(a3 / and 
      :op1 (w4 / war 
            :mod (g / great) 
            :mod (n / next)) 
      :op2 (w2 / war 
            :poss (w3 / world)) 
      :op3 (s2 / start-01 
            :ARG0 (a4 / and 
                  :ARG1-of (f / fix-03 
                        :time (d / date-entity 
                              :year 1943)) 
                  :mod (b / both)) 
            :ARG1 (w / well) 
            :ARG2 (i / it) 
            :op-of (a / and 
                  :op1 (m / misunderstand-01) 
                  :quant (s / series 
                        :quant-of (a2 / accident))) 
            :time (t / then)))

# ::snt you know i dont think it was an accident that within a couple of years or sorting myself out i met david
# ::tok you know i dont think it was an accident that within a couple of years or sorting myself out i met david
# ::alignments 20-21|0.0.0 19-20|0.0 16-17|0 15-16|0.2 14-15|0.1.1+0.1 12-13|0.1.0 10-11|0.1.0.0 8-9|0.1.0.0.0 5-6|0.1.0.0.0.0 4-5|0.1.0.0.0.0.0 2-3|0.1.0.0.0.0.0.0 1-2|0.1.0.0.0.0.0.1 0-1|0.1.0.0.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:22.338
# ::node	0	sort-01	16-17
# ::node	0.0	i	19-20
# ::node	0.0.0	meet-03	20-21
# ::node	0.1	temporal-quantity	14-15
# ::node	0.1.0	couple	12-13
# ::node	0.1.0.0	within	10-11
# ::node	0.1.0.0.0	accident	8-9
# ::node	0.1.0.0.0.0	it	5-6
# ::node	0.1.0.0.0.0.0	think-01	4-5
# ::node	0.1.0.0.0.0.0.0	i	2-3
# ::node	0.1.0.0.0.0.0.1	know-01	1-2
# ::node	0.1.0.0.0.0.0.1.0	you	0-1
# ::node	0.1.1	year	14-15
# ::node	0.2	or	15-16
# ::root	0	sort-01
# ::edge	accident	domain	it	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	accident	mod	within	0.1.0.0.0	0.1.0.0	
# ::edge	couple	op1	temporal-quantity	0.1.0	0.1	
# ::edge	know-01	ARG0	you	0.1.0.0.0.0.0.1	0.1.0.0.0.0.0.1.0	
# ::edge	know-01	ARG1	think-01	0.1.0.0.0.0.0.1	0.1.0.0.0.0.0	
# ::edge	meet-03	ARG0	i	0.0.0	0.0	
# ::edge	or	op1	sort-01	0.2	0	
# ::edge	sort-01	ARG0	i	0	0.0	
# ::edge	sort-01	ARG1	temporal-quantity	0	0.1	
# ::edge	temporal-quantity	unit	year	0.1	0.1.1	
# ::edge	think-01	ARG0	i	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	think-01	ARG1	it	0.1.0.0.0.0.0	0.1.0.0.0.0	
# ::edge	within	op1	couple	0.1.0.0	0.1.0	
(s / sort-01 
      :ARG0 (i / i 
            :ARG0-of (m / meet-03)) 
      :ARG1 (t / temporal-quantity 
            :op-of (c / couple 
                  :op-of (w / within 
                        :mod-of (a / accident 
                              :domain (i2 / it 
                                    :ARG1-of (t2 / think-01 
                                          :ARG0 (i3 / i) 
                                          :ARG1-of (k / know-01 
                                                :ARG0 (y2 / you))))))) 
            :unit (y / year)) 
      :op-of (o / or))

# ::snt median awards however are more modest because of the large proportion of motor vehicle accidents which dilute the impact of the megaawards in product and medical malpractice actions
# ::tok median awards however are more modest because of the large proportion of motor vehicle accidents which dilute the impact of the megaawards in product and medical malpractice actions
# ::alignments 27-28|0.2.0.1 25-26|0.2.2 24-25|0.2 23-24|0.2.1 18-19|0.2.0 14-15|0.1.1 13-14|0.1 12-13|0.1.0 10-11|0.0 9-10|0.0.0 6-7|0 5-6|0.2.0.0.1 1-2|0.2.0.0.0+0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:22.639
# ::node	0	cause-01	6-7
# ::node	0.0	proportion	10-11
# ::node	0.0.0	large	9-10
# ::node	0.1	vehicle	13-14
# ::node	0.1.0	motorcycle	12-13
# ::node	0.1.1	accident	14-15
# ::node	0.2	and	24-25
# ::node	0.2.0	impact-01	18-19
# ::node	0.2.0.0	thing	1-2
# ::node	0.2.0.0.0	award-01	1-2
# ::node	0.2.0.0.1	modest	5-6
# ::node	0.2.0.1	action	27-28
# ::node	0.2.1	product	23-24
# ::node	0.2.2	medicine	25-26
# ::root	0	cause-01
# ::edge	accident	poss	vehicle	0.1.1	0.1	
# ::edge	and	op1	cause-01	0.2	0	
# ::edge	and	op2	impact-01	0.2	0.2.0	
# ::edge	and	op3	product	0.2	0.2.1	
# ::edge	and	op4	medicine	0.2	0.2.2	
# ::edge	award-01	ARG1	thing	0.2.0.0.0	0.2.0.0	
# ::edge	cause-01	ARG0	proportion	0	0.0	
# ::edge	cause-01	ARG1	vehicle	0	0.1	
# ::edge	impact-01	ARG0	thing	0.2.0	0.2.0.0	
# ::edge	impact-01	ARG1	action	0.2.0	0.2.0.1	
# ::edge	modest	domain	thing	0.2.0.0.1	0.2.0.0	
# ::edge	proportion	quant	large	0.0	0.0.0	
# ::edge	vehicle	mod	motorcycle	0.1	0.1.0	
(c / cause-01 
      :ARG0 (p2 / proportion 
            :quant (l / large)) 
      :ARG1 (v / vehicle 
            :mod (m2 / motorcycle) 
            :poss-of (a3 / accident)) 
      :op-of (a2 / and 
            :op1 (i / impact-01 
                  :ARG0 (t / thing 
                        :ARG1-of (a4 / award-01) 
                        :domain-of (m3 / modest)) 
                  :ARG1 (a / action)) 
            :op2 (p / product) 
            :op3 (m / medicine)))

# ::snt mr olejnik 34 who was not injured in the accident but badly shaken saidi was doing about 50mph and already slowing down as i approached a roundabout when without warning a pack of hounds rushed out of the hedge at the side of the road and crossed the road straight in front of my car
# ::tok mr olejnik 34 who was not injured in the accident but badly shaken saidi was doing about 50mph and already slowing down as i approached a roundabout when without warning a pack of hounds rushed out of the hedge at the side of the road and crossed the road straight in front of my car
# ::alignments 54-55|0.1.0.0.0.0.0.0.2.0.3.1 51-52|0.1.0.0.0.0.0.0.2.0.3 49-50|0.1.0.0.0.0.0.0.2.0.3.0 48-49|0.1.0.0.0.0.0.0.2.0.1 46-47|0.1.0.0.0.0.0.0.2.0 45-46|0.1.0.0.0.0.0.0.2 44-45|0.1.0.0.0.0.0.0.2.0.2.0 41-42|0.1.0.0.0.0.0.0.2.0.2 38-39|0.1.0.0.0.0.0.0.1 34-35|0.1.0.0.0.0.0.0 31-32|0.1.0.0.0.0.0.0.2.0.0 29-30|0.1.0.0.0.0.0.0.0 24-25|0.1.0.0.0.0 23-24|0.1.0.0.0.0.0 21-22|0.1.0.0.0.1 20-21|0.1.0.0.0 19-20|0.1.0.0.0.2 18-19|0.1.0.0 15-16|0.1.0 12-13|0.1 10-11|0 9-10|0.0.0 6-7|0.0 2-3|0.1.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:23.111
# ::node	0	contrast-01	10-11
# ::node	0.0	injure-01	6-7
# ::node	0.0.0	accident	9-10
# ::node	0.1	shake-03	12-13
# ::node	0.1.0	do-02	15-16
# ::node	0.1.0.0	and	18-19
# ::node	0.1.0.0.0	slow-03	20-21
# ::node	0.1.0.0.0.0	approach-02	24-25
# ::node	0.1.0.0.0.0.0	i	23-24
# ::node	0.1.0.0.0.0.0.0	rush-01	34-35
# ::node	0.1.0.0.0.0.0.0.0	warn-01	29-30
# ::node	0.1.0.0.0.0.0.0.1	hedge	38-39
# ::node	0.1.0.0.0.0.0.0.2	and	45-46
# ::node	0.1.0.0.0.0.0.0.2.0	cross-00	46-47
# ::node	0.1.0.0.0.0.0.0.2.0.0	pack-01	31-32
# ::node	0.1.0.0.0.0.0.0.2.0.1	road	48-49
# ::node	0.1.0.0.0.0.0.0.2.0.2	side	41-42
# ::node	0.1.0.0.0.0.0.0.2.0.2.0	road	44-45
# ::node	0.1.0.0.0.0.0.0.2.0.3	front	51-52
# ::node	0.1.0.0.0.0.0.0.2.0.3.0	straight	49-50
# ::node	0.1.0.0.0.0.0.0.2.0.3.1	car	54-55
# ::node	0.1.0.0.0.0.1	34	2-3
# ::node	0.1.0.0.0.1	down	21-22
# ::node	0.1.0.0.0.2	already	19-20
# ::root	0	contrast-01
# ::edge	and	op1	do-02	0.1.0.0	0.1.0	
# ::edge	and	op1	rush-01	0.1.0.0.0.0.0.0.2	0.1.0.0.0.0.0.0	
# ::edge	and	op2	cross-00	0.1.0.0.0.0.0.0.2	0.1.0.0.0.0.0.0.2.0	
# ::edge	and	op2	slow-03	0.1.0.0	0.1.0.0.0	
# ::edge	approach-02	ARG0	i	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	approach-02	ARG1	34	0.1.0.0.0.0	0.1.0.0.0.0.1	
# ::edge	car	part	front	0.1.0.0.0.0.0.0.2.0.3.1	0.1.0.0.0.0.0.0.2.0.3	
# ::edge	contrast-01	ARG1	injure-01	0	0.0	
# ::edge	contrast-01	ARG2	shake-03	0	0.1	
# ::edge	cross-00	ARG0	pack-01	0.1.0.0.0.0.0.0.2.0	0.1.0.0.0.0.0.0.2.0.0	
# ::edge	cross-00	ARG1	road	0.1.0.0.0.0.0.0.2.0	0.1.0.0.0.0.0.0.2.0.1	
# ::edge	cross-00	ARG2	side	0.1.0.0.0.0.0.0.2.0	0.1.0.0.0.0.0.0.2.0.2	
# ::edge	cross-00	prep-with	front	0.1.0.0.0.0.0.0.2.0	0.1.0.0.0.0.0.0.2.0.3	
# ::edge	front	mod	straight	0.1.0.0.0.0.0.0.2.0.3	0.1.0.0.0.0.0.0.2.0.3.0	
# ::edge	injure-01	ARG1	accident	0.0	0.0.0	
# ::edge	road	part	side	0.1.0.0.0.0.0.0.2.0.2.0	0.1.0.0.0.0.0.0.2.0.2	
# ::edge	rush-01	ARG0	i	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	rush-01	ARG1	warn-01	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0.0.0	
# ::edge	rush-01	ARG2	hedge	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0.0.1	
# ::edge	shake-03	ARG1	do-02	0.1	0.1.0	
# ::edge	slow-03	ARG2	approach-02	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	slow-03	direction	down	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	slow-03	mod	already	0.1.0.0.0	0.1.0.0.0.2	
(c3 / contrast-01 
      :ARG1 (i2 / injure-01 
            :ARG1 (a5 / accident)) 
      :ARG2 (s4 / shake-03 
            :ARG1 (d2 / do-02 
                  :op-of (a4 / and 
                        :op1 (s3 / slow-03 
                              :ARG2 (a2 / approach-02 
                                    :ARG0 (i / i 
                                          :ARG0-of (r3 / rush-01 
                                                :ARG1 (w / warn-01) 
                                                :ARG2 (h / hedge) 
                                                :op-of (a / and 
                                                      :op1 (c2 / cross-00 
                                                            :ARG0 (p / pack-01) 
                                                            :ARG1 (r / road) 
                                                            :ARG2 (s2 / side 
                                                                  :part-of (r2 / road)) 
                                                            :prep-with (f / front 
                                                                  :mod (s / straight) 
                                                                  :part-of (c / car)))))) 
                                    :ARG1 34) 
                              :direction (d / down) 
                              :mod (a3 / already))))))

# ::snt in other words quite by accident i probably started my appreciation of the classical piano by listening to the greatest pianist playing the greatest composer for the piano and its been downhill ever since
# ::tok in other words quite by accident i probably started my appreciation of the classical piano by listening to the greatest pianist playing the greatest composer for the piano and its been downhill ever since
# ::alignments 33-34|0.0.1 32-33|0.0 31-32|0 28-29|0.0.0.1.1.3 27-28|0.0.0.1.1.3.0 23-24|0.0.0.2.0+0.0.0.2 21-22|0.0.0 19-20|0.0.0.3.0+0.0.0.3 16-17|0.0.0.1 14-15|0.0.0.1.0 13-14|0.0.0.1.0.0 8-9|0.0.0.1.1 7-8|0.0.0.1.1.2 6-7|0.0.0.1.1.0 5-6|0.0.0.1.1.0.0 3-4|0.0.0.0 2-3|0.0.0.1.1.1 1-2|0.0.0.1.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:23.549
# ::node	0	downhill	31-32
# ::node	0.0	ever	32-33
# ::node	0.0.0	play-01	21-22
# ::node	0.0.0.0	quite	3-4
# ::node	0.0.0.1	listen-01	16-17
# ::node	0.0.0.1.0	piano	14-15
# ::node	0.0.0.1.0.0	classical	13-14
# ::node	0.0.0.1.1	start-01	8-9
# ::node	0.0.0.1.1.0	i	6-7
# ::node	0.0.0.1.1.0.0	accident	5-6
# ::node	0.0.0.1.1.1	word	2-3
# ::node	0.0.0.1.1.1.0	other	1-2
# ::node	0.0.0.1.1.2	probable	7-8
# ::node	0.0.0.1.1.3	and	28-29
# ::node	0.0.0.1.1.3.0	piano	27-28
# ::node	0.0.0.2	great	23-24
# ::node	0.0.0.2.0	most	23-24
# ::node	0.0.0.3	great	19-20
# ::node	0.0.0.3.0	most	19-20
# ::node	0.0.1	since	33-34
# ::root	0	downhill
(d / downhill 
      :mod-of (e / ever 
            :ARG0-of (p2 / play-01 
                  :ARG1 (q / quite) 
                  :ARG1-of (l / listen-01 
                        :ARG0 (p3 / piano 
                              :mod (c / classical)) 
                        :time-of (s2 / start-01 
                              :ARG0 (i / i 
                                    :poss-of (a2 / accident)) 
                              :ARG1 (w / word 
                                    :mod (o / other)) 
                              :domain-of (p4 / probable) 
                              :op-of (a / and 
                                    :op1 (p / piano)))) 
                  :domain-of (g / great 
                        :degree (m / most)) 
                  :mod (g2 / great 
                        :degree (m2 / most))) 
            :mod-of (s / since)))

# ::snt martin lynch senior lecturer at the university department of orthopaedic and accident surgery at the royal liverpool hospital comments in the british medical journal that the fracture was almost certainly caused by repetitive and abnormal stresses on the rib
# ::tok martin lynch senior lecturer at the university department of orthopaedic and accident surgery at the royal liverpool hospital comments in the british medical journal that the fracture was almost certainly caused by repetitive and abnormal stresses on the rib
# ::alignments 35-36|0.0.2 34-35|0.0.1 33-34|0.0 30-31|0 29-30|0.3 28-29|0.3.0 26-27|0.1 22-23|0.0.2.1 18-19|0.2 17-18|0.2.0 15-16|0.0.2.0 12-13|0.0.0.2 11-12|0.0.0.1 10-11|0.0.0 7-8|0.0.0.0 6-7|0.0.0.0.0 2-3|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:24.093
# ::node	0	cause-01	30-31
# ::node	0.0	and	33-34
# ::node	0.0.0	and	10-11
# ::node	0.0.0.0	department	7-8
# ::node	0.0.0.0.0	university	6-7
# ::node	0.0.0.1	accident	11-12
# ::node	0.0.0.2	surgery	12-13
# ::node	0.0.1	abnormal	34-35
# ::node	0.0.2	stress-01	35-36
# ::node	0.0.2.0	royal	15-16
# ::node	0.0.2.1	medicine	22-23
# ::node	0.1	fracture-01	26-27
# ::node	0.1.0	senior	2-3
# ::node	0.2	comment-01	18-19
# ::node	0.2.0	hospital	17-18
# ::node	0.3	certain	29-30
# ::node	0.3.0	almost	28-29
# ::root	0	cause-01
# ::edge	and	op1	and	0.0	0.0.0	
# ::edge	and	op1	department	0.0.0	0.0.0.0	
# ::edge	and	op2	abnormal	0.0	0.0.1	
# ::edge	and	op2	accident	0.0.0	0.0.0.1	
# ::edge	and	op3	stress-01	0.0	0.0.2	
# ::edge	and	op3	surgery	0.0.0	0.0.0.2	
# ::edge	cause-01	ARG0	and	0	0.0	
# ::edge	cause-01	ARG1	fracture-01	0	0.1	
# ::edge	cause-01	mod	certain	0	0.3	
# ::edge	certain	mod	almost	0.3	0.3.0	
# ::edge	comment-01	ARG0	hospital	0.2	0.2.0	
# ::edge	comment-01	ARG1	cause-01	0.2	0	
# ::edge	department	mod	university	0.0.0.0	0.0.0.0.0	
# ::edge	senior	domain	fracture-01	0.1.0	0.1	
# ::edge	stress-01	ARG0	royal	0.0.2	0.0.2.0	
# ::edge	stress-01	ARG1	medicine	0.0.2	0.0.2.1	
(c / cause-01 
      :ARG0 (a2 / and 
            :op1 (a5 / and 
                  :op1 (d / department 
                        :mod (u / university)) 
                  :op2 (a4 / accident) 
                  :op3 (s2 / surgery)) 
            :op2 (a / abnormal) 
            :op3 (s / stress-01 
                  :ARG0 (r / royal) 
                  :ARG1 (m / medicine))) 
      :ARG1 (f / fracture-01 
            :domain-of (s3 / senior)) 
      :ARG1-of (c3 / comment-01 
            :ARG0 (h / hospital)) 
      :mod (c2 / certain 
            :mod (a3 / almost)))

# ::snt he accepted that more foxes were killed in road accidents than by the culling by hunts
# ::tok he accepted that more foxes were killed in road accidents than by the culling by hunts
# ::alignments 9-10|0.0.0.0 8-9|0.0.0.0.0 6-7|0.0.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:24.119
# ::node	0	accept-01	1-2
# ::node	0.0	he	0-1
# ::node	0.0.0	kill-01	6-7
# ::node	0.0.0.0	accident	9-10
# ::node	0.0.0.0.0	road	8-9
# ::root	0	accept-01
# ::edge	accept-01	ARG0	he	0	0.0	
# ::edge	accident	location	road	0.0.0.0	0.0.0.0.0	
# ::edge	kill-01	ARG0	he	0.0.0	0.0	
# ::edge	kill-01	instrument	accident	0.0.0	0.0.0.0	
(a2 / accept-01 
      :ARG0 (h / he 
            :ARG0-of (k / kill-01 
                  :instrument (a / accident 
                        :location (r / road)))))

# ::snt inside cafe rouge there is glowing wooden panelling cane chairs in warm tones french posters and original pictures and a collection of art deco and nouveau light fittings just motley enough to look as if they all arrived there by accident over the years
# ::tok inside cafe rouge there is glowing wooden panelling cane chairs in warm tones french posters and original pictures and a collection of art deco and nouveau light fittings just motley enough to look as if they all arrived there by accident over the years
# ::alignments 43-44|0.0.3.0.0+0.0.3.0 40-41|0.0.1.0.0.2 37-38|0.0.1.0.0 36-37|0.0.1.0.0.0.0 35-36|0.0.1.0.0.0 30-31|0.0.1.0.0.3 28-29|0.0.1.0.0.1 26-27|0.3 24-25|0.0.3.1 22-23|0.0.1.0.2 20-21|0.0.3 18-19|0.0 17-18|0.0.2 16-17|0.0.2.0 15-16|0.0.0 14-15|0.0.1 13-14|0.0.1.0.1.0+0.0.1.0.1+0.0.1.0 11-12|0.0.1.1 9-10|0.1 8-9|0.1.1 6-7|0.1.0 5-6|0 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:24.605
# ::node	0	glow-01	5-6
# ::node	0.0	and	18-19
# ::node	0.0.0	and	15-16
# ::node	0.0.1	poster	14-15
# ::node	0.0.1.0	country	13-14
# ::node	0.0.1.0.0	arrive-01	37-38
# ::node	0.0.1.0.0.0	they	35-36
# ::node	0.0.1.0.0.0.0	all	36-37
# ::node	0.0.1.0.0.1	just	28-29
# ::node	0.0.1.0.0.2	accident	40-41
# ::node	0.0.1.0.0.3	enough	30-31
# ::node	0.0.1.0.1	name	13-14
# ::node	0.0.1.0.1.0	"France"	13-14
# ::node	0.0.1.0.2	art	22-23
# ::node	0.0.1.1	warm	11-12
# ::node	0.0.2	picture	17-18
# ::node	0.0.2.0	original	16-17
# ::node	0.0.3	collect-01	20-21
# ::node	0.0.3.0	temporal-quantity	43-44
# ::node	0.0.3.0.0	year	43-44
# ::node	0.0.3.1	and	24-25
# ::node	0.1	chair	9-10
# ::node	0.1.0	wood	6-7
# ::node	0.1.1	cane	8-9
# ::node	0.2	inside	0-1
# ::node	0.3	light	26-27
# ::root	0	glow-01
# ::edge	and	op1	and	0.0.0	0.0	
# ::edge	and	op1	poster	0.0	0.0.1	
# ::edge	and	op2	picture	0.0	0.0.2	
# ::edge	and	op3	collect-01	0.0	0.0.3	
# ::edge	arrive-01	ARG0	they	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	arrive-01	ARG1	just	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	arrive-01	ARG3	country	0.0.1.0.0	0.0.1.0	
# ::edge	arrive-01	ARG4	accident	0.0.1.0.0	0.0.1.0.0.2	
# ::edge	art	poss	country	0.0.1.0.2	0.0.1.0	
# ::edge	chair	mod	cane	0.1	0.1.1	
# ::edge	chair	mod	wood	0.1	0.1.0	
# ::edge	collect-01	ARG0	temporal-quantity	0.0.3	0.0.3.0	
# ::edge	collect-01	ARG1	and	0.0.3	0.0.3.1	
# ::edge	country	name	name	0.0.1.0	0.0.1.0.1	
# ::edge	enough	time	arrive-01	0.0.1.0.0.3	0.0.1.0.0	
# ::edge	glow-01	ARG0	and	0	0.0	
# ::edge	glow-01	ARG1	chair	0	0.1	
# ::edge	glow-01	location	inside	0	0.2	
# ::edge	light	op1	glow-01	0.3	0	
# ::edge	name	op1	"France"	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	picture	mod	original	0.0.2	0.0.2.0	
# ::edge	poster	mod	country	0.0.1	0.0.1.0	
# ::edge	poster	mod	warm	0.0.1	0.0.1.1	
# ::edge	temporal-quantity	unit	year	0.0.3.0	0.0.3.0.0	
# ::edge	they	quant	all	0.0.1.0.0.0	0.0.1.0.0.0.0	
(g / glow-01 
      :ARG0 (a6 / and 
            :op-of (a7 / and) 
            :op1 (p2 / poster 
                  :mod (c2 / country 
                        :ARG3-of (a2 / arrive-01 
                              :ARG0 (t2 / they 
                                    :quant (a3 / all)) 
                              :ARG1 (j / just) 
                              :ARG4 (a / accident) 
                              :time-of (e / enough)) 
                        :name (n / name 
                              :op1 "France") 
                        :poss-of (a5 / art)) 
                  :mod (w / warm)) 
            :op2 (p / picture 
                  :mod (o / original)) 
            :op3 (c / collect-01 
                  :ARG0 (t / temporal-quantity 
                        :unit (y / year)) 
                  :ARG1 (a4 / and))) 
      :ARG1 (c3 / chair 
            :mod (w2 / wood) 
            :mod (c4 / cane)) 
      :location (i / inside) 
      :op-of (l / light))

# ::snt he hoped others would follow pearl insurance in withdrawing cover from drivers involved in accidents when their bloodalcohol level was above the statutory limit, last year more than 5000 people were killed and more than 300000 injured in accidents on britains roads
# ::tok he hoped others would follow pearl insurance in withdrawing cover from drivers involved in accidents when their bloodalcohol level was above the statutory limit , last year more than 5000 people were killed and more than 300000 injured in accidents on britains roads
# ::alignments 42-43|0.0.0.0 39-40|0.0.0.1.0.1 37-38|0.0.0.1.0 36-37|0.0.0.1.0.0 33-34|0.0.0.1 32-33|0.0.0 29-30|0.1.2.1 26-27|0.2.1 25-26|0.2.1.0 23-24|0.2 20-21|0.2.2 18-19|0.2.0 14-15|0.1.2.0.1.0 12-13|0.1.2.0.1 11-12|0.1.2.0.0+0.1.2.0 8-9|0.1.2 6-7|0.1.1 5-6|0.1.1.0 4-5|0.1 2-3|0.1.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:26.025
# ::node	0	hope-01	1-2
# ::node	0.0	he	0-1
# ::node	0.0.0	kill-01	32-33
# ::node	0.0.0.0	road	42-43
# ::node	0.0.0.1	and	33-34
# ::node	0.0.0.1.0	injure-01	37-38
# ::node	0.0.0.1.0.0	300000	36-37
# ::node	0.0.0.1.0.1	accident	39-40
# ::node	0.1	follow-02	4-5
# ::node	0.1.0	other	2-3
# ::node	0.1.1	insure-02	6-7
# ::node	0.1.1.0	pearl	5-6
# ::node	0.1.2	withdraw-01	8-9
# ::node	0.1.2.0	person	11-12
# ::node	0.1.2.0.0	drive-01	11-12
# ::node	0.1.2.0.1	involve-01	12-13
# ::node	0.1.2.0.1.0	accident	14-15
# ::node	0.1.2.1	5000	29-30
# ::node	0.2	limit-01	23-24
# ::node	0.2.0	level	18-19
# ::node	0.2.1	year	26-27
# ::node	0.2.1.0	last	25-26
# ::node	0.2.2	above	20-21
# ::root	0	hope-01
# ::edge	above	op1	limit-01	0.2.2	0.2	
# ::edge	and	op1	kill-01	0.0.0.1	0.0.0	
# ::edge	and	op2	injure-01	0.0.0.1	0.0.0.1.0	
# ::edge	drive-01	ARG0	person	0.1.2.0.0	0.1.2.0	
# ::edge	follow-02	ARG0	other	0.1	0.1.0	
# ::edge	follow-02	ARG1	insure-02	0.1	0.1.1	
# ::edge	follow-02	ARG2	withdraw-01	0.1	0.1.2	
# ::edge	hope-01	ARG0	he	0	0.0	
# ::edge	hope-01	ARG1	follow-02	0	0.1	
# ::edge	injure-01	ARG0	300000	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	injure-01	ARG1	accident	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	insure-02	ARG1	pearl	0.1.1	0.1.1.0	
# ::edge	involve-01	ARG1	person	0.1.2.0.1	0.1.2.0	
# ::edge	involve-01	ARG2	accident	0.1.2.0.1	0.1.2.0.1.0	
# ::edge	kill-01	ARG0	he	0.0.0	0.0	
# ::edge	kill-01	ARG1	road	0.0.0	0.0.0.0	
# ::edge	limit-01	ARG0	level	0.2	0.2.0	
# ::edge	limit-01	ARG1	hope-01	0.2	0	
# ::edge	limit-01	ARG2	year	0.2	0.2.1	
# ::edge	withdraw-01	ARG0	person	0.1.2	0.1.2.0	
# ::edge	withdraw-01	ARG1	5000	0.1.2	0.1.2.1	
# ::edge	year	mod	last	0.2.1	0.2.1.0	
(h / hope-01 
      :ARG0 (h2 / he 
            :ARG0-of (k / kill-01 
                  :ARG1 (r / road) 
                  :op-of (a2 / and 
                        :op1 (i / injure-01 
                              :ARG0 300000 
                              :ARG1 (a / accident))))) 
      :ARG1 (f / follow-02 
            :ARG0 (o / other) 
            :ARG1 (i3 / insure-02 
                  :ARG1 (p2 / pearl)) 
            :ARG2 (w / withdraw-01 
                  :ARG0 (p / person 
                        :ARG0-of (d / drive-01) 
                        :ARG1-of (i2 / involve-01 
                              :ARG2 (a4 / accident))) 
                  :ARG1 5000)) 
      :ARG1-of (l2 / limit-01 
            :ARG0 (l3 / level) 
            :ARG2 (y / year 
                  :mod (l / last)) 
            :op-of (a3 / above)))

# ::snt but it must never be forgotten that if this happens it happens by accident it can be no part of the system that pupils should be entered for a test because of the age they are or the class they are part of
# ::tok but it must never be forgotten that if this happens it happens by accident it can be no part of the system that pupils should be entered for a test because of the age they are or the class they are part of
# ::alignments 39-40|0.0.1.0.0 38-39|0.0.1.1 36-37|0.0.1 34-35|0.0.0 33-34|0.0 30-31|0 29-30|0.0.1.0 26-27|0.1 24-25|0.1.2 23-24|0.1.1 21-22|0.1.2.0.0 17-18|0.1.2.0.1.0.0 15-16|0.1.2.0.1.0 14-15|0.1.0 13-14|0.1.0.0.2 11-12|0.1.0.0 10-11|0.1.0.0.0 9-10|0.1.0.0.1 8-9|0.1.0.0.1.0 5-6|0.1.2.0.1 1-2|0.1.2.0.1.1 0-1|0.1.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:27.346
# ::node	0	cause-01	30-31
# ::node	0.0	age-01	33-34
# ::node	0.0.0	they	34-35
# ::node	0.0.1	or	36-37
# ::node	0.0.1.0	test-01	29-30
# ::node	0.0.1.0.0	they	39-40
# ::node	0.0.1.1	class	38-39
# ::node	0.1	enter-01	26-27
# ::node	0.1.0	it	14-15
# ::node	0.1.0.0	happen-01	11-12
# ::node	0.1.0.0.0	it	10-11
# ::node	0.1.0.0.1	happen-01	9-10
# ::node	0.1.0.0.1.0	this	8-9
# ::node	0.1.0.0.2	accident	13-14
# ::node	0.1.1	pupil	23-24
# ::node	0.1.2	recommend-01	24-25
# ::node	0.1.2.0	contrast-01	0-1
# ::node	0.1.2.0.0	system	21-22
# ::node	0.1.2.0.1	forget-01	5-6
# ::node	0.1.2.0.1.0	possible	15-16
# ::node	0.1.2.0.1.0.0	-	17-18
# ::node	0.1.2.0.1.1	it	1-2
# ::root	0	cause-01
# ::edge	age-01	ARG0	they	0.0	0.0.0	
# ::edge	cause-01	ARG0	age-01	0	0.0	
# ::edge	cause-01	ARG1	enter-01	0	0.1	
# ::edge	contrast-01	ARG0	system	0.1.2.0	0.1.2.0.0	
# ::edge	contrast-01	ARG1	forget-01	0.1.2.0	0.1.2.0.1	
# ::edge	contrast-01	ARG2	recommend-01	0.1.2.0	0.1.2	
# ::edge	enter-01	ARG0	it	0.1	0.1.0	
# ::edge	enter-01	ARG1	pupil	0.1	0.1.1	
# ::edge	forget-01	ARG0	possible	0.1.2.0.1	0.1.2.0.1.0	
# ::edge	forget-01	ARG1	it	0.1.2.0.1	0.1.2.0.1.1	
# ::edge	happen-01	ARG0	it	0.1.0.0	0.1.0	
# ::edge	happen-01	ARG0	this	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	happen-01	ARG1	happen-01	0.1.0.0.1	0.1.0.0	
# ::edge	happen-01	ARG1	it	0.1.0.0	0.1.0.0.0	
# ::edge	happen-01	ARG2	accident	0.1.0.0	0.1.0.0.2	
# ::edge	or	op1	test-01	0.0.1	0.0.1.0	
# ::edge	or	op2	age-01	0.0.1	0.0	
# ::edge	or	op3	class	0.0.1	0.0.1.1	
# ::edge	possible	polarity	-	0.1.2.0.1.0	0.1.2.0.1.0.0	
# ::edge	recommend-01	ARG1	enter-01	0.1.2	0.1	
# ::edge	test-01	ARG0	they	0.0.1.0	0.0.1.0.0	
(c2 / cause-01 
      :ARG0 (a / age-01 
            :ARG0 (t2 / they) 
            :op-of (o / or 
                  :op1 (t3 / test-01 
                        :ARG0 (t / they)) 
                  :op2 (c / class))) 
      :ARG1 (e / enter-01 
            :ARG0 (i / it 
                  :ARG0-of (h / happen-01 
                        :ARG1 (i2 / it) 
                        :ARG1-of (h2 / happen-01 
                              :ARG0 (t4 / this)) 
                        :ARG2 (a2 / accident))) 
            :ARG1 (p / pupil) 
            :ARG1-of (r / recommend-01 
                  :ARG2-of (c3 / contrast-01 
                        :ARG0 (s / system) 
                        :ARG1 (f / forget-01 
                              :ARG0 (p2 / possible 
                                    :polarity (- / -)) 
                              :ARG1 (i3 / it))))))

# ::snt jimmy knapp general secretary of the nur said that railway travel was still the safest more people are killed on the roads in a day than are killed in train accidents in a year but we are worried about the longterm trend, after years when the number of accidents fell consistently the last few years have seen the process reversed
# ::tok jimmy knapp general secretary of the nur said that railway travel was still the safest more people are killed on the roads in a day than are killed in train accidents in a year but we are worried about the longterm trend , after years when the number of accidents fell consistently the last few years have seen the process reversed
# ::alignments 60-61|0.1.1.0.0.0 59-60|0.1.1.0.0.0.1 57-58|0.1.1.0.0 55-56|0.1.1.0.0.0.0.1+0.1.1.0.0.0.0 54-55|0.1.1.0.0.0.0.0 53-54|0.1.1.0.0.0.0.1.0 51-52|0.1.1.0.0.0.0.1.1.1 50-51|0.1.1.0.0.0.0.1.1 49-50|0.1.1.0.0.0.0.1.1.0.0 47-48|0.1.1.0.0.0.0.1.1.0 44-45|0.1.1.0.0.0.0.1.1.2+0.1.1.0.0.0.0.1.1.2.0 43-44|0.1.1.0.0.1 41-42|0.1.1.1 37-38|0.1.1 35-36|0.1.1.0 34-35|0.1 33-34|0.1.1.1.0 30-31|0.1.2.0 29-30|0.1.2.0.0 27-28|0.1.2 24-25|0.1.2.1 21-22|0.1.0.1 18-19|0.1.0 12-13|0.1.0.0 10-11|0.2 9-10|0.3 7-8|0 3-4|0.0 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:28.717
# ::node	0	say-01	7-8
# ::node	0.0	secretary	3-4
# ::node	0.0.0	general	2-3
# ::node	0.1	contrast-01	34-35
# ::node	0.1.0	kill-01	18-19
# ::node	0.1.0.0	still	12-13
# ::node	0.1.0.1	road	21-22
# ::node	0.1.1	worry-02	37-38
# ::node	0.1.1.0	we	35-36
# ::node	0.1.1.0.0	see-01	57-58
# ::node	0.1.1.0.0.0	reverse-01	60-61
# ::node	0.1.1.0.0.0.0	temporal-quantity	55-56
# ::node	0.1.1.0.0.0.0.0	few	54-55
# ::node	0.1.1.0.0.0.0.1	year	55-56
# ::node	0.1.1.0.0.0.0.1.0	last	53-54
# ::node	0.1.1.0.0.0.0.1.1	fall-01	50-51
# ::node	0.1.1.0.0.0.0.1.1.0	number	47-48
# ::node	0.1.1.0.0.0.0.1.1.0.0	accident	49-50
# ::node	0.1.1.0.0.0.0.1.1.1	consistent	51-52
# ::node	0.1.1.0.0.0.0.1.1.2	year	44-45
# ::node	0.1.1.0.0.0.0.1.1.2.0	temporal-quantity	44-45
# ::node	0.1.1.0.0.0.1	process	59-60
# ::node	0.1.1.0.0.1	after	43-44
# ::node	0.1.1.1	trend-01	41-42
# ::node	0.1.1.1.0	year	33-34
# ::node	0.1.2	kill-01	27-28
# ::node	0.1.2.0	accident	30-31
# ::node	0.1.2.0.0	train	29-30
# ::node	0.1.2.1	day	24-25
# ::node	0.2	travel-01	10-11
# ::node	0.3	railway	9-10
# ::root	0	say-01
# ::edge	accident	mod	train	0.1.2.0	0.1.2.0.0	
# ::edge	accident	quant	number	0.1.1.0.0.0.0.1.1.0.0	0.1.1.0.0.0.0.1.1.0	
# ::edge	after	op1	see-01	0.1.1.0.0.1	0.1.1.0.0	
# ::edge	contrast-01	ARG1	kill-01	0.1	0.1.0	
# ::edge	contrast-01	ARG2	worry-02	0.1	0.1.1	
# ::edge	contrast-01	condition	kill-01	0.1	0.1.2	
# ::edge	fall-01	ARG1	number	0.1.1.0.0.0.0.1.1	0.1.1.0.0.0.0.1.1.0	
# ::edge	fall-01	manner	consistent	0.1.1.0.0.0.0.1.1	0.1.1.0.0.0.0.1.1.1	
# ::edge	fall-01	time	year	0.1.1.0.0.0.0.1.1	0.1.1.0.0.0.0.1	
# ::edge	fall-01	time	year	0.1.1.0.0.0.0.1.1	0.1.1.0.0.0.0.1.1.2	
# ::edge	few	op1	temporal-quantity	0.1.1.0.0.0.0.0	0.1.1.0.0.0.0	
# ::edge	kill-01	ARG0	accident	0.1.2	0.1.2.0	
# ::edge	kill-01	ARG0	still	0.1.0	0.1.0.0	
# ::edge	kill-01	ARG1	day	0.1.2	0.1.2.1	
# ::edge	kill-01	ARG1	road	0.1.0	0.1.0.1	
# ::edge	reverse-01	ARG0	temporal-quantity	0.1.1.0.0.0	0.1.1.0.0.0.0	
# ::edge	reverse-01	ARG1	process	0.1.1.0.0.0	0.1.1.0.0.0.1	
# ::edge	say-01	ARG0	secretary	0	0.0	
# ::edge	say-01	ARG1	contrast-01	0	0.1	
# ::edge	say-01	ARG2	railway	0	0.3	
# ::edge	secretary	mod	general	0.0	0.0.0	
# ::edge	see-01	ARG0	we	0.1.1.0.0	0.1.1.0	
# ::edge	see-01	ARG1	reverse-01	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	temporal-quantity	unit	year	0.1.1.0.0.0.0	0.1.1.0.0.0.0.1	
# ::edge	temporal-quantity	unit	year	0.1.1.0.0.0.0.1.1.2.0	0.1.1.0.0.0.0.1.1.2	
# ::edge	travel-01	ARG1	say-01	0.2	0	
# ::edge	trend-01	mod	year	0.1.1.1	0.1.1.1.0	
# ::edge	worry-02	ARG1	we	0.1.1	0.1.1.0	
# ::edge	worry-02	ARG2	trend-01	0.1.1	0.1.1.1	
# ::edge	year	mod	last	0.1.1.0.0.0.0.1	0.1.1.0.0.0.0.1.0	
(s3 / say-01 
      :ARG0 (s4 / secretary 
            :mod (g / general)) 
      :ARG1 (c2 / contrast-01 
            :ARG1 (k2 / kill-01 
                  :ARG0 (s2 / still) 
                  :ARG1 (r2 / road)) 
            :ARG2 (w / worry-02 
                  :ARG1 (w2 / we 
                        :ARG0-of (s / see-01 
                              :ARG1 (r / reverse-01 
                                    :ARG0 (t / temporal-quantity 
                                          :op-of (f / few) 
                                          :unit (y / year 
                                                :mod (l / last) 
                                                :time-of (f2 / fall-01 
                                                      :ARG1 (n / number 
                                                            :quant-of (a / accident)) 
                                                      :manner (c / consistent) 
                                                      :time (y2 / year 
                                                            :unit-of (t2 / temporal-quantity))))) 
                                    :ARG1 (p / process)) 
                              :op-of (a2 / after))) 
                  :ARG2 (t3 / trend-01 
                        :mod (y3 / year))) 
            :condition (k / kill-01 
                  :ARG0 (a3 / accident 
                        :mod (t4 / train)) 
                  :ARG1 (d / day))) 
      :ARG1-of (t5 / travel-01) 
      :ARG2 (r3 / railway))

# ::snt guided by the lodestar of foreseeability the court suggested as factors to be taken into account whether 1 the plaintiff was located near the scene of the accident 2 the shock resulted from the sensory and contemporaneous observance of the accident and 3 the plaintiff and the victim were closely related
# ::tok guided by the lodestar of foreseeability the court suggested as factors to be taken into account whether 1 the plaintiff was located near the scene of the accident 2 the shock resulted from the sensory and contemporaneous observance of the accident and 3 the plaintiff and the victim were closely related
# ::alignments 50-51|0.0.0.0.0 49-50|0.0.0.0.0.1 47-48|0.0.0.0.1 45-46|0.0.0.0 42-43|0.1.0 41-42|0.0.0.2 40-41|0.0.0.2.1 37-38|0.2 35-36|0 31-32|0.0 30-31|0.0.0 28-29|0.0.0.0.0.0 27-28|0.1.1.0.0 24-25|0.1.1.0 22-23|0.1.1 21-22|0.1 17-18|0.0.0.1 15-16|0.0.0.2.0.0.1.0 10-11|0.0.0.2.0.0.1 8-9|0.0.0.2.0.0 7-8|0.0.0.2.0.0.0 0-1|0.0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:29.345
# ::node	0	and	35-36
# ::node	0.0	result-01	31-32
# ::node	0.0.0	shock-01	30-31
# ::node	0.0.0.0	and	45-46
# ::node	0.0.0.0.0	relate-01	50-51
# ::node	0.0.0.0.0.0	2	28-29
# ::node	0.0.0.0.0.1	close	49-50
# ::node	0.0.0.0.1	victim	47-48
# ::node	0.0.0.1	1	17-18
# ::node	0.0.0.2	and	41-42
# ::node	0.0.0.2.0	guide-01	0-1
# ::node	0.0.0.2.0.0	suggest-01	8-9
# ::node	0.0.0.2.0.0.0	court	7-8
# ::node	0.0.0.2.0.0.1	factor	10-11
# ::node	0.0.0.2.0.0.1.0	account	15-16
# ::node	0.0.0.2.1	accident	40-41
# ::node	0.1	locate-01	21-22
# ::node	0.1.0	3	42-43
# ::node	0.1.1	near	22-23
# ::node	0.1.1.0	scene	24-25
# ::node	0.1.1.0.0	accident	27-28
# ::node	0.2	observance	37-38
# ::root	0	and
# ::edge	account	part	factor	0.0.0.2.0.0.1.0	0.0.0.2.0.0.1	
# ::edge	and	op1	observance	0	0.2	
# ::edge	and	op1	shock-01	0.0.0.2	0.0.0	
# ::edge	and	op1	victim	0.0.0.0	0.0.0.0.1	
# ::edge	and	op2	accident	0.0.0.2	0.0.0.2.1	
# ::edge	guide-01	ARG0	and	0.0.0.2.0	0.0.0.2	
# ::edge	guide-01	ARG1	suggest-01	0.0.0.2.0	0.0.0.2.0.0	
# ::edge	locate-01	ARG0	and	0.1	0	
# ::edge	locate-01	ARG1	3	0.1	0.1.0	
# ::edge	locate-01	location	near	0.1	0.1.1	
# ::edge	near	op1	scene	0.1.1	0.1.1.0	
# ::edge	relate-01	ARG0	2	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	relate-01	ARG1	and	0.0.0.0.0	0.0.0.0	
# ::edge	relate-01	manner	close	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	result-01	ARG0	and	0.0	0	
# ::edge	result-01	ARG1	shock-01	0.0	0.0.0	
# ::edge	scene	mod	accident	0.1.1.0	0.1.1.0.0	
# ::edge	shock-01	ARG0	and	0.0.0	0.0.0.0	
# ::edge	shock-01	ARG1	1	0.0.0	0.0.0.1	
# ::edge	suggest-01	ARG0	court	0.0.0.2.0.0	0.0.0.2.0.0.0	
# ::edge	suggest-01	ARG1	factor	0.0.0.2.0.0	0.0.0.2.0.0.1	
(a4 / and 
      :ARG0-of (r2 / result-01 
            :ARG1 (s / shock-01 
                  :ARG0 (a / and 
                        :ARG1-of (r / relate-01 
                              :ARG0 2 
                              :manner (c / close)) 
                        :op1 (v / victim)) 
                  :ARG1 1 
                  :op-of (a2 / and 
                        :ARG0-of (g / guide-01 
                              :ARG1 (s3 / suggest-01 
                                    :ARG0 (c2 / court) 
                                    :ARG1 (f / factor 
                                          :part-of (a6 / account)))) 
                        :op1 (a3 / accident)))) 
      :ARG0-of (l / locate-01 
            :ARG1 3 
            :location (n / near 
                  :op1 (s2 / scene 
                        :mod (a5 / accident)))) 
      :op1 (o / observance))

# ::snt the a four one three in buckinghamshire at dunton turn between winslow and whitchurch did see two mile tailbacks earlier on this afternoon at that was aylesburybound due to the accident involving a car on fire
# ::tok the a four one three in buckinghamshire at dunton turn between winslow and whitchurch did see two mile tailbacks earlier on this afternoon at that was aylesburybound due to the accident involving a car on fire
# ::alignments 33-34|0.2.0 31-32|0.2 30-31|0.2.1 22-23|0.0.2.0 21-22|0.0.1 19-20|0.0.2 17-18|0.0.0.1+0.0.0 16-17|0.0.0.0 15-16|0.0 12-13|0 10-11|0.1 4-5|0.2.3 2-3|0.2.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:29.554
# ::node	0	and	12-13
# ::node	0.0	see-01	15-16
# ::node	0.0.0	distance-quantity	17-18
# ::node	0.0.0.0	2	16-17
# ::node	0.0.0.1	mile	17-18
# ::node	0.0.1	this	21-22
# ::node	0.0.2	early	19-20
# ::node	0.0.2.0	afternoon	22-23
# ::node	0.1	between	10-11
# ::node	0.2	involve-01	31-32
# ::node	0.2.0	car	33-34
# ::node	0.2.1	accident	30-31
# ::node	0.2.2	4	2-3
# ::node	0.2.3	3	4-5
# ::root	0	and
# ::edge	3	op1	involve-01	0.2.3	0.2	
# ::edge	4	op1	involve-01	0.2.2	0.2	
# ::edge	afternoon	mod	early	0.0.2.0	0.0.2	
# ::edge	and	op1	involve-01	0	0.2	
# ::edge	between	op1	and	0.1	0	
# ::edge	distance-quantity	quant	2	0.0.0	0.0.0.0	
# ::edge	distance-quantity	unit	mile	0.0.0	0.0.0.1	
# ::edge	involve-01	ARG1	car	0.2	0.2.0	
# ::edge	involve-01	ARG2	accident	0.2	0.2.1	
# ::edge	see-01	ARG0	distance-quantity	0.0	0.0.0	
# ::edge	see-01	ARG1	and	0.0	0	
# ::edge	see-01	ARG2	this	0.0	0.0.1	
# ::edge	see-01	time	early	0.0	0.0.2	
(a3 / and 
      :ARG1-of (s / see-01 
            :ARG0 (d / distance-quantity 
                  :quant 2 
                  :unit (m / mile)) 
            :ARG2 (t / this) 
            :time (e / early 
                  :mod-of (a2 / afternoon))) 
      :op-of (b / between) 
      :op1 (i / involve-01 
            :ARG1 (c / car) 
            :ARG2 (a / accident) 
            :op-of 4 
            :op-of 3))

# ::snt when he heard about maries accident he just made a joke
# ::tok when he heard about maries accident he just made a joke
# ::alignments 10-11|0.0.0 7-8|0.0.0.1 6-7|0.0.0.0 5-6|0.1 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:29.600
# ::node	0	hear-01	2-3
# ::node	0.0	he	1-2
# ::node	0.0.0	joke-01	10-11
# ::node	0.0.0.0	he	6-7
# ::node	0.0.0.1	just	7-8
# ::node	0.1	accident	5-6
# ::root	0	hear-01
# ::edge	hear-01	ARG0	he	0	0.0	
# ::edge	hear-01	ARG1	accident	0	0.1	
# ::edge	joke-01	ARG0	he	0.0.0	0.0.0.0	
# ::edge	joke-01	ARG3	he	0.0.0	0.0	
# ::edge	joke-01	time	just	0.0.0	0.0.0.1	
(h2 / hear-01 
      :ARG0 (h3 / he 
            :ARG3-of (j / joke-01 
                  :ARG0 (h / he) 
                  :time (j2 / just))) 
      :ARG1 (a / accident))

# ::snt the government had called in the troops with the greatest reluctance and would withdraw them once the unions agreed to provide a normal accident and emergency service
# ::tok the government had called in the troops with the greatest reluctance and would withdraw them once the unions agreed to provide a normal accident and emergency service
# ::alignments 25-26|0.1.0 24-25|0.1.2.0.1.0 23-24|0.1.2.0.1.1 22-23|0.1.2.0.1.1.0 20-21|0.1.2.0.1 18-19|0.1.2.0 17-18|0.1.2.0.0 15-16|0.1.2 13-14|0.1 11-12|0 10-11|0.0 9-10|0.0.0.0+0.0.0 6-7|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:29.956
# ::node	0	and	11-12
# ::node	0.0	reluctant	10-11
# ::node	0.0.0	great	9-10
# ::node	0.0.0.0	most	9-10
# ::node	0.1	withdraw-01	13-14
# ::node	0.1.0	emergency	25-26
# ::node	0.1.1	troop	6-7
# ::node	0.1.2	once	15-16
# ::node	0.1.2.0	agree-01	18-19
# ::node	0.1.2.0.0	union	17-18
# ::node	0.1.2.0.1	provide-01	20-21
# ::node	0.1.2.0.1.0	and	24-25
# ::node	0.1.2.0.1.1	accident	23-24
# ::node	0.1.2.0.1.1.0	normal	22-23
# ::root	0	and
# ::edge	accident	mod	normal	0.1.2.0.1.1	0.1.2.0.1.1.0	
# ::edge	agree-01	ARG0	union	0.1.2.0	0.1.2.0.0	
# ::edge	agree-01	ARG1	provide-01	0.1.2.0	0.1.2.0.1	
# ::edge	and	op1	reluctant	0	0.0	
# ::edge	and	op2	withdraw-01	0	0.1	
# ::edge	great	degree	most	0.0.0	0.0.0.0	
# ::edge	once	op1	agree-01	0.1.2	0.1.2.0	
# ::edge	provide-01	ARG1	and	0.1.2.0.1	0.1.2.0.1.0	
# ::edge	provide-01	ARG2	accident	0.1.2.0.1	0.1.2.0.1.1	
# ::edge	reluctant	mod	great	0.0	0.0.0	
# ::edge	withdraw-01	ARG0	emergency	0.1	0.1.0	
# ::edge	withdraw-01	ARG1	troop	0.1	0.1.1	
# ::edge	withdraw-01	time	once	0.1	0.1.2	
(a4 / and 
      :op1 (r / reluctant 
            :mod (g / great 
                  :degree (m / most))) 
      :op2 (w / withdraw-01 
            :ARG0 (e / emergency) 
            :ARG1 (t / troop) 
            :time (o / once 
                  :op1 (a3 / agree-01 
                        :ARG0 (u / union) 
                        :ARG1 (p / provide-01 
                              :ARG1 (a / and) 
                              :ARG2 (a2 / accident 
                                    :mod (n / normal)))))))

# ::snt can you imagine an insurance company processing an accident claim form for five months and the insurance company on the other side trying to argue against it when neither has the slightest idea of the date of the accident
# ::tok can you imagine an insurance company processing an accident claim form for five months and the insurance company on the other side trying to argue against it when neither has the slightest idea of the date of the accident
# ::alignments 38-39|0.3.1.0 35-36|0.3.1 32-33|0.3 31-32|0.3.0.0+0.3.0 26-27|0.1 24-25|0 22-23|0.2 21-22|0.2.0 20-21|0.2.0.0 17-18|0.2.1.2.0 16-17|0.0 14-15|0.2.1.2 13-14|0.2.1.3.1+0.2.1.3 12-13|0.2.1.3.0 10-11|0.2.1.1 9-10|0.2.1.1.0 8-9|0.2.1.1.0.0 6-7|0.2.1 5-6|0.2.1.0 4-5|0.2.1.0.0.0.0 2-3|0.2.1.0.0 1-2|0.2.1.0.0.0 0-1|0.2.1.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:30.661
# ::node	0	argue-01	24-25
# ::node	0.0	insure-02	16-17
# ::node	0.1	it	26-27
# ::node	0.2	try-01	22-23
# ::node	0.2.0	side	21-22
# ::node	0.2.0.0	other	20-21
# ::node	0.2.1	process-01	6-7
# ::node	0.2.1.0	company	5-6
# ::node	0.2.1.0.0	imagine-01	2-3
# ::node	0.2.1.0.0.0	you	1-2
# ::node	0.2.1.0.0.0.0	insure-02	4-5
# ::node	0.2.1.0.0.1	possible	0-1
# ::node	0.2.1.1	form	10-11
# ::node	0.2.1.1.0	claim-01	9-10
# ::node	0.2.1.1.0.0	accident	8-9
# ::node	0.2.1.2	and	14-15
# ::node	0.2.1.2.0	company	17-18
# ::node	0.2.1.3	temporal-quantity	13-14
# ::node	0.2.1.3.0	5	12-13
# ::node	0.2.1.3.1	month	13-14
# ::node	0.3	idea	32-33
# ::node	0.3.0	slight	31-32
# ::node	0.3.0.0	most	31-32
# ::node	0.3.1	date	35-36
# ::node	0.3.1.0	accident	38-39
# ::root	0	argue-01
# ::edge	and	op1	process-01	0.2.1.2	0.2.1	
# ::edge	and	op2	company	0.2.1.2	0.2.1.2.0	
# ::edge	argue-01	ARG0	insure-02	0	0.0	
# ::edge	argue-01	ARG1	it	0	0.1	
# ::edge	argue-01	purpose	idea	0	0.3	
# ::edge	claim-01	ARG1	accident	0.2.1.1.0	0.2.1.1.0.0	
# ::edge	date	mod	accident	0.3.1	0.3.1.0	
# ::edge	form	mod	claim-01	0.2.1.1	0.2.1.1.0	
# ::edge	idea	mod	slight	0.3	0.3.0	
# ::edge	idea	topic	date	0.3	0.3.1	
# ::edge	imagine-01	ARG0	you	0.2.1.0.0	0.2.1.0.0.0	
# ::edge	imagine-01	ARG1	company	0.2.1.0.0	0.2.1.0	
# ::edge	imagine-01	mod	possible	0.2.1.0.0	0.2.1.0.0.1	
# ::edge	insure-02	ARG1	you	0.2.1.0.0.0.0	0.2.1.0.0.0	
# ::edge	process-01	ARG0	company	0.2.1	0.2.1.0	
# ::edge	process-01	ARG1	form	0.2.1	0.2.1.1	
# ::edge	process-01	purpose	try-01	0.2.1	0.2	
# ::edge	process-01	time	temporal-quantity	0.2.1	0.2.1.3	
# ::edge	side	mod	other	0.2.0	0.2.0.0	
# ::edge	slight	degree	most	0.3.0	0.3.0.0	
# ::edge	temporal-quantity	quant	5	0.2.1.3	0.2.1.3.0	
# ::edge	temporal-quantity	unit	month	0.2.1.3	0.2.1.3.1	
# ::edge	try-01	ARG0	side	0.2	0.2.0	
# ::edge	try-01	ARG1	argue-01	0.2	0	
(a2 / argue-01 
      :ARG0 (i3 / insure-02) 
      :ARG1 (i2 / it) 
      :ARG1-of (t / try-01 
            :ARG0 (s2 / side 
                  :mod (o / other)) 
            :purpose-of (p / process-01 
                  :ARG0 (c3 / company 
                        :ARG1-of (i5 / imagine-01 
                              :ARG0 (y / you 
                                    :ARG1-of (i4 / insure-02)) 
                              :mod (p2 / possible))) 
                  :ARG1 (f / form 
                        :mod (c2 / claim-01 
                              :ARG1 (a4 / accident))) 
                  :op-of (a3 / and 
                        :op1 (c / company)) 
                  :time (t2 / temporal-quantity 
                        :quant 5 
                        :unit (m2 / month)))) 
      :purpose (i / idea 
            :mod (s / slight 
                  :degree (m / most)) 
            :topic (d / date 
                  :mod (a / accident))))

# ::snt at least 30 vehicles were involved in the accident on the a45 at haughley near stowmarket suffolk which caused a 10mile tailback, elsewhere at least two other people died in fogrelated accidents massive tailbacks formed on motorways and airports ground to a halt
# ::tok at least 30 vehicles were involved in the accident on the a45 at haughley near stowmarket suffolk which caused a 10mile tailback , elsewhere at least two other people died in fogrelated accidents massive tailbacks formed on motorways and airports ground to a halt
# ::alignments 43-44|0.0.0 40-41|0.0 39-40|0.1.1.1.0 38-39|0.1.1.1 35-36|0.1.1 33-34|0.0.0.1 32-33|0.1.2 29-30|0.1 27-28|0.1.0.0.0 26-27|0.1.0.0.2 23-24|0.0.0.0 18-19|0 14-15|0.1.1.0 8-9|0.1.0 5-6|0.1.0.0 3-4|0.1.0.0.1 2-3|0.1.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:30.900
# ::node	0	cause-01	18-19
# ::node	0.0	ground	40-41
# ::node	0.0.0	halt-01	43-44
# ::node	0.0.0.0	elsewhere	23-24
# ::node	0.0.0.1	massive	33-34
# ::node	0.1	die-01	29-30
# ::node	0.1.0	accident	8-9
# ::node	0.1.0.0	involve-01	5-6
# ::node	0.1.0.0.0	other	27-28
# ::node	0.1.0.0.1	vehicle	3-4
# ::node	0.1.0.0.1.0	30	2-3
# ::node	0.1.0.0.2	2	26-27
# ::node	0.1.1	form-01	35-36
# ::node	0.1.1.0	near	14-15
# ::node	0.1.1.1	and	38-39
# ::node	0.1.1.1.0	airport	39-40
# ::node	0.1.2	accident	32-33
# ::root	0	cause-01
# ::edge	2	op1	involve-01	0.1.0.0.2	0.1.0.0	
# ::edge	and	op1	airport	0.1.1.1	0.1.1.1.0	
# ::edge	cause-01	ARG0	ground	0	0.0	
# ::edge	cause-01	ARG1	die-01	0	0.1	
# ::edge	die-01	ARG0	accident	0.1	0.1.0	
# ::edge	die-01	ARG1	form-01	0.1	0.1.1	
# ::edge	die-01	ARG2	accident	0.1	0.1.2	
# ::edge	form-01	ARG0	near	0.1.1	0.1.1.0	
# ::edge	form-01	ARG1	and	0.1.1	0.1.1.1	
# ::edge	ground	purpose	halt-01	0.0	0.0.0	
# ::edge	halt-01	ARG0	elsewhere	0.0.0	0.0.0.0	
# ::edge	halt-01	ARG1	massive	0.0.0	0.0.0.1	
# ::edge	involve-01	ARG0	other	0.1.0.0	0.1.0.0.0	
# ::edge	involve-01	ARG1	vehicle	0.1.0.0	0.1.0.0.1	
# ::edge	involve-01	ARG2	accident	0.1.0.0	0.1.0	
# ::edge	vehicle	quant	30	0.1.0.0.1	0.1.0.0.1.0	
(c / cause-01 
      :ARG0 (g / ground 
            :purpose (h / halt-01 
                  :ARG0 (e / elsewhere) 
                  :ARG1 (m / massive))) 
      :ARG1 (d / die-01 
            :ARG0 (a4 / accident 
                  :ARG2-of (i / involve-01 
                        :ARG0 (o / other) 
                        :ARG1 (v / vehicle 
                              :quant 30) 
                        :op-of 2)) 
            :ARG1 (f / form-01 
                  :ARG0 (n / near) 
                  :ARG1 (a2 / and 
                        :op1 (a / airport))) 
            :ARG2 (a3 / accident)))

# ::snt adrian salter counsel for miss wolf said she made a remarkable recovery returning to work three months after the accident
# ::tok adrian salter counsel for miss wolf said she made a remarkable recovery returning to work three months after the accident
# ::alignments 19-20|0.1.0.0.0 17-18|0.1.0.0 16-17|0.1.0.0.1.1+0.1.0.0.1 15-16|0.1.0.0.1.0 12-13|0.1.0 11-12|0.1 10-11|0.1.1 7-8|0.0 6-7|0 5-6|0.2.0 2-3|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:31.203
# ::node	0	say-01	6-7
# ::node	0.0	she	7-8
# ::node	0.1	recover-01	11-12
# ::node	0.1.0	return-01	12-13
# ::node	0.1.0.0	after	17-18
# ::node	0.1.0.0.0	accident	19-20
# ::node	0.1.0.0.1	temporal-quantity	16-17
# ::node	0.1.0.0.1.0	3	15-16
# ::node	0.1.0.0.1.1	month	16-17
# ::node	0.1.1	remarkable	10-11
# ::node	0.2	counsel-01	2-3
# ::node	0.2.0	wolf	5-6
# ::root	0	say-01
# ::edge	after	op1	accident	0.1.0.0	0.1.0.0.0	
# ::edge	after	quant	temporal-quantity	0.1.0.0	0.1.0.0.1	
# ::edge	counsel-01	ARG1	wolf	0.2	0.2.0	
# ::edge	recover-01	mod	remarkable	0.1	0.1.1	
# ::edge	return-01	ARG1	recover-01	0.1.0	0.1	
# ::edge	return-01	time	after	0.1.0	0.1.0.0	
# ::edge	say-01	ARG0	she	0	0.0	
# ::edge	say-01	ARG1	recover-01	0	0.1	
# ::edge	say-01	time	counsel-01	0	0.2	
# ::edge	temporal-quantity	quant	3	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	temporal-quantity	unit	month	0.1.0.0.1	0.1.0.0.1.1	
(s2 / say-01 
      :ARG0 (s / she) 
      :ARG1 (r2 / recover-01 
            :ARG1-of (r / return-01 
                  :time (a2 / after 
                        :op1 (a / accident) 
                        :quant (t / temporal-quantity 
                              :quant 3 
                              :unit (m / month)))) 
            :mod (r3 / remarkable)) 
      :time (c / counsel-01 
            :ARG1 (w / wolf)))

# ::snt teaching the planters there to make decent tea  a motorist involved in an accident with a pack of hounds has criticised the bicester hunt for allowing them to run unsupervised across a public road
# ::tok teaching the planters there to make decent tea a motorist involved in an accident with a pack of hounds has criticised the bicester hunt for allowing them to run unsupervised across a public road
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:31.204
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt fire and ambulance crews were called to the scene of the accident but were not needed
# ::tok fire and ambulance crews were called to the scene of the accident but were not needed
# ::alignments 15-16|0.0 12-13|0 11-12|0.0.0.0 8-9|0.0.0 2-3|0.0.1.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:31.224
# ::node	0	contrast-01	12-13
# ::node	0.0	need-01	15-16
# ::node	0.0.0	scene	8-9
# ::node	0.0.0.0	accident	11-12
# ::node	0.0.1	and	1-2
# ::node	0.0.1.0	ambulance	2-3
# ::root	0	contrast-01
# ::edge	and	op1	ambulance	0.0.1	0.0.1.0	
# ::edge	and	op2	need-01	0.0.1	0.0	
# ::edge	contrast-01	ARG2	need-01	0	0.0	
# ::edge	need-01	ARG1	scene	0.0	0.0.0	
# ::edge	scene	mod	accident	0.0.0	0.0.0.0	
(c / contrast-01 
      :ARG2 (n / need-01 
            :ARG1 (s / scene 
                  :mod (a / accident)) 
            :op-of (a3 / and 
                  :op1 (a2 / ambulance))))

# ::snt premium income from accident and health especially in the us but also in the uk and australia rose by 23 per cent while premium income from life insurance notably in group business in the netherlands went up by 9 per cent
# ::tok premium income from accident and health especially in the us but also in the uk and australia rose by 23 per cent while premium income from life insurance notably in group business in the netherlands went up by 9 per cent
# ::alignments 40-41|0.2.2.0.0.2.0+0.2.2.0.0.2 38-39|0.2.2.1 31-32|0.2.2.0.0.1.0 30-31|0.2.2.0.0.1 28-29|0.2.2.0.0.1.0.0 27-28|0.2.2.0.0 26-27|0.2.2.0.0.3 24-25|0.2.2.0 21-22|0.2.2.0.0.3.0.0+0.2.2.0.0.3.0 19-20|0.0 17-18|0.2.2 16-17|0.2.1.0.0+0.2.1.0+0.2.1 15-16|0.2 11-12|0.2.0 10-11|0 6-7|0.2.2.0.0.0 5-6|0.1.1 4-5|0.1 3-4|0.1.0 1-2|0.1.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:31.680
# ::node	0	contrast-01	10-11
# ::node	0.0	23	19-20
# ::node	0.1	and	4-5
# ::node	0.1.0	accident	3-4
# ::node	0.1.1	health	5-6
# ::node	0.1.2	income	1-2
# ::node	0.2	and	15-16
# ::node	0.2.0	also	11-12
# ::node	0.2.1	country	16-17
# ::node	0.2.1.0	name	16-17
# ::node	0.2.1.0.0	"Australia"	16-17
# ::node	0.2.2	rise-01	17-18
# ::node	0.2.2.0	income	24-25
# ::node	0.2.2.0.0	insure-02	27-28
# ::node	0.2.2.0.0.0	especially	6-7
# ::node	0.2.2.0.0.1	group	30-31
# ::node	0.2.2.0.0.1.0	business	31-32
# ::node	0.2.2.0.0.1.0.0	notable	28-29
# ::node	0.2.2.0.0.2	monetary-quantity	40-41
# ::node	0.2.2.0.0.2.0	cent	40-41
# ::node	0.2.2.0.0.3	life	26-27
# ::node	0.2.2.0.0.3.0	monetary-quantity	21-22
# ::node	0.2.2.0.0.3.0.0	cent	21-22
# ::node	0.2.2.1	9	38-39
# ::root	0	contrast-01
# ::edge	9	op1	rise-01	0.2.2.1	0.2.2	
# ::edge	and	mod	also	0.2	0.2.0	
# ::edge	and	op1	accident	0.1	0.1.0	
# ::edge	and	op1	country	0.2	0.2.1	
# ::edge	and	op2	health	0.1	0.1.1	
# ::edge	and	op2	rise-01	0.2	0.2.2	
# ::edge	business	mod	notable	0.2.2.0.0.1.0	0.2.2.0.0.1.0.0	
# ::edge	business	poss	group	0.2.2.0.0.1.0	0.2.2.0.0.1	
# ::edge	contrast-01	ARG0	23	0	0.0	
# ::edge	contrast-01	ARG1	and	0	0.1	
# ::edge	contrast-01	ARG2	and	0	0.2	
# ::edge	country	name	name	0.2.1	0.2.1.0	
# ::edge	income	poss	and	0.1.2	0.1	
# ::edge	income	purpose	insure-02	0.2.2.0	0.2.2.0.0	
# ::edge	insure-02	ARG0	especially	0.2.2.0.0	0.2.2.0.0.0	
# ::edge	insure-02	ARG1	group	0.2.2.0.0	0.2.2.0.0.1	
# ::edge	insure-02	ARG2	monetary-quantity	0.2.2.0.0	0.2.2.0.0.2	
# ::edge	insure-02	ARG4	life	0.2.2.0.0	0.2.2.0.0.3	
# ::edge	monetary-quantity	topic	life	0.2.2.0.0.3.0	0.2.2.0.0.3	
# ::edge	monetary-quantity	unit	cent	0.2.2.0.0.2	0.2.2.0.0.2.0	
# ::edge	monetary-quantity	unit	cent	0.2.2.0.0.3.0	0.2.2.0.0.3.0.0	
# ::edge	name	op1	"Australia"	0.2.1.0	0.2.1.0.0	
# ::edge	rise-01	ARG0	income	0.2.2	0.2.2.0	
(c4 / contrast-01 
      :ARG0 23 
      :ARG1 (a3 / and 
            :op1 (a4 / accident) 
            :op2 (h / health) 
            :poss-of (i3 / income)) 
      :ARG2 (a / and 
            :mod (a2 / also) 
            :op1 (c3 / country 
                  :name (n2 / name 
                        :op1 "Australia")) 
            :op2 (r / rise-01 
                  :ARG0 (i2 / income 
                        :purpose (i / insure-02 
                              :ARG0 (e / especially) 
                              :ARG1 (g / group 
                                    :poss-of (b / business 
                                          :mod (n / notable))) 
                              :ARG2 (m / monetary-quantity 
                                    :unit (c / cent)) 
                              :ARG4 (l / life 
                                    :topic-of (m2 / monetary-quantity 
                                          :unit (c2 / cent))))) 
                  :op-of 9)))

# ::snt nancy beth cruzan has been unconscious since she was injured in a car accident six years ago
# ::tok nancy beth cruzan has been unconscious since she was injured in a car accident six years ago
# ::alignments 15-16|0.1.0.1.0.0.0.0+0.1.0.1.0.0.0 14-15|0.1.0.1.0.0 13-14|0.1.0.1 12-13|0.1.0.1.0 9-10|0.1.0 7-8|0.1.0.0 6-7|0.1 5-6|0.0+0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:31.721
# ::node	0	conscious	5-6
# ::node	0.0	-	5-6
# ::node	0.1	since	6-7
# ::node	0.1.0	injure-01	9-10
# ::node	0.1.0.0	she	7-8
# ::node	0.1.0.1	accident	13-14
# ::node	0.1.0.1.0	car	12-13
# ::node	0.1.0.1.0.0	6	14-15
# ::node	0.1.0.1.0.0.0	temporal-quantity	15-16
# ::node	0.1.0.1.0.0.0.0	year	15-16
# ::root	0	conscious
# ::edge	6	location	car	0.1.0.1.0.0	0.1.0.1.0	
# ::edge	accident	location	car	0.1.0.1	0.1.0.1.0	
# ::edge	conscious	polarity	-	0	0.0	
# ::edge	conscious	time	since	0	0.1	
# ::edge	injure-01	ARG1	she	0.1.0	0.1.0.0	
# ::edge	injure-01	ARG2	accident	0.1.0	0.1.0.1	
# ::edge	since	op1	injure-01	0.1	0.1.0	
# ::edge	temporal-quantity	quant	6	0.1.0.1.0.0.0	0.1.0.1.0.0	
# ::edge	temporal-quantity	unit	year	0.1.0.1.0.0.0	0.1.0.1.0.0.0.0	
(c2 / conscious 
      :polarity - 
      :time (s2 / since 
            :op1 (i / injure-01 
                  :ARG1 (s / she) 
                  :ARG2 (a / accident 
                        :location (c / car 
                              :location-of (6 / 6 
                                    :quant-of (t / temporal-quantity 
                                          :unit (y / year))))))))

# ::snt it is perhaps no accident that the two most contented among them had both fought their own way from workingclass childhoods to their present comfort
# ::tok it is perhaps no accident that the two most contented among them had both fought their own way from workingclass childhoods to their present comfort
# ::alignments 24-25|0.0 23-24|0 17-18|0.0.2.2 14-15|0.0.2 13-14|0.0.2.0 10-11|0.0.2.3 8-9|0.0.0 7-8|0.0.1 4-5|0.0.2.1.0 3-4|0.0.2.1.0.1 2-3|0.0.2.1.0.0 0-1|0.0.2.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:31.995
# ::node	0	present	23-24
# ::node	0.0	comfort-01	24-25
# ::node	0.0.0	most	8-9
# ::node	0.0.1	2	7-8
# ::node	0.0.2	fight-01	14-15
# ::node	0.0.2.0	both	13-14
# ::node	0.0.2.1	it	0-1
# ::node	0.0.2.1.0	accident	4-5
# ::node	0.0.2.1.0.0	perhaps	2-3
# ::node	0.0.2.1.0.1	-	3-4
# ::node	0.0.2.2	way	17-18
# ::node	0.0.2.3	among	10-11
# ::root	0	present
(p / present 
      :time-of (c / comfort-01 
            :ARG0 (m / most) 
            :ARG2 2 
            :ARG2-of (f / fight-01 
                  :ARG0 (b / both) 
                  :ARG1 (i / it 
                        :domain-of (a2 / accident 
                              :mod (p2 / perhaps) 
                              :polarity (- / -))) 
                  :manner (w / way) 
                  :time (a / among))))

# ::snt and the gag of the day was the revelation that another instructor had failed to report to work because she had a slight accident and scratched her tiny beat volvo ellip
# ::tok and the gag of the day was the revelation that another instructor had failed to report to work because she had a slight accident and scratched her tiny beat volvo ellip
# ::alignments 28-29|0.1.1.0 27-28|0.1.1.0.1 24-25|0.1.1 23-24|0.0 22-23|0.0.0 19-20|0.1.1.0.0 18-19|0 15-16|0.1 13-14|0.1.0 10-11|0.1.1.0.2 8-9|0.1.0.0.0 5-6|0.1.1.0.3 0-1|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:32.231
# ::node	0	cause-01	18-19
# ::node	0.0	accident	23-24
# ::node	0.0.0	slight	22-23
# ::node	0.1	report	15-16
# ::node	0.1.0	fail-01	13-14
# ::node	0.1.0.0	and	0-1
# ::node	0.1.0.0.0	revelation	8-9
# ::node	0.1.1	and	24-25
# ::node	0.1.1.0	beat-01	28-29
# ::node	0.1.1.0.0	she	19-20
# ::node	0.1.1.0.1	tiny	27-28
# ::node	0.1.1.0.2	another	10-11
# ::node	0.1.1.0.3	day	5-6
# ::root	0	cause-01
# ::edge	accident	mod	slight	0.0	0.0.0	
# ::edge	and	op1	beat-01	0.1.1	0.1.1.0	
# ::edge	and	op1	revelation	0.1.0.0	0.1.0.0.0	
# ::edge	another	op1	beat-01	0.1.1.0.2	0.1.1.0	
# ::edge	beat-01	ARG0	she	0.1.1.0	0.1.1.0.0	
# ::edge	beat-01	mod	tiny	0.1.1.0	0.1.1.0.1	
# ::edge	cause-01	ARG0	accident	0	0.0	
# ::edge	cause-01	ARG1	report	0	0.1	
# ::edge	day	op1	beat-01	0.1.1.0.3	0.1.1.0	
# ::edge	fail-01	ARG1	and	0.1.0	0.1.0.0	
# ::edge	fail-01	ARG2	report	0.1.0	0.1	
# ::edge	report	purpose	and	0.1	0.1.1	
(c / cause-01 
      :ARG0 (a2 / accident 
            :mod (s / slight)) 
      :ARG1 (r / report 
            :ARG2-of (f / fail-01 
                  :ARG1 (a4 / and 
                        :op1 (r2 / revelation))) 
            :purpose (a / and 
                  :op1 (b / beat-01 
                        :ARG0 (s2 / she) 
                        :mod (t / tiny) 
                        :op-of (a3 / another) 
                        :op-of (d / day)))))

# ::snt sister jane was the widow of an army officer and her only child a son had been killed in a hunting accident
# ::tok sister jane was the widow of an army officer and her only child a son had been killed in a hunting accident
# ::alignments 21-22|0.0.0 20-21|0.0.0.0 17-18|0.0 14-15|0.0.0.0.0.0+0.0.0.0.0 12-13|0.2 11-12|0.2.1 9-10|0 8-9|0.1 7-8|0.1.0 0-1|0.2.0.0+0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:32.313
# ::node	0	and	9-10
# ::node	0.0	kill-01	17-18
# ::node	0.0.0	accident	21-22
# ::node	0.0.0.0	hunt-01	20-21
# ::node	0.0.0.0.0	have-rel-role-91	14-15
# ::node	0.0.0.0.0.0	son	14-15
# ::node	0.1	officer	8-9
# ::node	0.1.0	army	7-8
# ::node	0.2	child	12-13
# ::node	0.2.0	have-rel-role-91	0-1
# ::node	0.2.0.0	sister	0-1
# ::node	0.2.1	only	11-12
# ::root	0	and
# ::edge	accident	location	hunt-01	0.0.0	0.0.0.0	
# ::edge	and	op1	officer	0	0.1	
# ::edge	and	op2	child	0	0.2	
# ::edge	child	mod	only	0.2	0.2.1	
# ::edge	have-rel-role-91	ARG1	child	0.2.0	0.2	
# ::edge	have-rel-role-91	ARG2	sister	0.2.0	0.2.0.0	
# ::edge	have-rel-role-91	ARG2	son	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	hunt-01	ARG0	have-rel-role-91	0.0.0.0	0.0.0.0.0	
# ::edge	kill-01	ARG0	and	0.0	0	
# ::edge	kill-01	location	accident	0.0	0.0.0	
# ::edge	officer	mod	army	0.1	0.1.0	
(a2 / and 
      :ARG0-of (k / kill-01 
            :location (a / accident 
                  :location (h / hunt-01 
                        :ARG0 (h2 / have-rel-role-91 
                              :ARG2 (s / son))))) 
      :op1 (o2 / officer 
            :mod (a3 / army)) 
      :op2 (c / child 
            :ARG1-of (h3 / have-rel-role-91 
                  :ARG2 (s2 / sister)) 
            :mod (o / only)))

# ::snt richard edmunds l9 a leicestershire and young england cricketer died in hospital in leicester three weeks after being injured in a road accident
# ::tok richard edmunds l9 a leicestershire and young england cricketer died in hospital in leicester three weeks after being injured in a road accident
# ::alignments 22-23|0.0.1.0.0 21-22|0.0.1.0.0.0 18-19|0.0.1.0 16-17|0.0.1 15-16|0.0.1.1.1+0.0.1.1 14-15|0.0.1.1.0 11-12|0.0.0 9-10|0.0 7-8|0.0.1.0.0.1.0.0+0.0.1.0.0.1.0+0.0.1.0.0.1 6-7|0.1 5-6|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:32.381
# ::node	0	and	5-6
# ::node	0.0	die-01	9-10
# ::node	0.0.0	hospital	11-12
# ::node	0.0.1	after	16-17
# ::node	0.0.1.0	injure-01	18-19
# ::node	0.0.1.0.0	accident	22-23
# ::node	0.0.1.0.0.0	road	21-22
# ::node	0.0.1.0.0.1	country	7-8
# ::node	0.0.1.0.0.1.0	name	7-8
# ::node	0.0.1.0.0.1.0.0	"England"	7-8
# ::node	0.0.1.1	temporal-quantity	15-16
# ::node	0.0.1.1.0	3	14-15
# ::node	0.0.1.1.1	week	15-16
# ::node	0.1	young	6-7
# ::root	0	and
# ::edge	accident	location	road	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	accident	poss	country	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	after	op1	injure-01	0.0.1	0.0.1.0	
# ::edge	after	quant	temporal-quantity	0.0.1	0.0.1.1	
# ::edge	and	op1	young	0	0.1	
# ::edge	country	name	name	0.0.1.0.0.1	0.0.1.0.0.1.0	
# ::edge	die-01	ARG0	and	0.0	0	
# ::edge	die-01	location	hospital	0.0	0.0.0	
# ::edge	die-01	time	after	0.0	0.0.1	
# ::edge	injure-01	ARG1	accident	0.0.1.0	0.0.1.0.0	
# ::edge	name	op1	"England"	0.0.1.0.0.1.0	0.0.1.0.0.1.0.0	
# ::edge	temporal-quantity	quant	3	0.0.1.1	0.0.1.1.0	
# ::edge	temporal-quantity	unit	week	0.0.1.1	0.0.1.1.1	
(a3 / and 
      :ARG0-of (d / die-01 
            :location (h / hospital) 
            :time (a2 / after 
                  :op1 (i / injure-01 
                        :ARG1 (a / accident 
                              :location (r / road) 
                              :poss (c / country 
                                    :name (n / name 
                                          :op1 "England")))) 
                  :quant (t / temporal-quantity 
                        :quant 3 
                        :unit (w / week)))) 
      :op1 (y / young))

# ::snt all the old trouble between the son and father had been forgotten about michael even laughed out loud once when it came up by accident
# ::tok all the old trouble between the son and father had been forgotten about michael even laughed out loud once when it came up by accident
# ::alignments 24-25|0.0.0 20-21|0.1.0 18-19|0.1.1 17-18|0.1.1.0 15-16|0.1 11-12|0 8-9|0.0.2.1.0+0.0.2.1 7-8|0.0.1 6-7|0.0.2.0.0+0.0.2.0 4-5|0.0.2 3-4|0.0 2-3|0.0.3 0-1|0.0.4 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:32.636
# ::node	0	forget-01	11-12
# ::node	0.0	trouble-01	3-4
# ::node	0.0.0	accident	24-25
# ::node	0.0.1	and	7-8
# ::node	0.0.2	between	4-5
# ::node	0.0.2.0	have-rel-role-91	6-7
# ::node	0.0.2.0.0	son	6-7
# ::node	0.0.2.1	have-rel-role-91	8-9
# ::node	0.0.2.1.0	father	8-9
# ::node	0.0.3	old	2-3
# ::node	0.0.4	all	0-1
# ::node	0.1	laugh-01	15-16
# ::node	0.1.0	it	20-21
# ::node	0.1.1	once	18-19
# ::node	0.1.1.0	loud	17-18
# ::root	0	forget-01
# ::edge	between	op1	have-rel-role-91	0.0.2	0.0.2.0	
# ::edge	between	op2	have-rel-role-91	0.0.2	0.0.2.1	
# ::edge	forget-01	ARG1	trouble-01	0	0.0	
# ::edge	forget-01	manner	laugh-01	0	0.1	
# ::edge	have-rel-role-91	ARG2	father	0.0.2.1	0.0.2.1.0	
# ::edge	have-rel-role-91	ARG2	son	0.0.2.0	0.0.2.0.0	
# ::edge	laugh-01	ARG1	it	0.1	0.1.0	
# ::edge	laugh-01	time	once	0.1	0.1.1	
# ::edge	once	mod	loud	0.1.1	0.1.1.0	
# ::edge	trouble-01	ARG0	accident	0.0	0.0.0	
# ::edge	trouble-01	ARG1	and	0.0	0.0.1	
# ::edge	trouble-01	location	between	0.0	0.0.2	
# ::edge	trouble-01	mod	old	0.0	0.0.3	
# ::edge	trouble-01	quant	all	0.0	0.0.4	
(f / forget-01 
      :ARG1 (t / trouble-01 
            :ARG0 (a / accident) 
            :ARG1 (a2 / and) 
            :location (b / between 
                  :op1 (h2 / have-rel-role-91 
                        :ARG2 (s / son)) 
                  :op2 (h / have-rel-role-91 
                        :ARG2 (f2 / father))) 
            :mod (o2 / old) 
            :quant (a3 / all)) 
      :manner (l2 / laugh-01 
            :ARG1 (i / it) 
            :time (o / once 
                  :mod (l / loud))))

# ::snt the accident was wholly avoidable
# ::tok the accident was wholly avoidable
# ::alignments 3-4|0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:32.641
# ::node	0	accident	1-2
# ::node	0.0	whole	3-4
# ::root	0	accident
(a / accident 
      :location-of (w / whole))

# ::snt gene hackman is the proprietor sunk in maudlin refusal to accept the death of his wife in an accident looking after his senile fatherinlaw burgess meredith and under pressure to sell up by unscrupulous parties out for a killing in real estate
# ::tok gene hackman is the proprietor sunk in maudlin refusal to accept the death of his wife in an accident looking after his senile fatherinlaw burgess meredith and under pressure to sell up by unscrupulous parties out for a killing in real estate
# ::alignments 41-42|0.0.0.1.0 40-41|0.0.0.1.0.0 38-39|0.0.0.1 34-35|0.0.0.2 30-31|0.0.0 28-29|0.0 26-27|0 22-23|0.0.0.0.1.0.0 20-21|0.0.0.0.0.1 18-19|0.0.0.0 15-16|0.0.0.0.0.0+0.0.0.0.0 12-13|0.0.0.0.1.0 10-11|0.0.0.0.1 8-9|0.0.0.0.1.1 5-6|0.0.0.0.1.2 0-1|0.0.0.0.1.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:33.122
# ::node	0	and	26-27
# ::node	0.0	pressure-01	28-29
# ::node	0.0.0	sell-01	30-31
# ::node	0.0.0.0	accident	18-19
# ::node	0.0.0.0.0	have-rel-role-91	15-16
# ::node	0.0.0.0.0.0	wife	15-16
# ::node	0.0.0.0.0.1	after	20-21
# ::node	0.0.0.0.1	accept-01	10-11
# ::node	0.0.0.0.1.0	die-01	12-13
# ::node	0.0.0.0.1.0.0	senile	22-23
# ::node	0.0.0.0.1.1	refuse-01	8-9
# ::node	0.0.0.0.1.2	sink-01	5-6
# ::node	0.0.0.0.1.2.0	gene	0-1
# ::node	0.0.0.1	kill-01	38-39
# ::node	0.0.0.1.0	estate	41-42
# ::node	0.0.0.1.0.0	real	40-41
# ::node	0.0.0.2	party	34-35
# ::root	0	and
# ::edge	accept-01	ARG1	die-01	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	accept-01	purpose	accident	0.0.0.0.1	0.0.0.0	
# ::edge	and	op1	pressure-01	0	0.0	
# ::edge	die-01	ARG1	senile	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	estate	mod	real	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	have-rel-role-91	ARG1	accident	0.0.0.0.0	0.0.0.0	
# ::edge	have-rel-role-91	ARG2	wife	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	have-rel-role-91	manner	after	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	kill-01	ARG1	estate	0.0.0.1	0.0.0.1.0	
# ::edge	pressure-01	ARG1	sell-01	0.0	0.0.0	
# ::edge	refuse-01	ARG1	accept-01	0.0.0.0.1.1	0.0.0.0.1	
# ::edge	sell-01	ARG0	accident	0.0.0	0.0.0.0	
# ::edge	sell-01	purpose	kill-01	0.0.0	0.0.0.1	
# ::edge	sell-01	purpose	party	0.0.0	0.0.0.2	
# ::edge	sink-01	ARG1	gene	0.0.0.0.1.2	0.0.0.0.1.2.0	
# ::edge	sink-01	purpose	accept-01	0.0.0.0.1.2	0.0.0.0.1	
(a / and 
      :op1 (p2 / pressure-01 
            :ARG1 (s / sell-01 
                  :ARG0 (a3 / accident 
                        :ARG1-of (h / have-rel-role-91 
                              :ARG2 (w / wife) 
                              :manner (a2 / after)) 
                        :purpose-of (a4 / accept-01 
                              :ARG1 (d / die-01 
                                    :ARG1 (s2 / senile)) 
                              :ARG1-of (r2 / refuse-01) 
                              :purpose-of (s3 / sink-01 
                                    :ARG1 (g / gene)))) 
                  :purpose (k / kill-01 
                        :ARG1 (e / estate 
                              :mod (r / real))) 
                  :purpose (p / party))))

# ::snt mr watts described how his sister had been left penniless and desperate after the sun alliance insurance company and its chairman lord aldington had refused to pay out on an accident insurance policy on her husband because he had not revealed that he had been treated on several occasions for excessive drinking
# ::tok mr watts described how his sister had been left penniless and desperate after the sun alliance insurance company and its chairman lord aldington had refused to pay out on an accident insurance policy on her husband because he had not revealed that he had been treated on several occasions for excessive drinking
# ::alignments 51-52|0.0.1.1 50-51|0.0.1.1.0 48-49|0.0.0.0.1 47-48|0.0.0.0.1.0 45-46|0.0.1 42-43|0.0.1.0 40-41|0.0 37-38|0.0.0 36-37|0 35-36|0.0.0.0.0+0.0.0.0 32-33|0.1.1.1 31-32|0.1.1.1.0 30-31|0.1.1.1.0.0 26-27|0.1.1 24-25|0.1 21-22|0.1.1.0.0.0 20-21|0.1.0.0.0+0.1.0.0 18-19|0.1.1.0 17-18|0.1.0 16-17|0.1.0.1 15-16|0.1.0.1.0 14-15|0.1.0.2 12-13|0.1.1.0.0 11-12|0.1.1.0.1.0.0 10-11|0.1.1.0.1.0 5-6|0.1.1.0.0.1.0+0.1.1.0.0.1 2-3|0.1.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:33.991
# ::node	0	cause-01	36-37
# ::node	0.0	reveal-01	40-41
# ::node	0.0.0	he	37-38
# ::node	0.0.0.0	have-rel-role-91	35-36
# ::node	0.0.0.0.0	husband	35-36
# ::node	0.0.0.0.1	occasion	48-49
# ::node	0.0.0.0.1.0	several	47-48
# ::node	0.0.1	treat-01	45-46
# ::node	0.0.1.0	he	42-43
# ::node	0.0.1.1	drink-01	51-52
# ::node	0.0.1.1.0	excessive	50-51
# ::node	0.1	refuse-01	24-25
# ::node	0.1.0	company	17-18
# ::node	0.1.0.0	have-org-role-91	20-21
# ::node	0.1.0.0.0	chairman	20-21
# ::node	0.1.0.1	insure-02	16-17
# ::node	0.1.0.1.0	alliance	15-16
# ::node	0.1.0.2	sun	14-15
# ::node	0.1.1	pay-01	26-27
# ::node	0.1.1.0	and	18-19
# ::node	0.1.1.0.0	after	12-13
# ::node	0.1.1.0.0.0	lord	21-22
# ::node	0.1.1.0.0.1	have-rel-role-91	5-6
# ::node	0.1.1.0.0.1.0	sister	5-6
# ::node	0.1.1.0.1	describe-01	2-3
# ::node	0.1.1.0.1.0	and	10-11
# ::node	0.1.1.0.1.0.0	desperate	11-12
# ::node	0.1.1.1	policy	32-33
# ::node	0.1.1.1.0	insure-02	31-32
# ::node	0.1.1.1.0.0	accident	30-31
# ::root	0	cause-01
# ::edge	after	op1	and	0.1.1.0.0	0.1.1.0	
# ::edge	after	op2	lord	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	and	op1	describe-01	0.1.1.0	0.1.1.0.1	
# ::edge	and	op1	desperate	0.1.1.0.1.0	0.1.1.0.1.0.0	
# ::edge	cause-01	ARG0	reveal-01	0	0.0	
# ::edge	cause-01	ARG1	refuse-01	0	0.1	
# ::edge	company	mod	insure-02	0.1.0	0.1.0.1	
# ::edge	company	mod	sun	0.1.0	0.1.0.2	
# ::edge	describe-01	ARG1	and	0.1.1.0.1	0.1.1.0.1.0	
# ::edge	drink-01	degree	excessive	0.0.1.1	0.0.1.1.0	
# ::edge	have-org-role-91	ARG1	company	0.1.0.0	0.1.0	
# ::edge	have-org-role-91	ARG2	chairman	0.1.0.0	0.1.0.0.0	
# ::edge	have-rel-role-91	ARG1	he	0.0.0.0	0.0.0	
# ::edge	have-rel-role-91	ARG2	husband	0.0.0.0	0.0.0.0.0	
# ::edge	have-rel-role-91	ARG2	sister	0.1.1.0.0.1	0.1.1.0.0.1.0	
# ::edge	have-rel-role-91	time	after	0.1.1.0.0.1	0.1.1.0.0	
# ::edge	insure-02	ARG1	accident	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	insure-02	ARG1	alliance	0.1.0.1	0.1.0.1.0	
# ::edge	occasion	domain	have-rel-role-91	0.0.0.0.1	0.0.0.0	
# ::edge	occasion	quant	several	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	pay-01	ARG0	and	0.1.1	0.1.1.0	
# ::edge	pay-01	ARG1	policy	0.1.1	0.1.1.1	
# ::edge	policy	topic	insure-02	0.1.1.1	0.1.1.1.0	
# ::edge	refuse-01	ARG0	company	0.1	0.1.0	
# ::edge	refuse-01	ARG1	pay-01	0.1	0.1.1	
# ::edge	reveal-01	ARG0	he	0.0	0.0.0	
# ::edge	reveal-01	ARG1	treat-01	0.0	0.0.1	
# ::edge	treat-01	ARG1	he	0.0.1	0.0.1.0	
# ::edge	treat-01	ARG2	drink-01	0.0.1	0.0.1.1	
(c / cause-01 
      :ARG0 (r / reveal-01 
            :ARG0 (h2 / he 
                  :ARG1-of (h3 / have-rel-role-91 
                        :ARG2 (h4 / husband) 
                        :domain-of (o / occasion 
                              :quant (s / several)))) 
            :ARG1 (t / treat-01 
                  :ARG1 (h / he) 
                  :ARG2 (d / drink-01 
                        :degree (e / excessive)))) 
      :ARG1 (r2 / refuse-01 
            :ARG0 (c3 / company 
                  :ARG1-of (h5 / have-org-role-91 
                        :ARG2 (c2 / chairman)) 
                  :mod (i2 / insure-02 
                        :ARG1 (a3 / alliance)) 
                  :mod (s2 / sun)) 
            :ARG1 (p2 / pay-01 
                  :ARG0 (a2 / and 
                        :op-of (a4 / after 
                              :op1 (l / lord) 
                              :time-of (h6 / have-rel-role-91 
                                    :ARG2 (s3 / sister))) 
                        :op1 (d3 / describe-01 
                              :ARG1 (a5 / and 
                                    :op1 (d2 / desperate)))) 
                  :ARG1 (p / policy 
                        :topic (i / insure-02 
                              :ARG1 (a / accident))))))

# ::snt it was as chance would have it an accident with a horse that brought about his final retirement from practice
# ::tok it was as chance would have it an accident with a horse that brought about his final retirement from practice
# ::alignments 19-20|0.1 17-18|0 16-17|0.2 11-12|0.1.0.0 8-9|0.1.0.1 6-7|0.1.1 3-4|0.1.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:34.021
# ::node	0	retire-01	17-18
# ::node	0.0	it	0-1
# ::node	0.1	practice-01	19-20
# ::node	0.1.0	chance	3-4
# ::node	0.1.0.0	horse	11-12
# ::node	0.1.0.1	accident	8-9
# ::node	0.1.1	it	6-7
# ::node	0.2	final	16-17
# ::root	0	retire-01
# ::edge	accident	quant	chance	0.1.0.1	0.1.0	
# ::edge	horse	poss	chance	0.1.0.0	0.1.0	
# ::edge	practice-01	ARG0	chance	0.1	0.1.0	
# ::edge	practice-01	ARG1	it	0.1	0.1.1	
# ::edge	retire-01	ARG0	it	0	0.0	
# ::edge	retire-01	ARG1	practice-01	0	0.1	
# ::edge	retire-01	mod	final	0	0.2	
(r / retire-01 
      :ARG0 (i2 / it) 
      :ARG1 (p / practice-01 
            :ARG0 (c / chance 
                  :poss-of (h / horse) 
                  :quant-of (a / accident)) 
            :ARG1 (i / it)) 
      :mod (f / final))

# ::snt many of the unregistered firms are competent but safety experts say the accident rate with noncorgi firms is nine times higher than with fitters belonging to the confederation
# ::tok many of the unregistered firms are competent but safety experts say the accident rate with noncorgi firms is nine times higher than with fitters belonging to the confederation
# ::alignments 24-25|0.1.2.0 20-21|0.1.2.1 18-19|0.0.1 16-17|0.1.2.2 13-14|0.1.2 12-13|0.1.1 10-11|0.1 9-10|0.1.0.0+0.1.0 8-9|0.1.0.0.0 7-8|0 6-7|0.0 4-5|0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:34.240
# ::node	0	contrast-01	7-8
# ::node	0.0	competent-41	6-7
# ::node	0.0.0	firm	4-5
# ::node	0.0.0.0	many	0-1
# ::node	0.0.1	9	18-19
# ::node	0.1	say-01	10-11
# ::node	0.1.0	person	9-10
# ::node	0.1.0.0	expert-41	9-10
# ::node	0.1.0.0.0	safe-41	8-9
# ::node	0.1.1	accident	12-13
# ::node	0.1.2	rate	13-14
# ::node	0.1.2.0	belong-01	24-25
# ::node	0.1.2.1	high	20-21
# ::node	0.1.2.2	firm	16-17
# ::root	0	contrast-01
# ::edge	belong-01	ARG1	rate	0.1.2.0	0.1.2	
# ::edge	competent-41	ARG0	firm	0.0	0.0.0	
# ::edge	competent-41	ARG1	9	0.0	0.0.1	
# ::edge	contrast-01	ARG1	competent-41	0	0.0	
# ::edge	contrast-01	ARG2	say-01	0	0.1	
# ::edge	expert-41	ARG1	person	0.1.0.0	0.1.0	
# ::edge	expert-41	ARG2	safe-41	0.1.0.0	0.1.0.0.0	
# ::edge	firm	quant	many	0.0.0	0.0.0.0	
# ::edge	high	compared-to	rate	0.1.2.1	0.1.2	
# ::edge	rate	poss	firm	0.1.2	0.1.2.2	
# ::edge	say-01	ARG0	person	0.1	0.1.0	
# ::edge	say-01	ARG1	accident	0.1	0.1.1	
# ::edge	say-01	ARG2	rate	0.1	0.1.2	
(c / contrast-01 
      :ARG1 (c2 / competent-41 
            :ARG0 (f2 / firm 
                  :quant (m / many)) 
            :ARG1 9) 
      :ARG2 (s / say-01 
            :ARG0 (p / person 
                  :ARG1-of (e / expert-41 
                        :ARG2 (s2 / safe-41))) 
            :ARG1 (a / accident) 
            :ARG2 (r / rate 
                  :ARG1-of (b / belong-01) 
                  :compared-to-of (h / high) 
                  :poss (f / firm))))

# ::snt the soviet coskipper of fazisi alexei gryschenko committed suicide and janne gustaffson of the swedish ketch the card died as a result of a motor cycle accident
# ::tok the soviet coskipper of fazisi alexei gryschenko committed suicide and janne gustaffson of the swedish ketch the card died as a result of a motor cycle accident
# ::alignments 26-27|0.0.0 25-26|0.0 24-25|0 21-22|0.0.0.0 18-19|0.0.0.0.1 17-18|0.0.0.0.1.0 9-10|0.0.0.0.0.0 8-9|0.0.0.0.0 7-8|0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:34.328
# ::node	0	motorcycle	24-25
# ::node	0.0	cycle	25-26
# ::node	0.0.0	accident	26-27
# ::node	0.0.0.0	result-01	21-22
# ::node	0.0.0.0.0	suicide	8-9
# ::node	0.0.0.0.0.0	and	9-10
# ::node	0.0.0.0.0.0.0	commit-01	7-8
# ::node	0.0.0.0.1	die-01	18-19
# ::node	0.0.0.0.1.0	card	17-18
# ::root	0	motorcycle
(m / motorcycle 
      :mod-of (c / cycle 
            :location-of (a / accident 
                  :ARG1-of (r / result-01 
                        :ARG0 (s / suicide 
                              :op-of (a2 / and 
                                    :ARG1-of (c3 / commit-01))) 
                        :ARG2 (d / die-01 
                              :ARG1 (c2 / card))))))

# ::snt   it has been said that norling entered refereeing through the accident of a back injury when he was in school but this is not the complete case
# ::tok it has been said that norling entered refereeing through the accident of a back injury when he was in school but this is not the complete case
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:34.328
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt derek warwick who broke some small bones in his spine in a karting accident in jersey 10 days ago still hopes to be fit for sundays british grand prix at silverstone
# ::tok derek warwick who broke some small bones in his spine in a karting accident in jersey 10 days ago still hopes to be fit for sundays british grand prix at silverstone
# ::alignments 27-28|0.0.0.1 23-24|0.0.0 20-21|0.0 19-20|0.0.2 17-18|0.0.0.0.1+0.0.0.0 16-17|0.0.0.0.0 13-14|0.0.1 9-10|0.2 6-7|0 5-6|0.1 4-5|0.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:34.550
# ::node	0	bone	6-7
# ::node	0.0	hope-01	20-21
# ::node	0.0.0	fit-01	23-24
# ::node	0.0.0.0	temporal-quantity	17-18
# ::node	0.0.0.0.0	10	16-17
# ::node	0.0.0.0.1	day	17-18
# ::node	0.0.0.1	grand	27-28
# ::node	0.0.1	accident	13-14
# ::node	0.0.2	still	19-20
# ::node	0.1	small	5-6
# ::node	0.2	spine	9-10
# ::node	0.3	some	4-5
# ::root	0	bone
# ::edge	bone	mod	small	0	0.1	
# ::edge	bone	quant	some	0	0.3	
# ::edge	fit-01	ARG0	temporal-quantity	0.0.0	0.0.0.0	
# ::edge	fit-01	ARG1	grand	0.0.0	0.0.0.1	
# ::edge	hope-01	ARG0	bone	0.0	0	
# ::edge	hope-01	ARG1	fit-01	0.0	0.0.0	
# ::edge	hope-01	ARG2	accident	0.0	0.0.1	
# ::edge	hope-01	mod	still	0.0	0.0.2	
# ::edge	spine	part	bone	0.2	0	
# ::edge	temporal-quantity	quant	10	0.0.0.0	0.0.0.0.0	
# ::edge	temporal-quantity	unit	day	0.0.0.0	0.0.0.0.1	
(b / bone 
      :ARG0-of (h / hope-01 
            :ARG1 (f / fit-01 
                  :ARG0 (t / temporal-quantity 
                        :quant 10 
                        :unit (d / day)) 
                  :ARG1 (g / grand)) 
            :ARG2 (a / accident) 
            :mod (s / still)) 
      :mod (s3 / small) 
      :part-of (s2 / spine) 
      :quant (s4 / some))

# ::snt minor accidents occurred on a section of wootton road at white cross at lunchtime after an oil or typo baddiesalgooddiesel spillage made road conditions treacherous, sergeant leigh owen from abingdon police said they were not sure what or where the spillage came from but said i believe there have been a few accidents although none have been reported as yet
# ::tok minor accidents occurred on a section of wootton road at white cross at lunchtime after an oil or typo baddiesalgooddiesel spillage made road conditions treacherous , sergeant leigh owen from abingdon police said they were not sure what or where the spillage came from but said i believe there have been a few accidents although none have been reported as yet
# ::alignments 60-61|0.0.1.0.1 58-59|0.0.1.0 55-56|0.0.1.0.0 53-54|0.0.1 52-53|0.0.1.1 47-48|0.0 46-47|0.0.0 45-46|0 44-45|0.1 38-39|0.1.1.2 33-34|0.1.1.1 32-33|0.1.1 31-32|0.1.1.0 23-24|0.1.0 22-23|0.1.0.0 17-18|0.1.1.2.0.0 16-17|0.1.1.2.0 14-15|0.1.1.2.0.0.1 13-14|0.1.1.2.0.0.0 11-12|0.1.1.2.0.0.0.0 10-11|0.1.1.2.0.0.0.0.1 8-9|0.1.1.2.0.0.0.0.0.0 5-6|0.1.1.2.0.0.0.0.0 1-2|0.1.1.2.0.0.2.0 0-1|0.1.1.2.0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:36.032
# ::node	0	say-01	45-46
# ::node	0.0	believe-01	47-48
# ::node	0.0.0	i	46-47
# ::node	0.0.1	accident	53-54
# ::node	0.0.1.0	report-01	58-59
# ::node	0.0.1.0.0	none	55-56
# ::node	0.0.1.0.1	yet	60-61
# ::node	0.0.1.1	few	52-53
# ::node	0.1	contrast-01	44-45
# ::node	0.1.0	condition	23-24
# ::node	0.1.0.0	road	22-23
# ::node	0.1.1	say-01	32-33
# ::node	0.1.1.0	police	31-32
# ::node	0.1.1.1	they	33-34
# ::node	0.1.1.2	or	38-39
# ::node	0.1.1.2.0	oil	16-17
# ::node	0.1.1.2.0.0	or	17-18
# ::node	0.1.1.2.0.0.0	lunch-01	13-14
# ::node	0.1.1.2.0.0.0.0	cross-02	11-12
# ::node	0.1.1.2.0.0.0.0.0	section	5-6
# ::node	0.1.1.2.0.0.0.0.0.0	road	8-9
# ::node	0.1.1.2.0.0.0.0.1	white	10-11
# ::node	0.1.1.2.0.0.1	after	14-15
# ::node	0.1.1.2.0.0.2	minor	0-1
# ::node	0.1.1.2.0.0.2.0	accident	1-2
# ::root	0	say-01
# ::edge	accident	mod	minor	0.1.1.2.0.0.2.0	0.1.1.2.0.0.2	
# ::edge	accident	quant	few	0.0.1	0.0.1.1	
# ::edge	after	op1	or	0.1.1.2.0.0.1	0.1.1.2.0.0	
# ::edge	believe-01	ARG0	i	0.0	0.0.0	
# ::edge	believe-01	ARG1	accident	0.0	0.0.1	
# ::edge	condition	mod	road	0.1.0	0.1.0.0	
# ::edge	contrast-01	ARG1	condition	0.1	0.1.0	
# ::edge	contrast-01	ARG2	say-01	0.1	0	
# ::edge	contrast-01	concession	say-01	0.1	0.1.1	
# ::edge	cross-02	ARG0	section	0.1.1.2.0.0.0.0	0.1.1.2.0.0.0.0.0	
# ::edge	cross-02	ARG1	lunch-01	0.1.1.2.0.0.0.0	0.1.1.2.0.0.0	
# ::edge	cross-02	mod	white	0.1.1.2.0.0.0.0	0.1.1.2.0.0.0.0.1	
# ::edge	lunch-01	ARG1	or	0.1.1.2.0.0.0	0.1.1.2.0.0	
# ::edge	oil	condition	or	0.1.1.2.0	0.1.1.2	
# ::edge	or	op1	minor	0.1.1.2.0.0	0.1.1.2.0.0.2	
# ::edge	or	op1	say-01	0.1.1.2	0.1.1	
# ::edge	or	op2	oil	0.1.1.2.0.0	0.1.1.2.0	
# ::edge	report-01	ARG0	accident	0.0.1.0	0.0.1	
# ::edge	report-01	ARG1	none	0.0.1.0	0.0.1.0.0	
# ::edge	report-01	manner	yet	0.0.1.0	0.0.1.0.1	
# ::edge	road	part	section	0.1.1.2.0.0.0.0.0.0	0.1.1.2.0.0.0.0.0	
# ::edge	say-01	ARG0	police	0.1.1	0.1.1.0	
# ::edge	say-01	ARG1	believe-01	0	0.0	
# ::edge	say-01	ARG1	they	0.1.1	0.1.1.1	
(s / say-01 
      :ARG1 (b / believe-01 
            :ARG0 (i / i) 
            :ARG1 (a / accident 
                  :ARG0-of (r / report-01 
                        :ARG1 (n / none) 
                        :manner (y / yet)) 
                  :quant (f / few))) 
      :ARG2-of (c / contrast-01 
            :ARG1 (c2 / condition 
                  :mod (r2 / road)) 
            :concession (s2 / say-01 
                  :ARG0 (p / police) 
                  :ARG1 (t / they) 
                  :op-of (o / or 
                        :condition-of (o3 / oil 
                              :op-of (o2 / or 
                                    :ARG1-of (l / lunch-01 
                                          :ARG1-of (c3 / cross-02 
                                                :ARG0 (s3 / section 
                                                      :part-of (r3 / road)) 
                                                :mod (w / white))) 
                                    :op-of (a2 / after) 
                                    :op1 (m / minor 
                                          :mod-of (a3 / accident))))))))

# ::snt perhaps it was no accident that he had started his career under lloyd george
# ::tok perhaps it was no accident that he had started his career under lloyd george
# ::alignments 10-11|0.0.0 8-9|0 6-7|0.0 4-5|0.1.0 3-4|0.1.0.0 1-2|0.1 0-1|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:36.065
# ::node	0	start-01	8-9
# ::node	0.0	he	6-7
# ::node	0.0.0	career	10-11
# ::node	0.1	it	1-2
# ::node	0.1.0	accident	4-5
# ::node	0.1.0.0	-	3-4
# ::node	0.1.1	perhaps	0-1
# ::root	0	start-01
# ::edge	accident	domain	it	0.1.0	0.1	
# ::edge	accident	polarity	-	0.1.0	0.1.0.0	
# ::edge	career	poss	he	0.0.0	0.0	
# ::edge	it	mod	perhaps	0.1	0.1.1	
# ::edge	start-01	ARG0	he	0	0.0	
# ::edge	start-01	ARG1	it	0	0.1	
(s / start-01 
      :ARG0 (h / he 
            :poss-of (c / career)) 
      :ARG1 (i / it 
            :domain-of (a / accident 
                  :polarity (- / -)) 
            :mod (p / perhaps)))

# ::snt the band were involved in a car accident and while they had thought that there were no casualties their sound man subsequently suffered from dizzy spells and was unable to work the night of the gig
# ::tok the band were involved in a car accident and while they had thought that there were no casualties their sound man subsequently suffered from dizzy spells and was unable to work the night of the gig
# ::alignments 35-36|0.0.1.0 32-33|0.0.1.1 26-27|0 25-26|0.0.1 22-23|0.0 21-22|0.0.2 20-21|0.0.0 19-20|0.0.0.0 17-18|0.0.0.1 16-17|0.0.0.1.1 12-13|0.0.0.1.0 10-11|0.0.0.1.0.0 8-9|0.0.0.1.0.1 7-8|0.0.0.1.0.1.0.1 6-7|0.0.0.1.0.1.0.1.0 3-4|0.0.0.1.0.1.0 1-2|0.0.0.1.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:36.467
# ::node	0	and	26-27
# ::node	0.0	suffer-01	22-23
# ::node	0.0.0	man	20-21
# ::node	0.0.0.0	sound	19-20
# ::node	0.0.0.1	casualty	17-18
# ::node	0.0.0.1.0	think-01	12-13
# ::node	0.0.0.1.0.0	they	10-11
# ::node	0.0.0.1.0.1	and	8-9
# ::node	0.0.0.1.0.1.0	involve-01	3-4
# ::node	0.0.0.1.0.1.0.0	band	1-2
# ::node	0.0.0.1.0.1.0.1	accident	7-8
# ::node	0.0.0.1.0.1.0.1.0	car	6-7
# ::node	0.0.0.1.1	-	16-17
# ::node	0.0.1	spell-03	25-26
# ::node	0.0.1.0	gig	35-36
# ::node	0.0.1.1	night	32-33
# ::node	0.0.2	subsequent	21-22
# ::root	0	and
# ::edge	accident	location	car	0.0.0.1.0.1.0.1	0.0.0.1.0.1.0.1.0	
# ::edge	and	op1	suffer-01	0	0.0	
# ::edge	and	op1	think-01	0.0.0.1.0.1	0.0.0.1.0	
# ::edge	casualty	polarity	-	0.0.0.1	0.0.0.1.1	
# ::edge	involve-01	ARG1	band	0.0.0.1.0.1.0	0.0.0.1.0.1.0.0	
# ::edge	involve-01	ARG3	accident	0.0.0.1.0.1.0	0.0.0.1.0.1.0.1	
# ::edge	involve-01	location	and	0.0.0.1.0.1.0	0.0.0.1.0.1	
# ::edge	man	mod	sound	0.0.0	0.0.0.0	
# ::edge	man	poss	casualty	0.0.0	0.0.0.1	
# ::edge	spell-03	ARG0	gig	0.0.1	0.0.1.0	
# ::edge	spell-03	ARG1	night	0.0.1	0.0.1.1	
# ::edge	suffer-01	ARG0	man	0.0	0.0.0	
# ::edge	suffer-01	ARG1	spell-03	0.0	0.0.1	
# ::edge	suffer-01	time	subsequent	0.0	0.0.2	
# ::edge	think-01	ARG0	they	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	think-01	ARG1	casualty	0.0.0.1.0	0.0.0.1	
(a / and 
      :op1 (s2 / suffer-01 
            :ARG0 (m / man 
                  :mod (s4 / sound) 
                  :poss (c / casualty 
                        :ARG1-of (t / think-01 
                              :ARG0 (t2 / they) 
                              :op-of (a2 / and 
                                    :location-of (i / involve-01 
                                          :ARG1 (b / band) 
                                          :ARG3 (a3 / accident 
                                                :location (c2 / car))))) 
                        :polarity (- / -))) 
            :ARG1 (s / spell-03 
                  :ARG0 (g / gig) 
                  :ARG1 (n / night)) 
            :time (s3 / subsequent)))

# ::snt it is as her party comrades would once have said no accident that the heroine of her most famous novel the golden notebook bears the surname wulf
# ::tok it is as her party comrades would once have said no accident that the heroine of her most famous novel the golden notebook bears the surname wulf
# ::alignments 23-24|0.1.0+0.1 22-23|0.1.0.1 21-22|0.1.0.1.1 19-20|0.1.0.1.0 18-19|0.1.0.1.0.0 17-18|0.1.0.1.0.0.0 14-15|0.1.0.0 11-12|0.2.0 10-11|0.2 9-10|0 7-8|0.3 5-6|0.0+0.0.0 4-5|0.0.0.0 0-1|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:36.987
# ::node	0	say-01	9-10
# ::node	0.0	comrade	5-6
# ::node	0.0.0	have-rel-role-91	5-6
# ::node	0.0.0.0	party	4-5
# ::node	0.0.0.0.0	it	0-1
# ::node	0.1	thing	23-24
# ::node	0.1.0	bear-01	23-24
# ::node	0.1.0.0	heroine	14-15
# ::node	0.1.0.1	notebook	22-23
# ::node	0.1.0.1.0	novel	19-20
# ::node	0.1.0.1.0.0	famous	18-19
# ::node	0.1.0.1.0.0.0	most	17-18
# ::node	0.1.0.1.1	gold	21-22
# ::node	0.2	-	10-11
# ::node	0.2.0	accident	11-12
# ::node	0.3	once	7-8
# ::root	0	say-01
# ::edge	accident	polarity	-	0.2.0	0.2	
# ::edge	bear-01	ARG0	heroine	0.1.0	0.1.0.0	
# ::edge	bear-01	ARG1	notebook	0.1.0	0.1.0.1	
# ::edge	bear-01	manner	thing	0.1.0	0.1	
# ::edge	famous	degree	most	0.1.0.1.0.0	0.1.0.1.0.0.0	
# ::edge	have-rel-role-91	ARG0	party	0.0.0	0.0.0.0	
# ::edge	have-rel-role-91	ARG2	comrade	0.0.0	0.0	
# ::edge	notebook	mod	gold	0.1.0.1	0.1.0.1.1	
# ::edge	notebook	mod	novel	0.1.0.1	0.1.0.1.0	
# ::edge	novel	mod	famous	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	party	poss	it	0.0.0.0	0.0.0.0.0	
# ::edge	say-01	ARG0	comrade	0	0.0	
# ::edge	say-01	ARG1	thing	0	0.1	
# ::edge	say-01	polarity	-	0	0.2	
# ::edge	say-01	time	once	0	0.3	
(s / say-01 
      :ARG0 (c / comrade 
            :ARG2-of (h2 / have-rel-role-91 
                  :ARG0 (p / party 
                        :poss (i / it)))) 
      :ARG1 (t / thing 
            :manner-of (b / bear-01 
                  :ARG0 (h / heroine) 
                  :ARG1 (n / notebook 
                        :mod (n2 / novel 
                              :mod (f / famous 
                                    :degree (m / most))) 
                        :mod (g / gold)))) 
      :polarity (- / - 
            :polarity-of (a / accident)) 
      :time (o / once))

# ::snt she felt a tiny moment of pride this was an accident that her power had brought about and phoebe knew it
# ::tok she felt a tiny moment of pride this was an accident that her power had brought about and phoebe knew it
# ::alignments 20-21|0.1.1 19-20|0.1 17-18|0 13-14|0.1.0.1 10-11|0.0.0 7-8|0.0.0.0 6-7|0.0 4-5|0.1.0.0.0 3-4|0.1.0.0.0.0 1-2|0.1.0.0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:37.211
# ::node	0	and	17-18
# ::node	0.0	pride-01	6-7
# ::node	0.0.0	accident	10-11
# ::node	0.0.0.0	this	7-8
# ::node	0.1	know-01	19-20
# ::node	0.1.0	she	0-1
# ::node	0.1.0.0	feel-01	1-2
# ::node	0.1.0.0.0	moment	4-5
# ::node	0.1.0.0.0.0	tiny	3-4
# ::node	0.1.0.1	power	13-14
# ::node	0.1.1	it	20-21
# ::root	0	and
# ::edge	accident	domain	this	0.0.0	0.0.0.0	
# ::edge	and	op1	know-01	0	0.1	
# ::edge	feel-01	ARG0	she	0.1.0.0	0.1.0	
# ::edge	feel-01	ARG1	moment	0.1.0.0	0.1.0.0.0	
# ::edge	know-01	ARG0	she	0.1	0.1.0	
# ::edge	know-01	ARG1	it	0.1	0.1.1	
# ::edge	moment	mod	tiny	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	pride-01	ARG0	and	0.0	0	
# ::edge	pride-01	ARG1	accident	0.0	0.0.0	
# ::edge	she	part	power	0.1.0	0.1.0.1	
(a / and 
      :ARG0-of (p2 / pride-01 
            :ARG1 (a2 / accident 
                  :domain (t / this))) 
      :op1 (k / know-01 
            :ARG0 (s / she 
                  :ARG0-of (f / feel-01 
                        :ARG1 (m / moment 
                              :mod (t2 / tiny))) 
                  :part (p / power)) 
            :ARG1 (i / it)))

# ::snt and yet there are accidents
# ::tok and yet there are accidents
# ::alignments 4-5|0.0.0 1-2|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:37.216
# ::node	0	and	0-1
# ::node	0.0	yet	1-2
# ::node	0.0.0	accident	4-5
# ::root	0	and
# ::edge	and	op1	yet	0	0.0	
# ::edge	yet	example	accident	0.0	0.0.0	
(a2 / and 
      :op1 (y / yet 
            :example (a / accident)))

# ::snt by accident when intending to denigrate the boys ability to go the distance
# ::tok by accident when intending to denigrate the boys ability to go the distance
# ::alignments 12-13|0.0.0 8-9|0.0 7-8|0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:37.228
# ::node	0	boy	7-8
# ::node	0.0	ability	8-9
# ::node	0.0.0	distance-01	12-13
# ::node	0.0.0.0	accident	1-2
# ::root	0	boy
(b / boy 
      :mod-of (a / ability 
            :ARG0-of (d / distance-01 
                  :ARG1 (a2 / accident))))

# ::snt fifteen people were killed in 10 road accidents over the weekend, four people died after an accident on the m1 near milton keynes buckinghamshire and three were killed at stonehaven grampian in a collision involving a car and lorry, two people died in separate accidents at ferndown dorset and there were further fatal accidents at alton hampshire crawley sussex yarnton oxfordshire bromham wiltshire princes risborough buckinghamshire and hayling island hampshire
# ::tok fifteen people were killed in 10 road accidents over the weekend , four people died after an accident on the m1 near milton keynes buckinghamshire and three were killed at stonehaven grampian in a collision involving a car and lorry , two people died in separate accidents at ferndown dorset and there were further fatal accidents at alton hampshire crawley sussex yarnton oxfordshire bromham wiltshire princes risborough buckinghamshire and hayling island hampshire
# ::alignments 70-71|0.1 68-69|0 55-56|0.0.1.0 54-55|0.0.1.0.1 53-54|0.0.1.0.0 50-51|0.0 46-47|0.0.1.1 45-46|0.0.1.1.0 43-44|0.0.1 41-42|0.0.0.1.1.0.0 38-39|0.0.0.1.1.0.3.1.0 37-38|0.0.0.1.1.0.3.1.0.0 35-36|0.0.0.1.1.0.3.1 34-35|0.0.0.1.1.0.3 28-29|0.0.0.1.1.0 26-27|0.0.0.0 25-26|0.0.0.1.1.0.1 22-24|0.0.0.1.1.0.1.0.1.0+0.0.0.1.1.0.1.0.1.1+0.0.0.1.1.0.1.0.1+0.0.0.1.1.0.1.0 21-22|0.0.0.1.1.0.1.0.0 17-18|0.0.0.1.0 15-16|0.0.0.1.1 14-15|0.0.0.1 12-13|0.0.0.1.1.0.3.0 10-11|0.0.0.2.1 7-8|0.0.0.2 6-7|0.0.0.2.0 5-6|0.0.0.1.1.0.2 3-4|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:37.928
# ::node	0	and	68-69
# ::node	0.0	and	50-51
# ::node	0.0.0	kill-01	3-4
# ::node	0.0.0.0	3	26-27
# ::node	0.0.0.1	die-01	14-15
# ::node	0.0.0.1.0	accident	17-18
# ::node	0.0.0.1.1	after	15-16
# ::node	0.0.0.1.1.0	kill-01	28-29
# ::node	0.0.0.1.1.0.0	2	41-42
# ::node	0.0.0.1.1.0.1	and	25-26
# ::node	0.0.0.1.1.0.1.0	country	22-24
# ::node	0.0.0.1.1.0.1.0.0	near	21-22
# ::node	0.0.0.1.1.0.1.0.1	name	22-24
# ::node	0.0.0.1.1.0.1.0.1.0	"keynes"	22-24
# ::node	0.0.0.1.1.0.1.0.1.1	"milton"	22-24
# ::node	0.0.0.1.1.0.2	10	5-6
# ::node	0.0.0.1.1.0.3	collide-01	34-35
# ::node	0.0.0.1.1.0.3.0	4	12-13
# ::node	0.0.0.1.1.0.3.1	involve-01	35-36
# ::node	0.0.0.1.1.0.3.1.0	and	38-39
# ::node	0.0.0.1.1.0.3.1.0.0	car	37-38
# ::node	0.0.0.2	accident	7-8
# ::node	0.0.0.2.0	road	6-7
# ::node	0.0.0.2.1	weekend	10-11
# ::node	0.0.1	die-01	43-44
# ::node	0.0.1.0	accident	55-56
# ::node	0.0.1.0.0	further	53-54
# ::node	0.0.1.0.1	fatal	54-55
# ::node	0.0.1.1	accident	46-47
# ::node	0.0.1.1.0	separate	45-46
# ::node	0.1	island	70-71
# ::root	0	and
# ::edge	10	op1	kill-01	0.0.0.1.1.0.2	0.0.0.1.1.0	
# ::edge	accident	location	road	0.0.0.2	0.0.0.2.0	
# ::edge	accident	location	weekend	0.0.0.2	0.0.0.2.1	
# ::edge	accident	mod	fatal	0.0.1.0	0.0.1.0.1	
# ::edge	accident	mod	further	0.0.1.0	0.0.1.0.0	
# ::edge	accident	mod	separate	0.0.1.1	0.0.1.1.0	
# ::edge	after	op1	kill-01	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	and	op1	car	0.0.0.1.1.0.3.1.0	0.0.0.1.1.0.3.1.0.0	
# ::edge	and	op1	country	0.0.0.1.1.0.1	0.0.0.1.1.0.1.0	
# ::edge	and	op1	island	0	0.1	
# ::edge	and	op1	kill-01	0.0	0.0.0	
# ::edge	and	op2	die-01	0.0	0.0.1	
# ::edge	and	op3	and	0.0	0	
# ::edge	collide-01	ARG0	4	0.0.0.1.1.0.3	0.0.0.1.1.0.3.0	
# ::edge	country	mod	near	0.0.0.1.1.0.1.0	0.0.0.1.1.0.1.0.0	
# ::edge	country	name	name	0.0.0.1.1.0.1.0	0.0.0.1.1.0.1.0.1	
# ::edge	die-01	ARG1	accident	0.0.0.1	0.0.0.1.0	
# ::edge	die-01	ARG1	accident	0.0.1	0.0.1.0	
# ::edge	die-01	ARG2	accident	0.0.1	0.0.1.1	
# ::edge	die-01	time	after	0.0.0.1	0.0.0.1.1	
# ::edge	involve-01	ARG1	and	0.0.0.1.1.0.3.1	0.0.0.1.1.0.3.1.0	
# ::edge	involve-01	ARG2	collide-01	0.0.0.1.1.0.3.1	0.0.0.1.1.0.3	
# ::edge	kill-01	ARG0	2	0.0.0.1.1.0	0.0.0.1.1.0.0	
# ::edge	kill-01	ARG0	3	0.0.0	0.0.0.0	
# ::edge	kill-01	ARG1	and	0.0.0.1.1.0	0.0.0.1.1.0.1	
# ::edge	kill-01	ARG1	die-01	0.0.0	0.0.0.1	
# ::edge	kill-01	location	accident	0.0.0	0.0.0.2	
# ::edge	kill-01	time	collide-01	0.0.0.1.1.0	0.0.0.1.1.0.3	
# ::edge	name	op1	"keynes"	0.0.0.1.1.0.1.0.1	0.0.0.1.1.0.1.0.1.0	
# ::edge	name	op2	"milton"	0.0.0.1.1.0.1.0.1	0.0.0.1.1.0.1.0.1.1	
(a / and 
      :op-of (a3 / and 
            :op1 (k2 / kill-01 
                  :ARG0 3 
                  :ARG1 (d2 / die-01 
                        :ARG1 (a7 / accident) 
                        :time (a8 / after 
                              :op1 (k / kill-01 
                                    :ARG0 2 
                                    :ARG1 (a6 / and 
                                          :op1 (c3 / country 
                                                :mod (n2 / near) 
                                                :name (n / name 
                                                      :op1 "keynes" 
                                                      :op2 "milton"))) 
                                    :op-of 10 
                                    :time (c2 / collide-01 
                                          :ARG0 4 
                                          :ARG2-of (i2 / involve-01 
                                                :ARG1 (a5 / and 
                                                      :op1 (c / car))))))) 
                  :location (a9 / accident 
                        :location (r / road) 
                        :location (w / weekend))) 
            :op2 (d / die-01 
                  :ARG1 (a2 / accident 
                        :mod (f2 / further) 
                        :mod (f / fatal)) 
                  :ARG2 (a4 / accident 
                        :mod (s / separate)))) 
      :op1 (i / island))

# ::snt peter hawksley from lancashire had been involved in a motoring accident with a lorry
# ::tok peter hawksley from lancashire had been involved in a motoring accident with a lorry
# ::alignments 10-11|0.0 9-10|0.0.0 6-7|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:37.942
# ::node	0	involve-01	6-7
# ::node	0.0	accident	10-11
# ::node	0.0.0	motor	9-10
# ::root	0	involve-01
# ::edge	accident	mod	motor	0.0	0.0.0	
# ::edge	involve-01	ARG2	accident	0	0.0	
(i / involve-01 
      :ARG2 (a / accident 
            :mod (m / motor)))

# ::snt a petition signed by 1400 people worried about a rash of accidents in middleton cheney helped pursuade the department of transport to give the goahead for the new road
# ::tok a petition signed by 1400 people worried about a rash of accidents in middleton cheney helped pursuade the department of transport to give the goahead for the new road
# ::alignments 28-29|0.2.0.0.0.2 27-28|0.0 22-23|0.2.0.0.0 20-21|0.2.0.0.0.1 18-19|0.2.0.0 15-16|0.2.0 11-12|0.2.1 9-10|0.1 6-7|0 4-5|0.2.0.0.0.0 2-3|0.2.2 1-2|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:38.093
# ::node	0	worry-02	6-7
# ::node	0.0	new	27-28
# ::node	0.1	rash	9-10
# ::node	0.2	petition-01	1-2
# ::node	0.2.0	help-01	15-16
# ::node	0.2.0.0	department	18-19
# ::node	0.2.0.0.0	give-01	22-23
# ::node	0.2.0.0.0.0	1400	4-5
# ::node	0.2.0.0.0.1	transport-01	20-21
# ::node	0.2.0.0.0.2	road	28-29
# ::node	0.2.1	accident	11-12
# ::node	0.2.2	sign-02	2-3
# ::root	0	worry-02
# ::edge	give-01	ARG0	department	0.2.0.0.0	0.2.0.0	
# ::edge	give-01	ARG1	1400	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	give-01	location	road	0.2.0.0.0	0.2.0.0.0.2	
# ::edge	help-01	ARG0	petition-01	0.2.0	0.2	
# ::edge	help-01	ARG1	department	0.2.0	0.2.0.0	
# ::edge	petition-01	ARG1	accident	0.2	0.2.1	
# ::edge	petition-01	ARG2	worry-02	0.2	0	
# ::edge	sign-02	ARG1	petition-01	0.2.2	0.2	
# ::edge	transport-01	ARG1	give-01	0.2.0.0.0.1	0.2.0.0.0	
# ::edge	worry-02	ARG0	new	0	0.0	
# ::edge	worry-02	ARG1	rash	0	0.1	
(w / worry-02 
      :ARG0 (n / new) 
      :ARG1 (r2 / rash) 
      :ARG2-of (p / petition-01 
            :ARG0-of (h / help-01 
                  :ARG1 (d / department 
                        :ARG0-of (g / give-01 
                              :ARG1 1400 
                              :ARG1-of (t / transport-01) 
                              :location (r / road)))) 
            :ARG1 (a / accident) 
            :ARG1-of (s / sign-02)))

# ::snt but in reality this little accident has been caused by ernst attempting to touch the hand of the young man as he serves
# ::tok but in reality this little accident has been caused by ernst attempting to touch the hand of the young man as he serves
# ::alignments 22-23|0.0.0.0.0.0 21-22|0.0.0.0.0 19-20|0.0.0.0.0.0.0 18-19|0.0.0.0.0.0.0.0 15-16|0.0.0.0.1 13-14|0.0.0.0 11-12|0.0.0 8-9|0 5-6|0.0 4-5|0.0.1 3-4|0.0.2 2-3|0.0.2.0.0 0-1|0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:38.233
# ::node	0	cause-01	8-9
# ::node	0.0	accident	5-6
# ::node	0.0.0	attempt-01	11-12
# ::node	0.0.0.0	touch-01	13-14
# ::node	0.0.0.0.0	he	21-22
# ::node	0.0.0.0.0.0	serve-01	22-23
# ::node	0.0.0.0.0.0.0	man	19-20
# ::node	0.0.0.0.0.0.0.0	young	18-19
# ::node	0.0.0.0.1	hand	15-16
# ::node	0.0.1	little	4-5
# ::node	0.0.2	this	3-4
# ::node	0.0.2.0	contrast-01	0-1
# ::node	0.0.2.0.0	reality	2-3
# ::root	0	cause-01
# ::edge	accident	mod	little	0.0	0.0.1	
# ::edge	accident	mod	this	0.0	0.0.2	
# ::edge	attempt-01	ARG0	accident	0.0.0	0.0	
# ::edge	attempt-01	ARG1	touch-01	0.0.0	0.0.0.0	
# ::edge	cause-01	ARG1	accident	0	0.0	
# ::edge	contrast-01	ARG0	reality	0.0.2.0	0.0.2.0.0	
# ::edge	contrast-01	ARG1	this	0.0.2.0	0.0.2	
# ::edge	man	mod	young	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	serve-01	ARG0	he	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	serve-01	ARG1	man	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	touch-01	ARG0	he	0.0.0.0	0.0.0.0.0	
# ::edge	touch-01	ARG1	hand	0.0.0.0	0.0.0.0.1	
(c / cause-01 
      :ARG1 (a2 / accident 
            :ARG0-of (a / attempt-01 
                  :ARG1 (t / touch-01 
                        :ARG0 (h / he 
                              :ARG0-of (s / serve-01 
                                    :ARG1 (m / man 
                                          :mod (y / young)))) 
                        :ARG1 (h2 / hand))) 
            :mod (l / little) 
            :mod (t2 / this 
                  :ARG1-of (c2 / contrast-01 
                        :ARG0 (r / reality)))))

# ::snt one returnee was quoted as saying egyptians in iraq were dying of bullets knives and car accidents
# ::tok one returnee was quoted as saying egyptians in iraq were dying of bullets knives and car accidents
# ::alignments 16-17|0.0.0.1.1 15-16|0.0.0.1.1.0 14-15|0.0.0.1 13-14|0.0.0.1.0 12-13|0.0.0.1.0.0 10-11|0.0.0 6-7|0.0.0.0.0.0.0+0.0.0.0.0.0+0.0.0.0.0+0.0.0.0 5-6|0.0 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:38.278
# ::node	0	quote-01	3-4
# ::node	0.0	say-01	5-6
# ::node	0.0.0	die-01	10-11
# ::node	0.0.0.0	person	6-7
# ::node	0.0.0.0.0	country	6-7
# ::node	0.0.0.0.0.0	name	6-7
# ::node	0.0.0.0.0.0.0	"Egypt"	6-7
# ::node	0.0.0.1	and	14-15
# ::node	0.0.0.1.0	knife	13-14
# ::node	0.0.0.1.0.0	bullet	12-13
# ::node	0.0.0.1.1	accident	16-17
# ::node	0.0.0.1.1.0	car	15-16
# ::root	0	quote-01
# ::edge	accident	mod	car	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	and	op1	die-01	0.0.0.1	0.0.0	
# ::edge	and	op2	knife	0.0.0.1	0.0.0.1.0	
# ::edge	and	op3	accident	0.0.0.1	0.0.0.1.1	
# ::edge	country	name	name	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	die-01	ARG1	person	0.0.0	0.0.0.0	
# ::edge	knife	mod	bullet	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	name	op1	"Egypt"	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	person	mod	country	0.0.0.0	0.0.0.0.0	
# ::edge	quote-01	ARG2	say-01	0	0.0	
# ::edge	say-01	ARG1	die-01	0.0	0.0.0	
(q / quote-01 
      :ARG2 (s / say-01 
            :ARG1 (d / die-01 
                  :ARG1 (p / person 
                        :mod (c2 / country 
                              :name (n / name 
                                    :op1 "Egypt"))) 
                  :op-of (a2 / and 
                        :op1 (k / knife 
                              :mod (b / bullet)) 
                        :op2 (a / accident 
                              :mod (c / car))))))

# ::snt poorly phased temporary traffic lights are a source of unnecessary traffic congestion and they can also provoke accidents because of resulting driver impatience says the automobile association
# ::tok poorly phased temporary traffic lights are a source of unnecessary traffic congestion and they can also provoke accidents because of resulting driver impatience says the automobile association
# ::alignments 26-27|0.0 25-26|0.0.1 23-24|0 21-22|0.0.0.1.0+0.0.0.1 20-21|0.0.0 18-19|0.0.0.0 17-18|0.0.0.2.0.2.0.1 16-17|0.0.0.2.0.2.0 15-16|0.0.0.2.0.2.0.2 14-15|0.0.0.2.0.2 13-14|0.0.0.2.0.2.0.0 12-13|0.0.0.2.0 11-12|0.0.0.2.0.1 10-11|0.0.0.2.0.1.0 7-8|0.0.0.2.0.0 4-5|0.0.0.2.0.0.0 3-4|0.0.0.2.1 2-3|0.0.0.2.0.0.0.0 1-2|0.0.0.2 0-1|0.0.0.2.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:38.688
# ::node	0	say-01	23-24
# ::node	0.0	associate-01	26-27
# ::node	0.0.0	result-01	20-21
# ::node	0.0.0.0	cause-01	18-19
# ::node	0.0.0.1	person	21-22
# ::node	0.0.0.1.0	drive-01	21-22
# ::node	0.0.0.2	phase-01	1-2
# ::node	0.0.0.2.0	and	12-13
# ::node	0.0.0.2.0.0	source	7-8
# ::node	0.0.0.2.0.0.0	light	4-5
# ::node	0.0.0.2.0.0.0.0	temporary	2-3
# ::node	0.0.0.2.0.1	congest-01	11-12
# ::node	0.0.0.2.0.1.0	traffic	10-11
# ::node	0.0.0.2.0.2	possible	14-15
# ::node	0.0.0.2.0.2.0	provoke-01	16-17
# ::node	0.0.0.2.0.2.0.0	they	13-14
# ::node	0.0.0.2.0.2.0.1	accident	17-18
# ::node	0.0.0.2.0.2.0.2	also	15-16
# ::node	0.0.0.2.1	traffic	3-4
# ::node	0.0.0.2.2	poor	0-1
# ::node	0.0.1	automobile	25-26
# ::root	0	say-01
# ::edge	and	op1	source	0.0.0.2.0	0.0.0.2.0.0	
# ::edge	and	op2	congest-01	0.0.0.2.0	0.0.0.2.0.1	
# ::edge	and	op3	possible	0.0.0.2.0	0.0.0.2.0.2	
# ::edge	associate-01	ARG1	automobile	0.0	0.0.1	
# ::edge	cause-01	ARG0	result-01	0.0.0.0	0.0.0	
# ::edge	congest-01	ARG1	traffic	0.0.0.2.0.1	0.0.0.2.0.1.0	
# ::edge	drive-01	ARG0	person	0.0.0.1.0	0.0.0.1	
# ::edge	light	duration	temporary	0.0.0.2.0.0.0	0.0.0.2.0.0.0.0	
# ::edge	phase-01	ARG1	and	0.0.0.2	0.0.0.2.0	
# ::edge	phase-01	ARG2	traffic	0.0.0.2	0.0.0.2.1	
# ::edge	phase-01	manner	poor	0.0.0.2	0.0.0.2.2	
# ::edge	phase-01	manner	result-01	0.0.0.2	0.0.0	
# ::edge	possible	domain	provoke-01	0.0.0.2.0.2	0.0.0.2.0.2.0	
# ::edge	provoke-01	ARG0	they	0.0.0.2.0.2.0	0.0.0.2.0.2.0.0	
# ::edge	provoke-01	ARG1	accident	0.0.0.2.0.2.0	0.0.0.2.0.2.0.1	
# ::edge	provoke-01	mod	also	0.0.0.2.0.2.0	0.0.0.2.0.2.0.2	
# ::edge	result-01	ARG0	associate-01	0.0.0	0.0	
# ::edge	result-01	ARG1	person	0.0.0	0.0.0.1	
# ::edge	say-01	ARG1	associate-01	0	0.0	
# ::edge	source	domain	light	0.0.0.2.0.0	0.0.0.2.0.0.0	
(s / say-01 
      :ARG1 (a / associate-01 
            :ARG0-of (r / result-01 
                  :ARG0-of (c / cause-01) 
                  :ARG1 (p / person 
                        :ARG0-of (d / drive-01)) 
                  :manner-of (p4 / phase-01 
                        :ARG1 (a5 / and 
                              :op1 (s2 / source 
                                    :domain (l / light 
                                          :duration (t4 / temporary))) 
                              :op2 (c2 / congest-01 
                                    :ARG1 (t2 / traffic)) 
                              :op3 (p3 / possible 
                                    :domain (p2 / provoke-01 
                                          :ARG0 (t / they) 
                                          :ARG1 (a3 / accident) 
                                          :mod (a4 / also)))) 
                        :ARG2 (t3 / traffic) 
                        :manner (p5 / poor))) 
            :ARG1 (a2 / automobile)))

# ::snt hold your breath part by accident part by design it could even happen
# ::tok hold your breath part by accident part by design it could even happen
# ::alignments 12-13|0.0 10-11|0 9-10|0.0.0 8-9|0.0.1 5-6|0.0.2.0 2-3|0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:38.711
# ::node	0	possible	10-11
# ::node	0.0	happen-01	12-13
# ::node	0.0.0	it	9-10
# ::node	0.0.1	design-01	8-9
# ::node	0.0.2	breathe-01	2-3
# ::node	0.0.2.0	accident	5-6
# ::root	0	possible
# ::edge	breathe-01	ARG1	happen-01	0.0.2	0.0	
# ::edge	breathe-01	ARG2	accident	0.0.2	0.0.2.0	
# ::edge	design-01	ARG1	happen-01	0.0.1	0.0	
# ::edge	happen-01	ARG1	it	0.0	0.0.0	
# ::edge	possible	domain	happen-01	0	0.0	
(p / possible 
      :domain (h / happen-01 
            :ARG1 (i / it) 
            :ARG1-of (d / design-01) 
            :ARG1-of (b / breathe-01 
                  :ARG2 (a / accident))))

# ::snt please note that whilst the above are not actual statements made by a serious accident victim they have been selected because we believe they give a fair representation of the kind of problems which may occur after an accident, however you could avoid these situations happening to you should you have an accident ellip, if you join the midland personal accident plan now, why do i need the midland personal accident plan
# ::tok please note that whilst the above are not actual statements made by a serious accident victim they have been selected because we believe they give a fair representation of the kind of problems which may occur after an accident , however you could avoid these situations happening to you should you have an accident ellip , if you join the midland personal accident plan now , why do i need the midland personal accident plan
# ::alignments 74-75|0.1.2.1.0 73-74|0.1.2.1.0.0 72-73|0.1.2.1.0.0.0 69-70|0.1.2.1.0.1 68-69|0.1.2.1.0.1.0 64-65|0.1.2.1.1.2 63-64|0.1.2.1.1 62-63|0.1.2.1.1.0 61-62|0.1.2.1.1.0.0 58-59|0.1.2.1.1.1 57-58|0.1.2.1.1.1.0 53-54|0.1.2.0.0.0 50-51|0.1.2.1 49-50|0.1.2.0.0 48-49|0.1.2.0 46-47|0.1.2 45-46|0.1.1 43-44|0.1 42-43|0.1.3 41-42|0.1.0 38-39|0.0.1.1.0.0.2.0 36-37|0.0.1.1.0.0.2 35-36|0.0.1.1.0.0 34-35|0.0.1.1.0.0.1.0+0.0.1.1.0.0.1 32-33|0.0.1.1.0.0.0 30-31|0.0.1.1.0 27-28|0.0.1.1 26-27|0.0.1.1.1 24-25|0.0.1 23-24|0.0.1.0 22-23|0.0 21-22|0.0.0 20-21|0 19-20|0.0.3 16-17|0.0.3.2 15-16|0.0.3.1 14-15|0.0.3.1.0 13-14|0.0.1.2 9-10|0.0.3.0.0+0.0.3.0.0.0 8-9|0.0.2.0 5-6|0.0.3.0 1-2|0.2 0-1|0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:46.027
# ::node	0	cause-01	20-21
# ::node	0.0	believe-01	22-23
# ::node	0.0.0	we	21-22
# ::node	0.0.1	give-01	24-25
# ::node	0.0.1.0	they	23-24
# ::node	0.0.1.1	represent-01	27-28
# ::node	0.0.1.1.0	kind	30-31
# ::node	0.0.1.1.0.0	occur-01	35-36
# ::node	0.0.1.1.0.0.0	problem	32-33
# ::node	0.0.1.1.0.0.1	date-entity	34-35
# ::node	0.0.1.1.0.0.1.0	5	34-35
# ::node	0.0.1.1.0.0.2	after	36-37
# ::node	0.0.1.1.0.0.2.0	accident	38-39
# ::node	0.0.1.1.1	fair	26-27
# ::node	0.0.1.2	serious	13-14
# ::node	0.0.2	please-01	0-1
# ::node	0.0.2.0	actual	8-9
# ::node	0.0.3	select-01	19-20
# ::node	0.0.3.0	above	5-6
# ::node	0.0.3.0.0	state-01	9-10
# ::node	0.0.3.0.0.0	thing	9-10
# ::node	0.0.3.1	victim	15-16
# ::node	0.0.3.1.0	accident	14-15
# ::node	0.0.3.2	they	16-17
# ::node	0.1	avoid-01	43-44
# ::node	0.1.0	you	41-42
# ::node	0.1.1	situation	45-46
# ::node	0.1.2	happen-01	46-47
# ::node	0.1.2.0	you	48-49
# ::node	0.1.2.0.0	recommend-01	49-50
# ::node	0.1.2.0.0.0	accident	53-54
# ::node	0.1.2.1	you	50-51
# ::node	0.1.2.1.0	plan-01	74-75
# ::node	0.1.2.1.0.0	accident	73-74
# ::node	0.1.2.1.0.0.0	personal	72-73
# ::node	0.1.2.1.0.1	need-01	69-70
# ::node	0.1.2.1.0.1.0	i	68-69
# ::node	0.1.2.1.1	plan-01	63-64
# ::node	0.1.2.1.1.0	accident	62-63
# ::node	0.1.2.1.1.0.0	personal	61-62
# ::node	0.1.2.1.1.1	join-01	58-59
# ::node	0.1.2.1.1.1.0	you	57-58
# ::node	0.1.2.1.1.2	now	64-65
# ::node	0.1.3	possible	42-43
# ::node	0.2	note	1-2
# ::root	0	cause-01
# ::edge	accident	mod	personal	0.1.2.1.0.0	0.1.2.1.0.0.0	
# ::edge	accident	mod	personal	0.1.2.1.1.0	0.1.2.1.1.0.0	
# ::edge	after	op1	accident	0.0.1.1.0.0.2	0.0.1.1.0.0.2.0	
# ::edge	avoid-01	ARG0	you	0.1	0.1.0	
# ::edge	avoid-01	ARG1	situation	0.1	0.1.1	
# ::edge	avoid-01	ARG2	happen-01	0.1	0.1.2	
# ::edge	believe-01	ARG0	we	0.0	0.0.0	
# ::edge	believe-01	ARG1	give-01	0.0	0.0.1	
# ::edge	cause-01	ARG0	believe-01	0	0.0	
# ::edge	cause-01	ARG1	avoid-01	0	0.1	
# ::edge	cause-01	ARG2	note	0	0.2	
# ::edge	date-entity	month	5	0.0.1.1.0.0.1	0.0.1.1.0.0.1.0	
# ::edge	give-01	ARG0	they	0.0.1	0.0.1.0	
# ::edge	give-01	ARG1	represent-01	0.0.1	0.0.1.1	
# ::edge	give-01	mod	serious	0.0.1	0.0.1.2	
# ::edge	happen-01	ARG1	you	0.1.2	0.1.2.0	
# ::edge	happen-01	ARG2	you	0.1.2	0.1.2.1	
# ::edge	join-01	ARG0	you	0.1.2.1.1.1	0.1.2.1.1.1.0	
# ::edge	join-01	ARG1	plan-01	0.1.2.1.1.1	0.1.2.1.1	
# ::edge	need-01	ARG0	i	0.1.2.1.0.1	0.1.2.1.0.1.0	
# ::edge	need-01	ARG1	plan-01	0.1.2.1.0.1	0.1.2.1.0	
# ::edge	occur-01	ARG0	problem	0.0.1.1.0.0	0.0.1.1.0.0.0	
# ::edge	occur-01	ARG1	kind	0.0.1.1.0.0	0.0.1.1.0	
# ::edge	occur-01	mod	date-entity	0.0.1.1.0.0	0.0.1.1.0.0.1	
# ::edge	occur-01	time	after	0.0.1.1.0.0	0.0.1.1.0.0.2	
# ::edge	plan-01	ARG0	you	0.1.2.1.0	0.1.2.1	
# ::edge	plan-01	ARG0	you	0.1.2.1.1	0.1.2.1	
# ::edge	plan-01	ARG1	accident	0.1.2.1.0	0.1.2.1.0.0	
# ::edge	plan-01	ARG1	accident	0.1.2.1.1	0.1.2.1.1.0	
# ::edge	plan-01	direction	now	0.1.2.1.1	0.1.2.1.1.2	
# ::edge	please-01	ARG0	actual	0.0.2	0.0.2.0	
# ::edge	please-01	ARG1	believe-01	0.0.2	0.0	
# ::edge	possible	domain	avoid-01	0.1.3	0.1	
# ::edge	recommend-01	ARG1	accident	0.1.2.0.0	0.1.2.0.0.0	
# ::edge	recommend-01	ARG2	you	0.1.2.0.0	0.1.2.0	
# ::edge	represent-01	ARG1	kind	0.0.1.1	0.0.1.1.0	
# ::edge	represent-01	manner	fair	0.0.1.1	0.0.1.1.1	
# ::edge	select-01	ARG0	above	0.0.3	0.0.3.0	
# ::edge	select-01	ARG1	victim	0.0.3	0.0.3.1	
# ::edge	select-01	domain	they	0.0.3	0.0.3.2	
# ::edge	select-01	time	believe-01	0.0.3	0.0	
# ::edge	state-01	ARG0	above	0.0.3.0.0	0.0.3.0	
# ::edge	state-01	ARG1	thing	0.0.3.0.0	0.0.3.0.0.0	
# ::edge	victim	mod	accident	0.0.3.1	0.0.3.1.0	
(c / cause-01 
      :ARG0 (b / believe-01 
            :ARG0 (w / we) 
            :ARG1 (g / give-01 
                  :ARG0 (t / they) 
                  :ARG1 (r2 / represent-01 
                        :ARG1 (k / kind 
                              :ARG1-of (o / occur-01 
                                    :ARG0 (p6 / problem) 
                                    :mod (d / date-entity 
                                          :month 5) 
                                    :time (a6 / after 
                                          :op1 (a5 / accident)))) 
                        :manner (f / fair)) 
                  :mod (s3 / serious)) 
            :ARG1-of (p7 / please-01 
                  :ARG0 (a8 / actual)) 
            :time-of (s2 / select-01 
                  :ARG0 (a9 / above 
                        :ARG0-of (s4 / state-01 
                              :ARG1 (t3 / thing))) 
                  :ARG1 (v / victim 
                        :mod (a7 / accident)) 
                  :domain (t2 / they))) 
      :ARG1 (a4 / avoid-01 
            :ARG0 (y4 / you) 
            :ARG1 (s / situation) 
            :ARG2 (h / happen-01 
                  :ARG1 (y3 / you 
                        :ARG2-of (r / recommend-01 
                              :ARG1 (a3 / accident))) 
                  :ARG2 (y2 / you 
                        :ARG0-of (p / plan-01 
                              :ARG1 (a / accident 
                                    :mod (p2 / personal)) 
                              :ARG1-of (n / need-01 
                                    :ARG0 (i / i))) 
                        :ARG0-of (p3 / plan-01 
                              :ARG1 (a2 / accident 
                                    :mod (p4 / personal)) 
                              :ARG1-of (j / join-01 
                                    :ARG0 (y / you)) 
                              :direction (n2 / now)))) 
            :domain-of (p5 / possible)) 
      :ARG2 (n3 / note))

# ::snt accidents are increasing year by year on the clogged m25 according to new figures from the automobile association, the accident survey showed june was the worst month for accidents with 59 november 55 came second
# ::tok accidents are increasing year by year on the clogged m25 according to new figures from the automobile association , the accident survey showed june was the worst month for accidents with 59 november 55 came second
# ::alignments 33-34|0.2.0 32-33|0.2.3.0+0.2.3 31-32|0.0.1.0 29-30|0.0.1 27-28|0.1.1+0.1 26-27|0.1.0 23-24|0.1.1.0.1+0.1.1.0 22-23|0 21-22|0.0 20-21|0.0.0 17-18|0.2 16-17|0.2.1 13-14|0.2.2 12-13|0.2.2.0 5-6|0.1.1.0.0.2 3-4|0.1.1.0.0.1 2-3|0.1.1.0.0 0-1|0.1.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:46.628
# ::node	0	show-01	22-23
# ::node	0.0	survey-01	21-22
# ::node	0.0.0	accident	20-21
# ::node	0.0.1	accident	29-30
# ::node	0.0.1.0	59	31-32
# ::node	0.1	temporal-quantity	27-28
# ::node	0.1.0	bad	26-27
# ::node	0.1.1	month	27-28
# ::node	0.1.1.0	date-entity	23-24
# ::node	0.1.1.0.0	increase-01	2-3
# ::node	0.1.1.0.0.0	accident	0-1
# ::node	0.1.1.0.0.1	year	3-4
# ::node	0.1.1.0.0.2	year	5-6
# ::node	0.1.1.0.1	6	23-24
# ::node	0.2	associate-01	17-18
# ::node	0.2.0	55	33-34
# ::node	0.2.1	automobile	16-17
# ::node	0.2.2	figure	13-14
# ::node	0.2.2.0	new	12-13
# ::node	0.2.3	date-entity	32-33
# ::node	0.2.3.0	11	32-33
# ::root	0	show-01
# ::edge	accident	time	59	0.0.1	0.0.1.0	
# ::edge	associate-01	ARG0	55	0.2	0.2.0	
# ::edge	associate-01	ARG1	automobile	0.2	0.2.1	
# ::edge	date-entity	month	11	0.2.3	0.2.3.0	
# ::edge	date-entity	month	6	0.1.1.0	0.1.1.0.1	
# ::edge	date-entity	op1	associate-01	0.2.3	0.2	
# ::edge	figure	mod	associate-01	0.2.2	0.2	
# ::edge	figure	mod	new	0.2.2	0.2.2.0	
# ::edge	increase-01	ARG0	date-entity	0.1.1.0.0	0.1.1.0	
# ::edge	increase-01	ARG1	accident	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	increase-01	time	year	0.1.1.0.0	0.1.1.0.0.1	
# ::edge	increase-01	time	year	0.1.1.0.0	0.1.1.0.0.2	
# ::edge	month	domain	date-entity	0.1.1	0.1.1.0	
# ::edge	show-01	ARG0	survey-01	0	0.0	
# ::edge	show-01	ARG1	temporal-quantity	0	0.1	
# ::edge	show-01	manner	associate-01	0	0.2	
# ::edge	survey-01	ARG0	accident	0.0	0.0.0	
# ::edge	survey-01	ARG1	accident	0.0	0.0.1	
# ::edge	temporal-quantity	mod	bad	0.1	0.1.0	
# ::edge	temporal-quantity	unit	month	0.1	0.1.1	
(s / show-01 
      :ARG0 (s2 / survey-01 
            :ARG0 (a2 / accident) 
            :ARG1 (a / accident 
                  :time 59)) 
      :ARG1 (t / temporal-quantity 
            :mod (b / bad) 
            :unit (m / month 
                  :domain (d2 / date-entity 
                        :ARG0-of (i / increase-01 
                              :ARG1 (a5 / accident) 
                              :time (y2 / year) 
                              :time (y / year)) 
                        :month 6))) 
      :manner (a3 / associate-01 
            :ARG0 55 
            :ARG1 (a4 / automobile) 
            :mod-of (f / figure 
                  :mod (n / new)) 
            :op-of (d / date-entity 
                  :month 11)))

# ::snt civilian accidents and emergencies are going unanswered
# ::tok civilian accidents and emergencies are going unanswered
# ::alignments 6-7|0.1+0 2-3|0.0 1-2|0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:46.638
# ::node	0	answer-01	6-7
# ::node	0.0	and	2-3
# ::node	0.0.0	accident	1-2
# ::node	0.0.0.0	civilian	0-1
# ::node	0.1	-	6-7
# ::root	0	answer-01
# ::edge	accident	mod	civilian	0.0.0	0.0.0.0	
# ::edge	and	op1	accident	0.0	0.0.0	
# ::edge	answer-01	ARG1	and	0	0.0	
# ::edge	answer-01	polarity	-	0	0.1	
(a / answer-01 
      :ARG1 (a2 / and 
            :op1 (a3 / accident 
                  :mod (c / civilian))) 
      :polarity -)

# ::snt had i taken the latter course the result might have been embarrassment rather than accident
# ::tok had i taken the latter course the result might have been embarrassment rather than accident
# ::alignments 14-15|0.1 11-12|0.0 7-8|0 4-5|0.0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:46.665
# ::node	0	result-01	7-8
# ::node	0.0	embarrass-01	11-12
# ::node	0.0.0	latter	4-5
# ::node	0.0.1	i	1-2
# ::node	0.1	accident	14-15
# ::root	0	result-01
(r / result-01 
      :ARG2-of (e / embarrass-01 
            :ARG0 (l / latter) 
            :ARG1 (i / i)) 
      :domain-of (a / accident))

# ::snt wasps missing david pegler and with jeff probyn and gary holmes at prop begin their push this afternoon in what promises to be a home pushover against ailing moseley hampered by the longterm absence of simon robson their england b scrumhalf who crushed his hand in a midweek weighttraining accident
# ::tok wasps missing david pegler and with jeff probyn and gary holmes at prop begin their push this afternoon in what promises to be a home pushover against ailing moseley hampered by the longterm absence of simon robson their england b scrumhalf who crushed his hand in a midweek weighttraining accident
# ::alignments 49-50|0.0.1.2.2 44-45|0.0.1.2.1 42-43|0.0.1.2 39-40|0.0.1.2.0 38-39|0.0.1.0.0.0+0.0.1.0.0+0.0.1.0 33-34|0.0.0.1 24-25|0.0.0.1.0 20-21|0.0.1 17-18|0.0.1.3 16-17|0.0.1.1 15-16|0 13-14|0.0 12-13|0.0.0 8-9|0.0.0.0 4-5|0.0.0.2 1-2|0.0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:47.343
# ::node	0	push-02	15-16
# ::node	0.0	begin-01	13-14
# ::node	0.0.0	prop-01	12-13
# ::node	0.0.0.0	and	8-9
# ::node	0.0.0.1	absent-01	33-34
# ::node	0.0.0.1.0	home	24-25
# ::node	0.0.0.2	and	4-5
# ::node	0.0.0.2.0	miss-01	1-2
# ::node	0.0.1	promise-01	20-21
# ::node	0.0.1.0	country	38-39
# ::node	0.0.1.0.0	name	38-39
# ::node	0.0.1.0.0.0	"England"	38-39
# ::node	0.0.1.1	this	16-17
# ::node	0.0.1.2	crush-01	42-43
# ::node	0.0.1.2.0	b	39-40
# ::node	0.0.1.2.1	hand	44-45
# ::node	0.0.1.2.2	accident	49-50
# ::node	0.0.1.3	afternoon	17-18
# ::root	0	push-02
(p2 / push-02 
      :ARG1-of (b2 / begin-01 
            :ARG1-of (p3 / prop-01 
                  :ARG0 (a4 / and) 
                  :ARG1-of (a2 / absent-01 
                        :ARG0 (h2 / home)) 
                  :op-of (a5 / and 
                        :op1 (m / miss-01))) 
            :ARG2 (p / promise-01 
                  :ARG0 (c2 / country 
                        :name (n / name 
                              :op1 "England")) 
                  :ARG1 (t / this) 
                  :ARG2-of (c / crush-01 
                        :ARG0 (b / b) 
                        :ARG1 (h / hand) 
                        :prep-on (a / accident)) 
                  :topic-of (a3 / afternoon))))

# ::snt they are much shorter the transporting trains are slower vehicles are transported in open wagons which permit the dissipation of gas and petrol vapours they carry less traffic the number of lives at risk in an accident or terrorist incident is far less for most of their history sabotage and terrorism were not as prevalent as they are today and no alpine nation has the high degree of dependence on a single tunnel that britain must acquire on the channel tunnel if it is to be profitable
# ::tok they are much shorter the transporting trains are slower vehicles are transported in open wagons which permit the dissipation of gas and petrol vapours they carry less traffic the number of lives at risk in an accident or terrorist incident is far less for most of their history sabotage and terrorism were not as prevalent as they are today and no alpine nation has the high degree of dependence on a single tunnel that britain must acquire on the channel tunnel if it is to be profitable
# ::alignments 86-87|0.2.0.1.0.1.0 82-83|0.2.0.1.0.1 80-81|0.2.0.1.0.2 79-80|0.2.0.1.0.2.0 76-77|0.2.0.1.0 74-75|0.2.0.1.0.0.0.0+0.2.0.1.0.0.0+0.2.0.1.0.0 72-73|0.2.0.1 71-72|0.2.0.1.1 68-69|0.2.0 66-67|0.2 65-66|0.2.1 62-63|0.2.0.0 60-61|0.2.0.1.0.1.0.0 59-60|0 58-59|0.1.0 56-57|0.1.1 54-55|0.1 50-51|0.1.2.0 49-50|0.1.2 47-48|0.2.0.3 44-45|0.2.0.2 42-43|0.0.0.1.0.0.0.0 41-42|0.0.0.1.0.0.0.0.0 39-40|0.0.2 38-39|0.0.2.0 37-38|0.0 36-37|0.0.0.0 33-34|0.0.0 31-32|0.0.1.0 29-30|0.0.1 27-28|0.0.0.1.0.0.0 26-27|0.0.0.1.0.0.0.1 24-25|0.0.0.1.0.0 22-23|0.0.0.1.2 21-22|0.0.0.1 20-21|0.0.0.1.1 16-17|0.0.0.1.0 11-12|0.0.0.1.0.1 9-10|0.0.0.1.0.1.1 8-9|0.0.0.1.0.1.0.0 6-7|0.0.0.1.0.1.0 5-6|0.0.0.1.0.1.0.1 3-4|0.0.0.1.0.1.0.1.1 2-3|0.0.0.1.0.1.0.1.0 0-1|0.0.0.1.0.1.0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:51.559
# ::node	0	and	59-60
# ::node	0.0	or	37-38
# ::node	0.0.0	risk-01	33-34
# ::node	0.0.0.0	accident	36-37
# ::node	0.0.0.1	and	21-22
# ::node	0.0.0.1.0	permit-01	16-17
# ::node	0.0.0.1.0.0	they	24-25
# ::node	0.0.0.1.0.0.0	traffic	27-28
# ::node	0.0.0.1.0.0.0.0	less	42-43
# ::node	0.0.0.1.0.0.0.0.0	far	41-42
# ::node	0.0.0.1.0.0.0.1	less	26-27
# ::node	0.0.0.1.0.1	transport-01	11-12
# ::node	0.0.0.1.0.1.0	train	6-7
# ::node	0.0.0.1.0.1.0.0	slow	8-9
# ::node	0.0.0.1.0.1.0.1	transport-01	5-6
# ::node	0.0.0.1.0.1.0.1.0	much	2-3
# ::node	0.0.0.1.0.1.0.1.1	short	3-4
# ::node	0.0.0.1.0.1.0.1.1.0	they	0-1
# ::node	0.0.0.1.0.1.1	vehicle	9-10
# ::node	0.0.0.1.1	gas	20-21
# ::node	0.0.0.1.2	petrol	22-23
# ::node	0.0.1	number	29-30
# ::node	0.0.1.0	life	31-32
# ::node	0.0.2	incident	39-40
# ::node	0.0.2.0	terrorist	38-39
# ::node	0.1	prevail-02	54-55
# ::node	0.1.0	today	58-59
# ::node	0.1.1	they	56-57
# ::node	0.1.2	and	49-50
# ::node	0.1.2.0	terrorism	50-51
# ::node	0.2	degree	66-67
# ::node	0.2.0	depend-01	68-69
# ::node	0.2.0.0	nation	62-63
# ::node	0.2.0.1	tunnel	72-73
# ::node	0.2.0.1.0	acquire-01	76-77
# ::node	0.2.0.1.0.0	country	74-75
# ::node	0.2.0.1.0.0.0	name	74-75
# ::node	0.2.0.1.0.0.0.0	"Britain"	74-75
# ::node	0.2.0.1.0.1	it	82-83
# ::node	0.2.0.1.0.1.0	profit-01	86-87
# ::node	0.2.0.1.0.1.0.0	-	60-61
# ::node	0.2.0.1.0.2	tunnel	80-81
# ::node	0.2.0.1.0.2.0	channel	79-80
# ::node	0.2.0.1.1	single	71-72
# ::node	0.2.0.2	most	44-45
# ::node	0.2.0.3	history	47-48
# ::node	0.2.1	high	65-66
# ::root	0	and
# ::edge	acquire-01	ARG0	country	0.2.0.1.0	0.2.0.1.0.0	
# ::edge	acquire-01	ARG1	it	0.2.0.1.0	0.2.0.1.0.1	
# ::edge	acquire-01	ARG2	tunnel	0.2.0.1.0	0.2.0.1	
# ::edge	acquire-01	path	tunnel	0.2.0.1.0	0.2.0.1.0.2	
# ::edge	and	op1	gas	0.0.0.1	0.0.0.1.1	
# ::edge	and	op1	or	0	0.0	
# ::edge	and	op1	terrorism	0.1.2	0.1.2.0	
# ::edge	and	op2	petrol	0.0.0.1	0.0.0.1.2	
# ::edge	and	op2	prevail-02	0	0.1	
# ::edge	and	op3	degree	0	0.2	
# ::edge	and	op3	risk-01	0.0.0.1	0.0.0	
# ::edge	country	name	name	0.2.0.1.0.0	0.2.0.1.0.0.0	
# ::edge	degree	mod	high	0.2	0.2.1	
# ::edge	depend-01	ARG0	nation	0.2.0	0.2.0.0	
# ::edge	depend-01	ARG1	tunnel	0.2.0	0.2.0.1	
# ::edge	depend-01	degree	degree	0.2.0	0.2	
# ::edge	history	op1	depend-01	0.2.0.3	0.2.0	
# ::edge	incident	mod	terrorist	0.0.2	0.0.2.0	
# ::edge	less	compared-to	traffic	0.0.0.1.0.0.0.0	0.0.0.1.0.0.0	
# ::edge	less	degree	far	0.0.0.1.0.0.0.0	0.0.0.1.0.0.0.0.0	
# ::edge	life	quant	number	0.0.1.0	0.0.1	
# ::edge	most	op1	depend-01	0.2.0.2	0.2.0	
# ::edge	name	op1	"Britain"	0.2.0.1.0.0.0	0.2.0.1.0.0.0.0	
# ::edge	or	op1	number	0.0	0.0.1	
# ::edge	or	op2	incident	0.0	0.0.2	
# ::edge	permit-01	ARG0	they	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	permit-01	ARG1	and	0.0.0.1.0	0.0.0.1	
# ::edge	prevail-02	ARG0	today	0.1	0.1.0	
# ::edge	prevail-02	ARG1	they	0.1	0.1.1	
# ::edge	prevail-02	manner	and	0.1	0.1.2	
# ::edge	profit-01	ARG0	-	0.2.0.1.0.1.0	0.2.0.1.0.1.0.0	
# ::edge	profit-01	ARG1	it	0.2.0.1.0.1.0	0.2.0.1.0.1	
# ::edge	risk-01	ARG0	accident	0.0.0	0.0.0.0	
# ::edge	risk-01	ARG1	or	0.0.0	0.0	
# ::edge	short	domain	they	0.0.0.1.0.1.0.1.1	0.0.0.1.0.1.0.1.1.0	
# ::edge	slow	domain	train	0.0.0.1.0.1.0.0	0.0.0.1.0.1.0	
# ::edge	traffic	degree	less	0.0.0.1.0.0.0	0.0.0.1.0.0.0.1	
# ::edge	traffic	poss	they	0.0.0.1.0.0.0	0.0.0.1.0.0	
# ::edge	train	mod	transport-01	0.0.0.1.0.1.0	0.0.0.1.0.1.0.1	
# ::edge	transport-01	ARG0	much	0.0.0.1.0.1.0.1	0.0.0.1.0.1.0.1.0	
# ::edge	transport-01	ARG0	train	0.0.0.1.0.1	0.0.0.1.0.1.0	
# ::edge	transport-01	ARG1	short	0.0.0.1.0.1.0.1	0.0.0.1.0.1.0.1.1	
# ::edge	transport-01	ARG1	vehicle	0.0.0.1.0.1	0.0.0.1.0.1.1	
# ::edge	transport-01	ARG2	permit-01	0.0.0.1.0.1	0.0.0.1.0	
# ::edge	tunnel	mod	channel	0.2.0.1.0.2	0.2.0.1.0.2.0	
# ::edge	tunnel	mod	single	0.2.0.1	0.2.0.1.1	
(a2 / and 
      :op1 (o / or 
            :ARG1-of (r / risk-01 
                  :ARG0 (a4 / accident) 
                  :op-of (a5 / and 
                        :ARG1-of (p4 / permit-01 
                              :ARG0 (t8 / they 
                                    :poss-of (t7 / traffic 
                                          :compared-to-of (l / less 
                                                :degree (f / far)) 
                                          :degree (l3 / less))) 
                              :ARG2-of (t9 / transport-01 
                                    :ARG0 (t10 / train 
                                          :domain-of (s2 / slow) 
                                          :mod (t11 / transport-01 
                                                :ARG0 (m2 / much) 
                                                :ARG1 (s3 / short 
                                                      :domain (t12 / they)))) 
                                    :ARG1 (v / vehicle))) 
                        :op1 (g / gas) 
                        :op2 (p3 / petrol))) 
            :op1 (n3 / number 
                  :quant-of (l2 / life)) 
            :op2 (i2 / incident 
                  :mod (t6 / terrorist))) 
      :op2 (p2 / prevail-02 
            :ARG0 (t3 / today) 
            :ARG1 (t4 / they) 
            :manner (a3 / and 
                  :op1 (t5 / terrorism))) 
      :op3 (d2 / degree 
            :degree-of (d / depend-01 
                  :ARG0 (n2 / nation) 
                  :ARG1 (t2 / tunnel 
                        :ARG2-of (a / acquire-01 
                              :ARG0 (c2 / country 
                                    :name (n / name 
                                          :op1 "Britain")) 
                              :ARG1 (i / it 
                                    :ARG1-of (p / profit-01 
                                          :ARG0 (- / -))) 
                              :path (t / tunnel 
                                    :mod (c / channel))) 
                        :mod (s / single)) 
                  :op-of (m / most) 
                  :op-of (h2 / history)) 
            :mod (h / high)))

# ::snt a craft teacher at bicester school escaped serious injury in a road accident yesterday wednesday july 11, mr reg haynes 62 of kennedy road bicester suffered bruising and shock in the accident which involved his rover car a volkswagen van and another car
# ::tok a craft teacher at bicester school escaped serious injury in a road accident yesterday wednesday july 11 , mr reg haynes 62 of kennedy road bicester suffered bruising and shock in the accident which involved his rover car a volkswagen van and another car
# ::alignments 43-44|0.2 42-43|0.2.0 41-42|0 40-41|0.1 37-38|0.0.1 34-35|0.0 32-33|0.0.0 29-30|0.0.0.0 28-29|0.0.0.0.1 26-27|0.0.0.0.1.0 24-25|0.0.0.0.1.0.0.2.1 21-22|0.0.0.0.0 16-17|0.0.0.0.2 15-16|0.0.0.0.1.0.0.0.1.0+0.0.0.0.1.0.0.0.1 13-14|0.0.2 12-13|0.0.0.0.1.0.0.0.0.0 11-12|0.0.0.0.1.0.0.0.0.0.0 8-9|0.0.0.0.1.0.0.0.0 7-8|0.0.0.0.1.0.0.0.0.1 6-7|0.0.0.0.1.0.0.0 5-6|0.0.0.0.1.0.0.2.0 2-3|0.0.0.0.1.0.0.1+0.0.0.0.1.0.0 1-2|0.0.0.0.1.0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:52.764
# ::node	0	and	41-42
# ::node	0.0	involve-01	34-35
# ::node	0.0.0	accident	32-33
# ::node	0.0.0.0	shock-01	29-30
# ::node	0.0.0.0.0	62	21-22
# ::node	0.0.0.0.1	and	28-29
# ::node	0.0.0.0.1.0	suffer-01	26-27
# ::node	0.0.0.0.1.0.0	person	2-3
# ::node	0.0.0.0.1.0.0.0	escape-01	6-7
# ::node	0.0.0.0.1.0.0.0.0	injure-01	8-9
# ::node	0.0.0.0.1.0.0.0.0.0	accident	12-13
# ::node	0.0.0.0.1.0.0.0.0.0.0	road	11-12
# ::node	0.0.0.0.1.0.0.0.0.1	serious	7-8
# ::node	0.0.0.0.1.0.0.0.1	date-entity	15-16
# ::node	0.0.0.0.1.0.0.0.1.0	7	15-16
# ::node	0.0.0.0.1.0.0.1	teach-01	2-3
# ::node	0.0.0.0.1.0.0.2	craft-01	1-2
# ::node	0.0.0.0.1.0.0.2.0	school	5-6
# ::node	0.0.0.0.1.0.0.2.1	road	24-25
# ::node	0.0.0.0.2	11	16-17
# ::node	0.0.1	car	37-38
# ::node	0.0.2	yesterday	13-14
# ::node	0.1	van	40-41
# ::node	0.2	car	43-44
# ::node	0.2.0	another	42-43
# ::root	0	and
# ::edge	11	op1	shock-01	0.0.0.0.2	0.0.0.0	
# ::edge	accident	location	road	0.0.0.0.1.0.0.0.0.0	0.0.0.0.1.0.0.0.0.0.0	
# ::edge	and	op1	shock-01	0.0.0.0.1	0.0.0.0	
# ::edge	and	op1	van	0	0.1	
# ::edge	and	op2	car	0	0.2	
# ::edge	car	mod	another	0.2	0.2.0	
# ::edge	craft-01	ARG0	person	0.0.0.0.1.0.0.2	0.0.0.0.1.0.0	
# ::edge	craft-01	ARG1	school	0.0.0.0.1.0.0.2	0.0.0.0.1.0.0.2.0	
# ::edge	date-entity	month	7	0.0.0.0.1.0.0.0.1	0.0.0.0.1.0.0.0.1.0	
# ::edge	escape-01	ARG0	person	0.0.0.0.1.0.0.0	0.0.0.0.1.0.0	
# ::edge	escape-01	ARG1	injure-01	0.0.0.0.1.0.0.0	0.0.0.0.1.0.0.0.0	
# ::edge	escape-01	time	date-entity	0.0.0.0.1.0.0.0	0.0.0.0.1.0.0.0.1	
# ::edge	injure-01	ARG1	accident	0.0.0.0.1.0.0.0.0	0.0.0.0.1.0.0.0.0.0	
# ::edge	injure-01	mod	serious	0.0.0.0.1.0.0.0.0	0.0.0.0.1.0.0.0.0.1	
# ::edge	involve-01	ARG0	accident	0.0	0.0.0	
# ::edge	involve-01	ARG1	car	0.0	0.0.1	
# ::edge	involve-01	ARG2	and	0.0	0	
# ::edge	road	op1	craft-01	0.0.0.0.1.0.0.2.1	0.0.0.0.1.0.0.2	
# ::edge	shock-01	ARG0	62	0.0.0.0	0.0.0.0.0	
# ::edge	shock-01	ARG1	accident	0.0.0.0	0.0.0	
# ::edge	suffer-01	ARG0	person	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	suffer-01	ARG1	and	0.0.0.0.1.0	0.0.0.0.1	
# ::edge	teach-01	ARG0	person	0.0.0.0.1.0.0.1	0.0.0.0.1.0.0	
# ::edge	yesterday	op1	involve-01	0.0.2	0.0	
(a2 / and 
      :ARG2-of (i / involve-01 
            :ARG0 (a3 / accident 
                  :ARG1-of (s / shock-01 
                        :ARG0 62 
                        :op-of (a4 / and 
                              :ARG1-of (s2 / suffer-01 
                                    :ARG0 (p / person 
                                          :ARG0-of (e / escape-01 
                                                :ARG1 (i2 / injure-01 
                                                      :ARG1 (a5 / accident 
                                                            :location (r2 / road)) 
                                                      :mod (s3 / serious)) 
                                                :time (d / date-entity 
                                                      :month 7)) 
                                          :ARG0-of (t / teach-01) 
                                          :ARG0-of (c3 / craft-01 
                                                :ARG1 (s4 / school) 
                                                :op-of (r / road))))) 
                        :op-of 11)) 
            :ARG1 (c2 / car) 
            :op-of (y / yesterday)) 
      :op1 (v / van) 
      :op2 (c / car 
            :mod (a / another)))

# ::snt capt john flood told the committee it was against the byelaws for someone to carry out an activity that endangered the safety of other park users and as a result they would not be liable if an accident happened
# ::tok capt john flood told the committee it was against the byelaws for someone to carry out an activity that endangered the safety of other park users and as a result they would not be liable if an accident happened
# ::alignments 38-39|0.0.0 37-38|0.0.0.0 34-35|0.0.0.1 30-31|0.0.0.1.2 29-30|0.0.0.1.1 26-27|0.0.1 24-25|0.0.0.1.1.0 23-24|0.1.0.0 21-22|0.1 19-20|0 17-18|0.0 12-13|0.0.0.1.0 6-7|0.1.0.1.0 5-6|0.1.0.1.1 3-4|0.1.0.1 2-3|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:53.194
# ::node	0	endanger-01	19-20
# ::node	0.0	activity	17-18
# ::node	0.0.0	happen-01	38-39
# ::node	0.0.0.0	accident	37-38
# ::node	0.0.0.1	liable-41	34-35
# ::node	0.0.0.1.0	someone	12-13
# ::node	0.0.0.1.1	result-01	29-30
# ::node	0.0.0.1.1.0	park	24-25
# ::node	0.0.0.1.2	they	30-31
# ::node	0.0.1	and	26-27
# ::node	0.1	safe-41	21-22
# ::node	0.1.0	flood-01	2-3
# ::node	0.1.0.0	other	23-24
# ::node	0.1.0.1	tell-01	3-4
# ::node	0.1.0.1.0	it	6-7
# ::node	0.1.0.1.1	committee	5-6
# ::root	0	endanger-01
# ::edge	and	op1	activity	0.0.1	0.0	
# ::edge	endanger-01	ARG0	activity	0	0.0	
# ::edge	endanger-01	ARG1	safe-41	0	0.1	
# ::edge	flood-01	ARG1	other	0.1.0	0.1.0.0	
# ::edge	happen-01	ARG0	activity	0.0.0	0.0	
# ::edge	happen-01	ARG1	accident	0.0.0	0.0.0.0	
# ::edge	liable-41	ARG0	someone	0.0.0.1	0.0.0.1.0	
# ::edge	liable-41	ARG1	result-01	0.0.0.1	0.0.0.1.1	
# ::edge	liable-41	condition	happen-01	0.0.0.1	0.0.0	
# ::edge	liable-41	domain	they	0.0.0.1	0.0.0.1.2	
# ::edge	result-01	ARG1	park	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	safe-41	ARG1	flood-01	0.1	0.1.0	
# ::edge	tell-01	ARG0	it	0.1.0.1	0.1.0.1.0	
# ::edge	tell-01	ARG1	flood-01	0.1.0.1	0.1.0	
# ::edge	tell-01	ARG2	committee	0.1.0.1	0.1.0.1.1	
(e / endanger-01 
      :ARG0 (a3 / activity 
            :ARG0-of (h / happen-01 
                  :ARG1 (a / accident) 
                  :condition-of (l / liable-41 
                        :ARG0 (s2 / someone) 
                        :ARG1 (r / result-01 
                              :ARG1 (p / park)) 
                        :domain (t / they))) 
            :op-of (a2 / and)) 
      :ARG1 (s / safe-41 
            :ARG1 (f / flood-01 
                  :ARG1 (o / other) 
                  :ARG1-of (t2 / tell-01 
                        :ARG0 (i / it) 
                        :ARG2 (c / committee)))))

# ::snt can i have more than one personal accident policy yes but if you already have a sun alliance personal accident policy which was also offered to you with guaranteed acceptance you will not be able to claim benefits under both policies
# ::tok can i have more than one personal accident policy yes but if you already have a sun alliance personal accident policy which was also offered to you with guaranteed acceptance you will not be able to claim benefits under both policies
# ::alignments 40-41|0.0.2 39-40|0.0.2.0 37-38|0.0.1 36-37|0.0 34-35|0 30-31|0.0.0 29-30|0.1 28-29|0.1.1 26-27|0.1.1.0 24-25|0.1.1.0.0 23-24|0.1.1.0.0.1 20-21|0.1.1.0.0.0 19-20|0.1.1.0.0.0.1.1 18-19|0.1.1.0.0.0.1 17-18|0.0.1.0 16-17|0.1.1.0.0.0.1.0 13-14|0.1.1.0.0.0.0.1 12-13|0.1.1.0.0.0.0.0 10-11|0.1.1.0.0.0.0 9-10|0.1.1.0.0.0.0.2 8-9|0.1.1.0.0.0.0.2.0 7-8|0.1.1.0.0.0.0.2.0.0.0 6-7|0.1.1.0.0.0.0.2.0.0 1-2|0.1.0.0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:54.310
# ::node	0	possible	34-35
# ::node	0.0	claim-01	36-37
# ::node	0.0.0	you	30-31
# ::node	0.0.1	benefit-01	37-38
# ::node	0.0.1.0	alliance	17-18
# ::node	0.0.2	policy	40-41
# ::node	0.0.2.0	both	39-40
# ::node	0.1	accept-01	29-30
# ::node	0.1.0	possible	0-1
# ::node	0.1.0.0	i	1-2
# ::node	0.1.1	guarantee-01	28-29
# ::node	0.1.1.0	you	26-27
# ::node	0.1.1.0.0	offer-01	24-25
# ::node	0.1.1.0.0.0	policy	20-21
# ::node	0.1.1.0.0.0.0	contrast-01	10-11
# ::node	0.1.1.0.0.0.0.0	you	12-13
# ::node	0.1.1.0.0.0.0.1	already	13-14
# ::node	0.1.1.0.0.0.0.2	yes	9-10
# ::node	0.1.1.0.0.0.0.2.0	policy	8-9
# ::node	0.1.1.0.0.0.0.2.0.0	personal	6-7
# ::node	0.1.1.0.0.0.0.2.0.0.0	accident	7-8
# ::node	0.1.1.0.0.0.1	personal	18-19
# ::node	0.1.1.0.0.0.1.0	sun	16-17
# ::node	0.1.1.0.0.0.1.1	accident	19-20
# ::node	0.1.1.0.0.1	also	23-24
# ::root	0	possible
# ::edge	accept-01	ARG1	possible	0.1	0.1.0	
# ::edge	accept-01	mod	possible	0.1	0	
# ::edge	accident	mod	personal	0.1.1.0.0.0.0.2.0.0.0	0.1.1.0.0.0.0.2.0.0	
# ::edge	accident	mod	personal	0.1.1.0.0.0.1.1	0.1.1.0.0.0.1	
# ::edge	benefit-01	ARG1	alliance	0.0.1	0.0.1.0	
# ::edge	claim-01	ARG0	you	0.0	0.0.0	
# ::edge	claim-01	ARG1	benefit-01	0.0	0.0.1	
# ::edge	claim-01	location	policy	0.0	0.0.2	
# ::edge	contrast-01	ARG0	you	0.1.1.0.0.0.0	0.1.1.0.0.0.0.0	
# ::edge	contrast-01	ARG1	policy	0.1.1.0.0.0.0	0.1.1.0.0.0	
# ::edge	contrast-01	ARG2	already	0.1.1.0.0.0.0	0.1.1.0.0.0.0.1	
# ::edge	contrast-01	consist	yes	0.1.1.0.0.0.0	0.1.1.0.0.0.0.2	
# ::edge	guarantee-01	ARG0	you	0.1.1	0.1.1.0	
# ::edge	guarantee-01	ARG1	accept-01	0.1.1	0.1	
# ::edge	offer-01	ARG0	policy	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	offer-01	ARG1	you	0.1.1.0.0	0.1.1.0	
# ::edge	offer-01	mod	also	0.1.1.0.0	0.1.1.0.0.1	
# ::edge	policy	mod	both	0.0.2	0.0.2.0	
# ::edge	policy	mod	personal	0.1.1.0.0.0	0.1.1.0.0.0.1	
# ::edge	policy	mod	personal	0.1.1.0.0.0.0.2.0	0.1.1.0.0.0.0.2.0.0	
# ::edge	possible	domain	claim-01	0	0.0	
# ::edge	possible	op1	i	0.1.0	0.1.0.0	
# ::edge	sun	mod	personal	0.1.1.0.0.0.1.0	0.1.1.0.0.0.1	
# ::edge	yes	mod	policy	0.1.1.0.0.0.0.2	0.1.1.0.0.0.0.2.0	
(p2 / possible 
      :domain (c / claim-01 
            :ARG0 (y / you) 
            :ARG1 (b2 / benefit-01 
                  :ARG1 (a4 / alliance)) 
            :location (p / policy 
                  :mod (b / both))) 
      :mod-of (a / accept-01 
            :ARG1 (p7 / possible 
                  :op1 (i / i)) 
            :ARG1-of (g / guarantee-01 
                  :ARG0 (y2 / you 
                        :ARG1-of (o / offer-01 
                              :ARG0 (p3 / policy 
                                    :ARG1-of (c2 / contrast-01 
                                          :ARG0 (y3 / you) 
                                          :ARG2 (a5 / already) 
                                          :consist (y4 / yes 
                                                :mod (p5 / policy 
                                                      :mod (p6 / personal 
                                                            :mod-of (a6 / accident))))) 
                                    :mod (p4 / personal 
                                          :mod-of (s / sun) 
                                          :mod-of (a3 / accident))) 
                              :mod (a2 / also))))))

# ::snt we pray for all those killed each day in wars disasters and accidents throughout the world for prisoners of conscience and all who suffer from torture starvation or maltreatment and for george swadling dermot horgan john murphy robert dunseath and mary bester whose anniversaries fall at this time of the year
# ::tok we pray for all those killed each day in wars disasters and accidents throughout the world for prisoners of conscience and all who suffer from torture starvation or maltreatment and for george swadling dermot horgan john murphy robert dunseath and mary bester whose anniversaries fall at this time of the year
# ::alignments 50-51|0.0.1 47-48|0.0 46-47|0.0.0 39-40|0.2.0.3 29-30|0.2 27-28|0.3 26-27|0 25-26|0.1 23-24|0.3.0 21-22|0.3.0.0 20-21|0.2.0 19-20|0.2.0.2 15-16|0.2.0.1.0 13-14|0.2.0.1 12-13|0.2.0.0.1.1 11-12|0.2.0.0.1 10-11|0.2.0.0.2 9-10|0.2.0.0.1.0 7-8|0.2.0.0.3 6-7|0.2.0.0.3.0 5-6|0.2.0.0 3-4|0.2.0.0.0 1-2|0.3.0.1 0-1|0.3.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:54.764
# ::node	0	starve-01	26-27
# ::node	0.0	time	47-48
# ::node	0.0.0	this	46-47
# ::node	0.0.1	year	50-51
# ::node	0.1	torture-01	25-26
# ::node	0.2	and	29-30
# ::node	0.2.0	and	20-21
# ::node	0.2.0.0	kill-01	5-6
# ::node	0.2.0.0.0	all	3-4
# ::node	0.2.0.0.1	and	11-12
# ::node	0.2.0.0.1.0	war-01	9-10
# ::node	0.2.0.0.1.1	accident	12-13
# ::node	0.2.0.0.2	disaster	10-11
# ::node	0.2.0.0.3	day	7-8
# ::node	0.2.0.0.3.0	each	6-7
# ::node	0.2.0.1	throughout	13-14
# ::node	0.2.0.1.0	world	15-16
# ::node	0.2.0.2	conscience	19-20
# ::node	0.2.0.3	and	39-40
# ::node	0.3	or	27-28
# ::node	0.3.0	suffer-01	23-24
# ::node	0.3.0.0	all	21-22
# ::node	0.3.0.1	pray-01	1-2
# ::node	0.3.0.1.0	we	0-1
# ::root	0	starve-01
# ::edge	and	op1	accident	0.2.0.0.1	0.2.0.0.1.1	
# ::edge	and	op1	and	0.2	0.2.0	
# ::edge	and	op1	conscience	0.2.0	0.2.0.2	
# ::edge	and	op2	and	0.2.0	0.2.0.3	
# ::edge	and	op2	starve-01	0.2	0	
# ::edge	day	mod	each	0.2.0.0.3	0.2.0.0.3.0	
# ::edge	kill-01	ARG0	and	0.2.0.0	0.2.0	
# ::edge	kill-01	ARG1	all	0.2.0.0	0.2.0.0.0	
# ::edge	kill-01	instrument	and	0.2.0.0	0.2.0.0.1	
# ::edge	kill-01	location	disaster	0.2.0.0	0.2.0.0.2	
# ::edge	kill-01	time	day	0.2.0.0	0.2.0.0.3	
# ::edge	or	op1	starve-01	0.3	0	
# ::edge	pray-01	ARG0	we	0.3.0.1	0.3.0.1.0	
# ::edge	pray-01	ARG1	suffer-01	0.3.0.1	0.3.0	
# ::edge	starve-01	ARG1	time	0	0.0	
# ::edge	suffer-01	ARG0	or	0.3.0	0.3	
# ::edge	suffer-01	ARG1	all	0.3.0	0.3.0.0	
# ::edge	throughout	op1	world	0.2.0.1	0.2.0.1.0	
# ::edge	throughout	op2	and	0.2.0.1	0.2.0	
# ::edge	time	mod	this	0.0	0.0.0	
# ::edge	torture-01	ARG1	starve-01	0.1	0	
# ::edge	war-01	ARG1	and	0.2.0.0.1.0	0.2.0.0.1	
# ::edge	year	part	time	0.0.1	0.0	
(s / starve-01 
      :ARG1 (t / time 
            :mod (t2 / this) 
            :part-of (y / year)) 
      :ARG1-of (t3 / torture-01) 
      :op-of (a2 / and 
            :op1 (a4 / and 
                  :ARG0-of (k / kill-01 
                        :ARG1 (a7 / all) 
                        :instrument (a6 / and 
                              :ARG1-of (w2 / war-01) 
                              :op1 (a5 / accident)) 
                        :location (d / disaster) 
                        :time (d2 / day 
                              :mod (e / each))) 
                  :op-of (t4 / throughout 
                        :op1 (w / world)) 
                  :op1 (c / conscience) 
                  :op2 (a / and))) 
      :op-of (o / or 
            :ARG0-of (s2 / suffer-01 
                  :ARG1 (a3 / all) 
                  :ARG1-of (p / pray-01 
                        :ARG0 (w3 / we)))))

# ::snt in that case her relatives would have enquired for her raised a hue and cry at the time of the accident
# ::tok in that case her relatives would have enquired for her raised a hue and cry at the time of the accident
# ::alignments 20-21|0.0.1 17-18|0.1.0 14-15|0.1 13-14|0 10-11|0.0 4-5|0.0.0.1+0.0.0 2-3|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:54.808
# ::node	0	and	13-14
# ::node	0.0	raise-01	10-11
# ::node	0.0.0	have-rel-role-91	4-5
# ::node	0.0.0.0	case	2-3
# ::node	0.0.0.1	relative	4-5
# ::node	0.0.1	accident	20-21
# ::node	0.1	cry-02	14-15
# ::node	0.1.0	time	17-18
# ::root	0	and
# ::edge	and	op1	cry-02	0	0.1	
# ::edge	cry-02	ARG1	time	0.1	0.1.0	
# ::edge	have-rel-role-91	ARG1	case	0.0.0	0.0.0.0	
# ::edge	have-rel-role-91	ARG2	relative	0.0.0	0.0.0.1	
# ::edge	raise-01	ARG0	have-rel-role-91	0.0	0.0.0	
# ::edge	raise-01	ARG1	and	0.0	0	
# ::edge	raise-01	location	accident	0.0	0.0.1	
(a2 / and 
      :ARG1-of (r / raise-01 
            :ARG0 (h / have-rel-role-91 
                  :ARG1 (c2 / case) 
                  :ARG2 (r2 / relative)) 
            :location (a / accident)) 
      :op1 (c / cry-02 
            :ARG1 (t / time)))

# ::snt he fears motorists are no longer held in high esteem and it was time the government took steps to limit the amount of damages payable after a traffic accident otherwise there would soon be no motorists left
# ::tok he fears motorists are no longer held in high esteem and it was time the government took steps to limit the amount of damages payable after a traffic accident otherwise there would soon be no motorists left
# ::alignments 34-35|0.0.0.0.0.0.0 32-33|0.0.0.0.2 29-30|0.0.0.0.0.0.1.0.0 28-29|0.0.0.0.0.0.1.0.1.0 27-28|0.0.0.0.0.0.1.0.1.0.0 25-26|0.0.0.0.0.0.1.0.1 23-24|0.0.0.0.0.0.1.0 21-22|0.0.0.0.0.0.1 19-20|0.0.0.0.0.0 17-18|0.0.0.0.0 13-14|0.0.0.0 11-12|0.0.0.0.1 10-11|0.0.0 8-9|0.0.0.0.1.0 5-6|0.1 4-5|0.1.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:55.179
# ::node	0	fear-01	1-2
# ::node	0.0	he	0-1
# ::node	0.0.0	and	10-11
# ::node	0.0.0.0	time	13-14
# ::node	0.0.0.0.0	step-01	17-18
# ::node	0.0.0.0.0.0	limit-01	19-20
# ::node	0.0.0.0.0.0.0	-	34-35
# ::node	0.0.0.0.0.0.1	amount	21-22
# ::node	0.0.0.0.0.0.1.0	damage-01	23-24
# ::node	0.0.0.0.0.0.1.0.0	otherwise	29-30
# ::node	0.0.0.0.0.0.1.0.1	after	25-26
# ::node	0.0.0.0.0.0.1.0.1.0	accident	28-29
# ::node	0.0.0.0.0.0.1.0.1.0.0	traffic	27-28
# ::node	0.0.0.0.1	it	11-12
# ::node	0.0.0.0.1.0	high	8-9
# ::node	0.0.0.0.2	soon	32-33
# ::node	0.1	long	5-6
# ::node	0.1.0	-	4-5
# ::root	0	fear-01
# ::edge	accident	location	traffic	0.0.0.0.0.0.1.0.1.0	0.0.0.0.0.0.1.0.1.0.0	
# ::edge	after	op1	accident	0.0.0.0.0.0.1.0.1	0.0.0.0.0.0.1.0.1.0	
# ::edge	and	op1	he	0.0.0	0.0	
# ::edge	and	time	time	0.0.0	0.0.0.0	
# ::edge	damage-01	ARG0	otherwise	0.0.0.0.0.0.1.0	0.0.0.0.0.0.1.0.0	
# ::edge	damage-01	ARG1	after	0.0.0.0.0.0.1.0	0.0.0.0.0.0.1.0.1	
# ::edge	damage-01	quant	amount	0.0.0.0.0.0.1.0	0.0.0.0.0.0.1	
# ::edge	fear-01	ARG0	he	0	0.0	
# ::edge	fear-01	ARG1	long	0	0.1	
# ::edge	high	poss	it	0.0.0.0.1.0	0.0.0.0.1	
# ::edge	limit-01	ARG0	-	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	limit-01	ARG1	amount	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	long	polarity	-	0.1	0.1.0	
# ::edge	step-01	ARG0	time	0.0.0.0.0	0.0.0.0	
# ::edge	step-01	ARG1	limit-01	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	time	domain	it	0.0.0.0	0.0.0.0.1	
# ::edge	time	mod	soon	0.0.0.0	0.0.0.0.2	
(f / fear-01 
      :ARG0 (h2 / he 
            :op-of (a4 / and 
                  :time (t2 / time 
                        :ARG0-of (s2 / step-01 
                              :ARG1 (l / limit-01 
                                    :ARG0 (- / -) 
                                    :ARG1 (a3 / amount 
                                          :quant-of (d / damage-01 
                                                :ARG0 (o / otherwise) 
                                                :ARG1 (a2 / after 
                                                      :op1 (a / accident 
                                                            :location (t / traffic))))))) 
                        :domain (i / it 
                              :poss-of (h / high)) 
                        :mod (s / soon)))) 
      :ARG1 (l2 / long 
            :polarity (-2 / -)))

# ::snt there are l00000 foxes killed through road accidents a year while fox hunting kills about 8000 foxes a year so fox hunting plays a very small part in keeping the fox population down
# ::tok there are l00000 foxes killed through road accidents a year while fox hunting kills about 8000 foxes a year so fox hunting plays a very small part in keeping the fox population down
# ::alignments 32-33|0.2.0 31-32|0.2 25-26|0.0.2 24-25|0.0.2.0 22-23|0 21-22|0.1 19-20|0.3 18-19|0.1.0 15-16|0.1.1 13-14|0.0.1 12-13|0.0 9-10|0.0.0 7-8|0.0.1.0.0 6-7|0.0.1.0.0.0 4-5|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:55.526
# ::node	0	play-02	22-23
# ::node	0.0	hunt-01	12-13
# ::node	0.0.0	year	9-10
# ::node	0.0.1	kill-01	13-14
# ::node	0.0.1.0	kill-01	4-5
# ::node	0.0.1.0.0	accident	7-8
# ::node	0.0.1.0.0.0	road	6-7
# ::node	0.0.2	small	25-26
# ::node	0.0.2.0	very	24-25
# ::node	0.1	hunt-01	21-22
# ::node	0.1.0	year	18-19
# ::node	0.1.1	8000	15-16
# ::node	0.2	population	31-32
# ::node	0.2.0	down	32-33
# ::node	0.3	so	19-20
# ::root	0	play-02
# ::edge	accident	location	road	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	down	path	population	0.2.0	0.2	
# ::edge	hunt-01	ARG0	year	0.0	0.0.0	
# ::edge	hunt-01	ARG0	year	0.1	0.1.0	
# ::edge	hunt-01	ARG1	8000	0.1	0.1.1	
# ::edge	hunt-01	ARG1	small	0.0	0.0.2	
# ::edge	kill-01	ARG0	accident	0.0.1.0	0.0.1.0.0	
# ::edge	kill-01	ARG0	hunt-01	0.0.1	0.0	
# ::edge	kill-01	ARG1	kill-01	0.0.1	0.0.1.0	
# ::edge	play-02	ARG0	hunt-01	0	0.0	
# ::edge	play-02	ARG1	hunt-01	0	0.1	
# ::edge	play-02	manner	population	0	0.2	
# ::edge	small	degree	very	0.0.2	0.0.2.0	
# ::edge	so	op1	play-02	0.3	0	
(p2 / play-02 
      :ARG0 (h2 / hunt-01 
            :ARG0 (y2 / year) 
            :ARG0-of (k / kill-01 
                  :ARG1 (k2 / kill-01 
                        :ARG0 (a / accident 
                              :location (r / road)))) 
            :ARG1 (s / small 
                  :degree (v / very))) 
      :ARG1 (h / hunt-01 
            :ARG0 (y / year) 
            :ARG1 8000) 
      :manner (p / population 
            :path-of (d / down)) 
      :op-of (s2 / so))

# ::snt police are appealing for witnesses following a mysterious road accident in oxford today when a man with head injuries was found lying in a hedge
# ::tok police are appealing for witnesses following a mysterious road accident in oxford today when a man with head injuries was found lying in a hedge
# ::alignments 24-25|0.0.0.0.1 21-22|0.0.0.0 20-21|0.0.0 18-19|0.1.1.1 17-18|0.1.1 15-16|0.0.0.0.0 12-13|0.1.1.0 9-10|0.1.1.0.0 8-9|0.1.1.0.0.0 7-8|0.1.1.0.0.1 4-5|0.1.0+0.1 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:55.946
# ::node	0	appeal-03	2-3
# ::node	0.0	police	0-1
# ::node	0.0.0	find-01	20-21
# ::node	0.0.0.0	lie-01	21-22
# ::node	0.0.0.0.0	man	15-16
# ::node	0.0.0.0.1	hedge	24-25
# ::node	0.1	person	4-5
# ::node	0.1.0	witness-01	4-5
# ::node	0.1.1	head-01	17-18
# ::node	0.1.1.0	today	12-13
# ::node	0.1.1.0.0	accident	9-10
# ::node	0.1.1.0.0.0	road	8-9
# ::node	0.1.1.0.0.1	mystery	7-8
# ::node	0.1.1.1	injure-01	18-19
# ::root	0	appeal-03
# ::edge	accident	location	road	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	accident	mod	mystery	0.1.1.0.0	0.1.1.0.0.1	
# ::edge	accident	time	today	0.1.1.0.0	0.1.1.0	
# ::edge	appeal-03	ARG0	police	0	0.0	
# ::edge	appeal-03	ARG1	person	0	0.1	
# ::edge	find-01	ARG0	police	0.0.0	0.0	
# ::edge	find-01	ARG1	lie-01	0.0.0	0.0.0.0	
# ::edge	head-01	ARG0	person	0.1.1	0.1	
# ::edge	head-01	ARG1	today	0.1.1	0.1.1.0	
# ::edge	injure-01	ARG1	head-01	0.1.1.1	0.1.1	
# ::edge	lie-01	ARG0	man	0.0.0.0	0.0.0.0.0	
# ::edge	lie-01	ARG2	hedge	0.0.0.0	0.0.0.0.1	
# ::edge	witness-01	ARG0	person	0.1.0	0.1	
(a2 / appeal-03 
      :ARG0 (p2 / police 
            :ARG0-of (f / find-01 
                  :ARG1 (l / lie-01 
                        :ARG0 (m / man) 
                        :ARG2 (h / hedge)))) 
      :ARG1 (p / person 
            :ARG0-of (w / witness-01) 
            :ARG0-of (h2 / head-01 
                  :ARG1 (t / today 
                        :time-of (a / accident 
                              :location (r / road) 
                              :mod (m2 / mystery))) 
                  :ARG1-of (i / injure-01))))

# ::snt sir roger was still recovering from a bad car accident just before christmas
# ::tok sir roger was still recovering from a bad car accident just before christmas
# ::alignments 11-12|0.2 10-11|0.2.0 9-10|0.0 8-9|0.0.0 7-8|0.0.1 4-5|0 3-4|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:55.967
# ::node	0	recover-01	4-5
# ::node	0.0	accident	9-10
# ::node	0.0.0	car	8-9
# ::node	0.0.1	bad	7-8
# ::node	0.1	still	3-4
# ::node	0.2	before	11-12
# ::node	0.2.0	just	10-11
# ::root	0	recover-01
# ::edge	accident	location	car	0.0	0.0.0	
# ::edge	accident	mod	bad	0.0	0.0.1	
# ::edge	before	mod	just	0.2	0.2.0	
# ::edge	recover-01	ARG0	accident	0	0.0	
# ::edge	recover-01	mod	still	0	0.1	
# ::edge	recover-01	time	before	0	0.2	
(r / recover-01 
      :ARG0 (a / accident 
            :location (c / car) 
            :mod (b2 / bad)) 
      :mod (s / still) 
      :time (b / before 
            :mod (j / just)))

# ::snt originally he thought he would become a poet and it was by accident that he became a doctor, paris was an accident too, or at least they look like accidents although they were probably not
# ::tok originally he thought he would become a poet and it was by accident that he became a doctor , paris was an accident too , or at least they look like accidents although they were probably not
# ::alignments 35-36|0 33-34|0.0.3.0.2 31-32|0.0.3.0.2.0 28-29|0.0.3.0.1.2.0 25-26|0.0.3.1 23-24|0.0.3.0.1.3.0 22-23|0.0.3.0.1.3 17-18|0.0.2 15-16|0.0 14-15|0.0.1 12-13|0.0.0 9-10|0.0.3.0.1.0 8-9|0.0.3 7-8|0.0.3.0.1.2 5-6|0.0.3.0.1 3-4|0.0.3.0.1.1 2-3|0.0.3.0 1-2|0.0.3.0.0 0-1|0.0.3.0.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:56.689
# ::node	0	probable	35-36
# ::node	0.0	become-01	15-16
# ::node	0.0.0	accident	12-13
# ::node	0.0.1	he	14-15
# ::node	0.0.2	doctor	17-18
# ::node	0.0.3	and	8-9
# ::node	0.0.3.0	think-01	2-3
# ::node	0.0.3.0.0	he	1-2
# ::node	0.0.3.0.1	become-01	5-6
# ::node	0.0.3.0.1.0	it	9-10
# ::node	0.0.3.0.1.1	he	3-4
# ::node	0.0.3.0.1.2	poet	7-8
# ::node	0.0.3.0.1.2.0	they	28-29
# ::node	0.0.3.0.1.3	accident	22-23
# ::node	0.0.3.0.1.3.0	too	23-24
# ::node	0.0.3.0.2	they	33-34
# ::node	0.0.3.0.2.0	accident	31-32
# ::node	0.0.3.0.3	original	0-1
# ::node	0.0.3.1	or	25-26
# ::root	0	probable
# ::edge	accident	mod	too	0.0.3.0.1.3	0.0.3.0.1.3.0	
# ::edge	accident	op1	become-01	0.0.3.0.1.3	0.0.3.0.1	
# ::edge	accident	poss	they	0.0.3.0.2.0	0.0.3.0.2	
# ::edge	and	op1	think-01	0.0.3	0.0.3.0	
# ::edge	and	op2	become-01	0.0.3	0.0	
# ::edge	and	op3	or	0.0.3	0.0.3.1	
# ::edge	become-01	ARG0	accident	0.0	0.0.0	
# ::edge	become-01	ARG0	it	0.0.3.0.1	0.0.3.0.1.0	
# ::edge	become-01	ARG1	he	0.0	0.0.1	
# ::edge	become-01	ARG1	he	0.0.3.0.1	0.0.3.0.1.1	
# ::edge	become-01	ARG2	doctor	0.0	0.0.2	
# ::edge	become-01	ARG2	poet	0.0.3.0.1	0.0.3.0.1.2	
# ::edge	poet	poss	they	0.0.3.0.1.2	0.0.3.0.1.2.0	
# ::edge	probable	op1	become-01	0	0.0	
# ::edge	think-01	ARG0	he	0.0.3.0	0.0.3.0.0	
# ::edge	think-01	ARG1	become-01	0.0.3.0	0.0.3.0.1	
# ::edge	think-01	ARG2	they	0.0.3.0	0.0.3.0.2	
# ::edge	think-01	mod	original	0.0.3.0	0.0.3.0.3	
(p / probable 
      :op1 (b / become-01 
            :ARG0 (a3 / accident) 
            :ARG1 (h / he) 
            :ARG2 (d / doctor) 
            :op-of (a4 / and 
                  :op1 (t4 / think-01 
                        :ARG0 (h3 / he) 
                        :ARG1 (b2 / become-01 
                              :ARG0 (i / it) 
                              :ARG1 (h2 / he) 
                              :ARG2 (p2 / poet 
                                    :poss (t2 / they)) 
                              :op-of (a2 / accident 
                                    :mod (t3 / too))) 
                        :ARG2 (t / they 
                              :poss-of (a / accident)) 
                        :mod (o2 / original)) 
                  :op2 (o / or))))

# ::snt dr carolyn vogler who lives in cranham street jericho in oxford says she has noticed a sudden huge increase in the number of cars and heavy lorries travelling along the street and is worried that it may become an accident blackspot
# ::tok dr carolyn vogler who lives in cranham street jericho in oxford says she has noticed a sudden huge increase in the number of cars and heavy lorries travelling along the street and is worried that it may become an accident blackspot
# ::alignments 39-40|0.1.1.0 37-38|0.1.0.1.0 36-37|0.1.0.1.0.2.0+0.1.0.1.0.2 35-36|0.1.0.1.0.1 33-34|0.1.0.1 31-32|0.1.0.1.2 30-31|0.1.0.0.0 28-29|0.1.0.0.1 27-28|0.1.0.0 25-26|0.1.0.1.1 24-25|0.1.1.2 23-24|0.1.1.2.0 21-22|0.1.1.2.0.0 18-19|0.1.1 17-18|0.1.1.1 16-17|0.1.0.1.0.0 14-15|0.1 12-13|0.1.0 11-12|0 7-8|0.1.2 4-5|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:57.370
# ::node	0	say-01	11-12
# ::node	0.0	life	4-5
# ::node	0.1	notice-01	14-15
# ::node	0.1.0	she	12-13
# ::node	0.1.0.0	travel-01	27-28
# ::node	0.1.0.0.0	street	30-31
# ::node	0.1.0.0.1	along	28-29
# ::node	0.1.0.1	worry-02	33-34
# ::node	0.1.0.1.0	become-01	37-38
# ::node	0.1.0.1.0.0	sudden	16-17
# ::node	0.1.0.1.0.1	it	35-36
# ::node	0.1.0.1.0.2	date-entity	36-37
# ::node	0.1.0.1.0.2.0	5	36-37
# ::node	0.1.0.1.1	heavy	25-26
# ::node	0.1.0.1.2	and	31-32
# ::node	0.1.1	increase-01	18-19
# ::node	0.1.1.0	accident	39-40
# ::node	0.1.1.1	huge	17-18
# ::node	0.1.1.2	and	24-25
# ::node	0.1.1.2.0	car	23-24
# ::node	0.1.1.2.0.0	number	21-22
# ::node	0.1.2	street	7-8
# ::root	0	say-01
# ::edge	and	op1	increase-01	0.1.1.2	0.1.1	
# ::edge	and	op1	worry-02	0.1.0.1.2	0.1.0.1	
# ::edge	and	op2	car	0.1.1.2	0.1.1.2.0	
# ::edge	become-01	ARG0	sudden	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	become-01	ARG1	it	0.1.0.1.0	0.1.0.1.0.1	
# ::edge	car	quant	number	0.1.1.2.0	0.1.1.2.0.0	
# ::edge	date-entity	domain	become-01	0.1.0.1.0.2	0.1.0.1.0	
# ::edge	date-entity	month	5	0.1.0.1.0.2	0.1.0.1.0.2.0	
# ::edge	increase-01	ARG0	accident	0.1.1	0.1.1.0	
# ::edge	increase-01	mod	huge	0.1.1	0.1.1.1	
# ::edge	notice-01	ARG0	she	0.1	0.1.0	
# ::edge	notice-01	ARG1	increase-01	0.1	0.1.1	
# ::edge	notice-01	ARG2	street	0.1	0.1.2	
# ::edge	say-01	ARG0	life	0	0.0	
# ::edge	say-01	ARG1	notice-01	0	0.1	
# ::edge	travel-01	ARG0	she	0.1.0.0	0.1.0	
# ::edge	travel-01	ARG1	street	0.1.0.0	0.1.0.0.0	
# ::edge	travel-01	ARG2	along	0.1.0.0	0.1.0.0.1	
# ::edge	worry-02	ARG0	she	0.1.0.1	0.1.0	
# ::edge	worry-02	ARG1	become-01	0.1.0.1	0.1.0.1.0	
# ::edge	worry-02	ARG2	heavy	0.1.0.1	0.1.0.1.1	
(s4 / say-01 
      :ARG0 (l / life) 
      :ARG1 (n2 / notice-01 
            :ARG0 (s3 / she 
                  :ARG0-of (t / travel-01 
                        :ARG1 (s / street) 
                        :ARG2 (a3 / along)) 
                  :ARG0-of (w / worry-02 
                        :ARG1 (b / become-01 
                              :ARG0 (s2 / sudden) 
                              :ARG1 (i / it) 
                              :domain-of (d / date-entity 
                                    :month 5)) 
                        :ARG2 (h / heavy) 
                        :op-of (a2 / and))) 
            :ARG1 (i2 / increase-01 
                  :ARG0 (a / accident) 
                  :mod (h2 / huge) 
                  :op-of (a4 / and 
                        :op1 (c / car 
                              :quant (n / number)))) 
            :ARG2 (s5 / street)))

# ::snt you would receive up to 80 per day for every day you spent  in hospital following an accident from a brief overnight stay  up to 100 days
# ::tok you would receive up to 80 per day for every day you spent in hospital following an accident from a brief overnight stay up to 100 days
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:57.371
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt even before his accident hes much given to lighting his pipe slumping in a chair and arguing that its no use pushing against fate
# ::tok even before his accident hes much given to lighting his pipe slumping in a chair and arguing that its no use pushing against fate
# ::alignments 23-24|0.2.1.0.1 21-22|0.2.1.0 20-21|0.2.1 19-20|0.0 16-17|0 15-16|0.2 14-15|0.1 10-11|0.2.0 6-7|0.2.1.0.0.0 5-6|0.2.1.0.0.0.1 3-4|0.2.1.0.0 1-2|0.2.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:02:57.475
# ::node	0	argue-01	16-17
# ::node	0.0	-	19-20
# ::node	0.1	chair	14-15
# ::node	0.2	and	15-16
# ::node	0.2.0	pipe	10-11
# ::node	0.2.1	use-01	20-21
# ::node	0.2.1.0	push-02	21-22
# ::node	0.2.1.0.0	accident	3-4
# ::node	0.2.1.0.0.0	give-01	6-7
# ::node	0.2.1.0.0.0.0	before	1-2
# ::node	0.2.1.0.0.0.1	much	5-6
# ::node	0.2.1.0.1	fate	23-24
# ::root	0	argue-01
# ::edge	and	op1	pipe	0.2	0.2.0	
# ::edge	and	op2	argue-01	0.2	0	
# ::edge	and	op3	use-01	0.2	0.2.1	
# ::edge	argue-01	ARG0	-	0	0.0	
# ::edge	argue-01	ARG1	chair	0	0.1	
# ::edge	give-01	ARG0	before	0.2.1.0.0.0	0.2.1.0.0.0.0	
# ::edge	give-01	ARG1	accident	0.2.1.0.0.0	0.2.1.0.0	
# ::edge	give-01	manner	much	0.2.1.0.0.0	0.2.1.0.0.0.1	
# ::edge	push-02	ARG0	accident	0.2.1.0	0.2.1.0.0	
# ::edge	push-02	ARG1	use-01	0.2.1.0	0.2.1	
# ::edge	push-02	ARG2	fate	0.2.1.0	0.2.1.0.1	
(a / argue-01 
      :ARG0 (- / -) 
      :ARG1 (c / chair) 
      :op-of (a2 / and 
            :op1 (p2 / pipe) 
            :op2 (u / use-01 
                  :ARG1-of (p / push-02 
                        :ARG0 (a3 / accident 
                              :ARG1-of (g / give-01 
                                    :ARG0 (b / before) 
                                    :manner (m / much))) 
                        :ARG2 (f / fate)))))

# ::snt it finds for example the male drivers up to 20 years old have seven times more accidents per million kilometres driven than men in their fifties, young women have fewer accidents than young men but after the age of 30 the position is reversed, accident rates begin to increase again at about 60 rising sharply for drivers in their seventies when older women are at twice the risk of being in an accident than older men
# ::tok it finds for example the male drivers up to 20 years old have seven times more accidents per million kilometres driven than men in their fifties , young women have fewer accidents than young men but after the age of 30 the position is reversed , accident rates begin to increase again at about 60 rising sharply for drivers in their seventies when older women are at twice the risk of being in an accident than older men
# ::alignments 77-78|0.2.1.1.0.0 76-77|0.2.1.1.0 74-75|0.2.1.1.1.0.1 69-70|0.2.1.1.1.0 64-65|0.2.1.1.1 63-64|0.2.1.1.1.1 58-59|0.2.1.1.2.0+0.2.1.1.2 56-57|0.2.1.1.3 55-56|0.2.1.1 54-55|0.2.1.1.1.0.0 51-52|0.2.1.2 50-51|0.2.1 48-49|0.2 47-48|0.2.1.0 46-47|0.2.1.0.0 44-45|0.2.2 42-43|0.2.2.1 40-41|0.2.2.0 38-39|0.2.2.3.0 36-37|0.2.2.3 35-36|0 34-35|0.2.2.3.0.0 33-34|0.2.2.3.0.0.1 31-32|0.1 30-31|0.1.1 28-29|0.1.0 27-28|0.2.2.3.0.0.0 22-23|0.2.2.2.0.0 20-21|0.2.2.2.0 19-20|0.2.2.2.0.1.0+0.2.2.2.0.1 16-17|0.2.2.2 13-14|0.0 11-12|0.2.0.0.0.0 10-11|0.2.0.0.0.2+0.2.0.0.0 9-10|0.2.0.0.0.1 6-7|0.2.0.0+0.2.0 5-6|0.2.2.2.0.2 3-4|0.2.0.1.1 1-2|0.2.0.1 0-1|0.2.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:00.146
# ::node	0	contrast-01	35-36
# ::node	0.0	7	13-14
# ::node	0.1	accident	31-32
# ::node	0.1.0	woman	28-29
# ::node	0.1.1	few	30-31
# ::node	0.2	begin-01	48-49
# ::node	0.2.0	person	6-7
# ::node	0.2.0.0	drive-01	6-7
# ::node	0.2.0.0.0	temporal-quantity	10-11
# ::node	0.2.0.0.0.0	old	11-12
# ::node	0.2.0.0.0.1	20	9-10
# ::node	0.2.0.0.0.2	year	10-11
# ::node	0.2.0.1	find-01	1-2
# ::node	0.2.0.1.0	it	0-1
# ::node	0.2.0.1.1	example	3-4
# ::node	0.2.1	increase-01	50-51
# ::node	0.2.1.0	rate	47-48
# ::node	0.2.1.0.0	accident	46-47
# ::node	0.2.1.1	rise-01	55-56
# ::node	0.2.1.1.0	old	76-77
# ::node	0.2.1.1.0.0	man	77-78
# ::node	0.2.1.1.1	woman	64-65
# ::node	0.2.1.1.1.0	risk-01	69-70
# ::node	0.2.1.1.1.0.0	60	54-55
# ::node	0.2.1.1.1.0.1	accident	74-75
# ::node	0.2.1.1.1.1	old	63-64
# ::node	0.2.1.1.2	person	58-59
# ::node	0.2.1.1.2.0	drive-01	58-59
# ::node	0.2.1.1.3	sharp	56-57
# ::node	0.2.1.2	again	51-52
# ::node	0.2.2	reverse-01	44-45
# ::node	0.2.2.0	30	40-41
# ::node	0.2.2.1	position	42-43
# ::node	0.2.2.2	accident	16-17
# ::node	0.2.2.2.0	drive-02	20-21
# ::node	0.2.2.2.0.0	man	22-23
# ::node	0.2.2.2.0.1	distance-quantity	19-20
# ::node	0.2.2.2.0.1.0	kilometer	19-20
# ::node	0.2.2.2.0.2	male	5-6
# ::node	0.2.2.3	after	36-37
# ::node	0.2.2.3.0	age-01	38-39
# ::node	0.2.2.3.0.0	man	34-35
# ::node	0.2.2.3.0.0.0	young	27-28
# ::node	0.2.2.3.0.0.1	young	33-34
# ::root	0	contrast-01
# ::edge	accident	quant	few	0.1	0.1.1	
# ::edge	after	op1	age-01	0.2.2.3	0.2.2.3.0	
# ::edge	age-01	ARG1	man	0.2.2.3.0	0.2.2.3.0.0	
# ::edge	begin-01	ARG0	person	0.2	0.2.0	
# ::edge	begin-01	ARG1	increase-01	0.2	0.2.1	
# ::edge	contrast-01	ARG0	7	0	0.0	
# ::edge	contrast-01	ARG1	accident	0	0.1	
# ::edge	contrast-01	ARG2	begin-01	0	0.2	
# ::edge	distance-quantity	unit	kilometer	0.2.2.2.0.1	0.2.2.2.0.1.0	
# ::edge	drive-01	ARG0	person	0.2.0.0	0.2.0	
# ::edge	drive-01	ARG0	person	0.2.1.1.2.0	0.2.1.1.2	
# ::edge	drive-01	ARG1	temporal-quantity	0.2.0.0	0.2.0.0.0	
# ::edge	drive-02	ARG0	man	0.2.2.2.0	0.2.2.2.0.0	
# ::edge	drive-02	ARG1	distance-quantity	0.2.2.2.0	0.2.2.2.0.1	
# ::edge	drive-02	consist	accident	0.2.2.2.0	0.2.2.2	
# ::edge	find-01	ARG0	it	0.2.0.1	0.2.0.1.0	
# ::edge	find-01	ARG1	person	0.2.0.1	0.2.0	
# ::edge	find-01	location	example	0.2.0.1	0.2.0.1.1	
# ::edge	increase-01	ARG0	rate	0.2.1	0.2.1.0	
# ::edge	increase-01	ARG1	rise-01	0.2.1	0.2.1.1	
# ::edge	increase-01	mod	again	0.2.1	0.2.1.2	
# ::edge	male	op1	drive-02	0.2.2.2.0.2	0.2.2.2.0	
# ::edge	man	mod	old	0.2.1.1.0.0	0.2.1.1.0	
# ::edge	man	mod	young	0.2.2.3.0.0	0.2.2.3.0.0.0	
# ::edge	man	mod	young	0.2.2.3.0.0	0.2.2.3.0.0.1	
# ::edge	old	domain	temporal-quantity	0.2.0.0.0.0	0.2.0.0.0	
# ::edge	rate	mod	accident	0.2.1.0	0.2.1.0.0	
# ::edge	reverse-01	ARG0	30	0.2.2	0.2.2.0	
# ::edge	reverse-01	ARG1	position	0.2.2	0.2.2.1	
# ::edge	reverse-01	condition	begin-01	0.2.2	0.2	
# ::edge	reverse-01	domain	accident	0.2.2	0.2.2.2	
# ::edge	reverse-01	time	after	0.2.2	0.2.2.3	
# ::edge	rise-01	ARG0	old	0.2.1.1	0.2.1.1.0	
# ::edge	rise-01	ARG1	woman	0.2.1.1	0.2.1.1.1	
# ::edge	rise-01	accompanier	person	0.2.1.1	0.2.1.1.2	
# ::edge	rise-01	manner	sharp	0.2.1.1	0.2.1.1.3	
# ::edge	risk-01	ARG0	woman	0.2.1.1.1.0	0.2.1.1.1	
# ::edge	risk-01	ARG1	60	0.2.1.1.1.0	0.2.1.1.1.0.0	
# ::edge	risk-01	location	accident	0.2.1.1.1.0	0.2.1.1.1.0.1	
# ::edge	temporal-quantity	quant	20	0.2.0.0.0	0.2.0.0.0.1	
# ::edge	temporal-quantity	unit	year	0.2.0.0.0	0.2.0.0.0.2	
# ::edge	woman	mod	accident	0.1.0	0.1	
# ::edge	woman	mod	old	0.2.1.1.1	0.2.1.1.1.1	
(c / contrast-01 
      :ARG0 7 
      :ARG1 (a6 / accident 
            :mod-of (w2 / woman) 
            :quant (f / few)) 
      :ARG2 (b / begin-01 
            :ARG0 (p3 / person 
                  :ARG0-of (d4 / drive-01 
                        :ARG1 (t / temporal-quantity 
                              :domain-of (o3 / old) 
                              :quant 20 
                              :unit (y3 / year))) 
                  :ARG1-of (f2 / find-01 
                        :ARG0 (i2 / it) 
                        :location (e / example))) 
            :ARG1 (i / increase-01 
                  :ARG0 (r3 / rate 
                        :mod (a3 / accident)) 
                  :ARG1 (r2 / rise-01 
                        :ARG0 (o / old 
                              :mod-of (m / man)) 
                        :ARG1 (w / woman 
                              :ARG0-of (r / risk-01 
                                    :ARG1 60 
                                    :location (a / accident)) 
                              :mod (o2 / old)) 
                        :accompanier (p / person 
                              :ARG0-of (d / drive-01)) 
                        :manner (s / sharp)) 
                  :mod (a2 / again)) 
            :condition-of (r4 / reverse-01 
                  :ARG0 30 
                  :ARG1 (p2 / position) 
                  :domain (a7 / accident 
                        :consist-of (d2 / drive-02 
                              :ARG0 (m3 / man) 
                              :ARG1 (d3 / distance-quantity 
                                    :unit (k / kilometer)) 
                              :op-of (m4 / male))) 
                  :time (a5 / after 
                        :op1 (a4 / age-01 
                              :ARG1 (m2 / man 
                                    :mod (y2 / young) 
                                    :mod (y / young)))))))

# ::snt a man was killed in an accident in the channel tunnel dash
# ::tok a man was killed in an accident in the channel tunnel dash
# ::alignments 10-11|0.1.0 9-10|0.1 6-7|0.2 3-4|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:00.159
# ::node	0	kill-01	3-4
# ::node	0.0	man	1-2
# ::node	0.1	channel	9-10
# ::node	0.1.0	tunnel	10-11
# ::node	0.2	accident	6-7
# ::root	0	kill-01
# ::edge	kill-01	ARG1	man	0	0.0	
# ::edge	kill-01	ARG2	channel	0	0.1	
# ::edge	kill-01	location	accident	0	0.2	
# ::edge	tunnel	mod	channel	0.1.0	0.1	
(k / kill-01 
      :ARG1 (m / man) 
      :ARG2 (c / channel 
            :mod-of (t / tunnel)) 
      :location (a / accident))

# ::snt suppose by mistake or accident he fails to repay on the day named is it fair that he should be held to the terms of the deed
# ::tok suppose by mistake or accident he fails to repay on the day named is it fair that he should be held to the terms of the deed
# ::alignments 23-24|0.0.1.0 18-19|0.0.0.1.0.0 17-18|0.0.0.1.0.0.0 15-16|0.0.0.1.0.0.1 14-15|0.0.0.1.0.0.1.0 11-12|0.0.0.1.0 8-9|0.0.0.1 6-7|0.0.0 5-6|0.0.0.0 4-5|0.0.2 3-4|0.0 2-3|0.0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:00.300
# ::node	0	suppose-01	0-1
# ::node	0.0	or	3-4
# ::node	0.0.0	fail-01	6-7
# ::node	0.0.0.0	he	5-6
# ::node	0.0.0.1	repay-01	8-9
# ::node	0.0.0.1.0	day	11-12
# ::node	0.0.0.1.0.0	recommend-01	18-19
# ::node	0.0.0.1.0.0.0	he	17-18
# ::node	0.0.0.1.0.0.1	fair	15-16
# ::node	0.0.0.1.0.0.1.0	it	14-15
# ::node	0.0.1	mistake-01	2-3
# ::node	0.0.1.0	term	23-24
# ::node	0.0.2	accident	4-5
# ::root	0	suppose-01
# ::edge	fail-01	ARG0	he	0.0.0	0.0.0.0	
# ::edge	fail-01	ARG1	or	0.0.0	0.0	
# ::edge	fail-01	ARG2	repay-01	0.0.0	0.0.0.1	
# ::edge	fair	domain	it	0.0.0.1.0.0.1	0.0.0.1.0.0.1.0	
# ::edge	fair	domain	recommend-01	0.0.0.1.0.0.1	0.0.0.1.0.0	
# ::edge	mistake-01	ARG1	term	0.0.1	0.0.1.0	
# ::edge	or	op1	mistake-01	0.0	0.0.1	
# ::edge	or	op2	accident	0.0	0.0.2	
# ::edge	recommend-01	ARG0	he	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	recommend-01	ARG1	day	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	repay-01	time	day	0.0.0.1	0.0.0.1.0	
# ::edge	suppose-01	ARG2	or	0	0.0	
(s / suppose-01 
      :ARG2 (o / or 
            :ARG1-of (f2 / fail-01 
                  :ARG0 (h2 / he) 
                  :ARG2 (r2 / repay-01 
                        :time (d / day 
                              :ARG1-of (r / recommend-01 
                                    :ARG0 (h / he) 
                                    :domain-of (f / fair 
                                          :domain (i / it)))))) 
            :op1 (m / mistake-01 
                  :ARG1 (t / term)) 
            :op2 (a / accident)))

# ::snt ambulance crews in lincolnshire and cambridgeshire have called for a full inquiry after a fatal road accident early yesterday which they claim should have been handled by suspended staff on standby at a station five minutes away from the crash
# ::tok ambulance crews in lincolnshire and cambridgeshire have called for a full inquiry after a fatal road accident early yesterday which they claim should have been handled by suspended staff on standby at a station five minutes away from the crash
# ::alignments 39-40|0.1.0.4 36-37|0.1.0.2 35-36|0.1.0.2.0.1+0.1.0.2.0 34-35|0.1.0.2.0.0 33-34|0.1.0.3 30-31|0.1.0.0.1.0 28-29|0.1.0.0.1+0.1.0.0 27-28|0.1.0.0.0 25-26|0.1.0 22-23|0.1.0.1 21-22|0 20-21|0.0 18-19|0.2 17-18|0.1.0.4.0 16-17|0.1 15-16|0.1.2 14-15|0.1.3 12-13|0.1.0.1.2 11-12|0.1.1 10-11|0.1.1.0 4-5|0.1.0.1.1 0-1|0.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:01.015
# ::node	0	claim-01	21-22
# ::node	0.0	they	20-21
# ::node	0.1	accident	16-17
# ::node	0.1.0	handle-01	25-26
# ::node	0.1.0.0	person	28-29
# ::node	0.1.0.0.0	suspend-01	27-28
# ::node	0.1.0.0.1	staff-01	28-29
# ::node	0.1.0.0.1.0	standby	30-31
# ::node	0.1.0.1	recommend-01	22-23
# ::node	0.1.0.1.0	ambulance	0-1
# ::node	0.1.0.1.1	and	4-5
# ::node	0.1.0.1.2	after	12-13
# ::node	0.1.0.2	away	36-37
# ::node	0.1.0.2.0	temporal-quantity	35-36
# ::node	0.1.0.2.0.0	5	34-35
# ::node	0.1.0.2.0.1	minute	35-36
# ::node	0.1.0.3	station	33-34
# ::node	0.1.0.4	crash-01	39-40
# ::node	0.1.0.4.0	early	17-18
# ::node	0.1.1	inquire-01	11-12
# ::node	0.1.1.0	full	10-11
# ::node	0.1.2	road	15-16
# ::node	0.1.3	fatal	14-15
# ::node	0.2	yesterday	18-19
# ::root	0	claim-01
# ::edge	accident	location	road	0.1	0.1.2	
# ::edge	accident	mod	fatal	0.1	0.1.3	
# ::edge	and	op1	recommend-01	0.1.0.1.1	0.1.0.1	
# ::edge	away	op1	temporal-quantity	0.1.0.2	0.1.0.2.0	
# ::edge	claim-01	ARG0	they	0	0.0	
# ::edge	claim-01	ARG1	accident	0	0.1	
# ::edge	crash-01	ARG1	early	0.1.0.4	0.1.0.4.0	
# ::edge	handle-01	ARG0	person	0.1.0	0.1.0.0	
# ::edge	handle-01	ARG1	accident	0.1.0	0.1	
# ::edge	handle-01	ARG2	away	0.1.0	0.1.0.2	
# ::edge	handle-01	ARG3	station	0.1.0	0.1.0.3	
# ::edge	handle-01	prep-with	crash-01	0.1.0	0.1.0.4	
# ::edge	inquire-01	ARG1	accident	0.1.1	0.1	
# ::edge	inquire-01	mod	full	0.1.1	0.1.1.0	
# ::edge	recommend-01	ARG0	ambulance	0.1.0.1	0.1.0.1.0	
# ::edge	recommend-01	ARG1	handle-01	0.1.0.1	0.1.0	
# ::edge	recommend-01	time	after	0.1.0.1	0.1.0.1.2	
# ::edge	staff-01	ARG1	standby	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	staff-01	ARG2	person	0.1.0.0.1	0.1.0.0	
# ::edge	suspend-01	ARG0	person	0.1.0.0.0	0.1.0.0	
# ::edge	temporal-quantity	quant	5	0.1.0.2.0	0.1.0.2.0.0	
# ::edge	temporal-quantity	unit	minute	0.1.0.2.0	0.1.0.2.0.1	
# ::edge	yesterday	mod	claim-01	0.2	0	
(c2 / claim-01 
      :ARG0 (t2 / they) 
      :ARG1 (a2 / accident 
            :ARG1-of (h / handle-01 
                  :ARG0 (p / person 
                        :ARG0-of (s4 / suspend-01) 
                        :ARG2-of (s3 / staff-01 
                              :ARG1 (s2 / standby))) 
                  :ARG1-of (r / recommend-01 
                        :ARG0 (a5 / ambulance) 
                        :op-of (a4 / and) 
                        :time (a3 / after)) 
                  :ARG2 (a / away 
                        :op1 (t / temporal-quantity 
                              :quant 5 
                              :unit (m / minute))) 
                  :ARG3 (s / station) 
                  :prep-with (c / crash-01 
                        :ARG1 (e / early))) 
            :ARG1-of (i / inquire-01 
                  :mod (f2 / full)) 
            :location (r2 / road) 
            :mod (f / fatal)) 
      :mod-of (y / yesterday))

# ::snt a motorist involved in an accident with a pack of hounds has criticised the bicester hunt for allowing them to run unsupervised across a public road, motorist andy olejnik of milcombe near banbury says he was very lucky not to have been involved in a more serious accident and fortunate not to have been injured, one of the hounds was killed in the accident which happened around 4pm last saturday march 24 on the b4031 road between finmere and croughton
# ::tok a motorist involved in an accident with a pack of hounds has criticised the bicester hunt for allowing them to run unsupervised across a public road , motorist andy olejnik of milcombe near banbury says he was very lucky not to have been involved in a more serious accident and fortunate not to have been injured , one of the hounds was killed in the accident which happened around 4pm last saturday march 24 on the b4031 road between finmere and croughton
# ::alignments 80-81|0.0.2.1.1.0.1.1.0.0 78-79|0.0.2.1.1.0.1.1.0 77-78|0.0.2.1.1.0.1.1 73-74|0.0.2.1.0 72-73|0.0.2.1.1.0.1.0+0.0.2.1.1.0.1 71-72|0.0.2.1.1.0.0.0 70-71|0.0.2.0.0 68-69|0.0.2.1.1.0.0 67-68|0.0.2.1.1.0 65-66|0.0.2.1.1 62-63|0.0.2.1 55-56|0.0.2.2 49-50|0.0.2.0.2 48-49|0.0.2.0.1 47-48|0.0.2.0.1.0 43-44|0.0.2.0 38-39|0.0 37-38|0.0.1 35-36|0.0.2 34-35|0 32-33|0.0.0.0.2.0 25-26|0.0.0.0.0 24-25|0.0.0.0.3.0 22-23|0.0.0.0.0.0 17-18|0.0.0 15-16|0.0.0.0.1 12-13|0.0.0.0 8-9|0.0.0.0.2 5-6|0.0.0.0.3.1 2-3|0.0.0.0.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:02.084
# ::node	0	say-01	34-35
# ::node	0.0	lucky	38-39
# ::node	0.0.0	allow-01	17-18
# ::node	0.0.0.0	criticize-01	12-13
# ::node	0.0.0.0.0	road	25-26
# ::node	0.0.0.0.0.0	across	22-23
# ::node	0.0.0.0.1	hunt-01	15-16
# ::node	0.0.0.0.2	pack-01	8-9
# ::node	0.0.0.0.2.0	near	32-33
# ::node	0.0.0.0.3	involve-01	2-3
# ::node	0.0.0.0.3.0	public	24-25
# ::node	0.0.0.0.3.1	accident	5-6
# ::node	0.0.1	very	37-38
# ::node	0.0.2	he	35-36
# ::node	0.0.2.0	involve-01	43-44
# ::node	0.0.2.0.0	last	70-71
# ::node	0.0.2.0.1	accident	48-49
# ::node	0.0.2.0.1.0	serious	47-48
# ::node	0.0.2.0.2	and	49-50
# ::node	0.0.2.1	kill-01	62-63
# ::node	0.0.2.1.0	24	73-74
# ::node	0.0.2.1.1	accident	65-66
# ::node	0.0.2.1.1.0	happen-01	67-68
# ::node	0.0.2.1.1.0.0	around	68-69
# ::node	0.0.2.1.1.0.0.0	saturday	71-72
# ::node	0.0.2.1.1.0.1	date-entity	72-73
# ::node	0.0.2.1.1.0.1.0	3	72-73
# ::node	0.0.2.1.1.0.1.1	road	77-78
# ::node	0.0.2.1.1.0.1.1.0	between	78-79
# ::node	0.0.2.1.1.0.1.1.0.0	and	80-81
# ::node	0.0.2.2	injure-01	55-56
# ::root	0	say-01
# ::edge	accident	mod	serious	0.0.2.0.1	0.0.2.0.1.0	
# ::edge	across	op1	road	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	allow-01	ARG1	lucky	0.0.0	0.0	
# ::edge	and	op1	involve-01	0.0.2.0.2	0.0.2.0	
# ::edge	between	op1	and	0.0.2.1.1.0.1.1.0	0.0.2.1.1.0.1.1.0.0	
# ::edge	criticize-01	ARG0	road	0.0.0.0	0.0.0.0.0	
# ::edge	criticize-01	ARG1	hunt-01	0.0.0.0	0.0.0.0.1	
# ::edge	criticize-01	ARG2	allow-01	0.0.0.0	0.0.0	
# ::edge	date-entity	condition	happen-01	0.0.2.1.1.0.1	0.0.2.1.1.0	
# ::edge	date-entity	month	3	0.0.2.1.1.0.1	0.0.2.1.1.0.1.0	
# ::edge	date-entity	source	road	0.0.2.1.1.0.1	0.0.2.1.1.0.1.1	
# ::edge	happen-01	ARG0	accident	0.0.2.1.1.0	0.0.2.1.1	
# ::edge	happen-01	ARG1	around	0.0.2.1.1.0	0.0.2.1.1.0.0	
# ::edge	injure-01	ARG1	he	0.0.2.2	0.0.2	
# ::edge	involve-01	ARG0	he	0.0.2.0	0.0.2	
# ::edge	involve-01	ARG0	public	0.0.0.0.3	0.0.0.0.3.0	
# ::edge	involve-01	ARG1	criticize-01	0.0.0.0.3	0.0.0.0	
# ::edge	involve-01	ARG1	last	0.0.2.0	0.0.2.0.0	
# ::edge	involve-01	ARG2	accident	0.0.0.0.3	0.0.0.0.3.1	
# ::edge	involve-01	ARG2	accident	0.0.2.0	0.0.2.0.1	
# ::edge	kill-01	ARG0	he	0.0.2.1	0.0.2	
# ::edge	kill-01	ARG1	24	0.0.2.1	0.0.2.1.0	
# ::edge	kill-01	location	accident	0.0.2.1	0.0.2.1.1	
# ::edge	lucky	degree	very	0.0	0.0.1	
# ::edge	lucky	domain	he	0.0	0.0.2	
# ::edge	pack-01	ARG0	near	0.0.0.0.2	0.0.0.0.2.0	
# ::edge	pack-01	ARG1	criticize-01	0.0.0.0.2	0.0.0.0	
# ::edge	road	mod	between	0.0.2.1.1.0.1.1	0.0.2.1.1.0.1.1.0	
# ::edge	saturday	quant	around	0.0.2.1.1.0.0.0	0.0.2.1.1.0.0	
# ::edge	say-01	ARG1	lucky	0	0.0	
(s3 / say-01 
      :ARG1 (l2 / lucky 
            :ARG1-of (a7 / allow-01 
                  :ARG2-of (c / criticize-01 
                        :ARG0 (r2 / road 
                              :op-of (a6 / across)) 
                        :ARG1 (h3 / hunt-01) 
                        :ARG1-of (p2 / pack-01 
                              :ARG0 (n / near)) 
                        :ARG1-of (i3 / involve-01 
                              :ARG0 (p / public) 
                              :ARG2 (a8 / accident)))) 
            :degree (v / very) 
            :domain (h2 / he 
                  :ARG0-of (i2 / involve-01 
                        :ARG1 (l / last) 
                        :ARG2 (a5 / accident 
                              :mod (s2 / serious)) 
                        :op-of (a4 / and)) 
                  :ARG0-of (k / kill-01 
                        :ARG1 24 
                        :location (a3 / accident 
                              :ARG0-of (h / happen-01 
                                    :ARG1 (a2 / around 
                                          :quant-of (s / saturday)) 
                                    :condition-of (d / date-entity 
                                          :month 3 
                                          :source (r / road 
                                                :mod (b / between 
                                                      :op1 (a / and))))))) 
                  :ARG1-of (i / injure-01))))

# ::snt dr grant said yesterday that the accident and emergency department would not be closing not least because surrounding hospitals appeared unable to take the load
# ::tok dr grant said yesterday that the accident and emergency department would not be closing not least because surrounding hospitals appeared unable to take the load
# ::alignments 24-25|0.0.0 19-20|0.1.1 18-19|0.1.1.0 17-18|0.1.1.0.0 16-17|0.1 13-14|0.1.0 9-10|0.1.0.1 8-9|0.1.0.0.1 7-8|0.1.0.0 6-7|0.1.0.0.0 3-4|0.2 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:02.359
# ::node	0	say-01	2-3
# ::node	0.0	grant-01	1-2
# ::node	0.0.0	load	24-25
# ::node	0.1	cause-01	16-17
# ::node	0.1.0	close-01	13-14
# ::node	0.1.0.0	and	7-8
# ::node	0.1.0.0.0	accident	6-7
# ::node	0.1.0.0.1	emergency	8-9
# ::node	0.1.0.1	department	9-10
# ::node	0.1.1	appear-01	19-20
# ::node	0.1.1.0	hospital	18-19
# ::node	0.1.1.0.0	surround-01	17-18
# ::node	0.2	yesterday	3-4
# ::root	0	say-01
# ::edge	and	op1	accident	0.1.0.0	0.1.0.0.0	
# ::edge	and	op2	emergency	0.1.0.0	0.1.0.0.1	
# ::edge	appear-01	ARG1	hospital	0.1.1	0.1.1.0	
# ::edge	cause-01	ARG1	close-01	0.1	0.1.0	
# ::edge	cause-01	ARG2	appear-01	0.1	0.1.1	
# ::edge	close-01	ARG0	and	0.1.0	0.1.0.0	
# ::edge	close-01	ARG1	department	0.1.0	0.1.0.1	
# ::edge	grant-01	ARG1	load	0.0	0.0.0	
# ::edge	say-01	ARG0	grant-01	0	0.0	
# ::edge	say-01	ARG1	cause-01	0	0.1	
# ::edge	say-01	time	yesterday	0	0.2	
# ::edge	surround-01	ARG1	hospital	0.1.1.0.0	0.1.1.0	
(s2 / say-01 
      :ARG0 (g / grant-01 
            :ARG1 (l / load)) 
      :ARG1 (c / cause-01 
            :ARG1 (c2 / close-01 
                  :ARG0 (a2 / and 
                        :op1 (a3 / accident) 
                        :op2 (e / emergency)) 
                  :ARG1 (d / department)) 
            :ARG2 (a / appear-01 
                  :ARG1 (h / hospital 
                        :ARG1-of (s / surround-01)))) 
      :time (y / yesterday))

# ::snt all cards offer travel accident insurance
# ::tok all cards offer travel accident insurance
# ::alignments 5-6|0.0.0 4-5|0.0 3-4|0 2-3|0.1 1-2|0.1.0 0-1|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:02.371
# ::node	0	travel-01	3-4
# ::node	0.0	accident	4-5
# ::node	0.0.0	insure-02	5-6
# ::node	0.1	offer-01	2-3
# ::node	0.1.0	card	1-2
# ::node	0.1.0.0	all	0-1
# ::root	0	travel-01
# ::edge	card	quant	all	0.1.0	0.1.0.0	
# ::edge	insure-02	ARG1	accident	0.0.0	0.0	
# ::edge	offer-01	ARG1	card	0.1	0.1.0	
# ::edge	travel-01	ARG0	accident	0	0.0	
# ::edge	travel-01	ARG1	offer-01	0	0.1	
(t / travel-01 
      :ARG0 (a / accident 
            :ARG1-of (i / insure-02)) 
      :ARG1 (o / offer-01 
            :ARG1 (c / card 
                  :quant (a2 / all))))

# ::snt the challengers contended that the statute unjustifiably discriminated between automobile guests and other recipients of hospitality between automobile guests and paying passengers and between accidents on the highway and elsewhere
# ::tok the challengers contended that the statute unjustifiably discriminated between automobile guests and other recipients of hospitality between automobile guests and paying passengers and between accidents on the highway and elsewhere
# ::alignments 29-30|0.2 28-29|0 27-28|0.1 24-25|0.0.1.0.0.1.0.0 23-24|0.0.1.0.0.1.0 22-23|0.0.1.0.0.1 21-22|0.0.1.0.0.0 20-21|0.0 19-20|0.0.1.0.0 18-19|0.0.1.0.0.0.0.0 17-18|0.0.0 16-17|0.0.1.0.0.0.0 12-13|0.1.0 11-12|0.0.1 10-11|0.0.1.0.1.1 9-10|0.0.1.0.1.0 8-9|0.0.1.0.1 7-8|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:02.513
# ::node	0	and	28-29
# ::node	0.0	pay-01	20-21
# ::node	0.0.0	automobile	17-18
# ::node	0.0.1	and	11-12
# ::node	0.0.1.0	discriminate-02	7-8
# ::node	0.0.1.0.0	and	19-20
# ::node	0.0.1.0.0.0	passenger	21-22
# ::node	0.0.1.0.0.0.0	between	16-17
# ::node	0.0.1.0.0.0.0.0	guest	18-19
# ::node	0.0.1.0.0.1	and	22-23
# ::node	0.0.1.0.0.1.0	between	23-24
# ::node	0.0.1.0.0.1.0.0	accident	24-25
# ::node	0.0.1.0.1	between	8-9
# ::node	0.0.1.0.1.0	automobile	9-10
# ::node	0.0.1.0.1.1	guest	10-11
# ::node	0.1	highway	27-28
# ::node	0.1.0	other	12-13
# ::node	0.2	elsewhere	29-30
# ::root	0	and
# ::edge	and	op1	between	0.0.1.0.0.1	0.0.1.0.0.1.0	
# ::edge	and	op1	discriminate-02	0.0.1	0.0.1.0	
# ::edge	and	op1	highway	0	0.1	
# ::edge	and	op1	passenger	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	and	op2	and	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	and	op2	elsewhere	0	0.2	
# ::edge	and	op2	pay-01	0.0.1	0.0	
# ::edge	between	op1	accident	0.0.1.0.0.1.0	0.0.1.0.0.1.0.0	
# ::edge	between	op1	automobile	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	between	op1	guest	0.0.1.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	between	op2	guest	0.0.1.0.1	0.0.1.0.1.1	
# ::edge	between	op2	passenger	0.0.1.0.0.0.0	0.0.1.0.0.0	
# ::edge	discriminate-02	ARG1	and	0.0.1.0	0.0.1.0.0	
# ::edge	discriminate-02	ARG2	between	0.0.1.0	0.0.1.0.1	
# ::edge	highway	mod	other	0.1	0.1.0	
# ::edge	pay-01	ARG1	automobile	0.0	0.0.0	
# ::edge	pay-01	ARG3	and	0.0	0	
(a / and 
      :ARG3-of (p2 / pay-01 
            :ARG1 (a5 / automobile) 
            :op-of (a6 / and 
                  :op1 (d / discriminate-02 
                        :ARG1 (a4 / and 
                              :op1 (p / passenger 
                                    :op-of (b2 / between 
                                          :op1 (g / guest))) 
                              :op2 (a3 / and 
                                    :op1 (b / between 
                                          :op1 (a2 / accident)))) 
                        :ARG2 (b3 / between 
                              :op1 (a7 / automobile) 
                              :op2 (g2 / guest))))) 
      :op1 (h / highway 
            :mod (o / other)) 
      :op2 (e / elsewhere))

# ::snt that certain entrances evoke the descent of a prince or ruling couple is no accident either
# ::tok that certain entrances evoke the descent of a prince or ruling couple is no accident either
# ::alignments 15-16|0.0.1.0 14-15|0.0.0.0 13-14|0.0.0.0.0 11-12|0.0.2 10-11|0.0.1 9-10|0.0 8-9|0 5-6|0.0.0 1-2|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:02.550
# ::node	0	prince	8-9
# ::node	0.0	or	9-10
# ::node	0.0.0	descend-01	5-6
# ::node	0.0.0.0	accident	14-15
# ::node	0.0.0.0.0	-	13-14
# ::node	0.0.0.1	certain	1-2
# ::node	0.0.1	rule-03	10-11
# ::node	0.0.1.0	either	15-16
# ::node	0.0.2	couple	11-12
# ::root	0	prince
(p / prince 
      :op-of (o / or 
            :ARG1-of (d / descend-01 
                  :ARG2 (a / accident 
                        :polarity (- / -)) 
                  :source (c2 / certain)) 
            :op1 (r / rule-03 
                  :ARG1 (e / either)) 
            :op2 (c / couple)))

# ::snt if you were bringing in a sick relative who you were wishing to have admitted to our accident and emergency department you can park your car right outside the front door and bring your relative in
# ::tok if you were bringing in a sick relative who you were wishing to have admitted to our accident and emergency department you can park your car right outside the front door and bring your relative in
# ::alignments 34-35|0.0.1 32-33|0.0 31-32|0.0.2 30-31|0.0.2.1.0.0 29-30|0.0.2.1.0.0.0 27-28|0.0.2.1.0 25-26|0.0.2.0.0.0.1 23-24|0.0.2.1 22-23|0 21-22|0.0.0 20-21|0.0.2.0.1.0 19-20|0.0.2.0.1.0.0 18-19|0.0.2.0.1 17-18|0.0.2.0.3 14-15|0.0.2.0 11-12|0.0.2.0.2 9-10|0.0.2.0.2.0 7-8|0.0.2.0.0 6-7|0.0.2.0.0.1 3-4|0.0.2.0.0.0 1-2|0.0.2.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:03.005
# ::node	0	possible	22-23
# ::node	0.0	bring-01	32-33
# ::node	0.0.0	you	21-22
# ::node	0.0.1	relative	34-35
# ::node	0.0.2	and	31-32
# ::node	0.0.2.0	admit-01	14-15
# ::node	0.0.2.0.0	relative	7-8
# ::node	0.0.2.0.0.0	bring-01	3-4
# ::node	0.0.2.0.0.0.0	you	1-2
# ::node	0.0.2.0.0.0.1	car	25-26
# ::node	0.0.2.0.0.1	sick	6-7
# ::node	0.0.2.0.1	and	18-19
# ::node	0.0.2.0.1.0	department	20-21
# ::node	0.0.2.0.1.0.0	emergency	19-20
# ::node	0.0.2.0.2	wish-01	11-12
# ::node	0.0.2.0.2.0	you	9-10
# ::node	0.0.2.0.3	accident	17-18
# ::node	0.0.2.1	park	23-24
# ::node	0.0.2.1.0	outside	27-28
# ::node	0.0.2.1.0.0	door	30-31
# ::node	0.0.2.1.0.0.0	front	29-30
# ::root	0	possible
# ::edge	admit-01	ARG0	relative	0.0.2.0	0.0.2.0.0	
# ::edge	admit-01	ARG1	and	0.0.2.0	0.0.2.0.1	
# ::edge	admit-01	ARG2	accident	0.0.2.0	0.0.2.0.3	
# ::edge	and	op1	admit-01	0.0.2	0.0.2.0	
# ::edge	and	op1	department	0.0.2.0.1	0.0.2.0.1.0	
# ::edge	and	op2	park	0.0.2	0.0.2.1	
# ::edge	bring-01	ARG0	you	0.0	0.0.0	
# ::edge	bring-01	ARG0	you	0.0.2.0.0.0	0.0.2.0.0.0.0	
# ::edge	bring-01	ARG1	car	0.0.2.0.0.0	0.0.2.0.0.0.1	
# ::edge	bring-01	ARG1	relative	0.0	0.0.1	
# ::edge	bring-01	ARG2	and	0.0	0.0.2	
# ::edge	bring-01	ARG2	relative	0.0.2.0.0.0	0.0.2.0.0	
# ::edge	department	mod	emergency	0.0.2.0.1.0	0.0.2.0.1.0.0	
# ::edge	door	mod	front	0.0.2.1.0.0	0.0.2.1.0.0.0	
# ::edge	outside	op1	door	0.0.2.1.0	0.0.2.1.0.0	
# ::edge	park	location	outside	0.0.2.1	0.0.2.1.0	
# ::edge	possible	domain	bring-01	0	0.0	
# ::edge	relative	mod	sick	0.0.2.0.0	0.0.2.0.0.1	
# ::edge	wish-01	ARG0	you	0.0.2.0.2	0.0.2.0.2.0	
# ::edge	wish-01	ARG1	admit-01	0.0.2.0.2	0.0.2.0	
(p2 / possible 
      :domain (b / bring-01 
            :ARG0 (y / you) 
            :ARG1 (r / relative) 
            :ARG2 (a / and 
                  :op1 (a4 / admit-01 
                        :ARG0 (r2 / relative 
                              :ARG2-of (b2 / bring-01 
                                    :ARG0 (y3 / you) 
                                    :ARG1 (c / car)) 
                              :mod (s / sick)) 
                        :ARG1 (a2 / and 
                              :op1 (d2 / department 
                                    :mod (e / emergency))) 
                        :ARG1-of (w / wish-01 
                              :ARG0 (y2 / you)) 
                        :ARG2 (a3 / accident)) 
                  :op2 (p / park 
                        :location (o / outside 
                              :op1 (d / door 
                                    :mod (f / front)))))))

# ::snt how would you establish at all reliably if a magistrate politician inspector or teacher had made an error  and even if errors could be assessed satisfactorily there need not be any clear link between fullblown errors or accidents and a performance that is generally substandard dash
# ::tok how would you establish at all reliably if a magistrate politician inspector or teacher had made an error and even if errors could be assessed satisfactorily there need not be any clear link between fullblown errors or accidents and a performance that is generally substandard dash
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:03.007
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt plans cater for both an immediate accident and the longterm care of individuals who survive or are caught up in the disaster dash
# ::tok plans cater for both an immediate accident and the longterm care of individuals who survive or are caught up in the disaster dash
# ::alignments 21-22|0.0.1.1.0.0.0 15-16|0 14-15|0.0 12-13|0.0.0 10-11|0.0.1 7-8|0.0.1.1 6-7|0.0.1.1.1 5-6|0.0.1.0 3-4|0.0.1.1.1.0 1-2|0.0.1.1.0 0-1|0.0.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:03.071
# ::node	0	or	15-16
# ::node	0.0	survive-01	14-15
# ::node	0.0.0	individual	12-13
# ::node	0.0.1	care-01	10-11
# ::node	0.0.1.0	immediate	5-6
# ::node	0.0.1.1	and	7-8
# ::node	0.0.1.1.0	cater-01	1-2
# ::node	0.0.1.1.0.0	plan-01	0-1
# ::node	0.0.1.1.0.0.0	disaster	21-22
# ::node	0.0.1.1.1	accident	6-7
# ::node	0.0.1.1.1.0	both	3-4
# ::root	0	or
# ::edge	accident	quant	both	0.0.1.1.1	0.0.1.1.1.0	
# ::edge	and	op1	accident	0.0.1.1	0.0.1.1.1	
# ::edge	and	op2	care-01	0.0.1.1	0.0.1	
# ::edge	care-01	ARG0	survive-01	0.0.1	0.0	
# ::edge	care-01	ARG1	immediate	0.0.1	0.0.1.0	
# ::edge	cater-01	ARG0	plan-01	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	cater-01	ARG1	and	0.0.1.1.0	0.0.1.1	
# ::edge	or	op1	survive-01	0	0.0	
# ::edge	plan-01	ARG1	disaster	0.0.1.1.0.0	0.0.1.1.0.0.0	
# ::edge	survive-01	ARG0	individual	0.0	0.0.0	
(o / or 
      :op1 (s / survive-01 
            :ARG0 (i / individual) 
            :ARG0-of (c / care-01 
                  :ARG1 (i2 / immediate) 
                  :op-of (a / and 
                        :ARG1-of (c2 / cater-01 
                              :ARG0 (p / plan-01 
                                    :ARG1 (d / disaster))) 
                        :op1 (a2 / accident 
                              :quant (b / both))))))

# ::snt whether by design or accident it had joined the counterrevolution
# ::tok whether by design or accident it had joined the counterrevolution
# ::alignments 7-8|0 5-6|0.0 4-5|0.1.0 3-4|0.1 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:03.115
# ::node	0	join-01	7-8
# ::node	0.0	it	5-6
# ::node	0.0.0	design-01	2-3
# ::node	0.1	or	3-4
# ::node	0.1.0	accident	4-5
# ::root	0	join-01
# ::edge	design-01	ARG1	it	0.0.0	0.0	
# ::edge	join-01	ARG0	it	0	0.0	
# ::edge	join-01	ARG1	or	0	0.1	
# ::edge	or	op1	accident	0.1	0.1.0	
(j / join-01 
      :ARG0 (i / it 
            :ARG1-of (d / design-01)) 
      :ARG1 (o / or 
            :op1 (a / accident)))

# ::snt environment watchdogs claim the accident last month will have caused considerable damage to the earths protective ozone layer
# ::tok environment watchdogs claim the accident last month will have caused considerable damage to the earths protective ozone layer
# ::alignments 17-18|0.1.0 16-17|0.1.0.0.0 15-16|0.1.0.0 14-15|0.1.0.1.0.0+0.1.0.1.0+0.1.0.1 11-12|0.1 10-11|0.1.1 9-10|0 6-7|0.0.0.1.0+0.0.0.1 5-6|0.0.0.1.0.0 4-5|0.0 2-3|0.0.0 1-2|0.0.0.0 0-1|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:03.939
# ::node	0	cause-01	9-10
# ::node	0.0	accident	4-5
# ::node	0.0.0	claim-01	2-3
# ::node	0.0.0.0	watchdog	1-2
# ::node	0.0.0.0.0	environment	0-1
# ::node	0.0.0.1	temporal-quantity	6-7
# ::node	0.0.0.1.0	month	6-7
# ::node	0.0.0.1.0.0	last	5-6
# ::node	0.1	damage-01	11-12
# ::node	0.1.0	layer	17-18
# ::node	0.1.0.0	protect-01	15-16
# ::node	0.1.0.0.0	ozone	16-17
# ::node	0.1.0.1	planet	14-15
# ::node	0.1.0.1.0	name	14-15
# ::node	0.1.0.1.0.0	"Earth"	14-15
# ::node	0.1.1	considerable	10-11
# ::root	0	cause-01
# ::edge	cause-01	ARG0	accident	0	0.0	
# ::edge	cause-01	ARG1	damage-01	0	0.1	
# ::edge	claim-01	ARG0	watchdog	0.0.0	0.0.0.0	
# ::edge	claim-01	ARG1	temporal-quantity	0.0.0	0.0.0.1	
# ::edge	claim-01	ARG2	accident	0.0.0	0.0	
# ::edge	damage-01	ARG1	layer	0.1	0.1.0	
# ::edge	damage-01	degree	considerable	0.1	0.1.1	
# ::edge	layer	mod	planet	0.1.0	0.1.0.1	
# ::edge	month	mod	last	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	name	op1	"Earth"	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	planet	name	name	0.1.0.1	0.1.0.1.0	
# ::edge	protect-01	ARG0	ozone	0.1.0.0	0.1.0.0.0	
# ::edge	protect-01	ARG1	layer	0.1.0.0	0.1.0	
# ::edge	temporal-quantity	unit	month	0.0.0.1	0.0.0.1.0	
# ::edge	watchdog	mod	environment	0.0.0.0	0.0.0.0.0	
(c2 / cause-01 
      :ARG0 (a / accident 
            :ARG2-of (c3 / claim-01 
                  :ARG0 (w / watchdog 
                        :mod (e / environment)) 
                  :ARG1 (t / temporal-quantity 
                        :unit (m / month 
                              :mod (l2 / last))))) 
      :ARG1 (d / damage-01 
            :ARG1 (l / layer 
                  :ARG1-of (p / protect-01 
                        :ARG0 (o / ozone)) 
                  :mod (p2 / planet 
                        :name (n / name 
                              :op1 "Earth"))) 
            :degree (c / considerable)))

# ::snt in one case she found a youngster working in a fish and chip shop strictly forbidden because of the dangers of an accident with hot cooking oil
# ::tok in one case she found a youngster working in a fish and chip shop strictly forbidden because of the dangers of an accident with hot cooking oil
# ::alignments 26-27|0.1.0 25-26|0.1.0.0 24-25|0.1.0.0.0 22-23|0.0.0 19-20|0.0 16-17|0 15-16|0.1 14-15|0.1.2 13-14|0.1.1 12-13|0.1.1.0 11-12|0.1.1.1 10-11|0.1.1.1.1 7-8|0.1.1.1.0.0.0 4-5|0.1.1.1.0 3-4|0.1.1.1.0.0 2-3|0.1.1.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:04.312
# ::node	0	cause-01	16-17
# ::node	0.0	danger	19-20
# ::node	0.0.0	accident	22-23
# ::node	0.1	forbid-01	15-16
# ::node	0.1.0	oil	26-27
# ::node	0.1.0.0	cook-01	25-26
# ::node	0.1.0.0.0	hot	24-25
# ::node	0.1.1	shop	13-14
# ::node	0.1.1.0	chip	12-13
# ::node	0.1.1.1	and	11-12
# ::node	0.1.1.1.0	find-01	4-5
# ::node	0.1.1.1.0.0	she	3-4
# ::node	0.1.1.1.0.0.0	work-01	7-8
# ::node	0.1.1.1.0.0.0.0	case	2-3
# ::node	0.1.1.1.1	fish	10-11
# ::node	0.1.2	strict	14-15
# ::root	0	cause-01
# ::edge	and	op1	fish	0.1.1.1	0.1.1.1.1	
# ::edge	and	op2	shop	0.1.1.1	0.1.1	
# ::edge	cause-01	ARG0	danger	0	0.0	
# ::edge	cause-01	ARG1	forbid-01	0	0.1	
# ::edge	cook-01	ARG1	oil	0.1.0.0	0.1.0	
# ::edge	cook-01	mod	hot	0.1.0.0	0.1.0.0.0	
# ::edge	danger	location	accident	0.0	0.0.0	
# ::edge	find-01	ARG0	she	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	find-01	ARG1	and	0.1.1.1.0	0.1.1.1	
# ::edge	forbid-01	ARG0	oil	0.1	0.1.0	
# ::edge	forbid-01	ARG1	shop	0.1	0.1.1	
# ::edge	forbid-01	manner	strict	0.1	0.1.2	
# ::edge	shop	mod	chip	0.1.1	0.1.1.0	
# ::edge	work-01	ARG0	she	0.1.1.1.0.0.0	0.1.1.1.0.0	
# ::edge	work-01	ARG1	case	0.1.1.1.0.0.0	0.1.1.1.0.0.0.0	
(c2 / cause-01 
      :ARG0 (d / danger 
            :location (a / accident)) 
      :ARG1 (f / forbid-01 
            :ARG0 (o / oil 
                  :ARG1-of (c / cook-01 
                        :mod (h / hot))) 
            :ARG1 (s2 / shop 
                  :mod (c3 / chip) 
                  :op-of (a2 / and 
                        :ARG1-of (f3 / find-01 
                              :ARG0 (s3 / she 
                                    :ARG0-of (w / work-01 
                                          :ARG1 (c4 / case)))) 
                        :op1 (f2 / fish))) 
            :manner (s / strict)))

# ::snt he admitted that he was aware of the importance of every piece of wreckage for the accident investigation
# ::tok he admitted that he was aware of the importance of every piece of wreckage for the accident investigation
# ::alignments 17-18|0.1 16-17|0.1.1 11-12|0.1.2 10-11|0.1.2.1 8-9|0.1.2.0 3-4|0.1.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:04.372
# ::node	0	admit-01	1-2
# ::node	0.0	he	0-1
# ::node	0.1	investigate-01	17-18
# ::node	0.1.0	he	3-4
# ::node	0.1.1	accident	16-17
# ::node	0.1.2	piece	11-12
# ::node	0.1.2.0	important	8-9
# ::node	0.1.2.1	every	10-11
# ::root	0	admit-01
# ::edge	admit-01	ARG0	he	0	0.0	
# ::edge	admit-01	ARG1	investigate-01	0	0.1	
# ::edge	important	domain	piece	0.1.2.0	0.1.2	
# ::edge	investigate-01	ARG0	he	0.1	0.1.0	
# ::edge	investigate-01	ARG1	accident	0.1	0.1.1	
# ::edge	piece	mod	every	0.1.2	0.1.2.1	
# ::edge	piece	prep-with	investigate-01	0.1.2	0.1	
(a2 / admit-01 
      :ARG0 (h2 / he) 
      :ARG1 (i / investigate-01 
            :ARG0 (h / he) 
            :ARG1 (a / accident) 
            :prep-with-of (p / piece 
                  :domain-of (i2 / important) 
                  :mod (e / every))))

# ::snt the accident happened as pc lukes was riding to work at the thames valley police headquarters in kidlington at about 8
# ::tok the accident happened as pc lukes was riding to work at the thames valley police headquarters in kidlington at about 8
# ::alignments 20-21|0.2.0 15-16|0.2.1 14-15|0.2.1.0 12-14|0.0.0.0+0.0.0.1+0.0.0+0.0 7-8|0.2 2-3|0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:04.417
# ::node	0	happen-01	2-3
# ::node	0.0	country	12-14
# ::node	0.0.0	name	12-14
# ::node	0.0.0.0	"valley"	12-14
# ::node	0.0.0.1	"thames"	12-14
# ::node	0.1	accident	1-2
# ::node	0.2	ride-01	7-8
# ::node	0.2.0	8	20-21
# ::node	0.2.1	headquarters	15-16
# ::node	0.2.1.0	police	14-15
# ::root	0	happen-01
# ::edge	country	name	name	0.0	0.0.0	
# ::edge	happen-01	ARG0	country	0	0.0	
# ::edge	happen-01	ARG1	accident	0	0.1	
# ::edge	happen-01	time	ride-01	0	0.2	
# ::edge	headquarters	mod	police	0.2.1	0.2.1.0	
# ::edge	name	op1	"valley"	0.0.0	0.0.0.0	
# ::edge	name	op2	"thames"	0.0.0	0.0.0.1	
# ::edge	ride-01	ARG0	8	0.2	0.2.0	
# ::edge	ride-01	ARG1	headquarters	0.2	0.2.1	
(h2 / happen-01 
      :ARG0 (c / country 
            :name (n / name 
                  :op1 "valley" 
                  :op2 "thames")) 
      :ARG1 (a / accident) 
      :time (r / ride-01 
            :ARG0 8 
            :ARG1 (h / headquarters 
                  :mod (p / police))))

# ::snt in the unfortunate event that your accident should prove fatal  your estate will receive up to 40000 useful supplement  to any life assurances you may have, this sum will be doubled up to 80000 if both husband and  wife die as a result of the same accident
# ::tok in the unfortunate event that your accident should prove fatal your estate will receive up to 40000 useful supplement to any life assurances you may have , this sum will be doubled up to 80000 if both husband and wife die as a result of the same accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:04.418
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the battle against rising road accidents could only be properly fought he said if people took more care
# ::tok the battle against rising road accidents could only be properly fought he said if people took more care
# ::alignments 17-18|0.2 12-13|0 11-12|0.0 10-11|0.1 9-10|0.1.2 7-8|0.1.3 6-7|0.1.1 5-6|0.1.0.0.0 4-5|0.1.0.0.0.0 3-4|0.1.0.0 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:04.665
# ::node	0	say-01	12-13
# ::node	0.0	he	11-12
# ::node	0.1	fight-01	10-11
# ::node	0.1.0	battle-01	1-2
# ::node	0.1.0.0	rise-01	3-4
# ::node	0.1.0.0.0	accident	5-6
# ::node	0.1.0.0.0.0	road	4-5
# ::node	0.1.1	possible	6-7
# ::node	0.1.2	proper	9-10
# ::node	0.1.3	only	7-8
# ::node	0.2	care-01	17-18
# ::root	0	say-01
# ::edge	accident	location	road	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	battle-01	ARG1	rise-01	0.1.0	0.1.0.0	
# ::edge	fight-01	ARG1	battle-01	0.1	0.1.0	
# ::edge	fight-01	manner	proper	0.1	0.1.2	
# ::edge	fight-01	mod	only	0.1	0.1.3	
# ::edge	possible	domain	fight-01	0.1.1	0.1	
# ::edge	rise-01	ARG1	accident	0.1.0.0	0.1.0.0.0	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	fight-01	0	0.1	
# ::edge	say-01	purpose	care-01	0	0.2	
(s / say-01 
      :ARG0 (h / he) 
      :ARG1 (f / fight-01 
            :ARG1 (b / battle-01 
                  :ARG1 (r2 / rise-01 
                        :ARG1 (a / accident 
                              :location (r / road)))) 
            :domain-of (p2 / possible) 
            :manner (p / proper) 
            :mod (o / only)) 
      :purpose (c / care-01))

# ::snt abta head of public affairs david hurst points out that the problem must be put in context out of more than 12 million package holidays sold in a good year we would regard 50 cases where the tour operator is proved to be liable following accident or injury as bad
# ::tok abta head of public affairs david hurst points out that the problem must be put in context out of more than 12 million package holidays sold in a good year we would regard 50 cases where the tour operator is proved to be liable following accident or injury as bad
# ::alignments 49-50|0.0.0.0.0.0.0.0.1.3.0.0.0 47-48|0.0.0.0.0.0.0.0.1.3 46-47|0.0.0.0.0.0.0.0.1.3.0 45-46|0.0.0.0.0.0.0.0.1.3.0.0 43-44|0.0.0.0.0.0.0.0 40-41|0.0.0.0.0.0.0 38-39|0.0.0.0.0.0.0.0.1.0+0.0.0.0.0.0.0.0.1 37-38|0.0.0.0.0.0.0.0.1.2 34-35|0.0.0.0.0.1 33-34|0.0.0.0.0.1.0 32-33|0.0.0.0.0 30-31|0.0.0.0.0.0 29-30|0.0.0.0 28-29|0.0.0.0.1 25-26|0.0.0 24-25|0.0 23-24|0 21-22|0.0.0.0.0.0.0.0.0 16-17|0.0.0.0.0.0.0.0.1.2.0 11-12|0.0.0.0.0.2 7-8|0.0.0.0.0.0.0.0.1.1.1 4-5|0.0.0.0.0.0.0.0.1.1.0 3-4|0.0.0.0.0.0.0.0.1.1.0.0 1-2|0.0.0.0.0.0.0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:05.918
# ::node	0	package	23-24
# ::node	0.0	holiday	24-25
# ::node	0.0.0	sell-01	25-26
# ::node	0.0.0.0	year	29-30
# ::node	0.0.0.0.0	regard-01	32-33
# ::node	0.0.0.0.0.0	we	30-31
# ::node	0.0.0.0.0.0.0	prove-01	40-41
# ::node	0.0.0.0.0.0.0.0	liable-41	43-44
# ::node	0.0.0.0.0.0.0.0.0	12	21-22
# ::node	0.0.0.0.0.0.0.0.1	person	38-39
# ::node	0.0.0.0.0.0.0.0.1.0	operate-01	38-39
# ::node	0.0.0.0.0.0.0.0.1.1	head-01	1-2
# ::node	0.0.0.0.0.0.0.0.1.1.0	affair	4-5
# ::node	0.0.0.0.0.0.0.0.1.1.0.0	public	3-4
# ::node	0.0.0.0.0.0.0.0.1.1.1	point	7-8
# ::node	0.0.0.0.0.0.0.0.1.2	tour-01	37-38
# ::node	0.0.0.0.0.0.0.0.1.2.0	context	16-17
# ::node	0.0.0.0.0.0.0.0.1.3	injure-01	47-48
# ::node	0.0.0.0.0.0.0.0.1.3.0	or	46-47
# ::node	0.0.0.0.0.0.0.0.1.3.0.0	accident	45-46
# ::node	0.0.0.0.0.0.0.0.1.3.0.0.0	bad	49-50
# ::node	0.0.0.0.0.1	case	34-35
# ::node	0.0.0.0.0.1.0	50	33-34
# ::node	0.0.0.0.0.2	problem	11-12
# ::node	0.0.0.0.1	good	28-29
# ::root	0	package
(p3 / package 
      :mod-of (h / holiday 
            :ARG1-of (s / sell-01 
                  :time (y / year 
                        :manner-of (r / regard-01 
                              :ARG0 (w / we 
                                    :ARG0-of (p / prove-01 
                                          :ARG1 (l / liable-41 
                                                :ARG0 12 
                                                :ARG1 (p2 / person 
                                                      :ARG0-of (o2 / operate-01) 
                                                      :ARG0-of (h2 / head-01 
                                                            :ARG1 (a2 / affair 
                                                                  :mod (p6 / public)) 
                                                            :ARG2 (p5 / point)) 
                                                      :ARG0-of (t / tour-01 
                                                            :ARG1 (c2 / context)) 
                                                      :ARG1-of (i / injure-01 
                                                            :op-of (o / or 
                                                                  :op1 (a / accident 
                                                                        :mod (b / bad)))))))) 
                              :ARG1 (c / case 
                                    :quant 50) 
                              :op-of (p4 / problem)) 
                        :mod (g / good)))))

# ::snt by internalizing the compensation cost to the riskcreating enterprise or industry some general deterrence can be preserved in the interest of accident prevention
# ::tok by internalizing the compensation cost to the riskcreating enterprise or industry some general deterrence can be preserved in the interest of accident prevention
# ::alignments 22-23|0.0.0.0 21-22|0.0.0.0.0 19-20|0.0.0 14-15|0 12-13|0.0.2.0.0 11-12|0.0.1 10-11|0.0.3 9-10|0.0 8-9|0.0.2 4-5|0.0.2.0 3-4|0.0.2.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:06.022
# ::node	0	possible	14-15
# ::node	0.0	or	9-10
# ::node	0.0.0	interest-01	19-20
# ::node	0.0.0.0	prevent-01	22-23
# ::node	0.0.0.0.0	accident	21-22
# ::node	0.0.1	some	11-12
# ::node	0.0.2	enterprise	8-9
# ::node	0.0.2.0	cost-01	4-5
# ::node	0.0.2.0.0	general	12-13
# ::node	0.0.2.0.1	compensate-01	3-4
# ::node	0.0.3	industry	10-11
# ::root	0	possible
(p2 / possible 
      :domain-of (o / or 
            :ARG1-of (i / interest-01 
                  :ARG2 (p / prevent-01 
                        :ARG1 (a / accident))) 
            :mod (s / some) 
            :op1 (e / enterprise 
                  :ARG1-of (c / cost-01 
                        :ARG0 (g / general) 
                        :ARG1-of (c2 / compensate-01))) 
            :op2 (i2 / industry)))

# ::snt horrible murder at aldershot by a madman shocking child murder frightful accident at surrey gardens are typical headlines of the times
# ::tok horrible murder at aldershot by a madman shocking child murder frightful accident at surrey gardens are typical headlines of the times
# ::alignments 19-21|0.0.0.0.0+0.0.0.0.1+0.0.0.0+0.0.0 17-18|0.0 16-17|0 14-15|0.1 11-12|0.1.1 9-10|0.1.0 8-9|0.1.0.0 7-8|0.1.0.1 1-2|0.1.1.0 0-1|0.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:06.154
# ::node	0	typify-01	16-17
# ::node	0.0	headline	17-18
# ::node	0.0.0	newspaper	19-21
# ::node	0.0.0.0	name	19-21
# ::node	0.0.0.0.0	"The"	19-21
# ::node	0.0.0.0.1	"Times"	19-21
# ::node	0.1	garden	14-15
# ::node	0.1.0	murder-01	9-10
# ::node	0.1.0.0	child	8-9
# ::node	0.1.0.1	shock-01	7-8
# ::node	0.1.1	accident	11-12
# ::node	0.1.1.0	murder-01	1-2
# ::node	0.1.1.0.0	horrible	0-1
# ::root	0	typify-01
# ::edge	accident	mod	garden	0.1.1	0.1	
# ::edge	headline	topic	newspaper	0.0	0.0.0	
# ::edge	murder-01	ARG0	accident	0.1.1.0	0.1.1	
# ::edge	murder-01	ARG1	child	0.1.0	0.1.0.0	
# ::edge	murder-01	location	garden	0.1.0	0.1	
# ::edge	murder-01	mod	horrible	0.1.1.0	0.1.1.0.0	
# ::edge	name	op1	"The"	0.0.0.0	0.0.0.0.0	
# ::edge	name	op2	"Times"	0.0.0.0	0.0.0.0.1	
# ::edge	newspaper	name	name	0.0.0	0.0.0.0	
# ::edge	shock-01	ARG1	murder-01	0.1.0.1	0.1.0	
# ::edge	typify-01	ARG0	headline	0	0.0	
# ::edge	typify-01	ARG1	garden	0	0.1	
(t / typify-01 
      :ARG0 (h / headline 
            :topic (n / newspaper 
                  :name (n2 / name 
                        :op1 "The" 
                        :op2 "Times"))) 
      :ARG1 (g / garden 
            :location-of (m / murder-01 
                  :ARG1 (c / child) 
                  :ARG1-of (s / shock-01)) 
            :mod-of (a / accident 
                  :ARG0-of (m2 / murder-01 
                        :mod (h2 / horrible)))))

# ::snt the poor design of concorde modifications led to one of british airways fleet of supersonic airliners losing part of its rudder in midair while flying at 1250mph from new zealand to australia on a roundtheworld tour last april according to the department of transports air accidents investigations branch
# ::tok the poor design of concorde modifications led to one of british airways fleet of supersonic airliners losing part of its rudder in midair while flying at 1250mph from new zealand to australia on a roundtheworld tour last april according to the department of transports air accidents investigations branch
# ::alignments 47-48|0.1 46-47|0 45-46|0.0 44-45|0.0.1 43-44|0.1.0 41-42|0.1.1 37-38|0.0.0.1+0.0.0 36-37|0.0.0.0 35-36|0.0.0.2 31-32|0.0.0.2.0.0.0+0.0.0.2.0.0+0.0.0.2.0 28-30|0.0.0.2.1.2.0+0.0.0.2.1.2.1+0.0.0.2.1.2+0.0.0.2.1 24-25|0.0.0.2.1.1 16-17|0.0.0.2.1.0 15-16|0.0.0.2.1.0.0 14-15|0.0.0.2.1.0.0.1 12-13|0.0.0.2.1.0.0.0 6-7|0.0.0.2.1.0.0.0.0 5-6|0.0.0.2.1.0.0.0.0.0.0 2-3|0.0.0.2.1.0.0.0.0.0 1-2|0.0.0.2.1.0.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:06.444
# ::node	0	investigate-01	46-47
# ::node	0.0	accident	45-46
# ::node	0.0.0	date-entity	37-38
# ::node	0.0.0.0	last	36-37
# ::node	0.0.0.1	4	37-38
# ::node	0.0.0.2	tour-01	35-36
# ::node	0.0.0.2.0	country	31-32
# ::node	0.0.0.2.0.0	name	31-32
# ::node	0.0.0.2.0.0.0	"Australia"	31-32
# ::node	0.0.0.2.1	country	28-30
# ::node	0.0.0.2.1.0	lose-02	16-17
# ::node	0.0.0.2.1.0.0	airliner	15-16
# ::node	0.0.0.2.1.0.0.0	fleet	12-13
# ::node	0.0.0.2.1.0.0.0.0	lead-02	6-7
# ::node	0.0.0.2.1.0.0.0.0.0	design-01	2-3
# ::node	0.0.0.2.1.0.0.0.0.0.0	modify-01	5-6
# ::node	0.0.0.2.1.0.0.0.0.0.1	poor	1-2
# ::node	0.0.0.2.1.0.0.1	supersonic	14-15
# ::node	0.0.0.2.1.1	fly-01	24-25
# ::node	0.0.0.2.1.2	name	28-30
# ::node	0.0.0.2.1.2.0	"zealand"	28-30
# ::node	0.0.0.2.1.2.1	"new"	28-30
# ::node	0.0.1	air	44-45
# ::node	0.1	branch	47-48
# ::node	0.1.0	transport-01	43-44
# ::node	0.1.1	department	41-42
# ::root	0	investigate-01
# ::edge	accident	mod	air	0.0	0.0.1	
# ::edge	accident	mod	date-entity	0.0	0.0.0	
# ::edge	airliner	consist	fleet	0.0.0.2.1.0.0	0.0.0.2.1.0.0.0	
# ::edge	airliner	mod	supersonic	0.0.0.2.1.0.0	0.0.0.2.1.0.0.1	
# ::edge	branch	mod	investigate-01	0.1	0	
# ::edge	branch	part	department	0.1	0.1.1	
# ::edge	country	name	name	0.0.0.2.0	0.0.0.2.0.0	
# ::edge	country	name	name	0.0.0.2.1	0.0.0.2.1.2	
# ::edge	country	time	tour-01	0.0.0.2.1	0.0.0.2	
# ::edge	date-entity	mod	last	0.0.0	0.0.0.0	
# ::edge	date-entity	month	4	0.0.0	0.0.0.1	
# ::edge	design-01	ARG1	modify-01	0.0.0.2.1.0.0.0.0.0	0.0.0.2.1.0.0.0.0.0.0	
# ::edge	design-01	mod	poor	0.0.0.2.1.0.0.0.0.0	0.0.0.2.1.0.0.0.0.0.1	
# ::edge	fly-01	ARG1	country	0.0.0.2.1.1	0.0.0.2.1	
# ::edge	investigate-01	ARG1	accident	0	0.0	
# ::edge	lead-02	ARG0	design-01	0.0.0.2.1.0.0.0.0	0.0.0.2.1.0.0.0.0.0	
# ::edge	lead-02	ARG1	fleet	0.0.0.2.1.0.0.0.0	0.0.0.2.1.0.0.0	
# ::edge	lose-02	ARG0	country	0.0.0.2.1.0	0.0.0.2.1	
# ::edge	lose-02	ARG1	airliner	0.0.0.2.1.0	0.0.0.2.1.0.0	
# ::edge	name	op1	"Australia"	0.0.0.2.0.0	0.0.0.2.0.0.0	
# ::edge	name	op1	"zealand"	0.0.0.2.1.2	0.0.0.2.1.2.0	
# ::edge	name	op2	"new"	0.0.0.2.1.2	0.0.0.2.1.2.1	
# ::edge	tour-01	ARG1	country	0.0.0.2	0.0.0.2.0	
# ::edge	tour-01	time	date-entity	0.0.0.2	0.0.0	
# ::edge	transport-01	ARG1	branch	0.1.0	0.1	
(i / investigate-01 
      :ARG1 (a / accident 
            :mod (d2 / date-entity 
                  :mod (l / last) 
                  :month 4 
                  :time-of (t2 / tour-01 
                        :ARG1 (c / country 
                              :name (n / name 
                                    :op1 "Australia")) 
                        :time-of (c2 / country 
                              :ARG0-of (l2 / lose-02 
                                    :ARG1 (a3 / airliner 
                                          :consist (f2 / fleet 
                                                :ARG1-of (l3 / lead-02 
                                                      :ARG0 (d3 / design-01 
                                                            :ARG1 (m / modify-01) 
                                                            :mod (p / poor)))) 
                                          :mod (s / supersonic))) 
                              :ARG1-of (f / fly-01) 
                              :name (n2 / name 
                                    :op1 "zealand" 
                                    :op2 "new")))) 
            :mod (a2 / air)) 
      :mod-of (b / branch 
            :ARG1-of (t / transport-01) 
            :part (d / department)))

# ::snt it was an accident dash
# ::tok it was an accident dash
# ::alignments 3-4|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:06.448
# ::node	0	it	0-1
# ::node	0.0	accident	3-4
# ::root	0	it
# ::edge	it	domain	accident	0	0.0	
(i / it 
      :domain (a / accident))

# ::snt dornberg was the general in charge of these cavalry patrols which watched the french frontier and finding one of his officers had been a stroke of luck for sharpe by pure accident he had come across the very men whose job was to alert the allies of any french advance
# ::tok dornberg was the general in charge of these cavalry patrols which watched the french frontier and finding one of his officers had been a stroke of luck for sharpe by pure accident he had come across the very men whose job was to alert the allies of any french advance
# ::alignments 49-50|0.0.0.0 48-49|0.0.0.0.0.1.0+0.0.0.0.0.1+0.0.0.0.0 47-48|0.0.0 45-46|0.1 43-44|0 40-41|0.0 38-39|0.2 37-38|0.0.0.0.0.0.1.0 35-36|0.2.0 32-33|0.2.0.0 31-32|0.0.0.0.0.0.1.1.1.0.0.0 30-31|0.0.0.0.0.0.1.1.1.0.0 26-27|0.0.0.0.0.0.1.1.0.0 24-25|0.0.0.0.0.0.1.1.0 20-21|0.0.0.0.0.0.0+0.0.0.0.0.0 16-17|0.0.0.0.0.0.1 15-16|0.0.0.0.0.0.1.1 14-15|0.0.0.0.0.0.1.1.2 13-14|0.0.0.0.0.0.1.1.2.0.0.0+0.0.0.0.0.0.1.1.2.0.0+0.0.0.0.0.0.1.1.2.0 11-12|0.0.0.0.0.0.1.1.1 9-10|0.0.0.0.0.0.1.1.1.0 8-9|0.0.0.0.0.0.1.1.1.0.1 3-4|0.0.0.0.0.0.1.1.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:08.573
# ::node	0	alert-01	43-44
# ::node	0.0	job	40-41
# ::node	0.0.0	any	47-48
# ::node	0.0.0.0	advance-01	49-50
# ::node	0.0.0.0.0	country	48-49
# ::node	0.0.0.0.0.0	have-org-role-91	20-21
# ::node	0.0.0.0.0.0.0	officer	20-21
# ::node	0.0.0.0.0.0.1	find-01	16-17
# ::node	0.0.0.0.0.0.1.0	very	37-38
# ::node	0.0.0.0.0.0.1.1	and	15-16
# ::node	0.0.0.0.0.0.1.1.0	stroke	24-25
# ::node	0.0.0.0.0.0.1.1.0.0	luck	26-27
# ::node	0.0.0.0.0.0.1.1.1	watch-01	11-12
# ::node	0.0.0.0.0.0.1.1.1.0	patrol-01	9-10
# ::node	0.0.0.0.0.0.1.1.1.0.0	pure	30-31
# ::node	0.0.0.0.0.0.1.1.1.0.0.0	accident	31-32
# ::node	0.0.0.0.0.0.1.1.1.0.1	cavalry	8-9
# ::node	0.0.0.0.0.0.1.1.1.1	general	3-4
# ::node	0.0.0.0.0.0.1.1.2	frontier	14-15
# ::node	0.0.0.0.0.0.1.1.2.0	country	13-14
# ::node	0.0.0.0.0.0.1.1.2.0.0	name	13-14
# ::node	0.0.0.0.0.0.1.1.2.0.0.0	"France"	13-14
# ::node	0.0.0.0.0.1	name	48-49
# ::node	0.0.0.0.0.1.0	"France"	48-49
# ::node	0.1	ally-01	45-46
# ::node	0.2	man	38-39
# ::node	0.2.0	across	35-36
# ::node	0.2.0.0	he	32-33
# ::root	0	alert-01
# ::edge	accident	mod	pure	0.0.0.0.0.0.1.1.1.0.0.0	0.0.0.0.0.0.1.1.1.0.0	
# ::edge	across	domain	he	0.2.0	0.2.0.0	
# ::edge	across	op1	man	0.2.0	0.2	
# ::edge	advance-01	mod	any	0.0.0.0	0.0.0	
# ::edge	advance-01	mod	country	0.0.0.0	0.0.0.0.0	
# ::edge	alert-01	ARG0	job	0	0.0	
# ::edge	alert-01	ARG1	ally-01	0	0.1	
# ::edge	alert-01	ARG2	man	0	0.2	
# ::edge	and	op1	watch-01	0.0.0.0.0.0.1.1	0.0.0.0.0.0.1.1.1	
# ::edge	and	op2	frontier	0.0.0.0.0.0.1.1	0.0.0.0.0.0.1.1.2	
# ::edge	and	op3	find-01	0.0.0.0.0.0.1.1	0.0.0.0.0.0.1	
# ::edge	country	name	name	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	country	name	name	0.0.0.0.0.0.1.1.2.0	0.0.0.0.0.0.1.1.2.0.0	
# ::edge	find-01	ARG1	very	0.0.0.0.0.0.1	0.0.0.0.0.0.1.0	
# ::edge	find-01	ARG2	have-org-role-91	0.0.0.0.0.0.1	0.0.0.0.0.0	
# ::edge	frontier	mod	country	0.0.0.0.0.0.1.1.2	0.0.0.0.0.0.1.1.2.0	
# ::edge	have-org-role-91	ARG1	country	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	have-org-role-91	ARG2	officer	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	job	mod	any	0.0	0.0.0	
# ::edge	name	op1	"France"	0.0.0.0.0.0.1.1.2.0.0	0.0.0.0.0.0.1.1.2.0.0.0	
# ::edge	name	op1	"France"	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	patrol-01	ARG1	pure	0.0.0.0.0.0.1.1.1.0	0.0.0.0.0.0.1.1.1.0.0	
# ::edge	patrol-01	mod	cavalry	0.0.0.0.0.0.1.1.1.0	0.0.0.0.0.0.1.1.1.0.1	
# ::edge	stroke	domain	and	0.0.0.0.0.0.1.1.0	0.0.0.0.0.0.1.1	
# ::edge	stroke	mod	luck	0.0.0.0.0.0.1.1.0	0.0.0.0.0.0.1.1.0.0	
# ::edge	watch-01	ARG0	patrol-01	0.0.0.0.0.0.1.1.1	0.0.0.0.0.0.1.1.1.0	
# ::edge	watch-01	ARG1	general	0.0.0.0.0.0.1.1.1	0.0.0.0.0.0.1.1.1.1	
(a4 / alert-01 
      :ARG0 (j / job 
            :mod (a2 / any 
                  :mod-of (a / advance-01 
                        :mod (c / country 
                              :ARG1-of (h2 / have-org-role-91 
                                    :ARG2 (o / officer) 
                                    :ARG2-of (f / find-01 
                                          :ARG1 (v / very) 
                                          :op-of (a7 / and 
                                                :domain-of (s / stroke 
                                                      :mod (l / luck)) 
                                                :op1 (w / watch-01 
                                                      :ARG0 (p2 / patrol-01 
                                                            :ARG1 (p / pure 
                                                                  :mod-of (a6 / accident)) 
                                                            :mod (c3 / cavalry)) 
                                                      :ARG1 (g / general)) 
                                                :op2 (f2 / frontier 
                                                      :mod (c2 / country 
                                                            :name (n2 / name 
                                                                  :op1 "France")))))) 
                              :name (n / name 
                                    :op1 "France"))))) 
      :ARG1 (a3 / ally-01) 
      :ARG2 (m / man 
            :op-of (a5 / across 
                  :domain (h / he))))

# ::snt i dont want to have an accident
# ::tok i dont want to have an accident
# ::alignments 6-7|0.1 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:08.579
# ::node	0	want-01	2-3
# ::node	0.0	i	0-1
# ::node	0.1	accident	6-7
# ::root	0	want-01
# ::edge	want-01	ARG0	i	0	0.0	
# ::edge	want-01	ARG1	accident	0	0.1	
(w / want-01 
      :ARG0 (i / i) 
      :ARG1 (a / accident))

# ::snt a few days before the mike accident a soviet submarine captain based at northern fleets headquarters in murmansk wrote in a trade union paper that many crew were so poorly trained that they know and can cope with only 30 to 50 per cent of what they should be capable of handling, a recent report by greenpeace on nuclear submarine accidents said that fires on soviet vessels were far above the norm in proportion to their numbers
# ::tok a few days before the mike accident a soviet submarine captain based at northern fleets headquarters in murmansk wrote in a trade union paper that many crew were so poorly trained that they know and can cope with only 30 to 50 per cent of what they should be capable of handling , a recent report by greenpeace on nuclear submarine accidents said that fires on soviet vessels were far above the norm in proportion to their numbers
# ::alignments 77-78|0.1.1.2.1 74-75|0.1.1.0.1.0 72-73|0.1.1.0.1 70-71|0.1.1.0 69-70|0.1.1.0.0 67-68|0.1.0 64-65|0.1.0.0 62-63|0 61-62|0.0 60-61|0.0.0 59-60|0.0.0.0 55-56|0.1.2.2.1.0 54-55|0.1.2.2.1 51-52|0.1.1.2 49-50|0.1.1 47-48|0.1 46-47|0.1.1.2.0 43-44|0.1.1.1.0+0.1.1.1 41-42|0.1.2.1.0 39-40|0.1.2.0.1 38-39|0.2 36-37|0.1.2.2.0.0 35-36|0.1.2.3 34-35|0.1.2 33-34|0.1.2.2 32-33|0.1.2.2.0 30-31|0.1.2.1 29-30|0.1.2.1.2 28-29|0.1.2.1.3 26-27|0.1.2.1.1 25-26|0.1.2.1.1.0 23-24|0.1.2.0.2 22-23|0.1.2.0.2.0 21-22|0.1.2.0.2.0.0 18-19|0.1.2.0 15-16|0.1.2.0.2.0.0.0 14-15|0.1.2.0.2.0.0.0.1 13-14|0.1.2.0.2.0.0.0.2 11-12|0.1.2.0.2.0.0.0.0 10-11|0.1.2.0.2.0.0.0.0.0.1+0.1.2.0.2.0.0.0.0.0 9-10|0.1.2.0.2.0.0.0.0.0.0 6-7|0.1.2.0.0 3-4|0.1.2.0.0.0 2-3|0.1.2.0.2.1.1+0.1.2.0.2.1 1-2|0.1.2.0.2.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:11.317
# ::node	0	say-01	62-63
# ::node	0.0	accident	61-62
# ::node	0.0.0	submarine	60-61
# ::node	0.0.0.0	nucleus	59-60
# ::node	0.1	recommend-01	47-48
# ::node	0.1.0	vessel	67-68
# ::node	0.1.0.0	fire	64-65
# ::node	0.1.1	capable-41	49-50
# ::node	0.1.1.0	above	70-71
# ::node	0.1.1.0.0	far	69-70
# ::node	0.1.1.0.1	norm	72-73
# ::node	0.1.1.0.1.0	proportion	74-75
# ::node	0.1.1.1	monetary-quantity	43-44
# ::node	0.1.1.1.0	cent	43-44
# ::node	0.1.1.2	handle-01	51-52
# ::node	0.1.1.2.0	they	46-47
# ::node	0.1.1.2.1	number	77-78
# ::node	0.1.2	and	34-35
# ::node	0.1.2.0	write-01	18-19
# ::node	0.1.2.0.0	accident	6-7
# ::node	0.1.2.0.0.0	before	3-4
# ::node	0.1.2.0.1	30	39-40
# ::node	0.1.2.0.2	paper	23-24
# ::node	0.1.2.0.2.0	union	22-23
# ::node	0.1.2.0.2.0.0	trade-01	21-22
# ::node	0.1.2.0.2.0.0.0	headquarters	15-16
# ::node	0.1.2.0.2.0.0.0.0	base-01	11-12
# ::node	0.1.2.0.2.0.0.0.0.0	have-org-role-91	10-11
# ::node	0.1.2.0.2.0.0.0.0.0.0	submarine	9-10
# ::node	0.1.2.0.2.0.0.0.0.0.1	captain	10-11
# ::node	0.1.2.0.2.0.0.0.1	fleet	14-15
# ::node	0.1.2.0.2.0.0.0.2	north	13-14
# ::node	0.1.2.0.2.1	temporal-quantity	2-3
# ::node	0.1.2.0.2.1.0	few	1-2
# ::node	0.1.2.0.2.1.1	day	2-3
# ::node	0.1.2.1	train-01	30-31
# ::node	0.1.2.1.0	50	41-42
# ::node	0.1.2.1.1	crew	26-27
# ::node	0.1.2.1.1.0	many	25-26
# ::node	0.1.2.1.2	poor	29-30
# ::node	0.1.2.1.3	so	28-29
# ::node	0.1.2.2	know-01	33-34
# ::node	0.1.2.2.0	they	32-33
# ::node	0.1.2.2.0.0	cope-01	36-37
# ::node	0.1.2.2.1	recent	54-55
# ::node	0.1.2.2.1.0	report	55-56
# ::node	0.1.2.3	possible	35-36
# ::node	0.2	only	38-39
# ::root	0	say-01
# ::edge	above	mod	far	0.1.1.0	0.1.1.0.0	
# ::edge	above	op1	norm	0.1.1.0	0.1.1.0.1	
# ::edge	accident	mod	submarine	0.0	0.0.0	
# ::edge	and	op1	write-01	0.1.2	0.1.2.0	
# ::edge	and	op2	train-01	0.1.2	0.1.2.1	
# ::edge	and	op3	know-01	0.1.2	0.1.2.2	
# ::edge	and	op4	possible	0.1.2	0.1.2.3	
# ::edge	and	op5	recommend-01	0.1.2	0.1	
# ::edge	base-01	ARG0	have-org-role-91	0.1.2.0.2.0.0.0.0	0.1.2.0.2.0.0.0.0.0	
# ::edge	base-01	ARG2	headquarters	0.1.2.0.2.0.0.0.0	0.1.2.0.2.0.0.0	
# ::edge	before	op1	accident	0.1.2.0.0.0	0.1.2.0.0	
# ::edge	capable-41	ARG0	above	0.1.1	0.1.1.0	
# ::edge	capable-41	ARG1	monetary-quantity	0.1.1	0.1.1.1	
# ::edge	capable-41	ARG2	handle-01	0.1.1	0.1.1.2	
# ::edge	cope-01	ARG0	they	0.1.2.2.0.0	0.1.2.2.0	
# ::edge	crew	quant	many	0.1.2.1.1	0.1.2.1.1.0	
# ::edge	few	op1	temporal-quantity	0.1.2.0.2.1.0	0.1.2.0.2.1	
# ::edge	fire	poss	vessel	0.1.0.0	0.1.0	
# ::edge	handle-01	ARG0	they	0.1.1.2	0.1.1.2.0	
# ::edge	handle-01	ARG1	number	0.1.1.2	0.1.1.2.1	
# ::edge	have-org-role-91	ARG1	submarine	0.1.2.0.2.0.0.0.0.0	0.1.2.0.2.0.0.0.0.0.0	
# ::edge	have-org-role-91	ARG2	captain	0.1.2.0.2.0.0.0.0.0	0.1.2.0.2.0.0.0.0.0.1	
# ::edge	headquarters	mod	fleet	0.1.2.0.2.0.0.0	0.1.2.0.2.0.0.0.1	
# ::edge	headquarters	mod	north	0.1.2.0.2.0.0.0	0.1.2.0.2.0.0.0.2	
# ::edge	know-01	ARG0	they	0.1.2.2	0.1.2.2.0	
# ::edge	know-01	ARG1	recent	0.1.2.2	0.1.2.2.1	
# ::edge	monetary-quantity	unit	cent	0.1.1.1	0.1.1.1.0	
# ::edge	norm	mod	proportion	0.1.1.0.1	0.1.1.0.1.0	
# ::edge	paper	mod	union	0.1.2.0.2	0.1.2.0.2.0	
# ::edge	recommend-01	ARG0	vessel	0.1	0.1.0	
# ::edge	recommend-01	ARG1	capable-41	0.1	0.1.1	
# ::edge	report	time	recent	0.1.2.2.1.0	0.1.2.2.1	
# ::edge	say-01	ARG0	accident	0	0.0	
# ::edge	say-01	ARG1	recommend-01	0	0.1	
# ::edge	say-01	manner	only	0	0.2	
# ::edge	submarine	mod	nucleus	0.0.0	0.0.0.0	
# ::edge	temporal-quantity	poss	paper	0.1.2.0.2.1	0.1.2.0.2	
# ::edge	temporal-quantity	unit	day	0.1.2.0.2.1	0.1.2.0.2.1.1	
# ::edge	trade-01	ARG0	headquarters	0.1.2.0.2.0.0	0.1.2.0.2.0.0.0	
# ::edge	train-01	ARG0	50	0.1.2.1	0.1.2.1.0	
# ::edge	train-01	ARG1	crew	0.1.2.1	0.1.2.1.1	
# ::edge	train-01	manner	poor	0.1.2.1	0.1.2.1.2	
# ::edge	train-01	mod	so	0.1.2.1	0.1.2.1.3	
# ::edge	union	mod	trade-01	0.1.2.0.2.0	0.1.2.0.2.0.0	
# ::edge	write-01	ARG0	accident	0.1.2.0	0.1.2.0.0	
# ::edge	write-01	ARG1	30	0.1.2.0	0.1.2.0.1	
# ::edge	write-01	medium	paper	0.1.2.0	0.1.2.0.2	
(s / say-01 
      :ARG0 (a2 / accident 
            :mod (s2 / submarine 
                  :mod (n3 / nucleus))) 
      :ARG1 (r3 / recommend-01 
            :ARG0 (v / vessel 
                  :poss-of (f2 / fire)) 
            :ARG1 (c / capable-41 
                  :ARG0 (a / above 
                        :mod (f / far) 
                        :op1 (n2 / norm 
                              :mod (p / proportion))) 
                  :ARG1 (m / monetary-quantity 
                        :unit (c2 / cent)) 
                  :ARG2 (h / handle-01 
                        :ARG0 (t / they) 
                        :ARG1 (n / number))) 
            :op-of (a3 / and 
                  :op1 (w / write-01 
                        :ARG0 (a4 / accident 
                              :op-of (b2 / before)) 
                        :ARG1 30 
                        :medium (p4 / paper 
                              :mod (u / union 
                                    :mod (t4 / trade-01 
                                          :ARG0 (h2 / headquarters 
                                                :ARG2-of (b / base-01 
                                                      :ARG0 (h3 / have-org-role-91 
                                                            :ARG1 (s4 / submarine) 
                                                            :ARG2 (c5 / captain))) 
                                                :mod (f3 / fleet) 
                                                :mod (n4 / north)))) 
                              :poss-of (t5 / temporal-quantity 
                                    :op-of (f4 / few) 
                                    :unit (d / day)))) 
                  :op2 (t3 / train-01 
                        :ARG0 50 
                        :ARG1 (c4 / crew 
                              :quant (m2 / many)) 
                        :manner (p3 / poor) 
                        :mod (s3 / so)) 
                  :op3 (k / know-01 
                        :ARG0 (t2 / they 
                              :ARG0-of (c3 / cope-01)) 
                        :ARG1 (r2 / recent 
                              :time-of (r / report))) 
                  :op4 (p2 / possible))) 
      :manner (o / only))

# ::snt the evidence indicated that all parts of the flying control system had been connected at the time of the accident and no evidence of a control restriction or jam were found although such a possibility could not be totally dismissed given the degree of disruption in some areas
# ::tok the evidence indicated that all parts of the flying control system had been connected at the time of the accident and no evidence of a control restriction or jam were found although such a possibility could not be totally dismissed given the degree of disruption in some areas
# ::alignments 47-48|0.1.1.1.2.0.0.0 46-47|0.1.1.1.2.0.0 42-43|0.1.1.1.2.0.1 40-41|0.1.1.1.2.0 39-40|0.1.1.1.2 38-39|0.1.1.1.2.2 35-36|0.1.1.1.2.3 34-35|0.1.1.1.2.1 32-33|0.1.1.1.2.1.0 30-31|0.1.1.1 28-29|0.1.1.1.1.2 27-28|0.1.1.1.1 26-27|0.1.1.1.1.1 25-26|0.1.1.1.1.1.0 22-23|0.1.1.1.1.0 21-22|0.1.1.1.1.0.0 20-21|0.1.1 19-20|0.1.1.0 16-17|0.1.0 13-14|0.1 10-11|0.1.1.1.0.1 9-10|0.1.1.1.0.1.1 8-9|0.1.1.1.0.1.0 5-6|0.1.1.1.0 4-5|0.1.1.1.0.0 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:12.424
# ::node	0	indicate-01	2-3
# ::node	0.0	evidence-01	1-2
# ::node	0.1	connect-01	13-14
# ::node	0.1.0	time	16-17
# ::node	0.1.1	and	20-21
# ::node	0.1.1.0	accident	19-20
# ::node	0.1.1.1	find-01	30-31
# ::node	0.1.1.1.0	part	5-6
# ::node	0.1.1.1.0.0	all	4-5
# ::node	0.1.1.1.0.1	system	10-11
# ::node	0.1.1.1.0.1.0	fly-01	8-9
# ::node	0.1.1.1.0.1.1	control-01	9-10
# ::node	0.1.1.1.1	or	27-28
# ::node	0.1.1.1.1.0	evidence-01	22-23
# ::node	0.1.1.1.1.0.0	-	21-22
# ::node	0.1.1.1.1.1	restrict-01	26-27
# ::node	0.1.1.1.1.1.0	control-01	25-26
# ::node	0.1.1.1.1.2	jam-01	28-29
# ::node	0.1.1.1.2	dismiss-01	39-40
# ::node	0.1.1.1.2.0	give-01	40-41
# ::node	0.1.1.1.2.0.0	some	46-47
# ::node	0.1.1.1.2.0.0.0	area	47-48
# ::node	0.1.1.1.2.0.1	degree	42-43
# ::node	0.1.1.1.2.1	possible	34-35
# ::node	0.1.1.1.2.1.0	such	32-33
# ::node	0.1.1.1.2.2	total	38-39
# ::node	0.1.1.1.2.3	possible	35-36
# ::root	0	indicate-01
# ::edge	and	op1	connect-01	0.1.1	0.1	
# ::edge	and	op2	accident	0.1.1	0.1.1.0	
# ::edge	and	op3	find-01	0.1.1	0.1.1.1	
# ::edge	area	quant	some	0.1.1.1.2.0.0.0	0.1.1.1.2.0.0	
# ::edge	connect-01	ARG1	time	0.1	0.1.0	
# ::edge	control-01	instrument	system	0.1.1.1.0.1.1	0.1.1.1.0.1	
# ::edge	dismiss-01	ARG0	give-01	0.1.1.1.2	0.1.1.1.2.0	
# ::edge	dismiss-01	ARG1	possible	0.1.1.1.2	0.1.1.1.2.1	
# ::edge	dismiss-01	degree	total	0.1.1.1.2	0.1.1.1.2.2	
# ::edge	evidence-01	ARG1	or	0.1.1.1.1.0	0.1.1.1.1	
# ::edge	evidence-01	polarity	-	0.1.1.1.1.0	0.1.1.1.1.0.0	
# ::edge	find-01	ARG0	part	0.1.1.1	0.1.1.1.0	
# ::edge	find-01	ARG1	or	0.1.1.1	0.1.1.1.1	
# ::edge	find-01	time	dismiss-01	0.1.1.1	0.1.1.1.2	
# ::edge	fly-01	ARG1	system	0.1.1.1.0.1.0	0.1.1.1.0.1	
# ::edge	give-01	ARG0	some	0.1.1.1.2.0	0.1.1.1.2.0.0	
# ::edge	give-01	ARG1	degree	0.1.1.1.2.0	0.1.1.1.2.0.1	
# ::edge	indicate-01	ARG0	evidence-01	0	0.0	
# ::edge	indicate-01	ARG1	connect-01	0	0.1	
# ::edge	or	op1	restrict-01	0.1.1.1.1	0.1.1.1.1.1	
# ::edge	or	op2	jam-01	0.1.1.1.1	0.1.1.1.1.2	
# ::edge	part	mod	all	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	part	poss	system	0.1.1.1.0	0.1.1.1.0.1	
# ::edge	possible	domain	dismiss-01	0.1.1.1.2.3	0.1.1.1.2	
# ::edge	possible	mod	such	0.1.1.1.2.1	0.1.1.1.2.1.0	
# ::edge	restrict-01	ARG1	control-01	0.1.1.1.1.1	0.1.1.1.1.1.0	
(i / indicate-01 
      :ARG0 (e2 / evidence-01) 
      :ARG1 (c2 / connect-01 
            :ARG1 (t2 / time) 
            :op-of (a2 / and 
                  :op1 (a3 / accident) 
                  :op2 (f / find-01 
                        :ARG0 (p3 / part 
                              :mod (a4 / all) 
                              :poss (s3 / system 
                                    :ARG1-of (f2 / fly-01) 
                                    :instrument-of (c3 / control-01))) 
                        :ARG1 (o / or 
                              :ARG1-of (e / evidence-01 
                                    :polarity (- / -)) 
                              :op1 (r / restrict-01 
                                    :ARG1 (c / control-01)) 
                              :op2 (j / jam-01)) 
                        :time (d2 / dismiss-01 
                              :ARG0 (g / give-01 
                                    :ARG0 (s / some 
                                          :quant-of (a / area)) 
                                    :ARG1 (d / degree)) 
                              :ARG1 (p2 / possible 
                                    :mod (s2 / such)) 
                              :degree (t / total) 
                              :domain-of (p / possible))))))

# ::snt oxford city council environmental health officer mr tony fenn said this terrible accident proves how these things can be death traps dash
# ::tok oxford city council environmental health officer mr tony fenn said this terrible accident proves how these things can be death traps dash
# ::alignments 19-20|0.1.1.0 17-18|0.1.1 16-17|0.1.1.0.0 13-14|0.1 12-13|0.1.0 11-12|0.1.0.1 10-11|0.1.0.0 9-10|0 5-6|0.0 4-5|0.0.0 3-4|0.0.0.0 2-3|0.0.0.1 1-2|0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:12.582
# ::node	0	say-01	9-10
# ::node	0.0	officer	5-6
# ::node	0.0.0	health	4-5
# ::node	0.0.0.0	environment	3-4
# ::node	0.0.0.1	council	2-3
# ::node	0.0.0.1.0	city	1-2
# ::node	0.1	prove-01	13-14
# ::node	0.1.0	accident	12-13
# ::node	0.1.0.0	this	10-11
# ::node	0.1.0.1	terrible	11-12
# ::node	0.1.1	possible	17-18
# ::node	0.1.1.0	die-01	19-20
# ::node	0.1.1.0.0	thing	16-17
# ::root	0	say-01
# ::edge	accident	mod	terrible	0.1.0	0.1.0.1	
# ::edge	accident	mod	this	0.1.0	0.1.0.0	
# ::edge	council	mod	city	0.0.0.1	0.0.0.1.0	
# ::edge	die-01	ARG0	thing	0.1.1.0	0.1.1.0.0	
# ::edge	die-01	ARG1	possible	0.1.1.0	0.1.1	
# ::edge	health	mod	environment	0.0.0	0.0.0.0	
# ::edge	health	part	council	0.0.0	0.0.0.1	
# ::edge	officer	mod	health	0.0	0.0.0	
# ::edge	prove-01	ARG0	accident	0.1	0.1.0	
# ::edge	prove-01	ARG1	possible	0.1	0.1.1	
# ::edge	say-01	ARG0	officer	0	0.0	
# ::edge	say-01	ARG1	prove-01	0	0.1	
(s / say-01 
      :ARG0 (o / officer 
            :mod (h / health 
                  :mod (e / environment) 
                  :part (c / council 
                        :mod (c2 / city)))) 
      :ARG1 (p2 / prove-01 
            :ARG0 (a / accident 
                  :mod (t3 / this) 
                  :mod (t2 / terrible)) 
            :ARG1 (p / possible 
                  :ARG1-of (d / die-01 
                        :ARG0 (t / thing)))))

# ::snt as a  result some publications no longer deal in real information  at all except occasionally by accident
# ::tok as a result some publications no longer deal in real information at all except occasionally by accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:12.583
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt one day there will be a serious industrial accident there are occasional near misses and worse but it usually takes a good measure of folly inattention and misfortune to overwhelm good plant and a safe system
# ::tok one day there will be a serious industrial accident there are occasional near misses and worse but it usually takes a good measure of folly inattention and misfortune to overwhelm good plant and a safe system
# ::alignments 35-36|0.0.1.1 34-35|0.0.1.1.0 32-33|0.0.1 31-32|0.0.1.0 30-31|0.0.1.0.0 29-30|0.0 27-28|0.0.3.1 26-27|0.0.3 25-26|0.0.3.0.0+0.0.3.0 22-23|0.0.3.2 21-22|0.0.3.2.0 18-19|0.0.1.1.0.0 17-18|0.0.2 16-17|0 15-16|0.1.3.0 14-15|0.1.3 13-14|0.1 12-13|0.1.1 11-12|0.1.2 8-9|0.0.0 7-8|0.0.0.0.0 6-7|0.0.0.0 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:13.784
# ::node	0	contrast-01	16-17
# ::node	0.0	overwhelm-01	29-30
# ::node	0.0.0	accident	8-9
# ::node	0.0.0.0	serious	6-7
# ::node	0.0.0.0.0	industry	7-8
# ::node	0.0.1	and	32-33
# ::node	0.0.1.0	plant	31-32
# ::node	0.0.1.0.0	good	30-31
# ::node	0.0.1.1	system	35-36
# ::node	0.0.1.1.0	safe-41	34-35
# ::node	0.0.1.1.0.0	usual	18-19
# ::node	0.0.2	it	17-18
# ::node	0.0.3	and	26-27
# ::node	0.0.3.0	attention	25-26
# ::node	0.0.3.0.0	-	25-26
# ::node	0.0.3.1	misfortune	27-28
# ::node	0.0.3.2	measure	22-23
# ::node	0.0.3.2.0	good	21-22
# ::node	0.1	miss-02	13-14
# ::node	0.1.0	day	1-2
# ::node	0.1.1	near	12-13
# ::node	0.1.2	occasional	11-12
# ::node	0.1.3	and	14-15
# ::node	0.1.3.0	bad	15-16
# ::root	0	contrast-01
# ::edge	accident	mod	serious	0.0.0	0.0.0.0	
# ::edge	and	op1	attention	0.0.3	0.0.3.0	
# ::edge	and	op1	miss-02	0.1.3	0.1	
# ::edge	and	op1	plant	0.0.1	0.0.1.0	
# ::edge	and	op2	bad	0.1.3	0.1.3.0	
# ::edge	and	op2	misfortune	0.0.3	0.0.3.1	
# ::edge	and	op2	system	0.0.1	0.0.1.1	
# ::edge	and	purpose	overwhelm-01	0.0.3	0.0	
# ::edge	attention	polarity	-	0.0.3.0	0.0.3.0.0	
# ::edge	contrast-01	ARG1	overwhelm-01	0	0.0	
# ::edge	industry	mod	serious	0.0.0.0.0	0.0.0.0	
# ::edge	measure	mod	good	0.0.3.2	0.0.3.2.0	
# ::edge	measure	purpose	and	0.0.3.2	0.0.3	
# ::edge	miss-02	ARG0	day	0.1	0.1.0	
# ::edge	miss-02	ARG1	contrast-01	0.1	0	
# ::edge	miss-02	degree	near	0.1	0.1.1	
# ::edge	miss-02	manner	occasional	0.1	0.1.2	
# ::edge	overwhelm-01	ARG0	accident	0.0	0.0.0	
# ::edge	overwhelm-01	ARG1	and	0.0	0.0.1	
# ::edge	overwhelm-01	ARG2	it	0.0	0.0.2	
# ::edge	plant	mod	good	0.0.1.0	0.0.1.0.0	
# ::edge	safe-41	ARG0	usual	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	safe-41	ARG1	system	0.0.1.1.0	0.0.1.1	
(c / contrast-01 
      :ARG1 (o / overwhelm-01 
            :ARG0 (a5 / accident 
                  :mod (s3 / serious 
                        :mod-of (i2 / industry))) 
            :ARG1 (a / and 
                  :op1 (p / plant 
                        :mod (g / good)) 
                  :op2 (s / system 
                        :ARG1-of (s2 / safe-41 
                              :ARG0 (u / usual)))) 
            :ARG2 (i / it) 
            :purpose-of (a2 / and 
                  :op1 (a3 / attention 
                        :polarity -) 
                  :op2 (m / misfortune) 
                  :purpose-of (m2 / measure 
                        :mod (g2 / good)))) 
      :ARG1-of (m3 / miss-02 
            :ARG0 (d / day) 
            :degree (n / near) 
            :manner (o2 / occasional) 
            :op-of (a4 / and 
                  :op1 (b / bad))))

# ::snt it is no accident that these three processes combine to produce buildings that reflect the values of those involved
# ::tok it is no accident that these three processes combine to produce buildings that reflect the values of those involved
# ::alignments 18-19|0.0.0.0 15-16|0 13-14|0.0 11-12|0.0.0 10-11|0.0.0.1 8-9|0.0.0.1.1 7-8|0.0.0.1.0 6-7|0.0.0.1.0.0 3-4|0.0.0.1.1.0.0 2-3|0.0.0.1.1.0.0.0 0-1|0.0.0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:14.020
# ::node	0	value	15-16
# ::node	0.0	reflect-01	13-14
# ::node	0.0.0	building	11-12
# ::node	0.0.0.0	involve-01	18-19
# ::node	0.0.0.1	produce-01	10-11
# ::node	0.0.0.1.0	process	7-8
# ::node	0.0.0.1.0.0	3	6-7
# ::node	0.0.0.1.1	combine-01	8-9
# ::node	0.0.0.1.1.0	it	0-1
# ::node	0.0.0.1.1.0.0	accident	3-4
# ::node	0.0.0.1.1.0.0.0	-	2-3
# ::root	0	value
(v / value 
      :ARG1-of (r / reflect-01 
            :ARG0 (b / building 
                  :ARG0-of (i / involve-01) 
                  :ARG1-of (p / produce-01 
                        :ARG0 (p2 / process 
                              :quant 3) 
                        :ARG1-of (c / combine-01 
                              :ARG0 (i2 / it 
                                    :domain-of (a / accident 
                                          :polarity (- / -))))))))

# ::snt directorgeneral of the british safety council since 1968 and author of several books on safety he is a leading authority on accident prevention, during the last 23 years i have looked at thousands of socalled accidents in many countries
# ::tok directorgeneral of the british safety council since 1968 and author of several books on safety he is a leading authority on accident prevention , during the last 23 years i have looked at thousands of socalled accidents in many countries
# ::alignments 39-40|0.0.1.1 38-39|0.0.1.1.1 36-37|0.0.1.1.0 31-32|0.0.1.0.1.0 29-30|0.0.1.0.1.0.0 28-29|0.0.1.0.1.2+0.0.1.0.1 27-28|0.0.1.0.1.1 26-27|0.1.0 22-23|0.0 21-22|0.0.0 19-20|0.0.1 18-19|0.0.1.0 15-16|0.0.1.0.0 14-15|0.0.1.0.0.0 12-13|0.0.1.0.0.0.0 11-12|0.0.1.0.0.0.0.1 9-10|0.0.1.0.0.0.0.0+0.0.1.0.0.0.0.0.0 8-9|0 7-8|0.1.1.0.0.0+0.1.1.0.0 6-7|0.1.1.0 5-6|0.1.1 4-5|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:14.564
# ::node	0	and	8-9
# ::node	0.0	prevent-01	22-23
# ::node	0.0.0	accident	21-22
# ::node	0.0.1	authority	19-20
# ::node	0.0.1.0	lead-01	18-19
# ::node	0.0.1.0.0	he	15-16
# ::node	0.0.1.0.0.0	safe-41	14-15
# ::node	0.0.1.0.0.0.0	book	12-13
# ::node	0.0.1.0.0.0.0.0	author-01	9-10
# ::node	0.0.1.0.0.0.0.0.0	person	9-10
# ::node	0.0.1.0.0.0.0.1	several	11-12
# ::node	0.0.1.0.1	temporal-quantity	28-29
# ::node	0.0.1.0.1.0	look-01	31-32
# ::node	0.0.1.0.1.0.0	i	29-30
# ::node	0.0.1.0.1.1	23	27-28
# ::node	0.0.1.0.1.2	year	28-29
# ::node	0.0.1.1	country	39-40
# ::node	0.0.1.1.0	accident	36-37
# ::node	0.0.1.1.1	many	38-39
# ::node	0.1	safe-41	4-5
# ::node	0.1.0	last	26-27
# ::node	0.1.1	council	5-6
# ::node	0.1.1.0	since	6-7
# ::node	0.1.1.0.0	date-entity	7-8
# ::node	0.1.1.0.0.0	1968	7-8
# ::root	0	and
(a5 / and 
      :ARG0-of (p / prevent-01 
            :ARG1 (a2 / accident) 
            :poss-of (a3 / authority 
                  :ARG0-of (l3 / lead-01 
                        :ARG1 (h / he 
                              :ARG1-of (s / safe-41 
                                    :topic-of (b / book 
                                          :ARG1-of (a4 / author-01 
                                                :ARG0 (p2 / person)) 
                                          :quant (s2 / several)))) 
                        :topic-of (t / temporal-quantity 
                              :ARG1-of (l / look-01 
                                    :ARG0 (i / i)) 
                              :quant 23 
                              :unit (y / year))) 
                  :mod (c / country 
                        :poss-of (a / accident) 
                        :quant (m / many)))) 
      :ARG1-of (s4 / safe-41 
            :ARG0 (l2 / last) 
            :mod-of (c2 / council 
                  :time (s3 / since 
                        :op1 (d / date-entity 
                              :year 1968)))))

# ::snt you dont have the right when you are a great driver to have a stupid accident which destroys the sporting spectacle
# ::tok you dont have the right when you are a great driver to have a stupid accident which destroys the sporting spectacle
# ::alignments 20-21|0 19-20|0.1 17-18|0.0 15-16|0.0.0 14-15|0.0.0.0 10-11|0.0.1.0+0.0.1 9-10|0.0.1.2 6-7|0.0.1.1 0-1|0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:14.679
# ::node	0	spectacle	20-21
# ::node	0.0	destroy-01	17-18
# ::node	0.0.0	accident	15-16
# ::node	0.0.0.0	stupid	14-15
# ::node	0.0.1	person	10-11
# ::node	0.0.1.0	drive-01	10-11
# ::node	0.0.1.1	you	6-7
# ::node	0.0.1.2	great	9-10
# ::node	0.0.2	you	0-1
# ::node	0.1	sport	19-20
# ::root	0	spectacle
# ::edge	accident	mod	stupid	0.0.0	0.0.0.0	
# ::edge	destroy-01	ARG0	accident	0.0	0.0.0	
# ::edge	destroy-01	ARG1	spectacle	0.0	0	
# ::edge	destroy-01	ARG2	person	0.0	0.0.1	
# ::edge	drive-01	ARG0	person	0.0.1.0	0.0.1	
# ::edge	person	domain	you	0.0.1	0.0.1.1	
# ::edge	person	mod	great	0.0.1	0.0.1.2	
# ::edge	spectacle	mod	sport	0	0.1	
# ::edge	you	op1	destroy-01	0.0.2	0.0	
(s / spectacle 
      :ARG1-of (d / destroy-01 
            :ARG0 (a / accident 
                  :mod (s3 / stupid)) 
            :ARG2 (p / person 
                  :ARG0-of (d2 / drive-01) 
                  :domain (y / you) 
                  :mod (g / great)) 
            :op-of (y2 / you)) 
      :mod (s2 / sport))

# ::snt   the accident caused damage amounting to at least 500 to the front of mr olejniks renault 25 company car including the fender and the radiator
# ::tok the accident caused damage amounting to at least 500 to the front of mr olejniks renault 25 company car including the fender and the radiator
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:14.680
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt police today named the 78yearold pedestrian killed in an accident in rose hill oxford on saturday night
# ::tok police today named the 78yearold pedestrian killed in an accident in rose hill oxford on saturday night
# ::alignments 16-17|0.0.0 15-16|0.0.2 11-12|0.1 9-10|0.0.1 6-7|0.0 5-6|0 1-2|0.1.0.0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:14.747
# ::node	0	pedestrian	5-6
# ::node	0.0	kill-01	6-7
# ::node	0.0.0	night	16-17
# ::node	0.0.1	accident	9-10
# ::node	0.0.2	saturday	15-16
# ::node	0.1	rise-01	11-12
# ::node	0.1.0	police	0-1
# ::node	0.1.0.0	today	1-2
# ::root	0	pedestrian
(p / pedestrian 
      :ARG1-of (k / kill-01 
            :ARG0 (n / night) 
            :location (a / accident) 
            :op-of (s / saturday)) 
      :ARG1-of (r / rise-01 
            :ARG0 (p2 / police 
                  :mod-of (t / today))))

# ::snt erik gundersen the threetimes world champion has retired after the accident which nearly killed him two months ago
# ::tok erik gundersen the threetimes world champion has retired after the accident which nearly killed him two months ago
# ::alignments 16-17|0.0.0.0.0+0.0.0.0 15-16|0.0.0 13-14|0.0.1.0.0 12-13|0.0.1.0.0.0 10-11|0.0.1.0 8-9|0.0.1 7-8|0.0 5-6|0 4-5|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:14.792
# ::node	0	champion	5-6
# ::node	0.0	retire-01	7-8
# ::node	0.0.0	2	15-16
# ::node	0.0.0.0	temporal-quantity	16-17
# ::node	0.0.0.0.0	month	16-17
# ::node	0.0.1	after	8-9
# ::node	0.0.1.0	accident	10-11
# ::node	0.0.1.0.0	kill-01	13-14
# ::node	0.0.1.0.0.0	nearly	12-13
# ::node	0.1	world	4-5
# ::root	0	champion
# ::edge	after	op1	accident	0.0.1	0.0.1.0	
# ::edge	champion	mod	world	0	0.1	
# ::edge	kill-01	ARG0	accident	0.0.1.0.0	0.0.1.0	
# ::edge	kill-01	mod	nearly	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	retire-01	ARG0	champion	0.0	0	
# ::edge	retire-01	ARG1	2	0.0	0.0.0	
# ::edge	retire-01	time	after	0.0	0.0.1	
# ::edge	temporal-quantity	quant	2	0.0.0.0	0.0.0	
# ::edge	temporal-quantity	unit	month	0.0.0.0	0.0.0.0.0	
(c / champion 
      :ARG0-of (r / retire-01 
            :ARG1 (2 / 2 
                  :quant-of (t / temporal-quantity 
                        :unit (m / month))) 
            :time (a2 / after 
                  :op1 (a / accident 
                        :ARG0-of (k / kill-01 
                              :mod (n / nearly))))) 
      :mod (w / world))

# ::snt they had always pretended that the bomber offensive was being conducted against strategic targets and that german civilians were being killed only by a regrettable accident
# ::tok they had always pretended that the bomber offensive was being conducted against strategic targets and that german civilians were being killed only by a regrettable accident
# ::alignments 25-26|0.1.0.0.0.0 24-25|0.1.0.0.0 21-22|0.1.2 20-21|0.1 17-18|0.1.1 14-15|0 13-14|0.0.0 12-13|0.0.0.0 10-11|0.0 7-8|0.0.1 6-7|0.0.1.0 3-4|0.1.0.0 2-3|0.1.0.0.1 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:15.029
# ::node	0	and	14-15
# ::node	0.0	conduct-01	10-11
# ::node	0.0.0	target	13-14
# ::node	0.0.0.0	strategy	12-13
# ::node	0.0.1	offensive	7-8
# ::node	0.0.1.0	bomb-01	6-7
# ::node	0.1	kill-01	20-21
# ::node	0.1.0	they	0-1
# ::node	0.1.0.0	pretend-01	3-4
# ::node	0.1.0.0.0	regret-01	24-25
# ::node	0.1.0.0.0.0	accident	25-26
# ::node	0.1.0.0.1	always	2-3
# ::node	0.1.1	civilian	17-18
# ::node	0.1.2	only	21-22
# ::root	0	and
# ::edge	and	op1	conduct-01	0	0.0	
# ::edge	and	op2	kill-01	0	0.1	
# ::edge	bomb-01	ARG0	offensive	0.0.1.0	0.0.1	
# ::edge	conduct-01	ARG0	target	0.0	0.0.0	
# ::edge	conduct-01	ARG1	offensive	0.0	0.0.1	
# ::edge	kill-01	ARG0	they	0.1	0.1.0	
# ::edge	kill-01	ARG1	civilian	0.1	0.1.1	
# ::edge	kill-01	mod	only	0.1	0.1.2	
# ::edge	pretend-01	ARG0	they	0.1.0.0	0.1.0	
# ::edge	pretend-01	time	always	0.1.0.0	0.1.0.0.1	
# ::edge	regret-01	ARG1	accident	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	regret-01	ARG2	pretend-01	0.1.0.0.0	0.1.0.0	
# ::edge	target	mod	strategy	0.0.0	0.0.0.0	
(a2 / and 
      :op1 (c2 / conduct-01 
            :ARG0 (t / target 
                  :mod (s / strategy)) 
            :ARG1 (o2 / offensive 
                  :ARG0-of (b / bomb-01))) 
      :op2 (k / kill-01 
            :ARG0 (t2 / they 
                  :ARG0-of (p / pretend-01 
                        :ARG2-of (r / regret-01 
                              :ARG1 (a / accident)) 
                        :time (a3 / always))) 
            :ARG1 (c / civilian) 
            :mod (o / only)))

# ::snt the last personal injury case in which a jury trial was allowed was in 1965 and involved a work accident in which a man lost his penis leaving him with sexual urges but unable to perform
# ::tok the last personal injury case in which a jury trial was allowed was in 1965 and involved a work accident in which a man lost his penis leaving him with sexual urges but unable to perform
# ::alignments 35-36|0.0.1.0.0.0.0 32-33|0 31-32|0.0.1.1 30-31|0.0.1.1.0 27-28|0.0.1 24-25|0.0 23-24|0.0.0 19-20|0.0.1.0 16-17|0.0.1.0.0 15-16|0.0.1.0.0.1 14-15|0.0.1.0.0.0.0.0.0+0.0.1.0.0.0.0.0 11-12|0.0.1.0.0.0.1 9-10|0.0.1.0.0.0.1.0 8-9|0.0.1.0.0.0.1.0.0 4-5|0.0.1.0.0.0 3-4|0.0.1.0.0.0.2 2-3|0.0.1.0.0.0.2.0 1-2|0.0.1.0.0.0.2.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:15.453
# ::node	0	contrast-01	32-33
# ::node	0.0	lose-02	24-25
# ::node	0.0.0	man	23-24
# ::node	0.0.1	leave-01	27-28
# ::node	0.0.1.0	accident	19-20
# ::node	0.0.1.0.0	involve-01	16-17
# ::node	0.0.1.0.0.0	case	4-5
# ::node	0.0.1.0.0.0.0	perform-01	35-36
# ::node	0.0.1.0.0.0.0.0	date-entity	14-15
# ::node	0.0.1.0.0.0.0.0.0	1965	14-15
# ::node	0.0.1.0.0.0.1	allow-01	11-12
# ::node	0.0.1.0.0.0.1.0	trial	9-10
# ::node	0.0.1.0.0.0.1.0.0	jury	8-9
# ::node	0.0.1.0.0.0.2	injure-01	3-4
# ::node	0.0.1.0.0.0.2.0	personal	2-3
# ::node	0.0.1.0.0.0.2.1	last	1-2
# ::node	0.0.1.0.0.1	and	15-16
# ::node	0.0.1.1	urge-01	31-32
# ::node	0.0.1.1.0	sexual	30-31
# ::root	0	contrast-01
# ::edge	allow-01	ARG0	case	0.0.1.0.0.0.1	0.0.1.0.0.0	
# ::edge	allow-01	ARG1	trial	0.0.1.0.0.0.1	0.0.1.0.0.0.1.0	
# ::edge	and	op1	involve-01	0.0.1.0.0.1	0.0.1.0.0	
# ::edge	case	mod	injure-01	0.0.1.0.0.0	0.0.1.0.0.0.2	
# ::edge	contrast-01	ARG1	lose-02	0	0.0	
# ::edge	date-entity	year	1965	0.0.1.0.0.0.0.0	0.0.1.0.0.0.0.0.0	
# ::edge	injure-01	mod	last	0.0.1.0.0.0.2	0.0.1.0.0.0.2.1	
# ::edge	injure-01	mod	personal	0.0.1.0.0.0.2	0.0.1.0.0.0.2.0	
# ::edge	involve-01	ARG0	case	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	involve-01	ARG1	accident	0.0.1.0.0	0.0.1.0	
# ::edge	leave-01	ARG1	accident	0.0.1	0.0.1.0	
# ::edge	leave-01	ARG2	urge-01	0.0.1	0.0.1.1	
# ::edge	lose-02	ARG0	man	0.0	0.0.0	
# ::edge	lose-02	ARG1	leave-01	0.0	0.0.1	
# ::edge	perform-01	ARG0	case	0.0.1.0.0.0.0	0.0.1.0.0.0	
# ::edge	perform-01	ARG1	date-entity	0.0.1.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	trial	mod	jury	0.0.1.0.0.0.1.0	0.0.1.0.0.0.1.0.0	
# ::edge	urge-01	mod	sexual	0.0.1.1	0.0.1.1.0	
(c / contrast-01 
      :ARG1 (l2 / lose-02 
            :ARG0 (m / man) 
            :ARG1 (l / leave-01 
                  :ARG1 (a / accident 
                        :ARG1-of (i / involve-01 
                              :ARG0 (c2 / case 
                                    :ARG0-of (p / perform-01 
                                          :ARG1 (d / date-entity 
                                                :year 1965)) 
                                    :ARG0-of (a3 / allow-01 
                                          :ARG1 (t / trial 
                                                :mod (j / jury))) 
                                    :mod (i2 / injure-01 
                                          :mod (p2 / personal) 
                                          :mod (l3 / last))) 
                              :op-of (a2 / and))) 
                  :ARG2 (u / urge-01 
                        :mod (s / sexual)))))

# ::snt american law shares with english law the common law tradition of lump sum awards once and for all for both past and future lossesfo id201 sustained in a single accident
# ::tok american law shares with english law the common law tradition of lump sum awards once and for all for both past and future lossesfo id201 sustained in a single accident
# ::alignments 29-30|0.2.0.0.0 28-29|0.2.0.0.0.0 25-26|0.2.0.0 22-23|0.2 21-22|0.2.0 20-21|0.2.0.2 19-20|0.2.0.2.0 17-18|0.0.0.0 15-16|0 14-15|0.1 13-14|0.0.1+0.0 12-13|0.0.1.0 11-12|0.0.0 9-10|0.0.2 8-9|0.0.2.0 7-8|0.0.2.0.0 5-6|0.2.0.1.1.0 4-5|0.2.0.1.1.0.0.0.0+0.2.0.1.1.0.0.0+0.2.0.1.1.0.0 2-3|0.2.0.1.1 1-2|0.2.0.1.0 0-1|0.2.0.1.2.0+0.2.0.1.2+0.2.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:15.896
# ::node	0	and	15-16
# ::node	0.0	thing	13-14
# ::node	0.0.0	lump-01	11-12
# ::node	0.0.0.0	all	17-18
# ::node	0.0.1	award-01	13-14
# ::node	0.0.1.0	sum	12-13
# ::node	0.0.2	tradition	9-10
# ::node	0.0.2.0	law	8-9
# ::node	0.0.2.0.0	common	7-8
# ::node	0.1	once	14-15
# ::node	0.2	future	22-23
# ::node	0.2.0	and	21-22
# ::node	0.2.0.0	sustain-01	25-26
# ::node	0.2.0.0.0	accident	29-30
# ::node	0.2.0.0.0.0	single	28-29
# ::node	0.2.0.1	country	0-1
# ::node	0.2.0.1.0	law	1-2
# ::node	0.2.0.1.1	share	2-3
# ::node	0.2.0.1.1.0	law	5-6
# ::node	0.2.0.1.1.0.0	language	4-5
# ::node	0.2.0.1.1.0.0.0	name	4-5
# ::node	0.2.0.1.1.0.0.0.0	"English"	4-5
# ::node	0.2.0.1.2	name	0-1
# ::node	0.2.0.1.2.0	"America"	0-1
# ::node	0.2.0.2	past	20-21
# ::node	0.2.0.2.0	both	19-20
# ::root	0	and
# ::edge	accident	mod	single	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	and	op1	country	0.2.0	0.2.0.1	
# ::edge	and	op1	thing	0	0.0	
# ::edge	and	op2	once	0	0.1	
# ::edge	and	op2	past	0.2.0	0.2.0.2	
# ::edge	and	op3	future	0	0.2	
# ::edge	and	op3	future	0.2.0	0.2	
# ::edge	award-01	ARG0	sum	0.0.1	0.0.1.0	
# ::edge	award-01	ARG1	thing	0.0.1	0.0	
# ::edge	country	name	name	0.2.0.1	0.2.0.1.2	
# ::edge	language	name	name	0.2.0.1.1.0.0	0.2.0.1.1.0.0.0	
# ::edge	law	mod	common	0.0.2.0	0.0.2.0.0	
# ::edge	law	mod	country	0.2.0.1.0	0.2.0.1	
# ::edge	law	mod	language	0.2.0.1.1.0	0.2.0.1.1.0.0	
# ::edge	lump-01	ARG0	all	0.0.0	0.0.0.0	
# ::edge	lump-01	ARG1	thing	0.0.0	0.0	
# ::edge	name	op1	"America"	0.2.0.1.2	0.2.0.1.2.0	
# ::edge	name	op1	"English"	0.2.0.1.1.0.0.0	0.2.0.1.1.0.0.0.0	
# ::edge	past	mod	both	0.2.0.2	0.2.0.2.0	
# ::edge	share	mod	country	0.2.0.1.1	0.2.0.1	
# ::edge	share	mod	law	0.2.0.1.1	0.2.0.1.1.0	
# ::edge	sustain-01	ARG0	accident	0.2.0.0	0.2.0.0.0	
# ::edge	sustain-01	ARG1	and	0.2.0.0	0.2.0	
# ::edge	tradition	mod	law	0.0.2	0.0.2.0	
# ::edge	tradition	poss	thing	0.0.2	0.0	
(a4 / and 
      :op1 (t / thing 
            :ARG1-of (l / lump-01 
                  :ARG0 (a3 / all)) 
            :ARG1-of (a5 / award-01 
                  :ARG0 (s3 / sum)) 
            :poss-of (t2 / tradition 
                  :mod (l2 / law 
                        :mod (c / common)))) 
      :op2 (o / once) 
      :op3 (f / future 
            :op-of (a2 / and 
                  :ARG1-of (s2 / sustain-01 
                        :ARG0 (a / accident 
                              :mod (s / single))) 
                  :op1 (c2 / country 
                        :mod-of (l5 / law) 
                        :mod-of (s4 / share 
                              :mod (l3 / law 
                                    :mod (l4 / language 
                                          :name (n / name 
                                                :op1 "English")))) 
                        :name (n2 / name 
                              :op1 "America")) 
                  :op2 (p / past 
                        :mod (b / both)))))

# ::snt up to 40000 payable to your estate if you should die  following an accident
# ::tok up to 40000 payable to your estate if you should die following an accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:15.897
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt we now have to have two fulltime porters on duty in the accident department dash
# ::tok we now have to have two fulltime porters on duty in the accident department dash
# ::alignments 13-14|0.0 12-13|0 9-10|0.0.0.1 5-6|0.0.0.0 1-2|0.0.0.2 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:15.915
# ::node	0	accident	12-13
# ::node	0.0	department	13-14
# ::node	0.0.0	we	0-1
# ::node	0.0.0.0	2	5-6
# ::node	0.0.0.1	duty	9-10
# ::node	0.0.0.2	now	1-2
# ::root	0	accident
(a / accident 
      :mod-of (d / department 
            :mod-of (w / we 
                  :op-of 2 
                  :poss-of (d2 / duty) 
                  :time (n / now))))

# ::snt cars just suddenly come out from nowhere and its easy to have an accident
# ::tok cars just suddenly come out from nowhere and its easy to have an accident
# ::alignments 13-14|0.0.0 9-10|0.3 7-8|0 6-7|0.2 2-3|0.1 1-2|0.1.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:15.936
# ::node	0	and	7-8
# ::node	0.0	car	0-1
# ::node	0.0.0	accident	13-14
# ::node	0.1	sudden	2-3
# ::node	0.1.0	just	1-2
# ::node	0.2	nowhere	6-7
# ::node	0.3	easy	9-10
# ::root	0	and
# ::edge	accident	poss	car	0.0.0	0.0	
# ::edge	and	op1	car	0	0.0	
# ::edge	and	op2	sudden	0	0.1	
# ::edge	and	op3	nowhere	0	0.2	
# ::edge	and	op4	easy	0	0.3	
# ::edge	sudden	mod	just	0.1	0.1.0	
(a2 / and 
      :op1 (c / car 
            :poss-of (a / accident)) 
      :op2 (s / sudden 
            :mod (j / just)) 
      :op3 (n / nowhere) 
      :op4 (e / easy))

# ::snt if the girl stepped off here he said taking a couple of paces towards the fast lane and fanshawe thought he was going to hit her why didnt he swerve to the left into the middle lane instead of to the right  the road must have been clear as there were no witnesses to the accident
# ::tok if the girl stepped off here he said taking a couple of paces towards the fast lane and fanshawe thought he was going to hit her why didnt he swerve to the left into the middle lane instead of to the right the road must have been clear as there were no witnesses to the accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:15.940
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the accident happened at 7, the second driver involved in the accident was unhurt
# ::tok the accident happened at 7 , the second driver involved in the accident was unhurt
# ::alignments 14-15|0.0.0.0.0.0+0.0.0.0.0 12-13|0.2 9-10|0 8-9|0.1.0+0.1 4-5|0.0 2-3|0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:15.985
# ::node	0	involve-01	9-10
# ::node	0.0	7	4-5
# ::node	0.0.0	happen-01	2-3
# ::node	0.0.0.0	accident	1-2
# ::node	0.0.0.0.0	hurt-01	14-15
# ::node	0.0.0.0.0.0	-	14-15
# ::node	0.1	person	8-9
# ::node	0.1.0	drive-01	8-9
# ::node	0.2	accident	12-13
# ::root	0	involve-01
# ::edge	drive-01	ARG0	person	0.1.0	0.1	
# ::edge	happen-01	ARG1	accident	0.0.0	0.0.0.0	
# ::edge	happen-01	time	7	0.0.0	0.0	
# ::edge	hurt-01	ARG1	accident	0.0.0.0.0	0.0.0.0	
# ::edge	hurt-01	polarity	-	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	involve-01	ARG0	7	0	0.0	
# ::edge	involve-01	ARG1	person	0	0.1	
# ::edge	involve-01	ARG2	accident	0	0.2	
(i / involve-01 
      :ARG0 (7 / 7 
            :time-of (h2 / happen-01 
                  :ARG1 (a2 / accident 
                        :ARG1-of (h / hurt-01 
                              :polarity -)))) 
      :ARG1 (p / person 
            :ARG0-of (d / drive-01)) 
      :ARG2 (a / accident))

# ::snt 20  adriver convicted of causing death by reckless driving was put on probation for two years yesterday on condition that he spend 60 days of a sixmonth rehabilitation course in an orthopaedic unit where road accident victims recover
# ::tok 20 adriver convicted of causing death by reckless driving was put on probation for two years yesterday on condition that he spend 60 days of a sixmonth rehabilitation course in an orthopaedic unit where road accident victims recover
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:15.986
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt but these let alone general accident compensation plansfo id111 have remained utopian
# ::tok but these let alone general accident compensation plansfo id111 have remained utopian
# ::alignments 10-11|0.0.0 6-7|0.0.1.0.0 5-6|0.0.1.0.0.0 4-5|0.0.1 3-4|0.0.1.0 2-3|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:16.039
# ::node	0	contrast-01	0-1
# ::node	0.0	let-01	2-3
# ::node	0.0.0	remain-01	10-11
# ::node	0.0.1	general	4-5
# ::node	0.0.1.0	alone	3-4
# ::node	0.0.1.0.0	compensate-01	6-7
# ::node	0.0.1.0.0.0	accident	5-6
# ::root	0	contrast-01
# ::edge	compensate-01	ARG0	alone	0.0.1.0.0	0.0.1.0	
# ::edge	compensate-01	ARG1	accident	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	contrast-01	ARG1	let-01	0	0.0	
# ::edge	general	degree	alone	0.0.1	0.0.1.0	
# ::edge	let-01	ARG1	remain-01	0.0	0.0.0	
# ::edge	let-01	ARG2	general	0.0	0.0.1	
(c2 / contrast-01 
      :ARG1 (l / let-01 
            :ARG1 (r / remain-01) 
            :ARG2 (g / general 
                  :degree (a2 / alone 
                        :ARG0-of (c / compensate-01 
                              :ARG1 (a / accident))))))

# ::snt it was lost during one of our moves and i am all the more sorry for the loss because george was later killed in a car accident in mexico
# ::tok it was lost during one of our moves and i am all the more sorry for the loss because george was later killed in a car accident in mexico
# ::alignments 26-27|0.0.0 25-26|0.0.0.0 22-23|0.0 21-22|0.0.1 18-19|0 14-15|0.1 11-12|0.1.0 9-10|0.1.1 8-9|0.1.2 7-8|0.1.2.0.1 2-3|0.1.2.0 0-1|0.1.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:16.152
# ::node	0	cause-01	18-19
# ::node	0.0	kill-01	22-23
# ::node	0.0.0	accident	26-27
# ::node	0.0.0.0	car	25-26
# ::node	0.0.1	late	21-22
# ::node	0.1	sorry-41	14-15
# ::node	0.1.0	all	11-12
# ::node	0.1.1	i	9-10
# ::node	0.1.2	and	8-9
# ::node	0.1.2.0	lose-02	2-3
# ::node	0.1.2.0.0	it	0-1
# ::node	0.1.2.0.1	move-02	7-8
# ::root	0	cause-01
# ::edge	accident	location	car	0.0.0	0.0.0.0	
# ::edge	and	op1	lose-02	0.1.2	0.1.2.0	
# ::edge	and	op2	sorry-41	0.1.2	0.1	
# ::edge	cause-01	ARG0	kill-01	0	0.0	
# ::edge	cause-01	ARG1	sorry-41	0	0.1	
# ::edge	kill-01	location	accident	0.0	0.0.0	
# ::edge	kill-01	time	late	0.0	0.0.1	
# ::edge	lose-02	ARG1	it	0.1.2.0	0.1.2.0.0	
# ::edge	lose-02	location	move-02	0.1.2.0	0.1.2.0.1	
# ::edge	sorry-41	ARG0	all	0.1	0.1.0	
# ::edge	sorry-41	ARG1	i	0.1	0.1.1	
(c2 / cause-01 
      :ARG0 (k / kill-01 
            :location (a / accident 
                  :location (c / car)) 
            :time (l / late)) 
      :ARG1 (s / sorry-41 
            :ARG0 (a2 / all) 
            :ARG1 (i / i) 
            :op-of (a3 / and 
                  :op1 (l2 / lose-02 
                        :ARG1 (i2 / it) 
                        :location (m / move-02)))))

# ::snt if after a reasonable period of time has elapsed the insurer having examined all evidence available has no reason to suppose other than an accident has occurred the disappearance of an insured person shall be considered as constituting a claim under this policy
# ::tok if after a reasonable period of time has elapsed the insurer having examined all evidence available has no reason to suppose other than an accident has occurred the disappearance of an insured person shall be considered as constituting a claim under this policy
# ::alignments 42-43|0.0.1.0 41-42|0.0.0.0 39-40|0.0.1.1 37-38|0.0.1 35-36|0.0 32-33|0.0.1.1.1 31-32|0.0.1.1.0.0+0.0.1.1.0 28-29|0.0.1.1.1.0 24-25|0.0.0.3 21-22|0.0.0.1 20-21|0.0.0 18-19|0.0.0.2 17-18|0.0.0.2.0 15-16|0.2 14-15|0 13-14|0.3 12-13|0.1 6-7|0.1.0.1 4-5|0.1.0 3-4|0.1.0.0 1-2|0.1.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:17.095
# ::node	0	evidence-01	14-15
# ::node	0.0	consider-01	35-36
# ::node	0.0.0	suppose-01	20-21
# ::node	0.0.0.0	this	41-42
# ::node	0.0.0.1	other	21-22
# ::node	0.0.0.2	reason	18-19
# ::node	0.0.0.2.0	-	17-18
# ::node	0.0.0.3	accident	24-25
# ::node	0.0.1	constitute-01	37-38
# ::node	0.0.1.0	policy	42-43
# ::node	0.0.1.1	claim-01	39-40
# ::node	0.0.1.1.0	person	31-32
# ::node	0.0.1.1.0.0	insure-02	31-32
# ::node	0.0.1.1.1	person	32-33
# ::node	0.0.1.1.1.0	disappear-01	28-29
# ::node	0.1	examine-01	12-13
# ::node	0.1.0	period	4-5
# ::node	0.1.0.0	reasonable	3-4
# ::node	0.1.0.1	time	6-7
# ::node	0.1.0.2	after	1-2
# ::node	0.2	available	15-16
# ::node	0.3	all	13-14
# ::root	0	evidence-01
# ::edge	after	op1	period	0.1.0.2	0.1.0	
# ::edge	available	domain	evidence-01	0.2	0	
# ::edge	claim-01	ARG0	person	0.0.1.1	0.0.1.1.0	
# ::edge	claim-01	ARG1	constitute-01	0.0.1.1	0.0.1	
# ::edge	consider-01	ARG0	suppose-01	0.0	0.0.0	
# ::edge	consider-01	ARG1	constitute-01	0.0	0.0.1	
# ::edge	constitute-01	ARG1	policy	0.0.1	0.0.1.0	
# ::edge	disappear-01	ARG1	person	0.0.1.1.1.0	0.0.1.1.1	
# ::edge	evidence-01	ARG1	consider-01	0	0.0	
# ::edge	evidence-01	quant	all	0	0.3	
# ::edge	examine-01	ARG0	period	0.1	0.1.0	
# ::edge	examine-01	ARG1	evidence-01	0.1	0	
# ::edge	insure-02	ARG1	person	0.0.1.1.0.0	0.0.1.1.0	
# ::edge	period	mod	reasonable	0.1.0	0.1.0.0	
# ::edge	period	mod	time	0.1.0	0.1.0.1	
# ::edge	person	poss	claim-01	0.0.1.1.1	0.0.1.1	
# ::edge	reason	polarity	-	0.0.0.2	0.0.0.2.0	
# ::edge	reason	purpose	suppose-01	0.0.0.2	0.0.0	
# ::edge	suppose-01	ARG0	this	0.0.0	0.0.0.0	
# ::edge	suppose-01	ARG1	other	0.0.0	0.0.0.1	
# ::edge	suppose-01	time	accident	0.0.0	0.0.0.3	
(e / evidence-01 
      :ARG1 (c3 / consider-01 
            :ARG0 (s / suppose-01 
                  :ARG0 (t / this) 
                  :ARG1 (o / other) 
                  :purpose-of (r / reason 
                        :polarity (- / -)) 
                  :time (a / accident)) 
            :ARG1 (c2 / constitute-01 
                  :ARG1 (p / policy) 
                  :ARG1-of (c / claim-01 
                        :ARG0 (p3 / person 
                              :ARG1-of (i / insure-02)) 
                        :poss-of (p2 / person 
                              :ARG1-of (d / disappear-01))))) 
      :ARG1-of (e2 / examine-01 
            :ARG0 (p4 / period 
                  :mod (r2 / reasonable) 
                  :mod (t2 / time) 
                  :op-of (a4 / after))) 
      :domain-of (a2 / available) 
      :quant (a3 / all))

# ::snt during the past 10 years the number of road accident casualties has fallen by 20 per cent but serious and fatal injuries have increased by 4 per cent
# ::tok during the past 10 years the number of road accident casualties has fallen by 20 per cent but serious and fatal injuries have increased by 4 per cent
# ::alignments 27-28|0.1.2.0+0.1.2 25-26|0.1.4 23-24|0.1 21-22|0.1.1 20-21|0.1.3.1 19-20|0.1.3 18-19|0.1.3.0 17-18|0 16-17|0.0.1.0+0.0.1 14-15|0.1.1.0 12-13|0.0 10-11|0.0.0.0 9-10|0.0.0.0.0 8-9|0.0.0.0.0.0 6-7|0.0.0 4-5|0.1.0.2+0.1.0 3-4|0.1.0.1 2-3|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:17.751
# ::node	0	contrast-01	17-18
# ::node	0.0	fall-01	12-13
# ::node	0.0.0	number	6-7
# ::node	0.0.0.0	casualty	10-11
# ::node	0.0.0.0.0	accident	9-10
# ::node	0.0.0.0.0.0	road	8-9
# ::node	0.0.1	monetary-quantity	16-17
# ::node	0.0.1.0	cent	16-17
# ::node	0.1	increase-01	23-24
# ::node	0.1.0	temporal-quantity	4-5
# ::node	0.1.0.0	past	2-3
# ::node	0.1.0.1	10	3-4
# ::node	0.1.0.2	year	4-5
# ::node	0.1.1	injure-01	21-22
# ::node	0.1.1.0	20	14-15
# ::node	0.1.2	monetary-quantity	27-28
# ::node	0.1.2.0	cent	27-28
# ::node	0.1.3	and	19-20
# ::node	0.1.3.0	serious	18-19
# ::node	0.1.3.1	fatal	20-21
# ::node	0.1.4	4	25-26
# ::root	0	contrast-01
# ::edge	accident	mod	road	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	and	op1	serious	0.1.3	0.1.3.0	
# ::edge	and	op2	fatal	0.1.3	0.1.3.1	
# ::edge	and	op3	increase-01	0.1.3	0.1	
# ::edge	casualty	mod	accident	0.0.0.0	0.0.0.0.0	
# ::edge	casualty	quant	number	0.0.0.0	0.0.0	
# ::edge	contrast-01	ARG1	fall-01	0	0.0	
# ::edge	contrast-01	ARG2	increase-01	0	0.1	
# ::edge	fall-01	ARG1	number	0.0	0.0.0	
# ::edge	fall-01	ARG2	monetary-quantity	0.0	0.0.1	
# ::edge	increase-01	ARG0	temporal-quantity	0.1	0.1.0	
# ::edge	increase-01	ARG1	injure-01	0.1	0.1.1	
# ::edge	increase-01	ARG4	monetary-quantity	0.1	0.1.2	
# ::edge	increase-01	time	4	0.1	0.1.4	
# ::edge	injure-01	ARG1	20	0.1.1	0.1.1.0	
# ::edge	monetary-quantity	unit	cent	0.0.1	0.0.1.0	
# ::edge	monetary-quantity	unit	cent	0.1.2	0.1.2.0	
# ::edge	past	op1	temporal-quantity	0.1.0.0	0.1.0	
# ::edge	temporal-quantity	quant	10	0.1.0	0.1.0.1	
# ::edge	temporal-quantity	unit	year	0.1.0	0.1.0.2	
(c2 / contrast-01 
      :ARG1 (f2 / fall-01 
            :ARG1 (n / number 
                  :quant-of (c4 / casualty 
                        :mod (a2 / accident 
                              :mod (r / road)))) 
            :ARG2 (m2 / monetary-quantity 
                  :unit (c3 / cent))) 
      :ARG2 (i / increase-01 
            :ARG0 (t / temporal-quantity 
                  :op-of (p / past) 
                  :quant 10 
                  :unit (y / year)) 
            :ARG1 (i2 / injure-01 
                  :ARG1 20) 
            :ARG4 (m / monetary-quantity 
                  :unit (c / cent)) 
            :op-of (a / and 
                  :op1 (s / serious) 
                  :op2 (f / fatal)) 
            :time 4))

# ::snt a tractor accident had left him with a slight limp and he thus by the cruelty of fate only too well mirrored in his halting walk his social position
# ::tok a tractor accident had left him with a slight limp and he thus by the cruelty of fate only too well mirrored in his halting walk his social position
# ::alignments 28-29|0.1.0 27-28|0.1.1.2 25-26|0.1 24-25|0.1.1 20-21|0.1.2 19-20|0.1.2.0 18-19|0.1.2.0.0 17-18|0.1.1.0.0 15-16|0.1.1.0 11-12|0.0 10-11|0 8-9|0.0.0 2-3|0.1.1.1 1-2|0.1.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:18.000
# ::node	0	and	10-11
# ::node	0.0	he	11-12
# ::node	0.0.0	slight	8-9
# ::node	0.1	walk-01	25-26
# ::node	0.1.0	position	28-29
# ::node	0.1.1	halt-01	24-25
# ::node	0.1.1.0	cruelty	15-16
# ::node	0.1.1.0.0	fate	17-18
# ::node	0.1.1.1	accident	2-3
# ::node	0.1.1.1.0	tractor	1-2
# ::node	0.1.1.2	society	27-28
# ::node	0.1.2	well	20-21
# ::node	0.1.2.0	too	19-20
# ::node	0.1.2.0.0	only	18-19
# ::root	0	and
# ::edge	accident	location	tractor	0.1.1.1	0.1.1.1.0	
# ::edge	accident	op1	halt-01	0.1.1.1	0.1.1	
# ::edge	and	op1	he	0	0.0	
# ::edge	and	op2	walk-01	0	0.1	
# ::edge	cruelty	mod	fate	0.1.1.0	0.1.1.0.0	
# ::edge	halt-01	ARG0	cruelty	0.1.1	0.1.1.0	
# ::edge	halt-01	ARG1	walk-01	0.1.1	0.1	
# ::edge	slight	poss	he	0.0.0	0.0	
# ::edge	society	quant	halt-01	0.1.1.2	0.1.1	
# ::edge	too	degree	only	0.1.2.0	0.1.2.0.0	
# ::edge	walk-01	ARG1	position	0.1	0.1.0	
# ::edge	well	degree	too	0.1.2	0.1.2.0	
# ::edge	well	time	walk-01	0.1.2	0.1	
(a / and 
      :op1 (h2 / he 
            :poss-of (s2 / slight)) 
      :op2 (w / walk-01 
            :ARG1 (p / position) 
            :ARG1-of (h / halt-01 
                  :ARG0 (c / cruelty 
                        :mod (f / fate)) 
                  :op-of (a2 / accident 
                        :location (t2 / tractor)) 
                  :quant-of (s / society)) 
            :time-of (w2 / well 
                  :degree (t / too 
                        :degree (o / only)))))

# ::snt robson a pe teacher is in hospital following an operation to pin a severely broken finger after the hand was crushed in a weighttraining accident at his school in stokeontrent
# ::tok robson a pe teacher is in hospital following an operation to pin a severely broken finger after the hand was crushed in a weighttraining accident at his school in stokeontrent
# ::alignments 27-28|0.1.0 24-25|0.1 20-21|0 18-19|0.0 16-17|0.2 15-16|0.2.0.1 14-15|0.2.0.1.0 13-14|0.2.0.1.0.0 11-12|0.2.0 9-10|0.2.0.2 6-7|0.2.0.0 3-4|0.0.0.0+0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:18.217
# ::node	0	crush-01	20-21
# ::node	0.0	hand	18-19
# ::node	0.0.0	person	3-4
# ::node	0.0.0.0	teach-01	3-4
# ::node	0.1	accident	24-25
# ::node	0.1.0	school	27-28
# ::node	0.2	after	16-17
# ::node	0.2.0	pin-01	11-12
# ::node	0.2.0.0	hospital	6-7
# ::node	0.2.0.1	finger	15-16
# ::node	0.2.0.1.0	break-01	14-15
# ::node	0.2.0.1.0.0	severe	13-14
# ::node	0.2.0.2	operation	9-10
# ::root	0	crush-01
# ::edge	accident	location	school	0.1	0.1.0	
# ::edge	after	op1	crush-01	0.2	0	
# ::edge	break-01	manner	severe	0.2.0.1.0	0.2.0.1.0.0	
# ::edge	crush-01	ARG1	hand	0	0.0	
# ::edge	crush-01	location	accident	0	0.1	
# ::edge	finger	mod	break-01	0.2.0.1	0.2.0.1.0	
# ::edge	operation	purpose	pin-01	0.2.0.2	0.2.0	
# ::edge	person	part	hand	0.0.0	0.0	
# ::edge	pin-01	ARG0	hospital	0.2.0	0.2.0.0	
# ::edge	pin-01	ARG1	finger	0.2.0	0.2.0.1	
# ::edge	pin-01	time	after	0.2.0	0.2	
# ::edge	teach-01	ARG0	person	0.0.0.0	0.0.0	
(c / crush-01 
      :ARG1 (h / hand 
            :part-of (p2 / person 
                  :ARG0-of (t / teach-01))) 
      :location (a / accident 
            :location (s / school)) 
      :op-of (a2 / after 
            :time-of (p / pin-01 
                  :ARG0 (h2 / hospital) 
                  :ARG1 (f / finger 
                        :mod (b / break-01 
                              :manner (s2 / severe))) 
                  :purpose-of (o / operation))))

# ::snt the accident happened at about 825pm last night
# ::tok the accident happened at about 825pm last night
# ::alignments 7-8|0.1 6-7|0.1.0 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:18.226
# ::node	0	happen-01	2-3
# ::node	0.0	accident	1-2
# ::node	0.1	night	7-8
# ::node	0.1.0	last	6-7
# ::root	0	happen-01
# ::edge	happen-01	ARG1	accident	0	0.0	
# ::edge	happen-01	time	night	0	0.1	
# ::edge	night	mod	last	0.1	0.1.0	
(h / happen-01 
      :ARG1 (a / accident) 
      :time (n / night 
            :mod (l / last)))

# ::snt i think the officials were lucky that the accident happened boutsen said
# ::tok i think the officials were lucky that the accident happened boutsen said
# ::alignments 11-12|0 9-10|0.0 8-9|0.0.0 5-6|0.0.1 3-4|0.0.1.0.1.0+0.0.1.0.1 1-2|0.0.1.0.0 0-1|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:18.250
# ::node	0	say-01	11-12
# ::node	0.0	happen-01	9-10
# ::node	0.0.0	accident	8-9
# ::node	0.0.1	lucky	5-6
# ::node	0.0.1.0	i	0-1
# ::node	0.0.1.0.0	think-01	1-2
# ::node	0.0.1.0.1	have-org-role-91	3-4
# ::node	0.0.1.0.1.0	official	3-4
# ::root	0	say-01
# ::edge	happen-01	ARG1	accident	0.0	0.0.0	
# ::edge	have-org-role-91	ARG0	i	0.0.1.0.1	0.0.1.0	
# ::edge	have-org-role-91	ARG2	official	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	lucky	domain	happen-01	0.0.1	0.0	
# ::edge	lucky	domain	i	0.0.1	0.0.1.0	
# ::edge	say-01	ARG1	happen-01	0	0.0	
# ::edge	think-01	ARG0	i	0.0.1.0.0	0.0.1.0	
(s / say-01 
      :ARG1 (h / happen-01 
            :ARG1 (a / accident) 
            :domain-of (l / lucky 
                  :domain (i / i 
                        :ARG0-of (t / think-01) 
                        :ARG0-of (h2 / have-org-role-91 
                              :ARG2 (o / official))))))

# ::snt the vehicle was shunted more than 200 yards down the line in the accident which happened on the halifax to leeds line at ducketts crossing west yorkshire at 4
# ::tok the vehicle was shunted more than 200 yards down the line in the accident which happened on the halifax to leeds line at ducketts crossing west yorkshire at 4
# ::alignments 28-29|0.0.0.2 25-26|0.1 24-25|0 21-22|0.0 15-16|0.0.0 13-14|0.0.0.0 10-11|0.0.0.0.0 8-9|0.0.0.0.0.0 7-8|0.0.0.1 6-7|0.0.0.1.0 1-2|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:18.433
# ::node	0	cross-02	24-25
# ::node	0.0	line	21-22
# ::node	0.0.0	happen-01	15-16
# ::node	0.0.0.0	accident	13-14
# ::node	0.0.0.0.0	line	10-11
# ::node	0.0.0.0.0.0	down	8-9
# ::node	0.0.0.1	yard	7-8
# ::node	0.0.0.1.0	200	6-7
# ::node	0.0.0.2	4	28-29
# ::node	0.1	west	25-26
# ::node	0.2	vehicle	1-2
# ::root	0	cross-02
# ::edge	4	op1	happen-01	0.0.0.2	0.0.0	
# ::edge	accident	part	line	0.0.0.0	0.0.0.0.0	
# ::edge	cross-02	ARG0	line	0	0.0	
# ::edge	cross-02	ARG1	west	0	0.1	
# ::edge	down	op1	line	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	happen-01	ARG1	accident	0.0.0	0.0.0.0	
# ::edge	happen-01	ARG2	line	0.0.0	0.0	
# ::edge	happen-01	manner	yard	0.0.0	0.0.0.1	
# ::edge	vehicle	op1	cross-02	0.2	0	
# ::edge	yard	quant	200	0.0.0.1	0.0.0.1.0	
(c / cross-02 
      :ARG0 (l / line 
            :ARG2-of (h / happen-01 
                  :ARG1 (a / accident 
                        :part (l2 / line 
                              :op-of (d / down))) 
                  :manner (y / yard 
                        :quant 200) 
                  :op-of 4)) 
      :ARG1 (w / west) 
      :op-of (v / vehicle))

# ::snt or perhaps it was merely an accident that marcus had picked up those utterances of his ancestors
# ::tok or perhaps it was merely an accident that marcus had picked up those utterances of his ancestors
# ::alignments 16-17|0.0.0.0.0+0.0.0.0 10-11|0 6-7|0.0.0 4-5|0.0.0.1.1 2-3|0.0 1-2|0.0.0.1.0 0-1|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:18.483
# ::node	0	pick-04	10-11
# ::node	0.0	it	2-3
# ::node	0.0.0	accident	6-7
# ::node	0.0.0.0	have-rel-role-91	16-17
# ::node	0.0.0.0.0	ancestor	16-17
# ::node	0.0.0.1	or	0-1
# ::node	0.0.0.1.0	perhaps	1-2
# ::node	0.0.0.1.1	mere	4-5
# ::root	0	pick-04
# ::edge	accident	domain	it	0.0.0	0.0	
# ::edge	have-rel-role-91	ARG1	accident	0.0.0.0	0.0.0	
# ::edge	have-rel-role-91	ARG2	ancestor	0.0.0.0	0.0.0.0.0	
# ::edge	or	op1	perhaps	0.0.0.1	0.0.0.1.0	
# ::edge	or	op2	mere	0.0.0.1	0.0.0.1.1	
# ::edge	or	op3	accident	0.0.0.1	0.0.0	
# ::edge	pick-04	ARG1	it	0	0.0	
(p / pick-04 
      :ARG1 (i / it 
            :domain-of (a2 / accident 
                  :ARG1-of (h / have-rel-role-91 
                        :ARG2 (a / ancestor)) 
                  :op-of (o / or 
                        :op1 (p2 / perhaps) 
                        :op2 (m / mere)))))

# ::snt but most important please decide today to give yourself the  financial protection of the midland personal accident plan
# ::tok but most important please decide today to give yourself the financial protection of the midland personal accident plan
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:18.484
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt what he refused to accept was why because of a disastrous historical and physical accident he should conceal his nature and reject or disguise as subject matter that which moved him most deeply
# ::tok what he refused to accept was why because of a disastrous historical and physical accident he should conceal his nature and reject or disguise as subject matter that which moved him most deeply
# ::alignments 32-33|0.1.1.0.0.0.0.0.1 31-32|0.1.1.0.0.0.0.0.0 29-30|0.1.1.0.0.0.0.0 26-27|0.1.1.1 25-26|0.1.1.2.0.0 23-24|0.1.1.2.0 22-23|0.1.1.2 21-22|0.1.1 20-21|0.1 19-20|0.1.1.0.2 17-18|0.1.1.0.1 16-17|0.1.0 15-16|0.1.1.0 14-15|0.0 13-14|0.0.0 12-13|0.1.1.0.1.0 11-12|0.1.1.0.1.0.0 10-11|0.0.1 7-8|0 4-5|0.1.1.0.0 2-3|0.1.1.0.0.0 1-2|0.1.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:18.771
# ::node	0	cause-01	7-8
# ::node	0.0	accident	14-15
# ::node	0.0.0	physical	13-14
# ::node	0.0.1	disastrous	10-11
# ::node	0.1	and	20-21
# ::node	0.1.0	recommend-01	16-17
# ::node	0.1.1	reject-01	21-22
# ::node	0.1.1.0	he	15-16
# ::node	0.1.1.0.0	accept-01	4-5
# ::node	0.1.1.0.0.0	refuse-01	2-3
# ::node	0.1.1.0.0.0.0	he	1-2
# ::node	0.1.1.0.0.0.0.0	move-01	29-30
# ::node	0.1.1.0.0.0.0.0.0	most	31-32
# ::node	0.1.1.0.0.0.0.0.1	deep	32-33
# ::node	0.1.1.0.1	conceal-01	17-18
# ::node	0.1.1.0.1.0	and	12-13
# ::node	0.1.1.0.1.0.0	history	11-12
# ::node	0.1.1.0.2	nature	19-20
# ::node	0.1.1.1	matter	26-27
# ::node	0.1.1.2	or	22-23
# ::node	0.1.1.2.0	disguise-01	23-24
# ::node	0.1.1.2.0.0	subject	25-26
# ::root	0	cause-01
# ::edge	accept-01	ARG0	he	0.1.1.0.0	0.1.1.0	
# ::edge	accident	mod	disastrous	0.0	0.0.1	
# ::edge	accident	mod	physical	0.0	0.0.0	
# ::edge	and	op1	cause-01	0.1	0	
# ::edge	and	op1	history	0.1.1.0.1.0	0.1.1.0.1.0.0	
# ::edge	and	op2	reject-01	0.1	0.1.1	
# ::edge	cause-01	ARG0	accident	0	0.0	
# ::edge	conceal-01	ARG0	he	0.1.1.0.1	0.1.1.0	
# ::edge	conceal-01	ARG1	and	0.1.1.0.1	0.1.1.0.1.0	
# ::edge	disguise-01	ARG1	subject	0.1.1.2.0	0.1.1.2.0.0	
# ::edge	move-01	ARG0	he	0.1.1.0.0.0.0.0	0.1.1.0.0.0.0	
# ::edge	move-01	ARG1	most	0.1.1.0.0.0.0.0	0.1.1.0.0.0.0.0.0	
# ::edge	move-01	ARG2	deep	0.1.1.0.0.0.0.0	0.1.1.0.0.0.0.0.1	
# ::edge	nature	poss	he	0.1.1.0.2	0.1.1.0	
# ::edge	or	op1	reject-01	0.1.1.2	0.1.1	
# ::edge	or	op2	disguise-01	0.1.1.2	0.1.1.2.0	
# ::edge	recommend-01	ARG1	and	0.1.0	0.1	
# ::edge	refuse-01	ARG0	he	0.1.1.0.0.0	0.1.1.0.0.0.0	
# ::edge	refuse-01	ARG1	accept-01	0.1.1.0.0.0	0.1.1.0.0	
# ::edge	reject-01	ARG0	he	0.1.1	0.1.1.0	
# ::edge	reject-01	ARG1	matter	0.1.1	0.1.1.1	
(c2 / cause-01 
      :ARG0 (a2 / accident 
            :mod (p / physical) 
            :mod (d3 / disastrous)) 
      :op-of (a / and 
            :ARG1-of (r2 / recommend-01) 
            :op1 (r / reject-01 
                  :ARG0 (h / he 
                        :ARG0-of (a4 / accept-01 
                              :ARG1-of (r3 / refuse-01 
                                    :ARG0 (h3 / he 
                                          :ARG0-of (m2 / move-01 
                                                :ARG1 (m / most) 
                                                :ARG2 (d / deep))))) 
                        :ARG0-of (c / conceal-01 
                              :ARG1 (a3 / and 
                                    :op1 (h2 / history))) 
                        :poss-of (n / nature)) 
                  :ARG1 (m3 / matter) 
                  :op-of (o / or 
                        :op1 (d2 / disguise-01 
                              :ARG1 (s / subject))))))

# ::snt the parisbonn axis is now so close that it is no accident that president gorbachev is coming to france barely two weeks after his triumphant visit to the federal republic
# ::tok the parisbonn axis is now so close that it is no accident that president gorbachev is coming to france barely two weeks after his triumphant visit to the federal republic
# ::alignments 29-30|0.0 28-29|0.0.0 25-26|0 22-23|0.1 21-22|0.1.0.2+0.1.0 20-21|0.1.0.1 19-20|0.1.0.0 18-19|0.1.1.1+0.1.1+0.1.1.0 13-14|0.1.1.0.0.1+0.1.1.0.0 11-12|0.1.1.0.0.0 10-11|0.1.1.0.0.0.1 8-9|0.1.1.0.0.0.0 5-6|0.2 4-5|0.3 2-3|0.4 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:19.009
# ::node	0	visit-01	25-26
# ::node	0.0	republic	29-30
# ::node	0.0.0	federal	28-29
# ::node	0.1	after	22-23
# ::node	0.1.0	temporal-quantity	21-22
# ::node	0.1.0.0	barely	19-20
# ::node	0.1.0.1	2	20-21
# ::node	0.1.0.2	week	21-22
# ::node	0.1.1	name	18-19
# ::node	0.1.1.0	country	18-19
# ::node	0.1.1.0.0	have-org-role-91	13-14
# ::node	0.1.1.0.0.0	accident	11-12
# ::node	0.1.1.0.0.0.0	it	8-9
# ::node	0.1.1.0.0.0.1	-	10-11
# ::node	0.1.1.0.0.1	president	13-14
# ::node	0.1.1.1	"France"	18-19
# ::node	0.2	so	5-6
# ::node	0.3	now	4-5
# ::node	0.4	axis	2-3
# ::root	0	visit-01
# ::edge	accident	domain	it	0.1.1.0.0.0	0.1.1.0.0.0.0	
# ::edge	accident	polarity	-	0.1.1.0.0.0	0.1.1.0.0.0.1	
# ::edge	after	op1	visit-01	0.1	0	
# ::edge	after	quant	temporal-quantity	0.1	0.1.0	
# ::edge	axis	op1	visit-01	0.4	0	
# ::edge	barely	op1	temporal-quantity	0.1.0.0	0.1.0	
# ::edge	country	name	name	0.1.1.0	0.1.1	
# ::edge	have-org-role-91	ARG0	accident	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	have-org-role-91	ARG1	country	0.1.1.0.0	0.1.1.0	
# ::edge	have-org-role-91	ARG2	president	0.1.1.0.0	0.1.1.0.0.1	
# ::edge	name	op1	"France"	0.1.1	0.1.1.1	
# ::edge	name	time	after	0.1.1	0.1	
# ::edge	now	op1	visit-01	0.3	0	
# ::edge	republic	mod	federal	0.0	0.0.0	
# ::edge	so	op1	visit-01	0.2	0	
# ::edge	temporal-quantity	quant	2	0.1.0	0.1.0.1	
# ::edge	temporal-quantity	unit	week	0.1.0	0.1.0.2	
# ::edge	visit-01	ARG1	republic	0	0.0	
(v / visit-01 
      :ARG1 (r / republic 
            :mod (f / federal)) 
      :op-of (a / after 
            :quant (t / temporal-quantity 
                  :op-of (b / barely) 
                  :quant 2 
                  :unit (w / week)) 
            :time-of (n / name 
                  :name-of (c / country 
                        :ARG1-of (h / have-org-role-91 
                              :ARG0 (a2 / accident 
                                    :domain (i / it) 
                                    :polarity (- / -)) 
                              :ARG2 (p / president))) 
                  :op1 "France")) 
      :op-of (s / so) 
      :op-of (n2 / now) 
      :op-of (a3 / axis))

# ::snt a young couple have expressed their horror at an accident which left a policeman fighting for his life after their dogs ran out into the road
# ::tok a young couple have expressed their horror at an accident which left a policeman fighting for his life after their dogs ran out into the road
# ::alignments 25-26|0.2 20-21|0.1.0.0.0 18-19|0.1.0.2 17-18|0.1.0.1 14-15|0.1.0 13-14|0.1.0.0 9-10|0.1 6-7|0.0 4-5|0 2-3|0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:19.213
# ::node	0	express-01	4-5
# ::node	0.0	horror	6-7
# ::node	0.0.0	couple	2-3
# ::node	0.0.0.0	young	1-2
# ::node	0.1	accident	9-10
# ::node	0.1.0	fight-01	14-15
# ::node	0.1.0.0	policeman	13-14
# ::node	0.1.0.0.0	dog	20-21
# ::node	0.1.0.1	life	17-18
# ::node	0.1.0.2	after	18-19
# ::node	0.2	road	25-26
# ::root	0	express-01
# ::edge	couple	mod	young	0.0.0	0.0.0.0	
# ::edge	express-01	ARG1	horror	0	0.0	
# ::edge	express-01	manner	accident	0	0.1	
# ::edge	fight-01	ARG0	accident	0.1.0	0.1	
# ::edge	fight-01	ARG1	policeman	0.1.0	0.1.0.0	
# ::edge	fight-01	ARG2	life	0.1.0	0.1.0.1	
# ::edge	fight-01	time	after	0.1.0	0.1.0.2	
# ::edge	horror	poss	couple	0.0	0.0.0	
# ::edge	policeman	purpose	dog	0.1.0.0	0.1.0.0.0	
# ::edge	road	op1	express-01	0.2	0	
(e / express-01 
      :ARG1 (h / horror 
            :poss (c / couple 
                  :mod (y / young))) 
      :manner (a2 / accident 
            :ARG0-of (f / fight-01 
                  :ARG1 (p / policeman 
                        :purpose (d / dog)) 
                  :ARG2 (l / life) 
                  :time (a / after))) 
      :op-of (r / road))

# ::snt for a while he manages to squeeze both women into his life until an accident on a school barge with jo in charge shows tom that his wife in not completely impregnable
# ::tok for a while he manages to squeeze both women into his life until an accident on a school barge with jo in charge shows tom that his wife in not completely impregnable
# ::alignments 30-31|0.0.1.0 27-28|0.0.1.1+0.0.1 23-24|0 17-18|0.0.2 14-15|0.0.4 12-13|0.0.0.1 11-12|0.0.3 8-9|0.0.0.0 7-8|0.0.0.0.0 6-7|0.0.0 3-4|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:19.343
# ::node	0	show-01	23-24
# ::node	0.0	he	3-4
# ::node	0.0.0	squeeze-01	6-7
# ::node	0.0.0.0	woman	8-9
# ::node	0.0.0.0.0	both	7-8
# ::node	0.0.0.1	until	12-13
# ::node	0.0.1	have-rel-role-91	27-28
# ::node	0.0.1.0	complete	30-31
# ::node	0.0.1.1	wife	27-28
# ::node	0.0.2	school	17-18
# ::node	0.0.3	life	11-12
# ::node	0.0.4	accident	14-15
# ::root	0	show-01
# ::edge	accident	poss	he	0.0.4	0.0	
# ::edge	have-rel-role-91	ARG0	complete	0.0.1	0.0.1.0	
# ::edge	have-rel-role-91	ARG1	he	0.0.1	0.0	
# ::edge	have-rel-role-91	ARG2	wife	0.0.1	0.0.1.1	
# ::edge	life	poss	he	0.0.3	0.0	
# ::edge	school	poss	he	0.0.2	0.0	
# ::edge	show-01	ARG0	he	0	0.0	
# ::edge	squeeze-01	ARG0	he	0.0.0	0.0	
# ::edge	squeeze-01	ARG1	woman	0.0.0	0.0.0.0	
# ::edge	squeeze-01	time	until	0.0.0	0.0.0.1	
# ::edge	woman	mod	both	0.0.0.0	0.0.0.0.0	
(s / show-01 
      :ARG0 (h2 / he 
            :ARG0-of (s3 / squeeze-01 
                  :ARG1 (w2 / woman 
                        :mod (b / both)) 
                  :time (u / until)) 
            :ARG1-of (h / have-rel-role-91 
                  :ARG0 (c / complete) 
                  :ARG2 (w / wife)) 
            :poss-of (s2 / school) 
            :poss-of (l / life) 
            :poss-of (a / accident)))

# ::snt the connection between employees health and such business policies as accident preparedness and the use of chemicals like pesticides in the workplace is clear, as the wftu general council pointed out at its october 1988 meeting neither accidents nor pollution are inevitable they can be foreseen and avoided by taking measures in factories and workplaces
# ::tok the connection between employees health and such business policies as accident preparedness and the use of chemicals like pesticides in the workplace is clear , as the wftu general council pointed out at its october 1988 meeting neither accidents nor pollution are inevitable they can be foreseen and avoided by taking measures in factories and workplaces
# ::alignments 54-55|0.3.0.0 53-54|0.3.0.0.1 51-52|0.3.0.0.0 48-49|0.3.0.1 47-48|0.3.0 44-45|0.3 43-44|0.3.0.1.0 42-43|0 40-41|0.1 38-39|0.2 36-37|0.0 34-36|0.0.0.1+0.0.0.0+0.0.0 30-31|0.0.1 29-30|0.0.1.0 28-29|0.0.1.0.0 23-24|0.0.1.2 21-22|0.0.1.1.0.1 16-17|0.0.1.1.1.1.1.0 14-15|0.0.1.1.1.1.1 12-13|0.0.1.1.1.1 11-12|0.0.1.1.1.1.0 10-11|0.0.1.1.1.1.0.0 8-9|0.0.1.1.1 7-8|0.0.1.1.1.2 6-7|0.0.1.1.1.0 5-6|0.0.1.1 4-5|0.0.1.1.0.0.0 3-4|0.0.1.1.0.0.0.0.0+0.0.1.1.0.0.0.0 2-3|0.0.1.1.0.0 1-2|0.0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:20.026
# ::node	0	inevitable	42-43
# ::node	0.0	meet-03	36-37
# ::node	0.0.0	date-entity	34-36
# ::node	0.0.0.0	10	34-36
# ::node	0.0.0.1	1988	34-36
# ::node	0.0.1	point-02	30-31
# ::node	0.0.1.0	council	29-30
# ::node	0.0.1.0.0	general	28-29
# ::node	0.0.1.1	and	5-6
# ::node	0.0.1.1.0	connect-01	1-2
# ::node	0.0.1.1.0.0	between	2-3
# ::node	0.0.1.1.0.0.0	health	4-5
# ::node	0.0.1.1.0.0.0.0	person	3-4
# ::node	0.0.1.1.0.0.0.0.0	employ-01	3-4
# ::node	0.0.1.1.0.1	workplace	21-22
# ::node	0.0.1.1.1	policy	8-9
# ::node	0.0.1.1.1.0	such	6-7
# ::node	0.0.1.1.1.1	and	12-13
# ::node	0.0.1.1.1.1.0	prepare-02	11-12
# ::node	0.0.1.1.1.1.0.0	accident	10-11
# ::node	0.0.1.1.1.1.1	use-01	14-15
# ::node	0.0.1.1.1.1.1.0	chemical	16-17
# ::node	0.0.1.1.1.2	business	7-8
# ::node	0.0.1.2	clear	23-24
# ::node	0.1	pollute-01	40-41
# ::node	0.2	accident	38-39
# ::node	0.3	possible	44-45
# ::node	0.3.0	and	47-48
# ::node	0.3.0.0	and	54-55
# ::node	0.3.0.0.0	measure	51-52
# ::node	0.3.0.0.1	factory	53-54
# ::node	0.3.0.1	avoid-01	48-49
# ::node	0.3.0.1.0	they	43-44
# ::root	0	inevitable
# ::edge	and	op1	and	0.3.0.0	0.3.0	
# ::edge	and	op1	avoid-01	0.3.0	0.3.0.1	
# ::edge	and	op1	policy	0.0.1.1	0.0.1.1.1	
# ::edge	and	op1	policy	0.0.1.1.1.1	0.0.1.1.1	
# ::edge	and	op2	measure	0.3.0.0	0.3.0.0.0	
# ::edge	and	op2	prepare-02	0.0.1.1.1.1	0.0.1.1.1.1.0	
# ::edge	and	op3	factory	0.3.0.0	0.3.0.0.1	
# ::edge	and	op3	use-01	0.0.1.1.1.1	0.0.1.1.1.1.1	
# ::edge	avoid-01	ARG1	they	0.3.0.1	0.3.0.1.0	
# ::edge	between	op1	health	0.0.1.1.0.0	0.0.1.1.0.0.0	
# ::edge	clear	topic	point-02	0.0.1.2	0.0.1	
# ::edge	connect-01	ARG1	and	0.0.1.1.0	0.0.1.1	
# ::edge	connect-01	location	between	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	connect-01	time	workplace	0.0.1.1.0	0.0.1.1.0.1	
# ::edge	council	mod	general	0.0.1.0	0.0.1.0.0	
# ::edge	date-entity	month	10	0.0.0	0.0.0.0	
# ::edge	date-entity	year	1988	0.0.0	0.0.0.1	
# ::edge	employ-01	ARG1	person	0.0.1.1.0.0.0.0.0	0.0.1.1.0.0.0.0	
# ::edge	health	mod	person	0.0.1.1.0.0.0	0.0.1.1.0.0.0.0	
# ::edge	inevitable	domain	accident	0	0.2	
# ::edge	inevitable	domain	pollute-01	0	0.1	
# ::edge	inevitable	mod	possible	0	0.3	
# ::edge	meet-03	ARG0	inevitable	0.0	0	
# ::edge	meet-03	time	date-entity	0.0	0.0.0	
# ::edge	point-02	ARG0	council	0.0.1	0.0.1.0	
# ::edge	point-02	ARG1	and	0.0.1	0.0.1.1	
# ::edge	point-02	time	meet-03	0.0.1	0.0	
# ::edge	policy	mod	such	0.0.1.1.1	0.0.1.1.1.0	
# ::edge	policy	topic	business	0.0.1.1.1	0.0.1.1.1.2	
# ::edge	possible	domain	and	0.3	0.3.0	
# ::edge	prepare-02	ARG1	accident	0.0.1.1.1.1.0	0.0.1.1.1.1.0.0	
# ::edge	use-01	ARG1	chemical	0.0.1.1.1.1.1	0.0.1.1.1.1.1.0	
(i / inevitable 
      :ARG0-of (m2 / meet-03 
            :time (d / date-entity 
                  :month 10 
                  :year 1988) 
            :time-of (p3 / point-02 
                  :ARG0 (c / council 
                        :mod (g / general)) 
                  :ARG1 (a7 / and 
                        :ARG1-of (c4 / connect-01 
                              :location (b2 / between 
                                    :op1 (h / health 
                                          :mod (p6 / person 
                                                :ARG1-of (e / employ-01)))) 
                              :time (w / workplace)) 
                        :op1 (p5 / policy 
                              :mod (s / such) 
                              :op-of (a5 / and 
                                    :op1 (p4 / prepare-02 
                                          :ARG1 (a6 / accident)) 
                                    :op2 (u / use-01 
                                          :ARG1 (c3 / chemical))) 
                              :topic (b / business))) 
                  :topic-of (c2 / clear))) 
      :domain (p2 / pollute-01) 
      :domain (a4 / accident) 
      :mod (p / possible 
            :domain (a3 / and 
                  :op-of (a / and 
                        :op1 (m / measure) 
                        :op2 (f / factory)) 
                  :op1 (a2 / avoid-01 
                        :ARG1 (t / they)))))

# ::snt the mere accident of having a benefit is rarely thought a sufficient ground of title to it
# ::tok the mere accident of having a benefit is rarely thought a sufficient ground of title to it
# ::alignments 16-17|0.1.0 14-15|0.1 12-13|0.2.0 11-12|0.2.0.0 9-10|0.2 8-9|0.2.1 6-7|0 2-3|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:20.162
# ::node	0	benefit-01	6-7
# ::node	0.0	accident	2-3
# ::node	0.0.0	mere	1-2
# ::node	0.1	title	14-15
# ::node	0.1.0	it	16-17
# ::node	0.2	think-01	9-10
# ::node	0.2.0	ground	12-13
# ::node	0.2.0.0	suffice-01	11-12
# ::node	0.2.1	rare	8-9
# ::root	0	benefit-01
# ::edge	accident	mod	mere	0.0	0.0.0	
# ::edge	benefit-01	ARG0	accident	0	0.0	
# ::edge	benefit-01	ARG1	title	0	0.1	
# ::edge	suffice-01	ARG0	ground	0.2.0.0	0.2.0	
# ::edge	think-01	ARG1	ground	0.2	0.2.0	
# ::edge	think-01	frequency	rare	0.2	0.2.1	
# ::edge	think-01	time	benefit-01	0.2	0	
# ::edge	title	prep-to	it	0.1	0.1.0	
(b / benefit-01 
      :ARG0 (a / accident 
            :mod (m / mere)) 
      :ARG1 (t / title 
            :prep-to (i / it)) 
      :time-of (t2 / think-01 
            :ARG1 (g / ground 
                  :ARG0-of (s / suffice-01)) 
            :frequency (r / rare)))

# ::snt delayed by the challenger accident and budgetary problems it is americas first major space mission after voyager and galileo will also be the first spacecraft to send a probe down on to jupiter
# ::tok delayed by the challenger accident and budgetary problems it is americas first major space mission after voyager and galileo will also be the first spacecraft to send a probe down on to jupiter
# ::alignments 29-30|0.0.0.0 28-29|0.0.0 26-27|0.0 24-25|0 20-21|0.0.2 17-18|0.0.1.0.0.1.0.1 15-16|0.0.1.0.0.1.0.1.0 14-15|0.0.1.0.0.1.0 13-14|0.0.1.0.0.1 12-13|0.0.1.0.0.1.0.0 8-9|0.0.1.0.0.0 7-8|0.0.1.0.0.0.0 6-7|0.0.1.0.0.0.0.0 5-6|0.0.1 4-5|0.0.1.0.0 0-1|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:20.377
# ::node	0	spacecraft	24-25
# ::node	0.0	send-01	26-27
# ::node	0.0.0	probe-01	28-29
# ::node	0.0.0.0	down	29-30
# ::node	0.0.1	and	5-6
# ::node	0.0.1.0	delay-01	0-1
# ::node	0.0.1.0.0	accident	4-5
# ::node	0.0.1.0.0.0	it	8-9
# ::node	0.0.1.0.0.0.0	problem	7-8
# ::node	0.0.1.0.0.0.0.0	budget-01	6-7
# ::node	0.0.1.0.0.1	space	13-14
# ::node	0.0.1.0.0.1.0	mission	14-15
# ::node	0.0.1.0.0.1.0.0	major	12-13
# ::node	0.0.1.0.0.1.0.1	and	17-18
# ::node	0.0.1.0.0.1.0.1.0	after	15-16
# ::node	0.0.2	also	20-21
# ::root	0	spacecraft
# ::edge	accident	op1	it	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	accident	poss	space	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	after	op1	and	0.0.1.0.0.1.0.1.0	0.0.1.0.0.1.0.1	
# ::edge	and	op1	mission	0.0.1.0.0.1.0.1	0.0.1.0.0.1.0	
# ::edge	and	op1	send-01	0.0.1	0.0	
# ::edge	budget-01	ARG1	problem	0.0.1.0.0.0.0.0	0.0.1.0.0.0.0	
# ::edge	delay-01	ARG0	accident	0.0.1.0	0.0.1.0.0	
# ::edge	delay-01	ARG1	and	0.0.1.0	0.0.1	
# ::edge	mission	mod	major	0.0.1.0.0.1.0	0.0.1.0.0.1.0.0	
# ::edge	mission	mod	space	0.0.1.0.0.1.0	0.0.1.0.0.1	
# ::edge	probe-01	ARG1	down	0.0.0	0.0.0.0	
# ::edge	problem	domain	it	0.0.1.0.0.0.0	0.0.1.0.0.0	
# ::edge	send-01	ARG1	probe-01	0.0	0.0.0	
# ::edge	send-01	time	also	0.0	0.0.2	
# ::edge	spacecraft	purpose	send-01	0	0.0	
(s2 / spacecraft 
      :purpose (s / send-01 
            :ARG1 (p / probe-01 
                  :ARG1 (d / down)) 
            :op-of (a4 / and 
                  :ARG1-of (d2 / delay-01 
                        :ARG0 (a5 / accident 
                              :op1 (i / it 
                                    :domain-of (p2 / problem 
                                          :ARG1-of (b / budget-01))) 
                              :poss (s3 / space 
                                    :mod-of (m / mission 
                                          :mod (m2 / major) 
                                          :op-of (a2 / and 
                                                :op-of (a3 / after))))))) 
            :time (a / also)))

# ::snt it finds for example the male drivers up to 20 years old have seven times more accidents per million kilometres driven than men in their fifties
# ::tok it finds for example the male drivers up to 20 years old have seven times more accidents per million kilometres driven than men in their fifties
# ::alignments 22-23|0.0 20-21|0 19-20|0.1.0+0.1 16-17|0.2 13-14|0.2.0.2 11-12|0.0.0 10-11|0.0.0.0.1+0.0.0.0 9-10|0.0.0.0.0 6-7|0.2.0.0.0+0.2.0.0.0.0 5-6|0.3 3-4|0.2.0.1 1-2|0.2.0 0-1|0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:20.674
# ::node	0	drive-02	20-21
# ::node	0.0	man	22-23
# ::node	0.0.0	old	11-12
# ::node	0.0.0.0	temporal-quantity	10-11
# ::node	0.0.0.0.0	20	9-10
# ::node	0.0.0.0.1	year	10-11
# ::node	0.1	distance-quantity	19-20
# ::node	0.1.0	kilometer	19-20
# ::node	0.2	accident	16-17
# ::node	0.2.0	find-01	1-2
# ::node	0.2.0.0	it	0-1
# ::node	0.2.0.0.0	drive-01	6-7
# ::node	0.2.0.0.0.0	person	6-7
# ::node	0.2.0.1	example	3-4
# ::node	0.2.0.2	7	13-14
# ::node	0.3	male	5-6
# ::root	0	drive-02
# ::edge	7	op1	find-01	0.2.0.2	0.2.0	
# ::edge	distance-quantity	unit	kilometer	0.1	0.1.0	
# ::edge	drive-01	ARG0	person	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	drive-01	ARG1	it	0.2.0.0.0	0.2.0.0	
# ::edge	drive-02	ARG0	man	0	0.0	
# ::edge	drive-02	ARG1	distance-quantity	0	0.1	
# ::edge	drive-02	consist	accident	0	0.2	
# ::edge	find-01	ARG0	it	0.2.0	0.2.0.0	
# ::edge	find-01	ARG1	accident	0.2.0	0.2	
# ::edge	find-01	location	example	0.2.0	0.2.0.1	
# ::edge	male	op1	drive-02	0.3	0	
# ::edge	man	mod	old	0.0	0.0.0	
# ::edge	old	domain	temporal-quantity	0.0.0	0.0.0.0	
# ::edge	temporal-quantity	quant	20	0.0.0.0	0.0.0.0.0	
# ::edge	temporal-quantity	unit	year	0.0.0.0	0.0.0.0.1	
(d / drive-02 
      :ARG0 (m / man 
            :mod (o / old 
                  :domain (t / temporal-quantity 
                        :quant 20 
                        :unit (y / year)))) 
      :ARG1 (d2 / distance-quantity 
            :unit (k / kilometer)) 
      :consist (a / accident 
            :ARG1-of (f / find-01 
                  :ARG0 (i / it 
                        :ARG1-of (d3 / drive-01 
                              :ARG0 (p / person))) 
                  :location (e / example) 
                  :op-of 7)) 
      :op-of (m2 / male))

# ::snt mr george starrett 58 who had been released from hospital only days earlier after a road accident was on crutches when a gunman opened fire outside his kitchen window
# ::tok mr george starrett 58 who had been released from hospital only days earlier after a road accident was on crutches when a gunman opened fire outside his kitchen window
# ::alignments 28-29|0 25-26|0.0 23-24|0.0.0 16-17|0.0.0.0 15-16|0.0.0.0.0 13-14|0.0.0.0.0.0.0.1 12-13|0.0.0.0.0.0 11-12|0.0.0.0.0.0.1.1+0.0.0.0.0.0.1 10-11|0.0.0.0.0.0.1.0 9-10|0.0.0.0.0.0.0.0 7-8|0.0.0.0.0.0.0 3-4|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:20.830
# ::node	0	window	28-29
# ::node	0.0	outside	25-26
# ::node	0.0.0	open-01	23-24
# ::node	0.0.0.0	accident	16-17
# ::node	0.0.0.0.0	road	15-16
# ::node	0.0.0.0.0.0	early	12-13
# ::node	0.0.0.0.0.0.0	release-01	7-8
# ::node	0.0.0.0.0.0.0.0	hospital	9-10
# ::node	0.0.0.0.0.0.0.1	after	13-14
# ::node	0.0.0.0.0.0.1	temporal-quantity	11-12
# ::node	0.0.0.0.0.0.1.0	only	10-11
# ::node	0.0.0.0.0.0.1.1	day	11-12
# ::node	0.0.0.1	58	3-4
# ::root	0	window
(w / window 
      :op-of (o / outside 
            :location-of (o2 / open-01 
                  :ARG0 (a / accident 
                        :location (r / road 
                              :op-of (e / early 
                                    :ARG0-of (r2 / release-01 
                                          :ARG2 (h / hospital) 
                                          :time (a2 / after)) 
                                    :quant (t / temporal-quantity 
                                          :mod (o3 / only) 
                                          :unit (d / day))))) 
                  :ARG1 58)))

# ::snt and not by accident
# ::tok and not by accident
# ::alignments 3-4|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:20.834
# ::node	0	and	0-1
# ::node	0.0	accident	3-4
# ::root	0	and
# ::edge	and	op1	accident	0	0.0	
(a2 / and 
      :op1 (a / accident))

# ::snt  he adds unfortunately our society allows a certain amount of failure such as accidents before it will respond
# ::tok he adds unfortunately our society allows a certain amount of failure such as accidents before it will respond
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:20.834
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt a number of accidents also occurred on the m25 in surrey between junctions 9 and 11 with thick fog affecting junction 10 according to the aa, as the emergency services attempted to cope with the accidents berkshire ambulance service said another crash had happened on the eastbound carriageway
# ::tok a number of accidents also occurred on the m25 in surrey between junctions 9 and 11 with thick fog affecting junction 10 according to the aa , as the emergency services attempted to cope with the accidents berkshire ambulance service said another crash had happened on the eastbound carriageway
# ::alignments 44-45|0.1 42-43|0.1.1 41-42|0.1.1.2 40-41|0 38-39|0.1.0.0.0.2 36-37|0.1.1.1 33-34|0.1.0.0.0 31-32|0.1.0.0 30-31|0.1.0 29-30|0.1.0.1 21-22|0.2.0 19-20|0.2 17-18|0.0 15-16|0.1.0.0.0.1 14-15|0.1.0.0.1 13-14|0.1.0.0.0.0 11-12|0.1.0.0.1.0 4-5|0.1.1.0.0 3-4|0.1.1.0.1 1-2|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:21.242
# ::node	0	say-01	40-41
# ::node	0.0	thick	17-18
# ::node	0.1	happen-01	44-45
# ::node	0.1.0	service	30-31
# ::node	0.1.0.0	attempt-01	31-32
# ::node	0.1.0.0.0	cope-01	33-34
# ::node	0.1.0.0.0.0	9	13-14
# ::node	0.1.0.0.0.1	11	15-16
# ::node	0.1.0.0.0.2	ambulance	38-39
# ::node	0.1.0.0.1	and	14-15
# ::node	0.1.0.0.1.0	between	11-12
# ::node	0.1.0.1	emergency	29-30
# ::node	0.1.1	crash-01	42-43
# ::node	0.1.1.0	number	1-2
# ::node	0.1.1.0.0	also	4-5
# ::node	0.1.1.0.1	accident	3-4
# ::node	0.1.1.1	accident	36-37
# ::node	0.1.1.2	another	41-42
# ::node	0.2	affect-01	19-20
# ::node	0.2.0	10	21-22
# ::root	0	say-01
# ::edge	accident	quant	number	0.1.1.0.1	0.1.1.0	
# ::edge	affect-01	ARG1	10	0.2	0.2.0	
# ::edge	and	op1	between	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	and	op2	attempt-01	0.1.0.0.1	0.1.0.0	
# ::edge	attempt-01	ARG0	service	0.1.0.0	0.1.0	
# ::edge	attempt-01	ARG1	cope-01	0.1.0.0	0.1.0.0.0	
# ::edge	cope-01	ARG0	9	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	cope-01	ARG1	11	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	cope-01	ARG2	ambulance	0.1.0.0.0	0.1.0.0.0.2	
# ::edge	crash-01	ARG0	number	0.1.1	0.1.1.0	
# ::edge	crash-01	ARG1	accident	0.1.1	0.1.1.1	
# ::edge	crash-01	mod	another	0.1.1	0.1.1.2	
# ::edge	happen-01	ARG0	service	0.1	0.1.0	
# ::edge	happen-01	ARG1	crash-01	0.1	0.1.1	
# ::edge	number	location	also	0.1.1.0	0.1.1.0.0	
# ::edge	say-01	ARG0	thick	0	0.0	
# ::edge	say-01	ARG1	happen-01	0	0.1	
# ::edge	say-01	ARG2	affect-01	0	0.2	
# ::edge	service	mod	emergency	0.1.0	0.1.0.1	
(s / say-01 
      :ARG0 (t / thick) 
      :ARG1 (h / happen-01 
            :ARG0 (s2 / service 
                  :ARG0-of (a4 / attempt-01 
                        :ARG1 (c2 / cope-01 
                              :ARG0 9 
                              :ARG1 11 
                              :ARG2 (a2 / ambulance)) 
                        :op-of (a6 / and 
                              :op1 (b / between))) 
                  :mod (e / emergency)) 
            :ARG1 (c / crash-01 
                  :ARG0 (n / number 
                        :location (a7 / also) 
                        :quant-of (a8 / accident)) 
                  :ARG1 (a3 / accident) 
                  :mod (a / another))) 
      :ARG2 (a5 / affect-01 
            :ARG1 10))

# ::snt when he inspected the platform after the accident he discovered seven boards were missing
# ::tok when he inspected the platform after the accident he discovered seven boards were missing
# ::alignments 13-14|0 10-11|0.0.0.0.0.0.1.0 9-10|0.0.0 8-9|0.0 7-8|0.0.0.0 5-6|0.0.0.0.0 4-5|0.0.0.0.0.0.1 2-3|0.0.0.0.0.0 1-2|0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:21.365
# ::node	0	miss-01	13-14
# ::node	0.0	he	8-9
# ::node	0.0.0	discover-01	9-10
# ::node	0.0.0.0	accident	7-8
# ::node	0.0.0.0.0	after	5-6
# ::node	0.0.0.0.0.0	inspect-01	2-3
# ::node	0.0.0.0.0.0.0	he	1-2
# ::node	0.0.0.0.0.0.1	platform	4-5
# ::node	0.0.0.0.0.0.1.0	7	10-11
# ::root	0	miss-01
# ::edge	after	op1	accident	0.0.0.0.0	0.0.0.0	
# ::edge	discover-01	ARG0	he	0.0.0	0.0	
# ::edge	discover-01	ARG1	accident	0.0.0	0.0.0.0	
# ::edge	inspect-01	ARG0	he	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	inspect-01	ARG1	platform	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	inspect-01	time	after	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	miss-01	ARG0	he	0	0.0	
# ::edge	platform	quant	7	0.0.0.0.0.0.1	0.0.0.0.0.0.1.0	
(m / miss-01 
      :ARG0 (h / he 
            :ARG0-of (d / discover-01 
                  :ARG1 (a / accident 
                        :op-of (a2 / after 
                              :time-of (i / inspect-01 
                                    :ARG0 (h2 / he) 
                                    :ARG1 (p / platform 
                                          :quant 7)))))))

# ::snt but members of the public worried by noise or fear of accidents often do not believe that the raf is obeying its own rules
# ::tok but members of the public worried by noise or fear of accidents often do not believe that the raf is obeying its own rules
# ::alignments 23-24|0.0.0.1.0.0.0 15-16|0.0.0.1.0.0 12-13|0.0.0.1.0.0.1 11-12|0.0.0.1.0 9-10|0.0.0.1 8-9|0.0.0 7-8|0.0.0.0 5-6|0.0 4-5|0.1.0 1-2|0.1.1+0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:21.422
# ::node	0	contrast-01	0-1
# ::node	0.0	worry-02	5-6
# ::node	0.0.0	or	8-9
# ::node	0.0.0.0	noise	7-8
# ::node	0.0.0.1	fear-01	9-10
# ::node	0.0.0.1.0	accident	11-12
# ::node	0.0.0.1.0.0	believe-01	15-16
# ::node	0.0.0.1.0.0.0	rule	23-24
# ::node	0.0.0.1.0.0.1	often	12-13
# ::node	0.1	have-org-role-91	1-2
# ::node	0.1.0	public	4-5
# ::node	0.1.1	member	1-2
# ::root	0	contrast-01
# ::edge	believe-01	ARG0	accident	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	believe-01	ARG1	rule	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	believe-01	degree	often	0.0.0.1.0.0	0.0.0.1.0.0.1	
# ::edge	contrast-01	ARG1	worry-02	0	0.0	
# ::edge	contrast-01	ARG2	have-org-role-91	0	0.1	
# ::edge	fear-01	ARG1	accident	0.0.0.1	0.0.0.1.0	
# ::edge	have-org-role-91	ARG1	public	0.1	0.1.0	
# ::edge	have-org-role-91	ARG2	member	0.1	0.1.1	
# ::edge	or	op1	noise	0.0.0	0.0.0.0	
# ::edge	or	op2	fear-01	0.0.0	0.0.0.1	
# ::edge	worry-02	ARG2	or	0.0	0.0.0	
(c / contrast-01 
      :ARG1 (w / worry-02 
            :ARG2 (o2 / or 
                  :op1 (n / noise) 
                  :op2 (f / fear-01 
                        :ARG1 (a / accident 
                              :ARG0-of (b / believe-01 
                                    :ARG1 (r / rule) 
                                    :degree (o / often)))))) 
      :ARG2 (h / have-org-role-91 
            :ARG1 (p / public) 
            :ARG2 (m / member)))

# ::snt  when i started to research this book i encountered numerous people who had not only caught one but a number of these fish by accident over the years he says
# ::tok when i started to research this book i encountered numerous people who had not only caught one but a number of these fish by accident over the years he says
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:21.423
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt a serious accident
# ::tok a serious accident
# ::alignments 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:21.426
# ::node	0	accident	2-3
# ::node	0.0	serious	1-2
# ::root	0	accident
# ::edge	accident	mod	serious	0	0.0	
(a / accident 
      :mod (s / serious))

# ::snt mrs jill rawlings 55 of frog lane upper boddington northamptonshire died later the same day in the john radcliffe hospital oxford from severe head injuries after the accident which happened on october 26 on the a423 north of banbury
# ::tok mrs jill rawlings 55 of frog lane upper boddington northamptonshire died later the same day in the john radcliffe hospital oxford from severe head injuries after the accident which happened on october 26 on the a423 north of banbury
# ::alignments 36-37|0.1.2.0.0.2 32-33|0.1.2.0.0.1.1.0.0 31-32|0.1.2.0.0.1.0+0.1.2.0.0.1 29-30|0.1.2.0.0 27-28|0.1.2.0 25-26|0.1.2 24-25|0.1 23-24|0 22-23|0.1.1 19-20|0.0 17-19|0.0.0.0.0+0.0.0.0.1+0.0.0.0+0.0.0 14-15|0.1.2.0.0.1.1.0.1 13-14|0.1.2.0.0.1.1.0.1.0 11-12|0.1.2.0.0.1.1 10-11|0.1.2.0.0.1.1.0 7-8|0.1.2.0.0.0 3-4|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:21.668
# ::node	0	head-01	23-24
# ::node	0.0	hospital	19-20
# ::node	0.0.0	country	17-19
# ::node	0.0.0.0	name	17-19
# ::node	0.0.0.0.0	"radcliffe"	17-19
# ::node	0.0.0.0.1	"john"	17-19
# ::node	0.1	injure-01	24-25
# ::node	0.1.0	55	3-4
# ::node	0.1.1	severe	22-23
# ::node	0.1.2	after	25-26
# ::node	0.1.2.0	accident	27-28
# ::node	0.1.2.0.0	happen-01	29-30
# ::node	0.1.2.0.0.0	upper	7-8
# ::node	0.1.2.0.0.1	date-entity	31-32
# ::node	0.1.2.0.0.1.0	10	31-32
# ::node	0.1.2.0.0.1.1	late	11-12
# ::node	0.1.2.0.0.1.1.0	die-01	10-11
# ::node	0.1.2.0.0.1.1.0.0	26	32-33
# ::node	0.1.2.0.0.1.1.0.1	day	14-15
# ::node	0.1.2.0.0.1.1.0.1.0	same-41	13-14
# ::node	0.1.2.0.0.2	north	36-37
# ::root	0	head-01
# ::edge	after	op1	accident	0.1.2	0.1.2.0	
# ::edge	country	name	name	0.0.0	0.0.0.0	
# ::edge	date-entity	month	10	0.1.2.0.0.1	0.1.2.0.0.1.0	
# ::edge	die-01	ARG0	26	0.1.2.0.0.1.1.0	0.1.2.0.0.1.1.0.0	
# ::edge	die-01	ARG1	late	0.1.2.0.0.1.1.0	0.1.2.0.0.1.1	
# ::edge	die-01	time	day	0.1.2.0.0.1.1.0	0.1.2.0.0.1.1.0.1	
# ::edge	happen-01	ARG0	accident	0.1.2.0.0	0.1.2.0	
# ::edge	happen-01	ARG1	upper	0.1.2.0.0	0.1.2.0.0.0	
# ::edge	happen-01	time	date-entity	0.1.2.0.0	0.1.2.0.0.1	
# ::edge	happen-01	time	north	0.1.2.0.0	0.1.2.0.0.2	
# ::edge	head-01	ARG0	hospital	0	0.0	
# ::edge	hospital	mod	country	0.0	0.0.0	
# ::edge	injure-01	ARG0	55	0.1	0.1.0	
# ::edge	injure-01	ARG1	head-01	0.1	0	
# ::edge	injure-01	mod	severe	0.1	0.1.1	
# ::edge	injure-01	time	after	0.1	0.1.2	
# ::edge	late	op1	date-entity	0.1.2.0.0.1.1	0.1.2.0.0.1	
# ::edge	name	op1	"radcliffe"	0.0.0.0	0.0.0.0.0	
# ::edge	name	op2	"john"	0.0.0.0	0.0.0.0.1	
# ::edge	same-41	ARG1	day	0.1.2.0.0.1.1.0.1.0	0.1.2.0.0.1.1.0.1	
(h2 / head-01 
      :ARG0 (h3 / hospital 
            :mod (c / country 
                  :name (n2 / name 
                        :op1 "radcliffe" 
                        :op2 "john"))) 
      :ARG1-of (i / injure-01 
            :ARG0 55 
            :mod (s / severe) 
            :time (a2 / after 
                  :op1 (a / accident 
                        :ARG0-of (h / happen-01 
                              :ARG1 (u / upper) 
                              :time (d / date-entity 
                                    :month 10 
                                    :op-of (l / late 
                                          :ARG1-of (d3 / die-01 
                                                :ARG0 26 
                                                :time (d2 / day 
                                                      :ARG1-of (s2 / same-41))))) 
                              :time (n / north))))))

# ::snt clouthier was travelling to a rally for the victorious pan candidate when he was killed in a car accident
# ::tok clouthier was travelling to a rally for the victorious pan candidate when he was killed in a car accident
# ::alignments 18-19|0.0.0.0 17-18|0.0.0.0.0 14-15|0.0.0 12-13|0.0 10-11|0.1.0 9-10|0.1.0.0 5-6|0.1 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:21.768
# ::node	0	travel-01	2-3
# ::node	0.0	he	12-13
# ::node	0.0.0	kill-01	14-15
# ::node	0.0.0.0	accident	18-19
# ::node	0.0.0.0.0	car	17-18
# ::node	0.1	rally-01	5-6
# ::node	0.1.0	candidate	10-11
# ::node	0.1.0.0	pan	9-10
# ::root	0	travel-01
# ::edge	accident	location	car	0.0.0.0	0.0.0.0.0	
# ::edge	candidate	mod	pan	0.1.0	0.1.0.0	
# ::edge	kill-01	ARG1	he	0.0.0	0.0	
# ::edge	kill-01	location	accident	0.0.0	0.0.0.0	
# ::edge	rally-01	ARG1	candidate	0.1	0.1.0	
# ::edge	travel-01	ARG0	he	0	0.0	
# ::edge	travel-01	ARG1	rally-01	0	0.1	
(t / travel-01 
      :ARG0 (h / he 
            :ARG1-of (k / kill-01 
                  :location (a / accident 
                        :location (c / car)))) 
      :ARG1 (r / rally-01 
            :ARG1 (c2 / candidate 
                  :mod (p / pan))))

# ::snt however the new licensing hours did not appear to be having a significant effect on drinkdriving and accidents
# ::tok however the new licensing hours did not appear to be having a significant effect on drinkdriving and accidents
# ::alignments 17-18|0.1 16-17|0 13-14|0.0 12-13|0.0.1 7-8|0.0.0.1 4-5|0.0.0.2+0.0.0 3-4|0.0.0.0 2-3|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:21.819
# ::node	0	and	16-17
# ::node	0.0	effect-01	13-14
# ::node	0.0.0	temporal-quantity	4-5
# ::node	0.0.0.0	license-01	3-4
# ::node	0.0.0.0.0	new	2-3
# ::node	0.0.0.1	appear-02	7-8
# ::node	0.0.0.2	hour	4-5
# ::node	0.0.1	significant	12-13
# ::node	0.1	accident	17-18
# ::root	0	and
# ::edge	and	op1	accident	0	0.1	
# ::edge	appear-02	ARG1	temporal-quantity	0.0.0.1	0.0.0	
# ::edge	effect-01	ARG0	temporal-quantity	0.0	0.0.0	
# ::edge	effect-01	ARG1	and	0.0	0	
# ::edge	effect-01	mod	significant	0.0	0.0.1	
# ::edge	license-01	ARG0	temporal-quantity	0.0.0.0	0.0.0	
# ::edge	license-01	mod	new	0.0.0.0	0.0.0.0.0	
# ::edge	temporal-quantity	unit	hour	0.0.0	0.0.0.2	
(a2 / and 
      :ARG1-of (e / effect-01 
            :ARG0 (t / temporal-quantity 
                  :ARG0-of (l / license-01 
                        :mod (n / new)) 
                  :ARG1-of (a3 / appear-02) 
                  :unit (h / hour)) 
            :mod (s / significant)) 
      :op1 (a / accident))

# ::snt contrary to popular belief a 1m damages award is not over generous when a young person suffers severe brain damage in a road accident, but in the wake of scare stories about socalled defensive medicine comes a new twist defensive driving action for victims of medical accidents reports in its latest newsletter, questioned about high damages awards following motor accidents ivor carr secretary of the british motorists association said there were moves afoot to increase car insurance premiums by 1000 per cent and this would encourage motorists to indulge in defensive driving to keep premiums down
# ::tok contrary to popular belief a 1m damages award is not over generous when a young person suffers severe brain damage in a road accident , but in the wake of scare stories about socalled defensive medicine comes a new twist defensive driving action for victims of medical accidents reports in its latest newsletter , questioned about high damages awards following motor accidents ivor carr secretary of the british motorists association said there were moves afoot to increase car insurance premiums by 1000 per cent and this would encourage motorists to indulge in defensive driving to keep premiums down
# ::alignments 97-98|0.1.2.2.1.0 96-97|0.1.2.2.1 93-94|0.1.2.2.2 92-93|0.1.2.2.2.0 90-91|0.1.2.2 87-88|0.1.2 85-86|0.1.2.0 84-85|0.1 83-84|0.1.1.0+0.1.1 81-82|0.1.2.1.0.0.0.1.0+0.1.2.1.0.0.0.1 79-80|0.1.0.0 78-79|0.1.0.0.0 77-78|0.1.0.0.0.0 76-77|0.1.0 73-74|0.1.0.1 70-71|0 69-70|0.1.2.1.0 64-65|0.1.2.1 61-62|0.1.2.2.0 60-61|0.1.2.2.0.0 58-59|0.0.1+0.0 57-58|0.0.2 56-57|0.0.2.0 54-55|0.0.0 51-52|0.1.2.1.0.0.0.0+0.1.2.1.0.0.0 48-49|0.1.2.1.0.0 47-48|0.1.2.1.0.0.1 46-47|0.1.2.1.0.0.1.0 44-45|0.1.2.1.0.0.1.1 42-43|0.1.2.1.0.0.1.1.0 41-42|0.1.2.1.0.0.1.1.0.2 40-41|0.1.2.1.0.0.1.1.0.0 39-40|0.1.2.1.0.0.1.1.0.2.0 38-39|0.1.2.1.0.0.1.1.0.1 35-36|0.1.2.1.0.0.1.1.0.2.0.0.0.1.0.0.0 34-35|0.1.2.1.0.0.1.1.0.2.0.0.0.1.0.0.0.0 31-32|0.1.2.1.0.0.1.1.0.2.0.0.0.1.0.0 30-31|0.1.2.1.0.0.1.1.0.2.0.0.0.1.0.0.1 28-29|0.1.2.1.0.0.1.1.0.2.0.0.0.1.0 25-26|0.1.2.1.0.0.1.1.0.2.0.0.0.1 23-24|0.1.2.1.0.0.1.1.0.2.0.0.0.0.1 22-23|0.1.2.1.0.0.1.1.0.2.0.0.0.0.1.0 19-20|0.1.2.1.0.0.1.1.0.2.0.0.0.0 18-19|0.1.2.1.0.0.1.1.0.2.0.0.0.0.0 17-18|0.1.2.1.0.0.1.1.0.2.0.0.0.0.2 16-17|0.1.2.1.0.0.1.1.0.2.0.0.0 15-16|0.1.2.1.0.0.1.1.0.2.0.0 14-15|0.1.2.1.0.0.1.1.0.2.0.0.1 11-12|0.1.2.1.0.0.1.1.0.2.0.0.0.1.1 7-8|0.1.2.1.0.0.1.1.0.2.0.0.0.1.1.0 6-7|0.1.2.1.0.0.1.1.0.2.0.0.0.1.1.0.0 3-4|0.1.2.1.0.0.1.1.0.2.0.0.0.1.1.0.1 2-3|0.1.2.1.0.0.1.1.0.2.0.0.0.1.1.0.1.0 0-1|0.1.2.1.0.0.1.1.0.2.0.0.0.1.1.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:25.919
# ::node	0	say-01	70-71
# ::node	0.0	thing	58-59
# ::node	0.0.0	question-01	54-55
# ::node	0.0.1	award-01	58-59
# ::node	0.0.2	damage-01	57-58
# ::node	0.0.2.0	high	56-57
# ::node	0.1	and	84-85
# ::node	0.1.0	increase-01	76-77
# ::node	0.1.0.0	premium	79-80
# ::node	0.1.0.0.0	insure-02	78-79
# ::node	0.1.0.0.0.0	car	77-78
# ::node	0.1.0.1	move-02	73-74
# ::node	0.1.1	monetary-quantity	83-84
# ::node	0.1.1.0	cent	83-84
# ::node	0.1.2	encourage-01	87-88
# ::node	0.1.2.0	this	85-86
# ::node	0.1.2.1	secretary	64-65
# ::node	0.1.2.1.0	associate-01	69-70
# ::node	0.1.2.1.0.0	report-01	48-49
# ::node	0.1.2.1.0.0.0	late	51-52
# ::node	0.1.2.1.0.0.0.0	most	51-52
# ::node	0.1.2.1.0.0.0.1	date-entity	81-82
# ::node	0.1.2.1.0.0.0.1.0	1000	81-82
# ::node	0.1.2.1.0.0.1	accident	47-48
# ::node	0.1.2.1.0.0.1.0	medicine	46-47
# ::node	0.1.2.1.0.0.1.1	victim	44-45
# ::node	0.1.2.1.0.0.1.1.0	action	42-43
# ::node	0.1.2.1.0.0.1.1.0.0	defensive	40-41
# ::node	0.1.2.1.0.0.1.1.0.1	new	38-39
# ::node	0.1.2.1.0.0.1.1.0.2	drive-01	41-42
# ::node	0.1.2.1.0.0.1.1.0.2.0	twist-01	39-40
# ::node	0.1.2.1.0.0.1.1.0.2.0.0	person	15-16
# ::node	0.1.2.1.0.0.1.1.0.2.0.0.0	suffer-01	16-17
# ::node	0.1.2.1.0.0.1.1.0.2.0.0.0.0	damage-01	19-20
# ::node	0.1.2.1.0.0.1.1.0.2.0.0.0.0.0	brain	18-19
# ::node	0.1.2.1.0.0.1.1.0.2.0.0.0.0.1	accident	23-24
# ::node	0.1.2.1.0.0.1.1.0.2.0.0.0.0.1.0	road	22-23
# ::node	0.1.2.1.0.0.1.1.0.2.0.0.0.0.2	severe	17-18
# ::node	0.1.2.1.0.0.1.1.0.2.0.0.0.1	contrast-01	25-26
# ::node	0.1.2.1.0.0.1.1.0.2.0.0.0.1.0	wake-02	28-29
# ::node	0.1.2.1.0.0.1.1.0.2.0.0.0.1.0.0	story	31-32
# ::node	0.1.2.1.0.0.1.1.0.2.0.0.0.1.0.0.0	medicine	35-36
# ::node	0.1.2.1.0.0.1.1.0.2.0.0.0.1.0.0.0.0	defensive	34-35
# ::node	0.1.2.1.0.0.1.1.0.2.0.0.0.1.0.0.1	scare-01	30-31
# ::node	0.1.2.1.0.0.1.1.0.2.0.0.0.1.1	generous-41	11-12
# ::node	0.1.2.1.0.0.1.1.0.2.0.0.0.1.1.0	award-01	7-8
# ::node	0.1.2.1.0.0.1.1.0.2.0.0.0.1.1.0.0	damage-01	6-7
# ::node	0.1.2.1.0.0.1.1.0.2.0.0.0.1.1.0.1	believe-01	3-4
# ::node	0.1.2.1.0.0.1.1.0.2.0.0.0.1.1.0.1.0	popular-41	2-3
# ::node	0.1.2.1.0.0.1.1.0.2.0.0.0.1.1.0.1.1	contrary-41	0-1
# ::node	0.1.2.1.0.0.1.1.0.2.0.0.1	young	14-15
# ::node	0.1.2.2	indulge-01	90-91
# ::node	0.1.2.2.0	accident	61-62
# ::node	0.1.2.2.0.0	motorcycle	60-61
# ::node	0.1.2.2.1	premium	96-97
# ::node	0.1.2.2.1.0	down	97-98
# ::node	0.1.2.2.2	drive-01	93-94
# ::node	0.1.2.2.2.0	defensive	92-93
# ::root	0	say-01
# ::edge	accident	location	road	0.1.2.1.0.0.1.1.0.2.0.0.0.0.1	0.1.2.1.0.0.1.1.0.2.0.0.0.0.1.0	
# ::edge	accident	mod	medicine	0.1.2.1.0.0.1	0.1.2.1.0.0.1.0	
# ::edge	accident	mod	motorcycle	0.1.2.2.0	0.1.2.2.0.0	
# ::edge	action	mod	defensive	0.1.2.1.0.0.1.1.0	0.1.2.1.0.0.1.1.0.0	
# ::edge	action	mod	new	0.1.2.1.0.0.1.1.0	0.1.2.1.0.0.1.1.0.1	
# ::edge	and	op1	increase-01	0.1	0.1.0	
# ::edge	and	op2	monetary-quantity	0.1	0.1.1	
# ::edge	and	op3	encourage-01	0.1	0.1.2	
# ::edge	associate-01	ARG1	report-01	0.1.2.1.0	0.1.2.1.0.0	
# ::edge	award-01	ARG1	damage-01	0.1.2.1.0.0.1.1.0.2.0.0.0.1.1.0	0.1.2.1.0.0.1.1.0.2.0.0.0.1.1.0.0	
# ::edge	award-01	ARG1	thing	0.0.1	0.0	
# ::edge	believe-01	ARG1	award-01	0.1.2.1.0.0.1.1.0.2.0.0.0.1.1.0.1	0.1.2.1.0.0.1.1.0.2.0.0.0.1.1.0	
# ::edge	contrary-41	ARG1	believe-01	0.1.2.1.0.0.1.1.0.2.0.0.0.1.1.0.1.1	0.1.2.1.0.0.1.1.0.2.0.0.0.1.1.0.1	
# ::edge	contrast-01	ARG1	suffer-01	0.1.2.1.0.0.1.1.0.2.0.0.0.1	0.1.2.1.0.0.1.1.0.2.0.0.0	
# ::edge	contrast-01	ARG2	wake-02	0.1.2.1.0.0.1.1.0.2.0.0.0.1	0.1.2.1.0.0.1.1.0.2.0.0.0.1.0	
# ::edge	damage-01	ARG1	brain	0.1.2.1.0.0.1.1.0.2.0.0.0.0	0.1.2.1.0.0.1.1.0.2.0.0.0.0.0	
# ::edge	damage-01	ARG2	accident	0.1.2.1.0.0.1.1.0.2.0.0.0.0	0.1.2.1.0.0.1.1.0.2.0.0.0.0.1	
# ::edge	damage-01	ARG2	high	0.0.2	0.0.2.0	
# ::edge	damage-01	mod	severe	0.1.2.1.0.0.1.1.0.2.0.0.0.0	0.1.2.1.0.0.1.1.0.2.0.0.0.0.2	
# ::edge	date-entity	year	1000	0.1.2.1.0.0.0.1	0.1.2.1.0.0.0.1.0	
# ::edge	down	path	premium	0.1.2.2.1.0	0.1.2.2.1	
# ::edge	drive-01	mod	defensive	0.1.2.2.2	0.1.2.2.2.0	
# ::edge	drive-01	time	action	0.1.2.1.0.0.1.1.0.2	0.1.2.1.0.0.1.1.0	
# ::edge	encourage-01	ARG0	this	0.1.2	0.1.2.0	
# ::edge	encourage-01	ARG1	secretary	0.1.2	0.1.2.1	
# ::edge	encourage-01	ARG2	indulge-01	0.1.2	0.1.2.2	
# ::edge	generous-41	ARG1	award-01	0.1.2.1.0.0.1.1.0.2.0.0.0.1.1	0.1.2.1.0.0.1.1.0.2.0.0.0.1.1.0	
# ::edge	generous-41	ARG2	contrast-01	0.1.2.1.0.0.1.1.0.2.0.0.0.1.1	0.1.2.1.0.0.1.1.0.2.0.0.0.1	
# ::edge	increase-01	ARG1	premium	0.1.0	0.1.0.0	
# ::edge	indulge-01	ARG0	accident	0.1.2.2	0.1.2.2.0	
# ::edge	indulge-01	ARG1	premium	0.1.2.2	0.1.2.2.1	
# ::edge	indulge-01	ARG2	drive-01	0.1.2.2	0.1.2.2.2	
# ::edge	insure-02	ARG0	car	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	late	degree	most	0.1.2.1.0.0.0	0.1.2.1.0.0.0.0	
# ::edge	late	op1	date-entity	0.1.2.1.0.0.0	0.1.2.1.0.0.0.1	
# ::edge	medicine	mod	defensive	0.1.2.1.0.0.1.1.0.2.0.0.0.1.0.0.0	0.1.2.1.0.0.1.1.0.2.0.0.0.1.0.0.0.0	
# ::edge	monetary-quantity	unit	cent	0.1.1	0.1.1.0	
# ::edge	move-02	ARG1	increase-01	0.1.0.1	0.1.0	
# ::edge	person	mod	young	0.1.2.1.0.0.1.1.0.2.0.0	0.1.2.1.0.0.1.1.0.2.0.0.1	
# ::edge	popular-41	ARG1	believe-01	0.1.2.1.0.0.1.1.0.2.0.0.0.1.1.0.1.0	0.1.2.1.0.0.1.1.0.2.0.0.0.1.1.0.1	
# ::edge	premium	mod	insure-02	0.1.0.0	0.1.0.0.0	
# ::edge	question-01	ARG1	thing	0.0.0	0.0	
# ::edge	report-01	ARG0	late	0.1.2.1.0.0	0.1.2.1.0.0.0	
# ::edge	report-01	ARG2	accident	0.1.2.1.0.0	0.1.2.1.0.0.1	
# ::edge	say-01	ARG0	thing	0	0.0	
# ::edge	say-01	ARG1	and	0	0.1	
# ::edge	secretary	mod	associate-01	0.1.2.1	0.1.2.1.0	
# ::edge	story	topic	medicine	0.1.2.1.0.0.1.1.0.2.0.0.0.1.0.0	0.1.2.1.0.0.1.1.0.2.0.0.0.1.0.0.0	
# ::edge	story	topic	scare-01	0.1.2.1.0.0.1.1.0.2.0.0.0.1.0.0	0.1.2.1.0.0.1.1.0.2.0.0.0.1.0.0.1	
# ::edge	suffer-01	ARG0	person	0.1.2.1.0.0.1.1.0.2.0.0.0	0.1.2.1.0.0.1.1.0.2.0.0	
# ::edge	suffer-01	ARG1	damage-01	0.1.2.1.0.0.1.1.0.2.0.0.0	0.1.2.1.0.0.1.1.0.2.0.0.0.0	
# ::edge	thing	topic	damage-01	0.0	0.0.2	
# ::edge	twist-01	ARG0	person	0.1.2.1.0.0.1.1.0.2.0	0.1.2.1.0.0.1.1.0.2.0.0	
# ::edge	twist-01	ARG1	drive-01	0.1.2.1.0.0.1.1.0.2.0	0.1.2.1.0.0.1.1.0.2	
# ::edge	victim	mod	accident	0.1.2.1.0.0.1.1	0.1.2.1.0.0.1	
# ::edge	victim	mod	action	0.1.2.1.0.0.1.1	0.1.2.1.0.0.1.1.0	
# ::edge	wake-02	ARG1	story	0.1.2.1.0.0.1.1.0.2.0.0.0.1.0	0.1.2.1.0.0.1.1.0.2.0.0.0.1.0.0	
(s / say-01 
      :ARG0 (t2 / thing 
            :ARG1-of (q / question-01) 
            :ARG1-of (a4 / award-01) 
            :topic (d5 / damage-01 
                  :ARG2 (h / high))) 
      :ARG1 (a / and 
            :op1 (i3 / increase-01 
                  :ARG1 (p2 / premium 
                        :mod (i2 / insure-02 
                              :ARG0 (c2 / car))) 
                  :ARG1-of (m2 / move-02)) 
            :op2 (m / monetary-quantity 
                  :unit (c / cent)) 
            :op3 (e / encourage-01 
                  :ARG0 (t / this) 
                  :ARG1 (s2 / secretary 
                        :mod (a2 / associate-01 
                              :ARG1 (r / report-01 
                                    :ARG0 (l / late 
                                          :degree (m4 / most) 
                                          :op1 (d4 / date-entity 
                                                :year 1000)) 
                                    :ARG2 (a5 / accident 
                                          :mod (m5 / medicine) 
                                          :mod-of (v / victim 
                                                :mod (a6 / action 
                                                      :mod (d7 / defensive) 
                                                      :mod (n / new) 
                                                      :time-of (d6 / drive-01 
                                                            :ARG1-of (t3 / twist-01 
                                                                  :ARG0 (p3 / person 
                                                                        :ARG0-of (s6 / suffer-01 
                                                                              :ARG1 (d9 / damage-01 
                                                                                    :ARG1 (b / brain) 
                                                                                    :ARG2 (a7 / accident 
                                                                                          :location (r2 / road)) 
                                                                                    :mod (s5 / severe)) 
                                                                              :ARG1-of (c3 / contrast-01 
                                                                                    :ARG2 (w / wake-02 
                                                                                          :ARG1 (s3 / story 
                                                                                                :topic (m6 / medicine 
                                                                                                      :mod (d8 / defensive)) 
                                                                                                :topic (s4 / scare-01))) 
                                                                                    :ARG2-of (g / generous-41 
                                                                                          :ARG1 (a8 / award-01 
                                                                                                :ARG1 (d10 / damage-01) 
                                                                                                :ARG1-of (b2 / believe-01 
                                                                                                      :ARG1-of (p4 / popular-41) 
                                                                                                      :ARG1-of (c4 / contrary-41)))))) 
                                                                        :mod (y / young)))))))))) 
                  :ARG2 (i / indulge-01 
                        :ARG0 (a3 / accident 
                              :mod (m3 / motorcycle)) 
                        :ARG1 (p / premium 
                              :path-of (d / down)) 
                        :ARG2 (d2 / drive-01 
                              :mod (d3 / defensive))))))

# ::snt a mothers campaign to prevent more road accident
# ::tok a mothers campaign to prevent more road accident
# ::alignments 7-8|0.1 6-7|0.1.0 4-5|0 2-3|0.0 1-2|0.0.0.0+0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:25.933
# ::node	0	prevent-01	4-5
# ::node	0.0	campaign-01	2-3
# ::node	0.0.0	have-rel-role-91	1-2
# ::node	0.0.0.0	mother	1-2
# ::node	0.1	accident	7-8
# ::node	0.1.0	road	6-7
# ::root	0	prevent-01
# ::edge	accident	location	road	0.1	0.1.0	
# ::edge	campaign-01	ARG1	have-rel-role-91	0.0	0.0.0	
# ::edge	have-rel-role-91	ARG2	mother	0.0.0	0.0.0.0	
# ::edge	prevent-01	ARG0	campaign-01	0	0.0	
# ::edge	prevent-01	ARG1	accident	0	0.1	
(p / prevent-01 
      :ARG0 (c / campaign-01 
            :ARG1 (h / have-rel-role-91 
                  :ARG2 (m / mother))) 
      :ARG1 (a / accident 
            :location (r / road)))

# ::snt more than 250000 people have to go to hospital each year because of accidents in the kitchen, these accidents are mainly due to cuts caused by tins children or pensioners falling over accidental poisonings or burns and scalds from hot liquids electrical appliances and chip pans, as a response to these accidents oxford city council is staging a kitchen safety week to highlight the dangers and to advise people to take precautions
# ::tok more than 250000 people have to go to hospital each year because of accidents in the kitchen , these accidents are mainly due to cuts caused by tins children or pensioners falling over accidental poisonings or burns and scalds from hot liquids electrical appliances and chip pans , as a response to these accidents oxford city council is staging a kitchen safety week to highlight the dangers and to advise people to take precautions
# ::alignments 73-74|0.1.0.0.1.0.2 69-70|0.1.0.0.1.0.1 67-68|0.1.0.0.1.0 66-67|0.1.0.0.1.0.1.0 62-63|0.1.0.0.1.0.0.1.1 61-62|0.1.0.0.1.0.0.1 58-59|0.1.0.0.1.0.0 56-57|0.1.0.0.1.0.0.0 55-56|0.1.0.0.1.0.0.0.0 53-54|0.1.0.0.1.0.0.2.0 50-51|0.1.0.0.1.0.0.2 46-47|0.1.0.0.1.1 45-46|0.1.0.0.1.1.1 44-45|0.1.0.0.1 42-43|0.1.0.0.1.0.0.1.0.0 40-41|0.1.0.0.1.0.0.1.0 37-38|0.1.0.0.2 36-37|0.1.0.0 35-36|0.1.0 31-32|0.1 30-31|0.0.1 29-30|0.0 28-29|0.0.0 25-26|0 24-25|0.1.1 21-22|0.1.0.0.1.1.0 19-20|0.1.0.0.0 13-14|0.1.0.0.2.0.0 11-12|0.1.0.0.2.0 10-11|0.1.0.0.2.0.1 9-10|0.1.0.0.2.0.1.0 8-9|0.1.1.0 2-3|0.1.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:27.860
# ::node	0	cause-01	25-26
# ::node	0.0	or	29-30
# ::node	0.0.0	child	28-29
# ::node	0.0.1	pensioner	30-31
# ::node	0.1	fall-01	31-32
# ::node	0.1.0	or	35-36
# ::node	0.1.0.0	burn-01	36-37
# ::node	0.1.0.0.0	accident	19-20
# ::node	0.1.0.0.1	and	44-45
# ::node	0.1.0.0.1.0	and	67-68
# ::node	0.1.0.0.1.0.0	stage-01	58-59
# ::node	0.1.0.0.1.0.0.0	council	56-57
# ::node	0.1.0.0.1.0.0.0.0	city	55-56
# ::node	0.1.0.0.1.0.0.1	safe-41	61-62
# ::node	0.1.0.0.1.0.0.1.0	hot	40-41
# ::node	0.1.0.0.1.0.0.1.0.0	electricity	42-43
# ::node	0.1.0.0.1.0.0.1.1	week	62-63
# ::node	0.1.0.0.1.0.0.2	respond-01	50-51
# ::node	0.1.0.0.1.0.0.2.0	accident	53-54
# ::node	0.1.0.0.1.0.1	advise-01	69-70
# ::node	0.1.0.0.1.0.1.0	danger	66-67
# ::node	0.1.0.0.1.0.2	precaution	73-74
# ::node	0.1.0.0.1.1	pan-02	46-47
# ::node	0.1.0.0.1.1.0	main	21-22
# ::node	0.1.0.0.1.1.1	chip	45-46
# ::node	0.1.0.0.2	and	37-38
# ::node	0.1.0.0.2.0	cause-01	11-12
# ::node	0.1.0.0.2.0.0	accident	13-14
# ::node	0.1.0.0.2.0.1	year	10-11
# ::node	0.1.0.0.2.0.1.0	each	9-10
# ::node	0.1.1	cut-02	24-25
# ::node	0.1.1.0	hospital	8-9
# ::node	0.1.1.1	250000	2-3
# ::root	0	cause-01
# ::edge	advise-01	ARG1	danger	0.1.0.0.1.0.1	0.1.0.0.1.0.1.0	
# ::edge	and	op1	and	0.1.0.0.1.0	0.1.0.0.1	
# ::edge	and	op1	burn-01	0.1.0.0.1	0.1.0.0	
# ::edge	and	op1	burn-01	0.1.0.0.2	0.1.0.0	
# ::edge	and	op2	pan-02	0.1.0.0.1	0.1.0.0.1.1	
# ::edge	and	op2	stage-01	0.1.0.0.1.0	0.1.0.0.1.0.0	
# ::edge	and	op3	advise-01	0.1.0.0.1.0	0.1.0.0.1.0.1	
# ::edge	and	op4	precaution	0.1.0.0.1.0	0.1.0.0.1.0.2	
# ::edge	burn-01	ARG1	accident	0.1.0.0	0.1.0.0.0	
# ::edge	cause-01	ARG0	and	0.1.0.0.2.0	0.1.0.0.2	
# ::edge	cause-01	ARG0	or	0	0.0	
# ::edge	cause-01	ARG1	accident	0.1.0.0.2.0	0.1.0.0.2.0.0	
# ::edge	cause-01	ARG1	fall-01	0	0.1	
# ::edge	council	mod	city	0.1.0.0.1.0.0.0	0.1.0.0.1.0.0.0.0	
# ::edge	cut-02	ARG0	hospital	0.1.1	0.1.1.0	
# ::edge	cut-02	ARG1	250000	0.1.1	0.1.1.1	
# ::edge	electricity	mod	hot	0.1.0.0.1.0.0.1.0.0	0.1.0.0.1.0.0.1.0	
# ::edge	fall-01	ARG0	or	0.1	0.1.0	
# ::edge	fall-01	ARG1	cut-02	0.1	0.1.1	
# ::edge	or	op1	burn-01	0.1.0	0.1.0.0	
# ::edge	or	op1	child	0.0	0.0.0	
# ::edge	or	op2	pensioner	0.0	0.0.1	
# ::edge	pan-02	ARG0	main	0.1.0.0.1.1	0.1.0.0.1.1.0	
# ::edge	pan-02	ARG1	chip	0.1.0.0.1.1	0.1.0.0.1.1.1	
# ::edge	respond-01	ARG1	accident	0.1.0.0.1.0.0.2	0.1.0.0.1.0.0.2.0	
# ::edge	respond-01	ARG2	stage-01	0.1.0.0.1.0.0.2	0.1.0.0.1.0.0	
# ::edge	safe-41	ARG1	hot	0.1.0.0.1.0.0.1	0.1.0.0.1.0.0.1.0	
# ::edge	safe-41	time	week	0.1.0.0.1.0.0.1	0.1.0.0.1.0.0.1.1	
# ::edge	stage-01	ARG0	council	0.1.0.0.1.0.0	0.1.0.0.1.0.0.0	
# ::edge	stage-01	ARG1	safe-41	0.1.0.0.1.0.0	0.1.0.0.1.0.0.1	
# ::edge	year	mod	each	0.1.0.0.2.0.1	0.1.0.0.2.0.1.0	
# ::edge	year	time	cause-01	0.1.0.0.2.0.1	0.1.0.0.2.0	
(c5 / cause-01 
      :ARG0 (o2 / or 
            :op1 (c4 / child) 
            :op2 (p3 / pensioner)) 
      :ARG1 (f / fall-01 
            :ARG0 (o / or 
                  :op1 (b / burn-01 
                        :ARG1 (a6 / accident) 
                        :op-of (a4 / and 
                              :op-of (a2 / and 
                                    :op1 (s2 / stage-01 
                                          :ARG0 (c / council 
                                                :mod (c2 / city)) 
                                          :ARG1 (s / safe-41 
                                                :ARG1 (h / hot 
                                                      :mod-of (e / electricity)) 
                                                :time (w / week)) 
                                          :ARG2-of (r / respond-01 
                                                :ARG1 (a3 / accident))) 
                                    :op2 (a / advise-01 
                                          :ARG1 (d / danger)) 
                                    :op3 (p / precaution)) 
                              :op1 (p2 / pan-02 
                                    :ARG0 (m / main) 
                                    :ARG1 (c3 / chip))) 
                        :op-of (a5 / and 
                              :ARG0-of (c7 / cause-01 
                                    :ARG1 (a7 / accident) 
                                    :time-of (y / year 
                                          :mod (e2 / each)))))) 
            :ARG1 (c6 / cut-02 
                  :ARG0 (h2 / hospital) 
                  :ARG1 250000)))

# ::snt thus it is no accident that zola ends his extraordinary description of hothouse incest by evoking in images that directly foreshadow huysmans the voracious mouth of woman as a bleeding red flower that figures her castration deadguys
# ::tok thus it is no accident that zola ends his extraordinary description of hothouse incest by evoking in images that directly foreshadow huysmans the voracious mouth of woman as a bleeding red flower that figures her castration deadguys
# ::alignments 35-36|0.0.2.2 33-34|0.0.2.3 30-31|0.0.2.1 29-30|0.0.2 26-27|0.0.2.0.0 24-25|0.0.2.0 19-20|0.0.2.2.0 17-18|0.0.2.2.1 13-14|0 10-11|0.0.1 9-10|0.0.0.0.0 7-8|0.0 4-5|0.0.0 3-4|0.0.0.1 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:28.449
# ::node	0	incest	13-14
# ::node	0.0	end-01	7-8
# ::node	0.0.0	accident	4-5
# ::node	0.0.0.0	it	1-2
# ::node	0.0.0.0.0	extraordinary	9-10
# ::node	0.0.0.1	-	3-4
# ::node	0.0.1	description	10-11
# ::node	0.0.2	bleed-01	29-30
# ::node	0.0.2.0	mouth	24-25
# ::node	0.0.2.0.0	woman	26-27
# ::node	0.0.2.1	red	30-31
# ::node	0.0.2.2	castrate-01	35-36
# ::node	0.0.2.2.0	direct	19-20
# ::node	0.0.2.2.1	image	17-18
# ::node	0.0.2.3	figure	33-34
# ::root	0	incest
(i2 / incest 
      :manner-of (e2 / end-01 
            :ARG0 (a / accident 
                  :domain (i3 / it 
                        :poss-of (e / extraordinary)) 
                  :polarity (- / -)) 
            :ARG1 (d2 / description) 
            :ARG2-of (b / bleed-01 
                  :ARG0 (m / mouth 
                        :mod (w / woman)) 
                  :ARG1 (r / red) 
                  :ARG2-of (c / castrate-01 
                        :ARG0 (d / direct) 
                        :op-of (i / image)) 
                  :manner-of (f / figure))))

# ::snt but a report from care in the home published by the royal society for the prevention of accidents suggests that the real danger lies in the tin
# ::tok but a report from care in the home published by the royal society for the prevention of accidents suggests that the real danger lies in the tin
# ::alignments 26-27|0.0.2.1.1 23-24|0.0.2.1 22-23|0.0.2.1.0 21-22|0.0.2.1.0.0 18-19|0.0.2 17-18|0.0.2.0.0 15-16|0.0.2.0 12-13|0.0.0 11-12|0.0.0.0 8-9|0.0 7-8|0.0.3.0 4-5|0.0.3 2-3|0.0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:28.552
# ::node	0	contrast-01	0-1
# ::node	0.0	publish-01	8-9
# ::node	0.0.0	society	12-13
# ::node	0.0.0.0	royal	11-12
# ::node	0.0.1	report	2-3
# ::node	0.0.2	suggest-01	18-19
# ::node	0.0.2.0	prevent-01	15-16
# ::node	0.0.2.0.0	accident	17-18
# ::node	0.0.2.1	lie-01	23-24
# ::node	0.0.2.1.0	danger	22-23
# ::node	0.0.2.1.0.0	real	21-22
# ::node	0.0.2.1.1	tin	26-27
# ::node	0.0.3	care-01	4-5
# ::node	0.0.3.0	home	7-8
# ::root	0	contrast-01
# ::edge	care-01	ARG1	home	0.0.3	0.0.3.0	
# ::edge	care-01	manner	publish-01	0.0.3	0.0	
# ::edge	contrast-01	ARG1	publish-01	0	0.0	
# ::edge	danger	mod	real	0.0.2.1.0	0.0.2.1.0.0	
# ::edge	lie-01	ARG1	danger	0.0.2.1	0.0.2.1.0	
# ::edge	lie-01	ARG2	tin	0.0.2.1	0.0.2.1.1	
# ::edge	prevent-01	ARG1	accident	0.0.2.0	0.0.2.0.0	
# ::edge	publish-01	ARG0	society	0.0	0.0.0	
# ::edge	publish-01	ARG1	report	0.0	0.0.1	
# ::edge	publish-01	condition	suggest-01	0.0	0.0.2	
# ::edge	society	mod	royal	0.0.0	0.0.0.0	
# ::edge	suggest-01	ARG0	prevent-01	0.0.2	0.0.2.0	
# ::edge	suggest-01	ARG1	lie-01	0.0.2	0.0.2.1	
(c2 / contrast-01 
      :ARG1 (p2 / publish-01 
            :ARG0 (s2 / society 
                  :mod (r2 / royal)) 
            :ARG1 (r3 / report) 
            :condition (s / suggest-01 
                  :ARG0 (p / prevent-01 
                        :ARG1 (a / accident)) 
                  :ARG1 (l / lie-01 
                        :ARG1 (d / danger 
                              :mod (r / real)) 
                        :ARG2 (t / tin))) 
            :manner-of (c / care-01 
                  :ARG1 (h / home))))

# ::snt bob wright who is a clinical nurse specialising in crisis care in the accident and emergency department at leeds general infirmary has done years of research and written books and articles for medical journals on coping with bereavement
# ::tok bob wright who is a clinical nurse specialising in crisis care in the accident and emergency department at leeds general infirmary has done years of research and written books and articles for medical journals on coping with bereavement
# ::alignments 35-36|0.3.0.0.0.0.0 33-34|0.3.0.0.0.0.0.1 32-33|0.3.0.0.0.0.0.1.0 30-31|0.3.0.0.0.1.0 29-30|0.3.0.0.0 28-29|0.3.0.0.0.2 27-28|0.3.0 26-27|0.3.0.0 25-26|0.3.0.0.0.1 23-24|0.3.0.0.0.0.1+0.3.0.0.0.0 19-20|0.3.0.0.0.0.0.0 16-17|0.3 15-16|0.2 14-15|0 13-14|0.1 10-11|0.0 9-10|0.0.0 6-7|0.3.0.0.0.1.1.0+0.3.0.0.0.1.1 5-6|0.3.0.0.0.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:29.071
# ::node	0	and	14-15
# ::node	0.0	care-01	10-11
# ::node	0.0.0	crisis	9-10
# ::node	0.1	accident	13-14
# ::node	0.2	emergency	15-16
# ::node	0.3	department	16-17
# ::node	0.3.0	write-01	27-28
# ::node	0.3.0.0	and	26-27
# ::node	0.3.0.0.0	and	29-30
# ::node	0.3.0.0.0.0	temporal-quantity	23-24
# ::node	0.3.0.0.0.0.0	cope-01	35-36
# ::node	0.3.0.0.0.0.0.0	general	19-20
# ::node	0.3.0.0.0.0.0.1	journal	33-34
# ::node	0.3.0.0.0.0.0.1.0	medicine	32-33
# ::node	0.3.0.0.0.0.1	year	23-24
# ::node	0.3.0.0.0.1	research-01	25-26
# ::node	0.3.0.0.0.1.0	article	30-31
# ::node	0.3.0.0.0.1.1	have-org-role-91	6-7
# ::node	0.3.0.0.0.1.1.0	nurse	6-7
# ::node	0.3.0.0.0.1.1.0.0	clinical	5-6
# ::node	0.3.0.0.0.2	book	28-29
# ::root	0	and
# ::edge	and	op1	accident	0	0.1	
# ::edge	and	op1	temporal-quantity	0.3.0.0.0	0.3.0.0.0.0	
# ::edge	and	op1	write-01	0.3.0.0	0.3.0	
# ::edge	and	op2	and	0.3.0.0	0.3.0.0.0	
# ::edge	and	op2	emergency	0	0.2	
# ::edge	and	op2	research-01	0.3.0.0.0	0.3.0.0.0.1	
# ::edge	and	op3	book	0.3.0.0.0	0.3.0.0.0.2	
# ::edge	and	op3	department	0	0.3	
# ::edge	care-01	ARG0	and	0.0	0	
# ::edge	care-01	ARG1	crisis	0.0	0.0.0	
# ::edge	cope-01	ARG0	temporal-quantity	0.3.0.0.0.0.0	0.3.0.0.0.0	
# ::edge	cope-01	ARG1	general	0.3.0.0.0.0.0	0.3.0.0.0.0.0.0	
# ::edge	have-org-role-91	ARG2	nurse	0.3.0.0.0.1.1	0.3.0.0.0.1.1.0	
# ::edge	journal	mod	medicine	0.3.0.0.0.0.0.1	0.3.0.0.0.0.0.1.0	
# ::edge	journal	topic	cope-01	0.3.0.0.0.0.0.1	0.3.0.0.0.0.0	
# ::edge	nurse	mod	clinical	0.3.0.0.0.1.1.0	0.3.0.0.0.1.1.0.0	
# ::edge	research-01	ARG1	article	0.3.0.0.0.1	0.3.0.0.0.1.0	
# ::edge	research-01	ARG2	have-org-role-91	0.3.0.0.0.1	0.3.0.0.0.1.1	
# ::edge	temporal-quantity	unit	year	0.3.0.0.0.0	0.3.0.0.0.0.1	
# ::edge	write-01	ARG1	department	0.3.0	0.3	
(a4 / and 
      :ARG0-of (c2 / care-01 
            :ARG1 (c3 / crisis)) 
      :op1 (a5 / accident) 
      :op2 (e / emergency) 
      :op3 (d / department 
            :ARG1-of (w / write-01 
                  :op-of (a3 / and 
                        :op1 (a2 / and 
                              :op1 (t / temporal-quantity 
                                    :ARG0-of (c / cope-01 
                                          :ARG1 (g / general) 
                                          :topic-of (j / journal 
                                                :mod (m / medicine))) 
                                    :unit (y / year)) 
                              :op2 (r / research-01 
                                    :ARG1 (a / article) 
                                    :ARG2 (h / have-org-role-91 
                                          :ARG2 (n / nurse 
                                                :mod (c4 / clinical)))) 
                              :op3 (b / book))))))

# ::snt mr watts has told the court he felt his sister had been monstrously treated by sun alliance over its failure to honour an accident policy taken out by his brotherinlaw christopher bowden who died in april 1975
# ::tok mr watts has told the court he felt his sister had been monstrously treated by sun alliance over its failure to honour an accident policy taken out by his brotherinlaw christopher bowden who died in april 1975
# ::alignments 35-37|0.1.0.1.0.1+0.1.0.1.0.0+0.1.0.1.0 33-34|0.1.0.1 24-25|0.0 23-24|0.0.0 21-22|0 19-20|0.1 16-17|0.1.1.0 15-16|0.1.1 13-14|0.1.0.0.0 9-10|0.1.0.2.0+0.1.0.2 7-8|0.1.0.0 6-7|0.1.0 5-6|0.1.0.0.1.0 3-4|0.1.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:29.418
# ::node	0	honor-01	21-22
# ::node	0.0	policy	24-25
# ::node	0.0.0	accident	23-24
# ::node	0.1	fail-01	19-20
# ::node	0.1.0	he	6-7
# ::node	0.1.0.0	feel-01	7-8
# ::node	0.1.0.0.0	treat-01	13-14
# ::node	0.1.0.0.1	tell-01	3-4
# ::node	0.1.0.0.1.0	court	5-6
# ::node	0.1.0.1	die-01	33-34
# ::node	0.1.0.1.0	date-entity	35-37
# ::node	0.1.0.1.0.0	4	35-37
# ::node	0.1.0.1.0.1	1975	35-37
# ::node	0.1.0.2	have-rel-role-91	9-10
# ::node	0.1.0.2.0	sister	9-10
# ::node	0.1.1	sun	15-16
# ::node	0.1.1.0	alliance	16-17
# ::root	0	honor-01
# ::edge	alliance	mod	sun	0.1.1.0	0.1.1	
# ::edge	date-entity	month	4	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	date-entity	year	1975	0.1.0.1.0	0.1.0.1.0.1	
# ::edge	die-01	ARG1	he	0.1.0.1	0.1.0	
# ::edge	die-01	time	date-entity	0.1.0.1	0.1.0.1.0	
# ::edge	fail-01	ARG0	he	0.1	0.1.0	
# ::edge	fail-01	ARG2	honor-01	0.1	0	
# ::edge	feel-01	ARG0	he	0.1.0.0	0.1.0	
# ::edge	feel-01	ARG1	treat-01	0.1.0.0	0.1.0.0.0	
# ::edge	have-rel-role-91	ARG1	he	0.1.0.2	0.1.0	
# ::edge	have-rel-role-91	ARG2	sister	0.1.0.2	0.1.0.2.0	
# ::edge	honor-01	ARG1	policy	0	0.0	
# ::edge	policy	mod	accident	0.0	0.0.0	
# ::edge	sun	purpose	fail-01	0.1.1	0.1	
# ::edge	tell-01	ARG1	feel-01	0.1.0.0.1	0.1.0.0	
# ::edge	tell-01	ARG2	court	0.1.0.0.1	0.1.0.0.1.0	
(h / honor-01 
      :ARG1 (p / policy 
            :mod (a / accident)) 
      :ARG2-of (f / fail-01 
            :ARG0 (h3 / he 
                  :ARG0-of (f2 / feel-01 
                        :ARG1 (t / treat-01) 
                        :ARG1-of (t2 / tell-01 
                              :ARG2 (c / court))) 
                  :ARG1-of (d2 / die-01 
                        :time (d / date-entity 
                              :month 4 
                              :year 1975)) 
                  :ARG1-of (h2 / have-rel-role-91 
                        :ARG2 (s2 / sister))) 
            :purpose-of (s / sun 
                  :mod-of (a2 / alliance))))

# ::snt facts  hatful of hollow was a complete accident
# ::tok facts hatful of hollow was a complete accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:29.418
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt graeme robinson a british sailor in the whitbread round the world race has been taken to hospital after a road accident during the first stopover in uruguay
# ::tok graeme robinson a british sailor in the whitbread round the world race has been taken to hospital after a road accident during the first stopover in uruguay
# ::alignments 20-21|0.1 19-20|0 17-18|0.1.0 16-17|0.0 11-12|0.1.0.0 10-11|0.1.0.0.1 8-9|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:29.458
# ::node	0	road	19-20
# ::node	0.0	hospital	16-17
# ::node	0.1	accident	20-21
# ::node	0.1.0	after	17-18
# ::node	0.1.0.0	race	11-12
# ::node	0.1.0.0.0	round	8-9
# ::node	0.1.0.0.1	world	10-11
# ::root	0	road
(r / road 
      :location-of (h / hospital) 
      :location-of (a / accident 
            :op-of (a2 / after 
                  :poss (r2 / race 
                        :example-of (r3 / round) 
                        :mod (w / world)))))

# ::snt it reemphasises the need to prevent smoke drifting over main roads and railway tracks when it could cause accidents
# ::tok it reemphasises the need to prevent smoke drifting over main roads and railway tracks when it could cause accidents
# ::alignments 18-19|0.1 17-18|0 16-17|0.3 15-16|0.0 13-14|0.2 12-13|0.2.1 11-12|0.2.0 10-11|0.2.0.1 9-10|0.2.0.0.1 5-6|0.2.0.0 3-4|0.2.0.0.0.0 0-1|0.2.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:29.675
# ::node	0	cause-01	17-18
# ::node	0.0	it	15-16
# ::node	0.1	accident	18-19
# ::node	0.2	track-01	13-14
# ::node	0.2.0	and	11-12
# ::node	0.2.0.0	prevent-01	5-6
# ::node	0.2.0.0.0	it	0-1
# ::node	0.2.0.0.0.0	need-01	3-4
# ::node	0.2.0.0.1	main	9-10
# ::node	0.2.0.1	road	10-11
# ::node	0.2.1	railway	12-13
# ::node	0.3	possible	16-17
# ::root	0	cause-01
# ::edge	and	op1	prevent-01	0.2.0	0.2.0.0	
# ::edge	and	op2	road	0.2.0	0.2.0.1	
# ::edge	cause-01	ARG0	it	0	0.0	
# ::edge	cause-01	ARG1	accident	0	0.1	
# ::edge	cause-01	location	track-01	0	0.2	
# ::edge	cause-01	mod	possible	0	0.3	
# ::edge	need-01	ARG0	it	0.2.0.0.0.0	0.2.0.0.0	
# ::edge	prevent-01	ARG0	it	0.2.0.0	0.2.0.0.0	
# ::edge	prevent-01	ARG1	main	0.2.0.0	0.2.0.0.1	
# ::edge	track-01	ARG1	and	0.2	0.2.0	
# ::edge	track-01	mod	railway	0.2	0.2.1	
(c / cause-01 
      :ARG0 (i / it) 
      :ARG1 (a / accident) 
      :location (t / track-01 
            :ARG1 (a2 / and 
                  :op1 (p2 / prevent-01 
                        :ARG0 (i2 / it 
                              :ARG0-of (n / need-01)) 
                        :ARG1 (m / main)) 
                  :op2 (r2 / road)) 
            :mod (r / railway)) 
      :mod (p / possible))

# ::snt prosecuting solicitor mrs cathy olliver said police officers who attended the motorcycle accident at 3
# ::tok prosecuting solicitor mrs cathy olliver said police officers who attended the motorcycle accident at 3
# ::alignments 14-15|0.1.0 12-13|0.0.0.0.0.0 9-10|0.0.0.0.0 7-8|0.0.0.0+0.0.0 6-7|0.0 5-6|0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:29.706
# ::node	0	say-01	5-6
# ::node	0.0	police	6-7
# ::node	0.0.0	have-org-role-91	7-8
# ::node	0.0.0.0	officer	7-8
# ::node	0.0.0.0.0	attend-01	9-10
# ::node	0.0.0.0.0.0	accident	12-13
# ::node	0.1	prosecute-01	0-1
# ::node	0.1.0	3	14-15
# ::root	0	say-01
# ::edge	attend-01	ARG0	officer	0.0.0.0.0	0.0.0.0	
# ::edge	attend-01	ARG1	accident	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	have-org-role-91	ARG1	police	0.0.0	0.0	
# ::edge	have-org-role-91	ARG2	officer	0.0.0	0.0.0.0	
# ::edge	prosecute-01	ARG0	3	0.1	0.1.0	
# ::edge	prosecute-01	ARG1	say-01	0.1	0	
# ::edge	say-01	ARG1	police	0	0.0	
(s / say-01 
      :ARG1 (p / police 
            :ARG1-of (h / have-org-role-91 
                  :ARG2 (o / officer 
                        :ARG0-of (a2 / attend-01 
                              :ARG1 (a / accident))))) 
      :ARG1-of (p2 / prosecute-01 
            :ARG0 3))

# ::snt essential you make it look like an accident ellip
# ::tok essential you make it look like an accident ellip
# ::alignments 7-8|0.0.0 3-4|0.1 1-2|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:29.715
# ::node	0	essential	0-1
# ::node	0.0	you	1-2
# ::node	0.0.0	accident	7-8
# ::node	0.1	it	3-4
# ::root	0	essential
# ::edge	essential	beneficiary	you	0	0.0	
# ::edge	essential	topic	it	0	0.1	
# ::edge	you	op1	accident	0.0	0.0.0	
(e / essential 
      :beneficiary (y / you 
            :op1 (a / accident)) 
      :topic (i / it))

# ::snt one of the twin reactors has been out of commission since february following an accident
# ::tok one of the twin reactors has been out of commission since february following an accident
# ::alignments 14-15|0.0.1 11-12|0.0.0+0.0 10-11|0.0.0.0 9-10|0 4-5|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:29.734
# ::node	0	commission	9-10
# ::node	0.0	date-entity	11-12
# ::node	0.0.0	2	11-12
# ::node	0.0.0.0	since	10-11
# ::node	0.0.1	accident	14-15
# ::node	0.0.1.0	reactor	4-5
# ::root	0	commission
# ::edge	2	mod	since	0.0.0	0.0.0.0	
# ::edge	accident	poss	reactor	0.0.1	0.0.1.0	
# ::edge	commission	time	date-entity	0	0.0	
# ::edge	date-entity	month	2	0.0	0.0.0	
# ::edge	date-entity	name	accident	0.0	0.0.1	
(c / commission 
      :time (d / date-entity 
            :month (2 / 2 
                  :mod (s / since)) 
            :name (a / accident 
                  :poss (r / reactor))))

# ::snt   i saw the article and figured it was some kind of terrible accident
# ::tok i saw the article and figured it was some kind of terrible accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:29.734
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt by accident
# ::tok by accident
# ::alignments 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:29.737
# ::node	0	accident	1-2
# ::root	0	accident
(a / accident)

# ::snt the children all come together because they and their parents have now entered narnia for ever not by the magic of stepping through a wardrobe but through an actual railway accident a real death
# ::tok the children all come together because they and their parents have now entered narnia for ever not by the magic of stepping through a wardrobe but through an actual railway accident a real death
# ::alignments 33-34|0.1 32-33|0.1.1 30-31|0.1.2 29-30|0.1.2.0 28-29|0.1.2.0.0 25-26|0 21-22|0.0 19-20|0.0.0 15-16|0.1.0 12-13|0.0.0.0.0 11-12|0.0.0.0.0.2 9-10|0.0.0.0.1.0.1+0.0.0.0.1.0 7-8|0.0.0.0 6-7|0.0.0.0.1 5-6|0.0.0.0.0.0 4-5|0.0.0.0.0.0.0 2-3|0.0.0.0.1.0.0 1-2|0.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:30.095
# ::node	0	contrast-01	25-26
# ::node	0.0	step-03	21-22
# ::node	0.0.0	magic	19-20
# ::node	0.0.0.0	and	7-8
# ::node	0.0.0.0.0	enter-01	12-13
# ::node	0.0.0.0.0.0	cause-01	5-6
# ::node	0.0.0.0.0.0.0	together	4-5
# ::node	0.0.0.0.0.1	child	1-2
# ::node	0.0.0.0.0.2	now	11-12
# ::node	0.0.0.0.1	they	6-7
# ::node	0.0.0.0.1.0	have-rel-role-91	9-10
# ::node	0.0.0.0.1.0.0	all	2-3
# ::node	0.0.0.0.1.0.1	parent	9-10
# ::node	0.1	die-01	33-34
# ::node	0.1.0	ever	15-16
# ::node	0.1.1	real	32-33
# ::node	0.1.2	accident	30-31
# ::node	0.1.2.0	railway	29-30
# ::node	0.1.2.0.0	actual	28-29
# ::root	0	contrast-01
# ::edge	accident	location	railway	0.1.2	0.1.2.0	
# ::edge	and	op1	they	0.0.0.0	0.0.0.0.1	
# ::edge	and	op2	magic	0.0.0.0	0.0.0	
# ::edge	cause-01	ARG0	enter-01	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	cause-01	ARG1	together	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	contrast-01	ARG2	die-01	0	0.1	
# ::edge	die-01	ARG1	ever	0.1	0.1.0	
# ::edge	die-01	mod	accident	0.1	0.1.2	
# ::edge	die-01	mod	real	0.1	0.1.1	
# ::edge	enter-01	ARG0	and	0.0.0.0.0	0.0.0.0	
# ::edge	enter-01	ARG1	child	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	enter-01	time	now	0.0.0.0.0	0.0.0.0.0.2	
# ::edge	have-rel-role-91	ARG0	all	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	have-rel-role-91	ARG1	they	0.0.0.0.1.0	0.0.0.0.1	
# ::edge	have-rel-role-91	ARG2	parent	0.0.0.0.1.0	0.0.0.0.1.0.1	
# ::edge	railway	mod	actual	0.1.2.0	0.1.2.0.0	
# ::edge	step-03	ARG0	magic	0.0	0.0.0	
# ::edge	step-03	ARG1	contrast-01	0.0	0	
(c / contrast-01 
      :ARG1-of (s / step-03 
            :ARG0 (m / magic 
                  :op-of (a3 / and 
                        :ARG0-of (e2 / enter-01 
                              :ARG0-of (c2 / cause-01 
                                    :ARG1 (t2 / together)) 
                              :ARG1 (c3 / child) 
                              :time (n / now)) 
                        :op1 (t / they 
                              :ARG1-of (h / have-rel-role-91 
                                    :ARG0 (a4 / all) 
                                    :ARG2 (p / parent)))))) 
      :ARG2 (d / die-01 
            :ARG1 (e / ever) 
            :mod (r / real) 
            :mod (a / accident 
                  :location (r2 / railway 
                        :mod (a2 / actual)))))

# ::snt the 33yearold ontong in his benefit year after 15 seasons with glamorgan was hurt in a car accident last year
# ::tok the 33yearold ontong in his benefit year after 15 seasons with glamorgan was hurt in a car accident last year
# ::alignments 19-20|0.2 18-19|0.2.0 17-18|0.0 16-17|0.0.0 13-14|0 8-9|0.1.1.0 7-8|0.1 6-7|0.1.0 5-6|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:30.136
# ::node	0	hurt-01	13-14
# ::node	0.0	accident	17-18
# ::node	0.0.0	car	16-17
# ::node	0.1	after	7-8
# ::node	0.1.0	year	6-7
# ::node	0.1.1	benefit-01	5-6
# ::node	0.1.1.0	15	8-9
# ::node	0.2	year	19-20
# ::node	0.2.0	last	18-19
# ::root	0	hurt-01
# ::edge	accident	location	car	0.0	0.0.0	
# ::edge	after	op1	hurt-01	0.1	0	
# ::edge	benefit-01	ARG1	15	0.1.1	0.1.1.0	
# ::edge	benefit-01	location	after	0.1.1	0.1	
# ::edge	hurt-01	ARG1	accident	0	0.0	
# ::edge	hurt-01	time	year	0	0.2	
# ::edge	year	location	after	0.1.0	0.1	
# ::edge	year	mod	last	0.2	0.2.0	
(h / hurt-01 
      :ARG1 (a / accident 
            :location (c / car)) 
      :op-of (a2 / after 
            :location-of (y2 / year) 
            :location-of (b / benefit-01 
                  :ARG1 15)) 
      :time (y / year 
            :mod (l / last)))

# ::snt   even at a 50mg level a young person was three times more likely to have an accident sir bernard said, the main cause of death among those aged 1624 was in a drinkrelated road accident
# ::tok even at a 50mg level a young person was three times more likely to have an accident sir bernard said , the main cause of death among those aged 1624 was in a drinkrelated road accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:30.136
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt they went into the lounge sat down in deep cretonnecovered armchairs and nora fanshawe said  mr updike wouldnt tell me the details of the accident
# ::tok they went into the lounge sat down in deep cretonnecovered armchairs and nora fanshawe said mr updike wouldnt tell me the details of the accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:30.138
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt but earlier research has suggested that personality differences in offshore workers might be associated with both accident rates job satisfaction and occupational stress according to a paper prepared by dr flin
# ::tok but earlier research has suggested that personality differences in offshore workers might be associated with both accident rates job satisfaction and occupational stress according to a paper prepared by dr flin
# ::alignments 27-28|0.0.1.0.2.1 26-27|0.0.1.0.2.1.1 22-23|0.0.1.0.2 20-21|0.0.1.0 19-20|0.0.1.0.1 18-19|0.0.1.0.1.0 17-18|0.0.1.0.2.0 16-17|0.0.1.1 15-16|0.0.1.0.1.1 13-14|0.0.1 10-11|0.0.1.0.0.0+0.0.1.0.0 9-10|0.0.1.0.0.1 6-7|0.0.1.0.2.1.0 4-5|0.0 2-3|0.0.0 1-2|0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:30.588
# ::node	0	contrast-01	0-1
# ::node	0.0	suggest-01	4-5
# ::node	0.0.0	research-01	2-3
# ::node	0.0.1	associate-01	13-14
# ::node	0.0.1.0	and	20-21
# ::node	0.0.1.0.0	person	10-11
# ::node	0.0.1.0.0.0	work-01	10-11
# ::node	0.0.1.0.0.1	offshore	9-10
# ::node	0.0.1.0.1	satisfy-01	19-20
# ::node	0.0.1.0.1.0	job	18-19
# ::node	0.0.1.0.1.1	both	15-16
# ::node	0.0.1.0.2	stress-01	22-23
# ::node	0.0.1.0.2.0	rate	17-18
# ::node	0.0.1.0.2.1	prepare-02	27-28
# ::node	0.0.1.0.2.1.0	personality	6-7
# ::node	0.0.1.0.2.1.1	paper	26-27
# ::node	0.0.1.1	accident	16-17
# ::node	0.1	early	1-2
# ::root	0	contrast-01
# ::edge	and	op1	person	0.0.1.0	0.0.1.0.0	
# ::edge	and	op2	satisfy-01	0.0.1.0	0.0.1.0.1	
# ::edge	and	op3	stress-01	0.0.1.0	0.0.1.0.2	
# ::edge	associate-01	ARG1	and	0.0.1	0.0.1.0	
# ::edge	associate-01	ARG2	accident	0.0.1	0.0.1.1	
# ::edge	contrast-01	ARG1	suggest-01	0	0.0	
# ::edge	contrast-01	ARG2	early	0	0.1	
# ::edge	person	mod	offshore	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	prepare-02	ARG0	personality	0.0.1.0.2.1	0.0.1.0.2.1.0	
# ::edge	prepare-02	ARG1	paper	0.0.1.0.2.1	0.0.1.0.2.1.1	
# ::edge	prepare-02	ARG2	stress-01	0.0.1.0.2.1	0.0.1.0.2	
# ::edge	satisfy-01	ARG1	job	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	satisfy-01	mod	both	0.0.1.0.1	0.0.1.0.1.1	
# ::edge	stress-01	ARG1	rate	0.0.1.0.2	0.0.1.0.2.0	
# ::edge	suggest-01	ARG0	research-01	0.0	0.0.0	
# ::edge	suggest-01	ARG1	associate-01	0.0	0.0.1	
# ::edge	work-01	ARG0	person	0.0.1.0.0.0	0.0.1.0.0	
(c / contrast-01 
      :ARG1 (s3 / suggest-01 
            :ARG0 (r2 / research-01) 
            :ARG1 (a3 / associate-01 
                  :ARG1 (a / and 
                        :op1 (p3 / person 
                              :ARG0-of (w / work-01) 
                              :mod (o / offshore)) 
                        :op2 (s2 / satisfy-01 
                              :ARG1 (j / job) 
                              :mod (b / both)) 
                        :op3 (s / stress-01 
                              :ARG1 (r / rate) 
                              :ARG2-of (p / prepare-02 
                                    :ARG0 (p4 / personality) 
                                    :ARG1 (p2 / paper)))) 
                  :ARG2 (a2 / accident))) 
      :ARG2 (e / early))

# ::snt if as in the united states and sweden they published accident and casualty rates of different makes and models of cars the consumer would be able to make an informed choice
# ::tok if as in the united states and sweden they published accident and casualty rates of different makes and models of cars the consumer would be able to make an informed choice
# ::alignments 29-30|0 25-26|0.0.1 22-23|0.0 20-21|0.0.1.0 18-19|0.0.0 17-18|0.0.0.0 15-16|0.0.0.0.0 13-14|0.0.0.0.1.0.0 12-13|0.0.0.0.1.0.0.0 11-12|0.0.0.0.1.2 10-11|0.0.0.0.1.2.0 9-10|0.0.0.0.1 8-9|0.0.0.0.1.0 6-7|0.0.0.0.1.1 4-6|0.0.0.0.1.1.0.0.0+0.0.0.0.1.1.0.0.1+0.0.0.0.1.1.0.0+0.0.0.0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:30.800
# ::node	0	inform-01	29-30
# ::node	0.0	consume-01	22-23
# ::node	0.0.0	model	18-19
# ::node	0.0.0.0	and	17-18
# ::node	0.0.0.0.0	differ-02	15-16
# ::node	0.0.0.0.1	publish-01	9-10
# ::node	0.0.0.0.1.0	they	8-9
# ::node	0.0.0.0.1.0.0	rate	13-14
# ::node	0.0.0.0.1.0.0.0	casualty	12-13
# ::node	0.0.0.0.1.1	and	6-7
# ::node	0.0.0.0.1.1.0	country	4-6
# ::node	0.0.0.0.1.1.0.0	name	4-6
# ::node	0.0.0.0.1.1.0.0.0	"states"	4-6
# ::node	0.0.0.0.1.1.0.0.1	"united"	4-6
# ::node	0.0.0.0.1.2	and	11-12
# ::node	0.0.0.0.1.2.0	accident	10-11
# ::node	0.0.1	possible	25-26
# ::node	0.0.1.0	car	20-21
# ::root	0	inform-01
# ::edge	and	op1	country	0.0.0.0.1.1	0.0.0.0.1.1.0	
# ::edge	and	op1	model	0.0.0.0	0.0.0	
# ::edge	and	op1	publish-01	0.0.0.0.1.2	0.0.0.0.1	
# ::edge	and	op2	accident	0.0.0.0.1.2	0.0.0.0.1.2.0	
# ::edge	and	op2	publish-01	0.0.0.0.1.1	0.0.0.0.1	
# ::edge	car	mod	possible	0.0.1.0	0.0.1	
# ::edge	consume-01	ARG1	model	0.0	0.0.0	
# ::edge	country	name	name	0.0.0.0.1.1.0	0.0.0.0.1.1.0.0	
# ::edge	differ-02	ARG1	and	0.0.0.0.0	0.0.0.0	
# ::edge	inform-01	ARG1	consume-01	0	0.0	
# ::edge	name	op1	"states"	0.0.0.0.1.1.0.0	0.0.0.0.1.1.0.0.0	
# ::edge	name	op2	"united"	0.0.0.0.1.1.0.0	0.0.0.0.1.1.0.0.1	
# ::edge	possible	domain	consume-01	0.0.1	0.0	
# ::edge	publish-01	ARG0	they	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	publish-01	ARG1	and	0.0.0.0.1	0.0.0.0	
# ::edge	rate	mod	casualty	0.0.0.0.1.0.0	0.0.0.0.1.0.0.0	
# ::edge	rate	poss	they	0.0.0.0.1.0.0	0.0.0.0.1.0	
(i / inform-01 
      :ARG1 (c / consume-01 
            :ARG1 (m / model 
                  :op-of (a / and 
                        :ARG1-of (d / differ-02) 
                        :ARG1-of (p2 / publish-01 
                              :ARG0 (t / they 
                                    :poss-of (r / rate 
                                          :mod (c3 / casualty))) 
                              :op-of (a4 / and 
                                    :op1 (c4 / country 
                                          :name (n / name 
                                                :op1 "states" 
                                                :op2 "united"))) 
                              :op-of (a2 / and 
                                    :op1 (a3 / accident))))) 
            :domain-of (p / possible 
                  :mod-of (c2 / car))))

# ::snt during the last 23 years i have looked at thousands of socalled accidents in many countries, i cannot remember a single one where the risks which gave rise to the accident could not have been measured and prevented with effective safety training management commitment and dash, we will do our utmost to preserve our most important asset the skills contained in our workforce when i visit the workplace i see the telltale signs of accidents in the making dash
# ::tok during the last 23 years i have looked at thousands of socalled accidents in many countries , i cannot remember a single one where the risks which gave rise to the accident could not have been measured and prevented with effective safety training management commitment and dash , we will do our utmost to preserve our most important asset the skills contained in our workforce when i visit the workplace i see the telltale signs of accidents in the making dash
# ::alignments 76-77|0.0.0.0.0.0.2.1.1.0 74-75|0.0.0.0.0.0.2.1.1 71-72|0.0.0.0.0.0.2.1 70-71|0.0.0.0.0.0.2.1.0 69-70|0.0.0.0.0.0.2.1.0.0 67-68|0.0.0.0.0.0.2 66-67|0.0.0.0.0.0.2.0 64-65|0.0.0.0.0.0.1 61-62|0.0.0.0.0.0 60-61|0.0.0.0.0.0.0 58-59|0.0.0.0.0 57-58|0.0.0.0.0.1 56-57|0.0.0.0.0.1.0 54-55|0.0.0.0 48-49|0.0.0 45-46|0.2 44-45|0 43-44|0.0.1.3.2 42-43|0.0.1.3 41-42|0.0.1.0 40-41|0.1 38-39|0.0 37-38|0.0.1 36-37|0.0.1.2.0 32-33|0.0.1.2 31-32|0.0.1.2.0.1.0.0 28-29|0.0.1.2.0.1.0 25-26|0.0.1.2.0.1 21-22|0.0.1.3.1 19-20|0.0.1.1 17-18|0.0.1.1.0 15-16|0.0.1.3.0 14-15|0.0.1.2.0.0 12-13|0.0.1.3.0.0 7-8|0.0.1.1.1.0 5-6|0.0.1.1.1 4-5|0.0.1.1.0.0.1+0.0.1.1.0.0 3-4|0.0.1.1.0.0.0 2-3|0.0.1.2.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:34.907
# ::node	0	commit-01	44-45
# ::node	0.0	prevent-01	38-39
# ::node	0.0.0	we	48-49
# ::node	0.0.0.0	preserve-01	54-55
# ::node	0.0.0.0.0	asset	58-59
# ::node	0.0.0.0.0.0	contain-01	61-62
# ::node	0.0.0.0.0.0.0	skill	60-61
# ::node	0.0.0.0.0.0.1	work-01	64-65
# ::node	0.0.0.0.0.0.2	visit-01	67-68
# ::node	0.0.0.0.0.0.2.0	i	66-67
# ::node	0.0.0.0.0.0.2.1	see-01	71-72
# ::node	0.0.0.0.0.0.2.1.0	i	70-71
# ::node	0.0.0.0.0.0.2.1.0.0	workplace	69-70
# ::node	0.0.0.0.0.0.2.1.1	sign	74-75
# ::node	0.0.0.0.0.0.2.1.1.0	accident	76-77
# ::node	0.0.0.0.0.1	important	57-58
# ::node	0.0.0.0.0.1.0	most	56-57
# ::node	0.0.1	and	37-38
# ::node	0.0.1.0	safe-41	41-42
# ::node	0.0.1.1	remember-01	19-20
# ::node	0.0.1.1.0	i	17-18
# ::node	0.0.1.1.0.0	temporal-quantity	4-5
# ::node	0.0.1.1.0.0.0	23	3-4
# ::node	0.0.1.1.0.0.1	year	4-5
# ::node	0.0.1.1.1	i	5-6
# ::node	0.0.1.1.1.0	look-01	7-8
# ::node	0.0.1.2	possible	32-33
# ::node	0.0.1.2.0	measure-01	36-37
# ::node	0.0.1.2.0.0	many	14-15
# ::node	0.0.1.2.0.1	risk-01	25-26
# ::node	0.0.1.2.0.1.0	rise-01	28-29
# ::node	0.0.1.2.0.1.0.0	accident	31-32
# ::node	0.0.1.2.0.1.1	last	2-3
# ::node	0.0.1.3	train-01	42-43
# ::node	0.0.1.3.0	country	15-16
# ::node	0.0.1.3.0.0	accident	12-13
# ::node	0.0.1.3.1	single	21-22
# ::node	0.0.1.3.2	manage-01	43-44
# ::node	0.1	effective	40-41
# ::node	0.2	and	45-46
# ::root	0	commit-01
# ::edge	accident	poss	country	0.0.1.3.0.0	0.0.1.3.0	
# ::edge	and	op1	commit-01	0.2	0	
# ::edge	and	op1	remember-01	0.0.1	0.0.1.1	
# ::edge	and	op2	possible	0.0.1	0.0.1.2	
# ::edge	and	op3	prevent-01	0.0.1	0.0	
# ::edge	and	op4	train-01	0.0.1	0.0.1.3	
# ::edge	asset	mod	important	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	commit-01	mod	effective	0	0.1	
# ::edge	contain-01	ARG0	skill	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	contain-01	ARG1	asset	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	contain-01	ARG2	work-01	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	contain-01	time	visit-01	0.0.0.0.0.0	0.0.0.0.0.0.2	
# ::edge	important	degree	most	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	look-01	ARG0	i	0.0.1.1.1.0	0.0.1.1.1	
# ::edge	manage-01	mod	train-01	0.0.1.3.2	0.0.1.3	
# ::edge	measure-01	ARG0	many	0.0.1.2.0	0.0.1.2.0.0	
# ::edge	measure-01	ARG1	risk-01	0.0.1.2.0	0.0.1.2.0.1	
# ::edge	possible	domain	measure-01	0.0.1.2	0.0.1.2.0	
# ::edge	preserve-01	ARG0	we	0.0.0.0	0.0.0	
# ::edge	preserve-01	ARG1	asset	0.0.0.0	0.0.0.0.0	
# ::edge	prevent-01	ARG0	we	0.0	0.0.0	
# ::edge	prevent-01	ARG1	commit-01	0.0	0	
# ::edge	remember-01	ARG0	i	0.0.1.1	0.0.1.1.0	
# ::edge	remember-01	ARG1	i	0.0.1.1	0.0.1.1.1	
# ::edge	rise-01	ARG0	risk-01	0.0.1.2.0.1.0	0.0.1.2.0.1	
# ::edge	rise-01	ARG1	accident	0.0.1.2.0.1.0	0.0.1.2.0.1.0.0	
# ::edge	risk-01	ARG1	last	0.0.1.2.0.1	0.0.1.2.0.1.1	
# ::edge	safe-41	ARG1	and	0.0.1.0	0.0.1	
# ::edge	see-01	ARG0	i	0.0.0.0.0.0.2.1	0.0.0.0.0.0.2.1.0	
# ::edge	see-01	ARG1	sign	0.0.0.0.0.0.2.1	0.0.0.0.0.0.2.1.1	
# ::edge	sign	topic	accident	0.0.0.0.0.0.2.1.1	0.0.0.0.0.0.2.1.1.0	
# ::edge	temporal-quantity	poss	i	0.0.1.1.0.0	0.0.1.1.0	
# ::edge	temporal-quantity	quant	23	0.0.1.1.0.0	0.0.1.1.0.0.0	
# ::edge	temporal-quantity	unit	year	0.0.1.1.0.0	0.0.1.1.0.0.1	
# ::edge	train-01	ARG0	country	0.0.1.3	0.0.1.3.0	
# ::edge	train-01	ARG1	single	0.0.1.3	0.0.1.3.1	
# ::edge	visit-01	ARG0	i	0.0.0.0.0.0.2	0.0.0.0.0.0.2.0	
# ::edge	visit-01	ARG1	see-01	0.0.0.0.0.0.2	0.0.0.0.0.0.2.1	
# ::edge	workplace	poss	i	0.0.0.0.0.0.2.1.0.0	0.0.0.0.0.0.2.1.0	
(c2 / commit-01 
      :ARG1-of (p2 / prevent-01 
            :ARG0 (w3 / we 
                  :ARG0-of (p / preserve-01 
                        :ARG1 (a2 / asset 
                              :ARG1-of (c / contain-01 
                                    :ARG0 (s3 / skill) 
                                    :ARG2 (w2 / work-01) 
                                    :time (v / visit-01 
                                          :ARG0 (i2 / i) 
                                          :ARG1 (s2 / see-01 
                                                :ARG0 (i / i 
                                                      :poss-of (w / workplace)) 
                                                :ARG1 (s / sign 
                                                      :topic (a / accident))))) 
                              :mod (i3 / important 
                                    :degree (m / most))))) 
            :op-of (a4 / and 
                  :ARG1-of (s4 / safe-41) 
                  :op1 (r3 / remember-01 
                        :ARG0 (i4 / i 
                              :poss-of (t2 / temporal-quantity 
                                    :quant 23 
                                    :unit (y / year))) 
                        :ARG1 (i5 / i 
                              :ARG0-of (l / look-01))) 
                  :op2 (p3 / possible 
                        :domain (m3 / measure-01 
                              :ARG0 (m4 / many) 
                              :ARG1 (r2 / risk-01 
                                    :ARG0-of (r / rise-01 
                                          :ARG1 (a5 / accident)) 
                                    :ARG1 (l2 / last)))) 
                  :op3 (t / train-01 
                        :ARG0 (c3 / country 
                              :poss-of (a6 / accident)) 
                        :ARG1 (s5 / single) 
                        :mod-of (m2 / manage-01)))) 
      :mod (e / effective) 
      :op-of (a3 / and))

# ::snt moreover apart from supporting a marginal role for legal aid societiesfo id14 the legal establishment contributed little to relieve the plight of accident victims and thus implicitly ratified the status quo including the practices of the segregated plaintiffs bar
# ::tok moreover apart from supporting a marginal role for legal aid societiesfo id14 the legal establishment contributed little to relieve the plight of accident victims and thus implicitly ratified the status quo including the practices of the segregated plaintiffs bar
# ::alignments 38-39|0 33-34|0.1 29-30|0.0.1.2.0 27-28|0.0.1.2 24-25|0.0.1 23-24|0.0.0.0.0.0 22-23|0.0.0.0.0.0.0 20-21|0.0.0.0.0 18-19|0.0.0.0 16-17|0.0.0.0.1 15-16|0.0 14-15|0.0.0 13-14|0.0.0.2 9-10|0.0.1.1 8-9|0.0.0.1 6-7|0.0.1.0.0 3-4|0.0.1.0 1-2|0.0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:35.327
# ::node	0	bar-01	38-39
# ::node	0.0	contribute-01	15-16
# ::node	0.0.0	establish-01	14-15
# ::node	0.0.0.0	relieve-01	18-19
# ::node	0.0.0.0.0	plight	20-21
# ::node	0.0.0.0.0.0	victim	23-24
# ::node	0.0.0.0.0.0.0	accident	22-23
# ::node	0.0.0.0.1	little	16-17
# ::node	0.0.0.1	legal	8-9
# ::node	0.0.0.2	legal	13-14
# ::node	0.0.1	and	24-25
# ::node	0.0.1.0	support-01	3-4
# ::node	0.0.1.0.0	role	6-7
# ::node	0.0.1.0.1	apart	1-2
# ::node	0.0.1.1	aid-01	9-10
# ::node	0.0.1.2	ratify-01	27-28
# ::node	0.0.1.2.0	status	29-30
# ::node	0.1	practice-01	33-34
# ::root	0	bar-01
(b / bar-01 
      :ARG1-of (c / contribute-01 
            :ARG0 (e / establish-01 
                  :ARG0-of (r2 / relieve-01 
                        :ARG1 (p2 / plight 
                              :mod-of (v / victim 
                                    :mod (a2 / accident))) 
                        :domain-of (l / little)) 
                  :ARG1 (l3 / legal) 
                  :mod (l2 / legal)) 
            :op-of (a / and 
                  :op1 (s2 / support-01 
                        :ARG1 (r3 / role) 
                        :mod (a4 / apart)) 
                  :op2 (a3 / aid-01) 
                  :op3 (r / ratify-01 
                        :ARG1 (s / status)))) 
      :ARG1-of (p / practice-01))

# ::snt later she listened to the testimony of eyewitnesses at the fatal accident inquiry held in dunoon in september
# ::tok later she listened to the testimony of eyewitnesses at the fatal accident inquiry held in dunoon in september
# ::alignments 17-18|0.2.0.0+0.2.0 12-13|0.1.0 11-12|0.1.0.0 10-11|0.1.0.1 5-6|0.1 2-3|0 1-2|0.0 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:35.367
# ::node	0	listen-01	2-3
# ::node	0.0	she	1-2
# ::node	0.1	testify-01	5-6
# ::node	0.1.0	inquire-01	12-13
# ::node	0.1.0.0	accident	11-12
# ::node	0.1.0.1	fatal	10-11
# ::node	0.2	late	0-1
# ::node	0.2.0	date-entity	17-18
# ::node	0.2.0.0	9	17-18
# ::root	0	listen-01
# ::edge	date-entity	month	9	0.2.0	0.2.0.0	
# ::edge	inquire-01	ARG0	accident	0.1.0	0.1.0.0	
# ::edge	inquire-01	mod	fatal	0.1.0	0.1.0.1	
# ::edge	late	op1	date-entity	0.2	0.2.0	
# ::edge	listen-01	ARG0	she	0	0.0	
# ::edge	listen-01	ARG1	testify-01	0	0.1	
# ::edge	listen-01	time	late	0	0.2	
# ::edge	testify-01	ARG1	inquire-01	0.1	0.1.0	
(l / listen-01 
      :ARG0 (s / she) 
      :ARG1 (t / testify-01 
            :ARG1 (i / inquire-01 
                  :ARG0 (a / accident) 
                  :mod (f / fatal))) 
      :time (l2 / late 
            :op1 (d / date-entity 
                  :month 9)))

# ::snt a craft teacher at bicester school escaped serious injury in a road accident yesterday wednesday july 11
# ::tok a craft teacher at bicester school escaped serious injury in a road accident yesterday wednesday july 11
# ::alignments 16-17|0.1.0 15-16|0.2.0+0.2 13-14|0.0.0.0 12-13|0.1.1 11-12|0.1.1.0 8-9|0.1 7-8|0.1.2 6-7|0 5-6|0.0.1.0 2-3|0.0.0+0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:35.637
# ::node	0	escape-01	6-7
# ::node	0.0	person	2-3
# ::node	0.0.0	teach-01	2-3
# ::node	0.0.0.0	yesterday	13-14
# ::node	0.0.1	craft-01	1-2
# ::node	0.0.1.0	school	5-6
# ::node	0.1	injure-01	8-9
# ::node	0.1.0	11	16-17
# ::node	0.1.1	accident	12-13
# ::node	0.1.1.0	road	11-12
# ::node	0.1.2	serious	7-8
# ::node	0.2	date-entity	15-16
# ::node	0.2.0	7	15-16
# ::root	0	escape-01
# ::edge	accident	location	road	0.1.1	0.1.1.0	
# ::edge	craft-01	ARG0	person	0.0.1	0.0	
# ::edge	craft-01	ARG1	school	0.0.1	0.0.1.0	
# ::edge	date-entity	month	7	0.2	0.2.0	
# ::edge	escape-01	ARG0	person	0	0.0	
# ::edge	escape-01	ARG1	injure-01	0	0.1	
# ::edge	escape-01	time	date-entity	0	0.2	
# ::edge	injure-01	ARG0	11	0.1	0.1.0	
# ::edge	injure-01	ARG1	accident	0.1	0.1.1	
# ::edge	injure-01	mod	serious	0.1	0.1.2	
# ::edge	teach-01	ARG0	person	0.0.0	0.0	
# ::edge	teach-01	ARG1	yesterday	0.0.0	0.0.0.0	
(e / escape-01 
      :ARG0 (p / person 
            :ARG0-of (t / teach-01 
                  :ARG1 (y / yesterday)) 
            :ARG0-of (c / craft-01 
                  :ARG1 (s2 / school))) 
      :ARG1 (i / injure-01 
            :ARG0 11 
            :ARG1 (a / accident 
                  :location (r / road)) 
            :mod (s / serious)) 
      :time (d / date-entity 
            :month 7))

# ::snt the accident occurred near the end of a lane closure and the carriageway was blocked for a short time
# ::tok the accident occurred near the end of a lane closure and the carriageway was blocked for a short time
# ::alignments 18-19|0.0.0.1 17-18|0.0.0.1.0 14-15|0.0.0 10-11|0 3-4|0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:35.682
# ::node	0	and	10-11
# ::node	0.0	near	3-4
# ::node	0.0.0	block-01	14-15
# ::node	0.0.0.0	accident	1-2
# ::node	0.0.0.1	time	18-19
# ::node	0.0.0.1.0	short	17-18
# ::root	0	and
# ::edge	and	time	near	0	0.0	
# ::edge	block-01	ARG0	near	0.0.0	0.0	
# ::edge	block-01	ARG1	accident	0.0.0	0.0.0.0	
# ::edge	block-01	time	time	0.0.0	0.0.0.1	
# ::edge	time	mod	short	0.0.0.1	0.0.0.1.0	
(a / and 
      :time (n / near 
            :ARG0-of (b / block-01 
                  :ARG1 (a2 / accident) 
                  :time (t / time 
                        :mod (s / short)))))

# ::snt when theres a fatal accident on the roads we do nothing because people dont think there but for the grace of god go i
# ::tok when theres a fatal accident on the roads we do nothing because people dont think there but for the grace of god go i
# ::alignments 23-24|0.0.0 21-22|0.0.1.0.1 19-20|0.0.1.0 16-17|0.0.1 14-15|0.0 11-12|0 10-11|0.1 8-9|0.0.1.0.0 7-8|0.0.1.0.0.0.0 4-5|0.0.1.0.0.0 3-4|0.0.1.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:35.917
# ::node	0	cause-01	11-12
# ::node	0.0	think-01	14-15
# ::node	0.0.0	i	23-24
# ::node	0.0.1	contrast-01	16-17
# ::node	0.0.1.0	grace-01	19-20
# ::node	0.0.1.0.0	we	8-9
# ::node	0.0.1.0.0.0	accident	4-5
# ::node	0.0.1.0.0.0.0	road	7-8
# ::node	0.0.1.0.0.0.1	fatal	3-4
# ::node	0.0.1.0.1	god	21-22
# ::node	0.1	nothing	10-11
# ::root	0	cause-01
# ::edge	accident	location	road	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	accident	mod	fatal	0.0.1.0.0.0	0.0.1.0.0.0.1	
# ::edge	accident	poss	we	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	cause-01	ARG0	think-01	0	0.0	
# ::edge	cause-01	ARG1	nothing	0	0.1	
# ::edge	contrast-01	ARG1	think-01	0.0.1	0.0	
# ::edge	contrast-01	ARG2	grace-01	0.0.1	0.0.1.0	
# ::edge	grace-01	ARG0	we	0.0.1.0	0.0.1.0.0	
# ::edge	grace-01	ARG1	god	0.0.1.0	0.0.1.0.1	
# ::edge	think-01	ARG0	i	0.0	0.0.0	
(c2 / cause-01 
      :ARG0 (t / think-01 
            :ARG0 (i / i) 
            :ARG1-of (c / contrast-01 
                  :ARG2 (g2 / grace-01 
                        :ARG0 (w / we 
                              :poss-of (a / accident 
                                    :location (r / road) 
                                    :mod (f / fatal))) 
                        :ARG1 (g / god)))) 
      :ARG1 (n / nothing))

# ::snt the royal society for the prevention of accidents
# ::tok the royal society for the prevention of accidents
# ::alignments 7-8|0.0.0.0 5-6|0.0.0 2-3|0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:35.926
# ::node	0	royal	1-2
# ::node	0.0	society	2-3
# ::node	0.0.0	prevent-01	5-6
# ::node	0.0.0.0	accident	7-8
# ::root	0	royal
(r / royal 
      :mod-of (s / society 
            :time-of (p / prevent-01 
                  :ARG1 (a / accident))))

# ::snt each year 15 children die 75000 children in the country are injured and thousands of adults need hospital treatment because of garden accidents
# ::tok each year 15 children die 75000 children in the country are injured and thousands of adults need hospital treatment because of garden accidents
# ::alignments 22-23|0.0 21-22|0.0.0 19-20|0 18-19|0.1.1 17-18|0.1.1.0 16-17|0.1 15-16|0.1.2.2.1 12-13|0.1.2 11-12|0.1.2.2 9-10|0.1.2.1 6-7|0.1.0 4-5|0.1.2.0 3-4|0.1.2.0.0 2-3|0.1.1.1 1-2|0.1.2.2.0 0-1|0.1.2.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:36.328
# ::node	0	cause-01	19-20
# ::node	0.0	accident	22-23
# ::node	0.0.0	garden	21-22
# ::node	0.1	need-01	16-17
# ::node	0.1.0	child	6-7
# ::node	0.1.1	treat-03	18-19
# ::node	0.1.1.0	hospital	17-18
# ::node	0.1.1.1	15	2-3
# ::node	0.1.2	and	12-13
# ::node	0.1.2.0	die-01	4-5
# ::node	0.1.2.0.0	child	3-4
# ::node	0.1.2.1	country	9-10
# ::node	0.1.2.2	injure-01	11-12
# ::node	0.1.2.2.0	year	1-2
# ::node	0.1.2.2.0.0	each	0-1
# ::node	0.1.2.2.1	adult	15-16
# ::root	0	cause-01
# ::edge	accident	mod	garden	0.0	0.0.0	
# ::edge	and	op1	country	0.1.2	0.1.2.1	
# ::edge	and	op2	injure-01	0.1.2	0.1.2.2	
# ::edge	and	op3	need-01	0.1.2	0.1	
# ::edge	cause-01	ARG0	accident	0	0.0	
# ::edge	cause-01	ARG1	need-01	0	0.1	
# ::edge	die-01	ARG0	child	0.1.2.0	0.1.2.0.0	
# ::edge	die-01	ARG1	and	0.1.2.0	0.1.2	
# ::edge	injure-01	ARG0	year	0.1.2.2	0.1.2.2.0	
# ::edge	injure-01	ARG1	adult	0.1.2.2	0.1.2.2.1	
# ::edge	need-01	ARG0	child	0.1	0.1.0	
# ::edge	need-01	ARG1	treat-03	0.1	0.1.1	
# ::edge	treat-03	ARG0	hospital	0.1.1	0.1.1.0	
# ::edge	treat-03	ARG1	15	0.1.1	0.1.1.1	
# ::edge	year	mod	each	0.1.2.2.0	0.1.2.2.0.0	
(c / cause-01 
      :ARG0 (a / accident 
            :mod (g / garden)) 
      :ARG1 (n / need-01 
            :ARG0 (c3 / child) 
            :ARG1 (t / treat-03 
                  :ARG0 (h / hospital) 
                  :ARG1 15) 
            :op-of (a3 / and 
                  :ARG1-of (d / die-01 
                        :ARG0 (c4 / child)) 
                  :op1 (c2 / country) 
                  :op2 (i / injure-01 
                        :ARG0 (y / year 
                              :mod (e / each)) 
                        :ARG1 (a2 / adult)))))

# ::snt the connection between employees health and such business policies as accident preparedness and the use of chemicals like pesticides in the workplace is clear
# ::tok the connection between employees health and such business policies as accident preparedness and the use of chemicals like pesticides in the workplace is clear
# ::alignments 23-24|0.1.0 21-22|0.0.1.0.1 16-17|0.2.0 14-15|0.2 12-13|0 11-12|0.1 10-11|0.1.1 8-9|0.0 7-8|0.0.2 6-7|0.0.0 5-6|0.0.1 4-5|0.0.1.0.0.0 3-4|0.0.1.0.0.0.0.0+0.0.1.0.0.0.0 2-3|0.0.1.0.0 1-2|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:36.477
# ::node	0	and	12-13
# ::node	0.0	policy	8-9
# ::node	0.0.0	such	6-7
# ::node	0.0.1	and	5-6
# ::node	0.0.1.0	connect-01	1-2
# ::node	0.0.1.0.0	between	2-3
# ::node	0.0.1.0.0.0	health	4-5
# ::node	0.0.1.0.0.0.0	person	3-4
# ::node	0.0.1.0.0.0.0.0	employ-01	3-4
# ::node	0.0.1.0.1	workplace	21-22
# ::node	0.0.2	business	7-8
# ::node	0.1	prepare-02	11-12
# ::node	0.1.0	clear	23-24
# ::node	0.1.1	accident	10-11
# ::node	0.2	use-01	14-15
# ::node	0.2.0	chemical	16-17
# ::root	0	and
# ::edge	and	op1	policy	0	0.0	
# ::edge	and	op1	policy	0.0.1	0.0	
# ::edge	and	op2	prepare-02	0	0.1	
# ::edge	and	op3	use-01	0	0.2	
# ::edge	between	op1	health	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	connect-01	ARG1	and	0.0.1.0	0.0.1	
# ::edge	connect-01	location	between	0.0.1.0	0.0.1.0.0	
# ::edge	connect-01	time	workplace	0.0.1.0	0.0.1.0.1	
# ::edge	employ-01	ARG1	person	0.0.1.0.0.0.0.0	0.0.1.0.0.0.0	
# ::edge	health	mod	person	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	policy	mod	such	0.0	0.0.0	
# ::edge	policy	topic	business	0.0	0.0.2	
# ::edge	prepare-02	ARG0	clear	0.1	0.1.0	
# ::edge	prepare-02	ARG1	accident	0.1	0.1.1	
# ::edge	use-01	ARG1	chemical	0.2	0.2.0	
(a / and 
      :op1 (p2 / policy 
            :mod (s / such) 
            :op-of (a3 / and 
                  :ARG1-of (c3 / connect-01 
                        :location (b2 / between 
                              :op1 (h / health 
                                    :mod (p3 / person 
                                          :ARG1-of (e / employ-01)))) 
                        :time (w / workplace))) 
            :topic (b / business)) 
      :op2 (p / prepare-02 
            :ARG0 (c / clear) 
            :ARG1 (a2 / accident)) 
      :op3 (u / use-01 
            :ARG1 (c2 / chemical)))

# ::snt   a new road safety campaign to prevent fatal accidents along the northern stretch of the a34 in oxfordshire will be launched on wednesday april 4
# ::tok a new road safety campaign to prevent fatal accidents along the northern stretch of the a34 in oxfordshire will be launched on wednesday april 4
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:36.477
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt an infection of the bladder could be causing lucy to lose control at night and other infections such as flu can also be a factor in the beginnings of nighttime accidents
# ::tok an infection of the bladder could be causing lucy to lose control at night and other infections such as flu can also be a factor in the beginnings of nighttime accidents
# ::alignments 30-31|0.1.0 24-25|0.0.0 21-22|0.0.0.0 20-21|0.0 19-20|0.1.1.2 17-18|0.1.1.1.0 16-17|0.1.1.1 15-16|0.1.1.1.1 14-15|0.1.1.1.2 13-14|0.1.1.1.2.0 11-12|0.1.1 10-11|0.1 7-8|0 5-6|0.2 1-2|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:36.718
# ::node	0	cause-01	7-8
# ::node	0.0	possible	20-21
# ::node	0.0.0	factor	24-25
# ::node	0.0.0.0	also	21-22
# ::node	0.1	lose-02	10-11
# ::node	0.1.0	accident	30-31
# ::node	0.1.1	control-01	11-12
# ::node	0.1.1.0	infection	1-2
# ::node	0.1.1.1	infect-01	16-17
# ::node	0.1.1.1.0	such	17-18
# ::node	0.1.1.1.1	other	15-16
# ::node	0.1.1.1.2	and	14-15
# ::node	0.1.1.1.2.0	night	13-14
# ::node	0.1.1.2	flu	19-20
# ::node	0.2	possible	5-6
# ::root	0	cause-01
# ::edge	and	op1	night	0.1.1.1.2	0.1.1.1.2.0	
# ::edge	and	op2	infect-01	0.1.1.1.2	0.1.1.1	
# ::edge	cause-01	ARG0	possible	0	0.0	
# ::edge	cause-01	ARG1	lose-02	0	0.1	
# ::edge	control-01	ARG0	infection	0.1.1	0.1.1.0	
# ::edge	control-01	ARG1	infect-01	0.1.1	0.1.1.1	
# ::edge	control-01	time	flu	0.1.1	0.1.1.2	
# ::edge	factor	mod	also	0.0.0	0.0.0.0	
# ::edge	infect-01	ARG1	such	0.1.1.1	0.1.1.1.0	
# ::edge	infect-01	mod	other	0.1.1.1	0.1.1.1.1	
# ::edge	lose-02	ARG0	accident	0.1	0.1.0	
# ::edge	lose-02	ARG1	control-01	0.1	0.1.1	
# ::edge	possible	domain	cause-01	0.2	0	
# ::edge	possible	domain	factor	0.0	0.0.0	
(c2 / cause-01 
      :ARG0 (p / possible 
            :domain (f / factor 
                  :mod (a2 / also))) 
      :ARG1 (l / lose-02 
            :ARG0 (a / accident) 
            :ARG1 (c / control-01 
                  :ARG0 (i2 / infection) 
                  :ARG1 (i / infect-01 
                        :ARG1 (s / such) 
                        :mod (o / other) 
                        :op-of (a3 / and 
                              :op1 (n / night))) 
                  :time (f2 / flu))) 
      :domain-of (p2 / possible))

# ::snt subsequent investigation suggested that sabotage and not accident was responsible for this disaster and the finger of suspicion was pointed at one of the brothers
# ::tok subsequent investigation suggested that sabotage and not accident was responsible for this disaster and the finger of suspicion was pointed at one of the brothers
# ::alignments 24-25|0.1.2.0.1.0+0.1.2.0.1 19-20|0.1.2.0 17-18|0.1.0.0.0 15-16|0.1.2.0.0 13-14|0.1.2 12-13|0.1.1 11-12|0.1.1.0 9-10|0.1 7-8|0.1.0.0 5-6|0.1.0 2-3|0 1-2|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:36.797
# ::node	0	suggest-01	2-3
# ::node	0.0	investigate-01	1-2
# ::node	0.0.0	subsequent	0-1
# ::node	0.1	responsible-41	9-10
# ::node	0.1.0	and	5-6
# ::node	0.1.0.0	accident	7-8
# ::node	0.1.0.0.0	suspect-01	17-18
# ::node	0.1.1	disaster	12-13
# ::node	0.1.1.0	this	11-12
# ::node	0.1.2	and	13-14
# ::node	0.1.2.0	point-02	19-20
# ::node	0.1.2.0.0	finger	15-16
# ::node	0.1.2.0.1	have-rel-role-91	24-25
# ::node	0.1.2.0.1.0	brother	24-25
# ::root	0	suggest-01
# ::edge	and	op1	accident	0.1.0	0.1.0.0	
# ::edge	and	op1	responsible-41	0.1.2	0.1	
# ::edge	and	op2	point-02	0.1.2	0.1.2.0	
# ::edge	disaster	mod	this	0.1.1	0.1.1.0	
# ::edge	have-rel-role-91	ARG1	point-02	0.1.2.0.1	0.1.2.0	
# ::edge	have-rel-role-91	ARG2	brother	0.1.2.0.1	0.1.2.0.1.0	
# ::edge	investigate-01	time	subsequent	0.0	0.0.0	
# ::edge	point-02	ARG1	finger	0.1.2.0	0.1.2.0.0	
# ::edge	responsible-41	ARG1	and	0.1	0.1.0	
# ::edge	responsible-41	ARG2	disaster	0.1	0.1.1	
# ::edge	suggest-01	ARG0	investigate-01	0	0.0	
# ::edge	suggest-01	ARG1	responsible-41	0	0.1	
# ::edge	suspect-01	ARG1	accident	0.1.0.0.0	0.1.0.0	
(s2 / suggest-01 
      :ARG0 (i / investigate-01 
            :time (s3 / subsequent)) 
      :ARG1 (r / responsible-41 
            :ARG1 (a3 / and 
                  :op1 (a2 / accident 
                        :ARG1-of (s / suspect-01))) 
            :ARG2 (d / disaster 
                  :mod (t / this)) 
            :op-of (a / and 
                  :op1 (p / point-02 
                        :ARG1 (f / finger) 
                        :ARG1-of (h / have-rel-role-91 
                              :ARG2 (b / brother))))))

# ::snt should a person be at risk of getting the disease for example in an accident while gardening or in a car crash it would only be necessary to give a booster
# ::tok should a person be at risk of getting the disease for example in an accident while gardening or in a car crash it would only be necessary to give a booster
# ::alignments 28-29|0 24-25|0.1 22-23|0.0.2 21-22|0.0 20-21|0.0.1 17-18|0.0.0.0.1 14-15|0.0.0.0.0 11-12|0.0.0.1.0.0 9-10|0.0.0.1.0 5-6|0.0.0.1 2-3|0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:37.096
# ::node	0	give-01	28-29
# ::node	0.0	crash-01	21-22
# ::node	0.0.0	person	2-3
# ::node	0.0.0.0	recommend-01	0-1
# ::node	0.0.0.0.0	accident	14-15
# ::node	0.0.0.0.1	or	17-18
# ::node	0.0.0.1	risk-01	5-6
# ::node	0.0.0.1.0	disease	9-10
# ::node	0.0.0.1.0.0	example	11-12
# ::node	0.0.1	car	20-21
# ::node	0.0.2	it	22-23
# ::node	0.1	only	24-25
# ::root	0	give-01
# ::edge	crash-01	ARG0	person	0.0	0.0.0	
# ::edge	crash-01	ARG1	car	0.0	0.0.1	
# ::edge	crash-01	ARG2	it	0.0	0.0.2	
# ::edge	disease	location	example	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	give-01	ARG0	crash-01	0	0.0	
# ::edge	give-01	time	only	0	0.1	
# ::edge	or	op1	recommend-01	0.0.0.0.1	0.0.0.0	
# ::edge	recommend-01	ARG0	person	0.0.0.0	0.0.0	
# ::edge	recommend-01	ARG1	accident	0.0.0.0	0.0.0.0.0	
# ::edge	risk-01	ARG1	person	0.0.0.1	0.0.0	
# ::edge	risk-01	ARG2	disease	0.0.0.1	0.0.0.1.0	
(g / give-01 
      :ARG0 (c / crash-01 
            :ARG0 (p / person 
                  :ARG0-of (r2 / recommend-01 
                        :ARG1 (a / accident) 
                        :op-of (o2 / or)) 
                  :ARG1-of (r / risk-01 
                        :ARG2 (d / disease 
                              :location (e / example)))) 
            :ARG1 (c2 / car) 
            :ARG2 (i / it)) 
      :time (o / only))

# ::snt oncecrowded beaches along the dnieper the mighty river that plays the same part in ukrainian folklore as the volga or the don do in russian are all but empty even on the stuffiest summer days because of the fire that prompted the worlds worst nuclear accident four years ago
# ::tok oncecrowded beaches along the dnieper the mighty river that plays the same part in ukrainian folklore as the volga or the don do in russian are all but empty even on the stuffiest summer days because of the fire that prompted the worlds worst nuclear accident four years ago
# ::alignments 47-48|0.4.0.0+0.4.0 46-47|0.4 45-46|0.3.1 44-45|0.3.1.1 43-44|0.3.1.0 42-43|0.3.1.0.0 40-41|0.3 35-36|0 34-35|0.0.0+0.0 33-34|0.0.0.0 28-29|0.1 27-28|0.1.0 26-27|0.1.0.1 19-20|0.3.0 11-12|0.2 9-10|0.3.0.0 7-8|0.3.0.0.0 6-7|0.1.0.0 2-3|0.3.0.0.1.0 1-2|0.3.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:38.115
# ::node	0	cause-01	35-36
# ::node	0.0	temporal-quantity	34-35
# ::node	0.0.0	day	34-35
# ::node	0.0.0.0	summer	33-34
# ::node	0.1	empty	28-29
# ::node	0.1.0	contrast-01	27-28
# ::node	0.1.0.0	mighty	6-7
# ::node	0.1.0.1	all	26-27
# ::node	0.2	same-41	11-12
# ::node	0.3	prompt-02	40-41
# ::node	0.3.0	or	19-20
# ::node	0.3.0.0	play-02	9-10
# ::node	0.3.0.0.0	river	7-8
# ::node	0.3.0.0.1	beach	1-2
# ::node	0.3.0.0.1.0	along	2-3
# ::node	0.3.1	accident	45-46
# ::node	0.3.1.0	bad	43-44
# ::node	0.3.1.0.0	world	42-43
# ::node	0.3.1.1	nucleus	44-45
# ::node	0.4	4	46-47
# ::node	0.4.0	temporal-quantity	47-48
# ::node	0.4.0.0	year	47-48
# ::root	0	cause-01
# ::edge	4	op1	cause-01	0.4	0	
# ::edge	accident	mod	bad	0.3.1	0.3.1.0	
# ::edge	accident	mod	nucleus	0.3.1	0.3.1.1	
# ::edge	bad	mod	world	0.3.1.0	0.3.1.0.0	
# ::edge	beach	location	along	0.3.0.0.1	0.3.0.0.1.0	
# ::edge	cause-01	ARG0	temporal-quantity	0	0.0	
# ::edge	cause-01	ARG1	empty	0	0.1	
# ::edge	contrast-01	ARG0	mighty	0.1.0	0.1.0.0	
# ::edge	contrast-01	ARG1	all	0.1.0	0.1.0.1	
# ::edge	contrast-01	ARG2	empty	0.1.0	0.1	
# ::edge	day	mod	summer	0.0.0	0.0.0.0	
# ::edge	play-02	ARG0	river	0.3.0.0	0.3.0.0.0	
# ::edge	play-02	ARG1	beach	0.3.0.0	0.3.0.0.1	
# ::edge	play-02	location	or	0.3.0.0	0.3.0	
# ::edge	prompt-02	ARG0	or	0.3	0.3.0	
# ::edge	prompt-02	ARG1	accident	0.3	0.3.1	
# ::edge	prompt-02	ARG2	cause-01	0.3	0	
# ::edge	same-41	ARG1	cause-01	0.2	0	
# ::edge	temporal-quantity	quant	4	0.4.0	0.4	
# ::edge	temporal-quantity	unit	day	0.0	0.0.0	
# ::edge	temporal-quantity	unit	year	0.4.0	0.4.0.0	
(c / cause-01 
      :ARG0 (t2 / temporal-quantity 
            :unit (d / day 
                  :mod (s / summer))) 
      :ARG1 (e / empty 
            :ARG2-of (c2 / contrast-01 
                  :ARG0 (m / mighty) 
                  :ARG1 (a2 / all))) 
      :ARG1-of (s2 / same-41) 
      :ARG2-of (p / prompt-02 
            :ARG0 (o / or 
                  :location-of (p2 / play-02 
                        :ARG0 (r / river) 
                        :ARG1 (b2 / beach 
                              :location (a3 / along)))) 
            :ARG1 (a / accident 
                  :mod (b / bad 
                        :mod (w / world)) 
                  :mod (n / nucleus))) 
      :op-of (4 / 4 
            :quant-of (t / temporal-quantity 
                  :unit (y / year))))

# ::snt the real dispute however is over the causes of the accident
# ::tok the real dispute however is over the causes of the accident
# ::alignments 10-11|0.0 7-8|0 2-3|0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:38.126
# ::node	0	cause-01	7-8
# ::node	0.0	accident	10-11
# ::node	0.0.0	dispute-01	2-3
# ::node	0.0.0.0	real	1-2
# ::root	0	cause-01
# ::edge	cause-01	ARG1	accident	0	0.0	
# ::edge	dispute-01	ARG1	accident	0.0.0	0.0	
# ::edge	dispute-01	mod	real	0.0.0	0.0.0.0	
(c / cause-01 
      :ARG1 (a / accident 
            :ARG1-of (d / dispute-01 
                  :mod (r / real))))

# ::snt his vision was direct concrete and simple and he recorded faithfully the accidents of everyday life
# ::tok his vision was direct concrete and simple and he recorded faithfully the accidents of everyday life
# ::alignments 15-16|0.0.0 14-15|0+0.0 12-13|0.0.0.0.1 9-10|0.0.0.0 8-9|0.0.0.0.0 7-8|0.0.0.0.3 6-7|0.0.0.0.2 5-6|0.0.0.0.4 4-5|0.0.0.0.4.1 3-4|0.0.0.0.4.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:38.445
# ::node	0	everyday	14-15
# ::node	0.0	person	14-15
# ::node	0.0.0	life	15-16
# ::node	0.0.0.0	record-01	9-10
# ::node	0.0.0.0.0	he	8-9
# ::node	0.0.0.0.1	accident	12-13
# ::node	0.0.0.0.2	simple	6-7
# ::node	0.0.0.0.3	and	7-8
# ::node	0.0.0.0.4	and	5-6
# ::node	0.0.0.0.4.0	direct	3-4
# ::node	0.0.0.0.4.1	concrete	4-5
# ::root	0	everyday
(e / everyday 
      :mod-of (p / person 
            :mod-of (l / life 
                  :ARG2-of (r / record-01 
                        :ARG0 (h / he) 
                        :ARG1 (a / accident) 
                        :concession (s / simple) 
                        :op-of (a2 / and) 
                        :op-of (a3 / and 
                              :op1 (d / direct) 
                              :op2 (c / concrete))))))

# ::snt if the journey is from the cradle to the grave then we want maximum hours per accident, but if the journey is from london to edinburgh we want maximum miles per accident to compare this on the basis of hours will leave the road traveller still in the neighbourhood of bedford when the air traveller is already at his destination with no further risk in the hours ahead
# ::tok if the journey is from the cradle to the grave then we want maximum hours per accident , but if the journey is from london to edinburgh we want maximum miles per accident to compare this on the basis of hours will leave the road traveller still in the neighbourhood of bedford when the air traveller is already at his destination with no further risk in the hours ahead
# ::alignments 68-69|0.1.1.0.0.1.4 67-68|0.1.1.0.0.1.0.0+0.1.1.0.0.1.0 64-65|0.1.1.0.0.1 63-64|0.1.1.0.0.1.1 62-63|0.1.1.0.0.1.2 60-61|0.1.1.0.0.1.3 57-58|0.1.1.3.1 54-55|0.1.1.3.2 46-47|0.1.1.0.0.2 44-45|0.1.1.0.0.0 42-43|0.1.1.0.0 40-41|0.1.0.0+0.1.0 35-36|0.1.1.3.0 34-35|0.1.1.3 32-33|0.1.1.3.3 30-31|0.1.1.1.0+0.1.1.1 29-30|0.1.1.3.3.0 28-29|0.1.1 27-28|0.1.1.0 24-25|0.1.1.2.0.0+0.1.1.2.0+0.1.1.2 21-22|0.1 18-19|0 16-17|0.0.1.0 14-15|0.0.1.1+0.0.1 13-14|0.0.1.0.0 12-13|0.0 11-12|0.0.0 10-11|0.0.3 9-10|0.0.0.0 2-3|0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:40.498
# ::node	0	contrast-01	18-19
# ::node	0.0	want-01	12-13
# ::node	0.0.0	we	11-12
# ::node	0.0.0.0	grave	9-10
# ::node	0.0.1	temporal-quantity	14-15
# ::node	0.0.1.0	accident	16-17
# ::node	0.0.1.0.0	maximum	13-14
# ::node	0.0.1.1	hour	14-15
# ::node	0.0.2	journey-01	2-3
# ::node	0.0.3	then	10-11
# ::node	0.1	journey-01	21-22
# ::node	0.1.0	temporal-quantity	40-41
# ::node	0.1.0.0	hour	40-41
# ::node	0.1.1	want-01	28-29
# ::node	0.1.1.0	we	27-28
# ::node	0.1.1.0.0	leave-01	42-43
# ::node	0.1.1.0.0.0	road	44-45
# ::node	0.1.1.0.0.1	risk-01	64-65
# ::node	0.1.1.0.0.1.0	temporal-quantity	67-68
# ::node	0.1.1.0.0.1.0.0	hour	67-68
# ::node	0.1.1.0.0.1.1	further	63-64
# ::node	0.1.1.0.0.1.2	-	62-63
# ::node	0.1.1.0.0.1.3	destination	60-61
# ::node	0.1.1.0.0.1.4	ahead	68-69
# ::node	0.1.1.0.0.2	still	46-47
# ::node	0.1.1.1	distance-quantity	30-31
# ::node	0.1.1.1.0	mile	30-31
# ::node	0.1.1.2	city	24-25
# ::node	0.1.1.2.0	name	24-25
# ::node	0.1.1.2.0.0	"London"	24-25
# ::node	0.1.1.3	compare-01	34-35
# ::node	0.1.1.3.0	this	35-36
# ::node	0.1.1.3.1	already	57-58
# ::node	0.1.1.3.2	air	54-55
# ::node	0.1.1.3.3	accident	32-33
# ::node	0.1.1.3.3.0	maximum	29-30
# ::root	0	contrast-01
# ::edge	accident	duration	temporal-quantity	0.0.1.0	0.0.1	
# ::edge	accident	mod	maximum	0.0.1.0	0.0.1.0.0	
# ::edge	accident	mod	maximum	0.1.1.3.3	0.1.1.3.3.0	
# ::edge	accident	purpose	compare-01	0.1.1.3.3	0.1.1.3	
# ::edge	air	op1	compare-01	0.1.1.3.2	0.1.1.3	
# ::edge	already	op1	compare-01	0.1.1.3.1	0.1.1.3	
# ::edge	city	name	name	0.1.1.2	0.1.1.2.0	
# ::edge	compare-01	ARG1	this	0.1.1.3	0.1.1.3.0	
# ::edge	contrast-01	ARG1	want-01	0	0.0	
# ::edge	contrast-01	ARG2	journey-01	0	0.1	
# ::edge	destination	purpose	risk-01	0.1.1.0.0.1.3	0.1.1.0.0.1	
# ::edge	distance-quantity	unit	mile	0.1.1.1	0.1.1.1.0	
# ::edge	grave	poss	we	0.0.0.0	0.0.0	
# ::edge	journey-01	ARG0	temporal-quantity	0.1	0.1.0	
# ::edge	leave-01	ARG0	we	0.1.1.0.0	0.1.1.0	
# ::edge	leave-01	ARG1	road	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	leave-01	time	still	0.1.1.0.0	0.1.1.0.0.2	
# ::edge	name	op1	"London"	0.1.1.2.0	0.1.1.2.0.0	
# ::edge	risk-01	ARG0	temporal-quantity	0.1.1.0.0.1	0.1.1.0.0.1.0	
# ::edge	risk-01	ARG2	leave-01	0.1.1.0.0.1	0.1.1.0.0	
# ::edge	risk-01	degree	further	0.1.1.0.0.1	0.1.1.0.0.1.1	
# ::edge	risk-01	polarity	-	0.1.1.0.0.1	0.1.1.0.0.1.2	
# ::edge	risk-01	time	ahead	0.1.1.0.0.1	0.1.1.0.0.1.4	
# ::edge	temporal-quantity	unit	hour	0.0.1	0.0.1.1	
# ::edge	temporal-quantity	unit	hour	0.1.0	0.1.0.0	
# ::edge	temporal-quantity	unit	hour	0.1.1.0.0.1.0	0.1.1.0.0.1.0.0	
# ::edge	want-01	ARG0	we	0.0	0.0.0	
# ::edge	want-01	ARG0	we	0.1.1	0.1.1.0	
# ::edge	want-01	ARG1	distance-quantity	0.1.1	0.1.1.1	
# ::edge	want-01	ARG1	temporal-quantity	0.0	0.0.1	
# ::edge	want-01	ARG2	city	0.1.1	0.1.1.2	
# ::edge	want-01	condition	journey-01	0.1.1	0.1	
# ::edge	want-01	domain	journey-01	0.0	0.0.2	
# ::edge	want-01	mod	then	0.0	0.0.3	
# ::edge	want-01	purpose	compare-01	0.1.1	0.1.1.3	
(c3 / contrast-01 
      :ARG1 (w3 / want-01 
            :ARG0 (w4 / we 
                  :poss-of (g / grave)) 
            :ARG1 (t4 / temporal-quantity 
                  :duration-of (a5 / accident 
                        :mod (m3 / maximum)) 
                  :unit (h3 / hour)) 
            :domain (j2 / journey-01) 
            :mod (t5 / then)) 
      :ARG2 (j / journey-01 
            :ARG0 (t2 / temporal-quantity 
                  :unit (h2 / hour)) 
            :condition-of (w / want-01 
                  :ARG0 (w2 / we 
                        :ARG0-of (l / leave-01 
                              :ARG1 (r2 / road) 
                              :ARG2-of (r / risk-01 
                                    :ARG0 (t / temporal-quantity 
                                          :unit (h / hour)) 
                                    :degree (f / further) 
                                    :polarity (- / -) 
                                    :purpose-of (d / destination) 
                                    :time (a / ahead)) 
                              :time (s / still))) 
                  :ARG1 (d2 / distance-quantity 
                        :unit (m / mile)) 
                  :ARG2 (c2 / city 
                        :name (n / name 
                              :op1 "London")) 
                  :purpose (c / compare-01 
                        :ARG1 (t3 / this) 
                        :op-of (a2 / already) 
                        :op-of (a3 / air) 
                        :purpose-of (a4 / accident 
                              :mod (m2 / maximum))))))

# ::snt   in oxford where accident figures have been declining for five years there was a 45 per cent jump in slight injury accidents particularly among drivers and adult cyclists
# ::tok in oxford where accident figures have been declining for five years there was a 45 per cent jump in slight injury accidents particularly among drivers and adult cyclists
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:40.500
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt trouble really occurs after an accident which causes a grandstand to blow up killing hundreds of people
# ::tok trouble really occurs after an accident which causes a grandstand to blow up killing hundreds of people
# ::alignments 13-14|0.2.0.0.0 11-12|0.2.0.0 7-8|0.2.0 5-6|0.2.1 3-4|0.2 2-3|0 1-2|0.1 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:40.583
# ::node	0	occur-01	2-3
# ::node	0.0	trouble-01	0-1
# ::node	0.1	really	1-2
# ::node	0.2	after	3-4
# ::node	0.2.0	cause-01	7-8
# ::node	0.2.0.0	blow-06	11-12
# ::node	0.2.0.0.0	kill-01	13-14
# ::node	0.2.1	accident	5-6
# ::root	0	occur-01
# ::edge	after	op1	accident	0.2	0.2.1	
# ::edge	blow-06	ARG1	kill-01	0.2.0.0	0.2.0.0.0	
# ::edge	cause-01	ARG0	after	0.2.0	0.2	
# ::edge	cause-01	ARG1	blow-06	0.2.0	0.2.0.0	
# ::edge	occur-01	ARG1	trouble-01	0	0.0	
# ::edge	occur-01	mod	really	0	0.1	
# ::edge	occur-01	time	after	0	0.2	
(o / occur-01 
      :ARG1 (t / trouble-01) 
      :mod (r / really) 
      :time (a2 / after 
            :ARG0-of (c / cause-01 
                  :ARG1 (b / blow-06 
                        :ARG1 (k / kill-01))) 
            :op1 (a / accident)))

# ::snt support for cuts centred on environmental reasons with 81 per cent expressing concern about air pollution and 78 per cent wanting a cut in accidents
# ::tok support for cuts centred on environmental reasons with 81 per cent expressing concern about air pollution and 78 per cent wanting a cut in accidents
# ::alignments 24-25|0.4.1 20-21|0.4 19-20|0.4.0.0+0.4.0 17-18|0.1.0.1.0 16-17|0.1.1 15-16|0.1.0.0 14-15|0.1.0.0.0 12-13|0.1 11-12|0 10-11|0.0.0+0.0 8-9|0.2 6-7|0.3 5-6|0.3.0 2-3|0.1.0 0-1|0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:41.198
# ::node	0	express-01	11-12
# ::node	0.0	monetary-quantity	10-11
# ::node	0.0.0	cent	10-11
# ::node	0.1	concern-01	12-13
# ::node	0.1.0	cut-02	2-3
# ::node	0.1.0.0	pollute-01	15-16
# ::node	0.1.0.0.0	air	14-15
# ::node	0.1.0.1	support-01	0-1
# ::node	0.1.0.1.0	78	17-18
# ::node	0.1.1	and	16-17
# ::node	0.2	81	8-9
# ::node	0.3	reason	6-7
# ::node	0.3.0	environment	5-6
# ::node	0.4	want-01	20-21
# ::node	0.4.0	monetary-quantity	19-20
# ::node	0.4.0.0	cent	19-20
# ::node	0.4.1	accident	24-25
# ::root	0	express-01
# ::edge	and	op1	concern-01	0.1.1	0.1	
# ::edge	concern-01	ARG0	cut-02	0.1	0.1.0	
# ::edge	cut-02	ARG1	pollute-01	0.1.0	0.1.0.0	
# ::edge	express-01	ARG0	monetary-quantity	0	0.0	
# ::edge	express-01	ARG1	concern-01	0	0.1	
# ::edge	express-01	duration	81	0	0.2	
# ::edge	express-01	location	reason	0	0.3	
# ::edge	express-01	time	want-01	0	0.4	
# ::edge	monetary-quantity	unit	cent	0.0	0.0.0	
# ::edge	monetary-quantity	unit	cent	0.4.0	0.4.0.0	
# ::edge	pollute-01	ARG1	air	0.1.0.0	0.1.0.0.0	
# ::edge	reason	mod	environment	0.3	0.3.0	
# ::edge	support-01	ARG0	78	0.1.0.1	0.1.0.1.0	
# ::edge	support-01	ARG1	cut-02	0.1.0.1	0.1.0	
# ::edge	want-01	ARG0	monetary-quantity	0.4	0.4.0	
# ::edge	want-01	ARG1	accident	0.4	0.4.1	
(e / express-01 
      :ARG0 (m2 / monetary-quantity 
            :unit (c3 / cent)) 
      :ARG1 (c2 / concern-01 
            :ARG0 (c4 / cut-02 
                  :ARG1 (p / pollute-01 
                        :ARG1 (a3 / air)) 
                  :ARG1-of (s / support-01 
                        :ARG0 78)) 
            :op-of (a2 / and)) 
      :duration 81 
      :location (r / reason 
            :mod (e2 / environment)) 
      :time (w / want-01 
            :ARG0 (m / monetary-quantity 
                  :unit (c / cent)) 
            :ARG1 (a / accident)))

# ::snt before his accident lord aldington who is suing for libel over allegations that he was responsible for the forcible repatriation and massacre of 70000 cossack and yugoslav prisoners of war in 1945 was preparing to hear the opening evidence in the defence
# ::tok before his accident lord aldington who is suing for libel over allegations that he was responsible for the forcible repatriation and massacre of 70000 cossack and yugoslav prisoners of war in 1945 was preparing to hear the opening evidence in the defence
# ::alignments 41-42|0.0.0.0.1.1.1.0.0.0 38-39|0.0.0.0.1.1.1.0.0 37-38|0.0.0.0.1.1.1.0.0.1 35-36|0.0.0.0.1.1.1.0 33-34|0.0.0.0.1.1.1 31-32|0.0.0.0.1.0.0+0.0.0.0.1.0 29-30|0.0.0.2 25-26|0 24-25|0.0.0.1.1.0+0.0.0.1.1 23-24|0.0.0.0.1.1.0.0 21-22|0.0.0.1 20-21|0.0.0 19-20|0.0 15-16|0.0.0.0 13-14|0.0.0.0.0 11-12|0.0.0.0.1.1.0 9-10|0.0.0.0.1.1 7-8|0.0.0.0.1 3-4|0.0.0.1.0.0 2-3|0.0.0.1.0.0.0 0-1|0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:41.512
# ::node	0	and	25-26
# ::node	0.0	repatriate-01	19-20
# ::node	0.0.0	and	20-21
# ::node	0.0.0.0	responsible-41	15-16
# ::node	0.0.0.0.0	he	13-14
# ::node	0.0.0.0.1	sue-01	7-8
# ::node	0.0.0.0.1.0	date-entity	31-32
# ::node	0.0.0.0.1.0.0	1945	31-32
# ::node	0.0.0.0.1.1	libel-01	9-10
# ::node	0.0.0.0.1.1.0	allege-01	11-12
# ::node	0.0.0.0.1.1.0.0	70000	23-24
# ::node	0.0.0.0.1.1.1	prepare-02	33-34
# ::node	0.0.0.0.1.1.1.0	hear-01	35-36
# ::node	0.0.0.0.1.1.1.0.0	evidence-01	38-39
# ::node	0.0.0.0.1.1.1.0.0.0	defend-01	41-42
# ::node	0.0.0.0.1.1.1.0.0.1	open-01	37-38
# ::node	0.0.0.1	massacre-01	21-22
# ::node	0.0.0.1.0	before	0-1
# ::node	0.0.0.1.0.0	lord	3-4
# ::node	0.0.0.1.0.0.0	accident	2-3
# ::node	0.0.0.1.1	name	24-25
# ::node	0.0.0.1.1.0	"Cossack"	24-25
# ::node	0.0.0.2	war	29-30
# ::root	0	and
# ::edge	allege-01	ARG1	70000	0.0.0.0.1.1.0	0.0.0.0.1.1.0.0	
# ::edge	and	op1	repatriate-01	0	0.0	
# ::edge	and	op1	repatriate-01	0.0.0	0.0	
# ::edge	and	op2	massacre-01	0.0.0	0.0.0.1	
# ::edge	and	op3	war	0.0.0	0.0.0.2	
# ::edge	date-entity	year	1945	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	evidence-01	ARG1	defend-01	0.0.0.0.1.1.1.0.0	0.0.0.0.1.1.1.0.0.0	
# ::edge	hear-01	ARG1	evidence-01	0.0.0.0.1.1.1.0	0.0.0.0.1.1.1.0.0	
# ::edge	libel-01	ARG1	allege-01	0.0.0.0.1.1	0.0.0.0.1.1.0	
# ::edge	lord	mod	accident	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	lord	time	before	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	massacre-01	ARG0	before	0.0.0.1	0.0.0.1.0	
# ::edge	massacre-01	ARG1	name	0.0.0.1	0.0.0.1.1	
# ::edge	name	op1	"Cossack"	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	open-01	ARG1	evidence-01	0.0.0.0.1.1.1.0.0.1	0.0.0.0.1.1.1.0.0	
# ::edge	prepare-02	ARG1	libel-01	0.0.0.0.1.1.1	0.0.0.0.1.1	
# ::edge	prepare-02	ARG2	hear-01	0.0.0.0.1.1.1	0.0.0.0.1.1.1.0	
# ::edge	responsible-41	ARG1	he	0.0.0.0	0.0.0.0.0	
# ::edge	responsible-41	ARG2	and	0.0.0.0	0.0.0	
# ::edge	sue-01	ARG0	date-entity	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	sue-01	ARG1	responsible-41	0.0.0.0.1	0.0.0.0	
# ::edge	sue-01	ARG2	libel-01	0.0.0.0.1	0.0.0.0.1.1	
(a / and 
      :op1 (r / repatriate-01 
            :op-of (a2 / and 
                  :ARG2-of (r2 / responsible-41 
                        :ARG1 (h2 / he) 
                        :ARG1-of (s / sue-01 
                              :ARG0 (d2 / date-entity 
                                    :year 1945) 
                              :ARG2 (l / libel-01 
                                    :ARG1 (a3 / allege-01 
                                          :ARG1 70000) 
                                    :ARG1-of (p / prepare-02 
                                          :ARG2 (h / hear-01 
                                                :ARG1 (e / evidence-01 
                                                      :ARG1 (d / defend-01) 
                                                      :ARG1-of (o / open-01))))))) 
                  :op1 (m / massacre-01 
                        :ARG0 (b / before 
                              :time-of (l2 / lord 
                                    :mod (a4 / accident))) 
                        :ARG1 (n / name 
                              :op1 "Cossack")) 
                  :op2 (w / war))))

# ::snt an interesting freemarket solution for dealing with the significant percentage more than 10 per cent of uninsured drivers among them a large proportion of the most risk prone who cannot afford the high premiums on account of their dismal accident records
# ::tok an interesting freemarket solution for dealing with the significant percentage more than 10 per cent of uninsured drivers among them a large proportion of the most risk prone who cannot afford the high premiums on account of their dismal accident records
# ::alignments 40-41|0.0 39-40|0.0.0 38-39|0 35-36|0.0.0.0.0.1 33-34|0.0.0.0 32-33|0.0.0.0.1 30-31|0.0.0.0.0 27-28|0.0.0.0.0.2.0.2 26-27|0.0.0.0.0.2.0 25-26|0.0.0.0.0.2.0.2.0 22-23|0.0.0.0.0.2 21-22|0.0.0.0.0.2.1 18-19|0.0.0.0.0.0.0.0 17-18|0.0.0.0.0.0.0+0.0.0.0.0.0 14-15|0.0.0.0.0.0.1+0.0.0.0.0.0.1.0 12-13|0.0.0.0.0.2.0.0 9-10|0.0.0.0.0.2.0.1.1 8-9|0.0.0.0.0.2.0.1.1.0 5-6|0.0.0.0.0.2.0.1 3-4|0.0.0.0.0.2.0.1.0 1-2|0.0.0.0.0.2.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:42.275
# ::node	0	dismal	38-39
# ::node	0.0	record	40-41
# ::node	0.0.0	accident	39-40
# ::node	0.0.0.0	premium	33-34
# ::node	0.0.0.0.0	afford-01	30-31
# ::node	0.0.0.0.0.0	person	17-18
# ::node	0.0.0.0.0.0.0	drive-01	17-18
# ::node	0.0.0.0.0.0.0.0	among	18-19
# ::node	0.0.0.0.0.0.1	cent	14-15
# ::node	0.0.0.0.0.0.1.0	monetary-quantity	14-15
# ::node	0.0.0.0.0.1	account	35-36
# ::node	0.0.0.0.0.2	proportion	22-23
# ::node	0.0.0.0.0.2.0	risk-01	26-27
# ::node	0.0.0.0.0.2.0.0	10	12-13
# ::node	0.0.0.0.0.2.0.1	deal-01	5-6
# ::node	0.0.0.0.0.2.0.1.0	solution	3-4
# ::node	0.0.0.0.0.2.0.1.0.0	interesting	1-2
# ::node	0.0.0.0.0.2.0.1.1	percentage	9-10
# ::node	0.0.0.0.0.2.0.1.1.0	significant	8-9
# ::node	0.0.0.0.0.2.0.2	prone	27-28
# ::node	0.0.0.0.0.2.0.2.0	most	25-26
# ::node	0.0.0.0.0.2.1	large	21-22
# ::node	0.0.0.0.1	high	32-33
# ::root	0	dismal
(d / dismal 
      :mod-of (r / record 
            :mod (a / accident 
                  :topic-of (p / premium 
                        :ARG1-of (a3 / afford-01 
                              :ARG0 (p4 / person 
                                    :ARG0-of (d2 / drive-01 
                                          :ARG1 (a4 / among)) 
                                    :poss-of (c / cent 
                                          :unit-of (m2 / monetary-quantity))) 
                              :ARG2 (a2 / account) 
                              :time (p3 / proportion 
                                    :ARG0-of (r2 / risk-01 
                                          :ARG1 10 
                                          :ARG2-of (d3 / deal-01 
                                                :ARG0 (s2 / solution 
                                                      :mod (i / interesting)) 
                                                :ARG1 (p5 / percentage 
                                                      :mod (s / significant))) 
                                          :mod (p2 / prone 
                                                :mod (m / most))) 
                                    :quant (l / large))) 
                        :mod (h / high)))))

# ::snt police today named the 78yearold pedestrian killed in an accident at rose hill oxford saturday night
# ::tok police today named the 78yearold pedestrian killed in an accident at rose hill oxford saturday night
# ::alignments 15-16|0.1.2 14-15|0.1.1 11-12|0.1 9-10|0.0.0 6-7|0.0 5-6|0 1-2|0.1.0.0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:42.472
# ::node	0	pedestrian	5-6
# ::node	0.0	kill-01	6-7
# ::node	0.0.0	accident	9-10
# ::node	0.1	rise-01	11-12
# ::node	0.1.0	police	0-1
# ::node	0.1.0.0	today	1-2
# ::node	0.1.1	saturday	14-15
# ::node	0.1.2	night	15-16
# ::root	0	pedestrian
(p / pedestrian 
      :ARG1-of (k / kill-01 
            :ARG0 (a / accident)) 
      :ARG1-of (r / rise-01 
            :ARG0 (p2 / police 
                  :mod-of (t / today)) 
            :ARG3 (s / saturday) 
            :time (n / night)))

# ::snt about half an hour after the first accident six more vehicles including three lorries were involved in a crash on the southbound carriageway of the m1 near junction 19 at rugby, no one was hurt in this accident, the accident in which two drivers died and two others were slightly hurt happened in thick fog shortly before noon on the nearby a46 at sileby
# ::tok about half an hour after the first accident six more vehicles including three lorries were involved in a crash on the southbound carriageway of the m1 near junction 19 at rugby , no one was hurt in this accident , the accident in which two drivers died and two others were slightly hurt happened in thick fog shortly before noon on the nearby a46 at sileby
# ::alignments 62-63|0.0.2.2.1.0 59-60|0 58-59|0.0.3 57-58|0.0.3.0 55-56|0.0.2.0 53-54|0.0 52-53|0.0.2 51-52|0.0.2.1 49-50|0.0.1 48-49|0.0.2.2.1.1.0.0 47-48|0.0.2.2 46-47|0.0.2.2.1 45-46|0.0.2.2.1.1.0+0.0.2.2.1.1 44-45|0.0.2.2.1.1.1 41-42|0.0.2.2.1.2 38-39|0.0.2.2.0.0 37-38|0.0.2.2.0.0.0 35-36|0.0.2.2.0 32-33|0.0.2.2.0.3 28-29|0.0.0 26-27|0.0.2.2.0.1.0.1.0 18-19|0.0.2.2.0.1.0.1 15-16|0.0.2.2.0.1.0 12-13|0.0.2.2.0.2 10-11|0.0.2.2.0.1.0.0 8-9|0.0.2.2.0.1.0.0.0 7-8|0.0.2.2.0.1.2.0 4-5|0.0.2.2.0.1.2 3-4|0.0.2.2.0.1.3+0.0.2.2.0.1 1-2|0.0.2.2.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:44.619
# ::node	0	noon	59-60
# ::node	0.0	happen-01	53-54
# ::node	0.0.0	19	28-29
# ::node	0.0.1	other	49-50
# ::node	0.0.2	hurt-01	52-53
# ::node	0.0.2.0	thick	55-56
# ::node	0.0.2.1	slight	51-52
# ::node	0.0.2.2	and	47-48
# ::node	0.0.2.2.0	hurt-01	35-36
# ::node	0.0.2.2.0.0	accident	38-39
# ::node	0.0.2.2.0.0.0	this	37-38
# ::node	0.0.2.2.0.1	temporal-quantity	3-4
# ::node	0.0.2.2.0.1.0	involve-01	15-16
# ::node	0.0.2.2.0.1.0.0	vehicle	10-11
# ::node	0.0.2.2.0.1.0.0.0	6	8-9
# ::node	0.0.2.2.0.1.0.1	crash-01	18-19
# ::node	0.0.2.2.0.1.0.1.0	near	26-27
# ::node	0.0.2.2.0.1.1	half	1-2
# ::node	0.0.2.2.0.1.2	after	4-5
# ::node	0.0.2.2.0.1.2.0	accident	7-8
# ::node	0.0.2.2.0.1.3	hour	3-4
# ::node	0.0.2.2.0.2	3	12-13
# ::node	0.0.2.2.0.3	-	32-33
# ::node	0.0.2.2.1	die-01	46-47
# ::node	0.0.2.2.1.0	nearby	62-63
# ::node	0.0.2.2.1.1	person	45-46
# ::node	0.0.2.2.1.1.0	drive-01	45-46
# ::node	0.0.2.2.1.1.0.0	2	48-49
# ::node	0.0.2.2.1.1.1	2	44-45
# ::node	0.0.2.2.1.2	accident	41-42
# ::node	0.0.3	before	58-59
# ::node	0.0.3.0	short	57-58
# ::root	0	noon
(n2 / noon 
      :time-of (h / happen-01 
            :ARG0 19 
            :ARG1 (o / other) 
            :ARG1-of (h2 / hurt-01 
                  :ARG0 (t / thick) 
                  :degree (s2 / slight) 
                  :op-of (a / and 
                        :op1 (h3 / hurt-01 
                              :ARG0 (a3 / accident 
                                    :mod (t2 / this)) 
                              :ARG1 (t3 / temporal-quantity 
                                    :ARG1-of (i / involve-01 
                                          :ARG0 (v / vehicle 
                                                :quant 6) 
                                          :ARG2 (c / crash-01 
                                                :ARG1 (n3 / near))) 
                                    :mod (h5 / half) 
                                    :quant-of (a5 / after 
                                          :op1 (a4 / accident)) 
                                    :unit (h4 / hour)) 
                              :op-of 3 
                              :polarity (- / -)) 
                        :op2 (d / die-01 
                              :ARG0 (n / nearby) 
                              :ARG1 (p / person 
                                    :ARG0-of (d2 / drive-01 
                                          :ARG1 2) 
                                    :quant 2) 
                              :location (a2 / accident)))) 
            :time (b / before 
                  :mod (s / short))))

# ::snt as stalin put it   it is no accident that these gentlemen the smenovekhovtsy praise the communistbolsheviks as if to say talk as much as you like of your international tendencies but we know that you will achieve what denikin did not succeed in achieving that you bolsheviks have restored the idea of great russia or at any rate will restore it
# ::tok as stalin put it it is no accident that these gentlemen the smenovekhovtsy praise the communistbolsheviks as if to say talk as much as you like of your international tendencies but we know that you will achieve what denikin did not succeed in achieving that you bolsheviks have restored the idea of great russia or at any rate will restore it
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:44.620
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt to meet these objections courts frequently apply the new ruling to the successful party as a reward for stimulating judicial reform but otherwise postpone its application to events occurring after the date of the decision for example to accidents or trials thereafter
# ::tok to meet these objections courts frequently apply the new ruling to the successful party as a reward for stimulating judicial reform but otherwise postpone its application to events occurring after the date of the decision for example to accidents or trials thereafter
# ::alignments 40-41|0.0.2.0.0.0.1.1 39-40|0.0.2.0.0.0.1 38-39|0.0.2.0.0.0.1.0 36-37|0.0.2.0.0.0.0 34-35|0.0.2.0.0.0 31-32|0.0.2.0.0 29-30|0.0.2.0 27-28|0.0.2 25-26|0.0.1 23-24|0.0 22-23|0.0.3 21-22|0 20-21|0.0.0.0.0.0.0 19-20|0.0.0.0.0.0.0.0 16-17|0.0.0.0.0.0 13-14|0.0.0.0.0.1 12-13|0.0.0.0.0.1.0 9-10|0.0.0.0.0 8-9|0.0.0.0.0.2 6-7|0.0.0.0 5-6|0.0.0.0.1 4-5|0.0.0 3-4|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:45.058
# ::node	0	contrast-01	21-22
# ::node	0.0	postpone-01	23-24
# ::node	0.0.0	court	4-5
# ::node	0.0.0.0	apply-01	6-7
# ::node	0.0.0.0.0	rule-03	9-10
# ::node	0.0.0.0.0.0	reward-01	16-17
# ::node	0.0.0.0.0.0.0	reform-01	20-21
# ::node	0.0.0.0.0.0.0.0	judicial	19-20
# ::node	0.0.0.0.0.1	party	13-14
# ::node	0.0.0.0.0.1.0	succeed-01	12-13
# ::node	0.0.0.0.0.2	new	8-9
# ::node	0.0.0.0.1	frequent	5-6
# ::node	0.0.0.1	objection	3-4
# ::node	0.0.1	apply-01	25-26
# ::node	0.0.2	event	27-28
# ::node	0.0.2.0	after	29-30
# ::node	0.0.2.0.0	date	31-32
# ::node	0.0.2.0.0.0	decide-01	34-35
# ::node	0.0.2.0.0.0.0	example	36-37
# ::node	0.0.2.0.0.0.1	or	39-40
# ::node	0.0.2.0.0.0.1.0	accident	38-39
# ::node	0.0.2.0.0.0.1.1	trial	40-41
# ::node	0.0.3	otherwise	22-23
# ::root	0	contrast-01
# ::edge	after	op1	date	0.0.2.0	0.0.2.0.0	
# ::edge	apply-01	ARG0	court	0.0.0.0	0.0.0	
# ::edge	apply-01	ARG1	rule-03	0.0.0.0	0.0.0.0.0	
# ::edge	apply-01	frequency	frequent	0.0.0.0	0.0.0.0.1	
# ::edge	contrast-01	ARG2	postpone-01	0	0.0	
# ::edge	court	mod	objection	0.0.0	0.0.0.1	
# ::edge	date	topic	decide-01	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	decide-01	ARG1	example	0.0.2.0.0.0	0.0.2.0.0.0.0	
# ::edge	event	time	after	0.0.2	0.0.2.0	
# ::edge	or	op1	decide-01	0.0.2.0.0.0.1	0.0.2.0.0.0	
# ::edge	or	op2	accident	0.0.2.0.0.0.1	0.0.2.0.0.0.1.0	
# ::edge	or	op3	trial	0.0.2.0.0.0.1	0.0.2.0.0.0.1.1	
# ::edge	postpone-01	ARG0	court	0.0	0.0.0	
# ::edge	postpone-01	ARG1	apply-01	0.0	0.0.1	
# ::edge	postpone-01	ARG2	event	0.0	0.0.2	
# ::edge	postpone-01	mod	otherwise	0.0	0.0.3	
# ::edge	reform-01	ARG1	judicial	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	reward-01	ARG1	reform-01	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	rule-03	ARG1	reward-01	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	rule-03	ARG2	party	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	rule-03	mod	new	0.0.0.0.0	0.0.0.0.0.2	
# ::edge	succeed-01	ARG0	party	0.0.0.0.0.1.0	0.0.0.0.0.1	
(c / contrast-01 
      :ARG2 (p / postpone-01 
            :ARG0 (c2 / court 
                  :ARG0-of (a4 / apply-01 
                        :ARG1 (r3 / rule-03 
                              :ARG1 (r2 / reward-01 
                                    :ARG1 (r / reform-01 
                                          :ARG1 (j / judicial))) 
                              :ARG2 (p2 / party 
                                    :ARG0-of (s / succeed-01)) 
                              :mod (n / new)) 
                        :frequency (f / frequent)) 
                  :mod (o3 / objection)) 
            :ARG1 (a3 / apply-01) 
            :ARG2 (e2 / event 
                  :time (a2 / after 
                        :op1 (d2 / date 
                              :topic (d / decide-01 
                                    :ARG1 (e / example) 
                                    :op-of (o / or 
                                          :op1 (a / accident) 
                                          :op2 (t / trial)))))) 
            :mod (o2 / otherwise)))

# ::snt bawden stopped eating and looked up road accidents he inquired
# ::tok bawden stopped eating and looked up road accidents he inquired
# ::alignments 9-10|0.1.0.0 8-9|0.1.0.0.0 7-8|0.1.0 6-7|0.1.0.1 4-5|0.1 3-4|0 2-3|0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:45.079
# ::node	0	and	3-4
# ::node	0.0	stop-01	1-2
# ::node	0.0.0	eat-01	2-3
# ::node	0.1	look-01	4-5
# ::node	0.1.0	accident	7-8
# ::node	0.1.0.0	inquire-01	9-10
# ::node	0.1.0.0.0	he	8-9
# ::node	0.1.0.1	road	6-7
# ::root	0	and
# ::edge	accident	location	road	0.1.0	0.1.0.1	
# ::edge	and	op1	stop-01	0	0.0	
# ::edge	and	op2	look-01	0	0.1	
# ::edge	inquire-01	ARG0	he	0.1.0.0	0.1.0.0.0	
# ::edge	inquire-01	ARG1	accident	0.1.0.0	0.1.0	
# ::edge	look-01	ARG1	accident	0.1	0.1.0	
# ::edge	stop-01	ARG1	eat-01	0.0	0.0.0	
(a2 / and 
      :op1 (s / stop-01 
            :ARG1 (e / eat-01)) 
      :op2 (l / look-01 
            :ARG1 (a / accident 
                  :ARG1-of (i / inquire-01 
                        :ARG0 (h / he)) 
                  :location (r / road))))

# ::snt air accident investigators have urged local people to come forward with information about the accident which led to oxfordshire pilot capt tim lancaster being sucked from the cockpit of his jet
# ::tok air accident investigators have urged local people to come forward with information about the accident which led to oxfordshire pilot capt tim lancaster being sucked from the cockpit of his jet
# ::alignments 30-31|0.0.0.2 16-17|0.0.0 14-15|0.0.0.0 11-12|0.0.0.0.0 9-10|0.1 5-6|0.0.0.1 4-5|0 2-3|0.0.1+0.0 1-2|0.0.1.0 0-1|0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:45.319
# ::node	0	urge-01	4-5
# ::node	0.0	person	2-3
# ::node	0.0.0	lead-02	16-17
# ::node	0.0.0.0	accident	14-15
# ::node	0.0.0.0.0	information	11-12
# ::node	0.0.0.1	local	5-6
# ::node	0.0.0.2	jet	30-31
# ::node	0.0.1	investigate-01	2-3
# ::node	0.0.1.0	accident	1-2
# ::node	0.0.1.0.0	air	0-1
# ::node	0.1	forward	9-10
# ::root	0	urge-01
# ::edge	accident	mod	air	0.0.1.0	0.0.1.0.0	
# ::edge	information	topic	accident	0.0.0.0.0	0.0.0.0	
# ::edge	investigate-01	ARG0	person	0.0.1	0.0	
# ::edge	investigate-01	ARG1	accident	0.0.1	0.0.1.0	
# ::edge	jet	op1	lead-02	0.0.0.2	0.0.0	
# ::edge	lead-02	ARG0	person	0.0.0	0.0	
# ::edge	lead-02	ARG1	accident	0.0.0	0.0.0.0	
# ::edge	lead-02	mod	local	0.0.0	0.0.0.1	
# ::edge	urge-01	ARG0	person	0	0.0	
# ::edge	urge-01	ARG1	forward	0	0.1	
(u / urge-01 
      :ARG0 (p / person 
            :ARG0-of (l / lead-02 
                  :ARG1 (a / accident 
                        :topic-of (i / information)) 
                  :mod (l2 / local) 
                  :op-of (j / jet)) 
            :ARG0-of (i2 / investigate-01 
                  :ARG1 (a2 / accident 
                        :mod (a3 / air)))) 
      :ARG1 (f / forward))

# ::snt but does this justify those who see themselves as more moral or fuller of sympathy for their fellow humans than the rest of us telling us these grotesque lies about money in order to win us to their cause  the department of transports invention about the cost of fatal road accidents becomes transmuted through several magnification processes into the antialcohol lobbys bald statement that at 1987 costs the deaths and injuries from alcoholrelated road accidents represent a cost in excess of 800 million
# ::tok but does this justify those who see themselves as more moral or fuller of sympathy for their fellow humans than the rest of us telling us these grotesque lies about money in order to win us to their cause the department of transports invention about the cost of fatal road accidents becomes transmuted through several magnification processes into the antialcohol lobbys bald statement that at 1987 costs the deaths and injuries from alcoholrelated road accidents represent a cost in excess of 800 million
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:45.322
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the news is that by an accident of history and expertise the rareearth division of johnson matthey has emerged as the only technical centre in the world able to produce mags materials reliably and in bulk
# ::tok the news is that by an accident of history and expertise the rareearth division of johnson matthey has emerged as the only technical centre in the world able to produce mags materials reliably and in bulk
# ::alignments 33-34|0 31-32|0.0.1 29-30|0.0 27-28|0.0.3 26-27|0.0.3.0 22-23|0.0.0.0 21-22|0.0.0 18-19|0.0.2 15-17|0.0.2.0.0.0.0+0.0.2.0.0.0.1+0.0.2.0.0.0+0.0.2.0.0 13-14|0.0.2.0 10-11|0.0.4.1 9-10|0.0.4 8-9|0.0.4.0 6-7|0.0.4.2 1-2|0.0.2.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:45.464
# ::node	0	and	33-34
# ::node	0.0	produce-01	29-30
# ::node	0.0.0	only	21-22
# ::node	0.0.0.0	technical	22-23
# ::node	0.0.1	material	31-32
# ::node	0.0.2	emerge-02	18-19
# ::node	0.0.2.0	division	13-14
# ::node	0.0.2.0.0	organization	15-17
# ::node	0.0.2.0.0.0	name	15-17
# ::node	0.0.2.0.0.0.0	"matthey"	15-17
# ::node	0.0.2.0.0.0.1	"johnson"	15-17
# ::node	0.0.2.1	news	1-2
# ::node	0.0.3	possible	27-28
# ::node	0.0.3.0	world	26-27
# ::node	0.0.4	and	9-10
# ::node	0.0.4.0	history	8-9
# ::node	0.0.4.1	expertise	10-11
# ::node	0.0.4.2	accident	6-7
# ::root	0	and
# ::edge	accident	poss	and	0.0.4.2	0.0.4	
# ::edge	and	op1	history	0.0.4	0.0.4.0	
# ::edge	and	op1	produce-01	0	0.0	
# ::edge	and	op2	expertise	0.0.4	0.0.4.1	
# ::edge	and	op3	produce-01	0.0.4	0.0	
# ::edge	division	mod	organization	0.0.2.0	0.0.2.0.0	
# ::edge	emerge-02	ARG0	division	0.0.2	0.0.2.0	
# ::edge	emerge-02	ARG1	produce-01	0.0.2	0.0	
# ::edge	name	op1	"matthey"	0.0.2.0.0.0	0.0.2.0.0.0.0	
# ::edge	name	op2	"johnson"	0.0.2.0.0.0	0.0.2.0.0.0.1	
# ::edge	news	domain	emerge-02	0.0.2.1	0.0.2	
# ::edge	organization	name	name	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	possible	domain	produce-01	0.0.3	0.0	
# ::edge	produce-01	ARG0	only	0.0	0.0.0	
# ::edge	produce-01	ARG1	material	0.0	0.0.1	
# ::edge	technical	mod	only	0.0.0.0	0.0.0	
# ::edge	world	mod	possible	0.0.3.0	0.0.3	
(a / and 
      :op1 (p / produce-01 
            :ARG0 (o / only 
                  :mod-of (t / technical)) 
            :ARG1 (m / material) 
            :ARG1-of (e / emerge-02 
                  :ARG0 (d / division 
                        :mod (o2 / organization 
                              :name (n / name 
                                    :op1 "matthey" 
                                    :op2 "johnson"))) 
                  :domain-of (n2 / news)) 
            :domain-of (p2 / possible 
                  :mod-of (w / world)) 
            :op-of (a2 / and 
                  :op1 (h / history) 
                  :op2 (e2 / expertise) 
                  :poss-of (a3 / accident))))

# ::snt she is grateful that out of the wasteful deaths of her four immediate family and all the other young people killed in the accident at least some good has been achieved through schemes of improvement for the construction and maintenance of motorway safety barriers
# ::tok she is grateful that out of the wasteful deaths of her four immediate family and all the other young people killed in the accident at least some good has been achieved through schemes of improvement for the construction and maintenance of motorway safety barriers
# ::alignments 43-44|0.0 42-43|0.0.1 41-42|0 39-40|0.0.0 38-39|0.0.0.1 37-38|0.0.0.1.2 34-35|0.0.0.1.1 32-33|0.0.0.1.1.1 30-31|0.0.0.1.0 27-28|0.0.0.1.0.0 26-27|0.0.0.1.0.0.0 23-24|0.0.0.1.1.2.0.2 20-21|0.0.0.1.1.2.0 18-19|0.0.0.1.1.2.0.1 17-18|0.0.0.0 15-16|0.0.0.1.1.2.0.0 14-15|0.0.0.1.1.2 13-14|0.0.0.1.1.0 12-13|0.0.0.1.1.0.0 11-12|0.0.0.1.1.0.1 0-1|0.0.0.1.1.2.0.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:46.174
# ::node	0	motorway	41-42
# ::node	0.0	barrier	43-44
# ::node	0.0.0	maintain-01	39-40
# ::node	0.0.0.0	other	17-18
# ::node	0.0.0.1	and	38-39
# ::node	0.0.0.1.0	achieve-01	30-31
# ::node	0.0.0.1.0.0	good	27-28
# ::node	0.0.0.1.0.0.0	some	26-27
# ::node	0.0.0.1.1	improve-01	34-35
# ::node	0.0.0.1.1.0	family	13-14
# ::node	0.0.0.1.1.0.0	immediate	12-13
# ::node	0.0.0.1.1.0.1	4	11-12
# ::node	0.0.0.1.1.1	scheme-01	32-33
# ::node	0.0.0.1.1.2	and	14-15
# ::node	0.0.0.1.1.2.0	kill-01	20-21
# ::node	0.0.0.1.1.2.0.0	all	15-16
# ::node	0.0.0.1.1.2.0.1	young	18-19
# ::node	0.0.0.1.1.2.0.2	accident	23-24
# ::node	0.0.0.1.1.2.0.3	she	0-1
# ::node	0.0.0.1.2	construct-01	37-38
# ::node	0.0.1	safe-41	42-43
# ::root	0	motorway
(m / motorway 
      :mod-of (b / barrier 
            :ARG1-of (m2 / maintain-01 
                  :ARG0 (o / other) 
                  :op-of (a / and 
                        :ARG0-of (a2 / achieve-01 
                              :ARG1 (g / good 
                                    :quant (s3 / some))) 
                        :op1 (i / improve-01 
                              :ARG1 (f / family 
                                    :mod (i2 / immediate) 
                                    :quant 4) 
                              :ARG1-of (s2 / scheme-01) 
                              :op-of (a5 / and 
                                    :ARG1-of (k / kill-01 
                                          :ARG0 (a4 / all) 
                                          :beneficiary (y / young) 
                                          :location (a3 / accident) 
                                          :op-of (s4 / she)))) 
                        :op2 (c / construct-01))) 
            :mod (s / safe-41)))

# ::snt this happy accident brought balfour directly into the innermost core of a community in which religious experience was not universally at the incandescent intensity enjoyed by silouan
# ::tok this happy accident brought balfour directly into the innermost core of a community in which religious experience was not universally at the incandescent intensity enjoyed by silouan
# ::alignments 24-25|0.2 23-24|0.2.0 19-20|0.2.0.0 16-17|0 12-13|0.1 9-10|0.1.0 5-6|0.0 2-3|0.2.1 1-2|0.2.1.0 0-1|0.2.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:46.324
# ::node	0	experience-01	16-17
# ::node	0.0	direct	5-6
# ::node	0.1	community	12-13
# ::node	0.1.0	core	9-10
# ::node	0.2	enjoy-01	24-25
# ::node	0.2.0	intensity	23-24
# ::node	0.2.0.0	universal	19-20
# ::node	0.2.1	accident	2-3
# ::node	0.2.1.0	happy	1-2
# ::node	0.2.1.1	this	0-1
# ::root	0	experience-01
# ::edge	accident	mod	happy	0.2.1	0.2.1.0	
# ::edge	accident	mod	this	0.2.1	0.2.1.1	
# ::edge	accident	op1	enjoy-01	0.2.1	0.2	
# ::edge	core	mod	community	0.1.0	0.1	
# ::edge	enjoy-01	ARG0	intensity	0.2	0.2.0	
# ::edge	enjoy-01	ARG1	experience-01	0.2	0	
# ::edge	experience-01	ARG0	direct	0	0.0	
# ::edge	experience-01	ARG1	community	0	0.1	
# ::edge	intensity	direction	universal	0.2.0	0.2.0.0	
(e2 / experience-01 
      :ARG0 (d / direct) 
      :ARG1 (c / community 
            :mod-of (c2 / core)) 
      :ARG1-of (e / enjoy-01 
            :ARG0 (i / intensity 
                  :direction (u / universal)) 
            :op-of (a / accident 
                  :mod (h / happy) 
                  :mod (t / this))))

# ::snt he told mps local management in parts of the nhs were moving increasingly to a twotier service with separation of the accident and emergency services and nonemergency work
# ::tok he told mps local management in parts of the nhs were moving increasingly to a twotier service with separation of the accident and emergency services and nonemergency work
# ::alignments 25-26|0 24-25|0.1 23-24|0.1.0 22-23|0.2 21-22|0.0 12-13|0.2.0.0.0.1 11-12|0.2.0.0.0 6-7|0.2.0.0.0.2 4-5|0.2.0.0.0.0 3-4|0.2.0.0.0.0.0 1-2|0.2.0 0-1|0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:46.528
# ::node	0	and	25-26
# ::node	0.0	accident	21-22
# ::node	0.1	service	24-25
# ::node	0.1.0	emergency	23-24
# ::node	0.2	and	22-23
# ::node	0.2.0	tell-01	1-2
# ::node	0.2.0.0	he	0-1
# ::node	0.2.0.0.0	move-01	11-12
# ::node	0.2.0.0.0.0	manage-01	4-5
# ::node	0.2.0.0.0.0.0	local	3-4
# ::node	0.2.0.0.0.1	increase-01	12-13
# ::node	0.2.0.0.0.2	part	6-7
# ::root	0	and
# ::edge	and	mod	accident	0	0.0	
# ::edge	and	op1	service	0	0.1	
# ::edge	and	poss	and	0.2	0	
# ::edge	increase-01	ARG1	move-01	0.2.0.0.0.1	0.2.0.0.0	
# ::edge	manage-01	mod	local	0.2.0.0.0.0	0.2.0.0.0.0.0	
# ::edge	move-01	ARG0	he	0.2.0.0.0	0.2.0.0	
# ::edge	move-01	ARG1	manage-01	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	move-01	degree	part	0.2.0.0.0	0.2.0.0.0.2	
# ::edge	service	mod	emergency	0.1	0.1.0	
# ::edge	tell-01	ARG0	he	0.2.0	0.2.0.0	
# ::edge	tell-01	ARG1	and	0.2.0	0.2	
(a / and 
      :mod (a3 / accident) 
      :op1 (s / service 
            :mod (e / emergency)) 
      :poss-of (a2 / and 
            :ARG1-of (t / tell-01 
                  :ARG0 (h / he 
                        :ARG0-of (m / move-01 
                              :ARG1 (m2 / manage-01 
                                    :mod (l / local)) 
                              :ARG1-of (i / increase-01) 
                              :degree (p / part))))))

# ::snt the reply said her majesty hopes you will assure mrs price she realised it was an accident and no harm was done
# ::tok the reply said her majesty hopes you will assure mrs price she realised it was an accident and no harm was done
# ::alignments 19-20|0.1.0.1.1.0.0 18-19|0.1.0.1.1.0.0.0 17-18|0.1.0.1.1.0.1.0 16-17|0.1.0.1.1.0.1 13-14|0.1.0.1.1.0 12-13|0.1.0.1.0 11-12|0.1.0.1.0.0 10-11|0.1.0.1.1+0.1.0.1 8-9|0.1.0 6-7|0.1.0.0 5-6|0.1 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:46.867
# ::node	0	say-01	2-3
# ::node	0.0	reply-01	1-2
# ::node	0.1	hope-01	5-6
# ::node	0.1.0	assure-01	8-9
# ::node	0.1.0.0	you	6-7
# ::node	0.1.0.1	thing	10-11
# ::node	0.1.0.1.0	realize-01	12-13
# ::node	0.1.0.1.0.0	she	11-12
# ::node	0.1.0.1.1	price-01	10-11
# ::node	0.1.0.1.1.0	it	13-14
# ::node	0.1.0.1.1.0.0	harm-01	19-20
# ::node	0.1.0.1.1.0.0.0	-	18-19
# ::node	0.1.0.1.1.0.1	accident	16-17
# ::node	0.1.0.1.1.0.1.0	and	17-18
# ::root	0	say-01
# ::edge	accident	domain	it	0.1.0.1.1.0.1	0.1.0.1.1.0	
# ::edge	and	op1	accident	0.1.0.1.1.0.1.0	0.1.0.1.1.0.1	
# ::edge	assure-01	ARG0	you	0.1.0	0.1.0.0	
# ::edge	assure-01	ARG1	thing	0.1.0	0.1.0.1	
# ::edge	harm-01	ARG0	it	0.1.0.1.1.0.0	0.1.0.1.1.0	
# ::edge	harm-01	polarity	-	0.1.0.1.1.0.0	0.1.0.1.1.0.0.0	
# ::edge	hope-01	ARG1	assure-01	0.1	0.1.0	
# ::edge	price-01	ARG0	it	0.1.0.1.1	0.1.0.1.1.0	
# ::edge	price-01	ARG2	thing	0.1.0.1.1	0.1.0.1	
# ::edge	realize-01	ARG0	she	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	realize-01	ARG1	thing	0.1.0.1.0	0.1.0.1	
# ::edge	say-01	ARG0	reply-01	0	0.0	
# ::edge	say-01	ARG1	hope-01	0	0.1	
(s2 / say-01 
      :ARG0 (r2 / reply-01) 
      :ARG1 (h2 / hope-01 
            :ARG1 (a3 / assure-01 
                  :ARG0 (y / you) 
                  :ARG1 (t / thing 
                        :ARG1-of (r / realize-01 
                              :ARG0 (s / she)) 
                        :ARG2-of (p / price-01 
                              :ARG0 (i / it 
                                    :ARG0-of (h / harm-01 
                                          :polarity (- / -)) 
                                    :domain-of (a2 / accident 
                                          :op-of (a / and))))))))

# ::snt mr john strafford of strangers drift north lane said the field is close to a dangerous bend and there have been numerous accidents on the a43
# ::tok mr john strafford of strangers drift north lane said the field is close to a dangerous bend and there have been numerous accidents on the a43
# ::alignments 22-23|0.1.0 21-22|0.1.0.1 17-18|0.1 15-16|0.0 10-11|0.1.0.0 8-9|0 6-7|0.0.0.0 5-6|0.0.0 4-5|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:46.959
# ::node	0	say-01	8-9
# ::node	0.0	dangerous	15-16
# ::node	0.0.0	drift-01	5-6
# ::node	0.0.0.0	north	6-7
# ::node	0.0.0.1	stranger	4-5
# ::node	0.1	and	17-18
# ::node	0.1.0	accident	22-23
# ::node	0.1.0.0	field	10-11
# ::node	0.1.0.1	numerous	21-22
# ::root	0	say-01
# ::edge	accident	domain	field	0.1.0	0.1.0.0	
# ::edge	accident	quant	numerous	0.1.0	0.1.0.1	
# ::edge	and	op1	accident	0.1	0.1.0	
# ::edge	drift-01	ARG0	north	0.0.0	0.0.0.0	
# ::edge	drift-01	ARG1	dangerous	0.0.0	0.0	
# ::edge	drift-01	mod	stranger	0.0.0	0.0.0.1	
# ::edge	say-01	ARG0	dangerous	0	0.0	
# ::edge	say-01	ARG1	and	0	0.1	
(s / say-01 
      :ARG0 (d / dangerous 
            :ARG1-of (d2 / drift-01 
                  :ARG0 (n2 / north) 
                  :mod (s2 / stranger))) 
      :ARG1 (a2 / and 
            :op1 (a / accident 
                  :domain (f / field) 
                  :quant (n / numerous))))

# ::snt bloxham councillor mr keith mitchell whose home overlooks the m40 said there was a great danger of accidents being caused by the fog
# ::tok bloxham councillor mr keith mitchell whose home overlooks the m40 said there was a great danger of accidents being caused by the fog
# ::alignments 19-20|0 17-18|0.1 15-16|0.0 14-15|0.0.0 10-11|0.2 7-8|0.2.0 6-7|0.2.0.0 1-2|0.2.0.1.0+0.2.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:47.095
# ::node	0	cause-01	19-20
# ::node	0.0	danger	15-16
# ::node	0.0.0	great	14-15
# ::node	0.1	accident	17-18
# ::node	0.2	say-01	10-11
# ::node	0.2.0	overlook-01	7-8
# ::node	0.2.0.0	home	6-7
# ::node	0.2.0.1	have-org-role-91	1-2
# ::node	0.2.0.1.0	councillor	1-2
# ::root	0	cause-01
# ::edge	cause-01	ARG0	danger	0	0.0	
# ::edge	cause-01	ARG1	accident	0	0.1	
# ::edge	danger	mod	great	0.0	0.0.0	
# ::edge	have-org-role-91	ARG1	overlook-01	0.2.0.1	0.2.0	
# ::edge	have-org-role-91	ARG2	councillor	0.2.0.1	0.2.0.1.0	
# ::edge	overlook-01	ARG0	home	0.2.0	0.2.0.0	
# ::edge	overlook-01	ARG1	say-01	0.2.0	0.2	
# ::edge	say-01	ARG1	cause-01	0.2	0	
(c / cause-01 
      :ARG0 (d / danger 
            :mod (g / great)) 
      :ARG1 (a / accident) 
      :ARG1-of (s / say-01 
            :ARG1-of (o / overlook-01 
                  :ARG0 (h / home) 
                  :ARG1-of (h2 / have-org-role-91 
                        :ARG2 (c2 / councillor)))))

# ::snt crews operating 999 services would be paid in full between 23 december and 1 january worth up to 420 with bonuses if they provided a full accident and emergency cover and adhered to tuc guidelines on nonurgent work
# ::tok crews operating 999 services would be paid in full between 23 december and 1 january worth up to 420 with bonuses if they provided a full accident and emergency cover and adhered to tuc guidelines on nonurgent work
# ::alignments 34-35|0.0.1.0.0.3.0 30-31|0.0.1.0.0.3 28-29|0.0.1.1.1 27-28|0.0.1.1 26-27|0.0.1.2 25-26|0.0.1.1.0 23-24|0.0.1 22-23|0.0.1.0 20-21|0.0.1.0.0.2 18-19|0.1 15-16|0 14-15|0.2.0+0.2 13-14|0.2.1 12-13|0.0 11-12|0.0.0.0+0.0.0 10-11|0.0.0.2 9-10|0.0.0.1 8-9|0.0.0.1.0 6-7|0.0.1.0.0 3-4|0.0.1.0.0.0 1-2|0.0.1.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:47.614
# ::node	0	worth	15-16
# ::node	0.0	and	12-13
# ::node	0.0.0	date-entity	11-12
# ::node	0.0.0.0	12	11-12
# ::node	0.0.0.1	between	9-10
# ::node	0.0.0.1.0	full	8-9
# ::node	0.0.0.2	23	10-11
# ::node	0.0.1	provide-01	23-24
# ::node	0.0.1.0	they	22-23
# ::node	0.0.1.0.0	pay-01	6-7
# ::node	0.0.1.0.0.0	service	3-4
# ::node	0.0.1.0.0.1	operate-01	1-2
# ::node	0.0.1.0.0.2	bonus	20-21
# ::node	0.0.1.0.0.3	and	30-31
# ::node	0.0.1.0.0.3.0	guideline	34-35
# ::node	0.0.1.1	and	27-28
# ::node	0.0.1.1.0	full	25-26
# ::node	0.0.1.1.1	emergency	28-29
# ::node	0.0.1.2	accident	26-27
# ::node	0.1	420	18-19
# ::node	0.2	date-entity	14-15
# ::node	0.2.0	1	14-15
# ::node	0.2.1	1	13-14
# ::root	0	worth
# ::edge	and	mod	full	0.0.1.1	0.0.1.1.0	
# ::edge	and	op1	date-entity	0.0	0.0.0	
# ::edge	and	op1	emergency	0.0.1.1	0.0.1.1.1	
# ::edge	and	op1	pay-01	0.0.1.0.0.3	0.0.1.0.0	
# ::edge	and	op2	guideline	0.0.1.0.0.3	0.0.1.0.0.3.0	
# ::edge	and	op2	worth	0.0	0	
# ::edge	and	time	provide-01	0.0	0.0.1	
# ::edge	between	op1	date-entity	0.0.0.1	0.0.0	
# ::edge	date-entity	month	1	0.2	0.2.0	
# ::edge	date-entity	month	12	0.0.0	0.0.0.0	
# ::edge	date-entity	quant	1	0.2	0.2.1	
# ::edge	date-entity	quant	23	0.0.0	0.0.0.2	
# ::edge	full	mod	between	0.0.0.1.0	0.0.0.1	
# ::edge	operate-01	ARG1	pay-01	0.0.1.0.0.1	0.0.1.0.0	
# ::edge	pay-01	ARG0	they	0.0.1.0.0	0.0.1.0	
# ::edge	pay-01	ARG1	service	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	pay-01	ARG3	bonus	0.0.1.0.0	0.0.1.0.0.2	
# ::edge	provide-01	ARG0	they	0.0.1	0.0.1.0	
# ::edge	provide-01	ARG1	and	0.0.1	0.0.1.1	
# ::edge	provide-01	ARG2	accident	0.0.1	0.0.1.2	
# ::edge	worth	quant	420	0	0.1	
# ::edge	worth	time	date-entity	0	0.2	
(w / worth 
      :op-of (a4 / and 
            :op1 (d2 / date-entity 
                  :month 12 
                  :op-of (b2 / between 
                        :mod-of (f2 / full)) 
                  :quant 23) 
            :time (p / provide-01 
                  :ARG0 (t / they 
                        :ARG0-of (p2 / pay-01 
                              :ARG1 (s / service) 
                              :ARG1-of (o / operate-01) 
                              :ARG3 (b / bonus) 
                              :op-of (a / and 
                                    :op1 (g / guideline)))) 
                  :ARG1 (a2 / and 
                        :mod (f / full) 
                        :op1 (e / emergency)) 
                  :ARG2 (a3 / accident))) 
      :quant 420 
      :time (d / date-entity 
            :month 1 
            :quant 1))

# ::snt northern ireland railways and the royal ulster constabulary immediately launched an inquiry into the provinces worst rail accident
# ::tok northern ireland railways and the royal ulster constabulary immediately launched an inquiry into the provinces worst rail accident
# ::alignments 17-18|0.2 16-17|0.2.0 15-16|0 14-15|0.1 11-12|0.0 9-10|0.0.1 8-9|0.0.1.1 5-6|0.0.2 3-4|0.0.1.0 2-3|0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:47.737
# ::node	0	bad	15-16
# ::node	0.0	inquire-01	11-12
# ::node	0.0.0	railway	2-3
# ::node	0.0.0.0	north	0-1
# ::node	0.0.1	launch-01	9-10
# ::node	0.0.1.0	and	3-4
# ::node	0.0.1.1	immediate	8-9
# ::node	0.0.2	royal	5-6
# ::node	0.1	province	14-15
# ::node	0.2	accident	17-18
# ::node	0.2.0	rail	16-17
# ::root	0	bad
# ::edge	accident	location	rail	0.2	0.2.0	
# ::edge	accident	mod	bad	0.2	0	
# ::edge	bad	mod	province	0	0.1	
# ::edge	inquire-01	ARG0	railway	0.0	0.0.0	
# ::edge	inquire-01	ARG1	bad	0.0	0	
# ::edge	launch-01	ARG0	and	0.0.1	0.0.1.0	
# ::edge	launch-01	ARG1	inquire-01	0.0.1	0.0	
# ::edge	launch-01	time	immediate	0.0.1	0.0.1.1	
# ::edge	railway	mod	north	0.0.0	0.0.0.0	
# ::edge	royal	op1	inquire-01	0.0.2	0.0	
(b / bad 
      :ARG1-of (i / inquire-01 
            :ARG0 (r3 / railway 
                  :mod (n / north)) 
            :ARG1-of (l / launch-01 
                  :ARG0 (a2 / and) 
                  :time (i2 / immediate)) 
            :op-of (r2 / royal)) 
      :mod (p / province) 
      :mod-of (a / accident 
            :location (r / rail)))

# ::snt   this statement not only turns its back on any dichotomy between principle and policy in judicial decisionmakingfo id114 but invokes a goal of social psychology as justification for wealth redistribution far removed from any conventional objective of accident compensation policy let alone of tort law
# ::tok this statement not only turns its back on any dichotomy between principle and policy in judicial decisionmakingfo id114 but invokes a goal of social psychology as justification for wealth redistribution far removed from any conventional objective of accident compensation policy let alone of tort law
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:47.737
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt mr fielding told me not to use the stove just in case i have an accident
# ::tok mr fielding told me not to use the stove just in case i have an accident
# ::alignments 15-16|0.1.0 12-13|0.1 11-12|0.0.2 9-10|0.0.1 8-9|0.0.0 6-7|0.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:47.765
# ::node	0	tell-01	2-3
# ::node	0.0	use-01	6-7
# ::node	0.0.0	stove	8-9
# ::node	0.0.1	just	9-10
# ::node	0.0.2	case	11-12
# ::node	0.1	i	12-13
# ::node	0.1.0	accident	15-16
# ::root	0	tell-01
# ::edge	accident	example	i	0.1.0	0.1	
# ::edge	tell-01	ARG1	use-01	0	0.0	
# ::edge	tell-01	ARG2	i	0	0.1	
# ::edge	use-01	ARG1	stove	0.0	0.0.0	
# ::edge	use-01	mod	just	0.0	0.0.1	
# ::edge	use-01	prep-with	case	0.0	0.0.2	
(t / tell-01 
      :ARG1 (u / use-01 
            :ARG1 (s / stove) 
            :mod (j / just) 
            :prep-with (c / case)) 
      :ARG2 (i / i 
            :example-of (a / accident)))

# ::snt  a devon and cornwall police spokesman said the cause of the accident is unknown but witnesses have said that for some reason the van was travelling on the incorrect side of the road and into the path of the coach
# ::tok a devon and cornwall police spokesman said the cause of the accident is unknown but witnesses have said that for some reason the van was travelling on the incorrect side of the road and into the path of the coach
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:47.765
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the yeast then produces haemoglobin which could be used in a suitable formulation to treat people seriously injured in accidents and assist in the treatment of heart disease and tumours
# ::tok the yeast then produces haemoglobin which could be used in a suitable formulation to treat people seriously injured in accidents and assist in the treatment of heart disease and tumours
# ::alignments 28-29|0.4.1.0 27-28|0.4.1.1 26-27|0.4.1.1.0 24-25|0.4.1 21-22|0.4 20-21|0 19-20|0.0.0 17-18|0.0 16-17|0.0.1 14-15|0.3 11-12|0.4.0 8-9|0.1 6-7|0.1.0 3-4|0.2 2-3|0.2.1 1-2|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:47.972
# ::node	0	and	20-21
# ::node	0.0	injure-01	17-18
# ::node	0.0.0	accident	19-20
# ::node	0.0.1	serious	16-17
# ::node	0.1	use-01	8-9
# ::node	0.1.0	possible	6-7
# ::node	0.2	produce-01	3-4
# ::node	0.2.0	yeast	1-2
# ::node	0.2.1	then	2-3
# ::node	0.3	treat-01	14-15
# ::node	0.4	assist-01	21-22
# ::node	0.4.0	suit-01	11-12
# ::node	0.4.1	treat-03	24-25
# ::node	0.4.1.0	and	28-29
# ::node	0.4.1.1	disease	27-28
# ::node	0.4.1.1.0	heart	26-27
# ::root	0	and
# ::edge	and	op1	produce-01	0	0.2	
# ::edge	and	op2	treat-01	0	0.3	
# ::edge	and	op3	assist-01	0	0.4	
# ::edge	assist-01	ARG2	treat-03	0.4	0.4.1	
# ::edge	disease	mod	heart	0.4.1.1	0.4.1.1.0	
# ::edge	injure-01	ARG0	accident	0.0	0.0.0	
# ::edge	injure-01	ARG1	and	0.0	0	
# ::edge	injure-01	degree	serious	0.0	0.0.1	
# ::edge	produce-01	ARG0	yeast	0.2	0.2.0	
# ::edge	produce-01	time	then	0.2	0.2.1	
# ::edge	suit-01	ARG1	assist-01	0.4.0	0.4	
# ::edge	treat-03	ARG1	and	0.4.1	0.4.1.0	
# ::edge	treat-03	ARG2	disease	0.4.1	0.4.1.1	
# ::edge	use-01	ARG2	and	0.1	0	
# ::edge	use-01	mod	possible	0.1	0.1.0	
(a3 / and 
      :ARG1-of (i / injure-01 
            :ARG0 (a4 / accident) 
            :degree (s / serious)) 
      :ARG2-of (u / use-01 
            :mod (p / possible)) 
      :op1 (p2 / produce-01 
            :ARG0 (y / yeast) 
            :time (t3 / then)) 
      :op2 (t2 / treat-01) 
      :op3 (a2 / assist-01 
            :ARG1-of (s2 / suit-01) 
            :ARG2 (t / treat-03 
                  :ARG1 (a / and) 
                  :ARG2 (d / disease 
                        :mod (h / heart)))))

# ::snt he has worked tirelessly to reduce accident rates initiating hundreds of road safety improvements we now take for granted like the black and white chevron paving at roundabouts
# ::tok he has worked tirelessly to reduce accident rates initiating hundreds of road safety improvements we now take for granted like the black and white chevron paving at roundabouts
# ::alignments 23-24|0.4 22-23|0 21-22|0.3 18-19|0.0 15-16|0.0.0 14-15|0.2.0 13-14|0.2 12-13|0.2.1 11-12|0.2.1.0 7-8|0.1.1 6-7|0.1.1.0 5-6|0.1 2-3|0.1.0.0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:48.063
# ::node	0	and	22-23
# ::node	0.0	grant-01	18-19
# ::node	0.0.0	now	15-16
# ::node	0.1	reduce-01	5-6
# ::node	0.1.0	he	0-1
# ::node	0.1.0.0	work-01	2-3
# ::node	0.1.1	rate	7-8
# ::node	0.1.1.0	accident	6-7
# ::node	0.2	improve-01	13-14
# ::node	0.2.0	we	14-15
# ::node	0.2.1	safe-41	12-13
# ::node	0.2.1.0	road	11-12
# ::node	0.3	black	21-22
# ::node	0.4	white	23-24
# ::root	0	and
# ::edge	and	op1	reduce-01	0	0.1	
# ::edge	and	op2	improve-01	0	0.2	
# ::edge	and	op3	black	0	0.3	
# ::edge	and	op4	white	0	0.4	
# ::edge	grant-01	ARG0	and	0.0	0	
# ::edge	grant-01	ARG1	now	0.0	0.0.0	
# ::edge	improve-01	ARG0	we	0.2	0.2.0	
# ::edge	improve-01	ARG2	safe-41	0.2	0.2.1	
# ::edge	rate	mod	accident	0.1.1	0.1.1.0	
# ::edge	reduce-01	ARG0	he	0.1	0.1.0	
# ::edge	reduce-01	ARG1	rate	0.1	0.1.1	
# ::edge	safe-41	mod	road	0.2.1	0.2.1.0	
# ::edge	work-01	ARG0	he	0.1.0.0	0.1.0	
(a / and 
      :ARG0-of (g / grant-01 
            :ARG1 (n / now)) 
      :op1 (r3 / reduce-01 
            :ARG0 (h / he 
                  :ARG0-of (w3 / work-01)) 
            :ARG1 (r2 / rate 
                  :mod (a2 / accident))) 
      :op2 (i / improve-01 
            :ARG0 (w2 / we) 
            :ARG2 (s / safe-41 
                  :mod (r / road))) 
      :op3 (b / black) 
      :op4 (w / white))

# ::snt an accident of war
# ::tok an accident of war
# ::alignments 3-4|0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:48.066
# ::node	0	accident	1-2
# ::node	0.0	war	3-4
# ::root	0	accident
# ::edge	accident	topic	war	0	0.0	
(a / accident 
      :topic (w / war))

# ::snt from midnight tonight crews across the country will handle only accident and emergency calls in protest at the governments pay offer which could bring army ambulances dash
# ::tok from midnight tonight crews across the country will handle only accident and emergency calls in protest at the governments pay offer which could bring army ambulances dash
# ::alignments 24-25|0.1.0.0 23-24|0.1.0 22-23|0.1.0.1 20-21|0.1 19-20|0.1.1 18-19|0.1.1.0.0+0.1.1.0 15-16|0.1.1.1 12-13|0.2 11-12|0 10-11|0.0.0 9-10|0.0.0.0 8-9|0.0 6-7|0.1.1.0.0.0 4-5|0.1.1.0.0.0.0 2-3|0.1.2.0 1-2|0.1.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:48.806
# ::node	0	and	11-12
# ::node	0.0	handle-01	8-9
# ::node	0.0.0	accident	10-11
# ::node	0.0.0.0	only	9-10
# ::node	0.1	offer-01	20-21
# ::node	0.1.0	bring-01	23-24
# ::node	0.1.0.0	army	24-25
# ::node	0.1.0.1	possible	22-23
# ::node	0.1.1	pay-01	19-20
# ::node	0.1.1.0	government-organization	18-19
# ::node	0.1.1.0.0	govern-01	18-19
# ::node	0.1.1.0.0.0	country	6-7
# ::node	0.1.1.0.0.0.0	across	4-5
# ::node	0.1.1.1	protest-01	15-16
# ::node	0.1.2	midnight	1-2
# ::node	0.1.2.0	tonight	2-3
# ::node	0.2	emergency	12-13
# ::root	0	and
# ::edge	accident	mod	only	0.0.0	0.0.0.0	
# ::edge	across	op1	country	0.1.1.0.0.0.0	0.1.1.0.0.0	
# ::edge	and	op1	emergency	0	0.2	
# ::edge	bring-01	ARG0	offer-01	0.1.0	0.1	
# ::edge	bring-01	ARG1	army	0.1.0	0.1.0.0	
# ::edge	bring-01	mod	possible	0.1.0	0.1.0.1	
# ::edge	govern-01	ARG0	government-organization	0.1.1.0.0	0.1.1.0	
# ::edge	govern-01	ARG1	country	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	handle-01	ARG0	and	0.0	0	
# ::edge	handle-01	ARG1	accident	0.0	0.0.0	
# ::edge	midnight	op1	offer-01	0.1.2	0.1	
# ::edge	offer-01	ARG1	and	0.1	0	
# ::edge	pay-01	ARG0	government-organization	0.1.1	0.1.1.0	
# ::edge	pay-01	ARG1	offer-01	0.1.1	0.1	
# ::edge	protest-01	ARG1	pay-01	0.1.1.1	0.1.1	
# ::edge	tonight	mod	midnight	0.1.2.0	0.1.2	
(a2 / and 
      :ARG0-of (h / handle-01 
            :ARG1 (a3 / accident 
                  :mod (o2 / only))) 
      :ARG1-of (o / offer-01 
            :ARG0-of (b / bring-01 
                  :ARG1 (a / army) 
                  :mod (p / possible)) 
            :ARG1-of (p2 / pay-01 
                  :ARG0 (g / government-organization 
                        :ARG0-of (g2 / govern-01 
                              :ARG1 (c / country 
                                    :op-of (a4 / across)))) 
                  :ARG1-of (p3 / protest-01)) 
            :op-of (m / midnight 
                  :mod-of (t / tonight))) 
      :op1 (e / emergency))

# ::snt it must be made clear that this sort of accident was wholly avoidable this sort of death was wholly avoidable
# ::tok it must be made clear that this sort of accident was wholly avoidable this sort of death was wholly avoidable
# ::alignments 18-19|0.1.0.0.0 16-17|0 14-15|0.2 13-14|0.2.0 11-12|0.0 9-10|0.1.0.0 7-8|0.1.0 6-7|0.1 4-5|0.3.0 0-1|0.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:48.890
# ::node	0	die-01	16-17
# ::node	0.0	whole	11-12
# ::node	0.1	this	6-7
# ::node	0.1.0	sort	7-8
# ::node	0.1.0.0	accident	9-10
# ::node	0.1.0.0.0	whole	18-19
# ::node	0.2	sort	14-15
# ::node	0.2.0	this	13-14
# ::node	0.3	it	0-1
# ::node	0.3.0	clear	4-5
# ::root	0	die-01
# ::edge	accident	mod	sort	0.1.0.0	0.1.0	
# ::edge	accident	poss	whole	0.1.0.0	0.1.0.0.0	
# ::edge	clear	domain	it	0.3.0	0.3	
# ::edge	die-01	ARG1	whole	0	0.0	
# ::edge	die-01	manner	this	0	0.1	
# ::edge	die-01	mod	sort	0	0.2	
# ::edge	it	op1	die-01	0.3	0	
# ::edge	sort	mod	this	0.1.0	0.1	
# ::edge	sort	mod	this	0.2	0.2.0	
(d / die-01 
      :ARG1 (w2 / whole) 
      :manner (t2 / this 
            :mod-of (s2 / sort 
                  :mod-of (a / accident 
                        :poss (w / whole)))) 
      :mod (s / sort 
            :mod (t / this)) 
      :op-of (i / it 
            :domain-of (c / clear)))

# ::snt it is also evident that the high wooden bins set on the peninsulars restrict the visibility of drivers and will no doubt cause accidents involving pedestrians especially children who step out from behind them
# ::tok it is also evident that the high wooden bins set on the peninsulars restrict the visibility of drivers and will no doubt cause accidents involving pedestrians especially children who step out from behind them
# ::alignments 32-33|0.1.0.0 27-28|0.1.0.1.0 26-27|0.1.0.1 24-25|0.1.0 23-24|0.1 22-23|0 21-22|0.2 20-21|0.2.1 18-19|0.3 17-18|0.3.0.0.0+0.3.0.0 13-14|0.3.0 7-8|0.2.0 6-7|0.0 3-4|0.3.0.0.0.0.0 2-3|0.3.0.0.0.0.0.0 0-1|0.3.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:49.379
# ::node	0	cause-01	22-23
# ::node	0.0	high	6-7
# ::node	0.1	accident	23-24
# ::node	0.1.0	involve-01	24-25
# ::node	0.1.0.0	behind	32-33
# ::node	0.1.0.1	especially	26-27
# ::node	0.1.0.1.0	child	27-28
# ::node	0.2	doubt-01	21-22
# ::node	0.2.0	wood	7-8
# ::node	0.2.1	-	20-21
# ::node	0.3	and	18-19
# ::node	0.3.0	restrict-01	13-14
# ::node	0.3.0.0	person	17-18
# ::node	0.3.0.0.0	drive-01	17-18
# ::node	0.3.0.0.0.0	it	0-1
# ::node	0.3.0.0.0.0.0	evident	3-4
# ::node	0.3.0.0.0.0.0.0	also	2-3
# ::root	0	cause-01
# ::edge	and	op1	restrict-01	0.3	0.3.0	
# ::edge	and	op2	cause-01	0.3	0	
# ::edge	cause-01	ARG0	high	0	0.0	
# ::edge	cause-01	ARG1	accident	0	0.1	
# ::edge	child	mod	especially	0.1.0.1.0	0.1.0.1	
# ::edge	doubt-01	ARG0	wood	0.2	0.2.0	
# ::edge	doubt-01	ARG1	cause-01	0.2	0	
# ::edge	doubt-01	polarity	-	0.2	0.2.1	
# ::edge	drive-01	ARG0	person	0.3.0.0.0	0.3.0.0	
# ::edge	drive-01	ARG1	it	0.3.0.0.0	0.3.0.0.0.0	
# ::edge	evident	domain	it	0.3.0.0.0.0.0	0.3.0.0.0.0	
# ::edge	evident	mod	also	0.3.0.0.0.0.0	0.3.0.0.0.0.0.0	
# ::edge	involve-01	ARG0	behind	0.1.0	0.1.0.0	
# ::edge	involve-01	ARG1	especially	0.1.0	0.1.0.1	
# ::edge	involve-01	ARG2	accident	0.1.0	0.1	
# ::edge	restrict-01	ARG1	person	0.3.0	0.3.0.0	
(c2 / cause-01 
      :ARG0 (h / high) 
      :ARG1 (a / accident 
            :ARG2-of (i / involve-01 
                  :ARG0 (b / behind) 
                  :ARG1 (e / especially 
                        :mod-of (c / child)))) 
      :ARG1-of (d / doubt-01 
            :ARG0 (w / wood) 
            :polarity (- / -)) 
      :op-of (a2 / and 
            :op1 (r / restrict-01 
                  :ARG1 (p / person 
                        :ARG0-of (d2 / drive-01 
                              :ARG1 (i2 / it 
                                    :domain-of (e2 / evident 
                                          :mod (a3 / also))))))))

# ::snt on his retirement became deputy president of the royal society for the prevention of accidents
# ::tok on his retirement became deputy president of the royal society for the prevention of accidents
# ::alignments 14-15|0.0 12-13|0.0.0 9-10|0.0.0.0 8-9|0.0.0.0.1 5-6|0.0.0.0.0.0+0.0.0.0.0 4-5|0.1 3-4|0 2-3|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:49.450
# ::node	0	become-01	3-4
# ::node	0.0	accident	14-15
# ::node	0.0.0	prevent-01	12-13
# ::node	0.0.0.0	society	9-10
# ::node	0.0.0.0.0	have-org-role-91	5-6
# ::node	0.0.0.0.0.0	president	5-6
# ::node	0.0.0.0.1	royal	8-9
# ::node	0.1	deputy	4-5
# ::node	0.2	retire-01	2-3
# ::root	0	become-01
# ::edge	become-01	ARG0	accident	0	0.0	
# ::edge	become-01	ARG1	deputy	0	0.1	
# ::edge	have-org-role-91	ARG1	society	0.0.0.0.0	0.0.0.0	
# ::edge	have-org-role-91	ARG2	president	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	prevent-01	ARG1	accident	0.0.0	0.0	
# ::edge	prevent-01	time	society	0.0.0	0.0.0.0	
# ::edge	retire-01	ARG1	become-01	0.2	0	
# ::edge	society	mod	royal	0.0.0.0	0.0.0.0.1	
(b / become-01 
      :ARG0 (a / accident 
            :ARG1-of (p / prevent-01 
                  :time (s / society 
                        :ARG1-of (h / have-org-role-91 
                              :ARG2 (p2 / president)) 
                        :mod (r / royal)))) 
      :ARG1 (d / deputy) 
      :ARG1-of (r2 / retire-01))

# ::snt if you are permanently disabled as the result of an accident  youll be eligible to receive a tax free lump sum of up to  80000, if you were to die as a result of an accident the plan would pay  out up to 40000 to your estate, and if you and your spouse are covered under the plan and you  both die as a result of the same accident the plan will pay  double the normal individual death benefit making a total of up  to 160000 paid direct to your estate
# ::tok if you are permanently disabled as the result of an accident youll be eligible to receive a tax free lump sum of up to 80000 , if you were to die as a result of an accident the plan would pay out up to 40000 to your estate , and if you and your spouse are covered under the plan and you both die as a result of the same accident the plan will pay double the normal individual death benefit making a total of up to 160000 paid direct to your estate
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:49.451
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt axeladam she was able to persuade him to change both his names was almost six foot four inches tall and although he wasnt quick in any way he had prodigious dignity which unknown to her had been created by a form of dysentery which made him warily stiff in movement careful and studied lest a sudden move cause a serious accident a masked asset which he carried throughout his life
# ::tok axeladam she was able to persuade him to change both his names was almost six foot four inches tall and although he wasnt quick in any way he had prodigious dignity which unknown to her had been created by a form of dysentery which made him warily stiff in movement careful and studied lest a sudden move cause a serious accident a masked asset which he carried throughout his life
# ::alignments 69-70|0.1.1.1.0 67-68|0.1.1.1.0.0 65-66|0.1.1.1 63-64|0.1.1.0 62-63|0.1.1 60-61|0.0 59-60|0.0.0 57-58|0 55-56|0.1.2.0.2.2 52-53|0.1 51-52|0.1.2 50-51|0.1.2.2 49-50|0.1.2.1 47-48|0.1.2.1.0 40-41|0.1.0 37-38|0.1.2.0 32-33|0.1.2.0.2.3+0.1.2.0.2 30-31|0.1.2.0.1 27-28|0.1.2.0.0 26-27|0.1.2.0.2.0.0.0 25-26|0.1.2.0.2.0.0.0.0 23-24|0.1.2.0.2.0.0 21-22|0.1.2.0.2.0 19-20|0.1.2.0.2.1 18-19|0.1.2.0.2.1.1 17-18|0.1.2.0.2.1.1.0.1+0.1.2.0.2.1.1.0 16-17|0.1.2.0.2.1.1.0.0 15-16|0.1.2.0.2.1.0.0.1 14-15|0.1.2.0.2.1.0.0.1.1 13-14|0.1.2.0.2.1.0.0.1.0 11-12|0.1.2.0.2.1.0.0.2.0 9-10|0.1.2.0.2.1.0.0.2.0.0 8-9|0.1.2.0.2.1.0.0.2 5-6|0.1.2.0.2.1.0.0 3-4|0.1.2.0.2.1.0 1-2|0.1.2.0.2.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:51.165
# ::node	0	cause-01	57-58
# ::node	0.0	accident	60-61
# ::node	0.0.0	serious	59-60
# ::node	0.1	study-01	52-53
# ::node	0.1.0	form	40-41
# ::node	0.1.1	mask-01	62-63
# ::node	0.1.1.0	asset	63-64
# ::node	0.1.1.1	he	65-66
# ::node	0.1.1.1.0	life	69-70
# ::node	0.1.1.1.0.0	throughout	67-68
# ::node	0.1.2	and	51-52
# ::node	0.1.2.0	create-01	37-38
# ::node	0.1.2.0.0	he	27-28
# ::node	0.1.2.0.1	dignity	30-31
# ::node	0.1.2.0.2	know-01	32-33
# ::node	0.1.2.0.2.0	he	21-22
# ::node	0.1.2.0.2.0.0	quick	23-24
# ::node	0.1.2.0.2.0.0.0	way	26-27
# ::node	0.1.2.0.2.0.0.0.0	any	25-26
# ::node	0.1.2.0.2.1	and	19-20
# ::node	0.1.2.0.2.1.0	possible	3-4
# ::node	0.1.2.0.2.1.0.0	persuade-01	5-6
# ::node	0.1.2.0.2.1.0.0.0	she	1-2
# ::node	0.1.2.0.2.1.0.0.1	foot	15-16
# ::node	0.1.2.0.2.1.0.0.1.0	almost	13-14
# ::node	0.1.2.0.2.1.0.0.1.1	6	14-15
# ::node	0.1.2.0.2.1.0.0.2	change-01	8-9
# ::node	0.1.2.0.2.1.0.0.2.0	name	11-12
# ::node	0.1.2.0.2.1.0.0.2.0.0	both	9-10
# ::node	0.1.2.0.2.1.1	tall	18-19
# ::node	0.1.2.0.2.1.1.0	distance-quantity	17-18
# ::node	0.1.2.0.2.1.1.0.0	4	16-17
# ::node	0.1.2.0.2.1.1.0.1	inch	17-18
# ::node	0.1.2.0.2.2	sudden	55-56
# ::node	0.1.2.0.2.3	-	32-33
# ::node	0.1.2.1	movement	49-50
# ::node	0.1.2.1.0	stiff	47-48
# ::node	0.1.2.2	careful	50-51
# ::root	0	cause-01
# ::edge	accident	mod	serious	0.0	0.0.0	
# ::edge	and	op1	create-01	0.1.2	0.1.2.0	
# ::edge	and	op1	possible	0.1.2.0.2.1	0.1.2.0.2.1.0	
# ::edge	and	op2	movement	0.1.2	0.1.2.1	
# ::edge	and	op2	tall	0.1.2.0.2.1	0.1.2.0.2.1.1	
# ::edge	and	op3	careful	0.1.2	0.1.2.2	
# ::edge	and	op4	study-01	0.1.2	0.1	
# ::edge	cause-01	ARG1	accident	0	0.0	
# ::edge	change-01	ARG1	name	0.1.2.0.2.1.0.0.2	0.1.2.0.2.1.0.0.2.0	
# ::edge	create-01	ARG0	he	0.1.2.0	0.1.2.0.0	
# ::edge	create-01	ARG1	dignity	0.1.2.0	0.1.2.0.1	
# ::edge	create-01	manner	know-01	0.1.2.0	0.1.2.0.2	
# ::edge	distance-quantity	quant	4	0.1.2.0.2.1.1.0	0.1.2.0.2.1.1.0.0	
# ::edge	distance-quantity	unit	inch	0.1.2.0.2.1.1.0	0.1.2.0.2.1.1.0.1	
# ::edge	foot	mod	almost	0.1.2.0.2.1.0.0.1	0.1.2.0.2.1.0.0.1.0	
# ::edge	foot	quant	6	0.1.2.0.2.1.0.0.1	0.1.2.0.2.1.0.0.1.1	
# ::edge	know-01	ARG0	he	0.1.2.0.2	0.1.2.0.2.0	
# ::edge	know-01	ARG1	and	0.1.2.0.2	0.1.2.0.2.1	
# ::edge	know-01	polarity	-	0.1.2.0.2	0.1.2.0.2.3	
# ::edge	life	poss	he	0.1.1.1.0	0.1.1.1	
# ::edge	mask-01	ARG0	asset	0.1.1	0.1.1.0	
# ::edge	mask-01	ARG1	he	0.1.1	0.1.1.1	
# ::edge	name	quant	both	0.1.2.0.2.1.0.0.2.0	0.1.2.0.2.1.0.0.2.0.0	
# ::edge	persuade-01	ARG0	she	0.1.2.0.2.1.0.0	0.1.2.0.2.1.0.0.0	
# ::edge	persuade-01	ARG1	foot	0.1.2.0.2.1.0.0	0.1.2.0.2.1.0.0.1	
# ::edge	persuade-01	ARG2	change-01	0.1.2.0.2.1.0.0	0.1.2.0.2.1.0.0.2	
# ::edge	possible	domain	persuade-01	0.1.2.0.2.1.0	0.1.2.0.2.1.0.0	
# ::edge	quick	compared-to	way	0.1.2.0.2.0.0	0.1.2.0.2.0.0.0	
# ::edge	quick	domain	he	0.1.2.0.2.0.0	0.1.2.0.2.0	
# ::edge	stiff	mod	movement	0.1.2.1.0	0.1.2.1	
# ::edge	study-01	ARG0	form	0.1	0.1.0	
# ::edge	study-01	ARG1	mask-01	0.1	0.1.1	
# ::edge	study-01	time	cause-01	0.1	0	
# ::edge	sudden	op1	know-01	0.1.2.0.2.2	0.1.2.0.2	
# ::edge	tall	mod	distance-quantity	0.1.2.0.2.1.1	0.1.2.0.2.1.1.0	
# ::edge	throughout	op1	life	0.1.1.1.0.0	0.1.1.1.0	
# ::edge	way	mod	any	0.1.2.0.2.0.0.0	0.1.2.0.2.0.0.0.0	
(c / cause-01 
      :ARG1 (a2 / accident 
            :mod (s / serious)) 
      :time-of (s3 / study-01 
            :ARG0 (f / form) 
            :ARG1 (m / mask-01 
                  :ARG0 (a / asset) 
                  :ARG1 (h / he 
                        :poss-of (l / life 
                              :op-of (t / throughout)))) 
            :op-of (a3 / and 
                  :op1 (c3 / create-01 
                        :ARG0 (h2 / he) 
                        :ARG1 (d / dignity) 
                        :manner (k / know-01 
                              :ARG0 (h3 / he 
                                    :domain-of (q / quick 
                                          :compared-to (w / way 
                                                :mod (a4 / any)))) 
                              :ARG1 (a5 / and 
                                    :op1 (p2 / possible 
                                          :domain (p / persuade-01 
                                                :ARG0 (s5 / she) 
                                                :ARG1 (f2 / foot 
                                                      :mod (a6 / almost) 
                                                      :quant 6) 
                                                :ARG2 (c4 / change-01 
                                                      :ARG1 (n / name 
                                                            :quant (b / both))))) 
                                    :op2 (t2 / tall 
                                          :mod (d2 / distance-quantity 
                                                :quant 4 
                                                :unit (i / inch)))) 
                              :op-of (s2 / sudden) 
                              :polarity -)) 
                  :op2 (m2 / movement 
                        :mod-of (s4 / stiff)) 
                  :op3 (c2 / careful))))

# ::snt i have today tabled further parliamentary questions calling on the government to make public the factory inspectors report on the incident and to say precisely what precautions are being taken to prevent a repetition of this accident and why such precautions were not taken previously
# ::tok i have today tabled further parliamentary questions calling on the government to make public the factory inspectors report on the incident and to say precisely what precautions are being taken to prevent a repetition of this accident and why such precautions were not taken previously
# ::alignments 44-45|0.2 40-41|0.1.2.0 39-40|0.1.2 37-38|0.1 36-37|0.1.1 35-36|0.1.1.0 31-32|0.1.0 26-27|0.1.0.0 24-25|0.1.0.1 23-24|0 21-22|0.3 20-21|0.3.2 17-18|0.3.1 16-17|0.3.1.0.0+0.3.1.0 15-16|0.3.1.0.0.0 13-14|0.3.0 6-7|0.0.0 4-5|0.0.0.1 2-3|0.0.0.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:51.654
# ::node	0	say-01	23-24
# ::node	0.0	i	0-1
# ::node	0.0.0	question-01	6-7
# ::node	0.0.0.0	today	2-3
# ::node	0.0.0.1	further	4-5
# ::node	0.1	and	37-38
# ::node	0.1.0	prevent-01	31-32
# ::node	0.1.0.0	precaution	26-27
# ::node	0.1.0.1	precise	24-25
# ::node	0.1.1	accident	36-37
# ::node	0.1.1.0	this	35-36
# ::node	0.1.2	such	39-40
# ::node	0.1.2.0	precaution	40-41
# ::node	0.2	previous	44-45
# ::node	0.3	and	21-22
# ::node	0.3.0	public	13-14
# ::node	0.3.1	report	17-18
# ::node	0.3.1.0	person	16-17
# ::node	0.3.1.0.0	inspect-01	16-17
# ::node	0.3.1.0.0.0	factory	15-16
# ::node	0.3.2	incident	20-21
# ::root	0	say-01
# ::edge	accident	mod	this	0.1.1	0.1.1.0	
# ::edge	and	op1	prevent-01	0.1	0.1.0	
# ::edge	and	op1	public	0.3	0.3.0	
# ::edge	and	op2	accident	0.1	0.1.1	
# ::edge	and	op2	report	0.3	0.3.1	
# ::edge	and	op3	incident	0.3	0.3.2	
# ::edge	and	op3	such	0.1	0.1.2	
# ::edge	and	op4	say-01	0.3	0	
# ::edge	inspect-01	ARG0	person	0.3.1.0.0	0.3.1.0	
# ::edge	inspect-01	ARG1	factory	0.3.1.0.0	0.3.1.0.0.0	
# ::edge	precaution	mod	such	0.1.2.0	0.1.2	
# ::edge	prevent-01	ARG0	precaution	0.1.0	0.1.0.0	
# ::edge	prevent-01	ARG1	precise	0.1.0	0.1.0.1	
# ::edge	previous	domain	say-01	0.2	0	
# ::edge	question-01	ARG0	i	0.0.0	0.0	
# ::edge	question-01	ARG1	today	0.0.0	0.0.0.0	
# ::edge	question-01	mod	further	0.0.0	0.0.0.1	
# ::edge	report	mod	person	0.3.1	0.3.1.0	
# ::edge	say-01	ARG0	i	0	0.0	
# ::edge	say-01	ARG1	and	0	0.1	
(s2 / say-01 
      :ARG0 (i3 / i 
            :ARG0-of (q / question-01 
                  :ARG1 (t2 / today) 
                  :mod (f2 / further))) 
      :ARG1 (a / and 
            :op1 (p3 / prevent-01 
                  :ARG0 (p4 / precaution) 
                  :ARG1 (p5 / precise)) 
            :op2 (a2 / accident 
                  :mod (t / this)) 
            :op3 (s / such 
                  :mod-of (p2 / precaution))) 
      :domain-of (p / previous) 
      :op-of (a3 / and 
            :op1 (p7 / public) 
            :op2 (r / report 
                  :mod (p6 / person 
                        :ARG0-of (i2 / inspect-01 
                              :ARG1 (f / factory)))) 
            :op3 (i / incident)))

# ::snt an examateur racing driver oscar was confident that after the accident he could execute the necessary uturn to head south again
# ::tok an examateur racing driver oscar was confident that after the accident he could execute the necessary uturn to head south again
# ::alignments 20-21|0.0.0.1.1 19-20|0.0.0.1.1.0 18-19|0.0.0.1 13-14|0.0.0 12-13|0.0 11-12|0.0.0.0 10-11|0.0.0.2.0 8-9|0.0.0.2 6-7|0 3-4|0.0.0.1.0.0+0.0.0.1.0 2-3|0.0.0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:51.741
# ::node	0	confident-41	6-7
# ::node	0.0	possible	12-13
# ::node	0.0.0	execute-01	13-14
# ::node	0.0.0.0	he	11-12
# ::node	0.0.0.1	head-01	18-19
# ::node	0.0.0.1.0	person	3-4
# ::node	0.0.0.1.0.0	drive-01	3-4
# ::node	0.0.0.1.0.1	race-01	2-3
# ::node	0.0.0.1.1	again	20-21
# ::node	0.0.0.1.1.0	south	19-20
# ::node	0.0.0.2	after	8-9
# ::node	0.0.0.2.0	accident	10-11
# ::root	0	confident-41
# ::edge	after	op1	accident	0.0.0.2	0.0.0.2.0	
# ::edge	again	mod	south	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	confident-41	ARG1	possible	0	0.0	
# ::edge	drive-01	ARG0	person	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	execute-01	ARG0	he	0.0.0	0.0.0.0	
# ::edge	execute-01	ARG2	head-01	0.0.0	0.0.0.1	
# ::edge	execute-01	time	after	0.0.0	0.0.0.2	
# ::edge	head-01	ARG0	person	0.0.0.1	0.0.0.1.0	
# ::edge	head-01	mod	again	0.0.0.1	0.0.0.1.1	
# ::edge	possible	domain	execute-01	0.0	0.0.0	
# ::edge	race-01	ARG0	person	0.0.0.1.0.1	0.0.0.1.0	
(c / confident-41 
      :ARG1 (p / possible 
            :domain (e / execute-01 
                  :ARG0 (h2 / he) 
                  :ARG2 (h / head-01 
                        :ARG0 (p2 / person 
                              :ARG0-of (d / drive-01) 
                              :ARG0-of (r / race-01)) 
                        :mod (a / again 
                              :mod (s / south))) 
                  :time (a3 / after 
                        :op1 (a2 / accident)))))

# ::snt the associations magazine which says that insurance companies and the department of transport collect accident details that could throw light on the cars which best protect their occupants but this information is not made public
# ::tok the associations magazine which says that insurance companies and the department of transport collect accident details that could throw light on the cars which best protect their occupants but this information is not made public
# ::alignments 34-35|0.0.1.0.0.0.2.0.0.0.0 30-31|0.1 29-30|0.1.0 28-29|0 27-28|0.0.0+0.0 25-26|0.0.1 22-23|0.0.1.0 19-20|0.0.1.0.0.1 18-19|0.0.1.0.0 17-18|0.0.1.0.0.2 15-16|0.0.1.0.0.0 14-15|0.0.1.0.0.0.1 13-14|0.0.1.0.0.0.2 12-13|0.0.1.0.0.0.2.0.0.0 10-11|0.0.1.0.0.0.2.0.0 8-9|0.0.1.0.0.0.2.0 7-8|0.0.1.0.0.0.0 6-7|0.0.1.0.0.0.0.0 4-5|0.0.1.0.0.0.2.1 2-3|0.0.1.0.0.0.2.1.0 1-2|0.0.1.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:52.348
# ::node	0	contrast-01	28-29
# ::node	0.0	person	27-28
# ::node	0.0.0	occupy-01	27-28
# ::node	0.0.1	protect-01	25-26
# ::node	0.0.1.0	car	22-23
# ::node	0.0.1.0.0	throw-01	18-19
# ::node	0.0.1.0.0.0	detail-01	15-16
# ::node	0.0.1.0.0.0.0	company	7-8
# ::node	0.0.1.0.0.0.0.0	insure-02	6-7
# ::node	0.0.1.0.0.0.0.0.0	association	1-2
# ::node	0.0.1.0.0.0.1	accident	14-15
# ::node	0.0.1.0.0.0.2	collect-01	13-14
# ::node	0.0.1.0.0.0.2.0	and	8-9
# ::node	0.0.1.0.0.0.2.0.0	department	10-11
# ::node	0.0.1.0.0.0.2.0.0.0	transport-01	12-13
# ::node	0.0.1.0.0.0.2.0.0.0.0	public	34-35
# ::node	0.0.1.0.0.0.2.1	say-01	4-5
# ::node	0.0.1.0.0.0.2.1.0	magazine	2-3
# ::node	0.0.1.0.0.1	light	19-20
# ::node	0.0.1.0.0.2	possible	17-18
# ::node	0.1	information	30-31
# ::node	0.1.0	this	29-30
# ::root	0	contrast-01
# ::edge	and	op1	department	0.0.1.0.0.0.2.0	0.0.1.0.0.0.2.0.0	
# ::edge	collect-01	ARG0	and	0.0.1.0.0.0.2	0.0.1.0.0.0.2.0	
# ::edge	collect-01	ARG1	detail-01	0.0.1.0.0.0.2	0.0.1.0.0.0	
# ::edge	contrast-01	ARG1	person	0	0.0	
# ::edge	contrast-01	ARG2	information	0	0.1	
# ::edge	detail-01	ARG0	company	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	detail-01	ARG1	accident	0.0.1.0.0.0	0.0.1.0.0.0.1	
# ::edge	information	mod	this	0.1	0.1.0	
# ::edge	insure-02	ARG0	company	0.0.1.0.0.0.0.0	0.0.1.0.0.0.0	
# ::edge	insure-02	ARG1	association	0.0.1.0.0.0.0.0	0.0.1.0.0.0.0.0.0	
# ::edge	occupy-01	ARG0	person	0.0.0	0.0	
# ::edge	possible	domain	throw-01	0.0.1.0.0.2	0.0.1.0.0	
# ::edge	protect-01	ARG0	car	0.0.1	0.0.1.0	
# ::edge	protect-01	ARG1	person	0.0.1	0.0	
# ::edge	say-01	ARG0	magazine	0.0.1.0.0.0.2.1	0.0.1.0.0.0.2.1.0	
# ::edge	say-01	ARG1	collect-01	0.0.1.0.0.0.2.1	0.0.1.0.0.0.2	
# ::edge	throw-01	ARG0	detail-01	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	throw-01	ARG1	light	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	throw-01	ARG2	car	0.0.1.0.0	0.0.1.0	
# ::edge	transport-01	ARG1	public	0.0.1.0.0.0.2.0.0.0	0.0.1.0.0.0.2.0.0.0.0	
# ::edge	transport-01	instrument	department	0.0.1.0.0.0.2.0.0.0	0.0.1.0.0.0.2.0.0	
(c / contrast-01 
      :ARG1 (p2 / person 
            :ARG0-of (o / occupy-01) 
            :ARG1-of (p3 / protect-01 
                  :ARG0 (c2 / car 
                        :ARG2-of (t2 / throw-01 
                              :ARG0 (d / detail-01 
                                    :ARG0 (c4 / company 
                                          :ARG0-of (i2 / insure-02 
                                                :ARG1 (a3 / association))) 
                                    :ARG1 (a / accident) 
                                    :ARG1-of (c3 / collect-01 
                                          :ARG0 (a2 / and 
                                                :op1 (d2 / department 
                                                      :instrument-of (t3 / transport-01 
                                                            :ARG1 (p / public)))) 
                                          :ARG1-of (s / say-01 
                                                :ARG0 (m / magazine)))) 
                              :ARG1 (l / light) 
                              :domain-of (p4 / possible))))) 
      :ARG2 (i / information 
            :mod (t / this)))

# ::snt although the british nuclear industry had a good safety record accidents involving highly complex interacting human and technological systems are notoriously difficult to predict
# ::tok although the british nuclear industry had a good safety record accidents involving highly complex interacting human and technological systems are notoriously difficult to predict
# ::alignments 23-24|0.0.0 21-22|0.0.0.1 20-21|0.0.0.1.0 18-19|0.0 17-18|0.0.1 16-17|0 15-16|0.0.2 13-14|0.0.0.0.1.0 12-13|0.0.0.0.1.0.0 11-12|0.0.0.0.1 10-11|0.0.0.0 9-10|0.0.0.0.2 8-9|0.0.0.0.0 7-8|0.0.0.0.0.1 4-5|0.0.0.0.0.0 3-4|0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:52.788
# ::node	0	and	16-17
# ::node	0.0	system	18-19
# ::node	0.0.0	predict-01	23-24
# ::node	0.0.0.0	accident	10-11
# ::node	0.0.0.0.0	safe-41	8-9
# ::node	0.0.0.0.0.0	industry	4-5
# ::node	0.0.0.0.0.0.0	nucleus	3-4
# ::node	0.0.0.0.0.1	good	7-8
# ::node	0.0.0.0.1	involve-01	11-12
# ::node	0.0.0.0.1.0	complex	13-14
# ::node	0.0.0.0.1.0.0	high	12-13
# ::node	0.0.0.0.2	record	9-10
# ::node	0.0.0.1	difficult	21-22
# ::node	0.0.0.1.0	notorious	20-21
# ::node	0.0.1	technology	17-18
# ::node	0.0.2	human	15-16
# ::root	0	and
# ::edge	accident	mod	record	0.0.0.0	0.0.0.0.2	
# ::edge	and	op1	system	0	0.0	
# ::edge	complex	degree	high	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	difficult	domain	predict-01	0.0.0.1	0.0.0	
# ::edge	difficult	mod	notorious	0.0.0.1	0.0.0.1.0	
# ::edge	industry	mod	nucleus	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	involve-01	ARG2	accident	0.0.0.0.1	0.0.0.0	
# ::edge	involve-01	manner	complex	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	predict-01	ARG0	system	0.0.0	0.0	
# ::edge	predict-01	ARG1	accident	0.0.0	0.0.0.0	
# ::edge	safe-41	ARG0	accident	0.0.0.0.0	0.0.0.0	
# ::edge	safe-41	ARG1	industry	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	safe-41	mod	good	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	system	mod	human	0.0	0.0.2	
# ::edge	system	mod	technology	0.0	0.0.1	
(a / and 
      :op1 (s / system 
            :ARG0-of (p / predict-01 
                  :ARG1 (a2 / accident 
                        :ARG0-of (s2 / safe-41 
                              :ARG1 (i2 / industry 
                                    :mod (n2 / nucleus)) 
                              :mod (g / good)) 
                        :ARG2-of (i / involve-01 
                              :manner (c / complex 
                                    :degree (h2 / high))) 
                        :mod (r / record)) 
                  :domain-of (d / difficult 
                        :mod (n / notorious))) 
            :mod (t / technology) 
            :mod (h / human)))

# ::snt teresa risner of wroxton court banbury was getting out of her toyata car at the bridge street station when the accident happened trapping her leg between the door and the sill
# ::tok teresa risner of wroxton court banbury was getting out of her toyata car at the bridge street station when the accident happened trapping her leg between the door and the sill
# ::alignments 28-29|0 27-28|0.1 25-26|0.1.0 24-25|0.0 21-22|0.0.0.0 20-21|0.0.0 17-18|0.0.0.0.1 16-17|0.0.0.0.1.1 15-16|0.0.0.0.1.0 12-13|0.0.0.0.1.1.0 4-5|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:52.917
# ::node	0	and	28-29
# ::node	0.0	leg	24-25
# ::node	0.0.0	accident	20-21
# ::node	0.0.0.0	happen-01	21-22
# ::node	0.0.0.0.0	court	4-5
# ::node	0.0.0.0.1	station	17-18
# ::node	0.0.0.0.1.0	bridge	15-16
# ::node	0.0.0.0.1.1	street	16-17
# ::node	0.0.0.0.1.1.0	car	12-13
# ::node	0.1	door	27-28
# ::node	0.1.0	between	25-26
# ::root	0	and
# ::edge	and	op1	leg	0	0.0	
# ::edge	and	op2	door	0	0.1	
# ::edge	between	op1	door	0.1.0	0.1	
# ::edge	car	location	street	0.0.0.0.1.1.0	0.0.0.0.1.1	
# ::edge	happen-01	ARG0	court	0.0.0.0	0.0.0.0.0	
# ::edge	happen-01	ARG1	accident	0.0.0.0	0.0.0	
# ::edge	happen-01	location	station	0.0.0.0	0.0.0.0.1	
# ::edge	leg	poss	accident	0.0	0.0.0	
# ::edge	station	location	bridge	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	station	mod	street	0.0.0.0.1	0.0.0.0.1.1	
(a / and 
      :op1 (l / leg 
            :poss (a2 / accident 
                  :ARG1-of (h / happen-01 
                        :ARG0 (c2 / court) 
                        :location (s / station 
                              :location (b2 / bridge) 
                              :mod (s2 / street 
                                    :location-of (c / car)))))) 
      :op2 (d / door 
            :op-of (b / between)))

# ::snt can it be an accident that the subject of this huge canvas is five whores in a brothel
# ::tok can it be an accident that the subject of this huge canvas is five whores in a brothel
# ::alignments 13-14|0.1 11-12|0.0.1 10-11|0.0.1.0 9-10|0.0.1.1 7-8|0.0.1.2 4-5|0.0 1-2|0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:52.946
# ::node	0	possible	0-1
# ::node	0.0	accident	4-5
# ::node	0.0.0	it	1-2
# ::node	0.0.1	canvas	11-12
# ::node	0.0.1.0	huge	10-11
# ::node	0.0.1.1	this	9-10
# ::node	0.0.1.2	subject	7-8
# ::node	0.1	5	13-14
# ::root	0	possible
# ::edge	accident	domain	it	0.0	0.0.0	
# ::edge	canvas	mod	accident	0.0.1	0.0	
# ::edge	canvas	mod	huge	0.0.1	0.0.1.0	
# ::edge	canvas	mod	this	0.0.1	0.0.1.1	
# ::edge	possible	domain	accident	0	0.0	
# ::edge	possible	poss	5	0	0.1	
# ::edge	subject	poss	canvas	0.0.1.2	0.0.1	
(p / possible 
      :domain (a / accident 
            :domain (i / it) 
            :mod-of (c / canvas 
                  :mod (h / huge) 
                  :mod (t / this) 
                  :poss-of (s / subject))) 
      :poss 5)

# ::snt the accident has prompted the mod to change its training procedures which it admits were inadequate
# ::tok the accident has prompted the mod to change its training procedures which it admits were inadequate
# ::alignments 15-16|0.1.0.1.0.0.0+0.1.0.1.0.0 13-14|0.1.0.1 12-13|0.1.0.1.0 10-11|0.1.0 9-10|0.1.0.0 7-8|0.1 3-4|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:52.974
# ::node	0	prompt-02	3-4
# ::node	0.0	accident	1-2
# ::node	0.1	change-01	7-8
# ::node	0.1.0	procedure	10-11
# ::node	0.1.0.0	train-01	9-10
# ::node	0.1.0.1	admit-02	13-14
# ::node	0.1.0.1.0	it	12-13
# ::node	0.1.0.1.0.0	adequate	15-16
# ::node	0.1.0.1.0.0.0	-	15-16
# ::root	0	prompt-02
# ::edge	adequate	domain	it	0.1.0.1.0.0	0.1.0.1.0	
# ::edge	adequate	polarity	-	0.1.0.1.0.0	0.1.0.1.0.0.0	
# ::edge	admit-02	ARG0	it	0.1.0.1	0.1.0.1.0	
# ::edge	admit-02	ARG1	procedure	0.1.0.1	0.1.0	
# ::edge	change-01	ARG1	procedure	0.1	0.1.0	
# ::edge	prompt-02	ARG0	accident	0	0.0	
# ::edge	prompt-02	ARG1	change-01	0	0.1	
# ::edge	train-01	ARG0	procedure	0.1.0.0	0.1.0	
(p2 / prompt-02 
      :ARG0 (a3 / accident) 
      :ARG1 (c / change-01 
            :ARG1 (p / procedure 
                  :ARG0-of (t / train-01) 
                  :ARG1-of (a2 / admit-02 
                        :ARG0 (i / it 
                              :domain-of (a / adequate 
                                    :polarity -))))))

# ::snt payment protection  for more security and peace of mind this lowcost insurance  option guarantees your mortgage or loan repayments in the event  of accident sickness or unemployment
# ::tok payment protection for more security and peace of mind this lowcost insurance option guarantees your mortgage or loan repayments in the event of accident sickness or unemployment
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:52.974
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt truthfully martha ellip   he could not stop laughing even if it was an accident you really look beautiful
# ::tok truthfully martha ellip he could not stop laughing even if it was an accident you really look beautiful
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:52.975
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt not only does it lead to absenteeism from work and increased death rates among the elderly and vulnerable but research shows that it does increase accident rates and that there may be an increase in depression and chronic fatigue after the flu symptoms have disappeared
# ::tok not only does it lead to absenteeism from work and increased death rates among the elderly and vulnerable but research shows that it does increase accident rates and that there may be an increase in depression and chronic fatigue after the flu symptoms have disappeared
# ::alignments 44-45|0.0.1 42-43|0.0.1.1 41-42|0.2.2.2 39-40|0.0.1.2 38-39|0.2.2.1 37-38|0.2.2.3.1 36-37|0.2.2.3 35-36|0.2.2.3.0 33-34|0.2.2 30-31|0.2.1.0+0.2.1 27-28|0.2 26-27|0.2.0 25-26|0.2.0.0 24-25|0.2.2.0.0 22-23|0.2.2.0 20-21|0.0 19-20|0.0.0 18-19|0 17-18|0.1.1.0.0 16-17|0.1 15-16|0.1.1 13-14|0.1.1.0 12-13|0.1.0.0.0 11-12|0.1.0.0.0.0 10-11|0.1.0.0 9-10|0.1.0 3-4|0.0.1.0 1-2|0.1.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:53.836
# ::node	0	contrast-01	18-19
# ::node	0.0	show-01	20-21
# ::node	0.0.0	research-01	19-20
# ::node	0.0.1	disappear-01	44-45
# ::node	0.0.1.0	it	3-4
# ::node	0.0.1.1	symptom	42-43
# ::node	0.0.1.2	after	39-40
# ::node	0.1	and	16-17
# ::node	0.1.0	and	9-10
# ::node	0.1.0.0	increase-01	10-11
# ::node	0.1.0.0.0	rate	12-13
# ::node	0.1.0.0.0.0	die-01	11-12
# ::node	0.1.0.0.0.0.0	only	1-2
# ::node	0.1.1	elderly	15-16
# ::node	0.1.1.0	among	13-14
# ::node	0.1.1.0.0	vulnerable	17-18
# ::node	0.2	and	27-28
# ::node	0.2.0	rate	26-27
# ::node	0.2.0.0	accident	25-26
# ::node	0.2.1	date-entity	30-31
# ::node	0.2.1.0	5	30-31
# ::node	0.2.2	increase-01	33-34
# ::node	0.2.2.0	it	22-23
# ::node	0.2.2.0.0	increase-01	24-25
# ::node	0.2.2.1	fatigue	38-39
# ::node	0.2.2.2	flu	41-42
# ::node	0.2.2.3	and	36-37
# ::node	0.2.2.3.0	depression	35-36
# ::node	0.2.2.3.1	chronic	37-38
# ::root	0	contrast-01
# ::edge	after	op1	disappear-01	0.0.1.2	0.0.1	
# ::edge	among	op1	elderly	0.1.1.0	0.1.1	
# ::edge	among	op2	vulnerable	0.1.1.0	0.1.1.0.0	
# ::edge	and	example	and	0.1.0	0.1	
# ::edge	and	op1	contrast-01	0.2	0	
# ::edge	and	op1	elderly	0.1	0.1.1	
# ::edge	and	op1	increase-01	0.2.2.3	0.2.2	
# ::edge	and	op2	contrast-01	0.1	0	
# ::edge	and	op2	depression	0.2.2.3	0.2.2.3.0	
# ::edge	and	op2	rate	0.2	0.2.0	
# ::edge	and	op3	chronic	0.2.2.3	0.2.2.3.1	
# ::edge	and	op3	date-entity	0.2	0.2.1	
# ::edge	and	op4	increase-01	0.2	0.2.2	
# ::edge	contrast-01	ARG2	show-01	0	0.0	
# ::edge	date-entity	month	5	0.2.1	0.2.1.0	
# ::edge	die-01	ARG1	only	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	disappear-01	ARG0	it	0.0.1	0.0.1.0	
# ::edge	disappear-01	ARG1	symptom	0.0.1	0.0.1.1	
# ::edge	increase-01	ARG0	it	0.2.2	0.2.2.0	
# ::edge	increase-01	ARG0	it	0.2.2.0.0	0.2.2.0	
# ::edge	increase-01	ARG0	rate	0.1.0.0	0.1.0.0.0	
# ::edge	increase-01	ARG1	and	0.1.0.0	0.1.0	
# ::edge	increase-01	ARG1	fatigue	0.2.2	0.2.2.1	
# ::edge	increase-01	location	flu	0.2.2	0.2.2.2	
# ::edge	rate	mod	accident	0.2.0	0.2.0.0	
# ::edge	rate	mod	die-01	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	show-01	ARG1	research-01	0.0	0.0.0	
# ::edge	show-01	condition	disappear-01	0.0	0.0.1	
(c2 / contrast-01 
      :ARG2 (s2 / show-01 
            :ARG1 (r2 / research-01) 
            :condition (d / disappear-01 
                  :ARG0 (i5 / it) 
                  :ARG1 (s / symptom) 
                  :op-of (a / after))) 
      :op-of (a5 / and 
            :example-of (a7 / and 
                  :ARG1-of (i4 / increase-01 
                        :ARG0 (r3 / rate 
                              :mod (d4 / die-01 
                                    :ARG1 (o / only))))) 
            :op1 (e / elderly 
                  :op-of (a6 / among 
                        :op1 (v / vulnerable)))) 
      :op-of (a3 / and 
            :op1 (r / rate 
                  :mod (a4 / accident)) 
            :op2 (d3 / date-entity 
                  :month 5) 
            :op3 (i / increase-01 
                  :ARG0 (i3 / it 
                        :ARG0-of (i2 / increase-01)) 
                  :ARG1 (f2 / fatigue) 
                  :location (f / flu) 
                  :op-of (a2 / and 
                        :op1 (d2 / depression) 
                        :op2 (c / chronic)))))

# ::snt it is to be mailed to the massachusetts attorney general return receipt requested in the event i have an accident
# ::tok it is to be mailed to the massachusetts attorney general return receipt requested in the event i have an accident
# ::alignments 19-20|0.0.2.0.0 16-17|0.0.2.0 15-16|0.0.2 12-13|0.0 11-12|0.0.1 9-10|0.0.1.0 8-9|0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:53.905
# ::node	0	attorney	8-9
# ::node	0.0	request-01	12-13
# ::node	0.0.0	it	0-1
# ::node	0.0.1	receipt	11-12
# ::node	0.0.1.0	general	9-10
# ::node	0.0.2	event	15-16
# ::node	0.0.2.0	i	16-17
# ::node	0.0.2.0.0	accident	19-20
# ::root	0	attorney
(a2 / attorney 
      :time-of (r / request-01 
            :ARG0 (i2 / it) 
            :ARG1 (r2 / receipt 
                  :mod (g / general)) 
            :ARG2 (e / event 
                  :poss (i / i 
                        :example-of (a / accident)))))

# ::snt there are also about 100000 accident and emergency cases treated each year at the hospital which has 1393 beds and a staff of more than 4000
# ::tok there are also about 100000 accident and emergency cases treated each year at the hospital which has 1393 beds and a staff of more than 4000
# ::alignments 25-26|0.0.0.0 21-22|0.1.0+0.1 19-20|0 17-18|0.0.0.3.0+0.0.0.3 14-15|0.0.0.2 11-12|0.0.0.4 10-11|0.0.0.4.0 9-10|0.0.0 8-9|0.0.0.1 7-8|0.0.0.1.0 6-7|0.0 5-6|0.0.1 4-5|0.0.1.0.2+0.0.1.0.1+0.0.1.0.0+0.0.1.0 2-3|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:54.383
# ::node	0	and	19-20
# ::node	0.0	and	6-7
# ::node	0.0.0	treat-01	9-10
# ::node	0.0.0.0	4000	25-26
# ::node	0.0.0.1	case	8-9
# ::node	0.0.0.1.0	emergency	7-8
# ::node	0.0.0.2	hospital	14-15
# ::node	0.0.0.3	date-entity	17-18
# ::node	0.0.0.3.0	1393	17-18
# ::node	0.0.0.4	year	11-12
# ::node	0.0.0.4.0	each	10-11
# ::node	0.0.1	accident	5-6
# ::node	0.0.1.0	date-entity	4-5
# ::node	0.0.1.0.0	0	4-5
# ::node	0.0.1.0.1	0	4-5
# ::node	0.0.1.0.2	10	4-5
# ::node	0.1	person	21-22
# ::node	0.1.0	staff-01	21-22
# ::node	0.1.0.0	also	2-3
# ::root	0	and
# ::edge	accident	time	date-entity	0.0.1	0.0.1.0	
# ::edge	and	op1	accident	0.0	0.0.1	
# ::edge	and	op1	and	0	0.0	
# ::edge	and	op2	person	0	0.1	
# ::edge	case	mod	emergency	0.0.0.1	0.0.0.1.0	
# ::edge	date-entity	day	0	0.0.1.0	0.0.1.0.0	
# ::edge	date-entity	month	0	0.0.1.0	0.0.1.0.1	
# ::edge	date-entity	op1	treat-01	0.0.0.3	0.0.0	
# ::edge	date-entity	year	10	0.0.1.0	0.0.1.0.2	
# ::edge	date-entity	year	1393	0.0.0.3	0.0.0.3.0	
# ::edge	staff-01	ARG1	also	0.1.0	0.1.0.0	
# ::edge	staff-01	ARG2	person	0.1.0	0.1	
# ::edge	treat-01	ARG0	4000	0.0.0	0.0.0.0	
# ::edge	treat-01	ARG1	and	0.0.0	0.0	
# ::edge	treat-01	ARG2	case	0.0.0	0.0.0.1	
# ::edge	treat-01	location	hospital	0.0.0	0.0.0.2	
# ::edge	treat-01	time	year	0.0.0	0.0.0.4	
# ::edge	year	mod	each	0.0.0.4	0.0.0.4.0	
(a / and 
      :op1 (a2 / and 
            :ARG1-of (t / treat-01 
                  :ARG0 4000 
                  :ARG2 (c / case 
                        :mod (e2 / emergency)) 
                  :location (h / hospital) 
                  :op-of (d / date-entity 
                        :year 1393) 
                  :time (y / year 
                        :mod (e / each))) 
            :op1 (a3 / accident 
                  :time (d2 / date-entity 
                        :day 0 
                        :month 0 
                        :year 10))) 
      :op2 (p / person 
            :ARG2-of (s / staff-01 
                  :ARG1 (a4 / also))))

# ::snt this is not to say that an accident demonstrates folly, the ski club of great britain has lately been reviewing its practices in the wake of its involvement in a fatal accident last winter in verbier
# ::tok this is not to say that an accident demonstrates folly , the ski club of great britain has lately been reviewing its practices in the wake of its involvement in a fatal accident last winter in verbier
# ::alignments 34-35|0.0.1.2.0.1 33-34|0.0.1.2.1 32-33|0.0.1.2.0.0 31-32|0.0.1.2.0.0.0 28-29|0.0.1.2.0 25-26|0.0.1.2 22-23|0.0.1.1 20-21|0.0.1 18-19|0.0.1.3 16-17|0.0.1.1.1.0.0.0+0.0.1.1.1.0.0+0.0.1.1.1.0 15-16|0.0.1.1.1 13-14|0.0.1.0 8-9|0.0 7-8|0.0.0 4-5|0 0-1|0.0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:54.656
# ::node	0	say-01	4-5
# ::node	0.0	demonstrate-01	8-9
# ::node	0.0.0	accident	7-8
# ::node	0.0.1	review-01	20-21
# ::node	0.0.1.0	club	13-14
# ::node	0.0.1.1	practice-01	22-23
# ::node	0.0.1.1.0	this	0-1
# ::node	0.0.1.1.1	great	15-16
# ::node	0.0.1.1.1.0	country	16-17
# ::node	0.0.1.1.1.0.0	name	16-17
# ::node	0.0.1.1.1.0.0.0	"Britain"	16-17
# ::node	0.0.1.2	wake-02	25-26
# ::node	0.0.1.2.0	involve-01	28-29
# ::node	0.0.1.2.0.0	accident	32-33
# ::node	0.0.1.2.0.0.0	fatal	31-32
# ::node	0.0.1.2.0.1	winter	34-35
# ::node	0.0.1.2.1	last	33-34
# ::node	0.0.1.3	lately	18-19
# ::root	0	say-01
# ::edge	accident	mod	fatal	0.0.1.2.0.0	0.0.1.2.0.0.0	
# ::edge	country	mod	great	0.0.1.1.1.0	0.0.1.1.1	
# ::edge	country	name	name	0.0.1.1.1.0	0.0.1.1.1.0.0	
# ::edge	demonstrate-01	ARG0	accident	0.0	0.0.0	
# ::edge	demonstrate-01	ARG1	review-01	0.0	0.0.1	
# ::edge	involve-01	ARG1	accident	0.0.1.2.0	0.0.1.2.0.0	
# ::edge	involve-01	time	winter	0.0.1.2.0	0.0.1.2.0.1	
# ::edge	name	op1	"Britain"	0.0.1.1.1.0.0	0.0.1.1.1.0.0.0	
# ::edge	practice-01	ARG0	this	0.0.1.1	0.0.1.1.0	
# ::edge	practice-01	ARG1	great	0.0.1.1	0.0.1.1.1	
# ::edge	review-01	ARG0	club	0.0.1	0.0.1.0	
# ::edge	review-01	ARG1	practice-01	0.0.1	0.0.1.1	
# ::edge	review-01	purpose	wake-02	0.0.1	0.0.1.2	
# ::edge	review-01	time	lately	0.0.1	0.0.1.3	
# ::edge	say-01	ARG1	demonstrate-01	0	0.0	
# ::edge	wake-02	ARG1	involve-01	0.0.1.2	0.0.1.2.0	
# ::edge	wake-02	time	last	0.0.1.2	0.0.1.2.1	
(s / say-01 
      :ARG1 (d / demonstrate-01 
            :ARG0 (a2 / accident) 
            :ARG1 (r / review-01 
                  :ARG0 (c2 / club) 
                  :ARG1 (p / practice-01 
                        :ARG0 (t / this) 
                        :ARG1 (g / great 
                              :mod-of (c / country 
                                    :name (n / name 
                                          :op1 "Britain")))) 
                  :purpose (w2 / wake-02 
                        :ARG1 (i / involve-01 
                              :ARG1 (a / accident 
                                    :mod (f / fatal)) 
                              :time (w / winter)) 
                        :time (l / last)) 
                  :time (l2 / lately))))

# ::snt because the smooth running of your home management account depends on your payment each month of a fixed amount into the account we are anxious to do everything we can to help if you become unemployed or are unable to work through sickness or an accident
# ::tok because the smooth running of your home management account depends on your payment each month of a fixed amount into the account we are anxious to do everything we can to help if you become unemployed or are unable to work through sickness or an accident
# ::alignments 45-46|0.0.0.1.1.0.1.1 43-44|0.0.0.1.1.0.1 42-43|0.0.0.1.1.0.1.0 36-37|0.0.0.1.0 35-36|0.0.0.1.2.0.1.0+0.0.0.1.2.0.1 34-35|0.0.0.1.2.0 33-34|0.0.0.1.2 31-32|0.0.0.1 29-30|0 28-29|0.0.0 27-28|0.0 24-25|0.0.0.0.0.0.0 22-23|0.0.0.0.0.0.0.0 21-22|0.0.0.1.1.0.0 18-19|0.0.0.0.0.0 17-18|0.0.0.0.0 14-15|0.0.0.1.2.0.0.0+0.0.0.1.2.0.0.0.0 13-14|0.0.0.1.2.0.0 9-10|0.0.0.1.1.0 8-9|0.0.0.0.1 7-8|0.0.0.0 6-7|0.0.0.0.1.0 2-3|0.0.0.0.0.1 0-1|0.0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:55.493
# ::node	0	possible	29-30
# ::node	0.0	everything	27-28
# ::node	0.0.0	we	28-29
# ::node	0.0.0.0	manage-01	7-8
# ::node	0.0.0.0.0	fix-03	17-18
# ::node	0.0.0.0.0.0	amount	18-19
# ::node	0.0.0.0.0.0.0	anxious	24-25
# ::node	0.0.0.0.0.0.0.0	we	22-23
# ::node	0.0.0.0.0.1	smooth	2-3
# ::node	0.0.0.0.1	account	8-9
# ::node	0.0.0.0.1.0	home	6-7
# ::node	0.0.0.1	help-01	31-32
# ::node	0.0.0.1.0	or	36-37
# ::node	0.0.0.1.1	cause-01	0-1
# ::node	0.0.0.1.1.0	depend-01	9-10
# ::node	0.0.0.1.1.0.0	account	21-22
# ::node	0.0.0.1.1.0.1	or	43-44
# ::node	0.0.0.1.1.0.1.0	sickness	42-43
# ::node	0.0.0.1.1.0.1.1	accident	45-46
# ::node	0.0.0.1.2	you	33-34
# ::node	0.0.0.1.2.0	become-01	34-35
# ::node	0.0.0.1.2.0.0	each	13-14
# ::node	0.0.0.1.2.0.0.0	month	14-15
# ::node	0.0.0.1.2.0.0.0.0	temporal-quantity	14-15
# ::node	0.0.0.1.2.0.1	person	35-36
# ::node	0.0.0.1.2.0.1.0	employ-01	35-36
# ::root	0	possible
(p2 / possible 
      :mod-of (e2 / everything 
            :ARG0 (w / we 
                  :ARG0-of (m2 / manage-01 
                        :ARG1 (f / fix-03 
                              :ARG0 (a4 / amount 
                                    :op-of (a2 / anxious 
                                          :domain (w2 / we))) 
                              :op-of (s2 / smooth)) 
                        :mod-of (a5 / account 
                              :mod (h2 / home))) 
                  :ARG0-of (h / help-01 
                        :ARG1 (o2 / or) 
                        :ARG1-of (c / cause-01 
                              :ARG0 (d / depend-01 
                                    :ARG1 (a3 / account) 
                                    :op-of (o / or 
                                          :op1 (s / sickness) 
                                          :op2 (a / accident)))) 
                        :ARG2 (y / you 
                              :ARG1-of (b / become-01 
                                    :ARG0 (e3 / each 
                                          :mod-of (m / month 
                                                :unit-of (t / temporal-quantity))) 
                                    :ARG2 (p / person 
                                          :ARG1-of (e / employ-01))))))))

# ::snt i agreed that they were indeed experts but accidents could happen
# ::tok i agreed that they were indeed experts but accidents could happen
# ::alignments 10-11|0.1.0 9-10|0.1 8-9|0.1.0.1 7-8|0 6-7|0.0.1+0.0 5-6|0.0.1.0 3-4|0.1.0.0 1-2|0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:55.558
# ::node	0	contrast-01	7-8
# ::node	0.0	person	6-7
# ::node	0.0.0	agree-01	1-2
# ::node	0.0.0.0	i	0-1
# ::node	0.0.1	expert-41	6-7
# ::node	0.0.1.0	indeed	5-6
# ::node	0.1	possible	9-10
# ::node	0.1.0	happen-01	10-11
# ::node	0.1.0.0	they	3-4
# ::node	0.1.0.1	accident	8-9
# ::root	0	contrast-01
# ::edge	agree-01	ARG0	i	0.0.0	0.0.0.0	
# ::edge	agree-01	ARG1	person	0.0.0	0.0	
# ::edge	contrast-01	ARG1	person	0	0.0	
# ::edge	contrast-01	ARG2	possible	0	0.1	
# ::edge	expert-41	ARG1	person	0.0.1	0.0	
# ::edge	expert-41	mod	indeed	0.0.1	0.0.1.0	
# ::edge	happen-01	ARG0	they	0.1.0	0.1.0.0	
# ::edge	happen-01	ARG1	accident	0.1.0	0.1.0.1	
# ::edge	happen-01	mod	possible	0.1.0	0.1	
(c / contrast-01 
      :ARG1 (p2 / person 
            :ARG1-of (a2 / agree-01 
                  :ARG0 (i2 / i)) 
            :ARG1-of (e / expert-41 
                  :mod (i / indeed))) 
      :ARG2 (p / possible 
            :mod-of (h / happen-01 
                  :ARG0 (t / they) 
                  :ARG1 (a / accident))))

# ::snt this firsthand account of a red cross team leader at clapham sets out a grim scene two hours after the accident occurred the site was complete confusion
# ::tok this firsthand account of a red cross team leader at clapham sets out a grim scene two hours after the accident occurred the site was complete confusion
# ::alignments 26-27|0.1.1.0 25-26|0.1.1.0.1 23-24|0.1.1.0.0 20-21|0.1.1 18-19|0.1 17-18|0.1.2.1+0.1.2 16-17|0.1.2.0 15-16|0.1.3 11-12|0 8-9|0.0.0+0.0 7-8|0.0.0.0 6-7|0.0.1 5-6|0.0.2 2-3|0.1.0 1-2|0.1.0.0 0-1|0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:55.670
# ::node	0	set	11-12
# ::node	0.0	person	8-9
# ::node	0.0.0	lead-02	8-9
# ::node	0.0.0.0	team	7-8
# ::node	0.0.1	cross-02	6-7
# ::node	0.0.2	red	5-6
# ::node	0.1	after	18-19
# ::node	0.1.0	account	2-3
# ::node	0.1.0.0	firsthand	1-2
# ::node	0.1.0.1	this	0-1
# ::node	0.1.1	accident	20-21
# ::node	0.1.1.0	confusion	26-27
# ::node	0.1.1.0.0	site	23-24
# ::node	0.1.1.0.1	complete	25-26
# ::node	0.1.2	temporal-quantity	17-18
# ::node	0.1.2.0	2	16-17
# ::node	0.1.2.1	hour	17-18
# ::node	0.1.3	scene	15-16
# ::root	0	set
# ::edge	account	mod	firsthand	0.1.0	0.1.0.0	
# ::edge	account	mod	this	0.1.0	0.1.0.1	
# ::edge	after	op1	account	0.1	0.1.0	
# ::edge	after	op2	accident	0.1	0.1.1	
# ::edge	after	quant	temporal-quantity	0.1	0.1.2	
# ::edge	confusion	domain	accident	0.1.1.0	0.1.1	
# ::edge	confusion	domain	site	0.1.1.0	0.1.1.0.0	
# ::edge	confusion	mod	complete	0.1.1.0	0.1.1.0.1	
# ::edge	cross-02	ARG1	person	0.0.1	0.0	
# ::edge	lead-02	ARG0	person	0.0.0	0.0	
# ::edge	lead-02	ARG1	team	0.0.0	0.0.0.0	
# ::edge	person	mod	red	0.0	0.0.2	
# ::edge	scene	time	after	0.1.3	0.1	
# ::edge	set	name	person	0	0.0	
# ::edge	set	time	after	0	0.1	
# ::edge	temporal-quantity	quant	2	0.1.2	0.1.2.0	
# ::edge	temporal-quantity	unit	hour	0.1.2	0.1.2.1	
(s3 / set 
      :name (p / person 
            :ARG0-of (l / lead-02 
                  :ARG1 (t2 / team)) 
            :ARG1-of (c3 / cross-02) 
            :mod (r / red)) 
      :time (a2 / after 
            :op1 (a3 / account 
                  :mod (f / firsthand) 
                  :mod (t3 / this)) 
            :op2 (a / accident 
                  :domain-of (c / confusion 
                        :domain (s / site) 
                        :mod (c2 / complete))) 
            :quant (t / temporal-quantity 
                  :quant 2 
                  :unit (h / hour)) 
            :time-of (s2 / scene)))

# ::snt balestre quoted examples of sennas alleged reckless driving most of which were debatable and yet he failed to mention a potentially lethal accident in portugal last year when senna tried to squeeze prost against a wall as they passed the pits at 180 mph
# ::tok balestre quoted examples of sennas alleged reckless driving most of which were debatable and yet he failed to mention a potentially lethal accident in portugal last year when senna tried to squeeze prost against a wall as they passed the pits at 180 mph
# ::alignments 37-38|0.0.0.0.1.0.0.1.0.0 35-36|0.0.0.0.1.0.0.1.0.0.0 31-32|0.0.0.0.1.0.0.1.0 29-30|0.0.0.0.1.0.0.1 26-27|0.0.0.0.1.0.0.1.0.1 25-26|0.0.0.0.1.0.0.1.0.1.0 22-23|0.0.0.0.1.0.0.0 21-22|0.0.0.0.1.0.0.0.0 20-21|0.0.0.0.1.0.0.0.0.0 18-19|0.0.0.0.1.0.0 16-17|0.0.0.0.1 15-16|0.0.0.0.1.0 14-15|0.0.0.0.1.2 13-14|0.0.0.0.1.1 8-9|0.0.0.0.0 7-8|0.0.0.0 6-7|0.0.0.0.2 5-6|0.0.0 2-3|0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:56.028
# ::node	0	quote-01	1-2
# ::node	0.0	example	2-3
# ::node	0.0.0	allege-01	5-6
# ::node	0.0.0.0	drive-01	7-8
# ::node	0.0.0.0.0	most	8-9
# ::node	0.0.0.0.1	fail-01	16-17
# ::node	0.0.0.0.1.0	he	15-16
# ::node	0.0.0.0.1.0.0	mention-01	18-19
# ::node	0.0.0.0.1.0.0.0	accident	22-23
# ::node	0.0.0.0.1.0.0.0.0	lethal	21-22
# ::node	0.0.0.0.1.0.0.0.0.0	potential	20-21
# ::node	0.0.0.0.1.0.0.1	try-01	29-30
# ::node	0.0.0.0.1.0.0.1.0	squeeze-01	31-32
# ::node	0.0.0.0.1.0.0.1.0.0	they	37-38
# ::node	0.0.0.0.1.0.0.1.0.0.0	wall	35-36
# ::node	0.0.0.0.1.0.0.1.0.1	year	26-27
# ::node	0.0.0.0.1.0.0.1.0.1.0	last	25-26
# ::node	0.0.0.0.1.1	and	13-14
# ::node	0.0.0.0.1.2	yet	14-15
# ::node	0.0.0.0.2	reckless	6-7
# ::root	0	quote-01
# ::edge	accident	mod	lethal	0.0.0.0.1.0.0.0	0.0.0.0.1.0.0.0.0	
# ::edge	allege-01	ARG0	example	0.0.0	0.0	
# ::edge	allege-01	ARG1	drive-01	0.0.0	0.0.0.0	
# ::edge	and	op1	fail-01	0.0.0.0.1.1	0.0.0.0.1	
# ::edge	drive-01	ARG0	most	0.0.0.0	0.0.0.0.0	
# ::edge	drive-01	mod	reckless	0.0.0.0	0.0.0.0.2	
# ::edge	fail-01	ARG0	he	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	fail-01	ARG1	drive-01	0.0.0.0.1	0.0.0.0	
# ::edge	fail-01	time	yet	0.0.0.0.1	0.0.0.0.1.2	
# ::edge	lethal	mod	potential	0.0.0.0.1.0.0.0.0	0.0.0.0.1.0.0.0.0.0	
# ::edge	mention-01	ARG0	he	0.0.0.0.1.0.0	0.0.0.0.1.0	
# ::edge	mention-01	ARG1	accident	0.0.0.0.1.0.0	0.0.0.0.1.0.0.0	
# ::edge	mention-01	time	try-01	0.0.0.0.1.0.0	0.0.0.0.1.0.0.1	
# ::edge	quote-01	ARG1	example	0	0.0	
# ::edge	squeeze-01	ARG1	they	0.0.0.0.1.0.0.1.0	0.0.0.0.1.0.0.1.0.0	
# ::edge	squeeze-01	location	year	0.0.0.0.1.0.0.1.0	0.0.0.0.1.0.0.1.0.1	
# ::edge	try-01	ARG1	squeeze-01	0.0.0.0.1.0.0.1	0.0.0.0.1.0.0.1.0	
# ::edge	wall	poss	they	0.0.0.0.1.0.0.1.0.0.0	0.0.0.0.1.0.0.1.0.0	
# ::edge	year	mod	last	0.0.0.0.1.0.0.1.0.1	0.0.0.0.1.0.0.1.0.1.0	
(q / quote-01 
      :ARG1 (e / example 
            :ARG0-of (a3 / allege-01 
                  :ARG1 (d / drive-01 
                        :ARG0 (m2 / most) 
                        :ARG1-of (f / fail-01 
                              :ARG0 (h / he 
                                    :ARG0-of (m / mention-01 
                                          :ARG1 (a / accident 
                                                :mod (l2 / lethal 
                                                      :mod (p / potential))) 
                                          :time (t2 / try-01 
                                                :ARG1 (s / squeeze-01 
                                                      :ARG1 (t / they 
                                                            :poss-of (w / wall)) 
                                                      :location (y / year 
                                                            :mod (l / last)))))) 
                              :op-of (a2 / and) 
                              :time (y2 / yet)) 
                        :mod (r / reckless)))))

# ::snt toil weather human character and the quirks of animals are all graphically rendered as well as the way in which newlylifted potatoes glow like childrens shoulders after a day in the sun or in which the voice of a onceactive young man now crippled by an accident becomes faraway like a priests voice at the altar
# ::tok toil weather human character and the quirks of animals are all graphically rendered as well as the way in which newlylifted potatoes glow like childrens shoulders after a day in the sun or in which the voice of a onceactive young man now crippled by an accident becomes faraway like a priests voice at the altar
# ::alignments 52-53|0.1.0.1.0 51-52|0.1.0.0.0.0.0.1 47-48|0.1.0.0.0 46-47|0.1.0.0.0.0 43-44|0.1.0.0.0.0.0 42-43|0.1.0.0.0.0.0.2 41-42|0.1.0.0.0.0.0.0.0 40-41|0.1.0.0.0.0.0.0.0.1 36-37|0.1.0.0.0.0.0.0 32-33|0.1 31-32|0.1.0.1 28-29|0.1.0 26-27|0.1.0.0 24-25|0.1.0.0.0.0.0.0.0.0.1+0.1.0.0.0.0.0.0.0.0 22-23|0 21-22|0.0 17-18|0.0.0 14-15|0.0.0.0 12-13|0.0.0.0.0 10-11|0.1.1 8-9|0.0.0.0.0.0 4-5|0.0.0.0.0.1 3-4|0.0.0.0.0.1.1 2-3|0.1.0.0.0.0.0.0.0.0.0 1-2|0.0.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:56.752
# ::node	0	glow-01	22-23
# ::node	0.0	potatoe	21-22
# ::node	0.0.0	way	17-18
# ::node	0.0.0.0	well	14-15
# ::node	0.0.0.0.0	render-01	12-13
# ::node	0.0.0.0.0.0	animal	8-9
# ::node	0.0.0.0.0.1	and	4-5
# ::node	0.0.0.0.0.1.0	weather	1-2
# ::node	0.0.0.0.0.1.1	character	3-4
# ::node	0.1	or	32-33
# ::node	0.1.0	day	28-29
# ::node	0.1.0.0	after	26-27
# ::node	0.1.0.0.0	become-01	47-48
# ::node	0.1.0.0.0.0	accident	46-47
# ::node	0.1.0.0.0.0.0	cripple-01	43-44
# ::node	0.1.0.0.0.0.0.0	voice	36-37
# ::node	0.1.0.0.0.0.0.0.0	man	41-42
# ::node	0.1.0.0.0.0.0.0.0.0	have-rel-role-91	24-25
# ::node	0.1.0.0.0.0.0.0.0.0.0	human	2-3
# ::node	0.1.0.0.0.0.0.0.0.0.1	child	24-25
# ::node	0.1.0.0.0.0.0.0.0.1	young	40-41
# ::node	0.1.0.0.0.0.0.1	priest	51-52
# ::node	0.1.0.0.0.0.0.2	now	42-43
# ::node	0.1.0.1	sun	31-32
# ::node	0.1.0.1.0	voice	52-53
# ::node	0.1.1	all	10-11
# ::root	0	glow-01
# ::edge	after	op1	day	0.1.0.0	0.1.0	
# ::edge	and	op1	character	0.0.0.0.0.1	0.0.0.0.0.1.1	
# ::edge	and	op2	render-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	become-01	ARG0	after	0.1.0.0.0	0.1.0.0	
# ::edge	become-01	ARG1	accident	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	cripple-01	ARG0	voice	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	cripple-01	ARG1	priest	0.1.0.0.0.0.0	0.1.0.0.0.0.0.1	
# ::edge	cripple-01	ARG2	accident	0.1.0.0.0.0.0	0.1.0.0.0.0	
# ::edge	cripple-01	time	now	0.1.0.0.0.0.0	0.1.0.0.0.0.0.2	
# ::edge	glow-01	ARG1	potatoe	0	0.0	
# ::edge	glow-01	prep-against	or	0	0.1	
# ::edge	have-rel-role-91	ARG0	human	0.1.0.0.0.0.0.0.0.0	0.1.0.0.0.0.0.0.0.0.0	
# ::edge	have-rel-role-91	ARG1	man	0.1.0.0.0.0.0.0.0.0	0.1.0.0.0.0.0.0.0	
# ::edge	have-rel-role-91	ARG2	child	0.1.0.0.0.0.0.0.0.0	0.1.0.0.0.0.0.0.0.0.1	
# ::edge	man	mod	young	0.1.0.0.0.0.0.0.0	0.1.0.0.0.0.0.0.0.1	
# ::edge	or	op1	day	0.1	0.1.0	
# ::edge	or	quant	all	0.1	0.1.1	
# ::edge	potatoe	frequency	way	0.0	0.0.0	
# ::edge	render-01	ARG1	animal	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	render-01	ARG2	well	0.0.0.0.0	0.0.0.0	
# ::edge	sun	part	day	0.1.0.1	0.1.0	
# ::edge	sun	poss	voice	0.1.0.1	0.1.0.1.0	
# ::edge	voice	poss	man	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0.0.0	
# ::edge	weather	location	and	0.0.0.0.0.1.0	0.0.0.0.0.1	
# ::edge	well	op1	way	0.0.0.0	0.0.0	
(g / glow-01 
      :ARG1 (p2 / potatoe 
            :frequency (w / way 
                  :op-of (w2 / well 
                        :ARG2-of (r / render-01 
                              :ARG1 (a4 / animal) 
                              :op-of (a5 / and 
                                    :location-of (w3 / weather) 
                                    :op1 (c3 / character)))))) 
      :prep-against (o / or 
            :op1 (d / day 
                  :op-of (a2 / after 
                        :ARG0-of (b / become-01 
                              :ARG1 (a / accident 
                                    :ARG2-of (c / cripple-01 
                                          :ARG0 (v2 / voice 
                                                :poss (m / man 
                                                      :ARG1-of (h / have-rel-role-91 
                                                            :ARG0 (h2 / human) 
                                                            :ARG2 (c2 / child)) 
                                                      :mod (y / young))) 
                                          :ARG1 (p / priest) 
                                          :time (n / now))))) 
                  :part-of (s / sun 
                        :poss (v / voice))) 
            :quant (a3 / all)))

# ::snt they are specially designed to withstand traffic accidents
# ::tok they are specially designed to withstand traffic accidents
# ::alignments 7-8|0.0.1 6-7|0.0.1.0 5-6|0.0 3-4|0 2-3|0.1 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:56.766
# ::node	0	design-01	3-4
# ::node	0.0	withstand-01	5-6
# ::node	0.0.0	they	0-1
# ::node	0.0.1	accident	7-8
# ::node	0.0.1.0	traffic	6-7
# ::node	0.1	special	2-3
# ::root	0	design-01
# ::edge	accident	mod	traffic	0.0.1	0.0.1.0	
# ::edge	design-01	ARG3	withstand-01	0	0.0	
# ::edge	design-01	manner	special	0	0.1	
# ::edge	withstand-01	ARG0	they	0.0	0.0.0	
# ::edge	withstand-01	ARG1	accident	0.0	0.0.1	
(d / design-01 
      :ARG3 (w / withstand-01 
            :ARG0 (t2 / they) 
            :ARG1 (a / accident 
                  :mod (t / traffic))) 
      :manner (s / special))

# ::snt robert atkins minister for roads and traffic said there are enormous savings to be made from reducing road accidents which cost the country over 5bn each year
# ::tok robert atkins minister for roads and traffic said there are enormous savings to be made from reducing road accidents which cost the country over 5bn each year
# ::alignments 26-27|0.0.0.0.0.2 25-26|0.0.1.0.0 22-23|0.0.0.0.0.0 20-21|0.0.0.0.0 18-19|0.0.0.0 17-18|0.0.0.0.1 16-17|0.0.0 10-11|0.0.0.0.0.1 7-8|0 6-7|0.0.2 5-6|0.0 4-5|0.0.1 2-3|0.0.1.0.1+0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:56.966
# ::node	0	say-01	7-8
# ::node	0.0	and	5-6
# ::node	0.0.0	reduce-01	16-17
# ::node	0.0.0.0	accident	18-19
# ::node	0.0.0.0.0	cost-01	20-21
# ::node	0.0.0.0.0.0	country	22-23
# ::node	0.0.0.0.0.1	enormous	10-11
# ::node	0.0.0.0.0.2	year	26-27
# ::node	0.0.0.0.1	road	17-18
# ::node	0.0.1	road	4-5
# ::node	0.0.1.0	have-org-role-91	2-3
# ::node	0.0.1.0.0	each	25-26
# ::node	0.0.1.0.1	minister	2-3
# ::node	0.0.2	traffic	6-7
# ::root	0	say-01
# ::edge	accident	location	road	0.0.0.0	0.0.0.0.1	
# ::edge	and	op1	road	0.0	0.0.1	
# ::edge	and	op2	traffic	0.0	0.0.2	
# ::edge	cost-01	ARG0	accident	0.0.0.0.0	0.0.0.0	
# ::edge	cost-01	ARG2	country	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	cost-01	time	year	0.0.0.0.0	0.0.0.0.0.2	
# ::edge	enormous	op1	cost-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	have-org-role-91	ARG0	each	0.0.1.0	0.0.1.0.0	
# ::edge	have-org-role-91	ARG1	road	0.0.1.0	0.0.1	
# ::edge	have-org-role-91	ARG2	minister	0.0.1.0	0.0.1.0.1	
# ::edge	reduce-01	ARG0	and	0.0.0	0.0	
# ::edge	reduce-01	ARG1	accident	0.0.0	0.0.0.0	
# ::edge	say-01	ARG1	and	0	0.0	
(s / say-01 
      :ARG1 (a2 / and 
            :ARG0-of (r2 / reduce-01 
                  :ARG1 (a / accident 
                        :ARG0-of (c2 / cost-01 
                              :ARG2 (c / country) 
                              :op-of (e2 / enormous) 
                              :time (y / year)) 
                        :location (r / road))) 
            :op1 (r3 / road 
                  :ARG1-of (h / have-org-role-91 
                        :ARG0 (e / each) 
                        :ARG2 (m / minister))) 
            :op2 (t / traffic)))

# ::snt two people were taken to the stoke mandeville hospital near aylesbury after they were involved in a road accident on the b4011 road near long crendon
# ::tok two people were taken to the stoke mandeville hospital near aylesbury after they were involved in a road accident on the b4011 road near long crendon
# ::alignments 23-24|0.0.0.1 22-23|0.0.0 18-19|0.0 17-18|0 14-15|0.0.0.0 12-13|0.0.0.0.1 11-12|0.0.0.0.2 9-10|0.0.0.0.0.0 8-9|0.0.0.0.0 0-1|0.0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:57.145
# ::node	0	road	17-18
# ::node	0.0	accident	18-19
# ::node	0.0.0	road	22-23
# ::node	0.0.0.0	involve-01	14-15
# ::node	0.0.0.0.0	hospital	8-9
# ::node	0.0.0.0.0.0	near	9-10
# ::node	0.0.0.0.1	they	12-13
# ::node	0.0.0.0.2	after	11-12
# ::node	0.0.0.1	near	23-24
# ::node	0.0.0.2	2	0-1
# ::root	0	road
(r2 / road 
      :location-of (a / accident 
            :location (r / road 
                  :ARG2-of (i / involve-01 
                        :ARG0 (h / hospital 
                              :location (n2 / near)) 
                        :ARG1 (t / they) 
                        :op-of (a2 / after)) 
                  :location (n / near) 
                  :poss-of 2)))

# ::snt a cyclist has been taken to oxfords john radcliffe hospital after an accident on the a423 north of kidlington this afternoon
# ::tok a cyclist has been taken to oxfords john radcliffe hospital after an accident on the a423 north of kidlington this afternoon
# ::alignments 20-21|0 19-20|0.0 16-17|0.0.0.0.0.0 12-13|0.0.0.0.0 10-11|0.0.0.0 9-10|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:57.170
# ::node	0	afternoon	20-21
# ::node	0.0	this	19-20
# ::node	0.0.0	hospital	9-10
# ::node	0.0.0.0	after	10-11
# ::node	0.0.0.0.0	accident	12-13
# ::node	0.0.0.0.0.0	north	16-17
# ::root	0	afternoon
# ::edge	accident	location	north	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	after	op1	accident	0.0.0.0	0.0.0.0.0	
# ::edge	afternoon	mod	this	0	0.0	
# ::edge	hospital	mod	this	0.0.0	0.0	
# ::edge	hospital	time	after	0.0.0	0.0.0.0	
(a / afternoon 
      :mod (t / this 
            :mod-of (h / hospital 
                  :time (a3 / after 
                        :op1 (a2 / accident 
                              :location (n / north))))))

# ::snt a searchlight display intended to draw attention to the prudential national championships here caused one minor accident on the nearby m54 where the curious were parking on the hard shoulder
# ::tok a searchlight display intended to draw attention to the prudential national championships here caused one minor accident on the nearby m54 where the curious were parking on the hard shoulder
# ::alignments 29-30|0.0.2.0.0 28-29|0.0.2.0 23-24|0.0.2 19-20|0.0.1.1.0 16-17|0.1 15-16|0.1.0 13-14|0 12-13|0.2 10-11|0.0.0 6-7|0.0.1.0 5-6|0.0.1 3-4|0.0.1.1 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:57.397
# ::node	0	cause-01	13-14
# ::node	0.0	display-01	2-3
# ::node	0.0.0	nation	10-11
# ::node	0.0.1	draw-02	5-6
# ::node	0.0.1.0	attention	6-7
# ::node	0.0.1.1	intend-01	3-4
# ::node	0.0.1.1.0	nearby	19-20
# ::node	0.0.2	curious-41	23-24
# ::node	0.0.2.0	hard	28-29
# ::node	0.0.2.0.0	shoulder	29-30
# ::node	0.1	accident	16-17
# ::node	0.1.0	minor	15-16
# ::node	0.2	here	12-13
# ::root	0	cause-01
# ::edge	accident	mod	minor	0.1	0.1.0	
# ::edge	cause-01	ARG0	display-01	0	0.0	
# ::edge	cause-01	ARG1	accident	0	0.1	
# ::edge	cause-01	location	here	0	0.2	
# ::edge	curious-41	ARG0	hard	0.0.2	0.0.2.0	
# ::edge	curious-41	ARG1	display-01	0.0.2	0.0	
# ::edge	display-01	ARG0	nation	0.0	0.0.0	
# ::edge	draw-02	ARG0	display-01	0.0.1	0.0	
# ::edge	draw-02	ARG1	attention	0.0.1	0.0.1.0	
# ::edge	intend-01	ARG0	nearby	0.0.1.1	0.0.1.1.0	
# ::edge	intend-01	ARG1	draw-02	0.0.1.1	0.0.1	
# ::edge	shoulder	mod	hard	0.0.2.0.0	0.0.2.0	
(c2 / cause-01 
      :ARG0 (d2 / display-01 
            :ARG0 (n2 / nation) 
            :ARG0-of (d / draw-02 
                  :ARG1 (a2 / attention) 
                  :ARG1-of (i / intend-01 
                        :ARG0 (n / nearby))) 
            :ARG1-of (c / curious-41 
                  :ARG0 (h / hard 
                        :mod-of (s / shoulder)))) 
      :ARG1 (a / accident 
            :mod (m / minor)) 
      :location (h2 / here))

# ::snt during discussions at the ministry of nuclear power it quickly became clear that the influence of chernobyl was far more widespread than the localised physical effects of the accident
# ::tok during discussions at the ministry of nuclear power it quickly became clear that the influence of chernobyl was far more widespread than the localised physical effects of the accident
# ::alignments 28-29|0.0 25-26|0 24-25|0.3 23-24|0.1 20-21|0.4 18-19|0.2.0.0 14-15|0.2.0.2 11-12|0.2 10-11|0.2.0 9-10|0.2.1 8-9|0.2.0.1 7-8|0.2.0.3 6-7|0.2.0.3.1 4-5|0.2.0.3.0.0 1-2|0.2.0.3.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:57.519
# ::node	0	effect-01	25-26
# ::node	0.0	accident	28-29
# ::node	0.1	localize-01	23-24
# ::node	0.2	clear	11-12
# ::node	0.2.0	become-01	10-11
# ::node	0.2.0.0	far	18-19
# ::node	0.2.0.1	it	8-9
# ::node	0.2.0.2	influence-01	14-15
# ::node	0.2.0.3	power	7-8
# ::node	0.2.0.3.0	discuss-01	1-2
# ::node	0.2.0.3.0.0	ministry	4-5
# ::node	0.2.0.3.1	nucleus	6-7
# ::node	0.2.1	quick	9-10
# ::node	0.3	physical	24-25
# ::node	0.4	wide	20-21
# ::root	0	effect-01
# ::edge	become-01	ARG0	far	0.2.0	0.2.0.0	
# ::edge	become-01	ARG1	it	0.2.0	0.2.0.1	
# ::edge	become-01	ARG2	clear	0.2.0	0.2	
# ::edge	become-01	time	influence-01	0.2.0	0.2.0.2	
# ::edge	clear	domain	effect-01	0.2	0	
# ::edge	clear	mod	quick	0.2	0.2.1	
# ::edge	discuss-01	ARG0	ministry	0.2.0.3.0	0.2.0.3.0.0	
# ::edge	discuss-01	ARG1	power	0.2.0.3.0	0.2.0.3	
# ::edge	effect-01	ARG0	accident	0	0.0	
# ::edge	effect-01	mod	physical	0	0.3	
# ::edge	effect-01	quant	wide	0	0.4	
# ::edge	localize-01	ARG1	effect-01	0.1	0	
# ::edge	power	mod	nucleus	0.2.0.3	0.2.0.3.1	
# ::edge	power	time	become-01	0.2.0.3	0.2.0	
(e / effect-01 
      :ARG0 (a / accident) 
      :ARG1-of (l / localize-01) 
      :domain-of (c / clear 
            :ARG2-of (b / become-01 
                  :ARG0 (f / far) 
                  :ARG1 (i2 / it) 
                  :time (i / influence-01) 
                  :time-of (p2 / power 
                        :ARG1-of (d / discuss-01 
                              :ARG0 (m / ministry)) 
                        :mod (n / nucleus))) 
            :mod (q / quick)) 
      :mod (p / physical) 
      :quant (w / wide))

# ::snt   crews in manchester yesterday abandoned plans for a 24hour strike on 20 december while in glasgow unions were only handling 999 calls and taking patients to the nearest accident emergency department
# ::tok crews in manchester yesterday abandoned plans for a 24hour strike on 20 december while in glasgow unions were only handling 999 calls and taking patients to the nearest accident emergency department
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:57.520
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt his publisher bullen met by accident in dublin in 1901 told him that he was amazed by the hostility his work encountered among the dublin booksellers
# ::tok his publisher bullen met by accident in dublin in 1901 told him that he was amazed by the hostility his work encountered among the dublin booksellers
# ::alignments 22-23|0.0.0.0.0 21-22|0.0.0.0 18-19|0.0.0 15-16|0.0 13-14|0.0.1 10-11|0 9-10|0.0.2.1.0+0.0.2.1 5-6|0.0.2.0 3-4|0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:57.656
# ::node	0	tell-01	10-11
# ::node	0.0	amaze-01	15-16
# ::node	0.0.0	hostility	18-19
# ::node	0.0.0.0	encounter-01	21-22
# ::node	0.0.0.0.0	among	22-23
# ::node	0.0.1	he	13-14
# ::node	0.0.2	meet-03	3-4
# ::node	0.0.2.0	accident	5-6
# ::node	0.0.2.1	date-entity	9-10
# ::node	0.0.2.1.0	1901	9-10
# ::root	0	tell-01
# ::edge	amaze-01	ARG0	hostility	0.0	0.0.0	
# ::edge	amaze-01	ARG1	he	0.0	0.0.1	
# ::edge	date-entity	year	1901	0.0.2.1	0.0.2.1.0	
# ::edge	encounter-01	ARG0	among	0.0.0.0	0.0.0.0.0	
# ::edge	encounter-01	ARG1	hostility	0.0.0.0	0.0.0	
# ::edge	meet-03	ARG1	amaze-01	0.0.2	0.0	
# ::edge	meet-03	location	accident	0.0.2	0.0.2.0	
# ::edge	meet-03	time	date-entity	0.0.2	0.0.2.1	
# ::edge	tell-01	ARG1	amaze-01	0	0.0	
(t / tell-01 
      :ARG1 (a2 / amaze-01 
            :ARG0 (h / hostility 
                  :ARG1-of (e / encounter-01 
                        :ARG0 (a / among))) 
            :ARG1 (h2 / he) 
            :ARG1-of (m / meet-03 
                  :location (a3 / accident) 
                  :time (d / date-entity 
                        :year 1901))))

# ::snt it could have been an accident
# ::tok it could have been an accident
# ::alignments 5-6|0.0 1-2|0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:57.661
# ::node	0	possible	1-2
# ::node	0.0	accident	5-6
# ::node	0.0.0	it	0-1
# ::root	0	possible
# ::edge	accident	domain	it	0.0	0.0.0	
# ::edge	possible	domain	accident	0	0.0	
(p / possible 
      :domain (a / accident 
            :domain (i / it)))

# ::snt on the m twenty five clockwise the traffic is very heavy and slow moving from junction thirteen for staines as far as junction eighteen for chorleywood thats due to earlier accidents and the volume of traffic
# ::tok on the m twenty five clockwise the traffic is very heavy and slow moving from junction thirteen for staines as far as junction eighteen for chorleywood thats due to earlier accidents and the volume of traffic
# ::alignments 35-36|0.2.0 33-34|0.2 31-32|0 30-31|0.1 29-30|0.1.0 26-27|0.0.2 20-21|0.0.0.0.0 13-14|0.0 11-12|0.0.1 10-11|0.0.0.0 9-10|0.0.0.0.1 7-8|0.0.0 4-5|0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:57.790
# ::node	0	and	31-32
# ::node	0.0	move-01	13-14
# ::node	0.0.0	traffic	7-8
# ::node	0.0.0.0	heavy	10-11
# ::node	0.0.0.0.0	far	20-21
# ::node	0.0.0.0.1	very	9-10
# ::node	0.0.1	and	11-12
# ::node	0.0.2	that	26-27
# ::node	0.0.2.0	5	4-5
# ::node	0.1	accident	30-31
# ::node	0.1.0	early	29-30
# ::node	0.2	volume	33-34
# ::node	0.2.0	traffic	35-36
# ::root	0	and
# ::edge	5	poss	that	0.0.2.0	0.0.2	
# ::edge	accident	mod	early	0.1	0.1.0	
# ::edge	and	op1	accident	0	0.1	
# ::edge	and	op2	volume	0	0.2	
# ::edge	heavy	concession	far	0.0.0.0	0.0.0.0.0	
# ::edge	heavy	degree	very	0.0.0.0	0.0.0.0.1	
# ::edge	heavy	domain	traffic	0.0.0.0	0.0.0	
# ::edge	move-01	ARG0	traffic	0.0	0.0.0	
# ::edge	move-01	ARG1	and	0.0	0.0.1	
# ::edge	move-01	ARG2	and	0.0	0	
# ::edge	that	op1	move-01	0.0.2	0.0	
# ::edge	traffic	mod	volume	0.2.0	0.2	
(a / and 
      :ARG2-of (m / move-01 
            :ARG0 (t3 / traffic 
                  :domain-of (h / heavy 
                        :concession (f / far) 
                        :degree (v2 / very))) 
            :ARG1 (a3 / and) 
            :op-of (t2 / that 
                  :poss-of 5)) 
      :op1 (a2 / accident 
            :mod (e / early)) 
      :op2 (v / volume 
            :mod-of (t / traffic)))

# ::snt jump jockey paul nicholls knows his luck is out after breaking his leg yesterday in an accident while riding out for david barons
# ::tok jump jockey paul nicholls knows his luck is out after breaking his leg yesterday in an accident while riding out for david barons
# ::alignments 22-23|0 18-19|0.0 16-17|0.0.0 13-14|0.0.1.2 12-13|0.0.1.0 10-11|0.0.1 9-10|0.0.1.1 6-7|0.0.1.0.0 4-5|0.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:57.892
# ::node	0	baron	22-23
# ::node	0.0	ride-01	18-19
# ::node	0.0.0	accident	16-17
# ::node	0.0.1	break-01	10-11
# ::node	0.0.1.0	leg	12-13
# ::node	0.0.1.0.0	luck	6-7
# ::node	0.0.1.0.0.0	know-01	4-5
# ::node	0.0.1.1	after	9-10
# ::node	0.0.1.2	yesterday	13-14
# ::root	0	baron
(b / baron 
      :ARG0-of (r / ride-01 
            :ARG1 (a / accident) 
            :purpose-of (b2 / break-01 
                  :ARG1 (l / leg 
                        :poss (l2 / luck 
                              :ARG1-of (k / know-01))) 
                  :op-of (a2 / after) 
                  :time (y / yesterday))))

# ::snt this grew by accident out of hitlers earlier attempt to secure immediate surrender and went on in retaliation for british bombing as much as for any other reason
# ::tok this grew by accident out of hitlers earlier attempt to secure immediate surrender and went on in retaliation for british bombing as much as for any other reason
# ::alignments 27-28|0.0.1.1.0.0.0 26-27|0.0.1.1.0.0.0.0 25-26|0.0.1.1.0.0 22-23|0.0.1.0 20-21|0.0.1.1.1 17-18|0.0.1.1.1.0 13-14|0 12-13|0.0.1.1.0 11-12|0.0.1.1.0.1 10-11|0.0.1.1 8-9|0.0.1 7-8|0.0.1.2 3-4|0.0.2 1-2|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:58.090
# ::node	0	and	13-14
# ::node	0.0	grow-01	1-2
# ::node	0.0.0	this	0-1
# ::node	0.0.1	attempt-01	8-9
# ::node	0.0.1.0	much	22-23
# ::node	0.0.1.1	secure-02	10-11
# ::node	0.0.1.1.0	surrender-01	12-13
# ::node	0.0.1.1.0.0	any	25-26
# ::node	0.0.1.1.0.0.0	reason	27-28
# ::node	0.0.1.1.0.0.0.0	other	26-27
# ::node	0.0.1.1.0.1	immediate	11-12
# ::node	0.0.1.1.1	bomb-01	20-21
# ::node	0.0.1.1.1.0	retaliate-01	17-18
# ::node	0.0.1.2	early	7-8
# ::node	0.0.2	accident	3-4
# ::root	0	and
# ::edge	and	op1	grow-01	0	0.0	
# ::edge	attempt-01	ARG0	much	0.0.1	0.0.1.0	
# ::edge	attempt-01	ARG1	secure-02	0.0.1	0.0.1.1	
# ::edge	attempt-01	mod	early	0.0.1	0.0.1.2	
# ::edge	bomb-01	ARG1	secure-02	0.0.1.1.1	0.0.1.1	
# ::edge	grow-01	ARG0	this	0.0	0.0.0	
# ::edge	grow-01	ARG1	attempt-01	0.0	0.0.1	
# ::edge	grow-01	ARG2	accident	0.0	0.0.2	
# ::edge	reason	mod	any	0.0.1.1.0.0.0	0.0.1.1.0.0	
# ::edge	reason	mod	other	0.0.1.1.0.0.0	0.0.1.1.0.0.0.0	
# ::edge	retaliate-01	ARG1	bomb-01	0.0.1.1.1.0	0.0.1.1.1	
# ::edge	secure-02	ARG1	surrender-01	0.0.1.1	0.0.1.1.0	
# ::edge	surrender-01	ARG1	any	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	surrender-01	time	immediate	0.0.1.1.0	0.0.1.1.0.1	
(a2 / and 
      :op1 (g / grow-01 
            :ARG0 (t / this) 
            :ARG1 (a3 / attempt-01 
                  :ARG0 (m / much) 
                  :ARG1 (s2 / secure-02 
                        :ARG1 (s / surrender-01 
                              :ARG1 (a / any 
                                    :mod-of (r / reason 
                                          :mod (o / other))) 
                              :time (i / immediate)) 
                        :ARG1-of (b / bomb-01 
                              :ARG1-of (r2 / retaliate-01))) 
                  :mod (e / early)) 
            :ARG2 (a4 / accident)))

# ::snt it is no accident that she chose friday the 13th to resign writes tony samstag
# ::tok it is no accident that she chose friday the 13th to resign writes tony samstag
# ::alignments 12-13|0.0.0 11-12|0.0.0.0 7-8|0.2 6-7|0 5-6|0.0 3-4|0.1.0 2-3|0.1.0.0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:58.212
# ::node	0	choose-01	6-7
# ::node	0.0	she	5-6
# ::node	0.0.0	write-01	12-13
# ::node	0.0.0.0	resign-01	11-12
# ::node	0.1	it	0-1
# ::node	0.1.0	accident	3-4
# ::node	0.1.0.0	-	2-3
# ::node	0.2	friday	7-8
# ::root	0	choose-01
# ::edge	accident	domain	it	0.1.0	0.1	
# ::edge	accident	polarity	-	0.1.0	0.1.0.0	
# ::edge	choose-01	ARG0	she	0	0.0	
# ::edge	choose-01	ARG1	it	0	0.1	
# ::edge	choose-01	time	friday	0	0.2	
# ::edge	resign-01	ARG1	write-01	0.0.0.0	0.0.0	
# ::edge	write-01	ARG0	she	0.0.0	0.0	
(c / choose-01 
      :ARG0 (s / she 
            :ARG0-of (w / write-01 
                  :ARG1-of (r / resign-01))) 
      :ARG1 (i / it 
            :domain-of (a / accident 
                  :polarity (- / -))) 
      :time (f / friday))

# ::snt a mans been taken to hospital with a chest injury after a road accident near bicester
# ::tok a mans been taken to hospital with a chest injury after a road accident near bicester
# ::alignments 14-15|0.2 13-14|0.1.0 12-13|0.1.0.0 10-11|0.1 9-10|0 8-9|0.0 5-6|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:58.251
# ::node	0	injure-01	9-10
# ::node	0.0	chest	8-9
# ::node	0.1	after	10-11
# ::node	0.1.0	accident	13-14
# ::node	0.1.0.0	road	12-13
# ::node	0.1.0.0.0	hospital	5-6
# ::node	0.2	near	14-15
# ::root	0	injure-01
# ::edge	accident	location	road	0.1.0	0.1.0.0	
# ::edge	after	op1	accident	0.1	0.1.0	
# ::edge	hospital	topic	road	0.1.0.0.0	0.1.0.0	
# ::edge	injure-01	ARG1	chest	0	0.0	
# ::edge	injure-01	time	after	0	0.1	
# ::edge	injure-01	time	near	0	0.2	
(i / injure-01 
      :ARG1 (c / chest) 
      :time (a2 / after 
            :op1 (a / accident 
                  :location (r / road 
                        :topic-of (h / hospital)))) 
      :time (n / near))

# ::snt his father was killed in a road accident when he was 12 and at that age he became the man of the house
# ::tok his father was killed in a road accident when he was 12 and at that age he became the man of the house
# ::alignments 22-23|0.0.0.1 19-20|0.0.0 17-18|0.0.0.0 16-17|0.0 15-16|0 12-13|0.0.0.2 11-12|0.0.0.0.0 9-10|0.0.0.0.1 7-8|0.0.0.2.0.0 6-7|0.0.0.2.0.0.0 3-4|0.0.0.2.0 1-2|0.0.0.0.1.0.0+0.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:58.462
# ::node	0	age-01	15-16
# ::node	0.0	he	16-17
# ::node	0.0.0	man	19-20
# ::node	0.0.0.0	become-01	17-18
# ::node	0.0.0.0.0	12	11-12
# ::node	0.0.0.0.1	he	9-10
# ::node	0.0.0.0.1.0	have-rel-role-91	1-2
# ::node	0.0.0.0.1.0.0	father	1-2
# ::node	0.0.0.1	house	22-23
# ::node	0.0.0.2	and	12-13
# ::node	0.0.0.2.0	kill-01	3-4
# ::node	0.0.0.2.0.0	accident	7-8
# ::node	0.0.0.2.0.0.0	road	6-7
# ::root	0	age-01
# ::edge	accident	location	road	0.0.0.2.0.0	0.0.0.2.0.0.0	
# ::edge	age-01	ARG1	he	0	0.0	
# ::edge	and	op1	man	0.0.0.2	0.0.0	
# ::edge	become-01	ARG0	12	0.0.0.0	0.0.0.0.0	
# ::edge	become-01	ARG1	he	0.0.0.0	0.0.0.0.1	
# ::edge	become-01	ARG2	man	0.0.0.0	0.0.0	
# ::edge	have-rel-role-91	ARG1	he	0.0.0.0.1.0	0.0.0.0.1	
# ::edge	have-rel-role-91	ARG2	father	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	kill-01	ARG1	and	0.0.0.2.0	0.0.0.2	
# ::edge	kill-01	location	accident	0.0.0.2.0	0.0.0.2.0.0	
# ::edge	man	domain	he	0.0.0	0.0	
# ::edge	man	location	house	0.0.0	0.0.0.1	
(a / age-01 
      :ARG1 (h2 / he 
            :domain-of (m / man 
                  :ARG2-of (b / become-01 
                        :ARG0 12 
                        :ARG1 (h3 / he 
                              :ARG1-of (h4 / have-rel-role-91 
                                    :ARG2 (f / father)))) 
                  :location (h / house) 
                  :op-of (a2 / and 
                        :ARG1-of (k / kill-01 
                              :location (a3 / accident 
                                    :location (r / road)))))))

# ::snt but the distinctions drawn by english law were till the passing of the property acts which came into force on 1 january 1926 founded not so much on the nature of the subject matter as upon the historical accidents in the development of the english law of property
# ::tok but the distinctions drawn by english law were till the passing of the property acts which came into force on 1 january 1926 founded not so much on the nature of the subject matter as upon the historical accidents in the development of the english law of property
# ::alignments 47-48|0.0.4.0.0 45-46|0.0.4 44-45|0.0.4.1.0.0+0.0.4.1.0+0.0.4.1 41-42|0.0.4.0 38-39|0.0.4.0.1 37-38|0.0.4.0.1.0 33-34|0.0.1.1.0 32-33|0.0.1.1.0.0 29-30|0.0.1.1 26-27|0.0.1 25-26|0.0.1.0 23-24|0.0 20-23|0.0.3.2+0.0.3.1+0.0.3.0+0.0.3 18-19|0.0.0 13-14|0.1.0.1 8-9|0.0.2 6-7|0.1.0 5-6|0.1.0.0.0.0+0.1.0.0.0+0.1.0.0 2-3|0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:58.841
# ::node	0	contrast-01	0-1
# ::node	0.0	found-01	23-24
# ::node	0.0.0	force	18-19
# ::node	0.0.1	much	26-27
# ::node	0.0.1.0	so	25-26
# ::node	0.0.1.1	nature	29-30
# ::node	0.0.1.1.0	matter	33-34
# ::node	0.0.1.1.0.0	subject	32-33
# ::node	0.0.2	till	8-9
# ::node	0.0.3	date-entity	20-23
# ::node	0.0.3.0	1	20-23
# ::node	0.0.3.1	1	20-23
# ::node	0.0.3.2	1926	20-23
# ::node	0.0.4	law	45-46
# ::node	0.0.4.0	develop-02	41-42
# ::node	0.0.4.0.0	property	47-48
# ::node	0.0.4.0.1	accident	38-39
# ::node	0.0.4.0.1.0	history	37-38
# ::node	0.0.4.1	language	44-45
# ::node	0.0.4.1.0	name	44-45
# ::node	0.0.4.1.0.0	"English"	44-45
# ::node	0.1	distinguish-01	2-3
# ::node	0.1.0	law	6-7
# ::node	0.1.0.0	language	5-6
# ::node	0.1.0.0.0	name	5-6
# ::node	0.1.0.0.0.0	"English"	5-6
# ::node	0.1.0.1	property	13-14
# ::root	0	contrast-01
# ::edge	accident	mod	history	0.0.4.0.1	0.0.4.0.1.0	
# ::edge	accident	topic	develop-02	0.0.4.0.1	0.0.4.0	
# ::edge	contrast-01	ARG1	found-01	0	0.0	
# ::edge	contrast-01	ARG2	distinguish-01	0	0.1	
# ::edge	date-entity	day	1	0.0.3	0.0.3.0	
# ::edge	date-entity	month	1	0.0.3	0.0.3.1	
# ::edge	date-entity	year	1926	0.0.3	0.0.3.2	
# ::edge	develop-02	ARG1	law	0.0.4.0	0.0.4	
# ::edge	develop-02	location	property	0.0.4.0	0.0.4.0.0	
# ::edge	distinguish-01	ARG1	law	0.1	0.1.0	
# ::edge	found-01	ARG0	force	0.0	0.0.0	
# ::edge	found-01	ARG1	much	0.0	0.0.1	
# ::edge	found-01	time	date-entity	0.0	0.0.3	
# ::edge	found-01	topic	law	0.0	0.0.4	
# ::edge	language	name	name	0.0.4.1	0.0.4.1.0	
# ::edge	language	name	name	0.1.0.0	0.1.0.0.0	
# ::edge	law	mod	language	0.0.4	0.0.4.1	
# ::edge	law	mod	language	0.1.0	0.1.0.0	
# ::edge	law	topic	property	0.1.0	0.1.0.1	
# ::edge	matter	mod	subject	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	much	degree	so	0.0.1	0.0.1.0	
# ::edge	name	op1	"English"	0.0.4.1.0	0.0.4.1.0.0	
# ::edge	name	op1	"English"	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	nature	mod	matter	0.0.1.1	0.0.1.1.0	
# ::edge	nature	mod	much	0.0.1.1	0.0.1	
# ::edge	till	op1	found-01	0.0.2	0.0	
(c / contrast-01 
      :ARG1 (f / found-01 
            :ARG0 (f2 / force) 
            :ARG1 (m2 / much 
                  :degree (s2 / so) 
                  :mod-of (n2 / nature 
                        :mod (m / matter 
                              :mod (s / subject)))) 
            :op-of (t / till) 
            :time (d2 / date-entity 
                  :day 1 
                  :month 1 
                  :year 1926) 
            :topic (l / law 
                  :ARG1-of (d / develop-02 
                        :location (p / property) 
                        :topic-of (a / accident 
                              :mod (h / history))) 
                  :mod (l2 / language 
                        :name (n / name 
                              :op1 "English")))) 
      :ARG2 (d3 / distinguish-01 
            :ARG1 (l3 / law 
                  :mod (l4 / language 
                        :name (n3 / name 
                              :op1 "English")) 
                  :topic (p2 / property))))

# ::snt but most important please decide today to give yourself the  financial protection of the midland personal accident plan, a few minutes spent now completing your enrolment form could make  a world of difference to the rest of your life and your familys  if one day a serious accident happens to you
# ::tok but most important please decide today to give yourself the financial protection of the midland personal accident plan , a few minutes spent now completing your enrolment form could make a world of difference to the rest of your life and your familys if one day a serious accident happens to you
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:58.842
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt last year 173 workers in the offshore industry had been killed in accidents 85 were seriously injured and there were 227 dangerous incidents
# ::tok last year 173 workers in the offshore industry had been killed in accidents 85 were seriously injured and there were 227 dangerous incidents
# ::alignments 22-23|0.2 21-22|0.2.0 17-18|0 16-17|0.1 15-16|0.1.2 13-14|0.0.0 12-13|0.1.1 10-11|0.0 7-8|0.0.1.0.0 6-7|0.0.1.0.0.0 3-4|0.0.1.0+0.0.1 1-2|0.1.0.0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:58.984
# ::node	0	and	17-18
# ::node	0.0	kill-01	10-11
# ::node	0.0.0	85	13-14
# ::node	0.0.1	person	3-4
# ::node	0.0.1.0	work-01	3-4
# ::node	0.0.1.0.0	industry	7-8
# ::node	0.0.1.0.0.0	offshore	6-7
# ::node	0.1	injure-01	16-17
# ::node	0.1.0	last	0-1
# ::node	0.1.0.0	year	1-2
# ::node	0.1.1	accident	12-13
# ::node	0.1.2	serious	15-16
# ::node	0.2	incident	22-23
# ::node	0.2.0	dangerous	21-22
# ::root	0	and
# ::edge	and	op1	kill-01	0	0.0	
# ::edge	and	op2	injure-01	0	0.1	
# ::edge	and	op3	incident	0	0.2	
# ::edge	incident	mod	dangerous	0.2	0.2.0	
# ::edge	industry	mod	offshore	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	injure-01	ARG0	last	0.1	0.1.0	
# ::edge	injure-01	ARG1	accident	0.1	0.1.1	
# ::edge	injure-01	degree	serious	0.1	0.1.2	
# ::edge	kill-01	ARG0	85	0.0	0.0.0	
# ::edge	kill-01	ARG1	person	0.0	0.0.1	
# ::edge	work-01	ARG0	person	0.0.1.0	0.0.1	
# ::edge	work-01	ARG1	industry	0.0.1.0	0.0.1.0.0	
# ::edge	year	mod	last	0.1.0.0	0.1.0	
(a / and 
      :op1 (k / kill-01 
            :ARG0 85 
            :ARG1 (p / person 
                  :ARG0-of (w / work-01 
                        :ARG1 (i3 / industry 
                              :mod (o / offshore))))) 
      :op2 (i2 / injure-01 
            :ARG0 (l / last 
                  :mod-of (y / year)) 
            :ARG1 (a2 / accident) 
            :degree (s / serious)) 
      :op3 (i / incident 
            :mod (d / dangerous)))

# ::snt traffic accidents used to constitute the mainstay of the smallgauge practitioner
# ::tok traffic accidents used to constitute the mainstay of the smallgauge practitioner
# ::alignments 4-5|0.0 2-3|0 1-2|0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:58.995
# ::node	0	use-01	2-3
# ::node	0.0	constitute-01	4-5
# ::node	0.0.0	accident	1-2
# ::node	0.0.0.0	traffic	0-1
# ::root	0	use-01
# ::edge	accident	mod	traffic	0.0.0	0.0.0.0	
# ::edge	constitute-01	ARG0	accident	0.0	0.0.0	
# ::edge	use-01	ARG2	constitute-01	0	0.0	
(u / use-01 
      :ARG2 (c / constitute-01 
            :ARG0 (a / accident 
                  :mod (t / traffic))))

# ::snt a full accident and emergency service should be running by friday morning dash
# ::tok a full accident and emergency service should be running by friday morning dash
# ::alignments 11-12|0.0 10-11|0.0.0 6-7|0 4-5|0.1.2 3-4|0.1 2-3|0.1.1 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:59.016
# ::node	0	recommend-01	6-7
# ::node	0.0	morning	11-12
# ::node	0.0.0	friday	10-11
# ::node	0.1	and	3-4
# ::node	0.1.0	full	1-2
# ::node	0.1.1	accident	2-3
# ::node	0.1.2	emergency	4-5
# ::root	0	recommend-01
# ::edge	and	mod	full	0.1	0.1.0	
# ::edge	and	op1	accident	0.1	0.1.1	
# ::edge	and	op2	emergency	0.1	0.1.2	
# ::edge	and	op3	recommend-01	0.1	0	
# ::edge	morning	mod	friday	0.0	0.0.0	
# ::edge	recommend-01	ARG0	morning	0	0.0	
(r / recommend-01 
      :ARG0 (m / morning 
            :mod (f / friday)) 
      :op-of (a / and 
            :mod (f2 / full) 
            :op1 (a2 / accident) 
            :op2 (e / emergency)))

# ::snt its called the midland personal accident plan and we strongly  recommend it if you have any kind of regular financial  commitment to protect
# ::tok its called the midland personal accident plan and we strongly recommend it if you have any kind of regular financial commitment to protect
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:59.016
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt further accusations that he failed to stop and report the accident and did not comply with a give way sign were dismissed after hiles had denied the charges and the prosecution offered no evidence
# ::tok further accusations that he failed to stop and report the accident and did not comply with a give way sign were dismissed after hiles had denied the charges and the prosecution offered no evidence
# ::alignments 33-34|0.0.0.0.0.1.0.1 32-33|0.0.0.0.0.1.0.2 31-32|0.0.0.0.0.1.0 30-31|0.0.0.0.0.1.0.0 28-29|0.0.0.0.0.1 25-26|0.0.0.0.0 22-23|0.0.0.0 21-22|0.0.0 18-19|0.0.0.0.0.0.0 17-18|0.0.0.0.0.0 14-15|0.2 11-12|0 10-11|0.1.2.0 8-9|0.1.1.0 7-8|0.1.1 6-7|0.1.2 4-5|0.1 3-4|0.1.0 1-2|0.0 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:59.523
# ::node	0	and	11-12
# ::node	0.0	accuse-01	1-2
# ::node	0.0.0	dismiss-01	21-22
# ::node	0.0.0.0	after	22-23
# ::node	0.0.0.0.0	deny-01	25-26
# ::node	0.0.0.0.0.0	give-01	17-18
# ::node	0.0.0.0.0.0.0	way	18-19
# ::node	0.0.0.0.0.1	and	28-29
# ::node	0.0.0.0.0.1.0	offer-01	31-32
# ::node	0.0.0.0.0.1.0.0	prosecute-01	30-31
# ::node	0.0.0.0.0.1.0.1	evidence-01	33-34
# ::node	0.0.0.0.0.1.0.2	-	32-33
# ::node	0.0.1	further	0-1
# ::node	0.1	fail-01	4-5
# ::node	0.1.0	he	3-4
# ::node	0.1.1	and	7-8
# ::node	0.1.1.0	report	8-9
# ::node	0.1.2	stop-01	6-7
# ::node	0.1.2.0	accident	10-11
# ::node	0.2	comply-01	14-15
# ::root	0	and
# ::edge	accuse-01	degree	further	0.0	0.0.1	
# ::edge	after	op1	deny-01	0.0.0.0	0.0.0.0.0	
# ::edge	and	op1	accuse-01	0	0.0	
# ::edge	and	op1	deny-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	and	op1	report	0.1.1	0.1.1.0	
# ::edge	and	op2	fail-01	0	0.1	
# ::edge	and	op2	offer-01	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	and	op3	comply-01	0	0.2	
# ::edge	dismiss-01	ARG1	accuse-01	0.0.0	0.0	
# ::edge	dismiss-01	time	after	0.0.0	0.0.0.0	
# ::edge	fail-01	ARG0	he	0.1	0.1.0	
# ::edge	fail-01	ARG1	and	0.1	0.1.1	
# ::edge	fail-01	ARG2	stop-01	0.1	0.1.2	
# ::edge	give-01	ARG1	way	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	give-01	manner	deny-01	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	offer-01	ARG0	prosecute-01	0.0.0.0.0.1.0	0.0.0.0.0.1.0.0	
# ::edge	offer-01	ARG1	evidence-01	0.0.0.0.0.1.0	0.0.0.0.0.1.0.1	
# ::edge	offer-01	polarity	-	0.0.0.0.0.1.0	0.0.0.0.0.1.0.2	
# ::edge	stop-01	ARG1	accident	0.1.2	0.1.2.0	
(a3 / and 
      :op1 (a6 / accuse-01 
            :ARG1-of (d2 / dismiss-01 
                  :time (a2 / after 
                        :op1 (d / deny-01 
                              :manner-of (g / give-01 
                                    :ARG1 (w / way)) 
                              :op-of (a / and 
                                    :op1 (o / offer-01 
                                          :ARG0 (p / prosecute-01) 
                                          :ARG1 (e / evidence-01) 
                                          :polarity (- / -)))))) 
            :degree (f2 / further)) 
      :op2 (f / fail-01 
            :ARG0 (h / he) 
            :ARG1 (a5 / and 
                  :op1 (r / report)) 
            :ARG2 (s / stop-01 
                  :ARG1 (a4 / accident))) 
      :op3 (c / comply-01))

# ::snt was a happy accident but in the disarming climate affecting europe the swiss establishment was no longer able to dismiss the antiarmy campaign as frivolous and utopian
# ::tok was a happy accident but in the disarming climate affecting europe the swiss establishment was no longer able to dismiss the antiarmy campaign as frivolous and utopian
# ::alignments 25-26|0.1 22-23|0.1.0.0 17-18|0.1.0.1 16-17|0.1.0.1.1.0 15-16|0.1.0.1.1 13-14|0.1.0 10-11|0.1.0.1.0.1.0+0.1.0.1.0.1+0.1.0.1.0 9-10|0.1.0.1.0.0 8-9|0.1.0.1.0.0.0 7-8|0.1.0.1.0.0.0.0 4-5|0 3-4|0.0 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:59.659
# ::node	0	contrast-01	4-5
# ::node	0.0	accident	3-4
# ::node	0.0.0	happy	2-3
# ::node	0.1	and	25-26
# ::node	0.1.0	establish-01	13-14
# ::node	0.1.0.0	campaign-01	22-23
# ::node	0.1.0.1	possible	17-18
# ::node	0.1.0.1.0	continent	10-11
# ::node	0.1.0.1.0.0	affect-01	9-10
# ::node	0.1.0.1.0.0.0	climate	8-9
# ::node	0.1.0.1.0.0.0.0	disarm-01	7-8
# ::node	0.1.0.1.0.1	name	10-11
# ::node	0.1.0.1.0.1.0	"Europe"	10-11
# ::node	0.1.0.1.1	-	15-16
# ::node	0.1.0.1.1.0	long	16-17
# ::root	0	contrast-01
# ::edge	accident	mod	happy	0.0	0.0.0	
# ::edge	affect-01	ARG0	climate	0.1.0.1.0.0	0.1.0.1.0.0.0	
# ::edge	affect-01	ARG1	continent	0.1.0.1.0.0	0.1.0.1.0	
# ::edge	campaign-01	ARG1	establish-01	0.1.0.0	0.1.0	
# ::edge	continent	mod	possible	0.1.0.1.0	0.1.0.1	
# ::edge	continent	name	name	0.1.0.1.0	0.1.0.1.0.1	
# ::edge	contrast-01	ARG1	accident	0	0.0	
# ::edge	contrast-01	ARG2	and	0	0.1	
# ::edge	disarm-01	ARG1	climate	0.1.0.1.0.0.0.0	0.1.0.1.0.0.0	
# ::edge	establish-01	ARG1	and	0.1.0	0.1	
# ::edge	long	polarity	-	0.1.0.1.1.0	0.1.0.1.1	
# ::edge	name	op1	"Europe"	0.1.0.1.0.1	0.1.0.1.0.1.0	
# ::edge	possible	domain	establish-01	0.1.0.1	0.1.0	
# ::edge	possible	polarity	-	0.1.0.1	0.1.0.1.1	
(c4 / contrast-01 
      :ARG1 (a3 / accident 
            :mod (h / happy)) 
      :ARG2 (a / and 
            :ARG1-of (e / establish-01 
                  :ARG1-of (c / campaign-01) 
                  :domain-of (p / possible 
                        :mod-of (c2 / continent 
                              :ARG1-of (a2 / affect-01 
                                    :ARG0 (c3 / climate 
                                          :ARG1-of (d / disarm-01))) 
                              :name (n / name 
                                    :op1 "Europe")) 
                        :polarity (- / - 
                              :polarity-of (l / long))))))

# ::snt no one thought you were mad he said but youd been in a serious accident
# ::tok no one thought you were mad he said but youd been in a serious accident
# ::alignments 14-15|0.0.0.0.0 13-14|0.0.0.0 8-9|0 7-8|0.1 6-7|0.1.0 5-6|0.0 3-4|0.0.1 2-3|0.0.0 0-1|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:59.749
# ::node	0	contrast-01	8-9
# ::node	0.0	mad	5-6
# ::node	0.0.0	think-01	2-3
# ::node	0.0.0.0	serious	13-14
# ::node	0.0.0.0.0	accident	14-15
# ::node	0.0.0.1	-	0-1
# ::node	0.0.1	you	3-4
# ::node	0.1	say-01	7-8
# ::node	0.1.0	he	6-7
# ::root	0	contrast-01
# ::edge	accident	mod	serious	0.0.0.0.0	0.0.0.0	
# ::edge	contrast-01	ARG1	mad	0	0.0	
# ::edge	mad	domain	you	0.0	0.0.1	
# ::edge	say-01	ARG0	he	0.1	0.1.0	
# ::edge	say-01	ARG1	contrast-01	0.1	0	
# ::edge	think-01	ARG1	mad	0.0.0	0.0	
# ::edge	think-01	manner	serious	0.0.0	0.0.0.0	
# ::edge	think-01	polarity	-	0.0.0	0.0.0.1	
(c / contrast-01 
      :ARG1 (m / mad 
            :ARG1-of (t / think-01 
                  :manner (s / serious 
                        :mod-of (a / accident)) 
                  :polarity (- / -)) 
            :domain (y / you)) 
      :ARG1-of (s2 / say-01 
            :ARG0 (h / he)))

# ::snt jason courage son of piers courage who died in a grand prix accident is competing in a frenchbuilt martini mk27
# ::tok jason courage son of piers courage who died in a grand prix accident is competing in a frenchbuilt martini mk27
# ::alignments 14-15|0.0.0 12-13|0.0 10-11|0 7-8|0.0.0.0.0.0 5-6|0.0.0.0.0.0.0 2-3|0.0.0.0.0.1+0.0.0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:59.780
# ::node	0	grand	10-11
# ::node	0.0	accident	12-13
# ::node	0.0.0	compete-01	14-15
# ::node	0.0.0.0	courage	1-2
# ::node	0.0.0.0.0	have-rel-role-91	2-3
# ::node	0.0.0.0.0.0	die-01	7-8
# ::node	0.0.0.0.0.0.0	courage	5-6
# ::node	0.0.0.0.0.1	son	2-3
# ::root	0	grand
(g / grand 
      :mod-of (a / accident 
            :ARG1-of (c / compete-01 
                  :ARG0 (c3 / courage 
                        :ARG1-of (h / have-rel-role-91 
                              :ARG0 (d / die-01 
                                    :ARG1 (c2 / courage)) 
                              :ARG2 (s / son))))))

# ::snt horrific garden accidents have prompted a safety display in oxford aimed at pinpointing the dangers
# ::tok horrific garden accidents have prompted a safety display in oxford aimed at pinpointing the dangers
# ::alignments 14-15|0.1.0.0 10-11|0.1.0 7-8|0.1 6-7|0.1.1 4-5|0 2-3|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:03:59.857
# ::node	0	prompt-02	4-5
# ::node	0.0	accident	2-3
# ::node	0.0.0	garden	1-2
# ::node	0.1	display-01	7-8
# ::node	0.1.0	aim-02	10-11
# ::node	0.1.0.0	danger	14-15
# ::node	0.1.1	safe-41	6-7
# ::root	0	prompt-02
# ::edge	accident	mod	garden	0.0	0.0.0	
# ::edge	aim-02	ARG0	danger	0.1.0	0.1.0.0	
# ::edge	aim-02	ARG1	display-01	0.1.0	0.1	
# ::edge	display-01	ARG2	safe-41	0.1	0.1.1	
# ::edge	prompt-02	ARG0	accident	0	0.0	
# ::edge	prompt-02	ARG1	display-01	0	0.1	
(p / prompt-02 
      :ARG0 (a2 / accident 
            :mod (g / garden)) 
      :ARG1 (d2 / display-01 
            :ARG1-of (a / aim-02 
                  :ARG0 (d / danger)) 
            :ARG2 (s / safe-41)))

# ::snt by contrast in most other developed countries insurance plans have made considerable advance in replacing tort liability as a source of accident compensation, since world war ii national systems of social insurance provide free health care and basic monetary benefits for persons disabled by accident sickness even unemployment
# ::tok by contrast in most other developed countries insurance plans have made considerable advance in replacing tort liability as a source of accident compensation , since world war ii national systems of social insurance provide free health care and basic monetary benefits for persons disabled by accident sickness even unemployment
# ::alignments 48-49|0.0.0.1.1+0.0.0.1 46-47|0.0.0.1.0 45-46|0.2 43-44|0.0.0 42-43|0.0 40-41|0 39-40|0.1.0.2.0.0 38-39|0.3 37-38|0.1.0.2 36-37|0.1.0.2.0.1 35-36|0.1.0.2.0.1.1 34-35|0.1.0.2.0.1.2 33-34|0.1.0.2.0 32-33|0.1.0.2.0.1.0.0 31-32|0.1.0.2.0.1.0.0.0 29-30|0.1.0.2.0.1.0 28-29|0.1.0.2.0.1.0.1 27-28|0.0.0.0.0 26-27|0.0.0.0 25-26|0.0.0.0.1 24-25|0.0.0.0.0.0 22-23|0.0.1 21-22|0.0.1.0 19-20|0.1.0.1 16-17|0.1 14-15|0.1.0 12-13|0.1.0.0.2 11-12|0.1.0.0.2.0 8-9|0.1.0.0 7-8|0.1.0.0.1 6-7|0.1.0.0.1.0 5-6|0.1.0.0.1.0.0 4-5|0.1.0.0.0 3-4|0.1.0.0.0.0 1-2|0.1.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:03.519
# ::node	0	benefit-01	40-41
# ::node	0.0	person	42-43
# ::node	0.0.0	disable-01	43-44
# ::node	0.0.0.0	war	26-27
# ::node	0.0.0.0.0	ii	27-28
# ::node	0.0.0.0.0.0	since	24-25
# ::node	0.0.0.0.1	world	25-26
# ::node	0.0.0.1	employ-01	48-49
# ::node	0.0.0.1.0	sickness	46-47
# ::node	0.0.0.1.1	-	48-49
# ::node	0.0.1	compensate-01	22-23
# ::node	0.0.1.0	accident	21-22
# ::node	0.1	liability	16-17
# ::node	0.1.0	replace-01	14-15
# ::node	0.1.0.0	plan-01	8-9
# ::node	0.1.0.0.0	other	4-5
# ::node	0.1.0.0.0.0	most	3-4
# ::node	0.1.0.0.0.1	contrast-01	1-2
# ::node	0.1.0.0.1	insure-02	7-8
# ::node	0.1.0.0.1.0	country	6-7
# ::node	0.1.0.0.1.0.0	develop-02	5-6
# ::node	0.1.0.0.2	advance-01	12-13
# ::node	0.1.0.0.2.0	considerable	11-12
# ::node	0.1.0.1	source	19-20
# ::node	0.1.0.2	and	37-38
# ::node	0.1.0.2.0	provide-01	33-34
# ::node	0.1.0.2.0.0	money	39-40
# ::node	0.1.0.2.0.1	care-01	36-37
# ::node	0.1.0.2.0.1.0	system	29-30
# ::node	0.1.0.2.0.1.0.0	insure-02	32-33
# ::node	0.1.0.2.0.1.0.0.0	society	31-32
# ::node	0.1.0.2.0.1.0.1	nation	28-29
# ::node	0.1.0.2.0.1.1	health	35-36
# ::node	0.1.0.2.0.1.2	free-41	34-35
# ::node	0.2	accident	45-46
# ::node	0.3	basic	38-39
# ::root	0	benefit-01
# ::edge	advance-01	ARG1	plan-01	0.1.0.0.2	0.1.0.0	
# ::edge	advance-01	mod	considerable	0.1.0.0.2	0.1.0.0.2.0	
# ::edge	and	op1	replace-01	0.1.0.2	0.1.0	
# ::edge	benefit-01	ARG1	person	0	0.0	
# ::edge	benefit-01	ARG2	liability	0	0.1	
# ::edge	benefit-01	location	accident	0	0.2	
# ::edge	benefit-01	mod	basic	0	0.3	
# ::edge	care-01	ARG0	system	0.1.0.2.0.1	0.1.0.2.0.1.0	
# ::edge	care-01	ARG1	health	0.1.0.2.0.1	0.1.0.2.0.1.1	
# ::edge	compensate-01	ARG2	person	0.0.1	0.0	
# ::edge	compensate-01	ARG3	accident	0.0.1	0.0.1.0	
# ::edge	contrast-01	mod	other	0.1.0.0.0.1	0.1.0.0.0	
# ::edge	develop-02	ARG1	country	0.1.0.0.1.0.0	0.1.0.0.1.0	
# ::edge	disable-01	ARG0	war	0.0.0	0.0.0.0	
# ::edge	disable-01	ARG1	person	0.0.0	0.0	
# ::edge	disable-01	ARG2	employ-01	0.0.0	0.0.0.1	
# ::edge	employ-01	ARG1	sickness	0.0.0.1	0.0.0.1.0	
# ::edge	employ-01	polarity	-	0.0.0.1	0.0.0.1.1	
# ::edge	free-41	ARG1	care-01	0.1.0.2.0.1.2	0.1.0.2.0.1	
# ::edge	ii	mod	war	0.0.0.0.0	0.0.0.0	
# ::edge	insure-02	ARG0	country	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	insure-02	ARG1	society	0.1.0.2.0.1.0.0	0.1.0.2.0.1.0.0.0	
# ::edge	other	mod	most	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	plan-01	ARG0	other	0.1.0.0	0.1.0.0.0	
# ::edge	plan-01	ARG1	insure-02	0.1.0.0	0.1.0.0.1	
# ::edge	provide-01	ARG0	money	0.1.0.2.0	0.1.0.2.0.0	
# ::edge	provide-01	ARG1	and	0.1.0.2.0	0.1.0.2	
# ::edge	provide-01	ARG2	care-01	0.1.0.2.0	0.1.0.2.0.1	
# ::edge	replace-01	ARG0	plan-01	0.1.0	0.1.0.0	
# ::edge	replace-01	ARG1	liability	0.1.0	0.1	
# ::edge	replace-01	location	source	0.1.0	0.1.0.1	
# ::edge	since	op1	ii	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	system	mod	insure-02	0.1.0.2.0.1.0	0.1.0.2.0.1.0.0	
# ::edge	system	mod	nation	0.1.0.2.0.1.0	0.1.0.2.0.1.0.1	
# ::edge	war	poss	world	0.0.0.0	0.0.0.0.1	
(b / benefit-01 
      :ARG1 (p / person 
            :ARG1-of (d / disable-01 
                  :ARG0 (w / war 
                        :mod-of (i2 / ii 
                              :op-of (s4 / since)) 
                        :poss (w2 / world)) 
                  :ARG2 (e / employ-01 
                        :ARG1 (s / sickness) 
                        :polarity -)) 
            :ARG2-of (c2 / compensate-01 
                  :ARG3 (a3 / accident))) 
      :ARG2 (l / liability 
            :ARG1-of (r / replace-01 
                  :ARG0 (p3 / plan-01 
                        :ARG0 (o / other 
                              :mod (m2 / most) 
                              :mod-of (c5 / contrast-01)) 
                        :ARG1 (i3 / insure-02 
                              :ARG0 (c4 / country 
                                    :ARG1-of (d2 / develop-02))) 
                        :ARG1-of (a4 / advance-01 
                              :mod (c3 / considerable))) 
                  :location (s5 / source) 
                  :op-of (a2 / and 
                        :ARG1-of (p2 / provide-01 
                              :ARG0 (m / money) 
                              :ARG2 (c / care-01 
                                    :ARG0 (s3 / system 
                                          :mod (i / insure-02 
                                                :ARG1 (s2 / society)) 
                                          :mod (n / nation)) 
                                    :ARG1 (h / health) 
                                    :ARG1-of (f / free-41)))))) 
      :location (a / accident) 
      :mod (b2 / basic))

# ::snt 95 is a rugby league book almost by accident since the welsh captains momentous decision came halfway through the writing
# ::tok 95 is a rugby league book almost by accident since the welsh captains momentous decision came halfway through the writing
# ::alignments 19-20|0.0.2 16-17|0.0.0.0.1 14-15|0.0 13-14|0 9-10|0.0.0 8-9|0.0.0.0 6-7|0.0.0.0.0 5-6|0.0.1 4-5|0.0.1.0 0-1|0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:03.606
# ::node	0	momentous	13-14
# ::node	0.0	decide-01	14-15
# ::node	0.0.0	since	9-10
# ::node	0.0.0.0	accident	8-9
# ::node	0.0.0.0.0	almost	6-7
# ::node	0.0.0.0.1	halfway	16-17
# ::node	0.0.1	book	5-6
# ::node	0.0.1.0	league	4-5
# ::node	0.0.2	write-01	19-20
# ::node	0.0.2.0	95	0-1
# ::root	0	momentous
(m / momentous 
      :mod-of (d / decide-01 
            :ARG0 (s / since 
                  :location-of (a / accident 
                        :mod (a2 / almost) 
                        :op1 (h / halfway))) 
            :ARG1 (b / book 
                  :mod (l / league)) 
            :ARG1-of (w / write-01 
                  :ARG0 95)))

# ::snt it is ironic that the one great accident of fame in his life came through the cinema, it was an accident in the sense of being unintended
# ::tok it is ironic that the one great accident of fame in his life came through the cinema , it was an accident in the sense of being unintended
# ::alignments 27-28|0.2+0 24-25|0.1 21-22|0.1.0 18-19|0.1.0.0 16-17|0.1.0.0.0 12-13|0.0.0.0.0 9-10|0.0.0.0 7-8|0.0.0 6-7|0.0 2-3|0.1.1.0 0-1|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:03.688
# ::node	0	intend-01	27-28
# ::node	0.0	great	6-7
# ::node	0.0.0	accident	7-8
# ::node	0.0.0.0	fame	9-10
# ::node	0.0.0.0.0	life	12-13
# ::node	0.1	sense	24-25
# ::node	0.1.0	accident	21-22
# ::node	0.1.0.0	it	18-19
# ::node	0.1.0.0.0	cinema	16-17
# ::node	0.1.1	it	0-1
# ::node	0.1.1.0	ironic	2-3
# ::node	0.2	-	27-28
# ::root	0	intend-01
# ::edge	accident	domain	it	0.1.0	0.1.0.0	
# ::edge	accident	mod	fame	0.0.0	0.0.0.0	
# ::edge	accident	mod	great	0.0.0	0.0	
# ::edge	accident	mod	sense	0.1.0	0.1	
# ::edge	cinema	domain	it	0.1.0.0.0	0.1.0.0	
# ::edge	intend-01	ARG0	great	0	0.0	
# ::edge	intend-01	ARG1	sense	0	0.1	
# ::edge	intend-01	polarity	-	0	0.2	
# ::edge	ironic	domain	it	0.1.1.0	0.1.1	
# ::edge	life	part	fame	0.0.0.0.0	0.0.0.0	
# ::edge	sense	poss	it	0.1	0.1.1	
(i / intend-01 
      :ARG0 (g / great 
            :mod-of (a2 / accident 
                  :mod (f / fame 
                        :part-of (l / life)))) 
      :ARG1 (s / sense 
            :mod-of (a / accident 
                  :domain (i2 / it 
                        :domain-of (c / cinema))) 
            :poss (i4 / it 
                  :domain-of (i3 / ironic))) 
      :polarity -)

# ::snt at length fearing some accident tom owen informed the police who recognizing his description bade him check his household possessions
# ::tok at length fearing some accident tom owen informed the police who recognizing his description bade him check his household possessions
# ::alignments 19-20|0 18-19|0.0 13-14|0.0.0.0.0 9-10|0.0.0.0 7-8|0.0.0 4-5|0.0.0.1 3-4|0.0.0.3 1-2|0.0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:03.734
# ::node	0	possession	19-20
# ::node	0.0	household	18-19
# ::node	0.0.0	inform-01	7-8
# ::node	0.0.0.0	police	9-10
# ::node	0.0.0.0.0	description	13-14
# ::node	0.0.0.1	accident	4-5
# ::node	0.0.0.2	length	1-2
# ::node	0.0.0.3	some	3-4
# ::root	0	possession
# ::edge	description	poss	police	0.0.0.0.0	0.0.0.0	
# ::edge	household	op1	inform-01	0.0	0.0.0	
# ::edge	inform-01	ARG0	police	0.0.0	0.0.0.0	
# ::edge	inform-01	ARG1	accident	0.0.0	0.0.0.1	
# ::edge	inform-01	ARG2	length	0.0.0	0.0.0.2	
# ::edge	inform-01	polarity	some	0.0.0	0.0.0.3	
# ::edge	possession	mod	household	0	0.0	
(p / possession 
      :mod (h / household 
            :op1 (i / inform-01 
                  :ARG0 (p2 / police 
                        :poss-of (d / description)) 
                  :ARG1 (a / accident) 
                  :ARG2 (l / length) 
                  :polarity (s / some))))

# ::snt the direct cause of the accident was the faulty rewiring of clapham junction signal box during a 32m update of the signalling system leading in to waterloo station
# ::tok the direct cause of the accident was the faulty rewiring of clapham junction signal box during a 32m update of the signalling system leading in to waterloo station
# ::alignments 27-28|0.0.0.0.0.1 23-24|0.0.0.0.0 22-23|0.0.0.0 18-19|0.0.0 14-15|0.0.0.0.0.0.0 13-14|0.0.0.0.0.0 8-9|0.0.0.0.0.2 5-6|0.0 2-3|0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:03.851
# ::node	0	cause-01	2-3
# ::node	0.0	accident	5-6
# ::node	0.0.0	update-01	18-19
# ::node	0.0.0.0	system	22-23
# ::node	0.0.0.0.0	lead-01	23-24
# ::node	0.0.0.0.0.0	signal-01	13-14
# ::node	0.0.0.0.0.0.0	box	14-15
# ::node	0.0.0.0.0.1	station	27-28
# ::node	0.0.0.0.0.2	faulty	8-9
# ::node	0.1	direct	1-2
# ::root	0	cause-01
# ::edge	cause-01	ARG1	accident	0	0.0	
# ::edge	cause-01	manner	direct	0	0.1	
# ::edge	faulty	op1	lead-01	0.0.0.0.0.2	0.0.0.0.0	
# ::edge	lead-01	ARG0	system	0.0.0.0.0	0.0.0.0	
# ::edge	lead-01	ARG1	signal-01	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	lead-01	ARG2	station	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	signal-01	ARG1	box	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	update-01	ARG0	accident	0.0.0	0.0	
# ::edge	update-01	ARG1	system	0.0.0	0.0.0.0	
(c / cause-01 
      :ARG1 (a / accident 
            :ARG0-of (u / update-01 
                  :ARG1 (s2 / system 
                        :ARG0-of (l / lead-01 
                              :ARG1 (s3 / signal-01 
                                    :ARG1 (b / box)) 
                              :ARG2 (s / station) 
                              :op-of (f / faulty))))) 
      :manner (d / direct))

# ::snt the county surveyor john peverelcooper this week spotlighted the accident toll on oxfordshire roads
# ::tok the county surveyor john peverelcooper this week spotlighted the accident toll on oxfordshire roads
# ::alignments 13-14|0.2 10-11|0 9-10|0.0 6-7|0.0.0 5-6|0.0.0.0 2-3|0.1.0+0.1 1-2|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:03.909
# ::node	0	toll	10-11
# ::node	0.0	accident	9-10
# ::node	0.0.0	week	6-7
# ::node	0.0.0.0	this	5-6
# ::node	0.1	person	2-3
# ::node	0.1.0	survey-01	2-3
# ::node	0.1.0.0	county	1-2
# ::node	0.2	road	13-14
# ::root	0	toll
# ::edge	survey-01	ARG0	person	0.1.0	0.1	
# ::edge	survey-01	ARG1	county	0.1.0	0.1.0.0	
# ::edge	toll	mod	accident	0	0.0	
# ::edge	toll	mod	person	0	0.1	
# ::edge	toll	topic	road	0	0.2	
# ::edge	week	mod	this	0.0.0	0.0.0.0	
# ::edge	week	name	accident	0.0.0	0.0	
(t / toll 
      :mod (a / accident 
            :name-of (w / week 
                  :mod (t2 / this))) 
      :mod (p / person 
            :ARG0-of (s / survey-01 
                  :ARG1 (c / county))) 
      :topic (r / road))

# ::snt a verdict of accidental death was returned, the only witness to the accident on september 12 last year was bricklayer mr walter jeacock of ashdene road bicester
# ::tok a verdict of accidental death was returned , the only witness to the accident on september 12 last year was bricklayer mr walter jeacock of ashdene road bicester
# ::alignments 26-27|0.2.0 18-19|0.1.0.0.0.0.0 17-18|0.1.0.0.0.0 16-17|0.0 15-16|0.1.0.0.0.1+0.1.0.0.0 13-14|0.1.0.0 10-11|0.1.0+0.1 9-10|0.1.1 6-7|0 4-5|0.2 1-2|0.2.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:04.191
# ::node	0	return-01	6-7
# ::node	0.0	12	16-17
# ::node	0.1	person	10-11
# ::node	0.1.0	witness-01	10-11
# ::node	0.1.0.0	accident	13-14
# ::node	0.1.0.0.0	date-entity	15-16
# ::node	0.1.0.0.0.0	last	17-18
# ::node	0.1.0.0.0.0.0	year	18-19
# ::node	0.1.0.0.0.1	9	15-16
# ::node	0.1.1	only	9-10
# ::node	0.2	die-01	4-5
# ::node	0.2.0	road	26-27
# ::node	0.2.1	verdict	1-2
# ::root	0	return-01
# ::edge	accident	time	date-entity	0.1.0.0	0.1.0.0.0	
# ::edge	date-entity	month	9	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	die-01	ARG0	road	0.2	0.2.0	
# ::edge	last	mod	date-entity	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	person	mod	only	0.1	0.1.1	
# ::edge	return-01	ARG0	12	0	0.0	
# ::edge	return-01	ARG1	person	0	0.1	
# ::edge	return-01	ARG2	die-01	0	0.2	
# ::edge	verdict	mod	die-01	0.2.1	0.2	
# ::edge	witness-01	ARG0	person	0.1.0	0.1	
# ::edge	witness-01	ARG1	accident	0.1.0	0.1.0.0	
# ::edge	year	mod	last	0.1.0.0.0.0.0	0.1.0.0.0.0	
(r2 / return-01 
      :ARG0 12 
      :ARG1 (p / person 
            :ARG0-of (w / witness-01 
                  :ARG1 (a / accident 
                        :time (d / date-entity 
                              :mod-of (l / last 
                                    :mod-of (y / year)) 
                              :month 9))) 
            :mod (o / only)) 
      :ARG2 (d2 / die-01 
            :ARG0 (r / road) 
            :mod-of (v / verdict)))

# ::snt typical of products already on sale worldwide is chemdata a computer directory of 60000 hazardous chemicals which gives emergency staff first strike information in the event of fires spillages and accidents
# ::tok typical of products already on sale worldwide is chemdata a computer directory of 60000 hazardous chemicals which gives emergency staff first strike information in the event of fires spillages and accidents
# ::alignments 30-31|0.4.1 29-30|0.4 27-28|0.4.0.0.1.0 25-26|0.4.0.0.1 22-23|0.4.0.0 21-22|0.4.0 19-20|0.4.0.0.0.1.0+0.4.0.0.0.1 18-19|0.4.0.0.0.1.1 17-18|0.4.0.0.0 15-16|0.4.0.0.0.0 13-14|0.1 10-11|0.0 6-7|0.4.0.1 3-4|0.3 2-3|0.2 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:04.475
# ::node	0	typify-01	0-1
# ::node	0.0	computer	10-11
# ::node	0.1	60000	13-14
# ::node	0.2	product	2-3
# ::node	0.3	already	3-4
# ::node	0.4	and	29-30
# ::node	0.4.0	strike-01	21-22
# ::node	0.4.0.0	information	22-23
# ::node	0.4.0.0.0	give-01	17-18
# ::node	0.4.0.0.0.0	chemical	15-16
# ::node	0.4.0.0.0.1	person	19-20
# ::node	0.4.0.0.0.1.0	staff-01	19-20
# ::node	0.4.0.0.0.1.1	emergency	18-19
# ::node	0.4.0.0.1	event	25-26
# ::node	0.4.0.0.1.0	fire	27-28
# ::node	0.4.0.1	worldwide	6-7
# ::node	0.4.1	accident	30-31
# ::root	0	typify-01
# ::edge	already	op1	typify-01	0.3	0	
# ::edge	and	op1	typify-01	0.4	0	
# ::edge	and	op2	accident	0.4	0.4.1	
# ::edge	event	location	fire	0.4.0.0.1	0.4.0.0.1.0	
# ::edge	give-01	ARG0	chemical	0.4.0.0.0	0.4.0.0.0.0	
# ::edge	give-01	ARG1	information	0.4.0.0.0	0.4.0.0	
# ::edge	give-01	ARG2	person	0.4.0.0.0	0.4.0.0.0.1	
# ::edge	information	topic	event	0.4.0.0	0.4.0.0.1	
# ::edge	person	mod	emergency	0.4.0.0.0.1	0.4.0.0.0.1.1	
# ::edge	staff-01	ARG2	person	0.4.0.0.0.1.0	0.4.0.0.0.1	
# ::edge	strike-01	ARG0	and	0.4.0	0.4	
# ::edge	strike-01	ARG1	information	0.4.0	0.4.0.0	
# ::edge	typify-01	ARG0	computer	0	0.0	
# ::edge	typify-01	ARG1	60000	0	0.1	
# ::edge	typify-01	ARG2	product	0	0.2	
# ::edge	worldwide	op1	strike-01	0.4.0.1	0.4.0	
(t / typify-01 
      :ARG0 (c2 / computer) 
      :ARG1 60000 
      :ARG2 (p2 / product) 
      :op-of (a3 / already) 
      :op-of (a2 / and 
            :ARG0-of (s / strike-01 
                  :ARG1 (i / information 
                        :ARG1-of (g / give-01 
                              :ARG0 (c / chemical) 
                              :ARG2 (p / person 
                                    :ARG2-of (s2 / staff-01) 
                                    :mod (e2 / emergency))) 
                        :topic (e / event 
                              :location (f / fire))) 
                  :op-of (w / worldwide)) 
            :op1 (a / accident)))

# ::snt last month the department issued a warning over glasstopped tables tested because of a high accident rate
# ::tok last month the department issued a warning over glasstopped tables tested because of a high accident rate
# ::alignments 16-17|0.0 15-16|0.0.0 14-15|0.0.0.0 11-12|0 10-11|0.1 9-10|0.1.0 6-7|0.1.1.1 4-5|0.1.1 3-4|0.1.1.0 1-2|0.1.1.1.0.0+0.1.1.1.0 0-1|0.1.1.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:04.545
# ::node	0	cause-01	11-12
# ::node	0.0	rate	16-17
# ::node	0.0.0	accident	15-16
# ::node	0.0.0.0	high	14-15
# ::node	0.1	test-01	10-11
# ::node	0.1.0	table	9-10
# ::node	0.1.1	issue-01	4-5
# ::node	0.1.1.0	department	3-4
# ::node	0.1.1.1	warn-01	6-7
# ::node	0.1.1.1.0	temporal-quantity	1-2
# ::node	0.1.1.1.0.0	month	1-2
# ::node	0.1.1.1.0.0.0	last	0-1
# ::root	0	cause-01
# ::edge	accident	mod	high	0.0.0	0.0.0.0	
# ::edge	cause-01	ARG0	rate	0	0.0	
# ::edge	cause-01	ARG1	test-01	0	0.1	
# ::edge	issue-01	ARG0	department	0.1.1	0.1.1.0	
# ::edge	issue-01	ARG1	warn-01	0.1.1	0.1.1.1	
# ::edge	issue-01	purpose	test-01	0.1.1	0.1	
# ::edge	month	mod	last	0.1.1.1.0.0	0.1.1.1.0.0.0	
# ::edge	rate	mod	accident	0.0	0.0.0	
# ::edge	temporal-quantity	unit	month	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	test-01	ARG1	table	0.1	0.1.0	
# ::edge	warn-01	ARG0	temporal-quantity	0.1.1.1	0.1.1.1.0	
(c / cause-01 
      :ARG0 (r / rate 
            :mod (a / accident 
                  :mod (h / high))) 
      :ARG1 (t / test-01 
            :ARG1 (t2 / table) 
            :purpose-of (i / issue-01 
                  :ARG0 (d / department) 
                  :ARG1 (w / warn-01 
                        :ARG0 (t3 / temporal-quantity 
                              :unit (m / month 
                                    :mod (l / last)))))))

# ::snt like a cave and shes an animal who lives there and is all scared and angry when someone comes in by accident
# ::tok like a cave and shes an animal who lives there and is all scared and angry when someone comes in by accident
# ::alignments 21-22|0.3.0 17-18|0.3.0.0 15-16|0.3.1.0 14-15|0.0 13-14|0.3 12-13|0.3.1 10-11|0 8-9|0.2 6-7|0.1.0.1 4-5|0.1 3-4|0.1.0 2-3|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:04.597
# ::node	0	and	10-11
# ::node	0.0	and	14-15
# ::node	0.1	she	4-5
# ::node	0.1.0	and	3-4
# ::node	0.1.0.0	cave	2-3
# ::node	0.1.0.1	animal	6-7
# ::node	0.2	life	8-9
# ::node	0.3	scare-01	13-14
# ::node	0.3.0	accident	21-22
# ::node	0.3.0.0	someone	17-18
# ::node	0.3.1	all	12-13
# ::node	0.3.1.0	angry	15-16
# ::root	0	and
# ::edge	accident	poss	someone	0.3.0	0.3.0.0	
# ::edge	and	manner	and	0	0.0	
# ::edge	and	op1	cave	0.1.0	0.1.0.0	
# ::edge	and	op1	she	0	0.1	
# ::edge	and	op2	life	0	0.2	
# ::edge	and	op2	she	0.1.0	0.1	
# ::edge	and	op3	animal	0.1.0	0.1.0.1	
# ::edge	and	op3	scare-01	0	0.3	
# ::edge	angry	degree	all	0.3.1.0	0.3.1	
# ::edge	scare-01	ARG1	accident	0.3	0.3.0	
# ::edge	scare-01	ARG2	all	0.3	0.3.1	
(a5 / and 
      :manner (a3 / and) 
      :op1 (s3 / she 
            :op-of (a7 / and 
                  :op1 (c / cave) 
                  :op2 (a6 / animal))) 
      :op2 (l / life) 
      :op3 (s2 / scare-01 
            :ARG1 (a / accident 
                  :poss (s / someone)) 
            :ARG2 (a4 / all 
                  :degree-of (a2 / angry))))

# ::snt mr sharon formally far away from the issues of defence and foreign policy is fighting hard and dirty to put his indelible stamp on them the fact that this also serves his own personal ambitions is no accident
# ::tok mr sharon formally far away from the issues of defence and foreign policy is fighting hard and dirty to put his indelible stamp on them the fact that this also serves his own personal ambitions is no accident
# ::alignments 37-38|0.0.0.0.1.0 36-37|0.0.0.0.1.0.0 34-35|0.0.0.0.1 33-34|0.0.0.0.1.1 30-31|0.0.0.0 29-30|0.0.0.0.2 28-29|0.0.0.0.0 26-27|0.1 22-23|0.2.1 21-22|0.2.1.1 17-18|0.2.0 16-17|0.2 15-16|0.3 14-15|0 12-13|0.0.1 11-12|0.0.1.0 10-11|0.0 9-10|0.0.0 7-8|0.0.2 4-5|0.2.1.0.0.0 3-4|0.2.1.0.0 2-3|0.2.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:05.126
# ::node	0	fight-01	14-15
# ::node	0.0	and	10-11
# ::node	0.0.0	defend-01	9-10
# ::node	0.0.0.0	serve-01	30-31
# ::node	0.0.0.0.0	this	28-29
# ::node	0.0.0.0.1	ambition	34-35
# ::node	0.0.0.0.1.0	accident	37-38
# ::node	0.0.0.0.1.0.0	-	36-37
# ::node	0.0.0.0.1.1	personal	33-34
# ::node	0.0.0.0.2	also	29-30
# ::node	0.0.1	policy	12-13
# ::node	0.0.1.0	foreign	11-12
# ::node	0.0.2	issue	7-8
# ::node	0.1	fact	26-27
# ::node	0.2	and	16-17
# ::node	0.2.0	dirty	17-18
# ::node	0.2.1	stamp-05	22-23
# ::node	0.2.1.0	formal	2-3
# ::node	0.2.1.0.0	far	3-4
# ::node	0.2.1.0.0.0	away	4-5
# ::node	0.2.1.1	indelible	21-22
# ::node	0.3	hard	15-16
# ::root	0	fight-01
# ::edge	accident	domain	ambition	0.0.0.0.1.0	0.0.0.0.1	
# ::edge	accident	polarity	-	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	ambition	mod	personal	0.0.0.0.1	0.0.0.0.1.1	
# ::edge	and	op1	defend-01	0.0	0.0.0	
# ::edge	and	op1	dirty	0.2	0.2.0	
# ::edge	and	op2	policy	0.0	0.0.1	
# ::edge	and	op2	stamp-05	0.2	0.2.1	
# ::edge	away	mod	far	0.2.1.0.0.0	0.2.1.0.0	
# ::edge	defend-01	ARG1	serve-01	0.0.0	0.0.0.0	
# ::edge	far	mod	formal	0.2.1.0.0	0.2.1.0	
# ::edge	fight-01	ARG0	and	0	0.0	
# ::edge	fight-01	ARG1	fact	0	0.1	
# ::edge	fight-01	ARG2	and	0	0.2	
# ::edge	fight-01	manner	hard	0	0.3	
# ::edge	issue	topic	and	0.0.2	0.0	
# ::edge	policy	mod	foreign	0.0.1	0.0.1.0	
# ::edge	serve-01	ARG0	this	0.0.0.0	0.0.0.0.0	
# ::edge	serve-01	ARG1	ambition	0.0.0.0	0.0.0.0.1	
# ::edge	serve-01	mod	also	0.0.0.0	0.0.0.0.2	
# ::edge	stamp-05	ARG1	formal	0.2.1	0.2.1.0	
# ::edge	stamp-05	mod	indelible	0.2.1	0.2.1.1	
(f2 / fight-01 
      :ARG0 (a5 / and 
            :op1 (d2 / defend-01 
                  :ARG1 (s / serve-01 
                        :ARG0 (t / this) 
                        :ARG1 (a2 / ambition 
                              :domain-of (a / accident 
                                    :polarity (- / -)) 
                              :mod (p / personal)) 
                        :mod (a3 / also))) 
            :op2 (p2 / policy 
                  :mod (f3 / foreign)) 
            :topic-of (i2 / issue)) 
      :ARG1 (f / fact) 
      :ARG2 (a4 / and 
            :op1 (d / dirty) 
            :op2 (s2 / stamp-05 
                  :ARG1 (f5 / formal 
                        :mod-of (f4 / far 
                              :mod-of (a6 / away))) 
                  :mod (i / indelible))) 
      :manner (h / hard))

# ::snt the move follows warnings that the missiles could leak radioactive plutonium in an accident
# ::tok the move follows warnings that the missiles could leak radioactive plutonium in an accident
# ::alignments 13-14|0.0.0.2 10-11|0.0.0.1 9-10|0.0.0.1.0 8-9|0.0.0 7-8|0.0 6-7|0.0.0.0 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:05.149
# ::node	0	warn-01	3-4
# ::node	0.0	possible	7-8
# ::node	0.0.0	leak-01	8-9
# ::node	0.0.0.0	missile	6-7
# ::node	0.0.0.1	plutonium	10-11
# ::node	0.0.0.1.0	radioactive	9-10
# ::node	0.0.0.2	accident	13-14
# ::root	0	warn-01
# ::edge	leak-01	ARG0	missile	0.0.0	0.0.0.0	
# ::edge	leak-01	ARG1	plutonium	0.0.0	0.0.0.1	
# ::edge	leak-01	manner	accident	0.0.0	0.0.0.2	
# ::edge	plutonium	mod	radioactive	0.0.0.1	0.0.0.1.0	
# ::edge	possible	domain	leak-01	0.0	0.0.0	
# ::edge	warn-01	ARG1	possible	0	0.0	
(w / warn-01 
      :ARG1 (p2 / possible 
            :domain (l / leak-01 
                  :ARG0 (m / missile) 
                  :ARG1 (p / plutonium 
                        :mod (r / radioactive)) 
                  :manner (a / accident))))

# ::snt oleg was slightly injured in a car accident last december and needed an injection as part of his treatment
# ::tok oleg was slightly injured in a car accident last december and needed an injection as part of his treatment
# ::alignments 18-19|0.1.1 13-14|0.1.0 11-12|0.1 10-11|0 9-10|0.0.2.1+0.0.2 8-9|0.0.2.0 7-8|0.0.0 6-7|0.0.0.0 3-4|0.0 2-3|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:05.248
# ::node	0	and	10-11
# ::node	0.0	injure-01	3-4
# ::node	0.0.0	accident	7-8
# ::node	0.0.0.0	car	6-7
# ::node	0.0.1	slight	2-3
# ::node	0.0.2	date-entity	9-10
# ::node	0.0.2.0	last	8-9
# ::node	0.0.2.1	12	9-10
# ::node	0.1	need-01	11-12
# ::node	0.1.0	inject-01	13-14
# ::node	0.1.1	treat-03	18-19
# ::root	0	and
# ::edge	accident	location	car	0.0.0	0.0.0.0	
# ::edge	and	op1	injure-01	0	0.0	
# ::edge	and	op2	need-01	0	0.1	
# ::edge	date-entity	mod	last	0.0.2	0.0.2.0	
# ::edge	date-entity	month	12	0.0.2	0.0.2.1	
# ::edge	injure-01	ARG1	accident	0.0	0.0.0	
# ::edge	injure-01	degree	slight	0.0	0.0.1	
# ::edge	injure-01	time	date-entity	0.0	0.0.2	
# ::edge	need-01	ARG1	inject-01	0.1	0.1.0	
# ::edge	need-01	ARG2	treat-03	0.1	0.1.1	
(a / and 
      :op1 (i2 / injure-01 
            :ARG1 (a2 / accident 
                  :location (c / car)) 
            :degree (s / slight) 
            :time (d / date-entity 
                  :mod (l / last) 
                  :month 12)) 
      :op2 (n / need-01 
            :ARG1 (i / inject-01) 
            :ARG2 (t / treat-03)))

# ::snt the cost of clearing up after road accidents in oxfordshire dash
# ::tok the cost of clearing up after road accidents in oxfordshire dash
# ::alignments 7-8|0.0.0 6-7|0.0.0.0 5-6|0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:05.258
# ::node	0	cost-01	1-2
# ::node	0.0	after	5-6
# ::node	0.0.0	accident	7-8
# ::node	0.0.0.0	road	6-7
# ::root	0	cost-01
# ::edge	accident	location	road	0.0.0	0.0.0.0	
# ::edge	after	op1	accident	0.0	0.0.0	
# ::edge	cost-01	ARG1	after	0	0.0	
(c / cost-01 
      :ARG1 (a2 / after 
            :op1 (a / accident 
                  :location (r / road))))

# ::snt the southbound carriageway of the a34 was blocked for several hours yesterday morning after the accident near the milton interchange
# ::tok the southbound carriageway of the a34 was blocked for several hours yesterday morning after the accident near the milton interchange
# ::alignments 16-17|0.2.0.0 15-16|0.2.0 13-14|0.2 12-13|0.3 11-12|0.0 10-11|0.1.1+0.1 9-10|0.1.0 7-8|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:05.296
# ::node	0	block-01	7-8
# ::node	0.0	yesterday	11-12
# ::node	0.1	temporal-quantity	10-11
# ::node	0.1.0	several	9-10
# ::node	0.1.1	hour	10-11
# ::node	0.2	after	13-14
# ::node	0.2.0	accident	15-16
# ::node	0.2.0.0	near	16-17
# ::node	0.3	morning	12-13
# ::root	0	block-01
# ::edge	accident	location	near	0.2.0	0.2.0.0	
# ::edge	after	op1	accident	0.2	0.2.0	
# ::edge	block-01	ARG0	yesterday	0	0.0	
# ::edge	block-01	ARG1	temporal-quantity	0	0.1	
# ::edge	block-01	time	after	0	0.2	
# ::edge	block-01	time	morning	0	0.3	
# ::edge	several	op1	temporal-quantity	0.1.0	0.1	
# ::edge	temporal-quantity	unit	hour	0.1	0.1.1	
(b / block-01 
      :ARG0 (y / yesterday) 
      :ARG1 (t / temporal-quantity 
            :op-of (s / several) 
            :unit (h / hour)) 
      :time (a2 / after 
            :op1 (a / accident 
                  :location (n / near))) 
      :time (m / morning))

# ::snt the business with the drug and your sister was an accident a new gimmick they were going to try on every agent fresh in from the field only it went wrong
# ::tok the business with the drug and your sister was an accident a new gimmick they were going to try on every agent fresh in from the field only it went wrong
# ::alignments 30-31|0 28-29|0.1 27-28|0.2 26-27|0.1.1 22-23|0.1.0.0.1.1 21-22|0.1.0.0.1 20-21|0.1.0.0.1.0 18-19|0.1.0 14-15|0.1.0.0 12-13|0.0 10-11|0.1.0.0.0.1 7-8|0.1.0.0.0.0.0+0.1.0.0.0.0 5-6|0.1.0.0.0.2 4-5|0.1.0.0.0 1-2|0.1.0.0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:05.772
# ::node	0	wrong-41	30-31
# ::node	0.0	new	12-13
# ::node	0.1	it	28-29
# ::node	0.1.0	try-01	18-19
# ::node	0.1.0.0	they	14-15
# ::node	0.1.0.0.0	drug	4-5
# ::node	0.1.0.0.0.0	have-rel-role-91	7-8
# ::node	0.1.0.0.0.0.0	sister	7-8
# ::node	0.1.0.0.0.1	accident	10-11
# ::node	0.1.0.0.0.2	and	5-6
# ::node	0.1.0.0.0.2.0	business	1-2
# ::node	0.1.0.0.1	agent	21-22
# ::node	0.1.0.0.1.0	every	20-21
# ::node	0.1.0.0.1.1	fresh	22-23
# ::node	0.1.1	field	26-27
# ::node	0.2	only	27-28
# ::root	0	wrong-41
# ::edge	agent	mod	every	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	agent	mod	fresh	0.1.0.0.1	0.1.0.0.1.1	
# ::edge	agent	poss	they	0.1.0.0.1	0.1.0.0	
# ::edge	and	op1	business	0.1.0.0.0.2	0.1.0.0.0.2.0	
# ::edge	and	op2	drug	0.1.0.0.0.2	0.1.0.0.0	
# ::edge	drug	mod	accident	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	field	poss	it	0.1.1	0.1	
# ::edge	have-rel-role-91	ARG0	drug	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	have-rel-role-91	ARG2	sister	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	they	part	drug	0.1.0.0	0.1.0.0.0	
# ::edge	try-01	ARG0	they	0.1.0	0.1.0.0	
# ::edge	try-01	ARG1	it	0.1.0	0.1	
# ::edge	wrong-41	ARG0	new	0	0.0	
# ::edge	wrong-41	ARG1	it	0	0.1	
# ::edge	wrong-41	extent	only	0	0.2	
(w / wrong-41 
      :ARG0 (n / new) 
      :ARG1 (i / it 
            :ARG1-of (t / try-01 
                  :ARG0 (t2 / they 
                        :part (d / drug 
                              :ARG0-of (h / have-rel-role-91 
                                    :ARG2 (s / sister)) 
                              :mod (a2 / accident) 
                              :op-of (a3 / and 
                                    :op1 (b / business))) 
                        :poss-of (a / agent 
                              :mod (e / every) 
                              :mod (f2 / fresh)))) 
            :poss-of (f / field)) 
      :extent (o / only))

# ::snt god knew what harm he might do  sooner or later if she ever got her reason back she would realise that her daughter had resigned from this german job six weeks before the accident that she hadnt breathed a word to her aunt or her friends about the possibility of her returning to europe
# ::tok god knew what harm he might do sooner or later if she ever got her reason back she would realise that her daughter had resigned from this german job six weeks before the accident that she hadnt breathed a word to her aunt or her friends about the possibility of her returning to europe
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:05.773
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt and it may also prove useful as a replacement for bone which is missing as a result of an accident
# ::tok and it may also prove useful as a replacement for bone which is missing as a result of an accident
# ::alignments 19-20|0.1.0.0.0.0.0.0 16-17|0.1.0.0.0.0.0 13-14|0.1.0.0.0.0 10-11|0.1.0.0.0 8-9|0.1.0.0 5-6|0.1.1 4-5|0.1 3-4|0.1.2 2-3|0.0.0+0.0 1-2|0.1.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:06.000
# ::node	0	and	0-1
# ::node	0.0	date-entity	2-3
# ::node	0.0.0	5	2-3
# ::node	0.1	prove-01	4-5
# ::node	0.1.0	it	1-2
# ::node	0.1.0.0	replace-01	8-9
# ::node	0.1.0.0.0	bone	10-11
# ::node	0.1.0.0.0.0	miss-01	13-14
# ::node	0.1.0.0.0.0.0	result-01	16-17
# ::node	0.1.0.0.0.0.0.0	accident	19-20
# ::node	0.1.1	useful	5-6
# ::node	0.1.2	also	3-4
# ::root	0	and
# ::edge	and	op1	date-entity	0	0.0	
# ::edge	and	op2	prove-01	0	0.1	
# ::edge	date-entity	month	5	0.0	0.0.0	
# ::edge	miss-01	ARG0	bone	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	miss-01	ARG1	result-01	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	prove-01	ARG0	it	0.1	0.1.0	
# ::edge	prove-01	ARG1	useful	0.1	0.1.1	
# ::edge	prove-01	mod	also	0.1	0.1.2	
# ::edge	replace-01	ARG0	it	0.1.0.0	0.1.0	
# ::edge	replace-01	ARG1	bone	0.1.0.0	0.1.0.0.0	
# ::edge	result-01	ARG1	accident	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
(a3 / and 
      :op1 (d / date-entity 
            :month 5) 
      :op2 (p / prove-01 
            :ARG0 (i / it 
                  :ARG0-of (r2 / replace-01 
                        :ARG1 (b / bone 
                              :ARG0-of (m / miss-01 
                                    :ARG1 (r / result-01 
                                          :ARG1 (a / accident)))))) 
            :ARG1 (u / useful) 
            :mod (a2 / also)))

# ::snt bursonfo id59 disallowing a typical provision of a state financial responsibility law under which a drivers licence was suspended after involvement in an accident without a hearing on the question of liability unless he could furnish security for the amount of damages claimed by an aggrieved party
# ::tok bursonfo id59 disallowing a typical provision of a state financial responsibility law under which a drivers licence was suspended after involvement in an accident without a hearing on the question of liability unless he could furnish security for the amount of damages claimed by an aggrieved party
# ::alignments 46-47|0.0.1.1.1.0.2.0.0 42-43|0.0.1.1.1.0.2.0 41-42|0.0.1.1.1.0.2 39-40|0.0.1.1.1.0.2.1 36-37|0.0.0.0.0.0 34-35|0.0.0.0.0 33-34|0.0.1.1.0 31-32|0.0.0.0 29-30|0.0.0 26-27|0.0 23-24|0.0.1.0 20-21|0.0.1 19-20|0.0.1.1.2 18-19|0.0.1.1 16-17|0.0.1.1.1 15-16|0.0.1.1.1.0.0+0.0.1.1.1.0 11-12|0.0.1.1.1.0.1.1 10-11|0.0.1.1.1.0.1 9-10|0.0.1.1.1.0.1.0 8-9|0.0.1.1.1.0.1.1.0 4-5|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:06.406
# ::node	0	typify-01	4-5
# ::node	0.0	hear-01	26-27
# ::node	0.0.0	question-01	29-30
# ::node	0.0.0.0	liability	31-32
# ::node	0.0.0.0.0	possible	34-35
# ::node	0.0.0.0.0.0	security	36-37
# ::node	0.0.1	involve-01	20-21
# ::node	0.0.1.0	accident	23-24
# ::node	0.0.1.1	suspend-01	18-19
# ::node	0.0.1.1.0	he	33-34
# ::node	0.0.1.1.1	licence	16-17
# ::node	0.0.1.1.1.0	person	15-16
# ::node	0.0.1.1.1.0.0	drive-01	15-16
# ::node	0.0.1.1.1.0.1	responsible-41	10-11
# ::node	0.0.1.1.1.0.1.0	finance	9-10
# ::node	0.0.1.1.1.0.1.1	law	11-12
# ::node	0.0.1.1.1.0.1.1.0	state	8-9
# ::node	0.0.1.1.1.0.2	damage-01	41-42
# ::node	0.0.1.1.1.0.2.0	claim-01	42-43
# ::node	0.0.1.1.1.0.2.0.0	party	46-47
# ::node	0.0.1.1.1.0.2.1	amount	39-40
# ::node	0.0.1.1.2	after	19-20
# ::root	0	typify-01
# ::edge	claim-01	ARG0	party	0.0.1.1.1.0.2.0	0.0.1.1.1.0.2.0.0	
# ::edge	claim-01	ARG1	damage-01	0.0.1.1.1.0.2.0	0.0.1.1.1.0.2	
# ::edge	damage-01	ARG1	person	0.0.1.1.1.0.2	0.0.1.1.1.0	
# ::edge	damage-01	quant	amount	0.0.1.1.1.0.2	0.0.1.1.1.0.2.1	
# ::edge	drive-01	ARG0	person	0.0.1.1.1.0.0	0.0.1.1.1.0	
# ::edge	hear-01	ARG1	question-01	0.0	0.0.0	
# ::edge	involve-01	ARG1	accident	0.0.1	0.0.1.0	
# ::edge	involve-01	ARG2	hear-01	0.0.1	0.0	
# ::edge	law	poss	state	0.0.1.1.1.0.1.1	0.0.1.1.1.0.1.1.0	
# ::edge	law	topic	responsible-41	0.0.1.1.1.0.1.1	0.0.1.1.1.0.1	
# ::edge	liability	mod	possible	0.0.0.0	0.0.0.0.0	
# ::edge	licence	mod	person	0.0.1.1.1	0.0.1.1.1.0	
# ::edge	possible	domain	security	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	question-01	ARG1	liability	0.0.0	0.0.0.0	
# ::edge	responsible-41	ARG1	person	0.0.1.1.1.0.1	0.0.1.1.1.0	
# ::edge	responsible-41	mod	finance	0.0.1.1.1.0.1	0.0.1.1.1.0.1.0	
# ::edge	suspend-01	ARG0	he	0.0.1.1	0.0.1.1.0	
# ::edge	suspend-01	ARG1	licence	0.0.1.1	0.0.1.1.1	
# ::edge	suspend-01	manner	involve-01	0.0.1.1	0.0.1	
# ::edge	suspend-01	time	after	0.0.1.1	0.0.1.1.2	
# ::edge	typify-01	ARG1	hear-01	0	0.0	
(t / typify-01 
      :ARG1 (h2 / hear-01 
            :ARG1 (q / question-01 
                  :ARG1 (l / liability 
                        :mod (p2 / possible 
                              :domain (s / security)))) 
            :ARG2-of (i / involve-01 
                  :ARG1 (a2 / accident) 
                  :manner-of (s2 / suspend-01 
                        :ARG0 (h / he) 
                        :ARG1 (l2 / licence 
                              :mod (p3 / person 
                                    :ARG0-of (d2 / drive-01) 
                                    :ARG1-of (r / responsible-41 
                                          :mod (f / finance) 
                                          :topic-of (l3 / law 
                                                :poss (s3 / state))) 
                                    :ARG1-of (d / damage-01 
                                          :ARG1-of (c / claim-01 
                                                :ARG0 (p / party)) 
                                          :quant (a / amount)))) 
                        :time (a3 / after)))))

# ::snt he was on his way to visit friends in london when he was involved in the accident
# ::tok he was on his way to visit friends in london when he was involved in the accident
# ::alignments 16-17|0.2 13-14|0 11-12|0.0 9-10|0.1.0.0+0.1.0+0.1 7-8|0.3.0.0.0+0.3.0.0 6-7|0.3 4-5|0.3.0 0-1|0.3.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:06.646
# ::node	0	involve-01	13-14
# ::node	0.0	he	11-12
# ::node	0.1	city	9-10
# ::node	0.1.0	name	9-10
# ::node	0.1.0.0	"London"	9-10
# ::node	0.2	accident	16-17
# ::node	0.3	visit-01	6-7
# ::node	0.3.0	way	4-5
# ::node	0.3.0.0	have-rel-role-91	7-8
# ::node	0.3.0.0.0	friend	7-8
# ::node	0.3.0.1	he	0-1
# ::root	0	involve-01
# ::edge	city	name	name	0.1	0.1.0	
# ::edge	have-rel-role-91	ARG1	way	0.3.0.0	0.3.0	
# ::edge	have-rel-role-91	ARG2	friend	0.3.0.0	0.3.0.0.0	
# ::edge	involve-01	ARG0	he	0	0.0	
# ::edge	involve-01	ARG1	city	0	0.1	
# ::edge	involve-01	ARG2	accident	0	0.2	
# ::edge	name	op1	"London"	0.1.0	0.1.0.0	
# ::edge	visit-01	ARG0	way	0.3	0.3.0	
# ::edge	visit-01	time	involve-01	0.3	0	
# ::edge	way	poss	he	0.3.0	0.3.0.1	
(i / involve-01 
      :ARG0 (h / he) 
      :ARG1 (c / city 
            :name (n / name 
                  :op1 "London")) 
      :ARG2 (a / accident) 
      :time-of (v / visit-01 
            :ARG0 (w / way 
                  :ARG1-of (h2 / have-rel-role-91 
                        :ARG2 (f / friend)) 
                  :poss (h3 / he))))

# ::snt a craft teacher at bicester school escaped serious injury in a road accident yesterday wednesday july 11, mr reg haynes 62 of kennedy road bicester suffered bruising and shock in the accident which involved his rover car a volkswagen van and another car, mr haynes car was badly damaged in the accident which happened on the a43 between ardley and middleton stoney at about 440pm
# ::tok a craft teacher at bicester school escaped serious injury in a road accident yesterday wednesday july 11 , mr reg haynes 62 of kennedy road bicester suffered bruising and shock in the accident which involved his rover car a volkswagen van and another car , mr haynes car was badly damaged in the accident which happened on the a43 between ardley and middleton stoney at about 440pm
# ::alignments 61-62|0.0.0.0.1.1.0.1 59-60|0.0.0.0.1.1.0.0.1 55-56|0.0.0.0.1.1.0.0 53-54|0.0.0.0.1.1.0 50-51|0.0.0.0.1.1 47-48|0.3 43-44|0.2 42-43|0.0.0.0.1.1.0.0.0 41-42|0 40-41|0.1 37-38|0.0.1 34-35|0.0 32-33|0.0.0 29-30|0.0.0.0 28-29|0.0.0.0.1 26-27|0.0.0.0.1.0 24-25|0.0.0.0.1.0.0 21-22|0.0.0.0.0 16-17|0.0.0.0.1.1.1.1.0.0 15-16|0.0.0.0.1.1.1.1.1.0+0.0.0.0.1.1.1.1.1 13-14|0.0.2 12-13|0.0.0.0.1.1.1.1.0.1 11-12|0.0.0.0.1.1.1.1.0.1.0 8-9|0.0.0.0.1.1.1.1.0 7-8|0.0.0.0.1.1.1.1.0.2 6-7|0.0.0.0.1.1.1.1 5-6|0.0.0.0.1.1.1.2.0 2-3|0.0.0.0.1.1.1.0+0.0.0.0.1.1.1 1-2|0.0.0.0.1.1.1.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:08.473
# ::node	0	and	41-42
# ::node	0.0	involve-01	34-35
# ::node	0.0.0	accident	32-33
# ::node	0.0.0.0	shock-01	29-30
# ::node	0.0.0.0.0	62	21-22
# ::node	0.0.0.0.1	and	28-29
# ::node	0.0.0.0.1.0	suffer-01	26-27
# ::node	0.0.0.0.1.0.0	road	24-25
# ::node	0.0.0.0.1.1	damage-01	50-51
# ::node	0.0.0.0.1.1.0	accident	53-54
# ::node	0.0.0.0.1.1.0.0	happen-01	55-56
# ::node	0.0.0.0.1.1.0.0.0	another	42-43
# ::node	0.0.0.0.1.1.0.0.1	between	59-60
# ::node	0.0.0.0.1.1.0.1	and	61-62
# ::node	0.0.0.0.1.1.1	person	2-3
# ::node	0.0.0.0.1.1.1.0	teach-01	2-3
# ::node	0.0.0.0.1.1.1.1	escape-01	6-7
# ::node	0.0.0.0.1.1.1.1.0	injure-01	8-9
# ::node	0.0.0.0.1.1.1.1.0.0	11	16-17
# ::node	0.0.0.0.1.1.1.1.0.1	accident	12-13
# ::node	0.0.0.0.1.1.1.1.0.1.0	road	11-12
# ::node	0.0.0.0.1.1.1.1.0.2	serious	7-8
# ::node	0.0.0.0.1.1.1.1.1	date-entity	15-16
# ::node	0.0.0.0.1.1.1.1.1.0	7	15-16
# ::node	0.0.0.0.1.1.1.2	craft-01	1-2
# ::node	0.0.0.0.1.1.1.2.0	school	5-6
# ::node	0.0.1	car	37-38
# ::node	0.0.2	yesterday	13-14
# ::node	0.1	van	40-41
# ::node	0.2	car	43-44
# ::node	0.3	car	47-48
# ::root	0	and
# ::edge	accident	location	road	0.0.0.0.1.1.1.1.0.1	0.0.0.0.1.1.1.1.0.1.0	
# ::edge	and	op1	accident	0.0.0.0.1.1.0.1	0.0.0.0.1.1.0	
# ::edge	and	op1	suffer-01	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	and	op1	van	0	0.1	
# ::edge	and	op2	car	0	0.2	
# ::edge	and	op2	shock-01	0.0.0.0.1	0.0.0.0	
# ::edge	and	op3	car	0	0.3	
# ::edge	and	op3	damage-01	0.0.0.0.1	0.0.0.0.1.1	
# ::edge	craft-01	ARG0	person	0.0.0.0.1.1.1.2	0.0.0.0.1.1.1	
# ::edge	craft-01	ARG1	school	0.0.0.0.1.1.1.2	0.0.0.0.1.1.1.2.0	
# ::edge	damage-01	ARG0	accident	0.0.0.0.1.1	0.0.0.0.1.1.0	
# ::edge	damage-01	ARG1	person	0.0.0.0.1.1	0.0.0.0.1.1.1	
# ::edge	date-entity	month	7	0.0.0.0.1.1.1.1.1	0.0.0.0.1.1.1.1.1.0	
# ::edge	escape-01	ARG0	person	0.0.0.0.1.1.1.1	0.0.0.0.1.1.1	
# ::edge	escape-01	ARG1	injure-01	0.0.0.0.1.1.1.1	0.0.0.0.1.1.1.1.0	
# ::edge	escape-01	time	date-entity	0.0.0.0.1.1.1.1	0.0.0.0.1.1.1.1.1	
# ::edge	happen-01	ARG0	accident	0.0.0.0.1.1.0.0	0.0.0.0.1.1.0	
# ::edge	happen-01	ARG1	another	0.0.0.0.1.1.0.0	0.0.0.0.1.1.0.0.0	
# ::edge	happen-01	time	between	0.0.0.0.1.1.0.0	0.0.0.0.1.1.0.0.1	
# ::edge	injure-01	ARG0	11	0.0.0.0.1.1.1.1.0	0.0.0.0.1.1.1.1.0.0	
# ::edge	injure-01	ARG1	accident	0.0.0.0.1.1.1.1.0	0.0.0.0.1.1.1.1.0.1	
# ::edge	injure-01	mod	serious	0.0.0.0.1.1.1.1.0	0.0.0.0.1.1.1.1.0.2	
# ::edge	involve-01	ARG0	accident	0.0	0.0.0	
# ::edge	involve-01	ARG1	car	0.0	0.0.1	
# ::edge	involve-01	ARG2	and	0.0	0	
# ::edge	shock-01	ARG0	62	0.0.0.0	0.0.0.0.0	
# ::edge	shock-01	ARG1	accident	0.0.0.0	0.0.0	
# ::edge	suffer-01	ARG1	road	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	teach-01	ARG0	person	0.0.0.0.1.1.1.0	0.0.0.0.1.1.1	
# ::edge	yesterday	op1	involve-01	0.0.2	0.0	
(a4 / and 
      :ARG2-of (i / involve-01 
            :ARG0 (a5 / accident 
                  :ARG1-of (s / shock-01 
                        :ARG0 62 
                        :op-of (a6 / and 
                              :op1 (s2 / suffer-01 
                                    :ARG1 (r / road)) 
                              :op2 (d / damage-01 
                                    :ARG0 (a2 / accident 
                                          :ARG0-of (h / happen-01 
                                                :ARG1 (a3 / another) 
                                                :time (b / between)) 
                                          :op-of (a / and)) 
                                    :ARG1 (p / person 
                                          :ARG0-of (t / teach-01) 
                                          :ARG0-of (e / escape-01 
                                                :ARG1 (i2 / injure-01 
                                                      :ARG0 11 
                                                      :ARG1 (a7 / accident 
                                                            :location (r2 / road)) 
                                                      :mod (s3 / serious)) 
                                                :time (d2 / date-entity 
                                                      :month 7)) 
                                          :ARG0-of (c4 / craft-01 
                                                :ARG1 (s4 / school))))))) 
            :ARG1 (c3 / car) 
            :op-of (y / yesterday)) 
      :op1 (v / van) 
      :op2 (c2 / car) 
      :op3 (c / car))

# ::snt no roads were blocked and there were no accidents
# ::tok no roads were blocked and there were no accidents
# ::alignments 8-9|0.1 7-8|0.1.0 4-5|0 3-4|0.0 1-2|0.0.0 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:08.487
# ::node	0	and	4-5
# ::node	0.0	block-01	3-4
# ::node	0.0.0	road	1-2
# ::node	0.0.1	-	0-1
# ::node	0.1	accident	8-9
# ::node	0.1.0	-	7-8
# ::root	0	and
# ::edge	accident	polarity	-	0.1	0.1.0	
# ::edge	and	op1	block-01	0	0.0	
# ::edge	and	op2	accident	0	0.1	
# ::edge	block-01	ARG1	road	0.0	0.0.0	
# ::edge	block-01	polarity	-	0.0	0.0.1	
(a2 / and 
      :op1 (b / block-01 
            :ARG1 (r / road) 
            :polarity (-2 / -)) 
      :op2 (a / accident 
            :polarity (- / -)))

# ::snt he hoped others would follow pearl insurance in withdrawing cover from drivers involved in accidents when their bloodalcohol level was above the statutory limit, last year more than 5000 people were killed and more than 300000 injured in accidents on britains roads, nearly 1000 of the deaths were in accidents where the driver or rider had drunk over the legal limit
# ::tok he hoped others would follow pearl insurance in withdrawing cover from drivers involved in accidents when their bloodalcohol level was above the statutory limit , last year more than 5000 people were killed and more than 300000 injured in accidents on britains roads , nearly 1000 of the deaths were in accidents where the driver or rider had drunk over the legal limit
# ::alignments 62-63|0.0.0.0.2.0.0 61-62|0.0.0.0.2.0.0.1 58-59|0.0.0.0.2.0 55-56|0.0.0.0.2 54-55|0.0.0.0.0+0.0.0.0 51-52|0.0.0.0.2.0.0.0 45-46|0.2.1.0.0+0.2.1.0 44-45|0.2.1 42-43|0.0.0.0.1.1.0 39-40|0.0.0.0.1.1 37-38|0.0.0.0.1 36-37|0.0.0.0.1.0 33-34|0.0.0.1 32-33|0.0.0 29-30|0.1.2.1 26-27|0.2.2 25-26|0.2.2.0 23-24|0.2 20-21|0.2.3 18-19|0.2.0 14-15|0.1.2.0.1.0 12-13|0.1.2.0.1 11-12|0.1.2.0.0+0.1.2.0 8-9|0.1.2 6-7|0.1.1 5-6|0.1.1.0 4-5|0.1 2-3|0.1.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:11.304
# ::node	0	hope-01	1-2
# ::node	0.0	he	0-1
# ::node	0.0.0	kill-01	32-33
# ::node	0.0.0.0	person	54-55
# ::node	0.0.0.0.0	drive-01	54-55
# ::node	0.0.0.0.1	injure-01	37-38
# ::node	0.0.0.0.1.0	300000	36-37
# ::node	0.0.0.0.1.1	accident	39-40
# ::node	0.0.0.0.1.1.0	road	42-43
# ::node	0.0.0.0.2	or	55-56
# ::node	0.0.0.0.2.0	drunk	58-59
# ::node	0.0.0.0.2.0.0	limit-01	62-63
# ::node	0.0.0.0.2.0.0.0	accident	51-52
# ::node	0.0.0.0.2.0.0.1	legal	61-62
# ::node	0.0.0.1	and	33-34
# ::node	0.1	follow-02	4-5
# ::node	0.1.0	other	2-3
# ::node	0.1.1	insure-02	6-7
# ::node	0.1.1.0	pearl	5-6
# ::node	0.1.2	withdraw-01	8-9
# ::node	0.1.2.0	person	11-12
# ::node	0.1.2.0.0	drive-01	11-12
# ::node	0.1.2.0.1	involve-01	12-13
# ::node	0.1.2.0.1.0	accident	14-15
# ::node	0.1.2.1	5000	29-30
# ::node	0.2	limit-01	23-24
# ::node	0.2.0	level	18-19
# ::node	0.2.1	nearly	44-45
# ::node	0.2.1.0	date-entity	45-46
# ::node	0.2.1.0.0	1000	45-46
# ::node	0.2.2	year	26-27
# ::node	0.2.2.0	last	25-26
# ::node	0.2.3	above	20-21
# ::root	0	hope-01
# ::edge	above	op1	limit-01	0.2.3	0.2	
# ::edge	and	op1	kill-01	0.0.0.1	0.0.0	
# ::edge	date-entity	year	1000	0.2.1.0	0.2.1.0.0	
# ::edge	drive-01	ARG0	person	0.0.0.0.0	0.0.0.0	
# ::edge	drive-01	ARG0	person	0.1.2.0.0	0.1.2.0	
# ::edge	drunk	location	or	0.0.0.0.2.0	0.0.0.0.2	
# ::edge	follow-02	ARG0	other	0.1	0.1.0	
# ::edge	follow-02	ARG1	insure-02	0.1	0.1.1	
# ::edge	follow-02	ARG2	withdraw-01	0.1	0.1.2	
# ::edge	hope-01	ARG0	he	0	0.0	
# ::edge	hope-01	ARG1	follow-02	0	0.1	
# ::edge	hope-01	ARG2	limit-01	0	0.2	
# ::edge	injure-01	ARG0	300000	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	injure-01	ARG1	person	0.0.0.0.1	0.0.0.0	
# ::edge	injure-01	ARG2	accident	0.0.0.0.1	0.0.0.0.1.1	
# ::edge	insure-02	ARG1	pearl	0.1.1	0.1.1.0	
# ::edge	involve-01	ARG1	person	0.1.2.0.1	0.1.2.0	
# ::edge	involve-01	ARG2	accident	0.1.2.0.1	0.1.2.0.1.0	
# ::edge	kill-01	ARG0	he	0.0.0	0.0	
# ::edge	kill-01	ARG1	person	0.0.0	0.0.0.0	
# ::edge	limit-01	ARG0	accident	0.0.0.0.2.0.0	0.0.0.0.2.0.0.0	
# ::edge	limit-01	ARG0	level	0.2	0.2.0	
# ::edge	limit-01	ARG1	drunk	0.0.0.0.2.0.0	0.0.0.0.2.0	
# ::edge	limit-01	ARG1	nearly	0.2	0.2.1	
# ::edge	limit-01	ARG2	year	0.2	0.2.2	
# ::edge	limit-01	mod	legal	0.0.0.0.2.0.0	0.0.0.0.2.0.0.1	
# ::edge	nearly	op1	date-entity	0.2.1	0.2.1.0	
# ::edge	or	op1	person	0.0.0.0.2	0.0.0.0	
# ::edge	road	part	accident	0.0.0.0.1.1.0	0.0.0.0.1.1	
# ::edge	withdraw-01	ARG0	person	0.1.2	0.1.2.0	
# ::edge	withdraw-01	ARG1	5000	0.1.2	0.1.2.1	
# ::edge	year	mod	last	0.2.2	0.2.2.0	
(h / hope-01 
      :ARG0 (h2 / he 
            :ARG0-of (k / kill-01 
                  :ARG1 (p / person 
                        :ARG0-of (d2 / drive-01) 
                        :ARG1-of (i / injure-01 
                              :ARG0 300000 
                              :ARG2 (a2 / accident 
                                    :part-of (r / road))) 
                        :op-of (o / or 
                              :location-of (d / drunk 
                                    :ARG1-of (l / limit-01 
                                          :ARG0 (a / accident) 
                                          :mod (l2 / legal))))) 
                  :op-of (a3 / and))) 
      :ARG1 (f / follow-02 
            :ARG0 (o2 / other) 
            :ARG1 (i3 / insure-02 
                  :ARG1 (p3 / pearl)) 
            :ARG2 (w / withdraw-01 
                  :ARG0 (p2 / person 
                        :ARG0-of (d4 / drive-01) 
                        :ARG1-of (i2 / involve-01 
                              :ARG2 (a5 / accident))) 
                  :ARG1 5000)) 
      :ARG2 (l4 / limit-01 
            :ARG0 (l5 / level) 
            :ARG1 (n / nearly 
                  :op1 (d3 / date-entity 
                        :year 1000)) 
            :ARG2 (y / year 
                  :mod (l3 / last)) 
            :op-of (a4 / above)))

# ::snt if you have spent a twelve hour day coping with the daily realities of road accidents the elderly incontinent housing the homeless dash
# ::tok if you have spent a twelve hour day coping with the daily realities of road accidents the elderly incontinent housing the homeless dash
# ::alignments 19-20|0.1.0 17-18|0.1.1.0 15-16|0.1.1.1.0 14-15|0.1.1.1.0.0 12-13|0.1.1.1 8-9|0.1.1 7-8|0.1 6-7|0.1.2.0+0.1.2 3-4|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:11.443
# ::node	0	spend-01	3-4
# ::node	0.0	you	1-2
# ::node	0.1	day	7-8
# ::node	0.1.0	house-01	19-20
# ::node	0.1.1	cope-01	8-9
# ::node	0.1.1.0	elderly	17-18
# ::node	0.1.1.1	reality	12-13
# ::node	0.1.1.1.0	accident	15-16
# ::node	0.1.1.1.0.0	road	14-15
# ::node	0.1.2	temporal-quantity	6-7
# ::node	0.1.2.0	hour	6-7
# ::root	0	spend-01
# ::edge	accident	location	road	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	cope-01	ARG0	elderly	0.1.1	0.1.1.0	
# ::edge	cope-01	ARG1	day	0.1.1	0.1	
# ::edge	cope-01	location	reality	0.1.1	0.1.1.1	
# ::edge	house-01	ARG1	day	0.1.0	0.1	
# ::edge	reality	poss	accident	0.1.1.1	0.1.1.1.0	
# ::edge	spend-01	ARG0	you	0	0.0	
# ::edge	spend-01	ARG1	day	0	0.1	
# ::edge	temporal-quantity	time	day	0.1.2	0.1	
# ::edge	temporal-quantity	unit	hour	0.1.2	0.1.2.0	
(s / spend-01 
      :ARG0 (y / you) 
      :ARG1 (d / day 
            :ARG1-of (h / house-01) 
            :ARG1-of (c / cope-01 
                  :ARG0 (e / elderly) 
                  :location (r2 / reality 
                        :poss (a / accident 
                              :location (r / road)))) 
            :time-of (t / temporal-quantity 
                  :unit (h2 / hour))))

# ::snt she broke her shoulder as a human cannonball on noel edmonds illfated late late breakfast show and she had no sooner recovered from that when a car accident delayed the venture for another two years
# ::tok she broke her shoulder as a human cannonball on noel edmonds illfated late late breakfast show and she had no sooner recovered from that when a car accident delayed the venture for another two years
# ::alignments 34-35|0.4+0.4.0 33-34|0.4.0.3 32-33|0.4.0.0 30-31|0.1 28-29|0 27-28|0.0 26-27|0.0.0 21-22|0.2 20-21|0.2.3 19-20|0.2.1 17-18|0.2.0 16-17|0.2.2 15-16|0.2.2.0 13-14|0.4.0.1 12-13|0.4.0.2 6-7|0.3 3-4|0.2.2.0.0.0 0-1|0.2.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:11.732
# ::node	0	delay-01	28-29
# ::node	0.0	accident	27-28
# ::node	0.0.0	car	26-27
# ::node	0.1	venture	30-31
# ::node	0.2	recover-02	21-22
# ::node	0.2.0	she	17-18
# ::node	0.2.1	-	19-20
# ::node	0.2.2	and	16-17
# ::node	0.2.2.0	show-01	15-16
# ::node	0.2.2.0.0	she	0-1
# ::node	0.2.2.0.0.0	shoulder	3-4
# ::node	0.2.3	soon	20-21
# ::node	0.3	human	6-7
# ::node	0.4	year	34-35
# ::node	0.4.0	temporal-quantity	34-35
# ::node	0.4.0.0	another	32-33
# ::node	0.4.0.1	late	13-14
# ::node	0.4.0.2	late	12-13
# ::node	0.4.0.3	2	33-34
# ::root	0	delay-01
# ::edge	accident	location	car	0.0	0.0.0	
# ::edge	and	op1	show-01	0.2.2	0.2.2.0	
# ::edge	and	op2	recover-02	0.2.2	0.2	
# ::edge	delay-01	ARG0	accident	0	0.0	
# ::edge	delay-01	ARG1	venture	0	0.1	
# ::edge	delay-01	time	year	0	0.4	
# ::edge	human	op1	delay-01	0.3	0	
# ::edge	late	op1	temporal-quantity	0.4.0.1	0.4.0	
# ::edge	late	op1	temporal-quantity	0.4.0.2	0.4.0	
# ::edge	recover-02	ARG0	she	0.2	0.2.0	
# ::edge	recover-02	ARG1	-	0.2	0.2.1	
# ::edge	recover-02	ARG2	delay-01	0.2	0	
# ::edge	recover-02	time	soon	0.2	0.2.3	
# ::edge	shoulder	poss	she	0.2.2.0.0.0	0.2.2.0.0	
# ::edge	show-01	ARG0	she	0.2.2.0	0.2.2.0.0	
# ::edge	temporal-quantity	mod	another	0.4.0	0.4.0.0	
# ::edge	temporal-quantity	quant	2	0.4.0	0.4.0.3	
# ::edge	temporal-quantity	unit	year	0.4.0	0.4	
(d / delay-01 
      :ARG0 (a2 / accident 
            :location (c / car)) 
      :ARG1 (v / venture) 
      :ARG2-of (r / recover-02 
            :ARG0 (s2 / she) 
            :ARG1 (- / -) 
            :op-of (a3 / and 
                  :op1 (s3 / show-01 
                        :ARG0 (s5 / she 
                              :poss-of (s4 / shoulder)))) 
            :time (s / soon)) 
      :op-of (h / human) 
      :time (y / year 
            :unit-of (t / temporal-quantity 
                  :mod (a / another) 
                  :op-of (l / late) 
                  :op-of (l2 / late) 
                  :quant 2)))

# ::snt is it a major safety aspect do you think  oh its obvious that safetys involved i think that vocal soundum its also vocal soundum road use because vocal soundum if people take a long time vocal soundum going forwards and back trying to get into a space to park because they dont have the basic skills to enable them to do it then its frustrating for other motorists and obviously accidents can be caused
# ::tok is it a major safety aspect do you think oh its obvious that safetys involved i think that vocal soundum its also vocal soundum road use because vocal soundum if people take a long time vocal soundum going forwards and back trying to get into a space to park because they dont have the basic skills to enable them to do it then its frustrating for other motorists and obviously accidents can be caused
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:11.733
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt ann morley says all that must change if something good is to come out of lisas accident
# ::tok ann morley says all that must change if something good is to come out of lisas accident
# ::alignments 16-17|0.0 9-10|0.1.0 8-9|0.1 6-7|0.2 3-4|0.2.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:11.762
# ::node	0	say-01	2-3
# ::node	0.0	accident	16-17
# ::node	0.1	something	8-9
# ::node	0.1.0	good	9-10
# ::node	0.2	change-01	6-7
# ::node	0.2.0	all	3-4
# ::root	0	say-01
# ::edge	change-01	ARG0	all	0.2	0.2.0	
# ::edge	change-01	ARG2	say-01	0.2	0	
# ::edge	say-01	ARG0	accident	0	0.0	
# ::edge	say-01	ARG1	something	0	0.1	
# ::edge	something	mod	good	0.1	0.1.0	
(s2 / say-01 
      :ARG0 (a / accident) 
      :ARG1 (s / something 
            :mod (g / good)) 
      :ARG2-of (c / change-01 
            :ARG0 (a2 / all)))

# ::snt but are we becoming too worried  does the recent rash of serious accidents affecting people jammed together in small spaces mean that britain has become the glass jaw as well as allegedly the dirty man of europe
# ::tok but are we becoming too worried does the recent rash of serious accidents affecting people jammed together in small spaces mean that britain has become the glass jaw as well as allegedly the dirty man of europe
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:11.763
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt mr green said the extensive road works taking place at the junction at the time had played no part in the accident
# ::tok mr green said the extensive road works taking place at the junction at the time had played no part in the accident
# ::alignments 21-22|0.3 17-18|0.2.0 14-15|0.2 8-9|0.3.0 5-6|0.1 4-5|0.1.0 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:11.895
# ::node	0	say-01	2-3
# ::node	0.0	green	1-2
# ::node	0.1	road	5-6
# ::node	0.1.0	extensive	4-5
# ::node	0.2	time	14-15
# ::node	0.2.0	-	17-18
# ::node	0.3	accident	21-22
# ::node	0.3.0	place	8-9
# ::root	0	say-01
# ::edge	accident	mod	place	0.3	0.3.0	
# ::edge	road	mod	extensive	0.1	0.1.0	
# ::edge	say-01	ARG0	green	0	0.0	
# ::edge	say-01	ARG1	road	0	0.1	
# ::edge	say-01	location	accident	0	0.3	
# ::edge	say-01	location	time	0	0.2	
# ::edge	time	quant	-	0.2	0.2.0	
(s / say-01 
      :ARG0 (g / green) 
      :ARG1 (r / road 
            :mod (e / extensive)) 
      :location (t / time 
            :quant (- / -)) 
      :location (a / accident 
            :mod (p / place)))

# ::snt last year there were nearly eight and a half thousand road  accidents in oxfordshire
# ::tok last year there were nearly eight and a half thousand road accidents in oxfordshire
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:11.896
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt no conceivable accident to any form of renewable energy generating plant could ever result in an event such as happened at chernobyl
# ::tok no conceivable accident to any form of renewable energy generating plant could ever result in an event such as happened at chernobyl
# ::alignments 19-20|0.0.1.0.1.0 17-18|0.0.1.0.1.0.0 16-17|0.0.1.0.1 13-14|0.0.1.0 12-13|0.0.1.0.3 11-12|0.0.1.0.2 10-11|0.0 9-10|0 8-9|0.1 7-8|0.0.0 5-6|0.0.1 4-5|0.0.1.1 2-3|0.0.1.0.0 1-2|0.0.1.0.0.0 0-1|0.0.1.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:11.973
# ::node	0	generate-01	9-10
# ::node	0.0	plant	10-11
# ::node	0.0.0	renew-01	7-8
# ::node	0.0.1	form	5-6
# ::node	0.0.1.0	result-01	13-14
# ::node	0.0.1.0.0	accident	2-3
# ::node	0.0.1.0.0.0	conceive-01	1-2
# ::node	0.0.1.0.1	event	16-17
# ::node	0.0.1.0.1.0	happen-01	19-20
# ::node	0.0.1.0.1.0.0	such	17-18
# ::node	0.0.1.0.2	possible	11-12
# ::node	0.0.1.0.2.0	-	0-1
# ::node	0.0.1.0.3	ever	12-13
# ::node	0.0.1.1	any	4-5
# ::node	0.1	energy	8-9
# ::root	0	generate-01
# ::edge	conceive-01	ARG1	accident	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	event	example	happen-01	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	form	mod	any	0.0.1	0.0.1.1	
# ::edge	form	poss	plant	0.0.1	0.0	
# ::edge	generate-01	ARG0	plant	0	0.0	
# ::edge	generate-01	ARG1	energy	0	0.1	
# ::edge	happen-01	ARG1	such	0.0.1.0.1.0	0.0.1.0.1.0.0	
# ::edge	possible	domain	result-01	0.0.1.0.2	0.0.1.0	
# ::edge	possible	polarity	-	0.0.1.0.2	0.0.1.0.2.0	
# ::edge	renew-01	ARG1	plant	0.0.0	0.0	
# ::edge	result-01	ARG0	form	0.0.1.0	0.0.1	
# ::edge	result-01	ARG1	accident	0.0.1.0	0.0.1.0.0	
# ::edge	result-01	ARG2	event	0.0.1.0	0.0.1.0.1	
# ::edge	result-01	time	ever	0.0.1.0	0.0.1.0.3	
(g / generate-01 
      :ARG0 (p2 / plant 
            :ARG1-of (r2 / renew-01) 
            :poss-of (f / form 
                  :ARG0-of (r / result-01 
                        :ARG1 (a2 / accident 
                              :ARG1-of (c / conceive-01)) 
                        :ARG2 (e / event 
                              :example (h / happen-01 
                                    :ARG1 (s / such))) 
                        :domain-of (p / possible 
                              :polarity (- / -)) 
                        :time (e2 / ever)) 
                  :mod (a / any))) 
      :ARG1 (e3 / energy))

# ::snt she also received a cash lump sum from her personal accident policy
# ::tok she also received a cash lump sum from her personal accident policy
# ::alignments 11-12|0.3 10-11|0.2 9-10|0.2.0 6-7|0.1 5-6|0.1.0 4-5|0.1.0.0 2-3|0 1-2|0.4 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:12.099
# ::node	0	receive-01	2-3
# ::node	0.0	she	0-1
# ::node	0.1	sum	6-7
# ::node	0.1.0	lump-01	5-6
# ::node	0.1.0.0	cash	4-5
# ::node	0.2	accident	10-11
# ::node	0.2.0	personal	9-10
# ::node	0.3	policy	11-12
# ::node	0.4	also	1-2
# ::root	0	receive-01
# ::edge	accident	mod	personal	0.2	0.2.0	
# ::edge	lump-01	ARG1	sum	0.1.0	0.1	
# ::edge	lump-01	mod	cash	0.1.0	0.1.0.0	
# ::edge	receive-01	ARG0	she	0	0.0	
# ::edge	receive-01	ARG1	sum	0	0.1	
# ::edge	receive-01	ARG2	accident	0	0.2	
# ::edge	receive-01	medium	policy	0	0.3	
# ::edge	receive-01	mod	also	0	0.4	
(r / receive-01 
      :ARG0 (s2 / she) 
      :ARG1 (s / sum 
            :ARG1-of (l / lump-01 
                  :mod (c / cash))) 
      :ARG2 (a / accident 
            :mod (p2 / personal)) 
      :medium (p / policy) 
      :mod (a2 / also))

# ::snt recording a verdict that mr cole died as the result of an accident the oxfordshire coroner mr nicholas gardiner said mr cole was working hard and under stress at work
# ::tok recording a verdict that mr cole died as the result of an accident the oxfordshire coroner mr nicholas gardiner said mr cole was working hard and under stress at work
# ::alignments 27-28|0.1.1.1 25-26|0.1.1 24-25|0.1.0 23-24|0.1 19-20|0 15-16|0.0 12-13|0.1.1.0.1.0 9-10|0.1.1.0.1 6-7|0.1.1.0 2-3|0.1.1.0.0 0-1|0.1.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:12.279
# ::node	0	say-01	19-20
# ::node	0.0	coroner	15-16
# ::node	0.1	work-01	23-24
# ::node	0.1.0	hard	24-25
# ::node	0.1.1	and	25-26
# ::node	0.1.1.0	die-01	6-7
# ::node	0.1.1.0.0	verdict	2-3
# ::node	0.1.1.0.0.0	record-01	0-1
# ::node	0.1.1.0.1	result-01	9-10
# ::node	0.1.1.0.1.0	accident	12-13
# ::node	0.1.1.1	stress-01	27-28
# ::root	0	say-01
# ::edge	and	op1	die-01	0.1.1	0.1.1.0	
# ::edge	and	op2	work-01	0.1.1	0.1	
# ::edge	and	op3	stress-01	0.1.1	0.1.1.1	
# ::edge	die-01	ARG1	verdict	0.1.1.0	0.1.1.0.0	
# ::edge	record-01	ARG1	verdict	0.1.1.0.0.0	0.1.1.0.0	
# ::edge	result-01	ARG1	accident	0.1.1.0.1	0.1.1.0.1.0	
# ::edge	result-01	ARG2	die-01	0.1.1.0.1	0.1.1.0	
# ::edge	say-01	ARG0	coroner	0	0.0	
# ::edge	say-01	ARG1	work-01	0	0.1	
# ::edge	work-01	mod	hard	0.1	0.1.0	
(s2 / say-01 
      :ARG0 (c / coroner) 
      :ARG1 (w / work-01 
            :mod (h / hard) 
            :op-of (a / and 
                  :op1 (d / die-01 
                        :ARG1 (v / verdict 
                              :ARG1-of (r2 / record-01)) 
                        :ARG2-of (r / result-01 
                              :ARG1 (a2 / accident))) 
                  :op2 (s / stress-01))))

# ::snt martha had an accident dont be angry shes terribly upset ellip
# ::tok martha had an accident dont be angry shes terribly upset ellip
# ::alignments 9-10|0 8-9|0.2 7-8|0.1.0 6-7|0.1 3-4|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:12.307
# ::node	0	upset-01	9-10
# ::node	0.0	accident	3-4
# ::node	0.1	angry	6-7
# ::node	0.1.0	she	7-8
# ::node	0.2	terrible	8-9
# ::root	0	upset-01
# ::edge	she	op1	angry	0.1.0	0.1	
# ::edge	upset-01	ARG0	accident	0	0.0	
# ::edge	upset-01	ARG1	angry	0	0.1	
# ::edge	upset-01	degree	terrible	0	0.2	
(u / upset-01 
      :ARG0 (a2 / accident) 
      :ARG1 (a / angry 
            :op-of (s / she)) 
      :degree (t / terrible))

# ::snt malicious acts accounted for more than 300 train accidents last year dash
# ::tok malicious acts accounted for more than 300 train accidents last year dash
# ::alignments 10-11|0.2 9-10|0.2.0 8-9|0.1 7-8|0.1.0 6-7|0.1.0.0 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:12.346
# ::node	0	account-01	2-3
# ::node	0.0	malicious	0-1
# ::node	0.1	accident	8-9
# ::node	0.1.0	train	7-8
# ::node	0.1.0.0	300	6-7
# ::node	0.2	year	10-11
# ::node	0.2.0	last	9-10
# ::root	0	account-01
# ::edge	accident	mod	train	0.1	0.1.0	
# ::edge	account-01	ARG0	malicious	0	0.0	
# ::edge	account-01	ARG1	accident	0	0.1	
# ::edge	account-01	time	year	0	0.2	
# ::edge	train	quant	300	0.1.0	0.1.0.0	
# ::edge	year	mod	last	0.2	0.2.0	
(a2 / account-01 
      :ARG0 (m / malicious) 
      :ARG1 (a / accident 
            :mod (t / train 
                  :quant 300)) 
      :time (y / year 
            :mod (l / last)))

# ::snt 30pm on tuesday 16 august wish to hear from any witnesses to the accident
# ::tok 30pm on tuesday 16 august wish to hear from any witnesses to the accident
# ::alignments 13-14|0.0.1.0.0 10-11|0.0.1.0+0.0.1 9-10|0.0.1.1 7-8|0.0 5-6|0 4-5|0.0.0.0+0.0.0 3-4|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:12.374
# ::node	0	wish-01	5-6
# ::node	0.0	hear-01	7-8
# ::node	0.0.0	date-entity	4-5
# ::node	0.0.0.0	8	4-5
# ::node	0.0.0.1	16	3-4
# ::node	0.0.1	person	10-11
# ::node	0.0.1.0	witness-01	10-11
# ::node	0.0.1.0.0	accident	13-14
# ::node	0.0.1.1	any	9-10
# ::root	0	wish-01
# ::edge	date-entity	month	8	0.0.0	0.0.0.0	
# ::edge	date-entity	quant	16	0.0.0	0.0.0.1	
# ::edge	hear-01	ARG0	date-entity	0.0	0.0.0	
# ::edge	hear-01	ARG1	person	0.0	0.0.1	
# ::edge	person	mod	any	0.0.1	0.0.1.1	
# ::edge	wish-01	ARG1	hear-01	0	0.0	
# ::edge	witness-01	ARG0	person	0.0.1.0	0.0.1	
# ::edge	witness-01	ARG1	accident	0.0.1.0	0.0.1.0.0	
(w2 / wish-01 
      :ARG1 (h / hear-01 
            :ARG0 (d / date-entity 
                  :month 8 
                  :quant 16) 
            :ARG1 (p / person 
                  :ARG0-of (w / witness-01 
                        :ARG1 (a / accident)) 
                  :mod (a2 / any))))

# ::snt or a single accident like an aeroplane collision explosion or escape of poison gas may bring injury or death to thousands and dislocation to a whole region, the first is sometimes called a mass products case the second a mass accident, both entail injury to multiple victims and present adjudicatory problems very different in magnitude and therefore in kind from those faced in routine accidents
# ::tok or a single accident like an aeroplane collision explosion or escape of poison gas may bring injury or death to thousands and dislocation to a whole region , the first is sometimes called a mass products case the second a mass accident , both entail injury to multiple victims and present adjudicatory problems very different in magnitude and therefore in kind from those faced in routine accidents
# ::alignments 66-67|0.0.0.0.0.0 65-66|0.0.0.0.0.0.0 63-64|0.0.0.0.0 60-61|0.0.0.0.0.1 57-58|0 56-57|0.0.1 54-55|0.0 53-54|0.0.2 52-53|0.0.0 50-51|0.0.0.1 49-50|0.0.0.0 48-49|0.0.0.0.1.1 47-48|0.0.0.0.1.1.0 45-46|0.0.0.0.1 43-44|0.0.0.0.1.2 41-42|0.0.0.0.1.0.2.1.0 40-41|0.0.0.0.1.0.2.1.0.0 36-37|0.0.0.0.1.0.0.1 35-36|0.0.0.0.1.0.0 34-35|0.0.0.0.1.0.0.0 31-32|0.0.0.0.1.0.2.0.2.2.0 26-27|0.0.0.0.1.0.1 25-26|0.0.0.0.1.0.1.0 21-22|0.0.0.0.1.0.2.0.0 18-19|0.0.0.0.1.0.2.1 17-18|0.0.0.0.1.0.2 16-17|0.0.0.0.1.0 15-16|0.0.0.0.1.0.2.0 14-15|0.0.0.0.1.0.2.0.1.0+0.0.0.0.1.0.2.0.1 13-14|0.0.0.0.1.0.2.0.2.2.1 10-11|0.0.0.0.1.0.2.0.2.2 9-10|0.0.0.0.1.0.2.0.2 8-9|0.0.0.0.1.0.2.0.2.1 7-8|0.0.0.0.1.0.2.0.2.1.0 3-4|0.0.0.0.1.0.2.0.2.0 2-3|0.0.0.0.1.0.2.0.2.0.0 0-1|0.0.0.0.1.0.2.0.2.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:13.894
# ::node	0	and	57-58
# ::node	0.0	differ-02	54-55
# ::node	0.0.0	problem	52-53
# ::node	0.0.0.0	and	49-50
# ::node	0.0.0.0.0	face-01	63-64
# ::node	0.0.0.0.0.0	accident	66-67
# ::node	0.0.0.0.0.0.0	routine	65-66
# ::node	0.0.0.0.0.1	kind	60-61
# ::node	0.0.0.0.1	injure-01	45-46
# ::node	0.0.0.0.1.0	injure-01	16-17
# ::node	0.0.0.0.1.0.0	product	35-36
# ::node	0.0.0.0.1.0.0.0	mass	34-35
# ::node	0.0.0.0.1.0.0.1	case	36-37
# ::node	0.0.0.0.1.0.1	region	26-27
# ::node	0.0.0.0.1.0.1.0	whole	25-26
# ::node	0.0.0.0.1.0.2	or	17-18
# ::node	0.0.0.0.1.0.2.0	bring-01	15-16
# ::node	0.0.0.0.1.0.2.0.0	and	21-22
# ::node	0.0.0.0.1.0.2.0.1	date-entity	14-15
# ::node	0.0.0.0.1.0.2.0.1.0	5	14-15
# ::node	0.0.0.0.1.0.2.0.2	or	9-10
# ::node	0.0.0.0.1.0.2.0.2.0	accident	3-4
# ::node	0.0.0.0.1.0.2.0.2.0.0	single	2-3
# ::node	0.0.0.0.1.0.2.0.2.0.1	or	0-1
# ::node	0.0.0.0.1.0.2.0.2.1	explode-01	8-9
# ::node	0.0.0.0.1.0.2.0.2.1.0	collide-01	7-8
# ::node	0.0.0.0.1.0.2.0.2.2	escape-01	10-11
# ::node	0.0.0.0.1.0.2.0.2.2.0	sometimes	31-32
# ::node	0.0.0.0.1.0.2.0.2.2.1	gas	13-14
# ::node	0.0.0.0.1.0.2.1	die-01	18-19
# ::node	0.0.0.0.1.0.2.1.0	accident	41-42
# ::node	0.0.0.0.1.0.2.1.0.0	mass	40-41
# ::node	0.0.0.0.1.1	victim	48-49
# ::node	0.0.0.0.1.1.0	multiple	47-48
# ::node	0.0.0.0.1.2	both	43-44
# ::node	0.0.0.1	present	50-51
# ::node	0.0.1	magnitude	56-57
# ::node	0.0.2	very	53-54
# ::root	0	and
# ::edge	accident	degree	mass	0.0.0.0.1.0.2.1.0	0.0.0.0.1.0.2.1.0.0	
# ::edge	accident	mod	routine	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	accident	mod	single	0.0.0.0.1.0.2.0.2.0	0.0.0.0.1.0.2.0.2.0.0	
# ::edge	and	op1	differ-02	0	0.0	
# ::edge	and	op1	problem	0.0.0.0	0.0.0	
# ::edge	bring-01	ARG1	or	0.0.0.0.1.0.2.0	0.0.0.0.1.0.2	
# ::edge	bring-01	ARG2	and	0.0.0.0.1.0.2.0	0.0.0.0.1.0.2.0.0	
# ::edge	bring-01	mod	date-entity	0.0.0.0.1.0.2.0	0.0.0.0.1.0.2.0.1	
# ::edge	case	mod	product	0.0.0.0.1.0.0.1	0.0.0.0.1.0.0	
# ::edge	date-entity	month	5	0.0.0.0.1.0.2.0.1	0.0.0.0.1.0.2.0.1.0	
# ::edge	die-01	ARG1	accident	0.0.0.0.1.0.2.1	0.0.0.0.1.0.2.1.0	
# ::edge	differ-02	ARG0	problem	0.0	0.0.0	
# ::edge	differ-02	ARG1	magnitude	0.0	0.0.1	
# ::edge	differ-02	degree	very	0.0	0.0.2	
# ::edge	escape-01	ARG0	sometimes	0.0.0.0.1.0.2.0.2.2	0.0.0.0.1.0.2.0.2.2.0	
# ::edge	escape-01	ARG1	gas	0.0.0.0.1.0.2.0.2.2	0.0.0.0.1.0.2.0.2.2.1	
# ::edge	explode-01	ARG1	collide-01	0.0.0.0.1.0.2.0.2.1	0.0.0.0.1.0.2.0.2.1.0	
# ::edge	face-01	ARG0	and	0.0.0.0.0	0.0.0.0	
# ::edge	face-01	ARG1	accident	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	injure-01	ARG0	product	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	injure-01	ARG1	and	0.0.0.0.1	0.0.0.0	
# ::edge	injure-01	ARG1	injure-01	0.0.0.0.1.0	0.0.0.0.1	
# ::edge	injure-01	ARG2	region	0.0.0.0.1.0	0.0.0.0.1.0.1	
# ::edge	injure-01	ARG2	victim	0.0.0.0.1	0.0.0.0.1.1	
# ::edge	injure-01	mod	both	0.0.0.0.1	0.0.0.0.1.2	
# ::edge	kind	domain	face-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	or	op1	accident	0.0.0.0.1.0.2.0.2	0.0.0.0.1.0.2.0.2.0	
# ::edge	or	op1	accident	0.0.0.0.1.0.2.0.2.0.1	0.0.0.0.1.0.2.0.2.0	
# ::edge	or	op1	injure-01	0.0.0.0.1.0.2	0.0.0.0.1.0	
# ::edge	or	op2	die-01	0.0.0.0.1.0.2	0.0.0.0.1.0.2.1	
# ::edge	or	op2	explode-01	0.0.0.0.1.0.2.0.2	0.0.0.0.1.0.2.0.2.1	
# ::edge	or	op3	escape-01	0.0.0.0.1.0.2.0.2	0.0.0.0.1.0.2.0.2.2	
# ::edge	or	op4	bring-01	0.0.0.0.1.0.2.0.2	0.0.0.0.1.0.2.0	
# ::edge	problem	time	present	0.0.0	0.0.0.1	
# ::edge	product	degree	mass	0.0.0.0.1.0.0	0.0.0.0.1.0.0.0	
# ::edge	region	mod	whole	0.0.0.0.1.0.1	0.0.0.0.1.0.1.0	
# ::edge	victim	quant	multiple	0.0.0.0.1.1	0.0.0.0.1.1.0	
(a2 / and 
      :op1 (d / differ-02 
            :ARG0 (p / problem 
                  :op-of (a3 / and 
                        :ARG0-of (f / face-01 
                              :ARG1 (a / accident 
                                    :mod (r / routine)) 
                              :domain-of (k / kind)) 
                        :ARG1-of (i / injure-01 
                              :ARG1-of (i2 / injure-01 
                                    :ARG0 (p3 / product 
                                          :degree (m4 / mass) 
                                          :mod-of (c / case)) 
                                    :ARG2 (r2 / region 
                                          :mod (w / whole)) 
                                    :op-of (o / or 
                                          :ARG1-of (b2 / bring-01 
                                                :ARG2 (a5 / and) 
                                                :mod (d3 / date-entity 
                                                      :month 5) 
                                                :op-of (o2 / or 
                                                      :op1 (a6 / accident 
                                                            :mod (s2 / single) 
                                                            :op-of (o3 / or)) 
                                                      :op2 (e2 / explode-01 
                                                            :ARG1 (c2 / collide-01)) 
                                                      :op3 (e / escape-01 
                                                            :ARG0 (s / sometimes) 
                                                            :ARG1 (g / gas)))) 
                                          :op1 (d2 / die-01 
                                                :ARG1 (a4 / accident 
                                                      :degree (m3 / mass))))) 
                              :ARG2 (v2 / victim 
                                    :quant (m2 / multiple)) 
                              :mod (b / both))) 
                  :time (p2 / present)) 
            :ARG1 (m / magnitude) 
            :degree (v / very)))

# ::snt the mini race was hard fought with riddiford locked in a fourcar dice for much of the event which was restarted after an earlier accident
# ::tok the mini race was hard fought with riddiford locked in a fourcar dice for much of the event which was restarted after an earlier accident
# ::alignments 24-25|0.3.0.0 23-24|0.3.0.0.0 21-22|0.3.0 17-18|0.0 14-15|0.0.0 8-9|0.3 5-6|0 4-5|0.2 2-3|0.1 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:13.982
# ::node	0	fight-01	5-6
# ::node	0.0	event	17-18
# ::node	0.0.0	much	14-15
# ::node	0.1	race	2-3
# ::node	0.1.0	mini-vassal	1-2
# ::node	0.2	hard	4-5
# ::node	0.3	lock-01	8-9
# ::node	0.3.0	after	21-22
# ::node	0.3.0.0	accident	24-25
# ::node	0.3.0.0.0	early	23-24
# ::root	0	fight-01
# ::edge	accident	mod	early	0.3.0.0	0.3.0.0.0	
# ::edge	after	op1	accident	0.3.0	0.3.0.0	
# ::edge	event	quant	much	0.0	0.0.0	
# ::edge	fight-01	ARG0	event	0	0.0	
# ::edge	fight-01	ARG1	race	0	0.1	
# ::edge	fight-01	manner	hard	0	0.2	
# ::edge	fight-01	manner	lock-01	0	0.3	
# ::edge	lock-01	ARG1	after	0.3	0.3.0	
# ::edge	race	mod	mini-vassal	0.1	0.1.0	
(f / fight-01 
      :ARG0 (e2 / event 
            :quant (m / much)) 
      :ARG1 (r / race 
            :mod (m2 / mini-vassal)) 
      :manner (h / hard) 
      :manner (l / lock-01 
            :ARG1 (a2 / after 
                  :op1 (a / accident 
                        :mod (e / early)))))

# ::snt people injured in air or sea accidents with identical injuries and financial needs can receive wildly different amounts of compensation depending on completely fortuitous circumstances
# ::tok people injured in air or sea accidents with identical injuries and financial needs can receive wildly different amounts of compensation depending on completely fortuitous circumstances
# ::alignments 24-25|0.0.1.0 22-23|0.0.0.0.0 20-21|0.0.1 19-20|0.0.2.0 17-18|0.0.2 16-17|0.0.0.2.0 14-15|0.0 13-14|0 12-13|0.0.0.2 11-12|0.0.0.2.1 10-11|0.0.0 9-10|0.0.0.1 8-9|0.0.0.1.0 6-7|0.0.0.0.1.2 5-6|0.0.0.0.1.1 4-5|0.0.0.0.1 3-4|0.0.0.0.1.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:14.402
# ::node	0	possible	13-14
# ::node	0.0	receive-01	14-15
# ::node	0.0.0	and	10-11
# ::node	0.0.0.0	injure-01	1-2
# ::node	0.0.0.0.0	complete	22-23
# ::node	0.0.0.0.1	or	4-5
# ::node	0.0.0.0.1.0	air	3-4
# ::node	0.0.0.0.1.1	sea	5-6
# ::node	0.0.0.0.1.2	accident	6-7
# ::node	0.0.0.1	injure-01	9-10
# ::node	0.0.0.1.0	identical-41	8-9
# ::node	0.0.0.2	need-01	12-13
# ::node	0.0.0.2.0	differ-02	16-17
# ::node	0.0.0.2.1	finance	11-12
# ::node	0.0.1	depend-01	20-21
# ::node	0.0.1.0	circumstance	24-25
# ::node	0.0.2	amount	17-18
# ::node	0.0.2.0	compensate-01	19-20
# ::root	0	possible
# ::edge	and	op1	injure-01	0.0.0	0.0.0.1	
# ::edge	and	op2	need-01	0.0.0	0.0.0.2	
# ::edge	compensate-01	quant	amount	0.0.2.0	0.0.2	
# ::edge	depend-01	ARG0	receive-01	0.0.1	0.0	
# ::edge	depend-01	ARG1	circumstance	0.0.1	0.0.1.0	
# ::edge	differ-02	ARG1	need-01	0.0.0.2.0	0.0.0.2	
# ::edge	identical-41	ARG2	injure-01	0.0.0.1.0	0.0.0.1	
# ::edge	injure-01	ARG0	complete	0.0.0.0	0.0.0.0.0	
# ::edge	injure-01	ARG1	and	0.0.0.0	0.0.0	
# ::edge	injure-01	ARG2	or	0.0.0.0	0.0.0.0.1	
# ::edge	need-01	mod	finance	0.0.0.2	0.0.0.2.1	
# ::edge	or	op1	air	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	or	op2	sea	0.0.0.0.1	0.0.0.0.1.1	
# ::edge	or	op3	accident	0.0.0.0.1	0.0.0.0.1.2	
# ::edge	possible	domain	receive-01	0	0.0	
# ::edge	receive-01	ARG0	and	0.0	0.0.0	
# ::edge	receive-01	ARG1	amount	0.0	0.0.2	
(p / possible 
      :domain (r / receive-01 
            :ARG0 (a2 / and 
                  :ARG1-of (i3 / injure-01 
                        :ARG0 (c2 / complete) 
                        :ARG2 (o / or 
                              :op1 (a4 / air) 
                              :op2 (s / sea) 
                              :op3 (a3 / accident))) 
                  :op1 (i / injure-01 
                        :ARG2-of (i2 / identical-41)) 
                  :op2 (n / need-01 
                        :ARG1-of (d2 / differ-02) 
                        :mod (f / finance))) 
            :ARG0-of (d / depend-01 
                  :ARG1 (c / circumstance)) 
            :ARG1 (a / amount 
                  :quant-of (c3 / compensate-01))))

# ::snt north sea oil is expected to boost its contribution to the uk balance of payments in 1990 after a troublesome and sometimes tragic string of accidents and disruption to supplies over the last 18 months
# ::tok north sea oil is expected to boost its contribution to the uk balance of payments in 1990 after a troublesome and sometimes tragic string of accidents and disruption to supplies over the last 18 months
# ::alignments 34-35|0.0.1.2.0.0.0+0.0.1.2.0.0 33-34|0.0.1.2.0 32-33|0.0.1.0 29-30|0.0.1.1 26-27|0.0.1.1.0 25-26|0.0.1.1.0.0 23-24|0.0.2.0 22-23|0.0.2.0.1.0 21-22|0.0.2.0.1.0.0 20-21|0.0.2.0.1 19-20|0.0.2.0.0 17-18|0.0.2 16-17|0.0.1.2.2.0+0.0.1.2.2 14-15|0.0.1.2.1 12-13|0.0.1.2 8-9|0.0.1 6-7|0.0 4-5|0 2-3|0.0.0 1-2|0.0.0.0 0-1|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:15.454
# ::node	0	expect-01	4-5
# ::node	0.0	boost-01	6-7
# ::node	0.0.0	oil	2-3
# ::node	0.0.0.0	sea	1-2
# ::node	0.0.0.0.0	north	0-1
# ::node	0.0.1	contribute-01	8-9
# ::node	0.0.1.0	last	32-33
# ::node	0.0.1.1	supply-01	29-30
# ::node	0.0.1.1.0	and	26-27
# ::node	0.0.1.1.0.0	accident	25-26
# ::node	0.0.1.2	balance-01	12-13
# ::node	0.0.1.2.0	18	33-34
# ::node	0.0.1.2.0.0	temporal-quantity	34-35
# ::node	0.0.1.2.0.0.0	month	34-35
# ::node	0.0.1.2.1	payment	14-15
# ::node	0.0.1.2.2	date-entity	16-17
# ::node	0.0.1.2.2.0	1990	16-17
# ::node	0.0.2	after	17-18
# ::node	0.0.2.0	string	23-24
# ::node	0.0.2.0.0	troublesome	19-20
# ::node	0.0.2.0.1	and	20-21
# ::node	0.0.2.0.1.0	tragic	22-23
# ::node	0.0.2.0.1.0.0	sometimes	21-22
# ::root	0	expect-01
# ::edge	after	op1	string	0.0.2	0.0.2.0	
# ::edge	and	op1	accident	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	and	op1	tragic	0.0.2.0.1	0.0.2.0.1.0	
# ::edge	and	op2	string	0.0.2.0.1	0.0.2.0	
# ::edge	and	op2	supply-01	0.0.1.1.0	0.0.1.1	
# ::edge	balance-01	ARG0	18	0.0.1.2	0.0.1.2.0	
# ::edge	balance-01	ARG1	payment	0.0.1.2	0.0.1.2.1	
# ::edge	balance-01	time	date-entity	0.0.1.2	0.0.1.2.2	
# ::edge	boost-01	ARG0	oil	0.0	0.0.0	
# ::edge	boost-01	ARG1	contribute-01	0.0	0.0.1	
# ::edge	boost-01	time	after	0.0	0.0.2	
# ::edge	contribute-01	ARG0	last	0.0.1	0.0.1.0	
# ::edge	contribute-01	ARG1	supply-01	0.0.1	0.0.1.1	
# ::edge	contribute-01	ARG2	balance-01	0.0.1	0.0.1.2	
# ::edge	date-entity	year	1990	0.0.1.2.2	0.0.1.2.2.0	
# ::edge	expect-01	ARG1	boost-01	0	0.0	
# ::edge	oil	location	sea	0.0.0	0.0.0.0	
# ::edge	sea	mod	north	0.0.0.0	0.0.0.0.0	
# ::edge	string	mod	troublesome	0.0.2.0	0.0.2.0.0	
# ::edge	temporal-quantity	quant	18	0.0.1.2.0.0	0.0.1.2.0	
# ::edge	temporal-quantity	unit	month	0.0.1.2.0.0	0.0.1.2.0.0.0	
# ::edge	tragic	degree	sometimes	0.0.2.0.1.0	0.0.2.0.1.0.0	
(e / expect-01 
      :ARG1 (b2 / boost-01 
            :ARG0 (o / oil 
                  :location (s4 / sea 
                        :mod (n / north))) 
            :ARG1 (c / contribute-01 
                  :ARG0 (l / last) 
                  :ARG1 (s / supply-01 
                        :op-of (a / and 
                              :op1 (a2 / accident))) 
                  :ARG2 (b / balance-01 
                        :ARG0 (1 / 18 
                              :quant-of (t / temporal-quantity 
                                    :unit (m / month))) 
                        :ARG1 (p / payment) 
                        :time (d / date-entity 
                              :year 1990))) 
            :time (a4 / after 
                  :op1 (s2 / string 
                        :mod (t3 / troublesome) 
                        :op-of (a3 / and 
                              :op1 (t2 / tragic 
                                    :degree (s3 / sometimes)))))))

# ::snt the number of accidents causing slight injuries is up from 1771 in 1988 to 2012 last year while casualties rose from 2520 to 2779
# ::tok the number of accidents causing slight injuries is up from 1771 in 1988 to 2012 last year while casualties rose from 2520 to 2779
# ::alignments 23-24|0.2.0+0.2 21-22|0.3.0+0.3 19-20|0.4.0 18-19|0.4.0.1 16-17|0.4.0.0 15-16|0.4.0.0.0 14-15|0.1.0.0+0.1.0 12-13|0.4.0.0.0.0.0+0.4.0.0.0.0 10-11|0.4.0.2.0+0.4.0.2 6-7|0.1 5-6|0.1.1 4-5|0 3-4|0.0 1-2|0.4 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:15.720
# ::node	0	cause-01	4-5
# ::node	0.0	accident	3-4
# ::node	0.1	injure-01	6-7
# ::node	0.1.0	date-entity	14-15
# ::node	0.1.0.0	2012	14-15
# ::node	0.1.1	slight	5-6
# ::node	0.2	date-entity	23-24
# ::node	0.2.0	2779	23-24
# ::node	0.3	date-entity	21-22
# ::node	0.3.0	2520	21-22
# ::node	0.4	number	1-2
# ::node	0.4.0	rise-01	19-20
# ::node	0.4.0.0	year	16-17
# ::node	0.4.0.0.0	last	15-16
# ::node	0.4.0.0.0.0	date-entity	12-13
# ::node	0.4.0.0.0.0.0	1988	12-13
# ::node	0.4.0.1	casualty	18-19
# ::node	0.4.0.2	date-entity	10-11
# ::node	0.4.0.2.0	1771	10-11
# ::root	0	cause-01
# ::edge	cause-01	ARG0	accident	0	0.0	
# ::edge	cause-01	ARG1	injure-01	0	0.1	
# ::edge	cause-01	quant	number	0	0.4	
# ::edge	date-entity	op1	cause-01	0.2	0	
# ::edge	date-entity	op1	cause-01	0.3	0	
# ::edge	date-entity	year	1771	0.4.0.2	0.4.0.2.0	
# ::edge	date-entity	year	1988	0.4.0.0.0.0	0.4.0.0.0.0.0	
# ::edge	date-entity	year	2012	0.1.0	0.1.0.0	
# ::edge	date-entity	year	2520	0.3	0.3.0	
# ::edge	date-entity	year	2779	0.2	0.2.0	
# ::edge	injure-01	ARG1	date-entity	0.1	0.1.0	
# ::edge	injure-01	mod	slight	0.1	0.1.1	
# ::edge	last	quant	date-entity	0.4.0.0.0	0.4.0.0.0.0	
# ::edge	number	time	rise-01	0.4	0.4.0	
# ::edge	rise-01	ARG0	year	0.4.0	0.4.0.0	
# ::edge	rise-01	ARG1	casualty	0.4.0	0.4.0.1	
# ::edge	rise-01	time	date-entity	0.4.0	0.4.0.2	
# ::edge	year	mod	last	0.4.0.0	0.4.0.0.0	
(c2 / cause-01 
      :ARG0 (a / accident) 
      :ARG1 (i / injure-01 
            :ARG1 (d3 / date-entity 
                  :year 2012) 
            :mod (s / slight)) 
      :op-of (d / date-entity 
            :year 2779) 
      :op-of (d2 / date-entity 
            :year 2520) 
      :quant (n / number 
            :time (r / rise-01 
                  :ARG0 (y / year 
                        :mod (l / last 
                              :quant (d4 / date-entity 
                                    :year 1988))) 
                  :ARG1 (c / casualty) 
                  :time (d5 / date-entity 
                        :year 1771))))

# ::snt now its no accident that the stuff was so delicious
# ::tok now its no accident that the stuff was so delicious
# ::alignments 9-10|0 8-9|0.0 6-7|0.1 3-4|0.1.0 2-3|0.1.0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:15.737
# ::node	0	delicious	9-10
# ::node	0.0	so	8-9
# ::node	0.0.0	now	0-1
# ::node	0.1	stuff	6-7
# ::node	0.1.0	accident	3-4
# ::node	0.1.0.0	-	2-3
# ::root	0	delicious
# ::edge	accident	location	stuff	0.1.0	0.1	
# ::edge	accident	polarity	-	0.1.0	0.1.0.0	
# ::edge	delicious	degree	so	0	0.0	
# ::edge	delicious	domain	stuff	0	0.1	
# ::edge	so	poss	now	0.0	0.0.0	
(d / delicious 
      :degree (s / so 
            :poss (n / now)) 
      :domain (s2 / stuff 
            :location-of (a / accident 
                  :polarity (- / -))))

# ::snt youre still looking a bit rough after the accident on saturday
# ::tok youre still looking a bit rough after the accident on saturday
# ::alignments 10-11|0.0.0.0.0 8-9|0.0.0.0 6-7|0.0.0 5-6|0.0 4-5|0 1-2|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:15.755
# ::node	0	bit	4-5
# ::node	0.0	rough	5-6
# ::node	0.0.0	after	6-7
# ::node	0.0.0.0	accident	8-9
# ::node	0.0.0.0.0	saturday	10-11
# ::node	0.0.0.0.1	still	1-2
# ::root	0	bit
(b / bit 
      :degree-of (r / rough 
            :time (a2 / after 
                  :op1 (a / accident 
                        :location (s / saturday) 
                        :mod (s2 / still)))))

# ::snt sir anthony said mr hemingway had never for one moment sought to evade his responsibility for the appalling consequences of his errors yet before the accident he had had one sole day off in 13 weeks
# ::tok sir anthony said mr hemingway had never for one moment sought to evade his responsibility for the appalling consequences of his errors yet before the accident he had had one sole day off in 13 weeks
# ::alignments 35-36|0.1.0.0.0.2+0.1.0.0.0 34-35|0.1.0.0.0.0 32-33|0.1.0.0.0.1 31-32|0.1.1 30-31|0.1.1.0 26-27|0.0 25-26|0.1.2.1 23-24|0.1.2 22-23|0.1.2.0 21-22|0.1.0.0.2 18-19|0.1.0.0.1 17-18|0.1.0.0.1.0 14-15|0.1.0.0 10-11|0.1 9-10|0.1.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:16.215
# ::node	0	say-01	2-3
# ::node	0.0	he	26-27
# ::node	0.1	seek-01	10-11
# ::node	0.1.0	moment	9-10
# ::node	0.1.0.0	responsible-41	14-15
# ::node	0.1.0.0.0	temporal-quantity	35-36
# ::node	0.1.0.0.0.0	13	34-35
# ::node	0.1.0.0.0.1	off	32-33
# ::node	0.1.0.0.0.2	week	35-36
# ::node	0.1.0.0.1	consequence	18-19
# ::node	0.1.0.0.1.0	appall-01	17-18
# ::node	0.1.0.0.2	error	21-22
# ::node	0.1.1	day	31-32
# ::node	0.1.1.0	sole	30-31
# ::node	0.1.2	before	23-24
# ::node	0.1.2.0	yet	22-23
# ::node	0.1.2.1	accident	25-26
# ::root	0	say-01
# ::edge	appall-01	ARG1	consequence	0.1.0.0.1.0	0.1.0.0.1	
# ::edge	before	degree	yet	0.1.2	0.1.2.0	
# ::edge	before	op1	accident	0.1.2	0.1.2.1	
# ::edge	day	mod	sole	0.1.1	0.1.1.0	
# ::edge	day	op1	seek-01	0.1.1	0.1	
# ::edge	responsible-41	ARG0	moment	0.1.0.0	0.1.0	
# ::edge	responsible-41	ARG1	temporal-quantity	0.1.0.0	0.1.0.0.0	
# ::edge	responsible-41	ARG2	consequence	0.1.0.0	0.1.0.0.1	
# ::edge	responsible-41	part	error	0.1.0.0	0.1.0.0.2	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	seek-01	0	0.1	
# ::edge	seek-01	ARG0	moment	0.1	0.1.0	
# ::edge	seek-01	time	before	0.1	0.1.2	
# ::edge	temporal-quantity	quant	13	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	temporal-quantity	quant	off	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	temporal-quantity	unit	week	0.1.0.0.0	0.1.0.0.0.2	
(s3 / say-01 
      :ARG0 (h / he) 
      :ARG1 (s2 / seek-01 
            :ARG0 (m / moment 
                  :ARG0-of (r / responsible-41 
                        :ARG1 (t / temporal-quantity 
                              :quant 13 
                              :quant (o / off) 
                              :unit (w / week)) 
                        :ARG2 (c / consequence 
                              :ARG1-of (a2 / appall-01)) 
                        :part (e / error))) 
            :op-of (d / day 
                  :mod (s / sole)) 
            :time (b / before 
                  :degree (y / yet) 
                  :op1 (a / accident))))

# ::snt an unprecedented series of accidents have disrupted oil supplies in the last two years notably the explosion on the piper alpha platform in july 1988 which killed 167 people
# ::tok an unprecedented series of accidents have disrupted oil supplies in the last two years notably the explosion on the piper alpha platform in july 1988 which killed 167 people
# ::alignments 26-27|0.0.0 23-25|0.0.2.1+0.0.2.0+0.0.2 21-22|0.0 19-20|0 16-17|0.0.1 14-15|0.0.1.1 13-14|0.0.1.0.1+0.0.1.0 12-13|0.0.1.0.0 11-12|0.0.1.0.1.0 8-9|0.0.0.0.0.0 7-8|0.0.0.0.0.0.0 6-7|0.0.0.0.0 4-5|0.0.0.0.2 2-3|0.0.0.0 1-2|0.0.0.0.1.0+0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:16.467
# ::node	0	piper	19-20
# ::node	0.0	platform	21-22
# ::node	0.0.0	kill-01	26-27
# ::node	0.0.0.0	series	2-3
# ::node	0.0.0.0.0	disrupt-01	6-7
# ::node	0.0.0.0.0.0	supply-01	8-9
# ::node	0.0.0.0.0.0.0	oil	7-8
# ::node	0.0.0.0.1	precedent	1-2
# ::node	0.0.0.0.1.0	-	1-2
# ::node	0.0.0.0.2	accident	4-5
# ::node	0.0.1	explode-01	16-17
# ::node	0.0.1.0	temporal-quantity	13-14
# ::node	0.0.1.0.0	2	12-13
# ::node	0.0.1.0.1	year	13-14
# ::node	0.0.1.0.1.0	last	11-12
# ::node	0.0.1.1	notable	14-15
# ::node	0.0.2	date-entity	23-25
# ::node	0.0.2.0	7	23-25
# ::node	0.0.2.1	1988	23-25
# ::root	0	piper
(p2 / piper 
      :mod-of (p / platform 
            :ARG0-of (k / kill-01 
                  :ARG1 (s2 / series 
                        :ARG0-of (d2 / disrupt-01 
                              :ARG1 (s / supply-01 
                                    :ARG1 (o / oil))) 
                        :mod (p3 / precedent 
                              :polarity -) 
                        :quant-of (a / accident))) 
            :ARG0-of (e / explode-01 
                  :ARG1 (t / temporal-quantity 
                        :quant 2 
                        :unit (y / year 
                              :mod (l / last))) 
                  :path-of (n / notable)) 
            :time (d / date-entity 
                  :month 7 
                  :year 1988)))

# ::snt we pray for all those killed each day in wars disasters and accidents throughout the world for prisoners of conscience and all who suffer torture starvation or maltreatment and for all whose anniversaries fall at this time of the year
# ::tok we pray for all those killed each day in wars disasters and accidents throughout the world for prisoners of conscience and all who suffer torture starvation or maltreatment and for all whose anniversaries fall at this time of the year
# ::alignments 39-40|0.0.0.0.0 36-37|0.0.0.0 35-36|0.0.0 30-31|0.0.1.1.0.0.0 28-29|0 26-27|0.0.1 25-26|0.0 24-25|0.0.1.0 23-24|0.0.1.0.0 21-22|0.0.1.0.0.0 20-21|0.0.1.1.0.2 19-20|0.0.1.1.0.2.0 15-16|0.0.1.1.0.0.1 13-14|0.0.1.1.0.0.1.0 12-13|0.0.1.1.0.1 11-12|0.0.1.1.0 10-11|0.0.1.1.2 9-10|0.0.1.1.0.0 7-8|0.0.1.1.3 6-7|0.0.1.1.3.0 5-6|0.0.1.1 3-4|0.0.1.1.1 1-2|0.0.1.0.0.1 0-1|0.0.1.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:17.677
# ::node	0	and	28-29
# ::node	0.0	starve-01	25-26
# ::node	0.0.0	this	35-36
# ::node	0.0.0.0	time	36-37
# ::node	0.0.0.0.0	year	39-40
# ::node	0.0.1	or	26-27
# ::node	0.0.1.0	torture-01	24-25
# ::node	0.0.1.0.0	suffer-01	23-24
# ::node	0.0.1.0.0.0	all	21-22
# ::node	0.0.1.0.0.1	pray-01	1-2
# ::node	0.0.1.0.0.1.0	we	0-1
# ::node	0.0.1.1	kill-01	5-6
# ::node	0.0.1.1.0	and	11-12
# ::node	0.0.1.1.0.0	war-01	9-10
# ::node	0.0.1.1.0.0.0	all	30-31
# ::node	0.0.1.1.0.0.1	world	15-16
# ::node	0.0.1.1.0.0.1.0	throughout	13-14
# ::node	0.0.1.1.0.1	accident	12-13
# ::node	0.0.1.1.0.2	and	20-21
# ::node	0.0.1.1.0.2.0	conscience	19-20
# ::node	0.0.1.1.1	all	3-4
# ::node	0.0.1.1.2	disaster	10-11
# ::node	0.0.1.1.3	day	7-8
# ::node	0.0.1.1.3.0	each	6-7
# ::root	0	and
# ::edge	and	op1	accident	0.0.1.1.0	0.0.1.1.0.1	
# ::edge	and	op1	conscience	0.0.1.1.0.2	0.0.1.1.0.2.0	
# ::edge	and	op1	starve-01	0	0.0	
# ::edge	and	op2	and	0.0.1.1.0	0.0.1.1.0.2	
# ::edge	day	mod	each	0.0.1.1.3	0.0.1.1.3.0	
# ::edge	kill-01	ARG0	and	0.0.1.1	0.0.1.1.0	
# ::edge	kill-01	ARG1	all	0.0.1.1	0.0.1.1.1	
# ::edge	kill-01	location	disaster	0.0.1.1	0.0.1.1.2	
# ::edge	kill-01	time	day	0.0.1.1	0.0.1.1.3	
# ::edge	or	op1	kill-01	0.0.1	0.0.1.1	
# ::edge	or	op2	starve-01	0.0.1	0.0	
# ::edge	pray-01	ARG0	we	0.0.1.0.0.1	0.0.1.0.0.1.0	
# ::edge	pray-01	ARG1	suffer-01	0.0.1.0.0.1	0.0.1.0.0	
# ::edge	starve-01	ARG1	this	0.0	0.0.0	
# ::edge	suffer-01	ARG0	all	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	suffer-01	ARG1	torture-01	0.0.1.0.0	0.0.1.0	
# ::edge	throughout	op1	world	0.0.1.1.0.0.1.0	0.0.1.1.0.0.1	
# ::edge	time	mod	this	0.0.0.0	0.0.0	
# ::edge	torture-01	ARG1	or	0.0.1.0	0.0.1	
# ::edge	war-01	ARG0	all	0.0.1.1.0.0	0.0.1.1.0.0.0	
# ::edge	war-01	ARG1	and	0.0.1.1.0.0	0.0.1.1.0	
# ::edge	war-01	name	world	0.0.1.1.0.0	0.0.1.1.0.0.1	
# ::edge	year	part	time	0.0.0.0.0	0.0.0.0	
(a2 / and 
      :op1 (s / starve-01 
            :ARG1 (t2 / this 
                  :mod-of (t / time 
                        :part-of (y / year))) 
            :op-of (o / or 
                  :ARG1-of (t3 / torture-01 
                        :ARG1-of (s2 / suffer-01 
                              :ARG0 (a3 / all) 
                              :ARG1-of (p / pray-01 
                                    :ARG0 (w3 / we)))) 
                  :op1 (k / kill-01 
                        :ARG0 (a6 / and 
                              :ARG1-of (w2 / war-01 
                                    :ARG0 (a / all) 
                                    :name (w / world 
                                          :op-of (t4 / throughout))) 
                              :op1 (a5 / accident) 
                              :op2 (a4 / and 
                                    :op1 (c / conscience))) 
                        :ARG1 (a7 / all) 
                        :location (d / disaster) 
                        :time (d2 / day 
                              :mod (e / each))))))

# ::snt the authors said models of a nuclear accident at sizewell b in suffolk showed that up to 5000 square kilometres would be contaminated
# ::tok the authors said models of a nuclear accident at sizewell b in suffolk showed that up to 5000 square kilometres would be contaminated
# ::alignments 19-20|0.0.1+0.0 18-19|0.0.0 17-18|0.1.0.0 13-14|0.1.0.1.0 10-11|0.1.0.1 7-8|0.1.1 6-7|0.1.1.0 3-4|0.1 2-3|0 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:17.830
# ::node	0	say-01	2-3
# ::node	0.0	distance-quantity	19-20
# ::node	0.0.0	square	18-19
# ::node	0.0.1	kilometer	19-20
# ::node	0.1	model	3-4
# ::node	0.1.0	author-01	1-2
# ::node	0.1.0.0	5000	17-18
# ::node	0.1.0.1	b	10-11
# ::node	0.1.0.1.0	show-01	13-14
# ::node	0.1.1	accident	7-8
# ::node	0.1.1.0	nucleus	6-7
# ::root	0	say-01
# ::edge	accident	mod	nucleus	0.1.1	0.1.1.0	
# ::edge	author-01	ARG0	5000	0.1.0	0.1.0.0	
# ::edge	author-01	ARG1	b	0.1.0	0.1.0.1	
# ::edge	distance-quantity	mod	square	0.0	0.0.0	
# ::edge	distance-quantity	unit	kilometer	0.0	0.0.1	
# ::edge	model	mod	author-01	0.1	0.1.0	
# ::edge	model	topic	accident	0.1	0.1.1	
# ::edge	say-01	ARG0	distance-quantity	0	0.0	
# ::edge	say-01	ARG1	model	0	0.1	
# ::edge	show-01	ARG1	b	0.1.0.1.0	0.1.0.1	
(s3 / say-01 
      :ARG0 (d / distance-quantity 
            :mod (s / square) 
            :unit (k / kilometer)) 
      :ARG1 (m / model 
            :mod (a2 / author-01 
                  :ARG0 5000 
                  :ARG1 (b / b 
                        :ARG1-of (s2 / show-01))) 
            :topic (a / accident 
                  :mod (n / nucleus))))

# ::snt people who will not have to pay the poll tax include children still at school who are under 19 and for whom child benefit is still payable  people who are seriously mentally handicapped either from birth or through accident or injury
# ::tok people who will not have to pay the poll tax include children still at school who are under 19 and for whom child benefit is still payable people who are seriously mentally handicapped either from birth or through accident or injury
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:17.833
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt a driver did not know he had caused a crash until police called to tell him of the accident a court was told
# ::tok a driver did not know he had caused a crash until police called to tell him of the accident a court was told
# ::alignments 22-23|0.1.0.0 20-21|0.1.0.0.1 18-19|0.1.0.0.0 14-15|0.0.0.0 11-12|0.0.0.0.0 10-11|0.2 9-10|0.0.0 7-8|0 5-6|0.0 4-5|0.1 1-2|0.1.0.1+0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:18.224
# ::node	0	cause-01	7-8
# ::node	0.0	he	5-6
# ::node	0.0.0	crash-01	9-10
# ::node	0.0.0.0	tell-01	14-15
# ::node	0.0.0.0.0	police	11-12
# ::node	0.1	know-01	4-5
# ::node	0.1.0	person	1-2
# ::node	0.1.0.0	tell-01	22-23
# ::node	0.1.0.0.0	accident	18-19
# ::node	0.1.0.0.1	court	20-21
# ::node	0.1.0.1	drive-01	1-2
# ::node	0.2	until	10-11
# ::root	0	cause-01
# ::edge	cause-01	ARG0	he	0	0.0	
# ::edge	cause-01	duration	until	0	0.2	
# ::edge	crash-01	ARG0	he	0.0.0	0.0	
# ::edge	drive-01	ARG0	person	0.1.0.1	0.1.0	
# ::edge	know-01	ARG0	person	0.1	0.1.0	
# ::edge	know-01	ARG1	cause-01	0.1	0	
# ::edge	tell-01	ARG0	person	0.1.0.0	0.1.0	
# ::edge	tell-01	ARG0	police	0.0.0.0	0.0.0.0.0	
# ::edge	tell-01	ARG1	accident	0.1.0.0	0.1.0.0.0	
# ::edge	tell-01	ARG1	crash-01	0.0.0.0	0.0.0	
# ::edge	tell-01	ARG2	court	0.1.0.0	0.1.0.0.1	
(c3 / cause-01 
      :ARG0 (h / he 
            :ARG0-of (c2 / crash-01 
                  :ARG1-of (t2 / tell-01 
                        :ARG0 (p / police)))) 
      :ARG1-of (k / know-01 
            :ARG0 (p2 / person 
                  :ARG0-of (t / tell-01 
                        :ARG1 (a / accident) 
                        :ARG2 (c / court)) 
                  :ARG0-of (d / drive-01))) 
      :duration (u / until))

# ::snt a rider was taken to the john radcliffe hospital oxford with minor injuries after his motorcycle was involved in an accident with a car outside the star and garter pub east street thame
# ::tok a rider was taken to the john radcliffe hospital oxford with minor injuries after his motorcycle was involved in an accident with a car outside the star and garter pub east street thame
# ::alignments 31-32|0.3.0 30-31|0.3 29-30|0.2 27-28|0 26-27|0.1 24-25|0.0.1 23-24|0.0 20-21|0.0.0.0.1 17-18|0.0.0.0 13-14|0.0.0.0.2 12-13|0.0.0 11-12|0.0.0.1 8-9|0.0.0.0.2.0 6-8|0.0.0.0.0.0.0+0.0.0.0.0.0.1+0.0.0.0.0.0+0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:18.330
# ::node	0	and	27-28
# ::node	0.0	car	23-24
# ::node	0.0.0	injure-01	12-13
# ::node	0.0.0.0	involve-01	17-18
# ::node	0.0.0.0.0	country	6-8
# ::node	0.0.0.0.0.0	name	6-8
# ::node	0.0.0.0.0.0.0	"radcliffe"	6-8
# ::node	0.0.0.0.0.0.1	"john"	6-8
# ::node	0.0.0.0.1	accident	20-21
# ::node	0.0.0.0.2	after	13-14
# ::node	0.0.0.0.2.0	hospital	8-9
# ::node	0.0.0.1	minor	11-12
# ::node	0.0.1	outside	24-25
# ::node	0.1	star	26-27
# ::node	0.2	pub	29-30
# ::node	0.3	east	30-31
# ::node	0.3.0	street	31-32
# ::root	0	and
# ::edge	after	op1	hospital	0.0.0.0.2	0.0.0.0.2.0	
# ::edge	after	op2	involve-01	0.0.0.0.2	0.0.0.0	
# ::edge	and	op1	car	0	0.0	
# ::edge	and	op2	star	0	0.1	
# ::edge	and	op3	pub	0	0.2	
# ::edge	and	op4	east	0	0.3	
# ::edge	car	location	outside	0.0	0.0.1	
# ::edge	country	name	name	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	injure-01	ARG1	car	0.0.0	0.0	
# ::edge	injure-01	mod	minor	0.0.0	0.0.0.1	
# ::edge	involve-01	ARG0	injure-01	0.0.0.0	0.0.0	
# ::edge	involve-01	ARG1	country	0.0.0.0	0.0.0.0.0	
# ::edge	involve-01	ARG2	accident	0.0.0.0	0.0.0.0.1	
# ::edge	name	op1	"radcliffe"	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	name	op2	"john"	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	street	mod	east	0.3.0	0.3	
(a / and 
      :op1 (c / car 
            :ARG1-of (i2 / injure-01 
                  :ARG0-of (i / involve-01 
                        :ARG1 (c2 / country 
                              :name (n / name 
                                    :op1 "radcliffe" 
                                    :op2 "john")) 
                        :ARG2 (a2 / accident) 
                        :op-of (a3 / after 
                              :op1 (h / hospital))) 
                  :mod (m / minor)) 
            :location (o / outside)) 
      :op2 (s2 / star) 
      :op3 (p / pub) 
      :op4 (e / east 
            :mod-of (s / street)))

# ::snt the socalled collateral source rule has the effect of generally permitting the accident victim to pocket both insurance benefits and unreduced tort damages even when the insurance is mandatory and derived from public funds such as federal social security
# ::tok the socalled collateral source rule has the effect of generally permitting the accident victim to pocket both insurance benefits and unreduced tort damages even when the insurance is mandatory and derived from public funds such as federal social security
# ::alignments 38-39|0.0.0.1.0.0.0.0.0 37-38|0.0.0.1.0.0.0.0.0.1 36-37|0.0.0.1.0.0.0.0.0.0 34-35|0.0.0.0.1 33-34|0.0.0.0 32-33|0.0.0.0.0 30-31|0.2 29-30|0 28-29|0.1 26-27|0.2.0 22-23|0.0.0.1.0.0.1 19-20|0.0.0.1.0.0 18-19|0.0.0.1.0.0.0 17-18|0.0.0.1.0.0.0.0 16-17|0.0.0.1.0 15-16|0.0 13-14|0.0.0.1 12-13|0.0.0.1.0.0.1.0 10-11|0.0.0 9-10|0.0.0.3 7-8|0.0.0.2 4-5|0.0.0.2.0 3-4|0.0.0.2.0.0 2-3|0.0.0.2.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:18.842
# ::node	0	and	29-30
# ::node	0.0	pocket	15-16
# ::node	0.0.0	permit-01	10-11
# ::node	0.0.0.0	fund	33-34
# ::node	0.0.0.0.0	public	32-33
# ::node	0.0.0.0.1	such	34-35
# ::node	0.0.0.1	victim	13-14
# ::node	0.0.0.1.0	both	16-17
# ::node	0.0.0.1.0.0	and	19-20
# ::node	0.0.0.1.0.0.0	benefit-01	18-19
# ::node	0.0.0.1.0.0.0.0	insure-02	17-18
# ::node	0.0.0.1.0.0.0.0.0	security	38-39
# ::node	0.0.0.1.0.0.0.0.0.0	federal	36-37
# ::node	0.0.0.1.0.0.0.0.0.1	society	37-38
# ::node	0.0.0.1.0.0.1	damage-01	22-23
# ::node	0.0.0.1.0.0.1.0	accident	12-13
# ::node	0.0.0.2	effect-01	7-8
# ::node	0.0.0.2.0	rule-03	4-5
# ::node	0.0.0.2.0.0	source	3-4
# ::node	0.0.0.2.0.1	collateral	2-3
# ::node	0.0.0.3	general	9-10
# ::node	0.1	mandatory	28-29
# ::node	0.2	derive-01	30-31
# ::node	0.2.0	insure-02	26-27
# ::root	0	and
# ::edge	and	mod	both	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	and	op1	benefit-01	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	and	op1	mandatory	0	0.1	
# ::edge	and	op2	damage-01	0.0.0.1.0.0	0.0.0.1.0.0.1	
# ::edge	and	op2	derive-01	0	0.2	
# ::edge	benefit-01	ARG1	insure-02	0.0.0.1.0.0.0	0.0.0.1.0.0.0.0	
# ::edge	damage-01	ARG0	accident	0.0.0.1.0.0.1	0.0.0.1.0.0.1.0	
# ::edge	derive-01	ARG1	insure-02	0.2	0.2.0	
# ::edge	effect-01	ARG0	rule-03	0.0.0.2	0.0.0.2.0	
# ::edge	effect-01	ARG1	permit-01	0.0.0.2	0.0.0	
# ::edge	fund	mod	public	0.0.0.0	0.0.0.0.0	
# ::edge	insure-02	ARG1	security	0.0.0.1.0.0.0.0	0.0.0.1.0.0.0.0.0	
# ::edge	permit-01	ARG0	fund	0.0.0	0.0.0.0	
# ::edge	permit-01	ARG1	victim	0.0.0	0.0.0.1	
# ::edge	permit-01	ARG2	pocket	0.0.0	0.0	
# ::edge	permit-01	manner	general	0.0.0	0.0.0.3	
# ::edge	pocket	condition	and	0.0	0	
# ::edge	rule-03	ARG1	source	0.0.0.2.0	0.0.0.2.0.0	
# ::edge	rule-03	mod	collateral	0.0.0.2.0	0.0.0.2.0.1	
# ::edge	security	mod	federal	0.0.0.1.0.0.0.0.0	0.0.0.1.0.0.0.0.0.0	
# ::edge	security	mod	society	0.0.0.1.0.0.0.0.0	0.0.0.1.0.0.0.0.0.1	
# ::edge	such	mod	fund	0.0.0.0.1	0.0.0.0	
# ::edge	victim	purpose	both	0.0.0.1	0.0.0.1.0	
(a / and 
      :condition-of (p2 / pocket 
            :ARG2-of (p3 / permit-01 
                  :ARG0 (f2 / fund 
                        :mod (p / public) 
                        :mod-of (s3 / such)) 
                  :ARG1 (v / victim 
                        :purpose (b2 / both 
                              :mod-of (a2 / and 
                                    :op1 (b / benefit-01 
                                          :ARG1 (i2 / insure-02 
                                                :ARG1 (s / security 
                                                      :mod (f / federal) 
                                                      :mod (s2 / society)))) 
                                    :op2 (d2 / damage-01 
                                          :ARG0 (a3 / accident))))) 
                  :ARG1-of (e / effect-01 
                        :ARG0 (r / rule-03 
                              :ARG1 (s4 / source) 
                              :mod (c / collateral))) 
                  :manner (g / general))) 
      :op1 (m / mandatory) 
      :op2 (d / derive-01 
            :ARG1 (i / insure-02)))

# ::snt with the possible exception of a stall warning unserviceability examination revealed no evidence of any failure or malfunction of the aircraft that could have contributed to the accident
# ::tok with the possible exception of a stall warning unserviceability examination revealed no evidence of any failure or malfunction of the aircraft that could have contributed to the accident
# ::alignments 27-28|0.0.1 24-25|0.0 22-23|0 20-21|0.0.0 17-18|0.0.0.0.0.2 16-17|0.0.0.0.0 15-16|0.0.0.0 14-15|0.0.0.0.0.1 12-13|0.0.0.0.0.0 11-12|0.0.0.0.0.0.1 10-11|0.0.0.0.0.0.0 9-10|0.0.0.0.0.0.0.0 7-8|0.0.0.0.0.0.0.0.0 3-4|0.0.0.0.0.0.0.0.1 2-3|0.0.0.0.0.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:18.952
# ::node	0	possible	22-23
# ::node	0.0	contribute-01	24-25
# ::node	0.0.0	aircraft	20-21
# ::node	0.0.0.0	fail-01	15-16
# ::node	0.0.0.0.0	or	16-17
# ::node	0.0.0.0.0.0	evidence-01	12-13
# ::node	0.0.0.0.0.0.0	reveal-01	10-11
# ::node	0.0.0.0.0.0.0.0	examine-01	9-10
# ::node	0.0.0.0.0.0.0.0.0	warn-01	7-8
# ::node	0.0.0.0.0.0.0.0.1	except-00	3-4
# ::node	0.0.0.0.0.0.0.0.1.0	possible	2-3
# ::node	0.0.0.0.0.0.1	-	11-12
# ::node	0.0.0.0.0.1	any	14-15
# ::node	0.0.0.0.0.2	malfunction	17-18
# ::node	0.0.1	accident	27-28
# ::root	0	possible
# ::edge	contribute-01	ARG1	aircraft	0.0	0.0.0	
# ::edge	contribute-01	ARG2	accident	0.0	0.0.1	
# ::edge	evidence-01	ARG1	or	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	evidence-01	polarity	-	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	except-00	ARG2	examine-01	0.0.0.0.0.0.0.0.1	0.0.0.0.0.0.0.0	
# ::edge	except-00	mod	possible	0.0.0.0.0.0.0.0.1	0.0.0.0.0.0.0.0.1.0	
# ::edge	fail-01	ARG1	aircraft	0.0.0.0	0.0.0	
# ::edge	or	mod	any	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	or	op1	fail-01	0.0.0.0.0	0.0.0.0	
# ::edge	or	op2	malfunction	0.0.0.0.0	0.0.0.0.0.2	
# ::edge	possible	domain	contribute-01	0	0.0	
# ::edge	reveal-01	ARG1	evidence-01	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	reveal-01	time	examine-01	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	warn-01	ARG1	examine-01	0.0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
(p / possible 
      :domain (c / contribute-01 
            :ARG1 (a2 / aircraft 
                  :ARG1-of (f / fail-01 
                        :op-of (o / or 
                              :ARG1-of (e / evidence-01 
                                    :ARG1-of (r / reveal-01 
                                          :time (e2 / examine-01 
                                                :ARG1-of (w / warn-01) 
                                                :ARG2-of (e3 / except-00 
                                                      :mod (p2 / possible)))) 
                                    :polarity (- / -)) 
                              :mod (a3 / any) 
                              :op1 (m / malfunction)))) 
            :ARG2 (a / accident)))

# ::snt theres no question of accident and emergency cover being withdrawn by ambulance staff
# ::tok theres no question of accident and emergency cover being withdrawn by ambulance staff
# ::alignments 12-13|0.0.0.0+0.0.0 11-12|0.0.0.1 9-10|0.0 6-7|0.3 5-6|0 4-5|0.2 2-3|0.1 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:19.012
# ::node	0	and	5-6
# ::node	0.0	withdraw-01	9-10
# ::node	0.0.0	person	12-13
# ::node	0.0.0.0	staff-01	12-13
# ::node	0.0.0.1	ambulance	11-12
# ::node	0.1	question-01	2-3
# ::node	0.1.0	-	1-2
# ::node	0.2	accident	4-5
# ::node	0.3	emergency	6-7
# ::root	0	and
# ::edge	and	op1	accident	0	0.2	
# ::edge	and	op2	emergency	0	0.3	
# ::edge	person	mod	ambulance	0.0.0	0.0.0.1	
# ::edge	question-01	ARG1	and	0.1	0	
# ::edge	question-01	polarity	-	0.1	0.1.0	
# ::edge	staff-01	ARG2	person	0.0.0.0	0.0.0	
# ::edge	withdraw-01	ARG0	person	0.0	0.0.0	
# ::edge	withdraw-01	ARG1	and	0.0	0	
(a2 / and 
      :ARG1-of (w / withdraw-01 
            :ARG0 (p / person 
                  :ARG2-of (s / staff-01) 
                  :mod (a / ambulance))) 
      :ARG1-of (q / question-01 
            :polarity (- / -)) 
      :op1 (a3 / accident) 
      :op2 (e / emergency))

# ::snt there was a hint in the way he spoke the last words that made her say but you werent so sure  he was an accident going somewhere to happen
# ::tok there was a hint in the way he spoke the last words that made her say but you werent so sure he was an accident going somewhere to happen
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:19.013
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt there were also risks of legal liability for a growing number of pit accidents and industrial diseases
# ::tok there were also risks of legal liability for a growing number of pit accidents and industrial diseases
# ::alignments 16-17|0.2.0 15-16|0.1.0 14-15|0.2 13-14|0.0.0 10-11|0.0 9-10|0 6-7|0.1.1 5-6|0.1.1.0 3-4|0.1 2-3|0.1.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:19.146
# ::node	0	grow-01	9-10
# ::node	0.0	number	10-11
# ::node	0.0.0	accident	13-14
# ::node	0.1	risk-01	3-4
# ::node	0.1.0	industry	15-16
# ::node	0.1.1	liability	6-7
# ::node	0.1.1.0	legal	5-6
# ::node	0.1.2	also	2-3
# ::node	0.2	and	14-15
# ::node	0.2.0	disease	16-17
# ::root	0	grow-01
# ::edge	accident	quant	number	0.0.0	0.0	
# ::edge	and	op1	disease	0.2	0.2.0	
# ::edge	grow-01	ARG1	number	0	0.0	
# ::edge	grow-01	ARG2	risk-01	0	0.1	
# ::edge	grow-01	location	and	0	0.2	
# ::edge	liability	mod	legal	0.1.1	0.1.1.0	
# ::edge	risk-01	ARG0	industry	0.1	0.1.0	
# ::edge	risk-01	ARG1	liability	0.1	0.1.1	
# ::edge	risk-01	mod	also	0.1	0.1.2	
(g / grow-01 
      :ARG1 (n / number 
            :quant-of (a2 / accident)) 
      :ARG2 (r / risk-01 
            :ARG0 (i / industry) 
            :ARG1 (l / liability 
                  :mod (l2 / legal)) 
            :mod (a3 / also)) 
      :location (a / and 
            :op1 (d / disease)))

# ::snt so far there has been only one accident paul borthwick a 35yearold londonbased civil servant who runs to work tripped and fell while on the coasttocoast special we chose that programme because it didnt have the day off and had to have stitches in his knee
# ::tok so far there has been only one accident paul borthwick a 35yearold londonbased civil servant who runs to work tripped and fell while on the coasttocoast special we chose that programme because it didnt have the day off and had to have stitches in his knee
# ::alignments 38-39|0.0 37-38|0.2.0 36-37|0.2 32-33|0.1.2 31-32|0 30-31|0.1.1 28-29|0.1 27-28|0.1.0 26-27|0.1.4 21-22|0.1.3.1 20-21|0.1.3 14-15|0.1.3.0.0+0.1.3.0 13-14|0.1.3.0.1 7-8|0.1.3.1.0.1.0 5-6|0.1.3.1.0.1 1-2|0.1.3.1.0.0 0-1|0.1.3.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:19.496
# ::node	0	cause-01	31-32
# ::node	0.0	and	38-39
# ::node	0.1	choose-01	28-29
# ::node	0.1.0	we	27-28
# ::node	0.1.1	program	30-31
# ::node	0.1.2	it	32-33
# ::node	0.1.3	and	20-21
# ::node	0.1.3.0	person	14-15
# ::node	0.1.3.0.0	serve-01	14-15
# ::node	0.1.3.0.1	civil	13-14
# ::node	0.1.3.1	fall-01	21-22
# ::node	0.1.3.1.0	so	0-1
# ::node	0.1.3.1.0.0	far	1-2
# ::node	0.1.3.1.0.1	only	5-6
# ::node	0.1.3.1.0.1.0	accident	7-8
# ::node	0.1.4	special	26-27
# ::node	0.2	day	36-37
# ::node	0.2.0	off	37-38
# ::root	0	cause-01
# ::edge	accident	mod	only	0.1.3.1.0.1.0	0.1.3.1.0.1	
# ::edge	and	op1	person	0.1.3	0.1.3.0	
# ::edge	and	op2	fall-01	0.1.3	0.1.3.1	
# ::edge	and	op3	choose-01	0.1.3	0.1	
# ::edge	cause-01	ARG0	and	0	0.0	
# ::edge	cause-01	ARG1	choose-01	0	0.1	
# ::edge	choose-01	ARG0	we	0.1	0.1.0	
# ::edge	choose-01	ARG1	program	0.1	0.1.1	
# ::edge	choose-01	ARG2	it	0.1	0.1.2	
# ::edge	choose-01	time	special	0.1	0.1.4	
# ::edge	day	domain	cause-01	0.2	0	
# ::edge	fall-01	ARG1	so	0.1.3.1	0.1.3.1.0	
# ::edge	far	degree	so	0.1.3.1.0.0	0.1.3.1.0	
# ::edge	off	op1	day	0.2.0	0.2	
# ::edge	person	mod	civil	0.1.3.0	0.1.3.0.1	
# ::edge	serve-01	ARG0	person	0.1.3.0.0	0.1.3.0	
# ::edge	so	mod	only	0.1.3.1.0	0.1.3.1.0.1	
(c / cause-01 
      :ARG0 (a / and) 
      :ARG1 (c2 / choose-01 
            :ARG0 (w / we) 
            :ARG1 (p / program) 
            :ARG2 (i / it) 
            :op-of (a2 / and 
                  :op1 (p2 / person 
                        :ARG0-of (s2 / serve-01) 
                        :mod (c3 / civil)) 
                  :op2 (f / fall-01 
                        :ARG1 (s3 / so 
                              :degree-of (f2 / far) 
                              :mod (o2 / only 
                                    :mod-of (a3 / accident))))) 
            :time (s / special)) 
      :domain-of (d / day 
            :op-of (o / off)))

# ::snt nowadays most persons injured in an accident manage to draw on private or some sort of social insurance to meet part or all of their losses
# ::tok nowadays most persons injured in an accident manage to draw on private or some sort of social insurance to meet part or all of their losses
# ::alignments 22-23|0.2.0 21-22|0.1 17-18|0.1.0 16-17|0.1.0.0 14-15|0.1.0.1 13-14|0.1.0.1.0 12-13|0.1.0.1.1 11-12|0.1.0.1.1.0 9-10|0 7-8|0.2 6-7|0.0 3-4|0.2.1 2-3|0.2.1.1 1-2|0.2.1.1.0 0-1|0.2.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:19.724
# ::node	0	draw-02	9-10
# ::node	0.0	accident	6-7
# ::node	0.1	or	21-22
# ::node	0.1.0	insure-02	17-18
# ::node	0.1.0.0	society	16-17
# ::node	0.1.0.1	sort	14-15
# ::node	0.1.0.1.0	some	13-14
# ::node	0.1.0.1.1	or	12-13
# ::node	0.1.0.1.1.0	private	11-12
# ::node	0.2	manage-01	7-8
# ::node	0.2.0	all	22-23
# ::node	0.2.1	injure-01	3-4
# ::node	0.2.1.0	nowadays	0-1
# ::node	0.2.1.1	person	2-3
# ::node	0.2.1.1.0	most	1-2
# ::root	0	draw-02
# ::edge	draw-02	ARG0	accident	0	0.0	
# ::edge	draw-02	ARG1	or	0	0.1	
# ::edge	injure-01	ARG0	nowadays	0.2.1	0.2.1.0	
# ::edge	injure-01	ARG1	person	0.2.1	0.2.1.1	
# ::edge	injure-01	manner	manage-01	0.2.1	0.2	
# ::edge	insure-02	ARG1	society	0.1.0	0.1.0.0	
# ::edge	insure-02	mod	sort	0.1.0	0.1.0.1	
# ::edge	insure-02	purpose	or	0.1.0	0.1	
# ::edge	manage-01	ARG0	all	0.2	0.2.0	
# ::edge	manage-01	ARG1	draw-02	0.2	0	
# ::edge	or	op1	private	0.1.0.1.1	0.1.0.1.1.0	
# ::edge	or	op2	sort	0.1.0.1.1	0.1.0.1	
# ::edge	person	quant	most	0.2.1.1	0.2.1.1.0	
# ::edge	sort	mod	some	0.1.0.1	0.1.0.1.0	
(d / draw-02 
      :ARG0 (a2 / accident) 
      :ARG1 (o / or 
            :purpose-of (i / insure-02 
                  :ARG1 (s / society) 
                  :mod (s2 / sort 
                        :mod (s3 / some) 
                        :op-of (o2 / or 
                              :op1 (p / private))))) 
      :ARG1-of (m / manage-01 
            :ARG0 (a / all) 
            :manner-of (i2 / injure-01 
                  :ARG0 (n / nowadays) 
                  :ARG1 (p2 / person 
                        :quant (m2 / most)))))

# ::snt black box data recorders of the type carried on aeroplanes would also be installed to provide detailed evidence on accidents
# ::tok black box data recorders of the type carried on aeroplanes would also be installed to provide detailed evidence on accidents
# ::alignments 19-20|0.0.1.3 17-18|0.0.1 16-17|0.0.1.2 15-16|0.0 13-14|0 11-12|0.1 9-10|0.0.0 6-7|0.0.1.1 2-3|0.0.1.0.1 1-2|0.0.1.0 0-1|0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:19.862
# ::node	0	install-01	13-14
# ::node	0.0	provide-01	15-16
# ::node	0.0.0	aeroplane	9-10
# ::node	0.0.1	evidence-01	17-18
# ::node	0.0.1.0	box	1-2
# ::node	0.0.1.0.0	black	0-1
# ::node	0.0.1.0.1	data	2-3
# ::node	0.0.1.1	type	6-7
# ::node	0.0.1.2	detail-01	16-17
# ::node	0.0.1.3	accident	19-20
# ::node	0.1	also	11-12
# ::root	0	install-01
# ::edge	box	mod	black	0.0.1.0	0.0.1.0.0	
# ::edge	data	mod	box	0.0.1.0.1	0.0.1.0	
# ::edge	detail-01	ARG1	evidence-01	0.0.1.2	0.0.1	
# ::edge	evidence-01	ARG0	box	0.0.1	0.0.1.0	
# ::edge	evidence-01	ARG1	type	0.0.1	0.0.1.1	
# ::edge	evidence-01	location	accident	0.0.1	0.0.1.3	
# ::edge	install-01	ARG1	provide-01	0	0.0	
# ::edge	install-01	mod	also	0	0.1	
# ::edge	provide-01	ARG0	aeroplane	0.0	0.0.0	
# ::edge	provide-01	ARG1	evidence-01	0.0	0.0.1	
(i / install-01 
      :ARG1 (p / provide-01 
            :ARG0 (a3 / aeroplane) 
            :ARG1 (e / evidence-01 
                  :ARG0 (b / box 
                        :mod (b2 / black) 
                        :mod-of (d2 / data)) 
                  :ARG1 (t / type) 
                  :ARG1-of (d / detail-01) 
                  :location (a / accident))) 
      :mod (a2 / also))

# ::snt especially as this flow was probably intermittent at the time the accident happened
# ::tok especially as this flow was probably intermittent at the time the accident happened
# ::alignments 12-13|0.0 11-12|0.0.0 9-10|0.0.1 5-6|0 3-4|0.0.2.0 2-3|0.0.2.0.0 0-1|0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:19.894
# ::node	0	probable	5-6
# ::node	0.0	happen-01	12-13
# ::node	0.0.0	accident	11-12
# ::node	0.0.1	time	9-10
# ::node	0.0.2	especially	0-1
# ::node	0.0.2.0	flow-01	3-4
# ::node	0.0.2.0.0	this	2-3
# ::root	0	probable
# ::edge	especially	op1	happen-01	0.0.2	0.0	
# ::edge	flow-01	ARG0	especially	0.0.2.0	0.0.2	
# ::edge	flow-01	mod	this	0.0.2.0	0.0.2.0.0	
# ::edge	happen-01	ARG1	accident	0.0	0.0.0	
# ::edge	happen-01	frequency	time	0.0	0.0.1	
# ::edge	probable	op1	happen-01	0	0.0	
(p / probable 
      :op1 (h / happen-01 
            :ARG1 (a / accident) 
            :frequency (t / time) 
            :op-of (e / especially 
                  :ARG0-of (f / flow-01 
                        :mod (t2 / this)))))

# ::snt as a driver who is generally considered as being more levelheaded than most i want to know whether there is any danger of me being banned for two months if i have an accident here at phoenix
# ::tok as a driver who is generally considered as being more levelheaded than most i want to know whether there is any danger of me being banned for two months if i have an accident here at phoenix
# ::alignments 34-35|0.1.0.0.0 33-34|0.1.0.0 30-31|0.1.0 28-29|0.0.0.1+0.0.0 27-28|0.0.0.0 25-26|0.0 21-22|0 20-21|0.2 16-17|0.1 14-15|0.1.1 13-14|0.1.1.0 12-13|0.1.1.1 6-7|0.0.0.0.0 5-6|0.0.0.0.0.1 2-3|0.0.0.0.0.0.0+0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:20.465
# ::node	0	danger	21-22
# ::node	0.0	ban-01	25-26
# ::node	0.0.0	temporal-quantity	28-29
# ::node	0.0.0.0	2	27-28
# ::node	0.0.0.0.0	consider-01	6-7
# ::node	0.0.0.0.0.0	person	2-3
# ::node	0.0.0.0.0.0.0	drive-01	2-3
# ::node	0.0.0.0.0.1	general	5-6
# ::node	0.0.0.1	month	28-29
# ::node	0.1	know-01	16-17
# ::node	0.1.0	i	30-31
# ::node	0.1.0.0	accident	33-34
# ::node	0.1.0.0.0	here	34-35
# ::node	0.1.1	want-01	14-15
# ::node	0.1.1.0	i	13-14
# ::node	0.1.1.1	most	12-13
# ::node	0.2	any	20-21
# ::root	0	danger
# ::edge	accident	example	i	0.1.0.0	0.1.0	
# ::edge	accident	location	here	0.1.0.0	0.1.0.0.0	
# ::edge	ban-01	ARG0	danger	0.0	0	
# ::edge	ban-01	ARG1	temporal-quantity	0.0	0.0.0	
# ::edge	consider-01	ARG0	person	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	consider-01	ARG1	2	0.0.0.0.0	0.0.0.0	
# ::edge	consider-01	manner	general	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	danger	mod	any	0	0.2	
# ::edge	drive-01	ARG0	person	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	know-01	ARG0	i	0.1	0.1.0	
# ::edge	know-01	ARG1	danger	0.1	0	
# ::edge	temporal-quantity	quant	2	0.0.0	0.0.0.0	
# ::edge	temporal-quantity	unit	month	0.0.0	0.0.0.1	
# ::edge	want-01	ARG0	i	0.1.1	0.1.1.0	
# ::edge	want-01	ARG1	know-01	0.1.1	0.1	
# ::edge	want-01	degree	most	0.1.1	0.1.1.1	
(d / danger 
      :ARG0-of (b / ban-01 
            :ARG1 (t / temporal-quantity 
                  :quant (2 / 2 
                        :ARG1-of (c / consider-01 
                              :ARG0 (p / person 
                                    :ARG0-of (d2 / drive-01)) 
                              :manner (g / general))) 
                  :unit (m / month))) 
      :ARG1-of (k / know-01 
            :ARG0 (i / i 
                  :example-of (a / accident 
                        :location (h / here))) 
            :ARG1-of (w / want-01 
                  :ARG0 (i2 / i) 
                  :degree (m2 / most))) 
      :mod (a2 / any))

# ::snt but violence in local hospitals is on the increase and nurses working in casualty and accident units now regard it as serving on the front line
# ::tok but violence in local hospitals is on the increase and nurses working in casualty and accident units now regard it as serving on the front line
# ::alignments 25-26|0.0.1.2.1 24-25|0.0.1.2.1.0 21-22|0.0.1.2 19-20|0.0.1.1 18-19|0.0.1 17-18|0.0.1.3 16-17|0.0.1.2.0.0.0 15-16|0.0.1.2.0.0.1.1 14-15|0.0.1.2.0.0.1 13-14|0.0.1.2.0.0.1.0 11-12|0.0.1.2.0.0 10-11|0.0.1.2.0 9-10|0.0 8-9|0.0.0 4-5|0.0.1.0.0 3-4|0.0.1.0.0.0 1-2|0.0.1.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:20.679
# ::node	0	contrast-01	0-1
# ::node	0.0	and	9-10
# ::node	0.0.0	increase-01	8-9
# ::node	0.0.1	regard-01	18-19
# ::node	0.0.1.0	violence	1-2
# ::node	0.0.1.0.0	hospital	4-5
# ::node	0.0.1.0.0.0	local	3-4
# ::node	0.0.1.1	it	19-20
# ::node	0.0.1.2	serve-01	21-22
# ::node	0.0.1.2.0	nurse	10-11
# ::node	0.0.1.2.0.0	work-01	11-12
# ::node	0.0.1.2.0.0.0	unit	16-17
# ::node	0.0.1.2.0.0.1	and	14-15
# ::node	0.0.1.2.0.0.1.0	casualty	13-14
# ::node	0.0.1.2.0.0.1.1	accident	15-16
# ::node	0.0.1.2.1	line	25-26
# ::node	0.0.1.2.1.0	front	24-25
# ::node	0.0.1.3	now	17-18
# ::root	0	contrast-01
# ::edge	and	op1	casualty	0.0.1.2.0.0.1	0.0.1.2.0.0.1.0	
# ::edge	and	op1	increase-01	0.0	0.0.0	
# ::edge	and	op2	accident	0.0.1.2.0.0.1	0.0.1.2.0.0.1.1	
# ::edge	and	op2	regard-01	0.0	0.0.1	
# ::edge	contrast-01	ARG2	and	0	0.0	
# ::edge	hospital	mod	local	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	line	mod	front	0.0.1.2.1	0.0.1.2.1.0	
# ::edge	regard-01	ARG0	violence	0.0.1	0.0.1.0	
# ::edge	regard-01	ARG1	it	0.0.1	0.0.1.1	
# ::edge	regard-01	ARG3	serve-01	0.0.1	0.0.1.2	
# ::edge	regard-01	time	now	0.0.1	0.0.1.3	
# ::edge	serve-01	ARG1	nurse	0.0.1.2	0.0.1.2.0	
# ::edge	serve-01	location	line	0.0.1.2	0.0.1.2.1	
# ::edge	violence	location	hospital	0.0.1.0	0.0.1.0.0	
# ::edge	work-01	ARG0	nurse	0.0.1.2.0.0	0.0.1.2.0	
# ::edge	work-01	ARG1	unit	0.0.1.2.0.0	0.0.1.2.0.0.0	
# ::edge	work-01	ARG2	and	0.0.1.2.0.0	0.0.1.2.0.0.1	
(c2 / contrast-01 
      :ARG2 (a3 / and 
            :op1 (i2 / increase-01) 
            :op2 (r / regard-01 
                  :ARG0 (v / violence 
                        :location (h / hospital 
                              :mod (l2 / local))) 
                  :ARG1 (i / it) 
                  :ARG3 (s / serve-01 
                        :ARG1 (n2 / nurse 
                              :ARG0-of (w / work-01 
                                    :ARG1 (u / unit) 
                                    :ARG2 (a2 / and 
                                          :op1 (c / casualty) 
                                          :op2 (a / accident)))) 
                        :location (l / line 
                              :mod (f / front))) 
                  :time (n / now))))

# ::snt a total of 8745 injury accidents were recorded last year
# ::tok a total of 8745 injury accidents were recorded last year
# ::alignments 9-10|0.1 8-9|0.1.0 7-8|0 5-6|0.0 4-5|0.0.0 3-4|0.1.1.0+0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:20.700
# ::node	0	record-01	7-8
# ::node	0.0	accident	5-6
# ::node	0.0.0	injure-01	4-5
# ::node	0.1	year	9-10
# ::node	0.1.0	last	8-9
# ::node	0.1.1	date-entity	3-4
# ::node	0.1.1.0	8745	3-4
# ::root	0	record-01
# ::edge	accident	mod	injure-01	0.0	0.0.0	
# ::edge	date-entity	year	8745	0.1.1	0.1.1.0	
# ::edge	record-01	ARG1	accident	0	0.0	
# ::edge	record-01	time	year	0	0.1	
# ::edge	year	mod	last	0.1	0.1.0	
# ::edge	year	op1	date-entity	0.1	0.1.1	
(r / record-01 
      :ARG1 (a / accident 
            :mod (i / injure-01)) 
      :time (y / year 
            :mod (l / last) 
            :op1 (d / date-entity 
                  :year 8745)))

# ::snt why whats up  theyre saying it wasnt an accident
# ::tok why whats up theyre saying it wasnt an accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:20.701
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt he can t have driven home without being in an accident or being stopped by the police
# ::tok he can t have driven home without being in an accident or being stopped by the police
# ::alignments 16-17|0.0.0 13-14|0.0 11-12|0.0.1 10-11|0.0.1.0 5-6|0.1.1 4-5|0.1 1-2|0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:20.735
# ::node	0	possible	1-2
# ::node	0.0	stop-01	13-14
# ::node	0.0.0	police	16-17
# ::node	0.0.1	or	11-12
# ::node	0.0.1.0	accident	10-11
# ::node	0.1	drive-02	4-5
# ::node	0.1.0	he	0-1
# ::node	0.1.1	home	5-6
# ::root	0	possible
# ::edge	drive-02	ARG0	he	0.1	0.1.0	
# ::edge	drive-02	ARG1	home	0.1	0.1.1	
# ::edge	or	op1	accident	0.0.1	0.0.1.0	
# ::edge	or	op2	stop-01	0.0.1	0.0	
# ::edge	possible	domain	drive-02	0	0.1	
# ::edge	stop-01	ARG0	police	0.0	0.0.0	
# ::edge	stop-01	ARG1	possible	0.0	0	
(p2 / possible 
      :ARG1-of (s / stop-01 
            :ARG0 (p / police) 
            :op-of (o / or 
                  :op1 (a / accident))) 
      :domain (d / drive-02 
            :ARG0 (h2 / he) 
            :ARG1 (h / home)))

# ::snt mr john green 43 of yew cottage aston road bampton the driver of a ford car was taken to the john radcliffe hospital with chest injuries following the accident on the b4030 bicester to eynstone road at the junction with the new m40 motorway bridge
# ::tok mr john green 43 of yew cottage aston road bampton the driver of a ford car was taken to the john radcliffe hospital with chest injuries following the accident on the b4030 bicester to eynstone road at the junction with the new m40 motorway bridge
# ::alignments 44-45|0.0 43-44|0 41-42|0.0.0 35-36|0.0.0.0.1.0.0.1 28-29|0.0.0.0.1.0.0.0 25-26|0.0.0.0 24-25|0.0.0.0.2 22-23|0.0.0.0.0 20-22|0.0.0.0.0.0.0.0+0.0.0.0.0.0.0.1+0.0.0.0.0.0.0+0.0.0.0.0.0 15-16|0.0.0.0.1.0.0 11-12|0.0.0.0.1.0+0.0.0.0.1 8-9|0.0.0.0.1.0.0.0.0 3-4|0.0.0.0.3 2-3|0.0.0.0.4 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:21.121
# ::node	0	motorway	43-44
# ::node	0.0	bridge	44-45
# ::node	0.0.0	new	41-42
# ::node	0.0.0.0	injure-01	25-26
# ::node	0.0.0.0.0	hospital	22-23
# ::node	0.0.0.0.0.0	country	20-22
# ::node	0.0.0.0.0.0.0	name	20-22
# ::node	0.0.0.0.0.0.0.0	"radcliffe"	20-22
# ::node	0.0.0.0.0.0.0.1	"john"	20-22
# ::node	0.0.0.0.1	person	11-12
# ::node	0.0.0.0.1.0	drive-01	11-12
# ::node	0.0.0.0.1.0.0	car	15-16
# ::node	0.0.0.0.1.0.0.0	accident	28-29
# ::node	0.0.0.0.1.0.0.0.0	road	8-9
# ::node	0.0.0.0.1.0.0.1	road	35-36
# ::node	0.0.0.0.2	chest	24-25
# ::node	0.0.0.0.3	43	3-4
# ::node	0.0.0.0.4	green	2-3
# ::root	0	motorway
(m / motorway 
      :mod-of (b / bridge 
            :mod (n / new 
                  :op1 (i / injure-01 
                        :ARG0 (h / hospital 
                              :mod (c2 / country 
                                    :name (n2 / name 
                                          :op1 "radcliffe" 
                                          :op2 "john"))) 
                        :ARG1 (p / person 
                              :ARG0-of (d / drive-01 
                                    :ARG1 (c3 / car 
                                          :domain-of (a / accident 
                                                :poss-of (r2 / road)) 
                                          :mod-of (r / road)))) 
                        :mod (c / chest) 
                        :op-of 43 
                        :op-of (g / green)))))

# ::snt mrs janemarie harrison prosecuting said that police were called to the blenheim pub in st ebbes oxford on july 13 last year after a minor accident involving cooks van
# ::tok mrs janemarie harrison prosecuting said that police were called to the blenheim pub in st ebbes oxford on july 13 last year after a minor accident involving cooks van
# ::alignments 28-29|0.0.0.1.2 26-27|0.0 25-26|0.0.0 24-25|0.0.0.0 22-23|0.0.0.1 21-22|0.0.0.1.0 20-21|0.0.0.1.0.0 19-20|0.0.0.1.1 18-19|0.1.1.0+0.1.1 12-13|0.0.1 6-7|0.1.0 4-5|0 3-4|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:21.342
# ::node	0	say-01	4-5
# ::node	0.0	involve-01	26-27
# ::node	0.0.0	accident	25-26
# ::node	0.0.0.0	minor	24-25
# ::node	0.0.0.1	after	22-23
# ::node	0.0.0.1.0	year	21-22
# ::node	0.0.0.1.0.0	last	20-21
# ::node	0.0.0.1.1	13	19-20
# ::node	0.0.0.1.2	van	28-29
# ::node	0.0.1	pub	12-13
# ::node	0.1	prosecute-01	3-4
# ::node	0.1.0	police	6-7
# ::node	0.1.1	date-entity	18-19
# ::node	0.1.1.0	7	18-19
# ::root	0	say-01
# ::edge	13	mod	after	0.0.0.1.1	0.0.0.1	
# ::edge	accident	mod	minor	0.0.0	0.0.0.0	
# ::edge	after	op1	accident	0.0.0.1	0.0.0	
# ::edge	after	op2	van	0.0.0.1	0.0.0.1.2	
# ::edge	date-entity	month	7	0.1.1	0.1.1.0	
# ::edge	date-entity	op1	prosecute-01	0.1.1	0.1	
# ::edge	involve-01	ARG2	accident	0.0	0.0.0	
# ::edge	prosecute-01	ARG1	say-01	0.1	0	
# ::edge	prosecute-01	ARG2	police	0.1	0.1.0	
# ::edge	pub	op1	involve-01	0.0.1	0.0	
# ::edge	say-01	ARG1	involve-01	0	0.0	
# ::edge	year	location	after	0.0.0.1.0	0.0.0.1	
# ::edge	year	mod	last	0.0.0.1.0	0.0.0.1.0.0	
(s / say-01 
      :ARG1 (i / involve-01 
            :ARG2 (a / accident 
                  :mod (m / minor) 
                  :op-of (a2 / after 
                        :location-of (y / year 
                              :mod (l / last)) 
                        :mod-of 13 
                        :op1 (v / van))) 
            :op-of (p / pub)) 
      :ARG1-of (p3 / prosecute-01 
            :ARG2 (p2 / police) 
            :op-of (d / date-entity 
                  :month 7)))

# ::snt well i may have wanted him to have a nasty accident but ellip
# ::tok well i may have wanted him to have a nasty accident but ellip
# ::alignments 11-12|0 10-11|0.0 9-10|0.0.1 4-5|0.0.0 2-3|0.0.0.2.0+0.0.0.2 1-2|0.0.0.0 0-1|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:21.445
# ::node	0	contrast-01	11-12
# ::node	0.0	accident	10-11
# ::node	0.0.0	want-01	4-5
# ::node	0.0.0.0	i	1-2
# ::node	0.0.0.1	well	0-1
# ::node	0.0.0.2	date-entity	2-3
# ::node	0.0.0.2.0	5	2-3
# ::node	0.0.1	nasty	9-10
# ::root	0	contrast-01
# ::edge	accident	mod	nasty	0.0	0.0.1	
# ::edge	contrast-01	ARG1	accident	0	0.0	
# ::edge	date-entity	domain	want-01	0.0.0.2	0.0.0	
# ::edge	date-entity	month	5	0.0.0.2	0.0.0.2.0	
# ::edge	want-01	ARG0	i	0.0.0	0.0.0.0	
# ::edge	want-01	ARG1	well	0.0.0	0.0.0.1	
# ::edge	want-01	ARG2	accident	0.0.0	0.0	
(c / contrast-01 
      :ARG1 (a / accident 
            :ARG2-of (w / want-01 
                  :ARG0 (i / i) 
                  :ARG1 (w2 / well) 
                  :domain-of (d / date-entity 
                        :month 5)) 
            :mod (n / nasty)))

# ::snt her trainer ted edgar was on hand to give her advice despite breaking his shoulder in a hunting accident last saturday
# ::tok her trainer ted edgar was on hand to give her advice despite breaking his shoulder in a hunting accident last saturday
# ::alignments 20-21|0.1.0.0 19-20|0.0.0 18-19|0.1 17-18|0.1.0 14-15|0.0 12-13|0 10-11|0.2.1 8-9|0.2 6-7|0.2.1.0 3-4|0.2.0.1.0+0.2.0.1+0.2.0 1-2|0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:21.542
# ::node	0	break-01	12-13
# ::node	0.0	shoulder	14-15
# ::node	0.0.0	last	19-20
# ::node	0.1	accident	18-19
# ::node	0.1.0	hunt-01	17-18
# ::node	0.1.0.0	saturday	20-21
# ::node	0.2	give-01	8-9
# ::node	0.2.0	person	3-4
# ::node	0.2.0.0	train-01	1-2
# ::node	0.2.0.1	name	3-4
# ::node	0.2.0.1.0	"Edgar"	3-4
# ::node	0.2.1	advise-01	10-11
# ::node	0.2.1.0	hand	6-7
# ::root	0	break-01
# ::edge	accident	location	hunt-01	0.1	0.1.0	
# ::edge	advise-01	ARG1	hand	0.2.1	0.2.1.0	
# ::edge	break-01	ARG1	shoulder	0	0.0	
# ::edge	break-01	ARG2	accident	0	0.1	
# ::edge	give-01	ARG0	person	0.2	0.2.0	
# ::edge	give-01	ARG1	advise-01	0.2	0.2.1	
# ::edge	give-01	ARG2	break-01	0.2	0	
# ::edge	hunt-01	ARG1	saturday	0.1.0	0.1.0.0	
# ::edge	name	op1	"Edgar"	0.2.0.1	0.2.0.1.0	
# ::edge	person	name	name	0.2.0	0.2.0.1	
# ::edge	shoulder	mod	last	0.0	0.0.0	
# ::edge	train-01	ARG0	person	0.2.0.0	0.2.0	
(b / break-01 
      :ARG1 (s2 / shoulder 
            :mod (l / last)) 
      :ARG2 (a / accident 
            :location (h / hunt-01 
                  :ARG1 (s / saturday))) 
      :ARG2-of (g / give-01 
            :ARG0 (p / person 
                  :ARG0-of (t / train-01) 
                  :name (n / name 
                        :op1 "Edgar")) 
            :ARG1 (a2 / advise-01 
                  :ARG1 (h2 / hand))))

# ::snt can i have more than one personal accident policy  yes but if you already have a sun alliance personal accident policy which was also offered to you with guaranteed acceptance you will not be able to claim benefits under both policies, however if you feel that the benefits of the midland personal accident plan are more suited to your needs you may take advantage of this offer and cancel your existing policy
# ::tok can i have more than one personal accident policy yes but if you already have a sun alliance personal accident policy which was also offered to you with guaranteed acceptance you will not be able to claim benefits under both policies , however if you feel that the benefits of the midland personal accident plan are more suited to your needs you may take advantage of this offer and cancel your existing policy
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:21.543
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt there could be a small accident if you play sport
# ::tok there could be a small accident if you play sport
# ::alignments 9-10|0.0.0.0.0 8-9|0.0.0.0 7-8|0.0.0 5-6|0.0 4-5|0.0.1 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:21.668
# ::node	0	possible	1-2
# ::node	0.0	accident	5-6
# ::node	0.0.0	you	7-8
# ::node	0.0.0.0	play-01	8-9
# ::node	0.0.0.0.0	sport	9-10
# ::node	0.0.1	small	4-5
# ::root	0	possible
# ::edge	accident	domain	you	0.0	0.0.0	
# ::edge	accident	mod	small	0.0	0.0.1	
# ::edge	play-01	ARG0	you	0.0.0.0	0.0.0	
# ::edge	play-01	ARG1	sport	0.0.0.0	0.0.0.0.0	
# ::edge	possible	domain	accident	0	0.0	
(p2 / possible 
      :domain (a / accident 
            :domain (y / you 
                  :ARG0-of (p / play-01 
                        :ARG1 (s / sport))) 
            :mod (s2 / small)))

# ::snt if we get a solicitors inquiry about an accident and we find an ambulance should not have been on the road we will have to say it was not authorised he said
# ::tok if we get a solicitors inquiry about an accident and we find an ambulance should not have been on the road we will have to say it was not authorised he said
# ::alignments 31-32|0.1.1 30-31|0.1.1.0 29-30|0.1 26-27|0.1.0 25-26|0 21-22|0.0 20-21|0.2 14-15|0.1.1.1.1 13-14|0.1.1.1.1.1 10-11|0.1.1.1.1.0 9-10|0.1.1.1 8-9|0.1.1.1.0.1 5-6|0.1.1.1.0 1-2|0.1.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:22.677
# ::node	0	say-01	25-26
# ::node	0.0	we	21-22
# ::node	0.1	authorize-01	29-30
# ::node	0.1.0	it	26-27
# ::node	0.1.1	say-01	31-32
# ::node	0.1.1.0	he	30-31
# ::node	0.1.1.1	and	9-10
# ::node	0.1.1.1.0	inquire-01	5-6
# ::node	0.1.1.1.0.0	we	1-2
# ::node	0.1.1.1.0.1	accident	8-9
# ::node	0.1.1.1.1	recommend-01	14-15
# ::node	0.1.1.1.1.0	we	10-11
# ::node	0.1.1.1.1.1	ambulance	13-14
# ::node	0.2	road	20-21
# ::root	0	say-01
# ::edge	and	op1	inquire-01	0.1.1.1	0.1.1.1.0	
# ::edge	and	op2	recommend-01	0.1.1.1	0.1.1.1.1	
# ::edge	authorize-01	ARG0	it	0.1	0.1.0	
# ::edge	authorize-01	ARG1	say-01	0.1	0.1.1	
# ::edge	inquire-01	ARG0	we	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	inquire-01	ARG1	accident	0.1.1.1.0	0.1.1.1.0.1	
# ::edge	recommend-01	ARG0	we	0.1.1.1.1	0.1.1.1.1.0	
# ::edge	recommend-01	ARG1	ambulance	0.1.1.1.1	0.1.1.1.1.1	
# ::edge	say-01	ARG0	he	0.1.1	0.1.1.0	
# ::edge	say-01	ARG0	we	0	0.0	
# ::edge	say-01	ARG1	and	0.1.1	0.1.1.1	
# ::edge	say-01	ARG1	authorize-01	0	0.1	
# ::edge	say-01	ARG2	road	0	0.2	
(s2 / say-01 
      :ARG0 (w / we) 
      :ARG1 (a / authorize-01 
            :ARG0 (i / it) 
            :ARG1 (s / say-01 
                  :ARG0 (h / he) 
                  :ARG1 (a3 / and 
                        :op1 (i2 / inquire-01 
                              :ARG0 (w3 / we) 
                              :ARG1 (a4 / accident)) 
                        :op2 (r2 / recommend-01 
                              :ARG0 (w2 / we) 
                              :ARG1 (a2 / ambulance))))) 
      :ARG2 (r / road))

# ::snt   as part of our assessment of the situation in launton road counts will be taken of pedestrians crossing and traffic passing to see whether the criteria are met and also we shall look at the accident records for the last five years particularly with regard to pedestrians
# ::tok as part of our assessment of the situation in launton road counts will be taken of pedestrians crossing and traffic passing to see whether the criteria are met and also we shall look at the accident records for the last five years particularly with regard to pedestrians
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:22.678
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt its a serious campaign to improve road safety and prevent accident and injury
# ::tok its a serious campaign to improve road safety and prevent accident and injury
# ::alignments 12-13|0.1 11-12|0 10-11|0.0.0.1 9-10|0.0 8-9|0.0.0 7-8|0.0.0.0.1 6-7|0.0.0.0.1.0 5-6|0.0.0.0 3-4|0.0.0.0.0 2-3|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:22.983
# ::node	0	and	11-12
# ::node	0.0	prevent-01	9-10
# ::node	0.0.0	and	8-9
# ::node	0.0.0.0	improve-01	5-6
# ::node	0.0.0.0.0	campaign-01	3-4
# ::node	0.0.0.0.0.0	serious	2-3
# ::node	0.0.0.0.1	safe-41	7-8
# ::node	0.0.0.0.1.0	road	6-7
# ::node	0.0.0.1	accident	10-11
# ::node	0.1	injure-01	12-13
# ::root	0	and
# ::edge	and	op1	improve-01	0.0.0	0.0.0.0	
# ::edge	and	op1	injure-01	0	0.1	
# ::edge	and	op2	accident	0.0.0	0.0.0.1	
# ::edge	campaign-01	mod	serious	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	improve-01	ARG0	campaign-01	0.0.0.0	0.0.0.0.0	
# ::edge	improve-01	ARG1	safe-41	0.0.0.0	0.0.0.0.1	
# ::edge	prevent-01	ARG0	and	0.0	0.0.0	
# ::edge	prevent-01	ARG1	and	0.0	0	
# ::edge	safe-41	ARG1	road	0.0.0.0.1	0.0.0.0.1.0	
(a / and 
      :ARG1-of (p / prevent-01 
            :ARG0 (a3 / and 
                  :op1 (i2 / improve-01 
                        :ARG0 (c / campaign-01 
                              :mod (s2 / serious)) 
                        :ARG1 (s / safe-41 
                              :ARG1 (r / road))) 
                  :op2 (a2 / accident))) 
      :op1 (i / injure-01))

# ::snt oxford magistrates court heard how gurmit singh jagdev 35 of birmingham was arrested after an accident at the green road roundabout headington oxford
# ::tok oxford magistrates court heard how gurmit singh jagdev 35 of birmingham was arrested after an accident at the green road roundabout headington oxford
# ::alignments 19-20|0.2.0.0 18-19|0.2.0.0.0 15-16|0.2.0 13-14|0.2 12-13|0 10-11|0.0.0.0+0.0.0+0.0 8-9|0.1.0.0 3-4|0.1.0 2-3|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:23.071
# ::node	0	arrest-01	12-13
# ::node	0.0	city	10-11
# ::node	0.0.0	name	10-11
# ::node	0.0.0.0	"Birmingham"	10-11
# ::node	0.1	court	2-3
# ::node	0.1.0	hear-01	3-4
# ::node	0.1.0.0	35	8-9
# ::node	0.2	after	13-14
# ::node	0.2.0	accident	15-16
# ::node	0.2.0.0	road	19-20
# ::node	0.2.0.0.0	green	18-19
# ::root	0	arrest-01
# ::edge	accident	location	road	0.2.0	0.2.0.0	
# ::edge	after	op1	accident	0.2	0.2.0	
# ::edge	arrest-01	ARG0	city	0	0.0	
# ::edge	arrest-01	ARG1	court	0	0.1	
# ::edge	arrest-01	time	after	0	0.2	
# ::edge	city	name	name	0.0	0.0.0	
# ::edge	hear-01	ARG0	court	0.1.0	0.1	
# ::edge	hear-01	ARG1	35	0.1.0	0.1.0.0	
# ::edge	name	op1	"Birmingham"	0.0.0	0.0.0.0	
# ::edge	road	mod	green	0.2.0.0	0.2.0.0.0	
(a3 / arrest-01 
      :ARG0 (c / city 
            :name (n / name 
                  :op1 "Birmingham")) 
      :ARG1 (c2 / court 
            :ARG0-of (h / hear-01 
                  :ARG1 35)) 
      :time (a2 / after 
            :op1 (a / accident 
                  :location (r / road 
                        :mod (g / green)))))

# ::snt medical evidence has shown that injuries said to have been caused by falls were in fact suffered in fights football matches and fishing accidents
# ::tok medical evidence has shown that injuries said to have been caused by falls were in fact suffered in fights football matches and fishing accidents
# ::alignments 23-24|0.0.0 22-23|0.0.0.0 21-22|0.0 20-21|0.0.1.0 19-20|0.0.1.0.1 18-19|0.0.1.0.0 16-17|0.0.1 15-16|0.0.1.1 10-11|0 6-7|0.1 5-6|0.1.0 3-4|0.1.1 1-2|0.1.1.0 0-1|0.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:23.238
# ::node	0	cause-01	10-11
# ::node	0.0	and	21-22
# ::node	0.0.0	accident	23-24
# ::node	0.0.0.0	fish-01	22-23
# ::node	0.0.1	suffer-01	16-17
# ::node	0.0.1.0	match	20-21
# ::node	0.0.1.0.0	fight-01	18-19
# ::node	0.0.1.0.1	football	19-20
# ::node	0.0.1.1	fact	15-16
# ::node	0.1	say-01	6-7
# ::node	0.1.0	injure-01	5-6
# ::node	0.1.1	show-01	3-4
# ::node	0.1.1.0	evidence-01	1-2
# ::node	0.1.1.0.0	medicine	0-1
# ::root	0	cause-01
# ::edge	accident	mod	fish-01	0.0.0	0.0.0.0	
# ::edge	and	op1	accident	0.0	0.0.0	
# ::edge	cause-01	ARG1	and	0	0.0	
# ::edge	evidence-01	mod	medicine	0.1.1.0	0.1.1.0.0	
# ::edge	fight-01	ARG1	match	0.0.1.0.0	0.0.1.0	
# ::edge	match	mod	football	0.0.1.0	0.0.1.0.1	
# ::edge	say-01	ARG0	injure-01	0.1	0.1.0	
# ::edge	say-01	ARG1	cause-01	0.1	0	
# ::edge	show-01	ARG0	evidence-01	0.1.1	0.1.1.0	
# ::edge	show-01	ARG1	say-01	0.1.1	0.1	
# ::edge	suffer-01	ARG0	match	0.0.1	0.0.1.0	
# ::edge	suffer-01	ARG1	fact	0.0.1	0.0.1.1	
# ::edge	suffer-01	source	and	0.0.1	0.0	
(c / cause-01 
      :ARG1 (a2 / and 
            :op1 (a / accident 
                  :mod (f / fish-01)) 
            :source-of (s / suffer-01 
                  :ARG0 (m / match 
                        :ARG1-of (f3 / fight-01) 
                        :mod (f2 / football)) 
                  :ARG1 (f4 / fact))) 
      :ARG1-of (s2 / say-01 
            :ARG0 (i / injure-01) 
            :ARG1-of (s3 / show-01 
                  :ARG0 (e / evidence-01 
                        :mod (m2 / medicine)))))

# ::snt the man suffered minor injuries in the accident at 12
# ::tok the man suffered minor injuries in the accident at 12
# ::alignments 9-10|0.1.2 7-8|0.1.0 4-5|0.1 3-4|0.1.1 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:23.257
# ::node	0	suffer-01	2-3
# ::node	0.0	man	1-2
# ::node	0.1	injure-01	4-5
# ::node	0.1.0	accident	7-8
# ::node	0.1.1	minor	3-4
# ::node	0.1.2	12	9-10
# ::root	0	suffer-01
# ::edge	injure-01	ARG1	accident	0.1	0.1.0	
# ::edge	injure-01	mod	minor	0.1	0.1.1	
# ::edge	injure-01	time	12	0.1	0.1.2	
# ::edge	suffer-01	ARG0	man	0	0.0	
# ::edge	suffer-01	ARG1	injure-01	0	0.1	
(s / suffer-01 
      :ARG0 (m2 / man) 
      :ARG1 (i / injure-01 
            :ARG1 (a / accident) 
            :mod (m / minor) 
            :time 12))

# ::snt police waited for 20 minutes to give thompson a breath test after hearing he had a glass of whisky after the accident
# ::tok police waited for 20 minutes to give thompson a breath test after hearing he had a glass of whisky after the accident
# ::alignments 21-22|0.0.1.0.2.0 19-20|0.0.1.0.2 16-17|0 13-14|0.0.0 12-13|0.0 11-12|0.0.1 10-11|0.0.1.0 9-10|0.0.1.0.0 6-7|0.0.1.0.1 4-5|0.0.1.0.1.1+0.0.1.0.1.1.0 3-4|0.0.1.0.1.1.0.0 1-2|0.0.1.0.1.0.0 0-1|0.0.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:23.441
# ::node	0	glass	16-17
# ::node	0.0	hear-01	12-13
# ::node	0.0.0	he	13-14
# ::node	0.0.1	after	11-12
# ::node	0.0.1.0	test-01	10-11
# ::node	0.0.1.0.0	breathe-01	9-10
# ::node	0.0.1.0.1	give-01	6-7
# ::node	0.0.1.0.1.0	police	0-1
# ::node	0.0.1.0.1.0.0	wait-01	1-2
# ::node	0.0.1.0.1.1	minute	4-5
# ::node	0.0.1.0.1.1.0	temporal-quantity	4-5
# ::node	0.0.1.0.1.1.0.0	20	3-4
# ::node	0.0.1.0.2	after	19-20
# ::node	0.0.1.0.2.0	accident	21-22
# ::root	0	glass
(g / glass 
      :ARG1-of (h2 / hear-01 
            :ARG0 (h / he) 
            :op-of (a3 / after 
                  :time-of (t / test-01 
                        :ARG1 (b / breathe-01) 
                        :ARG1-of (g2 / give-01 
                              :ARG0 (p / police 
                                    :ARG0-of (w / wait-01)) 
                              :purpose-of (m / minute 
                                    :unit-of (t2 / temporal-quantity 
                                          :quant 20))) 
                        :time (a2 / after 
                              :op1 (a / accident))))))

# ::snt at a meeting of the highways and traffic committee yesterday councillors heard that high street in particular had a long accident record
# ::tok at a meeting of the highways and traffic committee yesterday councillors heard that high street in particular had a long accident record
# ::alignments 21-22|0.1 20-21|0.1.0 16-17|0.2.0 14-15|0.0 13-14|0.0.0 11-12|0 9-10|0.2.2.1 8-9|0.2.2 7-8|0.2.2.0 6-7|0.2 5-6|0.2.1 2-3|0.2.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:23.515
# ::node	0	hear-01	11-12
# ::node	0.0	street	14-15
# ::node	0.0.0	high	13-14
# ::node	0.1	record	21-22
# ::node	0.1.0	accident	20-21
# ::node	0.2	and	6-7
# ::node	0.2.0	particular	16-17
# ::node	0.2.1	highway	5-6
# ::node	0.2.1.0	meet-03	2-3
# ::node	0.2.2	committee	8-9
# ::node	0.2.2.0	traffic	7-8
# ::node	0.2.2.1	yesterday	9-10
# ::root	0	hear-01
# ::edge	and	mod	particular	0.2	0.2.0	
# ::edge	and	op1	highway	0.2	0.2.1	
# ::edge	and	op2	committee	0.2	0.2.2	
# ::edge	and	op3	hear-01	0.2	0	
# ::edge	committee	mod	traffic	0.2.2	0.2.2.0	
# ::edge	hear-01	ARG0	street	0	0.0	
# ::edge	hear-01	ARG1	record	0	0.1	
# ::edge	meet-03	ARG1	highway	0.2.1.0	0.2.1	
# ::edge	record	mod	accident	0.1	0.1.0	
# ::edge	street	mod	high	0.0	0.0.0	
# ::edge	yesterday	mod	committee	0.2.2.1	0.2.2	
(h2 / hear-01 
      :ARG0 (s / street 
            :mod (h / high)) 
      :ARG1 (r / record 
            :mod (a / accident)) 
      :op-of (a2 / and 
            :mod (p / particular) 
            :op1 (h3 / highway 
                  :ARG1-of (m / meet-03)) 
            :op2 (c / committee 
                  :mod (t / traffic) 
                  :mod-of (y / yesterday))))

# ::snt   his close friends say he is motivated in part by the death of his teenage son in a mountaineering accident
# ::tok his close friends say he is motivated in part by the death of his teenage son in a mountaineering accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:23.515
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt will that too be agentrelative  perhaps not but it is no accident that that cannot be the main goal of more than a few
# ::tok will that too be agentrelative perhaps not but it is no accident that that cannot be the main goal of more than a few
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:23.517
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt a postmortem examination of the occupants revealed nothing which contributed to the accident
# ::tok a postmortem examination of the occupants revealed nothing which contributed to the accident
# ::alignments 12-13|0.1.0.0 9-10|0.1.0 7-8|0.1 6-7|0 5-6|0.0.0.0+0.0.0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:23.548
# ::node	0	reveal-01	6-7
# ::node	0.0	examine-01	2-3
# ::node	0.0.0	person	5-6
# ::node	0.0.0.0	occupy-01	5-6
# ::node	0.1	nothing	7-8
# ::node	0.1.0	contribute-01	9-10
# ::node	0.1.0.0	accident	12-13
# ::root	0	reveal-01
# ::edge	contribute-01	ARG1	nothing	0.1.0	0.1	
# ::edge	contribute-01	ARG2	accident	0.1.0	0.1.0.0	
# ::edge	examine-01	ARG1	person	0.0	0.0.0	
# ::edge	occupy-01	ARG0	person	0.0.0.0	0.0.0	
# ::edge	reveal-01	ARG0	examine-01	0	0.0	
# ::edge	reveal-01	ARG1	nothing	0	0.1	
(r / reveal-01 
      :ARG0 (e / examine-01 
            :ARG1 (p / person 
                  :ARG0-of (o / occupy-01))) 
      :ARG1 (n / nothing 
            :ARG1-of (c / contribute-01 
                  :ARG2 (a / accident))))

# ::snt if he called round and discovered her what then  a nasty accident
# ::tok if he called round and discovered her what then a nasty accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:23.548
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt a british railways board spokesman said it was a generous offer in line with our policy of making fair offers of compensation to those bereaved in the clapham accident
# ::tok a british railways board spokesman said it was a generous offer in line with our policy of making fair offers of compensation to those bereaved in the clapham accident
# ::alignments 28-29|0.1.1.0.0.2 21-22|0.1.1.0.0.0 19-20|0.1.1.0.0 18-19|0.1.1.0.0.1 15-16|0.1.1.0 12-13|0.1.1 10-11|0.1 9-10|0.1.2 6-7|0.0 5-6|0 4-5|0.1.0.1+0.1.0 2-3|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:23.763
# ::node	0	say-01	5-6
# ::node	0.0	it	6-7
# ::node	0.1	offer-01	10-11
# ::node	0.1.0	have-org-role-91	4-5
# ::node	0.1.0.0	railway	2-3
# ::node	0.1.0.1	spokesman	4-5
# ::node	0.1.1	line	12-13
# ::node	0.1.1.0	policy	15-16
# ::node	0.1.1.0.0	offer-01	19-20
# ::node	0.1.1.0.0.0	compensate-01	21-22
# ::node	0.1.1.0.0.1	fair	18-19
# ::node	0.1.1.0.0.2	accident	28-29
# ::node	0.1.2	generous-41	9-10
# ::root	0	say-01
# ::edge	accident	prep-for	offer-01	0.1.1.0.0.2	0.1.1.0.0	
# ::edge	generous-41	ARG1	offer-01	0.1.2	0.1	
# ::edge	have-org-role-91	ARG1	railway	0.1.0	0.1.0.0	
# ::edge	have-org-role-91	ARG2	spokesman	0.1.0	0.1.0.1	
# ::edge	line	poss	policy	0.1.1	0.1.1.0	
# ::edge	offer-01	ARG0	have-org-role-91	0.1	0.1.0	
# ::edge	offer-01	ARG0	policy	0.1.1.0.0	0.1.1.0	
# ::edge	offer-01	ARG1	compensate-01	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	offer-01	ARG1	line	0.1	0.1.1	
# ::edge	offer-01	mod	fair	0.1.1.0.0	0.1.1.0.0.1	
# ::edge	say-01	ARG0	it	0	0.0	
# ::edge	say-01	ARG1	offer-01	0	0.1	
(s / say-01 
      :ARG0 (i / it) 
      :ARG1 (o2 / offer-01 
            :ARG0 (h / have-org-role-91 
                  :ARG1 (r / railway) 
                  :ARG2 (s2 / spokesman)) 
            :ARG1 (l / line 
                  :poss (p / policy 
                        :ARG0-of (o / offer-01 
                              :ARG1 (c / compensate-01) 
                              :mod (f / fair) 
                              :prep-for-of (a / accident)))) 
            :ARG1-of (g / generous-41)))

# ::snt the prosecution followed an accident at haslingdon near preston in may 1988 in which george kenyon 25 an employee was killed in a plastics crumbling machine
# ::tok the prosecution followed an accident at haslingdon near preston in may 1988 in which george kenyon 25 an employee was killed in a plastics crumbling machine
# ::alignments 25-26|0.2.0.1 20-21|0.2.0 18-19|0.2.0.0.0+0.2.0.0 16-17|0.0 10-12|0.1.0.1+0.1.0.0+0.1.0 7-8|0.3 4-5|0.2 2-3|0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:24.068
# ::node	0	follow-01	2-3
# ::node	0.0	25	16-17
# ::node	0.1	prosecute-01	1-2
# ::node	0.1.0	date-entity	10-12
# ::node	0.1.0.0	5	10-12
# ::node	0.1.0.1	1988	10-12
# ::node	0.2	accident	4-5
# ::node	0.2.0	kill-01	20-21
# ::node	0.2.0.0	person	18-19
# ::node	0.2.0.0.0	employ-01	18-19
# ::node	0.2.0.1	machine	25-26
# ::node	0.3	near	7-8
# ::root	0	follow-01
# ::edge	date-entity	month	5	0.1.0	0.1.0.0	
# ::edge	date-entity	year	1988	0.1.0	0.1.0.1	
# ::edge	employ-01	ARG1	person	0.2.0.0.0	0.2.0.0	
# ::edge	follow-01	ARG0	25	0	0.0	
# ::edge	follow-01	ARG1	prosecute-01	0	0.1	
# ::edge	follow-01	ARG2	accident	0	0.2	
# ::edge	follow-01	time	near	0	0.3	
# ::edge	kill-01	ARG0	accident	0.2.0	0.2	
# ::edge	kill-01	ARG1	person	0.2.0	0.2.0.0	
# ::edge	kill-01	ARG2	machine	0.2.0	0.2.0.1	
# ::edge	prosecute-01	ARG0	date-entity	0.1	0.1.0	
(f / follow-01 
      :ARG0 25 
      :ARG1 (p2 / prosecute-01 
            :ARG0 (d / date-entity 
                  :month 5 
                  :year 1988)) 
      :ARG2 (a / accident 
            :ARG0-of (k / kill-01 
                  :ARG1 (p / person 
                        :ARG1-of (e / employ-01)) 
                  :ARG2 (m / machine))) 
      :time (n / near))

# ::snt to provide an even higher level of protection for our customers we will double the amount payable on death after an accident if both husband and wife die as the result of the same accident, and you will also receive a special convalescence payment of up to 800 if you remain in hospital for 10 or more days after an accident, we realise that the degree of protection needed varies from one person to another and so have introduced two levels of cover into the midland personal accident plan gold cover and silver cover
# ::tok to provide an even higher level of protection for our customers we will double the amount payable on death after an accident if both husband and wife die as the result of the same accident , and you will also receive a special convalescence payment of up to 800 if you remain in hospital for 10 or more days after an accident , we realise that the degree of protection needed varies from one person to another and so have introduced two levels of cover into the midland personal accident plan gold cover and silver cover
# ::alignments 94-95|0.1.1.0.0.0.0 93-94|0.1.3.0 91-92|0.1.1.0.0.0.2 90-91|0.1.1.0.0.0 89-90|0.1.1.0.0.0.1 88-89|0.1.1.0.0.0.1.0 82-83|0.1.1.1 81-82|0.1.1.1.0 80-81|0.1.3 78-79|0.1.0.0 77-78|0.1 76-77|0.1.2.1 74-75|0.1.2 70-71|0.1.1 69-70|0.1.1.0.0 67-68|0.1.1.0 64-65|0 63-64|0.0 61-62|0.1.2.0.2.0 59-60|0.1.2.0.2 58-59|0.0.1+0.0.1.0 56-57|0.1.0 55-56|0.1.2.0.3.4.1.0.0.0 53-54|0.1.2.0.1 51-52|0.1.2.0 50-51|0.1.2.0.0 48-49|0.1.2.0.3.5 42-43|0.1.2.0.3.4.0.0 40-41|0.1.2.0.3 39-40|0.1.2.0.3.2 37-38|0.1.2.0.3.0 36-37|0.1.2.0.3.3 34-35|0.1.2.0.3.4.1.0 33-34|0.1.2.0.3.4.1.0.0 30-31|0.1.2.0.3.4.1 27-28|0.1.2.0.3.3.1 26-27|0.1.2.0.3.3.0.0.0+0.1.2.0.3.3.0.0 25-26|0.1.2.0.3.4 24-25|0.1.2.0.3.3.1.0.1.0+0.1.2.0.3.3.1.0.1 23-24|0.1.2.0.3.3.0 21-22|0.1.2.0.3.4.2.0 19-20|0.1.2.0.3.4.2 18-19|0.1.2.0.3.4.0 15-16|0.1.2.0.3.1 13-14|0.1.2.0.3.3.1.0.0 11-12|0.1.2.0.3.3.1.0 10-11|0.0.0.0 7-8|0.0.0.1.1 5-6|0.0.0.1 4-5|0.0.0.1.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:33.328
# ::node	0	realize-01	64-65
# ::node	0.0	we	63-64
# ::node	0.0.0	provide-01	1-2
# ::node	0.0.0.0	customer	10-11
# ::node	0.0.0.1	level	5-6
# ::node	0.0.0.1.0	high	4-5
# ::node	0.0.0.1.1	protect-01	7-8
# ::node	0.0.1	day	58-59
# ::node	0.0.1.0	temporal-quantity	58-59
# ::node	0.1	and	77-78
# ::node	0.1.0	or	56-57
# ::node	0.1.0.0	so	78-79
# ::node	0.1.1	need-01	70-71
# ::node	0.1.1.0	degree	67-68
# ::node	0.1.1.0.0	protect-01	69-70
# ::node	0.1.1.0.0.0	plan-01	90-91
# ::node	0.1.1.0.0.0.0	silver	94-95
# ::node	0.1.1.0.0.0.1	accident	89-90
# ::node	0.1.1.0.0.0.1.0	personal	88-89
# ::node	0.1.1.0.0.0.2	gold	91-92
# ::node	0.1.1.1	level	82-83
# ::node	0.1.1.1.0	2	81-82
# ::node	0.1.2	person	74-75
# ::node	0.1.2.0	remain-01	51-52
# ::node	0.1.2.0.0	you	50-51
# ::node	0.1.2.0.1	hospital	53-54
# ::node	0.1.2.0.2	after	59-60
# ::node	0.1.2.0.2.0	accident	61-62
# ::node	0.1.2.0.3	receive-01	40-41
# ::node	0.1.2.0.3.0	you	37-38
# ::node	0.1.2.0.3.1	amount	15-16
# ::node	0.1.2.0.3.2	also	39-40
# ::node	0.1.2.0.3.3	and	36-37
# ::node	0.1.2.0.3.3.0	both	23-24
# ::node	0.1.2.0.3.3.0.0	have-rel-role-91	26-27
# ::node	0.1.2.0.3.3.0.0.0	wife	26-27
# ::node	0.1.2.0.3.3.1	die-01	27-28
# ::node	0.1.2.0.3.3.1.0	we	11-12
# ::node	0.1.2.0.3.3.1.0.0	double	13-14
# ::node	0.1.2.0.3.3.1.0.1	have-rel-role-91	24-25
# ::node	0.1.2.0.3.3.1.0.1.0	husband	24-25
# ::node	0.1.2.0.3.4	and	25-26
# ::node	0.1.2.0.3.4.0	die-01	18-19
# ::node	0.1.2.0.3.4.0.0	special	42-43
# ::node	0.1.2.0.3.4.1	result-01	30-31
# ::node	0.1.2.0.3.4.1.0	accident	34-35
# ::node	0.1.2.0.3.4.1.0.0	same-41	33-34
# ::node	0.1.2.0.3.4.1.0.0.0	10	55-56
# ::node	0.1.2.0.3.4.2	after	19-20
# ::node	0.1.2.0.3.4.2.0	accident	21-22
# ::node	0.1.2.0.3.5	800	48-49
# ::node	0.1.2.1	another	76-77
# ::node	0.1.3	introduce-02	80-81
# ::node	0.1.3.0	and	93-94
# ::root	0	realize-01
# ::edge	accident	mod	personal	0.1.1.0.0.0.1	0.1.1.0.0.0.1.0	
# ::edge	after	op1	accident	0.1.2.0.2	0.1.2.0.2.0	
# ::edge	after	op1	accident	0.1.2.0.3.4.2	0.1.2.0.3.4.2.0	
# ::edge	and	op1	both	0.1.2.0.3.3	0.1.2.0.3.3.0	
# ::edge	and	op1	or	0.1	0.1.0	
# ::edge	and	op1	receive-01	0.1.2.0.3.4	0.1.2.0.3	
# ::edge	and	op2	die-01	0.1.2.0.3.3	0.1.2.0.3.3.1	
# ::edge	and	op2	need-01	0.1	0.1.1	
# ::edge	and	op3	person	0.1	0.1.2	
# ::edge	and	op3	receive-01	0.1.2.0.3.3	0.1.2.0.3	
# ::edge	and	op4	introduce-02	0.1	0.1.3	
# ::edge	and	time	after	0.1.2.0.3.4	0.1.2.0.3.4.2	
# ::edge	day	poss	we	0.0.1	0.0	
# ::edge	die-01	ARG0	special	0.1.2.0.3.4.0	0.1.2.0.3.4.0.0	
# ::edge	die-01	ARG1	and	0.1.2.0.3.4.0	0.1.2.0.3.4	
# ::edge	die-01	ARG1	we	0.1.2.0.3.3.1	0.1.2.0.3.3.1.0	
# ::edge	double	ARG0	we	0.1.2.0.3.3.1.0.0	0.1.2.0.3.3.1.0	
# ::edge	gold	topic	plan-01	0.1.1.0.0.0.2	0.1.1.0.0.0	
# ::edge	have-rel-role-91	ARG1	both	0.1.2.0.3.3.0.0	0.1.2.0.3.3.0	
# ::edge	have-rel-role-91	ARG1	we	0.1.2.0.3.3.1.0.1	0.1.2.0.3.3.1.0	
# ::edge	have-rel-role-91	ARG2	husband	0.1.2.0.3.3.1.0.1	0.1.2.0.3.3.1.0.1.0	
# ::edge	have-rel-role-91	ARG2	wife	0.1.2.0.3.3.0.0	0.1.2.0.3.3.0.0.0	
# ::edge	introduce-02	ARG1	and	0.1.3	0.1.3.0	
# ::edge	level	mod	high	0.0.0.1	0.0.0.1.0	
# ::edge	level	mod	protect-01	0.0.0.1	0.0.0.1.1	
# ::edge	level	quant	2	0.1.1.1	0.1.1.1.0	
# ::edge	need-01	ARG0	degree	0.1.1	0.1.1.0	
# ::edge	need-01	ARG1	level	0.1.1	0.1.1.1	
# ::edge	or	op1	so	0.1.0	0.1.0.0	
# ::edge	person	mod	another	0.1.2	0.1.2.1	
# ::edge	plan-01	ARG0	silver	0.1.1.0.0.0	0.1.1.0.0.0.0	
# ::edge	plan-01	ARG1	accident	0.1.1.0.0.0	0.1.1.0.0.0.1	
# ::edge	protect-01	ARG1	plan-01	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	protect-01	degree	degree	0.1.1.0.0	0.1.1.0	
# ::edge	provide-01	ARG0	we	0.0.0	0.0	
# ::edge	provide-01	ARG1	customer	0.0.0	0.0.0.0	
# ::edge	provide-01	ARG2	level	0.0.0	0.0.0.1	
# ::edge	realize-01	ARG0	we	0	0.0	
# ::edge	realize-01	ARG1	and	0	0.1	
# ::edge	receive-01	ARG0	you	0.1.2.0.3	0.1.2.0.3.0	
# ::edge	receive-01	ARG1	amount	0.1.2.0.3	0.1.2.0.3.1	
# ::edge	receive-01	mod	also	0.1.2.0.3	0.1.2.0.3.2	
# ::edge	receive-01	time	800	0.1.2.0.3	0.1.2.0.3.5	
# ::edge	receive-01	time	remain-01	0.1.2.0.3	0.1.2.0	
# ::edge	remain-01	ARG0	you	0.1.2.0	0.1.2.0.0	
# ::edge	remain-01	ARG1	person	0.1.2.0	0.1.2	
# ::edge	remain-01	location	hospital	0.1.2.0	0.1.2.0.1	
# ::edge	remain-01	time	after	0.1.2.0	0.1.2.0.2	
# ::edge	result-01	ARG1	accident	0.1.2.0.3.4.1	0.1.2.0.3.4.1.0	
# ::edge	result-01	ARG2	and	0.1.2.0.3.4.1	0.1.2.0.3.4	
# ::edge	same-41	ARG0	10	0.1.2.0.3.4.1.0.0	0.1.2.0.3.4.1.0.0.0	
# ::edge	same-41	ARG1	accident	0.1.2.0.3.4.1.0.0	0.1.2.0.3.4.1.0	
# ::edge	temporal-quantity	unit	day	0.0.1.0	0.0.1	
(r / realize-01 
      :ARG0 (w / we 
            :ARG0-of (p6 / provide-01 
                  :ARG1 (c / customer) 
                  :ARG2 (l2 / level 
                        :mod (h5 / high) 
                        :mod (p5 / protect-01))) 
            :poss-of (d2 / day 
                  :unit-of (t / temporal-quantity))) 
      :ARG1 (a3 / and 
            :op1 (o / or 
                  :op1 (s2 / so)) 
            :op2 (n / need-01 
                  :ARG0 (d / degree 
                        :degree-of (p4 / protect-01 
                              :ARG1 (p / plan-01 
                                    :ARG0 (s / silver) 
                                    :ARG1 (a2 / accident 
                                          :mod (p2 / personal)) 
                                    :topic-of (g / gold)))) 
                  :ARG1 (l / level 
                        :quant 2)) 
            :op3 (p3 / person 
                  :ARG1-of (r2 / remain-01 
                        :ARG0 (y / you) 
                        :location (h / hospital) 
                        :time (a6 / after 
                              :op1 (a5 / accident)) 
                        :time-of (r3 / receive-01 
                              :ARG0 (y2 / you) 
                              :ARG1 (a13 / amount) 
                              :mod (a7 / also) 
                              :op-of (a8 / and 
                                    :op1 (b / both 
                                          :ARG1-of (h2 / have-rel-role-91 
                                                :ARG2 (w2 / wife))) 
                                    :op2 (d3 / die-01 
                                          :ARG1 (w3 / we 
                                                :ARG0-of (d5 / double) 
                                                :ARG1-of (h3 / have-rel-role-91 
                                                      :ARG2 (h4 / husband))))) 
                              :op-of (a10 / and 
                                    :ARG1-of (d4 / die-01 
                                          :ARG0 (s3 / special)) 
                                    :ARG2-of (r4 / result-01 
                                          :ARG1 (a9 / accident 
                                                :ARG1-of (s4 / same-41 
                                                      :ARG0 10))) 
                                    :time (a12 / after 
                                          :op1 (a11 / accident))) 
                              :time 800)) 
                  :mod (a4 / another)) 
            :op4 (i / introduce-02 
                  :ARG1 (a / and))))

# ::snt but on the evidence it was either an accident or a robbery
# ::tok but on the evidence it was either an accident or a robbery
# ::alignments 9-10|0.0.0.0.0 8-9|0.0.0.0 6-7|0.0.0.0.0.0 4-5|0.0.0 3-4|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:33.350
# ::node	0	contrast-01	0-1
# ::node	0.0	evidence-01	3-4
# ::node	0.0.0	it	4-5
# ::node	0.0.0.0	accident	8-9
# ::node	0.0.0.0.0	or	9-10
# ::node	0.0.0.0.0.0	either	6-7
# ::root	0	contrast-01
# ::edge	accident	domain	it	0.0.0.0	0.0.0	
# ::edge	contrast-01	ARG2	evidence-01	0	0.0	
# ::edge	evidence-01	ARG0	it	0.0	0.0.0	
# ::edge	or	mod	either	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	or	op1	accident	0.0.0.0.0	0.0.0.0	
(c / contrast-01 
      :ARG2 (e2 / evidence-01 
            :ARG0 (i / it 
                  :domain-of (a / accident 
                        :op-of (o / or 
                              :mod (e / either))))))

# ::snt ramona seven months pregnant had one night tried to flee their small home town myles and lost her right hand in an accident on the road out radiant with ice in the january cold
# ::tok ramona seven months pregnant had one night tried to flee their small home town myles and lost her right hand in an accident on the road out radiant with ice in the january cold
# ::alignments 33-34|0.1.3.1 32-33|0.1.3.0+0.1.3 29-30|0.1.3.1.0 25-26|0.1.2.0 22-23|0.1.2 19-20|0.1.1 16-17|0.1 15-16|0 13-14|0.0.0.1 12-13|0.0.0.0.1 11-12|0.0.0.0.0 9-10|0.0.0 7-8|0.0 6-7|0.0.0.0 3-4|0.1.0.0 2-3|0.1.0.2+0.1.0 1-2|0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:33.784
# ::node	0	and	15-16
# ::node	0.0	try-01	7-8
# ::node	0.0.0	flee-01	9-10
# ::node	0.0.0.0	night	6-7
# ::node	0.0.0.0.0	small	11-12
# ::node	0.0.0.0.1	home	12-13
# ::node	0.0.0.1	town	13-14
# ::node	0.1	lose-02	16-17
# ::node	0.1.0	temporal-quantity	2-3
# ::node	0.1.0.0	pregnant	3-4
# ::node	0.1.0.1	7	1-2
# ::node	0.1.0.2	month	2-3
# ::node	0.1.1	hand	19-20
# ::node	0.1.2	accident	22-23
# ::node	0.1.2.0	road	25-26
# ::node	0.1.3	date-entity	32-33
# ::node	0.1.3.0	1	32-33
# ::node	0.1.3.1	cold	33-34
# ::node	0.1.3.1.0	ice	29-30
# ::root	0	and
# ::edge	accident	location	road	0.1.2	0.1.2.0	
# ::edge	and	op1	lose-02	0	0.1	
# ::edge	cold	time	date-entity	0.1.3.1	0.1.3	
# ::edge	date-entity	month	1	0.1.3	0.1.3.0	
# ::edge	date-entity	op1	lose-02	0.1.3	0.1	
# ::edge	flee-01	ARG0	night	0.0.0	0.0.0.0	
# ::edge	flee-01	ARG1	town	0.0.0	0.0.0.1	
# ::edge	home	poss	night	0.0.0.0.1	0.0.0.0	
# ::edge	ice	mod	cold	0.1.3.1.0	0.1.3.1	
# ::edge	lose-02	ARG0	temporal-quantity	0.1	0.1.0	
# ::edge	lose-02	ARG1	hand	0.1	0.1.1	
# ::edge	lose-02	ARG2	accident	0.1	0.1.2	
# ::edge	pregnant	duration	temporal-quantity	0.1.0.0	0.1.0	
# ::edge	small	op1	night	0.0.0.0.0	0.0.0.0	
# ::edge	temporal-quantity	quant	7	0.1.0	0.1.0.1	
# ::edge	temporal-quantity	unit	month	0.1.0	0.1.0.2	
# ::edge	try-01	ARG0	and	0.0	0	
# ::edge	try-01	ARG1	flee-01	0.0	0.0.0	
(a2 / and 
      :ARG0-of (t2 / try-01 
            :ARG1 (f / flee-01 
                  :ARG0 (n / night 
                        :op-of (s / small) 
                        :poss-of (h2 / home)) 
                  :ARG1 (t / town))) 
      :op1 (l / lose-02 
            :ARG0 (t3 / temporal-quantity 
                  :duration-of (p / pregnant) 
                  :quant 7 
                  :unit (m / month)) 
            :ARG1 (h / hand) 
            :ARG2 (a / accident 
                  :location (r / road)) 
            :op-of (d / date-entity 
                  :month 1 
                  :time-of (c / cold 
                        :mod-of (i / ice)))))

# ::snt the moves are needed to cut the epidemic of deaths and injuries from preventable accidents the college said, the surgeons recommendations come in a report which underlines the limits to what treatment can achieve after accidents
# ::tok the moves are needed to cut the epidemic of deaths and injuries from preventable accidents the college said , the surgeons recommendations come in a report which underlines the limits to what treatment can achieve after accidents
# ::alignments 36-37|0.1.2.0.0.2.0 35-36|0.1.2.0.0.2 34-35|0.1.2.0.0 33-34|0.1.2.0 32-33|0.1.2.0.0.0 29-30|0.1.2.0.0.1 25-26|0.1.2.0.0.1.0 21-22|0.1.2 20-21|0.1.2.1 17-18|0 16-17|0.0 14-15|0.2 11-12|0.1.1 10-11|0.1 7-8|0.2.0 3-4|0.1.0.0 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:34.495
# ::node	0	say-01	17-18
# ::node	0.0	college	16-17
# ::node	0.1	and	10-11
# ::node	0.1.0	move-02	1-2
# ::node	0.1.0.0	need-01	3-4
# ::node	0.1.1	injure-01	11-12
# ::node	0.1.2	recommend-01	21-22
# ::node	0.1.2.0	possible	33-34
# ::node	0.1.2.0.0	achieve-01	34-35
# ::node	0.1.2.0.0.0	treat-03	32-33
# ::node	0.1.2.0.0.1	limit-01	29-30
# ::node	0.1.2.0.0.1.0	report	25-26
# ::node	0.1.2.0.0.2	after	35-36
# ::node	0.1.2.0.0.2.0	accident	36-37
# ::node	0.1.2.1	surgeon	20-21
# ::node	0.2	accident	14-15
# ::node	0.2.0	epidemic	7-8
# ::root	0	say-01
# ::edge	achieve-01	ARG0	treat-03	0.1.2.0.0	0.1.2.0.0.0	
# ::edge	achieve-01	ARG1	limit-01	0.1.2.0.0	0.1.2.0.0.1	
# ::edge	achieve-01	time	after	0.1.2.0.0	0.1.2.0.0.2	
# ::edge	after	op1	accident	0.1.2.0.0.2	0.1.2.0.0.2.0	
# ::edge	and	op1	move-02	0.1	0.1.0	
# ::edge	and	op2	injure-01	0.1	0.1.1	
# ::edge	and	op3	recommend-01	0.1	0.1.2	
# ::edge	epidemic	location	accident	0.2.0	0.2	
# ::edge	limit-01	ARG1	report	0.1.2.0.0.1	0.1.2.0.0.1.0	
# ::edge	need-01	ARG1	move-02	0.1.0.0	0.1.0	
# ::edge	possible	domain	achieve-01	0.1.2.0	0.1.2.0.0	
# ::edge	recommend-01	ARG1	possible	0.1.2	0.1.2.0	
# ::edge	recommend-01	mod	surgeon	0.1.2	0.1.2.1	
# ::edge	say-01	ARG0	college	0	0.0	
# ::edge	say-01	ARG1	and	0	0.1	
# ::edge	say-01	frequency	accident	0	0.2	
(s2 / say-01 
      :ARG0 (c / college) 
      :ARG1 (a5 / and 
            :op1 (m / move-02 
                  :ARG1-of (n / need-01)) 
            :op2 (i / injure-01) 
            :op3 (r2 / recommend-01 
                  :ARG1 (p / possible 
                        :domain (a3 / achieve-01 
                              :ARG0 (t / treat-03) 
                              :ARG1 (l / limit-01 
                                    :ARG1 (r / report)) 
                              :time (a2 / after 
                                    :op1 (a / accident)))) 
                  :mod (s / surgeon))) 
      :frequency (a4 / accident 
            :location-of (e / epidemic)))

# ::snt still to come a local mother wants stricter rules on airguns after an accident involving her young daughter five months ago
# ::tok still to come a local mother wants stricter rules on airguns after an accident involving her young daughter five months ago
# ::alignments 19-20|0.1.0.0.0.1.0.0+0.1.0.0.0.1.0 18-19|0.1.0.0.0.1 17-18|0.0.0+0.0 16-17|0.1.0.0.0.0 14-15|0.0.0.0 13-14|0.0.0.0.0 11-12|0.0.0.0.1 8-9|0.1 7-8|0 6-7|0.1.0 5-6|0.1.0.0+0.1.0.0.0 4-5|0.1.0.0.1 0-1|0.1.0.0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:34.882
# ::node	0	strict	7-8
# ::node	0.0	have-rel-role-91	17-18
# ::node	0.0.0	daughter	17-18
# ::node	0.0.0.0	involve-01	14-15
# ::node	0.0.0.0.0	accident	13-14
# ::node	0.0.0.0.1	after	11-12
# ::node	0.1	rule	8-9
# ::node	0.1.0	want-01	6-7
# ::node	0.1.0.0	mother	5-6
# ::node	0.1.0.0.0	have-rel-role-91	5-6
# ::node	0.1.0.0.0.0	young	16-17
# ::node	0.1.0.0.0.1	5	18-19
# ::node	0.1.0.0.0.1.0	temporal-quantity	19-20
# ::node	0.1.0.0.0.1.0.0	month	19-20
# ::node	0.1.0.0.0.2	still	0-1
# ::node	0.1.0.0.1	local	4-5
# ::root	0	strict
(s / strict 
      :ARG1-of (h / have-rel-role-91 
            :ARG2 (d / daughter 
                  :ARG1-of (i / involve-01 
                        :ARG2 (a / accident) 
                        :op-of (a2 / after)))) 
      :mod-of (r / rule 
            :ARG1-of (w / want-01 
                  :ARG0 (m2 / mother 
                        :ARG2-of (h2 / have-rel-role-91 
                              :ARG0 (y / young) 
                              :op-of (5 / 5 
                                    :quant-of (t / temporal-quantity 
                                          :unit (m / month))) 
                              :time (s2 / still)) 
                        :mod (l / local)))))

# ::snt an accident of the calendar had revived the students momentum
# ::tok an accident of the calendar had revived the students momentum
# ::alignments 9-10|0.1 8-9|0.1.0.0+0.1.0 6-7|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:34.918
# ::node	0	revive-01	6-7
# ::node	0.0	accident	1-2
# ::node	0.1	momentum	9-10
# ::node	0.1.0	person	8-9
# ::node	0.1.0.0	study-01	8-9
# ::root	0	revive-01
# ::edge	momentum	mod	person	0.1	0.1.0	
# ::edge	revive-01	ARG0	accident	0	0.0	
# ::edge	revive-01	ARG1	momentum	0	0.1	
# ::edge	study-01	ARG0	person	0.1.0.0	0.1.0	
(r / revive-01 
      :ARG0 (a / accident) 
      :ARG1 (m / momentum 
            :mod (p / person 
                  :ARG0-of (s / study-01))))

# ::snt the accident cost 167 lives
# ::tok the accident cost 167 lives
# ::alignments 4-5|0.1 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:34.923
# ::node	0	cost-01	2-3
# ::node	0.0	accident	1-2
# ::node	0.1	life	4-5
# ::root	0	cost-01
# ::edge	cost-01	ARG1	accident	0	0.0	
# ::edge	life	mod	cost-01	0.1	0	
(c / cost-01 
      :ARG1 (a / accident) 
      :mod-of (l / life))

# ::snt   a fiveyearold boy was rushed to the john radcliffe hospital oxford with leg and head injuries after an accident with a van at the junction of corunna crescent and craufurd road cowley oxford
# ::tok a fiveyearold boy was rushed to the john radcliffe hospital oxford with leg and head injuries after an accident with a van at the junction of corunna crescent and craufurd road cowley oxford
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:34.924
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt a nupe spokesman said that legal opinion had questioned the validity of the order since las members had not received written notification of their suspensions and had remained on station and dealt with accident and emergency calls put through to them
# ::tok a nupe spokesman said that legal opinion had questioned the validity of the order since las members had not received written notification of their suspensions and had remained on station and dealt with accident and emergency calls put through to them
# ::alignments 35-36|0.0.2.2.0.1 34-35|0.0.2.2.0 33-34|0.0.2.2.0.0 31-32|0.0.2.2.1 30-31|0.0.2.2 29-30|0.0.2.1 27-28|0.0.2 25-26|0.0 21-22|0.0.1.0 20-21|0.0.1.1 19-20|0.0.1 16-17|0.0.2.0.0+0.0.2.0 14-15|0.0.0.2 10-11|0.0.0.1 8-9|0.0.0 6-7|0.0.0.0 5-6|0.0.0.0.1 3-4|0 2-3|0.0.0.0.0.0+0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:35.462
# ::node	0	say-01	3-4
# ::node	0.0	and	25-26
# ::node	0.0.0	question-01	8-9
# ::node	0.0.0.0	opine-01	6-7
# ::node	0.0.0.0.0	have-org-role-91	2-3
# ::node	0.0.0.0.0.0	spokesman	2-3
# ::node	0.0.0.0.1	legal	5-6
# ::node	0.0.0.1	valid-41	10-11
# ::node	0.0.0.2	since	14-15
# ::node	0.0.1	receive-01	19-20
# ::node	0.0.1.0	notification	21-22
# ::node	0.0.1.1	write-01	20-21
# ::node	0.0.2	remain-01	27-28
# ::node	0.0.2.0	have-org-role-91	16-17
# ::node	0.0.2.0.0	member	16-17
# ::node	0.0.2.1	station	29-30
# ::node	0.0.2.2	and	30-31
# ::node	0.0.2.2.0	and	34-35
# ::node	0.0.2.2.0.0	accident	33-34
# ::node	0.0.2.2.0.1	emergency	35-36
# ::node	0.0.2.2.1	deal-01	31-32
# ::root	0	say-01
# ::edge	and	op1	and	0.0.2.2.0	0.0.2.2	
# ::edge	and	op1	receive-01	0.0	0.0.1	
# ::edge	and	op1	remain-01	0.0.2.2	0.0.2	
# ::edge	and	op2	accident	0.0.2.2.0	0.0.2.2.0.0	
# ::edge	and	op2	deal-01	0.0.2.2	0.0.2.2.1	
# ::edge	and	op2	remain-01	0.0	0.0.2	
# ::edge	and	op3	emergency	0.0.2.2.0	0.0.2.2.0.1	
# ::edge	have-org-role-91	ARG2	member	0.0.2.0	0.0.2.0.0	
# ::edge	have-org-role-91	ARG2	spokesman	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	opine-01	ARG0	have-org-role-91	0.0.0.0	0.0.0.0.0	
# ::edge	opine-01	mod	legal	0.0.0.0	0.0.0.0.1	
# ::edge	question-01	ARG0	opine-01	0.0.0	0.0.0.0	
# ::edge	question-01	ARG1	valid-41	0.0.0	0.0.0.1	
# ::edge	question-01	condition	and	0.0.0	0.0	
# ::edge	question-01	time	since	0.0.0	0.0.0.2	
# ::edge	receive-01	ARG1	notification	0.0.1	0.0.1.0	
# ::edge	receive-01	ARG2	write-01	0.0.1	0.0.1.1	
# ::edge	remain-01	ARG1	have-org-role-91	0.0.2	0.0.2.0	
# ::edge	remain-01	location	station	0.0.2	0.0.2.1	
# ::edge	say-01	ARG1	and	0	0.0	
(s3 / say-01 
      :ARG1 (a4 / and 
            :condition-of (q / question-01 
                  :ARG0 (o / opine-01 
                        :ARG0 (h2 / have-org-role-91 
                              :ARG2 (s4 / spokesman)) 
                        :mod (l / legal)) 
                  :ARG1 (v / valid-41) 
                  :time (s2 / since)) 
            :op1 (r2 / receive-01 
                  :ARG1 (n / notification) 
                  :ARG2 (w / write-01)) 
            :op2 (r / remain-01 
                  :ARG1 (h / have-org-role-91 
                        :ARG2 (m / member)) 
                  :location (s / station) 
                  :op-of (a3 / and 
                        :op-of (a / and 
                              :op1 (a2 / accident) 
                              :op2 (e / emergency)) 
                        :op1 (d / deal-01)))))

# ::snt we passed a dozen or more fatal accidents with trucks and buses lying upside down in the river
# ::tok we passed a dozen or more fatal accidents with trucks and buses lying upside down in the river
# ::alignments 17-18|0.0.0.1 14-15|0.0 13-14|0 12-13|0.0.0 11-12|0.0.0.0.2 10-11|0.0.0.0 9-10|0.0.0.0.1 7-8|0.0.0.0.0 6-7|0.0.0.0.0.0 4-5|0.0.0.0.0.0.0 3-4|0.0.0.0.0.0.0.0 0-1|0.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:35.630
# ::node	0	upside	13-14
# ::node	0.0	down	14-15
# ::node	0.0.0	lie-01	12-13
# ::node	0.0.0.0	and	10-11
# ::node	0.0.0.0.0	accident	7-8
# ::node	0.0.0.0.0.0	fatal	6-7
# ::node	0.0.0.0.0.0.0	or	4-5
# ::node	0.0.0.0.0.0.0.0	dozen	3-4
# ::node	0.0.0.0.0.1	we	0-1
# ::node	0.0.0.0.1	truck	9-10
# ::node	0.0.0.0.2	bus	11-12
# ::node	0.0.0.1	river	17-18
# ::root	0	upside
(u / upside 
      :degree-of (d / down 
            :ARG2-of (l / lie-01 
                  :ARG1 (a / and 
                        :op1 (a2 / accident 
                              :mod (f / fatal 
                                    :poss (o / or 
                                          :op1 (d2 / dozen))) 
                              :poss (w / we)) 
                        :op2 (t / truck) 
                        :op3 (b / bus)) 
                  :location (r / river))))

# ::snt it was sheer hypocrisy of the trade unions to say they were prepared to operate accident and emergency services which involved their men sitting around in the stations during the day but refusing to operate vehicles and emergency services seriously
# ::tok it was sheer hypocrisy of the trade unions to say they were prepared to operate accident and emergency services which involved their men sitting around in the stations during the day but refusing to operate vehicles and emergency services seriously
# ::alignments 39-40|0.0 38-39|0.2.0.1.0 37-38|0.2.0.1.0.0 36-37|0.2.0.1 35-36|0.2.0.0 34-35|0.2.0 32-33|0.2 31-32|0 30-31|0.1.4 27-28|0.1.2 24-25|0.1.3 23-24|0.1 22-23|0.1.0 20-21|0.1.0.0 18-19|0.1.0.0.0 17-18|0.1.0.0.0.1 16-17|0.1.0.0.0.0.1.1 15-16|0.1.0.0.0.0.1.1.0 14-15|0.1.0.0.0.0 12-13|0.1.0.0.0.0.1 10-11|0.1.0.0.0.0.0 9-10|0.1.0.0.0.0.1.2 7-8|0.1.0.0.0.0.1.2.0 6-7|0.1.0.0.0.0.1.2.0.0 3-4|0.1.0.0.0.0.1.0 2-3|0.1.0.0.0.0.1.2.1 0-1|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:36.928
# ::node	0	contrast-01	31-32
# ::node	0.0	serious	39-40
# ::node	0.1	sit-01	23-24
# ::node	0.1.0	man	22-23
# ::node	0.1.0.0	involve-01	20-21
# ::node	0.1.0.0.0	service	18-19
# ::node	0.1.0.0.0.0	operate-01	14-15
# ::node	0.1.0.0.0.0.0	they	10-11
# ::node	0.1.0.0.0.0.1	prepare-02	12-13
# ::node	0.1.0.0.0.0.1.0	hypocrisy	3-4
# ::node	0.1.0.0.0.0.1.1	and	16-17
# ::node	0.1.0.0.0.0.1.1.0	accident	15-16
# ::node	0.1.0.0.0.0.1.2	say-01	9-10
# ::node	0.1.0.0.0.0.1.2.0	union	7-8
# ::node	0.1.0.0.0.0.1.2.0.0	trade-01	6-7
# ::node	0.1.0.0.0.0.1.2.1	sheer	2-3
# ::node	0.1.0.0.0.1	emergency	17-18
# ::node	0.1.1	it	0-1
# ::node	0.1.2	station	27-28
# ::node	0.1.3	around	24-25
# ::node	0.1.4	day	30-31
# ::node	0.2	refuse-01	32-33
# ::node	0.2.0	operate-01	34-35
# ::node	0.2.0.0	vehicle	35-36
# ::node	0.2.0.1	and	36-37
# ::node	0.2.0.1.0	service	38-39
# ::node	0.2.0.1.0.0	emergency	37-38
# ::root	0	contrast-01
# ::edge	and	op1	accident	0.1.0.0.0.0.1.1	0.1.0.0.0.0.1.1.0	
# ::edge	and	op1	operate-01	0.2.0.1	0.2.0	
# ::edge	and	op2	service	0.2.0.1	0.2.0.1.0	
# ::edge	contrast-01	ARG0	serious	0	0.0	
# ::edge	contrast-01	ARG1	sit-01	0	0.1	
# ::edge	contrast-01	ARG2	refuse-01	0	0.2	
# ::edge	involve-01	ARG0	service	0.1.0.0	0.1.0.0.0	
# ::edge	involve-01	ARG1	man	0.1.0.0	0.1.0	
# ::edge	operate-01	ARG0	they	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	operate-01	ARG1	service	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	operate-01	ARG1	vehicle	0.2.0	0.2.0.0	
# ::edge	prepare-02	ARG0	hypocrisy	0.1.0.0.0.0.1	0.1.0.0.0.0.1.0	
# ::edge	prepare-02	ARG1	and	0.1.0.0.0.0.1	0.1.0.0.0.0.1.1	
# ::edge	prepare-02	ARG2	operate-01	0.1.0.0.0.0.1	0.1.0.0.0.0	
# ::edge	refuse-01	ARG1	operate-01	0.2	0.2.0	
# ::edge	say-01	ARG0	union	0.1.0.0.0.0.1.2	0.1.0.0.0.0.1.2.0	
# ::edge	say-01	ARG1	prepare-02	0.1.0.0.0.0.1.2	0.1.0.0.0.0.1	
# ::edge	say-01	time	sheer	0.1.0.0.0.0.1.2	0.1.0.0.0.0.1.2.1	
# ::edge	service	mod	emergency	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	service	mod	emergency	0.2.0.1.0	0.2.0.1.0.0	
# ::edge	sit-01	ARG0	man	0.1	0.1.0	
# ::edge	sit-01	ARG1	it	0.1	0.1.1	
# ::edge	sit-01	ARG2	station	0.1	0.1.2	
# ::edge	sit-01	location	around	0.1	0.1.3	
# ::edge	sit-01	time	day	0.1	0.1.4	
# ::edge	union	mod	trade-01	0.1.0.0.0.0.1.2.0	0.1.0.0.0.0.1.2.0.0	
(c / contrast-01 
      :ARG0 (s / serious) 
      :ARG1 (s4 / sit-01 
            :ARG0 (m / man 
                  :ARG1-of (i / involve-01 
                        :ARG0 (s5 / service 
                              :ARG1-of (o2 / operate-01 
                                    :ARG0 (t / they) 
                                    :ARG2-of (p / prepare-02 
                                          :ARG0 (h / hypocrisy) 
                                          :ARG1 (a3 / and 
                                                :op1 (a4 / accident)) 
                                          :ARG1-of (s6 / say-01 
                                                :ARG0 (u / union 
                                                      :mod (t2 / trade-01)) 
                                                :time (s7 / sheer)))) 
                              :mod (e2 / emergency)))) 
            :ARG1 (i2 / it) 
            :ARG2 (s3 / station) 
            :location (a2 / around) 
            :time (d / day)) 
      :ARG2 (r / refuse-01 
            :ARG1 (o / operate-01 
                  :ARG1 (v / vehicle) 
                  :op-of (a / and 
                        :op1 (s2 / service 
                              :mod (e / emergency))))))

# ::snt   there have been a number of small accidents already and i have even suffered a puncture myself through striking one of the kerbs
# ::tok there have been a number of small accidents already and i have even suffered a puncture myself through striking one of the kerbs
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:36.929
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt he also admitted fraudulent use of a vehicle tax disc lacking insurance failing to stop after an accident theft and two charges of causing actual bodily harm, mr donal okelly prosecuting said that lee drove off after an accident with a taxi in oxford on july 23
# ::tok he also admitted fraudulent use of a vehicle tax disc lacking insurance failing to stop after an accident theft and two charges of causing actual bodily harm , mr donal okelly prosecuting said that lee drove off after an accident with a taxi in oxford on july 23
# ::alignments 47-48|0.0.0.0.0.0.0.1.0.0 46-47|0.0.2.0.5.0+0.0.2.0.5 42-43|0.0.2.0.3 39-40|0.0.2.0.0 37-38|0.0.2.0.4 36-37|0.0.2.0.2 35-36|0.0.2.0 32-33|0.0.2 31-32|0.0.2.0.1 26-27|0.0.0.0.0.0.0.1.0 24-25|0.0.0.0.0.0.0.1.0.1 23-24|0 20-21|0.0.2.0.1.0 19-20|0.0 18-19|0.0.1 17-18|0.0.0.0.1 15-16|0.0.0 14-15|0.0.0.0 12-13|0.0.0.0.2 11-12|0.0.0.0.0 10-11|0.0.0.0.0.0 8-9|0.0.0.0.2.0 7-8|0.0.0.0.2.0.0 4-5|0.0.0.0.0.0.0.1 3-4|0.0.0.0.0.0.0.1.1 2-3|0.0.0.0.0.0.0.0 1-2|0.0.0.0.0.0.0.0.0 0-1|0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:37.948
# ::node	0	cause-01	23-24
# ::node	0.0	and	19-20
# ::node	0.0.0	after	15-16
# ::node	0.0.0.0	stop-01	14-15
# ::node	0.0.0.0.0	insure-02	11-12
# ::node	0.0.0.0.0.0	lack-01	10-11
# ::node	0.0.0.0.0.0.0	he	0-1
# ::node	0.0.0.0.0.0.0.0	admit-01	2-3
# ::node	0.0.0.0.0.0.0.0.0	also	1-2
# ::node	0.0.0.0.0.0.0.1	use-01	4-5
# ::node	0.0.0.0.0.0.0.1.0	harm-01	26-27
# ::node	0.0.0.0.0.0.0.1.0.0	23	47-48
# ::node	0.0.0.0.0.0.0.1.0.1	actual	24-25
# ::node	0.0.0.0.0.0.0.1.1	fraudulent	3-4
# ::node	0.0.0.0.1	accident	17-18
# ::node	0.0.0.0.2	fail-01	12-13
# ::node	0.0.0.0.2.0	tax-01	8-9
# ::node	0.0.0.0.2.0.0	vehicle	7-8
# ::node	0.0.1	theft	18-19
# ::node	0.0.2	say-01	32-33
# ::node	0.0.2.0	drive-02	35-36
# ::node	0.0.2.0.0	accident	39-40
# ::node	0.0.2.0.1	prosecute-01	31-32
# ::node	0.0.2.0.1.0	2	20-21
# ::node	0.0.2.0.2	off	36-37
# ::node	0.0.2.0.3	taxi	42-43
# ::node	0.0.2.0.4	after	37-38
# ::node	0.0.2.0.5	date-entity	46-47
# ::node	0.0.2.0.5.0	7	46-47
# ::root	0	cause-01
# ::edge	admit-01	ARG0	he	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	admit-01	mod	also	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0	
# ::edge	after	op1	and	0.0.0	0.0	
# ::edge	and	op1	theft	0.0	0.0.1	
# ::edge	and	op2	say-01	0.0	0.0.2	
# ::edge	cause-01	ARG0	and	0	0.0	
# ::edge	date-entity	month	7	0.0.2.0.5	0.0.2.0.5.0	
# ::edge	drive-02	ARG0	accident	0.0.2.0	0.0.2.0.0	
# ::edge	drive-02	ARG1	prosecute-01	0.0.2.0	0.0.2.0.1	
# ::edge	drive-02	ARG2	off	0.0.2.0	0.0.2.0.2	
# ::edge	drive-02	manner	taxi	0.0.2.0	0.0.2.0.3	
# ::edge	drive-02	time	after	0.0.2.0	0.0.2.0.4	
# ::edge	drive-02	time	date-entity	0.0.2.0	0.0.2.0.5	
# ::edge	fail-01	ARG2	stop-01	0.0.0.0.2	0.0.0.0	
# ::edge	fail-01	purpose	tax-01	0.0.0.0.2	0.0.0.0.2.0	
# ::edge	harm-01	ARG1	23	0.0.0.0.0.0.0.1.0	0.0.0.0.0.0.0.1.0.0	
# ::edge	harm-01	mod	actual	0.0.0.0.0.0.0.1.0	0.0.0.0.0.0.0.1.0.1	
# ::edge	lack-01	ARG0	he	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	lack-01	ARG1	insure-02	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	prosecute-01	ARG1	2	0.0.2.0.1	0.0.2.0.1.0	
# ::edge	say-01	ARG1	drive-02	0.0.2	0.0.2.0	
# ::edge	stop-01	ARG0	insure-02	0.0.0.0	0.0.0.0.0	
# ::edge	stop-01	ARG1	accident	0.0.0.0	0.0.0.0.1	
# ::edge	stop-01	time	after	0.0.0.0	0.0.0	
# ::edge	tax-01	ARG0	vehicle	0.0.0.0.2.0	0.0.0.0.2.0.0	
# ::edge	use-01	ARG0	he	0.0.0.0.0.0.0.1	0.0.0.0.0.0.0	
# ::edge	use-01	ARG1	harm-01	0.0.0.0.0.0.0.1	0.0.0.0.0.0.0.1.0	
# ::edge	use-01	mod	fraudulent	0.0.0.0.0.0.0.1	0.0.0.0.0.0.0.1.1	
(c / cause-01 
      :ARG0 (a4 / and 
            :op-of (a6 / after 
                  :time-of (s2 / stop-01 
                        :ARG0 (i / insure-02 
                              :ARG1-of (l / lack-01 
                                    :ARG0 (h2 / he 
                                          :ARG0-of (a7 / admit-01 
                                                :mod (a8 / also)) 
                                          :ARG0-of (u / use-01 
                                                :ARG1 (h / harm-01 
                                                      :ARG1 23 
                                                      :mod (a3 / actual)) 
                                                :mod (f2 / fraudulent))))) 
                        :ARG1 (a5 / accident) 
                        :ARG2-of (f / fail-01 
                              :purpose (t3 / tax-01 
                                    :ARG0 (v / vehicle))))) 
            :op1 (t2 / theft) 
            :op2 (s / say-01 
                  :ARG1 (d2 / drive-02 
                        :ARG0 (a / accident) 
                        :ARG1 (p / prosecute-01 
                              :ARG1 2) 
                        :ARG2 (o / off) 
                        :manner (t / taxi) 
                        :time (a2 / after) 
                        :time (d / date-entity 
                              :month 7)))))

# ::snt only new york and michigan enacted plans which provide a serious alternative to tort liability as a system of accident compensation
# ::tok only new york and michigan enacted plans which provide a serious alternative to tort liability as a system of accident compensation
# ::alignments 20-21|0.1.0 19-20|0.1.0.1 17-18|0.1 14-15|0 11-12|0.0.1 10-11|0.0.1.0 8-9|0.0 6-7|0.0.0 5-6|0.0.0.0 3-4|0.0.0.0.0 1-2|0.0.0.0.0.0 0-1|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:38.043
# ::node	0	liability	14-15
# ::node	0.0	provide-01	8-9
# ::node	0.0.0	plan-01	6-7
# ::node	0.0.0.0	enact-01	5-6
# ::node	0.0.0.0.0	and	3-4
# ::node	0.0.0.0.0.0	new	1-2
# ::node	0.0.1	alternative	11-12
# ::node	0.0.1.0	serious	10-11
# ::node	0.1	system	17-18
# ::node	0.1.0	compensate-01	20-21
# ::node	0.1.0.0	only	0-1
# ::node	0.1.0.1	accident	19-20
# ::root	0	liability
(l / liability 
      :ARG2-of (p / provide-01 
            :ARG0 (p2 / plan-01 
                  :ARG1-of (e / enact-01 
                        :ARG0 (a3 / and 
                              :mod (n / new)))) 
            :ARG1 (a2 / alternative 
                  :mod (s2 / serious))) 
      :part-of (s / system 
            :mod (c / compensate-01 
                  :ARG1 (o / only) 
                  :ARG3 (a / accident))))

# ::snt but the inquest in oxford heard yesterday that the dual carriageway was still under construction and the accident happened in a section of road being used by twoway traffic
# ::tok but the inquest in oxford heard yesterday that the dual carriageway was still under construction and the accident happened in a section of road being used by twoway traffic
# ::alignments 28-29|0.0.1.1.1.0.0.1 25-26|0.0.1.1.1.0.0 23-24|0.0.1.1.1.0 21-22|0.0.1.1.1 18-19|0.0.1.1 17-18|0.0.1.1.0 15-16|0.0.1 14-15|0.0.1.0 12-13|0.0.1.0.0 9-10|0.0.1.1.1.0.0.0 6-7|0.0.2 5-6|0.0 2-3|0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:38.162
# ::node	0	contrast-01	0-1
# ::node	0.0	hear-01	5-6
# ::node	0.0.0	inquest	2-3
# ::node	0.0.1	and	15-16
# ::node	0.0.1.0	construct-01	14-15
# ::node	0.0.1.0.0	still	12-13
# ::node	0.0.1.1	happen-01	18-19
# ::node	0.0.1.1.0	accident	17-18
# ::node	0.0.1.1.1	section	21-22
# ::node	0.0.1.1.1.0	road	23-24
# ::node	0.0.1.1.1.0.0	use-01	25-26
# ::node	0.0.1.1.1.0.0.0	dual	9-10
# ::node	0.0.1.1.1.0.0.1	traffic	28-29
# ::node	0.0.2	yesterday	6-7
# ::root	0	contrast-01
# ::edge	and	op1	construct-01	0.0.1	0.0.1.0	
# ::edge	and	op2	happen-01	0.0.1	0.0.1.1	
# ::edge	construct-01	mod	still	0.0.1.0	0.0.1.0.0	
# ::edge	contrast-01	ARG1	hear-01	0	0.0	
# ::edge	happen-01	ARG1	accident	0.0.1.1	0.0.1.1.0	
# ::edge	happen-01	ARG2	section	0.0.1.1	0.0.1.1.1	
# ::edge	hear-01	ARG0	inquest	0.0	0.0.0	
# ::edge	hear-01	ARG1	and	0.0	0.0.1	
# ::edge	hear-01	time	yesterday	0.0	0.0.2	
# ::edge	road	part	section	0.0.1.1.1.0	0.0.1.1.1	
# ::edge	use-01	ARG0	dual	0.0.1.1.1.0.0	0.0.1.1.1.0.0.0	
# ::edge	use-01	ARG1	road	0.0.1.1.1.0.0	0.0.1.1.1.0	
# ::edge	use-01	ARG2	traffic	0.0.1.1.1.0.0	0.0.1.1.1.0.0.1	
(c2 / contrast-01 
      :ARG1 (h2 / hear-01 
            :ARG0 (i / inquest) 
            :ARG1 (a2 / and 
                  :op1 (c / construct-01 
                        :mod (s2 / still)) 
                  :op2 (h / happen-01 
                        :ARG1 (a / accident) 
                        :ARG2 (s / section 
                              :part-of (r / road 
                                    :ARG1-of (u / use-01 
                                          :ARG0 (d / dual) 
                                          :ARG2 (t / traffic)))))) 
            :time (y / yesterday)))

# ::snt double cover against accidental death dash, free  exclusive to the double payout plan is our guarantee that  should you fall victim to a fatal accident outside work  your dependents will receive at no extra cost at least  double the sum assured
# ::tok double cover against accidental death dash , free exclusive to the double payout plan is our guarantee that should you fall victim to a fatal accident outside work your dependents will receive at no extra cost at least double the sum assured
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:38.163
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the police by accident escaped with 5 per cent
# ::tok the police by accident escaped with 5 per cent
# ::alignments 8-9|0.1.1+0.1 6-7|0.1.0 4-5|0 3-4|0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:38.207
# ::node	0	escape-01	4-5
# ::node	0.0	police	1-2
# ::node	0.0.0	accident	3-4
# ::node	0.1	monetary-quantity	8-9
# ::node	0.1.0	5	6-7
# ::node	0.1.1	cent	8-9
# ::root	0	escape-01
# ::edge	5	name	monetary-quantity	0.1.0	0.1	
# ::edge	escape-01	ARG0	police	0	0.0	
# ::edge	escape-01	ARG1	monetary-quantity	0	0.1	
# ::edge	monetary-quantity	unit	cent	0.1	0.1.1	
# ::edge	police	location	accident	0.0	0.0.0	
(e / escape-01 
      :ARG0 (p / police 
            :location (a / accident)) 
      :ARG1 (m / monetary-quantity 
            :name-of 5 
            :unit (c / cent)))

# ::snt this says a police news release causes nasty accidents
# ::tok this says a police news release causes nasty accidents
# ::alignments 8-9|0.1.1 7-8|0.1.1.0 6-7|0.1 5-6|0.1.0 4-5|0.1.0.1 3-4|0.1.0.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:38.300
# ::node	0	say-01	1-2
# ::node	0.0	this	0-1
# ::node	0.1	cause-01	6-7
# ::node	0.1.0	release-01	5-6
# ::node	0.1.0.0	police	3-4
# ::node	0.1.0.1	news	4-5
# ::node	0.1.1	accident	8-9
# ::node	0.1.1.0	nasty	7-8
# ::root	0	say-01
# ::edge	accident	mod	nasty	0.1.1	0.1.1.0	
# ::edge	cause-01	ARG0	release-01	0.1	0.1.0	
# ::edge	cause-01	ARG1	accident	0.1	0.1.1	
# ::edge	release-01	ARG1	police	0.1.0	0.1.0.0	
# ::edge	release-01	mod	news	0.1.0	0.1.0.1	
# ::edge	say-01	ARG0	this	0	0.0	
# ::edge	say-01	ARG1	cause-01	0	0.1	
(s / say-01 
      :ARG0 (t / this) 
      :ARG1 (c / cause-01 
            :ARG0 (r / release-01 
                  :ARG1 (p / police) 
                  :mod (n2 / news)) 
            :ARG1 (a / accident 
                  :mod (n / nasty))))

# ::snt opponents of the closures say the two accidents have confirmed their fears
# ::tok opponents of the closures say the two accidents have confirmed their fears
# ::alignments 11-12|0.1.1 9-10|0.1 7-8|0.1.0 6-7|0.1.0.0 4-5|0 0-1|0.0.0+0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:38.331
# ::node	0	say-01	4-5
# ::node	0.0	person	0-1
# ::node	0.0.0	oppose-01	0-1
# ::node	0.1	confirm-01	9-10
# ::node	0.1.0	accident	7-8
# ::node	0.1.0.0	2	6-7
# ::node	0.1.1	fear-01	11-12
# ::root	0	say-01
# ::edge	accident	quant	2	0.1.0	0.1.0.0	
# ::edge	confirm-01	ARG0	accident	0.1	0.1.0	
# ::edge	confirm-01	ARG1	fear-01	0.1	0.1.1	
# ::edge	oppose-01	ARG0	person	0.0.0	0.0	
# ::edge	say-01	ARG0	person	0	0.0	
# ::edge	say-01	ARG1	confirm-01	0	0.1	
(s / say-01 
      :ARG0 (p / person 
            :ARG0-of (o / oppose-01)) 
      :ARG1 (c / confirm-01 
            :ARG0 (a / accident 
                  :quant 2) 
            :ARG1 (f / fear-01)))

# ::snt prince michael of kent president attends the annual general meeting of the medical commission on accident prevention at the royal college of surgeons london wc2
# ::tok prince michael of kent president attends the annual general meeting of the medical commission on accident prevention at the royal college of surgeons london wc2
# ::alignments 23-24|0.0.2.0.1.1.0+0.0.2.0.1.1+0.0.2.0.1 22-23|0.0.2.0.1.0 20-21|0.0.2 19-20|0.0.2.1 16-17|0.0 15-16|0.0.1 13-14|0.0.2.0.0 12-13|0.0.2.0.0.0 9-10|0.0.2.0 8-9|0.0.2.0.2 4-5|0.0.0.0+0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:38.494
# ::node	0	prince	0-1
# ::node	0.0	prevent-01	16-17
# ::node	0.0.0	have-org-role-91	4-5
# ::node	0.0.0.0	president	4-5
# ::node	0.0.1	accident	15-16
# ::node	0.0.2	college	20-21
# ::node	0.0.2.0	meet-03	9-10
# ::node	0.0.2.0.0	commission	13-14
# ::node	0.0.2.0.0.0	medicine	12-13
# ::node	0.0.2.0.1	city	23-24
# ::node	0.0.2.0.1.0	surgeon	22-23
# ::node	0.0.2.0.1.1	name	23-24
# ::node	0.0.2.0.1.1.0	"London"	23-24
# ::node	0.0.2.0.2	general	8-9
# ::node	0.0.2.1	royal	19-20
# ::root	0	prince
(p3 / prince 
      :ARG2-of (p / prevent-01 
            :ARG0 (h / have-org-role-91 
                  :ARG2 (p2 / president)) 
            :ARG1 (a / accident) 
            :location (c2 / college 
                  :ARG1-of (m2 / meet-03 
                        :ARG0 (c3 / commission 
                              :mod (m / medicine)) 
                        :location (c / city 
                              :mod (s / surgeon) 
                              :name (n / name 
                                    :op1 "London")) 
                        :mod (g / general)) 
                  :mod (r / royal))))

# ::snt it was a relatively quiet shift we responded to five emergency calls as a crew of two ranging from road traffic accidents to people collapsing in the street, the second hourandahalf of the shift was spent at the scene of a road traffice accident a motor cycle had collided with a lorry and the presence of all three emergency services was required
# ::tok it was a relatively quiet shift we responded to five emergency calls as a crew of two ranging from road traffic accidents to people collapsing in the street , the second hourandahalf of the shift was spent at the scene of a road traffice accident a motor cycle had collided with a lorry and the presence of all three emergency services was required
# ::alignments 62-63|0.0.2.0.0.1.0.1.1 60-61|0.0.2.0.0.1.0.1.1.0 59-60|0.0.2.0.0.1.0.1.1.0.0 58-59|0.0.2.0.0.1.0.1.1.0.0.0 57-58|0.0.2.0.0.1.0.1.1.0.1 55-56|0.0.2.0.0.1.0.1.1.1 53-54|0.0.2.0.0.1.0.1 47-48|0.0.0.0 46-47|0.0.0 44-45|0.0.2.0.0.1.0.0 42-43|0.0.2.0.0.1.0.0.0 39-40|0.0.2.0.0.1.0.1.0 36-37|0.0.2.0.0.1.0 34-35|0 27-28|0.0.1 24-25|0.0 21-22|0.0.2.1 20-21|0.0.2.1.0 19-20|0.0.2.1.0.0 17-18|0.0.2 16-17|0.0.2.0.0.1.1 14-15|0.0.2.0.0.1 10-11|0.0.2.0.0.0.0 9-10|0.0.2.0.0.0.1.0 7-8|0.0.2.0.0 6-7|0.0.2.0 5-6|0.0.2.0.0.0 4-5|0.0.2.0.0.0.1 3-4|0.0.2.0.0.0.1.1 0-1|0.0.2.0.0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:39.772
# ::node	0	shift-01	34-35
# ::node	0.0	collapse-01	24-25
# ::node	0.0.0	motorcycle	46-47
# ::node	0.0.0.0	cycle	47-48
# ::node	0.0.1	street	27-28
# ::node	0.0.2	range-01	17-18
# ::node	0.0.2.0	we	6-7
# ::node	0.0.2.0.0	respond-01	7-8
# ::node	0.0.2.0.0.0	shift-01	5-6
# ::node	0.0.2.0.0.0.0	emergency	10-11
# ::node	0.0.2.0.0.0.1	quiet-41	4-5
# ::node	0.0.2.0.0.0.1.0	5	9-10
# ::node	0.0.2.0.0.0.1.1	relative	3-4
# ::node	0.0.2.0.0.0.2	it	0-1
# ::node	0.0.2.0.0.1	crew	14-15
# ::node	0.0.2.0.0.1.0	spend-01	36-37
# ::node	0.0.2.0.0.1.0.0	accident	44-45
# ::node	0.0.2.0.0.1.0.0.0	road	42-43
# ::node	0.0.2.0.0.1.0.1	and	53-54
# ::node	0.0.2.0.0.1.0.1.0	scene	39-40
# ::node	0.0.2.0.0.1.0.1.1	require-01	62-63
# ::node	0.0.2.0.0.1.0.1.1.0	service	60-61
# ::node	0.0.2.0.0.1.0.1.1.0.0	emergency	59-60
# ::node	0.0.2.0.0.1.0.1.1.0.0.0	3	58-59
# ::node	0.0.2.0.0.1.0.1.1.0.1	all	57-58
# ::node	0.0.2.0.0.1.0.1.1.1	presence	55-56
# ::node	0.0.2.0.0.1.1	2	16-17
# ::node	0.0.2.1	accident	21-22
# ::node	0.0.2.1.0	traffic	20-21
# ::node	0.0.2.1.0.0	road	19-20
# ::root	0	shift-01
# ::edge	2	consist	crew	0.0.2.0.0.1.1	0.0.2.0.0.1	
# ::edge	accident	location	road	0.0.2.0.0.1.0.0	0.0.2.0.0.1.0.0.0	
# ::edge	accident	mod	traffic	0.0.2.1	0.0.2.1.0	
# ::edge	and	op1	spend-01	0.0.2.0.0.1.0.1	0.0.2.0.0.1.0	
# ::edge	and	op2	scene	0.0.2.0.0.1.0.1	0.0.2.0.0.1.0.1.0	
# ::edge	and	op3	require-01	0.0.2.0.0.1.0.1	0.0.2.0.0.1.0.1.1	
# ::edge	collapse-01	ARG0	motorcycle	0.0	0.0.0	
# ::edge	collapse-01	ARG1	street	0.0	0.0.1	
# ::edge	cycle	mod	motorcycle	0.0.0.0	0.0.0	
# ::edge	emergency	quant	3	0.0.2.0.0.1.0.1.1.0.0	0.0.2.0.0.1.0.1.1.0.0.0	
# ::edge	quiet-41	ARG0	5	0.0.2.0.0.0.1	0.0.2.0.0.0.1.0	
# ::edge	quiet-41	ARG1	shift-01	0.0.2.0.0.0.1	0.0.2.0.0.0	
# ::edge	quiet-41	degree	relative	0.0.2.0.0.0.1	0.0.2.0.0.0.1.1	
# ::edge	range-01	ARG0	we	0.0.2	0.0.2.0	
# ::edge	range-01	ARG3	accident	0.0.2	0.0.2.1	
# ::edge	range-01	purpose	collapse-01	0.0.2	0.0	
# ::edge	require-01	ARG1	service	0.0.2.0.0.1.0.1.1	0.0.2.0.0.1.0.1.1.0	
# ::edge	require-01	ARG2	presence	0.0.2.0.0.1.0.1.1	0.0.2.0.0.1.0.1.1.1	
# ::edge	respond-01	ARG0	we	0.0.2.0.0	0.0.2.0	
# ::edge	respond-01	ARG1	shift-01	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	respond-01	ARG2	crew	0.0.2.0.0	0.0.2.0.0.1	
# ::edge	service	mod	all	0.0.2.0.0.1.0.1.1.0	0.0.2.0.0.1.0.1.1.0.1	
# ::edge	service	mod	emergency	0.0.2.0.0.1.0.1.1.0	0.0.2.0.0.1.0.1.1.0.0	
# ::edge	shift-01	ARG1	collapse-01	0	0.0	
# ::edge	shift-01	ARG1	emergency	0.0.2.0.0.0	0.0.2.0.0.0.0	
# ::edge	shift-01	domain	it	0.0.2.0.0.0	0.0.2.0.0.0.2	
# ::edge	spend-01	ARG0	crew	0.0.2.0.0.1.0	0.0.2.0.0.1	
# ::edge	spend-01	ARG1	accident	0.0.2.0.0.1.0	0.0.2.0.0.1.0.0	
# ::edge	traffic	mod	road	0.0.2.1.0	0.0.2.1.0.0	
(s4 / shift-01 
      :ARG1 (c2 / collapse-01 
            :ARG0 (m / motorcycle 
                  :mod-of (c / cycle)) 
            :ARG1 (s5 / street) 
            :purpose-of (r4 / range-01 
                  :ARG0 (w / we 
                        :ARG0-of (r5 / respond-01 
                              :ARG1 (s6 / shift-01 
                                    :ARG1 (e2 / emergency) 
                                    :ARG1-of (q / quiet-41 
                                          :ARG0 5 
                                          :degree (r6 / relative)) 
                                    :domain (i / it)) 
                              :ARG2 (c3 / crew 
                                    :ARG0-of (s3 / spend-01 
                                          :ARG1 (a3 / accident 
                                                :location (r2 / road)) 
                                          :op-of (a2 / and 
                                                :op1 (s2 / scene) 
                                                :op2 (r / require-01 
                                                      :ARG1 (s / service 
                                                            :mod (e / emergency 
                                                                  :quant 3) 
                                                            :mod (a / all)) 
                                                      :ARG2 (p / presence)))) 
                                    :consist-of 2))) 
                  :ARG3 (a4 / accident 
                        :mod (t / traffic 
                              :mod (r3 / road))))))

# ::snt business executive leon steinfield 53 of brighton sussex left almost totally helpless by brain damage in road accident awarded 550000 agreed high court damages
# ::tok business executive leon steinfield 53 of brighton sussex left almost totally helpless by brain damage in road accident awarded 550000 agreed high court damages
# ::alignments 23-24|0.1.2.1.1 22-23|0.1.2.1.1.1 21-22|0.1.2.1.1.2 20-21|0.1.2.1 19-20|0.1.2.1.1.1.0 18-19|0.1.2 17-18|0.1.2.0 16-17|0.1.2.0.0 14-15|0.1 13-14|0.1.1 11-12|0 10-11|0.0 9-10|0.1.2.1.1.0 4-5|0.1.0 1-2|0.1.2.1.0.0 0-1|0.1.2.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:40.100
# ::node	0	helpless	11-12
# ::node	0.0	total	10-11
# ::node	0.1	damage-01	14-15
# ::node	0.1.0	53	4-5
# ::node	0.1.1	brain	13-14
# ::node	0.1.2	award-01	18-19
# ::node	0.1.2.0	accident	17-18
# ::node	0.1.2.0.0	road	16-17
# ::node	0.1.2.1	agree-01	20-21
# ::node	0.1.2.1.0	business	0-1
# ::node	0.1.2.1.0.0	executive	1-2
# ::node	0.1.2.1.1	damage-01	23-24
# ::node	0.1.2.1.1.0	almost	9-10
# ::node	0.1.2.1.1.1	court	22-23
# ::node	0.1.2.1.1.1.0	550000	19-20
# ::node	0.1.2.1.1.2	high	21-22
# ::root	0	helpless
# ::edge	accident	location	road	0.1.2.0	0.1.2.0.0	
# ::edge	agree-01	ARG0	business	0.1.2.1	0.1.2.1.0	
# ::edge	agree-01	ARG1	damage-01	0.1.2.1	0.1.2.1.1	
# ::edge	award-01	ARG0	accident	0.1.2	0.1.2.0	
# ::edge	award-01	ARG1	agree-01	0.1.2	0.1.2.1	
# ::edge	court	quant	550000	0.1.2.1.1.1	0.1.2.1.1.1.0	
# ::edge	damage-01	ARG0	53	0.1	0.1.0	
# ::edge	damage-01	ARG0	almost	0.1.2.1.1	0.1.2.1.1.0	
# ::edge	damage-01	ARG1	brain	0.1	0.1.1	
# ::edge	damage-01	ARG1	court	0.1.2.1.1	0.1.2.1.1.1	
# ::edge	damage-01	ARG2	award-01	0.1	0.1.2	
# ::edge	damage-01	mod	high	0.1.2.1.1	0.1.2.1.1.2	
# ::edge	executive	mod	business	0.1.2.1.0.0	0.1.2.1.0	
# ::edge	helpless	degree	total	0	0.0	
# ::edge	helpless	topic	damage-01	0	0.1	
(h2 / helpless 
      :degree (t / total) 
      :topic (d2 / damage-01 
            :ARG0 53 
            :ARG1 (b / brain) 
            :ARG2 (a2 / award-01 
                  :ARG0 (a3 / accident 
                        :location (r / road)) 
                  :ARG1 (a / agree-01 
                        :ARG0 (b2 / business 
                              :mod-of (e / executive)) 
                        :ARG1 (d / damage-01 
                              :ARG0 (a4 / almost) 
                              :ARG1 (c / court 
                                    :quant 550000) 
                              :mod (h / high))))))

# ::snt we are hoping the county will change its mind before theres an accident there mrs millett said
# ::tok we are hoping the county will change its mind before theres an accident there mrs millett said
# ::alignments 16-17|0 12-13|0.1 9-10|0.0.0.0.1 8-9|0.0.0 6-7|0.0.0.0 4-5|0.0 2-3|0.0.0.0.0.0 0-1|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:40.146
# ::node	0	say-01	16-17
# ::node	0.0	county	4-5
# ::node	0.0.0	mind	8-9
# ::node	0.0.0.0	change-01	6-7
# ::node	0.0.0.0.0	we	0-1
# ::node	0.0.0.0.0.0	hope-01	2-3
# ::node	0.0.0.0.1	before	9-10
# ::node	0.1	accident	12-13
# ::root	0	say-01
# ::edge	change-01	ARG0	we	0.0.0.0	0.0.0.0.0	
# ::edge	change-01	ARG1	mind	0.0.0.0	0.0.0	
# ::edge	change-01	time	before	0.0.0.0	0.0.0.0.1	
# ::edge	hope-01	ARG0	we	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	mind	poss	county	0.0.0	0.0	
# ::edge	say-01	ARG0	county	0	0.0	
# ::edge	say-01	ARG1	accident	0	0.1	
(s / say-01 
      :ARG0 (c2 / county 
            :poss-of (m / mind 
                  :ARG1-of (c / change-01 
                        :ARG0 (w / we 
                              :ARG0-of (h / hope-01)) 
                        :time (b / before)))) 
      :ARG1 (a / accident))

# ::snt and with little or no income your spouse or children could be the ones to suffer most from your accident, how different the picture might be if you had the protection of the midland personal accident plan, areas where you are likely to be  most vulnerable should an accident strike
# ::tok and with little or no income your spouse or children could be the ones to suffer most from your accident , how different the picture might be if you had the protection of the midland personal accident plan , areas where you are likely to be most vulnerable should an accident strike
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:40.150
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt beaten 82 by a greater manchester team which included four schoolboy internationals berkshire morale was further dented when six hours after departure their team coach which had already encountered galeforce winds driving rain and two major accidents was still some way short of reading
# ::tok beaten 82 by a greater manchester team which included four schoolboy internationals berkshire morale was further dented when six hours after departure their team coach which had already encountered galeforce winds driving rain and two major accidents was still some way short of reading
# ::alignments 43-44|0.0.0 41-42|0.0.0.1 40-41|0.0.0.0.1 39-40|0.0.0.0 38-39|0.0.0.0.0 36-37|0.1.0.0 35-36|0.1.0.0.0 34-35|0.1.0.1.1.1 33-34|0.1.0.1 32-33|0.1.0.1.1 31-32|0.1.0 30-31|0.1 28-29|0 27-28|0.2 24-25|0.0.1+0.0 23-24|0.0.1.0 21-22|0.0.1.1.0 20-21|0.0.1.1 19-20|0.0.1.1.0.0.1+0.0.1.1.0.0 18-19|0.0.1.1.0.0.0 15-16|0.0.1.1.0.1 9-10|0.1.0.1.1.0 8-9|0.1.0.1.0 6-7|0.1.0.1.0.0 5-6|0.1.0.1.0.0.1.0.0+0.1.0.1.0.0.1.0+0.1.0.1.0.0.1 4-5|0.1.0.1.0.0.0 1-2|0.0.1.1.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:41.549
# ::node	0	encounter-01	28-29
# ::node	0.0	person	24-25
# ::node	0.0.0	read-01	43-44
# ::node	0.0.0.0	some	39-40
# ::node	0.0.0.0.0	still	38-39
# ::node	0.0.0.0.1	way	40-41
# ::node	0.0.0.1	short	41-42
# ::node	0.0.1	coach-01	24-25
# ::node	0.0.1.0	team	23-24
# ::node	0.0.1.1	after	20-21
# ::node	0.0.1.1.0	depart-01	21-22
# ::node	0.0.1.1.0.0	temporal-quantity	19-20
# ::node	0.0.1.1.0.0.0	6	18-19
# ::node	0.0.1.1.0.0.1	hour	19-20
# ::node	0.0.1.1.0.1	further	15-16
# ::node	0.0.1.1.0.2	82	1-2
# ::node	0.1	wind	30-31
# ::node	0.1.0	drive-01	31-32
# ::node	0.1.0.0	accident	36-37
# ::node	0.1.0.0.0	major	35-36
# ::node	0.1.0.1	and	33-34
# ::node	0.1.0.1.0	include-01	8-9
# ::node	0.1.0.1.0.0	team	6-7
# ::node	0.1.0.1.0.0.0	great	4-5
# ::node	0.1.0.1.0.0.1	city	5-6
# ::node	0.1.0.1.0.0.1.0	name	5-6
# ::node	0.1.0.1.0.0.1.0.0	"Manchester"	5-6
# ::node	0.1.0.1.1	rain-01	32-33
# ::node	0.1.0.1.1.0	4	9-10
# ::node	0.1.0.1.1.1	2	34-35
# ::node	0.2	already	27-28
# ::root	0	encounter-01
# ::edge	82	op1	depart-01	0.0.1.1.0.2	0.0.1.1.0	
# ::edge	accident	mod	major	0.1.0.0	0.1.0.0.0	
# ::edge	after	op1	depart-01	0.0.1.1	0.0.1.1.0	
# ::edge	and	op1	drive-01	0.1.0.1	0.1.0	
# ::edge	and	op2	rain-01	0.1.0.1	0.1.0.1.1	
# ::edge	city	name	name	0.1.0.1.0.0.1	0.1.0.1.0.0.1.0	
# ::edge	coach-01	ARG0	person	0.0.1	0.0	
# ::edge	coach-01	ARG1	team	0.0.1	0.0.1.0	
# ::edge	coach-01	time	after	0.0.1	0.0.1.1	
# ::edge	depart-01	ARG0	temporal-quantity	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	depart-01	ARG1	further	0.0.1.1.0	0.0.1.1.0.1	
# ::edge	drive-01	ARG0	wind	0.1.0	0.1	
# ::edge	drive-01	ARG1	accident	0.1.0	0.1.0.0	
# ::edge	encounter-01	ARG0	person	0	0.0	
# ::edge	encounter-01	ARG1	wind	0	0.1	
# ::edge	encounter-01	time	already	0	0.2	
# ::edge	include-01	ARG0	team	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	include-01	ARG1	and	0.1.0.1.0	0.1.0.1	
# ::edge	name	op1	"Manchester"	0.1.0.1.0.0.1.0	0.1.0.1.0.0.1.0.0	
# ::edge	rain-01	ARG1	4	0.1.0.1.1	0.1.0.1.1.0	
# ::edge	rain-01	quant	2	0.1.0.1.1	0.1.0.1.1.1	
# ::edge	read-01	ARG0	person	0.0.0	0.0	
# ::edge	read-01	ARG1	some	0.0.0	0.0.0.0	
# ::edge	read-01	time	short	0.0.0	0.0.0.1	
# ::edge	some	mod	still	0.0.0.0	0.0.0.0.0	
# ::edge	team	mod	city	0.1.0.1.0.0	0.1.0.1.0.0.1	
# ::edge	team	mod	great	0.1.0.1.0.0	0.1.0.1.0.0.0	
# ::edge	temporal-quantity	quant	6	0.0.1.1.0.0	0.0.1.1.0.0.0	
# ::edge	temporal-quantity	unit	hour	0.0.1.1.0.0	0.0.1.1.0.0.1	
# ::edge	way	mod	some	0.0.0.0.1	0.0.0.0	
(e / encounter-01 
      :ARG0 (p / person 
            :ARG0-of (r / read-01 
                  :ARG1 (s2 / some 
                        :mod (s3 / still) 
                        :mod-of (w / way)) 
                  :time (s / short)) 
            :ARG0-of (c / coach-01 
                  :ARG1 (t / team) 
                  :time (a4 / after 
                        :op1 (d2 / depart-01 
                              :ARG0 (t2 / temporal-quantity 
                                    :quant 6 
                                    :unit (h / hour)) 
                              :ARG1 (f / further) 
                              :op-of 82)))) 
      :ARG1 (w2 / wind 
            :ARG0-of (d / drive-01 
                  :ARG1 (a / accident 
                        :mod (m / major)) 
                  :op-of (a2 / and 
                        :ARG1-of (i / include-01 
                              :ARG0 (t3 / team 
                                    :mod (g / great) 
                                    :mod (c2 / city 
                                          :name (n / name 
                                                :op1 "Manchester")))) 
                        :op1 (r2 / rain-01 
                              :ARG1 4 
                              :quant 2)))) 
      :time (a3 / already))

# ::snt the accident happened halfway through the second chukka of the match between windsor park and hildon as the prince lost his balance while making a shot
# ::tok the accident happened halfway through the second chukka of the match between windsor park and hildon as the prince lost his balance while making a shot
# ::alignments 25-26|0.1.0.0.0 21-22|0.1.0 19-20|0.1 18-19|0.1.0.0 14-15|0.1.1 13-14|0.1.1.0.0.0 11-12|0.1.1.0.0 10-11|0.1.1.0 3-4|0.2 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:41.607
# ::node	0	happen-01	2-3
# ::node	0.0	accident	1-2
# ::node	0.1	lose-02	19-20
# ::node	0.1.0	balance-01	21-22
# ::node	0.1.0.0	prince	18-19
# ::node	0.1.0.0.0	shoot-02	25-26
# ::node	0.1.1	and	14-15
# ::node	0.1.1.0	match-01	10-11
# ::node	0.1.1.0.0	between	11-12
# ::node	0.1.1.0.0.0	park	13-14
# ::node	0.2	halfway	3-4
# ::root	0	happen-01
# ::edge	and	op1	lose-02	0.1.1	0.1	
# ::edge	balance-01	ARG1	prince	0.1.0	0.1.0.0	
# ::edge	between	op1	park	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	happen-01	ARG1	accident	0	0.0	
# ::edge	happen-01	concession	lose-02	0	0.1	
# ::edge	happen-01	time	halfway	0	0.2	
# ::edge	lose-02	ARG1	balance-01	0.1	0.1.0	
# ::edge	match-01	ARG0	and	0.1.1.0	0.1.1	
# ::edge	match-01	ARG1	between	0.1.1.0	0.1.1.0.0	
# ::edge	shoot-02	ARG0	prince	0.1.0.0.0	0.1.0.0	
(h2 / happen-01 
      :ARG1 (a2 / accident) 
      :concession (l / lose-02 
            :ARG1 (b / balance-01 
                  :ARG1 (p / prince 
                        :ARG0-of (s / shoot-02))) 
            :op-of (a / and 
                  :ARG0-of (m / match-01 
                        :ARG1 (b2 / between 
                              :op1 (p2 / park))))) 
      :time (h / halfway))

# ::snt the american performed a series of yoga contortions throughout her interview explaining that she had to exercise and stretch after every match as a result of the accident
# ::tok the american performed a series of yoga contortions throughout her interview explaining that she had to exercise and stretch after every match as a result of the accident
# ::alignments 27-28|0.0 24-25|0 21-22|0.1.2.0 20-21|0.1.2.0.0 19-20|0.1.2 18-19|0.1.1.0.0+0.1.1.0 17-18|0.1.1 16-17|0.1 13-14|0.1.0 11-12|0.1.0.0 10-11|0.1.0.0.0 8-9|0.1.0.0.0.1 4-5|0.1.0.0.0.0.1 2-3|0.1.0.0.0.0 1-2|0.1.0.0.0.0.0.0.0+0.1.0.0.0.0.0.0+0.1.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:41.916
# ::node	0	result-01	24-25
# ::node	0.0	accident	27-28
# ::node	0.1	exercise-02	16-17
# ::node	0.1.0	she	13-14
# ::node	0.1.0.0	explain-01	11-12
# ::node	0.1.0.0.0	interview-01	10-11
# ::node	0.1.0.0.0.0	perform-01	2-3
# ::node	0.1.0.0.0.0.0	country	1-2
# ::node	0.1.0.0.0.0.0.0	name	1-2
# ::node	0.1.0.0.0.0.0.0.0	"America"	1-2
# ::node	0.1.0.0.0.0.1	series	4-5
# ::node	0.1.0.0.0.1	throughout	8-9
# ::node	0.1.1	and	17-18
# ::node	0.1.1.0	thing	18-19
# ::node	0.1.1.0.0	stretch-01	18-19
# ::node	0.1.2	after	19-20
# ::node	0.1.2.0	match-01	21-22
# ::node	0.1.2.0.0	every	20-21
# ::root	0	result-01
# ::edge	after	op1	match-01	0.1.2	0.1.2.0	
# ::edge	and	op1	exercise-02	0.1.1	0.1	
# ::edge	and	op2	thing	0.1.1	0.1.1.0	
# ::edge	country	name	name	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	exercise-02	ARG0	she	0.1	0.1.0	
# ::edge	exercise-02	time	after	0.1	0.1.2	
# ::edge	explain-01	ARG0	she	0.1.0.0	0.1.0	
# ::edge	explain-01	ARG1	interview-01	0.1.0.0	0.1.0.0.0	
# ::edge	match-01	mod	every	0.1.2.0	0.1.2.0.0	
# ::edge	name	op1	"America"	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0.0.0	
# ::edge	perform-01	ARG0	country	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	perform-01	ARG1	series	0.1.0.0.0.0	0.1.0.0.0.0.1	
# ::edge	perform-01	medium	interview-01	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	result-01	ARG1	accident	0	0.0	
# ::edge	result-01	ARG2	exercise-02	0	0.1	
# ::edge	stretch-01	ARG1	thing	0.1.1.0.0	0.1.1.0	
# ::edge	throughout	op1	interview-01	0.1.0.0.0.1	0.1.0.0.0	
(r / result-01 
      :ARG1 (a / accident) 
      :ARG2 (e2 / exercise-02 
            :ARG0 (s2 / she 
                  :ARG0-of (e3 / explain-01 
                        :ARG1 (i / interview-01 
                              :medium-of (p / perform-01 
                                    :ARG0 (c / country 
                                          :name (n / name 
                                                :op1 "America")) 
                                    :ARG1 (s3 / series)) 
                              :op-of (t2 / throughout)))) 
            :op-of (a3 / and 
                  :op1 (t / thing 
                        :ARG1-of (s / stretch-01))) 
            :time (a2 / after 
                  :op1 (m / match-01 
                        :mod (e / every)))))

# ::snt for two memorable years with our cat wink a superb red angora whose early death in an accident still wrings my heart
# ::tok for two memorable years with our cat wink a superb red angora whose early death in an accident still wrings my heart
# ::alignments 21-22|0.1.0.0 18-19|0.1.3 17-18|0.1.0 14-15|0.1 13-14|0.1.1 10-11|0.1.2 7-8|0 6-7|0.0 3-4|0.0.0.1+0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:42.039
# ::node	0	wink-01	7-8
# ::node	0.0	cat	6-7
# ::node	0.0.0	temporal-quantity	3-4
# ::node	0.0.0.0	2	1-2
# ::node	0.0.0.1	year	3-4
# ::node	0.1	die-01	14-15
# ::node	0.1.0	accident	17-18
# ::node	0.1.0.0	heart	21-22
# ::node	0.1.1	early	13-14
# ::node	0.1.2	red	10-11
# ::node	0.1.3	still	18-19
# ::root	0	wink-01
# ::edge	die-01	ARG1	accident	0.1	0.1.0	
# ::edge	die-01	mod	early	0.1	0.1.1	
# ::edge	die-01	time	still	0.1	0.1.3	
# ::edge	heart	poss	accident	0.1.0.0	0.1.0	
# ::edge	red	op1	die-01	0.1.2	0.1	
# ::edge	temporal-quantity	location	cat	0.0.0	0.0	
# ::edge	temporal-quantity	quant	2	0.0.0	0.0.0.0	
# ::edge	temporal-quantity	unit	year	0.0.0	0.0.0.1	
# ::edge	wink-01	ARG1	cat	0	0.0	
# ::edge	wink-01	ARG3	die-01	0	0.1	
(w / wink-01 
      :ARG1 (c / cat 
            :location-of (t / temporal-quantity 
                  :quant 2 
                  :unit (y / year))) 
      :ARG3 (d / die-01 
            :ARG1 (a / accident 
                  :poss-of (h / heart)) 
            :mod (e / early) 
            :op-of (r / red) 
            :time (s / still)))

# ::snt 99  oxfordshire college lecturers are calling for a fourday week at their place of work to help cut traffic jams road accidents and pollution
# ::tok 99 oxfordshire college lecturers are calling for a fourday week at their place of work to help cut traffic jams road accidents and pollution
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:42.040
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt meanwhile what i thought was politically impossible had happened heath had lost the leadership and by a series of split votes and accidents the party had elected a woman who was regarded as an upstart dash
# ::tok meanwhile what i thought was politically impossible had happened heath had lost the leadership and by a series of split votes and accidents the party had elected a woman who was regarded as an upstart dash
# ::alignments 31-32|0.0.1.1.0 28-29|0.0.1.1 26-27|0.0.1 24-25|0.0.1.0 22-23|0.1 21-22|0 20-21|0.0 19-20|0.0.0 17-18|0.2 14-15|0.0.1.2 11-12|0.0.1.2.2 8-9|0.0.1.2.1 3-4|0.0.1.2.0 2-3|0.0.1.2.0.0 0-1|0.0.1.2.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:42.348
# ::node	0	and	21-22
# ::node	0.0	vote-01	20-21
# ::node	0.0.0	split-01	19-20
# ::node	0.0.1	elect-01	26-27
# ::node	0.0.1.0	party	24-25
# ::node	0.0.1.1	woman	28-29
# ::node	0.0.1.1.0	regard-01	31-32
# ::node	0.0.1.2	and	14-15
# ::node	0.0.1.2.0	think-01	3-4
# ::node	0.0.1.2.0.0	i	2-3
# ::node	0.0.1.2.0.1	meanwhile	0-1
# ::node	0.0.1.2.1	happen-01	8-9
# ::node	0.0.1.2.2	lose-02	11-12
# ::node	0.1	accident	22-23
# ::node	0.2	series	17-18
# ::root	0	and
# ::edge	and	op1	think-01	0.0.1.2	0.0.1.2.0	
# ::edge	and	op1	vote-01	0	0.0	
# ::edge	and	op2	accident	0	0.1	
# ::edge	and	op2	happen-01	0.0.1.2	0.0.1.2.1	
# ::edge	and	op3	lose-02	0.0.1.2	0.0.1.2.2	
# ::edge	and	op4	elect-01	0.0.1.2	0.0.1	
# ::edge	and	quant	series	0	0.2	
# ::edge	elect-01	ARG0	party	0.0.1	0.0.1.0	
# ::edge	elect-01	ARG1	woman	0.0.1	0.0.1.1	
# ::edge	elect-01	extent	vote-01	0.0.1	0.0	
# ::edge	regard-01	ARG0	woman	0.0.1.1.0	0.0.1.1	
# ::edge	split-01	ARG1	vote-01	0.0.0	0.0	
# ::edge	think-01	ARG0	i	0.0.1.2.0	0.0.1.2.0.0	
# ::edge	think-01	time	meanwhile	0.0.1.2.0	0.0.1.2.0.1	
(a2 / and 
      :op1 (v / vote-01 
            :ARG1-of (s / split-01) 
            :extent-of (e / elect-01 
                  :ARG0 (p / party) 
                  :ARG1 (w / woman 
                        :ARG0-of (r / regard-01)) 
                  :op-of (a3 / and 
                        :op1 (t / think-01 
                              :ARG0 (i / i) 
                              :time (m / meanwhile)) 
                        :op2 (h / happen-01) 
                        :op3 (l / lose-02)))) 
      :op2 (a / accident) 
      :quant (s2 / series))

# ::snt first and foremost are road accidents and the impact of the risk of accidents dash
# ::tok first and foremost are road accidents and the impact of the risk of accidents dash
# ::alignments 13-14|0.1.0.0.0.0 11-12|0.1.0.0.0 8-9|0.1.0.0 6-7|0.1.0 5-6|0.1 4-5|0.1.0.0.1 2-3|0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:42.373
# ::node	0	and	1-2
# ::node	0.0	foremost	2-3
# ::node	0.1	accident	5-6
# ::node	0.1.0	and	6-7
# ::node	0.1.0.0	impact-01	8-9
# ::node	0.1.0.0.0	risk-01	11-12
# ::node	0.1.0.0.0.0	accident	13-14
# ::node	0.1.0.0.1	road	4-5
# ::root	0	and
# ::edge	and	op1	accident	0.1.0	0.1	
# ::edge	and	op1	foremost	0	0.0	
# ::edge	and	op2	accident	0	0.1	
# ::edge	and	op2	impact-01	0.1.0	0.1.0.0	
# ::edge	impact-01	ARG0	risk-01	0.1.0.0	0.1.0.0.0	
# ::edge	impact-01	ARG1	road	0.1.0.0	0.1.0.0.1	
# ::edge	risk-01	ARG1	accident	0.1.0.0.0	0.1.0.0.0.0	
(a4 / and 
      :op1 (f / foremost) 
      :op2 (a3 / accident 
            :op-of (a2 / and 
                  :op1 (i / impact-01 
                        :ARG0 (r / risk-01 
                              :ARG1 (a / accident)) 
                        :ARG1 (r2 / road)))))

# ::snt visitors are discerning yatchmen rich athenians and those lucky people who have found the island by accident dash
# ::tok visitors are discerning yatchmen rich athenians and those lucky people who have found the island by accident dash
# ::alignments 16-17|0.1.1.0 14-15|0.1.1 12-13|0.1 8-9|0.1.2 6-7|0 4-5|0.0 0-1|0.1.0.0+0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:42.449
# ::node	0	and	6-7
# ::node	0.0	rich	4-5
# ::node	0.1	find-01	12-13
# ::node	0.1.0	person	0-1
# ::node	0.1.0.0	visit-01	0-1
# ::node	0.1.1	island	14-15
# ::node	0.1.1.0	accident	16-17
# ::node	0.1.2	lucky	8-9
# ::root	0	and
# ::edge	and	mod	rich	0	0.0	
# ::edge	and	op1	find-01	0	0.1	
# ::edge	find-01	ARG0	person	0.1	0.1.0	
# ::edge	find-01	ARG1	island	0.1	0.1.1	
# ::edge	find-01	mod	lucky	0.1	0.1.2	
# ::edge	island	source	accident	0.1.1	0.1.1.0	
# ::edge	visit-01	ARG0	person	0.1.0.0	0.1.0	
(a2 / and 
      :mod (r / rich) 
      :op1 (f / find-01 
            :ARG0 (p / person 
                  :ARG0-of (v / visit-01)) 
            :ARG1 (i / island 
                  :source (a / accident)) 
            :mod (l / lucky)))

# ::snt however skiers should note that there is no personal accident cover included with the centurion package
# ::tok however skiers should note that there is no personal accident cover included with the centurion package
# ::alignments 15-16|0 11-12|0.0 9-10|0.0.1 8-9|0.0.1.0 7-8|0.0.0.0.0 3-4|0.0.0 2-3|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:42.516
# ::node	0	package	15-16
# ::node	0.0	include-01	11-12
# ::node	0.0.0	note	3-4
# ::node	0.0.0.0	recommend-01	2-3
# ::node	0.0.0.0.0	-	7-8
# ::node	0.0.1	accident	9-10
# ::node	0.0.1.0	personal	8-9
# ::root	0	package
(p / package 
      :ARG2-of (i / include-01 
            :ARG0 (n / note 
                  :ARG1-of (r / recommend-01 
                        :ARG0 (- / -))) 
            :ARG1 (a / accident 
                  :mod (p2 / personal))))

# ::snt weve included unlimited mileage local taxes and in italy collision damage waiver for a small additional charge payable locally when you collect your car you may also take out personal accident insurance
# ::tok weve included unlimited mileage local taxes and in italy collision damage waiver for a small additional charge payable locally when you collect your car you may also take out personal accident insurance
# ::alignments 31-32|0.0.0.0.0.1.1.0 30-31|0.0.0.0.0.1.1.0.2 29-30|0.0.0.0.0.1.1.0.2.0 26-27|0.0.0.0 25-26|0.0.0.0.0.0+0.0.0.0.0 24-25|0.0.0.0.0.1.1.0.1 23-24|0.0.0.0.0.1.1 21-22|0.0.0.0.0.1 20-21|0.0.0.0.0.1.0 18-19|0.0.0.0.0.1.2 15-16|0.0.0.0.0.1.1.0.0.2 14-15|0.0.0.1.0 11-12|0.0.0.0.0.1.1.0.0.1+0.0.0.0.0.1.1.0.0.1.0 10-11|0.0.0.0.0.1.1.0.0 9-10|0.0.0.0.0.1.1.0.0.0 8-9|0.0.0.0.0.1.1.0.0.0.0.0.0+0.0.0.0.0.1.1.0.0.0.0.0+0.0.0.0.0.1.1.0.0.0.0 6-7|0.0 5-6|0.0.0 4-5|0.0.0.2 2-3|0.0.0.1.1+0.0.0.1 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:43.888
# ::node	0	include-01	1-2
# ::node	0.0	and	6-7
# ::node	0.0.0	tax-01	5-6
# ::node	0.0.0.0	also	26-27
# ::node	0.0.0.0.0	date-entity	25-26
# ::node	0.0.0.0.0.0	5	25-26
# ::node	0.0.0.0.0.1	collect-01	21-22
# ::node	0.0.0.0.0.1.0	you	20-21
# ::node	0.0.0.0.0.1.1	car	23-24
# ::node	0.0.0.0.0.1.1.0	insure-02	31-32
# ::node	0.0.0.0.0.1.1.0.0	damage-01	10-11
# ::node	0.0.0.0.0.1.1.0.0.0	collide-01	9-10
# ::node	0.0.0.0.0.1.1.0.0.0.0	country	8-9
# ::node	0.0.0.0.0.1.1.0.0.0.0.0	name	8-9
# ::node	0.0.0.0.0.1.1.0.0.0.0.0.0	"Italy"	8-9
# ::node	0.0.0.0.0.1.1.0.0.1	waive-01	11-12
# ::node	0.0.0.0.0.1.1.0.0.1.0	thing	11-12
# ::node	0.0.0.0.0.1.1.0.0.2	additional	15-16
# ::node	0.0.0.0.0.1.1.0.1	you	24-25
# ::node	0.0.0.0.0.1.1.0.2	accident	30-31
# ::node	0.0.0.0.0.1.1.0.2.0	personal	29-30
# ::node	0.0.0.0.0.1.2	local	18-19
# ::node	0.0.0.1	limit-01	2-3
# ::node	0.0.0.1.0	small	14-15
# ::node	0.0.0.1.1	-	2-3
# ::node	0.0.0.2	local	4-5
# ::root	0	include-01
# ::edge	accident	mod	personal	0.0.0.0.0.1.1.0.2	0.0.0.0.0.1.1.0.2.0	
# ::edge	and	op1	tax-01	0.0	0.0.0	
# ::edge	collect-01	ARG0	you	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	collect-01	ARG1	car	0.0.0.0.0.1	0.0.0.0.0.1.1	
# ::edge	collect-01	time	local	0.0.0.0.0.1	0.0.0.0.0.1.2	
# ::edge	collide-01	ARG0	country	0.0.0.0.0.1.1.0.0.0	0.0.0.0.0.1.1.0.0.0.0	
# ::edge	country	name	name	0.0.0.0.0.1.1.0.0.0.0	0.0.0.0.0.1.1.0.0.0.0.0	
# ::edge	damage-01	ARG1	collide-01	0.0.0.0.0.1.1.0.0	0.0.0.0.0.1.1.0.0.0	
# ::edge	damage-01	manner	additional	0.0.0.0.0.1.1.0.0	0.0.0.0.0.1.1.0.0.2	
# ::edge	date-entity	mod	also	0.0.0.0.0	0.0.0.0	
# ::edge	date-entity	month	5	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	date-entity	time	collect-01	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	include-01	ARG1	and	0	0.0	
# ::edge	insure-02	ARG0	car	0.0.0.0.0.1.1.0	0.0.0.0.0.1.1	
# ::edge	insure-02	ARG1	damage-01	0.0.0.0.0.1.1.0	0.0.0.0.0.1.1.0.0	
# ::edge	insure-02	ARG2	you	0.0.0.0.0.1.1.0	0.0.0.0.0.1.1.0.1	
# ::edge	insure-02	ARG4	accident	0.0.0.0.0.1.1.0	0.0.0.0.0.1.1.0.2	
# ::edge	limit-01	ARG0	small	0.0.0.1	0.0.0.1.0	
# ::edge	limit-01	polarity	-	0.0.0.1	0.0.0.1.1	
# ::edge	name	op1	"Italy"	0.0.0.0.0.1.1.0.0.0.0.0	0.0.0.0.0.1.1.0.0.0.0.0.0	
# ::edge	tax-01	ARG0	also	0.0.0	0.0.0.0	
# ::edge	tax-01	ARG1	limit-01	0.0.0	0.0.0.1	
# ::edge	tax-01	mod	local	0.0.0	0.0.0.2	
# ::edge	waive-01	ARG0	thing	0.0.0.0.0.1.1.0.0.1	0.0.0.0.0.1.1.0.0.1.0	
# ::edge	waive-01	ARG1	damage-01	0.0.0.0.0.1.1.0.0.1	0.0.0.0.0.1.1.0.0	
(i2 / include-01 
      :ARG1 (a4 / and 
            :op1 (t2 / tax-01 
                  :ARG0 (a2 / also 
                        :mod-of (d / date-entity 
                              :month 5 
                              :time (c2 / collect-01 
                                    :ARG0 (y2 / you) 
                                    :ARG1 (c / car 
                                          :ARG0-of (i / insure-02 
                                                :ARG1 (d2 / damage-01 
                                                      :ARG1 (c3 / collide-01 
                                                            :ARG0 (c4 / country 
                                                                  :name (n / name 
                                                                        :op1 "Italy"))) 
                                                      :ARG1-of (w / waive-01 
                                                            :ARG0 (t / thing)) 
                                                      :manner (a3 / additional)) 
                                                :ARG2 (y / you) 
                                                :ARG4 (a / accident 
                                                      :mod (p / personal)))) 
                                    :time (l / local)))) 
                  :ARG1 (l3 / limit-01 
                        :ARG0 (s / small) 
                        :polarity -) 
                  :mod (l2 / local))))

# ::snt west tip won the nations heart when he survived a nearfatal accident to win the grand national
# ::tok west tip won the nations heart when he survived a nearfatal accident to win the grand national
# ::alignments 16-17|0.0 15-16|0 13-14|0.0.0.0.1 11-12|0.0.0.0.0 8-9|0.0.0.0 7-8|0.0.0 5-6|0.0.0.0.2.1 4-5|0.0.0.0.2.1.0 2-3|0.0.0.0.2 1-2|0.0.0.0.2.0 0-1|0.0.0.0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:43.972
# ::node	0	grand	15-16
# ::node	0.0	nation	16-17
# ::node	0.0.0	he	7-8
# ::node	0.0.0.0	survive-01	8-9
# ::node	0.0.0.0.0	accident	11-12
# ::node	0.0.0.0.1	win-01	13-14
# ::node	0.0.0.0.2	win-01	2-3
# ::node	0.0.0.0.2.0	tip	1-2
# ::node	0.0.0.0.2.0.0	west	0-1
# ::node	0.0.0.0.2.1	heart	5-6
# ::node	0.0.0.0.2.1.0	nation	4-5
# ::root	0	grand
(g / grand 
      :mod-of (n / nation 
            :compared-to (h / he 
                  :ARG0-of (s / survive-01 
                        :ARG1 (a / accident) 
                        :ARG2 (w / win-01) 
                        :condition-of (w2 / win-01 
                              :ARG0 (t / tip 
                                    :mod (w3 / west)) 
                              :ARG1 (h2 / heart 
                                    :poss (n2 / nation)))))))

# ::snt of what possible use to anybody are such figures  the fact that accidents are now apparently more expensive to cope with will not enable us to set ourselves a county budget of accidents allowing only so many per year, and whether the number of accidents increases or decreases is immaterial so far as provision of police fire crews ambulance crews and hospitals is concerned
# ::tok of what possible use to anybody are such figures the fact that accidents are now apparently more expensive to cope with will not enable us to set ourselves a county budget of accidents allowing only so many per year , and whether the number of accidents increases or decreases is immaterial so far as provision of police fire crews ambulance crews and hospitals is concerned
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:43.972
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt it was about how to deal with road accident and i arranged for a smashedup car to be towed into the studio and for actors to sprawl around madeup to look as if they had appalling injuries
# ::tok it was about how to deal with road accident and i arranged for a smashedup car to be towed into the studio and for actors to sprawl around madeup to look as if they had appalling injuries
# ::alignments 36-37|0.0.0.0.0.0 35-36|0.0.0.0 33-34|0.0.0.0.0 27-28|0.0.0.0.0.0.0 22-23|0.0.0.1.1 15-16|0.1 11-12|0 10-11|0.0 9-10|0.0.0 8-9|0.0.0.2 7-8|0.0.0.2.0 5-6|0.0.0.1 0-1|0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:44.201
# ::node	0	arrange-01	11-12
# ::node	0.0	i	10-11
# ::node	0.0.0	and	9-10
# ::node	0.0.0.0	appall-01	35-36
# ::node	0.0.0.0.0	they	33-34
# ::node	0.0.0.0.0.0	injure-01	36-37
# ::node	0.0.0.0.0.0.0	around	27-28
# ::node	0.0.0.1	deal-01	5-6
# ::node	0.0.0.1.0	it	0-1
# ::node	0.0.0.1.1	and	22-23
# ::node	0.0.0.2	accident	8-9
# ::node	0.0.0.2.0	road	7-8
# ::node	0.1	car	15-16
# ::root	0	arrange-01
# ::edge	accident	location	road	0.0.0.2	0.0.0.2.0	
# ::edge	and	op1	accident	0.0.0	0.0.0.2	
# ::edge	and	op1	deal-01	0.0.0.1.1	0.0.0.1	
# ::edge	and	op2	i	0.0.0	0.0	
# ::edge	appall-01	ARG0	and	0.0.0.0	0.0.0	
# ::edge	appall-01	ARG1	they	0.0.0.0	0.0.0.0.0	
# ::edge	arrange-01	ARG0	i	0	0.0	
# ::edge	arrange-01	ARG1	car	0	0.1	
# ::edge	deal-01	ARG0	it	0.0.0.1	0.0.0.1.0	
# ::edge	deal-01	ARG1	and	0.0.0.1	0.0.0	
# ::edge	injure-01	ARG0	around	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	injure-01	ARG1	they	0.0.0.0.0.0	0.0.0.0.0	
(a4 / arrange-01 
      :ARG0 (i2 / i 
            :op-of (a5 / and 
                  :ARG0-of (a / appall-01 
                        :ARG1 (t / they 
                              :ARG1-of (i / injure-01 
                                    :ARG0 (a2 / around)))) 
                  :ARG1-of (d / deal-01 
                        :ARG0 (i3 / it) 
                        :op-of (a3 / and)) 
                  :op1 (a6 / accident 
                        :location (r / road)))) 
      :ARG1 (c / car))

# ::snt it never occurred to me that if i had an accident and survived my life insurance would pay me nothing
# ::tok it never occurred to me that if i had an accident and survived my life insurance would pay me nothing
# ::alignments 19-20|0.0.1.0 17-18|0.0.1 15-16|0.0.2 14-15|0.0.2.0 12-13|0.0 11-12|0 10-11|0.0.4 7-8|0.0.0 0-1|0.0.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:44.379
# ::node	0	and	11-12
# ::node	0.0	survive-01	12-13
# ::node	0.0.0	i	7-8
# ::node	0.0.1	pay-01	17-18
# ::node	0.0.1.0	nothing	19-20
# ::node	0.0.2	insure-02	15-16
# ::node	0.0.2.0	life	14-15
# ::node	0.0.3	it	0-1
# ::node	0.0.4	accident	10-11
# ::root	0	and
# ::edge	and	op1	survive-01	0	0.0	
# ::edge	insure-02	ARG1	life	0.0.2	0.0.2.0	
# ::edge	pay-01	ARG0	survive-01	0.0.1	0.0	
# ::edge	pay-01	ARG1	nothing	0.0.1	0.0.1.0	
# ::edge	survive-01	ARG0	i	0.0	0.0.0	
# ::edge	survive-01	ARG1	insure-02	0.0	0.0.2	
# ::edge	survive-01	ARG2	it	0.0	0.0.3	
# ::edge	survive-01	ARG3	accident	0.0	0.0.4	
(a / and 
      :op1 (s / survive-01 
            :ARG0 (i2 / i) 
            :ARG0-of (p / pay-01 
                  :ARG1 (n / nothing)) 
            :ARG1 (i / insure-02 
                  :ARG1 (l / life)) 
            :ARG2 (i3 / it) 
            :ARG3 (a2 / accident)))

# ::snt they sang hymns and said a prayer for the 31 people who died and those who suffered from radiation in the april 1986 accident
# ::tok they sang hymns and said a prayer for the 31 people who died and those who suffered from radiation in the april 1986 accident
# ::alignments 23-24|0.0.0 21-23|0.0.0.1.1+0.0.0.1.0+0.0.0.1 18-19|0 16-17|0.0 13-14|0.0.0.0.0.0.0 12-13|0.0.0.0.0.0.0.0 6-7|0.0.0.0.0.1 4-5|0.0.0.0.0.0 3-4|0.0.0.0.0.0.1 1-2|0.0.0.0 0-1|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:44.521
# ::node	0	radiation	18-19
# ::node	0.0	suffer-01	16-17
# ::node	0.0.0	accident	23-24
# ::node	0.0.0.0	sing-01	1-2
# ::node	0.0.0.0.0	they	0-1
# ::node	0.0.0.0.0.0	say-01	4-5
# ::node	0.0.0.0.0.0.0	and	13-14
# ::node	0.0.0.0.0.0.0.0	die-01	12-13
# ::node	0.0.0.0.0.0.1	and	3-4
# ::node	0.0.0.0.0.1	pray-01	6-7
# ::node	0.0.0.1	date-entity	21-23
# ::node	0.0.0.1.0	4	21-23
# ::node	0.0.0.1.1	1986	21-23
# ::root	0	radiation
(r / radiation 
      :ARG0-of (s / suffer-01 
            :ARG1 (a / accident 
                  :ARG1-of (s3 / sing-01 
                        :ARG0 (t / they 
                              :ARG0-of (s2 / say-01 
                                    :ARG1 (a2 / and 
                                          :op1 (d2 / die-01)) 
                                    :op-of (a3 / and)) 
                              :ARG1-of (p / pray-01))) 
                  :time (d / date-entity 
                        :month 4 
                        :year 1986))))

# ::snt one of these officers pc peter chandler a member of the forces accident investigation unit said he had seen a sign warning of a slippery road surface some time after the accident but could not say whether it had been there on the day in question
# ::tok one of these officers pc peter chandler a member of the forces accident investigation unit said he had seen a sign warning of a slippery road surface some time after the accident but could not say whether it had been there on the day in question
# ::alignments 45-46|0.0.0.0.1 43-44|0.0.0.0.1.0 37-38|0.1.0.0.1 35-36|0.1.0.0 33-34|0.1.0 32-33|0.1 31-32|0.0.3.0 29-30|0.0.3 28-29|0.1.0.0.0 27-28|0.1.0.0.0.0 26-27|0.0.0.0.0 25-26|0.0.0.0.0.0 21-22|0.0.0.0 18-19|0.0 16-17|0.0.0 15-16|0 14-15|0.0.2 13-14|0.0.2.0 12-13|0.0.2.0.0 11-12|0.0.2.1.0.0 8-9|0.0.2.1+0.0.2.1.0 3-4|0.0.1.0+0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:46.226
# ::node	0	say-01	15-16
# ::node	0.0	see-01	18-19
# ::node	0.0.0	he	16-17
# ::node	0.0.0.0	warn-01	21-22
# ::node	0.0.0.0.0	surface	26-27
# ::node	0.0.0.0.0.0	road	25-26
# ::node	0.0.0.0.1	question-01	45-46
# ::node	0.0.0.0.1.0	day	43-44
# ::node	0.0.1	have-org-role-91	3-4
# ::node	0.0.1.0	officer	3-4
# ::node	0.0.2	unit	14-15
# ::node	0.0.2.0	investigate-01	13-14
# ::node	0.0.2.0.0	accident	12-13
# ::node	0.0.2.1	member	8-9
# ::node	0.0.2.1.0	have-org-role-91	8-9
# ::node	0.0.2.1.0.0	force	11-12
# ::node	0.0.3	after	29-30
# ::node	0.0.3.0	accident	31-32
# ::node	0.1	contrast-01	32-33
# ::node	0.1.0	possible	33-34
# ::node	0.1.0.0	say-01	35-36
# ::node	0.1.0.0.0	time	28-29
# ::node	0.1.0.0.0.0	some	27-28
# ::node	0.1.0.0.1	it	37-38
# ::root	0	say-01
# ::edge	after	op1	accident	0.0.3	0.0.3.0	
# ::edge	contrast-01	ARG1	say-01	0.1	0	
# ::edge	contrast-01	ARG2	possible	0.1	0.1.0	
# ::edge	have-org-role-91	ARG1	force	0.0.2.1.0	0.0.2.1.0.0	
# ::edge	have-org-role-91	ARG2	member	0.0.2.1.0	0.0.2.1	
# ::edge	have-org-role-91	ARG2	officer	0.0.1	0.0.1.0	
# ::edge	investigate-01	ARG0	unit	0.0.2.0	0.0.2	
# ::edge	investigate-01	ARG1	accident	0.0.2.0	0.0.2.0.0	
# ::edge	member	poss	unit	0.0.2.1	0.0.2	
# ::edge	possible	domain	say-01	0.1.0	0.1.0.0	
# ::edge	question-01	ARG1	day	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	question-01	ARG2	warn-01	0.0.0.0.1	0.0.0.0	
# ::edge	say-01	ARG0	time	0.1.0.0	0.1.0.0.0	
# ::edge	say-01	ARG1	it	0.1.0.0	0.1.0.0.1	
# ::edge	say-01	ARG1	see-01	0	0.0	
# ::edge	see-01	ARG0	he	0.0	0.0.0	
# ::edge	see-01	ARG1	have-org-role-91	0.0	0.0.1	
# ::edge	see-01	ARG2	unit	0.0	0.0.2	
# ::edge	see-01	time	after	0.0	0.0.3	
# ::edge	surface	mod	road	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	time	quant	some	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	warn-01	ARG0	surface	0.0.0.0	0.0.0.0.0	
# ::edge	warn-01	ARG1	he	0.0.0.0	0.0.0	
(s5 / say-01 
      :ARG1 (s4 / see-01 
            :ARG0 (h / he 
                  :ARG1-of (w / warn-01 
                        :ARG0 (s3 / surface 
                              :mod (r / road)) 
                        :ARG2-of (q / question-01 
                              :ARG1 (d / day)))) 
            :ARG1 (h3 / have-org-role-91 
                  :ARG2 (o / officer)) 
            :ARG2 (u / unit 
                  :ARG0-of (i2 / investigate-01 
                        :ARG1 (a3 / accident)) 
                  :poss-of (m / member 
                        :ARG2-of (h2 / have-org-role-91 
                              :ARG1 (f / force)))) 
            :time (a2 / after 
                  :op1 (a / accident))) 
      :ARG1-of (c / contrast-01 
            :ARG2 (p / possible 
                  :domain (s / say-01 
                        :ARG0 (t / time 
                              :quant (s2 / some)) 
                        :ARG1 (i / it)))))

# ::snt what if you were unable ever to work again  accidents strike without warning
# ::tok what if you were unable ever to work again accidents strike without warning
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:46.227
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt in the first world war she lost this independence by accident almost before fighting had started
# ::tok in the first world war she lost this independence by accident almost before fighting had started
# ::alignments 15-16|0.0.0 13-14|0.0.0.0 12-13|0.0.0.1 11-12|0.0.0.1.0 10-11|0.1.0 8-9|0.1.2+0.1 7-8|0.1.1 6-7|0 5-6|0.0 4-5|0.2 3-4|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:46.299
# ::node	0	lose-02	6-7
# ::node	0.0	she	5-6
# ::node	0.0.0	start-01	15-16
# ::node	0.0.0.0	fight-01	13-14
# ::node	0.0.0.1	before	12-13
# ::node	0.0.0.1.0	almost	11-12
# ::node	0.1	depend-01	8-9
# ::node	0.1.0	accident	10-11
# ::node	0.1.1	this	7-8
# ::node	0.1.2	-	8-9
# ::node	0.2	war	4-5
# ::node	0.2.0	world	3-4
# ::root	0	lose-02
# ::edge	before	mod	almost	0.0.0.1	0.0.0.1.0	
# ::edge	before	op1	start-01	0.0.0.1	0.0.0	
# ::edge	depend-01	ARG1	accident	0.1	0.1.0	
# ::edge	depend-01	mod	this	0.1	0.1.1	
# ::edge	depend-01	polarity	-	0.1	0.1.2	
# ::edge	lose-02	ARG0	she	0	0.0	
# ::edge	lose-02	ARG1	depend-01	0	0.1	
# ::edge	lose-02	time	war	0	0.2	
# ::edge	start-01	ARG0	she	0.0.0	0.0	
# ::edge	start-01	ARG1	fight-01	0.0.0	0.0.0.0	
# ::edge	war	poss	world	0.2	0.2.0	
(l / lose-02 
      :ARG0 (s2 / she 
            :ARG0-of (s / start-01 
                  :ARG1 (f / fight-01) 
                  :op-of (b / before 
                        :mod (a / almost)))) 
      :ARG1 (d / depend-01 
            :ARG1 (a2 / accident) 
            :mod (t / this) 
            :polarity -) 
      :time (w / war 
            :poss (w2 / world)))

# ::snt however the air accidents branch recommended that the civil aviation authority should order further more rigorous corrosion checks and an accelerated replacement programme for the suspect parts
# ::tok however the air accidents branch recommended that the civil aviation authority should order further more rigorous corrosion checks and an accelerated replacement programme for the suspect parts
# ::alignments 26-27|0.0.2.0.0 25-26|0.0.2.0 22-23|0.2 21-22|0.2.1 20-21|0.2.0 18-19|0 17-18|0.1 15-16|0.1.0 13-14|0.0.0 11-12|0.0 10-11|0.0.2 9-10|0.0.2.1 8-9|0.2.1.0 5-6|0.0.1 4-5|0.0.1.0 3-4|0.0.1.0.0 2-3|0.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:46.545
# ::node	0	and	18-19
# ::node	0.0	recommend-01	11-12
# ::node	0.0.0	further	13-14
# ::node	0.0.1	recommend-01	5-6
# ::node	0.0.1.0	branch	4-5
# ::node	0.0.1.0.0	accident	3-4
# ::node	0.0.1.0.0.0	air	2-3
# ::node	0.0.2	authority	10-11
# ::node	0.0.2.0	suspect-01	25-26
# ::node	0.0.2.0.0	part	26-27
# ::node	0.0.2.1	aviation	9-10
# ::node	0.1	check-01	17-18
# ::node	0.1.0	rigorous	15-16
# ::node	0.2	program	22-23
# ::node	0.2.0	accelerate-01	20-21
# ::node	0.2.1	replace-01	21-22
# ::node	0.2.1.0	civil	8-9
# ::root	0	and
# ::edge	accelerate-01	ARG1	program	0.2.0	0.2	
# ::edge	accident	mod	air	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	and	op1	recommend-01	0	0.0	
# ::edge	and	op2	check-01	0	0.1	
# ::edge	and	op3	program	0	0.2	
# ::edge	authority	mod	aviation	0.0.2	0.0.2.1	
# ::edge	branch	mod	accident	0.0.1.0	0.0.1.0.0	
# ::edge	check-01	mod	rigorous	0.1	0.1.0	
# ::edge	recommend-01	ARG0	branch	0.0.1	0.0.1.0	
# ::edge	recommend-01	ARG0	further	0.0	0.0.0	
# ::edge	recommend-01	ARG1	recommend-01	0.0.1	0.0	
# ::edge	recommend-01	ARG2	authority	0.0	0.0.2	
# ::edge	replace-01	ARG1	civil	0.2.1	0.2.1.0	
# ::edge	replace-01	ARG2	program	0.2.1	0.2	
# ::edge	suspect-01	ARG0	authority	0.0.2.0	0.0.2	
# ::edge	suspect-01	ARG1	part	0.0.2.0	0.0.2.0.0	
(a2 / and 
      :op1 (r3 / recommend-01 
            :ARG0 (f / further) 
            :ARG1-of (r4 / recommend-01 
                  :ARG0 (b / branch 
                        :mod (a5 / accident 
                              :mod (a6 / air)))) 
            :ARG2 (a3 / authority 
                  :ARG0-of (s / suspect-01 
                        :ARG1 (p / part)) 
                  :mod (a4 / aviation))) 
      :op2 (c / check-01 
            :mod (r2 / rigorous)) 
      :op3 (p2 / program 
            :ARG1-of (a / accelerate-01) 
            :ARG2-of (r / replace-01 
                  :ARG1 (c2 / civil))))

# ::snt ambulance station officer richard quinn said it was the worst accident i have been to and without doubt the saddest
# ::tok ambulance station officer richard quinn said it was the worst accident i have been to and without doubt the saddest
# ::alignments 17-18|0.1.1.0 15-16|0.1.1.0.0 11-12|0.1.1 10-11|0.1 9-10|0.1.0 6-7|0.0 5-6|0 3-5|0.2.0.0+0.2.0.1+0.2.0+0.2 2-3|0.2.1 1-2|0.2.1.0 0-1|0.2.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:46.763
# ::node	0	say-01	5-6
# ::node	0.0	it	6-7
# ::node	0.1	accident	10-11
# ::node	0.1.0	bad	9-10
# ::node	0.1.1	i	11-12
# ::node	0.1.1.0	doubt-01	17-18
# ::node	0.1.1.0.0	and	15-16
# ::node	0.2	person	3-5
# ::node	0.2.0	name	3-5
# ::node	0.2.0.0	"quinn"	3-5
# ::node	0.2.0.1	"richard"	3-5
# ::node	0.2.1	officer	2-3
# ::node	0.2.1.0	station	1-2
# ::node	0.2.1.0.0	ambulance	0-1
# ::root	0	say-01
# ::edge	accident	mod	bad	0.1	0.1.0	
# ::edge	accident	poss	i	0.1	0.1.1	
# ::edge	doubt-01	ARG0	i	0.1.1.0	0.1.1	
# ::edge	doubt-01	ARG1	and	0.1.1.0	0.1.1.0.0	
# ::edge	name	op1	"quinn"	0.2.0	0.2.0.0	
# ::edge	name	op2	"richard"	0.2.0	0.2.0.1	
# ::edge	officer	name	person	0.2.1	0.2	
# ::edge	person	name	name	0.2	0.2.0	
# ::edge	say-01	ARG0	it	0	0.0	
# ::edge	say-01	ARG1	accident	0	0.1	
# ::edge	say-01	ARG2	person	0	0.2	
# ::edge	station	mod	ambulance	0.2.1.0	0.2.1.0.0	
# ::edge	station	part	officer	0.2.1.0	0.2.1	
(s / say-01 
      :ARG0 (i2 / it) 
      :ARG1 (a2 / accident 
            :mod (b / bad) 
            :poss (i / i 
                  :ARG0-of (d / doubt-01 
                        :ARG1 (a / and)))) 
      :ARG2 (p / person 
            :name (n / name 
                  :op1 "quinn" 
                  :op2 "richard") 
            :name-of (o / officer 
                  :part-of (s2 / station 
                        :mod (a3 / ambulance)))))

# ::snt mrs catherine kelly aged 25 is in a coma and on a life support machine at a nursing home in bury greater manchester after suffering brain damage when she and her husband were in a road accident in july 1986
# ::tok mrs catherine kelly aged 25 is in a coma and on a life support machine at a nursing home in bury greater manchester after suffering brain damage when she and her husband were in a road accident in july 1986
# ::alignments 38-40|0.0.0.0.1.1+0.0.0.0.1.0+0.0.0.0.1 36-37|0.0.0.0 35-36|0.0.0.0.0 31-32|0.0.0.1+0.0.0 29-30|0 28-29|0.0 26-27|0.0.1.0 25-26|0.0.1.0.0 24-25|0.0.1 23-24|0.0.1.2 22-23|0.0.1.2.0.1.0.1+0.0.1.2.0.1.0+0.0.1.2.0.1 21-22|0.0.1.2.0.1.0.0 20-21|0.0.1.2.0 18-19|0.0.1.2.0.0 14-15|0.0.1.2.0.0.0 13-14|0.0.1.2.0.0.0.0 12-13|0.0.1.2.0.0.0.0.0 9-10|0.0.1.2.0.2 8-9|0.0.1.2.0.2.0 4-5|0.0.1.1.0 3-4|0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:47.340
# ::node	0	and	29-30
# ::node	0.0	she	28-29
# ::node	0.0.0	have-rel-role-91	31-32
# ::node	0.0.0.0	accident	36-37
# ::node	0.0.0.0.0	road	35-36
# ::node	0.0.0.0.1	date-entity	38-40
# ::node	0.0.0.0.1.0	7	38-40
# ::node	0.0.0.0.1.1	1986	38-40
# ::node	0.0.0.1	husband	31-32
# ::node	0.0.1	suffer-01	24-25
# ::node	0.0.1.0	damage-01	26-27
# ::node	0.0.1.0.0	brain	25-26
# ::node	0.0.1.1	age-01	3-4
# ::node	0.0.1.1.0	25	4-5
# ::node	0.0.1.2	after	23-24
# ::node	0.0.1.2.0	bury-01	20-21
# ::node	0.0.1.2.0.0	home	18-19
# ::node	0.0.1.2.0.0.0	machine	14-15
# ::node	0.0.1.2.0.0.0.0	support-01	13-14
# ::node	0.0.1.2.0.0.0.0.0	life	12-13
# ::node	0.0.1.2.0.1	city	22-23
# ::node	0.0.1.2.0.1.0	name	22-23
# ::node	0.0.1.2.0.1.0.0	great	21-22
# ::node	0.0.1.2.0.1.0.1	"Manchester"	22-23
# ::node	0.0.1.2.0.2	and	9-10
# ::node	0.0.1.2.0.2.0	coma	8-9
# ::root	0	and
# ::edge	accident	location	road	0.0.0.0	0.0.0.0.0	
# ::edge	accident	time	date-entity	0.0.0.0	0.0.0.0.1	
# ::edge	after	op1	suffer-01	0.0.1.2	0.0.1	
# ::edge	age-01	ARG1	25	0.0.1.1	0.0.1.1.0	
# ::edge	age-01	ARG2	suffer-01	0.0.1.1	0.0.1	
# ::edge	and	op1	coma	0.0.1.2.0.2	0.0.1.2.0.2.0	
# ::edge	and	op1	she	0	0.0	
# ::edge	and	op2	bury-01	0.0.1.2.0.2	0.0.1.2.0	
# ::edge	bury-01	ARG0	home	0.0.1.2.0	0.0.1.2.0.0	
# ::edge	bury-01	ARG1	city	0.0.1.2.0	0.0.1.2.0.1	
# ::edge	bury-01	time	after	0.0.1.2.0	0.0.1.2	
# ::edge	city	name	name	0.0.1.2.0.1	0.0.1.2.0.1.0	
# ::edge	damage-01	ARG1	brain	0.0.1.0	0.0.1.0.0	
# ::edge	date-entity	month	7	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	date-entity	year	1986	0.0.0.0.1	0.0.0.0.1.1	
# ::edge	have-rel-role-91	ARG0	accident	0.0.0	0.0.0.0	
# ::edge	have-rel-role-91	ARG1	she	0.0.0	0.0	
# ::edge	have-rel-role-91	ARG2	husband	0.0.0	0.0.0.1	
# ::edge	machine	location	home	0.0.1.2.0.0.0	0.0.1.2.0.0	
# ::edge	machine	mod	support-01	0.0.1.2.0.0.0	0.0.1.2.0.0.0.0	
# ::edge	name	mod	great	0.0.1.2.0.1.0	0.0.1.2.0.1.0.0	
# ::edge	name	op1	"Manchester"	0.0.1.2.0.1.0	0.0.1.2.0.1.0.1	
# ::edge	suffer-01	ARG1	damage-01	0.0.1	0.0.1.0	
# ::edge	suffer-01	ARG2	she	0.0.1	0.0	
# ::edge	support-01	ARG1	life	0.0.1.2.0.0.0.0	0.0.1.2.0.0.0.0.0	
(a2 / and 
      :op1 (s / she 
            :ARG1-of (h / have-rel-role-91 
                  :ARG0 (a / accident 
                        :location (r / road) 
                        :time (d / date-entity 
                              :month 7 
                              :year 1986)) 
                  :ARG2 (h2 / husband)) 
            :ARG2-of (s2 / suffer-01 
                  :ARG1 (d2 / damage-01 
                        :ARG1 (b / brain)) 
                  :ARG2-of (a5 / age-01 
                        :ARG1 25) 
                  :op-of (a3 / after 
                        :time-of (b2 / bury-01 
                              :ARG0 (h3 / home 
                                    :location-of (m / machine 
                                          :mod (s3 / support-01 
                                                :ARG1 (l / life)))) 
                              :ARG1 (c / city 
                                    :name (n / name 
                                          :mod (g / great) 
                                          :op1 "Manchester")) 
                              :op-of (a4 / and 
                                    :op1 (c2 / coma)))))))

# ::snt in addition to workers compensation a number of states require nonoccupational disability insurancefo id102 many have enacted nofault automobile insurance and federal legislation has experimented with several compensation plans for special injuries notably black lung diseasefo id103 and now vaccine injuriesfo id104 as well as making itself responsible for excess insurance for nuclear accidents, other special compensation plans have been proposed for a great variety of accidents from medicalfo id106 and toxicchemical injuries to extension of workers compensationfo id108 or temporary disability insurance for twentyfour hour coverage
# ::tok in addition to workers compensation a number of states require nonoccupational disability insurancefo id102 many have enacted nofault automobile insurance and federal legislation has experimented with several compensation plans for special injuries notably black lung diseasefo id103 and now vaccine injuriesfo id104 as well as making itself responsible for excess insurance for nuclear accidents , other special compensation plans have been proposed for a great variety of accidents from medicalfo id106 and toxicchemical injuries to extension of workers compensationfo id108 or temporary disability insurance for twentyfour hour coverage
# ::alignments 87-88|0.0.0.1.0.0.3.0.2.1.1.1 86-87|0.0.0.1.0.0.3.0.2.1.1.1.0.0+0.0.0.1.0.0.3.0.2.1.1.1.0 83-84|0.0.0.1.0.0.3.0.2.1.1 82-83|0.0.0.1.0.0.3.0.2.1.1.0 81-82|0.0.0.1.0.0.3.0.2.1.1.2 80-81|0.0.0.1.0.0.3.0.2.1 77-78|0.0.0.1.0.0.3.0.2.2.0.1+0.0.0.1.0.0.3.0.2.2.0.1.0 75-76|0.0.0.1.0.0.3.0.2.1.0 73-74|0.0.0.1.0.0.3.0.2.2.0 71-72|0.0.0.1.0.0.3.0.2.2 67-68|0.0.0.1.0.0.3.0.2.0.1 65-66|0.0.0.1.0.0.3.0.2.0 64-65|0.0.0.1.0.0.3.0.2.0.0 61-62|0.0.0.1.0.0.3.0.2 58-59|0.0.0.1.0.0.3.0 57-58|0.0.0.1.0.0.3.0.1 56-57|0.0.0.1.0.0.3.0.1.0 55-56|0.0.0.1.0.0.3.0.3 53-54|0.0.0.1.0.0.3.0.2.2.0.1.0.0.1.0 52-53|0.0.0.1.0.0.3.0.2.2.0.0 50-51|0.0.0.1.0.0.3.0.2.2.0.1.0.0.1 49-50|0.0.0.1.0.0.3.0.2.2.0.1.0.0.1.1 47-48|0.0.0.1.0.0.3.0.2.2.0.1.0.0 43-44|0.0.0.1.0.0.3.0.0 39-40|0.0.0.1.0.0.2 38-39|0.0.0.1.0.0.3.1 37-38|0.0.0.1.0.0.3 33-34|0.0.0.1.0.0.3.0.2.2.0.1.0.0.0 32-33|0.0.0.1.0.0.3.0.2.2.0.1.0.0.0.0 31-32|0.0.0.0.1 30-31|0.0.0.0.1.1 28-29|0.0.0.0.1.0 27-28|0.0.0.0.1.0.0 26-27|0.0.0.0.1.0.1 22-23|0.0.0.1.1 21-22|0.0.0.1.1.0 20-21|0.0.0.1 19-20|0.0.0.1.0.0 18-19|0.0.0.1.0.0.1 16-17|0.0.0.1.0 14-15|0.0.0.1.0.0.0 11-12|0.1 9-10|0 8-9|0.0.1 6-7|0.0 4-5|0.0.0 3-4|0.0.0.0.0+0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:53.104
# ::node	0	require-01	9-10
# ::node	0.0	number	6-7
# ::node	0.0.0	compensate-01	4-5
# ::node	0.0.0.0	person	3-4
# ::node	0.0.0.0.0	work-01	3-4
# ::node	0.0.0.0.1	injure-01	31-32
# ::node	0.0.0.0.1.0	plan-01	28-29
# ::node	0.0.0.0.1.0.0	compensate-01	27-28
# ::node	0.0.0.0.1.0.1	several	26-27
# ::node	0.0.0.0.1.1	special	30-31
# ::node	0.0.0.1	and	20-21
# ::node	0.0.0.1.0	enact-01	16-17
# ::node	0.0.0.1.0.0	insure-02	19-20
# ::node	0.0.0.1.0.0.0	many	14-15
# ::node	0.0.0.1.0.0.1	automobile	18-19
# ::node	0.0.0.1.0.0.2	vaccine	39-40
# ::node	0.0.0.1.0.0.3	and	37-38
# ::node	0.0.0.1.0.0.3.0	plan-01	58-59
# ::node	0.0.0.1.0.0.3.0.0	well	43-44
# ::node	0.0.0.1.0.0.3.0.1	compensate-01	57-58
# ::node	0.0.0.1.0.0.3.0.1.0	special	56-57
# ::node	0.0.0.1.0.0.3.0.2	propose-01	61-62
# ::node	0.0.0.1.0.0.3.0.2.0	variety	65-66
# ::node	0.0.0.1.0.0.3.0.2.0.0	great	64-65
# ::node	0.0.0.1.0.0.3.0.2.0.1	accident	67-68
# ::node	0.0.0.1.0.0.3.0.2.1	or	80-81
# ::node	0.0.0.1.0.0.3.0.2.1.0	extend-01	75-76
# ::node	0.0.0.1.0.0.3.0.2.1.1	insure-02	83-84
# ::node	0.0.0.1.0.0.3.0.2.1.1.0	disability	82-83
# ::node	0.0.0.1.0.0.3.0.2.1.1.1	cover-03	87-88
# ::node	0.0.0.1.0.0.3.0.2.1.1.1.0	temporal-quantity	86-87
# ::node	0.0.0.1.0.0.3.0.2.1.1.1.0.0	hour	86-87
# ::node	0.0.0.1.0.0.3.0.2.1.1.2	temporary	81-82
# ::node	0.0.0.1.0.0.3.0.2.2	and	71-72
# ::node	0.0.0.1.0.0.3.0.2.2.0	injure-01	73-74
# ::node	0.0.0.1.0.0.3.0.2.2.0.0	nucleus	52-53
# ::node	0.0.0.1.0.0.3.0.2.2.0.1	work-01	77-78
# ::node	0.0.0.1.0.0.3.0.2.2.0.1.0	person	77-78
# ::node	0.0.0.1.0.0.3.0.2.2.0.1.0.0	responsible-41	47-48
# ::node	0.0.0.1.0.0.3.0.2.2.0.1.0.0.0	black	33-34
# ::node	0.0.0.1.0.0.3.0.2.2.0.1.0.0.0.0	notable	32-33
# ::node	0.0.0.1.0.0.3.0.2.2.0.1.0.0.1	insure-02	50-51
# ::node	0.0.0.1.0.0.3.0.2.2.0.1.0.0.1.0	accident	53-54
# ::node	0.0.0.1.0.0.3.0.2.2.0.1.0.0.1.1	exceed-01	49-50
# ::node	0.0.0.1.0.0.3.0.3	other	55-56
# ::node	0.0.0.1.0.0.3.1	now	38-39
# ::node	0.0.0.1.1	legislation	22-23
# ::node	0.0.0.1.1.0	federal	21-22
# ::node	0.0.1	state	8-9
# ::node	0.1	disability	11-12
# ::root	0	require-01
# ::edge	accident	mod	variety	0.0.0.1.0.0.3.0.2.0.1	0.0.0.1.0.0.3.0.2.0	
# ::edge	and	op1	compensate-01	0.0.0.1	0.0.0	
# ::edge	and	op1	insure-02	0.0.0.1.0.0.3	0.0.0.1.0.0	
# ::edge	and	op1	propose-01	0.0.0.1.0.0.3.0.2.2	0.0.0.1.0.0.3.0.2	
# ::edge	and	op2	injure-01	0.0.0.1.0.0.3.0.2.2	0.0.0.1.0.0.3.0.2.2.0	
# ::edge	and	op2	legislation	0.0.0.1	0.0.0.1.1	
# ::edge	and	time	now	0.0.0.1.0.0.3	0.0.0.1.0.0.3.1	
# ::edge	black	degree	notable	0.0.0.1.0.0.3.0.2.2.0.1.0.0.0	0.0.0.1.0.0.3.0.2.2.0.1.0.0.0.0	
# ::edge	compensate-01	ARG0	person	0.0.0	0.0.0.0	
# ::edge	compensate-01	ARG1	number	0.0.0	0.0	
# ::edge	compensate-01	ARG1	plan-01	0.0.0.0.1.0.0	0.0.0.0.1.0	
# ::edge	compensate-01	ARG1	plan-01	0.0.0.1.0.0.3.0.1	0.0.0.1.0.0.3.0	
# ::edge	compensate-01	mod	special	0.0.0.1.0.0.3.0.1	0.0.0.1.0.0.3.0.1.0	
# ::edge	cover-03	ARG0	temporal-quantity	0.0.0.1.0.0.3.0.2.1.1.1	0.0.0.1.0.0.3.0.2.1.1.1.0	
# ::edge	cover-03	ARG1	insure-02	0.0.0.1.0.0.3.0.2.1.1.1	0.0.0.1.0.0.3.0.2.1.1	
# ::edge	enact-01	ARG1	insure-02	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	enact-01	ARG2	and	0.0.0.1.0	0.0.0.1	
# ::edge	exceed-01	ARG1	insure-02	0.0.0.1.0.0.3.0.2.2.0.1.0.0.1.1	0.0.0.1.0.0.3.0.2.2.0.1.0.0.1	
# ::edge	extend-01	ARG1	or	0.0.0.1.0.0.3.0.2.1.0	0.0.0.1.0.0.3.0.2.1	
# ::edge	injure-01	ARG1	nucleus	0.0.0.1.0.0.3.0.2.2.0	0.0.0.1.0.0.3.0.2.2.0.0	
# ::edge	injure-01	ARG1	person	0.0.0.0.1	0.0.0.0	
# ::edge	injure-01	mod	special	0.0.0.0.1	0.0.0.0.1.1	
# ::edge	insure-02	ARG0	many	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	insure-02	ARG1	accident	0.0.0.1.0.0.3.0.2.2.0.1.0.0.1	0.0.0.1.0.0.3.0.2.2.0.1.0.0.1.0	
# ::edge	insure-02	ARG1	automobile	0.0.0.1.0.0	0.0.0.1.0.0.1	
# ::edge	insure-02	ARG1	disability	0.0.0.1.0.0.3.0.2.1.1	0.0.0.1.0.0.3.0.2.1.1.0	
# ::edge	insure-02	duration	temporary	0.0.0.1.0.0.3.0.2.1.1	0.0.0.1.0.0.3.0.2.1.1.2	
# ::edge	legislation	mod	federal	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	or	op1	insure-02	0.0.0.1.0.0.3.0.2.1	0.0.0.1.0.0.3.0.2.1.1	
# ::edge	plan-01	ARG0	well	0.0.0.1.0.0.3.0	0.0.0.1.0.0.3.0.0	
# ::edge	plan-01	ARG1	and	0.0.0.1.0.0.3.0	0.0.0.1.0.0.3	
# ::edge	plan-01	ARG1	injure-01	0.0.0.0.1.0	0.0.0.0.1	
# ::edge	plan-01	mod	other	0.0.0.1.0.0.3.0	0.0.0.1.0.0.3.0.3	
# ::edge	plan-01	quant	several	0.0.0.0.1.0	0.0.0.0.1.0.1	
# ::edge	propose-01	ARG0	variety	0.0.0.1.0.0.3.0.2	0.0.0.1.0.0.3.0.2.0	
# ::edge	propose-01	ARG1	plan-01	0.0.0.1.0.0.3.0.2	0.0.0.1.0.0.3.0	
# ::edge	propose-01	ARG2	or	0.0.0.1.0.0.3.0.2	0.0.0.1.0.0.3.0.2.1	
# ::edge	require-01	ARG0	number	0	0.0	
# ::edge	require-01	ARG1	disability	0	0.1	
# ::edge	responsible-41	ARG0	black	0.0.0.1.0.0.3.0.2.2.0.1.0.0	0.0.0.1.0.0.3.0.2.2.0.1.0.0.0	
# ::edge	responsible-41	ARG1	person	0.0.0.1.0.0.3.0.2.2.0.1.0.0	0.0.0.1.0.0.3.0.2.2.0.1.0	
# ::edge	responsible-41	ARG2	insure-02	0.0.0.1.0.0.3.0.2.2.0.1.0.0	0.0.0.1.0.0.3.0.2.2.0.1.0.0.1	
# ::edge	state	quant	number	0.0.1	0.0	
# ::edge	temporal-quantity	unit	hour	0.0.0.1.0.0.3.0.2.1.1.1.0	0.0.0.1.0.0.3.0.2.1.1.1.0.0	
# ::edge	vaccine	location	insure-02	0.0.0.1.0.0.2	0.0.0.1.0.0	
# ::edge	variety	mod	great	0.0.0.1.0.0.3.0.2.0	0.0.0.1.0.0.3.0.2.0.0	
# ::edge	work-01	ARG0	person	0.0.0.0.0	0.0.0.0	
# ::edge	work-01	ARG0	person	0.0.0.1.0.0.3.0.2.2.0.1	0.0.0.1.0.0.3.0.2.2.0.1.0	
# ::edge	work-01	ARG2	injure-01	0.0.0.1.0.0.3.0.2.2.0.1	0.0.0.1.0.0.3.0.2.2.0	
(r2 / require-01 
      :ARG0 (n4 / number 
            :ARG1-of (c4 / compensate-01 
                  :ARG0 (p5 / person 
                        :ARG0-of (w3 / work-01) 
                        :ARG1-of (i4 / injure-01 
                              :ARG1-of (p4 / plan-01 
                                    :ARG1-of (c3 / compensate-01) 
                                    :quant (s3 / several)) 
                              :mod (s2 / special))) 
                  :op-of (a5 / and 
                        :ARG2-of (e3 / enact-01 
                              :ARG1 (i5 / insure-02 
                                    :ARG0 (m / many) 
                                    :ARG1 (a6 / automobile) 
                                    :location-of (v2 / vaccine) 
                                    :op-of (a4 / and 
                                          :ARG1-of (p3 / plan-01 
                                                :ARG0 (w2 / well) 
                                                :ARG1-of (c2 / compensate-01 
                                                      :mod (s / special)) 
                                                :ARG1-of (p2 / propose-01 
                                                      :ARG0 (v / variety 
                                                            :mod (g / great) 
                                                            :mod-of (a2 / accident)) 
                                                      :ARG2 (o / or 
                                                            :ARG1-of (e / extend-01) 
                                                            :op1 (i / insure-02 
                                                                  :ARG1 (d / disability) 
                                                                  :ARG1-of (c / cover-03 
                                                                        :ARG0 (t / temporal-quantity 
                                                                              :unit (h / hour))) 
                                                                  :duration (t2 / temporary))) 
                                                      :op-of (a / and 
                                                            :op1 (i2 / injure-01 
                                                                  :ARG1 (n / nucleus) 
                                                                  :ARG2-of (w / work-01 
                                                                        :ARG0 (p / person 
                                                                              :ARG1-of (r / responsible-41 
                                                                                    :ARG0 (b / black 
                                                                                          :degree (n3 / notable)) 
                                                                                    :ARG2 (i3 / insure-02 
                                                                                          :ARG1 (a3 / accident) 
                                                                                          :ARG1-of (e2 / exceed-01)))))))) 
                                                :mod (o2 / other)) 
                                          :time (n2 / now)))) 
                        :op1 (l / legislation 
                              :mod (f / federal)))) 
            :quant-of (s4 / state)) 
      :ARG1 (d2 / disability))

# ::snt even more sensational than his singing were the words spoken by accident come on ma listen to this
# ::tok even more sensational than his singing were the words spoken by accident come on ma listen to this
# ::alignments 17-18|0.0 15-16|0 11-12|0.1 9-10|0.1.0 8-9|0.1.0.0 5-6|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:53.137
# ::node	0	listen-01	15-16
# ::node	0.0	this	17-18
# ::node	0.1	accident	11-12
# ::node	0.1.0	speak-01	9-10
# ::node	0.1.0.0	word	8-9
# ::node	0.1.0.0.0	sing-01	5-6
# ::root	0	listen-01
# ::edge	listen-01	ARG0	this	0	0.0	
# ::edge	listen-01	ARG1	accident	0	0.1	
# ::edge	speak-01	ARG1	word	0.1.0	0.1.0.0	
# ::edge	speak-01	location	accident	0.1.0	0.1	
# ::edge	word	domain	sing-01	0.1.0.0	0.1.0.0.0	
(l / listen-01 
      :ARG0 (t / this) 
      :ARG1 (a / accident 
            :location-of (s / speak-01 
                  :ARG1 (w / word 
                        :domain (s2 / sing-01)))))

# ::snt admitting the cogency of the widespread criticism of the tort system as too cumbersome costly and haphazard to accomplish its accident prevention and compensation objectivesfo id61 with respect to sporadic accidents like automobile collisions he contends that mass accidents are peculiarly amenable to tort treatment in class actions, inasmuch as these accidents are frequently the result of deliberate business decisions balancing safety against profits they should be especially amenable to control through threats of liability while their massive scale and statistical predictability render them peculiarly suitable for aggregative rather than casebycase adjudication
# ::tok admitting the cogency of the widespread criticism of the tort system as too cumbersome costly and haphazard to accomplish its accident prevention and compensation objectivesfo id61 with respect to sporadic accidents like automobile collisions he contends that mass accidents are peculiarly amenable to tort treatment in class actions , inasmuch as these accidents are frequently the result of deliberate business decisions balancing safety against profits they should be especially amenable to control through threats of liability while their massive scale and statistical predictability render them peculiarly suitable for aggregative rather than casebycase adjudication
# ::alignments 86-87|0.1 83-84|0 81-82|0.0.1 80-81|0.0 79-80|0.1.0 78-79|0.0.0 75-76|0.1.0.0.0 73-74|0.1.0.0 71-72|0.1.0.0.1 68-69|0.1.0.0.1.0.0.0.1.1 66-67|0.1.0.0.1.0.0.0.1.2 65-66|0.1.0.0.1.0 64-65|0.1.0.0.1.0.0.0.1 62-63|0.1.0.0.1.0.0.0 61-62|0.1.0.0.1.0.0 60-61|0.1.0.0.1.0.0.0.1.0.0 59-60|0.1.0.0.1.0.0.0.1.0 56-57|0.1.0.0.1.0.0.0.1.0.0.1 54-55|0.1.0.0.1.0.0.0.1.0.0.1.1 52-53|0.1.0.0.1.0.0.0.1.0.0.1.0 47-48|0.1.0.0.1.0.0.0.0.1.0.0.0.0 46-47|0.1.0.0.1.0.0.0.0.1.0.0.0.0.0 44-45|0.1.0.0.1.0.0.0.0.1.0.0.0 38-39|0.1.0.0.1.0.0.0.1.0.0.0 37-38|0.1.0.0.1.0.0.0.1.0.0.0.0 35-36|0.1.0.0.1.0.0.0.0.1.0.0.0.1.0 34-35|0.1.0.0.1.0.0.0.0.1.0.0.0.1 32-33|0.1.0.0.1.0.0.0.0.1.0.0.0.1.0.0 30-31|0.1.0.0.1.0.0.0.0.1.0.0.0.1.0.0.0 27-28|0.1.0.0.1.0.0.0.0.1.0.1 23-24|0.1.0.0.1.0.0.0.0.1.0.0 22-23|0.1.0.0.1.0.0.0.0.1.0 21-22|0.1.0.0.1.0.0.0.0 20-21|0.1.0.0.1.0.0.0.0.0 18-19|0.1.0.0.1.0.0.0.0.1 15-16|0.1.0.0.1.0.0.0.0.1.1 14-15|0.1.0.0.1.0.0.0.0.1.1.1 12-13|0.1.0.0.1.0.0.0.0.1.0.1.0 10-11|0.1.0.0.1.0.0.0.0.1.1.0.1 6-7|0.1.0.0.1.0.0.0.0.1.1.0 5-6|0.1.0.0.1.0.0.0.0.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:56.950
# ::node	0	render-01	83-84
# ::node	0.0	and	80-81
# ::node	0.0.0	massive	78-79
# ::node	0.0.1	statistic	81-82
# ::node	0.1	suit-01	86-87
# ::node	0.1.0	scale	79-80
# ::node	0.1.0.0	threaten-01	73-74
# ::node	0.1.0.0.0	liability	75-76
# ::node	0.1.0.0.1	control-01	71-72
# ::node	0.1.0.0.1.0	they	65-66
# ::node	0.1.0.0.1.0.0	balance-01	61-62
# ::node	0.1.0.0.1.0.0.0	safe-41	62-63
# ::node	0.1.0.0.1.0.0.0.0	prevent-01	21-22
# ::node	0.1.0.0.1.0.0.0.0.0	accident	20-21
# ::node	0.1.0.0.1.0.0.0.0.1	accomplish-01	18-19
# ::node	0.1.0.0.1.0.0.0.0.1.0	and	22-23
# ::node	0.1.0.0.1.0.0.0.0.1.0.0	compensate-01	23-24
# ::node	0.1.0.0.1.0.0.0.0.1.0.0.0	treat-03	44-45
# ::node	0.1.0.0.1.0.0.0.0.1.0.0.0.0	action	47-48
# ::node	0.1.0.0.1.0.0.0.0.1.0.0.0.0.0	class	46-47
# ::node	0.1.0.0.1.0.0.0.0.1.0.0.0.1	he	34-35
# ::node	0.1.0.0.1.0.0.0.0.1.0.0.0.1.0	contend-01	35-36
# ::node	0.1.0.0.1.0.0.0.0.1.0.0.0.1.0.0	automobile	32-33
# ::node	0.1.0.0.1.0.0.0.0.1.0.0.0.1.0.0.0	accident	30-31
# ::node	0.1.0.0.1.0.0.0.0.1.0.1	respect-01	27-28
# ::node	0.1.0.0.1.0.0.0.0.1.0.1.0	too	12-13
# ::node	0.1.0.0.1.0.0.0.0.1.1	and	15-16
# ::node	0.1.0.0.1.0.0.0.0.1.1.0	criticize-01	6-7
# ::node	0.1.0.0.1.0.0.0.0.1.1.0.0	wide	5-6
# ::node	0.1.0.0.1.0.0.0.0.1.1.0.1	system	10-11
# ::node	0.1.0.0.1.0.0.0.0.1.1.1	costly	14-15
# ::node	0.1.0.0.1.0.0.0.1	profit-01	64-65
# ::node	0.1.0.0.1.0.0.0.1.0	business	59-60
# ::node	0.1.0.0.1.0.0.0.1.0.0	decide-01	60-61
# ::node	0.1.0.0.1.0.0.0.1.0.0.0	accident	38-39
# ::node	0.1.0.0.1.0.0.0.1.0.0.0.0	mass	37-38
# ::node	0.1.0.0.1.0.0.0.1.0.0.1	result-01	56-57
# ::node	0.1.0.0.1.0.0.0.1.0.0.1.0	accident	52-53
# ::node	0.1.0.0.1.0.0.0.1.0.0.1.1	frequent	54-55
# ::node	0.1.0.0.1.0.0.0.1.1	especially	68-69
# ::node	0.1.0.0.1.0.0.0.1.2	recommend-01	66-67
# ::root	0	render-01
# ::edge	accident	degree	mass	0.1.0.0.1.0.0.0.1.0.0.0	0.1.0.0.1.0.0.0.1.0.0.0.0	
# ::edge	accident	mod	automobile	0.1.0.0.1.0.0.0.0.1.0.0.0.1.0.0.0	0.1.0.0.1.0.0.0.0.1.0.0.0.1.0.0	
# ::edge	accomplish-01	ARG0	and	0.1.0.0.1.0.0.0.0.1	0.1.0.0.1.0.0.0.0.1.0	
# ::edge	accomplish-01	ARG1	prevent-01	0.1.0.0.1.0.0.0.0.1	0.1.0.0.1.0.0.0.0	
# ::edge	action	mod	class	0.1.0.0.1.0.0.0.0.1.0.0.0.0	0.1.0.0.1.0.0.0.0.1.0.0.0.0.0	
# ::edge	and	mod	massive	0.0	0.0.0	
# ::edge	and	op1	compensate-01	0.1.0.0.1.0.0.0.0.1.0	0.1.0.0.1.0.0.0.0.1.0.0	
# ::edge	and	op1	criticize-01	0.1.0.0.1.0.0.0.0.1.1	0.1.0.0.1.0.0.0.0.1.1.0	
# ::edge	and	op1	statistic	0.0	0.0.1	
# ::edge	and	op2	costly	0.1.0.0.1.0.0.0.0.1.1	0.1.0.0.1.0.0.0.0.1.1.1	
# ::edge	and	op2	respect-01	0.1.0.0.1.0.0.0.0.1.0	0.1.0.0.1.0.0.0.0.1.0.1	
# ::edge	and	op3	accomplish-01	0.1.0.0.1.0.0.0.0.1.1	0.1.0.0.1.0.0.0.0.1	
# ::edge	balance-01	ARG0	they	0.1.0.0.1.0.0	0.1.0.0.1.0	
# ::edge	balance-01	ARG1	safe-41	0.1.0.0.1.0.0	0.1.0.0.1.0.0.0	
# ::edge	compensate-01	ARG1	treat-03	0.1.0.0.1.0.0.0.0.1.0.0	0.1.0.0.1.0.0.0.0.1.0.0.0	
# ::edge	contend-01	ARG0	he	0.1.0.0.1.0.0.0.0.1.0.0.0.1.0	0.1.0.0.1.0.0.0.0.1.0.0.0.1	
# ::edge	contend-01	ARG1	automobile	0.1.0.0.1.0.0.0.0.1.0.0.0.1.0	0.1.0.0.1.0.0.0.0.1.0.0.0.1.0.0	
# ::edge	control-01	ARG0	they	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	control-01	ARG1	threaten-01	0.1.0.0.1	0.1.0.0	
# ::edge	criticize-01	ARG0	wide	0.1.0.0.1.0.0.0.0.1.1.0	0.1.0.0.1.0.0.0.0.1.1.0.0	
# ::edge	criticize-01	ARG1	system	0.1.0.0.1.0.0.0.0.1.1.0	0.1.0.0.1.0.0.0.0.1.1.0.1	
# ::edge	decide-01	ARG0	accident	0.1.0.0.1.0.0.0.1.0.0	0.1.0.0.1.0.0.0.1.0.0.0	
# ::edge	decide-01	ARG1	business	0.1.0.0.1.0.0.0.1.0.0	0.1.0.0.1.0.0.0.1.0	
# ::edge	prevent-01	ARG0	safe-41	0.1.0.0.1.0.0.0.0	0.1.0.0.1.0.0.0	
# ::edge	prevent-01	ARG1	accident	0.1.0.0.1.0.0.0.0	0.1.0.0.1.0.0.0.0.0	
# ::edge	profit-01	ARG0	business	0.1.0.0.1.0.0.0.1	0.1.0.0.1.0.0.0.1.0	
# ::edge	profit-01	ARG1	especially	0.1.0.0.1.0.0.0.1	0.1.0.0.1.0.0.0.1.1	
# ::edge	recommend-01	ARG1	profit-01	0.1.0.0.1.0.0.0.1.2	0.1.0.0.1.0.0.0.1	
# ::edge	render-01	ARG1	and	0	0.0	
# ::edge	render-01	ARG2	suit-01	0	0.1	
# ::edge	respect-01	ARG1	too	0.1.0.0.1.0.0.0.0.1.0.1	0.1.0.0.1.0.0.0.0.1.0.1.0	
# ::edge	result-01	ARG0	accident	0.1.0.0.1.0.0.0.1.0.0.1	0.1.0.0.1.0.0.0.1.0.0.1.0	
# ::edge	result-01	ARG1	decide-01	0.1.0.0.1.0.0.0.1.0.0.1	0.1.0.0.1.0.0.0.1.0.0	
# ::edge	result-01	time	frequent	0.1.0.0.1.0.0.0.1.0.0.1	0.1.0.0.1.0.0.0.1.0.0.1.1	
# ::edge	safe-41	ARG1	profit-01	0.1.0.0.1.0.0.0	0.1.0.0.1.0.0.0.1	
# ::edge	suit-01	ARG0	scale	0.1	0.1.0	
# ::edge	threaten-01	ARG0	liability	0.1.0.0	0.1.0.0.0	
# ::edge	threaten-01	ARG2	scale	0.1.0.0	0.1.0	
# ::edge	treat-03	ARG0	action	0.1.0.0.1.0.0.0.0.1.0.0.0	0.1.0.0.1.0.0.0.0.1.0.0.0.0	
# ::edge	treat-03	ARG1	he	0.1.0.0.1.0.0.0.0.1.0.0.0	0.1.0.0.1.0.0.0.0.1.0.0.0.1	
(r / render-01 
      :ARG1 (a / and 
            :mod (m / massive) 
            :op1 (s2 / statistic)) 
      :ARG2 (s / suit-01 
            :ARG0 (s3 / scale 
                  :ARG2-of (t / threaten-01 
                        :ARG0 (l / liability) 
                        :ARG1-of (c / control-01 
                              :ARG0 (t2 / they 
                                    :ARG0-of (b / balance-01 
                                          :ARG1 (s4 / safe-41 
                                                :ARG0-of (p2 / prevent-01 
                                                      :ARG1 (a8 / accident) 
                                                      :ARG1-of (a9 / accomplish-01 
                                                            :ARG0 (a7 / and 
                                                                  :op1 (c4 / compensate-01 
                                                                        :ARG1 (t3 / treat-03 
                                                                              :ARG0 (a3 / action 
                                                                                    :mod (c2 / class)) 
                                                                              :ARG1 (h / he 
                                                                                    :ARG0-of (c3 / contend-01 
                                                                                          :ARG1 (a5 / automobile 
                                                                                                :mod-of (a6 / accident)))))) 
                                                                  :op2 (r4 / respect-01 
                                                                        :ARG1 (t4 / too))) 
                                                            :op-of (a10 / and 
                                                                  :op1 (c6 / criticize-01 
                                                                        :ARG0 (w / wide) 
                                                                        :ARG1 (s5 / system)) 
                                                                  :op2 (c5 / costly)))) 
                                                :ARG1 (p / profit-01 
                                                      :ARG0 (b2 / business 
                                                            :ARG1-of (d / decide-01 
                                                                  :ARG0 (a4 / accident 
                                                                        :degree (m2 / mass)) 
                                                                  :ARG1-of (r3 / result-01 
                                                                        :ARG0 (a2 / accident) 
                                                                        :time (f / frequent)))) 
                                                      :ARG1 (e / especially) 
                                                      :ARG1-of (r2 / recommend-01))))))))))

# ::snt again illegitimate relations are included among the dependants who are entitled to claim compensation for the death of a person caused by an accident at work
# ::tok again illegitimate relations are included among the dependants who are entitled to claim compensation for the death of a person caused by an accident at work
# ::alignments 23-24|0.1 20-21|0 19-20|0.0 16-17|0.0.0 13-14|0.0.0.0 12-13|0.0.0.0.0 10-11|0.0.0.0.0.0 5-6|0.0.0.0.0.0.0.0.1 4-5|0.0.0.0.0.0.0.0 2-3|0.0.0.0.0.0.0 0-1|0.0.0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:57.032
# ::node	0	cause-01	20-21
# ::node	0.0	person	19-20
# ::node	0.0.0	die-01	16-17
# ::node	0.0.0.0	compensate-01	13-14
# ::node	0.0.0.0.0	claim-01	12-13
# ::node	0.0.0.0.0.0	entitle-02	10-11
# ::node	0.0.0.0.0.0.0	relation	2-3
# ::node	0.0.0.0.0.0.0.0	include-01	4-5
# ::node	0.0.0.0.0.0.0.0.0	again	0-1
# ::node	0.0.0.0.0.0.0.0.1	among	5-6
# ::node	0.1	accident	23-24
# ::root	0	cause-01
# ::edge	cause-01	ARG0	person	0	0.0	
# ::edge	cause-01	ARG1	accident	0	0.1	
# ::edge	claim-01	ARG1	compensate-01	0.0.0.0.0	0.0.0.0	
# ::edge	compensate-01	ARG1	die-01	0.0.0.0	0.0.0	
# ::edge	die-01	ARG1	person	0.0.0	0.0	
# ::edge	entitle-02	ARG0	relation	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	entitle-02	ARG1	claim-01	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	include-01	ARG0	again	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0	
# ::edge	include-01	ARG1	relation	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	include-01	location	among	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.1	
(c / cause-01 
      :ARG0 (p / person 
            :ARG1-of (d / die-01 
                  :ARG1-of (c2 / compensate-01 
                        :ARG1-of (c3 / claim-01 
                              :ARG1-of (e / entitle-02 
                                    :ARG0 (r / relation 
                                          :ARG1-of (i / include-01 
                                                :ARG0 (a3 / again) 
                                                :location (a2 / among)))))))) 
      :ARG1 (a / accident))

# ::snt he said our experience has shown that speed limits are one of the least effective accident reduction methods and we dont see that the 50mph limit is going to be detrimental to the safety of the children
# ::tok he said our experience has shown that speed limits are one of the least effective accident reduction methods and we dont see that the 50mph limit is going to be detrimental to the safety of the children
# ::alignments 36-37|0.1.0.0.2.0.0 33-34|0.1.0.0.2.0 30-31|0.1.0.0.0.0.1.0.0 25-26|0.1.0.0.0.0.1.0 21-22|0.1.0.0.0 19-20|0.1.0.0.2 18-19|0.1.0.0 17-18|0.1.0.0.1 16-17|0.1.0.0.0.0.0 15-16|0.1.0.0.0.0 14-15|0.1.0.0.0.0.1 8-9|0.0.0 7-8|0.0.0.0 5-6|0.1 3-4|0.1.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:57.303
# ::node	0	say-01	1-2
# ::node	0.0	he	0-1
# ::node	0.0.0	limit-01	8-9
# ::node	0.0.0.0	speed	7-8
# ::node	0.1	show-01	5-6
# ::node	0.1.0	experience-01	3-4
# ::node	0.1.0.0	and	18-19
# ::node	0.1.0.0.0	see-01	21-22
# ::node	0.1.0.0.0.0	accident	15-16
# ::node	0.1.0.0.0.0.0	reduce-01	16-17
# ::node	0.1.0.0.0.0.1	effective	14-15
# ::node	0.1.0.0.0.0.1.0	limit-01	25-26
# ::node	0.1.0.0.0.0.1.0.0	detrimental	30-31
# ::node	0.1.0.0.1	method	17-18
# ::node	0.1.0.0.2	we	19-20
# ::node	0.1.0.0.2.0	safe-41	33-34
# ::node	0.1.0.0.2.0.0	child	36-37
# ::root	0	say-01
# ::edge	accident	mod	effective	0.1.0.0.0.0	0.1.0.0.0.0.1	
# ::edge	and	op1	method	0.1.0.0	0.1.0.0.1	
# ::edge	and	op2	we	0.1.0.0	0.1.0.0.2	
# ::edge	experience-01	ARG1	and	0.1.0	0.1.0.0	
# ::edge	limit-01	ARG0	effective	0.1.0.0.0.0.1.0	0.1.0.0.0.0.1	
# ::edge	limit-01	ARG0	speed	0.0.0	0.0.0.0	
# ::edge	limit-01	ARG1	detrimental	0.1.0.0.0.0.1.0	0.1.0.0.0.0.1.0.0	
# ::edge	limit-01	ARG1	he	0.0.0	0.0	
# ::edge	reduce-01	ARG0	accident	0.1.0.0.0.0.0	0.1.0.0.0.0	
# ::edge	safe-41	ARG1	we	0.1.0.0.2.0	0.1.0.0.2	
# ::edge	safe-41	prep-on	child	0.1.0.0.2.0	0.1.0.0.2.0.0	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	show-01	0	0.1	
# ::edge	see-01	ARG0	and	0.1.0.0.0	0.1.0.0	
# ::edge	see-01	ARG1	accident	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	show-01	ARG1	experience-01	0.1	0.1.0	
(s5 / say-01 
      :ARG0 (h / he 
            :ARG1-of (l2 / limit-01 
                  :ARG0 (s3 / speed))) 
      :ARG1 (s4 / show-01 
            :ARG1 (e2 / experience-01 
                  :ARG1 (a / and 
                        :ARG0-of (s2 / see-01 
                              :ARG1 (a2 / accident 
                                    :ARG0-of (r / reduce-01) 
                                    :mod (e / effective 
                                          :ARG0-of (l / limit-01 
                                                :ARG1 (d / detrimental))))) 
                        :op1 (m / method) 
                        :op2 (w / we 
                              :ARG1-of (s / safe-41 
                                    :prep-on (c / child)))))))

# ::snt proving our point by having an accident is something were not prepared to entertain
# ::tok proving our point by having an accident is something were not prepared to entertain
# ::alignments 13-14|0.1 11-12|0 8-9|0.0 6-7|0.2 2-3|0.2.0.0 0-1|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:57.333
# ::node	0	prepare-02	11-12
# ::node	0.0	something	8-9
# ::node	0.1	entertain-01	13-14
# ::node	0.2	accident	6-7
# ::node	0.2.0	prove-01	0-1
# ::node	0.2.0.0	point	2-3
# ::root	0	prepare-02
# ::edge	accident	domain	prepare-02	0.2	0	
# ::edge	prepare-02	ARG0	something	0	0.0	
# ::edge	prepare-02	ARG1	entertain-01	0	0.1	
# ::edge	prove-01	ARG0	accident	0.2.0	0.2	
# ::edge	prove-01	ARG1	point	0.2.0	0.2.0.0	
(p / prepare-02 
      :ARG0 (s / something) 
      :ARG1 (e / entertain-01) 
      :domain-of (a / accident 
            :ARG0-of (p3 / prove-01 
                  :ARG1 (p2 / point))))

# ::snt the magistrates heard that savory and moore ltd had twice failed to report accidents in which mrs jacqueline stuart who had not been trained how to lift heavy things properly hurt her back
# ::tok the magistrates heard that savory and moore ltd had twice failed to report accidents in which mrs jacqueline stuart who had not been trained how to lift heavy things properly hurt her back
# ::alignments 32-33|0.0.1 30-31|0.0.1.0 29-30|0.2 28-29|0.0 27-28|0.0.0 26-27|0 23-24|0.1 13-14|0.1.0.0.0 12-13|0.1.0.0.2 10-11|0.1.0.0 5-6|0.1.0 2-3|0.1.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:57.510
# ::node	0	lift-01	26-27
# ::node	0.0	thing	28-29
# ::node	0.0.0	heavy	27-28
# ::node	0.0.1	back	32-33
# ::node	0.0.1.0	hurt-01	30-31
# ::node	0.1	train-01	23-24
# ::node	0.1.0	and	5-6
# ::node	0.1.0.0	fail-01	10-11
# ::node	0.1.0.0.0	accident	13-14
# ::node	0.1.0.0.1	hear-01	2-3
# ::node	0.1.0.0.2	report	12-13
# ::node	0.2	proper	29-30
# ::root	0	lift-01
# ::edge	and	op1	train-01	0.1.0	0.1	
# ::edge	back	poss	thing	0.0.1	0.0	
# ::edge	fail-01	ARG0	and	0.1.0.0	0.1.0	
# ::edge	fail-01	ARG1	accident	0.1.0.0	0.1.0.0.0	
# ::edge	fail-01	ARG2	report	0.1.0.0	0.1.0.0.2	
# ::edge	hear-01	ARG1	fail-01	0.1.0.0.1	0.1.0.0	
# ::edge	hurt-01	ARG1	back	0.0.1.0	0.0.1	
# ::edge	lift-01	ARG1	thing	0	0.0	
# ::edge	lift-01	manner	proper	0	0.2	
# ::edge	thing	mod	heavy	0.0	0.0.0	
# ::edge	train-01	ARG1	lift-01	0.1	0	
(l / lift-01 
      :ARG1 (t / thing 
            :mod (h2 / heavy) 
            :poss-of (b / back 
                  :ARG1-of (h / hurt-01))) 
      :ARG1-of (t2 / train-01 
            :op-of (a2 / and 
                  :ARG0-of (f / fail-01 
                        :ARG1 (a / accident) 
                        :ARG1-of (h3 / hear-01) 
                        :ARG2 (r / report)))) 
      :manner (p / proper))

# ::snt one of the key areas of investigation will be whether or not the two ships had received warning signals before the accident
# ::tok one of the key areas of investigation will be whether or not the two ships had received warning signals before the accident
# ::alignments 21-22|0.0.3.0 19-20|0.0.3 18-19|0.0.1.0 17-18|0.0.1 16-17|0.0 14-15|0.0.0 13-14|0.0.0.0 10-11|0 6-7|0.0.2 4-5|0.0.2.0 3-4|0.0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:57.621
# ::node	0	or	10-11
# ::node	0.0	receive-01	16-17
# ::node	0.0.0	ship	14-15
# ::node	0.0.0.0	2	13-14
# ::node	0.0.1	warn-01	17-18
# ::node	0.0.1.0	signal	18-19
# ::node	0.0.2	investigate-01	6-7
# ::node	0.0.2.0	area	4-5
# ::node	0.0.2.0.0	key	3-4
# ::node	0.0.3	before	19-20
# ::node	0.0.3.0	accident	21-22
# ::root	0	or
# ::edge	area	mod	key	0.0.2.0	0.0.2.0.0	
# ::edge	before	op1	accident	0.0.3	0.0.3.0	
# ::edge	investigate-01	ARG0	area	0.0.2	0.0.2.0	
# ::edge	investigate-01	ARG1	receive-01	0.0.2	0.0	
# ::edge	or	op1	receive-01	0	0.0	
# ::edge	receive-01	ARG0	ship	0.0	0.0.0	
# ::edge	receive-01	ARG1	warn-01	0.0	0.0.1	
# ::edge	receive-01	time	before	0.0	0.0.3	
# ::edge	ship	quant	2	0.0.0	0.0.0.0	
# ::edge	warn-01	ARG1	signal	0.0.1	0.0.1.0	
(o / or 
      :op1 (r / receive-01 
            :ARG0 (s2 / ship 
                  :quant 2) 
            :ARG1 (w / warn-01 
                  :ARG1 (s / signal)) 
            :ARG1-of (i / investigate-01 
                  :ARG0 (a2 / area 
                        :mod (k / key))) 
            :time (b / before 
                  :op1 (a / accident))))

# ::snt the committee is concerned that there are too many government departments which may be responsible in the event of a nuclear accident
# ::tok the committee is concerned that there are too many government departments which may be responsible in the event of a nuclear accident
# ::alignments 21-22|0.0.0 20-21|0.0.0.0 17-18|0.0 14-15|0 12-13|0.2.1+0.2 10-11|0.1 8-9|0.2.0 7-8|0.2.0.0 3-4|0.1.0 1-2|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:57.732
# ::node	0	responsible-41	14-15
# ::node	0.0	event	17-18
# ::node	0.0.0	accident	21-22
# ::node	0.0.0.0	nucleus	20-21
# ::node	0.1	department	10-11
# ::node	0.1.0	concern-01	3-4
# ::node	0.1.0.0	committee	1-2
# ::node	0.2	date-entity	12-13
# ::node	0.2.0	many	8-9
# ::node	0.2.0.0	too	7-8
# ::node	0.2.1	5	12-13
# ::root	0	responsible-41
# ::edge	accident	mod	nucleus	0.0.0	0.0.0.0	
# ::edge	concern-01	ARG0	department	0.1.0	0.1	
# ::edge	concern-01	ARG1	committee	0.1.0	0.1.0.0	
# ::edge	date-entity	domain	responsible-41	0.2	0	
# ::edge	date-entity	month	5	0.2	0.2.1	
# ::edge	event	location	accident	0.0	0.0.0	
# ::edge	many	degree	too	0.2.0	0.2.0.0	
# ::edge	many	mod	date-entity	0.2.0	0.2	
# ::edge	responsible-41	ARG1	event	0	0.0	
# ::edge	responsible-41	ARG2	department	0	0.1	
(r / responsible-41 
      :ARG1 (e / event 
            :location (a / accident 
                  :mod (n / nucleus))) 
      :ARG2 (d2 / department 
            :ARG0-of (c / concern-01 
                  :ARG1 (c2 / committee))) 
      :domain-of (d / date-entity 
            :mod-of (m / many 
                  :degree (t / too)) 
            :month 5))

# ::snt   statistics show that 54 per cent of all fatal and serious accidents to children of school age occur when they are pedestrians, the accidents peak at the times of travel to and from school
# ::tok statistics show that 54 per cent of all fatal and serious accidents to children of school age occur when they are pedestrians , the accidents peak at the times of travel to and from school
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:57.733
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt yesterday at the presentation of the annual derby awards conferred by the horserace writers association hern provided an even more poignant moment when he got out of the wheelchair to which he has been confined since his hunting accident several years ago to accept the award for flat trainer of the year and offered a heartfelt and witty speech that showed a hitherto unrevealed side to his character
# ::tok yesterday at the presentation of the annual derby awards conferred by the horserace writers association hern provided an even more poignant moment when he got out of the wheelchair to which he has been confined since his hunting accident several years ago to accept the award for flat trainer of the year and offered a heartfelt and witty speech that showed a hitherto unrevealed side to his character
# ::alignments 67-68|0.2 64-65|0.1 60-61|0 58-59|0.0 56-57|0.0.0.1.0 55-56|0.0.0.1.0.0 53-54|0.0.0 52-53|0.0.0.1 51-52|0.0.0.1.1.0 48-49|0.0.0.1.1 47-48|0.0.0.1.1.2 45-46|0.0.0.1.1.1.1 43-44|0.0.0.1.1.1 40-41|0.0.0.1.1.1.1.0.1+0.0.0.1.1.1.1.0 39-40|0.0.0.1.1.1.1.0.0 38-39|0.0.0.1.1.1.0.0.0.0 37-38|0.0.0.1.1.1.0.0.0.0.0 35-36|0.0.0.1.1.1.0.0.0 34-35|0.0.0.1.1.1.0.0 31-32|0.0.0.1.1.1.0 23-24|0.0.0.0 21-22|0.0.0.0.0.1 16-17|0.0.0.0.0 14-15|0.0.0.0.0.0.1 13-14|0.0.0.0.0.0.0+0.0.0.0.0.0 8-9|0.0.0.0.0.0.1.0.0+0.0.0.0.0.0.1.0 3-4|0.0.0.0.0.0.1.0.1 0-1|0.0.0.0.0.0.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:04:59.194
# ::node	0	show-01	60-61
# ::node	0.0	speech	58-59
# ::node	0.0.0	offer-01	53-54
# ::node	0.0.0.0	he	23-24
# ::node	0.0.0.0.0	provide-01	16-17
# ::node	0.0.0.0.0.0	person	13-14
# ::node	0.0.0.0.0.0.0	write-01	13-14
# ::node	0.0.0.0.0.0.1	associate-01	14-15
# ::node	0.0.0.0.0.0.1.0	thing	8-9
# ::node	0.0.0.0.0.0.1.0.0	award-01	8-9
# ::node	0.0.0.0.0.0.1.0.1	presentation	3-4
# ::node	0.0.0.0.0.0.1.0.1.0	yesterday	0-1
# ::node	0.0.0.0.0.1	moment	21-22
# ::node	0.0.0.1	and	52-53
# ::node	0.0.0.1.0	and	56-57
# ::node	0.0.0.1.0.0	heartfelt	55-56
# ::node	0.0.0.1.1	train-01	48-49
# ::node	0.0.0.1.1.0	year	51-52
# ::node	0.0.0.1.1.1	accept-01	43-44
# ::node	0.0.0.1.1.1.0	he	31-32
# ::node	0.0.0.1.1.1.0.0	confine-01	34-35
# ::node	0.0.0.1.1.1.0.0.0	since	35-36
# ::node	0.0.0.1.1.1.0.0.0.0	accident	38-39
# ::node	0.0.0.1.1.1.0.0.0.0.0	hunt-01	37-38
# ::node	0.0.0.1.1.1.1	award-01	45-46
# ::node	0.0.0.1.1.1.1.0	temporal-quantity	40-41
# ::node	0.0.0.1.1.1.1.0.0	several	39-40
# ::node	0.0.0.1.1.1.1.0.1	year	40-41
# ::node	0.0.0.1.1.2	flat	47-48
# ::node	0.1	side	64-65
# ::node	0.2	character	67-68
# ::root	0	show-01
# ::edge	accept-01	ARG0	he	0.0.0.1.1.1	0.0.0.1.1.1.0	
# ::edge	accept-01	ARG1	award-01	0.0.0.1.1.1	0.0.0.1.1.1.1	
# ::edge	accept-01	ARG2	train-01	0.0.0.1.1.1	0.0.0.1.1	
# ::edge	accident	location	hunt-01	0.0.0.1.1.1.0.0.0.0	0.0.0.1.1.1.0.0.0.0.0	
# ::edge	and	manner	and	0.0.0.1	0.0.0.1.0	
# ::edge	and	op1	heartfelt	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	and	op1	train-01	0.0.0.1	0.0.0.1.1	
# ::edge	and	op2	offer-01	0.0.0.1	0.0.0	
# ::edge	associate-01	ARG0	person	0.0.0.0.0.0.1	0.0.0.0.0.0	
# ::edge	associate-01	ARG1	thing	0.0.0.0.0.0.1	0.0.0.0.0.0.1.0	
# ::edge	award-01	ARG1	temporal-quantity	0.0.0.1.1.1.1	0.0.0.1.1.1.1.0	
# ::edge	award-01	ARG1	thing	0.0.0.0.0.0.1.0.0	0.0.0.0.0.0.1.0	
# ::edge	confine-01	ARG1	he	0.0.0.1.1.1.0.0	0.0.0.1.1.1.0	
# ::edge	confine-01	time	since	0.0.0.1.1.1.0.0	0.0.0.1.1.1.0.0.0	
# ::edge	offer-01	ARG0	he	0.0.0	0.0.0.0	
# ::edge	offer-01	ARG1	speech	0.0.0	0.0	
# ::edge	presentation	prep-with	thing	0.0.0.0.0.0.1.0.1	0.0.0.0.0.0.1.0	
# ::edge	provide-01	ARG0	he	0.0.0.0.0	0.0.0.0	
# ::edge	provide-01	ARG1	person	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	provide-01	ARG2	moment	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	several	op1	temporal-quantity	0.0.0.1.1.1.1.0.0	0.0.0.1.1.1.1.0	
# ::edge	show-01	ARG0	speech	0	0.0	
# ::edge	show-01	ARG1	side	0	0.1	
# ::edge	show-01	purpose	character	0	0.2	
# ::edge	since	op1	accident	0.0.0.1.1.1.0.0.0	0.0.0.1.1.1.0.0.0.0	
# ::edge	temporal-quantity	unit	year	0.0.0.1.1.1.1.0	0.0.0.1.1.1.1.0.1	
# ::edge	train-01	ARG1	year	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	train-01	mod	flat	0.0.0.1.1	0.0.0.1.1.2	
# ::edge	write-01	ARG0	person	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	yesterday	location	presentation	0.0.0.0.0.0.1.0.1.0	0.0.0.0.0.0.1.0.1	
(s2 / show-01 
      :ARG0 (s3 / speech 
            :ARG1-of (o / offer-01 
                  :ARG0 (h4 / he 
                        :ARG0-of (p / provide-01 
                              :ARG1 (p2 / person 
                                    :ARG0-of (w / write-01) 
                                    :ARG0-of (a6 / associate-01 
                                          :ARG1 (t3 / thing 
                                                :ARG1-of (a7 / award-01) 
                                                :prep-with-of (p3 / presentation 
                                                      :location-of (y3 / yesterday))))) 
                              :ARG2 (m / moment))) 
                  :op-of (a2 / and 
                        :manner (a / and 
                              :op1 (h / heartfelt)) 
                        :op1 (t / train-01 
                              :ARG1 (y / year) 
                              :ARG2-of (a4 / accept-01 
                                    :ARG0 (h3 / he 
                                          :ARG1-of (c2 / confine-01 
                                                :time (s5 / since 
                                                      :op1 (a5 / accident 
                                                            :location (h2 / hunt-01))))) 
                                    :ARG1 (a3 / award-01 
                                          :ARG1 (t2 / temporal-quantity 
                                                :op-of (s4 / several) 
                                                :unit (y2 / year)))) 
                              :mod (f / flat))))) 
      :ARG1 (s / side) 
      :purpose (c / character))

# ::snt she suffered another accident which kept her off work for eight weeks with torn ligaments in her back and damage to nerves at the base of her spine mr wilson said, thirteen days later the branch manager informed the council of the accident by phone
# ::tok she suffered another accident which kept her off work for eight weeks with torn ligaments in her back and damage to nerves at the base of her spine mr wilson said , thirteen days later the branch manager informed the council of the accident by phone
# ::alignments 45-46|0.1.3 43-44|0.1.2 40-41|0.1.1 38-39|0.1 37-38|0.1.0 36-37|0.1.0.1 34-35|0.1.5 33-34|0.1.5.1.0+0.1.5.1 30-31|0 27-28|0.0.0.0.0.0 24-25|0.1.4.1.1 19-20|0.1.4.1 18-19|0.1.4 17-18|0.1.4.0 13-14|0.1.5.0 11-12|0.1.0.0.1+0.1.0.0 10-11|0.1.0.0.0 7-8|0.1.4.1.0 5-6|0.0.0.0.0 3-4|0.0.0.0 2-3|0.0.0.0.1 1-2|0.0.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:00.058
# ::node	0	say-01	30-31
# ::node	0.0	she	0-1
# ::node	0.0.0	suffer-01	1-2
# ::node	0.0.0.0	accident	3-4
# ::node	0.0.0.0.0	keep-01	5-6
# ::node	0.0.0.0.0.0	spine	27-28
# ::node	0.0.0.0.1	another	2-3
# ::node	0.1	inform-01	38-39
# ::node	0.1.0	manage-01	37-38
# ::node	0.1.0.0	temporal-quantity	11-12
# ::node	0.1.0.0.0	8	10-11
# ::node	0.1.0.0.1	week	11-12
# ::node	0.1.0.1	branch	36-37
# ::node	0.1.1	council	40-41
# ::node	0.1.2	accident	43-44
# ::node	0.1.3	phone	45-46
# ::node	0.1.4	and	18-19
# ::node	0.1.4.0	back	17-18
# ::node	0.1.4.1	damage-01	19-20
# ::node	0.1.4.1.0	off	7-8
# ::node	0.1.4.1.1	base	24-25
# ::node	0.1.5	late	34-35
# ::node	0.1.5.0	tear-01	13-14
# ::node	0.1.5.1	temporal-quantity	33-34
# ::node	0.1.5.1.0	day	33-34
# ::root	0	say-01
# ::edge	accident	mod	another	0.0.0.0	0.0.0.0.1	
# ::edge	and	op1	back	0.1.4	0.1.4.0	
# ::edge	and	op2	damage-01	0.1.4	0.1.4.1	
# ::edge	and	op3	inform-01	0.1.4	0.1	
# ::edge	damage-01	ARG1	off	0.1.4.1	0.1.4.1.0	
# ::edge	damage-01	location	base	0.1.4.1	0.1.4.1.1	
# ::edge	inform-01	ARG0	manage-01	0.1	0.1.0	
# ::edge	inform-01	ARG1	council	0.1	0.1.1	
# ::edge	inform-01	ARG2	accident	0.1	0.1.2	
# ::edge	inform-01	medium	phone	0.1	0.1.3	
# ::edge	inform-01	time	late	0.1	0.1.5	
# ::edge	keep-01	ARG0	accident	0.0.0.0.0	0.0.0.0	
# ::edge	keep-01	ARG1	spine	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	late	quant	temporal-quantity	0.1.5	0.1.5.1	
# ::edge	manage-01	ARG0	temporal-quantity	0.1.0	0.1.0.0	
# ::edge	manage-01	ARG1	branch	0.1.0	0.1.0.1	
# ::edge	say-01	ARG0	she	0	0.0	
# ::edge	say-01	ARG1	inform-01	0	0.1	
# ::edge	suffer-01	ARG0	she	0.0.0	0.0	
# ::edge	suffer-01	ARG1	accident	0.0.0	0.0.0.0	
# ::edge	tear-01	ARG1	late	0.1.5.0	0.1.5	
# ::edge	temporal-quantity	quant	8	0.1.0.0	0.1.0.0.0	
# ::edge	temporal-quantity	unit	day	0.1.5.1	0.1.5.1.0	
# ::edge	temporal-quantity	unit	week	0.1.0.0	0.1.0.0.1	
(s / say-01 
      :ARG0 (s4 / she 
            :ARG0-of (s3 / suffer-01 
                  :ARG1 (a3 / accident 
                        :ARG0-of (k / keep-01 
                              :ARG1 (s2 / spine)) 
                        :mod (a4 / another)))) 
      :ARG1 (i / inform-01 
            :ARG0 (m / manage-01 
                  :ARG0 (t3 / temporal-quantity 
                        :quant 8 
                        :unit (w / week)) 
                  :ARG1 (b / branch)) 
            :ARG1 (c / council) 
            :ARG2 (a / accident) 
            :medium (p / phone) 
            :op-of (a2 / and 
                  :op1 (b3 / back) 
                  :op2 (d2 / damage-01 
                        :ARG1 (o / off) 
                        :location (b2 / base))) 
            :time (l / late 
                  :ARG1-of (t2 / tear-01) 
                  :quant (t / temporal-quantity 
                        :unit (d / day)))))

# ::snt they say that in many accidents lack of control and discipline was a contributory factor
# ::tok they say that in many accidents lack of control and discipline was a contributory factor
# ::alignments 14-15|0.1.3 10-11|0.1.2 9-10|0.1 8-9|0.1.1 6-7|0.1.0 5-6|0.1.0.0 4-5|0.1.0.0.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:00.221
# ::node	0	say-01	1-2
# ::node	0.0	they	0-1
# ::node	0.1	and	9-10
# ::node	0.1.0	lack-01	6-7
# ::node	0.1.0.0	accident	5-6
# ::node	0.1.0.0.0	many	4-5
# ::node	0.1.1	control-01	8-9
# ::node	0.1.2	discipline	10-11
# ::node	0.1.3	factor	14-15
# ::root	0	say-01
# ::edge	accident	quant	many	0.1.0.0	0.1.0.0.0	
# ::edge	and	op1	control-01	0.1	0.1.1	
# ::edge	and	op2	discipline	0.1	0.1.2	
# ::edge	and	op3	factor	0.1	0.1.3	
# ::edge	lack-01	ARG1	and	0.1.0	0.1	
# ::edge	lack-01	ARG2	accident	0.1.0	0.1.0.0	
# ::edge	say-01	ARG0	they	0	0.0	
# ::edge	say-01	ARG1	and	0	0.1	
(s / say-01 
      :ARG0 (t / they) 
      :ARG1 (a / and 
            :ARG1-of (l / lack-01 
                  :ARG2 (a2 / accident 
                        :quant (m / many))) 
            :op1 (c / control-01) 
            :op2 (d / discipline) 
            :op3 (f / factor)))

# ::snt it was a curious irony that the insidious dangers of civil nuclear power should achieve such prominence just as the superpowers were moving towards agreement on cutting their armouries and reducing the threat of nuclear war caused by suspicion or accident
# ::tok it was a curious irony that the insidious dangers of civil nuclear power should achieve such prominence just as the superpowers were moving towards agreement on cutting their armouries and reducing the threat of nuclear war caused by suspicion or accident
# ::alignments 40-41|0.0.1 39-40|0.0 38-39|0.0.0 36-37|0 35-36|0.1 34-35|0.1.0.0.1.0.1.0.0.0.2 32-33|0.1.0 30-31|0.1.0.0 29-30|0.1.0.0.1 24-25|0.1.0.0.1.0.2 22-23|0.1.0.0.1.0 20-21|0.1.0.0.1.0.0 17-18|0.1.0.0.1.0.3 15-16|0.0.0.0 14-15|0.1.0.0.1.0.1.0 13-14|0.1.0.0.1.0.1 12-13|0.1.0.0.1.0.1.0.0.0 11-12|0.1.0.0.1.0.1.0.0.0.0 10-11|0.1.0.0.1.0.1.0.0.0.1 8-9|0.1.0.0.1.0.1.0.0 7-8|0.1.0.0.0 4-5|0.1.0.0.1.0.1.0.1.0 3-4|0.1.0.0.1.0.1.0.1.0.0 0-1|0.1.0.0.1.0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:00.649
# ::node	0	cause-01	36-37
# ::node	0.0	or	39-40
# ::node	0.0.0	suspect-01	38-39
# ::node	0.0.0.0	such	15-16
# ::node	0.0.1	accident	40-41
# ::node	0.1	war	35-36
# ::node	0.1.0	threaten-01	32-33
# ::node	0.1.0.0	reduce-01	30-31
# ::node	0.1.0.0.0	insidious	7-8
# ::node	0.1.0.0.1	and	29-30
# ::node	0.1.0.0.1.0	move-01	22-23
# ::node	0.1.0.0.1.0.0	superpower	20-21
# ::node	0.1.0.0.1.0.1	recommend-01	13-14
# ::node	0.1.0.0.1.0.1.0	achieve-01	14-15
# ::node	0.1.0.0.1.0.1.0.0	danger	8-9
# ::node	0.1.0.0.1.0.1.0.0.0	power	12-13
# ::node	0.1.0.0.1.0.1.0.0.0.0	nucleus	11-12
# ::node	0.1.0.0.1.0.1.0.0.0.1	civil	10-11
# ::node	0.1.0.0.1.0.1.0.0.0.2	nucleus	34-35
# ::node	0.1.0.0.1.0.1.0.1	it	0-1
# ::node	0.1.0.0.1.0.1.0.1.0	irony	4-5
# ::node	0.1.0.0.1.0.1.0.1.0.0	curious-41	3-4
# ::node	0.1.0.0.1.0.2	agree-01	24-25
# ::node	0.1.0.0.1.0.3	just	17-18
# ::root	0	cause-01
# ::edge	achieve-01	ARG0	danger	0.1.0.0.1.0.1.0	0.1.0.0.1.0.1.0.0	
# ::edge	achieve-01	ARG1	it	0.1.0.0.1.0.1.0	0.1.0.0.1.0.1.0.1	
# ::edge	and	op1	reduce-01	0.1.0.0.1	0.1.0.0	
# ::edge	cause-01	ARG0	or	0	0.0	
# ::edge	cause-01	ARG1	war	0	0.1	
# ::edge	curious-41	ARG0	irony	0.1.0.0.1.0.1.0.1.0.0	0.1.0.0.1.0.1.0.1.0	
# ::edge	danger	location	power	0.1.0.0.1.0.1.0.0	0.1.0.0.1.0.1.0.0.0	
# ::edge	irony	domain	it	0.1.0.0.1.0.1.0.1.0	0.1.0.0.1.0.1.0.1	
# ::edge	move-01	ARG1	superpower	0.1.0.0.1.0	0.1.0.0.1.0.0	
# ::edge	move-01	ARG2	and	0.1.0.0.1.0	0.1.0.0.1	
# ::edge	move-01	manner	agree-01	0.1.0.0.1.0	0.1.0.0.1.0.2	
# ::edge	move-01	mod	just	0.1.0.0.1.0	0.1.0.0.1.0.3	
# ::edge	or	op1	suspect-01	0.0	0.0.0	
# ::edge	or	op2	accident	0.0	0.0.1	
# ::edge	power	mod	civil	0.1.0.0.1.0.1.0.0.0	0.1.0.0.1.0.1.0.0.0.1	
# ::edge	power	mod	nucleus	0.1.0.0.1.0.1.0.0.0	0.1.0.0.1.0.1.0.0.0.0	
# ::edge	power	mod	nucleus	0.1.0.0.1.0.1.0.0.0	0.1.0.0.1.0.1.0.0.0.2	
# ::edge	recommend-01	ARG1	achieve-01	0.1.0.0.1.0.1	0.1.0.0.1.0.1.0	
# ::edge	recommend-01	condition	move-01	0.1.0.0.1.0.1	0.1.0.0.1.0	
# ::edge	reduce-01	ARG0	insidious	0.1.0.0	0.1.0.0.0	
# ::edge	reduce-01	ARG1	threaten-01	0.1.0.0	0.1.0	
# ::edge	suspect-01	ARG1	such	0.0.0	0.0.0.0	
# ::edge	threaten-01	ARG0	war	0.1.0	0.1	
(c / cause-01 
      :ARG0 (o / or 
            :op1 (s / suspect-01 
                  :ARG1 (s3 / such)) 
            :op2 (a / accident)) 
      :ARG1 (w / war 
            :ARG0-of (t / threaten-01 
                  :ARG1-of (r / reduce-01 
                        :ARG0 (i / insidious) 
                        :op-of (a2 / and 
                              :ARG2-of (m / move-01 
                                    :ARG1 (s2 / superpower) 
                                    :condition-of (r2 / recommend-01 
                                          :ARG1 (a4 / achieve-01 
                                                :ARG0 (d / danger 
                                                      :location (p / power 
                                                            :mod (n2 / nucleus) 
                                                            :mod (c2 / civil) 
                                                            :mod (n / nucleus))) 
                                                :ARG1 (i3 / it 
                                                      :domain-of (i2 / irony 
                                                            :ARG0-of (c3 / curious-41))))) 
                                    :manner (a3 / agree-01) 
                                    :mod (j / just)))))))

# ::snt it was an accident and i apologise she said
# ::tok it was an accident and i apologise she said
# ::alignments 8-9|0 7-8|0.0 6-7|0.1 5-6|0.1.0 4-5|0.1.1 3-4|0.1.1.0 0-1|0.1.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:00.668
# ::node	0	say-01	8-9
# ::node	0.0	she	7-8
# ::node	0.1	apologize-01	6-7
# ::node	0.1.0	i	5-6
# ::node	0.1.1	and	4-5
# ::node	0.1.1.0	accident	3-4
# ::node	0.1.2	it	0-1
# ::root	0	say-01
# ::edge	and	op1	accident	0.1.1	0.1.1.0	
# ::edge	apologize-01	ARG0	i	0.1	0.1.0	
# ::edge	apologize-01	ARG1	and	0.1	0.1.1	
# ::edge	apologize-01	ARG2	it	0.1	0.1.2	
# ::edge	say-01	ARG0	she	0	0.0	
# ::edge	say-01	ARG1	apologize-01	0	0.1	
(s / say-01 
      :ARG0 (s2 / she) 
      :ARG1 (a / apologize-01 
            :ARG0 (i / i) 
            :ARG1 (a2 / and 
                  :op1 (a3 / accident)) 
            :ARG2 (i2 / it)))

# ::snt   the chairman of st jamess staff committee accident and emergency consultant dr ian adams said that the hospital was full of rumours about the scale of closures and economies likely to be required
# ::tok the chairman of st jamess staff committee accident and emergency consultant dr ian adams said that the hospital was full of rumours about the scale of closures and economies likely to be required
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:00.668
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt and your first name is penelope any other initials  men and women in the royal navy the royal marines and the army can buy personal accident insurance designed especially for them
# ::tok and your first name is penelope any other initials men and women in the royal navy the royal marines and the army can buy personal accident insurance designed especially for them
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:00.669
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt more than 250000 people have to go to hospital each year because of accidents in the kitchen, these accidents are mainly due to cuts caused by tins children or pensioners falling over accidental poisonings or burns and scalds from hot liquids electrical appliances and chip pans
# ::tok more than 250000 people have to go to hospital each year because of accidents in the kitchen , these accidents are mainly due to cuts caused by tins children or pensioners falling over accidental poisonings or burns and scalds from hot liquids electrical appliances and chip pans
# ::alignments 46-47|0.1.0.0.2.0 45-46|0.1.0.0.2.0.1 44-45|0.1.0.0.2 42-43|0.1.1.2.0 40-41|0.1.1.2 37-38|0.1.0.0.1 36-37|0.1.0.0 35-36|0.1.0 31-32|0.1 30-31|0.0.1 29-30|0.0 28-29|0.0.0 25-26|0 24-25|0.1.1 21-22|0.1.0.0.2.0.0 19-20|0.1.0.0.0 13-14|0.1.0.0.1.0.0 11-12|0.1.0.0.1.0 10-11|0.1.0.0.1.0.1 9-10|0.1.0.0.1.0.1.0 8-9|0.1.1.0 2-3|0.1.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:01.196
# ::node	0	cause-01	25-26
# ::node	0.0	or	29-30
# ::node	0.0.0	child	28-29
# ::node	0.0.1	pensioner	30-31
# ::node	0.1	fall-01	31-32
# ::node	0.1.0	or	35-36
# ::node	0.1.0.0	burn-01	36-37
# ::node	0.1.0.0.0	accident	19-20
# ::node	0.1.0.0.1	and	37-38
# ::node	0.1.0.0.1.0	cause-01	11-12
# ::node	0.1.0.0.1.0.0	accident	13-14
# ::node	0.1.0.0.1.0.1	year	10-11
# ::node	0.1.0.0.1.0.1.0	each	9-10
# ::node	0.1.0.0.2	and	44-45
# ::node	0.1.0.0.2.0	pan-02	46-47
# ::node	0.1.0.0.2.0.0	main	21-22
# ::node	0.1.0.0.2.0.1	chip	45-46
# ::node	0.1.1	cut-02	24-25
# ::node	0.1.1.0	hospital	8-9
# ::node	0.1.1.1	250000	2-3
# ::node	0.1.1.2	hot	40-41
# ::node	0.1.1.2.0	electricity	42-43
# ::root	0	cause-01
# ::edge	and	op1	burn-01	0.1.0.0.1	0.1.0.0	
# ::edge	and	op1	burn-01	0.1.0.0.2	0.1.0.0	
# ::edge	and	op2	pan-02	0.1.0.0.2	0.1.0.0.2.0	
# ::edge	burn-01	ARG1	accident	0.1.0.0	0.1.0.0.0	
# ::edge	cause-01	ARG0	and	0.1.0.0.1.0	0.1.0.0.1	
# ::edge	cause-01	ARG0	or	0	0.0	
# ::edge	cause-01	ARG1	accident	0.1.0.0.1.0	0.1.0.0.1.0.0	
# ::edge	cause-01	ARG1	fall-01	0	0.1	
# ::edge	cut-02	ARG0	hospital	0.1.1	0.1.1.0	
# ::edge	cut-02	ARG1	250000	0.1.1	0.1.1.1	
# ::edge	electricity	mod	hot	0.1.1.2.0	0.1.1.2	
# ::edge	fall-01	ARG0	or	0.1	0.1.0	
# ::edge	fall-01	ARG1	cut-02	0.1	0.1.1	
# ::edge	hot	op1	cut-02	0.1.1.2	0.1.1	
# ::edge	or	op1	burn-01	0.1.0	0.1.0.0	
# ::edge	or	op1	child	0.0	0.0.0	
# ::edge	or	op2	pensioner	0.0	0.0.1	
# ::edge	pan-02	ARG0	main	0.1.0.0.2.0	0.1.0.0.2.0.0	
# ::edge	pan-02	ARG1	chip	0.1.0.0.2.0	0.1.0.0.2.0.1	
# ::edge	year	mod	each	0.1.0.0.1.0.1	0.1.0.0.1.0.1.0	
# ::edge	year	time	cause-01	0.1.0.0.1.0.1	0.1.0.0.1.0	
(c3 / cause-01 
      :ARG0 (o2 / or 
            :op1 (c2 / child) 
            :op2 (p2 / pensioner)) 
      :ARG1 (f / fall-01 
            :ARG0 (o / or 
                  :op1 (b / burn-01 
                        :ARG1 (a3 / accident) 
                        :op-of (a2 / and 
                              :ARG0-of (c5 / cause-01 
                                    :ARG1 (a4 / accident) 
                                    :time-of (y / year 
                                          :mod (e2 / each)))) 
                        :op-of (a / and 
                              :op1 (p / pan-02 
                                    :ARG0 (m / main) 
                                    :ARG1 (c / chip))))) 
            :ARG1 (c4 / cut-02 
                  :ARG0 (h2 / hospital) 
                  :ARG1 250000 
                  :op-of (h / hot 
                        :mod-of (e / electricity)))))

# ::snt the high percentage of un or underinsured tortfeasors even in motorcar accidents ensures that the accident cost is in practice often met by defendants such as municipal authorities responsible for street maintenance whose share of fault may be negligible
# ::tok the high percentage of un or underinsured tortfeasors even in motorcar accidents ensures that the accident cost is in practice often met by defendants such as municipal authorities responsible for street maintenance whose share of fault may be negligible
# ::alignments 38-39|0.0.1.0 36-37|0.0.1.0.1.0+0.0.1.0.1 35-36|0.0.1.0.0.1 33-34|0.0.1.0.0 31-32|0.0.1 30-31|0.0.1.1 28-29|0.0 27-28|0.1 26-27|0 24-25|0.0.0.0.1.2.0 23-24|0.0.0.0.1.2 21-22|0.0.0.0.1 20-21|0.0.0.0.1.1 19-20|0.0.0 16-17|0.0.0.0 15-16|0.0.0.0.0 11-12|0.0.1.0.0.0 5-6|0.0.0.0.1.0 2-3|0.0.0.0.1.0.0 1-2|0.0.0.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:01.739
# ::node	0	municipal	26-27
# ::node	0.0	responsible-41	28-29
# ::node	0.0.0	practice-01	19-20
# ::node	0.0.0.0	cost-01	16-17
# ::node	0.0.0.0.0	accident	15-16
# ::node	0.0.0.0.1	meet-03	21-22
# ::node	0.0.0.0.1.0	or	5-6
# ::node	0.0.0.0.1.0.0	percentage	2-3
# ::node	0.0.0.0.1.0.0.0	high	1-2
# ::node	0.0.0.0.1.1	often	20-21
# ::node	0.0.0.0.1.2	defendant	23-24
# ::node	0.0.0.0.1.2.0	such	24-25
# ::node	0.0.1	maintain-01	31-32
# ::node	0.0.1.0	negligible	38-39
# ::node	0.0.1.0.0	share-01	33-34
# ::node	0.0.1.0.0.0	accident	11-12
# ::node	0.0.1.0.0.1	fault-01	35-36
# ::node	0.0.1.0.1	date-entity	36-37
# ::node	0.0.1.0.1.0	5	36-37
# ::node	0.0.1.1	street	30-31
# ::node	0.1	authority	27-28
# ::root	0	municipal
(m2 / municipal 
      :mod-of (r / responsible-41 
            :ARG1 (p / practice-01 
                  :ARG1 (c / cost-01 
                        :ARG1 (a2 / accident) 
                        :ARG1-of (m3 / meet-03 
                              :ARG0 (o2 / or 
                                    :op1 (p2 / percentage 
                                          :mod (h / high))) 
                              :frequency (o / often) 
                              :location (d2 / defendant 
                                    :mod-of (s3 / such))))) 
            :ARG2 (m / maintain-01 
                  :ARG0 (n / negligible 
                        :domain (s / share-01 
                              :ARG0 (a3 / accident) 
                              :ARG1 (f / fault-01)) 
                        :domain-of (d / date-entity 
                              :month 5)) 
                  :ARG1 (s2 / street))) 
      :mod-of (a / authority))

# ::snt romania has asked bulgaria to close part of a nuclear reactor near their border because of a risk of accidents
# ::tok romania has asked bulgaria to close part of a nuclear reactor near their border because of a risk of accidents
# ::alignments 19-20|0.0.0 17-18|0.0 14-15|0 13-14|0.1.0.0 11-12|0.1.0 10-11|0.1 9-10|0.1.1 2-3|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:01.775
# ::node	0	cause-01	14-15
# ::node	0.0	risk-01	17-18
# ::node	0.0.0	accident	19-20
# ::node	0.1	reactor	10-11
# ::node	0.1.0	near	11-12
# ::node	0.1.0.0	border-01	13-14
# ::node	0.1.1	nucleus	9-10
# ::node	0.2	ask-02	2-3
# ::root	0	cause-01
# ::edge	ask-02	ARG1	cause-01	0.2	0	
# ::edge	cause-01	ARG0	risk-01	0	0.0	
# ::edge	cause-01	ARG1	reactor	0	0.1	
# ::edge	near	op1	border-01	0.1.0	0.1.0.0	
# ::edge	reactor	location	near	0.1	0.1.0	
# ::edge	reactor	mod	nucleus	0.1	0.1.1	
# ::edge	risk-01	ARG1	accident	0.0	0.0.0	
(c / cause-01 
      :ARG0 (r / risk-01 
            :ARG1 (a / accident)) 
      :ARG1 (r2 / reactor 
            :location (n / near 
                  :op1 (b / border-01)) 
            :mod (n2 / nucleus)) 
      :ARG1-of (a2 / ask-02))

# ::snt home safety officer miss brenda cook said the aim is to raise awareness of the dangers that occur in the garden and encourage people to think of garden safety help them enjoy their garden and avoid any heartache an accident would cause
# ::tok home safety officer miss brenda cook said the aim is to raise awareness of the dangers that occur in the garden and encourage people to think of garden safety help them enjoy their garden and avoid any heartache an accident would cause
# ::alignments 41-42|0 39-40|0.0 36-37|0.1.0.0.0 35-36|0.1.0.1.0 34-35|0.1.0.1 33-34|0.1.0.0 31-32|0.1.0 29-30|0.1 28-29|0.1.1.0 27-28|0.1.1.0.0 25-26|0.1.1 22-23|0.1.1.1 21-22|0.1.1.1.1 20-21|0.1.1.1.1.2.0.0 17-18|0.1.1.1.1.2.0 15-16|0.1.1.1.1.2 12-13|0.1.1.1.1.0.0 11-12|0.1.1.1.1.0 8-9|0.1.1.1.1.0.1 6-7|0.1.1.1.1.1 2-3|0.1.1.1.0.1 1-2|0.1.1.1.0 0-1|0.1.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:02.731
# ::node	0	cause-01	41-42
# ::node	0.0	accident	39-40
# ::node	0.1	help-01	29-30
# ::node	0.1.0	enjoy-01	31-32
# ::node	0.1.0.0	garden	33-34
# ::node	0.1.0.0.0	any	36-37
# ::node	0.1.0.1	and	34-35
# ::node	0.1.0.1.0	avoid-01	35-36
# ::node	0.1.1	think-01	25-26
# ::node	0.1.1.0	safe-41	28-29
# ::node	0.1.1.0.0	garden	27-28
# ::node	0.1.1.1	encourage-01	22-23
# ::node	0.1.1.1.0	safe-41	1-2
# ::node	0.1.1.1.0.0	home	0-1
# ::node	0.1.1.1.0.1	officer	2-3
# ::node	0.1.1.1.1	and	21-22
# ::node	0.1.1.1.1.0	raise-01	11-12
# ::node	0.1.1.1.1.0.0	awareness	12-13
# ::node	0.1.1.1.1.0.1	aim-01	8-9
# ::node	0.1.1.1.1.1	say-01	6-7
# ::node	0.1.1.1.1.2	danger	15-16
# ::node	0.1.1.1.1.2.0	occur-01	17-18
# ::node	0.1.1.1.1.2.0.0	garden	20-21
# ::root	0	cause-01
# ::edge	aim-01	ARG1	raise-01	0.1.1.1.1.0.1	0.1.1.1.1.0	
# ::edge	and	op1	danger	0.1.1.1.1	0.1.1.1.1.2	
# ::edge	and	op1	enjoy-01	0.1.0.1	0.1.0	
# ::edge	and	op2	avoid-01	0.1.0.1	0.1.0.1.0	
# ::edge	and	op2	encourage-01	0.1.1.1.1	0.1.1.1	
# ::edge	cause-01	ARG0	accident	0	0.0	
# ::edge	cause-01	ARG1	help-01	0	0.1	
# ::edge	encourage-01	ARG1	safe-41	0.1.1.1	0.1.1.1.0	
# ::edge	encourage-01	ARG2	think-01	0.1.1.1	0.1.1	
# ::edge	enjoy-01	ARG1	garden	0.1.0	0.1.0.0	
# ::edge	garden	mod	any	0.1.0.0	0.1.0.0.0	
# ::edge	help-01	ARG1	enjoy-01	0.1	0.1.0	
# ::edge	occur-01	ARG0	danger	0.1.1.1.1.2.0	0.1.1.1.1.2	
# ::edge	occur-01	ARG1	garden	0.1.1.1.1.2.0	0.1.1.1.1.2.0.0	
# ::edge	officer	mod	safe-41	0.1.1.1.0.1	0.1.1.1.0	
# ::edge	raise-01	ARG0	and	0.1.1.1.1.0	0.1.1.1.1	
# ::edge	raise-01	ARG1	awareness	0.1.1.1.1.0	0.1.1.1.1.0.0	
# ::edge	safe-41	ARG1	garden	0.1.1.0	0.1.1.0.0	
# ::edge	safe-41	ARG1	home	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	say-01	ARG1	and	0.1.1.1.1.1	0.1.1.1.1	
# ::edge	think-01	ARG1	help-01	0.1.1	0.1	
# ::edge	think-01	ARG2	safe-41	0.1.1	0.1.1.0	
(c / cause-01 
      :ARG0 (a / accident) 
      :ARG1 (h / help-01 
            :ARG1 (e / enjoy-01 
                  :ARG1 (g / garden 
                        :mod (a2 / any)) 
                  :op-of (a4 / and 
                        :op1 (a3 / avoid-01))) 
            :ARG1-of (t / think-01 
                  :ARG2 (s / safe-41 
                        :ARG1 (g2 / garden)) 
                  :ARG2-of (e2 / encourage-01 
                        :ARG1 (s3 / safe-41 
                              :ARG1 (h2 / home) 
                              :mod-of (o2 / officer)) 
                        :op-of (a5 / and 
                              :ARG0-of (r / raise-01 
                                    :ARG1 (a6 / awareness) 
                                    :ARG1-of (a7 / aim-01)) 
                              :ARG1-of (s2 / say-01) 
                              :op1 (d / danger 
                                    :ARG0-of (o / occur-01 
                                          :ARG1 (g3 / garden))))))))

# ::snt an inquest heard that 20yearold sarah roberts of victoria road bicester was driving her mothers ford escort along the a43 near duddington in northamptonshire when the accident happened last december
# ::tok an inquest heard that 20yearold sarah roberts of victoria road bicester was driving her mothers ford escort along the a43 near duddington in northamptonshire when the accident happened last december
# ::alignments 29-30|0.0.1.0.1.0.0.1.1+0.0.1.0.1.0.0.1 28-29|0.0.1.0.1.0.0.1.0 27-28|0.0.1.0.1.0.0 26-27|0.0.1.0.1.0.0.0 20-21|0.0.1.0.0 17-18|0.0.0 14-15|0.0.1+0.0 12-13|0.0.1.0 9-10|0 2-3|0.0.1.0.1 1-2|0.0.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:02.939
# ::node	0	road	9-10
# ::node	0.0	have-rel-role-91	14-15
# ::node	0.0.0	along	17-18
# ::node	0.0.1	mother	14-15
# ::node	0.0.1.0	drive-01	12-13
# ::node	0.0.1.0.0	near	20-21
# ::node	0.0.1.0.1	hear-01	2-3
# ::node	0.0.1.0.1.0	inquest	1-2
# ::node	0.0.1.0.1.0.0	happen-01	27-28
# ::node	0.0.1.0.1.0.0.0	accident	26-27
# ::node	0.0.1.0.1.0.0.1	date-entity	29-30
# ::node	0.0.1.0.1.0.0.1.0	last	28-29
# ::node	0.0.1.0.1.0.0.1.1	12	29-30
# ::root	0	road
(r / road 
      :ARG0-of (h2 / have-rel-role-91 
            :ARG1 (a2 / along) 
            :ARG2 (m / mother 
                  :ARG1-of (d2 / drive-01 
                        :ARG0 (n / near) 
                        :ARG1-of (h3 / hear-01 
                              :ARG0 (i / inquest 
                                    :ARG0-of (h / happen-01 
                                          :ARG1 (a / accident) 
                                          :time (d / date-entity 
                                                :mod (l / last) 
                                                :month 12))))))))

# ::snt on arriving at the scene of an accident the operator enters details of the chemical or chemicals involved and the computer displays appropriate courses of action including what has to be done to protect people involved
# ::tok on arriving at the scene of an accident the operator enters details of the chemical or chemicals involved and the computer displays appropriate courses of action including what has to be done to protect people involved
# ::alignments 35-36|0.0.2 33-34|0.0.2.0 25-26|0.0.0.0.0.0.1 23-24|0.0.0.0.0.0 22-23|0.0.0.0 21-22|0.0.0.0.0 20-21|0.0.1.1.1.0 18-19|0.0.1.1.0.0 17-18|0.0.1.1.0 16-17|0.0.1.1.1 15-16|0.0.1.1 14-15|0.0.1.0 11-12|0.0.1 10-11|0 9-10|0.0.0+0.0 7-8|0.1 4-5|0.0.0.0.0.0.0.0 1-2|0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:03.551
# ::node	0	enter-01	10-11
# ::node	0.0	person	9-10
# ::node	0.0.0	operate-01	9-10
# ::node	0.0.0.0	appropriate	22-23
# ::node	0.0.0.0.0	display-01	21-22
# ::node	0.0.0.0.0.0	course	23-24
# ::node	0.0.0.0.0.0.0	arrive-01	1-2
# ::node	0.0.0.0.0.0.0.0	scene	4-5
# ::node	0.0.0.0.0.0.1	action	25-26
# ::node	0.0.1	detail-01	11-12
# ::node	0.0.1.0	chemical	14-15
# ::node	0.0.1.1	or	15-16
# ::node	0.0.1.1.0	involve-01	17-18
# ::node	0.0.1.1.0.0	and	18-19
# ::node	0.0.1.1.1	chemical	16-17
# ::node	0.0.1.1.1.0	computer	20-21
# ::node	0.0.2	involve-01	35-36
# ::node	0.0.2.0	protect-01	33-34
# ::node	0.1	accident	7-8
# ::root	0	enter-01
# ::edge	action	part	course	0.0.0.0.0.0.1	0.0.0.0.0.0	
# ::edge	and	op1	involve-01	0.0.1.1.0.0	0.0.1.1.0	
# ::edge	arrive-01	ARG0	course	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	arrive-01	ARG4	scene	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	chemical	quant	computer	0.0.1.1.1	0.0.1.1.1.0	
# ::edge	detail-01	ARG0	person	0.0.1	0.0	
# ::edge	detail-01	ARG1	chemical	0.0.1	0.0.1.0	
# ::edge	display-01	ARG0	course	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	display-01	ARG1	appropriate	0.0.0.0.0	0.0.0.0	
# ::edge	enter-01	ARG0	person	0	0.0	
# ::edge	enter-01	ARG1	accident	0	0.1	
# ::edge	involve-01	ARG1	or	0.0.1.1.0	0.0.1.1	
# ::edge	involve-01	ARG1	person	0.0.2	0.0	
# ::edge	operate-01	ARG0	person	0.0.0	0.0	
# ::edge	operate-01	ARG1	appropriate	0.0.0	0.0.0.0	
# ::edge	or	op1	detail-01	0.0.1.1	0.0.1	
# ::edge	or	op2	chemical	0.0.1.1	0.0.1.1.1	
# ::edge	protect-01	ARG1	involve-01	0.0.2.0	0.0.2	
(e / enter-01 
      :ARG0 (p2 / person 
            :ARG0-of (o2 / operate-01 
                  :ARG1 (a2 / appropriate 
                        :ARG1-of (d / display-01 
                              :ARG0 (c / course 
                                    :ARG0-of (a5 / arrive-01 
                                          :ARG4 (s / scene)) 
                                    :part-of (a / action))))) 
            :ARG0-of (d2 / detail-01 
                  :ARG1 (c4 / chemical) 
                  :op-of (o / or 
                        :ARG1-of (i2 / involve-01 
                              :op-of (a3 / and)) 
                        :op1 (c3 / chemical 
                              :quant (c2 / computer)))) 
            :ARG1-of (i / involve-01 
                  :ARG1-of (p / protect-01))) 
      :ARG1 (a4 / accident))

# ::snt this is no accident as television executives have figured out that a coach usually sticks around longer than any player so identifying him with the team is the best way to build longterm viewer loyalty dash
# ::tok this is no accident as television executives have figured out that a coach usually sticks around longer than any player so identifying him with the team is the best way to build longterm viewer loyalty dash
# ::alignments 34-35|0.0.0.1.0.0.0.1 31-32|0.0.0.1.0.0.0 29-30|0.0.0.1.0.0 25-26|0.1 20-21|0.0.0.1.0.0.0.0 18-19|0.0.0.1.0.0.0.1.0 16-17|0.0.0.1.0.0.0.2.0 15-16|0.0.0.1.0.0.0.2 13-14|0.0.0.1.0.0.0.1.1 12-13|0+0.0 8-9|0.0.0.1.0 6-7|0.0.0.1+0.0.0 5-6|0.0.0.0 3-4|0.0.0.2 2-3|0.0.0.2.1 0-1|0.0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:04.185
# ::node	0	coach-01	12-13
# ::node	0.0	person	12-13
# ::node	0.0.0	have-org-role-91	6-7
# ::node	0.0.0.0	television	5-6
# ::node	0.0.0.1	executive	6-7
# ::node	0.0.0.1.0	figure-05	8-9
# ::node	0.0.0.1.0.0	way	29-30
# ::node	0.0.0.1.0.0.0	build-01	31-32
# ::node	0.0.0.1.0.0.0.0	so	20-21
# ::node	0.0.0.1.0.0.0.1	loyal-41	34-35
# ::node	0.0.0.1.0.0.0.1.0	any	18-19
# ::node	0.0.0.1.0.0.0.1.1	usual	13-14
# ::node	0.0.0.1.0.0.0.2	around	15-16
# ::node	0.0.0.1.0.0.0.2.0	long	16-17
# ::node	0.0.0.2	accident	3-4
# ::node	0.0.0.2.0	this	0-1
# ::node	0.0.0.2.1	-	2-3
# ::node	0.1	team	25-26
# ::root	0	coach-01
# ::edge	accident	domain	this	0.0.0.2	0.0.0.2.0	
# ::edge	accident	polarity	-	0.0.0.2	0.0.0.2.1	
# ::edge	accident	topic	have-org-role-91	0.0.0.2	0.0.0	
# ::edge	around	op1	long	0.0.0.1.0.0.0.2	0.0.0.1.0.0.0.2.0	
# ::edge	build-01	ARG0	so	0.0.0.1.0.0.0	0.0.0.1.0.0.0.0	
# ::edge	build-01	ARG1	loyal-41	0.0.0.1.0.0.0	0.0.0.1.0.0.0.1	
# ::edge	build-01	location	around	0.0.0.1.0.0.0	0.0.0.1.0.0.0.2	
# ::edge	build-01	manner	way	0.0.0.1.0.0.0	0.0.0.1.0.0	
# ::edge	coach-01	ARG0	person	0	0.0	
# ::edge	coach-01	ARG1	team	0	0.1	
# ::edge	figure-05	ARG0	executive	0.0.0.1.0	0.0.0.1	
# ::edge	figure-05	ARG1	way	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	have-org-role-91	ARG0	person	0.0.0	0.0	
# ::edge	have-org-role-91	ARG1	television	0.0.0	0.0.0.0	
# ::edge	have-org-role-91	ARG2	executive	0.0.0	0.0.0.1	
# ::edge	loyal-41	ARG0	any	0.0.0.1.0.0.0.1	0.0.0.1.0.0.0.1.0	
# ::edge	loyal-41	ARG1	usual	0.0.0.1.0.0.0.1	0.0.0.1.0.0.0.1.1	
(c / coach-01 
      :ARG0 (p / person 
            :ARG0-of (h / have-org-role-91 
                  :ARG1 (t2 / television) 
                  :ARG2 (e / executive 
                        :ARG0-of (f / figure-05 
                              :ARG1 (w / way 
                                    :manner-of (b / build-01 
                                          :ARG0 (s / so) 
                                          :ARG1 (l / loyal-41 
                                                :ARG0 (a / any) 
                                                :ARG1 (u / usual)) 
                                          :location (a2 / around 
                                                :op1 (l2 / long)))))) 
                  :topic-of (a3 / accident 
                        :domain (t3 / this) 
                        :polarity (- / -)))) 
      :ARG1 (t / team))

# ::snt for example liability for a nuclear accident is limited at present to 500m
# ::tok for example liability for a nuclear accident is limited at present to 500m
# ::alignments 10-11|0.1 8-9|0 6-7|0.0.1 5-6|0.0.1.0 2-3|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:04.229
# ::node	0	limit-01	8-9
# ::node	0.0	liability	2-3
# ::node	0.0.0	example	1-2
# ::node	0.0.1	accident	6-7
# ::node	0.0.1.0	nucleus	5-6
# ::node	0.1	present	10-11
# ::root	0	limit-01
# ::edge	accident	mod	nucleus	0.0.1	0.0.1.0	
# ::edge	liability	mod	example	0.0	0.0.0	
# ::edge	liability	poss	accident	0.0	0.0.1	
# ::edge	limit-01	ARG1	liability	0	0.0	
# ::edge	limit-01	time	present	0	0.1	
(l / limit-01 
      :ARG1 (l2 / liability 
            :mod (e / example) 
            :poss (a / accident 
                  :mod (n / nucleus))) 
      :time (p / present))

# ::snt almost as retribution for such an irregular move balestre yesterday revealed that mclaren had made a long submission in the appeal court blaming prost and not senna for the accident
# ::tok almost as retribution for such an irregular move balestre yesterday revealed that mclaren had made a long submission in the appeal court blaming prost and not senna for the accident
# ::alignments 29-30|0.1.0.2.0 24-25|0.1 22-23|0.1.0 21-22|0.1.0.1 20-21|0.1.0.1.0 17-18|0.1.0.2 10-11|0 9-10|0.0 4-5|0.1.0.1.0.0 0-1|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:04.351
# ::node	0	reveal-01	10-11
# ::node	0.0	yesterday	9-10
# ::node	0.1	and	24-25
# ::node	0.1.0	blame-01	22-23
# ::node	0.1.0.0	almost	0-1
# ::node	0.1.0.1	court	21-22
# ::node	0.1.0.1.0	appeal-02	20-21
# ::node	0.1.0.1.0.0	such	4-5
# ::node	0.1.0.2	submit-01	17-18
# ::node	0.1.0.2.0	accident	29-30
# ::root	0	reveal-01
# ::edge	and	op1	blame-01	0.1	0.1.0	
# ::edge	appeal-02	ARG0	such	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	appeal-02	ARG1	court	0.1.0.1.0	0.1.0.1	
# ::edge	blame-01	ARG0	almost	0.1.0	0.1.0.0	
# ::edge	blame-01	ARG1	court	0.1.0	0.1.0.1	
# ::edge	reveal-01	ARG0	yesterday	0	0.0	
# ::edge	reveal-01	ARG1	and	0	0.1	
# ::edge	submit-01	ARG1	accident	0.1.0.2	0.1.0.2.0	
# ::edge	submit-01	purpose	blame-01	0.1.0.2	0.1.0	
(r / reveal-01 
      :ARG0 (y / yesterday) 
      :ARG1 (a2 / and 
            :op1 (b / blame-01 
                  :ARG0 (a4 / almost) 
                  :ARG1 (c / court 
                        :ARG1-of (a3 / appeal-02 
                              :ARG0 (s2 / such))) 
                  :purpose-of (s / submit-01 
                        :ARG1 (a / accident)))))

# ::snt under new arrangements for junior ministers in the department there will be a minister responsible solely for food safety with a remit extending from hygiene through to animal welfare pesticides safety and emergency responses to accidents such as the chernobyl nuclear disaster
# ::tok under new arrangements for junior ministers in the department there will be a minister responsible solely for food safety with a remit extending from hygiene through to animal welfare pesticides safety and emergency responses to accidents such as the chernobyl nuclear disaster
# ::alignments 41-42|0.4.0.0.0.0 40-41|0.4.0.0.0.0.0 36-37|0.4.1.0 35-36|0.1 33-34|0 32-33|0.2 31-32|0.4 30-31|0.4.1 28-29|0.3.0 27-28|0.3 24-25|0.4.0.1 22-23|0.4.0 18-19|0.4.0.0 17-18|0.4.0.0.0 15-16|0.4.0.2 14-15|0.4.0.0.1 13-14|0.4.0.0.1.0.1+0.4.0.0.1.0 8-9|0.0 5-6|0.0.0.0+0.0.0 4-5|0.0.0.0.0 2-3|0.4.0.0.1.0.0 1-2|0.4.0.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:04.714
# ::node	0	respond-01	33-34
# ::node	0.0	department	8-9
# ::node	0.0.0	have-org-role-91	5-6
# ::node	0.0.0.0	minister	5-6
# ::node	0.0.0.0.0	junior	4-5
# ::node	0.1	accident	35-36
# ::node	0.2	emergency	32-33
# ::node	0.3	animal	27-28
# ::node	0.3.0	welfare	28-29
# ::node	0.4	and	31-32
# ::node	0.4.0	extend-01	22-23
# ::node	0.4.0.0	safe-41	18-19
# ::node	0.4.0.0.0	food	17-18
# ::node	0.4.0.0.0.0	disaster	41-42
# ::node	0.4.0.0.0.0.0	nucleus	40-41
# ::node	0.4.0.0.1	responsible-41	14-15
# ::node	0.4.0.0.1.0	have-org-role-91	13-14
# ::node	0.4.0.0.1.0.0	arrange-01	2-3
# ::node	0.4.0.0.1.0.0.0	new	1-2
# ::node	0.4.0.0.1.0.1	minister	13-14
# ::node	0.4.0.1	hygiene	24-25
# ::node	0.4.0.2	sole	15-16
# ::node	0.4.1	safe-41	30-31
# ::node	0.4.1.0	such	36-37
# ::root	0	respond-01
# ::edge	and	op1	safe-41	0.4	0.4.1	
# ::edge	and	op2	respond-01	0.4	0	
# ::edge	arrange-01	mod	new	0.4.0.0.1.0.0	0.4.0.0.1.0.0.0	
# ::edge	disaster	mod	nucleus	0.4.0.0.0.0	0.4.0.0.0.0.0	
# ::edge	extend-01	ARG0	safe-41	0.4.0	0.4.0.0	
# ::edge	extend-01	ARG1	hygiene	0.4.0	0.4.0.1	
# ::edge	extend-01	ARG2	and	0.4.0	0.4	
# ::edge	food	poss	disaster	0.4.0.0.0	0.4.0.0.0.0	
# ::edge	have-org-role-91	ARG1	arrange-01	0.4.0.0.1.0	0.4.0.0.1.0.0	
# ::edge	have-org-role-91	ARG1	department	0.0.0	0.0	
# ::edge	have-org-role-91	ARG2	minister	0.0.0	0.0.0.0	
# ::edge	have-org-role-91	ARG2	minister	0.4.0.0.1.0	0.4.0.0.1.0.1	
# ::edge	minister	mod	junior	0.0.0.0	0.0.0.0.0	
# ::edge	respond-01	ARG0	department	0	0.0	
# ::edge	respond-01	ARG1	accident	0	0.1	
# ::edge	respond-01	mod	animal	0	0.3	
# ::edge	respond-01	mod	emergency	0	0.2	
# ::edge	responsible-41	ARG1	have-org-role-91	0.4.0.0.1	0.4.0.0.1.0	
# ::edge	responsible-41	ARG2	safe-41	0.4.0.0.1	0.4.0.0	
# ::edge	safe-41	ARG1	food	0.4.0.0	0.4.0.0.0	
# ::edge	safe-41	ARG1	such	0.4.1	0.4.1.0	
# ::edge	sole	topic	extend-01	0.4.0.2	0.4.0	
# ::edge	welfare	mod	animal	0.3.0	0.3	
(r / respond-01 
      :ARG0 (d2 / department 
            :ARG1-of (h3 / have-org-role-91 
                  :ARG2 (m2 / minister 
                        :mod (j / junior)))) 
      :ARG1 (a / accident) 
      :mod (e / emergency) 
      :mod (a3 / animal 
            :mod-of (w / welfare)) 
      :op-of (a2 / and 
            :ARG2-of (e2 / extend-01 
                  :ARG0 (s3 / safe-41 
                        :ARG1 (f / food 
                              :poss (d / disaster 
                                    :mod (n / nucleus))) 
                        :ARG2-of (r2 / responsible-41 
                              :ARG1 (h2 / have-org-role-91 
                                    :ARG1 (a4 / arrange-01 
                                          :mod (n2 / new)) 
                                    :ARG2 (m / minister)))) 
                  :ARG1 (h / hygiene) 
                  :topic-of (s4 / sole)) 
            :op1 (s2 / safe-41 
                  :ARG1 (s / such))))

# ::snt he is struck by what he calls the immensely accidental quality of events in his life, originally he thought he would become a poet and it was by accident that he became a doctor, paris was an accident too
# ::tok he is struck by what he calls the immensely accidental quality of events in his life , originally he thought he would become a poet and it was by accident that he became a doctor , paris was an accident too
# ::alignments 40-41|0.0 39-40|0.0.0 34-35|0.2.2 32-33|0.2 31-32|0.2.1 29-30|0.2.0 26-27|0.1.1.0 25-26|0 24-25|0.1.1.2 22-23|0.1.1 20-21|0.1.1.1 19-20|0.1 18-19|0.1.0 17-18|0.1.2 15-16|0.1.0.0.1.0.0.0 12-13|0.1.0.0.1.0.0 10-11|0.1.0.0.1.0 5-6|0.1.0.0.1 2-3|0.1.0.0 0-1|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:05.212
# ::node	0	and	25-26
# ::node	0.0	too	40-41
# ::node	0.0.0	accident	39-40
# ::node	0.1	think-01	19-20
# ::node	0.1.0	he	18-19
# ::node	0.1.0.0	strike-01	2-3
# ::node	0.1.0.0.0	he	0-1
# ::node	0.1.0.0.1	he	5-6
# ::node	0.1.0.0.1.0	quality	10-11
# ::node	0.1.0.0.1.0.0	event	12-13
# ::node	0.1.0.0.1.0.0.0	life	15-16
# ::node	0.1.1	become-01	22-23
# ::node	0.1.1.0	it	26-27
# ::node	0.1.1.1	he	20-21
# ::node	0.1.1.2	poet	24-25
# ::node	0.1.2	original	17-18
# ::node	0.2	become-01	32-33
# ::node	0.2.0	accident	29-30
# ::node	0.2.1	he	31-32
# ::node	0.2.2	doctor	34-35
# ::root	0	and
# ::edge	accident	mod	too	0.0.0	0.0	
# ::edge	and	degree	too	0	0.0	
# ::edge	and	op1	think-01	0	0.1	
# ::edge	and	op2	become-01	0	0.2	
# ::edge	become-01	ARG0	accident	0.2	0.2.0	
# ::edge	become-01	ARG0	it	0.1.1	0.1.1.0	
# ::edge	become-01	ARG1	he	0.1.1	0.1.1.1	
# ::edge	become-01	ARG1	he	0.2	0.2.1	
# ::edge	become-01	ARG2	doctor	0.2	0.2.2	
# ::edge	become-01	ARG2	poet	0.1.1	0.1.1.2	
# ::edge	event	location	life	0.1.0.0.1.0.0	0.1.0.0.1.0.0.0	
# ::edge	quality	poss	event	0.1.0.0.1.0	0.1.0.0.1.0.0	
# ::edge	quality	poss	he	0.1.0.0.1.0	0.1.0.0.1	
# ::edge	strike-01	ARG0	he	0.1.0.0	0.1.0	
# ::edge	strike-01	ARG1	he	0.1.0.0	0.1.0.0.0	
# ::edge	strike-01	ARG2	he	0.1.0.0	0.1.0.0.1	
# ::edge	think-01	ARG0	he	0.1	0.1.0	
# ::edge	think-01	ARG1	become-01	0.1	0.1.1	
# ::edge	think-01	mod	original	0.1	0.1.2	
(a3 / and 
      :degree (t / too 
            :mod-of (a / accident)) 
      :op1 (t2 / think-01 
            :ARG0 (h3 / he 
                  :ARG0-of (s / strike-01 
                        :ARG1 (h5 / he) 
                        :ARG2 (h4 / he 
                              :poss-of (q / quality 
                                    :poss (e / event 
                                          :location (l / life)))))) 
            :ARG1 (b2 / become-01 
                  :ARG0 (i / it) 
                  :ARG1 (h2 / he) 
                  :ARG2 (p / poet)) 
            :mod (o / original)) 
      :op2 (b / become-01 
            :ARG0 (a2 / accident) 
            :ARG1 (h / he) 
            :ARG2 (d / doctor)))

# ::snt he was particularly fond of the woodcut medium because it leaves nothing at all to accident dash
# ::tok he was particularly fond of the woodcut medium because it leaves nothing at all to accident dash
# ::alignments 15-16|0.1 13-14|0.0.1.0 11-12|0.0.1 10-11|0.0 9-10|0.0.2 8-9|0 7-8|0.0.2.0 2-3|0.0.0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:05.358
# ::node	0	cause-01	8-9
# ::node	0.0	leave-01	10-11
# ::node	0.0.0	he	0-1
# ::node	0.0.0.0	particular	2-3
# ::node	0.0.1	nothing	11-12
# ::node	0.0.1.0	all	13-14
# ::node	0.0.2	it	9-10
# ::node	0.0.2.0	medium	7-8
# ::node	0.1	accident	15-16
# ::root	0	cause-01
# ::edge	cause-01	ARG0	leave-01	0	0.0	
# ::edge	cause-01	ARG1	accident	0	0.1	
# ::edge	he	quant	particular	0.0.0	0.0.0.0	
# ::edge	leave-01	ARG0	he	0.0	0.0.0	
# ::edge	leave-01	ARG1	nothing	0.0	0.0.1	
# ::edge	leave-01	ARG2	it	0.0	0.0.2	
# ::edge	medium	poss	it	0.0.2.0	0.0.2	
# ::edge	nothing	prep-at	all	0.0.1	0.0.1.0	
(c / cause-01 
      :ARG0 (l / leave-01 
            :ARG0 (h / he 
                  :quant (p / particular)) 
            :ARG1 (n / nothing 
                  :prep-at (a2 / all)) 
            :ARG2 (i / it 
                  :poss-of (m / medium))) 
      :ARG1 (a / accident))

# ::snt over two hours after the accident occurred a member of that team asked the local hepo health and emergency planning officer where the firstaid post was
# ::tok over two hours after the accident occurred a member of that team asked the local hepo health and emergency planning officer where the firstaid post was
# ::alignments 24-25|0.2.0.0.0.0 20-21|0.2.1 19-20|0 18-19|0.1 17-18|0.2 16-17|0.2.0.1 14-15|0.2.0.1.0 12-13|0.2.0 11-12|0.2.0.0 8-9|0.2.0.0.0.1+0.2.0.0.0 5-6|0.0 3-4|0.0.0 2-3|0.0.0.0.1+0.0.0.0 1-2|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:05.774
# ::node	0	plan-01	19-20
# ::node	0.0	accident	5-6
# ::node	0.0.0	after	3-4
# ::node	0.0.0.0	temporal-quantity	2-3
# ::node	0.0.0.0.0	2	1-2
# ::node	0.0.0.0.1	hour	2-3
# ::node	0.1	emergency	18-19
# ::node	0.2	and	17-18
# ::node	0.2.0	ask-02	12-13
# ::node	0.2.0.0	team	11-12
# ::node	0.2.0.0.0	have-org-role-91	8-9
# ::node	0.2.0.0.0.0	post	24-25
# ::node	0.2.0.0.0.1	member	8-9
# ::node	0.2.0.1	health	16-17
# ::node	0.2.0.1.0	local	14-15
# ::node	0.2.1	officer	20-21
# ::root	0	plan-01
# ::edge	after	op1	accident	0.0.0	0.0	
# ::edge	and	op1	ask-02	0.2	0.2.0	
# ::edge	and	op2	plan-01	0.2	0	
# ::edge	and	op3	officer	0.2	0.2.1	
# ::edge	ask-02	ARG0	team	0.2.0	0.2.0.0	
# ::edge	ask-02	ARG1	health	0.2.0	0.2.0.1	
# ::edge	have-org-role-91	ARG0	post	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	have-org-role-91	ARG1	team	0.2.0.0.0	0.2.0.0	
# ::edge	have-org-role-91	ARG2	member	0.2.0.0.0	0.2.0.0.0.1	
# ::edge	health	mod	local	0.2.0.1	0.2.0.1.0	
# ::edge	plan-01	ARG0	accident	0	0.0	
# ::edge	plan-01	ARG1	emergency	0	0.1	
# ::edge	temporal-quantity	op1	after	0.0.0.0	0.0.0	
# ::edge	temporal-quantity	quant	2	0.0.0.0	0.0.0.0.0	
# ::edge	temporal-quantity	unit	hour	0.0.0.0	0.0.0.0.1	
(p2 / plan-01 
      :ARG0 (a3 / accident 
            :op-of (a4 / after 
                  :op-of (t2 / temporal-quantity 
                        :quant 2 
                        :unit (h3 / hour)))) 
      :ARG1 (e / emergency) 
      :op-of (a / and 
            :op1 (a2 / ask-02 
                  :ARG0 (t / team 
                        :ARG1-of (h2 / have-org-role-91 
                              :ARG0 (p / post) 
                              :ARG2 (m / member))) 
                  :ARG1 (h / health 
                        :mod (l / local))) 
            :op2 (o / officer)))

# ::snt above all they dread an accident
# ::tok above all they dread an accident
# ::alignments 5-6|0.1 3-4|0 2-3|0.0 1-2|0.2 0-1|0.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:05.794
# ::node	0	dread-01	3-4
# ::node	0.0	they	2-3
# ::node	0.1	accident	5-6
# ::node	0.2	all	1-2
# ::node	0.3	above	0-1
# ::root	0	dread-01
# ::edge	dread-01	ARG0	they	0	0.0	
# ::edge	dread-01	ARG1	accident	0	0.1	
# ::edge	dread-01	ARG2	all	0	0.2	
# ::edge	dread-01	location	above	0	0.3	
(d / dread-01 
      :ARG0 (t / they) 
      :ARG1 (a / accident) 
      :ARG2 (a2 / all) 
      :location (a3 / above))

# ::snt a senior red cross voluntary worker who went to kegworth reported i drove immediately from london arriving about one hour and ten minutes after the accident
# ::tok a senior red cross voluntary worker who went to kegworth reported i drove immediately from london arriving about one hour and ten minutes after the accident
# ::alignments 25-26|0.0.2.0 23-24|0.0.2 22-23|0.0.0.0.1.0+0.0.0.0.1 20-21|0 19-20|0.0.1.0+0.0.1 16-17|0.0 15-16|0.0.0.1.0+0.0.0.1+0.0.0 13-14|0.0.0.0.3 12-13|0.0.0.0 11-12|0.0.0.0.0 10-11|0.0.0.0.2 5-6|0.0.0.0.2.0.0+0.0.0.0.2.0 4-5|0.0.0.0.2.0.1 3-4|0.0.0.0.2.0.2 2-3|0.0.0.0.2.0.4 1-2|0.0.0.0.2.0.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:06.190
# ::node	0	and	20-21
# ::node	0.0	arrive-01	16-17
# ::node	0.0.0	city	15-16
# ::node	0.0.0.0	drive-02	12-13
# ::node	0.0.0.0.0	i	11-12
# ::node	0.0.0.0.1	temporal-quantity	22-23
# ::node	0.0.0.0.1.0	minute	22-23
# ::node	0.0.0.0.2	report-01	10-11
# ::node	0.0.0.0.2.0	person	5-6
# ::node	0.0.0.0.2.0.0	work-01	5-6
# ::node	0.0.0.0.2.0.1	volunteer-01	4-5
# ::node	0.0.0.0.2.0.2	cross-02	3-4
# ::node	0.0.0.0.2.0.3	senior	1-2
# ::node	0.0.0.0.2.0.4	red	2-3
# ::node	0.0.0.0.3	immediate	13-14
# ::node	0.0.0.1	name	15-16
# ::node	0.0.0.1.0	"London"	15-16
# ::node	0.0.1	temporal-quantity	19-20
# ::node	0.0.1.0	hour	19-20
# ::node	0.0.2	after	23-24
# ::node	0.0.2.0	accident	25-26
# ::root	0	and
# ::edge	after	op1	accident	0.0.2	0.0.2.0	
# ::edge	and	op1	arrive-01	0	0.0	
# ::edge	arrive-01	ARG1	city	0.0	0.0.0	
# ::edge	arrive-01	ARG4	temporal-quantity	0.0	0.0.1	
# ::edge	arrive-01	time	after	0.0	0.0.2	
# ::edge	city	name	name	0.0.0	0.0.0.1	
# ::edge	cross-02	ARG1	person	0.0.0.0.2.0.2	0.0.0.0.2.0	
# ::edge	drive-02	ARG0	i	0.0.0.0	0.0.0.0.0	
# ::edge	drive-02	ARG1	temporal-quantity	0.0.0.0	0.0.0.0.1	
# ::edge	drive-02	location	city	0.0.0.0	0.0.0	
# ::edge	drive-02	time	immediate	0.0.0.0	0.0.0.0.3	
# ::edge	name	op1	"London"	0.0.0.1	0.0.0.1.0	
# ::edge	person	mod	red	0.0.0.0.2.0	0.0.0.0.2.0.4	
# ::edge	person	mod	senior	0.0.0.0.2.0	0.0.0.0.2.0.3	
# ::edge	report-01	ARG0	person	0.0.0.0.2	0.0.0.0.2.0	
# ::edge	report-01	ARG1	drive-02	0.0.0.0.2	0.0.0.0	
# ::edge	temporal-quantity	unit	hour	0.0.1	0.0.1.0	
# ::edge	temporal-quantity	unit	minute	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	volunteer-01	ARG1	person	0.0.0.0.2.0.1	0.0.0.0.2.0	
# ::edge	work-01	ARG0	person	0.0.0.0.2.0.0	0.0.0.0.2.0	
(a3 / and 
      :op1 (a4 / arrive-01 
            :ARG1 (c / city 
                  :location-of (d / drive-02 
                        :ARG0 (i2 / i) 
                        :ARG1 (t / temporal-quantity 
                              :unit (m / minute)) 
                        :ARG1-of (r / report-01 
                              :ARG0 (p / person 
                                    :ARG0-of (w / work-01) 
                                    :ARG1-of (v / volunteer-01) 
                                    :ARG1-of (c2 / cross-02) 
                                    :mod (s / senior) 
                                    :mod (r2 / red))) 
                        :time (i / immediate)) 
                  :name (n / name 
                        :op1 "London")) 
            :ARG4 (t2 / temporal-quantity 
                  :unit (h / hour)) 
            :time (a2 / after 
                  :op1 (a / accident))))

# ::snt the breakdown of accidents produced for only the second time in booklet form is being distributed in thousands to colleges community groups libraries and health authorities
# ::tok the breakdown of accidents produced for only the second time in booklet form is being distributed in thousands to colleges community groups libraries and health authorities
# ::alignments 25-26|0.0.1.1.0.0 24-25|0.0.1.1.0.0.0 23-24|0.0.1.1.0 22-23|0.0.1.1.1 21-22|0.0.1.1.1.0 20-21|0.0.1.1.1.0.0 19-20|0.0.1.1.1.0.1 15-16|0.0.1.1 12-13|0 9-10|0.0.1.0 6-7|0.0.1.0.0 4-5|0.0 3-4|0.0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:06.415
# ::node	0	form	12-13
# ::node	0.0	produce-01	4-5
# ::node	0.0.0	accident	3-4
# ::node	0.0.1	break-12	1-2
# ::node	0.0.1.0	time	9-10
# ::node	0.0.1.0.0	only	6-7
# ::node	0.0.1.1	distribute-01	15-16
# ::node	0.0.1.1.0	and	23-24
# ::node	0.0.1.1.0.0	authority	25-26
# ::node	0.0.1.1.0.0.0	health	24-25
# ::node	0.0.1.1.1	library	22-23
# ::node	0.0.1.1.1.0	group	21-22
# ::node	0.0.1.1.1.0.0	community	20-21
# ::node	0.0.1.1.1.0.1	college	19-20
# ::root	0	form
(f / form 
      :location-of (p / produce-01 
            :ARG0 (a3 / accident) 
            :ARG1 (b / break-12 
                  :ARG1 (t / time 
                        :mod (o / only)) 
                  :ARG1-of (d / distribute-01 
                        :ARG0 (a2 / and 
                              :op1 (a / authority 
                                    :mod (h / health))) 
                        :ARG2 (l / library 
                              :mod (g / group 
                                    :mod (c / community) 
                                    :mod (c2 / college)))))))

# ::snt mrs geraldine mctier prosecuting said that martin was breathalysed after the accident
# ::tok mrs geraldine mctier prosecuting said that martin was breathalysed after the accident
# ::alignments 11-12|0.0.0 9-10|0.0.0.0 4-5|0 3-4|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:06.427
# ::node	0	say-01	4-5
# ::node	0.0	prosecute-01	3-4
# ::node	0.0.0	accident	11-12
# ::node	0.0.0.0	after	9-10
# ::root	0	say-01
(s / say-01 
      :ARG1-of (p / prosecute-01 
            :ARG0 (a / accident 
                  :op-of (a2 / after))))

# ::snt carey died in the accident and
# ::tok carey died in the accident and
# ::alignments 5-6|0 4-5|0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:06.433
# ::node	0	and	5-6
# ::node	0.0	die-01	1-2
# ::node	0.0.0	accident	4-5
# ::root	0	and
(a / and 
      :ARG1-of (d / die-01 
            :location (a2 / accident)))

# ::snt monaghan 26 died in hospital after the accident in bologna where he had gone to watch englands match against belgium
# ::tok monaghan 26 died in hospital after the accident in bologna where he had gone to watch englands match against belgium
# ::alignments 17-18|0.1.0.0 15-16|0.1.0 11-12|0.1 7-8|0.3.0 5-6|0.3 4-5|0.2 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:06.467
# ::node	0	die-01	2-3
# ::node	0.0	26	1-2
# ::node	0.1	he	11-12
# ::node	0.1.0	watch-01	15-16
# ::node	0.1.0.0	match-01	17-18
# ::node	0.2	hospital	4-5
# ::node	0.3	after	5-6
# ::node	0.3.0	accident	7-8
# ::root	0	die-01
# ::edge	after	op1	accident	0.3	0.3.0	
# ::edge	die-01	ARG0	26	0	0.0	
# ::edge	die-01	ARG1	he	0	0.1	
# ::edge	die-01	location	hospital	0	0.2	
# ::edge	die-01	time	after	0	0.3	
# ::edge	watch-01	ARG0	he	0.1.0	0.1	
# ::edge	watch-01	ARG1	match-01	0.1.0	0.1.0.0	
(d / die-01 
      :ARG0 26 
      :ARG1 (h / he 
            :ARG0-of (w / watch-01 
                  :ARG1 (m / match-01))) 
      :location (h2 / hospital) 
      :time (a2 / after 
            :op1 (a / accident)))

# ::snt mr buckley was given and absolute discharge and the company was given a 12 month conditional discharge when stroud magistrates accepted that the accident was beyond their control
# ::tok mr buckley was given and absolute discharge and the company was given a 12 month conditional discharge when stroud magistrates accepted that the accident was beyond their control
# ::alignments 27-28|0.1.0.0.0.0 25-26|0.1.0.0.0.0.0 23-24|0.1.0.0.0 20-21|0.1.0.0 16-17|0.1.0 14-15|0.1.2.0.0.1+0.1.2.0.0 13-14|0.1.2.0.0.0 11-12|0.1 9-10|0.0 7-8|0 6-7|0.1.1 5-6|0.1.1.0 4-5|0.1.2 3-4|0.1.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:07.066
# ::node	0	and	7-8
# ::node	0.0	company	9-10
# ::node	0.1	give-01	11-12
# ::node	0.1.0	discharge-01	16-17
# ::node	0.1.0.0	accept-01	20-21
# ::node	0.1.0.0.0	accident	23-24
# ::node	0.1.0.0.0.0	control-01	27-28
# ::node	0.1.0.0.0.0.0	beyond	25-26
# ::node	0.1.1	discharge-01	6-7
# ::node	0.1.1.0	absolute	5-6
# ::node	0.1.2	and	4-5
# ::node	0.1.2.0	give-01	3-4
# ::node	0.1.2.0.0	temporal-quantity	14-15
# ::node	0.1.2.0.0.0	12	13-14
# ::node	0.1.2.0.0.1	month	14-15
# ::root	0	and
# ::edge	accept-01	ARG0	accident	0.1.0.0	0.1.0.0.0	
# ::edge	accept-01	ARG1	discharge-01	0.1.0.0	0.1.0	
# ::edge	and	op1	company	0	0.0	
# ::edge	and	op1	give-01	0.1.2	0.1.2.0	
# ::edge	and	op2	give-01	0.1.2	0.1	
# ::edge	beyond	op1	control-01	0.1.0.0.0.0.0	0.1.0.0.0.0	
# ::edge	control-01	ARG2	accident	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	discharge-01	mod	absolute	0.1.1	0.1.1.0	
# ::edge	give-01	ARG1	discharge-01	0.1	0.1.0	
# ::edge	give-01	ARG1	temporal-quantity	0.1.2.0	0.1.2.0.0	
# ::edge	give-01	ARG2	discharge-01	0.1	0.1.1	
# ::edge	give-01	purpose	and	0.1	0	
# ::edge	temporal-quantity	quant	12	0.1.2.0.0	0.1.2.0.0.0	
# ::edge	temporal-quantity	unit	month	0.1.2.0.0	0.1.2.0.0.1	
(a3 / and 
      :op1 (c2 / company) 
      :purpose-of (g / give-01 
            :ARG1 (d / discharge-01 
                  :ARG1-of (a2 / accept-01 
                        :ARG0 (a / accident 
                              :ARG2-of (c / control-01 
                                    :op-of (b / beyond))))) 
            :ARG2 (d2 / discharge-01 
                  :mod (a4 / absolute)) 
            :op-of (a5 / and 
                  :op1 (g2 / give-01 
                        :ARG1 (t / temporal-quantity 
                              :quant 12 
                              :unit (m / month))))))

# ::snt in front of her stands the town hall so that it is no accident that she turns her back on religion and faces the edifice of social and national responsibility
# ::tok in front of her stands the town hall so that it is no accident that she turns her back on religion and faces the edifice of social and national responsibility
# ::alignments 29-30|0.1.3.1 28-29|0.1.3.0 27-28|0.1.3 26-27|0.1.3.1.2 22-23|0.1 21-22|0 20-21|0.1.2 18-19|0.1.2.0 15-16|0.1.0 13-14|0.0 12-13|0.0.1 10-11|0.0.0 8-9|0.1.3.1.1 7-8|0.1.3.1.0.0 6-7|0.1.3.1.0 1-2|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:07.321
# ::node	0	and	21-22
# ::node	0.0	accident	13-14
# ::node	0.0.0	it	10-11
# ::node	0.0.1	-	12-13
# ::node	0.1	face-01	22-23
# ::node	0.1.0	she	15-16
# ::node	0.1.1	front	1-2
# ::node	0.1.2	religion	20-21
# ::node	0.1.2.0	back	18-19
# ::node	0.1.3	and	27-28
# ::node	0.1.3.0	nation	28-29
# ::node	0.1.3.1	responsible-41	29-30
# ::node	0.1.3.1.0	town	6-7
# ::node	0.1.3.1.0.0	hall	7-8
# ::node	0.1.3.1.1	so	8-9
# ::node	0.1.3.1.2	society	26-27
# ::root	0	and
# ::edge	accident	domain	it	0.0	0.0.0	
# ::edge	accident	polarity	-	0.0	0.0.1	
# ::edge	and	op1	accident	0	0.0	
# ::edge	and	op1	face-01	0.1.3	0.1	
# ::edge	and	op2	face-01	0	0.1	
# ::edge	and	op2	nation	0.1.3	0.1.3.0	
# ::edge	and	op3	responsible-41	0.1.3	0.1.3.1	
# ::edge	face-01	ARG0	she	0.1	0.1.0	
# ::edge	face-01	ARG1	front	0.1	0.1.1	
# ::edge	face-01	ARG3	religion	0.1	0.1.2	
# ::edge	hall	mod	town	0.1.3.1.0.0	0.1.3.1.0	
# ::edge	religion	mod	back	0.1.2	0.1.2.0	
# ::edge	responsible-41	ARG0	town	0.1.3.1	0.1.3.1.0	
# ::edge	responsible-41	ARG1	so	0.1.3.1	0.1.3.1.1	
# ::edge	responsible-41	ARG3	society	0.1.3.1	0.1.3.1.2	
(a2 / and 
      :op1 (a3 / accident 
            :domain (i / it) 
            :polarity (- / -)) 
      :op2 (f / face-01 
            :ARG0 (s2 / she) 
            :ARG1 (f2 / front) 
            :ARG3 (r2 / religion 
                  :mod (b / back)) 
            :op-of (a / and 
                  :op1 (n / nation) 
                  :op2 (r / responsible-41 
                        :ARG0 (t / town 
                              :mod-of (h / hall)) 
                        :ARG1 (s3 / so) 
                        :ARG3 (s / society)))))

# ::snt a reader from cowley reports he ran into my car denting it and it has now failed its mot partly due to the accident
# ::tok a reader from cowley reports he ran into my car denting it and it has now failed its mot partly due to the accident
# ::alignments 23-24|0.0.0.0 19-20|0.1.1.1 16-17|0.1.1 15-16|0.1.1.3 13-14|0.1.1.0 12-13|0.1.1.2 11-12|0.1.0.0 10-11|0.1.0 9-10|0.1.2 5-6|0.1 4-5|0 1-2|0.0.0+0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:07.481
# ::node	0	report-01	4-5
# ::node	0.0	person	1-2
# ::node	0.0.0	read-01	1-2
# ::node	0.0.0.0	accident	23-24
# ::node	0.1	he	5-6
# ::node	0.1.0	dent-01	10-11
# ::node	0.1.0.0	it	11-12
# ::node	0.1.1	fail-01	16-17
# ::node	0.1.1.0	it	13-14
# ::node	0.1.1.1	partly	19-20
# ::node	0.1.1.2	and	12-13
# ::node	0.1.1.3	now	15-16
# ::node	0.1.2	car	9-10
# ::root	0	report-01
# ::edge	and	op1	fail-01	0.1.1.2	0.1.1	
# ::edge	car	poss	he	0.1.2	0.1	
# ::edge	dent-01	ARG0	he	0.1.0	0.1	
# ::edge	dent-01	ARG1	it	0.1.0	0.1.0.0	
# ::edge	fail-01	ARG0	he	0.1.1	0.1	
# ::edge	fail-01	ARG1	it	0.1.1	0.1.1.0	
# ::edge	fail-01	ARG4	partly	0.1.1	0.1.1.1	
# ::edge	fail-01	time	now	0.1.1	0.1.1.3	
# ::edge	read-01	ARG0	person	0.0.0	0.0	
# ::edge	read-01	ARG1	accident	0.0.0	0.0.0.0	
# ::edge	report-01	ARG0	person	0	0.0	
# ::edge	report-01	ARG2	he	0	0.1	
(r / report-01 
      :ARG0 (p2 / person 
            :ARG0-of (r2 / read-01 
                  :ARG1 (a / accident))) 
      :ARG2 (h / he 
            :ARG0-of (d / dent-01 
                  :ARG1 (i2 / it)) 
            :ARG0-of (f / fail-01 
                  :ARG1 (i / it) 
                  :ARG4 (p / partly) 
                  :op-of (a2 / and) 
                  :time (n / now)) 
            :poss-of (c / car)))

# ::snt the accident would happen near one of our heavilytrafficked radio beacons daventry perhaps bovingdon or lydd
# ::tok the accident would happen near one of our heavilytrafficked radio beacons daventry perhaps bovingdon or lydd
# ::alignments 14-15|0.0.2 12-13|0.0.0 9-10|0 4-5|0.0.3 3-4|0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:07.525
# ::node	0	radio	9-10
# ::node	0.0	happen-01	3-4
# ::node	0.0.0	perhaps	12-13
# ::node	0.0.1	accident	1-2
# ::node	0.0.2	or	14-15
# ::node	0.0.3	near	4-5
# ::root	0	radio
# ::edge	happen-01	ARG0	perhaps	0.0	0.0.0	
# ::edge	happen-01	ARG1	accident	0.0	0.0.1	
# ::edge	happen-01	ARG2	or	0.0	0.0.2	
# ::edge	happen-01	location	near	0.0	0.0.3	
# ::edge	radio	op1	happen-01	0	0.0	
(r / radio 
      :op1 (h / happen-01 
            :ARG0 (p / perhaps) 
            :ARG1 (a / accident) 
            :ARG2 (o / or) 
            :location (n / near)))

# ::snt not every day like we used to just after her accident but quite a lot all the same
# ::tok not every day like we used to just after her accident but quite a lot all the same
# ::alignments 17-18|0.2 15-16|0.2.1 14-15|0.2.0 12-13|0.1 11-12|0 10-11|0.3.1 8-9|0.3 7-8|0.3.0 5-6|0.0 4-5|0.0.0 2-3|0.0.1 1-2|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:07.865
# ::node	0	contrast-01	11-12
# ::node	0.0	use-01	5-6
# ::node	0.0.0	we	4-5
# ::node	0.0.1	day	2-3
# ::node	0.0.1.0	every	1-2
# ::node	0.1	quite	12-13
# ::node	0.2	same-41	17-18
# ::node	0.2.0	lot	14-15
# ::node	0.2.1	all	15-16
# ::node	0.3	after	8-9
# ::node	0.3.0	just	7-8
# ::node	0.3.1	accident	10-11
# ::root	0	contrast-01
# ::edge	after	op1	accident	0.3	0.3.1	
# ::edge	after	op2	contrast-01	0.3	0	
# ::edge	contrast-01	ARG1	use-01	0	0.0	
# ::edge	contrast-01	ARG2	quite	0	0.1	
# ::edge	contrast-01	condition	same-41	0	0.2	
# ::edge	day	mod	every	0.0.1	0.0.1.0	
# ::edge	just	op1	after	0.3.0	0.3	
# ::edge	same-41	ARG0	lot	0.2	0.2.0	
# ::edge	same-41	ARG1	all	0.2	0.2.1	
# ::edge	use-01	ARG0	we	0.0	0.0.0	
# ::edge	use-01	ARG1	day	0.0	0.0.1	
(c / contrast-01 
      :ARG1 (u / use-01 
            :ARG0 (w / we) 
            :ARG1 (d / day 
                  :mod (e / every))) 
      :ARG2 (q / quite) 
      :condition (s / same-41 
            :ARG0 (l / lot) 
            :ARG1 (a / all)) 
      :op-of (a3 / after 
            :op-of (j / just) 
            :op1 (a2 / accident)))

# ::snt excluding oil production which is forecast to recover from the disruptive effect of several accidents over the past two years the economy will grow 3 4 per cent next year
# ::tok excluding oil production which is forecast to recover from the disruptive effect of several accidents over the past two years the economy will grow 3 4 per cent next year
# ::alignments 29-30|0.0.2.3 28-29|0.0.2.3.0 27-28|0.0.2.0.0+0.0.2.0 25-26|0.0.2.2 24-25|0.0.0 23-24|0.0.2 21-22|0.0.2.1 19-20|0.1.0.1.2+0.1.0.1 18-19|0.1.0.1.1 17-18|0.1.0.1.0 14-15|0.1.0.0 13-14|0.1.0.0.0 11-12|0.1.0 7-8|0.1 5-6|0 2-3|0.0 1-2|0.0.1 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:08.434
# ::node	0	forecast-01	5-6
# ::node	0.0	produce-01	2-3
# ::node	0.0.0	3	24-25
# ::node	0.0.1	oil	1-2
# ::node	0.0.2	grow-01	23-24
# ::node	0.0.2.0	monetary-quantity	27-28
# ::node	0.0.2.0.0	cent	27-28
# ::node	0.0.2.1	economy	21-22
# ::node	0.0.2.2	4	25-26
# ::node	0.0.2.3	year	29-30
# ::node	0.0.2.3.0	next	28-29
# ::node	0.1	recover-02	7-8
# ::node	0.1.0	effect-01	11-12
# ::node	0.1.0.0	accident	14-15
# ::node	0.1.0.0.0	several	13-14
# ::node	0.1.0.1	temporal-quantity	19-20
# ::node	0.1.0.1.0	past	17-18
# ::node	0.1.0.1.1	2	18-19
# ::node	0.1.0.1.2	year	19-20
# ::node	0.2	exclude-01	0-1
# ::root	0	forecast-01
# ::edge	accident	quant	several	0.1.0.0	0.1.0.0.0	
# ::edge	effect-01	ARG0	accident	0.1.0	0.1.0.0	
# ::edge	effect-01	ARG1	temporal-quantity	0.1.0	0.1.0.1	
# ::edge	exclude-01	ARG1	forecast-01	0.2	0	
# ::edge	forecast-01	ARG0	produce-01	0	0.0	
# ::edge	forecast-01	ARG1	recover-02	0	0.1	
# ::edge	grow-01	ARG0	monetary-quantity	0.0.2	0.0.2.0	
# ::edge	grow-01	ARG1	economy	0.0.2	0.0.2.1	
# ::edge	grow-01	ARG2	4	0.0.2	0.0.2.2	
# ::edge	grow-01	time	year	0.0.2	0.0.2.3	
# ::edge	monetary-quantity	unit	cent	0.0.2.0	0.0.2.0.0	
# ::edge	past	op1	temporal-quantity	0.1.0.1.0	0.1.0.1	
# ::edge	produce-01	ARG0	3	0.0	0.0.0	
# ::edge	produce-01	ARG1	oil	0.0	0.0.1	
# ::edge	produce-01	ARG2	grow-01	0.0	0.0.2	
# ::edge	recover-02	ARG1	effect-01	0.1	0.1.0	
# ::edge	temporal-quantity	quant	2	0.1.0.1	0.1.0.1.1	
# ::edge	temporal-quantity	unit	year	0.1.0.1	0.1.0.1.2	
# ::edge	year	mod	next	0.0.2.3	0.0.2.3.0	
(f / forecast-01 
      :ARG0 (p2 / produce-01 
            :ARG0 3 
            :ARG1 (o / oil) 
            :ARG2 (g / grow-01 
                  :ARG0 (m / monetary-quantity 
                        :unit (c / cent)) 
                  :ARG1 (e / economy) 
                  :ARG2 4 
                  :time (y / year 
                        :mod (n / next)))) 
      :ARG1 (r / recover-02 
            :ARG1 (e2 / effect-01 
                  :ARG0 (a / accident 
                        :quant (s / several)) 
                  :ARG1 (t / temporal-quantity 
                        :op-of (p / past) 
                        :quant 2 
                        :unit (y2 / year)))) 
      :ARG1-of (e3 / exclude-01))

# ::snt michael was amazed at what peter showed him but once convinced that the thing was indeed no accident he knew for certain who had been responsible for it
# ::tok michael was amazed at what peter showed him but once convinced that the thing was indeed no accident he knew for certain who had been responsible for it
# ::alignments 27-28|0.0.0 25-26|0.0.0.0 21-22|0.0.0.0.0 19-20|0.0.1.0 18-19|0.0.1.0.0 17-18|0.0.1.0.1 16-17|0.0.1.0.1.1 15-16|0.0.1.0.1.0 13-14|0.1.0 10-11|0.1 9-10|0.1.1 8-9|0 6-7|0.0 2-3|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:08.847
# ::node	0	contrast-01	8-9
# ::node	0.0	show-01	6-7
# ::node	0.0.0	it	27-28
# ::node	0.0.0.0	responsible-41	25-26
# ::node	0.0.0.0.0	certain	21-22
# ::node	0.0.1	amaze-01	2-3
# ::node	0.0.1.0	know-01	19-20
# ::node	0.0.1.0.0	he	18-19
# ::node	0.0.1.0.1	accident	17-18
# ::node	0.0.1.0.1.0	indeed	15-16
# ::node	0.0.1.0.1.1	-	16-17
# ::node	0.1	convince-01	10-11
# ::node	0.1.0	thing	13-14
# ::node	0.1.1	once	9-10
# ::root	0	contrast-01
# ::edge	accident	mod	indeed	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	accident	polarity	-	0.0.1.0.1	0.0.1.0.1.1	
# ::edge	amaze-01	ARG1	know-01	0.0.1	0.0.1.0	
# ::edge	amaze-01	ARG2	show-01	0.0.1	0.0	
# ::edge	contrast-01	ARG1	show-01	0	0.0	
# ::edge	contrast-01	ARG2	convince-01	0	0.1	
# ::edge	convince-01	ARG1	thing	0.1	0.1.0	
# ::edge	convince-01	time	once	0.1	0.1.1	
# ::edge	know-01	ARG0	he	0.0.1.0	0.0.1.0.0	
# ::edge	know-01	ARG1	accident	0.0.1.0	0.0.1.0.1	
# ::edge	responsible-41	ARG1	certain	0.0.0.0	0.0.0.0.0	
# ::edge	responsible-41	topic	it	0.0.0.0	0.0.0	
# ::edge	show-01	ARG1	it	0.0	0.0.0	
(c3 / contrast-01 
      :ARG1 (s / show-01 
            :ARG1 (i / it 
                  :topic-of (r / responsible-41 
                        :ARG1 (c / certain))) 
            :ARG2-of (a2 / amaze-01 
                  :ARG1 (k / know-01 
                        :ARG0 (h / he) 
                        :ARG1 (a / accident 
                              :mod (i2 / indeed) 
                              :polarity (- / -))))) 
      :ARG2 (c2 / convince-01 
            :ARG1 (t / thing) 
            :time (o / once)))

# ::snt ambulance staff are pledged to maintain accident and emergency cover if they are allowed to do so he said
# ::tok ambulance staff are pledged to maintain accident and emergency cover if they are allowed to do so he said
# ::alignments 18-19|0 17-18|0.0 16-17|0.2 13-14|0.1 11-12|0.1.0 8-9|0.1.1.2.1 7-8|0.1.1.2 6-7|0.1.1.2.0 5-6|0.1.1 3-4|0.1.1.1 1-2|0.1.1.0.0+0.1.1.0 0-1|0.1.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:08.948
# ::node	0	say-01	18-19
# ::node	0.0	he	17-18
# ::node	0.1	allow-01	13-14
# ::node	0.1.0	they	11-12
# ::node	0.1.1	maintain-01	5-6
# ::node	0.1.1.0	person	1-2
# ::node	0.1.1.0.0	staff-01	1-2
# ::node	0.1.1.0.1	ambulance	0-1
# ::node	0.1.1.1	pledge-01	3-4
# ::node	0.1.1.2	and	7-8
# ::node	0.1.1.2.0	accident	6-7
# ::node	0.1.1.2.1	emergency	8-9
# ::node	0.2	so	16-17
# ::root	0	say-01
# ::edge	allow-01	ARG1	they	0.1	0.1.0	
# ::edge	allow-01	condition	say-01	0.1	0	
# ::edge	and	op1	maintain-01	0.1.1.2	0.1.1	
# ::edge	and	op2	accident	0.1.1.2	0.1.1.2.0	
# ::edge	and	op3	emergency	0.1.1.2	0.1.1.2.1	
# ::edge	maintain-01	ARG0	person	0.1.1	0.1.1.0	
# ::edge	maintain-01	condition	allow-01	0.1.1	0.1	
# ::edge	person	mod	ambulance	0.1.1.0	0.1.1.0.1	
# ::edge	pledge-01	ARG1	maintain-01	0.1.1.1	0.1.1	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	so	op1	say-01	0.2	0	
# ::edge	staff-01	ARG2	person	0.1.1.0.0	0.1.1.0	
(s / say-01 
      :ARG0 (h / he) 
      :condition-of (a / allow-01 
            :ARG1 (t / they) 
            :condition-of (m / maintain-01 
                  :ARG0 (p2 / person 
                        :ARG2-of (s3 / staff-01) 
                        :mod (a4 / ambulance)) 
                  :ARG1-of (p / pledge-01) 
                  :op-of (a2 / and 
                        :op1 (a3 / accident) 
                        :op2 (e / emergency)))) 
      :op-of (s2 / so))

# ::snt it was as the lebanese maronite publisher george naccache was to say compromise elevated to the level of state doctrine the folly was to have treated an historical accident as an element of stability
# ::tok it was as the lebanese maronite publisher george naccache was to say compromise elevated to the level of state doctrine the folly was to have treated an historical accident as an element of stability
# ::alignments 33-34|0.2.0.0 31-32|0.2.0.0.0 28-29|0.0.0 27-28|0.0.0.0 25-26|0.0 19-20|0 18-19|0.1 16-17|0.2 13-14|0.2.0.1 12-13|0.2.0 11-12|0.2.0.1.0 0-1|0.2.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:09.160
# ::node	0	doctrine	19-20
# ::node	0.0	treat-01	25-26
# ::node	0.0.0	accident	28-29
# ::node	0.0.0.0	history	27-28
# ::node	0.1	state	18-19
# ::node	0.2	level	16-17
# ::node	0.2.0	compromise-01	12-13
# ::node	0.2.0.0	stability	33-34
# ::node	0.2.0.0.0	element	31-32
# ::node	0.2.0.1	elevate-01	13-14
# ::node	0.2.0.1.0	say-01	11-12
# ::node	0.2.0.1.0.0	it	0-1
# ::root	0	doctrine
# ::edge	accident	mod	history	0.0.0	0.0.0.0	
# ::edge	compromise-01	ARG1	stability	0.2.0	0.2.0.0	
# ::edge	compromise-01	ARG2	level	0.2.0	0.2	
# ::edge	doctrine	mod	state	0	0.1	
# ::edge	element	mod	stability	0.2.0.0.0	0.2.0.0	
# ::edge	elevate-01	mod	compromise-01	0.2.0.1	0.2.0	
# ::edge	level	mod	doctrine	0.2	0	
# ::edge	say-01	ARG0	it	0.2.0.1.0	0.2.0.1.0.0	
# ::edge	say-01	ARG1	elevate-01	0.2.0.1.0	0.2.0.1	
# ::edge	treat-01	ARG0	doctrine	0.0	0	
# ::edge	treat-01	ARG1	accident	0.0	0.0.0	
(d / doctrine 
      :ARG0-of (t / treat-01 
            :ARG1 (a / accident 
                  :mod (h / history))) 
      :mod (s2 / state) 
      :mod-of (l / level 
            :ARG2-of (c / compromise-01 
                  :ARG1 (s / stability 
                        :mod-of (e / element)) 
                  :mod-of (e2 / elevate-01 
                        :ARG1-of (s3 / say-01 
                              :ARG0 (i / it))))))

# ::snt in another accident report published yesterday corrosion was also blamed for a flap failure on a british airways boeing 747 on its approach to heathrow airport in september 1988
# ::tok in another accident report published yesterday corrosion was also blamed for a flap failure on a british airways boeing 747 on its approach to heathrow airport in september 1988
# ::alignments 27-29|0.1.0.0.0.1+0.1.0.0.0.0+0.1.0.0.0 25-26|0.1.0.0.1 22-23|0.1.0.0 13-14|0.1.0 9-10|0.1 8-9|0.1.1 5-6|0.2 4-5|0 3-4|0.0 2-3|0.0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:09.306
# ::node	0	publish-01	4-5
# ::node	0.0	report	3-4
# ::node	0.0.0	accident	2-3
# ::node	0.0.1	another	1-2
# ::node	0.1	blame-01	9-10
# ::node	0.1.0	fail-01	13-14
# ::node	0.1.0.0	approach-02	22-23
# ::node	0.1.0.0.0	date-entity	27-29
# ::node	0.1.0.0.0.0	9	27-29
# ::node	0.1.0.0.0.1	1988	27-29
# ::node	0.1.0.0.1	airport	25-26
# ::node	0.1.1	also	8-9
# ::node	0.2	yesterday	5-6
# ::root	0	publish-01
# ::edge	approach-02	ARG0	date-entity	0.1.0.0	0.1.0.0.0	
# ::edge	approach-02	ARG1	airport	0.1.0.0	0.1.0.0.1	
# ::edge	blame-01	ARG1	publish-01	0.1	0	
# ::edge	blame-01	ARG2	fail-01	0.1	0.1.0	
# ::edge	blame-01	mod	also	0.1	0.1.1	
# ::edge	date-entity	month	9	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	date-entity	year	1988	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	fail-01	ARG1	approach-02	0.1.0	0.1.0.0	
# ::edge	publish-01	ARG0	report	0	0.0	
# ::edge	publish-01	time	yesterday	0	0.2	
# ::edge	report	mod	accident	0.0	0.0.0	
# ::edge	report	poss	another	0.0	0.0.1	
(p / publish-01 
      :ARG0 (r / report 
            :mod (a4 / accident) 
            :poss (a5 / another)) 
      :ARG1-of (b / blame-01 
            :ARG2 (f / fail-01 
                  :ARG1 (a2 / approach-02 
                        :ARG0 (d / date-entity 
                              :month 9 
                              :year 1988) 
                        :ARG1 (a / airport))) 
            :mod (a3 / also)) 
      :time (y / yesterday))

# ::snt mr damore who appeared on television yesterday reports that shortly after the accident mr kennedy suggested to his cousin mr joseph gargan that they report mary jo kopechne was the driver and sole occupant of the car
# ::tok mr damore who appeared on television yesterday reports that shortly after the accident mr kennedy suggested to his cousin mr joseph gargan that they report mary jo kopechne was the driver and sole occupant of the car
# ::alignments 36-37|0.2 32-33|0.1 31-32|0 30-31|0.0.0+0.0 24-25|0.0.1.1.0 23-24|0.0.1.1.0.0 18-19|0.0.1.0+0.0.1 15-16|0.0.1.1 12-13|0.0.1.1.1.2 10-11|0.0.1.1.1 9-10|0.0.1.1.1.1 7-8|0.0.1.1.1.0 6-7|0.0.1.1.1.0.0.1 5-6|0.0.1.1.1.0.0.0 3-4|0.0.1.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:09.476
# ::node	0	and	31-32
# ::node	0.0	person	30-31
# ::node	0.0.0	drive-01	30-31
# ::node	0.0.1	have-rel-role-91	18-19
# ::node	0.0.1.0	cousin	18-19
# ::node	0.0.1.1	suggest-01	15-16
# ::node	0.0.1.1.0	report	24-25
# ::node	0.0.1.1.0.0	they	23-24
# ::node	0.0.1.1.1	after	10-11
# ::node	0.0.1.1.1.0	report-01	7-8
# ::node	0.0.1.1.1.0.0	appear-01	3-4
# ::node	0.0.1.1.1.0.0.0	television	5-6
# ::node	0.0.1.1.1.0.0.1	yesterday	6-7
# ::node	0.0.1.1.1.1	short	9-10
# ::node	0.0.1.1.1.2	accident	12-13
# ::node	0.1	sole	32-33
# ::node	0.2	car	36-37
# ::root	0	and
# ::edge	after	mod	short	0.0.1.1.1	0.0.1.1.1.1	
# ::edge	after	op1	accident	0.0.1.1.1	0.0.1.1.1.2	
# ::edge	and	op1	person	0	0.0	
# ::edge	and	op2	sole	0	0.1	
# ::edge	and	op3	car	0	0.2	
# ::edge	appear-01	ARG1	report-01	0.0.1.1.1.0.0	0.0.1.1.1.0	
# ::edge	appear-01	medium	television	0.0.1.1.1.0.0	0.0.1.1.1.0.0.0	
# ::edge	appear-01	time	yesterday	0.0.1.1.1.0.0	0.0.1.1.1.0.0.1	
# ::edge	drive-01	ARG0	person	0.0.0	0.0	
# ::edge	have-rel-role-91	ARG1	person	0.0.1	0.0	
# ::edge	have-rel-role-91	ARG2	cousin	0.0.1	0.0.1.0	
# ::edge	report	ARG0	they	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	report-01	ARG1	after	0.0.1.1.1.0	0.0.1.1.1	
# ::edge	suggest-01	ARG1	report	0.0.1.1	0.0.1.1.0	
# ::edge	suggest-01	ARG4	have-rel-role-91	0.0.1.1	0.0.1	
# ::edge	suggest-01	time	after	0.0.1.1	0.0.1.1.1	
(a / and 
      :op1 (p / person 
            :ARG0-of (d / drive-01) 
            :ARG1-of (h / have-rel-role-91 
                  :ARG2 (c2 / cousin) 
                  :ARG4-of (s2 / suggest-01 
                        :ARG1 (r / report 
                              :ARG0 (t / they)) 
                        :time (a3 / after 
                              :ARG1-of (r2 / report-01 
                                    :ARG1-of (a4 / appear-01 
                                          :medium (t2 / television) 
                                          :time (y / yesterday))) 
                              :mod (s3 / short) 
                              :op1 (a2 / accident))))) 
      :op2 (s / sole) 
      :op3 (c / car))

# ::snt keeping an eye on safety has paid off for esso petroleum in the annual awards presented by health and safety watchdogs the royal society for the prevention of accidents
# ::tok keeping an eye on safety has paid off for esso petroleum in the annual awards presented by health and safety watchdogs the royal society for the prevention of accidents
# ::alignments 28-29|0.0.1.0 26-27|0.0.1 23-24|0.0.0.0.0 22-23|0.0.0.0.0.0 20-21|0.0.2 19-20|0.2 18-19|0 17-18|0.1 15-16|0.0 14-15|0.0.0.0+0.0.0 10-11|0.0.0.1.0 7-8|0.0.0.1.2 6-7|0.0.0.1 4-5|0.0.0.1.1.0 2-3|0.0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:09.913
# ::node	0	and	18-19
# ::node	0.0	present-01	15-16
# ::node	0.0.0	thing	14-15
# ::node	0.0.0.0	award-01	14-15
# ::node	0.0.0.0.0	society	23-24
# ::node	0.0.0.0.0.0	royal	22-23
# ::node	0.0.0.1	pay-01	6-7
# ::node	0.0.0.1.0	petroleum	10-11
# ::node	0.0.0.1.1	eye	2-3
# ::node	0.0.0.1.1.0	safe-41	4-5
# ::node	0.0.0.1.2	off	7-8
# ::node	0.0.1	prevent-01	26-27
# ::node	0.0.1.0	accident	28-29
# ::node	0.0.2	watchdog	20-21
# ::node	0.1	health	17-18
# ::node	0.2	safe-41	19-20
# ::root	0	and
# ::edge	and	op1	health	0	0.1	
# ::edge	and	op2	safe-41	0	0.2	
# ::edge	award-01	ARG0	society	0.0.0.0	0.0.0.0.0	
# ::edge	award-01	ARG1	thing	0.0.0.0	0.0.0	
# ::edge	eye	topic	safe-41	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	pay-01	ARG0	petroleum	0.0.0.1	0.0.0.1.0	
# ::edge	pay-01	ARG1	eye	0.0.0.1	0.0.0.1.1	
# ::edge	pay-01	ARG3	thing	0.0.0.1	0.0.0	
# ::edge	pay-01	direction	off	0.0.0.1	0.0.0.1.2	
# ::edge	present-01	ARG0	and	0.0	0	
# ::edge	present-01	ARG1	thing	0.0	0.0.0	
# ::edge	present-01	ARG2	prevent-01	0.0	0.0.1	
# ::edge	present-01	location	watchdog	0.0	0.0.2	
# ::edge	prevent-01	ARG1	accident	0.0.1	0.0.1.0	
# ::edge	society	mod	royal	0.0.0.0.0	0.0.0.0.0.0	
(a2 / and 
      :ARG0-of (p2 / present-01 
            :ARG1 (t / thing 
                  :ARG1-of (a3 / award-01 
                        :ARG0 (s / society 
                              :mod (r / royal))) 
                  :ARG3-of (p4 / pay-01 
                        :ARG0 (p3 / petroleum) 
                        :ARG1 (e / eye 
                              :topic (s3 / safe-41)) 
                        :direction (o / off))) 
            :ARG2 (p / prevent-01 
                  :ARG1 (a / accident)) 
            :location (w / watchdog)) 
      :op1 (h / health) 
      :op2 (s2 / safe-41))

# ::snt we face real threats internationally from pollution overpopulation from famine from nuclear accidents and from the collapse of an unjust world economic order which means we take more money from the poor than we lend them every year
# ::tok we face real threats internationally from pollution overpopulation from famine from nuclear accidents and from the collapse of an unjust world economic order which means we take more money from the poor than we lend them every year
# ::alignments 37-38|0.1.0.0.1 36-37|0.0.2.1 34-35|0.1.0.0 33-34|0.1.0.0.0 31-32|0.0.1.0 28-29|0.1 25-26|0.1.0 24-25|0 21-22|0.0.0.2.0.0 20-21|0.0.2.0 19-20|0.0.0.1.0+0.0.0.1 16-17|0.0.2 13-14|0.0 12-13|0.0.0.0 11-12|0.0.1.1 6-7|0.0.1 4-5|0.0.0.4 3-4|0.0.0 2-3|0.0.0.3 1-2|0.0.0.2 0-1|0.0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:10.789
# ::node	0	mean-01	24-25
# ::node	0.0	and	13-14
# ::node	0.0.0	threaten-01	3-4
# ::node	0.0.0.0	accident	12-13
# ::node	0.0.0.1	just	19-20
# ::node	0.0.0.1.0	-	19-20
# ::node	0.0.0.2	face-01	1-2
# ::node	0.0.0.2.0	we	0-1
# ::node	0.0.0.2.0.0	economy	21-22
# ::node	0.0.0.3	real	2-3
# ::node	0.0.0.4	international	4-5
# ::node	0.0.1	pollute-01	6-7
# ::node	0.0.1.0	poor	31-32
# ::node	0.0.1.1	nucleus	11-12
# ::node	0.0.2	collapse-01	16-17
# ::node	0.0.2.0	world	20-21
# ::node	0.0.2.1	every	36-37
# ::node	0.1	money	28-29
# ::node	0.1.0	we	25-26
# ::node	0.1.0.0	lend-01	34-35
# ::node	0.1.0.0.0	we	33-34
# ::node	0.1.0.0.1	year	37-38
# ::root	0	mean-01
# ::edge	and	op1	pollute-01	0.0	0.0.1	
# ::edge	and	op2	collapse-01	0.0	0.0.2	
# ::edge	collapse-01	ARG0	world	0.0.2	0.0.2.0	
# ::edge	collapse-01	ARG1	every	0.0.2	0.0.2.1	
# ::edge	economy	poss	we	0.0.0.2.0.0	0.0.0.2.0	
# ::edge	face-01	ARG0	we	0.0.0.2	0.0.0.2.0	
# ::edge	face-01	ARG1	threaten-01	0.0.0.2	0.0.0	
# ::edge	just	polarity	-	0.0.0.1	0.0.0.1.0	
# ::edge	lend-01	ARG0	we	0.1.0.0	0.1.0.0.0	
# ::edge	lend-01	ARG1	we	0.1.0.0	0.1.0	
# ::edge	lend-01	time	year	0.1.0.0	0.1.0.0.1	
# ::edge	mean-01	ARG0	and	0	0.0	
# ::edge	mean-01	ARG1	money	0	0.1	
# ::edge	money	poss	we	0.1	0.1.0	
# ::edge	pollute-01	ARG1	poor	0.0.1	0.0.1.0	
# ::edge	pollute-01	ARG2	nucleus	0.0.1	0.0.1.1	
# ::edge	threaten-01	ARG0	accident	0.0.0	0.0.0.0	
# ::edge	threaten-01	ARG1	just	0.0.0	0.0.0.1	
# ::edge	threaten-01	location	and	0.0.0	0.0	
# ::edge	threaten-01	mod	real	0.0.0	0.0.0.3	
# ::edge	threaten-01	time	international	0.0.0	0.0.0.4	
(m2 / mean-01 
      :ARG0 (a / and 
            :location-of (t / threaten-01 
                  :ARG0 (a2 / accident) 
                  :ARG1 (j / just 
                        :polarity -) 
                  :ARG1-of (f / face-01 
                        :ARG0 (w4 / we 
                              :poss-of (e2 / economy))) 
                  :mod (r / real) 
                  :time (i / international)) 
            :op1 (p2 / pollute-01 
                  :ARG1 (p / poor) 
                  :ARG2 (n / nucleus)) 
            :op2 (c / collapse-01 
                  :ARG0 (w3 / world) 
                  :ARG1 (e / every))) 
      :ARG1 (m / money 
            :poss (w2 / we 
                  :ARG1-of (l / lend-01 
                        :ARG0 (w / we) 
                        :time (y / year)))))

# ::snt mr windsor paralysed below the waist after an accident when he fell out of a kitchen window is intent on rowing across the english channel despite objections from the coastguards
# ::tok mr windsor paralysed below the waist after an accident when he fell out of a kitchen window is intent on rowing across the english channel despite objections from the coastguards
# ::alignments 29-30|0.1 26-27|0.1.0 23-25|0.0.1.0.0.0.1.0+0.0.1.0.0.0.1.1+0.0.1.0.0.0.1+0.0.1.0.0.0 21-22|0.0.1.0.0 18-19|0.0.1.0 16-17|0 11-12|0.0 10-11|0.0.0 8-9|0.0.1 6-7|0.0.1.0.0.0.0.2 5-6|0.0.1.0.0.0.0.0 3-4|0.0.1.0.0.0.0.1 2-3|0.0.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:11.044
# ::node	0	window	16-17
# ::node	0.0	fall-01	11-12
# ::node	0.0.0	he	10-11
# ::node	0.0.1	accident	8-9
# ::node	0.0.1.0	intend-01	18-19
# ::node	0.0.1.0.0	across	21-22
# ::node	0.0.1.0.0.0	country	23-25
# ::node	0.0.1.0.0.0.0	paralyze-01	2-3
# ::node	0.0.1.0.0.0.0.0	waist-deep	5-6
# ::node	0.0.1.0.0.0.0.1	below	3-4
# ::node	0.0.1.0.0.0.0.2	after	6-7
# ::node	0.0.1.0.0.0.1	name	23-25
# ::node	0.0.1.0.0.0.1.0	"channel"	23-25
# ::node	0.0.1.0.0.0.1.1	"english"	23-25
# ::node	0.1	coastguard	29-30
# ::node	0.1.0	objection	26-27
# ::root	0	window
# ::edge	across	op1	country	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	country	name	name	0.0.1.0.0.0	0.0.1.0.0.0.1	
# ::edge	fall-01	ARG0	he	0.0	0.0.0	
# ::edge	fall-01	accompanier	window	0.0	0	
# ::edge	fall-01	time	accident	0.0	0.0.1	
# ::edge	intend-01	ARG0	accident	0.0.1.0	0.0.1	
# ::edge	intend-01	time	across	0.0.1.0	0.0.1.0.0	
# ::edge	name	op1	"channel"	0.0.1.0.0.0.1	0.0.1.0.0.0.1.0	
# ::edge	name	op2	"english"	0.0.1.0.0.0.1	0.0.1.0.0.0.1.1	
# ::edge	objection	location	coastguard	0.1.0	0.1	
# ::edge	paralyze-01	ARG0	country	0.0.1.0.0.0.0	0.0.1.0.0.0	
# ::edge	paralyze-01	ARG1	waist-deep	0.0.1.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	paralyze-01	ARG4	below	0.0.1.0.0.0.0	0.0.1.0.0.0.0.1	
# ::edge	paralyze-01	time	after	0.0.1.0.0.0.0	0.0.1.0.0.0.0.2	
# ::edge	window	poss	coastguard	0	0.1	
(w / window 
      :accompanier-of (f / fall-01 
            :ARG0 (h / he) 
            :time (a2 / accident 
                  :ARG0-of (i / intend-01 
                        :time (a / across 
                              :op1 (c2 / country 
                                    :ARG0-of (p / paralyze-01 
                                          :ARG1 (w2 / waist-deep) 
                                          :ARG4 (b / below) 
                                          :time (a3 / after)) 
                                    :name (n / name 
                                          :op1 "channel" 
                                          :op2 "english")))))) 
      :poss (c / coastguard 
            :location-of (o / objection)))

# ::snt at the accident site i was appalled to discover that the aa had been called in to render first aid assistance
# ::tok at the accident site i was appalled to discover that the aa had been called in to render first aid assistance
# ::alignments 20-21|0.0 19-20|0.0.0 17-18|0 8-9|0.1 6-7|0.1.0 4-5|0.1.0.0 3-4|0.1.0.1 2-3|0.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:11.182
# ::node	0	render-01	17-18
# ::node	0.0	assist-01	20-21
# ::node	0.0.0	aid-01	19-20
# ::node	0.1	discover-01	8-9
# ::node	0.1.0	appall-01	6-7
# ::node	0.1.0.0	i	4-5
# ::node	0.1.0.1	site	3-4
# ::node	0.1.0.1.0	accident	2-3
# ::root	0	render-01
# ::edge	appall-01	ARG1	i	0.1.0	0.1.0.0	
# ::edge	appall-01	ARG2	discover-01	0.1.0	0.1	
# ::edge	appall-01	location	site	0.1.0	0.1.0.1	
# ::edge	assist-01	ARG1	aid-01	0.0	0.0.0	
# ::edge	discover-01	ARG1	render-01	0.1	0	
# ::edge	render-01	ARG1	assist-01	0	0.0	
# ::edge	site	mod	accident	0.1.0.1	0.1.0.1.0	
(r / render-01 
      :ARG1 (a / assist-01 
            :ARG1 (a2 / aid-01)) 
      :ARG1-of (d / discover-01 
            :ARG2-of (a3 / appall-01 
                  :ARG1 (i / i) 
                  :location (s / site 
                        :mod (a4 / accident)))))

# ::snt how to cope with common problems such as fleas and ear mites as well as what to do in case of accidents sadly four out of ten cats are killed in road accidents
# ::tok how to cope with common problems such as fleas and ear mites as well as what to do in case of accidents sadly four out of ten cats are killed in road accidents
# ::alignments 32-33|0.1.1.2.0 31-32|0.1.1.2.0.0 29-30|0.1.1.2 27-28|0.1.1.2.1 23-24|0.1.1.2.1.0 21-22|0.1.1.2.2.0 19-20|0.1.1.2.2 13-14|0.0 10-11|0.1.1.1 9-10|0.1.1 6-7|0.1.1.0 5-6|0.1 4-5|0.1.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:11.287
# ::node	0	cope-01	2-3
# ::node	0.0	well	13-14
# ::node	0.1	problem	5-6
# ::node	0.1.0	common	4-5
# ::node	0.1.1	and	9-10
# ::node	0.1.1.0	such	6-7
# ::node	0.1.1.1	ear	10-11
# ::node	0.1.1.2	kill-01	29-30
# ::node	0.1.1.2.0	accident	32-33
# ::node	0.1.1.2.0.0	road	31-32
# ::node	0.1.1.2.1	cat	27-28
# ::node	0.1.1.2.1.0	4	23-24
# ::node	0.1.1.2.2	case	19-20
# ::node	0.1.1.2.2.0	accident	21-22
# ::root	0	cope-01
# ::edge	accident	location	road	0.1.1.2.0	0.1.1.2.0.0	
# ::edge	and	op1	such	0.1.1	0.1.1.0	
# ::edge	and	op2	ear	0.1.1	0.1.1.1	
# ::edge	and	op3	kill-01	0.1.1	0.1.1.2	
# ::edge	case	topic	accident	0.1.1.2.2	0.1.1.2.2.0	
# ::edge	case	topic	kill-01	0.1.1.2.2	0.1.1.2	
# ::edge	cat	quant	4	0.1.1.2.1	0.1.1.2.1.0	
# ::edge	cope-01	ARG0	well	0	0.0	
# ::edge	cope-01	ARG1	problem	0	0.1	
# ::edge	kill-01	ARG0	accident	0.1.1.2	0.1.1.2.0	
# ::edge	kill-01	ARG1	cat	0.1.1.2	0.1.1.2.1	
# ::edge	problem	mod	common	0.1	0.1.0	
# ::edge	problem	topic	and	0.1	0.1.1	
(c4 / cope-01 
      :ARG0 (w / well) 
      :ARG1 (p / problem 
            :mod (c3 / common) 
            :topic (a3 / and 
                  :op1 (s / such) 
                  :op2 (e / ear) 
                  :op3 (k / kill-01 
                        :ARG0 (a / accident 
                              :location (r / road)) 
                        :ARG1 (c / cat 
                              :quant 4) 
                        :topic-of (c2 / case 
                              :topic (a2 / accident))))))

# ::snt she stipulated that it must never have been involved in an accident
# ::tok she stipulated that it must never have been involved in an accident
# ::alignments 11-12|0.0.0.1 8-9|0.0.0 3-4|0.0.0.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:11.301
# ::node	0	stipulate-01	1-2
# ::node	0.0	she	0-1
# ::node	0.0.0	involve-01	8-9
# ::node	0.0.0.0	it	3-4
# ::node	0.0.0.1	accident	11-12
# ::root	0	stipulate-01
# ::edge	involve-01	ARG0	she	0.0.0	0.0	
# ::edge	involve-01	ARG1	it	0.0.0	0.0.0.0	
# ::edge	involve-01	ARG2	accident	0.0.0	0.0.0.1	
# ::edge	stipulate-01	ARG0	she	0	0.0	
(s / stipulate-01 
      :ARG0 (s2 / she 
            :ARG0-of (i / involve-01 
                  :ARG1 (i2 / it) 
                  :ARG2 (a / accident))))

# ::snt was it an accident was i pushed or was i just plain stupid
# ::tok was it an accident was i pushed or was i just plain stupid
# ::alignments 12-13|0.3.0 11-12|0.3.0.0 10-11|0.3.0.0.0 9-10|0.3.0.0.1 7-8|0.3 6-7|0 5-6|0.2 3-4|0.1 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:11.404
# ::node	0	push-01	6-7
# ::node	0.0	it	1-2
# ::node	0.1	accident	3-4
# ::node	0.2	i	5-6
# ::node	0.3	or	7-8
# ::node	0.3.0	stupid	12-13
# ::node	0.3.0.0	plain	11-12
# ::node	0.3.0.0.0	just	10-11
# ::node	0.3.0.0.1	i	9-10
# ::root	0	push-01
# ::edge	or	op1	push-01	0.3	0	
# ::edge	or	op2	stupid	0.3	0.3.0	
# ::edge	plain	degree	just	0.3.0.0	0.3.0.0.0	
# ::edge	plain	mod	i	0.3.0.0	0.3.0.0.1	
# ::edge	push-01	ARG0	it	0	0.0	
# ::edge	push-01	ARG1	accident	0	0.1	
# ::edge	push-01	mod	i	0	0.2	
# ::edge	stupid	domain	plain	0.3.0	0.3.0.0	
(p2 / push-01 
      :ARG0 (i3 / it) 
      :ARG1 (a / accident) 
      :mod (i2 / i) 
      :op-of (o / or 
            :op1 (s / stupid 
                  :domain (p / plain 
                        :degree (j / just) 
                        :mod (i / i)))))

# ::snt also on the a thirty four at great rollright near chipping norton theres been a serious accident there and there are tailbacks beginning to grow in both directions, there have been other numerous minor accidents police tell me throughout oxfordshire
# ::tok also on the a thirty four at great rollright near chipping norton theres been a serious accident there and there are tailbacks beginning to grow in both directions , there have been other numerous minor accidents police tell me throughout oxfordshire
# ::alignments 39-40|0.0.2 37-38|0.0 36-37|0.0.0 35-36|0.0.1 34-35|0.0.1.0 33-34|0.0.1.2 32-33|0.0.1.1 27-28|0.1.1.1 26-27|0.1.1.1.0 24-25|0.1.1 22-23|0.1 18-19|0 16-17|0.1.1.0 15-16|0.1.1.0.0 9-10|0.1.0 7-8|0.1.1.3 5-6|0.1.1.2 0-1|0.1.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:11.668
# ::node	0	and	18-19
# ::node	0.0	tell-01	37-38
# ::node	0.0.0	police	36-37
# ::node	0.0.1	accident	35-36
# ::node	0.0.1.0	minor	34-35
# ::node	0.0.1.1	other	32-33
# ::node	0.0.1.2	numerous	33-34
# ::node	0.0.2	throughout	39-40
# ::node	0.1	begin-01	22-23
# ::node	0.1.0	near	9-10
# ::node	0.1.1	grow-01	24-25
# ::node	0.1.1.0	accident	16-17
# ::node	0.1.1.0.0	serious	15-16
# ::node	0.1.1.1	direction	27-28
# ::node	0.1.1.1.0	both	26-27
# ::node	0.1.1.2	4	5-6
# ::node	0.1.1.3	great	7-8
# ::node	0.1.2	also	0-1
# ::root	0	and
# ::edge	4	op1	grow-01	0.1.1.2	0.1.1	
# ::edge	accident	mod	minor	0.0.1	0.0.1.0	
# ::edge	accident	mod	other	0.0.1	0.0.1.1	
# ::edge	accident	mod	serious	0.1.1.0	0.1.1.0.0	
# ::edge	accident	quant	numerous	0.0.1	0.0.1.2	
# ::edge	also	op1	begin-01	0.1.2	0.1	
# ::edge	and	op1	begin-01	0	0.1	
# ::edge	begin-01	ARG0	near	0.1	0.1.0	
# ::edge	begin-01	ARG1	grow-01	0.1	0.1.1	
# ::edge	direction	mod	both	0.1.1.1	0.1.1.1.0	
# ::edge	great	op1	grow-01	0.1.1.3	0.1.1	
# ::edge	grow-01	ARG0	accident	0.1.1	0.1.1.0	
# ::edge	grow-01	ARG1	direction	0.1.1	0.1.1.1	
# ::edge	tell-01	ARG0	police	0.0	0.0.0	
# ::edge	tell-01	ARG1	accident	0.0	0.0.1	
# ::edge	tell-01	ARG2	and	0.0	0	
# ::edge	tell-01	duration	throughout	0.0	0.0.2	
(a2 / and 
      :ARG2-of (t2 / tell-01 
            :ARG0 (p / police) 
            :ARG1 (a / accident 
                  :mod (m / minor) 
                  :mod (o / other) 
                  :quant (n / numerous)) 
            :duration (t / throughout)) 
      :op1 (b2 / begin-01 
            :ARG0 (n2 / near) 
            :ARG1 (g / grow-01 
                  :ARG0 (a3 / accident 
                        :mod (s / serious)) 
                  :ARG1 (d / direction 
                        :mod (b / both)) 
                  :op-of 4 
                  :op-of (g2 / great)) 
            :op-of (a4 / also)))

# ::snt it was expected that identifying and resurfacing slippery roads would reduce skidding accidents by 1800 a year
# ::tok it was expected that identifying and resurfacing slippery roads would reduce skidding accidents by 1800 a year
# ::alignments 16-17|0.0.3 14-15|0.0.2.0+0.0.2 12-13|0.0.0 10-11|0.0 8-9|0.1.0 6-7|0.1 5-6|0 2-3|0.0.1 0-1|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:11.757
# ::node	0	and	5-6
# ::node	0.0	reduce-01	10-11
# ::node	0.0.0	accident	12-13
# ::node	0.0.1	expect-01	2-3
# ::node	0.0.1.0	it	0-1
# ::node	0.0.2	date-entity	14-15
# ::node	0.0.2.0	1800	14-15
# ::node	0.0.3	year	16-17
# ::node	0.1	resurface-02	6-7
# ::node	0.1.0	road	8-9
# ::root	0	and
# ::edge	and	op1	resurface-02	0	0.1	
# ::edge	date-entity	year	1800	0.0.2	0.0.2.0	
# ::edge	expect-01	ARG0	it	0.0.1	0.0.1.0	
# ::edge	expect-01	ARG1	reduce-01	0.0.1	0.0	
# ::edge	reduce-01	ARG0	and	0.0	0	
# ::edge	reduce-01	ARG1	accident	0.0	0.0.0	
# ::edge	reduce-01	time	date-entity	0.0	0.0.2	
# ::edge	reduce-01	time	year	0.0	0.0.3	
# ::edge	resurface-02	ARG1	road	0.1	0.1.0	
(a2 / and 
      :ARG0-of (r / reduce-01 
            :ARG1 (a / accident) 
            :ARG1-of (e / expect-01 
                  :ARG0 (i / it)) 
            :time (d / date-entity 
                  :year 1800) 
            :time (y / year)) 
      :op1 (r3 / resurface-02 
            :ARG1 (r2 / road)))

# ::snt all his dealings had been with himself and that larger self of family which had been thrown together by marriage or accident he had never been able to go out from his shell of self
# ::tok all his dealings had been with himself and that larger self of family which had been thrown together by marriage or accident he had never been able to go out from his shell of self
# ::alignments 34-35|0.2.0 32-33|0.2 26-27|0 22-23|0.0 21-22|0.1.1.0 20-21|0.1.1 19-20|0.1 17-18|0.1.0.2 16-17|0.1.0 12-13|0.1.0.1 10-11|0.1.0.0 9-10|0.1.0.0.0 7-8|0.1.0.0.1 2-3|0.1.0.0.1.0 0-1|0.1.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:12.055
# ::node	0	possible	26-27
# ::node	0.0	he	22-23
# ::node	0.1	marry-01	19-20
# ::node	0.1.0	throw-01	16-17
# ::node	0.1.0.0	self	10-11
# ::node	0.1.0.0.0	large	9-10
# ::node	0.1.0.0.1	and	7-8
# ::node	0.1.0.0.1.0	deal-01	2-3
# ::node	0.1.0.0.1.0.0	all	0-1
# ::node	0.1.0.1	family	12-13
# ::node	0.1.0.2	together	17-18
# ::node	0.1.1	or	20-21
# ::node	0.1.1.0	accident	21-22
# ::node	0.2	shell	32-33
# ::node	0.2.0	self	34-35
# ::root	0	possible
# ::edge	and	op1	deal-01	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	and	op2	self	0.1.0.0.1	0.1.0.0	
# ::edge	deal-01	quant	all	0.1.0.0.1.0	0.1.0.0.1.0.0	
# ::edge	marry-01	mod	possible	0.1	0	
# ::edge	or	op1	marry-01	0.1.1	0.1	
# ::edge	or	op2	accident	0.1.1	0.1.1.0	
# ::edge	possible	domain	he	0	0.0	
# ::edge	self	mod	large	0.1.0.0	0.1.0.0.0	
# ::edge	shell	mod	possible	0.2	0	
# ::edge	shell	mod	self	0.2	0.2.0	
# ::edge	throw-01	ARG0	self	0.1.0	0.1.0.0	
# ::edge	throw-01	ARG1	family	0.1.0	0.1.0.1	
# ::edge	throw-01	ARG2	marry-01	0.1.0	0.1	
# ::edge	throw-01	mod	together	0.1.0	0.1.0.2	
(p / possible 
      :domain (h / he) 
      :mod-of (m / marry-01 
            :ARG2-of (t2 / throw-01 
                  :ARG0 (s3 / self 
                        :mod (l / large) 
                        :op-of (a2 / and 
                              :op1 (d / deal-01 
                                    :quant (a3 / all)))) 
                  :ARG1 (f / family) 
                  :mod (t / together)) 
            :op-of (o / or 
                  :op1 (a / accident))) 
      :mod-of (s2 / shell 
            :mod (s / self)))

# ::snt nick had been brought back to him surely by no accident
# ::tok nick had been brought back to him surely by no accident
# ::alignments 10-11|0.0.0 9-10|0.0.0.0 7-8|0 4-5|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:12.065
# ::node	0	sure	7-8
# ::node	0.0	back	4-5
# ::node	0.0.0	accident	10-11
# ::node	0.0.0.0	-	9-10
# ::root	0	sure
(s / sure 
      :op-of (b / back 
            :manner-of (a / accident 
                  :polarity (- / -))))

# ::snt in la femme au temps de la revolution stock catherine marandfouquet tells such a story of misogyny that there can be no doubt that it was no accident that 1789s most important social achievement was called the declaration of the rights of man
# ::tok in la femme au temps de la revolution stock catherine marandfouquet tells such a story of misogyny that there can be no doubt that it was no accident that 1789s most important social achievement was called the declaration of the rights of man
# ::alignments 42-43|0.2.0.2.0.0.0.0 40-41|0.2.0.2.0.0.0 37-38|0.2.0.2.0.0 33-34|0.2.0.2.0 32-33|0.2.0.2.0.1 31-32|0.2.0.2.0.2 30-31|0.2.0.2.0.2.0 27-28|0.1.0 26-27|0.1 24-25|0.1.0.0 22-23|0 21-22|0.3 19-20|0.2 14-15|0.2.0.1 12-13|0.2.0.1.0 11-12|0.2.0 8-9|0.2.0.0 7-8|0.2.0.0.0 5-7|0.2.0.2.2.0+0.2.0.2.2.1+0.2.0.2.2+0.2.0.2 4-5|0.2.0.2.1 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:13.100
# ::node	0	doubt-01	22-23
# ::node	0.0	"la"	1-2
# ::node	0.1	-	26-27
# ::node	0.1.0	accident	27-28
# ::node	0.1.0.0	it	24-25
# ::node	0.2	possible	19-20
# ::node	0.2.0	tell-01	11-12
# ::node	0.2.0.0	stock	8-9
# ::node	0.2.0.0.0	revolution	7-8
# ::node	0.2.0.1	story	14-15
# ::node	0.2.0.1.0	such	12-13
# ::node	0.2.0.2	person	5-7
# ::node	0.2.0.2.0	achieve-01	33-34
# ::node	0.2.0.2.0.0	declare-02	37-38
# ::node	0.2.0.2.0.0.0	right	40-41
# ::node	0.2.0.2.0.0.0.0	man	42-43
# ::node	0.2.0.2.0.1	society	32-33
# ::node	0.2.0.2.0.2	important	31-32
# ::node	0.2.0.2.0.2.0	most	30-31
# ::node	0.2.0.2.1	temperature	4-5
# ::node	0.2.0.2.2	name	5-7
# ::node	0.2.0.2.2.0	"la"	5-7
# ::node	0.2.0.2.2.1	"de"	5-7
# ::node	0.3	-	21-22
# ::root	0	doubt-01
# ::edge	accident	domain	it	0.1.0	0.1.0.0	
# ::edge	accident	polarity	-	0.1.0	0.1	
# ::edge	achieve-01	ARG0	person	0.2.0.2.0	0.2.0.2	
# ::edge	achieve-01	ARG1	society	0.2.0.2.0	0.2.0.2.0.1	
# ::edge	achieve-01	mod	important	0.2.0.2.0	0.2.0.2.0.2	
# ::edge	declare-02	ARG0	achieve-01	0.2.0.2.0.0	0.2.0.2.0	
# ::edge	declare-02	ARG1	right	0.2.0.2.0.0	0.2.0.2.0.0.0	
# ::edge	doubt-01	ARG0	"la"	0	0.0	
# ::edge	doubt-01	ARG1	-	0	0.1	
# ::edge	doubt-01	ARG2	possible	0	0.2	
# ::edge	doubt-01	polarity	-	0	0.3	
# ::edge	important	degree	most	0.2.0.2.0.2	0.2.0.2.0.2.0	
# ::edge	name	op1	"la"	0.2.0.2.2	0.2.0.2.2.0	
# ::edge	name	op2	"de"	0.2.0.2.2	0.2.0.2.2.1	
# ::edge	person	name	name	0.2.0.2	0.2.0.2.2	
# ::edge	right	beneficiary	man	0.2.0.2.0.0.0	0.2.0.2.0.0.0.0	
# ::edge	stock	mod	revolution	0.2.0.0	0.2.0.0.0	
# ::edge	story	mod	such	0.2.0.1	0.2.0.1.0	
# ::edge	tell-01	ARG0	stock	0.2.0	0.2.0.0	
# ::edge	tell-01	ARG1	story	0.2.0	0.2.0.1	
# ::edge	tell-01	ARG2	person	0.2.0	0.2.0.2	
# ::edge	tell-01	purpose	possible	0.2.0	0.2	
# ::edge	temperature	mod	person	0.2.0.2.1	0.2.0.2	
(d2 / doubt-01 
      :ARG0 "la" 
      :ARG1 (- / - 
            :polarity-of (a2 / accident 
                  :domain (i2 / it))) 
      :ARG2 (p / possible 
            :purpose-of (t / tell-01 
                  :ARG0 (s4 / stock 
                        :mod (r2 / revolution)) 
                  :ARG1 (s2 / story 
                        :mod (s3 / such)) 
                  :ARG2 (p2 / person 
                        :ARG0-of (a / achieve-01 
                              :ARG0-of (d / declare-02 
                                    :ARG1 (r / right 
                                          :beneficiary (m / man))) 
                              :ARG1 (s / society) 
                              :mod (i / important 
                                    :degree (m2 / most))) 
                        :mod-of (t2 / temperature) 
                        :name (n / name 
                              :op1 "la" 
                              :op2 "de")))) 
      :polarity (-2 / -))

# ::snt justice popplewell awarded the damages against malcolm and susan wilson at whose flat the accident took place
# ::tok justice popplewell awarded the damages against malcolm and susan wilson at whose flat the accident took place
# ::alignments 16-17|0.1.1.0 14-15|0.2 12-13|0.1.1 7-8|0.1.0 4-5|0.1 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:13.147
# ::node	0	award-01	2-3
# ::node	0.0	justice	0-1
# ::node	0.1	damage-01	4-5
# ::node	0.1.0	and	7-8
# ::node	0.1.1	flat	12-13
# ::node	0.1.1.0	place	16-17
# ::node	0.2	accident	14-15
# ::root	0	award-01
# ::edge	award-01	ARG0	justice	0	0.0	
# ::edge	award-01	ARG1	damage-01	0	0.1	
# ::edge	award-01	ARG3	accident	0	0.2	
# ::edge	damage-01	ARG1	and	0.1	0.1.0	
# ::edge	damage-01	location	flat	0.1	0.1.1	
# ::edge	place	medium	flat	0.1.1.0	0.1.1	
(a3 / award-01 
      :ARG0 (j / justice) 
      :ARG1 (d / damage-01 
            :ARG1 (a2 / and) 
            :location (f / flat 
                  :medium-of (p / place))) 
      :ARG3 (a / accident))

# ::snt can i have more than one personal accident policy
# ::tok can i have more than one personal accident policy
# ::alignments 8-9|0.0.1 7-8|0.0 6-7|0.0.0 1-2|0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:13.158
# ::node	0	possible	0-1
# ::node	0.0	accident	7-8
# ::node	0.0.0	personal	6-7
# ::node	0.0.1	policy	8-9
# ::node	0.1	i	1-2
# ::root	0	possible
# ::edge	accident	mod	personal	0.0	0.0.0	
# ::edge	policy	mod	accident	0.0.1	0.0	
# ::edge	possible	domain	accident	0	0.0	
# ::edge	possible	op1	i	0	0.1	
(p3 / possible 
      :domain (a / accident 
            :mod (p2 / personal) 
            :mod-of (p / policy)) 
      :op1 (i / i))

# ::snt includes cancellation due to accident or illness to members of the party close relatives or business colleagues redundancy jury service cancelled leave orders for hm forces and pregnancy but not if delivery is due within 75 days of departure  section b 1
# ::tok includes cancellation due to accident or illness to members of the party close relatives or business colleagues redundancy jury service cancelled leave orders for hm forces and pregnancy but not if delivery is due within 75 days of departure section b 1
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:13.162
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt surgery in the united states to correct deformities in unborn babies may solve the problems of scarring in accident victims because it has been discovered that when the babies are born they have no surgical scars
# ::tok surgery in the united states to correct deformities in unborn babies may solve the problems of scarring in accident victims because it has been discovered that when the babies are born they have no surgical scars
# ::alignments 34-35|0.0.2.4 33-34|0.0.2.5 31-32|0.0.2.2.0.0.0 30-31|0.0.2.2.0.0 28-29|0.0.2.2.0.0.1 24-25|0.0 21-22|0.0.1 20-21|0 19-20|0.0.0 18-19|0.0.0.0 14-15|0.0.2.1 12-13|0.0.2 11-12|0.0.2.3.0+0.0.2.3 10-11|0.0.2.2.1 7-8|0.0.2.2 6-7|0.0.2.2.2 3-5|0.0.2.2.0.1.0+0.0.2.2.0.1.1+0.0.2.2.0.1+0.0.2.2.0 0-1|0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:14.062
# ::node	0	cause-01	20-21
# ::node	0.0	discover-01	24-25
# ::node	0.0.0	victim	19-20
# ::node	0.0.0.0	accident	18-19
# ::node	0.0.1	it	21-22
# ::node	0.0.2	solve-01	12-13
# ::node	0.0.2.0	surgery	0-1
# ::node	0.0.2.1	problem	14-15
# ::node	0.0.2.2	deform-01	7-8
# ::node	0.0.2.2.0	country	3-5
# ::node	0.0.2.2.0.0	bear-02	30-31
# ::node	0.0.2.2.0.0.0	they	31-32
# ::node	0.0.2.2.0.0.1	baby	28-29
# ::node	0.0.2.2.0.1	name	3-5
# ::node	0.0.2.2.0.1.0	"states"	3-5
# ::node	0.0.2.2.0.1.1	"united"	3-5
# ::node	0.0.2.2.1	baby	10-11
# ::node	0.0.2.2.2	correct	6-7
# ::node	0.0.2.3	date-entity	11-12
# ::node	0.0.2.3.0	5	11-12
# ::node	0.0.2.4	surgery	34-35
# ::node	0.0.2.5	-	33-34
# ::root	0	cause-01
# ::edge	-	op1	solve-01	0.0.2.5	0.0.2	
# ::edge	bear-02	ARG0	they	0.0.2.2.0.0	0.0.2.2.0.0.0	
# ::edge	bear-02	ARG1	baby	0.0.2.2.0.0	0.0.2.2.0.0.1	
# ::edge	bear-02	location	country	0.0.2.2.0.0	0.0.2.2.0	
# ::edge	cause-01	ARG0	discover-01	0	0.0	
# ::edge	country	name	name	0.0.2.2.0	0.0.2.2.0.1	
# ::edge	date-entity	domain	solve-01	0.0.2.3	0.0.2	
# ::edge	date-entity	month	5	0.0.2.3	0.0.2.3.0	
# ::edge	deform-01	ARG0	country	0.0.2.2	0.0.2.2.0	
# ::edge	deform-01	ARG1	baby	0.0.2.2	0.0.2.2.1	
# ::edge	deform-01	mod	correct	0.0.2.2	0.0.2.2.2	
# ::edge	discover-01	ARG0	victim	0.0	0.0.0	
# ::edge	discover-01	ARG1	it	0.0	0.0.1	
# ::edge	name	op1	"states"	0.0.2.2.0.1	0.0.2.2.0.1.0	
# ::edge	name	op2	"united"	0.0.2.2.0.1	0.0.2.2.0.1.1	
# ::edge	solve-01	ARG0	surgery	0.0.2	0.0.2.0	
# ::edge	solve-01	ARG1	problem	0.0.2	0.0.2.1	
# ::edge	solve-01	ARG2	deform-01	0.0.2	0.0.2.2	
# ::edge	solve-01	condition	discover-01	0.0.2	0.0	
# ::edge	surgery	op1	solve-01	0.0.2.4	0.0.2	
# ::edge	victim	mod	accident	0.0.0	0.0.0.0	
(c / cause-01 
      :ARG0 (d / discover-01 
            :ARG0 (v / victim 
                  :mod (a / accident)) 
            :ARG1 (i / it) 
            :condition-of (s2 / solve-01 
                  :ARG0 (s3 / surgery) 
                  :ARG1 (p / problem) 
                  :ARG2 (d3 / deform-01 
                        :ARG0 (c3 / country 
                              :location-of (b / bear-02 
                                    :ARG0 (t / they) 
                                    :ARG1 (b2 / baby)) 
                              :name (n / name 
                                    :op1 "states" 
                                    :op2 "united")) 
                        :ARG1 (b3 / baby) 
                        :mod (c2 / correct)) 
                  :domain-of (d2 / date-entity 
                        :month 5) 
                  :op-of (s / surgery) 
                  :op-of (- / -))))

# ::snt   alice galvin 50 a nurse from alwoodley leeds spent two months in hospital as a result of the accident at thormanby near thirsk north yorkshire
# ::tok alice galvin 50 a nurse from alwoodley leeds spent two months in hospital as a result of the accident at thormanby near thirsk north yorkshire
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:14.063
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt i rather think she made the whole thing up because she dropped the bucket by accident and was afraid shed get into trouble
# ::tok i rather think she made the whole thing up because she dropped the bucket by accident and was afraid shed get into trouble
# ::alignments 22-23|0.0.0.0.0 19-20|0 16-17|0.0 15-16|0.0.0.1.0.3 13-14|0.0.0.1.0.1 11-12|0.0.0.1.0 10-11|0.0.0.1.0.0 9-10|0.0.0.1 7-8|0.0.1 6-7|0.0.1.0 3-4|0.0.0.1.0.2 2-3|0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:14.704
# ::node	0	shed-01	19-20
# ::node	0.0	and	16-17
# ::node	0.0.0	think-01	2-3
# ::node	0.0.0.0	i	0-1
# ::node	0.0.0.0.0	trouble-01	22-23
# ::node	0.0.0.1	cause-01	9-10
# ::node	0.0.0.1.0	drop-01	11-12
# ::node	0.0.0.1.0.0	she	10-11
# ::node	0.0.0.1.0.1	bucket	13-14
# ::node	0.0.0.1.0.2	she	3-4
# ::node	0.0.0.1.0.3	accident	15-16
# ::node	0.0.1	thing	7-8
# ::node	0.0.1.0	whole	6-7
# ::root	0	shed-01
(s / shed-01 
      :op-of (a / and 
            :ARG1-of (t3 / think-01 
                  :ARG0 (i / i 
                        :ARG1-of (t / trouble-01)) 
                  :ARG1-of (c / cause-01 
                        :ARG0 (d / drop-01 
                              :ARG0 (s2 / she) 
                              :ARG1 (b / bucket) 
                              :ARG2 (s3 / she) 
                              :manner (a2 / accident)))) 
            :op1 (t2 / thing 
                  :quant (w / whole))))

# ::snt it was an accident but that doesnt excuse it
# ::tok it was an accident but that doesnt excuse it
# ::alignments 8-9|0.1.0 7-8|0.1 4-5|0 3-4|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:14.717
# ::node	0	contrast-01	4-5
# ::node	0.0	accident	3-4
# ::node	0.0.0	it	0-1
# ::node	0.1	excuse-01	7-8
# ::node	0.1.0	it	8-9
# ::root	0	contrast-01
# ::edge	accident	domain	it	0.0	0.0.0	
# ::edge	contrast-01	ARG1	accident	0	0.0	
# ::edge	contrast-01	ARG2	excuse-01	0	0.1	
# ::edge	excuse-01	ARG0	it	0.1	0.1.0	
(c / contrast-01 
      :ARG1 (a / accident 
            :domain (i2 / it)) 
      :ARG2 (e / excuse-01 
            :ARG0 (i / it)))

# ::snt but the loss of paediatrics alone would have knockon effects on the ability of affected hospitals to provide maternity and accident and emergency services
# ::tok but the loss of paediatrics alone would have knockon effects on the ability of affected hospitals to provide maternity and accident and emergency services
# ::alignments 23-24|0.0.1 22-23|0.0.1.0 21-22|0.0 20-21|0.0.0.1 19-20|0.0.0 17-18|0.0.0.0.1 15-16|0.0.0.0.1.0 14-15|0.0.0.0.1.0.0 12-13|0.0.0.0.0 9-10|0.0.0.0 5-6|0.0.0.0.2 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:14.822
# ::node	0	contrast-01	0-1
# ::node	0.0	and	21-22
# ::node	0.0.0	and	19-20
# ::node	0.0.0.0	effect-01	9-10
# ::node	0.0.0.0.0	ability	12-13
# ::node	0.0.0.0.1	provide-01	17-18
# ::node	0.0.0.0.1.0	hospital	15-16
# ::node	0.0.0.0.1.0.0	affect-01	14-15
# ::node	0.0.0.0.2	alone	5-6
# ::node	0.0.0.1	accident	20-21
# ::node	0.0.1	service	23-24
# ::node	0.0.1.0	emergency	22-23
# ::root	0	contrast-01
# ::edge	affect-01	ARG1	hospital	0.0.0.0.1.0.0	0.0.0.0.1.0	
# ::edge	and	op1	effect-01	0.0.0	0.0.0.0	
# ::edge	and	op1	service	0.0	0.0.1	
# ::edge	and	op2	accident	0.0.0	0.0.0.1	
# ::edge	and	op3	and	0.0.0	0.0	
# ::edge	contrast-01	ARG1	and	0	0.0	
# ::edge	effect-01	ARG1	ability	0.0.0.0	0.0.0.0.0	
# ::edge	effect-01	mod	alone	0.0.0.0	0.0.0.0.2	
# ::edge	provide-01	ARG0	hospital	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	provide-01	ARG1	effect-01	0.0.0.0.1	0.0.0.0	
# ::edge	service	mod	emergency	0.0.1	0.0.1.0	
(c / contrast-01 
      :ARG1 (a / and 
            :op-of (a3 / and 
                  :op1 (e2 / effect-01 
                        :ARG1 (a5 / ability) 
                        :ARG1-of (p / provide-01 
                              :ARG0 (h / hospital 
                                    :ARG1-of (a4 / affect-01))) 
                        :mod (a6 / alone)) 
                  :op2 (a2 / accident)) 
            :op1 (s / service 
                  :mod (e / emergency))))

# ::snt the safety record of the private mines is dreadful with fatal accidents running between twice and four times the rate of the record of british coal
# ::tok the safety record of the private mines is dreadful with fatal accidents running between twice and four times the rate of the record of british coal
# ::alignments 25-26|0.0.0.0 22-23|0.0.0 19-20|0.0.1.1.0 16-17|0.0.2 15-16|0 13-14|0.0.1.1 11-12|0.0.1.0.0.0 10-11|0.0.1.0.0.0.0 6-7|0.0.1.0 5-6|0.0.1.0.0 2-3|0.0.1 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:14.929
# ::node	0	and	15-16
# ::node	0.0	safe-41	1-2
# ::node	0.0.0	record	22-23
# ::node	0.0.0.0	coal	25-26
# ::node	0.0.1	record	2-3
# ::node	0.0.1.0	mine	6-7
# ::node	0.0.1.0.0	private	5-6
# ::node	0.0.1.0.0.0	accident	11-12
# ::node	0.0.1.0.0.0.0	fatal	10-11
# ::node	0.0.1.1	between	13-14
# ::node	0.0.1.1.0	rate	19-20
# ::node	0.0.2	4	16-17
# ::root	0	and
(a / and 
      :ARG1-of (s / safe-41 
            :ARG0 (r / record 
                  :topic (c / coal)) 
            :mod-of (r3 / record 
                  :location (m / mine 
                        :mod (p / private 
                              :mod-of (a2 / accident 
                                    :mod (f / fatal)))) 
                  :poss (b / between 
                        :op1 (r2 / rate))) 
            :op-of 4))

# ::snt last year a judge said there were more car accidents in summer because men were watching girls in short skirts
# ::tok last year a judge said there were more car accidents in summer because men were watching girls in short skirts
# ::alignments 18-19|0.0.1 16-17|0.1.0 15-16|0.1.1 13-14|0.1.1.0 12-13|0.1 11-12|0.1.2 9-10|0.1.1.1 8-9|0.1.1.1.0 4-5|0 3-4|0.0 1-2|0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:15.456
# ::node	0	say-01	4-5
# ::node	0.0	judge-01	3-4
# ::node	0.0.0	year	1-2
# ::node	0.0.0.0	last	0-1
# ::node	0.0.1	short	18-19
# ::node	0.1	cause-01	12-13
# ::node	0.1.0	girl	16-17
# ::node	0.1.1	watch-01	15-16
# ::node	0.1.1.0	man	13-14
# ::node	0.1.1.1	accident	9-10
# ::node	0.1.1.1.0	car	8-9
# ::node	0.1.2	summer	11-12
# ::root	0	say-01
# ::edge	accident	mod	car	0.1.1.1	0.1.1.1.0	
# ::edge	cause-01	ARG0	girl	0.1	0.1.0	
# ::edge	cause-01	ARG1	say-01	0.1	0	
# ::edge	cause-01	ARG3	watch-01	0.1	0.1.1	
# ::edge	judge-01	ARG0	year	0.0	0.0.0	
# ::edge	judge-01	ARG1	short	0.0	0.0.1	
# ::edge	say-01	ARG1	judge-01	0	0.0	
# ::edge	summer	time	cause-01	0.1.2	0.1	
# ::edge	watch-01	ARG0	man	0.1.1	0.1.1.0	
# ::edge	watch-01	instrument	accident	0.1.1	0.1.1.1	
# ::edge	year	mod	last	0.0.0	0.0.0.0	
(s3 / say-01 
      :ARG1 (j / judge-01 
            :ARG0 (y / year 
                  :mod (l / last)) 
            :ARG1 (s / short)) 
      :ARG1-of (c / cause-01 
            :ARG0 (g / girl) 
            :ARG3 (w / watch-01 
                  :ARG0 (m / man) 
                  :instrument (a / accident 
                        :mod (c2 / car))) 
            :time-of (s2 / summer)))

# ::snt some of this pollution is by accident but much of it is deliberate or is caused dash
# ::tok some of this pollution is by accident but much of it is deliberate or is caused dash
# ::alignments 15-16|0 13-14|0.2 10-11|0.1 8-9|0.0 7-8|0.2.0 6-7|0.2.0.0.0 3-4|0.2.0.0 2-3|0.2.0.0.1 0-1|0.2.0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:15.536
# ::node	0	cause-01	15-16
# ::node	0.0	much	8-9
# ::node	0.1	it	10-11
# ::node	0.2	or	13-14
# ::node	0.2.0	contrast-01	7-8
# ::node	0.2.0.0	pollute-01	3-4
# ::node	0.2.0.0.0	accident	6-7
# ::node	0.2.0.0.1	this	2-3
# ::node	0.2.0.0.2	some	0-1
# ::root	0	cause-01
# ::edge	cause-01	ARG0	much	0	0.0	
# ::edge	cause-01	ARG1	it	0	0.1	
# ::edge	contrast-01	ARG1	pollute-01	0.2.0	0.2.0.0	
# ::edge	contrast-01	ARG2	or	0.2.0	0.2	
# ::edge	or	op1	cause-01	0.2	0	
# ::edge	pollute-01	ARG1	accident	0.2.0.0	0.2.0.0.0	
# ::edge	pollute-01	mod	this	0.2.0.0	0.2.0.0.1	
# ::edge	pollute-01	quant	some	0.2.0.0	0.2.0.0.2	
(c / cause-01 
      :ARG0 (m / much) 
      :ARG1 (i / it) 
      :op-of (o / or 
            :ARG2-of (c2 / contrast-01 
                  :ARG1 (p / pollute-01 
                        :ARG1 (a / accident) 
                        :mod (t / this) 
                        :quant (s / some)))))

# ::snt the cause of the accident was unknown
# ::tok the cause of the accident was unknown
# ::alignments 6-7|0.1.0+0.1 4-5|0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:15.543
# ::node	0	cause-01	1-2
# ::node	0.0	accident	4-5
# ::node	0.1	know-01	6-7
# ::node	0.1.0	-	6-7
# ::root	0	cause-01
# ::edge	cause-01	ARG1	accident	0	0.0	
# ::edge	know-01	ARG1	cause-01	0.1	0	
# ::edge	know-01	polarity	-	0.1	0.1.0	
(c / cause-01 
      :ARG1 (a / accident) 
      :ARG1-of (k / know-01 
            :polarity -))

# ::snt an added embarrassment was a report also leaked by the chief inspector for nuclear safety who warned against complacency and came up with an estimate that there was a several per cent chance of a serious accident in the next twenty years
# ::tok an added embarrassment was a report also leaked by the chief inspector for nuclear safety who warned against complacency and came up with an estimate that there was a several per cent chance of a serious accident in the next twenty years
# ::alignments 41-42|0.0.1.1.0.0.0.0+0.0.1.1.0.0.0.0.0 39-40|0.0.1.1.0.0.0 36-37|0.0.1.1.0.1.0.1 35-36|0.0.1.1.0.1.0.1.0 32-33|0.0.1.1.0.1.0 31-32|0.0.1.1.0.1.0.0.0+0.0.1.1.0.1.0.0 29-30|0.0.1.1.0.1.0.2 24-25|0 19-20|0.0.1.0.1 18-19|0.0.1.0.0 16-17|0.0.1.0 14-15|0.0.1.1.0.0 13-14|0.0.1.1.0.0.1 11-12|0.0.1.1.0 10-11|0.0.1.1.0.1.1+0.0.1.1.0.1 7-8|0.0.1.1 6-7|0.0.1.1.1 5-6|0.0.1 2-3|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:16.041
# ::node	0	estimate-01	24-25
# ::node	0.0	embarrass-01	2-3
# ::node	0.0.0	add-01	1-2
# ::node	0.0.1	report	5-6
# ::node	0.0.1.0	warn-01	16-17
# ::node	0.0.1.0.0	complacency	18-19
# ::node	0.0.1.0.1	and	19-20
# ::node	0.0.1.1	leak-01	7-8
# ::node	0.0.1.1.0	inspect-01	11-12
# ::node	0.0.1.1.0.0	safe-41	14-15
# ::node	0.0.1.1.0.0.0	next	39-40
# ::node	0.0.1.1.0.0.0.0	year	41-42
# ::node	0.0.1.1.0.0.0.0.0	temporal-quantity	41-42
# ::node	0.0.1.1.0.0.1	nucleus	13-14
# ::node	0.0.1.1.0.1	have-org-role-91	10-11
# ::node	0.0.1.1.0.1.0	chance	32-33
# ::node	0.0.1.1.0.1.0.0	monetary-quantity	31-32
# ::node	0.0.1.1.0.1.0.0.0	cent	31-32
# ::node	0.0.1.1.0.1.0.1	accident	36-37
# ::node	0.0.1.1.0.1.0.1.0	serious	35-36
# ::node	0.0.1.1.0.1.0.2	several	29-30
# ::node	0.0.1.1.0.1.1	chief	10-11
# ::node	0.0.1.1.1	also	6-7
# ::root	0	estimate-01
(e / estimate-01 
      :ARG1-of (e2 / embarrass-01 
            :ARG1-of (a4 / add-01) 
            :domain-of (r / report 
                  :ARG0-of (w / warn-01 
                        :ARG1 (c3 / complacency) 
                        :op-of (a2 / and)) 
                  :ARG1-of (l / leak-01 
                        :manner (i / inspect-01 
                              :ARG1 (s3 / safe-41 
                                    :ARG0 (n / next 
                                          :mod-of (y / year 
                                                :unit-of (t / temporal-quantity))) 
                                    :mod (n2 / nucleus)) 
                              :ARG3-of (h / have-org-role-91 
                                    :ARG1 (c / chance 
                                          :mod (m / monetary-quantity 
                                                :unit (c2 / cent)) 
                                          :mod (a / accident 
                                                :mod (s / serious)) 
                                          :topic-of (s2 / several)) 
                                    :ARG2 (c4 / chief))) 
                        :mod (a3 / also)))))

# ::snt it is no accident that the opposition in hungary or the solidarity government in poland discuss allegiance to the pact with extreme care
# ::tok it is no accident that the opposition in hungary or the solidarity government in poland discuss allegiance to the pact with extreme care
# ::alignments 22-23|0.0.1.0 21-22|0.0.1.0.0 19-20|0.0.0.1 16-17|0.0.0.0 15-16|0.0.0 11-12|0 9-10|0.0 6-7|0.0.2 3-4|0.0.1 2-3|0.0.1.2 0-1|0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:16.145
# ::node	0	solidarity	11-12
# ::node	0.0	or	9-10
# ::node	0.0.0	discuss-01	15-16
# ::node	0.0.0.0	allegiance	16-17
# ::node	0.0.0.1	pact	19-20
# ::node	0.0.1	accident	3-4
# ::node	0.0.1.0	care-01	22-23
# ::node	0.0.1.0.0	extreme	21-22
# ::node	0.0.1.1	it	0-1
# ::node	0.0.1.2	-	2-3
# ::node	0.0.2	oppose-01	6-7
# ::root	0	solidarity
(s / solidarity 
      :op-of (o / or 
            :ARG0-of (d / discuss-01 
                  :ARG1 (a / allegiance) 
                  :ARG2 (p / pact)) 
            :op1 (a2 / accident 
                  :ARG0-of (c / care-01 
                        :mod (e / extreme)) 
                  :domain (i / it) 
                  :polarity (- / -)) 
            :op2 (o2 / oppose-01)))

# ::snt as already mentioned the movement for reforming tort law in the 1960s could not and did not ignore the problem of traffic accidents which in the united states as elsewhere produces the single largest category of casualtiesfo id75 and more than half of all tort litigation, but whereas most reform proposals had been addressed to and many carried out by liberal courts even the most activist declined to undertake a fundamental restructuring of the basic rules of motor accidentsfo id77 in noticeable contrast to the contemporaneous judicial innovations of strict products liability and of comparative negligence apportionment
# ::tok as already mentioned the movement for reforming tort law in the 1960s could not and did not ignore the problem of traffic accidents which in the united states as elsewhere produces the single largest category of casualtiesfo id75 and more than half of all tort litigation , but whereas most reform proposals had been addressed to and many carried out by liberal courts even the most activist declined to undertake a fundamental restructuring of the basic rules of motor accidentsfo id77 in noticeable contrast to the contemporaneous judicial innovations of strict products liability and of comparative negligence apportionment
# ::alignments 96-97|0.1.2 93-94|0.1.5 92-93|0.1.1 91-92|0.1.1.0 90-91|0.1.1.1 88-89|0.1 87-88|0.1.4 83-84|0 78-79|0.1.0 76-77|0.1.3.1 75-76|0.1.3.1.0 72-73|0.1.3 71-72|0.1.3.4 69-70|0.1.3.2 67-68|0.1.3.2.1 66-67|0.1.3.2.0.1+0.1.3.2.0 65-66|0.1.3.2.0.2 62-63|0.0 61-62|0.0.0 57-58|0.1.3.3.1.0.1.0 56-57|0.1.3.3.1.0.1 54-55|0.1.3.3.1.0 51-52|0.1.3.3.1.1+0.1.3.3.1 50-51|0.1.3.3 49-50|0.1.3.0 48-49|0.1.3.3.1.0.2 47-48|0.1.3.3.1.0.0.0.0 43-44|0.1.3.2.0.0 41-42|0.1.3.3.0.0.2.0 38-39|0.1.3.3.0.0.2 34-35|0.1.3.3.0.0.0 33-34|0.1.3.3.0.0.0.0.0+0.1.3.3.0.0.0.0 32-33|0.1.3.3.0.0.0.0.1 30-31|0.1.3.3.0.0 29-30|0.1.3.3.0.0.1 26-28|0.1.3.3.0.1.0+0.1.3.3.0.1.1+0.1.3.3.0.1+0.1.3.3.0 22-23|0.1.3.3.1.0.0.1.0.0 21-22|0.1.3.3.1.0.0.1.0.0.0 19-20|0.1.3.3.1.0.0.1.0 17-18|0.1.3.3.1.0.0.1 14-15|0.1.3.3.1.0.0 12-13|0.1.3.3.1.0.0.0 11-12|0.1.3.3.1.0.0.0.0.0.0.0.1 8-9|0.1.3.3.1.0.0.0.0.0.0.0.0 6-7|0.1.3.3.1.0.0.0.0.0.0.0 4-5|0.1.3.3.1.0.0.0.0.0.0 2-3|0.1.3.3.1.0.0.0.0.0 1-2|0.1.3.3.1.0.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:20.460
# ::node	0	contrast-01	83-84
# ::node	0.0	court	62-63
# ::node	0.0.0	liberal	61-62
# ::node	0.1	innovate-01	88-89
# ::node	0.1.0	motorcycle	78-79
# ::node	0.1.1	liability	92-93
# ::node	0.1.1.0	product	91-92
# ::node	0.1.1.1	strict	90-91
# ::node	0.1.2	neglect-01	96-97
# ::node	0.1.3	restructure-01	72-73
# ::node	0.1.3.0	most	49-50
# ::node	0.1.3.1	rule	76-77
# ::node	0.1.3.1.0	basic	75-76
# ::node	0.1.3.2	undertake-01	69-70
# ::node	0.1.3.2.0	have-org-role-91	66-67
# ::node	0.1.3.2.0.0	all	43-44
# ::node	0.1.3.2.0.1	activist	66-67
# ::node	0.1.3.2.0.2	most	65-66
# ::node	0.1.3.2.1	decline-02	67-68
# ::node	0.1.3.3	reform-01	50-51
# ::node	0.1.3.3.0	country	26-28
# ::node	0.1.3.3.0.0	produce-01	30-31
# ::node	0.1.3.3.0.0.0	category	34-35
# ::node	0.1.3.3.0.0.0.0	large	33-34
# ::node	0.1.3.3.0.0.0.0.0	most	33-34
# ::node	0.1.3.3.0.0.0.0.1	single	32-33
# ::node	0.1.3.3.0.0.1	elsewhere	29-30
# ::node	0.1.3.3.0.0.2	and	38-39
# ::node	0.1.3.3.0.0.2.0	half	41-42
# ::node	0.1.3.3.0.1	name	26-28
# ::node	0.1.3.3.0.1.0	"states"	26-28
# ::node	0.1.3.3.0.1.1	"united"	26-28
# ::node	0.1.3.3.1	thing	51-52
# ::node	0.1.3.3.1.0	address-01	54-55
# ::node	0.1.3.3.1.0.0	and	14-15
# ::node	0.1.3.3.1.0.0.0	possible	12-13
# ::node	0.1.3.3.1.0.0.0.0	contrast-01	47-48
# ::node	0.1.3.3.1.0.0.0.0.0	mention-01	2-3
# ::node	0.1.3.3.1.0.0.0.0.0.0	movement	4-5
# ::node	0.1.3.3.1.0.0.0.0.0.0.0	reform-01	6-7
# ::node	0.1.3.3.1.0.0.0.0.0.0.0.0	law	8-9
# ::node	0.1.3.3.1.0.0.0.0.0.0.0.1	1960	11-12
# ::node	0.1.3.3.1.0.0.0.0.0.1	already	1-2
# ::node	0.1.3.3.1.0.0.1	ignore-01	17-18
# ::node	0.1.3.3.1.0.0.1.0	problem	19-20
# ::node	0.1.3.3.1.0.0.1.0.0	accident	22-23
# ::node	0.1.3.3.1.0.0.1.0.0.0	traffic	21-22
# ::node	0.1.3.3.1.0.1	and	56-57
# ::node	0.1.3.3.1.0.1.0	many	57-58
# ::node	0.1.3.3.1.0.2	whereas	48-49
# ::node	0.1.3.3.1.1	propose-01	51-52
# ::node	0.1.3.4	fundamental	71-72
# ::node	0.1.4	judicial	87-88
# ::node	0.1.5	and	93-94
# ::root	0	contrast-01
# ::edge	accident	mod	traffic	0.1.3.3.1.0.0.1.0.0	0.1.3.3.1.0.0.1.0.0.0	
# ::edge	address-01	ARG1	thing	0.1.3.3.1.0	0.1.3.3.1	
# ::edge	and	op1	address-01	0.1.3.3.1.0.1	0.1.3.3.1.0	
# ::edge	and	op1	innovate-01	0.1.5	0.1	
# ::edge	and	op1	possible	0.1.3.3.1.0.0	0.1.3.3.1.0.0.0	
# ::edge	and	op1	produce-01	0.1.3.3.0.0.2	0.1.3.3.0.0	
# ::edge	and	op2	half	0.1.3.3.0.0.2	0.1.3.3.0.0.2.0	
# ::edge	and	op2	ignore-01	0.1.3.3.1.0.0	0.1.3.3.1.0.0.1	
# ::edge	and	op2	many	0.1.3.3.1.0.1	0.1.3.3.1.0.1.0	
# ::edge	and	op3	address-01	0.1.3.3.1.0.0	0.1.3.3.1.0	
# ::edge	category	mod	large	0.1.3.3.0.0.0	0.1.3.3.0.0.0.0	
# ::edge	contrast-01	ARG0	court	0	0.0	
# ::edge	contrast-01	ARG1	innovate-01	0	0.1	
# ::edge	contrast-01	ARG1	mention-01	0.1.3.3.1.0.0.0.0	0.1.3.3.1.0.0.0.0.0	
# ::edge	contrast-01	ARG2	possible	0.1.3.3.1.0.0.0.0	0.1.3.3.1.0.0.0	
# ::edge	country	name	name	0.1.3.3.0	0.1.3.3.0.1	
# ::edge	court	mod	liberal	0.0	0.0.0	
# ::edge	decline-02	ARG1	undertake-01	0.1.3.2.1	0.1.3.2	
# ::edge	have-org-role-91	ARG1	all	0.1.3.2.0	0.1.3.2.0.0	
# ::edge	have-org-role-91	ARG2	activist	0.1.3.2.0	0.1.3.2.0.1	
# ::edge	have-org-role-91	degree	most	0.1.3.2.0	0.1.3.2.0.2	
# ::edge	ignore-01	ARG1	problem	0.1.3.3.1.0.0.1	0.1.3.3.1.0.0.1.0	
# ::edge	innovate-01	ARG0	motorcycle	0.1	0.1.0	
# ::edge	innovate-01	ARG1	liability	0.1	0.1.1	
# ::edge	innovate-01	ARG2	neglect-01	0.1	0.1.2	
# ::edge	innovate-01	mod	judicial	0.1	0.1.4	
# ::edge	large	degree	most	0.1.3.3.0.0.0.0	0.1.3.3.0.0.0.0.0	
# ::edge	large	mod	single	0.1.3.3.0.0.0.0	0.1.3.3.0.0.0.0.1	
# ::edge	liability	mod	product	0.1.1	0.1.1.0	
# ::edge	liability	mod	strict	0.1.1	0.1.1.1	
# ::edge	mention-01	ARG0	movement	0.1.3.3.1.0.0.0.0.0	0.1.3.3.1.0.0.0.0.0.0	
# ::edge	mention-01	time	already	0.1.3.3.1.0.0.0.0.0	0.1.3.3.1.0.0.0.0.0.1	
# ::edge	name	op1	"states"	0.1.3.3.0.1	0.1.3.3.0.1.0	
# ::edge	name	op2	"united"	0.1.3.3.0.1	0.1.3.3.0.1.1	
# ::edge	problem	prep-with	accident	0.1.3.3.1.0.0.1.0	0.1.3.3.1.0.0.1.0.0	
# ::edge	produce-01	ARG1	category	0.1.3.3.0.0	0.1.3.3.0.0.0	
# ::edge	produce-01	location	country	0.1.3.3.0.0	0.1.3.3.0	
# ::edge	produce-01	manner	elsewhere	0.1.3.3.0.0	0.1.3.3.0.0.1	
# ::edge	propose-01	ARG1	thing	0.1.3.3.1.1	0.1.3.3.1	
# ::edge	reform-01	ARG0	country	0.1.3.3	0.1.3.3.0	
# ::edge	reform-01	ARG0	movement	0.1.3.3.1.0.0.0.0.0.0.0	0.1.3.3.1.0.0.0.0.0.0	
# ::edge	reform-01	ARG1	law	0.1.3.3.1.0.0.0.0.0.0.0	0.1.3.3.1.0.0.0.0.0.0.0.0	
# ::edge	reform-01	ARG1	restructure-01	0.1.3.3	0.1.3	
# ::edge	reform-01	location	1960	0.1.3.3.1.0.0.0.0.0.0.0	0.1.3.3.1.0.0.0.0.0.0.0.1	
# ::edge	restructure-01	ARG0	most	0.1.3	0.1.3.0	
# ::edge	restructure-01	ARG1	rule	0.1.3	0.1.3.1	
# ::edge	restructure-01	ARG2	innovate-01	0.1.3	0.1	
# ::edge	restructure-01	mod	fundamental	0.1.3	0.1.3.4	
# ::edge	rule	mod	basic	0.1.3.1	0.1.3.1.0	
# ::edge	thing	topic	reform-01	0.1.3.3.1	0.1.3.3	
# ::edge	undertake-01	ARG0	have-org-role-91	0.1.3.2	0.1.3.2.0	
# ::edge	undertake-01	ARG1	restructure-01	0.1.3.2	0.1.3	
# ::edge	whereas	op1	address-01	0.1.3.3.1.0.2	0.1.3.3.1.0	
(c / contrast-01 
      :ARG0 (c2 / court 
            :mod (l2 / liberal)) 
      :ARG1 (i / innovate-01 
            :ARG0 (m / motorcycle) 
            :ARG1 (l / liability 
                  :mod (p / product) 
                  :mod (s / strict)) 
            :ARG2 (n / neglect-01) 
            :ARG2-of (r2 / restructure-01 
                  :ARG0 (m4 / most) 
                  :ARG1 (r / rule 
                        :mod (b / basic)) 
                  :ARG1-of (u / undertake-01 
                        :ARG0 (h / have-org-role-91 
                              :ARG1 (a5 / all) 
                              :ARG2 (a2 / activist) 
                              :degree (m2 / most)) 
                        :ARG1-of (d / decline-02)) 
                  :ARG1-of (r3 / reform-01 
                        :ARG0 (c5 / country 
                              :location-of (p3 / produce-01 
                                    :ARG1 (c4 / category 
                                          :mod (l3 / large 
                                                :degree (m5 / most) 
                                                :mod (s2 / single))) 
                                    :manner (e / elsewhere) 
                                    :op-of (a6 / and 
                                          :op1 (h2 / half))) 
                              :name (n2 / name 
                                    :op1 "states" 
                                    :op2 "united")) 
                        :topic-of (t / thing 
                              :ARG1-of (a4 / address-01 
                                    :op-of (a8 / and 
                                          :op1 (p5 / possible 
                                                :ARG2-of (c3 / contrast-01 
                                                      :ARG1 (m7 / mention-01 
                                                            :ARG0 (m6 / movement 
                                                                  :ARG0-of (r4 / reform-01 
                                                                        :ARG1 (l4 / law) 
                                                                        :location 1960)) 
                                                            :time (a9 / already)))) 
                                          :op2 (i2 / ignore-01 
                                                :ARG1 (p4 / problem 
                                                      :prep-with (a7 / accident 
                                                            :mod (t2 / traffic))))) 
                                    :op-of (a3 / and 
                                          :op1 (m3 / many)) 
                                    :op-of (w / whereas)) 
                              :ARG1-of (p2 / propose-01))) 
                  :mod (f / fundamental)) 
            :mod (j / judicial) 
            :op-of (a / and)))

# ::snt the accident happened at 7
# ::tok the accident happened at 7
# ::alignments 4-5|0.1 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:20.466
# ::node	0	happen-01	2-3
# ::node	0.0	accident	1-2
# ::node	0.1	7	4-5
# ::root	0	happen-01
# ::edge	happen-01	ARG1	accident	0	0.0	
# ::edge	happen-01	time	7	0	0.1	
(h / happen-01 
      :ARG1 (a / accident) 
      :time 7)

# ::snt thousands of road accident injuries could be prevented if everyone belted up in the back of cars according to a new report
# ::tok thousands of road accident injuries could be prevented if everyone belted up in the back of cars according to a new report
# ::alignments 21-22|0.0.0.0.0 20-21|0.0.0.0 16-17|0.0.1 14-15|0.0.1.0 9-10|0.0.0.2 7-8|0.0 5-6|0 4-5|0.0.0 3-4|0.0.0.1 2-3|0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:20.525
# ::node	0	possible	5-6
# ::node	0.0	prevent-01	7-8
# ::node	0.0.0	injure-01	4-5
# ::node	0.0.0.0	new	20-21
# ::node	0.0.0.0.0	report	21-22
# ::node	0.0.0.1	accident	3-4
# ::node	0.0.0.1.0	road	2-3
# ::node	0.0.0.2	everyone	9-10
# ::node	0.0.1	car	16-17
# ::node	0.0.1.0	back	14-15
# ::root	0	possible
# ::edge	accident	mod	road	0.0.0.1	0.0.0.1.0	
# ::edge	car	part	back	0.0.1	0.0.1.0	
# ::edge	injure-01	ARG0	new	0.0.0	0.0.0.0	
# ::edge	injure-01	ARG1	accident	0.0.0	0.0.0.1	
# ::edge	injure-01	mod	everyone	0.0.0	0.0.0.2	
# ::edge	possible	domain	prevent-01	0	0.0	
# ::edge	prevent-01	ARG1	injure-01	0.0	0.0.0	
# ::edge	prevent-01	location	car	0.0	0.0.1	
# ::edge	report	mod	new	0.0.0.0.0	0.0.0.0	
(p2 / possible 
      :domain (p / prevent-01 
            :ARG1 (i / injure-01 
                  :ARG0 (n / new 
                        :mod-of (r / report)) 
                  :ARG1 (a / accident 
                        :mod (r2 / road)) 
                  :mod (e / everyone)) 
            :location (c / car 
                  :part (b / back))))

# ::snt this trend may be a harbinger for the eventual disappearance of the tort system for all personal injury by accident as has already occurred in new zealand
# ::tok this trend may be a harbinger for the eventual disappearance of the tort system for all personal injury by accident as has already occurred in new zealand
# ::alignments 25-27|0.0.0.0+0.0.0.1+0.0.0+0.0 22-23|0.1 19-20|0.2.1.0 17-18|0.2.1 16-17|0.2.1.1 15-16|0.2.1.3 13-14|0.2.1.2 9-10|0.2.1.2.0 8-9|0.2.1.2.0.0 2-3|0.2.0+0.2 1-2|0 0-1|0.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:20.698
# ::node	0	trend-01	1-2
# ::node	0.0	country	25-27
# ::node	0.0.0	name	25-27
# ::node	0.0.0.0	"zealand"	25-27
# ::node	0.0.0.1	"new"	25-27
# ::node	0.1	already	22-23
# ::node	0.2	date-entity	2-3
# ::node	0.2.0	5	2-3
# ::node	0.2.1	injure-01	17-18
# ::node	0.2.1.0	accident	19-20
# ::node	0.2.1.1	personal	16-17
# ::node	0.2.1.2	system	13-14
# ::node	0.2.1.2.0	disappear-01	9-10
# ::node	0.2.1.2.0.0	eventual	8-9
# ::node	0.2.1.3	all	15-16
# ::node	0.3	this	0-1
# ::root	0	trend-01
# ::edge	country	name	name	0.0	0.0.0	
# ::edge	date-entity	domain	trend-01	0.2	0	
# ::edge	date-entity	month	5	0.2	0.2.0	
# ::edge	date-entity	op1	injure-01	0.2	0.2.1	
# ::edge	disappear-01	ARG1	system	0.2.1.2.0	0.2.1.2	
# ::edge	disappear-01	mod	eventual	0.2.1.2.0	0.2.1.2.0.0	
# ::edge	injure-01	ARG1	accident	0.2.1	0.2.1.0	
# ::edge	injure-01	mod	personal	0.2.1	0.2.1.1	
# ::edge	injure-01	quant	all	0.2.1	0.2.1.3	
# ::edge	name	op1	"zealand"	0.0.0	0.0.0.0	
# ::edge	name	op2	"new"	0.0.0	0.0.0.1	
# ::edge	system	purpose	injure-01	0.2.1.2	0.2.1	
# ::edge	trend-01	ARG0	country	0	0.0	
# ::edge	trend-01	ARG1	already	0	0.1	
# ::edge	trend-01	mod	this	0	0.3	
(t / trend-01 
      :ARG0 (c / country 
            :name (n / name 
                  :op1 "zealand" 
                  :op2 "new")) 
      :ARG1 (a / already) 
      :domain-of (d2 / date-entity 
            :month 5 
            :op1 (i / injure-01 
                  :ARG1 (a2 / accident) 
                  :mod (p / personal) 
                  :purpose-of (s / system 
                        :ARG1-of (d / disappear-01 
                              :mod (e / eventual))) 
                  :quant (a3 / all))) 
      :mod (t2 / this))

# ::snt yesterday witnesses to an accident at holland park west london said it took a police ambulance crew 30 minutes to reach a dying motorcyclist
# ::tok yesterday witnesses to an accident at holland park west london said it took a police ambulance crew 30 minutes to reach a dying motorcyclist
# ::alignments 22-23|0.0.1 20-21|0.1.0 18-19|0.1.0.1.1+0.1.0.1 17-18|0.1.0.1.0 16-17|0.1.0.0 15-16|0.1.1 14-15|0.1.0.0.0 11-12|0.1 10-11|0 9-10|0.0.0.0.0.1.0+0.0.0.0.0.1+0.0.0.0.0 8-9|0.0.0.0.0.0 7-8|0.0.0.0.0.0.0 4-5|0.0.0.0 1-2|0.0.0+0.0 0-1|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:21.260
# ::node	0	say-01	10-11
# ::node	0.0	person	1-2
# ::node	0.0.0	witness-01	1-2
# ::node	0.0.0.0	accident	4-5
# ::node	0.0.0.0.0	city	9-10
# ::node	0.0.0.0.0.0	west	8-9
# ::node	0.0.0.0.0.0.0	park	7-8
# ::node	0.0.0.0.0.1	name	9-10
# ::node	0.0.0.0.0.1.0	"London"	9-10
# ::node	0.0.0.1	yesterday	0-1
# ::node	0.0.1	die-01	22-23
# ::node	0.1	it	11-12
# ::node	0.1.0	reach-01	20-21
# ::node	0.1.0.0	crew	16-17
# ::node	0.1.0.0.0	police	14-15
# ::node	0.1.0.1	temporal-quantity	18-19
# ::node	0.1.0.1.0	30	17-18
# ::node	0.1.0.1.1	minute	18-19
# ::node	0.1.1	ambulance	15-16
# ::root	0	say-01
# ::edge	accident	poss	city	0.0.0.0	0.0.0.0.0	
# ::edge	ambulance	poss	it	0.1.1	0.1	
# ::edge	city	mod	west	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	city	name	name	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	crew	mod	police	0.1.0.0	0.1.0.0.0	
# ::edge	die-01	ARG1	person	0.0.1	0.0	
# ::edge	name	op1	"London"	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	reach-01	ARG0	crew	0.1.0	0.1.0.0	
# ::edge	reach-01	ARG1	it	0.1.0	0.1	
# ::edge	say-01	ARG0	person	0	0.0	
# ::edge	say-01	ARG1	it	0	0.1	
# ::edge	temporal-quantity	purpose	reach-01	0.1.0.1	0.1.0	
# ::edge	temporal-quantity	quant	30	0.1.0.1	0.1.0.1.0	
# ::edge	temporal-quantity	unit	minute	0.1.0.1	0.1.0.1.1	
# ::edge	west	mod	park	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	witness-01	ARG0	person	0.0.0	0.0	
# ::edge	witness-01	ARG1	accident	0.0.0	0.0.0.0	
# ::edge	witness-01	mod	yesterday	0.0.0	0.0.0.1	
(s / say-01 
      :ARG0 (p3 / person 
            :ARG0-of (w2 / witness-01 
                  :ARG1 (a2 / accident 
                        :poss (c2 / city 
                              :mod (w / west 
                                    :mod (p2 / park)) 
                              :name (n / name 
                                    :op1 "London"))) 
                  :mod (y / yesterday)) 
            :ARG1-of (d / die-01)) 
      :ARG1 (i / it 
            :ARG1-of (r / reach-01 
                  :ARG0 (c / crew 
                        :mod (p / police)) 
                  :purpose-of (t / temporal-quantity 
                        :quant 30 
                        :unit (m / minute))) 
            :poss-of (a / ambulance)))

# ::snt ambulance chasing is another accusation levelled against many plaintiffs lawyers but insurance adjusters used to be castigated for beating plaintiffs lawyers to the hospital and importuning accident victims into signing quickie releases
# ::tok ambulance chasing is another accusation levelled against many plaintiffs lawyers but insurance adjusters used to be castigated for beating plaintiffs lawyers to the hospital and importuning accident victims into signing quickie releases
# ::alignments 31-32|0.1.0.0.1 29-30|0.1.0.0 27-28|0.1.0.0.0 26-27|0.1.0.0.0.1 24-25|0.1.0 23-24|0.1.0.0.0.0 20-21|0.1.0.1.0 18-19|0.1.0.1 13-14|0.1 11-12|0.2 10-11|0 9-10|0.0 7-8|0.1.0.0.1.0 4-5|0.2.0.1 3-4|0.2.0.1.0 1-2|0.2.0 0-1|0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:21.473
# ::node	0	contrast-01	10-11
# ::node	0.0	lawyer	9-10
# ::node	0.1	use-01	13-14
# ::node	0.1.0	and	24-25
# ::node	0.1.0.0	sign-02	29-30
# ::node	0.1.0.0.0	victim	27-28
# ::node	0.1.0.0.0.0	hospital	23-24
# ::node	0.1.0.0.0.1	accident	26-27
# ::node	0.1.0.0.1	release-01	31-32
# ::node	0.1.0.0.1.0	many	7-8
# ::node	0.1.0.1	beat-01	18-19
# ::node	0.1.0.1.0	lawyer	20-21
# ::node	0.2	insure-02	11-12
# ::node	0.2.0	chase-01	1-2
# ::node	0.2.0.0	ambulance	0-1
# ::node	0.2.0.1	accuse-01	4-5
# ::node	0.2.0.1.0	another	3-4
# ::root	0	contrast-01
# ::edge	accuse-01	ARG1	chase-01	0.2.0.1	0.2.0	
# ::edge	accuse-01	mod	another	0.2.0.1	0.2.0.1.0	
# ::edge	and	op1	use-01	0.1.0	0.1	
# ::edge	and	op2	beat-01	0.1.0	0.1.0.1	
# ::edge	beat-01	ARG1	lawyer	0.1.0.1	0.1.0.1.0	
# ::edge	chase-01	ARG1	ambulance	0.2.0	0.2.0.0	
# ::edge	contrast-01	ARG1	lawyer	0	0.0	
# ::edge	contrast-01	ARG2	insure-02	0	0.2	
# ::edge	insure-02	ARG1	chase-01	0.2	0.2.0	
# ::edge	release-01	mod	many	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	sign-02	ARG0	victim	0.1.0.0	0.1.0.0.0	
# ::edge	sign-02	ARG1	release-01	0.1.0.0	0.1.0.0.1	
# ::edge	sign-02	ARG2	and	0.1.0.0	0.1.0	
# ::edge	use-01	ARG1	contrast-01	0.1	0	
# ::edge	victim	compared-to	hospital	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	victim	mod	accident	0.1.0.0.0	0.1.0.0.0.1	
(c / contrast-01 
      :ARG1 (l2 / lawyer) 
      :ARG1-of (u / use-01 
            :op-of (a2 / and 
                  :ARG2-of (s / sign-02 
                        :ARG0 (v / victim 
                              :compared-to (h / hospital) 
                              :mod (a / accident)) 
                        :ARG1 (r / release-01 
                              :mod (m / many))) 
                  :op1 (b / beat-01 
                        :ARG1 (l / lawyer)))) 
      :ARG2 (i / insure-02 
            :ARG1 (c2 / chase-01 
                  :ARG1 (a5 / ambulance) 
                  :ARG1-of (a3 / accuse-01 
                        :mod (a4 / another)))))

# ::snt a cook who drank at work had three times the permitted alcohol level for drivers when she had an accident in her car later that day wantage magistrates heard last week
# ::tok a cook who drank at work had three times the permitted alcohol level for drivers when she had an accident in her car later that day wantage magistrates heard last week
# ::alignments 30-31|0.3 29-30|0.3.0 28-29|0 25-26|0.1 23-24|0.0.1.0.0 22-23|0.0.1 19-20|0.0.1.0 16-17|0.0 14-15|0.0.0.0.1.0+0.0.0.0.1 12-13|0.0.0.0 11-12|0.0.0.0.0 10-11|0.0.0 7-8|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:21.661
# ::node	0	hear-01	28-29
# ::node	0.0	she	16-17
# ::node	0.0.0	permit-01	10-11
# ::node	0.0.0.0	level	12-13
# ::node	0.0.0.0.0	alcohol	11-12
# ::node	0.0.0.0.1	person	14-15
# ::node	0.0.0.0.1.0	drive-01	14-15
# ::node	0.0.1	car	22-23
# ::node	0.0.1.0	accident	19-20
# ::node	0.0.1.0.0	late	23-24
# ::node	0.1	day	25-26
# ::node	0.2	3	7-8
# ::node	0.3	week	30-31
# ::node	0.3.0	last	29-30
# ::root	0	hear-01
# ::edge	3	op1	hear-01	0.2	0	
# ::edge	accident	location	car	0.0.1.0	0.0.1	
# ::edge	accident	time	late	0.0.1.0	0.0.1.0.0	
# ::edge	car	poss	she	0.0.1	0.0	
# ::edge	drive-01	ARG0	person	0.0.0.0.1.0	0.0.0.0.1	
# ::edge	hear-01	ARG0	she	0	0.0	
# ::edge	hear-01	ARG1	day	0	0.1	
# ::edge	hear-01	time	week	0	0.3	
# ::edge	level	mod	alcohol	0.0.0.0	0.0.0.0.0	
# ::edge	level	mod	person	0.0.0.0	0.0.0.0.1	
# ::edge	permit-01	ARG0	she	0.0.0	0.0	
# ::edge	permit-01	ARG1	level	0.0.0	0.0.0.0	
# ::edge	week	mod	last	0.3	0.3.0	
(h / hear-01 
      :ARG0 (s / she 
            :ARG0-of (p2 / permit-01 
                  :ARG1 (l3 / level 
                        :mod (a2 / alcohol) 
                        :mod (p / person 
                              :ARG0-of (d2 / drive-01)))) 
            :poss-of (c / car 
                  :location-of (a / accident 
                        :time (l2 / late)))) 
      :ARG1 (d / day) 
      :op-of 3 
      :time (w / week 
            :mod (l / last)))

# ::snt brightons 1983 fa cup final side will reassemble at the goldstone ground on april 3 and play tottenham in a testimonial match for former goalkeeper graham moseley whose career was cut short by a car accident
# ::tok brightons 1983 fa cup final side will reassemble at the goldstone ground on april 3 and play tottenham in a testimonial match for former goalkeeper graham moseley whose career was cut short by a car accident
# ::alignments 35-36|0.0.5 34-35|0.0.5.0 31-32|0.0.6 28-29|0.0.6.0 23-24|0.0.2.0 21-22|0.0.2 20-21|0.0.2.1 17-18|0.0.1.0.0+0.0.1.0+0.0.1 16-17|0.0 15-16|0 14-15|0.0.5.1 13-14|0.0.0.1.0+0.0.0.1 11-12|0.0.4 5-6|0.0.0 4-5|0.0.0.0 3-4|0.0.3 1-2|0.0.2.2.0+0.0.2.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:22.052
# ::node	0	and	15-16
# ::node	0.0	play-01	16-17
# ::node	0.0.0	side	5-6
# ::node	0.0.0.0	final	4-5
# ::node	0.0.0.1	date-entity	13-14
# ::node	0.0.0.1.0	4	13-14
# ::node	0.0.1	city-district	17-18
# ::node	0.0.1.0	name	17-18
# ::node	0.0.1.0.0	"Tottenham"	17-18
# ::node	0.0.2	match-01	21-22
# ::node	0.0.2.0	former	23-24
# ::node	0.0.2.1	testimony	20-21
# ::node	0.0.2.2	date-entity	1-2
# ::node	0.0.2.2.0	1983	1-2
# ::node	0.0.3	cup	3-4
# ::node	0.0.4	ground	11-12
# ::node	0.0.5	accident	35-36
# ::node	0.0.5.0	car	34-35
# ::node	0.0.5.1	3	14-15
# ::node	0.0.6	short	31-32
# ::node	0.0.6.0	career	28-29
# ::root	0	and
# ::edge	accident	location	car	0.0.5	0.0.5.0	
# ::edge	accident	op1	play-01	0.0.5	0.0	
# ::edge	accident	poss	3	0.0.5	0.0.5.1	
# ::edge	and	op1	play-01	0	0.0	
# ::edge	city-district	name	name	0.0.1	0.0.1.0	
# ::edge	date-entity	month	4	0.0.0.1	0.0.0.1.0	
# ::edge	date-entity	op1	match-01	0.0.2.2	0.0.2	
# ::edge	date-entity	poss	side	0.0.0.1	0.0.0	
# ::edge	date-entity	year	1983	0.0.2.2	0.0.2.2.0	
# ::edge	match-01	location	former	0.0.2	0.0.2.0	
# ::edge	match-01	mod	testimony	0.0.2	0.0.2.1	
# ::edge	name	op1	"Tottenham"	0.0.1.0	0.0.1.0.0	
# ::edge	play-01	ARG0	side	0.0	0.0.0	
# ::edge	play-01	ARG1	city-district	0.0	0.0.1	
# ::edge	play-01	ARG2	match-01	0.0	0.0.2	
# ::edge	play-01	ARG3	cup	0.0	0.0.3	
# ::edge	play-01	location	ground	0.0	0.0.4	
# ::edge	short	example	career	0.0.6	0.0.6.0	
# ::edge	short	op1	play-01	0.0.6	0.0	
# ::edge	side	mod	final	0.0.0	0.0.0.0	
(a2 / and 
      :op1 (p / play-01 
            :ARG0 (s2 / side 
                  :mod (f2 / final) 
                  :poss-of (d / date-entity 
                        :month 4)) 
            :ARG1 (c3 / city-district 
                  :name (n / name 
                        :op1 "Tottenham")) 
            :ARG2 (m / match-01 
                  :location (f / former) 
                  :mod (t / testimony) 
                  :op-of (d2 / date-entity 
                        :year 1983)) 
            :ARG3 (c4 / cup) 
            :location (g / ground) 
            :op-of (a / accident 
                  :location (c / car) 
                  :poss 3) 
            :op-of (s / short 
                  :example (c2 / career))))

# ::snt frail in appearance yet nimble of foot she wore gypsyesque clothes with a scarf round her head to disguise a bad wound from a car accident in the early 1970s
# ::tok frail in appearance yet nimble of foot she wore gypsyesque clothes with a scarf round her head to disguise a bad wound from a car accident in the early 1970s
# ::alignments 29-30|0.2 28-29|0.2.0 25-26|0.0 24-25|0.0.0 21-22|0 20-21|0.3 18-19|0.1 16-17|0.1.1 14-15|0.1.2 13-14|0.1.0 10-11|0.1.1.0 8-9|0.1.1.0.0 7-8|0.1.1.0.0.0 6-7|0.1.1.0.0.1 3-4|0.0.0.0.1 2-3|0.0.0.0 0-1|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:22.639
# ::node	0	wound-01	21-22
# ::node	0.0	accident	25-26
# ::node	0.0.0	car	24-25
# ::node	0.0.0.0	appear-01	2-3
# ::node	0.0.0.0.0	frail	0-1
# ::node	0.0.0.0.1	yet	3-4
# ::node	0.1	disguise-01	18-19
# ::node	0.1.0	scarf	13-14
# ::node	0.1.1	head-01	16-17
# ::node	0.1.1.0	clothes	10-11
# ::node	0.1.1.0.0	wear-01	8-9
# ::node	0.1.1.0.0.0	she	7-8
# ::node	0.1.1.0.0.1	foot	6-7
# ::node	0.1.2	round	14-15
# ::node	0.2	1970	29-30
# ::node	0.2.0	early	28-29
# ::node	0.3	bad	20-21
# ::root	0	wound-01
# ::edge	1970	mod	early	0.2	0.2.0	
# ::edge	accident	location	car	0.0	0.0.0	
# ::edge	appear-01	ARG1	car	0.0.0.0	0.0.0	
# ::edge	appear-01	time	yet	0.0.0.0	0.0.0.0.1	
# ::edge	disguise-01	ARG0	scarf	0.1	0.1.0	
# ::edge	disguise-01	ARG1	wound-01	0.1	0	
# ::edge	frail	purpose	appear-01	0.0.0.0.0	0.0.0.0	
# ::edge	head-01	ARG0	clothes	0.1.1	0.1.1.0	
# ::edge	head-01	ARG1	disguise-01	0.1.1	0.1	
# ::edge	round	purpose	disguise-01	0.1.2	0.1	
# ::edge	wear-01	ARG0	she	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	wear-01	ARG1	foot	0.1.1.0.0	0.1.1.0.0.1	
# ::edge	wear-01	ARG2	clothes	0.1.1.0.0	0.1.1.0	
# ::edge	wound-01	ARG1	accident	0	0.0	
# ::edge	wound-01	location	1970	0	0.2	
# ::edge	wound-01	mod	bad	0	0.3	
(w / wound-01 
      :ARG1 (a / accident 
            :location (c / car 
                  :ARG1-of (a2 / appear-01 
                        :purpose-of (f2 / frail) 
                        :time (y / yet)))) 
      :ARG1-of (d / disguise-01 
            :ARG0 (s / scarf) 
            :ARG1-of (h / head-01 
                  :ARG0 (c2 / clothes 
                        :ARG2-of (w2 / wear-01 
                              :ARG0 (s2 / she) 
                              :ARG1 (f / foot)))) 
            :purpose-of (r / round)) 
      :location (1 / 1970 
            :mod (e / early)) 
      :mod (b / bad))

# ::snt at present the botley skates perform their tricks in the car park of the grant thornton chartered accountant offices in botley but parents fear an accident could occur
# ::tok at present the botley skates perform their tricks in the car park of the grant thornton chartered accountant offices in botley but parents fear an accident could occur
# ::alignments 27-28|0.1.1.0 26-27|0.1.1 25-26|0.1.1.0.1 23-24|0.1 22-23|0.1.1.0.0.0+0.1.1.0.0 21-22|0 18-19|0.0 17-18|0.0.0.0+0.0.0 14-15|0.1.0.2 11-12|0.1.0.0 10-11|0.1.0.0.0 7-8|0.1.0 5-6|0.1.0.1 1-2|0.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:22.972
# ::node	0	contrast-01	21-22
# ::node	0.0	office	18-19
# ::node	0.0.0	person	17-18
# ::node	0.0.0.0	account-01	17-18
# ::node	0.1	fear-01	23-24
# ::node	0.1.0	trick-01	7-8
# ::node	0.1.0.0	park	11-12
# ::node	0.1.0.0.0	car	10-11
# ::node	0.1.0.1	perform-01	5-6
# ::node	0.1.0.1.0	present	1-2
# ::node	0.1.0.2	grant-01	14-15
# ::node	0.1.1	possible	26-27
# ::node	0.1.1.0	occur-01	27-28
# ::node	0.1.1.0.0	have-rel-role-91	22-23
# ::node	0.1.1.0.0.0	parent	22-23
# ::node	0.1.1.0.1	accident	25-26
# ::root	0	contrast-01
# ::edge	account-01	ARG0	person	0.0.0.0	0.0.0	
# ::edge	contrast-01	ARG1	office	0	0.0	
# ::edge	contrast-01	ARG2	fear-01	0	0.1	
# ::edge	fear-01	ARG0	trick-01	0.1	0.1.0	
# ::edge	fear-01	ARG1	possible	0.1	0.1.1	
# ::edge	have-rel-role-91	ARG2	parent	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	occur-01	ARG0	have-rel-role-91	0.1.1.0	0.1.1.0.0	
# ::edge	occur-01	ARG1	accident	0.1.1.0	0.1.1.0.1	
# ::edge	office	poss	person	0.0	0.0.0	
# ::edge	park	mod	car	0.1.0.0	0.1.0.0.0	
# ::edge	perform-01	ARG1	trick-01	0.1.0.1	0.1.0	
# ::edge	perform-01	time	present	0.1.0.1	0.1.0.1.0	
# ::edge	possible	domain	occur-01	0.1.1	0.1.1.0	
# ::edge	trick-01	ARG1	park	0.1.0	0.1.0.0	
# ::edge	trick-01	topic	grant-01	0.1.0	0.1.0.2	
(c / contrast-01 
      :ARG1 (o2 / office 
            :poss (p3 / person 
                  :ARG0-of (a2 / account-01))) 
      :ARG2 (f / fear-01 
            :ARG0 (t / trick-01 
                  :ARG1 (p4 / park 
                        :mod (c2 / car)) 
                  :ARG1-of (p5 / perform-01 
                        :time (p6 / present)) 
                  :topic (g / grant-01)) 
            :ARG1 (p / possible 
                  :domain (o / occur-01 
                        :ARG0 (h / have-rel-role-91 
                              :ARG2 (p2 / parent)) 
                        :ARG1 (a / accident)))))

# ::snt we had stumbled across the khmer rouge unit by accident after a hasty evacuation from phum tmei an anscontrolled village five miles to the east because of close shelling
# ::tok we had stumbled across the khmer rouge unit by accident after a hasty evacuation from phum tmei an anscontrolled village five miles to the east because of close shelling
# ::alignments 25-26|0 24-25|0.1.1 21-22|0.1.0.0.0.0.2+0.1.0.0.0.0 20-21|0.1.0.0.0.0.1 19-20|0.1.0.0.0.0.0 10-11|0.1.0.0.0 9-10|0.1.0.0 7-8|0.1.0 3-4|0.1 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:23.093
# ::node	0	cause-01	25-26
# ::node	0.0	we	0-1
# ::node	0.1	across	3-4
# ::node	0.1.0	unit	7-8
# ::node	0.1.0.0	accident	9-10
# ::node	0.1.0.0.0	after	10-11
# ::node	0.1.0.0.0.0	distance-quantity	21-22
# ::node	0.1.0.0.0.0.0	village	19-20
# ::node	0.1.0.0.0.0.1	5	20-21
# ::node	0.1.0.0.0.0.2	mile	21-22
# ::node	0.1.1	east	24-25
# ::root	0	cause-01
# ::edge	accident	location	after	0.1.0.0	0.1.0.0.0	
# ::edge	across	op1	unit	0.1	0.1.0	
# ::edge	across	poss	east	0.1	0.1.1	
# ::edge	after	poss	distance-quantity	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	cause-01	ARG0	we	0	0.0	
# ::edge	cause-01	ARG1	across	0	0.1	
# ::edge	distance-quantity	mod	village	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	distance-quantity	quant	5	0.1.0.0.0.0	0.1.0.0.0.0.1	
# ::edge	distance-quantity	unit	mile	0.1.0.0.0.0	0.1.0.0.0.0.2	
# ::edge	unit	location	accident	0.1.0	0.1.0.0	
(c / cause-01 
      :ARG0 (w / we) 
      :ARG1 (a3 / across 
            :op1 (u / unit 
                  :location (a2 / accident 
                        :location (a / after 
                              :poss (d / distance-quantity 
                                    :mod (v / village) 
                                    :quant 5 
                                    :unit (m / mile))))) 
            :poss (e / east)))

# ::snt this cannot be accident it must be design he commented when at the age of 65 his great hour came
# ::tok this cannot be accident it must be design he commented when at the age of 65 his great hour came
# ::alignments 18-19|0.0.1+0.0 17-18|0.0.0 15-16|0.1.1 13-14|0 9-10|0.1.2 8-9|0.1.2.0 7-8|0.1 4-5|0.1.0 3-4|0.1.0.0 0-1|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:23.315
# ::node	0	age-01	13-14
# ::node	0.0	temporal-quantity	18-19
# ::node	0.0.0	great	17-18
# ::node	0.0.1	hour	18-19
# ::node	0.1	design-01	7-8
# ::node	0.1.0	it	4-5
# ::node	0.1.0.0	accident	3-4
# ::node	0.1.0.0.0	this	0-1
# ::node	0.1.1	65	15-16
# ::node	0.1.2	comment-01	9-10
# ::node	0.1.2.0	he	8-9
# ::root	0	age-01
# ::edge	accident	domain	this	0.1.0.0	0.1.0.0.0	
# ::edge	accident	poss	it	0.1.0.0	0.1.0	
# ::edge	age-01	ARG0	temporal-quantity	0	0.0	
# ::edge	age-01	ARG1	design-01	0	0.1	
# ::edge	comment-01	ARG0	he	0.1.2	0.1.2.0	
# ::edge	comment-01	ARG1	design-01	0.1.2	0.1	
# ::edge	design-01	ARG0	it	0.1	0.1.0	
# ::edge	design-01	ARG1	65	0.1	0.1.1	
# ::edge	great	op1	temporal-quantity	0.0.0	0.0	
# ::edge	temporal-quantity	unit	hour	0.0	0.0.1	
(a / age-01 
      :ARG0 (t / temporal-quantity 
            :op-of (g / great) 
            :unit (h / hour)) 
      :ARG1 (d / design-01 
            :ARG0 (i / it 
                  :poss-of (a2 / accident 
                        :domain (t2 / this))) 
            :ARG1 65 
            :ARG1-of (c / comment-01 
                  :ARG0 (h2 / he))))

# ::snt the argentinian brought roses and behaved as if she had contrived the entire accident expressly to embarrass him
# ::tok the argentinian brought roses and behaved as if she had contrived the entire accident expressly to embarrass him
# ::alignments 14-15|0.0.2 13-14|0.0.3 12-13|0.0.3.0 8-9|0.0.0 5-6|0.0 4-5|0 3-4|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:23.368
# ::node	0	and	4-5
# ::node	0.0	behave-01	5-6
# ::node	0.0.0	she	8-9
# ::node	0.0.1	rose	3-4
# ::node	0.0.2	express	14-15
# ::node	0.0.3	accident	13-14
# ::node	0.0.3.0	entire	12-13
# ::root	0	and
# ::edge	accident	mod	entire	0.0.3	0.0.3.0	
# ::edge	and	op1	behave-01	0	0.0	
# ::edge	behave-01	ARG0	she	0.0	0.0.0	
# ::edge	behave-01	ARG1	rose	0.0	0.0.1	
# ::edge	behave-01	purpose	accident	0.0	0.0.3	
# ::edge	express	op1	behave-01	0.0.2	0.0	
(a2 / and 
      :op1 (b / behave-01 
            :ARG0 (s / she) 
            :ARG1 (r / rose) 
            :op-of (e / express) 
            :purpose (a / accident 
                  :mod (e2 / entire))))

# ::snt he accepted that more foxes were killed in road accidents than by the culling by hunts, but mr mckie pointed out we see many threelegged foxes about that have been injured rather than killed outright in road accidents
# ::tok he accepted that more foxes were killed in road accidents than by the culling by hunts , but mr mckie pointed out we see many threelegged foxes about that have been injured rather than killed outright in road accidents
# ::alignments 38-39|0.0 37-38|0.0.0 35-36|0.2.0.0.0.0.0 34-35|0.2.0.0.0.0 31-32|0.2.0.0.0 24-25|0.1.0.0.0 23-24|0.2.0 22-23|0.2.0.0 20-21|0.2 17-18|0 9-10|0.1.1 8-9|0.1.1.0 6-7|0.1 1-2|0.1.0.0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:23.544
# ::node	0	contrast-01	17-18
# ::node	0.0	accident	38-39
# ::node	0.0.0	road	37-38
# ::node	0.1	kill-01	6-7
# ::node	0.1.0	he	0-1
# ::node	0.1.0.0	accept-01	1-2
# ::node	0.1.0.0.0	many	24-25
# ::node	0.1.1	accident	9-10
# ::node	0.1.1.0	road	8-9
# ::node	0.2	point-02	20-21
# ::node	0.2.0	see-01	23-24
# ::node	0.2.0.0	we	22-23
# ::node	0.2.0.0.0	injure-01	31-32
# ::node	0.2.0.0.0.0	kill-01	34-35
# ::node	0.2.0.0.0.0.0	outright	35-36
# ::root	0	contrast-01
# ::edge	accept-01	ARG0	he	0.1.0.0	0.1.0	
# ::edge	accept-01	ARG1	many	0.1.0.0	0.1.0.0.0	
# ::edge	accident	location	road	0.0	0.0.0	
# ::edge	accident	location	road	0.1.1	0.1.1.0	
# ::edge	contrast-01	ARG0	accident	0	0.0	
# ::edge	contrast-01	ARG1	kill-01	0	0.1	
# ::edge	contrast-01	ARG2	point-02	0	0.2	
# ::edge	injure-01	ARG1	we	0.2.0.0.0	0.2.0.0	
# ::edge	kill-01	ARG0	he	0.1	0.1.0	
# ::edge	kill-01	ARG1	injure-01	0.2.0.0.0.0	0.2.0.0.0	
# ::edge	kill-01	instrument	accident	0.1	0.1.1	
# ::edge	kill-01	manner	outright	0.2.0.0.0.0	0.2.0.0.0.0.0	
# ::edge	point-02	ARG1	see-01	0.2	0.2.0	
# ::edge	see-01	ARG0	we	0.2.0	0.2.0.0	
(c / contrast-01 
      :ARG0 (a / accident 
            :location (r / road)) 
      :ARG1 (k2 / kill-01 
            :ARG0 (h / he 
                  :ARG0-of (a3 / accept-01 
                        :ARG1 (m / many))) 
            :instrument (a2 / accident 
                  :location (r2 / road))) 
      :ARG2 (p / point-02 
            :ARG1 (s / see-01 
                  :ARG0 (w / we 
                        :ARG1-of (i / injure-01 
                              :ARG1-of (k / kill-01 
                                    :manner (o / outright)))))))

# ::snt he added a substantial number of inspections of transient activities were carried out and visits were also paid to all types of workplaces for other purposes such as accident and complaint investigations to give advice and to check on shortcomings previously identified
# ::tok he added a substantial number of inspections of transient activities were carried out and visits were also paid to all types of workplaces for other purposes such as accident and complaint investigations to give advice and to check on shortcomings previously identified
# ::alignments 41-42|0.0.0.0.2.0 40-41|0.0.0.0.2.0.1 39-40|0.0.0.0.2.0.0 35-36|0.0.0.1 34-35|0.0.0.1.0.0 33-34|0.0.0.1.0 31-32|0.0.0.1.0.1 30-31|0.0.0.1.0.1.0.2 29-30|0.0.0.1.0.1.0 28-29|0.0.0.1.0.1.0.1 26-27|0.0.0.1.0.1.0.0 25-26|0.0.0.1.0.1.0.2.0 24-25|0.0.0.1.0.1.0.2.0.0 20-21|0.0.0.0.2 19-20|0.0.0.0.2.1 17-18|0.0.0.0 16-17|0.0.0.0.3 14-15|0.0.0.0.1 13-14|0.0.0 9-10|0.0.0.0.0.1.0 6-7|0.0.0.0.0.1 4-5|0.0.0.0.0 3-4|0.0.0.0.0.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:23.999
# ::node	0	add-01	1-2
# ::node	0.0	he	0-1
# ::node	0.0.0	and	13-14
# ::node	0.0.0.0	pay-01	17-18
# ::node	0.0.0.0.0	number	4-5
# ::node	0.0.0.0.0.0	substantial	3-4
# ::node	0.0.0.0.0.1	inspect-01	6-7
# ::node	0.0.0.0.0.1.0	activity	9-10
# ::node	0.0.0.0.1	visit-01	14-15
# ::node	0.0.0.0.2	type	20-21
# ::node	0.0.0.0.2.0	identify-01	41-42
# ::node	0.0.0.0.2.0.0	shortcoming	39-40
# ::node	0.0.0.0.2.0.1	previous	40-41
# ::node	0.0.0.0.2.1	all	19-20
# ::node	0.0.0.0.3	also	16-17
# ::node	0.0.0.1	and	35-36
# ::node	0.0.0.1.0	give-01	33-34
# ::node	0.0.0.1.0.0	advise-01	34-35
# ::node	0.0.0.1.0.1	investigate-01	31-32
# ::node	0.0.0.1.0.1.0	and	29-30
# ::node	0.0.0.1.0.1.0.0	such	26-27
# ::node	0.0.0.1.0.1.0.1	accident	28-29
# ::node	0.0.0.1.0.1.0.2	complain-01	30-31
# ::node	0.0.0.1.0.1.0.2.0	purpose	25-26
# ::node	0.0.0.1.0.1.0.2.0.0	other	24-25
# ::root	0	add-01
# ::edge	add-01	ARG0	he	0	0.0	
# ::edge	and	op1	give-01	0.0.0.1	0.0.0.1.0	
# ::edge	and	op1	he	0.0.0	0.0	
# ::edge	and	op1	such	0.0.0.1.0.1.0	0.0.0.1.0.1.0.0	
# ::edge	and	op2	accident	0.0.0.1.0.1.0	0.0.0.1.0.1.0.1	
# ::edge	and	op2	pay-01	0.0.0	0.0.0.0	
# ::edge	and	op3	and	0.0.0	0.0.0.1	
# ::edge	and	op3	complain-01	0.0.0.1.0.1.0	0.0.0.1.0.1.0.2	
# ::edge	and	op4	investigate-01	0.0.0.1.0.1.0	0.0.0.1.0.1	
# ::edge	complain-01	ARG0	purpose	0.0.0.1.0.1.0.2	0.0.0.1.0.1.0.2.0	
# ::edge	give-01	ARG1	advise-01	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	identify-01	ARG0	type	0.0.0.0.2.0	0.0.0.0.2	
# ::edge	identify-01	ARG1	shortcoming	0.0.0.0.2.0	0.0.0.0.2.0.0	
# ::edge	identify-01	time	previous	0.0.0.0.2.0	0.0.0.0.2.0.1	
# ::edge	inspect-01	ARG1	activity	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	inspect-01	quant	number	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	investigate-01	ARG1	give-01	0.0.0.1.0.1	0.0.0.1.0	
# ::edge	number	mod	substantial	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	pay-01	ARG0	number	0.0.0.0	0.0.0.0.0	
# ::edge	pay-01	ARG1	visit-01	0.0.0.0	0.0.0.0.1	
# ::edge	pay-01	ARG2	type	0.0.0.0	0.0.0.0.2	
# ::edge	pay-01	mod	also	0.0.0.0	0.0.0.0.3	
# ::edge	purpose	mod	other	0.0.0.1.0.1.0.2.0	0.0.0.1.0.1.0.2.0.0	
# ::edge	type	quant	all	0.0.0.0.2	0.0.0.0.2.1	
(a9 / add-01 
      :ARG0 (h / he 
            :op-of (a7 / and 
                  :op1 (p3 / pay-01 
                        :ARG0 (n / number 
                              :mod (s3 / substantial) 
                              :quant-of (i3 / inspect-01 
                                    :ARG1 (a8 / activity))) 
                        :ARG1 (v / visit-01) 
                        :ARG2 (t / type 
                              :ARG0-of (i / identify-01 
                                    :ARG1 (s / shortcoming) 
                                    :time (p / previous)) 
                              :quant (a5 / all)) 
                        :mod (a6 / also)) 
                  :op2 (a / and 
                        :op1 (g / give-01 
                              :ARG1 (a2 / advise-01) 
                              :ARG1-of (i2 / investigate-01 
                                    :op-of (a3 / and 
                                          :op1 (s2 / such) 
                                          :op2 (a4 / accident) 
                                          :op3 (c / complain-01 
                                                :ARG0 (p2 / purpose 
                                                      :mod (o / other))))))))))

# ::snt mr clive adkins the chairman of overthorpe residents association said the ban was necessary to prevent speeding drivers using the village as a short cut causing accidents
# ::tok mr clive adkins the chairman of overthorpe residents association said the ban was necessary to prevent speeding drivers using the village as a short cut causing accidents
# ::alignments 26-27|0.0 25-26|0 23-24|0.1.0.1.0.0 20-21|0.1.1 18-19|0.1 17-18|0.1.0.0+0.1.0 15-16|0.1.0.1 11-12|0.1.0.1.0 9-10|0.1.0.1.0.1 8-9|0.1.0.1.0.1.0.0.0 7-8|0.1.0.1.0.1.0.0.0.0.0+0.1.0.1.0.1.0.0.0.0 4-5|0.1.0.1.0.1.0+0.1.0.1.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:24.277
# ::node	0	cause-01	25-26
# ::node	0.0	accident	26-27
# ::node	0.1	use-01	18-19
# ::node	0.1.0	person	17-18
# ::node	0.1.0.0	drive-01	17-18
# ::node	0.1.0.1	prevent-01	15-16
# ::node	0.1.0.1.0	ban-01	11-12
# ::node	0.1.0.1.0.0	short	23-24
# ::node	0.1.0.1.0.1	say-01	9-10
# ::node	0.1.0.1.0.1.0	chairman	4-5
# ::node	0.1.0.1.0.1.0.0	have-org-role-91	4-5
# ::node	0.1.0.1.0.1.0.0.0	associate-01	8-9
# ::node	0.1.0.1.0.1.0.0.0.0	person	7-8
# ::node	0.1.0.1.0.1.0.0.0.0.0	reside-01	7-8
# ::node	0.1.1	village	20-21
# ::root	0	cause-01
# ::edge	associate-01	ARG1	person	0.1.0.1.0.1.0.0.0	0.1.0.1.0.1.0.0.0.0	
# ::edge	ban-01	ARG1	short	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	cause-01	ARG1	accident	0	0.0	
# ::edge	drive-01	ARG0	person	0.1.0.0	0.1.0	
# ::edge	have-org-role-91	ARG1	associate-01	0.1.0.1.0.1.0.0	0.1.0.1.0.1.0.0.0	
# ::edge	have-org-role-91	ARG2	chairman	0.1.0.1.0.1.0.0	0.1.0.1.0.1.0	
# ::edge	prevent-01	ARG0	ban-01	0.1.0.1	0.1.0.1.0	
# ::edge	prevent-01	ARG1	person	0.1.0.1	0.1.0	
# ::edge	reside-01	ARG0	person	0.1.0.1.0.1.0.0.0.0.0	0.1.0.1.0.1.0.0.0.0	
# ::edge	say-01	ARG0	chairman	0.1.0.1.0.1	0.1.0.1.0.1.0	
# ::edge	say-01	ARG1	ban-01	0.1.0.1.0.1	0.1.0.1.0	
# ::edge	use-01	ARG0	person	0.1	0.1.0	
# ::edge	use-01	ARG1	village	0.1	0.1.1	
# ::edge	use-01	time	cause-01	0.1	0	
(c / cause-01 
      :ARG1 (a / accident) 
      :time-of (u / use-01 
            :ARG0 (p / person 
                  :ARG0-of (d / drive-01) 
                  :ARG1-of (p2 / prevent-01 
                        :ARG0 (b / ban-01 
                              :ARG1 (s / short) 
                              :ARG1-of (s2 / say-01 
                                    :ARG0 (c2 / chairman 
                                          :ARG2-of (h / have-org-role-91 
                                                :ARG1 (a2 / associate-01 
                                                      :ARG1 (p3 / person 
                                                            :ARG0-of (r / reside-01))))))))) 
            :ARG1 (v / village)))

# ::snt  mr tappin was commenting after 30 of his tour drivers successfully completed a royal society for the prevention of accidents defensive driving training course
# ::tok mr tappin was commenting after 30 of his tour drivers successfully completed a royal society for the prevention of accidents defensive driving training course
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:24.277
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt it is the third accident in the soviet unions ageing submarine fleet in the past four months
# ::tok it is the third accident in the soviet unions ageing submarine fleet in the past four months
# ::alignments 16-17|0.3.0.1+0.3.0 15-16|0.3.0.0 14-15|0.3 11-12|0.1 10-11|0.1.0 9-10|0 8-9|0.2 4-5|0.0.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:24.551
# ::node	0	age-01	9-10
# ::node	0.0	it	0-1
# ::node	0.0.0	accident	4-5
# ::node	0.1	fleet	11-12
# ::node	0.1.0	submarine	10-11
# ::node	0.2	union	8-9
# ::node	0.3	past	14-15
# ::node	0.3.0	temporal-quantity	16-17
# ::node	0.3.0.0	4	15-16
# ::node	0.3.0.1	month	16-17
# ::root	0	age-01
# ::edge	accident	domain	it	0.0.0	0.0	
# ::edge	age-01	ARG0	it	0	0.0	
# ::edge	age-01	ARG1	fleet	0	0.1	
# ::edge	age-01	ARG2	union	0	0.2	
# ::edge	age-01	time	past	0	0.3	
# ::edge	fleet	mod	submarine	0.1	0.1.0	
# ::edge	past	op1	temporal-quantity	0.3	0.3.0	
# ::edge	temporal-quantity	quant	4	0.3.0	0.3.0.0	
# ::edge	temporal-quantity	unit	month	0.3.0	0.3.0.1	
(a / age-01 
      :ARG0 (i / it 
            :domain-of (a2 / accident)) 
      :ARG1 (f / fleet 
            :mod (s / submarine)) 
      :ARG2 (u / union) 
      :time (p / past 
            :op1 (t / temporal-quantity 
                  :quant 4 
                  :unit (m / month))))

# ::snt   construction giant mowlem has been ordered to pay out nearly 5000 after a worker lost a hand in an accident at its m40 concrete batching plant near ardley, the company was fined 2000 by bicester magistrates and told to pay 2000 the maximum level of compensation the magistrates could impose to the victim of the accident mr john nibloe
# ::tok construction giant mowlem has been ordered to pay out nearly 5000 after a worker lost a hand in an accident at its m40 concrete batching plant near ardley , the company was fined 2000 by bicester magistrates and told to pay 2000 the maximum level of compensation the magistrates could impose to the victim of the accident mr john nibloe
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:24.552
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the scheme is part of a drive to improve road safety to help reach its target of reducing road accident casualties by onethird by the year 2000
# ::tok the scheme is part of a drive to improve road safety to help reach its target of reducing road accident casualties by onethird by the year 2000
# ::alignments 26-27|0.0.0+0.0 25-26|0.1.1 20-21|0.1.0 19-20|0.1.0.0 18-19|0.1.0.0.0 17-18|0.1 15-16|0 13-14|0.2 12-13|0.2.0 10-11|0.2.0.0.0 9-10|0.2.0.0.0.1 8-9|0.2.0.0 6-7|0.2.0.0.1 1-2|0.2.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:24.788
# ::node	0	target-01	15-16
# ::node	0.0	date-entity	26-27
# ::node	0.0.0	2000	26-27
# ::node	0.1	reduce-01	17-18
# ::node	0.1.0	casualty	20-21
# ::node	0.1.0.0	accident	19-20
# ::node	0.1.0.0.0	road	18-19
# ::node	0.1.1	year	25-26
# ::node	0.2	reach-01	13-14
# ::node	0.2.0	help-01	12-13
# ::node	0.2.0.0	improve-01	8-9
# ::node	0.2.0.0.0	safe-41	10-11
# ::node	0.2.0.0.0.0	scheme	1-2
# ::node	0.2.0.0.0.1	road	9-10
# ::node	0.2.0.0.1	drive-01	6-7
# ::root	0	target-01
# ::edge	accident	mod	road	0.1.0.0	0.1.0.0.0	
# ::edge	casualty	mod	accident	0.1.0	0.1.0.0	
# ::edge	date-entity	year	2000	0.0	0.0.0	
# ::edge	drive-01	ARG1	improve-01	0.2.0.0.1	0.2.0.0	
# ::edge	help-01	ARG1	reach-01	0.2.0	0.2	
# ::edge	improve-01	ARG1	safe-41	0.2.0.0	0.2.0.0.0	
# ::edge	improve-01	ARG2	help-01	0.2.0.0	0.2.0	
# ::edge	reach-01	ARG1	target-01	0.2	0	
# ::edge	reduce-01	ARG1	casualty	0.1	0.1.0	
# ::edge	reduce-01	ARG3	year	0.1	0.1.1	
# ::edge	safe-41	ARG0	scheme	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	safe-41	ARG1	road	0.2.0.0.0	0.2.0.0.0.1	
# ::edge	target-01	ARG0	date-entity	0	0.0	
# ::edge	target-01	ARG1	reduce-01	0	0.1	
(t / target-01 
      :ARG0 (d / date-entity 
            :year 2000) 
      :ARG1 (r2 / reduce-01 
            :ARG1 (c / casualty 
                  :mod (a / accident 
                        :mod (r / road))) 
            :ARG3 (y / year)) 
      :ARG1-of (r3 / reach-01 
            :ARG1-of (h / help-01 
                  :ARG2-of (i / improve-01 
                        :ARG1 (s / safe-41 
                              :ARG0 (s2 / scheme) 
                              :ARG1 (r4 / road)) 
                        :ARG1-of (d2 / drive-01)))))

# ::snt the death toll in australias worst road accident where two tourist coaches crashed rose to 35 yesterday
# ::tok the death toll in australias worst road accident where two tourist coaches crashed rose to 35 yesterday
# ::alignments 16-17|0.0.0.0.2 15-16|0.0.0.0.1 13-14|0.0.0.0 12-13|0.0.0 10-11|0+0.0 9-10|0.0.1 7-8|0.1 6-7|0.1.0 5-6|0.1.1 2-3|0.0.0.0.0 1-2|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:25.039
# ::node	0	tour-01	10-11
# ::node	0.0	person	10-11
# ::node	0.0.0	crash-01	12-13
# ::node	0.0.0.0	rise-01	13-14
# ::node	0.0.0.0.0	toll	2-3
# ::node	0.0.0.0.0.0	die-01	1-2
# ::node	0.0.0.0.1	35	15-16
# ::node	0.0.0.0.2	yesterday	16-17
# ::node	0.0.1	2	9-10
# ::node	0.1	accident	7-8
# ::node	0.1.0	road	6-7
# ::node	0.1.1	bad	5-6
# ::root	0	tour-01
# ::edge	accident	location	road	0.1	0.1.0	
# ::edge	accident	mod	bad	0.1	0.1.1	
# ::edge	crash-01	ARG0	person	0.0.0	0.0	
# ::edge	crash-01	ARG1	rise-01	0.0.0	0.0.0.0	
# ::edge	person	quant	2	0.0	0.0.1	
# ::edge	rise-01	ARG1	toll	0.0.0.0	0.0.0.0.0	
# ::edge	rise-01	ARG4	35	0.0.0.0	0.0.0.0.1	
# ::edge	rise-01	time	yesterday	0.0.0.0	0.0.0.0.2	
# ::edge	toll	mod	die-01	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	tour-01	ARG0	person	0	0.0	
# ::edge	tour-01	ARG1	accident	0	0.1	
(t / tour-01 
      :ARG0 (p / person 
            :ARG0-of (c / crash-01 
                  :ARG1 (r / rise-01 
                        :ARG1 (t2 / toll 
                              :mod (d / die-01)) 
                        :ARG4 35 
                        :time (y / yesterday))) 
            :quant 2) 
      :ARG1 (a / accident 
            :location (r2 / road) 
            :mod (b / bad)))

# ::snt but we couldnt let you hang out as an accident of booze
# ::tok but we couldnt let you hang out as an accident of booze
# ::alignments 11-12|0.0.1.1.0 9-10|0.0.1.1 5-6|0.0.1 4-5|0.0.1.0 3-4|0.0 1-2|0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:25.058
# ::node	0	contrast-01	0-1
# ::node	0.0	let-01	3-4
# ::node	0.0.0	we	1-2
# ::node	0.0.1	hang-01	5-6
# ::node	0.0.1.0	you	4-5
# ::node	0.0.1.1	accident	9-10
# ::node	0.0.1.1.0	booze-01	11-12
# ::root	0	contrast-01
# ::edge	accident	topic	booze-01	0.0.1.1	0.0.1.1.0	
# ::edge	contrast-01	ARG2	let-01	0	0.0	
# ::edge	hang-01	ARG0	you	0.0.1	0.0.1.0	
# ::edge	hang-01	location	accident	0.0.1	0.0.1.1	
# ::edge	let-01	ARG0	we	0.0	0.0.0	
# ::edge	let-01	ARG1	hang-01	0.0	0.0.1	
(c / contrast-01 
      :ARG2 (l / let-01 
            :ARG0 (w / we) 
            :ARG1 (h / hang-01 
                  :ARG0 (y / you) 
                  :location (a / accident 
                        :topic (b / booze-01)))))

# ::snt its the one about the bunch of old friends who hold a teaparty for colin to console him after losing his girlfriend in a drowning accident only to end up in need of tea and sympathy themselves
# ::tok its the one about the bunch of old friends who hold a teaparty for colin to console him after losing his girlfriend in a drowning accident only to end up in need of tea and sympathy themselves
# ::alignments 35-36|0.2 34-35|0 33-34|0.1 31-32|0.0 26-27|0.0.1.0.0.0 25-26|0.0.1.0.0 21-22|0.0.1.0.1+0.0.1.0 19-20|0.0.1 18-19|0.0.1.1 8-9|0.0.0.1+0.0.0 7-8|0.0.0.2 5-6|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:25.524
# ::node	0	and	34-35
# ::node	0.0	need-01	31-32
# ::node	0.0.0	have-rel-role-91	8-9
# ::node	0.0.0.0	bunch	5-6
# ::node	0.0.0.1	friend	8-9
# ::node	0.0.0.2	old	7-8
# ::node	0.0.1	lose-02	19-20
# ::node	0.0.1.0	have-rel-role-91	21-22
# ::node	0.0.1.0.0	accident	25-26
# ::node	0.0.1.0.0.0	only	26-27
# ::node	0.0.1.0.1	girlfriend	21-22
# ::node	0.0.1.1	after	18-19
# ::node	0.1	tea	33-34
# ::node	0.2	sympathy	35-36
# ::root	0	and
# ::edge	accident	mod	only	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	after	op1	lose-02	0.0.1.1	0.0.1	
# ::edge	and	op1	tea	0	0.1	
# ::edge	and	op2	sympathy	0	0.2	
# ::edge	have-rel-role-91	ARG0	accident	0.0.1.0	0.0.1.0.0	
# ::edge	have-rel-role-91	ARG1	bunch	0.0.0	0.0.0.0	
# ::edge	have-rel-role-91	ARG2	friend	0.0.0	0.0.0.1	
# ::edge	have-rel-role-91	ARG2	girlfriend	0.0.1.0	0.0.1.0.1	
# ::edge	have-rel-role-91	mod	old	0.0.0	0.0.0.2	
# ::edge	lose-02	ARG1	have-rel-role-91	0.0.1	0.0.1.0	
# ::edge	lose-02	purpose	need-01	0.0.1	0.0	
# ::edge	need-01	ARG1	and	0.0	0	
# ::edge	need-01	ARG2	have-rel-role-91	0.0	0.0.0	
(a / and 
      :ARG1-of (n / need-01 
            :ARG2 (h2 / have-rel-role-91 
                  :ARG1 (b / bunch) 
                  :ARG2 (f / friend) 
                  :mod (o2 / old)) 
            :purpose-of (l / lose-02 
                  :ARG1 (h / have-rel-role-91 
                        :ARG0 (a2 / accident 
                              :mod (o / only)) 
                        :ARG2 (g / girlfriend)) 
                  :op-of (a3 / after))) 
      :op1 (t / tea) 
      :op2 (s / sympathy))

# ::snt ms cincala was one of more than 160 people who survived one of americas worst aviation accidents
# ::tok ms cincala was one of more than 160 people who survived one of americas worst aviation accidents
# ::alignments 16-17|0.0 15-16|0.0.1 14-15|0 10-11|0.0.0 7-8|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:25.586
# ::node	0	bad	14-15
# ::node	0.0	accident	16-17
# ::node	0.0.0	survive-01	10-11
# ::node	0.0.0.0	160	7-8
# ::node	0.0.1	aviation	15-16
# ::root	0	bad
(b / bad 
      :mod-of (a / accident 
            :ARG1-of (s / survive-01 
                  :ARG0 160) 
            :mod (a2 / aviation)))

# ::snt charlie hatton had passed that way a quarter of an hour before the accident, he couldnt have seen the accident
# ::tok charlie hatton had passed that way a quarter of an hour before the accident , he couldnt have seen the accident
# ::alignments 20-21|0.1 18-19|0 15-16|0.0 13-14|0.0.0.0.0.0 11-12|0.0.0.0.0 10-11|0.0.0+0.0.0.0 5-6|0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:25.662
# ::node	0	see-01	18-19
# ::node	0.0	he	15-16
# ::node	0.0.0	hour	10-11
# ::node	0.0.0.0	temporal-quantity	10-11
# ::node	0.0.0.0.0	before	11-12
# ::node	0.0.0.0.0.0	accident	13-14
# ::node	0.0.0.0.0.0.0	way	5-6
# ::node	0.1	accident	20-21
# ::root	0	see-01
# ::edge	before	op1	accident	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	hour	poss	he	0.0.0	0.0	
# ::edge	see-01	ARG0	he	0	0.0	
# ::edge	see-01	ARG1	accident	0	0.1	
# ::edge	temporal-quantity	time	before	0.0.0.0	0.0.0.0.0	
# ::edge	temporal-quantity	unit	hour	0.0.0.0	0.0.0	
# ::edge	way	location	accident	0.0.0.0.0.0.0	0.0.0.0.0.0	
(s / see-01 
      :ARG0 (h / he 
            :poss-of (h2 / hour 
                  :unit-of (t / temporal-quantity 
                        :time (b / before 
                              :op1 (a2 / accident 
                                    :location-of (w / way)))))) 
      :ARG1 (a / accident))

# ::snt when the royal sussex hospital called my wife marlies after the bomb during the 1984 tory conference they told her there had been a little accident but that i was ok
# ::tok when the royal sussex hospital called my wife marlies after the bomb during the 1984 tory conference they told her there had been a little accident but that i was ok
# ::alignments 30-31|0.2 28-29|0.1.2 26-27|0 25-26|0.1.1 24-25|0.1.1.0 18-19|0.1 17-18|0.1.0 16-17|0.1.2.0.0.0 15-16|0.1.2.0.0.0.0.0.0+0.1.2.0.0.0.0.0+0.1.2.0.0.0.0 14-15|0.1.2.0.0.0.1.0+0.1.2.0.0.0.1 11-12|0.1.2.0.2.0 9-10|0.1.2.0.2 7-8|0.1.2.0.1+0.1.2.0 4-5|0.1.2.0.0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:26.206
# ::node	0	contrast-01	26-27
# ::node	0.0	royal	2-3
# ::node	0.1	tell-01	18-19
# ::node	0.1.0	they	17-18
# ::node	0.1.1	accident	25-26
# ::node	0.1.1.0	little	24-25
# ::node	0.1.2	i	28-29
# ::node	0.1.2.0	have-rel-role-91	7-8
# ::node	0.1.2.0.0	hospital	4-5
# ::node	0.1.2.0.0.0	conference	16-17
# ::node	0.1.2.0.0.0.0	political-party	15-16
# ::node	0.1.2.0.0.0.0.0	name	15-16
# ::node	0.1.2.0.0.0.0.0.0	"Tory"	15-16
# ::node	0.1.2.0.0.0.1	date-entity	14-15
# ::node	0.1.2.0.0.0.1.0	1984	14-15
# ::node	0.1.2.0.1	wife	7-8
# ::node	0.1.2.0.2	after	9-10
# ::node	0.1.2.0.2.0	bomb	11-12
# ::node	0.2	ok	30-31
# ::root	0	contrast-01
# ::edge	accident	mod	little	0.1.1	0.1.1.0	
# ::edge	after	op1	bomb	0.1.2.0.2	0.1.2.0.2.0	
# ::edge	conference	mod	political-party	0.1.2.0.0.0	0.1.2.0.0.0.0	
# ::edge	conference	poss	hospital	0.1.2.0.0.0	0.1.2.0.0	
# ::edge	conference	time	date-entity	0.1.2.0.0.0	0.1.2.0.0.0.1	
# ::edge	contrast-01	ARG0	royal	0	0.0	
# ::edge	contrast-01	ARG1	tell-01	0	0.1	
# ::edge	contrast-01	ARG2	ok	0	0.2	
# ::edge	date-entity	year	1984	0.1.2.0.0.0.1	0.1.2.0.0.0.1.0	
# ::edge	have-rel-role-91	ARG0	hospital	0.1.2.0	0.1.2.0.0	
# ::edge	have-rel-role-91	ARG1	i	0.1.2.0	0.1.2	
# ::edge	have-rel-role-91	ARG2	wife	0.1.2.0	0.1.2.0.1	
# ::edge	have-rel-role-91	location	after	0.1.2.0	0.1.2.0.2	
# ::edge	name	op1	"Tory"	0.1.2.0.0.0.0.0	0.1.2.0.0.0.0.0.0	
# ::edge	political-party	name	name	0.1.2.0.0.0.0	0.1.2.0.0.0.0.0	
# ::edge	tell-01	ARG0	they	0.1	0.1.0	
# ::edge	tell-01	ARG1	accident	0.1	0.1.1	
# ::edge	tell-01	ARG2	i	0.1	0.1.2	
(c / contrast-01 
      :ARG0 (r / royal) 
      :ARG1 (t / tell-01 
            :ARG0 (t2 / they) 
            :ARG1 (a / accident 
                  :mod (l / little)) 
            :ARG2 (i / i 
                  :ARG1-of (h / have-rel-role-91 
                        :ARG0 (h2 / hospital 
                              :poss-of (c2 / conference 
                                    :mod (p / political-party 
                                          :name (n / name 
                                                :op1 "Tory")) 
                                    :time (d / date-entity 
                                          :year 1984))) 
                        :ARG2 (w / wife) 
                        :location (a2 / after 
                              :op1 (b / bomb))))) 
      :ARG2 (o / ok))

# ::snt  maria lindsey clark born in valencia southeastern spain who arrived in britain as an accident of fate after the spanish civil war aged just seven has herself been described as a great ambassador
# ::tok maria lindsey clark born in valencia southeastern spain who arrived in britain as an accident of fate after the spanish civil war aged just seven has herself been described as a great ambassador
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:26.206
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the fatal accidents act 1976 as amended by the administration of justice act 1982 provided by section 31 that in an action by the deceaseds dependants damages may be awarded as are proportioned to the injury resulting from the death to the dependants respectively
# ::tok the fatal accidents act 1976 as amended by the administration of justice act 1982 provided by section 31 that in an action by the deceaseds dependants damages may be awarded as are proportioned to the injury resulting from the death to the dependants respectively
# ::alignments 43-44|0.1.0.2.1.0 39-40|0.1.0.2.0 36-37|0.1.0.2 35-36|0.1.0.2.1 29-30|0.1.0 27-28|0.1.1+0.1 26-27|0.1.0.1 21-22|0.1.0.0 16-17|0.0 14-15|0 13-14|0.1.0.2.1.1.0+0.1.0.2.1.1 12-13|0.3.0 11-12|0.3.0.0 9-10|0.3 6-7|0.2.1.0 4-5|0.2.1.1+0.2.1 3-4|0.2 2-3|0.2.0 1-2|0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:27.056
# ::node	0	provide-01	14-15
# ::node	0.0	section	16-17
# ::node	0.1	date-entity	27-28
# ::node	0.1.0	award-01	29-30
# ::node	0.1.0.0	action	21-22
# ::node	0.1.0.1	damage-01	26-27
# ::node	0.1.0.2	result-01	36-37
# ::node	0.1.0.2.0	die-01	39-40
# ::node	0.1.0.2.1	injure-01	35-36
# ::node	0.1.0.2.1.0	respective	43-44
# ::node	0.1.0.2.1.1	date-entity	13-14
# ::node	0.1.0.2.1.1.0	1982	13-14
# ::node	0.1.1	5	27-28
# ::node	0.2	act-02	3-4
# ::node	0.2.0	accident	2-3
# ::node	0.2.0.0	fatal	1-2
# ::node	0.2.1	date-entity	4-5
# ::node	0.2.1.0	amend-01	6-7
# ::node	0.2.1.1	1976	4-5
# ::node	0.3	administrate-01	9-10
# ::node	0.3.0	act-02	12-13
# ::node	0.3.0.0	justice	11-12
# ::root	0	provide-01
# ::edge	accident	mod	fatal	0.2.0	0.2.0.0	
# ::edge	act-02	ARG1	accident	0.2	0.2.0	
# ::edge	act-02	ARG1	justice	0.3.0	0.3.0.0	
# ::edge	act-02	ARG2	provide-01	0.2	0	
# ::edge	act-02	time	date-entity	0.2	0.2.1	
# ::edge	administrate-01	ARG1	act-02	0.3	0.3.0	
# ::edge	amend-01	ARG1	date-entity	0.2.1.0	0.2.1	
# ::edge	award-01	ARG0	action	0.1.0	0.1.0.0	
# ::edge	award-01	ARG1	damage-01	0.1.0	0.1.0.1	
# ::edge	award-01	ARG2	result-01	0.1.0	0.1.0.2	
# ::edge	date-entity	domain	award-01	0.1	0.1.0	
# ::edge	date-entity	month	5	0.1	0.1.1	
# ::edge	date-entity	year	1976	0.2.1	0.2.1.1	
# ::edge	date-entity	year	1982	0.1.0.2.1.1	0.1.0.2.1.1.0	
# ::edge	injure-01	ARG0	respective	0.1.0.2.1	0.1.0.2.1.0	
# ::edge	injure-01	ARG1	date-entity	0.1.0.2.1	0.1.0.2.1.1	
# ::edge	provide-01	ARG0	section	0	0.0	
# ::edge	provide-01	ARG1	date-entity	0	0.1	
# ::edge	provide-01	time	administrate-01	0	0.3	
# ::edge	result-01	ARG1	die-01	0.1.0.2	0.1.0.2.0	
# ::edge	result-01	ARG2	injure-01	0.1.0.2	0.1.0.2.1	
(p / provide-01 
      :ARG0 (s / section) 
      :ARG1 (d2 / date-entity 
            :domain (a / award-01 
                  :ARG0 (a2 / action) 
                  :ARG1 (d3 / damage-01) 
                  :ARG2 (r2 / result-01 
                        :ARG1 (d / die-01) 
                        :ARG2 (i / injure-01 
                              :ARG0 (r / respective) 
                              :ARG1 (d4 / date-entity 
                                    :year 1982)))) 
            :month 5) 
      :ARG2-of (a6 / act-02 
            :ARG1 (a7 / accident 
                  :mod (f / fatal)) 
            :time (d5 / date-entity 
                  :ARG1-of (a5 / amend-01) 
                  :year 1976)) 
      :time (a4 / administrate-01 
            :ARG1 (a3 / act-02 
                  :ARG1 (j / justice))))

# ::snt a team from the st john ambulance staged a simulated car accident teas were served in the scout and guide centre and there was a tombola and raffle
# ::tok a team from the st john ambulance staged a simulated car accident teas were served in the scout and guide centre and there was a tombola and raffle
# ::alignments 26-27|0 21-22|0.0.1 19-20|0.0.0.0 18-19|0.0.0 14-15|0.0 11-12|0.0.1.0.1 10-11|0.0.0.0.0 7-8|0.0.1.0 6-7|0.0.1.0.2 1-2|0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:27.241
# ::node	0	and	26-27
# ::node	0.0	serve-01	14-15
# ::node	0.0.0	and	18-19
# ::node	0.0.0.0	guide-01	19-20
# ::node	0.0.0.0.0	car	10-11
# ::node	0.0.1	and	21-22
# ::node	0.0.1.0	stage-01	7-8
# ::node	0.0.1.0.0	team	1-2
# ::node	0.0.1.0.1	accident	11-12
# ::node	0.0.1.0.2	ambulance	6-7
# ::root	0	and
(a / and 
      :ARG0-of (s / serve-01 
            :ARG1 (a3 / and 
                  :op1 (g / guide-01 
                        :ARG1 (c / car))) 
            :op-of (a2 / and 
                  :op1 (s2 / stage-01 
                        :ARG0 (t / team) 
                        :ARG1 (a4 / accident) 
                        :manner (a5 / ambulance)))))

# ::snt not killing him deliberately of course she knew him too well to entertain that but she might assume an accident dash
# ::tok not killing him deliberately of course she knew him too well to entertain that but she might assume an accident dash
# ::alignments 19-20|0.0.1.0 17-18|0.0.0.0 15-16|0.0.0.0.0 14-15|0 12-13|0.0.1 10-11|0.0.2 9-10|0.0.1.1 7-8|0.0 6-7|0.0.0 3-4|0.1.0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:27.712
# ::node	0	contrast-01	14-15
# ::node	0.0	know-01	7-8
# ::node	0.0.0	she	6-7
# ::node	0.0.0.0	assume-02	17-18
# ::node	0.0.0.0.0	she	15-16
# ::node	0.0.1	entertain-01	12-13
# ::node	0.0.1.0	accident	19-20
# ::node	0.0.1.1	too	9-10
# ::node	0.0.2	well	10-11
# ::node	0.1	kill-01	1-2
# ::node	0.1.0	deliberate	3-4
# ::root	0	contrast-01
# ::edge	assume-02	ARG0	she	0.0.0.0	0.0.0.0.0	
# ::edge	assume-02	ARG1	she	0.0.0.0	0.0.0	
# ::edge	contrast-01	ARG1	know-01	0	0.0	
# ::edge	entertain-01	ARG1	accident	0.0.1	0.0.1.0	
# ::edge	kill-01	ARG1	contrast-01	0.1	0	
# ::edge	kill-01	manner	deliberate	0.1	0.1.0	
# ::edge	know-01	ARG0	she	0.0	0.0.0	
# ::edge	know-01	ARG1	entertain-01	0.0	0.0.1	
# ::edge	know-01	degree	well	0.0	0.0.2	
# ::edge	too	purpose	entertain-01	0.0.1.1	0.0.1	
(c / contrast-01 
      :ARG1 (k / know-01 
            :ARG0 (s2 / she 
                  :ARG1-of (a2 / assume-02 
                        :ARG0 (s / she))) 
            :ARG1 (e / entertain-01 
                  :ARG1 (a / accident) 
                  :purpose-of (t / too)) 
            :degree (w / well)) 
      :ARG1-of (k2 / kill-01 
            :manner (d / deliberate)))

# ::snt mass unemployment was a puzzling accident perhaps even a mean trick which the capitalists were playing on the labour government it was not regarded as an inevitable outcome of the existing economic system at any rate for some time
# ::tok mass unemployment was a puzzling accident perhaps even a mean trick which the capitalists were playing on the labour government it was not regarded as an inevitable outcome of the existing economic system at any rate for some time
# ::alignments 38-39|0.0.1.1.2 37-38|0.0.1.1.2.0 35-36|0.0.1.1.3 34-35|0.0.1.1.3.0 32-33|0.0.1 31-32|0.0.1.2 30-31|0.0.1.0 27-28|0.0 26-27|0 23-24|0.0.0 20-21|0.0.0.1 18-19|0.0.1.0.0 15-16|0.0.1.1 13-14|0.0.1.1.0 10-11|0.0.1.1.1 9-10|0.0.1.1.1.0 6-7|0.0.0.0 5-6|0.0.1.1.1.0.0 1-2|0.0.1.1.1.0.0.0.1+0.0.1.1.1.0.0.0 0-1|0.0.1.1.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:28.480
# ::node	0	inevitable	26-27
# ::node	0.0	outcome	27-28
# ::node	0.0.0	regard-01	23-24
# ::node	0.0.0.0	perhaps	6-7
# ::node	0.0.0.1	it	20-21
# ::node	0.0.1	system	32-33
# ::node	0.0.1.0	exist-01	30-31
# ::node	0.0.1.0.0	labour	18-19
# ::node	0.0.1.1	play-01	15-16
# ::node	0.0.1.1.0	capitalist	13-14
# ::node	0.0.1.1.1	trick	10-11
# ::node	0.0.1.1.1.0	mean-01	9-10
# ::node	0.0.1.1.1.0.0	accident	5-6
# ::node	0.0.1.1.1.0.0.0	employ-01	1-2
# ::node	0.0.1.1.1.0.0.0.0	mass	0-1
# ::node	0.0.1.1.1.0.0.0.1	-	1-2
# ::node	0.0.1.1.2	time	38-39
# ::node	0.0.1.1.2.0	some	37-38
# ::node	0.0.1.1.3	rate	35-36
# ::node	0.0.1.1.3.0	any	34-35
# ::node	0.0.1.2	economy	31-32
# ::root	0	inevitable
(i / inevitable 
      :mod-of (o / outcome 
            :ARG2-of (r2 / regard-01 
                  :ARG0 (p2 / perhaps) 
                  :ARG1 (i2 / it)) 
            :poss (s2 / system 
                  :ARG1-of (e2 / exist-01 
                        :ARG0 (l / labour)) 
                  :condition-of (p / play-01 
                        :ARG0 (c / capitalist) 
                        :ARG1 (t2 / trick 
                              :ARG1-of (m / mean-01 
                                    :ARG0 (a2 / accident 
                                          :domain (e3 / employ-01 
                                                :ARG1 (m2 / mass) 
                                                :polarity -)))) 
                        :condition (t / time 
                              :quant (s / some)) 
                        :condition (r / rate 
                              :mod (a / any))) 
                  :mod (e / economy))))

# ::snt how could one have survived such an accident she sought a method to spare gerrards anxiety while official hope for gower lingered
# ::tok how could one have survived such an accident she sought a method to spare gerrards anxiety while official hope for gower lingered
# ::alignments 18-19|0 17-18|0.1.0+0.1 15-16|0.0.0.0.1.2 13-14|0.0.0.0.1.2.0 11-12|0.0.0.0.1.1 9-10|0.0.0.0.1 8-9|0.0.0.0.1.0 7-8|0.0.0.0 5-6|0.0.0.0.0 4-5|0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:28.884
# ::node	0	hope-01	18-19
# ::node	0.0	possible	1-2
# ::node	0.0.0	survive-01	4-5
# ::node	0.0.0.0	accident	7-8
# ::node	0.0.0.0.0	such	5-6
# ::node	0.0.0.0.1	seek-01	9-10
# ::node	0.0.0.0.1.0	she	8-9
# ::node	0.0.0.0.1.1	method	11-12
# ::node	0.0.0.0.1.2	anxiety	15-16
# ::node	0.0.0.0.1.2.0	spare-02	13-14
# ::node	0.1	have-org-role-91	17-18
# ::node	0.1.0	official	17-18
# ::root	0	hope-01
# ::edge	accident	mod	such	0.0.0.0	0.0.0.0.0	
# ::edge	have-org-role-91	ARG2	official	0.1	0.1.0	
# ::edge	hope-01	ARG1	possible	0	0.0	
# ::edge	hope-01	mod	have-org-role-91	0	0.1	
# ::edge	possible	domain	survive-01	0.0	0.0.0	
# ::edge	seek-01	ARG0	she	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	seek-01	ARG1	method	0.0.0.0.1	0.0.0.0.1.1	
# ::edge	seek-01	ARG2	anxiety	0.0.0.0.1	0.0.0.0.1.2	
# ::edge	seek-01	time	accident	0.0.0.0.1	0.0.0.0	
# ::edge	spare-02	ARG1	anxiety	0.0.0.0.1.2.0	0.0.0.0.1.2	
# ::edge	survive-01	ARG1	accident	0.0.0	0.0.0.0	
(h / hope-01 
      :ARG1 (p / possible 
            :domain (s5 / survive-01 
                  :ARG1 (a2 / accident 
                        :mod (s4 / such) 
                        :time-of (s2 / seek-01 
                              :ARG0 (s3 / she) 
                              :ARG1 (m / method) 
                              :ARG2 (a / anxiety 
                                    :ARG1-of (s / spare-02)))))) 
      :mod (h2 / have-org-role-91 
            :ARG2 (o / official)))

# ::snt but how could disqualification of all passengers be justified considering that not all drivers would yield to the temptation of conspiring against the insurer and in any event the risk of collusion was not confined to vehicular accidents
# ::tok but how could disqualification of all passengers be justified considering that not all drivers would yield to the temptation of conspiring against the insurer and in any event the risk of collusion was not confined to vehicular accidents
# ::alignments 37-38|0.0.0.0.1.0.2.0 36-37|0.0.0.0.1.0.2.0.0 34-35|0.0.0.0.1.0.2 31-32|0.0.0.0.1.0.0 29-30|0.0.0.0.1.0 27-28|0.0.0.0.1.0.1 26-27|0.0.0.0.1.0.1.0 24-25|0.0.0.0.1 15-16|0.0.0.0 13-14|0.0.0.0.0.0+0.0.0.0.0 12-13|0.0.0.0.0.1 9-10|0.0.0 8-9|0.0 6-7|0.0.1.0 5-6|0.0.1.0.0 3-4|0.0.1 2-3|0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:29.321
# ::node	0	contrast-01	0-1
# ::node	0.0	justify-01	8-9
# ::node	0.0.0	consider-02	9-10
# ::node	0.0.0.0	yield-02	15-16
# ::node	0.0.0.0.0	person	13-14
# ::node	0.0.0.0.0.0	drive-01	13-14
# ::node	0.0.0.0.0.1	all	12-13
# ::node	0.0.0.0.1	and	24-25
# ::node	0.0.0.0.1.0	risk-01	29-30
# ::node	0.0.0.0.1.0.0	collude-01	31-32
# ::node	0.0.0.0.1.0.1	event	27-28
# ::node	0.0.0.0.1.0.1.0	any	26-27
# ::node	0.0.0.0.1.0.2	confine-01	34-35
# ::node	0.0.0.0.1.0.2.0	accident	37-38
# ::node	0.0.0.0.1.0.2.0.0	vehicle	36-37
# ::node	0.0.1	disqualify-01	3-4
# ::node	0.0.1.0	passenger	6-7
# ::node	0.0.1.0.0	all	5-6
# ::node	0.1	possible	2-3
# ::root	0	contrast-01
# ::edge	accident	mod	vehicle	0.0.0.0.1.0.2.0	0.0.0.0.1.0.2.0.0	
# ::edge	and	op1	risk-01	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	confine-01	ARG1	risk-01	0.0.0.0.1.0.2	0.0.0.0.1.0	
# ::edge	confine-01	ARG2	accident	0.0.0.0.1.0.2	0.0.0.0.1.0.2.0	
# ::edge	consider-02	ARG1	yield-02	0.0.0	0.0.0.0	
# ::edge	contrast-01	ARG1	justify-01	0	0.0	
# ::edge	contrast-01	ARG2	possible	0	0.1	
# ::edge	disqualify-01	ARG2	passenger	0.0.1	0.0.1.0	
# ::edge	drive-01	ARG0	person	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	event	mod	any	0.0.0.0.1.0.1	0.0.0.0.1.0.1.0	
# ::edge	justify-01	ARG1	consider-02	0.0	0.0.0	
# ::edge	justify-01	time	disqualify-01	0.0	0.0.1	
# ::edge	passenger	quant	all	0.0.1.0	0.0.1.0.0	
# ::edge	person	quant	all	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	risk-01	ARG0	collude-01	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	risk-01	ARG1	event	0.0.0.0.1.0	0.0.0.0.1.0.1	
# ::edge	yield-02	ARG0	person	0.0.0.0	0.0.0.0.0	
# ::edge	yield-02	ARG1	and	0.0.0.0	0.0.0.0.1	
(c4 / contrast-01 
      :ARG1 (j / justify-01 
            :ARG1 (c3 / consider-02 
                  :ARG1 (y / yield-02 
                        :ARG0 (p / person 
                              :ARG0-of (d / drive-01) 
                              :quant (a4 / all)) 
                        :ARG1 (a3 / and 
                              :op1 (r / risk-01 
                                    :ARG0 (c2 / collude-01) 
                                    :ARG1 (e / event 
                                          :mod (a2 / any)) 
                                    :ARG1-of (c / confine-01 
                                          :ARG2 (a / accident 
                                                :mod (v / vehicle))))))) 
            :time (d2 / disqualify-01 
                  :ARG2 (p2 / passenger 
                        :quant (a5 / all)))) 
      :ARG2 (p3 / possible))

# ::snt he took the unprecedented step of writing to all county councillors to express his disappointment over the latest road accident figures, there has been a 45 per cent increase in slight injury accidents especially among drivers and adult cyclists he said, this trend is against a backdrop of continued decline in accidents in the city during the last five years
# ::tok he took the unprecedented step of writing to all county councillors to express his disappointment over the latest road accident figures , there has been a 45 per cent increase in slight injury accidents especially among drivers and adult cyclists he said , this trend is against a backdrop of continued decline in accidents in the city during the last five years
# ::alignments 61-62|0.1.1.1+0.1.1 60-61|0.1.1.0 59-60|0.1.1.1.0 56-57|0.1.0.0.0 53-54|0.1.0.0 51-52|0.1.0 50-51|0.1 48-49|0.1.0.1 44-45|0.2.0.1 43-44|0.2.0.1.0 41-42|0 40-41|0.0 38-39|0.2.1.1 37-38|0.2 36-37|0.2.1.0.0+0.2.1.0 35-36|0.2.1 34-35|0.2.0.2.0.2 33-34|0.2.0.2 32-33|0.2.0 31-32|0.2.0.0 29-30|0.2.0.2.0 28-29|0.2.0.2.0.1.0+0.2.0.2.0.1 26-27|0.2.1.0.1.0.0.0.1 20-21|0.2.1.0.1.0.1.0 19-20|0.2.1.0.1.0.1 18-19|0.2.1.0.1.0.2 17-18|0.2.1.0.1.0.2.0.0+0.2.1.0.1.0.2.0 14-15|0.2.1.0.1.0 12-13|0.2.1.0.1 9-10|0.2.1.0.1.0.0 8-9|0.2.1.0.1.0.0.1 6-7|0.2.1.0.1.0.0.0 3-4|0.2.0.2.0.0.0+0.2.0.2.0.0 0-1|0.2.1.0.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:30.549
# ::node	0	say-01	41-42
# ::node	0.0	he	40-41
# ::node	0.1	continue-01	50-51
# ::node	0.1.0	decline-01	51-52
# ::node	0.1.0.0	accident	53-54
# ::node	0.1.0.0.0	city	56-57
# ::node	0.1.0.1	backdrop	48-49
# ::node	0.1.1	temporal-quantity	61-62
# ::node	0.1.1.0	5	60-61
# ::node	0.1.1.1	year	61-62
# ::node	0.1.1.1.0	last	59-60
# ::node	0.2	and	37-38
# ::node	0.2.0	injure-01	32-33
# ::node	0.2.0.0	slight	31-32
# ::node	0.2.0.1	trend-01	44-45
# ::node	0.2.0.1.0	this	43-44
# ::node	0.2.0.2	accident	33-34
# ::node	0.2.0.2.0	increase-01	29-30
# ::node	0.2.0.2.0.0	precedent	3-4
# ::node	0.2.0.2.0.0.0	-	3-4
# ::node	0.2.0.2.0.1	monetary-quantity	28-29
# ::node	0.2.0.2.0.1.0	cent	28-29
# ::node	0.2.0.2.0.2	especially	34-35
# ::node	0.2.1	among	35-36
# ::node	0.2.1.0	person	36-37
# ::node	0.2.1.0.0	drive-01	36-37
# ::node	0.2.1.0.1	express-01	12-13
# ::node	0.2.1.0.1.0	disappoint-01	14-15
# ::node	0.2.1.0.1.0.0	county	9-10
# ::node	0.2.1.0.1.0.0.0	write-01	6-7
# ::node	0.2.1.0.1.0.0.0.0	he	0-1
# ::node	0.2.1.0.1.0.0.0.1	45	26-27
# ::node	0.2.1.0.1.0.0.1	all	8-9
# ::node	0.2.1.0.1.0.1	accident	19-20
# ::node	0.2.1.0.1.0.1.0	figure	20-21
# ::node	0.2.1.0.1.0.2	road	18-19
# ::node	0.2.1.0.1.0.2.0	late	17-18
# ::node	0.2.1.0.1.0.2.0.0	most	17-18
# ::node	0.2.1.1	adult	38-39
# ::root	0	say-01
# ::edge	accident	location	city	0.1.0.0	0.1.0.0.0	
# ::edge	accident	mod	injure-01	0.2.0.2	0.2.0	
# ::edge	among	op1	person	0.2.1	0.2.1.0	
# ::edge	among	op2	and	0.2.1	0.2	
# ::edge	among	op3	adult	0.2.1	0.2.1.1	
# ::edge	and	op1	say-01	0.2	0	
# ::edge	backdrop	mod	decline-01	0.1.0.1	0.1.0	
# ::edge	continue-01	ARG1	decline-01	0.1	0.1.0	
# ::edge	continue-01	time	temporal-quantity	0.1	0.1.1	
# ::edge	county	mod	all	0.2.1.0.1.0.0	0.2.1.0.1.0.0.1	
# ::edge	decline-01	ARG1	accident	0.1.0	0.1.0.0	
# ::edge	disappoint-01	ARG0	county	0.2.1.0.1.0	0.2.1.0.1.0.0	
# ::edge	disappoint-01	ARG1	accident	0.2.1.0.1.0	0.2.1.0.1.0.1	
# ::edge	disappoint-01	location	road	0.2.1.0.1.0	0.2.1.0.1.0.2	
# ::edge	drive-01	ARG0	person	0.2.1.0.0	0.2.1.0	
# ::edge	express-01	ARG0	person	0.2.1.0.1	0.2.1.0	
# ::edge	express-01	ARG1	disappoint-01	0.2.1.0.1	0.2.1.0.1.0	
# ::edge	figure	mod	accident	0.2.1.0.1.0.1.0	0.2.1.0.1.0.1	
# ::edge	increase-01	ARG0	precedent	0.2.0.2.0	0.2.0.2.0.0	
# ::edge	increase-01	ARG1	accident	0.2.0.2.0	0.2.0.2	
# ::edge	increase-01	ARG3	monetary-quantity	0.2.0.2.0	0.2.0.2.0.1	
# ::edge	increase-01	time	especially	0.2.0.2.0	0.2.0.2.0.2	
# ::edge	injure-01	ARG0	slight	0.2.0	0.2.0.0	
# ::edge	injure-01	ARG1	trend-01	0.2.0	0.2.0.1	
# ::edge	injure-01	ARG2	and	0.2.0	0.2	
# ::edge	late	degree	most	0.2.1.0.1.0.2.0	0.2.1.0.1.0.2.0.0	
# ::edge	monetary-quantity	unit	cent	0.2.0.2.0.1	0.2.0.2.0.1.0	
# ::edge	precedent	polarity	-	0.2.0.2.0.0	0.2.0.2.0.0.0	
# ::edge	road	mod	late	0.2.1.0.1.0.2	0.2.1.0.1.0.2.0	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	continue-01	0	0.1	
# ::edge	temporal-quantity	quant	5	0.1.1	0.1.1.0	
# ::edge	temporal-quantity	unit	year	0.1.1	0.1.1.1	
# ::edge	trend-01	mod	this	0.2.0.1	0.2.0.1.0	
# ::edge	write-01	ARG0	he	0.2.1.0.1.0.0.0	0.2.1.0.1.0.0.0.0	
# ::edge	write-01	ARG1	45	0.2.1.0.1.0.0.0	0.2.1.0.1.0.0.0.1	
# ::edge	write-01	ARG2	county	0.2.1.0.1.0.0.0	0.2.1.0.1.0.0	
# ::edge	year	mod	last	0.1.1.1	0.1.1.1.0	
(s / say-01 
      :ARG0 (h / he) 
      :ARG1 (c2 / continue-01 
            :ARG1 (d / decline-01 
                  :ARG1 (a / accident 
                        :location (c / city)) 
                  :mod-of (b / backdrop)) 
            :time (t / temporal-quantity 
                  :quant 5 
                  :unit (y / year 
                        :mod (l / last)))) 
      :op-of (a3 / and 
            :ARG2-of (i / injure-01 
                  :ARG0 (s2 / slight) 
                  :ARG1 (t2 / trend-01 
                        :mod (t3 / this)) 
                  :mod-of (a5 / accident 
                        :ARG1-of (i2 / increase-01 
                              :ARG0 (p2 / precedent 
                                    :polarity -) 
                              :ARG3 (m / monetary-quantity 
                                    :unit (c3 / cent)) 
                              :time (e / especially)))) 
            :op-of (a4 / among 
                  :op1 (p / person 
                        :ARG0-of (d2 / drive-01) 
                        :ARG0-of (e2 / express-01 
                              :ARG1 (d3 / disappoint-01 
                                    :ARG0 (c4 / county 
                                          :ARG2-of (w / write-01 
                                                :ARG0 (h2 / he) 
                                                :ARG1 45) 
                                          :mod (a7 / all)) 
                                    :ARG1 (a6 / accident 
                                          :mod-of (f / figure)) 
                                    :location (r / road 
                                          :mod (l2 / late 
                                                :degree (m2 / most)))))) 
                  :op2 (a2 / adult))))

# ::snt some police forces set up anonymous hotlines to encourage people to ring with tipoffs about suspected drink drivers while others tested all drivers involved in accidents
# ::tok some police forces set up anonymous hotlines to encourage people to ring with tipoffs about suspected drink drivers while others tested all drivers involved in accidents
# ::alignments 25-26|0.1 23-24|0 22-23|0.0.0+0.0 21-22|0.0.2 20-21|0.0.1 19-20|0.0.1.0 17-18|0.0.1.0.0.2.1.1+0.0.1.0.0.2.1 16-17|0.0.1.0.0.2.1.0 15-16|0.0.1.0.0.2 11-12|0.0.1.0.0.1 8-9|0.0.1.0.0 5-6|0.0.1.0.0.2.0 2-3|0.0.1.0.0.0 1-2|0.0.1.0.0.0.0 0-1|0.0.1.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:30.833
# ::node	0	involve-01	23-24
# ::node	0.0	person	22-23
# ::node	0.0.0	drive-01	22-23
# ::node	0.0.1	test-01	20-21
# ::node	0.0.1.0	other	19-20
# ::node	0.0.1.0.0	encourage-01	8-9
# ::node	0.0.1.0.0.0	force	2-3
# ::node	0.0.1.0.0.0.0	police	1-2
# ::node	0.0.1.0.0.0.1	some	0-1
# ::node	0.0.1.0.0.1	ring	11-12
# ::node	0.0.1.0.0.2	suspect-01	15-16
# ::node	0.0.1.0.0.2.0	anonymous	5-6
# ::node	0.0.1.0.0.2.1	person	17-18
# ::node	0.0.1.0.0.2.1.0	drink-01	16-17
# ::node	0.0.1.0.0.2.1.1	drive-01	17-18
# ::node	0.0.2	all	21-22
# ::node	0.1	accident	25-26
# ::root	0	involve-01
# ::edge	drink-01	ARG0	person	0.0.1.0.0.2.1.0	0.0.1.0.0.2.1	
# ::edge	drive-01	ARG0	person	0.0.0	0.0	
# ::edge	drive-01	ARG0	person	0.0.1.0.0.2.1.1	0.0.1.0.0.2.1	
# ::edge	encourage-01	ARG0	force	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	encourage-01	ARG1	other	0.0.1.0.0	0.0.1.0	
# ::edge	encourage-01	ARG2	ring	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	encourage-01	ARG3	suspect-01	0.0.1.0.0	0.0.1.0.0.2	
# ::edge	force	mod	police	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	force	mod	some	0.0.1.0.0.0	0.0.1.0.0.0.1	
# ::edge	involve-01	ARG1	person	0	0.0	
# ::edge	involve-01	ARG2	accident	0	0.1	
# ::edge	person	quant	all	0.0	0.0.2	
# ::edge	suspect-01	ARG1	anonymous	0.0.1.0.0.2	0.0.1.0.0.2.0	
# ::edge	suspect-01	ARG2	person	0.0.1.0.0.2	0.0.1.0.0.2.1	
# ::edge	test-01	ARG0	other	0.0.1	0.0.1.0	
# ::edge	test-01	ARG1	person	0.0.1	0.0	
(i / involve-01 
      :ARG1 (p / person 
            :ARG0-of (d / drive-01) 
            :ARG1-of (t / test-01 
                  :ARG0 (o / other 
                        :ARG1-of (e / encourage-01 
                              :ARG0 (f / force 
                                    :mod (p3 / police) 
                                    :mod (s2 / some)) 
                              :ARG2 (r / ring) 
                              :ARG3 (s / suspect-01 
                                    :ARG1 (a3 / anonymous) 
                                    :ARG2 (p2 / person 
                                          :ARG0-of (d3 / drink-01) 
                                          :ARG0-of (d2 / drive-01)))))) 
            :quant (a2 / all)) 
      :ARG2 (a / accident))

# ::snt on the third occasion 10 months before he died he was admitted with a broken arm after a wardrobe was said to have fallen on him but with a burn on his leg attributed to an accident with a poker the previous day
# ::tok on the third occasion 10 months before he died he was admitted with a broken arm after a wardrobe was said to have fallen on him but with a burn on his leg attributed to an accident with a poker the previous day
# ::alignments 42-43|0.0.0 41-42|0.0 39-40|0.2.0.0.0.3 36-37|0.2.0.0.0.1 33-34|0.2.0.0.0 32-33|0.2.0.0.0.0.0 29-30|0.2.0.0.0.0 26-27|0.2.0.0.0.2 23-24|0.1 20-21|0 16-17|0.2 15-16|0.2.0.2 14-15|0.2.0.2.0 11-12|0.2.0 9-10|0.2.0.1 8-9|0.2.0.0.1 7-8|0.2.0.0 6-7|0.2.0.0.1.1 5-6|0.2.0.1.0.1+0.2.0.1.0 4-5|0.2.0.1.0.0 3-4|0.2.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:31.865
# ::node	0	say-01	20-21
# ::node	0.0	previous	41-42
# ::node	0.0.0	day	42-43
# ::node	0.1	fall-01	23-24
# ::node	0.2	after	16-17
# ::node	0.2.0	admit-01	11-12
# ::node	0.2.0.0	he	7-8
# ::node	0.2.0.0.0	attribute-01	33-34
# ::node	0.2.0.0.0.0	burn-01	29-30
# ::node	0.2.0.0.0.0.0	leg	32-33
# ::node	0.2.0.0.0.1	accident	36-37
# ::node	0.2.0.0.0.2	contrast-01	26-27
# ::node	0.2.0.0.0.3	poker	39-40
# ::node	0.2.0.0.1	die-01	8-9
# ::node	0.2.0.0.1.0	occasion	3-4
# ::node	0.2.0.0.1.1	before	6-7
# ::node	0.2.0.1	he	9-10
# ::node	0.2.0.1.0	temporal-quantity	5-6
# ::node	0.2.0.1.0.0	10	4-5
# ::node	0.2.0.1.0.1	month	5-6
# ::node	0.2.0.2	arm	15-16
# ::node	0.2.0.2.0	break-01	14-15
# ::root	0	say-01
# ::edge	admit-01	ARG0	he	0.2.0	0.2.0.0	
# ::edge	admit-01	ARG1	he	0.2.0	0.2.0.1	
# ::edge	admit-01	ARG2	arm	0.2.0	0.2.0.2	
# ::edge	admit-01	time	after	0.2.0	0.2	
# ::edge	after	op1	say-01	0.2	0	
# ::edge	arm	mod	break-01	0.2.0.2	0.2.0.2.0	
# ::edge	attribute-01	ARG0	he	0.2.0.0.0	0.2.0.0	
# ::edge	attribute-01	ARG1	burn-01	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	attribute-01	ARG2	accident	0.2.0.0.0	0.2.0.0.0.1	
# ::edge	attribute-01	purpose	poker	0.2.0.0.0	0.2.0.0.0.3	
# ::edge	before	op1	die-01	0.2.0.0.1.1	0.2.0.0.1	
# ::edge	burn-01	ARG1	leg	0.2.0.0.0.0	0.2.0.0.0.0.0	
# ::edge	contrast-01	ARG2	attribute-01	0.2.0.0.0.2	0.2.0.0.0	
# ::edge	day	mod	previous	0.0.0	0.0	
# ::edge	die-01	ARG0	occasion	0.2.0.0.1	0.2.0.0.1.0	
# ::edge	die-01	ARG1	he	0.2.0.0.1	0.2.0.0	
# ::edge	say-01	ARG0	previous	0	0.0	
# ::edge	say-01	ARG1	fall-01	0	0.1	
# ::edge	temporal-quantity	beneficiary	he	0.2.0.1.0	0.2.0.1	
# ::edge	temporal-quantity	quant	10	0.2.0.1.0	0.2.0.1.0.0	
# ::edge	temporal-quantity	unit	month	0.2.0.1.0	0.2.0.1.0.1	
(s / say-01 
      :ARG0 (p / previous 
            :mod-of (d / day)) 
      :ARG1 (f / fall-01) 
      :op-of (a3 / after 
            :time-of (a5 / admit-01 
                  :ARG0 (h2 / he 
                        :ARG0-of (a2 / attribute-01 
                              :ARG1 (b / burn-01 
                                    :ARG1 (l / leg)) 
                              :ARG2 (a / accident) 
                              :ARG2-of (c / contrast-01) 
                              :purpose (p2 / poker)) 
                        :ARG1-of (d2 / die-01 
                              :ARG0 (o / occasion) 
                              :op-of (b3 / before))) 
                  :ARG1 (h / he 
                        :beneficiary-of (t / temporal-quantity 
                              :quant 10 
                              :unit (m / month))) 
                  :ARG2 (a4 / arm 
                        :mod (b2 / break-01)))))

# ::snt in oxford where accident figures have been declining for five years there was a 45 per cent jump in slight injury accidents particularly among drivers and adult cyclists, to cut pedestrian accidents mr peverelcooper said the county was providing road safety teaching programmes to teachers and for motorcyclists who were involved in fewer accidents last year the county is setting up a training association and promoting training
# ::tok in oxford where accident figures have been declining for five years there was a 45 per cent jump in slight injury accidents particularly among drivers and adult cyclists , to cut pedestrian accidents mr peverelcooper said the county was providing road safety teaching programmes to teachers and for motorcyclists who were involved in fewer accidents last year the county is setting up a training association and promoting training
# ::alignments 67-68|0.0.2.2.1 66-67|0.0.2.2.1.0 65-66|0.0.2.2.1.0.1 64-65|0.0.2.2.1.0.1.0.1 63-64|0.0.2.2.1.0.1.0.1.0 60-61|0.0.2.2.1.0.1.0 58-59|0.0.2.2.1.0.1.0.0 56-57|0.0.2.2.0.0.0.0 55-56|0.0.2.2.0.0.0.0.0 54-55|0.0.2.2.0.0 53-54|0.0.2.2.0.0.0 51-52|0.0.2.2.0 46-47|0.0.2.2 45-46|0.0.2.0+0.0.2 43-44|0.0.1 42-43|0.0.1.0 41-42|0.0.0.0 40-41|0.0.0.0.0 39-40|0.0 37-38|0.0.0 35-36|0 32-33|0.0.3 31-32|0.0.3.0 26-27|0.0.2.1.1.0.2 25-26|0.0.2.1.1 24-25|0.0.2.1.1.0.1.0+0.0.2.1.1.0.1 23-24|0.0.2.1.1.0 22-23|0.0.2.1.1.0.0 21-22|0.0.2.1.2 20-21|0.0.2.1 19-20|0.0.2.1.0 16-17|0.0.1.0.0.0+0.0.1.0.0 14-15|0.1 10-11|0.0.2.2.1.0.0.1+0.0.2.2.1.0.0 9-10|0.0.2.2.1.0.0.0 4-5|0.0.2.1.1.0.1.0.0.0 3-4|0.0.2.1.1.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:35.163
# ::node	0	say-01	35-36
# ::node	0.0	provide-01	39-40
# ::node	0.0.0	county	37-38
# ::node	0.0.0.0	safe-41	41-42
# ::node	0.0.0.0.0	road	40-41
# ::node	0.0.1	program	43-44
# ::node	0.0.1.0	teach-01	42-43
# ::node	0.0.1.0.0	monetary-quantity	16-17
# ::node	0.0.1.0.0.0	cent	16-17
# ::node	0.0.2	person	45-46
# ::node	0.0.2.0	teach-01	45-46
# ::node	0.0.2.1	injure-01	20-21
# ::node	0.0.2.1.0	slight	19-20
# ::node	0.0.2.1.1	and	25-26
# ::node	0.0.2.1.1.0	among	23-24
# ::node	0.0.2.1.1.0.0	particular	22-23
# ::node	0.0.2.1.1.0.1	person	24-25
# ::node	0.0.2.1.1.0.1.0	drive-01	24-25
# ::node	0.0.2.1.1.0.1.0.0	accident	3-4
# ::node	0.0.2.1.1.0.1.0.0.0	figure	4-5
# ::node	0.0.2.1.1.0.2	adult	26-27
# ::node	0.0.2.1.2	accident	21-22
# ::node	0.0.2.2	and	46-47
# ::node	0.0.2.2.0	involve-01	51-52
# ::node	0.0.2.2.0.0	accident	54-55
# ::node	0.0.2.2.0.0.0	few	53-54
# ::node	0.0.2.2.0.0.0.0	year	56-57
# ::node	0.0.2.2.0.0.0.0.0	last	55-56
# ::node	0.0.2.2.1	train-01	67-68
# ::node	0.0.2.2.1.0	promote-02	66-67
# ::node	0.0.2.2.1.0.0	temporal-quantity	10-11
# ::node	0.0.2.2.1.0.0.0	5	9-10
# ::node	0.0.2.2.1.0.0.1	year	10-11
# ::node	0.0.2.2.1.0.1	and	65-66
# ::node	0.0.2.2.1.0.1.0	set-02	60-61
# ::node	0.0.2.2.1.0.1.0.0	county	58-59
# ::node	0.0.2.2.1.0.1.0.1	associate-01	64-65
# ::node	0.0.2.2.1.0.1.0.1.0	train-01	63-64
# ::node	0.0.3	accident	32-33
# ::node	0.0.3.0	pedestrian	31-32
# ::node	0.1	45	14-15
# ::root	0	say-01
# ::edge	45	op1	say-01	0.1	0	
# ::edge	accident	mod	injure-01	0.0.2.1.2	0.0.2.1	
# ::edge	accident	mod	pedestrian	0.0.3	0.0.3.0	
# ::edge	accident	quant	few	0.0.2.2.0.0	0.0.2.2.0.0.0	
# ::edge	among	mod	particular	0.0.2.1.1.0	0.0.2.1.1.0.0	
# ::edge	among	op1	person	0.0.2.1.1.0	0.0.2.1.1.0.1	
# ::edge	among	op2	and	0.0.2.1.1.0	0.0.2.1.1	
# ::edge	among	op3	adult	0.0.2.1.1.0	0.0.2.1.1.0.2	
# ::edge	and	op1	person	0.0.2.2	0.0.2	
# ::edge	and	op1	set-02	0.0.2.2.1.0.1	0.0.2.2.1.0.1.0	
# ::edge	and	op2	promote-02	0.0.2.2.1.0.1	0.0.2.2.1.0	
# ::edge	and	op2	train-01	0.0.2.2	0.0.2.2.1	
# ::edge	drive-01	ARG0	person	0.0.2.1.1.0.1.0	0.0.2.1.1.0.1	
# ::edge	drive-01	ARG1	accident	0.0.2.1.1.0.1.0	0.0.2.1.1.0.1.0.0	
# ::edge	figure	mod	accident	0.0.2.1.1.0.1.0.0.0	0.0.2.1.1.0.1.0.0	
# ::edge	injure-01	ARG0	slight	0.0.2.1	0.0.2.1.0	
# ::edge	injure-01	ARG1	person	0.0.2.1	0.0.2	
# ::edge	injure-01	ARG2	and	0.0.2.1	0.0.2.1.1	
# ::edge	involve-01	ARG1	and	0.0.2.2.0	0.0.2.2	
# ::edge	involve-01	ARG2	accident	0.0.2.2.0	0.0.2.2.0.0	
# ::edge	monetary-quantity	unit	cent	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	program	mod	teach-01	0.0.1	0.0.1.0	
# ::edge	promote-02	ARG0	temporal-quantity	0.0.2.2.1.0	0.0.2.2.1.0.0	
# ::edge	promote-02	ARG1	train-01	0.0.2.2.1.0	0.0.2.2.1	
# ::edge	provide-01	ARG0	county	0.0	0.0.0	
# ::edge	provide-01	ARG1	program	0.0	0.0.1	
# ::edge	provide-01	ARG2	person	0.0	0.0.2	
# ::edge	provide-01	time	accident	0.0	0.0.3	
# ::edge	safe-41	ARG1	county	0.0.0.0	0.0.0	
# ::edge	safe-41	mod	road	0.0.0.0	0.0.0.0.0	
# ::edge	say-01	ARG1	provide-01	0	0.0	
# ::edge	set-02	ARG0	county	0.0.2.2.1.0.1.0	0.0.2.2.1.0.1.0.0	
# ::edge	set-02	ARG1	associate-01	0.0.2.2.1.0.1.0	0.0.2.2.1.0.1.0.1	
# ::edge	teach-01	ARG0	person	0.0.2.0	0.0.2	
# ::edge	teach-01	ARG1	monetary-quantity	0.0.1.0	0.0.1.0.0	
# ::edge	temporal-quantity	quant	5	0.0.2.2.1.0.0	0.0.2.2.1.0.0.0	
# ::edge	temporal-quantity	unit	year	0.0.2.2.1.0.0	0.0.2.2.1.0.0.1	
# ::edge	train-01	ARG0	associate-01	0.0.2.2.1.0.1.0.1.0	0.0.2.2.1.0.1.0.1	
# ::edge	year	mod	few	0.0.2.2.0.0.0.0	0.0.2.2.0.0.0	
# ::edge	year	mod	last	0.0.2.2.0.0.0.0	0.0.2.2.0.0.0.0.0	
(s3 / say-01 
      :ARG1 (p4 / provide-01 
            :ARG0 (c2 / county 
                  :ARG1-of (s2 / safe-41 
                        :mod (r / road))) 
            :ARG1 (p3 / program 
                  :mod (t4 / teach-01 
                        :ARG1 (m / monetary-quantity 
                              :unit (c3 / cent)))) 
            :ARG2 (p2 / person 
                  :ARG0-of (t3 / teach-01) 
                  :ARG1-of (i2 / injure-01 
                        :ARG0 (s4 / slight) 
                        :ARG2 (a7 / and 
                              :op-of (a8 / among 
                                    :mod (p7 / particular) 
                                    :op1 (p6 / person 
                                          :ARG0-of (d / drive-01 
                                                :ARG1 (a10 / accident 
                                                      :mod-of (f2 / figure)))) 
                                    :op2 (a6 / adult))) 
                        :mod-of (a9 / accident)) 
                  :op-of (a4 / and 
                        :ARG1-of (i / involve-01 
                              :ARG2 (a3 / accident 
                                    :quant (f / few 
                                          :mod-of (y / year 
                                                :mod (l / last))))) 
                        :op1 (t / train-01 
                              :ARG1-of (p / promote-02 
                                    :ARG0 (t5 / temporal-quantity 
                                          :quant 5 
                                          :unit (y2 / year)) 
                                    :op-of (a / and 
                                          :op1 (s / set-02 
                                                :ARG0 (c / county) 
                                                :ARG1 (a2 / associate-01 
                                                      :ARG0-of (t2 / train-01)))))))) 
            :time (a5 / accident 
                  :mod (p5 / pedestrian))) 
      :op-of 45)

# ::snt god himself might call it away by accident
# ::tok god himself might call it away by accident
# ::alignments 7-8|0.0.0 5-6|0.0.1 4-5|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:35.172
# ::node	0	god	0-1
# ::node	0.0	it	4-5
# ::node	0.0.0	accident	7-8
# ::node	0.0.1	away	5-6
# ::root	0	god
# ::edge	accident	domain	it	0.0.0	0.0	
# ::edge	god	name	it	0	0.0	
# ::edge	it	mod	away	0.0	0.0.1	
(g / god 
      :name (i / it 
            :domain-of (a / accident) 
            :mod (a2 / away)))

# ::snt it said we are deeply concerned about the effects of the ambulance dispute on the accident and emergency services as well as the regular care of sick elderly and needy people ellip
# ::tok it said we are deeply concerned about the effects of the ambulance dispute on the accident and emergency services as well as the regular care of sick elderly and needy people ellip
# ::alignments 28-29|0.1.0 27-28|0.1.0.1 26-27|0.1.1.2.0.1 24-25|0.1.0.0 23-24|0.1.0.0.0 20-21|0.1.1.0 18-19|0.1.1.2.2 17-18|0.1.1.2.2.0 16-17|0.1.1.2 15-16|0.1.1.2.1 12-13|0.1.1 11-12|0.1.1.1 8-9|0.1 5-6|0.1.1.2.0 4-5|0.1.1.2.0.2 2-3|0.1.1.2.0.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:35.780
# ::node	0	say-01	1-2
# ::node	0.0	it	0-1
# ::node	0.1	effect-01	8-9
# ::node	0.1.0	and	28-29
# ::node	0.1.0.0	care-01	24-25
# ::node	0.1.0.0.0	regular	23-24
# ::node	0.1.0.1	elderly	27-28
# ::node	0.1.1	dispute-01	12-13
# ::node	0.1.1.0	well	20-21
# ::node	0.1.1.1	ambulance	11-12
# ::node	0.1.1.2	and	16-17
# ::node	0.1.1.2.0	concern-01	5-6
# ::node	0.1.1.2.0.0	we	2-3
# ::node	0.1.1.2.0.1	sick	26-27
# ::node	0.1.1.2.0.2	deep	4-5
# ::node	0.1.1.2.1	accident	15-16
# ::node	0.1.1.2.2	service	18-19
# ::node	0.1.1.2.2.0	emergency	17-18
# ::root	0	say-01
# ::edge	and	op1	concern-01	0.1.1.2	0.1.1.2.0	
# ::edge	and	op1	elderly	0.1.0	0.1.0.1	
# ::edge	and	op2	dispute-01	0.1.1.2	0.1.1	
# ::edge	and	op3	accident	0.1.1.2	0.1.1.2.1	
# ::edge	and	op4	service	0.1.1.2	0.1.1.2.2	
# ::edge	care-01	ARG1	and	0.1.0.0	0.1.0	
# ::edge	care-01	frequency	regular	0.1.0.0	0.1.0.0.0	
# ::edge	concern-01	ARG0	we	0.1.1.2.0	0.1.1.2.0.0	
# ::edge	concern-01	ARG1	sick	0.1.1.2.0	0.1.1.2.0.1	
# ::edge	concern-01	degree	deep	0.1.1.2.0	0.1.1.2.0.2	
# ::edge	dispute-01	ARG1	well	0.1.1	0.1.1.0	
# ::edge	dispute-01	ARG2	ambulance	0.1.1	0.1.1.1	
# ::edge	effect-01	ARG0	and	0.1	0.1.0	
# ::edge	effect-01	ARG1	dispute-01	0.1	0.1.1	
# ::edge	say-01	ARG0	it	0	0.0	
# ::edge	say-01	ARG1	effect-01	0	0.1	
# ::edge	service	mod	emergency	0.1.1.2.2	0.1.1.2.2.0	
(s3 / say-01 
      :ARG0 (i / it) 
      :ARG1 (e3 / effect-01 
            :ARG0 (a / and 
                  :ARG1-of (c / care-01 
                        :frequency (r / regular)) 
                  :op1 (e / elderly)) 
            :ARG1 (d / dispute-01 
                  :ARG1 (w / well) 
                  :ARG2 (a4 / ambulance) 
                  :op-of (a2 / and 
                        :op1 (c2 / concern-01 
                              :ARG0 (w2 / we) 
                              :ARG1 (s / sick) 
                              :degree (d2 / deep)) 
                        :op2 (a3 / accident) 
                        :op3 (s2 / service 
                              :mod (e2 / emergency))))))

# ::snt i allowed her to see by accident a plan on my desk at cold harbour
# ::tok i allowed her to see by accident a plan on my desk at cold harbour
# ::alignments 14-15|0.1.0.0 13-14|0.1.0.0.0 8-9|0.1.0 6-7|0.1.1 4-5|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:35.812
# ::node	0	allow-01	1-2
# ::node	0.0	i	0-1
# ::node	0.1	see-01	4-5
# ::node	0.1.0	plan-01	8-9
# ::node	0.1.0.0	harbour	14-15
# ::node	0.1.0.0.0	cold	13-14
# ::node	0.1.1	accident	6-7
# ::root	0	allow-01
# ::edge	allow-01	ARG0	i	0	0.0	
# ::edge	allow-01	ARG1	see-01	0	0.1	
# ::edge	harbour	mod	cold	0.1.0.0	0.1.0.0.0	
# ::edge	plan-01	ARG0	harbour	0.1.0	0.1.0.0	
# ::edge	see-01	ARG1	plan-01	0.1	0.1.0	
# ::edge	see-01	location	accident	0.1	0.1.1	
(a2 / allow-01 
      :ARG0 (i / i) 
      :ARG1 (s / see-01 
            :ARG1 (p / plan-01 
                  :ARG0 (h / harbour 
                        :mod (c / cold))) 
            :location (a / accident)))

# ::snt death ellip  she had a sudden fearful vision of everyone in the world the untold billions including gorbachev and reagan engaged in desperate meaningless activity to stave off the horror of death in life the accident of life
# ::tok death ellip she had a sudden fearful vision of everyone in the world the untold billions including gorbachev and reagan engaged in desperate meaningless activity to stave off the horror of death in life the accident of life
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:35.813
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt shall i come about eleven next wednesday  so by a collusive accident phoebe had become a gardener
# ::tok shall i come about eleven next wednesday so by a collusive accident phoebe had become a gardener
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:35.814
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt mrs edith gennings 69 of park close avon dassett warwickshire a front seat passenger in the samba received multiple injuries in the accident and later died at the horton general hospital banbury
# ::tok mrs edith gennings 69 of park close avon dassett warwickshire a front seat passenger in the samba received multiple injuries in the accident and later died at the horton general hospital banbury
# ::alignments 30-31|0.0.0.2.0.2 29-30|0.0.0.0.0 25-26|0.0.0.2.0 24-25|0.0.0.2.0.3 23-24|0.0.0.2 22-23|0.0.0.1 19-20|0.0.0.0 18-19|0.0.0.0.1 17-18|0.0.0 13-14|0.0 12-13|0.0.1 11-12|0 5-6|0.0.0.2.0.1 3-4|0.0.0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:36.207
# ::node	0	front	11-12
# ::node	0.0	passenger	13-14
# ::node	0.0.0	receive-01	17-18
# ::node	0.0.0.0	injure-01	19-20
# ::node	0.0.0.0.0	general	29-30
# ::node	0.0.0.0.1	multiple	18-19
# ::node	0.0.0.1	accident	22-23
# ::node	0.0.0.2	and	23-24
# ::node	0.0.0.2.0	die-01	25-26
# ::node	0.0.0.2.0.0	69	3-4
# ::node	0.0.0.2.0.1	park	5-6
# ::node	0.0.0.2.0.2	hospital	30-31
# ::node	0.0.0.2.0.3	late	24-25
# ::node	0.0.1	seat	12-13
# ::root	0	front
(f / front 
      :mod-of (p / passenger 
            :ARG0-of (r / receive-01 
                  :ARG1 (i / injure-01 
                        :ARG1 (g / general) 
                        :quant (m / multiple)) 
                  :ARG2 (a2 / accident) 
                  :op-of (a / and 
                        :op1 (d / die-01 
                              :ARG0 69 
                              :ARG1 (p2 / park) 
                              :ARG2 (h / hospital) 
                              :time (l / late)))) 
            :mod (s / seat)))

# ::snt it is utterly ludicrous to think that at the time of an accident one will have to ask what is the source of this incident and then look for the relevant department to control it
# ::tok it is utterly ludicrous to think that at the time of an accident one will have to ask what is the source of this incident and then look for the relevant department to control it
# ::alignments 34-35|0.1.0.0 33-34|0.1.0 31-32|0.1.0.2 30-31|0.1.0.2.0 26-27|0.1.1.0.1 25-26|0.1.1 24-25|0.1.1.1 23-24|0.1.1.1.0 21-22|0.1 17-18|0 12-13|0.1.0.1 9-10|0.2 5-6|0.1.1.0 2-3|0.0 0-1|0.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:36.520
# ::node	0	ask-01	17-18
# ::node	0.0	utterly	2-3
# ::node	0.1	source	21-22
# ::node	0.1.0	control-01	33-34
# ::node	0.1.0.0	it	34-35
# ::node	0.1.0.1	accident	12-13
# ::node	0.1.0.2	department	31-32
# ::node	0.1.0.2.0	relevant-41	30-31
# ::node	0.1.1	and	25-26
# ::node	0.1.1.0	think-01	5-6
# ::node	0.1.1.0.0	it	0-1
# ::node	0.1.1.0.1	then	26-27
# ::node	0.1.1.1	incident	24-25
# ::node	0.1.1.1.0	this	23-24
# ::node	0.2	time	9-10
# ::root	0	ask-01
# ::edge	accident	op1	control-01	0.1.0.1	0.1.0	
# ::edge	and	op1	think-01	0.1.1	0.1.1.0	
# ::edge	and	op2	source	0.1.1	0.1	
# ::edge	and	op3	incident	0.1.1	0.1.1.1	
# ::edge	ask-01	ARG0	utterly	0	0.0	
# ::edge	ask-01	ARG1	source	0	0.1	
# ::edge	control-01	ARG0	source	0.1.0	0.1	
# ::edge	control-01	ARG1	it	0.1.0	0.1.0.0	
# ::edge	department	purpose	control-01	0.1.0.2	0.1.0	
# ::edge	incident	mod	this	0.1.1.1	0.1.1.1.0	
# ::edge	relevant-41	ARG1	department	0.1.0.2.0	0.1.0.2	
# ::edge	think-01	ARG0	it	0.1.1.0	0.1.1.0.0	
# ::edge	think-01	ARG1	then	0.1.1.0	0.1.1.0.1	
# ::edge	time	purpose	ask-01	0.2	0	
(a2 / ask-01 
      :ARG0 (u / utterly) 
      :ARG1 (s / source 
            :ARG0-of (c / control-01 
                  :ARG1 (i / it) 
                  :op-of (a3 / accident) 
                  :purpose-of (d / department 
                        :ARG1-of (r / relevant-41))) 
            :op-of (a / and 
                  :op1 (t4 / think-01 
                        :ARG0 (i3 / it) 
                        :ARG1 (t / then)) 
                  :op2 (i2 / incident 
                        :mod (t2 / this)))) 
      :purpose-of (t3 / time))

# ::snt in the final analysis senna will see prost as the guilty party in an accident which led to sennas exclusion when he rejoined in the incorrect manner
# ::tok in the final analysis senna will see prost as the guilty party in an accident which led to sennas exclusion when he rejoined in the incorrect manner
# ::alignments 26-27|0.1 25-26|0.2+0 21-22|0.0.1.0 19-20|0.0.1.0.0.1 16-17|0.0.1.0.0 14-15|0.0.1.0.0.0 11-12|0.0.1.1 10-11|0.0.1.1.0 6-7|0.0.1 3-4|0.0 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:36.662
# ::node	0	correct	25-26
# ::node	0.0	analyze-01	3-4
# ::node	0.0.0	final	2-3
# ::node	0.0.1	see-01	6-7
# ::node	0.0.1.0	he	21-22
# ::node	0.0.1.0.0	lead-02	16-17
# ::node	0.0.1.0.0.0	accident	14-15
# ::node	0.0.1.0.0.1	exclude-01	19-20
# ::node	0.0.1.1	party	11-12
# ::node	0.0.1.1.0	guilty-41	10-11
# ::node	0.1	manner	26-27
# ::node	0.2	-	25-26
# ::root	0	correct
# ::edge	analyze-01	ARG0	final	0.0	0.0.0	
# ::edge	analyze-01	ARG1	correct	0.0	0	
# ::edge	correct	polarity	-	0	0.2	
# ::edge	guilty-41	ARG1	party	0.0.1.1.0	0.0.1.1	
# ::edge	lead-02	ARG0	he	0.0.1.0.0	0.0.1.0	
# ::edge	lead-02	ARG1	accident	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	lead-02	ARG2	exclude-01	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	manner	mod	correct	0.1	0	
# ::edge	see-01	ARG0	he	0.0.1	0.0.1.0	
# ::edge	see-01	ARG1	analyze-01	0.0.1	0.0	
# ::edge	see-01	location	party	0.0.1	0.0.1.1	
(c / correct 
      :ARG1-of (a2 / analyze-01 
            :ARG0 (f / final) 
            :ARG1-of (s / see-01 
                  :ARG0 (h / he 
                        :ARG0-of (l / lead-02 
                              :ARG1 (a / accident) 
                              :ARG2 (e / exclude-01))) 
                  :location (p / party 
                        :ARG1-of (g / guilty-41)))) 
      :mod-of (m / manner) 
      :polarity -)

# ::snt we knew it had to happen said marie st jacques webb canadian by birth economist by profession saviour of david webb by accident
# ::tok we knew it had to happen said marie st jacques webb canadian by birth economist by profession saviour of david webb by accident
# ::alignments 22-23|0.0.0.0.0.0 17-18|0.1 16-17|0.1.1 13-14|0.1.0 6-7|0 5-6|0.0.0 2-3|0.0 1-2|0.0.0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:36.707
# ::node	0	say-01	6-7
# ::node	0.0	it	2-3
# ::node	0.0.0	happen-01	5-6
# ::node	0.0.0.0	we	0-1
# ::node	0.0.0.0.0	know-01	1-2
# ::node	0.0.0.0.0.0	accident	22-23
# ::node	0.1	saviour	17-18
# ::node	0.1.0	birth-01	13-14
# ::node	0.1.1	profession	16-17
# ::root	0	say-01
# ::edge	birth-01	ARG1	saviour	0.1.0	0.1	
# ::edge	happen-01	ARG0	we	0.0.0	0.0.0.0	
# ::edge	happen-01	ARG1	it	0.0.0	0.0	
# ::edge	know-01	ARG0	we	0.0.0.0.0	0.0.0.0	
# ::edge	know-01	ARG1	accident	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	saviour	mod	profession	0.1	0.1.1	
# ::edge	say-01	ARG0	it	0	0.0	
# ::edge	say-01	prep-as	saviour	0	0.1	
(s2 / say-01 
      :ARG0 (i / it 
            :ARG1-of (h / happen-01 
                  :ARG0 (w / we 
                        :ARG0-of (k / know-01 
                              :ARG1 (a / accident))))) 
      :prep-as (s / saviour 
            :ARG1-of (b / birth-01) 
            :mod (p / profession)))

# ::snt dr gregor venters from the royal hospital for sick children edinburgh said cases of suicide drunkenness and car accidents were increasing among junior doctors because of tiredness
# ::tok dr gregor venters from the royal hospital for sick children edinburgh said cases of suicide drunkenness and car accidents were increasing among junior doctors because of tiredness
# ::alignments 26-27|0.1.2.0 24-25|0.1.2 23-24|0.1.0.0 22-23|0.1.0.0.0 21-22|0.1.0 20-21|0.1 18-19|0.3.1 17-18|0.3.1.0 16-17|0.3 15-16|0.3.0 14-15|0.3.0.0 12-13|0.3.2 11-12|0 9-10|0.1.1 8-9|0.2 6-7|0.0 5-6|0.1.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:36.875
# ::node	0	say-01	11-12
# ::node	0.0	hospital	6-7
# ::node	0.1	increase-01	20-21
# ::node	0.1.0	among	21-22
# ::node	0.1.0.0	doctor	23-24
# ::node	0.1.0.0.0	junior	22-23
# ::node	0.1.1	child	9-10
# ::node	0.1.2	cause-01	24-25
# ::node	0.1.2.0	tire-01	26-27
# ::node	0.1.2.0.0	royal	5-6
# ::node	0.2	sick	8-9
# ::node	0.3	and	16-17
# ::node	0.3.0	drunkenness	15-16
# ::node	0.3.0.0	suicide	14-15
# ::node	0.3.1	accident	18-19
# ::node	0.3.1.0	car	17-18
# ::node	0.3.2	case	12-13
# ::root	0	say-01
# ::edge	accident	mod	car	0.3.1	0.3.1.0	
# ::edge	among	op1	doctor	0.1.0	0.1.0.0	
# ::edge	and	op1	say-01	0.3	0	
# ::edge	and	op2	drunkenness	0.3	0.3.0	
# ::edge	and	op3	accident	0.3	0.3.1	
# ::edge	case	prep-against	and	0.3.2	0.3	
# ::edge	cause-01	ARG0	tire-01	0.1.2	0.1.2.0	
# ::edge	cause-01	ARG1	increase-01	0.1.2	0.1	
# ::edge	doctor	mod	junior	0.1.0.0	0.1.0.0.0	
# ::edge	drunkenness	mod	suicide	0.3.0	0.3.0.0	
# ::edge	increase-01	ARG0	among	0.1	0.1.0	
# ::edge	increase-01	ARG1	child	0.1	0.1.1	
# ::edge	say-01	ARG0	hospital	0	0.0	
# ::edge	say-01	ARG1	increase-01	0	0.1	
# ::edge	say-01	mod	sick	0	0.2	
# ::edge	tire-01	ARG1	royal	0.1.2.0	0.1.2.0.0	
(s2 / say-01 
      :ARG0 (h / hospital) 
      :ARG1 (i / increase-01 
            :ARG0 (a / among 
                  :op1 (d / doctor 
                        :mod (j / junior))) 
            :ARG1 (c4 / child) 
            :ARG1-of (c / cause-01 
                  :ARG0 (t / tire-01 
                        :ARG1 (r / royal)))) 
      :mod (s3 / sick) 
      :op-of (a3 / and 
            :op1 (d2 / drunkenness 
                  :mod (s / suicide)) 
            :op2 (a2 / accident 
                  :mod (c2 / car)) 
            :prep-against-of (c3 / case)))

# ::snt fog covered southern britain yesterday contributing to a spate of accidents including a pileup in which a woman motorist died and 20 other people were injured, at least 30 vehicles were involved in the accident on the a45 at haughley near stowmarket suffolk which caused a 10mile tailback
# ::tok fog covered southern britain yesterday contributing to a spate of accidents including a pileup in which a woman motorist died and 20 other people were injured , at least 30 vehicles were involved in the accident on the a45 at haughley near stowmarket suffolk which caused a 10mile tailback
# ::alignments 45-46|0 41-42|0.1.2.0.0 35-36|0.1.1 32-33|0.1 30-31|0.1.0 29-30|0.1.0.0 25-26|0.1.2.3 22-23|0.1.2.1.1.0 21-22|0.0 20-21|0.1.2 19-20|0.1.2.0 17-18|0.1.2.2 10-11|0.1.2.1.2 5-6|0.1.2.1 4-5|0.1.2.1.0 3-4|0.1.2.3.0.0.0+0.1.2.3.0.0+0.1.2.3.0 2-3|0.1.2.1.1.1 1-2|0.1.2.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:37.167
# ::node	0	cause-01	45-46
# ::node	0.0	20	21-22
# ::node	0.1	involve-01	32-33
# ::node	0.1.0	vehicle	30-31
# ::node	0.1.0.0	30	29-30
# ::node	0.1.1	accident	35-36
# ::node	0.1.2	and	20-21
# ::node	0.1.2.0	die-01	19-20
# ::node	0.1.2.0.0	near	41-42
# ::node	0.1.2.1	contribute-01	5-6
# ::node	0.1.2.1.0	yesterday	4-5
# ::node	0.1.2.1.1	cover-01	1-2
# ::node	0.1.2.1.1.0	other	22-23
# ::node	0.1.2.1.1.1	south	2-3
# ::node	0.1.2.1.2	accident	10-11
# ::node	0.1.2.2	woman	17-18
# ::node	0.1.2.3	injure-01	25-26
# ::node	0.1.2.3.0	country	3-4
# ::node	0.1.2.3.0.0	name	3-4
# ::node	0.1.2.3.0.0.0	"Britain"	3-4
# ::root	0	cause-01
# ::edge	and	op1	contribute-01	0.1.2	0.1.2.1	
# ::edge	and	op2	woman	0.1.2	0.1.2.2	
# ::edge	and	op3	injure-01	0.1.2	0.1.2.3	
# ::edge	and	op4	involve-01	0.1.2	0.1	
# ::edge	cause-01	ARG1	20	0	0.0	
# ::edge	cause-01	ARG2	involve-01	0	0.1	
# ::edge	contribute-01	ARG1	yesterday	0.1.2.1	0.1.2.1.0	
# ::edge	contribute-01	ARG2	accident	0.1.2.1	0.1.2.1.2	
# ::edge	country	name	name	0.1.2.3.0	0.1.2.3.0.0	
# ::edge	cover-01	ARG0	other	0.1.2.1.1	0.1.2.1.1.0	
# ::edge	cover-01	ARG1	contribute-01	0.1.2.1.1	0.1.2.1	
# ::edge	cover-01	ARG2	south	0.1.2.1.1	0.1.2.1.1.1	
# ::edge	die-01	ARG0	near	0.1.2.0	0.1.2.0.0	
# ::edge	die-01	ARG1	and	0.1.2.0	0.1.2	
# ::edge	injure-01	ARG1	country	0.1.2.3	0.1.2.3.0	
# ::edge	involve-01	ARG1	vehicle	0.1	0.1.0	
# ::edge	involve-01	ARG2	accident	0.1	0.1.1	
# ::edge	name	op1	"Britain"	0.1.2.3.0.0	0.1.2.3.0.0.0	
# ::edge	vehicle	quant	30	0.1.0	0.1.0.0	
(c / cause-01 
      :ARG1 20 
      :ARG2 (i / involve-01 
            :ARG1 (v / vehicle 
                  :quant 30) 
            :ARG2 (a / accident) 
            :op-of (a2 / and 
                  :ARG1-of (d / die-01 
                        :ARG0 (n / near)) 
                  :op1 (c2 / contribute-01 
                        :ARG1 (y / yesterday) 
                        :ARG1-of (c4 / cover-01 
                              :ARG0 (o / other) 
                              :ARG2 (s / south)) 
                        :ARG2 (a3 / accident)) 
                  :op2 (w / woman) 
                  :op3 (i2 / injure-01 
                        :ARG1 (c3 / country 
                              :name (n2 / name 
                                    :op1 "Britain"))))))

# ::snt i tell him not to be silly everyone has accidents
# ::tok i tell him not to be silly everyone has accidents
# ::alignments 9-10|0.2 7-8|0.1.0 6-7|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:37.216
# ::node	0	tell-01	1-2
# ::node	0.0	i	0-1
# ::node	0.1	silly	6-7
# ::node	0.1.0	everyone	7-8
# ::node	0.2	accident	9-10
# ::root	0	tell-01
# ::edge	everyone	mod	silly	0.1.0	0.1	
# ::edge	tell-01	ARG0	i	0	0.0	
# ::edge	tell-01	ARG1	silly	0	0.1	
# ::edge	tell-01	ARG2	accident	0	0.2	
(t / tell-01 
      :ARG0 (i / i) 
      :ARG1 (s / silly 
            :mod-of (e / everyone)) 
      :ARG2 (a / accident))

# ::snt   bill never forgave fellow cornettist muggsy spanier who put it about that bill had been drunk and that the accident was his fault
# ::tok bill never forgave fellow cornettist muggsy spanier who put it about that bill had been drunk and that the accident was his fault
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:37.217
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt yet this apparent incongruity did not overcome the courts disinclination to extend strict liability to all road traffic accidents
# ::tok yet this apparent incongruity did not overcome the courts disinclination to extend strict liability to all road traffic accidents
# ::alignments 18-19|0.0.2.0 17-18|0.0.2.0.0 16-17|0.0.2.0.0.0 15-16|0.0.2.0.0.0.0 13-14|0.0.2.1 12-13|0.0.2.1.0 11-12|0.0.2 8-9|0.0.1 6-7|0.0 3-4|0.2+0 2-3|0.1 1-2|0.0.1.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:37.314
# ::node	0	congruity	3-4
# ::node	0.0	overcome-01	6-7
# ::node	0.0.0	yet	0-1
# ::node	0.0.1	court	8-9
# ::node	0.0.1.0	this	1-2
# ::node	0.0.2	extend-01	11-12
# ::node	0.0.2.0	accident	18-19
# ::node	0.0.2.0.0	traffic	17-18
# ::node	0.0.2.0.0.0	road	16-17
# ::node	0.0.2.0.0.0.0	all	15-16
# ::node	0.0.2.1	liability	13-14
# ::node	0.0.2.1.0	strict	12-13
# ::node	0.1	apparent	2-3
# ::node	0.2	-	3-4
# ::root	0	congruity
# ::edge	accident	mod	traffic	0.0.2.0	0.0.2.0.0	
# ::edge	congruity	mod	apparent	0	0.1	
# ::edge	congruity	polarity	-	0	0.2	
# ::edge	court	mod	this	0.0.1	0.0.1.0	
# ::edge	extend-01	ARG0	accident	0.0.2	0.0.2.0	
# ::edge	extend-01	ARG1	liability	0.0.2	0.0.2.1	
# ::edge	liability	mod	strict	0.0.2.1	0.0.2.1.0	
# ::edge	overcome-01	ARG0	yet	0.0	0.0.0	
# ::edge	overcome-01	ARG1	congruity	0.0	0	
# ::edge	overcome-01	ARG2	court	0.0	0.0.1	
# ::edge	overcome-01	purpose	extend-01	0.0	0.0.2	
# ::edge	road	quant	all	0.0.2.0.0.0	0.0.2.0.0.0.0	
# ::edge	traffic	mod	road	0.0.2.0.0	0.0.2.0.0.0	
(c2 / congruity 
      :ARG1-of (o / overcome-01 
            :ARG0 (y / yet) 
            :ARG2 (c / court 
                  :mod (t2 / this)) 
            :purpose (e / extend-01 
                  :ARG0 (a / accident 
                        :mod (t / traffic 
                              :mod (r / road 
                                    :quant (a2 / all)))) 
                  :ARG1 (l / liability 
                        :mod (s / strict)))) 
      :mod (a3 / apparent) 
      :polarity -)

# ::snt it lent credibility to a new policy argument that shifting of loss suffered by victims of accident could be justified on the ground that the defendant was in a strategic position if not to prevent accidents at least to provide compensation
# ::tok it lent credibility to a new policy argument that shifting of loss suffered by victims of accident could be justified on the ground that the defendant was in a strategic position if not to prevent accidents at least to provide compensation
# ::alignments 40-41|0.0.1.1.0.0.1.1.0.0 39-40|0.0.1.1.0.0.1.1.0 35-36|0.0.1.1.0.0.1.1 34-35|0.0.1.1.0.0.1 30-31|0.0.1.1.0.0 29-30|0.0.1.1.0.0.0 25-26|0.0.1.1.0.0.1.0 22-23|0.0.1.1.0.1 19-20|0.0.1.1.0 17-18|0.0.1.1 16-17|0.0.1.0.0 14-15|0.0.1.0 12-13|0.0.1 9-10|0 7-8|0.0 6-7|0.0.3 5-6|0.0.2 2-3|0.0.1.1.1 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:37.772
# ::node	0	shift-01	9-10
# ::node	0.0	argue-01	7-8
# ::node	0.0.0	it	0-1
# ::node	0.0.1	suffer-01	12-13
# ::node	0.0.1.0	victim	14-15
# ::node	0.0.1.0.0	accident	16-17
# ::node	0.0.1.1	possible	17-18
# ::node	0.0.1.1.0	justify-01	19-20
# ::node	0.0.1.1.0.0	position	30-31
# ::node	0.0.1.1.0.0.0	strategy	29-30
# ::node	0.0.1.1.0.0.1	prevent-01	34-35
# ::node	0.0.1.1.0.0.1.0	defendant	25-26
# ::node	0.0.1.1.0.0.1.1	accident	35-36
# ::node	0.0.1.1.0.0.1.1.0	provide-01	39-40
# ::node	0.0.1.1.0.0.1.1.0.0	compensate-01	40-41
# ::node	0.0.1.1.0.1	ground	22-23
# ::node	0.0.1.1.1	credibility	2-3
# ::node	0.0.2	new	5-6
# ::node	0.0.3	policy	6-7
# ::root	0	shift-01
(s3 / shift-01 
      :ARG1-of (a3 / argue-01 
            :ARG0 (i / it) 
            :ARG2-of (s2 / suffer-01 
                  :ARG0 (v / victim 
                        :mod (a2 / accident)) 
                  :ARG1 (p4 / possible 
                        :domain (j / justify-01 
                              :ARG1 (p3 / position 
                                    :mod (s / strategy) 
                                    :time (p2 / prevent-01 
                                          :ARG0 (d / defendant) 
                                          :ARG1 (a / accident 
                                                :ARG0-of (p / provide-01 
                                                      :ARG1 (c / compensate-01))))) 
                              :ARG2 (g / ground)) 
                        :mod-of (c2 / credibility))) 
            :mod (n / new) 
            :topic (p5 / policy)))

# ::snt she suffered another accident which kept her off work for eight weeks with torn ligaments in her back and damage to nerves at the base of her spine mr wilson said
# ::tok she suffered another accident which kept her off work for eight weeks with torn ligaments in her back and damage to nerves at the base of her spine mr wilson said
# ::alignments 30-31|0 27-28|0.0.0.0.0.0 24-25|0.1.1.1 19-20|0.1.1 18-19|0.1 17-18|0.1.0 13-14|0.0.0.1 11-12|0.1.1.0.1+0.1.1.0 10-11|0.1.1.0.0 7-8|0.0.0.1.0 5-6|0.0.0.0.0 3-4|0.0.0.0 2-3|0.0.0.0.1 1-2|0.0.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:38.065
# ::node	0	say-01	30-31
# ::node	0.0	she	0-1
# ::node	0.0.0	suffer-01	1-2
# ::node	0.0.0.0	accident	3-4
# ::node	0.0.0.0.0	keep-01	5-6
# ::node	0.0.0.0.0.0	spine	27-28
# ::node	0.0.0.0.1	another	2-3
# ::node	0.0.0.1	tear-01	13-14
# ::node	0.0.0.1.0	off	7-8
# ::node	0.1	and	18-19
# ::node	0.1.0	back	17-18
# ::node	0.1.1	damage-01	19-20
# ::node	0.1.1.0	temporal-quantity	11-12
# ::node	0.1.1.0.0	8	10-11
# ::node	0.1.1.0.1	week	11-12
# ::node	0.1.1.1	base	24-25
# ::root	0	say-01
# ::edge	accident	mod	another	0.0.0.0	0.0.0.0.1	
# ::edge	and	op1	back	0.1	0.1.0	
# ::edge	and	op2	damage-01	0.1	0.1.1	
# ::edge	damage-01	ARG0	temporal-quantity	0.1.1	0.1.1.0	
# ::edge	damage-01	location	base	0.1.1	0.1.1.1	
# ::edge	keep-01	ARG0	accident	0.0.0.0.0	0.0.0.0	
# ::edge	keep-01	ARG1	spine	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	say-01	ARG0	she	0	0.0	
# ::edge	say-01	ARG1	and	0	0.1	
# ::edge	suffer-01	ARG0	she	0.0.0	0.0	
# ::edge	suffer-01	ARG1	accident	0.0.0	0.0.0.0	
# ::edge	tear-01	ARG0	off	0.0.0.1	0.0.0.1.0	
# ::edge	tear-01	ARG1	suffer-01	0.0.0.1	0.0.0	
# ::edge	temporal-quantity	quant	8	0.1.1.0	0.1.1.0.0	
# ::edge	temporal-quantity	unit	week	0.1.1.0	0.1.1.0.1	
(s / say-01 
      :ARG0 (s4 / she 
            :ARG0-of (s3 / suffer-01 
                  :ARG1 (a2 / accident 
                        :ARG0-of (k / keep-01 
                              :ARG1 (s2 / spine)) 
                        :mod (a3 / another)) 
                  :ARG1-of (t / tear-01 
                        :ARG0 (o / off)))) 
      :ARG1 (a / and 
            :op1 (b2 / back) 
            :op2 (d / damage-01 
                  :ARG0 (t2 / temporal-quantity 
                        :quant 8 
                        :unit (w / week)) 
                  :location (b / base))))

# ::snt thats why there are so many accidents
# ::tok thats why there are so many accidents
# ::alignments 6-7|0.0 5-6|0.0.0 4-5|0.0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:38.073
# ::node	0	that	0-1
# ::node	0.0	accident	6-7
# ::node	0.0.0	many	5-6
# ::node	0.0.0.0	so	4-5
# ::root	0	that
# ::edge	accident	mod	many	0.0	0.0.0	
# ::edge	many	degree	so	0.0.0	0.0.0.0	
# ::edge	that	domain	accident	0	0.0	
(t / that 
      :domain (a / accident 
            :mod (m / many 
                  :degree (s / so))))

# ::snt he also admitted fraudulent use of a vehicle tax disc lacking insurance failing to stop after an accident theft and two charges of causing actual bodily harm
# ::tok he also admitted fraudulent use of a vehicle tax disc lacking insurance failing to stop after an accident theft and two charges of causing actual bodily harm
# ::alignments 26-27|0.1 24-25|0.1.0 23-24|0 20-21|0.0.0.1.1.0.1 19-20|0.0 18-19|0.0.0.0 17-18|0.0.0.1.0.1 15-16|0.0.0 14-15|0.0.0.1 12-13|0.0.0.1.1 11-12|0.0.0.1.0 10-11|0.0.0.1.0.0 8-9|0.0.0.1.1.0 7-8|0.0.0.1.1.0.0 4-5|0.0.0.1.0.0.0.1 3-4|0.0.0.1.0.0.0.1.0 2-3|0.0.0.1.0.0.0.0 1-2|0.0.0.1.0.0.0.0.0 0-1|0.0.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:38.463
# ::node	0	cause-01	23-24
# ::node	0.0	and	19-20
# ::node	0.0.0	after	15-16
# ::node	0.0.0.0	theft	18-19
# ::node	0.0.0.1	stop-01	14-15
# ::node	0.0.0.1.0	insure-02	11-12
# ::node	0.0.0.1.0.0	lack-01	10-11
# ::node	0.0.0.1.0.0.0	he	0-1
# ::node	0.0.0.1.0.0.0.0	admit-01	2-3
# ::node	0.0.0.1.0.0.0.0.0	also	1-2
# ::node	0.0.0.1.0.0.0.1	use-01	4-5
# ::node	0.0.0.1.0.0.0.1.0	fraudulent	3-4
# ::node	0.0.0.1.0.1	accident	17-18
# ::node	0.0.0.1.1	fail-01	12-13
# ::node	0.0.0.1.1.0	tax-01	8-9
# ::node	0.0.0.1.1.0.0	vehicle	7-8
# ::node	0.0.0.1.1.0.1	2	20-21
# ::node	0.1	harm-01	26-27
# ::node	0.1.0	actual	24-25
# ::root	0	cause-01
# ::edge	accident	domain	insure-02	0.0.0.1.0.1	0.0.0.1.0	
# ::edge	admit-01	ARG0	he	0.0.0.1.0.0.0.0	0.0.0.1.0.0.0	
# ::edge	admit-01	mod	also	0.0.0.1.0.0.0.0	0.0.0.1.0.0.0.0.0	
# ::edge	after	op1	theft	0.0.0	0.0.0.0	
# ::edge	after	op2	and	0.0.0	0.0	
# ::edge	cause-01	ARG0	and	0	0.0	
# ::edge	cause-01	ARG1	harm-01	0	0.1	
# ::edge	fail-01	ARG2	stop-01	0.0.0.1.1	0.0.0.1	
# ::edge	fail-01	purpose	tax-01	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	harm-01	mod	actual	0.1	0.1.0	
# ::edge	lack-01	ARG0	he	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	lack-01	ARG1	insure-02	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	stop-01	ARG0	insure-02	0.0.0.1	0.0.0.1.0	
# ::edge	stop-01	time	after	0.0.0.1	0.0.0	
# ::edge	tax-01	ARG0	vehicle	0.0.0.1.1.0	0.0.0.1.1.0.0	
# ::edge	tax-01	ARG1	2	0.0.0.1.1.0	0.0.0.1.1.0.1	
# ::edge	use-01	ARG0	he	0.0.0.1.0.0.0.1	0.0.0.1.0.0.0	
# ::edge	use-01	mod	fraudulent	0.0.0.1.0.0.0.1	0.0.0.1.0.0.0.1.0	
(c / cause-01 
      :ARG0 (a2 / and 
            :op-of (a4 / after 
                  :op1 (t / theft) 
                  :time-of (s / stop-01 
                        :ARG0 (i / insure-02 
                              :ARG1-of (l / lack-01 
                                    :ARG0 (h2 / he 
                                          :ARG0-of (a5 / admit-01 
                                                :mod (a6 / also)) 
                                          :ARG0-of (u / use-01 
                                                :mod (f2 / fraudulent)))) 
                              :domain-of (a3 / accident)) 
                        :ARG2-of (f / fail-01 
                              :purpose (t2 / tax-01 
                                    :ARG0 (v / vehicle) 
                                    :ARG1 2))))) 
      :ARG1 (h / harm-01 
            :mod (a / actual)))

# ::snt gronberg lost 50 per cent of the sight in her right eye following a car accident six weeks ago
# ::tok gronberg lost 50 per cent of the sight in her right eye following a car accident six weeks ago
# ::alignments 17-18|0.0.0.0.1+0.0.0.0 16-17|0.0.0.0.0 15-16|0.2.0 14-15|0.2 11-12|0.0.0.1 7-8|0.0.0 4-5|0.0.1+0.0 2-3|0.1 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:38.617
# ::node	0	lose-02	1-2
# ::node	0.0	monetary-quantity	4-5
# ::node	0.0.0	sight-01	7-8
# ::node	0.0.0.0	temporal-quantity	17-18
# ::node	0.0.0.0.0	6	16-17
# ::node	0.0.0.0.1	week	17-18
# ::node	0.0.0.1	eye	11-12
# ::node	0.0.1	cent	4-5
# ::node	0.1	50	2-3
# ::node	0.2	car	14-15
# ::node	0.2.0	accident	15-16
# ::root	0	lose-02
# ::edge	accident	location	car	0.2.0	0.2	
# ::edge	car	op1	lose-02	0.2	0	
# ::edge	lose-02	ARG0	monetary-quantity	0	0.0	
# ::edge	lose-02	ARG1	50	0	0.1	
# ::edge	monetary-quantity	time	sight-01	0.0	0.0.0	
# ::edge	monetary-quantity	unit	cent	0.0	0.0.1	
# ::edge	sight-01	ARG0	temporal-quantity	0.0.0	0.0.0.0	
# ::edge	sight-01	ARG1	eye	0.0.0	0.0.0.1	
# ::edge	temporal-quantity	quant	6	0.0.0.0	0.0.0.0.0	
# ::edge	temporal-quantity	unit	week	0.0.0.0	0.0.0.0.1	
(l / lose-02 
      :ARG0 (m / monetary-quantity 
            :time (s / sight-01 
                  :ARG0 (t / temporal-quantity 
                        :quant 6 
                        :unit (w / week)) 
                  :ARG1 (e / eye)) 
            :unit (c2 / cent)) 
      :ARG1 50 
      :op-of (c / car 
            :location-of (a / accident)))

# ::snt the british government had arrived at the first unwillingly at the second by accident at the third with determination
# ::tok the british government had arrived at the first unwillingly at the second by accident at the third with determination
# ::alignments 18-19|0 13-14|0.0 4-5|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:38.634
# ::node	0	determine-01	18-19
# ::node	0.0	accident	13-14
# ::node	0.0.0	arrive-01	4-5
# ::root	0	determine-01
# ::edge	arrive-01	ARG4	accident	0.0.0	0.0	
# ::edge	determine-01	ARG1	accident	0	0.0	
(d / determine-01 
      :ARG1 (a / accident 
            :ARG4-of (a2 / arrive-01)))

# ::snt they will tackle increasing demand for reconstructive work on accident victims and people with congenital deformities
# ::tok they will tackle increasing demand for reconstructive work on accident victims and people with congenital deformities
# ::alignments 15-16|0.0.0 11-12|0.1.0 10-11|0.0.0.0.0 9-10|0.0.0.0 4-5|0.1 3-4|0.1.1 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:38.746
# ::node	0	tackle-01	2-3
# ::node	0.0	they	0-1
# ::node	0.0.0	deform-01	15-16
# ::node	0.0.0.0	accident	9-10
# ::node	0.0.0.0.0	victim	10-11
# ::node	0.1	demand-01	4-5
# ::node	0.1.0	and	11-12
# ::node	0.1.1	increase-01	3-4
# ::root	0	tackle-01
# ::edge	deform-01	ARG0	they	0.0.0	0.0	
# ::edge	deform-01	ARG2	accident	0.0.0	0.0.0.0	
# ::edge	demand-01	ARG1	and	0.1	0.1.0	
# ::edge	increase-01	ARG1	demand-01	0.1.1	0.1	
# ::edge	tackle-01	ARG0	they	0	0.0	
# ::edge	tackle-01	ARG1	demand-01	0	0.1	
# ::edge	victim	mod	accident	0.0.0.0.0	0.0.0.0	
(t / tackle-01 
      :ARG0 (t2 / they 
            :ARG0-of (d / deform-01 
                  :ARG2 (a2 / accident 
                        :mod-of (v / victim)))) 
      :ARG1 (d2 / demand-01 
            :ARG1 (a / and) 
            :ARG1-of (i / increase-01)))

# ::snt an accident happens or a wedding
# ::tok an accident happens or a wedding
# ::alignments 5-6|0.0.0 3-4|0.0 2-3|0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:38.756
# ::node	0	happen-01	2-3
# ::node	0.0	or	3-4
# ::node	0.0.0	wed-01	5-6
# ::node	0.0.0.0	accident	1-2
# ::root	0	happen-01
(h / happen-01 
      :op-of (o / or 
            :op1 (w / wed-01 
                  :ARG1 (a / accident))))

# ::snt the return of the swamp thing directed by jim wynorski whose previous credits include death stalker ii and chopping mall is a harmless piece of schlock about a scientist turned into a walking plant by a freak accident
# ::tok the return of the swamp thing directed by jim wynorski whose previous credits include death stalker ii and chopping mall is a harmless piece of schlock about a scientist turned into a walking plant by a freak accident
# ::alignments 37-38|0.0.0.0 36-37|0.0.0.0.0 33-34|0.0.0 32-33|0.0 28-29|0.0.0.0.0.0.1 23-24|0.0.0.0.0.0 22-23|0.0.0.0.0.0.0 19-20|0.4 17-18|0 16-17|0.3 14-15|0.3.0 13-14|0.1 12-13|0.1.0 11-12|0.1.0.0 6-7|0.2 5-6|0.2.0 4-5|0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:39.169
# ::node	0	and	17-18
# ::node	0.0	walk-01	32-33
# ::node	0.0.0	plant	33-34
# ::node	0.0.0.0	accident	37-38
# ::node	0.0.0.0.0	freak-01	36-37
# ::node	0.0.0.0.0.0	piece	23-24
# ::node	0.0.0.0.0.0.0	harmless	22-23
# ::node	0.0.0.0.0.0.1	scientist	28-29
# ::node	0.1	include-01	13-14
# ::node	0.1.0	credit	12-13
# ::node	0.1.0.0	previous	11-12
# ::node	0.2	direct-01	6-7
# ::node	0.2.0	thing	5-6
# ::node	0.2.0.0	swamp	4-5
# ::node	0.3	ii	16-17
# ::node	0.3.0	die-01	14-15
# ::node	0.4	mall	19-20
# ::root	0	and
# ::edge	accident	location	freak-01	0.0.0.0	0.0.0.0.0	
# ::edge	and	op1	ii	0	0.3	
# ::edge	and	op2	mall	0	0.4	
# ::edge	credit	mod	previous	0.1.0	0.1.0.0	
# ::edge	direct-01	ARG1	thing	0.2	0.2.0	
# ::edge	direct-01	ARG2	and	0.2	0	
# ::edge	freak-01	ARG2	piece	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	ii	mod	die-01	0.3	0.3.0	
# ::edge	include-01	ARG1	and	0.1	0	
# ::edge	include-01	ARG2	credit	0.1	0.1.0	
# ::edge	piece	mod	harmless	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	piece	source	scientist	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	plant	location	accident	0.0.0	0.0.0.0	
# ::edge	thing	mod	swamp	0.2.0	0.2.0.0	
# ::edge	walk-01	ARG0	and	0.0	0	
# ::edge	walk-01	ARG1	plant	0.0	0.0.0	
(a2 / and 
      :ARG0-of (w / walk-01 
            :ARG1 (p / plant 
                  :location (a / accident 
                        :location (f / freak-01 
                              :ARG2 (p2 / piece 
                                    :mod (h / harmless) 
                                    :source (s / scientist)))))) 
      :ARG1-of (i2 / include-01 
            :ARG2 (c / credit 
                  :mod (p3 / previous))) 
      :ARG2-of (d2 / direct-01 
            :ARG1 (t / thing 
                  :mod (s2 / swamp))) 
      :op1 (i / ii 
            :mod (d / die-01)) 
      :op2 (m / mall))

# ::snt mr paul harrison prosecuting said the accident had happened just before 10am as the metro travelled from cromwell road towards banbury and the samba travelled in the opposite direction
# ::tok mr paul harrison prosecuting said the accident had happened just before 10am as the metro travelled from cromwell road towards banbury and the samba travelled in the opposite direction
# ::alignments 28-29|0.0.1.1.0 27-28|0.0.1.1.0.0 24-25|0.0.1.1 21-22|0.0.1 18-19|0.0.1.0.1 15-16|0.0.1.0 14-15|0.0.1.0.0 10-11|0.0.2 9-10|0.0.3 8-9|0.0 6-7|0.0.0 4-5|0 3-4|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:39.247
# ::node	0	say-01	4-5
# ::node	0.0	happen-01	8-9
# ::node	0.0.0	accident	6-7
# ::node	0.0.1	and	21-22
# ::node	0.0.1.0	travel-01	15-16
# ::node	0.0.1.0.0	metro	14-15
# ::node	0.0.1.0.1	road	18-19
# ::node	0.0.1.1	travel-01	24-25
# ::node	0.0.1.1.0	direction	28-29
# ::node	0.0.1.1.0.0	opposite-41	27-28
# ::node	0.0.2	before	10-11
# ::node	0.0.3	just	9-10
# ::node	0.1	prosecute-01	3-4
# ::root	0	say-01
# ::edge	and	op1	travel-01	0.0.1	0.0.1.0	
# ::edge	and	op2	travel-01	0.0.1	0.0.1.1	
# ::edge	happen-01	ARG1	accident	0.0	0.0.0	
# ::edge	happen-01	condition	and	0.0	0.0.1	
# ::edge	happen-01	time	before	0.0	0.0.2	
# ::edge	happen-01	time	just	0.0	0.0.3	
# ::edge	opposite-41	ARG1	direction	0.0.1.1.0.0	0.0.1.1.0	
# ::edge	prosecute-01	ARG1	say-01	0.1	0	
# ::edge	say-01	ARG1	happen-01	0	0.0	
# ::edge	travel-01	ARG0	metro	0.0.1.0	0.0.1.0.0	
# ::edge	travel-01	ARG1	direction	0.0.1.1	0.0.1.1.0	
# ::edge	travel-01	ARG1	road	0.0.1.0	0.0.1.0.1	
(s / say-01 
      :ARG1 (h / happen-01 
            :ARG1 (a2 / accident) 
            :condition (a / and 
                  :op1 (t2 / travel-01 
                        :ARG0 (m / metro) 
                        :ARG1 (r / road)) 
                  :op2 (t / travel-01 
                        :ARG1 (d / direction 
                              :ARG1-of (o / opposite-41)))) 
            :time (b / before) 
            :time (j / just)) 
      :ARG1-of (p / prosecute-01))

# ::snt mickey inotta is at port vale mickey has this been resolved yet yes jane it has as luck would have it i was late arriving had to run through the rain ran into the main stand and by pure accident ran into the oxford united dressing room and there was brian horton he said hallo mick hows the poster mickey as he always does and in fact he gave me the team news and that is dash
# ::tok mickey inotta is at port vale mickey has this been resolved yet yes jane it has as luck would have it i was late arriving had to run through the rain ran into the main stand and by pure accident ran into the oxford united dressing room and there was brian horton he said hallo mick hows the poster mickey as he always does and in fact he gave me the team news and that is dash
# ::alignments 73-74|0.1.0.3.1 72-73|0.1.0.3 71-72|0.1.0.3.0 67-68|0.1.0.3.2 66-67|0.1.0.3.2.0 64-65|0.1 62-63|0.1.0.2.2 61-62|0.1.1 58-59|0.1.0.1.0 53-54|0 52-53|0.0 47-48|0.1.0 46-47|0.1.0.2.1 45-46|0.1.0.2 44-45|0.1.0.1 39-40|0.1.0.2.1.0 38-39|0.1.0.2.1.0.0 36-37|0.1.0.0 34-35|0.1.0.2.0.1.2 30-31|0.1.0.2.0 24-25|0.1.0.3.1.0 23-24|0.1.0.3.1.0.3 21-22|0.1.0.3.1.0.0 20-21|0.1.0.3.1.0.1 17-18|0.1.0.3.1.0.1.0 14-15|0.1.0.3.1.0.4 12-13|0.1.0.2.0.1.1 11-12|0.1.0.2.0.1.0 10-11|0.1.0.2.0.1 8-9|0.1.0.2.0.0 4-5|0.1.0.3.1.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:42.491
# ::node	0	say-01	53-54
# ::node	0.0	he	52-53
# ::node	0.1	and	64-65
# ::node	0.1.0	and	47-48
# ::node	0.1.0.0	and	36-37
# ::node	0.1.0.1	unite-01	44-45
# ::node	0.1.0.1.0	poster	58-59
# ::node	0.1.0.2	dress-01	45-46
# ::node	0.1.0.2.0	rain-01	30-31
# ::node	0.1.0.2.0.0	this	8-9
# ::node	0.1.0.2.0.1	resolve-01	10-11
# ::node	0.1.0.2.0.1.0	yet	11-12
# ::node	0.1.0.2.0.1.1	yes	12-13
# ::node	0.1.0.2.0.1.2	main	34-35
# ::node	0.1.0.2.1	room	46-47
# ::node	0.1.0.2.1.0	accident	39-40
# ::node	0.1.0.2.1.0.0	pure	38-39
# ::node	0.1.0.2.2	always	62-63
# ::node	0.1.0.3	news	72-73
# ::node	0.1.0.3.0	team	71-72
# ::node	0.1.0.3.1	and	73-74
# ::node	0.1.0.3.1.0	arrive-01	24-25
# ::node	0.1.0.3.1.0.0	i	21-22
# ::node	0.1.0.3.1.0.1	it	20-21
# ::node	0.1.0.3.1.0.1.0	luck	17-18
# ::node	0.1.0.3.1.0.2	port	4-5
# ::node	0.1.0.3.1.0.3	late	23-24
# ::node	0.1.0.3.1.0.4	it	14-15
# ::node	0.1.0.3.2	he	67-68
# ::node	0.1.0.3.2.0	fact	66-67
# ::node	0.1.1	he	61-62
# ::root	0	say-01
# ::edge	accident	mod	pure	0.1.0.2.1.0	0.1.0.2.1.0.0	
# ::edge	accident	name	room	0.1.0.2.1.0	0.1.0.2.1	
# ::edge	always	op1	dress-01	0.1.0.2.2	0.1.0.2	
# ::edge	and	op1	and	0.1	0.1.0	
# ::edge	and	op1	and	0.1.0	0.1.0.0	
# ::edge	and	op1	arrive-01	0.1.0.3.1	0.1.0.3.1.0	
# ::edge	and	op2	he	0.1	0.1.1	
# ::edge	and	op2	news	0.1.0.3.1	0.1.0.3	
# ::edge	and	op2	unite-01	0.1.0	0.1.0.1	
# ::edge	and	op3	dress-01	0.1.0	0.1.0.2	
# ::edge	and	op4	news	0.1.0	0.1.0.3	
# ::edge	arrive-01	ARG0	i	0.1.0.3.1.0	0.1.0.3.1.0.0	
# ::edge	arrive-01	ARG1	it	0.1.0.3.1.0	0.1.0.3.1.0.1	
# ::edge	arrive-01	time	it	0.1.0.3.1.0	0.1.0.3.1.0.4	
# ::edge	arrive-01	time	late	0.1.0.3.1.0	0.1.0.3.1.0.3	
# ::edge	dress-01	ARG0	rain-01	0.1.0.2	0.1.0.2.0	
# ::edge	dress-01	ARG1	room	0.1.0.2	0.1.0.2.1	
# ::edge	fact	poss	he	0.1.0.3.2.0	0.1.0.3.2	
# ::edge	it	topic	luck	0.1.0.3.1.0.1	0.1.0.3.1.0.1.0	
# ::edge	main	op1	resolve-01	0.1.0.2.0.1.2	0.1.0.2.0.1	
# ::edge	news	manner	team	0.1.0.3	0.1.0.3.0	
# ::edge	news	poss	he	0.1.0.3	0.1.0.3.2	
# ::edge	port	op1	arrive-01	0.1.0.3.1.0.2	0.1.0.3.1.0	
# ::edge	rain-01	ARG0	this	0.1.0.2.0	0.1.0.2.0.0	
# ::edge	rain-01	ARG1	resolve-01	0.1.0.2.0	0.1.0.2.0.1	
# ::edge	resolve-01	ARG1	yet	0.1.0.2.0.1	0.1.0.2.0.1.0	
# ::edge	resolve-01	ARG2	yes	0.1.0.2.0.1	0.1.0.2.0.1.1	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	and	0	0.1	
# ::edge	unite-01	ARG0	poster	0.1.0.1	0.1.0.1.0	
(s / say-01 
      :ARG0 (h3 / he) 
      :ARG1 (a2 / and 
            :op1 (a4 / and 
                  :op1 (a6 / and) 
                  :op2 (u / unite-01 
                        :ARG0 (p / poster)) 
                  :op3 (d / dress-01 
                        :ARG0 (r2 / rain-01 
                              :ARG0 (t2 / this) 
                              :ARG1 (r3 / resolve-01 
                                    :ARG1 (y2 / yet) 
                                    :ARG2 (y / yes) 
                                    :op-of (m / main))) 
                        :ARG1 (r / room 
                              :name-of (a5 / accident 
                                    :mod (p2 / pure))) 
                        :op-of (a3 / always)) 
                  :op4 (n / news 
                        :manner (t / team) 
                        :op-of (a / and 
                              :op1 (a7 / arrive-01 
                                    :ARG0 (i / i) 
                                    :ARG1 (i2 / it 
                                          :topic (l2 / luck)) 
                                    :op-of (p3 / port) 
                                    :time (l / late) 
                                    :time (i3 / it))) 
                        :poss (h / he 
                              :poss-of (f / fact)))) 
            :op2 (h2 / he)))

# ::snt when his then speechwriter mr william safire suggested that senator kennedys accident at marthas vineyard would be buried in the excitement of the moon landing mr nixon disagreed the fact that it happened this day july 19 could make it even more significant
# ::tok when his then speechwriter mr william safire suggested that senator kennedys accident at marthas vineyard would be buried in the excitement of the moon landing mr nixon disagreed the fact that it happened this day july 19 could make it even more significant
# ::alignments 42-43|0.2.2 39-40|0.2.2.0 37-38|0.1 36-37|0.2.0.0.0 35-36|0.2.1.3.1+0.2.1.3 34-35|0.2.1.1 33-34|0.2.1.3.0 32-33|0.2.1 31-32|0.2.1.0 29-30|0.2 27-28|0 24-25|0.2.1.2 23-24|0.2.1.2.0 17-18|0.2.0.0 11-12|0.2.0.0.1 7-8|0.2.0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:43.137
# ::node	0	disagree-01	27-28
# ::node	0.0	then	2-3
# ::node	0.1	possible	37-38
# ::node	0.2	fact	29-30
# ::node	0.2.0	suggest-01	7-8
# ::node	0.2.0.0	bury-01	17-18
# ::node	0.2.0.0.0	19	36-37
# ::node	0.2.0.0.1	accident	11-12
# ::node	0.2.1	happen-01	32-33
# ::node	0.2.1.0	it	31-32
# ::node	0.2.1.1	day	34-35
# ::node	0.2.1.2	land-01	24-25
# ::node	0.2.1.2.0	moon	23-24
# ::node	0.2.1.3	date-entity	35-36
# ::node	0.2.1.3.0	this	33-34
# ::node	0.2.1.3.1	7	35-36
# ::node	0.2.2	significant	42-43
# ::node	0.2.2.0	it	39-40
# ::root	0	disagree-01
# ::edge	bury-01	ARG0	19	0.2.0.0	0.2.0.0.0	
# ::edge	bury-01	ARG1	accident	0.2.0.0	0.2.0.0.1	
# ::edge	date-entity	mod	this	0.2.1.3	0.2.1.3.0	
# ::edge	date-entity	month	7	0.2.1.3	0.2.1.3.1	
# ::edge	disagree-01	ARG0	then	0	0.0	
# ::edge	disagree-01	ARG1	possible	0	0.1	
# ::edge	disagree-01	ARG2	fact	0	0.2	
# ::edge	happen-01	ARG0	it	0.2.1	0.2.1.0	
# ::edge	happen-01	ARG1	day	0.2.1	0.2.1.1	
# ::edge	happen-01	ARG2	land-01	0.2.1	0.2.1.2	
# ::edge	happen-01	ARG4	fact	0.2.1	0.2	
# ::edge	happen-01	time	date-entity	0.2.1	0.2.1.3	
# ::edge	land-01	ARG1	moon	0.2.1.2	0.2.1.2.0	
# ::edge	significant	domain	fact	0.2.2	0.2	
# ::edge	significant	domain	it	0.2.2	0.2.2.0	
# ::edge	suggest-01	ARG0	fact	0.2.0	0.2	
# ::edge	suggest-01	ARG1	bury-01	0.2.0	0.2.0.0	
(d3 / disagree-01 
      :ARG0 (t2 / then) 
      :ARG1 (p / possible) 
      :ARG2 (f / fact 
            :ARG0-of (s2 / suggest-01 
                  :ARG1 (b / bury-01 
                        :ARG0 19 
                        :ARG1 (a / accident))) 
            :ARG4-of (h / happen-01 
                  :ARG0 (i2 / it) 
                  :ARG1 (d2 / day) 
                  :ARG2 (l / land-01 
                        :ARG1 (m / moon)) 
                  :time (d / date-entity 
                        :mod (t / this) 
                        :month 7)) 
            :domain-of (s / significant 
                  :domain (i / it))))

# ::snt swallow had inherited this apparatus when he himself became head of department following the sudden death of dalton in a car accident and he used the agenda committee as a kind of kitchen cabinet to consider the departments policy on any given issue and how it might be presented to the full department committee with the minimum risk of contentious debate
# ::tok swallow had inherited this apparatus when he himself became head of department following the sudden death of dalton in a car accident and he used the agenda committee as a kind of kitchen cabinet to consider the departments policy on any given issue and how it might be presented to the full department committee with the minimum risk of contentious debate
# ::alignments 60-61|0.0.1.2.1.2.0 59-60|0.0.1.2.1.2.0.0 57-58|0.0.1.2.1.2 56-57|0.0.1.2.1.2.1 53-54|0.0.1.2.1.1 52-53|0.0.1.2.1.1.0 51-52|0.0.1.2.1.1.0.0 48-49|0.0.1.2.1 45-46|0.0.1.2.1.0 43-44|0.0.1.2 42-43|0.2.0.0 41-42|0.0.1.2.0 40-41|0.2.0.0.0 38-39|0.2.2.1 37-38|0.2.2.1.0 35-36|0.2.2 33-34|0.2.2.0.0 30-31|0.2.2.0 27-28|0.2.1 26-27|0.2.1.0 24-25|0.2 23-24|0.2.0 22-23|0 21-22|0.1 20-21|0.1.0 15-16|0.1.0.0 14-15|0.1.0.0.0 11-12|0.0.0.1 9-10|0.0.0 8-9|0.0 6-7|0.0.0.0 4-5|0.0.1.0 3-4|0.0.1.0.0 2-3|0.0.1 0-1|0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:45.053
# ::node	0	and	22-23
# ::node	0.0	become-01	8-9
# ::node	0.0.0	head-01	9-10
# ::node	0.0.0.0	he	6-7
# ::node	0.0.0.1	department	11-12
# ::node	0.0.1	inherit-01	2-3
# ::node	0.0.1.0	apparatus	4-5
# ::node	0.0.1.0.0	this	3-4
# ::node	0.0.1.1	swallow-01	0-1
# ::node	0.0.1.2	and	43-44
# ::node	0.0.1.2.0	give-01	41-42
# ::node	0.0.1.2.1	present-01	48-49
# ::node	0.0.1.2.1.0	it	45-46
# ::node	0.0.1.2.1.1	committee	53-54
# ::node	0.0.1.2.1.1.0	department	52-53
# ::node	0.0.1.2.1.1.0.0	full	51-52
# ::node	0.0.1.2.1.2	risk-01	57-58
# ::node	0.0.1.2.1.2.0	debate-01	60-61
# ::node	0.0.1.2.1.2.0.0	contentious	59-60
# ::node	0.0.1.2.1.2.1	minimum	56-57
# ::node	0.1	accident	21-22
# ::node	0.1.0	car	20-21
# ::node	0.1.0.0	die-01	15-16
# ::node	0.1.0.0.0	sudden	14-15
# ::node	0.2	use-01	24-25
# ::node	0.2.0	he	23-24
# ::node	0.2.0.0	issue	42-43
# ::node	0.2.0.0.0	any	40-41
# ::node	0.2.1	committee	27-28
# ::node	0.2.1.0	agenda	26-27
# ::node	0.2.2	consider-02	35-36
# ::node	0.2.2.0	kind	30-31
# ::node	0.2.2.0.0	cabinet	33-34
# ::node	0.2.2.1	policy	38-39
# ::node	0.2.2.1.0	department	37-38
# ::root	0	and
# ::edge	accident	location	car	0.1	0.1.0	
# ::edge	agenda	part	committee	0.2.1.0	0.2.1	
# ::edge	and	op1	accident	0	0.1	
# ::edge	and	op1	inherit-01	0.0.1.2	0.0.1	
# ::edge	and	op2	present-01	0.0.1.2	0.0.1.2.1	
# ::edge	and	op2	use-01	0	0.2	
# ::edge	apparatus	mod	this	0.0.1.0	0.0.1.0.0	
# ::edge	become-01	ARG1	head-01	0.0	0.0.0	
# ::edge	become-01	ARG2	and	0.0	0	
# ::edge	committee	mod	department	0.0.1.2.1.1	0.0.1.2.1.1.0	
# ::edge	consider-02	ARG0	kind	0.2.2	0.2.2.0	
# ::edge	consider-02	ARG1	policy	0.2.2	0.2.2.1	
# ::edge	debate-01	mod	contentious	0.0.1.2.1.2.0	0.0.1.2.1.2.0.0	
# ::edge	department	mod	full	0.0.1.2.1.1.0	0.0.1.2.1.1.0.0	
# ::edge	die-01	ARG1	car	0.1.0.0	0.1.0	
# ::edge	die-01	manner	sudden	0.1.0.0	0.1.0.0.0	
# ::edge	give-01	ARG1	and	0.0.1.2.0	0.0.1.2	
# ::edge	head-01	ARG0	he	0.0.0	0.0.0.0	
# ::edge	head-01	ARG1	department	0.0.0	0.0.0.1	
# ::edge	inherit-01	ARG1	apparatus	0.0.1	0.0.1.0	
# ::edge	inherit-01	time	become-01	0.0.1	0.0	
# ::edge	issue	mod	any	0.2.0.0	0.2.0.0.0	
# ::edge	issue	poss	he	0.2.0.0	0.2.0	
# ::edge	kind	mod	cabinet	0.2.2.0	0.2.2.0.0	
# ::edge	policy	mod	department	0.2.2.1	0.2.2.1.0	
# ::edge	present-01	ARG1	it	0.0.1.2.1	0.0.1.2.1.0	
# ::edge	present-01	ARG2	committee	0.0.1.2.1	0.0.1.2.1.1	
# ::edge	present-01	time	risk-01	0.0.1.2.1	0.0.1.2.1.2	
# ::edge	risk-01	ARG1	debate-01	0.0.1.2.1.2	0.0.1.2.1.2.0	
# ::edge	risk-01	mod	minimum	0.0.1.2.1.2	0.0.1.2.1.2.1	
# ::edge	swallow-01	ARG1	inherit-01	0.0.1.1	0.0.1	
# ::edge	use-01	ARG0	he	0.2	0.2.0	
# ::edge	use-01	ARG1	committee	0.2	0.2.1	
# ::edge	use-01	ARG2	consider-02	0.2	0.2.2	
(a4 / and 
      :ARG2-of (b / become-01 
            :ARG1 (h2 / head-01 
                  :ARG0 (h3 / he) 
                  :ARG1 (d5 / department)) 
            :time-of (i3 / inherit-01 
                  :ARG1 (a6 / apparatus 
                        :mod (t / this)) 
                  :ARG1-of (s2 / swallow-01) 
                  :op-of (a / and 
                        :ARG1-of (g / give-01) 
                        :op1 (p / present-01 
                              :ARG1 (i / it) 
                              :ARG2 (c2 / committee 
                                    :mod (d2 / department 
                                          :mod (f / full))) 
                              :time (r / risk-01 
                                    :ARG1 (d / debate-01 
                                          :mod (c / contentious)) 
                                    :mod (m / minimum)))))) 
      :op1 (a5 / accident 
            :location (c6 / car 
                  :ARG1-of (d4 / die-01 
                        :manner (s / sudden)))) 
      :op2 (u / use-01 
            :ARG0 (h / he 
                  :poss-of (i2 / issue 
                        :mod (a2 / any))) 
            :ARG1 (c5 / committee 
                  :part-of (a3 / agenda)) 
            :ARG2 (c3 / consider-02 
                  :ARG0 (k / kind 
                        :mod (c4 / cabinet)) 
                  :ARG1 (p2 / policy 
                        :mod (d3 / department)))))

# ::snt make sure you have arranged mortgage protection cover and if possible insure yourself against sickness redundancy or accident
# ::tok make sure you have arranged mortgage protection cover and if possible insure yourself against sickness redundancy or accident
# ::alignments 17-18|0.0.3.0 16-17|0.0.3 14-15|0.0.1.0 10-11|0 8-9|0.0.2 6-7|0.0.1 5-6|0.0.0.0 4-5|0.0 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:45.231
# ::node	0	possible	10-11
# ::node	0.0	arrange-01	4-5
# ::node	0.0.0	you	2-3
# ::node	0.0.0.0	mortgage-01	5-6
# ::node	0.0.1	protect-01	6-7
# ::node	0.0.1.0	sickness	14-15
# ::node	0.0.2	and	8-9
# ::node	0.0.3	or	16-17
# ::node	0.0.3.0	accident	17-18
# ::root	0	possible
(p / possible 
      :ARG2-of (a3 / arrange-01 
            :ARG0 (y / you 
                  :ARG0-of (m / mortgage-01)) 
            :ARG1 (p2 / protect-01 
                  :ARG1 (s / sickness)) 
            :op-of (a2 / and) 
            :op-of (o / or 
                  :op1 (a / accident))))

# ::snt the cost of land construction and maintenance is set against financial benefits such as fewer accidents and lower transport costs
# ::tok the cost of land construction and maintenance is set against financial benefits such as fewer accidents and lower transport costs
# ::alignments 19-20|0.0.0 18-19|0.0 17-18|0 16-17|0.0.0.1 15-16|0.0.0.1.1 14-15|0.0.0.0 12-13|0.0.0.1.0.0 11-12|0.0.0.1.0 10-11|0.0.0.1.0.1 6-7|0.0.0.1.0.2.1 5-6|0.0.0.1.0.2 4-5|0.0.0.1.0.2.0.0 3-4|0.0.0.1.0.2.0.0.0 1-2|0.0.0.1.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:45.445
# ::node	0	low	17-18
# ::node	0.0	transport-01	18-19
# ::node	0.0.0	cost-01	19-20
# ::node	0.0.0.0	few	14-15
# ::node	0.0.0.1	and	16-17
# ::node	0.0.0.1.0	benefit-01	11-12
# ::node	0.0.0.1.0.0	such	12-13
# ::node	0.0.0.1.0.1	finance	10-11
# ::node	0.0.0.1.0.2	and	5-6
# ::node	0.0.0.1.0.2.0	cost-01	1-2
# ::node	0.0.0.1.0.2.0.0	construct-01	4-5
# ::node	0.0.0.1.0.2.0.0.0	land	3-4
# ::node	0.0.0.1.0.2.1	maintain-01	6-7
# ::node	0.0.0.1.1	accident	15-16
# ::root	0	low
(l / low 
      :mod-of (t / transport-01 
            :ARG1-of (c / cost-01 
                  :ARG2 (f / few) 
                  :op-of (a / and 
                        :ARG0-of (b / benefit-01 
                              :ARG1 (s / such) 
                              :mod (f2 / finance) 
                              :op-of (a3 / and 
                                    :ARG1-of (c3 / cost-01 
                                          :ARG2 (c2 / construct-01 
                                                :ARG1 (l2 / land))) 
                                    :op1 (m / maintain-01))) 
                        :op1 (a2 / accident)))))

# ::snt ambulance crews began a nationwide ban on all but accident and emergency work at midnight in a major escalation of the 10week pay dispute
# ::tok ambulance crews began a nationwide ban on all but accident and emergency work at midnight in a major escalation of the 10week pay dispute
# ::alignments 23-24|0.2.0.0 22-23|0.2.0 18-19|0.2.0.0.0 17-18|0.2.0.0.0.0 14-15|0.2.0.1 11-12|0.2.2 10-11|0.2 9-10|0.2.1 8-9|0 7-8|0.0 5-6|0.1 4-5|0.1.1 2-3|0.1.0 0-1|0.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:45.570
# ::node	0	contrast-01	8-9
# ::node	0.0	all	7-8
# ::node	0.1	ban-01	5-6
# ::node	0.1.0	begin-01	2-3
# ::node	0.1.1	nationwide	4-5
# ::node	0.2	and	10-11
# ::node	0.2.0	pay-01	22-23
# ::node	0.2.0.0	dispute-01	23-24
# ::node	0.2.0.0.0	escalate-01	18-19
# ::node	0.2.0.0.0.0	major	17-18
# ::node	0.2.0.1	midnight	14-15
# ::node	0.2.1	accident	9-10
# ::node	0.2.2	emergency	11-12
# ::node	0.3	ambulance	0-1
# ::root	0	contrast-01
# ::edge	and	op1	accident	0.2	0.2.1	
# ::edge	and	op2	emergency	0.2	0.2.2	
# ::edge	ban-01	ARG1	contrast-01	0.1	0	
# ::edge	ban-01	mod	nationwide	0.1	0.1.1	
# ::edge	begin-01	ARG1	ban-01	0.1.0	0.1	
# ::edge	contrast-01	ARG1	all	0	0.0	
# ::edge	contrast-01	ARG2	and	0	0.2	
# ::edge	contrast-01	time	ambulance	0	0.3	
# ::edge	escalate-01	ARG1	dispute-01	0.2.0.0.0	0.2.0.0	
# ::edge	escalate-01	mod	major	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	pay-01	ARG1	dispute-01	0.2.0	0.2.0.0	
# ::edge	pay-01	ARG3	and	0.2.0	0.2	
# ::edge	pay-01	location	midnight	0.2.0	0.2.0.1	
(c / contrast-01 
      :ARG1 (a3 / all) 
      :ARG1-of (b / ban-01 
            :ARG1-of (b2 / begin-01) 
            :mod (n / nationwide)) 
      :ARG2 (a / and 
            :ARG3-of (p / pay-01 
                  :ARG1 (d / dispute-01 
                        :ARG1-of (e / escalate-01 
                              :mod (m / major))) 
                  :location (m2 / midnight)) 
            :op1 (a2 / accident) 
            :op2 (e2 / emergency)) 
      :time (a4 / ambulance))

# ::snt the dedication of the church  to st thomas is no accident
# ::tok the dedication of the church to st thomas is no accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:45.571
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt it also says three earlier accidents had been largely ignored because there had been no fatalities
# ::tok it also says three earlier accidents had been largely ignored because there had been no fatalities
# ::alignments 15-16|0.1.2.0 14-15|0.1.0 10-11|0.1.2 9-10|0.1 8-9|0.1.3 5-6|0.1.1 4-5|0.1.1.0 3-4|0.1.1.1 2-3|0 1-2|0.2 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:45.663
# ::node	0	say-01	2-3
# ::node	0.0	it	0-1
# ::node	0.1	ignore-01	9-10
# ::node	0.1.0	-	14-15
# ::node	0.1.1	accident	5-6
# ::node	0.1.1.0	early	4-5
# ::node	0.1.1.1	3	3-4
# ::node	0.1.2	cause-01	10-11
# ::node	0.1.2.0	fatality	15-16
# ::node	0.1.3	large	8-9
# ::node	0.2	also	1-2
# ::root	0	say-01
# ::edge	accident	mod	early	0.1.1	0.1.1.0	
# ::edge	accident	quant	3	0.1.1	0.1.1.1	
# ::edge	cause-01	ARG0	fatality	0.1.2	0.1.2.0	
# ::edge	cause-01	ARG1	ignore-01	0.1.2	0.1	
# ::edge	ignore-01	ARG0	-	0.1	0.1.0	
# ::edge	ignore-01	ARG1	accident	0.1	0.1.1	
# ::edge	ignore-01	degree	large	0.1	0.1.3	
# ::edge	say-01	ARG0	it	0	0.0	
# ::edge	say-01	ARG1	ignore-01	0	0.1	
# ::edge	say-01	mod	also	0	0.2	
(s / say-01 
      :ARG0 (i2 / it) 
      :ARG1 (i / ignore-01 
            :ARG0 (- / -) 
            :ARG1 (a / accident 
                  :mod (e / early) 
                  :quant 3) 
            :ARG1-of (c / cause-01 
                  :ARG0 (f / fatality)) 
            :degree (l / large)) 
      :mod (a2 / also))

# ::snt if the population is too small then accident or disease in one or two critical animals could endanger the entire population
# ::tok if the population is too small then accident or disease in one or two critical animals could endanger the entire population
# ::alignments 20-21|0.0.0.0 19-20|0.0.0.0.0 17-18|0.0.0 16-17|0.0.0.1 15-16|0.0 14-15|0.0.1 13-14|0.0.1.0 12-13|0 9-10|0.0.0.1.0.1 8-9|0.0.0.1.0 7-8|0.0.0.1.0.0 6-7|0.0.0.1.0.0.0 5-6|0.0.0.1.0.0.0.0 4-5|0.0.0.1.0.0.0.0.0 2-3|0.0.0.1.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:45.959
# ::node	0	or	12-13
# ::node	0.0	animal	15-16
# ::node	0.0.0	endanger-01	17-18
# ::node	0.0.0.0	population	20-21
# ::node	0.0.0.0.0	entire	19-20
# ::node	0.0.0.1	possible	16-17
# ::node	0.0.0.1.0	or	8-9
# ::node	0.0.0.1.0.0	accident	7-8
# ::node	0.0.0.1.0.0.0	then	6-7
# ::node	0.0.0.1.0.0.0.0	small	5-6
# ::node	0.0.0.1.0.0.0.0.0	too	4-5
# ::node	0.0.0.1.0.0.0.0.1	population	2-3
# ::node	0.0.0.1.0.1	disease	9-10
# ::node	0.0.1	critical	14-15
# ::node	0.0.1.0	2	13-14
# ::root	0	or
# ::edge	accident	time	then	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	animal	mod	critical	0.0	0.0.1	
# ::edge	critical	quant	2	0.0.1	0.0.1.0	
# ::edge	endanger-01	ARG0	animal	0.0.0	0.0	
# ::edge	endanger-01	ARG1	population	0.0.0	0.0.0.0	
# ::edge	endanger-01	mod	possible	0.0.0	0.0.0.1	
# ::edge	or	op1	accident	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	or	op1	animal	0	0.0	
# ::edge	or	op2	disease	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	population	mod	entire	0.0.0.0	0.0.0.0.0	
# ::edge	possible	domain	or	0.0.0.1	0.0.0.1.0	
# ::edge	small	degree	too	0.0.0.1.0.0.0.0	0.0.0.1.0.0.0.0.0	
# ::edge	small	domain	population	0.0.0.1.0.0.0.0	0.0.0.1.0.0.0.0.1	
# ::edge	then	degree	small	0.0.0.1.0.0.0	0.0.0.1.0.0.0.0	
(o / or 
      :op1 (a / animal 
            :ARG0-of (e2 / endanger-01 
                  :ARG1 (p / population 
                        :mod (e / entire)) 
                  :mod (p2 / possible 
                        :domain (o2 / or 
                              :op1 (a2 / accident 
                                    :time (t / then 
                                          :degree (s / small 
                                                :degree (t2 / too) 
                                                :domain (p3 / population)))) 
                              :op2 (d / disease)))) 
            :mod (c / critical 
                  :quant 2)))

# ::snt   he claimed the bloodstain on the note dropped through miss hardings door was caused by an accident when he pierced his finger in his car
# ::tok he claimed the bloodstain on the note dropped through miss hardings door was caused by an accident when he pierced his finger in his car
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:45.959
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the work is not easy because she has a leg injury from a car accident
# ::tok the work is not easy because she has a leg injury from a car accident
# ::alignments 14-15|0.0.0.1 13-14|0.0.0.1.0 10-11|0.0.0 9-10|0.0.0.2 6-7|0.0.0.0 5-6|0.0 4-5|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:46.048
# ::node	0	easy	4-5
# ::node	0.0	cause-01	5-6
# ::node	0.0.0	injure-01	10-11
# ::node	0.0.0.0	she	6-7
# ::node	0.0.0.1	accident	14-15
# ::node	0.0.0.1.0	car	13-14
# ::node	0.0.0.2	leg	9-10
# ::root	0	easy
(e / easy 
      :ARG1-of (c2 / cause-01 
            :ARG0 (i / injure-01 
                  :ARG0 (s / she) 
                  :ARG1 (a / accident 
                        :location (c / car)) 
                  :mod (l / leg))))

# ::snt the syrian armed forces were sorely embarrassed by the recent defection of a pilot to israel and may not be ready to face even greater humiliation by admitting that this latest debacle was as seems most likely an accident
# ::tok the syrian armed forces were sorely embarrassed by the recent defection of a pilot to israel and may not be ready to face even greater humiliation by admitting that this latest debacle was as seems most likely an accident
# ::alignments 38-39|0.0.1 36-37|0.0 35-36|0.0.0 34-35|0 30-31|0.1.3.1.0.0.0.0+0.1.3.1.0.0.0 29-30|0.1.3.1.0.0 25-26|0.1.3.1.0 24-25|0.1.3.1.0.1 22-23|0.1.3.1 20-21|0.1.3 17-18|0.1.2.0+0.1.2 16-17|0.1 15-16|0.1.1.0.0+0.1.1.0+0.1.1 9-10|0.1.3.0 6-7|0.1.0 3-4|0.1.0.0 2-3|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:46.282
# ::node	0	seem-01	34-35
# ::node	0.0	likely	36-37
# ::node	0.0.0	most	35-36
# ::node	0.0.1	accident	38-39
# ::node	0.1	and	16-17
# ::node	0.1.0	embarrass-01	6-7
# ::node	0.1.0.0	force	3-4
# ::node	0.1.0.0.0	arm-01	2-3
# ::node	0.1.1	country	15-16
# ::node	0.1.1.0	name	15-16
# ::node	0.1.1.0.0	"Israel"	15-16
# ::node	0.1.2	date-entity	17-18
# ::node	0.1.2.0	5	17-18
# ::node	0.1.3	ready-01	20-21
# ::node	0.1.3.0	recent	9-10
# ::node	0.1.3.1	face-01	22-23
# ::node	0.1.3.1.0	humiliate-01	25-26
# ::node	0.1.3.1.0.0	this	29-30
# ::node	0.1.3.1.0.0.0	late	30-31
# ::node	0.1.3.1.0.0.0.0	most	30-31
# ::node	0.1.3.1.0.1	great	24-25
# ::root	0	seem-01
# ::edge	and	op1	embarrass-01	0.1	0.1.0	
# ::edge	and	op2	country	0.1	0.1.1	
# ::edge	and	op3	date-entity	0.1	0.1.2	
# ::edge	and	op4	ready-01	0.1	0.1.3	
# ::edge	and	op5	seem-01	0.1	0	
# ::edge	arm-01	ARG1	force	0.1.0.0.0	0.1.0.0	
# ::edge	country	name	name	0.1.1	0.1.1.0	
# ::edge	date-entity	month	5	0.1.2	0.1.2.0	
# ::edge	embarrass-01	ARG1	force	0.1.0	0.1.0.0	
# ::edge	face-01	ARG1	humiliate-01	0.1.3.1	0.1.3.1.0	
# ::edge	humiliate-01	ARG1	this	0.1.3.1.0	0.1.3.1.0.0	
# ::edge	humiliate-01	mod	great	0.1.3.1.0	0.1.3.1.0.1	
# ::edge	late	degree	most	0.1.3.1.0.0.0	0.1.3.1.0.0.0.0	
# ::edge	late	mod	this	0.1.3.1.0.0.0	0.1.3.1.0.0	
# ::edge	likely	degree	most	0.0	0.0.0	
# ::edge	likely	domain	accident	0.0	0.0.1	
# ::edge	name	op1	"Israel"	0.1.1.0	0.1.1.0.0	
# ::edge	ready-01	ARG1	recent	0.1.3	0.1.3.0	
# ::edge	ready-01	ARG2	face-01	0.1.3	0.1.3.1	
# ::edge	seem-01	ARG1	likely	0	0.0	
(s / seem-01 
      :ARG1 (l / likely 
            :degree (m / most) 
            :domain (a / accident)) 
      :op-of (a2 / and 
            :op1 (e / embarrass-01 
                  :ARG1 (f2 / force 
                        :ARG1-of (a3 / arm-01))) 
            :op2 (c / country 
                  :name (n / name 
                        :op1 "Israel")) 
            :op3 (d / date-entity 
                  :month 5) 
            :op4 (r / ready-01 
                  :ARG1 (r2 / recent) 
                  :ARG2 (f / face-01 
                        :ARG1 (h / humiliate-01 
                              :ARG1 (t / this 
                                    :mod-of (l2 / late 
                                          :degree (m2 / most))) 
                              :mod (g / great))))))

# ::snt if you or any member of your family suffer death bodily injury or illness arising from negligence of our suppliers other than air and sea carriers performing any domestic internal or international carriage of whatsoever kind for whom we accept no liability their subcontractors servants andor agents we will accept responsibility provided that they were acting within the scope of or in the course of their employment when the accident occurred
# ::tok if you or any member of your family suffer death bodily injury or illness arising from negligence of our suppliers other than air and sea carriers performing any domestic internal or international carriage of whatsoever kind for whom we accept no liability their subcontractors servants andor agents we will accept responsibility provided that they were acting within the scope of or in the course of their employment when the accident occurred
# ::alignments 69-70|0.4.0.1.1.0.1 66-67|0.4.0.1.0.0.0 60-61|0.4.0.1.1.0.2.0.0 58-59|0.4.0.1.1.0.2.0 56-57|0.4.0.1.1.0.2 55-56|0.4.0.1.1.0 53-54|0.4.0.1.1.0.0 51-52|0.4.0.1.1 50-51|0.4.0.1.0.0 49-50|0.4.0.1.0 47-48|0.4.0.1 46-47|0.4.0.1.0.1 44-45|0.4.0+0.4 41-42|0.4.0.0 40-41|0.4.0.0.0.2 39-40|0.4.0.0.0 38-39|0.4.0.0.0.0 35-36|0.4.0.0.0.1 34-35|0.4.0.0.0.1.0 31-32|0.0.1.2 30-31|0.0.1 29-30|0.0.1.1 28-29|0.0.1.0 27-28|0.4.0.1.0.0.1 26-27|0.0 25-26|0.0.0 24-25|0.3 23-24|0 22-23|0.2 20-21|0.1 19-20|0.2.0.2.1 16-17|0.2.0.2.1.0 13-14|0.2.0.2 12-13|0.2.0 11-12|0.2.0.1 9-10|0.2.0.2.0 8-9|0.2.0.0 7-8|0.2.0.0.0.0.0.0 4-5|0.2.0.0.0.0.0.1+0.2.0.0.0.0.0 3-4|0.2.0.1.0 2-3|0.2.0.0.0.0 1-2|0.2.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:51.006
# ::node	0	and	23-24
# ::node	0.0	perform-01	26-27
# ::node	0.0.0	carrier	25-26
# ::node	0.0.1	or	30-31
# ::node	0.0.1.0	domestic	28-29
# ::node	0.0.1.1	internal	29-30
# ::node	0.0.1.2	international	31-32
# ::node	0.1	other	20-21
# ::node	0.2	air	22-23
# ::node	0.2.0	or	12-13
# ::node	0.2.0.0	suffer-01	8-9
# ::node	0.2.0.0.0	you	1-2
# ::node	0.2.0.0.0.0	or	2-3
# ::node	0.2.0.0.0.0.0	have-org-role-91	4-5
# ::node	0.2.0.0.0.0.0.0	family	7-8
# ::node	0.2.0.0.0.0.0.1	member	4-5
# ::node	0.2.0.1	injure-01	11-12
# ::node	0.2.0.1.0	any	3-4
# ::node	0.2.0.2	illness	13-14
# ::node	0.2.0.2.0	die-01	9-10
# ::node	0.2.0.2.1	supply-01	19-20
# ::node	0.2.0.2.1.0	neglect-01	16-17
# ::node	0.3	sea	24-25
# ::node	0.4	person	44-45
# ::node	0.4.0	serve-02	44-45
# ::node	0.4.0.0	liability	41-42
# ::node	0.4.0.0.0	accept-01	39-40
# ::node	0.4.0.0.0.0	we	38-39
# ::node	0.4.0.0.0.1	kind	35-36
# ::node	0.4.0.0.0.1.0	whatsoever	34-35
# ::node	0.4.0.0.0.2	-	40-41
# ::node	0.4.0.1	we	47-48
# ::node	0.4.0.1.0	accept-01	49-50
# ::node	0.4.0.1.0.0	responsible-41	50-51
# ::node	0.4.0.1.0.0.0	employment	66-67
# ::node	0.4.0.1.0.0.1	any	27-28
# ::node	0.4.0.1.0.1	agent	46-47
# ::node	0.4.0.1.1	provide-01	51-52
# ::node	0.4.0.1.1.0	act-01	55-56
# ::node	0.4.0.1.1.0.0	they	53-54
# ::node	0.4.0.1.1.0.1	accident	69-70
# ::node	0.4.0.1.1.0.2	within	56-57
# ::node	0.4.0.1.1.0.2.0	scope	58-59
# ::node	0.4.0.1.1.0.2.0.0	or	60-61
# ::root	0	and
# ::edge	accept-01	ARG0	we	0.4.0.0.0	0.4.0.0.0.0	
# ::edge	accept-01	ARG0	we	0.4.0.1.0	0.4.0.1	
# ::edge	accept-01	ARG1	liability	0.4.0.0.0	0.4.0.0	
# ::edge	accept-01	ARG1	responsible-41	0.4.0.1.0	0.4.0.1.0.0	
# ::edge	accept-01	manner	agent	0.4.0.1.0	0.4.0.1.0.1	
# ::edge	accept-01	polarity	-	0.4.0.0.0	0.4.0.0.0.2	
# ::edge	act-01	ARG0	they	0.4.0.1.1.0	0.4.0.1.1.0.0	
# ::edge	act-01	ARG1	accident	0.4.0.1.1.0	0.4.0.1.1.0.1	
# ::edge	act-01	manner	within	0.4.0.1.1.0	0.4.0.1.1.0.2	
# ::edge	air	poss	or	0.2	0.2.0	
# ::edge	and	op1	air	0	0.2	
# ::edge	and	op2	sea	0	0.3	
# ::edge	and	op3	person	0	0.4	
# ::edge	die-01	ARG0	illness	0.2.0.2.0	0.2.0.2	
# ::edge	have-org-role-91	ARG0	or	0.2.0.0.0.0.0	0.2.0.0.0.0	
# ::edge	have-org-role-91	ARG1	family	0.2.0.0.0.0.0	0.2.0.0.0.0.0.0	
# ::edge	have-org-role-91	ARG2	member	0.2.0.0.0.0.0	0.2.0.0.0.0.0.1	
# ::edge	injure-01	ARG0	any	0.2.0.1	0.2.0.1.0	
# ::edge	kind	beneficiary	accept-01	0.4.0.0.0.1	0.4.0.0.0	
# ::edge	kind	mod	whatsoever	0.4.0.0.0.1	0.4.0.0.0.1.0	
# ::edge	neglect-01	ARG1	supply-01	0.2.0.2.1.0	0.2.0.2.1	
# ::edge	or	op1	domestic	0.0.1	0.0.1.0	
# ::edge	or	op1	injure-01	0.2.0	0.2.0.1	
# ::edge	or	op1	you	0.2.0.0.0.0	0.2.0.0.0	
# ::edge	or	op2	illness	0.2.0	0.2.0.2	
# ::edge	or	op2	internal	0.0.1	0.0.1.1	
# ::edge	or	op3	international	0.0.1	0.0.1.2	
# ::edge	other	compared-to	and	0.1	0	
# ::edge	perform-01	ARG0	carrier	0.0	0.0.0	
# ::edge	perform-01	ARG1	and	0.0	0	
# ::edge	perform-01	ARG2	or	0.0	0.0.1	
# ::edge	provide-01	ARG0	we	0.4.0.1.1	0.4.0.1	
# ::edge	provide-01	ARG1	act-01	0.4.0.1.1	0.4.0.1.1.0	
# ::edge	responsible-41	ARG0	employment	0.4.0.1.0.0	0.4.0.1.0.0.0	
# ::edge	responsible-41	ARG1	any	0.4.0.1.0.0	0.4.0.1.0.0.1	
# ::edge	scope	time	or	0.4.0.1.1.0.2.0	0.4.0.1.1.0.2.0.0	
# ::edge	serve-02	ARG0	person	0.4.0	0.4	
# ::edge	serve-02	ARG1	liability	0.4.0	0.4.0.0	
# ::edge	serve-02	ARG4	we	0.4.0	0.4.0.1	
# ::edge	suffer-01	ARG0	you	0.2.0.0	0.2.0.0.0	
# ::edge	suffer-01	ARG1	or	0.2.0.0	0.2.0	
# ::edge	supply-01	ARG1	illness	0.2.0.2.1	0.2.0.2	
# ::edge	within	op1	scope	0.4.0.1.1.0.2	0.4.0.1.1.0.2.0	
(a7 / and 
      :ARG1-of (p3 / perform-01 
            :ARG0 (c / carrier) 
            :ARG2 (o2 / or 
                  :op1 (d / domestic) 
                  :op2 (i2 / internal) 
                  :op3 (i / international))) 
      :compared-to-of (o3 / other) 
      :op1 (a8 / air 
            :poss (o4 / or 
                  :ARG1-of (s5 / suffer-01 
                        :ARG0 (y / you 
                              :op-of (o5 / or 
                                    :ARG0-of (h / have-org-role-91 
                                          :ARG1 (f / family) 
                                          :ARG2 (m / member))))) 
                  :op1 (i4 / injure-01 
                        :ARG0 (a9 / any)) 
                  :op2 (i3 / illness 
                        :ARG0-of (d2 / die-01) 
                        :ARG1-of (s4 / supply-01 
                              :ARG1-of (n / neglect-01))))) 
      :op2 (s3 / sea) 
      :op3 (p2 / person 
            :ARG0-of (s2 / serve-02 
                  :ARG1 (l / liability 
                        :ARG1-of (a5 / accept-01 
                              :ARG0 (w3 / we) 
                              :beneficiary-of (k / kind 
                                    :mod (w4 / whatsoever)) 
                              :polarity (- / -))) 
                  :ARG4 (w2 / we 
                        :ARG0-of (a3 / accept-01 
                              :ARG1 (r / responsible-41 
                                    :ARG0 (e / employment) 
                                    :ARG1 (a6 / any)) 
                              :manner (a4 / agent)) 
                        :ARG0-of (p / provide-01 
                              :ARG1 (a2 / act-01 
                                    :ARG0 (t / they) 
                                    :ARG1 (a / accident) 
                                    :manner (w / within 
                                          :op1 (s / scope 
                                                :time (o / or)))))))))

# ::snt a closed loop that someone can catch their foot in and trip is one of the most frequent causes of industrial accidents
# ::tok a closed loop that someone can catch their foot in and trip is one of the most frequent causes of industrial accidents
# ::alignments 21-22|0.1 20-21|0.1.0 18-19|0 17-18|0.2 16-17|0.2.0 11-12|0.0.1.0.0 10-11|0.0 8-9|0.0.2 5-6|0.0.0 4-5|0.0.2.0 2-3|0.0.1 1-2|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:51.339
# ::node	0	cause-01	18-19
# ::node	0.0	and	10-11
# ::node	0.0.0	possible	5-6
# ::node	0.0.1	loop	2-3
# ::node	0.0.1.0	close-01	1-2
# ::node	0.0.1.0.0	trip-01	11-12
# ::node	0.0.2	foot	8-9
# ::node	0.0.2.0	someone	4-5
# ::node	0.1	accident	21-22
# ::node	0.1.0	industry	20-21
# ::node	0.2	frequent	17-18
# ::node	0.2.0	most	16-17
# ::root	0	cause-01
# ::edge	accident	mod	industry	0.1	0.1.0	
# ::edge	and	instrument	loop	0.0	0.0.1	
# ::edge	and	op1	foot	0.0	0.0.2	
# ::edge	cause-01	ARG0	and	0	0.0	
# ::edge	cause-01	ARG1	accident	0	0.1	
# ::edge	cause-01	frequency	frequent	0	0.2	
# ::edge	close-01	ARG1	loop	0.0.1.0	0.0.1	
# ::edge	foot	poss	someone	0.0.2	0.0.2.0	
# ::edge	frequent	degree	most	0.2	0.2.0	
# ::edge	possible	domain	and	0.0.0	0.0	
# ::edge	trip-01	ARG1	close-01	0.0.1.0.0	0.0.1.0	
(c / cause-01 
      :ARG0 (a2 / and 
            :domain-of (p / possible) 
            :instrument (l / loop 
                  :ARG1-of (c2 / close-01 
                        :ARG1-of (t / trip-01))) 
            :op1 (f2 / foot 
                  :poss (s / someone))) 
      :ARG1 (a / accident 
            :mod (i / industry)) 
      :frequency (f / frequent 
            :degree (m / most)))

# ::snt management claimed they could not operate a proper emergency service because they did not know where ambulances were and accused crews of refusing to respond to 14 accident and emergency calls resulting in unnecessary delays while they were passed to the police and army
# ::tok management claimed they could not operate a proper emergency service because they did not know where ambulances were and accused crews of refusing to respond to 14 accident and emergency calls resulting in unnecessary delays while they were passed to the police and army
# ::alignments 43-44|0.0.0.1 42-43|0.0.0 41-42|0.0.0.0 36-37|0.0.1.0.0.1.0 34-35|0.0.1.0.0.1 31-32|0.0.1.0.0 29-30|0.1.0.1.0 28-29|0.0.1.0 27-28|0.0.1.0.1 26-27|0.0.1.0.1.0 24-25|0.0.1 22-23|0.0 19-20|0 18-19|0.1 14-15|0.1.0 11-12|0.1.0.0 10-11|0.1.0.1 8-9|0.1.0.2.1.1 7-8|0.0.1.0.0.0 5-6|0.1.0.2.1 3-4|0.1.0.2 2-3|0.1.0.2.1.0 1-2|0.1.0.2.0 0-1|0.1.0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:51.937
# ::node	0	accuse-01	19-20
# ::node	0.0	refuse-01	22-23
# ::node	0.0.0	and	42-43
# ::node	0.0.0.0	police	41-42
# ::node	0.0.0.1	army	43-44
# ::node	0.0.1	respond-01	24-25
# ::node	0.0.1.0	and	28-29
# ::node	0.0.1.0.0	result-01	31-32
# ::node	0.0.1.0.0.0	proper	7-8
# ::node	0.0.1.0.0.1	delay-01	34-35
# ::node	0.0.1.0.0.1.0	they	36-37
# ::node	0.0.1.0.1	accident	27-28
# ::node	0.0.1.0.1.0	14	26-27
# ::node	0.1	and	18-19
# ::node	0.1.0	know-01	14-15
# ::node	0.1.0.0	they	11-12
# ::node	0.1.0.1	cause-01	10-11
# ::node	0.1.0.1.0	emergency	29-30
# ::node	0.1.0.2	possible	3-4
# ::node	0.1.0.2.0	claim-01	1-2
# ::node	0.1.0.2.0.0	manage-01	0-1
# ::node	0.1.0.2.1	operate-01	5-6
# ::node	0.1.0.2.1.0	they	2-3
# ::node	0.1.0.2.1.1	emergency	8-9
# ::root	0	accuse-01
# ::edge	accident	quant	14	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	accuse-01	ARG2	refuse-01	0	0.0	
# ::edge	and	op1	accident	0.0.1.0	0.0.1.0.1	
# ::edge	and	op1	know-01	0.1	0.1.0	
# ::edge	and	op1	police	0.0.0	0.0.0.0	
# ::edge	and	op2	accuse-01	0.1	0	
# ::edge	and	op2	army	0.0.0	0.0.0.1	
# ::edge	cause-01	ARG0	know-01	0.1.0.1	0.1.0	
# ::edge	cause-01	ARG1	emergency	0.1.0.1	0.1.0.1.0	
# ::edge	claim-01	ARG0	manage-01	0.1.0.2.0	0.1.0.2.0.0	
# ::edge	claim-01	ARG1	possible	0.1.0.2.0	0.1.0.2	
# ::edge	delay-01	ARG1	they	0.0.1.0.0.1	0.0.1.0.0.1.0	
# ::edge	know-01	ARG0	they	0.1.0	0.1.0.0	
# ::edge	operate-01	ARG0	they	0.1.0.2.1	0.1.0.2.1.0	
# ::edge	operate-01	ARG1	emergency	0.1.0.2.1	0.1.0.2.1.1	
# ::edge	possible	condition	know-01	0.1.0.2	0.1.0	
# ::edge	possible	domain	operate-01	0.1.0.2	0.1.0.2.1	
# ::edge	refuse-01	ARG0	and	0.0	0.0.0	
# ::edge	refuse-01	ARG1	respond-01	0.0	0.0.1	
# ::edge	respond-01	ARG1	and	0.0.1	0.0.1.0	
# ::edge	result-01	ARG0	proper	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	result-01	ARG1	delay-01	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	result-01	ARG2	and	0.0.1.0.0	0.0.1.0	
(a5 / accuse-01 
      :ARG2 (r3 / refuse-01 
            :ARG0 (a2 / and 
                  :op1 (p / police) 
                  :op2 (a / army)) 
            :ARG1 (r2 / respond-01 
                  :ARG1 (a3 / and 
                        :ARG2-of (r / result-01 
                              :ARG0 (p2 / proper) 
                              :ARG1 (d / delay-01 
                                    :ARG1 (t / they))) 
                        :op1 (a4 / accident 
                              :quant 14)))) 
      :op-of (a6 / and 
            :op1 (k / know-01 
                  :ARG0 (t2 / they) 
                  :ARG0-of (c / cause-01 
                        :ARG1 (e / emergency)) 
                  :condition-of (p3 / possible 
                        :ARG1-of (c2 / claim-01 
                              :ARG0 (m / manage-01)) 
                        :domain (o / operate-01 
                              :ARG0 (t3 / they) 
                              :ARG1 (e2 / emergency))))))

# ::snt the accident happened when about 40 club members and visitors were at the shooting range for practice and matches
# ::tok the accident happened when about 40 club members and visitors were at the shooting range for practice and matches
# ::alignments 18-19|0.2 17-18|0 16-17|0.0.0 14-15|0.0 13-14|0.0.1 9-10|0.0.2.0.0+0.0.2.0 8-9|0.0.2 7-8|0.2.0.1+0.2.0 6-7|0.2.0.0 5-6|0.2.0.0.0 2-3|0.1 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:52.166
# ::node	0	and	17-18
# ::node	0.0	range-01	14-15
# ::node	0.0.0	practice-01	16-17
# ::node	0.0.1	shoot-05	13-14
# ::node	0.0.2	and	8-9
# ::node	0.0.2.0	person	9-10
# ::node	0.0.2.0.0	visit-01	9-10
# ::node	0.1	happen-01	2-3
# ::node	0.1.0	accident	1-2
# ::node	0.2	match	18-19
# ::node	0.2.0	have-org-role-91	7-8
# ::node	0.2.0.0	club	6-7
# ::node	0.2.0.0.0	40	5-6
# ::node	0.2.0.1	member	7-8
# ::root	0	and
# ::edge	and	op1	happen-01	0	0.1	
# ::edge	and	op1	person	0.0.2	0.0.2.0	
# ::edge	and	op2	match	0	0.2	
# ::edge	and	op2	range-01	0.0.2	0.0	
# ::edge	club	quant	40	0.2.0.0	0.2.0.0.0	
# ::edge	happen-01	ARG1	accident	0.1	0.1.0	
# ::edge	have-org-role-91	ARG1	club	0.2.0	0.2.0.0	
# ::edge	have-org-role-91	ARG2	member	0.2.0	0.2.0.1	
# ::edge	match	op1	have-org-role-91	0.2	0.2.0	
# ::edge	range-01	ARG1	practice-01	0.0	0.0.0	
# ::edge	range-01	ARG2	and	0.0	0	
# ::edge	shoot-05	ARG1	range-01	0.0.1	0.0	
# ::edge	visit-01	ARG0	person	0.0.2.0.0	0.0.2.0	
(a / and 
      :ARG2-of (r / range-01 
            :ARG1 (p / practice-01) 
            :ARG1-of (s / shoot-05) 
            :op-of (a2 / and 
                  :op1 (p2 / person 
                        :ARG0-of (v / visit-01)))) 
      :op1 (h2 / happen-01 
            :ARG1 (a3 / accident)) 
      :op2 (m / match 
            :op1 (h / have-org-role-91 
                  :ARG1 (c / club 
                        :quant 40) 
                  :ARG2 (m2 / member))))

# ::snt the gallery which was out of action for nine weeks is now back in business and on sunday luigi launches his first exhibition since the accident
# ::tok the gallery which was out of action for nine weeks is now back in business and on sunday luigi launches his first exhibition since the accident
# ::alignments 25-26|0.3.2.2.0 23-24|0.3.2.2 22-23|0.3.2 19-20|0.3 17-18|0.2 15-16|0 14-15|0.3.2.1 12-13|0.1 11-12|0.0 9-10|0.3.2.0.0+0.3.2.0 8-9|0.3.0 6-7|0.3.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:52.338
# ::node	0	and	15-16
# ::node	0.0	now	11-12
# ::node	0.1	back	12-13
# ::node	0.2	sunday	17-18
# ::node	0.3	launch-01	19-20
# ::node	0.3.0	9	8-9
# ::node	0.3.1	action	6-7
# ::node	0.3.2	exhibit-01	22-23
# ::node	0.3.2.0	temporal-quantity	9-10
# ::node	0.3.2.0.0	week	9-10
# ::node	0.3.2.1	business	14-15
# ::node	0.3.2.2	since	23-24
# ::node	0.3.2.2.0	accident	25-26
# ::root	0	and
# ::edge	and	mod	now	0	0.0	
# ::edge	and	op1	back	0	0.1	
# ::edge	and	op2	sunday	0	0.2	
# ::edge	and	op3	launch-01	0	0.3	
# ::edge	exhibit-01	ARG0	temporal-quantity	0.3.2	0.3.2.0	
# ::edge	exhibit-01	ARG1	business	0.3.2	0.3.2.1	
# ::edge	exhibit-01	ARG2	launch-01	0.3.2	0.3	
# ::edge	exhibit-01	time	since	0.3.2	0.3.2.2	
# ::edge	launch-01	ARG0	9	0.3	0.3.0	
# ::edge	launch-01	ARG1	action	0.3	0.3.1	
# ::edge	since	op1	accident	0.3.2.2	0.3.2.2.0	
# ::edge	temporal-quantity	unit	week	0.3.2.0	0.3.2.0.0	
(a2 / and 
      :mod (n / now) 
      :op1 (b2 / back) 
      :op2 (s2 / sunday) 
      :op3 (l / launch-01 
            :ARG0 9 
            :ARG1 (a3 / action) 
            :ARG2-of (e / exhibit-01 
                  :ARG0 (t / temporal-quantity 
                        :unit (w / week)) 
                  :ARG1 (b / business) 
                  :time (s / since 
                        :op1 (a / accident)))))

# ::snt in 1975 the company refused to pay out on an accident policy following the death of mr watts brotherinlaw christopher bowden
# ::tok in 1975 the company refused to pay out on an accident policy following the death of mr watts brotherinlaw christopher bowden
# ::alignments 14-15|0.0.2 11-12|0.0.1 10-11|0.0.1.0 6-7|0.0 4-5|0 3-4|0.0.0 1-2|0.0.2.0.0+0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:52.382
# ::node	0	refuse-01	4-5
# ::node	0.0	pay-01	6-7
# ::node	0.0.0	company	3-4
# ::node	0.0.1	policy	11-12
# ::node	0.0.1.0	accident	10-11
# ::node	0.0.2	die-01	14-15
# ::node	0.0.2.0	date-entity	1-2
# ::node	0.0.2.0.0	1975	1-2
# ::root	0	refuse-01
# ::edge	date-entity	year	1975	0.0.2.0	0.0.2.0.0	
# ::edge	die-01	ARG1	pay-01	0.0.2	0.0	
# ::edge	die-01	ARG2	date-entity	0.0.2	0.0.2.0	
# ::edge	pay-01	ARG0	company	0.0	0.0.0	
# ::edge	pay-01	ARG1	policy	0.0	0.0.1	
# ::edge	policy	mod	accident	0.0.1	0.0.1.0	
# ::edge	refuse-01	ARG1	pay-01	0	0.0	
(r / refuse-01 
      :ARG1 (p2 / pay-01 
            :ARG0 (c / company) 
            :ARG1 (p / policy 
                  :mod (a / accident)) 
            :ARG1-of (d / die-01 
                  :ARG2 (d2 / date-entity 
                        :year 1975))))

# ::snt in their letter the family points out that there have been accidents along launton road in the past
# ::tok in their letter the family points out that there have been accidents along launton road in the past
# ::alignments 17-18|0.0.0.1 14-15|0.0.0.0.0 12-13|0.0.0.0 11-12|0.0.0 5-6|0 4-5|0.0 2-3|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:52.415
# ::node	0	point	5-6
# ::node	0.0	family	4-5
# ::node	0.0.0	accident	11-12
# ::node	0.0.0.0	along	12-13
# ::node	0.0.0.0.0	road	14-15
# ::node	0.0.0.1	past	17-18
# ::node	0.1	letter	2-3
# ::root	0	point
# ::edge	accident	location	along	0.0.0	0.0.0.0	
# ::edge	accident	poss	family	0.0.0	0.0	
# ::edge	accident	poss	past	0.0.0	0.0.0.1	
# ::edge	along	op1	road	0.0.0.0	0.0.0.0.0	
# ::edge	letter	part	point	0.1	0	
# ::edge	point	mod	family	0	0.0	
(p2 / point 
      :mod (f / family 
            :poss-of (a2 / accident 
                  :location (a / along 
                        :op1 (r / road)) 
                  :poss (p / past))) 
      :part-of (l / letter))

# ::snt contrary to popular belief a 1m damages award is not over generous when a young person suffers severe brain damage in a road accident
# ::tok contrary to popular belief a 1m damages award is not over generous when a young person suffers severe brain damage in a road accident
# ::alignments 23-24|0.2.1 22-23|0.2.1.0 19-20|0.2 18-19|0.2.0 17-18|0.2.2 16-17|0 15-16|0.0 14-15|0.0.0 11-12|0.1 7-8|0.1.0 6-7|0.1.0.0 3-4|0.1.0.1.0 2-3|0.1.0.1.0.0 0-1|0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:52.563
# ::node	0	suffer-01	16-17
# ::node	0.0	person	15-16
# ::node	0.0.0	young	14-15
# ::node	0.1	generous-41	11-12
# ::node	0.1.0	award-01	7-8
# ::node	0.1.0.0	damage-01	6-7
# ::node	0.1.0.1	contrary-41	0-1
# ::node	0.1.0.1.0	believe-01	3-4
# ::node	0.1.0.1.0.0	popular-41	2-3
# ::node	0.2	damage-01	19-20
# ::node	0.2.0	brain	18-19
# ::node	0.2.1	accident	23-24
# ::node	0.2.1.0	road	22-23
# ::node	0.2.2	severe	17-18
# ::root	0	suffer-01
# ::edge	accident	location	road	0.2.1	0.2.1.0	
# ::edge	award-01	ARG1	damage-01	0.1.0	0.1.0.0	
# ::edge	contrary-41	ARG1	believe-01	0.1.0.1	0.1.0.1.0	
# ::edge	contrary-41	ARG2	award-01	0.1.0.1	0.1.0	
# ::edge	damage-01	ARG1	brain	0.2	0.2.0	
# ::edge	damage-01	ARG2	accident	0.2	0.2.1	
# ::edge	damage-01	mod	severe	0.2	0.2.2	
# ::edge	generous-41	ARG0	suffer-01	0.1	0	
# ::edge	generous-41	ARG1	award-01	0.1	0.1.0	
# ::edge	person	mod	young	0.0	0.0.0	
# ::edge	popular-41	ARG1	believe-01	0.1.0.1.0.0	0.1.0.1.0	
# ::edge	suffer-01	ARG0	person	0	0.0	
# ::edge	suffer-01	ARG1	damage-01	0	0.2	
(s2 / suffer-01 
      :ARG0 (p / person 
            :mod (y / young)) 
      :ARG0-of (g / generous-41 
            :ARG1 (a2 / award-01 
                  :ARG1 (d2 / damage-01) 
                  :ARG2-of (c / contrary-41 
                        :ARG1 (b2 / believe-01 
                              :ARG1-of (p2 / popular-41))))) 
      :ARG1 (d / damage-01 
            :ARG1 (b / brain) 
            :ARG2 (a / accident 
                  :location (r / road)) 
            :mod (s / severe)))

# ::snt the day after the accident in fenny compton warwickshire
# ::tok the day after the accident in fenny compton warwickshire
# ::alignments 4-5|0.0 2-3|0.0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:52.574
# ::node	0	day	1-2
# ::node	0.0	accident	4-5
# ::node	0.0.0	after	2-3
# ::root	0	day
(d / day 
      :part-of (a / accident 
            :op-of (a2 / after)))

# ::snt reportedly the owners intention was to fit additional drag reduction fairings to the landing gear when the aircraft was on jacks at an approved maintenance organisation for its annual inspection due shortly after the accident
# ::tok reportedly the owners intention was to fit additional drag reduction fairings to the landing gear when the aircraft was on jacks at an approved maintenance organisation for its annual inspection due shortly after the accident
# ::alignments 34-35|0.0.1.0.0.0.0 32-33|0.0.1.0.0.0.0.0 31-32|0.0.1.0.0.0.0.0.0 29-30|0.1.0 25-26|0.1 24-25|0.1.1 23-24|0 17-18|0.0.1.1 14-15|0.0.1.0.0.0.1 13-14|0.0.1.0.0.0 9-10|0.0.1.2 8-9|0.0.1.0.0 7-8|0.0.1.0.0.1 6-7|0.0.1.0 3-4|0.0.1 2-3|0.0.0+0.0 0-1|0.0.1.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:52.892
# ::node	0	approve-01	23-24
# ::node	0.0	person	2-3
# ::node	0.0.0	own-01	2-3
# ::node	0.0.1	intend-01	3-4
# ::node	0.0.1.0	fit-01	6-7
# ::node	0.0.1.0.0	drag-01	8-9
# ::node	0.0.1.0.0.0	land-01	13-14
# ::node	0.0.1.0.0.0.0	accident	34-35
# ::node	0.0.1.0.0.0.0.0	after	32-33
# ::node	0.0.1.0.0.0.0.0.0	short	31-32
# ::node	0.0.1.0.0.0.1	gear	14-15
# ::node	0.0.1.0.0.1	additional	7-8
# ::node	0.0.1.1	aircraft	17-18
# ::node	0.0.1.2	reduce-01	9-10
# ::node	0.0.1.3	report-01	0-1
# ::node	0.1	organize-01	25-26
# ::node	0.1.0	inspect-01	29-30
# ::node	0.1.1	maintain-01	24-25
# ::root	0	approve-01
# ::edge	after	mod	short	0.0.1.0.0.0.0.0	0.0.1.0.0.0.0.0.0	
# ::edge	after	op1	accident	0.0.1.0.0.0.0.0	0.0.1.0.0.0.0	
# ::edge	approve-01	ARG0	person	0	0.0	
# ::edge	approve-01	ARG1	organize-01	0	0.1	
# ::edge	drag-01	ARG2	land-01	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	drag-01	mod	additional	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	fit-01	ARG0	intend-01	0.0.1.0	0.0.1	
# ::edge	fit-01	ARG1	drag-01	0.0.1.0	0.0.1.0.0	
# ::edge	intend-01	ARG0	person	0.0.1	0.0	
# ::edge	intend-01	ARG1	aircraft	0.0.1	0.0.1.1	
# ::edge	land-01	ARG0	accident	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	land-01	ARG1	gear	0.0.1.0.0.0	0.0.1.0.0.0.1	
# ::edge	maintain-01	ARG1	organize-01	0.1.1	0.1	
# ::edge	organize-01	ARG1	inspect-01	0.1	0.1.0	
# ::edge	own-01	ARG0	person	0.0.0	0.0	
# ::edge	reduce-01	ARG1	intend-01	0.0.1.2	0.0.1	
# ::edge	report-01	ARG1	intend-01	0.0.1.3	0.0.1	
(a3 / approve-01 
      :ARG0 (p / person 
            :ARG0-of (o2 / own-01) 
            :ARG0-of (i2 / intend-01 
                  :ARG0-of (f / fit-01 
                        :ARG1 (d / drag-01 
                              :ARG2 (l / land-01 
                                    :ARG0 (a / accident 
                                          :op-of (a2 / after 
                                                :mod (s / short))) 
                                    :ARG1 (g / gear)) 
                              :mod (a5 / additional))) 
                  :ARG1 (a4 / aircraft) 
                  :ARG1-of (r / reduce-01) 
                  :ARG1-of (r2 / report-01))) 
      :ARG1 (o / organize-01 
            :ARG1 (i / inspect-01) 
            :ARG1-of (m / maintain-01)))

# ::snt mr robbins was not hurt in the accident which happened in wykham lane
# ::tok mr robbins was not hurt in the accident which happened in wykham lane
# ::alignments 9-10|0.0.0 7-8|0.0 4-5|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:52.902
# ::node	0	hurt-01	4-5
# ::node	0.0	accident	7-8
# ::node	0.0.0	happen-01	9-10
# ::root	0	hurt-01
# ::edge	happen-01	ARG0	accident	0.0.0	0.0	
# ::edge	hurt-01	ARG0	accident	0	0.0	
(h2 / hurt-01 
      :ARG0 (a / accident 
            :ARG0-of (h / happen-01)))

# ::snt the principal example is nofault traffic accident compensation which if it does not become the exclusive remedy as in quebec and israel takes care of an overwhelming proportion of such personal injuries
# ::tok the principal example is nofault traffic accident compensation which if it does not become the exclusive remedy as in quebec and israel takes care of an overwhelming proportion of such personal injuries
# ::alignments 31-32|0.2.0.0.0 30-31|0.2.0.0.0.0 29-30|0.2.0.0.0.1 27-28|0.2.0 26-27|0.2.0.0 23-24|0.2 21-22|0.0.0.0.0+0.0.0.0+0.0.0 20-21|0 16-17|0.0 15-16|0.0.2 13-14|0.0.1 10-11|0.0.1.0 7-8|0.1 6-7|0.1.2 5-6|0.1.1 2-3|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:53.269
# ::node	0	and	20-21
# ::node	0.0	remedy-01	16-17
# ::node	0.0.0	country	21-22
# ::node	0.0.0.0	name	21-22
# ::node	0.0.0.0.0	"Israel"	21-22
# ::node	0.0.1	become-01	13-14
# ::node	0.0.1.0	it	10-11
# ::node	0.0.2	exclusive	15-16
# ::node	0.1	compensate-01	7-8
# ::node	0.1.0	example	2-3
# ::node	0.1.1	traffic	5-6
# ::node	0.1.2	accident	6-7
# ::node	0.2	care-01	23-24
# ::node	0.2.0	proportion	27-28
# ::node	0.2.0.0	overwhelm-01	26-27
# ::node	0.2.0.0.0	injure-01	31-32
# ::node	0.2.0.0.0.0	personal	30-31
# ::node	0.2.0.0.0.1	such	29-30
# ::root	0	and
# ::edge	and	op1	compensate-01	0	0.1	
# ::edge	and	op2	care-01	0	0.2	
# ::edge	become-01	ARG1	it	0.0.1	0.0.1.0	
# ::edge	become-01	ARG2	remedy-01	0.0.1	0.0	
# ::edge	care-01	ARG1	proportion	0.2	0.2.0	
# ::edge	compensate-01	ARG0	example	0.1	0.1.0	
# ::edge	compensate-01	ARG1	traffic	0.1	0.1.1	
# ::edge	compensate-01	ARG3	accident	0.1	0.1.2	
# ::edge	country	name	name	0.0.0	0.0.0.0	
# ::edge	injure-01	mod	personal	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	injure-01	mod	such	0.2.0.0.0	0.2.0.0.0.1	
# ::edge	name	op1	"Israel"	0.0.0.0	0.0.0.0.0	
# ::edge	overwhelm-01	ARG0	proportion	0.2.0.0	0.2.0	
# ::edge	overwhelm-01	ARG1	injure-01	0.2.0.0	0.2.0.0.0	
# ::edge	remedy-01	ARG0	country	0.0	0.0.0	
# ::edge	remedy-01	ARG1	and	0.0	0	
# ::edge	remedy-01	mod	exclusive	0.0	0.0.2	
(a / and 
      :ARG1-of (r / remedy-01 
            :ARG0 (c2 / country 
                  :name (n / name 
                        :op1 "Israel")) 
            :ARG2-of (b / become-01 
                  :ARG1 (i2 / it)) 
            :mod (e / exclusive)) 
      :op1 (c3 / compensate-01 
            :ARG0 (e2 / example) 
            :ARG1 (t / traffic) 
            :ARG3 (a2 / accident)) 
      :op2 (c / care-01 
            :ARG1 (p2 / proportion 
                  :ARG0-of (o / overwhelm-01 
                        :ARG1 (i / injure-01 
                              :mod (p / personal) 
                              :mod (s / such))))))

# ::snt i dont see any reason why we should ever meet again except by accident
# ::tok i dont see any reason why we should ever meet again except by accident
# ::alignments 13-14|0.0 11-12|0 10-11|0.2 8-9|0.2.0 7-8|0.1 6-7|0.1.0 4-5|0.1.1 3-4|0.1.1.1 2-3|0.1.1.0 0-1|0.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:53.356
# ::node	0	except-00	11-12
# ::node	0.0	accident	13-14
# ::node	0.1	recommend-01	7-8
# ::node	0.1.0	we	6-7
# ::node	0.1.1	reason	4-5
# ::node	0.1.1.0	see-01	2-3
# ::node	0.1.1.0.0	i	0-1
# ::node	0.1.1.1	any	3-4
# ::node	0.2	again	10-11
# ::node	0.2.0	ever	8-9
# ::root	0	except-00
# ::edge	again	time	ever	0.2	0.2.0	
# ::edge	except-00	ARG0	accident	0	0.0	
# ::edge	except-00	ARG1	recommend-01	0	0.1	
# ::edge	except-00	manner	again	0	0.2	
# ::edge	reason	mod	any	0.1.1	0.1.1.1	
# ::edge	recommend-01	ARG0	we	0.1	0.1.0	
# ::edge	recommend-01	ARG1	reason	0.1	0.1.1	
# ::edge	see-01	ARG0	i	0.1.1.0	0.1.1.0.0	
# ::edge	see-01	ARG1	reason	0.1.1.0	0.1.1	
(e / except-00 
      :ARG0 (a / accident) 
      :ARG1 (r / recommend-01 
            :ARG0 (w / we) 
            :ARG1 (r2 / reason 
                  :ARG1-of (s / see-01 
                        :ARG0 (i / i)) 
                  :mod (a3 / any))) 
      :manner (a2 / again 
            :time (e2 / ever)))

# ::snt since then he has been bitten and punched by drunks and drug addicts and attended countless harrowing road accidents
# ::tok since then he has been bitten and punched by drunks and drug addicts and attended countless harrowing road accidents
# ::alignments 18-19|0.0.0 17-18|0.0.0.0 15-16|0.0.0.1 14-15|0.0 13-14|0 12-13|0.0.1.3.0+0.0.1.3 11-12|0.0.1.2 10-11|0.0.2 9-10|0.0.1.4 7-8|0.0.1.1 6-7|0.0.1 2-3|0.0.1.1.0 1-2|0.0.1.1.0.0 0-1|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:53.741
# ::node	0	and	13-14
# ::node	0.0	attend-01	14-15
# ::node	0.0.0	accident	18-19
# ::node	0.0.0.0	road	17-18
# ::node	0.0.0.1	countless	15-16
# ::node	0.0.1	and	6-7
# ::node	0.0.1.0	since	0-1
# ::node	0.0.1.1	punch-01	7-8
# ::node	0.0.1.1.0	he	2-3
# ::node	0.0.1.1.0.0	then	1-2
# ::node	0.0.1.2	drug	11-12
# ::node	0.0.1.3	person	12-13
# ::node	0.0.1.3.0	addict-01	12-13
# ::node	0.0.1.4	drunk	9-10
# ::node	0.0.2	and	10-11
# ::root	0	and
# ::edge	accident	location	road	0.0.0	0.0.0.0	
# ::edge	accident	mod	countless	0.0.0	0.0.0.1	
# ::edge	addict-01	ARG1	person	0.0.1.3.0	0.0.1.3	
# ::edge	and	op1	attend-01	0	0.0	
# ::edge	and	op1	attend-01	0.0.2	0.0	
# ::edge	and	op1	punch-01	0.0.1	0.0.1.1	
# ::edge	and	op2	drug	0.0.1	0.0.1.2	
# ::edge	and	op3	person	0.0.1	0.0.1.3	
# ::edge	and	op4	attend-01	0.0.1	0.0	
# ::edge	and	time	drunk	0.0.1	0.0.1.4	
# ::edge	attend-01	ARG1	accident	0.0	0.0.0	
# ::edge	punch-01	ARG1	he	0.0.1.1	0.0.1.1.0	
# ::edge	since	op1	and	0.0.1.0	0.0.1	
# ::edge	then	mod	he	0.0.1.1.0.0	0.0.1.1.0	
(a3 / and 
      :op1 (a2 / attend-01 
            :ARG1 (a / accident 
                  :location (r / road) 
                  :mod (c / countless)) 
            :op-of (a6 / and 
                  :op-of (s / since) 
                  :op1 (p2 / punch-01 
                        :ARG1 (h / he 
                              :mod-of (t / then))) 
                  :op2 (d / drug) 
                  :op3 (p / person 
                        :ARG1-of (a4 / addict-01)) 
                  :time (d2 / drunk)) 
            :op-of (a5 / and)))

# ::snt monitoring road accidents involving school transport has identified a bend on the b480 near cuxham as a trouble spot
# ::tok monitoring road accidents involving school transport has identified a bend on the b480 near cuxham as a trouble spot
# ::alignments 18-19|0.1 17-18|0.1.0 13-14|0.0.1.0 7-8|0 5-6|0.0.1.1 4-5|0.0.1.1.0 3-4|0.0.1 2-3|0.0 1-2|0.0.2 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:53.909
# ::node	0	identify-01	7-8
# ::node	0.0	accident	2-3
# ::node	0.0.0	monitor-01	0-1
# ::node	0.0.1	involve-01	3-4
# ::node	0.0.1.0	near	13-14
# ::node	0.0.1.1	transport-01	5-6
# ::node	0.0.1.1.0	school	4-5
# ::node	0.0.2	road	1-2
# ::node	0.1	spot	18-19
# ::node	0.1.0	trouble-01	17-18
# ::root	0	identify-01
# ::edge	accident	location	road	0.0	0.0.2	
# ::edge	identify-01	ARG1	accident	0	0.0	
# ::edge	identify-01	manner	spot	0	0.1	
# ::edge	involve-01	ARG0	near	0.0.1	0.0.1.0	
# ::edge	involve-01	ARG1	transport-01	0.0.1	0.0.1.1	
# ::edge	involve-01	ARG2	accident	0.0.1	0.0	
# ::edge	monitor-01	ARG1	accident	0.0.0	0.0	
# ::edge	transport-01	ARG1	school	0.0.1.1	0.0.1.1.0	
# ::edge	trouble-01	ARG1	spot	0.1.0	0.1	
(i / identify-01 
      :ARG1 (a / accident 
            :ARG1-of (m / monitor-01) 
            :ARG2-of (i2 / involve-01 
                  :ARG0 (n / near) 
                  :ARG1 (t2 / transport-01 
                        :ARG1 (s2 / school))) 
            :location (r / road)) 
      :manner (s / spot 
            :ARG1-of (t / trouble-01)))

# ::snt mainly vocal soundum an accident and incident free night through the fox fm area this evening certainly no serious accidents vocal soundum reported nothing from our fox patrols either tonight
# ::tok mainly vocal soundum an accident and incident free night through the fox fm area this evening certainly no serious accidents vocal soundum reported nothing from our fox patrols either tonight
# ::alignments 29-30|0.2 28-29|0.2.0 27-28|0.1.0 23-24|0.1 22-23|0 20-21|0.1.0.1 19-20|0.1.1 18-19|0.1.1.0 17-18|0.1.1.1 16-17|0.1.1.1.0 15-16|0.3 14-15|0.3.0 13-14|0.0 8-9|0.1.0.0.2 7-8|0.1.0.0.2.0 6-7|0.1.0.0.1 5-6|0.1.0.0 4-5|0.1.0.0.0 1-2|0.1.0.0.2.0.0.0 0-1|0.1.0.0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:54.330
# ::node	0	report-01	22-23
# ::node	0.0	area	13-14
# ::node	0.1	nothing	23-24
# ::node	0.1.0	patrol-01	27-28
# ::node	0.1.0.0	and	5-6
# ::node	0.1.0.0.0	accident	4-5
# ::node	0.1.0.0.1	incident	6-7
# ::node	0.1.0.0.2	night	8-9
# ::node	0.1.0.0.2.0	free-41	7-8
# ::node	0.1.0.0.2.0.0	main	0-1
# ::node	0.1.0.0.2.0.0.0	vocal	1-2
# ::node	0.1.0.1	vocal	20-21
# ::node	0.1.1	accident	19-20
# ::node	0.1.1.0	serious	18-19
# ::node	0.1.1.1	-	17-18
# ::node	0.1.1.1.0	certain	16-17
# ::node	0.2	tonight	29-30
# ::node	0.2.0	either	28-29
# ::node	0.3	evening	15-16
# ::node	0.3.0	this	14-15
# ::root	0	report-01
# ::edge	-	mod	certain	0.1.1.1	0.1.1.1.0	
# ::edge	accident	mod	serious	0.1.1	0.1.1.0	
# ::edge	accident	polarity	-	0.1.1	0.1.1.1	
# ::edge	and	op1	accident	0.1.0.0	0.1.0.0.0	
# ::edge	and	op2	incident	0.1.0.0	0.1.0.0.1	
# ::edge	and	time	night	0.1.0.0	0.1.0.0.2	
# ::edge	evening	mod	this	0.3	0.3.0	
# ::edge	free-41	ARG0	main	0.1.0.0.2.0	0.1.0.0.2.0.0	
# ::edge	free-41	ARG1	night	0.1.0.0.2.0	0.1.0.0.2	
# ::edge	nothing	location	patrol-01	0.1	0.1.0	
# ::edge	nothing	poss	accident	0.1	0.1.1	
# ::edge	patrol-01	ARG0	and	0.1.0	0.1.0.0	
# ::edge	patrol-01	poss	vocal	0.1.0	0.1.0.1	
# ::edge	report-01	ARG0	area	0	0.0	
# ::edge	report-01	ARG1	nothing	0	0.1	
# ::edge	report-01	time	evening	0	0.3	
# ::edge	report-01	time	tonight	0	0.2	
# ::edge	tonight	mod	either	0.2	0.2.0	
# ::edge	vocal	mod	main	0.1.0.0.2.0.0.0	0.1.0.0.2.0.0	
(r / report-01 
      :ARG0 (a2 / area) 
      :ARG1 (n / nothing 
            :location (p / patrol-01 
                  :ARG0 (a3 / and 
                        :op1 (a4 / accident) 
                        :op2 (i / incident) 
                        :time (n2 / night 
                              :ARG1-of (f / free-41 
                                    :ARG0 (m / main 
                                          :mod-of (v2 / vocal))))) 
                  :poss (v / vocal)) 
            :poss (a / accident 
                  :mod (s / serious) 
                  :polarity (- / - 
                        :mod (c / certain)))) 
      :time (t / tonight 
            :mod (e / either)) 
      :time (e2 / evening 
            :mod (t2 / this)))

# ::snt a pruning accident
# ::tok a pruning accident
# ::alignments 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:54.334
# ::node	0	accident	2-3
# ::root	0	accident
(a / accident)

# ::snt the sense of not having much to lose is clear in a birthday present after all i am alive only by accident
# ::tok the sense of not having much to lose is clear in a birthday present after all i am alive only by accident
# ::alignments 21-22|0.2 19-20|0.3 16-17|0.4.1 15-16|0.1 14-15|0.4.0.0 13-14|0.4.0 12-13|0.4 9-10|0.4.0.1 7-8|0 5-6|0.0 1-2|0.4.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:54.454
# ::node	0	lose-02	7-8
# ::node	0.0	much	5-6
# ::node	0.1	all	15-16
# ::node	0.2	accident	21-22
# ::node	0.3	only	19-20
# ::node	0.4	birthday	12-13
# ::node	0.4.0	present	13-14
# ::node	0.4.0.0	after	14-15
# ::node	0.4.0.1	clear	9-10
# ::node	0.4.0.1.0	sense	1-2
# ::node	0.4.1	i	16-17
# ::root	0	lose-02
# ::edge	accident	op1	lose-02	0.2	0	
# ::edge	birthday	poss	i	0.4	0.4.1	
# ::edge	clear	domain	sense	0.4.0.1	0.4.0.1.0	
# ::edge	clear	mod	present	0.4.0.1	0.4.0	
# ::edge	lose-02	ARG0	much	0	0.0	
# ::edge	lose-02	ARG1	all	0	0.1	
# ::edge	lose-02	time	birthday	0	0.4	
# ::edge	only	op1	lose-02	0.3	0	
# ::edge	present	location	after	0.4.0	0.4.0.0	
# ::edge	present	mod	birthday	0.4.0	0.4	
(l / lose-02 
      :ARG0 (m / much) 
      :ARG1 (a2 / all) 
      :op-of (a / accident) 
      :op-of (o / only) 
      :time (b / birthday 
            :mod-of (p / present 
                  :location (a3 / after) 
                  :mod-of (c / clear 
                        :domain (s / sense))) 
            :poss (i / i)))

# ::snt the college of driver education code was formed by road safety campaigners who believe the advanced tests run by the royal society for the prevention of accidents rospa and the institute of advanced motorists are too elitist
# ::tok the college of driver education code was formed by road safety campaigners who believe the advanced tests run by the royal society for the prevention of accidents rospa and the institute of advanced motorists are too elitist
# ::alignments 36-37|0.0.1 35-36|0.0.1.0 32-33|0.0.0.0.0.0 30-31|0.3 28-29|0 26-27|0.2.0 24-25|0.2 21-22|0.1 20-21|0.1.0 16-17|0.0.0.1 15-16|0.0.0.1.0 13-14|0.0 11-12|0.0.0.0+0.0.0 10-11|0.0.0.0.0 9-10|0.0.0.0.0.1 7-8|0.0.0.2 5-6|0.0.0.2.0.0.1 4-5|0.0.0.2.0.0 3-4|0.0.0.2.0.0.0.0+0.0.0.2.0.0.0 1-2|0.0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:55.140
# ::node	0	and	28-29
# ::node	0.0	believe-01	13-14
# ::node	0.0.0	person	11-12
# ::node	0.0.0.0	campaign-01	11-12
# ::node	0.0.0.0.0	safe-41	10-11
# ::node	0.0.0.0.0.0	advance-01	32-33
# ::node	0.0.0.0.0.1	road	9-10
# ::node	0.0.0.1	test-01	16-17
# ::node	0.0.0.1.0	advance-01	15-16
# ::node	0.0.0.2	form-01	7-8
# ::node	0.0.0.2.0	college	1-2
# ::node	0.0.0.2.0.0	educate-01	4-5
# ::node	0.0.0.2.0.0.0	person	3-4
# ::node	0.0.0.2.0.0.0.0	drive-01	3-4
# ::node	0.0.0.2.0.0.1	code	5-6
# ::node	0.0.1	elite	36-37
# ::node	0.0.1.0	too	35-36
# ::node	0.1	society	21-22
# ::node	0.1.0	royal	20-21
# ::node	0.2	prevent-01	24-25
# ::node	0.2.0	accident	26-27
# ::node	0.3	institute	30-31
# ::root	0	and
# ::edge	advance-01	ARG1	safe-41	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	advance-01	ARG1	test-01	0.0.0.1.0	0.0.0.1	
# ::edge	and	op1	believe-01	0	0.0	
# ::edge	and	op2	society	0	0.1	
# ::edge	and	op3	prevent-01	0	0.2	
# ::edge	and	op4	institute	0	0.3	
# ::edge	believe-01	ARG0	person	0.0	0.0.0	
# ::edge	believe-01	ARG1	elite	0.0	0.0.1	
# ::edge	campaign-01	ARG0	person	0.0.0.0	0.0.0	
# ::edge	campaign-01	ARG2	safe-41	0.0.0.0	0.0.0.0.0	
# ::edge	code	mod	educate-01	0.0.0.2.0.0.1	0.0.0.2.0.0	
# ::edge	drive-01	ARG0	person	0.0.0.2.0.0.0.0	0.0.0.2.0.0.0	
# ::edge	educate-01	ARG0	college	0.0.0.2.0.0	0.0.0.2.0	
# ::edge	educate-01	ARG1	person	0.0.0.2.0.0	0.0.0.2.0.0.0	
# ::edge	elite	degree	too	0.0.1	0.0.1.0	
# ::edge	form-01	ARG1	college	0.0.0.2	0.0.0.2.0	
# ::edge	form-01	prep-with	person	0.0.0.2	0.0.0	
# ::edge	prevent-01	ARG1	accident	0.2	0.2.0	
# ::edge	safe-41	mod	road	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	society	mod	royal	0.1	0.1.0	
# ::edge	test-01	ARG1	person	0.0.0.1	0.0.0	
(a2 / and 
      :op1 (b / believe-01 
            :ARG0 (p2 / person 
                  :ARG0-of (c / campaign-01 
                        :ARG2 (s2 / safe-41 
                              :ARG1-of (a / advance-01) 
                              :mod (r2 / road))) 
                  :ARG1-of (t2 / test-01 
                        :ARG1-of (a4 / advance-01)) 
                  :prep-with-of (f / form-01 
                        :ARG1 (c3 / college 
                              :ARG0-of (e2 / educate-01 
                                    :ARG1 (p3 / person 
                                          :ARG0-of (d / drive-01)) 
                                    :mod-of (c2 / code))))) 
            :ARG1 (e / elite 
                  :degree (t / too))) 
      :op2 (s / society 
            :mod (r / royal)) 
      :op3 (p / prevent-01 
            :ARG1 (a3 / accident)) 
      :op4 (i / institute))

# ::snt he is struck by what he calls the immensely accidental quality of events in his life, originally he thought he would become a poet and it was by accident that he became a doctor
# ::tok he is struck by what he calls the immensely accidental quality of events in his life , originally he thought he would become a poet and it was by accident that he became a doctor
# ::alignments 34-35|0.1.2 32-33|0.1 31-32|0.1.1 29-30|0.1.0 26-27|0.0.1.0 25-26|0 24-25|0.0.1.2 22-23|0.0.1 20-21|0.0.1.1 19-20|0.0 18-19|0.0.0 17-18|0.0.2 15-16|0.0.0.0.1.0.0.0 12-13|0.0.0.0.1.0.0 10-11|0.0.0.0.1.0 5-6|0.0.0.0.1 2-3|0.0.0.0 0-1|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:55.702
# ::node	0	and	25-26
# ::node	0.0	think-01	19-20
# ::node	0.0.0	he	18-19
# ::node	0.0.0.0	strike-01	2-3
# ::node	0.0.0.0.0	he	0-1
# ::node	0.0.0.0.1	he	5-6
# ::node	0.0.0.0.1.0	quality	10-11
# ::node	0.0.0.0.1.0.0	event	12-13
# ::node	0.0.0.0.1.0.0.0	life	15-16
# ::node	0.0.1	become-01	22-23
# ::node	0.0.1.0	it	26-27
# ::node	0.0.1.1	he	20-21
# ::node	0.0.1.2	poet	24-25
# ::node	0.0.2	original	17-18
# ::node	0.1	become-01	32-33
# ::node	0.1.0	accident	29-30
# ::node	0.1.1	he	31-32
# ::node	0.1.2	doctor	34-35
# ::root	0	and
# ::edge	and	op1	think-01	0	0.0	
# ::edge	and	op2	become-01	0	0.1	
# ::edge	become-01	ARG0	accident	0.1	0.1.0	
# ::edge	become-01	ARG0	it	0.0.1	0.0.1.0	
# ::edge	become-01	ARG1	he	0.0.1	0.0.1.1	
# ::edge	become-01	ARG1	he	0.1	0.1.1	
# ::edge	become-01	ARG2	doctor	0.1	0.1.2	
# ::edge	become-01	ARG2	poet	0.0.1	0.0.1.2	
# ::edge	event	location	life	0.0.0.0.1.0.0	0.0.0.0.1.0.0.0	
# ::edge	quality	poss	event	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	quality	poss	he	0.0.0.0.1.0	0.0.0.0.1	
# ::edge	strike-01	ARG0	he	0.0.0.0	0.0.0	
# ::edge	strike-01	ARG1	he	0.0.0.0	0.0.0.0.0	
# ::edge	strike-01	ARG2	he	0.0.0.0	0.0.0.0.1	
# ::edge	think-01	ARG0	he	0.0	0.0.0	
# ::edge	think-01	ARG1	become-01	0.0	0.0.1	
# ::edge	think-01	mod	original	0.0	0.0.2	
(a2 / and 
      :op1 (t / think-01 
            :ARG0 (h3 / he 
                  :ARG0-of (s / strike-01 
                        :ARG1 (h5 / he) 
                        :ARG2 (h4 / he 
                              :poss-of (q / quality 
                                    :poss (e / event 
                                          :location (l / life)))))) 
            :ARG1 (b2 / become-01 
                  :ARG0 (i / it) 
                  :ARG1 (h2 / he) 
                  :ARG2 (p / poet)) 
            :mod (o / original)) 
      :op2 (b / become-01 
            :ARG0 (a / accident) 
            :ARG1 (h / he) 
            :ARG2 (d / doctor)))

# ::snt sometimes you chuck summat away by accident and then you have to go looking in bins to find it
# ::tok sometimes you chuck summat away by accident and then you have to go looking in bins to find it
# ::alignments 18-19|0.0.0 9-10|0.1 8-9|0.0.1 7-8|0 6-7|0.0 4-5|0.0.2.0 1-2|0.0.2 0-1|0.0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:55.755
# ::node	0	and	7-8
# ::node	0.0	accident	6-7
# ::node	0.0.0	it	18-19
# ::node	0.0.1	then	8-9
# ::node	0.0.2	you	1-2
# ::node	0.0.2.0	away	4-5
# ::node	0.0.2.0.0	sometimes	0-1
# ::node	0.1	you	9-10
# ::root	0	and
# ::edge	accident	mod	it	0.0	0.0.0	
# ::edge	accident	poss	you	0.0	0.0.2	
# ::edge	and	op1	accident	0	0.0	
# ::edge	and	op2	you	0	0.1	
# ::edge	away	name	sometimes	0.0.2.0	0.0.2.0.0	
# ::edge	then	mod	accident	0.0.1	0.0	
# ::edge	you	example	away	0.0.2	0.0.2.0	
(a / and 
      :op1 (a2 / accident 
            :mod (i / it) 
            :mod-of (t / then) 
            :poss (y2 / you 
                  :example (a3 / away 
                        :name (s / sometimes)))) 
      :op2 (y / you))

# ::snt the midland personal accident plan has been specially negotiated  for you between ourselves at sun alliance and midland bank
# ::tok the midland personal accident plan has been specially negotiated for you between ourselves at sun alliance and midland bank
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:55.756
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt but there is no necessary connection between style and political ideology which is just another way of saying it was ultimately an accident that hitler was a classicist rather than a modernist
# ::tok but there is no necessary connection between style and political ideology which is just another way of saying it was ultimately an accident that hitler was a classicist rather than a modernist
# ::alignments 22-23|0.1 20-21|0.2.0 18-19|0.0 17-18|0 15-16|0.3 14-15|0.3.1 13-14|0.3.0 10-11|0.2.1.1.1 9-10|0.2.1.1.1.0 8-9|0.2.1.0 7-8|0.2.1.1.0 6-7|0.2.1.1 5-6|0.2.1 3-4|0.2.1.2 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:56.053
# ::node	0	say-01	17-18
# ::node	0.0	it	18-19
# ::node	0.1	accident	22-23
# ::node	0.2	contrast-01	0-1
# ::node	0.2.0	ultimate	20-21
# ::node	0.2.1	connect-01	5-6
# ::node	0.2.1.0	and	8-9
# ::node	0.2.1.1	between	6-7
# ::node	0.2.1.1.0	style	7-8
# ::node	0.2.1.1.1	ideology	10-11
# ::node	0.2.1.1.1.0	politics	9-10
# ::node	0.2.1.2	-	3-4
# ::node	0.3	way	15-16
# ::node	0.3.0	just	13-14
# ::node	0.3.1	another	14-15
# ::root	0	say-01
# ::edge	between	op1	style	0.2.1.1	0.2.1.1.0	
# ::edge	between	op2	ideology	0.2.1.1	0.2.1.1.1	
# ::edge	connect-01	ARG1	and	0.2.1	0.2.1.0	
# ::edge	connect-01	location	between	0.2.1	0.2.1.1	
# ::edge	connect-01	polarity	-	0.2.1	0.2.1.2	
# ::edge	contrast-01	ARG0	ultimate	0.2	0.2.0	
# ::edge	contrast-01	ARG1	connect-01	0.2	0.2.1	
# ::edge	contrast-01	ARG2	say-01	0.2	0	
# ::edge	ideology	mod	politics	0.2.1.1.1	0.2.1.1.1.0	
# ::edge	say-01	ARG0	it	0	0.0	
# ::edge	say-01	ARG1	accident	0	0.1	
# ::edge	say-01	instrument	way	0	0.3	
# ::edge	way	mod	another	0.3	0.3.1	
# ::edge	way	mod	just	0.3	0.3.0	
(s / say-01 
      :ARG0 (i / it) 
      :ARG1 (a / accident) 
      :ARG2-of (c2 / contrast-01 
            :ARG0 (u / ultimate) 
            :ARG1 (c / connect-01 
                  :ARG1 (a3 / and) 
                  :location (b / between 
                        :op1 (s2 / style) 
                        :op2 (i2 / ideology 
                              :mod (p / politics))) 
                  :polarity (- / -))) 
      :instrument (w / way 
            :mod (j / just) 
            :mod (a2 / another)))

# ::snt the inquest heard that a post mortem examination showed mr smith had suffered a heart attack at the time of the accident on february 27
# ::tok the inquest heard that a post mortem examination showed mr smith had suffered a heart attack at the time of the accident on february 27
# ::alignments 23-24|0.1.1.1.1.0+0.1.1.1.1 21-22|0.1.1.1.1.1 18-19|0.1.1.0 15-16|0.1.1.1 14-15|0.1.1.1.0 12-13|0.1.1 8-9|0.1 7-8|0.1.0 5-6|0.1.0.0 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:56.257
# ::node	0	hear-01	2-3
# ::node	0.0	inquest	1-2
# ::node	0.1	show-01	8-9
# ::node	0.1.0	examine-01	7-8
# ::node	0.1.0.0	post	5-6
# ::node	0.1.1	suffer-01	12-13
# ::node	0.1.1.0	time	18-19
# ::node	0.1.1.1	attack-01	15-16
# ::node	0.1.1.1.0	heart	14-15
# ::node	0.1.1.1.1	date-entity	23-24
# ::node	0.1.1.1.1.0	2	23-24
# ::node	0.1.1.1.1.1	accident	21-22
# ::root	0	hear-01
# ::edge	accident	time	date-entity	0.1.1.1.1.1	0.1.1.1.1	
# ::edge	attack-01	ARG1	heart	0.1.1.1	0.1.1.1.0	
# ::edge	attack-01	time	date-entity	0.1.1.1	0.1.1.1.1	
# ::edge	date-entity	month	2	0.1.1.1.1	0.1.1.1.1.0	
# ::edge	examine-01	ARG1	post	0.1.0	0.1.0.0	
# ::edge	hear-01	ARG0	inquest	0	0.0	
# ::edge	hear-01	ARG1	show-01	0	0.1	
# ::edge	show-01	ARG0	examine-01	0.1	0.1.0	
# ::edge	show-01	ARG1	suffer-01	0.1	0.1.1	
# ::edge	suffer-01	ARG0	time	0.1.1	0.1.1.0	
# ::edge	suffer-01	ARG1	attack-01	0.1.1	0.1.1.1	
(h2 / hear-01 
      :ARG0 (i / inquest) 
      :ARG1 (s2 / show-01 
            :ARG0 (e / examine-01 
                  :ARG1 (p / post)) 
            :ARG1 (s / suffer-01 
                  :ARG0 (t / time) 
                  :ARG1 (a2 / attack-01 
                        :ARG1 (h / heart) 
                        :time (d / date-entity 
                              :month 2 
                              :time-of (a / accident))))))

# ::snt why anyway was he following this road accident that wasnt even properly his province to distract his mind from the urgency of the hatton affair
# ::tok why anyway was he following this road accident that wasnt even properly his province to distract his mind from the urgency of the hatton affair
# ::alignments 24-25|0.1 20-21|0 17-18|0.0 13-14|0.0.1 11-12|0.0.1.0 7-8|0.0.0.1 6-7|0.0.0.1.0 5-6|0.0.0.1.1 3-4|0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:56.343
# ::node	0	urgency	20-21
# ::node	0.0	mind	17-18
# ::node	0.0.0	he	3-4
# ::node	0.0.0.0	anyway	1-2
# ::node	0.0.0.1	accident	7-8
# ::node	0.0.0.1.0	road	6-7
# ::node	0.0.0.1.1	this	5-6
# ::node	0.0.1	province	13-14
# ::node	0.0.1.0	proper	11-12
# ::node	0.1	affair	24-25
# ::root	0	urgency
# ::edge	accident	location	road	0.0.0.1	0.0.0.1.0	
# ::edge	accident	mod	this	0.0.0.1	0.0.0.1.1	
# ::edge	accident	poss	he	0.0.0.1	0.0.0	
# ::edge	he	mod	anyway	0.0.0	0.0.0.0	
# ::edge	he	part	mind	0.0.0	0.0	
# ::edge	mind	location	urgency	0.0	0	
# ::edge	mind	time	province	0.0	0.0.1	
# ::edge	province	mod	proper	0.0.1	0.0.1.0	
# ::edge	urgency	poss	affair	0	0.1	
(u / urgency 
      :location-of (m / mind 
            :part-of (h / he 
                  :mod (a3 / anyway) 
                  :poss-of (a2 / accident 
                        :location (r / road) 
                        :mod (t / this))) 
            :time (p / province 
                  :mod (p2 / proper))) 
      :poss (a / affair))

# ::snt plans are to go ahead to recover 55m a year in compensation paid to victims of accident injury and disease who have as a result also been claiming social security nicholas scott minister for social security said yesterday
# ::tok plans are to go ahead to recover 55m a year in compensation paid to victims of accident injury and disease who have as a result also been claiming social security nicholas scott minister for social security said yesterday
# ::alignments 37-38|0.1 36-37|0 35-36|0.0.0.1.0.0 34-35|0.0.2.1.1.0 32-33|0.0.0.1.0+0.0.0.1 29-30|0.0.1.0.0.0 28-29|0.0.1.0.0 27-28|0.0.0 25-26|0.0.0.2 24-25|0.0.0.0 19-20|0.0.3 18-19|0.0 17-18|0.0.2 16-17|0.0.2.0 14-15|0.0.2.1.2 12-13|0.0.2.1 11-12|0.0.2.1.1 9-10|0.0.2.1.0 6-7|0.0.1.0 4-5|0.0.1.0.1 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:56.794
# ::node	0	say-01	36-37
# ::node	0.0	and	18-19
# ::node	0.0.0	claim-01	27-28
# ::node	0.0.0.0	result-01	24-25
# ::node	0.0.0.1	have-org-role-91	32-33
# ::node	0.0.0.1.0	minister	32-33
# ::node	0.0.0.1.0.0	security	35-36
# ::node	0.0.0.2	also	25-26
# ::node	0.0.1	plan-01	0-1
# ::node	0.0.1.0	recover-02	6-7
# ::node	0.0.1.0.0	society	28-29
# ::node	0.0.1.0.0.0	security	29-30
# ::node	0.0.1.0.1	ahead	4-5
# ::node	0.0.2	injure-01	17-18
# ::node	0.0.2.0	accident	16-17
# ::node	0.0.2.1	pay-01	12-13
# ::node	0.0.2.1.0	year	9-10
# ::node	0.0.2.1.1	compensate-01	11-12
# ::node	0.0.2.1.1.0	society	34-35
# ::node	0.0.2.1.2	victim	14-15
# ::node	0.0.3	disease	19-20
# ::node	0.1	yesterday	37-38
# ::root	0	say-01
# ::edge	and	op1	injure-01	0.0	0.0.2	
# ::edge	and	op2	disease	0.0	0.0.3	
# ::edge	claim-01	ARG0	and	0.0.0	0.0	
# ::edge	claim-01	ARG1	result-01	0.0.0	0.0.0.0	
# ::edge	claim-01	mod	also	0.0.0	0.0.0.2	
# ::edge	compensate-01	ARG1	society	0.0.2.1.1	0.0.2.1.1.0	
# ::edge	have-org-role-91	ARG1	claim-01	0.0.0.1	0.0.0	
# ::edge	have-org-role-91	ARG2	minister	0.0.0.1	0.0.0.1.0	
# ::edge	injure-01	ARG1	accident	0.0.2	0.0.2.0	
# ::edge	minister	mod	security	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	pay-01	ARG0	year	0.0.2.1	0.0.2.1.0	
# ::edge	pay-01	ARG1	compensate-01	0.0.2.1	0.0.2.1.1	
# ::edge	pay-01	ARG2	victim	0.0.2.1	0.0.2.1.2	
# ::edge	pay-01	ARG3	injure-01	0.0.2.1	0.0.2	
# ::edge	plan-01	ARG1	and	0.0.1	0.0	
# ::edge	recover-02	ARG0	plan-01	0.0.1.0	0.0.1	
# ::edge	recover-02	ARG1	society	0.0.1.0	0.0.1.0.0	
# ::edge	recover-02	ARG2	ahead	0.0.1.0	0.0.1.0.1	
# ::edge	say-01	ARG1	and	0	0.0	
# ::edge	say-01	time	yesterday	0	0.1	
# ::edge	security	mod	society	0.0.1.0.0.0	0.0.1.0.0	
(s / say-01 
      :ARG1 (a2 / and 
            :ARG0-of (c / claim-01 
                  :ARG1 (r / result-01) 
                  :ARG1-of (h / have-org-role-91 
                        :ARG2 (m / minister 
                              :mod (s2 / security))) 
                  :mod (a / also)) 
            :ARG1-of (p2 / plan-01 
                  :ARG0-of (r2 / recover-02 
                        :ARG1 (s5 / society 
                              :mod-of (s4 / security)) 
                        :ARG2 (a4 / ahead))) 
            :op1 (i / injure-01 
                  :ARG1 (a3 / accident) 
                  :ARG3-of (p / pay-01 
                        :ARG0 (y2 / year) 
                        :ARG1 (c2 / compensate-01 
                              :ARG1 (s3 / society)) 
                        :ARG2 (v / victim))) 
            :op2 (d / disease)) 
      :time (y / yesterday))

# ::snt   the ambulance dispute which has left 25 services with accident and emergency cover only remained deadlocked last night as unions warned that it would escalate if there is no breakthrough by thursday
# ::tok the ambulance dispute which has left 25 services with accident and emergency cover only remained deadlocked last night as unions warned that it would escalate if there is no breakthrough by thursday
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:56.795
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt several workingclass husbands were chronically ill or had already died from accidents or illnesses directly resulting from their work two had been miners and four others had become clinically depressed following redundancy
# ::tok several workingclass husbands were chronically ill or had already died from accidents or illnesses directly resulting from their work two had been miners and four others had become clinically depressed following redundancy
# ::alignments 29-30|0.2.1.0.1.0.1 27-28|0.2.1.0.1.0 25-26|0.2.1.0.1.0.0 24-25|0.2.1.1 23-24|0.2.1.0.1 22-23|0.2.1.0.0+0.2.1.0 19-20|0.2.1.0.0.0 15-16|0 14-15|0.1 13-14|0.0.1 12-13|0.0 11-12|0.0.0 9-10|0.2 8-9|0.2.3 6-7|0.2.2 5-6|0.2.1.2 4-5|0.2.1.2.0 2-3|0.2.1.3+0.2.1 0-1|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:57.135
# ::node	0	result-01	15-16
# ::node	0.0	or	12-13
# ::node	0.0.0	accident	11-12
# ::node	0.0.1	illness	13-14
# ::node	0.1	direct	14-15
# ::node	0.2	die-01	9-10
# ::node	0.2.0	several	0-1
# ::node	0.2.1	have-rel-role-91	2-3
# ::node	0.2.1.0	person	22-23
# ::node	0.2.1.0.0	mine-01	22-23
# ::node	0.2.1.0.0.0	2	19-20
# ::node	0.2.1.0.1	and	23-24
# ::node	0.2.1.0.1.0	become-01	27-28
# ::node	0.2.1.0.1.0.0	other	25-26
# ::node	0.2.1.0.1.0.1	depress-01	29-30
# ::node	0.2.1.1	4	24-25
# ::node	0.2.1.2	ill-41	5-6
# ::node	0.2.1.2.0	chronic	4-5
# ::node	0.2.1.3	husband	2-3
# ::node	0.2.2	or	6-7
# ::node	0.2.3	already	8-9
# ::root	0	result-01
# ::edge	and	op1	person	0.2.1.0.1	0.2.1.0	
# ::edge	and	op2	become-01	0.2.1.0.1	0.2.1.0.1.0	
# ::edge	become-01	ARG1	other	0.2.1.0.1.0	0.2.1.0.1.0.0	
# ::edge	become-01	ARG2	depress-01	0.2.1.0.1.0	0.2.1.0.1.0.1	
# ::edge	die-01	ARG0	several	0.2	0.2.0	
# ::edge	die-01	ARG1	have-rel-role-91	0.2	0.2.1	
# ::edge	die-01	manner	result-01	0.2	0	
# ::edge	die-01	time	already	0.2	0.2.3	
# ::edge	have-rel-role-91	ARG0	person	0.2.1	0.2.1.0	
# ::edge	have-rel-role-91	ARG1	4	0.2.1	0.2.1.1	
# ::edge	have-rel-role-91	ARG2	husband	0.2.1	0.2.1.3	
# ::edge	ill-41	ARG1	have-rel-role-91	0.2.1.2	0.2.1	
# ::edge	ill-41	mod	chronic	0.2.1.2	0.2.1.2.0	
# ::edge	mine-01	ARG0	person	0.2.1.0.0	0.2.1.0	
# ::edge	mine-01	ARG1	2	0.2.1.0.0	0.2.1.0.0.0	
# ::edge	or	op1	accident	0.0	0.0.0	
# ::edge	or	op1	die-01	0.2.2	0.2	
# ::edge	or	op2	illness	0.0	0.0.1	
# ::edge	result-01	ARG0	or	0	0.0	
# ::edge	result-01	manner	direct	0	0.1	
(r / result-01 
      :ARG0 (o2 / or 
            :op1 (a2 / accident) 
            :op2 (i / illness)) 
      :manner (d2 / direct) 
      :manner-of (d3 / die-01 
            :ARG0 (s / several) 
            :ARG1 (h / have-rel-role-91 
                  :ARG0 (p / person 
                        :ARG0-of (m / mine-01 
                              :ARG1 2) 
                        :op-of (a / and 
                              :op1 (b / become-01 
                                    :ARG1 (o / other) 
                                    :ARG2 (d / depress-01)))) 
                  :ARG1 4 
                  :ARG1-of (i2 / ill-41 
                        :mod (c / chronic)) 
                  :ARG2 (h2 / husband)) 
            :op-of (o3 / or) 
            :time (a3 / already)))

# ::snt emile verhaeren the belgian poet who had vividly chronicled the impact of the railways on the countryside was killed in an accident at rouen station in 1916
# ::tok emile verhaeren the belgian poet who had vividly chronicled the impact of the railways on the countryside was killed in an accident at rouen station in 1916
# ::alignments 26-27|0.0.1.1.0+0.0.1.1 24-25|0.0.1.0.0 21-22|0.0.1.0 18-19|0.0.1 16-17|0.0.0 13-14|0 10-11|0.0 4-5|0.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:57.212
# ::node	0	railway	13-14
# ::node	0.0	impact-01	10-11
# ::node	0.0.0	countryside	16-17
# ::node	0.0.1	kill-01	18-19
# ::node	0.0.1.0	accident	21-22
# ::node	0.0.1.0.0	station	24-25
# ::node	0.0.1.0.0.0	poet	4-5
# ::node	0.0.1.1	date-entity	26-27
# ::node	0.0.1.1.0	1916	26-27
# ::root	0	railway
(r / railway 
      :ARG0-of (i / impact-01 
            :ARG1 (c / countryside) 
            :ARG1-of (k / kill-01 
                  :location (a / accident 
                        :location (s / station 
                              :poss (p / poet))) 
                  :time (d / date-entity 
                        :year 1916))))

# ::snt recording a verdict that mrs winship died as the result of an accident the oxford coroner mr nicholas gardiner said mrs causer might not have seen the hyundai because of another vehicle turning into the wytham junction
# ::tok recording a verdict that mrs winship died as the result of an accident the oxford coroner mr nicholas gardiner said mrs causer might not have seen the hyundai because of another vehicle turning into the wytham junction
# ::alignments 32-33|0.0.0 31-32|0.0 30-31|0.1.1.0.0.0.0 28-29|0 25-26|0.1 19-20|0.1.2 15-16|0.1.0 12-13|0.1.1.0.0.0.1 9-10|0.1.1.0.0.0 6-7|0.1.1.0.0 2-3|0.1.1.0 0-1|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:57.513
# ::node	0	cause-01	28-29
# ::node	0.0	vehicle	31-32
# ::node	0.0.0	turn-02	32-33
# ::node	0.1	see-01	25-26
# ::node	0.1.0	coroner	15-16
# ::node	0.1.1	record-01	0-1
# ::node	0.1.1.0	verdict	2-3
# ::node	0.1.1.0.0	die-01	6-7
# ::node	0.1.1.0.0.0	result-01	9-10
# ::node	0.1.1.0.0.0.0	another	30-31
# ::node	0.1.1.0.0.0.1	accident	12-13
# ::node	0.1.2	say-01	19-20
# ::root	0	cause-01
# ::edge	cause-01	ARG0	vehicle	0	0.0	
# ::edge	cause-01	ARG1	see-01	0	0.1	
# ::edge	die-01	ARG1	verdict	0.1.1.0.0	0.1.1.0	
# ::edge	record-01	ARG1	verdict	0.1.1	0.1.1.0	
# ::edge	result-01	ARG0	another	0.1.1.0.0.0	0.1.1.0.0.0.0	
# ::edge	result-01	ARG1	accident	0.1.1.0.0.0	0.1.1.0.0.0.1	
# ::edge	result-01	ARG2	die-01	0.1.1.0.0.0	0.1.1.0.0	
# ::edge	say-01	ARG1	see-01	0.1.2	0.1	
# ::edge	see-01	ARG0	coroner	0.1	0.1.0	
# ::edge	see-01	ARG1	record-01	0.1	0.1.1	
# ::edge	turn-02	ARG1	vehicle	0.0.0	0.0	
(c / cause-01 
      :ARG0 (v / vehicle 
            :ARG1-of (t / turn-02)) 
      :ARG1 (s / see-01 
            :ARG0 (c2 / coroner) 
            :ARG1 (r2 / record-01 
                  :ARG1 (v2 / verdict 
                        :ARG1-of (d / die-01 
                              :ARG2-of (r / result-01 
                                    :ARG0 (a / another) 
                                    :ARG1 (a2 / accident))))) 
            :ARG1-of (s2 / say-01)))

# ::snt the fact is the councils own figures show the accident rate to be almost negligible at the tesco end
# ::tok the fact is the councils own figures show the accident rate to be almost negligible at the tesco end
# ::alignments 14-15|0 13-14|0.1 10-11|0.2 9-10|0.2.0 7-8|0.0 6-7|0.0.0 4-5|0.0.1 1-2|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:57.627
# ::node	0	negligible	14-15
# ::node	0.0	show-01	7-8
# ::node	0.0.0	figure	6-7
# ::node	0.0.1	council	4-5
# ::node	0.0.1.0	fact	1-2
# ::node	0.1	almost	13-14
# ::node	0.2	rate	10-11
# ::node	0.2.0	accident	9-10
# ::root	0	negligible
# ::edge	council	domain	fact	0.0.1	0.0.1.0	
# ::edge	negligible	degree	almost	0	0.1	
# ::edge	negligible	domain	rate	0	0.2	
# ::edge	rate	mod	accident	0.2	0.2.0	
# ::edge	show-01	ARG0	figure	0.0	0.0.0	
# ::edge	show-01	ARG1	negligible	0.0	0	
# ::edge	show-01	time	council	0.0	0.0.1	
(n / negligible 
      :ARG1-of (s / show-01 
            :ARG0 (f / figure) 
            :time (c / council 
                  :domain (f2 / fact))) 
      :degree (a / almost) 
      :domain (r / rate 
            :mod (a2 / accident)))

# ::snt a study of the human factor in accidents in nuclear installations is also being carried out by the committee
# ::tok a study of the human factor in accidents in nuclear installations is also being carried out by the committee
# ::alignments 18-19|0.2 12-13|0.0.1 10-11|0 9-10|0.1 7-8|0.0.0.0 5-6|0.0.0 4-5|0.0.0.1 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:57.666
# ::node	0	installation	10-11
# ::node	0.0	study-01	1-2
# ::node	0.0.0	factor	5-6
# ::node	0.0.0.0	accident	7-8
# ::node	0.0.0.1	human	4-5
# ::node	0.0.1	also	12-13
# ::node	0.1	nucleus	9-10
# ::node	0.2	committee	18-19
# ::root	0	installation
# ::edge	factor	mod	accident	0.0.0	0.0.0.0	
# ::edge	factor	mod	human	0.0.0	0.0.0.1	
# ::edge	installation	mod	committee	0	0.2	
# ::edge	installation	mod	nucleus	0	0.1	
# ::edge	study-01	ARG0	factor	0.0	0.0.0	
# ::edge	study-01	ARG2	installation	0.0	0	
# ::edge	study-01	degree	also	0.0	0.0.1	
(i / installation 
      :ARG2-of (s / study-01 
            :ARG0 (f / factor 
                  :mod (a2 / accident) 
                  :mod (h / human)) 
            :degree (a / also)) 
      :mod (n / nucleus) 
      :mod (c / committee))

# ::snt a programme designed to improve the skidresistance of britains roads is cutting wetroad accidents by up to 50 per cent in some places says the transport and road research laboratory
# ::tok a programme designed to improve the skidresistance of britains roads is cutting wetroad accidents by up to 50 per cent in some places says the transport and road research laboratory
# ::alignments 29-30|0.1.1 28-29|0.1.1.0 27-28|0.1.1.0.0 26-27|0.1 25-26|0.1.0 23-24|0 22-23|0.0 21-22|0.0.0 19-20|0.1.2.0+0.1.2 17-18|0.1.0.0.0.0 13-14|0.1.0.0.0.1.0 9-10|0.1.0.1 4-5|0.1.0.0.0.1 2-3|0.1.0.0.0 1-2|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:57.820
# ::node	0	say-01	23-24
# ::node	0.0	place	22-23
# ::node	0.0.0	some	21-22
# ::node	0.1	and	26-27
# ::node	0.1.0	transport-01	25-26
# ::node	0.1.0.0	program	1-2
# ::node	0.1.0.0.0	design-01	2-3
# ::node	0.1.0.0.0.0	50	17-18
# ::node	0.1.0.0.0.1	improve-01	4-5
# ::node	0.1.0.0.0.1.0	accident	13-14
# ::node	0.1.0.1	road	9-10
# ::node	0.1.1	laboratory	29-30
# ::node	0.1.1.0	research-01	28-29
# ::node	0.1.1.0.0	road	27-28
# ::node	0.1.2	monetary-quantity	19-20
# ::node	0.1.2.0	cent	19-20
# ::root	0	say-01
# ::edge	and	op1	transport-01	0.1	0.1.0	
# ::edge	and	op2	laboratory	0.1	0.1.1	
# ::edge	design-01	ARG0	50	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	design-01	ARG1	program	0.1.0.0.0	0.1.0.0	
# ::edge	design-01	ARG3	improve-01	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	improve-01	ARG1	accident	0.1.0.0.0.1	0.1.0.0.0.1.0	
# ::edge	laboratory	mod	research-01	0.1.1	0.1.1.0	
# ::edge	monetary-quantity	topic	and	0.1.2	0.1	
# ::edge	monetary-quantity	unit	cent	0.1.2	0.1.2.0	
# ::edge	place	mod	some	0.0	0.0.0	
# ::edge	research-01	ARG1	road	0.1.1.0	0.1.1.0.0	
# ::edge	say-01	ARG0	place	0	0.0	
# ::edge	say-01	ARG1	and	0	0.1	
# ::edge	transport-01	ARG0	program	0.1.0	0.1.0.0	
# ::edge	transport-01	ARG1	road	0.1.0	0.1.0.1	
(s / say-01 
      :ARG0 (p / place 
            :mod (s2 / some)) 
      :ARG1 (a / and 
            :op1 (t / transport-01 
                  :ARG0 (p2 / program 
                        :ARG1-of (d / design-01 
                              :ARG0 50 
                              :ARG3 (i / improve-01 
                                    :ARG1 (a2 / accident)))) 
                  :ARG1 (r3 / road)) 
            :op2 (l / laboratory 
                  :mod (r / research-01 
                        :ARG1 (r2 / road))) 
            :topic-of (m / monetary-quantity 
                  :unit (c / cent))))

# ::snt i thought  she was really very nice and my opinion was formed from that  one meeting with her by pure accident
# ::tok i thought she was really very nice and my opinion was formed from that one meeting with her by pure accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:57.821
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt   at the time security officials were told that the key task in 1987 would be the eradication of torture to extract confessions illegal detention dereliction of duty by police officers and accidents caused by negligence
# ::tok at the time security officials were told that the key task in 1987 would be the eradication of torture to extract confessions illegal detention dereliction of duty by police officers and accidents caused by negligence
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:57.822
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the underwriter was concerned about numerous claims arising from a single accident dash
# ::tok the underwriter was concerned about numerous claims arising from a single accident dash
# ::alignments 11-12|0.1.0 10-11|0.1 6-7|0.0 5-6|0.0.0 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:57.845
# ::node	0	concern-01	3-4
# ::node	0.0	claim-01	6-7
# ::node	0.0.0	numerous	5-6
# ::node	0.1	single	10-11
# ::node	0.1.0	accident	11-12
# ::root	0	concern-01
# ::edge	accident	mod	single	0.1.0	0.1	
# ::edge	claim-01	quant	numerous	0.0	0.0.0	
# ::edge	concern-01	ARG0	claim-01	0	0.0	
# ::edge	concern-01	ARG1	single	0	0.1	
(c2 / concern-01 
      :ARG0 (c / claim-01 
            :quant (n / numerous)) 
      :ARG1 (s / single 
            :mod-of (a / accident)))

# ::snt and he said shortly before the accident he saw the sierra swerve into the side of the road before it hit a toyota celica being driven by mr stanley morse of shillingford court shillingford who was driving in the opposite direction
# ::tok and he said shortly before the accident he saw the sierra swerve into the side of the road before it hit a toyota celica being driven by mr stanley morse of shillingford court shillingford who was driving in the opposite direction
# ::alignments 40-41|0.3.0.0.0.0.0.0.0.0.1 39-40|0.3.0.0.0.0.0.0.0.0.1.0 36-37|0.3.0.0.0.0.0.0.0.0 32-33|0.3.0.0.0.0.0.0.0.0.0 25-26|0.3.0.0.0.0.0 20-21|0.3.0.0.0.0 19-20|0.3.0.0.0.0.1 18-19|0.3.0.0.0.0.2 17-18|0.3.0.0.0.0.0.0 14-15|0.3.0.0.0.0.0.0.0 8-9|0.3.0.0 7-8|0.3.0.0.0 6-7|0.3.0 4-5|0.3 3-4|0.2 2-3|0 1-2|0.0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:58.477
# ::node	0	say-01	2-3
# ::node	0.0	he	1-2
# ::node	0.1	and	0-1
# ::node	0.2	short	3-4
# ::node	0.3	before	4-5
# ::node	0.3.0	accident	6-7
# ::node	0.3.0.0	see-01	8-9
# ::node	0.3.0.0.0	he	7-8
# ::node	0.3.0.0.0.0	hit-01	20-21
# ::node	0.3.0.0.0.0.0	drive-02	25-26
# ::node	0.3.0.0.0.0.0.0	road	17-18
# ::node	0.3.0.0.0.0.0.0.0	side	14-15
# ::node	0.3.0.0.0.0.0.0.0.0	drive-01	36-37
# ::node	0.3.0.0.0.0.0.0.0.0.0	court	32-33
# ::node	0.3.0.0.0.0.0.0.0.0.1	direction	40-41
# ::node	0.3.0.0.0.0.0.0.0.0.1.0	opposite-41	39-40
# ::node	0.3.0.0.0.0.1	it	19-20
# ::node	0.3.0.0.0.0.2	before	18-19
# ::root	0	say-01
# ::edge	before	op1	accident	0.3	0.3.0	
# ::edge	before	op1	hit-01	0.3.0.0.0.0.2	0.3.0.0.0.0	
# ::edge	drive-01	ARG0	court	0.3.0.0.0.0.0.0.0.0	0.3.0.0.0.0.0.0.0.0.0	
# ::edge	drive-01	ARG1	side	0.3.0.0.0.0.0.0.0.0	0.3.0.0.0.0.0.0.0	
# ::edge	drive-01	location	direction	0.3.0.0.0.0.0.0.0.0	0.3.0.0.0.0.0.0.0.0.1	
# ::edge	drive-02	ARG1	road	0.3.0.0.0.0.0	0.3.0.0.0.0.0.0	
# ::edge	hit-01	ARG0	he	0.3.0.0.0.0	0.3.0.0.0	
# ::edge	hit-01	ARG1	drive-02	0.3.0.0.0.0	0.3.0.0.0.0.0	
# ::edge	hit-01	ARG2	it	0.3.0.0.0.0	0.3.0.0.0.0.1	
# ::edge	opposite-41	ARG1	direction	0.3.0.0.0.0.0.0.0.0.1.0	0.3.0.0.0.0.0.0.0.0.1	
# ::edge	road	part	side	0.3.0.0.0.0.0.0	0.3.0.0.0.0.0.0.0	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	and	0	0.1	
# ::edge	say-01	manner	short	0	0.2	
# ::edge	say-01	time	before	0	0.3	
# ::edge	see-01	ARG0	he	0.3.0.0	0.3.0.0.0	
# ::edge	see-01	ARG1	accident	0.3.0.0	0.3.0	
(s4 / say-01 
      :ARG0 (h3 / he) 
      :ARG1 (a2 / and) 
      :manner (s3 / short) 
      :time (b2 / before 
            :op1 (a / accident 
                  :ARG1-of (s2 / see-01 
                        :ARG0 (h2 / he 
                              :ARG0-of (h / hit-01 
                                    :ARG1 (d3 / drive-02 
                                          :ARG1 (r / road 
                                                :part (s / side 
                                                      :ARG1-of (d2 / drive-01 
                                                            :ARG0 (c / court) 
                                                            :location (d / direction 
                                                                  :ARG1-of (o / opposite-41)))))) 
                                    :ARG2 (i / it) 
                                    :op-of (b / before)))))))

# ::snt michael regarded his title as as a peculiar longforgotten accident dash
# ::tok michael regarded his title as as a peculiar longforgotten accident dash
# ::alignments 9-10|0.0 7-8|0 3-4|0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:58.499
# ::node	0	peculiar-41	7-8
# ::node	0.0	accident	9-10
# ::node	0.0.0	title	3-4
# ::node	0.0.0.0	regard-01	1-2
# ::root	0	peculiar-41
# ::edge	peculiar-41	ARG1	accident	0	0.0	
# ::edge	regard-01	ARG1	title	0.0.0.0	0.0.0	
# ::edge	title	mod	accident	0.0.0	0.0	
(p / peculiar-41 
      :ARG1 (a / accident 
            :mod-of (t / title 
                  :ARG1-of (r / regard-01))))

# ::snt attempts could also be made to limit the increases to the widows of those killed in action thus making ineligible the widows of servicemen killed in accidents on noncombat duty
# ::tok attempts could also be made to limit the increases to the widows of those killed in action thus making ineligible the widows of servicemen killed in accidents on noncombat duty
# ::alignments 29-30|0.0.0.0.0.1.0.0 26-27|0.0.0.0.0.1.0 24-25|0.0.0.0.0.1 16-17|0.0.0.0.0 14-15|0.0.0.0.0.0 8-9|0.0.0.0 6-7|0.0.0 2-3|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:58.616
# ::node	0	possible	1-2
# ::node	0.0	attempt-01	0-1
# ::node	0.0.0	limit-01	6-7
# ::node	0.0.0.0	increase-01	8-9
# ::node	0.0.0.0.0	action	16-17
# ::node	0.0.0.0.0.0	kill-01	14-15
# ::node	0.0.0.0.0.1	kill-01	24-25
# ::node	0.0.0.0.0.1.0	accident	26-27
# ::node	0.0.0.0.0.1.0.0	duty	29-30
# ::node	0.1	also	2-3
# ::root	0	possible
# ::edge	accident	mod	duty	0.0.0.0.0.1.0	0.0.0.0.0.1.0.0	
# ::edge	attempt-01	ARG1	possible	0.0	0	
# ::edge	increase-01	ARG1	action	0.0.0.0	0.0.0.0.0	
# ::edge	kill-01	ARG0	action	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	kill-01	ARG0	action	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	kill-01	location	accident	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	limit-01	ARG0	attempt-01	0.0.0	0.0	
# ::edge	limit-01	ARG1	increase-01	0.0.0	0.0.0.0	
# ::edge	possible	mod	also	0	0.1	
(p / possible 
      :ARG1-of (a4 / attempt-01 
            :ARG0-of (l / limit-01 
                  :ARG1 (i / increase-01 
                        :ARG1 (a2 / action 
                              :ARG0-of (k2 / kill-01) 
                              :ARG0-of (k / kill-01 
                                    :location (a / accident 
                                          :mod (d / duty))))))) 
      :mod (a3 / also))

# ::snt well on the road to recovery from a terrible accident in 1985
# ::tok well on the road to recovery from a terrible accident in 1985
# ::alignments 11-12|0.1.1.0+0.1.1 9-10|0.1 8-9|0.1.0 5-6|0 3-4|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:58.640
# ::node	0	recover-01	5-6
# ::node	0.0	road	3-4
# ::node	0.0.0	well	0-1
# ::node	0.1	accident	9-10
# ::node	0.1.0	terrible	8-9
# ::node	0.1.1	date-entity	11-12
# ::node	0.1.1.0	1985	11-12
# ::root	0	recover-01
# ::edge	accident	mod	terrible	0.1	0.1.0	
# ::edge	accident	time	date-entity	0.1	0.1.1	
# ::edge	date-entity	year	1985	0.1.1	0.1.1.0	
# ::edge	recover-01	ARG0	road	0	0.0	
# ::edge	recover-01	ARG1	accident	0	0.1	
# ::edge	road	quant	well	0.0	0.0.0	
(r / recover-01 
      :ARG0 (r2 / road 
            :quant (w / well)) 
      :ARG1 (a / accident 
            :mod (t / terrible) 
            :time (d / date-entity 
                  :year 1985)))

# ::snt a period normally marked by an increase in accidents
# ::tok a period normally marked by an increase in accidents
# ::alignments 8-9|0.1.0 6-7|0.1 3-4|0 2-3|0.2 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:58.683
# ::node	0	mark-01	3-4
# ::node	0.0	period	1-2
# ::node	0.1	increase-01	6-7
# ::node	0.1.0	accident	8-9
# ::node	0.2	normal	2-3
# ::root	0	mark-01
# ::edge	increase-01	ARG1	accident	0.1	0.1.0	
# ::edge	mark-01	ARG0	period	0	0.0	
# ::edge	mark-01	ARG1	increase-01	0	0.1	
# ::edge	mark-01	mod	normal	0	0.2	
(m / mark-01 
      :ARG0 (p / period) 
      :ARG1 (i / increase-01 
            :ARG1 (a / accident)) 
      :mod (n / normal))

# ::snt councillors fearing accidents have recommended that no golf signs be put in some didcot parks
# ::tok councillors fearing accidents have recommended that no golf signs be put in some didcot parks
# ::alignments 12-13|0.0.0 8-9|0.1 7-8|0.1.0 6-7|0.0.0.0 4-5|0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:58.723
# ::node	0	recommend-01	4-5
# ::node	0.0	accident	2-3
# ::node	0.0.0	some	12-13
# ::node	0.0.0.0	-	6-7
# ::node	0.1	sign	8-9
# ::node	0.1.0	golf	7-8
# ::root	0	recommend-01
# ::edge	accident	poss	some	0.0	0.0.0	
# ::edge	recommend-01	ARG0	accident	0	0.0	
# ::edge	recommend-01	ARG1	sign	0	0.1	
# ::edge	sign	mod	golf	0.1	0.1.0	
# ::edge	some	op1	-	0.0.0	0.0.0.0	
(r / recommend-01 
      :ARG0 (a / accident 
            :poss (s / some 
                  :op1 (- / -))) 
      :ARG1 (s2 / sign 
            :mod (g / golf)))

# ::snt it was hailed as the thirdgeneration space station when it was launched a few weeks after the challenger accident in 1986
# ::tok it was hailed as the thirdgeneration space station when it was launched a few weeks after the challenger accident in 1986
# ::alignments 20-21|0.1.1.0.0.0+0.1.1.0.0 18-19|0.1.1.0 15-16|0.1.1 14-15|0.1.1.1.1+0.1.1.1 13-14|0.1.1.1.0 11-12|0.1 9-10|0.1.0 7-8|0.2 6-7|0.2.0 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:05:58.879
# ::node	0	hail-02	2-3
# ::node	0.0	it	0-1
# ::node	0.1	launch-01	11-12
# ::node	0.1.0	it	9-10
# ::node	0.1.1	after	15-16
# ::node	0.1.1.0	accident	18-19
# ::node	0.1.1.0.0	date-entity	20-21
# ::node	0.1.1.0.0.0	1986	20-21
# ::node	0.1.1.1	temporal-quantity	14-15
# ::node	0.1.1.1.0	few	13-14
# ::node	0.1.1.1.1	week	14-15
# ::node	0.2	station	7-8
# ::node	0.2.0	space	6-7
# ::root	0	hail-02
# ::edge	accident	time	date-entity	0.1.1.0	0.1.1.0.0	
# ::edge	after	op1	accident	0.1.1	0.1.1.0	
# ::edge	after	quant	temporal-quantity	0.1.1	0.1.1.1	
# ::edge	date-entity	year	1986	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	few	op1	temporal-quantity	0.1.1.1.0	0.1.1.1	
# ::edge	hail-02	ARG1	it	0	0.0	
# ::edge	hail-02	condition	launch-01	0	0.1	
# ::edge	hail-02	location	station	0	0.2	
# ::edge	launch-01	ARG1	it	0.1	0.1.0	
# ::edge	launch-01	time	after	0.1	0.1.1	
# ::edge	station	location	space	0.2	0.2.0	
# ::edge	temporal-quantity	unit	week	0.1.1.1	0.1.1.1.1	
(h / hail-02 
      :ARG1 (i2 / it) 
      :condition (l / launch-01 
            :ARG1 (i / it) 
            :time (a2 / after 
                  :op1 (a / accident 
                        :time (d / date-entity 
                              :year 1986)) 
                  :quant (t / temporal-quantity 
                        :op-of (f / few) 
                        :unit (w / week)))) 
      :location (s / station 
            :location (s2 / space)))

# ::snt yet not only had industry long ceased to be regarded as in need of such a subsidy but there was now a broad consensus that compensation of accident victims was a desirable social goal that could be accomplished by lossspreading through the conduit of liability insurance and ultimately passing the cost to the consumer public, from two of the three important accident areas dash, the plaintiffs contributory fault had been virtually expelled so that the defence in any event played only a lingering role in road and other residuary accidents
# ::tok yet not only had industry long ceased to be regarded as in need of such a subsidy but there was now a broad consensus that compensation of accident victims was a desirable social goal that could be accomplished by lossspreading through the conduit of liability insurance and ultimately passing the cost to the consumer public , from two of the three important accident areas dash , the plaintiffs contributory fault had been virtually expelled so that the defence in any event played only a lingering role in road and other residuary accidents
# ::alignments 91-92|0.1.3.5.0 89-90|0.1.3.5.0.0 88-89|0.1.3.5.2 87-88|0.1.3.5.2.1 85-86|0.1.3.5 82-83|0.1.3.5.1 80-81|0.1.3.5.2.0.0 79-80|0.1.3.5.2.0.0.0 77-78|0.1.3.5.2.0 74-75|0.1.1 73-74|0.1 72-73|0.1.2 69-70|0.1.0 63-64|0.1.3.0.1.0.0.0.0 62-63|0.1.3.0.1.0.0.0.0.0 61-62|0.1.3.0.1.0.0.0.1.0.0 60-61|0.1.3.0.0 57-58|0.1.0.0 54-55|0.1.3.0.1.0.0.0.1 53-54|0.1.3.0.1.0.0.0 50-51|0.1.3.0.1.0.0.0.1.0 47-48|0.1.3.4 46-47|0.1.3 45-46|0.1.3.3 44-45|0.1.3.3.0 42-43|0.1.3.3.1 37-38|0.1.3.0 35-36|0.1.3.0.2 33-34|0.1.3.0.1 32-33|0.1.3.0.1.0.0 31-32|0.1.3.0.1.0 28-29|0.0.1.0.0 27-28|0.0.1.0.0.0 25-26|0.0.1.0 23-24|0.1.3.2 22-23|0.1.3.1 20-21|0.1.3.6 17-18|0 16-17|0.0.2.1.0 14-15|0.0.2.1.0.0 12-13|0.0.2.1 9-10|0.0.2 6-7|0.0 4-5|0.0.1 2-3|0.0.2.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:01.719
# ::node	0	contrast-01	17-18
# ::node	0.0	cease-01	6-7
# ::node	0.0.0	yet	0-1
# ::node	0.0.1	industry	4-5
# ::node	0.0.1.0	compensate-01	25-26
# ::node	0.0.1.0.0	victim	28-29
# ::node	0.0.1.0.0.0	accident	27-28
# ::node	0.0.2	regard-01	9-10
# ::node	0.0.2.0	only	2-3
# ::node	0.0.2.1	need-01	12-13
# ::node	0.0.2.1.0	subsidy	16-17
# ::node	0.0.2.1.0.0	such	14-15
# ::node	0.1	expel-01	73-74
# ::node	0.1.0	fault-01	69-70
# ::node	0.1.0.0	2	57-58
# ::node	0.1.1	so	74-75
# ::node	0.1.2	virtual	72-73
# ::node	0.1.3	and	46-47
# ::node	0.1.3.0	accomplish-01	37-38
# ::node	0.1.3.0.0	3	60-61
# ::node	0.1.3.0.1	goal	33-34
# ::node	0.1.3.0.1.0	desire-01	31-32
# ::node	0.1.3.0.1.0.0	society	32-33
# ::node	0.1.3.0.1.0.0.0	consume-01	53-54
# ::node	0.1.3.0.1.0.0.0.0	area	63-64
# ::node	0.1.3.0.1.0.0.0.0.0	accident	62-63
# ::node	0.1.3.0.1.0.0.0.1	public	54-55
# ::node	0.1.3.0.1.0.0.0.1.0	cost-01	50-51
# ::node	0.1.3.0.1.0.0.0.1.0.0	important	61-62
# ::node	0.1.3.0.2	possible	35-36
# ::node	0.1.3.1	broad	22-23
# ::node	0.1.3.2	consensus	23-24
# ::node	0.1.3.3	insure-02	45-46
# ::node	0.1.3.3.0	liability	44-45
# ::node	0.1.3.3.1	conduit	42-43
# ::node	0.1.3.4	ultimate	47-48
# ::node	0.1.3.5	role	85-86
# ::node	0.1.3.5.0	accident	91-92
# ::node	0.1.3.5.0.0	other	89-90
# ::node	0.1.3.5.1	only	82-83
# ::node	0.1.3.5.2	and	88-89
# ::node	0.1.3.5.2.0	defend-01	77-78
# ::node	0.1.3.5.2.0.0	event	80-81
# ::node	0.1.3.5.2.0.0.0	any	79-80
# ::node	0.1.3.5.2.1	road	87-88
# ::node	0.1.3.6	now	20-21
# ::root	0	contrast-01
# ::edge	accident	mod	other	0.1.3.5.0	0.1.3.5.0.0	
# ::edge	accomplish-01	ARG0	3	0.1.3.0	0.1.3.0.0	
# ::edge	accomplish-01	ARG1	goal	0.1.3.0	0.1.3.0.1	
# ::edge	accomplish-01	ARG2	and	0.1.3.0	0.1.3	
# ::edge	and	op1	broad	0.1.3	0.1.3.1	
# ::edge	and	op1	role	0.1.3.5.2	0.1.3.5	
# ::edge	and	op2	consensus	0.1.3	0.1.3.2	
# ::edge	and	op2	road	0.1.3.5.2	0.1.3.5.2.1	
# ::edge	and	op3	insure-02	0.1.3	0.1.3.3	
# ::edge	and	op4	ultimate	0.1.3	0.1.3.4	
# ::edge	and	op5	expel-01	0.1.3	0.1	
# ::edge	and	op6	role	0.1.3	0.1.3.5	
# ::edge	and	time	now	0.1.3	0.1.3.6	
# ::edge	area	mod	accident	0.1.3.0.1.0.0.0.0	0.1.3.0.1.0.0.0.0.0	
# ::edge	cease-01	ARG0	yet	0.0	0.0.0	
# ::edge	cease-01	ARG1	industry	0.0	0.0.1	
# ::edge	cease-01	ARG2	regard-01	0.0	0.0.2	
# ::edge	compensate-01	ARG0	industry	0.0.1.0	0.0.1	
# ::edge	compensate-01	ARG1	victim	0.0.1.0	0.0.1.0.0	
# ::edge	conduit	mod	insure-02	0.1.3.3.1	0.1.3.3	
# ::edge	consume-01	ARG0	society	0.1.3.0.1.0.0.0	0.1.3.0.1.0.0	
# ::edge	consume-01	ARG1	area	0.1.3.0.1.0.0.0	0.1.3.0.1.0.0.0.0	
# ::edge	contrast-01	ARG1	cease-01	0	0.0	
# ::edge	contrast-01	ARG2	expel-01	0	0.1	
# ::edge	cost-01	ARG0	important	0.1.3.0.1.0.0.0.1.0	0.1.3.0.1.0.0.0.1.0.0	
# ::edge	cost-01	ARG1	public	0.1.3.0.1.0.0.0.1.0	0.1.3.0.1.0.0.0.1	
# ::edge	defend-01	ARG0	and	0.1.3.5.2.0	0.1.3.5.2	
# ::edge	defend-01	ARG1	event	0.1.3.5.2.0	0.1.3.5.2.0.0	
# ::edge	desire-01	ARG0	society	0.1.3.0.1.0	0.1.3.0.1.0.0	
# ::edge	desire-01	ARG1	goal	0.1.3.0.1.0	0.1.3.0.1	
# ::edge	event	mod	any	0.1.3.5.2.0.0	0.1.3.5.2.0.0.0	
# ::edge	expel-01	ARG1	fault-01	0.1	0.1.0	
# ::edge	expel-01	concession	so	0.1	0.1.1	
# ::edge	expel-01	mod	virtual	0.1	0.1.2	
# ::edge	fault-01	ARG1	2	0.1.0	0.1.0.0	
# ::edge	insure-02	ARG1	liability	0.1.3.3	0.1.3.3.0	
# ::edge	need-01	ARG1	subsidy	0.0.2.1	0.0.2.1.0	
# ::edge	possible	domain	accomplish-01	0.1.3.0.2	0.1.3.0	
# ::edge	public	mod	consume-01	0.1.3.0.1.0.0.0.1	0.1.3.0.1.0.0.0	
# ::edge	regard-01	ARG1	only	0.0.2	0.0.2.0	
# ::edge	regard-01	ARG2	need-01	0.0.2	0.0.2.1	
# ::edge	role	mod	accident	0.1.3.5	0.1.3.5.0	
# ::edge	role	mod	only	0.1.3.5	0.1.3.5.1	
# ::edge	subsidy	mod	such	0.0.2.1.0	0.0.2.1.0.0	
# ::edge	victim	mod	accident	0.0.1.0.0	0.0.1.0.0.0	
(c6 / contrast-01 
      :ARG1 (c7 / cease-01 
            :ARG0 (y / yet) 
            :ARG1 (i3 / industry 
                  :ARG0-of (c4 / compensate-01 
                        :ARG1 (v2 / victim 
                              :mod (a8 / accident)))) 
            :ARG2 (r3 / regard-01 
                  :ARG1 (o3 / only) 
                  :ARG2 (n2 / need-01 
                        :ARG1 (s3 / subsidy 
                              :mod (s4 / such))))) 
      :ARG2 (e2 / expel-01 
            :ARG1 (f / fault-01 
                  :ARG1 2) 
            :concession (s / so) 
            :mod (v / virtual) 
            :op-of (a6 / and 
                  :ARG2-of (a7 / accomplish-01 
                        :ARG0 3 
                        :ARG1 (g / goal 
                              :ARG1-of (d2 / desire-01 
                                    :ARG0 (s2 / society 
                                          :ARG0-of (c / consume-01 
                                                :ARG1 (a4 / area 
                                                      :mod (a5 / accident)) 
                                                :mod-of (p / public 
                                                      :ARG1-of (c2 / cost-01 
                                                            :ARG0 (i / important))))))) 
                        :domain-of (p2 / possible)) 
                  :op1 (b / broad) 
                  :op2 (c5 / consensus) 
                  :op3 (i2 / insure-02 
                        :ARG1 (l / liability) 
                        :mod-of (c3 / conduit)) 
                  :op4 (u / ultimate) 
                  :op5 (r2 / role 
                        :mod (a / accident 
                              :mod (o / other)) 
                        :mod (o2 / only) 
                        :op-of (a2 / and 
                              :ARG0-of (d / defend-01 
                                    :ARG1 (e / event 
                                          :mod (a3 / any))) 
                              :op1 (r / road))) 
                  :time (n / now))))

# ::snt in it mr crosby also warns ambulance personnel that they would be liable to civil prosecution for damages from both patients and other members of the public if there is an accident, the most controversial point however stated that taking the vehicle without insurance and without the owners consent will conceivably be constructed as breaches of the criminal law especially if the ambulance becomes involved in an accident
# ::tok in it mr crosby also warns ambulance personnel that they would be liable to civil prosecution for damages from both patients and other members of the public if there is an accident , the most controversial point however stated that taking the vehicle without insurance and without the owners consent will conceivably be constructed as breaches of the criminal law especially if the ambulance becomes involved in an accident
# ::alignments 68-69|0.1.0.1.0.1.1 65-66|0.1.0.1.0.1 64-65|0.1.0.1.0 63-64|0.1.0.1.0.1.0 60-61|0.1.0.1.0.0 59-60|0.1.0.1 58-59|0.1.0.1.1 55-56|0.1.0 53-54|0.1 49-50|0.1.0.0 48-49|0.1.0.0.0.0+0.1.0.0.0 45-46|0.0 44-45|0.0.1 42-43|0.0.0 38-39|0 36-37|0.1.0.0.0.1.0.0.0.1 35-36|0.1.0.0.0.1.0.0.0 34-35|0.1.0.0.0.1.0.0.0.0 31-32|0.1.0.0.0.1.0.0 26-27|0.1.0.0.0.1.0 23-24|0.1.0.0.0.1.1+0.1.0.0.0.1 22-23|0.0.1.1 21-22|0.1.0.0.0.2.0.0 20-21|0.1.0.0.0.2.1+0.1.0.0.0.2 19-20|0.0.1.0 17-18|0.1.0.0.0.2.0.0.0 15-16|0.1.0.0.0.2.0 14-15|0.1.0.0.0.2.0.2 12-13|0.1.0.0.0.2.0.1 9-10|0.1.0.0.0.2.0.1.0 7-8|0.1.0.0.0.2.0.1.1.0 6-7|0.1.0.0.0.2.0.1.1.0.0 5-6|0.1.0.0.0.2.0.1.1 4-5|0.1.0.0.0.2.0.1.1.2 1-2|0.1.0.0.0.2.0.1.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:04.244
# ::node	0	state-01	38-39
# ::node	0.0	and	45-46
# ::node	0.0.0	vehicle	42-43
# ::node	0.0.1	insure-02	44-45
# ::node	0.0.1.0	both	19-20
# ::node	0.0.1.1	other	22-23
# ::node	0.1	construct-01	53-54
# ::node	0.1.0	breach-01	55-56
# ::node	0.1.0.0	consent-01	49-50
# ::node	0.1.0.0.0	person	48-49
# ::node	0.1.0.0.0.0	own-01	48-49
# ::node	0.1.0.0.0.1	have-org-role-91	23-24
# ::node	0.1.0.0.0.1.0	public	26-27
# ::node	0.1.0.0.0.1.0.0	accident	31-32
# ::node	0.1.0.0.0.1.0.0.0	controversy	35-36
# ::node	0.1.0.0.0.1.0.0.0.0	most	34-35
# ::node	0.1.0.0.0.1.0.0.0.1	point	36-37
# ::node	0.1.0.0.0.1.1	member	23-24
# ::node	0.1.0.0.0.2	have-rel-role-91	20-21
# ::node	0.1.0.0.0.2.0	prosecute-01	15-16
# ::node	0.1.0.0.0.2.0.0	and	21-22
# ::node	0.1.0.0.0.2.0.0.0	damage-01	17-18
# ::node	0.1.0.0.0.2.0.1	liable-41	12-13
# ::node	0.1.0.0.0.2.0.1.0	they	9-10
# ::node	0.1.0.0.0.2.0.1.1	warn-01	5-6
# ::node	0.1.0.0.0.2.0.1.1.0	personnel	7-8
# ::node	0.1.0.0.0.2.0.1.1.0.0	ambulance	6-7
# ::node	0.1.0.0.0.2.0.1.1.1	it	1-2
# ::node	0.1.0.0.0.2.0.1.1.2	also	4-5
# ::node	0.1.0.0.0.2.0.2	civil	14-15
# ::node	0.1.0.0.0.2.1	patient	20-21
# ::node	0.1.0.1	law	59-60
# ::node	0.1.0.1.0	become-01	64-65
# ::node	0.1.0.1.0.0	especially	60-61
# ::node	0.1.0.1.0.1	involve-01	65-66
# ::node	0.1.0.1.0.1.0	ambulance	63-64
# ::node	0.1.0.1.0.1.1	accident	68-69
# ::node	0.1.0.1.1	crime	58-59
# ::root	0	state-01
# ::edge	and	op1	damage-01	0.1.0.0.0.2.0.0	0.1.0.0.0.2.0.0.0	
# ::edge	and	op1	insure-02	0.0	0.0.1	
# ::edge	become-01	ARG0	law	0.1.0.1.0	0.1.0.1	
# ::edge	become-01	ARG1	especially	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	become-01	ARG2	involve-01	0.1.0.1.0	0.1.0.1.0.1	
# ::edge	breach-01	ARG0	consent-01	0.1.0	0.1.0.0	
# ::edge	breach-01	ARG1	law	0.1.0	0.1.0.1	
# ::edge	consent-01	ARG0	person	0.1.0.0	0.1.0.0.0	
# ::edge	construct-01	ARG1	breach-01	0.1	0.1.0	
# ::edge	controversy	degree	most	0.1.0.0.0.1.0.0.0	0.1.0.0.0.1.0.0.0.0	
# ::edge	controversy	topic	accident	0.1.0.0.0.1.0.0.0	0.1.0.0.0.1.0.0	
# ::edge	have-org-role-91	ARG0	person	0.1.0.0.0.1	0.1.0.0.0	
# ::edge	have-org-role-91	ARG1	public	0.1.0.0.0.1	0.1.0.0.0.1.0	
# ::edge	have-org-role-91	ARG2	member	0.1.0.0.0.1	0.1.0.0.0.1.1	
# ::edge	have-rel-role-91	ARG1	person	0.1.0.0.0.2	0.1.0.0.0	
# ::edge	have-rel-role-91	ARG2	patient	0.1.0.0.0.2	0.1.0.0.0.2.1	
# ::edge	insure-02	ARG0	both	0.0.1	0.0.1.0	
# ::edge	insure-02	ARG1	other	0.0.1	0.0.1.1	
# ::edge	involve-01	ARG1	ambulance	0.1.0.1.0.1	0.1.0.1.0.1.0	
# ::edge	involve-01	ARG2	accident	0.1.0.1.0.1	0.1.0.1.0.1.1	
# ::edge	law	mod	crime	0.1.0.1	0.1.0.1.1	
# ::edge	liable-41	ARG0	they	0.1.0.0.0.2.0.1	0.1.0.0.0.2.0.1.0	
# ::edge	liable-41	ARG1	prosecute-01	0.1.0.0.0.2.0.1	0.1.0.0.0.2.0	
# ::edge	own-01	ARG0	person	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	personnel	mod	ambulance	0.1.0.0.0.2.0.1.1.0	0.1.0.0.0.2.0.1.1.0.0	
# ::edge	point	mod	controversy	0.1.0.0.0.1.0.0.0.1	0.1.0.0.0.1.0.0.0	
# ::edge	prosecute-01	ARG0	and	0.1.0.0.0.2.0	0.1.0.0.0.2.0.0	
# ::edge	prosecute-01	ARG1	have-rel-role-91	0.1.0.0.0.2.0	0.1.0.0.0.2	
# ::edge	prosecute-01	mod	civil	0.1.0.0.0.2.0	0.1.0.0.0.2.0.2	
# ::edge	public	op1	accident	0.1.0.0.0.1.0	0.1.0.0.0.1.0.0	
# ::edge	state-01	ARG0	and	0	0.0	
# ::edge	state-01	ARG1	construct-01	0	0.1	
# ::edge	vehicle	location	and	0.0.0	0.0	
# ::edge	warn-01	ARG0	personnel	0.1.0.0.0.2.0.1.1	0.1.0.0.0.2.0.1.1.0	
# ::edge	warn-01	ARG1	liable-41	0.1.0.0.0.2.0.1.1	0.1.0.0.0.2.0.1	
# ::edge	warn-01	ARG2	it	0.1.0.0.0.2.0.1.1	0.1.0.0.0.2.0.1.1.1	
# ::edge	warn-01	mod	also	0.1.0.0.0.2.0.1.1	0.1.0.0.0.2.0.1.1.2	
(s / state-01 
      :ARG0 (a3 / and 
            :location-of (v / vehicle) 
            :op1 (i2 / insure-02 
                  :ARG0 (b3 / both) 
                  :ARG1 (o2 / other))) 
      :ARG1 (c2 / construct-01 
            :ARG1 (b2 / breach-01 
                  :ARG0 (c3 / consent-01 
                        :ARG0 (p / person 
                              :ARG0-of (o / own-01) 
                              :ARG0-of (h / have-org-role-91 
                                    :ARG1 (p3 / public 
                                          :op1 (a4 / accident 
                                                :topic-of (c4 / controversy 
                                                      :degree (m / most) 
                                                      :mod-of (p2 / point)))) 
                                    :ARG2 (m2 / member)) 
                              :ARG1-of (h2 / have-rel-role-91 
                                    :ARG1-of (p5 / prosecute-01 
                                          :ARG0 (a5 / and 
                                                :op1 (d / damage-01)) 
                                          :ARG1-of (l2 / liable-41 
                                                :ARG0 (t / they) 
                                                :ARG1-of (w / warn-01 
                                                      :ARG0 (p6 / personnel 
                                                            :mod (a6 / ambulance)) 
                                                      :ARG2 (i3 / it) 
                                                      :mod (a7 / also))) 
                                          :mod (c5 / civil)) 
                                    :ARG2 (p4 / patient)))) 
                  :ARG1 (l / law 
                        :ARG0-of (b / become-01 
                              :ARG1 (e / especially) 
                              :ARG2 (i / involve-01 
                                    :ARG1 (a2 / ambulance) 
                                    :ARG2 (a / accident))) 
                        :mod (c / crime)))))

# ::snt it was the 16yearold lincoln players first taste of a senior international tournament and both she and her opponent have had to overcome serious injuries bentley fractured her skull in a swimming pool accident three months ago potter 28 was playing her first match after damaging her back in a car crash eight months ago
# ::tok it was the 16yearold lincoln players first taste of a senior international tournament and both she and her opponent have had to overcome serious injuries bentley fractured her skull in a swimming pool accident three months ago potter 28 was playing her first match after damaging her back in a car crash eight months ago
# ::alignments 53-54|0.1.0.0.0.0.0.1+0.1.0.0.0.0.0 52-53|0.1.0.0.0.0.0.0 51-52|0.1.0.0.0.0.1.0 50-51|0.1.0.0.0.0.1.0.0 47-48|0.1.0.0.0.0.1 45-46|0.1.0.0.0.0 44-45|0.1.0.0.0.0.2 43-44|0.1.0.0.0.0.2.0.1 40-41|0.1.0.0.0.0.2.0 38-39|0.1.0.0.1.1.0 37-38|0.1.0.0.0.0.2.0.0 35-36|0.1.0.0.0.0.2.0.2.1+0.1.0.0.0.0.2.0.2 34-35|0.1.0.0.0.0.2.0.2.0 33-34|0.1.0.0.0.0.2.0.1.0 32-33|0.1.0.0.0.0.2.0.1.0.0 31-32|0.1.0.0.0.0.2.0.1.0.0.0 28-29|0.1.0.0.0.2 24-25|0.1.0.0.0 23-24|0.1.0.0.0.1 22-23|0.1.0.0.1.1 18-19|0.1.0+0.1.0.0 16-17|0.1.0.0.1 15-16|0.1.0.0.1.0 14-15|0.1 13-14|0 11-12|0.0 10-11|0.1.0.0.0.0.2.0.1.0.0.0.0 5-6|0.1.0.0.1.1.1.0+0.1.0.0.1.1.1 0-1|0.1.0.0.1.1.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:05.485
# ::node	0	and	13-14
# ::node	0.0	international	11-12
# ::node	0.1	both	14-15
# ::node	0.1.0	oppose-01	18-19
# ::node	0.1.0.0	person	18-19
# ::node	0.1.0.0.0	injure-01	24-25
# ::node	0.1.0.0.0.0	damage-01	45-46
# ::node	0.1.0.0.0.0.0	temporal-quantity	53-54
# ::node	0.1.0.0.0.0.0.0	8	52-53
# ::node	0.1.0.0.0.0.0.1	month	53-54
# ::node	0.1.0.0.0.0.1	back	47-48
# ::node	0.1.0.0.0.0.1.0	crash-01	51-52
# ::node	0.1.0.0.0.0.1.0.0	car	50-51
# ::node	0.1.0.0.0.0.2	after	44-45
# ::node	0.1.0.0.0.0.2.0	play-01	40-41
# ::node	0.1.0.0.0.0.2.0.0	potter-01	37-38
# ::node	0.1.0.0.0.0.2.0.1	match-01	43-44
# ::node	0.1.0.0.0.0.2.0.1.0	accident	33-34
# ::node	0.1.0.0.0.0.2.0.1.0.0	pool	32-33
# ::node	0.1.0.0.0.0.2.0.1.0.0.0	swim-01	31-32
# ::node	0.1.0.0.0.0.2.0.1.0.0.0.0	senior	10-11
# ::node	0.1.0.0.0.0.2.0.2	temporal-quantity	35-36
# ::node	0.1.0.0.0.0.2.0.2.0	3	34-35
# ::node	0.1.0.0.0.0.2.0.2.1	month	35-36
# ::node	0.1.0.0.0.1	serious	23-24
# ::node	0.1.0.0.0.2	skull	28-29
# ::node	0.1.0.0.1	and	16-17
# ::node	0.1.0.0.1.0	she	15-16
# ::node	0.1.0.0.1.1	overcome-01	22-23
# ::node	0.1.0.0.1.1.0	28	38-39
# ::node	0.1.0.0.1.1.1	person	5-6
# ::node	0.1.0.0.1.1.1.0	play-01	5-6
# ::node	0.1.0.0.1.1.1.1	it	0-1
# ::root	0	and
# ::edge	accident	location	pool	0.1.0.0.0.0.2.0.1.0	0.1.0.0.0.0.2.0.1.0.0	
# ::edge	after	op1	damage-01	0.1.0.0.0.0.2	0.1.0.0.0.0	
# ::edge	and	mod	international	0	0.0	
# ::edge	and	op1	both	0	0.1	
# ::edge	and	op1	she	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	and	op2	person	0.1.0.0.1	0.1.0.0	
# ::edge	and	op3	overcome-01	0.1.0.0.1	0.1.0.0.1.1	
# ::edge	back	prep-in	crash-01	0.1.0.0.0.0.1	0.1.0.0.0.0.1.0	
# ::edge	crash-01	ARG1	car	0.1.0.0.0.0.1.0	0.1.0.0.0.0.1.0.0	
# ::edge	damage-01	ARG0	temporal-quantity	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	damage-01	ARG1	injure-01	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	damage-01	direction	back	0.1.0.0.0.0	0.1.0.0.0.0.1	
# ::edge	injure-01	ARG1	person	0.1.0.0.0	0.1.0.0	
# ::edge	injure-01	mod	serious	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	match-01	ARG1	accident	0.1.0.0.0.0.2.0.1	0.1.0.0.0.0.2.0.1.0	
# ::edge	oppose-01	ARG0	person	0.1.0	0.1.0.0	
# ::edge	oppose-01	ARG1	both	0.1.0	0.1	
# ::edge	overcome-01	ARG0	28	0.1.0.0.1.1	0.1.0.0.1.1.0	
# ::edge	overcome-01	ARG1	person	0.1.0.0.1.1	0.1.0.0.1.1.1	
# ::edge	person	domain	it	0.1.0.0.1.1.1	0.1.0.0.1.1.1.1	
# ::edge	play-01	ARG0	person	0.1.0.0.1.1.1.0	0.1.0.0.1.1.1	
# ::edge	play-01	ARG0	potter-01	0.1.0.0.0.0.2.0	0.1.0.0.0.0.2.0.0	
# ::edge	play-01	ARG1	match-01	0.1.0.0.0.0.2.0	0.1.0.0.0.0.2.0.1	
# ::edge	play-01	time	after	0.1.0.0.0.0.2.0	0.1.0.0.0.0.2	
# ::edge	play-01	time	temporal-quantity	0.1.0.0.0.0.2.0	0.1.0.0.0.0.2.0.2	
# ::edge	skull	poss	injure-01	0.1.0.0.0.2	0.1.0.0.0	
# ::edge	swim-01	ARG0	pool	0.1.0.0.0.0.2.0.1.0.0.0	0.1.0.0.0.0.2.0.1.0.0	
# ::edge	swim-01	ARG1	senior	0.1.0.0.0.0.2.0.1.0.0.0	0.1.0.0.0.0.2.0.1.0.0.0.0	
# ::edge	temporal-quantity	quant	3	0.1.0.0.0.0.2.0.2	0.1.0.0.0.0.2.0.2.0	
# ::edge	temporal-quantity	quant	8	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	temporal-quantity	unit	month	0.1.0.0.0.0.0	0.1.0.0.0.0.0.1	
# ::edge	temporal-quantity	unit	month	0.1.0.0.0.0.2.0.2	0.1.0.0.0.0.2.0.2.1	
(a4 / and 
      :mod (i2 / international) 
      :op1 (b2 / both 
            :ARG1-of (o2 / oppose-01 
                  :ARG0 (p4 / person 
                        :ARG1-of (i / injure-01 
                              :ARG1-of (d / damage-01 
                                    :ARG0 (t / temporal-quantity 
                                          :quant 8 
                                          :unit (m / month)) 
                                    :direction (b / back 
                                          :prep-in (c / crash-01 
                                                :ARG1 (c2 / car))) 
                                    :op-of (a / after 
                                          :time-of (p / play-01 
                                                :ARG0 (p2 / potter-01) 
                                                :ARG1 (m2 / match-01 
                                                      :ARG1 (a2 / accident 
                                                            :location (p3 / pool 
                                                                  :ARG0-of (s / swim-01 
                                                                        :ARG1 (s5 / senior))))) 
                                                :time (t2 / temporal-quantity 
                                                      :quant 3 
                                                      :unit (m3 / month))))) 
                              :mod (s3 / serious) 
                              :poss-of (s2 / skull)) 
                        :op-of (a3 / and 
                              :op1 (s4 / she) 
                              :op2 (o / overcome-01 
                                    :ARG0 28 
                                    :ARG1 (p5 / person 
                                          :ARG0-of (p6 / play-01) 
                                          :domain (i3 / it))))))))

# ::snt we pray for all those killed each day in wars disasters and accidents throughout the world for prisoners of conscience and all who suffer torture starvation or maltreatment and for martin john hughes and etheldreda castle whose anniversaries fall at this time of the year
# ::tok we pray for all those killed each day in wars disasters and accidents throughout the world for prisoners of conscience and all who suffer torture starvation or maltreatment and for martin john hughes and etheldreda castle whose anniversaries fall at this time of the year
# ::alignments 44-45|0.0.0 41-42|0.0.0.0 40-41|0.0.0.0.0 33-34|0.0.1 28-29|0 26-27|0.0.2 25-26|0.0 24-25|0.0.2.0 23-24|0.0.2.0.0 21-22|0.0.2.0.0.0 20-21|0.0.1.0 19-20|0.0.1.0.0 15-16|0.0.1.1.0.1.0.0 13-14|0.0.1.1.0.1.0.0.0 12-13|0.0.1.1.1 11-12|0.0.1.1 10-11|0.0.1.1.0.1 9-10|0.0.1.1.0.1.0 7-8|0.0.1.1.0.2 6-7|0.0.1.1.0.2.0 5-6|0.0.1.1.0 3-4|0.0.1.1.0.0 1-2|0.0.2.0.0.1 0-1|0.0.2.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:06.545
# ::node	0	and	28-29
# ::node	0.0	starve-01	25-26
# ::node	0.0.0	year	44-45
# ::node	0.0.0.0	time	41-42
# ::node	0.0.0.0.0	this	40-41
# ::node	0.0.1	and	33-34
# ::node	0.0.1.0	and	20-21
# ::node	0.0.1.0.0	conscience	19-20
# ::node	0.0.1.1	and	11-12
# ::node	0.0.1.1.0	kill-01	5-6
# ::node	0.0.1.1.0.0	all	3-4
# ::node	0.0.1.1.0.1	disaster	10-11
# ::node	0.0.1.1.0.1.0	war-01	9-10
# ::node	0.0.1.1.0.1.0.0	world	15-16
# ::node	0.0.1.1.0.1.0.0.0	throughout	13-14
# ::node	0.0.1.1.0.2	day	7-8
# ::node	0.0.1.1.0.2.0	each	6-7
# ::node	0.0.1.1.1	accident	12-13
# ::node	0.0.2	or	26-27
# ::node	0.0.2.0	torture-01	24-25
# ::node	0.0.2.0.0	suffer-01	23-24
# ::node	0.0.2.0.0.0	all	21-22
# ::node	0.0.2.0.0.1	pray-01	1-2
# ::node	0.0.2.0.0.1.0	we	0-1
# ::root	0	and
# ::edge	and	op1	accident	0.0.1.1	0.0.1.1.1	
# ::edge	and	op1	conscience	0.0.1.0	0.0.1.0.0	
# ::edge	and	op1	starve-01	0	0.0	
# ::edge	and	op1	starve-01	0.0.1	0.0	
# ::edge	and	op2	and	0.0.1.0	0.0.1	
# ::edge	and	op2	and	0.0.1.1	0.0.1	
# ::edge	day	mod	each	0.0.1.1.0.2	0.0.1.1.0.2.0	
# ::edge	kill-01	ARG0	and	0.0.1.1.0	0.0.1.1	
# ::edge	kill-01	ARG1	all	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	kill-01	location	disaster	0.0.1.1.0	0.0.1.1.0.1	
# ::edge	kill-01	time	day	0.0.1.1.0	0.0.1.1.0.2	
# ::edge	or	op1	starve-01	0.0.2	0.0	
# ::edge	pray-01	ARG0	we	0.0.2.0.0.1	0.0.2.0.0.1.0	
# ::edge	pray-01	ARG1	suffer-01	0.0.2.0.0.1	0.0.2.0.0	
# ::edge	starve-01	ARG1	year	0.0	0.0.0	
# ::edge	suffer-01	ARG0	all	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	suffer-01	ARG1	torture-01	0.0.2.0.0	0.0.2.0	
# ::edge	throughout	op1	world	0.0.1.1.0.1.0.0.0	0.0.1.1.0.1.0.0	
# ::edge	time	mod	this	0.0.0.0	0.0.0.0.0	
# ::edge	torture-01	ARG1	or	0.0.2.0	0.0.2	
# ::edge	war-01	ARG0	disaster	0.0.1.1.0.1.0	0.0.1.1.0.1	
# ::edge	war-01	ARG1	world	0.0.1.1.0.1.0	0.0.1.1.0.1.0.0	
# ::edge	year	part	time	0.0.0	0.0.0.0	
(a2 / and 
      :op1 (s / starve-01 
            :ARG1 (y / year 
                  :part (t / time 
                        :mod (t2 / this))) 
            :op-of (a / and 
                  :op-of (a4 / and 
                        :op1 (c / conscience)) 
                  :op-of (a6 / and 
                        :ARG0-of (k / kill-01 
                              :ARG1 (a7 / all) 
                              :location (d / disaster 
                                    :ARG0-of (w2 / war-01 
                                          :ARG1 (w / world 
                                                :op-of (t4 / throughout)))) 
                              :time (d2 / day 
                                    :mod (e / each))) 
                        :op1 (a5 / accident))) 
            :op-of (o / or 
                  :ARG1-of (t3 / torture-01 
                        :ARG1-of (s2 / suffer-01 
                              :ARG0 (a3 / all) 
                              :ARG1-of (p / pray-01 
                                    :ARG0 (w3 / we)))))))

# ::snt  mr roberts points to the changed taxation structure of the uk as an influence which may have pushed some people into japan almost by accident
# ::tok mr roberts points to the changed taxation structure of the uk as an influence which may have pushed some people into japan almost by accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:06.546
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt three involved accidents
# ::tok three involved accidents
# ::alignments 2-3|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:06.551
# ::node	0	involve-01	1-2
# ::node	0.0	3	0-1
# ::node	0.1	accident	2-3
# ::root	0	involve-01
# ::edge	involve-01	ARG0	3	0	0.0	
# ::edge	involve-01	ARG1	accident	0	0.1	
(i / involve-01 
      :ARG0 3 
      :ARG1 (a / accident))

# ::snt there is growing pressure on the sports governing body fisa to legislate for future minimum formula one car dimensions before such an absurd situation causes a disastrous accident
# ::tok there is growing pressure on the sports governing body fisa to legislate for future minimum formula one car dimensions before such an absurd situation causes a disastrous accident
# ::alignments 27-28|0.1 26-27|0.1.0 24-25|0 23-24|0.0 22-23|0.0.0 20-21|0.0.0.0 19-20|0.2 17-18|0.2.0.0.0.0.0 15-16|0.2.0.0.0 14-15|0.2.0.0.0.0 13-14|0.2.0.1.1.0 11-12|0.2.0 8-9|0.2.0.0 7-8|0.2.0.1 6-7|0.2.0.1.0 3-4|0.2.0.1.1 2-3|0.2.0.1.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:06.713
# ::node	0	cause-01	24-25
# ::node	0.0	situation	23-24
# ::node	0.0.0	absurd	22-23
# ::node	0.0.0.0	such	20-21
# ::node	0.1	accident	27-28
# ::node	0.1.0	disastrous	26-27
# ::node	0.2	before	19-20
# ::node	0.2.0	legislate-01	11-12
# ::node	0.2.0.0	body	8-9
# ::node	0.2.0.0.0	formula	15-16
# ::node	0.2.0.0.0.0	minimum	14-15
# ::node	0.2.0.0.0.0.0	car	17-18
# ::node	0.2.0.1	govern-01	7-8
# ::node	0.2.0.1.0	sport	6-7
# ::node	0.2.0.1.1	pressure-01	3-4
# ::node	0.2.0.1.1.0	future	13-14
# ::node	0.2.0.1.1.1	grow-01	2-3
# ::root	0	cause-01
# ::edge	absurd	degree	such	0.0.0	0.0.0.0	
# ::edge	accident	mod	disastrous	0.1	0.1.0	
# ::edge	before	op1	cause-01	0.2	0	
# ::edge	car	mod	minimum	0.2.0.0.0.0.0	0.2.0.0.0.0	
# ::edge	cause-01	ARG0	situation	0	0.0	
# ::edge	cause-01	ARG1	accident	0	0.1	
# ::edge	formula	mod	body	0.2.0.0.0	0.2.0.0	
# ::edge	formula	mod	minimum	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	govern-01	ARG1	sport	0.2.0.1	0.2.0.1.0	
# ::edge	govern-01	ARG2	legislate-01	0.2.0.1	0.2.0	
# ::edge	grow-01	ARG1	pressure-01	0.2.0.1.1.1	0.2.0.1.1	
# ::edge	legislate-01	ARG0	body	0.2.0	0.2.0.0	
# ::edge	legislate-01	time	before	0.2.0	0.2	
# ::edge	pressure-01	ARG1	future	0.2.0.1.1	0.2.0.1.1.0	
# ::edge	pressure-01	ARG2	govern-01	0.2.0.1.1	0.2.0.1	
# ::edge	situation	mod	absurd	0.0	0.0.0	
(c / cause-01 
      :ARG0 (s / situation 
            :mod (a2 / absurd 
                  :degree (s2 / such))) 
      :ARG1 (a / accident 
            :mod (d / disastrous)) 
      :op-of (b / before 
            :time-of (l / legislate-01 
                  :ARG0 (b2 / body 
                        :mod-of (f / formula 
                              :mod (m / minimum 
                                    :mod-of (c2 / car)))) 
                  :ARG2-of (g / govern-01 
                        :ARG1 (s3 / sport) 
                        :ARG2-of (p / pressure-01 
                              :ARG1 (f2 / future) 
                              :ARG1-of (g2 / grow-01))))))

# ::snt the passage in 1908 and 1920 respectively of congressional legislation on railroad and maritime accidents and of workmens compensation acts in the states beginning with the new york statute in 1910 brought substantial improvement for industrial victims
# ::tok the passage in 1908 and 1920 respectively of congressional legislation on railroad and maritime accidents and of workmens compensation acts in the states beginning with the new york statute in 1910 brought substantial improvement for industrial victims
# ::alignments 36-37|0.1.1 35-36|0.1.1.0 33-34|0.1 32-33|0.1.2 30-31|0.1.4.0+0.1.4 26-28|0.0.1.0.0+0.0.1.0.1+0.0.1.0+0.0.1 23-24|0.0 22-23|0.0.0 18-19|0.1.0.0.0.0 15-16|0.1.3.2 14-15|0.1.3.1 13-14|0.1.3.0 12-13|0.1.3 9-10|0.1.0.0 8-9|0.1.0.0.0.1.0+0.1.0.0.0.1+0.1.0.0.0 6-7|0.1.0.0.0.0.0 5-6|0.1.0.2.0+0.1.0.2 4-5|0 3-4|0.1.0.1.0+0.1.0.1 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:07.121
# ::node	0	and	4-5
# ::node	0.0	begin-01	23-24
# ::node	0.0.0	state	22-23
# ::node	0.0.1	country	26-28
# ::node	0.0.1.0	name	26-28
# ::node	0.0.1.0.0	"york"	26-28
# ::node	0.0.1.0.1	"new"	26-28
# ::node	0.1	improve-01	33-34
# ::node	0.1.0	pass-01	1-2
# ::node	0.1.0.0	legislation	9-10
# ::node	0.1.0.0.0	government-organization	8-9
# ::node	0.1.0.0.0.0	compensate-01	18-19
# ::node	0.1.0.0.0.0.0	respective	6-7
# ::node	0.1.0.0.0.1	name	8-9
# ::node	0.1.0.0.0.1.0	"Congress"	8-9
# ::node	0.1.0.1	date-entity	3-4
# ::node	0.1.0.1.0	1908	3-4
# ::node	0.1.0.2	date-entity	5-6
# ::node	0.1.0.2.0	1920	5-6
# ::node	0.1.1	victim	36-37
# ::node	0.1.1.0	industry	35-36
# ::node	0.1.2	substantial	32-33
# ::node	0.1.3	and	12-13
# ::node	0.1.3.0	maritime	13-14
# ::node	0.1.3.1	accident	14-15
# ::node	0.1.3.2	and	15-16
# ::node	0.1.4	date-entity	30-31
# ::node	0.1.4.0	1910	30-31
# ::root	0	and
# ::edge	and	op1	begin-01	0	0.0	
# ::edge	and	op1	maritime	0.1.3	0.1.3.0	
# ::edge	and	op2	accident	0.1.3	0.1.3.1	
# ::edge	and	op2	improve-01	0	0.1	
# ::edge	and	op3	and	0.1.3	0.1.3.2	
# ::edge	and	op4	improve-01	0.1.3	0.1	
# ::edge	begin-01	ARG1	state	0.0	0.0.0	
# ::edge	begin-01	location	country	0.0	0.0.1	
# ::edge	compensate-01	ARG0	government-organization	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	compensate-01	ARG1	respective	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	country	name	name	0.0.1	0.0.1.0	
# ::edge	date-entity	year	1908	0.1.0.1	0.1.0.1.0	
# ::edge	date-entity	year	1910	0.1.4	0.1.4.0	
# ::edge	date-entity	year	1920	0.1.0.2	0.1.0.2.0	
# ::edge	government-organization	name	name	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	improve-01	ARG1	pass-01	0.1	0.1.0	
# ::edge	improve-01	ARG2	victim	0.1	0.1.1	
# ::edge	improve-01	degree	substantial	0.1	0.1.2	
# ::edge	improve-01	quant	date-entity	0.1	0.1.4	
# ::edge	legislation	mod	government-organization	0.1.0.0	0.1.0.0.0	
# ::edge	name	op1	"Congress"	0.1.0.0.0.1	0.1.0.0.0.1.0	
# ::edge	name	op1	"york"	0.0.1.0	0.0.1.0.0	
# ::edge	name	op2	"new"	0.0.1.0	0.0.1.0.1	
# ::edge	pass-01	ARG1	legislation	0.1.0	0.1.0.0	
# ::edge	pass-01	time	date-entity	0.1.0	0.1.0.1	
# ::edge	pass-01	time	date-entity	0.1.0	0.1.0.2	
# ::edge	victim	mod	industry	0.1.1	0.1.1.0	
(a4 / and 
      :op1 (b / begin-01 
            :ARG1 (s2 / state) 
            :location (c / country 
                  :name (n / name 
                        :op1 "york" 
                        :op2 "new"))) 
      :op2 (i2 / improve-01 
            :ARG1 (p / pass-01 
                  :ARG1 (l / legislation 
                        :mod (g / government-organization 
                              :ARG0-of (c2 / compensate-01 
                                    :ARG1 (r / respective)) 
                              :name (n2 / name 
                                    :op1 "Congress"))) 
                  :time (d3 / date-entity 
                        :year 1908) 
                  :time (d2 / date-entity 
                        :year 1920)) 
            :ARG2 (v / victim 
                  :mod (i / industry)) 
            :degree (s / substantial) 
            :op-of (a3 / and 
                  :op1 (m / maritime) 
                  :op2 (a2 / accident) 
                  :op3 (a / and)) 
            :quant (d / date-entity 
                  :year 1910)))

# ::snt the jump will raise money for the accident and emergency unit at coventy hospital
# ::tok the jump will raise money for the accident and emergency unit at coventy hospital
# ::alignments 13-14|0.0.0.2.0 10-11|0.0.0.2 9-10|0.0.0.1 8-9|0.0.0 7-8|0.0.0.0 4-5|0.0 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:07.146
# ::node	0	raise-01	3-4
# ::node	0.0	money	4-5
# ::node	0.0.0	and	8-9
# ::node	0.0.0.0	accident	7-8
# ::node	0.0.0.1	emergency	9-10
# ::node	0.0.0.2	unit	10-11
# ::node	0.0.0.2.0	hospital	13-14
# ::root	0	raise-01
# ::edge	and	op1	money	0.0.0	0.0	
# ::edge	and	op2	accident	0.0.0	0.0.0.0	
# ::edge	and	op3	emergency	0.0.0	0.0.0.1	
# ::edge	and	op4	unit	0.0.0	0.0.0.2	
# ::edge	raise-01	ARG1	money	0	0.0	
# ::edge	unit	location	hospital	0.0.0.2	0.0.0.2.0	
(r / raise-01 
      :ARG1 (m / money 
            :op-of (a / and 
                  :op1 (a2 / accident) 
                  :op2 (e / emergency) 
                  :op3 (u / unit 
                        :location (h / hospital)))))

# ::snt a letter from the five unions involved in the dispute offered talks with management the moment you restore an accident and emergency service in london
# ::tok a letter from the five unions involved in the dispute offered talks with management the moment you restore an accident and emergency service in london
# ::alignments 24-25|0.0.0.0+0.0.0+0.0 21-22|0.3 20-21|0 19-20|0.2 17-18|0.1 16-17|0.1.1 15-16|0.1.2 13-14|0.1.1.0 11-12|0.1.1.0.0 10-11|0.1.1.0.0.0 9-10|0.1.0.0.0 6-7|0.1.0.0 5-6|0.1.0 4-5|0.0.1 1-2|0.1.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:07.967
# ::node	0	and	20-21
# ::node	0.0	city	24-25
# ::node	0.0.0	name	24-25
# ::node	0.0.0.0	"London"	24-25
# ::node	0.0.1	5	4-5
# ::node	0.1	restore-01	17-18
# ::node	0.1.0	union	5-6
# ::node	0.1.0.0	involve-01	6-7
# ::node	0.1.0.0.0	dispute-01	9-10
# ::node	0.1.1	you	16-17
# ::node	0.1.1.0	manage-01	13-14
# ::node	0.1.1.0.0	talk-01	11-12
# ::node	0.1.1.0.0.0	offer-01	10-11
# ::node	0.1.1.0.0.0.0	letter	1-2
# ::node	0.1.2	moment	15-16
# ::node	0.2	accident	19-20
# ::node	0.3	emergency	21-22
# ::root	0	and
# ::edge	and	location	city	0	0.0	
# ::edge	and	op1	restore-01	0	0.1	
# ::edge	and	op2	accident	0	0.2	
# ::edge	and	op3	emergency	0	0.3	
# ::edge	city	name	name	0.0	0.0.0	
# ::edge	city	quant	5	0.0	0.0.1	
# ::edge	involve-01	ARG1	union	0.1.0.0	0.1.0	
# ::edge	involve-01	ARG2	dispute-01	0.1.0.0	0.1.0.0.0	
# ::edge	manage-01	ARG0	you	0.1.1.0	0.1.1	
# ::edge	name	op1	"London"	0.0.0	0.0.0.0	
# ::edge	offer-01	ARG0	letter	0.1.1.0.0.0	0.1.1.0.0.0.0	
# ::edge	offer-01	ARG1	talk-01	0.1.1.0.0.0	0.1.1.0.0	
# ::edge	restore-01	ARG0	union	0.1	0.1.0	
# ::edge	restore-01	ARG1	you	0.1	0.1.1	
# ::edge	restore-01	time	moment	0.1	0.1.2	
# ::edge	talk-01	ARG2	manage-01	0.1.1.0.0	0.1.1.0	
(a / and 
      :location (c / city 
            :name (n / name 
                  :op1 "London") 
            :quant 5) 
      :op1 (r / restore-01 
            :ARG0 (u / union 
                  :ARG1-of (i / involve-01 
                        :ARG2 (d / dispute-01))) 
            :ARG1 (y / you 
                  :ARG0-of (m2 / manage-01 
                        :ARG2-of (t / talk-01 
                              :ARG1-of (o / offer-01 
                                    :ARG0 (l / letter))))) 
            :time (m / moment)) 
      :op2 (a2 / accident) 
      :op3 (e / emergency))

# ::snt increasingly issues are presented for legal adjudication which are far removed from the commonplace activities and accidents familiar to the man in the street
# ::tok increasingly issues are presented for legal adjudication which are far removed from the commonplace activities and accidents familiar to the man in the street
# ::alignments 23-24|0.0.0.0.0.0.0 20-21|0.0.0.0.0.0 17-18|0.0.0.0.0 16-17|0.0.0.2.0 15-16|0.0.0.2 14-15|0.0.0.0 13-14|0.0.0.0.1 10-11|0.0.0 9-10|0.0.0.1 5-6|0.0.1.0 3-4|0 1-2|0.0 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:08.158
# ::node	0	present-01	3-4
# ::node	0.0	issue	1-2
# ::node	0.0.0	remove-01	10-11
# ::node	0.0.0.0	activity	14-15
# ::node	0.0.0.0.0	familiarize-01	17-18
# ::node	0.0.0.0.0.0	man	20-21
# ::node	0.0.0.0.0.0.0	street	23-24
# ::node	0.0.0.0.1	commonplace	13-14
# ::node	0.0.0.1	far	9-10
# ::node	0.0.0.2	and	15-16
# ::node	0.0.0.2.0	accident	16-17
# ::node	0.0.1	increase-01	0-1
# ::node	0.0.1.0	legal	5-6
# ::root	0	present-01
# ::edge	activity	mod	commonplace	0.0.0.0	0.0.0.0.1	
# ::edge	and	op1	remove-01	0.0.0.2	0.0.0	
# ::edge	and	op2	accident	0.0.0.2	0.0.0.2.0	
# ::edge	familiarize-01	ARG1	man	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	familiarize-01	ARG2	activity	0.0.0.0.0	0.0.0.0	
# ::edge	increase-01	ARG1	legal	0.0.1	0.0.1.0	
# ::edge	issue	mod	increase-01	0.0	0.0.1	
# ::edge	man	location	street	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	present-01	ARG1	issue	0	0.0	
# ::edge	remove-01	ARG0	issue	0.0.0	0.0	
# ::edge	remove-01	ARG1	activity	0.0.0	0.0.0.0	
# ::edge	remove-01	mod	far	0.0.0	0.0.0.1	
(p / present-01 
      :ARG1 (i / issue 
            :ARG0-of (r / remove-01 
                  :ARG1 (a3 / activity 
                        :ARG2-of (f / familiarize-01 
                              :ARG1 (m / man 
                                    :location (s / street))) 
                        :mod (c / commonplace)) 
                  :mod (f2 / far) 
                  :op-of (a2 / and 
                        :op1 (a / accident))) 
            :mod (i2 / increase-01 
                  :ARG1 (l / legal))))

# ::snt it was a relatively quiet shift we responded to five emergency calls as a crew of two ranging from road traffic accidents to people collapsing in the street
# ::tok it was a relatively quiet shift we responded to five emergency calls as a crew of two ranging from road traffic accidents to people collapsing in the street
# ::alignments 27-28|0.2.0.0.2.0 24-25|0.2.0.0.2 21-22|0.2.0.0.1 20-21|0.2.0.0.1.0 19-20|0.2.0.0.1.0.0 17-18|0.2.0.0 16-17|0.2.1.0 14-15|0.2.1 10-11|0.0 9-10|0.2.0.0.0 7-8|0.2 6-7|0.2.0 5-6|0 4-5|0.1 3-4|0.1.0 0-1|0.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:08.253
# ::node	0	shift-01	5-6
# ::node	0.0	emergency	10-11
# ::node	0.1	quiet-41	4-5
# ::node	0.1.0	relative	3-4
# ::node	0.2	respond-01	7-8
# ::node	0.2.0	we	6-7
# ::node	0.2.0.0	range-01	17-18
# ::node	0.2.0.0.0	5	9-10
# ::node	0.2.0.0.1	accident	21-22
# ::node	0.2.0.0.1.0	traffic	20-21
# ::node	0.2.0.0.1.0.0	road	19-20
# ::node	0.2.0.0.2	collapse-01	24-25
# ::node	0.2.0.0.2.0	street	27-28
# ::node	0.2.1	crew	14-15
# ::node	0.2.1.0	2	16-17
# ::node	0.3	it	0-1
# ::root	0	shift-01
# ::edge	2	consist	crew	0.2.1.0	0.2.1	
# ::edge	accident	mod	traffic	0.2.0.0.1	0.2.0.0.1.0	
# ::edge	collapse-01	ARG1	street	0.2.0.0.2	0.2.0.0.2.0	
# ::edge	quiet-41	ARG1	shift-01	0.1	0	
# ::edge	quiet-41	degree	relative	0.1	0.1.0	
# ::edge	range-01	ARG0	we	0.2.0.0	0.2.0	
# ::edge	range-01	ARG1	5	0.2.0.0	0.2.0.0.0	
# ::edge	range-01	ARG3	accident	0.2.0.0	0.2.0.0.1	
# ::edge	range-01	purpose	collapse-01	0.2.0.0	0.2.0.0.2	
# ::edge	respond-01	ARG0	we	0.2	0.2.0	
# ::edge	respond-01	ARG1	shift-01	0.2	0	
# ::edge	respond-01	ARG2	crew	0.2	0.2.1	
# ::edge	shift-01	ARG1	emergency	0	0.0	
# ::edge	shift-01	domain	it	0	0.3	
# ::edge	traffic	mod	road	0.2.0.0.1.0	0.2.0.0.1.0.0	
(s2 / shift-01 
      :ARG1 (e / emergency) 
      :ARG1-of (q / quiet-41 
            :degree (r4 / relative)) 
      :ARG1-of (r3 / respond-01 
            :ARG0 (w / we 
                  :ARG0-of (r2 / range-01 
                        :ARG1 5 
                        :ARG3 (a / accident 
                              :mod (t / traffic 
                                    :mod (r / road))) 
                        :purpose (c / collapse-01 
                              :ARG1 (s / street)))) 
            :ARG2 (c2 / crew 
                  :consist-of 2)) 
      :domain (i / it))

# ::snt a postmortem examination of the occupants revealed nothing which contributed to the accident, examination of the wreckage and the accident site showed that the landing gear of the aircraft had struck the upper parts of two 78 foot high greenhouses situated near the rear wall of a house in cranfield village
# ::tok a postmortem examination of the occupants revealed nothing which contributed to the accident , examination of the wreckage and the accident site showed that the landing gear of the aircraft had struck the upper parts of two 78 foot high greenhouses situated near the rear wall of a house in cranfield village
# ::alignments 51-52|0.5 48-49|0.4.0 45-46|0.4 44-45|0.4.1 42-43|0.4.2 39-40|0.0.0.0.0.0.0 38-39|0.3 37-38|0.1.0 36-37|0.1.1 34-35|0.0.0 33-34|0.0.0.1 31-32|0.0.0.0 29-30|0.0.0.0.0.1 26-27|0.0.0.0.0 25-26|0.0.0.0.0.0 22-23|0.0 21-22|0.2 20-21|0.2.0 18-19|0 14-15|0.1 12-13|0.0.1.1.0.0 9-10|0.0.1.1.0 7-8|0.0.1.1 6-7|0.0.1 5-6|0.0.1.0.0.0+0.0.1.0.0 2-3|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:09.215
# ::node	0	and	18-19
# ::node	0.0	show-01	22-23
# ::node	0.0.0	part	34-35
# ::node	0.0.0.0	strike-01	31-32
# ::node	0.0.0.0.0	gear	26-27
# ::node	0.0.0.0.0.0	land-01	25-26
# ::node	0.0.0.0.0.0.0	high	39-40
# ::node	0.0.0.0.0.1	aircraft	29-30
# ::node	0.0.0.1	upper	33-34
# ::node	0.0.1	reveal-01	6-7
# ::node	0.0.1.0	examine-01	2-3
# ::node	0.0.1.0.0	person	5-6
# ::node	0.0.1.0.0.0	occupy-01	5-6
# ::node	0.0.1.1	nothing	7-8
# ::node	0.0.1.1.0	contribute-01	9-10
# ::node	0.0.1.1.0.0	accident	12-13
# ::node	0.1	examine-01	14-15
# ::node	0.1.0	78	37-38
# ::node	0.1.1	2	36-37
# ::node	0.2	site	21-22
# ::node	0.2.0	accident	20-21
# ::node	0.3	foot	38-39
# ::node	0.4	wall	45-46
# ::node	0.4.0	house	48-49
# ::node	0.4.1	rear	44-45
# ::node	0.4.2	near	42-43
# ::node	0.5	village	51-52
# ::root	0	and
# ::edge	and	op1	examine-01	0	0.1	
# ::edge	and	op2	site	0	0.2	
# ::edge	and	op3	foot	0	0.3	
# ::edge	and	op4	wall	0	0.4	
# ::edge	and	op5	village	0	0.5	
# ::edge	contribute-01	ARG1	nothing	0.0.1.1.0	0.0.1.1	
# ::edge	contribute-01	ARG2	accident	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	examine-01	ARG0	78	0.1	0.1.0	
# ::edge	examine-01	ARG1	2	0.1	0.1.1	
# ::edge	examine-01	ARG1	person	0.0.1.0	0.0.1.0.0	
# ::edge	gear	mod	aircraft	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	land-01	ARG0	high	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	land-01	ARG1	gear	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	near	op1	wall	0.4.2	0.4	
# ::edge	occupy-01	ARG0	person	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	part	mod	upper	0.0.0	0.0.0.1	
# ::edge	reveal-01	ARG0	examine-01	0.0.1	0.0.1.0	
# ::edge	reveal-01	ARG1	show-01	0.0.1	0.0	
# ::edge	reveal-01	ARG2	nothing	0.0.1	0.0.1.1	
# ::edge	show-01	ARG0	and	0.0	0	
# ::edge	show-01	ARG1	part	0.0	0.0.0	
# ::edge	site	mod	accident	0.2	0.2.0	
# ::edge	strike-01	ARG0	gear	0.0.0.0	0.0.0.0.0	
# ::edge	strike-01	ARG1	part	0.0.0.0	0.0.0	
# ::edge	wall	location	house	0.4	0.4.0	
# ::edge	wall	mod	rear	0.4	0.4.1	
(a3 / and 
      :ARG0-of (s2 / show-01 
            :ARG1 (p / part 
                  :ARG1-of (s / strike-01 
                        :ARG0 (g / gear 
                              :ARG1-of (l / land-01 
                                    :ARG0 (h2 / high)) 
                              :mod (a / aircraft))) 
                  :mod (u / upper)) 
            :ARG1-of (r2 / reveal-01 
                  :ARG0 (e2 / examine-01 
                        :ARG1 (p2 / person 
                              :ARG0-of (o / occupy-01))) 
                  :ARG2 (n2 / nothing 
                        :ARG1-of (c / contribute-01 
                              :ARG2 (a4 / accident))))) 
      :op1 (e / examine-01 
            :ARG0 78 
            :ARG1 2) 
      :op2 (s3 / site 
            :mod (a2 / accident)) 
      :op3 (f / foot) 
      :op4 (w / wall 
            :location (h / house) 
            :mod (r / rear) 
            :op-of (n / near)) 
      :op5 (v / village))

# ::snt we pray for all those killed each day in wars disasters and accidents throughout the world for prisoners of conscience for farzad bazoft and all who die of torture starvation and maltreatment and for margaret tyrrell john rahilly ernest cowley george smith eileen oconnor peter crawley and helen timms whose anniversaries fall at this time of the year
# ::tok we pray for all those killed each day in wars disasters and accidents throughout the world for prisoners of conscience for farzad bazoft and all who die of torture starvation and maltreatment and for margaret tyrrell john rahilly ernest cowley george smith eileen oconnor peter crawley and helen timms whose anniversaries fall at this time of the year
# ::alignments 57-58|0.1.0.0.0 54-55|0.1.0.0 53-54|0.1.0 46-47|0.1.2 32-33|0 30-31|0.1.3 29-30|0.1 28-29|0.1.1 26-27|0.1.3.0 24-25|0.1.3.0.0 23-24|0.0.2.1 19-20|0.0.2.1.1 15-16|0.0.2.0.0 13-14|0.0.2.0 12-13|0.0.2 11-12|0.0 10-11|0.0.1.1.0 9-10|0.0.0 7-8|0.0.1.1 6-7|0.0.1.1.1 5-6|0.0.1 3-4|0.0.1.0 1-2|0.0.2.1.0 0-1|0.0.2.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:09.750
# ::node	0	and	32-33
# ::node	0.0	and	11-12
# ::node	0.0.0	war-01	9-10
# ::node	0.0.1	kill-01	5-6
# ::node	0.0.1.0	all	3-4
# ::node	0.0.1.1	day	7-8
# ::node	0.0.1.1.0	disaster	10-11
# ::node	0.0.1.1.1	each	6-7
# ::node	0.0.2	accident	12-13
# ::node	0.0.2.0	throughout	13-14
# ::node	0.0.2.0.0	world	15-16
# ::node	0.0.2.1	and	23-24
# ::node	0.0.2.1.0	pray-01	1-2
# ::node	0.0.2.1.0.0	we	0-1
# ::node	0.0.2.1.1	conscience	19-20
# ::node	0.1	starve-01	29-30
# ::node	0.1.0	this	53-54
# ::node	0.1.0.0	time	54-55
# ::node	0.1.0.0.0	year	57-58
# ::node	0.1.1	torture-01	28-29
# ::node	0.1.2	and	46-47
# ::node	0.1.3	and	30-31
# ::node	0.1.3.0	die-01	26-27
# ::node	0.1.3.0.0	all	24-25
# ::root	0	and
# ::edge	accident	location	throughout	0.0.2	0.0.2.0	
# ::edge	and	op1	accident	0.0.2.1	0.0.2	
# ::edge	and	op1	and	0	0.0	
# ::edge	and	op1	kill-01	0.0	0.0.1	
# ::edge	and	op1	starve-01	0.1.2	0.1	
# ::edge	and	op1	starve-01	0.1.3	0.1	
# ::edge	and	op2	accident	0.0	0.0.2	
# ::edge	and	op2	starve-01	0	0.1	
# ::edge	conscience	beneficiary	and	0.0.2.1.1	0.0.2.1	
# ::edge	day	mod	each	0.0.1.1	0.0.1.1.1	
# ::edge	die-01	ARG0	and	0.1.3.0	0.1.3	
# ::edge	die-01	ARG1	all	0.1.3.0	0.1.3.0.0	
# ::edge	disaster	duration	day	0.0.1.1.0	0.0.1.1	
# ::edge	kill-01	ARG1	all	0.0.1	0.0.1.0	
# ::edge	kill-01	time	day	0.0.1	0.0.1.1	
# ::edge	pray-01	ARG0	we	0.0.2.1.0	0.0.2.1.0.0	
# ::edge	pray-01	ARG1	and	0.0.2.1.0	0.0.2.1	
# ::edge	starve-01	ARG1	this	0.1	0.1.0	
# ::edge	throughout	op1	world	0.0.2.0	0.0.2.0.0	
# ::edge	time	mod	this	0.1.0.0	0.1.0	
# ::edge	torture-01	ARG1	starve-01	0.1.1	0.1	
# ::edge	war-01	ARG1	and	0.0.0	0.0	
# ::edge	year	part	time	0.1.0.0.0	0.1.0.0	
(a2 / and 
      :op1 (a7 / and 
            :ARG1-of (w2 / war-01) 
            :op1 (k / kill-01 
                  :ARG1 (a8 / all) 
                  :time (d3 / day 
                        :duration-of (d2 / disaster) 
                        :mod (e / each))) 
            :op2 (a6 / accident 
                  :location (t4 / throughout 
                        :op1 (w / world)) 
                  :op-of (a5 / and 
                        :ARG1-of (p / pray-01 
                              :ARG0 (w3 / we)) 
                        :beneficiary-of (c / conscience)))) 
      :op2 (s / starve-01 
            :ARG1 (t2 / this 
                  :mod-of (t / time 
                        :part-of (y / year))) 
            :ARG1-of (t3 / torture-01) 
            :op-of (a / and) 
            :op-of (a3 / and 
                  :ARG0-of (d / die-01 
                        :ARG1 (a4 / all)))))

# ::snt stephen walsh  we hear far too much about accidents to children dash
# ::tok stephen walsh we hear far too much about accidents to children dash
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:09.751
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt he hoped others would follow pearl insurance in withdrawing cover from drivers involved in accidents when their bloodalcohol level was above the statutory limit
# ::tok he hoped others would follow pearl insurance in withdrawing cover from drivers involved in accidents when their bloodalcohol level was above the statutory limit
# ::alignments 23-24|0.2 20-21|0.2.1 18-19|0.2.0 14-15|0.1.2.0.1.0 12-13|0.1.2.0.1 11-12|0.1.2.0.0+0.1.2.0 8-9|0.1.2 6-7|0.1.1 5-6|0.1.1.0 4-5|0.1 2-3|0.1.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:10.223
# ::node	0	hope-01	1-2
# ::node	0.0	he	0-1
# ::node	0.1	follow-02	4-5
# ::node	0.1.0	other	2-3
# ::node	0.1.1	insure-02	6-7
# ::node	0.1.1.0	pearl	5-6
# ::node	0.1.2	withdraw-01	8-9
# ::node	0.1.2.0	person	11-12
# ::node	0.1.2.0.0	drive-01	11-12
# ::node	0.1.2.0.1	involve-01	12-13
# ::node	0.1.2.0.1.0	accident	14-15
# ::node	0.2	limit-01	23-24
# ::node	0.2.0	level	18-19
# ::node	0.2.1	above	20-21
# ::root	0	hope-01
# ::edge	above	op1	limit-01	0.2.1	0.2	
# ::edge	drive-01	ARG0	person	0.1.2.0.0	0.1.2.0	
# ::edge	follow-02	ARG0	other	0.1	0.1.0	
# ::edge	follow-02	ARG1	insure-02	0.1	0.1.1	
# ::edge	follow-02	ARG2	withdraw-01	0.1	0.1.2	
# ::edge	hope-01	ARG0	he	0	0.0	
# ::edge	hope-01	ARG1	follow-02	0	0.1	
# ::edge	insure-02	ARG1	pearl	0.1.1	0.1.1.0	
# ::edge	involve-01	ARG1	person	0.1.2.0.1	0.1.2.0	
# ::edge	involve-01	ARG2	accident	0.1.2.0.1	0.1.2.0.1.0	
# ::edge	limit-01	ARG0	level	0.2	0.2.0	
# ::edge	limit-01	ARG1	hope-01	0.2	0	
# ::edge	withdraw-01	ARG0	person	0.1.2	0.1.2.0	
(h / hope-01 
      :ARG0 (h2 / he) 
      :ARG1 (f / follow-02 
            :ARG0 (o / other) 
            :ARG1 (i2 / insure-02 
                  :ARG1 (p2 / pearl)) 
            :ARG2 (w / withdraw-01 
                  :ARG0 (p / person 
                        :ARG0-of (d / drive-01) 
                        :ARG1-of (i / involve-01 
                              :ARG2 (a2 / accident))))) 
      :ARG1-of (l / limit-01 
            :ARG0 (l2 / level) 
            :op-of (a / above)))

# ::snt especially products liability in contrast to mass accident cases are not based on a single but a series of discrete events
# ::tok especially products liability in contrast to mass accident cases are not based on a single but a series of discrete events
# ::alignments 20-21|0.1.0.1.0.0 17-18|0.1.0.1.0 15-16|0 14-15|0.0 11-12|0.1 8-9|0.1.0.1.1 7-8|0.1.0.1.1.0 6-7|0.1.0.1.1.0.0 4-5|0.1.0.1 2-3|0.1.0 1-2|0.1.0.0 0-1|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:10.367
# ::node	0	contrast-01	15-16
# ::node	0.0	single	14-15
# ::node	0.1	base-01	11-12
# ::node	0.1.0	liability	2-3
# ::node	0.1.0.0	product	1-2
# ::node	0.1.0.0.0	especially	0-1
# ::node	0.1.0.1	contrast-01	4-5
# ::node	0.1.0.1.0	series	17-18
# ::node	0.1.0.1.0.0	event	20-21
# ::node	0.1.0.1.1	case	8-9
# ::node	0.1.0.1.1.0	accident	7-8
# ::node	0.1.0.1.1.0.0	mass	6-7
# ::root	0	contrast-01
# ::edge	accident	degree	mass	0.1.0.1.1.0	0.1.0.1.1.0.0	
# ::edge	base-01	ARG0	contrast-01	0.1	0	
# ::edge	base-01	ARG1	liability	0.1	0.1.0	
# ::edge	case	mod	accident	0.1.0.1.1	0.1.0.1.1.0	
# ::edge	contrast-01	ARG0	single	0	0.0	
# ::edge	contrast-01	ARG1	series	0.1.0.1	0.1.0.1.0	
# ::edge	contrast-01	ARG2	case	0.1.0.1	0.1.0.1.1	
# ::edge	event	quant	series	0.1.0.1.0.0	0.1.0.1.0	
# ::edge	liability	mod	product	0.1.0	0.1.0.0	
# ::edge	liability	topic	contrast-01	0.1.0	0.1.0.1	
# ::edge	product	mod	especially	0.1.0.0	0.1.0.0.0	
(c / contrast-01 
      :ARG0 (s2 / single) 
      :ARG0-of (b / base-01 
            :ARG1 (l / liability 
                  :mod (p / product 
                        :mod (e2 / especially)) 
                  :topic (c3 / contrast-01 
                        :ARG1 (s / series 
                              :quant-of (e / event)) 
                        :ARG2 (c2 / case 
                              :mod (a / accident 
                                    :degree (m / mass)))))))

# ::snt it would add to traffic in oxford road with an increased risk of accidents near benson primary school
# ::tok it would add to traffic in oxford road with an increased risk of accidents near benson primary school
# ::alignments 17-18|0.1.0.0.2.0 16-17|0.1.0.0.2.0.0 14-15|0.1.0.0.2 13-14|0.1.0.0.0 11-12|0.1.0.0 10-11|0.1.0.0.1 7-8|0.1.0 4-5|0.1 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:10.492
# ::node	0	add-02	2-3
# ::node	0.0	it	0-1
# ::node	0.1	traffic	4-5
# ::node	0.1.0	road	7-8
# ::node	0.1.0.0	risk-01	11-12
# ::node	0.1.0.0.0	accident	13-14
# ::node	0.1.0.0.1	increase-01	10-11
# ::node	0.1.0.0.2	near	14-15
# ::node	0.1.0.0.2.0	school	17-18
# ::node	0.1.0.0.2.0.0	primary	16-17
# ::root	0	add-02
# ::edge	add-02	ARG0	it	0	0.0	
# ::edge	add-02	ARG1	traffic	0	0.1	
# ::edge	increase-01	ARG1	risk-01	0.1.0.0.1	0.1.0.0	
# ::edge	near	mod	school	0.1.0.0.2	0.1.0.0.2.0	
# ::edge	risk-01	ARG0	road	0.1.0.0	0.1.0	
# ::edge	risk-01	ARG1	accident	0.1.0.0	0.1.0.0.0	
# ::edge	risk-01	time	near	0.1.0.0	0.1.0.0.2	
# ::edge	school	mod	primary	0.1.0.0.2.0	0.1.0.0.2.0.0	
# ::edge	traffic	location	road	0.1	0.1.0	
(a2 / add-02 
      :ARG0 (i2 / it) 
      :ARG1 (t / traffic 
            :location (r2 / road 
                  :ARG0-of (r / risk-01 
                        :ARG1 (a / accident) 
                        :ARG1-of (i / increase-01) 
                        :time (n / near 
                              :mod (s / school 
                                    :mod (p / primary)))))))

# ::snt minor accidents occurred on a section of wootton road at white cross at lunchtime after an oil or typo baddiesalgooddiesel spillage made road conditions treacherous
# ::tok minor accidents occurred on a section of wootton road at white cross at lunchtime after an oil or typo baddiesalgooddiesel spillage made road conditions treacherous
# ::alignments 23-24|0.4.0 22-23|0.4 17-18|0 16-17|0.3 14-15|0.1 13-14|0.0 11-12|0.0.0 10-11|0.0.0.1 8-9|0.0.0.0.0 5-6|0.0.0.0 1-2|0.2.0 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:10.611
# ::node	0	or	17-18
# ::node	0.0	lunch-01	13-14
# ::node	0.0.0	cross-02	11-12
# ::node	0.0.0.0	section	5-6
# ::node	0.0.0.0.0	road	8-9
# ::node	0.0.0.1	white	10-11
# ::node	0.1	after	14-15
# ::node	0.2	minor	0-1
# ::node	0.2.0	accident	1-2
# ::node	0.3	oil	16-17
# ::node	0.4	road	22-23
# ::node	0.4.0	condition	23-24
# ::root	0	or
# ::edge	accident	mod	minor	0.2.0	0.2	
# ::edge	after	op1	or	0.1	0	
# ::edge	condition	mod	road	0.4.0	0.4	
# ::edge	cross-02	ARG0	section	0.0.0	0.0.0.0	
# ::edge	cross-02	ARG1	lunch-01	0.0.0	0.0	
# ::edge	cross-02	mod	white	0.0.0	0.0.0.1	
# ::edge	lunch-01	ARG1	or	0.0	0	
# ::edge	or	op1	minor	0	0.2	
# ::edge	or	op2	oil	0	0.3	
# ::edge	or	op3	road	0	0.4	
# ::edge	road	part	section	0.0.0.0.0	0.0.0.0	
(o / or 
      :ARG1-of (l / lunch-01 
            :ARG1-of (c2 / cross-02 
                  :ARG0 (s / section 
                        :part-of (r2 / road)) 
                  :mod (w / white))) 
      :op-of (a / after) 
      :op1 (m / minor 
            :mod-of (a2 / accident)) 
      :op2 (o2 / oil) 
      :op3 (r / road 
            :mod-of (c / condition)))

# ::snt michael broke his leg in an accident on the buildings
# ::tok michael broke his leg in an accident on the buildings
# ::alignments 9-10|0.0.0 6-7|0.0 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:10.619
# ::node	0	leg	3-4
# ::node	0.0	accident	6-7
# ::node	0.0.0	building	9-10
# ::root	0	leg
# ::edge	accident	location	building	0.0	0.0.0	
# ::edge	leg	location	accident	0	0.0	
(l / leg 
      :location (a / accident 
            :location (b / building)))

# ::snt ot p11  farmers have been urged to give a much higher priority to accident prevention to reduce the horrific toll of deaths and serious accidents on farms
# ::tok ot p11 farmers have been urged to give a much higher priority to accident prevention to reduce the horrific toll of deaths and serious accidents on farms
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:10.619
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt last night an investigation was under way by the air accidents investigation branch a division of the department of transport which investigates all air accidents in britain
# ::tok last night an investigation was under way by the air accidents investigation branch a division of the department of transport which investigates all air accidents in britain
# ::alignments 26-27|0.0.1.1.0+0.0.1.1+0.0.1 24-25|0.0.1.0 23-24|0.0.1.0.0 22-23|0.0.1.0.1 19-20|0.0.2.0 17-18|0.0.2.0.0 14-15|0 12-13|0.0.2.1 11-12|0.0.2 10-11|0.0.2.1.1.0 9-10|0.0.2.1.1 6-7|0.0.2.1.0 3-4|0.0 1-2|0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:10.849
# ::node	0	division	14-15
# ::node	0.0	investigate-01	3-4
# ::node	0.0.0	night	1-2
# ::node	0.0.0.0	last	0-1
# ::node	0.0.1	country	26-27
# ::node	0.0.1.0	accident	24-25
# ::node	0.0.1.0.0	air	23-24
# ::node	0.0.1.0.1	all	22-23
# ::node	0.0.1.1	name	26-27
# ::node	0.0.1.1.0	"Britain"	26-27
# ::node	0.0.2	investigate-01	11-12
# ::node	0.0.2.0	transport-01	19-20
# ::node	0.0.2.0.0	department	17-18
# ::node	0.0.2.1	branch	12-13
# ::node	0.0.2.1.0	way	6-7
# ::node	0.0.2.1.1	air	9-10
# ::node	0.0.2.1.1.0	accident	10-11
# ::root	0	division
(d2 / division 
      :ARG0-of (i2 / investigate-01 
            :ARG1 (n2 / night 
                  :mod (l / last)) 
            :location (c / country 
                  :location-of (a / accident 
                        :mod (a2 / air) 
                        :quant (a3 / all)) 
                  :name (n / name 
                        :op1 "Britain")) 
            :medium (i / investigate-01 
                  :ARG1 (t / transport-01 
                        :instrument (d / department)) 
                  :mod-of (b / branch 
                        :location-of (w / way) 
                        :mod (a5 / air 
                              :mod-of (a4 / accident))))))

# ::snt a wantage language student who died in a road accident almost two years ago has been remembered in a memorial lecture set up in her name
# ::tok a wantage language student who died in a road accident almost two years ago has been remembered in a memorial lecture set up in her name
# ::alignments 20-21|0.1 19-20|0.1.1 16-17|0 12-13|0.1.0.2+0.1.0 11-12|0.1.0.1 10-11|0.1.0.0 9-10|0.0.1.0 8-9|0.0.1.0.0 5-6|0.0.1 3-4|0.0.0+0.0 2-3|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:10.969
# ::node	0	remember-01	16-17
# ::node	0.0	person	3-4
# ::node	0.0.0	study-01	3-4
# ::node	0.0.0.0	language	2-3
# ::node	0.0.1	die-01	5-6
# ::node	0.0.1.0	accident	9-10
# ::node	0.0.1.0.0	road	8-9
# ::node	0.1	lecture-01	20-21
# ::node	0.1.0	temporal-quantity	12-13
# ::node	0.1.0.0	almost	10-11
# ::node	0.1.0.1	2	11-12
# ::node	0.1.0.2	year	12-13
# ::node	0.1.1	memorial	19-20
# ::root	0	remember-01
# ::edge	accident	location	road	0.0.1.0	0.0.1.0.0	
# ::edge	almost	op1	temporal-quantity	0.1.0.0	0.1.0	
# ::edge	die-01	ARG1	person	0.0.1	0.0	
# ::edge	die-01	ARG2	accident	0.0.1	0.0.1.0	
# ::edge	lecture-01	ARG0	temporal-quantity	0.1	0.1.0	
# ::edge	lecture-01	ARG1	memorial	0.1	0.1.1	
# ::edge	remember-01	ARG1	person	0	0.0	
# ::edge	remember-01	time	lecture-01	0	0.1	
# ::edge	study-01	ARG0	person	0.0.0	0.0	
# ::edge	study-01	ARG1	language	0.0.0	0.0.0.0	
# ::edge	temporal-quantity	quant	2	0.1.0	0.1.0.1	
# ::edge	temporal-quantity	unit	year	0.1.0	0.1.0.2	
(r / remember-01 
      :ARG1 (p / person 
            :ARG0-of (s / study-01 
                  :ARG1 (l2 / language)) 
            :ARG1-of (d / die-01 
                  :ARG2 (a2 / accident 
                        :location (r2 / road)))) 
      :time (l / lecture-01 
            :ARG0 (t / temporal-quantity 
                  :op-of (a / almost) 
                  :quant 2 
                  :unit (y / year)) 
            :ARG1 (m / memorial)))

# ::snt a dumpertruck driver reversed over a road construction worker without realising that an accident had happened an oxford inquest heard
# ::tok a dumpertruck driver reversed over a road construction worker without realising that an accident had happened an oxford inquest heard
# ::alignments 19-20|0.0 18-19|0 15-16|0.1 13-14|0.1.0 10-11|0.1.1 8-9|0.1.1.1+0.1.1.1.0 7-8|0.1.1.1.1 6-7|0.0.0 3-4|0.1.1.0.0 2-3|0.1.1.0.1+0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:11.328
# ::node	0	inquest	18-19
# ::node	0.0	hear-01	19-20
# ::node	0.0.0	road	6-7
# ::node	0.1	happen-01	15-16
# ::node	0.1.0	accident	13-14
# ::node	0.1.1	realize-01	10-11
# ::node	0.1.1.0	person	2-3
# ::node	0.1.1.0.0	reverse-01	3-4
# ::node	0.1.1.0.1	drive-01	2-3
# ::node	0.1.1.1	work-01	8-9
# ::node	0.1.1.1.0	person	8-9
# ::node	0.1.1.1.1	construct-01	7-8
# ::root	0	inquest
(i / inquest 
      :ARG0-of (h / hear-01 
            :ARG1 (r2 / road)) 
      :ARG1-of (h2 / happen-01 
            :ARG0 (a / accident) 
            :ARG1-of (r / realize-01 
                  :ARG0 (p2 / person 
                        :ARG0-of (r3 / reverse-01) 
                        :ARG0-of (d / drive-01)) 
                  :ARG2-of (w / work-01 
                        :ARG0 (p / person) 
                        :ARG1 (c / construct-01)))))

# ::snt without being in any way domineering she was very good indeed she was winning the discussion with her grasp of detail she wasnt shouting anybody down she just made telling points you would have come to the conclusion that she wasnt there by accident
# ::tok without being in any way domineering she was very good indeed she was winning the discussion with her grasp of detail she wasnt shouting anybody down she just made telling points you would have come to the conclusion that she wasnt there by accident
# ::alignments 43-44|0.1.0.0.0 39-40|0.1 37-38|0 31-32|0.1.0.1.1.1 30-31|0.1.0.1.1.1.0.1 29-30|0.1.0.1.1.1.0 27-28|0.0 26-27|0.1.0.1.1.1.0.0 25-26|0.1.0.1.1.1.0.0.0 24-25|0.1.0.1.1.1.0.0.0.0 21-22|0.1.0.0.1 20-21|0.1.0.0 18-19|0.1.0 15-16|0.1.0.1.1 13-14|0.1.0.1 11-12|0.1.0.1.0 10-11|0.1.0.1.2 9-10|0.1.0.1.1.0.1.0 8-9|0.1.0.1.1.0.1 6-7|0.1.0.1.1.0.1.0.0 4-5|0.1.0.1.1.0 3-4|0.1.0.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:13.590
# ::node	0	conclude-01	37-38
# ::node	0.0	just	27-28
# ::node	0.1	she	39-40
# ::node	0.1.0	grasp-01	18-19
# ::node	0.1.0.0	detail-01	20-21
# ::node	0.1.0.0.0	accident	43-44
# ::node	0.1.0.0.1	she	21-22
# ::node	0.1.0.1	win-01	13-14
# ::node	0.1.0.1.0	she	11-12
# ::node	0.1.0.1.1	discuss-01	15-16
# ::node	0.1.0.1.1.0	way	4-5
# ::node	0.1.0.1.1.0.0	any	3-4
# ::node	0.1.0.1.1.0.1	very	8-9
# ::node	0.1.0.1.1.0.1.0	good	9-10
# ::node	0.1.0.1.1.0.1.0.0	she	6-7
# ::node	0.1.0.1.1.1	you	31-32
# ::node	0.1.0.1.1.1.0	tell-01	29-30
# ::node	0.1.0.1.1.1.0.0	she	26-27
# ::node	0.1.0.1.1.1.0.0.0	down	25-26
# ::node	0.1.0.1.1.1.0.0.0.0	anybody	24-25
# ::node	0.1.0.1.1.1.0.1	point	30-31
# ::node	0.1.0.1.2	indeed	10-11
# ::root	0	conclude-01
# ::edge	conclude-01	ARG0	just	0	0.0	
# ::edge	conclude-01	ARG1	she	0	0.1	
# ::edge	detail-01	ARG0	accident	0.1.0.0	0.1.0.0.0	
# ::edge	detail-01	ARG1	she	0.1.0.0	0.1.0.0.1	
# ::edge	discuss-01	ARG1	way	0.1.0.1.1	0.1.0.1.1.0	
# ::edge	discuss-01	ARG2	you	0.1.0.1.1	0.1.0.1.1.1	
# ::edge	down	op1	she	0.1.0.1.1.1.0.0.0	0.1.0.1.1.1.0.0	
# ::edge	down	path	anybody	0.1.0.1.1.1.0.0.0	0.1.0.1.1.1.0.0.0.0	
# ::edge	good	degree	very	0.1.0.1.1.0.1.0	0.1.0.1.1.0.1	
# ::edge	good	domain	she	0.1.0.1.1.0.1.0	0.1.0.1.1.0.1.0.0	
# ::edge	grasp-01	ARG0	she	0.1.0	0.1	
# ::edge	grasp-01	ARG1	detail-01	0.1.0	0.1.0.0	
# ::edge	tell-01	ARG0	she	0.1.0.1.1.1.0	0.1.0.1.1.1.0.0	
# ::edge	tell-01	ARG1	point	0.1.0.1.1.1.0	0.1.0.1.1.1.0.1	
# ::edge	tell-01	ARG3	you	0.1.0.1.1.1.0	0.1.0.1.1.1	
# ::edge	very	poss	way	0.1.0.1.1.0.1	0.1.0.1.1.0	
# ::edge	way	mod	any	0.1.0.1.1.0	0.1.0.1.1.0.0	
# ::edge	win-01	ARG0	she	0.1.0.1	0.1.0.1.0	
# ::edge	win-01	ARG1	discuss-01	0.1.0.1	0.1.0.1.1	
# ::edge	win-01	mod	indeed	0.1.0.1	0.1.0.1.2	
# ::edge	win-01	purpose	grasp-01	0.1.0.1	0.1.0	
(c / conclude-01 
      :ARG0 (j / just) 
      :ARG1 (s / she 
            :ARG0-of (g / grasp-01 
                  :ARG1 (d2 / detail-01 
                        :ARG0 (a / accident) 
                        :ARG1 (s3 / she)) 
                  :purpose-of (w / win-01 
                        :ARG0 (s4 / she) 
                        :ARG1 (d3 / discuss-01 
                              :ARG1 (w2 / way 
                                    :mod (a3 / any) 
                                    :poss-of (v / very 
                                          :degree-of (g2 / good 
                                                :domain (s5 / she)))) 
                              :ARG2 (y / you 
                                    :ARG3-of (t / tell-01 
                                          :ARG0 (s2 / she 
                                                :op-of (d / down 
                                                      :path (a2 / anybody))) 
                                          :ARG1 (p / point)))) 
                        :mod (i / indeed)))))

# ::snt there have been 23 injury accidents in bretch hill in the last five years
# ::tok there have been 23 injury accidents in bretch hill in the last five years
# ::alignments 13-14|0.0.1+0.0 12-13|0.0.0 11-12|0.0.1.0 5-6|0.1 4-5|0 3-4|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:13.614
# ::node	0	injure-01	4-5
# ::node	0.0	temporal-quantity	13-14
# ::node	0.0.0	5	12-13
# ::node	0.0.1	year	13-14
# ::node	0.0.1.0	last	11-12
# ::node	0.1	accident	5-6
# ::node	0.2	23	3-4
# ::root	0	injure-01
# ::edge	accident	mod	injure-01	0.1	0	
# ::edge	injure-01	ARG1	temporal-quantity	0	0.0	
# ::edge	injure-01	quant	23	0	0.2	
# ::edge	temporal-quantity	quant	5	0.0	0.0.0	
# ::edge	temporal-quantity	unit	year	0.0	0.0.1	
# ::edge	year	mod	last	0.0.1	0.0.1.0	
(i / injure-01 
      :ARG1 (t / temporal-quantity 
            :quant 5 
            :unit (y / year 
                  :mod (l / last))) 
      :mod-of (a / accident) 
      :quant 23)

# ::snt but through injury and nonavailability accident and design they fall short of the lions reunited
# ::tok but through injury and nonavailability accident and design they fall short of the lions reunited
# ::alignments 14-15|0.0.0.1.0 10-11|0.0.0.0.0 8-9|0.0.0.0 7-8|0.0.0 6-7|0.0.0.1 5-6|0.0.0.1.1 3-4|0.0 2-3|0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:13.672
# ::node	0	contrast-01	0-1
# ::node	0.0	and	3-4
# ::node	0.0.0	design-01	7-8
# ::node	0.0.0.0	they	8-9
# ::node	0.0.0.0.0	short	10-11
# ::node	0.0.0.1	and	6-7
# ::node	0.0.0.1.0	reunite-01	14-15
# ::node	0.0.0.1.1	accident	5-6
# ::node	0.1	injure-01	2-3
# ::root	0	contrast-01
# ::edge	and	op1	accident	0.0.0.1	0.0.0.1.1	
# ::edge	and	op1	design-01	0.0	0.0.0	
# ::edge	and	op2	design-01	0.0.0.1	0.0.0	
# ::edge	contrast-01	ARG1	and	0	0.0	
# ::edge	contrast-01	ARG2	injure-01	0	0.1	
# ::edge	design-01	ARG1	they	0.0.0	0.0.0.0	
# ::edge	reunite-01	ARG0	and	0.0.0.1.0	0.0.0.1	
# ::edge	short	domain	they	0.0.0.0.0	0.0.0.0	
(c / contrast-01 
      :ARG1 (a3 / and 
            :op1 (d / design-01 
                  :ARG1 (t / they 
                        :domain-of (s / short)) 
                  :op-of (a / and 
                        :ARG0-of (r / reunite-01) 
                        :op1 (a2 / accident)))) 
      :ARG2 (i / injure-01))

# ::snt his personal representatives had accepted that he was to blame for the accident in which 13 died
# ::tok his personal representatives had accepted that he was to blame for the accident in which 13 died
# ::alignments 16-17|0.0.0.0.0 15-16|0.0.0.0.0.0 12-13|0.0.0.0 9-10|0.0.0 6-7|0.0 4-5|0 2-3|0.1.0+0.1 1-2|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:13.849
# ::node	0	accept-01	4-5
# ::node	0.0	he	6-7
# ::node	0.0.0	blame-01	9-10
# ::node	0.0.0.0	accident	12-13
# ::node	0.0.0.0.0	die-01	16-17
# ::node	0.0.0.0.0.0	13	15-16
# ::node	0.1	person	2-3
# ::node	0.1.0	represent-01	2-3
# ::node	0.1.1	personal	1-2
# ::root	0	accept-01
# ::edge	accept-01	ARG0	he	0	0.0	
# ::edge	accept-01	ARG1	person	0	0.1	
# ::edge	blame-01	ARG0	he	0.0.0	0.0	
# ::edge	blame-01	ARG1	accident	0.0.0	0.0.0.0	
# ::edge	die-01	ARG0	13	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	die-01	ARG1	accident	0.0.0.0.0	0.0.0.0	
# ::edge	person	mod	personal	0.1	0.1.1	
# ::edge	represent-01	ARG0	person	0.1.0	0.1	
(a2 / accept-01 
      :ARG0 (h / he 
            :ARG0-of (b / blame-01 
                  :ARG1 (a / accident 
                        :ARG1-of (d / die-01 
                              :ARG0 13)))) 
      :ARG1 (p / person 
            :ARG0-of (r / represent-01) 
            :mod (p2 / personal)))

# ::snt   gerhard berger claimed prost had turned into senna but jackie stewart present in adelaide as a television commentator said the accident demonstrated the one small flaw in sennas character
# ::tok gerhard berger claimed prost had turned into senna but jackie stewart present in adelaide as a television commentator said the accident demonstrated the one small flaw in sennas character
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:13.849
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt then i had an accident injuring my back
# ::tok then i had an accident injuring my back
# ::alignments 7-8|0 4-5|0.0 1-2|0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:13.859
# ::node	0	back	7-8
# ::node	0.0	accident	4-5
# ::node	0.0.0	i	1-2
# ::node	0.0.0.0	then	0-1
# ::root	0	back
# ::edge	accident	example	i	0.0	0.0.0	
# ::edge	back	poss	accident	0	0.0	
# ::edge	i	mod	then	0.0.0	0.0.0.0	
(b / back 
      :poss (a / accident 
            :example (i / i 
                  :mod (t / then))))

# ::snt in buckinghamshire on the a four one three at dunton turn between winslow and whitchurch the tailbacks there caused by an earlier accident involving a car on fire, are easing now and vocal soundum should be clear in the next few minutes due to the accident having been cleared from the carriageway
# ::tok in buckinghamshire on the a four one three at dunton turn between winslow and whitchurch the tailbacks there caused by an earlier accident involving a car on fire , are easing now and vocal soundum should be clear in the next few minutes due to the accident having been cleared from the carriageway
# ::alignments 49-50|0.3.0 46-47|0.3.0.0 42-43|0.3.2.0.1+0.3.2.0 41-42|0.3.2.0.0 40-41|0.3.2.0.1.0 37-38|0.3.2 35-36|0.3.1 33-34|0.0 32-33|0.3 31-32|0.3.3 25-26|0.1.0.1 23-24|0.1.0 22-23|0.1 21-22|0.1.1 18-19|0 13-14|0.3.1.0 11-12|0.3.1.0.0 7-8|0.1.0.0 5-6|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:14.281
# ::node	0	cause-01	18-19
# ::node	0.0	vocal	33-34
# ::node	0.1	accident	22-23
# ::node	0.1.0	involve-01	23-24
# ::node	0.1.0.0	3	7-8
# ::node	0.1.0.1	car	25-26
# ::node	0.1.1	early	21-22
# ::node	0.2	4	5-6
# ::node	0.3	and	32-33
# ::node	0.3.0	clear-01	49-50
# ::node	0.3.0.0	accident	46-47
# ::node	0.3.1	recommend-01	35-36
# ::node	0.3.1.0	and	13-14
# ::node	0.3.1.0.0	between	11-12
# ::node	0.3.2	clear	37-38
# ::node	0.3.2.0	temporal-quantity	42-43
# ::node	0.3.2.0.0	few	41-42
# ::node	0.3.2.0.1	minute	42-43
# ::node	0.3.2.0.1.0	next	40-41
# ::node	0.3.3	now	31-32
# ::root	0	cause-01
# ::edge	4	op1	cause-01	0.2	0	
# ::edge	accident	mod	early	0.1	0.1.1	
# ::edge	and	op1	between	0.3.1.0	0.3.1.0.0	
# ::edge	and	op1	cause-01	0.3	0	
# ::edge	and	op2	recommend-01	0.3	0.3.1	
# ::edge	and	op3	clear	0.3	0.3.2	
# ::edge	and	time	now	0.3	0.3.3	
# ::edge	cause-01	ARG0	vocal	0	0.0	
# ::edge	cause-01	ARG1	accident	0	0.1	
# ::edge	clear-01	ARG0	and	0.3.0	0.3	
# ::edge	clear-01	ARG1	accident	0.3.0	0.3.0.0	
# ::edge	few	op1	temporal-quantity	0.3.2.0.0	0.3.2.0	
# ::edge	involve-01	ARG0	3	0.1.0	0.1.0.0	
# ::edge	involve-01	ARG1	car	0.1.0	0.1.0.1	
# ::edge	involve-01	ARG2	accident	0.1.0	0.1	
# ::edge	minute	mod	next	0.3.2.0.1	0.3.2.0.1.0	
# ::edge	recommend-01	ARG1	and	0.3.1	0.3.1.0	
# ::edge	temporal-quantity	quant	clear	0.3.2.0	0.3.2	
# ::edge	temporal-quantity	unit	minute	0.3.2.0	0.3.2.0.1	
(c4 / cause-01 
      :ARG0 (v / vocal) 
      :ARG1 (a3 / accident 
            :ARG2-of (i / involve-01 
                  :ARG0 3 
                  :ARG1 (c3 / car)) 
            :mod (e / early)) 
      :op-of 4 
      :op-of (a2 / and 
            :ARG0-of (c / clear-01 
                  :ARG1 (a / accident)) 
            :op1 (r / recommend-01 
                  :ARG1 (a4 / and 
                        :op1 (b / between))) 
            :op2 (c2 / clear 
                  :quant-of (t / temporal-quantity 
                        :op-of (f / few) 
                        :unit (m / minute 
                              :mod (n / next)))) 
            :time (n2 / now)))

# ::snt at the town of chernobyl about 10 miles from the power station we were given a briefing by members of the special kombinat organisation which handles the enormous task of controlling the exclusion zone organising radiation checks and dumping the radioactive waste produced by the accident
# ::tok at the town of chernobyl about 10 miles from the power station we were given a briefing by members of the special kombinat organisation which handles the enormous task of controlling the exclusion zone organising radiation checks and dumping the radioactive waste produced by the accident
# ::alignments 45-46|0.1.0 42-43|0.1 41-42|0 40-41|0.3 37-38|0.2.0 36-37|0.0 35-36|0.0.0 34-35|0.2 33-34|0.2.0.0.1 32-33|0.2.0.0.1.0 30-31|0.2.0.0 28-29|0.2.0.0.0 27-28|0.2.0.0.0.0 23-24|0.2.0.0.0.1 21-22|0.2.0.0.0.1.1 18-19|0.2.0.0.0.1.0.1+0.2.0.0.0.1.0 16-17|0.2.0.0.0.1.0.0.0.0 14-15|0.2.0.0.0.1.0.0.0 12-13|0.2.0.0.0.1.0.0 11-12|0.2.0.0.1.0.0 10-11|0.2.0.0.1.0.0.0 7-8|0.2.0.0.0.1.0.0.0.0.0.1+0.2.0.0.0.1.0.0.0.0.0 6-7|0.2.0.0.0.1.0.0.0.0.0.0 2-3|0.2.0.0.0.1.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:15.192
# ::node	0	waste-01	41-42
# ::node	0.0	check-01	36-37
# ::node	0.0.0	radiation	35-36
# ::node	0.1	produce-01	42-43
# ::node	0.1.0	accident	45-46
# ::node	0.2	organize-01	34-35
# ::node	0.2.0	and	37-38
# ::node	0.2.0.0	control-01	30-31
# ::node	0.2.0.0.0	task	28-29
# ::node	0.2.0.0.0.0	enormous	27-28
# ::node	0.2.0.0.0.1	organize-01	23-24
# ::node	0.2.0.0.0.1.0	have-org-role-91	18-19
# ::node	0.2.0.0.0.1.0.0	we	12-13
# ::node	0.2.0.0.0.1.0.0.0	give-01	14-15
# ::node	0.2.0.0.0.1.0.0.0.0	brief-01	16-17
# ::node	0.2.0.0.0.1.0.0.0.0.0	distance-quantity	7-8
# ::node	0.2.0.0.0.1.0.0.0.0.0.0	10	6-7
# ::node	0.2.0.0.0.1.0.0.0.0.0.1	mile	7-8
# ::node	0.2.0.0.0.1.0.0.0.0.1	town	2-3
# ::node	0.2.0.0.0.1.0.1	member	18-19
# ::node	0.2.0.0.0.1.1	special	21-22
# ::node	0.2.0.0.1	zone	33-34
# ::node	0.2.0.0.1.0	exclude-01	32-33
# ::node	0.2.0.0.1.0.0	station	11-12
# ::node	0.2.0.0.1.0.0.0	power	10-11
# ::node	0.3	radioactive	40-41
# ::root	0	waste-01
# ::edge	and	condition	organize-01	0.2.0	0.2	
# ::edge	and	op1	control-01	0.2.0	0.2.0.0	
# ::edge	brief-01	ARG0	distance-quantity	0.2.0.0.0.1.0.0.0.0	0.2.0.0.0.1.0.0.0.0.0	
# ::edge	brief-01	ARG1	town	0.2.0.0.0.1.0.0.0.0	0.2.0.0.0.1.0.0.0.0.1	
# ::edge	check-01	ARG1	radiation	0.0	0.0.0	
# ::edge	control-01	ARG0	task	0.2.0.0	0.2.0.0.0	
# ::edge	control-01	ARG1	zone	0.2.0.0	0.2.0.0.1	
# ::edge	distance-quantity	quant	10	0.2.0.0.0.1.0.0.0.0.0	0.2.0.0.0.1.0.0.0.0.0.0	
# ::edge	distance-quantity	unit	mile	0.2.0.0.0.1.0.0.0.0.0	0.2.0.0.0.1.0.0.0.0.0.1	
# ::edge	exclude-01	ARG1	station	0.2.0.0.1.0	0.2.0.0.1.0.0	
# ::edge	give-01	ARG1	brief-01	0.2.0.0.0.1.0.0.0	0.2.0.0.0.1.0.0.0.0	
# ::edge	give-01	ARG2	we	0.2.0.0.0.1.0.0.0	0.2.0.0.0.1.0.0	
# ::edge	have-org-role-91	ARG0	we	0.2.0.0.0.1.0	0.2.0.0.0.1.0.0	
# ::edge	have-org-role-91	ARG1	organize-01	0.2.0.0.0.1.0	0.2.0.0.0.1	
# ::edge	have-org-role-91	ARG2	member	0.2.0.0.0.1.0	0.2.0.0.0.1.0.1	
# ::edge	organize-01	ARG1	waste-01	0.2	0	
# ::edge	organize-01	mod	special	0.2.0.0.0.1	0.2.0.0.0.1.1	
# ::edge	produce-01	ARG0	accident	0.1	0.1.0	
# ::edge	produce-01	ARG1	waste-01	0.1	0	
# ::edge	station	mod	power	0.2.0.0.1.0.0	0.2.0.0.1.0.0.0	
# ::edge	task	mod	enormous	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	task	op1	organize-01	0.2.0.0.0	0.2.0.0.0.1	
# ::edge	waste-01	ARG1	check-01	0	0.0	
# ::edge	waste-01	mod	radioactive	0	0.3	
# ::edge	zone	mod	exclude-01	0.2.0.0.1	0.2.0.0.1.0	
(w / waste-01 
      :ARG1 (c / check-01 
            :ARG1 (r2 / radiation)) 
      :ARG1-of (p / produce-01 
            :ARG0 (a / accident)) 
      :ARG1-of (o / organize-01 
            :condition-of (a2 / and 
                  :op1 (c2 / control-01 
                        :ARG0 (t / task 
                              :mod (e2 / enormous) 
                              :op1 (o2 / organize-01 
                                    :ARG1-of (h / have-org-role-91 
                                          :ARG0 (w2 / we 
                                                :ARG2-of (g / give-01 
                                                      :ARG1 (b / brief-01 
                                                            :ARG0 (d / distance-quantity 
                                                                  :quant 10 
                                                                  :unit (m2 / mile)) 
                                                            :ARG1 (t2 / town)))) 
                                          :ARG2 (m / member)) 
                                    :mod (s / special))) 
                        :ARG1 (z / zone 
                              :mod (e / exclude-01 
                                    :ARG1 (s2 / station 
                                          :mod (p2 / power))))))) 
      :mod (r / radioactive))

# ::snt the accident happened in middleton stoney road in bicester and surprised residents in tubbs close who found the car in the garden
# ::tok the accident happened in middleton stoney road in bicester and surprised residents in tubbs close who found the car in the garden
# ::alignments 21-22|0.1.0.0.0.0.1 18-19|0.1.0.0.0.0.0 16-17|0.1.0.0.0.0 11-12|0.0.0+0.0 10-11|0 9-10|0.1 6-7|0.1.0 2-3|0.1.0.0 1-2|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:15.301
# ::node	0	surprise-01	10-11
# ::node	0.0	person	11-12
# ::node	0.0.0	reside-01	11-12
# ::node	0.1	and	9-10
# ::node	0.1.0	road	6-7
# ::node	0.1.0.0	happen-01	2-3
# ::node	0.1.0.0.0	accident	1-2
# ::node	0.1.0.0.0.0	find-01	16-17
# ::node	0.1.0.0.0.0.0	car	18-19
# ::node	0.1.0.0.0.0.1	garden	21-22
# ::root	0	surprise-01
# ::edge	and	consist	road	0.1	0.1.0	
# ::edge	and	op1	surprise-01	0.1	0	
# ::edge	find-01	ARG0	accident	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	find-01	ARG1	car	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	find-01	location	garden	0.1.0.0.0.0	0.1.0.0.0.0.1	
# ::edge	happen-01	ARG1	accident	0.1.0.0	0.1.0.0.0	
# ::edge	happen-01	ARG2	road	0.1.0.0	0.1.0	
# ::edge	reside-01	ARG0	person	0.0.0	0.0	
# ::edge	surprise-01	ARG1	person	0	0.0	
(s / surprise-01 
      :ARG1 (p / person 
            :ARG0-of (r / reside-01)) 
      :op-of (a / and 
            :consist (r2 / road 
                  :ARG2-of (h / happen-01 
                        :ARG1 (a2 / accident 
                              :ARG0-of (f / find-01 
                                    :ARG1 (c / car) 
                                    :location (g / garden)))))))

# ::snt he cites the example of one man who in three months lost his son in a skiing accident his wife who mourned herself to death and saw his architectural practice collapse
# ::tok he cites the example of one man who in three months lost his son in a skiing accident his wife who mourned herself to death and saw his architectural practice collapse
# ::alignments 30-31|0.0.1 29-30|0.0.2.0 26-27|0.0 25-26|0 24-25|0.0.2 19-20|0.0.0.1+0.0.0 17-18|0.0.0.2.1.0.0 13-14|0.0.0.2.1+0.0.0.2.1.0 11-12|0.0.0.2 10-11|0.0.1.0.0.0+0.0.1.0.0 9-10|0.0.1.0 6-7|0.0.0.2.0 3-4|0.0.0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:15.541
# ::node	0	and	25-26
# ::node	0.0	see-01	26-27
# ::node	0.0.0	have-rel-role-91	19-20
# ::node	0.0.0.0	he	0-1
# ::node	0.0.0.0.0	example	3-4
# ::node	0.0.0.1	wife	19-20
# ::node	0.0.0.2	lose-02	11-12
# ::node	0.0.0.2.0	man	6-7
# ::node	0.0.0.2.1	son	13-14
# ::node	0.0.0.2.1.0	have-rel-role-91	13-14
# ::node	0.0.0.2.1.0.0	accident	17-18
# ::node	0.0.1	collapse-01	30-31
# ::node	0.0.1.0	3	9-10
# ::node	0.0.1.0.0	temporal-quantity	10-11
# ::node	0.0.1.0.0.0	month	10-11
# ::node	0.0.2	die-01	24-25
# ::node	0.0.2.0	practice-01	29-30
# ::root	0	and
# ::edge	and	op1	see-01	0	0.0	
# ::edge	collapse-01	ARG1	3	0.0.1	0.0.1.0	
# ::edge	die-01	ARG1	practice-01	0.0.2	0.0.2.0	
# ::edge	example	ARG0	he	0.0.0.0.0	0.0.0.0	
# ::edge	have-rel-role-91	ARG1	accident	0.0.0.2.1.0	0.0.0.2.1.0.0	
# ::edge	have-rel-role-91	ARG1	he	0.0.0	0.0.0.0	
# ::edge	have-rel-role-91	ARG2	son	0.0.0.2.1.0	0.0.0.2.1	
# ::edge	have-rel-role-91	ARG2	wife	0.0.0	0.0.0.1	
# ::edge	lose-02	ARG0	man	0.0.0.2	0.0.0.2.0	
# ::edge	lose-02	ARG1	son	0.0.0.2	0.0.0.2.1	
# ::edge	lose-02	time	have-rel-role-91	0.0.0.2	0.0.0	
# ::edge	see-01	ARG0	have-rel-role-91	0.0	0.0.0	
# ::edge	see-01	ARG1	collapse-01	0.0	0.0.1	
# ::edge	see-01	ARG3	die-01	0.0	0.0.2	
# ::edge	temporal-quantity	quant	3	0.0.1.0.0	0.0.1.0	
# ::edge	temporal-quantity	unit	month	0.0.1.0.0	0.0.1.0.0.0	
(a / and 
      :op1 (s / see-01 
            :ARG0 (h / have-rel-role-91 
                  :ARG1 (h3 / he 
                        :ARG0-of (e / example)) 
                  :ARG2 (w / wife) 
                  :time-of (l / lose-02 
                        :ARG0 (m2 / man) 
                        :ARG1 (s2 / son 
                              :ARG2-of (h2 / have-rel-role-91 
                                    :ARG1 (a2 / accident))))) 
            :ARG1 (c / collapse-01 
                  :ARG1 (3 / 3 
                        :quant-of (t / temporal-quantity 
                              :unit (m / month)))) 
            :ARG3 (d / die-01 
                  :ARG1 (p / practice-01))))

# ::snt interpreters ambulancemen policemen doctors and nurses have to know about each others roles and responsibilities before the accident
# ::tok interpreters ambulancemen policemen doctors and nurses have to know about each others roles and responsibilities before the accident
# ::alignments 17-18|0.2.0.0.1.0 15-16|0.2.0.0.1 14-15|0.2.0.0.0.0+0.2.0.0.0 13-14|0.2.0.0 12-13|0.2.0 11-12|0.2.1 10-11|0.2.1.0 8-9|0.2 5-6|0.1 4-5|0 3-4|0.0 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:15.664
# ::node	0	and	4-5
# ::node	0.0	doctor	3-4
# ::node	0.0.0	policeman	2-3
# ::node	0.1	nurse	5-6
# ::node	0.2	know-01	8-9
# ::node	0.2.0	role	12-13
# ::node	0.2.0.0	and	13-14
# ::node	0.2.0.0.0	thing	14-15
# ::node	0.2.0.0.0.0	responsible-41	14-15
# ::node	0.2.0.0.1	before	15-16
# ::node	0.2.0.0.1.0	accident	17-18
# ::node	0.2.1	other	11-12
# ::node	0.2.1.0	each	10-11
# ::root	0	and
# ::edge	and	op1	doctor	0	0.0	
# ::edge	and	op1	role	0.2.0.0	0.2.0	
# ::edge	and	op2	nurse	0	0.1	
# ::edge	and	op2	thing	0.2.0.0	0.2.0.0.0	
# ::edge	and	op3	know-01	0	0.2	
# ::edge	and	time	before	0.2.0.0	0.2.0.0.1	
# ::edge	before	op1	accident	0.2.0.0.1	0.2.0.0.1.0	
# ::edge	doctor	mod	policeman	0.0	0.0.0	
# ::edge	know-01	ARG0	role	0.2	0.2.0	
# ::edge	know-01	ARG1	other	0.2	0.2.1	
# ::edge	other	mod	each	0.2.1	0.2.1.0	
# ::edge	responsible-41	ARG2	thing	0.2.0.0.0.0	0.2.0.0.0	
(a3 / and 
      :op1 (d / doctor 
            :mod (p / policeman)) 
      :op2 (n / nurse) 
      :op3 (k / know-01 
            :ARG0 (r2 / role 
                  :op-of (a2 / and 
                        :op1 (t / thing 
                              :ARG2-of (r / responsible-41)) 
                        :time (b / before 
                              :op1 (a / accident)))) 
            :ARG1 (o / other 
                  :mod (e / each))))

# ::snt to be involved as driver in an accident not least with absentminded pedestrians would not be pleasant
# ::tok to be involved as driver in an accident not least with absentminded pedestrians would not be pleasant
# ::alignments 16-17|0.0.1 7-8|0.0.0.0 4-5|0.0.0+0.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:15.682
# ::node	0	involve-01	2-3
# ::node	0.0	person	4-5
# ::node	0.0.0	drive-01	4-5
# ::node	0.0.0.0	accident	7-8
# ::node	0.0.1	pleasant-41	16-17
# ::root	0	involve-01
# ::edge	drive-01	ARG0	person	0.0.0	0.0	
# ::edge	drive-01	ARG1	accident	0.0.0	0.0.0.0	
# ::edge	involve-01	ARG1	person	0	0.0	
# ::edge	pleasant-41	ARG1	person	0.0.1	0.0	
(i / involve-01 
      :ARG1 (p2 / person 
            :ARG0-of (d / drive-01 
                  :ARG1 (a / accident)) 
            :ARG1-of (p / pleasant-41)))

# ::snt in our halfhour chat i meet little brother he always comes in when you want to shag your girlfriend the gits they like looking through the obituaries and camping out next to accident black spots lee and lance a couple of garage owners they spend all their time putting garfield stickers on cars and euroman as far as hes concerned the europarliament is just one big amsterdam squat
# ::tok in our halfhour chat i meet little brother he always comes in when you want to shag your girlfriend the gits they like looking through the obituaries and camping out next to accident black spots lee and lance a couple of garage owners they spend all their time putting garfield stickers on cars and euroman as far as hes concerned the europarliament is just one big amsterdam squat
# ::alignments 65-66|0.2.0.0.0.0.0.1 63-64|0.2.0.0.0.0.0.2 59-60|0.0 56-57|0.1 53-54|0.2.0.0.1.0 52-53|0.2.0.0.1 48-49|0.2.0.0 47-48|0.2.0.0.0 45-46|0.2.0.0.0.1 44-45|0.2.0.0.0.0.0 43-44|0.2.0.0.0.0 42-43|0.3.0+0.3 41-42|0.3.0.0 39-40|0.2.0.0.0.0.0.0 36-37|0 34-35|0.0.0 33-34|0.0.0.0 32-33|0.0.0.1.0 30-31|0.0.0.1 28-29|0.2.0.1.0.0 27-28|0.2.0.1.0.0.1 21-22|0.2.0.1.0 18-19|0.2.0.1.1+0.2.0.1 16-17|0.2.1 14-15|0.2 13-14|0.2.0 9-10|0.2.0.1.0.0.1.0.0 8-9|0.2.2 7-8|0.2.2.0.1+0.2.2.0 6-7|0.2.0.1.0.0.0 4-5|0.2.2.0.0 3-4|0.2.0.1.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:19.810
# ::node	0	and	36-37
# ::node	0.0	concern-01	59-60
# ::node	0.0.0	spot	34-35
# ::node	0.0.0.0	black	33-34
# ::node	0.0.0.1	next	30-31
# ::node	0.0.0.1.0	accident	32-33
# ::node	0.1	far	56-57
# ::node	0.2	want-01	14-15
# ::node	0.2.0	you	13-14
# ::node	0.2.0.0	put-01	48-49
# ::node	0.2.0.0.0	time	47-48
# ::node	0.2.0.0.0.0	they	43-44
# ::node	0.2.0.0.0.0.0	spend-01	44-45
# ::node	0.2.0.0.0.0.0.0	couple	39-40
# ::node	0.2.0.0.0.0.0.1	big	65-66
# ::node	0.2.0.0.0.0.0.2	just	63-64
# ::node	0.2.0.0.0.1	all	45-46
# ::node	0.2.0.0.1	car	52-53
# ::node	0.2.0.0.1.0	and	53-54
# ::node	0.2.0.1	have-rel-role-91	18-19
# ::node	0.2.0.1.0	they	21-22
# ::node	0.2.0.1.0.0	camp-01	28-29
# ::node	0.2.0.1.0.0.0	little	6-7
# ::node	0.2.0.1.0.0.1	and	27-28
# ::node	0.2.0.1.0.0.1.0	chat-01	3-4
# ::node	0.2.0.1.0.0.1.0.0	always	9-10
# ::node	0.2.0.1.1	girlfriend	18-19
# ::node	0.2.1	shag	16-17
# ::node	0.2.2	he	8-9
# ::node	0.2.2.0	have-rel-role-91	7-8
# ::node	0.2.2.0.0	i	4-5
# ::node	0.2.2.0.1	brother	7-8
# ::node	0.3	person	42-43
# ::node	0.3.0	own-01	42-43
# ::node	0.3.0.0	garage	41-42
# ::root	0	and
# ::edge	and	manner	far	0	0.1	
# ::edge	and	op1	car	0.2.0.0.1.0	0.2.0.0.1	
# ::edge	and	op1	chat-01	0.2.0.1.0.0.1	0.2.0.1.0.0.1.0	
# ::edge	and	op1	want-01	0	0.2	
# ::edge	and	op2	camp-01	0.2.0.1.0.0.1	0.2.0.1.0.0	
# ::edge	and	op2	person	0	0.3	
# ::edge	big	op1	spend-01	0.2.0.0.0.0.0.1	0.2.0.0.0.0.0	
# ::edge	camp-01	ARG0	they	0.2.0.1.0.0	0.2.0.1.0	
# ::edge	camp-01	ARG1	little	0.2.0.1.0.0	0.2.0.1.0.0.0	
# ::edge	chat-01	ARG1	always	0.2.0.1.0.0.1.0	0.2.0.1.0.0.1.0.0	
# ::edge	concern-01	ARG0	and	0.0	0	
# ::edge	concern-01	ARG1	spot	0.0	0.0.0	
# ::edge	have-rel-role-91	ARG0	he	0.2.2.0	0.2.2	
# ::edge	have-rel-role-91	ARG0	they	0.2.0.1	0.2.0.1.0	
# ::edge	have-rel-role-91	ARG1	i	0.2.2.0	0.2.2.0.0	
# ::edge	have-rel-role-91	ARG1	you	0.2.0.1	0.2.0	
# ::edge	have-rel-role-91	ARG2	brother	0.2.2.0	0.2.2.0.1	
# ::edge	have-rel-role-91	ARG2	girlfriend	0.2.0.1	0.2.0.1.1	
# ::edge	just	op1	spend-01	0.2.0.0.0.0.0.2	0.2.0.0.0.0.0	
# ::edge	next	domain	accident	0.0.0.1	0.0.0.1.0	
# ::edge	next	prep-to	spot	0.0.0.1	0.0.0	
# ::edge	own-01	ARG0	person	0.3.0	0.3	
# ::edge	own-01	ARG1	garage	0.3.0	0.3.0.0	
# ::edge	put-01	ARG0	you	0.2.0.0	0.2.0	
# ::edge	put-01	ARG1	time	0.2.0.0	0.2.0.0.0	
# ::edge	put-01	ARG2	car	0.2.0.0	0.2.0.0.1	
# ::edge	spend-01	ARG0	they	0.2.0.0.0.0.0	0.2.0.0.0.0	
# ::edge	spend-01	ARG1	couple	0.2.0.0.0.0.0	0.2.0.0.0.0.0.0	
# ::edge	spot	mod	black	0.0.0	0.0.0.0	
# ::edge	time	poss	they	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	time	quant	all	0.2.0.0.0	0.2.0.0.0.1	
# ::edge	want-01	ARG0	you	0.2	0.2.0	
# ::edge	want-01	ARG1	shag	0.2	0.2.1	
# ::edge	want-01	time	he	0.2	0.2.2	
(a3 / and 
      :ARG0-of (c / concern-01 
            :ARG1 (s2 / spot 
                  :mod (b2 / black) 
                  :prep-to-of (n / next 
                        :domain (a4 / accident)))) 
      :manner (f / far) 
      :op1 (w / want-01 
            :ARG0 (y / you 
                  :ARG0-of (p / put-01 
                        :ARG1 (t / time 
                              :poss (t2 / they 
                                    :ARG0-of (s / spend-01 
                                          :ARG1 (c3 / couple) 
                                          :op-of (b / big) 
                                          :op-of (j / just))) 
                              :quant (a2 / all)) 
                        :ARG2 (c2 / car 
                              :op-of (a / and))) 
                  :ARG1-of (h / have-rel-role-91 
                        :ARG0 (t3 / they 
                              :ARG0-of (c4 / camp-01 
                                    :ARG1 (l / little) 
                                    :op-of (a5 / and 
                                          :op1 (c5 / chat-01 
                                                :ARG1 (a6 / always))))) 
                        :ARG2 (g2 / girlfriend))) 
            :ARG1 (s3 / shag) 
            :time (h2 / he 
                  :ARG0-of (h3 / have-rel-role-91 
                        :ARG1 (i / i) 
                        :ARG2 (b3 / brother)))) 
      :op2 (p2 / person 
            :ARG0-of (o / own-01 
                  :ARG1 (g / garage))))

# ::snt a 19yearold banbury man has been fined 300 for careless driving following an accident in which a woman died
# ::tok a 19yearold banbury man has been fined 300 for careless driving following an accident in which a woman died
# ::alignments 18-19|0.0.0.0.0 17-18|0.0.0.0.0.0 13-14|0.0.0.0 10-11|0.0.0 9-10|0.0.0.1 7-8|0.0.0.1.0 6-7|0 3-4|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:19.941
# ::node	0	fine-01	6-7
# ::node	0.0	man	3-4
# ::node	0.0.0	drive-01	10-11
# ::node	0.0.0.0	accident	13-14
# ::node	0.0.0.0.0	die-01	18-19
# ::node	0.0.0.0.0.0	woman	17-18
# ::node	0.0.0.1	care-01	9-10
# ::node	0.0.0.1.0	300	7-8
# ::root	0	fine-01
# ::edge	accident	mod	die-01	0.0.0.0	0.0.0.0.0	
# ::edge	care-01	ARG0	300	0.0.0.1	0.0.0.1.0	
# ::edge	care-01	ARG1	drive-01	0.0.0.1	0.0.0	
# ::edge	die-01	ARG1	woman	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	drive-01	ARG0	man	0.0.0	0.0	
# ::edge	drive-01	ARG1	accident	0.0.0	0.0.0.0	
# ::edge	fine-01	ARG1	man	0	0.0	
(f / fine-01 
      :ARG1 (m / man 
            :ARG0-of (d2 / drive-01 
                  :ARG1 (a / accident 
                        :mod (d / die-01 
                              :ARG1 (w / woman))) 
                  :ARG1-of (c / care-01 
                        :ARG0 300))))

# ::snt pedestrian peter berry 18 of rookery close banbury was treated for concussion cuts and bruises after the accident at the junction of broad street and george street on saturday at 11pm
# ::tok pedestrian peter berry 18 of rookery close banbury was treated for concussion cuts and bruises after the accident at the junction of broad street and george street on saturday at 11pm
# ::alignments 28-29|0.0.0.0.2 26-27|0.2 24-25|0 23-24|0.1 22-23|0.0.0.0.0 17-18|0.0 15-16|0.0.0 13-14|0.0.0.0.1 12-13|0.0.0.0.1.0 9-10|0.0.0.0 3-4|0.0.0.0.1.0.0 0-1|0.0.0.0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:20.068
# ::node	0	and	24-25
# ::node	0.0	accident	17-18
# ::node	0.0.0	after	15-16
# ::node	0.0.0.0	treat-01	9-10
# ::node	0.0.0.0.0	broad	22-23
# ::node	0.0.0.0.1	and	13-14
# ::node	0.0.0.0.1.0	cut-02	12-13
# ::node	0.0.0.0.1.0.0	18	3-4
# ::node	0.0.0.0.1.0.1	pedestrian	0-1
# ::node	0.0.0.0.2	saturday	28-29
# ::node	0.1	street	23-24
# ::node	0.2	street	26-27
# ::root	0	and
# ::edge	accident	example	and	0.0	0	
# ::edge	after	op1	accident	0.0.0	0.0	
# ::edge	and	op1	cut-02	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	and	op1	street	0	0.1	
# ::edge	and	op2	street	0	0.2	
# ::edge	cut-02	ARG0	18	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	cut-02	ARG1	pedestrian	0.0.0.0.1.0	0.0.0.0.1.0.1	
# ::edge	treat-01	ARG0	broad	0.0.0.0	0.0.0.0.0	
# ::edge	treat-01	ARG1	and	0.0.0.0	0.0.0.0.1	
# ::edge	treat-01	ARG2	saturday	0.0.0.0	0.0.0.0.2	
# ::edge	treat-01	time	after	0.0.0.0	0.0.0	
(a / and 
      :example-of (a2 / accident 
            :op-of (a3 / after 
                  :time-of (t / treat-01 
                        :ARG0 (b / broad) 
                        :ARG1 (a4 / and 
                              :op1 (c / cut-02 
                                    :ARG0 18 
                                    :ARG1 (p / pedestrian))) 
                        :ARG2 (s / saturday)))) 
      :op1 (s3 / street) 
      :op2 (s2 / street))

# ::snt by some curious accident those named in the report were exclusively conservative
# ::tok by some curious accident those named in the report were exclusively conservative
# ::alignments 11-12|0.0.0.0 10-11|0.0.0.0.0 8-9|0 3-4|0.0.0 2-3|0.0 1-2|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:20.085
# ::node	0	report	8-9
# ::node	0.0	curious-41	2-3
# ::node	0.0.0	accident	3-4
# ::node	0.0.0.0	conservative	11-12
# ::node	0.0.0.0.0	exclusive	10-11
# ::node	0.0.0.1	some	1-2
# ::root	0	report
(r / report 
      :ARG1-of (c2 / curious-41 
            :ARG0 (a / accident 
                  :location-of (c / conservative 
                        :degree (e / exclusive)) 
                  :quant (s / some))))

# ::snt police said a rover containing seven people all related had stopped on the hard shoulder when the accident involving a van happened
# ::tok police said a rover containing seven people all related had stopped on the hard shoulder when the accident involving a van happened
# ::alignments 21-22|0.0.0.0.0.1.0 20-21|0.0.0.0.0.0 18-19|0.0.0.0.0 17-18|0.0.0.0.0.1 14-15|0.0.0.0 13-14|0.0.0.0.1 10-11|0.0.0 8-9|0.0.0.1 7-8|0.0.0.0.0.1.0.0 5-6|0.0.0.1.0 4-5|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:20.332
# ::node	0	say-01	1-2
# ::node	0.0	police	0-1
# ::node	0.0.0	stop-01	10-11
# ::node	0.0.0.0	shoulder	14-15
# ::node	0.0.0.0.0	involve-01	18-19
# ::node	0.0.0.0.0.0	van	20-21
# ::node	0.0.0.0.0.1	accident	17-18
# ::node	0.0.0.0.0.1.0	happen-01	21-22
# ::node	0.0.0.0.0.1.0.0	all	7-8
# ::node	0.0.0.0.1	hard	13-14
# ::node	0.0.0.1	relate-01	8-9
# ::node	0.0.0.1.0	7	5-6
# ::node	0.1	contain-01	4-5
# ::root	0	say-01
# ::edge	7	op1	relate-01	0.0.0.1.0	0.0.0.1	
# ::edge	all	op1	happen-01	0.0.0.0.0.1.0.0	0.0.0.0.0.1.0	
# ::edge	happen-01	ARG1	accident	0.0.0.0.0.1.0	0.0.0.0.0.1	
# ::edge	involve-01	ARG0	shoulder	0.0.0.0.0	0.0.0.0	
# ::edge	involve-01	ARG1	van	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	involve-01	ARG2	accident	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	relate-01	ARG2	stop-01	0.0.0.1	0.0.0	
# ::edge	say-01	ARG0	police	0	0.0	
# ::edge	say-01	ARG1	contain-01	0	0.1	
# ::edge	shoulder	mod	hard	0.0.0.0	0.0.0.0.1	
# ::edge	stop-01	ARG0	police	0.0.0	0.0	
# ::edge	stop-01	ARG1	shoulder	0.0.0	0.0.0.0	
(s3 / say-01 
      :ARG0 (p / police 
            :ARG0-of (s2 / stop-01 
                  :ARG1 (s / shoulder 
                        :ARG0-of (i / involve-01 
                              :ARG1 (v / van) 
                              :ARG2 (a / accident 
                                    :ARG1-of (h / happen-01 
                                          :op-of (a2 / all)))) 
                        :mod (h2 / hard)) 
                  :ARG2-of (r / relate-01 
                        :op-of 7))) 
      :ARG1 (c / contain-01))

# ::snt apart from a roll cage inside the car to protect the driver in case of an accident racing slick tyres and cabins stripped of all unnecessary fittings the cars are much the same as can be bought from any renault dealer
# ::tok apart from a roll cage inside the car to protect the driver in case of an accident racing slick tyres and cabins stripped of all unnecessary fittings the cars are much the same as can be bought from any renault dealer
# ::alignments 40-41|0.1.0.0+0.1.0 38-39|0.1.0.0.0 36-37|0.1 34-35|0 32-33|0.0 30-31|0.0.1 28-29|0.0.0.0 24-25|0.1.1 22-23|0.0.0 20-21|0.0.0.1 17-18|0.0.0.1.0 16-17|0.0.0.1.0.0 13-14|0.0.0.1.1.1.1 11-12|0.0.0.1.1.0+0.0.0.1.1 9-10|0.0.0.1.1.1 7-8|0.0.0.1.1.1.0 5-6|0.0.0.1.1.1.0.0 4-5|0.0.0.1.1.1.0.0.0 3-4|0.0.0.1.1.1.0.0.0.0 0-1|0.0.0.1.1.1.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:20.952
# ::node	0	possible	34-35
# ::node	0.0	same-41	32-33
# ::node	0.0.0	strip-01	22-23
# ::node	0.0.0.0	car	28-29
# ::node	0.0.0.1	and	20-21
# ::node	0.0.0.1.0	race-01	17-18
# ::node	0.0.0.1.0.0	accident	16-17
# ::node	0.0.0.1.1	person	11-12
# ::node	0.0.0.1.1.0	drive-01	11-12
# ::node	0.0.0.1.1.1	protect-01	9-10
# ::node	0.0.0.1.1.1.0	car	7-8
# ::node	0.0.0.1.1.1.0.0	inside	5-6
# ::node	0.0.0.1.1.1.0.0.0	cage	4-5
# ::node	0.0.0.1.1.1.0.0.0.0	roll	3-4
# ::node	0.0.0.1.1.1.0.0.0.1	apart	0-1
# ::node	0.0.0.1.1.1.1	case	13-14
# ::node	0.0.1	much	30-31
# ::node	0.1	buy-01	36-37
# ::node	0.1.0	person	40-41
# ::node	0.1.0.0	deal-01	40-41
# ::node	0.1.0.0.0	any	38-39
# ::node	0.1.1	all	24-25
# ::root	0	possible
# ::edge	and	op1	person	0.0.0.1	0.0.0.1.1	
# ::edge	apart	op1	cage	0.0.0.1.1.1.0.0.0.1	0.0.0.1.1.1.0.0.0	
# ::edge	buy-01	ARG0	person	0.1	0.1.0	
# ::edge	buy-01	ARG1	all	0.1	0.1.1	
# ::edge	cage	location	inside	0.0.0.1.1.1.0.0.0	0.0.0.1.1.1.0.0	
# ::edge	cage	mod	roll	0.0.0.1.1.1.0.0.0	0.0.0.1.1.1.0.0.0.0	
# ::edge	deal-01	ARG0	person	0.1.0.0	0.1.0	
# ::edge	deal-01	mod	any	0.1.0.0	0.1.0.0.0	
# ::edge	drive-01	ARG0	person	0.0.0.1.1.0	0.0.0.1.1	
# ::edge	inside	op1	car	0.0.0.1.1.1.0.0	0.0.0.1.1.1.0	
# ::edge	possible	domain	buy-01	0	0.1	
# ::edge	protect-01	ARG0	car	0.0.0.1.1.1	0.0.0.1.1.1.0	
# ::edge	protect-01	ARG1	person	0.0.0.1.1.1	0.0.0.1.1	
# ::edge	protect-01	ARG2	case	0.0.0.1.1.1	0.0.0.1.1.1.1	
# ::edge	race-01	ARG0	accident	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	race-01	ARG1	and	0.0.0.1.0	0.0.0.1	
# ::edge	same-41	ARG0	possible	0.0	0	
# ::edge	same-41	ARG2	strip-01	0.0	0.0.0	
# ::edge	same-41	mod	much	0.0	0.0.1	
# ::edge	strip-01	ARG0	car	0.0.0	0.0.0.0	
# ::edge	strip-01	ARG1	and	0.0.0	0.0.0.1	
(p2 / possible 
      :ARG0-of (s / same-41 
            :ARG2 (s2 / strip-01 
                  :ARG0 (c / car) 
                  :ARG1 (a3 / and 
                        :ARG1-of (r / race-01 
                              :ARG0 (a4 / accident)) 
                        :op1 (p3 / person 
                              :ARG0-of (d2 / drive-01) 
                              :ARG1-of (p4 / protect-01 
                                    :ARG0 (c3 / car 
                                          :op-of (i / inside 
                                                :location-of (c4 / cage 
                                                      :mod (r2 / roll) 
                                                      :op-of (a5 / apart)))) 
                                    :ARG2 (c2 / case))))) 
            :mod (m / much)) 
      :domain (b / buy-01 
            :ARG0 (p / person 
                  :ARG0-of (d / deal-01 
                        :mod (a / any))) 
            :ARG1 (a2 / all)))

# ::snt contrary to popular belief a 1m damages award is not over generous when a young person suffers severe brain damage in a road accident, but in the wake of scare stories about socalled defensive medicine comes a new twist defensive driving action for victims of medical accidents reports in its latest newsletter
# ::tok contrary to popular belief a 1m damages award is not over generous when a young person suffers severe brain damage in a road accident , but in the wake of scare stories about socalled defensive medicine comes a new twist defensive driving action for victims of medical accidents reports in its latest newsletter
# ::alignments 51-52|0.0.0.0.0.0.2.0.0.0.0+0.0.0.0.0.0.2.0.0.0 48-49|0.0.0.0.0.0.2.0.0 47-48|0.0.0.0.0.0.2.0 46-47|0.0.0.0.0.0.2.0.1 44-45|0.0.0.0.0.0.2 42-43|0.0.0.0.0.0 41-42|0.0.0.0.0 40-41|0.0.0.0.0.0.0 39-40|0.0.0.0 38-39|0.0.0.0.0.0.1 35-36|0.1.0.0 34-35|0.1.0.0.0 31-32|0.1.0 30-31|0.1.0.1 28-29|0.1 25-26|0 23-24|0.0.1.1 22-23|0.0.1.1.0 19-20|0.0.1 18-19|0.0.1.0 17-18|0.0.1.2 16-17|0.0 15-16|0.0.0 14-15|0.0.0.1 11-12|0.2 7-8|0.2.0 6-7|0.2.0.0 3-4|0.2.0.1 2-3|0.2.0.1.0 0-1|0.2.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:22.060
# ::node	0	contrast-01	25-26
# ::node	0.0	suffer-01	16-17
# ::node	0.0.0	person	15-16
# ::node	0.0.0.0	twist-01	39-40
# ::node	0.0.0.0.0	drive-01	41-42
# ::node	0.0.0.0.0.0	action	42-43
# ::node	0.0.0.0.0.0.0	defensive	40-41
# ::node	0.0.0.0.0.0.1	new	38-39
# ::node	0.0.0.0.0.0.2	victim	44-45
# ::node	0.0.0.0.0.0.2.0	accident	47-48
# ::node	0.0.0.0.0.0.2.0.0	report-01	48-49
# ::node	0.0.0.0.0.0.2.0.0.0	late	51-52
# ::node	0.0.0.0.0.0.2.0.0.0.0	most	51-52
# ::node	0.0.0.0.0.0.2.0.1	medicine	46-47
# ::node	0.0.0.1	young	14-15
# ::node	0.0.1	damage-01	19-20
# ::node	0.0.1.0	brain	18-19
# ::node	0.0.1.1	accident	23-24
# ::node	0.0.1.1.0	road	22-23
# ::node	0.0.1.2	severe	17-18
# ::node	0.1	wake-02	28-29
# ::node	0.1.0	story	31-32
# ::node	0.1.0.0	medicine	35-36
# ::node	0.1.0.0.0	defensive	34-35
# ::node	0.1.0.1	scare-01	30-31
# ::node	0.2	generous-41	11-12
# ::node	0.2.0	award-01	7-8
# ::node	0.2.0.0	damage-01	6-7
# ::node	0.2.0.1	believe-01	3-4
# ::node	0.2.0.1.0	popular-41	2-3
# ::node	0.2.0.1.1	contrary-41	0-1
# ::root	0	contrast-01
# ::edge	accident	location	road	0.0.1.1	0.0.1.1.0	
# ::edge	accident	mod	medicine	0.0.0.0.0.0.2.0	0.0.0.0.0.0.2.0.1	
# ::edge	action	mod	defensive	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	action	mod	new	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	award-01	ARG1	damage-01	0.2.0	0.2.0.0	
# ::edge	believe-01	ARG1	award-01	0.2.0.1	0.2.0	
# ::edge	contrary-41	ARG1	believe-01	0.2.0.1.1	0.2.0.1	
# ::edge	contrast-01	ARG1	suffer-01	0	0.0	
# ::edge	contrast-01	ARG2	wake-02	0	0.1	
# ::edge	damage-01	ARG1	brain	0.0.1	0.0.1.0	
# ::edge	damage-01	ARG2	accident	0.0.1	0.0.1.1	
# ::edge	damage-01	mod	severe	0.0.1	0.0.1.2	
# ::edge	drive-01	time	action	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	generous-41	ARG1	award-01	0.2	0.2.0	
# ::edge	generous-41	ARG2	contrast-01	0.2	0	
# ::edge	late	degree	most	0.0.0.0.0.0.2.0.0.0	0.0.0.0.0.0.2.0.0.0.0	
# ::edge	medicine	mod	defensive	0.1.0.0	0.1.0.0.0	
# ::edge	person	mod	young	0.0.0	0.0.0.1	
# ::edge	popular-41	ARG1	believe-01	0.2.0.1.0	0.2.0.1	
# ::edge	report-01	ARG0	late	0.0.0.0.0.0.2.0.0	0.0.0.0.0.0.2.0.0.0	
# ::edge	report-01	ARG2	accident	0.0.0.0.0.0.2.0.0	0.0.0.0.0.0.2.0	
# ::edge	story	topic	medicine	0.1.0	0.1.0.0	
# ::edge	story	topic	scare-01	0.1.0	0.1.0.1	
# ::edge	suffer-01	ARG0	person	0.0	0.0.0	
# ::edge	suffer-01	ARG1	damage-01	0.0	0.0.1	
# ::edge	twist-01	ARG0	person	0.0.0.0	0.0.0	
# ::edge	twist-01	ARG1	drive-01	0.0.0.0	0.0.0.0.0	
# ::edge	victim	mod	accident	0.0.0.0.0.0.2	0.0.0.0.0.0.2.0	
# ::edge	victim	mod	action	0.0.0.0.0.0.2	0.0.0.0.0.0	
# ::edge	wake-02	ARG1	story	0.1	0.1.0	
(c / contrast-01 
      :ARG1 (s4 / suffer-01 
            :ARG0 (p / person 
                  :ARG0-of (t / twist-01 
                        :ARG1 (d / drive-01 
                              :time (a2 / action 
                                    :mod (d2 / defensive) 
                                    :mod (n / new) 
                                    :mod-of (v / victim 
                                          :mod (a / accident 
                                                :ARG2-of (r / report-01 
                                                      :ARG0 (l / late 
                                                            :degree (m / most))) 
                                                :mod (m2 / medicine)))))) 
                  :mod (y / young)) 
            :ARG1 (d4 / damage-01 
                  :ARG1 (b / brain) 
                  :ARG2 (a3 / accident 
                        :location (r2 / road)) 
                  :mod (s3 / severe))) 
      :ARG2 (w / wake-02 
            :ARG1 (s / story 
                  :topic (m3 / medicine 
                        :mod (d3 / defensive)) 
                  :topic (s2 / scare-01))) 
      :ARG2-of (g / generous-41 
            :ARG1 (a4 / award-01 
                  :ARG1 (d5 / damage-01) 
                  :ARG1-of (b2 / believe-01 
                        :ARG1-of (p2 / popular-41) 
                        :ARG1-of (c2 / contrary-41)))))

# ::snt he won his first local contest in 1975 at the age of 14 but it was only after an accident three years later that he started taking competition really seriously
# ::tok he won his first local contest in 1975 at the age of 14 but it was only after an accident three years later that he started taking competition really seriously
# ::alignments 29-30|0.2.2 28-29|0.2.1 27-28|0.2.0.0 25-26|0.2 24-25|0.2.0 22-23|0.0.2.0 21-22|0.0.2.2+0.0.2 20-21|0.0.2.1 19-20|0.0.1 17-18|0.0 16-17|0.0.3 14-15|0.0.0 13-14|0 12-13|0.1.1.0 10-11|0.1.0.0 7-8|0.1.2.0+0.1.2 5-6|0.1.1 4-5|0.1.1.1 1-2|0.1 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:22.484
# ::node	0	contrast-01	13-14
# ::node	0.0	after	17-18
# ::node	0.0.0	it	14-15
# ::node	0.0.1	accident	19-20
# ::node	0.0.2	temporal-quantity	21-22
# ::node	0.0.2.0	late	22-23
# ::node	0.0.2.1	3	20-21
# ::node	0.0.2.2	year	21-22
# ::node	0.0.3	only	16-17
# ::node	0.1	win-01	1-2
# ::node	0.1.0	he	0-1
# ::node	0.1.0.0	age-01	10-11
# ::node	0.1.1	contest-00	5-6
# ::node	0.1.1.0	14	12-13
# ::node	0.1.1.1	local	4-5
# ::node	0.1.2	date-entity	7-8
# ::node	0.1.2.0	1975	7-8
# ::node	0.2	start-01	25-26
# ::node	0.2.0	he	24-25
# ::node	0.2.0.0	compete-01	27-28
# ::node	0.2.1	really	28-29
# ::node	0.2.2	serious	29-30
# ::root	0	contrast-01
# ::edge	after	domain	it	0.0	0.0.0	
# ::edge	after	op1	accident	0.0	0.0.1	
# ::edge	after	quant	temporal-quantity	0.0	0.0.2	
# ::edge	age-01	ARG1	he	0.1.0.0	0.1.0	
# ::edge	compete-01	ARG1	he	0.2.0.0	0.2.0	
# ::edge	contest-00	ARG1	14	0.1.1	0.1.1.0	
# ::edge	contest-00	mod	local	0.1.1	0.1.1.1	
# ::edge	contrast-01	ARG0	after	0	0.0	
# ::edge	contrast-01	ARG1	win-01	0	0.1	
# ::edge	contrast-01	ARG2	start-01	0	0.2	
# ::edge	date-entity	year	1975	0.1.2	0.1.2.0	
# ::edge	late	op1	temporal-quantity	0.0.2.0	0.0.2	
# ::edge	only	time	after	0.0.3	0.0	
# ::edge	start-01	ARG0	he	0.2	0.2.0	
# ::edge	start-01	ARG1	really	0.2	0.2.1	
# ::edge	start-01	time	serious	0.2	0.2.2	
# ::edge	temporal-quantity	quant	3	0.0.2	0.0.2.1	
# ::edge	temporal-quantity	unit	year	0.0.2	0.0.2.2	
# ::edge	win-01	ARG0	he	0.1	0.1.0	
# ::edge	win-01	ARG1	contest-00	0.1	0.1.1	
# ::edge	win-01	time	date-entity	0.1	0.1.2	
(c2 / contrast-01 
      :ARG0 (a2 / after 
            :domain (i / it) 
            :op1 (a / accident) 
            :quant (t / temporal-quantity 
                  :op-of (l / late) 
                  :quant 3 
                  :unit (y / year)) 
            :time-of (o / only)) 
      :ARG1 (w / win-01 
            :ARG0 (h2 / he 
                  :ARG1-of (a3 / age-01)) 
            :ARG1 (c3 / contest-00 
                  :ARG1 14 
                  :mod (l2 / local)) 
            :time (d / date-entity 
                  :year 1975)) 
      :ARG2 (s2 / start-01 
            :ARG0 (h / he 
                  :ARG1-of (c / compete-01)) 
            :ARG1 (r / really) 
            :time (s / serious)))

# ::snt this is no accident
# ::tok this is no accident
# ::alignments 3-4|0 2-3|0.1 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:22.489
# ::node	0	accident	3-4
# ::node	0.0	this	0-1
# ::node	0.1	-	2-3
# ::root	0	accident
# ::edge	accident	domain	this	0	0.0	
# ::edge	accident	polarity	-	0	0.1	
(a / accident 
      :domain (t / this) 
      :polarity (- / -))

# ::snt the booklet says that coping with road accidents in oxfordshire costs 190000 a day which is apparently 40000 a day more than last year
# ::tok the booklet says that coping with road accidents in oxfordshire costs 190000 a day which is apparently 40000 a day more than last year
# ::alignments 23-24|0.0 22-23|0.0.0 19-20|0.1.1.0.0 17-18|0.1.1 16-17|0.1.1.0 13-14|0.1.0.1 11-12|0.2.2+0.2.1+0.2.0+0.2 10-11|0.1 7-8|0.1.0.0 6-7|0.1.0.0.0 4-5|0.1.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:22.772
# ::node	0	say-01	2-3
# ::node	0.0	year	23-24
# ::node	0.0.0	last	22-23
# ::node	0.1	cost-01	10-11
# ::node	0.1.0	cope-01	4-5
# ::node	0.1.0.0	accident	7-8
# ::node	0.1.0.0.0	road	6-7
# ::node	0.1.0.1	day	13-14
# ::node	0.1.1	40000	17-18
# ::node	0.1.1.0	apparent	16-17
# ::node	0.1.1.0.0	day	19-20
# ::node	0.2	date-entity	11-12
# ::node	0.2.0	0	11-12
# ::node	0.2.1	0	11-12
# ::node	0.2.2	19	11-12
# ::root	0	say-01
# ::edge	accident	location	road	0.1.0.0	0.1.0.0.0	
# ::edge	apparent	op1	40000	0.1.1.0	0.1.1	
# ::edge	cope-01	ARG1	accident	0.1.0	0.1.0.0	
# ::edge	cost-01	ARG0	cope-01	0.1	0.1.0	
# ::edge	cost-01	ARG1	40000	0.1	0.1.1	
# ::edge	date-entity	day	0	0.2	0.2.0	
# ::edge	date-entity	month	0	0.2	0.2.1	
# ::edge	date-entity	year	19	0.2	0.2.2	
# ::edge	day	condition	cope-01	0.1.0.1	0.1.0	
# ::edge	day	mod	apparent	0.1.1.0.0	0.1.1.0	
# ::edge	say-01	ARG0	year	0	0.0	
# ::edge	say-01	ARG1	cost-01	0	0.1	
# ::edge	say-01	time	date-entity	0	0.2	
# ::edge	year	mod	last	0.0	0.0.0	
(s / say-01 
      :ARG0 (y / year 
            :mod (l / last)) 
      :ARG1 (c / cost-01 
            :ARG0 (c2 / cope-01 
                  :ARG1 (a2 / accident 
                        :location (r / road)) 
                  :condition-of (d2 / day)) 
            :ARG1 (4 / 40000 
                  :op-of (a / apparent 
                        :mod-of (d / day)))) 
      :time (d3 / date-entity 
            :day 0 
            :month 0 
            :year 19))

# ::snt last year almost 75000 drivers and cyclists were breathtested after road accidents dash
# ::tok last year almost 75000 drivers and cyclists were breathtested after road accidents dash
# ::alignments 11-12|0.1.1 10-11|0.1 9-10|0.1.0 5-6|0 4-5|0.0.0+0.0 2-3|0.0.1 1-2|0.0.0.0 0-1|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:22.801
# ::node	0	and	5-6
# ::node	0.0	person	4-5
# ::node	0.0.0	drive-01	4-5
# ::node	0.0.0.0	year	1-2
# ::node	0.0.0.0.0	last	0-1
# ::node	0.0.1	almost	2-3
# ::node	0.1	road	10-11
# ::node	0.1.0	after	9-10
# ::node	0.1.1	accident	11-12
# ::root	0	and
# ::edge	accident	mod	road	0.1.1	0.1	
# ::edge	almost	quant	person	0.0.1	0.0	
# ::edge	and	op1	person	0	0.0	
# ::edge	and	op2	road	0	0.1	
# ::edge	drive-01	ARG0	person	0.0.0	0.0	
# ::edge	drive-01	ARG1	year	0.0.0	0.0.0.0	
# ::edge	road	mod	after	0.1	0.1.0	
# ::edge	year	mod	last	0.0.0.0	0.0.0.0.0	
(a3 / and 
      :op1 (p / person 
            :ARG0-of (d / drive-01 
                  :ARG1 (y / year 
                        :mod (l / last))) 
            :quant-of (a4 / almost)) 
      :op2 (r / road 
            :mod (a2 / after) 
            :mod-of (a / accident)))

# ::snt thamebased ambulancemen david samsun and keith marr were on the scene within minutes of the accident at 10
# ::tok thamebased ambulancemen david samsun and keith marr were on the scene within minutes of the accident at 10
# ::alignments 17-18|0.0.0.1.0 15-16|0.0.0.1 12-13|0.0.0.0.0+0.0.0.0 11-12|0.0.0 10-11|0.0 4-5|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:22.829
# ::node	0	and	4-5
# ::node	0.0	scene	10-11
# ::node	0.0.0	within	11-12
# ::node	0.0.0.0	temporal-quantity	12-13
# ::node	0.0.0.0.0	minute	12-13
# ::node	0.0.0.1	accident	15-16
# ::node	0.0.0.1.0	10	17-18
# ::root	0	and
(a2 / and 
      :poss-of (s / scene 
            :location (w / within 
                  :op1 (t / temporal-quantity 
                        :unit (m / minute)) 
                  :op2 (a / accident 
                        :time 10))))

# ::snt   i saw the article and figured it was some kind of terrible accident,  i saw the article and figured it was some kind of terrible accident
# ::tok i saw the article and figured it was some kind of terrible accident , i saw the article and figured it was some kind of terrible accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:22.830
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt this is not supposed to amount to a hidden cut in hours it is meant to enable us to work more flexibly which employers are always saying they want and to cut down on traffic congestion accidents and pollution he said
# ::tok this is not supposed to amount to a hidden cut in hours it is meant to enable us to work more flexibly which employers are always saying they want and to cut down on traffic congestion accidents and pollution he said
# ::alignments 40-41|0.0.0 39-40|0.0 38-39|0.0.0.0 37-38|0.0.0.1 36-37|0.0.0.0.0.1 35-36|0.0.0.0.0 34-35|0.0.0.0.0.0 32-33|0.0.0.0.0.0.0 29-30|0.2 28-29|0.1 27-28|0.1.0 26-27|0 25-26|0.3 16-17|0.2.0 14-15|0.2.0.1 12-13|0.2.0.1.0 11-12|0.2.0.0.1+0.2.0.0 8-9|0.2.0.1.0.0 5-6|0.2.0.0.0.1 3-4|0.2.0.0.0 0-1|0.2.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:24.017
# ::node	0	say-01	26-27
# ::node	0.0	he	39-40
# ::node	0.0.0	say-01	40-41
# ::node	0.0.0.0	pollute-01	38-39
# ::node	0.0.0.0.0	congest-01	35-36
# ::node	0.0.0.0.0.0	traffic	34-35
# ::node	0.0.0.0.0.0.0	down	32-33
# ::node	0.0.0.0.0.1	accident	36-37
# ::node	0.0.0.1	and	37-38
# ::node	0.1	want-01	28-29
# ::node	0.1.0	they	27-28
# ::node	0.2	and	29-30
# ::node	0.2.0	enable-01	16-17
# ::node	0.2.0.0	temporal-quantity	11-12
# ::node	0.2.0.0.0	suppose-02	3-4
# ::node	0.2.0.0.0.0	this	0-1
# ::node	0.2.0.0.0.1	amount	5-6
# ::node	0.2.0.0.1	hour	11-12
# ::node	0.2.0.1	mean-01	14-15
# ::node	0.2.0.1.0	it	12-13
# ::node	0.2.0.1.0.0	hide-01	8-9
# ::node	0.3	always	25-26
# ::root	0	say-01
# ::edge	accident	mod	congest-01	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	and	op1	say-01	0.0.0.1	0.0.0	
# ::edge	and	op1	say-01	0.2	0	
# ::edge	congest-01	ARG1	traffic	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	down	op1	traffic	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	enable-01	ARG1	temporal-quantity	0.2.0	0.2.0.0	
# ::edge	enable-01	ARG4	and	0.2.0	0.2	
# ::edge	hide-01	ARG1	it	0.2.0.1.0.0	0.2.0.1.0	
# ::edge	mean-01	ARG0	it	0.2.0.1	0.2.0.1.0	
# ::edge	mean-01	ARG1	enable-01	0.2.0.1	0.2.0	
# ::edge	pollute-01	ARG1	congest-01	0.0.0.0	0.0.0.0.0	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG0	he	0.0.0	0.0	
# ::edge	say-01	ARG1	pollute-01	0.0.0	0.0.0.0	
# ::edge	say-01	ARG1	want-01	0	0.1	
# ::edge	say-01	time	always	0	0.3	
# ::edge	suppose-02	ARG0	temporal-quantity	0.2.0.0.0	0.2.0.0	
# ::edge	suppose-02	ARG1	this	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	suppose-02	ARG2	amount	0.2.0.0.0	0.2.0.0.0.1	
# ::edge	temporal-quantity	unit	hour	0.2.0.0	0.2.0.0.1	
# ::edge	want-01	ARG0	they	0.1	0.1.0	
(s2 / say-01 
      :ARG0 (h / he 
            :ARG0-of (s / say-01 
                  :ARG1 (p / pollute-01 
                        :ARG1 (c / congest-01 
                              :ARG1 (t / traffic 
                                    :op-of (d / down)) 
                              :mod-of (a2 / accident))) 
                  :op-of (a / and))) 
      :ARG1 (w / want-01 
            :ARG0 (t2 / they)) 
      :op-of (a3 / and 
            :ARG4-of (e / enable-01 
                  :ARG1 (t3 / temporal-quantity 
                        :ARG0-of (s3 / suppose-02 
                              :ARG1 (t4 / this) 
                              :ARG2 (a5 / amount)) 
                        :unit (h2 / hour)) 
                  :ARG1-of (m / mean-01 
                        :ARG0 (i / it 
                              :ARG1-of (h3 / hide-01))))) 
      :time (a4 / always))

# ::snt there was no mention in your article of how such a strategy would improve the lives and health of accident victims and their families
# ::tok there was no mention in your article of how such a strategy would improve the lives and health of accident victims and their families
# ::alignments 23-24|0.0.1.0 21-22|0.0.1 20-21|0.0.1.0.0 19-20|0.0.1.0.0.0 17-18|0.2 16-17|0 15-16|0.1 13-14|0.0 11-12|0.0.0 9-10|0.0.0.0 6-7|0.0.2 3-4|0.0.2.0 2-3|0.0.2.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:24.508
# ::node	0	and	16-17
# ::node	0.0	improve-01	13-14
# ::node	0.0.0	strategy	11-12
# ::node	0.0.0.0	such	9-10
# ::node	0.0.1	and	21-22
# ::node	0.0.1.0	family	23-24
# ::node	0.0.1.0.0	victim	20-21
# ::node	0.0.1.0.0.0	accident	19-20
# ::node	0.0.2	article	6-7
# ::node	0.0.2.0	mention-01	3-4
# ::node	0.0.2.0.0	-	2-3
# ::node	0.1	life	15-16
# ::node	0.2	health	17-18
# ::root	0	and
# ::edge	and	op1	improve-01	0.0.1	0.0	
# ::edge	and	op1	life	0	0.1	
# ::edge	and	op2	family	0.0.1	0.0.1.0	
# ::edge	and	op2	health	0	0.2	
# ::edge	article	topic	improve-01	0.0.2	0.0	
# ::edge	family	poss	victim	0.0.1.0	0.0.1.0.0	
# ::edge	improve-01	ARG0	strategy	0.0	0.0.0	
# ::edge	improve-01	ARG1	and	0.0	0	
# ::edge	mention-01	ARG1	article	0.0.2.0	0.0.2	
# ::edge	mention-01	polarity	-	0.0.2.0	0.0.2.0.0	
# ::edge	strategy	mod	such	0.0.0	0.0.0.0	
# ::edge	victim	mod	accident	0.0.1.0.0	0.0.1.0.0.0	
(a3 / and 
      :ARG1-of (i / improve-01 
            :ARG0 (s / strategy 
                  :mod (s2 / such)) 
            :op-of (a / and 
                  :op1 (f / family 
                        :poss (v / victim 
                              :mod (a2 / accident)))) 
            :topic-of (a4 / article 
                  :ARG1-of (m / mention-01 
                        :polarity (- / -)))) 
      :op1 (l / life) 
      :op2 (h / health))

# ::snt mr watts who is representing himself said in his summing up that he had spent every penny of his capital on a campaign to try to make sun alliance reconsider its decision to refuse to pay out on an accident policy on the death of his brotherinlaw in 1975
# ::tok mr watts who is representing himself said in his summing up that he had spent every penny of his capital on a campaign to try to make sun alliance reconsider its decision to refuse to pay out on an accident policy on the death of his brotherinlaw in 1975
# ::alignments 48-49|0.0.0.1.0.0.0.0.0.2.0+0.0.0.1.0.0.0.0.0.2 43-44|0.0.0.1.0.0.0.0.0.1.0 40-41|0.0.0.1.0.0.0.0.0.1 39-40|0.0.0.1.0.0.0.0.0.1.1 35-36|0.0.0.1.0.0.0.0.0 33-34|0.0.0.1.0.0.0.0 31-32|0.0.0.1.0.0.0 28-29|0.0.0.1.0.0 27-28|0.0.0.1.0 24-25|0.0.0.1 22-23|0.0.0.1.1 19-20|0.0.0.0 15-16|0.0.0.1.0.0.0.0.0.0 14-15|0.0.0 12-13|0.0 6-7|0 4-5|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:24.779
# ::node	0	say-01	6-7
# ::node	0.0	he	12-13
# ::node	0.0.0	spend-01	14-15
# ::node	0.0.0.0	capital	19-20
# ::node	0.0.0.1	try-01	24-25
# ::node	0.0.0.1.0	sun	27-28
# ::node	0.0.0.1.0.0	alliance	28-29
# ::node	0.0.0.1.0.0.0	decide-01	31-32
# ::node	0.0.0.1.0.0.0.0	refuse-01	33-34
# ::node	0.0.0.1.0.0.0.0.0	pay-01	35-36
# ::node	0.0.0.1.0.0.0.0.0.0	every	15-16
# ::node	0.0.0.1.0.0.0.0.0.1	policy	40-41
# ::node	0.0.0.1.0.0.0.0.0.1.0	die-01	43-44
# ::node	0.0.0.1.0.0.0.0.0.1.1	accident	39-40
# ::node	0.0.0.1.0.0.0.0.0.2	date-entity	48-49
# ::node	0.0.0.1.0.0.0.0.0.2.0	1975	48-49
# ::node	0.0.0.1.1	campaign-01	22-23
# ::node	0.1	represent-01	4-5
# ::root	0	say-01
# ::edge	alliance	mod	sun	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	campaign-01	ARG1	try-01	0.0.0.1.1	0.0.0.1	
# ::edge	date-entity	year	1975	0.0.0.1.0.0.0.0.0.2	0.0.0.1.0.0.0.0.0.2.0	
# ::edge	decide-01	ARG0	alliance	0.0.0.1.0.0.0	0.0.0.1.0.0	
# ::edge	decide-01	ARG1	refuse-01	0.0.0.1.0.0.0	0.0.0.1.0.0.0.0	
# ::edge	pay-01	ARG0	every	0.0.0.1.0.0.0.0.0	0.0.0.1.0.0.0.0.0.0	
# ::edge	pay-01	ARG1	policy	0.0.0.1.0.0.0.0.0	0.0.0.1.0.0.0.0.0.1	
# ::edge	pay-01	time	date-entity	0.0.0.1.0.0.0.0.0	0.0.0.1.0.0.0.0.0.2	
# ::edge	policy	example	die-01	0.0.0.1.0.0.0.0.0.1	0.0.0.1.0.0.0.0.0.1.0	
# ::edge	policy	mod	accident	0.0.0.1.0.0.0.0.0.1	0.0.0.1.0.0.0.0.0.1.1	
# ::edge	refuse-01	ARG1	pay-01	0.0.0.1.0.0.0.0	0.0.0.1.0.0.0.0.0	
# ::edge	represent-01	ARG1	say-01	0.1	0	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	spend-01	ARG0	he	0.0.0	0.0	
# ::edge	spend-01	ARG2	capital	0.0.0	0.0.0.0	
# ::edge	spend-01	purpose	try-01	0.0.0	0.0.0.1	
# ::edge	try-01	ARG1	sun	0.0.0.1	0.0.0.1.0	
(s3 / say-01 
      :ARG0 (h / he 
            :ARG0-of (s2 / spend-01 
                  :ARG2 (c2 / capital) 
                  :purpose (t / try-01 
                        :ARG1 (s / sun 
                              :mod-of (a2 / alliance 
                                    :ARG0-of (d3 / decide-01 
                                          :ARG1 (r / refuse-01 
                                                :ARG1 (p2 / pay-01 
                                                      :ARG0 (e / every) 
                                                      :ARG1 (p / policy 
                                                            :example (d2 / die-01) 
                                                            :mod (a / accident)) 
                                                      :time (d / date-entity 
                                                            :year 1975)))))) 
                        :ARG1-of (c / campaign-01)))) 
      :ARG1-of (r2 / represent-01))

# ::snt with captain richard edge sidelined due to a work accident and a costly motorway breakdown for steve galloway and travelling team members the team were forced to track four juniors in their main squad against a strong host squad
# ::tok with captain richard edge sidelined due to a work accident and a costly motorway breakdown for steve galloway and travelling team members the team were forced to track four juniors in their main squad against a strong host squad
# ::alignments 38-39|0.0 37-38|0 36-37|0.0.0 33-34|0.1.0.1.0.0.1.2.0 32-33|0.1.0.1.0.0.1.2.0.0 28-29|0.1.0.0 27-28|0.1.0.1.0.0.1.2 25-26|0.1.0.1.0.0.1 23-24|0.1.0.1.0.0.1.1 21-22|0.1.0.1.0.0.1.1.0.1+0.1.0.1.0.0.1.1.0 20-21|0.1.0.1.0.0.1.1.0.0 19-20|0.1.0 18-19|0.1 14-15|0.1.0.1.0 13-14|0.1.0.1 12-13|0.1.0.1.0.1 10-11|0.1.0.1.0.0 9-10|0.1.0.1.0.0.0 4-5|0.1.0.1.0.0.1.0 1-2|0.1.0.1.0.0.1.1.1.0+0.1.0.1.0.0.1.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:25.317
# ::node	0	host-01	37-38
# ::node	0.0	squad	38-39
# ::node	0.0.0	strong	36-37
# ::node	0.1	and	18-19
# ::node	0.1.0	travel-01	19-20
# ::node	0.1.0.0	4	28-29
# ::node	0.1.0.1	motorway	13-14
# ::node	0.1.0.1.0	break-12	14-15
# ::node	0.1.0.1.0.0	and	10-11
# ::node	0.1.0.1.0.0.0	accident	9-10
# ::node	0.1.0.1.0.0.1	force-01	25-26
# ::node	0.1.0.1.0.0.1.0	sideline	4-5
# ::node	0.1.0.1.0.0.1.1	team	23-24
# ::node	0.1.0.1.0.0.1.1.0	have-org-role-91	21-22
# ::node	0.1.0.1.0.0.1.1.0.0	team	20-21
# ::node	0.1.0.1.0.0.1.1.0.1	member	21-22
# ::node	0.1.0.1.0.0.1.1.1	have-org-role-91	1-2
# ::node	0.1.0.1.0.0.1.1.1.0	captain	1-2
# ::node	0.1.0.1.0.0.1.2	track	27-28
# ::node	0.1.0.1.0.0.1.2.0	squad	33-34
# ::node	0.1.0.1.0.0.1.2.0.0	main	32-33
# ::node	0.1.0.1.0.1	costly	12-13
# ::root	0	host-01
# ::edge	and	op1	accident	0.1.0.1.0.0	0.1.0.1.0.0.0	
# ::edge	and	op1	travel-01	0.1	0.1.0	
# ::edge	and	op2	force-01	0.1.0.1.0.0	0.1.0.1.0.0.1	
# ::edge	break-12	ARG0	and	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	break-12	ARG1	motorway	0.1.0.1.0	0.1.0.1	
# ::edge	break-12	mod	costly	0.1.0.1.0	0.1.0.1.0.1	
# ::edge	force-01	ARG0	sideline	0.1.0.1.0.0.1	0.1.0.1.0.0.1.0	
# ::edge	force-01	ARG1	team	0.1.0.1.0.0.1	0.1.0.1.0.0.1.1	
# ::edge	force-01	ARG2	track	0.1.0.1.0.0.1	0.1.0.1.0.0.1.2	
# ::edge	have-org-role-91	ARG0	team	0.1.0.1.0.0.1.1.0	0.1.0.1.0.0.1.1	
# ::edge	have-org-role-91	ARG1	team	0.1.0.1.0.0.1.1.0	0.1.0.1.0.0.1.1.0.0	
# ::edge	have-org-role-91	ARG1	team	0.1.0.1.0.0.1.1.1	0.1.0.1.0.0.1.1	
# ::edge	have-org-role-91	ARG2	captain	0.1.0.1.0.0.1.1.1	0.1.0.1.0.0.1.1.1.0	
# ::edge	have-org-role-91	ARG2	member	0.1.0.1.0.0.1.1.0	0.1.0.1.0.0.1.1.0.1	
# ::edge	host-01	ARG0	squad	0	0.0	
# ::edge	host-01	ARG1	and	0	0.1	
# ::edge	squad	mod	main	0.1.0.1.0.0.1.2.0	0.1.0.1.0.0.1.2.0.0	
# ::edge	squad	mod	strong	0.0	0.0.0	
# ::edge	track	location	squad	0.1.0.1.0.0.1.2	0.1.0.1.0.0.1.2.0	
# ::edge	travel-01	ARG0	4	0.1.0	0.1.0.0	
# ::edge	travel-01	ARG1	motorway	0.1.0	0.1.0.1	
(h / host-01 
      :ARG0 (s / squad 
            :mod (s2 / strong)) 
      :ARG1 (a / and 
            :op1 (t4 / travel-01 
                  :ARG0 4 
                  :ARG1 (m3 / motorway 
                        :ARG1-of (b / break-12 
                              :ARG0 (a2 / and 
                                    :op1 (a3 / accident) 
                                    :op2 (f / force-01 
                                          :ARG0 (s4 / sideline) 
                                          :ARG1 (t2 / team 
                                                :ARG0-of (h2 / have-org-role-91 
                                                      :ARG1 (t3 / team) 
                                                      :ARG2 (m2 / member)) 
                                                :ARG1-of (h3 / have-org-role-91 
                                                      :ARG2 (c2 / captain))) 
                                          :ARG2 (t / track 
                                                :location (s3 / squad 
                                                      :mod (m / main))))) 
                              :mod (c / costly))))))

# ::snt in its absence however how would one have decided in 1932 whether the windscreen should have been shatterproof  another type of case also selfanswers this question namely that where the alleged defect defeats the very purpose which the product is designed to serve and thereby causes the accident
# ::tok in its absence however how would one have decided in 1932 whether the windscreen should have been shatterproof another type of case also selfanswers this question namely that where the alleged defect defeats the very purpose which the product is designed to serve and thereby causes the accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:25.318
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the m4 has been a bit slow although only eastbound and the m25 is still a bit sluggish at the thames valley because of an accident mainly on the clockwise carriageway by the m4 interchange its just vocal soundum a little slow with a couple of miles queue either side of the m4 interchange itself
# ::tok the m4 has been a bit slow although only eastbound and the m25 is still a bit sluggish at the thames valley because of an accident mainly on the clockwise carriageway by the m4 interchange its just vocal soundum a little slow with a couple of miles queue either side of the m4 interchange itself
# ::alignments 49-50|0.6.0 48-49|0.6 46-47|0.5.0.0+0.5.0 44-45|0.5 40-41|0.1.0.0 37-38|0.1.0.1 36-37|0.3 26-27|0.7 25-26|0.0 22-23|0 17-18|0.1 16-17|0.1.0 14-15|0.1.1 10-11|0.1.2 8-9|0.2 5-6|0.4 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:25.579
# ::node	0	cause-01	22-23
# ::node	0.0	accident	25-26
# ::node	0.1	sluggish	17-18
# ::node	0.1.0	bit	16-17
# ::node	0.1.0.0	little	40-41
# ::node	0.1.0.1	vocal	37-38
# ::node	0.1.1	still	14-15
# ::node	0.1.2	and	10-11
# ::node	0.2	only	8-9
# ::node	0.3	just	36-37
# ::node	0.4	bit	5-6
# ::node	0.5	couple	44-45
# ::node	0.5.0	distance-quantity	46-47
# ::node	0.5.0.0	mile	46-47
# ::node	0.6	either	48-49
# ::node	0.6.0	side	49-50
# ::node	0.7	main	26-27
# ::root	0	cause-01
# ::edge	and	op1	sluggish	0.1.2	0.1	
# ::edge	bit	mod	little	0.1.0	0.1.0.0	
# ::edge	bit	op1	cause-01	0.4	0	
# ::edge	bit	poss	vocal	0.1.0	0.1.0.1	
# ::edge	cause-01	ARG0	accident	0	0.0	
# ::edge	cause-01	ARG1	sluggish	0	0.1	
# ::edge	cause-01	mod	just	0	0.3	
# ::edge	cause-01	mod	only	0	0.2	
# ::edge	cause-01	time	main	0	0.7	
# ::edge	couple	op1	cause-01	0.5	0	
# ::edge	couple	op2	distance-quantity	0.5	0.5.0	
# ::edge	distance-quantity	unit	mile	0.5.0	0.5.0.0	
# ::edge	either	op1	cause-01	0.6	0	
# ::edge	side	mod	either	0.6.0	0.6	
# ::edge	sluggish	degree	bit	0.1	0.1.0	
# ::edge	sluggish	mod	still	0.1	0.1.1	
(c2 / cause-01 
      :ARG0 (a / accident) 
      :ARG1 (s2 / sluggish 
            :degree (b / bit 
                  :mod (l / little) 
                  :poss (v / vocal)) 
            :mod (s3 / still) 
            :op-of (a2 / and)) 
      :mod (o / only) 
      :mod (j / just) 
      :op-of (b2 / bit) 
      :op-of (c / couple 
            :op1 (d / distance-quantity 
                  :unit (m / mile))) 
      :op-of (e / either 
            :mod-of (s / side)) 
      :time (m2 / main))

# ::snt this is not to say that an accident demonstrates folly
# ::tok this is not to say that an accident demonstrates folly
# ::alignments 8-9|0.0 7-8|0.0.0 4-5|0 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:25.588
# ::node	0	say-01	4-5
# ::node	0.0	demonstrate-01	8-9
# ::node	0.0.0	accident	7-8
# ::node	0.0.1	this	0-1
# ::root	0	say-01
# ::edge	demonstrate-01	ARG0	accident	0.0	0.0.0	
# ::edge	demonstrate-01	ARG1	this	0.0	0.0.1	
# ::edge	say-01	ARG1	demonstrate-01	0	0.0	
(s / say-01 
      :ARG1 (d / demonstrate-01 
            :ARG0 (a / accident) 
            :ARG1 (t / this)))

# ::snt   the computers are vital for soviet scientists to analyse nuclear power plant safety data and to simulate accidents in such a way that they can compare results with colleagues in the west
# ::tok the computers are vital for soviet scientists to analyse nuclear power plant safety data and to simulate accidents in such a way that they can compare results with colleagues in the west
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:25.588
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt one of the two recent accidents in the village involved a boy who had just got off a school bus
# ::tok one of the two recent accidents in the village involved a boy who had just got off a school bus
# ::alignments 19-20|0.2.0 18-19|0.2 16-17|0.2.0.0 14-15|0.0.2.0 11-12|0.1 9-10|0 8-9|0.0.0 5-6|0.0 4-5|0.0.2 3-4|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:25.713
# ::node	0	involve-01	9-10
# ::node	0.0	accident	5-6
# ::node	0.0.0	village	8-9
# ::node	0.0.1	2	3-4
# ::node	0.0.2	recent	4-5
# ::node	0.0.2.0	just	14-15
# ::node	0.1	boy	11-12
# ::node	0.2	school	18-19
# ::node	0.2.0	bus	19-20
# ::node	0.2.0.0	off	16-17
# ::root	0	involve-01
# ::edge	accident	location	village	0.0	0.0.0	
# ::edge	accident	quant	2	0.0	0.0.1	
# ::edge	accident	time	recent	0.0	0.0.2	
# ::edge	bus	mod	school	0.2.0	0.2	
# ::edge	involve-01	ARG0	accident	0	0.0	
# ::edge	involve-01	ARG1	boy	0	0.1	
# ::edge	off	op1	bus	0.2.0.0	0.2.0	
# ::edge	recent	mod	just	0.0.2	0.0.2.0	
# ::edge	school	op1	involve-01	0.2	0	
(i / involve-01 
      :ARG0 (a / accident 
            :location (v / village) 
            :quant 2 
            :time (r / recent 
                  :mod (j / just))) 
      :ARG1 (b2 / boy) 
      :op-of (s / school 
            :mod-of (b / bus 
                  :op-of (o / off))))

# ::snt the a415 thats the abingdon ring road thats very busy there this evening the junction with colwell drive theres reduced inaudible seconds1 there because of the road works and also very heavy traffic in both directions between abingdon and dorchester on the thames owing to an earlier accident
# ::tok the a415 thats the abingdon ring road thats very busy there this evening the junction with colwell drive theres reduced inaudible seconds1 there because of the road works and also very heavy traffic in both directions between abingdon and dorchester on the thames owing to an earlier accident
# ::alignments 47-48|0.1.0 46-47|0.1 38-39|0.0.1.0.2.0 36-37|0.0.1.0.2.0.0 35-36|0.0.1.0.2.0.0.0 34-35|0.0.1.0.2.0.0.0.0 32-33|0.0.1.0.2 31-32|0.0.1.0 30-31|0.0.1.0.0 29-30|0.0.1.0.1 28-29|0.0.1 26-27|0.0.1.0.2.0.1.0 23-24|0 19-20|0.0 17-18|0.0.1.0.2.0.1 12-13|0.0.0 11-12|0.0.0.0 9-10|0.0.2.0.0 8-9|0.0.2.0.0.0 7-8|0.0.2.0 6-7|0.0.2 5-6|0.0.2.2 2-3|0.0.2.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:26.475
# ::node	0	cause-01	23-24
# ::node	0.0	reduce-01	19-20
# ::node	0.0.0	evening	12-13
# ::node	0.0.0.0	this	11-12
# ::node	0.0.1	and	28-29
# ::node	0.0.1.0	heavy	31-32
# ::node	0.0.1.0.0	very	30-31
# ::node	0.0.1.0.1	also	29-30
# ::node	0.0.1.0.2	traffic	32-33
# ::node	0.0.1.0.2.0	and	38-39
# ::node	0.0.1.0.2.0.0	between	36-37
# ::node	0.0.1.0.2.0.0.0	direction	35-36
# ::node	0.0.1.0.2.0.0.0.0	both	34-35
# ::node	0.0.1.0.2.0.1	drive-01	17-18
# ::node	0.0.1.0.2.0.1.0	road	26-27
# ::node	0.0.2	road	6-7
# ::node	0.0.2.0	that	7-8
# ::node	0.0.2.0.0	busy	9-10
# ::node	0.0.2.0.0.0	very	8-9
# ::node	0.0.2.1	that	2-3
# ::node	0.0.2.2	ring	5-6
# ::node	0.1	early	46-47
# ::node	0.1.0	accident	47-48
# ::root	0	cause-01
# ::edge	accident	mod	early	0.1.0	0.1	
# ::edge	also	domain	heavy	0.0.1.0.1	0.0.1.0	
# ::edge	and	op1	drive-01	0.0.1.0.2.0	0.0.1.0.2.0.1	
# ::edge	and	op1	reduce-01	0.0.1	0.0	
# ::edge	and	op2	heavy	0.0.1	0.0.1.0	
# ::edge	and	op2	traffic	0.0.1.0.2.0	0.0.1.0.2	
# ::edge	between	op1	and	0.0.1.0.2.0.0	0.0.1.0.2.0	
# ::edge	busy	degree	very	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	cause-01	ARG1	reduce-01	0	0.0	
# ::edge	direction	mod	between	0.0.1.0.2.0.0.0	0.0.1.0.2.0.0	
# ::edge	direction	mod	both	0.0.1.0.2.0.0.0	0.0.1.0.2.0.0.0.0	
# ::edge	drive-01	ARG1	road	0.0.1.0.2.0.1	0.0.1.0.2.0.1.0	
# ::edge	early	op1	cause-01	0.1	0	
# ::edge	evening	mod	this	0.0.0	0.0.0.0	
# ::edge	heavy	degree	very	0.0.1.0	0.0.1.0.0	
# ::edge	reduce-01	ARG1	evening	0.0	0.0.0	
# ::edge	reduce-01	source	road	0.0	0.0.2	
# ::edge	road	mod	ring	0.0.2	0.0.2.2	
# ::edge	that	manner	busy	0.0.2.0	0.0.2.0.0	
# ::edge	that	manner	road	0.0.2.0	0.0.2	
# ::edge	that	manner	road	0.0.2.1	0.0.2	
# ::edge	traffic	mod	heavy	0.0.1.0.2	0.0.1.0	
(c / cause-01 
      :ARG1 (r2 / reduce-01 
            :ARG1 (e2 / evening 
                  :mod (t2 / this)) 
            :op-of (a4 / and 
                  :op1 (h / heavy 
                        :degree (v / very) 
                        :domain-of (a3 / also) 
                        :mod-of (t / traffic 
                              :op-of (a2 / and 
                                    :op-of (b / between 
                                          :mod-of (d / direction 
                                                :mod (b2 / both))) 
                                    :op1 (d2 / drive-01 
                                          :ARG1 (r / road)))))) 
            :source (r3 / road 
                  :manner-of (t3 / that 
                        :manner (b3 / busy 
                              :degree (v2 / very))) 
                  :manner-of (t4 / that) 
                  :mod (r4 / ring))) 
      :op-of (e / early 
            :mod-of (a / accident)))

# ::snt what turned the scales in this instance was that popular opposition to the rule could be enlisted because of its immediate fiscal impact on taxpayers as a result of its application against local government bodies for road hazards which may have contributed only a minor share in respect of accidents by un or underinsured drivers
# ::tok what turned the scales in this instance was that popular opposition to the rule could be enlisted because of its immediate fiscal impact on taxpayers as a result of its application against local government bodies for road hazards which may have contributed only a minor share in respect of accidents by un or underinsured drivers
# ::alignments 54-55|0.0.2.0.0.0.0.0.0.0+0.0.2.0.0.0.0.0.0 52-53|0.0.2.0.0.0.0.0.0.1 49-50|0.0.2.0.0.0.0.0.1.0 47-48|0.0.2.0.0.0.0.0.1 45-46|0.0.2.0.0.0.0.0 44-45|0.0.2.0.0.0.0.0.2 42-43|0.0.2.0.0.0.0.0.3 41-42|0.0.2.0.0.0.0 39-40|0.0.2.0.0.0.1+0.0.2.0.0.0 36-37|0.0.2.0.0 34-35|0.0.2.0.1.0 32-33|0.0.2.0.1.0.0 30-31|0.0.2.0.1 27-28|0.0.2.0 22-23|0.0.2 21-22|0.0.2.1 20-21|0.0.2.2 17-18|0 16-17|0.0 14-15|0.0.3 13-14|0.0.1.0 10-11|0.0.1 9-10|0.0.1.1 5-6|0.1 3-4|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:27.504
# ::node	0	cause-01	17-18
# ::node	0.0	enlist-01	16-17
# ::node	0.0.0	scale	3-4
# ::node	0.0.1	oppose-01	10-11
# ::node	0.0.1.0	rule-03	13-14
# ::node	0.0.1.1	popular-41	9-10
# ::node	0.0.2	impact-01	22-23
# ::node	0.0.2.0	result-01	27-28
# ::node	0.0.2.0.0	road	36-37
# ::node	0.0.2.0.0.0	date-entity	39-40
# ::node	0.0.2.0.0.0.0	contribute-01	41-42
# ::node	0.0.2.0.0.0.0.0	share-01	45-46
# ::node	0.0.2.0.0.0.0.0.0	person	54-55
# ::node	0.0.2.0.0.0.0.0.0.0	drive-01	54-55
# ::node	0.0.2.0.0.0.0.0.0.1	or	52-53
# ::node	0.0.2.0.0.0.0.0.1	respect-01	47-48
# ::node	0.0.2.0.0.0.0.0.1.0	accident	49-50
# ::node	0.0.2.0.0.0.0.0.2	minor	44-45
# ::node	0.0.2.0.0.0.0.0.3	only	42-43
# ::node	0.0.2.0.0.0.1	5	39-40
# ::node	0.0.2.0.1	apply-01	30-31
# ::node	0.0.2.0.1.0	body	34-35
# ::node	0.0.2.0.1.0.0	local	32-33
# ::node	0.0.2.1	fiscal	21-22
# ::node	0.0.2.2	immediate	20-21
# ::node	0.0.3	possible	14-15
# ::node	0.1	this	5-6
# ::root	0	cause-01
# ::edge	apply-01	ARG1	body	0.0.2.0.1	0.0.2.0.1.0	
# ::edge	body	mod	local	0.0.2.0.1.0	0.0.2.0.1.0.0	
# ::edge	cause-01	ARG0	enlist-01	0	0.0	
# ::edge	cause-01	ARG1	this	0	0.1	
# ::edge	contribute-01	ARG1	share-01	0.0.2.0.0.0.0	0.0.2.0.0.0.0.0	
# ::edge	contribute-01	mod	date-entity	0.0.2.0.0.0.0	0.0.2.0.0.0	
# ::edge	date-entity	month	5	0.0.2.0.0.0	0.0.2.0.0.0.1	
# ::edge	drive-01	ARG0	person	0.0.2.0.0.0.0.0.0.0	0.0.2.0.0.0.0.0.0	
# ::edge	enlist-01	ARG0	scale	0.0	0.0.0	
# ::edge	enlist-01	ARG1	oppose-01	0.0	0.0.1	
# ::edge	enlist-01	ARG2	impact-01	0.0	0.0.2	
# ::edge	impact-01	ARG1	result-01	0.0.2	0.0.2.0	
# ::edge	impact-01	mod	fiscal	0.0.2	0.0.2.1	
# ::edge	impact-01	time	immediate	0.0.2	0.0.2.2	
# ::edge	oppose-01	ARG1	rule-03	0.0.1	0.0.1.0	
# ::edge	or	op1	person	0.0.2.0.0.0.0.0.0.1	0.0.2.0.0.0.0.0.0	
# ::edge	popular-41	ARG1	oppose-01	0.0.1.1	0.0.1	
# ::edge	possible	domain	enlist-01	0.0.3	0.0	
# ::edge	respect-01	ARG1	accident	0.0.2.0.0.0.0.0.1	0.0.2.0.0.0.0.0.1.0	
# ::edge	result-01	ARG0	road	0.0.2.0	0.0.2.0.0	
# ::edge	result-01	ARG1	apply-01	0.0.2.0	0.0.2.0.1	
# ::edge	road	mod	date-entity	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	share-01	ARG0	person	0.0.2.0.0.0.0.0	0.0.2.0.0.0.0.0.0	
# ::edge	share-01	ARG1	respect-01	0.0.2.0.0.0.0.0	0.0.2.0.0.0.0.0.1	
# ::edge	share-01	mod	minor	0.0.2.0.0.0.0.0	0.0.2.0.0.0.0.0.2	
# ::edge	share-01	mod	only	0.0.2.0.0.0.0.0	0.0.2.0.0.0.0.0.3	
(c2 / cause-01 
      :ARG0 (e / enlist-01 
            :ARG0 (s2 / scale) 
            :ARG1 (o3 / oppose-01 
                  :ARG1 (r4 / rule-03) 
                  :ARG1-of (p3 / popular-41)) 
            :ARG2 (i / impact-01 
                  :ARG1 (r3 / result-01 
                        :ARG0 (r2 / road 
                              :mod (d2 / date-entity 
                                    :mod-of (c / contribute-01 
                                          :ARG1 (s / share-01 
                                                :ARG0 (p / person 
                                                      :ARG0-of (d / drive-01) 
                                                      :op-of (o / or)) 
                                                :ARG1 (r / respect-01 
                                                      :ARG1 (a / accident)) 
                                                :mod (m / minor) 
                                                :mod (o2 / only))) 
                                    :month 5)) 
                        :ARG1 (a2 / apply-01 
                              :ARG1 (b / body 
                                    :mod (l / local)))) 
                  :mod (f / fiscal) 
                  :time (i2 / immediate)) 
            :domain-of (p2 / possible)) 
      :ARG1 (t / this))

# ::snt but mr petty a member of the chamber of trade which objected to the plans said there had already been half a dozen minor accidents as vehicles negotiated the hump already installed
# ::tok but mr petty a member of the chamber of trade which objected to the plans said there had already been half a dozen minor accidents as vehicles negotiated the hump already installed
# ::alignments 31-32|0.1.2.0.0 30-31|0.1.2.0.0.1 26-27|0.1.2.0.0.0 24-25|0.1.1 23-24|0.1.1.0 22-23|0.1.1.1 20-21|0.1.1.2 18-19|0.1.0 15-16|0.1 14-15|0.1.2 9-10|0.1.2.0 7-8|0.1.2.0.1 4-5|0.1.2.0.1.0.0+0.1.2.0.1.0 2-3|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:28.069
# ::node	0	contrast-01	0-1
# ::node	0.0	petty	2-3
# ::node	0.1	say-01	15-16
# ::node	0.1.0	already	18-19
# ::node	0.1.1	accident	24-25
# ::node	0.1.1.0	minor	23-24
# ::node	0.1.1.1	dozen	22-23
# ::node	0.1.1.2	half	20-21
# ::node	0.1.2	plan-01	14-15
# ::node	0.1.2.0	trade-01	9-10
# ::node	0.1.2.0.0	install-01	31-32
# ::node	0.1.2.0.0.0	vehicle	26-27
# ::node	0.1.2.0.0.1	already	30-31
# ::node	0.1.2.0.1	chamber	7-8
# ::node	0.1.2.0.1.0	have-org-role-91	4-5
# ::node	0.1.2.0.1.0.0	member	4-5
# ::root	0	contrast-01
# ::edge	accident	mod	dozen	0.1.1	0.1.1.1	
# ::edge	accident	mod	minor	0.1.1	0.1.1.0	
# ::edge	accident	quant	half	0.1.1	0.1.1.2	
# ::edge	chamber	mod	trade-01	0.1.2.0.1	0.1.2.0	
# ::edge	contrast-01	ARG1	petty	0	0.0	
# ::edge	contrast-01	ARG2	say-01	0	0.1	
# ::edge	have-org-role-91	ARG1	chamber	0.1.2.0.1.0	0.1.2.0.1	
# ::edge	have-org-role-91	ARG2	member	0.1.2.0.1.0	0.1.2.0.1.0.0	
# ::edge	install-01	ARG0	vehicle	0.1.2.0.0	0.1.2.0.0.0	
# ::edge	install-01	ARG1	trade-01	0.1.2.0.0	0.1.2.0	
# ::edge	install-01	time	already	0.1.2.0.0	0.1.2.0.0.1	
# ::edge	plan-01	ARG1	trade-01	0.1.2	0.1.2.0	
# ::edge	say-01	ARG0	already	0.1	0.1.0	
# ::edge	say-01	ARG1	accident	0.1	0.1.1	
# ::edge	say-01	manner	plan-01	0.1	0.1.2	
(c2 / contrast-01 
      :ARG1 (p2 / petty) 
      :ARG2 (s / say-01 
            :ARG0 (a3 / already) 
            :ARG1 (a2 / accident 
                  :mod (m / minor) 
                  :mod (d / dozen) 
                  :quant (h / half)) 
            :manner (p / plan-01 
                  :ARG1 (t / trade-01 
                        :ARG1-of (i / install-01 
                              :ARG0 (v / vehicle) 
                              :time (a / already)) 
                        :mod-of (c / chamber 
                              :ARG1-of (h2 / have-org-role-91 
                                    :ARG2 (m2 / member)))))))

# ::snt she claims breach of contract andor negligence in the handling of claims for injuries arising out of two road accidents in 1985
# ::tok she claims breach of contract andor negligence in the handling of claims for injuries arising out of two road accidents in 1985
# ::alignments 21-22|0.1.0.0.0.0.0.1.0+0.1.0.0.0.0.0.1 19-20|0.1.0.0.0.0.0 18-19|0.1.0.0.0.0.0.0 17-18|0.1.0.0.0.0.0.0.0 13-14|0.1.0.0.0.0 11-12|0.1.0.0.0 9-10|0.1.0.0 6-7|0.1.0 4-5|0.1.0.1 2-3|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:28.131
# ::node	0	claim-01	1-2
# ::node	0.0	she	0-1
# ::node	0.1	breach-01	2-3
# ::node	0.1.0	neglect-01	6-7
# ::node	0.1.0.0	handle-01	9-10
# ::node	0.1.0.0.0	claim-01	11-12
# ::node	0.1.0.0.0.0	injure-01	13-14
# ::node	0.1.0.0.0.0.0	accident	19-20
# ::node	0.1.0.0.0.0.0.0	road	18-19
# ::node	0.1.0.0.0.0.0.0.0	2	17-18
# ::node	0.1.0.0.0.0.0.1	date-entity	21-22
# ::node	0.1.0.0.0.0.0.1.0	1985	21-22
# ::node	0.1.0.1	contract-02	4-5
# ::root	0	claim-01
# ::edge	accident	location	road	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	accident	time	date-entity	0.1.0.0.0.0.0	0.1.0.0.0.0.0.1	
# ::edge	breach-01	ARG1	neglect-01	0.1	0.1.0	
# ::edge	claim-01	ARG0	she	0	0.0	
# ::edge	claim-01	ARG1	breach-01	0	0.1	
# ::edge	claim-01	ARG1	injure-01	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	contract-02	ARG1	neglect-01	0.1.0.1	0.1.0	
# ::edge	date-entity	year	1985	0.1.0.0.0.0.0.1	0.1.0.0.0.0.0.1.0	
# ::edge	handle-01	ARG1	claim-01	0.1.0.0	0.1.0.0.0	
# ::edge	injure-01	ARG0	accident	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	neglect-01	ARG1	handle-01	0.1.0	0.1.0.0	
# ::edge	road	quant	2	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0.0.0	
(c3 / claim-01 
      :ARG0 (s / she) 
      :ARG1 (b / breach-01 
            :ARG1 (n / neglect-01 
                  :ARG1 (h / handle-01 
                        :ARG1 (c / claim-01 
                              :ARG1 (i / injure-01 
                                    :ARG0 (a / accident 
                                          :location (r / road 
                                                :quant 2) 
                                          :time (d / date-entity 
                                                :year 1985))))) 
                  :ARG1-of (c2 / contract-02))))

# ::snt be warned of accidents this week
# ::tok be warned of accidents this week
# ::alignments 5-6|0.1 4-5|0.1.0 3-4|0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:28.140
# ::node	0	warn-01	1-2
# ::node	0.0	accident	3-4
# ::node	0.1	week	5-6
# ::node	0.1.0	this	4-5
# ::root	0	warn-01
# ::edge	warn-01	ARG1	accident	0	0.0	
# ::edge	warn-01	time	week	0	0.1	
# ::edge	week	mod	this	0.1	0.1.0	
(w2 / warn-01 
      :ARG1 (a / accident) 
      :time (w / week 
            :mod (t / this)))

# ::snt rescue services working to clear passengers from the pre1965 slam door carriages which the report into the clapham rail crash recommends should be improved photograph omitted  the rail disaster near clapham junction in south london happened because british rail allowed standards of working practices supervision of staff and testing of vital signalling equipment that were unacceptable and dangerous according to the official report into the accident
# ::tok rescue services working to clear passengers from the pre1965 slam door carriages which the report into the clapham rail crash recommends should be improved photograph omitted the rail disaster near clapham junction in south london happened because british rail allowed standards of working practices supervision of staff and testing of vital signalling equipment that were unacceptable and dangerous according to the official report into the accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:28.142
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt sewell of bartons bank aston birmingham admitted reckless driving driving with excess alcohol and failing to stop after an accident
# ::tok sewell of bartons bank aston birmingham admitted reckless driving driving with excess alcohol and failing to stop after an accident
# ::alignments 19-20|0.0.0.1.0.1.0.0 17-18|0.0.0.1.0.1.0 16-17|0.0.0.1.0.1 14-15|0.0.0.1.0 13-14|0.0.0.1 12-13|0.0.0.0.0 11-12|0.0.0.0 9-10|0.0.0 8-9|0.0 7-8|0.0.1 6-7|0 5-6|0.0.0.1.0.0.1.0+0.0.0.1.0.0.1+0.0.0.1.0.0 3-4|0.0.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:28.285
# ::node	0	admit-01	6-7
# ::node	0.0	drive-01	8-9
# ::node	0.0.0	drive-01	9-10
# ::node	0.0.0.0	exceed-01	11-12
# ::node	0.0.0.0.0	alcohol	12-13
# ::node	0.0.0.1	and	13-14
# ::node	0.0.0.1.0	fail-01	14-15
# ::node	0.0.0.1.0.0	city	5-6
# ::node	0.0.0.1.0.0.0	bank	3-4
# ::node	0.0.0.1.0.0.1	name	5-6
# ::node	0.0.0.1.0.0.1.0	"Birmingham"	5-6
# ::node	0.0.0.1.0.1	stop-01	16-17
# ::node	0.0.0.1.0.1.0	after	17-18
# ::node	0.0.0.1.0.1.0.0	accident	19-20
# ::node	0.0.1	reckless	7-8
# ::root	0	admit-01
# ::edge	admit-01	ARG1	drive-01	0	0.0	
# ::edge	after	op1	accident	0.0.0.1.0.1.0	0.0.0.1.0.1.0.0	
# ::edge	and	op1	drive-01	0.0.0.1	0.0.0	
# ::edge	and	op2	fail-01	0.0.0.1	0.0.0.1.0	
# ::edge	city	mod	bank	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	city	name	name	0.0.0.1.0.0	0.0.0.1.0.0.1	
# ::edge	drive-01	ARG0	drive-01	0.0.0	0.0	
# ::edge	drive-01	ARG1	exceed-01	0.0.0	0.0.0.0	
# ::edge	drive-01	mod	reckless	0.0	0.0.1	
# ::edge	exceed-01	ARG1	alcohol	0.0.0.0	0.0.0.0.0	
# ::edge	fail-01	ARG0	city	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	fail-01	ARG1	stop-01	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	name	op1	"Birmingham"	0.0.0.1.0.0.1	0.0.0.1.0.0.1.0	
# ::edge	stop-01	time	after	0.0.0.1.0.1	0.0.0.1.0.1.0	
(a5 / admit-01 
      :ARG1 (d2 / drive-01 
            :ARG0-of (d / drive-01 
                  :ARG1 (e / exceed-01 
                        :ARG1 (a4 / alcohol)) 
                  :op-of (a3 / and 
                        :op1 (f / fail-01 
                              :ARG0 (c / city 
                                    :mod (b / bank) 
                                    :name (n / name 
                                          :op1 "Birmingham")) 
                              :ARG1 (s / stop-01 
                                    :time (a2 / after 
                                          :op1 (a / accident)))))) 
            :mod (r / reckless)))

# ::snt this is howard from the post office you know  theres been an accident to your niece is she called fiona
# ::tok this is howard from the post office you know theres been an accident to your niece is she called fiona
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:28.285
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt according to the influential british magazine autosport balestre asked council members if they would take personal responsibility for any serious accidents were the race to be held next june
# ::tok according to the influential british magazine autosport balestre asked council members if they would take personal responsibility for any serious accidents were the race to be held next june
# ::alignments 28-29|0.1.0.0.1+0.1.0.0 27-28|0.1.0.0.0 23-24|0.0.1.0 20-21|0.1 19-20|0.1.0 18-19|0.1.1 16-17|0 15-16|0.2 12-13|0.0 10-11|0.0.0.1+0.0.0 9-10|0.0.0.0 8-9|0.0.2 5-6|0.0.2.0 3-4|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:28.772
# ::node	0	responsible-41	16-17
# ::node	0.0	they	12-13
# ::node	0.0.0	have-org-role-91	10-11
# ::node	0.0.0.0	council	9-10
# ::node	0.0.0.1	member	10-11
# ::node	0.0.1	influence-01	3-4
# ::node	0.0.1.0	race	23-24
# ::node	0.0.2	ask-02	8-9
# ::node	0.0.2.0	magazine	5-6
# ::node	0.1	accident	20-21
# ::node	0.1.0	serious	19-20
# ::node	0.1.0.0	date-entity	28-29
# ::node	0.1.0.0.0	next	27-28
# ::node	0.1.0.0.1	6	28-29
# ::node	0.1.1	any	18-19
# ::node	0.2	personal	15-16
# ::root	0	responsible-41
# ::edge	accident	mod	any	0.1	0.1.1	
# ::edge	accident	mod	serious	0.1	0.1.0	
# ::edge	ask-02	ARG1	magazine	0.0.2	0.0.2.0	
# ::edge	ask-02	ARG2	they	0.0.2	0.0	
# ::edge	date-entity	mod	next	0.1.0.0	0.1.0.0.0	
# ::edge	date-entity	mod	serious	0.1.0.0	0.1.0	
# ::edge	date-entity	month	6	0.1.0.0	0.1.0.0.1	
# ::edge	have-org-role-91	ARG0	they	0.0.0	0.0	
# ::edge	have-org-role-91	ARG1	council	0.0.0	0.0.0.0	
# ::edge	have-org-role-91	ARG2	member	0.0.0	0.0.0.1	
# ::edge	influence-01	ARG0	they	0.0.1	0.0	
# ::edge	influence-01	ARG1	race	0.0.1	0.0.1.0	
# ::edge	responsible-41	ARG1	they	0	0.0	
# ::edge	responsible-41	ARG2	accident	0	0.1	
# ::edge	responsible-41	mod	personal	0	0.2	
(r2 / responsible-41 
      :ARG1 (t / they 
            :ARG0-of (h / have-org-role-91 
                  :ARG1 (c / council) 
                  :ARG2 (m / member)) 
            :ARG0-of (i / influence-01 
                  :ARG1 (r / race)) 
            :ARG2-of (a3 / ask-02 
                  :ARG1 (m2 / magazine))) 
      :ARG2 (a / accident 
            :mod (s / serious 
                  :mod-of (d / date-entity 
                        :mod (n / next) 
                        :month 6)) 
            :mod (a2 / any)) 
      :mod (p / personal))

# ::snt were having with effect from next monday to reduce vocal soundum our service to urgent cases only accidents emergency cases those that need urgent medical care they will be dealt with but patients who are awaiting this type cases for orthopaedics gynaecology general surgery vocal soundum will have to be postponed for a period of about 5 weeks
# ::tok were having with effect from next monday to reduce vocal soundum our service to urgent cases only accidents emergency cases those that need urgent medical care they will be dealt with but patients who are awaiting this type cases for orthopaedics gynaecology general surgery vocal soundum will have to be postponed for a period of about 5 weeks
# ::alignments 57-58|0.1.0.0.0.0+0.1.0.0.0 56-57|0.1.0.0 53-54|0.3.1.0.0 50-51|0.3.1.0 44-45|0.3.1.1.0.1 43-44|0.3.1.1.0.0 42-43|0.3.1.1.0.0.0 38-39|0.1.1 37-38|0.1.1.0 36-37|0.1.1.1 35-36|0.1 32-33|0.1.0.1+0.1.0 31-32|0 29-30|0.3 26-27|0.3.1 25-26|0.3.1.1 24-25|0.3.1.1.2 23-24|0.3.1.1.1 22-23|0.3.1.1.0 19-20|0.2.1 18-19|0.2.1.0 17-18|0.2.1.1 16-17|0.2.3 15-16|0.2.2 14-15|0.2.2.0 9-10|0.0 8-9|0.2 5-6|0.3.0 3-4|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:30.000
# ::node	0	contrast-01	31-32
# ::node	0.0	vocal	9-10
# ::node	0.1	await-01	35-36
# ::node	0.1.0	have-rel-role-91	32-33
# ::node	0.1.0.0	5	56-57
# ::node	0.1.0.0.0	temporal-quantity	57-58
# ::node	0.1.0.0.0.0	week	57-58
# ::node	0.1.0.1	patient	32-33
# ::node	0.1.1	case	38-39
# ::node	0.1.1.0	type	37-38
# ::node	0.1.1.1	this	36-37
# ::node	0.2	reduce-01	8-9
# ::node	0.2.0	effect-01	3-4
# ::node	0.2.1	case	19-20
# ::node	0.2.1.0	emergency	18-19
# ::node	0.2.1.1	accident	17-18
# ::node	0.2.2	case	15-16
# ::node	0.2.2.0	urgent	14-15
# ::node	0.2.3	only	16-17
# ::node	0.3	deal-01	29-30
# ::node	0.3.0	next	5-6
# ::node	0.3.1	they	26-27
# ::node	0.3.1.0	postpone-01	50-51
# ::node	0.3.1.0.0	period	53-54
# ::node	0.3.1.1	care-01	25-26
# ::node	0.3.1.1.0	need-01	22-23
# ::node	0.3.1.1.0.0	surgery	43-44
# ::node	0.3.1.1.0.0.0	general	42-43
# ::node	0.3.1.1.0.1	vocal	44-45
# ::node	0.3.1.1.1	urgent	23-24
# ::node	0.3.1.1.2	medicine	24-25
# ::root	0	contrast-01
# ::edge	await-01	ARG0	contrast-01	0.1	0	
# ::edge	await-01	ARG1	case	0.1	0.1.1	
# ::edge	care-01	ARG1	they	0.3.1.1	0.3.1	
# ::edge	care-01	manner	urgent	0.3.1.1	0.3.1.1.1	
# ::edge	care-01	mod	medicine	0.3.1.1	0.3.1.1.2	
# ::edge	case	mod	accident	0.2.1	0.2.1.1	
# ::edge	case	mod	emergency	0.2.1	0.2.1.0	
# ::edge	case	mod	this	0.1.1	0.1.1.1	
# ::edge	case	mod	type	0.1.1	0.1.1.0	
# ::edge	case	mod	urgent	0.2.2	0.2.2.0	
# ::edge	contrast-01	ARG0	vocal	0	0.0	
# ::edge	contrast-01	ARG1	reduce-01	0	0.2	
# ::edge	contrast-01	manner	deal-01	0	0.3	
# ::edge	deal-01	ARG0	next	0.3	0.3.0	
# ::edge	deal-01	ARG1	they	0.3	0.3.1	
# ::edge	have-rel-role-91	ARG0	await-01	0.1.0	0.1	
# ::edge	have-rel-role-91	ARG1	5	0.1.0	0.1.0.0	
# ::edge	have-rel-role-91	ARG2	patient	0.1.0	0.1.0.1	
# ::edge	need-01	ARG1	care-01	0.3.1.1.0	0.3.1.1	
# ::edge	postpone-01	ARG0	they	0.3.1.0	0.3.1	
# ::edge	postpone-01	duration	period	0.3.1.0	0.3.1.0.0	
# ::edge	reduce-01	ARG0	effect-01	0.2	0.2.0	
# ::edge	reduce-01	ARG1	case	0.2	0.2.1	
# ::edge	reduce-01	ARG2	case	0.2	0.2.2	
# ::edge	reduce-01	mod	only	0.2	0.2.3	
# ::edge	surgery	mod	general	0.3.1.1.0.0	0.3.1.1.0.0.0	
# ::edge	surgery	op1	need-01	0.3.1.1.0.0	0.3.1.1.0	
# ::edge	temporal-quantity	quant	5	0.1.0.0.0	0.1.0.0	
# ::edge	temporal-quantity	unit	week	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	vocal	op1	need-01	0.3.1.1.0.1	0.3.1.1.0	
(c2 / contrast-01 
      :ARG0 (v2 / vocal) 
      :ARG0-of (a / await-01 
            :ARG0-of (h / have-rel-role-91 
                  :ARG1 (5 / 5 
                        :quant-of (t / temporal-quantity 
                              :unit (w / week))) 
                  :ARG2 (p3 / patient)) 
            :ARG1 (c / case 
                  :mod (t2 / type) 
                  :mod (t3 / this))) 
      :ARG1 (r / reduce-01 
            :ARG0 (e2 / effect-01) 
            :ARG1 (c4 / case 
                  :mod (e / emergency) 
                  :mod (a2 / accident)) 
            :ARG2 (c5 / case 
                  :mod (u2 / urgent)) 
            :mod (o / only)) 
      :manner (d / deal-01 
            :ARG0 (n2 / next) 
            :ARG1 (t4 / they 
                  :ARG0-of (p2 / postpone-01 
                        :duration (p / period)) 
                  :ARG1-of (c3 / care-01 
                        :ARG1-of (n / need-01 
                              :op-of (s / surgery 
                                    :mod (g / general)) 
                              :op-of (v / vocal)) 
                        :manner (u / urgent) 
                        :mod (m / medicine)))))

# ::snt the accident occurred shortly after midday
# ::tok the accident occurred shortly after midday
# ::alignments 5-6|0 4-5|0.0 3-4|0.0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:30.009
# ::node	0	midday	5-6
# ::node	0.0	after	4-5
# ::node	0.0.0	short	3-4
# ::node	0.0.1	accident	1-2
# ::root	0	midday
(m / midday 
      :op-of (a / after 
            :mod (s / short) 
            :time-of (a2 / accident)))

# ::snt if there was a nuclear accident in the us and everybody started to leave you would not call it a herd instinct
# ::tok if there was a nuclear accident in the us and everybody started to leave you would not call it a herd instinct
# ::alignments 21-22|0.1.0 20-21|0.1.0.0 18-19|0.1.2 14-15|0.1.1.1 13-14|0.1.1 11-12|0.1 10-11|0.0 9-10|0 5-6|0.1.1.0 4-5|0.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:30.308
# ::node	0	and	9-10
# ::node	0.0	everybody	10-11
# ::node	0.1	start-01	11-12
# ::node	0.1.0	instinct	21-22
# ::node	0.1.0.0	herd	20-21
# ::node	0.1.1	leave-01	13-14
# ::node	0.1.1.0	accident	5-6
# ::node	0.1.1.0.0	nucleus	4-5
# ::node	0.1.1.1	you	14-15
# ::node	0.1.2	it	18-19
# ::root	0	and
# ::edge	accident	mod	nucleus	0.1.1.0	0.1.1.0.0	
# ::edge	and	op1	everybody	0	0.0	
# ::edge	and	op2	start-01	0	0.1	
# ::edge	instinct	mod	herd	0.1.0	0.1.0.0	
# ::edge	leave-01	ARG0	accident	0.1.1	0.1.1.0	
# ::edge	leave-01	ARG1	you	0.1.1	0.1.1.1	
# ::edge	start-01	ARG0	instinct	0.1	0.1.0	
# ::edge	start-01	ARG1	leave-01	0.1	0.1.1	
# ::edge	start-01	time	it	0.1	0.1.2	
(a / and 
      :op1 (e / everybody) 
      :op2 (s / start-01 
            :ARG0 (i / instinct 
                  :mod (h / herd)) 
            :ARG1 (l / leave-01 
                  :ARG0 (a2 / accident 
                        :mod (n / nucleus)) 
                  :ARG1 (y / you)) 
            :time (i2 / it)))

# ::snt  the cause of the accident has not been confirmed but reports said there may have been a leak from a pump that keeps ethylene gas under pressure
# ::tok the cause of the accident has not been confirmed but reports said there may have been a leak from a pump that keeps ethylene gas under pressure
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:30.309
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt secretary of the bicester hunt with whaddon chase mr robert vallance saidthe bicester hunt are very sorry indeed that this accident took place and i personally apologised to the driver mr olejnik on behalf of the hunt,  i exchanged insurance details with mr olejnik as one would normally do in the case of a motor accident on the public highway and i waited with him to make sure he was alright
# ::tok secretary of the bicester hunt with whaddon chase mr robert vallance saidthe bicester hunt are very sorry indeed that this accident took place and i personally apologised to the driver mr olejnik on behalf of the hunt , i exchanged insurance details with mr olejnik as one would normally do in the case of a motor accident on the public highway and i waited with him to make sure he was alright
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:30.313
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt anyone who has been involved in deciding career choices with their children finding suitable accommodation for elderly relatives or reporting a traffic accident in their own country will appreciate this
# ::tok anyone who has been involved in deciding career choices with their children finding suitable accommodation for elderly relatives or reporting a traffic accident in their own country will appreciate this
# ::alignments 29-30|0.2.1.2.0.0.0 28-29|0.2.1.2.0.0 26-27|0.1.1 22-23|0.1 21-22|0.1.0 19-20|0 18-19|0.2 17-18|0.0.0.0+0.0.0 16-17|0.2.1.0 14-15|0.2.0.0 13-14|0.2.0.0.0 12-13|0.2.0 11-12|0.0 7-8|0.2.1.1 6-7|0.2.1 4-5|0.2.1.2 0-1|0.2.1.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:30.699
# ::node	0	report-01	19-20
# ::node	0.0	child	11-12
# ::node	0.0.0	have-rel-role-91	17-18
# ::node	0.0.0.0	relative	17-18
# ::node	0.1	accident	22-23
# ::node	0.1.0	traffic	21-22
# ::node	0.1.1	country	26-27
# ::node	0.2	or	18-19
# ::node	0.2.0	find-01	12-13
# ::node	0.2.0.0	accommodation	14-15
# ::node	0.2.0.0.0	suit-01	13-14
# ::node	0.2.1	decide-01	6-7
# ::node	0.2.1.0	elderly	16-17
# ::node	0.2.1.1	career	7-8
# ::node	0.2.1.2	involve-01	4-5
# ::node	0.2.1.2.0	anyone	0-1
# ::node	0.2.1.2.0.0	appreciate-02	28-29
# ::node	0.2.1.2.0.0.0	this	29-30
# ::root	0	report-01
# ::edge	accident	location	traffic	0.1	0.1.0	
# ::edge	accident	poss	country	0.1	0.1.1	
# ::edge	appreciate-02	ARG0	anyone	0.2.1.2.0.0	0.2.1.2.0	
# ::edge	appreciate-02	ARG1	this	0.2.1.2.0.0	0.2.1.2.0.0.0	
# ::edge	decide-01	ARG0	elderly	0.2.1	0.2.1.0	
# ::edge	decide-01	ARG1	career	0.2.1	0.2.1.1	
# ::edge	find-01	ARG1	accommodation	0.2.0	0.2.0.0	
# ::edge	have-rel-role-91	ARG1	child	0.0.0	0.0	
# ::edge	have-rel-role-91	ARG2	relative	0.0.0	0.0.0.0	
# ::edge	involve-01	ARG1	anyone	0.2.1.2	0.2.1.2.0	
# ::edge	involve-01	ARG2	decide-01	0.2.1.2	0.2.1	
# ::edge	or	condition	find-01	0.2	0.2.0	
# ::edge	or	op1	decide-01	0.2	0.2.1	
# ::edge	or	op2	report-01	0.2	0	
# ::edge	report-01	ARG0	child	0	0.0	
# ::edge	report-01	ARG1	accident	0	0.1	
# ::edge	suit-01	ARG0	accommodation	0.2.0.0.0	0.2.0.0	
(r / report-01 
      :ARG0 (c2 / child 
            :ARG1-of (h / have-rel-role-91 
                  :ARG2 (r2 / relative))) 
      :ARG1 (a2 / accident 
            :location (t2 / traffic) 
            :poss (c / country)) 
      :op-of (o / or 
            :condition (f / find-01 
                  :ARG1 (a3 / accommodation 
                        :ARG0-of (s / suit-01))) 
            :op1 (d / decide-01 
                  :ARG0 (e / elderly) 
                  :ARG1 (c3 / career) 
                  :ARG2-of (i / involve-01 
                        :ARG1 (a4 / anyone 
                              :ARG0-of (a / appreciate-02 
                                    :ARG1 (t / this)))))))

# ::snt this could be an accident or possibly a subtle directorial ploy on the part of the french director robert enrico in charge of the other half of the film
# ::tok this could be an accident or possibly a subtle directorial ploy on the part of the french director robert enrico in charge of the other half of the film
# ::alignments 28-29|0.0.0.1.0.3.1 25-26|0.0.0.1.0.3 24-25|0.0.0.1.0.3.0 17-18|0.0.0.1.0.2+0.0.0.1.0 16-17|0.0.0.1.0.1.0.0+0.0.0.1.0.1.0+0.0.0.1.0.1 10-11|0.0.0.1 6-7|0.0.0.0 5-6|0.0.0 4-5|0.0 1-2|0 0-1|0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:30.805
# ::node	0	possible	1-2
# ::node	0.0	accident	4-5
# ::node	0.0.0	or	5-6
# ::node	0.0.0.0	possible	6-7
# ::node	0.0.0.1	ploy	10-11
# ::node	0.0.0.1.0	have-org-role-91	17-18
# ::node	0.0.0.1.0.0	this	0-1
# ::node	0.0.0.1.0.1	country	16-17
# ::node	0.0.0.1.0.1.0	name	16-17
# ::node	0.0.0.1.0.1.0.0	"France"	16-17
# ::node	0.0.0.1.0.2	director	17-18
# ::node	0.0.0.1.0.3	half	25-26
# ::node	0.0.0.1.0.3.0	other	24-25
# ::node	0.0.0.1.0.3.1	film	28-29
# ::root	0	possible
# ::edge	country	name	name	0.0.0.1.0.1	0.0.0.1.0.1.0	
# ::edge	half	mod	other	0.0.0.1.0.3	0.0.0.1.0.3.0	
# ::edge	half	topic	film	0.0.0.1.0.3	0.0.0.1.0.3.1	
# ::edge	have-org-role-91	ARG0	this	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	have-org-role-91	ARG1	country	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	have-org-role-91	ARG2	director	0.0.0.1.0	0.0.0.1.0.2	
# ::edge	have-org-role-91	ARG3	half	0.0.0.1.0	0.0.0.1.0.3	
# ::edge	have-org-role-91	mod	ploy	0.0.0.1.0	0.0.0.1	
# ::edge	name	op1	"France"	0.0.0.1.0.1.0	0.0.0.1.0.1.0.0	
# ::edge	or	mod	possible	0.0.0	0.0.0.0	
# ::edge	or	op1	accident	0.0.0	0.0	
# ::edge	or	op2	ploy	0.0.0	0.0.0.1	
# ::edge	possible	domain	accident	0	0.0	
(p3 / possible 
      :domain (a / accident 
            :op-of (o2 / or 
                  :mod (p2 / possible) 
                  :op1 (p / ploy 
                        :mod-of (h2 / have-org-role-91 
                              :ARG0 (t / this) 
                              :ARG1 (c / country 
                                    :name (n / name 
                                          :op1 "France")) 
                              :ARG2 (d / director) 
                              :ARG3 (h / half 
                                    :mod (o / other) 
                                    :topic (f / film)))))))

# ::snt   but i will have your mother here to stay with me as she was to come before her accident
# ::tok but i will have your mother here to stay with me as she was to come before her accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:30.806
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt at the oxford road junction there had been 11 injury accidents including four fatalities in the past ten years
# ::tok at the oxford road junction there had been 11 injury accidents including four fatalities in the past ten years
# ::alignments 18-19|0.0.0.2+0.0.0 16-17|0.0.0.0 13-14|0 12-13|0.1 10-11|0.0.1 9-10|0.0 8-9|0.0.1.0 3-4|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:30.850
# ::node	0	fatality	13-14
# ::node	0.0	injure-01	9-10
# ::node	0.0.0	temporal-quantity	18-19
# ::node	0.0.0.0	past	16-17
# ::node	0.0.0.1	road	3-4
# ::node	0.0.0.2	year	18-19
# ::node	0.0.1	accident	10-11
# ::node	0.0.1.0	11	8-9
# ::node	0.1	4	12-13
# ::root	0	fatality
# ::edge	accident	mod	injure-01	0.0.1	0.0	
# ::edge	accident	quant	11	0.0.1	0.0.1.0	
# ::edge	fatality	quant	4	0	0.1	
# ::edge	injure-01	ARG0	temporal-quantity	0.0	0.0.0	
# ::edge	injure-01	ARG1	fatality	0.0	0	
# ::edge	past	op1	temporal-quantity	0.0.0.0	0.0.0	
# ::edge	road	poss	temporal-quantity	0.0.0.1	0.0.0	
# ::edge	temporal-quantity	unit	year	0.0.0	0.0.0.2	
(f / fatality 
      :ARG1-of (i / injure-01 
            :ARG0 (t / temporal-quantity 
                  :op-of (p / past) 
                  :poss-of (r / road) 
                  :unit (y / year)) 
            :mod-of (a / accident 
                  :quant 11)) 
      :quant 4)

# ::snt   dennis said he did not blame either driver for the accident
# ::tok dennis said he did not blame either driver for the accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:30.850
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt a sales executive who was under pressure at work and had worked all night died the following morning in an accident near benson while on his way to a business appointment an oxford inquest was told
# ::tok a sales executive who was under pressure at work and had worked all night died the following morning in an accident near benson while on his way to a business appointment an oxford inquest was told
# ::alignments 35-36|0.1.0.0 33-34|0.1.0.0.0 30-31|0.1.0.0.1 29-30|0.1.0.0.1.0 26-27|0.1.1.1 21-22|0.1.1.0 20-21|0.1.1.0.0 17-18|0.1.1.2 14-15|0.1.1 13-14|0.1.2 12-13|0.1.2.0 11-12|0.1 9-10|0 6-7|0.0 2-3|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:31.008
# ::node	0	and	9-10
# ::node	0.0	pressure-01	6-7
# ::node	0.1	work-01	11-12
# ::node	0.1.0	executive	2-3
# ::node	0.1.0.0	tell-01	35-36
# ::node	0.1.0.0.0	inquest	33-34
# ::node	0.1.0.0.1	appointment	30-31
# ::node	0.1.0.0.1.0	business	29-30
# ::node	0.1.1	die-01	14-15
# ::node	0.1.1.0	near	21-22
# ::node	0.1.1.0.0	accident	20-21
# ::node	0.1.1.1	way	26-27
# ::node	0.1.1.2	morning	17-18
# ::node	0.1.2	night	13-14
# ::node	0.1.2.0	all	12-13
# ::root	0	and
# ::edge	accident	location	near	0.1.1.0.0	0.1.1.0	
# ::edge	and	op1	work-01	0	0.1	
# ::edge	appointment	mod	business	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	die-01	ARG0	near	0.1.1	0.1.1.0	
# ::edge	die-01	purpose	way	0.1.1	0.1.1.1	
# ::edge	die-01	time	morning	0.1.1	0.1.1.2	
# ::edge	night	mod	all	0.1.2	0.1.2.0	
# ::edge	pressure-01	ARG0	and	0.0	0	
# ::edge	tell-01	ARG0	executive	0.1.0.0	0.1.0	
# ::edge	tell-01	ARG1	inquest	0.1.0.0	0.1.0.0.0	
# ::edge	tell-01	location	appointment	0.1.0.0	0.1.0.0.1	
# ::edge	work-01	ARG0	executive	0.1	0.1.0	
# ::edge	work-01	ARG1	die-01	0.1	0.1.1	
# ::edge	work-01	time	night	0.1	0.1.2	
(a4 / and 
      :ARG0-of (p / pressure-01) 
      :op1 (w2 / work-01 
            :ARG0 (e / executive 
                  :ARG0-of (t / tell-01 
                        :ARG1 (i / inquest) 
                        :location (a / appointment 
                              :mod (b / business)))) 
            :ARG1 (d / die-01 
                  :ARG0 (n / near 
                        :location-of (a2 / accident)) 
                  :purpose (w / way) 
                  :time (m / morning)) 
            :time (n2 / night 
                  :mod (a3 / all))))

# ::snt brs area manager mr bob owen said the inquiry team would look at all factors of the accident
# ::tok brs area manager mr bob owen said the inquiry team would look at all factors of the accident
# ::alignments 17-18|0.0.1.0.0.0.0 14-15|0.0.1.0.0.0 13-14|0.0.1.0.0 9-10|0.0.1 8-9|0.0.1.0 6-7|0 2-3|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:31.037
# ::node	0	say-01	6-7
# ::node	0.0	manage-01	2-3
# ::node	0.0.0	area	1-2
# ::node	0.0.1	team	9-10
# ::node	0.0.1.0	inquire-01	8-9
# ::node	0.0.1.0.0	all	13-14
# ::node	0.0.1.0.0.0	factor	14-15
# ::node	0.0.1.0.0.0.0	accident	17-18
# ::root	0	say-01
# ::edge	factor	mod	accident	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	factor	quant	all	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	inquire-01	ARG0	team	0.0.1.0	0.0.1	
# ::edge	inquire-01	ARG1	all	0.0.1.0	0.0.1.0.0	
# ::edge	manage-01	mod	area	0.0	0.0.0	
# ::edge	say-01	ARG0	manage-01	0	0.0	
# ::edge	team	op1	manage-01	0.0.1	0.0	
(s / say-01 
      :ARG0 (m / manage-01 
            :mod (a3 / area) 
            :op-of (t / team 
                  :ARG0-of (i / inquire-01 
                        :ARG1 (a2 / all 
                              :quant-of (f / factor 
                                    :mod (a / accident)))))))

# ::snt rosa had moved from tucupita to be with her daughter alicia after the death of juans father in a riding accident
# ::tok rosa had moved from tucupita to be with her daughter alicia after the death of juans father in a riding accident
# ::alignments 20-21|0.0.1.0 19-20|0.0.1.0.0 16-17|0.0.1.1+0.0.1 13-14|0.0.0 11-12|0.0 9-10|0.0.0.0.0+0.0.0.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:31.075
# ::node	0	move-01	2-3
# ::node	0.0	after	11-12
# ::node	0.0.0	die-01	13-14
# ::node	0.0.0.0	have-rel-role-91	9-10
# ::node	0.0.0.0.0	daughter	9-10
# ::node	0.0.1	have-rel-role-91	16-17
# ::node	0.0.1.0	accident	20-21
# ::node	0.0.1.0.0	ride-01	19-20
# ::node	0.0.1.1	father	16-17
# ::root	0	move-01
# ::edge	accident	location	ride-01	0.0.1.0	0.0.1.0.0	
# ::edge	after	op1	die-01	0.0	0.0.0	
# ::edge	after	op2	have-rel-role-91	0.0	0.0.1	
# ::edge	have-rel-role-91	ARG1	accident	0.0.1	0.0.1.0	
# ::edge	have-rel-role-91	ARG1	die-01	0.0.0.0	0.0.0	
# ::edge	have-rel-role-91	ARG2	daughter	0.0.0.0	0.0.0.0.0	
# ::edge	have-rel-role-91	ARG2	father	0.0.1	0.0.1.1	
# ::edge	move-01	time	after	0	0.0	
(m / move-01 
      :time (a2 / after 
            :op1 (d / die-01 
                  :ARG1-of (h2 / have-rel-role-91 
                        :ARG2 (d2 / daughter))) 
            :op2 (h / have-rel-role-91 
                  :ARG1 (a / accident 
                        :location (r / ride-01)) 
                  :ARG2 (f / father))))

# ::snt fisa technical man charlie whiting said it all martin survived an unsurvivable accident
# ::tok fisa technical man charlie whiting said it all martin survived an unsurvivable accident
# ::alignments 12-13|0.2.0 9-10|0.2 7-8|0.1.0 6-7|0.1 5-6|0 2-3|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:31.219
# ::node	0	say-01	5-6
# ::node	0.0	man	2-3
# ::node	0.0.0	technical	1-2
# ::node	0.1	it	6-7
# ::node	0.1.0	all	7-8
# ::node	0.2	survive-01	9-10
# ::node	0.2.0	accident	12-13
# ::root	0	say-01
# ::edge	it	quant	all	0.1	0.1.0	
# ::edge	man	mod	technical	0.0	0.0.0	
# ::edge	say-01	ARG0	man	0	0.0	
# ::edge	say-01	ARG1	it	0	0.1	
# ::edge	say-01	ARG2	survive-01	0	0.2	
# ::edge	survive-01	ARG1	accident	0.2	0.2.0	
(s2 / say-01 
      :ARG0 (m / man 
            :mod (t / technical)) 
      :ARG1 (i / it 
            :quant (a2 / all)) 
      :ARG2 (s / survive-01 
            :ARG1 (a / accident)))

# ::snt we do routines like comic nurses and doctors with a pretend accident in the arena
# ::tok we do routines like comic nurses and doctors with a pretend accident in the arena
# ::alignments 14-15|0.1.0.1 11-12|0.1.0 10-11|0.1.0.0 7-8|0.1 6-7|0 5-6|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:31.257
# ::node	0	and	6-7
# ::node	0.0	nurse	5-6
# ::node	0.0.0	we	0-1
# ::node	0.1	doctor	7-8
# ::node	0.1.0	accident	11-12
# ::node	0.1.0.0	pretend-01	10-11
# ::node	0.1.0.1	arena	14-15
# ::root	0	and
# ::edge	and	op1	nurse	0	0.0	
# ::edge	and	op2	doctor	0	0.1	
# ::edge	arena	part	accident	0.1.0.1	0.1.0	
# ::edge	doctor	location	accident	0.1	0.1.0	
# ::edge	nurse	poss	we	0.0	0.0.0	
# ::edge	pretend-01	ARG1	accident	0.1.0.0	0.1.0	
(a3 / and 
      :op1 (n / nurse 
            :poss (w / we)) 
      :op2 (d / doctor 
            :location (a2 / accident 
                  :ARG1-of (p / pretend-01) 
                  :part-of (a / arena))))

# ::snt perhaps closer to the truth is that nofault compensation for motor traffic accidents had moved to the forefront of the legislative agenda and become a contentious public issue
# ::tok perhaps closer to the truth is that nofault compensation for motor traffic accidents had moved to the forefront of the legislative agenda and become a contentious public issue
# ::alignments 27-28|0.0.0.1.1.1 26-27|0.0.0.1.1.1.0 25-26|0.0.0.1.1.1.1 23-24|0.0.0.1.1.0 22-23|0.0.0.1.1 21-22|0.0.0.1.0 20-21|0.0.0.1.0.0 14-15|0.0.0.1 12-13|0.0.0.0 11-12|0.0.0.0.0 10-11|0.0.0.0.0.0 8-9|0.0.0 4-5|0.0 1-2|0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:31.586
# ::node	0	close	1-2
# ::node	0.0	truth	4-5
# ::node	0.0.0	compensate-01	8-9
# ::node	0.0.0.0	accident	12-13
# ::node	0.0.0.0.0	traffic	11-12
# ::node	0.0.0.0.0.0	motorcycle	10-11
# ::node	0.0.0.1	move-01	14-15
# ::node	0.0.0.1.0	agenda	21-22
# ::node	0.0.0.1.0.0	legislate-01	20-21
# ::node	0.0.0.1.1	and	22-23
# ::node	0.0.0.1.1.0	become-01	23-24
# ::node	0.0.0.1.1.1	issue	27-28
# ::node	0.0.0.1.1.1.0	public	26-27
# ::node	0.0.0.1.1.1.1	contentious	25-26
# ::node	0.1	perhaps	0-1
# ::root	0	close
# ::edge	accident	mod	traffic	0.0.0.0	0.0.0.0.0	
# ::edge	and	op1	move-01	0.0.0.1.1	0.0.0.1	
# ::edge	and	op2	become-01	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	and	op3	issue	0.0.0.1.1	0.0.0.1.1.1	
# ::edge	close	compared-to	truth	0	0.0	
# ::edge	close	mod	perhaps	0	0.1	
# ::edge	compensate-01	ARG0	truth	0.0.0	0.0	
# ::edge	compensate-01	ARG1	accident	0.0.0	0.0.0.0	
# ::edge	issue	mod	contentious	0.0.0.1.1.1	0.0.0.1.1.1.1	
# ::edge	issue	mod	public	0.0.0.1.1.1	0.0.0.1.1.1.0	
# ::edge	legislate-01	ARG0	agenda	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	move-01	ARG1	compensate-01	0.0.0.1	0.0.0	
# ::edge	move-01	ARG2	agenda	0.0.0.1	0.0.0.1.0	
# ::edge	traffic	mod	motorcycle	0.0.0.0.0	0.0.0.0.0.0	
(c3 / close 
      :compared-to (t2 / truth 
            :ARG0-of (c2 / compensate-01 
                  :ARG1 (a3 / accident 
                        :mod (t / traffic 
                              :mod (m2 / motorcycle))) 
                  :ARG1-of (m / move-01 
                        :ARG2 (a2 / agenda 
                              :ARG0-of (l / legislate-01)) 
                        :op-of (a / and 
                              :op1 (b / become-01) 
                              :op2 (i / issue 
                                    :mod (p / public) 
                                    :mod (c / contentious)))))) 
      :mod (p2 / perhaps))

# ::snt traffic on the m twenty five is heavy and slow moving between junctions fifteen and sixteen thats between the m four and the m forty thats on the clockwise section due to an earlier accident
# ::tok traffic on the m twenty five is heavy and slow moving between junctions fifteen and sixteen thats between the m four and the m forty thats on the clockwise section due to an earlier accident
# ::alignments 34-35|0.0.4.0 33-34|0.0.4 29-30|0.0.1.1.0 25-26|0.0.1.1 21-22|0.0.0.0 20-21|0.0.1.1.1.0 17-18|0.0.1.1.1 16-17|0.0.1.0 14-15|0.0.0 11-12|0.0.1 10-11|0.0 8-9|0 7-8|0.0.2 5-6|0.0.3 0-1|0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:32.086
# ::node	0	and	8-9
# ::node	0.0	move-01	10-11
# ::node	0.0.0	and	14-15
# ::node	0.0.0.0	and	21-22
# ::node	0.0.1	between	11-12
# ::node	0.0.1.0	that	16-17
# ::node	0.0.1.1	that	25-26
# ::node	0.0.1.1.0	section	29-30
# ::node	0.0.1.1.1	between	17-18
# ::node	0.0.1.1.1.0	4	20-21
# ::node	0.0.2	heavy	7-8
# ::node	0.0.2.0	traffic	0-1
# ::node	0.0.3	5	5-6
# ::node	0.0.4	early	33-34
# ::node	0.0.4.0	accident	34-35
# ::root	0	and
(a4 / and 
      :ARG1-of (m / move-01 
            :ARG0 (a3 / and 
                  :op-of (a2 / and)) 
            :ARG2 (b2 / between 
                  :op1 (t2 / that) 
                  :op2 (t / that 
                        :location (s / section) 
                        :op-of (b / between 
                              :op1 4))) 
            :domain-of (h / heavy 
                  :domain (t3 / traffic)) 
            :manner 5 
            :op-of (e / early 
                  :mod-of (a / accident))))

# ::snt dr nussey says that industrial accidents cost the nation up to 3bn every year and some happen because safety gear is not used properly if at all
# ::tok dr nussey says that industrial accidents cost the nation up to 3bn every year and some happen because safety gear is not used properly if at all
# ::alignments 26-27|0.1.1.0.2.0.0 23-24|0.1.1.0.2.0.2 22-23|0.1.1.0.2.0 19-20|0.1.1.0.2.0.1 18-19|0.1.1.1 17-18|0.1.1.0.2 16-17|0.1.1.0 15-16|0.1.1.1.0 14-15|0.1.1 13-14|0.0 12-13|0.1.1.0.1 8-9|0.1.0 6-7|0.1 5-6|0.1.1.0.0 4-5|0.1.1.0.0.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:32.533
# ::node	0	say-01	2-3
# ::node	0.0	year	13-14
# ::node	0.1	cost-01	6-7
# ::node	0.1.0	nation	8-9
# ::node	0.1.1	and	14-15
# ::node	0.1.1.0	happen-01	16-17
# ::node	0.1.1.0.0	accident	5-6
# ::node	0.1.1.0.0.0	industry	4-5
# ::node	0.1.1.0.1	every	12-13
# ::node	0.1.1.0.2	cause-01	17-18
# ::node	0.1.1.0.2.0	use-01	22-23
# ::node	0.1.1.0.2.0.0	all	26-27
# ::node	0.1.1.0.2.0.1	gear	19-20
# ::node	0.1.1.0.2.0.2	proper	23-24
# ::node	0.1.1.1	safe-41	18-19
# ::node	0.1.1.1.0	some	15-16
# ::root	0	say-01
# ::edge	accident	mod	industry	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	and	op1	happen-01	0.1.1	0.1.1.0	
# ::edge	and	op2	safe-41	0.1.1	0.1.1.1	
# ::edge	cause-01	ARG0	use-01	0.1.1.0.2	0.1.1.0.2.0	
# ::edge	cause-01	ARG1	happen-01	0.1.1.0.2	0.1.1.0	
# ::edge	cost-01	ARG1	nation	0.1	0.1.0	
# ::edge	cost-01	ARG2	and	0.1	0.1.1	
# ::edge	happen-01	ARG0	accident	0.1.1.0	0.1.1.0.0	
# ::edge	happen-01	ARG1	every	0.1.1.0	0.1.1.0.1	
# ::edge	safe-41	ARG1	some	0.1.1.1	0.1.1.1.0	
# ::edge	say-01	ARG0	year	0	0.0	
# ::edge	say-01	ARG1	cost-01	0	0.1	
# ::edge	use-01	ARG0	all	0.1.1.0.2.0	0.1.1.0.2.0.0	
# ::edge	use-01	ARG1	gear	0.1.1.0.2.0	0.1.1.0.2.0.1	
# ::edge	use-01	ARG3	proper	0.1.1.0.2.0	0.1.1.0.2.0.2	
(s3 / say-01 
      :ARG0 (y / year) 
      :ARG1 (c2 / cost-01 
            :ARG1 (n / nation) 
            :ARG2 (a2 / and 
                  :op1 (h / happen-01 
                        :ARG0 (a3 / accident 
                              :mod (i / industry)) 
                        :ARG1 (e / every) 
                        :ARG1-of (c / cause-01 
                              :ARG0 (u / use-01 
                                    :ARG0 (a / all) 
                                    :ARG1 (g / gear) 
                                    :ARG3 (p / proper)))) 
                  :op2 (s / safe-41 
                        :ARG1 (s2 / some)))))

# ::snt however the union said the calls were cleared quickly because the london ambulance service called suspended crews to accidents
# ::tok however the union said the calls were cleared quickly because the london ambulance service called suspended crews to accidents
# ::alignments 18-19|0.0 15-16|0.1.1.1 12-13|0.1.2 11-12|0.1.0.0.0+0.1.0.0+0.1.0 9-10|0 8-9|0.1.3 7-8|0.1 3-4|0.1.1 2-3|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:32.701
# ::node	0	cause-01	9-10
# ::node	0.0	accident	18-19
# ::node	0.1	clear-01	7-8
# ::node	0.1.0	city	11-12
# ::node	0.1.0.0	name	11-12
# ::node	0.1.0.0.0	"London"	11-12
# ::node	0.1.1	say-01	3-4
# ::node	0.1.1.0	union	2-3
# ::node	0.1.1.1	suspend-01	15-16
# ::node	0.1.2	ambulance	12-13
# ::node	0.1.3	quick	8-9
# ::root	0	cause-01
# ::edge	cause-01	ARG0	accident	0	0.0	
# ::edge	cause-01	ARG1	clear-01	0	0.1	
# ::edge	city	name	name	0.1.0	0.1.0.0	
# ::edge	clear-01	ARG1	city	0.1	0.1.0	
# ::edge	clear-01	ARG4	ambulance	0.1	0.1.2	
# ::edge	clear-01	manner	quick	0.1	0.1.3	
# ::edge	name	op1	"London"	0.1.0.0	0.1.0.0.0	
# ::edge	say-01	ARG0	union	0.1.1	0.1.1.0	
# ::edge	say-01	ARG1	clear-01	0.1.1	0.1	
# ::edge	suspend-01	ARG1	say-01	0.1.1.1	0.1.1	
(c2 / cause-01 
      :ARG0 (a / accident) 
      :ARG1 (c3 / clear-01 
            :ARG1 (c / city 
                  :name (n / name 
                        :op1 "London")) 
            :ARG1-of (s2 / say-01 
                  :ARG0 (u / union) 
                  :ARG1-of (s / suspend-01)) 
            :ARG4 (a2 / ambulance) 
            :manner (q / quick)))

# ::snt club captain in 198687 when they were beaten cup finalists and 198788 league runnersup he became londons captain through the accident of jamie salmons hamstring injury at the beginning of last season
# ::tok club captain in 198687 when they were beaten cup finalists and 198788 league runnersup he became londons captain through the accident of jamie salmons hamstring injury at the beginning of last season
# ::alignments 31-32|0.0.1.1.0.0.0.1 30-31|0.0.1.1.0.0.0.1.0 28-29|0.0.1.1.0.0.0 25-26|0.0.1.1.0.0 20-21|0.0.1.1.0 17-18|0.0.1.1.1+0.0.1.1 15-16|0.0 14-15|0.0.1 12-13|0.0.2 11-12|0.0.1.1.0.0.0.3.2+0.0.1.1.0.0.0.3.1+0.0.1.1.0.0.0.3.0+0.0.1.1.0.0.0.3 10-11|0 8-9|0.0.0 5-6|0.0.1.1.0.0.0.0 3-4|0.0.1.1.0.0.0.2.2+0.0.1.1.0.0.0.2.1+0.0.1.1.0.0.0.2.0+0.0.1.1.0.0.0.2 1-2|0.0.1.0.1+0.0.1.0 0-1|0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:33.277
# ::node	0	and	10-11
# ::node	0.0	become-01	15-16
# ::node	0.0.0	cup	8-9
# ::node	0.0.1	he	14-15
# ::node	0.0.1.0	have-org-role-91	1-2
# ::node	0.0.1.0.0	club	0-1
# ::node	0.0.1.0.1	captain	1-2
# ::node	0.0.1.1	have-org-role-91	17-18
# ::node	0.0.1.1.0	accident	20-21
# ::node	0.0.1.1.0.0	injure-01	25-26
# ::node	0.0.1.1.0.0.0	begin-01	28-29
# ::node	0.0.1.1.0.0.0.0	they	5-6
# ::node	0.0.1.1.0.0.0.1	season	31-32
# ::node	0.0.1.1.0.0.0.1.0	last	30-31
# ::node	0.0.1.1.0.0.0.2	date-entity	3-4
# ::node	0.0.1.1.0.0.0.2.0	87	3-4
# ::node	0.0.1.1.0.0.0.2.1	86	3-4
# ::node	0.0.1.1.0.0.0.2.2	19	3-4
# ::node	0.0.1.1.0.0.0.3	date-entity	11-12
# ::node	0.0.1.1.0.0.0.3.0	88	11-12
# ::node	0.0.1.1.0.0.0.3.1	87	11-12
# ::node	0.0.1.1.0.0.0.3.2	19	11-12
# ::node	0.0.1.1.1	captain	17-18
# ::node	0.0.2	league	12-13
# ::root	0	and
# ::edge	and	op1	become-01	0	0.0	
# ::edge	become-01	ARG0	cup	0.0	0.0.0	
# ::edge	become-01	ARG1	he	0.0	0.0.1	
# ::edge	become-01	ARG3	league	0.0	0.0.2	
# ::edge	begin-01	ARG0	they	0.0.1.1.0.0.0	0.0.1.1.0.0.0.0	
# ::edge	begin-01	ARG1	season	0.0.1.1.0.0.0	0.0.1.1.0.0.0.1	
# ::edge	begin-01	time	date-entity	0.0.1.1.0.0.0	0.0.1.1.0.0.0.2	
# ::edge	begin-01	time	date-entity	0.0.1.1.0.0.0	0.0.1.1.0.0.0.3	
# ::edge	date-entity	day	87	0.0.1.1.0.0.0.2	0.0.1.1.0.0.0.2.0	
# ::edge	date-entity	day	88	0.0.1.1.0.0.0.3	0.0.1.1.0.0.0.3.0	
# ::edge	date-entity	month	86	0.0.1.1.0.0.0.2	0.0.1.1.0.0.0.2.1	
# ::edge	date-entity	month	87	0.0.1.1.0.0.0.3	0.0.1.1.0.0.0.3.1	
# ::edge	date-entity	year	19	0.0.1.1.0.0.0.2	0.0.1.1.0.0.0.2.2	
# ::edge	date-entity	year	19	0.0.1.1.0.0.0.3	0.0.1.1.0.0.0.3.2	
# ::edge	have-org-role-91	ARG0	he	0.0.1.0	0.0.1	
# ::edge	have-org-role-91	ARG0	he	0.0.1.1	0.0.1	
# ::edge	have-org-role-91	ARG1	accident	0.0.1.1	0.0.1.1.0	
# ::edge	have-org-role-91	ARG1	club	0.0.1.0	0.0.1.0.0	
# ::edge	have-org-role-91	ARG2	captain	0.0.1.0	0.0.1.0.1	
# ::edge	have-org-role-91	ARG2	captain	0.0.1.1	0.0.1.1.1	
# ::edge	injure-01	ARG0	accident	0.0.1.1.0.0	0.0.1.1.0	
# ::edge	injure-01	ARG1	begin-01	0.0.1.1.0.0	0.0.1.1.0.0.0	
# ::edge	season	mod	last	0.0.1.1.0.0.0.1	0.0.1.1.0.0.0.1.0	
(a2 / and 
      :op1 (b2 / become-01 
            :ARG0 (c2 / cup) 
            :ARG1 (h2 / he 
                  :ARG0-of (h3 / have-org-role-91 
                        :ARG1 (c4 / club) 
                        :ARG2 (c3 / captain)) 
                  :ARG0-of (h / have-org-role-91 
                        :ARG1 (a / accident 
                              :ARG0-of (i / injure-01 
                                    :ARG1 (b / begin-01 
                                          :ARG0 (t / they) 
                                          :ARG1 (s / season 
                                                :mod (l / last)) 
                                          :time (d2 / date-entity 
                                                :day 87 
                                                :month 86 
                                                :year 19) 
                                          :time (d / date-entity 
                                                :day 88 
                                                :month 87 
                                                :year 19)))) 
                        :ARG2 (c / captain))) 
            :ARG3 (l2 / league)))

# ::snt it is no accident that many slums  were built on marshes mosside in manchester the bogside in londonderry and  much of the east end of london where the suffix ey to many of the placenames tell us that they were islands in saxon times hackney stepney and most  notorious of all bermondsey where in the 1850s the river neckinger deadguys flowed round jacobs lsland which was used by  dickens as a setting for oliver twist and was described by him as deadguys
# ::tok it is no accident that many slums were built on marshes mosside in manchester the bogside in londonderry and much of the east end of london where the suffix ey to many of the placenames tell us that they were islands in saxon times hackney stepney and most notorious of all bermondsey where in the 1850s the river neckinger deadguys flowed round jacobs lsland which was used by dickens as a setting for oliver twist and was described by him as deadguys
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:33.279
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt if were going to have those in and out there then you are going to get accidents
# ::tok if were going to have those in and out there then you are going to get accidents
# ::alignments 16-17|0.0.0.0 11-12|0.0.0 10-11|0.0 7-8|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:33.306
# ::node	0	and	7-8
# ::node	0.0	then	10-11
# ::node	0.0.0	you	11-12
# ::node	0.0.0.0	accident	16-17
# ::root	0	and
# ::edge	accident	poss	you	0.0.0.0	0.0.0	
# ::edge	and	time	then	0	0.0	
# ::edge	then	mod	you	0.0	0.0.0	
(a2 / and 
      :time (t / then 
            :mod (y / you 
                  :poss-of (a / accident))))

# ::snt any prospect of a local deal to restart accident and emergency work foundered when the branch voted against a formula put forward by chief ambulance officer mr fred thornley
# ::tok any prospect of a local deal to restart accident and emergency work foundered when the branch voted against a formula put forward by chief ambulance officer mr fred thornley
# ::alignments 25-26|0.0.1.0.0.0 24-25|0.0.1.0.0 23-24|0.0.1.0.1+0.0.1.0 21-22|0.0.1.0.0.1 19-20|0.0.1.0.0.1.0 16-17|0.0.1.0.0.1.0.0 15-16|0.0.1.0.0.1.0.0.0 10-11|0.2 9-10|0 8-9|0.1 7-8|0.0 5-6|0.0.0 4-5|0.0.0.0 1-2|0.0.1 0-1|0.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:34.116
# ::node	0	and	9-10
# ::node	0.0	restart-01	7-8
# ::node	0.0.0	deal-01	5-6
# ::node	0.0.0.0	local	4-5
# ::node	0.0.1	prospect	1-2
# ::node	0.0.1.0	have-org-role-91	23-24
# ::node	0.0.1.0.0	ambulance	24-25
# ::node	0.0.1.0.0.0	officer	25-26
# ::node	0.0.1.0.0.1	forward	21-22
# ::node	0.0.1.0.0.1.0	formula	19-20
# ::node	0.0.1.0.0.1.0.0	vote-01	16-17
# ::node	0.0.1.0.0.1.0.0.0	branch	15-16
# ::node	0.0.1.0.1	chief	23-24
# ::node	0.0.1.1	any	0-1
# ::node	0.1	accident	8-9
# ::node	0.2	emergency	10-11
# ::root	0	and
# ::edge	and	op1	accident	0	0.1	
# ::edge	and	op2	emergency	0	0.2	
# ::edge	deal-01	ARG1	restart-01	0.0.0	0.0	
# ::edge	deal-01	mod	local	0.0.0	0.0.0.0	
# ::edge	forward	domain	formula	0.0.1.0.0.1	0.0.1.0.0.1.0	
# ::edge	forward	op1	ambulance	0.0.1.0.0.1	0.0.1.0.0	
# ::edge	have-org-role-91	ARG0	prospect	0.0.1.0	0.0.1	
# ::edge	have-org-role-91	ARG1	ambulance	0.0.1.0	0.0.1.0.0	
# ::edge	have-org-role-91	ARG2	chief	0.0.1.0	0.0.1.0.1	
# ::edge	officer	mod	ambulance	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	prospect	mod	any	0.0.1	0.0.1.1	
# ::edge	prospect	purpose	restart-01	0.0.1	0.0	
# ::edge	restart-01	ARG1	and	0.0	0	
# ::edge	vote-01	ARG0	branch	0.0.1.0.0.1.0.0	0.0.1.0.0.1.0.0.0	
# ::edge	vote-01	ARG1	formula	0.0.1.0.0.1.0.0	0.0.1.0.0.1.0	
(a2 / and 
      :ARG1-of (r / restart-01 
            :ARG1-of (d / deal-01 
                  :mod (l / local)) 
            :purpose-of (p / prospect 
                  :ARG0-of (h / have-org-role-91 
                        :ARG1 (a / ambulance 
                              :mod-of (o / officer) 
                              :op-of (f / forward 
                                    :domain (f2 / formula 
                                          :ARG1-of (v / vote-01 
                                                :ARG0 (b / branch))))) 
                        :ARG2 (c / chief)) 
                  :mod (a4 / any))) 
      :op1 (a3 / accident) 
      :op2 (e / emergency))

# ::snt 95  falklands spirit alastair cameron who was among the best and brightest of the young generation which grew up in the falkland islands before the 1982 invasion by argentina died in a motoring accident near bluff cove on friday at the age of 37
# ::tok 95 falklands spirit alastair cameron who was among the best and brightest of the young generation which grew up in the falkland islands before the 1982 invasion by argentina died in a motoring accident near bluff cove on friday at the age of 37
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:34.117
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt  as a former tory supporter i feel the government is heading for a nonsurvivable political accident and faces a widespread erosion of confidence
# ::tok as a former tory supporter i feel the government is heading for a nonsurvivable political accident and faces a widespread erosion of confidence
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:34.118
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the battle against rising road accidents could only be properly fought he said if people took more care, mr peverelcooper said in most accidents 95 per cent human error was partly or completely to blame
# ::tok the battle against rising road accidents could only be properly fought he said if people took more care , mr peverelcooper said in most accidents 95 per cent human error was partly or completely to blame
# ::alignments 35-36|0.0.0.0.0 33-34|0.0.0.0.2 32-33|0.0.0.0 31-32|0.0.0.0.1 29-30|0.0.0.0.0.0 28-29|0.0.0.1.0 27-28|0.0.0.0.0.0.0.0+0.0.0.0.0.0.0 25-26|0.2.0.0.0 24-25|0.1 23-24|0.1.0 21-22|0.0.0 17-18|0.0.0.1 12-13|0 11-12|0.0 10-11|0.2 9-10|0.2.2 7-8|0.2.3 6-7|0.2.1 5-6|0.2.0.0.1 4-5|0.2.0.0.1.0 3-4|0.2.0.0 1-2|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:35.415
# ::node	0	say-01	12-13
# ::node	0.0	he	11-12
# ::node	0.0.0	say-01	21-22
# ::node	0.0.0.0	or	32-33
# ::node	0.0.0.0.0	blame-01	35-36
# ::node	0.0.0.0.0.0	error	29-30
# ::node	0.0.0.0.0.0.0	monetary-quantity	27-28
# ::node	0.0.0.0.0.0.0.0	cent	27-28
# ::node	0.0.0.0.1	partly	31-32
# ::node	0.0.0.0.2	complete	33-34
# ::node	0.0.0.1	care-01	17-18
# ::node	0.0.0.1.0	human	28-29
# ::node	0.1	accident	24-25
# ::node	0.1.0	most	23-24
# ::node	0.2	fight-01	10-11
# ::node	0.2.0	battle-01	1-2
# ::node	0.2.0.0	rise-01	3-4
# ::node	0.2.0.0.0	95	25-26
# ::node	0.2.0.0.1	accident	5-6
# ::node	0.2.0.0.1.0	road	4-5
# ::node	0.2.1	possible	6-7
# ::node	0.2.2	proper	9-10
# ::node	0.2.3	only	7-8
# ::root	0	say-01
# ::edge	accident	location	road	0.2.0.0.1	0.2.0.0.1.0	
# ::edge	accident	quant	most	0.1	0.1.0	
# ::edge	battle-01	ARG1	rise-01	0.2.0	0.2.0.0	
# ::edge	blame-01	ARG0	error	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	blame-01	ARG1	or	0.0.0.0.0	0.0.0.0	
# ::edge	care-01	ARG0	human	0.0.0.1	0.0.0.1.0	
# ::edge	error	mod	monetary-quantity	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	fight-01	ARG1	say-01	0.2	0	
# ::edge	fight-01	ARG2	battle-01	0.2	0.2.0	
# ::edge	fight-01	manner	proper	0.2	0.2.2	
# ::edge	fight-01	mod	only	0.2	0.2.3	
# ::edge	monetary-quantity	unit	cent	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	or	op1	partly	0.0.0.0	0.0.0.0.1	
# ::edge	or	op2	complete	0.0.0.0	0.0.0.0.2	
# ::edge	possible	domain	fight-01	0.2.1	0.2	
# ::edge	rise-01	ARG0	95	0.2.0.0	0.2.0.0.0	
# ::edge	rise-01	ARG1	accident	0.2.0.0	0.2.0.0.1	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG0	he	0.0.0	0.0	
# ::edge	say-01	ARG1	accident	0	0.1	
# ::edge	say-01	ARG1	or	0.0.0	0.0.0.0	
# ::edge	say-01	time	care-01	0.0.0	0.0.0.1	
(s2 / say-01 
      :ARG0 (h2 / he 
            :ARG0-of (s / say-01 
                  :ARG1 (o / or 
                        :ARG1-of (b / blame-01 
                              :ARG0 (e / error 
                                    :mod (m / monetary-quantity 
                                          :unit (c2 / cent)))) 
                        :op1 (p / partly) 
                        :op2 (c / complete)) 
                  :time (c3 / care-01 
                        :ARG0 (h / human)))) 
      :ARG1 (a / accident 
            :quant (m2 / most)) 
      :ARG1-of (f / fight-01 
            :ARG2 (b2 / battle-01 
                  :ARG1 (r2 / rise-01 
                        :ARG0 95 
                        :ARG1 (a2 / accident 
                              :location (r / road)))) 
            :domain-of (p3 / possible) 
            :manner (p2 / proper) 
            :mod (o2 / only)))

# ::snt mr john horn prosecuting said that jagdev was arrested on january 22 following the accident
# ::tok mr john horn prosecuting said that jagdev was arrested on january 22 following the accident
# ::alignments 14-15|0.0.0 11-12|0.1.0 10-11|0.0.1.0+0.0.1 8-9|0.0 4-5|0 3-4|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:35.480
# ::node	0	say-01	4-5
# ::node	0.0	arrest-01	8-9
# ::node	0.0.0	accident	14-15
# ::node	0.0.1	date-entity	10-11
# ::node	0.0.1.0	1	10-11
# ::node	0.1	prosecute-01	3-4
# ::node	0.1.0	22	11-12
# ::root	0	say-01
# ::edge	arrest-01	ARG1	accident	0.0	0.0.0	
# ::edge	arrest-01	time	date-entity	0.0	0.0.1	
# ::edge	date-entity	month	1	0.0.1	0.0.1.0	
# ::edge	prosecute-01	ARG0	22	0.1	0.1.0	
# ::edge	prosecute-01	ARG1	say-01	0.1	0	
# ::edge	say-01	ARG1	arrest-01	0	0.0	
(s / say-01 
      :ARG1 (a2 / arrest-01 
            :ARG1 (a / accident) 
            :time (d / date-entity 
                  :month 1)) 
      :ARG1-of (p / prosecute-01 
            :ARG0 22))

# ::snt the cost of coping with road accidents in oxfordshire is 190000 a day
# ::tok the cost of coping with road accidents in oxfordshire is 190000 a day
# ::alignments 12-13|0.0 10-11|0.1.1.2+0.1.1.1+0.1.1.0+0.1.1 6-7|0.1.0 5-6|0.1.0.0 3-4|0.1 1-2|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:35.590
# ::node	0	cost-01	1-2
# ::node	0.0	day	12-13
# ::node	0.1	cope-01	3-4
# ::node	0.1.0	accident	6-7
# ::node	0.1.0.0	road	5-6
# ::node	0.1.1	date-entity	10-11
# ::node	0.1.1.0	0	10-11
# ::node	0.1.1.1	0	10-11
# ::node	0.1.1.2	19	10-11
# ::root	0	cost-01
# ::edge	accident	location	road	0.1.0	0.1.0.0	
# ::edge	cope-01	ARG0	accident	0.1	0.1.0	
# ::edge	cope-01	ARG1	date-entity	0.1	0.1.1	
# ::edge	cost-01	ARG0	day	0	0.0	
# ::edge	cost-01	ARG1	cope-01	0	0.1	
# ::edge	date-entity	day	0	0.1.1	0.1.1.0	
# ::edge	date-entity	month	0	0.1.1	0.1.1.1	
# ::edge	date-entity	year	19	0.1.1	0.1.1.2	
(c2 / cost-01 
      :ARG0 (d / day) 
      :ARG1 (c / cope-01 
            :ARG0 (a / accident 
                  :location (r / road)) 
            :ARG1 (d2 / date-entity 
                  :day 0 
                  :month 0 
                  :year 19)))

# ::snt peter topglass had been the first to suspect that the descent of the bell into the lake had been no accident
# ::tok peter topglass had been the first to suspect that the descent of the bell into the lake had been no accident
# ::alignments 20-21|0.0.0 19-20|0.0.0.1 16-17|0 10-11|0.0.0.0 7-8|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:35.647
# ::node	0	lake	16-17
# ::node	0.0	suspect-01	7-8
# ::node	0.0.0	accident	20-21
# ::node	0.0.0.0	descend-01	10-11
# ::node	0.0.0.1	-	19-20
# ::root	0	lake
(l / lake 
      :location-of (s / suspect-01 
            :ARG1 (a / accident 
                  :domain (d / descend-01) 
                  :polarity (- / -))))

# ::snt two oxfordshire mps have clashed over an accident at the culhambased jet project in which ozonedepleting cfc gas was released into the atmosphere
# ::tok two oxfordshire mps have clashed over an accident at the culhambased jet project in which ozonedepleting cfc gas was released into the atmosphere
# ::alignments 22-23|0 19-20|0.0 17-18|0.0.1 12-13|0.0.0 11-12|0.0.0.0 7-8|0.0.0.0.0 0-1|0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:35.731
# ::node	0	atmosphere	22-23
# ::node	0.0	release-01	19-20
# ::node	0.0.0	project	12-13
# ::node	0.0.0.0	jet	11-12
# ::node	0.0.0.0.0	accident	7-8
# ::node	0.0.1	gas	17-18
# ::node	0.0.2	2	0-1
# ::root	0	atmosphere
(a / atmosphere 
      :medium-of (r / release-01 
            :ARG0 (p / project 
                  :mod (j / jet 
                        :location-of (a2 / accident))) 
            :ARG1 (g / gas) 
            :op-of 2))

# ::snt strip examination revealed that this was the result of slight corrosion on the contacts and the evidence suggested that this may well have been present at the time of the accident
# ::tok strip examination revealed that this was the result of slight corrosion on the contacts and the evidence suggested that this may well have been present at the time of the accident
# ::alignments 30-31|0.0.1.0.0.0.0 27-28|0.0.0.3 24-25|0.0.0 21-22|0.0.0.2 20-21|0.0.0.1.0+0.0.0.1 19-20|0.0.0.0 17-18|0.0 16-17|0 14-15|0.0.1 13-14|0.0.1.1 9-10|0.0.1.0.1.0 7-8|0.0.1.0.0.0 4-5|0.0.1.0.0.0.1 2-3|0.0.1.0.0 1-2|0.0.1.0 0-1|0.0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:36.719
# ::node	0	evidence-01	16-17
# ::node	0.0	suggest-01	17-18
# ::node	0.0.0	present	24-25
# ::node	0.0.0.0	this	19-20
# ::node	0.0.0.1	date-entity	20-21
# ::node	0.0.0.1.0	5	20-21
# ::node	0.0.0.2	well	21-22
# ::node	0.0.0.3	time	27-28
# ::node	0.0.1	and	14-15
# ::node	0.0.1.0	examine-01	1-2
# ::node	0.0.1.0.0	reveal-01	2-3
# ::node	0.0.1.0.0.0	result-01	7-8
# ::node	0.0.1.0.0.0.0	accident	30-31
# ::node	0.0.1.0.0.0.1	this	4-5
# ::node	0.0.1.0.1	strip-01	0-1
# ::node	0.0.1.0.1.0	slight	9-10
# ::node	0.0.1.1	contact-01	13-14
# ::root	0	evidence-01
(e / evidence-01 
      :ARG0-of (s / suggest-01 
            :ARG1 (p / present 
                  :domain (t2 / this) 
                  :domain-of (d / date-entity 
                        :month 5) 
                  :mod (w / well) 
                  :time (t / time)) 
            :op-of (a2 / and 
                  :ARG1-of (e2 / examine-01 
                        :ARG0-of (r2 / reveal-01 
                              :ARG1 (r / result-01 
                                    :ARG0 (a / accident) 
                                    :ARG1 (t3 / this))) 
                        :mod (s3 / strip-01 
                              :ARG1 (s2 / slight))) 
                  :op1 (c / contact-01))))

# ::snt it was no accident that these two provided after churchill himself most of the drive and also most of the trouble during the next two years
# ::tok it was no accident that these two provided after churchill himself most of the drive and also most of the trouble during the next two years
# ::alignments 25-26|0.0.0.1+0.0.0 24-25|0.0.0.0 23-24|0.0.0.1.0 20-21|0.0.1.0.1 17-18|0.0.1.0.1.1 16-17|0.0.1.0.1.1.0 15-16|0 14-15|0.0 11-12|0.0.1 8-9|0.0.1.0.2 7-8|0.0.1.0 6-7|0.0.1.0.1.0 3-4|0.0.1.0.0.0 2-3|0.0.1.0.0.0.0 0-1|0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:37.051
# ::node	0	and	15-16
# ::node	0.0	drive-01	14-15
# ::node	0.0.0	temporal-quantity	25-26
# ::node	0.0.0.0	2	24-25
# ::node	0.0.0.1	year	25-26
# ::node	0.0.0.1.0	next	23-24
# ::node	0.0.1	most	11-12
# ::node	0.0.1.0	provide-01	7-8
# ::node	0.0.1.0.0	it	0-1
# ::node	0.0.1.0.0.0	accident	3-4
# ::node	0.0.1.0.0.0.0	-	2-3
# ::node	0.0.1.0.1	trouble-01	20-21
# ::node	0.0.1.0.1.0	2	6-7
# ::node	0.0.1.0.1.1	most	17-18
# ::node	0.0.1.0.1.1.0	also	16-17
# ::node	0.0.1.0.2	after	8-9
# ::root	0	and
# ::edge	accident	domain	it	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	accident	polarity	-	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	and	op1	drive-01	0	0.0	
# ::edge	drive-01	ARG0	temporal-quantity	0.0	0.0.0	
# ::edge	drive-01	quant	most	0.0	0.0.1	
# ::edge	most	mod	also	0.0.1.0.1.1	0.0.1.0.1.1.0	
# ::edge	provide-01	ARG0	most	0.0.1.0	0.0.1	
# ::edge	provide-01	ARG1	it	0.0.1.0	0.0.1.0.0	
# ::edge	provide-01	time	after	0.0.1.0	0.0.1.0.2	
# ::edge	temporal-quantity	quant	2	0.0.0	0.0.0.0	
# ::edge	temporal-quantity	unit	year	0.0.0	0.0.0.1	
# ::edge	trouble-01	ARG0	2	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	trouble-01	ARG1	provide-01	0.0.1.0.1	0.0.1.0	
# ::edge	trouble-01	quant	most	0.0.1.0.1	0.0.1.0.1.1	
# ::edge	year	mod	next	0.0.0.1	0.0.0.1.0	
(a2 / and 
      :op1 (d / drive-01 
            :ARG0 (t / temporal-quantity 
                  :quant 2 
                  :unit (y / year 
                        :mod (n / next))) 
            :quant (m2 / most 
                  :ARG0-of (p / provide-01 
                        :ARG1 (i / it 
                              :domain-of (a4 / accident 
                                    :polarity (- / -))) 
                        :ARG1-of (t2 / trouble-01 
                              :ARG0 2 
                              :quant (m / most 
                                    :mod (a / also))) 
                        :time (a3 / after)))))

# ::snt consider the problems of traffic accidents more closely, if it were found that more accidents occurred in the winter months between 6 and 8 oclock in the evening compared with noon and 2 oclock is this because during the early evening lighting is worse there is more traffic drivers have been working longer and are more tired or weather conditions are worse
# ::tok consider the problems of traffic accidents more closely , if it were found that more accidents occurred in the winter months between 6 and 8 oclock in the evening compared with noon and 2 oclock is this because during the early evening lighting is worse there is more traffic drivers have been working longer and are more tired or weather conditions are worse
# ::alignments 62-63|0.0.0.0.2.1 60-61|0.0.0.0.2.1.0 59-60|0.0.0.0.2.1.0.0 58-59|0.0.0.0.2 57-58|0.0.0.0 54-55|0.0.0 53-54|0.0.0.0.1.1.0 52-53|0.0.0.0.1.1 49-50|0.0.0.0.1.0+0.0.0.0.1 48-49|0.0.0.0.1.0.0 44-45|0.0 41-42|0.0.0.1 40-41|0.0.0.1.0 37-38|0 36-37|0.1 33-34|0.0.0.0.0 32-33|0.0.0.0.2.0 31-32|0.0.0.0.2.0.0.1 29-30|0.0.0.0.2.0.0 28-29|0.0.0.0.2.0.0.0 24-25|0.0.0.0.2.0.1.0.2.0.1 23-24|0.0.0.0.2.0.1.0.2 22-23|0.0.0.0.2.0.1.0.2.0.0.0 21-22|0.0.0.0.2.0.1.0.2.0 20-21|0.0.0.0.2.0.1.0.2.0.0.1+0.0.0.0.2.0.1.0.2.0.0 19-20|0.0.0.0.2.0.1.0.2.0.0.1.0 15-16|0.0.0.0.2.0.1.0.0.0 12-13|0.0.0.0.2.0.1 10-11|0.0.0.0.2.0.1.1 7-8|0.0.0.0.2.0.1.0.0.1 5-6|0.0.0.0.2.0.1.0.1 4-5|0.0.0.0.2.0.1.0.1.0 2-3|0.0.0.0.2.0.1.0 0-1|0.0.0.0.2.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:39.358
# ::node	0	cause-01	37-38
# ::node	0.0	bad	44-45
# ::node	0.0.0	and	54-55
# ::node	0.0.0.0	tire-01	57-58
# ::node	0.0.0.0.0	2	33-34
# ::node	0.0.0.0.1	person	49-50
# ::node	0.0.0.0.1.0	drive-01	49-50
# ::node	0.0.0.0.1.0.0	traffic	48-49
# ::node	0.0.0.0.1.1	work-01	52-53
# ::node	0.0.0.0.1.1.0	long	53-54
# ::node	0.0.0.0.2	or	58-59
# ::node	0.0.0.0.2.0	and	32-33
# ::node	0.0.0.0.2.0.0	compare-01	29-30
# ::node	0.0.0.0.2.0.0.0	evening	28-29
# ::node	0.0.0.0.2.0.0.1	noon	31-32
# ::node	0.0.0.0.2.0.1	find-01	12-13
# ::node	0.0.0.0.2.0.1.0	problem	2-3
# ::node	0.0.0.0.2.0.1.0.0	consider-02	0-1
# ::node	0.0.0.0.2.0.1.0.0.0	accident	15-16
# ::node	0.0.0.0.2.0.1.0.0.1	close	7-8
# ::node	0.0.0.0.2.0.1.0.1	accident	5-6
# ::node	0.0.0.0.2.0.1.0.1.0	traffic	4-5
# ::node	0.0.0.0.2.0.1.0.2	and	23-24
# ::node	0.0.0.0.2.0.1.0.2.0	between	21-22
# ::node	0.0.0.0.2.0.1.0.2.0.0	temporal-quantity	20-21
# ::node	0.0.0.0.2.0.1.0.2.0.0.0	6	22-23
# ::node	0.0.0.0.2.0.1.0.2.0.0.1	month	20-21
# ::node	0.0.0.0.2.0.1.0.2.0.0.1.0	winter	19-20
# ::node	0.0.0.0.2.0.1.0.2.0.1	8	24-25
# ::node	0.0.0.0.2.0.1.1	it	10-11
# ::node	0.0.0.0.2.1	bad	62-63
# ::node	0.0.0.0.2.1.0	condition	60-61
# ::node	0.0.0.0.2.1.0.0	weather	59-60
# ::node	0.0.0.1	evening	41-42
# ::node	0.0.0.1.0	early	40-41
# ::node	0.1	this	36-37
# ::root	0	cause-01
# ::edge	6	part	temporal-quantity	0.0.0.0.2.0.1.0.2.0.0.0	0.0.0.0.2.0.1.0.2.0.0	
# ::edge	accident	mod	traffic	0.0.0.0.2.0.1.0.1	0.0.0.0.2.0.1.0.1.0	
# ::edge	and	op1	bad	0.0.0	0.0	
# ::edge	and	op1	find-01	0.0.0.0.2.0	0.0.0.0.2.0.1	
# ::edge	and	op2	or	0.0.0.0.2.0	0.0.0.0.2	
# ::edge	and	op2	tire-01	0.0.0	0.0.0.0	
# ::edge	bad	domain	condition	0.0.0.0.2.1	0.0.0.0.2.1.0	
# ::edge	between	op1	and	0.0.0.0.2.0.1.0.2.0	0.0.0.0.2.0.1.0.2	
# ::edge	between	op2	8	0.0.0.0.2.0.1.0.2.0	0.0.0.0.2.0.1.0.2.0.1	
# ::edge	cause-01	ARG0	bad	0	0.0	
# ::edge	cause-01	ARG1	this	0	0.1	
# ::edge	compare-01	ARG0	and	0.0.0.0.2.0.0	0.0.0.0.2.0	
# ::edge	compare-01	ARG1	evening	0.0.0.0.2.0.0	0.0.0.0.2.0.0.0	
# ::edge	compare-01	ARG2	noon	0.0.0.0.2.0.0	0.0.0.0.2.0.0.1	
# ::edge	condition	mod	weather	0.0.0.0.2.1.0	0.0.0.0.2.1.0.0	
# ::edge	consider-02	ARG0	accident	0.0.0.0.2.0.1.0.0	0.0.0.0.2.0.1.0.0.0	
# ::edge	consider-02	ARG1	problem	0.0.0.0.2.0.1.0.0	0.0.0.0.2.0.1.0	
# ::edge	consider-02	manner	close	0.0.0.0.2.0.1.0.0	0.0.0.0.2.0.1.0.0.1	
# ::edge	drive-01	ARG0	person	0.0.0.0.1.0	0.0.0.0.1	
# ::edge	drive-01	ARG1	traffic	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	evening	mod	early	0.0.0.1	0.0.0.1.0	
# ::edge	evening	topic	and	0.0.0.1	0.0.0	
# ::edge	find-01	ARG0	problem	0.0.0.0.2.0.1	0.0.0.0.2.0.1.0	
# ::edge	find-01	ARG1	it	0.0.0.0.2.0.1	0.0.0.0.2.0.1.1	
# ::edge	month	mod	winter	0.0.0.0.2.0.1.0.2.0.0.1	0.0.0.0.2.0.1.0.2.0.0.1.0	
# ::edge	or	op1	tire-01	0.0.0.0.2	0.0.0.0	
# ::edge	or	op2	bad	0.0.0.0.2	0.0.0.0.2.1	
# ::edge	problem	prep-with	accident	0.0.0.0.2.0.1.0	0.0.0.0.2.0.1.0.1	
# ::edge	problem	topic	and	0.0.0.0.2.0.1.0	0.0.0.0.2.0.1.0.2	
# ::edge	temporal-quantity	location	between	0.0.0.0.2.0.1.0.2.0.0	0.0.0.0.2.0.1.0.2.0	
# ::edge	temporal-quantity	unit	month	0.0.0.0.2.0.1.0.2.0.0	0.0.0.0.2.0.1.0.2.0.0.1	
# ::edge	tire-01	ARG0	2	0.0.0.0	0.0.0.0.0	
# ::edge	tire-01	ARG1	person	0.0.0.0	0.0.0.0.1	
# ::edge	work-01	ARG0	person	0.0.0.0.1.1	0.0.0.0.1	
# ::edge	work-01	duration	long	0.0.0.0.1.1	0.0.0.0.1.1.0	
(c2 / cause-01 
      :ARG0 (b2 / bad 
            :op-of (a / and 
                  :op1 (t / tire-01 
                        :ARG0 2 
                        :ARG1 (p / person 
                              :ARG0-of (d / drive-01 
                                    :ARG1 (t2 / traffic)) 
                              :ARG0-of (w2 / work-01 
                                    :duration (l / long))) 
                        :op-of (o / or 
                              :op-of (a2 / and 
                                    :ARG0-of (c3 / compare-01 
                                          :ARG1 (e3 / evening) 
                                          :ARG2 (n / noon)) 
                                    :op1 (f / find-01 
                                          :ARG0 (p2 / problem 
                                                :ARG1-of (c5 / consider-02 
                                                      :ARG0 (a4 / accident) 
                                                      :manner (c4 / close)) 
                                                :prep-with (a5 / accident 
                                                      :mod (t5 / traffic)) 
                                                :topic (a3 / and 
                                                      :op-of (b3 / between 
                                                            :location-of (t4 / temporal-quantity 
                                                                  :part-of 6 
                                                                  :unit (m / month 
                                                                        :mod (w3 / winter))) 
                                                            :op1 8))) 
                                          :ARG1 (i / it))) 
                              :op1 (b / bad 
                                    :domain (c / condition 
                                          :mod (w / weather))))) 
                  :topic-of (e / evening 
                        :mod (e2 / early)))) 
      :ARG1 (t3 / this))

# ::snt but serious accidents can and do happen every day of the year
# ::tok but serious accidents can and do happen every day of the year
# ::alignments 11-12|0.1.0.0.0.1 8-9|0.1.0.0.0 7-8|0.1.0.0.0.0 6-7|0.1.0.0 4-5|0.1.0 3-4|0.1 2-3|0.0 1-2|0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:39.395
# ::node	0	contrast-01	0-1
# ::node	0.0	accident	2-3
# ::node	0.0.0	serious	1-2
# ::node	0.1	possible	3-4
# ::node	0.1.0	and	4-5
# ::node	0.1.0.0	happen-01	6-7
# ::node	0.1.0.0.0	day	8-9
# ::node	0.1.0.0.0.0	every	7-8
# ::node	0.1.0.0.0.1	year	11-12
# ::root	0	contrast-01
# ::edge	accident	mod	serious	0.0	0.0.0	
# ::edge	and	op1	possible	0.1.0	0.1	
# ::edge	and	op2	happen-01	0.1.0	0.1.0.0	
# ::edge	contrast-01	ARG1	accident	0	0.0	
# ::edge	contrast-01	ARG2	possible	0	0.1	
# ::edge	day	mod	every	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	happen-01	ARG1	day	0.1.0.0	0.1.0.0.0	
# ::edge	year	time	day	0.1.0.0.0.1	0.1.0.0.0	
(c / contrast-01 
      :ARG1 (a2 / accident 
            :mod (s / serious)) 
      :ARG2 (p / possible 
            :op-of (a / and 
                  :op1 (h / happen-01 
                        :ARG1 (d / day 
                              :mod (e / every) 
                              :time-of (y / year))))))

# ::snt two miles north of chievely the northbound carriageway between the m four at junction thirteen and the oxford ringroad theres a reported four to ten vehicle accident there close to the roadworks
# ::tok two miles north of chievely the northbound carriageway between the m four at junction thirteen and the oxford ringroad theres a reported four to ten vehicle accident there close to the roadworks
# ::alignments 26-27|0.1.0 25-26|0.1.0.0 22-23|0.1 21-22|0 15-16|0.3 11-12|0.1.0.1.0 8-9|0.1.0.1 2-3|0.0 1-2|0.2.0.0+0.2.0 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:39.541
# ::node	0	report-01	21-22
# ::node	0.0	north	2-3
# ::node	0.1	4	22-23
# ::node	0.1.0	accident	26-27
# ::node	0.1.0.0	vehicle	25-26
# ::node	0.1.0.1	between	8-9
# ::node	0.1.0.1.0	4	11-12
# ::node	0.2	2	0-1
# ::node	0.2.0	distance-quantity	1-2
# ::node	0.2.0.0	mile	1-2
# ::node	0.3	and	15-16
# ::root	0	report-01
# ::edge	2	op1	report-01	0.2	0	
# ::edge	accident	location	vehicle	0.1.0	0.1.0.0	
# ::edge	accident	op1	between	0.1.0	0.1.0.1	
# ::edge	accident	quant	4	0.1.0	0.1	
# ::edge	and	op1	report-01	0.3	0	
# ::edge	between	op1	4	0.1.0.1	0.1.0.1.0	
# ::edge	distance-quantity	quant	2	0.2.0	0.2	
# ::edge	distance-quantity	unit	mile	0.2.0	0.2.0.0	
# ::edge	report-01	ARG0	north	0	0.0	
# ::edge	report-01	ARG2	4	0	0.1	
(r / report-01 
      :ARG0 (n / north) 
      :ARG2 (4 / 4 
            :quant-of (a / accident 
                  :location (v / vehicle) 
                  :op1 (b / between 
                        :op1 4))) 
      :op-of (2 / 2 
            :quant-of (d / distance-quantity 
                  :unit (m / mile))) 
      :op-of (a2 / and))

# ::snt this will include such things as accident and emergency services for people working locally
# ::tok this will include such things as accident and emergency services for people working locally
# ::alignments 13-14|0.2.0.0 12-13|0.2.0 9-10|0.2.2 8-9|0.2.2.0 7-8|0.2 6-7|0.2.1 4-5|0.1 3-4|0.1.0 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:39.756
# ::node	0	include-01	2-3
# ::node	0.0	this	0-1
# ::node	0.1	thing	4-5
# ::node	0.1.0	such	3-4
# ::node	0.2	and	7-8
# ::node	0.2.0	work-01	12-13
# ::node	0.2.0.0	local	13-14
# ::node	0.2.1	accident	6-7
# ::node	0.2.2	service	9-10
# ::node	0.2.2.0	emergency	8-9
# ::root	0	include-01
# ::edge	and	op1	accident	0.2	0.2.1	
# ::edge	and	op2	service	0.2	0.2.2	
# ::edge	include-01	ARG0	this	0	0.0	
# ::edge	include-01	ARG1	thing	0	0.1	
# ::edge	include-01	ARG2	and	0	0.2	
# ::edge	service	mod	emergency	0.2.2	0.2.2.0	
# ::edge	thing	mod	such	0.1	0.1.0	
# ::edge	work-01	ARG0	and	0.2.0	0.2	
# ::edge	work-01	mod	local	0.2.0	0.2.0.0	
(i / include-01 
      :ARG0 (t2 / this) 
      :ARG1 (t / thing 
            :mod (s2 / such)) 
      :ARG2 (a / and 
            :ARG0-of (w / work-01 
                  :mod (l / local)) 
            :op1 (a2 / accident) 
            :op2 (s / service 
                  :mod (e / emergency))))

# ::snt they fear an accident could destroy the volga
# ::tok they fear an accident could destroy the volga
# ::alignments 5-6|0.0.0 4-5|0.1 3-4|0.0.0.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:39.827
# ::node	0	fear-01	1-2
# ::node	0.0	they	0-1
# ::node	0.0.0	destroy-01	5-6
# ::node	0.0.0.0	accident	3-4
# ::node	0.1	possible	4-5
# ::root	0	fear-01
# ::edge	destroy-01	ARG0	they	0.0.0	0.0	
# ::edge	destroy-01	ARG1	accident	0.0.0	0.0.0.0	
# ::edge	fear-01	ARG0	they	0	0.0	
# ::edge	fear-01	ARG1	possible	0	0.1	
(f / fear-01 
      :ARG0 (t / they 
            :ARG0-of (d / destroy-01 
                  :ARG1 (a / accident))) 
      :ARG1 (p / possible))

# ::snt no it was just a bump but its the first accident hes ever had in twentyfive years driving
# ::tok no it was just a bump but its the first accident hes ever had in twentyfive years driving
# ::alignments 17-18|0.1.2.0.0 16-17|0.1.0.0+0.1.0 12-13|0.0 10-11|0.0.0 6-7|0 5-6|0.1 3-4|0.1.2 1-2|0.1.1 0-1|0.1.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:39.971
# ::node	0	contrast-01	6-7
# ::node	0.0	ever	12-13
# ::node	0.0.0	accident	10-11
# ::node	0.1	bump-02	5-6
# ::node	0.1.0	temporal-quantity	16-17
# ::node	0.1.0.0	year	16-17
# ::node	0.1.1	it	1-2
# ::node	0.1.2	just	3-4
# ::node	0.1.2.0	-	0-1
# ::node	0.1.2.0.0	drive-01	17-18
# ::root	0	contrast-01
# ::edge	-	time	just	0.1.2.0	0.1.2	
# ::edge	bump-02	ARG0	temporal-quantity	0.1	0.1.0	
# ::edge	bump-02	ARG1	it	0.1	0.1.1	
# ::edge	bump-02	mod	just	0.1	0.1.2	
# ::edge	contrast-01	ARG0	ever	0	0.0	
# ::edge	contrast-01	ARG1	bump-02	0	0.1	
# ::edge	drive-01	ARG1	-	0.1.2.0.0	0.1.2.0	
# ::edge	ever	domain	accident	0.0	0.0.0	
# ::edge	temporal-quantity	unit	year	0.1.0	0.1.0.0	
(c / contrast-01 
      :ARG0 (e / ever 
            :domain (a / accident)) 
      :ARG1 (b / bump-02 
            :ARG0 (t / temporal-quantity 
                  :unit (y / year)) 
            :ARG1 (i / it) 
            :mod (j / just 
                  :time-of (- / - 
                        :ARG1-of (d / drive-01)))))

# ::snt northern ireland railways has an impressive track safety record but last nights accident was the fifth in a fouryear series involving unmanned level crossings on this particular stretch of line in the provinces northwest
# ::tok northern ireland railways has an impressive track safety record but last nights accident was the fifth in a fouryear series involving unmanned level crossings on this particular stretch of line in the provinces northwest
# ::alignments 33-34|0.1.0.0.0.1.0.0 32-33|0.1.0.0.0.1.0 29-30|0.1.0.0.0.2 27-28|0.1.0.0.0.0+0.1.0.0.0 26-27|0.1.0.0 25-26|0.1.0.0.0.3 22-23|0.1.1.1 20-21|0.1.0.0.0.1 19-20|0.1.0.0.0.1.1 12-13|0.0 11-12|0.2 10-11|0.2.0 9-10|0 8-9|0.1 7-8|0.1.2 6-7|0.1.2.0 5-6|0.1.0 2-3|0.1.1 0-1|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:40.531
# ::node	0	contrast-01	9-10
# ::node	0.0	accident	12-13
# ::node	0.1	record	8-9
# ::node	0.1.0	impress-01	5-6
# ::node	0.1.0.0	particular	26-27
# ::node	0.1.0.0.0	thing	27-28
# ::node	0.1.0.0.0.0	stretch-01	27-28
# ::node	0.1.0.0.0.1	involve-01	20-21
# ::node	0.1.0.0.0.1.0	province	32-33
# ::node	0.1.0.0.0.1.0.0	northwest	33-34
# ::node	0.1.0.0.0.1.1	series	19-20
# ::node	0.1.0.0.0.2	line	29-30
# ::node	0.1.0.0.0.3	this	25-26
# ::node	0.1.1	railway	2-3
# ::node	0.1.1.0	north	0-1
# ::node	0.1.1.1	level	22-23
# ::node	0.1.2	safe-41	7-8
# ::node	0.1.2.0	track	6-7
# ::node	0.2	night	11-12
# ::node	0.2.0	last	10-11
# ::root	0	contrast-01
# ::edge	contrast-01	ARG0	accident	0	0.0	
# ::edge	contrast-01	ARG1	record	0	0.1	
# ::edge	contrast-01	ARG2	night	0	0.2	
# ::edge	impress-01	ARG0	particular	0.1.0	0.1.0.0	
# ::edge	impress-01	ARG1	record	0.1.0	0.1	
# ::edge	involve-01	ARG0	province	0.1.0.0.0.1	0.1.0.0.0.1.0	
# ::edge	involve-01	ARG1	series	0.1.0.0.0.1	0.1.0.0.0.1.1	
# ::edge	involve-01	ARG2	thing	0.1.0.0.0.1	0.1.0.0.0	
# ::edge	night	mod	last	0.2	0.2.0	
# ::edge	northwest	mod	province	0.1.0.0.0.1.0.0	0.1.0.0.0.1.0	
# ::edge	railway	mod	level	0.1.1	0.1.1.1	
# ::edge	railway	mod	north	0.1.1	0.1.1.0	
# ::edge	record	location	railway	0.1	0.1.1	
# ::edge	record	mod	safe-41	0.1	0.1.2	
# ::edge	safe-41	ARG1	track	0.1.2	0.1.2.0	
# ::edge	stretch-01	ARG1	thing	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	thing	mod	line	0.1.0.0.0	0.1.0.0.0.2	
# ::edge	thing	mod	particular	0.1.0.0.0	0.1.0.0	
# ::edge	thing	mod	this	0.1.0.0.0	0.1.0.0.0.3	
(c / contrast-01 
      :ARG0 (a / accident) 
      :ARG1 (r / record 
            :ARG1-of (i2 / impress-01 
                  :ARG0 (p2 / particular 
                        :mod-of (t / thing 
                              :ARG1-of (s / stretch-01) 
                              :ARG2-of (i / involve-01 
                                    :ARG0 (p / province 
                                          :mod-of (n / northwest)) 
                                    :ARG1 (s2 / series)) 
                              :mod (l / line) 
                              :mod (t2 / this)))) 
            :location (r2 / railway 
                  :mod (n3 / north) 
                  :mod (l2 / level)) 
            :mod (s3 / safe-41 
                  :ARG1 (t3 / track))) 
      :ARG2 (n2 / night 
            :mod (l3 / last)))

# ::snt of what possible use to anybody are such figures  the fact that accidents are now apparently more expensive to cope with will not enable us to set ourselves a county budget of accidents allowing only so many per year
# ::tok of what possible use to anybody are such figures the fact that accidents are now apparently more expensive to cope with will not enable us to set ourselves a county budget of accidents allowing only so many per year
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:40.532
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt as the preceding discussion revealed even the substantive tort law is unequal to dealing fairly and effectively with systemic problems of causation in mass accident and mass exposure cases
# ::tok as the preceding discussion revealed even the substantive tort law is unequal to dealing fairly and effectively with systemic problems of causation in mass accident and mass exposure cases
# ::alignments 28-29|0.0.0.0.1 27-28|0.0.0.0.1.0.0 26-27|0.0.0.0.1.0 25-26|0.0.0.0 24-25|0.0.0.0.0 23-24|0.0.1.1.0.0.0 19-20|0.0.0 16-17|0.2 15-16|0 14-15|0.1 13-14|0.0 11-12|0.0.1.2+0.0.1 9-10|0.0.1.0 7-8|0.0.0.0.1.0.0.0 4-5|0.0.1.1 3-4|0.0.1.1.0 2-3|0.0.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:41.068
# ::node	0	and	15-16
# ::node	0.0	deal-01	13-14
# ::node	0.0.0	problem	19-20
# ::node	0.0.0.0	and	25-26
# ::node	0.0.0.0.0	accident	24-25
# ::node	0.0.0.0.1	case	28-29
# ::node	0.0.0.0.1.0	mass	26-27
# ::node	0.0.0.0.1.0.0	expose-01	27-28
# ::node	0.0.0.0.1.0.0.0	substantive	7-8
# ::node	0.0.1	equal-01	11-12
# ::node	0.0.1.0	law	9-10
# ::node	0.0.1.1	reveal-01	4-5
# ::node	0.0.1.1.0	discuss-01	3-4
# ::node	0.0.1.1.0.0	precede-01	2-3
# ::node	0.0.1.1.0.0.0	mass	23-24
# ::node	0.0.1.2	-	11-12
# ::node	0.1	fair	14-15
# ::node	0.2	effective	16-17
# ::root	0	and
# ::edge	and	op1	fair	0	0.1	
# ::edge	and	op1	problem	0.0.0.0	0.0.0	
# ::edge	and	op2	accident	0.0.0.0	0.0.0.0.0	
# ::edge	and	op2	effective	0	0.2	
# ::edge	and	op3	case	0.0.0.0	0.0.0.0.1	
# ::edge	case	mod	mass	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	deal-01	ARG1	problem	0.0	0.0.0	
# ::edge	deal-01	manner	and	0.0	0	
# ::edge	equal-01	ARG0	law	0.0.1	0.0.1.0	
# ::edge	equal-01	ARG1	deal-01	0.0.1	0.0	
# ::edge	equal-01	polarity	-	0.0.1	0.0.1.2	
# ::edge	expose-01	ARG0	substantive	0.0.0.0.1.0.0	0.0.0.0.1.0.0.0	
# ::edge	expose-01	ARG1	mass	0.0.0.0.1.0.0	0.0.0.0.1.0	
# ::edge	precede-01	ARG0	mass	0.0.1.1.0.0	0.0.1.1.0.0.0	
# ::edge	precede-01	ARG1	discuss-01	0.0.1.1.0.0	0.0.1.1.0	
# ::edge	reveal-01	ARG0	discuss-01	0.0.1.1	0.0.1.1.0	
# ::edge	reveal-01	ARG1	equal-01	0.0.1.1	0.0.1	
(a3 / and 
      :manner-of (d / deal-01 
            :ARG1 (p / problem 
                  :op-of (a / and 
                        :op1 (a2 / accident) 
                        :op2 (c / case 
                              :mod (m / mass 
                                    :ARG1-of (e / expose-01 
                                          :ARG0 (s / substantive)))))) 
            :ARG1-of (e3 / equal-01 
                  :ARG0 (l / law) 
                  :ARG1-of (r / reveal-01 
                        :ARG0 (d2 / discuss-01 
                              :ARG1-of (p2 / precede-01 
                                    :ARG0 (m2 / mass)))) 
                  :polarity -)) 
      :op1 (f / fair) 
      :op2 (e2 / effective))

# ::snt   yet experts cite other reasons for the number of accidents
# ::tok yet experts cite other reasons for the number of accidents
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:41.069
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the sensor may not prevent accidents but it could mean that they can fly more often than was previously the case
# ::tok the sensor may not prevent accidents but it could mean that they can fly more often than was previously the case
# ::alignments 20-21|0.1.0.1.3 18-19|0.1.0.1.3.0 15-16|0.1.0.1.2 13-14|0.1.0.1 12-13|0.1.0.1.1 11-12|0.1.0.1.0 9-10|0.1.0 8-9|0.1 7-8|0.1.0.0 6-7|0 5-6|0.0.0 4-5|0.0 2-3|0.0.1.0+0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:41.547
# ::node	0	contrast-01	6-7
# ::node	0.0	prevent-01	4-5
# ::node	0.0.0	accident	5-6
# ::node	0.0.1	date-entity	2-3
# ::node	0.0.1.0	5	2-3
# ::node	0.1	possible	8-9
# ::node	0.1.0	mean-01	9-10
# ::node	0.1.0.0	it	7-8
# ::node	0.1.0.1	fly-01	13-14
# ::node	0.1.0.1.0	they	11-12
# ::node	0.1.0.1.1	possible	12-13
# ::node	0.1.0.1.2	often	15-16
# ::node	0.1.0.1.3	case	20-21
# ::node	0.1.0.1.3.0	previous	18-19
# ::root	0	contrast-01
# ::edge	case	mod	previous	0.1.0.1.3	0.1.0.1.3.0	
# ::edge	contrast-01	ARG1	prevent-01	0	0.0	
# ::edge	contrast-01	ARG2	possible	0	0.1	
# ::edge	date-entity	domain	prevent-01	0.0.1	0.0	
# ::edge	date-entity	month	5	0.0.1	0.0.1.0	
# ::edge	fly-01	ARG1	they	0.1.0.1	0.1.0.1.0	
# ::edge	fly-01	location	often	0.1.0.1	0.1.0.1.2	
# ::edge	fly-01	time	case	0.1.0.1	0.1.0.1.3	
# ::edge	mean-01	ARG0	it	0.1.0	0.1.0.0	
# ::edge	mean-01	ARG1	fly-01	0.1.0	0.1.0.1	
# ::edge	possible	domain	fly-01	0.1.0.1.1	0.1.0.1	
# ::edge	possible	domain	mean-01	0.1	0.1.0	
# ::edge	prevent-01	ARG1	accident	0.0	0.0.0	
(c2 / contrast-01 
      :ARG1 (p4 / prevent-01 
            :ARG1 (a / accident) 
            :domain-of (d / date-entity 
                  :month 5)) 
      :ARG2 (p3 / possible 
            :domain (m / mean-01 
                  :ARG0 (i / it) 
                  :ARG1 (f / fly-01 
                        :ARG1 (t / they) 
                        :domain-of (p2 / possible) 
                        :location (o / often) 
                        :time (c / case 
                              :mod (p / previous))))))

# ::snt the plan will pay substantial cash benefits directly to you free  of income tax under current inland revenue regulations if you  are permanently disabled as a result of an accident, and even if you already have private medical insurance and life  insurance you may still need lloyds bank accident cashguard, because neither life insurance nor private health plans normally  cover you against the financial consequences of a seriously  disabling accident
# ::tok the plan will pay substantial cash benefits directly to you free of income tax under current inland revenue regulations if you are permanently disabled as a result of an accident , and even if you already have private medical insurance and life insurance you may still need lloyds bank accident cashguard , because neither life insurance nor private health plans normally cover you against the financial consequences of a seriously disabling accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:41.549
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt it is critical of those designated specialist theatres which are used as little as twice a week of having too many accident departments when it would be more efficent to concentrate on a major centre and of poor planning which overburdens recovery facilities when surgeons undertake too many short operations in a session
# ::tok it is critical of those designated specialist theatres which are used as little as twice a week of having too many accident departments when it would be more efficent to concentrate on a major centre and of poor planning which overburdens recovery facilities when surgeons undertake too many short operations in a session
# ::alignments 52-53|0.1.1 49-50|0.1.1.0 48-49|0.1.1.0.1 47-48|0.1.1.0.0.1.0 46-47|0.1.1.0.0.1.0.0 45-46|0.1.1.0.0 44-45|0.1.1.0.0.0 42-43|0.1.1.0.0.1.1 41-42|0.1.1.0.0.1 38-39|0.2 37-38|0.2.2 35-36|0 33-34|0.0.0 30-31|0.1 24-25|0.2.1 22-23|0.1.0 21-22|0.1.0.0 20-21|0.1.0.0.0 19-20|0.1.0.0.0.0 16-17|0.2.0 12-13|0.0.1 10-11|0.0 6-7|0.0.2.1.0+0.0.2.1 5-6|0.0.2 2-3|0.0.2.0.0 0-1|0.0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:42.517
# ::node	0	and	35-36
# ::node	0.0	use-01	10-11
# ::node	0.0.0	major	33-34
# ::node	0.0.1	little	12-13
# ::node	0.0.2	designate-01	5-6
# ::node	0.0.2.0	it	0-1
# ::node	0.0.2.0.0	critical	2-3
# ::node	0.0.2.1	person	6-7
# ::node	0.0.2.1.0	specialize-01	6-7
# ::node	0.1	concentrate-01	30-31
# ::node	0.1.0	department	22-23
# ::node	0.1.0.0	accident	21-22
# ::node	0.1.0.0.0	many	20-21
# ::node	0.1.0.0.0.0	too	19-20
# ::node	0.1.1	session	52-53
# ::node	0.1.1.0	operation	49-50
# ::node	0.1.1.0.0	undertake-01	45-46
# ::node	0.1.1.0.0.0	surgeon	44-45
# ::node	0.1.1.0.0.1	recover-01	41-42
# ::node	0.1.1.0.0.1.0	many	47-48
# ::node	0.1.1.0.0.1.0.0	too	46-47
# ::node	0.1.1.0.0.1.1	facility	42-43
# ::node	0.1.1.0.1	short	48-49
# ::node	0.2	plan-01	38-39
# ::node	0.2.0	week	16-17
# ::node	0.2.1	it	24-25
# ::node	0.2.2	poor	37-38
# ::root	0	and
# ::edge	accident	mod	many	0.1.0.0	0.1.0.0.0	
# ::edge	accident	part	department	0.1.0.0	0.1.0	
# ::edge	and	op1	concentrate-01	0	0.1	
# ::edge	and	op2	plan-01	0	0.2	
# ::edge	concentrate-01	ARG0	department	0.1	0.1.0	
# ::edge	concentrate-01	ARG1	session	0.1	0.1.1	
# ::edge	critical	domain	it	0.0.2.0.0	0.0.2.0	
# ::edge	designate-01	ARG0	it	0.0.2	0.0.2.0	
# ::edge	designate-01	ARG1	person	0.0.2	0.0.2.1	
# ::edge	facility	mod	recover-01	0.1.1.0.0.1.1	0.1.1.0.0.1	
# ::edge	many	degree	too	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	many	degree	too	0.1.1.0.0.1.0	0.1.1.0.0.1.0.0	
# ::edge	operation	medium	session	0.1.1.0	0.1.1	
# ::edge	operation	mod	short	0.1.1.0	0.1.1.0.1	
# ::edge	plan-01	ARG0	week	0.2	0.2.0	
# ::edge	plan-01	ARG1	it	0.2	0.2.1	
# ::edge	plan-01	mod	poor	0.2	0.2.2	
# ::edge	recover-01	ARG0	many	0.1.1.0.0.1	0.1.1.0.0.1.0	
# ::edge	recover-01	ARG1	undertake-01	0.1.1.0.0.1	0.1.1.0.0	
# ::edge	specialize-01	ARG0	person	0.0.2.1.0	0.0.2.1	
# ::edge	undertake-01	ARG0	surgeon	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	undertake-01	ARG1	operation	0.1.1.0.0	0.1.1.0	
# ::edge	use-01	ARG0	major	0.0	0.0.0	
# ::edge	use-01	ARG1	little	0.0	0.0.1	
# ::edge	use-01	ARG2	and	0.0	0	
# ::edge	use-01	manner	designate-01	0.0	0.0.2	
(a / and 
      :ARG2-of (u2 / use-01 
            :ARG0 (m2 / major) 
            :ARG1 (l / little) 
            :manner (d2 / designate-01 
                  :ARG0 (i2 / it 
                        :domain-of (c2 / critical)) 
                  :ARG1 (p3 / person 
                        :ARG0-of (s4 / specialize-01)))) 
      :op1 (c / concentrate-01 
            :ARG0 (d / department 
                  :part-of (a2 / accident 
                        :mod (m3 / many 
                              :degree (t2 / too)))) 
            :ARG1 (s / session 
                  :medium-of (o / operation 
                        :ARG1-of (u / undertake-01 
                              :ARG0 (s3 / surgeon) 
                              :ARG1-of (r / recover-01 
                                    :ARG0 (m / many 
                                          :degree (t / too)) 
                                    :mod-of (f / facility))) 
                        :mod (s2 / short)))) 
      :op2 (p / plan-01 
            :ARG0 (w / week) 
            :ARG1 (i / it) 
            :mod (p2 / poor)))

# ::snt the oil company will pay millions of dollars to clean up an underground pool of oil larger than the spill from last years exxon valdez disaster in alaska the uss worst pollution accident
# ::tok the oil company will pay millions of dollars to clean up an underground pool of oil larger than the spill from last years exxon valdez disaster in alaska the uss worst pollution accident
# ::alignments 32-33|0.1.0.3 31-32|0.1.0.3.0 30-31|0.1.0.3.1 25-26|0.1.0.2 22-23|0.1.0.3.0.1.0.0+0.1.0.3.0.1.0 21-22|0.1.0.3.0.1.0.0.0 19-20|0.1.0.3.0.1 16-17|0.1.0.3.0.0 15-16|0.1 13-14|0 12-13|0.0 9-10|0.1.0.0.1 7-8|0.1.0.0.0.0+0.1.0.0.0 4-5|0.1.0.0 2-3|0.1.0 1-2|0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:42.772
# ::node	0	pool	13-14
# ::node	0.0	underground	12-13
# ::node	0.1	oil	15-16
# ::node	0.1.0	company	2-3
# ::node	0.1.0.0	pay-01	4-5
# ::node	0.1.0.0.0	monetary-quantity	7-8
# ::node	0.1.0.0.0.0	dollar	7-8
# ::node	0.1.0.0.1	clean	9-10
# ::node	0.1.0.1	oil	1-2
# ::node	0.1.0.2	disaster	25-26
# ::node	0.1.0.3	accident	32-33
# ::node	0.1.0.3.0	pollute-01	31-32
# ::node	0.1.0.3.0.0	large	16-17
# ::node	0.1.0.3.0.1	spill-01	19-20
# ::node	0.1.0.3.0.1.0	temporal-quantity	22-23
# ::node	0.1.0.3.0.1.0.0	year	22-23
# ::node	0.1.0.3.0.1.0.0.0	last	21-22
# ::node	0.1.0.3.1	bad	30-31
# ::root	0	pool
# ::edge	accident	location	pollute-01	0.1.0.3	0.1.0.3.0	
# ::edge	accident	mod	bad	0.1.0.3	0.1.0.3.1	
# ::edge	accident	poss	company	0.1.0.3	0.1.0	
# ::edge	company	mod	oil	0.1.0	0.1	
# ::edge	company	mod	oil	0.1.0	0.1.0.1	
# ::edge	disaster	poss	company	0.1.0.2	0.1.0	
# ::edge	monetary-quantity	unit	dollar	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	oil	quant	pool	0.1	0	
# ::edge	pay-01	ARG0	company	0.1.0.0	0.1.0	
# ::edge	pay-01	ARG1	monetary-quantity	0.1.0.0	0.1.0.0.0	
# ::edge	pay-01	ARG3	clean	0.1.0.0	0.1.0.0.1	
# ::edge	pollute-01	ARG0	large	0.1.0.3.0	0.1.0.3.0.0	
# ::edge	pollute-01	ARG1	spill-01	0.1.0.3.0	0.1.0.3.0.1	
# ::edge	pool	mod	underground	0	0.0	
# ::edge	spill-01	ARG2	temporal-quantity	0.1.0.3.0.1	0.1.0.3.0.1.0	
# ::edge	temporal-quantity	unit	year	0.1.0.3.0.1.0	0.1.0.3.0.1.0.0	
# ::edge	year	mod	last	0.1.0.3.0.1.0.0	0.1.0.3.0.1.0.0.0	
(p2 / pool 
      :mod (u / underground) 
      :quant-of (o / oil 
            :mod-of (c2 / company 
                  :ARG0-of (p3 / pay-01 
                        :ARG1 (m / monetary-quantity 
                              :unit (d2 / dollar)) 
                        :ARG3 (c / clean)) 
                  :mod (o2 / oil) 
                  :poss-of (d / disaster) 
                  :poss-of (a / accident 
                        :location (p / pollute-01 
                              :ARG0 (l2 / large) 
                              :ARG1 (s / spill-01 
                                    :ARG2 (t / temporal-quantity 
                                          :unit (y / year 
                                                :mod (l / last))))) 
                        :mod (b / bad)))))

# ::snt determining liability for an accident rather than devising a pension scheme for the old is their natural area of operation
# ::tok determining liability for an accident rather than devising a pension scheme for the old is their natural area of operation
# ::alignments 19-20|0.0.0.0 17-18|0.0.0 16-17|0.0 13-14|0.2 10-11|0.3 9-10|0.3.0 4-5|0.1.0 1-2|0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:42.919
# ::node	0	determine-01	0-1
# ::node	0.0	natural	16-17
# ::node	0.0.0	area	17-18
# ::node	0.0.0.0	operation	19-20
# ::node	0.1	liability	1-2
# ::node	0.1.0	accident	4-5
# ::node	0.2	old	13-14
# ::node	0.3	scheme	10-11
# ::node	0.3.0	pension	9-10
# ::root	0	determine-01
# ::edge	area	mod	natural	0.0.0	0.0	
# ::edge	area	mod	operation	0.0.0	0.0.0.0	
# ::edge	determine-01	ARG0	natural	0	0.0	
# ::edge	determine-01	ARG1	liability	0	0.1	
# ::edge	determine-01	ARG2	old	0	0.2	
# ::edge	determine-01	time	scheme	0	0.3	
# ::edge	liability	location	accident	0.1	0.1.0	
# ::edge	scheme	mod	pension	0.3	0.3.0	
(d / determine-01 
      :ARG0 (n / natural 
            :mod-of (a / area 
                  :mod (o / operation))) 
      :ARG1 (l / liability 
            :location (a2 / accident)) 
      :ARG2 (o2 / old) 
      :time (s / scheme 
            :mod (p / pension)))

# ::snt   a total of 97 people were killed in rail accidents last year compared with 104 in 1987 according to the annual report of the railway inspectorate
# ::tok a total of 97 people were killed in rail accidents last year compared with 104 in 1987 according to the annual report of the railway inspectorate
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:42.920
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt if you are permanently disabled as the result of an accident  youll be eligible to receive a tax free lump sum of up to  80000, if you were to die as a result of an accident the plan would pay  out up to 40000 to your estate
# ::tok if you are permanently disabled as the result of an accident youll be eligible to receive a tax free lump sum of up to 80000 , if you were to die as a result of an accident the plan would pay out up to 40000 to your estate
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:42.921
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the problem for brecht is that the theatre doesnt always reflect society intentionally on stage it also does it and often more accurately by accident and backstage
# ::tok the problem for brecht is that the theatre doesnt always reflect society intentionally on stage it also does it and often more accurately by accident and backstage
# ::alignments 25-26|0 24-25|0.1 22-23|0.0.3 20-21|0.0.2 19-20|0.0 18-19|0.0.4 16-17|0.0.0 15-16|0.0.1.0 14-15|0.0.1.2 12-13|0.0.1.4 11-12|0.0.1.1 10-11|0.0.1 9-10|0.0.1.5 1-2|0.0.1.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:43.133
# ::node	0	and	25-26
# ::node	0.0	and	19-20
# ::node	0.0.0	also	16-17
# ::node	0.0.1	reflect-01	10-11
# ::node	0.0.1.0	it	15-16
# ::node	0.0.1.1	society	11-12
# ::node	0.0.1.2	stage	14-15
# ::node	0.0.1.3	problem	1-2
# ::node	0.0.1.4	intentional	12-13
# ::node	0.0.1.5	always	9-10
# ::node	0.0.2	often	20-21
# ::node	0.0.3	accurate	22-23
# ::node	0.0.4	it	18-19
# ::node	0.1	accident	24-25
# ::root	0	and
# ::edge	and	mod	also	0.0	0.0.0	
# ::edge	and	op1	accident	0	0.1	
# ::edge	and	op1	reflect-01	0.0	0.0.1	
# ::edge	and	op2	often	0.0	0.0.2	
# ::edge	and	op3	accurate	0.0	0.0.3	
# ::edge	and	op4	and	0.0	0	
# ::edge	it	topic	and	0.0.4	0.0	
# ::edge	problem	domain	reflect-01	0.0.1.3	0.0.1	
# ::edge	reflect-01	ARG0	it	0.0.1	0.0.1.0	
# ::edge	reflect-01	ARG1	society	0.0.1	0.0.1.1	
# ::edge	reflect-01	ARG2	stage	0.0.1	0.0.1.2	
# ::edge	reflect-01	manner	intentional	0.0.1	0.0.1.4	
# ::edge	reflect-01	time	always	0.0.1	0.0.1.5	
(a / and 
      :op-of (a4 / and 
            :mod (a5 / also) 
            :op1 (r / reflect-01 
                  :ARG0 (i2 / it) 
                  :ARG1 (s2 / society) 
                  :ARG2 (s / stage) 
                  :domain-of (p / problem) 
                  :manner (i3 / intentional) 
                  :time (a6 / always)) 
            :op2 (o / often) 
            :op3 (a3 / accurate) 
            :topic-of (i / it)) 
      :op1 (a2 / accident))

# ::snt the breakdown of accidents produced for only the second time in booklet form is being distributed in thousands to colleges community groups libraries and health authorities, the figures show there were 2616 injury accidents in oxfordshire last year with a drop in the number of deaths and serious injuries but a rise in the number of people slightly injured, mr peverelcoopers breakdown shows 68 per cent happened during the day with 1524 year olds more likely to be involved in accidents due to their lack of experience and poorly developed road sense
# ::tok the breakdown of accidents produced for only the second time in booklet form is being distributed in thousands to colleges community groups libraries and health authorities , the figures show there were 2616 injury accidents in oxfordshire last year with a drop in the number of deaths and serious injuries but a rise in the number of people slightly injured , mr peverelcoopers breakdown shows 68 per cent happened during the day with 1524 year olds more likely to be involved in accidents due to their lack of experience and poorly developed road sense
# ::alignments 93-94|0.0.3.2.0.1.0.0.0.2 92-93|0.0.3.2.0.1.0.0.0.1.0 91-92|0.0.3.2.0.1.0.0.0.1 90-91|0.0.3.2.0.1.0.0.0.1.1 89-90|0.0.3.2.0.1.0.0.0 88-89|0.0.3.2.0.1.0.0.0.0 86-87|0.0.3.2.0.1.0.0.0.2.0 82-83|0.0.3.2.0.1.0.0.1 80-81|0.0.3.2.0.1.0.0 77-78|0.0.3.2.0.1.0 74-75|0.0.3.2.0.1.0.0.0.0.0 73-74|0.0.3.0.0+0.0.3.0 71-72|0.0.3.2.0.0.1 68-69|0.0.3.2.0.0 67-68|0.0.3.2.0.0.0.0+0.0.3.2.0.0.0 65-66|0.0.3.2.0.1.0.0.0.2.0.0 64-65|0.0.3.2.0.1 63-64|0.0.3.2.0 59-60|0.0.3.2 58-59|0.0.3.2.1 55-56|0.0.3.1 52-53|0.0.3 50-51|0 49-50|0.1.0 48-49|0.1.0.2 47-48|0.1 44-45|0.1.1.0 41-42|0.1.1 38-39|0.1.0.1.0 37-38|0.1.0.1 34-35|0.1.1.0.0.0 33-34|0.1.1.0.0 32-33|0.1.0.0.0+0.1.0.0 29-30|0.0.2.0.0 28-29|0.0.2.0.0.0 25-26|0.0.2 24-25|0.0.2.0 23-24|0.0 22-23|0.0.1 21-22|0.0.1.0 20-21|0.0.0.1 19-20|0.0.0.1.0 15-16|0.0.0 12-13|0.0.0.0.1.1 9-10|0.0.0.0.0 6-7|0.0.0.0.0.0 4-5|0.0.0.0.1 3-4|0.0.0.0.1.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:47.396
# ::node	0	contrast-01	50-51
# ::node	0.0	and	23-24
# ::node	0.0.0	distribute-01	15-16
# ::node	0.0.0.0	break-12	1-2
# ::node	0.0.0.0.0	time	9-10
# ::node	0.0.0.0.0.0	only	6-7
# ::node	0.0.0.0.1	produce-01	4-5
# ::node	0.0.0.0.1.0	accident	3-4
# ::node	0.0.0.0.1.1	form	12-13
# ::node	0.0.0.1	community	20-21
# ::node	0.0.0.1.0	college	19-20
# ::node	0.0.1	library	22-23
# ::node	0.0.1.0	group	21-22
# ::node	0.0.2	authority	25-26
# ::node	0.0.2.0	health	24-25
# ::node	0.0.2.0.0	show-01	29-30
# ::node	0.0.2.0.0.0	figure	28-29
# ::node	0.0.3	rise-01	52-53
# ::node	0.0.3.0	date-entity	73-74
# ::node	0.0.3.0.0	1524	73-74
# ::node	0.0.3.1	number	55-56
# ::node	0.0.3.2	injure-01	59-60
# ::node	0.0.3.2.0	break-12	63-64
# ::node	0.0.3.2.0.0	happen-01	68-69
# ::node	0.0.3.2.0.0.0	monetary-quantity	67-68
# ::node	0.0.3.2.0.0.0.0	cent	67-68
# ::node	0.0.3.2.0.0.1	day	71-72
# ::node	0.0.3.2.0.1	show-01	64-65
# ::node	0.0.3.2.0.1.0	likely	77-78
# ::node	0.0.3.2.0.1.0.0	involve-01	80-81
# ::node	0.0.3.2.0.1.0.0.0	and	89-90
# ::node	0.0.3.2.0.1.0.0.0.0	experience-01	88-89
# ::node	0.0.3.2.0.1.0.0.0.0.0	year	74-75
# ::node	0.0.3.2.0.1.0.0.0.1	develop-02	91-92
# ::node	0.0.3.2.0.1.0.0.0.1.0	road	92-93
# ::node	0.0.3.2.0.1.0.0.0.1.1	poor	90-91
# ::node	0.0.3.2.0.1.0.0.0.2	sense	93-94
# ::node	0.0.3.2.0.1.0.0.0.2.0	lack-01	86-87
# ::node	0.0.3.2.0.1.0.0.0.2.0.0	68	65-66
# ::node	0.0.3.2.0.1.0.0.1	accident	82-83
# ::node	0.0.3.2.1	slight	58-59
# ::node	0.1	and	47-48
# ::node	0.1.0	injure-01	49-50
# ::node	0.1.0.0	date-entity	32-33
# ::node	0.1.0.0.0	2616	32-33
# ::node	0.1.0.1	last	37-38
# ::node	0.1.0.1.0	year	38-39
# ::node	0.1.0.2	serious	48-49
# ::node	0.1.1	drop-01	41-42
# ::node	0.1.1.0	number	44-45
# ::node	0.1.1.0.0	injure-01	33-34
# ::node	0.1.1.0.0.0	accident	34-35
# ::root	0	contrast-01
# ::edge	accident	mod	injure-01	0.1.1.0.0.0	0.1.1.0.0	
# ::edge	and	op1	experience-01	0.0.3.2.0.1.0.0.0	0.0.3.2.0.1.0.0.0.0	
# ::edge	and	op1	injure-01	0.1	0.1.0	
# ::edge	and	op1	library	0.0	0.0.1	
# ::edge	and	op2	authority	0.0	0.0.2	
# ::edge	and	op2	contrast-01	0.1	0	
# ::edge	and	op2	develop-02	0.0.3.2.0.1.0.0.0	0.0.3.2.0.1.0.0.0.1	
# ::edge	and	op3	rise-01	0.0	0.0.3	
# ::edge	and	op3	sense	0.0.3.2.0.1.0.0.0	0.0.3.2.0.1.0.0.0.2	
# ::edge	authority	mod	health	0.0.2	0.0.2.0	
# ::edge	break-12	ARG1	time	0.0.0.0	0.0.0.0.0	
# ::edge	community	mod	college	0.0.0.1	0.0.0.1.0	
# ::edge	contrast-01	ARG2	and	0	0.0	
# ::edge	date-entity	year	1524	0.0.3.0	0.0.3.0.0	
# ::edge	date-entity	year	2616	0.1.0.0	0.1.0.0.0	
# ::edge	develop-02	ARG1	road	0.0.3.2.0.1.0.0.0.1	0.0.3.2.0.1.0.0.0.1.0	
# ::edge	develop-02	manner	poor	0.0.3.2.0.1.0.0.0.1	0.0.3.2.0.1.0.0.0.1.1	
# ::edge	distribute-01	ARG0	and	0.0.0	0.0	
# ::edge	distribute-01	ARG1	break-12	0.0.0	0.0.0.0	
# ::edge	distribute-01	ARG2	community	0.0.0	0.0.0.1	
# ::edge	drop-01	ARG1	number	0.1.1	0.1.1.0	
# ::edge	drop-01	topic	and	0.1.1	0.1	
# ::edge	experience-01	ARG1	year	0.0.3.2.0.1.0.0.0.0	0.0.3.2.0.1.0.0.0.0.0	
# ::edge	happen-01	ARG0	break-12	0.0.3.2.0.0	0.0.3.2.0	
# ::edge	happen-01	ARG1	monetary-quantity	0.0.3.2.0.0	0.0.3.2.0.0.0	
# ::edge	happen-01	time	day	0.0.3.2.0.0	0.0.3.2.0.0.1	
# ::edge	injure-01	ARG0	number	0.1.1.0.0	0.1.1.0	
# ::edge	injure-01	ARG1	break-12	0.0.3.2	0.0.3.2.0	
# ::edge	injure-01	ARG1	date-entity	0.1.0	0.1.0.0	
# ::edge	injure-01	ARG2	rise-01	0.0.3.2	0.0.3	
# ::edge	injure-01	degree	slight	0.0.3.2	0.0.3.2.1	
# ::edge	injure-01	mod	serious	0.1.0	0.1.0.2	
# ::edge	involve-01	ARG1	and	0.0.3.2.0.1.0.0	0.0.3.2.0.1.0.0.0	
# ::edge	involve-01	ARG2	accident	0.0.3.2.0.1.0.0	0.0.3.2.0.1.0.0.1	
# ::edge	lack-01	ARG0	68	0.0.3.2.0.1.0.0.0.2.0	0.0.3.2.0.1.0.0.0.2.0.0	
# ::edge	lack-01	ARG1	sense	0.0.3.2.0.1.0.0.0.2.0	0.0.3.2.0.1.0.0.0.2	
# ::edge	last	domain	injure-01	0.1.0.1	0.1.0	
# ::edge	library	mod	group	0.0.1	0.0.1.0	
# ::edge	likely	domain	involve-01	0.0.3.2.0.1.0	0.0.3.2.0.1.0.0	
# ::edge	monetary-quantity	unit	cent	0.0.3.2.0.0.0	0.0.3.2.0.0.0.0	
# ::edge	produce-01	ARG0	accident	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	produce-01	ARG1	break-12	0.0.0.0.1	0.0.0.0	
# ::edge	produce-01	location	form	0.0.0.0.1	0.0.0.0.1.1	
# ::edge	rise-01	ARG0	date-entity	0.0.3	0.0.3.0	
# ::edge	rise-01	ARG1	number	0.0.3	0.0.3.1	
# ::edge	show-01	ARG0	break-12	0.0.3.2.0.1	0.0.3.2.0	
# ::edge	show-01	ARG0	figure	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	show-01	ARG1	health	0.0.2.0.0	0.0.2.0	
# ::edge	show-01	ARG1	likely	0.0.3.2.0.1	0.0.3.2.0.1.0	
# ::edge	time	mod	only	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	year	mod	last	0.1.0.1.0	0.1.0.1	
(c2 / contrast-01 
      :ARG2 (a6 / and 
            :ARG0-of (d6 / distribute-01 
                  :ARG1 (b2 / break-12 
                        :ARG1 (t / time 
                              :mod (o / only)) 
                        :ARG1-of (p2 / produce-01 
                              :ARG0 (a7 / accident) 
                              :location (f2 / form))) 
                  :ARG2 (c3 / community 
                        :mod (c4 / college))) 
            :op1 (l4 / library 
                  :mod (g / group)) 
            :op2 (a5 / authority 
                  :mod (h2 / health 
                        :ARG1-of (s5 / show-01 
                              :ARG0 (f / figure)))) 
            :op3 (r2 / rise-01 
                  :ARG0 (d2 / date-entity 
                        :year 1524) 
                  :ARG1 (n / number) 
                  :ARG2-of (i2 / injure-01 
                        :ARG1 (b / break-12 
                              :ARG0-of (h / happen-01 
                                    :ARG1 (m / monetary-quantity 
                                          :unit (c / cent)) 
                                    :time (d3 / day)) 
                              :ARG0-of (s2 / show-01 
                                    :ARG1 (l2 / likely 
                                          :domain (i / involve-01 
                                                :ARG1 (a / and 
                                                      :op1 (e / experience-01 
                                                            :ARG1 (y / year)) 
                                                      :op2 (d / develop-02 
                                                            :ARG1 (r / road) 
                                                            :manner (p / poor)) 
                                                      :op3 (s / sense 
                                                            :ARG1-of (l / lack-01 
                                                                  :ARG0 68))) 
                                                :ARG2 (a2 / accident))))) 
                        :degree (s3 / slight)))) 
      :op-of (a3 / and 
            :op1 (i3 / injure-01 
                  :ARG1 (d5 / date-entity 
                        :year 2616) 
                  :domain-of (l3 / last 
                        :mod-of (y2 / year)) 
                  :mod (s4 / serious)) 
            :topic-of (d4 / drop-01 
                  :ARG1 (n2 / number 
                        :ARG0-of (i4 / injure-01 
                              :mod-of (a4 / accident))))))

# ::snt he survived curious accidents a car smash near glyndebourne electrocution in the pit of the paris opera imminent peritonitis at a festival hall concert
# ::tok he survived curious accidents a car smash near glyndebourne electrocution in the pit of the paris opera imminent peritonitis at a festival hall concert
# ::alignments 22-23|0.0.0.0 21-22|0.0.0.0.0 17-18|0.3 16-17|0.2.1.0 9-10|0.2.1 7-8|0.2 5-6|0.2.0 3-4|0.1 2-3|0.0.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:47.517
# ::node	0	survive-01	1-2
# ::node	0.0	he	0-1
# ::node	0.0.0	curious-41	2-3
# ::node	0.0.0.0	hall	22-23
# ::node	0.0.0.0.0	festival	21-22
# ::node	0.1	accident	3-4
# ::node	0.2	near	7-8
# ::node	0.2.0	car	5-6
# ::node	0.2.1	electrocution	9-10
# ::node	0.2.1.0	opera	16-17
# ::node	0.3	imminent	17-18
# ::root	0	survive-01
# ::edge	car	location	near	0.2.0	0.2	
# ::edge	curious-41	ARG0	he	0.0.0	0.0	
# ::edge	hall	mod	festival	0.0.0.0	0.0.0.0.0	
# ::edge	hall	op1	curious-41	0.0.0.0	0.0.0	
# ::edge	imminent	op1	survive-01	0.3	0	
# ::edge	near	op1	electrocution	0.2	0.2.1	
# ::edge	opera	poss	electrocution	0.2.1.0	0.2.1	
# ::edge	survive-01	ARG0	he	0	0.0	
# ::edge	survive-01	ARG1	accident	0	0.1	
# ::edge	survive-01	location	near	0	0.2	
(s / survive-01 
      :ARG0 (h2 / he 
            :ARG0-of (c2 / curious-41 
                  :op-of (h / hall 
                        :mod (f / festival)))) 
      :ARG1 (a / accident) 
      :location (n / near 
            :location-of (c / car) 
            :op1 (e / electrocution 
                  :poss-of (o / opera))) 
      :op-of (i / imminent))

# ::snt nupe and the trade unions concerned should show some compassion to the people of london and honour their commitment to maintain the accident and emergency service and get back to the negotiating table
# ::tok nupe and the trade unions concerned should show some compassion to the people of london and honour their commitment to maintain the accident and emergency service and get back to the negotiating table
# ::alignments 32-33|0.0.1.1.0.0.1 31-32|0.0.1.1.0.0 28-29|0.0.1.1.0.0.0 26-27|0.0.0 24-25|0.2 23-24|0 22-23|0.1 20-21|0.0 18-19|0.0.1 16-17|0.0.1.1 15-16|0.0.1.1.0 14-15|0.0.1.1.0.3.0.0+0.0.1.1.0.3.0+0.0.1.1.0.3 8-9|0.0.1.0 7-8|0.0.1.1.0.2 6-7|0.0.1.1.0.2.0 5-6|0.0.1.1.0.1.0 4-5|0.0.1.1.0.1 3-4|0.0.1.1.0.1.1 1-2|0.0.1.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:48.016
# ::node	0	and	23-24
# ::node	0.0	maintain-01	20-21
# ::node	0.0.0	and	26-27
# ::node	0.0.1	commit-01	18-19
# ::node	0.0.1.0	some	8-9
# ::node	0.0.1.1	honor-01	16-17
# ::node	0.0.1.1.0	and	15-16
# ::node	0.0.1.1.0.0	negotiate-01	31-32
# ::node	0.0.1.1.0.0.0	back	28-29
# ::node	0.0.1.1.0.0.1	table	32-33
# ::node	0.0.1.1.0.1	union	4-5
# ::node	0.0.1.1.0.1.0	concern-01	5-6
# ::node	0.0.1.1.0.1.1	trade-01	3-4
# ::node	0.0.1.1.0.2	show-01	7-8
# ::node	0.0.1.1.0.2.0	recommend-01	6-7
# ::node	0.0.1.1.0.3	city	14-15
# ::node	0.0.1.1.0.3.0	name	14-15
# ::node	0.0.1.1.0.3.0.0	"London"	14-15
# ::node	0.0.1.1.1	and	1-2
# ::node	0.1	accident	22-23
# ::node	0.2	emergency	24-25
# ::root	0	and
# ::edge	and	op1	honor-01	0.0.1.1.1	0.0.1.1	
# ::edge	and	op1	maintain-01	0	0.0	
# ::edge	and	op1	union	0.0.1.1.0	0.0.1.1.0.1	
# ::edge	and	op2	accident	0	0.1	
# ::edge	and	op2	show-01	0.0.1.1.0	0.0.1.1.0.2	
# ::edge	and	op3	city	0.0.1.1.0	0.0.1.1.0.3	
# ::edge	and	op3	emergency	0	0.2	
# ::edge	and	op4	honor-01	0.0.1.1.0	0.0.1.1	
# ::edge	city	name	name	0.0.1.1.0.3	0.0.1.1.0.3.0	
# ::edge	commit-01	ARG1	some	0.0.1	0.0.1.0	
# ::edge	commit-01	ARG2	maintain-01	0.0.1	0.0	
# ::edge	concern-01	ARG1	union	0.0.1.1.0.1.0	0.0.1.1.0.1	
# ::edge	honor-01	ARG1	commit-01	0.0.1.1	0.0.1	
# ::edge	maintain-01	ARG1	and	0.0	0.0.0	
# ::edge	name	op1	"London"	0.0.1.1.0.3.0	0.0.1.1.0.3.0.0	
# ::edge	negotiate-01	ARG0	and	0.0.1.1.0.0	0.0.1.1.0	
# ::edge	negotiate-01	ARG1	back	0.0.1.1.0.0	0.0.1.1.0.0.0	
# ::edge	recommend-01	ARG1	show-01	0.0.1.1.0.2.0	0.0.1.1.0.2	
# ::edge	table	mod	negotiate-01	0.0.1.1.0.0.1	0.0.1.1.0.0	
# ::edge	union	mod	trade-01	0.0.1.1.0.1	0.0.1.1.0.1.1	
(a2 / and 
      :op1 (m / maintain-01 
            :ARG1 (a / and) 
            :ARG2-of (c / commit-01 
                  :ARG1 (s / some) 
                  :ARG1-of (h / honor-01 
                        :op-of (a4 / and 
                              :ARG0-of (n / negotiate-01 
                                    :ARG1 (b / back) 
                                    :mod-of (t / table)) 
                              :op1 (u / union 
                                    :ARG1-of (c3 / concern-01) 
                                    :mod (t2 / trade-01)) 
                              :op2 (s2 / show-01 
                                    :ARG1-of (r / recommend-01)) 
                              :op3 (c2 / city 
                                    :name (n2 / name 
                                          :op1 "London"))) 
                        :op-of (a5 / and)))) 
      :op2 (a3 / accident) 
      :op3 (e / emergency))

# ::snt the a four one three in buckinghamshire at dunton turn between winslow and whitchurch did see two mile tailbacks earlier on this afternoon at that was aylesburybound due to the accident involving a car on fire, the tailbacks are now beginning to ease im told by thames valley police due to the accident being cleared away from the carriageway at the moment
# ::tok the a four one three in buckinghamshire at dunton turn between winslow and whitchurch did see two mile tailbacks earlier on this afternoon at that was aylesburybound due to the accident involving a car on fire , the tailbacks are now beginning to ease im told by thames valley police due to the accident being cleared away from the carriageway at the moment
# ::alignments 62-63|0.2.1.1 56-57|0.2.1.0.0.0 55-56|0.2.1.0.0 53-54|0.2.1.0 49-50|0.0 47-49|0.0.0.0.0+0.0.0.0.1+0.0.0.0+0.0.0 45-46|0 43-44|0.2 41-42|0.2.1 40-41|0.2.1.3 33-34|0.2.0.0.0 31-32|0.2.0.0 30-31|0.2.0 22-23|0.2.1.2.0.1.0 21-22|0.1 19-20|0.2.1.2.0.1 17-18|0.2.1.2.0.0.1+0.2.1.2.0.0 16-17|0.2.1.2.0.0.0 15-16|0.2.1.2.0 12-13|0.2.1.2 10-11|0.2.1.2.1 4-5|0.2.0.0.1 2-3|0.2.0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:49.167
# ::node	0	tell-01	45-46
# ::node	0.0	police	49-50
# ::node	0.0.0	country	47-49
# ::node	0.0.0.0	name	47-49
# ::node	0.0.0.0.0	"valley"	47-49
# ::node	0.0.0.0.1	"thames"	47-49
# ::node	0.1	this	21-22
# ::node	0.2	ease-02	43-44
# ::node	0.2.0	accident	30-31
# ::node	0.2.0.0	involve-01	31-32
# ::node	0.2.0.0.0	car	33-34
# ::node	0.2.0.0.1	3	4-5
# ::node	0.2.0.0.2	4	2-3
# ::node	0.2.1	begin-01	41-42
# ::node	0.2.1.0	accident	53-54
# ::node	0.2.1.0.0	clear-01	55-56
# ::node	0.2.1.0.0.0	away	56-57
# ::node	0.2.1.1	moment	62-63
# ::node	0.2.1.2	and	12-13
# ::node	0.2.1.2.0	see-01	15-16
# ::node	0.2.1.2.0.0	distance-quantity	17-18
# ::node	0.2.1.2.0.0.0	2	16-17
# ::node	0.2.1.2.0.0.1	mile	17-18
# ::node	0.2.1.2.0.1	early	19-20
# ::node	0.2.1.2.0.1.0	afternoon	22-23
# ::node	0.2.1.2.1	between	10-11
# ::node	0.2.1.3	now	40-41
# ::root	0	tell-01
# ::edge	3	op1	involve-01	0.2.0.0.1	0.2.0.0	
# ::edge	4	op1	involve-01	0.2.0.0.2	0.2.0.0	
# ::edge	afternoon	mod	early	0.2.1.2.0.1.0	0.2.1.2.0.1	
# ::edge	and	op1	begin-01	0.2.1.2	0.2.1	
# ::edge	begin-01	ARG0	accident	0.2.1	0.2.1.0	
# ::edge	begin-01	ARG1	ease-02	0.2.1	0.2	
# ::edge	begin-01	time	now	0.2.1	0.2.1.3	
# ::edge	between	op1	and	0.2.1.2.1	0.2.1.2	
# ::edge	clear-01	ARG1	accident	0.2.1.0.0	0.2.1.0	
# ::edge	clear-01	direction	away	0.2.1.0.0	0.2.1.0.0.0	
# ::edge	country	name	name	0.0.0	0.0.0.0	
# ::edge	distance-quantity	quant	2	0.2.1.2.0.0	0.2.1.2.0.0.0	
# ::edge	distance-quantity	unit	mile	0.2.1.2.0.0	0.2.1.2.0.0.1	
# ::edge	ease-02	ARG0	accident	0.2	0.2.0	
# ::edge	ease-02	ARG1	tell-01	0.2	0	
# ::edge	involve-01	ARG1	car	0.2.0.0	0.2.0.0.0	
# ::edge	involve-01	ARG2	accident	0.2.0.0	0.2.0	
# ::edge	moment	op1	begin-01	0.2.1.1	0.2.1	
# ::edge	name	op1	"valley"	0.0.0.0	0.0.0.0.0	
# ::edge	name	op2	"thames"	0.0.0.0	0.0.0.0.1	
# ::edge	police	mod	country	0.0	0.0.0	
# ::edge	see-01	ARG0	distance-quantity	0.2.1.2.0	0.2.1.2.0.0	
# ::edge	see-01	ARG1	and	0.2.1.2.0	0.2.1.2	
# ::edge	see-01	time	early	0.2.1.2.0	0.2.1.2.0.1	
# ::edge	tell-01	ARG0	police	0	0.0	
# ::edge	tell-01	ARG1	this	0	0.1	
(t / tell-01 
      :ARG0 (p / police 
            :mod (c2 / country 
                  :name (n / name 
                        :op1 "valley" 
                        :op2 "thames"))) 
      :ARG1 (t2 / this) 
      :ARG1-of (e / ease-02 
            :ARG0 (a3 / accident 
                  :ARG2-of (i / involve-01 
                        :ARG1 (c3 / car) 
                        :op-of 3 
                        :op-of 4)) 
            :ARG1-of (b / begin-01 
                  :ARG0 (a2 / accident 
                        :ARG1-of (c / clear-01 
                              :direction (a / away))) 
                  :op-of (m / moment) 
                  :op-of (a5 / and 
                        :ARG1-of (s / see-01 
                              :ARG0 (d / distance-quantity 
                                    :quant 2 
                                    :unit (m2 / mile)) 
                              :time (e2 / early 
                                    :mod-of (a4 / afternoon))) 
                        :op-of (b2 / between)) 
                  :time (n2 / now))))

# ::snt last year volvo also won the prince michael road safety award for safety belt tensioners that operate automatically in a collision and its 700series car was declared the safest in an accident following crashtesting in 199 different vehicles by the american highway loss data institute
# ::tok last year volvo also won the prince michael road safety award for safety belt tensioners that operate automatically in a collision and its 700series car was declared the safest in an accident following crashtesting in 199 different vehicles by the american highway loss data institute
# ::alignments 44-45|0.1.1.1.0 43-44|0.1.1.1.0.0 41-42|0.1.1.1 40-41|0.1.1.2.0+0.1.1.2+0.1.1 37-38|0.1.1.0 36-37|0.1.1.0.0 31-32|0.0.0 26-27|0.0 24-25|0.3 21-22|0 20-21|0.2 17-18|0.1.2 16-17|0.1 13-14|0.1.0.0 12-13|0.1.0.0.0 10-11|0.1.0 9-10|0.1.0.2 8-9|0.1.0.2.1 6-7|0.1.0.2.0 4-5|0.1.0.1 3-4|0.1.0.1.0 1-2|0.1.0.1.1.0 0-1|0.1.0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:49.724
# ::node	0	and	21-22
# ::node	0.0	declare-02	26-27
# ::node	0.0.0	accident	31-32
# ::node	0.1	operate-01	16-17
# ::node	0.1.0	award-01	10-11
# ::node	0.1.0.0	belt	13-14
# ::node	0.1.0.0.0	safe-41	12-13
# ::node	0.1.0.1	win-01	4-5
# ::node	0.1.0.1.0	also	3-4
# ::node	0.1.0.1.1	last	0-1
# ::node	0.1.0.1.1.0	year	1-2
# ::node	0.1.0.2	safe-41	9-10
# ::node	0.1.0.2.0	prince	6-7
# ::node	0.1.0.2.1	road	8-9
# ::node	0.1.1	country	40-41
# ::node	0.1.1.0	vehicle	37-38
# ::node	0.1.1.0.0	differ-02	36-37
# ::node	0.1.1.1	highway	41-42
# ::node	0.1.1.1.0	institute	44-45
# ::node	0.1.1.1.0.0	data	43-44
# ::node	0.1.1.2	name	40-41
# ::node	0.1.1.2.0	"America"	40-41
# ::node	0.1.2	automatic	17-18
# ::node	0.2	collide-01	20-21
# ::node	0.3	car	24-25
# ::root	0	and
# ::edge	and	op1	collide-01	0	0.2	
# ::edge	and	op2	car	0	0.3	
# ::edge	award-01	ARG1	belt	0.1.0	0.1.0.0	
# ::edge	award-01	ARG2	safe-41	0.1.0	0.1.0.2	
# ::edge	belt	mod	safe-41	0.1.0.0	0.1.0.0.0	
# ::edge	country	name	name	0.1.1	0.1.1.2	
# ::edge	declare-02	ARG0	and	0.0	0	
# ::edge	declare-02	ARG1	accident	0.0	0.0.0	
# ::edge	differ-02	ARG1	vehicle	0.1.1.0.0	0.1.1.0	
# ::edge	highway	mod	country	0.1.1.1	0.1.1	
# ::edge	institute	mod	data	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	institute	mod	highway	0.1.1.1.0	0.1.1.1	
# ::edge	name	op1	"America"	0.1.1.2	0.1.1.2.0	
# ::edge	operate-01	ARG0	award-01	0.1	0.1.0	
# ::edge	operate-01	ARG1	and	0.1	0	
# ::edge	operate-01	location	country	0.1	0.1.1	
# ::edge	operate-01	manner	automatic	0.1	0.1.2	
# ::edge	safe-41	ARG1	prince	0.1.0.2	0.1.0.2.0	
# ::edge	safe-41	mod	road	0.1.0.2	0.1.0.2.1	
# ::edge	vehicle	mod	country	0.1.1.0	0.1.1	
# ::edge	win-01	ARG1	award-01	0.1.0.1	0.1.0	
# ::edge	win-01	mod	also	0.1.0.1	0.1.0.1.0	
# ::edge	win-01	time	last	0.1.0.1	0.1.0.1.1	
# ::edge	year	mod	last	0.1.0.1.1.0	0.1.0.1.1	
(a2 / and 
      :ARG0-of (d3 / declare-02 
            :ARG1 (a / accident)) 
      :ARG1-of (o / operate-01 
            :ARG0 (a4 / award-01 
                  :ARG1 (b / belt 
                        :mod (s / safe-41)) 
                  :ARG1-of (w / win-01 
                        :mod (a5 / also) 
                        :time (l / last 
                              :mod-of (y / year))) 
                  :ARG2 (s2 / safe-41 
                        :ARG1 (p / prince) 
                        :mod (r / road))) 
            :location (c / country 
                  :mod-of (v / vehicle 
                        :ARG1-of (d2 / differ-02)) 
                  :mod-of (h / highway 
                        :mod-of (i / institute 
                              :mod (d / data))) 
                  :name (n / name 
                        :op1 "America")) 
            :manner (a3 / automatic)) 
      :op1 (c3 / collide-01) 
      :op2 (c2 / car))

# ::snt earlier legal action taken by miss von kotze against the department of transport and berkshire county council following the accident had been dropped
# ::tok earlier legal action taken by miss von kotze against the department of transport and berkshire county council following the accident had been dropped
# ::alignments 22-23|0.0.0 19-20|0.2.0 16-17|0.1.0 15-16|0.1.0.0 13-14|0 12-13|0.2 10-11|0.1 2-3|0.0 1-2|0.0.1 0-1|0.0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:49.779
# ::node	0	and	13-14
# ::node	0.0	action	2-3
# ::node	0.0.0	drop-01	22-23
# ::node	0.0.1	legal	1-2
# ::node	0.0.2	early	0-1
# ::node	0.1	department	10-11
# ::node	0.1.0	council	16-17
# ::node	0.1.0.0	county	15-16
# ::node	0.2	transport-01	12-13
# ::node	0.2.0	accident	19-20
# ::root	0	and
# ::edge	action	mod	early	0.0	0.0.2	
# ::edge	action	mod	legal	0.0	0.0.1	
# ::edge	and	op1	action	0	0.0	
# ::edge	and	op2	department	0	0.1	
# ::edge	and	op3	transport-01	0	0.2	
# ::edge	council	mod	county	0.1.0	0.1.0.0	
# ::edge	department	mod	council	0.1	0.1.0	
# ::edge	drop-01	ARG1	action	0.0.0	0.0	
# ::edge	transport-01	ARG1	accident	0.2	0.2.0	
(a2 / and 
      :op1 (a3 / action 
            :ARG1-of (d / drop-01) 
            :mod (l / legal) 
            :mod (e / early)) 
      :op2 (d2 / department 
            :mod (c / council 
                  :mod (c2 / county))) 
      :op3 (t / transport-01 
            :ARG1 (a / accident)))

# ::snt the road traffic accident rate was also comparatively low
# ::tok the road traffic accident rate was also comparatively low
# ::alignments 8-9|0 7-8|0.0 6-7|0.2 4-5|0.1 3-4|0.1.0 2-3|0.1.0.0 1-2|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:49.796
# ::node	0	low	8-9
# ::node	0.0	compare-01	7-8
# ::node	0.1	rate	4-5
# ::node	0.1.0	accident	3-4
# ::node	0.1.0.0	traffic	2-3
# ::node	0.1.0.0.0	road	1-2
# ::node	0.2	also	6-7
# ::root	0	low
# ::edge	accident	mod	traffic	0.1.0	0.1.0.0	
# ::edge	low	degree	compare-01	0	0.0	
# ::edge	low	domain	rate	0	0.1	
# ::edge	low	mod	also	0	0.2	
# ::edge	rate	mod	accident	0.1	0.1.0	
# ::edge	traffic	mod	road	0.1.0.0	0.1.0.0.0	
(l / low 
      :degree (c / compare-01) 
      :domain (r / rate 
            :mod (a2 / accident 
                  :mod (t / traffic 
                        :mod (r2 / road)))) 
      :mod (a / also))

# ::snt ebbes church  although its disappearance was more by accident than design most people who have watched the changes in central oxford over the last 30 years can guess what happened
# ::tok ebbes church although its disappearance was more by accident than design most people who have watched the changes in central oxford over the last 30 years can guess what happened
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:49.797
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt doctors also called for research by the bma into ways of reducing deaths and injuries in road accidents involving cyclists
# ::tok doctors also called for research by the bma into ways of reducing deaths and injuries in road accidents involving cyclists
# ::alignments 18-19|0.1.0.0 17-18|0.1.0 16-17|0.1.0.1 14-15|0.1 13-14|0 11-12|0.0 9-10|0.0.1 4-5|0.0.0 1-2|0.1.0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:49.962
# ::node	0	and	13-14
# ::node	0.0	reduce-01	11-12
# ::node	0.0.0	research-01	4-5
# ::node	0.0.0.0	doctor	0-1
# ::node	0.0.1	way	9-10
# ::node	0.1	injure-01	14-15
# ::node	0.1.0	accident	17-18
# ::node	0.1.0.0	involve-01	18-19
# ::node	0.1.0.0.0	also	1-2
# ::node	0.1.0.1	road	16-17
# ::root	0	and
# ::edge	accident	location	road	0.1.0	0.1.0.1	
# ::edge	and	op1	injure-01	0	0.1	
# ::edge	injure-01	ARG1	accident	0.1	0.1.0	
# ::edge	involve-01	ARG0	also	0.1.0.0	0.1.0.0.0	
# ::edge	involve-01	ARG1	accident	0.1.0.0	0.1.0	
# ::edge	reduce-01	ARG1	and	0.0	0	
# ::edge	reduce-01	instrument	way	0.0	0.0.1	
# ::edge	research-01	ARG1	doctor	0.0.0	0.0.0.0	
# ::edge	research-01	ARG3	reduce-01	0.0.0	0.0	
(a2 / and 
      :ARG1-of (r2 / reduce-01 
            :ARG3-of (r3 / research-01 
                  :ARG1 (d / doctor)) 
            :instrument (w / way)) 
      :op1 (i2 / injure-01 
            :ARG1 (a / accident 
                  :ARG1-of (i / involve-01 
                        :ARG0 (a3 / also)) 
                  :location (r / road))))

# ::snt at least three people died in accidents in lancashire and the west midlands as dozens of roads were blocked by fallen trees and rail services were delayed
# ::tok at least three people died in accidents in lancashire and the west midlands as dozens of roads were blocked by fallen trees and rail services were delayed
# ::alignments 26-27|0.0 24-25|0 23-24|0.1 22-23|0.0.1 21-22|0.0.1.1.1 20-21|0.0.1.1.1.0 18-19|0.0.1.1 16-17|0.0.1.1.0 11-12|0.0.0 9-10|0.0.1.0.1 6-7|0.0.1.0.1.0 4-5|0.0.1.0 2-3|0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:50.103
# ::node	0	service	24-25
# ::node	0.0	delay-01	26-27
# ::node	0.0.0	west	11-12
# ::node	0.0.1	and	22-23
# ::node	0.0.1.0	die-01	4-5
# ::node	0.0.1.0.0	3	2-3
# ::node	0.0.1.0.1	and	9-10
# ::node	0.0.1.0.1.0	accident	6-7
# ::node	0.0.1.1	block-01	18-19
# ::node	0.0.1.1.0	road	16-17
# ::node	0.0.1.1.1	tree	21-22
# ::node	0.0.1.1.1.0	fall-01	20-21
# ::node	0.1	rail	23-24
# ::root	0	service
# ::edge	accident	poss	and	0.0.1.0.1.0	0.0.1.0.1	
# ::edge	and	op1	block-01	0.0.1	0.0.1.1	
# ::edge	and	op2	delay-01	0.0.1	0.0	
# ::edge	block-01	ARG1	road	0.0.1.1	0.0.1.1.0	
# ::edge	block-01	location	tree	0.0.1.1	0.0.1.1.1	
# ::edge	delay-01	ARG0	west	0.0	0.0.0	
# ::edge	delay-01	ARG1	service	0.0	0	
# ::edge	die-01	ARG0	3	0.0.1.0	0.0.1.0.0	
# ::edge	die-01	ARG1	and	0.0.1.0	0.0.1.0.1	
# ::edge	die-01	condition	and	0.0.1.0	0.0.1	
# ::edge	fall-01	ARG1	tree	0.0.1.1.1.0	0.0.1.1.1	
# ::edge	service	mod	rail	0	0.1	
(s / service 
      :ARG1-of (d / delay-01 
            :ARG0 (w / west) 
            :op-of (a / and 
                  :condition-of (d2 / die-01 
                        :ARG0 3 
                        :ARG1 (a2 / and 
                              :poss-of (a3 / accident))) 
                  :op1 (b / block-01 
                        :ARG1 (r2 / road) 
                        :location (t / tree 
                              :ARG1-of (f / fall-01))))) 
      :mod (r / rail))

# ::snt a searchlight display intended to draw attention to the prudential national championships here caused one minor accident on the nearby m54 where the curious were parking on the hard shoulder
# ::tok a searchlight display intended to draw attention to the prudential national championships here caused one minor accident on the nearby m54 where the curious were parking on the hard shoulder
# ::alignments 29-30|0.0.2.0.0 28-29|0.0.2.0 23-24|0.0.2 19-20|0.0.1.1.0 16-17|0.1 15-16|0.1.0 13-14|0 12-13|0.2 10-11|0.0.0 6-7|0.0.1.0 5-6|0.0.1 3-4|0.0.1.1 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:50.355
# ::node	0	cause-01	13-14
# ::node	0.0	display-01	2-3
# ::node	0.0.0	nation	10-11
# ::node	0.0.1	draw-02	5-6
# ::node	0.0.1.0	attention	6-7
# ::node	0.0.1.1	intend-01	3-4
# ::node	0.0.1.1.0	nearby	19-20
# ::node	0.0.2	curious-41	23-24
# ::node	0.0.2.0	hard	28-29
# ::node	0.0.2.0.0	shoulder	29-30
# ::node	0.1	accident	16-17
# ::node	0.1.0	minor	15-16
# ::node	0.2	here	12-13
# ::root	0	cause-01
# ::edge	accident	mod	minor	0.1	0.1.0	
# ::edge	cause-01	ARG0	display-01	0	0.0	
# ::edge	cause-01	ARG1	accident	0	0.1	
# ::edge	cause-01	location	here	0	0.2	
# ::edge	curious-41	ARG0	hard	0.0.2	0.0.2.0	
# ::edge	curious-41	ARG1	display-01	0.0.2	0.0	
# ::edge	display-01	ARG0	nation	0.0	0.0.0	
# ::edge	draw-02	ARG0	display-01	0.0.1	0.0	
# ::edge	draw-02	ARG1	attention	0.0.1	0.0.1.0	
# ::edge	intend-01	ARG0	nearby	0.0.1.1	0.0.1.1.0	
# ::edge	intend-01	ARG1	draw-02	0.0.1.1	0.0.1	
# ::edge	shoulder	mod	hard	0.0.2.0.0	0.0.2.0	
(c2 / cause-01 
      :ARG0 (d2 / display-01 
            :ARG0 (n2 / nation) 
            :ARG0-of (d / draw-02 
                  :ARG1 (a2 / attention) 
                  :ARG1-of (i / intend-01 
                        :ARG0 (n / nearby))) 
            :ARG1-of (c / curious-41 
                  :ARG0 (h / hard 
                        :mod-of (s / shoulder)))) 
      :ARG1 (a / accident 
            :mod (m / minor)) 
      :location (h2 / here))

# ::snt on 26 october the day after the accident ricky harwood a garage owner in amesbury discovered that the paintwork on all 18 vehicles on his forecourt was blistering with small bubbles
# ::tok on 26 october the day after the accident ricky harwood a garage owner in amesbury discovered that the paintwork on all 18 vehicles on his forecourt was blistering with small bubbles
# ::alignments 29-30|0.1.1 22-23|0.0.1 21-22|0.0.1.0 20-21|0.0.1.1 15-16|0 12-13|0.0.0+0.0 11-12|0.0.0.0 7-8|0.1 5-6|0.1.0 4-5|0.1.0.0 2-3|0.2.0+0.2 1-2|0.2.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:50.769
# ::node	0	discover-01	15-16
# ::node	0.0	person	12-13
# ::node	0.0.0	own-01	12-13
# ::node	0.0.0.0	garage	11-12
# ::node	0.0.1	vehicle	22-23
# ::node	0.0.1.0	18	21-22
# ::node	0.0.1.1	all	20-21
# ::node	0.1	accident	7-8
# ::node	0.1.0	after	5-6
# ::node	0.1.0.0	day	4-5
# ::node	0.1.1	small	29-30
# ::node	0.2	date-entity	2-3
# ::node	0.2.0	10	2-3
# ::node	0.2.1	26	1-2
# ::root	0	discover-01
# ::edge	accident	poss	small	0.1	0.1.1	
# ::edge	after	op1	accident	0.1.0	0.1	
# ::edge	after	quant	day	0.1.0	0.1.0.0	
# ::edge	date-entity	month	10	0.2	0.2.0	
# ::edge	date-entity	quant	26	0.2	0.2.1	
# ::edge	discover-01	ARG0	person	0	0.0	
# ::edge	discover-01	ARG1	accident	0	0.1	
# ::edge	discover-01	time	date-entity	0	0.2	
# ::edge	own-01	ARG0	person	0.0.0	0.0	
# ::edge	own-01	ARG1	garage	0.0.0	0.0.0.0	
# ::edge	person	poss	vehicle	0.0	0.0.1	
# ::edge	vehicle	quant	18	0.0.1	0.0.1.0	
# ::edge	vehicle	quant	all	0.0.1	0.0.1.1	
(d / discover-01 
      :ARG0 (p / person 
            :ARG0-of (o / own-01 
                  :ARG1 (g / garage)) 
            :poss (v / vehicle 
                  :quant 18 
                  :quant (a / all))) 
      :ARG1 (a2 / accident 
            :op-of (a3 / after 
                  :quant (d2 / day)) 
            :poss (s / small)) 
      :time (d3 / date-entity 
            :month 10 
            :quant 26))

# ::snt a mass meeting at the hull royal infirmary last week decided to restrict the countys service to accident and emergency calls only and selected special cases
# ::tok a mass meeting at the hull royal infirmary last week decided to restrict the countys service to accident and emergency calls only and selected special cases
# ::alignments 25-26|0.1.0 24-25|0.1.0.0 23-24|0.1 22-23|0 21-22|0.0.1.0.0 19-20|0.0.1.0.2 18-19|0.0.1.0 17-18|0.0.1.0.1 12-13|0.0.1 10-11|0.0 9-10|0.0.2 8-9|0.0.2.0 6-7|0.0.0.0 2-3|0.0.0 1-2|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:50.868
# ::node	0	and	22-23
# ::node	0.0	decide-01	10-11
# ::node	0.0.0	meet-03	2-3
# ::node	0.0.0.0	royal	6-7
# ::node	0.0.0.1	mass	1-2
# ::node	0.0.1	restrict-01	12-13
# ::node	0.0.1.0	and	18-19
# ::node	0.0.1.0.0	only	21-22
# ::node	0.0.1.0.1	accident	17-18
# ::node	0.0.1.0.2	emergency	19-20
# ::node	0.0.2	week	9-10
# ::node	0.0.2.0	last	8-9
# ::node	0.1	select-01	23-24
# ::node	0.1.0	case	25-26
# ::node	0.1.0.0	special	24-25
# ::root	0	and
# ::edge	and	op1	accident	0.0.1.0	0.0.1.0.1	
# ::edge	and	op1	decide-01	0	0.0	
# ::edge	and	op2	emergency	0.0.1.0	0.0.1.0.2	
# ::edge	and	op2	select-01	0	0.1	
# ::edge	case	mod	special	0.1.0	0.1.0.0	
# ::edge	decide-01	ARG0	meet-03	0.0	0.0.0	
# ::edge	decide-01	ARG1	restrict-01	0.0	0.0.1	
# ::edge	decide-01	time	week	0.0	0.0.2	
# ::edge	meet-03	ARG0	royal	0.0.0	0.0.0.0	
# ::edge	meet-03	degree	mass	0.0.0	0.0.0.1	
# ::edge	only	example	and	0.0.1.0.0	0.0.1.0	
# ::edge	restrict-01	ARG0	and	0.0.1	0.0.1.0	
# ::edge	select-01	ARG1	case	0.1	0.1.0	
# ::edge	week	mod	last	0.0.2	0.0.2.0	
(a / and 
      :op1 (d / decide-01 
            :ARG0 (m / meet-03 
                  :ARG0 (r2 / royal) 
                  :degree (m2 / mass)) 
            :ARG1 (r / restrict-01 
                  :ARG0 (a2 / and 
                        :example-of (o / only) 
                        :op1 (a3 / accident) 
                        :op2 (e / emergency))) 
            :time (w / week 
                  :mod (l / last))) 
      :op2 (s2 / select-01 
            :ARG1 (c / case 
                  :mod (s / special))))

# ::snt mr prescott yesterday demanded to know why the official report in 1986 took no account of draft studies published in 1985 which concluded that gross fatigue in the general area of the forward extremity of the superstructure may have contributed to the accident
# ::tok mr prescott yesterday demanded to know why the official report in 1986 took no account of draft studies published in 1985 which concluded that gross fatigue in the general area of the forward extremity of the superstructure may have contributed to the accident
# ::alignments 42-43|0.0.0.2 39-40|0.0.0 37-38|0.0.1+0.0 33-34|0.0.0.2.0 32-33|0.0.0.2.0.0 29-30|0.0.0.0.0 28-29|0.0.0.0.0.0 25-26|0.0.0.0 24-25|0.0.0.0.1 22-23|0 20-21|0.0.0.1.1.0+0.0.0.1.1 18-19|0.0.0.1 17-18|0.0.0.1.0 16-17|0.0.0.1.0.1 14-15|0.0.0.1.0.2 13-14|0.0.0.1.0.2.1 11-12|0.0.0.1.0.0.1.0+0.0.0.1.0.0.1 9-10|0.0.0.1.0.0 8-9|0.0.0.1.0.0.0.0+0.0.0.1.0.0.0 5-6|0.0.0.1.0.2.0 3-4|0.0.0.1.0.2.0.0 2-3|0.0.0.1.0.2.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:51.136
# ::node	0	conclude-01	22-23
# ::node	0.0	date-entity	37-38
# ::node	0.0.0	contribute-01	39-40
# ::node	0.0.0.0	fatigue	25-26
# ::node	0.0.0.0.0	area	29-30
# ::node	0.0.0.0.0.0	general	28-29
# ::node	0.0.0.0.1	gross	24-25
# ::node	0.0.0.1	publish-01	18-19
# ::node	0.0.0.1.0	study-01	17-18
# ::node	0.0.0.1.0.0	report	9-10
# ::node	0.0.0.1.0.0.0	have-org-role-91	8-9
# ::node	0.0.0.1.0.0.0.0	official	8-9
# ::node	0.0.0.1.0.0.1	date-entity	11-12
# ::node	0.0.0.1.0.0.1.0	1986	11-12
# ::node	0.0.0.1.0.1	draft-01	16-17
# ::node	0.0.0.1.0.2	account	14-15
# ::node	0.0.0.1.0.2.0	know-01	5-6
# ::node	0.0.0.1.0.2.0.0	demand-01	3-4
# ::node	0.0.0.1.0.2.0.0.0	yesterday	2-3
# ::node	0.0.0.1.0.2.1	-	13-14
# ::node	0.0.0.1.1	date-entity	20-21
# ::node	0.0.0.1.1.0	1985	20-21
# ::node	0.0.0.2	accident	42-43
# ::node	0.0.0.2.0	extremity	33-34
# ::node	0.0.0.2.0.0	forward	32-33
# ::node	0.0.1	5	37-38
# ::root	0	conclude-01
# ::edge	accident	part	extremity	0.0.0.2	0.0.0.2.0	
# ::edge	account	polarity	-	0.0.0.1.0.2	0.0.0.1.0.2.1	
# ::edge	account	topic	study-01	0.0.0.1.0.2	0.0.0.1.0	
# ::edge	area	mod	general	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	conclude-01	ARG1	date-entity	0	0.0	
# ::edge	contribute-01	ARG0	fatigue	0.0.0	0.0.0.0	
# ::edge	contribute-01	ARG1	publish-01	0.0.0	0.0.0.1	
# ::edge	contribute-01	ARG2	accident	0.0.0	0.0.0.2	
# ::edge	contribute-01	mod	date-entity	0.0.0	0.0	
# ::edge	date-entity	month	5	0.0	0.0.1	
# ::edge	date-entity	year	1985	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	date-entity	year	1986	0.0.0.1.0.0.1	0.0.0.1.0.0.1.0	
# ::edge	demand-01	ARG1	know-01	0.0.0.1.0.2.0.0	0.0.0.1.0.2.0	
# ::edge	demand-01	time	yesterday	0.0.0.1.0.2.0.0	0.0.0.1.0.2.0.0.0	
# ::edge	draft-01	ARG1	study-01	0.0.0.1.0.1	0.0.0.1.0	
# ::edge	extremity	mod	forward	0.0.0.2.0	0.0.0.2.0.0	
# ::edge	fatigue	location	area	0.0.0.0	0.0.0.0.0	
# ::edge	fatigue	mod	gross	0.0.0.0	0.0.0.0.1	
# ::edge	have-org-role-91	ARG2	official	0.0.0.1.0.0.0	0.0.0.1.0.0.0.0	
# ::edge	know-01	ARG0	account	0.0.0.1.0.2.0	0.0.0.1.0.2	
# ::edge	publish-01	ARG1	study-01	0.0.0.1	0.0.0.1.0	
# ::edge	publish-01	time	date-entity	0.0.0.1	0.0.0.1.1	
# ::edge	report	mod	have-org-role-91	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	report	time	date-entity	0.0.0.1.0.0	0.0.0.1.0.0.1	
# ::edge	study-01	ARG0	report	0.0.0.1.0	0.0.0.1.0.0	
(c2 / conclude-01 
      :ARG1 (d / date-entity 
            :mod-of (c / contribute-01 
                  :ARG0 (f2 / fatigue 
                        :location (a2 / area 
                              :mod (g / general)) 
                        :mod (g2 / gross)) 
                  :ARG1 (p / publish-01 
                        :ARG1 (s / study-01 
                              :ARG0 (r / report 
                                    :mod (h / have-org-role-91 
                                          :ARG2 (o / official)) 
                                    :time (d4 / date-entity 
                                          :year 1986)) 
                              :ARG1-of (d3 / draft-01) 
                              :topic-of (a3 / account 
                                    :ARG0-of (k / know-01 
                                          :ARG1-of (d5 / demand-01 
                                                :time (y / yesterday))) 
                                    :polarity (- / -))) 
                        :time (d2 / date-entity 
                              :year 1985)) 
                  :ARG2 (a / accident 
                        :part (e / extremity 
                              :mod (f / forward)))) 
            :month 5))

# ::snt the county council has made it a priority to build the bypass because of the amount of accidents which have taken place in and around middleton cheney
# ::tok the county council has made it a priority to build the bypass because of the amount of accidents which have taken place in and around middleton cheney
# ::alignments 24-25|0.1.1.1.1 23-24|0.1.1.1 21-22|0.1.1.1.0 17-18|0.0.0 15-16|0.0 12-13|0 11-12|0.1.1 9-10|0.1 7-8|0.1.0 5-6|0.1.1.0 2-3|0.1.0.0 1-2|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:51.287
# ::node	0	cause-01	12-13
# ::node	0.0	amount	15-16
# ::node	0.0.0	accident	17-18
# ::node	0.1	build-01	9-10
# ::node	0.1.0	priority	7-8
# ::node	0.1.0.0	council	2-3
# ::node	0.1.0.0.0	county	1-2
# ::node	0.1.1	bypass	11-12
# ::node	0.1.1.0	it	5-6
# ::node	0.1.1.1	and	23-24
# ::node	0.1.1.1.0	place	21-22
# ::node	0.1.1.1.1	around	24-25
# ::root	0	cause-01
# ::edge	accident	quant	amount	0.0.0	0.0	
# ::edge	and	op1	around	0.1.1.1	0.1.1.1.1	
# ::edge	build-01	ARG0	priority	0.1	0.1.0	
# ::edge	build-01	ARG1	bypass	0.1	0.1.1	
# ::edge	bypass	domain	it	0.1.1	0.1.1.0	
# ::edge	bypass	example	and	0.1.1	0.1.1.1	
# ::edge	cause-01	ARG0	amount	0	0.0	
# ::edge	cause-01	ARG1	build-01	0	0.1	
# ::edge	council	mod	county	0.1.0.0	0.1.0.0.0	
# ::edge	place	location	and	0.1.1.1.0	0.1.1.1	
# ::edge	priority	domain	council	0.1.0	0.1.0.0	
(c / cause-01 
      :ARG0 (a4 / amount 
            :quant-of (a3 / accident)) 
      :ARG1 (b2 / build-01 
            :ARG0 (p2 / priority 
                  :domain (c2 / council 
                        :mod (c3 / county))) 
            :ARG1 (b / bypass 
                  :domain (i / it) 
                  :example (a2 / and 
                        :location-of (p / place) 
                        :op1 (a / around)))))

# ::snt they were taken to the medical centre at raf brize norton after the accident at broughton pogges yesterday
# ::tok they were taken to the medical centre at raf brize norton after the accident at broughton pogges yesterday
# ::alignments 17-18|0.0.1 13-14|0.0 11-12|0.0.0 5-6|0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:51.306
# ::node	0	they	0-1
# ::node	0.0	accident	13-14
# ::node	0.0.0	after	11-12
# ::node	0.0.1	yesterday	17-18
# ::node	0.1	medicine	5-6
# ::root	0	they
(t / they 
      :domain-of (a / accident 
            :op-of (a2 / after) 
            :poss (y / yesterday)) 
      :op-of (m / medicine))

# ::snt summary of benefits per insured person cover up to cancellation or curtailment not exceeding final invoice costs medical and associated expenses 50000 including repatriation hospital benefit 10 per day maximum 200 baggage delay after 12 hours 75 baggage and personal effects 1000 limit 200 for valuables and any one article money 200 personal accident a death b loss or irrecoverable loss of use of one or more limbs or eyes 15000 c permanent total disablement from following usual occupation other than as provided by b above
# ::tok summary of benefits per insured person cover up to cancellation or curtailment not exceeding final invoice costs medical and associated expenses 50000 including repatriation hospital benefit 10 per day maximum 200 baggage delay after 12 hours 75 baggage and personal effects 1000 limit 200 for valuables and any one article money 200 personal accident a death b loss or irrecoverable loss of use of one or more limbs or eyes 15000 c permanent total disablement from following usual occupation other than as provided by b above
# ::alignments 85-86|0.1.0.0.1.0.0 84-85|0.1.0.0.1.0 82-83|0.1.0.0.1 79-80|0.1.0.0.1.1 78-79|0.0.1.0.0.1 77-78|0.0.1.0.0.1.0 72-73|0.0.1.0.0.1.1 71-72|0.0.1.0.0.1.1.0 70-71|0.1.0.2 69-70|0.1.0.1.0 68-69|0.1.0.1 67-68|0.1.0 65-66|0.1 62-63|0.1.0.0 58-59|0.1.0.0.0 56-57|0.0.1.0.0.0 55-56|0.0.1.0.0 53-54|0.0.1.0.0.2.0 52-53|0.0.1.0.0.2.0.1 51-52|0.0.1.0.0.2 50-51|0.0.1.1.0 49-50|0.0.1.1.0.1 47-48|0.0.1.1.0.0 46-47|0.0.1.1 43-44|0.0.1.0 42-43|0.0.1.0.0.2.0.0 41-42|0.0.0.2.1.0+0.0.0.2.1 40-41|0.0.1 39-40|0.0.1.3 38-39|0.0 36-37|0.0.1.2 35-36|0.0.0.1.0.0.0.0+0.0.0.1.0.0.0 34-35|0.0.0.1.0.0 33-34|0.0.1.0.0.2.0.0.1.0.0 32-33|0 30-31|0.2 29-30|0.0.1.0.0.2.0.0.1 28-29|0.0.1.0.0.2.0.0.1.0 26-27|0.0.0.2.0.0 25-26|0.0.0.2.0 24-25|0.0.0.1.0.1.0 23-24|0.0.0.1.0.1.0.0 21-22|0.0.1.0.0.2.0.0.0 20-21|0.0.0.2 19-20|0.0.0.2.2 18-19|0.0.0 17-18|0.0.0.1 16-17|0.0.0.1.0.1 14-15|0.0.0.1.0.1.1 13-14|0.0.0.1.0 10-11|0.0.0.1.0.1.1.0 5-6|0.0.0.0.0 4-5|0.0.0.0.0.0+0.0.0.0.0.0.0 2-3|0.0.0.0 0-1|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:55.846
# ::node	0	delay-01	32-33
# ::node	0.0	and	38-39
# ::node	0.0.0	and	18-19
# ::node	0.0.0.0	benefit-01	2-3
# ::node	0.0.0.0.0	person	5-6
# ::node	0.0.0.0.0.0	insure-02	4-5
# ::node	0.0.0.0.0.0.0	person	4-5
# ::node	0.0.0.0.1	summary	0-1
# ::node	0.0.0.1	medicine	17-18
# ::node	0.0.0.1.0	exceed-01	13-14
# ::node	0.0.0.1.0.0	12	34-35
# ::node	0.0.0.1.0.0.0	temporal-quantity	35-36
# ::node	0.0.0.1.0.0.0.0	hour	35-36
# ::node	0.0.0.1.0.1	cost-01	16-17
# ::node	0.0.0.1.0.1.0	hospital	24-25
# ::node	0.0.0.1.0.1.0.0	repatriate-01	23-24
# ::node	0.0.0.1.0.1.1	final	14-15
# ::node	0.0.0.1.0.1.1.0	or	10-11
# ::node	0.0.0.2	expend-01	20-21
# ::node	0.0.0.2.0	benefit-01	25-26
# ::node	0.0.0.2.0.0	10	26-27
# ::node	0.0.0.2.1	date-entity	41-42
# ::node	0.0.0.2.1.0	1000	41-42
# ::node	0.0.0.2.2	associate-01	19-20
# ::node	0.0.1	effect-01	40-41
# ::node	0.0.1.0	200	43-44
# ::node	0.0.1.0.0	die-01	55-56
# ::node	0.0.1.0.0.0	b	56-57
# ::node	0.0.1.0.0.1	occupy-01	78-79
# ::node	0.0.1.0.0.1.0	usual	77-78
# ::node	0.0.1.0.0.1.1	permanent	72-73
# ::node	0.0.1.0.0.1.1.0	c	71-72
# ::node	0.0.1.0.0.2	200	51-52
# ::node	0.0.1.0.0.2.0	accident	53-54
# ::node	0.0.1.0.0.2.0.0	limit-01	42-43
# ::node	0.0.1.0.0.2.0.0.0	50000	21-22
# ::node	0.0.1.0.0.2.0.0.1	maximum	29-30
# ::node	0.0.1.0.0.2.0.0.1.0	day	28-29
# ::node	0.0.1.0.0.2.0.0.1.0.0	after	33-34
# ::node	0.0.1.0.0.2.0.1	personal	52-53
# ::node	0.0.1.1	and	46-47
# ::node	0.0.1.1.0	money	50-51
# ::node	0.0.1.1.0.0	any	47-48
# ::node	0.0.1.1.0.1	article	49-50
# ::node	0.0.1.2	75	36-37
# ::node	0.0.1.3	personal	39-40
# ::node	0.1	or	65-66
# ::node	0.1.0	limb	67-68
# ::node	0.1.0.0	use-01	62-63
# ::node	0.1.0.0.0	or	58-59
# ::node	0.1.0.0.1	provide-01	82-83
# ::node	0.1.0.0.1.0	b	84-85
# ::node	0.1.0.0.1.0.0	above	85-86
# ::node	0.1.0.0.1.1	other	79-80
# ::node	0.1.0.1	or	68-69
# ::node	0.1.0.1.0	eye	69-70
# ::node	0.1.0.2	15000	70-71
# ::node	0.2	200	30-31
# ::root	0	delay-01
# ::edge	above	mod	b	0.1.0.0.1.0.0	0.1.0.0.1.0	
# ::edge	accident	mod	personal	0.0.1.0.0.2.0	0.0.1.0.0.2.0.1	
# ::edge	accident	quant	200	0.0.1.0.0.2.0	0.0.1.0.0.2	
# ::edge	after	op1	day	0.0.1.0.0.2.0.0.1.0.0	0.0.1.0.0.2.0.0.1.0	
# ::edge	and	op1	and	0.0	0.0.0	
# ::edge	and	op1	medicine	0.0.0	0.0.0.1	
# ::edge	and	op1	money	0.0.1.1	0.0.1.1.0	
# ::edge	and	op2	effect-01	0.0	0.0.1	
# ::edge	and	op2	expend-01	0.0.0	0.0.0.2	
# ::edge	associate-01	ARG1	expend-01	0.0.0.2.2	0.0.0.2	
# ::edge	benefit-01	ARG0	and	0.0.0.0	0.0.0	
# ::edge	benefit-01	ARG0	expend-01	0.0.0.2.0	0.0.0.2	
# ::edge	benefit-01	ARG1	10	0.0.0.2.0	0.0.0.2.0.0	
# ::edge	benefit-01	ARG1	person	0.0.0.0	0.0.0.0.0	
# ::edge	cost-01	ARG1	hospital	0.0.0.1.0.1	0.0.0.1.0.1.0	
# ::edge	cost-01	mod	final	0.0.0.1.0.1	0.0.0.1.0.1.1	
# ::edge	date-entity	year	1000	0.0.0.2.1	0.0.0.2.1.0	
# ::edge	delay-01	ARG1	and	0	0.0	
# ::edge	delay-01	quant	200	0	0.2	
# ::edge	die-01	ARG1	b	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	die-01	ARG2	occupy-01	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	die-01	mod	200	0.0.1.0.0	0.0.1.0	
# ::edge	die-01	quant	200	0.0.1.0.0	0.0.1.0.0.2	
# ::edge	effect-01	ARG0	200	0.0.1	0.0.1.0	
# ::edge	effect-01	ARG1	and	0.0.1	0.0.1.1	
# ::edge	effect-01	ARG2	75	0.0.1	0.0.1.2	
# ::edge	effect-01	mod	personal	0.0.1	0.0.1.3	
# ::edge	exceed-01	ARG0	12	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	exceed-01	ARG1	cost-01	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	exceed-01	ARG2	medicine	0.0.0.1.0	0.0.0.1	
# ::edge	expend-01	ARG1	date-entity	0.0.0.2	0.0.0.2.1	
# ::edge	insure-02	ARG1	person	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	insure-02	ARG2	person	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	limb	quant	15000	0.1.0	0.1.0.2	
# ::edge	limit-01	ARG1	50000	0.0.1.0.0.2.0.0	0.0.1.0.0.2.0.0.0	
# ::edge	limit-01	ARG3	accident	0.0.1.0.0.2.0.0	0.0.1.0.0.2.0	
# ::edge	maximum	mod	day	0.0.1.0.0.2.0.0.1	0.0.1.0.0.2.0.0.1.0	
# ::edge	maximum	op1	limit-01	0.0.1.0.0.2.0.0.1	0.0.1.0.0.2.0.0	
# ::edge	money	mod	any	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	money	mod	article	0.0.1.1.0	0.0.1.1.0.1	
# ::edge	occupy-01	ARG0	usual	0.0.1.0.0.1	0.0.1.0.0.1.0	
# ::edge	occupy-01	ARG1	permanent	0.0.1.0.0.1	0.0.1.0.0.1.1	
# ::edge	or	op1	delay-01	0.1	0	
# ::edge	or	op1	final	0.0.0.1.0.1.1.0	0.0.0.1.0.1.1	
# ::edge	or	op1	limb	0.1.0.1	0.1.0	
# ::edge	or	op2	eye	0.1.0.1	0.1.0.1.0	
# ::edge	or	op2	limb	0.1	0.1.0	
# ::edge	permanent	mod	c	0.0.1.0.0.1.1	0.0.1.0.0.1.1.0	
# ::edge	provide-01	ARG0	b	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	provide-01	ARG1	other	0.1.0.0.1	0.1.0.0.1.1	
# ::edge	provide-01	purpose	use-01	0.1.0.0.1	0.1.0.0	
# ::edge	repatriate-01	ARG0	hospital	0.0.0.1.0.1.0.0	0.0.0.1.0.1.0	
# ::edge	summary	topic	benefit-01	0.0.0.0.1	0.0.0.0	
# ::edge	temporal-quantity	quant	12	0.0.0.1.0.0.0	0.0.0.1.0.0	
# ::edge	temporal-quantity	unit	hour	0.0.0.1.0.0.0	0.0.0.1.0.0.0.0	
# ::edge	use-01	ARG0	limb	0.1.0.0	0.1.0	
# ::edge	use-01	example	or	0.1.0.0	0.1.0.0.0	
(d3 / delay-01 
      :ARG1 (a6 / and 
            :op1 (a9 / and 
                  :ARG0-of (b4 / benefit-01 
                        :ARG1 (p5 / person 
                              :ARG2-of (i / insure-02 
                                    :ARG1 (p6 / person))) 
                        :topic-of (s / summary)) 
                  :op1 (m3 / medicine 
                        :ARG2-of (e4 / exceed-01 
                              :ARG0 (13 / 12 
                                    :quant-of (t / temporal-quantity 
                                          :unit (h / hour))) 
                              :ARG1 (c2 / cost-01 
                                    :ARG1 (h2 / hospital 
                                          :ARG0-of (r / repatriate-01)) 
                                    :mod (f / final 
                                          :op-of (o6 / or))))) 
                  :op2 (e3 / expend-01 
                        :ARG0-of (b3 / benefit-01 
                              :ARG1 10) 
                        :ARG1 (d2 / date-entity 
                              :year 1000) 
                        :ARG1-of (a8 / associate-01))) 
            :op2 (e2 / effect-01 
                  :ARG0 (22 / 200 
                        :mod-of (d / die-01 
                              :ARG1 (b2 / b) 
                              :ARG2 (o2 / occupy-01 
                                    :ARG0 (u / usual) 
                                    :ARG1 (p2 / permanent 
                                          :mod (c / c))) 
                              :quant (2 / 200 
                                    :quant-of (a2 / accident 
                                          :ARG3-of (l2 / limit-01 
                                                :ARG1 50000 
                                                :op-of (m2 / maximum 
                                                      :mod (d4 / day 
                                                            :op-of (a7 / after)))) 
                                          :mod (p3 / personal))))) 
                  :ARG1 (a5 / and 
                        :op1 (m / money 
                              :mod (a4 / any) 
                              :mod (a3 / article))) 
                  :ARG2 75 
                  :mod (p4 / personal))) 
      :op-of (o4 / or 
            :op1 (l / limb 
                  :ARG0-of (u2 / use-01 
                        :example (o5 / or) 
                        :purpose-of (p / provide-01 
                              :ARG0 (b / b 
                                    :mod-of (a / above)) 
                              :ARG1 (o / other))) 
                  :op-of (o3 / or 
                        :op1 (e / eye)) 
                  :quant 15000)) 
      :quant 200)

# ::snt otherwise a parliamentary majority was achieved more or less by accident if at all
# ::tok otherwise a parliamentary majority was achieved more or less by accident if at all
# ::alignments 13-14|0.0.2 10-11|0.0.3 8-9|0.1 7-8|0 5-6|0.0 3-4|0.0.1 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:55.971
# ::node	0	or	7-8
# ::node	0.0	achieve-01	5-6
# ::node	0.0.0	otherwise	0-1
# ::node	0.0.1	majority	3-4
# ::node	0.0.2	all	13-14
# ::node	0.0.3	accident	10-11
# ::node	0.1	less	8-9
# ::root	0	or
# ::edge	achieve-01	ARG0	otherwise	0.0	0.0.0	
# ::edge	achieve-01	ARG1	majority	0.0	0.0.1	
# ::edge	achieve-01	ARG2	or	0.0	0	
# ::edge	achieve-01	ARG3	all	0.0	0.0.2	
# ::edge	achieve-01	manner	accident	0.0	0.0.3	
# ::edge	or	op1	less	0	0.1	
(o / or 
      :ARG2-of (a3 / achieve-01 
            :ARG0 (o2 / otherwise) 
            :ARG1 (m / majority) 
            :ARG3 (a / all) 
            :manner (a2 / accident)) 
      :op1 (l / less))

# ::snt the surgeons he said are unanimous that there is no alternative to the closure of the accident and emergency department
# ::tok the surgeons he said are unanimous that there is no alternative to the closure of the accident and emergency department
# ::alignments 19-20|0.4.2 18-19|0.4.1 17-18|0.4 16-17|0.4.0 10-11|0.3 9-10|0.2 5-6|0.1.0 3-4|0 2-3|0.0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:56.086
# ::node	0	say-01	3-4
# ::node	0.0	he	2-3
# ::node	0.1	surgeon	1-2
# ::node	0.1.0	unanimous	5-6
# ::node	0.2	-	9-10
# ::node	0.3	alternative	10-11
# ::node	0.4	and	17-18
# ::node	0.4.0	accident	16-17
# ::node	0.4.1	emergency	18-19
# ::node	0.4.2	department	19-20
# ::root	0	say-01
# ::edge	alternative	op1	say-01	0.3	0	
# ::edge	and	op1	say-01	0.4	0	
# ::edge	and	op2	accident	0.4	0.4.0	
# ::edge	and	op3	emergency	0.4	0.4.1	
# ::edge	and	op4	department	0.4	0.4.2	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	surgeon	0	0.1	
# ::edge	say-01	manner	-	0	0.2	
# ::edge	surgeon	mod	unanimous	0.1	0.1.0	
(s / say-01 
      :ARG0 (h / he) 
      :ARG1 (s2 / surgeon 
            :mod (u / unanimous)) 
      :manner (- / -) 
      :op-of (a3 / alternative) 
      :op-of (a / and 
            :op1 (a2 / accident) 
            :op2 (e / emergency) 
            :op3 (d / department)))

# ::snt the case was adjourned at lunchtime until monday after victoria sharp junior counsel to mr rampton was injured in an accident while crossing the road outside the law courts
# ::tok the case was adjourned at lunchtime until monday after victoria sharp junior counsel to mr rampton was injured in an accident while crossing the road outside the law courts
# ::alignments 28-29|0.1.0.1.1 27-28|0.1.0.1.1.0 25-26|0.1.0.1 24-25|0.1.0.1.0 22-23|0.1.0.1.0.0 20-21|0.1.0.0 17-18|0.1.0 12-13|0.1.0.1.0.0.0 11-12|0.1.0.1.0.0.0.1 10-11|0.1.0.1.0.0.0.0 8-9|0.1 6-7|0.2 5-6|0.3 3-4|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:56.247
# ::node	0	adjourn-01	3-4
# ::node	0.0	case	1-2
# ::node	0.1	after	8-9
# ::node	0.1.0	injure-01	17-18
# ::node	0.1.0.0	accident	20-21
# ::node	0.1.0.1	outside	25-26
# ::node	0.1.0.1.0	road	24-25
# ::node	0.1.0.1.0.0	cross-02	22-23
# ::node	0.1.0.1.0.0.0	counsel-01	12-13
# ::node	0.1.0.1.0.0.0.0	sharp	10-11
# ::node	0.1.0.1.0.0.0.1	junior	11-12
# ::node	0.1.0.1.1	court	28-29
# ::node	0.1.0.1.1.0	law	27-28
# ::node	0.2	until	6-7
# ::node	0.3	lunch-01	5-6
# ::root	0	adjourn-01
# ::edge	adjourn-01	ARG1	case	0	0.0	
# ::edge	adjourn-01	time	after	0	0.1	
# ::edge	adjourn-01	time	lunch-01	0	0.3	
# ::edge	adjourn-01	time	until	0	0.2	
# ::edge	after	op1	injure-01	0.1	0.1.0	
# ::edge	counsel-01	mod	junior	0.1.0.1.0.0.0	0.1.0.1.0.0.0.1	
# ::edge	counsel-01	mod	sharp	0.1.0.1.0.0.0	0.1.0.1.0.0.0.0	
# ::edge	court	mod	law	0.1.0.1.1	0.1.0.1.1.0	
# ::edge	cross-02	ARG0	counsel-01	0.1.0.1.0.0	0.1.0.1.0.0.0	
# ::edge	cross-02	ARG1	road	0.1.0.1.0.0	0.1.0.1.0	
# ::edge	injure-01	ARG1	accident	0.1.0	0.1.0.0	
# ::edge	injure-01	time	outside	0.1.0	0.1.0.1	
# ::edge	outside	op1	court	0.1.0.1	0.1.0.1.1	
# ::edge	road	location	outside	0.1.0.1.0	0.1.0.1	
(a3 / adjourn-01 
      :ARG1 (c4 / case) 
      :time (a2 / after 
            :op1 (i / injure-01 
                  :ARG1 (a / accident) 
                  :time (o / outside 
                        :location-of (r / road 
                              :ARG1-of (c2 / cross-02 
                                    :ARG0 (c3 / counsel-01 
                                          :mod (s / sharp) 
                                          :mod (j / junior)))) 
                        :op1 (c / court 
                              :mod (l / law))))) 
      :time (u / until) 
      :time (l2 / lunch-01))

# ::snt mr edward keith 41 his wife janet 35 and their children rebecca 8 sarah 5 and michael 2 were all taken to the horton general hospital following the accident at the junction of the a423 and the b4030 bicester to eynstone road
# ::tok mr edward keith 41 his wife janet 35 and their children rebecca 8 sarah 5 and michael 2 were all taken to the horton general hospital following the accident at the junction of the a423 and the b4030 bicester to eynstone road
# ::alignments 41-42|0.0.3.0 35-36|0.0 28-29|0.0.0 25-26|0.0.0.0.3 24-25|0.0.0.0.3.0 19-20|0.0.3 17-18|0.0.0.0.4 15-16|0 14-15|0.0.1.0.0 12-13|0.0.2 10-11|0.0.1.0 8-9|0.0.1 7-8|0.0.0.0.2 5-6|0.0.0.0.1+0.0.0.0 3-4|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:56.806
# ::node	0	and	15-16
# ::node	0.0	and	35-36
# ::node	0.0.0	accident	28-29
# ::node	0.0.0.0	have-rel-role-91	5-6
# ::node	0.0.0.0.0	41	3-4
# ::node	0.0.0.0.1	wife	5-6
# ::node	0.0.0.0.2	35	7-8
# ::node	0.0.0.0.3	hospital	25-26
# ::node	0.0.0.0.3.0	general	24-25
# ::node	0.0.0.0.4	2	17-18
# ::node	0.0.1	and	8-9
# ::node	0.0.1.0	child	10-11
# ::node	0.0.1.0.0	5	14-15
# ::node	0.0.2	8	12-13
# ::node	0.0.3	all	19-20
# ::node	0.0.3.0	road	41-42
# ::root	0	and
# ::edge	2	op1	have-rel-role-91	0.0.0.0.4	0.0.0.0	
# ::edge	5	op1	child	0.0.1.0.0	0.0.1.0	
# ::edge	accident	example	and	0.0.0	0.0	
# ::edge	accident	op1	have-rel-role-91	0.0.0	0.0.0.0	
# ::edge	and	op1	and	0	0.0	
# ::edge	and	op1	and	0.0	0.0.1	
# ::edge	and	op1	child	0.0.1	0.0.1.0	
# ::edge	and	poss	8	0.0	0.0.2	
# ::edge	and	quant	all	0.0	0.0.3	
# ::edge	have-rel-role-91	ARG1	41	0.0.0.0	0.0.0.0.0	
# ::edge	have-rel-role-91	ARG2	wife	0.0.0.0	0.0.0.0.1	
# ::edge	have-rel-role-91	ARG3	35	0.0.0.0	0.0.0.0.2	
# ::edge	hospital	mod	general	0.0.0.0.3	0.0.0.0.3.0	
# ::edge	hospital	op1	have-rel-role-91	0.0.0.0.3	0.0.0.0	
# ::edge	road	poss	all	0.0.3.0	0.0.3	
(a4 / and 
      :op1 (a / and 
            :example-of (a2 / accident 
                  :op1 (h2 / have-rel-role-91 
                        :ARG1 41 
                        :ARG2 (w / wife) 
                        :ARG3 35 
                        :op-of (h / hospital 
                              :mod (g / general)) 
                        :op-of 2)) 
            :op1 (a5 / and 
                  :op1 (c / child 
                        :op-of 5)) 
            :poss 8 
            :quant (a3 / all 
                  :poss-of (r / road))))

# ::snt tax free  a serious accident could happen to you at any time dash
# ::tok tax free a serious accident could happen to you at any time dash
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:56.806
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt why did he wait nearly 10 hours after the accident to report to the police
# ::tok why did he wait nearly 10 hours after the accident to report to the police
# ::alignments 14-15|0.1.0.0.0 11-12|0.1.0.0 9-10|0.1.0 7-8|0.1 6-7|0.1.1.2+0.1.1 5-6|0.1.1.1 4-5|0.1.1.0 3-4|0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:56.843
# ::node	0	wait-01	3-4
# ::node	0.0	he	2-3
# ::node	0.1	after	7-8
# ::node	0.1.0	accident	9-10
# ::node	0.1.0.0	report	11-12
# ::node	0.1.0.0.0	police	14-15
# ::node	0.1.1	temporal-quantity	6-7
# ::node	0.1.1.0	nearly	4-5
# ::node	0.1.1.1	10	5-6
# ::node	0.1.1.2	hour	6-7
# ::root	0	wait-01
# ::edge	accident	mod	report	0.1.0	0.1.0.0	
# ::edge	after	op1	accident	0.1	0.1.0	
# ::edge	after	quant	temporal-quantity	0.1	0.1.1	
# ::edge	nearly	op1	temporal-quantity	0.1.1.0	0.1.1	
# ::edge	report	prep-to	police	0.1.0.0	0.1.0.0.0	
# ::edge	temporal-quantity	quant	10	0.1.1	0.1.1.1	
# ::edge	temporal-quantity	unit	hour	0.1.1	0.1.1.2	
# ::edge	wait-01	ARG1	he	0	0.0	
# ::edge	wait-01	time	after	0	0.1	
(w / wait-01 
      :ARG1 (h2 / he) 
      :time (a2 / after 
            :op1 (a / accident 
                  :mod (r / report 
                        :prep-to (p / police))) 
            :quant (t / temporal-quantity 
                  :op-of (n / nearly) 
                  :quant 10 
                  :unit (h / hour))))

# ::snt thrown among the irish by the fortunate accident of her sons marriage to one of us she treated us with the utmost courtesy and apparently without strain
# ::tok thrown among the irish by the fortunate accident of her sons marriage to one of us she treated us with the utmost courtesy and apparently without strain
# ::alignments 26-27|0 24-25|0.0.1.2.0.0.0 23-24|0.0.1.2.0.0 17-18|0.0.1.1 16-17|0.0.1.1.0 11-12|0.0.1 10-11|0.0.0+0.0 7-8|0.0.1.0 1-2|0.0.1.2 0-1|0.0.1.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:56.923
# ::node	0	strain	26-27
# ::node	0.0	have-rel-role-91	10-11
# ::node	0.0.0	son	10-11
# ::node	0.0.1	marry-01	11-12
# ::node	0.0.1.0	accident	7-8
# ::node	0.0.1.1	treat-01	17-18
# ::node	0.0.1.1.0	she	16-17
# ::node	0.0.1.2	among	1-2
# ::node	0.0.1.2.0	throw-01	0-1
# ::node	0.0.1.2.0.0	and	23-24
# ::node	0.0.1.2.0.0.0	apparent	24-25
# ::root	0	strain
(s / strain 
      :ARG1-of (h / have-rel-role-91 
            :ARG2 (s3 / son) 
            :ARG2-of (m / marry-01 
                  :ARG1 (a3 / accident) 
                  :ARG1-of (t / treat-01 
                        :ARG0 (s2 / she)) 
                  :op-of (a4 / among 
                        :ARG1-of (t2 / throw-01 
                              :op-of (a2 / and 
                                    :op1 (a / apparent)))))))

# ::snt however his fightback against a crippling injury from a hunting accident which was followed by heart surgery and a royal slap in the face over the termination of his lease brought out the traditional british championing of the underdog
# ::tok however his fightback against a crippling injury from a hunting accident which was followed by heart surgery and a royal slap in the face over the termination of his lease brought out the traditional british championing of the underdog
# ::alignments 35-36|0.0.0.0.0.0.0 33-34|0.0.1.0.0.0.0.0 29-30|0.0.0.0.0.0 26-27|0.0.0.0.0 23-24|0.0.0.0 20-21|0.1 19-20|0.1.0 17-18|0 16-17|0.0 15-16|0.0.1 13-14|0.0.0 10-11|0.0.1.0.0.0 9-10|0.0.1.0.0.0.0 6-7|0.0.1.0.0 5-6|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:06:57.152
# ::node	0	and	17-18
# ::node	0.0	surgery	16-17
# ::node	0.0.0	follow-01	13-14
# ::node	0.0.0.0	face-01	23-24
# ::node	0.0.0.0.0	terminate-01	26-27
# ::node	0.0.0.0.0.0	lease-01	29-30
# ::node	0.0.0.0.0.0.0	champion-01	35-36
# ::node	0.0.1	heart	15-16
# ::node	0.0.1.0	cripple-01	5-6
# ::node	0.0.1.0.0	injure-01	6-7
# ::node	0.0.1.0.0.0	accident	10-11
# ::node	0.0.1.0.0.0.0	hunt-01	9-10
# ::node	0.0.1.0.0.0.0.0	tradition	33-34
# ::node	0.1	slap-01	20-21
# ::node	0.1.0	royal	19-20
# ::root	0	and
# ::edge	accident	location	hunt-01	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	and	op1	surgery	0	0.0	
# ::edge	and	op2	slap-01	0	0.1	
# ::edge	cripple-01	ARG0	injure-01	0.0.1.0	0.0.1.0.0	
# ::edge	cripple-01	ARG1	heart	0.0.1.0	0.0.1	
# ::edge	face-01	ARG1	terminate-01	0.0.0.0	0.0.0.0.0	
# ::edge	follow-01	ARG1	surgery	0.0.0	0.0	
# ::edge	follow-01	time	face-01	0.0.0	0.0.0.0	
# ::edge	hunt-01	ARG1	tradition	0.0.1.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	injure-01	ARG1	accident	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	lease-01	ARG1	champion-01	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	slap-01	mod	royal	0.1	0.1.0	
# ::edge	surgery	mod	heart	0.0	0.0.1	
# ::edge	terminate-01	ARG1	lease-01	0.0.0.0.0	0.0.0.0.0.0	
(a / and 
      :op1 (s2 / surgery 
            :ARG1-of (f2 / follow-01 
                  :time (f / face-01 
                        :ARG1 (t2 / terminate-01 
                              :ARG1 (l / lease-01 
                                    :ARG1 (c / champion-01))))) 
            :mod (h / heart 
                  :ARG1-of (c2 / cripple-01 
                        :ARG0 (i / injure-01 
                              :ARG1 (a2 / accident 
                                    :location (h2 / hunt-01 
                                          :ARG1 (t / tradition))))))) 
      :op2 (s / slap-01 
            :mod (r / royal)))

# ::snt abta head of public affairs david hurst points out that the problem must be put in context out of more than 12 million package holidays sold in a good year we would regard 50 cases where the tour operator is proved to be liable following accident or injury as bad, in 1989 only 282 of the 3500 complaints we received involved accident or injury and the operator would still not be liable in most of them
# ::tok abta head of public affairs david hurst points out that the problem must be put in context out of more than 12 million package holidays sold in a good year we would regard 50 cases where the tour operator is proved to be liable following accident or injury as bad , in 1989 only 282 of the 3500 complaints we received involved accident or injury and the operator would still not be liable in most of them
# ::alignments 74-75|0.1.1.1.1.1.0 72-73|0.1.1.1.1.1 69-70|0.1.1.1.1.1.2 67-68|0.1.1.1.1.1.1.0+0.1.1.1.1.1.1 65-66|0.1.1.1.1 64-65|0.1.1.1.0.0.1.0 63-64|0.1.1.1.0.0.1 62-63|0.1.1.1.0.0.0 61-62|0.1.1.1.0.0 60-61|0.1.1.1 59-60|0.1.1.1.0 58-59|0.1.1.1.0.1 57-58|0.1.1.1.0.0.1.0.1 53-54|0.2.0.0.3 52-53|0.1.1.1.0.0.1.0.0.0+0.1.1.1.0.0.1.0.0 49-50|0.1.3.0.0.0 47-48|0.1.3 46-47|0.1.3.0 45-46|0.1.3.0.0 43-44|0 40-41|0.2 38-39|0.1.2+0.1 37-38|0.1.0 34-35|0.2.0.0.0 33-34|0.2.0.0.0.0 32-33|0.2.0.0 30-31|0.2.0 29-30|0.2.0.0.1 28-29|0.2.0.0.1.0 25-26|0.2.0.0.1.1 24-25|0.2.0.0.1.1.1 23-24|0.2.0.0.1.1.1.0 21-22|0.0 16-17|0.2.0.0.1.1.0 11-12|0.2.0.0.2 7-8|0.1.1.1.1.0 4-5|0.1.1.0 3-4|0.1.1.0.0 1-2|0.1.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:01.794
# ::node	0	liable-41	43-44
# ::node	0.0	12	21-22
# ::node	0.1	person	38-39
# ::node	0.1.0	tour-01	37-38
# ::node	0.1.1	head-01	1-2
# ::node	0.1.1.0	affair	4-5
# ::node	0.1.1.0.0	public	3-4
# ::node	0.1.1.1	receive-01	60-61
# ::node	0.1.1.1.0	we	59-60
# ::node	0.1.1.1.0.0	involve-01	61-62
# ::node	0.1.1.1.0.0.0	accident	62-63
# ::node	0.1.1.1.0.0.1	or	63-64
# ::node	0.1.1.1.0.0.1.0	injure-01	64-65
# ::node	0.1.1.1.0.0.1.0.0	date-entity	52-53
# ::node	0.1.1.1.0.0.1.0.0.0	1989	52-53
# ::node	0.1.1.1.0.0.1.0.1	3500	57-58
# ::node	0.1.1.1.0.1	complain-01	58-59
# ::node	0.1.1.1.1	and	65-66
# ::node	0.1.1.1.1.0	point	7-8
# ::node	0.1.1.1.1.1	liable-41	72-73
# ::node	0.1.1.1.1.1.0	most	74-75
# ::node	0.1.1.1.1.1.1	person	67-68
# ::node	0.1.1.1.1.1.1.0	operate-01	67-68
# ::node	0.1.1.1.1.1.2	still	69-70
# ::node	0.1.2	operate-01	38-39
# ::node	0.1.3	injure-01	47-48
# ::node	0.1.3.0	or	46-47
# ::node	0.1.3.0.0	accident	45-46
# ::node	0.1.3.0.0.0	bad	49-50
# ::node	0.2	prove-01	40-41
# ::node	0.2.0	we	30-31
# ::node	0.2.0.0	regard-01	32-33
# ::node	0.2.0.0.0	case	34-35
# ::node	0.2.0.0.0.0	50	33-34
# ::node	0.2.0.0.1	year	29-30
# ::node	0.2.0.0.1.0	good	28-29
# ::node	0.2.0.0.1.1	sell-01	25-26
# ::node	0.2.0.0.1.1.0	context	16-17
# ::node	0.2.0.0.1.1.1	holiday	24-25
# ::node	0.2.0.0.1.1.1.0	package	23-24
# ::node	0.2.0.0.2	problem	11-12
# ::node	0.2.0.0.3	only	53-54
# ::root	0	liable-41
# ::edge	accident	mod	bad	0.1.3.0.0	0.1.3.0.0.0	
# ::edge	affair	mod	public	0.1.1.0	0.1.1.0.0	
# ::edge	and	op1	point	0.1.1.1.1	0.1.1.1.1.0	
# ::edge	and	op2	receive-01	0.1.1.1.1	0.1.1.1	
# ::edge	and	op3	liable-41	0.1.1.1.1	0.1.1.1.1.1	
# ::edge	case	quant	50	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	complain-01	ARG0	we	0.1.1.1.0.1	0.1.1.1.0	
# ::edge	date-entity	year	1989	0.1.1.1.0.0.1.0.0	0.1.1.1.0.0.1.0.0.0	
# ::edge	head-01	ARG0	person	0.1.1	0.1	
# ::edge	head-01	ARG1	affair	0.1.1	0.1.1.0	
# ::edge	holiday	mod	package	0.2.0.0.1.1.1	0.2.0.0.1.1.1.0	
# ::edge	injure-01	ARG0	date-entity	0.1.1.1.0.0.1.0	0.1.1.1.0.0.1.0.0	
# ::edge	injure-01	ARG1	3500	0.1.1.1.0.0.1.0	0.1.1.1.0.0.1.0.1	
# ::edge	injure-01	ARG1	person	0.1.3	0.1	
# ::edge	involve-01	ARG0	we	0.1.1.1.0.0	0.1.1.1.0	
# ::edge	involve-01	ARG1	accident	0.1.1.1.0.0	0.1.1.1.0.0.0	
# ::edge	liable-41	ARG0	12	0	0.0	
# ::edge	liable-41	ARG0	most	0.1.1.1.1.1	0.1.1.1.1.1.0	
# ::edge	liable-41	ARG1	person	0	0.1	
# ::edge	liable-41	ARG1	person	0.1.1.1.1.1	0.1.1.1.1.1.1	
# ::edge	liable-41	time	still	0.1.1.1.1.1	0.1.1.1.1.1.2	
# ::edge	only	op1	regard-01	0.2.0.0.3	0.2.0.0	
# ::edge	operate-01	ARG0	person	0.1.1.1.1.1.1.0	0.1.1.1.1.1.1	
# ::edge	operate-01	ARG0	person	0.1.2	0.1	
# ::edge	or	op1	accident	0.1.3.0	0.1.3.0.0	
# ::edge	or	op1	involve-01	0.1.1.1.0.0.1	0.1.1.1.0.0	
# ::edge	or	op2	injure-01	0.1.1.1.0.0.1	0.1.1.1.0.0.1.0	
# ::edge	or	op2	injure-01	0.1.3.0	0.1.3	
# ::edge	problem	op1	regard-01	0.2.0.0.2	0.2.0.0	
# ::edge	prove-01	ARG0	we	0.2	0.2.0	
# ::edge	prove-01	ARG1	liable-41	0.2	0	
# ::edge	receive-01	ARG0	we	0.1.1.1	0.1.1.1.0	
# ::edge	receive-01	ARG1	head-01	0.1.1.1	0.1.1	
# ::edge	regard-01	ARG0	we	0.2.0.0	0.2.0	
# ::edge	regard-01	ARG1	case	0.2.0.0	0.2.0.0.0	
# ::edge	regard-01	manner	year	0.2.0.0	0.2.0.0.1	
# ::edge	sell-01	ARG0	context	0.2.0.0.1.1	0.2.0.0.1.1.0	
# ::edge	sell-01	ARG1	holiday	0.2.0.0.1.1	0.2.0.0.1.1.1	
# ::edge	sell-01	time	year	0.2.0.0.1.1	0.2.0.0.1	
# ::edge	tour-01	ARG0	person	0.1.0	0.1	
# ::edge	year	mod	good	0.2.0.0.1	0.2.0.0.1.0	
(l2 / liable-41 
      :ARG0 12 
      :ARG1 (p3 / person 
            :ARG0-of (t / tour-01) 
            :ARG0-of (h2 / head-01 
                  :ARG1 (a4 / affair 
                        :mod (p7 / public)) 
                  :ARG1-of (r / receive-01 
                        :ARG0 (w / we 
                              :ARG0-of (i2 / involve-01 
                                    :ARG1 (a2 / accident) 
                                    :op-of (o2 / or 
                                          :op1 (i / injure-01 
                                                :ARG0 (d / date-entity 
                                                      :year 1989) 
                                                :ARG1 3500))) 
                              :ARG0-of (c / complain-01)) 
                        :op-of (a / and 
                              :op1 (p6 / point) 
                              :op2 (l / liable-41 
                                    :ARG0 (m / most) 
                                    :ARG1 (p / person 
                                          :ARG0-of (o / operate-01)) 
                                    :time (s / still))))) 
            :ARG0-of (o5 / operate-01) 
            :ARG1-of (i3 / injure-01 
                  :op-of (o4 / or 
                        :op1 (a3 / accident 
                              :mod (b / bad))))) 
      :ARG1-of (p2 / prove-01 
            :ARG0 (w2 / we 
                  :ARG0-of (r2 / regard-01 
                        :ARG1 (c2 / case 
                              :quant 50) 
                        :manner (y / year 
                              :mod (g / good) 
                              :time-of (s2 / sell-01 
                                    :ARG0 (c3 / context) 
                                    :ARG1 (h / holiday 
                                          :mod (p4 / package)))) 
                        :op-of (p5 / problem) 
                        :op-of (o3 / only)))))

# ::snt up to 40000 payable to your estate if you should die  following an accident, plus up to 80 payable for every day you are in hospital  due to an accident for any length of time from one day up to  100 days, to provide an even higher level of protection for our customers we will double the amount payable on death after an accident if both husband and wife die as the result of the same accident
# ::tok up to 40000 payable to your estate if you should die following an accident , plus up to 80 payable for every day you are in hospital due to an accident for any length of time from one day up to 100 days , to provide an even higher level of protection for our customers we will double the amount payable on death after an accident if both husband and wife die as the result of the same accident
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:01.795
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt  the new charity said 14 people were killed and 1000 injured every day on the roads every accident costs an average of 20185 dash
# ::tok the new charity said 14 people were killed and 1000 injured every day on the roads every accident costs an average of 20185 dash
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:01.796
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt it is a kind of modern serfdom all are tied usually by the accident of birth to the national abstraction
# ::tok it is a kind of modern serfdom all are tied usually by the accident of birth to the national abstraction
# ::alignments 18-19|0.1.0.1 15-16|0.1.0 13-14|0.1 10-11|0.2 9-10|0 7-8|0.0 5-6|0.1.0.0 3-4|0.1.0.2 0-1|0.1.0.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:01.900
# ::node	0	tie-01	9-10
# ::node	0.0	all	7-8
# ::node	0.1	accident	13-14
# ::node	0.1.0	birth-01	15-16
# ::node	0.1.0.0	modern	5-6
# ::node	0.1.0.1	nation	18-19
# ::node	0.1.0.2	kind	3-4
# ::node	0.1.0.3	it	0-1
# ::node	0.2	usual	10-11
# ::root	0	tie-01
# ::edge	accident	topic	birth-01	0.1	0.1.0	
# ::edge	birth-01	ARG0	modern	0.1.0	0.1.0.0	
# ::edge	birth-01	ARG1	nation	0.1.0	0.1.0.1	
# ::edge	it	op1	birth-01	0.1.0.3	0.1.0	
# ::edge	kind	op1	birth-01	0.1.0.2	0.1.0	
# ::edge	tie-01	ARG1	all	0	0.0	
# ::edge	tie-01	duration	accident	0	0.1	
# ::edge	tie-01	mod	usual	0	0.2	
(t / tie-01 
      :ARG1 (a2 / all) 
      :duration (a / accident 
            :topic (b / birth-01 
                  :ARG0 (m / modern) 
                  :ARG1 (n / nation) 
                  :op-of (k / kind) 
                  :op-of (i / it))) 
      :mod (u / usual))

# ::snt whats more when you charge your travel tickets to the card  youll automatically receive up to 75000 travel accident  insurance at no extra cost
# ::tok whats more when you charge your travel tickets to the card youll automatically receive up to 75000 travel accident insurance at no extra cost
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:01.901
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the attempt happened more or less by accident
# ::tok the attempt happened more or less by accident
# ::alignments 7-8|0.0.1 5-6|0.1 4-5|0 2-3|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:01.911
# ::node	0	or	4-5
# ::node	0.0	happen-01	2-3
# ::node	0.0.0	attempt-01	1-2
# ::node	0.0.1	accident	7-8
# ::node	0.1	less	5-6
# ::root	0	or
# ::edge	happen-01	ARG1	attempt-01	0.0	0.0.0	
# ::edge	happen-01	time	accident	0.0	0.0.1	
# ::edge	or	op1	happen-01	0	0.0	
# ::edge	or	op2	less	0	0.1	
(o / or 
      :op1 (h / happen-01 
            :ARG1 (a2 / attempt-01) 
            :time (a / accident)) 
      :op2 (l / less))

# ::snt there is also cover for legal fees for personal injury suffered in an accident, however the pursuit of an accident claim as a car driver is excluded
# ::tok there is also cover for legal fees for personal injury suffered in an accident , however the pursuit of an accident claim as a car driver is excluded
# ::alignments 27-28|0.1 25-26|0.1.0.0+0.1.0 24-25|0.1.0.0.0 21-22|0 20-21|0.0 17-18|0.2 13-14|0.1.1.0 10-11|0.1.1 9-10|0.1.1.1 8-9|0.1.1.1.1 6-7|0.1.1.1.0 5-6|0.1.1.1.0.0 2-3|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:02.157
# ::node	0	claim-01	21-22
# ::node	0.0	accident	20-21
# ::node	0.1	exclude-01	27-28
# ::node	0.1.0	person	25-26
# ::node	0.1.0.0	drive-01	25-26
# ::node	0.1.0.0.0	car	24-25
# ::node	0.1.1	suffer-01	10-11
# ::node	0.1.1.0	accident	13-14
# ::node	0.1.1.1	injure-01	9-10
# ::node	0.1.1.1.0	fee	6-7
# ::node	0.1.1.1.0.0	legal	5-6
# ::node	0.1.1.1.1	personal	8-9
# ::node	0.2	pursue-01	17-18
# ::node	0.2.0	also	2-3
# ::root	0	claim-01
# ::edge	claim-01	ARG0	accident	0	0.0	
# ::edge	claim-01	ARG1	exclude-01	0	0.1	
# ::edge	drive-01	ARG0	person	0.1.0.0	0.1.0	
# ::edge	drive-01	ARG1	car	0.1.0.0	0.1.0.0.0	
# ::edge	exclude-01	ARG1	person	0.1	0.1.0	
# ::edge	fee	mod	legal	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	injure-01	consist	fee	0.1.1.1	0.1.1.1.0	
# ::edge	injure-01	mod	personal	0.1.1.1	0.1.1.1.1	
# ::edge	pursue-01	ARG0	also	0.2	0.2.0	
# ::edge	pursue-01	ARG1	claim-01	0.2	0	
# ::edge	suffer-01	ARG0	accident	0.1.1	0.1.1.0	
# ::edge	suffer-01	ARG1	injure-01	0.1.1	0.1.1.1	
# ::edge	suffer-01	time	exclude-01	0.1.1	0.1	
(c2 / claim-01 
      :ARG0 (a / accident) 
      :ARG1 (e / exclude-01 
            :ARG1 (p / person 
                  :ARG0-of (d / drive-01 
                        :ARG1 (c / car))) 
            :time-of (s / suffer-01 
                  :ARG0 (a2 / accident) 
                  :ARG1 (i / injure-01 
                        :consist (f / fee 
                              :mod (l / legal)) 
                        :mod (p3 / personal)))) 
      :ARG1-of (p2 / pursue-01 
            :ARG0 (a3 / also)))

# ::snt paul jenkins 33 from bridgend has been unable to use his legs and only partly move his arms since a motorbike accident 10 years ago but after nearly 30 visits to the special unit at rookwood hospital in cardiff and seven artificial inseminations his wife jayne gave birth to a daughter
# ::tok paul jenkins 33 from bridgend has been unable to use his legs and only partly move his arms since a motorbike accident 10 years ago but after nearly 30 visits to the special unit at rookwood hospital in cardiff and seven artificial inseminations his wife jayne gave birth to a daughter
# ::alignments 50-51|0.1.1.2.2+0.1.1.2 47-48|0.1.1.2.1 44-45|0.1.1.2.1.1.0+0.1.1.2.1.1 41-42|0.0 40-41|0.1.1.1.2 39-40|0.1.1.1.0.0 36-37|0.1.1.1.0 33-34|0.1.1.1 32-33|0.1.1.1.1 29-30|0.1.1 28-29|0.1.1.2.0 27-28|0.1.1.3 26-27|0.1 25-26|0 23-24|0.1.1.2.1.0.1+0.1.1.2.1.0 22-23|0.1.1.2.1.0.0 21-22|0.1.1.0.0 18-19|0.1.1.0 17-18|0.1.1.0.1 14-15|0.1.0.0.1.0.0 13-14|0.1.0.0.1.0 12-13|0.1.0 11-12|0.1.0.0.1 9-10|0.1.0.0 2-3|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:03.192
# ::node	0	contrast-01	25-26
# ::node	0.0	artificial	41-42
# ::node	0.1	after	26-27
# ::node	0.1.0	and	12-13
# ::node	0.1.0.0	use-01	9-10
# ::node	0.1.0.0.0	33	2-3
# ::node	0.1.0.0.1	leg	11-12
# ::node	0.1.0.0.1.0	only	13-14
# ::node	0.1.0.0.1.0.0	partly	14-15
# ::node	0.1.1	visit-01	29-30
# ::node	0.1.1.0	since	18-19
# ::node	0.1.1.0.0	accident	21-22
# ::node	0.1.1.0.1	arm	17-18
# ::node	0.1.1.1	unit	33-34
# ::node	0.1.1.1.0	hospital	36-37
# ::node	0.1.1.1.0.0	and	39-40
# ::node	0.1.1.1.1	special	32-33
# ::node	0.1.1.1.2	7	40-41
# ::node	0.1.1.2	have-rel-role-91	50-51
# ::node	0.1.1.2.0	30	28-29
# ::node	0.1.1.2.1	birth-01	47-48
# ::node	0.1.1.2.1.0	temporal-quantity	23-24
# ::node	0.1.1.2.1.0.0	10	22-23
# ::node	0.1.1.2.1.0.1	year	23-24
# ::node	0.1.1.2.1.1	have-rel-role-91	44-45
# ::node	0.1.1.2.1.1.0	wife	44-45
# ::node	0.1.1.2.2	daughter	50-51
# ::node	0.1.1.3	nearly	27-28
# ::root	0	contrast-01
# ::edge	after	op1	visit-01	0.1	0.1.1	
# ::edge	and	op1	use-01	0.1.0	0.1.0.0	
# ::edge	and	op2	after	0.1.0	0.1	
# ::edge	arm	time	since	0.1.1.0.1	0.1.1.0	
# ::edge	birth-01	ARG0	temporal-quantity	0.1.1.2.1	0.1.1.2.1.0	
# ::edge	birth-01	ARG1	have-rel-role-91	0.1.1.2.1	0.1.1.2	
# ::edge	contrast-01	ARG0	artificial	0	0.0	
# ::edge	contrast-01	ARG1	after	0	0.1	
# ::edge	have-rel-role-91	ARG0	30	0.1.1.2	0.1.1.2.0	
# ::edge	have-rel-role-91	ARG1	birth-01	0.1.1.2.1.1	0.1.1.2.1	
# ::edge	have-rel-role-91	ARG1	visit-01	0.1.1.2	0.1.1	
# ::edge	have-rel-role-91	ARG2	daughter	0.1.1.2	0.1.1.2.2	
# ::edge	have-rel-role-91	ARG2	wife	0.1.1.2.1.1	0.1.1.2.1.1.0	
# ::edge	hospital	topic	and	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	only	mod	leg	0.1.0.0.1.0	0.1.0.0.1	
# ::edge	partly	mod	only	0.1.0.0.1.0.0	0.1.0.0.1.0	
# ::edge	since	op1	accident	0.1.1.0	0.1.1.0.0	
# ::edge	temporal-quantity	quant	10	0.1.1.2.1.0	0.1.1.2.1.0.0	
# ::edge	temporal-quantity	unit	year	0.1.1.2.1.0	0.1.1.2.1.0.1	
# ::edge	unit	location	hospital	0.1.1.1	0.1.1.1.0	
# ::edge	unit	mod	special	0.1.1.1	0.1.1.1.1	
# ::edge	unit	quant	7	0.1.1.1	0.1.1.1.2	
# ::edge	use-01	ARG0	33	0.1.0.0	0.1.0.0.0	
# ::edge	use-01	ARG1	leg	0.1.0.0	0.1.0.0.1	
# ::edge	visit-01	ARG0	since	0.1.1	0.1.1.0	
# ::edge	visit-01	ARG1	unit	0.1.1	0.1.1.1	
# ::edge	visit-01	quant	nearly	0.1.1	0.1.1.3	
(c / contrast-01 
      :ARG0 (a / artificial) 
      :ARG1 (a3 / after 
            :op-of (a6 / and 
                  :op1 (u2 / use-01 
                        :ARG0 33 
                        :ARG1 (l / leg 
                              :mod-of (o / only 
                                    :mod-of (p / partly))))) 
            :op1 (v / visit-01 
                  :ARG0 (s2 / since 
                        :op1 (a4 / accident) 
                        :time-of (a5 / arm)) 
                  :ARG1 (u / unit 
                        :location (h3 / hospital 
                              :topic (a2 / and)) 
                        :mod (s / special) 
                        :quant 7) 
                  :ARG1-of (h / have-rel-role-91 
                        :ARG0 30 
                        :ARG1-of (b / birth-01 
                              :ARG0 (t / temporal-quantity 
                                    :quant 10 
                                    :unit (y / year)) 
                              :ARG1-of (h2 / have-rel-role-91 
                                    :ARG2 (w / wife))) 
                        :ARG2 (d / daughter)) 
                  :quant (n / nearly))))

# ::snt he told me that rospa the national road safety organisation had stated that in 70 per cent of accidents involving motorbikes the riders were not primarily at fault
# ::tok he told me that rospa the national road safety organisation had stated that in 70 per cent of accidents involving motorbikes the riders were not primarily at fault
# ::alignments 27-28|0.1.0 25-26|0.0 19-20|0.1.1.1 18-19|0.1.1.0 16-17|0.1.1.1.0.0+0.1.1.1.0 14-15|0.1.1.1.1 11-12|0 9-10|0.1 8-9|0.1.1 7-8|0.1.1.2 6-7|0.1.2 1-2|0.2 0-1|0.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:03.722
# ::node	0	state-01	11-12
# ::node	0.0	primary	25-26
# ::node	0.1	organize-01	9-10
# ::node	0.1.0	fault-01	27-28
# ::node	0.1.1	safe-41	8-9
# ::node	0.1.1.0	accident	18-19
# ::node	0.1.1.1	involve-01	19-20
# ::node	0.1.1.1.0	monetary-quantity	16-17
# ::node	0.1.1.1.0.0	cent	16-17
# ::node	0.1.1.1.1	70	14-15
# ::node	0.1.1.2	road	7-8
# ::node	0.1.2	nation	6-7
# ::node	0.2	tell-01	1-2
# ::node	0.2.0	he	0-1
# ::root	0	state-01
# ::edge	involve-01	ARG0	monetary-quantity	0.1.1.1	0.1.1.1.0	
# ::edge	involve-01	ARG1	70	0.1.1.1	0.1.1.1.1	
# ::edge	involve-01	ARG2	safe-41	0.1.1.1	0.1.1	
# ::edge	monetary-quantity	unit	cent	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	organize-01	ARG1	fault-01	0.1	0.1.0	
# ::edge	organize-01	ARG2	safe-41	0.1	0.1.1	
# ::edge	organize-01	mod	nation	0.1	0.1.2	
# ::edge	safe-41	ARG1	accident	0.1.1	0.1.1.0	
# ::edge	safe-41	mod	road	0.1.1	0.1.1.2	
# ::edge	state-01	ARG0	primary	0	0.0	
# ::edge	state-01	ARG1	organize-01	0	0.1	
# ::edge	tell-01	ARG0	he	0.2	0.2.0	
# ::edge	tell-01	ARG1	state-01	0.2	0	
(s / state-01 
      :ARG0 (p / primary) 
      :ARG1 (o / organize-01 
            :ARG1 (f / fault-01) 
            :ARG2 (s2 / safe-41 
                  :ARG1 (a / accident) 
                  :ARG2-of (i / involve-01 
                        :ARG0 (m / monetary-quantity 
                              :unit (c / cent)) 
                        :ARG1 70) 
                  :mod (r / road)) 
            :mod (n / nation)) 
      :ARG1-of (t / tell-01 
            :ARG0 (h / he)))

# ::snt the accident that happened there has now been cleared off the carriageway
# ::tok the accident that happened there has now been cleared off the carriageway
# ::alignments 9-10|0.1 8-9|0 6-7|0.2 3-4|0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:03.737
# ::node	0	clear-01	8-9
# ::node	0.0	accident	1-2
# ::node	0.0.0	happen-01	3-4
# ::node	0.1	off	9-10
# ::node	0.2	now	6-7
# ::root	0	clear-01
# ::edge	clear-01	ARG0	accident	0	0.0	
# ::edge	clear-01	direction	off	0	0.1	
# ::edge	clear-01	time	now	0	0.2	
# ::edge	happen-01	ARG0	accident	0.0.0	0.0	
(c / clear-01 
      :ARG0 (a / accident 
            :ARG0-of (h / happen-01)) 
      :direction (o / off) 
      :time (n / now))

# ::snt oxfordshire coroner mr nicholas gardiner recorded a verdict that miss haffner an international baccalaureate student at st clares hall banbury road died as the result of an accident
# ::tok oxfordshire coroner mr nicholas gardiner recorded a verdict that miss haffner an international baccalaureate student at st clares hall banbury road died as the result of an accident
# ::alignments 27-28|0.1 24-25|0 21-22|0.2 20-21|0.2.0 18-19|0.2.1.0.0 14-15|0.2.1.0+0.2.1 12-13|0.2.1.1 7-8|0.0.0.0 5-6|0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:03.878
# ::node	0	result-01	24-25
# ::node	0.0	coroner	1-2
# ::node	0.0.0	record-01	5-6
# ::node	0.0.0.0	verdict	7-8
# ::node	0.1	accident	27-28
# ::node	0.2	die-01	21-22
# ::node	0.2.0	road	20-21
# ::node	0.2.1	person	14-15
# ::node	0.2.1.0	study-01	14-15
# ::node	0.2.1.0.0	hall	18-19
# ::node	0.2.1.1	international	12-13
# ::root	0	result-01
# ::edge	die-01	ARG0	road	0.2	0.2.0	
# ::edge	die-01	ARG1	person	0.2	0.2.1	
# ::edge	person	mod	international	0.2.1	0.2.1.1	
# ::edge	record-01	ARG0	coroner	0.0.0	0.0	
# ::edge	record-01	ARG1	verdict	0.0.0	0.0.0.0	
# ::edge	result-01	ARG0	coroner	0	0.0	
# ::edge	result-01	ARG1	accident	0	0.1	
# ::edge	result-01	ARG2	die-01	0	0.2	
# ::edge	study-01	ARG0	person	0.2.1.0	0.2.1	
# ::edge	study-01	ARG1	hall	0.2.1.0	0.2.1.0.0	
(r / result-01 
      :ARG0 (c / coroner 
            :ARG0-of (r3 / record-01 
                  :ARG1 (v / verdict))) 
      :ARG1 (a / accident) 
      :ARG2 (d / die-01 
            :ARG0 (r2 / road) 
            :ARG1 (p / person 
                  :ARG0-of (s / study-01 
                        :ARG1 (h / hall)) 
                  :mod (i / international))))

# ::snt she said during the past few years there has been one fatal accident and a number of serious incidents at the junction and im very worried that there may be more in the future if something is not done quickly
# ::tok she said during the past few years there has been one fatal accident and a number of serious incidents at the junction and im very worried that there may be more in the future if something is not done quickly
# ::alignments 39-40|0.1.0.0.1 35-36|0.1.0.1.1.0 33-34|0.1.0.1.1 28-29|0.2.0+0.2 25-26|0.1.0.1 24-25|0.1.0.1.2 22-23|0.1.0 18-19|0.1.0.0 17-18|0.1.0.0.0 15-16|0.1.0.0.2 13-14|0.1 12-13|0.1.1 11-12|0.1.1.0 6-7|0.1.0.1.0.0+0.1.0.1.0.0.0 5-6|0.1.0.1.0.0.0.0 4-5|0.1.0.1.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:04.481
# ::node	0	say-01	1-2
# ::node	0.0	she	0-1
# ::node	0.1	and	13-14
# ::node	0.1.0	and	22-23
# ::node	0.1.0.0	incident	18-19
# ::node	0.1.0.0.0	serious	17-18
# ::node	0.1.0.0.1	quick	39-40
# ::node	0.1.0.0.2	number	15-16
# ::node	0.1.0.1	worry-02	25-26
# ::node	0.1.0.1.0	past	4-5
# ::node	0.1.0.1.0.0	year	6-7
# ::node	0.1.0.1.0.0.0	temporal-quantity	6-7
# ::node	0.1.0.1.0.0.0.0	few	5-6
# ::node	0.1.0.1.1	future	33-34
# ::node	0.1.0.1.1.0	something	35-36
# ::node	0.1.0.1.2	very	24-25
# ::node	0.1.1	accident	12-13
# ::node	0.1.1.0	fatal	11-12
# ::node	0.2	date-entity	28-29
# ::node	0.2.0	5	28-29
# ::root	0	say-01
# ::edge	accident	mod	fatal	0.1.1	0.1.1.0	
# ::edge	and	op1	accident	0.1	0.1.1	
# ::edge	and	op1	and	0.1.0	0.1	
# ::edge	and	op2	incident	0.1.0	0.1.0.0	
# ::edge	and	op3	worry-02	0.1.0	0.1.0.1	
# ::edge	date-entity	month	5	0.2	0.2.0	
# ::edge	few	op1	temporal-quantity	0.1.0.1.0.0.0.0	0.1.0.1.0.0.0	
# ::edge	future	location	something	0.1.0.1.1	0.1.0.1.1.0	
# ::edge	incident	mod	serious	0.1.0.0	0.1.0.0.0	
# ::edge	incident	quant	number	0.1.0.0	0.1.0.0.2	
# ::edge	quick	poss	incident	0.1.0.0.1	0.1.0.0	
# ::edge	say-01	ARG0	she	0	0.0	
# ::edge	say-01	ARG1	and	0	0.1	
# ::edge	say-01	time	date-entity	0	0.2	
# ::edge	temporal-quantity	unit	year	0.1.0.1.0.0.0	0.1.0.1.0.0	
# ::edge	worry-02	ARG0	past	0.1.0.1	0.1.0.1.0	
# ::edge	worry-02	ARG1	future	0.1.0.1	0.1.0.1.1	
# ::edge	worry-02	degree	very	0.1.0.1	0.1.0.1.2	
# ::edge	year	time	past	0.1.0.1.0.0	0.1.0.1.0	
(s3 / say-01 
      :ARG0 (s4 / she) 
      :ARG1 (a2 / and 
            :op-of (a / and 
                  :op1 (i / incident 
                        :mod (s2 / serious) 
                        :poss-of (q / quick) 
                        :quant (n / number)) 
                  :op2 (w / worry-02 
                        :ARG0 (p / past 
                              :time-of (y / year 
                                    :unit-of (t / temporal-quantity 
                                          :op-of (f3 / few)))) 
                        :ARG1 (f / future 
                              :location (s / something)) 
                        :degree (v / very))) 
            :op1 (a3 / accident 
                  :mod (f2 / fatal))) 
      :time (d / date-entity 
            :month 5))

# ::snt a flying instructor mr raymond witheridge and his pupil mr arthur poulton were in salisbury general infirmary with broken backs last night after a glider accident on takeoff at the old sarum airfield wiltshire
# ::tok a flying instructor mr raymond witheridge and his pupil mr arthur poulton were in salisbury general infirmary with broken backs last night after a glider accident on takeoff at the old sarum airfield wiltshire
# ::alignments 30-31|0.1.0.0.0.0 27-28|0.1 25-26|0.1.1 22-23|0.1.0.2 21-22|0.1.0 20-21|0.1.0.1 19-20|0.1.0.0 18-19|0.1.0.0.0 15-16|0.0.0 6-7|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:04.577
# ::node	0	and	6-7
# ::node	0.0	fly-01	1-2
# ::node	0.0.0	general	15-16
# ::node	0.1	take-08	27-28
# ::node	0.1.0	night	21-22
# ::node	0.1.0.0	back-04	19-20
# ::node	0.1.0.0.0	break-01	18-19
# ::node	0.1.0.0.0.0	old	30-31
# ::node	0.1.0.1	last	20-21
# ::node	0.1.0.2	after	22-23
# ::node	0.1.1	accident	25-26
# ::root	0	and
(a3 / and 
      :ARG1-of (f / fly-01 
            :ARG0 (g / general)) 
      :ARG1-of (t / take-08 
            :ARG0 (n / night 
                  :ARG1-of (b / back-04 
                        :mod (b2 / break-01 
                              :ARG1 (o / old))) 
                  :mod (l / last) 
                  :op-of (a2 / after)) 
            :topic-of (a / accident)))

# ::snt davis had been given little chance of surviving the accident in which he was struck by a car outside a suburban bar early on saturday morning, the hospital spokesman said that at the familys request daviss body remains connected to lifesupport systems to keep his organs which were not injured in the accident viable for use in transplants, police are treating the case as a normal road accident which is under investigation
# ::tok davis had been given little chance of surviving the accident in which he was struck by a car outside a suburban bar early on saturday morning , the hospital spokesman said that at the familys request daviss body remains connected to lifesupport systems to keep his organs which were not injured in the accident viable for use in transplants , police are treating the case as a normal road accident which is under investigation
# ::alignments 73-74|0.1.0.0.0.0.0.0 69-70|0.1.0.0.0.0.1.0 68-69|0.1.0.0.0.0.1.0.0 67-68|0.1.0.0.0.0.1.0.1 64-65|0.1.0.0.0.0.1 62-63|0.1.0.0.0.0 60-61|0.1.0.0.0.0.0 56-57|0.1.0.0.0 54-55|0.1.0.0.0.1 53-54|0.1.0.0.0.0.0.0.0.1 50-51|0.1.0.0.0.0.0.0.0 46-47|0.1.0.0.0.0.0.0.0.0 42-43|0.1.0.0.0.0.0.0.0.0.0 39-40|0.1.1 38-39|0.1 37-38|0.1.0 35-36|0.1.0.0 30-31|0 29-30|0.1.1.0.0.0+0.1.1.0.0 28-29|0.1.1.0 25-26|0.0.0.1 24-25|0.0.0.0.0.0.0 22-23|0.0.0.0.0.0.2 21-22|0.0.0.0.0.0 20-21|0.0.0.0.0.0.1 18-19|0.0.0.0.0 17-18|0.0.0.0 14-15|0.0.0 12-13|0.0 9-10|0.0.1 7-8|0.0.1.0 5-6|0.0.1.0.0 4-5|0.0.1.0.0.1 3-4|0.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:05.758
# ::node	0	say-01	30-31
# ::node	0.0	he	12-13
# ::node	0.0.0	strike-01	14-15
# ::node	0.0.0.0	car	17-18
# ::node	0.0.0.0.0	outside	18-19
# ::node	0.0.0.0.0.0	bar-01	21-22
# ::node	0.0.0.0.0.0.0	saturday	24-25
# ::node	0.0.0.0.0.0.1	suburb	20-21
# ::node	0.0.0.0.0.0.2	early	22-23
# ::node	0.0.0.1	morning	25-26
# ::node	0.0.1	accident	9-10
# ::node	0.0.1.0	survive-01	7-8
# ::node	0.0.1.0.0	chance	5-6
# ::node	0.0.1.0.0.0	give-01	3-4
# ::node	0.0.1.0.0.1	little	4-5
# ::node	0.1	remain-01	38-39
# ::node	0.1.0	body	37-38
# ::node	0.1.0.0	request-01	35-36
# ::node	0.1.0.0.0	use-01	56-57
# ::node	0.1.0.0.0.0	treat-03	62-63
# ::node	0.1.0.0.0.0.0	police	60-61
# ::node	0.1.0.0.0.0.0.0	investigate-01	73-74
# ::node	0.1.0.0.0.0.0.0.0	injure-01	50-51
# ::node	0.1.0.0.0.0.0.0.0.0	organ	46-47
# ::node	0.1.0.0.0.0.0.0.0.0.0	system	42-43
# ::node	0.1.0.0.0.0.0.0.0.1	accident	53-54
# ::node	0.1.0.0.0.0.1	case	64-65
# ::node	0.1.0.0.0.0.1.0	accident	69-70
# ::node	0.1.0.0.0.0.1.0.0	road	68-69
# ::node	0.1.0.0.0.0.1.0.1	normal	67-68
# ::node	0.1.0.0.0.1	viable	54-55
# ::node	0.1.1	connect-01	39-40
# ::node	0.1.1.0	hospital	28-29
# ::node	0.1.1.0.0	have-org-role-91	29-30
# ::node	0.1.1.0.0.0	spokesman	29-30
# ::root	0	say-01
# ::edge	accident	example	he	0.0.1	0.0	
# ::edge	accident	location	road	0.1.0.0.0.0.1.0	0.1.0.0.0.0.1.0.0	
# ::edge	accident	mod	normal	0.1.0.0.0.0.1.0	0.1.0.0.0.0.1.0.1	
# ::edge	bar-01	ARG1	saturday	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	bar-01	location	suburb	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	bar-01	time	early	0.0.0.0.0.0	0.0.0.0.0.0.2	
# ::edge	car	location	outside	0.0.0.0	0.0.0.0.0	
# ::edge	case	topic	accident	0.1.0.0.0.0.1	0.1.0.0.0.0.1.0	
# ::edge	chance	mod	little	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	chance	mod	survive-01	0.0.1.0.0	0.0.1.0	
# ::edge	connect-01	ARG1	hospital	0.1.1	0.1.1.0	
# ::edge	give-01	ARG1	chance	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	have-org-role-91	ARG1	hospital	0.1.1.0.0	0.1.1.0	
# ::edge	have-org-role-91	ARG2	spokesman	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	injure-01	ARG0	organ	0.1.0.0.0.0.0.0.0	0.1.0.0.0.0.0.0.0.0	
# ::edge	injure-01	ARG1	accident	0.1.0.0.0.0.0.0.0	0.1.0.0.0.0.0.0.0.1	
# ::edge	investigate-01	ARG0	police	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	investigate-01	ARG1	injure-01	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0.0.0	
# ::edge	organ	poss	system	0.1.0.0.0.0.0.0.0.0	0.1.0.0.0.0.0.0.0.0.0	
# ::edge	outside	op1	bar-01	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	remain-01	ARG1	body	0.1	0.1.0	
# ::edge	remain-01	ARG3	connect-01	0.1	0.1.1	
# ::edge	request-01	ARG1	body	0.1.0.0	0.1.0	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	remain-01	0	0.1	
# ::edge	strike-01	ARG0	he	0.0.0	0.0	
# ::edge	strike-01	ARG1	car	0.0.0	0.0.0.0	
# ::edge	strike-01	time	morning	0.0.0	0.0.0.1	
# ::edge	survive-01	ARG1	accident	0.0.1.0	0.0.1	
# ::edge	treat-03	ARG0	police	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	treat-03	ARG1	case	0.1.0.0.0.0	0.1.0.0.0.0.1	
# ::edge	treat-03	ARG2	use-01	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	use-01	ARG1	request-01	0.1.0.0.0	0.1.0.0	
# ::edge	viable	prep-in	use-01	0.1.0.0.0.1	0.1.0.0.0	
(s2 / say-01 
      :ARG0 (h3 / he 
            :ARG0-of (s6 / strike-01 
                  :ARG1 (c3 / car 
                        :location (o2 / outside 
                              :op1 (b2 / bar-01 
                                    :ARG1 (s4 / saturday) 
                                    :location (s5 / suburb) 
                                    :time (e / early)))) 
                  :time (m / morning)) 
            :example-of (a3 / accident 
                  :ARG1-of (s7 / survive-01 
                        :mod-of (c4 / chance 
                              :ARG1-of (g / give-01) 
                              :mod (l / little))))) 
      :ARG1 (r2 / remain-01 
            :ARG1 (b / body 
                  :ARG1-of (r3 / request-01 
                        :ARG1-of (u / use-01 
                              :ARG2-of (t / treat-03 
                                    :ARG0 (p / police 
                                          :ARG0-of (i / investigate-01 
                                                :ARG1 (i2 / injure-01 
                                                      :ARG0 (o / organ 
                                                            :poss (s / system)) 
                                                      :ARG1 (a2 / accident)))) 
                                    :ARG1 (c / case 
                                          :topic (a / accident 
                                                :location (r / road) 
                                                :mod (n / normal)))) 
                              :prep-in-of (v / viable)))) 
            :ARG3 (c2 / connect-01 
                  :ARG1 (h2 / hospital 
                        :ARG1-of (h / have-org-role-91 
                              :ARG2 (s3 / spokesman))))))

# ::snt you will also enjoy the reassurance of free travel accident insurance with cover worth up to 50000 for you your spouse and dependant children whenever you buy travel tickets using your rac mastercard
# ::tok you will also enjoy the reassurance of free travel accident insurance with cover worth up to 50000 for you your spouse and dependant children whenever you buy travel tickets using your rac mastercard
# ::alignments 29-30|0.0.0.0.1.0.0.0.0 28-29|0.0.0.0.1.0.0.0.0.0 27-28|0.0.0.0.1.0.0.0.0.0.0.0.0 26-27|0.0.0.0.1.0.0.0.0.0.0 25-26|0.0.0.0.1.0.0.0.0.0.0.0 24-25|0.0.0.0.1.0.0.0.0.0.0.1 23-24|0.0.0.0.1.0.1.0.0 22-23|0.0.0.0.1.0.1.0 21-22|0.0.0.0.1.0.1 20-21|0.0.0.0.1.0.0.0.1+0.0.0.0.1.0.0.0 18-19|0.0.0.0.0 16-17|0.0.0.0.1.0.0.0.0.0.0.0.0.0 13-14|0 10-11|0.0 9-10|0.0.1 8-9|0.0.0.0 7-8|0.0.0 3-4|0.0.0.0.1.0 2-3|0.0.0.0.1 0-1|0.0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:07.178
# ::node	0	worth	13-14
# ::node	0.0	insure-02	10-11
# ::node	0.0.0	free-41	7-8
# ::node	0.0.0.0	travel-01	8-9
# ::node	0.0.0.0.0	you	18-19
# ::node	0.0.0.0.1	also	2-3
# ::node	0.0.0.0.1.0	enjoy-01	3-4
# ::node	0.0.0.0.1.0.0	you	0-1
# ::node	0.0.0.0.1.0.0.0	have-rel-role-91	20-21
# ::node	0.0.0.0.1.0.0.0.0	use-01	29-30
# ::node	0.0.0.0.1.0.0.0.0.0	ticket	28-29
# ::node	0.0.0.0.1.0.0.0.0.0.0	buy-01	26-27
# ::node	0.0.0.0.1.0.0.0.0.0.0.0	you	25-26
# ::node	0.0.0.0.1.0.0.0.0.0.0.0.0	travel-01	27-28
# ::node	0.0.0.0.1.0.0.0.0.0.0.0.0.0	50000	16-17
# ::node	0.0.0.0.1.0.0.0.0.0.0.1	whenever	24-25
# ::node	0.0.0.0.1.0.0.0.1	spouse	20-21
# ::node	0.0.0.0.1.0.1	and	21-22
# ::node	0.0.0.0.1.0.1.0	depend-01	22-23
# ::node	0.0.0.0.1.0.1.0.0	child	23-24
# ::node	0.0.1	accident	9-10
# ::root	0	worth
(w2 / worth 
      :ARG1-of (i / insure-02 
            :ARG1-of (f / free-41 
                  :ARG2 (t3 / travel-01 
                        :ARG0 (y2 / you) 
                        :time (a3 / also 
                              :mod-of (e / enjoy-01 
                                    :ARG0 (y3 / you 
                                          :ARG1-of (h / have-rel-role-91 
                                                :ARG0-of (u / use-01 
                                                      :ARG1 (t / ticket 
                                                            :ARG1-of (b / buy-01 
                                                                  :ARG0 (y / you 
                                                                        :ARG0-of (t2 / travel-01 
                                                                              :ARG1 50000)) 
                                                                  :location (w / whenever)))) 
                                                :ARG2 (s / spouse))) 
                                    :ARG1 (a / and 
                                          :op1 (d / depend-01 
                                                :ARG0 (c / child))))))) 
            :ARG4 (a2 / accident)))

# ::snt a jury returned an accident verdict
# ::tok a jury returned an accident verdict
# ::alignments 5-6|0.1 4-5|0.1.0 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:07.216
# ::node	0	return-01	2-3
# ::node	0.0	jury	1-2
# ::node	0.1	verdict	5-6
# ::node	0.1.0	accident	4-5
# ::root	0	return-01
# ::edge	return-01	ARG0	jury	0	0.0	
# ::edge	return-01	ARG1	verdict	0	0.1	
# ::edge	verdict	mod	accident	0.1	0.1.0	
(r / return-01 
      :ARG0 (j / jury) 
      :ARG1 (v / verdict 
            :mod (a / accident)))

# ::snt the accident cost 167 lives, so devastating an accident was considered almost impossible and is now the subject of an inquiry before lord cullen
# ::tok the accident cost 167 lives , so devastating an accident was considered almost impossible and is now the subject of an inquiry before lord cullen
# ::alignments 23-24|0.0.0.1.0.0 22-23|0.0.0.1.1.1.0 21-22|0.0.0.1.1.1 18-19|0.0.0.1.1 16-17|0.0.0.1.1.0 14-15|0.0.0.1 12-13|0.0.0.0 11-12|0.0.0 9-10|0.0 7-8|0 6-7|0.1 4-5|0.0.0.1.2 2-3|0.0.0.1.0 1-2|0.0.0.1.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:07.373
# ::node	0	devastate-01	7-8
# ::node	0.0	accident	9-10
# ::node	0.0.0	consider-01	11-12
# ::node	0.0.0.0	almost	12-13
# ::node	0.0.0.1	and	14-15
# ::node	0.0.0.1.0	cost-01	2-3
# ::node	0.0.0.1.0.0	lord	23-24
# ::node	0.0.0.1.0.1	accident	1-2
# ::node	0.0.0.1.1	subject	18-19
# ::node	0.0.0.1.1.0	now	16-17
# ::node	0.0.0.1.1.1	inquire-01	21-22
# ::node	0.0.0.1.1.1.0	before	22-23
# ::node	0.0.0.1.2	life	4-5
# ::node	0.1	so	6-7
# ::root	0	devastate-01
# ::edge	and	op1	cost-01	0.0.0.1	0.0.0.1.0	
# ::edge	and	op2	consider-01	0.0.0.1	0.0.0	
# ::edge	and	op3	subject	0.0.0.1	0.0.0.1.1	
# ::edge	consider-01	ARG1	accident	0.0.0	0.0	
# ::edge	consider-01	manner	almost	0.0.0	0.0.0.0	
# ::edge	cost-01	ARG0	lord	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	cost-01	ARG1	accident	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	devastate-01	ARG1	accident	0	0.0	
# ::edge	devastate-01	degree	so	0	0.1	
# ::edge	inquire-01	ARG1	before	0.0.0.1.1.1	0.0.0.1.1.1.0	
# ::edge	life	poss	and	0.0.0.1.2	0.0.0.1	
# ::edge	subject	time	now	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	subject	topic	inquire-01	0.0.0.1.1	0.0.0.1.1.1	
(d / devastate-01 
      :ARG1 (a3 / accident 
            :ARG1-of (c / consider-01 
                  :manner (a2 / almost) 
                  :op-of (a / and 
                        :op1 (c2 / cost-01 
                              :ARG0 (l / lord) 
                              :ARG1 (a4 / accident)) 
                        :op2 (s / subject 
                              :time (n / now) 
                              :topic (i / inquire-01 
                                    :ARG1 (b / before))) 
                        :poss-of (l2 / life)))) 
      :degree (s2 / so))

# ::snt the problem on that road where 17 people died last year in accidents between woodstock and the warwickshire borders is that it is singlelane carriageway
# ::tok the problem on that road where 17 people died last year in accidents between woodstock and the warwickshire borders is that it is singlelane carriageway
# ::alignments 21-22|0.0.2.1.0 18-19|0.0.1 15-16|0 13-14|0.0 12-13|0.0.0 10-11|0.0.2 9-10|0.0.2.0 8-9|0.0.2.1 6-7|0.0.2.1.0.0 4-5|0.0.2.1.1 1-2|0.0.2.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:07.450
# ::node	0	and	15-16
# ::node	0.0	between	13-14
# ::node	0.0.0	accident	12-13
# ::node	0.0.1	border	18-19
# ::node	0.0.2	year	10-11
# ::node	0.0.2.0	last	9-10
# ::node	0.0.2.1	die-01	8-9
# ::node	0.0.2.1.0	it	21-22
# ::node	0.0.2.1.0.0	17	6-7
# ::node	0.0.2.1.1	road	4-5
# ::node	0.0.2.1.1.0	problem	1-2
# ::root	0	and
(a / and 
      :op-of (b2 / between 
            :mod-of (a2 / accident) 
            :op1 (b / border) 
            :time-of (y / year 
                  :mod (l / last) 
                  :time-of (d / die-01 
                        :ARG1 (i / it 
                              :poss 17) 
                        :topic-of (r / road 
                              :location-of (p / problem))))))

# ::snt turning to the exchange rate mechanism mr smith said the chancellor knew it was no accident that sir alan had struck after the blackpool conference with an article claiming arguments for british membership had never attained even a minimum level of plausibility
# ::tok turning to the exchange rate mechanism mr smith said the chancellor knew it was no accident that sir alan had struck after the blackpool conference with an article claiming arguments for british membership had never attained even a minimum level of plausibility
# ::alignments 39-40|0.0.0.0.0.0.1 38-39|0.0.0.0.0.0.1.1 35-36|0.0.0.0.0.0 32-33|0.0.0.0.0.0.0.0.0.0.0 29-30|0.0.0.0.0.0.0.0.0.0 28-29|0.0.0.0.0.0.0.0.0 27-28|0.0.0.0.0.0.0.0 24-25|0.0.0.0.0.0.0 21-22|0.0.0.0.0 20-21|0.0.0.0 15-16|0.0.0.1 14-15|0.0.0.1.0 12-13|0.0.0 11-12|0.0 8-9|0 5-6|0.1.0 4-5|0.0.1 3-4|0.0.0.0.0.0.1.0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:07.945
# ::node	0	say-01	8-9
# ::node	0.0	know-01	11-12
# ::node	0.0.0	it	12-13
# ::node	0.0.0.0	strike-01	20-21
# ::node	0.0.0.0.0	after	21-22
# ::node	0.0.0.0.0.0	attain-01	35-36
# ::node	0.0.0.0.0.0.0	conference	24-25
# ::node	0.0.0.0.0.0.0.0	article	27-28
# ::node	0.0.0.0.0.0.0.0.0	claim-01	28-29
# ::node	0.0.0.0.0.0.0.0.0.0	argue-01	29-30
# ::node	0.0.0.0.0.0.0.0.0.0.0	membership	32-33
# ::node	0.0.0.0.0.0.1	level	39-40
# ::node	0.0.0.0.0.0.1.0	exchange-01	3-4
# ::node	0.0.0.0.0.0.1.1	minimum	38-39
# ::node	0.0.0.1	accident	15-16
# ::node	0.0.0.1.0	-	14-15
# ::node	0.0.1	rate	4-5
# ::node	0.1	turn-02	0-1
# ::node	0.1.0	mechanism	5-6
# ::root	0	say-01
# ::edge	accident	domain	it	0.0.0.1	0.0.0	
# ::edge	accident	polarity	-	0.0.0.1	0.0.0.1.0	
# ::edge	after	op1	attain-01	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	argue-01	ARG1	membership	0.0.0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0.0.0	
# ::edge	attain-01	ARG1	conference	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	attain-01	time	level	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	claim-01	ARG0	article	0.0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	claim-01	ARG1	argue-01	0.0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0.0	
# ::edge	conference	mod	article	0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	exchange-01	ARG0	level	0.0.0.0.0.0.1.0	0.0.0.0.0.0.1	
# ::edge	know-01	ARG0	it	0.0	0.0.0	
# ::edge	know-01	ARG1	rate	0.0	0.0.1	
# ::edge	level	mod	minimum	0.0.0.0.0.0.1	0.0.0.0.0.0.1.1	
# ::edge	say-01	ARG1	know-01	0	0.0	
# ::edge	strike-01	ARG1	it	0.0.0.0	0.0.0	
# ::edge	strike-01	time	after	0.0.0.0	0.0.0.0.0	
# ::edge	turn-02	ARG1	say-01	0.1	0	
# ::edge	turn-02	ARG2	mechanism	0.1	0.1.0	
(s2 / say-01 
      :ARG1 (k / know-01 
            :ARG0 (i / it 
                  :ARG1-of (s / strike-01 
                        :time (a4 / after 
                              :op1 (a / attain-01 
                                    :ARG1 (c2 / conference 
                                          :mod (a3 / article 
                                                :ARG0-of (c / claim-01 
                                                      :ARG1 (a2 / argue-01 
                                                            :ARG1 (m2 / membership))))) 
                                    :time (l / level 
                                          :ARG0-of (e / exchange-01) 
                                          :mod (m / minimum))))) 
                  :domain-of (a5 / accident 
                        :polarity (- / -))) 
            :ARG1 (r / rate)) 
      :ARG1-of (t / turn-02 
            :ARG2 (m3 / mechanism)))

# ::snt with the game heading into the final quarter wantage seemed in little danger until the accident to bunce
# ::tok with the game heading into the final quarter wantage seemed in little danger until the accident to bunce
# ::alignments 15-16|0.0.1.0 13-14|0.0.1 12-13|0 11-12|0.1 9-10|0.0 6-7|0.0.0.1 3-4|0.0.0 2-3|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:07.997
# ::node	0	danger	12-13
# ::node	0.0	seem-01	9-10
# ::node	0.0.0	head-02	3-4
# ::node	0.0.0.0	game	2-3
# ::node	0.0.0.1	final	6-7
# ::node	0.0.1	until	13-14
# ::node	0.0.1.0	accident	15-16
# ::node	0.1	little	11-12
# ::root	0	danger
# ::edge	danger	mod	little	0	0.1	
# ::edge	head-02	ARG1	game	0.0.0	0.0.0.0	
# ::edge	head-02	manner	final	0.0.0	0.0.0.1	
# ::edge	head-02	manner	seem-01	0.0.0	0.0	
# ::edge	seem-01	ARG1	danger	0.0	0	
# ::edge	seem-01	time	until	0.0	0.0.1	
# ::edge	until	op1	accident	0.0.1	0.0.1.0	
(d / danger 
      :ARG1-of (s / seem-01 
            :manner-of (h / head-02 
                  :ARG1 (g / game) 
                  :manner (f / final)) 
            :time (u / until 
                  :op1 (a / accident))) 
      :mod (l / little))

# ::snt the accident happened outside the howard street home of 25yearold helen harvey who said this accident is what everyone around here has been predicting for weeks since these tubs were installed by the city council
# ::tok the accident happened outside the howard street home of 25yearold helen harvey who said this accident is what everyone around here has been predicting for weeks since these tubs were installed by the city council
# ::alignments 34-35|0.1.2.0.1 33-34|0.1.2.0.1.0 30-31|0.1.2.0 26-27|0.1.2 25-26|0.1.2.0.0.0+0.1.2.0.0 23-24|0.1 20-21|0.1.0.0.0 19-20|0.1.0.0 18-19|0.1.0 15-16|0.0 14-15|0.0.0 13-14|0 7-8|0.1.1.1.0 6-7|0.1.1.1.0.0 3-4|0.1.1.1 2-3|0.1.1 1-2|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:08.523
# ::node	0	say-01	13-14
# ::node	0.0	accident	15-16
# ::node	0.0.0	this	14-15
# ::node	0.1	predict-01	23-24
# ::node	0.1.0	everyone	18-19
# ::node	0.1.0.0	around	19-20
# ::node	0.1.0.0.0	here	20-21
# ::node	0.1.1	happen-01	2-3
# ::node	0.1.1.0	accident	1-2
# ::node	0.1.1.1	outside	3-4
# ::node	0.1.1.1.0	home	7-8
# ::node	0.1.1.1.0.0	street	6-7
# ::node	0.1.2	since	26-27
# ::node	0.1.2.0	install-01	30-31
# ::node	0.1.2.0.0	temporal-quantity	25-26
# ::node	0.1.2.0.0.0	week	25-26
# ::node	0.1.2.0.1	council	34-35
# ::node	0.1.2.0.1.0	city	33-34
# ::root	0	say-01
# ::edge	accident	mod	this	0.0	0.0.0	
# ::edge	council	mod	city	0.1.2.0.1	0.1.2.0.1.0	
# ::edge	everyone	location	around	0.1.0	0.1.0.0	
# ::edge	happen-01	ARG1	accident	0.1.1	0.1.1.0	
# ::edge	happen-01	location	outside	0.1.1	0.1.1.1	
# ::edge	here	direction	around	0.1.0.0.0	0.1.0.0	
# ::edge	home	mod	street	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	install-01	ARG1	temporal-quantity	0.1.2.0	0.1.2.0.0	
# ::edge	install-01	ARG2	council	0.1.2.0	0.1.2.0.1	
# ::edge	outside	op1	home	0.1.1.1	0.1.1.1.0	
# ::edge	predict-01	ARG0	everyone	0.1	0.1.0	
# ::edge	predict-01	ARG1	say-01	0.1	0	
# ::edge	predict-01	ARG2	happen-01	0.1	0.1.1	
# ::edge	predict-01	time	since	0.1	0.1.2	
# ::edge	say-01	ARG1	accident	0	0.0	
# ::edge	since	op1	install-01	0.1.2	0.1.2.0	
# ::edge	temporal-quantity	unit	week	0.1.2.0.0	0.1.2.0.0.0	
(s2 / say-01 
      :ARG1 (a2 / accident 
            :mod (t2 / this)) 
      :ARG1-of (p / predict-01 
            :ARG0 (e / everyone 
                  :location (a / around 
                        :direction-of (h / here))) 
            :ARG2 (h3 / happen-01 
                  :ARG1 (a3 / accident) 
                  :location (o / outside 
                        :op1 (h2 / home 
                              :mod (s3 / street)))) 
            :time (s / since 
                  :op1 (i / install-01 
                        :ARG1 (t / temporal-quantity 
                              :unit (w / week)) 
                        :ARG2 (c / council 
                              :mod (c2 / city))))))

# ::snt after two years of crashes and accidents culminating most recently in hillsborough victims are still facing inadequate facilities and care
# ::tok after two years of crashes and accidents culminating most recently in hillsborough victims are still facing inadequate facilities and care
# ::alignments 19-20|0.1.0 18-19|0.1 17-18|0.1.0.1.0 16-17|0.1.0.1.1+0.1.0.1 15-16|0 14-15|0.3 12-13|0.4 9-10|0.1.0.0 8-9|0.1.0.0.0 6-7|0.0.1 5-6|0.0 2-3|0.0.0.1+0.0.0 1-2|0.0.0.0 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:09.420
# ::node	0	face-01	15-16
# ::node	0.0	and	5-6
# ::node	0.0.0	temporal-quantity	2-3
# ::node	0.0.0.0	2	1-2
# ::node	0.0.0.1	year	2-3
# ::node	0.0.1	accident	6-7
# ::node	0.1	and	18-19
# ::node	0.1.0	care-01	19-20
# ::node	0.1.0.0	recent	9-10
# ::node	0.1.0.0.0	most	8-9
# ::node	0.1.0.1	adequate	16-17
# ::node	0.1.0.1.0	facility	17-18
# ::node	0.1.0.1.1	-	16-17
# ::node	0.2	after	0-1
# ::node	0.3	still	14-15
# ::node	0.4	victim	12-13
# ::root	0	face-01
# ::edge	adequate	polarity	-	0.1.0.1	0.1.0.1.1	
# ::edge	after	op1	face-01	0.2	0	
# ::edge	and	duration	temporal-quantity	0.0	0.0.0	
# ::edge	and	op1	accident	0.0	0.0.1	
# ::edge	and	op1	care-01	0.1	0.1.0	
# ::edge	care-01	ARG1	recent	0.1.0	0.1.0.0	
# ::edge	care-01	mod	adequate	0.1.0	0.1.0.1	
# ::edge	face-01	ARG0	and	0	0.0	
# ::edge	face-01	ARG1	and	0	0.1	
# ::edge	face-01	time	still	0	0.3	
# ::edge	face-01	time	victim	0	0.4	
# ::edge	facility	mod	adequate	0.1.0.1.0	0.1.0.1	
# ::edge	recent	degree	most	0.1.0.0	0.1.0.0.0	
# ::edge	temporal-quantity	quant	2	0.0.0	0.0.0.0	
# ::edge	temporal-quantity	unit	year	0.0.0	0.0.0.1	
(f2 / face-01 
      :ARG0 (a4 / and 
            :duration (t / temporal-quantity 
                  :quant 2 
                  :unit (y / year)) 
            :op1 (a3 / accident)) 
      :ARG1 (a / and 
            :op1 (c / care-01 
                  :ARG1 (r / recent 
                        :degree (m / most)) 
                  :mod (a2 / adequate 
                        :mod-of (f / facility) 
                        :polarity -))) 
      :op-of (a5 / after) 
      :time (s / still) 
      :time (v / victim))

# ::snt tuesday is crime and accident prevention day with advice from the metropolitan police and the royal society for the prevention of accidents
# ::tok tuesday is crime and accident prevention day with advice from the metropolitan police and the royal society for the prevention of accidents
# ::alignments 21-22|0.3.1.0.1.0 19-20|0.3.1.0.1 16-17|0.3.1.0 15-16|0.3.1.0.0 13-14|0.3.1 12-13|0.3.0 11-12|0.3.0.0 8-9|0.3 6-7|0.2 5-6|0.2.0 4-5|0.1 3-4|0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:09.537
# ::node	0	and	3-4
# ::node	0.0	crime	2-3
# ::node	0.1	accident	4-5
# ::node	0.2	day	6-7
# ::node	0.2.0	prevent-01	5-6
# ::node	0.3	advise-01	8-9
# ::node	0.3.0	police	12-13
# ::node	0.3.0.0	metropolitan	11-12
# ::node	0.3.1	and	13-14
# ::node	0.3.1.0	society	16-17
# ::node	0.3.1.0.0	royal	15-16
# ::node	0.3.1.0.1	prevent-01	19-20
# ::node	0.3.1.0.1.0	accident	21-22
# ::root	0	and
# ::edge	advise-01	ARG0	police	0.3	0.3.0	
# ::edge	and	op1	advise-01	0.3.1	0.3	
# ::edge	and	op1	crime	0	0.0	
# ::edge	and	op2	accident	0	0.1	
# ::edge	and	op2	society	0.3.1	0.3.1.0	
# ::edge	and	op3	day	0	0.2	
# ::edge	and	op4	advise-01	0	0.3	
# ::edge	police	mod	metropolitan	0.3.0	0.3.0.0	
# ::edge	prevent-01	ARG1	accident	0.3.1.0.1	0.3.1.0.1.0	
# ::edge	prevent-01	time	day	0.2.0	0.2	
# ::edge	prevent-01	time	society	0.3.1.0.1	0.3.1.0	
# ::edge	society	mod	royal	0.3.1.0	0.3.1.0.0	
(a5 / and 
      :op1 (c / crime) 
      :op2 (a4 / accident) 
      :op3 (d / day 
            :time-of (p3 / prevent-01)) 
      :op4 (a3 / advise-01 
            :ARG0 (p2 / police 
                  :mod (m / metropolitan)) 
            :op-of (a2 / and 
                  :op1 (s / society 
                        :mod (r / royal) 
                        :time-of (p / prevent-01 
                              :ARG1 (a / accident))))))

# ::snt the dutchman barring accidents must surely take the spotted vest
# ::tok the dutchman barring accidents must surely take the spotted vest
# ::alignments 9-10|0.2.0 8-9|0.2 5-6|0.0 3-4|0.1 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:09.566
# ::node	0	bar-01	2-3
# ::node	0.0	sure	5-6
# ::node	0.1	accident	3-4
# ::node	0.2	spot-01	8-9
# ::node	0.2.0	vest	9-10
# ::root	0	bar-01
# ::edge	bar-01	ARG0	sure	0	0.0	
# ::edge	bar-01	ARG1	accident	0	0.1	
# ::edge	bar-01	ARG2	spot-01	0	0.2	
# ::edge	spot-01	ARG1	vest	0.2	0.2.0	
(b / bar-01 
      :ARG0 (s2 / sure) 
      :ARG1 (a / accident) 
      :ARG2 (s / spot-01 
            :ARG1 (v / vest)))

# ::snt as the mortgage payment and related insurance premiums will  constitute a major part of your monthly outgoings the bristol  and west provides incomesure a special sort of insurance to  protect your ability to maintain these payments in the case of  unemployment accident or sickness
# ::tok as the mortgage payment and related insurance premiums will constitute a major part of your monthly outgoings the bristol and west provides incomesure a special sort of insurance to protect your ability to maintain these payments in the case of unemployment accident or sickness
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:09.566
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt town mayor mr john brown said he had been told by cherwell district council recreation officers that a skateboard and bmx cycle ramp at drayton comprehensive school banbury had an horrendous accident record
# ::tok town mayor mr john brown said he had been told by cherwell district council recreation officers that a skateboard and bmx cycle ramp at drayton comprehensive school banbury had an horrendous accident record
# ::alignments 32-33|0.2.0 31-32|0.2.0.0 30-31|0.2.0.1 26-27|0.2.0.0.0.0 25-26|0.2.0.0.0 21-22|0.1.0.0.2 19-20|0.2 15-16|0.1.0.0.1+0.1.0.0 13-14|0.1.0.0.0 12-13|0.1.0.0.0.0 9-10|0.1 6-7|0.1.0 5-6|0 4-5|0.0 1-2|0.0.0.1+0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:09.996
# ::node	0	say-01	5-6
# ::node	0.0	brown	4-5
# ::node	0.0.0	have-org-role-91	1-2
# ::node	0.0.0.0	town	0-1
# ::node	0.0.0.1	mayor	1-2
# ::node	0.1	tell-01	9-10
# ::node	0.1.0	he	6-7
# ::node	0.1.0.0	have-org-role-91	15-16
# ::node	0.1.0.0.0	council	13-14
# ::node	0.1.0.0.0.0	district	12-13
# ::node	0.1.0.0.1	officer	15-16
# ::node	0.1.0.0.2	cycle	21-22
# ::node	0.2	and	19-20
# ::node	0.2.0	record	32-33
# ::node	0.2.0.0	accident	31-32
# ::node	0.2.0.0.0	comprehensive	25-26
# ::node	0.2.0.0.0.0	school	26-27
# ::node	0.2.0.1	horrendous	30-31
# ::root	0	say-01
# ::edge	accident	mod	comprehensive	0.2.0.0	0.2.0.0.0	
# ::edge	and	op1	say-01	0.2	0	
# ::edge	and	op2	record	0.2	0.2.0	
# ::edge	council	mod	district	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	have-org-role-91	ARG0	brown	0.0.0	0.0	
# ::edge	have-org-role-91	ARG0	he	0.1.0.0	0.1.0	
# ::edge	have-org-role-91	ARG1	council	0.1.0.0	0.1.0.0.0	
# ::edge	have-org-role-91	ARG1	town	0.0.0	0.0.0.0	
# ::edge	have-org-role-91	ARG2	mayor	0.0.0	0.0.0.1	
# ::edge	have-org-role-91	ARG2	officer	0.1.0.0	0.1.0.0.1	
# ::edge	have-org-role-91	beneficiary	cycle	0.1.0.0	0.1.0.0.2	
# ::edge	record	mod	accident	0.2.0	0.2.0.0	
# ::edge	record	mod	horrendous	0.2.0	0.2.0.1	
# ::edge	say-01	ARG0	brown	0	0.0	
# ::edge	say-01	ARG1	tell-01	0	0.1	
# ::edge	school	mod	comprehensive	0.2.0.0.0.0	0.2.0.0.0	
# ::edge	tell-01	ARG2	he	0.1	0.1.0	
(s2 / say-01 
      :ARG0 (b / brown 
            :ARG0-of (h4 / have-org-role-91 
                  :ARG1 (t2 / town) 
                  :ARG2 (m / mayor))) 
      :ARG1 (t / tell-01 
            :ARG2 (h3 / he 
                  :ARG0-of (h2 / have-org-role-91 
                        :ARG1 (c3 / council 
                              :mod (d / district)) 
                        :ARG2 (o / officer) 
                        :beneficiary (c2 / cycle)))) 
      :op-of (a2 / and 
            :op1 (r / record 
                  :mod (a / accident 
                        :mod (c / comprehensive 
                              :mod-of (s / school))) 
                  :mod (h / horrendous))))

# ::snt and it is no accident that bart is an anagram of brat
# ::tok and it is no accident that bart is an anagram of brat
# ::alignments 4-5|0.0 3-4|0.0.1 1-2|0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:10.006
# ::node	0	and	0-1
# ::node	0.0	accident	4-5
# ::node	0.0.0	it	1-2
# ::node	0.0.1	-	3-4
# ::root	0	and
# ::edge	accident	domain	it	0.0	0.0.0	
# ::edge	accident	polarity	-	0.0	0.0.1	
# ::edge	and	op1	accident	0	0.0	
(a2 / and 
      :op1 (a / accident 
            :domain (i / it) 
            :polarity (- / -)))

# ::snt but while the legislators ponder on the rights and freedoms of the individual is that the right to throw your alsatian out onto the motorway because hes grown too big to handle  we are all left to contemplate statistics like 1000 stray dogs put down daily by the rspca or 58000 road accidents many involving death and serious injury caused by stray dogs
# ::tok but while the legislators ponder on the rights and freedoms of the individual is that the right to throw your alsatian out onto the motorway because hes grown too big to handle we are all left to contemplate statistics like 1000 stray dogs put down daily by the rspca or 58000 road accidents many involving death and serious injury caused by stray dogs
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:10.009
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt   even at a 50mg level a young person was three times more likely to have an accident sir bernard said
# ::tok even at a 50mg level a young person was three times more likely to have an accident sir bernard said
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:10.010
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt   largescale plans for evacuating thousands of people in the event of an accident at nuclear power stations are to be developed by local authorities the advisory committee on safety of nuclear installations disclosed yesterday writes paul brown
# ::tok largescale plans for evacuating thousands of people in the event of an accident at nuclear power stations are to be developed by local authorities the advisory committee on safety of nuclear installations disclosed yesterday writes paul brown
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:10.010
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt an inquest into the deaths of two young people killed in a car accident in south oxfordshire is expected to take place this week
# ::tok an inquest into the deaths of two young people killed in a car accident in south oxfordshire is expected to take place this week
# ::alignments 23-24|0.2 22-23|0.2.0 21-22|0.1 18-19|0 15-16|0.0.1 13-14|0.0 12-13|0.0.0 9-10|0.0.2 7-8|0.0.2.0 6-7|0.3 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:10.075
# ::node	0	expect-01	18-19
# ::node	0.0	accident	13-14
# ::node	0.0.0	car	12-13
# ::node	0.0.1	south	15-16
# ::node	0.0.2	kill-01	9-10
# ::node	0.0.2.0	young	7-8
# ::node	0.1	place	21-22
# ::node	0.1.0	inquest	1-2
# ::node	0.2	week	23-24
# ::node	0.2.0	this	22-23
# ::node	0.3	2	6-7
# ::root	0	expect-01
# ::edge	accident	location	car	0.0	0.0.0	
# ::edge	accident	location	south	0.0	0.0.1	
# ::edge	expect-01	ARG0	accident	0	0.0	
# ::edge	expect-01	ARG1	place	0	0.1	
# ::edge	expect-01	time	2	0	0.3	
# ::edge	expect-01	time	week	0	0.2	
# ::edge	kill-01	ARG1	young	0.0.2	0.0.2.0	
# ::edge	kill-01	location	accident	0.0.2	0.0	
# ::edge	place	poss	inquest	0.1	0.1.0	
# ::edge	week	mod	this	0.2	0.2.0	
(e / expect-01 
      :ARG0 (a / accident 
            :location (c / car) 
            :location (s / south) 
            :location-of (k / kill-01 
                  :ARG1 (y / young))) 
      :ARG1 (p / place 
            :poss (i / inquest)) 
      :time (w / week 
            :mod (t / this)) 
      :time 2)

# ::snt the long residence time even means that shortlived radioactive substances such as those released by the chernobyl accident will be largely harmless by the time they emerge from an aquifer
# ::tok the long residence time even means that shortlived radioactive substances such as those released by the chernobyl accident will be largely harmless by the time they emerge from an aquifer
# ::alignments 26-27|0.1.2.0 25-26|0.1.2.0.0 24-25|0.1.2 21-22|0.1 20-21|0.1.0 17-18|0.1.1.0.0 13-14|0.1.1.0.0.0 10-11|0.1.1.1 9-10|0.1.1 8-9|0.1.1.0 5-6|0 3-4|0.0 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:10.188
# ::node	0	mean-01	5-6
# ::node	0.0	time	3-4
# ::node	0.0.0	reside-01	2-3
# ::node	0.1	harmless	21-22
# ::node	0.1.0	large	20-21
# ::node	0.1.1	substance	9-10
# ::node	0.1.1.0	radioactive	8-9
# ::node	0.1.1.0.0	accident	17-18
# ::node	0.1.1.0.0.0	release-01	13-14
# ::node	0.1.1.1	such	10-11
# ::node	0.1.2	time	24-25
# ::node	0.1.2.0	emerge-01	26-27
# ::node	0.1.2.0.0	they	25-26
# ::root	0	mean-01
# ::edge	accident	part	radioactive	0.1.1.0.0	0.1.1.0	
# ::edge	emerge-01	ARG0	they	0.1.2.0	0.1.2.0.0	
# ::edge	emerge-01	ARG1	time	0.1.2.0	0.1.2	
# ::edge	harmless	degree	large	0.1	0.1.0	
# ::edge	harmless	domain	substance	0.1	0.1.1	
# ::edge	harmless	time	time	0.1	0.1.2	
# ::edge	mean-01	ARG0	time	0	0.0	
# ::edge	mean-01	ARG1	harmless	0	0.1	
# ::edge	release-01	ARG0	accident	0.1.1.0.0.0	0.1.1.0.0	
# ::edge	substance	mod	radioactive	0.1.1	0.1.1.0	
# ::edge	such	mod	substance	0.1.1.1	0.1.1	
# ::edge	time	purpose	reside-01	0.0	0.0.0	
(m / mean-01 
      :ARG0 (t3 / time 
            :purpose (r3 / reside-01)) 
      :ARG1 (h / harmless 
            :degree (l / large) 
            :domain (s2 / substance 
                  :mod (r2 / radioactive 
                        :part-of (a / accident 
                              :ARG0-of (r / release-01))) 
                  :mod-of (s / such)) 
            :time (t2 / time 
                  :ARG1-of (e / emerge-01 
                        :ARG0 (t / they)))))

# ::snt craig horton was drilling boreholes for oxfordshire county council at alkerton near banbury when the accident happened on march 15
# ::tok craig horton was drilling boreholes for oxfordshire county council at alkerton near banbury when the accident happened on march 15
# ::alignments 19-20|0.1 18-19|0.2.1.0+0.2.1 16-17|0.2 15-16|0.2.0 11-12|0.0 8-9|0.0.0.0 7-8|0.0.0 3-4|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:10.262
# ::node	0	drill-01	3-4
# ::node	0.0	near	11-12
# ::node	0.0.0	county	7-8
# ::node	0.0.0.0	council	8-9
# ::node	0.1	15	19-20
# ::node	0.2	happen-01	16-17
# ::node	0.2.0	accident	15-16
# ::node	0.2.1	date-entity	18-19
# ::node	0.2.1.0	3	18-19
# ::root	0	drill-01
# ::edge	council	mod	county	0.0.0.0	0.0.0	
# ::edge	county	location	near	0.0.0	0.0	
# ::edge	date-entity	month	3	0.2.1	0.2.1.0	
# ::edge	drill-01	ARG0	near	0	0.0	
# ::edge	drill-01	ARG1	15	0	0.1	
# ::edge	drill-01	purpose	happen-01	0	0.2	
# ::edge	happen-01	ARG1	accident	0.2	0.2.0	
# ::edge	happen-01	time	date-entity	0.2	0.2.1	
(d2 / drill-01 
      :ARG0 (n / near 
            :location-of (c2 / county 
                  :mod-of (c / council))) 
      :ARG1 15 
      :purpose (h / happen-01 
            :ARG1 (a / accident) 
            :time (d / date-entity 
                  :month 3)))

# ::snt after traffic accidents caused by widespread fog in britain an expert said this week if you can see the lights of the vehicle in front youre driving too close to it
# ::tok after traffic accidents caused by widespread fog in britain an expert said this week if you can see the lights of the vehicle in front youre driving too close to it
# ::alignments 30-31|0.1.1.0 27-28|0.1.0.1.0 26-27|0.1.0.1 24-25|0.2 22-23|0.1.0.0.0.0 19-20|0.1.0.0.0 17-18|0.1.0.0 16-17|0.1.0.0.1 15-16|0.1.0 13-14|0.1.2 12-13|0.1.2.0 11-12|0.1 10-11|0.1.1 8-9|0.1.2.1.0.0+0.1.2.1.0+0.1.2.1 5-6|0.1.0.1.1 3-4|0 2-3|0.0 1-2|0.0.0 0-1|0.3 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:10.726
# ::node	0	cause-01	3-4
# ::node	0.0	accident	2-3
# ::node	0.0.0	traffic	1-2
# ::node	0.1	say-01	11-12
# ::node	0.1.0	you	15-16
# ::node	0.1.0.0	see-01	17-18
# ::node	0.1.0.0.0	light	19-20
# ::node	0.1.0.0.0.0	vehicle	22-23
# ::node	0.1.0.0.1	possible	16-17
# ::node	0.1.0.1	drive-01	26-27
# ::node	0.1.0.1.0	too	27-28
# ::node	0.1.0.1.1	wide	5-6
# ::node	0.1.1	expert-41	10-11
# ::node	0.1.1.0	it	30-31
# ::node	0.1.2	week	13-14
# ::node	0.1.2.0	this	12-13
# ::node	0.1.2.1	country	8-9
# ::node	0.1.2.1.0	name	8-9
# ::node	0.1.2.1.0.0	"Britain"	8-9
# ::node	0.2	front	24-25
# ::node	0.3	after	0-1
# ::root	0	cause-01
# ::edge	accident	mod	traffic	0.0	0.0.0	
# ::edge	after	op1	cause-01	0.3	0	
# ::edge	cause-01	ARG0	accident	0	0.0	
# ::edge	cause-01	ARG1	say-01	0	0.1	
# ::edge	country	name	name	0.1.2.1	0.1.2.1.0	
# ::edge	drive-01	ARG0	you	0.1.0.1	0.1.0	
# ::edge	drive-01	manner	too	0.1.0.1	0.1.0.1.0	
# ::edge	expert-41	ARG1	it	0.1.1	0.1.1.0	
# ::edge	front	op1	cause-01	0.2	0	
# ::edge	light	location	vehicle	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	name	op1	"Britain"	0.1.2.1.0	0.1.2.1.0.0	
# ::edge	possible	domain	see-01	0.1.0.0.1	0.1.0.0	
# ::edge	say-01	ARG0	you	0.1	0.1.0	
# ::edge	say-01	ARG1	expert-41	0.1	0.1.1	
# ::edge	say-01	time	week	0.1	0.1.2	
# ::edge	see-01	ARG0	you	0.1.0.0	0.1.0	
# ::edge	see-01	ARG1	light	0.1.0.0	0.1.0.0.0	
# ::edge	week	mod	this	0.1.2	0.1.2.0	
# ::edge	week	name	country	0.1.2	0.1.2.1	
# ::edge	wide	op1	drive-01	0.1.0.1.1	0.1.0.1	
(c2 / cause-01 
      :ARG0 (a / accident 
            :mod (t3 / traffic)) 
      :ARG1 (s2 / say-01 
            :ARG0 (y / you 
                  :ARG0-of (s / see-01 
                        :ARG1 (l / light 
                              :location (v / vehicle)) 
                        :domain-of (p / possible)) 
                  :ARG0-of (d / drive-01 
                        :manner (t / too) 
                        :op-of (w2 / wide))) 
            :ARG1 (e / expert-41 
                  :ARG1 (i / it)) 
            :time (w / week 
                  :mod (t2 / this) 
                  :name (c / country 
                        :name (n / name 
                              :op1 "Britain")))) 
      :op-of (f / front) 
      :op-of (a2 / after))

# ::snt but how could disqualification of all passengers be justified considering that not all drivers would yield to the temptation of conspiring against the insurer and in any event the risk of collusion was not confined to vehicular accidents finally limitations to accidents on the highway or under some guest statutes during a ride could not be related at all to either of the two assumed legislative purposes
# ::tok but how could disqualification of all passengers be justified considering that not all drivers would yield to the temptation of conspiring against the insurer and in any event the risk of collusion was not confined to vehicular accidents finally limitations to accidents on the highway or under some guest statutes during a ride could not be related at all to either of the two assumed legislative purposes
# ::alignments 66-67|0.0.0.0.1.0.2.0.1.0.3.0.0.0 65-66|0.0.0.0.1.0.2.0.1.0.3.0.0 64-65|0.0.0.0.1.0.2.0.1.0.3.0.0.0.0 63-64|0.0.0.0.1.0.2.0.1.0.3.0.0.0.1 60-61|0.0.0.0.1.0.2.0.1.0.0 58-59|0.0.0.0.1.0.2.0.1.0.2.0 56-57|0.0.0.0.1.0.2.0.1.0.2 53-54|0.0.0.0.1.0.2.0.1.0.2.2 52-53|0.0.0.0.1.0.2.0.1.0.2.1 48-49|0.0.0.0.1.0.2.0.1.0.3.0.0.0.0.0 47-48|0.0.0.0.1.0.0.0 45-46|0.0.0.0.1.0.2.0.1.0.1 44-45|0.0.0.0.1.0.2.0.1.0.3.0 41-42|0.0.0.0.1.0.2.0.1.0.3 39-40|0.0.0.0.1.0.2.0.1.0 38-39|0.0.0.0.1.0.2.0.1 37-38|0.0.0.0.1.0.2.0.0 36-37|0.0.0.0.1.0.2.0 34-35|0.0.0.0.1.0.2 31-32|0.0.0.0.1.0.0 29-30|0.0.0.0.1.0 27-28|0.0.0.0.1.0.1 26-27|0.0.0.0.1.0.1.0 24-25|0.0.0.0.1 15-16|0.0.0.0 13-14|0.0.0.0.0.0+0.0.0.0.0 12-13|0.0.0.0.0.1 9-10|0.0.0 8-9|0.0 6-7|0.0.1.0 5-6|0.0.1.0.0 3-4|0.0.1 2-3|0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:12.246
# ::node	0	contrast-01	0-1
# ::node	0.0	justify-01	8-9
# ::node	0.0.0	consider-02	9-10
# ::node	0.0.0.0	yield-02	15-16
# ::node	0.0.0.0.0	person	13-14
# ::node	0.0.0.0.0.0	drive-01	13-14
# ::node	0.0.0.0.0.1	all	12-13
# ::node	0.0.0.0.1	and	24-25
# ::node	0.0.0.0.1.0	risk-01	29-30
# ::node	0.0.0.0.1.0.0	collude-01	31-32
# ::node	0.0.0.0.1.0.0.0	some	47-48
# ::node	0.0.0.0.1.0.1	event	27-28
# ::node	0.0.0.0.1.0.1.0	any	26-27
# ::node	0.0.0.0.1.0.2	confine-01	34-35
# ::node	0.0.0.0.1.0.2.0	vehicle	36-37
# ::node	0.0.0.0.1.0.2.0.0	accident	37-38
# ::node	0.0.0.0.1.0.2.0.1	final	38-39
# ::node	0.0.0.0.1.0.2.0.1.0	limit-01	39-40
# ::node	0.0.0.0.1.0.2.0.1.0.0	either	60-61
# ::node	0.0.0.0.1.0.2.0.1.0.1	or	45-46
# ::node	0.0.0.0.1.0.2.0.1.0.2	relate-01	56-57
# ::node	0.0.0.0.1.0.2.0.1.0.2.0	all	58-59
# ::node	0.0.0.0.1.0.2.0.1.0.2.1	ride-01	52-53
# ::node	0.0.0.0.1.0.2.0.1.0.2.2	possible	53-54
# ::node	0.0.0.0.1.0.2.0.1.0.3	accident	41-42
# ::node	0.0.0.0.1.0.2.0.1.0.3.0	highway	44-45
# ::node	0.0.0.0.1.0.2.0.1.0.3.0.0	legislate-01	65-66
# ::node	0.0.0.0.1.0.2.0.1.0.3.0.0.0	purpose	66-67
# ::node	0.0.0.0.1.0.2.0.1.0.3.0.0.0.0	assume-02	64-65
# ::node	0.0.0.0.1.0.2.0.1.0.3.0.0.0.0.0	guest	48-49
# ::node	0.0.0.0.1.0.2.0.1.0.3.0.0.0.1	2	63-64
# ::node	0.0.1	disqualify-01	3-4
# ::node	0.0.1.0	passenger	6-7
# ::node	0.0.1.0.0	all	5-6
# ::node	0.1	possible	2-3
# ::root	0	contrast-01
# ::edge	accident	mod	highway	0.0.0.0.1.0.2.0.1.0.3	0.0.0.0.1.0.2.0.1.0.3.0	
# ::edge	accident	mod	vehicle	0.0.0.0.1.0.2.0.0	0.0.0.0.1.0.2.0	
# ::edge	and	op1	risk-01	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	assume-02	ARG0	guest	0.0.0.0.1.0.2.0.1.0.3.0.0.0.0	0.0.0.0.1.0.2.0.1.0.3.0.0.0.0.0	
# ::edge	assume-02	ARG1	purpose	0.0.0.0.1.0.2.0.1.0.3.0.0.0.0	0.0.0.0.1.0.2.0.1.0.3.0.0.0	
# ::edge	collude-01	ARG0	some	0.0.0.0.1.0.0	0.0.0.0.1.0.0.0	
# ::edge	confine-01	ARG1	risk-01	0.0.0.0.1.0.2	0.0.0.0.1.0	
# ::edge	confine-01	ARG2	vehicle	0.0.0.0.1.0.2	0.0.0.0.1.0.2.0	
# ::edge	consider-02	ARG1	yield-02	0.0.0	0.0.0.0	
# ::edge	contrast-01	ARG1	justify-01	0	0.0	
# ::edge	contrast-01	ARG2	possible	0	0.1	
# ::edge	disqualify-01	ARG2	passenger	0.0.1	0.0.1.0	
# ::edge	drive-01	ARG0	person	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	event	mod	any	0.0.0.0.1.0.1	0.0.0.0.1.0.1.0	
# ::edge	justify-01	ARG1	consider-02	0.0	0.0.0	
# ::edge	justify-01	time	disqualify-01	0.0	0.0.1	
# ::edge	legislate-01	ARG0	purpose	0.0.0.0.1.0.2.0.1.0.3.0.0	0.0.0.0.1.0.2.0.1.0.3.0.0.0	
# ::edge	legislate-01	ARG1	highway	0.0.0.0.1.0.2.0.1.0.3.0.0	0.0.0.0.1.0.2.0.1.0.3.0	
# ::edge	limit-01	ARG0	either	0.0.0.0.1.0.2.0.1.0	0.0.0.0.1.0.2.0.1.0.0	
# ::edge	limit-01	ARG1	or	0.0.0.0.1.0.2.0.1.0	0.0.0.0.1.0.2.0.1.0.1	
# ::edge	limit-01	ARG2	accident	0.0.0.0.1.0.2.0.1.0	0.0.0.0.1.0.2.0.1.0.3	
# ::edge	limit-01	frequency	final	0.0.0.0.1.0.2.0.1.0	0.0.0.0.1.0.2.0.1	
# ::edge	passenger	quant	all	0.0.1.0	0.0.1.0.0	
# ::edge	person	quant	all	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	possible	domain	relate-01	0.0.0.0.1.0.2.0.1.0.2.2	0.0.0.0.1.0.2.0.1.0.2	
# ::edge	purpose	quant	2	0.0.0.0.1.0.2.0.1.0.3.0.0.0	0.0.0.0.1.0.2.0.1.0.3.0.0.0.1	
# ::edge	relate-01	ARG0	all	0.0.0.0.1.0.2.0.1.0.2	0.0.0.0.1.0.2.0.1.0.2.0	
# ::edge	relate-01	ARG1	limit-01	0.0.0.0.1.0.2.0.1.0.2	0.0.0.0.1.0.2.0.1.0	
# ::edge	relate-01	ARG2	ride-01	0.0.0.0.1.0.2.0.1.0.2	0.0.0.0.1.0.2.0.1.0.2.1	
# ::edge	risk-01	ARG0	collude-01	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	risk-01	ARG1	event	0.0.0.0.1.0	0.0.0.0.1.0.1	
# ::edge	vehicle	time	final	0.0.0.0.1.0.2.0	0.0.0.0.1.0.2.0.1	
# ::edge	yield-02	ARG0	person	0.0.0.0	0.0.0.0.0	
# ::edge	yield-02	ARG1	and	0.0.0.0	0.0.0.0.1	
(c4 / contrast-01 
      :ARG1 (j / justify-01 
            :ARG1 (c3 / consider-02 
                  :ARG1 (y / yield-02 
                        :ARG0 (p3 / person 
                              :ARG0-of (d / drive-01) 
                              :quant (a7 / all)) 
                        :ARG1 (a6 / and 
                              :op1 (r3 / risk-01 
                                    :ARG0 (c2 / collude-01 
                                          :ARG0 (s / some)) 
                                    :ARG1 (e2 / event 
                                          :mod (a5 / any)) 
                                    :ARG1-of (c / confine-01 
                                          :ARG2 (v / vehicle 
                                                :mod-of (a4 / accident) 
                                                :time (f / final 
                                                      :frequency-of (l2 / limit-01 
                                                            :ARG0 (e / either) 
                                                            :ARG1 (o / or) 
                                                            :ARG1-of (r / relate-01 
                                                                  :ARG0 (a2 / all) 
                                                                  :ARG2 (r2 / ride-01) 
                                                                  :domain-of (p2 / possible)) 
                                                            :ARG2 (a3 / accident 
                                                                  :mod (h / highway 
                                                                        :ARG1-of (l / legislate-01 
                                                                              :ARG0 (p / purpose 
                                                                                    :ARG1-of (a / assume-02 
                                                                                          :ARG0 (g / guest)) 
                                                                                    :quant 2)))))))))))) 
            :time (d2 / disqualify-01 
                  :ARG2 (p4 / passenger 
                        :quant (a8 / all)))) 
      :ARG2 (p5 / possible))

# ::snt jane does not know where her back pain stems from but says it could have been triggered by a car accident 16 years ago when she was 18
# ::tok jane does not know where her back pain stems from but says it could have been triggered by a car accident 16 years ago when she was 18
# ::alignments 27-28|0.3.1.0.0 25-26|0.1 22-23|0.0.0.0+0.0.0 21-22|0.0 20-21|0.3.1.0.2 19-20|0.3.1.0.2.0 16-17|0.3.1.0 13-14|0.3.1 12-13|0.3.1.0.1 11-12|0.3 10-11|0 7-8|0.3.0 6-7|0.3.0.0 3-4|0.2 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:12.606
# ::node	0	contrast-01	10-11
# ::node	0.0	16	21-22
# ::node	0.0.0	temporal-quantity	22-23
# ::node	0.0.0.0	year	22-23
# ::node	0.1	she	25-26
# ::node	0.2	know-01	3-4
# ::node	0.3	say-01	11-12
# ::node	0.3.0	pain-01	7-8
# ::node	0.3.0.0	back	6-7
# ::node	0.3.1	possible	13-14
# ::node	0.3.1.0	trigger-01	16-17
# ::node	0.3.1.0.0	18	27-28
# ::node	0.3.1.0.1	it	12-13
# ::node	0.3.1.0.2	accident	20-21
# ::node	0.3.1.0.2.0	car	19-20
# ::root	0	contrast-01
# ::edge	accident	location	car	0.3.1.0.2	0.3.1.0.2.0	
# ::edge	contrast-01	ARG0	16	0	0.0	
# ::edge	contrast-01	ARG1	she	0	0.1	
# ::edge	contrast-01	ARG2	say-01	0	0.3	
# ::edge	know-01	ARG1	contrast-01	0.2	0	
# ::edge	pain-01	mod	back	0.3.0	0.3.0.0	
# ::edge	say-01	ARG0	pain-01	0.3	0.3.0	
# ::edge	say-01	ARG1	possible	0.3	0.3.1	
# ::edge	temporal-quantity	quant	16	0.0.0	0.0	
# ::edge	temporal-quantity	unit	year	0.0.0	0.0.0.0	
# ::edge	trigger-01	ARG0	18	0.3.1.0	0.3.1.0.0	
# ::edge	trigger-01	ARG1	it	0.3.1.0	0.3.1.0.1	
# ::edge	trigger-01	ARG2	accident	0.3.1.0	0.3.1.0.2	
# ::edge	trigger-01	mod	possible	0.3.1.0	0.3.1	
(c2 / contrast-01 
      :ARG0 (12 / 16 
            :quant-of (t / temporal-quantity 
                  :unit (y / year))) 
      :ARG1 (s / she) 
      :ARG1-of (k / know-01) 
      :ARG2 (s2 / say-01 
            :ARG0 (p2 / pain-01 
                  :mod (b / back)) 
            :ARG1 (p / possible 
                  :mod-of (t2 / trigger-01 
                        :ARG0 18 
                        :ARG1 (i / it) 
                        :ARG2 (a / accident 
                              :location (c / car))))))

# ::snt mr sibcy recorded an accident verdict on brothers nicky five and benjamin dovey six and their halfbrother ryan broome aged three
# ::tok mr sibcy recorded an accident verdict on brothers nicky five and benjamin dovey six and their halfbrother ryan broome aged three
# ::alignments 20-21|0.0.0.1 19-20|0.0.0 14-15|0.0 13-14|0.0.1.0 10-11|0 9-10|0.0.0.0 7-8|0.0.0.0.0.0+0.0.0.0.0 5-6|0.0.1.1 4-5|0.0.1.1.0 2-3|0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:12.749
# ::node	0	and	10-11
# ::node	0.0	and	14-15
# ::node	0.0.0	age-01	19-20
# ::node	0.0.0.0	5	9-10
# ::node	0.0.0.0.0	have-rel-role-91	7-8
# ::node	0.0.0.0.0.0	brother	7-8
# ::node	0.0.0.1	3	20-21
# ::node	0.0.1	record-01	2-3
# ::node	0.0.1.0	6	13-14
# ::node	0.0.1.1	verdict	5-6
# ::node	0.0.1.1.0	accident	4-5
# ::root	0	and
(a3 / and 
      :op-of (a2 / and 
            :ARG2-of (a / age-01 
                  :ARG0 (5 / 5 
                        :ARG1-of (h / have-rel-role-91 
                              :ARG2 (b / brother))) 
                  :ARG1 3) 
            :ARG3-of (r / record-01 
                  :ARG0 6 
                  :ARG1 (v / verdict 
                        :mod (a4 / accident)))))

# ::snt through his obfuscation and denials she pictured him as he had been with the telephone in his hand making the anonymous call that had sparked the rumour that wilsons death had been murder and not accident the rumour that had set her on the trail that had convinced her of wilsons murder and nearly brought about her own
# ::tok through his obfuscation and denials she pictured him as he had been with the telephone in his hand making the anonymous call that had sparked the rumour that wilsons death had been murder and not accident the rumour that had set her on the trail that had convinced her of wilsons murder and nearly brought about her own
# ::alignments 53-54|0.1.0.0.1 52-53|0.1.0.1.0.1 51-52|0.1.0.1 47-48|0.1.0.1.0 44-45|0.1.0.1.0.0 37-38|0.1.0.0.0 35-36|0.1.0.0.2.0 33-34|0.1.0.0.2 32-33|0.1.0.0 29-30|0.1.0 26-27|0.1 24-25|0 20-21|0.0.0.0.0.0.0 17-18|0.0 14-15|0.0.0.0.0.0 9-10|0.0.0 6-7|0.0.0.0 5-6|0.0.0.0.0 3-4|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:13.588
# ::node	0	spark-01	24-25
# ::node	0.0	hand	17-18
# ::node	0.0.0	he	9-10
# ::node	0.0.0.0	picture-01	6-7
# ::node	0.0.0.0.0	she	5-6
# ::node	0.0.0.0.0.0	telephone-01	14-15
# ::node	0.0.0.0.0.0.0	anonymous	20-21
# ::node	0.0.0.0.1	and	3-4
# ::node	0.1	rumour	26-27
# ::node	0.1.0	die-01	29-30
# ::node	0.1.0.0	murder-01	32-33
# ::node	0.1.0.0.0	rumour	37-38
# ::node	0.1.0.0.1	nearly	53-54
# ::node	0.1.0.0.2	and	33-34
# ::node	0.1.0.0.2.0	accident	35-36
# ::node	0.1.0.1	murder-01	51-52
# ::node	0.1.0.1.0	convince-01	47-48
# ::node	0.1.0.1.0.0	trail	44-45
# ::node	0.1.0.1.0.1	and	52-53
# ::root	0	spark-01
# ::edge	and	op1	convince-01	0.1.0.1.0.1	0.1.0.1.0	
# ::edge	and	op1	murder-01	0.1.0.0.2	0.1.0.0	
# ::edge	and	op1	picture-01	0.0.0.0.1	0.0.0.0	
# ::edge	and	op2	accident	0.1.0.0.2	0.1.0.0.2.0	
# ::edge	convince-01	ARG1	trail	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	convince-01	ARG2	murder-01	0.1.0.1.0	0.1.0.1	
# ::edge	die-01	ARG0	rumour	0.1.0	0.1	
# ::edge	die-01	ARG1	murder-01	0.1.0	0.1.0.0	
# ::edge	hand	poss	he	0.0	0.0.0	
# ::edge	murder-01	ARG0	rumour	0.1.0.0	0.1.0.0.0	
# ::edge	murder-01	ARG1	die-01	0.1.0.1	0.1.0	
# ::edge	murder-01	ARG1	nearly	0.1.0.0	0.1.0.0.1	
# ::edge	picture-01	ARG0	she	0.0.0.0	0.0.0.0.0	
# ::edge	picture-01	ARG1	he	0.0.0.0	0.0.0	
# ::edge	spark-01	ARG0	hand	0	0.0	
# ::edge	spark-01	ARG1	rumour	0	0.1	
# ::edge	telephone-01	ARG0	she	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	telephone-01	ARG1	anonymous	0.0.0.0.0.0	0.0.0.0.0.0.0	
(s / spark-01 
      :ARG0 (h / hand 
            :poss (h2 / he 
                  :ARG1-of (p / picture-01 
                        :ARG0 (s2 / she 
                              :ARG0-of (t2 / telephone-01 
                                    :ARG1 (a4 / anonymous))) 
                        :op-of (a5 / and)))) 
      :ARG1 (r2 / rumour 
            :ARG0-of (d / die-01 
                  :ARG1 (m2 / murder-01 
                        :ARG0 (r / rumour) 
                        :ARG1 (n / nearly) 
                        :op-of (a3 / and 
                              :op1 (a2 / accident))) 
                  :ARG1-of (m / murder-01 
                        :ARG2-of (c / convince-01 
                              :ARG1 (t / trail) 
                              :op-of (a / and))))))

# ::snt more than 30 appliances have been reequipped with the latest cutting and spreading gear for releasing trapped accident victims
# ::tok more than 30 appliances have been reequipped with the latest cutting and spreading gear for releasing trapped accident victims
# ::alignments 18-19|0.0.0 17-18|0.0.0.0 16-17|0.1.2 15-16|0.0 13-14|0.1.1 12-13|0.1 11-12|0 9-10|0.1.0.0+0.1.0 2-3|0.1.2.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:13.678
# ::node	0	and	11-12
# ::node	0.0	release-01	15-16
# ::node	0.0.0	victim	18-19
# ::node	0.0.0.0	accident	17-18
# ::node	0.1	spread-03	12-13
# ::node	0.1.0	late	9-10
# ::node	0.1.0.0	most	9-10
# ::node	0.1.1	gear	13-14
# ::node	0.1.2	trap-01	16-17
# ::node	0.1.2.0	30	2-3
# ::root	0	and
# ::edge	and	op1	spread-03	0	0.1	
# ::edge	late	degree	most	0.1.0	0.1.0.0	
# ::edge	release-01	ARG0	and	0.0	0	
# ::edge	release-01	ARG1	victim	0.0	0.0.0	
# ::edge	spread-03	ARG0	late	0.1	0.1.0	
# ::edge	spread-03	ARG1	gear	0.1	0.1.1	
# ::edge	trap-01	ARG0	30	0.1.2	0.1.2.0	
# ::edge	trap-01	ARG1	spread-03	0.1.2	0.1	
# ::edge	victim	mod	accident	0.0.0	0.0.0.0	
(a2 / and 
      :ARG0-of (r / release-01 
            :ARG1 (v / victim 
                  :mod (a / accident))) 
      :op1 (s / spread-03 
            :ARG0 (l / late 
                  :degree (m / most)) 
            :ARG1 (g / gear) 
            :ARG1-of (t / trap-01 
                  :ARG0 30)))

# ::snt for californians it is linked to a decision fifteen years earlier when justice traynorfo id125 had lent his rising authority to the view that instead of resorting to the stratagem of res ipsa loquitur it was time to declare outright that public policy demanded that the manufacturer stand behind his product and guarantee its safety in the interest of accident prevention and consumer protection
# ::tok for californians it is linked to a decision fifteen years earlier when justice traynorfo id125 had lent his rising authority to the view that instead of resorting to the stratagem of res ipsa loquitur it was time to declare outright that public policy demanded that the manufacturer stand behind his product and guarantee its safety in the interest of accident prevention and consumer protection
# ::alignments 63-64|0.2.1.1.0.0 62-63|0.2.1.1.0.0.0 61-62|0.2.1.1.0 60-61|0.2.1.1.1 59-60|0.2.1.1.1.0 57-58|0.2.1.1 54-55|0.2.1.0 52-53|0.2.1 51-52|0.2 50-51|0.1.0 48-49|0.1.0.0 46-47|0.1 43-44|0 42-43|0.0 41-42|0.0.0 39-40|0.2.0.2 38-39|0.2.0 36-37|0.2.0.1 34-35|0.2.0.0 26-27|0.2.0.0.0 24-25|0.2.0.0.0.1 19-20|0.2.0.0.0.0.1.0 18-19|0.2.0.0.0.0.1.0.0 12-13|0.2.0.0.0.0.1.0.0.0 10-11|0.2.0.0.0.0.1.1.0 9-10|0.2.0.0.0.0.1.1.1+0.2.0.0.0.0.1.1 7-8|0.2.0.0.0.0.1 4-5|0.2.0.0.0.0 2-3|0.2.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:15.261
# ::node	0	demand-01	43-44
# ::node	0.0	policy	42-43
# ::node	0.0.0	public	41-42
# ::node	0.1	manufacture-01	46-47
# ::node	0.1.0	product	50-51
# ::node	0.1.0.0	behind	48-49
# ::node	0.2	and	51-52
# ::node	0.2.0	declare-02	38-39
# ::node	0.2.0.0	it	34-35
# ::node	0.2.0.0.0	resort-01	26-27
# ::node	0.2.0.0.0.0	link-01	4-5
# ::node	0.2.0.0.0.0.0	it	2-3
# ::node	0.2.0.0.0.0.1	decide-01	7-8
# ::node	0.2.0.0.0.0.1.0	authority	19-20
# ::node	0.2.0.0.0.0.1.0.0	rise-01	18-19
# ::node	0.2.0.0.0.0.1.0.0.0	justice	12-13
# ::node	0.2.0.0.0.0.1.1	temporal-quantity	9-10
# ::node	0.2.0.0.0.0.1.1.0	early	10-11
# ::node	0.2.0.0.0.0.1.1.1	year	9-10
# ::node	0.2.0.0.0.1	instead	24-25
# ::node	0.2.0.1	time	36-37
# ::node	0.2.0.2	outright	39-40
# ::node	0.2.1	guarantee-01	52-53
# ::node	0.2.1.0	safe-41	54-55
# ::node	0.2.1.1	interest-01	57-58
# ::node	0.2.1.1.0	and	61-62
# ::node	0.2.1.1.0.0	protect-01	63-64
# ::node	0.2.1.1.0.0.0	consume-01	62-63
# ::node	0.2.1.1.1	prevent-01	60-61
# ::node	0.2.1.1.1.0	accident	59-60
# ::root	0	demand-01
# ::edge	and	op1	declare-02	0.2	0.2.0	
# ::edge	and	op1	protect-01	0.2.1.1.0	0.2.1.1.0.0	
# ::edge	and	op2	demand-01	0.2	0	
# ::edge	and	op3	guarantee-01	0.2	0.2.1	
# ::edge	behind	op1	product	0.1.0.0	0.1.0	
# ::edge	decide-01	ARG0	authority	0.2.0.0.0.0.1	0.2.0.0.0.0.1.0	
# ::edge	decide-01	ARG1	temporal-quantity	0.2.0.0.0.0.1	0.2.0.0.0.0.1.1	
# ::edge	declare-02	ARG0	it	0.2.0	0.2.0.0	
# ::edge	declare-02	instrument	time	0.2.0	0.2.0.1	
# ::edge	declare-02	manner	outright	0.2.0	0.2.0.2	
# ::edge	demand-01	ARG1	policy	0	0.0	
# ::edge	demand-01	ARG2	manufacture-01	0	0.1	
# ::edge	early	quant	temporal-quantity	0.2.0.0.0.0.1.1.0	0.2.0.0.0.0.1.1	
# ::edge	guarantee-01	ARG1	safe-41	0.2.1	0.2.1.0	
# ::edge	guarantee-01	purpose	interest-01	0.2.1	0.2.1.1	
# ::edge	interest-01	ARG1	and	0.2.1.1	0.2.1.1.0	
# ::edge	interest-01	ARG2	prevent-01	0.2.1.1	0.2.1.1.1	
# ::edge	link-01	ARG0	it	0.2.0.0.0.0	0.2.0.0.0.0.0	
# ::edge	link-01	ARG1	decide-01	0.2.0.0.0.0	0.2.0.0.0.0.1	
# ::edge	policy	mod	public	0.0	0.0.0	
# ::edge	prevent-01	ARG1	accident	0.2.1.1.1	0.2.1.1.1.0	
# ::edge	product	poss	manufacture-01	0.1.0	0.1	
# ::edge	protect-01	ARG1	consume-01	0.2.1.1.0.0	0.2.1.1.0.0.0	
# ::edge	resort-01	ARG0	it	0.2.0.0.0	0.2.0.0	
# ::edge	resort-01	ARG1	link-01	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	resort-01	mod	instead	0.2.0.0.0	0.2.0.0.0.1	
# ::edge	rise-01	ARG0	justice	0.2.0.0.0.0.1.0.0	0.2.0.0.0.0.1.0.0.0	
# ::edge	rise-01	ARG1	authority	0.2.0.0.0.0.1.0.0	0.2.0.0.0.0.1.0	
# ::edge	temporal-quantity	unit	year	0.2.0.0.0.0.1.1	0.2.0.0.0.0.1.1.1	
(d / demand-01 
      :ARG1 (p4 / policy 
            :mod (p5 / public)) 
      :ARG2 (m / manufacture-01 
            :poss-of (p3 / product 
                  :op-of (b / behind))) 
      :op-of (a3 / and 
            :op1 (d2 / declare-02 
                  :ARG0 (i2 / it 
                        :ARG0-of (r / resort-01 
                              :ARG1 (l / link-01 
                                    :ARG0 (i4 / it) 
                                    :ARG1 (d3 / decide-01 
                                          :ARG0 (a4 / authority 
                                                :ARG1-of (r2 / rise-01 
                                                      :ARG0 (j / justice))) 
                                          :ARG1 (t2 / temporal-quantity 
                                                :quant-of (e / early) 
                                                :unit (y / year)))) 
                              :mod (i3 / instead))) 
                  :instrument (t / time) 
                  :manner (o / outright)) 
            :op2 (g / guarantee-01 
                  :ARG1 (s / safe-41) 
                  :purpose (i / interest-01 
                        :ARG1 (a / and 
                              :op1 (p / protect-01 
                                    :ARG1 (c / consume-01))) 
                        :ARG2 (p2 / prevent-01 
                              :ARG1 (a2 / accident))))))

# ::snt you can also insure your payments in case youre unable to work  due to sickness accident or redundancy
# ::tok you can also insure your payments in case youre unable to work due to sickness accident or redundancy
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:15.262
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:70)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:51)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:89)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:19)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:200)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt the county surveyor john peverelcooper this week spotlighted the accident toll on oxfordshire roads, he took the unprecedented step of writing to all county councillors to express his disappointment over the latest road accident figures, there has been a 45 per cent increase in slight injury accidents especially among drivers and adult cyclists he said
# ::tok the county surveyor john peverelcooper this week spotlighted the accident toll on oxfordshire roads , he took the unprecedented step of writing to all county councillors to express his disappointment over the latest road accident figures , there has been a 45 per cent increase in slight injury accidents especially among drivers and adult cyclists he said
# ::alignments 56-57|0 55-56|0.0 53-54|0.1 52-53|0.2 51-52|0.2.3.1.0+0.2.3.1 50-51|0.2.3 49-50|0.2.3.0 48-49|0.2.0.2 47-48|0.2.0 46-47|0.2.0.0 44-45|0.2.0.2.0 43-44|0.2.0.2.0.1.0+0.2.0.2.0.1 41-42|0.2.0.1 35-36|0.2.2.1.1.1 34-35|0.2.2.1.1 33-34|0.2.2.1.1.0 32-33|0.2.2.1.1.2.0+0.2.2.1.1.2 29-30|0.2.2.1 27-28|0.2.2 24-25|0.2.2.1.0 23-24|0.2.2.1.0.1 21-22|0.2.2.1.0.0 18-19|0.2.0.2.0.0.0+0.2.0.2.0.0 15-16|0.2.2.1.0.0.0 13-14|0.2.1.1 10-11|0.2.1 9-10|0.2.1.0 6-7|0.2.2.2.0 5-6|0.2.2.2 2-3|0.2.2.0.0+0.2.2.0 1-2|0.2.2.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:19.122
# ::node	0	say-01	56-57
# ::node	0.0	he	55-56
# ::node	0.1	adult	53-54
# ::node	0.2	and	52-53
# ::node	0.2.0	injure-01	47-48
# ::node	0.2.0.0	slight	46-47
# ::node	0.2.0.1	45	41-42
# ::node	0.2.0.2	accident	48-49
# ::node	0.2.0.2.0	increase-01	44-45
# ::node	0.2.0.2.0.0	precedent	18-19
# ::node	0.2.0.2.0.0.0	-	18-19
# ::node	0.2.0.2.0.1	monetary-quantity	43-44
# ::node	0.2.0.2.0.1.0	cent	43-44
# ::node	0.2.1	toll	10-11
# ::node	0.2.1.0	accident	9-10
# ::node	0.2.1.1	road	13-14
# ::node	0.2.2	express-01	27-28
# ::node	0.2.2.0	person	2-3
# ::node	0.2.2.0.0	survey-01	2-3
# ::node	0.2.2.0.0.0	county	1-2
# ::node	0.2.2.1	disappoint-01	29-30
# ::node	0.2.2.1.0	county	24-25
# ::node	0.2.2.1.0.0	write-01	21-22
# ::node	0.2.2.1.0.0.0	he	15-16
# ::node	0.2.2.1.0.1	all	23-24
# ::node	0.2.2.1.1	accident	34-35
# ::node	0.2.2.1.1.0	road	33-34
# ::node	0.2.2.1.1.1	figure	35-36
# ::node	0.2.2.1.1.2	late	32-33
# ::node	0.2.2.1.1.2.0	most	32-33
# ::node	0.2.2.2	this	5-6
# ::node	0.2.2.2.0	week	6-7
# ::node	0.2.3	among	50-51
# ::node	0.2.3.0	especially	49-50
# ::node	0.2.3.1	person	51-52
# ::node	0.2.3.1.0	drive-01	51-52
# ::root	0	say-01
# ::edge	accident	location	road	0.2.2.1.1	0.2.2.1.1.0	
# ::edge	accident	mod	injure-01	0.2.0.2	0.2.0	
# ::edge	accident	time	late	0.2.2.1.1	0.2.2.1.1.2	
# ::edge	among	mod	especially	0.2.3	0.2.3.0	
# ::edge	among	op1	person	0.2.3	0.2.3.1	
# ::edge	and	op1	toll	0.2	0.2.1	
# ::edge	and	op2	express-01	0.2	0.2.2	
# ::edge	and	op3	among	0.2	0.2.3	
# ::edge	and	op4	say-01	0.2	0	
# ::edge	county	mod	all	0.2.2.1.0	0.2.2.1.0.1	
# ::edge	disappoint-01	ARG0	county	0.2.2.1	0.2.2.1.0	
# ::edge	disappoint-01	ARG1	accident	0.2.2.1	0.2.2.1.1	
# ::edge	drive-01	ARG0	person	0.2.3.1.0	0.2.3.1	
# ::edge	express-01	ARG0	person	0.2.2	0.2.2.0	
# ::edge	express-01	ARG1	disappoint-01	0.2.2	0.2.2.1	
# ::edge	figure	manner	accident	0.2.2.1.1.1	0.2.2.1.1	
# ::edge	increase-01	ARG0	precedent	0.2.0.2.0	0.2.0.2.0.0	
# ::edge	increase-01	ARG1	accident	0.2.0.2.0	0.2.0.2	
# ::edge	increase-01	ARG3	monetary-quantity	0.2.0.2.0	0.2.0.2.0.1	
# ::edge	injure-01	ARG0	slight	0.2.0	0.2.0.0	
# ::edge	injure-01	ARG1	45	0.2.0	0.2.0.1	
# ::edge	injure-01	ARG2	and	0.2.0	0.2	
# ::edge	late	degree	most	0.2.2.1.1.2	0.2.2.1.1.2.0	
# ::edge	monetary-quantity	unit	cent	0.2.0.2.0.1	0.2.0.2.0.1.0	
# ::edge	precedent	polarity	-	0.2.0.2.0.0	0.2.0.2.0.0.0	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	adult	0	0.1	
# ::edge	survey-01	ARG0	person	0.2.2.0.0	0.2.2.0	
# ::edge	survey-01	ARG1	county	0.2.2.0.0	0.2.2.0.0.0	
# ::edge	this	op1	express-01	0.2.2.2	0.2.2	
# ::edge	toll	mod	accident	0.2.1	0.2.1.0	
# ::edge	toll	topic	road	0.2.1	0.2.1.1	
# ::edge	week	mod	this	0.2.2.2.0	0.2.2.2	
# ::edge	write-01	ARG0	he	0.2.2.1.0.0	0.2.2.1.0.0.0	
# ::edge	write-01	ARG2	county	0.2.2.1.0.0	0.2.2.1.0	
(s / say-01 
      :ARG0 (h / he) 
      :ARG1 (a / adult) 
      :op-of (a2 / and 
            :ARG2-of (i / injure-01 
                  :ARG0 (s2 / slight) 
                  :ARG1 45 
                  :mod-of (a4 / accident 
                        :ARG1-of (i2 / increase-01 
                              :ARG0 (p2 / precedent 
                                    :polarity -) 
                              :ARG3 (m / monetary-quantity 
                                    :unit (c / cent))))) 
            :op1 (t / toll 
                  :mod (a7 / accident) 
                  :topic (r2 / road)) 
            :op2 (e2 / express-01 
                  :ARG0 (p3 / person 
                        :ARG0-of (s3 / survey-01 
                              :ARG1 (c3 / county))) 
                  :ARG1 (d2 / disappoint-01 
                        :ARG0 (c2 / county 
                              :ARG2-of (w / write-01 
                                    :ARG0 (h2 / he)) 
                              :mod (a6 / all)) 
                        :ARG1 (a5 / accident 
                              :location (r / road) 
                              :manner-of (f / figure) 
                              :time (l / late 
                                    :degree (m2 / most)))) 
                  :op-of (t2 / this 
                        :mod-of (w2 / week))) 
            :op3 (a3 / among 
                  :mod (e / especially) 
                  :op1 (p / person 
                        :ARG0-of (d / drive-01)))))

# ::snt mr gardiner said it could not be proved that the sierra hit the kerb before the accident but it seemed likely that when the car swerved he overcorrected
# ::tok mr gardiner said it could not be proved that the sierra hit the kerb before the accident but it seemed likely that when the car swerved he overcorrected
# ::alignments 26-27|0.0 24-25|0.1.0.1.0.0 20-21|0.1.0.1.1.1 19-20|0.1.0.1.1 18-19|0.1.0.1.1.0 17-18|0.1.0.1 16-17|0.1.0.1.0.1.0 14-15|0.1.0.1.0.1 11-12|0.1.0.1.0 7-8|0.1.0 4-5|0.1 3-4|0.1.0.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:19.334
# ::node	0	say-01	2-3
# ::node	0.0	he	26-27
# ::node	0.1	possible	4-5
# ::node	0.1.0	prove-01	7-8
# ::node	0.1.0.0	it	3-4
# ::node	0.1.0.1	contrast-01	17-18
# ::node	0.1.0.1.0	hit-01	11-12
# ::node	0.1.0.1.0.0	car	24-25
# ::node	0.1.0.1.0.1	before	14-15
# ::node	0.1.0.1.0.1.0	accident	16-17
# ::node	0.1.0.1.1	seem-01	19-20
# ::node	0.1.0.1.1.0	it	18-19
# ::node	0.1.0.1.1.1	likely	20-21
# ::root	0	say-01
# ::edge	before	op1	accident	0.1.0.1.0.1	0.1.0.1.0.1.0	
# ::edge	contrast-01	ARG1	hit-01	0.1.0.1	0.1.0.1.0	
# ::edge	contrast-01	ARG2	seem-01	0.1.0.1	0.1.0.1.1	
# ::edge	hit-01	ARG1	car	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	hit-01	time	before	0.1.0.1.0	0.1.0.1.0.1	
# ::edge	likely	domain	seem-01	0.1.0.1.1.1	0.1.0.1.1	
# ::edge	possible	domain	prove-01	0.1	0.1.0	
# ::edge	prove-01	ARG0	it	0.1.0	0.1.0.0	
# ::edge	prove-01	ARG1	contrast-01	0.1.0	0.1.0.1	
# ::edge	say-01	ARG0	he	0	0.0	
# ::edge	say-01	ARG1	possible	0	0.1	
# ::edge	seem-01	ARG1	it	0.1.0.1.1	0.1.0.1.1.0	
(s2 / say-01 
      :ARG0 (h / he) 
      :ARG1 (p2 / possible 
            :domain (p / prove-01 
                  :ARG0 (i2 / it) 
                  :ARG1 (c2 / contrast-01 
                        :ARG1 (h2 / hit-01 
                              :ARG1 (c / car) 
                              :time (b / before 
                                    :op1 (a / accident))) 
                        :ARG2 (s / seem-01 
                              :ARG1 (i / it) 
                              :domain-of (l / likely))))))

# ::snt anthony warren now 15 of hampton middlesex was in a coma for six weeks after the accident in nearby hanworth road in november 1983
# ::tok anthony warren now 15 of hampton middlesex was in a coma for six weeks after the accident in nearby hanworth road in november 1983
# ::alignments 22-24|0.0.0.0.0.2+0.0.0.0.0.0+0.0.0.0.0 20-21|0.0.0.0 18-19|0.1 16-17|0.0.0 14-15|0.0 13-14|0.0.0.0.1.1+0.0.0.0.1 12-13|0.0.0.0.1.0 10-11|0 3-4|0.0.0.0.0.1.0 2-3|0.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:19.399
# ::node	0	coma	10-11
# ::node	0.0	after	14-15
# ::node	0.0.0	accident	16-17
# ::node	0.0.0.0	road	20-21
# ::node	0.0.0.0.0	date-entity	22-24
# ::node	0.0.0.0.0.0	11	22-24
# ::node	0.0.0.0.0.1	now	2-3
# ::node	0.0.0.0.0.1.0	15	3-4
# ::node	0.0.0.0.0.2	1983	22-24
# ::node	0.0.0.0.1	temporal-quantity	13-14
# ::node	0.0.0.0.1.0	6	12-13
# ::node	0.0.0.0.1.1	week	13-14
# ::node	0.1	nearby	18-19
# ::root	0	coma
# ::edge	accident	poss	road	0.0.0	0.0.0.0	
# ::edge	after	op1	accident	0.0	0.0.0	
# ::edge	coma	location	after	0	0.0	
# ::edge	coma	mod	nearby	0	0.1	
# ::edge	date-entity	month	11	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	date-entity	poss	now	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	date-entity	year	1983	0.0.0.0.0	0.0.0.0.0.2	
# ::edge	now	op1	15	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	road	time	date-entity	0.0.0.0	0.0.0.0.0	
# ::edge	temporal-quantity	quant	6	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	temporal-quantity	topic	road	0.0.0.0.1	0.0.0.0	
# ::edge	temporal-quantity	unit	week	0.0.0.0.1	0.0.0.0.1.1	
(c / coma 
      :location (a2 / after 
            :op1 (a / accident 
                  :poss (r / road 
                        :time (d / date-entity 
                              :month 11 
                              :poss (n2 / now 
                                    :op1 15) 
                              :year 1983) 
                        :topic-of (t / temporal-quantity 
                              :quant 6 
                              :unit (w / week))))) 
      :mod (n / nearby))

# ::snt pc andrew lukes 40 of spencer avenue yarnton was riding to work at the thames valley police headquarters in kidlington a week ago when the accident happened
# ::tok pc andrew lukes 40 of spencer avenue yarnton was riding to work at the thames valley police headquarters in kidlington a week ago when the accident happened
# ::alignments 26-27|0 25-26|0.1 21-22|0.2.0 17-18|0.2.1 16-17|0.2.1.0 14-16|0.2.1.0.0.0.0+0.2.1.0.0.0.1+0.2.1.0.0.0+0.2.1.0.0 9-10|0.2 3-4|0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:19.534
# ::node	0	happen-01	26-27
# ::node	0.0	40	3-4
# ::node	0.1	accident	25-26
# ::node	0.2	ride-01	9-10
# ::node	0.2.0	week	21-22
# ::node	0.2.1	headquarters	17-18
# ::node	0.2.1.0	police	16-17
# ::node	0.2.1.0.0	country	14-16
# ::node	0.2.1.0.0.0	name	14-16
# ::node	0.2.1.0.0.0.0	"valley"	14-16
# ::node	0.2.1.0.0.0.1	"thames"	14-16
# ::root	0	happen-01
# ::edge	country	name	name	0.2.1.0.0	0.2.1.0.0.0	
# ::edge	happen-01	ARG0	40	0	0.0	
# ::edge	happen-01	ARG1	accident	0	0.1	
# ::edge	headquarters	mod	police	0.2.1	0.2.1.0	
# ::edge	name	op1	"valley"	0.2.1.0.0.0	0.2.1.0.0.0.0	
# ::edge	name	op2	"thames"	0.2.1.0.0.0	0.2.1.0.0.0.1	
# ::edge	police	poss	country	0.2.1.0	0.2.1.0.0	
# ::edge	ride-01	ARG0	week	0.2	0.2.0	
# ::edge	ride-01	ARG1	headquarters	0.2	0.2.1	
# ::edge	ride-01	condition	happen-01	0.2	0	
(h / happen-01 
      :ARG0 40 
      :ARG1 (a / accident) 
      :condition-of (r / ride-01 
            :ARG0 (w / week) 
            :ARG1 (h2 / headquarters 
                  :mod (p / police 
                        :poss (c / country 
                              :name (n / name 
                                    :op1 "valley" 
                                    :op2 "thames"))))))

# ::snt or perhaps worse your bull has broken into your neighbours heifers or your lambs are on the road where they could cause an accident
# ::tok or perhaps worse your bull has broken into your neighbours heifers or your lambs are on the road where they could cause an accident
# ::alignments 23-24|0.1 21-22|0 20-21|0.3 19-20|0.0 17-18|0.2 13-14|0.0.0.1.0.0 11-12|0.0.0.1.0.2 9-10|0.0.0.1.0.1 6-7|0.0.0.1.0 4-5|0.0.0.1 2-3|0.0.0 1-2|0.0.0.0 0-1|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:19.784
# ::node	0	cause-01	21-22
# ::node	0.0	they	19-20
# ::node	0.0.0	bad	2-3
# ::node	0.0.0.0	perhaps	1-2
# ::node	0.0.0.0.0	or	0-1
# ::node	0.0.0.1	bull	4-5
# ::node	0.0.0.1.0	break-01	6-7
# ::node	0.0.0.1.0.0	lamb	13-14
# ::node	0.0.0.1.0.1	neighbour	9-10
# ::node	0.0.0.1.0.2	or	11-12
# ::node	0.1	accident	23-24
# ::node	0.2	road	17-18
# ::node	0.3	possible	20-21
# ::root	0	cause-01
# ::edge	bad	mod	perhaps	0.0.0	0.0.0.0	
# ::edge	break-01	ARG0	bull	0.0.0.1.0	0.0.0.1	
# ::edge	break-01	ARG1	lamb	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	break-01	medium	neighbour	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	bull	mod	bad	0.0.0.1	0.0.0	
# ::edge	cause-01	ARG0	they	0	0.0	
# ::edge	cause-01	ARG1	accident	0	0.1	
# ::edge	cause-01	location	road	0	0.2	
# ::edge	cause-01	mod	possible	0	0.3	
# ::edge	or	op1	break-01	0.0.0.1.0.2	0.0.0.1.0	
# ::edge	or	op1	perhaps	0.0.0.0.0	0.0.0.0	
# ::edge	they	mod	bad	0.0	0.0.0	
(c / cause-01 
      :ARG0 (t / they 
            :mod (b3 / bad 
                  :mod (p2 / perhaps 
                        :op-of (o2 / or)) 
                  :mod-of (b2 / bull 
                        :ARG0-of (b / break-01 
                              :ARG1 (l / lamb) 
                              :medium (n / neighbour) 
                              :op-of (o / or))))) 
      :ARG1 (a / accident) 
      :location (r / road) 
      :mod (p / possible))

# ::snt the a four one three at dunton turn between winslow and whitchurch has now cleared no major problems there any more going aylesbury bound after the earlier accident
# ::tok the a four one three at dunton turn between winslow and whitchurch has now cleared no major problems there any more going aylesbury bound after the earlier accident
# ::alignments 27-28|0.2.0 26-27|0.2.0.0 24-25|0.2 19-20|0.0.1 17-18|0.0.0 16-17|0.0.0.0 15-16|0.0.2 14-15|0.0 13-14|0.0.3 10-11|0 8-9|0.1 4-5|0.2.0.0.0 2-3|0.2.1 ::annotator JAMR dev v0.3 ::date 2015-05-11T07:07:19.929
# ::node	0	and	10-11
# ::node	0.0	clear-01	14-15
# ::node	0.0.0	problem	17-18
# ::node	0.0.0.0	major	16-17
# ::node	0.0.1	any	19-20
# ::node	0.0.2	-	15-16
# ::node	0.0.3	now	13-14
# ::node	0.1	between	8-9
# ::node	0.2	after	24-25
# ::node	0.2.0	accident	27-28
# ::node	0.2.0.0	early	26-27
# ::node	0.2.0.0.0	3	4-5
# ::node	0.2.1	4	2-3
# ::root	0	and
(a4 / and 
      :ARG0-of (c / clear-01 
            :ARG1 (p / problem 
                  :mod (m / major)) 
            :ARG2 (a3 / any) 
            :polarity (- / -) 
            :time (n / now)) 
      :op-of (b / between) 
      :op-of (a2 / after 
            :op1 (a / accident 
                  :mod (e / early 
                        :poss 3)) 
            :poss 4))

